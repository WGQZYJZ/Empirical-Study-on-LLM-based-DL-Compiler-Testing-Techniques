==========mod==========
#[version = "0.0.5"]
def @func_6664() -> Tensor[(8, 12, 8), float32] {
  %0 = @func_6385() /* ty=(Tensor[(4, 2, 2), float32], Tensor[(4, 2, 2), uint16], Tensor[(8, 12, 8), float32], int16, Tensor[(490), int16]) */;
  %0.2
}

def @func_3762(%var_3754: Tensor[(1, 168), uint32]) -> (Tensor[(4, 2, 2), uint16], Tensor[(14, 2), float64], Tensor[(1, 168), uint32]) {
  %1 = @func_2412() /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %2 = cast(%var_3754, dtype="uint32") /* ty=Tensor[(1, 168), uint32] */;
  %3 = reshape(%2, newshape=[168]) /* ty=Tensor[(168), uint32] */;
  %4 = @func_1990(%3) /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(14, 2), float64], Tensor[(12, 7, 2), bool], Tensor[(168), uint32], Tensor[(7, 2, 2), int16]) */;
  %5 = %1.0;
  %6 = %4.1;
  (%5, %6, %var_3754)
}

def @func_6430() -> Tensor[(1, 2, 2), float32] {
  %7 = @func_1929() /* ty=(Tensor[(1, 2, 2), float32],) */;
  %7.0
}

def @func_2342() -> (Tensor[(4, 2, 2), uint16], Tensor[(6, 15, 6), float64], Tensor[(6, 15, 6), float32]) {
  %8 = @func_314() /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %9 = cast(meta[relay.Constant][0] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
  %10 = reshape(%9, newshape=[6, 15, 6]) /* ty=Tensor[(6, 15, 6), float32] */;
  %11 = @func_941(%10) /* ty=(Tensor[(6, 15, 6), uint8], Tensor[(1, 2, 2), float32]) */;
  %12 = %11.0;
  %13 = cast(%12, dtype="float64") /* ty=Tensor[(6, 15, 6), float64] */;
  %14 = sqrt(%13) /* ty=Tensor[(6, 15, 6), float64] */;
  %15 = cast(%14, dtype="float64") /* ty=Tensor[(6, 15, 6), float64] */;
  %16 = cast(meta[relay.Constant][0] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
  %17 = shape_of(%14, dtype="int32") /* ty=Tensor[(3), int32] */;
  %18 = cast(%14, dtype="float32") /* ty=Tensor[(6, 15, 6), float32] */;
  %19 = dyn.reshape(%16, %17, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %20 = floor_divide(%18, %19) /* ty=Tensor[(6, 15, 6), float32] */;
  %21 = cast(%20, dtype="float32") /* ty=Tensor[(6, 15, 6), float32] */;
  %22 = %8.0;
  %23 = log2(%15) /* ty=Tensor[(6, 15, 6), float64] */;
  %24 = asin(%21) /* ty=Tensor[(6, 15, 6), float32] */;
  (%22, %23, %24)
}

def @func_3963() -> (Tensor[(4, 2, 2), float64],) {
  %25 = @func_2571() /* ty=Tensor[(4, 2, 2), float64] */;
  (%25,)
}

def @func_1387(%var_1382: Tensor[(7, 2, 2), float64]) -> (Tensor[(7, 2, 2), uint8],) {
  %26 = @func_629() /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(1, 2, 2), float64]) */;
  %27 = %26.1;
  %28 = cast(%27, dtype="uint8") /* ty=Tensor[(1, 2, 2), uint8] */;
  %29 = cast(%var_1382, dtype="uint8") /* ty=Tensor[(7, 2, 2), uint8] */;
  %30 = maximum(%28, %29) /* ty=Tensor[(7, 2, 2), uint8] */;
  (%30,)
}

def @func_6048(%var_6014: Tensor[(14, 2, 2), float32], %var_6037: Tensor[(216), int8]) -> (Tensor[(14, 2, 2), uint16], Tensor[(4, 2, 2), uint16], Tensor[(?, 2, 2), float32], Tensor[(9, 12, 2), int8], Tensor[(216), int8], Tensor[(14, 2, 2), float64]) {
  %31 = @func_4120() /* ty=(Tensor[(1, 2, 2), float32],) */;
  %32 = %31.0;
  %33 = cast(%32, dtype="float32") /* ty=Tensor[(1, 2, 2), float32] */;
  %34 = exp(%33) /* ty=Tensor[(1, 2, 2), float32] */;
  %35 = cast(%34, dtype="uint16") /* ty=Tensor[(1, 2, 2), uint16] */;
  %36 = cast(%var_6014, dtype="uint16") /* ty=Tensor[(14, 2, 2), uint16] */;
  %37 = cast(%34, dtype="float32") /* ty=Tensor[(1, 2, 2), float32] */;
  %38 = shape_of(%32, dtype="int32") /* ty=Tensor[(3), int32] */;
  %39 = cast(%32, dtype="float32") /* ty=Tensor[(1, 2, 2), float32] */;
  %40 = dyn.reshape(%37, %38, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %41 = cast(%var_6037, dtype="int8") /* ty=Tensor[(216), int8] */;
  %42 = cast(%var_6037, dtype="int8") /* ty=Tensor[(216), int8] */;
  %43 = reshape(%41, newshape=[9, 12, 2]) /* ty=Tensor[(9, 12, 2), int8] */;
  %44 = reshape(%42, newshape=[9, 12, 2]) /* ty=Tensor[(9, 12, 2), int8] */;
  %45 = @func_5395(%43, %44) /* ty=(Tensor[(9, 12, 2), int8],) */;
  %46 = cast(%34, dtype="float64") /* ty=Tensor[(1, 2, 2), float64] */;
  %47 = cast(%var_6014, dtype="float64") /* ty=Tensor[(14, 2, 2), float64] */;
  %48 = subtract(%35, %36) /* ty=Tensor[(14, 2, 2), uint16] */;
  %49 = @func_2419() /* ty=Tensor[(4, 2, 2), uint16] */;
  %50 = multiply(%39, %40) /* ty=Tensor[(?, 2, 2), float32] */;
  %51 = %45.0;
  %52 = floor_divide(%46, %47) /* ty=Tensor[(14, 2, 2), float64] */;
  (%48, %49, %50, %51, %var_6037, %52)
}

def @func_7385(%var_7314: Tensor[(1050), float32], %var_7351: Tensor[(182), uint64]) -> (Tensor[(4, 2, 2), float32], Tensor[(1050), bool], Tensor[(8, 12, 8), float32], Tensor[(182), uint64], Tensor[(12, 5, 9), int32], Tensor[(540), int32], Tensor[(1, 2, 2), float32], Tensor[(4, 2, 2), float64]) {
  %53 = @func_5530() /* ty=(Tensor[(4, 2, 2), float32],) */;
  %54 = cast(%var_7314, dtype="float32") /* ty=Tensor[(1050), float32] */;
  %55 = reshape(%54, newshape=[15, 7, 10]) /* ty=Tensor[(15, 7, 10), float32] */;
  %56 = @func_1708(%55) /* ty=(Tensor[(15, 7, 10), float32], Tensor[(10, 11, 1), float64], Tensor[(110), float64]) */;
  %57 = %56.0;
  %58 = cast(%57, dtype="bool") /* ty=Tensor[(15, 7, 10), bool] */;
  %59 = shape_of(%var_7314, dtype="int32") /* ty=Tensor[(1), int32] */;
  %60 = cast(%var_7314, dtype="bool") /* ty=Tensor[(1050), bool] */;
  %61 = dyn.reshape(%58, %59, newshape=[]) /* ty=Tensor[(?), bool] */;
  %62 = cast(meta[relay.Constant][1] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %63 = cast(%var_7351, dtype="uint64") /* ty=Tensor[(182), uint64] */;
  %64 = reshape(%62, newshape=[]) /* ty=uint64 */;
  %65 = reshape(%63, newshape=[13, 1, 14]) /* ty=Tensor[(13, 1, 14), uint64] */;
  %66 = @func_5597(%64, %65) /* ty=(Tensor[(13, 1, 14), uint64], Tensor[(8, 12, 8), float32], Tensor[(1, 2, 2), float32]) */;
  %67 = cast(meta[relay.Constant][2] /* ty=Tensor[(540), int32] */, dtype="int32") /* ty=Tensor[(540), int32] */;
  %68 = cast(meta[relay.Constant][2] /* ty=Tensor[(540), int32] */, dtype="int32") /* ty=Tensor[(540), int32] */;
  %69 = reshape(%67, newshape=[12, 5, 9]) /* ty=Tensor[(12, 5, 9), int32] */;
  %70 = reshape(%68, newshape=[12, 5, 9]) /* ty=Tensor[(12, 5, 9), int32] */;
  %71 = @func_6131() /* ty=Tensor[(1, 2, 2), float32] */;
  %72 = cast(%71, dtype="float32") /* ty=Tensor[(1, 2, 2), float32] */;
  %73 = cast(meta[relay.Constant][1] /* ty=uint64 */, dtype="float32") /* ty=float32 */;
  %74 = @func_4783() /* ty=(Tensor[(4, 2, 2), float64],) */;
  %75 = %53.0;
  %76 = equal(%60, %61) /* ty=Tensor[(1050), bool] */;
  %77 = %66.1;
  %78 = @func_4064(%69, %70) /* ty=Tensor[(12, 5, 9), int32] */;
  %79 = floor_mod(%72, %73) /* ty=Tensor[(1, 2, 2), float32] */;
  %80 = %74.0;
  (%75, %76, %77, %var_7351, %78, meta[relay.Constant][2] /* ty=Tensor[(540), int32] */, %79, %80)
}

def @func_4157(%var_4143: Tensor[(16, 10, 4), float32]) -> (Tensor[(16, 10, 4), float64],) {
  %81 = cast(meta[relay.Constant][3] /* ty=Tensor[(16, 1, 4), float32] */, dtype="float32") /* ty=Tensor[(16, 1, 4), float32] */;
  %82 = acos(%81) /* ty=Tensor[(16, 1, 4), float32] */;
  %83 = cast(%82, dtype="float64") /* ty=Tensor[(16, 1, 4), float64] */;
  %84 = cast(%var_4143, dtype="float64") /* ty=Tensor[(16, 10, 4), float64] */;
  %85 = multiply(%83, %84) /* ty=Tensor[(16, 10, 4), float64] */;
  (%85,)
}

def @func_3644() -> Tensor[(6, 15, 6), float32] {
  %86 = @func_2379() /* ty=(Tensor[(6, 15, 6), float32],) */;
  %86.0
}

def @func_4373() -> Tensor[(1, 2, 2), float32] {
  @func_210() /* ty=Tensor[(1, 2, 2), float32] */
}

def @func_5615(%var_5609: Tensor[(7, 2, 16), uint64], %var_5610: Tensor[(7, 2, 16), uint64]) -> (Tensor[(7, 2, 16), bool],) {
  %87 = cast(%var_5610, dtype="bool") /* ty=Tensor[(7, 2, 16), bool] */;
  %88 = shape_of(%var_5609, dtype="int32") /* ty=Tensor[(3), int32] */;
  %89 = cast(%var_5609, dtype="bool") /* ty=Tensor[(7, 2, 16), bool] */;
  %90 = dyn.reshape(%87, %88, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %91 = equal(%89, %90) /* ty=Tensor[(7, 2, 16), bool] */;
  (%91,)
}

def @func_2931() -> Tensor[(4, 2, 2), uint16] {
  %92 = @func_314() /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %92.0
}

def @func_4760(%var_4753: Tensor[(2184), float32]) -> (Tensor[(2, 15, 15), bool], Tensor[(1, 2, 2), float64], Tensor[(1, 16), uint16], Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), bool], Tensor[(14, 12, 13), float32], Tensor[(2184), float32], Tensor[(4, 2, 2), uint16]) {
  %93 = cast(meta[relay.Constant][5] /* ty=Tensor[(2, 15, 15), uint8] */, dtype="bool") /* ty=Tensor[(2, 15, 15), bool] */;
  %94 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(2, 15, 15), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %95 = cast(meta[relay.Constant][4] /* ty=Tensor[(2, 15, 15), uint8] */, dtype="bool") /* ty=Tensor[(2, 15, 15), bool] */;
  %96 = dyn.reshape(%93, %94, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %97 = cast(meta[relay.Constant][6] /* ty=Tensor[(1, 16), uint16] */, dtype="uint16") /* ty=Tensor[(1, 16), uint16] */;
  %98 = reshape(%97, newshape=[4, 2, 2]) /* ty=Tensor[(4, 2, 2), uint16] */;
  %99 = @func_2496(%98) /* ty=(Tensor[(1, 2, 2), float64], Tensor[(4, 2, 2), float32]) */;
  %100 = @func_4227() /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %101 = @func_4587() /* ty=(Tensor[(4, 2, 2), bool], Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16]) */;
  %102 = cast(%var_4753, dtype="float32") /* ty=Tensor[(2184), float32] */;
  %103 = reshape(%102, newshape=[14, 12, 13]) /* ty=Tensor[(14, 12, 13), float32] */;
  %104 = @func_4105() /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %105 = greater_equal(%95, %96) /* ty=Tensor[(2, 15, 15), bool] */;
  %106 = %99.0;
  %107 = %100.0;
  %108 = %101.0;
  %109 = @func_2860(%103) /* ty=Tensor[(14, 12, 13), float32] */;
  %110 = %104.0;
  (%105, %106, meta[relay.Constant][6] /* ty=Tensor[(1, 16), uint16] */, %107, %108, %109, %var_4753, %110)
}

def @func_2598(%var_2591: Tensor[(4, 2, 2), uint16]) -> Tensor[(4, 2, 2), float64] {
  %111 = @func_2412() /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %112 = %111.0;
  %113 = cast(%var_2591, dtype="float64") /* ty=Tensor[(4, 2, 2), float64] */;
  %114 = shape_of(%112, dtype="int32") /* ty=Tensor[(3), int32] */;
  %115 = cast(%112, dtype="float64") /* ty=Tensor[(4, 2, 2), float64] */;
  %116 = dyn.reshape(%113, %114, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  maximum(%115, %116) /* ty=Tensor[(4, 2, 2), float64] */
}

def @func_2630() -> (Tensor[(1, 2, 2), float32],) {
  %117 = @func_782() /* ty=(Tensor[(1, 2, 2), float32], Tensor[(9, 10, 14), bool]) */;
  %118 = %117.0;
  (%118,)
}

def @func_2860(%var_2835: Tensor[(14, 12, 13), float32]) -> Tensor[(14, 12, 13), float32] {
  %119 = cast(meta[relay.Constant][7] /* ty=Tensor[(1, 12, 13), float32] */, dtype="float32") /* ty=Tensor[(1, 12, 13), float32] */;
  %120 = cast(%var_2835, dtype="float32") /* ty=Tensor[(14, 12, 13), float32] */;
  power(%119, %120) /* ty=Tensor[(14, 12, 13), float32] */
}

def @func_4897(%var_4890: Tensor[(768, 1), float32]) -> (Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16], Tensor[(1, 2, 2), float32], Tensor[(8, 12, 8), int16], Tensor[(768, 540), int8]) {
  %121 = @func_4477() /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(8, 12, 8), float32]) */;
  %122 = cast(meta[relay.Constant][8] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
  %123 = reshape(%122, newshape=[6, 15, 6]) /* ty=Tensor[(6, 15, 6), float32] */;
  %124 = @func_941(%123) /* ty=(Tensor[(6, 15, 6), uint8], Tensor[(1, 2, 2), float32]) */;
  %125 = cast(%var_4890, dtype="float32") /* ty=Tensor[(768, 1), float32] */;
  %126 = reshape(%125, newshape=[8, 12, 8]) /* ty=Tensor[(8, 12, 8), float32] */;
  %127 = @func_1836(%126) /* ty=(Tensor[(8, 12, 8), int16],) */;
  %128 = cast(meta[relay.Constant][8] /* ty=Tensor[(540), float32] */, dtype="int8") /* ty=Tensor[(540), int8] */;
  %129 = cast(%var_4890, dtype="int8") /* ty=Tensor[(768, 1), int8] */;
  %130 = %121.0;
  %131 = @func_2419() /* ty=Tensor[(4, 2, 2), uint16] */;
  %132 = %124.1;
  %133 = %127.0;
  %134 = bitwise_or(%128, %129) /* ty=Tensor[(768, 540), int8] */;
  (%130, %131, %132, %133, %134)
}

def @func_1849() -> (Tensor[(4, 2, 2), uint16],) {
  %135 = @func_290() /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %136 = %135.0;
  (%136,)
}

def @func_590() -> Tensor[(4, 2, 2), uint16] {
  %137 = @func_290() /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %137.0
}

def @func_314() -> (Tensor[(4, 2, 2), uint16],) {
  %138 = @func_290() /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %139 = %138.0;
  (%139,)
}

def @func_6131() -> Tensor[(1, 2, 2), float32] {
  %140 = @func_4120() /* ty=(Tensor[(1, 2, 2), float32],) */;
  %140.0
}

def @func_4996() -> (Tensor[(4, 2, 2), uint16],) {
  %141 = @func_4105() /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %142 = %141.0;
  (%142,)
}

def @func_2412() -> (Tensor[(4, 2, 2), uint16],) {
  %143 = @func_1378() /* ty=Tensor[(4, 2, 2), uint16] */;
  (%143,)
}

def @func_7727() -> (Tensor[(4, 2, 2), float32],) {
  %144 = @func_5530() /* ty=(Tensor[(4, 2, 2), float32],) */;
  %145 = %144.0;
  (%145,)
}

def @func_2419() -> Tensor[(4, 2, 2), uint16] {
  %146 = @func_1849() /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %146.0
}

def @func_3534(%var_3530: Tensor[(12, 5, 14), float64]) -> Tensor[(12, 5, 14), float64] {
  %147 = cast(%var_3530, dtype="float64") /* ty=Tensor[(12, 5, 14), float64] */;
  log(%147) /* ty=Tensor[(12, 5, 14), float64] */
}

def @func_4064(%var_4055: Tensor[(12, 5, 9), int32], %var_4056: Tensor[(12, 5, 9), int32]) -> Tensor[(12, 5, 9), int32] {
  %148 = cast(%var_4056, dtype="int32") /* ty=Tensor[(12, 5, 9), int32] */;
  %149 = shape_of(%var_4055, dtype="int32") /* ty=Tensor[(3), int32] */;
  %150 = cast(%var_4055, dtype="int32") /* ty=Tensor[(12, 5, 9), int32] */;
  %151 = dyn.reshape(%148, %149, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  subtract(%150, %151) /* ty=Tensor[(12, 5, 9), int32] */
}

def @func_3521(%var_3488: Tensor[(8, 12, 8), float32]) -> (Tensor[(6, 15, 6), float32], Tensor[(8, 12, 8), bool], Tensor[(4, 2, 2), uint16], Tensor[(1260), bool], Tensor[(1, 2, 2), float32]) {
  %152 = @func_2342() /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(6, 15, 6), float64], Tensor[(6, 15, 6), float32]) */;
  %153 = @func_1327() /* ty=Tensor[(8, 12, 8), float32] */;
  %154 = cast(%var_3488, dtype="bool") /* ty=Tensor[(8, 12, 8), bool] */;
  %155 = shape_of(%153, dtype="int32") /* ty=Tensor[(3), int32] */;
  %156 = cast(%153, dtype="bool") /* ty=Tensor[(8, 12, 8), bool] */;
  %157 = dyn.reshape(%154, %155, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %158 = cast(meta[relay.Constant][9] /* ty=Tensor[(1260), bool] */, dtype="bool") /* ty=Tensor[(1260), bool] */;
  %159 = reshape(%158, newshape=[9, 10, 14]) /* ty=Tensor[(9, 10, 14), bool] */;
  %160 = @func_822(%159) /* ty=(Tensor[(6, 2, 2), int16], Tensor[(9, 10, 14), bool], Tensor[(4, 2, 2), uint16]) */;
  %161 = @func_782() /* ty=(Tensor[(1, 2, 2), float32], Tensor[(9, 10, 14), bool]) */;
  %162 = %152.2;
  %163 = greater_equal(%156, %157) /* ty=Tensor[(8, 12, 8), bool] */;
  %164 = %160.2;
  %165 = %161.0;
  (%162, %163, %164, meta[relay.Constant][9] /* ty=Tensor[(1260), bool] */, %165)
}

def @func_4477() -> (Tensor[(4, 2, 2), uint16], Tensor[(8, 12, 8), float32]) {
  %166 = @func_1636() /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %167 = %166.0;
  %168 = @func_1327() /* ty=Tensor[(8, 12, 8), float32] */;
  (%167, %168)
}

def @func_4258(%var_4249: Tensor[(245, 2), int16]) -> (Tensor[(8, 12, 8), float32], Tensor[(14, 5, 7), int16], int16, Tensor[(245, 2), int16]) {
  %169 = @func_1327() /* ty=Tensor[(8, 12, 8), float32] */;
  %170 = cast(meta[relay.Constant][10] /* ty=Tensor[(8, 12, 8), float32] */, dtype="float32") /* ty=Tensor[(8, 12, 8), float32] */;
  %171 = shape_of(%169, dtype="int32") /* ty=Tensor[(3), int32] */;
  %172 = cast(%169, dtype="float32") /* ty=Tensor[(8, 12, 8), float32] */;
  %173 = dyn.reshape(%170, %171, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %174 = cast(meta[relay.Constant][11] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %175 = cast(%var_4249, dtype="int16") /* ty=Tensor[(245, 2), int16] */;
  %176 = reshape(%174, newshape=[]) /* ty=int16 */;
  %177 = reshape(%175, newshape=[14, 5, 7]) /* ty=Tensor[(14, 5, 7), int16] */;
  %178 = @func_965(%176, %177) /* ty=(Tensor[(14, 5, 7), int16],) */;
  %179 = subtract(%172, %173) /* ty=Tensor[(8, 12, 8), float32] */;
  %180 = %178.0;
  (%179, %180, meta[relay.Constant][11] /* ty=int16 */, %var_4249)
}

def @func_6117(%var_6073: Tensor[(2184), float32]) -> (Tensor[(2184), float32], Tensor[(?, 16), int16]) {
  %181 = cast(%var_6073, dtype="float32") /* ty=Tensor[(2184), float32] */;
  %182 = reshape(%181, newshape=[2184]) /* ty=Tensor[(2184), float32] */;
  %183 = @func_4760(%182) /* ty=(Tensor[(2, 15, 15), bool], Tensor[(1, 2, 2), float64], Tensor[(1, 16), uint16], Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), bool], Tensor[(14, 12, 13), float32], Tensor[(2184), float32], Tensor[(4, 2, 2), uint16]) */;
  %184 = %183.2;
  %185 = @func_2412() /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %186 = %185.0;
  %187 = cast(%186, dtype="int16") /* ty=Tensor[(4, 2, 2), int16] */;
  %188 = shape_of(%184, dtype="int32") /* ty=Tensor[(2), int32] */;
  %189 = cast(%184, dtype="int16") /* ty=Tensor[(1, 16), int16] */;
  %190 = dyn.reshape(%187, %188, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %191 = minimum(%189, %190) /* ty=Tensor[(?, 16), int16] */;
  (%var_6073, %191)
}

def @func_210() -> Tensor[(1, 2, 2), float32] {
  %192 = cast(meta[relay.Constant][12] /* ty=Tensor[(1, 2, 2), float32] */, dtype="float32") /* ty=Tensor[(1, 2, 2), float32] */;
  sinh(%192) /* ty=Tensor[(1, 2, 2), float32] */
}

def @func_7832() -> Tensor[(4, 2, 2), float32] {
  %193 = @func_7727() /* ty=(Tensor[(4, 2, 2), float32],) */;
  %193.0
}

def @func_7206() -> (Tensor[(4, 2, 2), uint16],) {
  %194 = @func_5854() /* ty=(Tensor[(1, 2, 2), float32], Tensor[(6, 2, 2), int16], Tensor[(1, 2, 2), float32], Tensor[(4, 2, 2), uint16], Tensor[(7, 2, 16), bool], Tensor[(224), uint64], Tensor[(?, 2, 2), bool]) */;
  %195 = %194.3;
  (%195,)
}

def @func_7120(%var_7114: Tensor[(11, 2, 2), float32]) -> (Tensor[(11, 2, 2), bool],) {
  %196 = @func_4373() /* ty=Tensor[(1, 2, 2), float32] */;
  %197 = cast(%196, dtype="bool") /* ty=Tensor[(1, 2, 2), bool] */;
  %198 = cast(%var_7114, dtype="bool") /* ty=Tensor[(11, 2, 2), bool] */;
  %199 = greater(%197, %198) /* ty=Tensor[(11, 2, 2), bool] */;
  (%199,)
}

def @func_4319() -> Tensor[(4, 2, 2), uint16] {
  %200 = @func_290() /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %200.0
}

def @func_3563() -> (Tensor[(1, 2, 2), float64], Tensor[(4, 2, 2), uint16]) {
  %201 = @func_2412() /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %202 = @func_3217() /* ty=Tensor[(1, 2, 2), float64] */;
  %203 = %201.0;
  (%202, %203)
}

def @func_3217() -> Tensor[(1, 2, 2), float64] {
  %204 = @func_629() /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(1, 2, 2), float64]) */;
  %204.1
}

def @func_4587() -> (Tensor[(4, 2, 2), bool], Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16]) {
  %205 = @func_3727() /* ty=(Tensor[(4, 2, 2), bool], Tensor[(4, 2, 2), float64]) */;
  %206 = @func_4543() /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16]) */;
  %207 = @func_4227() /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %208 = %205.0;
  %209 = %206.0;
  %210 = %207.0;
  (%208, %209, %210)
}

def @func_1088(%var_1071: Tensor[(4, 2, 2), uint16]) -> (Tensor[(4, 2, 2), uint16],) {
  %211 = @func_314() /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %212 = %211.0;
  %213 = cast(%var_1071, dtype="uint16") /* ty=Tensor[(4, 2, 2), uint16] */;
  %214 = shape_of(%212, dtype="int32") /* ty=Tensor[(3), int32] */;
  %215 = cast(%212, dtype="uint16") /* ty=Tensor[(4, 2, 2), uint16] */;
  %216 = dyn.reshape(%213, %214, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %217 = left_shift(%215, %216) /* ty=Tensor[(4, 2, 2), uint16] */;
  (%217,)
}

def @func_1990(%var_1975: Tensor[(168), uint32]) -> (Tensor[(4, 2, 2), uint16], Tensor[(14, 2), float64], Tensor[(12, 7, 2), bool], Tensor[(168), uint32], Tensor[(7, 2, 2), int16]) {
  %218 = @func_1146() /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %219 = cast(%var_1975, dtype="uint32") /* ty=Tensor[(168), uint32] */;
  %220 = cast(%var_1975, dtype="uint32") /* ty=Tensor[(168), uint32] */;
  %221 = cast(meta[relay.Constant][13] /* ty=Tensor[(14, 2), float64] */, dtype="float64") /* ty=Tensor[(14, 2), float64] */;
  %222 = reshape(%221, newshape=[7, 2, 2]) /* ty=Tensor[(7, 2, 2), float64] */;
  %223 = @func_1387(%222) /* ty=(Tensor[(7, 2, 2), uint8],) */;
  %224 = %223.0;
  %225 = cast(%224, dtype="float64") /* ty=Tensor[(7, 2, 2), float64] */;
  %226 = reshape(%219, newshape=[12, 7, 2]) /* ty=Tensor[(12, 7, 2), uint32] */;
  %227 = reshape(%220, newshape=[12, 7, 2]) /* ty=Tensor[(12, 7, 2), uint32] */;
  %228 = reshape(%225, newshape=[28]) /* ty=Tensor[(28), float64] */;
  %229 = @func_1450(%226, %227, %228) /* ty=(Tensor[(12, 7, 2), bool], Tensor[(7, 2, 2), uint8], Tensor[(28), float64], Tensor[(4, 2, 2), bool], Tensor[(110), float64], Tensor[(490, 1), int16], Tensor[(10, 11, 490), bool]) */;
  %230 = @func_547() /* ty=(Tensor[(1, 2, 2), float32], Tensor[(1, 2, 2), float32]) */;
  %231 = %230.0;
  %232 = cast(%231, dtype="int16") /* ty=Tensor[(1, 2, 2), int16] */;
  %233 = cast(%224, dtype="int16") /* ty=Tensor[(7, 2, 2), int16] */;
  %234 = %218.0;
  %235 = %229.0;
  %236 = minimum(%232, %233) /* ty=Tensor[(7, 2, 2), int16] */;
  (%234, meta[relay.Constant][13] /* ty=Tensor[(14, 2), float64] */, %235, %var_1975, %236)
}

def @func_941(%var_925: Tensor[(6, 15, 6), float32]) -> (Tensor[(6, 15, 6), uint8], Tensor[(1, 2, 2), float32]) {
  %237 = cast(%var_925, dtype="float32") /* ty=Tensor[(6, 15, 6), float32] */;
  %238 = asinh(%237) /* ty=Tensor[(6, 15, 6), float32] */;
  %239 = cast(%var_925, dtype="uint8") /* ty=Tensor[(6, 15, 6), uint8] */;
  %240 = shape_of(%238, dtype="int32") /* ty=Tensor[(3), int32] */;
  %241 = cast(%238, dtype="uint8") /* ty=Tensor[(6, 15, 6), uint8] */;
  %242 = dyn.reshape(%239, %240, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %243 = @func_401() /* ty=(Tensor[(4, 2, 2), bool], Tensor[(1, 2, 2), float32], Tensor[(1, 2, 2), float32]) */;
  %244 = left_shift(%241, %242) /* ty=Tensor[(6, 15, 6), uint8] */;
  %245 = %243.2;
  (%244, %245)
}

def @func_7306() -> (Tensor[(4, 2, 2), uint16], Tensor[(1, 2, 2), float32], Tensor[(7, 2, 16), bool], Tensor[(224), uint64], Tensor[(1, 2, 2), float32]) {
  %246 = cast(meta[relay.Constant][14] /* ty=Tensor[(224), uint64] */, dtype="uint64") /* ty=Tensor[(224), uint64] */;
  %247 = cast(meta[relay.Constant][14] /* ty=Tensor[(224), uint64] */, dtype="uint64") /* ty=Tensor[(224), uint64] */;
  %248 = reshape(%246, newshape=[7, 2, 16]) /* ty=Tensor[(7, 2, 16), uint64] */;
  %249 = reshape(%247, newshape=[7, 2, 16]) /* ty=Tensor[(7, 2, 16), uint64] */;
  %250 = @func_5615(%248, %249) /* ty=(Tensor[(7, 2, 16), bool],) */;
  %251 = @func_547() /* ty=(Tensor[(1, 2, 2), float32], Tensor[(1, 2, 2), float32]) */;
  %252 = @func_4319() /* ty=Tensor[(4, 2, 2), uint16] */;
  %253 = @func_210() /* ty=Tensor[(1, 2, 2), float32] */;
  %254 = %250.0;
  %255 = %251.0;
  (%252, %253, %254, meta[relay.Constant][14] /* ty=Tensor[(224), uint64] */, %255)
}

def @func_1836(%var_1828: Tensor[(8, 12, 8), float32]) -> (Tensor[(8, 12, 8), int16],) {
  %256 = @func_898() /* ty=(Tensor[(8, 12, 8), float32], Tensor[(1, 2, 2), float32], Tensor[(4, 2, 2), uint16]) */;
  %257 = %256.0;
  %258 = cast(%var_1828, dtype="int16") /* ty=Tensor[(8, 12, 8), int16] */;
  %259 = shape_of(%257, dtype="int32") /* ty=Tensor[(3), int32] */;
  %260 = cast(%257, dtype="int16") /* ty=Tensor[(8, 12, 8), int16] */;
  %261 = dyn.reshape(%258, %259, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %262 = minimum(%260, %261) /* ty=Tensor[(8, 12, 8), int16] */;
  (%262,)
}

def @func_7774() -> (Tensor[(4, 2, 2), uint16], Tensor[(12, 5, 14), float64], Tensor[(840), float64], Tensor[(6, 2, 2), int16]) {
  %263 = @func_1849() /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %264 = cast(meta[relay.Constant][15] /* ty=Tensor[(840), float64] */, dtype="float64") /* ty=Tensor[(840), float64] */;
  %265 = reshape(%264, newshape=[12, 5, 14]) /* ty=Tensor[(12, 5, 14), float64] */;
  %266 = @func_475() /* ty=(Tensor[(6, 2, 2), int16],) */;
  %267 = %263.0;
  %268 = @func_3534(%265) /* ty=Tensor[(12, 5, 14), float64] */;
  %269 = %266.0;
  (%267, %268, meta[relay.Constant][15] /* ty=Tensor[(840), float64] */, %269)
}

def @func_3841() -> (Tensor[(4, 2, 2), float32], Tensor[(4, 2, 2), float32], Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16]) {
  %270 = @func_3563() /* ty=(Tensor[(1, 2, 2), float64], Tensor[(4, 2, 2), uint16]) */;
  %271 = %270.1;
  %272 = cast(%271, dtype="float32") /* ty=Tensor[(4, 2, 2), float32] */;
  %273 = @func_437() /* ty=Tensor[(4, 2, 2), uint16] */;
  %274 = cast(%273, dtype="float32") /* ty=Tensor[(4, 2, 2), float32] */;
  %275 = @func_738() /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16]) */;
  %276 = sqrt(%272) /* ty=Tensor[(4, 2, 2), float32] */;
  %277 = acos(%274) /* ty=Tensor[(4, 2, 2), float32] */;
  %278 = @func_2931() /* ty=Tensor[(4, 2, 2), uint16] */;
  %279 = %275.1;
  (%276, %277, %278, %279)
}

def @func_5043() -> (Tensor[(4, 2, 2), uint16],) {
  %280 = @func_1887() /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(1, 2, 2), float32], Tensor[(245, 2), int16]) */;
  %281 = %280.0;
  (%281,)
}

def @func_3407(%var_3383: Tensor[(4, 2, 2), uint16]) -> (Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), bool]) {
  %282 = @func_738() /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16]) */;
  %283 = @func_1636() /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %284 = %283.0;
  %285 = cast(%var_3383, dtype="bool") /* ty=Tensor[(4, 2, 2), bool] */;
  %286 = shape_of(%284, dtype="int32") /* ty=Tensor[(3), int32] */;
  %287 = cast(%284, dtype="bool") /* ty=Tensor[(4, 2, 2), bool] */;
  %288 = dyn.reshape(%285, %286, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %289 = %282.1;
  %290 = logical_or(%287, %288) /* ty=Tensor[(4, 2, 2), bool] */;
  (%289, %290)
}

def @func_5764() -> Tensor[(4, 2, 2), float64] {
  %291 = @func_4783() /* ty=(Tensor[(4, 2, 2), float64],) */;
  %291.0
}

def @func_7080(%var_7002: Tensor[(168), uint32], %var_7004: Tensor[(44), float32], %var_7026: Tensor[(168), uint32]) -> (Tensor[(4, 2, 2), float64], Tensor[(12, 7, 2), bool], Tensor[(28), float64], Tensor[(44), float32], Tensor[(168), bool], Tensor[(12, 5, 14), float64], Tensor[(840), float64], Tensor[(6, 2, 2), int16]) {
  %292 = cast(%var_7002, dtype="uint32") /* ty=Tensor[(168), uint32] */;
  %293 = cast(meta[relay.Constant][16] /* ty=Tensor[(28), float64] */, dtype="float64") /* ty=Tensor[(28), float64] */;
  %294 = cast(%var_7004, dtype="float32") /* ty=Tensor[(44), float32] */;
  %295 = reshape(%292, newshape=[168]) /* ty=Tensor[(168), uint32] */;
  %296 = reshape(%293, newshape=[28]) /* ty=Tensor[(28), float64] */;
  %297 = reshape(%294, newshape=[22, 2]) /* ty=Tensor[(22, 2), float32] */;
  %298 = @func_5354(%295, %296, %297) /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(12, 7, 2), bool], Tensor[(168), uint32], Tensor[(28), float64], Tensor[(11, 2, 2), float64], Tensor[(22, 2), float32]) */;
  %299 = cast(%var_7026, dtype="bool") /* ty=Tensor[(168), bool] */;
  %300 = shape_of(%var_7002, dtype="int32") /* ty=Tensor[(1), int32] */;
  %301 = cast(%var_7002, dtype="bool") /* ty=Tensor[(168), bool] */;
  %302 = dyn.reshape(%299, %300, newshape=[]) /* ty=Tensor[(?), bool] */;
  %303 = cast(meta[relay.Constant][17] /* ty=Tensor[(840), float64] */, dtype="float64") /* ty=Tensor[(840), float64] */;
  %304 = reshape(%303, newshape=[12, 5, 14]) /* ty=Tensor[(12, 5, 14), float64] */;
  %305 = @func_475() /* ty=(Tensor[(6, 2, 2), int16],) */;
  %306 = @func_6457() /* ty=Tensor[(4, 2, 2), float64] */;
  %307 = %298.1;
  %308 = less(%301, %302) /* ty=Tensor[(168), bool] */;
  %309 = @func_3534(%304) /* ty=Tensor[(12, 5, 14), float64] */;
  %310 = %305.0;
  (%306, %307, meta[relay.Constant][16] /* ty=Tensor[(28), float64] */, %var_7004, %308, %309, meta[relay.Constant][17] /* ty=Tensor[(840), float64] */, %310)
}

def @func_738() -> (Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16]) {
  %311 = @func_590() /* ty=Tensor[(4, 2, 2), uint16] */;
  %312 = @func_437() /* ty=Tensor[(4, 2, 2), uint16] */;
  (%311, %312)
}

def @func_7168() -> Tensor[(9, 10, 14), bool] {
  %313 = @func_643() /* ty=(Tensor[(9, 10, 14), bool],) */;
  %313.0
}

def @func_547() -> (Tensor[(1, 2, 2), float32], Tensor[(1, 2, 2), float32]) {
  %314 = @func_401() /* ty=(Tensor[(4, 2, 2), bool], Tensor[(1, 2, 2), float32], Tensor[(1, 2, 2), float32]) */;
  %315 = @func_210() /* ty=Tensor[(1, 2, 2), float32] */;
  %316 = %314.1;
  (%315, %316)
}

def @func_1327() -> Tensor[(8, 12, 8), float32] {
  %317 = @func_898() /* ty=(Tensor[(8, 12, 8), float32], Tensor[(1, 2, 2), float32], Tensor[(4, 2, 2), uint16]) */;
  %317.0
}

def @func_1146() -> (Tensor[(4, 2, 2), uint16],) {
  %318 = @func_590() /* ty=Tensor[(4, 2, 2), uint16] */;
  (%318,)
}

def @func_1359(%var_1349: int16, %var_1350: Tensor[(490), int16]) -> (Tensor[(1, 2, 2), float32], Tensor[(8, 12, 8), float32], Tensor[(14, 5, 7), int16], int16, Tensor[(490), int16], Tensor[(4, 2, 2), uint16]) {
  %319 = @func_401() /* ty=(Tensor[(4, 2, 2), bool], Tensor[(1, 2, 2), float32], Tensor[(1, 2, 2), float32]) */;
  %320 = @func_898() /* ty=(Tensor[(8, 12, 8), float32], Tensor[(1, 2, 2), float32], Tensor[(4, 2, 2), uint16]) */;
  %321 = cast(%var_1349, dtype="int16") /* ty=int16 */;
  %322 = cast(%var_1350, dtype="int16") /* ty=Tensor[(490), int16] */;
  %323 = reshape(%321, newshape=[]) /* ty=int16 */;
  %324 = reshape(%322, newshape=[14, 5, 7]) /* ty=Tensor[(14, 5, 7), int16] */;
  %325 = @func_965(%323, %324) /* ty=(Tensor[(14, 5, 7), int16],) */;
  %326 = @func_314() /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %327 = %319.2;
  %328 = %320.0;
  %329 = %325.0;
  %330 = %326.0;
  (%327, %328, %329, %var_1349, %var_1350, %330)
}

def @func_5568(%var_5550: Tensor[(15, 12, 13), float32]) -> (Tensor[(15, 12, 13), float32], Tensor[(1, 2, 2), float32], Tensor[(540, 1), float32]) {
  %331 = cast(%var_5550, dtype="float32") /* ty=Tensor[(15, 12, 13), float32] */;
  %332 = asin(%331) /* ty=Tensor[(15, 12, 13), float32] */;
  %333 = cast(%332, dtype="float32") /* ty=Tensor[(15, 12, 13), float32] */;
  %334 = cast(meta[relay.Constant][18] /* ty=Tensor[(540, 1), float32] */, dtype="float32") /* ty=Tensor[(540, 1), float32] */;
  %335 = reshape(%334, newshape=[6, 15, 6]) /* ty=Tensor[(6, 15, 6), float32] */;
  %336 = @func_941(%335) /* ty=(Tensor[(6, 15, 6), uint8], Tensor[(1, 2, 2), float32]) */;
  %337 = log2(%333) /* ty=Tensor[(15, 12, 13), float32] */;
  %338 = %336.1;
  (%337, %338, meta[relay.Constant][18] /* ty=Tensor[(540, 1), float32] */)
}

def @func_4120() -> (Tensor[(1, 2, 2), float32],) {
  %339 = @func_210() /* ty=Tensor[(1, 2, 2), float32] */;
  (%339,)
}

def @func_5869(%var_5862: Tensor[(5, 11, 1), float32]) -> (Tensor[(5, 11, 1), float32],) {
  %340 = cast(%var_5862, dtype="float32") /* ty=Tensor[(5, 11, 1), float32] */;
  %341 = sigmoid(%340) /* ty=Tensor[(5, 11, 1), float32] */;
  (%341,)
}

def @func_5597(%var_5578: uint64, %var_5579: Tensor[(13, 1, 14), uint64]) -> (Tensor[(13, 1, 14), uint64], Tensor[(8, 12, 8), float32], Tensor[(1, 2, 2), float32]) {
  %342 = cast(%var_5578, dtype="uint64") /* ty=uint64 */;
  %343 = cast(%var_5579, dtype="uint64") /* ty=Tensor[(13, 1, 14), uint64] */;
  %344 = @func_4477() /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(8, 12, 8), float32]) */;
  %345 = bitwise_or(%342, %343) /* ty=Tensor[(13, 1, 14), uint64] */;
  %346 = %344.1;
  %347 = @func_210() /* ty=Tensor[(1, 2, 2), float32] */;
  (%345, %346, %347)
}

def @func_4211() -> (Tensor[(1, 2, 2), float32], Tensor[(4, 2, 2), uint16]) {
  %348 = @func_2630() /* ty=(Tensor[(1, 2, 2), float32],) */;
  %349 = %348.0;
  %350 = @func_1378() /* ty=Tensor[(4, 2, 2), uint16] */;
  (%349, %350)
}

def @func_7811() -> (Tensor[(6, 15, 6), float32],) {
  %351 = @func_2342() /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(6, 15, 6), float64], Tensor[(6, 15, 6), float32]) */;
  %352 = %351.2;
  (%352,)
}

def @func_437() -> Tensor[(4, 2, 2), uint16] {
  %353 = @func_314() /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %353.0
}

def @func_898() -> (Tensor[(8, 12, 8), float32], Tensor[(1, 2, 2), float32], Tensor[(4, 2, 2), uint16]) {
  %354 = cast(meta[relay.Constant][19] /* ty=Tensor[(8, 12, 8), float32] */, dtype="float32") /* ty=Tensor[(8, 12, 8), float32] */;
  %355 = @func_401() /* ty=(Tensor[(4, 2, 2), bool], Tensor[(1, 2, 2), float32], Tensor[(1, 2, 2), float32]) */;
  %356 = @func_629() /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(1, 2, 2), float64]) */;
  %357 = asinh(%354) /* ty=Tensor[(8, 12, 8), float32] */;
  %358 = %355.1;
  %359 = %356.0;
  (%357, %358, %359)
}

def @func_681(%var_671: Tensor[(11, 2, 2), float32]) -> Tensor[(11, 2, 2), float64] {
  %360 = @func_547() /* ty=(Tensor[(1, 2, 2), float32], Tensor[(1, 2, 2), float32]) */;
  %361 = %360.1;
  %362 = cast(%361, dtype="bool") /* ty=Tensor[(1, 2, 2), bool] */;
  %363 = cast(%var_671, dtype="bool") /* ty=Tensor[(11, 2, 2), bool] */;
  %364 = less(%362, %363) /* ty=Tensor[(11, 2, 2), bool] */;
  %365 = cast(%364, dtype="float64") /* ty=Tensor[(11, 2, 2), float64] */;
  cos(%365) /* ty=Tensor[(11, 2, 2), float64] */
}

def @func_782() -> (Tensor[(1, 2, 2), float32], Tensor[(9, 10, 14), bool]) {
  %366 = @func_643() /* ty=(Tensor[(9, 10, 14), bool],) */;
  %367 = @func_210() /* ty=Tensor[(1, 2, 2), float32] */;
  %368 = %366.0;
  (%367, %368)
}

def @func_6385() -> (Tensor[(4, 2, 2), float32], Tensor[(4, 2, 2), uint16], Tensor[(8, 12, 8), float32], int16, Tensor[(490), int16]) {
  %369 = @func_3841() /* ty=(Tensor[(4, 2, 2), float32], Tensor[(4, 2, 2), float32], Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16]) */;
  %370 = @func_3841() /* ty=(Tensor[(4, 2, 2), float32], Tensor[(4, 2, 2), float32], Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16]) */;
  %371 = cast(meta[relay.Constant][20] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %372 = cast(meta[relay.Constant][21] /* ty=Tensor[(490), int16] */, dtype="int16") /* ty=Tensor[(490), int16] */;
  %373 = reshape(%371, newshape=[]) /* ty=int16 */;
  %374 = reshape(%372, newshape=[490]) /* ty=Tensor[(490), int16] */;
  %375 = @func_1359(%373, %374) /* ty=(Tensor[(1, 2, 2), float32], Tensor[(8, 12, 8), float32], Tensor[(14, 5, 7), int16], int16, Tensor[(490), int16], Tensor[(4, 2, 2), uint16]) */;
  %376 = %369.0;
  %377 = %370.2;
  %378 = %375.1;
  (%376, %377, %378, meta[relay.Constant][20] /* ty=int16 */, meta[relay.Constant][21] /* ty=Tensor[(490), int16] */)
}

def @func_5662(%var_5632: Tensor[(3, 5, 8), int16], %var_5644: Tensor[(490), int16]) -> (Tensor[(3, 5, 8), bool], Tensor[(4, 2, 2), uint16], Tensor[(490), int16]) {
  %379 = cast(meta[relay.Constant][22] /* ty=Tensor[(3, 1, 8), int16] */, dtype="bool") /* ty=Tensor[(3, 1, 8), bool] */;
  %380 = cast(%var_5632, dtype="bool") /* ty=Tensor[(3, 5, 8), bool] */;
  %381 = @func_5164() /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %382 = cast(%var_5644, dtype="int16") /* ty=Tensor[(490), int16] */;
  %383 = reshape(%382, newshape=[245, 2]) /* ty=Tensor[(245, 2), int16] */;
  %384 = @func_4258(%383) /* ty=(Tensor[(8, 12, 8), float32], Tensor[(14, 5, 7), int16], int16, Tensor[(245, 2), int16]) */;
  %385 = %384.3;
  %386 = cast(%385, dtype="int16") /* ty=Tensor[(245, 2), int16] */;
  %387 = shape_of(%var_5644, dtype="int32") /* ty=Tensor[(1), int32] */;
  %388 = cast(%var_5644, dtype="int16") /* ty=Tensor[(490), int16] */;
  %389 = dyn.reshape(%386, %387, newshape=[]) /* ty=Tensor[(?), int16] */;
  %390 = less_equal(%379, %380) /* ty=Tensor[(3, 5, 8), bool] */;
  %391 = %381.0;
  %392 = maximum(%388, %389) /* ty=Tensor[(490), int16] */;
  (%390, %391, %392)
}

def @func_1929() -> (Tensor[(1, 2, 2), float32],) {
  %393 = @func_401() /* ty=(Tensor[(4, 2, 2), bool], Tensor[(1, 2, 2), float32], Tensor[(1, 2, 2), float32]) */;
  %394 = %393.1;
  (%394,)
}

def @func_4783() -> (Tensor[(4, 2, 2), float64],) {
  %395 = @func_2571() /* ty=Tensor[(4, 2, 2), float64] */;
  (%395,)
}

def @func_5430(%var_5418: Tensor[(12, 4, 3), uint16], %var_5419: Tensor[(12, 4, 3), uint16]) -> (Tensor[(12, 4, 3), uint16],) {
  %396 = cast(%var_5419, dtype="uint16") /* ty=Tensor[(12, 4, 3), uint16] */;
  %397 = shape_of(%var_5418, dtype="int32") /* ty=Tensor[(3), int32] */;
  %398 = cast(%var_5418, dtype="uint16") /* ty=Tensor[(12, 4, 3), uint16] */;
  %399 = dyn.reshape(%396, %397, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %400 = bitwise_xor(%398, %399) /* ty=Tensor[(12, 4, 3), uint16] */;
  (%400,)
}

def @func_290() -> (Tensor[(4, 2, 2), uint16],) {
  %401 = @func_210() /* ty=Tensor[(1, 2, 2), float32] */;
  %402 = cast(%401, dtype="uint16") /* ty=Tensor[(1, 2, 2), uint16] */;
  %403 = cast(meta[relay.Constant][23] /* ty=Tensor[(4, 2, 2), float32] */, dtype="uint16") /* ty=Tensor[(4, 2, 2), uint16] */;
  %404 = logical_xor(%402, %403) /* ty=Tensor[(4, 2, 2), uint16] */;
  (%404,)
}

def @func_7556() -> (Tensor[(8, 12, 8), float32], Tensor[(4, 2, 2), float32]) {
  %405 = @func_4477() /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(8, 12, 8), float32]) */;
  %406 = @func_3841() /* ty=(Tensor[(4, 2, 2), float32], Tensor[(4, 2, 2), float32], Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16]) */;
  %407 = %405.1;
  %408 = %406.1;
  (%407, %408)
}

def @func_822(%var_804: Tensor[(9, 10, 14), bool]) -> (Tensor[(6, 2, 2), int16], Tensor[(9, 10, 14), bool], Tensor[(4, 2, 2), uint16]) {
  %409 = @func_475() /* ty=(Tensor[(6, 2, 2), int16],) */;
  %410 = @func_643() /* ty=(Tensor[(9, 10, 14), bool],) */;
  %411 = %410.0;
  %412 = cast(%var_804, dtype="bool") /* ty=Tensor[(9, 10, 14), bool] */;
  %413 = shape_of(%411, dtype="int32") /* ty=Tensor[(3), int32] */;
  %414 = cast(%411, dtype="bool") /* ty=Tensor[(9, 10, 14), bool] */;
  %415 = dyn.reshape(%412, %413, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %416 = @func_314() /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %417 = %409.0;
  %418 = less(%414, %415) /* ty=Tensor[(9, 10, 14), bool] */;
  %419 = %416.0;
  (%417, %418, %419)
}

def @func_6571() -> (Tensor[(4, 2, 2), float64], Tensor[(1, 2, 2), float32]) {
  %420 = @func_4783() /* ty=(Tensor[(4, 2, 2), float64],) */;
  %421 = @func_5854() /* ty=(Tensor[(1, 2, 2), float32], Tensor[(6, 2, 2), int16], Tensor[(1, 2, 2), float32], Tensor[(4, 2, 2), uint16], Tensor[(7, 2, 16), bool], Tensor[(224), uint64], Tensor[(?, 2, 2), bool]) */;
  %422 = %420.0;
  %423 = %421.0;
  (%422, %423)
}

def @func_6555() -> (Tensor[(4, 2, 2), uint16],) {
  %424 = @func_4587() /* ty=(Tensor[(4, 2, 2), bool], Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16]) */;
  %425 = %424.2;
  (%425,)
}

def @func_5148(%var_5143: Tensor[(6, 14, 4), float32]) -> (Tensor[(6, 14, 4), float32],) {
  %426 = cast(%var_5143, dtype="float32") /* ty=Tensor[(6, 14, 4), float32] */;
  %427 = sigmoid(%426) /* ty=Tensor[(6, 14, 4), float32] */;
  (%427,)
}

def @func_7941() -> Tensor[(7, 12, 8), int8] {
  %428 = cast(meta[relay.Constant][25] /* ty=Tensor[(7, 12, 8), int8] */, dtype="int8") /* ty=Tensor[(7, 12, 8), int8] */;
  %429 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(7, 12, 8), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %430 = cast(meta[relay.Constant][24] /* ty=Tensor[(7, 12, 8), int8] */, dtype="int8") /* ty=Tensor[(7, 12, 8), int8] */;
  %431 = dyn.reshape(%428, %429, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  multiply(%430, %431) /* ty=Tensor[(7, 12, 8), int8] */
}

def @func_1274(%var_1252: Tensor[(490), int16]) -> (Tensor[(1, 2, 2), float32], Tensor[(1, 2, 2), float32], Tensor[(4, 2, 2), uint16], Tensor[(14, 5, 7), int16], int16, Tensor[(490), float32], Tensor[(4, 2, 2), float32]) {
  %432 = @func_547() /* ty=(Tensor[(1, 2, 2), float32], Tensor[(1, 2, 2), float32]) */;
  %433 = @func_738() /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16]) */;
  %434 = cast(meta[relay.Constant][26] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %435 = cast(%var_1252, dtype="int16") /* ty=Tensor[(490), int16] */;
  %436 = reshape(%434, newshape=[]) /* ty=int16 */;
  %437 = reshape(%435, newshape=[14, 5, 7]) /* ty=Tensor[(14, 5, 7), int16] */;
  %438 = @func_965(%436, %437) /* ty=(Tensor[(14, 5, 7), int16],) */;
  %439 = cast(%var_1252, dtype="float32") /* ty=Tensor[(490), float32] */;
  %440 = @func_898() /* ty=(Tensor[(8, 12, 8), float32], Tensor[(1, 2, 2), float32], Tensor[(4, 2, 2), uint16]) */;
  %441 = %440.2;
  %442 = cast(%441, dtype="float64") /* ty=Tensor[(4, 2, 2), float64] */;
  %443 = sigmoid(%442) /* ty=Tensor[(4, 2, 2), float64] */;
  %444 = cast(%443, dtype="float32") /* ty=Tensor[(4, 2, 2), float32] */;
  %445 = @func_210() /* ty=Tensor[(1, 2, 2), float32] */;
  %446 = %432.0;
  %447 = %433.0;
  %448 = %438.0;
  %449 = tan(%439) /* ty=Tensor[(490), float32] */;
  %450 = asinh(%444) /* ty=Tensor[(4, 2, 2), float32] */;
  (%445, %446, %447, %448, meta[relay.Constant][26] /* ty=int16 */, %449, %450)
}

def @func_4943(%var_4929: Tensor[(49), float64], %var_4941: Tensor[(768, 1), float32]) -> (Tensor[(4, 2, 2), float64], Tensor[(49), float64], Tensor[(7, 2, 2), bool], Tensor[(4, 2, 2), uint16], Tensor[(768, 1), float32]) {
  %451 = @func_4373() /* ty=Tensor[(1, 2, 2), float32] */;
  %452 = cast(%var_4929, dtype="float64") /* ty=Tensor[(49), float64] */;
  %453 = reshape(%452, newshape=[1, 7, 7]) /* ty=Tensor[(1, 7, 7), float64] */;
  %454 = @func_4850(%453) /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(?, 7, 7), uint8], Tensor[(?, 7, 7), uint16], Tensor[(7, 2, 2), uint8], Tensor[(28), float64], Tensor[(?, 7, 7), float32]) */;
  %455 = %454.3;
  %456 = cast(%451, dtype="bool") /* ty=Tensor[(1, 2, 2), bool] */;
  %457 = cast(%455, dtype="bool") /* ty=Tensor[(7, 2, 2), bool] */;
  %458 = cast(%var_4941, dtype="float32") /* ty=Tensor[(768, 1), float32] */;
  %459 = reshape(%458, newshape=[768, 1]) /* ty=Tensor[(768, 1), float32] */;
  %460 = @func_4897(%459) /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16], Tensor[(1, 2, 2), float32], Tensor[(8, 12, 8), int16], Tensor[(768, 540), int8]) */;
  %461 = @func_2571() /* ty=Tensor[(4, 2, 2), float64] */;
  %462 = not_equal(%456, %457) /* ty=Tensor[(7, 2, 2), bool] */;
  %463 = %460.0;
  (%461, %var_4929, %462, %463, %var_4941)
}

def @func_7537(%var_7468: Tensor[(1, 16), uint16], %var_7522: Tensor[(14, 2, 2), float32]) -> (Tensor[(4, 2, 2), bool], Tensor[(1, 16), uint16], Tensor[(1, 2, 2), float32], Tensor[(4, 2, 2), uint16], Tensor[(10, 11, 1), float64], Tensor[(110), float64], Tensor[(14, 2, 2), uint16]) {
  %464 = cast(%var_7468, dtype="uint16") /* ty=Tensor[(1, 16), uint16] */;
  %465 = reshape(%464, newshape=[4, 2, 2]) /* ty=Tensor[(4, 2, 2), uint16] */;
  %466 = @func_3407(%465) /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), bool]) */;
  %467 = @func_4211() /* ty=(Tensor[(1, 2, 2), float32], Tensor[(4, 2, 2), uint16]) */;
  %468 = cast(meta[relay.Constant][27] /* ty=Tensor[(110), float64] */, dtype="float64") /* ty=Tensor[(110), float64] */;
  %469 = reshape(%468, newshape=[10, 11, 1]) /* ty=Tensor[(10, 11, 1), float64] */;
  %470 = @func_1306(%469) /* ty=(Tensor[(10, 11, 1), float64],) */;
  %471 = @func_898() /* ty=(Tensor[(8, 12, 8), float32], Tensor[(1, 2, 2), float32], Tensor[(4, 2, 2), uint16]) */;
  %472 = %471.1;
  %473 = cast(%472, dtype="uint16") /* ty=Tensor[(1, 2, 2), uint16] */;
  %474 = cast(%var_7522, dtype="uint16") /* ty=Tensor[(14, 2, 2), uint16] */;
  %475 = %466.1;
  %476 = @func_4373() /* ty=Tensor[(1, 2, 2), float32] */;
  %477 = %467.1;
  %478 = %470.0;
  %479 = add(%473, %474) /* ty=Tensor[(14, 2, 2), uint16] */;
  (%475, %var_7468, %476, %477, %478, meta[relay.Constant][27] /* ty=Tensor[(110), float64] */, %479)
}

def @func_8061() -> (Tensor[(1, 2, 2), float64],) {
  %480 = @func_3563() /* ty=(Tensor[(1, 2, 2), float64], Tensor[(4, 2, 2), uint16]) */;
  %481 = %480.0;
  (%481,)
}

def @func_1378() -> Tensor[(4, 2, 2), uint16] {
  %482 = @func_1146() /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %482.0
}

def @func_2496(%var_2465: Tensor[(4, 2, 2), uint16]) -> (Tensor[(1, 2, 2), float64], Tensor[(4, 2, 2), float32]) {
  %483 = @func_629() /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(1, 2, 2), float64]) */;
  %484 = @func_590() /* ty=Tensor[(4, 2, 2), uint16] */;
  %485 = cast(%484, dtype="float64") /* ty=Tensor[(4, 2, 2), float64] */;
  %486 = log(%485) /* ty=Tensor[(4, 2, 2), float64] */;
  %487 = cast(%var_2465, dtype="float32") /* ty=Tensor[(4, 2, 2), float32] */;
  %488 = shape_of(%484, dtype="int32") /* ty=Tensor[(3), int32] */;
  %489 = cast(%484, dtype="float32") /* ty=Tensor[(4, 2, 2), float32] */;
  %490 = dyn.reshape(%487, %488, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %491 = mod(%489, %490) /* ty=Tensor[(4, 2, 2), float32] */;
  %492 = cast(%491, dtype="float32") /* ty=Tensor[(4, 2, 2), float32] */;
  %493 = shape_of(%486, dtype="int32") /* ty=Tensor[(3), int32] */;
  %494 = cast(%486, dtype="float32") /* ty=Tensor[(4, 2, 2), float32] */;
  %495 = dyn.reshape(%492, %493, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %496 = %483.1;
  %497 = divide(%494, %495) /* ty=Tensor[(4, 2, 2), float32] */;
  (%496, %497)
}

def @func_8026() -> (Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), float64]) {
  %498 = @func_6555() /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %499 = %498.0;
  %500 = @func_5764() /* ty=Tensor[(4, 2, 2), float64] */;
  (%499, %500)
}

def @func_6870(%var_6856: Tensor[(6, 14, 4), float32]) -> (Tensor[(72), int8], Tensor[(6, 15, 6), float32], Tensor[(336), float32], Tensor[(6, 14, 4), bool], Tensor[(1, 2, 2), float32]) {
  %501 = @func_245() /* ty=(Tensor[(1, 2, 2), float32], Tensor[(4, 3, 6), int8], Tensor[(72), int8]) */;
  %502 = @func_2379() /* ty=(Tensor[(6, 15, 6), float32],) */;
  %503 = cast(meta[relay.Constant][28] /* ty=Tensor[(336), float32] */, dtype="float32") /* ty=Tensor[(336), float32] */;
  %504 = reshape(%503, newshape=[6, 14, 4]) /* ty=Tensor[(6, 14, 4), float32] */;
  %505 = @func_5148(%504) /* ty=(Tensor[(6, 14, 4), float32],) */;
  %506 = %505.0;
  %507 = cast(%var_6856, dtype="bool") /* ty=Tensor[(6, 14, 4), bool] */;
  %508 = shape_of(%506, dtype="int32") /* ty=Tensor[(3), int32] */;
  %509 = cast(%506, dtype="bool") /* ty=Tensor[(6, 14, 4), bool] */;
  %510 = dyn.reshape(%507, %508, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %511 = %501.2;
  %512 = %502.0;
  %513 = less(%509, %510) /* ty=Tensor[(6, 14, 4), bool] */;
  %514 = @func_5723() /* ty=Tensor[(1, 2, 2), float32] */;
  (%511, %512, meta[relay.Constant][28] /* ty=Tensor[(336), float32] */, %513, %514)
}

def @func_5101() -> Tensor[(1, 2, 2), float32] {
  %515 = @func_1929() /* ty=(Tensor[(1, 2, 2), float32],) */;
  %515.0
}

def @func_5164() -> (Tensor[(4, 2, 2), uint16],) {
  %516 = @func_314() /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %517 = %516.0;
  (%517,)
}

def @func_1636() -> (Tensor[(4, 2, 2), uint16],) {
  %518 = @func_629() /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(1, 2, 2), float64]) */;
  %519 = %518.0;
  (%519,)
}

def @func_861() -> (Tensor[(4, 2, 2), float64],) {
  %520 = @func_290() /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %521 = %520.0;
  %522 = cast(%521, dtype="float64") /* ty=Tensor[(4, 2, 2), float64] */;
  %523 = rsqrt(%522) /* ty=Tensor[(4, 2, 2), float64] */;
  (%523,)
}

def @func_1306(%var_1301: Tensor[(10, 11, 1), float64]) -> (Tensor[(10, 11, 1), float64],) {
  %524 = cast(%var_1301, dtype="float64") /* ty=Tensor[(10, 11, 1), float64] */;
  %525 = atanh(%524) /* ty=Tensor[(10, 11, 1), float64] */;
  (%525,)
}

def @func_4227() -> (Tensor[(4, 2, 2), uint16],) {
  %526 = @func_3841() /* ty=(Tensor[(4, 2, 2), float32], Tensor[(4, 2, 2), float32], Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16]) */;
  %527 = %526.3;
  (%527,)
}

def @func_6299(%var_6249: Tensor[(490), int16]) -> (Tensor[(4, 2, 2), uint16], Tensor[(490), int16], Tensor[(120), int16], Tensor[(490), int16], Tensor[(4, 2, 2), uint16], Tensor[(1, 2, 2), float32], Tensor[(4, 2, 2), float64]) {
  %528 = @func_1146() /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %529 = cast(meta[relay.Constant][29] /* ty=Tensor[(120), int16] */, dtype="int16") /* ty=Tensor[(120), int16] */;
  %530 = cast(%var_6249, dtype="int16") /* ty=Tensor[(490), int16] */;
  %531 = reshape(%529, newshape=[3, 5, 8]) /* ty=Tensor[(3, 5, 8), int16] */;
  %532 = reshape(%530, newshape=[490]) /* ty=Tensor[(490), int16] */;
  %533 = @func_5662(%531, %532) /* ty=(Tensor[(3, 5, 8), bool], Tensor[(4, 2, 2), uint16], Tensor[(490), int16]) */;
  %534 = @func_4543() /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16]) */;
  %535 = @func_4120() /* ty=(Tensor[(1, 2, 2), float32],) */;
  %536 = %534.1;
  %537 = cast(%536, dtype="uint16") /* ty=Tensor[(4, 2, 2), uint16] */;
  %538 = reshape(%537, newshape=[4, 2, 2]) /* ty=Tensor[(4, 2, 2), uint16] */;
  %539 = %528.0;
  %540 = %533.2;
  %541 = %535.0;
  %542 = @func_2598(%538) /* ty=Tensor[(4, 2, 2), float64] */;
  (%539, %540, meta[relay.Constant][29] /* ty=Tensor[(120), int16] */, %var_6249, %536, %541, %542)
}

def @func_475() -> (Tensor[(6, 2, 2), int16],) {
  %543 = @func_210() /* ty=Tensor[(1, 2, 2), float32] */;
  %544 = cast(%543, dtype="int16") /* ty=Tensor[(1, 2, 2), int16] */;
  %545 = cast(meta[relay.Constant][30] /* ty=Tensor[(6, 2, 2), float32] */, dtype="int16") /* ty=Tensor[(6, 2, 2), int16] */;
  %546 = left_shift(%544, %545) /* ty=Tensor[(6, 2, 2), int16] */;
  (%546,)
}

def @func_3068(%var_3008: Tensor[(9, 10, 14), bool], %var_3016: Tensor[(2184), float32]) -> (Tensor[(14, 12, 13), float32], Tensor[(9, 10, 14), float64], Tensor[(9, 10, 14), float64]) {
  %547 = cast(%var_3016, dtype="float32") /* ty=Tensor[(2184), float32] */;
  %548 = reshape(%547, newshape=[14, 12, 13]) /* ty=Tensor[(14, 12, 13), float32] */;
  %549 = @func_2860(%548) /* ty=Tensor[(14, 12, 13), float32] */;
  %550 = cast(%var_3016, dtype="float32") /* ty=Tensor[(2184), float32] */;
  %551 = shape_of(%549, dtype="int32") /* ty=Tensor[(3), int32] */;
  %552 = cast(%549, dtype="float32") /* ty=Tensor[(14, 12, 13), float32] */;
  %553 = dyn.reshape(%550, %551, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %554 = @func_643() /* ty=(Tensor[(9, 10, 14), bool],) */;
  %555 = %554.0;
  %556 = cast(%var_3008, dtype="int64") /* ty=Tensor[(9, 10, 14), int64] */;
  %557 = shape_of(%555, dtype="int32") /* ty=Tensor[(3), int32] */;
  %558 = cast(%555, dtype="int64") /* ty=Tensor[(9, 10, 14), int64] */;
  %559 = dyn.reshape(%556, %557, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %560 = logical_xor(%558, %559) /* ty=Tensor[(9, 10, 14), int64] */;
  %561 = cast(%560, dtype="float64") /* ty=Tensor[(9, 10, 14), float64] */;
  %562 = cast(%560, dtype="float64") /* ty=Tensor[(9, 10, 14), float64] */;
  %563 = floor_mod(%552, %553) /* ty=Tensor[(14, 12, 13), float32] */;
  %564 = asin(%561) /* ty=Tensor[(9, 10, 14), float64] */;
  %565 = atanh(%562) /* ty=Tensor[(9, 10, 14), float64] */;
  (%563, %564, %565)
}

def @func_1661() -> (Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16]) {
  %566 = @func_1378() /* ty=Tensor[(4, 2, 2), uint16] */;
  %567 = cast(%566, dtype="uint16") /* ty=Tensor[(4, 2, 2), uint16] */;
  %568 = reshape(%567, newshape=[4, 2, 2]) /* ty=Tensor[(4, 2, 2), uint16] */;
  %569 = @func_1088(%568) /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %570 = %569.0;
  %571 = cast(%570, dtype="uint16") /* ty=Tensor[(4, 2, 2), uint16] */;
  %572 = reshape(%571, newshape=[4, 2, 2]) /* ty=Tensor[(4, 2, 2), uint16] */;
  %573 = @func_1088(%572) /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %574 = %573.0;
  (%566, %570, %574)
}

def @func_245() -> (Tensor[(1, 2, 2), float32], Tensor[(4, 3, 6), int8], Tensor[(72), int8]) {
  %575 = cast(meta[relay.Constant][31] /* ty=Tensor[(72), int8] */, dtype="int8") /* ty=Tensor[(72), int8] */;
  %576 = reshape(%575, newshape=[4, 3, 6]) /* ty=Tensor[(4, 3, 6), int8] */;
  %577 = @func_202(%576) /* ty=(Tensor[(4, 3, 6), int8],) */;
  %578 = @func_210() /* ty=Tensor[(1, 2, 2), float32] */;
  %579 = %577.0;
  (%578, %579, meta[relay.Constant][31] /* ty=Tensor[(72), int8] */)
}

def @func_5854() -> (Tensor[(1, 2, 2), float32], Tensor[(6, 2, 2), int16], Tensor[(1, 2, 2), float32], Tensor[(4, 2, 2), uint16], Tensor[(7, 2, 16), bool], Tensor[(224), uint64], Tensor[(?, 2, 2), bool]) {
  %580 = @func_4120() /* ty=(Tensor[(1, 2, 2), float32],) */;
  %581 = @func_3627() /* ty=(Tensor[(6, 2, 2), int16],) */;
  %582 = @func_5164() /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %583 = cast(meta[relay.Constant][32] /* ty=Tensor[(224), uint64] */, dtype="uint64") /* ty=Tensor[(224), uint64] */;
  %584 = cast(meta[relay.Constant][32] /* ty=Tensor[(224), uint64] */, dtype="uint64") /* ty=Tensor[(224), uint64] */;
  %585 = reshape(%583, newshape=[7, 2, 16]) /* ty=Tensor[(7, 2, 16), uint64] */;
  %586 = reshape(%584, newshape=[7, 2, 16]) /* ty=Tensor[(7, 2, 16), uint64] */;
  %587 = @func_5615(%585, %586) /* ty=(Tensor[(7, 2, 16), bool],) */;
  %588 = @func_5723() /* ty=Tensor[(1, 2, 2), float32] */;
  %589 = cast(%588, dtype="float32") /* ty=Tensor[(1, 2, 2), float32] */;
  %590 = asin(%589) /* ty=Tensor[(1, 2, 2), float32] */;
  %591 = cast(%590, dtype="uint64") /* ty=Tensor[(1, 2, 2), uint64] */;
  %592 = shape_of(%588, dtype="int32") /* ty=Tensor[(3), int32] */;
  %593 = cast(%588, dtype="uint64") /* ty=Tensor[(1, 2, 2), uint64] */;
  %594 = dyn.reshape(%591, %592, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %595 = maximum(%593, %594) /* ty=Tensor[(?, 2, 2), uint64] */;
  %596 = cast(%590, dtype="uint64") /* ty=Tensor[(1, 2, 2), uint64] */;
  %597 = shape_of(%595, dtype="int32") /* ty=Tensor[(3), int32] */;
  %598 = cast(%595, dtype="uint64") /* ty=Tensor[(?, 2, 2), uint64] */;
  %599 = dyn.reshape(%596, %597, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %600 = logical_xor(%598, %599) /* ty=Tensor[(?, 2, 2), uint64] */;
  %601 = cast(%600, dtype="bool") /* ty=Tensor[(?, 2, 2), bool] */;
  %602 = shape_of(%588, dtype="int32") /* ty=Tensor[(3), int32] */;
  %603 = cast(%588, dtype="bool") /* ty=Tensor[(1, 2, 2), bool] */;
  %604 = dyn.reshape(%601, %602, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %605 = %580.0;
  %606 = %581.0;
  %607 = @func_5101() /* ty=Tensor[(1, 2, 2), float32] */;
  %608 = %582.0;
  %609 = %587.0;
  %610 = equal(%603, %604) /* ty=Tensor[(?, 2, 2), bool] */;
  (%605, %606, %607, %608, %609, meta[relay.Constant][32] /* ty=Tensor[(224), uint64] */, %610)
}

def @func_629() -> (Tensor[(4, 2, 2), uint16], Tensor[(1, 2, 2), float64]) {
  %611 = @func_290() /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %612 = @func_401() /* ty=(Tensor[(4, 2, 2), bool], Tensor[(1, 2, 2), float32], Tensor[(1, 2, 2), float32]) */;
  %613 = %612.2;
  %614 = cast(%613, dtype="float64") /* ty=Tensor[(1, 2, 2), float64] */;
  %615 = %611.0;
  %616 = log10(%614) /* ty=Tensor[(1, 2, 2), float64] */;
  (%615, %616)
}

def @func_7691() -> (Tensor[(4, 2, 2), int64], Tensor[(4, 2, 2), float32], Tensor[(12, 5, 14), float64], Tensor[(840), float64]) {
  %617 = @func_3841() /* ty=(Tensor[(4, 2, 2), float32], Tensor[(4, 2, 2), float32], Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16]) */;
  %618 = %617.3;
  %619 = @func_5764() /* ty=Tensor[(4, 2, 2), float64] */;
  %620 = cast(%619, dtype="int64") /* ty=Tensor[(4, 2, 2), int64] */;
  %621 = shape_of(%618, dtype="int32") /* ty=Tensor[(3), int32] */;
  %622 = cast(%618, dtype="int64") /* ty=Tensor[(4, 2, 2), int64] */;
  %623 = dyn.reshape(%620, %621, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %624 = cast(%618, dtype="float32") /* ty=Tensor[(4, 2, 2), float32] */;
  %625 = acosh(%624) /* ty=Tensor[(4, 2, 2), float32] */;
  %626 = cast(%625, dtype="float32") /* ty=Tensor[(4, 2, 2), float32] */;
  %627 = cast(meta[relay.Constant][33] /* ty=Tensor[(840), float64] */, dtype="float64") /* ty=Tensor[(840), float64] */;
  %628 = reshape(%627, newshape=[12, 5, 14]) /* ty=Tensor[(12, 5, 14), float64] */;
  %629 = minimum(%622, %623) /* ty=Tensor[(4, 2, 2), int64] */;
  %630 = cosh(%626) /* ty=Tensor[(4, 2, 2), float32] */;
  %631 = @func_3534(%628) /* ty=Tensor[(12, 5, 14), float64] */;
  (%629, %630, %631, meta[relay.Constant][33] /* ty=Tensor[(840), float64] */)
}

def @func_5681() -> (Tensor[(4, 2, 2), float32], Tensor[(1, 2, 2), float32]) {
  %632 = @func_5530() /* ty=(Tensor[(4, 2, 2), float32],) */;
  %633 = @func_401() /* ty=(Tensor[(4, 2, 2), bool], Tensor[(1, 2, 2), float32], Tensor[(1, 2, 2), float32]) */;
  %634 = %632.0;
  %635 = %633.2;
  (%634, %635)
}

def @func_1708(%var_1679: Tensor[(15, 7, 10), float32]) -> (Tensor[(15, 7, 10), float32], Tensor[(10, 11, 1), float64], Tensor[(110), float64]) {
  %636 = cast(%var_1679, dtype="float32") /* ty=Tensor[(15, 7, 10), float32] */;
  %637 = cast(meta[relay.Constant][34] /* ty=Tensor[(110), float64] */, dtype="float64") /* ty=Tensor[(110), float64] */;
  %638 = reshape(%637, newshape=[10, 11, 1]) /* ty=Tensor[(10, 11, 1), float64] */;
  %639 = @func_1306(%638) /* ty=(Tensor[(10, 11, 1), float64],) */;
  %640 = rsqrt(%636) /* ty=Tensor[(15, 7, 10), float32] */;
  %641 = %639.0;
  (%640, %641, meta[relay.Constant][34] /* ty=Tensor[(110), float64] */)
}

def @func_3929(%var_3888: Tensor[(1, 6, 13), float64], %var_3889: Tensor[(16, 6, 13), float64], %var_3917: Tensor[(28), float64], %var_3927: Tensor[(840, 1), float64]) -> (Tensor[(16, 6, 13), float64], Tensor[(6, 2, 2), int16], Tensor[(7, 2, 2), uint8], Tensor[(28), float64], Tensor[(4, 2, 2), uint16], Tensor[(12, 5, 14), float64], Tensor[(840, 1), float64]) {
  %642 = cast(%var_3888, dtype="float64") /* ty=Tensor[(1, 6, 13), float64] */;
  %643 = cast(%var_3889, dtype="float64") /* ty=Tensor[(16, 6, 13), float64] */;
  %644 = @func_3627() /* ty=(Tensor[(6, 2, 2), int16],) */;
  %645 = cast(%var_3917, dtype="float64") /* ty=Tensor[(28), float64] */;
  %646 = reshape(%645, newshape=[7, 2, 2]) /* ty=Tensor[(7, 2, 2), float64] */;
  %647 = @func_1387(%646) /* ty=(Tensor[(7, 2, 2), uint8],) */;
  %648 = @func_1636() /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %649 = cast(%var_3927, dtype="float64") /* ty=Tensor[(840, 1), float64] */;
  %650 = reshape(%649, newshape=[12, 5, 14]) /* ty=Tensor[(12, 5, 14), float64] */;
  %651 = power(%642, %643) /* ty=Tensor[(16, 6, 13), float64] */;
  %652 = %644.0;
  %653 = %647.0;
  %654 = %648.0;
  %655 = @func_3534(%650) /* ty=Tensor[(12, 5, 14), float64] */;
  (%651, %652, %653, %var_3917, %654, %655, %var_3927)
}

def @func_401() -> (Tensor[(4, 2, 2), bool], Tensor[(1, 2, 2), float32], Tensor[(1, 2, 2), float32]) {
  %656 = @func_314() /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %657 = %656.0;
  %658 = cast(meta[relay.Constant][35] /* ty=Tensor[(4, 2, 2), uint16] */, dtype="bool") /* ty=Tensor[(4, 2, 2), bool] */;
  %659 = shape_of(%657, dtype="int32") /* ty=Tensor[(3), int32] */;
  %660 = cast(%657, dtype="bool") /* ty=Tensor[(4, 2, 2), bool] */;
  %661 = dyn.reshape(%658, %659, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %662 = @func_245() /* ty=(Tensor[(1, 2, 2), float32], Tensor[(4, 3, 6), int8], Tensor[(72), int8]) */;
  %663 = not_equal(%660, %661) /* ty=Tensor[(4, 2, 2), bool] */;
  %664 = @func_210() /* ty=Tensor[(1, 2, 2), float32] */;
  %665 = %662.0;
  (%663, %664, %665)
}

def @func_4543() -> (Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16]) {
  %666 = @func_1661() /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16]) */;
  %667 = @func_290() /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %668 = %666.2;
  %669 = %667.0;
  (%668, %669)
}

def @func_1887() -> (Tensor[(4, 2, 2), uint16], Tensor[(1, 2, 2), float32], Tensor[(245, 2), int16]) {
  %670 = cast(meta[relay.Constant][36] /* ty=Tensor[(245, 2), int16] */, dtype="int16") /* ty=Tensor[(245, 2), int16] */;
  %671 = reshape(%670, newshape=[490]) /* ty=Tensor[(490), int16] */;
  %672 = @func_1274(%671) /* ty=(Tensor[(1, 2, 2), float32], Tensor[(1, 2, 2), float32], Tensor[(4, 2, 2), uint16], Tensor[(14, 5, 7), int16], int16, Tensor[(490), float32], Tensor[(4, 2, 2), float32]) */;
  %673 = @func_437() /* ty=Tensor[(4, 2, 2), uint16] */;
  %674 = %672.1;
  (%673, %674, meta[relay.Constant][36] /* ty=Tensor[(245, 2), int16] */)
}

def @func_5530() -> (Tensor[(4, 2, 2), float32],) {
  %675 = @func_2419() /* ty=Tensor[(4, 2, 2), uint16] */;
  %676 = cast(%675, dtype="float32") /* ty=Tensor[(4, 2, 2), float32] */;
  %677 = log10(%676) /* ty=Tensor[(4, 2, 2), float32] */;
  (%677,)
}

def @func_643() -> (Tensor[(9, 10, 14), bool],) {
  %678 = cast(10 /* ty=int32 */, dtype="bool") /* ty=bool */;
  %679 = cast(meta[relay.Constant][37] /* ty=Tensor[(9, 10, 14), int32] */, dtype="bool") /* ty=Tensor[(9, 10, 14), bool] */;
  %680 = not_equal(%678, %679) /* ty=Tensor[(9, 10, 14), bool] */;
  (%680,)
}

def @func_7861(%var_7856: Tensor[(16), uint16]) -> (Tensor[(8, 12, 8), float32], Tensor[(4, 2, 2), float64], Tensor[(16), uint16]) {
  %681 = cast(%var_7856, dtype="uint16") /* ty=Tensor[(16), uint16] */;
  %682 = reshape(%681, newshape=[4, 2, 2]) /* ty=Tensor[(4, 2, 2), uint16] */;
  %683 = @func_6664() /* ty=Tensor[(8, 12, 8), float32] */;
  %684 = @func_2598(%682) /* ty=Tensor[(4, 2, 2), float64] */;
  (%683, %684, %var_7856)
}

def @func_6737() -> Tensor[(4, 2, 2), uint16] {
  %685 = @func_290() /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %685.0
}

def @func_2571() -> Tensor[(4, 2, 2), float64] {
  %686 = @func_437() /* ty=Tensor[(4, 2, 2), uint16] */;
  %687 = cast(%686, dtype="float64") /* ty=Tensor[(4, 2, 2), float64] */;
  log2(%687) /* ty=Tensor[(4, 2, 2), float64] */
}

def @func_2379() -> (Tensor[(6, 15, 6), float32],) {
  %688 = @func_2342() /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(6, 15, 6), float64], Tensor[(6, 15, 6), float32]) */;
  %689 = %688.2;
  (%689,)
}

def @func_6697(%var_6686: Tensor[(49), float64], %var_6689: Tensor[(49), float64]) -> (Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), float64], Tensor[(768), float32], Tensor[(49), bool], Tensor[(14, 12, 13), float32], Tensor[(2, 1092), float32]) {
  %690 = cast(%var_6686, dtype="float64") /* ty=Tensor[(49), float64] */;
  %691 = cast(meta[relay.Constant][38] /* ty=Tensor[(768), float32] */, dtype="float32") /* ty=Tensor[(768), float32] */;
  %692 = reshape(%690, newshape=[49]) /* ty=Tensor[(49), float64] */;
  %693 = reshape(%691, newshape=[768, 1]) /* ty=Tensor[(768, 1), float32] */;
  %694 = @func_4943(%692, %693) /* ty=(Tensor[(4, 2, 2), float64], Tensor[(49), float64], Tensor[(7, 2, 2), bool], Tensor[(4, 2, 2), uint16], Tensor[(768, 1), float32]) */;
  %695 = cast(%var_6689, dtype="bool") /* ty=Tensor[(49), bool] */;
  %696 = shape_of(%var_6686, dtype="int32") /* ty=Tensor[(1), int32] */;
  %697 = cast(%var_6686, dtype="bool") /* ty=Tensor[(49), bool] */;
  %698 = dyn.reshape(%695, %696, newshape=[]) /* ty=Tensor[(?), bool] */;
  %699 = cast(meta[relay.Constant][39] /* ty=Tensor[(2, 1092), float32] */, dtype="float32") /* ty=Tensor[(2, 1092), float32] */;
  %700 = reshape(%699, newshape=[14, 12, 13]) /* ty=Tensor[(14, 12, 13), float32] */;
  %701 = @func_4444() /* ty=Tensor[(4, 2, 2), uint16] */;
  %702 = %694.0;
  %703 = equal(%697, %698) /* ty=Tensor[(49), bool] */;
  %704 = @func_2860(%700) /* ty=Tensor[(14, 12, 13), float32] */;
  (%701, %702, meta[relay.Constant][38] /* ty=Tensor[(768), float32] */, %703, %704, meta[relay.Constant][39] /* ty=Tensor[(2, 1092), float32] */)
}

def @func_7415() -> (Tensor[(4, 2, 2), float64], Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16]) {
  %705 = @func_4783() /* ty=(Tensor[(4, 2, 2), float64],) */;
  %706 = @func_1661() /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16]) */;
  %707 = %705.0;
  %708 = %706.1;
  %709 = @func_437() /* ty=Tensor[(4, 2, 2), uint16] */;
  (%707, %708, %709)
}

def @main() -> (Tensor[(1, 2, 2), float64],) {
  %710 = @func_2630() /* ty=(Tensor[(1, 2, 2), float32],) */;
  %711 = %710.0;
  %712 = cast(%711, dtype="float64") /* ty=Tensor[(1, 2, 2), float64] */;
  %713 = acosh(%712) /* ty=Tensor[(1, 2, 2), float64] */;
  (%713,)
}

def @func_1450(%var_1414: Tensor[(12, 7, 2), uint32], %var_1415: Tensor[(12, 7, 2), uint32], %var_1420: Tensor[(28), float64]) -> (Tensor[(12, 7, 2), bool], Tensor[(7, 2, 2), uint8], Tensor[(28), float64], Tensor[(4, 2, 2), bool], Tensor[(110), float64], Tensor[(490, 1), int16], Tensor[(10, 11, 490), bool]) {
  %714 = cast(%var_1415, dtype="bool") /* ty=Tensor[(12, 7, 2), bool] */;
  %715 = shape_of(%var_1414, dtype="int32") /* ty=Tensor[(3), int32] */;
  %716 = cast(%var_1414, dtype="bool") /* ty=Tensor[(12, 7, 2), bool] */;
  %717 = dyn.reshape(%714, %715, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %718 = cast(%var_1420, dtype="float64") /* ty=Tensor[(28), float64] */;
  %719 = reshape(%718, newshape=[7, 2, 2]) /* ty=Tensor[(7, 2, 2), float64] */;
  %720 = @func_1387(%719) /* ty=(Tensor[(7, 2, 2), uint8],) */;
  %721 = @func_401() /* ty=(Tensor[(4, 2, 2), bool], Tensor[(1, 2, 2), float32], Tensor[(1, 2, 2), float32]) */;
  %722 = cast(meta[relay.Constant][41] /* ty=Tensor[(490, 1), int16] */, dtype="int16") /* ty=Tensor[(490, 1), int16] */;
  %723 = reshape(%722, newshape=[490]) /* ty=Tensor[(490), int16] */;
  %724 = @func_1274(%723) /* ty=(Tensor[(1, 2, 2), float32], Tensor[(1, 2, 2), float32], Tensor[(4, 2, 2), uint16], Tensor[(14, 5, 7), int16], int16, Tensor[(490), float32], Tensor[(4, 2, 2), float32]) */;
  %725 = %724.5;
  %726 = cast(meta[relay.Constant][40] /* ty=Tensor[(110), float64] */, dtype="float64") /* ty=Tensor[(110), float64] */;
  %727 = reshape(%726, newshape=[10, 11, 1]) /* ty=Tensor[(10, 11, 1), float64] */;
  %728 = @func_1306(%727) /* ty=(Tensor[(10, 11, 1), float64],) */;
  %729 = %728.0;
  %730 = cast(%725, dtype="bool") /* ty=Tensor[(490), bool] */;
  %731 = cast(%729, dtype="bool") /* ty=Tensor[(10, 11, 1), bool] */;
  %732 = less(%716, %717) /* ty=Tensor[(12, 7, 2), bool] */;
  %733 = %720.0;
  %734 = %721.0;
  %735 = less_equal(%730, %731) /* ty=Tensor[(10, 11, 490), bool] */;
  (%732, %733, %var_1420, %734, meta[relay.Constant][40] /* ty=Tensor[(110), float64] */, meta[relay.Constant][41] /* ty=Tensor[(490, 1), int16] */, %735)
}

def @func_5723() -> Tensor[(1, 2, 2), float32] {
  @func_4373() /* ty=Tensor[(1, 2, 2), float32] */
}

def @func_6476() -> Tensor[(4, 2, 2), uint16] {
  %736 = @func_5164() /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %736.0
}

def @func_5064() -> (Tensor[(4, 2, 2), uint16],) {
  %737 = @func_629() /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(1, 2, 2), float64]) */;
  %738 = %737.0;
  (%738,)
}

def @func_3627() -> (Tensor[(6, 2, 2), int16],) {
  %739 = @func_475() /* ty=(Tensor[(6, 2, 2), int16],) */;
  %740 = %739.0;
  (%740,)
}

def @func_1206(%var_1186: Tensor[(15, 5, 11), float32]) -> (Tensor[(15, 5, 11), float32], Tensor[(6, 2, 2), int16]) {
  %741 = cast(%var_1186, dtype="float32") /* ty=Tensor[(15, 5, 11), float32] */;
  %742 = @func_475() /* ty=(Tensor[(6, 2, 2), int16],) */;
  %743 = acos(%741) /* ty=Tensor[(15, 5, 11), float32] */;
  %744 = %742.0;
  (%743, %744)
}

def @func_5395(%var_5390: Tensor[(9, 12, 2), int8], %var_5391: Tensor[(9, 12, 2), int8]) -> (Tensor[(9, 12, 2), int8],) {
  %745 = cast(%var_5391, dtype="int8") /* ty=Tensor[(9, 12, 2), int8] */;
  %746 = shape_of(%var_5390, dtype="int32") /* ty=Tensor[(3), int32] */;
  %747 = cast(%var_5390, dtype="int8") /* ty=Tensor[(9, 12, 2), int8] */;
  %748 = dyn.reshape(%745, %746, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %749 = bitwise_or(%747, %748) /* ty=Tensor[(9, 12, 2), int8] */;
  (%749,)
}

def @func_5354(%var_5319: Tensor[(168), uint32], %var_5320: Tensor[(28), float64], %var_5352: Tensor[(22, 2), float32]) -> (Tensor[(4, 2, 2), uint16], Tensor[(12, 7, 2), bool], Tensor[(168), uint32], Tensor[(28), float64], Tensor[(11, 2, 2), float64], Tensor[(22, 2), float32]) {
  %750 = @func_5043() /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %751 = cast(%var_5319, dtype="uint32") /* ty=Tensor[(168), uint32] */;
  %752 = cast(%var_5319, dtype="uint32") /* ty=Tensor[(168), uint32] */;
  %753 = cast(%var_5320, dtype="float64") /* ty=Tensor[(28), float64] */;
  %754 = reshape(%751, newshape=[12, 7, 2]) /* ty=Tensor[(12, 7, 2), uint32] */;
  %755 = reshape(%752, newshape=[12, 7, 2]) /* ty=Tensor[(12, 7, 2), uint32] */;
  %756 = reshape(%753, newshape=[28]) /* ty=Tensor[(28), float64] */;
  %757 = @func_1450(%754, %755, %756) /* ty=(Tensor[(12, 7, 2), bool], Tensor[(7, 2, 2), uint8], Tensor[(28), float64], Tensor[(4, 2, 2), bool], Tensor[(110), float64], Tensor[(490, 1), int16], Tensor[(10, 11, 490), bool]) */;
  %758 = cast(%var_5352, dtype="float32") /* ty=Tensor[(22, 2), float32] */;
  %759 = reshape(%758, newshape=[11, 2, 2]) /* ty=Tensor[(11, 2, 2), float32] */;
  %760 = %750.0;
  %761 = %757.0;
  %762 = @func_681(%759) /* ty=Tensor[(11, 2, 2), float64] */;
  (%760, %761, %var_5319, %var_5320, %762, %var_5352)
}

def @func_4444() -> Tensor[(4, 2, 2), uint16] {
  %763 = @func_1636() /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %763.0
}

def @func_4105() -> (Tensor[(4, 2, 2), uint16],) {
  %764 = @func_437() /* ty=Tensor[(4, 2, 2), uint16] */;
  (%764,)
}

def @func_7631(%var_7620: Tensor[(4, 2, 2), uint16], %var_7627: Tensor[(768), float32]) -> (Tensor[(4, 2, 2), int8], Tensor[(4, 2, 2), uint16], Tensor[(768), float32]) {
  %765 = @func_4587() /* ty=(Tensor[(4, 2, 2), bool], Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16]) */;
  %766 = %765.2;
  %767 = cast(%var_7620, dtype="int8") /* ty=Tensor[(4, 2, 2), int8] */;
  %768 = shape_of(%766, dtype="int32") /* ty=Tensor[(3), int32] */;
  %769 = cast(%766, dtype="int8") /* ty=Tensor[(4, 2, 2), int8] */;
  %770 = dyn.reshape(%767, %768, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %771 = cast(%var_7627, dtype="float32") /* ty=Tensor[(768), float32] */;
  %772 = reshape(%771, newshape=[768, 1]) /* ty=Tensor[(768, 1), float32] */;
  %773 = @func_4897(%772) /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16], Tensor[(1, 2, 2), float32], Tensor[(8, 12, 8), int16], Tensor[(768, 540), int8]) */;
  %774 = multiply(%769, %770) /* ty=Tensor[(4, 2, 2), int8] */;
  %775 = %773.0;
  (%774, %775, %var_7627)
}

def @func_965(%var_959: int16, %var_960: Tensor[(14, 5, 7), int16]) -> (Tensor[(14, 5, 7), int16],) {
  %776 = cast(%var_959, dtype="int16") /* ty=int16 */;
  %777 = cast(%var_960, dtype="int16") /* ty=Tensor[(14, 5, 7), int16] */;
  %778 = bitwise_and(%776, %777) /* ty=Tensor[(14, 5, 7), int16] */;
  (%778,)
}

def @func_4192(%var_4166: int16, %var_4167: Tensor[(490), int16], %var_4187: Tensor[(490), float64]) -> (Tensor[(6, 2, 2), int16], Tensor[(14, 5, 7), int16], int16, Tensor[(490), uint8]) {
  %779 = @func_3627() /* ty=(Tensor[(6, 2, 2), int16],) */;
  %780 = cast(%var_4166, dtype="int16") /* ty=int16 */;
  %781 = cast(%var_4167, dtype="int16") /* ty=Tensor[(490), int16] */;
  %782 = reshape(%780, newshape=[]) /* ty=int16 */;
  %783 = reshape(%781, newshape=[14, 5, 7]) /* ty=Tensor[(14, 5, 7), int16] */;
  %784 = @func_965(%782, %783) /* ty=(Tensor[(14, 5, 7), int16],) */;
  %785 = cast(%var_4167, dtype="float64") /* ty=Tensor[(490), float64] */;
  %786 = sinh(%785) /* ty=Tensor[(490), float64] */;
  %787 = cast(%var_4187, dtype="uint8") /* ty=Tensor[(490), uint8] */;
  %788 = shape_of(%786, dtype="int32") /* ty=Tensor[(1), int32] */;
  %789 = cast(%786, dtype="uint8") /* ty=Tensor[(490), uint8] */;
  %790 = dyn.reshape(%787, %788, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %791 = %779.0;
  %792 = %784.0;
  %793 = right_shift(%789, %790) /* ty=Tensor[(490), uint8] */;
  (%791, %792, %var_4166, %793)
}

def @func_6972(%var_6917: Tensor[(15, 2, 2), float32], %var_6929: Tensor[(56), float32], %var_6930: Tensor[(216), int8]) -> (Tensor[(15, 2, 2), float64], Tensor[(4, 2, 2), uint16], Tensor[(?, 2, 2), float32], Tensor[(56), float32], Tensor[(216), int8], Tensor[(15, 2, 2), float32]) {
  %794 = @func_1929() /* ty=(Tensor[(1, 2, 2), float32],) */;
  %795 = %794.0;
  %796 = cast(%795, dtype="float64") /* ty=Tensor[(1, 2, 2), float64] */;
  %797 = cast(%var_6917, dtype="float64") /* ty=Tensor[(15, 2, 2), float64] */;
  %798 = @func_1661() /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16]) */;
  %799 = cast(%var_6929, dtype="float32") /* ty=Tensor[(56), float32] */;
  %800 = cast(%var_6930, dtype="int8") /* ty=Tensor[(216), int8] */;
  %801 = reshape(%799, newshape=[14, 2, 2]) /* ty=Tensor[(14, 2, 2), float32] */;
  %802 = reshape(%800, newshape=[216]) /* ty=Tensor[(216), int8] */;
  %803 = @func_6048(%801, %802) /* ty=(Tensor[(14, 2, 2), uint16], Tensor[(4, 2, 2), uint16], Tensor[(?, 2, 2), float32], Tensor[(9, 12, 2), int8], Tensor[(216), int8], Tensor[(14, 2, 2), float64]) */;
  %804 = cast(%var_6917, dtype="float32") /* ty=Tensor[(15, 2, 2), float32] */;
  %805 = cast(%795, dtype="float32") /* ty=Tensor[(1, 2, 2), float32] */;
  %806 = subtract(%796, %797) /* ty=Tensor[(15, 2, 2), float64] */;
  %807 = %798.1;
  %808 = %803.2;
  %809 = floor_mod(%804, %805) /* ty=Tensor[(15, 2, 2), float32] */;
  (%806, %807, %808, %var_6929, %var_6930, %809)
}

def @func_202(%var_181: Tensor[(4, 3, 6), int8]) -> (Tensor[(4, 3, 6), int8],) {
  %810 = cast(%var_181, dtype="int8") /* ty=Tensor[(4, 3, 6), int8] */;
  %811 = shape_of(meta[relay.Constant][42] /* ty=Tensor[(4, 3, 6), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %812 = cast(meta[relay.Constant][42] /* ty=Tensor[(4, 3, 6), int8] */, dtype="int8") /* ty=Tensor[(4, 3, 6), int8] */;
  %813 = dyn.reshape(%810, %811, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %814 = minimum(%812, %813) /* ty=Tensor[(4, 3, 6), int8] */;
  (%814,)
}

def @func_8075(%var_8073: Tensor[(72), int8]) -> (Tensor[(4, 2, 2), uint16], Tensor[(8, 12, 8), float32], Tensor[(72), int8]) {
  %815 = cast(%var_8073, dtype="int8") /* ty=Tensor[(72), int8] */;
  %816 = cast(%var_8073, dtype="int8") /* ty=Tensor[(72), int8] */;
  %817 = reshape(%815, newshape=[72]) /* ty=Tensor[(72), int8] */;
  %818 = reshape(%816, newshape=[72]) /* ty=Tensor[(72), int8] */;
  %819 = @func_2042(%817, %818) /* ty=(Tensor[(72), bool], Tensor[(4, 2, 2), uint16], Tensor[(8, 12, 8), float32], Tensor[(72), bool], Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16], Tensor[(3, 420), bool]) */;
  %820 = @func_6737() /* ty=Tensor[(4, 2, 2), uint16] */;
  %821 = %819.2;
  (%820, %821, %var_8073)
}

def @func_6457() -> Tensor[(4, 2, 2), float64] {
  %822 = @func_861() /* ty=(Tensor[(4, 2, 2), float64],) */;
  %822.0
}

def @func_6710(%var_6702: Tensor[(7, 12, 16), bool]) -> (Tensor[(7, 12, 16), bool],) {
  %823 = cast(meta[relay.Constant][43] /* ty=Tensor[(7, 12, 16), bool] */, dtype="bool") /* ty=Tensor[(7, 12, 16), bool] */;
  %824 = shape_of(%var_6702, dtype="int32") /* ty=Tensor[(3), int32] */;
  %825 = cast(%var_6702, dtype="bool") /* ty=Tensor[(7, 12, 16), bool] */;
  %826 = dyn.reshape(%823, %824, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %827 = logical_or(%825, %826) /* ty=Tensor[(7, 12, 16), bool] */;
  (%827,)
}

def @func_4850(%var_4799: Tensor[(1, 7, 7), float64]) -> (Tensor[(4, 2, 2), uint16], Tensor[(?, 7, 7), uint8], Tensor[(?, 7, 7), uint16], Tensor[(7, 2, 2), uint8], Tensor[(28), float64], Tensor[(?, 7, 7), float32]) {
  %828 = @func_4211() /* ty=(Tensor[(1, 2, 2), float32], Tensor[(4, 2, 2), uint16]) */;
  %829 = cast(%var_4799, dtype="float64") /* ty=Tensor[(1, 7, 7), float64] */;
  %830 = log2(%829) /* ty=Tensor[(1, 7, 7), float64] */;
  %831 = cast(%var_4799, dtype="float64") /* ty=Tensor[(1, 7, 7), float64] */;
  %832 = shape_of(%830, dtype="int32") /* ty=Tensor[(3), int32] */;
  %833 = cast(%830, dtype="float64") /* ty=Tensor[(1, 7, 7), float64] */;
  %834 = dyn.reshape(%831, %832, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %835 = subtract(%833, %834) /* ty=Tensor[(?, 7, 7), float64] */;
  %836 = cast(%830, dtype="uint8") /* ty=Tensor[(1, 7, 7), uint8] */;
  %837 = shape_of(%835, dtype="int32") /* ty=Tensor[(3), int32] */;
  %838 = cast(%835, dtype="uint8") /* ty=Tensor[(?, 7, 7), uint8] */;
  %839 = dyn.reshape(%836, %837, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %840 = cast(%830, dtype="uint16") /* ty=Tensor[(1, 7, 7), uint16] */;
  %841 = shape_of(%835, dtype="int32") /* ty=Tensor[(3), int32] */;
  %842 = cast(%835, dtype="uint16") /* ty=Tensor[(?, 7, 7), uint16] */;
  %843 = dyn.reshape(%840, %841, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %844 = cast(meta[relay.Constant][44] /* ty=Tensor[(28), float64] */, dtype="float64") /* ty=Tensor[(28), float64] */;
  %845 = reshape(%844, newshape=[7, 2, 2]) /* ty=Tensor[(7, 2, 2), float64] */;
  %846 = @func_1387(%845) /* ty=(Tensor[(7, 2, 2), uint8],) */;
  %847 = cast(%835, dtype="float32") /* ty=Tensor[(?, 7, 7), float32] */;
  %848 = %828.1;
  %849 = bitwise_and(%838, %839) /* ty=Tensor[(?, 7, 7), uint8] */;
  %850 = add(%842, %843) /* ty=Tensor[(?, 7, 7), uint16] */;
  %851 = %846.0;
  %852 = tan(%847) /* ty=Tensor[(?, 7, 7), float32] */;
  (%848, %849, %850, %851, meta[relay.Constant][44] /* ty=Tensor[(28), float64] */, %852)
}

def @func_3727() -> (Tensor[(4, 2, 2), bool], Tensor[(4, 2, 2), float64]) {
  %853 = @func_401() /* ty=(Tensor[(4, 2, 2), bool], Tensor[(1, 2, 2), float32], Tensor[(1, 2, 2), float32]) */;
  %854 = %853.0;
  %855 = cast(%854, dtype="uint16") /* ty=Tensor[(4, 2, 2), uint16] */;
  %856 = reshape(%855, newshape=[4, 2, 2]) /* ty=Tensor[(4, 2, 2), uint16] */;
  %857 = @func_3407(%856) /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), bool]) */;
  %858 = %857.1;
  %859 = cast(%858, dtype="float64") /* ty=Tensor[(4, 2, 2), float64] */;
  %860 = sinh(%859) /* ty=Tensor[(4, 2, 2), float64] */;
  (%854, %860)
}

def @func_2042(%var_2003: Tensor[(72), int8], %var_2025: Tensor[(72), int8]) -> (Tensor[(72), bool], Tensor[(4, 2, 2), uint16], Tensor[(8, 12, 8), float32], Tensor[(72), bool], Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16], Tensor[(3, 420), bool]) {
  %861 = @func_245() /* ty=(Tensor[(1, 2, 2), float32], Tensor[(4, 3, 6), int8], Tensor[(72), int8]) */;
  %862 = %861.2;
  %863 = cast(%var_2003, dtype="bool") /* ty=Tensor[(72), bool] */;
  %864 = shape_of(%862, dtype="int32") /* ty=Tensor[(1), int32] */;
  %865 = cast(%862, dtype="bool") /* ty=Tensor[(72), bool] */;
  %866 = dyn.reshape(%863, %864, newshape=[]) /* ty=Tensor[(?), bool] */;
  %867 = cast(%var_2025, dtype="bool") /* ty=Tensor[(72), bool] */;
  %868 = shape_of(%var_2003, dtype="int32") /* ty=Tensor[(1), int32] */;
  %869 = cast(%var_2003, dtype="bool") /* ty=Tensor[(72), bool] */;
  %870 = dyn.reshape(%867, %868, newshape=[]) /* ty=Tensor[(?), bool] */;
  %871 = @func_898() /* ty=(Tensor[(8, 12, 8), float32], Tensor[(1, 2, 2), float32], Tensor[(4, 2, 2), uint16]) */;
  %872 = cast(meta[relay.Constant][45] /* ty=Tensor[(3, 420), bool] */, dtype="bool") /* ty=Tensor[(3, 420), bool] */;
  %873 = reshape(%872, newshape=[9, 10, 14]) /* ty=Tensor[(9, 10, 14), bool] */;
  %874 = @func_822(%873) /* ty=(Tensor[(6, 2, 2), int16], Tensor[(9, 10, 14), bool], Tensor[(4, 2, 2), uint16]) */;
  %875 = greater(%865, %866) /* ty=Tensor[(72), bool] */;
  %876 = @func_590() /* ty=Tensor[(4, 2, 2), uint16] */;
  %877 = @func_1327() /* ty=Tensor[(8, 12, 8), float32] */;
  %878 = less(%869, %870) /* ty=Tensor[(72), bool] */;
  %879 = %871.2;
  %880 = %874.2;
  (%875, %876, %877, %878, %879, %880, meta[relay.Constant][45] /* ty=Tensor[(3, 420), bool] */)
}

def @func_4041(%var_4039: Tensor[(16), uint16]) -> (Tensor[(8, 12, 8), float32], Tensor[(4, 2, 2), uint16], Tensor[(16), uint16]) {
  %881 = cast(%var_4039, dtype="uint16") /* ty=Tensor[(16), uint16] */;
  %882 = reshape(%881, newshape=[4, 2, 2]) /* ty=Tensor[(4, 2, 2), uint16] */;
  %883 = @func_1088(%882) /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %884 = @func_1327() /* ty=Tensor[(8, 12, 8), float32] */;
  %885 = %883.0;
  (%884, %885, %var_4039)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_7775() -> (Tensor[(4, 2, 2), uint16], Tensor[(12, 5, 14), float64], Tensor[(840), float64], Tensor[(6, 2, 2), int16]) {
  %7 = fn () -> (Tensor[(4, 2, 2), uint16], Tensor[(12, 5, 14), float64], Tensor[(840), float64], Tensor[(6, 2, 2), int16]) {
    %0 = @func_1849() /* ty=(Tensor[(4, 2, 2), uint16],) */;
    %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(840), float64] */, dtype="float64") /* ty=Tensor[(840), float64] */;
    %2 = reshape(%1, newshape=[12, 5, 14]) /* ty=Tensor[(12, 5, 14), float64] */;
    %3 = @func_475() /* ty=(Tensor[(6, 2, 2), int16],) */;
    %4 = %0.0;
    %5 = @func_3534(%2) /* ty=Tensor[(12, 5, 14), float64] */;
    %6 = %3.0;
    (%4, %5, meta[relay.Constant][0] /* ty=Tensor[(840), float64] */, %6)
  };
  %7() /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(12, 5, 14), float64], Tensor[(840), float64], Tensor[(6, 2, 2), int16]) */
}

def @func_6051(%var_6049: Tensor[(14, 2, 2), float32], %var_6050: Tensor[(216), int8]) -> (Tensor[(14, 2, 2), uint16], Tensor[(4, 2, 2), uint16], Tensor[(?, 2, 2), float32], Tensor[(9, 12, 2), int8], Tensor[(216), int8], Tensor[(14, 2, 2), float64]) {
  %30 = fn (%var_6014: Tensor[(14, 2, 2), float32], %var_6037: Tensor[(216), int8]) -> (Tensor[(14, 2, 2), uint16], Tensor[(4, 2, 2), uint16], Tensor[(?, 2, 2), float32], Tensor[(9, 12, 2), int8], Tensor[(216), int8], Tensor[(14, 2, 2), float64]) {
    %8 = @func_4120() /* ty=(Tensor[(1, 2, 2), float32],) */;
    %9 = %8.0;
    %10 = cast(%9, dtype="float32") /* ty=Tensor[(1, 2, 2), float32] */;
    %11 = exp(%10) /* ty=Tensor[(1, 2, 2), float32] */;
    %12 = cast(%11, dtype="uint16") /* ty=Tensor[(1, 2, 2), uint16] */;
    %13 = cast(%var_6014, dtype="uint16") /* ty=Tensor[(14, 2, 2), uint16] */;
    %14 = cast(%11, dtype="float32") /* ty=Tensor[(1, 2, 2), float32] */;
    %15 = shape_of(%9, dtype="int32") /* ty=Tensor[(3), int32] */;
    %16 = cast(%9, dtype="float32") /* ty=Tensor[(1, 2, 2), float32] */;
    %17 = dyn.reshape(%14, %15, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %18 = cast(%var_6037, dtype="int8") /* ty=Tensor[(216), int8] */;
    %19 = cast(%var_6037, dtype="int8") /* ty=Tensor[(216), int8] */;
    %20 = reshape(%18, newshape=[9, 12, 2]) /* ty=Tensor[(9, 12, 2), int8] */;
    %21 = reshape(%19, newshape=[9, 12, 2]) /* ty=Tensor[(9, 12, 2), int8] */;
    %22 = @func_5395(%20, %21) /* ty=(Tensor[(9, 12, 2), int8],) */;
    %23 = cast(%11, dtype="float64") /* ty=Tensor[(1, 2, 2), float64] */;
    %24 = cast(%var_6014, dtype="float64") /* ty=Tensor[(14, 2, 2), float64] */;
    %25 = subtract(%12, %13) /* ty=Tensor[(14, 2, 2), uint16] */;
    %26 = @func_2419() /* ty=Tensor[(4, 2, 2), uint16] */;
    %27 = multiply(%16, %17) /* ty=Tensor[(?, 2, 2), float32] */;
    %28 = %22.0;
    %29 = floor_divide(%23, %24) /* ty=Tensor[(14, 2, 2), float64] */;
    (%25, %26, %27, %28, %var_6037, %29)
  };
  %30(%var_6049, %var_6050) /* ty=(Tensor[(14, 2, 2), uint16], Tensor[(4, 2, 2), uint16], Tensor[(?, 2, 2), float32], Tensor[(9, 12, 2), int8], Tensor[(216), int8], Tensor[(14, 2, 2), float64]) */
}

def @func_1091(%var_1089: Tensor[(4, 2, 2), uint16]) -> (Tensor[(4, 2, 2), uint16],) {
  @func_1088(%var_1089) /* ty=(Tensor[(4, 2, 2), uint16],) */
}

def @func_6120(%var_6118: Tensor[(2184), float32]) -> (Tensor[(2184), float32], Tensor[(?, 16), int16]) {
  @func_6117(%var_6118) /* ty=(Tensor[(2184), float32], Tensor[(?, 16), int16]) */
}

def @func_2499(%var_2497: Tensor[(4, 2, 2), uint16]) -> (Tensor[(1, 2, 2), float64], Tensor[(4, 2, 2), float32]) {
  @func_2496(%var_2497) /* ty=(Tensor[(1, 2, 2), float64], Tensor[(4, 2, 2), float32]) */
}

def @func_4122() -> (Tensor[(1, 2, 2), float32],) {
  @func_4120() /* ty=(Tensor[(1, 2, 2), float32],) */
}

def @func_5615(%var_5609: Tensor[(7, 2, 16), uint64], %var_5610: Tensor[(7, 2, 16), uint64]) -> (Tensor[(7, 2, 16), bool],) {
  %31 = cast(%var_5610, dtype="bool") /* ty=Tensor[(7, 2, 16), bool] */;
  %32 = shape_of(%var_5609, dtype="int32") /* ty=Tensor[(3), int32] */;
  %33 = cast(%var_5609, dtype="bool") /* ty=Tensor[(7, 2, 16), bool] */;
  %34 = dyn.reshape(%31, %32, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %35 = equal(%33, %34) /* ty=Tensor[(7, 2, 16), bool] */;
  (%35,)
}

def @func_5619(%var_5617: Tensor[(7, 2, 16), uint64], %var_5618: Tensor[(7, 2, 16), uint64]) -> (Tensor[(7, 2, 16), bool],) {
  @func_5615(%var_5617, %var_5618) /* ty=(Tensor[(7, 2, 16), bool],) */
}

def @func_965(%var_959: int16, %var_960: Tensor[(14, 5, 7), int16]) -> (Tensor[(14, 5, 7), int16],) {
  %36 = cast(%var_959, dtype="int16") /* ty=int16 */;
  %37 = cast(%var_960, dtype="int16") /* ty=Tensor[(14, 5, 7), int16] */;
  %38 = bitwise_and(%36, %37) /* ty=Tensor[(14, 5, 7), int16] */;
  (%38,)
}

def @func_5532() -> (Tensor[(4, 2, 2), float32],) {
  @func_5530() /* ty=(Tensor[(4, 2, 2), float32],) */
}

def @func_5101() -> Tensor[(1, 2, 2), float32] {
  %39 = @func_1929() /* ty=(Tensor[(1, 2, 2), float32],) */;
  %39.0
}

def @func_6664() -> Tensor[(8, 12, 8), float32] {
  %40 = @func_6385() /* ty=(Tensor[(4, 2, 2), float32], Tensor[(4, 2, 2), uint16], Tensor[(8, 12, 8), float32], int16, Tensor[(490), int16]) */;
  %40.2
}

def @func_6573() -> (Tensor[(4, 2, 2), float64], Tensor[(1, 2, 2), float32]) {
  @func_6571() /* ty=(Tensor[(4, 2, 2), float64], Tensor[(1, 2, 2), float32]) */
}

def @func_6478() -> Tensor[(4, 2, 2), uint16] {
  @func_6476() /* ty=Tensor[(4, 2, 2), uint16] */
}

def @func_7085(%var_7082: Tensor[(168), uint32], %var_7083: Tensor[(44), float32], %var_7084: Tensor[(168), uint32]) -> (Tensor[(4, 2, 2), float64], Tensor[(12, 7, 2), bool], Tensor[(28), float64], Tensor[(44), float32], Tensor[(168), bool], Tensor[(12, 5, 14), float64], Tensor[(840), float64], Tensor[(6, 2, 2), int16]) {
  @func_7080(%var_7082, %var_7083, %var_7084) /* ty=(Tensor[(4, 2, 2), float64], Tensor[(12, 7, 2), bool], Tensor[(28), float64], Tensor[(44), float32], Tensor[(168), bool], Tensor[(12, 5, 14), float64], Tensor[(840), float64], Tensor[(6, 2, 2), int16]) */
}

def @func_7168() -> Tensor[(9, 10, 14), bool] {
  %41 = @func_643() /* ty=(Tensor[(9, 10, 14), bool],) */;
  %41.0
}

def @func_5399(%var_5397: Tensor[(9, 12, 2), int8], %var_5398: Tensor[(9, 12, 2), int8]) -> (Tensor[(9, 12, 2), int8],) {
  @func_5395(%var_5397, %var_5398) /* ty=(Tensor[(9, 12, 2), int8],) */
}

def @func_1636() -> (Tensor[(4, 2, 2), uint16],) {
  %42 = @func_629() /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(1, 2, 2), float64]) */;
  %43 = %42.0;
  (%43,)
}

def @func_4852(%var_4851: Tensor[(1, 7, 7), float64]) -> (Tensor[(4, 2, 2), uint16], Tensor[(?, 7, 7), uint8], Tensor[(?, 7, 7), uint16], Tensor[(7, 2, 2), uint8], Tensor[(28), float64], Tensor[(?, 7, 7), float32]) {
  %69 = fn (%var_4799: Tensor[(1, 7, 7), float64]) -> (Tensor[(4, 2, 2), uint16], Tensor[(?, 7, 7), uint8], Tensor[(?, 7, 7), uint16], Tensor[(7, 2, 2), uint8], Tensor[(28), float64], Tensor[(?, 7, 7), float32]) {
    %44 = @func_4211() /* ty=(Tensor[(1, 2, 2), float32], Tensor[(4, 2, 2), uint16]) */;
    %45 = cast(%var_4799, dtype="float64") /* ty=Tensor[(1, 7, 7), float64] */;
    %46 = log2(%45) /* ty=Tensor[(1, 7, 7), float64] */;
    %47 = cast(%var_4799, dtype="float64") /* ty=Tensor[(1, 7, 7), float64] */;
    %48 = shape_of(%46, dtype="int32") /* ty=Tensor[(3), int32] */;
    %49 = cast(%46, dtype="float64") /* ty=Tensor[(1, 7, 7), float64] */;
    %50 = dyn.reshape(%47, %48, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %51 = subtract(%49, %50) /* ty=Tensor[(?, 7, 7), float64] */;
    %52 = cast(%46, dtype="uint8") /* ty=Tensor[(1, 7, 7), uint8] */;
    %53 = shape_of(%51, dtype="int32") /* ty=Tensor[(3), int32] */;
    %54 = cast(%51, dtype="uint8") /* ty=Tensor[(?, 7, 7), uint8] */;
    %55 = dyn.reshape(%52, %53, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %56 = cast(%46, dtype="uint16") /* ty=Tensor[(1, 7, 7), uint16] */;
    %57 = shape_of(%51, dtype="int32") /* ty=Tensor[(3), int32] */;
    %58 = cast(%51, dtype="uint16") /* ty=Tensor[(?, 7, 7), uint16] */;
    %59 = dyn.reshape(%56, %57, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %60 = cast(meta[relay.Constant][1] /* ty=Tensor[(28), float64] */, dtype="float64") /* ty=Tensor[(28), float64] */;
    %61 = reshape(%60, newshape=[7, 2, 2]) /* ty=Tensor[(7, 2, 2), float64] */;
    %62 = @func_1387(%61) /* ty=(Tensor[(7, 2, 2), uint8],) */;
    %63 = cast(%51, dtype="float32") /* ty=Tensor[(?, 7, 7), float32] */;
    %64 = %44.1;
    %65 = bitwise_and(%54, %55) /* ty=Tensor[(?, 7, 7), uint8] */;
    %66 = add(%58, %59) /* ty=Tensor[(?, 7, 7), uint16] */;
    %67 = %62.0;
    %68 = tan(%63) /* ty=Tensor[(?, 7, 7), float32] */;
    (%64, %65, %66, %67, meta[relay.Constant][1] /* ty=Tensor[(28), float64] */, %68)
  };
  %69(%var_4851) /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(?, 7, 7), uint8], Tensor[(?, 7, 7), uint16], Tensor[(7, 2, 2), uint8], Tensor[(28), float64], Tensor[(?, 7, 7), float32]) */
}

def @func_631() -> (Tensor[(4, 2, 2), uint16], Tensor[(1, 2, 2), float64]) {
  @func_629() /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(1, 2, 2), float64]) */
}

def @func_592() -> Tensor[(4, 2, 2), uint16] {
  @func_590() /* ty=Tensor[(4, 2, 2), uint16] */
}

def @func_2598(%var_2591: Tensor[(4, 2, 2), uint16]) -> Tensor[(4, 2, 2), float64] {
  %70 = @func_2412() /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %71 = %70.0;
  %72 = cast(%var_2591, dtype="float64") /* ty=Tensor[(4, 2, 2), float64] */;
  %73 = shape_of(%71, dtype="int32") /* ty=Tensor[(3), int32] */;
  %74 = cast(%71, dtype="float64") /* ty=Tensor[(4, 2, 2), float64] */;
  %75 = dyn.reshape(%72, %73, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  maximum(%74, %75) /* ty=Tensor[(4, 2, 2), float64] */
}

def @func_825(%var_823: Tensor[(9, 10, 14), bool]) -> (Tensor[(6, 2, 2), int16], Tensor[(9, 10, 14), bool], Tensor[(4, 2, 2), uint16]) {
  @func_822(%var_823) /* ty=(Tensor[(6, 2, 2), int16], Tensor[(9, 10, 14), bool], Tensor[(4, 2, 2), uint16]) */
}

def @func_210() -> Tensor[(1, 2, 2), float32] {
  %76 = cast(meta[relay.Constant][2] /* ty=Tensor[(1, 2, 2), float32] */, dtype="float32") /* ty=Tensor[(1, 2, 2), float32] */;
  sinh(%76) /* ty=Tensor[(1, 2, 2), float32] */
}

def @func_7307() -> (Tensor[(4, 2, 2), uint16], Tensor[(1, 2, 2), float32], Tensor[(7, 2, 16), bool], Tensor[(224), uint64], Tensor[(1, 2, 2), float32]) {
  %87 = fn () -> (Tensor[(4, 2, 2), uint16], Tensor[(1, 2, 2), float32], Tensor[(7, 2, 16), bool], Tensor[(224), uint64], Tensor[(1, 2, 2), float32]) {
    %77 = cast(meta[relay.Constant][3] /* ty=Tensor[(224), uint64] */, dtype="uint64") /* ty=Tensor[(224), uint64] */;
    %78 = cast(meta[relay.Constant][3] /* ty=Tensor[(224), uint64] */, dtype="uint64") /* ty=Tensor[(224), uint64] */;
    %79 = reshape(%77, newshape=[7, 2, 16]) /* ty=Tensor[(7, 2, 16), uint64] */;
    %80 = reshape(%78, newshape=[7, 2, 16]) /* ty=Tensor[(7, 2, 16), uint64] */;
    %81 = @func_5615(%79, %80) /* ty=(Tensor[(7, 2, 16), bool],) */;
    %82 = @func_547() /* ty=(Tensor[(1, 2, 2), float32], Tensor[(1, 2, 2), float32]) */;
    %83 = @func_4319() /* ty=Tensor[(4, 2, 2), uint16] */;
    %84 = @func_210() /* ty=Tensor[(1, 2, 2), float32] */;
    %85 = %81.0;
    %86 = %82.0;
    (%83, %84, %85, meta[relay.Constant][3] /* ty=Tensor[(224), uint64] */, %86)
  };
  %87() /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(1, 2, 2), float32], Tensor[(7, 2, 16), bool], Tensor[(224), uint64], Tensor[(1, 2, 2), float32]) */
}

def @func_5856() -> (Tensor[(1, 2, 2), float32], Tensor[(6, 2, 2), int16], Tensor[(1, 2, 2), float32], Tensor[(4, 2, 2), uint16], Tensor[(7, 2, 16), bool], Tensor[(224), uint64], Tensor[(?, 2, 2), bool]) {
  @func_5854() /* ty=(Tensor[(1, 2, 2), float32], Tensor[(6, 2, 2), int16], Tensor[(1, 2, 2), float32], Tensor[(4, 2, 2), uint16], Tensor[(7, 2, 16), bool], Tensor[(224), uint64], Tensor[(?, 2, 2), bool]) */
}

def @func_899() -> (Tensor[(8, 12, 8), float32], Tensor[(1, 2, 2), float32], Tensor[(4, 2, 2), uint16]) {
  %94 = fn () -> (Tensor[(8, 12, 8), float32], Tensor[(1, 2, 2), float32], Tensor[(4, 2, 2), uint16]) {
    %88 = cast(meta[relay.Constant][4] /* ty=Tensor[(8, 12, 8), float32] */, dtype="float32") /* ty=Tensor[(8, 12, 8), float32] */;
    %89 = @func_401() /* ty=(Tensor[(4, 2, 2), bool], Tensor[(1, 2, 2), float32], Tensor[(1, 2, 2), float32]) */;
    %90 = @func_629() /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(1, 2, 2), float64]) */;
    %91 = asinh(%88) /* ty=Tensor[(8, 12, 8), float32] */;
    %92 = %89.1;
    %93 = %90.0;
    (%91, %92, %93)
  };
  %94() /* ty=(Tensor[(8, 12, 8), float32], Tensor[(1, 2, 2), float32], Tensor[(4, 2, 2), uint16]) */
}

def @func_4760(%var_4753: Tensor[(2184), float32]) -> (Tensor[(2, 15, 15), bool], Tensor[(1, 2, 2), float64], Tensor[(1, 16), uint16], Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), bool], Tensor[(14, 12, 13), float32], Tensor[(2184), float32], Tensor[(4, 2, 2), uint16]) {
  %95 = cast(meta[relay.Constant][6] /* ty=Tensor[(2, 15, 15), uint8] */, dtype="bool") /* ty=Tensor[(2, 15, 15), bool] */;
  %96 = shape_of(meta[relay.Constant][5] /* ty=Tensor[(2, 15, 15), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %97 = cast(meta[relay.Constant][5] /* ty=Tensor[(2, 15, 15), uint8] */, dtype="bool") /* ty=Tensor[(2, 15, 15), bool] */;
  %98 = dyn.reshape(%95, %96, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %99 = cast(meta[relay.Constant][7] /* ty=Tensor[(1, 16), uint16] */, dtype="uint16") /* ty=Tensor[(1, 16), uint16] */;
  %100 = reshape(%99, newshape=[4, 2, 2]) /* ty=Tensor[(4, 2, 2), uint16] */;
  %101 = @func_2496(%100) /* ty=(Tensor[(1, 2, 2), float64], Tensor[(4, 2, 2), float32]) */;
  %102 = @func_4227() /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %103 = @func_4587() /* ty=(Tensor[(4, 2, 2), bool], Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16]) */;
  %104 = cast(%var_4753, dtype="float32") /* ty=Tensor[(2184), float32] */;
  %105 = reshape(%104, newshape=[14, 12, 13]) /* ty=Tensor[(14, 12, 13), float32] */;
  %106 = @func_4105() /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %107 = greater_equal(%97, %98) /* ty=Tensor[(2, 15, 15), bool] */;
  %108 = %101.0;
  %109 = %102.0;
  %110 = %103.0;
  %111 = @func_2860(%105) /* ty=Tensor[(14, 12, 13), float32] */;
  %112 = %106.0;
  (%107, %108, meta[relay.Constant][7] /* ty=Tensor[(1, 16), uint16] */, %109, %110, %111, %var_4753, %112)
}

def @func_4478() -> (Tensor[(4, 2, 2), uint16], Tensor[(8, 12, 8), float32]) {
  %116 = fn () -> (Tensor[(4, 2, 2), uint16], Tensor[(8, 12, 8), float32]) {
    %113 = @func_1636() /* ty=(Tensor[(4, 2, 2), uint16],) */;
    %114 = %113.0;
    %115 = @func_1327() /* ty=Tensor[(8, 12, 8), float32] */;
    (%114, %115)
  };
  %116() /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(8, 12, 8), float32]) */
}

def @func_3764(%var_3763: Tensor[(1, 168), uint32]) -> (Tensor[(4, 2, 2), uint16], Tensor[(14, 2), float64], Tensor[(1, 168), uint32]) {
  %123 = fn (%var_3754: Tensor[(1, 168), uint32]) -> (Tensor[(4, 2, 2), uint16], Tensor[(14, 2), float64], Tensor[(1, 168), uint32]) {
    %117 = @func_2412() /* ty=(Tensor[(4, 2, 2), uint16],) */;
    %118 = cast(%var_3754, dtype="uint32") /* ty=Tensor[(1, 168), uint32] */;
    %119 = reshape(%118, newshape=[168]) /* ty=Tensor[(168), uint32] */;
    %120 = @func_1990(%119) /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(14, 2), float64], Tensor[(12, 7, 2), bool], Tensor[(168), uint32], Tensor[(7, 2, 2), int16]) */;
    %121 = %117.0;
    %122 = %120.1;
    (%121, %122, %var_3754)
  };
  %123(%var_3763) /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(14, 2), float64], Tensor[(1, 168), uint32]) */
}

def @func_5148(%var_5143: Tensor[(6, 14, 4), float32]) -> (Tensor[(6, 14, 4), float32],) {
  %124 = cast(%var_5143, dtype="float32") /* ty=Tensor[(6, 14, 4), float32] */;
  %125 = sigmoid(%124) /* ty=Tensor[(6, 14, 4), float32] */;
  (%125,)
}

def @func_7416() -> (Tensor[(4, 2, 2), float64], Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16]) {
  %131 = fn () -> (Tensor[(4, 2, 2), float64], Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16]) {
    %126 = @func_4783() /* ty=(Tensor[(4, 2, 2), float64],) */;
    %127 = @func_1661() /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16]) */;
    %128 = %126.0;
    %129 = %127.1;
    %130 = @func_437() /* ty=Tensor[(4, 2, 2), uint16] */;
    (%128, %129, %130)
  };
  %131() /* ty=(Tensor[(4, 2, 2), float64], Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16]) */
}

def @func_7832() -> Tensor[(4, 2, 2), float32] {
  %132 = @func_7727() /* ty=(Tensor[(4, 2, 2), float32],) */;
  %132.0
}

def @func_684(%var_682: Tensor[(11, 2, 2), float32]) -> Tensor[(11, 2, 2), float64] {
  @func_681(%var_682) /* ty=Tensor[(11, 2, 2), float64] */
}

def @func_2631() -> (Tensor[(1, 2, 2), float32],) {
  %135 = fn () -> (Tensor[(1, 2, 2), float32],) {
    %133 = @func_782() /* ty=(Tensor[(1, 2, 2), float32], Tensor[(9, 10, 14), bool]) */;
    %134 = %133.0;
    (%134,)
  };
  %135() /* ty=(Tensor[(1, 2, 2), float32],) */
}

def @func_2601(%var_2599: Tensor[(4, 2, 2), uint16]) -> Tensor[(4, 2, 2), float64] {
  @func_2598(%var_2599) /* ty=Tensor[(4, 2, 2), float64] */
}

def @func_5872(%var_5870: Tensor[(5, 11, 1), float32]) -> (Tensor[(5, 11, 1), float32],) {
  @func_5869(%var_5870) /* ty=(Tensor[(5, 11, 1), float32],) */
}

def @func_2932() -> Tensor[(4, 2, 2), uint16] {
  %137 = fn () -> Tensor[(4, 2, 2), uint16] {
    %136 = @func_314() /* ty=(Tensor[(4, 2, 2), uint16],) */;
    %136.0
  };
  %137() /* ty=Tensor[(4, 2, 2), uint16] */
}

def @func_2572() -> Tensor[(4, 2, 2), float64] {
  %140 = fn () -> Tensor[(4, 2, 2), float64] {
    %138 = @func_437() /* ty=Tensor[(4, 2, 2), uint16] */;
    %139 = cast(%138, dtype="float64") /* ty=Tensor[(4, 2, 2), float64] */;
    log2(%139) /* ty=Tensor[(4, 2, 2), float64] */
  };
  %140() /* ty=Tensor[(4, 2, 2), float64] */
}

def @func_1836(%var_1828: Tensor[(8, 12, 8), float32]) -> (Tensor[(8, 12, 8), int16],) {
  %141 = @func_898() /* ty=(Tensor[(8, 12, 8), float32], Tensor[(1, 2, 2), float32], Tensor[(4, 2, 2), uint16]) */;
  %142 = %141.0;
  %143 = cast(%var_1828, dtype="int16") /* ty=Tensor[(8, 12, 8), int16] */;
  %144 = shape_of(%142, dtype="int32") /* ty=Tensor[(3), int32] */;
  %145 = cast(%142, dtype="int16") /* ty=Tensor[(8, 12, 8), int16] */;
  %146 = dyn.reshape(%143, %144, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %147 = minimum(%145, %146) /* ty=Tensor[(8, 12, 8), int16] */;
  (%147,)
}

def @func_7728() -> (Tensor[(4, 2, 2), float32],) {
  %150 = fn () -> (Tensor[(4, 2, 2), float32],) {
    %148 = @func_5530() /* ty=(Tensor[(4, 2, 2), float32],) */;
    %149 = %148.0;
    (%149,)
  };
  %150() /* ty=(Tensor[(4, 2, 2), float32],) */
}

def @func_739() -> (Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16]) {
  %153 = fn () -> (Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16]) {
    %151 = @func_590() /* ty=Tensor[(4, 2, 2), uint16] */;
    %152 = @func_437() /* ty=Tensor[(4, 2, 2), uint16] */;
    (%151, %152)
  };
  %153() /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16]) */
}

def @func_4784() -> (Tensor[(4, 2, 2), float64],) {
  %155 = fn () -> (Tensor[(4, 2, 2), float64],) {
    %154 = @func_2571() /* ty=Tensor[(4, 2, 2), float64] */;
    (%154,)
  };
  %155() /* ty=(Tensor[(4, 2, 2), float64],) */
}

def @func_863() -> (Tensor[(4, 2, 2), float64],) {
  @func_861() /* ty=(Tensor[(4, 2, 2), float64],) */
}

def @func_822(%var_804: Tensor[(9, 10, 14), bool]) -> (Tensor[(6, 2, 2), int16], Tensor[(9, 10, 14), bool], Tensor[(4, 2, 2), uint16]) {
  %156 = @func_475() /* ty=(Tensor[(6, 2, 2), int16],) */;
  %157 = @func_643() /* ty=(Tensor[(9, 10, 14), bool],) */;
  %158 = %157.0;
  %159 = cast(%var_804, dtype="bool") /* ty=Tensor[(9, 10, 14), bool] */;
  %160 = shape_of(%158, dtype="int32") /* ty=Tensor[(3), int32] */;
  %161 = cast(%158, dtype="bool") /* ty=Tensor[(9, 10, 14), bool] */;
  %162 = dyn.reshape(%159, %160, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %163 = @func_314() /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %164 = %156.0;
  %165 = less(%161, %162) /* ty=Tensor[(9, 10, 14), bool] */;
  %166 = %163.0;
  (%164, %165, %166)
}

def @func_3935(%var_3931: Tensor[(1, 6, 13), float64], %var_3932: Tensor[(16, 6, 13), float64], %var_3933: Tensor[(28), float64], %var_3934: Tensor[(840, 1), float64]) -> (Tensor[(16, 6, 13), float64], Tensor[(6, 2, 2), int16], Tensor[(7, 2, 2), uint8], Tensor[(28), float64], Tensor[(4, 2, 2), uint16], Tensor[(12, 5, 14), float64], Tensor[(840, 1), float64]) {
  @func_3929(%var_3931, %var_3932, %var_3933, %var_3934) /* ty=(Tensor[(16, 6, 13), float64], Tensor[(6, 2, 2), int16], Tensor[(7, 2, 2), uint8], Tensor[(28), float64], Tensor[(4, 2, 2), uint16], Tensor[(12, 5, 14), float64], Tensor[(840, 1), float64]) */
}

def @func_1390(%var_1388: Tensor[(7, 2, 2), float64]) -> (Tensor[(7, 2, 2), uint8],) {
  @func_1387(%var_1388) /* ty=(Tensor[(7, 2, 2), uint8],) */
}

def @func_1387(%var_1382: Tensor[(7, 2, 2), float64]) -> (Tensor[(7, 2, 2), uint8],) {
  %167 = @func_629() /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(1, 2, 2), float64]) */;
  %168 = %167.1;
  %169 = cast(%168, dtype="uint8") /* ty=Tensor[(1, 2, 2), uint8] */;
  %170 = cast(%var_1382, dtype="uint8") /* ty=Tensor[(7, 2, 2), uint8] */;
  %171 = maximum(%169, %170) /* ty=Tensor[(7, 2, 2), uint8] */;
  (%171,)
}

def @func_3728() -> (Tensor[(4, 2, 2), bool], Tensor[(4, 2, 2), float64]) {
  %180 = fn () -> (Tensor[(4, 2, 2), bool], Tensor[(4, 2, 2), float64]) {
    %172 = @func_401() /* ty=(Tensor[(4, 2, 2), bool], Tensor[(1, 2, 2), float32], Tensor[(1, 2, 2), float32]) */;
    %173 = %172.0;
    %174 = cast(%173, dtype="uint16") /* ty=Tensor[(4, 2, 2), uint16] */;
    %175 = reshape(%174, newshape=[4, 2, 2]) /* ty=Tensor[(4, 2, 2), uint16] */;
    %176 = @func_3407(%175) /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), bool]) */;
    %177 = %176.1;
    %178 = cast(%177, dtype="float64") /* ty=Tensor[(4, 2, 2), float64] */;
    %179 = sinh(%178) /* ty=Tensor[(4, 2, 2), float64] */;
    (%173, %179)
  };
  %180() /* ty=(Tensor[(4, 2, 2), bool], Tensor[(4, 2, 2), float64]) */
}

def @func_4044(%var_4042: Tensor[(16), uint16]) -> (Tensor[(8, 12, 8), float32], Tensor[(4, 2, 2), uint16], Tensor[(16), uint16]) {
  @func_4041(%var_4042) /* ty=(Tensor[(8, 12, 8), float32], Tensor[(4, 2, 2), uint16], Tensor[(16), uint16]) */
}

def @func_2860(%var_2835: Tensor[(14, 12, 13), float32]) -> Tensor[(14, 12, 13), float32] {
  %181 = cast(meta[relay.Constant][8] /* ty=Tensor[(1, 12, 13), float32] */, dtype="float32") /* ty=Tensor[(1, 12, 13), float32] */;
  %182 = cast(%var_2835, dtype="float32") /* ty=Tensor[(14, 12, 13), float32] */;
  power(%181, %182) /* ty=Tensor[(14, 12, 13), float32] */
}

def @func_1088(%var_1071: Tensor[(4, 2, 2), uint16]) -> (Tensor[(4, 2, 2), uint16],) {
  %183 = @func_314() /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %184 = %183.0;
  %185 = cast(%var_1071, dtype="uint16") /* ty=Tensor[(4, 2, 2), uint16] */;
  %186 = shape_of(%184, dtype="int32") /* ty=Tensor[(3), int32] */;
  %187 = cast(%184, dtype="uint16") /* ty=Tensor[(4, 2, 2), uint16] */;
  %188 = dyn.reshape(%185, %186, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %189 = left_shift(%187, %188) /* ty=Tensor[(4, 2, 2), uint16] */;
  (%189,)
}

def @func_5433(%var_5431: Tensor[(12, 4, 3), uint16], %var_5432: Tensor[(12, 4, 3), uint16]) -> (Tensor[(12, 4, 3), uint16],) {
  %195 = fn (%var_5418: Tensor[(12, 4, 3), uint16], %var_5419: Tensor[(12, 4, 3), uint16]) -> (Tensor[(12, 4, 3), uint16],) {
    %190 = cast(%var_5419, dtype="uint16") /* ty=Tensor[(12, 4, 3), uint16] */;
    %191 = shape_of(%var_5418, dtype="int32") /* ty=Tensor[(3), int32] */;
    %192 = cast(%var_5418, dtype="uint16") /* ty=Tensor[(12, 4, 3), uint16] */;
    %193 = dyn.reshape(%190, %191, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %194 = bitwise_xor(%192, %193) /* ty=Tensor[(12, 4, 3), uint16] */;
    (%194,)
  };
  %195(%var_5431, %var_5432) /* ty=(Tensor[(12, 4, 3), uint16],) */
}

def @func_4763(%var_4761: Tensor[(2184), float32]) -> (Tensor[(2, 15, 15), bool], Tensor[(1, 2, 2), float64], Tensor[(1, 16), uint16], Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), bool], Tensor[(14, 12, 13), float32], Tensor[(2184), float32], Tensor[(4, 2, 2), uint16]) {
  @func_4760(%var_4761) /* ty=(Tensor[(2, 15, 15), bool], Tensor[(1, 2, 2), float64], Tensor[(1, 16), uint16], Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), bool], Tensor[(14, 12, 13), float32], Tensor[(2184), float32], Tensor[(4, 2, 2), uint16]) */
}

def @func_438() -> Tensor[(4, 2, 2), uint16] {
  %197 = fn () -> Tensor[(4, 2, 2), uint16] {
    %196 = @func_314() /* ty=(Tensor[(4, 2, 2), uint16],) */;
    %196.0
  };
  %197() /* ty=Tensor[(4, 2, 2), uint16] */
}

def @func_4159(%var_4158: Tensor[(16, 10, 4), float32]) -> (Tensor[(16, 10, 4), float64],) {
  %203 = fn (%var_4143: Tensor[(16, 10, 4), float32]) -> (Tensor[(16, 10, 4), float64],) {
    %198 = cast(meta[relay.Constant][9] /* ty=Tensor[(16, 1, 4), float32] */, dtype="float32") /* ty=Tensor[(16, 1, 4), float32] */;
    %199 = acos(%198) /* ty=Tensor[(16, 1, 4), float32] */;
    %200 = cast(%199, dtype="float64") /* ty=Tensor[(16, 1, 4), float64] */;
    %201 = cast(%var_4143, dtype="float64") /* ty=Tensor[(16, 10, 4), float64] */;
    %202 = multiply(%200, %201) /* ty=Tensor[(16, 10, 4), float64] */;
    (%202,)
  };
  %203(%var_4158) /* ty=(Tensor[(16, 10, 4), float64],) */
}

def @func_8028() -> (Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), float64]) {
  @func_8026() /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), float64]) */
}

def @func_8077(%var_8076: Tensor[(72), int8]) -> (Tensor[(4, 2, 2), uint16], Tensor[(8, 12, 8), float32], Tensor[(72), int8]) {
  %211 = fn (%var_8073: Tensor[(72), int8]) -> (Tensor[(4, 2, 2), uint16], Tensor[(8, 12, 8), float32], Tensor[(72), int8]) {
    %204 = cast(%var_8073, dtype="int8") /* ty=Tensor[(72), int8] */;
    %205 = cast(%var_8073, dtype="int8") /* ty=Tensor[(72), int8] */;
    %206 = reshape(%204, newshape=[72]) /* ty=Tensor[(72), int8] */;
    %207 = reshape(%205, newshape=[72]) /* ty=Tensor[(72), int8] */;
    %208 = @func_2042(%206, %207) /* ty=(Tensor[(72), bool], Tensor[(4, 2, 2), uint16], Tensor[(8, 12, 8), float32], Tensor[(72), bool], Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16], Tensor[(3, 420), bool]) */;
    %209 = @func_6737() /* ty=Tensor[(4, 2, 2), uint16] */;
    %210 = %208.2;
    (%209, %210, %var_8073)
  };
  %211(%var_8076) /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(8, 12, 8), float32], Tensor[(72), int8]) */
}

def @func_2380() -> (Tensor[(6, 15, 6), float32],) {
  %214 = fn () -> (Tensor[(6, 15, 6), float32],) {
    %212 = @func_2342() /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(6, 15, 6), float64], Tensor[(6, 15, 6), float32]) */;
    %213 = %212.2;
    (%213,)
  };
  %214() /* ty=(Tensor[(6, 15, 6), float32],) */
}

def @func_1850() -> (Tensor[(4, 2, 2), uint16],) {
  %217 = fn () -> (Tensor[(4, 2, 2), uint16],) {
    %215 = @func_290() /* ty=(Tensor[(4, 2, 2), uint16],) */;
    %216 = %215.0;
    (%216,)
  };
  %217() /* ty=(Tensor[(4, 2, 2), uint16],) */
}

def @func_1889() -> (Tensor[(4, 2, 2), uint16], Tensor[(1, 2, 2), float32], Tensor[(245, 2), int16]) {
  @func_1887() /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(1, 2, 2), float32], Tensor[(245, 2), int16]) */
}

def @func_6556() -> (Tensor[(4, 2, 2), uint16],) {
  %220 = fn () -> (Tensor[(4, 2, 2), uint16],) {
    %218 = @func_4587() /* ty=(Tensor[(4, 2, 2), bool], Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16]) */;
    %219 = %218.2;
    (%219,)
  };
  %220() /* ty=(Tensor[(4, 2, 2), uint16],) */
}

def @func_7385(%var_7314: Tensor[(1050), float32], %var_7351: Tensor[(182), uint64]) -> (Tensor[(4, 2, 2), float32], Tensor[(1050), bool], Tensor[(8, 12, 8), float32], Tensor[(182), uint64], Tensor[(12, 5, 9), int32], Tensor[(540), int32], Tensor[(1, 2, 2), float32], Tensor[(4, 2, 2), float64]) {
  %221 = @func_5530() /* ty=(Tensor[(4, 2, 2), float32],) */;
  %222 = cast(%var_7314, dtype="float32") /* ty=Tensor[(1050), float32] */;
  %223 = reshape(%222, newshape=[15, 7, 10]) /* ty=Tensor[(15, 7, 10), float32] */;
  %224 = @func_1708(%223) /* ty=(Tensor[(15, 7, 10), float32], Tensor[(10, 11, 1), float64], Tensor[(110), float64]) */;
  %225 = %224.0;
  %226 = cast(%225, dtype="bool") /* ty=Tensor[(15, 7, 10), bool] */;
  %227 = shape_of(%var_7314, dtype="int32") /* ty=Tensor[(1), int32] */;
  %228 = cast(%var_7314, dtype="bool") /* ty=Tensor[(1050), bool] */;
  %229 = dyn.reshape(%226, %227, newshape=[]) /* ty=Tensor[(?), bool] */;
  %230 = cast(meta[relay.Constant][10] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %231 = cast(%var_7351, dtype="uint64") /* ty=Tensor[(182), uint64] */;
  %232 = reshape(%230, newshape=[]) /* ty=uint64 */;
  %233 = reshape(%231, newshape=[13, 1, 14]) /* ty=Tensor[(13, 1, 14), uint64] */;
  %234 = @func_5597(%232, %233) /* ty=(Tensor[(13, 1, 14), uint64], Tensor[(8, 12, 8), float32], Tensor[(1, 2, 2), float32]) */;
  %235 = cast(meta[relay.Constant][11] /* ty=Tensor[(540), int32] */, dtype="int32") /* ty=Tensor[(540), int32] */;
  %236 = cast(meta[relay.Constant][11] /* ty=Tensor[(540), int32] */, dtype="int32") /* ty=Tensor[(540), int32] */;
  %237 = reshape(%235, newshape=[12, 5, 9]) /* ty=Tensor[(12, 5, 9), int32] */;
  %238 = reshape(%236, newshape=[12, 5, 9]) /* ty=Tensor[(12, 5, 9), int32] */;
  %239 = @func_6131() /* ty=Tensor[(1, 2, 2), float32] */;
  %240 = cast(%239, dtype="float32") /* ty=Tensor[(1, 2, 2), float32] */;
  %241 = cast(meta[relay.Constant][10] /* ty=uint64 */, dtype="float32") /* ty=float32 */;
  %242 = @func_4783() /* ty=(Tensor[(4, 2, 2), float64],) */;
  %243 = %221.0;
  %244 = equal(%228, %229) /* ty=Tensor[(1050), bool] */;
  %245 = %234.1;
  %246 = @func_4064(%237, %238) /* ty=Tensor[(12, 5, 9), int32] */;
  %247 = floor_mod(%240, %241) /* ty=Tensor[(1, 2, 2), float32] */;
  %248 = %242.0;
  (%243, %244, %245, %var_7351, %246, meta[relay.Constant][11] /* ty=Tensor[(540), int32] */, %247, %248)
}

def @func_4445() -> Tensor[(4, 2, 2), uint16] {
  %250 = fn () -> Tensor[(4, 2, 2), uint16] {
    %249 = @func_1636() /* ty=(Tensor[(4, 2, 2), uint16],) */;
    %249.0
  };
  %250() /* ty=Tensor[(4, 2, 2), uint16] */
}

def @func_7207() -> (Tensor[(4, 2, 2), uint16],) {
  %253 = fn () -> (Tensor[(4, 2, 2), uint16],) {
    %251 = @func_5854() /* ty=(Tensor[(1, 2, 2), float32], Tensor[(6, 2, 2), int16], Tensor[(1, 2, 2), float32], Tensor[(4, 2, 2), uint16], Tensor[(7, 2, 16), bool], Tensor[(224), uint64], Tensor[(?, 2, 2), bool]) */;
    %252 = %251.3;
    (%252,)
  };
  %253() /* ty=(Tensor[(4, 2, 2), uint16],) */
}

def @func_2496(%var_2465: Tensor[(4, 2, 2), uint16]) -> (Tensor[(1, 2, 2), float64], Tensor[(4, 2, 2), float32]) {
  %254 = @func_629() /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(1, 2, 2), float64]) */;
  %255 = @func_590() /* ty=Tensor[(4, 2, 2), uint16] */;
  %256 = cast(%255, dtype="float64") /* ty=Tensor[(4, 2, 2), float64] */;
  %257 = log(%256) /* ty=Tensor[(4, 2, 2), float64] */;
  %258 = cast(%var_2465, dtype="float32") /* ty=Tensor[(4, 2, 2), float32] */;
  %259 = shape_of(%255, dtype="int32") /* ty=Tensor[(3), int32] */;
  %260 = cast(%255, dtype="float32") /* ty=Tensor[(4, 2, 2), float32] */;
  %261 = dyn.reshape(%258, %259, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %262 = mod(%260, %261) /* ty=Tensor[(4, 2, 2), float32] */;
  %263 = cast(%262, dtype="float32") /* ty=Tensor[(4, 2, 2), float32] */;
  %264 = shape_of(%257, dtype="int32") /* ty=Tensor[(3), int32] */;
  %265 = cast(%257, dtype="float32") /* ty=Tensor[(4, 2, 2), float32] */;
  %266 = dyn.reshape(%263, %264, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %267 = %254.1;
  %268 = divide(%265, %266) /* ty=Tensor[(4, 2, 2), float32] */;
  (%267, %268)
}

def @func_3524(%var_3522: Tensor[(8, 12, 8), float32]) -> (Tensor[(6, 15, 6), float32], Tensor[(8, 12, 8), bool], Tensor[(4, 2, 2), uint16], Tensor[(1260), bool], Tensor[(1, 2, 2), float32]) {
  @func_3521(%var_3522) /* ty=(Tensor[(6, 15, 6), float32], Tensor[(8, 12, 8), bool], Tensor[(4, 2, 2), uint16], Tensor[(1260), bool], Tensor[(1, 2, 2), float32]) */
}

def @func_3409(%var_3408: Tensor[(4, 2, 2), uint16]) -> (Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), bool]) {
  %278 = fn (%var_3383: Tensor[(4, 2, 2), uint16]) -> (Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), bool]) {
    %269 = @func_738() /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16]) */;
    %270 = @func_1636() /* ty=(Tensor[(4, 2, 2), uint16],) */;
    %271 = %270.0;
    %272 = cast(%var_3383, dtype="bool") /* ty=Tensor[(4, 2, 2), bool] */;
    %273 = shape_of(%271, dtype="int32") /* ty=Tensor[(3), int32] */;
    %274 = cast(%271, dtype="bool") /* ty=Tensor[(4, 2, 2), bool] */;
    %275 = dyn.reshape(%272, %273, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %276 = %269.1;
    %277 = logical_or(%274, %275) /* ty=Tensor[(4, 2, 2), bool] */;
    (%276, %277)
  };
  %278(%var_3408) /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), bool]) */
}

def @func_1277(%var_1275: Tensor[(490), int16]) -> (Tensor[(1, 2, 2), float32], Tensor[(1, 2, 2), float32], Tensor[(4, 2, 2), uint16], Tensor[(14, 5, 7), int16], int16, Tensor[(490), float32], Tensor[(4, 2, 2), float32]) {
  @func_1274(%var_1275) /* ty=(Tensor[(1, 2, 2), float32], Tensor[(1, 2, 2), float32], Tensor[(4, 2, 2), uint16], Tensor[(14, 5, 7), int16], int16, Tensor[(490), float32], Tensor[(4, 2, 2), float32]) */
}

def @func_5043() -> (Tensor[(4, 2, 2), uint16],) {
  %279 = @func_1887() /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(1, 2, 2), float32], Tensor[(245, 2), int16]) */;
  %280 = %279.0;
  (%280,)
}

def @func_1274(%var_1252: Tensor[(490), int16]) -> (Tensor[(1, 2, 2), float32], Tensor[(1, 2, 2), float32], Tensor[(4, 2, 2), uint16], Tensor[(14, 5, 7), int16], int16, Tensor[(490), float32], Tensor[(4, 2, 2), float32]) {
  %281 = @func_547() /* ty=(Tensor[(1, 2, 2), float32], Tensor[(1, 2, 2), float32]) */;
  %282 = @func_738() /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16]) */;
  %283 = cast(meta[relay.Constant][12] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %284 = cast(%var_1252, dtype="int16") /* ty=Tensor[(490), int16] */;
  %285 = reshape(%283, newshape=[]) /* ty=int16 */;
  %286 = reshape(%284, newshape=[14, 5, 7]) /* ty=Tensor[(14, 5, 7), int16] */;
  %287 = @func_965(%285, %286) /* ty=(Tensor[(14, 5, 7), int16],) */;
  %288 = cast(%var_1252, dtype="float32") /* ty=Tensor[(490), float32] */;
  %289 = @func_898() /* ty=(Tensor[(8, 12, 8), float32], Tensor[(1, 2, 2), float32], Tensor[(4, 2, 2), uint16]) */;
  %290 = %289.2;
  %291 = cast(%290, dtype="float64") /* ty=Tensor[(4, 2, 2), float64] */;
  %292 = sigmoid(%291) /* ty=Tensor[(4, 2, 2), float64] */;
  %293 = cast(%292, dtype="float32") /* ty=Tensor[(4, 2, 2), float32] */;
  %294 = @func_210() /* ty=Tensor[(1, 2, 2), float32] */;
  %295 = %281.0;
  %296 = %282.0;
  %297 = %287.0;
  %298 = tan(%288) /* ty=Tensor[(490), float32] */;
  %299 = asinh(%293) /* ty=Tensor[(4, 2, 2), float32] */;
  (%294, %295, %296, %297, meta[relay.Constant][12] /* ty=int16 */, %298, %299)
}

def @func_1931() -> (Tensor[(1, 2, 2), float32],) {
  @func_1929() /* ty=(Tensor[(1, 2, 2), float32],) */
}

def @func_2042(%var_2003: Tensor[(72), int8], %var_2025: Tensor[(72), int8]) -> (Tensor[(72), bool], Tensor[(4, 2, 2), uint16], Tensor[(8, 12, 8), float32], Tensor[(72), bool], Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16], Tensor[(3, 420), bool]) {
  %300 = @func_245() /* ty=(Tensor[(1, 2, 2), float32], Tensor[(4, 3, 6), int8], Tensor[(72), int8]) */;
  %301 = %300.2;
  %302 = cast(%var_2003, dtype="bool") /* ty=Tensor[(72), bool] */;
  %303 = shape_of(%301, dtype="int32") /* ty=Tensor[(1), int32] */;
  %304 = cast(%301, dtype="bool") /* ty=Tensor[(72), bool] */;
  %305 = dyn.reshape(%302, %303, newshape=[]) /* ty=Tensor[(?), bool] */;
  %306 = cast(%var_2025, dtype="bool") /* ty=Tensor[(72), bool] */;
  %307 = shape_of(%var_2003, dtype="int32") /* ty=Tensor[(1), int32] */;
  %308 = cast(%var_2003, dtype="bool") /* ty=Tensor[(72), bool] */;
  %309 = dyn.reshape(%306, %307, newshape=[]) /* ty=Tensor[(?), bool] */;
  %310 = @func_898() /* ty=(Tensor[(8, 12, 8), float32], Tensor[(1, 2, 2), float32], Tensor[(4, 2, 2), uint16]) */;
  %311 = cast(meta[relay.Constant][13] /* ty=Tensor[(3, 420), bool] */, dtype="bool") /* ty=Tensor[(3, 420), bool] */;
  %312 = reshape(%311, newshape=[9, 10, 14]) /* ty=Tensor[(9, 10, 14), bool] */;
  %313 = @func_822(%312) /* ty=(Tensor[(6, 2, 2), int16], Tensor[(9, 10, 14), bool], Tensor[(4, 2, 2), uint16]) */;
  %314 = greater(%304, %305) /* ty=Tensor[(72), bool] */;
  %315 = @func_590() /* ty=Tensor[(4, 2, 2), uint16] */;
  %316 = @func_1327() /* ty=Tensor[(8, 12, 8), float32] */;
  %317 = less(%308, %309) /* ty=Tensor[(72), bool] */;
  %318 = %310.2;
  %319 = %313.2;
  (%314, %315, %316, %317, %318, %319, meta[relay.Constant][13] /* ty=Tensor[(3, 420), bool] */)
}

def @func_6739() -> Tensor[(4, 2, 2), uint16] {
  @func_6737() /* ty=Tensor[(4, 2, 2), uint16] */
}

def @func_5045() -> (Tensor[(4, 2, 2), uint16],) {
  @func_5043() /* ty=(Tensor[(4, 2, 2), uint16],) */
}

def @func_5151(%var_5149: Tensor[(6, 14, 4), float32]) -> (Tensor[(6, 14, 4), float32],) {
  @func_5148(%var_5149) /* ty=(Tensor[(6, 14, 4), float32],) */
}

def @main() -> (Tensor[(1, 2, 2), float64],) {
  %320 = @func_2631() /* ty=(Tensor[(1, 2, 2), float32],) */;
  %321 = %320.0;
  %322 = cast(%321, dtype="float64") /* ty=Tensor[(1, 2, 2), float64] */;
  %323 = acosh(%322) /* ty=Tensor[(1, 2, 2), float64] */;
  (%323,)
}

def @func_861() -> (Tensor[(4, 2, 2), float64],) {
  %324 = @func_290() /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %325 = %324.0;
  %326 = cast(%325, dtype="float64") /* ty=Tensor[(4, 2, 2), float64] */;
  %327 = rsqrt(%326) /* ty=Tensor[(4, 2, 2), float64] */;
  (%327,)
}

def @func_3536(%var_3535: Tensor[(12, 5, 14), float64]) -> Tensor[(12, 5, 14), float64] {
  %329 = fn (%var_3530: Tensor[(12, 5, 14), float64]) -> Tensor[(12, 5, 14), float64] {
    %328 = cast(%var_3530, dtype="float64") /* ty=Tensor[(12, 5, 14), float64] */;
    log(%328) /* ty=Tensor[(12, 5, 14), float64] */
  };
  %329(%var_3535) /* ty=Tensor[(12, 5, 14), float64] */
}

def @func_5359(%var_5356: Tensor[(168), uint32], %var_5357: Tensor[(28), float64], %var_5358: Tensor[(22, 2), float32]) -> (Tensor[(4, 2, 2), uint16], Tensor[(12, 7, 2), bool], Tensor[(168), uint32], Tensor[(28), float64], Tensor[(11, 2, 2), float64], Tensor[(22, 2), float32]) {
  @func_5354(%var_5356, %var_5357, %var_5358) /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(12, 7, 2), bool], Tensor[(168), uint32], Tensor[(28), float64], Tensor[(11, 2, 2), float64], Tensor[(22, 2), float32]) */
}

def @func_5681() -> (Tensor[(4, 2, 2), float32], Tensor[(1, 2, 2), float32]) {
  %330 = @func_5530() /* ty=(Tensor[(4, 2, 2), float32],) */;
  %331 = @func_401() /* ty=(Tensor[(4, 2, 2), bool], Tensor[(1, 2, 2), float32], Tensor[(1, 2, 2), float32]) */;
  %332 = %330.0;
  %333 = %331.2;
  (%332, %333)
}

def @func_3564() -> (Tensor[(1, 2, 2), float64], Tensor[(4, 2, 2), uint16]) {
  %337 = fn () -> (Tensor[(1, 2, 2), float64], Tensor[(4, 2, 2), uint16]) {
    %334 = @func_2412() /* ty=(Tensor[(4, 2, 2), uint16],) */;
    %335 = @func_3217() /* ty=Tensor[(1, 2, 2), float64] */;
    %336 = %334.0;
    (%335, %336)
  };
  %337() /* ty=(Tensor[(1, 2, 2), float64], Tensor[(4, 2, 2), uint16]) */
}

def @func_205(%var_203: Tensor[(4, 3, 6), int8]) -> (Tensor[(4, 3, 6), int8],) {
  @func_202(%var_203) /* ty=(Tensor[(4, 3, 6), int8],) */
}

def @func_1379() -> Tensor[(4, 2, 2), uint16] {
  %339 = fn () -> Tensor[(4, 2, 2), uint16] {
    %338 = @func_1146() /* ty=(Tensor[(4, 2, 2), uint16],) */;
    %338.0
  };
  %339() /* ty=Tensor[(4, 2, 2), uint16] */
}

def @func_3218() -> Tensor[(1, 2, 2), float64] {
  %341 = fn () -> Tensor[(1, 2, 2), float64] {
    %340 = @func_629() /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(1, 2, 2), float64]) */;
    %340.1
  };
  %341() /* ty=Tensor[(1, 2, 2), float64] */
}

def @func_475() -> (Tensor[(6, 2, 2), int16],) {
  %342 = @func_210() /* ty=Tensor[(1, 2, 2), float32] */;
  %343 = cast(%342, dtype="int16") /* ty=Tensor[(1, 2, 2), int16] */;
  %344 = cast(meta[relay.Constant][14] /* ty=Tensor[(6, 2, 2), float32] */, dtype="int16") /* ty=Tensor[(6, 2, 2), int16] */;
  %345 = left_shift(%343, %344) /* ty=Tensor[(6, 2, 2), int16] */;
  (%345,)
}

def @func_1362(%var_1360: int16, %var_1361: Tensor[(490), int16]) -> (Tensor[(1, 2, 2), float32], Tensor[(8, 12, 8), float32], Tensor[(14, 5, 7), int16], int16, Tensor[(490), int16], Tensor[(4, 2, 2), uint16]) {
  %358 = fn (%var_1349: int16, %var_1350: Tensor[(490), int16]) -> (Tensor[(1, 2, 2), float32], Tensor[(8, 12, 8), float32], Tensor[(14, 5, 7), int16], int16, Tensor[(490), int16], Tensor[(4, 2, 2), uint16]) {
    %346 = @func_401() /* ty=(Tensor[(4, 2, 2), bool], Tensor[(1, 2, 2), float32], Tensor[(1, 2, 2), float32]) */;
    %347 = @func_898() /* ty=(Tensor[(8, 12, 8), float32], Tensor[(1, 2, 2), float32], Tensor[(4, 2, 2), uint16]) */;
    %348 = cast(%var_1349, dtype="int16") /* ty=int16 */;
    %349 = cast(%var_1350, dtype="int16") /* ty=Tensor[(490), int16] */;
    %350 = reshape(%348, newshape=[]) /* ty=int16 */;
    %351 = reshape(%349, newshape=[14, 5, 7]) /* ty=Tensor[(14, 5, 7), int16] */;
    %352 = @func_965(%350, %351) /* ty=(Tensor[(14, 5, 7), int16],) */;
    %353 = @func_314() /* ty=(Tensor[(4, 2, 2), uint16],) */;
    %354 = %346.2;
    %355 = %347.0;
    %356 = %352.0;
    %357 = %353.0;
    (%354, %355, %356, %var_1349, %var_1350, %357)
  };
  %358(%var_1360, %var_1361) /* ty=(Tensor[(1, 2, 2), float32], Tensor[(8, 12, 8), float32], Tensor[(14, 5, 7), int16], int16, Tensor[(490), int16], Tensor[(4, 2, 2), uint16]) */
}

def @func_6571() -> (Tensor[(4, 2, 2), float64], Tensor[(1, 2, 2), float32]) {
  %359 = @func_4783() /* ty=(Tensor[(4, 2, 2), float64],) */;
  %360 = @func_5854() /* ty=(Tensor[(1, 2, 2), float32], Tensor[(6, 2, 2), int16], Tensor[(1, 2, 2), float32], Tensor[(4, 2, 2), uint16], Tensor[(7, 2, 16), bool], Tensor[(224), uint64], Tensor[(?, 2, 2), bool]) */;
  %361 = %359.0;
  %362 = %360.0;
  (%361, %362)
}

def @func_315() -> (Tensor[(4, 2, 2), uint16],) {
  %365 = fn () -> (Tensor[(4, 2, 2), uint16],) {
    %363 = @func_290() /* ty=(Tensor[(4, 2, 2), uint16],) */;
    %364 = %363.0;
    (%364,)
  };
  %365() /* ty=(Tensor[(4, 2, 2), uint16],) */
}

def @func_5665(%var_5663: Tensor[(3, 5, 8), int16], %var_5664: Tensor[(490), int16]) -> (Tensor[(3, 5, 8), bool], Tensor[(4, 2, 2), uint16], Tensor[(490), int16]) {
  %380 = fn (%var_5632: Tensor[(3, 5, 8), int16], %var_5644: Tensor[(490), int16]) -> (Tensor[(3, 5, 8), bool], Tensor[(4, 2, 2), uint16], Tensor[(490), int16]) {
    %366 = cast(meta[relay.Constant][15] /* ty=Tensor[(3, 1, 8), int16] */, dtype="bool") /* ty=Tensor[(3, 1, 8), bool] */;
    %367 = cast(%var_5632, dtype="bool") /* ty=Tensor[(3, 5, 8), bool] */;
    %368 = @func_5164() /* ty=(Tensor[(4, 2, 2), uint16],) */;
    %369 = cast(%var_5644, dtype="int16") /* ty=Tensor[(490), int16] */;
    %370 = reshape(%369, newshape=[245, 2]) /* ty=Tensor[(245, 2), int16] */;
    %371 = @func_4258(%370) /* ty=(Tensor[(8, 12, 8), float32], Tensor[(14, 5, 7), int16], int16, Tensor[(245, 2), int16]) */;
    %372 = %371.3;
    %373 = cast(%372, dtype="int16") /* ty=Tensor[(245, 2), int16] */;
    %374 = shape_of(%var_5644, dtype="int32") /* ty=Tensor[(1), int32] */;
    %375 = cast(%var_5644, dtype="int16") /* ty=Tensor[(490), int16] */;
    %376 = dyn.reshape(%373, %374, newshape=[]) /* ty=Tensor[(?), int16] */;
    %377 = less_equal(%366, %367) /* ty=Tensor[(3, 5, 8), bool] */;
    %378 = %368.0;
    %379 = maximum(%375, %376) /* ty=Tensor[(490), int16] */;
    (%377, %378, %379)
  };
  %380(%var_5663, %var_5664) /* ty=(Tensor[(3, 5, 8), bool], Tensor[(4, 2, 2), uint16], Tensor[(490), int16]) */
}

def @func_7080(%var_7002: Tensor[(168), uint32], %var_7004: Tensor[(44), float32], %var_7026: Tensor[(168), uint32]) -> (Tensor[(4, 2, 2), float64], Tensor[(12, 7, 2), bool], Tensor[(28), float64], Tensor[(44), float32], Tensor[(168), bool], Tensor[(12, 5, 14), float64], Tensor[(840), float64], Tensor[(6, 2, 2), int16]) {
  %381 = cast(%var_7002, dtype="uint32") /* ty=Tensor[(168), uint32] */;
  %382 = cast(meta[relay.Constant][16] /* ty=Tensor[(28), float64] */, dtype="float64") /* ty=Tensor[(28), float64] */;
  %383 = cast(%var_7004, dtype="float32") /* ty=Tensor[(44), float32] */;
  %384 = reshape(%381, newshape=[168]) /* ty=Tensor[(168), uint32] */;
  %385 = reshape(%382, newshape=[28]) /* ty=Tensor[(28), float64] */;
  %386 = reshape(%383, newshape=[22, 2]) /* ty=Tensor[(22, 2), float32] */;
  %387 = @func_5354(%384, %385, %386) /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(12, 7, 2), bool], Tensor[(168), uint32], Tensor[(28), float64], Tensor[(11, 2, 2), float64], Tensor[(22, 2), float32]) */;
  %388 = cast(%var_7026, dtype="bool") /* ty=Tensor[(168), bool] */;
  %389 = shape_of(%var_7002, dtype="int32") /* ty=Tensor[(1), int32] */;
  %390 = cast(%var_7002, dtype="bool") /* ty=Tensor[(168), bool] */;
  %391 = dyn.reshape(%388, %389, newshape=[]) /* ty=Tensor[(?), bool] */;
  %392 = cast(meta[relay.Constant][17] /* ty=Tensor[(840), float64] */, dtype="float64") /* ty=Tensor[(840), float64] */;
  %393 = reshape(%392, newshape=[12, 5, 14]) /* ty=Tensor[(12, 5, 14), float64] */;
  %394 = @func_475() /* ty=(Tensor[(6, 2, 2), int16],) */;
  %395 = @func_6457() /* ty=Tensor[(4, 2, 2), float64] */;
  %396 = %387.1;
  %397 = less(%390, %391) /* ty=Tensor[(168), bool] */;
  %398 = @func_3534(%393) /* ty=Tensor[(12, 5, 14), float64] */;
  %399 = %394.0;
  (%395, %396, meta[relay.Constant][16] /* ty=Tensor[(28), float64] */, %var_7004, %397, %398, meta[relay.Constant][17] /* ty=Tensor[(840), float64] */, %399)
}

def @func_3068(%var_3008: Tensor[(9, 10, 14), bool], %var_3016: Tensor[(2184), float32]) -> (Tensor[(14, 12, 13), float32], Tensor[(9, 10, 14), float64], Tensor[(9, 10, 14), float64]) {
  %400 = cast(%var_3016, dtype="float32") /* ty=Tensor[(2184), float32] */;
  %401 = reshape(%400, newshape=[14, 12, 13]) /* ty=Tensor[(14, 12, 13), float32] */;
  %402 = @func_2860(%401) /* ty=Tensor[(14, 12, 13), float32] */;
  %403 = cast(%var_3016, dtype="float32") /* ty=Tensor[(2184), float32] */;
  %404 = shape_of(%402, dtype="int32") /* ty=Tensor[(3), int32] */;
  %405 = cast(%402, dtype="float32") /* ty=Tensor[(14, 12, 13), float32] */;
  %406 = dyn.reshape(%403, %404, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %407 = @func_643() /* ty=(Tensor[(9, 10, 14), bool],) */;
  %408 = %407.0;
  %409 = cast(%var_3008, dtype="int64") /* ty=Tensor[(9, 10, 14), int64] */;
  %410 = shape_of(%408, dtype="int32") /* ty=Tensor[(3), int32] */;
  %411 = cast(%408, dtype="int64") /* ty=Tensor[(9, 10, 14), int64] */;
  %412 = dyn.reshape(%409, %410, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %413 = logical_xor(%411, %412) /* ty=Tensor[(9, 10, 14), int64] */;
  %414 = cast(%413, dtype="float64") /* ty=Tensor[(9, 10, 14), float64] */;
  %415 = cast(%413, dtype="float64") /* ty=Tensor[(9, 10, 14), float64] */;
  %416 = floor_mod(%405, %406) /* ty=Tensor[(14, 12, 13), float32] */;
  %417 = asin(%414) /* ty=Tensor[(9, 10, 14), float64] */;
  %418 = atanh(%415) /* ty=Tensor[(9, 10, 14), float64] */;
  (%416, %417, %418)
}

def @func_5764() -> Tensor[(4, 2, 2), float64] {
  %419 = @func_4783() /* ty=(Tensor[(4, 2, 2), float64],) */;
  %419.0
}

def @func_246() -> (Tensor[(1, 2, 2), float32], Tensor[(4, 3, 6), int8], Tensor[(72), int8]) {
  %425 = fn () -> (Tensor[(1, 2, 2), float32], Tensor[(4, 3, 6), int8], Tensor[(72), int8]) {
    %420 = cast(meta[relay.Constant][18] /* ty=Tensor[(72), int8] */, dtype="int8") /* ty=Tensor[(72), int8] */;
    %421 = reshape(%420, newshape=[4, 3, 6]) /* ty=Tensor[(4, 3, 6), int8] */;
    %422 = @func_202(%421) /* ty=(Tensor[(4, 3, 6), int8],) */;
    %423 = @func_210() /* ty=Tensor[(1, 2, 2), float32] */;
    %424 = %422.0;
    (%423, %424, meta[relay.Constant][18] /* ty=Tensor[(72), int8] */)
  };
  %425() /* ty=(Tensor[(1, 2, 2), float32], Tensor[(4, 3, 6), int8], Tensor[(72), int8]) */
}

def @func_3645() -> Tensor[(6, 15, 6), float32] {
  %427 = fn () -> Tensor[(6, 15, 6), float32] {
    %426 = @func_2379() /* ty=(Tensor[(6, 15, 6), float32],) */;
    %426.0
  };
  %427() /* ty=Tensor[(6, 15, 6), float32] */
}

def @func_4064(%var_4055: Tensor[(12, 5, 9), int32], %var_4056: Tensor[(12, 5, 9), int32]) -> Tensor[(12, 5, 9), int32] {
  %428 = cast(%var_4056, dtype="int32") /* ty=Tensor[(12, 5, 9), int32] */;
  %429 = shape_of(%var_4055, dtype="int32") /* ty=Tensor[(3), int32] */;
  %430 = cast(%var_4055, dtype="int32") /* ty=Tensor[(12, 5, 9), int32] */;
  %431 = dyn.reshape(%428, %429, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  subtract(%430, %431) /* ty=Tensor[(12, 5, 9), int32] */
}

def @func_590() -> Tensor[(4, 2, 2), uint16] {
  %432 = @func_290() /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %432.0
}

def @func_6431() -> Tensor[(1, 2, 2), float32] {
  %434 = fn () -> Tensor[(1, 2, 2), float32] {
    %433 = @func_1929() /* ty=(Tensor[(1, 2, 2), float32],) */;
    %433.0
  };
  %434() /* ty=Tensor[(1, 2, 2), float32] */
}

def @func_3842() -> (Tensor[(4, 2, 2), float32], Tensor[(4, 2, 2), float32], Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16]) {
  %445 = fn () -> (Tensor[(4, 2, 2), float32], Tensor[(4, 2, 2), float32], Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16]) {
    %435 = @func_3563() /* ty=(Tensor[(1, 2, 2), float64], Tensor[(4, 2, 2), uint16]) */;
    %436 = %435.1;
    %437 = cast(%436, dtype="float32") /* ty=Tensor[(4, 2, 2), float32] */;
    %438 = @func_437() /* ty=Tensor[(4, 2, 2), uint16] */;
    %439 = cast(%438, dtype="float32") /* ty=Tensor[(4, 2, 2), float32] */;
    %440 = @func_738() /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16]) */;
    %441 = sqrt(%437) /* ty=Tensor[(4, 2, 2), float32] */;
    %442 = acos(%439) /* ty=Tensor[(4, 2, 2), float32] */;
    %443 = @func_2931() /* ty=Tensor[(4, 2, 2), uint16] */;
    %444 = %440.1;
    (%441, %442, %443, %444)
  };
  %445() /* ty=(Tensor[(4, 2, 2), float32], Tensor[(4, 2, 2), float32], Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16]) */
}

def @func_1455(%var_1452: Tensor[(12, 7, 2), uint32], %var_1453: Tensor[(12, 7, 2), uint32], %var_1454: Tensor[(28), float64]) -> (Tensor[(12, 7, 2), bool], Tensor[(7, 2, 2), uint8], Tensor[(28), float64], Tensor[(4, 2, 2), bool], Tensor[(110), float64], Tensor[(490, 1), int16], Tensor[(10, 11, 490), bool]) {
  @func_1450(%var_1452, %var_1453, %var_1454) /* ty=(Tensor[(12, 7, 2), bool], Tensor[(7, 2, 2), uint8], Tensor[(28), float64], Tensor[(4, 2, 2), bool], Tensor[(110), float64], Tensor[(490, 1), int16], Tensor[(10, 11, 490), bool]) */
}

def @func_4068(%var_4066: Tensor[(12, 5, 9), int32], %var_4067: Tensor[(12, 5, 9), int32]) -> Tensor[(12, 5, 9), int32] {
  @func_4064(%var_4066, %var_4067) /* ty=Tensor[(12, 5, 9), int32] */
}

def @func_943(%var_942: Tensor[(6, 15, 6), float32]) -> (Tensor[(6, 15, 6), uint8], Tensor[(1, 2, 2), float32]) {
  %455 = fn (%var_925: Tensor[(6, 15, 6), float32]) -> (Tensor[(6, 15, 6), uint8], Tensor[(1, 2, 2), float32]) {
    %446 = cast(%var_925, dtype="float32") /* ty=Tensor[(6, 15, 6), float32] */;
    %447 = asinh(%446) /* ty=Tensor[(6, 15, 6), float32] */;
    %448 = cast(%var_925, dtype="uint8") /* ty=Tensor[(6, 15, 6), uint8] */;
    %449 = shape_of(%447, dtype="int32") /* ty=Tensor[(3), int32] */;
    %450 = cast(%447, dtype="uint8") /* ty=Tensor[(6, 15, 6), uint8] */;
    %451 = dyn.reshape(%448, %449, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %452 = @func_401() /* ty=(Tensor[(4, 2, 2), bool], Tensor[(1, 2, 2), float32], Tensor[(1, 2, 2), float32]) */;
    %453 = left_shift(%450, %451) /* ty=Tensor[(6, 15, 6), uint8] */;
    %454 = %452.2;
    (%453, %454)
  };
  %455(%var_942) /* ty=(Tensor[(6, 15, 6), uint8], Tensor[(1, 2, 2), float32]) */
}

def @func_4374() -> Tensor[(1, 2, 2), float32] {
  %456 = fn () -> Tensor[(1, 2, 2), float32] {
    @func_210() /* ty=Tensor[(1, 2, 2), float32] */
  };
  %456() /* ty=Tensor[(1, 2, 2), float32] */
}

def @func_7540(%var_7538: Tensor[(1, 16), uint16], %var_7539: Tensor[(14, 2, 2), float32]) -> (Tensor[(4, 2, 2), bool], Tensor[(1, 16), uint16], Tensor[(1, 2, 2), float32], Tensor[(4, 2, 2), uint16], Tensor[(10, 11, 1), float64], Tensor[(110), float64], Tensor[(14, 2, 2), uint16]) {
  %473 = fn (%var_7468: Tensor[(1, 16), uint16], %var_7522: Tensor[(14, 2, 2), float32]) -> (Tensor[(4, 2, 2), bool], Tensor[(1, 16), uint16], Tensor[(1, 2, 2), float32], Tensor[(4, 2, 2), uint16], Tensor[(10, 11, 1), float64], Tensor[(110), float64], Tensor[(14, 2, 2), uint16]) {
    %457 = cast(%var_7468, dtype="uint16") /* ty=Tensor[(1, 16), uint16] */;
    %458 = reshape(%457, newshape=[4, 2, 2]) /* ty=Tensor[(4, 2, 2), uint16] */;
    %459 = @func_3407(%458) /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), bool]) */;
    %460 = @func_4211() /* ty=(Tensor[(1, 2, 2), float32], Tensor[(4, 2, 2), uint16]) */;
    %461 = cast(meta[relay.Constant][19] /* ty=Tensor[(110), float64] */, dtype="float64") /* ty=Tensor[(110), float64] */;
    %462 = reshape(%461, newshape=[10, 11, 1]) /* ty=Tensor[(10, 11, 1), float64] */;
    %463 = @func_1306(%462) /* ty=(Tensor[(10, 11, 1), float64],) */;
    %464 = @func_898() /* ty=(Tensor[(8, 12, 8), float32], Tensor[(1, 2, 2), float32], Tensor[(4, 2, 2), uint16]) */;
    %465 = %464.1;
    %466 = cast(%465, dtype="uint16") /* ty=Tensor[(1, 2, 2), uint16] */;
    %467 = cast(%var_7522, dtype="uint16") /* ty=Tensor[(14, 2, 2), uint16] */;
    %468 = %459.1;
    %469 = @func_4373() /* ty=Tensor[(1, 2, 2), float32] */;
    %470 = %460.1;
    %471 = %463.0;
    %472 = add(%466, %467) /* ty=Tensor[(14, 2, 2), uint16] */;
    (%468, %var_7468, %469, %470, %471, meta[relay.Constant][19] /* ty=Tensor[(110), float64] */, %472)
  };
  %473(%var_7538, %var_7539) /* ty=(Tensor[(4, 2, 2), bool], Tensor[(1, 16), uint16], Tensor[(1, 2, 2), float32], Tensor[(4, 2, 2), uint16], Tensor[(10, 11, 1), float64], Tensor[(110), float64], Tensor[(14, 2, 2), uint16]) */
}

def @func_7389(%var_7387: Tensor[(1050), float32], %var_7388: Tensor[(182), uint64]) -> (Tensor[(4, 2, 2), float32], Tensor[(1050), bool], Tensor[(8, 12, 8), float32], Tensor[(182), uint64], Tensor[(12, 5, 9), int32], Tensor[(540), int32], Tensor[(1, 2, 2), float32], Tensor[(4, 2, 2), float64]) {
  @func_7385(%var_7387, %var_7388) /* ty=(Tensor[(4, 2, 2), float32], Tensor[(1050), bool], Tensor[(8, 12, 8), float32], Tensor[(182), uint64], Tensor[(12, 5, 9), int32], Tensor[(540), int32], Tensor[(1, 2, 2), float32], Tensor[(4, 2, 2), float64]) */
}

def @func_7122(%var_7121: Tensor[(11, 2, 2), float32]) -> (Tensor[(11, 2, 2), bool],) {
  %478 = fn (%var_7114: Tensor[(11, 2, 2), float32]) -> (Tensor[(11, 2, 2), bool],) {
    %474 = @func_4373() /* ty=Tensor[(1, 2, 2), float32] */;
    %475 = cast(%474, dtype="bool") /* ty=Tensor[(1, 2, 2), bool] */;
    %476 = cast(%var_7114, dtype="bool") /* ty=Tensor[(11, 2, 2), bool] */;
    %477 = greater(%475, %476) /* ty=Tensor[(11, 2, 2), bool] */;
    (%477,)
  };
  %478(%var_7121) /* ty=(Tensor[(11, 2, 2), bool],) */
}

def @func_4947(%var_4945: Tensor[(49), float64], %var_4946: Tensor[(768, 1), float32]) -> (Tensor[(4, 2, 2), float64], Tensor[(49), float64], Tensor[(7, 2, 2), bool], Tensor[(4, 2, 2), uint16], Tensor[(768, 1), float32]) {
  @func_4943(%var_4945, %var_4946) /* ty=(Tensor[(4, 2, 2), float64], Tensor[(49), float64], Tensor[(7, 2, 2), bool], Tensor[(4, 2, 2), uint16], Tensor[(768, 1), float32]) */
}

def @func_1663() -> (Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16]) {
  @func_1661() /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16]) */
}

def @func_5854() -> (Tensor[(1, 2, 2), float32], Tensor[(6, 2, 2), int16], Tensor[(1, 2, 2), float32], Tensor[(4, 2, 2), uint16], Tensor[(7, 2, 16), bool], Tensor[(224), uint64], Tensor[(?, 2, 2), bool]) {
  %479 = @func_4120() /* ty=(Tensor[(1, 2, 2), float32],) */;
  %480 = @func_3627() /* ty=(Tensor[(6, 2, 2), int16],) */;
  %481 = @func_5164() /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %482 = cast(meta[relay.Constant][20] /* ty=Tensor[(224), uint64] */, dtype="uint64") /* ty=Tensor[(224), uint64] */;
  %483 = cast(meta[relay.Constant][20] /* ty=Tensor[(224), uint64] */, dtype="uint64") /* ty=Tensor[(224), uint64] */;
  %484 = reshape(%482, newshape=[7, 2, 16]) /* ty=Tensor[(7, 2, 16), uint64] */;
  %485 = reshape(%483, newshape=[7, 2, 16]) /* ty=Tensor[(7, 2, 16), uint64] */;
  %486 = @func_5615(%484, %485) /* ty=(Tensor[(7, 2, 16), bool],) */;
  %487 = @func_5723() /* ty=Tensor[(1, 2, 2), float32] */;
  %488 = cast(%487, dtype="float32") /* ty=Tensor[(1, 2, 2), float32] */;
  %489 = asin(%488) /* ty=Tensor[(1, 2, 2), float32] */;
  %490 = cast(%489, dtype="uint64") /* ty=Tensor[(1, 2, 2), uint64] */;
  %491 = shape_of(%487, dtype="int32") /* ty=Tensor[(3), int32] */;
  %492 = cast(%487, dtype="uint64") /* ty=Tensor[(1, 2, 2), uint64] */;
  %493 = dyn.reshape(%490, %491, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %494 = maximum(%492, %493) /* ty=Tensor[(?, 2, 2), uint64] */;
  %495 = cast(%489, dtype="uint64") /* ty=Tensor[(1, 2, 2), uint64] */;
  %496 = shape_of(%494, dtype="int32") /* ty=Tensor[(3), int32] */;
  %497 = cast(%494, dtype="uint64") /* ty=Tensor[(?, 2, 2), uint64] */;
  %498 = dyn.reshape(%495, %496, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %499 = logical_xor(%497, %498) /* ty=Tensor[(?, 2, 2), uint64] */;
  %500 = cast(%499, dtype="bool") /* ty=Tensor[(?, 2, 2), bool] */;
  %501 = shape_of(%487, dtype="int32") /* ty=Tensor[(3), int32] */;
  %502 = cast(%487, dtype="bool") /* ty=Tensor[(1, 2, 2), bool] */;
  %503 = dyn.reshape(%500, %501, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %504 = %479.0;
  %505 = %480.0;
  %506 = @func_5101() /* ty=Tensor[(1, 2, 2), float32] */;
  %507 = %481.0;
  %508 = %486.0;
  %509 = equal(%502, %503) /* ty=Tensor[(?, 2, 2), bool] */;
  (%504, %505, %506, %507, %508, meta[relay.Constant][20] /* ty=Tensor[(224), uint64] */, %509)
}

def @func_5600(%var_5598: uint64, %var_5599: Tensor[(13, 1, 14), uint64]) -> (Tensor[(13, 1, 14), uint64], Tensor[(8, 12, 8), float32], Tensor[(1, 2, 2), float32]) {
  %516 = fn (%var_5578: uint64, %var_5579: Tensor[(13, 1, 14), uint64]) -> (Tensor[(13, 1, 14), uint64], Tensor[(8, 12, 8), float32], Tensor[(1, 2, 2), float32]) {
    %510 = cast(%var_5578, dtype="uint64") /* ty=uint64 */;
    %511 = cast(%var_5579, dtype="uint64") /* ty=Tensor[(13, 1, 14), uint64] */;
    %512 = @func_4477() /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(8, 12, 8), float32]) */;
    %513 = bitwise_or(%510, %511) /* ty=Tensor[(13, 1, 14), uint64] */;
    %514 = %512.1;
    %515 = @func_210() /* ty=Tensor[(1, 2, 2), float32] */;
    (%513, %514, %515)
  };
  %516(%var_5598, %var_5599) /* ty=(Tensor[(13, 1, 14), uint64], Tensor[(8, 12, 8), float32], Tensor[(1, 2, 2), float32]) */
}

def @func_4996() -> (Tensor[(4, 2, 2), uint16],) {
  %517 = @func_4105() /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %518 = %517.0;
  (%518,)
}

def @func_3521(%var_3488: Tensor[(8, 12, 8), float32]) -> (Tensor[(6, 15, 6), float32], Tensor[(8, 12, 8), bool], Tensor[(4, 2, 2), uint16], Tensor[(1260), bool], Tensor[(1, 2, 2), float32]) {
  %519 = @func_2342() /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(6, 15, 6), float64], Tensor[(6, 15, 6), float32]) */;
  %520 = @func_1327() /* ty=Tensor[(8, 12, 8), float32] */;
  %521 = cast(%var_3488, dtype="bool") /* ty=Tensor[(8, 12, 8), bool] */;
  %522 = shape_of(%520, dtype="int32") /* ty=Tensor[(3), int32] */;
  %523 = cast(%520, dtype="bool") /* ty=Tensor[(8, 12, 8), bool] */;
  %524 = dyn.reshape(%521, %522, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %525 = cast(meta[relay.Constant][21] /* ty=Tensor[(1260), bool] */, dtype="bool") /* ty=Tensor[(1260), bool] */;
  %526 = reshape(%525, newshape=[9, 10, 14]) /* ty=Tensor[(9, 10, 14), bool] */;
  %527 = @func_822(%526) /* ty=(Tensor[(6, 2, 2), int16], Tensor[(9, 10, 14), bool], Tensor[(4, 2, 2), uint16]) */;
  %528 = @func_782() /* ty=(Tensor[(1, 2, 2), float32], Tensor[(9, 10, 14), bool]) */;
  %529 = %519.2;
  %530 = greater_equal(%523, %524) /* ty=Tensor[(8, 12, 8), bool] */;
  %531 = %527.2;
  %532 = %528.0;
  (%529, %530, %531, meta[relay.Constant][21] /* ty=Tensor[(1260), bool] */, %532)
}

def @func_3929(%var_3888: Tensor[(1, 6, 13), float64], %var_3889: Tensor[(16, 6, 13), float64], %var_3917: Tensor[(28), float64], %var_3927: Tensor[(840, 1), float64]) -> (Tensor[(16, 6, 13), float64], Tensor[(6, 2, 2), int16], Tensor[(7, 2, 2), uint8], Tensor[(28), float64], Tensor[(4, 2, 2), uint16], Tensor[(12, 5, 14), float64], Tensor[(840, 1), float64]) {
  %533 = cast(%var_3888, dtype="float64") /* ty=Tensor[(1, 6, 13), float64] */;
  %534 = cast(%var_3889, dtype="float64") /* ty=Tensor[(16, 6, 13), float64] */;
  %535 = @func_3627() /* ty=(Tensor[(6, 2, 2), int16],) */;
  %536 = cast(%var_3917, dtype="float64") /* ty=Tensor[(28), float64] */;
  %537 = reshape(%536, newshape=[7, 2, 2]) /* ty=Tensor[(7, 2, 2), float64] */;
  %538 = @func_1387(%537) /* ty=(Tensor[(7, 2, 2), uint8],) */;
  %539 = @func_1636() /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %540 = cast(%var_3927, dtype="float64") /* ty=Tensor[(840, 1), float64] */;
  %541 = reshape(%540, newshape=[12, 5, 14]) /* ty=Tensor[(12, 5, 14), float64] */;
  %542 = power(%533, %534) /* ty=Tensor[(16, 6, 13), float64] */;
  %543 = %535.0;
  %544 = %538.0;
  %545 = %539.0;
  %546 = @func_3534(%541) /* ty=Tensor[(12, 5, 14), float64] */;
  (%542, %543, %544, %var_3917, %545, %546, %var_3927)
}

def @func_6117(%var_6073: Tensor[(2184), float32]) -> (Tensor[(2184), float32], Tensor[(?, 16), int16]) {
  %547 = cast(%var_6073, dtype="float32") /* ty=Tensor[(2184), float32] */;
  %548 = reshape(%547, newshape=[2184]) /* ty=Tensor[(2184), float32] */;
  %549 = @func_4760(%548) /* ty=(Tensor[(2, 15, 15), bool], Tensor[(1, 2, 2), float64], Tensor[(1, 16), uint16], Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), bool], Tensor[(14, 12, 13), float32], Tensor[(2184), float32], Tensor[(4, 2, 2), uint16]) */;
  %550 = %549.2;
  %551 = @func_2412() /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %552 = %551.0;
  %553 = cast(%552, dtype="int16") /* ty=Tensor[(4, 2, 2), int16] */;
  %554 = shape_of(%550, dtype="int32") /* ty=Tensor[(2), int32] */;
  %555 = cast(%550, dtype="int16") /* ty=Tensor[(1, 16), int16] */;
  %556 = dyn.reshape(%553, %554, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %557 = minimum(%555, %556) /* ty=Tensor[(?, 16), int16] */;
  (%var_6073, %557)
}

def @func_2863(%var_2861: Tensor[(14, 12, 13), float32]) -> Tensor[(14, 12, 13), float32] {
  @func_2860(%var_2861) /* ty=Tensor[(14, 12, 13), float32] */
}

def @func_5165() -> (Tensor[(4, 2, 2), uint16],) {
  %560 = fn () -> (Tensor[(4, 2, 2), uint16],) {
    %558 = @func_314() /* ty=(Tensor[(4, 2, 2), uint16],) */;
    %559 = %558.0;
    (%559,)
  };
  %560() /* ty=(Tensor[(4, 2, 2), uint16],) */
}

def @func_6476() -> Tensor[(4, 2, 2), uint16] {
  %561 = @func_5164() /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %561.0
}

def @func_1327() -> Tensor[(8, 12, 8), float32] {
  %562 = @func_898() /* ty=(Tensor[(8, 12, 8), float32], Tensor[(1, 2, 2), float32], Tensor[(4, 2, 2), uint16]) */;
  %562.0
}

def @func_1887() -> (Tensor[(4, 2, 2), uint16], Tensor[(1, 2, 2), float32], Tensor[(245, 2), int16]) {
  %563 = cast(meta[relay.Constant][22] /* ty=Tensor[(245, 2), int16] */, dtype="int16") /* ty=Tensor[(245, 2), int16] */;
  %564 = reshape(%563, newshape=[490]) /* ty=Tensor[(490), int16] */;
  %565 = @func_1274(%564) /* ty=(Tensor[(1, 2, 2), float32], Tensor[(1, 2, 2), float32], Tensor[(4, 2, 2), uint16], Tensor[(14, 5, 7), int16], int16, Tensor[(490), float32], Tensor[(4, 2, 2), float32]) */;
  %566 = @func_437() /* ty=Tensor[(4, 2, 2), uint16] */;
  %567 = %565.1;
  (%566, %567, meta[relay.Constant][22] /* ty=Tensor[(245, 2), int16] */)
}

def @func_4120() -> (Tensor[(1, 2, 2), float32],) {
  %568 = @func_210() /* ty=Tensor[(1, 2, 2), float32] */;
  (%568,)
}

def @func_969(%var_967: int16, %var_968: Tensor[(14, 5, 7), int16]) -> (Tensor[(14, 5, 7), int16],) {
  @func_965(%var_967, %var_968) /* ty=(Tensor[(14, 5, 7), int16],) */
}

def @func_783() -> (Tensor[(1, 2, 2), float32], Tensor[(9, 10, 14), bool]) {
  %572 = fn () -> (Tensor[(1, 2, 2), float32], Tensor[(9, 10, 14), bool]) {
    %569 = @func_643() /* ty=(Tensor[(9, 10, 14), bool],) */;
    %570 = @func_210() /* ty=Tensor[(1, 2, 2), float32] */;
    %571 = %569.0;
    (%570, %571)
  };
  %572() /* ty=(Tensor[(1, 2, 2), float32], Tensor[(9, 10, 14), bool]) */
}

def @func_1710(%var_1709: Tensor[(15, 7, 10), float32]) -> (Tensor[(15, 7, 10), float32], Tensor[(10, 11, 1), float64], Tensor[(110), float64]) {
  %579 = fn (%var_1679: Tensor[(15, 7, 10), float32]) -> (Tensor[(15, 7, 10), float32], Tensor[(10, 11, 1), float64], Tensor[(110), float64]) {
    %573 = cast(%var_1679, dtype="float32") /* ty=Tensor[(15, 7, 10), float32] */;
    %574 = cast(meta[relay.Constant][23] /* ty=Tensor[(110), float64] */, dtype="float64") /* ty=Tensor[(110), float64] */;
    %575 = reshape(%574, newshape=[10, 11, 1]) /* ty=Tensor[(10, 11, 1), float64] */;
    %576 = @func_1306(%575) /* ty=(Tensor[(10, 11, 1), float64],) */;
    %577 = rsqrt(%573) /* ty=Tensor[(15, 7, 10), float32] */;
    %578 = %576.0;
    (%577, %578, meta[relay.Constant][23] /* ty=Tensor[(110), float64] */)
  };
  %579(%var_1709) /* ty=(Tensor[(15, 7, 10), float32], Tensor[(10, 11, 1), float64], Tensor[(110), float64]) */
}

def @func_645() -> (Tensor[(9, 10, 14), bool],) {
  @func_643() /* ty=(Tensor[(9, 10, 14), bool],) */
}

def @func_4588() -> (Tensor[(4, 2, 2), bool], Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16]) {
  %586 = fn () -> (Tensor[(4, 2, 2), bool], Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16]) {
    %580 = @func_3727() /* ty=(Tensor[(4, 2, 2), bool], Tensor[(4, 2, 2), float64]) */;
    %581 = @func_4543() /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16]) */;
    %582 = @func_4227() /* ty=(Tensor[(4, 2, 2), uint16],) */;
    %583 = %580.0;
    %584 = %581.0;
    %585 = %582.0;
    (%583, %584, %585)
  };
  %586() /* ty=(Tensor[(4, 2, 2), bool], Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16]) */
}

def @func_4943(%var_4929: Tensor[(49), float64], %var_4941: Tensor[(768, 1), float32]) -> (Tensor[(4, 2, 2), float64], Tensor[(49), float64], Tensor[(7, 2, 2), bool], Tensor[(4, 2, 2), uint16], Tensor[(768, 1), float32]) {
  %587 = @func_4373() /* ty=Tensor[(1, 2, 2), float32] */;
  %588 = cast(%var_4929, dtype="float64") /* ty=Tensor[(49), float64] */;
  %589 = reshape(%588, newshape=[1, 7, 7]) /* ty=Tensor[(1, 7, 7), float64] */;
  %590 = @func_4850(%589) /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(?, 7, 7), uint8], Tensor[(?, 7, 7), uint16], Tensor[(7, 2, 2), uint8], Tensor[(28), float64], Tensor[(?, 7, 7), float32]) */;
  %591 = %590.3;
  %592 = cast(%587, dtype="bool") /* ty=Tensor[(1, 2, 2), bool] */;
  %593 = cast(%591, dtype="bool") /* ty=Tensor[(7, 2, 2), bool] */;
  %594 = cast(%var_4941, dtype="float32") /* ty=Tensor[(768, 1), float32] */;
  %595 = reshape(%594, newshape=[768, 1]) /* ty=Tensor[(768, 1), float32] */;
  %596 = @func_4897(%595) /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16], Tensor[(1, 2, 2), float32], Tensor[(8, 12, 8), int16], Tensor[(768, 540), int8]) */;
  %597 = @func_2571() /* ty=Tensor[(4, 2, 2), float64] */;
  %598 = not_equal(%592, %593) /* ty=Tensor[(7, 2, 2), bool] */;
  %599 = %596.0;
  (%597, %var_4929, %598, %599, %var_4941)
}

def @func_5065() -> (Tensor[(4, 2, 2), uint16],) {
  %602 = fn () -> (Tensor[(4, 2, 2), uint16],) {
    %600 = @func_629() /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(1, 2, 2), float64]) */;
    %601 = %600.0;
    (%601,)
  };
  %602() /* ty=(Tensor[(4, 2, 2), uint16],) */
}

def @func_202(%var_181: Tensor[(4, 3, 6), int8]) -> (Tensor[(4, 3, 6), int8],) {
  %603 = cast(%var_181, dtype="int8") /* ty=Tensor[(4, 3, 6), int8] */;
  %604 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(4, 3, 6), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %605 = cast(meta[relay.Constant][24] /* ty=Tensor[(4, 3, 6), int8] */, dtype="int8") /* ty=Tensor[(4, 3, 6), int8] */;
  %606 = dyn.reshape(%603, %604, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %607 = minimum(%605, %606) /* ty=Tensor[(4, 3, 6), int8] */;
  (%607,)
}

def @func_477() -> (Tensor[(6, 2, 2), int16],) {
  @func_475() /* ty=(Tensor[(6, 2, 2), int16],) */
}

def @func_6700(%var_6698: Tensor[(49), float64], %var_6699: Tensor[(49), float64]) -> (Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), float64], Tensor[(768), float32], Tensor[(49), bool], Tensor[(14, 12, 13), float32], Tensor[(2, 1092), float32]) {
  %623 = fn (%var_6686: Tensor[(49), float64], %var_6689: Tensor[(49), float64]) -> (Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), float64], Tensor[(768), float32], Tensor[(49), bool], Tensor[(14, 12, 13), float32], Tensor[(2, 1092), float32]) {
    %608 = cast(%var_6686, dtype="float64") /* ty=Tensor[(49), float64] */;
    %609 = cast(meta[relay.Constant][25] /* ty=Tensor[(768), float32] */, dtype="float32") /* ty=Tensor[(768), float32] */;
    %610 = reshape(%608, newshape=[49]) /* ty=Tensor[(49), float64] */;
    %611 = reshape(%609, newshape=[768, 1]) /* ty=Tensor[(768, 1), float32] */;
    %612 = @func_4943(%610, %611) /* ty=(Tensor[(4, 2, 2), float64], Tensor[(49), float64], Tensor[(7, 2, 2), bool], Tensor[(4, 2, 2), uint16], Tensor[(768, 1), float32]) */;
    %613 = cast(%var_6689, dtype="bool") /* ty=Tensor[(49), bool] */;
    %614 = shape_of(%var_6686, dtype="int32") /* ty=Tensor[(1), int32] */;
    %615 = cast(%var_6686, dtype="bool") /* ty=Tensor[(49), bool] */;
    %616 = dyn.reshape(%613, %614, newshape=[]) /* ty=Tensor[(?), bool] */;
    %617 = cast(meta[relay.Constant][26] /* ty=Tensor[(2, 1092), float32] */, dtype="float32") /* ty=Tensor[(2, 1092), float32] */;
    %618 = reshape(%617, newshape=[14, 12, 13]) /* ty=Tensor[(14, 12, 13), float32] */;
    %619 = @func_4444() /* ty=Tensor[(4, 2, 2), uint16] */;
    %620 = %612.0;
    %621 = equal(%615, %616) /* ty=Tensor[(49), bool] */;
    %622 = @func_2860(%618) /* ty=Tensor[(14, 12, 13), float32] */;
    (%619, %620, meta[relay.Constant][25] /* ty=Tensor[(768), float32] */, %621, %622, meta[relay.Constant][26] /* ty=Tensor[(2, 1092), float32] */)
  };
  %623(%var_6698, %var_6699) /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), float64], Tensor[(768), float32], Tensor[(49), bool], Tensor[(14, 12, 13), float32], Tensor[(2, 1092), float32]) */
}

def @func_6666() -> Tensor[(8, 12, 8), float32] {
  @func_6664() /* ty=Tensor[(8, 12, 8), float32] */
}

def @func_5723() -> Tensor[(1, 2, 2), float32] {
  @func_4373() /* ty=Tensor[(1, 2, 2), float32] */
}

def @func_6710(%var_6702: Tensor[(7, 12, 16), bool]) -> (Tensor[(7, 12, 16), bool],) {
  %624 = cast(meta[relay.Constant][27] /* ty=Tensor[(7, 12, 16), bool] */, dtype="bool") /* ty=Tensor[(7, 12, 16), bool] */;
  %625 = shape_of(%var_6702, dtype="int32") /* ty=Tensor[(3), int32] */;
  %626 = cast(%var_6702, dtype="bool") /* ty=Tensor[(7, 12, 16), bool] */;
  %627 = dyn.reshape(%624, %625, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %628 = logical_or(%626, %627) /* ty=Tensor[(7, 12, 16), bool] */;
  (%628,)
}

def @func_1308(%var_1307: Tensor[(10, 11, 1), float64]) -> (Tensor[(10, 11, 1), float64],) {
  %631 = fn (%var_1301: Tensor[(10, 11, 1), float64]) -> (Tensor[(10, 11, 1), float64],) {
    %629 = cast(%var_1301, dtype="float64") /* ty=Tensor[(10, 11, 1), float64] */;
    %630 = atanh(%629) /* ty=Tensor[(10, 11, 1), float64] */;
    (%630,)
  };
  %631(%var_1307) /* ty=(Tensor[(10, 11, 1), float64],) */
}

def @func_291() -> (Tensor[(4, 2, 2), uint16],) {
  %636 = fn () -> (Tensor[(4, 2, 2), uint16],) {
    %632 = @func_210() /* ty=Tensor[(1, 2, 2), float32] */;
    %633 = cast(%632, dtype="uint16") /* ty=Tensor[(1, 2, 2), uint16] */;
    %634 = cast(meta[relay.Constant][28] /* ty=Tensor[(4, 2, 2), float32] */, dtype="uint16") /* ty=Tensor[(4, 2, 2), uint16] */;
    %635 = logical_xor(%633, %634) /* ty=Tensor[(4, 2, 2), uint16] */;
    (%635,)
  };
  %636() /* ty=(Tensor[(4, 2, 2), uint16],) */
}

def @func_7635(%var_7633: Tensor[(4, 2, 2), uint16], %var_7634: Tensor[(768), float32]) -> (Tensor[(4, 2, 2), int8], Tensor[(4, 2, 2), uint16], Tensor[(768), float32]) {
  @func_7631(%var_7633, %var_7634) /* ty=(Tensor[(4, 2, 2), int8], Tensor[(4, 2, 2), uint16], Tensor[(768), float32]) */
}

def @func_6299(%var_6249: Tensor[(490), int16]) -> (Tensor[(4, 2, 2), uint16], Tensor[(490), int16], Tensor[(120), int16], Tensor[(490), int16], Tensor[(4, 2, 2), uint16], Tensor[(1, 2, 2), float32], Tensor[(4, 2, 2), float64]) {
  %637 = @func_1146() /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %638 = cast(meta[relay.Constant][29] /* ty=Tensor[(120), int16] */, dtype="int16") /* ty=Tensor[(120), int16] */;
  %639 = cast(%var_6249, dtype="int16") /* ty=Tensor[(490), int16] */;
  %640 = reshape(%638, newshape=[3, 5, 8]) /* ty=Tensor[(3, 5, 8), int16] */;
  %641 = reshape(%639, newshape=[490]) /* ty=Tensor[(490), int16] */;
  %642 = @func_5662(%640, %641) /* ty=(Tensor[(3, 5, 8), bool], Tensor[(4, 2, 2), uint16], Tensor[(490), int16]) */;
  %643 = @func_4543() /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16]) */;
  %644 = @func_4120() /* ty=(Tensor[(1, 2, 2), float32],) */;
  %645 = %643.1;
  %646 = cast(%645, dtype="uint16") /* ty=Tensor[(4, 2, 2), uint16] */;
  %647 = reshape(%646, newshape=[4, 2, 2]) /* ty=Tensor[(4, 2, 2), uint16] */;
  %648 = %637.0;
  %649 = %642.2;
  %650 = %644.0;
  %651 = @func_2598(%647) /* ty=Tensor[(4, 2, 2), float64] */;
  (%648, %649, meta[relay.Constant][29] /* ty=Tensor[(120), int16] */, %var_6249, %645, %650, %651)
}

def @func_7943() -> Tensor[(7, 12, 8), int8] {
  @func_7941() /* ty=Tensor[(7, 12, 8), int8] */
}

def @func_681(%var_671: Tensor[(11, 2, 2), float32]) -> Tensor[(11, 2, 2), float64] {
  %652 = @func_547() /* ty=(Tensor[(1, 2, 2), float32], Tensor[(1, 2, 2), float32]) */;
  %653 = %652.1;
  %654 = cast(%653, dtype="bool") /* ty=Tensor[(1, 2, 2), bool] */;
  %655 = cast(%var_671, dtype="bool") /* ty=Tensor[(11, 2, 2), bool] */;
  %656 = less(%654, %655) /* ty=Tensor[(11, 2, 2), bool] */;
  %657 = cast(%656, dtype="float64") /* ty=Tensor[(11, 2, 2), float64] */;
  cos(%657) /* ty=Tensor[(11, 2, 2), float64] */
}

def @func_6302(%var_6300: Tensor[(490), int16]) -> (Tensor[(4, 2, 2), uint16], Tensor[(490), int16], Tensor[(120), int16], Tensor[(490), int16], Tensor[(4, 2, 2), uint16], Tensor[(1, 2, 2), float32], Tensor[(4, 2, 2), float64]) {
  @func_6299(%var_6300) /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(490), int16], Tensor[(120), int16], Tensor[(490), int16], Tensor[(4, 2, 2), uint16], Tensor[(1, 2, 2), float32], Tensor[(4, 2, 2), float64]) */
}

def @func_2413() -> (Tensor[(4, 2, 2), uint16],) {
  %659 = fn () -> (Tensor[(4, 2, 2), uint16],) {
    %658 = @func_1378() /* ty=Tensor[(4, 2, 2), uint16] */;
    (%658,)
  };
  %659() /* ty=(Tensor[(4, 2, 2), uint16],) */
}

def @func_6713(%var_6711: Tensor[(7, 12, 16), bool]) -> (Tensor[(7, 12, 16), bool],) {
  @func_6710(%var_6711) /* ty=(Tensor[(7, 12, 16), bool],) */
}

def @func_4196(%var_4193: int16, %var_4194: Tensor[(490), int16], %var_4195: Tensor[(490), float64]) -> (Tensor[(6, 2, 2), int16], Tensor[(14, 5, 7), int16], int16, Tensor[(490), uint8]) {
  %675 = fn (%var_4166: int16, %var_4167: Tensor[(490), int16], %var_4187: Tensor[(490), float64]) -> (Tensor[(6, 2, 2), int16], Tensor[(14, 5, 7), int16], int16, Tensor[(490), uint8]) {
    %660 = @func_3627() /* ty=(Tensor[(6, 2, 2), int16],) */;
    %661 = cast(%var_4166, dtype="int16") /* ty=int16 */;
    %662 = cast(%var_4167, dtype="int16") /* ty=Tensor[(490), int16] */;
    %663 = reshape(%661, newshape=[]) /* ty=int16 */;
    %664 = reshape(%662, newshape=[14, 5, 7]) /* ty=Tensor[(14, 5, 7), int16] */;
    %665 = @func_965(%663, %664) /* ty=(Tensor[(14, 5, 7), int16],) */;
    %666 = cast(%var_4167, dtype="float64") /* ty=Tensor[(490), float64] */;
    %667 = sinh(%666) /* ty=Tensor[(490), float64] */;
    %668 = cast(%var_4187, dtype="uint8") /* ty=Tensor[(490), uint8] */;
    %669 = shape_of(%667, dtype="int32") /* ty=Tensor[(1), int32] */;
    %670 = cast(%667, dtype="uint8") /* ty=Tensor[(490), uint8] */;
    %671 = dyn.reshape(%668, %669, newshape=[]) /* ty=Tensor[(?), uint8] */;
    %672 = %660.0;
    %673 = %665.0;
    %674 = right_shift(%670, %671) /* ty=Tensor[(490), uint8] */;
    (%672, %673, %var_4166, %674)
  };
  %675(%var_4193, %var_4194, %var_4195) /* ty=(Tensor[(6, 2, 2), int16], Tensor[(14, 5, 7), int16], int16, Tensor[(490), uint8]) */
}

def @func_5725() -> Tensor[(1, 2, 2), float32] {
  @func_5723() /* ty=Tensor[(1, 2, 2), float32] */
}

def @func_6972(%var_6917: Tensor[(15, 2, 2), float32], %var_6929: Tensor[(56), float32], %var_6930: Tensor[(216), int8]) -> (Tensor[(15, 2, 2), float64], Tensor[(4, 2, 2), uint16], Tensor[(?, 2, 2), float32], Tensor[(56), float32], Tensor[(216), int8], Tensor[(15, 2, 2), float32]) {
  %676 = @func_1929() /* ty=(Tensor[(1, 2, 2), float32],) */;
  %677 = %676.0;
  %678 = cast(%677, dtype="float64") /* ty=Tensor[(1, 2, 2), float64] */;
  %679 = cast(%var_6917, dtype="float64") /* ty=Tensor[(15, 2, 2), float64] */;
  %680 = @func_1661() /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16]) */;
  %681 = cast(%var_6929, dtype="float32") /* ty=Tensor[(56), float32] */;
  %682 = cast(%var_6930, dtype="int8") /* ty=Tensor[(216), int8] */;
  %683 = reshape(%681, newshape=[14, 2, 2]) /* ty=Tensor[(14, 2, 2), float32] */;
  %684 = reshape(%682, newshape=[216]) /* ty=Tensor[(216), int8] */;
  %685 = @func_6048(%683, %684) /* ty=(Tensor[(14, 2, 2), uint16], Tensor[(4, 2, 2), uint16], Tensor[(?, 2, 2), float32], Tensor[(9, 12, 2), int8], Tensor[(216), int8], Tensor[(14, 2, 2), float64]) */;
  %686 = cast(%var_6917, dtype="float32") /* ty=Tensor[(15, 2, 2), float32] */;
  %687 = cast(%677, dtype="float32") /* ty=Tensor[(1, 2, 2), float32] */;
  %688 = subtract(%678, %679) /* ty=Tensor[(15, 2, 2), float64] */;
  %689 = %680.1;
  %690 = %685.2;
  %691 = floor_mod(%686, %687) /* ty=Tensor[(15, 2, 2), float32] */;
  (%688, %689, %690, %var_6929, %var_6930, %691)
}

def @func_1929() -> (Tensor[(1, 2, 2), float32],) {
  %692 = @func_401() /* ty=(Tensor[(4, 2, 2), bool], Tensor[(1, 2, 2), float32], Tensor[(1, 2, 2), float32]) */;
  %693 = %692.1;
  (%693,)
}

def @func_4260(%var_4259: Tensor[(245, 2), int16]) -> (Tensor[(8, 12, 8), float32], Tensor[(14, 5, 7), int16], int16, Tensor[(245, 2), int16]) {
  %706 = fn (%var_4249: Tensor[(245, 2), int16]) -> (Tensor[(8, 12, 8), float32], Tensor[(14, 5, 7), int16], int16, Tensor[(245, 2), int16]) {
    %694 = @func_1327() /* ty=Tensor[(8, 12, 8), float32] */;
    %695 = cast(meta[relay.Constant][30] /* ty=Tensor[(8, 12, 8), float32] */, dtype="float32") /* ty=Tensor[(8, 12, 8), float32] */;
    %696 = shape_of(%694, dtype="int32") /* ty=Tensor[(3), int32] */;
    %697 = cast(%694, dtype="float32") /* ty=Tensor[(8, 12, 8), float32] */;
    %698 = dyn.reshape(%695, %696, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %699 = cast(meta[relay.Constant][31] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %700 = cast(%var_4249, dtype="int16") /* ty=Tensor[(245, 2), int16] */;
    %701 = reshape(%699, newshape=[]) /* ty=int16 */;
    %702 = reshape(%700, newshape=[14, 5, 7]) /* ty=Tensor[(14, 5, 7), int16] */;
    %703 = @func_965(%701, %702) /* ty=(Tensor[(14, 5, 7), int16],) */;
    %704 = subtract(%697, %698) /* ty=Tensor[(8, 12, 8), float32] */;
    %705 = %703.0;
    (%704, %705, meta[relay.Constant][31] /* ty=int16 */, %var_4249)
  };
  %706(%var_4259) /* ty=(Tensor[(8, 12, 8), float32], Tensor[(14, 5, 7), int16], int16, Tensor[(245, 2), int16]) */
}

def @func_2344() -> (Tensor[(4, 2, 2), uint16], Tensor[(6, 15, 6), float64], Tensor[(6, 15, 6), float32]) {
  @func_2342() /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(6, 15, 6), float64], Tensor[(6, 15, 6), float32]) */
}

def @func_5570(%var_5569: Tensor[(15, 12, 13), float32]) -> (Tensor[(15, 12, 13), float32], Tensor[(1, 2, 2), float32], Tensor[(540, 1), float32]) {
  %715 = fn (%var_5550: Tensor[(15, 12, 13), float32]) -> (Tensor[(15, 12, 13), float32], Tensor[(1, 2, 2), float32], Tensor[(540, 1), float32]) {
    %707 = cast(%var_5550, dtype="float32") /* ty=Tensor[(15, 12, 13), float32] */;
    %708 = asin(%707) /* ty=Tensor[(15, 12, 13), float32] */;
    %709 = cast(%708, dtype="float32") /* ty=Tensor[(15, 12, 13), float32] */;
    %710 = cast(meta[relay.Constant][32] /* ty=Tensor[(540, 1), float32] */, dtype="float32") /* ty=Tensor[(540, 1), float32] */;
    %711 = reshape(%710, newshape=[6, 15, 6]) /* ty=Tensor[(6, 15, 6), float32] */;
    %712 = @func_941(%711) /* ty=(Tensor[(6, 15, 6), uint8], Tensor[(1, 2, 2), float32]) */;
    %713 = log2(%709) /* ty=Tensor[(15, 12, 13), float32] */;
    %714 = %712.1;
    (%713, %714, meta[relay.Constant][32] /* ty=Tensor[(540, 1), float32] */)
  };
  %715(%var_5569) /* ty=(Tensor[(15, 12, 13), float32], Tensor[(1, 2, 2), float32], Tensor[(540, 1), float32]) */
}

def @func_4041(%var_4039: Tensor[(16), uint16]) -> (Tensor[(8, 12, 8), float32], Tensor[(4, 2, 2), uint16], Tensor[(16), uint16]) {
  %716 = cast(%var_4039, dtype="uint16") /* ty=Tensor[(16), uint16] */;
  %717 = reshape(%716, newshape=[4, 2, 2]) /* ty=Tensor[(4, 2, 2), uint16] */;
  %718 = @func_1088(%717) /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %719 = @func_1327() /* ty=Tensor[(8, 12, 8), float32] */;
  %720 = %718.0;
  (%719, %720, %var_4039)
}

def @func_2419() -> Tensor[(4, 2, 2), uint16] {
  %721 = @func_1849() /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %721.0
}

def @func_6386() -> (Tensor[(4, 2, 2), float32], Tensor[(4, 2, 2), uint16], Tensor[(8, 12, 8), float32], int16, Tensor[(490), int16]) {
  %732 = fn () -> (Tensor[(4, 2, 2), float32], Tensor[(4, 2, 2), uint16], Tensor[(8, 12, 8), float32], int16, Tensor[(490), int16]) {
    %722 = @func_3841() /* ty=(Tensor[(4, 2, 2), float32], Tensor[(4, 2, 2), float32], Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16]) */;
    %723 = @func_3841() /* ty=(Tensor[(4, 2, 2), float32], Tensor[(4, 2, 2), float32], Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16]) */;
    %724 = cast(meta[relay.Constant][33] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %725 = cast(meta[relay.Constant][34] /* ty=Tensor[(490), int16] */, dtype="int16") /* ty=Tensor[(490), int16] */;
    %726 = reshape(%724, newshape=[]) /* ty=int16 */;
    %727 = reshape(%725, newshape=[490]) /* ty=Tensor[(490), int16] */;
    %728 = @func_1359(%726, %727) /* ty=(Tensor[(1, 2, 2), float32], Tensor[(8, 12, 8), float32], Tensor[(14, 5, 7), int16], int16, Tensor[(490), int16], Tensor[(4, 2, 2), uint16]) */;
    %729 = %722.0;
    %730 = %723.2;
    %731 = %728.1;
    (%729, %730, %731, meta[relay.Constant][33] /* ty=int16 */, meta[relay.Constant][34] /* ty=Tensor[(490), int16] */)
  };
  %732() /* ty=(Tensor[(4, 2, 2), float32], Tensor[(4, 2, 2), uint16], Tensor[(8, 12, 8), float32], int16, Tensor[(490), int16]) */
}

def @func_5354(%var_5319: Tensor[(168), uint32], %var_5320: Tensor[(28), float64], %var_5352: Tensor[(22, 2), float32]) -> (Tensor[(4, 2, 2), uint16], Tensor[(12, 7, 2), bool], Tensor[(168), uint32], Tensor[(28), float64], Tensor[(11, 2, 2), float64], Tensor[(22, 2), float32]) {
  %733 = @func_5043() /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %734 = cast(%var_5319, dtype="uint32") /* ty=Tensor[(168), uint32] */;
  %735 = cast(%var_5319, dtype="uint32") /* ty=Tensor[(168), uint32] */;
  %736 = cast(%var_5320, dtype="float64") /* ty=Tensor[(28), float64] */;
  %737 = reshape(%734, newshape=[12, 7, 2]) /* ty=Tensor[(12, 7, 2), uint32] */;
  %738 = reshape(%735, newshape=[12, 7, 2]) /* ty=Tensor[(12, 7, 2), uint32] */;
  %739 = reshape(%736, newshape=[28]) /* ty=Tensor[(28), float64] */;
  %740 = @func_1450(%737, %738, %739) /* ty=(Tensor[(12, 7, 2), bool], Tensor[(7, 2, 2), uint8], Tensor[(28), float64], Tensor[(4, 2, 2), bool], Tensor[(110), float64], Tensor[(490, 1), int16], Tensor[(10, 11, 490), bool]) */;
  %741 = cast(%var_5352, dtype="float32") /* ty=Tensor[(22, 2), float32] */;
  %742 = reshape(%741, newshape=[11, 2, 2]) /* ty=Tensor[(11, 2, 2), float32] */;
  %743 = %733.0;
  %744 = %740.0;
  %745 = @func_681(%742) /* ty=Tensor[(11, 2, 2), float64] */;
  (%743, %744, %var_5319, %var_5320, %745, %var_5352)
}

def @func_7557() -> (Tensor[(8, 12, 8), float32], Tensor[(4, 2, 2), float32]) {
  %750 = fn () -> (Tensor[(8, 12, 8), float32], Tensor[(4, 2, 2), float32]) {
    %746 = @func_4477() /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(8, 12, 8), float32]) */;
    %747 = @func_3841() /* ty=(Tensor[(4, 2, 2), float32], Tensor[(4, 2, 2), float32], Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16]) */;
    %748 = %746.1;
    %749 = %747.1;
    (%748, %749)
  };
  %750() /* ty=(Tensor[(8, 12, 8), float32], Tensor[(4, 2, 2), float32]) */
}

def @func_2421() -> Tensor[(4, 2, 2), uint16] {
  @func_2419() /* ty=Tensor[(4, 2, 2), uint16] */
}

def @func_2046(%var_2044: Tensor[(72), int8], %var_2045: Tensor[(72), int8]) -> (Tensor[(72), bool], Tensor[(4, 2, 2), uint16], Tensor[(8, 12, 8), float32], Tensor[(72), bool], Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16], Tensor[(3, 420), bool]) {
  @func_2042(%var_2044, %var_2045) /* ty=(Tensor[(72), bool], Tensor[(4, 2, 2), uint16], Tensor[(8, 12, 8), float32], Tensor[(72), bool], Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16], Tensor[(3, 420), bool]) */
}

def @func_1661() -> (Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16]) {
  %751 = @func_1378() /* ty=Tensor[(4, 2, 2), uint16] */;
  %752 = cast(%751, dtype="uint16") /* ty=Tensor[(4, 2, 2), uint16] */;
  %753 = reshape(%752, newshape=[4, 2, 2]) /* ty=Tensor[(4, 2, 2), uint16] */;
  %754 = @func_1088(%753) /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %755 = %754.0;
  %756 = cast(%755, dtype="uint16") /* ty=Tensor[(4, 2, 2), uint16] */;
  %757 = reshape(%756, newshape=[4, 2, 2]) /* ty=Tensor[(4, 2, 2), uint16] */;
  %758 = @func_1088(%757) /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %759 = %758.0;
  (%751, %755, %759)
}

def @func_4106() -> (Tensor[(4, 2, 2), uint16],) {
  %761 = fn () -> (Tensor[(4, 2, 2), uint16],) {
    %760 = @func_437() /* ty=Tensor[(4, 2, 2), uint16] */;
    (%760,)
  };
  %761() /* ty=(Tensor[(4, 2, 2), uint16],) */
}

def @func_6132() -> Tensor[(1, 2, 2), float32] {
  %763 = fn () -> Tensor[(1, 2, 2), float32] {
    %762 = @func_4120() /* ty=(Tensor[(1, 2, 2), float32],) */;
    %762.0
  };
  %763() /* ty=Tensor[(1, 2, 2), float32] */
}

def @func_3628() -> (Tensor[(6, 2, 2), int16],) {
  %766 = fn () -> (Tensor[(6, 2, 2), int16],) {
    %764 = @func_475() /* ty=(Tensor[(6, 2, 2), int16],) */;
    %765 = %764.0;
    (%765,)
  };
  %766() /* ty=(Tensor[(6, 2, 2), int16],) */
}

def @func_3072(%var_3070: Tensor[(9, 10, 14), bool], %var_3071: Tensor[(2184), float32]) -> (Tensor[(14, 12, 13), float32], Tensor[(9, 10, 14), float64], Tensor[(9, 10, 14), float64]) {
  @func_3068(%var_3070, %var_3071) /* ty=(Tensor[(14, 12, 13), float32], Tensor[(9, 10, 14), float64], Tensor[(9, 10, 14), float64]) */
}

def @func_1329() -> Tensor[(8, 12, 8), float32] {
  @func_1327() /* ty=Tensor[(8, 12, 8), float32] */
}

def @func_5683() -> (Tensor[(4, 2, 2), float32], Tensor[(1, 2, 2), float32]) {
  @func_5681() /* ty=(Tensor[(4, 2, 2), float32], Tensor[(1, 2, 2), float32]) */
}

def @func_5395(%var_5390: Tensor[(9, 12, 2), int8], %var_5391: Tensor[(9, 12, 2), int8]) -> (Tensor[(9, 12, 2), int8],) {
  %767 = cast(%var_5391, dtype="int8") /* ty=Tensor[(9, 12, 2), int8] */;
  %768 = shape_of(%var_5390, dtype="int32") /* ty=Tensor[(3), int32] */;
  %769 = cast(%var_5390, dtype="int8") /* ty=Tensor[(9, 12, 2), int8] */;
  %770 = dyn.reshape(%767, %768, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %771 = bitwise_or(%769, %770) /* ty=Tensor[(9, 12, 2), int8] */;
  (%771,)
}

def @func_7692() -> (Tensor[(4, 2, 2), int64], Tensor[(4, 2, 2), float32], Tensor[(12, 5, 14), float64], Tensor[(840), float64]) {
  %787 = fn () -> (Tensor[(4, 2, 2), int64], Tensor[(4, 2, 2), float32], Tensor[(12, 5, 14), float64], Tensor[(840), float64]) {
    %772 = @func_3841() /* ty=(Tensor[(4, 2, 2), float32], Tensor[(4, 2, 2), float32], Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16]) */;
    %773 = %772.3;
    %774 = @func_5764() /* ty=Tensor[(4, 2, 2), float64] */;
    %775 = cast(%774, dtype="int64") /* ty=Tensor[(4, 2, 2), int64] */;
    %776 = shape_of(%773, dtype="int32") /* ty=Tensor[(3), int32] */;
    %777 = cast(%773, dtype="int64") /* ty=Tensor[(4, 2, 2), int64] */;
    %778 = dyn.reshape(%775, %776, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %779 = cast(%773, dtype="float32") /* ty=Tensor[(4, 2, 2), float32] */;
    %780 = acosh(%779) /* ty=Tensor[(4, 2, 2), float32] */;
    %781 = cast(%780, dtype="float32") /* ty=Tensor[(4, 2, 2), float32] */;
    %782 = cast(meta[relay.Constant][35] /* ty=Tensor[(840), float64] */, dtype="float64") /* ty=Tensor[(840), float64] */;
    %783 = reshape(%782, newshape=[12, 5, 14]) /* ty=Tensor[(12, 5, 14), float64] */;
    %784 = minimum(%777, %778) /* ty=Tensor[(4, 2, 2), int64] */;
    %785 = cosh(%781) /* ty=Tensor[(4, 2, 2), float32] */;
    %786 = @func_3534(%783) /* ty=Tensor[(12, 5, 14), float64] */;
    (%784, %785, %786, meta[relay.Constant][35] /* ty=Tensor[(840), float64] */)
  };
  %787() /* ty=(Tensor[(4, 2, 2), int64], Tensor[(4, 2, 2), float32], Tensor[(12, 5, 14), float64], Tensor[(840), float64]) */
}

def @func_6872(%var_6871: Tensor[(6, 14, 4), float32]) -> (Tensor[(72), int8], Tensor[(6, 15, 6), float32], Tensor[(336), float32], Tensor[(6, 14, 4), bool], Tensor[(1, 2, 2), float32]) {
  %802 = fn (%var_6856: Tensor[(6, 14, 4), float32]) -> (Tensor[(72), int8], Tensor[(6, 15, 6), float32], Tensor[(336), float32], Tensor[(6, 14, 4), bool], Tensor[(1, 2, 2), float32]) {
    %788 = @func_245() /* ty=(Tensor[(1, 2, 2), float32], Tensor[(4, 3, 6), int8], Tensor[(72), int8]) */;
    %789 = @func_2379() /* ty=(Tensor[(6, 15, 6), float32],) */;
    %790 = cast(meta[relay.Constant][36] /* ty=Tensor[(336), float32] */, dtype="float32") /* ty=Tensor[(336), float32] */;
    %791 = reshape(%790, newshape=[6, 14, 4]) /* ty=Tensor[(6, 14, 4), float32] */;
    %792 = @func_5148(%791) /* ty=(Tensor[(6, 14, 4), float32],) */;
    %793 = %792.0;
    %794 = cast(%var_6856, dtype="bool") /* ty=Tensor[(6, 14, 4), bool] */;
    %795 = shape_of(%793, dtype="int32") /* ty=Tensor[(3), int32] */;
    %796 = cast(%793, dtype="bool") /* ty=Tensor[(6, 14, 4), bool] */;
    %797 = dyn.reshape(%794, %795, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %798 = %788.2;
    %799 = %789.0;
    %800 = less(%796, %797) /* ty=Tensor[(6, 14, 4), bool] */;
    %801 = @func_5723() /* ty=Tensor[(1, 2, 2), float32] */;
    (%798, %799, meta[relay.Constant][36] /* ty=Tensor[(336), float32] */, %800, %801)
  };
  %802(%var_6871) /* ty=(Tensor[(72), int8], Tensor[(6, 15, 6), float32], Tensor[(336), float32], Tensor[(6, 14, 4), bool], Tensor[(1, 2, 2), float32]) */
}

def @func_1147() -> (Tensor[(4, 2, 2), uint16],) {
  %804 = fn () -> (Tensor[(4, 2, 2), uint16],) {
    %803 = @func_590() /* ty=Tensor[(4, 2, 2), uint16] */;
    (%803,)
  };
  %804() /* ty=(Tensor[(4, 2, 2), uint16],) */
}

def @func_1450(%var_1414: Tensor[(12, 7, 2), uint32], %var_1415: Tensor[(12, 7, 2), uint32], %var_1420: Tensor[(28), float64]) -> (Tensor[(12, 7, 2), bool], Tensor[(7, 2, 2), uint8], Tensor[(28), float64], Tensor[(4, 2, 2), bool], Tensor[(110), float64], Tensor[(490, 1), int16], Tensor[(10, 11, 490), bool]) {
  %805 = cast(%var_1415, dtype="bool") /* ty=Tensor[(12, 7, 2), bool] */;
  %806 = shape_of(%var_1414, dtype="int32") /* ty=Tensor[(3), int32] */;
  %807 = cast(%var_1414, dtype="bool") /* ty=Tensor[(12, 7, 2), bool] */;
  %808 = dyn.reshape(%805, %806, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %809 = cast(%var_1420, dtype="float64") /* ty=Tensor[(28), float64] */;
  %810 = reshape(%809, newshape=[7, 2, 2]) /* ty=Tensor[(7, 2, 2), float64] */;
  %811 = @func_1387(%810) /* ty=(Tensor[(7, 2, 2), uint8],) */;
  %812 = @func_401() /* ty=(Tensor[(4, 2, 2), bool], Tensor[(1, 2, 2), float32], Tensor[(1, 2, 2), float32]) */;
  %813 = cast(meta[relay.Constant][38] /* ty=Tensor[(490, 1), int16] */, dtype="int16") /* ty=Tensor[(490, 1), int16] */;
  %814 = reshape(%813, newshape=[490]) /* ty=Tensor[(490), int16] */;
  %815 = @func_1274(%814) /* ty=(Tensor[(1, 2, 2), float32], Tensor[(1, 2, 2), float32], Tensor[(4, 2, 2), uint16], Tensor[(14, 5, 7), int16], int16, Tensor[(490), float32], Tensor[(4, 2, 2), float32]) */;
  %816 = %815.5;
  %817 = cast(meta[relay.Constant][37] /* ty=Tensor[(110), float64] */, dtype="float64") /* ty=Tensor[(110), float64] */;
  %818 = reshape(%817, newshape=[10, 11, 1]) /* ty=Tensor[(10, 11, 1), float64] */;
  %819 = @func_1306(%818) /* ty=(Tensor[(10, 11, 1), float64],) */;
  %820 = %819.0;
  %821 = cast(%816, dtype="bool") /* ty=Tensor[(490), bool] */;
  %822 = cast(%820, dtype="bool") /* ty=Tensor[(10, 11, 1), bool] */;
  %823 = less(%807, %808) /* ty=Tensor[(12, 7, 2), bool] */;
  %824 = %811.0;
  %825 = %812.0;
  %826 = less_equal(%821, %822) /* ty=Tensor[(10, 11, 490), bool] */;
  (%823, %824, %var_1420, %825, meta[relay.Constant][37] /* ty=Tensor[(110), float64] */, meta[relay.Constant][38] /* ty=Tensor[(490, 1), int16] */, %826)
}

def @func_5103() -> Tensor[(1, 2, 2), float32] {
  @func_5101() /* ty=Tensor[(1, 2, 2), float32] */
}

def @func_4998() -> (Tensor[(4, 2, 2), uint16],) {
  @func_4996() /* ty=(Tensor[(4, 2, 2), uint16],) */
}

def @func_4544() -> (Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16]) {
  %831 = fn () -> (Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16]) {
    %827 = @func_1661() /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16]) */;
    %828 = @func_290() /* ty=(Tensor[(4, 2, 2), uint16],) */;
    %829 = %827.2;
    %830 = %828.0;
    (%829, %830)
  };
  %831() /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16]) */
}

def @func_7631(%var_7620: Tensor[(4, 2, 2), uint16], %var_7627: Tensor[(768), float32]) -> (Tensor[(4, 2, 2), int8], Tensor[(4, 2, 2), uint16], Tensor[(768), float32]) {
  %832 = @func_4587() /* ty=(Tensor[(4, 2, 2), bool], Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16]) */;
  %833 = %832.2;
  %834 = cast(%var_7620, dtype="int8") /* ty=Tensor[(4, 2, 2), int8] */;
  %835 = shape_of(%833, dtype="int32") /* ty=Tensor[(3), int32] */;
  %836 = cast(%833, dtype="int8") /* ty=Tensor[(4, 2, 2), int8] */;
  %837 = dyn.reshape(%834, %835, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %838 = cast(%var_7627, dtype="float32") /* ty=Tensor[(768), float32] */;
  %839 = reshape(%838, newshape=[768, 1]) /* ty=Tensor[(768, 1), float32] */;
  %840 = @func_4897(%839) /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16], Tensor[(1, 2, 2), float32], Tensor[(8, 12, 8), int16], Tensor[(768, 540), int8]) */;
  %841 = multiply(%836, %837) /* ty=Tensor[(4, 2, 2), int8] */;
  %842 = %840.0;
  (%841, %842, %var_7627)
}

def @func_8063() -> (Tensor[(1, 2, 2), float64],) {
  @func_8061() /* ty=(Tensor[(1, 2, 2), float64],) */
}

def @func_7863(%var_7862: Tensor[(16), uint16]) -> (Tensor[(8, 12, 8), float32], Tensor[(4, 2, 2), float64], Tensor[(16), uint16]) {
  %847 = fn (%var_7856: Tensor[(16), uint16]) -> (Tensor[(8, 12, 8), float32], Tensor[(4, 2, 2), float64], Tensor[(16), uint16]) {
    %843 = cast(%var_7856, dtype="uint16") /* ty=Tensor[(16), uint16] */;
    %844 = reshape(%843, newshape=[4, 2, 2]) /* ty=Tensor[(4, 2, 2), uint16] */;
    %845 = @func_6664() /* ty=Tensor[(8, 12, 8), float32] */;
    %846 = @func_2598(%844) /* ty=Tensor[(4, 2, 2), float64] */;
    (%845, %846, %var_7856)
  };
  %847(%var_7862) /* ty=(Tensor[(8, 12, 8), float32], Tensor[(4, 2, 2), float64], Tensor[(16), uint16]) */
}

def @func_5869(%var_5862: Tensor[(5, 11, 1), float32]) -> (Tensor[(5, 11, 1), float32],) {
  %848 = cast(%var_5862, dtype="float32") /* ty=Tensor[(5, 11, 1), float32] */;
  %849 = sigmoid(%848) /* ty=Tensor[(5, 11, 1), float32] */;
  (%849,)
}

def @func_1839(%var_1837: Tensor[(8, 12, 8), float32]) -> (Tensor[(8, 12, 8), int16],) {
  @func_1836(%var_1837) /* ty=(Tensor[(8, 12, 8), int16],) */
}

def @func_629() -> (Tensor[(4, 2, 2), uint16], Tensor[(1, 2, 2), float64]) {
  %850 = @func_290() /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %851 = @func_401() /* ty=(Tensor[(4, 2, 2), bool], Tensor[(1, 2, 2), float32], Tensor[(1, 2, 2), float32]) */;
  %852 = %851.2;
  %853 = cast(%852, dtype="float64") /* ty=Tensor[(1, 2, 2), float64] */;
  %854 = %850.0;
  %855 = log10(%853) /* ty=Tensor[(1, 2, 2), float64] */;
  (%854, %855)
}

def @func_5766() -> Tensor[(4, 2, 2), float64] {
  @func_5764() /* ty=Tensor[(4, 2, 2), float64] */
}

def @func_212() -> Tensor[(1, 2, 2), float32] {
  @func_210() /* ty=Tensor[(1, 2, 2), float32] */
}

def @func_1638() -> (Tensor[(4, 2, 2), uint16],) {
  @func_1636() /* ty=(Tensor[(4, 2, 2), uint16],) */
}

def @func_643() -> (Tensor[(9, 10, 14), bool],) {
  %856 = cast(10 /* ty=int32 */, dtype="bool") /* ty=bool */;
  %857 = cast(meta[relay.Constant][39] /* ty=Tensor[(9, 10, 14), int32] */, dtype="bool") /* ty=Tensor[(9, 10, 14), bool] */;
  %858 = not_equal(%856, %857) /* ty=Tensor[(9, 10, 14), bool] */;
  (%858,)
}

def @func_3964() -> (Tensor[(4, 2, 2), float64],) {
  %860 = fn () -> (Tensor[(4, 2, 2), float64],) {
    %859 = @func_2571() /* ty=Tensor[(4, 2, 2), float64] */;
    (%859,)
  };
  %860() /* ty=(Tensor[(4, 2, 2), float64],) */
}

def @func_548() -> (Tensor[(1, 2, 2), float32], Tensor[(1, 2, 2), float32]) {
  %864 = fn () -> (Tensor[(1, 2, 2), float32], Tensor[(1, 2, 2), float32]) {
    %861 = @func_401() /* ty=(Tensor[(4, 2, 2), bool], Tensor[(1, 2, 2), float32], Tensor[(1, 2, 2), float32]) */;
    %862 = @func_210() /* ty=Tensor[(1, 2, 2), float32] */;
    %863 = %861.1;
    (%862, %863)
  };
  %864() /* ty=(Tensor[(1, 2, 2), float32], Tensor[(1, 2, 2), float32]) */
}

def @func_6977(%var_6974: Tensor[(15, 2, 2), float32], %var_6975: Tensor[(56), float32], %var_6976: Tensor[(216), int8]) -> (Tensor[(15, 2, 2), float64], Tensor[(4, 2, 2), uint16], Tensor[(?, 2, 2), float32], Tensor[(56), float32], Tensor[(216), int8], Tensor[(15, 2, 2), float32]) {
  @func_6972(%var_6974, %var_6975, %var_6976) /* ty=(Tensor[(15, 2, 2), float64], Tensor[(4, 2, 2), uint16], Tensor[(?, 2, 2), float32], Tensor[(56), float32], Tensor[(216), int8], Tensor[(15, 2, 2), float32]) */
}

def @func_4212() -> (Tensor[(1, 2, 2), float32], Tensor[(4, 2, 2), uint16]) {
  %868 = fn () -> (Tensor[(1, 2, 2), float32], Tensor[(4, 2, 2), uint16]) {
    %865 = @func_2630() /* ty=(Tensor[(1, 2, 2), float32],) */;
    %866 = %865.0;
    %867 = @func_1378() /* ty=Tensor[(4, 2, 2), uint16] */;
    (%866, %867)
  };
  %868() /* ty=(Tensor[(1, 2, 2), float32], Tensor[(4, 2, 2), uint16]) */
}

def @func_4228() -> (Tensor[(4, 2, 2), uint16],) {
  %871 = fn () -> (Tensor[(4, 2, 2), uint16],) {
    %869 = @func_3841() /* ty=(Tensor[(4, 2, 2), float32], Tensor[(4, 2, 2), float32], Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16]) */;
    %870 = %869.3;
    (%870,)
  };
  %871() /* ty=(Tensor[(4, 2, 2), uint16],) */
}

def @func_4320() -> Tensor[(4, 2, 2), uint16] {
  %873 = fn () -> Tensor[(4, 2, 2), uint16] {
    %872 = @func_290() /* ty=(Tensor[(4, 2, 2), uint16],) */;
    %872.0
  };
  %873() /* ty=Tensor[(4, 2, 2), uint16] */
}

def @func_402() -> (Tensor[(4, 2, 2), bool], Tensor[(1, 2, 2), float32], Tensor[(1, 2, 2), float32]) {
  %884 = fn () -> (Tensor[(4, 2, 2), bool], Tensor[(1, 2, 2), float32], Tensor[(1, 2, 2), float32]) {
    %874 = @func_314() /* ty=(Tensor[(4, 2, 2), uint16],) */;
    %875 = %874.0;
    %876 = cast(meta[relay.Constant][40] /* ty=Tensor[(4, 2, 2), uint16] */, dtype="bool") /* ty=Tensor[(4, 2, 2), bool] */;
    %877 = shape_of(%875, dtype="int32") /* ty=Tensor[(3), int32] */;
    %878 = cast(%875, dtype="bool") /* ty=Tensor[(4, 2, 2), bool] */;
    %879 = dyn.reshape(%876, %877, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %880 = @func_245() /* ty=(Tensor[(1, 2, 2), float32], Tensor[(4, 3, 6), int8], Tensor[(72), int8]) */;
    %881 = not_equal(%878, %879) /* ty=Tensor[(4, 2, 2), bool] */;
    %882 = @func_210() /* ty=Tensor[(1, 2, 2), float32] */;
    %883 = %880.0;
    (%881, %882, %883)
  };
  %884() /* ty=(Tensor[(4, 2, 2), bool], Tensor[(1, 2, 2), float32], Tensor[(1, 2, 2), float32]) */
}

def @func_4899(%var_4898: Tensor[(768, 1), float32]) -> (Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16], Tensor[(1, 2, 2), float32], Tensor[(8, 12, 8), int16], Tensor[(768, 540), int8]) {
  %899 = fn (%var_4890: Tensor[(768, 1), float32]) -> (Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16], Tensor[(1, 2, 2), float32], Tensor[(8, 12, 8), int16], Tensor[(768, 540), int8]) {
    %885 = @func_4477() /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(8, 12, 8), float32]) */;
    %886 = cast(meta[relay.Constant][41] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
    %887 = reshape(%886, newshape=[6, 15, 6]) /* ty=Tensor[(6, 15, 6), float32] */;
    %888 = @func_941(%887) /* ty=(Tensor[(6, 15, 6), uint8], Tensor[(1, 2, 2), float32]) */;
    %889 = cast(%var_4890, dtype="float32") /* ty=Tensor[(768, 1), float32] */;
    %890 = reshape(%889, newshape=[8, 12, 8]) /* ty=Tensor[(8, 12, 8), float32] */;
    %891 = @func_1836(%890) /* ty=(Tensor[(8, 12, 8), int16],) */;
    %892 = cast(meta[relay.Constant][41] /* ty=Tensor[(540), float32] */, dtype="int8") /* ty=Tensor[(540), int8] */;
    %893 = cast(%var_4890, dtype="int8") /* ty=Tensor[(768, 1), int8] */;
    %894 = %885.0;
    %895 = @func_2419() /* ty=Tensor[(4, 2, 2), uint16] */;
    %896 = %888.1;
    %897 = %891.0;
    %898 = bitwise_or(%892, %893) /* ty=Tensor[(768, 540), int8] */;
    (%894, %895, %896, %897, %898)
  };
  %899(%var_4898) /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), uint16], Tensor[(1, 2, 2), float32], Tensor[(8, 12, 8), int16], Tensor[(768, 540), int8]) */
}

def @func_6737() -> Tensor[(4, 2, 2), uint16] {
  %900 = @func_290() /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %900.0
}

def @func_7170() -> Tensor[(9, 10, 14), bool] {
  @func_7168() /* ty=Tensor[(9, 10, 14), bool] */
}

def @func_2342() -> (Tensor[(4, 2, 2), uint16], Tensor[(6, 15, 6), float64], Tensor[(6, 15, 6), float32]) {
  %901 = @func_314() /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %902 = cast(meta[relay.Constant][42] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
  %903 = reshape(%902, newshape=[6, 15, 6]) /* ty=Tensor[(6, 15, 6), float32] */;
  %904 = @func_941(%903) /* ty=(Tensor[(6, 15, 6), uint8], Tensor[(1, 2, 2), float32]) */;
  %905 = %904.0;
  %906 = cast(%905, dtype="float64") /* ty=Tensor[(6, 15, 6), float64] */;
  %907 = sqrt(%906) /* ty=Tensor[(6, 15, 6), float64] */;
  %908 = cast(%907, dtype="float64") /* ty=Tensor[(6, 15, 6), float64] */;
  %909 = cast(meta[relay.Constant][42] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
  %910 = shape_of(%907, dtype="int32") /* ty=Tensor[(3), int32] */;
  %911 = cast(%907, dtype="float32") /* ty=Tensor[(6, 15, 6), float32] */;
  %912 = dyn.reshape(%909, %910, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %913 = floor_divide(%911, %912) /* ty=Tensor[(6, 15, 6), float32] */;
  %914 = cast(%913, dtype="float32") /* ty=Tensor[(6, 15, 6), float32] */;
  %915 = %901.0;
  %916 = log2(%908) /* ty=Tensor[(6, 15, 6), float64] */;
  %917 = asin(%914) /* ty=Tensor[(6, 15, 6), float32] */;
  (%915, %916, %917)
}

def @func_8026() -> (Tensor[(4, 2, 2), uint16], Tensor[(4, 2, 2), float64]) {
  %918 = @func_6555() /* ty=(Tensor[(4, 2, 2), uint16],) */;
  %919 = %918.0;
  %920 = @func_5764() /* ty=Tensor[(4, 2, 2), float64] */;
  (%919, %920)
}

def @func_6458() -> Tensor[(4, 2, 2), float64] {
  %922 = fn () -> Tensor[(4, 2, 2), float64] {
    %921 = @func_861() /* ty=(Tensor[(4, 2, 2), float64],) */;
    %921.0
  };
  %922() /* ty=Tensor[(4, 2, 2), float64] */
}

def @func_5530() -> (Tensor[(4, 2, 2), float32],) {
  %923 = @func_2419() /* ty=Tensor[(4, 2, 2), uint16] */;
  %924 = cast(%923, dtype="float32") /* ty=Tensor[(4, 2, 2), float32] */;
  %925 = log10(%924) /* ty=Tensor[(4, 2, 2), float32] */;
  (%925,)
}

def @func_1992(%var_1991: Tensor[(168), uint32]) -> (Tensor[(4, 2, 2), uint16], Tensor[(14, 2), float64], Tensor[(12, 7, 2), bool], Tensor[(168), uint32], Tensor[(7, 2, 2), int16]) {
  %945 = fn (%var_1975: Tensor[(168), uint32]) -> (Tensor[(4, 2, 2), uint16], Tensor[(14, 2), float64], Tensor[(12, 7, 2), bool], Tensor[(168), uint32], Tensor[(7, 2, 2), int16]) {
    %926 = @func_1146() /* ty=(Tensor[(4, 2, 2), uint16],) */;
    %927 = cast(%var_1975, dtype="uint32") /* ty=Tensor[(168), uint32] */;
    %928 = cast(%var_1975, dtype="uint32") /* ty=Tensor[(168), uint32] */;
    %929 = cast(meta[relay.Constant][43] /* ty=Tensor[(14, 2), float64] */, dtype="float64") /* ty=Tensor[(14, 2), float64] */;
    %930 = reshape(%929, newshape=[7, 2, 2]) /* ty=Tensor[(7, 2, 2), float64] */;
    %931 = @func_1387(%930) /* ty=(Tensor[(7, 2, 2), uint8],) */;
    %932 = %931.0;
    %933 = cast(%932, dtype="float64") /* ty=Tensor[(7, 2, 2), float64] */;
    %934 = reshape(%927, newshape=[12, 7, 2]) /* ty=Tensor[(12, 7, 2), uint32] */;
    %935 = reshape(%928, newshape=[12, 7, 2]) /* ty=Tensor[(12, 7, 2), uint32] */;
    %936 = reshape(%933, newshape=[28]) /* ty=Tensor[(28), float64] */;
    %937 = @func_1450(%934, %935, %936) /* ty=(Tensor[(12, 7, 2), bool], Tensor[(7, 2, 2), uint8], Tensor[(28), float64], Tensor[(4, 2, 2), bool], Tensor[(110), float64], Tensor[(490, 1), int16], Tensor[(10, 11, 490), bool]) */;
    %938 = @func_547() /* ty=(Tensor[(1, 2, 2), float32], Tensor[(1, 2, 2), float32]) */;
    %939 = %938.0;
    %940 = cast(%939, dtype="int16") /* ty=Tensor[(1, 2, 2), int16] */;
    %941 = cast(%932, dtype="int16") /* ty=Tensor[(7, 2, 2), int16] */;
    %942 = %926.0;
    %943 = %937.0;
    %944 = minimum(%940, %941) /* ty=Tensor[(7, 2, 2), int16] */;
    (%942, meta[relay.Constant][43] /* ty=Tensor[(14, 2), float64] */, %943, %var_1975, %944)
  };
  %945(%var_1991) /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(14, 2), float64], Tensor[(12, 7, 2), bool], Tensor[(168), uint32], Tensor[(7, 2, 2), int16]) */
}

def @func_7941() -> Tensor[(7, 12, 8), int8] {
  %946 = cast(meta[relay.Constant][45] /* ty=Tensor[(7, 12, 8), int8] */, dtype="int8") /* ty=Tensor[(7, 12, 8), int8] */;
  %947 = shape_of(meta[relay.Constant][44] /* ty=Tensor[(7, 12, 8), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %948 = cast(meta[relay.Constant][44] /* ty=Tensor[(7, 12, 8), int8] */, dtype="int8") /* ty=Tensor[(7, 12, 8), int8] */;
  %949 = dyn.reshape(%946, %947, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  multiply(%948, %949) /* ty=Tensor[(7, 12, 8), int8] */
}

def @func_8061() -> (Tensor[(1, 2, 2), float64],) {
  %950 = @func_3563() /* ty=(Tensor[(1, 2, 2), float64], Tensor[(4, 2, 2), uint16]) */;
  %951 = %950.0;
  (%951,)
}

def @func_7812() -> (Tensor[(6, 15, 6), float32],) {
  %954 = fn () -> (Tensor[(6, 15, 6), float32],) {
    %952 = @func_2342() /* ty=(Tensor[(4, 2, 2), uint16], Tensor[(6, 15, 6), float64], Tensor[(6, 15, 6), float32]) */;
    %953 = %952.2;
    (%953,)
  };
  %954() /* ty=(Tensor[(6, 15, 6), float32],) */
}

def @func_7834() -> Tensor[(4, 2, 2), float32] {
  @func_7832() /* ty=Tensor[(4, 2, 2), float32] */
}

def @func_1208(%var_1207: Tensor[(15, 5, 11), float32]) -> (Tensor[(15, 5, 11), float32], Tensor[(6, 2, 2), int16]) {
  %959 = fn (%var_1186: Tensor[(15, 5, 11), float32]) -> (Tensor[(15, 5, 11), float32], Tensor[(6, 2, 2), int16]) {
    %955 = cast(%var_1186, dtype="float32") /* ty=Tensor[(15, 5, 11), float32] */;
    %956 = @func_475() /* ty=(Tensor[(6, 2, 2), int16],) */;
    %957 = acos(%955) /* ty=Tensor[(15, 5, 11), float32] */;
    %958 = %956.0;
    (%957, %958)
  };
  %959(%var_1207) /* ty=(Tensor[(15, 5, 11), float32], Tensor[(6, 2, 2), int16]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

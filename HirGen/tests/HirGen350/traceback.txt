==========mod==========
#[version = "0.0.5"]
def @func_4608() -> Tensor[(14, 14, 8), float64] {
  %0 = @func_1932() /* ty=(Tensor[(14, 14, 8), float64],) */;
  %0.0
}

def @func_8387() -> Tensor[(2, 7, 4), float64] {
  %1 = @func_3917() /* ty=(Tensor[(2, 7, 4), float64],) */;
  %1.0
}

def @func_1792(%var_1774: Tensor[(14, 14, 8), float32]) -> (Tensor[(14, 14, 8), uint32], Tensor[(14, 14, 8), float64]) {
  %2 = @func_1661() /* ty=Tensor[(14, 14, 8), float32] */;
  %3 = cast(%var_1774, dtype="uint32") /* ty=Tensor[(14, 14, 8), uint32] */;
  %4 = shape_of(%2, dtype="int32") /* ty=Tensor[(3), int32] */;
  %5 = cast(%2, dtype="uint32") /* ty=Tensor[(14, 14, 8), uint32] */;
  %6 = dyn.reshape(%3, %4, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %7 = cast(%2, dtype="float64") /* ty=Tensor[(14, 14, 8), float64] */;
  %8 = logical_xor(%5, %6) /* ty=Tensor[(14, 14, 8), uint32] */;
  %9 = log10(%7) /* ty=Tensor[(14, 14, 8), float64] */;
  (%8, %9)
}

def @func_4411(%var_4404: Tensor[(11, 130), float32]) -> (Tensor[(14, 14, 8), float64], Tensor[(14, 14, 8), int8], Tensor[(2, 7, 4), float32], Tensor[(11, 130), float32], Tensor[(14, 14, 8), float32], Tensor[(8, 13, 4), int16], Tensor[(416), int16]) {
  %10 = @func_1902() /* ty=(Tensor[(14, 14, 8), int8], Tensor[(14, 14, 8), float32]) */;
  %11 = %10.1;
  %12 = cast(%11, dtype="float64") /* ty=Tensor[(14, 14, 8), float64] */;
  %13 = cast(%var_4404, dtype="float32") /* ty=Tensor[(11, 130), float32] */;
  %14 = reshape(%13, newshape=[1430, 1]) /* ty=Tensor[(1430, 1), float32] */;
  %15 = @func_3656(%14) /* ty=(Tensor[(2, 7, 4), float32], Tensor[(14, 14, 8), float32], Tensor[(1430, 1), float32]) */;
  %16 = cast(meta[relay.Constant][0] /* ty=Tensor[(416), int16] */, dtype="int16") /* ty=Tensor[(416), int16] */;
  %17 = cast(meta[relay.Constant][0] /* ty=Tensor[(416), int16] */, dtype="int16") /* ty=Tensor[(416), int16] */;
  %18 = reshape(%16, newshape=[8, 13, 4]) /* ty=Tensor[(8, 13, 4), int16] */;
  %19 = reshape(%17, newshape=[8, 13, 4]) /* ty=Tensor[(8, 13, 4), int16] */;
  %20 = @func_735(%18, %19) /* ty=(Tensor[(8, 13, 4), int16],) */;
  %21 = exp(%12) /* ty=Tensor[(14, 14, 8), float64] */;
  %22 = @func_2135() /* ty=Tensor[(14, 14, 8), int8] */;
  %23 = %15.0;
  %24 = @func_1505() /* ty=Tensor[(14, 14, 8), float32] */;
  %25 = %20.0;
  (%21, %22, %23, %var_4404, %24, %25, meta[relay.Constant][0] /* ty=Tensor[(416), int16] */)
}

def @func_4302() -> Tensor[(8, 2, 9), float32] {
  %26 = @func_2861() /* ty=(Tensor[(14, 14, 8), int8], Tensor[(8, 2, 9), float32], Tensor[(144), float32], Tensor[(14, 14, 8), float64], Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), float32]) */;
  %26.1
}

def @func_7416() -> (Tensor[(2, 7, 4), float64],) {
  %27 = @func_2249() /* ty=(Tensor[(2, 7, 4), float64],) */;
  %28 = %27.0;
  (%28,)
}

def @func_1932() -> (Tensor[(14, 14, 8), float64],) {
  %29 = @func_1902() /* ty=(Tensor[(14, 14, 8), int8], Tensor[(14, 14, 8), float32]) */;
  %30 = %29.1;
  %31 = cast(%30, dtype="float64") /* ty=Tensor[(14, 14, 8), float64] */;
  %32 = log(%31) /* ty=Tensor[(14, 14, 8), float64] */;
  (%32,)
}

def @func_6991(%var_6979: bool, %var_6988: Tensor[(480), float32]) -> (Tensor[(15, 2, 2), bool], Tensor[(14, 14, 8), float32], Tensor[(156), float32], Tensor[(480), float32]) {
  %33 = cast(%var_6979, dtype="bool") /* ty=bool */;
  %34 = cast(meta[relay.Constant][1] /* ty=Tensor[(15, 2, 2), bool] */, dtype="bool") /* ty=Tensor[(15, 2, 2), bool] */;
  %35 = cast(meta[relay.Constant][2] /* ty=Tensor[(156), float32] */, dtype="float32") /* ty=Tensor[(156), float32] */;
  %36 = cast(%var_6988, dtype="float32") /* ty=Tensor[(480), float32] */;
  %37 = reshape(%35, newshape=[12, 13, 1]) /* ty=Tensor[(12, 13, 1), float32] */;
  %38 = reshape(%36, newshape=[480]) /* ty=Tensor[(480), float32] */;
  %39 = @func_6867(%37, %38) /* ty=(Tensor[(12, 13, 3), float32], Tensor[(144), float32], Tensor[(480), float32], Tensor[(14, 14, 8), float32]) */;
  %40 = logical_or(%33, %34) /* ty=Tensor[(15, 2, 2), bool] */;
  %41 = %39.3;
  (%40, %41, meta[relay.Constant][2] /* ty=Tensor[(156), float32] */, %var_6988)
}

def @func_284(%var_258: Tensor[(2, 7, 4), float64]) -> (Tensor[(2, 7, 4), float64], Tensor[(11, 6, 13), float32], Tensor[(429, 2), float32], Tensor[(11, 6, 13), float32]) {
  %42 = cast(%var_258, dtype="float64") /* ty=Tensor[(2, 7, 4), float64] */;
  %43 = cast(meta[relay.Constant][3] /* ty=Tensor[(429, 2), float32] */, dtype="float32") /* ty=Tensor[(429, 2), float32] */;
  %44 = reshape(%43, newshape=[11, 6, 13]) /* ty=Tensor[(11, 6, 13), float32] */;
  %45 = @func_27(%44) /* ty=(Tensor[(11, 6, 13), float32],) */;
  %46 = cast(meta[relay.Constant][3] /* ty=Tensor[(429, 2), float32] */, dtype="float32") /* ty=Tensor[(429, 2), float32] */;
  %47 = reshape(%46, newshape=[11, 6, 13]) /* ty=Tensor[(11, 6, 13), float32] */;
  %48 = @func_27(%47) /* ty=(Tensor[(11, 6, 13), float32],) */;
  %49 = acos(%42) /* ty=Tensor[(2, 7, 4), float64] */;
  %50 = %45.0;
  %51 = %48.0;
  (%49, %50, meta[relay.Constant][3] /* ty=Tensor[(429, 2), float32] */, %51)
}

def @func_6617() -> Tensor[(8, 2, 9), float64] {
  %52 = @func_4302() /* ty=Tensor[(8, 2, 9), float32] */;
  %53 = cast(%52, dtype="float64") /* ty=Tensor[(8, 2, 9), float64] */;
  rsqrt(%53) /* ty=Tensor[(8, 2, 9), float64] */
}

def @func_1661() -> Tensor[(14, 14, 8), float32] {
  @func_1488() /* ty=Tensor[(14, 14, 8), float32] */
}

def @func_5576(%var_5572: Tensor[(780), bool]) -> (Tensor[(14, 14, 8), float32], Tensor[(15, 13, 4), bool], Tensor[(780), bool]) {
  %54 = @func_4449() /* ty=(Tensor[(8, 2, 9), float32], Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), float32]) */;
  %55 = cast(%var_5572, dtype="bool") /* ty=Tensor[(780), bool] */;
  %56 = cast(%var_5572, dtype="bool") /* ty=Tensor[(780), bool] */;
  %57 = reshape(%55, newshape=[15, 13, 4]) /* ty=Tensor[(15, 13, 4), bool] */;
  %58 = reshape(%56, newshape=[15, 13, 4]) /* ty=Tensor[(15, 13, 4), bool] */;
  %59 = @func_2957(%57, %58) /* ty=(Tensor[(15, 13, 4), bool],) */;
  %60 = %54.2;
  %61 = %59.0;
  (%60, %61, %var_5572)
}

def @func_3525(%var_3510: Tensor[(4, 104), int16]) -> (Tensor[(14, 14, 8), int8], Tensor[(144), float32], Tensor[(4, 104), int16], Tensor[(2, 28), float64]) {
  %62 = @func_1902() /* ty=(Tensor[(14, 14, 8), int8], Tensor[(14, 14, 8), float32]) */;
  %63 = cast(%var_3510, dtype="int16") /* ty=Tensor[(4, 104), int16] */;
  %64 = reshape(%63, newshape=[416]) /* ty=Tensor[(416), int16] */;
  %65 = @func_2567(%64) /* ty=(Tensor[(14, 14, 8), float32], Tensor[(144), float32], Tensor[(144), float32], Tensor[(416), int16]) */;
  %66 = cast(%var_3510, dtype="int16") /* ty=Tensor[(4, 104), int16] */;
  %67 = reshape(%66, newshape=[416]) /* ty=Tensor[(416), int16] */;
  %68 = @func_1146(%67) /* ty=(Tensor[(15, 9, 11), bool], Tensor[(1485), float64], Tensor[(2, 28), float64], Tensor[(8, 13, 4), int16], Tensor[(416), int16], Tensor[(12, 10, 9), int16], Tensor[(11, 6, 13), float32], Tensor[(858), float32], Tensor[(11, 6, 13), float32], Tensor[(15, 9, 11), bool], Tensor[(8, 13, 4), int16]) */;
  %69 = %62.0;
  %70 = %65.1;
  %71 = %68.2;
  (%69, %70, %var_3510, %71)
}

def @func_5876(%var_5850: Tensor[(1430), float32]) -> (Tensor[(12, 12, 15), float32], Tensor[(10, 216), float32], Tensor[(14, 14, 8), float32], Tensor[(2, 7, 4), float64], Tensor[(2, 7, 4), float32], Tensor[(1430), float32], Tensor[(14, 14, 8), float32]) {
  %72 = cast(meta[relay.Constant][4] /* ty=Tensor[(10, 216), float32] */, dtype="float32") /* ty=Tensor[(10, 216), float32] */;
  %73 = reshape(%72, newshape=[12, 12, 15]) /* ty=Tensor[(12, 12, 15), float32] */;
  %74 = @func_2894(%73) /* ty=(Tensor[(12, 12, 15), float32],) */;
  %75 = @func_2171() /* ty=(Tensor[(14, 14, 8), float32], Tensor[(2, 7, 4), float64], Tensor[(56), float64]) */;
  %76 = %75.1;
  %77 = cast(%76, dtype="float64") /* ty=Tensor[(2, 7, 4), float64] */;
  %78 = reshape(%77, newshape=[2, 7, 4]) /* ty=Tensor[(2, 7, 4), float64] */;
  %79 = @func_5020(%78) /* ty=(Tensor[(2, 7, 4), float64], Tensor[(14, 14, 8), float32], Tensor[(1568), float32], Tensor[(8, 2, 9), float32]) */;
  %80 = cast(%76, dtype="float64") /* ty=Tensor[(2, 7, 4), float64] */;
  %81 = cast(%var_5850, dtype="float32") /* ty=Tensor[(1430), float32] */;
  %82 = reshape(%81, newshape=[11, 130]) /* ty=Tensor[(11, 130), float32] */;
  %83 = @func_4411(%82) /* ty=(Tensor[(14, 14, 8), float64], Tensor[(14, 14, 8), int8], Tensor[(2, 7, 4), float32], Tensor[(11, 130), float32], Tensor[(14, 14, 8), float32], Tensor[(8, 13, 4), int16], Tensor[(416), int16]) */;
  %84 = %79.1;
  %85 = cast(%84, dtype="float32") /* ty=Tensor[(14, 14, 8), float32] */;
  %86 = reshape(%85, newshape=[14, 14, 8]) /* ty=Tensor[(14, 14, 8), float32] */;
  %87 = %74.0;
  %88 = log10(%80) /* ty=Tensor[(2, 7, 4), float64] */;
  %89 = %83.2;
  %90 = @func_4751(%86) /* ty=Tensor[(14, 14, 8), float32] */;
  (%87, meta[relay.Constant][4] /* ty=Tensor[(10, 216), float32] */, %84, %88, %89, %var_5850, %90)
}

def @func_8436() -> Tensor[(14, 14, 8), float32] {
  %91 = @func_2171() /* ty=(Tensor[(14, 14, 8), float32], Tensor[(2, 7, 4), float64], Tensor[(56), float64]) */;
  %91.0
}

def @func_3224() -> (Tensor[(2, 7, 4), float32],) {
  %92 = @func_2249() /* ty=(Tensor[(2, 7, 4), float64],) */;
  %93 = %92.0;
  %94 = cast(%93, dtype="float32") /* ty=Tensor[(2, 7, 4), float32] */;
  %95 = cosh(%94) /* ty=Tensor[(2, 7, 4), float32] */;
  (%95,)
}

def @func_1304(%var_1297: Tensor[(11, 10, 13), float32]) -> Tensor[(11, 10, 13), float32] {
  %96 = cast(meta[relay.Constant][5] /* ty=Tensor[(11, 10, 13), float32] */, dtype="float32") /* ty=Tensor[(11, 10, 13), float32] */;
  %97 = shape_of(%var_1297, dtype="int32") /* ty=Tensor[(3), int32] */;
  %98 = cast(%var_1297, dtype="float32") /* ty=Tensor[(11, 10, 13), float32] */;
  %99 = dyn.reshape(%96, %97, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  divide(%98, %99) /* ty=Tensor[(11, 10, 13), float32] */
}

def @func_3382() -> Tensor[(14, 14, 8), float64] {
  %100 = @func_2914() /* ty=(Tensor[(14, 14, 8), float64],) */;
  %100.0
}

def @func_3025(%var_3017: Tensor[(2, 7, 4), float64]) -> Tensor[(2, 7, 4), float64] {
  %101 = @func_2463() /* ty=(Tensor[(2, 7, 4), float64], Tensor[(10, 8, 11), float64], Tensor[(2, 7, 4), float64]) */;
  %102 = %101.0;
  %103 = cast(%var_3017, dtype="float64") /* ty=Tensor[(2, 7, 4), float64] */;
  %104 = shape_of(%102, dtype="int32") /* ty=Tensor[(3), int32] */;
  %105 = cast(%102, dtype="float64") /* ty=Tensor[(2, 7, 4), float64] */;
  %106 = dyn.reshape(%103, %104, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  divide(%105, %106) /* ty=Tensor[(2, 7, 4), float64] */
}

def @func_4751(%var_4743: Tensor[(14, 14, 8), float32]) -> Tensor[(14, 14, 8), float32] {
  %107 = @func_1488() /* ty=Tensor[(14, 14, 8), float32] */;
  %108 = cast(%var_4743, dtype="float32") /* ty=Tensor[(14, 14, 8), float32] */;
  %109 = shape_of(%107, dtype="int32") /* ty=Tensor[(3), int32] */;
  %110 = cast(%107, dtype="float32") /* ty=Tensor[(14, 14, 8), float32] */;
  %111 = dyn.reshape(%108, %109, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%110, %111) /* ty=Tensor[(14, 14, 8), float32] */
}

def @func_2463() -> (Tensor[(2, 7, 4), float64], Tensor[(10, 8, 11), float64], Tensor[(2, 7, 4), float64]) {
  %112 = @func_2171() /* ty=(Tensor[(14, 14, 8), float32], Tensor[(2, 7, 4), float64], Tensor[(56), float64]) */;
  %113 = @func_2193() /* ty=(Tensor[(10, 8, 11), float64],) */;
  %114 = @func_2171() /* ty=(Tensor[(14, 14, 8), float32], Tensor[(2, 7, 4), float64], Tensor[(56), float64]) */;
  %115 = %114.1;
  %116 = cast(%115, dtype="float32") /* ty=Tensor[(2, 7, 4), float32] */;
  %117 = rsqrt(%116) /* ty=Tensor[(2, 7, 4), float32] */;
  %118 = cast(%115, dtype="float64") /* ty=Tensor[(2, 7, 4), float64] */;
  %119 = shape_of(%117, dtype="int32") /* ty=Tensor[(3), int32] */;
  %120 = cast(%117, dtype="float64") /* ty=Tensor[(2, 7, 4), float64] */;
  %121 = dyn.reshape(%118, %119, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %122 = %112.1;
  %123 = %113.0;
  %124 = floor_mod(%120, %121) /* ty=Tensor[(2, 7, 4), float64] */;
  (%122, %123, %124)
}

def @func_622(%var_610: Tensor[(10, 8, 6), float32]) -> (Tensor[(10, 8, 6), int16],) {
  %125 = cast(%var_610, dtype="float32") /* ty=Tensor[(10, 8, 6), float32] */;
  %126 = tan(%125) /* ty=Tensor[(10, 8, 6), float32] */;
  %127 = cast(%var_610, dtype="int16") /* ty=Tensor[(10, 8, 6), int16] */;
  %128 = shape_of(%126, dtype="int32") /* ty=Tensor[(3), int32] */;
  %129 = cast(%126, dtype="int16") /* ty=Tensor[(10, 8, 6), int16] */;
  %130 = dyn.reshape(%127, %128, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %131 = bitwise_or(%129, %130) /* ty=Tensor[(10, 8, 6), int16] */;
  (%131,)
}

def @func_7939() -> (Tensor[(8, 2, 9), float64], Tensor[(14, 14, 8), float64]) {
  %132 = @func_7323() /* ty=(Tensor[(14, 14, 8), float64],) */;
  %133 = @func_6617() /* ty=Tensor[(8, 2, 9), float64] */;
  %134 = %132.0;
  (%133, %134)
}

def @func_6867(%var_6836: Tensor[(12, 13, 1), float32], %var_6848: Tensor[(480), float32]) -> (Tensor[(12, 13, 3), float32], Tensor[(144), float32], Tensor[(480), float32], Tensor[(14, 14, 8), float32]) {
  %135 = cast(%var_6836, dtype="float32") /* ty=Tensor[(12, 13, 1), float32] */;
  %136 = cast(meta[relay.Constant][6] /* ty=Tensor[(12, 13, 3), float32] */, dtype="float32") /* ty=Tensor[(12, 13, 3), float32] */;
  %137 = cast(%var_6848, dtype="float32") /* ty=Tensor[(480), float32] */;
  %138 = reshape(%137, newshape=[480]) /* ty=Tensor[(480), float32] */;
  %139 = @func_4049(%138) /* ty=(Tensor[(144), float32], Tensor[(14, 14, 8), bool], Tensor[(10, 8, 6), int16], Tensor[(480), float32]) */;
  %140 = %139.0;
  %141 = cast(%140, dtype="float32") /* ty=Tensor[(144), float32] */;
  %142 = reshape(%141, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %143 = @func_2101(%142) /* ty=(Tensor[(14, 14, 8), float32], Tensor[(8, 2, 9), float32], Tensor[(144), float32]) */;
  %144 = power(%135, %136) /* ty=Tensor[(12, 13, 3), float32] */;
  %145 = %143.0;
  (%144, %140, %var_6848, %145)
}

def @func_6901() -> (Tensor[(2, 7, 4), float32], Tensor[(6, 2, 12), float64], Tensor[(8, 18), float64]) {
  %146 = @func_3224() /* ty=(Tensor[(2, 7, 4), float32],) */;
  %147 = cast(meta[relay.Constant][7] /* ty=Tensor[(8, 18), float64] */, dtype="float64") /* ty=Tensor[(8, 18), float64] */;
  %148 = reshape(%147, newshape=[6, 2, 12]) /* ty=Tensor[(6, 2, 12), float64] */;
  %149 = @func_3933(%148) /* ty=(Tensor[(6, 2, 12), float64],) */;
  %150 = %146.0;
  %151 = %149.0;
  (%150, %151, meta[relay.Constant][7] /* ty=Tensor[(8, 18), float64] */)
}

def @func_8324() -> Tensor[(2, 7, 4), float64] {
  %152 = @func_7673() /* ty=(Tensor[(2, 7, 4), float64],) */;
  %152.0
}

def @func_2171() -> (Tensor[(14, 14, 8), float32], Tensor[(2, 7, 4), float64], Tensor[(56), float64]) {
  %153 = @func_1902() /* ty=(Tensor[(14, 14, 8), int8], Tensor[(14, 14, 8), float32]) */;
  %154 = cast(meta[relay.Constant][8] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
  %155 = reshape(%154, newshape=[2, 7, 4]) /* ty=Tensor[(2, 7, 4), float64] */;
  %156 = @func_284(%155) /* ty=(Tensor[(2, 7, 4), float64], Tensor[(11, 6, 13), float32], Tensor[(429, 2), float32], Tensor[(11, 6, 13), float32]) */;
  %157 = %153.1;
  %158 = %156.0;
  (%157, %158, meta[relay.Constant][8] /* ty=Tensor[(56), float64] */)
}

def @func_4255() -> (Tensor[(14, 14, 8), float64], Tensor[(416), int16], Tensor[(144), float32], Tensor[(2, 208), int16]) {
  %159 = @func_1932() /* ty=(Tensor[(14, 14, 8), float64],) */;
  %160 = cast(meta[relay.Constant][9] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %161 = cast(meta[relay.Constant][10] /* ty=Tensor[(2, 208), int16] */, dtype="int16") /* ty=Tensor[(2, 208), int16] */;
  %162 = reshape(%160, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %163 = reshape(%161, newshape=[416]) /* ty=Tensor[(416), int16] */;
  %164 = @func_2627(%162, %163) /* ty=(Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), float64], Tensor[(144), float32], Tensor[(144), float32], Tensor[(416), int16]) */;
  %165 = %159.0;
  %166 = %164.4;
  (%165, %166, meta[relay.Constant][9] /* ty=Tensor[(144), float32] */, meta[relay.Constant][10] /* ty=Tensor[(2, 208), int16] */)
}

def @func_3933(%var_3929: Tensor[(6, 2, 12), float64]) -> (Tensor[(6, 2, 12), float64],) {
  %167 = cast(%var_3929, dtype="float64") /* ty=Tensor[(6, 2, 12), float64] */;
  %168 = log10(%167) /* ty=Tensor[(6, 2, 12), float64] */;
  (%168,)
}

def @func_27(%var_17: Tensor[(11, 6, 13), float32]) -> (Tensor[(11, 6, 13), float32],) {
  %169 = cast(%var_17, dtype="float32") /* ty=Tensor[(11, 6, 13), float32] */;
  %170 = exp(%169) /* ty=Tensor[(11, 6, 13), float32] */;
  (%170,)
}

def @func_8113(%var_8083: Tensor[(1755), float32], %var_8084: Tensor[(2160), float32]) -> (Tensor[(12, 12, 15), float32], Tensor[(1755), float32], Tensor[(2160), float32], Tensor[(16, 15, 7), bool]) {
  %171 = cast(%var_8083, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %172 = cast(%var_8084, dtype="float32") /* ty=Tensor[(2160), float32] */;
  %173 = reshape(%171, newshape=[13, 15, 9]) /* ty=Tensor[(13, 15, 9), float32] */;
  %174 = reshape(%172, newshape=[2160]) /* ty=Tensor[(2160), float32] */;
  %175 = @func_3001(%173, %174) /* ty=(Tensor[(13, 15, 9), float32], Tensor[(10, 8, 6), int16], Tensor[(1485), float64], Tensor[(14, 4), float64], Tensor[(12, 12, 15), float32], Tensor[(2160), float32]) */;
  %176 = @func_5099() /* ty=(Tensor[(16, 15, 7), float64],) */;
  %177 = %176.0;
  %178 = cast(%177, dtype="float64") /* ty=Tensor[(16, 15, 7), float64] */;
  %179 = log2(%178) /* ty=Tensor[(16, 15, 7), float64] */;
  %180 = cast(%179, dtype="float64") /* ty=Tensor[(16, 15, 7), float64] */;
  %181 = asin(%180) /* ty=Tensor[(16, 15, 7), float64] */;
  %182 = cast(%179, dtype="bool") /* ty=Tensor[(16, 15, 7), bool] */;
  %183 = shape_of(%181, dtype="int32") /* ty=Tensor[(3), int32] */;
  %184 = cast(%181, dtype="bool") /* ty=Tensor[(16, 15, 7), bool] */;
  %185 = dyn.reshape(%182, %183, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %186 = %175.4;
  %187 = logical_or(%184, %185) /* ty=Tensor[(16, 15, 7), bool] */;
  (%186, %var_8083, %var_8084, %187)
}

def @func_1488() -> Tensor[(14, 14, 8), float32] {
  %188 = cast(2.3716f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %189 = cast(meta[relay.Constant][11] /* ty=Tensor[(14, 14, 8), float32] */, dtype="float32") /* ty=Tensor[(14, 14, 8), float32] */;
  power(%188, %189) /* ty=Tensor[(14, 14, 8), float32] */
}

def @func_2323(%var_2311: Tensor[(416), int16]) -> (Tensor[(14, 14, 8), float32], Tensor[(10, 8, 11), float64], Tensor[(416), int16], Tensor[(8, 13, 4), float32]) {
  %190 = @func_2171() /* ty=(Tensor[(14, 14, 8), float32], Tensor[(2, 7, 4), float64], Tensor[(56), float64]) */;
  %191 = @func_2193() /* ty=(Tensor[(10, 8, 11), float64],) */;
  %192 = cast(%var_2311, dtype="int16") /* ty=Tensor[(416), int16] */;
  %193 = cast(%var_2311, dtype="int16") /* ty=Tensor[(416), int16] */;
  %194 = reshape(%192, newshape=[8, 13, 4]) /* ty=Tensor[(8, 13, 4), int16] */;
  %195 = reshape(%193, newshape=[8, 13, 4]) /* ty=Tensor[(8, 13, 4), int16] */;
  %196 = @func_735(%194, %195) /* ty=(Tensor[(8, 13, 4), int16],) */;
  %197 = %196.0;
  %198 = cast(%197, dtype="float32") /* ty=Tensor[(8, 13, 4), float32] */;
  %199 = %190.0;
  %200 = %191.0;
  %201 = log2(%198) /* ty=Tensor[(8, 13, 4), float32] */;
  (%199, %200, %var_2311, %201)
}

def @func_6253() -> (Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), float32]) {
  %202 = @func_1902() /* ty=(Tensor[(14, 14, 8), int8], Tensor[(14, 14, 8), float32]) */;
  %203 = %202.1;
  %204 = cast(%203, dtype="float32") /* ty=Tensor[(14, 14, 8), float32] */;
  %205 = reshape(%204, newshape=[14, 14, 8]) /* ty=Tensor[(14, 14, 8), float32] */;
  %206 = @func_4751(%205) /* ty=Tensor[(14, 14, 8), float32] */;
  (%203, %206)
}

def @func_8640() -> Tensor[(56), float64] {
  %207 = @func_2171() /* ty=(Tensor[(14, 14, 8), float32], Tensor[(2, 7, 4), float64], Tensor[(56), float64]) */;
  %207.2
}

def @func_6911() -> (Tensor[(2, 7, 4), float32],) {
  %208 = @func_3224() /* ty=(Tensor[(2, 7, 4), float32],) */;
  %209 = %208.0;
  (%209,)
}

def @func_8041(%var_7971: Tensor[(1485, 1), float64], %var_7990: Tensor[(1485, 12), float64]) -> (Tensor[(2, 7, 4), float64], Tensor[(480), float32], Tensor[(14, 14, 8), float32], Tensor[(10, 8, 6), int16], Tensor[(1485, ?), int16], Tensor[(1485, 12), float32]) {
  %210 = @func_7673() /* ty=(Tensor[(2, 7, 4), float64],) */;
  %211 = cast(%var_7971, dtype="float64") /* ty=Tensor[(1485, 1), float64] */;
  %212 = %210.0;
  %213 = cast(%212, dtype="float64") /* ty=Tensor[(2, 7, 4), float64] */;
  %214 = cast(%var_7971, dtype="bool") /* ty=Tensor[(1485, 1), bool] */;
  %215 = reshape(%211, newshape=[1485]) /* ty=Tensor[(1485), float64] */;
  %216 = reshape(%213, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %217 = reshape(%214, newshape=[15, 9, 11]) /* ty=Tensor[(15, 9, 11), bool] */;
  %218 = @func_1291(%215, %216, %217) /* ty=(Tensor[(13, 12, 1), bool], Tensor[(1485), float64], Tensor[(56), float64], Tensor[(11, 6, 13), float32], Tensor[(858), float32], Tensor[(15, 9, 11), uint16], Tensor[(15, 9, 11), uint32], Tensor[(10, 8, 6), int16], Tensor[(480), float32], Tensor[(429, 2), float32]) */;
  %219 = @func_7447() /* ty=(Tensor[(3, 2, 9), float32], Tensor[(14, 14, 8), float64], Tensor[(14, 14, 8), float32]) */;
  %220 = %218.8;
  %221 = cast(%220, dtype="float32") /* ty=Tensor[(480), float32] */;
  %222 = reshape(%221, newshape=[10, 8, 6]) /* ty=Tensor[(10, 8, 6), float32] */;
  %223 = @func_622(%222) /* ty=(Tensor[(10, 8, 6), int16],) */;
  %224 = cast(%var_7971, dtype="float64") /* ty=Tensor[(1485, 1), float64] */;
  %225 = log2(%224) /* ty=Tensor[(1485, 1), float64] */;
  %226 = cast(%var_7971, dtype="int16") /* ty=Tensor[(1485, 1), int16] */;
  %227 = shape_of(%225, dtype="int32") /* ty=Tensor[(2), int32] */;
  %228 = cast(%225, dtype="int16") /* ty=Tensor[(1485, 1), int16] */;
  %229 = dyn.reshape(%226, %227, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %230 = cast(%225, dtype="bool") /* ty=Tensor[(1485, 1), bool] */;
  %231 = cast(%var_7990, dtype="bool") /* ty=Tensor[(1485, 12), bool] */;
  %232 = not_equal(%230, %231) /* ty=Tensor[(1485, 12), bool] */;
  %233 = cast(%225, dtype="bool") /* ty=Tensor[(1485, 1), bool] */;
  %234 = cast(%var_7990, dtype="bool") /* ty=Tensor[(1485, 12), bool] */;
  %235 = greater(%233, %234) /* ty=Tensor[(1485, 12), bool] */;
  %236 = cast(%235, dtype="float32") /* ty=Tensor[(1485, 12), float32] */;
  %237 = shape_of(%232, dtype="int32") /* ty=Tensor[(2), int32] */;
  %238 = cast(%232, dtype="float32") /* ty=Tensor[(1485, 12), float32] */;
  %239 = dyn.reshape(%236, %237, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %240 = %219.2;
  %241 = %223.0;
  %242 = left_shift(%228, %229) /* ty=Tensor[(1485, ?), int16] */;
  %243 = floor_mod(%238, %239) /* ty=Tensor[(1485, 12), float32] */;
  (%212, %220, %240, %241, %242, %243)
}

def @func_7166(%var_7146: Tensor[(2, 7, 4), float64]) -> (Tensor[(2, 7, 4), bool],) {
  %244 = @func_7016() /* ty=(Tensor[(2, 7, 4), float64],) */;
  %245 = %244.0;
  %246 = cast(%var_7146, dtype="bool") /* ty=Tensor[(2, 7, 4), bool] */;
  %247 = shape_of(%245, dtype="int32") /* ty=Tensor[(3), int32] */;
  %248 = cast(%245, dtype="bool") /* ty=Tensor[(2, 7, 4), bool] */;
  %249 = dyn.reshape(%246, %247, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %250 = less_equal(%248, %249) /* ty=Tensor[(2, 7, 4), bool] */;
  (%250,)
}

def @func_8794() -> (Tensor[(14, 14, 8), float64],) {
  %251 = @func_7918() /* ty=(Tensor[(14, 14, 8), float64],) */;
  %252 = %251.0;
  (%252,)
}

def @func_2193() -> (Tensor[(10, 8, 11), float64],) {
  %253 = cast(meta[relay.Constant][12] /* ty=Tensor[(10, 8, 11), float64] */, dtype="float64") /* ty=Tensor[(10, 8, 11), float64] */;
  %254 = atan(%253) /* ty=Tensor[(10, 8, 11), float64] */;
  (%254,)
}

def @func_4147() -> (Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), float64], Tensor[(14, 14, 8), int8], Tensor[(2, 7, 4), uint8]) {
  %255 = @func_1932() /* ty=(Tensor[(14, 14, 8), float64],) */;
  %256 = @func_2249() /* ty=(Tensor[(2, 7, 4), float64],) */;
  %257 = %256.0;
  %258 = cast(%257, dtype="float64") /* ty=Tensor[(2, 7, 4), float64] */;
  %259 = acosh(%258) /* ty=Tensor[(2, 7, 4), float64] */;
  %260 = cast(%259, dtype="float32") /* ty=Tensor[(2, 7, 4), float32] */;
  %261 = asin(%260) /* ty=Tensor[(2, 7, 4), float32] */;
  %262 = cast(%259, dtype="uint8") /* ty=Tensor[(2, 7, 4), uint8] */;
  %263 = shape_of(%261, dtype="int32") /* ty=Tensor[(3), int32] */;
  %264 = cast(%261, dtype="uint8") /* ty=Tensor[(2, 7, 4), uint8] */;
  %265 = dyn.reshape(%262, %263, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %266 = @func_1505() /* ty=Tensor[(14, 14, 8), float32] */;
  %267 = %255.0;
  %268 = @func_2135() /* ty=Tensor[(14, 14, 8), int8] */;
  %269 = multiply(%264, %265) /* ty=Tensor[(2, 7, 4), uint8] */;
  (%266, %267, %268, %269)
}

def @func_6430(%var_6418: Tensor[(1485), float64]) -> (Tensor[(1, 1485), float64], Tensor[(1485), float64], Tensor[(14, 14, 8), float64]) {
  %270 = cast(%var_6418, dtype="float64") /* ty=Tensor[(1485), float64] */;
  %271 = reshape(%270, newshape=[1, 1485]) /* ty=Tensor[(1, 1485), float64] */;
  %272 = @func_3402(%271) /* ty=(Tensor[(2, 7, 4), float32], Tensor[(15, 9, 11), uint16], Tensor[(1, 1485), float64]) */;
  %273 = @func_5423() /* ty=Tensor[(14, 14, 8), float32] */;
  %274 = cast(%273, dtype="float64") /* ty=Tensor[(14, 14, 8), float64] */;
  %275 = %272.2;
  %276 = cos(%274) /* ty=Tensor[(14, 14, 8), float64] */;
  (%275, %var_6418, %276)
}

def @func_2627(%var_2624: Tensor[(144), float32], %var_2625: Tensor[(416), int16]) -> (Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), float64], Tensor[(144), float32], Tensor[(144), float32], Tensor[(416), int16]) {
  %277 = @func_1488() /* ty=Tensor[(14, 14, 8), float32] */;
  %278 = cast(%277, dtype="float64") /* ty=Tensor[(14, 14, 8), float64] */;
  %279 = atanh(%278) /* ty=Tensor[(14, 14, 8), float64] */;
  %280 = cast(%279, dtype="float64") /* ty=Tensor[(14, 14, 8), float64] */;
  %281 = cast(%var_2624, dtype="float32") /* ty=Tensor[(144), float32] */;
  %282 = cast(%var_2625, dtype="int16") /* ty=Tensor[(416), int16] */;
  %283 = cast(%279, dtype="float32") /* ty=Tensor[(14, 14, 8), float32] */;
  %284 = reshape(%281, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %285 = reshape(%282, newshape=[416]) /* ty=Tensor[(416), int16] */;
  %286 = reshape(%283, newshape=[14, 14, 8]) /* ty=Tensor[(14, 14, 8), float32] */;
  %287 = @func_1591(%284, %285, %286) /* ty=(Tensor[(8, 2, 9), float32], Tensor[(144), float32], Tensor[(416), int16], Tensor[(14, 14, 8), bool], Tensor[(14, 14, 8), uint32], Tensor[(8, 13, 4), int64]) */;
  %288 = @func_1661() /* ty=Tensor[(14, 14, 8), float32] */;
  %289 = acosh(%280) /* ty=Tensor[(14, 14, 8), float64] */;
  %290 = %287.1;
  (%288, %289, %290, %var_2624, %var_2625)
}

def @func_380(%var_334: Tensor[(15, 9, 11), float64], %var_335: Tensor[(15, 9, 11), float64], %var_340: Tensor[(56), float64]) -> (Tensor[(429, 2), float32], Tensor[(56), float64], Tensor[(11, 6, 13), float32], Tensor[(15, 9, 11), bool], Tensor[(11, 6, 13), float32], Tensor[(11, 6, 13), float32], Tensor[(11, 6, 13), float32]) {
  %291 = cast(%var_340, dtype="float64") /* ty=Tensor[(56), float64] */;
  %292 = reshape(%291, newshape=[2, 7, 4]) /* ty=Tensor[(2, 7, 4), float64] */;
  %293 = @func_284(%292) /* ty=(Tensor[(2, 7, 4), float64], Tensor[(11, 6, 13), float32], Tensor[(429, 2), float32], Tensor[(11, 6, 13), float32]) */;
  %294 = %293.2;
  %295 = cast(%294, dtype="float32") /* ty=Tensor[(429, 2), float32] */;
  %296 = reshape(%295, newshape=[11, 6, 13]) /* ty=Tensor[(11, 6, 13), float32] */;
  %297 = @func_27(%296) /* ty=(Tensor[(11, 6, 13), float32],) */;
  %298 = cast(%var_335, dtype="bool") /* ty=Tensor[(15, 9, 11), bool] */;
  %299 = shape_of(%var_334, dtype="int32") /* ty=Tensor[(3), int32] */;
  %300 = cast(%var_334, dtype="bool") /* ty=Tensor[(15, 9, 11), bool] */;
  %301 = dyn.reshape(%298, %299, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %302 = greater(%300, %301) /* ty=Tensor[(15, 9, 11), bool] */;
  %303 = cast(%var_335, dtype="bool") /* ty=Tensor[(15, 9, 11), bool] */;
  %304 = shape_of(%302, dtype="int32") /* ty=Tensor[(3), int32] */;
  %305 = cast(%302, dtype="bool") /* ty=Tensor[(15, 9, 11), bool] */;
  %306 = dyn.reshape(%303, %304, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %307 = cast(%var_340, dtype="float64") /* ty=Tensor[(56), float64] */;
  %308 = reshape(%307, newshape=[2, 7, 4]) /* ty=Tensor[(2, 7, 4), float64] */;
  %309 = @func_284(%308) /* ty=(Tensor[(2, 7, 4), float64], Tensor[(11, 6, 13), float32], Tensor[(429, 2), float32], Tensor[(11, 6, 13), float32]) */;
  %310 = cast(%var_340, dtype="float64") /* ty=Tensor[(56), float64] */;
  %311 = reshape(%310, newshape=[2, 7, 4]) /* ty=Tensor[(2, 7, 4), float64] */;
  %312 = @func_284(%311) /* ty=(Tensor[(2, 7, 4), float64], Tensor[(11, 6, 13), float32], Tensor[(429, 2), float32], Tensor[(11, 6, 13), float32]) */;
  %313 = cast(%294, dtype="float32") /* ty=Tensor[(429, 2), float32] */;
  %314 = reshape(%313, newshape=[11, 6, 13]) /* ty=Tensor[(11, 6, 13), float32] */;
  %315 = @func_27(%314) /* ty=(Tensor[(11, 6, 13), float32],) */;
  %316 = %297.0;
  %317 = not_equal(%305, %306) /* ty=Tensor[(15, 9, 11), bool] */;
  %318 = %309.3;
  %319 = %312.3;
  %320 = %315.0;
  (%294, %var_340, %316, %317, %318, %319, %320)
}

def @func_4656(%var_4643: Tensor[(780), bool]) -> (Tensor[(14, 14, 8), float64], Tensor[(15, 13, 4), bool], Tensor[(780), bool]) {
  %321 = @func_4255() /* ty=(Tensor[(14, 14, 8), float64], Tensor[(416), int16], Tensor[(144), float32], Tensor[(2, 208), int16]) */;
  %322 = cast(%var_4643, dtype="bool") /* ty=Tensor[(780), bool] */;
  %323 = cast(%var_4643, dtype="bool") /* ty=Tensor[(780), bool] */;
  %324 = reshape(%322, newshape=[15, 13, 4]) /* ty=Tensor[(15, 13, 4), bool] */;
  %325 = reshape(%323, newshape=[15, 13, 4]) /* ty=Tensor[(15, 13, 4), bool] */;
  %326 = @func_2957(%324, %325) /* ty=(Tensor[(15, 13, 4), bool],) */;
  %327 = %321.0;
  %328 = %326.0;
  (%327, %328, %var_4643)
}

def @func_7616() -> (Tensor[(14, 14, 8), float64], Tensor[(14, 14, 8), float64], Tensor[(14, 14, 8), float64], Tensor[(11, 6, 13), float32], Tensor[(1485), float64], Tensor[(56), float64]) {
  %329 = @func_5332() /* ty=Tensor[(14, 14, 8), float32] */;
  %330 = cast(%329, dtype="float64") /* ty=Tensor[(14, 14, 8), float64] */;
  %331 = @func_6274() /* ty=(Tensor[(14, 14, 8), float64],) */;
  %332 = cast(meta[relay.Constant][13] /* ty=Tensor[(1485), float64] */, dtype="float64") /* ty=Tensor[(1485), float64] */;
  %333 = cast(meta[relay.Constant][13] /* ty=Tensor[(1485), float64] */, dtype="float64") /* ty=Tensor[(1485), float64] */;
  %334 = cast(meta[relay.Constant][14] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
  %335 = reshape(%332, newshape=[15, 9, 11]) /* ty=Tensor[(15, 9, 11), float64] */;
  %336 = reshape(%333, newshape=[15, 9, 11]) /* ty=Tensor[(15, 9, 11), float64] */;
  %337 = reshape(%334, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %338 = @func_380(%335, %336, %337) /* ty=(Tensor[(429, 2), float32], Tensor[(56), float64], Tensor[(11, 6, 13), float32], Tensor[(15, 9, 11), bool], Tensor[(11, 6, 13), float32], Tensor[(11, 6, 13), float32], Tensor[(11, 6, 13), float32]) */;
  %339 = sinh(%330) /* ty=Tensor[(14, 14, 8), float64] */;
  %340 = @func_4608() /* ty=Tensor[(14, 14, 8), float64] */;
  %341 = %331.0;
  %342 = %338.2;
  (%339, %340, %341, %342, meta[relay.Constant][13] /* ty=Tensor[(1485), float64] */, meta[relay.Constant][14] /* ty=Tensor[(56), float64] */)
}

def @func_7893(%var_7885: Tensor[(858, 15), float32]) -> Tensor[(858, 15), bool] {
  %343 = @func_5394() /* ty=(Tensor[(14, 14, 8), float64], Tensor[(11, 6, 13), float32], Tensor[(858, 1), float32]) */;
  %344 = %343.2;
  %345 = cast(%344, dtype="bool") /* ty=Tensor[(858, 1), bool] */;
  %346 = cast(%var_7885, dtype="bool") /* ty=Tensor[(858, 15), bool] */;
  equal(%345, %346) /* ty=Tensor[(858, 15), bool] */
}

def @func_6561(%var_6533: Tensor[(8, 8, 1), float64], %var_6534: Tensor[(8, 8, 11), float64], %var_6543: Tensor[(1568), float32]) -> (Tensor[(8, 8, 11), float64], Tensor[(14, 14, 8), float32], Tensor[(1568), float32]) {
  %347 = cast(%var_6533, dtype="float64") /* ty=Tensor[(8, 8, 1), float64] */;
  %348 = cast(%var_6534, dtype="float64") /* ty=Tensor[(8, 8, 11), float64] */;
  %349 = cast(%var_6543, dtype="float32") /* ty=Tensor[(1568), float32] */;
  %350 = reshape(%349, newshape=[14, 14, 8]) /* ty=Tensor[(14, 14, 8), float32] */;
  %351 = subtract(%347, %348) /* ty=Tensor[(8, 8, 11), float64] */;
  %352 = @func_4751(%350) /* ty=Tensor[(14, 14, 8), float32] */;
  (%351, %352, %var_6543)
}

def @func_7907() -> Tensor[(144), float32] {
  %353 = @func_4255() /* ty=(Tensor[(14, 14, 8), float64], Tensor[(416), int16], Tensor[(144), float32], Tensor[(2, 208), int16]) */;
  %353.2
}

def @func_1816(%var_1810: Tensor[(14, 14, 8), float32]) -> (Tensor[(14, 14, 8), float64],) {
  %354 = @func_1505() /* ty=Tensor[(14, 14, 8), float32] */;
  %355 = cast(%var_1810, dtype="float64") /* ty=Tensor[(14, 14, 8), float64] */;
  %356 = shape_of(%354, dtype="int32") /* ty=Tensor[(3), int32] */;
  %357 = cast(%354, dtype="float64") /* ty=Tensor[(14, 14, 8), float64] */;
  %358 = dyn.reshape(%355, %356, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %359 = floor_mod(%357, %358) /* ty=Tensor[(14, 14, 8), float64] */;
  (%359,)
}

def @func_7673() -> (Tensor[(2, 7, 4), float64],) {
  %360 = @func_2463() /* ty=(Tensor[(2, 7, 4), float64], Tensor[(10, 8, 11), float64], Tensor[(2, 7, 4), float64]) */;
  %361 = %360.2;
  (%361,)
}

def @func_8758() -> Tensor[(14, 14, 8), int8] {
  %362 = @func_2861() /* ty=(Tensor[(14, 14, 8), int8], Tensor[(8, 2, 9), float32], Tensor[(144), float32], Tensor[(14, 14, 8), float64], Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), float32]) */;
  %362.0
}

def @func_1902() -> (Tensor[(14, 14, 8), int8], Tensor[(14, 14, 8), float32]) {
  %363 = @func_1661() /* ty=Tensor[(14, 14, 8), float32] */;
  %364 = cast(meta[relay.Constant][15] /* ty=Tensor[(14, 14, 8), float32] */, dtype="int8") /* ty=Tensor[(14, 14, 8), int8] */;
  %365 = shape_of(%363, dtype="int32") /* ty=Tensor[(3), int32] */;
  %366 = cast(%363, dtype="int8") /* ty=Tensor[(14, 14, 8), int8] */;
  %367 = dyn.reshape(%364, %365, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %368 = multiply(%366, %367) /* ty=Tensor[(14, 14, 8), int8] */;
  %369 = @func_1661() /* ty=Tensor[(14, 14, 8), float32] */;
  (%368, %369)
}

def @func_5182(%var_5146: Tensor[(8, 52), int16], %var_5177: Tensor[(2, 72), float32], %var_5180: Tensor[(630), float32]) -> (Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), int8], Tensor[(8, 52), int16], Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), float64], Tensor[(72, 2), float32], Tensor[(2, 72), float32], Tensor[(15, 3, 14), bool], Tensor[(630), float32]) {
  %370 = @func_1902() /* ty=(Tensor[(14, 14, 8), int8], Tensor[(14, 14, 8), float32]) */;
  %371 = cast(%var_5146, dtype="int16") /* ty=Tensor[(8, 52), int16] */;
  %372 = reshape(%371, newshape=[4, 104]) /* ty=Tensor[(4, 104), int16] */;
  %373 = @func_3525(%372) /* ty=(Tensor[(14, 14, 8), int8], Tensor[(144), float32], Tensor[(4, 104), int16], Tensor[(2, 28), float64]) */;
  %374 = @func_1848() /* ty=Tensor[(14, 14, 8), float32] */;
  %375 = cast(%374, dtype="float32") /* ty=Tensor[(14, 14, 8), float32] */;
  %376 = cast(%var_5177, dtype="float32") /* ty=Tensor[(2, 72), float32] */;
  %377 = reshape(%376, newshape=[72, 2]) /* ty=Tensor[(72, 2), float32] */;
  %378 = @func_2793(%377) /* ty=(Tensor[(14, 14, 8), float32], Tensor[(144), float32], Tensor[(72, 2), float32], Tensor[(416), int16]) */;
  %379 = cast(%var_5180, dtype="float32") /* ty=Tensor[(630), float32] */;
  %380 = reshape(%379, newshape=[15, 3, 14]) /* ty=Tensor[(15, 3, 14), float32] */;
  %381 = @func_3476(%380) /* ty=(Tensor[(15, 3, 14), bool],) */;
  %382 = %370.1;
  %383 = %373.0;
  %384 = erf(%375) /* ty=Tensor[(14, 14, 8), float32] */;
  %385 = @func_4552() /* ty=Tensor[(14, 14, 8), float64] */;
  %386 = %378.2;
  %387 = %381.0;
  (%382, %383, %var_5146, %384, %385, %386, %var_5177, %387, %var_5180)
}

def @func_7772() -> Tensor[(14, 14, 8), float64] {
  %388 = @func_2914() /* ty=(Tensor[(14, 14, 8), float64],) */;
  %388.0
}

def @func_6364() -> (Tensor[(14, 14, 8), float64], Tensor[(416), int16]) {
  %389 = @func_3148() /* ty=(Tensor[(144), float32], Tensor[(144), float32], Tensor[(416), int16], Tensor[(784, 2), float32], Tensor[(14, 14, 8), int8]) */;
  %390 = @func_3382() /* ty=Tensor[(14, 14, 8), float64] */;
  %391 = %389.2;
  (%390, %391)
}

def @func_6213(%var_6209: Tensor[(416), int16], %var_6211: Tensor[(70, 9), float32]) -> (Tensor[(14, 14, 8), float32], Tensor[(630), float32], Tensor[(416), int16], Tensor[(72, 2), float32], Tensor[(70, 9), float32]) {
  %392 = cast(%var_6209, dtype="int16") /* ty=Tensor[(416), int16] */;
  %393 = cast(meta[relay.Constant][16] /* ty=Tensor[(72, 2), float32] */, dtype="float32") /* ty=Tensor[(72, 2), float32] */;
  %394 = cast(%var_6211, dtype="float32") /* ty=Tensor[(70, 9), float32] */;
  %395 = reshape(%392, newshape=[8, 52]) /* ty=Tensor[(8, 52), int16] */;
  %396 = reshape(%393, newshape=[2, 72]) /* ty=Tensor[(2, 72), float32] */;
  %397 = reshape(%394, newshape=[630]) /* ty=Tensor[(630), float32] */;
  %398 = @func_5182(%395, %396, %397) /* ty=(Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), int8], Tensor[(8, 52), int16], Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), float64], Tensor[(72, 2), float32], Tensor[(2, 72), float32], Tensor[(15, 3, 14), bool], Tensor[(630), float32]) */;
  %399 = @func_1661() /* ty=Tensor[(14, 14, 8), float32] */;
  %400 = %398.8;
  (%399, %400, %var_6209, meta[relay.Constant][16] /* ty=Tensor[(72, 2), float32] */, %var_6211)
}

def @func_4958(%var_4925: Tensor[(784, 2), float32]) -> (Tensor[(784, 2), bool], Tensor[(14, 14, 8), float32], Tensor[(1430), float32]) {
  %401 = @func_3148() /* ty=(Tensor[(144), float32], Tensor[(144), float32], Tensor[(416), int16], Tensor[(784, 2), float32], Tensor[(14, 14, 8), int8]) */;
  %402 = %401.3;
  %403 = cast(%var_4925, dtype="int8") /* ty=Tensor[(784, 2), int8] */;
  %404 = shape_of(%402, dtype="int32") /* ty=Tensor[(2), int32] */;
  %405 = cast(%402, dtype="int8") /* ty=Tensor[(784, 2), int8] */;
  %406 = dyn.reshape(%403, %404, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %407 = maximum(%405, %406) /* ty=Tensor[(784, 2), int8] */;
  %408 = cast(%407, dtype="bool") /* ty=Tensor[(784, 2), bool] */;
  %409 = shape_of(%402, dtype="int32") /* ty=Tensor[(2), int32] */;
  %410 = cast(%402, dtype="bool") /* ty=Tensor[(784, 2), bool] */;
  %411 = dyn.reshape(%408, %409, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %412 = cast(meta[relay.Constant][17] /* ty=Tensor[(1430), float32] */, dtype="float32") /* ty=Tensor[(1430), float32] */;
  %413 = reshape(%412, newshape=[1, 1430]) /* ty=Tensor[(1, 1430), float32] */;
  %414 = @func_2544(%413) /* ty=(Tensor[(14, 14, 8), float32], Tensor[(11, 10, 13), float32], Tensor[(1, 1430), float32]) */;
  %415 = greater(%410, %411) /* ty=Tensor[(784, 2), bool] */;
  %416 = %414.0;
  (%415, %416, meta[relay.Constant][17] /* ty=Tensor[(1430), float32] */)
}

def @func_5020(%var_4987: Tensor[(2, 7, 4), float64]) -> (Tensor[(2, 7, 4), float64], Tensor[(14, 14, 8), float32], Tensor[(1568), float32], Tensor[(8, 2, 9), float32]) {
  %417 = @func_3917() /* ty=(Tensor[(2, 7, 4), float64],) */;
  %418 = %417.0;
  %419 = cast(%var_4987, dtype="float64") /* ty=Tensor[(2, 7, 4), float64] */;
  %420 = shape_of(%418, dtype="int32") /* ty=Tensor[(3), int32] */;
  %421 = cast(%418, dtype="float64") /* ty=Tensor[(2, 7, 4), float64] */;
  %422 = dyn.reshape(%419, %420, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %423 = cast(meta[relay.Constant][18] /* ty=Tensor[(1568), float32] */, dtype="float32") /* ty=Tensor[(1568), float32] */;
  %424 = reshape(%423, newshape=[14, 14, 8]) /* ty=Tensor[(14, 14, 8), float32] */;
  %425 = power(%421, %422) /* ty=Tensor[(2, 7, 4), float64] */;
  %426 = @func_4751(%424) /* ty=Tensor[(14, 14, 8), float32] */;
  %427 = @func_4302() /* ty=Tensor[(8, 2, 9), float32] */;
  (%425, %426, meta[relay.Constant][18] /* ty=Tensor[(1568), float32] */, %427)
}

def @func_8621(%var_8593: Tensor[(15, 11, 11), float32]) -> (Tensor[(15, 11, 11), float32], Tensor[(14, 14, 8), float64], Tensor[(56), float64]) {
  %428 = cast(%var_8593, dtype="float32") /* ty=Tensor[(15, 11, 11), float32] */;
  %429 = @func_2171() /* ty=(Tensor[(14, 14, 8), float32], Tensor[(2, 7, 4), float64], Tensor[(56), float64]) */;
  %430 = tan(%428) /* ty=Tensor[(15, 11, 11), float32] */;
  %431 = @func_5511() /* ty=Tensor[(14, 14, 8), float64] */;
  %432 = %429.2;
  (%430, %431, %432)
}

def @func_4524(%var_4504: Tensor[(240, 2), float32]) -> (Tensor[(14, 14, 8), float32], Tensor[(10, 8, 6), int16], Tensor[(240, 2), float32], Tensor[(14, 14, 8), float32]) {
  %433 = @func_4449() /* ty=(Tensor[(8, 2, 9), float32], Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), float32]) */;
  %434 = cast(%var_4504, dtype="float32") /* ty=Tensor[(240, 2), float32] */;
  %435 = reshape(%434, newshape=[10, 8, 6]) /* ty=Tensor[(10, 8, 6), float32] */;
  %436 = @func_622(%435) /* ty=(Tensor[(10, 8, 6), int16],) */;
  %437 = %433.2;
  %438 = %436.0;
  %439 = @func_1488() /* ty=Tensor[(14, 14, 8), float32] */;
  (%437, %438, %var_4504, %439)
}

def @func_2741(%var_2665: Tensor[(1568), float32], %var_2731: Tensor[(10, 8, 6), float32]) -> (Tensor[(56), float64], Tensor[(14, 14, 8), float64], Tensor[(1568), float32], Tensor[(480), float32], Tensor[(144), float32], Tensor[(24, 6), float32], Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), float32], Tensor[(10, 8, 6), float64]) {
  %440 = @func_2171() /* ty=(Tensor[(14, 14, 8), float32], Tensor[(2, 7, 4), float64], Tensor[(56), float64]) */;
  %441 = cast(%var_2665, dtype="float32") /* ty=Tensor[(1568), float32] */;
  %442 = reshape(%441, newshape=[14, 14, 8]) /* ty=Tensor[(14, 14, 8), float32] */;
  %443 = @func_1816(%442) /* ty=(Tensor[(14, 14, 8), float64],) */;
  %444 = cast(meta[relay.Constant][20] /* ty=Tensor[(24, 6), float32] */, dtype="float32") /* ty=Tensor[(24, 6), float32] */;
  %445 = reshape(%444, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %446 = @func_2101(%445) /* ty=(Tensor[(14, 14, 8), float32], Tensor[(8, 2, 9), float32], Tensor[(144), float32]) */;
  %447 = %443.0;
  %448 = cast(%447, dtype="float32") /* ty=Tensor[(14, 14, 8), float32] */;
  %449 = reshape(%448, newshape=[14, 14, 8]) /* ty=Tensor[(14, 14, 8), float32] */;
  %450 = cast(%var_2665, dtype="float32") /* ty=Tensor[(1568), float32] */;
  %451 = reshape(%450, newshape=[14, 14, 8]) /* ty=Tensor[(14, 14, 8), float32] */;
  %452 = cast(meta[relay.Constant][19] /* ty=Tensor[(480), float32] */, dtype="float32") /* ty=Tensor[(480), float32] */;
  %453 = reshape(%452, newshape=[10, 8, 6]) /* ty=Tensor[(10, 8, 6), float32] */;
  %454 = @func_622(%453) /* ty=(Tensor[(10, 8, 6), int16],) */;
  %455 = %454.0;
  %456 = cast(%455, dtype="float32") /* ty=Tensor[(10, 8, 6), float32] */;
  %457 = asin(%456) /* ty=Tensor[(10, 8, 6), float32] */;
  %458 = cast(%var_2731, dtype="float64") /* ty=Tensor[(10, 8, 6), float64] */;
  %459 = shape_of(%457, dtype="int32") /* ty=Tensor[(3), int32] */;
  %460 = cast(%457, dtype="float64") /* ty=Tensor[(10, 8, 6), float64] */;
  %461 = dyn.reshape(%458, %459, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %462 = %440.2;
  %463 = %446.2;
  %464 = @func_2023(%449) /* ty=Tensor[(14, 14, 8), float32] */;
  %465 = @func_1661() /* ty=Tensor[(14, 14, 8), float32] */;
  %466 = @func_2023(%451) /* ty=Tensor[(14, 14, 8), float32] */;
  %467 = floor_divide(%460, %461) /* ty=Tensor[(10, 8, 6), float64] */;
  (%462, %447, %var_2665, meta[relay.Constant][19] /* ty=Tensor[(480), float32] */, %463, meta[relay.Constant][20] /* ty=Tensor[(24, 6), float32] */, %464, %465, %466, %467)
}

def @func_8397() -> Tensor[(2, 7, 4), float32] {
  %468 = @func_6911() /* ty=(Tensor[(2, 7, 4), float32],) */;
  %468.0
}

def @func_8407() -> (Tensor[(1568), float32],) {
  %469 = @func_4845() /* ty=(Tensor[(7, 10, 12), float32], Tensor[(14, 14, 8), bool], Tensor[(1568), float32], Tensor[(144), float32], Tensor[(416), int16], Tensor[(11, 6, 13), float32], Tensor[(56), float64]) */;
  %470 = %469.2;
  (%470,)
}

def @func_8746() -> (Tensor[(2, 7, 4), float64],) {
  %471 = @func_7416() /* ty=(Tensor[(2, 7, 4), float64],) */;
  %472 = %471.0;
  (%472,)
}

def @func_5099() -> (Tensor[(16, 15, 7), float64],) {
  %473 = cast(meta[relay.Constant][21] /* ty=Tensor[(16, 15, 7), float64] */, dtype="float64") /* ty=Tensor[(16, 15, 7), float64] */;
  %474 = asinh(%473) /* ty=Tensor[(16, 15, 7), float64] */;
  (%474,)
}

def @func_2793(%var_2787: Tensor[(72, 2), float32]) -> (Tensor[(14, 14, 8), float32], Tensor[(144), float32], Tensor[(72, 2), float32], Tensor[(416), int16]) {
  %475 = cast(%var_2787, dtype="float32") /* ty=Tensor[(72, 2), float32] */;
  %476 = cast(meta[relay.Constant][22] /* ty=Tensor[(416), int16] */, dtype="int16") /* ty=Tensor[(416), int16] */;
  %477 = reshape(%475, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %478 = reshape(%476, newshape=[416]) /* ty=Tensor[(416), int16] */;
  %479 = @func_2627(%477, %478) /* ty=(Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), float64], Tensor[(144), float32], Tensor[(144), float32], Tensor[(416), int16]) */;
  %480 = @func_1488() /* ty=Tensor[(14, 14, 8), float32] */;
  %481 = %479.3;
  (%480, %481, %var_2787, meta[relay.Constant][22] /* ty=Tensor[(416), int16] */)
}

def @func_7918() -> (Tensor[(14, 14, 8), float64],) {
  %482 = @func_5449() /* ty=(Tensor[(14, 14, 8), float64],) */;
  %483 = %482.0;
  (%483,)
}

def @func_4708(%var_4671: Tensor[(2, 7, 4), float32], %var_4694: Tensor[(2, 7, 4), float32]) -> (Tensor[(2, 7, 4), float32], Tensor[(2, 7, 4), bool], Tensor[(14, 14, 8), float32]) {
  %484 = @func_3224() /* ty=(Tensor[(2, 7, 4), float32],) */;
  %485 = %484.0;
  %486 = cast(%var_4671, dtype="float32") /* ty=Tensor[(2, 7, 4), float32] */;
  %487 = shape_of(%485, dtype="int32") /* ty=Tensor[(3), int32] */;
  %488 = cast(%485, dtype="float32") /* ty=Tensor[(2, 7, 4), float32] */;
  %489 = dyn.reshape(%486, %487, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %490 = cast(%var_4694, dtype="bool") /* ty=Tensor[(2, 7, 4), bool] */;
  %491 = shape_of(%var_4671, dtype="int32") /* ty=Tensor[(3), int32] */;
  %492 = cast(%var_4671, dtype="bool") /* ty=Tensor[(2, 7, 4), bool] */;
  %493 = dyn.reshape(%490, %491, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %494 = @func_1902() /* ty=(Tensor[(14, 14, 8), int8], Tensor[(14, 14, 8), float32]) */;
  %495 = maximum(%488, %489) /* ty=Tensor[(2, 7, 4), float32] */;
  %496 = equal(%492, %493) /* ty=Tensor[(2, 7, 4), bool] */;
  %497 = %494.1;
  (%495, %496, %497)
}

def @func_3148() -> (Tensor[(144), float32], Tensor[(144), float32], Tensor[(416), int16], Tensor[(784, 2), float32], Tensor[(14, 14, 8), int8]) {
  %498 = @func_2861() /* ty=(Tensor[(14, 14, 8), int8], Tensor[(8, 2, 9), float32], Tensor[(144), float32], Tensor[(14, 14, 8), float64], Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), float32]) */;
  %499 = %498.2;
  %500 = cast(%499, dtype="float32") /* ty=Tensor[(144), float32] */;
  %501 = cast(meta[relay.Constant][23] /* ty=Tensor[(416), int16] */, dtype="int16") /* ty=Tensor[(416), int16] */;
  %502 = cast(meta[relay.Constant][24] /* ty=Tensor[(784, 2), float32] */, dtype="float32") /* ty=Tensor[(784, 2), float32] */;
  %503 = reshape(%500, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %504 = reshape(%501, newshape=[416]) /* ty=Tensor[(416), int16] */;
  %505 = reshape(%502, newshape=[14, 14, 8]) /* ty=Tensor[(14, 14, 8), float32] */;
  %506 = @func_1591(%503, %504, %505) /* ty=(Tensor[(8, 2, 9), float32], Tensor[(144), float32], Tensor[(416), int16], Tensor[(14, 14, 8), bool], Tensor[(14, 14, 8), uint32], Tensor[(8, 13, 4), int64]) */;
  %507 = @func_1902() /* ty=(Tensor[(14, 14, 8), int8], Tensor[(14, 14, 8), float32]) */;
  %508 = %506.1;
  %509 = %507.0;
  (%499, %508, meta[relay.Constant][23] /* ty=Tensor[(416), int16] */, meta[relay.Constant][24] /* ty=Tensor[(784, 2), float32] */, %509)
}

def @func_1848() -> Tensor[(14, 14, 8), float32] {
  @func_1505() /* ty=Tensor[(14, 14, 8), float32] */
}

def @func_7481() -> (Tensor[(14, 14, 8), float32], Tensor[(2, 7, 4), float64]) {
  %510 = @func_3917() /* ty=(Tensor[(2, 7, 4), float64],) */;
  %511 = @func_5332() /* ty=Tensor[(14, 14, 8), float32] */;
  %512 = %510.0;
  (%511, %512)
}

def @func_3001(%var_2978: Tensor[(13, 15, 9), float32], %var_2990: Tensor[(2160), float32]) -> (Tensor[(13, 15, 9), float32], Tensor[(10, 8, 6), int16], Tensor[(1485), float64], Tensor[(14, 4), float64], Tensor[(12, 12, 15), float32], Tensor[(2160), float32]) {
  %513 = cast(%var_2978, dtype="float32") /* ty=Tensor[(13, 15, 9), float32] */;
  %514 = cast(meta[relay.Constant][25] /* ty=Tensor[(1485), float64] */, dtype="float64") /* ty=Tensor[(1485), float64] */;
  %515 = cast(meta[relay.Constant][26] /* ty=Tensor[(14, 4), float64] */, dtype="float64") /* ty=Tensor[(14, 4), float64] */;
  %516 = cast(meta[relay.Constant][25] /* ty=Tensor[(1485), float64] */, dtype="bool") /* ty=Tensor[(1485), bool] */;
  %517 = reshape(%514, newshape=[1485]) /* ty=Tensor[(1485), float64] */;
  %518 = reshape(%515, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %519 = reshape(%516, newshape=[15, 9, 11]) /* ty=Tensor[(15, 9, 11), bool] */;
  %520 = @func_1291(%517, %518, %519) /* ty=(Tensor[(13, 12, 1), bool], Tensor[(1485), float64], Tensor[(56), float64], Tensor[(11, 6, 13), float32], Tensor[(858), float32], Tensor[(15, 9, 11), uint16], Tensor[(15, 9, 11), uint32], Tensor[(10, 8, 6), int16], Tensor[(480), float32], Tensor[(429, 2), float32]) */;
  %521 = cast(%var_2990, dtype="float32") /* ty=Tensor[(2160), float32] */;
  %522 = reshape(%521, newshape=[12, 12, 15]) /* ty=Tensor[(12, 12, 15), float32] */;
  %523 = @func_2894(%522) /* ty=(Tensor[(12, 12, 15), float32],) */;
  %524 = log10(%513) /* ty=Tensor[(13, 15, 9), float32] */;
  %525 = %520.7;
  %526 = %523.0;
  (%524, %525, meta[relay.Constant][25] /* ty=Tensor[(1485), float64] */, meta[relay.Constant][26] /* ty=Tensor[(14, 4), float64] */, %526, %var_2990)
}

def @func_7016() -> (Tensor[(2, 7, 4), float64],) {
  %527 = @func_2249() /* ty=(Tensor[(2, 7, 4), float64],) */;
  %528 = %527.0;
  (%528,)
}

def @func_2861() -> (Tensor[(14, 14, 8), int8], Tensor[(8, 2, 9), float32], Tensor[(144), float32], Tensor[(14, 14, 8), float64], Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), float32]) {
  %529 = @func_1902() /* ty=(Tensor[(14, 14, 8), int8], Tensor[(14, 14, 8), float32]) */;
  %530 = cast(meta[relay.Constant][27] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %531 = reshape(%530, newshape=[8, 2, 9]) /* ty=Tensor[(8, 2, 9), float32] */;
  %532 = @func_1389(%531) /* ty=(Tensor[(8, 2, 9), float32],) */;
  %533 = @func_1932() /* ty=(Tensor[(14, 14, 8), float64],) */;
  %534 = @func_1488() /* ty=Tensor[(14, 14, 8), float32] */;
  %535 = cast(%534, dtype="float32") /* ty=Tensor[(14, 14, 8), float32] */;
  %536 = reshape(%535, newshape=[14, 14, 8]) /* ty=Tensor[(14, 14, 8), float32] */;
  %537 = cast(%534, dtype="float32") /* ty=Tensor[(14, 14, 8), float32] */;
  %538 = %529.0;
  %539 = %532.0;
  %540 = %533.0;
  %541 = @func_2023(%536) /* ty=Tensor[(14, 14, 8), float32] */;
  %542 = asinh(%537) /* ty=Tensor[(14, 14, 8), float32] */;
  (%538, %539, meta[relay.Constant][27] /* ty=Tensor[(144), float32] */, %540, %541, %542)
}

def @func_6055(%var_6042: Tensor[(416), int16]) -> (Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), uint32], Tensor[(8, 13, 4), int16], Tensor[(416), int16], Tensor[(429, 2), float32], Tensor[(56), float64]) {
  %543 = @func_1505() /* ty=Tensor[(14, 14, 8), float32] */;
  %544 = cast(%543, dtype="float32") /* ty=Tensor[(14, 14, 8), float32] */;
  %545 = reshape(%544, newshape=[14, 14, 8]) /* ty=Tensor[(14, 14, 8), float32] */;
  %546 = @func_1792(%545) /* ty=(Tensor[(14, 14, 8), uint32], Tensor[(14, 14, 8), float64]) */;
  %547 = cast(%var_6042, dtype="int16") /* ty=Tensor[(416), int16] */;
  %548 = cast(%var_6042, dtype="int16") /* ty=Tensor[(416), int16] */;
  %549 = reshape(%547, newshape=[8, 13, 4]) /* ty=Tensor[(8, 13, 4), int16] */;
  %550 = reshape(%548, newshape=[8, 13, 4]) /* ty=Tensor[(8, 13, 4), int16] */;
  %551 = @func_735(%549, %550) /* ty=(Tensor[(8, 13, 4), int16],) */;
  %552 = cast(meta[relay.Constant][28] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
  %553 = reshape(%552, newshape=[2, 7, 4]) /* ty=Tensor[(2, 7, 4), float64] */;
  %554 = @func_284(%553) /* ty=(Tensor[(2, 7, 4), float64], Tensor[(11, 6, 13), float32], Tensor[(429, 2), float32], Tensor[(11, 6, 13), float32]) */;
  %555 = %546.0;
  %556 = %551.0;
  %557 = %554.2;
  (%543, %555, %556, %var_6042, %557, meta[relay.Constant][28] /* ty=Tensor[(56), float64] */)
}

def @func_735(%var_720: Tensor[(8, 13, 4), int16], %var_721: Tensor[(8, 13, 4), int16]) -> (Tensor[(8, 13, 4), int16],) {
  %558 = cast(%var_721, dtype="int16") /* ty=Tensor[(8, 13, 4), int16] */;
  %559 = shape_of(%var_720, dtype="int32") /* ty=Tensor[(3), int32] */;
  %560 = cast(%var_720, dtype="int16") /* ty=Tensor[(8, 13, 4), int16] */;
  %561 = dyn.reshape(%558, %559, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %562 = right_shift(%560, %561) /* ty=Tensor[(8, 13, 4), int16] */;
  (%562,)
}

def @func_6662(%var_6655: Tensor[(780), bool]) -> (Tensor[(14, 14, 8), float64], Tensor[(14, 14, 8), float32], Tensor[(1430), float32], Tensor[(15, 13, 4), bool], Tensor[(780), bool]) {
  %563 = @func_6303() /* ty=(Tensor[(14, 14, 8), float64],) */;
  %564 = cast(meta[relay.Constant][29] /* ty=Tensor[(1430), float32] */, dtype="float32") /* ty=Tensor[(1430), float32] */;
  %565 = reshape(%564, newshape=[11, 130]) /* ty=Tensor[(11, 130), float32] */;
  %566 = @func_4411(%565) /* ty=(Tensor[(14, 14, 8), float64], Tensor[(14, 14, 8), int8], Tensor[(2, 7, 4), float32], Tensor[(11, 130), float32], Tensor[(14, 14, 8), float32], Tensor[(8, 13, 4), int16], Tensor[(416), int16]) */;
  %567 = cast(%var_6655, dtype="bool") /* ty=Tensor[(780), bool] */;
  %568 = cast(%var_6655, dtype="bool") /* ty=Tensor[(780), bool] */;
  %569 = reshape(%567, newshape=[15, 13, 4]) /* ty=Tensor[(15, 13, 4), bool] */;
  %570 = reshape(%568, newshape=[15, 13, 4]) /* ty=Tensor[(15, 13, 4), bool] */;
  %571 = @func_2957(%569, %570) /* ty=(Tensor[(15, 13, 4), bool],) */;
  %572 = %563.0;
  %573 = %566.4;
  %574 = %571.0;
  (%572, %573, meta[relay.Constant][29] /* ty=Tensor[(1430), float32] */, %574, %var_6655)
}

def @func_7846(%var_7839: Tensor[(64), float64]) -> (Tensor[(2, 7, 4), float64], Tensor[(14, 14, 8), float64], Tensor[(8, 8, 11), float64], Tensor[(64), float64], Tensor[(352, 2), float64]) {
  %575 = @func_7673() /* ty=(Tensor[(2, 7, 4), float64],) */;
  %576 = @func_1848() /* ty=Tensor[(14, 14, 8), float32] */;
  %577 = cast(%576, dtype="float64") /* ty=Tensor[(14, 14, 8), float64] */;
  %578 = cast(%var_7839, dtype="float64") /* ty=Tensor[(64), float64] */;
  %579 = cast(meta[relay.Constant][30] /* ty=Tensor[(352, 2), float64] */, dtype="float64") /* ty=Tensor[(352, 2), float64] */;
  %580 = cast(%576, dtype="float32") /* ty=Tensor[(14, 14, 8), float32] */;
  %581 = reshape(%578, newshape=[8, 8, 1]) /* ty=Tensor[(8, 8, 1), float64] */;
  %582 = reshape(%579, newshape=[8, 8, 11]) /* ty=Tensor[(8, 8, 11), float64] */;
  %583 = reshape(%580, newshape=[1568]) /* ty=Tensor[(1568), float32] */;
  %584 = @func_6561(%581, %582, %583) /* ty=(Tensor[(8, 8, 11), float64], Tensor[(14, 14, 8), float32], Tensor[(1568), float32]) */;
  %585 = %575.0;
  %586 = atan(%577) /* ty=Tensor[(14, 14, 8), float64] */;
  %587 = %584.0;
  (%585, %586, %587, %var_7839, meta[relay.Constant][30] /* ty=Tensor[(352, 2), float64] */)
}

def @main(%var_8839: Tensor[(16, 15, 7), float64]) -> Tensor[(16, 15, 7), uint16] {
  %588 = @func_5099() /* ty=(Tensor[(16, 15, 7), float64],) */;
  %589 = %588.0;
  %590 = cast(%var_8839, dtype="uint16") /* ty=Tensor[(16, 15, 7), uint16] */;
  %591 = shape_of(%589, dtype="int32") /* ty=Tensor[(3), int32] */;
  %592 = cast(%589, dtype="uint16") /* ty=Tensor[(16, 15, 7), uint16] */;
  %593 = dyn.reshape(%590, %591, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  bitwise_and(%592, %593) /* ty=Tensor[(16, 15, 7), uint16] */
}

def @func_3611(%var_3592: Tensor[(14, 14, 8), float32], %var_3601: Tensor[(1, 144), float32], %var_3602: Tensor[(416), int16]) -> (Tensor[(14, 14, 8), bool], Tensor[(8, 13, 4), int64], Tensor[(1, 144), float32], Tensor[(416), int16]) {
  %594 = @func_1505() /* ty=Tensor[(14, 14, 8), float32] */;
  %595 = cast(%var_3592, dtype="bool") /* ty=Tensor[(14, 14, 8), bool] */;
  %596 = shape_of(%594, dtype="int32") /* ty=Tensor[(3), int32] */;
  %597 = cast(%594, dtype="bool") /* ty=Tensor[(14, 14, 8), bool] */;
  %598 = dyn.reshape(%595, %596, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %599 = cast(%var_3601, dtype="float32") /* ty=Tensor[(1, 144), float32] */;
  %600 = cast(%var_3602, dtype="int16") /* ty=Tensor[(416), int16] */;
  %601 = cast(%594, dtype="float32") /* ty=Tensor[(14, 14, 8), float32] */;
  %602 = reshape(%599, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %603 = reshape(%600, newshape=[416]) /* ty=Tensor[(416), int16] */;
  %604 = reshape(%601, newshape=[14, 14, 8]) /* ty=Tensor[(14, 14, 8), float32] */;
  %605 = @func_1591(%602, %603, %604) /* ty=(Tensor[(8, 2, 9), float32], Tensor[(144), float32], Tensor[(416), int16], Tensor[(14, 14, 8), bool], Tensor[(14, 14, 8), uint32], Tensor[(8, 13, 4), int64]) */;
  %606 = less(%597, %598) /* ty=Tensor[(14, 14, 8), bool] */;
  %607 = %605.5;
  (%606, %607, %var_3601, %var_3602)
}

def @func_2135() -> Tensor[(14, 14, 8), int8] {
  %608 = @func_1902() /* ty=(Tensor[(14, 14, 8), int8], Tensor[(14, 14, 8), float32]) */;
  %608.0
}

def @func_7734(%var_7710: Tensor[(14, 6, 4), uint32], %var_7711: Tensor[(14, 6, 4), uint32], %var_7721: Tensor[(1568), float32], %var_7723: Tensor[(2, 208), int16]) -> (Tensor[(8, 13, 4), int64], Tensor[(1568), float32], Tensor[(144), float32], Tensor[(2, 208), int16], Tensor[(14, 6, 4), bool]) {
  %609 = cast(%var_7721, dtype="float32") /* ty=Tensor[(1568), float32] */;
  %610 = cast(meta[relay.Constant][31] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %611 = cast(%var_7723, dtype="int16") /* ty=Tensor[(2, 208), int16] */;
  %612 = reshape(%609, newshape=[14, 14, 8]) /* ty=Tensor[(14, 14, 8), float32] */;
  %613 = reshape(%610, newshape=[1, 144]) /* ty=Tensor[(1, 144), float32] */;
  %614 = reshape(%611, newshape=[416]) /* ty=Tensor[(416), int16] */;
  %615 = @func_3611(%612, %613, %614) /* ty=(Tensor[(14, 14, 8), bool], Tensor[(8, 13, 4), int64], Tensor[(1, 144), float32], Tensor[(416), int16]) */;
  %616 = cast(%var_7710, dtype="float32") /* ty=Tensor[(14, 6, 4), float32] */;
  %617 = sqrt(%616) /* ty=Tensor[(14, 6, 4), float32] */;
  %618 = cast(%var_7711, dtype="uint32") /* ty=Tensor[(14, 6, 4), uint32] */;
  %619 = shape_of(%var_7710, dtype="int32") /* ty=Tensor[(3), int32] */;
  %620 = cast(%var_7710, dtype="uint32") /* ty=Tensor[(14, 6, 4), uint32] */;
  %621 = dyn.reshape(%618, %619, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %622 = multiply(%620, %621) /* ty=Tensor[(14, 6, 4), uint32] */;
  %623 = cast(%622, dtype="bool") /* ty=Tensor[(14, 6, 4), bool] */;
  %624 = shape_of(%617, dtype="int32") /* ty=Tensor[(3), int32] */;
  %625 = cast(%617, dtype="bool") /* ty=Tensor[(14, 6, 4), bool] */;
  %626 = dyn.reshape(%623, %624, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %627 = %615.1;
  %628 = less(%625, %626) /* ty=Tensor[(14, 6, 4), bool] */;
  (%627, %var_7721, meta[relay.Constant][31] /* ty=Tensor[(144), float32] */, %var_7723, %628)
}

def @func_8505(%var_8493: Tensor[(9, 16, 1), float64]) -> (Tensor[(9, 16, 1), float64], Tensor[(144), float32]) {
  %629 = cast(%var_8493, dtype="float64") /* ty=Tensor[(9, 16, 1), float64] */;
  %630 = cast(%var_8493, dtype="float32") /* ty=Tensor[(9, 16, 1), float32] */;
  %631 = reshape(%630, newshape=[72, 2]) /* ty=Tensor[(72, 2), float32] */;
  %632 = @func_2793(%631) /* ty=(Tensor[(14, 14, 8), float32], Tensor[(144), float32], Tensor[(72, 2), float32], Tensor[(416), int16]) */;
  %633 = log2(%629) /* ty=Tensor[(9, 16, 1), float64] */;
  %634 = %632.1;
  (%633, %634)
}

def @func_6522(%var_6458: Tensor[(416), int16], %var_6469: Tensor[(12, 15, 8), float32], %var_6477: Tensor[(1568), float32]) -> (Tensor[(416), float32], Tensor[(12, 15, 8), uint8], Tensor[(24, 6), float32], Tensor[(1568), float32], Tensor[(40, 12), float32], Tensor[(416), uint64]) {
  %635 = cast(%var_6458, dtype="float32") /* ty=Tensor[(416), float32] */;
  %636 = @func_6064() /* ty=Tensor[(12, 15, 8), float32] */;
  %637 = cast(%var_6469, dtype="uint8") /* ty=Tensor[(12, 15, 8), uint8] */;
  %638 = shape_of(%636, dtype="int32") /* ty=Tensor[(3), int32] */;
  %639 = cast(%636, dtype="uint8") /* ty=Tensor[(12, 15, 8), uint8] */;
  %640 = dyn.reshape(%637, %638, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %641 = cast(%var_6477, dtype="float32") /* ty=Tensor[(1568), float32] */;
  %642 = cast(meta[relay.Constant][32] /* ty=Tensor[(40, 12), float32] */, dtype="float32") /* ty=Tensor[(40, 12), float32] */;
  %643 = reshape(%641, newshape=[1568]) /* ty=Tensor[(1568), float32] */;
  %644 = reshape(%642, newshape=[10, 8, 6]) /* ty=Tensor[(10, 8, 6), float32] */;
  %645 = @func_2741(%643, %644) /* ty=(Tensor[(56), float64], Tensor[(14, 14, 8), float64], Tensor[(1568), float32], Tensor[(480), float32], Tensor[(144), float32], Tensor[(24, 6), float32], Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), float32], Tensor[(10, 8, 6), float64]) */;
  %646 = cast(%var_6458, dtype="int16") /* ty=Tensor[(416), int16] */;
  %647 = reshape(%646, newshape=[416]) /* ty=Tensor[(416), int16] */;
  %648 = @func_2323(%647) /* ty=(Tensor[(14, 14, 8), float32], Tensor[(10, 8, 11), float64], Tensor[(416), int16], Tensor[(8, 13, 4), float32]) */;
  %649 = %648.2;
  %650 = cast(%649, dtype="uint64") /* ty=Tensor[(416), uint64] */;
  %651 = shape_of(%var_6458, dtype="int32") /* ty=Tensor[(1), int32] */;
  %652 = cast(%var_6458, dtype="uint64") /* ty=Tensor[(416), uint64] */;
  %653 = dyn.reshape(%650, %651, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %654 = acos(%635) /* ty=Tensor[(416), float32] */;
  %655 = minimum(%639, %640) /* ty=Tensor[(12, 15, 8), uint8] */;
  %656 = %645.5;
  %657 = bitwise_or(%652, %653) /* ty=Tensor[(416), uint64] */;
  (%654, %655, %656, %var_6477, meta[relay.Constant][32] /* ty=Tensor[(40, 12), float32] */, %657)
}

def @func_6965(%var_6928: Tensor[(1568), int8], %var_6937: Tensor[(416), int16]) -> (Tensor[(2, 7, 4), float64], Tensor[(14, 14, 8), bool], Tensor[(1568), int8], Tensor[(14, 14, 8), int8], Tensor[(416), int16], Tensor[(14, 14, 8), int8], Tensor[(144), float32], Tensor[(630), float32]) {
  %658 = @func_3917() /* ty=(Tensor[(2, 7, 4), float64],) */;
  %659 = cast(%var_6928, dtype="int8") /* ty=Tensor[(1568), int8] */;
  %660 = reshape(%659, newshape=[14, 14, 8]) /* ty=Tensor[(14, 14, 8), int8] */;
  %661 = @func_3305(%660) /* ty=(Tensor[(14, 14, 8), bool],) */;
  %662 = cast(%var_6937, dtype="int16") /* ty=Tensor[(416), int16] */;
  %663 = reshape(%662, newshape=[4, 104]) /* ty=Tensor[(4, 104), int16] */;
  %664 = @func_3525(%663) /* ty=(Tensor[(14, 14, 8), int8], Tensor[(144), float32], Tensor[(4, 104), int16], Tensor[(2, 28), float64]) */;
  %665 = cast(%var_6937, dtype="int16") /* ty=Tensor[(416), int16] */;
  %666 = cast(meta[relay.Constant][33] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %667 = cast(meta[relay.Constant][34] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
  %668 = reshape(%665, newshape=[8, 52]) /* ty=Tensor[(8, 52), int16] */;
  %669 = reshape(%666, newshape=[2, 72]) /* ty=Tensor[(2, 72), float32] */;
  %670 = reshape(%667, newshape=[630]) /* ty=Tensor[(630), float32] */;
  %671 = @func_5182(%668, %669, %670) /* ty=(Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), int8], Tensor[(8, 52), int16], Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), float64], Tensor[(72, 2), float32], Tensor[(2, 72), float32], Tensor[(15, 3, 14), bool], Tensor[(630), float32]) */;
  %672 = %658.0;
  %673 = %661.0;
  %674 = %664.0;
  %675 = %671.1;
  (%672, %673, %var_6928, %674, %var_6937, %675, meta[relay.Constant][33] /* ty=Tensor[(144), float32] */, meta[relay.Constant][34] /* ty=Tensor[(630), float32] */)
}

def @func_3305(%var_3296: Tensor[(14, 14, 8), int8]) -> (Tensor[(14, 14, 8), bool],) {
  %676 = @func_1902() /* ty=(Tensor[(14, 14, 8), int8], Tensor[(14, 14, 8), float32]) */;
  %677 = %676.0;
  %678 = cast(%var_3296, dtype="bool") /* ty=Tensor[(14, 14, 8), bool] */;
  %679 = shape_of(%677, dtype="int32") /* ty=Tensor[(3), int32] */;
  %680 = cast(%677, dtype="bool") /* ty=Tensor[(14, 14, 8), bool] */;
  %681 = dyn.reshape(%678, %679, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %682 = logical_or(%680, %681) /* ty=Tensor[(14, 14, 8), bool] */;
  (%682,)
}

def @func_5449() -> (Tensor[(14, 14, 8), float64],) {
  %683 = @func_2914() /* ty=(Tensor[(14, 14, 8), float64],) */;
  %684 = %683.0;
  (%684,)
}

def @func_6821(%var_6765: Tensor[(416), int16], %var_6794: float64, %var_6795: Tensor[(108), float64]) -> (Tensor[(14, 14, 8), float32], Tensor[(8, 13, 4), int16], Tensor[(416), int16], Tensor[(15, 3, 14), bool], Tensor[(630), float32], Tensor[(1430), float32], float64, Tensor[(108), float64]) {
  %685 = @func_4147() /* ty=(Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), float64], Tensor[(14, 14, 8), int8], Tensor[(2, 7, 4), uint8]) */;
  %686 = cast(%var_6765, dtype="int16") /* ty=Tensor[(416), int16] */;
  %687 = reshape(%686, newshape=[416]) /* ty=Tensor[(416), int16] */;
  %688 = @func_1146(%687) /* ty=(Tensor[(15, 9, 11), bool], Tensor[(1485), float64], Tensor[(2, 28), float64], Tensor[(8, 13, 4), int16], Tensor[(416), int16], Tensor[(12, 10, 9), int16], Tensor[(11, 6, 13), float32], Tensor[(858), float32], Tensor[(11, 6, 13), float32], Tensor[(15, 9, 11), bool], Tensor[(8, 13, 4), int16]) */;
  %689 = cast(meta[relay.Constant][35] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
  %690 = reshape(%689, newshape=[15, 3, 14]) /* ty=Tensor[(15, 3, 14), float32] */;
  %691 = @func_3476(%690) /* ty=(Tensor[(15, 3, 14), bool],) */;
  %692 = cast(%var_6794, dtype="float64") /* ty=float64 */;
  %693 = cast(%var_6795, dtype="float64") /* ty=Tensor[(108), float64] */;
  %694 = reshape(%692, newshape=[]) /* ty=float64 */;
  %695 = reshape(%693, newshape=[9, 6, 2]) /* ty=Tensor[(9, 6, 2), float64] */;
  %696 = @func_5989(%694, %695) /* ty=(Tensor[(9, 6, 2), float32], Tensor[(416), int16], Tensor[(1430), float32], Tensor[(14, 14, 8), int8]) */;
  %697 = %685.0;
  %698 = %688.10;
  %699 = %691.0;
  %700 = %696.2;
  (%697, %698, %var_6765, %699, meta[relay.Constant][35] /* ty=Tensor[(630), float32] */, %700, %var_6794, %var_6795)
}

def @func_6064() -> Tensor[(12, 15, 8), float32] {
  %701 = cast(meta[relay.Constant][36] /* ty=Tensor[(12, 15, 8), float32] */, dtype="float32") /* ty=Tensor[(12, 15, 8), float32] */;
  tan(%701) /* ty=Tensor[(12, 15, 8), float32] */
}

def @func_6174(%var_6116: Tensor[(144), float32]) -> (Tensor[(2, 7, 4), float64], Tensor[(14, 14, 8), float64], Tensor[(780, ?), float32], Tensor[(8, 2, 9), float32], Tensor[(144), float32], Tensor[(780, ?), float32], Tensor[(8, 2, 9), float32], Tensor[(2, 208), int16]) {
  %702 = @func_5243() /* ty=(Tensor[(14, 14, 8), float64], Tensor[(2, 7, 4), float64], Tensor[(12, 12, 15), float32], Tensor[(180, 12), float32]) */;
  %703 = cast(meta[relay.Constant][37] /* ty=Tensor[(780, 1), bool] */, dtype="bool") /* ty=Tensor[(780, 1), bool] */;
  %704 = reshape(%703, newshape=[780]) /* ty=Tensor[(780), bool] */;
  %705 = @func_4656(%704) /* ty=(Tensor[(14, 14, 8), float64], Tensor[(15, 13, 4), bool], Tensor[(780), bool]) */;
  %706 = cast(meta[relay.Constant][37] /* ty=Tensor[(780, 1), bool] */, dtype="float32") /* ty=Tensor[(780, 1), float32] */;
  %707 = erf(%706) /* ty=Tensor[(780, 1), float32] */;
  %708 = cast(meta[relay.Constant][37] /* ty=Tensor[(780, 1), bool] */, dtype="float64") /* ty=Tensor[(780, 1), float64] */;
  %709 = acos(%708) /* ty=Tensor[(780, 1), float64] */;
  %710 = cast(%709, dtype="float32") /* ty=Tensor[(780, 1), float32] */;
  %711 = shape_of(%707, dtype="int32") /* ty=Tensor[(2), int32] */;
  %712 = cast(%707, dtype="float32") /* ty=Tensor[(780, 1), float32] */;
  %713 = dyn.reshape(%710, %711, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %714 = cast(%var_6116, dtype="float32") /* ty=Tensor[(144), float32] */;
  %715 = reshape(%714, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %716 = @func_2101(%715) /* ty=(Tensor[(14, 14, 8), float32], Tensor[(8, 2, 9), float32], Tensor[(144), float32]) */;
  %717 = cast(%707, dtype="int64") /* ty=Tensor[(780, 1), int64] */;
  %718 = shape_of(%709, dtype="int32") /* ty=Tensor[(2), int32] */;
  %719 = cast(%709, dtype="int64") /* ty=Tensor[(780, 1), int64] */;
  %720 = dyn.reshape(%717, %718, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %721 = logical_xor(%719, %720) /* ty=Tensor[(780, ?), int64] */;
  %722 = cast(%721, dtype="float32") /* ty=Tensor[(780, ?), float32] */;
  %723 = %716.1;
  %724 = cast(%723, dtype="float32") /* ty=Tensor[(8, 2, 9), float32] */;
  %725 = reshape(%724, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %726 = @func_2101(%725) /* ty=(Tensor[(14, 14, 8), float32], Tensor[(8, 2, 9), float32], Tensor[(144), float32]) */;
  %727 = @func_4255() /* ty=(Tensor[(14, 14, 8), float64], Tensor[(416), int16], Tensor[(144), float32], Tensor[(2, 208), int16]) */;
  %728 = %702.1;
  %729 = %705.0;
  %730 = minimum(%712, %713) /* ty=Tensor[(780, ?), float32] */;
  %731 = sqrt(%722) /* ty=Tensor[(780, ?), float32] */;
  %732 = %726.1;
  %733 = %727.3;
  (%728, %729, %730, %723, %var_6116, %731, %732, %733)
}

def @func_8264() -> Tensor[(16, 15, 7), float64] {
  %734 = @func_5099() /* ty=(Tensor[(16, 15, 7), float64],) */;
  %735 = %734.0;
  %736 = cast(%735, dtype="float32") /* ty=Tensor[(16, 15, 7), float32] */;
  %737 = acos(%736) /* ty=Tensor[(16, 15, 7), float32] */;
  %738 = cast(%735, dtype="float64") /* ty=Tensor[(16, 15, 7), float64] */;
  %739 = shape_of(%737, dtype="int32") /* ty=Tensor[(3), int32] */;
  %740 = cast(%737, dtype="float64") /* ty=Tensor[(16, 15, 7), float64] */;
  %741 = dyn.reshape(%738, %739, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  mod(%740, %741) /* ty=Tensor[(16, 15, 7), float64] */
}

def @func_8158(%var_8134: Tensor[(108), float64]) -> (Tensor[(16, 15, 7), float64], Tensor[(8, 13, 4), int16], float64, Tensor[(2, 7, 4), float32], Tensor[(416, 108), bool], Tensor[(12, 15, 8), float32]) {
  %742 = @func_5099() /* ty=(Tensor[(16, 15, 7), float64],) */;
  %743 = cast(meta[relay.Constant][38] /* ty=Tensor[(416, 1), int16] */, dtype="int16") /* ty=Tensor[(416, 1), int16] */;
  %744 = cast(9.74576f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %745 = cast(%var_8134, dtype="float64") /* ty=Tensor[(108), float64] */;
  %746 = reshape(%743, newshape=[416]) /* ty=Tensor[(416), int16] */;
  %747 = reshape(%744, newshape=[]) /* ty=float64 */;
  %748 = reshape(%745, newshape=[108]) /* ty=Tensor[(108), float64] */;
  %749 = @func_6821(%746, %747, %748) /* ty=(Tensor[(14, 14, 8), float32], Tensor[(8, 13, 4), int16], Tensor[(416), int16], Tensor[(15, 3, 14), bool], Tensor[(630), float32], Tensor[(1430), float32], float64, Tensor[(108), float64]) */;
  %750 = @func_6911() /* ty=(Tensor[(2, 7, 4), float32],) */;
  %751 = cast(meta[relay.Constant][38] /* ty=Tensor[(416, 1), int16] */, dtype="bool") /* ty=Tensor[(416, 1), bool] */;
  %752 = cast(%var_8134, dtype="bool") /* ty=Tensor[(108), bool] */;
  %753 = %742.0;
  %754 = %749.1;
  %755 = %750.0;
  %756 = logical_or(%751, %752) /* ty=Tensor[(416, 108), bool] */;
  %757 = @func_6064() /* ty=Tensor[(12, 15, 8), float32] */;
  (%753, %754, 9.74576f64 /* ty=float64 */, %755, %756, %757)
}

def @func_1505() -> Tensor[(14, 14, 8), float32] {
  @func_1488() /* ty=Tensor[(14, 14, 8), float32] */
}

def @func_2567(%var_2562: Tensor[(416), int16]) -> (Tensor[(14, 14, 8), float32], Tensor[(144), float32], Tensor[(144), float32], Tensor[(416), int16]) {
  %758 = cast(meta[relay.Constant][39] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %759 = cast(%var_2562, dtype="int16") /* ty=Tensor[(416), int16] */;
  %760 = @func_1661() /* ty=Tensor[(14, 14, 8), float32] */;
  %761 = cast(%760, dtype="float32") /* ty=Tensor[(14, 14, 8), float32] */;
  %762 = reshape(%758, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %763 = reshape(%759, newshape=[416]) /* ty=Tensor[(416), int16] */;
  %764 = reshape(%761, newshape=[14, 14, 8]) /* ty=Tensor[(14, 14, 8), float32] */;
  %765 = @func_1591(%762, %763, %764) /* ty=(Tensor[(8, 2, 9), float32], Tensor[(144), float32], Tensor[(416), int16], Tensor[(14, 14, 8), bool], Tensor[(14, 14, 8), uint32], Tensor[(8, 13, 4), int64]) */;
  %766 = %765.1;
  (%760, %766, meta[relay.Constant][39] /* ty=Tensor[(144), float32] */, %var_2562)
}

def @func_5791() -> Tensor[(14, 14, 8), float32] {
  %767 = @func_4449() /* ty=(Tensor[(8, 2, 9), float32], Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), float32]) */;
  %767.1
}

def @func_8371() -> (Tensor[(14, 14, 8), float32],) {
  %768 = @func_7481() /* ty=(Tensor[(14, 14, 8), float32], Tensor[(2, 7, 4), float64]) */;
  %769 = %768.0;
  (%769,)
}

def @func_5625() -> (Tensor[(14, 14, 8), float32], Tensor[(3, 2, 9), float32], Tensor[(54), float32], Tensor[(14, 14, 8), float64]) {
  %770 = cast(meta[relay.Constant][40] /* ty=Tensor[(54), float32] */, dtype="float32") /* ty=Tensor[(54), float32] */;
  %771 = reshape(%770, newshape=[3, 2, 9]) /* ty=Tensor[(3, 2, 9), float32] */;
  %772 = @func_3208(%771) /* ty=(Tensor[(3, 2, 9), float32], Tensor[(2, 7, 4), float64]) */;
  %773 = @func_1505() /* ty=Tensor[(14, 14, 8), float32] */;
  %774 = %772.0;
  %775 = @func_3442() /* ty=Tensor[(14, 14, 8), float64] */;
  (%773, %774, meta[relay.Constant][40] /* ty=Tensor[(54), float32] */, %775)
}

def @func_7247() -> Tensor[(14, 14, 8), float64] {
  %776 = @func_5394() /* ty=(Tensor[(14, 14, 8), float64], Tensor[(11, 6, 13), float32], Tensor[(858, 1), float32]) */;
  %776.0
}

def @func_2894(%var_2890: Tensor[(12, 12, 15), float32]) -> (Tensor[(12, 12, 15), float32],) {
  %777 = cast(%var_2890, dtype="float32") /* ty=Tensor[(12, 12, 15), float32] */;
  %778 = exp(%777) /* ty=Tensor[(12, 12, 15), float32] */;
  (%778,)
}

def @func_5423() -> Tensor[(14, 14, 8), float32] {
  @func_1661() /* ty=Tensor[(14, 14, 8), float32] */
}

def @func_2544(%var_2531: Tensor[(1, 1430), float32]) -> (Tensor[(14, 14, 8), float32], Tensor[(11, 10, 13), float32], Tensor[(1, 1430), float32]) {
  %779 = cast(%var_2531, dtype="float32") /* ty=Tensor[(1, 1430), float32] */;
  %780 = reshape(%779, newshape=[11, 10, 13]) /* ty=Tensor[(11, 10, 13), float32] */;
  %781 = @func_1661() /* ty=Tensor[(14, 14, 8), float32] */;
  %782 = @func_1304(%780) /* ty=Tensor[(11, 10, 13), float32] */;
  (%781, %782, %var_2531)
}

def @func_5511() -> Tensor[(14, 14, 8), float64] {
  @func_4552() /* ty=Tensor[(14, 14, 8), float64] */
}

def @func_4845() -> (Tensor[(7, 10, 12), float32], Tensor[(14, 14, 8), bool], Tensor[(1568), float32], Tensor[(144), float32], Tensor[(416), int16], Tensor[(11, 6, 13), float32], Tensor[(56), float64]) {
  %783 = cast(meta[relay.Constant][41] /* ty=Tensor[(7, 10, 12), float32] */, dtype="float32") /* ty=Tensor[(7, 10, 12), float32] */;
  %784 = cast(meta[relay.Constant][42] /* ty=Tensor[(1568), float32] */, dtype="float32") /* ty=Tensor[(1568), float32] */;
  %785 = cast(meta[relay.Constant][43] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %786 = cast(meta[relay.Constant][44] /* ty=Tensor[(416), int16] */, dtype="int16") /* ty=Tensor[(416), int16] */;
  %787 = reshape(%784, newshape=[14, 14, 8]) /* ty=Tensor[(14, 14, 8), float32] */;
  %788 = reshape(%785, newshape=[1, 144]) /* ty=Tensor[(1, 144), float32] */;
  %789 = reshape(%786, newshape=[416]) /* ty=Tensor[(416), int16] */;
  %790 = @func_3611(%787, %788, %789) /* ty=(Tensor[(14, 14, 8), bool], Tensor[(8, 13, 4), int64], Tensor[(1, 144), float32], Tensor[(416), int16]) */;
  %791 = cast(meta[relay.Constant][45] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
  %792 = reshape(%791, newshape=[2, 7, 4]) /* ty=Tensor[(2, 7, 4), float64] */;
  %793 = @func_284(%792) /* ty=(Tensor[(2, 7, 4), float64], Tensor[(11, 6, 13), float32], Tensor[(429, 2), float32], Tensor[(11, 6, 13), float32]) */;
  %794 = exp(%783) /* ty=Tensor[(7, 10, 12), float32] */;
  %795 = %790.0;
  %796 = %793.1;
  (%794, %795, meta[relay.Constant][42] /* ty=Tensor[(1568), float32] */, meta[relay.Constant][43] /* ty=Tensor[(144), float32] */, meta[relay.Constant][44] /* ty=Tensor[(416), int16] */, %796, meta[relay.Constant][45] /* ty=Tensor[(56), float64] */)
}

def @func_7447() -> (Tensor[(3, 2, 9), float32], Tensor[(14, 14, 8), float64], Tensor[(14, 14, 8), float32]) {
  %797 = @func_5625() /* ty=(Tensor[(14, 14, 8), float32], Tensor[(3, 2, 9), float32], Tensor[(54), float32], Tensor[(14, 14, 8), float64]) */;
  %798 = @func_5696() /* ty=(Tensor[(2, 7, 4), float64], Tensor[(14, 14, 8), float32]) */;
  %799 = %797.1;
  %800 = @func_7247() /* ty=Tensor[(14, 14, 8), float64] */;
  %801 = %798.1;
  (%799, %800, %801)
}

def @func_4629() -> (Tensor[(14, 14, 8), float64],) {
  %802 = @func_4608() /* ty=Tensor[(14, 14, 8), float64] */;
  (%802,)
}

def @func_3442() -> Tensor[(14, 14, 8), float64] {
  %803 = @func_1505() /* ty=Tensor[(14, 14, 8), float32] */;
  %804 = cast(%803, dtype="float64") /* ty=Tensor[(14, 14, 8), float64] */;
  cosh(%804) /* ty=Tensor[(14, 14, 8), float64] */
}

def @func_3476(%var_3470: Tensor[(15, 3, 14), float32]) -> (Tensor[(15, 3, 14), bool],) {
  %805 = cast(%var_3470, dtype="bool") /* ty=Tensor[(15, 3, 14), bool] */;
  %806 = shape_of(meta[relay.Constant][46] /* ty=Tensor[(15, 3, 14), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %807 = cast(meta[relay.Constant][46] /* ty=Tensor[(15, 3, 14), float32] */, dtype="bool") /* ty=Tensor[(15, 3, 14), bool] */;
  %808 = dyn.reshape(%805, %806, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %809 = greater_equal(%807, %808) /* ty=Tensor[(15, 3, 14), bool] */;
  (%809,)
}

def @func_4552() -> Tensor[(14, 14, 8), float64] {
  %810 = @func_2914() /* ty=(Tensor[(14, 14, 8), float64],) */;
  %810.0
}

def @func_6303() -> (Tensor[(14, 14, 8), float64],) {
  %811 = @func_4552() /* ty=Tensor[(14, 14, 8), float64] */;
  (%811,)
}

def @func_5332() -> Tensor[(14, 14, 8), float32] {
  %812 = @func_2171() /* ty=(Tensor[(14, 14, 8), float32], Tensor[(2, 7, 4), float64], Tensor[(56), float64]) */;
  %812.0
}

def @func_2101(%var_2066: Tensor[(144), float32]) -> (Tensor[(14, 14, 8), float32], Tensor[(8, 2, 9), float32], Tensor[(144), float32]) {
  %813 = cast(%var_2066, dtype="float32") /* ty=Tensor[(144), float32] */;
  %814 = reshape(%813, newshape=[8, 2, 9]) /* ty=Tensor[(8, 2, 9), float32] */;
  %815 = @func_1389(%814) /* ty=(Tensor[(8, 2, 9), float32],) */;
  %816 = @func_1848() /* ty=Tensor[(14, 14, 8), float32] */;
  %817 = %815.0;
  (%816, %817, %var_2066)
}

def @func_2023(%var_1979: Tensor[(14, 14, 8), float32]) -> Tensor[(14, 14, 8), float32] {
  %818 = @func_1848() /* ty=Tensor[(14, 14, 8), float32] */;
  %819 = cast(%var_1979, dtype="uint8") /* ty=Tensor[(14, 14, 8), uint8] */;
  %820 = shape_of(%818, dtype="int32") /* ty=Tensor[(3), int32] */;
  %821 = cast(%818, dtype="uint8") /* ty=Tensor[(14, 14, 8), uint8] */;
  %822 = dyn.reshape(%819, %820, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %823 = add(%821, %822) /* ty=Tensor[(14, 14, 8), uint8] */;
  %824 = cast(%var_1979, dtype="float32") /* ty=Tensor[(14, 14, 8), float32] */;
  %825 = shape_of(%823, dtype="int32") /* ty=Tensor[(3), int32] */;
  %826 = cast(%823, dtype="float32") /* ty=Tensor[(14, 14, 8), float32] */;
  %827 = dyn.reshape(%824, %825, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  divide(%826, %827) /* ty=Tensor[(14, 14, 8), float32] */
}

def @func_1146(%var_1088: Tensor[(416), int16]) -> (Tensor[(15, 9, 11), bool], Tensor[(1485), float64], Tensor[(2, 28), float64], Tensor[(8, 13, 4), int16], Tensor[(416), int16], Tensor[(12, 10, 9), int16], Tensor[(11, 6, 13), float32], Tensor[(858), float32], Tensor[(11, 6, 13), float32], Tensor[(15, 9, 11), bool], Tensor[(8, 13, 4), int16]) {
  %828 = cast(meta[relay.Constant][47] /* ty=Tensor[(1485), float64] */, dtype="float64") /* ty=Tensor[(1485), float64] */;
  %829 = cast(meta[relay.Constant][47] /* ty=Tensor[(1485), float64] */, dtype="float64") /* ty=Tensor[(1485), float64] */;
  %830 = cast(meta[relay.Constant][48] /* ty=Tensor[(2, 28), float64] */, dtype="float64") /* ty=Tensor[(2, 28), float64] */;
  %831 = reshape(%828, newshape=[15, 9, 11]) /* ty=Tensor[(15, 9, 11), float64] */;
  %832 = reshape(%829, newshape=[15, 9, 11]) /* ty=Tensor[(15, 9, 11), float64] */;
  %833 = reshape(%830, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %834 = @func_380(%831, %832, %833) /* ty=(Tensor[(429, 2), float32], Tensor[(56), float64], Tensor[(11, 6, 13), float32], Tensor[(15, 9, 11), bool], Tensor[(11, 6, 13), float32], Tensor[(11, 6, 13), float32], Tensor[(11, 6, 13), float32]) */;
  %835 = cast(%var_1088, dtype="int16") /* ty=Tensor[(416), int16] */;
  %836 = cast(%var_1088, dtype="int16") /* ty=Tensor[(416), int16] */;
  %837 = reshape(%835, newshape=[8, 13, 4]) /* ty=Tensor[(8, 13, 4), int16] */;
  %838 = reshape(%836, newshape=[8, 13, 4]) /* ty=Tensor[(8, 13, 4), int16] */;
  %839 = @func_735(%837, %838) /* ty=(Tensor[(8, 13, 4), int16],) */;
  %840 = cast(meta[relay.Constant][49] /* ty=Tensor[(12, 10, 9), float64] */, dtype="float64") /* ty=Tensor[(12, 10, 9), float64] */;
  %841 = sqrt(%840) /* ty=Tensor[(12, 10, 9), float64] */;
  %842 = cast(%841, dtype="float64") /* ty=Tensor[(12, 10, 9), float64] */;
  %843 = atan(%842) /* ty=Tensor[(12, 10, 9), float64] */;
  %844 = cast(%841, dtype="int16") /* ty=Tensor[(12, 10, 9), int16] */;
  %845 = shape_of(%843, dtype="int32") /* ty=Tensor[(3), int32] */;
  %846 = cast(%843, dtype="int16") /* ty=Tensor[(12, 10, 9), int16] */;
  %847 = dyn.reshape(%844, %845, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %848 = cast(meta[relay.Constant][50] /* ty=Tensor[(858), float32] */, dtype="float32") /* ty=Tensor[(858), float32] */;
  %849 = reshape(%848, newshape=[11, 6, 13]) /* ty=Tensor[(11, 6, 13), float32] */;
  %850 = @func_27(%849) /* ty=(Tensor[(11, 6, 13), float32],) */;
  %851 = %834.3;
  %852 = cast(%851, dtype="float64") /* ty=Tensor[(15, 9, 11), float64] */;
  %853 = cast(%851, dtype="float64") /* ty=Tensor[(15, 9, 11), float64] */;
  %854 = cast(meta[relay.Constant][48] /* ty=Tensor[(2, 28), float64] */, dtype="float64") /* ty=Tensor[(2, 28), float64] */;
  %855 = reshape(%852, newshape=[15, 9, 11]) /* ty=Tensor[(15, 9, 11), float64] */;
  %856 = reshape(%853, newshape=[15, 9, 11]) /* ty=Tensor[(15, 9, 11), float64] */;
  %857 = reshape(%854, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %858 = @func_380(%855, %856, %857) /* ty=(Tensor[(429, 2), float32], Tensor[(56), float64], Tensor[(11, 6, 13), float32], Tensor[(15, 9, 11), bool], Tensor[(11, 6, 13), float32], Tensor[(11, 6, 13), float32], Tensor[(11, 6, 13), float32]) */;
  %859 = cast(%851, dtype="float64") /* ty=Tensor[(15, 9, 11), float64] */;
  %860 = cast(meta[relay.Constant][47] /* ty=Tensor[(1485), float64] */, dtype="float64") /* ty=Tensor[(1485), float64] */;
  %861 = cast(meta[relay.Constant][48] /* ty=Tensor[(2, 28), float64] */, dtype="float64") /* ty=Tensor[(2, 28), float64] */;
  %862 = reshape(%859, newshape=[15, 9, 11]) /* ty=Tensor[(15, 9, 11), float64] */;
  %863 = reshape(%860, newshape=[15, 9, 11]) /* ty=Tensor[(15, 9, 11), float64] */;
  %864 = reshape(%861, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %865 = @func_380(%862, %863, %864) /* ty=(Tensor[(429, 2), float32], Tensor[(56), float64], Tensor[(11, 6, 13), float32], Tensor[(15, 9, 11), bool], Tensor[(11, 6, 13), float32], Tensor[(11, 6, 13), float32], Tensor[(11, 6, 13), float32]) */;
  %866 = cast(%var_1088, dtype="int16") /* ty=Tensor[(416), int16] */;
  %867 = %839.0;
  %868 = cast(%867, dtype="int16") /* ty=Tensor[(8, 13, 4), int16] */;
  %869 = reshape(%866, newshape=[8, 13, 4]) /* ty=Tensor[(8, 13, 4), int16] */;
  %870 = reshape(%868, newshape=[8, 13, 4]) /* ty=Tensor[(8, 13, 4), int16] */;
  %871 = @func_735(%869, %870) /* ty=(Tensor[(8, 13, 4), int16],) */;
  %872 = minimum(%846, %847) /* ty=Tensor[(12, 10, 9), int16] */;
  %873 = %850.0;
  %874 = %858.5;
  %875 = %865.3;
  %876 = %871.0;
  (%851, meta[relay.Constant][47] /* ty=Tensor[(1485), float64] */, meta[relay.Constant][48] /* ty=Tensor[(2, 28), float64] */, %867, %var_1088, %872, %873, meta[relay.Constant][50] /* ty=Tensor[(858), float32] */, %874, %875, %876)
}

def @func_3917() -> (Tensor[(2, 7, 4), float64],) {
  %877 = @func_2463() /* ty=(Tensor[(2, 7, 4), float64], Tensor[(10, 8, 11), float64], Tensor[(2, 7, 4), float64]) */;
  %878 = %877.0;
  (%878,)
}

def @func_4449() -> (Tensor[(8, 2, 9), float32], Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), float32]) {
  %879 = @func_4302() /* ty=Tensor[(8, 2, 9), float32] */;
  %880 = @func_1848() /* ty=Tensor[(14, 14, 8), float32] */;
  %881 = @func_1848() /* ty=Tensor[(14, 14, 8), float32] */;
  (%879, %880, %881)
}

def @func_3757(%var_3753: Tensor[(16, 26), int16]) -> (Tensor[(14, 14, 8), float32], Tensor[(1, 144), float32], Tensor[(144), float32], Tensor[(16, 26), int16]) {
  %882 = @func_1661() /* ty=Tensor[(14, 14, 8), float32] */;
  %883 = cast(%882, dtype="float32") /* ty=Tensor[(14, 14, 8), float32] */;
  %884 = cast(meta[relay.Constant][51] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %885 = cast(%var_3753, dtype="int16") /* ty=Tensor[(16, 26), int16] */;
  %886 = reshape(%883, newshape=[14, 14, 8]) /* ty=Tensor[(14, 14, 8), float32] */;
  %887 = reshape(%884, newshape=[1, 144]) /* ty=Tensor[(1, 144), float32] */;
  %888 = reshape(%885, newshape=[416]) /* ty=Tensor[(416), int16] */;
  %889 = @func_3611(%886, %887, %888) /* ty=(Tensor[(14, 14, 8), bool], Tensor[(8, 13, 4), int64], Tensor[(1, 144), float32], Tensor[(416), int16]) */;
  %890 = %889.2;
  (%882, %890, meta[relay.Constant][51] /* ty=Tensor[(144), float32] */, %var_3753)
}

def @func_6274() -> (Tensor[(14, 14, 8), float64],) {
  %891 = @func_5449() /* ty=(Tensor[(14, 14, 8), float64],) */;
  %892 = %891.0;
  (%892,)
}

def @func_2914() -> (Tensor[(14, 14, 8), float64],) {
  %893 = @func_1932() /* ty=(Tensor[(14, 14, 8), float64],) */;
  %894 = %893.0;
  (%894,)
}

def @func_3402(%var_3396: Tensor[(1, 1485), float64]) -> (Tensor[(2, 7, 4), float32], Tensor[(15, 9, 11), uint16], Tensor[(1, 1485), float64]) {
  %895 = @func_3224() /* ty=(Tensor[(2, 7, 4), float32],) */;
  %896 = cast(%var_3396, dtype="float64") /* ty=Tensor[(1, 1485), float64] */;
  %897 = %895.0;
  %898 = cast(%897, dtype="float64") /* ty=Tensor[(2, 7, 4), float64] */;
  %899 = cast(%var_3396, dtype="bool") /* ty=Tensor[(1, 1485), bool] */;
  %900 = reshape(%896, newshape=[1485]) /* ty=Tensor[(1485), float64] */;
  %901 = reshape(%898, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %902 = reshape(%899, newshape=[15, 9, 11]) /* ty=Tensor[(15, 9, 11), bool] */;
  %903 = @func_1291(%900, %901, %902) /* ty=(Tensor[(13, 12, 1), bool], Tensor[(1485), float64], Tensor[(56), float64], Tensor[(11, 6, 13), float32], Tensor[(858), float32], Tensor[(15, 9, 11), uint16], Tensor[(15, 9, 11), uint32], Tensor[(10, 8, 6), int16], Tensor[(480), float32], Tensor[(429, 2), float32]) */;
  %904 = %903.5;
  (%897, %904, %var_3396)
}

def @func_1591(%var_1560: Tensor[(144), float32], %var_1564: Tensor[(416), int16], %var_1566: Tensor[(14, 14, 8), float32]) -> (Tensor[(8, 2, 9), float32], Tensor[(144), float32], Tensor[(416), int16], Tensor[(14, 14, 8), bool], Tensor[(14, 14, 8), uint32], Tensor[(8, 13, 4), int64]) {
  %905 = cast(%var_1560, dtype="float32") /* ty=Tensor[(144), float32] */;
  %906 = reshape(%905, newshape=[8, 2, 9]) /* ty=Tensor[(8, 2, 9), float32] */;
  %907 = @func_1389(%906) /* ty=(Tensor[(8, 2, 9), float32],) */;
  %908 = @func_1505() /* ty=Tensor[(14, 14, 8), float32] */;
  %909 = cast(%var_1566, dtype="bool") /* ty=Tensor[(14, 14, 8), bool] */;
  %910 = shape_of(%908, dtype="int32") /* ty=Tensor[(3), int32] */;
  %911 = cast(%908, dtype="bool") /* ty=Tensor[(14, 14, 8), bool] */;
  %912 = dyn.reshape(%909, %910, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %913 = cast(meta[relay.Constant][52] /* ty=Tensor[(14, 14, 8), float32] */, dtype="uint32") /* ty=Tensor[(14, 14, 8), uint32] */;
  %914 = shape_of(%908, dtype="int32") /* ty=Tensor[(3), int32] */;
  %915 = cast(%908, dtype="uint32") /* ty=Tensor[(14, 14, 8), uint32] */;
  %916 = dyn.reshape(%913, %914, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %917 = cast(%var_1564, dtype="int16") /* ty=Tensor[(416), int16] */;
  %918 = cast(%var_1564, dtype="int16") /* ty=Tensor[(416), int16] */;
  %919 = reshape(%917, newshape=[8, 13, 4]) /* ty=Tensor[(8, 13, 4), int16] */;
  %920 = reshape(%918, newshape=[8, 13, 4]) /* ty=Tensor[(8, 13, 4), int16] */;
  %921 = @func_735(%919, %920) /* ty=(Tensor[(8, 13, 4), int16],) */;
  %922 = %921.0;
  %923 = cast(meta[relay.Constant][53] /* ty=Tensor[(8, 13, 4), int16] */, dtype="int64") /* ty=Tensor[(8, 13, 4), int64] */;
  %924 = shape_of(%922, dtype="int32") /* ty=Tensor[(3), int32] */;
  %925 = cast(%922, dtype="int64") /* ty=Tensor[(8, 13, 4), int64] */;
  %926 = dyn.reshape(%923, %924, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %927 = %907.0;
  %928 = less_equal(%911, %912) /* ty=Tensor[(14, 14, 8), bool] */;
  %929 = subtract(%915, %916) /* ty=Tensor[(14, 14, 8), uint32] */;
  %930 = bitwise_xor(%925, %926) /* ty=Tensor[(8, 13, 4), int64] */;
  (%927, %var_1560, %var_1564, %928, %929, %930)
}

def @func_4049(%var_4042: Tensor[(480), float32]) -> (Tensor[(144), float32], Tensor[(14, 14, 8), bool], Tensor[(10, 8, 6), int16], Tensor[(480), float32]) {
  %931 = @func_2135() /* ty=Tensor[(14, 14, 8), int8] */;
  %932 = cast(meta[relay.Constant][54] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %933 = reshape(%932, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %934 = @func_2101(%933) /* ty=(Tensor[(14, 14, 8), float32], Tensor[(8, 2, 9), float32], Tensor[(144), float32]) */;
  %935 = %934.0;
  %936 = cast(%935, dtype="bool") /* ty=Tensor[(14, 14, 8), bool] */;
  %937 = shape_of(%931, dtype="int32") /* ty=Tensor[(3), int32] */;
  %938 = cast(%931, dtype="bool") /* ty=Tensor[(14, 14, 8), bool] */;
  %939 = dyn.reshape(%936, %937, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %940 = cast(%var_4042, dtype="float32") /* ty=Tensor[(480), float32] */;
  %941 = reshape(%940, newshape=[10, 8, 6]) /* ty=Tensor[(10, 8, 6), float32] */;
  %942 = @func_622(%941) /* ty=(Tensor[(10, 8, 6), int16],) */;
  %943 = greater(%938, %939) /* ty=Tensor[(14, 14, 8), bool] */;
  %944 = %942.0;
  (meta[relay.Constant][54] /* ty=Tensor[(144), float32] */, %943, %944, %var_4042)
}

def @func_1291(%var_1251: Tensor[(1485), float64], %var_1252: Tensor[(56), float64], %var_1264: Tensor[(15, 9, 11), bool]) -> (Tensor[(13, 12, 1), bool], Tensor[(1485), float64], Tensor[(56), float64], Tensor[(11, 6, 13), float32], Tensor[(858), float32], Tensor[(15, 9, 11), uint16], Tensor[(15, 9, 11), uint32], Tensor[(10, 8, 6), int16], Tensor[(480), float32], Tensor[(429, 2), float32]) {
  %945 = cast(meta[relay.Constant][55] /* ty=uint64 */, dtype="bool") /* ty=bool */;
  %946 = cast(meta[relay.Constant][56] /* ty=Tensor[(13, 12, 1), uint64] */, dtype="bool") /* ty=Tensor[(13, 12, 1), bool] */;
  %947 = cast(meta[relay.Constant][57] /* ty=Tensor[(858), float32] */, dtype="float32") /* ty=Tensor[(858), float32] */;
  %948 = reshape(%947, newshape=[11, 6, 13]) /* ty=Tensor[(11, 6, 13), float32] */;
  %949 = @func_27(%948) /* ty=(Tensor[(11, 6, 13), float32],) */;
  %950 = cast(%var_1251, dtype="float64") /* ty=Tensor[(1485), float64] */;
  %951 = cast(%var_1251, dtype="float64") /* ty=Tensor[(1485), float64] */;
  %952 = cast(%var_1252, dtype="float64") /* ty=Tensor[(56), float64] */;
  %953 = reshape(%950, newshape=[15, 9, 11]) /* ty=Tensor[(15, 9, 11), float64] */;
  %954 = reshape(%951, newshape=[15, 9, 11]) /* ty=Tensor[(15, 9, 11), float64] */;
  %955 = reshape(%952, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %956 = @func_380(%953, %954, %955) /* ty=(Tensor[(429, 2), float32], Tensor[(56), float64], Tensor[(11, 6, 13), float32], Tensor[(15, 9, 11), bool], Tensor[(11, 6, 13), float32], Tensor[(11, 6, 13), float32], Tensor[(11, 6, 13), float32]) */;
  %957 = %956.3;
  %958 = cast(%var_1264, dtype="uint16") /* ty=Tensor[(15, 9, 11), uint16] */;
  %959 = shape_of(%957, dtype="int32") /* ty=Tensor[(3), int32] */;
  %960 = cast(%957, dtype="uint16") /* ty=Tensor[(15, 9, 11), uint16] */;
  %961 = dyn.reshape(%958, %959, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %962 = cast(%var_1264, dtype="uint32") /* ty=Tensor[(15, 9, 11), uint32] */;
  %963 = shape_of(%957, dtype="int32") /* ty=Tensor[(3), int32] */;
  %964 = cast(%957, dtype="uint32") /* ty=Tensor[(15, 9, 11), uint32] */;
  %965 = dyn.reshape(%962, %963, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %966 = cast(meta[relay.Constant][58] /* ty=Tensor[(480), float32] */, dtype="float32") /* ty=Tensor[(480), float32] */;
  %967 = reshape(%966, newshape=[10, 8, 6]) /* ty=Tensor[(10, 8, 6), float32] */;
  %968 = @func_622(%967) /* ty=(Tensor[(10, 8, 6), int16],) */;
  %969 = cast(%var_1252, dtype="float64") /* ty=Tensor[(56), float64] */;
  %970 = reshape(%969, newshape=[2, 7, 4]) /* ty=Tensor[(2, 7, 4), float64] */;
  %971 = @func_284(%970) /* ty=(Tensor[(2, 7, 4), float64], Tensor[(11, 6, 13), float32], Tensor[(429, 2), float32], Tensor[(11, 6, 13), float32]) */;
  %972 = greater(%945, %946) /* ty=Tensor[(13, 12, 1), bool] */;
  %973 = %949.0;
  %974 = bitwise_xor(%960, %961) /* ty=Tensor[(15, 9, 11), uint16] */;
  %975 = maximum(%964, %965) /* ty=Tensor[(15, 9, 11), uint32] */;
  %976 = %968.0;
  %977 = %971.2;
  (%972, %var_1251, %var_1252, %973, meta[relay.Constant][57] /* ty=Tensor[(858), float32] */, %974, %975, %976, meta[relay.Constant][58] /* ty=Tensor[(480), float32] */, %977)
}

def @func_5989(%var_5956: float64, %var_5957: Tensor[(9, 6, 2), float64]) -> (Tensor[(9, 6, 2), float32], Tensor[(416), int16], Tensor[(1430), float32], Tensor[(14, 14, 8), int8]) {
  %978 = cast(%var_5956, dtype="bool") /* ty=bool */;
  %979 = cast(%var_5957, dtype="bool") /* ty=Tensor[(9, 6, 2), bool] */;
  %980 = less_equal(%978, %979) /* ty=Tensor[(9, 6, 2), bool] */;
  %981 = cast(%var_5956, dtype="float32") /* ty=float32 */;
  %982 = cast(%980, dtype="float32") /* ty=Tensor[(9, 6, 2), float32] */;
  %983 = cast(meta[relay.Constant][59] /* ty=Tensor[(1430), float32] */, dtype="float32") /* ty=Tensor[(1430), float32] */;
  %984 = reshape(%983, newshape=[11, 130]) /* ty=Tensor[(11, 130), float32] */;
  %985 = @func_4411(%984) /* ty=(Tensor[(14, 14, 8), float64], Tensor[(14, 14, 8), int8], Tensor[(2, 7, 4), float32], Tensor[(11, 130), float32], Tensor[(14, 14, 8), float32], Tensor[(8, 13, 4), int16], Tensor[(416), int16]) */;
  %986 = power(%981, %982) /* ty=Tensor[(9, 6, 2), float32] */;
  %987 = %985.6;
  %988 = @func_2135() /* ty=Tensor[(14, 14, 8), int8] */;
  (%986, %987, meta[relay.Constant][59] /* ty=Tensor[(1430), float32] */, %988)
}

def @func_1389(%var_1374: Tensor[(8, 2, 9), float32]) -> (Tensor[(8, 2, 9), float32],) {
  %989 = cast(%var_1374, dtype="float32") /* ty=Tensor[(8, 2, 9), float32] */;
  %990 = asin(%989) /* ty=Tensor[(8, 2, 9), float32] */;
  (%990,)
}

def @func_5243() -> (Tensor[(14, 14, 8), float64], Tensor[(2, 7, 4), float64], Tensor[(12, 12, 15), float32], Tensor[(180, 12), float32]) {
  %991 = @func_2249() /* ty=(Tensor[(2, 7, 4), float64],) */;
  %992 = cast(meta[relay.Constant][60] /* ty=Tensor[(180, 12), float32] */, dtype="float32") /* ty=Tensor[(180, 12), float32] */;
  %993 = reshape(%992, newshape=[12, 12, 15]) /* ty=Tensor[(12, 12, 15), float32] */;
  %994 = @func_2894(%993) /* ty=(Tensor[(12, 12, 15), float32],) */;
  %995 = @func_4552() /* ty=Tensor[(14, 14, 8), float64] */;
  %996 = %991.0;
  %997 = %994.0;
  (%995, %996, %997, meta[relay.Constant][60] /* ty=Tensor[(180, 12), float32] */)
}

def @func_3208(%var_3160: Tensor[(3, 2, 9), float32]) -> (Tensor[(3, 2, 9), float32], Tensor[(2, 7, 4), float64]) {
  %998 = cast(meta[relay.Constant][61] /* ty=Tensor[(3, 1, 1), float32] */, dtype="float32") /* ty=Tensor[(3, 1, 1), float32] */;
  %999 = cast(%var_3160, dtype="float32") /* ty=Tensor[(3, 2, 9), float32] */;
  %1000 = @func_2463() /* ty=(Tensor[(2, 7, 4), float64], Tensor[(10, 8, 11), float64], Tensor[(2, 7, 4), float64]) */;
  %1001 = divide(%998, %999) /* ty=Tensor[(3, 2, 9), float32] */;
  %1002 = %1000.2;
  (%1001, %1002)
}

def @func_3656(%var_3626: Tensor[(1430, 1), float32]) -> (Tensor[(2, 7, 4), float32], Tensor[(14, 14, 8), float32], Tensor[(1430, 1), float32]) {
  %1003 = @func_3224() /* ty=(Tensor[(2, 7, 4), float32],) */;
  %1004 = cast(%var_3626, dtype="float32") /* ty=Tensor[(1430, 1), float32] */;
  %1005 = reshape(%1004, newshape=[1, 1430]) /* ty=Tensor[(1, 1430), float32] */;
  %1006 = @func_2544(%1005) /* ty=(Tensor[(14, 14, 8), float32], Tensor[(11, 10, 13), float32], Tensor[(1, 1430), float32]) */;
  %1007 = %1003.0;
  %1008 = %1006.0;
  (%1007, %1008, %var_3626)
}

def @func_2249() -> (Tensor[(2, 7, 4), float64],) {
  %1009 = @func_2171() /* ty=(Tensor[(14, 14, 8), float32], Tensor[(2, 7, 4), float64], Tensor[(56), float64]) */;
  %1010 = %1009.1;
  (%1010,)
}

def @func_7281() -> (Tensor[(8, 18), float64], Tensor[(2, 7, 4), float32]) {
  %1011 = @func_6901() /* ty=(Tensor[(2, 7, 4), float32], Tensor[(6, 2, 12), float64], Tensor[(8, 18), float64]) */;
  %1012 = %1011.2;
  %1013 = cast(%1012, dtype="float64") /* ty=Tensor[(8, 18), float64] */;
  %1014 = @func_6901() /* ty=(Tensor[(2, 7, 4), float32], Tensor[(6, 2, 12), float64], Tensor[(8, 18), float64]) */;
  %1015 = asinh(%1013) /* ty=Tensor[(8, 18), float64] */;
  %1016 = %1014.0;
  (%1015, %1016)
}

def @func_2957(%var_2944: Tensor[(15, 13, 4), bool], %var_2945: Tensor[(15, 13, 4), bool]) -> (Tensor[(15, 13, 4), bool],) {
  %1017 = cast(%var_2945, dtype="bool") /* ty=Tensor[(15, 13, 4), bool] */;
  %1018 = shape_of(%var_2944, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1019 = cast(%var_2944, dtype="bool") /* ty=Tensor[(15, 13, 4), bool] */;
  %1020 = dyn.reshape(%1017, %1018, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1021 = logical_and(%1019, %1020) /* ty=Tensor[(15, 13, 4), bool] */;
  (%1021,)
}

def @func_3551() -> (Tensor[(2, 7, 4), float64],) {
  %1022 = @func_2249() /* ty=(Tensor[(2, 7, 4), float64],) */;
  %1023 = %1022.0;
  (%1023,)
}

def @func_7323() -> (Tensor[(14, 14, 8), float64],) {
  %1024 = @func_5511() /* ty=Tensor[(14, 14, 8), float64] */;
  (%1024,)
}

def @func_5696() -> (Tensor[(2, 7, 4), float64], Tensor[(14, 14, 8), float32]) {
  %1025 = @func_2171() /* ty=(Tensor[(14, 14, 8), float32], Tensor[(2, 7, 4), float64], Tensor[(56), float64]) */;
  %1026 = %1025.1;
  %1027 = @func_5423() /* ty=Tensor[(14, 14, 8), float32] */;
  (%1026, %1027)
}

def @func_5394() -> (Tensor[(14, 14, 8), float64], Tensor[(11, 6, 13), float32], Tensor[(858, 1), float32]) {
  %1028 = @func_2135() /* ty=Tensor[(14, 14, 8), int8] */;
  %1029 = cast(%1028, dtype="float64") /* ty=Tensor[(14, 14, 8), float64] */;
  %1030 = cast(meta[relay.Constant][62] /* ty=Tensor[(858, 1), float32] */, dtype="float32") /* ty=Tensor[(858, 1), float32] */;
  %1031 = reshape(%1030, newshape=[11, 6, 13]) /* ty=Tensor[(11, 6, 13), float32] */;
  %1032 = @func_27(%1031) /* ty=(Tensor[(11, 6, 13), float32],) */;
  %1033 = sqrt(%1029) /* ty=Tensor[(14, 14, 8), float64] */;
  %1034 = %1032.0;
  (%1033, %1034, meta[relay.Constant][62] /* ty=Tensor[(858, 1), float32] */)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_6174(%var_6116: Tensor[(144), float32]) -> (Tensor[(2, 7, 4), float64], Tensor[(14, 14, 8), float64], Tensor[(780, ?), float32], Tensor[(8, 2, 9), float32], Tensor[(144), float32], Tensor[(780, ?), float32], Tensor[(8, 2, 9), float32], Tensor[(2, 208), int16]) {
  %0 = @func_5243() /* ty=(Tensor[(14, 14, 8), float64], Tensor[(2, 7, 4), float64], Tensor[(12, 12, 15), float32], Tensor[(180, 12), float32]) */;
  %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(780, 1), bool] */, dtype="bool") /* ty=Tensor[(780, 1), bool] */;
  %2 = reshape(%1, newshape=[780]) /* ty=Tensor[(780), bool] */;
  %3 = @func_4656(%2) /* ty=(Tensor[(14, 14, 8), float64], Tensor[(15, 13, 4), bool], Tensor[(780), bool]) */;
  %4 = cast(meta[relay.Constant][0] /* ty=Tensor[(780, 1), bool] */, dtype="float32") /* ty=Tensor[(780, 1), float32] */;
  %5 = erf(%4) /* ty=Tensor[(780, 1), float32] */;
  %6 = cast(meta[relay.Constant][0] /* ty=Tensor[(780, 1), bool] */, dtype="float64") /* ty=Tensor[(780, 1), float64] */;
  %7 = acos(%6) /* ty=Tensor[(780, 1), float64] */;
  %8 = cast(%7, dtype="float32") /* ty=Tensor[(780, 1), float32] */;
  %9 = shape_of(%5, dtype="int32") /* ty=Tensor[(2), int32] */;
  %10 = cast(%5, dtype="float32") /* ty=Tensor[(780, 1), float32] */;
  %11 = dyn.reshape(%8, %9, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %12 = cast(%var_6116, dtype="float32") /* ty=Tensor[(144), float32] */;
  %13 = reshape(%12, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %14 = @func_2101(%13) /* ty=(Tensor[(14, 14, 8), float32], Tensor[(8, 2, 9), float32], Tensor[(144), float32]) */;
  %15 = cast(%5, dtype="int64") /* ty=Tensor[(780, 1), int64] */;
  %16 = shape_of(%7, dtype="int32") /* ty=Tensor[(2), int32] */;
  %17 = cast(%7, dtype="int64") /* ty=Tensor[(780, 1), int64] */;
  %18 = dyn.reshape(%15, %16, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %19 = logical_xor(%17, %18) /* ty=Tensor[(780, ?), int64] */;
  %20 = cast(%19, dtype="float32") /* ty=Tensor[(780, ?), float32] */;
  %21 = %14.1;
  %22 = cast(%21, dtype="float32") /* ty=Tensor[(8, 2, 9), float32] */;
  %23 = reshape(%22, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %24 = @func_2101(%23) /* ty=(Tensor[(14, 14, 8), float32], Tensor[(8, 2, 9), float32], Tensor[(144), float32]) */;
  %25 = @func_4255() /* ty=(Tensor[(14, 14, 8), float64], Tensor[(416), int16], Tensor[(144), float32], Tensor[(2, 208), int16]) */;
  %26 = %0.1;
  %27 = %3.0;
  %28 = minimum(%10, %11) /* ty=Tensor[(780, ?), float32] */;
  %29 = sqrt(%20) /* ty=Tensor[(780, ?), float32] */;
  %30 = %24.1;
  %31 = %25.3;
  (%26, %27, %28, %21, %var_6116, %29, %30, %31)
}

def @func_5394() -> (Tensor[(14, 14, 8), float64], Tensor[(11, 6, 13), float32], Tensor[(858, 1), float32]) {
  %32 = @func_2135() /* ty=Tensor[(14, 14, 8), int8] */;
  %33 = cast(%32, dtype="float64") /* ty=Tensor[(14, 14, 8), float64] */;
  %34 = cast(meta[relay.Constant][1] /* ty=Tensor[(858, 1), float32] */, dtype="float32") /* ty=Tensor[(858, 1), float32] */;
  %35 = reshape(%34, newshape=[11, 6, 13]) /* ty=Tensor[(11, 6, 13), float32] */;
  %36 = @func_27(%35) /* ty=(Tensor[(11, 6, 13), float32],) */;
  %37 = sqrt(%33) /* ty=Tensor[(14, 14, 8), float64] */;
  %38 = %36.0;
  (%37, %38, meta[relay.Constant][1] /* ty=Tensor[(858, 1), float32] */)
}

def @func_5332() -> Tensor[(14, 14, 8), float32] {
  %39 = @func_2171() /* ty=(Tensor[(14, 14, 8), float32], Tensor[(2, 7, 4), float64], Tensor[(56), float64]) */;
  %39.0
}

def @func_4524(%var_4504: Tensor[(240, 2), float32]) -> (Tensor[(14, 14, 8), float32], Tensor[(10, 8, 6), int16], Tensor[(240, 2), float32], Tensor[(14, 14, 8), float32]) {
  %40 = @func_4449() /* ty=(Tensor[(8, 2, 9), float32], Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), float32]) */;
  %41 = cast(%var_4504, dtype="float32") /* ty=Tensor[(240, 2), float32] */;
  %42 = reshape(%41, newshape=[10, 8, 6]) /* ty=Tensor[(10, 8, 6), float32] */;
  %43 = @func_622(%42) /* ty=(Tensor[(10, 8, 6), int16],) */;
  %44 = %40.2;
  %45 = %43.0;
  %46 = @func_1488() /* ty=Tensor[(14, 14, 8), float32] */;
  (%44, %45, %var_4504, %46)
}

def @func_6254() -> (Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), float32]) {
  %52 = fn () -> (Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), float32]) {
    %47 = @func_1902() /* ty=(Tensor[(14, 14, 8), int8], Tensor[(14, 14, 8), float32]) */;
    %48 = %47.1;
    %49 = cast(%48, dtype="float32") /* ty=Tensor[(14, 14, 8), float32] */;
    %50 = reshape(%49, newshape=[14, 14, 8]) /* ty=Tensor[(14, 14, 8), float32] */;
    %51 = @func_4751(%50) /* ty=Tensor[(14, 14, 8), float32] */;
    (%48, %51)
  };
  %52() /* ty=(Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), float32]) */
}

def @func_8266() -> Tensor[(16, 15, 7), float64] {
  @func_8264() /* ty=Tensor[(16, 15, 7), float64] */
}

def @func_1295(%var_1292: Tensor[(1485), float64], %var_1293: Tensor[(56), float64], %var_1294: Tensor[(15, 9, 11), bool]) -> (Tensor[(13, 12, 1), bool], Tensor[(1485), float64], Tensor[(56), float64], Tensor[(11, 6, 13), float32], Tensor[(858), float32], Tensor[(15, 9, 11), uint16], Tensor[(15, 9, 11), uint32], Tensor[(10, 8, 6), int16], Tensor[(480), float32], Tensor[(429, 2), float32]) {
  %86 = fn (%var_1251: Tensor[(1485), float64], %var_1252: Tensor[(56), float64], %var_1264: Tensor[(15, 9, 11), bool]) -> (Tensor[(13, 12, 1), bool], Tensor[(1485), float64], Tensor[(56), float64], Tensor[(11, 6, 13), float32], Tensor[(858), float32], Tensor[(15, 9, 11), uint16], Tensor[(15, 9, 11), uint32], Tensor[(10, 8, 6), int16], Tensor[(480), float32], Tensor[(429, 2), float32]) {
    %53 = cast(meta[relay.Constant][2] /* ty=uint64 */, dtype="bool") /* ty=bool */;
    %54 = cast(meta[relay.Constant][3] /* ty=Tensor[(13, 12, 1), uint64] */, dtype="bool") /* ty=Tensor[(13, 12, 1), bool] */;
    %55 = cast(meta[relay.Constant][4] /* ty=Tensor[(858), float32] */, dtype="float32") /* ty=Tensor[(858), float32] */;
    %56 = reshape(%55, newshape=[11, 6, 13]) /* ty=Tensor[(11, 6, 13), float32] */;
    %57 = @func_27(%56) /* ty=(Tensor[(11, 6, 13), float32],) */;
    %58 = cast(%var_1251, dtype="float64") /* ty=Tensor[(1485), float64] */;
    %59 = cast(%var_1251, dtype="float64") /* ty=Tensor[(1485), float64] */;
    %60 = cast(%var_1252, dtype="float64") /* ty=Tensor[(56), float64] */;
    %61 = reshape(%58, newshape=[15, 9, 11]) /* ty=Tensor[(15, 9, 11), float64] */;
    %62 = reshape(%59, newshape=[15, 9, 11]) /* ty=Tensor[(15, 9, 11), float64] */;
    %63 = reshape(%60, newshape=[56]) /* ty=Tensor[(56), float64] */;
    %64 = @func_380(%61, %62, %63) /* ty=(Tensor[(429, 2), float32], Tensor[(56), float64], Tensor[(11, 6, 13), float32], Tensor[(15, 9, 11), bool], Tensor[(11, 6, 13), float32], Tensor[(11, 6, 13), float32], Tensor[(11, 6, 13), float32]) */;
    %65 = %64.3;
    %66 = cast(%var_1264, dtype="uint16") /* ty=Tensor[(15, 9, 11), uint16] */;
    %67 = shape_of(%65, dtype="int32") /* ty=Tensor[(3), int32] */;
    %68 = cast(%65, dtype="uint16") /* ty=Tensor[(15, 9, 11), uint16] */;
    %69 = dyn.reshape(%66, %67, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %70 = cast(%var_1264, dtype="uint32") /* ty=Tensor[(15, 9, 11), uint32] */;
    %71 = shape_of(%65, dtype="int32") /* ty=Tensor[(3), int32] */;
    %72 = cast(%65, dtype="uint32") /* ty=Tensor[(15, 9, 11), uint32] */;
    %73 = dyn.reshape(%70, %71, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %74 = cast(meta[relay.Constant][5] /* ty=Tensor[(480), float32] */, dtype="float32") /* ty=Tensor[(480), float32] */;
    %75 = reshape(%74, newshape=[10, 8, 6]) /* ty=Tensor[(10, 8, 6), float32] */;
    %76 = @func_622(%75) /* ty=(Tensor[(10, 8, 6), int16],) */;
    %77 = cast(%var_1252, dtype="float64") /* ty=Tensor[(56), float64] */;
    %78 = reshape(%77, newshape=[2, 7, 4]) /* ty=Tensor[(2, 7, 4), float64] */;
    %79 = @func_284(%78) /* ty=(Tensor[(2, 7, 4), float64], Tensor[(11, 6, 13), float32], Tensor[(429, 2), float32], Tensor[(11, 6, 13), float32]) */;
    %80 = greater(%53, %54) /* ty=Tensor[(13, 12, 1), bool] */;
    %81 = %57.0;
    %82 = bitwise_xor(%68, %69) /* ty=Tensor[(15, 9, 11), uint16] */;
    %83 = maximum(%72, %73) /* ty=Tensor[(15, 9, 11), uint32] */;
    %84 = %76.0;
    %85 = %79.2;
    (%80, %var_1251, %var_1252, %81, meta[relay.Constant][4] /* ty=Tensor[(858), float32] */, %82, %83, %84, meta[relay.Constant][5] /* ty=Tensor[(480), float32] */, %85)
  };
  %86(%var_1292, %var_1293, %var_1294) /* ty=(Tensor[(13, 12, 1), bool], Tensor[(1485), float64], Tensor[(56), float64], Tensor[(11, 6, 13), float32], Tensor[(858), float32], Tensor[(15, 9, 11), uint16], Tensor[(15, 9, 11), uint32], Tensor[(10, 8, 6), int16], Tensor[(480), float32], Tensor[(429, 2), float32]) */
}

def @func_8371() -> (Tensor[(14, 14, 8), float32],) {
  %87 = @func_7481() /* ty=(Tensor[(14, 14, 8), float32], Tensor[(2, 7, 4), float64]) */;
  %88 = %87.0;
  (%88,)
}

def @func_7739(%var_7735: Tensor[(14, 6, 4), uint32], %var_7736: Tensor[(14, 6, 4), uint32], %var_7737: Tensor[(1568), float32], %var_7738: Tensor[(2, 208), int16]) -> (Tensor[(8, 13, 4), int64], Tensor[(1568), float32], Tensor[(144), float32], Tensor[(2, 208), int16], Tensor[(14, 6, 4), bool]) {
  %109 = fn (%var_7710: Tensor[(14, 6, 4), uint32], %var_7711: Tensor[(14, 6, 4), uint32], %var_7721: Tensor[(1568), float32], %var_7723: Tensor[(2, 208), int16]) -> (Tensor[(8, 13, 4), int64], Tensor[(1568), float32], Tensor[(144), float32], Tensor[(2, 208), int16], Tensor[(14, 6, 4), bool]) {
    %89 = cast(%var_7721, dtype="float32") /* ty=Tensor[(1568), float32] */;
    %90 = cast(meta[relay.Constant][6] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
    %91 = cast(%var_7723, dtype="int16") /* ty=Tensor[(2, 208), int16] */;
    %92 = reshape(%89, newshape=[14, 14, 8]) /* ty=Tensor[(14, 14, 8), float32] */;
    %93 = reshape(%90, newshape=[1, 144]) /* ty=Tensor[(1, 144), float32] */;
    %94 = reshape(%91, newshape=[416]) /* ty=Tensor[(416), int16] */;
    %95 = @func_3611(%92, %93, %94) /* ty=(Tensor[(14, 14, 8), bool], Tensor[(8, 13, 4), int64], Tensor[(1, 144), float32], Tensor[(416), int16]) */;
    %96 = cast(%var_7710, dtype="float32") /* ty=Tensor[(14, 6, 4), float32] */;
    %97 = sqrt(%96) /* ty=Tensor[(14, 6, 4), float32] */;
    %98 = cast(%var_7711, dtype="uint32") /* ty=Tensor[(14, 6, 4), uint32] */;
    %99 = shape_of(%var_7710, dtype="int32") /* ty=Tensor[(3), int32] */;
    %100 = cast(%var_7710, dtype="uint32") /* ty=Tensor[(14, 6, 4), uint32] */;
    %101 = dyn.reshape(%98, %99, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %102 = multiply(%100, %101) /* ty=Tensor[(14, 6, 4), uint32] */;
    %103 = cast(%102, dtype="bool") /* ty=Tensor[(14, 6, 4), bool] */;
    %104 = shape_of(%97, dtype="int32") /* ty=Tensor[(3), int32] */;
    %105 = cast(%97, dtype="bool") /* ty=Tensor[(14, 6, 4), bool] */;
    %106 = dyn.reshape(%103, %104, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %107 = %95.1;
    %108 = less(%105, %106) /* ty=Tensor[(14, 6, 4), bool] */;
    (%107, %var_7721, meta[relay.Constant][6] /* ty=Tensor[(144), float32] */, %var_7723, %108)
  };
  %109(%var_7735, %var_7736, %var_7737, %var_7738) /* ty=(Tensor[(8, 13, 4), int64], Tensor[(1568), float32], Tensor[(144), float32], Tensor[(2, 208), int16], Tensor[(14, 6, 4), bool]) */
}

def @func_8795() -> (Tensor[(14, 14, 8), float64],) {
  %112 = fn () -> (Tensor[(14, 14, 8), float64],) {
    %110 = @func_7918() /* ty=(Tensor[(14, 14, 8), float64],) */;
    %111 = %110.0;
    (%111,)
  };
  %112() /* ty=(Tensor[(14, 14, 8), float64],) */
}

def @func_8408() -> (Tensor[(1568), float32],) {
  %115 = fn () -> (Tensor[(1568), float32],) {
    %113 = @func_4845() /* ty=(Tensor[(7, 10, 12), float32], Tensor[(14, 14, 8), bool], Tensor[(1568), float32], Tensor[(144), float32], Tensor[(416), int16], Tensor[(11, 6, 13), float32], Tensor[(56), float64]) */;
    %114 = %113.2;
    (%114,)
  };
  %115() /* ty=(Tensor[(1568), float32],) */
}

def @func_6665(%var_6663: Tensor[(780), bool]) -> (Tensor[(14, 14, 8), float64], Tensor[(14, 14, 8), float32], Tensor[(1430), float32], Tensor[(15, 13, 4), bool], Tensor[(780), bool]) {
  @func_6662(%var_6663) /* ty=(Tensor[(14, 14, 8), float64], Tensor[(14, 14, 8), float32], Tensor[(1430), float32], Tensor[(15, 13, 4), bool], Tensor[(780), bool]) */
}

def @func_4147() -> (Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), float64], Tensor[(14, 14, 8), int8], Tensor[(2, 7, 4), uint8]) {
  %116 = @func_1932() /* ty=(Tensor[(14, 14, 8), float64],) */;
  %117 = @func_2249() /* ty=(Tensor[(2, 7, 4), float64],) */;
  %118 = %117.0;
  %119 = cast(%118, dtype="float64") /* ty=Tensor[(2, 7, 4), float64] */;
  %120 = acosh(%119) /* ty=Tensor[(2, 7, 4), float64] */;
  %121 = cast(%120, dtype="float32") /* ty=Tensor[(2, 7, 4), float32] */;
  %122 = asin(%121) /* ty=Tensor[(2, 7, 4), float32] */;
  %123 = cast(%120, dtype="uint8") /* ty=Tensor[(2, 7, 4), uint8] */;
  %124 = shape_of(%122, dtype="int32") /* ty=Tensor[(3), int32] */;
  %125 = cast(%122, dtype="uint8") /* ty=Tensor[(2, 7, 4), uint8] */;
  %126 = dyn.reshape(%123, %124, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %127 = @func_1505() /* ty=Tensor[(14, 14, 8), float32] */;
  %128 = %116.0;
  %129 = @func_2135() /* ty=Tensor[(14, 14, 8), int8] */;
  %130 = multiply(%125, %126) /* ty=Tensor[(2, 7, 4), uint8] */;
  (%127, %128, %129, %130)
}

def @func_735(%var_720: Tensor[(8, 13, 4), int16], %var_721: Tensor[(8, 13, 4), int16]) -> (Tensor[(8, 13, 4), int16],) {
  %131 = cast(%var_721, dtype="int16") /* ty=Tensor[(8, 13, 4), int16] */;
  %132 = shape_of(%var_720, dtype="int32") /* ty=Tensor[(3), int32] */;
  %133 = cast(%var_720, dtype="int16") /* ty=Tensor[(8, 13, 4), int16] */;
  %134 = dyn.reshape(%131, %132, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %135 = right_shift(%133, %134) /* ty=Tensor[(8, 13, 4), int16] */;
  (%135,)
}

def @func_7282() -> (Tensor[(8, 18), float64], Tensor[(2, 7, 4), float32]) {
  %142 = fn () -> (Tensor[(8, 18), float64], Tensor[(2, 7, 4), float32]) {
    %136 = @func_6901() /* ty=(Tensor[(2, 7, 4), float32], Tensor[(6, 2, 12), float64], Tensor[(8, 18), float64]) */;
    %137 = %136.2;
    %138 = cast(%137, dtype="float64") /* ty=Tensor[(8, 18), float64] */;
    %139 = @func_6901() /* ty=(Tensor[(2, 7, 4), float32], Tensor[(6, 2, 12), float64], Tensor[(8, 18), float64]) */;
    %140 = asinh(%138) /* ty=Tensor[(8, 18), float64] */;
    %141 = %139.0;
    (%140, %141)
  };
  %142() /* ty=(Tensor[(8, 18), float64], Tensor[(2, 7, 4), float32]) */
}

def @func_5099() -> (Tensor[(16, 15, 7), float64],) {
  %143 = cast(meta[relay.Constant][7] /* ty=Tensor[(16, 15, 7), float64] */, dtype="float64") /* ty=Tensor[(16, 15, 7), float64] */;
  %144 = asinh(%143) /* ty=Tensor[(16, 15, 7), float64] */;
  (%144,)
}

def @func_3027(%var_3026: Tensor[(2, 7, 4), float64]) -> Tensor[(2, 7, 4), float64] {
  %151 = fn (%var_3017: Tensor[(2, 7, 4), float64]) -> Tensor[(2, 7, 4), float64] {
    %145 = @func_2463() /* ty=(Tensor[(2, 7, 4), float64], Tensor[(10, 8, 11), float64], Tensor[(2, 7, 4), float64]) */;
    %146 = %145.0;
    %147 = cast(%var_3017, dtype="float64") /* ty=Tensor[(2, 7, 4), float64] */;
    %148 = shape_of(%146, dtype="int32") /* ty=Tensor[(3), int32] */;
    %149 = cast(%146, dtype="float64") /* ty=Tensor[(2, 7, 4), float64] */;
    %150 = dyn.reshape(%147, %148, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    divide(%149, %150) /* ty=Tensor[(2, 7, 4), float64] */
  };
  %151(%var_3026) /* ty=Tensor[(2, 7, 4), float64] */
}

def @func_4049(%var_4042: Tensor[(480), float32]) -> (Tensor[(144), float32], Tensor[(14, 14, 8), bool], Tensor[(10, 8, 6), int16], Tensor[(480), float32]) {
  %152 = @func_2135() /* ty=Tensor[(14, 14, 8), int8] */;
  %153 = cast(meta[relay.Constant][8] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %154 = reshape(%153, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %155 = @func_2101(%154) /* ty=(Tensor[(14, 14, 8), float32], Tensor[(8, 2, 9), float32], Tensor[(144), float32]) */;
  %156 = %155.0;
  %157 = cast(%156, dtype="bool") /* ty=Tensor[(14, 14, 8), bool] */;
  %158 = shape_of(%152, dtype="int32") /* ty=Tensor[(3), int32] */;
  %159 = cast(%152, dtype="bool") /* ty=Tensor[(14, 14, 8), bool] */;
  %160 = dyn.reshape(%157, %158, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %161 = cast(%var_4042, dtype="float32") /* ty=Tensor[(480), float32] */;
  %162 = reshape(%161, newshape=[10, 8, 6]) /* ty=Tensor[(10, 8, 6), float32] */;
  %163 = @func_622(%162) /* ty=(Tensor[(10, 8, 6), int16],) */;
  %164 = greater(%159, %160) /* ty=Tensor[(14, 14, 8), bool] */;
  %165 = %163.0;
  (meta[relay.Constant][8] /* ty=Tensor[(144), float32] */, %164, %165, %var_4042)
}

def @func_4413(%var_4412: Tensor[(11, 130), float32]) -> (Tensor[(14, 14, 8), float64], Tensor[(14, 14, 8), int8], Tensor[(2, 7, 4), float32], Tensor[(11, 130), float32], Tensor[(14, 14, 8), float32], Tensor[(8, 13, 4), int16], Tensor[(416), int16]) {
  %182 = fn (%var_4404: Tensor[(11, 130), float32]) -> (Tensor[(14, 14, 8), float64], Tensor[(14, 14, 8), int8], Tensor[(2, 7, 4), float32], Tensor[(11, 130), float32], Tensor[(14, 14, 8), float32], Tensor[(8, 13, 4), int16], Tensor[(416), int16]) {
    %166 = @func_1902() /* ty=(Tensor[(14, 14, 8), int8], Tensor[(14, 14, 8), float32]) */;
    %167 = %166.1;
    %168 = cast(%167, dtype="float64") /* ty=Tensor[(14, 14, 8), float64] */;
    %169 = cast(%var_4404, dtype="float32") /* ty=Tensor[(11, 130), float32] */;
    %170 = reshape(%169, newshape=[1430, 1]) /* ty=Tensor[(1430, 1), float32] */;
    %171 = @func_3656(%170) /* ty=(Tensor[(2, 7, 4), float32], Tensor[(14, 14, 8), float32], Tensor[(1430, 1), float32]) */;
    %172 = cast(meta[relay.Constant][9] /* ty=Tensor[(416), int16] */, dtype="int16") /* ty=Tensor[(416), int16] */;
    %173 = cast(meta[relay.Constant][9] /* ty=Tensor[(416), int16] */, dtype="int16") /* ty=Tensor[(416), int16] */;
    %174 = reshape(%172, newshape=[8, 13, 4]) /* ty=Tensor[(8, 13, 4), int16] */;
    %175 = reshape(%173, newshape=[8, 13, 4]) /* ty=Tensor[(8, 13, 4), int16] */;
    %176 = @func_735(%174, %175) /* ty=(Tensor[(8, 13, 4), int16],) */;
    %177 = exp(%168) /* ty=Tensor[(14, 14, 8), float64] */;
    %178 = @func_2135() /* ty=Tensor[(14, 14, 8), int8] */;
    %179 = %171.0;
    %180 = @func_1505() /* ty=Tensor[(14, 14, 8), float32] */;
    %181 = %176.0;
    (%177, %178, %179, %var_4404, %180, %181, meta[relay.Constant][9] /* ty=Tensor[(416), int16] */)
  };
  %182(%var_4412) /* ty=(Tensor[(14, 14, 8), float64], Tensor[(14, 14, 8), int8], Tensor[(2, 7, 4), float32], Tensor[(11, 130), float32], Tensor[(14, 14, 8), float32], Tensor[(8, 13, 4), int16], Tensor[(416), int16]) */
}

def @func_7939() -> (Tensor[(8, 2, 9), float64], Tensor[(14, 14, 8), float64]) {
  %183 = @func_7323() /* ty=(Tensor[(14, 14, 8), float64],) */;
  %184 = @func_6617() /* ty=Tensor[(8, 2, 9), float64] */;
  %185 = %183.0;
  (%184, %185)
}

def @func_7896(%var_7894: Tensor[(858, 15), float32]) -> Tensor[(858, 15), bool] {
  @func_7893(%var_7894) /* ty=Tensor[(858, 15), bool] */
}

def @func_5993(%var_5991: float64, %var_5992: Tensor[(9, 6, 2), float64]) -> (Tensor[(9, 6, 2), float32], Tensor[(416), int16], Tensor[(1430), float32], Tensor[(14, 14, 8), int8]) {
  @func_5989(%var_5991, %var_5992) /* ty=(Tensor[(9, 6, 2), float32], Tensor[(416), int16], Tensor[(1430), float32], Tensor[(14, 14, 8), int8]) */
}

def @func_287(%var_285: Tensor[(2, 7, 4), float64]) -> (Tensor[(2, 7, 4), float64], Tensor[(11, 6, 13), float32], Tensor[(429, 2), float32], Tensor[(11, 6, 13), float32]) {
  @func_284(%var_285) /* ty=(Tensor[(2, 7, 4), float64], Tensor[(11, 6, 13), float32], Tensor[(429, 2), float32], Tensor[(11, 6, 13), float32]) */
}

def @func_3658(%var_3657: Tensor[(1430, 1), float32]) -> (Tensor[(2, 7, 4), float32], Tensor[(14, 14, 8), float32], Tensor[(1430, 1), float32]) {
  %192 = fn (%var_3626: Tensor[(1430, 1), float32]) -> (Tensor[(2, 7, 4), float32], Tensor[(14, 14, 8), float32], Tensor[(1430, 1), float32]) {
    %186 = @func_3224() /* ty=(Tensor[(2, 7, 4), float32],) */;
    %187 = cast(%var_3626, dtype="float32") /* ty=Tensor[(1430, 1), float32] */;
    %188 = reshape(%187, newshape=[1, 1430]) /* ty=Tensor[(1, 1430), float32] */;
    %189 = @func_2544(%188) /* ty=(Tensor[(14, 14, 8), float32], Tensor[(11, 10, 13), float32], Tensor[(1, 1430), float32]) */;
    %190 = %186.0;
    %191 = %189.0;
    (%190, %191, %var_3626)
  };
  %192(%var_3657) /* ty=(Tensor[(2, 7, 4), float32], Tensor[(14, 14, 8), float32], Tensor[(1430, 1), float32]) */
}

def @func_3383() -> Tensor[(14, 14, 8), float64] {
  %194 = fn () -> Tensor[(14, 14, 8), float64] {
    %193 = @func_2914() /* ty=(Tensor[(14, 14, 8), float64],) */;
    %193.0
  };
  %194() /* ty=Tensor[(14, 14, 8), float64] */
}

def @func_2960(%var_2958: Tensor[(15, 13, 4), bool], %var_2959: Tensor[(15, 13, 4), bool]) -> (Tensor[(15, 13, 4), bool],) {
  %200 = fn (%var_2944: Tensor[(15, 13, 4), bool], %var_2945: Tensor[(15, 13, 4), bool]) -> (Tensor[(15, 13, 4), bool],) {
    %195 = cast(%var_2945, dtype="bool") /* ty=Tensor[(15, 13, 4), bool] */;
    %196 = shape_of(%var_2944, dtype="int32") /* ty=Tensor[(3), int32] */;
    %197 = cast(%var_2944, dtype="bool") /* ty=Tensor[(15, 13, 4), bool] */;
    %198 = dyn.reshape(%195, %196, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %199 = logical_and(%197, %198) /* ty=Tensor[(15, 13, 4), bool] */;
    (%199,)
  };
  %200(%var_2958, %var_2959) /* ty=(Tensor[(15, 13, 4), bool],) */
}

def @func_3760(%var_3758: Tensor[(16, 26), int16]) -> (Tensor[(14, 14, 8), float32], Tensor[(1, 144), float32], Tensor[(144), float32], Tensor[(16, 26), int16]) {
  @func_3757(%var_3758) /* ty=(Tensor[(14, 14, 8), float32], Tensor[(1, 144), float32], Tensor[(144), float32], Tensor[(16, 26), int16]) */
}

def @func_1507() -> Tensor[(14, 14, 8), float32] {
  @func_1505() /* ty=Tensor[(14, 14, 8), float32] */
}

def @func_4256() -> (Tensor[(14, 14, 8), float64], Tensor[(416), int16], Tensor[(144), float32], Tensor[(2, 208), int16]) {
  %209 = fn () -> (Tensor[(14, 14, 8), float64], Tensor[(416), int16], Tensor[(144), float32], Tensor[(2, 208), int16]) {
    %201 = @func_1932() /* ty=(Tensor[(14, 14, 8), float64],) */;
    %202 = cast(meta[relay.Constant][10] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
    %203 = cast(meta[relay.Constant][11] /* ty=Tensor[(2, 208), int16] */, dtype="int16") /* ty=Tensor[(2, 208), int16] */;
    %204 = reshape(%202, newshape=[144]) /* ty=Tensor[(144), float32] */;
    %205 = reshape(%203, newshape=[416]) /* ty=Tensor[(416), int16] */;
    %206 = @func_2627(%204, %205) /* ty=(Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), float64], Tensor[(144), float32], Tensor[(144), float32], Tensor[(416), int16]) */;
    %207 = %201.0;
    %208 = %206.4;
    (%207, %208, meta[relay.Constant][10] /* ty=Tensor[(144), float32] */, meta[relay.Constant][11] /* ty=Tensor[(2, 208), int16] */)
  };
  %209() /* ty=(Tensor[(14, 14, 8), float64], Tensor[(416), int16], Tensor[(144), float32], Tensor[(2, 208), int16]) */
}

def @func_5696() -> (Tensor[(2, 7, 4), float64], Tensor[(14, 14, 8), float32]) {
  %210 = @func_2171() /* ty=(Tensor[(14, 14, 8), float32], Tensor[(2, 7, 4), float64], Tensor[(56), float64]) */;
  %211 = %210.1;
  %212 = @func_5423() /* ty=Tensor[(14, 14, 8), float32] */;
  (%211, %212)
}

def @func_7918() -> (Tensor[(14, 14, 8), float64],) {
  %213 = @func_5449() /* ty=(Tensor[(14, 14, 8), float64],) */;
  %214 = %213.0;
  (%214,)
}

def @func_8116(%var_8114: Tensor[(1755), float32], %var_8115: Tensor[(2160), float32]) -> (Tensor[(12, 12, 15), float32], Tensor[(1755), float32], Tensor[(2160), float32], Tensor[(16, 15, 7), bool]) {
  %232 = fn (%var_8083: Tensor[(1755), float32], %var_8084: Tensor[(2160), float32]) -> (Tensor[(12, 12, 15), float32], Tensor[(1755), float32], Tensor[(2160), float32], Tensor[(16, 15, 7), bool]) {
    %215 = cast(%var_8083, dtype="float32") /* ty=Tensor[(1755), float32] */;
    %216 = cast(%var_8084, dtype="float32") /* ty=Tensor[(2160), float32] */;
    %217 = reshape(%215, newshape=[13, 15, 9]) /* ty=Tensor[(13, 15, 9), float32] */;
    %218 = reshape(%216, newshape=[2160]) /* ty=Tensor[(2160), float32] */;
    %219 = @func_3001(%217, %218) /* ty=(Tensor[(13, 15, 9), float32], Tensor[(10, 8, 6), int16], Tensor[(1485), float64], Tensor[(14, 4), float64], Tensor[(12, 12, 15), float32], Tensor[(2160), float32]) */;
    %220 = @func_5099() /* ty=(Tensor[(16, 15, 7), float64],) */;
    %221 = %220.0;
    %222 = cast(%221, dtype="float64") /* ty=Tensor[(16, 15, 7), float64] */;
    %223 = log2(%222) /* ty=Tensor[(16, 15, 7), float64] */;
    %224 = cast(%223, dtype="float64") /* ty=Tensor[(16, 15, 7), float64] */;
    %225 = asin(%224) /* ty=Tensor[(16, 15, 7), float64] */;
    %226 = cast(%223, dtype="bool") /* ty=Tensor[(16, 15, 7), bool] */;
    %227 = shape_of(%225, dtype="int32") /* ty=Tensor[(3), int32] */;
    %228 = cast(%225, dtype="bool") /* ty=Tensor[(16, 15, 7), bool] */;
    %229 = dyn.reshape(%226, %227, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %230 = %219.4;
    %231 = logical_or(%228, %229) /* ty=Tensor[(16, 15, 7), bool] */;
    (%230, %var_8083, %var_8084, %231)
  };
  %232(%var_8114, %var_8115) /* ty=(Tensor[(12, 12, 15), float32], Tensor[(1755), float32], Tensor[(2160), float32], Tensor[(16, 15, 7), bool]) */
}

def @func_4753(%var_4752: Tensor[(14, 14, 8), float32]) -> Tensor[(14, 14, 8), float32] {
  %238 = fn (%var_4743: Tensor[(14, 14, 8), float32]) -> Tensor[(14, 14, 8), float32] {
    %233 = @func_1488() /* ty=Tensor[(14, 14, 8), float32] */;
    %234 = cast(%var_4743, dtype="float32") /* ty=Tensor[(14, 14, 8), float32] */;
    %235 = shape_of(%233, dtype="int32") /* ty=Tensor[(3), int32] */;
    %236 = cast(%233, dtype="float32") /* ty=Tensor[(14, 14, 8), float32] */;
    %237 = dyn.reshape(%234, %235, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    mod(%236, %237) /* ty=Tensor[(14, 14, 8), float32] */
  };
  %238(%var_4752) /* ty=Tensor[(14, 14, 8), float32] */
}

def @func_6912() -> (Tensor[(2, 7, 4), float32],) {
  %241 = fn () -> (Tensor[(2, 7, 4), float32],) {
    %239 = @func_3224() /* ty=(Tensor[(2, 7, 4), float32],) */;
    %240 = %239.0;
    (%240,)
  };
  %241() /* ty=(Tensor[(2, 7, 4), float32],) */
}

def @func_2896(%var_2895: Tensor[(12, 12, 15), float32]) -> (Tensor[(12, 12, 15), float32],) {
  %244 = fn (%var_2890: Tensor[(12, 12, 15), float32]) -> (Tensor[(12, 12, 15), float32],) {
    %242 = cast(%var_2890, dtype="float32") /* ty=Tensor[(12, 12, 15), float32] */;
    %243 = exp(%242) /* ty=Tensor[(12, 12, 15), float32] */;
    (%243,)
  };
  %244(%var_2895) /* ty=(Tensor[(12, 12, 15), float32],) */
}

def @func_6217(%var_6215: Tensor[(416), int16], %var_6216: Tensor[(70, 9), float32]) -> (Tensor[(14, 14, 8), float32], Tensor[(630), float32], Tensor[(416), int16], Tensor[(72, 2), float32], Tensor[(70, 9), float32]) {
  @func_6213(%var_6215, %var_6216) /* ty=(Tensor[(14, 14, 8), float32], Tensor[(630), float32], Tensor[(416), int16], Tensor[(72, 2), float32], Tensor[(70, 9), float32]) */
}

def @func_2325(%var_2324: Tensor[(416), int16]) -> (Tensor[(14, 14, 8), float32], Tensor[(10, 8, 11), float64], Tensor[(416), int16], Tensor[(8, 13, 4), float32]) {
  %257 = fn (%var_2311: Tensor[(416), int16]) -> (Tensor[(14, 14, 8), float32], Tensor[(10, 8, 11), float64], Tensor[(416), int16], Tensor[(8, 13, 4), float32]) {
    %245 = @func_2171() /* ty=(Tensor[(14, 14, 8), float32], Tensor[(2, 7, 4), float64], Tensor[(56), float64]) */;
    %246 = @func_2193() /* ty=(Tensor[(10, 8, 11), float64],) */;
    %247 = cast(%var_2311, dtype="int16") /* ty=Tensor[(416), int16] */;
    %248 = cast(%var_2311, dtype="int16") /* ty=Tensor[(416), int16] */;
    %249 = reshape(%247, newshape=[8, 13, 4]) /* ty=Tensor[(8, 13, 4), int16] */;
    %250 = reshape(%248, newshape=[8, 13, 4]) /* ty=Tensor[(8, 13, 4), int16] */;
    %251 = @func_735(%249, %250) /* ty=(Tensor[(8, 13, 4), int16],) */;
    %252 = %251.0;
    %253 = cast(%252, dtype="float32") /* ty=Tensor[(8, 13, 4), float32] */;
    %254 = %245.0;
    %255 = %246.0;
    %256 = log2(%253) /* ty=Tensor[(8, 13, 4), float32] */;
    (%254, %255, %var_2311, %256)
  };
  %257(%var_2324) /* ty=(Tensor[(14, 14, 8), float32], Tensor[(10, 8, 11), float64], Tensor[(416), int16], Tensor[(8, 13, 4), float32]) */
}

def @func_1392(%var_1390: Tensor[(8, 2, 9), float32]) -> (Tensor[(8, 2, 9), float32],) {
  @func_1389(%var_1390) /* ty=(Tensor[(8, 2, 9), float32],) */
}

def @main(%var_8839: Tensor[(16, 15, 7), float64]) -> Tensor[(16, 15, 7), uint16] {
  %258 = @func_5101() /* ty=(Tensor[(16, 15, 7), float64],) */;
  %259 = %258.0;
  %260 = cast(%var_8839, dtype="uint16") /* ty=Tensor[(16, 15, 7), uint16] */;
  %261 = shape_of(%259, dtype="int32") /* ty=Tensor[(3), int32] */;
  %262 = cast(%259, dtype="uint16") /* ty=Tensor[(16, 15, 7), uint16] */;
  %263 = dyn.reshape(%260, %261, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  bitwise_and(%262, %263) /* ty=Tensor[(16, 15, 7), uint16] */
}

def @func_8438() -> Tensor[(14, 14, 8), float32] {
  @func_8436() /* ty=Tensor[(14, 14, 8), float32] */
}

def @func_6055(%var_6042: Tensor[(416), int16]) -> (Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), uint32], Tensor[(8, 13, 4), int16], Tensor[(416), int16], Tensor[(429, 2), float32], Tensor[(56), float64]) {
  %264 = @func_1505() /* ty=Tensor[(14, 14, 8), float32] */;
  %265 = cast(%264, dtype="float32") /* ty=Tensor[(14, 14, 8), float32] */;
  %266 = reshape(%265, newshape=[14, 14, 8]) /* ty=Tensor[(14, 14, 8), float32] */;
  %267 = @func_1792(%266) /* ty=(Tensor[(14, 14, 8), uint32], Tensor[(14, 14, 8), float64]) */;
  %268 = cast(%var_6042, dtype="int16") /* ty=Tensor[(416), int16] */;
  %269 = cast(%var_6042, dtype="int16") /* ty=Tensor[(416), int16] */;
  %270 = reshape(%268, newshape=[8, 13, 4]) /* ty=Tensor[(8, 13, 4), int16] */;
  %271 = reshape(%269, newshape=[8, 13, 4]) /* ty=Tensor[(8, 13, 4), int16] */;
  %272 = @func_735(%270, %271) /* ty=(Tensor[(8, 13, 4), int16],) */;
  %273 = cast(meta[relay.Constant][12] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
  %274 = reshape(%273, newshape=[2, 7, 4]) /* ty=Tensor[(2, 7, 4), float64] */;
  %275 = @func_284(%274) /* ty=(Tensor[(2, 7, 4), float64], Tensor[(11, 6, 13), float32], Tensor[(429, 2), float32], Tensor[(11, 6, 13), float32]) */;
  %276 = %267.0;
  %277 = %272.0;
  %278 = %275.2;
  (%264, %276, %277, %var_6042, %278, meta[relay.Constant][12] /* ty=Tensor[(56), float64] */)
}

def @func_3525(%var_3510: Tensor[(4, 104), int16]) -> (Tensor[(14, 14, 8), int8], Tensor[(144), float32], Tensor[(4, 104), int16], Tensor[(2, 28), float64]) {
  %279 = @func_1902() /* ty=(Tensor[(14, 14, 8), int8], Tensor[(14, 14, 8), float32]) */;
  %280 = cast(%var_3510, dtype="int16") /* ty=Tensor[(4, 104), int16] */;
  %281 = reshape(%280, newshape=[416]) /* ty=Tensor[(416), int16] */;
  %282 = @func_2567(%281) /* ty=(Tensor[(14, 14, 8), float32], Tensor[(144), float32], Tensor[(144), float32], Tensor[(416), int16]) */;
  %283 = cast(%var_3510, dtype="int16") /* ty=Tensor[(4, 104), int16] */;
  %284 = reshape(%283, newshape=[416]) /* ty=Tensor[(416), int16] */;
  %285 = @func_1146(%284) /* ty=(Tensor[(15, 9, 11), bool], Tensor[(1485), float64], Tensor[(2, 28), float64], Tensor[(8, 13, 4), int16], Tensor[(416), int16], Tensor[(12, 10, 9), int16], Tensor[(11, 6, 13), float32], Tensor[(858), float32], Tensor[(11, 6, 13), float32], Tensor[(15, 9, 11), bool], Tensor[(8, 13, 4), int16]) */;
  %286 = %279.0;
  %287 = %282.1;
  %288 = %285.2;
  (%286, %287, %var_3510, %288)
}

def @func_6213(%var_6209: Tensor[(416), int16], %var_6211: Tensor[(70, 9), float32]) -> (Tensor[(14, 14, 8), float32], Tensor[(630), float32], Tensor[(416), int16], Tensor[(72, 2), float32], Tensor[(70, 9), float32]) {
  %289 = cast(%var_6209, dtype="int16") /* ty=Tensor[(416), int16] */;
  %290 = cast(meta[relay.Constant][13] /* ty=Tensor[(72, 2), float32] */, dtype="float32") /* ty=Tensor[(72, 2), float32] */;
  %291 = cast(%var_6211, dtype="float32") /* ty=Tensor[(70, 9), float32] */;
  %292 = reshape(%289, newshape=[8, 52]) /* ty=Tensor[(8, 52), int16] */;
  %293 = reshape(%290, newshape=[2, 72]) /* ty=Tensor[(2, 72), float32] */;
  %294 = reshape(%291, newshape=[630]) /* ty=Tensor[(630), float32] */;
  %295 = @func_5182(%292, %293, %294) /* ty=(Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), int8], Tensor[(8, 52), int16], Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), float64], Tensor[(72, 2), float32], Tensor[(2, 72), float32], Tensor[(15, 3, 14), bool], Tensor[(630), float32]) */;
  %296 = @func_1661() /* ty=Tensor[(14, 14, 8), float32] */;
  %297 = %295.8;
  (%296, %297, %var_6209, meta[relay.Constant][13] /* ty=Tensor[(72, 2), float32] */, %var_6211)
}

def @func_5245() -> (Tensor[(14, 14, 8), float64], Tensor[(2, 7, 4), float64], Tensor[(12, 12, 15), float32], Tensor[(180, 12), float32]) {
  @func_5243() /* ty=(Tensor[(14, 14, 8), float64], Tensor[(2, 7, 4), float64], Tensor[(12, 12, 15), float32], Tensor[(180, 12), float32]) */
}

def @func_8760() -> Tensor[(14, 14, 8), int8] {
  @func_8758() /* ty=Tensor[(14, 14, 8), int8] */
}

def @func_1389(%var_1374: Tensor[(8, 2, 9), float32]) -> (Tensor[(8, 2, 9), float32],) {
  %298 = cast(%var_1374, dtype="float32") /* ty=Tensor[(8, 2, 9), float32] */;
  %299 = asin(%298) /* ty=Tensor[(8, 2, 9), float32] */;
  (%299,)
}

def @func_3404(%var_3403: Tensor[(1, 1485), float64]) -> (Tensor[(2, 7, 4), float32], Tensor[(15, 9, 11), uint16], Tensor[(1, 1485), float64]) {
  %310 = fn (%var_3396: Tensor[(1, 1485), float64]) -> (Tensor[(2, 7, 4), float32], Tensor[(15, 9, 11), uint16], Tensor[(1, 1485), float64]) {
    %300 = @func_3224() /* ty=(Tensor[(2, 7, 4), float32],) */;
    %301 = cast(%var_3396, dtype="float64") /* ty=Tensor[(1, 1485), float64] */;
    %302 = %300.0;
    %303 = cast(%302, dtype="float64") /* ty=Tensor[(2, 7, 4), float64] */;
    %304 = cast(%var_3396, dtype="bool") /* ty=Tensor[(1, 1485), bool] */;
    %305 = reshape(%301, newshape=[1485]) /* ty=Tensor[(1485), float64] */;
    %306 = reshape(%303, newshape=[56]) /* ty=Tensor[(56), float64] */;
    %307 = reshape(%304, newshape=[15, 9, 11]) /* ty=Tensor[(15, 9, 11), bool] */;
    %308 = @func_1291(%305, %306, %307) /* ty=(Tensor[(13, 12, 1), bool], Tensor[(1485), float64], Tensor[(56), float64], Tensor[(11, 6, 13), float32], Tensor[(858), float32], Tensor[(15, 9, 11), uint16], Tensor[(15, 9, 11), uint32], Tensor[(10, 8, 6), int16], Tensor[(480), float32], Tensor[(429, 2), float32]) */;
    %309 = %308.5;
    (%302, %309, %var_3396)
  };
  %310(%var_3403) /* ty=(Tensor[(2, 7, 4), float32], Tensor[(15, 9, 11), uint16], Tensor[(1, 1485), float64]) */
}

def @func_6527(%var_6524: Tensor[(416), int16], %var_6525: Tensor[(12, 15, 8), float32], %var_6526: Tensor[(1568), float32]) -> (Tensor[(416), float32], Tensor[(12, 15, 8), uint8], Tensor[(24, 6), float32], Tensor[(1568), float32], Tensor[(40, 12), float32], Tensor[(416), uint64]) {
  @func_6522(%var_6524, %var_6525, %var_6526) /* ty=(Tensor[(416), float32], Tensor[(12, 15, 8), uint8], Tensor[(24, 6), float32], Tensor[(1568), float32], Tensor[(40, 12), float32], Tensor[(416), uint64]) */
}

def @func_7848(%var_7847: Tensor[(64), float64]) -> (Tensor[(2, 7, 4), float64], Tensor[(14, 14, 8), float64], Tensor[(8, 8, 11), float64], Tensor[(64), float64], Tensor[(352, 2), float64]) {
  %324 = fn (%var_7839: Tensor[(64), float64]) -> (Tensor[(2, 7, 4), float64], Tensor[(14, 14, 8), float64], Tensor[(8, 8, 11), float64], Tensor[(64), float64], Tensor[(352, 2), float64]) {
    %311 = @func_7673() /* ty=(Tensor[(2, 7, 4), float64],) */;
    %312 = @func_1848() /* ty=Tensor[(14, 14, 8), float32] */;
    %313 = cast(%312, dtype="float64") /* ty=Tensor[(14, 14, 8), float64] */;
    %314 = cast(%var_7839, dtype="float64") /* ty=Tensor[(64), float64] */;
    %315 = cast(meta[relay.Constant][14] /* ty=Tensor[(352, 2), float64] */, dtype="float64") /* ty=Tensor[(352, 2), float64] */;
    %316 = cast(%312, dtype="float32") /* ty=Tensor[(14, 14, 8), float32] */;
    %317 = reshape(%314, newshape=[8, 8, 1]) /* ty=Tensor[(8, 8, 1), float64] */;
    %318 = reshape(%315, newshape=[8, 8, 11]) /* ty=Tensor[(8, 8, 11), float64] */;
    %319 = reshape(%316, newshape=[1568]) /* ty=Tensor[(1568), float32] */;
    %320 = @func_6561(%317, %318, %319) /* ty=(Tensor[(8, 8, 11), float64], Tensor[(14, 14, 8), float32], Tensor[(1568), float32]) */;
    %321 = %311.0;
    %322 = atan(%313) /* ty=Tensor[(14, 14, 8), float64] */;
    %323 = %320.0;
    (%321, %322, %323, %var_7839, meta[relay.Constant][14] /* ty=Tensor[(352, 2), float64] */)
  };
  %324(%var_7847) /* ty=(Tensor[(2, 7, 4), float64], Tensor[(14, 14, 8), float64], Tensor[(8, 8, 11), float64], Tensor[(64), float64], Tensor[(352, 2), float64]) */
}

def @func_2103(%var_2102: Tensor[(144), float32]) -> (Tensor[(14, 14, 8), float32], Tensor[(8, 2, 9), float32], Tensor[(144), float32]) {
  %330 = fn (%var_2066: Tensor[(144), float32]) -> (Tensor[(14, 14, 8), float32], Tensor[(8, 2, 9), float32], Tensor[(144), float32]) {
    %325 = cast(%var_2066, dtype="float32") /* ty=Tensor[(144), float32] */;
    %326 = reshape(%325, newshape=[8, 2, 9]) /* ty=Tensor[(8, 2, 9), float32] */;
    %327 = @func_1389(%326) /* ty=(Tensor[(8, 2, 9), float32],) */;
    %328 = @func_1848() /* ty=Tensor[(14, 14, 8), float32] */;
    %329 = %327.0;
    (%328, %329, %var_2066)
  };
  %330(%var_2102) /* ty=(Tensor[(14, 14, 8), float32], Tensor[(8, 2, 9), float32], Tensor[(144), float32]) */
}

def @func_3208(%var_3160: Tensor[(3, 2, 9), float32]) -> (Tensor[(3, 2, 9), float32], Tensor[(2, 7, 4), float64]) {
  %331 = cast(meta[relay.Constant][15] /* ty=Tensor[(3, 1, 1), float32] */, dtype="float32") /* ty=Tensor[(3, 1, 1), float32] */;
  %332 = cast(%var_3160, dtype="float32") /* ty=Tensor[(3, 2, 9), float32] */;
  %333 = @func_2463() /* ty=(Tensor[(2, 7, 4), float64], Tensor[(10, 8, 11), float64], Tensor[(2, 7, 4), float64]) */;
  %334 = divide(%331, %332) /* ty=Tensor[(3, 2, 9), float32] */;
  %335 = %333.2;
  (%334, %335)
}

def @func_3528(%var_3526: Tensor[(4, 104), int16]) -> (Tensor[(14, 14, 8), int8], Tensor[(144), float32], Tensor[(4, 104), int16], Tensor[(2, 28), float64]) {
  @func_3525(%var_3526) /* ty=(Tensor[(14, 14, 8), int8], Tensor[(144), float32], Tensor[(4, 104), int16], Tensor[(2, 28), float64]) */
}

def @func_2546(%var_2545: Tensor[(1, 1430), float32]) -> (Tensor[(14, 14, 8), float32], Tensor[(11, 10, 13), float32], Tensor[(1, 1430), float32]) {
  %340 = fn (%var_2531: Tensor[(1, 1430), float32]) -> (Tensor[(14, 14, 8), float32], Tensor[(11, 10, 13), float32], Tensor[(1, 1430), float32]) {
    %336 = cast(%var_2531, dtype="float32") /* ty=Tensor[(1, 1430), float32] */;
    %337 = reshape(%336, newshape=[11, 10, 13]) /* ty=Tensor[(11, 10, 13), float32] */;
    %338 = @func_1661() /* ty=Tensor[(14, 14, 8), float32] */;
    %339 = @func_1304(%337) /* ty=Tensor[(11, 10, 13), float32] */;
    (%338, %339, %var_2531)
  };
  %340(%var_2545) /* ty=(Tensor[(14, 14, 8), float32], Tensor[(11, 10, 13), float32], Tensor[(1, 1430), float32]) */
}

def @func_7018() -> (Tensor[(2, 7, 4), float64],) {
  @func_7016() /* ty=(Tensor[(2, 7, 4), float64],) */
}

def @func_284(%var_258: Tensor[(2, 7, 4), float64]) -> (Tensor[(2, 7, 4), float64], Tensor[(11, 6, 13), float32], Tensor[(429, 2), float32], Tensor[(11, 6, 13), float32]) {
  %341 = cast(%var_258, dtype="float64") /* ty=Tensor[(2, 7, 4), float64] */;
  %342 = cast(meta[relay.Constant][16] /* ty=Tensor[(429, 2), float32] */, dtype="float32") /* ty=Tensor[(429, 2), float32] */;
  %343 = reshape(%342, newshape=[11, 6, 13]) /* ty=Tensor[(11, 6, 13), float32] */;
  %344 = @func_27(%343) /* ty=(Tensor[(11, 6, 13), float32],) */;
  %345 = cast(meta[relay.Constant][16] /* ty=Tensor[(429, 2), float32] */, dtype="float32") /* ty=Tensor[(429, 2), float32] */;
  %346 = reshape(%345, newshape=[11, 6, 13]) /* ty=Tensor[(11, 6, 13), float32] */;
  %347 = @func_27(%346) /* ty=(Tensor[(11, 6, 13), float32],) */;
  %348 = acos(%341) /* ty=Tensor[(2, 7, 4), float64] */;
  %349 = %344.0;
  %350 = %347.0;
  (%348, %349, meta[relay.Constant][16] /* ty=Tensor[(429, 2), float32] */, %350)
}

def @func_2916() -> (Tensor[(14, 14, 8), float64],) {
  @func_2914() /* ty=(Tensor[(14, 14, 8), float64],) */
}

def @func_3933(%var_3929: Tensor[(6, 2, 12), float64]) -> (Tensor[(6, 2, 12), float64],) {
  %351 = cast(%var_3929, dtype="float64") /* ty=Tensor[(6, 2, 12), float64] */;
  %352 = log10(%351) /* ty=Tensor[(6, 2, 12), float64] */;
  (%352,)
}

def @func_4302() -> Tensor[(8, 2, 9), float32] {
  %353 = @func_2861() /* ty=(Tensor[(14, 14, 8), int8], Tensor[(8, 2, 9), float32], Tensor[(144), float32], Tensor[(14, 14, 8), float64], Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), float32]) */;
  %353.1
}

def @func_5186(%var_5183: Tensor[(8, 52), int16], %var_5184: Tensor[(2, 72), float32], %var_5185: Tensor[(630), float32]) -> (Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), int8], Tensor[(8, 52), int16], Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), float64], Tensor[(72, 2), float32], Tensor[(2, 72), float32], Tensor[(15, 3, 14), bool], Tensor[(630), float32]) {
  %372 = fn (%var_5146: Tensor[(8, 52), int16], %var_5177: Tensor[(2, 72), float32], %var_5180: Tensor[(630), float32]) -> (Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), int8], Tensor[(8, 52), int16], Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), float64], Tensor[(72, 2), float32], Tensor[(2, 72), float32], Tensor[(15, 3, 14), bool], Tensor[(630), float32]) {
    %354 = @func_1902() /* ty=(Tensor[(14, 14, 8), int8], Tensor[(14, 14, 8), float32]) */;
    %355 = cast(%var_5146, dtype="int16") /* ty=Tensor[(8, 52), int16] */;
    %356 = reshape(%355, newshape=[4, 104]) /* ty=Tensor[(4, 104), int16] */;
    %357 = @func_3525(%356) /* ty=(Tensor[(14, 14, 8), int8], Tensor[(144), float32], Tensor[(4, 104), int16], Tensor[(2, 28), float64]) */;
    %358 = @func_1848() /* ty=Tensor[(14, 14, 8), float32] */;
    %359 = cast(%358, dtype="float32") /* ty=Tensor[(14, 14, 8), float32] */;
    %360 = cast(%var_5177, dtype="float32") /* ty=Tensor[(2, 72), float32] */;
    %361 = reshape(%360, newshape=[72, 2]) /* ty=Tensor[(72, 2), float32] */;
    %362 = @func_2793(%361) /* ty=(Tensor[(14, 14, 8), float32], Tensor[(144), float32], Tensor[(72, 2), float32], Tensor[(416), int16]) */;
    %363 = cast(%var_5180, dtype="float32") /* ty=Tensor[(630), float32] */;
    %364 = reshape(%363, newshape=[15, 3, 14]) /* ty=Tensor[(15, 3, 14), float32] */;
    %365 = @func_3476(%364) /* ty=(Tensor[(15, 3, 14), bool],) */;
    %366 = %354.1;
    %367 = %357.0;
    %368 = erf(%359) /* ty=Tensor[(14, 14, 8), float32] */;
    %369 = @func_4552() /* ty=Tensor[(14, 14, 8), float64] */;
    %370 = %362.2;
    %371 = %365.0;
    (%366, %367, %var_5146, %368, %369, %370, %var_5177, %371, %var_5180)
  };
  %372(%var_5183, %var_5184, %var_5185) /* ty=(Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), int8], Tensor[(8, 52), int16], Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), float64], Tensor[(72, 2), float32], Tensor[(2, 72), float32], Tensor[(15, 3, 14), bool], Tensor[(630), float32]) */
}

def @func_3919() -> (Tensor[(2, 7, 4), float64],) {
  @func_3917() /* ty=(Tensor[(2, 7, 4), float64],) */
}

def @func_4629() -> (Tensor[(14, 14, 8), float64],) {
  %373 = @func_4608() /* ty=Tensor[(14, 14, 8), float64] */;
  (%373,)
}

def @func_1146(%var_1088: Tensor[(416), int16]) -> (Tensor[(15, 9, 11), bool], Tensor[(1485), float64], Tensor[(2, 28), float64], Tensor[(8, 13, 4), int16], Tensor[(416), int16], Tensor[(12, 10, 9), int16], Tensor[(11, 6, 13), float32], Tensor[(858), float32], Tensor[(11, 6, 13), float32], Tensor[(15, 9, 11), bool], Tensor[(8, 13, 4), int16]) {
  %374 = cast(meta[relay.Constant][17] /* ty=Tensor[(1485), float64] */, dtype="float64") /* ty=Tensor[(1485), float64] */;
  %375 = cast(meta[relay.Constant][17] /* ty=Tensor[(1485), float64] */, dtype="float64") /* ty=Tensor[(1485), float64] */;
  %376 = cast(meta[relay.Constant][18] /* ty=Tensor[(2, 28), float64] */, dtype="float64") /* ty=Tensor[(2, 28), float64] */;
  %377 = reshape(%374, newshape=[15, 9, 11]) /* ty=Tensor[(15, 9, 11), float64] */;
  %378 = reshape(%375, newshape=[15, 9, 11]) /* ty=Tensor[(15, 9, 11), float64] */;
  %379 = reshape(%376, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %380 = @func_380(%377, %378, %379) /* ty=(Tensor[(429, 2), float32], Tensor[(56), float64], Tensor[(11, 6, 13), float32], Tensor[(15, 9, 11), bool], Tensor[(11, 6, 13), float32], Tensor[(11, 6, 13), float32], Tensor[(11, 6, 13), float32]) */;
  %381 = cast(%var_1088, dtype="int16") /* ty=Tensor[(416), int16] */;
  %382 = cast(%var_1088, dtype="int16") /* ty=Tensor[(416), int16] */;
  %383 = reshape(%381, newshape=[8, 13, 4]) /* ty=Tensor[(8, 13, 4), int16] */;
  %384 = reshape(%382, newshape=[8, 13, 4]) /* ty=Tensor[(8, 13, 4), int16] */;
  %385 = @func_735(%383, %384) /* ty=(Tensor[(8, 13, 4), int16],) */;
  %386 = cast(meta[relay.Constant][19] /* ty=Tensor[(12, 10, 9), float64] */, dtype="float64") /* ty=Tensor[(12, 10, 9), float64] */;
  %387 = sqrt(%386) /* ty=Tensor[(12, 10, 9), float64] */;
  %388 = cast(%387, dtype="float64") /* ty=Tensor[(12, 10, 9), float64] */;
  %389 = atan(%388) /* ty=Tensor[(12, 10, 9), float64] */;
  %390 = cast(%387, dtype="int16") /* ty=Tensor[(12, 10, 9), int16] */;
  %391 = shape_of(%389, dtype="int32") /* ty=Tensor[(3), int32] */;
  %392 = cast(%389, dtype="int16") /* ty=Tensor[(12, 10, 9), int16] */;
  %393 = dyn.reshape(%390, %391, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %394 = cast(meta[relay.Constant][20] /* ty=Tensor[(858), float32] */, dtype="float32") /* ty=Tensor[(858), float32] */;
  %395 = reshape(%394, newshape=[11, 6, 13]) /* ty=Tensor[(11, 6, 13), float32] */;
  %396 = @func_27(%395) /* ty=(Tensor[(11, 6, 13), float32],) */;
  %397 = %380.3;
  %398 = cast(%397, dtype="float64") /* ty=Tensor[(15, 9, 11), float64] */;
  %399 = cast(%397, dtype="float64") /* ty=Tensor[(15, 9, 11), float64] */;
  %400 = cast(meta[relay.Constant][18] /* ty=Tensor[(2, 28), float64] */, dtype="float64") /* ty=Tensor[(2, 28), float64] */;
  %401 = reshape(%398, newshape=[15, 9, 11]) /* ty=Tensor[(15, 9, 11), float64] */;
  %402 = reshape(%399, newshape=[15, 9, 11]) /* ty=Tensor[(15, 9, 11), float64] */;
  %403 = reshape(%400, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %404 = @func_380(%401, %402, %403) /* ty=(Tensor[(429, 2), float32], Tensor[(56), float64], Tensor[(11, 6, 13), float32], Tensor[(15, 9, 11), bool], Tensor[(11, 6, 13), float32], Tensor[(11, 6, 13), float32], Tensor[(11, 6, 13), float32]) */;
  %405 = cast(%397, dtype="float64") /* ty=Tensor[(15, 9, 11), float64] */;
  %406 = cast(meta[relay.Constant][17] /* ty=Tensor[(1485), float64] */, dtype="float64") /* ty=Tensor[(1485), float64] */;
  %407 = cast(meta[relay.Constant][18] /* ty=Tensor[(2, 28), float64] */, dtype="float64") /* ty=Tensor[(2, 28), float64] */;
  %408 = reshape(%405, newshape=[15, 9, 11]) /* ty=Tensor[(15, 9, 11), float64] */;
  %409 = reshape(%406, newshape=[15, 9, 11]) /* ty=Tensor[(15, 9, 11), float64] */;
  %410 = reshape(%407, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %411 = @func_380(%408, %409, %410) /* ty=(Tensor[(429, 2), float32], Tensor[(56), float64], Tensor[(11, 6, 13), float32], Tensor[(15, 9, 11), bool], Tensor[(11, 6, 13), float32], Tensor[(11, 6, 13), float32], Tensor[(11, 6, 13), float32]) */;
  %412 = cast(%var_1088, dtype="int16") /* ty=Tensor[(416), int16] */;
  %413 = %385.0;
  %414 = cast(%413, dtype="int16") /* ty=Tensor[(8, 13, 4), int16] */;
  %415 = reshape(%412, newshape=[8, 13, 4]) /* ty=Tensor[(8, 13, 4), int16] */;
  %416 = reshape(%414, newshape=[8, 13, 4]) /* ty=Tensor[(8, 13, 4), int16] */;
  %417 = @func_735(%415, %416) /* ty=(Tensor[(8, 13, 4), int16],) */;
  %418 = minimum(%392, %393) /* ty=Tensor[(12, 10, 9), int16] */;
  %419 = %396.0;
  %420 = %404.5;
  %421 = %411.3;
  %422 = %417.0;
  (%397, meta[relay.Constant][17] /* ty=Tensor[(1485), float64] */, meta[relay.Constant][18] /* ty=Tensor[(2, 28), float64] */, %413, %var_1088, %418, %419, meta[relay.Constant][20] /* ty=Tensor[(858), float32] */, %420, %421, %422)
}

def @func_8505(%var_8493: Tensor[(9, 16, 1), float64]) -> (Tensor[(9, 16, 1), float64], Tensor[(144), float32]) {
  %423 = cast(%var_8493, dtype="float64") /* ty=Tensor[(9, 16, 1), float64] */;
  %424 = cast(%var_8493, dtype="float32") /* ty=Tensor[(9, 16, 1), float32] */;
  %425 = reshape(%424, newshape=[72, 2]) /* ty=Tensor[(72, 2), float32] */;
  %426 = @func_2793(%425) /* ty=(Tensor[(14, 14, 8), float32], Tensor[(144), float32], Tensor[(72, 2), float32], Tensor[(416), int16]) */;
  %427 = log2(%423) /* ty=Tensor[(9, 16, 1), float64] */;
  %428 = %426.1;
  (%427, %428)
}

def @func_6619() -> Tensor[(8, 2, 9), float64] {
  @func_6617() /* ty=Tensor[(8, 2, 9), float64] */
}

def @func_6304() -> (Tensor[(14, 14, 8), float64],) {
  %430 = fn () -> (Tensor[(14, 14, 8), float64],) {
    %429 = @func_4552() /* ty=Tensor[(14, 14, 8), float64] */;
    (%429,)
  };
  %430() /* ty=(Tensor[(14, 14, 8), float64],) */
}

def @func_7674() -> (Tensor[(2, 7, 4), float64],) {
  %433 = fn () -> (Tensor[(2, 7, 4), float64],) {
    %431 = @func_2463() /* ty=(Tensor[(2, 7, 4), float64], Tensor[(10, 8, 11), float64], Tensor[(2, 7, 4), float64]) */;
    %432 = %431.2;
    (%432,)
  };
  %433() /* ty=(Tensor[(2, 7, 4), float64],) */
}

def @func_385(%var_382: Tensor[(15, 9, 11), float64], %var_383: Tensor[(15, 9, 11), float64], %var_384: Tensor[(56), float64]) -> (Tensor[(429, 2), float32], Tensor[(56), float64], Tensor[(11, 6, 13), float32], Tensor[(15, 9, 11), bool], Tensor[(11, 6, 13), float32], Tensor[(11, 6, 13), float32], Tensor[(11, 6, 13), float32]) {
  @func_380(%var_382, %var_383, %var_384) /* ty=(Tensor[(429, 2), float32], Tensor[(56), float64], Tensor[(11, 6, 13), float32], Tensor[(15, 9, 11), bool], Tensor[(11, 6, 13), float32], Tensor[(11, 6, 13), float32], Tensor[(11, 6, 13), float32]) */
}

def @func_6903() -> (Tensor[(2, 7, 4), float32], Tensor[(6, 2, 12), float64], Tensor[(8, 18), float64]) {
  @func_6901() /* ty=(Tensor[(2, 7, 4), float32], Tensor[(6, 2, 12), float64], Tensor[(8, 18), float64]) */
}

def @func_7247() -> Tensor[(14, 14, 8), float64] {
  %434 = @func_5394() /* ty=(Tensor[(14, 14, 8), float64], Tensor[(11, 6, 13), float32], Tensor[(858, 1), float32]) */;
  %434.0
}

def @func_7418() -> (Tensor[(2, 7, 4), float64],) {
  @func_7416() /* ty=(Tensor[(2, 7, 4), float64],) */
}

def @func_7616() -> (Tensor[(14, 14, 8), float64], Tensor[(14, 14, 8), float64], Tensor[(14, 14, 8), float64], Tensor[(11, 6, 13), float32], Tensor[(1485), float64], Tensor[(56), float64]) {
  %435 = @func_5332() /* ty=Tensor[(14, 14, 8), float32] */;
  %436 = cast(%435, dtype="float64") /* ty=Tensor[(14, 14, 8), float64] */;
  %437 = @func_6274() /* ty=(Tensor[(14, 14, 8), float64],) */;
  %438 = cast(meta[relay.Constant][21] /* ty=Tensor[(1485), float64] */, dtype="float64") /* ty=Tensor[(1485), float64] */;
  %439 = cast(meta[relay.Constant][21] /* ty=Tensor[(1485), float64] */, dtype="float64") /* ty=Tensor[(1485), float64] */;
  %440 = cast(meta[relay.Constant][22] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
  %441 = reshape(%438, newshape=[15, 9, 11]) /* ty=Tensor[(15, 9, 11), float64] */;
  %442 = reshape(%439, newshape=[15, 9, 11]) /* ty=Tensor[(15, 9, 11), float64] */;
  %443 = reshape(%440, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %444 = @func_380(%441, %442, %443) /* ty=(Tensor[(429, 2), float32], Tensor[(56), float64], Tensor[(11, 6, 13), float32], Tensor[(15, 9, 11), bool], Tensor[(11, 6, 13), float32], Tensor[(11, 6, 13), float32], Tensor[(11, 6, 13), float32]) */;
  %445 = sinh(%436) /* ty=Tensor[(14, 14, 8), float64] */;
  %446 = @func_4608() /* ty=Tensor[(14, 14, 8), float64] */;
  %447 = %437.0;
  %448 = %444.2;
  (%445, %446, %447, %448, meta[relay.Constant][21] /* ty=Tensor[(1485), float64] */, meta[relay.Constant][22] /* ty=Tensor[(56), float64] */)
}

def @func_2250() -> (Tensor[(2, 7, 4), float64],) {
  %451 = fn () -> (Tensor[(2, 7, 4), float64],) {
    %449 = @func_2171() /* ty=(Tensor[(14, 14, 8), float32], Tensor[(2, 7, 4), float64], Tensor[(56), float64]) */;
    %450 = %449.1;
    (%450,)
  };
  %451() /* ty=(Tensor[(2, 7, 4), float64],) */
}

def @func_1505() -> Tensor[(14, 14, 8), float32] {
  @func_1488() /* ty=Tensor[(14, 14, 8), float32] */
}

def @func_4609() -> Tensor[(14, 14, 8), float64] {
  %453 = fn () -> Tensor[(14, 14, 8), float64] {
    %452 = @func_1932() /* ty=(Tensor[(14, 14, 8), float64],) */;
    %452.0
  };
  %453() /* ty=Tensor[(14, 14, 8), float64] */
}

def @func_5396() -> (Tensor[(14, 14, 8), float64], Tensor[(11, 6, 13), float32], Tensor[(858, 1), float32]) {
  @func_5394() /* ty=(Tensor[(14, 14, 8), float64], Tensor[(11, 6, 13), float32], Tensor[(858, 1), float32]) */
}

def @func_8397() -> Tensor[(2, 7, 4), float32] {
  %454 = @func_6911() /* ty=(Tensor[(2, 7, 4), float32],) */;
  %454.0
}

def @func_2861() -> (Tensor[(14, 14, 8), int8], Tensor[(8, 2, 9), float32], Tensor[(144), float32], Tensor[(14, 14, 8), float64], Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), float32]) {
  %455 = @func_1902() /* ty=(Tensor[(14, 14, 8), int8], Tensor[(14, 14, 8), float32]) */;
  %456 = cast(meta[relay.Constant][23] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %457 = reshape(%456, newshape=[8, 2, 9]) /* ty=Tensor[(8, 2, 9), float32] */;
  %458 = @func_1389(%457) /* ty=(Tensor[(8, 2, 9), float32],) */;
  %459 = @func_1932() /* ty=(Tensor[(14, 14, 8), float64],) */;
  %460 = @func_1488() /* ty=Tensor[(14, 14, 8), float32] */;
  %461 = cast(%460, dtype="float32") /* ty=Tensor[(14, 14, 8), float32] */;
  %462 = reshape(%461, newshape=[14, 14, 8]) /* ty=Tensor[(14, 14, 8), float32] */;
  %463 = cast(%460, dtype="float32") /* ty=Tensor[(14, 14, 8), float32] */;
  %464 = %455.0;
  %465 = %458.0;
  %466 = %459.0;
  %467 = @func_2023(%462) /* ty=Tensor[(14, 14, 8), float32] */;
  %468 = asinh(%463) /* ty=Tensor[(14, 14, 8), float32] */;
  (%464, %465, meta[relay.Constant][23] /* ty=Tensor[(144), float32] */, %466, %467, %468)
}

def @func_2172() -> (Tensor[(14, 14, 8), float32], Tensor[(2, 7, 4), float64], Tensor[(56), float64]) {
  %475 = fn () -> (Tensor[(14, 14, 8), float32], Tensor[(2, 7, 4), float64], Tensor[(56), float64]) {
    %469 = @func_1902() /* ty=(Tensor[(14, 14, 8), int8], Tensor[(14, 14, 8), float32]) */;
    %470 = cast(meta[relay.Constant][24] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
    %471 = reshape(%470, newshape=[2, 7, 4]) /* ty=Tensor[(2, 7, 4), float64] */;
    %472 = @func_284(%471) /* ty=(Tensor[(2, 7, 4), float64], Tensor[(11, 6, 13), float32], Tensor[(429, 2), float32], Tensor[(11, 6, 13), float32]) */;
    %473 = %469.1;
    %474 = %472.0;
    (%473, %474, meta[relay.Constant][24] /* ty=Tensor[(56), float64] */)
  };
  %475() /* ty=(Tensor[(14, 14, 8), float32], Tensor[(2, 7, 4), float64], Tensor[(56), float64]) */
}

def @func_4450() -> (Tensor[(8, 2, 9), float32], Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), float32]) {
  %479 = fn () -> (Tensor[(8, 2, 9), float32], Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), float32]) {
    %476 = @func_4302() /* ty=Tensor[(8, 2, 9), float32] */;
    %477 = @func_1848() /* ty=Tensor[(14, 14, 8), float32] */;
    %478 = @func_1848() /* ty=Tensor[(14, 14, 8), float32] */;
    (%476, %477, %478)
  };
  %479() /* ty=(Tensor[(8, 2, 9), float32], Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), float32]) */
}

def @func_5578(%var_5577: Tensor[(780), bool]) -> (Tensor[(14, 14, 8), float32], Tensor[(15, 13, 4), bool], Tensor[(780), bool]) {
  %488 = fn (%var_5572: Tensor[(780), bool]) -> (Tensor[(14, 14, 8), float32], Tensor[(15, 13, 4), bool], Tensor[(780), bool]) {
    %480 = @func_4449() /* ty=(Tensor[(8, 2, 9), float32], Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), float32]) */;
    %481 = cast(%var_5572, dtype="bool") /* ty=Tensor[(780), bool] */;
    %482 = cast(%var_5572, dtype="bool") /* ty=Tensor[(780), bool] */;
    %483 = reshape(%481, newshape=[15, 13, 4]) /* ty=Tensor[(15, 13, 4), bool] */;
    %484 = reshape(%482, newshape=[15, 13, 4]) /* ty=Tensor[(15, 13, 4), bool] */;
    %485 = @func_2957(%483, %484) /* ty=(Tensor[(15, 13, 4), bool],) */;
    %486 = %480.2;
    %487 = %485.0;
    (%486, %487, %var_5572)
  };
  %488(%var_5577) /* ty=(Tensor[(14, 14, 8), float32], Tensor[(15, 13, 4), bool], Tensor[(780), bool]) */
}

def @func_5791() -> Tensor[(14, 14, 8), float32] {
  %489 = @func_4449() /* ty=(Tensor[(8, 2, 9), float32], Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), float32]) */;
  %489.1
}

def @func_3150() -> (Tensor[(144), float32], Tensor[(144), float32], Tensor[(416), int16], Tensor[(784, 2), float32], Tensor[(14, 14, 8), int8]) {
  @func_3148() /* ty=(Tensor[(144), float32], Tensor[(144), float32], Tensor[(416), int16], Tensor[(784, 2), float32], Tensor[(14, 14, 8), int8]) */
}

def @func_7941() -> (Tensor[(8, 2, 9), float64], Tensor[(14, 14, 8), float64]) {
  @func_7939() /* ty=(Tensor[(8, 2, 9), float64], Tensor[(14, 14, 8), float64]) */
}

def @func_5334() -> Tensor[(14, 14, 8), float32] {
  @func_5332() /* ty=Tensor[(14, 14, 8), float32] */
}

def @func_8399() -> Tensor[(2, 7, 4), float32] {
  @func_8397() /* ty=Tensor[(2, 7, 4), float32] */
}

def @func_8747() -> (Tensor[(2, 7, 4), float64],) {
  %492 = fn () -> (Tensor[(2, 7, 4), float64],) {
    %490 = @func_7416() /* ty=(Tensor[(2, 7, 4), float64],) */;
    %491 = %490.0;
    (%491,)
  };
  %492() /* ty=(Tensor[(2, 7, 4), float64],) */
}

def @func_6430(%var_6418: Tensor[(1485), float64]) -> (Tensor[(1, 1485), float64], Tensor[(1485), float64], Tensor[(14, 14, 8), float64]) {
  %493 = cast(%var_6418, dtype="float64") /* ty=Tensor[(1485), float64] */;
  %494 = reshape(%493, newshape=[1, 1485]) /* ty=Tensor[(1, 1485), float64] */;
  %495 = @func_3402(%494) /* ty=(Tensor[(2, 7, 4), float32], Tensor[(15, 9, 11), uint16], Tensor[(1, 1485), float64]) */;
  %496 = @func_5423() /* ty=Tensor[(14, 14, 8), float32] */;
  %497 = cast(%496, dtype="float64") /* ty=Tensor[(14, 14, 8), float64] */;
  %498 = %495.2;
  %499 = cos(%497) /* ty=Tensor[(14, 14, 8), float64] */;
  (%498, %var_6418, %499)
}

def @func_2631(%var_2629: Tensor[(144), float32], %var_2630: Tensor[(416), int16]) -> (Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), float64], Tensor[(144), float32], Tensor[(144), float32], Tensor[(416), int16]) {
  @func_2627(%var_2629, %var_2630) /* ty=(Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), float64], Tensor[(144), float32], Tensor[(144), float32], Tensor[(416), int16]) */
}

def @func_8388() -> Tensor[(2, 7, 4), float64] {
  %501 = fn () -> Tensor[(2, 7, 4), float64] {
    %500 = @func_3917() /* ty=(Tensor[(2, 7, 4), float64],) */;
    %500.0
  };
  %501() /* ty=Tensor[(2, 7, 4), float64] */
}

def @func_6064() -> Tensor[(12, 15, 8), float32] {
  %502 = cast(meta[relay.Constant][25] /* ty=Tensor[(12, 15, 8), float32] */, dtype="float32") /* ty=Tensor[(12, 15, 8), float32] */;
  tan(%502) /* ty=Tensor[(12, 15, 8), float32] */
}

def @func_8623(%var_8622: Tensor[(15, 11, 11), float32]) -> (Tensor[(15, 11, 11), float32], Tensor[(14, 14, 8), float64], Tensor[(56), float64]) {
  %508 = fn (%var_8593: Tensor[(15, 11, 11), float32]) -> (Tensor[(15, 11, 11), float32], Tensor[(14, 14, 8), float64], Tensor[(56), float64]) {
    %503 = cast(%var_8593, dtype="float32") /* ty=Tensor[(15, 11, 11), float32] */;
    %504 = @func_2171() /* ty=(Tensor[(14, 14, 8), float32], Tensor[(2, 7, 4), float64], Tensor[(56), float64]) */;
    %505 = tan(%503) /* ty=Tensor[(15, 11, 11), float32] */;
    %506 = @func_5511() /* ty=Tensor[(14, 14, 8), float64] */;
    %507 = %504.2;
    (%505, %506, %507)
  };
  %508(%var_8622) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(14, 14, 8), float64], Tensor[(56), float64]) */
}

def @func_380(%var_334: Tensor[(15, 9, 11), float64], %var_335: Tensor[(15, 9, 11), float64], %var_340: Tensor[(56), float64]) -> (Tensor[(429, 2), float32], Tensor[(56), float64], Tensor[(11, 6, 13), float32], Tensor[(15, 9, 11), bool], Tensor[(11, 6, 13), float32], Tensor[(11, 6, 13), float32], Tensor[(11, 6, 13), float32]) {
  %509 = cast(%var_340, dtype="float64") /* ty=Tensor[(56), float64] */;
  %510 = reshape(%509, newshape=[2, 7, 4]) /* ty=Tensor[(2, 7, 4), float64] */;
  %511 = @func_284(%510) /* ty=(Tensor[(2, 7, 4), float64], Tensor[(11, 6, 13), float32], Tensor[(429, 2), float32], Tensor[(11, 6, 13), float32]) */;
  %512 = %511.2;
  %513 = cast(%512, dtype="float32") /* ty=Tensor[(429, 2), float32] */;
  %514 = reshape(%513, newshape=[11, 6, 13]) /* ty=Tensor[(11, 6, 13), float32] */;
  %515 = @func_27(%514) /* ty=(Tensor[(11, 6, 13), float32],) */;
  %516 = cast(%var_335, dtype="bool") /* ty=Tensor[(15, 9, 11), bool] */;
  %517 = shape_of(%var_334, dtype="int32") /* ty=Tensor[(3), int32] */;
  %518 = cast(%var_334, dtype="bool") /* ty=Tensor[(15, 9, 11), bool] */;
  %519 = dyn.reshape(%516, %517, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %520 = greater(%518, %519) /* ty=Tensor[(15, 9, 11), bool] */;
  %521 = cast(%var_335, dtype="bool") /* ty=Tensor[(15, 9, 11), bool] */;
  %522 = shape_of(%520, dtype="int32") /* ty=Tensor[(3), int32] */;
  %523 = cast(%520, dtype="bool") /* ty=Tensor[(15, 9, 11), bool] */;
  %524 = dyn.reshape(%521, %522, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %525 = cast(%var_340, dtype="float64") /* ty=Tensor[(56), float64] */;
  %526 = reshape(%525, newshape=[2, 7, 4]) /* ty=Tensor[(2, 7, 4), float64] */;
  %527 = @func_284(%526) /* ty=(Tensor[(2, 7, 4), float64], Tensor[(11, 6, 13), float32], Tensor[(429, 2), float32], Tensor[(11, 6, 13), float32]) */;
  %528 = cast(%var_340, dtype="float64") /* ty=Tensor[(56), float64] */;
  %529 = reshape(%528, newshape=[2, 7, 4]) /* ty=Tensor[(2, 7, 4), float64] */;
  %530 = @func_284(%529) /* ty=(Tensor[(2, 7, 4), float64], Tensor[(11, 6, 13), float32], Tensor[(429, 2), float32], Tensor[(11, 6, 13), float32]) */;
  %531 = cast(%512, dtype="float32") /* ty=Tensor[(429, 2), float32] */;
  %532 = reshape(%531, newshape=[11, 6, 13]) /* ty=Tensor[(11, 6, 13), float32] */;
  %533 = @func_27(%532) /* ty=(Tensor[(11, 6, 13), float32],) */;
  %534 = %515.0;
  %535 = not_equal(%523, %524) /* ty=Tensor[(15, 9, 11), bool] */;
  %536 = %527.3;
  %537 = %530.3;
  %538 = %533.0;
  (%512, %var_340, %534, %535, %536, %537, %538)
}

def @func_8044(%var_8042: Tensor[(1485, 1), float64], %var_8043: Tensor[(1485, 12), float64]) -> (Tensor[(2, 7, 4), float64], Tensor[(480), float32], Tensor[(14, 14, 8), float32], Tensor[(10, 8, 6), int16], Tensor[(1485, ?), int16], Tensor[(1485, 12), float32]) {
  %573 = fn (%var_7971: Tensor[(1485, 1), float64], %var_7990: Tensor[(1485, 12), float64]) -> (Tensor[(2, 7, 4), float64], Tensor[(480), float32], Tensor[(14, 14, 8), float32], Tensor[(10, 8, 6), int16], Tensor[(1485, ?), int16], Tensor[(1485, 12), float32]) {
    %539 = @func_7673() /* ty=(Tensor[(2, 7, 4), float64],) */;
    %540 = cast(%var_7971, dtype="float64") /* ty=Tensor[(1485, 1), float64] */;
    %541 = %539.0;
    %542 = cast(%541, dtype="float64") /* ty=Tensor[(2, 7, 4), float64] */;
    %543 = cast(%var_7971, dtype="bool") /* ty=Tensor[(1485, 1), bool] */;
    %544 = reshape(%540, newshape=[1485]) /* ty=Tensor[(1485), float64] */;
    %545 = reshape(%542, newshape=[56]) /* ty=Tensor[(56), float64] */;
    %546 = reshape(%543, newshape=[15, 9, 11]) /* ty=Tensor[(15, 9, 11), bool] */;
    %547 = @func_1291(%544, %545, %546) /* ty=(Tensor[(13, 12, 1), bool], Tensor[(1485), float64], Tensor[(56), float64], Tensor[(11, 6, 13), float32], Tensor[(858), float32], Tensor[(15, 9, 11), uint16], Tensor[(15, 9, 11), uint32], Tensor[(10, 8, 6), int16], Tensor[(480), float32], Tensor[(429, 2), float32]) */;
    %548 = @func_7447() /* ty=(Tensor[(3, 2, 9), float32], Tensor[(14, 14, 8), float64], Tensor[(14, 14, 8), float32]) */;
    %549 = %547.8;
    %550 = cast(%549, dtype="float32") /* ty=Tensor[(480), float32] */;
    %551 = reshape(%550, newshape=[10, 8, 6]) /* ty=Tensor[(10, 8, 6), float32] */;
    %552 = @func_622(%551) /* ty=(Tensor[(10, 8, 6), int16],) */;
    %553 = cast(%var_7971, dtype="float64") /* ty=Tensor[(1485, 1), float64] */;
    %554 = log2(%553) /* ty=Tensor[(1485, 1), float64] */;
    %555 = cast(%var_7971, dtype="int16") /* ty=Tensor[(1485, 1), int16] */;
    %556 = shape_of(%554, dtype="int32") /* ty=Tensor[(2), int32] */;
    %557 = cast(%554, dtype="int16") /* ty=Tensor[(1485, 1), int16] */;
    %558 = dyn.reshape(%555, %556, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
    %559 = cast(%554, dtype="bool") /* ty=Tensor[(1485, 1), bool] */;
    %560 = cast(%var_7990, dtype="bool") /* ty=Tensor[(1485, 12), bool] */;
    %561 = not_equal(%559, %560) /* ty=Tensor[(1485, 12), bool] */;
    %562 = cast(%554, dtype="bool") /* ty=Tensor[(1485, 1), bool] */;
    %563 = cast(%var_7990, dtype="bool") /* ty=Tensor[(1485, 12), bool] */;
    %564 = greater(%562, %563) /* ty=Tensor[(1485, 12), bool] */;
    %565 = cast(%564, dtype="float32") /* ty=Tensor[(1485, 12), float32] */;
    %566 = shape_of(%561, dtype="int32") /* ty=Tensor[(2), int32] */;
    %567 = cast(%561, dtype="float32") /* ty=Tensor[(1485, 12), float32] */;
    %568 = dyn.reshape(%565, %566, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %569 = %548.2;
    %570 = %552.0;
    %571 = left_shift(%557, %558) /* ty=Tensor[(1485, ?), int16] */;
    %572 = floor_mod(%567, %568) /* ty=Tensor[(1485, 12), float32] */;
    (%541, %549, %569, %570, %571, %572)
  };
  %573(%var_8042, %var_8043) /* ty=(Tensor[(2, 7, 4), float64], Tensor[(480), float32], Tensor[(14, 14, 8), float32], Tensor[(10, 8, 6), int16], Tensor[(1485, ?), int16], Tensor[(1485, 12), float32]) */
}

def @func_6275() -> (Tensor[(14, 14, 8), float64],) {
  %576 = fn () -> (Tensor[(14, 14, 8), float64],) {
    %574 = @func_5449() /* ty=(Tensor[(14, 14, 8), float64],) */;
    %575 = %574.0;
    (%575,)
  };
  %576() /* ty=(Tensor[(14, 14, 8), float64],) */
}

def @func_1488() -> Tensor[(14, 14, 8), float32] {
  %577 = cast(2.3716f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %578 = cast(meta[relay.Constant][26] /* ty=Tensor[(14, 14, 8), float32] */, dtype="float32") /* ty=Tensor[(14, 14, 8), float32] */;
  power(%577, %578) /* ty=Tensor[(14, 14, 8), float32] */
}

def @func_6177(%var_6175: Tensor[(144), float32]) -> (Tensor[(2, 7, 4), float64], Tensor[(14, 14, 8), float64], Tensor[(780, ?), float32], Tensor[(8, 2, 9), float32], Tensor[(144), float32], Tensor[(780, ?), float32], Tensor[(8, 2, 9), float32], Tensor[(2, 208), int16]) {
  @func_6174(%var_6175) /* ty=(Tensor[(2, 7, 4), float64], Tensor[(14, 14, 8), float64], Tensor[(780, ?), float32], Tensor[(8, 2, 9), float32], Tensor[(144), float32], Tensor[(780, ?), float32], Tensor[(8, 2, 9), float32], Tensor[(2, 208), int16]) */
}

def @func_7016() -> (Tensor[(2, 7, 4), float64],) {
  %579 = @func_2249() /* ty=(Tensor[(2, 7, 4), float64],) */;
  %580 = %579.0;
  (%580,)
}

def @func_8160(%var_8159: Tensor[(108), float64]) -> (Tensor[(16, 15, 7), float64], Tensor[(8, 13, 4), int16], float64, Tensor[(2, 7, 4), float32], Tensor[(416, 108), bool], Tensor[(12, 15, 8), float32]) {
  %597 = fn (%var_8134: Tensor[(108), float64]) -> (Tensor[(16, 15, 7), float64], Tensor[(8, 13, 4), int16], float64, Tensor[(2, 7, 4), float32], Tensor[(416, 108), bool], Tensor[(12, 15, 8), float32]) {
    %581 = @func_5099() /* ty=(Tensor[(16, 15, 7), float64],) */;
    %582 = cast(meta[relay.Constant][27] /* ty=Tensor[(416, 1), int16] */, dtype="int16") /* ty=Tensor[(416, 1), int16] */;
    %583 = cast(9.74576f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %584 = cast(%var_8134, dtype="float64") /* ty=Tensor[(108), float64] */;
    %585 = reshape(%582, newshape=[416]) /* ty=Tensor[(416), int16] */;
    %586 = reshape(%583, newshape=[]) /* ty=float64 */;
    %587 = reshape(%584, newshape=[108]) /* ty=Tensor[(108), float64] */;
    %588 = @func_6821(%585, %586, %587) /* ty=(Tensor[(14, 14, 8), float32], Tensor[(8, 13, 4), int16], Tensor[(416), int16], Tensor[(15, 3, 14), bool], Tensor[(630), float32], Tensor[(1430), float32], float64, Tensor[(108), float64]) */;
    %589 = @func_6911() /* ty=(Tensor[(2, 7, 4), float32],) */;
    %590 = cast(meta[relay.Constant][27] /* ty=Tensor[(416, 1), int16] */, dtype="bool") /* ty=Tensor[(416, 1), bool] */;
    %591 = cast(%var_8134, dtype="bool") /* ty=Tensor[(108), bool] */;
    %592 = %581.0;
    %593 = %588.1;
    %594 = %589.0;
    %595 = logical_or(%590, %591) /* ty=Tensor[(416, 108), bool] */;
    %596 = @func_6064() /* ty=Tensor[(12, 15, 8), float32] */;
    (%592, %593, 9.74576f64 /* ty=float64 */, %594, %595, %596)
  };
  %597(%var_8159) /* ty=(Tensor[(16, 15, 7), float64], Tensor[(8, 13, 4), int16], float64, Tensor[(2, 7, 4), float32], Tensor[(416, 108), bool], Tensor[(12, 15, 8), float32]) */
}

def @func_2914() -> (Tensor[(14, 14, 8), float64],) {
  %598 = @func_1932() /* ty=(Tensor[(14, 14, 8), float64],) */;
  %599 = %598.0;
  (%599,)
}

def @func_1661() -> Tensor[(14, 14, 8), float32] {
  @func_1488() /* ty=Tensor[(14, 14, 8), float32] */
}

def @func_1149(%var_1147: Tensor[(416), int16]) -> (Tensor[(15, 9, 11), bool], Tensor[(1485), float64], Tensor[(2, 28), float64], Tensor[(8, 13, 4), int16], Tensor[(416), int16], Tensor[(12, 10, 9), int16], Tensor[(11, 6, 13), float32], Tensor[(858), float32], Tensor[(11, 6, 13), float32], Tensor[(15, 9, 11), bool], Tensor[(8, 13, 4), int16]) {
  @func_1146(%var_1147) /* ty=(Tensor[(15, 9, 11), bool], Tensor[(1485), float64], Tensor[(2, 28), float64], Tensor[(8, 13, 4), int16], Tensor[(416), int16], Tensor[(12, 10, 9), int16], Tensor[(11, 6, 13), float32], Tensor[(858), float32], Tensor[(11, 6, 13), float32], Tensor[(15, 9, 11), bool], Tensor[(8, 13, 4), int16]) */
}

def @func_2863() -> (Tensor[(14, 14, 8), int8], Tensor[(8, 2, 9), float32], Tensor[(144), float32], Tensor[(14, 14, 8), float64], Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), float32]) {
  @func_2861() /* ty=(Tensor[(14, 14, 8), int8], Tensor[(8, 2, 9), float32], Tensor[(144), float32], Tensor[(14, 14, 8), float64], Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), float32]) */
}

def @func_1904() -> (Tensor[(14, 14, 8), int8], Tensor[(14, 14, 8), float32]) {
  @func_1902() /* ty=(Tensor[(14, 14, 8), int8], Tensor[(14, 14, 8), float32]) */
}

def @func_5425() -> Tensor[(14, 14, 8), float32] {
  @func_5423() /* ty=Tensor[(14, 14, 8), float32] */
}

def @func_8264() -> Tensor[(16, 15, 7), float64] {
  %600 = @func_5099() /* ty=(Tensor[(16, 15, 7), float64],) */;
  %601 = %600.0;
  %602 = cast(%601, dtype="float32") /* ty=Tensor[(16, 15, 7), float32] */;
  %603 = acos(%602) /* ty=Tensor[(16, 15, 7), float32] */;
  %604 = cast(%601, dtype="float64") /* ty=Tensor[(16, 15, 7), float64] */;
  %605 = shape_of(%603, dtype="int32") /* ty=Tensor[(3), int32] */;
  %606 = cast(%603, dtype="float64") /* ty=Tensor[(16, 15, 7), float64] */;
  %607 = dyn.reshape(%604, %605, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  mod(%606, %607) /* ty=Tensor[(16, 15, 7), float64] */
}

def @func_3611(%var_3592: Tensor[(14, 14, 8), float32], %var_3601: Tensor[(1, 144), float32], %var_3602: Tensor[(416), int16]) -> (Tensor[(14, 14, 8), bool], Tensor[(8, 13, 4), int64], Tensor[(1, 144), float32], Tensor[(416), int16]) {
  %608 = @func_1505() /* ty=Tensor[(14, 14, 8), float32] */;
  %609 = cast(%var_3592, dtype="bool") /* ty=Tensor[(14, 14, 8), bool] */;
  %610 = shape_of(%608, dtype="int32") /* ty=Tensor[(3), int32] */;
  %611 = cast(%608, dtype="bool") /* ty=Tensor[(14, 14, 8), bool] */;
  %612 = dyn.reshape(%609, %610, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %613 = cast(%var_3601, dtype="float32") /* ty=Tensor[(1, 144), float32] */;
  %614 = cast(%var_3602, dtype="int16") /* ty=Tensor[(416), int16] */;
  %615 = cast(%608, dtype="float32") /* ty=Tensor[(14, 14, 8), float32] */;
  %616 = reshape(%613, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %617 = reshape(%614, newshape=[416]) /* ty=Tensor[(416), int16] */;
  %618 = reshape(%615, newshape=[14, 14, 8]) /* ty=Tensor[(14, 14, 8), float32] */;
  %619 = @func_1591(%616, %617, %618) /* ty=(Tensor[(8, 2, 9), float32], Tensor[(144), float32], Tensor[(416), int16], Tensor[(14, 14, 8), bool], Tensor[(14, 14, 8), uint32], Tensor[(8, 13, 4), int64]) */;
  %620 = less(%611, %612) /* ty=Tensor[(14, 14, 8), bool] */;
  %621 = %619.5;
  (%620, %621, %var_3601, %var_3602)
}

def @func_3224() -> (Tensor[(2, 7, 4), float32],) {
  %622 = @func_2249() /* ty=(Tensor[(2, 7, 4), float64],) */;
  %623 = %622.0;
  %624 = cast(%623, dtype="float32") /* ty=Tensor[(2, 7, 4), float32] */;
  %625 = cosh(%624) /* ty=Tensor[(2, 7, 4), float32] */;
  (%625,)
}

def @func_6566(%var_6563: Tensor[(8, 8, 1), float64], %var_6564: Tensor[(8, 8, 11), float64], %var_6565: Tensor[(1568), float32]) -> (Tensor[(8, 8, 11), float64], Tensor[(14, 14, 8), float32], Tensor[(1568), float32]) {
  @func_6561(%var_6563, %var_6564, %var_6565) /* ty=(Tensor[(8, 8, 11), float64], Tensor[(14, 14, 8), float32], Tensor[(1568), float32]) */
}

def @func_4846() -> (Tensor[(7, 10, 12), float32], Tensor[(14, 14, 8), bool], Tensor[(1568), float32], Tensor[(144), float32], Tensor[(416), int16], Tensor[(11, 6, 13), float32], Tensor[(56), float64]) {
  %640 = fn () -> (Tensor[(7, 10, 12), float32], Tensor[(14, 14, 8), bool], Tensor[(1568), float32], Tensor[(144), float32], Tensor[(416), int16], Tensor[(11, 6, 13), float32], Tensor[(56), float64]) {
    %626 = cast(meta[relay.Constant][28] /* ty=Tensor[(7, 10, 12), float32] */, dtype="float32") /* ty=Tensor[(7, 10, 12), float32] */;
    %627 = cast(meta[relay.Constant][29] /* ty=Tensor[(1568), float32] */, dtype="float32") /* ty=Tensor[(1568), float32] */;
    %628 = cast(meta[relay.Constant][30] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
    %629 = cast(meta[relay.Constant][31] /* ty=Tensor[(416), int16] */, dtype="int16") /* ty=Tensor[(416), int16] */;
    %630 = reshape(%627, newshape=[14, 14, 8]) /* ty=Tensor[(14, 14, 8), float32] */;
    %631 = reshape(%628, newshape=[1, 144]) /* ty=Tensor[(1, 144), float32] */;
    %632 = reshape(%629, newshape=[416]) /* ty=Tensor[(416), int16] */;
    %633 = @func_3611(%630, %631, %632) /* ty=(Tensor[(14, 14, 8), bool], Tensor[(8, 13, 4), int64], Tensor[(1, 144), float32], Tensor[(416), int16]) */;
    %634 = cast(meta[relay.Constant][32] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
    %635 = reshape(%634, newshape=[2, 7, 4]) /* ty=Tensor[(2, 7, 4), float64] */;
    %636 = @func_284(%635) /* ty=(Tensor[(2, 7, 4), float64], Tensor[(11, 6, 13), float32], Tensor[(429, 2), float32], Tensor[(11, 6, 13), float32]) */;
    %637 = exp(%626) /* ty=Tensor[(7, 10, 12), float32] */;
    %638 = %633.0;
    %639 = %636.1;
    (%637, %638, meta[relay.Constant][29] /* ty=Tensor[(1568), float32] */, meta[relay.Constant][30] /* ty=Tensor[(144), float32] */, meta[relay.Constant][31] /* ty=Tensor[(416), int16] */, %639, meta[relay.Constant][32] /* ty=Tensor[(56), float64] */)
  };
  %640() /* ty=(Tensor[(7, 10, 12), float32], Tensor[(14, 14, 8), bool], Tensor[(1568), float32], Tensor[(144), float32], Tensor[(416), int16], Tensor[(11, 6, 13), float32], Tensor[(56), float64]) */
}

def @func_8758() -> Tensor[(14, 14, 8), int8] {
  %641 = @func_2861() /* ty=(Tensor[(14, 14, 8), int8], Tensor[(8, 2, 9), float32], Tensor[(144), float32], Tensor[(14, 14, 8), float64], Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), float32]) */;
  %641.0
}

def @func_6991(%var_6979: bool, %var_6988: Tensor[(480), float32]) -> (Tensor[(15, 2, 2), bool], Tensor[(14, 14, 8), float32], Tensor[(156), float32], Tensor[(480), float32]) {
  %642 = cast(%var_6979, dtype="bool") /* ty=bool */;
  %643 = cast(meta[relay.Constant][33] /* ty=Tensor[(15, 2, 2), bool] */, dtype="bool") /* ty=Tensor[(15, 2, 2), bool] */;
  %644 = cast(meta[relay.Constant][34] /* ty=Tensor[(156), float32] */, dtype="float32") /* ty=Tensor[(156), float32] */;
  %645 = cast(%var_6988, dtype="float32") /* ty=Tensor[(480), float32] */;
  %646 = reshape(%644, newshape=[12, 13, 1]) /* ty=Tensor[(12, 13, 1), float32] */;
  %647 = reshape(%645, newshape=[480]) /* ty=Tensor[(480), float32] */;
  %648 = @func_6867(%646, %647) /* ty=(Tensor[(12, 13, 3), float32], Tensor[(144), float32], Tensor[(480), float32], Tensor[(14, 14, 8), float32]) */;
  %649 = logical_or(%642, %643) /* ty=Tensor[(15, 2, 2), bool] */;
  %650 = %648.3;
  (%649, %650, meta[relay.Constant][34] /* ty=Tensor[(156), float32] */, %var_6988)
}

def @func_1849() -> Tensor[(14, 14, 8), float32] {
  %651 = fn () -> Tensor[(14, 14, 8), float32] {
    @func_1505() /* ty=Tensor[(14, 14, 8), float32] */
  };
  %651() /* ty=Tensor[(14, 14, 8), float32] */
}

def @func_1591(%var_1560: Tensor[(144), float32], %var_1564: Tensor[(416), int16], %var_1566: Tensor[(14, 14, 8), float32]) -> (Tensor[(8, 2, 9), float32], Tensor[(144), float32], Tensor[(416), int16], Tensor[(14, 14, 8), bool], Tensor[(14, 14, 8), uint32], Tensor[(8, 13, 4), int64]) {
  %652 = cast(%var_1560, dtype="float32") /* ty=Tensor[(144), float32] */;
  %653 = reshape(%652, newshape=[8, 2, 9]) /* ty=Tensor[(8, 2, 9), float32] */;
  %654 = @func_1389(%653) /* ty=(Tensor[(8, 2, 9), float32],) */;
  %655 = @func_1505() /* ty=Tensor[(14, 14, 8), float32] */;
  %656 = cast(%var_1566, dtype="bool") /* ty=Tensor[(14, 14, 8), bool] */;
  %657 = shape_of(%655, dtype="int32") /* ty=Tensor[(3), int32] */;
  %658 = cast(%655, dtype="bool") /* ty=Tensor[(14, 14, 8), bool] */;
  %659 = dyn.reshape(%656, %657, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %660 = cast(meta[relay.Constant][35] /* ty=Tensor[(14, 14, 8), float32] */, dtype="uint32") /* ty=Tensor[(14, 14, 8), uint32] */;
  %661 = shape_of(%655, dtype="int32") /* ty=Tensor[(3), int32] */;
  %662 = cast(%655, dtype="uint32") /* ty=Tensor[(14, 14, 8), uint32] */;
  %663 = dyn.reshape(%660, %661, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %664 = cast(%var_1564, dtype="int16") /* ty=Tensor[(416), int16] */;
  %665 = cast(%var_1564, dtype="int16") /* ty=Tensor[(416), int16] */;
  %666 = reshape(%664, newshape=[8, 13, 4]) /* ty=Tensor[(8, 13, 4), int16] */;
  %667 = reshape(%665, newshape=[8, 13, 4]) /* ty=Tensor[(8, 13, 4), int16] */;
  %668 = @func_735(%666, %667) /* ty=(Tensor[(8, 13, 4), int16],) */;
  %669 = %668.0;
  %670 = cast(meta[relay.Constant][36] /* ty=Tensor[(8, 13, 4), int16] */, dtype="int64") /* ty=Tensor[(8, 13, 4), int64] */;
  %671 = shape_of(%669, dtype="int32") /* ty=Tensor[(3), int32] */;
  %672 = cast(%669, dtype="int64") /* ty=Tensor[(8, 13, 4), int64] */;
  %673 = dyn.reshape(%670, %671, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %674 = %654.0;
  %675 = less_equal(%658, %659) /* ty=Tensor[(14, 14, 8), bool] */;
  %676 = subtract(%662, %663) /* ty=Tensor[(14, 14, 8), uint32] */;
  %677 = bitwise_xor(%672, %673) /* ty=Tensor[(8, 13, 4), int64] */;
  (%674, %var_1560, %var_1564, %675, %676, %677)
}

def @func_7324() -> (Tensor[(14, 14, 8), float64],) {
  %679 = fn () -> (Tensor[(14, 14, 8), float64],) {
    %678 = @func_5511() /* ty=Tensor[(14, 14, 8), float64] */;
    (%678,)
  };
  %679() /* ty=(Tensor[(14, 14, 8), float64],) */
}

def @func_8508(%var_8506: Tensor[(9, 16, 1), float64]) -> (Tensor[(9, 16, 1), float64], Tensor[(144), float32]) {
  @func_8505(%var_8506) /* ty=(Tensor[(9, 16, 1), float64], Tensor[(144), float32]) */
}

def @func_8436() -> Tensor[(14, 14, 8), float32] {
  %680 = @func_2171() /* ty=(Tensor[(14, 14, 8), float32], Tensor[(2, 7, 4), float64], Tensor[(56), float64]) */;
  %680.0
}

def @func_7482() -> (Tensor[(14, 14, 8), float32], Tensor[(2, 7, 4), float64]) {
  %684 = fn () -> (Tensor[(14, 14, 8), float32], Tensor[(2, 7, 4), float64]) {
    %681 = @func_3917() /* ty=(Tensor[(2, 7, 4), float64],) */;
    %682 = @func_5332() /* ty=Tensor[(14, 14, 8), float32] */;
    %683 = %681.0;
    (%682, %683)
  };
  %684() /* ty=(Tensor[(14, 14, 8), float32], Tensor[(2, 7, 4), float64]) */
}

def @func_3444() -> Tensor[(14, 14, 8), float64] {
  @func_3442() /* ty=Tensor[(14, 14, 8), float64] */
}

def @func_7774() -> Tensor[(14, 14, 8), float64] {
  @func_7772() /* ty=Tensor[(14, 14, 8), float64] */
}

def @func_1306(%var_1305: Tensor[(11, 10, 13), float32]) -> Tensor[(11, 10, 13), float32] {
  %689 = fn (%var_1297: Tensor[(11, 10, 13), float32]) -> Tensor[(11, 10, 13), float32] {
    %685 = cast(meta[relay.Constant][37] /* ty=Tensor[(11, 10, 13), float32] */, dtype="float32") /* ty=Tensor[(11, 10, 13), float32] */;
    %686 = shape_of(%var_1297, dtype="int32") /* ty=Tensor[(3), int32] */;
    %687 = cast(%var_1297, dtype="float32") /* ty=Tensor[(11, 10, 13), float32] */;
    %688 = dyn.reshape(%685, %686, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    divide(%687, %688) /* ty=Tensor[(11, 10, 13), float32] */
  };
  %689(%var_1305) /* ty=Tensor[(11, 10, 13), float32] */
}

def @func_4304() -> Tensor[(8, 2, 9), float32] {
  @func_4302() /* ty=Tensor[(8, 2, 9), float32] */
}

def @func_2136() -> Tensor[(14, 14, 8), int8] {
  %691 = fn () -> Tensor[(14, 14, 8), int8] {
    %690 = @func_1902() /* ty=(Tensor[(14, 14, 8), int8], Tensor[(14, 14, 8), float32]) */;
    %690.0
  };
  %691() /* ty=Tensor[(14, 14, 8), int8] */
}

def @func_6825(%var_6822: Tensor[(416), int16], %var_6823: float64, %var_6824: Tensor[(108), float64]) -> (Tensor[(14, 14, 8), float32], Tensor[(8, 13, 4), int16], Tensor[(416), int16], Tensor[(15, 3, 14), bool], Tensor[(630), float32], Tensor[(1430), float32], float64, Tensor[(108), float64]) {
  %708 = fn (%var_6765: Tensor[(416), int16], %var_6794: float64, %var_6795: Tensor[(108), float64]) -> (Tensor[(14, 14, 8), float32], Tensor[(8, 13, 4), int16], Tensor[(416), int16], Tensor[(15, 3, 14), bool], Tensor[(630), float32], Tensor[(1430), float32], float64, Tensor[(108), float64]) {
    %692 = @func_4147() /* ty=(Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), float64], Tensor[(14, 14, 8), int8], Tensor[(2, 7, 4), uint8]) */;
    %693 = cast(%var_6765, dtype="int16") /* ty=Tensor[(416), int16] */;
    %694 = reshape(%693, newshape=[416]) /* ty=Tensor[(416), int16] */;
    %695 = @func_1146(%694) /* ty=(Tensor[(15, 9, 11), bool], Tensor[(1485), float64], Tensor[(2, 28), float64], Tensor[(8, 13, 4), int16], Tensor[(416), int16], Tensor[(12, 10, 9), int16], Tensor[(11, 6, 13), float32], Tensor[(858), float32], Tensor[(11, 6, 13), float32], Tensor[(15, 9, 11), bool], Tensor[(8, 13, 4), int16]) */;
    %696 = cast(meta[relay.Constant][38] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
    %697 = reshape(%696, newshape=[15, 3, 14]) /* ty=Tensor[(15, 3, 14), float32] */;
    %698 = @func_3476(%697) /* ty=(Tensor[(15, 3, 14), bool],) */;
    %699 = cast(%var_6794, dtype="float64") /* ty=float64 */;
    %700 = cast(%var_6795, dtype="float64") /* ty=Tensor[(108), float64] */;
    %701 = reshape(%699, newshape=[]) /* ty=float64 */;
    %702 = reshape(%700, newshape=[9, 6, 2]) /* ty=Tensor[(9, 6, 2), float64] */;
    %703 = @func_5989(%701, %702) /* ty=(Tensor[(9, 6, 2), float32], Tensor[(416), int16], Tensor[(1430), float32], Tensor[(14, 14, 8), int8]) */;
    %704 = %692.0;
    %705 = %695.10;
    %706 = %698.0;
    %707 = %703.2;
    (%704, %705, %var_6765, %706, meta[relay.Constant][38] /* ty=Tensor[(630), float32] */, %707, %var_6794, %var_6795)
  };
  %708(%var_6822, %var_6823, %var_6824) /* ty=(Tensor[(14, 14, 8), float32], Tensor[(8, 13, 4), int16], Tensor[(416), int16], Tensor[(15, 3, 14), bool], Tensor[(630), float32], Tensor[(1430), float32], float64, Tensor[(108), float64]) */
}

def @func_2795(%var_2794: Tensor[(72, 2), float32]) -> (Tensor[(14, 14, 8), float32], Tensor[(144), float32], Tensor[(72, 2), float32], Tensor[(416), int16]) {
  %716 = fn (%var_2787: Tensor[(72, 2), float32]) -> (Tensor[(14, 14, 8), float32], Tensor[(144), float32], Tensor[(72, 2), float32], Tensor[(416), int16]) {
    %709 = cast(%var_2787, dtype="float32") /* ty=Tensor[(72, 2), float32] */;
    %710 = cast(meta[relay.Constant][39] /* ty=Tensor[(416), int16] */, dtype="int16") /* ty=Tensor[(416), int16] */;
    %711 = reshape(%709, newshape=[144]) /* ty=Tensor[(144), float32] */;
    %712 = reshape(%710, newshape=[416]) /* ty=Tensor[(416), int16] */;
    %713 = @func_2627(%711, %712) /* ty=(Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), float64], Tensor[(144), float32], Tensor[(144), float32], Tensor[(416), int16]) */;
    %714 = @func_1488() /* ty=Tensor[(14, 14, 8), float32] */;
    %715 = %713.3;
    (%714, %715, %var_2787, meta[relay.Constant][39] /* ty=Tensor[(416), int16] */)
  };
  %716(%var_2794) /* ty=(Tensor[(14, 14, 8), float32], Tensor[(144), float32], Tensor[(72, 2), float32], Tensor[(416), int16]) */
}

def @func_6433(%var_6431: Tensor[(1485), float64]) -> (Tensor[(1, 1485), float64], Tensor[(1485), float64], Tensor[(14, 14, 8), float64]) {
  @func_6430(%var_6431) /* ty=(Tensor[(1, 1485), float64], Tensor[(1485), float64], Tensor[(14, 14, 8), float64]) */
}

def @func_5878(%var_5877: Tensor[(1430), float32]) -> (Tensor[(12, 12, 15), float32], Tensor[(10, 216), float32], Tensor[(14, 14, 8), float32], Tensor[(2, 7, 4), float64], Tensor[(2, 7, 4), float32], Tensor[(1430), float32], Tensor[(14, 14, 8), float32]) {
  %736 = fn (%var_5850: Tensor[(1430), float32]) -> (Tensor[(12, 12, 15), float32], Tensor[(10, 216), float32], Tensor[(14, 14, 8), float32], Tensor[(2, 7, 4), float64], Tensor[(2, 7, 4), float32], Tensor[(1430), float32], Tensor[(14, 14, 8), float32]) {
    %717 = cast(meta[relay.Constant][40] /* ty=Tensor[(10, 216), float32] */, dtype="float32") /* ty=Tensor[(10, 216), float32] */;
    %718 = reshape(%717, newshape=[12, 12, 15]) /* ty=Tensor[(12, 12, 15), float32] */;
    %719 = @func_2894(%718) /* ty=(Tensor[(12, 12, 15), float32],) */;
    %720 = @func_2171() /* ty=(Tensor[(14, 14, 8), float32], Tensor[(2, 7, 4), float64], Tensor[(56), float64]) */;
    %721 = %720.1;
    %722 = cast(%721, dtype="float64") /* ty=Tensor[(2, 7, 4), float64] */;
    %723 = reshape(%722, newshape=[2, 7, 4]) /* ty=Tensor[(2, 7, 4), float64] */;
    %724 = @func_5020(%723) /* ty=(Tensor[(2, 7, 4), float64], Tensor[(14, 14, 8), float32], Tensor[(1568), float32], Tensor[(8, 2, 9), float32]) */;
    %725 = cast(%721, dtype="float64") /* ty=Tensor[(2, 7, 4), float64] */;
    %726 = cast(%var_5850, dtype="float32") /* ty=Tensor[(1430), float32] */;
    %727 = reshape(%726, newshape=[11, 130]) /* ty=Tensor[(11, 130), float32] */;
    %728 = @func_4411(%727) /* ty=(Tensor[(14, 14, 8), float64], Tensor[(14, 14, 8), int8], Tensor[(2, 7, 4), float32], Tensor[(11, 130), float32], Tensor[(14, 14, 8), float32], Tensor[(8, 13, 4), int16], Tensor[(416), int16]) */;
    %729 = %724.1;
    %730 = cast(%729, dtype="float32") /* ty=Tensor[(14, 14, 8), float32] */;
    %731 = reshape(%730, newshape=[14, 14, 8]) /* ty=Tensor[(14, 14, 8), float32] */;
    %732 = %719.0;
    %733 = log10(%725) /* ty=Tensor[(2, 7, 4), float64] */;
    %734 = %728.2;
    %735 = @func_4751(%731) /* ty=Tensor[(14, 14, 8), float32] */;
    (%732, meta[relay.Constant][40] /* ty=Tensor[(10, 216), float32] */, %729, %733, %734, %var_5850, %735)
  };
  %736(%var_5877) /* ty=(Tensor[(12, 12, 15), float32], Tensor[(10, 216), float32], Tensor[(14, 14, 8), float32], Tensor[(2, 7, 4), float64], Tensor[(2, 7, 4), float32], Tensor[(1430), float32], Tensor[(14, 14, 8), float32]) */
}

def @func_6058(%var_6056: Tensor[(416), int16]) -> (Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), uint32], Tensor[(8, 13, 4), int16], Tensor[(416), int16], Tensor[(429, 2), float32], Tensor[(56), float64]) {
  @func_6055(%var_6056) /* ty=(Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), uint32], Tensor[(8, 13, 4), int16], Tensor[(416), int16], Tensor[(429, 2), float32], Tensor[(56), float64]) */
}

def @func_2744(%var_2742: Tensor[(1568), float32], %var_2743: Tensor[(10, 8, 6), float32]) -> (Tensor[(56), float64], Tensor[(14, 14, 8), float64], Tensor[(1568), float32], Tensor[(480), float32], Tensor[(144), float32], Tensor[(24, 6), float32], Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), float32], Tensor[(10, 8, 6), float64]) {
  %765 = fn (%var_2665: Tensor[(1568), float32], %var_2731: Tensor[(10, 8, 6), float32]) -> (Tensor[(56), float64], Tensor[(14, 14, 8), float64], Tensor[(1568), float32], Tensor[(480), float32], Tensor[(144), float32], Tensor[(24, 6), float32], Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), float32], Tensor[(10, 8, 6), float64]) {
    %737 = @func_2171() /* ty=(Tensor[(14, 14, 8), float32], Tensor[(2, 7, 4), float64], Tensor[(56), float64]) */;
    %738 = cast(%var_2665, dtype="float32") /* ty=Tensor[(1568), float32] */;
    %739 = reshape(%738, newshape=[14, 14, 8]) /* ty=Tensor[(14, 14, 8), float32] */;
    %740 = @func_1816(%739) /* ty=(Tensor[(14, 14, 8), float64],) */;
    %741 = cast(meta[relay.Constant][42] /* ty=Tensor[(24, 6), float32] */, dtype="float32") /* ty=Tensor[(24, 6), float32] */;
    %742 = reshape(%741, newshape=[144]) /* ty=Tensor[(144), float32] */;
    %743 = @func_2101(%742) /* ty=(Tensor[(14, 14, 8), float32], Tensor[(8, 2, 9), float32], Tensor[(144), float32]) */;
    %744 = %740.0;
    %745 = cast(%744, dtype="float32") /* ty=Tensor[(14, 14, 8), float32] */;
    %746 = reshape(%745, newshape=[14, 14, 8]) /* ty=Tensor[(14, 14, 8), float32] */;
    %747 = cast(%var_2665, dtype="float32") /* ty=Tensor[(1568), float32] */;
    %748 = reshape(%747, newshape=[14, 14, 8]) /* ty=Tensor[(14, 14, 8), float32] */;
    %749 = cast(meta[relay.Constant][41] /* ty=Tensor[(480), float32] */, dtype="float32") /* ty=Tensor[(480), float32] */;
    %750 = reshape(%749, newshape=[10, 8, 6]) /* ty=Tensor[(10, 8, 6), float32] */;
    %751 = @func_622(%750) /* ty=(Tensor[(10, 8, 6), int16],) */;
    %752 = %751.0;
    %753 = cast(%752, dtype="float32") /* ty=Tensor[(10, 8, 6), float32] */;
    %754 = asin(%753) /* ty=Tensor[(10, 8, 6), float32] */;
    %755 = cast(%var_2731, dtype="float64") /* ty=Tensor[(10, 8, 6), float64] */;
    %756 = shape_of(%754, dtype="int32") /* ty=Tensor[(3), int32] */;
    %757 = cast(%754, dtype="float64") /* ty=Tensor[(10, 8, 6), float64] */;
    %758 = dyn.reshape(%755, %756, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %759 = %737.2;
    %760 = %743.2;
    %761 = @func_2023(%746) /* ty=Tensor[(14, 14, 8), float32] */;
    %762 = @func_1661() /* ty=Tensor[(14, 14, 8), float32] */;
    %763 = @func_2023(%748) /* ty=Tensor[(14, 14, 8), float32] */;
    %764 = floor_divide(%757, %758) /* ty=Tensor[(10, 8, 6), float64] */;
    (%759, %744, %var_2665, meta[relay.Constant][41] /* ty=Tensor[(480), float32] */, %760, meta[relay.Constant][42] /* ty=Tensor[(24, 6), float32] */, %761, %762, %763, %764)
  };
  %765(%var_2742, %var_2743) /* ty=(Tensor[(56), float64], Tensor[(14, 14, 8), float64], Tensor[(1568), float32], Tensor[(480), float32], Tensor[(144), float32], Tensor[(24, 6), float32], Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), float32], Tensor[(10, 8, 6), float64]) */
}

def @func_6871(%var_6869: Tensor[(12, 13, 1), float32], %var_6870: Tensor[(480), float32]) -> (Tensor[(12, 13, 3), float32], Tensor[(144), float32], Tensor[(480), float32], Tensor[(14, 14, 8), float32]) {
  @func_6867(%var_6869, %var_6870) /* ty=(Tensor[(12, 13, 3), float32], Tensor[(144), float32], Tensor[(480), float32], Tensor[(14, 14, 8), float32]) */
}

def @func_6617() -> Tensor[(8, 2, 9), float64] {
  %766 = @func_4302() /* ty=Tensor[(8, 2, 9), float32] */;
  %767 = cast(%766, dtype="float64") /* ty=Tensor[(8, 2, 9), float64] */;
  rsqrt(%767) /* ty=Tensor[(8, 2, 9), float64] */
}

def @func_2025(%var_2024: Tensor[(14, 14, 8), float32]) -> Tensor[(14, 14, 8), float32] {
  %778 = fn (%var_1979: Tensor[(14, 14, 8), float32]) -> Tensor[(14, 14, 8), float32] {
    %768 = @func_1848() /* ty=Tensor[(14, 14, 8), float32] */;
    %769 = cast(%var_1979, dtype="uint8") /* ty=Tensor[(14, 14, 8), uint8] */;
    %770 = shape_of(%768, dtype="int32") /* ty=Tensor[(3), int32] */;
    %771 = cast(%768, dtype="uint8") /* ty=Tensor[(14, 14, 8), uint8] */;
    %772 = dyn.reshape(%769, %770, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %773 = add(%771, %772) /* ty=Tensor[(14, 14, 8), uint8] */;
    %774 = cast(%var_1979, dtype="float32") /* ty=Tensor[(14, 14, 8), float32] */;
    %775 = shape_of(%773, dtype="int32") /* ty=Tensor[(3), int32] */;
    %776 = cast(%773, dtype="float32") /* ty=Tensor[(14, 14, 8), float32] */;
    %777 = dyn.reshape(%774, %775, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    divide(%776, %777) /* ty=Tensor[(14, 14, 8), float32] */
  };
  %778(%var_2024) /* ty=Tensor[(14, 14, 8), float32] */
}

def @func_5989(%var_5956: float64, %var_5957: Tensor[(9, 6, 2), float64]) -> (Tensor[(9, 6, 2), float32], Tensor[(416), int16], Tensor[(1430), float32], Tensor[(14, 14, 8), int8]) {
  %779 = cast(%var_5956, dtype="bool") /* ty=bool */;
  %780 = cast(%var_5957, dtype="bool") /* ty=Tensor[(9, 6, 2), bool] */;
  %781 = less_equal(%779, %780) /* ty=Tensor[(9, 6, 2), bool] */;
  %782 = cast(%var_5956, dtype="float32") /* ty=float32 */;
  %783 = cast(%781, dtype="float32") /* ty=Tensor[(9, 6, 2), float32] */;
  %784 = cast(meta[relay.Constant][43] /* ty=Tensor[(1430), float32] */, dtype="float32") /* ty=Tensor[(1430), float32] */;
  %785 = reshape(%784, newshape=[11, 130]) /* ty=Tensor[(11, 130), float32] */;
  %786 = @func_4411(%785) /* ty=(Tensor[(14, 14, 8), float64], Tensor[(14, 14, 8), int8], Tensor[(2, 7, 4), float32], Tensor[(11, 130), float32], Tensor[(14, 14, 8), float32], Tensor[(8, 13, 4), int16], Tensor[(416), int16]) */;
  %787 = power(%782, %783) /* ty=Tensor[(9, 6, 2), float32] */;
  %788 = %786.6;
  %789 = @func_2135() /* ty=Tensor[(14, 14, 8), int8] */;
  (%787, %788, meta[relay.Constant][43] /* ty=Tensor[(1430), float32] */, %789)
}

def @func_7168(%var_7167: Tensor[(2, 7, 4), float64]) -> (Tensor[(2, 7, 4), bool],) {
  %797 = fn (%var_7146: Tensor[(2, 7, 4), float64]) -> (Tensor[(2, 7, 4), bool],) {
    %790 = @func_7016() /* ty=(Tensor[(2, 7, 4), float64],) */;
    %791 = %790.0;
    %792 = cast(%var_7146, dtype="bool") /* ty=Tensor[(2, 7, 4), bool] */;
    %793 = shape_of(%791, dtype="int32") /* ty=Tensor[(3), int32] */;
    %794 = cast(%791, dtype="bool") /* ty=Tensor[(2, 7, 4), bool] */;
    %795 = dyn.reshape(%792, %793, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %796 = less_equal(%794, %795) /* ty=Tensor[(2, 7, 4), bool] */;
    (%796,)
  };
  %797(%var_7167) /* ty=(Tensor[(2, 7, 4), bool],) */
}

def @func_1490() -> Tensor[(14, 14, 8), float32] {
  @func_1488() /* ty=Tensor[(14, 14, 8), float32] */
}

def @func_3148() -> (Tensor[(144), float32], Tensor[(144), float32], Tensor[(416), int16], Tensor[(784, 2), float32], Tensor[(14, 14, 8), int8]) {
  %798 = @func_2861() /* ty=(Tensor[(14, 14, 8), int8], Tensor[(8, 2, 9), float32], Tensor[(144), float32], Tensor[(14, 14, 8), float64], Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), float32]) */;
  %799 = %798.2;
  %800 = cast(%799, dtype="float32") /* ty=Tensor[(144), float32] */;
  %801 = cast(meta[relay.Constant][44] /* ty=Tensor[(416), int16] */, dtype="int16") /* ty=Tensor[(416), int16] */;
  %802 = cast(meta[relay.Constant][45] /* ty=Tensor[(784, 2), float32] */, dtype="float32") /* ty=Tensor[(784, 2), float32] */;
  %803 = reshape(%800, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %804 = reshape(%801, newshape=[416]) /* ty=Tensor[(416), int16] */;
  %805 = reshape(%802, newshape=[14, 14, 8]) /* ty=Tensor[(14, 14, 8), float32] */;
  %806 = @func_1591(%803, %804, %805) /* ty=(Tensor[(8, 2, 9), float32], Tensor[(144), float32], Tensor[(416), int16], Tensor[(14, 14, 8), bool], Tensor[(14, 14, 8), uint32], Tensor[(8, 13, 4), int64]) */;
  %807 = @func_1902() /* ty=(Tensor[(14, 14, 8), int8], Tensor[(14, 14, 8), float32]) */;
  %808 = %806.1;
  %809 = %807.0;
  (%799, %808, meta[relay.Constant][44] /* ty=Tensor[(416), int16] */, meta[relay.Constant][45] /* ty=Tensor[(784, 2), float32] */, %809)
}

def @func_5423() -> Tensor[(14, 14, 8), float32] {
  @func_1661() /* ty=Tensor[(14, 14, 8), float32] */
}

def @func_7416() -> (Tensor[(2, 7, 4), float64],) {
  %810 = @func_2249() /* ty=(Tensor[(2, 7, 4), float64],) */;
  %811 = %810.0;
  (%811,)
}

def @func_3442() -> Tensor[(14, 14, 8), float64] {
  %812 = @func_1505() /* ty=Tensor[(14, 14, 8), float32] */;
  %813 = cast(%812, dtype="float64") /* ty=Tensor[(14, 14, 8), float64] */;
  cosh(%813) /* ty=Tensor[(14, 14, 8), float64] */
}

def @func_7772() -> Tensor[(14, 14, 8), float64] {
  %814 = @func_2914() /* ty=(Tensor[(14, 14, 8), float64],) */;
  %814.0
}

def @func_1819(%var_1817: Tensor[(14, 14, 8), float32]) -> (Tensor[(14, 14, 8), float64],) {
  @func_1816(%var_1817) /* ty=(Tensor[(14, 14, 8), float64],) */
}

def @func_3305(%var_3296: Tensor[(14, 14, 8), int8]) -> (Tensor[(14, 14, 8), bool],) {
  %815 = @func_1902() /* ty=(Tensor[(14, 14, 8), int8], Tensor[(14, 14, 8), float32]) */;
  %816 = %815.0;
  %817 = cast(%var_3296, dtype="bool") /* ty=Tensor[(14, 14, 8), bool] */;
  %818 = shape_of(%816, dtype="int32") /* ty=Tensor[(3), int32] */;
  %819 = cast(%816, dtype="bool") /* ty=Tensor[(14, 14, 8), bool] */;
  %820 = dyn.reshape(%817, %818, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %821 = logical_or(%819, %820) /* ty=Tensor[(14, 14, 8), bool] */;
  (%821,)
}

def @func_1816(%var_1810: Tensor[(14, 14, 8), float32]) -> (Tensor[(14, 14, 8), float64],) {
  %822 = @func_1505() /* ty=Tensor[(14, 14, 8), float32] */;
  %823 = cast(%var_1810, dtype="float64") /* ty=Tensor[(14, 14, 8), float64] */;
  %824 = shape_of(%822, dtype="int32") /* ty=Tensor[(3), int32] */;
  %825 = cast(%822, dtype="float64") /* ty=Tensor[(14, 14, 8), float64] */;
  %826 = dyn.reshape(%823, %824, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %827 = floor_mod(%825, %826) /* ty=Tensor[(14, 14, 8), float64] */;
  (%827,)
}

def @func_8325() -> Tensor[(2, 7, 4), float64] {
  %829 = fn () -> Tensor[(2, 7, 4), float64] {
    %828 = @func_7673() /* ty=(Tensor[(2, 7, 4), float64],) */;
    %828.0
  };
  %829() /* ty=Tensor[(2, 7, 4), float64] */
}

def @func_6995(%var_6993: bool, %var_6994: Tensor[(480), float32]) -> (Tensor[(15, 2, 2), bool], Tensor[(14, 14, 8), float32], Tensor[(156), float32], Tensor[(480), float32]) {
  @func_6991(%var_6993, %var_6994) /* ty=(Tensor[(15, 2, 2), bool], Tensor[(14, 14, 8), float32], Tensor[(156), float32], Tensor[(480), float32]) */
}

def @func_7249() -> Tensor[(14, 14, 8), float64] {
  @func_7247() /* ty=Tensor[(14, 14, 8), float64] */
}

def @func_5023(%var_5021: Tensor[(2, 7, 4), float64]) -> (Tensor[(2, 7, 4), float64], Tensor[(14, 14, 8), float32], Tensor[(1568), float32], Tensor[(8, 2, 9), float32]) {
  @func_5020(%var_5021) /* ty=(Tensor[(2, 7, 4), float64], Tensor[(14, 14, 8), float32], Tensor[(1568), float32], Tensor[(8, 2, 9), float32]) */
}

def @func_1932() -> (Tensor[(14, 14, 8), float64],) {
  %830 = @func_1902() /* ty=(Tensor[(14, 14, 8), int8], Tensor[(14, 14, 8), float32]) */;
  %831 = %830.1;
  %832 = cast(%831, dtype="float64") /* ty=Tensor[(14, 14, 8), float64] */;
  %833 = log(%832) /* ty=Tensor[(14, 14, 8), float64] */;
  (%833,)
}

def @func_739(%var_737: Tensor[(8, 13, 4), int16], %var_738: Tensor[(8, 13, 4), int16]) -> (Tensor[(8, 13, 4), int16],) {
  @func_735(%var_737, %var_738) /* ty=(Tensor[(8, 13, 4), int16],) */
}

def @func_6522(%var_6458: Tensor[(416), int16], %var_6469: Tensor[(12, 15, 8), float32], %var_6477: Tensor[(1568), float32]) -> (Tensor[(416), float32], Tensor[(12, 15, 8), uint8], Tensor[(24, 6), float32], Tensor[(1568), float32], Tensor[(40, 12), float32], Tensor[(416), uint64]) {
  %834 = cast(%var_6458, dtype="float32") /* ty=Tensor[(416), float32] */;
  %835 = @func_6064() /* ty=Tensor[(12, 15, 8), float32] */;
  %836 = cast(%var_6469, dtype="uint8") /* ty=Tensor[(12, 15, 8), uint8] */;
  %837 = shape_of(%835, dtype="int32") /* ty=Tensor[(3), int32] */;
  %838 = cast(%835, dtype="uint8") /* ty=Tensor[(12, 15, 8), uint8] */;
  %839 = dyn.reshape(%836, %837, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %840 = cast(%var_6477, dtype="float32") /* ty=Tensor[(1568), float32] */;
  %841 = cast(meta[relay.Constant][46] /* ty=Tensor[(40, 12), float32] */, dtype="float32") /* ty=Tensor[(40, 12), float32] */;
  %842 = reshape(%840, newshape=[1568]) /* ty=Tensor[(1568), float32] */;
  %843 = reshape(%841, newshape=[10, 8, 6]) /* ty=Tensor[(10, 8, 6), float32] */;
  %844 = @func_2741(%842, %843) /* ty=(Tensor[(56), float64], Tensor[(14, 14, 8), float64], Tensor[(1568), float32], Tensor[(480), float32], Tensor[(144), float32], Tensor[(24, 6), float32], Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), float32], Tensor[(10, 8, 6), float64]) */;
  %845 = cast(%var_6458, dtype="int16") /* ty=Tensor[(416), int16] */;
  %846 = reshape(%845, newshape=[416]) /* ty=Tensor[(416), int16] */;
  %847 = @func_2323(%846) /* ty=(Tensor[(14, 14, 8), float32], Tensor[(10, 8, 11), float64], Tensor[(416), int16], Tensor[(8, 13, 4), float32]) */;
  %848 = %847.2;
  %849 = cast(%848, dtype="uint64") /* ty=Tensor[(416), uint64] */;
  %850 = shape_of(%var_6458, dtype="int32") /* ty=Tensor[(1), int32] */;
  %851 = cast(%var_6458, dtype="uint64") /* ty=Tensor[(416), uint64] */;
  %852 = dyn.reshape(%849, %850, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %853 = acos(%834) /* ty=Tensor[(416), float32] */;
  %854 = minimum(%838, %839) /* ty=Tensor[(12, 15, 8), uint8] */;
  %855 = %844.5;
  %856 = bitwise_or(%851, %852) /* ty=Tensor[(416), uint64] */;
  (%853, %854, %855, %var_6477, meta[relay.Constant][46] /* ty=Tensor[(40, 12), float32] */, %856)
}

def @func_3004(%var_3002: Tensor[(13, 15, 9), float32], %var_3003: Tensor[(2160), float32]) -> (Tensor[(13, 15, 9), float32], Tensor[(10, 8, 6), int16], Tensor[(1485), float64], Tensor[(14, 4), float64], Tensor[(12, 12, 15), float32], Tensor[(2160), float32]) {
  %871 = fn (%var_2978: Tensor[(13, 15, 9), float32], %var_2990: Tensor[(2160), float32]) -> (Tensor[(13, 15, 9), float32], Tensor[(10, 8, 6), int16], Tensor[(1485), float64], Tensor[(14, 4), float64], Tensor[(12, 12, 15), float32], Tensor[(2160), float32]) {
    %857 = cast(%var_2978, dtype="float32") /* ty=Tensor[(13, 15, 9), float32] */;
    %858 = cast(meta[relay.Constant][47] /* ty=Tensor[(1485), float64] */, dtype="float64") /* ty=Tensor[(1485), float64] */;
    %859 = cast(meta[relay.Constant][48] /* ty=Tensor[(14, 4), float64] */, dtype="float64") /* ty=Tensor[(14, 4), float64] */;
    %860 = cast(meta[relay.Constant][47] /* ty=Tensor[(1485), float64] */, dtype="bool") /* ty=Tensor[(1485), bool] */;
    %861 = reshape(%858, newshape=[1485]) /* ty=Tensor[(1485), float64] */;
    %862 = reshape(%859, newshape=[56]) /* ty=Tensor[(56), float64] */;
    %863 = reshape(%860, newshape=[15, 9, 11]) /* ty=Tensor[(15, 9, 11), bool] */;
    %864 = @func_1291(%861, %862, %863) /* ty=(Tensor[(13, 12, 1), bool], Tensor[(1485), float64], Tensor[(56), float64], Tensor[(11, 6, 13), float32], Tensor[(858), float32], Tensor[(15, 9, 11), uint16], Tensor[(15, 9, 11), uint32], Tensor[(10, 8, 6), int16], Tensor[(480), float32], Tensor[(429, 2), float32]) */;
    %865 = cast(%var_2990, dtype="float32") /* ty=Tensor[(2160), float32] */;
    %866 = reshape(%865, newshape=[12, 12, 15]) /* ty=Tensor[(12, 12, 15), float32] */;
    %867 = @func_2894(%866) /* ty=(Tensor[(12, 12, 15), float32],) */;
    %868 = log10(%857) /* ty=Tensor[(13, 15, 9), float32] */;
    %869 = %864.7;
    %870 = %867.0;
    (%868, %869, meta[relay.Constant][47] /* ty=Tensor[(1485), float64] */, meta[relay.Constant][48] /* ty=Tensor[(14, 4), float64] */, %870, %var_2990)
  };
  %871(%var_3002, %var_3003) /* ty=(Tensor[(13, 15, 9), float32], Tensor[(10, 8, 6), int16], Tensor[(1485), float64], Tensor[(14, 4), float64], Tensor[(12, 12, 15), float32], Tensor[(2160), float32]) */
}

def @func_5101() -> (Tensor[(16, 15, 7), float64],) {
  @func_5099() /* ty=(Tensor[(16, 15, 7), float64],) */
}

def @func_1596(%var_1593: Tensor[(144), float32], %var_1594: Tensor[(416), int16], %var_1595: Tensor[(14, 14, 8), float32]) -> (Tensor[(8, 2, 9), float32], Tensor[(144), float32], Tensor[(416), int16], Tensor[(14, 14, 8), bool], Tensor[(14, 14, 8), uint32], Tensor[(8, 13, 4), int64]) {
  @func_1591(%var_1593, %var_1594, %var_1595) /* ty=(Tensor[(8, 2, 9), float32], Tensor[(144), float32], Tensor[(416), int16], Tensor[(14, 14, 8), bool], Tensor[(14, 14, 8), uint32], Tensor[(8, 13, 4), int64]) */
}

def @func_8373() -> (Tensor[(14, 14, 8), float32],) {
  @func_8371() /* ty=(Tensor[(14, 14, 8), float32],) */
}

def @func_6561(%var_6533: Tensor[(8, 8, 1), float64], %var_6534: Tensor[(8, 8, 11), float64], %var_6543: Tensor[(1568), float32]) -> (Tensor[(8, 8, 11), float64], Tensor[(14, 14, 8), float32], Tensor[(1568), float32]) {
  %872 = cast(%var_6533, dtype="float64") /* ty=Tensor[(8, 8, 1), float64] */;
  %873 = cast(%var_6534, dtype="float64") /* ty=Tensor[(8, 8, 11), float64] */;
  %874 = cast(%var_6543, dtype="float32") /* ty=Tensor[(1568), float32] */;
  %875 = reshape(%874, newshape=[14, 14, 8]) /* ty=Tensor[(14, 14, 8), float32] */;
  %876 = subtract(%872, %873) /* ty=Tensor[(8, 8, 11), float64] */;
  %877 = @func_4751(%875) /* ty=Tensor[(14, 14, 8), float32] */;
  (%876, %877, %var_6543)
}

def @func_3917() -> (Tensor[(2, 7, 4), float64],) {
  %878 = @func_2463() /* ty=(Tensor[(2, 7, 4), float64], Tensor[(10, 8, 11), float64], Tensor[(2, 7, 4), float64]) */;
  %879 = %878.0;
  (%879,)
}

def @func_4527(%var_4525: Tensor[(240, 2), float32]) -> (Tensor[(14, 14, 8), float32], Tensor[(10, 8, 6), int16], Tensor[(240, 2), float32], Tensor[(14, 14, 8), float32]) {
  @func_4524(%var_4525) /* ty=(Tensor[(14, 14, 8), float32], Tensor[(10, 8, 6), int16], Tensor[(240, 2), float32], Tensor[(14, 14, 8), float32]) */
}

def @func_7448() -> (Tensor[(3, 2, 9), float32], Tensor[(14, 14, 8), float64], Tensor[(14, 14, 8), float32]) {
  %885 = fn () -> (Tensor[(3, 2, 9), float32], Tensor[(14, 14, 8), float64], Tensor[(14, 14, 8), float32]) {
    %880 = @func_5625() /* ty=(Tensor[(14, 14, 8), float32], Tensor[(3, 2, 9), float32], Tensor[(54), float32], Tensor[(14, 14, 8), float64]) */;
    %881 = @func_5696() /* ty=(Tensor[(2, 7, 4), float64], Tensor[(14, 14, 8), float32]) */;
    %882 = %880.1;
    %883 = @func_7247() /* ty=Tensor[(14, 14, 8), float64] */;
    %884 = %881.1;
    (%882, %883, %884)
  };
  %885() /* ty=(Tensor[(3, 2, 9), float32], Tensor[(14, 14, 8), float64], Tensor[(14, 14, 8), float32]) */
}

def @func_4149() -> (Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), float64], Tensor[(14, 14, 8), int8], Tensor[(2, 7, 4), uint8]) {
  @func_4147() /* ty=(Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), float64], Tensor[(14, 14, 8), int8], Tensor[(2, 7, 4), uint8]) */
}

def @func_1663() -> Tensor[(14, 14, 8), float32] {
  @func_1661() /* ty=Tensor[(14, 14, 8), float32] */
}

def @func_625(%var_623: Tensor[(10, 8, 6), float32]) -> (Tensor[(10, 8, 6), int16],) {
  @func_622(%var_623) /* ty=(Tensor[(10, 8, 6), int16],) */
}

def @func_2195() -> (Tensor[(10, 8, 11), float64],) {
  @func_2193() /* ty=(Tensor[(10, 8, 11), float64],) */
}

def @func_2570(%var_2568: Tensor[(416), int16]) -> (Tensor[(14, 14, 8), float32], Tensor[(144), float32], Tensor[(144), float32], Tensor[(416), int16]) {
  @func_2567(%var_2568) /* ty=(Tensor[(14, 14, 8), float32], Tensor[(144), float32], Tensor[(144), float32], Tensor[(416), int16]) */
}

def @func_5512() -> Tensor[(14, 14, 8), float64] {
  %886 = fn () -> Tensor[(14, 14, 8), float64] {
    @func_4552() /* ty=Tensor[(14, 14, 8), float64] */
  };
  %886() /* ty=Tensor[(14, 14, 8), float64] */
}

def @func_2567(%var_2562: Tensor[(416), int16]) -> (Tensor[(14, 14, 8), float32], Tensor[(144), float32], Tensor[(144), float32], Tensor[(416), int16]) {
  %887 = cast(meta[relay.Constant][49] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %888 = cast(%var_2562, dtype="int16") /* ty=Tensor[(416), int16] */;
  %889 = @func_1661() /* ty=Tensor[(14, 14, 8), float32] */;
  %890 = cast(%889, dtype="float32") /* ty=Tensor[(14, 14, 8), float32] */;
  %891 = reshape(%887, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %892 = reshape(%888, newshape=[416]) /* ty=Tensor[(416), int16] */;
  %893 = reshape(%890, newshape=[14, 14, 8]) /* ty=Tensor[(14, 14, 8), float32] */;
  %894 = @func_1591(%891, %892, %893) /* ty=(Tensor[(8, 2, 9), float32], Tensor[(144), float32], Tensor[(416), int16], Tensor[(14, 14, 8), bool], Tensor[(14, 14, 8), uint32], Tensor[(8, 13, 4), int64]) */;
  %895 = %894.1;
  (%889, %895, meta[relay.Constant][49] /* ty=Tensor[(144), float32] */, %var_2562)
}

def @func_6867(%var_6836: Tensor[(12, 13, 1), float32], %var_6848: Tensor[(480), float32]) -> (Tensor[(12, 13, 3), float32], Tensor[(144), float32], Tensor[(480), float32], Tensor[(14, 14, 8), float32]) {
  %896 = cast(%var_6836, dtype="float32") /* ty=Tensor[(12, 13, 1), float32] */;
  %897 = cast(meta[relay.Constant][50] /* ty=Tensor[(12, 13, 3), float32] */, dtype="float32") /* ty=Tensor[(12, 13, 3), float32] */;
  %898 = cast(%var_6848, dtype="float32") /* ty=Tensor[(480), float32] */;
  %899 = reshape(%898, newshape=[480]) /* ty=Tensor[(480), float32] */;
  %900 = @func_4049(%899) /* ty=(Tensor[(144), float32], Tensor[(14, 14, 8), bool], Tensor[(10, 8, 6), int16], Tensor[(480), float32]) */;
  %901 = %900.0;
  %902 = cast(%901, dtype="float32") /* ty=Tensor[(144), float32] */;
  %903 = reshape(%902, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %904 = @func_2101(%903) /* ty=(Tensor[(14, 14, 8), float32], Tensor[(8, 2, 9), float32], Tensor[(144), float32]) */;
  %905 = power(%896, %897) /* ty=Tensor[(12, 13, 3), float32] */;
  %906 = %904.0;
  (%905, %901, %var_6848, %906)
}

def @func_4656(%var_4643: Tensor[(780), bool]) -> (Tensor[(14, 14, 8), float64], Tensor[(15, 13, 4), bool], Tensor[(780), bool]) {
  %907 = @func_4255() /* ty=(Tensor[(14, 14, 8), float64], Tensor[(416), int16], Tensor[(144), float32], Tensor[(2, 208), int16]) */;
  %908 = cast(%var_4643, dtype="bool") /* ty=Tensor[(780), bool] */;
  %909 = cast(%var_4643, dtype="bool") /* ty=Tensor[(780), bool] */;
  %910 = reshape(%908, newshape=[15, 13, 4]) /* ty=Tensor[(15, 13, 4), bool] */;
  %911 = reshape(%909, newshape=[15, 13, 4]) /* ty=Tensor[(15, 13, 4), bool] */;
  %912 = @func_2957(%910, %911) /* ty=(Tensor[(15, 13, 4), bool],) */;
  %913 = %907.0;
  %914 = %912.0;
  (%913, %914, %var_4643)
}

def @func_1794(%var_1793: Tensor[(14, 14, 8), float32]) -> (Tensor[(14, 14, 8), uint32], Tensor[(14, 14, 8), float64]) {
  %923 = fn (%var_1774: Tensor[(14, 14, 8), float32]) -> (Tensor[(14, 14, 8), uint32], Tensor[(14, 14, 8), float64]) {
    %915 = @func_1661() /* ty=Tensor[(14, 14, 8), float32] */;
    %916 = cast(%var_1774, dtype="uint32") /* ty=Tensor[(14, 14, 8), uint32] */;
    %917 = shape_of(%915, dtype="int32") /* ty=Tensor[(3), int32] */;
    %918 = cast(%915, dtype="uint32") /* ty=Tensor[(14, 14, 8), uint32] */;
    %919 = dyn.reshape(%916, %917, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %920 = cast(%915, dtype="float64") /* ty=Tensor[(14, 14, 8), float64] */;
    %921 = logical_xor(%918, %919) /* ty=Tensor[(14, 14, 8), uint32] */;
    %922 = log10(%920) /* ty=Tensor[(14, 14, 8), float64] */;
    (%921, %922)
  };
  %923(%var_1793) /* ty=(Tensor[(14, 14, 8), uint32], Tensor[(14, 14, 8), float64]) */
}

def @func_4052(%var_4050: Tensor[(480), float32]) -> (Tensor[(144), float32], Tensor[(14, 14, 8), bool], Tensor[(10, 8, 6), int16], Tensor[(480), float32]) {
  @func_4049(%var_4050) /* ty=(Tensor[(144), float32], Tensor[(14, 14, 8), bool], Tensor[(10, 8, 6), int16], Tensor[(480), float32]) */
}

def @func_3553() -> (Tensor[(2, 7, 4), float64],) {
  @func_3551() /* ty=(Tensor[(2, 7, 4), float64],) */
}

def @func_4708(%var_4671: Tensor[(2, 7, 4), float32], %var_4694: Tensor[(2, 7, 4), float32]) -> (Tensor[(2, 7, 4), float32], Tensor[(2, 7, 4), bool], Tensor[(14, 14, 8), float32]) {
  %924 = @func_3224() /* ty=(Tensor[(2, 7, 4), float32],) */;
  %925 = %924.0;
  %926 = cast(%var_4671, dtype="float32") /* ty=Tensor[(2, 7, 4), float32] */;
  %927 = shape_of(%925, dtype="int32") /* ty=Tensor[(3), int32] */;
  %928 = cast(%925, dtype="float32") /* ty=Tensor[(2, 7, 4), float32] */;
  %929 = dyn.reshape(%926, %927, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %930 = cast(%var_4694, dtype="bool") /* ty=Tensor[(2, 7, 4), bool] */;
  %931 = shape_of(%var_4671, dtype="int32") /* ty=Tensor[(3), int32] */;
  %932 = cast(%var_4671, dtype="bool") /* ty=Tensor[(2, 7, 4), bool] */;
  %933 = dyn.reshape(%930, %931, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %934 = @func_1902() /* ty=(Tensor[(14, 14, 8), int8], Tensor[(14, 14, 8), float32]) */;
  %935 = maximum(%928, %929) /* ty=Tensor[(2, 7, 4), float32] */;
  %936 = equal(%932, %933) /* ty=Tensor[(2, 7, 4), bool] */;
  %937 = %934.1;
  (%935, %936, %937)
}

def @func_4960(%var_4959: Tensor[(784, 2), float32]) -> (Tensor[(784, 2), bool], Tensor[(14, 14, 8), float32], Tensor[(1430), float32]) {
  %954 = fn (%var_4925: Tensor[(784, 2), float32]) -> (Tensor[(784, 2), bool], Tensor[(14, 14, 8), float32], Tensor[(1430), float32]) {
    %938 = @func_3148() /* ty=(Tensor[(144), float32], Tensor[(144), float32], Tensor[(416), int16], Tensor[(784, 2), float32], Tensor[(14, 14, 8), int8]) */;
    %939 = %938.3;
    %940 = cast(%var_4925, dtype="int8") /* ty=Tensor[(784, 2), int8] */;
    %941 = shape_of(%939, dtype="int32") /* ty=Tensor[(2), int32] */;
    %942 = cast(%939, dtype="int8") /* ty=Tensor[(784, 2), int8] */;
    %943 = dyn.reshape(%940, %941, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
    %944 = maximum(%942, %943) /* ty=Tensor[(784, 2), int8] */;
    %945 = cast(%944, dtype="bool") /* ty=Tensor[(784, 2), bool] */;
    %946 = shape_of(%939, dtype="int32") /* ty=Tensor[(2), int32] */;
    %947 = cast(%939, dtype="bool") /* ty=Tensor[(784, 2), bool] */;
    %948 = dyn.reshape(%945, %946, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %949 = cast(meta[relay.Constant][51] /* ty=Tensor[(1430), float32] */, dtype="float32") /* ty=Tensor[(1430), float32] */;
    %950 = reshape(%949, newshape=[1, 1430]) /* ty=Tensor[(1, 1430), float32] */;
    %951 = @func_2544(%950) /* ty=(Tensor[(14, 14, 8), float32], Tensor[(11, 10, 13), float32], Tensor[(1, 1430), float32]) */;
    %952 = greater(%947, %948) /* ty=Tensor[(784, 2), bool] */;
    %953 = %951.0;
    (%952, %953, meta[relay.Constant][51] /* ty=Tensor[(1430), float32] */)
  };
  %954(%var_4959) /* ty=(Tensor[(784, 2), bool], Tensor[(14, 14, 8), float32], Tensor[(1430), float32]) */
}

def @func_5243() -> (Tensor[(14, 14, 8), float64], Tensor[(2, 7, 4), float64], Tensor[(12, 12, 15), float32], Tensor[(180, 12), float32]) {
  %955 = @func_2249() /* ty=(Tensor[(2, 7, 4), float64],) */;
  %956 = cast(meta[relay.Constant][52] /* ty=Tensor[(180, 12), float32] */, dtype="float32") /* ty=Tensor[(180, 12), float32] */;
  %957 = reshape(%956, newshape=[12, 12, 15]) /* ty=Tensor[(12, 12, 15), float32] */;
  %958 = @func_2894(%957) /* ty=(Tensor[(12, 12, 15), float32],) */;
  %959 = @func_4552() /* ty=Tensor[(14, 14, 8), float64] */;
  %960 = %955.0;
  %961 = %958.0;
  (%959, %960, %961, meta[relay.Constant][52] /* ty=Tensor[(180, 12), float32] */)
}

def @func_3936(%var_3934: Tensor[(6, 2, 12), float64]) -> (Tensor[(6, 2, 12), float64],) {
  @func_3933(%var_3934) /* ty=(Tensor[(6, 2, 12), float64],) */
}

def @func_5626() -> (Tensor[(14, 14, 8), float32], Tensor[(3, 2, 9), float32], Tensor[(54), float32], Tensor[(14, 14, 8), float64]) {
  %968 = fn () -> (Tensor[(14, 14, 8), float32], Tensor[(3, 2, 9), float32], Tensor[(54), float32], Tensor[(14, 14, 8), float64]) {
    %962 = cast(meta[relay.Constant][53] /* ty=Tensor[(54), float32] */, dtype="float32") /* ty=Tensor[(54), float32] */;
    %963 = reshape(%962, newshape=[3, 2, 9]) /* ty=Tensor[(3, 2, 9), float32] */;
    %964 = @func_3208(%963) /* ty=(Tensor[(3, 2, 9), float32], Tensor[(2, 7, 4), float64]) */;
    %965 = @func_1505() /* ty=Tensor[(14, 14, 8), float32] */;
    %966 = %964.0;
    %967 = @func_3442() /* ty=Tensor[(14, 14, 8), float64] */;
    (%965, %966, meta[relay.Constant][53] /* ty=Tensor[(54), float32] */, %967)
  };
  %968() /* ty=(Tensor[(14, 14, 8), float32], Tensor[(3, 2, 9), float32], Tensor[(54), float32], Tensor[(14, 14, 8), float64]) */
}

def @func_5698() -> (Tensor[(2, 7, 4), float64], Tensor[(14, 14, 8), float32]) {
  @func_5696() /* ty=(Tensor[(2, 7, 4), float64], Tensor[(14, 14, 8), float32]) */
}

def @func_1934() -> (Tensor[(14, 14, 8), float64],) {
  @func_1932() /* ty=(Tensor[(14, 14, 8), float64],) */
}

def @func_6965(%var_6928: Tensor[(1568), int8], %var_6937: Tensor[(416), int16]) -> (Tensor[(2, 7, 4), float64], Tensor[(14, 14, 8), bool], Tensor[(1568), int8], Tensor[(14, 14, 8), int8], Tensor[(416), int16], Tensor[(14, 14, 8), int8], Tensor[(144), float32], Tensor[(630), float32]) {
  %969 = @func_3917() /* ty=(Tensor[(2, 7, 4), float64],) */;
  %970 = cast(%var_6928, dtype="int8") /* ty=Tensor[(1568), int8] */;
  %971 = reshape(%970, newshape=[14, 14, 8]) /* ty=Tensor[(14, 14, 8), int8] */;
  %972 = @func_3305(%971) /* ty=(Tensor[(14, 14, 8), bool],) */;
  %973 = cast(%var_6937, dtype="int16") /* ty=Tensor[(416), int16] */;
  %974 = reshape(%973, newshape=[4, 104]) /* ty=Tensor[(4, 104), int16] */;
  %975 = @func_3525(%974) /* ty=(Tensor[(14, 14, 8), int8], Tensor[(144), float32], Tensor[(4, 104), int16], Tensor[(2, 28), float64]) */;
  %976 = cast(%var_6937, dtype="int16") /* ty=Tensor[(416), int16] */;
  %977 = cast(meta[relay.Constant][54] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %978 = cast(meta[relay.Constant][55] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
  %979 = reshape(%976, newshape=[8, 52]) /* ty=Tensor[(8, 52), int16] */;
  %980 = reshape(%977, newshape=[2, 72]) /* ty=Tensor[(2, 72), float32] */;
  %981 = reshape(%978, newshape=[630]) /* ty=Tensor[(630), float32] */;
  %982 = @func_5182(%979, %980, %981) /* ty=(Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), int8], Tensor[(8, 52), int16], Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), float64], Tensor[(72, 2), float32], Tensor[(2, 72), float32], Tensor[(15, 3, 14), bool], Tensor[(630), float32]) */;
  %983 = %969.0;
  %984 = %972.0;
  %985 = %975.0;
  %986 = %982.1;
  (%983, %984, %var_6928, %985, %var_6937, %986, meta[relay.Constant][54] /* ty=Tensor[(144), float32] */, meta[relay.Constant][55] /* ty=Tensor[(630), float32] */)
}

def @func_5793() -> Tensor[(14, 14, 8), float32] {
  @func_5791() /* ty=Tensor[(14, 14, 8), float32] */
}

def @func_3478(%var_3477: Tensor[(15, 3, 14), float32]) -> (Tensor[(15, 3, 14), bool],) {
  %992 = fn (%var_3470: Tensor[(15, 3, 14), float32]) -> (Tensor[(15, 3, 14), bool],) {
    %987 = cast(%var_3470, dtype="bool") /* ty=Tensor[(15, 3, 14), bool] */;
    %988 = shape_of(meta[relay.Constant][56] /* ty=Tensor[(15, 3, 14), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %989 = cast(meta[relay.Constant][56] /* ty=Tensor[(15, 3, 14), float32] */, dtype="bool") /* ty=Tensor[(15, 3, 14), bool] */;
    %990 = dyn.reshape(%987, %988, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %991 = greater_equal(%989, %990) /* ty=Tensor[(15, 3, 14), bool] */;
    (%991,)
  };
  %992(%var_3477) /* ty=(Tensor[(15, 3, 14), bool],) */
}

def @func_3551() -> (Tensor[(2, 7, 4), float64],) {
  %993 = @func_2249() /* ty=(Tensor[(2, 7, 4), float64],) */;
  %994 = %993.0;
  (%994,)
}

def @func_2464() -> (Tensor[(2, 7, 4), float64], Tensor[(10, 8, 11), float64], Tensor[(2, 7, 4), float64]) {
  %1008 = fn () -> (Tensor[(2, 7, 4), float64], Tensor[(10, 8, 11), float64], Tensor[(2, 7, 4), float64]) {
    %995 = @func_2171() /* ty=(Tensor[(14, 14, 8), float32], Tensor[(2, 7, 4), float64], Tensor[(56), float64]) */;
    %996 = @func_2193() /* ty=(Tensor[(10, 8, 11), float64],) */;
    %997 = @func_2171() /* ty=(Tensor[(14, 14, 8), float32], Tensor[(2, 7, 4), float64], Tensor[(56), float64]) */;
    %998 = %997.1;
    %999 = cast(%998, dtype="float32") /* ty=Tensor[(2, 7, 4), float32] */;
    %1000 = rsqrt(%999) /* ty=Tensor[(2, 7, 4), float32] */;
    %1001 = cast(%998, dtype="float64") /* ty=Tensor[(2, 7, 4), float64] */;
    %1002 = shape_of(%1000, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1003 = cast(%1000, dtype="float64") /* ty=Tensor[(2, 7, 4), float64] */;
    %1004 = dyn.reshape(%1001, %1002, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1005 = %995.1;
    %1006 = %996.0;
    %1007 = floor_mod(%1003, %1004) /* ty=Tensor[(2, 7, 4), float64] */;
    (%1005, %1006, %1007)
  };
  %1008() /* ty=(Tensor[(2, 7, 4), float64], Tensor[(10, 8, 11), float64], Tensor[(2, 7, 4), float64]) */
}

def @func_3211(%var_3209: Tensor[(3, 2, 9), float32]) -> (Tensor[(3, 2, 9), float32], Tensor[(2, 7, 4), float64]) {
  @func_3208(%var_3209) /* ty=(Tensor[(3, 2, 9), float32], Tensor[(2, 7, 4), float64]) */
}

def @func_2193() -> (Tensor[(10, 8, 11), float64],) {
  %1009 = cast(meta[relay.Constant][57] /* ty=Tensor[(10, 8, 11), float64] */, dtype="float64") /* ty=Tensor[(10, 8, 11), float64] */;
  %1010 = atan(%1009) /* ty=Tensor[(10, 8, 11), float64] */;
  (%1010,)
}

def @func_3757(%var_3753: Tensor[(16, 26), int16]) -> (Tensor[(14, 14, 8), float32], Tensor[(1, 144), float32], Tensor[(144), float32], Tensor[(16, 26), int16]) {
  %1011 = @func_1661() /* ty=Tensor[(14, 14, 8), float32] */;
  %1012 = cast(%1011, dtype="float32") /* ty=Tensor[(14, 14, 8), float32] */;
  %1013 = cast(meta[relay.Constant][58] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %1014 = cast(%var_3753, dtype="int16") /* ty=Tensor[(16, 26), int16] */;
  %1015 = reshape(%1012, newshape=[14, 14, 8]) /* ty=Tensor[(14, 14, 8), float32] */;
  %1016 = reshape(%1013, newshape=[1, 144]) /* ty=Tensor[(1, 144), float32] */;
  %1017 = reshape(%1014, newshape=[416]) /* ty=Tensor[(416), int16] */;
  %1018 = @func_3611(%1015, %1016, %1017) /* ty=(Tensor[(14, 14, 8), bool], Tensor[(8, 13, 4), int64], Tensor[(1, 144), float32], Tensor[(416), int16]) */;
  %1019 = %1018.2;
  (%1011, %1019, meta[relay.Constant][58] /* ty=Tensor[(144), float32] */, %var_3753)
}

def @func_1902() -> (Tensor[(14, 14, 8), int8], Tensor[(14, 14, 8), float32]) {
  %1020 = @func_1661() /* ty=Tensor[(14, 14, 8), float32] */;
  %1021 = cast(meta[relay.Constant][59] /* ty=Tensor[(14, 14, 8), float32] */, dtype="int8") /* ty=Tensor[(14, 14, 8), int8] */;
  %1022 = shape_of(%1020, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1023 = cast(%1020, dtype="int8") /* ty=Tensor[(14, 14, 8), int8] */;
  %1024 = dyn.reshape(%1021, %1022, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1025 = multiply(%1023, %1024) /* ty=Tensor[(14, 14, 8), int8] */;
  %1026 = @func_1661() /* ty=Tensor[(14, 14, 8), float32] */;
  (%1025, %1026)
}

def @func_4712(%var_4710: Tensor[(2, 7, 4), float32], %var_4711: Tensor[(2, 7, 4), float32]) -> (Tensor[(2, 7, 4), float32], Tensor[(2, 7, 4), bool], Tensor[(14, 14, 8), float32]) {
  @func_4708(%var_4710, %var_4711) /* ty=(Tensor[(2, 7, 4), float32], Tensor[(2, 7, 4), bool], Tensor[(14, 14, 8), float32]) */
}

def @func_7907() -> Tensor[(144), float32] {
  %1027 = @func_4255() /* ty=(Tensor[(14, 14, 8), float64], Tensor[(416), int16], Tensor[(144), float32], Tensor[(2, 208), int16]) */;
  %1027.2
}

def @func_6066() -> Tensor[(12, 15, 8), float32] {
  @func_6064() /* ty=Tensor[(12, 15, 8), float32] */
}

def @func_622(%var_610: Tensor[(10, 8, 6), float32]) -> (Tensor[(10, 8, 6), int16],) {
  %1028 = cast(%var_610, dtype="float32") /* ty=Tensor[(10, 8, 6), float32] */;
  %1029 = tan(%1028) /* ty=Tensor[(10, 8, 6), float32] */;
  %1030 = cast(%var_610, dtype="int16") /* ty=Tensor[(10, 8, 6), int16] */;
  %1031 = shape_of(%1029, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1032 = cast(%1029, dtype="int16") /* ty=Tensor[(10, 8, 6), int16] */;
  %1033 = dyn.reshape(%1030, %1031, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1034 = bitwise_or(%1032, %1033) /* ty=Tensor[(10, 8, 6), int16] */;
  (%1034,)
}

def @func_6901() -> (Tensor[(2, 7, 4), float32], Tensor[(6, 2, 12), float64], Tensor[(8, 18), float64]) {
  %1035 = @func_3224() /* ty=(Tensor[(2, 7, 4), float32],) */;
  %1036 = cast(meta[relay.Constant][60] /* ty=Tensor[(8, 18), float64] */, dtype="float64") /* ty=Tensor[(8, 18), float64] */;
  %1037 = reshape(%1036, newshape=[6, 2, 12]) /* ty=Tensor[(6, 2, 12), float64] */;
  %1038 = @func_3933(%1037) /* ty=(Tensor[(6, 2, 12), float64],) */;
  %1039 = %1035.0;
  %1040 = %1038.0;
  (%1039, %1040, meta[relay.Constant][60] /* ty=Tensor[(8, 18), float64] */)
}

def @func_4553() -> Tensor[(14, 14, 8), float64] {
  %1042 = fn () -> Tensor[(14, 14, 8), float64] {
    %1041 = @func_2914() /* ty=(Tensor[(14, 14, 8), float64],) */;
    %1041.0
  };
  %1042() /* ty=Tensor[(14, 14, 8), float64] */
}

def @func_7618() -> (Tensor[(14, 14, 8), float64], Tensor[(14, 14, 8), float64], Tensor[(14, 14, 8), float64], Tensor[(11, 6, 13), float32], Tensor[(1485), float64], Tensor[(56), float64]) {
  @func_7616() /* ty=(Tensor[(14, 14, 8), float64], Tensor[(14, 14, 8), float64], Tensor[(14, 14, 8), float64], Tensor[(11, 6, 13), float32], Tensor[(1485), float64], Tensor[(56), float64]) */
}

def @func_6969(%var_6967: Tensor[(1568), int8], %var_6968: Tensor[(416), int16]) -> (Tensor[(2, 7, 4), float64], Tensor[(14, 14, 8), bool], Tensor[(1568), int8], Tensor[(14, 14, 8), int8], Tensor[(416), int16], Tensor[(14, 14, 8), int8], Tensor[(144), float32], Tensor[(630), float32]) {
  @func_6965(%var_6967, %var_6968) /* ty=(Tensor[(2, 7, 4), float64], Tensor[(14, 14, 8), bool], Tensor[(1568), int8], Tensor[(14, 14, 8), int8], Tensor[(416), int16], Tensor[(14, 14, 8), int8], Tensor[(144), float32], Tensor[(630), float32]) */
}

def @func_7909() -> Tensor[(144), float32] {
  @func_7907() /* ty=Tensor[(144), float32] */
}

def @func_7920() -> (Tensor[(14, 14, 8), float64],) {
  @func_7918() /* ty=(Tensor[(14, 14, 8), float64],) */
}

def @func_6662(%var_6655: Tensor[(780), bool]) -> (Tensor[(14, 14, 8), float64], Tensor[(14, 14, 8), float32], Tensor[(1430), float32], Tensor[(15, 13, 4), bool], Tensor[(780), bool]) {
  %1043 = @func_6303() /* ty=(Tensor[(14, 14, 8), float64],) */;
  %1044 = cast(meta[relay.Constant][61] /* ty=Tensor[(1430), float32] */, dtype="float32") /* ty=Tensor[(1430), float32] */;
  %1045 = reshape(%1044, newshape=[11, 130]) /* ty=Tensor[(11, 130), float32] */;
  %1046 = @func_4411(%1045) /* ty=(Tensor[(14, 14, 8), float64], Tensor[(14, 14, 8), int8], Tensor[(2, 7, 4), float32], Tensor[(11, 130), float32], Tensor[(14, 14, 8), float32], Tensor[(8, 13, 4), int16], Tensor[(416), int16]) */;
  %1047 = cast(%var_6655, dtype="bool") /* ty=Tensor[(780), bool] */;
  %1048 = cast(%var_6655, dtype="bool") /* ty=Tensor[(780), bool] */;
  %1049 = reshape(%1047, newshape=[15, 13, 4]) /* ty=Tensor[(15, 13, 4), bool] */;
  %1050 = reshape(%1048, newshape=[15, 13, 4]) /* ty=Tensor[(15, 13, 4), bool] */;
  %1051 = @func_2957(%1049, %1050) /* ty=(Tensor[(15, 13, 4), bool],) */;
  %1052 = %1043.0;
  %1053 = %1046.4;
  %1054 = %1051.0;
  (%1052, %1053, meta[relay.Constant][61] /* ty=Tensor[(1430), float32] */, %1054, %var_6655)
}

def @func_29(%var_28: Tensor[(11, 6, 13), float32]) -> (Tensor[(11, 6, 13), float32],) {
  %1057 = fn (%var_17: Tensor[(11, 6, 13), float32]) -> (Tensor[(11, 6, 13), float32],) {
    %1055 = cast(%var_17, dtype="float32") /* ty=Tensor[(11, 6, 13), float32] */;
    %1056 = exp(%1055) /* ty=Tensor[(11, 6, 13), float32] */;
    (%1056,)
  };
  %1057(%var_28) /* ty=(Tensor[(11, 6, 13), float32],) */
}

def @func_8641() -> Tensor[(56), float64] {
  %1059 = fn () -> Tensor[(56), float64] {
    %1058 = @func_2171() /* ty=(Tensor[(14, 14, 8), float32], Tensor[(2, 7, 4), float64], Tensor[(56), float64]) */;
    %1058.2
  };
  %1059() /* ty=Tensor[(56), float64] */
}

def @func_3308(%var_3306: Tensor[(14, 14, 8), int8]) -> (Tensor[(14, 14, 8), bool],) {
  @func_3305(%var_3306) /* ty=(Tensor[(14, 14, 8), bool],) */
}

def @func_6365() -> (Tensor[(14, 14, 8), float64], Tensor[(416), int16]) {
  %1063 = fn () -> (Tensor[(14, 14, 8), float64], Tensor[(416), int16]) {
    %1060 = @func_3148() /* ty=(Tensor[(144), float32], Tensor[(144), float32], Tensor[(416), int16], Tensor[(784, 2), float32], Tensor[(14, 14, 8), int8]) */;
    %1061 = @func_3382() /* ty=Tensor[(14, 14, 8), float64] */;
    %1062 = %1060.2;
    (%1061, %1062)
  };
  %1063() /* ty=(Tensor[(14, 14, 8), float64], Tensor[(416), int16]) */
}

def @func_2627(%var_2624: Tensor[(144), float32], %var_2625: Tensor[(416), int16]) -> (Tensor[(14, 14, 8), float32], Tensor[(14, 14, 8), float64], Tensor[(144), float32], Tensor[(144), float32], Tensor[(416), int16]) {
  %1064 = @func_1488() /* ty=Tensor[(14, 14, 8), float32] */;
  %1065 = cast(%1064, dtype="float64") /* ty=Tensor[(14, 14, 8), float64] */;
  %1066 = atanh(%1065) /* ty=Tensor[(14, 14, 8), float64] */;
  %1067 = cast(%1066, dtype="float64") /* ty=Tensor[(14, 14, 8), float64] */;
  %1068 = cast(%var_2624, dtype="float32") /* ty=Tensor[(144), float32] */;
  %1069 = cast(%var_2625, dtype="int16") /* ty=Tensor[(416), int16] */;
  %1070 = cast(%1066, dtype="float32") /* ty=Tensor[(14, 14, 8), float32] */;
  %1071 = reshape(%1068, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %1072 = reshape(%1069, newshape=[416]) /* ty=Tensor[(416), int16] */;
  %1073 = reshape(%1070, newshape=[14, 14, 8]) /* ty=Tensor[(14, 14, 8), float32] */;
  %1074 = @func_1591(%1071, %1072, %1073) /* ty=(Tensor[(8, 2, 9), float32], Tensor[(144), float32], Tensor[(416), int16], Tensor[(14, 14, 8), bool], Tensor[(14, 14, 8), uint32], Tensor[(8, 13, 4), int64]) */;
  %1075 = @func_1661() /* ty=Tensor[(14, 14, 8), float32] */;
  %1076 = acosh(%1067) /* ty=Tensor[(14, 14, 8), float64] */;
  %1077 = %1074.1;
  (%1075, %1076, %1077, %var_2624, %var_2625)
}

def @func_7893(%var_7885: Tensor[(858, 15), float32]) -> Tensor[(858, 15), bool] {
  %1078 = @func_5394() /* ty=(Tensor[(14, 14, 8), float64], Tensor[(11, 6, 13), float32], Tensor[(858, 1), float32]) */;
  %1079 = %1078.2;
  %1080 = cast(%1079, dtype="bool") /* ty=Tensor[(858, 1), bool] */;
  %1081 = cast(%var_7885, dtype="bool") /* ty=Tensor[(858, 15), bool] */;
  equal(%1080, %1081) /* ty=Tensor[(858, 15), bool] */
}

def @func_3616(%var_3613: Tensor[(14, 14, 8), float32], %var_3614: Tensor[(1, 144), float32], %var_3615: Tensor[(416), int16]) -> (Tensor[(14, 14, 8), bool], Tensor[(8, 13, 4), int64], Tensor[(1, 144), float32], Tensor[(416), int16]) {
  @func_3611(%var_3613, %var_3614, %var_3615) /* ty=(Tensor[(14, 14, 8), bool], Tensor[(8, 13, 4), int64], Tensor[(1, 144), float32], Tensor[(416), int16]) */
}

def @func_5020(%var_4987: Tensor[(2, 7, 4), float64]) -> (Tensor[(2, 7, 4), float64], Tensor[(14, 14, 8), float32], Tensor[(1568), float32], Tensor[(8, 2, 9), float32]) {
  %1082 = @func_3917() /* ty=(Tensor[(2, 7, 4), float64],) */;
  %1083 = %1082.0;
  %1084 = cast(%var_4987, dtype="float64") /* ty=Tensor[(2, 7, 4), float64] */;
  %1085 = shape_of(%1083, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1086 = cast(%1083, dtype="float64") /* ty=Tensor[(2, 7, 4), float64] */;
  %1087 = dyn.reshape(%1084, %1085, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1088 = cast(meta[relay.Constant][62] /* ty=Tensor[(1568), float32] */, dtype="float32") /* ty=Tensor[(1568), float32] */;
  %1089 = reshape(%1088, newshape=[14, 14, 8]) /* ty=Tensor[(14, 14, 8), float32] */;
  %1090 = power(%1086, %1087) /* ty=Tensor[(2, 7, 4), float64] */;
  %1091 = @func_4751(%1089) /* ty=Tensor[(14, 14, 8), float32] */;
  %1092 = @func_4302() /* ty=Tensor[(8, 2, 9), float32] */;
  (%1090, %1091, meta[relay.Constant][62] /* ty=Tensor[(1568), float32] */, %1092)
}

def @func_4631() -> (Tensor[(14, 14, 8), float64],) {
  @func_4629() /* ty=(Tensor[(14, 14, 8), float64],) */
}

def @func_4659(%var_4657: Tensor[(780), bool]) -> (Tensor[(14, 14, 8), float64], Tensor[(15, 13, 4), bool], Tensor[(780), bool]) {
  @func_4656(%var_4657) /* ty=(Tensor[(14, 14, 8), float64], Tensor[(15, 13, 4), bool], Tensor[(780), bool]) */
}

def @func_5450() -> (Tensor[(14, 14, 8), float64],) {
  %1095 = fn () -> (Tensor[(14, 14, 8), float64],) {
    %1093 = @func_2914() /* ty=(Tensor[(14, 14, 8), float64],) */;
    %1094 = %1093.0;
    (%1094,)
  };
  %1095() /* ty=(Tensor[(14, 14, 8), float64],) */
}

def @func_3226() -> (Tensor[(2, 7, 4), float32],) {
  @func_3224() /* ty=(Tensor[(2, 7, 4), float32],) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

==========mod==========
#[version = "0.0.5"]
def @func_3682(%var_3650: Tensor[(1440), int32]) -> (Tensor[(14, 14, 13), float32], Tensor[(9, 10, 16), bool], Tensor[(1440), int32], Tensor[(14, 14, 13), float64]) {
  %0 = cast(meta[relay.Constant][1] /* ty=Tensor[(14, 14, 13), int32] */, dtype="int32") /* ty=Tensor[(14, 14, 13), int32] */;
  %1 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(14, 14, 13), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(14, 14, 13), int32] */, dtype="int32") /* ty=Tensor[(14, 14, 13), int32] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %4 = bitwise_or(%2, %3) /* ty=Tensor[(14, 14, 13), int32] */;
  %5 = cast(%4, dtype="float32") /* ty=Tensor[(14, 14, 13), float32] */;
  %6 = cast(%var_3650, dtype="int32") /* ty=Tensor[(1440), int32] */;
  %7 = cast(%var_3650, dtype="int32") /* ty=Tensor[(1440), int32] */;
  %8 = reshape(%6, newshape=[9, 10, 16]) /* ty=Tensor[(9, 10, 16), int32] */;
  %9 = reshape(%7, newshape=[9, 10, 16]) /* ty=Tensor[(9, 10, 16), int32] */;
  %10 = @func_3428(%8, %9) /* ty=(Tensor[(9, 10, 16), bool],) */;
  %11 = cast(meta[relay.Constant][0] /* ty=Tensor[(14, 14, 13), int32] */, dtype="float32") /* ty=Tensor[(14, 14, 13), float32] */;
  %12 = erf(%11) /* ty=Tensor[(14, 14, 13), float32] */;
  %13 = cast(%12, dtype="float64") /* ty=Tensor[(14, 14, 13), float64] */;
  %14 = log10(%5) /* ty=Tensor[(14, 14, 13), float32] */;
  %15 = %10.0;
  %16 = sigmoid(%13) /* ty=Tensor[(14, 14, 13), float64] */;
  (%14, %15, %var_3650, %16)
}

def @func_2871(%var_2764: Tensor[(12, 6, 7), float64], %var_2788: Tensor[(1456), float64], %var_2797: Tensor[(2304), int64], %var_2850: Tensor[(1344), float64]) -> (Tensor[(12, 6, 7), float64], Tensor[(900), float32], Tensor[(12, 6, 7), float32], Tensor[(7, 13, 16), float64], Tensor[(1456), float64], Tensor[(16, 9, 16), bool], Tensor[(2304), int64], Tensor[(16, 9, 16), bool], int64, Tensor[(1584), float64], Tensor[(12, 15, 5), float32], Tensor[(12, 7, 16), float64], Tensor[(1344), float64], Tensor[(7, 13, 16), float64]) {
  %17 = cast(9.68725f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %18 = cast(%var_2764, dtype="float64") /* ty=Tensor[(12, 6, 7), float64] */;
  %19 = cast(%var_2764, dtype="float32") /* ty=Tensor[(12, 6, 7), float32] */;
  %20 = cast(%var_2788, dtype="float64") /* ty=Tensor[(1456), float64] */;
  %21 = reshape(%20, newshape=[7, 13, 16]) /* ty=Tensor[(7, 13, 16), float64] */;
  %22 = cast(9.68725f64 /* ty=float64 */, dtype="int64") /* ty=int64 */;
  %23 = cast(%var_2797, dtype="int64") /* ty=Tensor[(2304), int64] */;
  %24 = reshape(%22, newshape=[]) /* ty=int64 */;
  %25 = reshape(%23, newshape=[16, 9, 16]) /* ty=Tensor[(16, 9, 16), int64] */;
  %26 = cast(9.68725f64 /* ty=float64 */, dtype="int64") /* ty=int64 */;
  %27 = @func_498(%24, %25) /* ty=Tensor[(16, 9, 16), bool] */;
  %28 = cast(%27, dtype="int64") /* ty=Tensor[(16, 9, 16), int64] */;
  %29 = reshape(%26, newshape=[]) /* ty=int64 */;
  %30 = reshape(%28, newshape=[16, 9, 16]) /* ty=Tensor[(16, 9, 16), int64] */;
  %31 = cast(meta[relay.Constant][3] /* ty=Tensor[(1584), float64] */, dtype="float64") /* ty=Tensor[(1584), float64] */;
  %32 = cast(9.68725f64 /* ty=float64 */, dtype="int64") /* ty=int64 */;
  %33 = @func_498(%29, %30) /* ty=Tensor[(16, 9, 16), bool] */;
  %34 = cast(%33, dtype="int64") /* ty=Tensor[(16, 9, 16), int64] */;
  %35 = reshape(%31, newshape=[16, 11, 9]) /* ty=Tensor[(16, 11, 9), float64] */;
  %36 = reshape(%32, newshape=[]) /* ty=int64 */;
  %37 = reshape(%34, newshape=[2304]) /* ty=Tensor[(2304), int64] */;
  %38 = @func_724(%35, %36, %37) /* ty=(Tensor[(16, 11, 9), float64], Tensor[(16, 9, 16), bool], int64, Tensor[(2304), int64], Tensor[(16, 9, 16), bool]) */;
  %39 = cast(meta[relay.Constant][2] /* ty=Tensor[(900), float32] */, dtype="float32") /* ty=Tensor[(900), float32] */;
  %40 = reshape(%39, newshape=[12, 15, 5]) /* ty=Tensor[(12, 15, 5), float32] */;
  %41 = @func_2493(%40) /* ty=(Tensor[(12, 15, 5), float32],) */;
  %42 = %41.0;
  %43 = cast(%42, dtype="float32") /* ty=Tensor[(12, 15, 5), float32] */;
  %44 = cast(%var_2850, dtype="float64") /* ty=Tensor[(1344), float64] */;
  %45 = reshape(%44, newshape=[12, 7, 16]) /* ty=Tensor[(12, 7, 16), float64] */;
  %46 = @func_1767(%45) /* ty=(Tensor[(12, 7, 16), float64],) */;
  %47 = @func_1680(%21) /* ty=Tensor[(7, 13, 16), float64] */;
  %48 = cast(%47, dtype="float64") /* ty=Tensor[(7, 13, 16), float64] */;
  %49 = reshape(%48, newshape=[7, 13, 16]) /* ty=Tensor[(7, 13, 16), float64] */;
  %50 = floor_divide(%17, %18) /* ty=Tensor[(12, 6, 7), float64] */;
  %51 = asin(%19) /* ty=Tensor[(12, 6, 7), float32] */;
  %52 = %38.2;
  %53 = erf(%43) /* ty=Tensor[(12, 15, 5), float32] */;
  %54 = %46.0;
  %55 = @func_1680(%49) /* ty=Tensor[(7, 13, 16), float64] */;
  (%50, meta[relay.Constant][2] /* ty=Tensor[(900), float32] */, %51, %47, %var_2788, %27, %var_2797, %33, %52, meta[relay.Constant][3] /* ty=Tensor[(1584), float64] */, %53, %54, %var_2850, %55)
}

def @func_8633(%var_8582: Tensor[(2730), int8]) -> (Tensor[(7, 12, 14), bool], Tensor[(13, 14, 15), int32], Tensor[(2730), int8], Tensor[(7, 12, 14), bool], Tensor[(3, 6, 1), float32]) {
  %56 = @func_7323() /* ty=(Tensor[(7, 12, 14), bool],) */;
  %57 = cast(%var_8582, dtype="int8") /* ty=Tensor[(2730), int8] */;
  %58 = cast(%var_8582, dtype="int8") /* ty=Tensor[(2730), int8] */;
  %59 = cast(%var_8582, dtype="bool") /* ty=Tensor[(2730), bool] */;
  %60 = reshape(%57, newshape=[13, 14, 15]) /* ty=Tensor[(13, 14, 15), int8] */;
  %61 = reshape(%58, newshape=[13, 14, 15]) /* ty=Tensor[(13, 14, 15), int8] */;
  %62 = reshape(%59, newshape=[13, 14, 15]) /* ty=Tensor[(13, 14, 15), bool] */;
  %63 = @func_6862(%60, %61, %62) /* ty=(Tensor[(13, 14, 15), int32],) */;
  %64 = @func_7369() /* ty=(Tensor[(7, 12, 14), bool],) */;
  %65 = @func_8297() /* ty=(Tensor[(3, 6, 14), int8], Tensor[(7, 12, 14), bool], Tensor[(3, 6, 1), float64], Tensor[(15, 11, 5), uint8], Tensor[(275, 3), uint8], Tensor[(7, 12, 14), float32], Tensor[(3, 6, 1), float32], Tensor[(13, 14, 15), int32], Tensor[(14, 195), int8], Tensor[(3, 6, 1), float32]) */;
  %66 = %56.0;
  %67 = %63.0;
  %68 = %64.0;
  %69 = %65.6;
  (%66, %67, %var_8582, %68, %69)
}

def @func_7101() -> (Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), float32]) {
  %70 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %71 = cast(meta[relay.Constant][4] /* ty=Tensor[(7, 12, 14), bool] */, dtype="bool") /* ty=Tensor[(7, 12, 14), bool] */;
  %72 = cast(meta[relay.Constant][4] /* ty=Tensor[(7, 12, 14), bool] */, dtype="float32") /* ty=Tensor[(7, 12, 14), float32] */;
  %73 = logical_and(%70, %71) /* ty=Tensor[(7, 12, 14), bool] */;
  %74 = log2(%72) /* ty=Tensor[(7, 12, 14), float32] */;
  (%73, %74)
}

def @func_9669(%var_9638: Tensor[(7, 1, 12), float32], %var_9666: int8) -> (Tensor[(7, 1, 12), float32], Tensor[(1, 3, 6), float32], int8) {
  %75 = cast(%var_9638, dtype="float32") /* ty=Tensor[(7, 1, 12), float32] */;
  %76 = cast(%var_9666, dtype="int8") /* ty=int8 */;
  %77 = reshape(%76, newshape=[]) /* ty=int8 */;
  %78 = @func_7192(%77) /* ty=(Tensor[(7, 12, 14), bool], Tensor[(1, 3, 6), float32], int8, Tensor[(1456), float64], Tensor[(35, 6), float64], Tensor[(1456), float64]) */;
  %79 = cos(%75) /* ty=Tensor[(7, 1, 12), float32] */;
  %80 = %78.1;
  (%79, %80, %var_9666)
}

def @func_5610(%var_5596: Tensor[(5, 14, 3), float64], %var_5606: Tensor[(1456), float64]) -> (Tensor[(5, 14, 3), float64], Tensor[(7, 13, 16), float64], Tensor[(1456), float64]) {
  %81 = cast(%var_5596, dtype="float64") /* ty=Tensor[(5, 14, 3), float64] */;
  %82 = cast(%var_5606, dtype="float64") /* ty=Tensor[(1456), float64] */;
  %83 = reshape(%82, newshape=[7, 13, 16]) /* ty=Tensor[(7, 13, 16), float64] */;
  %84 = cosh(%81) /* ty=Tensor[(5, 14, 3), float64] */;
  %85 = @func_1680(%83) /* ty=Tensor[(7, 13, 16), float64] */;
  (%84, %85, %var_5606)
}

def @func_9068(%var_9057: Tensor[(14, 195), int8]) -> Tensor[(14, 195), bool] {
  %86 = @func_8297() /* ty=(Tensor[(3, 6, 14), int8], Tensor[(7, 12, 14), bool], Tensor[(3, 6, 1), float64], Tensor[(15, 11, 5), uint8], Tensor[(275, 3), uint8], Tensor[(7, 12, 14), float32], Tensor[(3, 6, 1), float32], Tensor[(13, 14, 15), int32], Tensor[(14, 195), int8], Tensor[(3, 6, 1), float32]) */;
  %87 = %86.8;
  %88 = cast(%var_9057, dtype="bool") /* ty=Tensor[(14, 195), bool] */;
  %89 = shape_of(%87, dtype="int32") /* ty=Tensor[(2), int32] */;
  %90 = cast(%87, dtype="bool") /* ty=Tensor[(14, 195), bool] */;
  %91 = dyn.reshape(%88, %89, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  logical_or(%90, %91) /* ty=Tensor[(14, 195), bool] */
}

def @func_5843(%var_5839: Tensor[(2304), int64]) -> (Tensor[(6, 12, 14), float32], Tensor[(16, 11, 9), float64], Tensor[(792, 2), float64], int64, Tensor[(2304), int64]) {
  %92 = cast(meta[relay.Constant][5] /* ty=Tensor[(6, 12, 14), float32] */, dtype="float32") /* ty=Tensor[(6, 12, 14), float32] */;
  %93 = cast(meta[relay.Constant][6] /* ty=Tensor[(792, 2), float64] */, dtype="float64") /* ty=Tensor[(792, 2), float64] */;
  %94 = cast(-10 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %95 = cast(%var_5839, dtype="int64") /* ty=Tensor[(2304), int64] */;
  %96 = reshape(%93, newshape=[16, 11, 9]) /* ty=Tensor[(16, 11, 9), float64] */;
  %97 = reshape(%94, newshape=[]) /* ty=int64 */;
  %98 = reshape(%95, newshape=[2304]) /* ty=Tensor[(2304), int64] */;
  %99 = @func_724(%96, %97, %98) /* ty=(Tensor[(16, 11, 9), float64], Tensor[(16, 9, 16), bool], int64, Tensor[(2304), int64], Tensor[(16, 9, 16), bool]) */;
  %100 = log(%92) /* ty=Tensor[(6, 12, 14), float32] */;
  %101 = %99.0;
  (%100, %101, meta[relay.Constant][6] /* ty=Tensor[(792, 2), float64] */, -10 /* ty=int64 */, %var_5839)
}

def @func_11006() -> (Tensor[(7, 12, 14), float32], Tensor[(7, 12, 14), float32]) {
  %102 = @func_9345() /* ty=(Tensor[(7, 12, 14), float32],) */;
  %103 = %102.0;
  %104 = cast(%103, dtype="float32") /* ty=Tensor[(7, 12, 14), float32] */;
  %105 = @func_8436() /* ty=Tensor[(7, 12, 14), float32] */;
  %106 = asinh(%104) /* ty=Tensor[(7, 12, 14), float32] */;
  (%105, %106)
}

def @func_7465(%var_7459: Tensor[(1440), int32]) -> (Tensor[(7, 12, 14), bool], Tensor[(13, 9, 10), bool], Tensor[(1170), float32], Tensor[(7, 12, 14), float32], Tensor[(9, 10, 16), bool], Tensor[(1440), int32]) {
  %107 = @func_7369() /* ty=(Tensor[(7, 12, 14), bool],) */;
  %108 = cast(meta[relay.Constant][7] /* ty=Tensor[(1170), float32] */, dtype="float32") /* ty=Tensor[(1170), float32] */;
  %109 = reshape(%108, newshape=[13, 9, 10]) /* ty=Tensor[(13, 9, 10), float32] */;
  %110 = @func_3932(%109) /* ty=(Tensor[(13, 9, 10), bool],) */;
  %111 = @func_7101() /* ty=(Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), float32]) */;
  %112 = cast(%var_7459, dtype="int32") /* ty=Tensor[(1440), int32] */;
  %113 = cast(%var_7459, dtype="int32") /* ty=Tensor[(1440), int32] */;
  %114 = reshape(%112, newshape=[9, 10, 16]) /* ty=Tensor[(9, 10, 16), int32] */;
  %115 = reshape(%113, newshape=[9, 10, 16]) /* ty=Tensor[(9, 10, 16), int32] */;
  %116 = @func_3428(%114, %115) /* ty=(Tensor[(9, 10, 16), bool],) */;
  %117 = %107.0;
  %118 = %110.0;
  %119 = %111.1;
  %120 = %116.0;
  (%117, %118, meta[relay.Constant][7] /* ty=Tensor[(1170), float32] */, %119, %120, %var_7459)
}

def @func_4582(%var_4559: Tensor[(15, 11, 5), uint8], %var_4560: Tensor[(15, 11, 5), uint8]) -> (Tensor[(15, 11, 5), uint8],) {
  %121 = cast(%var_4560, dtype="uint8") /* ty=Tensor[(15, 11, 5), uint8] */;
  %122 = shape_of(%var_4559, dtype="int32") /* ty=Tensor[(3), int32] */;
  %123 = cast(%var_4559, dtype="uint8") /* ty=Tensor[(15, 11, 5), uint8] */;
  %124 = dyn.reshape(%121, %122, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %125 = bitwise_xor(%123, %124) /* ty=Tensor[(15, 11, 5), uint8] */;
  (%125,)
}

def @func_1680(%var_1677: Tensor[(7, 13, 16), float64]) -> Tensor[(7, 13, 16), float64] {
  %126 = cast(%var_1677, dtype="float64") /* ty=Tensor[(7, 13, 16), float64] */;
  log(%126) /* ty=Tensor[(7, 13, 16), float64] */
}

def @func_8326(%var_8314: Tensor[(2304), int64]) -> (int64, Tensor[(2304), int64], Tensor[(7, 10, 16), float32]) {
  %127 = cast(%var_8314, dtype="int64") /* ty=Tensor[(2304), int64] */;
  %128 = reshape(%127, newshape=[8, 288]) /* ty=Tensor[(8, 288), int64] */;
  %129 = @func_7690(%128) /* ty=(Tensor[(12, 15, 5), float32], Tensor[(7, 12, 14), int32], Tensor[(16, 9, 16), bool], int64, Tensor[(8, 288), int64], Tensor[(15, 11, 5), uint8], Tensor[(825), uint8]) */;
  %130 = cast(meta[relay.Constant][8] /* ty=Tensor[(7, 10, 16), float32] */, dtype="float32") /* ty=Tensor[(7, 10, 16), float32] */;
  %131 = erf(%130) /* ty=Tensor[(7, 10, 16), float32] */;
  %132 = cast(%131, dtype="float32") /* ty=Tensor[(7, 10, 16), float32] */;
  %133 = %129.3;
  %134 = atan(%132) /* ty=Tensor[(7, 10, 16), float32] */;
  (%133, %var_8314, %134)
}

def @func_10014() -> (Tensor[(3, 6, 14), int8], Tensor[(7, 12, 14), bool]) {
  %135 = @func_9077() /* ty=(Tensor[(3, 6, 14), int8],) */;
  %136 = @func_7369() /* ty=(Tensor[(7, 12, 14), bool],) */;
  %137 = %135.0;
  %138 = %136.0;
  (%137, %138)
}

def @func_10073() -> (Tensor[(10, 5, 8), bool],) {
  %139 = @func_9619() /* ty=(Tensor[(7, 12, 14), float32], Tensor[(10, 5, 8), bool], Tensor[(1, 400), float32]) */;
  %140 = %139.1;
  (%140,)
}

def @func_2493(%var_2490: Tensor[(12, 15, 5), float32]) -> (Tensor[(12, 15, 5), float32],) {
  %141 = cast(%var_2490, dtype="float32") /* ty=Tensor[(12, 15, 5), float32] */;
  %142 = asin(%141) /* ty=Tensor[(12, 15, 5), float32] */;
  (%142,)
}

def @func_7724() -> (Tensor[(7, 12, 14), float32], Tensor[(7, 12, 14), float32]) {
  %143 = @func_7101() /* ty=(Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), float32]) */;
  %144 = %143.1;
  %145 = cast(meta[relay.Constant][9] /* ty=Tensor[(7, 12, 14), float32] */, dtype="float32") /* ty=Tensor[(7, 12, 14), float32] */;
  %146 = shape_of(%144, dtype="int32") /* ty=Tensor[(3), int32] */;
  %147 = cast(%144, dtype="float32") /* ty=Tensor[(7, 12, 14), float32] */;
  %148 = dyn.reshape(%145, %146, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %149 = cast(meta[relay.Constant][9] /* ty=Tensor[(7, 12, 14), float32] */, dtype="float32") /* ty=Tensor[(7, 12, 14), float32] */;
  %150 = floor_mod(%147, %148) /* ty=Tensor[(7, 12, 14), float32] */;
  %151 = sin(%149) /* ty=Tensor[(7, 12, 14), float32] */;
  (%150, %151)
}

def @func_11545(%var_11532: Tensor[(2730), int8]) -> (Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), float64], Tensor[(1040, 12), uint8], Tensor[(7, 12, 14), bool], Tensor[(2304), int64], Tensor[(2730), int8], Tensor[(15, 9, 10), uint64], uint64, Tensor[(1350), uint64]) {
  %152 = @func_10708() /* ty=(Tensor[(7, 12, 14), bool],) */;
  %153 = @func_7914() /* ty=(Tensor[(3, 6, 1), float32], Tensor[(16, 9, 16), bool], int64, Tensor[(2304), int64], Tensor[(7, 12, 14), float64]) */;
  %154 = @func_9400() /* ty=Tensor[(1040, ?), int32] */;
  %155 = cast(%154, dtype="float32") /* ty=Tensor[(1040, ?), float32] */;
  %156 = asinh(%155) /* ty=Tensor[(1040, ?), float32] */;
  %157 = cast(%156, dtype="uint8") /* ty=Tensor[(1040, ?), uint8] */;
  %158 = cast(meta[relay.Constant][10] /* ty=Tensor[(1040, 12), float32] */, dtype="uint8") /* ty=Tensor[(1040, 12), uint8] */;
  %159 = cast(meta[relay.Constant][11] /* ty=Tensor[(2304), int64] */, dtype="int64") /* ty=Tensor[(2304), int64] */;
  %160 = cast(%var_11532, dtype="int8") /* ty=Tensor[(2730), int8] */;
  %161 = cast(%var_11532, dtype="int8") /* ty=Tensor[(2730), int8] */;
  %162 = reshape(%159, newshape=[2304]) /* ty=Tensor[(2304), int64] */;
  %163 = reshape(%160, newshape=[1, 2730]) /* ty=Tensor[(1, 2730), int8] */;
  %164 = reshape(%161, newshape=[1, 2730]) /* ty=Tensor[(1, 2730), int8] */;
  %165 = @func_8993(%162, %163, %164) /* ty=(Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), float32], Tensor[(2304), int64], Tensor[(7, 12, 14), bool], Tensor[(?, 2730), float32]) */;
  %166 = cast(meta[relay.Constant][12] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %167 = cast(meta[relay.Constant][13] /* ty=Tensor[(1350), uint64] */, dtype="uint64") /* ty=Tensor[(1350), uint64] */;
  %168 = reshape(%166, newshape=[]) /* ty=uint64 */;
  %169 = reshape(%167, newshape=[15, 9, 10]) /* ty=Tensor[(15, 9, 10), uint64] */;
  %170 = @func_2904(%168, %169) /* ty=(Tensor[(15, 9, 10), uint64],) */;
  %171 = %152.0;
  %172 = %153.4;
  %173 = left_shift(%157, %158) /* ty=Tensor[(1040, 12), uint8] */;
  %174 = %165.0;
  %175 = %170.0;
  (%171, %172, %173, %174, meta[relay.Constant][11] /* ty=Tensor[(2304), int64] */, %var_11532, %175, meta[relay.Constant][12] /* ty=uint64 */, meta[relay.Constant][13] /* ty=Tensor[(1350), uint64] */)
}

def @func_8366() -> Tensor[(3, 10, 3), float32] {
  %176 = cast(meta[relay.Constant][14] /* ty=Tensor[(3, 10, 3), float32] */, dtype="float32") /* ty=Tensor[(3, 10, 3), float32] */;
  asin(%176) /* ty=Tensor[(3, 10, 3), float32] */
}

def @func_12148() -> (Tensor[(900), float32], Tensor[(2304), float32], Tensor[(15, 11, 5), uint8], Tensor[(15, 11, 5), float32]) {
  %177 = @func_10699() /* ty=(Tensor[(900), float32], Tensor[(900), float32]) */;
  %178 = cast(meta[relay.Constant][15] /* ty=Tensor[(2304), int64] */, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %179 = tan(%178) /* ty=Tensor[(2304), float32] */;
  %180 = cast(%179, dtype="int64") /* ty=Tensor[(2304), int64] */;
  %181 = reshape(%180, newshape=[2304]) /* ty=Tensor[(2304), int64] */;
  %182 = @func_8506(%181) /* ty=(Tensor[(7, 12, 14), float32], Tensor[(15, 11, 5), uint8], Tensor[(2304), int64], Tensor[(7, 12, 14), float32]) */;
  %183 = cast(meta[relay.Constant][15] /* ty=Tensor[(2304), int64] */, dtype="int64") /* ty=Tensor[(2304), int64] */;
  %184 = reshape(%183, newshape=[2304]) /* ty=Tensor[(2304), int64] */;
  %185 = @func_8506(%184) /* ty=(Tensor[(7, 12, 14), float32], Tensor[(15, 11, 5), uint8], Tensor[(2304), int64], Tensor[(7, 12, 14), float32]) */;
  %186 = %185.1;
  %187 = cast(%186, dtype="float64") /* ty=Tensor[(15, 11, 5), float64] */;
  %188 = atan(%187) /* ty=Tensor[(15, 11, 5), float64] */;
  %189 = %182.1;
  %190 = cast(%189, dtype="uint8") /* ty=Tensor[(15, 11, 5), uint8] */;
  %191 = reshape(%190, newshape=[275, 3]) /* ty=Tensor[(275, 3), uint8] */;
  %192 = @func_11132(%191) /* ty=(Tensor[(7, 12, 14), float64], Tensor[(7, 12, 14), float32], Tensor[(14, 7, 7), float64], Tensor[(16, 9, 16), bool], Tensor[(275, 3), uint16], Tensor[(275, 3), float64]) */;
  %193 = %192.5;
  %194 = cast(%193, dtype="float32") /* ty=Tensor[(275, 3), float32] */;
  %195 = shape_of(%188, dtype="int32") /* ty=Tensor[(3), int32] */;
  %196 = cast(%188, dtype="float32") /* ty=Tensor[(15, 11, 5), float32] */;
  %197 = dyn.reshape(%194, %195, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %198 = %177.1;
  %199 = maximum(%196, %197) /* ty=Tensor[(15, 11, 5), float32] */;
  (%198, %179, %189, %199)
}

def @func_10257() -> (Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), float32], Tensor[(1, 2304), int64]) {
  %200 = @func_7323() /* ty=(Tensor[(7, 12, 14), bool],) */;
  %201 = cast(meta[relay.Constant][16] /* ty=Tensor[(1, 2304), int64] */, dtype="int64") /* ty=Tensor[(1, 2304), int64] */;
  %202 = reshape(%201, newshape=[2304]) /* ty=Tensor[(2304), int64] */;
  %203 = @func_8506(%202) /* ty=(Tensor[(7, 12, 14), float32], Tensor[(15, 11, 5), uint8], Tensor[(2304), int64], Tensor[(7, 12, 14), float32]) */;
  %204 = %200.0;
  %205 = %203.0;
  (%204, %205, meta[relay.Constant][16] /* ty=Tensor[(1, 2304), int64] */)
}

def @func_9077() -> (Tensor[(3, 6, 14), int8],) {
  %206 = @func_8297() /* ty=(Tensor[(3, 6, 14), int8], Tensor[(7, 12, 14), bool], Tensor[(3, 6, 1), float64], Tensor[(15, 11, 5), uint8], Tensor[(275, 3), uint8], Tensor[(7, 12, 14), float32], Tensor[(3, 6, 1), float32], Tensor[(13, 14, 15), int32], Tensor[(14, 195), int8], Tensor[(3, 6, 1), float32]) */;
  %207 = %206.0;
  (%207,)
}

def @func_7369() -> (Tensor[(7, 12, 14), bool],) {
  %208 = @func_7323() /* ty=(Tensor[(7, 12, 14), bool],) */;
  %209 = %208.0;
  (%209,)
}

def @func_10699() -> (Tensor[(900), float32], Tensor[(900), float32]) {
  %210 = @func_9162() /* ty=(Tensor[(900), float32],) */;
  %211 = @func_9162() /* ty=(Tensor[(900), float32],) */;
  %212 = %210.0;
  %213 = %211.0;
  (%212, %213)
}

def @func_11688() -> (Tensor[(7, 12, 14), float32],) {
  %214 = @func_9345() /* ty=(Tensor[(7, 12, 14), float32],) */;
  %215 = %214.0;
  (%215,)
}

def @func_9323() -> (Tensor[(7, 12, 14), bool],) {
  %216 = @func_8777() /* ty=(Tensor[(7, 12, 14), bool],) */;
  %217 = %216.0;
  (%217,)
}

def @func_7778() -> (Tensor[(7, 12, 14), float64], Tensor[(1, 3, 6), float32], Tensor[(1040, 1), int64]) {
  %218 = @func_7323() /* ty=(Tensor[(7, 12, 14), bool],) */;
  %219 = %218.0;
  %220 = cast(%219, dtype="float64") /* ty=Tensor[(7, 12, 14), float64] */;
  %221 = cast(meta[relay.Constant][17] /* ty=Tensor[(1040, 1), int64] */, dtype="int64") /* ty=Tensor[(1040, 1), int64] */;
  %222 = reshape(%221, newshape=[8, 10, 13]) /* ty=Tensor[(8, 10, 13), int64] */;
  %223 = @func_6212(%222) /* ty=(Tensor[(8, 10, 13), int64], Tensor[(1, 3, 6), float32]) */;
  %224 = asin(%220) /* ty=Tensor[(7, 12, 14), float64] */;
  %225 = %223.1;
  (%224, %225, meta[relay.Constant][17] /* ty=Tensor[(1040, 1), int64] */)
}

def @func_10708() -> (Tensor[(7, 12, 14), bool],) {
  %226 = @func_7404() /* ty=(Tensor[(7, 12, 14), bool], Tensor[(12, 15, 5), float32], Tensor[(900), float32]) */;
  %227 = %226.0;
  (%227,)
}

def @func_10439(%var_10404: int32, %var_10405: Tensor[(1400), int32]) -> (Tensor[(3, 6, 1), float32], Tensor[(1400), int32], Tensor[(7, 12, 14), float32], Tensor[(10, 10, 14), int32], Tensor[(900), float32], Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), bool]) {
  %228 = @func_9830() /* ty=(Tensor[(3, 6, 1), float32],) */;
  %229 = @func_9619() /* ty=(Tensor[(7, 12, 14), float32], Tensor[(10, 5, 8), bool], Tensor[(1, 400), float32]) */;
  %230 = cast(%var_10404, dtype="int32") /* ty=int32 */;
  %231 = cast(%var_10405, dtype="int32") /* ty=Tensor[(1400), int32] */;
  %232 = reshape(%230, newshape=[]) /* ty=int32 */;
  %233 = reshape(%231, newshape=[10, 10, 14]) /* ty=Tensor[(10, 10, 14), int32] */;
  %234 = @func_1424(%232, %233) /* ty=(Tensor[(10, 10, 14), float32],) */;
  %235 = %234.0;
  %236 = cast(%235, dtype="int32") /* ty=Tensor[(10, 10, 14), int32] */;
  %237 = cast(%var_10404, dtype="int32") /* ty=int32 */;
  %238 = @func_9265() /* ty=(Tensor[(900), float32],) */;
  %239 = @func_8777() /* ty=(Tensor[(7, 12, 14), bool],) */;
  %240 = %228.0;
  %241 = %229.0;
  %242 = bitwise_or(%236, %237) /* ty=Tensor[(10, 10, 14), int32] */;
  %243 = %238.0;
  %244 = %239.0;
  %245 = @func_7554() /* ty=Tensor[(7, 12, 14), bool] */;
  (%240, %var_10405, %241, %242, %243, %244, %245)
}

def @func_8993(%var_8970: Tensor[(2304), int64], %var_8987: Tensor[(1, 2730), int8], %var_8989: Tensor[(1, 2730), int8]) -> (Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), float32], Tensor[(2304), int64], Tensor[(7, 12, 14), bool], Tensor[(?, 2730), float32]) {
  %246 = @func_8682() /* ty=(Tensor[(7, 12, 14), bool],) */;
  %247 = cast(%var_8970, dtype="int64") /* ty=Tensor[(2304), int64] */;
  %248 = reshape(%247, newshape=[2304]) /* ty=Tensor[(2304), int64] */;
  %249 = @func_8506(%248) /* ty=(Tensor[(7, 12, 14), float32], Tensor[(15, 11, 5), uint8], Tensor[(2304), int64], Tensor[(7, 12, 14), float32]) */;
  %250 = cast(%var_8987, dtype="int8") /* ty=Tensor[(1, 2730), int8] */;
  %251 = reshape(%250, newshape=[2730]) /* ty=Tensor[(2730), int8] */;
  %252 = @func_8633(%251) /* ty=(Tensor[(7, 12, 14), bool], Tensor[(13, 14, 15), int32], Tensor[(2730), int8], Tensor[(7, 12, 14), bool], Tensor[(3, 6, 1), float32]) */;
  %253 = cast(%var_8989, dtype="float32") /* ty=Tensor[(1, 2730), float32] */;
  %254 = shape_of(%var_8987, dtype="int32") /* ty=Tensor[(2), int32] */;
  %255 = cast(%var_8987, dtype="float32") /* ty=Tensor[(1, 2730), float32] */;
  %256 = dyn.reshape(%253, %254, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %257 = %246.0;
  %258 = %249.3;
  %259 = %252.3;
  %260 = divide(%255, %256) /* ty=Tensor[(?, 2730), float32] */;
  (%257, %258, %var_8970, %259, %260)
}

def @func_11220(%var_11180: int32) -> (Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), float32], Tensor[(1400), bool], Tensor[(7, 12, 14), int32], Tensor[(2304), int64], Tensor[(6, 12, 14), float32], Tensor[(7, 12, 14), bool]) {
  %261 = @func_9109() /* ty=(Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), float32]) */;
  %262 = cast(%var_11180, dtype="int32") /* ty=int32 */;
  %263 = cast(meta[relay.Constant][18] /* ty=Tensor[(1400), int32] */, dtype="int32") /* ty=Tensor[(1400), int32] */;
  %264 = reshape(%262, newshape=[]) /* ty=int32 */;
  %265 = reshape(%263, newshape=[1400]) /* ty=Tensor[(1400), int32] */;
  %266 = @func_10439(%264, %265) /* ty=(Tensor[(3, 6, 1), float32], Tensor[(1400), int32], Tensor[(7, 12, 14), float32], Tensor[(10, 10, 14), int32], Tensor[(900), float32], Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), bool]) */;
  %267 = cast(meta[relay.Constant][18] /* ty=Tensor[(1400), int32] */, dtype="bool") /* ty=Tensor[(1400), bool] */;
  %268 = cast(%var_11180, dtype="bool") /* ty=bool */;
  %269 = %261.0;
  %270 = cast(%269, dtype="bool") /* ty=Tensor[(7, 12, 14), bool] */;
  %271 = cast(%269, dtype="float64") /* ty=Tensor[(7, 12, 14), float64] */;
  %272 = cast(meta[relay.Constant][19] /* ty=Tensor[(2304), int64] */, dtype="int64") /* ty=Tensor[(2304), int64] */;
  %273 = reshape(%270, newshape=[7, 12, 14]) /* ty=Tensor[(7, 12, 14), bool] */;
  %274 = reshape(%271, newshape=[7, 12, 14]) /* ty=Tensor[(7, 12, 14), float64] */;
  %275 = reshape(%272, newshape=[2304]) /* ty=Tensor[(2304), int64] */;
  %276 = @func_10541(%273, %274, %275) /* ty=(Tensor[(7, 12, 14), int32], Tensor[(2304), int64], Tensor[(2304), int64]) */;
  %277 = cast(meta[relay.Constant][19] /* ty=Tensor[(2304), int64] */, dtype="int64") /* ty=Tensor[(2304), int64] */;
  %278 = reshape(%277, newshape=[2304]) /* ty=Tensor[(2304), int64] */;
  %279 = @func_5843(%278) /* ty=(Tensor[(6, 12, 14), float32], Tensor[(16, 11, 9), float64], Tensor[(792, 2), float64], int64, Tensor[(2304), int64]) */;
  %280 = @func_10014() /* ty=(Tensor[(3, 6, 14), int8], Tensor[(7, 12, 14), bool]) */;
  %281 = %266.2;
  %282 = not_equal(%267, %268) /* ty=Tensor[(1400), bool] */;
  %283 = %276.0;
  %284 = %279.0;
  %285 = %280.1;
  (%269, %281, %282, %283, meta[relay.Constant][19] /* ty=Tensor[(2304), int64] */, %284, %285)
}

def @func_8358() -> (Tensor[(14, 7, 7), float64],) {
  %286 = cast(meta[relay.Constant][20] /* ty=Tensor[(14, 7, 7), float64] */, dtype="float64") /* ty=Tensor[(14, 7, 7), float64] */;
  %287 = atan(%286) /* ty=Tensor[(14, 7, 7), float64] */;
  (%287,)
}

def @func_8889() -> Tensor[(1040, 1), float64] {
  %288 = @func_7778() /* ty=(Tensor[(7, 12, 14), float64], Tensor[(1, 3, 6), float32], Tensor[(1040, 1), int64]) */;
  %289 = %288.2;
  %290 = cast(%289, dtype="float64") /* ty=Tensor[(1040, 1), float64] */;
  sigmoid(%290) /* ty=Tensor[(1040, 1), float64] */
}

def @func_8896() -> (Tensor[(7, 12, 14), float32],) {
  %291 = @func_7724() /* ty=(Tensor[(7, 12, 14), float32], Tensor[(7, 12, 14), float32]) */;
  %292 = %291.0;
  (%292,)
}

def @func_10335() -> (Tensor[(7, 12, 14), bool],) {
  %293 = @func_7926() /* ty=(Tensor[(7, 12, 14), bool],) */;
  %294 = %293.0;
  (%294,)
}

def @func_10883(%var_10879: Tensor[(1, 16, 10), float32]) -> (Tensor[(1, 16, 10), float32],) {
  %295 = cast(%var_10879, dtype="float32") /* ty=Tensor[(1, 16, 10), float32] */;
  %296 = atan(%295) /* ty=Tensor[(1, 16, 10), float32] */;
  (%296,)
}

def @func_10872(%var_10867: Tensor[(14, 7, 7), float64]) -> Tensor[(14, 7, 7), int32] {
  %297 = @func_8358() /* ty=(Tensor[(14, 7, 7), float64],) */;
  %298 = %297.0;
  %299 = cast(%var_10867, dtype="int32") /* ty=Tensor[(14, 7, 7), int32] */;
  %300 = shape_of(%298, dtype="int32") /* ty=Tensor[(3), int32] */;
  %301 = cast(%298, dtype="int32") /* ty=Tensor[(14, 7, 7), int32] */;
  %302 = dyn.reshape(%299, %300, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  left_shift(%301, %302) /* ty=Tensor[(14, 7, 7), int32] */
}

def @func_10609(%var_10589: Tensor[(66), float64]) -> (Tensor[(7, 12, 14), bool], Tensor[(1, 6, 11), float64], Tensor[(66), float64]) {
  %303 = @func_8682() /* ty=(Tensor[(7, 12, 14), bool],) */;
  %304 = cast(%var_10589, dtype="float64") /* ty=Tensor[(66), float64] */;
  %305 = reshape(%304, newshape=[1, 6, 11]) /* ty=Tensor[(1, 6, 11), float64] */;
  %306 = %303.0;
  %307 = @func_7747(%305) /* ty=Tensor[(1, 6, 11), float64] */;
  (%306, %307, %var_10589)
}

def @func_8777() -> (Tensor[(7, 12, 14), bool],) {
  %308 = @func_7369() /* ty=(Tensor[(7, 12, 14), bool],) */;
  %309 = %308.0;
  (%309,)
}

def @func_9816() -> (Tensor[(7, 12, 14), float32],) {
  %310 = @func_9345() /* ty=(Tensor[(7, 12, 14), float32],) */;
  %311 = %310.0;
  (%311,)
}

def @func_11250() -> (Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), float32]) {
  %312 = @func_9323() /* ty=(Tensor[(7, 12, 14), bool],) */;
  %313 = @func_11006() /* ty=(Tensor[(7, 12, 14), float32], Tensor[(7, 12, 14), float32]) */;
  %314 = %312.0;
  %315 = %313.1;
  (%314, %315)
}

def @func_7938() -> (Tensor[(900), float32],) {
  %316 = @func_7404() /* ty=(Tensor[(7, 12, 14), bool], Tensor[(12, 15, 5), float32], Tensor[(900), float32]) */;
  %317 = %316.2;
  (%317,)
}

def @func_7323() -> (Tensor[(7, 12, 14), bool],) {
  %318 = @func_7101() /* ty=(Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), float32]) */;
  %319 = %318.0;
  (%319,)
}

def @func_9205() -> (Tensor[(7, 12, 14), bool],) {
  %320 = @func_7554() /* ty=Tensor[(7, 12, 14), bool] */;
  (%320,)
}

def @func_7590() -> Tensor[(3, 6, 1), float32] {
  %321 = cast(meta[relay.Constant][21] /* ty=Tensor[(3, 6, 1), float32] */, dtype="float32") /* ty=Tensor[(3, 6, 1), float32] */;
  rsqrt(%321) /* ty=Tensor[(3, 6, 1), float32] */
}

def @func_9109() -> (Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), float32]) {
  %322 = @func_8297() /* ty=(Tensor[(3, 6, 14), int8], Tensor[(7, 12, 14), bool], Tensor[(3, 6, 1), float64], Tensor[(15, 11, 5), uint8], Tensor[(275, 3), uint8], Tensor[(7, 12, 14), float32], Tensor[(3, 6, 1), float32], Tensor[(13, 14, 15), int32], Tensor[(14, 195), int8], Tensor[(3, 6, 1), float32]) */;
  %323 = @func_8436() /* ty=Tensor[(7, 12, 14), float32] */;
  %324 = cast(%323, dtype="float32") /* ty=Tensor[(7, 12, 14), float32] */;
  %325 = %322.1;
  %326 = exp(%324) /* ty=Tensor[(7, 12, 14), float32] */;
  (%325, %326)
}

def @func_8959() -> Tensor[(14, 7, 7), float64] {
  %327 = @func_8358() /* ty=(Tensor[(14, 7, 7), float64],) */;
  %327.0
}

def @func_9400() -> Tensor[(1040, ?), int32] {
  %328 = @func_8889() /* ty=Tensor[(1040, 1), float64] */;
  %329 = cast(%328, dtype="float64") /* ty=Tensor[(1040, 1), float64] */;
  %330 = log10(%329) /* ty=Tensor[(1040, 1), float64] */;
  %331 = cast(%328, dtype="float32") /* ty=Tensor[(1040, 1), float32] */;
  %332 = acosh(%331) /* ty=Tensor[(1040, 1), float32] */;
  %333 = cast(%332, dtype="int32") /* ty=Tensor[(1040, 1), int32] */;
  %334 = shape_of(%330, dtype="int32") /* ty=Tensor[(2), int32] */;
  %335 = cast(%330, dtype="int32") /* ty=Tensor[(1040, 1), int32] */;
  %336 = dyn.reshape(%333, %334, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  bitwise_or(%335, %336) /* ty=Tensor[(1040, ?), int32] */
}

def @func_9903(%var_9890: Tensor[(1040), int64]) -> (Tensor[(7, 12, 14), bool], Tensor[(1, 3, 6), float32], Tensor[(1040), int64]) {
  %337 = @func_9323() /* ty=(Tensor[(7, 12, 14), bool],) */;
  %338 = cast(%var_9890, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %339 = reshape(%338, newshape=[8, 10, 13]) /* ty=Tensor[(8, 10, 13), int64] */;
  %340 = @func_6212(%339) /* ty=(Tensor[(8, 10, 13), int64], Tensor[(1, 3, 6), float32]) */;
  %341 = %337.0;
  %342 = %340.1;
  (%341, %342, %var_9890)
}

def @func_8661() -> (Tensor[(13, 14, 15), float64],) {
  %343 = @func_8297() /* ty=(Tensor[(3, 6, 14), int8], Tensor[(7, 12, 14), bool], Tensor[(3, 6, 1), float64], Tensor[(15, 11, 5), uint8], Tensor[(275, 3), uint8], Tensor[(7, 12, 14), float32], Tensor[(3, 6, 1), float32], Tensor[(13, 14, 15), int32], Tensor[(14, 195), int8], Tensor[(3, 6, 1), float32]) */;
  %344 = %343.7;
  %345 = cast(%344, dtype="float64") /* ty=Tensor[(13, 14, 15), float64] */;
  %346 = atanh(%345) /* ty=Tensor[(13, 14, 15), float64] */;
  (%346,)
}

def @func_9849(%var_9837: Tensor[(2730), int8]) -> (Tensor[(3, 6, 1), float32], Tensor[(14, 195), bool], Tensor[(2730), int8]) {
  %347 = @func_9830() /* ty=(Tensor[(3, 6, 1), float32],) */;
  %348 = cast(%var_9837, dtype="int8") /* ty=Tensor[(2730), int8] */;
  %349 = reshape(%348, newshape=[14, 195]) /* ty=Tensor[(14, 195), int8] */;
  %350 = %347.0;
  %351 = @func_9068(%349) /* ty=Tensor[(14, 195), bool] */;
  (%350, %351, %var_9837)
}

def @func_7192(%var_7186: int8) -> (Tensor[(7, 12, 14), bool], Tensor[(1, 3, 6), float32], int8, Tensor[(1456), float64], Tensor[(35, 6), float64], Tensor[(1456), float64]) {
  %352 = @func_7101() /* ty=(Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), float32]) */;
  %353 = cast(%var_7186, dtype="int8") /* ty=int8 */;
  %354 = reshape(%353, newshape=[]) /* ty=int8 */;
  %355 = @func_3268(%354) /* ty=(Tensor[(1, 3, 6), float32],) */;
  %356 = cast(meta[relay.Constant][22] /* ty=Tensor[(35, 6), float64] */, dtype="float64") /* ty=Tensor[(35, 6), float64] */;
  %357 = cast(meta[relay.Constant][23] /* ty=Tensor[(1456), float64] */, dtype="float64") /* ty=Tensor[(1456), float64] */;
  %358 = reshape(%356, newshape=[5, 14, 3]) /* ty=Tensor[(5, 14, 3), float64] */;
  %359 = reshape(%357, newshape=[1456]) /* ty=Tensor[(1456), float64] */;
  %360 = @func_5610(%358, %359) /* ty=(Tensor[(5, 14, 3), float64], Tensor[(7, 13, 16), float64], Tensor[(1456), float64]) */;
  %361 = %352.0;
  %362 = %355.0;
  %363 = %360.2;
  (%361, %362, %var_7186, %363, meta[relay.Constant][22] /* ty=Tensor[(35, 6), float64] */, meta[relay.Constant][23] /* ty=Tensor[(1456), float64] */)
}

def @func_4035(%var_3993: Tensor[(10, 4, 13), float32], %var_3994: Tensor[(10, 4, 13), float32]) -> (Tensor[(10, 4, 13), float32], Tensor[(10, 4, 13), float64]) {
  %364 = cast(%var_3994, dtype="float32") /* ty=Tensor[(10, 4, 13), float32] */;
  %365 = shape_of(%var_3993, dtype="int32") /* ty=Tensor[(3), int32] */;
  %366 = cast(%var_3993, dtype="float32") /* ty=Tensor[(10, 4, 13), float32] */;
  %367 = dyn.reshape(%364, %365, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %368 = cast(%var_3993, dtype="float64") /* ty=Tensor[(10, 4, 13), float64] */;
  %369 = power(%366, %367) /* ty=Tensor[(10, 4, 13), float32] */;
  %370 = erf(%368) /* ty=Tensor[(10, 4, 13), float64] */;
  (%369, %370)
}

def @func_12007() -> Tensor[(13, 14, 15), float64] {
  %371 = @func_10907() /* ty=(Tensor[(13, 14, 15), float64],) */;
  %371.0
}

def @func_10394(%var_10392: Tensor[(825), uint8]) -> (Tensor[(7, 12, 14), float32], Tensor[(15, 11, 5), uint8], Tensor[(825), uint8]) {
  %372 = @func_8896() /* ty=(Tensor[(7, 12, 14), float32],) */;
  %373 = cast(%var_10392, dtype="uint8") /* ty=Tensor[(825), uint8] */;
  %374 = cast(%var_10392, dtype="uint8") /* ty=Tensor[(825), uint8] */;
  %375 = reshape(%373, newshape=[15, 11, 5]) /* ty=Tensor[(15, 11, 5), uint8] */;
  %376 = reshape(%374, newshape=[15, 11, 5]) /* ty=Tensor[(15, 11, 5), uint8] */;
  %377 = @func_4582(%375, %376) /* ty=(Tensor[(15, 11, 5), uint8],) */;
  %378 = %372.0;
  %379 = %377.0;
  (%378, %379, %var_10392)
}

def @func_6212(%var_6206: Tensor[(8, 10, 13), int64]) -> (Tensor[(8, 10, 13), int64], Tensor[(1, 3, 6), float32]) {
  %380 = cast(6 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %381 = cast(%var_6206, dtype="int64") /* ty=Tensor[(8, 10, 13), int64] */;
  %382 = cast(6 /* ty=int64 */, dtype="int8") /* ty=int8 */;
  %383 = reshape(%382, newshape=[]) /* ty=int8 */;
  %384 = @func_3268(%383) /* ty=(Tensor[(1, 3, 6), float32],) */;
  %385 = right_shift(%380, %381) /* ty=Tensor[(8, 10, 13), int64] */;
  %386 = %384.0;
  (%385, %386)
}

def @func_11565() -> Tensor[(10, 5, 8), bool] {
  %387 = @func_10073() /* ty=(Tensor[(10, 5, 8), bool],) */;
  %387.0
}

def @func_9345() -> (Tensor[(7, 12, 14), float32],) {
  %388 = @func_7101() /* ty=(Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), float32]) */;
  %389 = %388.1;
  (%389,)
}

def @func_7690(%var_7669: Tensor[(8, 288), int64]) -> (Tensor[(12, 15, 5), float32], Tensor[(7, 12, 14), int32], Tensor[(16, 9, 16), bool], int64, Tensor[(8, 288), int64], Tensor[(15, 11, 5), uint8], Tensor[(825), uint8]) {
  %390 = @func_7404() /* ty=(Tensor[(7, 12, 14), bool], Tensor[(12, 15, 5), float32], Tensor[(900), float32]) */;
  %391 = @func_7404() /* ty=(Tensor[(7, 12, 14), bool], Tensor[(12, 15, 5), float32], Tensor[(900), float32]) */;
  %392 = %391.0;
  %393 = cast(meta[relay.Constant][24] /* ty=Tensor[(7, 12, 14), bool] */, dtype="int32") /* ty=Tensor[(7, 12, 14), int32] */;
  %394 = shape_of(%392, dtype="int32") /* ty=Tensor[(3), int32] */;
  %395 = cast(%392, dtype="int32") /* ty=Tensor[(7, 12, 14), int32] */;
  %396 = dyn.reshape(%393, %394, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %397 = cast(-5 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %398 = cast(%var_7669, dtype="int64") /* ty=Tensor[(8, 288), int64] */;
  %399 = reshape(%397, newshape=[]) /* ty=int64 */;
  %400 = reshape(%398, newshape=[16, 9, 16]) /* ty=Tensor[(16, 9, 16), int64] */;
  %401 = cast(meta[relay.Constant][25] /* ty=Tensor[(825), uint8] */, dtype="uint8") /* ty=Tensor[(825), uint8] */;
  %402 = cast(meta[relay.Constant][25] /* ty=Tensor[(825), uint8] */, dtype="uint8") /* ty=Tensor[(825), uint8] */;
  %403 = reshape(%401, newshape=[15, 11, 5]) /* ty=Tensor[(15, 11, 5), uint8] */;
  %404 = reshape(%402, newshape=[15, 11, 5]) /* ty=Tensor[(15, 11, 5), uint8] */;
  %405 = @func_4582(%403, %404) /* ty=(Tensor[(15, 11, 5), uint8],) */;
  %406 = %390.1;
  %407 = bitwise_or(%395, %396) /* ty=Tensor[(7, 12, 14), int32] */;
  %408 = @func_498(%399, %400) /* ty=Tensor[(16, 9, 16), bool] */;
  %409 = %405.0;
  (%406, %407, %408, -5 /* ty=int64 */, %var_7669, %409, meta[relay.Constant][25] /* ty=Tensor[(825), uint8] */)
}

def @func_3932(%var_3898: Tensor[(13, 9, 10), float32]) -> (Tensor[(13, 9, 10), bool],) {
  %410 = cast(%var_3898, dtype="float32") /* ty=Tensor[(13, 9, 10), float32] */;
  %411 = atan(%410) /* ty=Tensor[(13, 9, 10), float32] */;
  %412 = cast(%var_3898, dtype="bool") /* ty=Tensor[(13, 9, 10), bool] */;
  %413 = shape_of(%411, dtype="int32") /* ty=Tensor[(3), int32] */;
  %414 = cast(%411, dtype="bool") /* ty=Tensor[(13, 9, 10), bool] */;
  %415 = dyn.reshape(%412, %413, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %416 = logical_or(%414, %415) /* ty=Tensor[(13, 9, 10), bool] */;
  %417 = cast(%var_3898, dtype="bool") /* ty=Tensor[(13, 9, 10), bool] */;
  %418 = shape_of(%416, dtype="int32") /* ty=Tensor[(3), int32] */;
  %419 = cast(%416, dtype="bool") /* ty=Tensor[(13, 9, 10), bool] */;
  %420 = dyn.reshape(%417, %418, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %421 = less_equal(%419, %420) /* ty=Tensor[(13, 9, 10), bool] */;
  (%421,)
}

def @func_5944(%var_5937: Tensor[(3, 2, 6), float32]) -> Tensor[(3, 2, 6), float32] {
  %422 = cast(%var_5937, dtype="float32") /* ty=Tensor[(3, 2, 6), float32] */;
  erf(%422) /* ty=Tensor[(3, 2, 6), float32] */
}

def @func_7914() -> (Tensor[(3, 6, 1), float32], Tensor[(16, 9, 16), bool], int64, Tensor[(2304), int64], Tensor[(7, 12, 14), float64]) {
  %423 = @func_7590() /* ty=Tensor[(3, 6, 1), float32] */;
  %424 = cast(%423, dtype="float32") /* ty=Tensor[(3, 6, 1), float32] */;
  %425 = cast(7 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %426 = cast(meta[relay.Constant][26] /* ty=Tensor[(2304), int64] */, dtype="int64") /* ty=Tensor[(2304), int64] */;
  %427 = reshape(%425, newshape=[]) /* ty=int64 */;
  %428 = reshape(%426, newshape=[16, 9, 16]) /* ty=Tensor[(16, 9, 16), int64] */;
  %429 = @func_7778() /* ty=(Tensor[(7, 12, 14), float64], Tensor[(1, 3, 6), float32], Tensor[(1040, 1), int64]) */;
  %430 = asin(%424) /* ty=Tensor[(3, 6, 1), float32] */;
  %431 = @func_498(%427, %428) /* ty=Tensor[(16, 9, 16), bool] */;
  %432 = %429.0;
  (%430, %431, 7 /* ty=int64 */, meta[relay.Constant][26] /* ty=Tensor[(2304), int64] */, %432)
}

def @func_10541(%var_10518: Tensor[(7, 12, 14), bool], %var_10530: Tensor[(7, 12, 14), float64], %var_10538: Tensor[(2304), int64]) -> (Tensor[(7, 12, 14), int32], Tensor[(2304), int64], Tensor[(2304), int64]) {
  %433 = @func_9323() /* ty=(Tensor[(7, 12, 14), bool],) */;
  %434 = %433.0;
  %435 = cast(%var_10518, dtype="float64") /* ty=Tensor[(7, 12, 14), float64] */;
  %436 = shape_of(%434, dtype="int32") /* ty=Tensor[(3), int32] */;
  %437 = cast(%434, dtype="float64") /* ty=Tensor[(7, 12, 14), float64] */;
  %438 = dyn.reshape(%435, %436, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %439 = mod(%437, %438) /* ty=Tensor[(7, 12, 14), float64] */;
  %440 = cast(%var_10530, dtype="int32") /* ty=Tensor[(7, 12, 14), int32] */;
  %441 = shape_of(%439, dtype="int32") /* ty=Tensor[(3), int32] */;
  %442 = cast(%439, dtype="int32") /* ty=Tensor[(7, 12, 14), int32] */;
  %443 = dyn.reshape(%440, %441, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %444 = cast(%var_10538, dtype="int64") /* ty=Tensor[(2304), int64] */;
  %445 = reshape(%444, newshape=[2304]) /* ty=Tensor[(2304), int64] */;
  %446 = @func_8506(%445) /* ty=(Tensor[(7, 12, 14), float32], Tensor[(15, 11, 5), uint8], Tensor[(2304), int64], Tensor[(7, 12, 14), float32]) */;
  %447 = logical_xor(%442, %443) /* ty=Tensor[(7, 12, 14), int32] */;
  %448 = %446.2;
  (%447, %448, %var_10538)
}

def @func_6862(%var_6816: Tensor[(13, 14, 15), int8], %var_6817: Tensor[(13, 14, 15), int8], %var_6834: Tensor[(13, 14, 15), bool]) -> (Tensor[(13, 14, 15), int32],) {
  %449 = cast(%var_6817, dtype="bool") /* ty=Tensor[(13, 14, 15), bool] */;
  %450 = shape_of(%var_6816, dtype="int32") /* ty=Tensor[(3), int32] */;
  %451 = cast(%var_6816, dtype="bool") /* ty=Tensor[(13, 14, 15), bool] */;
  %452 = dyn.reshape(%449, %450, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %453 = less_equal(%451, %452) /* ty=Tensor[(13, 14, 15), bool] */;
  %454 = cast(%var_6834, dtype="bool") /* ty=Tensor[(13, 14, 15), bool] */;
  %455 = shape_of(%453, dtype="int32") /* ty=Tensor[(3), int32] */;
  %456 = cast(%453, dtype="bool") /* ty=Tensor[(13, 14, 15), bool] */;
  %457 = dyn.reshape(%454, %455, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %458 = logical_and(%456, %457) /* ty=Tensor[(13, 14, 15), bool] */;
  %459 = cast(%var_6834, dtype="int32") /* ty=Tensor[(13, 14, 15), int32] */;
  %460 = shape_of(%458, dtype="int32") /* ty=Tensor[(3), int32] */;
  %461 = cast(%458, dtype="int32") /* ty=Tensor[(13, 14, 15), int32] */;
  %462 = dyn.reshape(%459, %460, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %463 = bitwise_xor(%461, %462) /* ty=Tensor[(13, 14, 15), int32] */;
  (%463,)
}

def @func_498(%var_492: int64, %var_493: Tensor[(16, 9, 16), int64]) -> Tensor[(16, 9, 16), bool] {
  %464 = cast(%var_492, dtype="bool") /* ty=bool */;
  %465 = cast(%var_493, dtype="bool") /* ty=Tensor[(16, 9, 16), bool] */;
  not_equal(%464, %465) /* ty=Tensor[(16, 9, 16), bool] */
}

def @func_11334() -> (Tensor[(10, 5, 8), float64], Tensor[(7, 12, 14), bool], int8, Tensor[(10, 5, 8), bool], Tensor[(16, 9, 16), bool], Tensor[(2304), int64]) {
  %466 = @func_10073() /* ty=(Tensor[(10, 5, 8), bool],) */;
  %467 = %466.0;
  %468 = cast(%467, dtype="float64") /* ty=Tensor[(10, 5, 8), float64] */;
  %469 = cast(meta[relay.Constant][27] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %470 = reshape(%469, newshape=[]) /* ty=int8 */;
  %471 = @func_10215(%470) /* ty=(Tensor[(7, 12, 14), bool], Tensor[(2304), int64], Tensor[(2304), int64], int8, int8) */;
  %472 = acos(%468) /* ty=Tensor[(10, 5, 8), float64] */;
  %473 = cast(%472, dtype="float32") /* ty=Tensor[(10, 5, 8), float32] */;
  %474 = cast(%467, dtype="float32") /* ty=Tensor[(10, 5, 8), float32] */;
  %475 = reshape(%473, newshape=[10, 5, 8]) /* ty=Tensor[(10, 5, 8), float32] */;
  %476 = reshape(%474, newshape=[10, 5, 8]) /* ty=Tensor[(10, 5, 8), float32] */;
  %477 = @func_5532(%475, %476) /* ty=(Tensor[(10, 5, 8), bool],) */;
  %478 = cast(meta[relay.Constant][27] /* ty=int8 */, dtype="int64") /* ty=int64 */;
  %479 = cast(meta[relay.Constant][28] /* ty=Tensor[(2304), int64] */, dtype="int64") /* ty=Tensor[(2304), int64] */;
  %480 = reshape(%478, newshape=[]) /* ty=int64 */;
  %481 = reshape(%479, newshape=[16, 9, 16]) /* ty=Tensor[(16, 9, 16), int64] */;
  %482 = %471.0;
  %483 = %477.0;
  %484 = @func_498(%480, %481) /* ty=Tensor[(16, 9, 16), bool] */;
  (%472, %482, meta[relay.Constant][27] /* ty=int8 */, %483, %484, meta[relay.Constant][28] /* ty=Tensor[(2304), int64] */)
}

def @func_10142(%var_10116: Tensor[(1400), int32]) -> (Tensor[(7, 12, 14), bool], Tensor[(10, 10, 14), float32], int32, Tensor[(1400), int32]) {
  %485 = @func_8682() /* ty=(Tensor[(7, 12, 14), bool],) */;
  %486 = cast(-10 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %487 = cast(%var_10116, dtype="int32") /* ty=Tensor[(1400), int32] */;
  %488 = reshape(%486, newshape=[]) /* ty=int32 */;
  %489 = reshape(%487, newshape=[10, 10, 14]) /* ty=Tensor[(10, 10, 14), int32] */;
  %490 = @func_1424(%488, %489) /* ty=(Tensor[(10, 10, 14), float32],) */;
  %491 = %485.0;
  %492 = %490.0;
  (%491, %492, -10 /* ty=int32 */, %var_10116)
}

def @func_10215(%var_10209: int8) -> (Tensor[(7, 12, 14), bool], Tensor[(2304), int64], Tensor[(2304), int64], int8, int8) {
  %493 = cast(meta[relay.Constant][29] /* ty=Tensor[(2304), int64] */, dtype="int64") /* ty=Tensor[(2304), int64] */;
  %494 = reshape(%493, newshape=[2304]) /* ty=Tensor[(2304), int64] */;
  %495 = @func_8326(%494) /* ty=(int64, Tensor[(2304), int64], Tensor[(7, 10, 16), float32]) */;
  %496 = cast(%var_10209, dtype="int8") /* ty=int8 */;
  %497 = reshape(%496, newshape=[]) /* ty=int8 */;
  %498 = @func_7192(%497) /* ty=(Tensor[(7, 12, 14), bool], Tensor[(1, 3, 6), float32], int8, Tensor[(1456), float64], Tensor[(35, 6), float64], Tensor[(1456), float64]) */;
  %499 = @func_7554() /* ty=Tensor[(7, 12, 14), bool] */;
  %500 = %495.1;
  %501 = %498.2;
  (%499, %500, meta[relay.Constant][29] /* ty=Tensor[(2304), int64] */, %501, %var_10209)
}

def @func_11888() -> (Tensor[(1176), bool], Tensor[(1040, ?), uint32], Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), bool]) {
  %502 = @func_9400() /* ty=Tensor[(1040, ?), int32] */;
  %503 = cast(meta[relay.Constant][30] /* ty=Tensor[(1176), bool] */, dtype="bool") /* ty=Tensor[(1176), bool] */;
  %504 = reshape(%503, newshape=[7, 12, 14]) /* ty=Tensor[(7, 12, 14), bool] */;
  %505 = @func_8047(%504) /* ty=(Tensor[(7, 12, 14), bool], int64, Tensor[(7, 12, 14), int32], Tensor[(2304), int64], Tensor[(16, 9, 16), bool]) */;
  %506 = %505.1;
  %507 = cast(%502, dtype="uint32") /* ty=Tensor[(1040, ?), uint32] */;
  %508 = cast(%506, dtype="uint32") /* ty=uint32 */;
  %509 = cast(%506, dtype="int8") /* ty=int8 */;
  %510 = reshape(%509, newshape=[]) /* ty=int8 */;
  %511 = @func_7192(%510) /* ty=(Tensor[(7, 12, 14), bool], Tensor[(1, 3, 6), float32], int8, Tensor[(1456), float64], Tensor[(35, 6), float64], Tensor[(1456), float64]) */;
  %512 = @func_11334() /* ty=(Tensor[(10, 5, 8), float64], Tensor[(7, 12, 14), bool], int8, Tensor[(10, 5, 8), bool], Tensor[(16, 9, 16), bool], Tensor[(2304), int64]) */;
  %513 = multiply(%507, %508) /* ty=Tensor[(1040, ?), uint32] */;
  %514 = %511.0;
  %515 = %512.1;
  (meta[relay.Constant][30] /* ty=Tensor[(1176), bool] */, %513, %514, %515)
}

def @func_10659() -> (Tensor[(13, 14, 15), float32],) {
  %516 = @func_8661() /* ty=(Tensor[(13, 14, 15), float64],) */;
  %517 = %516.0;
  %518 = cast(%517, dtype="float32") /* ty=Tensor[(13, 14, 15), float32] */;
  %519 = rsqrt(%518) /* ty=Tensor[(13, 14, 15), float32] */;
  (%519,)
}

def @func_10825(%var_10756: Tensor[(1040, 7), int32], %var_10767: Tensor[(1040, 7), int32]) -> (Tensor[(7, 12, 14), bool], Tensor[(1040, 7), bool], Tensor[(7, 12, 14), float32], Tensor[(825), uint8], Tensor[(900), float32], Tensor[(900), float32], Tensor[(13, 14, 15), float32], Tensor[(12, 7, 16), float64], Tensor[(1344), float64]) {
  %520 = @func_7369() /* ty=(Tensor[(7, 12, 14), bool],) */;
  %521 = @func_9400() /* ty=Tensor[(1040, ?), int32] */;
  %522 = cast(%521, dtype="int32") /* ty=Tensor[(1040, ?), int32] */;
  %523 = cast(%var_10756, dtype="int32") /* ty=Tensor[(1040, 7), int32] */;
  %524 = logical_xor(%522, %523) /* ty=Tensor[(1040, 7), int32] */;
  %525 = cast(%var_10767, dtype="bool") /* ty=Tensor[(1040, 7), bool] */;
  %526 = shape_of(%524, dtype="int32") /* ty=Tensor[(2), int32] */;
  %527 = cast(%524, dtype="bool") /* ty=Tensor[(1040, 7), bool] */;
  %528 = dyn.reshape(%525, %526, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %529 = cast(meta[relay.Constant][31] /* ty=Tensor[(825), uint8] */, dtype="uint8") /* ty=Tensor[(825), uint8] */;
  %530 = reshape(%529, newshape=[825]) /* ty=Tensor[(825), uint8] */;
  %531 = @func_10394(%530) /* ty=(Tensor[(7, 12, 14), float32], Tensor[(15, 11, 5), uint8], Tensor[(825), uint8]) */;
  %532 = @func_9265() /* ty=(Tensor[(900), float32],) */;
  %533 = @func_9162() /* ty=(Tensor[(900), float32],) */;
  %534 = @func_10659() /* ty=(Tensor[(13, 14, 15), float32],) */;
  %535 = cast(meta[relay.Constant][32] /* ty=Tensor[(1344), float64] */, dtype="float64") /* ty=Tensor[(1344), float64] */;
  %536 = reshape(%535, newshape=[12, 7, 16]) /* ty=Tensor[(12, 7, 16), float64] */;
  %537 = @func_1767(%536) /* ty=(Tensor[(12, 7, 16), float64],) */;
  %538 = %520.0;
  %539 = not_equal(%527, %528) /* ty=Tensor[(1040, 7), bool] */;
  %540 = %531.0;
  %541 = %532.0;
  %542 = %533.0;
  %543 = %534.0;
  %544 = %537.0;
  (%538, %539, %540, meta[relay.Constant][31] /* ty=Tensor[(825), uint8] */, %541, %542, %543, %544, meta[relay.Constant][32] /* ty=Tensor[(1344), float64] */)
}

def @func_11908(%var_11896: Tensor[(1040, 1), uint32], %var_11902: int32) -> (Tensor[(1040, ?), float32], Tensor[(2304), int64], int32) {
  %545 = @func_11888() /* ty=(Tensor[(1176), bool], Tensor[(1040, ?), uint32], Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), bool]) */;
  %546 = %545.1;
  %547 = cast(%var_11896, dtype="float32") /* ty=Tensor[(1040, 1), float32] */;
  %548 = shape_of(%546, dtype="int32") /* ty=Tensor[(2), int32] */;
  %549 = cast(%546, dtype="float32") /* ty=Tensor[(1040, ?), float32] */;
  %550 = dyn.reshape(%547, %548, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %551 = cast(%var_11902, dtype="int32") /* ty=int32 */;
  %552 = reshape(%551, newshape=[]) /* ty=int32 */;
  %553 = @func_11220(%552) /* ty=(Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), float32], Tensor[(1400), bool], Tensor[(7, 12, 14), int32], Tensor[(2304), int64], Tensor[(6, 12, 14), float32], Tensor[(7, 12, 14), bool]) */;
  %554 = power(%549, %550) /* ty=Tensor[(1040, ?), float32] */;
  %555 = %553.4;
  (%554, %555, %var_11902)
}

def @func_8813() -> (Tensor[(16, 9, 16), bool], Tensor[(14, 14, 13), float32], Tensor[(1440), int32]) {
  %556 = @func_7914() /* ty=(Tensor[(3, 6, 1), float32], Tensor[(16, 9, 16), bool], int64, Tensor[(2304), int64], Tensor[(7, 12, 14), float64]) */;
  %557 = cast(meta[relay.Constant][33] /* ty=Tensor[(1440), int32] */, dtype="int32") /* ty=Tensor[(1440), int32] */;
  %558 = reshape(%557, newshape=[1440]) /* ty=Tensor[(1440), int32] */;
  %559 = @func_3682(%558) /* ty=(Tensor[(14, 14, 13), float32], Tensor[(9, 10, 16), bool], Tensor[(1440), int32], Tensor[(14, 14, 13), float64]) */;
  %560 = %556.1;
  %561 = %559.0;
  (%560, %561, meta[relay.Constant][33] /* ty=Tensor[(1440), int32] */)
}

def @func_7554() -> Tensor[(7, 12, 14), bool] {
  %562 = @func_7323() /* ty=(Tensor[(7, 12, 14), bool],) */;
  %562.0
}

def @func_5566(%var_5538: Tensor[(7, 3, 4), float32], %var_5546: Tensor[(7, 3, 4), float32], %var_5555: Tensor[(1350), uint64]) -> (Tensor[(7, 3, 4), float32], Tensor[(15, 9, 10), uint64], uint64, Tensor[(1350), uint64], Tensor[(15, 9, 10), uint64]) {
  %563 = cast(%var_5538, dtype="float32") /* ty=Tensor[(7, 3, 4), float32] */;
  %564 = acosh(%563) /* ty=Tensor[(7, 3, 4), float32] */;
  %565 = cast(%var_5546, dtype="float32") /* ty=Tensor[(7, 3, 4), float32] */;
  %566 = shape_of(%564, dtype="int32") /* ty=Tensor[(3), int32] */;
  %567 = cast(%564, dtype="float32") /* ty=Tensor[(7, 3, 4), float32] */;
  %568 = dyn.reshape(%565, %566, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %569 = cast(meta[relay.Constant][34] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %570 = cast(%var_5555, dtype="uint64") /* ty=Tensor[(1350), uint64] */;
  %571 = reshape(%569, newshape=[]) /* ty=uint64 */;
  %572 = reshape(%570, newshape=[15, 9, 10]) /* ty=Tensor[(15, 9, 10), uint64] */;
  %573 = @func_2904(%571, %572) /* ty=(Tensor[(15, 9, 10), uint64],) */;
  %574 = cast(meta[relay.Constant][34] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %575 = cast(%var_5555, dtype="uint64") /* ty=Tensor[(1350), uint64] */;
  %576 = reshape(%574, newshape=[]) /* ty=uint64 */;
  %577 = reshape(%575, newshape=[15, 9, 10]) /* ty=Tensor[(15, 9, 10), uint64] */;
  %578 = @func_2904(%576, %577) /* ty=(Tensor[(15, 9, 10), uint64],) */;
  %579 = divide(%567, %568) /* ty=Tensor[(7, 3, 4), float32] */;
  %580 = %573.0;
  %581 = %578.0;
  (%579, %580, meta[relay.Constant][34] /* ty=uint64 */, %var_5555, %581)
}

def @func_8793() -> (Tensor[(7, 12, 14), float32],) {
  %582 = @func_7101() /* ty=(Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), float32]) */;
  %583 = %582.1;
  (%583,)
}

def @func_8436() -> Tensor[(7, 12, 14), float32] {
  %584 = @func_7724() /* ty=(Tensor[(7, 12, 14), float32], Tensor[(7, 12, 14), float32]) */;
  %584.1
}

def @func_8113(%var_8080: Tensor[(11, 12, 2), float32], %var_8096: Tensor[(210), float64], %var_8097: Tensor[(1456), float64]) -> (Tensor[(11, 12, 2), float64], Tensor[(1456), float64], Tensor[(210), float64], Tensor[(1456), float64]) {
  %585 = cast(%var_8080, dtype="float32") /* ty=Tensor[(11, 12, 2), float32] */;
  %586 = sin(%585) /* ty=Tensor[(11, 12, 2), float32] */;
  %587 = cast(%586, dtype="float64") /* ty=Tensor[(11, 12, 2), float64] */;
  %588 = cast(%var_8096, dtype="float64") /* ty=Tensor[(210), float64] */;
  %589 = cast(%var_8097, dtype="float64") /* ty=Tensor[(1456), float64] */;
  %590 = reshape(%588, newshape=[5, 14, 3]) /* ty=Tensor[(5, 14, 3), float64] */;
  %591 = reshape(%589, newshape=[1456]) /* ty=Tensor[(1456), float64] */;
  %592 = @func_5610(%590, %591) /* ty=(Tensor[(5, 14, 3), float64], Tensor[(7, 13, 16), float64], Tensor[(1456), float64]) */;
  %593 = rsqrt(%587) /* ty=Tensor[(11, 12, 2), float64] */;
  %594 = %592.2;
  (%593, %594, %var_8096, %var_8097)
}

def @func_11738() -> (Tensor[(7, 12, 14), bool], Tensor[(3, 10, 3), float32], Tensor[(7, 12, 14), bool]) {
  %595 = @func_8682() /* ty=(Tensor[(7, 12, 14), bool],) */;
  %596 = %595.0;
  %597 = @func_10014() /* ty=(Tensor[(3, 6, 14), int8], Tensor[(7, 12, 14), bool]) */;
  %598 = %597.1;
  %599 = cast(%598, dtype="bool") /* ty=Tensor[(7, 12, 14), bool] */;
  %600 = shape_of(%596, dtype="int32") /* ty=Tensor[(3), int32] */;
  %601 = cast(%596, dtype="bool") /* ty=Tensor[(7, 12, 14), bool] */;
  %602 = dyn.reshape(%599, %600, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %603 = not_equal(%601, %602) /* ty=Tensor[(7, 12, 14), bool] */;
  %604 = @func_11156() /* ty=Tensor[(3, 10, 3), float32] */;
  %605 = @func_10985() /* ty=Tensor[(7, 12, 14), bool] */;
  (%603, %604, %605)
}

def @func_3268(%var_3244: int8) -> (Tensor[(1, 3, 6), float32],) {
  %606 = cast(%var_3244, dtype="bool") /* ty=bool */;
  %607 = cast(meta[relay.Constant][35] /* ty=Tensor[(1, 3, 6), int8] */, dtype="bool") /* ty=Tensor[(1, 3, 6), bool] */;
  %608 = less_equal(%606, %607) /* ty=Tensor[(1, 3, 6), bool] */;
  %609 = cast(%var_3244, dtype="float32") /* ty=float32 */;
  %610 = cast(%608, dtype="float32") /* ty=Tensor[(1, 3, 6), float32] */;
  %611 = mod(%609, %610) /* ty=Tensor[(1, 3, 6), float32] */;
  (%611,)
}

def @func_7249(%var_7232: Tensor[(7, 12, 14), bool]) -> (Tensor[(7, 12, 14), float32],) {
  %612 = @func_7101() /* ty=(Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), float32]) */;
  %613 = %612.0;
  %614 = cast(%var_7232, dtype="float32") /* ty=Tensor[(7, 12, 14), float32] */;
  %615 = shape_of(%613, dtype="int32") /* ty=Tensor[(3), int32] */;
  %616 = cast(%613, dtype="float32") /* ty=Tensor[(7, 12, 14), float32] */;
  %617 = dyn.reshape(%614, %615, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %618 = power(%616, %617) /* ty=Tensor[(7, 12, 14), float32] */;
  (%618,)
}

def @func_9619() -> (Tensor[(7, 12, 14), float32], Tensor[(10, 5, 8), bool], Tensor[(1, 400), float32]) {
  %619 = cast(meta[relay.Constant][36] /* ty=Tensor[(1, 400), float32] */, dtype="float32") /* ty=Tensor[(1, 400), float32] */;
  %620 = cast(meta[relay.Constant][36] /* ty=Tensor[(1, 400), float32] */, dtype="float32") /* ty=Tensor[(1, 400), float32] */;
  %621 = reshape(%619, newshape=[10, 5, 8]) /* ty=Tensor[(10, 5, 8), float32] */;
  %622 = reshape(%620, newshape=[10, 5, 8]) /* ty=Tensor[(10, 5, 8), float32] */;
  %623 = @func_5532(%621, %622) /* ty=(Tensor[(10, 5, 8), bool],) */;
  %624 = @func_8436() /* ty=Tensor[(7, 12, 14), float32] */;
  %625 = %623.0;
  (%624, %625, meta[relay.Constant][36] /* ty=Tensor[(1, 400), float32] */)
}

def @func_10505(%var_10501: Tensor[(2304), int64]) -> (Tensor[(1, 12, 2), float32], Tensor[(7, 12, 14), bool], Tensor[(10, 4, 13), float64], Tensor[(520), float32], Tensor[(7, 10, 16), float32], Tensor[(2304), int64]) {
  %626 = cast(meta[relay.Constant][37] /* ty=Tensor[(1, 12, 2), float32] */, dtype="float32") /* ty=Tensor[(1, 12, 2), float32] */;
  %627 = @func_7323() /* ty=(Tensor[(7, 12, 14), bool],) */;
  %628 = cast(meta[relay.Constant][38] /* ty=Tensor[(520), float32] */, dtype="float32") /* ty=Tensor[(520), float32] */;
  %629 = cast(meta[relay.Constant][38] /* ty=Tensor[(520), float32] */, dtype="float32") /* ty=Tensor[(520), float32] */;
  %630 = reshape(%628, newshape=[10, 4, 13]) /* ty=Tensor[(10, 4, 13), float32] */;
  %631 = reshape(%629, newshape=[10, 4, 13]) /* ty=Tensor[(10, 4, 13), float32] */;
  %632 = @func_4035(%630, %631) /* ty=(Tensor[(10, 4, 13), float32], Tensor[(10, 4, 13), float64]) */;
  %633 = cast(%var_10501, dtype="int64") /* ty=Tensor[(2304), int64] */;
  %634 = reshape(%633, newshape=[2304]) /* ty=Tensor[(2304), int64] */;
  %635 = @func_8326(%634) /* ty=(int64, Tensor[(2304), int64], Tensor[(7, 10, 16), float32]) */;
  %636 = sinh(%626) /* ty=Tensor[(1, 12, 2), float32] */;
  %637 = %627.0;
  %638 = %632.1;
  %639 = %635.2;
  (%636, %637, %638, meta[relay.Constant][38] /* ty=Tensor[(520), float32] */, %639, %var_10501)
}

def @func_9265() -> (Tensor[(900), float32],) {
  %640 = @func_7938() /* ty=(Tensor[(900), float32],) */;
  %641 = %640.0;
  (%641,)
}

def @func_7628(%var_7625: int32, %var_7626: Tensor[(2, 700), int32]) -> (Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), float64], Tensor[(10, 10, 14), float32], int32, Tensor[(2, 700), int32]) {
  %642 = @func_7323() /* ty=(Tensor[(7, 12, 14), bool],) */;
  %643 = @func_7323() /* ty=(Tensor[(7, 12, 14), bool],) */;
  %644 = %643.0;
  %645 = cast(%644, dtype="float64") /* ty=Tensor[(7, 12, 14), float64] */;
  %646 = cast(%var_7625, dtype="int32") /* ty=int32 */;
  %647 = cast(%var_7626, dtype="int32") /* ty=Tensor[(2, 700), int32] */;
  %648 = reshape(%646, newshape=[]) /* ty=int32 */;
  %649 = reshape(%647, newshape=[10, 10, 14]) /* ty=Tensor[(10, 10, 14), int32] */;
  %650 = @func_1424(%648, %649) /* ty=(Tensor[(10, 10, 14), float32],) */;
  %651 = %642.0;
  %652 = log10(%645) /* ty=Tensor[(7, 12, 14), float64] */;
  %653 = %650.0;
  (%651, %652, %653, %var_7625, %var_7626)
}

def @func_5532(%var_5526: Tensor[(10, 5, 8), float32], %var_5527: Tensor[(10, 5, 8), float32]) -> (Tensor[(10, 5, 8), bool],) {
  %654 = cast(%var_5527, dtype="bool") /* ty=Tensor[(10, 5, 8), bool] */;
  %655 = shape_of(%var_5526, dtype="int32") /* ty=Tensor[(3), int32] */;
  %656 = cast(%var_5526, dtype="bool") /* ty=Tensor[(10, 5, 8), bool] */;
  %657 = dyn.reshape(%654, %655, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %658 = greater(%656, %657) /* ty=Tensor[(10, 5, 8), bool] */;
  (%658,)
}

def @func_3428(%var_3420: Tensor[(9, 10, 16), int32], %var_3421: Tensor[(9, 10, 16), int32]) -> (Tensor[(9, 10, 16), bool],) {
  %659 = cast(%var_3421, dtype="bool") /* ty=Tensor[(9, 10, 16), bool] */;
  %660 = shape_of(%var_3420, dtype="int32") /* ty=Tensor[(3), int32] */;
  %661 = cast(%var_3420, dtype="bool") /* ty=Tensor[(9, 10, 16), bool] */;
  %662 = dyn.reshape(%659, %660, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %663 = greater(%661, %662) /* ty=Tensor[(9, 10, 16), bool] */;
  (%663,)
}

def @func_1424(%var_1411: int32, %var_1412: Tensor[(10, 10, 14), int32]) -> (Tensor[(10, 10, 14), float32],) {
  %664 = cast(%var_1411, dtype="int32") /* ty=int32 */;
  %665 = cast(%var_1412, dtype="int32") /* ty=Tensor[(10, 10, 14), int32] */;
  %666 = left_shift(%664, %665) /* ty=Tensor[(10, 10, 14), int32] */;
  %667 = cast(%666, dtype="float32") /* ty=Tensor[(10, 10, 14), float32] */;
  %668 = erf(%667) /* ty=Tensor[(10, 10, 14), float32] */;
  (%668,)
}

def @func_825(%var_804: Tensor[(9, 4, 13), float32], %var_812: int64) -> (Tensor[(9, 4, 13), float32], Tensor[(16, 9, 16), bool], int64, Tensor[(2304), int64]) {
  %669 = cast(%var_804, dtype="float32") /* ty=Tensor[(9, 4, 13), float32] */;
  %670 = cast(%var_812, dtype="int64") /* ty=int64 */;
  %671 = cast(meta[relay.Constant][39] /* ty=Tensor[(2304), int64] */, dtype="int64") /* ty=Tensor[(2304), int64] */;
  %672 = reshape(%670, newshape=[]) /* ty=int64 */;
  %673 = reshape(%671, newshape=[16, 9, 16]) /* ty=Tensor[(16, 9, 16), int64] */;
  %674 = cosh(%669) /* ty=Tensor[(9, 4, 13), float32] */;
  %675 = @func_498(%672, %673) /* ty=Tensor[(16, 9, 16), bool] */;
  (%674, %675, %var_812, meta[relay.Constant][39] /* ty=Tensor[(2304), int64] */)
}

def @func_9162() -> (Tensor[(900), float32],) {
  %676 = @func_7938() /* ty=(Tensor[(900), float32],) */;
  %677 = %676.0;
  (%677,)
}

def @func_9764(%var_9738: Tensor[(468), float32]) -> (Tensor[(900), float32], Tensor[(2304), int64], Tensor[(468), float32], int64, Tensor[(14, 14, 13), float32], Tensor[(10, 144), int32], Tensor[(7, 12, 14), float32]) {
  %678 = @func_9265() /* ty=(Tensor[(900), float32],) */;
  %679 = cast(%var_9738, dtype="float32") /* ty=Tensor[(468), float32] */;
  %680 = cast(-9 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %681 = reshape(%679, newshape=[9, 4, 13]) /* ty=Tensor[(9, 4, 13), float32] */;
  %682 = reshape(%680, newshape=[]) /* ty=int64 */;
  %683 = @func_825(%681, %682) /* ty=(Tensor[(9, 4, 13), float32], Tensor[(16, 9, 16), bool], int64, Tensor[(2304), int64]) */;
  %684 = cast(meta[relay.Constant][40] /* ty=Tensor[(10, 144), int32] */, dtype="int32") /* ty=Tensor[(10, 144), int32] */;
  %685 = reshape(%684, newshape=[1440]) /* ty=Tensor[(1440), int32] */;
  %686 = @func_3682(%685) /* ty=(Tensor[(14, 14, 13), float32], Tensor[(9, 10, 16), bool], Tensor[(1440), int32], Tensor[(14, 14, 13), float64]) */;
  %687 = @func_9345() /* ty=(Tensor[(7, 12, 14), float32],) */;
  %688 = %678.0;
  %689 = %683.3;
  %690 = %686.0;
  %691 = %687.0;
  (%688, %689, %var_9738, -9 /* ty=int64 */, %690, meta[relay.Constant][40] /* ty=Tensor[(10, 144), int32] */, %691)
}

def @func_8047(%var_8013: Tensor[(7, 12, 14), bool]) -> (Tensor[(7, 12, 14), bool], int64, Tensor[(7, 12, 14), int32], Tensor[(2304), int64], Tensor[(16, 9, 16), bool]) {
  %692 = @func_7554() /* ty=Tensor[(7, 12, 14), bool] */;
  %693 = cast(%var_8013, dtype="bool") /* ty=Tensor[(7, 12, 14), bool] */;
  %694 = shape_of(%692, dtype="int32") /* ty=Tensor[(3), int32] */;
  %695 = cast(%692, dtype="bool") /* ty=Tensor[(7, 12, 14), bool] */;
  %696 = dyn.reshape(%693, %694, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %697 = @func_7914() /* ty=(Tensor[(3, 6, 1), float32], Tensor[(16, 9, 16), bool], int64, Tensor[(2304), int64], Tensor[(7, 12, 14), float64]) */;
  %698 = cast(meta[relay.Constant][41] /* ty=Tensor[(2304), int64] */, dtype="int64") /* ty=Tensor[(2304), int64] */;
  %699 = reshape(%698, newshape=[8, 288]) /* ty=Tensor[(8, 288), int64] */;
  %700 = @func_7690(%699) /* ty=(Tensor[(12, 15, 5), float32], Tensor[(7, 12, 14), int32], Tensor[(16, 9, 16), bool], int64, Tensor[(8, 288), int64], Tensor[(15, 11, 5), uint8], Tensor[(825), uint8]) */;
  %701 = cast(meta[relay.Constant][41] /* ty=Tensor[(2304), int64] */, dtype="int64") /* ty=Tensor[(2304), int64] */;
  %702 = reshape(%701, newshape=[8, 288]) /* ty=Tensor[(8, 288), int64] */;
  %703 = @func_7690(%702) /* ty=(Tensor[(12, 15, 5), float32], Tensor[(7, 12, 14), int32], Tensor[(16, 9, 16), bool], int64, Tensor[(8, 288), int64], Tensor[(15, 11, 5), uint8], Tensor[(825), uint8]) */;
  %704 = equal(%695, %696) /* ty=Tensor[(7, 12, 14), bool] */;
  %705 = %697.2;
  %706 = %700.1;
  %707 = %703.2;
  (%704, %705, %706, meta[relay.Constant][41] /* ty=Tensor[(2304), int64] */, %707)
}

def @func_7747(%var_7744: Tensor[(1, 6, 11), float64]) -> Tensor[(1, 6, 11), float64] {
  %708 = cast(%var_7744, dtype="float64") /* ty=Tensor[(1, 6, 11), float64] */;
  asinh(%708) /* ty=Tensor[(1, 6, 11), float64] */
}

def @func_7404() -> (Tensor[(7, 12, 14), bool], Tensor[(12, 15, 5), float32], Tensor[(900), float32]) {
  %709 = @func_7369() /* ty=(Tensor[(7, 12, 14), bool],) */;
  %710 = cast(meta[relay.Constant][42] /* ty=Tensor[(900), float32] */, dtype="float32") /* ty=Tensor[(900), float32] */;
  %711 = reshape(%710, newshape=[12, 15, 5]) /* ty=Tensor[(12, 15, 5), float32] */;
  %712 = @func_2493(%711) /* ty=(Tensor[(12, 15, 5), float32],) */;
  %713 = %709.0;
  %714 = %712.0;
  (%713, %714, meta[relay.Constant][42] /* ty=Tensor[(900), float32] */)
}

def @func_9830() -> (Tensor[(3, 6, 1), float32],) {
  %715 = @func_8297() /* ty=(Tensor[(3, 6, 14), int8], Tensor[(7, 12, 14), bool], Tensor[(3, 6, 1), float64], Tensor[(15, 11, 5), uint8], Tensor[(275, 3), uint8], Tensor[(7, 12, 14), float32], Tensor[(3, 6, 1), float32], Tensor[(13, 14, 15), int32], Tensor[(14, 195), int8], Tensor[(3, 6, 1), float32]) */;
  %716 = %715.9;
  (%716,)
}

def @func_10985() -> Tensor[(7, 12, 14), bool] {
  %717 = @func_7323() /* ty=(Tensor[(7, 12, 14), bool],) */;
  %717.0
}

def @func_11156() -> Tensor[(3, 10, 3), float32] {
  @func_8366() /* ty=Tensor[(3, 10, 3), float32] */
}

def @func_9787() -> (Tensor[(3, 6, 1), float32],) {
  %718 = @func_7590() /* ty=Tensor[(3, 6, 1), float32] */;
  %719 = cast(%718, dtype="float32") /* ty=Tensor[(3, 6, 1), float32] */;
  %720 = atanh(%719) /* ty=Tensor[(3, 6, 1), float32] */;
  (%720,)
}

def @func_2904(%var_2896: uint64, %var_2897: Tensor[(15, 9, 10), uint64]) -> (Tensor[(15, 9, 10), uint64],) {
  %721 = cast(%var_2896, dtype="uint64") /* ty=uint64 */;
  %722 = cast(%var_2897, dtype="uint64") /* ty=Tensor[(15, 9, 10), uint64] */;
  %723 = logical_xor(%721, %722) /* ty=Tensor[(15, 9, 10), uint64] */;
  (%723,)
}

def @func_1767(%var_1756: Tensor[(12, 7, 16), float64]) -> (Tensor[(12, 7, 16), float64],) {
  %724 = cast(%var_1756, dtype="float64") /* ty=Tensor[(12, 7, 16), float64] */;
  %725 = rsqrt(%724) /* ty=Tensor[(12, 7, 16), float64] */;
  (%725,)
}

def @main(%var_12246: Tensor[(1, 4, 15), float32], %var_12252: Tensor[(16, 10), float32], %var_12267: Tensor[(108, 2), float64]) -> (Tensor[(1, 16, 10), float32], Tensor[(16, 10), float32], Tensor[(13, 14, 15), float64], Tensor[(9, 8, 3), float64], Tensor[(108, 2), float64], Tensor[(?, 4, 15), uint16]) {
  %726 = cast(%var_12252, dtype="float32") /* ty=Tensor[(16, 10), float32] */;
  %727 = reshape(%726, newshape=[1, 16, 10]) /* ty=Tensor[(1, 16, 10), float32] */;
  %728 = @func_10883(%727) /* ty=(Tensor[(1, 16, 10), float32],) */;
  %729 = @func_8661() /* ty=(Tensor[(13, 14, 15), float64],) */;
  %730 = cast(%var_12267, dtype="float64") /* ty=Tensor[(108, 2), float64] */;
  %731 = reshape(%730, newshape=[9, 8, 3]) /* ty=Tensor[(9, 8, 3), float64] */;
  %732 = @func_9519(%731) /* ty=(Tensor[(9, 8, 3), float32], Tensor[(9, 8, 3), float64], Tensor[(9, 8, 3), float32], Tensor[(9, 8, 3), float32]) */;
  %733 = cast(%var_12246, dtype="float32") /* ty=Tensor[(1, 4, 15), float32] */;
  %734 = atan(%733) /* ty=Tensor[(1, 4, 15), float32] */;
  %735 = cast(%734, dtype="uint16") /* ty=Tensor[(1, 4, 15), uint16] */;
  %736 = shape_of(%var_12246, dtype="int32") /* ty=Tensor[(3), int32] */;
  %737 = cast(%var_12246, dtype="uint16") /* ty=Tensor[(1, 4, 15), uint16] */;
  %738 = dyn.reshape(%735, %736, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %739 = %728.0;
  %740 = %729.0;
  %741 = %732.1;
  %742 = bitwise_or(%737, %738) /* ty=Tensor[(?, 4, 15), uint16] */;
  (%739, %var_12252, %740, %741, %var_12267, %742)
}

def @func_9519(%var_9463: Tensor[(9, 8, 3), float64]) -> (Tensor[(9, 8, 3), float32], Tensor[(9, 8, 3), float64], Tensor[(9, 8, 3), float32], Tensor[(9, 8, 3), float32]) {
  %743 = cast(%var_9463, dtype="float64") /* ty=Tensor[(9, 8, 3), float64] */;
  %744 = log2(%743) /* ty=Tensor[(9, 8, 3), float64] */;
  %745 = cast(%744, dtype="float32") /* ty=Tensor[(9, 8, 3), float32] */;
  %746 = cast(%744, dtype="float64") /* ty=Tensor[(9, 8, 3), float64] */;
  %747 = cast(%744, dtype="float32") /* ty=Tensor[(9, 8, 3), float32] */;
  %748 = cast(%var_9463, dtype="float32") /* ty=Tensor[(9, 8, 3), float32] */;
  %749 = sin(%745) /* ty=Tensor[(9, 8, 3), float32] */;
  %750 = tan(%746) /* ty=Tensor[(9, 8, 3), float64] */;
  %751 = sqrt(%747) /* ty=Tensor[(9, 8, 3), float32] */;
  %752 = cosh(%748) /* ty=Tensor[(9, 8, 3), float32] */;
  (%749, %750, %751, %752)
}

def @func_724(%var_675: Tensor[(16, 11, 9), float64], %var_691: int64, %var_692: Tensor[(2304), int64]) -> (Tensor[(16, 11, 9), float64], Tensor[(16, 9, 16), bool], int64, Tensor[(2304), int64], Tensor[(16, 9, 16), bool]) {
  %753 = cast(%var_675, dtype="float64") /* ty=Tensor[(16, 11, 9), float64] */;
  %754 = cast(%var_691, dtype="int64") /* ty=int64 */;
  %755 = cast(%var_692, dtype="int64") /* ty=Tensor[(2304), int64] */;
  %756 = reshape(%754, newshape=[]) /* ty=int64 */;
  %757 = reshape(%755, newshape=[16, 9, 16]) /* ty=Tensor[(16, 9, 16), int64] */;
  %758 = cast(%var_691, dtype="int64") /* ty=int64 */;
  %759 = @func_498(%756, %757) /* ty=Tensor[(16, 9, 16), bool] */;
  %760 = cast(%759, dtype="int64") /* ty=Tensor[(16, 9, 16), int64] */;
  %761 = reshape(%758, newshape=[]) /* ty=int64 */;
  %762 = reshape(%760, newshape=[16, 9, 16]) /* ty=Tensor[(16, 9, 16), int64] */;
  %763 = exp(%753) /* ty=Tensor[(16, 11, 9), float64] */;
  %764 = @func_498(%761, %762) /* ty=Tensor[(16, 9, 16), bool] */;
  (%763, %759, %var_691, %var_692, %764)
}

def @func_11624() -> (Tensor[(7, 12, 14), float32],) {
  %765 = @func_8896() /* ty=(Tensor[(7, 12, 14), float32],) */;
  %766 = %765.0;
  (%766,)
}

def @func_8297() -> (Tensor[(3, 6, 14), int8], Tensor[(7, 12, 14), bool], Tensor[(3, 6, 1), float64], Tensor[(15, 11, 5), uint8], Tensor[(275, 3), uint8], Tensor[(7, 12, 14), float32], Tensor[(3, 6, 1), float32], Tensor[(13, 14, 15), int32], Tensor[(14, 195), int8], Tensor[(3, 6, 1), float32]) {
  %767 = @func_7590() /* ty=Tensor[(3, 6, 1), float32] */;
  %768 = cast(%767, dtype="int8") /* ty=Tensor[(3, 6, 1), int8] */;
  %769 = cast(meta[relay.Constant][43] /* ty=Tensor[(3, 6, 14), float32] */, dtype="int8") /* ty=Tensor[(3, 6, 14), int8] */;
  %770 = @func_7323() /* ty=(Tensor[(7, 12, 14), bool],) */;
  %771 = cast(%767, dtype="float32") /* ty=Tensor[(3, 6, 1), float32] */;
  %772 = sigmoid(%771) /* ty=Tensor[(3, 6, 1), float32] */;
  %773 = cast(%772, dtype="float64") /* ty=Tensor[(3, 6, 1), float64] */;
  %774 = cast(meta[relay.Constant][44] /* ty=Tensor[(275, 3), uint8] */, dtype="uint8") /* ty=Tensor[(275, 3), uint8] */;
  %775 = cast(meta[relay.Constant][44] /* ty=Tensor[(275, 3), uint8] */, dtype="uint8") /* ty=Tensor[(275, 3), uint8] */;
  %776 = reshape(%774, newshape=[15, 11, 5]) /* ty=Tensor[(15, 11, 5), uint8] */;
  %777 = reshape(%775, newshape=[15, 11, 5]) /* ty=Tensor[(15, 11, 5), uint8] */;
  %778 = @func_4582(%776, %777) /* ty=(Tensor[(15, 11, 5), uint8],) */;
  %779 = %770.0;
  %780 = cast(%779, dtype="bool") /* ty=Tensor[(7, 12, 14), bool] */;
  %781 = reshape(%780, newshape=[7, 12, 14]) /* ty=Tensor[(7, 12, 14), bool] */;
  %782 = @func_7249(%781) /* ty=(Tensor[(7, 12, 14), float32],) */;
  %783 = cast(%772, dtype="float64") /* ty=Tensor[(3, 6, 1), float64] */;
  %784 = log(%783) /* ty=Tensor[(3, 6, 1), float64] */;
  %785 = cast(%784, dtype="float32") /* ty=Tensor[(3, 6, 1), float32] */;
  %786 = cast(meta[relay.Constant][45] /* ty=Tensor[(14, 195), int8] */, dtype="int8") /* ty=Tensor[(14, 195), int8] */;
  %787 = cast(meta[relay.Constant][45] /* ty=Tensor[(14, 195), int8] */, dtype="int8") /* ty=Tensor[(14, 195), int8] */;
  %788 = cast(meta[relay.Constant][45] /* ty=Tensor[(14, 195), int8] */, dtype="bool") /* ty=Tensor[(14, 195), bool] */;
  %789 = reshape(%786, newshape=[13, 14, 15]) /* ty=Tensor[(13, 14, 15), int8] */;
  %790 = reshape(%787, newshape=[13, 14, 15]) /* ty=Tensor[(13, 14, 15), int8] */;
  %791 = reshape(%788, newshape=[13, 14, 15]) /* ty=Tensor[(13, 14, 15), bool] */;
  %792 = @func_6862(%789, %790, %791) /* ty=(Tensor[(13, 14, 15), int32],) */;
  %793 = cast(%784, dtype="float32") /* ty=Tensor[(3, 6, 1), float32] */;
  %794 = multiply(%768, %769) /* ty=Tensor[(3, 6, 14), int8] */;
  %795 = asinh(%773) /* ty=Tensor[(3, 6, 1), float64] */;
  %796 = %778.0;
  %797 = %782.0;
  %798 = cos(%785) /* ty=Tensor[(3, 6, 1), float32] */;
  %799 = %792.0;
  %800 = tan(%793) /* ty=Tensor[(3, 6, 1), float32] */;
  (%794, %779, %795, %796, meta[relay.Constant][44] /* ty=Tensor[(275, 3), uint8] */, %797, %798, %799, meta[relay.Constant][45] /* ty=Tensor[(14, 195), int8] */, %800)
}

def @func_10907() -> (Tensor[(13, 14, 15), float64],) {
  %801 = @func_10659() /* ty=(Tensor[(13, 14, 15), float32],) */;
  %802 = %801.0;
  %803 = cast(%802, dtype="float64") /* ty=Tensor[(13, 14, 15), float64] */;
  %804 = log(%803) /* ty=Tensor[(13, 14, 15), float64] */;
  (%804,)
}

def @func_8506(%var_8479: Tensor[(2304), int64]) -> (Tensor[(7, 12, 14), float32], Tensor[(15, 11, 5), uint8], Tensor[(2304), int64], Tensor[(7, 12, 14), float32]) {
  %805 = @func_7724() /* ty=(Tensor[(7, 12, 14), float32], Tensor[(7, 12, 14), float32]) */;
  %806 = cast(%var_8479, dtype="int64") /* ty=Tensor[(2304), int64] */;
  %807 = reshape(%806, newshape=[8, 288]) /* ty=Tensor[(8, 288), int64] */;
  %808 = @func_7690(%807) /* ty=(Tensor[(12, 15, 5), float32], Tensor[(7, 12, 14), int32], Tensor[(16, 9, 16), bool], int64, Tensor[(8, 288), int64], Tensor[(15, 11, 5), uint8], Tensor[(825), uint8]) */;
  %809 = %805.1;
  %810 = %808.5;
  %811 = @func_8436() /* ty=Tensor[(7, 12, 14), float32] */;
  (%809, %810, %var_8479, %811)
}

def @func_11132(%var_11113: Tensor[(275, 3), uint8]) -> (Tensor[(7, 12, 14), float64], Tensor[(7, 12, 14), float32], Tensor[(14, 7, 7), float64], Tensor[(16, 9, 16), bool], Tensor[(275, 3), uint16], Tensor[(275, 3), float64]) {
  %812 = @func_7778() /* ty=(Tensor[(7, 12, 14), float64], Tensor[(1, 3, 6), float32], Tensor[(1040, 1), int64]) */;
  %813 = @func_8813() /* ty=(Tensor[(16, 9, 16), bool], Tensor[(14, 14, 13), float32], Tensor[(1440), int32]) */;
  %814 = @func_8297() /* ty=(Tensor[(3, 6, 14), int8], Tensor[(7, 12, 14), bool], Tensor[(3, 6, 1), float64], Tensor[(15, 11, 5), uint8], Tensor[(275, 3), uint8], Tensor[(7, 12, 14), float32], Tensor[(3, 6, 1), float32], Tensor[(13, 14, 15), int32], Tensor[(14, 195), int8], Tensor[(3, 6, 1), float32]) */;
  %815 = %814.4;
  %816 = cast(%var_11113, dtype="uint16") /* ty=Tensor[(275, 3), uint16] */;
  %817 = shape_of(%815, dtype="int32") /* ty=Tensor[(2), int32] */;
  %818 = cast(%815, dtype="uint16") /* ty=Tensor[(275, 3), uint16] */;
  %819 = dyn.reshape(%816, %817, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %820 = cast(%var_11113, dtype="float64") /* ty=Tensor[(275, 3), float64] */;
  %821 = %812.0;
  %822 = @func_8436() /* ty=Tensor[(7, 12, 14), float32] */;
  %823 = @func_8959() /* ty=Tensor[(14, 7, 7), float64] */;
  %824 = %813.0;
  %825 = bitwise_and(%818, %819) /* ty=Tensor[(275, 3), uint16] */;
  %826 = log10(%820) /* ty=Tensor[(275, 3), float64] */;
  (%821, %822, %823, %824, %825, %826)
}

def @func_11054(%var_11043: Tensor[(1584), float64], %var_11044: int64) -> (Tensor[(7, 12, 14), float32], int64, Tensor[(1584), float64], int64, Tensor[(2304), int64]) {
  %827 = @func_7724() /* ty=(Tensor[(7, 12, 14), float32], Tensor[(7, 12, 14), float32]) */;
  %828 = cast(%var_11043, dtype="float64") /* ty=Tensor[(1584), float64] */;
  %829 = cast(%var_11044, dtype="int64") /* ty=int64 */;
  %830 = cast(meta[relay.Constant][46] /* ty=Tensor[(2304), int64] */, dtype="int64") /* ty=Tensor[(2304), int64] */;
  %831 = reshape(%828, newshape=[16, 11, 9]) /* ty=Tensor[(16, 11, 9), float64] */;
  %832 = reshape(%829, newshape=[]) /* ty=int64 */;
  %833 = reshape(%830, newshape=[2304]) /* ty=Tensor[(2304), int64] */;
  %834 = @func_724(%831, %832, %833) /* ty=(Tensor[(16, 11, 9), float64], Tensor[(16, 9, 16), bool], int64, Tensor[(2304), int64], Tensor[(16, 9, 16), bool]) */;
  %835 = %827.0;
  %836 = %834.2;
  (%835, %836, %var_11043, %var_11044, meta[relay.Constant][46] /* ty=Tensor[(2304), int64] */)
}

def @func_3713(%var_3704: Tensor[(15, 8, 4), int8]) -> Tensor[(15, 8, 4), int8] {
  %837 = cast(%var_3704, dtype="int8") /* ty=Tensor[(15, 8, 4), int8] */;
  %838 = shape_of(meta[relay.Constant][47] /* ty=Tensor[(15, 8, 4), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %839 = cast(meta[relay.Constant][47] /* ty=Tensor[(15, 8, 4), int8] */, dtype="int8") /* ty=Tensor[(15, 8, 4), int8] */;
  %840 = dyn.reshape(%837, %838, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  multiply(%839, %840) /* ty=Tensor[(15, 8, 4), int8] */
}

def @func_8682() -> (Tensor[(7, 12, 14), bool],) {
  %841 = @func_7369() /* ty=(Tensor[(7, 12, 14), bool],) */;
  %842 = %841.0;
  (%842,)
}

def @func_7926() -> (Tensor[(7, 12, 14), bool],) {
  %843 = @func_7369() /* ty=(Tensor[(7, 12, 14), bool],) */;
  %844 = %843.0;
  (%844,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_5613(%var_5611: Tensor[(5, 14, 3), float64], %var_5612: Tensor[(1456), float64]) -> (Tensor[(5, 14, 3), float64], Tensor[(7, 13, 16), float64], Tensor[(1456), float64]) {
  %5 = fn (%var_5596: Tensor[(5, 14, 3), float64], %var_5606: Tensor[(1456), float64]) -> (Tensor[(5, 14, 3), float64], Tensor[(7, 13, 16), float64], Tensor[(1456), float64]) {
    %0 = cast(%var_5596, dtype="float64") /* ty=Tensor[(5, 14, 3), float64] */;
    %1 = cast(%var_5606, dtype="float64") /* ty=Tensor[(1456), float64] */;
    %2 = reshape(%1, newshape=[7, 13, 16]) /* ty=Tensor[(7, 13, 16), float64] */;
    %3 = cosh(%0) /* ty=Tensor[(5, 14, 3), float64] */;
    %4 = @func_1680(%2) /* ty=Tensor[(7, 13, 16), float64] */;
    (%3, %4, %var_5606)
  };
  %5(%var_5611, %var_5612) /* ty=(Tensor[(5, 14, 3), float64], Tensor[(7, 13, 16), float64], Tensor[(1456), float64]) */
}

def @func_7750(%var_7748: Tensor[(1, 6, 11), float64]) -> Tensor[(1, 6, 11), float64] {
  @func_7747(%var_7748) /* ty=Tensor[(1, 6, 11), float64] */
}

def @func_12007() -> Tensor[(13, 14, 15), float64] {
  %6 = @func_10907() /* ty=(Tensor[(13, 14, 15), float64],) */;
  %6.0
}

def @func_7590() -> Tensor[(3, 6, 1), float32] {
  %7 = cast(meta[relay.Constant][0] /* ty=Tensor[(3, 6, 1), float32] */, dtype="float32") /* ty=Tensor[(3, 6, 1), float32] */;
  rsqrt(%7) /* ty=Tensor[(3, 6, 1), float32] */
}

def @func_10701() -> (Tensor[(900), float32], Tensor[(900), float32]) {
  @func_10699() /* ty=(Tensor[(900), float32], Tensor[(900), float32]) */
}

def @func_10612(%var_10610: Tensor[(66), float64]) -> (Tensor[(7, 12, 14), bool], Tensor[(1, 6, 11), float64], Tensor[(66), float64]) {
  @func_10609(%var_10610) /* ty=(Tensor[(7, 12, 14), bool], Tensor[(1, 6, 11), float64], Tensor[(66), float64]) */
}

def @func_11738() -> (Tensor[(7, 12, 14), bool], Tensor[(3, 10, 3), float32], Tensor[(7, 12, 14), bool]) {
  %8 = @func_8682() /* ty=(Tensor[(7, 12, 14), bool],) */;
  %9 = %8.0;
  %10 = @func_10014() /* ty=(Tensor[(3, 6, 14), int8], Tensor[(7, 12, 14), bool]) */;
  %11 = %10.1;
  %12 = cast(%11, dtype="bool") /* ty=Tensor[(7, 12, 14), bool] */;
  %13 = shape_of(%9, dtype="int32") /* ty=Tensor[(3), int32] */;
  %14 = cast(%9, dtype="bool") /* ty=Tensor[(7, 12, 14), bool] */;
  %15 = dyn.reshape(%12, %13, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %16 = not_equal(%14, %15) /* ty=Tensor[(7, 12, 14), bool] */;
  %17 = @func_11156() /* ty=Tensor[(3, 10, 3), float32] */;
  %18 = @func_10985() /* ty=Tensor[(7, 12, 14), bool] */;
  (%16, %17, %18)
}

def @func_2907(%var_2905: uint64, %var_2906: Tensor[(15, 9, 10), uint64]) -> (Tensor[(15, 9, 10), uint64],) {
  %22 = fn (%var_2896: uint64, %var_2897: Tensor[(15, 9, 10), uint64]) -> (Tensor[(15, 9, 10), uint64],) {
    %19 = cast(%var_2896, dtype="uint64") /* ty=uint64 */;
    %20 = cast(%var_2897, dtype="uint64") /* ty=Tensor[(15, 9, 10), uint64] */;
    %21 = logical_xor(%19, %20) /* ty=Tensor[(15, 9, 10), uint64] */;
    (%21,)
  };
  %22(%var_2905, %var_2906) /* ty=(Tensor[(15, 9, 10), uint64],) */
}

def @func_4035(%var_3993: Tensor[(10, 4, 13), float32], %var_3994: Tensor[(10, 4, 13), float32]) -> (Tensor[(10, 4, 13), float32], Tensor[(10, 4, 13), float64]) {
  %23 = cast(%var_3994, dtype="float32") /* ty=Tensor[(10, 4, 13), float32] */;
  %24 = shape_of(%var_3993, dtype="int32") /* ty=Tensor[(3), int32] */;
  %25 = cast(%var_3993, dtype="float32") /* ty=Tensor[(10, 4, 13), float32] */;
  %26 = dyn.reshape(%23, %24, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %27 = cast(%var_3993, dtype="float64") /* ty=Tensor[(10, 4, 13), float64] */;
  %28 = power(%25, %26) /* ty=Tensor[(10, 4, 13), float32] */;
  %29 = erf(%27) /* ty=Tensor[(10, 4, 13), float64] */;
  (%28, %29)
}

def @func_9323() -> (Tensor[(7, 12, 14), bool],) {
  %30 = @func_8777() /* ty=(Tensor[(7, 12, 14), bool],) */;
  %31 = %30.0;
  (%31,)
}

def @func_11740() -> (Tensor[(7, 12, 14), bool], Tensor[(3, 10, 3), float32], Tensor[(7, 12, 14), bool]) {
  @func_11738() /* ty=(Tensor[(7, 12, 14), bool], Tensor[(3, 10, 3), float32], Tensor[(7, 12, 14), bool]) */
}

def @func_7592() -> Tensor[(3, 6, 1), float32] {
  @func_7590() /* ty=Tensor[(3, 6, 1), float32] */
}

def @func_2876(%var_2872: Tensor[(12, 6, 7), float64], %var_2873: Tensor[(1456), float64], %var_2874: Tensor[(2304), int64], %var_2875: Tensor[(1344), float64]) -> (Tensor[(12, 6, 7), float64], Tensor[(900), float32], Tensor[(12, 6, 7), float32], Tensor[(7, 13, 16), float64], Tensor[(1456), float64], Tensor[(16, 9, 16), bool], Tensor[(2304), int64], Tensor[(16, 9, 16), bool], int64, Tensor[(1584), float64], Tensor[(12, 15, 5), float32], Tensor[(12, 7, 16), float64], Tensor[(1344), float64], Tensor[(7, 13, 16), float64]) {
  %71 = fn (%var_2764: Tensor[(12, 6, 7), float64], %var_2788: Tensor[(1456), float64], %var_2797: Tensor[(2304), int64], %var_2850: Tensor[(1344), float64]) -> (Tensor[(12, 6, 7), float64], Tensor[(900), float32], Tensor[(12, 6, 7), float32], Tensor[(7, 13, 16), float64], Tensor[(1456), float64], Tensor[(16, 9, 16), bool], Tensor[(2304), int64], Tensor[(16, 9, 16), bool], int64, Tensor[(1584), float64], Tensor[(12, 15, 5), float32], Tensor[(12, 7, 16), float64], Tensor[(1344), float64], Tensor[(7, 13, 16), float64]) {
    %32 = cast(9.68725f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %33 = cast(%var_2764, dtype="float64") /* ty=Tensor[(12, 6, 7), float64] */;
    %34 = cast(%var_2764, dtype="float32") /* ty=Tensor[(12, 6, 7), float32] */;
    %35 = cast(%var_2788, dtype="float64") /* ty=Tensor[(1456), float64] */;
    %36 = reshape(%35, newshape=[7, 13, 16]) /* ty=Tensor[(7, 13, 16), float64] */;
    %37 = cast(9.68725f64 /* ty=float64 */, dtype="int64") /* ty=int64 */;
    %38 = cast(%var_2797, dtype="int64") /* ty=Tensor[(2304), int64] */;
    %39 = reshape(%37, newshape=[]) /* ty=int64 */;
    %40 = reshape(%38, newshape=[16, 9, 16]) /* ty=Tensor[(16, 9, 16), int64] */;
    %41 = cast(9.68725f64 /* ty=float64 */, dtype="int64") /* ty=int64 */;
    %42 = @func_498(%39, %40) /* ty=Tensor[(16, 9, 16), bool] */;
    %43 = cast(%42, dtype="int64") /* ty=Tensor[(16, 9, 16), int64] */;
    %44 = reshape(%41, newshape=[]) /* ty=int64 */;
    %45 = reshape(%43, newshape=[16, 9, 16]) /* ty=Tensor[(16, 9, 16), int64] */;
    %46 = cast(meta[relay.Constant][2] /* ty=Tensor[(1584), float64] */, dtype="float64") /* ty=Tensor[(1584), float64] */;
    %47 = cast(9.68725f64 /* ty=float64 */, dtype="int64") /* ty=int64 */;
    %48 = @func_498(%44, %45) /* ty=Tensor[(16, 9, 16), bool] */;
    %49 = cast(%48, dtype="int64") /* ty=Tensor[(16, 9, 16), int64] */;
    %50 = reshape(%46, newshape=[16, 11, 9]) /* ty=Tensor[(16, 11, 9), float64] */;
    %51 = reshape(%47, newshape=[]) /* ty=int64 */;
    %52 = reshape(%49, newshape=[2304]) /* ty=Tensor[(2304), int64] */;
    %53 = @func_724(%50, %51, %52) /* ty=(Tensor[(16, 11, 9), float64], Tensor[(16, 9, 16), bool], int64, Tensor[(2304), int64], Tensor[(16, 9, 16), bool]) */;
    %54 = cast(meta[relay.Constant][1] /* ty=Tensor[(900), float32] */, dtype="float32") /* ty=Tensor[(900), float32] */;
    %55 = reshape(%54, newshape=[12, 15, 5]) /* ty=Tensor[(12, 15, 5), float32] */;
    %56 = @func_2493(%55) /* ty=(Tensor[(12, 15, 5), float32],) */;
    %57 = %56.0;
    %58 = cast(%57, dtype="float32") /* ty=Tensor[(12, 15, 5), float32] */;
    %59 = cast(%var_2850, dtype="float64") /* ty=Tensor[(1344), float64] */;
    %60 = reshape(%59, newshape=[12, 7, 16]) /* ty=Tensor[(12, 7, 16), float64] */;
    %61 = @func_1767(%60) /* ty=(Tensor[(12, 7, 16), float64],) */;
    %62 = @func_1680(%36) /* ty=Tensor[(7, 13, 16), float64] */;
    %63 = cast(%62, dtype="float64") /* ty=Tensor[(7, 13, 16), float64] */;
    %64 = reshape(%63, newshape=[7, 13, 16]) /* ty=Tensor[(7, 13, 16), float64] */;
    %65 = floor_divide(%32, %33) /* ty=Tensor[(12, 6, 7), float64] */;
    %66 = asin(%34) /* ty=Tensor[(12, 6, 7), float32] */;
    %67 = %53.2;
    %68 = erf(%58) /* ty=Tensor[(12, 15, 5), float32] */;
    %69 = %61.0;
    %70 = @func_1680(%64) /* ty=Tensor[(7, 13, 16), float64] */;
    (%65, meta[relay.Constant][1] /* ty=Tensor[(900), float32] */, %66, %62, %var_2788, %42, %var_2797, %48, %67, meta[relay.Constant][2] /* ty=Tensor[(1584), float64] */, %68, %69, %var_2850, %70)
  };
  %71(%var_2872, %var_2873, %var_2874, %var_2875) /* ty=(Tensor[(12, 6, 7), float64], Tensor[(900), float32], Tensor[(12, 6, 7), float32], Tensor[(7, 13, 16), float64], Tensor[(1456), float64], Tensor[(16, 9, 16), bool], Tensor[(2304), int64], Tensor[(16, 9, 16), bool], int64, Tensor[(1584), float64], Tensor[(12, 15, 5), float32], Tensor[(12, 7, 16), float64], Tensor[(1344), float64], Tensor[(7, 13, 16), float64]) */
}

def @func_8298() -> (Tensor[(3, 6, 14), int8], Tensor[(7, 12, 14), bool], Tensor[(3, 6, 1), float64], Tensor[(15, 11, 5), uint8], Tensor[(275, 3), uint8], Tensor[(7, 12, 14), float32], Tensor[(3, 6, 1), float32], Tensor[(13, 14, 15), int32], Tensor[(14, 195), int8], Tensor[(3, 6, 1), float32]) {
  %106 = fn () -> (Tensor[(3, 6, 14), int8], Tensor[(7, 12, 14), bool], Tensor[(3, 6, 1), float64], Tensor[(15, 11, 5), uint8], Tensor[(275, 3), uint8], Tensor[(7, 12, 14), float32], Tensor[(3, 6, 1), float32], Tensor[(13, 14, 15), int32], Tensor[(14, 195), int8], Tensor[(3, 6, 1), float32]) {
    %72 = @func_7590() /* ty=Tensor[(3, 6, 1), float32] */;
    %73 = cast(%72, dtype="int8") /* ty=Tensor[(3, 6, 1), int8] */;
    %74 = cast(meta[relay.Constant][3] /* ty=Tensor[(3, 6, 14), float32] */, dtype="int8") /* ty=Tensor[(3, 6, 14), int8] */;
    %75 = @func_7323() /* ty=(Tensor[(7, 12, 14), bool],) */;
    %76 = cast(%72, dtype="float32") /* ty=Tensor[(3, 6, 1), float32] */;
    %77 = sigmoid(%76) /* ty=Tensor[(3, 6, 1), float32] */;
    %78 = cast(%77, dtype="float64") /* ty=Tensor[(3, 6, 1), float64] */;
    %79 = cast(meta[relay.Constant][4] /* ty=Tensor[(275, 3), uint8] */, dtype="uint8") /* ty=Tensor[(275, 3), uint8] */;
    %80 = cast(meta[relay.Constant][4] /* ty=Tensor[(275, 3), uint8] */, dtype="uint8") /* ty=Tensor[(275, 3), uint8] */;
    %81 = reshape(%79, newshape=[15, 11, 5]) /* ty=Tensor[(15, 11, 5), uint8] */;
    %82 = reshape(%80, newshape=[15, 11, 5]) /* ty=Tensor[(15, 11, 5), uint8] */;
    %83 = @func_4582(%81, %82) /* ty=(Tensor[(15, 11, 5), uint8],) */;
    %84 = %75.0;
    %85 = cast(%84, dtype="bool") /* ty=Tensor[(7, 12, 14), bool] */;
    %86 = reshape(%85, newshape=[7, 12, 14]) /* ty=Tensor[(7, 12, 14), bool] */;
    %87 = @func_7249(%86) /* ty=(Tensor[(7, 12, 14), float32],) */;
    %88 = cast(%77, dtype="float64") /* ty=Tensor[(3, 6, 1), float64] */;
    %89 = log(%88) /* ty=Tensor[(3, 6, 1), float64] */;
    %90 = cast(%89, dtype="float32") /* ty=Tensor[(3, 6, 1), float32] */;
    %91 = cast(meta[relay.Constant][5] /* ty=Tensor[(14, 195), int8] */, dtype="int8") /* ty=Tensor[(14, 195), int8] */;
    %92 = cast(meta[relay.Constant][5] /* ty=Tensor[(14, 195), int8] */, dtype="int8") /* ty=Tensor[(14, 195), int8] */;
    %93 = cast(meta[relay.Constant][5] /* ty=Tensor[(14, 195), int8] */, dtype="bool") /* ty=Tensor[(14, 195), bool] */;
    %94 = reshape(%91, newshape=[13, 14, 15]) /* ty=Tensor[(13, 14, 15), int8] */;
    %95 = reshape(%92, newshape=[13, 14, 15]) /* ty=Tensor[(13, 14, 15), int8] */;
    %96 = reshape(%93, newshape=[13, 14, 15]) /* ty=Tensor[(13, 14, 15), bool] */;
    %97 = @func_6862(%94, %95, %96) /* ty=(Tensor[(13, 14, 15), int32],) */;
    %98 = cast(%89, dtype="float32") /* ty=Tensor[(3, 6, 1), float32] */;
    %99 = multiply(%73, %74) /* ty=Tensor[(3, 6, 14), int8] */;
    %100 = asinh(%78) /* ty=Tensor[(3, 6, 1), float64] */;
    %101 = %83.0;
    %102 = %87.0;
    %103 = cos(%90) /* ty=Tensor[(3, 6, 1), float32] */;
    %104 = %97.0;
    %105 = tan(%98) /* ty=Tensor[(3, 6, 1), float32] */;
    (%99, %84, %100, %101, meta[relay.Constant][4] /* ty=Tensor[(275, 3), uint8] */, %102, %103, %104, meta[relay.Constant][5] /* ty=Tensor[(14, 195), int8] */, %105)
  };
  %106() /* ty=(Tensor[(3, 6, 14), int8], Tensor[(7, 12, 14), bool], Tensor[(3, 6, 1), float64], Tensor[(15, 11, 5), uint8], Tensor[(275, 3), uint8], Tensor[(7, 12, 14), float32], Tensor[(3, 6, 1), float32], Tensor[(13, 14, 15), int32], Tensor[(14, 195), int8], Tensor[(3, 6, 1), float32]) */
}

def @func_9068(%var_9057: Tensor[(14, 195), int8]) -> Tensor[(14, 195), bool] {
  %107 = @func_8297() /* ty=(Tensor[(3, 6, 14), int8], Tensor[(7, 12, 14), bool], Tensor[(3, 6, 1), float64], Tensor[(15, 11, 5), uint8], Tensor[(275, 3), uint8], Tensor[(7, 12, 14), float32], Tensor[(3, 6, 1), float32], Tensor[(13, 14, 15), int32], Tensor[(14, 195), int8], Tensor[(3, 6, 1), float32]) */;
  %108 = %107.8;
  %109 = cast(%var_9057, dtype="bool") /* ty=Tensor[(14, 195), bool] */;
  %110 = shape_of(%108, dtype="int32") /* ty=Tensor[(2), int32] */;
  %111 = cast(%108, dtype="bool") /* ty=Tensor[(14, 195), bool] */;
  %112 = dyn.reshape(%109, %110, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  logical_or(%111, %112) /* ty=Tensor[(14, 195), bool] */
}

def @func_9163() -> (Tensor[(900), float32],) {
  %115 = fn () -> (Tensor[(900), float32],) {
    %113 = @func_7938() /* ty=(Tensor[(900), float32],) */;
    %114 = %113.0;
    (%114,)
  };
  %115() /* ty=(Tensor[(900), float32],) */
}

def @func_6212(%var_6206: Tensor[(8, 10, 13), int64]) -> (Tensor[(8, 10, 13), int64], Tensor[(1, 3, 6), float32]) {
  %116 = cast(6 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %117 = cast(%var_6206, dtype="int64") /* ty=Tensor[(8, 10, 13), int64] */;
  %118 = cast(6 /* ty=int64 */, dtype="int8") /* ty=int8 */;
  %119 = reshape(%118, newshape=[]) /* ty=int8 */;
  %120 = @func_3268(%119) /* ty=(Tensor[(1, 3, 6), float32],) */;
  %121 = right_shift(%116, %117) /* ty=Tensor[(8, 10, 13), int64] */;
  %122 = %120.0;
  (%121, %122)
}

def @func_11135(%var_11133: Tensor[(275, 3), uint8]) -> (Tensor[(7, 12, 14), float64], Tensor[(7, 12, 14), float32], Tensor[(14, 7, 7), float64], Tensor[(16, 9, 16), bool], Tensor[(275, 3), uint16], Tensor[(275, 3), float64]) {
  @func_11132(%var_11133) /* ty=(Tensor[(7, 12, 14), float64], Tensor[(7, 12, 14), float32], Tensor[(14, 7, 7), float64], Tensor[(16, 9, 16), bool], Tensor[(275, 3), uint16], Tensor[(275, 3), float64]) */
}

def @func_8368() -> Tensor[(3, 10, 3), float32] {
  @func_8366() /* ty=Tensor[(3, 10, 3), float32] */
}

def @func_7405() -> (Tensor[(7, 12, 14), bool], Tensor[(12, 15, 5), float32], Tensor[(900), float32]) {
  %129 = fn () -> (Tensor[(7, 12, 14), bool], Tensor[(12, 15, 5), float32], Tensor[(900), float32]) {
    %123 = @func_7369() /* ty=(Tensor[(7, 12, 14), bool],) */;
    %124 = cast(meta[relay.Constant][6] /* ty=Tensor[(900), float32] */, dtype="float32") /* ty=Tensor[(900), float32] */;
    %125 = reshape(%124, newshape=[12, 15, 5]) /* ty=Tensor[(12, 15, 5), float32] */;
    %126 = @func_2493(%125) /* ty=(Tensor[(12, 15, 5), float32],) */;
    %127 = %123.0;
    %128 = %126.0;
    (%127, %128, meta[relay.Constant][6] /* ty=Tensor[(900), float32] */)
  };
  %129() /* ty=(Tensor[(7, 12, 14), bool], Tensor[(12, 15, 5), float32], Tensor[(900), float32]) */
}

def @func_8438() -> Tensor[(7, 12, 14), float32] {
  @func_8436() /* ty=Tensor[(7, 12, 14), float32] */
}

def @func_8117(%var_8114: Tensor[(11, 12, 2), float32], %var_8115: Tensor[(210), float64], %var_8116: Tensor[(1456), float64]) -> (Tensor[(11, 12, 2), float64], Tensor[(1456), float64], Tensor[(210), float64], Tensor[(1456), float64]) {
  %140 = fn (%var_8080: Tensor[(11, 12, 2), float32], %var_8096: Tensor[(210), float64], %var_8097: Tensor[(1456), float64]) -> (Tensor[(11, 12, 2), float64], Tensor[(1456), float64], Tensor[(210), float64], Tensor[(1456), float64]) {
    %130 = cast(%var_8080, dtype="float32") /* ty=Tensor[(11, 12, 2), float32] */;
    %131 = sin(%130) /* ty=Tensor[(11, 12, 2), float32] */;
    %132 = cast(%131, dtype="float64") /* ty=Tensor[(11, 12, 2), float64] */;
    %133 = cast(%var_8096, dtype="float64") /* ty=Tensor[(210), float64] */;
    %134 = cast(%var_8097, dtype="float64") /* ty=Tensor[(1456), float64] */;
    %135 = reshape(%133, newshape=[5, 14, 3]) /* ty=Tensor[(5, 14, 3), float64] */;
    %136 = reshape(%134, newshape=[1456]) /* ty=Tensor[(1456), float64] */;
    %137 = @func_5610(%135, %136) /* ty=(Tensor[(5, 14, 3), float64], Tensor[(7, 13, 16), float64], Tensor[(1456), float64]) */;
    %138 = rsqrt(%132) /* ty=Tensor[(11, 12, 2), float64] */;
    %139 = %137.2;
    (%138, %139, %var_8096, %var_8097)
  };
  %140(%var_8114, %var_8115, %var_8116) /* ty=(Tensor[(11, 12, 2), float64], Tensor[(1456), float64], Tensor[(210), float64], Tensor[(1456), float64]) */
}

def @func_6866(%var_6863: Tensor[(13, 14, 15), int8], %var_6864: Tensor[(13, 14, 15), int8], %var_6865: Tensor[(13, 14, 15), bool]) -> (Tensor[(13, 14, 15), int32],) {
  %156 = fn (%var_6816: Tensor[(13, 14, 15), int8], %var_6817: Tensor[(13, 14, 15), int8], %var_6834: Tensor[(13, 14, 15), bool]) -> (Tensor[(13, 14, 15), int32],) {
    %141 = cast(%var_6817, dtype="bool") /* ty=Tensor[(13, 14, 15), bool] */;
    %142 = shape_of(%var_6816, dtype="int32") /* ty=Tensor[(3), int32] */;
    %143 = cast(%var_6816, dtype="bool") /* ty=Tensor[(13, 14, 15), bool] */;
    %144 = dyn.reshape(%141, %142, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %145 = less_equal(%143, %144) /* ty=Tensor[(13, 14, 15), bool] */;
    %146 = cast(%var_6834, dtype="bool") /* ty=Tensor[(13, 14, 15), bool] */;
    %147 = shape_of(%145, dtype="int32") /* ty=Tensor[(3), int32] */;
    %148 = cast(%145, dtype="bool") /* ty=Tensor[(13, 14, 15), bool] */;
    %149 = dyn.reshape(%146, %147, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %150 = logical_and(%148, %149) /* ty=Tensor[(13, 14, 15), bool] */;
    %151 = cast(%var_6834, dtype="int32") /* ty=Tensor[(13, 14, 15), int32] */;
    %152 = shape_of(%150, dtype="int32") /* ty=Tensor[(3), int32] */;
    %153 = cast(%150, dtype="int32") /* ty=Tensor[(13, 14, 15), int32] */;
    %154 = dyn.reshape(%151, %152, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %155 = bitwise_xor(%153, %154) /* ty=Tensor[(13, 14, 15), int32] */;
    (%155,)
  };
  %156(%var_6863, %var_6864, %var_6865) /* ty=(Tensor[(13, 14, 15), int32],) */
}

def @func_8663() -> (Tensor[(13, 14, 15), float64],) {
  @func_8661() /* ty=(Tensor[(13, 14, 15), float64],) */
}

def @func_8359() -> (Tensor[(14, 7, 7), float64],) {
  %159 = fn () -> (Tensor[(14, 7, 7), float64],) {
    %157 = cast(meta[relay.Constant][7] /* ty=Tensor[(14, 7, 7), float64] */, dtype="float64") /* ty=Tensor[(14, 7, 7), float64] */;
    %158 = atan(%157) /* ty=Tensor[(14, 7, 7), float64] */;
    (%158,)
  };
  %159() /* ty=(Tensor[(14, 7, 7), float64],) */
}

def @func_4039(%var_4037: Tensor[(10, 4, 13), float32], %var_4038: Tensor[(10, 4, 13), float32]) -> (Tensor[(10, 4, 13), float32], Tensor[(10, 4, 13), float64]) {
  @func_4035(%var_4037, %var_4038) /* ty=(Tensor[(10, 4, 13), float32], Tensor[(10, 4, 13), float64]) */
}

def @func_10015() -> (Tensor[(3, 6, 14), int8], Tensor[(7, 12, 14), bool]) {
  %164 = fn () -> (Tensor[(3, 6, 14), int8], Tensor[(7, 12, 14), bool]) {
    %160 = @func_9077() /* ty=(Tensor[(3, 6, 14), int8],) */;
    %161 = @func_7369() /* ty=(Tensor[(7, 12, 14), bool],) */;
    %162 = %160.0;
    %163 = %161.0;
    (%162, %163)
  };
  %164() /* ty=(Tensor[(3, 6, 14), int8], Tensor[(7, 12, 14), bool]) */
}

def @func_10074() -> (Tensor[(10, 5, 8), bool],) {
  %167 = fn () -> (Tensor[(10, 5, 8), bool],) {
    %165 = @func_9619() /* ty=(Tensor[(7, 12, 14), float32], Tensor[(10, 5, 8), bool], Tensor[(1, 400), float32]) */;
    %166 = %165.1;
    (%166,)
  };
  %167() /* ty=(Tensor[(10, 5, 8), bool],) */
}

def @func_5946(%var_5945: Tensor[(3, 2, 6), float32]) -> Tensor[(3, 2, 6), float32] {
  %169 = fn (%var_5937: Tensor[(3, 2, 6), float32]) -> Tensor[(3, 2, 6), float32] {
    %168 = cast(%var_5937, dtype="float32") /* ty=Tensor[(3, 2, 6), float32] */;
    erf(%168) /* ty=Tensor[(3, 2, 6), float32] */
  };
  %169(%var_5945) /* ty=Tensor[(3, 2, 6), float32] */
}

def @func_7927() -> (Tensor[(7, 12, 14), bool],) {
  %172 = fn () -> (Tensor[(7, 12, 14), bool],) {
    %170 = @func_7369() /* ty=(Tensor[(7, 12, 14), bool],) */;
    %171 = %170.0;
    (%171,)
  };
  %172() /* ty=(Tensor[(7, 12, 14), bool],) */
}

def @func_10144(%var_10143: Tensor[(1400), int32]) -> (Tensor[(7, 12, 14), bool], Tensor[(10, 10, 14), float32], int32, Tensor[(1400), int32]) {
  %181 = fn (%var_10116: Tensor[(1400), int32]) -> (Tensor[(7, 12, 14), bool], Tensor[(10, 10, 14), float32], int32, Tensor[(1400), int32]) {
    %173 = @func_8682() /* ty=(Tensor[(7, 12, 14), bool],) */;
    %174 = cast(-10 /* ty=int32 */, dtype="int32") /* ty=int32 */;
    %175 = cast(%var_10116, dtype="int32") /* ty=Tensor[(1400), int32] */;
    %176 = reshape(%174, newshape=[]) /* ty=int32 */;
    %177 = reshape(%175, newshape=[10, 10, 14]) /* ty=Tensor[(10, 10, 14), int32] */;
    %178 = @func_1424(%176, %177) /* ty=(Tensor[(10, 10, 14), float32],) */;
    %179 = %173.0;
    %180 = %178.0;
    (%179, %180, -10 /* ty=int32 */, %var_10116)
  };
  %181(%var_10143) /* ty=(Tensor[(7, 12, 14), bool], Tensor[(10, 10, 14), float32], int32, Tensor[(1400), int32]) */
}

def @func_8896() -> (Tensor[(7, 12, 14), float32],) {
  %182 = @func_7724() /* ty=(Tensor[(7, 12, 14), float32], Tensor[(7, 12, 14), float32]) */;
  %183 = %182.0;
  (%183,)
}

def @func_9817() -> (Tensor[(7, 12, 14), float32],) {
  %186 = fn () -> (Tensor[(7, 12, 14), float32],) {
    %184 = @func_9345() /* ty=(Tensor[(7, 12, 14), float32],) */;
    %185 = %184.0;
    (%185,)
  };
  %186() /* ty=(Tensor[(7, 12, 14), float32],) */
}

def @func_8993(%var_8970: Tensor[(2304), int64], %var_8987: Tensor[(1, 2730), int8], %var_8989: Tensor[(1, 2730), int8]) -> (Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), float32], Tensor[(2304), int64], Tensor[(7, 12, 14), bool], Tensor[(?, 2730), float32]) {
  %187 = @func_8682() /* ty=(Tensor[(7, 12, 14), bool],) */;
  %188 = cast(%var_8970, dtype="int64") /* ty=Tensor[(2304), int64] */;
  %189 = reshape(%188, newshape=[2304]) /* ty=Tensor[(2304), int64] */;
  %190 = @func_8506(%189) /* ty=(Tensor[(7, 12, 14), float32], Tensor[(15, 11, 5), uint8], Tensor[(2304), int64], Tensor[(7, 12, 14), float32]) */;
  %191 = cast(%var_8987, dtype="int8") /* ty=Tensor[(1, 2730), int8] */;
  %192 = reshape(%191, newshape=[2730]) /* ty=Tensor[(2730), int8] */;
  %193 = @func_8633(%192) /* ty=(Tensor[(7, 12, 14), bool], Tensor[(13, 14, 15), int32], Tensor[(2730), int8], Tensor[(7, 12, 14), bool], Tensor[(3, 6, 1), float32]) */;
  %194 = cast(%var_8989, dtype="float32") /* ty=Tensor[(1, 2730), float32] */;
  %195 = shape_of(%var_8987, dtype="int32") /* ty=Tensor[(2), int32] */;
  %196 = cast(%var_8987, dtype="float32") /* ty=Tensor[(1, 2730), float32] */;
  %197 = dyn.reshape(%194, %195, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %198 = %187.0;
  %199 = %190.3;
  %200 = %193.3;
  %201 = divide(%196, %197) /* ty=Tensor[(?, 2730), float32] */;
  (%198, %199, %var_8970, %200, %201)
}

def @func_11626() -> (Tensor[(7, 12, 14), float32],) {
  @func_11624() /* ty=(Tensor[(7, 12, 14), float32],) */
}

def @func_4586(%var_4584: Tensor[(15, 11, 5), uint8], %var_4585: Tensor[(15, 11, 5), uint8]) -> (Tensor[(15, 11, 5), uint8],) {
  @func_4582(%var_4584, %var_4585) /* ty=(Tensor[(15, 11, 5), uint8],) */
}

def @func_11008() -> (Tensor[(7, 12, 14), float32], Tensor[(7, 12, 14), float32]) {
  @func_11006() /* ty=(Tensor[(7, 12, 14), float32], Tensor[(7, 12, 14), float32]) */
}

def @func_11335() -> (Tensor[(10, 5, 8), float64], Tensor[(7, 12, 14), bool], int8, Tensor[(10, 5, 8), bool], Tensor[(16, 9, 16), bool], Tensor[(2304), int64]) {
  %221 = fn () -> (Tensor[(10, 5, 8), float64], Tensor[(7, 12, 14), bool], int8, Tensor[(10, 5, 8), bool], Tensor[(16, 9, 16), bool], Tensor[(2304), int64]) {
    %202 = @func_10073() /* ty=(Tensor[(10, 5, 8), bool],) */;
    %203 = %202.0;
    %204 = cast(%203, dtype="float64") /* ty=Tensor[(10, 5, 8), float64] */;
    %205 = cast(meta[relay.Constant][8] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %206 = reshape(%205, newshape=[]) /* ty=int8 */;
    %207 = @func_10215(%206) /* ty=(Tensor[(7, 12, 14), bool], Tensor[(2304), int64], Tensor[(2304), int64], int8, int8) */;
    %208 = acos(%204) /* ty=Tensor[(10, 5, 8), float64] */;
    %209 = cast(%208, dtype="float32") /* ty=Tensor[(10, 5, 8), float32] */;
    %210 = cast(%203, dtype="float32") /* ty=Tensor[(10, 5, 8), float32] */;
    %211 = reshape(%209, newshape=[10, 5, 8]) /* ty=Tensor[(10, 5, 8), float32] */;
    %212 = reshape(%210, newshape=[10, 5, 8]) /* ty=Tensor[(10, 5, 8), float32] */;
    %213 = @func_5532(%211, %212) /* ty=(Tensor[(10, 5, 8), bool],) */;
    %214 = cast(meta[relay.Constant][8] /* ty=int8 */, dtype="int64") /* ty=int64 */;
    %215 = cast(meta[relay.Constant][9] /* ty=Tensor[(2304), int64] */, dtype="int64") /* ty=Tensor[(2304), int64] */;
    %216 = reshape(%214, newshape=[]) /* ty=int64 */;
    %217 = reshape(%215, newshape=[16, 9, 16]) /* ty=Tensor[(16, 9, 16), int64] */;
    %218 = %207.0;
    %219 = %213.0;
    %220 = @func_498(%216, %217) /* ty=Tensor[(16, 9, 16), bool] */;
    (%208, %218, meta[relay.Constant][8] /* ty=int8 */, %219, %220, meta[relay.Constant][9] /* ty=Tensor[(2304), int64] */)
  };
  %221() /* ty=(Tensor[(10, 5, 8), float64], Tensor[(7, 12, 14), bool], int8, Tensor[(10, 5, 8), bool], Tensor[(16, 9, 16), bool], Tensor[(2304), int64]) */
}

def @func_7101() -> (Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), float32]) {
  %222 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %223 = cast(meta[relay.Constant][10] /* ty=Tensor[(7, 12, 14), bool] */, dtype="bool") /* ty=Tensor[(7, 12, 14), bool] */;
  %224 = cast(meta[relay.Constant][10] /* ty=Tensor[(7, 12, 14), bool] */, dtype="float32") /* ty=Tensor[(7, 12, 14), float32] */;
  %225 = logical_and(%222, %223) /* ty=Tensor[(7, 12, 14), bool] */;
  %226 = log2(%224) /* ty=Tensor[(7, 12, 14), float32] */;
  (%225, %226)
}

def @func_8898() -> (Tensor[(7, 12, 14), float32],) {
  @func_8896() /* ty=(Tensor[(7, 12, 14), float32],) */
}

def @func_1427(%var_1425: int32, %var_1426: Tensor[(10, 10, 14), int32]) -> (Tensor[(10, 10, 14), float32],) {
  %232 = fn (%var_1411: int32, %var_1412: Tensor[(10, 10, 14), int32]) -> (Tensor[(10, 10, 14), float32],) {
    %227 = cast(%var_1411, dtype="int32") /* ty=int32 */;
    %228 = cast(%var_1412, dtype="int32") /* ty=Tensor[(10, 10, 14), int32] */;
    %229 = left_shift(%227, %228) /* ty=Tensor[(10, 10, 14), int32] */;
    %230 = cast(%229, dtype="float32") /* ty=Tensor[(10, 10, 14), float32] */;
    %231 = erf(%230) /* ty=Tensor[(10, 10, 14), float32] */;
    (%231,)
  };
  %232(%var_1425, %var_1426) /* ty=(Tensor[(10, 10, 14), float32],) */
}

def @func_12009() -> Tensor[(13, 14, 15), float64] {
  @func_12007() /* ty=Tensor[(13, 14, 15), float64] */
}

def @func_2493(%var_2490: Tensor[(12, 15, 5), float32]) -> (Tensor[(12, 15, 5), float32],) {
  %233 = cast(%var_2490, dtype="float32") /* ty=Tensor[(12, 15, 5), float32] */;
  %234 = asin(%233) /* ty=Tensor[(12, 15, 5), float32] */;
  (%234,)
}

def @func_3271(%var_3269: int8) -> (Tensor[(1, 3, 6), float32],) {
  @func_3268(%var_3269) /* ty=(Tensor[(1, 3, 6), float32],) */
}

def @func_8890() -> Tensor[(1040, 1), float64] {
  %238 = fn () -> Tensor[(1040, 1), float64] {
    %235 = @func_7778() /* ty=(Tensor[(7, 12, 14), float64], Tensor[(1, 3, 6), float32], Tensor[(1040, 1), int64]) */;
    %236 = %235.2;
    %237 = cast(%236, dtype="float64") /* ty=Tensor[(1040, 1), float64] */;
    sigmoid(%237) /* ty=Tensor[(1040, 1), float64] */
  };
  %238() /* ty=Tensor[(1040, 1), float64] */
}

def @func_7940() -> (Tensor[(900), float32],) {
  @func_7938() /* ty=(Tensor[(900), float32],) */
}

def @func_8777() -> (Tensor[(7, 12, 14), bool],) {
  %239 = @func_7369() /* ty=(Tensor[(7, 12, 14), bool],) */;
  %240 = %239.0;
  (%240,)
}

def @func_9905(%var_9904: Tensor[(1040), int64]) -> (Tensor[(7, 12, 14), bool], Tensor[(1, 3, 6), float32], Tensor[(1040), int64]) {
  %247 = fn (%var_9890: Tensor[(1040), int64]) -> (Tensor[(7, 12, 14), bool], Tensor[(1, 3, 6), float32], Tensor[(1040), int64]) {
    %241 = @func_9323() /* ty=(Tensor[(7, 12, 14), bool],) */;
    %242 = cast(%var_9890, dtype="int64") /* ty=Tensor[(1040), int64] */;
    %243 = reshape(%242, newshape=[8, 10, 13]) /* ty=Tensor[(8, 10, 13), int64] */;
    %244 = @func_6212(%243) /* ty=(Tensor[(8, 10, 13), int64], Tensor[(1, 3, 6), float32]) */;
    %245 = %241.0;
    %246 = %244.1;
    (%245, %246, %var_9890)
  };
  %247(%var_9904) /* ty=(Tensor[(7, 12, 14), bool], Tensor[(1, 3, 6), float32], Tensor[(1040), int64]) */
}

def @func_9207() -> (Tensor[(7, 12, 14), bool],) {
  @func_9205() /* ty=(Tensor[(7, 12, 14), bool],) */
}

def @func_9767(%var_9765: Tensor[(468), float32]) -> (Tensor[(900), float32], Tensor[(2304), int64], Tensor[(468), float32], int64, Tensor[(14, 14, 13), float32], Tensor[(10, 144), int32], Tensor[(7, 12, 14), float32]) {
  @func_9764(%var_9765) /* ty=(Tensor[(900), float32], Tensor[(2304), int64], Tensor[(468), float32], int64, Tensor[(14, 14, 13), float32], Tensor[(10, 144), int32], Tensor[(7, 12, 14), float32]) */
}

def @func_10660() -> (Tensor[(13, 14, 15), float32],) {
  %252 = fn () -> (Tensor[(13, 14, 15), float32],) {
    %248 = @func_8661() /* ty=(Tensor[(13, 14, 15), float64],) */;
    %249 = %248.0;
    %250 = cast(%249, dtype="float32") /* ty=Tensor[(13, 14, 15), float32] */;
    %251 = rsqrt(%250) /* ty=Tensor[(13, 14, 15), float32] */;
    (%251,)
  };
  %252() /* ty=(Tensor[(13, 14, 15), float32],) */
}

def @func_3935(%var_3933: Tensor[(13, 9, 10), float32]) -> (Tensor[(13, 9, 10), bool],) {
  @func_3932(%var_3933) /* ty=(Tensor[(13, 9, 10), bool],) */
}

def @func_6215(%var_6213: Tensor[(8, 10, 13), int64]) -> (Tensor[(8, 10, 13), int64], Tensor[(1, 3, 6), float32]) {
  @func_6212(%var_6213) /* ty=(Tensor[(8, 10, 13), int64], Tensor[(1, 3, 6), float32]) */
}

def @func_11889() -> (Tensor[(1176), bool], Tensor[(1040, ?), uint32], Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), bool]) {
  %267 = fn () -> (Tensor[(1176), bool], Tensor[(1040, ?), uint32], Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), bool]) {
    %253 = @func_9400() /* ty=Tensor[(1040, ?), int32] */;
    %254 = cast(meta[relay.Constant][11] /* ty=Tensor[(1176), bool] */, dtype="bool") /* ty=Tensor[(1176), bool] */;
    %255 = reshape(%254, newshape=[7, 12, 14]) /* ty=Tensor[(7, 12, 14), bool] */;
    %256 = @func_8047(%255) /* ty=(Tensor[(7, 12, 14), bool], int64, Tensor[(7, 12, 14), int32], Tensor[(2304), int64], Tensor[(16, 9, 16), bool]) */;
    %257 = %256.1;
    %258 = cast(%253, dtype="uint32") /* ty=Tensor[(1040, ?), uint32] */;
    %259 = cast(%257, dtype="uint32") /* ty=uint32 */;
    %260 = cast(%257, dtype="int8") /* ty=int8 */;
    %261 = reshape(%260, newshape=[]) /* ty=int8 */;
    %262 = @func_7192(%261) /* ty=(Tensor[(7, 12, 14), bool], Tensor[(1, 3, 6), float32], int8, Tensor[(1456), float64], Tensor[(35, 6), float64], Tensor[(1456), float64]) */;
    %263 = @func_11334() /* ty=(Tensor[(10, 5, 8), float64], Tensor[(7, 12, 14), bool], int8, Tensor[(10, 5, 8), bool], Tensor[(16, 9, 16), bool], Tensor[(2304), int64]) */;
    %264 = multiply(%258, %259) /* ty=Tensor[(1040, ?), uint32] */;
    %265 = %262.0;
    %266 = %263.1;
    (meta[relay.Constant][11] /* ty=Tensor[(1176), bool] */, %264, %265, %266)
  };
  %267() /* ty=(Tensor[(1176), bool], Tensor[(1040, ?), uint32], Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), bool]) */
}

def @func_9764(%var_9738: Tensor[(468), float32]) -> (Tensor[(900), float32], Tensor[(2304), int64], Tensor[(468), float32], int64, Tensor[(14, 14, 13), float32], Tensor[(10, 144), int32], Tensor[(7, 12, 14), float32]) {
  %268 = @func_9265() /* ty=(Tensor[(900), float32],) */;
  %269 = cast(%var_9738, dtype="float32") /* ty=Tensor[(468), float32] */;
  %270 = cast(-9 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %271 = reshape(%269, newshape=[9, 4, 13]) /* ty=Tensor[(9, 4, 13), float32] */;
  %272 = reshape(%270, newshape=[]) /* ty=int64 */;
  %273 = @func_825(%271, %272) /* ty=(Tensor[(9, 4, 13), float32], Tensor[(16, 9, 16), bool], int64, Tensor[(2304), int64]) */;
  %274 = cast(meta[relay.Constant][12] /* ty=Tensor[(10, 144), int32] */, dtype="int32") /* ty=Tensor[(10, 144), int32] */;
  %275 = reshape(%274, newshape=[1440]) /* ty=Tensor[(1440), int32] */;
  %276 = @func_3682(%275) /* ty=(Tensor[(14, 14, 13), float32], Tensor[(9, 10, 16), bool], Tensor[(1440), int32], Tensor[(14, 14, 13), float64]) */;
  %277 = @func_9345() /* ty=(Tensor[(7, 12, 14), float32],) */;
  %278 = %268.0;
  %279 = %273.3;
  %280 = %276.0;
  %281 = %277.0;
  (%278, %279, %var_9738, -9 /* ty=int64 */, %280, meta[relay.Constant][12] /* ty=Tensor[(10, 144), int32] */, %281)
}

def @func_9078() -> (Tensor[(3, 6, 14), int8],) {
  %284 = fn () -> (Tensor[(3, 6, 14), int8],) {
    %282 = @func_8297() /* ty=(Tensor[(3, 6, 14), int8], Tensor[(7, 12, 14), bool], Tensor[(3, 6, 1), float64], Tensor[(15, 11, 5), uint8], Tensor[(275, 3), uint8], Tensor[(7, 12, 14), float32], Tensor[(3, 6, 1), float32], Tensor[(13, 14, 15), int32], Tensor[(14, 195), int8], Tensor[(3, 6, 1), float32]) */;
    %283 = %282.0;
    (%283,)
  };
  %284() /* ty=(Tensor[(3, 6, 14), int8],) */
}

def @func_7725() -> (Tensor[(7, 12, 14), float32], Tensor[(7, 12, 14), float32]) {
  %294 = fn () -> (Tensor[(7, 12, 14), float32], Tensor[(7, 12, 14), float32]) {
    %285 = @func_7101() /* ty=(Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), float32]) */;
    %286 = %285.1;
    %287 = cast(meta[relay.Constant][13] /* ty=Tensor[(7, 12, 14), float32] */, dtype="float32") /* ty=Tensor[(7, 12, 14), float32] */;
    %288 = shape_of(%286, dtype="int32") /* ty=Tensor[(3), int32] */;
    %289 = cast(%286, dtype="float32") /* ty=Tensor[(7, 12, 14), float32] */;
    %290 = dyn.reshape(%287, %288, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %291 = cast(meta[relay.Constant][13] /* ty=Tensor[(7, 12, 14), float32] */, dtype="float32") /* ty=Tensor[(7, 12, 14), float32] */;
    %292 = floor_mod(%289, %290) /* ty=Tensor[(7, 12, 14), float32] */;
    %293 = sin(%291) /* ty=Tensor[(7, 12, 14), float32] */;
    (%292, %293)
  };
  %294() /* ty=(Tensor[(7, 12, 14), float32], Tensor[(7, 12, 14), float32]) */
}

def @func_1682(%var_1681: Tensor[(7, 13, 16), float64]) -> Tensor[(7, 13, 16), float64] {
  %296 = fn (%var_1677: Tensor[(7, 13, 16), float64]) -> Tensor[(7, 13, 16), float64] {
    %295 = cast(%var_1677, dtype="float64") /* ty=Tensor[(7, 13, 16), float64] */;
    log(%295) /* ty=Tensor[(7, 13, 16), float64] */
  };
  %296(%var_1681) /* ty=Tensor[(7, 13, 16), float64] */
}

def @func_3268(%var_3244: int8) -> (Tensor[(1, 3, 6), float32],) {
  %297 = cast(%var_3244, dtype="bool") /* ty=bool */;
  %298 = cast(meta[relay.Constant][14] /* ty=Tensor[(1, 3, 6), int8] */, dtype="bool") /* ty=Tensor[(1, 3, 6), bool] */;
  %299 = less_equal(%297, %298) /* ty=Tensor[(1, 3, 6), bool] */;
  %300 = cast(%var_3244, dtype="float32") /* ty=float32 */;
  %301 = cast(%299, dtype="float32") /* ty=Tensor[(1, 3, 6), float32] */;
  %302 = mod(%300, %301) /* ty=Tensor[(1, 3, 6), float32] */;
  (%302,)
}

def @func_10442(%var_10440: int32, %var_10441: Tensor[(1400), int32]) -> (Tensor[(3, 6, 1), float32], Tensor[(1400), int32], Tensor[(7, 12, 14), float32], Tensor[(10, 10, 14), int32], Tensor[(900), float32], Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), bool]) {
  %321 = fn (%var_10404: int32, %var_10405: Tensor[(1400), int32]) -> (Tensor[(3, 6, 1), float32], Tensor[(1400), int32], Tensor[(7, 12, 14), float32], Tensor[(10, 10, 14), int32], Tensor[(900), float32], Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), bool]) {
    %303 = @func_9830() /* ty=(Tensor[(3, 6, 1), float32],) */;
    %304 = @func_9619() /* ty=(Tensor[(7, 12, 14), float32], Tensor[(10, 5, 8), bool], Tensor[(1, 400), float32]) */;
    %305 = cast(%var_10404, dtype="int32") /* ty=int32 */;
    %306 = cast(%var_10405, dtype="int32") /* ty=Tensor[(1400), int32] */;
    %307 = reshape(%305, newshape=[]) /* ty=int32 */;
    %308 = reshape(%306, newshape=[10, 10, 14]) /* ty=Tensor[(10, 10, 14), int32] */;
    %309 = @func_1424(%307, %308) /* ty=(Tensor[(10, 10, 14), float32],) */;
    %310 = %309.0;
    %311 = cast(%310, dtype="int32") /* ty=Tensor[(10, 10, 14), int32] */;
    %312 = cast(%var_10404, dtype="int32") /* ty=int32 */;
    %313 = @func_9265() /* ty=(Tensor[(900), float32],) */;
    %314 = @func_8777() /* ty=(Tensor[(7, 12, 14), bool],) */;
    %315 = %303.0;
    %316 = %304.0;
    %317 = bitwise_or(%311, %312) /* ty=Tensor[(10, 10, 14), int32] */;
    %318 = %313.0;
    %319 = %314.0;
    %320 = @func_7554() /* ty=Tensor[(7, 12, 14), bool] */;
    (%315, %var_10405, %316, %317, %318, %319, %320)
  };
  %321(%var_10440, %var_10441) /* ty=(Tensor[(3, 6, 1), float32], Tensor[(1400), int32], Tensor[(7, 12, 14), float32], Tensor[(10, 10, 14), int32], Tensor[(900), float32], Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), bool]) */
}

def @func_10699() -> (Tensor[(900), float32], Tensor[(900), float32]) {
  %322 = @func_9162() /* ty=(Tensor[(900), float32],) */;
  %323 = @func_9162() /* ty=(Tensor[(900), float32],) */;
  %324 = %322.0;
  %325 = %323.0;
  (%324, %325)
}

def @func_9325() -> (Tensor[(7, 12, 14), bool],) {
  @func_9323() /* ty=(Tensor[(7, 12, 14), bool],) */
}

def @func_8661() -> (Tensor[(13, 14, 15), float64],) {
  %326 = @func_8297() /* ty=(Tensor[(3, 6, 14), int8], Tensor[(7, 12, 14), bool], Tensor[(3, 6, 1), float64], Tensor[(15, 11, 5), uint8], Tensor[(275, 3), uint8], Tensor[(7, 12, 14), float32], Tensor[(3, 6, 1), float32], Tensor[(13, 14, 15), int32], Tensor[(14, 195), int8], Tensor[(3, 6, 1), float32]) */;
  %327 = %326.7;
  %328 = cast(%327, dtype="float64") /* ty=Tensor[(13, 14, 15), float64] */;
  %329 = atanh(%328) /* ty=Tensor[(13, 14, 15), float64] */;
  (%329,)
}

def @func_8779() -> (Tensor[(7, 12, 14), bool],) {
  @func_8777() /* ty=(Tensor[(7, 12, 14), bool],) */
}

def @func_11054(%var_11043: Tensor[(1584), float64], %var_11044: int64) -> (Tensor[(7, 12, 14), float32], int64, Tensor[(1584), float64], int64, Tensor[(2304), int64]) {
  %330 = @func_7724() /* ty=(Tensor[(7, 12, 14), float32], Tensor[(7, 12, 14), float32]) */;
  %331 = cast(%var_11043, dtype="float64") /* ty=Tensor[(1584), float64] */;
  %332 = cast(%var_11044, dtype="int64") /* ty=int64 */;
  %333 = cast(meta[relay.Constant][15] /* ty=Tensor[(2304), int64] */, dtype="int64") /* ty=Tensor[(2304), int64] */;
  %334 = reshape(%331, newshape=[16, 11, 9]) /* ty=Tensor[(16, 11, 9), float64] */;
  %335 = reshape(%332, newshape=[]) /* ty=int64 */;
  %336 = reshape(%333, newshape=[2304]) /* ty=Tensor[(2304), int64] */;
  %337 = @func_724(%334, %335, %336) /* ty=(Tensor[(16, 11, 9), float64], Tensor[(16, 9, 16), bool], int64, Tensor[(2304), int64], Tensor[(16, 9, 16), bool]) */;
  %338 = %330.0;
  %339 = %337.2;
  (%338, %339, %var_11043, %var_11044, meta[relay.Constant][15] /* ty=Tensor[(2304), int64] */)
}

def @func_5532(%var_5526: Tensor[(10, 5, 8), float32], %var_5527: Tensor[(10, 5, 8), float32]) -> (Tensor[(10, 5, 8), bool],) {
  %340 = cast(%var_5527, dtype="bool") /* ty=Tensor[(10, 5, 8), bool] */;
  %341 = shape_of(%var_5526, dtype="int32") /* ty=Tensor[(3), int32] */;
  %342 = cast(%var_5526, dtype="bool") /* ty=Tensor[(10, 5, 8), bool] */;
  %343 = dyn.reshape(%340, %341, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %344 = greater(%342, %343) /* ty=Tensor[(10, 5, 8), bool] */;
  (%344,)
}

def @func_7632(%var_7630: int32, %var_7631: Tensor[(2, 700), int32]) -> (Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), float64], Tensor[(10, 10, 14), float32], int32, Tensor[(2, 700), int32]) {
  @func_7628(%var_7630, %var_7631) /* ty=(Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), float64], Tensor[(10, 10, 14), float32], int32, Tensor[(2, 700), int32]) */
}

def @func_8326(%var_8314: Tensor[(2304), int64]) -> (int64, Tensor[(2304), int64], Tensor[(7, 10, 16), float32]) {
  %345 = cast(%var_8314, dtype="int64") /* ty=Tensor[(2304), int64] */;
  %346 = reshape(%345, newshape=[8, 288]) /* ty=Tensor[(8, 288), int64] */;
  %347 = @func_7690(%346) /* ty=(Tensor[(12, 15, 5), float32], Tensor[(7, 12, 14), int32], Tensor[(16, 9, 16), bool], int64, Tensor[(8, 288), int64], Tensor[(15, 11, 5), uint8], Tensor[(825), uint8]) */;
  %348 = cast(meta[relay.Constant][16] /* ty=Tensor[(7, 10, 16), float32] */, dtype="float32") /* ty=Tensor[(7, 10, 16), float32] */;
  %349 = erf(%348) /* ty=Tensor[(7, 10, 16), float32] */;
  %350 = cast(%349, dtype="float32") /* ty=Tensor[(7, 10, 16), float32] */;
  %351 = %347.3;
  %352 = atan(%350) /* ty=Tensor[(7, 10, 16), float32] */;
  (%351, %var_8314, %352)
}

def @func_10545(%var_10542: Tensor[(7, 12, 14), bool], %var_10543: Tensor[(7, 12, 14), float64], %var_10544: Tensor[(2304), int64]) -> (Tensor[(7, 12, 14), int32], Tensor[(2304), int64], Tensor[(2304), int64]) {
  %369 = fn (%var_10518: Tensor[(7, 12, 14), bool], %var_10530: Tensor[(7, 12, 14), float64], %var_10538: Tensor[(2304), int64]) -> (Tensor[(7, 12, 14), int32], Tensor[(2304), int64], Tensor[(2304), int64]) {
    %353 = @func_9323() /* ty=(Tensor[(7, 12, 14), bool],) */;
    %354 = %353.0;
    %355 = cast(%var_10518, dtype="float64") /* ty=Tensor[(7, 12, 14), float64] */;
    %356 = shape_of(%354, dtype="int32") /* ty=Tensor[(3), int32] */;
    %357 = cast(%354, dtype="float64") /* ty=Tensor[(7, 12, 14), float64] */;
    %358 = dyn.reshape(%355, %356, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %359 = mod(%357, %358) /* ty=Tensor[(7, 12, 14), float64] */;
    %360 = cast(%var_10530, dtype="int32") /* ty=Tensor[(7, 12, 14), int32] */;
    %361 = shape_of(%359, dtype="int32") /* ty=Tensor[(3), int32] */;
    %362 = cast(%359, dtype="int32") /* ty=Tensor[(7, 12, 14), int32] */;
    %363 = dyn.reshape(%360, %361, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %364 = cast(%var_10538, dtype="int64") /* ty=Tensor[(2304), int64] */;
    %365 = reshape(%364, newshape=[2304]) /* ty=Tensor[(2304), int64] */;
    %366 = @func_8506(%365) /* ty=(Tensor[(7, 12, 14), float32], Tensor[(15, 11, 5), uint8], Tensor[(2304), int64], Tensor[(7, 12, 14), float32]) */;
    %367 = logical_xor(%362, %363) /* ty=Tensor[(7, 12, 14), int32] */;
    %368 = %366.2;
    (%367, %368, %var_10538)
  };
  %369(%var_10542, %var_10543, %var_10544) /* ty=(Tensor[(7, 12, 14), int32], Tensor[(2304), int64], Tensor[(2304), int64]) */
}

def @func_8998(%var_8995: Tensor[(2304), int64], %var_8996: Tensor[(1, 2730), int8], %var_8997: Tensor[(1, 2730), int8]) -> (Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), float32], Tensor[(2304), int64], Tensor[(7, 12, 14), bool], Tensor[(?, 2730), float32]) {
  @func_8993(%var_8995, %var_8996, %var_8997) /* ty=(Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), float32], Tensor[(2304), int64], Tensor[(7, 12, 14), bool], Tensor[(?, 2730), float32]) */
}

def @func_12148() -> (Tensor[(900), float32], Tensor[(2304), float32], Tensor[(15, 11, 5), uint8], Tensor[(15, 11, 5), float32]) {
  %370 = @func_10699() /* ty=(Tensor[(900), float32], Tensor[(900), float32]) */;
  %371 = cast(meta[relay.Constant][17] /* ty=Tensor[(2304), int64] */, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %372 = tan(%371) /* ty=Tensor[(2304), float32] */;
  %373 = cast(%372, dtype="int64") /* ty=Tensor[(2304), int64] */;
  %374 = reshape(%373, newshape=[2304]) /* ty=Tensor[(2304), int64] */;
  %375 = @func_8506(%374) /* ty=(Tensor[(7, 12, 14), float32], Tensor[(15, 11, 5), uint8], Tensor[(2304), int64], Tensor[(7, 12, 14), float32]) */;
  %376 = cast(meta[relay.Constant][17] /* ty=Tensor[(2304), int64] */, dtype="int64") /* ty=Tensor[(2304), int64] */;
  %377 = reshape(%376, newshape=[2304]) /* ty=Tensor[(2304), int64] */;
  %378 = @func_8506(%377) /* ty=(Tensor[(7, 12, 14), float32], Tensor[(15, 11, 5), uint8], Tensor[(2304), int64], Tensor[(7, 12, 14), float32]) */;
  %379 = %378.1;
  %380 = cast(%379, dtype="float64") /* ty=Tensor[(15, 11, 5), float64] */;
  %381 = atan(%380) /* ty=Tensor[(15, 11, 5), float64] */;
  %382 = %375.1;
  %383 = cast(%382, dtype="uint8") /* ty=Tensor[(15, 11, 5), uint8] */;
  %384 = reshape(%383, newshape=[275, 3]) /* ty=Tensor[(275, 3), uint8] */;
  %385 = @func_11132(%384) /* ty=(Tensor[(7, 12, 14), float64], Tensor[(7, 12, 14), float32], Tensor[(14, 7, 7), float64], Tensor[(16, 9, 16), bool], Tensor[(275, 3), uint16], Tensor[(275, 3), float64]) */;
  %386 = %385.5;
  %387 = cast(%386, dtype="float32") /* ty=Tensor[(275, 3), float32] */;
  %388 = shape_of(%381, dtype="int32") /* ty=Tensor[(3), int32] */;
  %389 = cast(%381, dtype="float32") /* ty=Tensor[(15, 11, 5), float32] */;
  %390 = dyn.reshape(%387, %388, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %391 = %370.1;
  %392 = maximum(%389, %390) /* ty=Tensor[(15, 11, 5), float32] */;
  (%391, %372, %382, %392)
}

def @func_10336() -> (Tensor[(7, 12, 14), bool],) {
  %395 = fn () -> (Tensor[(7, 12, 14), bool],) {
    %393 = @func_7926() /* ty=(Tensor[(7, 12, 14), bool],) */;
    %394 = %393.0;
    (%394,)
  };
  %395() /* ty=(Tensor[(7, 12, 14), bool],) */
}

def @func_7556() -> Tensor[(7, 12, 14), bool] {
  @func_7554() /* ty=Tensor[(7, 12, 14), bool] */
}

def @func_7914() -> (Tensor[(3, 6, 1), float32], Tensor[(16, 9, 16), bool], int64, Tensor[(2304), int64], Tensor[(7, 12, 14), float64]) {
  %396 = @func_7590() /* ty=Tensor[(3, 6, 1), float32] */;
  %397 = cast(%396, dtype="float32") /* ty=Tensor[(3, 6, 1), float32] */;
  %398 = cast(7 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %399 = cast(meta[relay.Constant][18] /* ty=Tensor[(2304), int64] */, dtype="int64") /* ty=Tensor[(2304), int64] */;
  %400 = reshape(%398, newshape=[]) /* ty=int64 */;
  %401 = reshape(%399, newshape=[16, 9, 16]) /* ty=Tensor[(16, 9, 16), int64] */;
  %402 = @func_7778() /* ty=(Tensor[(7, 12, 14), float64], Tensor[(1, 3, 6), float32], Tensor[(1040, 1), int64]) */;
  %403 = asin(%397) /* ty=Tensor[(3, 6, 1), float32] */;
  %404 = @func_498(%400, %401) /* ty=Tensor[(16, 9, 16), bool] */;
  %405 = %402.0;
  (%403, %404, 7 /* ty=int64 */, meta[relay.Constant][18] /* ty=Tensor[(2304), int64] */, %405)
}

def @func_8795() -> (Tensor[(7, 12, 14), float32],) {
  @func_8793() /* ty=(Tensor[(7, 12, 14), float32],) */
}

def @func_1769(%var_1768: Tensor[(12, 7, 16), float64]) -> (Tensor[(12, 7, 16), float64],) {
  %408 = fn (%var_1756: Tensor[(12, 7, 16), float64]) -> (Tensor[(12, 7, 16), float64],) {
    %406 = cast(%var_1756, dtype="float64") /* ty=Tensor[(12, 7, 16), float64] */;
    %407 = rsqrt(%406) /* ty=Tensor[(12, 7, 16), float64] */;
    (%407,)
  };
  %408(%var_1768) /* ty=(Tensor[(12, 7, 16), float64],) */
}

def @func_10257() -> (Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), float32], Tensor[(1, 2304), int64]) {
  %409 = @func_7323() /* ty=(Tensor[(7, 12, 14), bool],) */;
  %410 = cast(meta[relay.Constant][19] /* ty=Tensor[(1, 2304), int64] */, dtype="int64") /* ty=Tensor[(1, 2304), int64] */;
  %411 = reshape(%410, newshape=[2304]) /* ty=Tensor[(2304), int64] */;
  %412 = @func_8506(%411) /* ty=(Tensor[(7, 12, 14), float32], Tensor[(15, 11, 5), uint8], Tensor[(2304), int64], Tensor[(7, 12, 14), float32]) */;
  %413 = %409.0;
  %414 = %412.0;
  (%413, %414, meta[relay.Constant][19] /* ty=Tensor[(1, 2304), int64] */)
}

def @func_9521(%var_9520: Tensor[(9, 8, 3), float64]) -> (Tensor[(9, 8, 3), float32], Tensor[(9, 8, 3), float64], Tensor[(9, 8, 3), float32], Tensor[(9, 8, 3), float32]) {
  %425 = fn (%var_9463: Tensor[(9, 8, 3), float64]) -> (Tensor[(9, 8, 3), float32], Tensor[(9, 8, 3), float64], Tensor[(9, 8, 3), float32], Tensor[(9, 8, 3), float32]) {
    %415 = cast(%var_9463, dtype="float64") /* ty=Tensor[(9, 8, 3), float64] */;
    %416 = log2(%415) /* ty=Tensor[(9, 8, 3), float64] */;
    %417 = cast(%416, dtype="float32") /* ty=Tensor[(9, 8, 3), float32] */;
    %418 = cast(%416, dtype="float64") /* ty=Tensor[(9, 8, 3), float64] */;
    %419 = cast(%416, dtype="float32") /* ty=Tensor[(9, 8, 3), float32] */;
    %420 = cast(%var_9463, dtype="float32") /* ty=Tensor[(9, 8, 3), float32] */;
    %421 = sin(%417) /* ty=Tensor[(9, 8, 3), float32] */;
    %422 = tan(%418) /* ty=Tensor[(9, 8, 3), float64] */;
    %423 = sqrt(%419) /* ty=Tensor[(9, 8, 3), float32] */;
    %424 = cosh(%420) /* ty=Tensor[(9, 8, 3), float32] */;
    (%421, %422, %423, %424)
  };
  %425(%var_9520) /* ty=(Tensor[(9, 8, 3), float32], Tensor[(9, 8, 3), float64], Tensor[(9, 8, 3), float32], Tensor[(9, 8, 3), float32]) */
}

def @func_9672(%var_9670: Tensor[(7, 1, 12), float32], %var_9671: int8) -> (Tensor[(7, 1, 12), float32], Tensor[(1, 3, 6), float32], int8) {
  %432 = fn (%var_9638: Tensor[(7, 1, 12), float32], %var_9666: int8) -> (Tensor[(7, 1, 12), float32], Tensor[(1, 3, 6), float32], int8) {
    %426 = cast(%var_9638, dtype="float32") /* ty=Tensor[(7, 1, 12), float32] */;
    %427 = cast(%var_9666, dtype="int8") /* ty=int8 */;
    %428 = reshape(%427, newshape=[]) /* ty=int8 */;
    %429 = @func_7192(%428) /* ty=(Tensor[(7, 12, 14), bool], Tensor[(1, 3, 6), float32], int8, Tensor[(1456), float64], Tensor[(35, 6), float64], Tensor[(1456), float64]) */;
    %430 = cos(%426) /* ty=Tensor[(7, 1, 12), float32] */;
    %431 = %429.1;
    (%430, %431, %var_9666)
  };
  %432(%var_9670, %var_9671) /* ty=(Tensor[(7, 1, 12), float32], Tensor[(1, 3, 6), float32], int8) */
}

def @func_10875(%var_10873: Tensor[(14, 7, 7), float64]) -> Tensor[(14, 7, 7), int32] {
  @func_10872(%var_10873) /* ty=Tensor[(14, 7, 7), int32] */
}

def @func_7554() -> Tensor[(7, 12, 14), bool] {
  %433 = @func_7323() /* ty=(Tensor[(7, 12, 14), bool],) */;
  %433.0
}

def @func_3684(%var_3683: Tensor[(1440), int32]) -> (Tensor[(14, 14, 13), float32], Tensor[(9, 10, 16), bool], Tensor[(1440), int32], Tensor[(14, 14, 13), float64]) {
  %451 = fn (%var_3650: Tensor[(1440), int32]) -> (Tensor[(14, 14, 13), float32], Tensor[(9, 10, 16), bool], Tensor[(1440), int32], Tensor[(14, 14, 13), float64]) {
    %434 = cast(meta[relay.Constant][21] /* ty=Tensor[(14, 14, 13), int32] */, dtype="int32") /* ty=Tensor[(14, 14, 13), int32] */;
    %435 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(14, 14, 13), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %436 = cast(meta[relay.Constant][20] /* ty=Tensor[(14, 14, 13), int32] */, dtype="int32") /* ty=Tensor[(14, 14, 13), int32] */;
    %437 = dyn.reshape(%434, %435, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %438 = bitwise_or(%436, %437) /* ty=Tensor[(14, 14, 13), int32] */;
    %439 = cast(%438, dtype="float32") /* ty=Tensor[(14, 14, 13), float32] */;
    %440 = cast(%var_3650, dtype="int32") /* ty=Tensor[(1440), int32] */;
    %441 = cast(%var_3650, dtype="int32") /* ty=Tensor[(1440), int32] */;
    %442 = reshape(%440, newshape=[9, 10, 16]) /* ty=Tensor[(9, 10, 16), int32] */;
    %443 = reshape(%441, newshape=[9, 10, 16]) /* ty=Tensor[(9, 10, 16), int32] */;
    %444 = @func_3428(%442, %443) /* ty=(Tensor[(9, 10, 16), bool],) */;
    %445 = cast(meta[relay.Constant][20] /* ty=Tensor[(14, 14, 13), int32] */, dtype="float32") /* ty=Tensor[(14, 14, 13), float32] */;
    %446 = erf(%445) /* ty=Tensor[(14, 14, 13), float32] */;
    %447 = cast(%446, dtype="float64") /* ty=Tensor[(14, 14, 13), float64] */;
    %448 = log10(%439) /* ty=Tensor[(14, 14, 13), float32] */;
    %449 = %444.0;
    %450 = sigmoid(%447) /* ty=Tensor[(14, 14, 13), float64] */;
    (%448, %449, %var_3650, %450)
  };
  %451(%var_3683) /* ty=(Tensor[(14, 14, 13), float32], Tensor[(9, 10, 16), bool], Tensor[(1440), int32], Tensor[(14, 14, 13), float64]) */
}

def @func_9401() -> Tensor[(1040, ?), int32] {
  %461 = fn () -> Tensor[(1040, ?), int32] {
    %452 = @func_8889() /* ty=Tensor[(1040, 1), float64] */;
    %453 = cast(%452, dtype="float64") /* ty=Tensor[(1040, 1), float64] */;
    %454 = log10(%453) /* ty=Tensor[(1040, 1), float64] */;
    %455 = cast(%452, dtype="float32") /* ty=Tensor[(1040, 1), float32] */;
    %456 = acosh(%455) /* ty=Tensor[(1040, 1), float32] */;
    %457 = cast(%456, dtype="int32") /* ty=Tensor[(1040, 1), int32] */;
    %458 = shape_of(%454, dtype="int32") /* ty=Tensor[(2), int32] */;
    %459 = cast(%454, dtype="int32") /* ty=Tensor[(1040, 1), int32] */;
    %460 = dyn.reshape(%457, %458, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
    bitwise_or(%459, %460) /* ty=Tensor[(1040, ?), int32] */
  };
  %461() /* ty=Tensor[(1040, ?), int32] */
}

def @func_3932(%var_3898: Tensor[(13, 9, 10), float32]) -> (Tensor[(13, 9, 10), bool],) {
  %462 = cast(%var_3898, dtype="float32") /* ty=Tensor[(13, 9, 10), float32] */;
  %463 = atan(%462) /* ty=Tensor[(13, 9, 10), float32] */;
  %464 = cast(%var_3898, dtype="bool") /* ty=Tensor[(13, 9, 10), bool] */;
  %465 = shape_of(%463, dtype="int32") /* ty=Tensor[(3), int32] */;
  %466 = cast(%463, dtype="bool") /* ty=Tensor[(13, 9, 10), bool] */;
  %467 = dyn.reshape(%464, %465, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %468 = logical_or(%466, %467) /* ty=Tensor[(13, 9, 10), bool] */;
  %469 = cast(%var_3898, dtype="bool") /* ty=Tensor[(13, 9, 10), bool] */;
  %470 = shape_of(%468, dtype="int32") /* ty=Tensor[(3), int32] */;
  %471 = cast(%468, dtype="bool") /* ty=Tensor[(13, 9, 10), bool] */;
  %472 = dyn.reshape(%469, %470, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %473 = less_equal(%471, %472) /* ty=Tensor[(13, 9, 10), bool] */;
  (%473,)
}

def @func_7692(%var_7691: Tensor[(8, 288), int64]) -> (Tensor[(12, 15, 5), float32], Tensor[(7, 12, 14), int32], Tensor[(16, 9, 16), bool], int64, Tensor[(8, 288), int64], Tensor[(15, 11, 5), uint8], Tensor[(825), uint8]) {
  %494 = fn (%var_7669: Tensor[(8, 288), int64]) -> (Tensor[(12, 15, 5), float32], Tensor[(7, 12, 14), int32], Tensor[(16, 9, 16), bool], int64, Tensor[(8, 288), int64], Tensor[(15, 11, 5), uint8], Tensor[(825), uint8]) {
    %474 = @func_7404() /* ty=(Tensor[(7, 12, 14), bool], Tensor[(12, 15, 5), float32], Tensor[(900), float32]) */;
    %475 = @func_7404() /* ty=(Tensor[(7, 12, 14), bool], Tensor[(12, 15, 5), float32], Tensor[(900), float32]) */;
    %476 = %475.0;
    %477 = cast(meta[relay.Constant][22] /* ty=Tensor[(7, 12, 14), bool] */, dtype="int32") /* ty=Tensor[(7, 12, 14), int32] */;
    %478 = shape_of(%476, dtype="int32") /* ty=Tensor[(3), int32] */;
    %479 = cast(%476, dtype="int32") /* ty=Tensor[(7, 12, 14), int32] */;
    %480 = dyn.reshape(%477, %478, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %481 = cast(-5 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %482 = cast(%var_7669, dtype="int64") /* ty=Tensor[(8, 288), int64] */;
    %483 = reshape(%481, newshape=[]) /* ty=int64 */;
    %484 = reshape(%482, newshape=[16, 9, 16]) /* ty=Tensor[(16, 9, 16), int64] */;
    %485 = cast(meta[relay.Constant][23] /* ty=Tensor[(825), uint8] */, dtype="uint8") /* ty=Tensor[(825), uint8] */;
    %486 = cast(meta[relay.Constant][23] /* ty=Tensor[(825), uint8] */, dtype="uint8") /* ty=Tensor[(825), uint8] */;
    %487 = reshape(%485, newshape=[15, 11, 5]) /* ty=Tensor[(15, 11, 5), uint8] */;
    %488 = reshape(%486, newshape=[15, 11, 5]) /* ty=Tensor[(15, 11, 5), uint8] */;
    %489 = @func_4582(%487, %488) /* ty=(Tensor[(15, 11, 5), uint8],) */;
    %490 = %474.1;
    %491 = bitwise_or(%479, %480) /* ty=Tensor[(7, 12, 14), int32] */;
    %492 = @func_498(%483, %484) /* ty=Tensor[(16, 9, 16), bool] */;
    %493 = %489.0;
    (%490, %491, %492, -5 /* ty=int64 */, %var_7669, %493, meta[relay.Constant][23] /* ty=Tensor[(825), uint8] */)
  };
  %494(%var_7691) /* ty=(Tensor[(12, 15, 5), float32], Tensor[(7, 12, 14), int32], Tensor[(16, 9, 16), bool], int64, Tensor[(8, 288), int64], Tensor[(15, 11, 5), uint8], Tensor[(825), uint8]) */
}

def @func_7370() -> (Tensor[(7, 12, 14), bool],) {
  %497 = fn () -> (Tensor[(7, 12, 14), bool],) {
    %495 = @func_7323() /* ty=(Tensor[(7, 12, 14), bool],) */;
    %496 = %495.0;
    (%496,)
  };
  %497() /* ty=(Tensor[(7, 12, 14), bool],) */
}

def @func_3431(%var_3429: Tensor[(9, 10, 16), int32], %var_3430: Tensor[(9, 10, 16), int32]) -> (Tensor[(9, 10, 16), bool],) {
  %503 = fn (%var_3420: Tensor[(9, 10, 16), int32], %var_3421: Tensor[(9, 10, 16), int32]) -> (Tensor[(9, 10, 16), bool],) {
    %498 = cast(%var_3421, dtype="bool") /* ty=Tensor[(9, 10, 16), bool] */;
    %499 = shape_of(%var_3420, dtype="int32") /* ty=Tensor[(3), int32] */;
    %500 = cast(%var_3420, dtype="bool") /* ty=Tensor[(9, 10, 16), bool] */;
    %501 = dyn.reshape(%498, %499, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %502 = greater(%500, %501) /* ty=Tensor[(9, 10, 16), bool] */;
    (%502,)
  };
  %503(%var_3429, %var_3430) /* ty=(Tensor[(9, 10, 16), bool],) */
}

def @func_7467(%var_7466: Tensor[(1440), int32]) -> (Tensor[(7, 12, 14), bool], Tensor[(13, 9, 10), bool], Tensor[(1170), float32], Tensor[(7, 12, 14), float32], Tensor[(9, 10, 16), bool], Tensor[(1440), int32]) {
  %518 = fn (%var_7459: Tensor[(1440), int32]) -> (Tensor[(7, 12, 14), bool], Tensor[(13, 9, 10), bool], Tensor[(1170), float32], Tensor[(7, 12, 14), float32], Tensor[(9, 10, 16), bool], Tensor[(1440), int32]) {
    %504 = @func_7369() /* ty=(Tensor[(7, 12, 14), bool],) */;
    %505 = cast(meta[relay.Constant][24] /* ty=Tensor[(1170), float32] */, dtype="float32") /* ty=Tensor[(1170), float32] */;
    %506 = reshape(%505, newshape=[13, 9, 10]) /* ty=Tensor[(13, 9, 10), float32] */;
    %507 = @func_3932(%506) /* ty=(Tensor[(13, 9, 10), bool],) */;
    %508 = @func_7101() /* ty=(Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), float32]) */;
    %509 = cast(%var_7459, dtype="int32") /* ty=Tensor[(1440), int32] */;
    %510 = cast(%var_7459, dtype="int32") /* ty=Tensor[(1440), int32] */;
    %511 = reshape(%509, newshape=[9, 10, 16]) /* ty=Tensor[(9, 10, 16), int32] */;
    %512 = reshape(%510, newshape=[9, 10, 16]) /* ty=Tensor[(9, 10, 16), int32] */;
    %513 = @func_3428(%511, %512) /* ty=(Tensor[(9, 10, 16), bool],) */;
    %514 = %504.0;
    %515 = %507.0;
    %516 = %508.1;
    %517 = %513.0;
    (%514, %515, meta[relay.Constant][24] /* ty=Tensor[(1170), float32] */, %516, %517, %var_7459)
  };
  %518(%var_7466) /* ty=(Tensor[(7, 12, 14), bool], Tensor[(13, 9, 10), bool], Tensor[(1170), float32], Tensor[(7, 12, 14), float32], Tensor[(9, 10, 16), bool], Tensor[(1440), int32]) */
}

def @func_7628(%var_7625: int32, %var_7626: Tensor[(2, 700), int32]) -> (Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), float64], Tensor[(10, 10, 14), float32], int32, Tensor[(2, 700), int32]) {
  %519 = @func_7323() /* ty=(Tensor[(7, 12, 14), bool],) */;
  %520 = @func_7323() /* ty=(Tensor[(7, 12, 14), bool],) */;
  %521 = %520.0;
  %522 = cast(%521, dtype="float64") /* ty=Tensor[(7, 12, 14), float64] */;
  %523 = cast(%var_7625, dtype="int32") /* ty=int32 */;
  %524 = cast(%var_7626, dtype="int32") /* ty=Tensor[(2, 700), int32] */;
  %525 = reshape(%523, newshape=[]) /* ty=int32 */;
  %526 = reshape(%524, newshape=[10, 10, 14]) /* ty=Tensor[(10, 10, 14), int32] */;
  %527 = @func_1424(%525, %526) /* ty=(Tensor[(10, 10, 14), float32],) */;
  %528 = %519.0;
  %529 = log10(%522) /* ty=Tensor[(7, 12, 14), float64] */;
  %530 = %527.0;
  (%528, %529, %530, %var_7625, %var_7626)
}

def @func_8508(%var_8507: Tensor[(2304), int64]) -> (Tensor[(7, 12, 14), float32], Tensor[(15, 11, 5), uint8], Tensor[(2304), int64], Tensor[(7, 12, 14), float32]) {
  %538 = fn (%var_8479: Tensor[(2304), int64]) -> (Tensor[(7, 12, 14), float32], Tensor[(15, 11, 5), uint8], Tensor[(2304), int64], Tensor[(7, 12, 14), float32]) {
    %531 = @func_7724() /* ty=(Tensor[(7, 12, 14), float32], Tensor[(7, 12, 14), float32]) */;
    %532 = cast(%var_8479, dtype="int64") /* ty=Tensor[(2304), int64] */;
    %533 = reshape(%532, newshape=[8, 288]) /* ty=Tensor[(8, 288), int64] */;
    %534 = @func_7690(%533) /* ty=(Tensor[(12, 15, 5), float32], Tensor[(7, 12, 14), int32], Tensor[(16, 9, 16), bool], int64, Tensor[(8, 288), int64], Tensor[(15, 11, 5), uint8], Tensor[(825), uint8]) */;
    %535 = %531.1;
    %536 = %534.5;
    %537 = @func_8436() /* ty=Tensor[(7, 12, 14), float32] */;
    (%535, %536, %var_8479, %537)
  };
  %538(%var_8507) /* ty=(Tensor[(7, 12, 14), float32], Tensor[(15, 11, 5), uint8], Tensor[(2304), int64], Tensor[(7, 12, 14), float32]) */
}

def @func_9831() -> (Tensor[(3, 6, 1), float32],) {
  %541 = fn () -> (Tensor[(3, 6, 1), float32],) {
    %539 = @func_8297() /* ty=(Tensor[(3, 6, 14), int8], Tensor[(7, 12, 14), bool], Tensor[(3, 6, 1), float64], Tensor[(15, 11, 5), uint8], Tensor[(275, 3), uint8], Tensor[(7, 12, 14), float32], Tensor[(3, 6, 1), float32], Tensor[(13, 14, 15), int32], Tensor[(14, 195), int8], Tensor[(3, 6, 1), float32]) */;
    %540 = %539.9;
    (%540,)
  };
  %541() /* ty=(Tensor[(3, 6, 1), float32],) */
}

def @func_11058(%var_11056: Tensor[(1584), float64], %var_11057: int64) -> (Tensor[(7, 12, 14), float32], int64, Tensor[(1584), float64], int64, Tensor[(2304), int64]) {
  @func_11054(%var_11056, %var_11057) /* ty=(Tensor[(7, 12, 14), float32], int64, Tensor[(1584), float64], int64, Tensor[(2304), int64]) */
}

def @func_10259() -> (Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), float32], Tensor[(1, 2304), int64]) {
  @func_10257() /* ty=(Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), float32], Tensor[(1, 2304), int64]) */
}

def @main(%var_12246: Tensor[(1, 4, 15), float32], %var_12252: Tensor[(16, 10), float32], %var_12267: Tensor[(108, 2), float64]) -> (Tensor[(1, 16, 10), float32], Tensor[(16, 10), float32], Tensor[(13, 14, 15), float64], Tensor[(9, 8, 3), float64], Tensor[(108, 2), float64], Tensor[(?, 4, 15), uint16]) {
  %542 = cast(%var_12252, dtype="float32") /* ty=Tensor[(16, 10), float32] */;
  %543 = reshape(%542, newshape=[1, 16, 10]) /* ty=Tensor[(1, 16, 10), float32] */;
  %544 = @func_10885(%543) /* ty=(Tensor[(1, 16, 10), float32],) */;
  %545 = @func_8663() /* ty=(Tensor[(13, 14, 15), float64],) */;
  %546 = cast(%var_12267, dtype="float64") /* ty=Tensor[(108, 2), float64] */;
  %547 = reshape(%546, newshape=[9, 8, 3]) /* ty=Tensor[(9, 8, 3), float64] */;
  %548 = @func_9521(%547) /* ty=(Tensor[(9, 8, 3), float32], Tensor[(9, 8, 3), float64], Tensor[(9, 8, 3), float32], Tensor[(9, 8, 3), float32]) */;
  %549 = cast(%var_12246, dtype="float32") /* ty=Tensor[(1, 4, 15), float32] */;
  %550 = atan(%549) /* ty=Tensor[(1, 4, 15), float32] */;
  %551 = cast(%550, dtype="uint16") /* ty=Tensor[(1, 4, 15), uint16] */;
  %552 = shape_of(%var_12246, dtype="int32") /* ty=Tensor[(3), int32] */;
  %553 = cast(%var_12246, dtype="uint16") /* ty=Tensor[(1, 4, 15), uint16] */;
  %554 = dyn.reshape(%551, %552, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %555 = %544.0;
  %556 = %545.0;
  %557 = %548.1;
  %558 = bitwise_or(%553, %554) /* ty=Tensor[(?, 4, 15), uint16] */;
  (%555, %var_12252, %556, %557, %var_12267, %558)
}

def @func_11006() -> (Tensor[(7, 12, 14), float32], Tensor[(7, 12, 14), float32]) {
  %559 = @func_9345() /* ty=(Tensor[(7, 12, 14), float32],) */;
  %560 = %559.0;
  %561 = cast(%560, dtype="float32") /* ty=Tensor[(7, 12, 14), float32] */;
  %562 = @func_8436() /* ty=Tensor[(7, 12, 14), float32] */;
  %563 = asinh(%561) /* ty=Tensor[(7, 12, 14), float32] */;
  (%562, %563)
}

def @func_4582(%var_4559: Tensor[(15, 11, 5), uint8], %var_4560: Tensor[(15, 11, 5), uint8]) -> (Tensor[(15, 11, 5), uint8],) {
  %564 = cast(%var_4560, dtype="uint8") /* ty=Tensor[(15, 11, 5), uint8] */;
  %565 = shape_of(%var_4559, dtype="int32") /* ty=Tensor[(3), int32] */;
  %566 = cast(%var_4559, dtype="uint8") /* ty=Tensor[(15, 11, 5), uint8] */;
  %567 = dyn.reshape(%564, %565, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %568 = bitwise_xor(%566, %567) /* ty=Tensor[(15, 11, 5), uint8] */;
  (%568,)
}

def @func_501(%var_499: int64, %var_500: Tensor[(16, 9, 16), int64]) -> Tensor[(16, 9, 16), bool] {
  %571 = fn (%var_492: int64, %var_493: Tensor[(16, 9, 16), int64]) -> Tensor[(16, 9, 16), bool] {
    %569 = cast(%var_492, dtype="bool") /* ty=bool */;
    %570 = cast(%var_493, dtype="bool") /* ty=Tensor[(16, 9, 16), bool] */;
    not_equal(%569, %570) /* ty=Tensor[(16, 9, 16), bool] */
  };
  %571(%var_499, %var_500) /* ty=Tensor[(16, 9, 16), bool] */
}

def @func_11566() -> Tensor[(10, 5, 8), bool] {
  %573 = fn () -> Tensor[(10, 5, 8), bool] {
    %572 = @func_10073() /* ty=(Tensor[(10, 5, 8), bool],) */;
    %572.0
  };
  %573() /* ty=Tensor[(10, 5, 8), bool] */
}

def @func_9071(%var_9069: Tensor[(14, 195), int8]) -> Tensor[(14, 195), bool] {
  @func_9068(%var_9069) /* ty=Tensor[(14, 195), bool] */
}

def @func_10986() -> Tensor[(7, 12, 14), bool] {
  %575 = fn () -> Tensor[(7, 12, 14), bool] {
    %574 = @func_7323() /* ty=(Tensor[(7, 12, 14), bool],) */;
    %574.0
  };
  %575() /* ty=Tensor[(7, 12, 14), bool] */
}

def @func_11132(%var_11113: Tensor[(275, 3), uint8]) -> (Tensor[(7, 12, 14), float64], Tensor[(7, 12, 14), float32], Tensor[(14, 7, 7), float64], Tensor[(16, 9, 16), bool], Tensor[(275, 3), uint16], Tensor[(275, 3), float64]) {
  %576 = @func_7778() /* ty=(Tensor[(7, 12, 14), float64], Tensor[(1, 3, 6), float32], Tensor[(1040, 1), int64]) */;
  %577 = @func_8813() /* ty=(Tensor[(16, 9, 16), bool], Tensor[(14, 14, 13), float32], Tensor[(1440), int32]) */;
  %578 = @func_8297() /* ty=(Tensor[(3, 6, 14), int8], Tensor[(7, 12, 14), bool], Tensor[(3, 6, 1), float64], Tensor[(15, 11, 5), uint8], Tensor[(275, 3), uint8], Tensor[(7, 12, 14), float32], Tensor[(3, 6, 1), float32], Tensor[(13, 14, 15), int32], Tensor[(14, 195), int8], Tensor[(3, 6, 1), float32]) */;
  %579 = %578.4;
  %580 = cast(%var_11113, dtype="uint16") /* ty=Tensor[(275, 3), uint16] */;
  %581 = shape_of(%579, dtype="int32") /* ty=Tensor[(2), int32] */;
  %582 = cast(%579, dtype="uint16") /* ty=Tensor[(275, 3), uint16] */;
  %583 = dyn.reshape(%580, %581, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %584 = cast(%var_11113, dtype="float64") /* ty=Tensor[(275, 3), float64] */;
  %585 = %576.0;
  %586 = @func_8436() /* ty=Tensor[(7, 12, 14), float32] */;
  %587 = @func_8959() /* ty=Tensor[(14, 7, 7), float64] */;
  %588 = %577.0;
  %589 = bitwise_and(%582, %583) /* ty=Tensor[(275, 3), uint16] */;
  %590 = log10(%584) /* ty=Tensor[(275, 3), float64] */;
  (%585, %586, %587, %588, %589, %590)
}

def @func_828(%var_826: Tensor[(9, 4, 13), float32], %var_827: int64) -> (Tensor[(9, 4, 13), float32], Tensor[(16, 9, 16), bool], int64, Tensor[(2304), int64]) {
  %598 = fn (%var_804: Tensor[(9, 4, 13), float32], %var_812: int64) -> (Tensor[(9, 4, 13), float32], Tensor[(16, 9, 16), bool], int64, Tensor[(2304), int64]) {
    %591 = cast(%var_804, dtype="float32") /* ty=Tensor[(9, 4, 13), float32] */;
    %592 = cast(%var_812, dtype="int64") /* ty=int64 */;
    %593 = cast(meta[relay.Constant][25] /* ty=Tensor[(2304), int64] */, dtype="int64") /* ty=Tensor[(2304), int64] */;
    %594 = reshape(%592, newshape=[]) /* ty=int64 */;
    %595 = reshape(%593, newshape=[16, 9, 16]) /* ty=Tensor[(16, 9, 16), int64] */;
    %596 = cosh(%591) /* ty=Tensor[(9, 4, 13), float32] */;
    %597 = @func_498(%594, %595) /* ty=Tensor[(16, 9, 16), bool] */;
    (%596, %597, %var_812, meta[relay.Constant][25] /* ty=Tensor[(2304), int64] */)
  };
  %598(%var_826, %var_827) /* ty=(Tensor[(9, 4, 13), float32], Tensor[(16, 9, 16), bool], int64, Tensor[(2304), int64]) */
}

def @func_10908() -> (Tensor[(13, 14, 15), float64],) {
  %603 = fn () -> (Tensor[(13, 14, 15), float64],) {
    %599 = @func_10659() /* ty=(Tensor[(13, 14, 15), float32],) */;
    %600 = %599.0;
    %601 = cast(%600, dtype="float64") /* ty=Tensor[(13, 14, 15), float64] */;
    %602 = log(%601) /* ty=Tensor[(13, 14, 15), float64] */;
    (%602,)
  };
  %603() /* ty=(Tensor[(13, 14, 15), float64],) */
}

def @func_9851(%var_9850: Tensor[(2730), int8]) -> (Tensor[(3, 6, 1), float32], Tensor[(14, 195), bool], Tensor[(2730), int8]) {
  %609 = fn (%var_9837: Tensor[(2730), int8]) -> (Tensor[(3, 6, 1), float32], Tensor[(14, 195), bool], Tensor[(2730), int8]) {
    %604 = @func_9830() /* ty=(Tensor[(3, 6, 1), float32],) */;
    %605 = cast(%var_9837, dtype="int8") /* ty=Tensor[(2730), int8] */;
    %606 = reshape(%605, newshape=[14, 195]) /* ty=Tensor[(14, 195), int8] */;
    %607 = %604.0;
    %608 = @func_9068(%606) /* ty=Tensor[(14, 195), bool] */;
    (%607, %608, %var_9837)
  };
  %609(%var_9850) /* ty=(Tensor[(3, 6, 1), float32], Tensor[(14, 195), bool], Tensor[(2730), int8]) */
}

def @func_8793() -> (Tensor[(7, 12, 14), float32],) {
  %610 = @func_7101() /* ty=(Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), float32]) */;
  %611 = %610.1;
  (%611,)
}

def @func_9109() -> (Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), float32]) {
  %612 = @func_8297() /* ty=(Tensor[(3, 6, 14), int8], Tensor[(7, 12, 14), bool], Tensor[(3, 6, 1), float64], Tensor[(15, 11, 5), uint8], Tensor[(275, 3), uint8], Tensor[(7, 12, 14), float32], Tensor[(3, 6, 1), float32], Tensor[(13, 14, 15), int32], Tensor[(14, 195), int8], Tensor[(3, 6, 1), float32]) */;
  %613 = @func_8436() /* ty=Tensor[(7, 12, 14), float32] */;
  %614 = cast(%613, dtype="float32") /* ty=Tensor[(7, 12, 14), float32] */;
  %615 = %612.1;
  %616 = exp(%614) /* ty=Tensor[(7, 12, 14), float32] */;
  (%615, %616)
}

def @func_10217(%var_10216: int8) -> (Tensor[(7, 12, 14), bool], Tensor[(2304), int64], Tensor[(2304), int64], int8, int8) {
  %626 = fn (%var_10209: int8) -> (Tensor[(7, 12, 14), bool], Tensor[(2304), int64], Tensor[(2304), int64], int8, int8) {
    %617 = cast(meta[relay.Constant][26] /* ty=Tensor[(2304), int64] */, dtype="int64") /* ty=Tensor[(2304), int64] */;
    %618 = reshape(%617, newshape=[2304]) /* ty=Tensor[(2304), int64] */;
    %619 = @func_8326(%618) /* ty=(int64, Tensor[(2304), int64], Tensor[(7, 10, 16), float32]) */;
    %620 = cast(%var_10209, dtype="int8") /* ty=int8 */;
    %621 = reshape(%620, newshape=[]) /* ty=int8 */;
    %622 = @func_7192(%621) /* ty=(Tensor[(7, 12, 14), bool], Tensor[(1, 3, 6), float32], int8, Tensor[(1456), float64], Tensor[(35, 6), float64], Tensor[(1456), float64]) */;
    %623 = @func_7554() /* ty=Tensor[(7, 12, 14), bool] */;
    %624 = %619.1;
    %625 = %622.2;
    (%623, %624, meta[relay.Constant][26] /* ty=Tensor[(2304), int64] */, %625, %var_10209)
  };
  %626(%var_10216) /* ty=(Tensor[(7, 12, 14), bool], Tensor[(2304), int64], Tensor[(2304), int64], int8, int8) */
}

def @func_11547(%var_11546: Tensor[(2730), int8]) -> (Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), float64], Tensor[(1040, 12), uint8], Tensor[(7, 12, 14), bool], Tensor[(2304), int64], Tensor[(2730), int8], Tensor[(15, 9, 10), uint64], uint64, Tensor[(1350), uint64]) {
  %651 = fn (%var_11532: Tensor[(2730), int8]) -> (Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), float64], Tensor[(1040, 12), uint8], Tensor[(7, 12, 14), bool], Tensor[(2304), int64], Tensor[(2730), int8], Tensor[(15, 9, 10), uint64], uint64, Tensor[(1350), uint64]) {
    %627 = @func_10708() /* ty=(Tensor[(7, 12, 14), bool],) */;
    %628 = @func_7914() /* ty=(Tensor[(3, 6, 1), float32], Tensor[(16, 9, 16), bool], int64, Tensor[(2304), int64], Tensor[(7, 12, 14), float64]) */;
    %629 = @func_9400() /* ty=Tensor[(1040, ?), int32] */;
    %630 = cast(%629, dtype="float32") /* ty=Tensor[(1040, ?), float32] */;
    %631 = asinh(%630) /* ty=Tensor[(1040, ?), float32] */;
    %632 = cast(%631, dtype="uint8") /* ty=Tensor[(1040, ?), uint8] */;
    %633 = cast(meta[relay.Constant][27] /* ty=Tensor[(1040, 12), float32] */, dtype="uint8") /* ty=Tensor[(1040, 12), uint8] */;
    %634 = cast(meta[relay.Constant][28] /* ty=Tensor[(2304), int64] */, dtype="int64") /* ty=Tensor[(2304), int64] */;
    %635 = cast(%var_11532, dtype="int8") /* ty=Tensor[(2730), int8] */;
    %636 = cast(%var_11532, dtype="int8") /* ty=Tensor[(2730), int8] */;
    %637 = reshape(%634, newshape=[2304]) /* ty=Tensor[(2304), int64] */;
    %638 = reshape(%635, newshape=[1, 2730]) /* ty=Tensor[(1, 2730), int8] */;
    %639 = reshape(%636, newshape=[1, 2730]) /* ty=Tensor[(1, 2730), int8] */;
    %640 = @func_8993(%637, %638, %639) /* ty=(Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), float32], Tensor[(2304), int64], Tensor[(7, 12, 14), bool], Tensor[(?, 2730), float32]) */;
    %641 = cast(meta[relay.Constant][29] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %642 = cast(meta[relay.Constant][30] /* ty=Tensor[(1350), uint64] */, dtype="uint64") /* ty=Tensor[(1350), uint64] */;
    %643 = reshape(%641, newshape=[]) /* ty=uint64 */;
    %644 = reshape(%642, newshape=[15, 9, 10]) /* ty=Tensor[(15, 9, 10), uint64] */;
    %645 = @func_2904(%643, %644) /* ty=(Tensor[(15, 9, 10), uint64],) */;
    %646 = %627.0;
    %647 = %628.4;
    %648 = left_shift(%632, %633) /* ty=Tensor[(1040, 12), uint8] */;
    %649 = %640.0;
    %650 = %645.0;
    (%646, %647, %648, %649, meta[relay.Constant][28] /* ty=Tensor[(2304), int64] */, %var_11532, %650, meta[relay.Constant][29] /* ty=uint64 */, meta[relay.Constant][30] /* ty=Tensor[(1350), uint64] */)
  };
  %651(%var_11546) /* ty=(Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), float64], Tensor[(1040, 12), uint8], Tensor[(7, 12, 14), bool], Tensor[(2304), int64], Tensor[(2730), int8], Tensor[(15, 9, 10), uint64], uint64, Tensor[(1350), uint64]) */
}

def @func_8049(%var_8048: Tensor[(7, 12, 14), bool]) -> (Tensor[(7, 12, 14), bool], int64, Tensor[(7, 12, 14), int32], Tensor[(2304), int64], Tensor[(16, 9, 16), bool]) {
  %668 = fn (%var_8013: Tensor[(7, 12, 14), bool]) -> (Tensor[(7, 12, 14), bool], int64, Tensor[(7, 12, 14), int32], Tensor[(2304), int64], Tensor[(16, 9, 16), bool]) {
    %652 = @func_7554() /* ty=Tensor[(7, 12, 14), bool] */;
    %653 = cast(%var_8013, dtype="bool") /* ty=Tensor[(7, 12, 14), bool] */;
    %654 = shape_of(%652, dtype="int32") /* ty=Tensor[(3), int32] */;
    %655 = cast(%652, dtype="bool") /* ty=Tensor[(7, 12, 14), bool] */;
    %656 = dyn.reshape(%653, %654, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %657 = @func_7914() /* ty=(Tensor[(3, 6, 1), float32], Tensor[(16, 9, 16), bool], int64, Tensor[(2304), int64], Tensor[(7, 12, 14), float64]) */;
    %658 = cast(meta[relay.Constant][31] /* ty=Tensor[(2304), int64] */, dtype="int64") /* ty=Tensor[(2304), int64] */;
    %659 = reshape(%658, newshape=[8, 288]) /* ty=Tensor[(8, 288), int64] */;
    %660 = @func_7690(%659) /* ty=(Tensor[(12, 15, 5), float32], Tensor[(7, 12, 14), int32], Tensor[(16, 9, 16), bool], int64, Tensor[(8, 288), int64], Tensor[(15, 11, 5), uint8], Tensor[(825), uint8]) */;
    %661 = cast(meta[relay.Constant][31] /* ty=Tensor[(2304), int64] */, dtype="int64") /* ty=Tensor[(2304), int64] */;
    %662 = reshape(%661, newshape=[8, 288]) /* ty=Tensor[(8, 288), int64] */;
    %663 = @func_7690(%662) /* ty=(Tensor[(12, 15, 5), float32], Tensor[(7, 12, 14), int32], Tensor[(16, 9, 16), bool], int64, Tensor[(8, 288), int64], Tensor[(15, 11, 5), uint8], Tensor[(825), uint8]) */;
    %664 = equal(%655, %656) /* ty=Tensor[(7, 12, 14), bool] */;
    %665 = %657.2;
    %666 = %660.1;
    %667 = %663.2;
    (%664, %665, %666, meta[relay.Constant][31] /* ty=Tensor[(2304), int64] */, %667)
  };
  %668(%var_8048) /* ty=(Tensor[(7, 12, 14), bool], int64, Tensor[(7, 12, 14), int32], Tensor[(2304), int64], Tensor[(16, 9, 16), bool]) */
}

def @func_9266() -> (Tensor[(900), float32],) {
  %671 = fn () -> (Tensor[(900), float32],) {
    %669 = @func_7938() /* ty=(Tensor[(900), float32],) */;
    %670 = %669.0;
    (%670,)
  };
  %671() /* ty=(Tensor[(900), float32],) */
}

def @func_5536(%var_5534: Tensor[(10, 5, 8), float32], %var_5535: Tensor[(10, 5, 8), float32]) -> (Tensor[(10, 5, 8), bool],) {
  @func_5532(%var_5534, %var_5535) /* ty=(Tensor[(10, 5, 8), bool],) */
}

def @func_5570(%var_5567: Tensor[(7, 3, 4), float32], %var_5568: Tensor[(7, 3, 4), float32], %var_5569: Tensor[(1350), uint64]) -> (Tensor[(7, 3, 4), float32], Tensor[(15, 9, 10), uint64], uint64, Tensor[(1350), uint64], Tensor[(15, 9, 10), uint64]) {
  %691 = fn (%var_5538: Tensor[(7, 3, 4), float32], %var_5546: Tensor[(7, 3, 4), float32], %var_5555: Tensor[(1350), uint64]) -> (Tensor[(7, 3, 4), float32], Tensor[(15, 9, 10), uint64], uint64, Tensor[(1350), uint64], Tensor[(15, 9, 10), uint64]) {
    %672 = cast(%var_5538, dtype="float32") /* ty=Tensor[(7, 3, 4), float32] */;
    %673 = acosh(%672) /* ty=Tensor[(7, 3, 4), float32] */;
    %674 = cast(%var_5546, dtype="float32") /* ty=Tensor[(7, 3, 4), float32] */;
    %675 = shape_of(%673, dtype="int32") /* ty=Tensor[(3), int32] */;
    %676 = cast(%673, dtype="float32") /* ty=Tensor[(7, 3, 4), float32] */;
    %677 = dyn.reshape(%674, %675, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %678 = cast(meta[relay.Constant][32] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %679 = cast(%var_5555, dtype="uint64") /* ty=Tensor[(1350), uint64] */;
    %680 = reshape(%678, newshape=[]) /* ty=uint64 */;
    %681 = reshape(%679, newshape=[15, 9, 10]) /* ty=Tensor[(15, 9, 10), uint64] */;
    %682 = @func_2904(%680, %681) /* ty=(Tensor[(15, 9, 10), uint64],) */;
    %683 = cast(meta[relay.Constant][32] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %684 = cast(%var_5555, dtype="uint64") /* ty=Tensor[(1350), uint64] */;
    %685 = reshape(%683, newshape=[]) /* ty=uint64 */;
    %686 = reshape(%684, newshape=[15, 9, 10]) /* ty=Tensor[(15, 9, 10), uint64] */;
    %687 = @func_2904(%685, %686) /* ty=(Tensor[(15, 9, 10), uint64],) */;
    %688 = divide(%676, %677) /* ty=Tensor[(7, 3, 4), float32] */;
    %689 = %682.0;
    %690 = %687.0;
    (%688, %689, meta[relay.Constant][32] /* ty=uint64 */, %var_5555, %690)
  };
  %691(%var_5567, %var_5568, %var_5569) /* ty=(Tensor[(7, 3, 4), float32], Tensor[(15, 9, 10), uint64], uint64, Tensor[(1350), uint64], Tensor[(15, 9, 10), uint64]) */
}

def @func_8961() -> Tensor[(14, 7, 7), float64] {
  @func_8959() /* ty=Tensor[(14, 7, 7), float64] */
}

def @func_8814() -> (Tensor[(16, 9, 16), bool], Tensor[(14, 14, 13), float32], Tensor[(1440), int32]) {
  %698 = fn () -> (Tensor[(16, 9, 16), bool], Tensor[(14, 14, 13), float32], Tensor[(1440), int32]) {
    %692 = @func_7914() /* ty=(Tensor[(3, 6, 1), float32], Tensor[(16, 9, 16), bool], int64, Tensor[(2304), int64], Tensor[(7, 12, 14), float64]) */;
    %693 = cast(meta[relay.Constant][33] /* ty=Tensor[(1440), int32] */, dtype="int32") /* ty=Tensor[(1440), int32] */;
    %694 = reshape(%693, newshape=[1440]) /* ty=Tensor[(1440), int32] */;
    %695 = @func_3682(%694) /* ty=(Tensor[(14, 14, 13), float32], Tensor[(9, 10, 16), bool], Tensor[(1440), int32], Tensor[(14, 14, 13), float64]) */;
    %696 = %692.1;
    %697 = %695.0;
    (%696, %697, meta[relay.Constant][33] /* ty=Tensor[(1440), int32] */)
  };
  %698() /* ty=(Tensor[(16, 9, 16), bool], Tensor[(14, 14, 13), float32], Tensor[(1440), int32]) */
}

def @func_10508(%var_10506: Tensor[(2304), int64]) -> (Tensor[(1, 12, 2), float32], Tensor[(7, 12, 14), bool], Tensor[(10, 4, 13), float64], Tensor[(520), float32], Tensor[(7, 10, 16), float32], Tensor[(2304), int64]) {
  @func_10505(%var_10506) /* ty=(Tensor[(1, 12, 2), float32], Tensor[(7, 12, 14), bool], Tensor[(10, 4, 13), float64], Tensor[(520), float32], Tensor[(7, 10, 16), float32], Tensor[(2304), int64]) */
}

def @func_9620() -> (Tensor[(7, 12, 14), float32], Tensor[(10, 5, 8), bool], Tensor[(1, 400), float32]) {
  %706 = fn () -> (Tensor[(7, 12, 14), float32], Tensor[(10, 5, 8), bool], Tensor[(1, 400), float32]) {
    %699 = cast(meta[relay.Constant][34] /* ty=Tensor[(1, 400), float32] */, dtype="float32") /* ty=Tensor[(1, 400), float32] */;
    %700 = cast(meta[relay.Constant][34] /* ty=Tensor[(1, 400), float32] */, dtype="float32") /* ty=Tensor[(1, 400), float32] */;
    %701 = reshape(%699, newshape=[10, 5, 8]) /* ty=Tensor[(10, 5, 8), float32] */;
    %702 = reshape(%700, newshape=[10, 5, 8]) /* ty=Tensor[(10, 5, 8), float32] */;
    %703 = @func_5532(%701, %702) /* ty=(Tensor[(10, 5, 8), bool],) */;
    %704 = @func_8436() /* ty=Tensor[(7, 12, 14), float32] */;
    %705 = %703.0;
    (%704, %705, meta[relay.Constant][34] /* ty=Tensor[(1, 400), float32] */)
  };
  %706() /* ty=(Tensor[(7, 12, 14), float32], Tensor[(10, 5, 8), bool], Tensor[(1, 400), float32]) */
}

def @func_9346() -> (Tensor[(7, 12, 14), float32],) {
  %709 = fn () -> (Tensor[(7, 12, 14), float32],) {
    %707 = @func_7101() /* ty=(Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), float32]) */;
    %708 = %707.1;
    (%708,)
  };
  %709() /* ty=(Tensor[(7, 12, 14), float32],) */
}

def @func_11158() -> Tensor[(3, 10, 3), float32] {
  @func_11156() /* ty=Tensor[(3, 10, 3), float32] */
}

def @func_12150() -> (Tensor[(900), float32], Tensor[(2304), float32], Tensor[(15, 11, 5), uint8], Tensor[(15, 11, 5), float32]) {
  @func_12148() /* ty=(Tensor[(900), float32], Tensor[(2304), float32], Tensor[(15, 11, 5), uint8], Tensor[(15, 11, 5), float32]) */
}

def @func_11911(%var_11909: Tensor[(1040, 1), uint32], %var_11910: int32) -> (Tensor[(1040, ?), float32], Tensor[(2304), int64], int32) {
  %721 = fn (%var_11896: Tensor[(1040, 1), uint32], %var_11902: int32) -> (Tensor[(1040, ?), float32], Tensor[(2304), int64], int32) {
    %710 = @func_11888() /* ty=(Tensor[(1176), bool], Tensor[(1040, ?), uint32], Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), bool]) */;
    %711 = %710.1;
    %712 = cast(%var_11896, dtype="float32") /* ty=Tensor[(1040, 1), float32] */;
    %713 = shape_of(%711, dtype="int32") /* ty=Tensor[(2), int32] */;
    %714 = cast(%711, dtype="float32") /* ty=Tensor[(1040, ?), float32] */;
    %715 = dyn.reshape(%712, %713, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %716 = cast(%var_11902, dtype="int32") /* ty=int32 */;
    %717 = reshape(%716, newshape=[]) /* ty=int32 */;
    %718 = @func_11220(%717) /* ty=(Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), float32], Tensor[(1400), bool], Tensor[(7, 12, 14), int32], Tensor[(2304), int64], Tensor[(6, 12, 14), float32], Tensor[(7, 12, 14), bool]) */;
    %719 = power(%714, %715) /* ty=Tensor[(1040, ?), float32] */;
    %720 = %718.4;
    (%719, %720, %var_11902)
  };
  %721(%var_11909, %var_11910) /* ty=(Tensor[(1040, ?), float32], Tensor[(2304), int64], int32) */
}

def @func_11624() -> (Tensor[(7, 12, 14), float32],) {
  %722 = @func_8896() /* ty=(Tensor[(7, 12, 14), float32],) */;
  %723 = %722.0;
  (%723,)
}

def @func_9789() -> (Tensor[(3, 6, 1), float32],) {
  @func_9787() /* ty=(Tensor[(3, 6, 1), float32],) */
}

def @func_728(%var_725: Tensor[(16, 11, 9), float64], %var_726: int64, %var_727: Tensor[(2304), int64]) -> (Tensor[(16, 11, 9), float64], Tensor[(16, 9, 16), bool], int64, Tensor[(2304), int64], Tensor[(16, 9, 16), bool]) {
  %736 = fn (%var_675: Tensor[(16, 11, 9), float64], %var_691: int64, %var_692: Tensor[(2304), int64]) -> (Tensor[(16, 11, 9), float64], Tensor[(16, 9, 16), bool], int64, Tensor[(2304), int64], Tensor[(16, 9, 16), bool]) {
    %724 = cast(%var_675, dtype="float64") /* ty=Tensor[(16, 11, 9), float64] */;
    %725 = cast(%var_691, dtype="int64") /* ty=int64 */;
    %726 = cast(%var_692, dtype="int64") /* ty=Tensor[(2304), int64] */;
    %727 = reshape(%725, newshape=[]) /* ty=int64 */;
    %728 = reshape(%726, newshape=[16, 9, 16]) /* ty=Tensor[(16, 9, 16), int64] */;
    %729 = cast(%var_691, dtype="int64") /* ty=int64 */;
    %730 = @func_498(%727, %728) /* ty=Tensor[(16, 9, 16), bool] */;
    %731 = cast(%730, dtype="int64") /* ty=Tensor[(16, 9, 16), int64] */;
    %732 = reshape(%729, newshape=[]) /* ty=int64 */;
    %733 = reshape(%731, newshape=[16, 9, 16]) /* ty=Tensor[(16, 9, 16), int64] */;
    %734 = exp(%724) /* ty=Tensor[(16, 11, 9), float64] */;
    %735 = @func_498(%732, %733) /* ty=Tensor[(16, 9, 16), bool] */;
    (%734, %730, %var_691, %var_692, %735)
  };
  %736(%var_725, %var_726, %var_727) /* ty=(Tensor[(16, 11, 9), float64], Tensor[(16, 9, 16), bool], int64, Tensor[(2304), int64], Tensor[(16, 9, 16), bool]) */
}

def @func_10396(%var_10395: Tensor[(825), uint8]) -> (Tensor[(7, 12, 14), float32], Tensor[(15, 11, 5), uint8], Tensor[(825), uint8]) {
  %745 = fn (%var_10392: Tensor[(825), uint8]) -> (Tensor[(7, 12, 14), float32], Tensor[(15, 11, 5), uint8], Tensor[(825), uint8]) {
    %737 = @func_8896() /* ty=(Tensor[(7, 12, 14), float32],) */;
    %738 = cast(%var_10392, dtype="uint8") /* ty=Tensor[(825), uint8] */;
    %739 = cast(%var_10392, dtype="uint8") /* ty=Tensor[(825), uint8] */;
    %740 = reshape(%738, newshape=[15, 11, 5]) /* ty=Tensor[(15, 11, 5), uint8] */;
    %741 = reshape(%739, newshape=[15, 11, 5]) /* ty=Tensor[(15, 11, 5), uint8] */;
    %742 = @func_4582(%740, %741) /* ty=(Tensor[(15, 11, 5), uint8],) */;
    %743 = %737.0;
    %744 = %742.0;
    (%743, %744, %var_10392)
  };
  %745(%var_10395) /* ty=(Tensor[(7, 12, 14), float32], Tensor[(15, 11, 5), uint8], Tensor[(825), uint8]) */
}

def @func_7324() -> (Tensor[(7, 12, 14), bool],) {
  %748 = fn () -> (Tensor[(7, 12, 14), bool],) {
    %746 = @func_7101() /* ty=(Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), float32]) */;
    %747 = %746.0;
    (%747,)
  };
  %748() /* ty=(Tensor[(7, 12, 14), bool],) */
}

def @func_8329(%var_8327: Tensor[(2304), int64]) -> (int64, Tensor[(2304), int64], Tensor[(7, 10, 16), float32]) {
  @func_8326(%var_8327) /* ty=(int64, Tensor[(2304), int64], Tensor[(7, 10, 16), float32]) */
}

def @func_11222(%var_11221: int32) -> (Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), float32], Tensor[(1400), bool], Tensor[(7, 12, 14), int32], Tensor[(2304), int64], Tensor[(6, 12, 14), float32], Tensor[(7, 12, 14), bool]) {
  %774 = fn (%var_11180: int32) -> (Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), float32], Tensor[(1400), bool], Tensor[(7, 12, 14), int32], Tensor[(2304), int64], Tensor[(6, 12, 14), float32], Tensor[(7, 12, 14), bool]) {
    %749 = @func_9109() /* ty=(Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), float32]) */;
    %750 = cast(%var_11180, dtype="int32") /* ty=int32 */;
    %751 = cast(meta[relay.Constant][35] /* ty=Tensor[(1400), int32] */, dtype="int32") /* ty=Tensor[(1400), int32] */;
    %752 = reshape(%750, newshape=[]) /* ty=int32 */;
    %753 = reshape(%751, newshape=[1400]) /* ty=Tensor[(1400), int32] */;
    %754 = @func_10439(%752, %753) /* ty=(Tensor[(3, 6, 1), float32], Tensor[(1400), int32], Tensor[(7, 12, 14), float32], Tensor[(10, 10, 14), int32], Tensor[(900), float32], Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), bool]) */;
    %755 = cast(meta[relay.Constant][35] /* ty=Tensor[(1400), int32] */, dtype="bool") /* ty=Tensor[(1400), bool] */;
    %756 = cast(%var_11180, dtype="bool") /* ty=bool */;
    %757 = %749.0;
    %758 = cast(%757, dtype="bool") /* ty=Tensor[(7, 12, 14), bool] */;
    %759 = cast(%757, dtype="float64") /* ty=Tensor[(7, 12, 14), float64] */;
    %760 = cast(meta[relay.Constant][36] /* ty=Tensor[(2304), int64] */, dtype="int64") /* ty=Tensor[(2304), int64] */;
    %761 = reshape(%758, newshape=[7, 12, 14]) /* ty=Tensor[(7, 12, 14), bool] */;
    %762 = reshape(%759, newshape=[7, 12, 14]) /* ty=Tensor[(7, 12, 14), float64] */;
    %763 = reshape(%760, newshape=[2304]) /* ty=Tensor[(2304), int64] */;
    %764 = @func_10541(%761, %762, %763) /* ty=(Tensor[(7, 12, 14), int32], Tensor[(2304), int64], Tensor[(2304), int64]) */;
    %765 = cast(meta[relay.Constant][36] /* ty=Tensor[(2304), int64] */, dtype="int64") /* ty=Tensor[(2304), int64] */;
    %766 = reshape(%765, newshape=[2304]) /* ty=Tensor[(2304), int64] */;
    %767 = @func_5843(%766) /* ty=(Tensor[(6, 12, 14), float32], Tensor[(16, 11, 9), float64], Tensor[(792, 2), float64], int64, Tensor[(2304), int64]) */;
    %768 = @func_10014() /* ty=(Tensor[(3, 6, 14), int8], Tensor[(7, 12, 14), bool]) */;
    %769 = %754.2;
    %770 = not_equal(%755, %756) /* ty=Tensor[(1400), bool] */;
    %771 = %764.0;
    %772 = %767.0;
    %773 = %768.1;
    (%757, %769, %770, %771, meta[relay.Constant][36] /* ty=Tensor[(2304), int64] */, %772, %773)
  };
  %774(%var_11221) /* ty=(Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), float32], Tensor[(1400), bool], Tensor[(7, 12, 14), int32], Tensor[(2304), int64], Tensor[(6, 12, 14), float32], Tensor[(7, 12, 14), bool]) */
}

def @func_7747(%var_7744: Tensor[(1, 6, 11), float64]) -> Tensor[(1, 6, 11), float64] {
  %775 = cast(%var_7744, dtype="float64") /* ty=Tensor[(1, 6, 11), float64] */;
  asinh(%775) /* ty=Tensor[(1, 6, 11), float64] */
}

def @func_5845(%var_5844: Tensor[(2304), int64]) -> (Tensor[(6, 12, 14), float32], Tensor[(16, 11, 9), float64], Tensor[(792, 2), float64], int64, Tensor[(2304), int64]) {
  %786 = fn (%var_5839: Tensor[(2304), int64]) -> (Tensor[(6, 12, 14), float32], Tensor[(16, 11, 9), float64], Tensor[(792, 2), float64], int64, Tensor[(2304), int64]) {
    %776 = cast(meta[relay.Constant][37] /* ty=Tensor[(6, 12, 14), float32] */, dtype="float32") /* ty=Tensor[(6, 12, 14), float32] */;
    %777 = cast(meta[relay.Constant][38] /* ty=Tensor[(792, 2), float64] */, dtype="float64") /* ty=Tensor[(792, 2), float64] */;
    %778 = cast(-10 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %779 = cast(%var_5839, dtype="int64") /* ty=Tensor[(2304), int64] */;
    %780 = reshape(%777, newshape=[16, 11, 9]) /* ty=Tensor[(16, 11, 9), float64] */;
    %781 = reshape(%778, newshape=[]) /* ty=int64 */;
    %782 = reshape(%779, newshape=[2304]) /* ty=Tensor[(2304), int64] */;
    %783 = @func_724(%780, %781, %782) /* ty=(Tensor[(16, 11, 9), float64], Tensor[(16, 9, 16), bool], int64, Tensor[(2304), int64], Tensor[(16, 9, 16), bool]) */;
    %784 = log(%776) /* ty=Tensor[(6, 12, 14), float32] */;
    %785 = %783.0;
    (%784, %785, meta[relay.Constant][38] /* ty=Tensor[(792, 2), float64] */, -10 /* ty=int64 */, %var_5839)
  };
  %786(%var_5844) /* ty=(Tensor[(6, 12, 14), float32], Tensor[(16, 11, 9), float64], Tensor[(792, 2), float64], int64, Tensor[(2304), int64]) */
}

def @func_7779() -> (Tensor[(7, 12, 14), float64], Tensor[(1, 3, 6), float32], Tensor[(1040, 1), int64]) {
  %795 = fn () -> (Tensor[(7, 12, 14), float64], Tensor[(1, 3, 6), float32], Tensor[(1040, 1), int64]) {
    %787 = @func_7323() /* ty=(Tensor[(7, 12, 14), bool],) */;
    %788 = %787.0;
    %789 = cast(%788, dtype="float64") /* ty=Tensor[(7, 12, 14), float64] */;
    %790 = cast(meta[relay.Constant][39] /* ty=Tensor[(1040, 1), int64] */, dtype="int64") /* ty=Tensor[(1040, 1), int64] */;
    %791 = reshape(%790, newshape=[8, 10, 13]) /* ty=Tensor[(8, 10, 13), int64] */;
    %792 = @func_6212(%791) /* ty=(Tensor[(8, 10, 13), int64], Tensor[(1, 3, 6), float32]) */;
    %793 = asin(%789) /* ty=Tensor[(7, 12, 14), float64] */;
    %794 = %792.1;
    (%793, %794, meta[relay.Constant][39] /* ty=Tensor[(1040, 1), int64] */)
  };
  %795() /* ty=(Tensor[(7, 12, 14), float64], Tensor[(1, 3, 6), float32], Tensor[(1040, 1), int64]) */
}

def @func_11156() -> Tensor[(3, 10, 3), float32] {
  @func_8366() /* ty=Tensor[(3, 10, 3), float32] */
}

def @func_11250() -> (Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), float32]) {
  %796 = @func_9323() /* ty=(Tensor[(7, 12, 14), bool],) */;
  %797 = @func_11006() /* ty=(Tensor[(7, 12, 14), float32], Tensor[(7, 12, 14), float32]) */;
  %798 = %796.0;
  %799 = %797.1;
  (%798, %799)
}

def @func_7938() -> (Tensor[(900), float32],) {
  %800 = @func_7404() /* ty=(Tensor[(7, 12, 14), bool], Tensor[(12, 15, 5), float32], Tensor[(900), float32]) */;
  %801 = %800.2;
  (%801,)
}

def @func_10505(%var_10501: Tensor[(2304), int64]) -> (Tensor[(1, 12, 2), float32], Tensor[(7, 12, 14), bool], Tensor[(10, 4, 13), float64], Tensor[(520), float32], Tensor[(7, 10, 16), float32], Tensor[(2304), int64]) {
  %802 = cast(meta[relay.Constant][40] /* ty=Tensor[(1, 12, 2), float32] */, dtype="float32") /* ty=Tensor[(1, 12, 2), float32] */;
  %803 = @func_7323() /* ty=(Tensor[(7, 12, 14), bool],) */;
  %804 = cast(meta[relay.Constant][41] /* ty=Tensor[(520), float32] */, dtype="float32") /* ty=Tensor[(520), float32] */;
  %805 = cast(meta[relay.Constant][41] /* ty=Tensor[(520), float32] */, dtype="float32") /* ty=Tensor[(520), float32] */;
  %806 = reshape(%804, newshape=[10, 4, 13]) /* ty=Tensor[(10, 4, 13), float32] */;
  %807 = reshape(%805, newshape=[10, 4, 13]) /* ty=Tensor[(10, 4, 13), float32] */;
  %808 = @func_4035(%806, %807) /* ty=(Tensor[(10, 4, 13), float32], Tensor[(10, 4, 13), float64]) */;
  %809 = cast(%var_10501, dtype="int64") /* ty=Tensor[(2304), int64] */;
  %810 = reshape(%809, newshape=[2304]) /* ty=Tensor[(2304), int64] */;
  %811 = @func_8326(%810) /* ty=(int64, Tensor[(2304), int64], Tensor[(7, 10, 16), float32]) */;
  %812 = sinh(%802) /* ty=Tensor[(1, 12, 2), float32] */;
  %813 = %803.0;
  %814 = %808.1;
  %815 = %811.2;
  (%812, %813, %814, meta[relay.Constant][41] /* ty=Tensor[(520), float32] */, %815, %var_10501)
}

def @func_8683() -> (Tensor[(7, 12, 14), bool],) {
  %818 = fn () -> (Tensor[(7, 12, 14), bool],) {
    %816 = @func_7369() /* ty=(Tensor[(7, 12, 14), bool],) */;
    %817 = %816.0;
    (%817,)
  };
  %818() /* ty=(Tensor[(7, 12, 14), bool],) */
}

def @func_7251(%var_7250: Tensor[(7, 12, 14), bool]) -> (Tensor[(7, 12, 14), float32],) {
  %826 = fn (%var_7232: Tensor[(7, 12, 14), bool]) -> (Tensor[(7, 12, 14), float32],) {
    %819 = @func_7101() /* ty=(Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), float32]) */;
    %820 = %819.0;
    %821 = cast(%var_7232, dtype="float32") /* ty=Tensor[(7, 12, 14), float32] */;
    %822 = shape_of(%820, dtype="int32") /* ty=Tensor[(3), int32] */;
    %823 = cast(%820, dtype="float32") /* ty=Tensor[(7, 12, 14), float32] */;
    %824 = dyn.reshape(%821, %822, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %825 = power(%823, %824) /* ty=Tensor[(7, 12, 14), float32] */;
    (%825,)
  };
  %826(%var_7250) /* ty=(Tensor[(7, 12, 14), float32],) */
}

def @func_8436() -> Tensor[(7, 12, 14), float32] {
  %827 = @func_7724() /* ty=(Tensor[(7, 12, 14), float32], Tensor[(7, 12, 14), float32]) */;
  %827.1
}

def @func_9111() -> (Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), float32]) {
  @func_9109() /* ty=(Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), float32]) */
}

def @func_8635(%var_8634: Tensor[(2730), int8]) -> (Tensor[(7, 12, 14), bool], Tensor[(13, 14, 15), int32], Tensor[(2730), int8], Tensor[(7, 12, 14), bool], Tensor[(3, 6, 1), float32]) {
  %842 = fn (%var_8582: Tensor[(2730), int8]) -> (Tensor[(7, 12, 14), bool], Tensor[(13, 14, 15), int32], Tensor[(2730), int8], Tensor[(7, 12, 14), bool], Tensor[(3, 6, 1), float32]) {
    %828 = @func_7323() /* ty=(Tensor[(7, 12, 14), bool],) */;
    %829 = cast(%var_8582, dtype="int8") /* ty=Tensor[(2730), int8] */;
    %830 = cast(%var_8582, dtype="int8") /* ty=Tensor[(2730), int8] */;
    %831 = cast(%var_8582, dtype="bool") /* ty=Tensor[(2730), bool] */;
    %832 = reshape(%829, newshape=[13, 14, 15]) /* ty=Tensor[(13, 14, 15), int8] */;
    %833 = reshape(%830, newshape=[13, 14, 15]) /* ty=Tensor[(13, 14, 15), int8] */;
    %834 = reshape(%831, newshape=[13, 14, 15]) /* ty=Tensor[(13, 14, 15), bool] */;
    %835 = @func_6862(%832, %833, %834) /* ty=(Tensor[(13, 14, 15), int32],) */;
    %836 = @func_7369() /* ty=(Tensor[(7, 12, 14), bool],) */;
    %837 = @func_8297() /* ty=(Tensor[(3, 6, 14), int8], Tensor[(7, 12, 14), bool], Tensor[(3, 6, 1), float64], Tensor[(15, 11, 5), uint8], Tensor[(275, 3), uint8], Tensor[(7, 12, 14), float32], Tensor[(3, 6, 1), float32], Tensor[(13, 14, 15), int32], Tensor[(14, 195), int8], Tensor[(3, 6, 1), float32]) */;
    %838 = %828.0;
    %839 = %835.0;
    %840 = %836.0;
    %841 = %837.6;
    (%838, %839, %var_8582, %840, %841)
  };
  %842(%var_8634) /* ty=(Tensor[(7, 12, 14), bool], Tensor[(13, 14, 15), int32], Tensor[(2730), int8], Tensor[(7, 12, 14), bool], Tensor[(3, 6, 1), float32]) */
}

def @func_8366() -> Tensor[(3, 10, 3), float32] {
  %843 = cast(meta[relay.Constant][42] /* ty=Tensor[(3, 10, 3), float32] */, dtype="float32") /* ty=Tensor[(3, 10, 3), float32] */;
  asin(%843) /* ty=Tensor[(3, 10, 3), float32] */
}

def @func_7103() -> (Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), float32]) {
  @func_7101() /* ty=(Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), float32]) */
}

def @func_9205() -> (Tensor[(7, 12, 14), bool],) {
  %844 = @func_7554() /* ty=Tensor[(7, 12, 14), bool] */;
  (%844,)
}

def @func_2496(%var_2494: Tensor[(12, 15, 5), float32]) -> (Tensor[(12, 15, 5), float32],) {
  @func_2493(%var_2494) /* ty=(Tensor[(12, 15, 5), float32],) */
}

def @func_7916() -> (Tensor[(3, 6, 1), float32], Tensor[(16, 9, 16), bool], int64, Tensor[(2304), int64], Tensor[(7, 12, 14), float64]) {
  @func_7914() /* ty=(Tensor[(3, 6, 1), float32], Tensor[(16, 9, 16), bool], int64, Tensor[(2304), int64], Tensor[(7, 12, 14), float64]) */
}

def @func_3715(%var_3714: Tensor[(15, 8, 4), int8]) -> Tensor[(15, 8, 4), int8] {
  %849 = fn (%var_3704: Tensor[(15, 8, 4), int8]) -> Tensor[(15, 8, 4), int8] {
    %845 = cast(%var_3704, dtype="int8") /* ty=Tensor[(15, 8, 4), int8] */;
    %846 = shape_of(meta[relay.Constant][43] /* ty=Tensor[(15, 8, 4), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %847 = cast(meta[relay.Constant][43] /* ty=Tensor[(15, 8, 4), int8] */, dtype="int8") /* ty=Tensor[(15, 8, 4), int8] */;
    %848 = dyn.reshape(%845, %846, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    multiply(%847, %848) /* ty=Tensor[(15, 8, 4), int8] */
  };
  %849(%var_3714) /* ty=Tensor[(15, 8, 4), int8] */
}

def @func_7194(%var_7193: int8) -> (Tensor[(7, 12, 14), bool], Tensor[(1, 3, 6), float32], int8, Tensor[(1456), float64], Tensor[(35, 6), float64], Tensor[(1456), float64]) {
  %862 = fn (%var_7186: int8) -> (Tensor[(7, 12, 14), bool], Tensor[(1, 3, 6), float32], int8, Tensor[(1456), float64], Tensor[(35, 6), float64], Tensor[(1456), float64]) {
    %850 = @func_7101() /* ty=(Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), float32]) */;
    %851 = cast(%var_7186, dtype="int8") /* ty=int8 */;
    %852 = reshape(%851, newshape=[]) /* ty=int8 */;
    %853 = @func_3268(%852) /* ty=(Tensor[(1, 3, 6), float32],) */;
    %854 = cast(meta[relay.Constant][44] /* ty=Tensor[(35, 6), float64] */, dtype="float64") /* ty=Tensor[(35, 6), float64] */;
    %855 = cast(meta[relay.Constant][45] /* ty=Tensor[(1456), float64] */, dtype="float64") /* ty=Tensor[(1456), float64] */;
    %856 = reshape(%854, newshape=[5, 14, 3]) /* ty=Tensor[(5, 14, 3), float64] */;
    %857 = reshape(%855, newshape=[1456]) /* ty=Tensor[(1456), float64] */;
    %858 = @func_5610(%856, %857) /* ty=(Tensor[(5, 14, 3), float64], Tensor[(7, 13, 16), float64], Tensor[(1456), float64]) */;
    %859 = %850.0;
    %860 = %853.0;
    %861 = %858.2;
    (%859, %860, %var_7186, %861, meta[relay.Constant][44] /* ty=Tensor[(35, 6), float64] */, meta[relay.Constant][45] /* ty=Tensor[(1456), float64] */)
  };
  %862(%var_7193) /* ty=(Tensor[(7, 12, 14), bool], Tensor[(1, 3, 6), float32], int8, Tensor[(1456), float64], Tensor[(35, 6), float64], Tensor[(1456), float64]) */
}

def @func_10885(%var_10884: Tensor[(1, 16, 10), float32]) -> (Tensor[(1, 16, 10), float32],) {
  %865 = fn (%var_10879: Tensor[(1, 16, 10), float32]) -> (Tensor[(1, 16, 10), float32],) {
    %863 = cast(%var_10879, dtype="float32") /* ty=Tensor[(1, 16, 10), float32] */;
    %864 = atan(%863) /* ty=Tensor[(1, 16, 10), float32] */;
    (%864,)
  };
  %865(%var_10884) /* ty=(Tensor[(1, 16, 10), float32],) */
}

def @func_9787() -> (Tensor[(3, 6, 1), float32],) {
  %866 = @func_7590() /* ty=Tensor[(3, 6, 1), float32] */;
  %867 = cast(%866, dtype="float32") /* ty=Tensor[(3, 6, 1), float32] */;
  %868 = atanh(%867) /* ty=Tensor[(3, 6, 1), float32] */;
  (%868,)
}

def @func_11252() -> (Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), float32]) {
  @func_11250() /* ty=(Tensor[(7, 12, 14), bool], Tensor[(7, 12, 14), float32]) */
}

def @func_10872(%var_10867: Tensor[(14, 7, 7), float64]) -> Tensor[(14, 7, 7), int32] {
  %869 = @func_8358() /* ty=(Tensor[(14, 7, 7), float64],) */;
  %870 = %869.0;
  %871 = cast(%var_10867, dtype="int32") /* ty=Tensor[(14, 7, 7), int32] */;
  %872 = shape_of(%870, dtype="int32") /* ty=Tensor[(3), int32] */;
  %873 = cast(%870, dtype="int32") /* ty=Tensor[(14, 7, 7), int32] */;
  %874 = dyn.reshape(%871, %872, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  left_shift(%873, %874) /* ty=Tensor[(14, 7, 7), int32] */
}

def @func_11689() -> (Tensor[(7, 12, 14), float32],) {
  %877 = fn () -> (Tensor[(7, 12, 14), float32],) {
    %875 = @func_9345() /* ty=(Tensor[(7, 12, 14), float32],) */;
    %876 = %875.0;
    (%876,)
  };
  %877() /* ty=(Tensor[(7, 12, 14), float32],) */
}

def @func_8959() -> Tensor[(14, 7, 7), float64] {
  %878 = @func_8358() /* ty=(Tensor[(14, 7, 7), float64],) */;
  %878.0
}

def @func_10709() -> (Tensor[(7, 12, 14), bool],) {
  %881 = fn () -> (Tensor[(7, 12, 14), bool],) {
    %879 = @func_7404() /* ty=(Tensor[(7, 12, 14), bool], Tensor[(12, 15, 5), float32], Tensor[(900), float32]) */;
    %880 = %879.0;
    (%880,)
  };
  %881() /* ty=(Tensor[(7, 12, 14), bool],) */
}

def @func_10609(%var_10589: Tensor[(66), float64]) -> (Tensor[(7, 12, 14), bool], Tensor[(1, 6, 11), float64], Tensor[(66), float64]) {
  %882 = @func_8682() /* ty=(Tensor[(7, 12, 14), bool],) */;
  %883 = cast(%var_10589, dtype="float64") /* ty=Tensor[(66), float64] */;
  %884 = reshape(%883, newshape=[1, 6, 11]) /* ty=Tensor[(1, 6, 11), float64] */;
  %885 = %882.0;
  %886 = @func_7747(%884) /* ty=Tensor[(1, 6, 11), float64] */;
  (%885, %886, %var_10589)
}

def @func_10828(%var_10826: Tensor[(1040, 7), int32], %var_10827: Tensor[(1040, 7), int32]) -> (Tensor[(7, 12, 14), bool], Tensor[(1040, 7), bool], Tensor[(7, 12, 14), float32], Tensor[(825), uint8], Tensor[(900), float32], Tensor[(900), float32], Tensor[(13, 14, 15), float32], Tensor[(12, 7, 16), float64], Tensor[(1344), float64]) {
  %912 = fn (%var_10756: Tensor[(1040, 7), int32], %var_10767: Tensor[(1040, 7), int32]) -> (Tensor[(7, 12, 14), bool], Tensor[(1040, 7), bool], Tensor[(7, 12, 14), float32], Tensor[(825), uint8], Tensor[(900), float32], Tensor[(900), float32], Tensor[(13, 14, 15), float32], Tensor[(12, 7, 16), float64], Tensor[(1344), float64]) {
    %887 = @func_7369() /* ty=(Tensor[(7, 12, 14), bool],) */;
    %888 = @func_9400() /* ty=Tensor[(1040, ?), int32] */;
    %889 = cast(%888, dtype="int32") /* ty=Tensor[(1040, ?), int32] */;
    %890 = cast(%var_10756, dtype="int32") /* ty=Tensor[(1040, 7), int32] */;
    %891 = logical_xor(%889, %890) /* ty=Tensor[(1040, 7), int32] */;
    %892 = cast(%var_10767, dtype="bool") /* ty=Tensor[(1040, 7), bool] */;
    %893 = shape_of(%891, dtype="int32") /* ty=Tensor[(2), int32] */;
    %894 = cast(%891, dtype="bool") /* ty=Tensor[(1040, 7), bool] */;
    %895 = dyn.reshape(%892, %893, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %896 = cast(meta[relay.Constant][46] /* ty=Tensor[(825), uint8] */, dtype="uint8") /* ty=Tensor[(825), uint8] */;
    %897 = reshape(%896, newshape=[825]) /* ty=Tensor[(825), uint8] */;
    %898 = @func_10394(%897) /* ty=(Tensor[(7, 12, 14), float32], Tensor[(15, 11, 5), uint8], Tensor[(825), uint8]) */;
    %899 = @func_9265() /* ty=(Tensor[(900), float32],) */;
    %900 = @func_9162() /* ty=(Tensor[(900), float32],) */;
    %901 = @func_10659() /* ty=(Tensor[(13, 14, 15), float32],) */;
    %902 = cast(meta[relay.Constant][47] /* ty=Tensor[(1344), float64] */, dtype="float64") /* ty=Tensor[(1344), float64] */;
    %903 = reshape(%902, newshape=[12, 7, 16]) /* ty=Tensor[(12, 7, 16), float64] */;
    %904 = @func_1767(%903) /* ty=(Tensor[(12, 7, 16), float64],) */;
    %905 = %887.0;
    %906 = not_equal(%894, %895) /* ty=Tensor[(1040, 7), bool] */;
    %907 = %898.0;
    %908 = %899.0;
    %909 = %900.0;
    %910 = %901.0;
    %911 = %904.0;
    (%905, %906, %907, meta[relay.Constant][46] /* ty=Tensor[(825), uint8] */, %908, %909, %910, %911, meta[relay.Constant][47] /* ty=Tensor[(1344), float64] */)
  };
  %912(%var_10826, %var_10827) /* ty=(Tensor[(7, 12, 14), bool], Tensor[(1040, 7), bool], Tensor[(7, 12, 14), float32], Tensor[(825), uint8], Tensor[(900), float32], Tensor[(900), float32], Tensor[(13, 14, 15), float32], Tensor[(12, 7, 16), float64], Tensor[(1344), float64]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

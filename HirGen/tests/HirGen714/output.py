import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_492 = relay.var("var_492", dtype = "int64", shape = ())#candidate|492|()|var|int64
var_493 = relay.var("var_493", dtype = "int64", shape = (16, 9, 16))#candidate|493|(16, 9, 16)|var|int64
bop_494 = relay.not_equal(var_492.astype('bool'), var_493.astype('bool')) # shape=(16, 9, 16)
output = bop_494
output2 = bop_494
func_498 = relay.Function([var_492,var_493,], output)
mod['func_498'] = func_498
mod = relay.transform.InferType()(mod)
var_499 = relay.var("var_499", dtype = "int64", shape = ())#candidate|499|()|var|int64
var_500 = relay.var("var_500", dtype = "int64", shape = (16, 9, 16))#candidate|500|(16, 9, 16)|var|int64
output = func_498(var_499,var_500,)
func_501 = relay.Function([var_499,var_500,], output)
mutated_mod['func_501'] = func_501
mutated_mod = relay.transform.InferType()(mutated_mod)
var_675 = relay.var("var_675", dtype = "float64", shape = (16, 11, 9))#candidate|675|(16, 11, 9)|var|float64
uop_676 = relay.exp(var_675.astype('float64')) # shape=(16, 11, 9)
func_498_call = mod.get_global_var('func_498')
func_501_call = mutated_mod.get_global_var('func_501')
var_691 = relay.var("var_691", dtype = "int64", shape = ())#candidate|691|()|var|int64
var_692 = relay.var("var_692", dtype = "int64", shape = (2304,))#candidate|692|(2304,)|var|int64
call_690 = func_498_call(relay.reshape(var_691.astype('int64'), []), relay.reshape(var_692.astype('int64'), [16, 9, 16]), )
call_693 = func_498_call(relay.reshape(var_691.astype('int64'), []), relay.reshape(var_692.astype('int64'), [16, 9, 16]), )
func_498_call = mod.get_global_var('func_498')
func_501_call = mutated_mod.get_global_var('func_501')
call_710 = func_498_call(relay.reshape(var_691.astype('int64'), []), relay.reshape(call_690.astype('int64'), [16, 9, 16]), )
call_711 = func_498_call(relay.reshape(var_691.astype('int64'), []), relay.reshape(call_690.astype('int64'), [16, 9, 16]), )
output = relay.Tuple([uop_676,call_690,var_691,var_692,call_710,])
output2 = relay.Tuple([uop_676,call_693,var_691,var_692,call_711,])
func_724 = relay.Function([var_675,var_691,var_692,], output)
mod['func_724'] = func_724
mod = relay.transform.InferType()(mod)
var_725 = relay.var("var_725", dtype = "float64", shape = (16, 11, 9))#candidate|725|(16, 11, 9)|var|float64
var_726 = relay.var("var_726", dtype = "int64", shape = ())#candidate|726|()|var|int64
var_727 = relay.var("var_727", dtype = "int64", shape = (2304,))#candidate|727|(2304,)|var|int64
output = func_724(var_725,var_726,var_727,)
func_728 = relay.Function([var_725,var_726,var_727,], output)
mutated_mod['func_728'] = func_728
mutated_mod = relay.transform.InferType()(mutated_mod)
var_804 = relay.var("var_804", dtype = "float32", shape = (9, 4, 13))#candidate|804|(9, 4, 13)|var|float32
uop_805 = relay.cosh(var_804.astype('float32')) # shape=(9, 4, 13)
func_498_call = mod.get_global_var('func_498')
func_501_call = mutated_mod.get_global_var('func_501')
var_812 = relay.var("var_812", dtype = "int64", shape = ())#candidate|812|()|var|int64
const_813 = relay.const([-9,8,-7,1,-6,4,-9,8,-8,4,-9,3,7,6,-6,-3,-7,-9,1,-2,6,-8,8,-7,-2,-4,-9,1,-4,-1,7,7,6,-8,3,-5,-5,4,-6,2,9,3,4,-5,10,-1,1,-2,-2,-3,10,6,10,1,-8,-5,10,6,-1,-4,-6,-7,3,-3,10,1,-3,-5,6,8,-10,2,1,6,10,3,3,4,-9,-10,-2,-9,10,9,-2,2,2,-2,4,4,-5,2,7,5,-3,-7,8,4,-1,-5,-2,5,-1,-6,2,-10,5,7,10,-9,7,-1,-1,-6,-10,5,6,-7,-6,5,-2,-7,9,-10,5,3,3,-10,1,-7,5,-4,-4,1,3,-8,-10,-4,10,-9,1,-9,-8,-1,5,1,-1,-4,-5,5,-10,2,9,-9,10,-5,2,7,5,8,-7,-3,-3,3,1,-7,-10,-10,-7,-1,-9,-9,-2,-10,6,8,-8,-2,-5,10,-3,-6,-7,6,-5,10,1,4,8,10,-3,-9,-9,-1,-6,-2,-9,-3,-7,10,-4,-6,2,10,-4,-5,-1,8,-5,-4,-2,-1,-7,7,1,-7,-8,2,5,-9,4,-7,-8,5,-6,4,7,10,10,-1,-3,-6,1,10,-1,8,2,-2,-2,4,6,-7,5,-1,3,6,10,8,3,9,8,1,5,-10,10,5,6,-3,7,6,5,9,-5,9,4,1,-7,2,6,9,8,2,-3,-4,8,-4,3,10,-10,-3,-9,8,7,-8,-4,8,8,-7,-4,5,3,9,-1,-2,-8,-5,9,2,3,-10,-6,10,-8,-7,8,-6,-9,6,4,3,3,8,1,-2,10,1,8,-2,-8,1,-10,8,-4,1,2,-1,-2,-9,-10,7,-10,-8,2,9,8,10,8,7,-10,-1,2,7,10,-7,6,-2,6,9,9,-10,5,-3,7,7,10,-2,-10,6,-7,-4,-1,-1,6,7,-5,10,-6,-5,5,-2,9,-7,3,3,-8,-2,3,8,-3,-3,-1,-8,-8,-1,4,7,-7,6,-8,1,6,-7,-9,8,-1,10,-4,10,-1,6,-6,3,-5,-5,-10,9,4,-6,-2,-4,-5,-4,3,2,4,-1,9,6,-5,-9,9,-10,5,-5,10,1,-6,-4,-8,2,4,-4,9,1,1,8,7,3,6,10,-1,-9,7,-5,2,8,-3,1,2,-6,9,3,4,9,-5,-3,-1,3,-8,2,6,-5,2,-10,5,5,2,9,5,-3,8,-9,10,6,10,7,-6,4,-8,2,4,7,-7,-1,6,-5,2,3,7,10,-7,-5,1,1,-8,1,10,8,-6,-2,-5,-7,2,-6,9,-10,5,9,7,-3,5,-6,4,4,5,10,-2,4,7,7,-8,-4,4,-8,5,7,9,-7,-1,3,-7,-5,-10,-5,1,-4,-10,-3,-4,-7,-6,9,10,-8,-6,-7,2,2,-1,2,10,2,-6,4,7,9,6,7,-5,-8,-4,6,9,1,-6,1,-10,-3,7,6,-7,-7,2,-10,1,-10,3,4,-5,-1,7,-4,-6,-3,4,-8,2,-5,-1,3,-1,8,10,-5,4,-5,-1,-10,-6,1,-10,-1,6,1,9,1,9,-5,9,4,-7,6,8,4,-9,-1,5,5,10,-1,10,-10,-1,-7,-6,-6,10,2,10,-1,2,-9,-6,10,-10,4,5,6,8,6,4,6,6,3,5,-6,-8,3,9,1,-6,-7,10,7,-9,-1,-5,-1,6,-8,10,7,8,3,5,9,10,2,-1,7,2,-5,6,9,-9,-4,-10,6,-2,7,4,1,-4,-5,4,7,1,-4,-7,10,1,-5,-6,-10,2,6,-5,-2,-1,-6,-9,2,4,-9,-8,-6,-5,-9,2,9,-9,9,-3,-3,-8,-1,1,-8,-9,5,-6,-6,4,1,-7,1,7,-9,3,-7,10,-9,-9,-5,4,6,3,-2,-9,4,-5,-3,-4,-3,4,-7,7,-3,-3,-7,-10,-8,6,1,-4,3,-9,2,-1,-10,6,-9,-3,1,3,-2,10,-8,-9,2,-6,-5,-3,8,-5,-9,6,-3,-2,-5,-2,-10,7,7,-8,3,5,-1,-6,-4,-7,-1,-3,-4,-1,-4,5,5,3,-2,-2,9,3,-8,8,10,-7,10,5,8,2,7,7,1,-6,5,8,-5,-1,-9,-7,4,-10,-7,-8,-9,9,8,-9,-8,-4,3,6,-4,-3,7,2,7,8,6,-10,-6,2,7,-5,-6,-9,-2,7,5,6,1,5,-1,3,-1,-2,-4,-3,8,5,6,3,10,-3,-1,8,9,3,8,-7,8,6,-4,10,-6,5,10,1,9,6,-2,-5,10,3,3,7,-9,-3,3,-4,10,-4,-9,-4,-10,2,5,-5,5,-4,-7,-2,-5,9,8,-8,5,1,-8,4,-5,2,-4,-6,-4,-9,-1,-7,-4,6,-2,-2,-8,-2,-10,-6,3,-7,-4,7,-3,-1,5,-3,-4,1,-3,4,-8,10,3,2,-6,4,-2,-10,-5,-1,8,-9,3,10,-5,-9,-1,10,7,-1,-1,-2,5,-9,-4,-1,6,-9,-10,-5,5,5,-3,1,6,-2,6,1,-8,2,-3,-6,-2,10,-4,-6,-10,-5,7,2,10,10,8,7,-4,-7,3,7,-8,5,1,3,2,2,-5,-3,-10,1,6,3,-9,6,6,5,-8,8,-2,9,-8,-5,9,8,-1,-7,-6,-7,-5,-7,4,-6,4,2,-4,4,-3,-7,-5,2,-3,-4,-3,6,-4,8,-6,-2,10,-10,6,8,-1,2,9,5,-4,1,-10,5,1,-1,2,1,9,6,-5,5,-7,-3,2,8,-7,-5,-7,10,-8,7,6,1,9,-9,10,-10,2,5,1,1,-2,6,1,-7,9,-10,-2,-10,-8,3,4,7,7,1,-5,8,1,7,10,-2,6,5,2,-8,6,-8,-5,8,9,1,-2,-1,3,-8,10,1,3,-5,-1,7,4,-10,2,-10,7,-5,10,-3,-4,5,2,-1,4,-2,-6,-2,6,-9,10,-1,1,-8,-2,4,-4,1,5,-3,-7,-3,3,3,-9,-8,-4,-6,5,-7,-6,6,-10,-6,-8,-3,3,7,-3,-5,-5,-1,-2,-3,2,-7,-1,-8,9,-5,4,-9,3,-3,8,-7,1,-9,5,-3,4,-5,2,-5,9,7,5,2,-3,6,-3,2,3,10,-7,-6,2,5,7,6,-7,1,10,-4,8,-4,-3,8,10,-3,-2,10,-10,-9,-5,5,7,-8,9,10,1,2,-10,9,10,-9,-3,-8,3,4,-2,2,4,6,1,5,-10,6,-9,10,-1,4,7,10,1,10,10,-5,-3,10,-9,-5,-1,-8,10,-2,6,-4,9,-7,-8,4,-10,-4,1,8,-8,8,-6,10,4,-6,7,5,5,-6,8,1,-8,2,1,-9,3,-8,4,4,9,8,9,4,3,7,8,1,4,-5,-3,2,4,6,10,-5,9,7,-7,4,-8,3,-8,2,-8,-7,-3,-9,-10,6,7,1,7,6,8,7,-10,2,5,-9,4,7,4,-6,-3,6,-4,-5,-4,6,-2,8,3,9,-5,-4,6,-6,-7,9,-5,-7,-2,9,-5,6,5,-7,-3,8,-9,-6,-2,-7,5,9,1,-8,-10,6,1,1,5,6,-6,-5,5,-10,-4,-7,3,10,2,4,2,-5,2,-8,-4,5,9,7,-1,-10,-5,5,-3,-3,-10,4,9,-4,-7,-9,9,3,4,-1,-6,-2,-9,1,10,4,-3,4,2,-2,-2,-10,-7,-8,-10,7,-1,-8,-6,10,-5,5,-7,-7,-7,-5,-1,2,5,-10,1,4,-6,4,-3,7,-1,5,1,4,-2,1,-2,-3,4,-6,1,-9,-2,1,7,3,-10,5,-10,-3,8,8,-6,-8,4,-7,4,6,-1,1,-2,-8,-5,-8,-10,7,-5,-9,-6,3,-3,-9,-8,-4,9,-9,-2,-7,-7,-1,-8,-6,-3,-5,-4,-3,1,-5,-6,-10,-4,7,-3,2,1,-9,-2,-1,-2,8,-7,4,-2,8,7,2,-8,-7,3,-3,3,-3,-8,3,-1,9,-1,-7,-3,-10,7,-2,-1,6,-10,-10,2,9,-8,-4,-1,-8,-6,-5,3,1,-9,5,-4,6,1,-7,1,-2,6,9,-9,-2,-5,-7,-6,8,-1,-5,-3,7,1,6,-9,3,6,-5,-3,1,-7,6,-7,7,7,-1,5,4,-3,9,1,-7,6,-10,-2,6,-1,1,9,4,-1,6,-4,-5,-3,6,6,10,9,2,-3,1,3,2,1,7,2,2,-8,-2,1,4,5,-9,6,-6,-2,-2,10,-6,-3,-6,6,2,5,4,6,-1,-4,7,-4,8,1,-10,6,-1,8,-6,5,8,-4,4,-2,2,9,-5,-2,10,3,-2,7,9,-3,10,5,-8,8,-8,10,6,7,2,-4,-3,-4,9,-10,-5,-5,3,-2,-8,6,3,-8,-5,2,-6,-2,5,-4,7,3,1,8,-8,6,3,2,5,-4,-6,-10,3,9,-9,-2,-1,10,-1,-3,-1,4,10,-7,-7,7,-9,6,-8,2,2,-4,7,2,-4,-8,5,-8,-2,-9,-8,-4,3,1,-7,-1,-6,-1,-10,-2,9,1,6,8,-6,8,-3,-3,2,-10,-8,7,5,-9,-10,-1,-3,-2,4,8,7,4,-6,-8,4,7,-8,-5,2,-8,-7,1,3,-10,1,7,-1,2,9,-8,-10,4,-1,1,-5,6,-9,-1,-8,9,10,-1,-8,-10,3,-1,-3,8,-6,-5,-9,-2,-10,1,5,-9,-8,5,3,5,3,8,-3,-8,-7,-9,-8,3,5,5,-5,-4,-5,9,4,4,3,1,-8,4,-6,2,-5,9,8,-1,-8,-6,-4,3,-2,-5,-10,-1,-7,-6,2,-8,-2,9,3,-4,3,-6,-6,4,7,-3,6,-5,-10,8,8,9,3,9,5,6,5,6,-2,-1,8,6,-9,8,2,9,2,-8,-5,-2,2,2,-2,1,7,-3,-6,-10,9,-2,6,9,-1,-4,5,1,-3,-7,1,9,9,-6,2,-8,6,2,-5,-9,-9,7,8,-5,10,6,-9,-3,8,3,-5,-10,3,2,-2,-6,-3,-5,10,-2,2,-4,-4,1,-6,1,-5,2,-3,-10,5,-4,-7,-7,-10,7,-6,5,10,3,10,9,7,7,-6,-2,3,9,-6,-6,5,10,-8,5,-3,-4,-2,-2,4,8,-6,-1,6,-8,-8,1,-10,9,8,-6,2,-5,2,-3,9,-6,-2,4,1,-2,-8,2,-6,8,5,-6,-3,-1,-10,-1,6,4,8,-7,1,8,2,9,-1,1,-8,-2,2,8,-8,1,-8,-3,4,-5,-9,6,3,9,-2,-9,-9,-3,-4,3,10,9,10,4,4,-2,-10,-4,4,6,-4,-10,8,2,-6,8,-10,4,1,-5,-7,7,5,-2,-5,-9,-7,-1,-2,-9,-9,-6,5,8,-10,-2,10,-8,-1,6,-1,6,-3,3,10,-6,2,-10,2,5,-3,-10,-4,-9,-9,2,1,-7,5,-10,5,-5,-9,-4,-3,4,-3,8,-1,6,-2,-1,6,-7,-8,-7,-4,10,7,4,-2,-3,-3,6,-8,5,1,-4,3,-10,-10,-6,9,-10,9,-4,4,-7,10,2,-4,-9,4,3,-7,-10,10,-3,-3,3,1,-4,7,-4,5,-5,5,-5,7,8,-1,-3,8,7,-3,3,10,-8,9,1,6,-4,-10,-1,4,-3,2,5,-3,9,-5,-7,2,-1,7,-6,10,5,-6,6,-8,7,6,9,-6,-5,-3,-7,10,-7,-2,10,-2,3,-3,-9,10,2,10,5,-2,-9,3,-1,6,9,-2,1,6,-3,2,4,10,8,-9,-7,3,5,2,10,7,-5,2,2,-1,-1,-9,-7,-10,10,-7,-10,1,-8,-3,-10,-2,9,10,-4,-8,-3,9,-7,-4,8,-2,-6,4,-7,-6,7,-9,-2,8,9,2,-3,4,9,7,-3,-6,3,3,-6,4,-7,-10,3,8,3,7,-10,-8,-9,6,3,1,1,5,-2,-3,-3,9,-8,-9,6,9,-7,7,-9,9,7,9,3], dtype = "int64")#candidate|813|(2304,)|const|int64
call_811 = func_498_call(relay.reshape(var_812.astype('int64'), []), relay.reshape(const_813.astype('int64'), [16, 9, 16]), )
call_814 = func_498_call(relay.reshape(var_812.astype('int64'), []), relay.reshape(const_813.astype('int64'), [16, 9, 16]), )
output = relay.Tuple([uop_805,call_811,var_812,const_813,])
output2 = relay.Tuple([uop_805,call_814,var_812,const_813,])
func_825 = relay.Function([var_804,var_812,], output)
mod['func_825'] = func_825
mod = relay.transform.InferType()(mod)
var_826 = relay.var("var_826", dtype = "float32", shape = (9, 4, 13))#candidate|826|(9, 4, 13)|var|float32
var_827 = relay.var("var_827", dtype = "int64", shape = ())#candidate|827|()|var|int64
output = func_825(var_826,var_827,)
func_828 = relay.Function([var_826,var_827,], output)
mutated_mod['func_828'] = func_828
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1411 = relay.var("var_1411", dtype = "int32", shape = ())#candidate|1411|()|var|int32
var_1412 = relay.var("var_1412", dtype = "int32", shape = (10, 10, 14))#candidate|1412|(10, 10, 14)|var|int32
bop_1413 = relay.left_shift(var_1411.astype('int32'), var_1412.astype('int32')) # shape=(10, 10, 14)
uop_1419 = relay.erf(bop_1413.astype('float32')) # shape=(10, 10, 14)
output = relay.Tuple([uop_1419,])
output2 = relay.Tuple([uop_1419,])
func_1424 = relay.Function([var_1411,var_1412,], output)
mod['func_1424'] = func_1424
mod = relay.transform.InferType()(mod)
var_1425 = relay.var("var_1425", dtype = "int32", shape = ())#candidate|1425|()|var|int32
var_1426 = relay.var("var_1426", dtype = "int32", shape = (10, 10, 14))#candidate|1426|(10, 10, 14)|var|int32
output = func_1424(var_1425,var_1426,)
func_1427 = relay.Function([var_1425,var_1426,], output)
mutated_mod['func_1427'] = func_1427
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1677 = relay.var("var_1677", dtype = "float64", shape = (7, 13, 16))#candidate|1677|(7, 13, 16)|var|float64
uop_1678 = relay.log(var_1677.astype('float64')) # shape=(7, 13, 16)
output = uop_1678
output2 = uop_1678
func_1680 = relay.Function([var_1677,], output)
mod['func_1680'] = func_1680
mod = relay.transform.InferType()(mod)
var_1681 = relay.var("var_1681", dtype = "float64", shape = (7, 13, 16))#candidate|1681|(7, 13, 16)|var|float64
output = func_1680(var_1681)
func_1682 = relay.Function([var_1681], output)
mutated_mod['func_1682'] = func_1682
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1756 = relay.var("var_1756", dtype = "float64", shape = (12, 7, 16))#candidate|1756|(12, 7, 16)|var|float64
uop_1757 = relay.rsqrt(var_1756.astype('float64')) # shape=(12, 7, 16)
output = relay.Tuple([uop_1757,])
output2 = relay.Tuple([uop_1757,])
func_1767 = relay.Function([var_1756,], output)
mod['func_1767'] = func_1767
mod = relay.transform.InferType()(mod)
var_1768 = relay.var("var_1768", dtype = "float64", shape = (12, 7, 16))#candidate|1768|(12, 7, 16)|var|float64
output = func_1767(var_1768)
func_1769 = relay.Function([var_1768], output)
mutated_mod['func_1769'] = func_1769
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2490 = relay.var("var_2490", dtype = "float32", shape = (12, 15, 5))#candidate|2490|(12, 15, 5)|var|float32
uop_2491 = relay.asin(var_2490.astype('float32')) # shape=(12, 15, 5)
output = relay.Tuple([uop_2491,])
output2 = relay.Tuple([uop_2491,])
func_2493 = relay.Function([var_2490,], output)
mod['func_2493'] = func_2493
mod = relay.transform.InferType()(mod)
mutated_mod['func_2493'] = func_2493
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2494 = relay.var("var_2494", dtype = "float32", shape = (12, 15, 5))#candidate|2494|(12, 15, 5)|var|float32
func_2493_call = mutated_mod.get_global_var('func_2493')
call_2495 = func_2493_call(var_2494)
output = call_2495
func_2496 = relay.Function([var_2494], output)
mutated_mod['func_2496'] = func_2496
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2763 = relay.const(9.687245, dtype = "float64")#candidate|2763|()|const|float64
var_2764 = relay.var("var_2764", dtype = "float64", shape = (12, 6, 7))#candidate|2764|(12, 6, 7)|var|float64
bop_2765 = relay.floor_divide(const_2763.astype('float64'), var_2764.astype('float64')) # shape=(12, 6, 7)
func_2493_call = mod.get_global_var('func_2493')
func_2496_call = mutated_mod.get_global_var('func_2496')
const_2769 = relay.const([-0.467487,4.011659,-2.289015,-0.922885,-5.031693,7.244053,-4.189091,4.340535,7.201678,-0.876032,9.534706,4.559888,4.320057,2.919218,-0.423539,-7.785759,8.440940,-1.422997,-0.066877,-9.710551,6.333760,2.383771,8.107501,4.978503,2.286691,-2.506173,-2.349807,5.848373,7.269052,3.019138,-8.856816,-9.706902,1.648827,4.920830,-2.770140,-3.664296,9.899358,3.928710,-3.550572,9.865661,-8.268812,-4.054954,3.041117,-2.109001,7.114058,-2.336519,9.354380,9.249175,6.633695,-7.859615,-2.977559,-7.704729,7.398146,-6.033074,-1.556861,5.267341,-2.133295,-0.616902,0.587646,-4.934542,-7.112540,-9.956546,1.692626,-3.126667,-2.922900,-6.350634,0.691427,-5.950987,-1.224227,-9.177585,3.360395,3.228677,0.614878,3.504641,-5.057110,9.965674,0.679802,-8.499215,-9.239246,6.589315,-9.552359,8.397462,-9.304910,-6.367349,7.280344,-4.584379,-0.897705,-6.326520,1.623943,-7.309008,5.916003,-3.968641,4.440941,8.902274,1.792618,-3.749612,3.645174,3.582396,9.560100,-0.192221,-3.600903,4.923232,6.453329,-5.346831,-8.493235,-9.698588,3.992909,-1.487919,-8.859318,-6.444235,-6.087811,7.978520,-8.184490,-3.904701,-1.169257,-5.640176,6.655565,0.714129,0.142737,4.664161,-4.771459,9.882208,-1.217844,-3.145322,-3.206587,-7.539269,7.207466,-8.249989,-8.213403,1.338396,5.966615,7.264237,-9.963955,7.178435,-8.416985,5.637151,6.952523,-4.672877,-1.353958,-9.899491,1.320602,1.111643,-6.693185,2.836563,-0.261847,9.519738,-4.064865,-7.154704,2.692805,2.952156,-2.526913,-9.662691,1.370198,6.682251,9.416220,-1.644332,-7.609235,1.732619,0.584221,8.033062,8.534611,-1.451963,2.790476,-6.525154,-0.399693,0.559854,-0.214260,-1.373351,-2.802147,4.303927,4.284942,0.459807,-1.978320,-9.647176,7.776933,2.918415,-6.849509,-3.200476,8.381554,-7.262726,-5.052562,-9.952056,6.554827,0.725519,6.995313,6.597022,-8.623328,-1.451986,0.381202,6.206696,4.810586,-6.801479,-7.643088,2.518716,9.852879,0.661155,9.531101,6.719002,0.369221,8.926328,5.220338,6.808344,9.430112,-9.208754,8.163245,9.729257,7.466683,-8.304050,-5.069214,2.999908,-7.977390,-3.668543,-6.074557,-4.298521,-1.683244,-8.898212,8.597075,8.922939,-6.153334,1.640155,3.755752,-4.569980,-5.472025,-6.641010,-6.560082,2.379846,9.605359,0.848909,1.035736,1.503218,0.787295,9.289633,7.262175,8.313235,8.694681,4.828538,0.772213,6.298038,8.085260,-9.003366,3.994849,-7.397379,0.711895,-6.994539,7.582347,-2.205167,-7.954454,3.647281,4.395492,1.855517,-4.285703,8.139560,-4.693764,5.875270,5.534262,9.538031,2.733951,0.700569,5.934904,8.855775,4.736085,9.041771,-6.060210,9.699400,7.859871,-5.858283,-8.183360,9.236644,-8.012662,-0.206729,1.607187,-7.091693,8.590571,0.381678,8.088113,6.412241,5.332358,-6.237021,-9.735209,1.847413,-0.115289,3.807928,5.181511,4.399111,1.653894,6.571909,-2.117785,-8.019518,7.416184,-8.367862,-6.887447,2.651012,3.469571,8.326370,-1.594497,3.753312,-6.391996,2.855409,-0.543492,5.650951,-5.670587,-2.668903,-4.558108,-7.444918,-0.038085,4.577886,-7.143548,-8.559242,-6.262027,2.842231,-8.253418,-8.186680,8.443393,1.166047,-6.495085,-5.003204,7.059509,3.598675,8.037035,-4.276505,8.649982,-1.338015,-7.533966,5.758593,7.225144,5.376346,8.665235,-2.004742,1.883993,-4.237378,8.948669,-6.004425,9.745853,-7.332552,6.790277,9.353150,-0.566504,2.946719,-4.469782,-3.092072,4.091525,-8.890355,3.025588,-3.612799,-2.959284,-5.062885,1.605145,-1.772024,2.730365,2.280276,2.213810,5.097965,-0.751748,2.674106,6.257612,-5.707962,4.822803,6.193003,-0.573915,-5.301586,0.400036,-2.718937,0.415470,5.406039,4.118193,-6.172813,3.971808,6.427986,-9.980301,5.120273,-7.692135,-1.319617,-0.997749,-5.315955,8.268651,2.332216,3.613274,7.907124,-3.250188,9.373488,3.108850,2.734767,5.384551,8.161977,8.654962,5.180356,-8.270850,9.529194,-8.242335,0.386673,-9.990345,-5.516591,-5.715758,0.715946,-1.186221,8.666122,-5.705178,2.783150,5.624741,0.035980,6.587033,-0.036084,-6.765810,-5.118494,7.792100,2.228881,-9.943494,1.147725,7.894062,7.102062,-8.153354,-4.505450,3.643494,-1.380085,-7.330707,2.657644,7.881859,2.554833,-7.941018,-3.699922,-6.176746,1.834857,3.453297,3.826515,1.365633,-9.497730,3.280360,-8.441324,-6.288520,9.475887,-5.823819,-3.609398,-3.861619,-0.603571,3.214898,-2.158566,-7.043337,-1.420951,7.330631,-4.951357,6.251163,-9.402507,8.644378,5.020149,2.582981,-5.713999,-9.214789,9.654770,6.813885,0.984261,-3.624887,-2.051806,1.059527,-3.170658,-7.283665,-6.903292,-3.747250,2.999197,2.793502,9.701321,5.766856,9.529759,2.222999,0.210092,-1.924606,5.435727,-2.587326,4.812651,8.120983,-7.179070,-0.952818,1.886532,6.827612,6.037756,8.006791,-4.008194,-9.966803,-4.997679,-8.196515,-1.228964,-0.096219,-9.624436,7.627862,1.577927,3.705286,8.000079,-5.094865,-8.922558,3.698524,-4.503158,3.243563,6.649464,-6.794331,8.946004,2.654307,1.427923,0.931720,1.442730,5.497743,2.583291,-7.556077,0.649939,4.708565,2.335703,6.565964,-1.518941,-4.167117,-2.738907,7.260971,9.631205,-9.343171,6.789566,-8.192990,-1.460878,5.622234,0.871193,-1.054274,-3.571976,-2.508227,-1.631108,4.460686,-7.331253,7.938330,8.359346,-9.001917,7.144934,3.185340,8.761277,9.207836,-8.021257,5.596154,6.300868,-3.990920,-8.057564,7.275027,-1.821706,4.298981,-4.323171,1.760073,5.730397,-4.312391,-6.192705,9.923790,-6.928572,-1.999678,7.510418,-1.898636,7.708804,-1.428271,8.597528,6.361445,1.879860,9.006267,4.168408,1.093066,-2.116221,0.281748,1.064384,-4.561565,-2.435225,-3.288319,3.785612,-8.705005,4.290544,-1.064169,-0.723711,-4.602389,-0.730113,1.368420,1.999051,-9.415296,-5.730596,-1.457573,2.433053,5.409030,0.585358,2.328618,-4.455932,-5.531675,5.136442,0.014554,-0.560846,1.525254,4.559700,-6.082247,7.106240,-0.454077,-0.508120,2.162312,-3.325445,4.546076,3.261304,-5.285717,-6.364847,2.843753,7.397289,9.011219,5.146442,-7.199855,4.858753,3.372633,0.288246,7.369634,-9.501435,6.577096,3.324895,1.105569,-6.955812,6.745234,-5.870276,-7.751326,5.651255,9.022478,-7.977371,1.533131,-7.514368,-9.349421,-4.031587,3.636506,-5.712272,2.159008,-5.580548,-1.901292,-5.792168,5.121751,5.055405,-8.565059,-6.243151,1.488282,8.038523,-3.695305,4.939544,-2.721021,-0.670939,-9.756252,-1.493342,0.030624,-2.983908,6.347230,4.382412,8.086898,-5.558659,4.473272,3.854859,9.905859,9.109267,-0.502575,-1.939009,-5.741657,0.446759,-5.397848,8.763027,-7.120346,4.563760,-3.221048,-8.755957,0.747051,-5.883807,1.764360,4.087344,-5.983335,1.992907,1.451521,0.008218,-7.709894,0.695614,5.591013,-1.300379,-2.940756,6.478119,-8.221117,9.830908,3.893691,-3.036053,7.853223,9.366454,-4.745115,4.305700,6.512482,-2.661178,9.035028,-8.134729,-0.791843,-0.448817,-5.247336,2.027501,8.624010,2.267627,-1.675535,-3.103107,9.979198,-7.219684,-3.627563,-5.844459,-6.971689,9.844318,-8.974184,-1.785812,3.989845,6.159257,8.658428,-1.866533,1.942378,9.712836,-6.359025,-9.390294,3.811150,6.604138,-9.952344,2.656771,-8.885523,-9.042880,-4.496197,7.209920,9.170392,-0.853597,-3.186668,6.507289,-2.625608,5.339153,-4.685535,-3.406700,-1.234444,1.566200,3.391261,-0.466129,-4.218185,-3.682984,3.522116,-8.767110,8.370079,8.489606,3.535542,2.254051,5.880358,-0.721424,-1.515538,-2.657132,8.195154,7.445581,-6.102970,-1.043870,-7.319762,-0.889582,1.899523,-9.539896,6.877593,-0.192632,1.537358,-4.903243,-2.566629,-7.078289,3.337792,-1.646313,8.001959,-5.583096,9.735323,-7.680453,8.839084,4.699973,1.434883,4.062859,-8.548888,5.565784,-2.471639,-7.385334,3.639916,5.884968,5.029384,2.830161,-0.333415,8.440800,-6.238770,9.560679,-2.531623,-3.529336,4.715765,-8.642910,1.114580,5.393970,4.019435,3.038331,-3.339294,2.691881,-4.897826,-3.660014,-2.778757,-1.494227,5.365274,9.492751,-1.143715,2.480841,3.413503,1.021592,-8.376421,-6.110191,0.210321,-8.573106,4.781489,6.810269,-3.053287,-8.298838,6.332418,7.908120,-1.734813,-0.051730,8.245324,-2.387657,0.764783,9.385481,-2.791378,3.148916,0.660513,-3.621595,-0.666440,-7.539717,2.305427,3.141261,5.500293,-2.957027,1.663735,1.250409,-1.266584,-3.916066,7.703592,5.454680,5.621540,7.185880,-9.957404,7.086947,-2.119455,2.805311,-8.280250,-7.253684,-0.460581,-8.368729,-4.202257,-9.385611,0.053353,-5.444898,-7.731959,3.833918,0.568293,4.892602,-6.028007,-9.645426,-3.936473,-6.014378,-4.759992,4.908421,3.321312,5.283586,6.084298,7.287393,-9.751634,1.495785,6.210708,-2.762709,-3.842437,0.600081,6.850598,9.313422,7.455398,-3.043860,-5.468936,-6.012904,5.426866,1.900538,4.255158,-2.525483,9.682944,9.270878,-0.838741,8.948631,4.777295,0.668662,-5.085302,-3.336788,-6.926948,6.796144,-3.786939,2.322591,5.885717,-2.748827,7.179319,-5.466033,2.107382,1.429582,-4.612158,-9.903272,7.016811,-5.574224,-8.733333,-1.736255,6.929757,8.467258,6.494970,-0.376408,-4.685977,-4.532411], dtype = "float32")#candidate|2769|(900,)|const|float32
call_2768 = relay.TupleGetItem(func_2493_call(relay.reshape(const_2769.astype('float32'), [12, 15, 5])), 0)
call_2770 = relay.TupleGetItem(func_2496_call(relay.reshape(const_2769.astype('float32'), [12, 15, 5])), 0)
uop_2772 = relay.asin(var_2764.astype('float32')) # shape=(12, 6, 7)
func_1680_call = mod.get_global_var('func_1680')
func_1682_call = mutated_mod.get_global_var('func_1682')
var_2788 = relay.var("var_2788", dtype = "float64", shape = (1456,))#candidate|2788|(1456,)|var|float64
call_2787 = func_1680_call(relay.reshape(var_2788.astype('float64'), [7, 13, 16]))
call_2789 = func_1680_call(relay.reshape(var_2788.astype('float64'), [7, 13, 16]))
func_498_call = mod.get_global_var('func_498')
func_501_call = mutated_mod.get_global_var('func_501')
var_2797 = relay.var("var_2797", dtype = "int64", shape = (2304,))#candidate|2797|(2304,)|var|int64
call_2796 = func_498_call(relay.reshape(const_2763.astype('int64'), []), relay.reshape(var_2797.astype('int64'), [16, 9, 16]), )
call_2798 = func_498_call(relay.reshape(const_2763.astype('int64'), []), relay.reshape(var_2797.astype('int64'), [16, 9, 16]), )
func_498_call = mod.get_global_var('func_498')
func_501_call = mutated_mod.get_global_var('func_501')
call_2799 = func_498_call(relay.reshape(const_2763.astype('int64'), []), relay.reshape(call_2796.astype('int64'), [16, 9, 16]), )
call_2800 = func_498_call(relay.reshape(const_2763.astype('int64'), []), relay.reshape(call_2796.astype('int64'), [16, 9, 16]), )
func_724_call = mod.get_global_var('func_724')
func_728_call = mutated_mod.get_global_var('func_728')
const_2843 = relay.const([-6.302625,-0.885833,-0.792758,6.186634,7.964614,4.005438,-8.162748,5.297137,-3.650232,6.118145,3.014192,-2.664938,1.240880,-0.258356,-2.970563,7.811676,-4.957808,1.504041,3.392701,1.803224,-8.085841,-8.540890,1.209512,7.309188,-9.524600,4.424277,6.725054,-5.592000,-5.662021,0.384715,3.199856,7.788088,-7.190459,4.691574,7.199914,7.424224,2.632958,-3.616255,7.015850,-2.514409,1.669527,4.932736,0.214936,2.800456,-5.034881,5.366279,0.815354,-7.982555,2.692834,-8.639374,-2.096962,-5.724727,8.263387,-9.580043,-7.966557,-9.368642,5.323869,-9.128095,-8.497366,-4.816533,-5.524823,-2.580154,-5.398904,-7.501067,-0.193674,-8.416650,-3.951666,-0.575564,-5.234146,-8.323295,-9.327760,-4.437067,-1.483947,-4.753364,-4.870530,0.054550,-3.408158,-9.779154,-9.970313,1.241725,1.281021,-4.989648,-5.514128,-1.393189,9.726114,-4.561880,2.600139,4.568523,7.710762,-1.450055,-0.964248,7.384332,-8.677219,3.330220,-7.564760,1.863898,9.305312,1.055011,0.765101,-5.029137,-9.803715,-5.356143,8.224464,4.280027,6.577769,-7.831343,3.814719,1.771087,6.095065,8.524149,8.705931,-5.097828,-0.719557,-2.085893,0.111250,-6.761980,7.529753,4.749806,8.892828,-6.546668,8.327985,-2.515891,-2.676527,-6.450001,6.857261,2.790981,-8.035412,2.983981,6.241602,-1.923935,-5.444539,-6.242578,3.646889,-5.159442,-4.162453,-0.364915,8.845097,-8.538278,-5.231615,9.979579,-6.988963,-4.617740,-4.504542,5.683619,2.436277,-5.408300,0.622584,-1.290220,1.775655,9.175668,1.841377,8.077841,-6.016860,-8.180264,-3.865703,-4.767869,-4.291675,4.440999,-5.784970,-2.271544,8.569972,4.497106,4.576187,0.477061,-2.608481,-8.289783,-1.187471,-8.529559,1.237572,8.976493,8.682512,6.835375,-0.155851,-2.501789,8.464521,5.155539,-5.744659,5.405019,-5.655589,-0.822286,1.429295,-0.035412,-8.216058,6.712873,8.539815,4.519704,-5.795262,-0.517932,8.084797,-5.110016,0.750219,7.384600,-2.900789,0.545880,-0.188642,-2.727145,-4.224502,6.092992,0.205749,-4.633122,-8.435244,1.724802,-7.615950,0.304826,3.059333,6.321040,1.399902,-4.573984,9.403302,-0.462066,8.142122,-0.823310,3.482592,-0.536269,-4.758388,4.306033,-1.732877,7.326801,-0.130956,-1.590587,-2.183368,-1.692262,1.795267,-3.117266,-9.192558,-9.250771,9.628856,4.540814,-0.887354,2.918632,7.762769,0.229753,-0.744819,-9.751568,-6.517564,-6.460428,-3.080963,-5.546441,9.969932,9.346513,-9.954802,1.440852,-6.759933,-7.886930,-7.530933,9.749665,5.659715,9.860537,7.227413,-8.196979,-3.740433,2.613312,-3.520704,-8.732784,-7.088589,9.875573,2.164809,-9.416044,-1.221797,3.308691,-6.951191,-1.312908,7.237152,9.039463,8.965875,-9.256962,-5.907691,9.969828,-3.608729,-3.075248,3.296615,7.574898,-3.038907,-5.499752,-4.066299,1.134450,-3.598422,-2.287398,9.281106,-2.803582,-5.713322,7.872667,-3.710998,7.669744,-0.469629,1.088063,1.322911,2.304349,-2.476405,-6.791244,5.995273,-3.375604,9.585160,6.111473,-7.634555,-4.091971,3.370178,-6.478373,-2.125196,-4.203676,1.868329,-5.418406,-5.120671,0.112702,9.703526,7.147541,6.557180,-9.420505,9.467045,-1.383668,1.370311,-0.748807,-2.233965,4.653187,-6.056117,4.220608,7.788611,-2.056442,4.770837,7.323509,-6.559374,9.059047,-9.928716,-8.721489,-5.132077,3.213016,3.794086,-2.969984,-0.875529,-5.015167,2.769806,6.463978,4.324484,-3.712862,9.489731,3.691326,-4.848917,6.522756,-3.854911,-4.227408,-7.168658,7.096957,4.099317,6.942366,6.447721,-3.598979,-3.486754,5.689885,-0.599418,-7.777418,9.643131,3.827582,8.675944,-1.349886,-7.608524,-4.985432,7.273603,2.363069,7.033414,-3.650208,-9.645723,4.669136,-1.680924,9.559956,-4.503804,-4.765722,9.492618,0.440905,0.660208,1.806170,5.720389,-6.275631,8.785491,9.823101,4.907822,5.000477,2.032221,-5.505011,1.052338,-8.413977,0.240807,-9.515890,-5.397393,0.110736,8.937484,6.676718,-1.355662,1.483814,9.319003,-6.806717,3.825551,9.797561,-5.195836,-0.454719,9.238174,3.277192,-0.963574,2.480934,-5.923591,-8.367053,2.705510,-9.920907,5.591966,4.845640,-6.307190,9.107644,3.926412,-5.752656,-4.351486,-2.991652,1.139304,1.689998,3.327677,-0.815145,7.573565,4.093052,9.095787,1.587735,-9.003183,0.388871,-9.034372,-3.737019,1.941920,-8.445882,9.224807,9.544898,-1.543548,-2.914570,-3.703454,0.431263,1.299903,-5.673695,-0.457894,-0.808735,5.685403,-4.303261,-7.660773,4.936649,7.974113,-2.608698,-3.226072,-8.746350,-7.365415,-0.768917,6.109554,-8.574689,7.333560,0.424374,-0.317726,-0.908582,-2.945847,-0.876805,3.756580,-1.487633,7.137902,6.889984,8.515312,-0.724152,9.369961,-8.329061,3.083966,9.884648,2.845314,-6.998542,-8.071631,2.012703,3.773642,-4.657675,-2.653131,-5.225352,5.842237,5.335759,0.910708,-3.906516,0.176764,7.518758,0.106252,4.136242,-0.066888,6.433525,-8.014104,5.789287,-8.379236,-2.716289,-8.682349,-2.337694,-9.450756,-3.066919,2.416143,-2.249016,9.141503,1.092238,8.149357,-4.929606,8.798260,-5.034348,-7.494473,1.225189,1.771150,6.176738,-1.946439,9.245781,-6.350378,-4.942951,-1.873723,-0.623898,8.707202,7.170549,-4.004672,-1.273671,2.776269,4.771241,-8.949623,-7.541047,-9.415877,8.921550,3.854410,4.947318,6.582796,1.637986,5.180276,1.819311,-1.513711,7.725664,-7.115535,-3.799793,-6.030003,-1.486065,-6.407253,2.164214,-1.600958,-8.826476,4.762724,2.843607,2.373759,1.985969,-7.208060,7.693713,0.266358,3.483981,-6.924974,9.012227,5.463409,1.197495,-1.872406,-8.683685,-9.640505,-3.360244,2.257087,-5.324502,-2.021166,3.264618,-8.206797,2.890454,6.139604,-4.243088,-2.654942,-2.859741,7.886612,-1.538758,-3.330337,-3.793157,0.228020,2.645394,4.764922,6.066263,8.047011,-7.653741,-7.373847,7.981844,5.344915,5.330973,4.754731,8.451407,-9.895215,-6.380229,5.554376,3.406844,2.294237,5.292711,-9.534240,-7.367360,2.696202,5.206543,5.001086,6.530541,-5.159358,-3.237502,-5.987146,-5.730879,9.450641,-2.828052,-4.115496,2.091618,-6.622320,-6.922863,-4.987482,-8.884478,7.572019,3.242802,-3.343479,3.960663,1.745155,-7.079626,-5.396462,-2.308216,0.179682,-3.058020,-9.063018,0.297868,-2.249619,4.824759,-3.299816,-9.736678,-5.004567,-4.599804,-2.649547,2.108370,-9.322285,2.256051,2.025369,-9.021736,-6.107935,-8.731293,9.316374,6.877131,7.069655,-2.512174,-7.270356,7.520258,-8.063662,1.007015,-0.356519,-2.755867,-5.608521,2.625235,-4.777140,-1.019841,-1.714185,9.601664,-7.931817,2.340089,-2.190146,-5.615495,-5.474955,3.530735,9.511727,7.135458,3.176324,-3.204172,5.065209,3.894694,-8.076487,9.376006,-8.260196,-8.781214,7.751513,-5.777102,0.522916,4.433563,8.512444,-7.975155,0.231564,-6.315400,3.216164,0.414279,-1.748571,-7.724279,-6.164071,3.130622,3.642612,-8.331057,9.372761,-0.932553,6.482778,-1.493859,-2.740847,1.177452,-0.686138,-6.591430,5.051181,-3.169132,3.179956,-6.693508,-6.730210,-1.958215,5.348311,6.459608,-7.569891,3.440344,5.248647,-1.454019,-3.703564,1.263864,2.427305,-8.268875,6.287259,-7.416130,-4.356145,2.571110,-7.046861,-7.494700,-6.025277,-3.397804,1.716345,-4.366405,9.741625,-4.022731,-5.931073,-7.124883,9.368927,-9.805428,9.615157,7.754149,7.337131,5.408820,4.528267,0.168223,9.251793,-1.820281,8.221920,7.163034,6.787846,-3.159778,8.925927,8.258514,-0.306445,-5.785404,-3.461187,7.264375,-9.637292,3.985877,-2.410812,4.095777,-4.460549,-7.980169,-4.885768,-9.442822,6.865131,8.321601,0.480173,1.732683,0.597122,7.905928,-6.439121,5.476433,1.240592,-0.901682,-1.973699,5.286163,6.011360,-7.933594,6.109031,4.039049,-1.595552,-5.630980,2.834125,7.551694,6.010760,-7.489938,6.953709,-3.100593,-2.297641,-2.864920,-0.704243,8.772133,0.909300,2.921868,-4.039300,7.071558,7.308230,-5.308882,8.739672,9.129966,-7.519670,-8.238155,-7.598191,2.038210,8.985964,8.994596,3.959490,5.817449,-4.544234,-6.867977,0.646549,6.885799,7.049194,2.325429,1.433822,5.174659,-7.934469,9.267185,-4.260096,0.452865,-5.729075,9.454860,0.439838,-5.734066,8.038458,-7.769383,-6.134059,8.887777,4.179206,3.432920,-7.331615,7.678820,-4.901722,9.771574,2.917264,1.251244,8.822346,1.390528,2.609619,-5.452388,-6.135734,-2.079040,1.888418,-2.301175,-3.906435,8.588761,-9.035912,-3.972682,-0.752561,3.258229,-3.975163,9.522476,8.295846,7.727815,1.993854,2.602349,-4.749244,-6.422001,-8.095223,0.924138,-3.216732,4.783944,6.767868,-7.922971,3.121135,1.478676,-4.591711,4.856479,7.045807,-8.035059,-5.178689,7.652853,0.956979,-9.561248,-1.129508,6.429272,9.960398,-3.942262,-3.226776,-5.563594,-5.686671,8.305296,-0.485400,2.351473,0.383121,-8.120273,6.145452,0.555490,-7.990799,-0.226602,9.692634,5.893850,-1.329051,3.073496,-3.383995,-6.839243,4.598557,4.792875,-7.389308,2.625727,6.241514,-5.543774,7.415915,4.135621,4.884895,8.489482,0.507647,7.930141,-4.680075,-9.018825,-1.285808,2.756627,6.733121,-1.018365,9.157761,3.096596,9.847945,-9.605019,8.123466,-3.170052,5.463711,6.832853,3.583143,2.969422,9.398867,-8.808840,-6.852080,7.406710,2.194306,-9.961716,-1.797181,7.825238,9.869362,-2.147640,0.901731,1.066549,-0.604257,-2.260833,-3.954108,0.690663,7.191461,5.933832,-1.197028,8.778773,-2.824704,-9.731636,-1.030755,0.589820,0.348190,-3.112467,-3.796197,-6.985585,9.582762,-4.330287,-0.106393,5.958756,-0.729425,5.409133,-3.672223,-7.236030,-5.091466,5.412667,-3.301871,-7.360374,-4.005680,-0.308054,6.901635,-3.935521,7.086440,-7.219249,-5.972736,-0.820586,-1.810896,9.788502,-8.172368,-4.779576,0.282384,4.354771,-3.002729,5.449987,2.931906,2.846434,-4.123357,1.249869,2.288795,6.659532,0.133502,-5.143426,-4.194431,-5.804018,7.308437,4.288372,-5.822752,-1.625744,7.746895,-6.747535,1.635627,9.093884,5.224915,-0.586655,-5.096384,-9.429542,3.991017,4.877360,6.364919,-8.991352,-2.588095,9.985448,8.007250,0.414398,7.525425,8.243471,-2.083206,2.317310,5.908060,-4.766297,4.859750,0.807931,9.325979,-6.549525,5.866435,9.259243,0.073926,-4.799791,-7.785693,7.207710,6.272800,-2.768133,6.668216,4.532769,6.009154,-3.265863,8.211127,8.868264,-0.402762,0.231005,5.410986,-2.478531,2.778151,8.287067,-5.016808,3.875471,8.296709,5.021085,0.372613,7.699886,-3.899067,-6.501988,4.800484,-8.799430,5.541247,2.046710,-8.769776,5.099434,5.154732,5.545122,1.761976,1.246971,3.379209,2.811523,-8.823963,5.732218,-9.202949,-7.286546,-0.941636,-5.551935,-5.135741,-1.386743,6.333632,-6.459056,-6.165488,-5.229352,-9.839030,-2.771496,6.682681,5.268170,-5.063153,-4.376597,-3.971747,-7.443017,-2.227027,-2.981542,5.506219,7.420019,0.062230,6.125543,-5.223835,3.445222,2.390382,-8.313829,-0.313751,-3.872890,-3.878407,0.558126,5.838799,3.814758,-6.502616,-5.445380,-9.049714,-2.433982,3.473835,4.130121,-7.832734,7.656143,-7.057309,-9.475590,0.600341,0.363608,7.712189,-6.819967,6.078478,-1.972027,6.514202,1.034918,7.398055,5.109105,2.798923,-8.744977,-2.240137,5.465140,6.724506,5.903234,1.756999,-5.782424,0.324191,2.338106,9.014177,7.408703,6.797272,-3.072562,-3.170711,1.341930,1.095246,3.937745,7.997739,-0.754169,-9.354129,1.360744,1.477137,4.975716,-3.591607,9.862323,-0.846568,8.982163,4.862455,-4.473769,1.101284,8.420989,8.357328,-1.322511,7.365050,5.952154,-2.791264,7.209895,1.131668,0.151829,-5.220256,0.706954,3.290131,-9.621073,-0.059456,-5.310204,-1.685000,-8.935619,5.307349,4.704867,-7.693186,-4.058808,9.359084,-8.386734,-3.400065,8.000003,-9.767932,-7.004131,2.702826,-1.083097,8.746046,9.221367,-0.989728,-4.755279,4.722197,-8.939255,-1.793212,-0.082770,0.230281,-1.415033,-0.475770,-2.851502,-2.180957,-0.937433,1.103125,-0.926047,-5.033184,-6.304001,6.680340,-2.866045,-6.706935,-3.443146,8.595773,5.179129,4.582458,9.465913,4.136275,-8.357732,-1.349929,4.814190,5.379407,-3.881336,1.012341,-7.329641,2.527492,0.593954,-3.916468,9.107691,7.437949,-7.666443,-7.631082,-3.288522,6.493755,-9.310695,-3.933991,3.512432,5.624690,2.284230,-5.780086,7.727139,-7.390786,-2.868778,7.921831,-1.976129,-0.965990,1.333637,-9.268864,-3.497869,1.646339,8.662283,-8.445824,9.100808,0.674647,-4.621624,4.349758,3.091995,9.825799,-1.709426,4.319638,2.734258,1.943236,5.089037,-9.365469,8.417462,-7.233226,8.804536,4.817130,-8.081667,1.678131,-4.823690,-6.500925,-9.328104,7.308389,-1.176240,-3.773331,-7.821260,6.365931,0.184518,5.820677,7.182196,-2.643525,-5.414447,0.756214,-9.748614,-5.198726,8.845008,-4.911531,-1.312684,-1.686041,1.762722,-2.885511,-5.557890,4.033007,5.457407,-8.470692,-1.701040,-2.677439,-3.607824,3.817936,-4.430079,-3.859132,-4.667591,-4.673330,-3.994887,-9.690393,1.674191,-5.206696,-6.272009,1.937594,-9.253763,-8.659175,-4.999281,-7.750606,-6.274750,5.539551,5.352947,5.319940,9.575607,-9.688893,-5.590598,6.475901,1.808561,-7.206710,2.743523,9.082299,1.427626,-3.167453,-9.668138,7.714603,-4.056756,-5.003377,-2.770997,8.924028,9.385302,9.096418,-1.207928,8.721513,-8.738410,1.786086,2.978115,-4.435237,-5.228112,0.047247,0.520303,-1.596662,9.767668,8.007230,-8.515352,0.256807,-1.585771,9.311647,4.251040,-1.462317,-9.151443,9.161238,-3.883907,5.321488,-3.120663,-8.539367,3.412450,2.651559,7.957081,-4.377522,-2.787559,3.592168,-3.708200,6.310112,3.529302,-9.421237,-0.788964,0.812503,7.464373,2.613763,8.837380,5.593143,-6.391778,-6.058035,9.762055,7.102795,-4.304067,-9.230310,-5.675320,8.218971,5.767094,2.995861,8.277571,-3.657646,0.817941,2.255318,4.935060,8.557312,9.096245,9.948287,-8.074146,-4.670318,5.648182,-1.410171,2.061487,3.684633,2.140239,-8.604976,-8.192665,1.068760,-0.961270,-5.580569,9.643656,-7.546148,7.099523,7.587143,-4.026344,5.960369,-8.231479,7.948534,8.738338,-2.743994,-7.627540,3.159637,1.309699,-0.248303,6.778663,-1.291704,1.723368,-8.555531,-9.842234,-6.388336,0.770563,8.927518,4.760585,9.339330,8.337316,7.648610,-4.200871,-2.071148,3.434721,-1.838037,-5.743385,1.301692,1.195272,-8.398404,8.932326,-9.135635,-4.157198,-2.607468,4.122914,-5.340875,2.900761,-7.185371,3.497116,-0.923328,0.433383,5.195836,0.714739,9.514811,-4.452940,-7.130608,2.858742,2.971303,-6.884490,9.746630,6.853664,4.090919,-6.556286,3.417692,-7.938441,-3.426236,-1.802599,3.949131,4.277055,-5.669237,0.873467,6.081405,9.136218,-5.412299,7.956494,1.235325,-0.285707,2.210629,-8.582829,-8.203218,-4.375619,2.832052,-3.350105,-9.310229,7.194728,-9.644741,-2.617650,5.677376,-3.598968,5.572514,-1.941356,-4.005365,7.532206,2.021091,-4.193610,9.193095,-7.323512,5.282056,7.255181,-3.814643,-5.123577,5.099225,6.155172,4.529218,2.941179,0.155126,1.338699,-4.083184,7.717452,7.511963,7.809840,3.006540,0.565667,-0.604623,-3.871308,8.155240,4.841015,4.647984,-6.596954,-9.348390,-3.367803,0.606782,-9.650490,-8.648823,5.203406,6.164017,-3.788371,-8.505654,-7.192840,6.680298,-1.697129,3.740734,5.534173,-4.641590,4.345897,9.286106,-0.488624,-1.577448,-0.490846,-3.981921,-2.673575,-2.268839,-6.185386,-8.238150,-7.428020,-5.693198,-1.304357,-5.298952,-1.243136,8.758930,-0.632764,0.682672,5.719218,8.950671,5.272022,4.877079,4.066656,-5.791222,1.635582,-6.657989,-5.095612,-6.524140,9.953538,4.890163,4.940097,2.403677,0.613680,-6.733914,-4.279843,6.953273,6.738471,0.129064,-3.066326,6.040454,-1.115973,9.427680,-4.150817,-8.523065,0.252249,2.481460,-0.918444,-4.924689,-0.381656,0.986193,-7.969665,-3.984464,7.276034,-8.393261,4.143973,0.384104,-7.890301,4.743231,-6.332315,-4.326055,0.158256,-1.413563,-3.292809,4.502163,7.447393,-7.984964,2.905736,-0.316456,-9.766679,8.405063,-5.318970,-1.489945,9.264586,8.125453,7.209366,1.700613,2.322359,-4.921852,-4.965445,-0.065844,-3.137487,8.603306,5.491270,0.195622,4.008913,-7.776239,8.556097,-4.462059,-4.349851,3.256662,2.084038], dtype = "float64")#candidate|2843|(1584,)|const|float64
call_2842 = relay.TupleGetItem(func_724_call(relay.reshape(const_2843.astype('float64'), [16, 11, 9]), relay.reshape(const_2763.astype('int64'), []), relay.reshape(call_2799.astype('int64'), [2304,]), ), 2)
call_2844 = relay.TupleGetItem(func_728_call(relay.reshape(const_2843.astype('float64'), [16, 11, 9]), relay.reshape(const_2763.astype('int64'), []), relay.reshape(call_2799.astype('int64'), [2304,]), ), 2)
uop_2845 = relay.erf(call_2768.astype('float32')) # shape=(12, 15, 5)
uop_2847 = relay.erf(call_2770.astype('float32')) # shape=(12, 15, 5)
func_1767_call = mod.get_global_var('func_1767')
func_1769_call = mutated_mod.get_global_var('func_1769')
var_2850 = relay.var("var_2850", dtype = "float64", shape = (1344,))#candidate|2850|(1344,)|var|float64
call_2849 = relay.TupleGetItem(func_1767_call(relay.reshape(var_2850.astype('float64'), [12, 7, 16])), 0)
call_2851 = relay.TupleGetItem(func_1769_call(relay.reshape(var_2850.astype('float64'), [12, 7, 16])), 0)
func_1680_call = mod.get_global_var('func_1680')
func_1682_call = mutated_mod.get_global_var('func_1682')
call_2856 = func_1680_call(relay.reshape(call_2787.astype('float64'), [7, 13, 16]))
call_2857 = func_1680_call(relay.reshape(call_2787.astype('float64'), [7, 13, 16]))
output = relay.Tuple([bop_2765,const_2769,uop_2772,call_2787,var_2788,call_2796,var_2797,call_2799,call_2842,const_2843,uop_2845,call_2849,var_2850,call_2856,])
output2 = relay.Tuple([bop_2765,const_2769,uop_2772,call_2789,var_2788,call_2798,var_2797,call_2800,call_2844,const_2843,uop_2847,call_2851,var_2850,call_2857,])
func_2871 = relay.Function([var_2764,var_2788,var_2797,var_2850,], output)
mod['func_2871'] = func_2871
mod = relay.transform.InferType()(mod)
var_2872 = relay.var("var_2872", dtype = "float64", shape = (12, 6, 7))#candidate|2872|(12, 6, 7)|var|float64
var_2873 = relay.var("var_2873", dtype = "float64", shape = (1456,))#candidate|2873|(1456,)|var|float64
var_2874 = relay.var("var_2874", dtype = "int64", shape = (2304,))#candidate|2874|(2304,)|var|int64
var_2875 = relay.var("var_2875", dtype = "float64", shape = (1344,))#candidate|2875|(1344,)|var|float64
output = func_2871(var_2872,var_2873,var_2874,var_2875,)
func_2876 = relay.Function([var_2872,var_2873,var_2874,var_2875,], output)
mutated_mod['func_2876'] = func_2876
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2896 = relay.var("var_2896", dtype = "uint64", shape = ())#candidate|2896|()|var|uint64
var_2897 = relay.var("var_2897", dtype = "uint64", shape = (15, 9, 10))#candidate|2897|(15, 9, 10)|var|uint64
bop_2898 = relay.logical_xor(var_2896.astype('uint64'), var_2897.astype('uint64')) # shape=(15, 9, 10)
output = relay.Tuple([bop_2898,])
output2 = relay.Tuple([bop_2898,])
func_2904 = relay.Function([var_2896,var_2897,], output)
mod['func_2904'] = func_2904
mod = relay.transform.InferType()(mod)
var_2905 = relay.var("var_2905", dtype = "uint64", shape = ())#candidate|2905|()|var|uint64
var_2906 = relay.var("var_2906", dtype = "uint64", shape = (15, 9, 10))#candidate|2906|(15, 9, 10)|var|uint64
output = func_2904(var_2905,var_2906,)
func_2907 = relay.Function([var_2905,var_2906,], output)
mutated_mod['func_2907'] = func_2907
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3244 = relay.var("var_3244", dtype = "int8", shape = ())#candidate|3244|()|var|int8
const_3245 = relay.const([[[10,8,-9,10,6,5],[-6,-6,-4,8,6,7],[-7,-8,5,-2,2,-1]]], dtype = "int8")#candidate|3245|(1, 3, 6)|const|int8
bop_3246 = relay.less_equal(var_3244.astype('bool'), const_3245.astype('bool')) # shape=(1, 3, 6)
bop_3249 = relay.mod(var_3244.astype('float32'), bop_3246.astype('float32')) # shape=(1, 3, 6)
output = relay.Tuple([bop_3249,])
output2 = relay.Tuple([bop_3249,])
func_3268 = relay.Function([var_3244,], output)
mod['func_3268'] = func_3268
mod = relay.transform.InferType()(mod)
mutated_mod['func_3268'] = func_3268
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3269 = relay.var("var_3269", dtype = "int8", shape = ())#candidate|3269|()|var|int8
func_3268_call = mutated_mod.get_global_var('func_3268')
call_3270 = func_3268_call(var_3269)
output = call_3270
func_3271 = relay.Function([var_3269], output)
mutated_mod['func_3271'] = func_3271
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3420 = relay.var("var_3420", dtype = "int32", shape = (9, 10, 16))#candidate|3420|(9, 10, 16)|var|int32
var_3421 = relay.var("var_3421", dtype = "int32", shape = (9, 10, 16))#candidate|3421|(9, 10, 16)|var|int32
bop_3422 = relay.greater(var_3420.astype('bool'), relay.reshape(var_3421.astype('bool'), relay.shape_of(var_3420))) # shape=(9, 10, 16)
output = relay.Tuple([bop_3422,])
output2 = relay.Tuple([bop_3422,])
func_3428 = relay.Function([var_3420,var_3421,], output)
mod['func_3428'] = func_3428
mod = relay.transform.InferType()(mod)
var_3429 = relay.var("var_3429", dtype = "int32", shape = (9, 10, 16))#candidate|3429|(9, 10, 16)|var|int32
var_3430 = relay.var("var_3430", dtype = "int32", shape = (9, 10, 16))#candidate|3430|(9, 10, 16)|var|int32
output = func_3428(var_3429,var_3430,)
func_3431 = relay.Function([var_3429,var_3430,], output)
mutated_mod['func_3431'] = func_3431
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3639 = relay.const([[[5,3,-7,-4,6,-5,5,-8,-10,6,5,4,-8],[8,-10,-9,4,-2,4,-10,-1,3,-6,7,-7,5],[10,5,-2,9,4,6,4,9,-6,-8,-3,-1,3],[7,10,10,-3,10,-6,7,9,-7,1,-10,-8,-4],[-9,-2,-2,10,10,1,-5,-9,10,-2,-9,-5,-9],[-7,-3,-8,5,-5,-8,6,7,1,8,6,8,-10],[-6,-7,-8,-2,5,-5,7,-7,7,2,3,-7,-7],[-9,-10,10,-4,3,-1,-4,2,-9,9,3,-9,1],[2,3,2,4,10,8,-1,7,3,-10,-1,5,3],[8,-4,-6,-1,-6,10,5,-4,-6,-5,6,-2,-4],[-5,3,-6,2,3,4,6,7,10,5,-6,-8,2],[8,2,7,10,5,-4,-3,4,1,9,-3,-9,-4],[9,-5,-6,7,6,5,-5,-1,7,5,5,-1,-3],[5,3,8,-1,-5,7,-7,7,10,-2,10,-7,1]],[[1,8,6,-10,5,3,3,7,1,5,-5,9,-8],[-7,5,8,-9,4,2,-4,-1,4,-6,-4,-4,6],[-5,-9,7,-7,5,10,2,7,7,-10,10,-2,5],[-5,6,8,-8,4,4,-8,7,-1,4,-2,1,9],[5,8,-9,9,-4,-7,-8,10,4,-1,9,-9,-1],[-6,-4,4,8,1,4,-3,1,-5,-2,-10,-4,-7],[-10,6,1,6,6,-7,1,-2,-10,-5,8,9,-4],[6,8,1,-4,-1,-8,10,-6,-10,7,-4,-8,9],[1,-6,6,5,7,-4,-6,8,4,9,9,1,-1],[4,-5,3,-10,3,1,10,7,-3,-2,6,-10,-8],[-6,4,3,7,8,4,-1,4,4,-1,1,-3,-6],[-9,-5,3,5,9,5,5,-5,3,-3,-7,-2,-9],[4,-4,-2,7,9,9,9,-1,3,10,-3,4,-10],[7,3,5,-10,8,-1,9,6,5,5,2,1,6]],[[2,4,-4,4,-10,5,-7,2,-9,-9,1,2,1],[6,3,10,3,-7,-6,4,-7,6,5,3,2,-1],[-5,1,-9,10,8,-9,-3,-9,7,-4,6,10,7],[5,5,-2,-3,8,9,-3,-7,1,-9,10,-8,4],[-2,5,-10,-1,-10,-7,6,-2,5,-6,-8,-6,-9],[-4,-9,-1,5,-4,-8,-1,-8,1,6,-2,9,-7],[5,3,-8,-3,9,1,1,10,8,10,-2,1,4],[-10,1,9,9,-2,-1,5,10,-6,1,4,9,-7],[-7,-8,-2,-4,-8,-1,-5,5,9,-5,-7,-3,7],[8,-3,7,-3,-1,-5,-10,-5,1,3,5,-7,-2],[-3,3,-4,8,-5,-5,9,-5,-10,9,-7,5,-8],[3,-3,10,-2,8,1,3,-10,-6,6,-5,-8,2],[-5,-7,-7,8,5,-6,8,-5,9,-9,-8,-7,-8],[-9,-7,4,-7,-6,-9,-4,2,-5,5,3,8,2]],[[5,-10,-10,-1,-9,-10,6,-1,-2,-3,-5,7,8],[4,10,-4,5,-9,-3,3,-5,-10,-1,-8,-6,-9],[9,2,4,5,-2,-8,-5,4,-7,-1,10,-5,-2],[7,-4,-10,-10,10,10,7,-6,-1,-4,-8,9,-7],[-1,-3,-5,-3,-5,-2,5,9,9,9,5,-4,-2],[1,-4,-2,1,9,6,-5,-7,7,8,7,-4,-1],[-6,-9,1,-2,8,-1,-1,-5,4,-9,-6,3,2],[1,8,-8,-1,3,-7,-7,8,4,-8,-6,8,3],[2,7,-8,4,2,-10,-9,5,7,10,9,7,-2],[2,-10,5,-1,-10,3,-4,-5,8,-9,-9,6,-4],[-1,2,5,5,-1,9,-3,2,2,2,2,1,-4],[8,8,-5,-4,-4,3,4,10,-7,-2,-10,6,-10],[-4,10,1,-8,-1,-10,9,3,5,-5,3,-9,-10],[-7,-1,-5,-10,-2,4,-2,10,3,9,-1,-5,9]],[[-8,-3,5,5,9,-2,-6,1,-4,-8,-8,4,-6],[10,-1,9,7,-8,-2,-10,-2,9,7,-9,-5,-7],[-5,-10,8,-2,1,10,3,-2,-10,5,7,9,4],[-4,4,-1,2,10,3,1,-3,-2,9,-1,-6,-1],[10,6,-8,4,2,3,-7,6,-4,4,7,6,-7],[3,3,6,-3,-7,5,-5,7,2,10,5,-6,3],[-2,9,8,-5,-5,-4,5,1,5,6,-5,-9,8],[-1,1,-6,-5,-6,-7,3,6,-2,3,1,-1,-3],[5,3,5,8,8,-1,-8,-7,10,9,-1,6,-6],[3,4,-6,-7,-4,3,-8,-5,5,8,10,-3,-3],[-2,6,4,7,-7,-8,-2,-9,-4,5,8,5,-3],[3,8,8,-4,7,-6,-5,7,-9,6,3,5,-1],[9,10,-3,-6,10,8,-8,2,-1,-9,2,9,-8],[-10,-10,7,-7,9,-1,-8,9,-6,2,3,5,-4]],[[-1,-9,-5,3,9,5,10,-5,-1,3,10,-6,-7],[6,2,1,2,4,8,-3,9,3,3,10,3,-3],[3,5,-8,-2,-2,-6,10,4,-7,-4,-6,-4,7],[3,7,2,5,8,8,-6,2,7,-9,-1,-7,-3],[-4,-1,2,2,10,-9,-1,10,8,10,-5,-1,7],[3,7,-6,-6,5,-5,-7,-4,1,5,7,-7,-3],[-3,9,6,-5,-1,-7,1,4,2,-10,10,-2,-3],[10,5,2,-8,9,4,-9,4,-1,10,1,-7,-6],[4,-3,6,-7,-9,-8,-2,2,-10,3,9,-1,1],[10,-2,-6,4,-3,5,1,1,-2,8,-2,-7,6],[-9,4,8,-8,10,-9,5,7,4,-5,-7,1,-1],[6,6,-3,-9,-6,10,-1,10,-7,4,5,9,-4],[-7,6,7,-7,3,1,6,3,3,-8,-4,8,-6],[7,-2,-6,7,6,-3,9,2,10,-7,-8,6,3]],[[-1,-7,3,6,6,-4,-3,7,5,4,3,-9,-8],[1,5,4,-5,4,-7,-3,10,6,-2,-9,-8,-8],[8,3,6,-8,8,-6,-4,-8,1,-6,3,-4,6],[1,8,-8,9,-2,5,-8,5,5,6,-2,7,8],[1,-4,-7,10,-6,-4,10,-2,8,-10,-5,2,-10],[-8,4,6,8,-2,-7,-4,3,-10,6,9,-3,6],[-4,1,5,-1,-5,-6,-9,2,3,10,4,8,-1],[3,-6,4,-1,5,4,7,-7,4,1,3,-2,7],[-3,5,4,10,8,1,6,-5,4,-10,5,8,-2],[10,-3,9,4,2,3,-7,3,-10,5,-1,-7,1],[-7,-8,7,-4,-6,8,8,-7,9,9,3,-5,5],[9,-9,4,7,-6,3,-7,-2,9,5,8,-10,-8],[-8,-1,-8,-5,-1,4,4,-4,-7,-3,8,-8,10],[6,5,-2,6,-8,-4,-3,1,-2,-5,-1,9,-3]],[[8,9,9,7,-9,9,-4,2,-9,4,-10,6,-5],[10,-10,3,6,3,9,-1,1,-6,6,-3,-2,-6],[5,10,8,-6,-4,-6,2,8,-1,2,9,-7,3],[-4,8,9,-4,3,-10,-2,-9,7,-10,-3,-3,5],[2,-9,-3,-9,-2,4,7,8,8,2,-8,9,3],[3,8,8,-1,4,-1,-6,-3,-1,-10,8,10,-7],[10,-10,-9,-8,10,-4,4,-6,-1,10,-5,-4,3],[-4,3,-1,5,-5,4,-9,1,7,3,4,8,-8],[6,-5,-4,-2,-10,2,-6,-10,-2,7,6,3,-9],[-1,-1,-7,1,-6,1,-1,-2,-6,2,9,7,-9],[9,-10,9,3,-2,-8,2,-7,-3,6,3,-4,-10],[-1,8,-1,4,-5,-5,-6,9,-10,-2,-8,5,-2],[7,-5,8,5,-8,3,10,-6,6,-1,-7,-8,10],[-4,9,5,-10,3,6,4,-6,5,-4,-10,2,7]],[[-4,6,10,-9,6,7,6,-5,-9,6,5,1,4],[-10,-5,-6,2,3,4,3,7,7,9,6,1,5],[-7,5,-8,-8,4,1,7,-7,7,-2,-9,10,1],[8,-9,-9,-1,-8,1,-1,-9,10,10,7,-9,-4],[8,-8,9,4,-1,6,7,-1,9,5,8,-4,-5],[8,1,-4,-5,1,-2,-5,8,-7,7,-5,-1,6],[8,-8,2,8,-7,2,9,-7,8,4,-5,-1,8],[-9,-8,8,5,-10,-3,10,-3,3,8,2,4,-2],[-8,1,8,-5,-5,4,-3,8,-5,8,-1,-9,-1],[-4,9,-3,-8,-5,6,-5,-4,-4,-5,5,-9,7],[3,10,9,10,10,6,-10,6,-10,-9,-2,-3,5],[7,2,5,-2,-1,1,-10,7,-10,-7,-4,-5,-5],[-8,-4,-8,-7,4,6,-9,6,8,-2,4,-3,6],[9,-2,10,5,-3,4,-3,-3,4,-6,5,-8,1]],[[9,-4,1,10,-10,-5,6,-7,-9,-1,-3,-8,7],[5,10,-7,7,-6,5,-4,-6,-9,9,5,10,2],[-10,2,-4,3,2,5,-3,2,6,-4,-6,-7,1],[-3,-7,-4,-5,-4,-5,5,9,9,-10,10,6,2],[-7,7,2,-10,-6,4,5,4,-5,9,8,5,-10],[6,1,10,-7,-7,-10,8,5,9,9,2,-2,-9],[-1,-8,3,9,-4,-1,7,-9,-9,2,10,6,7],[-5,-6,-1,3,8,-5,-8,-5,9,-1,6,7,5],[-1,9,6,-7,10,-9,-9,-9,-3,3,-7,9,-5],[7,-5,1,1,4,-4,10,-10,7,8,-4,-2,-1],[1,7,5,10,-6,5,-1,-5,-1,8,-7,-1,-2],[8,-3,-5,10,-2,5,6,3,1,2,6,2,-5],[3,-6,2,-1,4,9,7,1,-3,5,10,-9,-9],[-8,-3,2,10,10,-3,-4,8,-2,-7,7,4,8]],[[-6,-8,4,-10,8,2,1,9,5,-2,9,8,-1],[-9,-6,8,-6,1,-2,-6,4,-10,9,8,3,7],[-5,9,1,-8,-5,-3,5,-10,4,1,3,2,1],[8,-1,5,1,2,9,10,-8,-4,6,2,-9,7],[-4,-6,8,-8,-10,-5,-6,6,6,-9,9,-9,-9],[-7,4,2,3,-3,-3,-2,-4,5,-3,-3,-9,7],[-10,-4,-9,-7,5,1,7,-2,4,5,-10,-6,-1],[4,-5,-7,7,-2,-2,-9,10,8,-5,8,-4,-7],[-3,-7,-6,-6,2,-6,7,-7,-8,-10,8,6,6],[-5,8,5,7,-8,3,-3,-9,7,-6,-7,-1,-5],[-2,-6,-6,1,3,7,-7,4,-1,6,8,8,-8],[-10,-1,-9,5,-3,6,-5,7,-2,9,4,-5,-1],[-4,8,-1,2,-3,-5,6,-9,2,-3,8,-3,1],[6,-10,10,-6,-7,-7,9,9,10,3,-10,-7,-6]],[[-10,3,-8,9,6,3,10,-8,-8,10,-4,5,-2],[-4,9,6,-9,-3,8,7,3,-7,-10,1,4,7],[2,7,6,4,1,7,7,-7,3,-10,-5,-1,-1],[-5,4,7,2,9,-5,-5,3,6,-9,-6,8,9],[2,-6,-2,2,-3,-1,4,2,5,6,9,-9,-7],[-1,10,6,-1,8,5,1,-10,-2,-4,-4,2,-6],[-3,9,9,-3,-3,-4,-3,-10,-4,-6,-3,9,-3],[-8,-2,-7,-9,-5,10,1,8,10,8,10,10,6],[-2,-3,-7,-1,-5,-4,-5,-5,6,8,1,-5,-7],[3,-9,-3,6,-8,-4,2,7,6,-4,7,-6,3],[-3,10,-3,7,4,3,-5,2,9,-1,-1,-8,-7],[-4,10,-4,-8,-4,7,-5,3,-10,-10,-2,-8,5],[1,2,-10,2,-8,4,-1,8,-2,-7,-10,5,-1],[9,9,9,-9,7,9,-9,8,-4,-4,4,-5,10]],[[10,-7,2,2,-4,-1,-2,-4,10,8,9,-6,6],[8,3,-9,5,7,6,9,8,2,-8,1,-10,-7],[-10,-3,-3,8,-10,2,-4,1,8,-9,9,4,-8],[7,-3,10,-7,2,3,-9,-8,8,-10,2,-10,4],[-2,9,3,-1,-2,4,1,1,-7,-9,-1,-8,8],[1,-3,-9,3,-7,6,5,-9,9,-4,-6,-3,5],[-1,-7,5,7,4,4,-4,6,-1,7,-9,-1,-9],[3,1,-5,2,-1,1,4,-4,3,-9,7,9,1],[-4,-10,-7,-4,4,3,3,-3,-4,10,-7,-5,3],[8,9,1,-10,-6,-5,-7,8,-4,-4,5,-6,-5],[1,9,5,5,7,-5,8,-5,-2,1,2,10,2],[3,4,9,9,9,-7,8,-10,-10,6,1,-8,7],[8,6,-7,-8,-1,4,8,4,8,7,6,-8,3],[-10,4,10,7,3,-7,4,-1,7,-2,3,4,-9]],[[9,5,-9,-2,-4,-6,-8,-6,-4,-2,9,-4,-10],[-4,-1,7,2,-4,8,-7,-10,-3,4,5,2,-4],[-7,-3,-7,5,1,8,5,6,9,6,-6,10,-10],[9,2,-2,-2,-10,-5,-7,-7,10,6,-5,-9,4],[2,7,-9,-4,10,2,5,10,-6,-4,1,-7,10],[-2,5,-4,8,-10,8,7,-4,-1,-2,-8,-10,-5],[8,8,6,-7,-3,-9,-2,9,-5,-9,7,5,-3],[-10,-9,3,-7,-5,10,5,5,-6,4,-1,2,-5],[10,-8,5,3,3,1,-7,-4,-2,-10,-2,6,-2],[3,6,2,-10,-8,-10,-8,7,2,8,10,-4,9],[-7,-2,-3,-2,4,5,-6,-10,-4,-9,10,6,9],[9,8,-1,-2,-3,-9,4,-1,-9,1,-3,-8,9],[-8,-7,3,-2,4,6,-8,3,-6,-1,7,3,-9],[-5,3,-6,-1,1,1,-6,9,-4,-3,-4,-3,5]]], dtype = "int32")#candidate|3639|(14, 14, 13)|const|int32
const_3640 = relay.const([[[-9,-7,4,-2,10,-10,-4,-6,10,-6,6,-4,7],[-6,9,-10,6,7,1,-10,-3,-7,-3,-5,-6,-6],[7,5,-6,-6,-10,1,-4,-7,8,-7,-6,-8,-7],[4,8,-4,-3,-8,1,4,-2,7,-5,-10,4,4],[2,-10,6,2,7,-10,6,1,-4,9,10,-4,4],[8,1,-7,3,-2,5,-5,-10,5,3,-5,1,-4],[2,7,-10,-2,-6,-6,10,10,-1,-2,-7,9,4],[-6,-8,7,-8,3,-9,1,-8,4,4,-7,-8,8],[-5,5,2,4,4,7,-6,-2,-9,-10,-1,-7,8],[-1,-3,2,-7,9,2,7,-7,-10,9,9,4,-7],[6,9,9,2,1,2,-5,-7,-4,-5,-3,5,-6],[9,6,6,-1,-7,6,-2,5,5,3,-9,8,-10],[-8,2,1,-3,-9,-10,5,-1,-9,8,-7,8,-6],[-8,8,7,5,9,5,7,-2,-4,-6,-7,-10,-3]],[[-9,4,7,-2,-2,-2,-10,-6,-6,9,-2,6,-10],[7,10,-4,10,-4,3,-5,-5,-3,9,-10,-4,2],[3,-4,-10,4,10,9,-7,-8,-9,5,-9,8,10],[2,8,8,1,-4,-4,3,6,3,-4,-6,-5,6],[-1,-3,-4,-5,-8,-4,6,1,4,-3,5,6,8],[-2,-2,8,-5,-4,-3,-1,-3,-1,3,-6,-6,-9],[-4,10,-6,-6,1,4,4,-6,9,9,2,-9,-4],[4,-6,2,-10,4,5,6,6,1,-10,-9,6,-10],[-10,5,-8,3,-4,5,-7,1,3,-7,7,-8,-5],[-7,7,-9,-8,8,-5,-1,-5,-2,7,4,1,8],[-9,7,5,7,3,6,2,9,-8,8,-7,6,6],[-6,9,-4,-2,4,-7,9,7,-3,-3,6,-1,5],[-5,-3,-10,7,-3,-10,4,-2,3,2,9,8,-6],[-3,9,6,-8,-4,-8,-8,3,-5,9,9,1,1]],[[9,-1,-4,-3,-2,-8,9,-7,-4,-5,-2,-4,-10],[-5,8,-8,-7,-1,5,3,-4,8,-4,10,1,-3],[-8,7,3,6,10,-8,6,6,-5,1,-2,5,-5],[2,-2,2,-5,7,-1,-9,10,-5,-9,8,-2,5],[9,7,-7,-1,-5,9,1,10,-1,-2,8,-9,-10],[1,7,5,-8,-9,3,-3,4,10,10,-7,9,-5],[-9,-4,-1,-9,2,4,6,8,5,10,5,-5,2],[-7,-5,9,-7,1,9,6,-3,3,4,-3,-3,8],[-4,5,9,8,4,-6,-10,9,-8,-1,3,-2,-7],[8,7,8,-1,9,6,-3,-5,-3,5,-6,-5,4],[3,9,-3,10,2,-1,-10,4,8,-8,6,9,1],[6,2,-8,-8,-5,-1,-2,4,10,6,1,3,6],[-9,5,-2,-8,3,-1,10,-3,-2,7,-8,1,-3],[5,-10,-5,10,8,1,8,3,-4,-7,5,-9,7]],[[-1,1,-1,-8,-9,-9,-5,3,-5,9,-10,1,9],[1,10,7,-6,-3,-7,7,8,-7,5,8,-10,-7],[1,2,-8,1,-2,-9,-9,7,-5,-1,10,-5,-9],[4,3,2,3,-5,-6,9,5,6,10,7,6,8],[8,-3,-10,6,2,7,-9,-6,-7,3,-3,-5,2],[8,-1,-6,-2,6,5,3,-8,-3,-3,4,-4,-3],[7,9,1,7,-6,3,-1,-9,-10,4,-3,9,-7],[-5,1,9,-7,5,-6,1,5,-9,4,-5,-10,-4],[-7,10,-5,5,4,-2,-2,8,1,-1,5,5,10],[2,8,-7,-9,6,-4,8,7,-9,-8,9,8,6],[-4,1,-10,5,10,-2,1,-3,-1,2,-10,6,-10],[5,-9,-9,3,-6,-2,-10,5,1,10,-10,4,8],[5,-2,-1,10,10,-2,9,4,10,-6,-6,2,1],[-4,6,-9,-5,3,-9,-3,-2,2,2,-3,-9,-1]],[[5,10,7,-3,5,-5,4,-4,3,-2,4,-8,-1],[1,1,-5,-5,-4,-9,7,-10,4,-10,-7,-10,10],[6,-8,-1,6,-1,8,-8,-8,1,10,-6,5,7],[-9,-4,8,-6,-4,-7,9,-3,-2,9,-7,5,-4],[-4,-9,3,-5,-6,7,-1,-9,3,-6,4,7,-10],[-8,2,8,-8,-8,-4,10,-7,-5,9,-7,-3,9],[3,-3,-10,9,-10,1,-3,-1,-1,-10,7,5,9],[-8,-6,-2,-3,-1,-5,-9,7,-4,-7,9,7,4],[-5,2,2,-10,9,7,-6,-6,-1,5,3,10,6],[7,1,1,-2,-3,5,5,3,5,-4,-8,6,-3],[-5,-10,-2,-6,10,-8,10,-9,3,6,-9,5,4],[8,-9,10,4,6,-10,-1,-8,3,10,-3,-9,3],[10,1,3,5,-2,7,6,4,-6,6,-3,1,4],[-8,-3,-1,9,8,-3,6,-7,-1,-8,8,-9,-7]],[[-7,8,2,-4,-7,9,-9,7,-9,7,-8,8,-7],[-10,-5,1,-7,3,4,-6,2,-4,4,5,6,1],[2,4,8,-8,-2,4,7,-9,-5,-10,10,-2,-7],[10,-8,-1,-10,2,8,-10,-6,-8,-4,-1,-1,7],[-7,8,5,9,-8,-4,5,8,-5,-4,5,-3,8],[-7,9,10,5,9,-7,3,-9,4,2,-7,-10,-7],[4,3,8,-1,-8,-2,-1,4,9,3,-4,-4,-9],[-5,-2,6,-6,10,-3,-10,3,5,-5,2,-6,-4],[4,-9,8,3,-8,-8,2,-8,-8,-7,2,-5,-10],[-1,-3,-9,2,1,-3,10,7,-6,3,-3,2,-1],[1,1,6,10,-6,8,10,-6,4,-6,3,10,-8],[8,-3,6,7,-5,-9,2,-5,-3,-10,8,6,-6],[8,4,9,5,3,3,-9,2,-3,-5,-5,-1,-7],[8,3,-2,-10,-6,-2,-10,-2,-2,-1,-9,9,3]],[[2,8,3,5,-1,-8,7,9,-4,-2,-2,-7,1],[7,2,5,-4,-7,8,-4,1,10,-5,-9,8,7],[-8,-2,4,2,-1,-2,-7,-3,-1,5,-10,-3,-4],[8,-4,1,-9,4,2,9,-10,-10,10,-3,10,-6],[-1,-9,-1,-6,-10,-8,9,2,5,-7,-4,3,8],[-8,4,-3,3,1,-7,-9,-3,7,9,3,5,-1],[7,-5,-10,7,7,10,-10,-3,9,7,3,3,-5],[7,6,-9,2,10,-6,-7,-5,-10,1,5,9,1],[5,-3,-10,-10,-8,1,-2,-5,8,-9,10,-9,7],[10,-7,8,-5,-2,-3,3,-1,5,-5,-2,-2,-5],[4,-5,9,7,-6,-8,9,-6,-4,6,-3,-1,-9],[1,-7,6,-2,2,-4,-9,-5,-3,-9,-7,-10,-8],[-1,-1,-5,-4,7,-2,10,-2,3,7,8,-2,-1],[-10,9,-1,-9,5,-5,6,10,10,-2,-6,-4,4]],[[-5,7,-5,-6,-4,-9,9,7,-4,5,1,-3,10],[9,-4,-5,1,-4,10,-3,7,9,5,-2,-9,10],[-4,6,-4,-9,-9,-7,8,-7,3,3,1,8,8],[-2,6,-10,8,-6,10,-3,2,1,3,-6,-7,6],[3,-3,-1,1,-8,-10,6,1,3,-6,3,-3,-3],[-3,-10,-10,1,5,10,-1,-4,7,7,7,-9,3],[8,8,-6,4,8,-10,-9,2,10,8,-6,-5,10],[-3,3,-10,-5,-4,7,-9,-6,-5,4,2,5,-8],[-4,4,-5,2,-6,-10,-9,1,6,3,1,-7,-9],[8,9,-5,-1,7,-9,-5,-1,5,1,8,-8,-9],[2,3,-5,7,1,8,-2,-9,4,-5,8,7,-6],[5,7,-10,-10,-2,5,8,1,9,3,-4,9,3],[7,-5,4,-6,5,-4,10,7,-5,-3,-3,10,8],[4,-3,-7,7,-3,3,4,7,1,3,-5,5,5]],[[-10,-5,-10,8,-5,4,-4,-3,-6,4,-4,-3,3],[5,5,7,8,-4,2,-2,4,9,2,-6,8,4],[-5,8,4,-7,7,4,9,-2,7,-7,9,-8,7],[-1,-6,-6,-1,-10,-10,-4,2,-2,4,-1,7,2],[6,-9,8,6,3,4,8,1,-10,5,-2,6,-1],[9,-6,8,-4,5,-4,-5,-4,-5,2,2,-8,7],[-4,-8,-9,6,9,-9,8,-5,4,-3,7,-3,-1],[-3,2,3,-1,4,7,7,-2,10,-8,-6,5,3],[7,-2,-2,9,3,1,-2,-3,-3,-6,-7,-6,-3],[9,2,-9,1,7,-4,-5,-10,-2,1,3,8,-8],[-8,-9,-9,-9,4,9,-9,7,7,-2,-8,9,-10],[3,6,2,-10,-4,-1,9,1,9,8,-5,9,2],[-2,7,5,-9,-3,-6,-3,-1,5,10,-2,8,-6],[-5,-10,2,-9,-5,3,7,6,1,4,-4,4,7]],[[-2,5,7,4,-8,3,-9,2,-2,-8,-10,8,10],[3,5,-1,-4,-6,8,-2,8,2,2,7,-10,-4],[5,4,-3,1,-8,6,9,-5,-2,3,-2,5,-8],[-10,1,-1,-8,-2,-4,1,-5,6,-9,-3,9,10],[3,-5,-2,-9,1,-9,-7,-1,4,-4,9,7,2],[10,5,1,9,-9,1,4,-10,-10,-4,7,-3,10],[-3,-1,-6,4,-10,1,1,10,10,3,-9,-6,-1],[2,5,5,9,-1,-6,-8,2,-8,9,-4,-4,-8],[7,5,-6,4,-10,-9,7,-4,5,-9,-3,-9,-7],[-1,9,3,5,5,-6,5,10,-5,-4,-9,-10,5],[5,6,-6,-2,-8,10,-4,7,6,6,-5,-2,-9],[-7,9,-2,5,-6,-7,-7,-5,2,-4,9,-10,5],[-5,4,5,-3,-3,-9,-5,3,-5,-10,-7,-10,-1],[10,-6,-9,-1,-5,2,1,4,-6,-6,2,-7,-4]],[[5,7,4,9,4,1,1,-4,-5,-10,6,8,5],[3,-2,-8,10,-7,7,-6,-4,-8,2,-7,8,6],[3,6,-3,10,8,6,-5,6,-9,-3,-7,7,5],[-8,3,-9,-7,-4,7,-8,4,-7,-7,1,3,-8],[-8,-4,10,8,-6,-10,3,5,-8,7,9,10,-4],[1,-6,-10,3,-9,-3,-6,3,4,-10,8,-4,-1],[-8,10,-6,9,-1,8,10,8,-2,6,2,3,-3],[-3,5,-1,-7,-5,1,6,-3,-7,-10,10,-9,9],[-8,-5,-5,-7,2,-3,8,-3,4,-2,-2,3,4],[-3,-2,6,7,3,8,2,10,1,5,-9,-3,-9],[-2,6,6,8,-4,-9,6,2,-4,3,10,-1,8],[-6,-3,-6,7,-10,3,-2,2,9,5,-1,-6,10],[10,2,3,1,-5,10,8,7,-8,2,4,10,-5],[-8,-9,8,2,-9,10,-3,-6,-8,-5,-10,8,6]],[[5,9,9,2,8,7,-2,6,-8,-8,6,-3,-1],[-7,-6,10,9,1,7,-5,-3,-4,3,-6,1,-9],[10,-9,4,-1,-6,-2,-10,-2,4,3,-2,-2,-9],[5,-4,6,-6,-4,-8,1,-6,1,-5,3,2,9],[-3,6,1,1,-8,9,1,-4,-2,4,-9,-2,-8],[4,-2,-4,3,-8,-3,-2,-5,5,-8,-6,-4,-8],[5,-7,-6,-5,-3,-5,8,3,-2,2,-9,5,6],[10,4,-4,8,4,-2,4,7,-4,-3,-6,-5,4],[7,-3,-3,-4,-9,-5,-10,2,-9,1,-8,-3,-1],[9,9,-10,-3,9,6,-2,-10,3,-10,-5,-3,-7],[1,-3,-8,10,6,-4,-3,-6,6,3,8,9,-10],[7,1,6,3,-4,-2,10,6,-8,7,-7,5,-1],[7,9,4,-3,-9,5,-8,4,-5,9,-8,-10,4],[-10,-1,-10,-10,-6,-6,-7,7,8,5,7,-4,-1]],[[7,9,-1,10,9,8,10,4,-4,10,7,9,8],[9,-6,8,2,-7,-6,2,-1,-7,-6,-7,-3,4],[-5,-1,-10,-8,-1,-10,-4,5,-5,7,9,7,6],[8,2,-1,-4,1,3,10,6,8,-8,1,-1,-1],[2,-8,1,10,-7,-10,3,6,-3,-1,-6,-10,-3],[-10,-9,7,-7,2,2,-3,4,1,-7,5,-3,10],[7,-6,10,5,6,-1,-8,3,4,2,-1,7,-9],[-9,-3,2,10,-10,-3,-8,-8,2,-1,-9,-2,6],[3,-5,-8,-5,-5,10,-8,-4,7,9,-2,-3,-7],[1,-1,-7,10,7,6,8,-2,7,-1,10,-4,3],[-2,-2,-9,2,-7,6,-9,-7,8,6,-6,-9,-5],[-4,2,6,6,-4,-10,4,-3,7,5,9,-9,-3],[-8,-1,3,-4,7,-10,-10,7,-9,9,3,-6,-10],[-10,-9,-4,-5,-2,4,-5,7,-3,10,-5,3,2]],[[10,4,2,8,7,2,1,-4,1,-6,-7,-3,1],[7,-4,9,7,-5,-7,4,-7,8,10,2,3,10],[-7,8,-3,-1,2,-2,-3,-1,1,6,10,7,10],[-3,-9,5,-6,-5,6,7,-6,-10,-7,1,4,8],[-5,-8,-6,8,-4,1,-5,-2,-2,10,7,9,1],[-3,-1,-1,-8,9,-9,-1,-9,-6,1,-5,6,-3],[5,6,5,-1,10,1,10,-4,-7,6,9,10,10],[3,1,9,-9,2,-4,-10,-6,6,3,6,7,7],[6,4,-3,1,4,-1,-3,-8,-7,-5,9,10,-1],[3,-10,2,8,-1,-6,6,-10,-4,2,-4,-10,6],[8,3,-4,-7,-7,-10,6,7,-2,1,-1,-7,-7],[-6,7,8,7,7,8,-6,3,-1,7,-3,2,-3],[9,8,10,-4,-7,4,-6,5,-7,2,-9,10,-10],[5,7,6,7,-3,-9,3,3,-10,-10,-4,8,-6]]], dtype = "int32")#candidate|3640|(14, 14, 13)|const|int32
bop_3641 = relay.bitwise_or(const_3639.astype('int32'), relay.reshape(const_3640.astype('int32'), relay.shape_of(const_3639))) # shape=(14, 14, 13)
uop_3644 = relay.log10(bop_3641.astype('float32')) # shape=(14, 14, 13)
func_3428_call = mod.get_global_var('func_3428')
func_3431_call = mutated_mod.get_global_var('func_3431')
var_3650 = relay.var("var_3650", dtype = "int32", shape = (1440,))#candidate|3650|(1440,)|var|int32
call_3649 = relay.TupleGetItem(func_3428_call(relay.reshape(var_3650.astype('int32'), [9, 10, 16]), relay.reshape(var_3650.astype('int32'), [9, 10, 16]), ), 0)
call_3651 = relay.TupleGetItem(func_3431_call(relay.reshape(var_3650.astype('int32'), [9, 10, 16]), relay.reshape(var_3650.astype('int32'), [9, 10, 16]), ), 0)
uop_3652 = relay.erf(const_3639.astype('float32')) # shape=(14, 14, 13)
uop_3668 = relay.sigmoid(uop_3652.astype('float64')) # shape=(14, 14, 13)
output = relay.Tuple([uop_3644,call_3649,var_3650,uop_3668,])
output2 = relay.Tuple([uop_3644,call_3651,var_3650,uop_3668,])
func_3682 = relay.Function([var_3650,], output)
mod['func_3682'] = func_3682
mod = relay.transform.InferType()(mod)
var_3683 = relay.var("var_3683", dtype = "int32", shape = (1440,))#candidate|3683|(1440,)|var|int32
output = func_3682(var_3683)
func_3684 = relay.Function([var_3683], output)
mutated_mod['func_3684'] = func_3684
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3703 = relay.const([[[-1,-9,-2,-3],[-4,-5,-9,-6],[4,-10,4,-10],[-10,-1,4,-9],[10,9,6,9],[4,6,4,4],[4,7,-9,8],[5,-2,-1,-3]],[[-8,-2,-4,-8],[-7,-2,6,9],[2,-6,2,-2],[-3,6,-5,4],[-1,10,9,6],[10,-7,5,-6],[1,-2,6,-9],[-8,5,-2,-7]],[[-9,-8,4,-4],[-3,-1,-6,-7],[-1,-9,-3,-7],[3,-4,-5,10],[7,2,-4,-6],[-7,5,-5,2],[3,2,2,-9],[-3,2,4,-10]],[[9,-2,8,10],[-6,9,-9,-5],[2,10,-9,9],[-4,8,2,-8],[-1,6,8,-5],[10,4,-4,-4],[8,-10,-5,-9],[-1,-4,6,-6]],[[2,-8,-5,-3],[-8,-4,7,1],[-2,-2,-2,-3],[-9,-8,10,-4],[3,5,5,-2],[-4,-7,4,6],[-9,-2,-1,-3],[-5,5,-4,-10]],[[-1,4,-2,10],[3,-6,-3,5],[-3,2,4,-2],[8,-4,6,-7],[10,2,-8,-7],[8,-9,8,-3],[-1,-4,-10,-3],[6,9,5,7]],[[-9,-7,-1,-7],[-2,2,-2,-10],[9,9,-10,8],[-2,-8,-6,4],[5,-2,10,9],[-8,9,-5,-5],[2,-6,6,10],[2,7,-4,3]],[[4,8,-5,-3],[8,-2,-2,-9],[-1,-9,-8,7],[9,-10,-4,-2],[6,-2,9,-5],[1,1,-6,-10],[-7,4,-9,5],[-4,1,-8,8]],[[-3,7,8,-8],[-1,4,3,-4],[2,4,-8,1],[6,10,5,9],[8,9,-10,-7],[-7,-8,-5,-1],[-2,-10,5,-2],[3,8,2,5]],[[3,-8,-10,4],[5,10,-4,-9],[-5,7,-10,5],[-3,-1,-10,6],[8,-8,10,8],[4,5,8,-4],[-3,-4,-10,-6],[4,9,-4,7]],[[1,-2,7,-6],[1,-9,-5,3],[4,3,-8,8],[-8,6,-3,6],[10,5,-2,-10],[-2,2,-2,9],[2,-9,-3,-4],[5,5,-5,-2]],[[-10,4,-9,7],[-3,-3,3,10],[-4,-10,5,7],[4,-8,2,-3],[8,-8,-2,-10],[-3,-2,5,-4],[3,5,5,-8],[4,9,-9,-2]],[[-2,5,5,-10],[8,-5,-6,-3],[10,-6,10,6],[-1,1,7,-6],[4,-4,-7,-7],[10,10,-10,4],[-1,-7,-4,6],[-7,-5,10,7]],[[5,7,8,10],[6,4,5,8],[-6,-6,7,8],[-8,-2,6,-6],[-1,-4,-7,-6],[4,-10,8,2],[2,-8,9,5],[-9,-8,6,-8]],[[7,5,4,-6],[3,-7,4,7],[-9,-7,1,8],[10,-6,1,1],[-6,9,-8,-10],[1,-4,-9,4],[-7,6,4,-9],[3,-9,9,-10]]], dtype = "int8")#candidate|3703|(15, 8, 4)|const|int8
var_3704 = relay.var("var_3704", dtype = "int8", shape = (15, 8, 4))#candidate|3704|(15, 8, 4)|var|int8
bop_3705 = relay.multiply(const_3703.astype('int8'), relay.reshape(var_3704.astype('int8'), relay.shape_of(const_3703))) # shape=(15, 8, 4)
output = bop_3705
output2 = bop_3705
func_3713 = relay.Function([var_3704,], output)
mod['func_3713'] = func_3713
mod = relay.transform.InferType()(mod)
var_3714 = relay.var("var_3714", dtype = "int8", shape = (15, 8, 4))#candidate|3714|(15, 8, 4)|var|int8
output = func_3713(var_3714)
func_3715 = relay.Function([var_3714], output)
mutated_mod['func_3715'] = func_3715
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3898 = relay.var("var_3898", dtype = "float32", shape = (13, 9, 10))#candidate|3898|(13, 9, 10)|var|float32
uop_3899 = relay.atan(var_3898.astype('float32')) # shape=(13, 9, 10)
bop_3901 = relay.logical_or(uop_3899.astype('bool'), relay.reshape(var_3898.astype('bool'), relay.shape_of(uop_3899))) # shape=(13, 9, 10)
bop_3913 = relay.less_equal(bop_3901.astype('bool'), relay.reshape(var_3898.astype('bool'), relay.shape_of(bop_3901))) # shape=(13, 9, 10)
output = relay.Tuple([bop_3913,])
output2 = relay.Tuple([bop_3913,])
func_3932 = relay.Function([var_3898,], output)
mod['func_3932'] = func_3932
mod = relay.transform.InferType()(mod)
mutated_mod['func_3932'] = func_3932
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3933 = relay.var("var_3933", dtype = "float32", shape = (13, 9, 10))#candidate|3933|(13, 9, 10)|var|float32
func_3932_call = mutated_mod.get_global_var('func_3932')
call_3934 = func_3932_call(var_3933)
output = call_3934
func_3935 = relay.Function([var_3933], output)
mutated_mod['func_3935'] = func_3935
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3993 = relay.var("var_3993", dtype = "float32", shape = (10, 4, 13))#candidate|3993|(10, 4, 13)|var|float32
var_3994 = relay.var("var_3994", dtype = "float32", shape = (10, 4, 13))#candidate|3994|(10, 4, 13)|var|float32
bop_3995 = relay.power(var_3993.astype('float32'), relay.reshape(var_3994.astype('float32'), relay.shape_of(var_3993))) # shape=(10, 4, 13)
uop_4001 = relay.erf(var_3993.astype('float64')) # shape=(10, 4, 13)
output = relay.Tuple([bop_3995,uop_4001,])
output2 = relay.Tuple([bop_3995,uop_4001,])
func_4035 = relay.Function([var_3993,var_3994,], output)
mod['func_4035'] = func_4035
mod = relay.transform.InferType()(mod)
mutated_mod['func_4035'] = func_4035
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4035_call = mutated_mod.get_global_var('func_4035')
var_4037 = relay.var("var_4037", dtype = "float32", shape = (10, 4, 13))#candidate|4037|(10, 4, 13)|var|float32
var_4038 = relay.var("var_4038", dtype = "float32", shape = (10, 4, 13))#candidate|4038|(10, 4, 13)|var|float32
call_4036 = func_4035_call(var_4037,var_4038,)
output = call_4036
func_4039 = relay.Function([var_4037,var_4038,], output)
mutated_mod['func_4039'] = func_4039
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4559 = relay.var("var_4559", dtype = "uint8", shape = (15, 11, 5))#candidate|4559|(15, 11, 5)|var|uint8
var_4560 = relay.var("var_4560", dtype = "uint8", shape = (15, 11, 5))#candidate|4560|(15, 11, 5)|var|uint8
bop_4561 = relay.bitwise_xor(var_4559.astype('uint8'), relay.reshape(var_4560.astype('uint8'), relay.shape_of(var_4559))) # shape=(15, 11, 5)
output = relay.Tuple([bop_4561,])
output2 = relay.Tuple([bop_4561,])
func_4582 = relay.Function([var_4559,var_4560,], output)
mod['func_4582'] = func_4582
mod = relay.transform.InferType()(mod)
mutated_mod['func_4582'] = func_4582
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4582_call = mutated_mod.get_global_var('func_4582')
var_4584 = relay.var("var_4584", dtype = "uint8", shape = (15, 11, 5))#candidate|4584|(15, 11, 5)|var|uint8
var_4585 = relay.var("var_4585", dtype = "uint8", shape = (15, 11, 5))#candidate|4585|(15, 11, 5)|var|uint8
call_4583 = func_4582_call(var_4584,var_4585,)
output = call_4583
func_4586 = relay.Function([var_4584,var_4585,], output)
mutated_mod['func_4586'] = func_4586
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5526 = relay.var("var_5526", dtype = "float32", shape = (10, 5, 8))#candidate|5526|(10, 5, 8)|var|float32
var_5527 = relay.var("var_5527", dtype = "float32", shape = (10, 5, 8))#candidate|5527|(10, 5, 8)|var|float32
bop_5528 = relay.greater(var_5526.astype('bool'), relay.reshape(var_5527.astype('bool'), relay.shape_of(var_5526))) # shape=(10, 5, 8)
output = relay.Tuple([bop_5528,])
output2 = relay.Tuple([bop_5528,])
func_5532 = relay.Function([var_5526,var_5527,], output)
mod['func_5532'] = func_5532
mod = relay.transform.InferType()(mod)
mutated_mod['func_5532'] = func_5532
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5532_call = mutated_mod.get_global_var('func_5532')
var_5534 = relay.var("var_5534", dtype = "float32", shape = (10, 5, 8))#candidate|5534|(10, 5, 8)|var|float32
var_5535 = relay.var("var_5535", dtype = "float32", shape = (10, 5, 8))#candidate|5535|(10, 5, 8)|var|float32
call_5533 = func_5532_call(var_5534,var_5535,)
output = call_5533
func_5536 = relay.Function([var_5534,var_5535,], output)
mutated_mod['func_5536'] = func_5536
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5538 = relay.var("var_5538", dtype = "float32", shape = (7, 3, 4))#candidate|5538|(7, 3, 4)|var|float32
uop_5539 = relay.acosh(var_5538.astype('float32')) # shape=(7, 3, 4)
var_5546 = relay.var("var_5546", dtype = "float32", shape = (7, 3, 4))#candidate|5546|(7, 3, 4)|var|float32
bop_5547 = relay.divide(uop_5539.astype('float32'), relay.reshape(var_5546.astype('float32'), relay.shape_of(uop_5539))) # shape=(7, 3, 4)
func_2904_call = mod.get_global_var('func_2904')
func_2907_call = mutated_mod.get_global_var('func_2907')
const_5554 = relay.const(-7, dtype = "uint64")#candidate|5554|()|const|uint64
var_5555 = relay.var("var_5555", dtype = "uint64", shape = (1350,))#candidate|5555|(1350,)|var|uint64
call_5553 = relay.TupleGetItem(func_2904_call(relay.reshape(const_5554.astype('uint64'), []), relay.reshape(var_5555.astype('uint64'), [15, 9, 10]), ), 0)
call_5556 = relay.TupleGetItem(func_2907_call(relay.reshape(const_5554.astype('uint64'), []), relay.reshape(var_5555.astype('uint64'), [15, 9, 10]), ), 0)
func_2904_call = mod.get_global_var('func_2904')
func_2907_call = mutated_mod.get_global_var('func_2907')
call_5564 = relay.TupleGetItem(func_2904_call(relay.reshape(const_5554.astype('uint64'), []), relay.reshape(var_5555.astype('uint64'), [15, 9, 10]), ), 0)
call_5565 = relay.TupleGetItem(func_2907_call(relay.reshape(const_5554.astype('uint64'), []), relay.reshape(var_5555.astype('uint64'), [15, 9, 10]), ), 0)
output = relay.Tuple([bop_5547,call_5553,const_5554,var_5555,call_5564,])
output2 = relay.Tuple([bop_5547,call_5556,const_5554,var_5555,call_5565,])
func_5566 = relay.Function([var_5538,var_5546,var_5555,], output)
mod['func_5566'] = func_5566
mod = relay.transform.InferType()(mod)
var_5567 = relay.var("var_5567", dtype = "float32", shape = (7, 3, 4))#candidate|5567|(7, 3, 4)|var|float32
var_5568 = relay.var("var_5568", dtype = "float32", shape = (7, 3, 4))#candidate|5568|(7, 3, 4)|var|float32
var_5569 = relay.var("var_5569", dtype = "uint64", shape = (1350,))#candidate|5569|(1350,)|var|uint64
output = func_5566(var_5567,var_5568,var_5569,)
func_5570 = relay.Function([var_5567,var_5568,var_5569,], output)
mutated_mod['func_5570'] = func_5570
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5596 = relay.var("var_5596", dtype = "float64", shape = (5, 14, 3))#candidate|5596|(5, 14, 3)|var|float64
uop_5597 = relay.cosh(var_5596.astype('float64')) # shape=(5, 14, 3)
func_1680_call = mod.get_global_var('func_1680')
func_1682_call = mutated_mod.get_global_var('func_1682')
var_5606 = relay.var("var_5606", dtype = "float64", shape = (1456,))#candidate|5606|(1456,)|var|float64
call_5605 = func_1680_call(relay.reshape(var_5606.astype('float64'), [7, 13, 16]))
call_5607 = func_1680_call(relay.reshape(var_5606.astype('float64'), [7, 13, 16]))
output = relay.Tuple([uop_5597,call_5605,var_5606,])
output2 = relay.Tuple([uop_5597,call_5607,var_5606,])
func_5610 = relay.Function([var_5596,var_5606,], output)
mod['func_5610'] = func_5610
mod = relay.transform.InferType()(mod)
var_5611 = relay.var("var_5611", dtype = "float64", shape = (5, 14, 3))#candidate|5611|(5, 14, 3)|var|float64
var_5612 = relay.var("var_5612", dtype = "float64", shape = (1456,))#candidate|5612|(1456,)|var|float64
output = func_5610(var_5611,var_5612,)
func_5613 = relay.Function([var_5611,var_5612,], output)
mutated_mod['func_5613'] = func_5613
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5830 = relay.const([[[2.597269,6.337690,-9.574442,-2.693361,3.809853,-8.627212,-8.549760,-2.259570,-2.805950,-7.145530,-2.571304,1.344118,0.146521,-5.535071],[-2.815746,-5.940549,0.908421,-3.546468,-9.843006,-5.341990,-5.363940,8.436414,8.436034,-5.554784,-5.260086,-0.637864,-1.080863,2.648742],[-2.794557,7.959863,0.968458,-7.537106,3.922523,0.310741,-6.416042,8.480601,-5.105894,7.539857,6.544063,1.034809,-7.165621,-9.962355],[-6.573145,0.815791,6.241488,9.236548,-1.323001,4.692388,6.934176,7.190303,5.964800,-2.982389,3.897830,9.711188,1.357430,-6.331549],[6.371509,-9.993972,-8.369050,-9.562720,-9.255243,4.689555,7.328664,-1.088889,9.253505,-9.875174,7.840833,-3.015252,-5.113109,0.613235],[-2.687830,-0.417805,-2.788662,8.146691,-8.745325,-5.573248,-1.766101,2.414566,-6.123911,-4.422661,-8.777386,-8.579598,5.997154,-8.255158],[1.297731,1.526541,-7.389933,5.787687,4.520361,4.549038,-5.054732,-1.875996,0.786057,-7.270475,-6.738480,8.381590,-8.746007,-1.876611],[-9.553951,8.970964,-7.776377,-0.189089,-2.211603,5.846337,-1.550418,7.000189,-0.647217,8.499565,-8.260424,2.110409,-8.468021,3.555116],[0.497893,-2.431748,-1.418352,6.069528,3.544783,4.282042,4.376230,5.161943,-3.583243,-8.359630,-5.274802,-5.226516,7.722171,8.243132],[0.444658,-8.271448,-3.735489,-1.396038,9.174626,8.178361,8.827176,-8.794195,8.826821,6.833771,8.366269,-0.366243,0.998166,-3.766638],[3.477532,9.235499,-3.150389,4.435967,-2.780959,8.791761,9.110105,-3.835040,-9.288160,6.126417,-6.302284,9.596381,-2.180254,-5.154583],[-3.825182,-3.749417,-7.080645,-3.540532,-8.019979,-9.838742,-5.459788,-1.055909,-8.104525,-1.094973,9.819908,8.867290,-5.468116,8.690530]],[[-4.510999,2.095052,-6.920219,-6.256576,2.737403,3.368150,-8.498322,-8.107616,-9.279848,-1.680241,-0.797345,0.207735,-9.590106,8.289093],[7.537031,4.616609,-1.375498,-2.085057,2.732818,-4.617968,-6.063098,-0.895435,6.944458,0.882029,3.267484,-8.978685,-7.726980,6.034969],[-4.163555,-3.615419,-4.649713,-9.774376,-8.408428,0.313807,9.318690,-3.069160,-8.104558,7.819829,4.507793,3.048415,-8.106781,-4.059662],[6.503088,-7.479655,8.632883,1.248920,-0.619892,-6.385570,-5.070001,-2.569912,8.300536,8.028498,7.744373,8.283147,4.571080,0.172464],[8.165220,4.440574,-5.757192,-2.781188,-2.985768,3.001348,7.588964,2.822372,0.045191,-5.956127,-1.798432,-3.306096,-3.164701,-5.211716],[-4.063867,1.401152,-3.029555,-6.030370,-0.241532,-3.941354,-7.434427,-2.486236,4.363675,-4.341816,3.326258,-6.926649,-8.292625,-8.097962],[-0.963831,9.027617,-2.480665,-1.612656,7.158193,8.763454,-2.291632,-5.592754,0.749039,-2.524034,-0.893089,-1.939792,3.795538,7.168894],[3.805915,-2.150578,-2.790478,7.173912,4.511978,7.453410,-6.596357,-0.750641,-7.260910,-5.020386,7.991404,5.811145,9.203209,-2.110611],[-9.517626,-5.038598,9.685216,6.905884,-8.518411,-6.871699,6.767678,-9.071225,8.409494,-9.006319,5.854060,5.113890,3.168638,-7.661587],[-4.956654,-6.790216,-0.351459,1.591888,0.046339,-9.557515,8.565277,6.416837,-5.524709,-6.025346,4.096525,-5.942877,7.838351,9.244285],[-9.698313,1.064526,-1.174767,1.319629,4.059788,-8.120887,4.468578,-3.103762,-9.296468,6.861902,-1.945316,-8.563663,-5.056392,-5.276613],[-2.221047,7.905925,-3.228153,-3.510547,-0.200915,0.867835,-5.719505,-1.818675,-7.634710,-2.424487,1.243777,-8.677819,3.141964,1.794974]],[[3.722580,-9.728136,7.374538,-5.732824,-2.991130,8.434289,-0.963527,-1.203260,-1.533645,-2.065154,-9.284654,0.575415,2.148738,9.524923],[-7.647676,-5.708869,-0.610619,-6.195909,-2.344659,3.363665,4.691293,7.012708,-3.374508,-9.506310,8.792486,8.304755,2.361995,7.759259],[-3.514205,3.364199,6.498673,-7.000985,-0.927347,9.187929,3.866879,-9.387919,1.871400,-7.411087,0.031533,3.304807,-1.971920,-3.306459],[1.540533,-5.462565,-4.301728,4.979793,6.168861,-9.522843,-8.436282,2.213020,-0.985127,-8.920761,7.701485,8.552784,3.422663,0.550091],[-1.467866,9.947367,9.312579,8.550763,6.565649,1.341232,1.494639,8.980170,-7.739634,0.787553,-7.737642,-8.816656,0.229378,-6.370171],[-5.008263,-9.628870,-8.142357,7.803654,0.884987,9.957316,3.724523,6.126059,-9.596906,-0.116238,1.490007,-8.337440,2.933333,-0.834867],[-5.576788,7.984464,-2.840727,3.695120,5.993796,1.717794,-2.088540,8.309347,3.823724,-6.788784,5.356830,-6.626056,-4.598616,-9.076976],[-5.040682,-4.330713,-6.420589,0.288771,9.938919,7.847409,4.602349,8.770132,1.600057,8.733597,-4.484721,0.811050,-7.306389,-7.540919],[-6.548996,-7.569883,9.602063,5.189273,-2.159041,7.780221,-0.002588,-0.750649,1.569194,9.209180,2.387570,2.264424,-1.333861,5.766436],[3.712580,0.310608,8.824229,-7.328186,3.963965,-4.674040,-8.152012,3.224267,-4.288544,7.378596,-6.511310,-6.545113,8.365263,7.052770],[-2.153751,2.973343,-6.525349,5.523125,-0.631391,2.069294,-6.026994,-9.895285,6.685331,9.420025,6.757356,1.090534,0.997830,6.879167],[7.407370,-5.054666,-8.177468,8.902500,-6.275581,-0.330216,-1.670118,-3.530642,3.562629,-2.877644,3.333796,-9.724373,-4.259302,-9.501128]],[[6.583463,-7.219748,-3.331836,7.652345,-7.979548,4.420307,2.367465,-4.833084,3.949739,-4.728245,7.695238,6.848330,-5.108401,9.702230],[0.248747,-7.706644,-9.347108,-0.559265,4.849460,1.824339,-7.162063,9.193712,-7.728900,-8.849095,-6.515626,-2.858801,3.432130,-3.843144],[8.849534,-7.912253,5.901103,7.554308,4.286875,-3.689117,5.171663,8.255063,9.485355,-6.541706,-3.618556,3.671810,2.501006,-9.188166],[-6.977314,5.958786,-8.354367,-9.180484,-0.366258,0.124379,8.076067,9.646806,2.999850,8.895743,8.238943,-0.493030,-0.055705,-5.135436],[3.267697,-6.411006,-8.984064,8.731125,6.962410,-9.916789,-4.353665,4.736247,-3.102106,-3.116463,8.875273,-1.176965,1.164131,-0.175954],[-9.349569,-9.792336,0.824513,8.456755,-2.964354,4.146908,7.330246,1.894726,1.730480,5.056965,0.215711,-0.346707,7.051102,9.011032],[0.507112,-1.643545,3.218774,-3.296663,3.002147,-9.703265,-6.255613,1.302128,5.315869,5.721054,-7.762655,-3.077657,0.813751,-7.544809],[3.158516,0.315254,-4.950016,2.283779,-6.483224,-8.020790,0.971279,7.563095,-9.629594,1.067057,-7.304955,9.481890,-8.319722,-7.534082],[-3.485576,-1.942551,2.810441,-3.295003,-9.462007,4.240663,8.463945,-0.275513,-9.980565,4.572845,3.550756,-1.398444,9.880155,-3.441242],[-2.811099,7.816598,7.365332,-2.508908,-8.886637,-7.513580,-7.101567,8.860668,-6.622959,9.835919,-3.235891,9.384614,3.069735,8.791794],[7.016951,-3.006163,-7.455219,-7.474986,-0.453742,-1.947322,-4.864296,8.767665,-9.683699,-7.921414,-4.812443,3.842347,-1.778078,-0.753624],[4.582663,2.087228,4.490507,-6.660376,5.578646,-0.520973,3.293283,-2.267528,2.929415,0.449248,1.390077,-2.448847,8.317554,-1.360016]],[[1.073517,9.601572,-3.154356,4.071887,2.611434,2.853388,6.802675,-4.328205,3.084304,-3.160699,-2.297210,-9.724356,5.539255,1.974346],[5.596321,2.076573,8.054591,4.826811,4.110188,6.071772,-8.581787,1.208301,-7.837857,-1.742360,7.126300,8.640144,-0.051585,9.204296],[-8.454328,-8.321165,-8.933708,-8.947732,0.858097,9.341554,7.322769,8.805060,8.374392,5.704360,-1.639090,6.661820,-9.730137,4.828111],[9.601376,-2.909380,1.309042,6.330710,-9.039241,2.493821,1.353351,-4.347187,-2.911019,-1.572497,4.240796,2.471998,9.779931,3.229078],[6.686750,3.448528,0.314799,2.234078,-0.977967,-4.870735,-0.104499,-1.148337,-6.281561,-3.655561,-7.872007,-3.831526,-0.351258,9.137979],[1.549638,1.493250,2.940726,8.425121,8.886902,-1.809760,9.564377,-8.078253,-5.888826,4.371210,-8.301896,3.609452,-2.576277,-8.776940],[-1.042336,-9.806171,-6.559456,-7.774297,-6.267586,-3.695282,-8.328846,-4.088262,8.092686,-6.711692,4.442458,-4.954740,9.705225,8.581787],[6.690176,8.833215,6.568429,7.127037,0.546128,-0.054350,0.121238,5.900812,1.647691,0.909881,5.417957,-8.669869,4.087020,-1.227037],[2.139077,-2.036896,3.417999,-0.552962,-0.809407,-8.944074,3.328389,0.200237,0.946598,9.161799,-8.963537,7.890541,-8.292713,7.384739],[-9.449047,-4.443969,6.873329,-5.596551,-1.711211,1.000212,0.895789,4.586345,-8.318434,5.863546,2.126063,-8.119329,-5.775214,8.659207],[-8.165790,-4.004193,-8.131937,-2.758717,-1.646152,-8.059141,5.287412,5.179916,5.288554,8.395865,9.094015,6.749545,3.224815,8.201903],[3.110430,-4.465285,5.869953,-5.838918,-6.086136,3.593495,-9.701907,7.881369,2.105055,-4.250694,6.876349,5.354159,-6.827325,-9.902758]],[[-3.873773,6.272794,-7.374148,6.538992,2.540787,-9.552118,-6.345625,-9.183385,3.762658,-3.343989,-1.436615,-8.133740,9.732490,-7.594076],[-3.759036,3.186976,-5.672754,9.659951,1.518733,-2.473871,-9.337729,-2.943874,-7.704495,7.961564,-4.100272,5.903374,-3.430304,5.971943],[1.153225,-2.208458,-7.157253,-2.594182,-8.957415,4.586699,6.491378,-1.196006,-4.160287,-8.013842,9.222532,7.226383,-4.986569,-3.264344],[-9.248157,-9.019038,-3.559650,2.380854,-5.320399,8.287971,4.608712,-8.116012,1.343139,2.074505,8.629935,-2.059302,4.825713,7.031026],[-1.639257,1.990338,5.279449,-3.668797,-6.531014,-7.318837,-8.120689,5.070100,-6.935556,-7.902560,6.088112,-0.709451,7.101868,0.264323],[-6.786062,-5.877837,9.782653,9.367486,9.966018,-8.930091,4.175736,2.102445,-9.408773,-3.790526,-5.988999,-1.536936,-0.824993,4.632579],[-0.927055,-2.014603,0.553319,1.851471,-9.354470,5.049568,8.318662,2.929686,-8.740596,-7.183709,-7.102806,4.273177,2.559976,-3.128675],[-5.145480,1.784134,-1.689942,7.438680,3.292996,-3.206259,1.480058,7.632480,6.951662,-9.340462,2.921291,0.633598,1.576837,7.621801],[-3.649075,-5.252429,9.606561,4.187739,8.955220,9.927953,-7.871465,1.780199,4.515327,-6.342469,7.651911,-5.682503,9.292134,-1.921567],[-2.599399,2.297766,8.611232,-7.431838,8.310117,0.134193,-7.202526,7.505595,-4.111685,2.549382,-6.262391,4.939336,-5.365496,-4.392961],[2.597257,-9.931849,-8.009225,-8.754463,9.338253,-0.997295,2.004857,1.169231,-2.956520,-3.153234,8.328272,-2.095673,9.873155,-1.398414],[5.804886,4.323412,1.158918,2.375437,2.967324,-6.064426,-0.950882,2.813571,-6.746815,4.723669,-0.320582,9.190901,8.260345,4.923697]]], dtype = "float32")#candidate|5830|(6, 12, 14)|const|float32
uop_5831 = relay.log(const_5830.astype('float32')) # shape=(6, 12, 14)
func_724_call = mod.get_global_var('func_724')
func_728_call = mutated_mod.get_global_var('func_728')
const_5837 = relay.const([[-5.120215,-7.855218],[-7.124759,-2.461526],[5.713290,-6.520537],[5.442520,2.736378],[8.580434,-1.922459],[6.435040,9.656203],[0.354847,-8.400453],[4.061766,8.910912],[-0.844054,1.152968],[-5.840261,-4.132407],[-8.679427,-1.802076],[-0.115394,2.827856],[-1.126909,-7.656040],[-4.221613,1.393868],[-1.123086,7.140172],[8.566523,6.402048],[4.242694,-0.790447],[-5.443212,7.278763],[-2.688348,-6.320095],[-0.082867,-4.148189],[-5.609485,-4.546798],[-2.001152,-6.166308],[0.753305,6.240543],[-3.499505,-6.267218],[8.406628,-7.901532],[-0.755431,9.190819],[0.692391,9.372632],[8.716669,-3.743549],[-1.330454,7.010681],[6.750965,9.289683],[5.379396,4.327095],[9.481709,9.459862],[6.169438,-0.760410],[-0.388812,-1.578291],[-8.634920,2.041897],[1.829970,4.856364],[-2.350991,-7.428780],[-7.455131,-1.429056],[-8.899417,9.618204],[3.108684,1.280990],[-7.375411,-3.380254],[7.141623,-8.614577],[-0.986065,6.145856],[-0.853813,3.835712],[9.734368,-4.050659],[3.910406,-3.404330],[-4.584051,5.321646],[-6.172502,-1.019438],[9.353723,9.738962],[6.063243,-2.502897],[5.500982,8.919038],[-1.143743,-5.182052],[1.763223,3.022851],[2.556036,-8.695679],[2.388638,-2.608875],[-8.852807,5.235500],[4.585473,-9.520194],[-7.818618,1.434736],[9.132956,5.976029],[6.734336,8.752960],[-9.314005,-6.171701],[-2.611327,-8.505680],[-8.302430,-4.090075],[0.367042,-9.253416],[-8.770593,-2.680902],[9.781272,9.521163],[-9.279805,-6.654049],[-0.918436,-1.823526],[-5.786869,2.838913],[-6.150754,2.101336],[-9.787691,9.435924],[3.370972,-1.962532],[4.308563,-5.759476],[-5.423811,6.140062],[2.522692,3.741789],[4.087785,-1.535533],[-1.997825,7.679584],[7.299812,7.914027],[-2.995894,-1.660146],[4.436821,5.646404],[1.420494,3.910437],[4.730713,-1.998269],[4.507870,0.694085],[-4.386257,-3.085438],[1.703736,0.668895],[-1.252517,-2.809037],[7.187766,-4.214632],[2.789542,7.569460],[-3.922483,7.976611],[1.719624,-1.147328],[2.871365,-2.516327],[9.322612,-0.500351],[-4.456400,-0.900458],[-5.880429,0.254944],[6.539090,-2.050299],[8.769950,1.329136],[9.402070,-3.539359],[-9.685089,2.253872],[-2.782079,2.416191],[-7.988325,-8.585410],[7.432235,-0.645877],[0.667632,-2.553438],[2.800804,9.358709],[-6.823877,-5.782206],[6.743922,6.731890],[9.422524,6.546650],[-7.725661,-8.814468],[-9.936301,4.280600],[4.007945,-6.694049],[3.945111,8.983905],[6.527881,1.196502],[8.418315,1.834545],[-5.357900,-2.779646],[6.842009,4.512909],[1.026766,8.463219],[-4.957765,6.637261],[-5.341608,-2.065630],[-4.627694,-4.488946],[9.954450,-7.069496],[-4.324279,0.177723],[-0.479550,-5.179813],[-8.621977,7.032872],[8.384422,2.377655],[4.111837,2.571136],[-3.135955,9.282143],[5.633489,1.953593],[4.274915,6.496122],[4.717308,2.589387],[5.453015,-2.875715],[7.052743,5.899200],[-2.434139,7.660796],[4.170044,2.884487],[-9.479833,9.481539],[-2.676797,-4.372239],[-6.508409,3.754853],[1.725268,1.782483],[7.066940,-4.523294],[0.004884,0.689658],[-8.748149,8.612574],[-4.199444,-9.905619],[4.898882,-1.808854],[-8.696373,3.008042],[6.536979,-5.609243],[8.622766,5.722758],[9.952495,-8.586669],[9.276280,-0.979084],[-3.005456,2.754996],[-5.909481,2.649499],[4.810438,-3.028500],[2.026061,-6.125171],[-4.896332,8.423345],[-1.021453,-9.865684],[-9.076194,-3.882798],[1.417813,1.722767],[-4.210867,-6.114393],[-2.457280,-6.198512],[2.764706,9.622996],[0.370773,8.438792],[4.587672,1.479834],[0.600213,1.428746],[-3.124814,2.507222],[8.373866,2.825334],[-9.932300,-3.205775],[-0.752642,-2.217779],[0.138815,-6.251372],[-8.582424,0.382955],[-5.941101,1.225505],[-1.520033,9.402545],[0.583797,-1.559672],[7.036075,-5.434443],[0.801162,8.654282],[-2.457027,-3.370474],[9.282908,-4.718083],[-6.373494,7.887640],[-9.797219,1.578156],[-0.129628,-3.543261],[3.332625,-5.993510],[-9.650158,-7.727134],[8.778389,7.299721],[-0.478523,-8.844138],[-1.305375,9.511871],[-9.975096,7.765232],[4.458877,5.537126],[7.048098,7.349100],[8.580093,-9.083369],[6.579186,1.065975],[-0.894648,-2.417791],[-0.428733,-2.380015],[1.690090,-7.281032],[7.180931,-8.561539],[-0.681438,-6.485289],[3.087621,-7.384151],[7.963747,4.007713],[-8.457046,8.986655],[6.424593,2.621930],[-9.934204,9.799568],[0.046030,6.955728],[8.300913,5.901107],[-5.234664,-9.458270],[-8.424171,-3.539622],[2.317530,-0.622018],[-7.422592,-2.432290],[7.276901,-5.578513],[2.017367,1.165641],[1.057185,0.551196],[-5.106934,-8.625708],[-0.212303,5.290522],[8.192685,-1.530732],[9.110998,-2.333956],[6.615522,0.230505],[-6.029830,-2.614692],[6.581766,-2.869791],[3.439985,-7.347830],[8.114393,-7.407973],[7.190075,-2.482197],[6.162938,6.283651],[8.068224,-0.179499],[-0.051041,3.751305],[4.782640,-6.864085],[4.109379,4.622136],[8.324493,-6.188608],[-2.667065,-9.793843],[-3.889697,6.384432],[-0.091707,-6.081857],[-7.050578,-6.202245],[1.188586,-5.133251],[4.398249,0.987578],[9.859999,6.434568],[-6.322212,3.024413],[-2.087409,-8.978403],[-6.815635,-6.439539],[-0.873256,-2.730156],[-7.040289,0.811689],[-6.017425,-6.311161],[9.839522,-1.190035],[8.695311,1.301368],[-4.915458,-0.880794],[-5.362310,1.480028],[-5.234016,0.256805],[4.869594,-8.588831],[-4.390169,7.457345],[8.680910,7.900149],[0.944240,6.235717],[6.327826,1.804136],[-7.568911,6.930759],[-8.504771,2.495466],[-2.860743,-7.109682],[6.567724,2.281695],[-2.009537,-4.572084],[7.358685,-2.858863],[-7.451823,6.954052],[-3.559999,8.635226],[-8.726678,-7.660832],[7.229121,-1.378157],[-2.533356,4.422076],[6.635553,-2.178657],[2.699031,2.793880],[-3.221220,-7.478373],[4.154370,-6.940835],[-6.174474,-5.759103],[-7.284476,1.175763],[9.398724,-7.095705],[-2.543340,8.573516],[-7.080121,-5.674111],[-4.839572,-7.529706],[2.587415,0.837019],[-7.947437,2.099475],[0.203373,-5.370248],[-9.221564,-1.085606],[1.233084,5.963848],[-7.378703,3.181183],[-6.484067,2.893947],[5.475460,8.515638],[-4.685294,4.578695],[7.451652,5.178696],[2.868692,-1.048902],[0.145155,6.290603],[6.358409,7.646307],[7.913276,6.369053],[-0.624540,-7.109082],[-0.377024,-9.396426],[4.379074,-4.952263],[-8.026928,1.446177],[7.133206,4.544046],[-3.625222,6.091032],[-9.761981,-0.744787],[0.323906,4.750877],[-3.216666,0.747185],[-9.313230,3.769205],[9.698474,-2.327460],[9.254957,3.644727],[2.486897,8.308591],[8.214170,-4.638740],[5.504788,8.053949],[-2.833428,-5.334963],[0.659908,8.572856],[-7.044126,3.654766],[-1.666796,8.890824],[5.271746,-6.040134],[-9.613472,9.517563],[-4.912481,7.295285],[-7.645845,-6.914763],[6.164372,2.159803],[-3.725078,-2.020617],[6.093260,4.942604],[6.472738,2.591693],[5.616185,-3.227661],[5.937606,-0.888277],[2.479837,-3.300245],[-8.849853,-7.105424],[3.762896,-3.463624],[-3.174756,-2.685396],[-4.751349,-4.942381],[4.818968,2.013038],[7.981459,-7.688662],[0.025344,9.764021],[-4.629801,-9.368356],[-8.607792,-9.128115],[-5.712772,-0.927380],[-4.887627,-9.691403],[-6.143391,-7.402533],[-6.555606,-0.780676],[6.841635,-1.362896],[2.292043,4.665090],[5.344669,0.395493],[-0.639694,-1.464285],[-6.636776,-8.256195],[9.340465,-1.666079],[2.990450,1.072755],[-0.852658,8.257078],[-0.290646,-4.337338],[1.093510,0.017038],[3.127690,4.014542],[2.498248,-6.332095],[-7.965303,-7.696413],[6.543894,8.352605],[7.504416,-9.158470],[-5.800156,-0.509327],[1.872377,5.127702],[-7.314507,-4.658889],[8.331649,-3.842500],[1.782606,-7.632627],[3.038367,0.464499],[9.529303,8.224042],[-2.286540,-2.129239],[2.107604,8.584849],[6.174668,-9.903487],[-3.192191,9.950382],[-4.733939,-2.876317],[-5.256077,7.455789],[4.714810,-6.622710],[5.427294,9.473602],[5.171139,-5.926256],[-1.356348,-8.810175],[-3.546288,-2.569553],[0.003867,-8.735564],[1.752158,4.811149],[-4.168197,6.797957],[6.907441,-8.935023],[8.931423,-1.369870],[-0.713846,7.841932],[8.601350,-3.087423],[-0.316252,-5.063429],[1.943106,1.925021],[5.825720,-4.249575],[0.983751,1.812763],[-0.260599,8.369484],[7.892709,-5.951289],[8.074331,6.449363],[9.888412,-5.791464],[-2.834806,1.566945],[-3.058238,-1.405670],[6.782879,3.254387],[-2.791742,-2.773782],[-3.924885,-7.228878],[1.622532,0.857263],[-3.166114,7.350355],[6.925597,-3.771373],[-2.397280,0.631983],[-4.706773,-0.849791],[-8.754020,1.389461],[-6.128862,7.206843],[8.556882,3.023768],[7.614509,0.182853],[7.396154,9.579848],[1.334013,-6.807947],[-9.340710,-4.773528],[9.181623,-3.687108],[-9.788959,-4.777163],[4.589820,7.321185],[2.032179,-0.609586],[-5.889440,-8.613556],[-6.636128,-1.767905],[7.489728,-9.061353],[-5.393375,2.908693],[4.961435,5.395604],[1.277517,6.943095],[-8.081432,1.462531],[9.413498,-5.967513],[-6.580258,1.274447],[-3.918785,-8.555238],[-7.197681,1.857462],[8.110423,-8.726684],[9.411558,-4.015297],[8.525958,5.268789],[-5.336324,1.212819],[-1.369838,2.072863],[-1.057698,-4.872140],[-0.407724,1.956992],[1.498405,0.491129],[2.443283,9.533197],[-6.881624,2.199823],[8.767746,4.506590],[3.199984,8.026918],[-7.297478,-4.875922],[1.741361,5.074024],[8.415576,-9.707170],[-2.732820,7.408491],[9.253177,-9.125137],[-0.509228,6.825125],[-3.864064,-1.569856],[5.376611,-1.028007],[-4.124323,9.931930],[6.149645,-5.238235],[9.839883,9.651643],[-4.117266,4.506443],[3.483146,3.302136],[1.827474,-2.047848],[0.317860,8.085587],[-6.120961,-5.297965],[2.810099,4.647651],[8.360159,3.356023],[-1.964026,-3.091605],[-0.251511,2.201881],[4.514952,8.838523],[2.833812,-3.327527],[-2.032004,-2.415136],[6.005877,-4.922521],[-9.308776,3.121745],[3.495114,-3.087685],[1.527283,-0.757447],[-2.913797,-2.359390],[9.689041,-6.274474],[7.969718,3.001630],[-8.451276,-3.275931],[3.914615,-3.233231],[-9.078192,1.922869],[3.388520,-0.092865],[-2.054461,-9.302294],[-6.031168,-2.479172],[-1.193329,-7.083616],[6.618472,-0.764074],[9.888038,-4.424436],[4.697411,-0.786044],[-9.860205,9.075342],[5.333689,1.638032],[-9.315548,-6.980702],[-5.310409,-5.313492],[4.176475,-1.148541],[9.468244,2.842242],[6.122813,4.091716],[-9.127482,9.223517],[5.992688,-5.525419],[-2.192681,-3.687504],[8.054036,6.910203],[2.539466,1.557398],[-1.656858,8.687006],[-7.699410,1.631662],[-4.404124,-5.206661],[-0.978204,-1.547610],[-3.500275,2.697710],[-4.132311,0.858942],[-8.623975,6.628513],[2.069005,5.349105],[-4.839778,9.905407],[6.914623,-6.424573],[9.363013,-8.040565],[-8.657471,0.687897],[-1.358052,9.277956],[-7.727317,-5.521675],[4.298396,-4.958884],[-2.318690,7.083922],[-6.742198,0.414836],[6.363611,-3.765502],[-4.476608,-5.268937],[1.245991,6.227344],[-2.904446,-5.755996],[-6.259712,-0.428080],[-3.721307,-1.629189],[-5.341816,4.537571],[-5.597361,-1.844760],[-8.468390,-4.325275],[0.361326,-3.403751],[-2.268900,-3.536577],[-3.361013,9.112542],[-1.409347,8.314118],[-8.896240,7.111186],[7.080265,1.992854],[-1.757606,0.561102],[-1.927436,7.372620],[-1.423885,-9.624346],[-0.880776,-2.582856],[3.422028,0.454858],[8.430808,-6.478993],[-1.197469,-6.676176],[-7.036618,7.479553],[2.135296,-0.514897],[-0.029003,2.039169],[8.611042,0.876140],[2.215473,-9.448430],[0.936560,-6.526849],[-7.687263,-9.315212],[-4.847670,-6.986692],[-3.236076,6.079481],[-4.200376,-1.272535],[-8.821337,-8.267929],[8.600245,9.748391],[9.637903,-4.808341],[5.941315,2.199889],[6.981204,-7.494532],[-9.071023,9.342126],[-8.890034,-0.522716],[-0.083950,3.343487],[-6.799947,-5.836317],[9.105060,-0.695732],[6.038581,9.318570],[9.867633,7.781278],[-1.093026,4.942084],[-0.336136,0.398315],[6.269632,-8.963511],[-5.799705,-6.719647],[8.411077,5.070204],[-6.343572,6.514955],[-1.001132,-3.313458],[9.326550,-7.348769],[7.266091,-7.796426],[-1.051079,-5.574210],[6.288062,6.946346],[-0.541291,-0.876938],[-0.779579,-8.289734],[-9.683303,1.458878],[-2.772249,-9.146657],[7.607243,0.802130],[-6.861961,-1.658836],[-5.921214,0.398680],[1.247064,2.873119],[-7.515085,8.349841],[9.387349,-0.523664],[2.928994,-4.130689],[5.312706,2.721263],[-1.830448,-6.712532],[-8.975355,9.689636],[9.131409,-6.946458],[-8.703685,8.348604],[-8.538545,5.686598],[-3.833120,6.685523],[7.827151,-3.722128],[-8.266004,5.193592],[-9.355956,-3.538369],[2.666601,4.432353],[-5.299566,2.262752],[-3.383106,6.087525],[-0.617909,-1.776088],[-0.943066,-1.762839],[-8.839918,5.686738],[4.471464,7.173819],[-6.944871,-7.351298],[2.222106,-2.488011],[-2.593025,-8.950192],[-4.846596,8.579060],[9.927406,-6.850514],[3.584124,3.271619],[0.858392,-1.765387],[-8.749958,-6.501892],[2.974786,-6.050044],[7.958798,-2.115044],[-4.976010,-5.181135],[4.193768,5.156906],[0.013466,-7.419393],[4.269156,-1.883142],[-9.495040,8.670126],[-0.318895,8.297966],[-9.564092,4.498986],[5.255241,4.785235],[-3.327564,-4.807598],[0.036985,-3.847323],[5.000649,7.105841],[7.623335,4.227886],[9.066743,-9.957919],[9.971243,7.976339],[7.235281,7.337018],[4.453076,-1.157036],[-6.317396,7.275556],[7.462456,-2.044492],[-0.461453,7.322626],[-6.949740,-1.803020],[1.321344,3.347911],[-6.077374,-7.751940],[5.357052,-5.762329],[8.260411,0.993650],[-8.632574,6.505142],[-8.980566,-3.663209],[-0.860818,-0.921799],[0.020573,-7.358601],[2.875538,4.826261],[-7.588525,2.351684],[0.566540,-4.901346],[7.567946,-9.744045],[-6.926331,7.201913],[5.196387,-6.520944],[6.366555,-9.834416],[2.603968,1.596759],[8.098943,-0.168591],[-9.274797,4.197147],[-4.330720,-3.957223],[4.909185,1.893916],[8.509543,5.161619],[-2.084141,-2.742319],[-0.982297,-5.733243],[1.216355,9.108754],[-8.493598,-2.227099],[9.750295,-4.120347],[-3.595118,6.466517],[6.580739,6.145945],[0.044687,-0.637912],[-4.207631,4.284927],[4.745520,-1.298700],[0.720768,8.227019],[-5.131546,9.110523],[-2.343603,1.355357],[-9.568206,-9.353002],[2.590406,-8.958838],[-0.853172,-4.087124],[3.286566,-0.898532],[-3.199617,4.480976],[-0.685212,5.987382],[7.750729,-6.913413],[7.627501,-1.355402],[3.347704,9.744900],[-5.115072,7.367893],[-1.456571,-9.935737],[-3.355752,5.876600],[4.569948,-8.308044],[6.842834,-7.027018],[-4.991685,-2.316079],[-2.609415,-0.640276],[-3.079997,-1.455153],[7.139537,9.111184],[-2.532235,-5.589854],[-9.582289,7.969221],[-0.493976,3.944590],[9.117256,-0.601265],[3.304729,9.998605],[4.116263,1.850986],[-6.696740,7.278353],[6.040691,6.624680],[-4.103558,-8.329583],[9.123596,-9.780522],[-4.016063,-4.166940],[-4.441541,5.905415],[7.195332,0.084235],[-3.941317,-3.333610],[9.876241,9.491276],[5.582024,-8.435901],[-4.929657,-9.073271],[-9.783822,5.079453],[7.700485,-7.929852],[9.420602,3.015831],[0.042709,4.885516],[2.114898,-9.068662],[8.046418,3.329954],[-5.637735,-1.789350],[1.941719,1.419665],[-7.283055,-4.221468],[-0.167984,7.029735],[-5.021811,-4.915368],[7.866680,-2.248797],[-1.540052,0.919160],[-7.698706,-0.994957],[-4.049356,0.001216],[1.605775,7.185893],[2.492198,5.859669],[1.004947,8.465497],[3.767919,4.277240],[-2.101715,9.039198],[-0.660001,-2.848195],[-8.009968,7.624561],[-0.127799,-0.317434],[7.028358,3.397073],[1.743955,-4.696007],[7.739837,-0.830253],[-9.577605,3.658029],[6.334241,9.291172],[-8.290988,-9.084405],[-4.492090,2.058089],[-8.946800,-2.271373],[-7.008672,2.445748],[7.464137,-0.688666],[6.034450,9.141016],[-4.537863,-3.375974],[-5.538682,4.274538],[-4.695594,3.952870],[2.704501,4.369554],[-6.462160,-1.976078],[3.180035,-4.954785],[6.666068,3.380959],[1.652899,-5.703556],[3.340235,-4.834697],[-3.991332,-1.582041],[7.688329,0.039276],[4.837067,6.979978],[2.064732,-8.563472],[9.275914,6.863465],[3.689770,0.827672],[7.764583,-9.629117],[4.146123,-4.244841],[-3.981629,-3.094771],[-5.091283,-2.896390],[-6.375267,9.027371],[4.719765,-2.267154],[-5.201849,-5.604569],[-7.660239,9.887204],[6.457986,-6.186169],[-0.953216,9.656704],[-8.247846,-7.811354],[2.709346,-9.252748],[-9.011238,8.102542],[9.642188,-2.813780],[9.867534,7.324574],[9.448427,-5.668015],[-4.651592,9.920838],[9.612485,3.102607],[-0.586049,7.676006],[-1.877438,3.252782],[7.817346,0.971178],[-2.055558,6.178862],[-5.590889,0.805552],[9.307446,-8.073304],[-8.040825,-9.469411],[-4.826811,8.091065],[2.660123,6.842259],[-6.255498,0.488928],[8.426850,-1.840023],[-7.073777,-5.969329],[-4.935148,-2.544339],[4.775822,1.290152],[-1.408388,2.192377],[6.065577,3.719779],[4.393686,0.338104],[1.196066,-9.692512],[4.686015,-6.109023],[-9.651623,-6.088531],[-0.496996,-6.390086],[2.312650,-5.182382],[7.401284,1.289633],[-1.487026,5.221768],[5.664997,-4.654790],[1.344326,6.301174],[3.935158,4.619862],[-3.706352,7.077134],[-4.331940,-6.107065],[4.718036,-6.702693],[6.015421,-1.112538],[-5.040863,2.152641],[-3.531970,9.194318],[-8.877065,-0.588234],[-1.916166,2.844764],[6.972448,-4.305508],[-0.067702,7.975022],[4.999279,-7.743864],[1.212334,-9.675244],[3.965064,2.975881],[6.119303,2.717268],[-4.269572,-5.885266],[8.907341,1.184820],[-4.031339,1.503286],[3.680508,-6.171397],[-2.143518,7.568237],[3.948949,1.556386],[8.986448,-8.865323],[3.470833,4.820515],[8.868332,6.946780],[0.613710,1.553735],[-8.365908,8.890093],[-4.239104,-1.576814],[-1.488271,-5.061226],[3.770000,-3.230652],[1.263322,-2.404112],[6.084445,-7.571658],[1.493107,1.089635],[-8.951707,-1.191909],[5.698516,-6.790071]], dtype = "float64")#candidate|5837|(792, 2)|const|float64
const_5838 = relay.const(-10, dtype = "int64")#candidate|5838|()|const|int64
var_5839 = relay.var("var_5839", dtype = "int64", shape = (2304,))#candidate|5839|(2304,)|var|int64
call_5836 = relay.TupleGetItem(func_724_call(relay.reshape(const_5837.astype('float64'), [16, 11, 9]), relay.reshape(const_5838.astype('int64'), []), relay.reshape(var_5839.astype('int64'), [2304,]), ), 0)
call_5840 = relay.TupleGetItem(func_728_call(relay.reshape(const_5837.astype('float64'), [16, 11, 9]), relay.reshape(const_5838.astype('int64'), []), relay.reshape(var_5839.astype('int64'), [2304,]), ), 0)
output = relay.Tuple([uop_5831,call_5836,const_5837,const_5838,var_5839,])
output2 = relay.Tuple([uop_5831,call_5840,const_5837,const_5838,var_5839,])
func_5843 = relay.Function([var_5839,], output)
mod['func_5843'] = func_5843
mod = relay.transform.InferType()(mod)
var_5844 = relay.var("var_5844", dtype = "int64", shape = (2304,))#candidate|5844|(2304,)|var|int64
output = func_5843(var_5844)
func_5845 = relay.Function([var_5844], output)
mutated_mod['func_5845'] = func_5845
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5937 = relay.var("var_5937", dtype = "float32", shape = (3, 2, 6))#candidate|5937|(3, 2, 6)|var|float32
uop_5938 = relay.erf(var_5937.astype('float32')) # shape=(3, 2, 6)
output = uop_5938
output2 = uop_5938
func_5944 = relay.Function([var_5937,], output)
mod['func_5944'] = func_5944
mod = relay.transform.InferType()(mod)
var_5945 = relay.var("var_5945", dtype = "float32", shape = (3, 2, 6))#candidate|5945|(3, 2, 6)|var|float32
output = func_5944(var_5945)
func_5946 = relay.Function([var_5945], output)
mutated_mod['func_5946'] = func_5946
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6205 = relay.const(6, dtype = "int64")#candidate|6205|()|const|int64
var_6206 = relay.var("var_6206", dtype = "int64", shape = (8, 10, 13))#candidate|6206|(8, 10, 13)|var|int64
bop_6207 = relay.right_shift(const_6205.astype('int64'), var_6206.astype('int64')) # shape=(8, 10, 13)
func_3268_call = mod.get_global_var('func_3268')
func_3271_call = mutated_mod.get_global_var('func_3271')
call_6210 = relay.TupleGetItem(func_3268_call(relay.reshape(const_6205.astype('int8'), [])), 0)
call_6211 = relay.TupleGetItem(func_3271_call(relay.reshape(const_6205.astype('int8'), [])), 0)
output = relay.Tuple([bop_6207,call_6210,])
output2 = relay.Tuple([bop_6207,call_6211,])
func_6212 = relay.Function([var_6206,], output)
mod['func_6212'] = func_6212
mod = relay.transform.InferType()(mod)
mutated_mod['func_6212'] = func_6212
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6213 = relay.var("var_6213", dtype = "int64", shape = (8, 10, 13))#candidate|6213|(8, 10, 13)|var|int64
func_6212_call = mutated_mod.get_global_var('func_6212')
call_6214 = func_6212_call(var_6213)
output = call_6214
func_6215 = relay.Function([var_6213], output)
mutated_mod['func_6215'] = func_6215
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6816 = relay.var("var_6816", dtype = "int8", shape = (13, 14, 15))#candidate|6816|(13, 14, 15)|var|int8
var_6817 = relay.var("var_6817", dtype = "int8", shape = (13, 14, 15))#candidate|6817|(13, 14, 15)|var|int8
bop_6818 = relay.less_equal(var_6816.astype('bool'), relay.reshape(var_6817.astype('bool'), relay.shape_of(var_6816))) # shape=(13, 14, 15)
var_6834 = relay.var("var_6834", dtype = "bool", shape = (13, 14, 15))#candidate|6834|(13, 14, 15)|var|bool
bop_6835 = relay.logical_and(bop_6818.astype('bool'), relay.reshape(var_6834.astype('bool'), relay.shape_of(bop_6818))) # shape=(13, 14, 15)
bop_6850 = relay.bitwise_xor(bop_6835.astype('int32'), relay.reshape(var_6834.astype('int32'), relay.shape_of(bop_6835))) # shape=(13, 14, 15)
output = relay.Tuple([bop_6850,])
output2 = relay.Tuple([bop_6850,])
func_6862 = relay.Function([var_6816,var_6817,var_6834,], output)
mod['func_6862'] = func_6862
mod = relay.transform.InferType()(mod)
var_6863 = relay.var("var_6863", dtype = "int8", shape = (13, 14, 15))#candidate|6863|(13, 14, 15)|var|int8
var_6864 = relay.var("var_6864", dtype = "int8", shape = (13, 14, 15))#candidate|6864|(13, 14, 15)|var|int8
var_6865 = relay.var("var_6865", dtype = "bool", shape = (13, 14, 15))#candidate|6865|(13, 14, 15)|var|bool
output = func_6862(var_6863,var_6864,var_6865,)
func_6866 = relay.Function([var_6863,var_6864,var_6865,], output)
mutated_mod['func_6866'] = func_6866
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7091 = relay.const(False, dtype = "bool")#candidate|7091|()|const|bool
const_7092 = relay.const([[[True,True,True,False,True,False,True,False,False,True,True,False,True,False],[True,False,True,True,True,True,True,True,False,True,True,False,False,True],[True,True,True,False,False,True,False,True,True,False,False,True,True,True],[True,False,False,False,False,True,False,False,False,True,True,True,False,False],[True,False,True,True,True,True,True,True,False,False,True,True,False,True],[False,True,False,False,False,False,False,False,False,False,False,False,True,True],[True,True,True,True,True,True,False,False,False,True,False,False,True,True],[True,True,False,True,True,False,True,True,True,False,True,True,False,False],[True,False,True,True,True,True,False,True,False,False,True,False,True,True],[False,True,False,True,False,False,False,True,True,False,False,False,False,False],[True,False,False,False,False,True,True,False,False,True,True,False,True,False],[False,True,False,False,False,False,True,False,True,False,False,False,False,False]],[[False,False,False,True,False,False,True,True,False,True,True,False,False,False],[True,False,False,True,True,False,False,True,True,True,True,False,True,True],[False,True,False,False,True,False,True,False,True,False,True,True,True,False],[True,False,False,False,False,False,False,True,True,False,False,False,True,True],[False,True,True,False,False,True,False,False,True,True,False,False,True,True],[True,True,True,True,True,True,True,True,True,True,False,False,True,False],[False,True,True,False,False,False,False,False,True,False,False,True,True,False],[True,True,True,True,False,False,False,True,True,True,False,True,True,False],[True,False,False,False,True,True,False,True,False,True,False,True,True,False],[False,True,True,False,False,False,True,False,True,True,True,False,False,True],[True,True,True,True,False,True,True,True,False,True,True,False,False,True],[False,False,True,False,True,False,False,True,True,True,True,False,False,False]],[[False,True,True,False,False,False,True,False,True,False,False,True,True,True],[False,False,False,False,False,True,False,True,False,True,False,True,False,True],[True,True,True,True,False,False,True,False,False,False,True,True,False,True],[False,False,False,False,False,False,False,False,True,True,True,True,False,True],[False,False,False,True,True,True,True,True,True,False,False,True,True,True],[False,True,False,False,True,False,True,True,False,True,True,True,False,False],[True,False,True,True,True,True,True,False,False,False,False,True,False,False],[False,True,True,False,True,True,True,False,True,False,False,True,True,True],[False,False,False,True,False,True,True,True,True,False,False,True,False,False],[True,False,False,True,False,True,False,True,False,True,True,True,True,True],[False,False,True,False,False,True,False,True,False,True,False,True,True,False],[True,True,False,False,True,False,True,True,True,True,False,True,False,False]],[[False,True,True,False,False,False,True,False,True,True,True,False,False,False],[True,True,False,False,False,True,False,True,True,False,True,True,True,True],[False,False,True,True,True,True,True,True,True,False,False,True,True,True],[True,True,True,False,False,False,True,False,True,True,False,False,True,True],[True,True,False,False,True,False,True,False,True,False,False,False,True,False],[True,False,True,False,False,True,True,False,True,False,True,False,True,True],[False,True,False,False,False,False,False,True,False,True,True,True,True,True],[False,False,True,True,True,True,False,True,False,True,True,True,True,False],[True,False,True,True,True,True,True,True,False,True,False,False,False,False],[False,False,True,False,False,True,True,True,False,True,False,False,False,False],[True,True,False,False,False,False,True,True,True,True,True,True,False,True],[False,True,True,False,True,True,False,True,False,True,True,False,True,True]],[[False,True,True,True,True,False,True,True,False,False,False,True,True,True],[True,False,True,True,True,False,True,False,True,True,True,True,False,False],[True,True,False,True,True,True,False,False,True,True,True,True,False,True],[True,True,True,False,True,False,True,False,False,False,False,False,True,False],[True,True,False,True,True,False,False,False,False,True,False,True,False,True],[True,False,False,False,False,True,False,True,True,True,False,False,True,False],[False,False,False,True,True,True,False,False,True,True,False,True,False,False],[True,False,True,False,True,False,False,True,True,False,False,True,True,False],[True,False,True,True,False,True,False,True,False,True,False,False,False,False],[True,False,True,False,False,False,False,True,False,False,False,False,False,True],[True,True,True,False,True,False,True,True,False,True,True,False,False,True],[False,False,True,False,False,False,False,True,True,True,False,True,True,True]],[[True,False,False,False,True,True,False,True,False,True,False,False,True,True],[False,True,False,True,False,False,True,False,False,True,True,True,False,False],[True,False,True,False,False,True,True,True,False,True,False,False,True,True],[False,False,False,True,True,True,False,True,True,True,False,True,False,True],[True,True,True,False,True,False,False,True,True,True,False,False,True,True],[False,False,False,True,False,False,False,True,True,False,True,False,True,True],[False,True,False,True,False,False,True,True,False,True,False,False,True,True],[False,False,False,False,False,False,True,False,False,True,True,False,True,False],[False,False,True,False,False,False,True,False,False,False,False,False,False,False],[False,True,True,False,True,True,True,True,True,False,True,False,False,False],[False,True,True,False,False,False,True,False,False,False,False,False,True,False],[True,True,True,True,False,False,False,True,False,True,False,True,True,True]],[[True,True,True,True,True,False,False,True,True,True,True,True,True,True],[False,False,False,True,True,True,False,True,True,False,False,True,True,False],[True,True,True,False,False,True,False,True,True,False,False,False,True,True],[False,False,True,False,True,True,True,False,False,True,False,True,False,False],[True,True,True,False,False,False,False,True,True,False,False,True,False,True],[True,True,False,True,False,True,True,True,False,False,True,False,False,True],[False,False,False,True,True,True,True,False,True,True,True,True,False,True],[False,False,False,True,False,True,True,False,False,False,True,True,True,False],[True,True,False,True,True,False,False,False,True,True,False,False,True,True],[True,True,True,True,True,True,True,True,False,False,True,True,False,False],[False,True,True,True,False,True,True,True,True,True,False,False,True,False],[False,False,False,False,True,True,True,False,False,False,False,True,False,True]]], dtype = "bool")#candidate|7092|(7, 12, 14)|const|bool
bop_7093 = relay.logical_and(const_7091.astype('bool'), const_7092.astype('bool')) # shape=(7, 12, 14)
uop_7098 = relay.log2(const_7092.astype('float32')) # shape=(7, 12, 14)
output = relay.Tuple([bop_7093,uop_7098,])
output2 = relay.Tuple([bop_7093,uop_7098,])
func_7101 = relay.Function([], output)
mod['func_7101'] = func_7101
mod = relay.transform.InferType()(mod)
mutated_mod['func_7101'] = func_7101
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7101_call = mutated_mod.get_global_var('func_7101')
call_7102 = func_7101_call()
output = call_7102
func_7103 = relay.Function([], output)
mutated_mod['func_7103'] = func_7103
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7101_call = mod.get_global_var('func_7101')
func_7103_call = mutated_mod.get_global_var('func_7103')
call_7175 = relay.TupleGetItem(func_7101_call(), 0)
call_7176 = relay.TupleGetItem(func_7103_call(), 0)
func_3268_call = mod.get_global_var('func_3268')
func_3271_call = mutated_mod.get_global_var('func_3271')
var_7186 = relay.var("var_7186", dtype = "int8", shape = ())#candidate|7186|()|var|int8
call_7185 = relay.TupleGetItem(func_3268_call(relay.reshape(var_7186.astype('int8'), [])), 0)
call_7187 = relay.TupleGetItem(func_3271_call(relay.reshape(var_7186.astype('int8'), [])), 0)
func_5610_call = mod.get_global_var('func_5610')
func_5613_call = mutated_mod.get_global_var('func_5613')
const_7189 = relay.const([[-4.706598,-4.610482,-4.784710,-9.732225,-3.101164,-0.147141],[-4.416676,8.492674,-4.787547,0.925139,-8.217606,-4.884664],[8.204560,0.976582,-9.435560,-2.846261,-1.743057,-4.364220],[0.503874,-0.946242,5.429129,1.624287,8.770034,7.352818],[-3.209918,-2.731727,-8.220010,-0.762147,-9.795432,8.857569],[1.231623,9.745767,-5.891489,-9.637249,-1.994625,4.773645],[6.387797,4.186027,-3.810394,-9.946694,4.896769,1.439848],[9.985931,7.186195,3.971029,-2.387830,-4.638392,-9.684347],[5.450468,-9.594490,-2.054448,-9.297754,-6.547577,-3.230009],[-0.128339,7.316783,9.190164,7.834657,-2.955428,-3.703498],[5.907114,-8.986045,-0.761297,-7.564016,8.168912,1.577182],[2.014001,7.633164,5.243674,-7.458388,-9.761312,-4.046943],[-6.687221,0.903064,-5.304783,8.248689,-8.057531,-0.698893],[-8.872619,2.210180,8.594838,8.963323,-3.784196,0.667039],[1.532580,9.915362,1.208148,8.676382,-1.875337,3.823511],[5.177917,-1.274951,-8.722266,-4.438046,-6.108433,5.484329],[0.299876,-8.218104,2.577736,1.321972,9.982587,6.437354],[-3.134765,-9.767677,1.568174,-8.068575,-2.598749,-9.860584],[1.211624,-4.937891,-8.000635,4.323909,-3.103043,7.860490],[4.304093,-5.802510,-4.726720,-3.705901,6.120146,9.302033],[-0.547279,6.673048,-1.760773,0.043679,-0.398727,2.022703],[6.803876,-1.705265,-3.628026,-9.735632,0.961604,-5.274812],[-2.598935,-3.370954,-6.767878,-7.267390,8.691645,7.811963],[6.119338,7.646023,-8.473110,2.788344,-6.117742,-0.667649],[3.945186,-4.904427,9.147251,-2.097386,0.278043,6.102958],[-7.390644,-9.736829,7.742922,-2.297740,6.358895,6.389018],[-2.156252,8.917959,-1.787877,-1.849672,-4.396142,-5.109773],[8.903483,8.071504,-4.706937,-8.272097,-4.744578,-8.178741],[0.346542,1.945455,9.150184,-6.724417,9.628424,-0.199014],[8.222008,6.248693,9.599218,-4.845297,1.755571,-7.061177],[-4.041223,-2.550719,3.021773,9.664735,3.146491,1.989447],[3.851241,1.054336,-5.370181,-5.629528,-3.537467,3.308011],[-8.269015,-9.065485,-8.825668,6.506384,-7.543938,7.312952],[-1.170163,-0.040279,0.283813,-3.551258,3.916992,5.158463],[1.197084,-0.174095,-1.416867,-2.459255,3.473511,-1.514336]], dtype = "float64")#candidate|7189|(35, 6)|const|float64
const_7190 = relay.const([1.487859,3.594536,-2.529303,-0.690640,-4.867778,-0.867955,-2.216887,8.674705,-5.562455,2.656719,9.765236,9.444729,-2.255789,-6.030238,6.053328,4.846478,6.339280,-3.818275,-0.653625,1.721719,-1.889738,1.114491,-0.190090,-4.795590,-4.220010,2.018713,4.811522,-4.142045,-8.517631,5.421577,0.915638,-3.242184,-9.974629,5.740476,8.412054,4.210221,-8.941814,-1.401418,6.318160,1.044188,-6.316629,9.479491,5.420614,-9.110947,5.642546,5.073651,-4.855458,6.104205,7.257069,-8.643629,8.232920,-9.416793,-6.169678,-4.238806,9.989716,0.877270,-9.700405,-1.983693,-2.434058,8.843340,-2.299438,-8.619201,8.874220,4.361175,-4.849168,0.698575,1.250995,-9.874393,4.385292,2.896609,-0.881328,-3.968438,-4.462182,9.044438,4.008916,-8.670022,5.090793,8.335838,-9.463264,0.198863,-2.261298,-3.683217,-8.018814,1.427480,-9.710347,0.206213,4.680368,8.674170,-7.338874,-1.140869,-1.002287,1.844653,0.415127,-9.611107,-5.682033,7.322742,-5.363891,-6.486511,-5.905204,-9.631390,5.494089,8.597739,-8.312770,-3.408547,2.993409,-7.049879,9.720574,-3.526104,-2.957772,-6.540625,-3.268013,4.856481,4.413932,-3.628099,2.482878,-7.019265,-9.281425,1.378594,2.866258,5.099788,-2.849771,-5.889891,5.121507,6.955545,8.294303,-2.022672,0.497839,-2.084944,-3.619252,-7.368356,-7.533004,-1.142817,-3.946087,1.965519,7.482753,0.832245,-8.206225,8.644114,-1.730398,-5.696668,-0.976095,2.183087,-8.374077,-9.533801,-8.787115,4.159982,-7.182585,1.315156,9.627168,-7.276838,1.415794,0.277732,8.210126,-4.864271,4.061123,2.450583,1.600553,6.341783,-1.982494,-0.311849,-9.377925,6.243188,9.433424,1.460853,4.504936,7.905713,0.276360,1.891843,0.807943,-5.860071,-1.192510,-8.626319,8.561006,8.983711,-2.677254,-7.338107,7.499939,6.666319,4.644493,-6.209299,-2.709377,3.054226,-8.441896,-1.434724,-2.638448,-1.174737,-6.923970,5.500725,-1.832381,3.643750,-6.404325,0.343063,-6.450810,7.242791,2.326160,-2.396050,6.017185,-4.414016,-6.092410,-3.302205,3.012792,5.847624,8.076024,8.186171,-5.770467,-2.140996,2.085217,-6.012386,-4.289235,5.761755,4.946780,6.753115,2.626323,-1.121192,-6.237419,3.638263,2.909124,1.354426,9.809831,-2.586898,-8.530173,-7.185241,-9.332602,1.211648,-0.209136,2.929849,-2.752409,5.340268,-7.945933,-8.726317,-1.435201,-0.459131,-9.315800,-1.207430,2.244472,8.518621,-8.372269,7.872826,9.747580,6.564437,0.831625,9.083472,-0.362412,7.876059,6.093641,3.551538,5.331556,3.702368,-3.568155,2.751106,4.274954,7.063405,2.999957,-1.271369,7.733965,-6.958031,-7.405906,-8.391007,-0.781403,8.606012,8.030487,1.071796,5.891954,5.224253,1.580687,7.744370,7.226490,-2.009690,5.915555,0.665191,-8.469235,8.692036,-3.574258,3.502435,9.752257,-6.052380,-1.585694,-9.886953,-3.698891,0.257015,-9.376018,-3.946832,9.994405,-6.919982,-3.120513,2.047302,-7.120233,0.203687,-5.993663,9.336614,-1.429823,7.012403,-6.511731,-2.299451,2.045984,-5.290831,-2.046951,7.244013,7.084573,-4.532528,-7.361751,-7.806687,-9.336333,4.753476,9.229328,-7.206956,-2.141959,-2.260951,6.486766,6.234600,-0.079308,0.122475,4.101030,-6.999270,-4.930909,-8.773493,-1.157656,0.049234,-0.179735,9.284340,-4.291709,3.720080,9.835911,4.406250,-3.040826,4.417926,-9.568428,7.289281,-2.283952,-6.754151,-6.355489,6.439539,1.032766,2.985945,1.513903,7.120381,0.722230,-1.723772,-9.529299,8.350550,-6.868596,3.359357,8.343756,-2.381965,-0.825160,5.051933,4.905891,1.443259,6.852516,8.731249,-4.048484,-8.984731,5.613016,-7.902528,-1.752962,4.565165,5.226392,8.304704,0.847963,-2.041574,-7.984329,0.225103,-8.573779,0.538373,9.805373,-1.023598,0.270646,0.425622,6.599405,5.766671,-9.086510,-4.438904,2.080636,-0.011117,-6.250745,4.057667,-7.488329,-8.095564,9.032293,7.456226,-5.798353,-0.536678,-7.647596,1.147510,-6.856682,-7.392128,3.024737,-7.915768,-3.561086,9.810821,3.908604,-8.393307,7.883398,-4.477857,-1.045325,-0.702998,1.724315,-7.828300,-3.545954,0.584863,-0.776491,6.865956,-1.274580,5.334579,8.367075,5.590983,7.880704,-3.512699,4.863481,3.437464,-9.630649,-8.057763,5.032191,-8.134913,-5.872739,-9.755514,4.724867,-1.453890,5.790609,-3.906596,7.441849,2.491558,5.684564,7.405801,-0.933219,-9.514424,-2.194854,-3.281402,-9.646094,-5.813464,-0.006543,4.730614,-0.112255,4.767944,8.252780,-1.914594,-3.944125,2.204786,-3.049254,-7.267087,-2.690136,2.845112,4.051295,-7.404816,-2.942144,7.479057,5.718534,-8.119361,-3.455917,1.031426,-0.184271,-9.290960,4.523019,-6.386191,9.565852,-6.409804,-0.146134,-6.874619,6.522082,7.213076,0.579337,-9.620618,0.076071,0.245484,-5.271914,-9.012900,-6.606230,1.885580,-2.979256,3.313135,-3.764410,7.715161,-9.154713,8.429824,-4.916660,8.056260,8.680779,-5.788178,2.518452,-6.225856,-2.483217,-4.659393,-9.499131,-0.468260,6.123277,-0.629422,0.545829,-8.549551,0.630319,4.095729,-4.638042,-2.851165,-8.897890,0.821991,-8.259800,-4.182772,-5.002861,0.193430,-5.811227,3.240530,-4.684711,-8.719566,-9.642658,7.771288,-7.260173,8.105669,0.869768,-8.685781,0.630607,4.928703,3.779802,-1.183702,-9.018390,-5.552270,-6.225010,4.945200,5.322159,-1.039665,-9.316184,-3.585132,2.746351,-4.071333,9.019342,-3.410323,-1.287498,-6.267822,7.568874,8.291723,-4.220016,0.721374,3.413508,8.224351,-2.044072,-5.732623,2.431272,1.236519,0.996714,-0.451196,-9.498256,4.763350,-5.990185,-8.042841,-0.491755,-7.071212,-5.178785,7.198776,-9.877819,-2.487038,8.907391,2.336449,4.510398,8.059811,-4.008681,4.243395,-6.324415,7.983889,-1.321189,6.248230,4.314628,-2.966469,6.245628,-9.608598,-7.670914,-5.561425,4.173047,4.547487,-6.186695,4.250227,-2.591993,9.016164,8.472769,2.682029,-7.064881,5.175501,-5.311050,1.046364,3.444126,9.180592,2.981628,5.596060,-5.480677,5.487345,2.035422,8.970586,-4.645350,7.530822,-1.650595,3.412631,9.772341,-6.999144,-2.916927,3.962766,0.341413,-4.761378,-3.240377,-6.050130,-6.422236,2.477162,-8.053653,4.941211,2.063692,3.130012,8.137819,-9.233832,9.930798,6.174268,8.600211,4.308997,3.768249,4.353126,-2.117784,-6.723656,0.515075,-5.958181,6.573052,-0.618943,-5.362310,-6.828029,7.343895,-1.408333,3.237947,-9.529978,-7.568057,-8.301500,4.585985,6.601610,9.483703,-3.259923,9.468680,-6.648394,-8.654174,3.292729,-1.477304,1.785278,5.362902,-2.106310,8.567311,1.566274,8.744177,7.378940,9.278157,-7.347957,2.430715,6.713906,0.922981,7.361533,2.632276,1.830980,-7.258488,3.396241,-2.079456,-3.389294,-2.656773,-8.519733,6.447607,6.761940,-6.811245,7.800107,-2.187801,9.681620,8.128528,-9.513580,8.466324,-4.231718,-0.308807,8.610550,-8.201814,-2.680922,5.709535,-7.815216,-5.071229,9.666919,3.405854,-2.436264,-9.487413,9.536414,-3.470389,-1.193616,6.132540,5.250262,-2.936237,1.270236,9.762806,9.468232,-3.248432,3.882317,4.082641,0.236448,-5.324677,8.601183,2.808426,-8.938064,-1.238686,-4.960282,6.208854,2.766143,-1.354653,-9.080432,-0.770670,6.780344,0.221784,2.280559,0.855446,0.555125,9.280159,-2.864301,-6.348164,-2.284093,1.700742,-1.301259,4.807979,-4.255178,-3.914570,1.482204,4.211111,0.709080,1.536146,2.698488,-9.732724,-4.165647,0.601730,-9.307145,0.056731,-9.546537,6.490784,-8.001814,-1.685712,4.177911,0.362654,9.645133,4.847633,-0.438922,-5.126953,2.210849,-2.966230,-2.903248,7.817068,4.848321,0.723302,2.602347,9.790297,2.589127,5.363974,-9.347235,0.496608,1.362015,8.641058,-2.819370,6.636389,-4.144085,8.484691,-7.661642,3.351759,-3.102227,5.089232,-1.132301,8.603661,4.291630,-5.946583,2.712136,4.791918,-2.067755,-4.586023,-1.829655,-8.282085,-2.513003,4.086319,-9.044325,-4.710437,-0.625006,1.191979,-6.546433,-2.817313,7.622906,-4.510705,5.138666,8.998395,-5.586492,-3.513795,6.908794,0.305697,-4.762227,-5.723078,9.479046,8.400586,7.534844,-4.770508,7.138593,8.109908,8.489963,-2.010967,6.060458,-8.299065,7.550946,9.068640,-5.875598,-5.602280,0.367584,7.186824,-3.214688,-0.892542,5.749020,8.927211,-5.201357,2.294787,-8.116641,-6.387199,0.641856,7.999435,1.545554,-1.380777,3.258859,-8.221063,6.288812,-0.081113,0.853580,7.922922,0.979055,3.707901,5.550252,-4.794869,-7.361520,-2.192961,6.403425,5.248586,-2.500722,-0.484994,-7.083935,-1.818193,0.565298,2.017528,-5.569958,6.089511,-3.640847,8.455454,-5.907787,6.425372,-2.357823,-2.686571,-5.180513,-2.766758,4.952031,-2.581692,8.623838,-2.342581,0.776323,8.049554,-1.927058,-8.917104,-7.917640,0.243975,2.667345,4.891760,-4.364314,4.533013,6.540699,2.069677,1.455281,2.891981,-5.408835,6.013522,5.187146,1.196347,2.080271,-3.687922,4.227780,-7.756655,3.367470,-9.603705,-3.224680,-4.341319,0.472139,-4.047064,9.979638,-4.800772,2.072303,-9.042950,-9.394991,8.164090,0.626576,5.848517,2.353706,0.943491,-5.564345,-8.149966,5.416428,-1.745212,-1.654325,2.240692,-7.457868,5.396111,1.500675,5.637423,-8.999112,-8.877025,-2.779231,-1.756884,4.672107,-4.363544,-8.479252,-9.771213,6.238005,-9.660275,-9.517120,-6.019415,7.477127,-0.296352,5.288084,2.770060,-7.788593,6.072791,0.239798,-3.802005,7.637522,-5.242173,5.856413,3.647878,-4.924414,-4.115490,-9.484246,0.473619,9.148354,-2.136900,5.885714,-2.039195,4.761156,1.907120,4.243797,-4.784024,-9.865395,-9.441347,4.693504,2.644230,-4.292619,-9.270364,-9.451591,-3.527680,-8.251456,-5.839440,-0.275446,6.723654,-7.021195,6.791282,4.527996,-6.814067,-3.178585,7.711906,-1.582218,3.821519,3.249336,0.729537,-7.872382,6.437766,6.602378,-4.786339,-5.811181,6.906222,-4.218551,-3.427837,-9.718188,-7.683620,-7.233350,0.978457,-0.226587,8.435758,-1.660185,6.409963,-1.458497,1.416980,-3.282079,-2.892318,-6.687659,5.442700,-4.001112,-0.606269,-8.427733,9.534110,-4.373310,9.771880,-2.041734,-1.899303,-5.559761,1.035023,-3.402414,-1.202081,-3.634641,2.588675,-6.786316,-9.797031,8.296934,-8.360153,9.909936,-2.616646,-8.303159,-0.150728,-7.712481,6.789350,-0.387623,6.541554,-7.565516,6.457470,-6.353075,5.103137,7.311474,2.322112,-2.811593,-0.383180,-7.827341,3.552580,-6.107954,4.050248,1.821970,3.185324,5.085375,-5.942648,-7.657118,-9.040254,0.782883,-3.007145,0.491866,1.618271,0.898907,0.732093,-1.310402,-2.577965,-2.623876,6.406412,-6.261173,8.235556,2.841756,7.042567,7.522504,7.916431,9.642170,9.545314,9.676983,-3.567468,-6.497448,-2.943681,7.435590,-5.359884,-8.783966,6.361246,-3.705345,-3.053043,-4.989761,-7.556313,-6.125073,-4.038224,3.950522,-0.228475,-5.771471,8.456391,5.755782,9.553972,-6.168555,-2.464641,9.676455,2.559793,6.883207,-0.802793,-3.236925,2.226305,-4.268001,-7.689248,-9.889949,-7.623402,-9.673426,4.447982,-4.234301,-8.646479,-0.427185,2.092530,-1.376479,-1.971683,7.442878,7.951343,0.287184,-8.139457,3.657865,6.272702,3.426788,-5.939646,2.716285,9.656457,7.112732,-9.287128,6.778729,2.628070,-4.151721,8.779506,-6.835239,4.115856,1.264865,1.951746,5.413283,-4.311812,8.786571,-2.973516,7.179983,-0.405065,7.743490,-2.878225,-7.734960,-6.131339,4.600249,-9.413900,-2.740098,0.425120,1.878288,-8.835588,5.040448,-0.093477,-8.879672,0.164816,-7.550151,-4.709224,-7.299205,-1.111090,-0.419282,-6.609260,-4.950438,-2.600981,-2.374797,2.270726,-3.071497,-6.251137,-8.447468,-5.309211,8.684203,-5.213563,6.640771,3.445027,-6.884215,7.273799,-0.702987,-9.480051,-0.303835,-6.380718,8.022348,8.262078,5.136749,3.274930,-6.130870,-2.816613,-3.704137,3.796353,5.924065,9.177798,5.814838,2.545581,-9.968251,-3.994580,-1.923147,-0.463141,-8.319417,2.302783,8.269909,-3.393968,5.722949,-3.754813,9.748373,7.356774,-2.631244,-2.428196,6.302179,-5.304616,-6.638396,2.841229,3.825190,-5.473040,7.074002,4.985836,-2.496173,-9.463032,4.206212,0.218003,-4.069108,3.240602,-0.421789,-5.537612,3.953360,8.407767,-7.243710,-2.121704,-3.094838,6.131177,3.090226,9.880224,-6.011114,5.945698,-0.690954,5.223417,7.252053,9.786142,-9.187572,-2.211741,-6.934865,3.698665,-0.361925,-2.365119,-2.548589,-0.208809,3.195583,-3.897418,9.868700,3.017199,-7.884742,-9.752666,0.961916,4.564747,-6.006761,-5.915385,-2.001888,3.693551,4.216892,1.457066,4.601741,1.225126,5.260000,7.660991,9.991843,-2.607957,1.701962,-3.295528,1.597024,-1.588716,1.395889,-0.783155,1.411894,-7.825265,-9.106225,-0.850567,1.179734,-8.663338,0.874045,7.321100,-0.558272,8.401762,-6.036577,-8.895769,2.321757,4.546317,3.925725,-3.574949,7.915205,-7.339886,1.969883,-4.025560,-6.302930,8.307374,-8.197542,9.276334,2.994335,-5.503296,-4.581616,1.048131,6.090449,-8.798531,-5.410295,3.183746,6.784108,8.531768,9.954857,9.328337,-1.950028,8.197429,5.156237,5.458720,8.314071,-9.426784,1.883385,-0.237232,8.298455,9.490688,3.981365,9.608213,-0.398049,3.159895,-6.877131,-1.648858,-3.063718,7.556812,-9.774180,-4.077204,-1.879117,9.755687,-6.985026,0.093811,-1.824283,5.887620,3.754661,-9.793289,-2.508059,6.984351,-7.953780,4.853609,-9.539219,-2.707925,-3.022689,-3.419588,0.220540,-0.326482,6.455997,2.006829,-3.223320,-9.571238,-1.710689,-4.641095,-8.280150,2.701253,6.089577,5.387303,-0.429371,-4.149462,-9.288495,2.871686,-9.532245,1.483271,3.255073,3.387736,-5.914319,-0.947342,-0.650398,5.926807,-5.095316,5.467189,0.252900,0.606603,-5.917848,-6.095709,1.456458,-6.183705,0.287627,7.628392,4.080123,0.731134,-0.375193,-5.080782,-3.976081,-6.214982,-0.784487,-6.070765,-9.291349,8.025872,0.096832,-6.260179,-8.844653,-6.422395,-7.165416,-4.093138,-2.447441,0.454396,0.022297,4.120954,8.349777,2.592709,6.528031,-8.234941,0.977758,-5.661131,4.833745,5.994228,9.189180,-4.798838,-1.340133,2.184160,-6.231652,4.015958,-0.957014,7.607910,-3.393432,-6.806489,-2.526781,-8.800246,-1.185481,-3.489848,5.269317,6.375725,4.303143,-0.854834,4.149106,-2.269467,4.598565,8.331505,-8.352297,8.627328,4.025692,-2.830211,-3.732508,-5.969309,7.972447,4.998511,-9.053962,2.923358,-1.045622,8.038335,-5.907226,7.842032,-5.168393,4.138234,5.890487,4.285537,-9.798785,-6.405004,-2.703971,-8.539855,9.680492,-0.014744,-9.270370,1.768727,-0.477914,-4.043509,-5.462439,-9.322885,5.246932,7.321461,-6.154663,8.683728,-9.548979,-5.367739,-7.176417,-5.804200,-0.337433,-2.820409,-9.452312,7.732857,-1.662197,2.473520,2.898274,3.331833,-9.494994,6.283845,-9.093565,9.493624,-8.299752,3.265373,-3.791819,-4.652137,6.062225,-4.057182,-5.866196,-3.160017,3.752594,1.699638,2.428894,8.409629,2.092814,-0.150912,-7.218472,-7.391642,5.928456,5.601248,7.258216,-3.740815,-3.088387], dtype = "float64")#candidate|7190|(1456,)|const|float64
call_7188 = relay.TupleGetItem(func_5610_call(relay.reshape(const_7189.astype('float64'), [5, 14, 3]), relay.reshape(const_7190.astype('float64'), [1456,]), ), 2)
call_7191 = relay.TupleGetItem(func_5613_call(relay.reshape(const_7189.astype('float64'), [5, 14, 3]), relay.reshape(const_7190.astype('float64'), [1456,]), ), 2)
output = relay.Tuple([call_7175,call_7185,var_7186,call_7188,const_7189,const_7190,])
output2 = relay.Tuple([call_7176,call_7187,var_7186,call_7191,const_7189,const_7190,])
func_7192 = relay.Function([var_7186,], output)
mod['func_7192'] = func_7192
mod = relay.transform.InferType()(mod)
var_7193 = relay.var("var_7193", dtype = "int8", shape = ())#candidate|7193|()|var|int8
output = func_7192(var_7193)
func_7194 = relay.Function([var_7193], output)
mutated_mod['func_7194'] = func_7194
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7101_call = mod.get_global_var('func_7101')
func_7103_call = mutated_mod.get_global_var('func_7103')
call_7226 = relay.TupleGetItem(func_7101_call(), 0)
call_7227 = relay.TupleGetItem(func_7103_call(), 0)
var_7232 = relay.var("var_7232", dtype = "bool", shape = (7, 12, 14))#candidate|7232|(7, 12, 14)|var|bool
bop_7233 = relay.power(call_7226.astype('float32'), relay.reshape(var_7232.astype('float32'), relay.shape_of(call_7226))) # shape=(7, 12, 14)
bop_7236 = relay.power(call_7227.astype('float32'), relay.reshape(var_7232.astype('float32'), relay.shape_of(call_7227))) # shape=(7, 12, 14)
output = relay.Tuple([bop_7233,])
output2 = relay.Tuple([bop_7236,])
func_7249 = relay.Function([var_7232,], output)
mod['func_7249'] = func_7249
mod = relay.transform.InferType()(mod)
var_7250 = relay.var("var_7250", dtype = "bool", shape = (7, 12, 14))#candidate|7250|(7, 12, 14)|var|bool
output = func_7249(var_7250)
func_7251 = relay.Function([var_7250], output)
mutated_mod['func_7251'] = func_7251
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7101_call = mod.get_global_var('func_7101')
func_7103_call = mutated_mod.get_global_var('func_7103')
call_7310 = relay.TupleGetItem(func_7101_call(), 0)
call_7311 = relay.TupleGetItem(func_7103_call(), 0)
output = relay.Tuple([call_7310,])
output2 = relay.Tuple([call_7311,])
func_7323 = relay.Function([], output)
mod['func_7323'] = func_7323
mod = relay.transform.InferType()(mod)
output = func_7323()
func_7324 = relay.Function([], output)
mutated_mod['func_7324'] = func_7324
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7323_call = mod.get_global_var('func_7323')
func_7324_call = mutated_mod.get_global_var('func_7324')
call_7363 = relay.TupleGetItem(func_7323_call(), 0)
call_7364 = relay.TupleGetItem(func_7324_call(), 0)
output = relay.Tuple([call_7363,])
output2 = relay.Tuple([call_7364,])
func_7369 = relay.Function([], output)
mod['func_7369'] = func_7369
mod = relay.transform.InferType()(mod)
output = func_7369()
func_7370 = relay.Function([], output)
mutated_mod['func_7370'] = func_7370
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7369_call = mod.get_global_var('func_7369')
func_7370_call = mutated_mod.get_global_var('func_7370')
call_7388 = relay.TupleGetItem(func_7369_call(), 0)
call_7389 = relay.TupleGetItem(func_7370_call(), 0)
func_2493_call = mod.get_global_var('func_2493')
func_2496_call = mutated_mod.get_global_var('func_2496')
const_7391 = relay.const([8.207592,-8.406444,1.770034,4.039542,-5.434653,-7.276535,-4.842362,8.136785,-3.743199,-7.599612,0.992562,-6.509028,-5.112540,9.671582,1.507928,7.238366,-5.392893,5.102837,6.863034,-4.507108,-2.430432,-0.765902,1.670720,2.629452,7.518056,-4.549393,-3.556224,7.071378,-2.886831,-3.642242,-5.610350,-9.976313,-3.056409,-8.019103,-8.494260,5.794114,6.635132,9.538966,3.535940,-8.497496,-5.015040,8.846113,-3.575730,-1.077524,5.046449,-1.724440,-7.885229,-3.947132,-6.117595,-0.649989,2.402286,5.357943,6.307179,-6.722273,9.725605,5.429226,2.546984,1.876200,0.048113,-1.766853,-3.536522,-5.129157,9.751660,0.955445,-4.168373,-8.651663,7.897984,-0.207298,-9.934570,6.106458,-9.301742,1.300682,0.631633,8.624328,-6.553778,7.168712,-3.773445,5.589161,4.493724,-2.806797,-4.448884,9.030506,-2.689556,-7.795501,-4.323075,3.304190,-4.711092,-1.747565,6.883661,9.829850,6.412024,-2.075054,-4.700219,4.310817,3.087849,0.683651,-1.983455,5.727760,5.863618,3.802287,-7.237696,-6.938385,-7.863680,-2.452461,-1.113032,8.758863,3.978617,9.901179,-9.355312,8.542774,-7.696476,6.297666,8.852625,-3.168583,0.928494,8.202850,-9.656362,-4.040447,-9.193549,-5.408758,-6.620544,6.270463,7.279941,-5.037250,1.072520,5.415207,-8.736716,2.081849,-9.295987,-9.243753,1.057505,2.845292,3.524442,-9.322182,-0.928038,-1.023788,9.227974,-3.093369,1.954471,-9.796013,-8.106758,-5.864774,-8.156960,6.248431,1.091772,-6.815832,8.379189,-4.531587,-1.121049,-1.311168,9.850376,9.613773,-6.995514,-9.303483,-2.658343,5.913613,-2.781880,-9.952356,1.555170,6.779626,7.996778,8.447469,0.677477,-3.552016,0.258714,0.521407,1.969899,0.407356,-8.329904,2.695033,-9.901026,-7.544179,4.187618,5.031608,-9.263446,9.662401,7.108878,-8.321431,1.104827,-7.934221,5.540448,5.501276,-1.000765,4.956898,-2.685068,-6.893923,8.488705,-7.326941,9.913941,3.013093,-5.300832,4.352235,6.279781,7.978757,-6.367260,4.500413,9.411590,4.387009,7.947857,-8.244311,2.251082,-3.349909,5.779783,6.857920,7.935110,-4.269637,-4.555688,9.757775,0.901104,-6.214097,-9.475907,-5.363279,-9.763647,4.898607,-3.962451,-6.698718,-8.553096,-3.887435,4.731514,-0.096991,-7.045170,-3.271696,4.435663,-4.219167,-3.741774,-3.539900,5.174953,-5.549607,-3.587105,2.627609,-4.294640,1.396500,8.566482,-8.820130,5.938430,8.117476,-4.249333,-5.889921,3.463048,-1.013514,7.388381,-6.353019,8.165746,4.967542,-2.936301,-1.572083,-3.206200,-7.130821,2.397195,-0.964586,5.895538,-7.082296,9.586586,2.494363,-5.713593,4.332683,4.052158,-9.755888,-8.041864,-1.569305,-3.756591,7.699101,-2.380519,-4.462277,6.885704,9.248998,-8.495382,-2.001555,-6.917352,-4.400965,9.527646,5.937507,2.602690,-0.167069,4.645510,7.147553,3.176601,-2.146657,-3.308042,-8.243138,1.920595,-6.195531,8.294976,3.074930,3.503606,-9.689086,5.631007,7.204712,7.563586,3.713485,-1.810812,6.201271,9.101431,-4.272290,-0.350230,4.465258,-0.480344,-1.518929,-0.884517,0.753565,9.364033,5.638075,6.151033,-1.241292,-2.485569,3.741648,-9.743394,-1.559294,-2.110283,3.314279,7.682427,-3.773347,-2.225159,-6.603970,8.274031,-3.375542,5.144995,6.650034,-8.587816,-5.701941,8.489049,-7.511748,-7.541333,-0.081571,1.590036,4.454213,-7.806367,-3.708458,-1.831817,-3.017617,-2.112313,7.382853,-6.494735,4.613478,-1.750340,2.402298,7.828769,4.902710,-1.729534,4.972095,6.938051,9.913018,-7.599288,-1.638745,-6.593126,-1.329871,-7.095756,-7.464032,6.822059,1.582426,1.132782,1.451101,-5.010937,-5.105792,-5.313411,-2.798815,6.832372,-8.056741,1.057335,-4.537692,3.321583,5.380769,-3.415324,-1.325945,3.585036,8.372953,-7.335187,4.026020,5.825523,8.453756,4.731979,1.118709,2.432808,3.517128,4.653368,-4.658221,-8.557493,-0.233688,-2.491346,-8.086154,-6.001193,-9.840612,5.216316,-4.986445,-9.097496,-5.965218,1.605321,-6.888770,2.827605,-7.456296,5.567471,3.118158,-0.176472,2.445331,-5.428312,-8.390675,4.825963,4.303964,-8.238389,-6.479423,-9.517376,4.860892,-4.904709,-7.927945,7.640598,-4.174710,-5.564634,-5.840712,1.862582,4.364631,-2.160658,8.583806,-9.313552,-8.944074,-9.549617,9.116344,6.499596,-8.409559,-4.021759,-2.169167,0.980882,7.855171,-3.671822,-9.054944,0.425089,-2.007460,1.160712,5.267851,-3.811398,5.240383,-0.555435,5.063755,0.909991,-7.660086,8.278383,0.414724,4.886519,-8.538553,-0.393686,-0.578193,-4.956638,2.959642,-4.550046,3.240266,-4.487016,0.927506,-8.085725,7.384892,-4.249972,0.878484,-4.171606,7.306043,2.256728,6.169036,-1.935759,7.696081,-3.522239,3.996096,-3.692887,-6.967731,5.875620,8.443225,-6.192565,4.641625,-8.362211,-9.262234,9.697745,7.341505,5.606972,-1.307598,-0.619810,-9.935103,2.103781,9.153738,3.813306,-6.257987,0.698033,-8.434644,-1.317142,-3.935733,-0.714381,3.066341,-0.599737,0.223387,-9.381398,-2.827138,5.320908,1.679306,-2.881028,-5.750204,-8.459237,-7.308356,1.715372,-1.371203,-3.632415,-7.016783,9.579597,-5.930164,-0.613124,-7.748593,3.847030,9.528521,6.904444,9.761088,8.411501,3.588774,5.333242,2.275336,-1.621706,-2.646863,7.314843,-6.994312,8.109267,-4.210018,-2.423656,-8.647176,7.928401,-5.858665,-9.190091,-6.132780,-9.829370,-6.303557,2.037862,-5.338110,9.035077,-8.795377,1.927289,1.910826,7.355240,2.826848,-9.761758,-9.509987,5.303334,2.853021,-8.229340,-4.107765,8.952175,-6.350828,-2.106149,9.032731,-2.827517,-4.833846,-6.017690,-0.732611,-8.909276,5.814059,4.469496,-5.463848,-6.822914,-1.534365,-9.039092,6.749126,4.122658,-7.718884,-9.568314,2.717049,-6.040907,5.946848,-8.837482,-3.031871,4.957104,8.286276,9.008765,7.005786,6.295707,1.726153,-9.570765,-4.052875,-6.503963,-6.534085,-7.137144,6.955580,6.767308,1.579031,-3.096156,-2.988970,3.076837,-7.921041,-8.852275,-9.434602,-9.555385,7.844556,1.559578,-7.079663,-0.837866,-8.981545,0.337839,8.712617,-9.818472,-6.509996,3.002496,-2.120364,-2.061476,3.252925,0.510288,6.375211,9.689743,-7.750887,-7.038216,6.912086,1.245133,2.613315,2.403077,-3.438119,7.919062,4.144440,5.820198,7.317989,-4.622415,-4.289445,-4.746372,9.059922,-0.779347,-2.640595,0.728985,-9.306825,-8.492623,8.752250,-0.745363,1.617269,-9.785697,-4.805627,8.333079,0.099066,4.258938,4.421355,8.443377,6.464778,-4.112978,-6.445651,1.003127,0.313477,-4.314678,-5.159191,-8.073086,-4.144624,-0.751415,-5.937436,-4.183963,6.297492,-8.315430,-3.032158,-7.922398,1.434462,9.723843,-7.944665,-8.551961,-4.080539,-8.140660,-2.175546,5.307805,3.743731,0.089040,1.804733,4.337692,8.508304,2.346769,-1.578130,-2.225245,-3.380972,1.402754,-7.240424,-2.804428,4.020792,6.075806,8.497731,-3.166265,-0.196354,9.129809,-3.655057,9.368486,-4.436270,0.391092,-7.474843,-3.478208,2.995207,5.025980,-4.280192,2.092539,-4.274812,8.227166,2.001542,-5.365280,8.472316,6.492109,-4.182236,-6.744104,8.863303,7.668413,9.648500,-1.610796,-9.975449,-9.584371,-3.851275,-4.640482,6.993158,-5.493986,5.233563,-4.489497,-6.904234,-1.093714,-3.481099,7.960213,-0.219858,9.695256,6.368329,1.207797,9.529527,-8.982031,7.270856,-3.902439,-0.680946,1.720986,4.990802,-0.901117,4.611547,3.292922,7.226107,5.854961,2.780952,0.581838,-3.579027,-0.024743,4.628266,8.034449,1.564315,6.053397,2.819742,-0.946497,-8.741100,-6.553227,1.004753,-3.716724,0.477480,9.796823,-7.254018,9.610225,4.325019,9.236857,-3.224000,7.894843,-1.514831,7.514997,2.220355,8.691693,-2.988599,9.380145,1.649663,5.743636,6.051601,4.900366,7.834184,-0.747916,7.841411,9.732686,5.782320,7.048285,8.043943,4.685853,-4.437795,5.407152,-1.469862,8.203914,-1.532328,-5.973709,3.174866,2.897697,-3.329561,0.286143,7.647252,1.718527,4.394796,5.856867,7.751427,6.328482,6.292178,7.002291,3.740669,9.784873,5.188430,1.869109,1.545247,1.278314,-2.858692,4.041664,-3.341123,-9.178924,-9.970943,-9.795256,-0.219224,3.681916,-4.687724,-5.655775,0.155347,1.050631,5.480867,2.100064,-0.537772,1.590082,4.351786,-8.586181,6.515587,6.716140,-7.192142,-5.118129,1.807038,-4.287659,-4.310710,6.637552,-7.936253,-6.992513,1.886287,5.232066,-2.083092,4.618621,8.617084,2.210634,-6.189352,-2.069305,4.723484,-4.594662,5.659969,-3.034646,3.138555,2.914855,4.201403,6.228271,-7.692226,-4.608972,8.531632,-9.381831,6.019624,-5.168152,7.497685,7.981134,9.805986,2.627323,-0.380112,-8.393890,-8.637566,-1.791430,1.586079,-4.768848,-9.501411,-4.404058,-4.808046,-9.630165,6.387517,-6.881785,-5.646164,8.823811,3.808954,-7.216026,-9.275873,2.982997,-7.797970,-6.407871,8.345785,8.238717,1.337731,-9.998456,2.833923,-8.742406,8.904393,1.531396,-4.612373,9.225925,4.282970,0.338612,-8.434603,-8.790823,-4.487238,-1.154553,-5.508602,9.005158,8.256249,8.419904,1.636751,7.414969,-3.501741,-7.793910,7.698134,-6.335992,3.530604,0.911133,-4.871958,-9.066287,-0.824324,9.499915,8.401874,1.779983,-3.843268,1.174954,-1.104342,-5.437378,7.057160,5.383123,-1.613982,3.561779,4.826316], dtype = "float32")#candidate|7391|(900,)|const|float32
call_7390 = relay.TupleGetItem(func_2493_call(relay.reshape(const_7391.astype('float32'), [12, 15, 5])), 0)
call_7392 = relay.TupleGetItem(func_2496_call(relay.reshape(const_7391.astype('float32'), [12, 15, 5])), 0)
output = relay.Tuple([call_7388,call_7390,const_7391,])
output2 = relay.Tuple([call_7389,call_7392,const_7391,])
func_7404 = relay.Function([], output)
mod['func_7404'] = func_7404
mod = relay.transform.InferType()(mod)
output = func_7404()
func_7405 = relay.Function([], output)
mutated_mod['func_7405'] = func_7405
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7369_call = mod.get_global_var('func_7369')
func_7370_call = mutated_mod.get_global_var('func_7370')
call_7409 = relay.TupleGetItem(func_7369_call(), 0)
call_7410 = relay.TupleGetItem(func_7370_call(), 0)
func_3932_call = mod.get_global_var('func_3932')
func_3935_call = mutated_mod.get_global_var('func_3935')
const_7427 = relay.const([1.427083,4.994569,-0.376715,4.551307,8.302923,-7.744016,1.043542,-2.956396,-9.024229,0.565151,-5.875122,6.704311,2.187020,-9.481909,0.306725,-9.024428,5.742599,-9.595401,1.017200,5.002955,-3.786136,-9.794810,-7.989176,-1.361155,-8.637063,0.401685,9.932751,-2.894165,5.758545,7.250111,3.947424,6.728644,-8.646193,-4.877836,7.483327,-7.966708,1.982158,0.795980,3.958587,6.161357,-1.234138,2.608735,7.189303,-9.748300,-9.787572,0.790892,1.197644,-1.358221,9.578814,0.927670,-9.306267,-4.020074,4.332765,9.389676,8.371842,-1.714767,5.226039,1.767255,1.357095,5.178104,4.513920,7.626700,-7.032619,-4.805993,8.929498,-7.890905,-9.668040,1.902056,0.541327,-2.001229,2.118775,-3.640825,-6.159105,0.950594,7.440614,6.257562,-3.652675,1.496464,-2.053786,-3.417422,-4.874307,5.829499,3.190411,-5.585648,6.970387,2.787937,2.805480,6.329594,5.782187,0.174405,-5.573286,6.286783,-8.252583,5.294869,4.193069,-7.605301,-3.875156,-7.104361,-3.510899,-5.121591,1.057673,8.913060,2.621619,2.521151,0.351696,9.966264,5.448400,-4.795629,-9.723804,1.411779,7.294052,0.659449,8.711272,9.267038,-2.031290,-6.791121,0.040919,-6.640446,-8.090523,5.708374,-2.650825,3.341357,-5.281628,1.263065,6.365132,-8.568330,-1.188910,0.107546,0.470646,-1.193277,-7.449009,6.277095,-7.006392,5.696050,3.916131,-6.266818,2.105181,-5.864315,-1.620034,-9.627941,-5.883984,-0.802999,-9.955684,-7.994777,4.894595,6.281075,5.267481,7.355663,-1.888594,4.234339,-6.468470,-9.134052,1.882736,3.622155,-8.082143,-4.812296,-2.941727,-0.792405,-2.287340,-2.806702,4.262324,1.710788,-5.002792,-7.644641,0.285498,6.971531,7.386800,-5.030893,-3.268260,-6.125419,9.139301,2.709359,-0.676506,1.539566,-1.303468,-8.349409,9.639293,5.652820,-3.939841,1.958670,7.838705,5.540752,-6.195559,2.983242,4.885224,0.256329,-5.957882,-7.087923,-4.629342,2.684948,2.087519,-8.035787,-9.218193,0.559434,4.876172,-3.500700,9.096213,-3.321142,8.231979,-2.795715,7.430504,-3.132325,-8.617779,-9.935044,-7.625952,4.231348,9.384155,-7.690741,7.829598,9.704446,-9.234754,4.835799,0.740303,2.676188,-7.704811,-5.577061,-0.722599,3.442049,7.207126,2.319402,-4.912466,-3.939822,1.277891,9.656804,-8.840034,4.485026,-5.673073,-9.182756,-2.298920,9.976016,7.598907,1.183716,-3.632959,-1.232983,-7.071676,4.464899,-0.794676,2.227112,-7.037997,7.613906,8.397560,-9.917770,3.414637,4.596855,-1.020238,-7.755759,-4.799515,5.447639,1.133638,0.018647,-8.115008,-3.761574,-1.441045,-4.836239,-6.578101,2.202932,-9.553548,1.152696,-4.726065,-2.325545,0.225188,-7.610433,-5.284169,-3.376967,1.138671,6.690937,-3.758448,-8.794962,2.285828,-9.940299,-9.432137,7.489952,2.361905,9.763175,-7.395649,-2.008211,-3.662479,1.849344,4.976720,-1.384905,9.542049,-6.894918,0.924660,-3.746466,6.694694,-5.346905,-2.313430,-9.387069,8.446401,1.607630,8.500750,5.834389,-9.504671,-8.303783,5.264679,-3.919402,7.321455,-3.704199,-3.533901,8.472251,9.369911,3.002262,-7.326127,7.565889,9.067464,0.283304,5.666611,5.690806,8.915643,6.869938,-6.925958,-3.846081,-3.500411,1.838799,4.122492,-2.867403,-6.305417,4.398642,7.288231,-7.555996,1.315073,-0.241972,7.358436,8.954481,1.425609,5.807379,-0.186756,5.530198,-6.619612,9.226858,-3.467357,8.559362,-3.507172,7.046603,6.940872,-5.463535,5.016758,2.841474,-0.775349,5.366266,0.632108,-1.949525,-1.359237,-6.428332,-2.626532,4.697750,1.942004,9.178239,9.969252,-4.102154,1.840903,9.232523,5.796314,2.773597,9.244142,9.605646,6.079657,4.798382,-8.359841,-9.845638,0.554036,3.159813,-4.237684,-2.720409,0.959328,2.952279,-8.337143,8.139855,1.176074,5.341197,1.773490,-4.415053,-8.619929,2.374986,6.347210,0.525035,3.468440,-4.605786,-3.307433,0.362559,3.334229,-6.927464,2.298626,6.527666,-9.936053,-6.837241,7.365968,-7.080839,-1.770492,-4.126975,5.208658,-8.572899,-7.887473,8.952139,-3.677401,-6.019977,8.631852,5.752132,-6.166321,7.986614,9.106976,9.633280,-6.763504,8.663083,8.343275,0.953983,4.898323,4.899471,-4.460463,-6.994944,0.792219,-3.879860,1.234262,2.591989,-9.162247,-5.585390,-6.827023,-7.767344,8.368246,1.142576,-2.844725,-2.651090,4.936210,8.136316,-2.071209,-9.508468,2.592139,-9.382621,-9.467079,-8.774292,-5.571644,-5.300865,-4.976186,-6.597537,-6.069641,-5.856873,-8.964167,1.998661,-5.569303,4.329943,-6.893056,-5.908586,-9.629063,7.216783,7.801256,1.631080,-6.879940,-1.700250,-8.167017,7.170602,8.588452,4.942537,-1.468222,1.754268,-4.490318,0.579091,-1.562509,-1.836609,-6.595569,7.386976,5.223977,1.639381,-7.336117,5.673845,-0.865452,-4.023404,-6.860358,0.009425,-0.953782,-3.674041,2.111219,1.213091,0.308472,-8.553720,6.925744,1.708463,-7.678851,9.311209,4.545655,-7.548735,7.096330,0.969479,-3.124914,-4.642545,5.746116,5.130295,-1.965578,-3.262756,-1.330121,8.498739,-1.136803,5.225805,7.098799,3.314097,8.608487,7.413725,-2.292346,-1.346837,5.031478,7.335580,6.945244,-7.058805,-4.196974,-7.584068,9.830442,-3.497524,-8.185671,1.218388,-6.186627,-0.322554,-0.740122,-8.289253,-7.906429,6.062782,3.497605,-3.550402,-0.361857,-8.209132,6.701980,9.183819,-5.225903,-8.100615,0.375823,4.600981,4.760854,6.219487,9.376019,-2.038138,0.041460,2.536432,8.453923,8.676457,-0.566719,-7.248791,-0.366250,2.139988,1.467401,-9.990145,4.900350,9.625572,8.680484,-6.583684,-9.019474,1.199356,-8.239137,0.688149,-3.272648,5.215273,-9.370679,6.725898,-6.230908,-8.169167,-2.423096,-5.223421,-0.603228,-2.163858,1.823838,-0.509252,-7.813956,4.005526,-8.733543,-2.374178,4.934579,-9.557199,9.225189,5.282164,-5.096464,2.159504,-4.193228,-0.307990,7.228835,-7.942827,2.997846,8.814823,-7.304683,-2.838196,7.947988,-4.305574,1.330375,-1.968454,-1.355157,-1.196638,2.945499,8.305416,6.653643,-3.295212,0.725515,9.761950,8.703636,-1.127000,1.959757,1.867775,8.167367,-0.784166,-4.017250,2.062566,-1.102025,1.726676,3.954643,7.438776,-8.718836,-6.497298,-0.251814,-6.943020,-2.527903,-9.284522,5.910006,-1.072992,3.516105,4.162671,0.691765,-1.274381,-0.021317,-0.394660,-4.377576,0.034406,2.281367,-4.092502,1.120288,-9.430557,8.601290,-6.507521,-1.195786,2.267358,8.678568,5.036363,5.095505,-7.804149,5.430374,-7.395680,-3.313751,-4.666054,4.088461,0.506113,7.655337,-9.065158,-6.870049,4.269736,6.498569,-2.039344,-5.288564,8.235201,5.573995,9.438893,-5.590698,7.706852,0.318928,7.831318,-3.039081,-4.475582,-8.345245,4.117415,5.388969,8.599583,4.872637,3.846712,2.371623,-3.336164,-7.163896,0.097005,5.182247,5.487566,-7.398659,6.366251,3.300299,-0.803281,-2.176988,5.341613,-8.212236,-5.613044,-9.635040,0.379847,-1.900926,4.109837,-7.949274,-4.756969,7.334076,-5.702781,-7.179214,-8.636159,7.823833,0.397302,-2.560611,3.546632,2.939929,8.506023,6.749299,7.734617,-0.152394,-8.296441,0.549708,-7.259886,-9.634556,-6.073147,-6.701032,7.943105,9.317201,8.088135,7.450841,-2.945667,-0.565659,-5.388673,2.488847,9.233716,-3.637050,-8.752484,-2.470222,-1.991443,2.879599,0.749589,-6.900192,-7.981957,1.761060,0.968760,-4.805366,2.988969,1.611486,5.485280,5.370669,-9.254066,-6.124627,8.097769,5.202805,-8.876277,-3.005110,-3.072871,-4.945595,-8.228413,-5.926459,-5.306210,-8.965129,8.345859,9.684236,-2.688700,-2.469110,7.300344,7.222658,3.235802,-2.311419,0.262863,-7.059227,0.963032,-6.315125,-8.820241,-7.600081,-8.936860,2.352831,-5.537109,-7.637742,7.268806,-6.474426,3.736379,-7.818590,-1.875439,-4.131006,0.690052,-0.037578,4.669158,2.725988,0.718304,-8.595644,-9.592734,-8.750802,9.263517,5.161401,3.486118,8.799929,5.430690,2.588203,-9.862393,6.333900,-8.716685,5.354889,6.131088,-6.104049,-0.761080,-9.142306,-4.458727,2.275782,2.289694,-8.593472,-5.511884,5.029748,5.594138,-8.482383,6.792154,-9.994769,9.633714,3.731611,-3.221931,0.203506,4.453737,3.381287,-1.146377,3.768444,5.891711,-0.411681,9.494123,0.607977,2.987399,-9.592273,5.929592,-4.204573,-1.896900,5.728705,4.920119,1.817935,-1.046868,-6.607892,-7.090026,-0.865775,-9.488303,6.409532,4.001337,-5.367029,-7.263457,6.726119,1.021424,-0.969306,8.884749,-5.536480,6.537738,2.977159,-4.087185,-9.942197,8.440289,-2.371788,-0.552801,0.322058,-6.642359,-5.524140,7.509684,4.039065,5.037481,-4.954627,3.725338,-3.025335,8.317470,9.839631,9.411172,-8.345049,-1.199740,-1.017095,-7.575141,-1.479526,-6.931490,-2.435881,-7.511975,-6.232788,9.233029,7.627791,-8.172048,5.602178,0.902532,9.946654,0.905737,-7.539414,0.381215,-7.663806,-2.812548,-5.736667,7.961536,-1.895351,-3.081779,5.563655,-8.637236,5.394787,-3.087612,-4.039259,3.009890,5.990002,0.037822,-0.025764,-7.256733,-9.103034,-6.557111,8.857351,4.675357,3.489805,5.399801,-0.273576,5.654554,-6.098268,-9.550304,-9.182340,-2.859598,-3.447370,9.221701,-7.833695,2.198574,-0.558266,-6.680138,8.089571,-0.073980,5.422267,-0.843929,9.361133,6.597362,0.762336,-9.848519,4.315801,4.364009,-3.602835,4.931147,6.682846,9.520462,-6.242800,3.300119,-0.825029,-7.301497,6.978579,1.152474,6.863162,-7.912948,-9.708305,-7.547945,-8.961088,-0.539437,-6.043196,1.883178,-7.360488,3.437615,-9.820121,3.909861,-2.864653,6.532025,-2.636414,-3.998369,0.823241,-3.003963,7.316973,-3.016387,5.683898,-8.499149,-8.891826,6.116290,2.578509,5.529759,5.149233,-3.630356,-8.713714,-6.230047,-2.543543,-3.245286,1.677566,4.957630,8.984732,-0.773851,-3.586107,-2.365682,5.952860,-5.687810,3.311260,-1.919297,-1.226913,-0.313085,-5.923475,3.874054,-7.809206,3.090337,-1.638121,-6.127685,-7.528522,-3.829489,-6.280735,8.828854,-6.493721,-6.547572,5.491652,9.674375,9.908958,-8.782787,-8.094212,-2.479999,-6.601033,-4.214440,-3.856172,-3.536319,-9.340865,-9.195718,-1.019509,-7.448878,0.436707,-4.189014,4.443254,-9.390723,7.551415,1.929503,-3.278866,-2.285254,1.588296,6.825271,-2.554405,-7.679620,1.949788,8.900623,-3.467429,-1.050348,-9.572492,-9.948383,-9.104884,-3.748824,1.147452,2.595768,0.511421,-8.492053,8.193305,-6.471054,-5.536047,-5.534829,9.596125,9.698769,7.388140,2.844902,-5.943910,2.596389,-4.723541,-6.211577,4.976889,9.258711,-6.231755,7.668662,-9.435627,9.866735,-2.717010,-6.113521,3.057977,6.143903,6.604474,-7.387135,-0.378397,8.873127,0.305298,9.166233,8.000541,1.804970,-4.746074,9.992404,-3.538674,4.488626,-8.040998,0.200954,3.590575,-6.325246,8.479047,-7.866777,0.506382,0.825469,-8.839145,5.905719,9.322369,0.061316,-0.885570,-4.270333,9.727604,8.297872,2.466906,6.299212,-5.179233,-9.800090,-1.230859,5.097922,-4.281098,-7.422583,9.651006,-5.240161,-6.468256,8.666140,6.293323,0.382330,7.794735,-1.291266,6.604035,-1.822094,-7.072913,-0.404178,0.144377,-2.450885,-0.460842,-9.240913,-6.545173,-3.776823,-3.390806,7.564737,-2.669384,-6.439903,-8.999441,-7.342682,-9.585552,1.851333,0.233905,8.134399,1.676630,-3.936692,-0.363040,-8.654889,-1.466478,3.386338,-4.174109,-3.899926,-3.510451,-4.020168,5.136403,-1.652504,7.964892,-8.076538,1.050326,-8.738644,8.980796,-9.486813,4.026080,9.979563,-4.878333,7.473307,9.747001,9.586425,-8.727646,-6.574086,-6.934972,-5.269597,-9.721819,1.330522,-9.952785,1.916463,-4.668677,-3.064421,-3.742906,7.035892,-1.506392,0.268258,-5.748146,1.852585,-7.406281,8.927318,7.699949,4.332710,-4.411681,7.419105,-3.370357,0.567235,1.511680,-3.122644,4.746225,-2.392336,-2.865049,4.482649,-3.100054,-8.681049,7.554994,6.342999,0.906471,-1.132667,1.086452,-9.872930,-7.525937,2.475488,7.542524,6.587108,2.011536,8.849112,3.992496,8.647547,6.140536,5.036491,3.930374,7.142420,6.985271,-5.834767,-9.194614,-1.047952], dtype = "float32")#candidate|7427|(1170,)|const|float32
call_7426 = relay.TupleGetItem(func_3932_call(relay.reshape(const_7427.astype('float32'), [13, 9, 10])), 0)
call_7428 = relay.TupleGetItem(func_3935_call(relay.reshape(const_7427.astype('float32'), [13, 9, 10])), 0)
func_7101_call = mod.get_global_var('func_7101')
func_7103_call = mutated_mod.get_global_var('func_7103')
call_7437 = relay.TupleGetItem(func_7101_call(), 1)
call_7438 = relay.TupleGetItem(func_7103_call(), 1)
func_3428_call = mod.get_global_var('func_3428')
func_3431_call = mutated_mod.get_global_var('func_3431')
var_7459 = relay.var("var_7459", dtype = "int32", shape = (1440,))#candidate|7459|(1440,)|var|int32
call_7458 = relay.TupleGetItem(func_3428_call(relay.reshape(var_7459.astype('int32'), [9, 10, 16]), relay.reshape(var_7459.astype('int32'), [9, 10, 16]), ), 0)
call_7460 = relay.TupleGetItem(func_3431_call(relay.reshape(var_7459.astype('int32'), [9, 10, 16]), relay.reshape(var_7459.astype('int32'), [9, 10, 16]), ), 0)
output = relay.Tuple([call_7409,call_7426,const_7427,call_7437,call_7458,var_7459,])
output2 = relay.Tuple([call_7410,call_7428,const_7427,call_7438,call_7460,var_7459,])
func_7465 = relay.Function([var_7459,], output)
mod['func_7465'] = func_7465
mod = relay.transform.InferType()(mod)
var_7466 = relay.var("var_7466", dtype = "int32", shape = (1440,))#candidate|7466|(1440,)|var|int32
output = func_7465(var_7466)
func_7467 = relay.Function([var_7466], output)
mutated_mod['func_7467'] = func_7467
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7323_call = mod.get_global_var('func_7323')
func_7324_call = mutated_mod.get_global_var('func_7324')
call_7508 = relay.TupleGetItem(func_7323_call(), 0)
call_7509 = relay.TupleGetItem(func_7324_call(), 0)
output = call_7508
output2 = call_7509
func_7554 = relay.Function([], output)
mod['func_7554'] = func_7554
mod = relay.transform.InferType()(mod)
mutated_mod['func_7554'] = func_7554
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7554_call = mutated_mod.get_global_var('func_7554')
call_7555 = func_7554_call()
output = call_7555
func_7556 = relay.Function([], output)
mutated_mod['func_7556'] = func_7556
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7587 = relay.const([[[8.883131],[-2.253839],[5.144976],[-6.321818],[-4.643088],[-9.617296]],[[5.258809],[6.145456],[7.526237],[7.992914],[8.401653],[-1.160822]],[[1.606647],[-1.348517],[0.388334],[2.107965],[5.367344],[3.806763]]], dtype = "float32")#candidate|7587|(3, 6, 1)|const|float32
uop_7588 = relay.rsqrt(const_7587.astype('float32')) # shape=(3, 6, 1)
output = uop_7588
output2 = uop_7588
func_7590 = relay.Function([], output)
mod['func_7590'] = func_7590
mod = relay.transform.InferType()(mod)
mutated_mod['func_7590'] = func_7590
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7590_call = mutated_mod.get_global_var('func_7590')
call_7591 = func_7590_call()
output = call_7591
func_7592 = relay.Function([], output)
mutated_mod['func_7592'] = func_7592
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7323_call = mod.get_global_var('func_7323')
func_7324_call = mutated_mod.get_global_var('func_7324')
call_7599 = relay.TupleGetItem(func_7323_call(), 0)
call_7600 = relay.TupleGetItem(func_7324_call(), 0)
func_7323_call = mod.get_global_var('func_7323')
func_7324_call = mutated_mod.get_global_var('func_7324')
call_7601 = relay.TupleGetItem(func_7323_call(), 0)
call_7602 = relay.TupleGetItem(func_7324_call(), 0)
uop_7606 = relay.log10(call_7601.astype('float64')) # shape=(7, 12, 14)
uop_7608 = relay.log10(call_7602.astype('float64')) # shape=(7, 12, 14)
func_1424_call = mod.get_global_var('func_1424')
func_1427_call = mutated_mod.get_global_var('func_1427')
var_7625 = relay.var("var_7625", dtype = "int32", shape = ())#candidate|7625|()|var|int32
var_7626 = relay.var("var_7626", dtype = "int32", shape = (2, 700))#candidate|7626|(2, 700)|var|int32
call_7624 = relay.TupleGetItem(func_1424_call(relay.reshape(var_7625.astype('int32'), []), relay.reshape(var_7626.astype('int32'), [10, 10, 14]), ), 0)
call_7627 = relay.TupleGetItem(func_1427_call(relay.reshape(var_7625.astype('int32'), []), relay.reshape(var_7626.astype('int32'), [10, 10, 14]), ), 0)
output = relay.Tuple([call_7599,uop_7606,call_7624,var_7625,var_7626,])
output2 = relay.Tuple([call_7600,uop_7608,call_7627,var_7625,var_7626,])
func_7628 = relay.Function([var_7625,var_7626,], output)
mod['func_7628'] = func_7628
mod = relay.transform.InferType()(mod)
mutated_mod['func_7628'] = func_7628
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7628_call = mutated_mod.get_global_var('func_7628')
var_7630 = relay.var("var_7630", dtype = "int32", shape = ())#candidate|7630|()|var|int32
var_7631 = relay.var("var_7631", dtype = "int32", shape = (2, 700))#candidate|7631|(2, 700)|var|int32
call_7629 = func_7628_call(var_7630,var_7631,)
output = call_7629
func_7632 = relay.Function([var_7630,var_7631,], output)
mutated_mod['func_7632'] = func_7632
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7404_call = mod.get_global_var('func_7404')
func_7405_call = mutated_mod.get_global_var('func_7405')
call_7634 = relay.TupleGetItem(func_7404_call(), 0)
call_7635 = relay.TupleGetItem(func_7405_call(), 0)
func_7404_call = mod.get_global_var('func_7404')
func_7405_call = mutated_mod.get_global_var('func_7405')
call_7638 = relay.TupleGetItem(func_7404_call(), 1)
call_7639 = relay.TupleGetItem(func_7405_call(), 1)
const_7651 = relay.const([[[True,False,True,True,False,False,True,False,True,False,True,False,False,False],[True,True,False,False,True,False,False,False,False,False,False,False,False,False],[False,True,False,True,False,True,True,False,False,False,False,True,False,False],[True,True,False,False,False,True,False,True,True,True,True,True,True,True],[True,True,True,False,True,True,True,True,True,False,True,True,True,True],[False,True,True,True,False,False,True,False,True,False,True,False,True,True],[True,False,False,False,True,False,False,False,True,False,True,False,False,False],[True,True,False,True,True,True,False,True,True,False,False,False,False,True],[False,True,False,True,True,True,False,False,True,False,True,False,False,False],[True,True,True,False,False,True,False,True,False,False,True,False,False,True],[False,False,False,True,True,True,False,False,False,False,True,True,True,False],[True,True,False,False,False,True,True,True,False,True,False,True,True,True]],[[True,False,False,True,False,True,False,False,False,True,False,False,True,True],[True,False,True,False,False,False,True,False,True,False,True,False,True,False],[True,False,True,False,False,False,True,True,True,False,True,True,True,True],[True,False,True,False,True,False,False,True,False,True,True,False,True,True],[False,False,True,True,True,False,True,True,False,False,False,True,False,True],[False,True,True,True,False,False,True,True,False,False,False,True,True,True],[True,True,False,True,True,True,False,False,False,True,False,False,True,False],[False,False,False,False,True,True,False,True,True,True,False,True,True,False],[False,True,False,True,False,False,False,True,False,False,False,False,True,False],[False,True,False,False,True,False,True,False,True,True,False,False,False,False],[False,False,True,False,True,True,False,True,True,False,False,True,True,False],[True,False,False,False,True,True,False,False,True,True,True,True,False,True]],[[True,True,True,True,True,False,False,False,True,False,True,True,False,True],[False,True,False,False,False,False,False,True,True,False,False,True,False,True],[False,False,False,True,True,True,True,False,False,True,False,True,True,True],[False,True,True,True,True,True,True,True,True,True,False,True,True,False],[False,True,True,False,False,True,True,True,True,False,False,True,True,False],[False,False,False,True,False,True,False,True,False,True,False,True,False,False],[False,True,True,False,True,False,False,True,False,False,False,True,False,False],[False,False,True,False,False,True,True,False,False,True,True,False,False,True],[True,False,False,False,False,True,False,True,True,True,False,True,True,False],[False,True,True,False,True,False,True,False,True,False,False,True,False,False],[True,False,True,False,True,True,False,True,False,True,False,False,False,False],[True,True,False,False,False,True,False,False,True,True,False,False,False,False]],[[True,False,False,False,False,False,True,True,True,True,False,False,False,False],[False,False,False,True,True,True,True,False,False,False,False,False,True,False],[False,True,False,False,True,True,False,False,True,True,True,False,True,False],[False,True,False,False,False,True,False,True,False,True,True,False,True,True],[False,True,True,True,False,False,True,False,True,True,False,False,True,True],[False,False,True,True,True,False,True,True,True,True,True,True,True,False],[True,False,False,False,True,True,True,False,True,False,False,False,True,False],[False,False,True,True,False,True,False,False,True,True,True,False,True,False],[True,False,True,False,False,True,False,False,False,True,False,False,True,False],[False,True,False,True,True,True,False,False,False,False,False,True,True,True],[True,False,False,False,False,True,True,True,False,True,True,False,True,True],[False,False,True,True,True,True,False,True,False,False,True,True,False,True]],[[False,True,False,False,False,False,False,False,True,True,True,True,True,False],[False,False,True,False,False,False,True,False,True,True,True,False,True,False],[True,True,True,True,True,True,True,True,False,False,True,True,True,True],[True,False,True,True,False,True,True,True,True,True,True,True,False,False],[True,False,False,False,True,True,True,False,False,True,True,False,True,True],[False,False,False,True,True,True,False,True,False,True,False,False,False,True],[True,True,True,False,True,True,False,False,False,True,True,True,False,False],[True,True,True,True,False,True,False,True,True,False,False,True,False,True],[True,False,False,False,True,False,False,False,True,False,True,False,False,False],[True,False,False,False,False,False,False,False,True,False,True,False,True,True],[False,True,False,True,True,True,False,True,True,False,True,False,True,False],[False,True,False,True,True,True,False,True,True,False,True,False,False,False]],[[True,True,False,True,False,False,False,False,True,False,True,False,True,False],[True,False,True,True,True,True,True,False,False,True,False,True,True,True],[False,True,False,True,True,False,False,True,False,False,True,False,True,False],[False,False,True,True,False,False,True,True,True,False,True,False,True,True],[True,False,True,True,True,True,False,False,True,False,False,True,True,True],[True,False,False,False,False,True,True,False,True,False,True,False,False,False],[False,True,False,False,True,True,True,True,False,False,True,True,False,True],[False,True,True,False,True,True,False,True,False,True,True,True,False,False],[True,False,True,False,False,True,False,True,False,True,False,False,True,False],[True,False,True,True,True,False,True,True,True,True,False,True,True,False],[False,True,False,False,True,True,False,True,False,False,True,False,True,True],[False,True,True,True,True,True,True,False,True,False,True,True,False,False]],[[False,True,False,True,False,False,True,True,False,True,True,False,True,False],[True,False,True,True,True,True,True,False,False,False,True,True,False,False],[False,False,False,True,True,False,False,True,True,True,True,True,False,False],[True,True,False,False,True,True,False,True,False,True,True,False,True,False],[False,True,True,False,False,True,True,True,False,True,True,True,False,False],[False,False,False,True,True,False,False,True,True,False,False,False,True,True],[False,False,False,False,True,True,True,True,False,False,True,False,False,False],[True,False,False,True,True,False,True,False,False,True,True,True,True,True],[True,False,True,False,False,True,False,True,False,True,True,False,False,False],[True,False,False,False,False,False,False,True,False,True,False,False,False,True],[True,True,True,True,True,False,True,True,True,True,False,True,True,True],[True,True,True,False,True,True,True,True,True,True,True,True,False,True]]], dtype = "bool")#candidate|7651|(7, 12, 14)|const|bool
bop_7652 = relay.bitwise_or(call_7634.astype('int32'), relay.reshape(const_7651.astype('int32'), relay.shape_of(call_7634))) # shape=(7, 12, 14)
bop_7655 = relay.bitwise_or(call_7635.astype('int32'), relay.reshape(const_7651.astype('int32'), relay.shape_of(call_7635))) # shape=(7, 12, 14)
func_498_call = mod.get_global_var('func_498')
func_501_call = mutated_mod.get_global_var('func_501')
const_7668 = relay.const(-5, dtype = "int64")#candidate|7668|()|const|int64
var_7669 = relay.var("var_7669", dtype = "int64", shape = (8, 288))#candidate|7669|(8, 288)|var|int64
call_7667 = func_498_call(relay.reshape(const_7668.astype('int64'), []), relay.reshape(var_7669.astype('int64'), [16, 9, 16]), )
call_7670 = func_498_call(relay.reshape(const_7668.astype('int64'), []), relay.reshape(var_7669.astype('int64'), [16, 9, 16]), )
func_4582_call = mod.get_global_var('func_4582')
func_4586_call = mutated_mod.get_global_var('func_4586')
const_7672 = relay.const([2,2,-10,-5,-3,3,2,-5,-7,3,3,-10,10,7,1,-5,-7,10,-5,2,-2,1,-6,2,-5,3,-2,9,4,-4,-3,-7,-7,8,1,-9,-6,6,7,3,10,10,-6,4,6,-4,-8,-7,-7,-8,-6,1,7,2,-3,8,1,-7,-10,9,-2,4,4,-6,8,-7,-1,4,6,-6,1,6,5,-10,-8,-10,2,10,-5,4,10,-6,2,3,-6,-8,-4,-8,10,1,-5,-8,-4,2,5,-1,-7,-8,-8,8,-9,-10,3,-9,6,-2,-2,9,-9,5,4,10,6,-2,-6,-8,-7,7,6,4,7,-2,-8,-7,1,2,-10,9,-10,-8,-1,3,-5,-9,-6,5,-1,-4,-10,-6,3,-6,-8,-8,-4,-7,5,3,8,-2,-5,10,4,2,5,4,-6,2,3,-4,-6,-2,-9,-10,-6,-3,-9,-6,-9,8,-8,3,-1,8,4,-1,-3,1,7,-10,4,-4,8,-10,2,-2,-10,-4,9,5,6,-2,-10,-2,4,9,-5,3,-7,-10,-10,-1,7,-1,1,-8,3,-7,-4,-1,-9,6,-7,7,3,5,10,-2,-1,-1,-1,1,-10,-7,7,3,-10,2,-10,-1,6,6,10,-3,3,5,-5,-7,7,9,4,2,1,-9,-2,-3,4,6,-9,7,5,5,-10,-4,8,1,-7,4,-4,8,5,6,-3,5,3,6,-6,7,5,1,7,5,-4,2,4,-5,3,8,8,-10,3,-7,8,5,7,5,9,-8,1,-2,-1,-1,2,2,1,9,7,5,3,-9,7,4,5,10,3,-8,10,-9,-1,2,-3,7,8,5,3,2,9,-7,-8,-8,-10,-5,10,-3,-3,2,-4,5,-3,5,-6,8,-1,-10,4,1,-6,2,-8,-4,8,8,5,7,-6,3,-7,5,-8,8,5,-5,4,7,-2,5,-9,5,-6,1,3,4,-7,-8,6,-6,-5,-1,8,-3,1,2,2,-5,8,-2,9,10,5,-10,8,-3,7,-4,-2,-3,8,4,-3,-8,-4,-1,-6,-1,-1,-3,9,1,-10,10,5,-8,1,1,-10,4,-1,10,-5,10,4,-6,1,-10,4,2,3,10,-1,-5,-4,-8,-3,-4,-9,-6,-10,-7,-10,10,5,3,4,-2,-8,8,8,-9,-6,9,9,-10,6,10,6,-1,-3,-1,-10,4,9,-2,-9,8,-3,-1,-2,3,-8,-5,-2,5,1,-4,8,8,9,-6,10,2,-1,-8,-1,3,4,6,-6,-1,7,-9,3,-2,-7,9,-2,-3,-3,8,-3,-5,-2,-1,4,-5,-9,-5,2,-3,8,8,-4,-7,-3,-2,7,-3,10,7,-8,-4,9,-9,9,-3,5,-8,-4,5,1,6,-5,-9,3,-1,-10,-7,-4,-3,-10,1,8,6,6,3,-1,5,8,-2,-10,1,8,3,6,-7,10,4,9,4,-3,5,6,9,6,4,-4,7,4,-4,-4,9,-8,6,4,5,6,1,-9,-7,-2,10,7,8,7,-4,-2,9,-7,-7,6,10,1,-4,-10,7,2,-7,-5,10,6,7,8,-8,-2,8,7,9,-7,-2,4,8,7,4,-10,-5,10,-4,9,-3,-7,8,7,3,10,1,-5,1,4,-3,2,3,-2,-8,9,4,2,-9,1,3,9,5,-2,-5,4,5,8,5,4,-2,7,-8,-2,-8,-3,2,6,8,-6,6,-1,-3,6,-10,5,5,2,3,-10,-4,-3,-5,-6,6,-7,9,1,8,3,-10,-10,10,-8,-5,-3,1,5,-2,-10,2,-1,5,4,1,-1,-6,6,4,-9,4,8,-6,3,4,8,-3,9,-1,3,-2,3,-9,4,-4,-2,4,6,-3,-2,4,-4,-9,9,6,1,8,6,6,-3,-4,1,-7,8,7,8,9,10,-5,-7,-3,-10,6,-10,-7,-5,8,-7,-4,-6,6,-2,-5,1,3,10,-8,-7,-6,9,10,2,-1,-2,7,-5,1,6,-2,-6,6,-9,8,-1,2,8,3,9,-3,10,-10,-1,-2,7,-3,-9,10,-7,3,-1,-9,9,10,-7,-1,-1,10,2,-8,-8,-3,-1,-4,-9,8,3,10,-1,-2,-5,5,-3,-9,-9,-3,7,-3,-9,9,-3,10,6,10,4,4,-4,-5,-4,-2,-1,-9,3,1,8,-9,-8,-6,1], dtype = "uint8")#candidate|7672|(825,)|const|uint8
call_7671 = relay.TupleGetItem(func_4582_call(relay.reshape(const_7672.astype('uint8'), [15, 11, 5]), relay.reshape(const_7672.astype('uint8'), [15, 11, 5]), ), 0)
call_7673 = relay.TupleGetItem(func_4586_call(relay.reshape(const_7672.astype('uint8'), [15, 11, 5]), relay.reshape(const_7672.astype('uint8'), [15, 11, 5]), ), 0)
output = relay.Tuple([call_7638,bop_7652,call_7667,const_7668,var_7669,call_7671,const_7672,])
output2 = relay.Tuple([call_7639,bop_7655,call_7670,const_7668,var_7669,call_7673,const_7672,])
func_7690 = relay.Function([var_7669,], output)
mod['func_7690'] = func_7690
mod = relay.transform.InferType()(mod)
var_7691 = relay.var("var_7691", dtype = "int64", shape = (8, 288))#candidate|7691|(8, 288)|var|int64
output = func_7690(var_7691)
func_7692 = relay.Function([var_7691], output)
mutated_mod['func_7692'] = func_7692
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7101_call = mod.get_global_var('func_7101')
func_7103_call = mutated_mod.get_global_var('func_7103')
call_7700 = relay.TupleGetItem(func_7101_call(), 1)
call_7701 = relay.TupleGetItem(func_7103_call(), 1)
const_7702 = relay.const([[[-8.449306,-9.271589,0.359663,3.374501,8.070083,5.561140,8.445660,-0.723161,-0.367071,6.210372,-8.634693,1.062190,-1.755269,9.923933],[1.493314,-3.889050,-7.826729,1.735106,7.693829,-0.365190,8.029655,-9.782257,4.252443,0.068134,3.512585,7.146757,-7.221408,-4.470083],[6.988274,-5.923626,-8.663020,5.809285,4.775593,3.939912,7.919453,3.092625,2.793768,9.557472,-2.300545,-5.379482,0.587214,9.547930],[0.203442,-1.838134,0.973081,3.044808,-5.355273,-5.828331,-7.403885,-5.600520,7.942846,-1.052418,-8.654964,-1.831600,-5.310927,-4.650904],[-1.931962,1.207097,7.943941,4.172500,-9.405735,3.981019,0.457397,-9.675100,2.782750,6.957410,2.916613,2.231666,5.731031,-9.532144],[4.574531,-9.618560,8.302050,2.438671,8.180776,9.981341,7.683823,-2.944325,4.820071,-8.342014,-5.625112,1.004270,6.090942,3.348358],[-3.879159,-3.626358,-2.004375,-6.091486,4.042863,7.705074,-6.622899,-1.699984,4.792495,-4.338168,-5.189964,5.297942,-4.947493,-1.262670],[9.312681,-0.228981,4.523238,2.928078,1.810922,5.809171,4.584192,-1.665019,-2.332198,-4.462910,8.631336,-2.827816,2.997183,-2.318361],[-3.153697,-8.243899,-0.897809,-8.491628,3.784450,-7.081226,0.435775,5.745984,-5.489820,-9.208368,5.726679,-6.989875,0.107951,-7.555240],[-1.324950,-3.067878,7.598247,-2.079208,5.981084,6.489016,4.772235,-3.945782,-1.380502,1.217502,6.745859,3.270560,-0.435665,0.098681],[-6.053656,3.955822,6.904792,8.115591,-5.616932,-8.066757,-7.599712,-8.747673,7.294248,-3.198844,4.975762,-4.401998,8.596263,4.707147],[3.365647,7.939319,-4.248008,-9.123862,-7.549684,-7.568996,-4.820208,6.105034,-0.767080,-0.409409,-6.567418,2.885627,-0.188536,-8.635687]],[[8.453799,-5.533480,-3.300588,-6.227402,-6.145793,-9.009936,4.153746,5.141956,-1.742430,-0.240238,-0.378415,-2.151632,-5.915411,-2.225393],[-2.050988,-7.597538,-4.109001,-4.780620,8.365044,6.820205,-1.229807,-5.144926,-4.704761,1.999973,-4.464267,-2.835293,-4.249708,0.685574],[-8.519481,6.959467,-3.602956,4.050531,-1.650834,-1.490529,-6.813861,4.425176,1.462056,-2.215919,8.034156,-8.282380,-7.761136,8.239478],[-3.151699,9.444195,-2.892284,6.549911,-3.326689,-5.657634,-2.148670,-4.347379,-6.660346,7.423834,-6.343796,-5.923264,8.202798,0.190109],[2.112307,-0.917509,-6.728820,-8.427171,6.570944,1.173530,-4.117204,-6.672254,-6.056272,-5.082557,7.871229,3.690622,7.719281,0.356534],[-5.885855,-3.992889,8.154825,7.819580,-7.832040,5.136105,8.146323,-1.143046,-8.120515,3.257375,8.764275,3.228684,7.747499,-9.625570],[-5.744236,-0.533633,3.579205,-8.091947,0.742889,-9.995289,-6.508408,1.969239,-9.511410,1.361371,0.805745,-3.169865,-1.900679,3.840546],[-8.411800,1.330671,2.928344,6.773932,-3.508658,-4.628065,-7.468725,-3.152835,-3.907988,-9.082371,2.583359,7.840712,-5.875850,8.413991],[9.789131,5.543566,6.755317,8.068813,-6.638239,7.053296,-4.602577,-3.850733,-3.404664,4.164784,9.776623,4.607304,-7.409654,9.080720],[-5.431103,3.694816,9.097821,7.490376,4.425740,3.718780,-7.402411,3.071148,-9.919219,7.223403,-0.418613,7.166074,-5.751459,-3.859650],[0.279270,-2.711531,-8.926953,-6.097763,-0.537664,-4.796690,-0.697840,9.625480,-1.932817,9.888884,-6.425908,2.390278,-4.906167,-9.450683],[-4.215139,0.640114,-9.588417,7.515586,5.909348,-5.079296,-5.888449,-8.481098,4.004544,8.669486,-9.160561,-0.783120,9.390383,3.327096]],[[7.907381,-5.040377,-3.980308,2.718545,5.352130,4.690628,-5.308498,-0.170465,4.917223,1.740734,-2.824712,-9.555610,-6.539041,-3.193166],[8.338684,8.843334,6.461781,-5.594302,7.578933,9.732001,-1.497795,4.578604,-5.948253,6.465749,-8.161085,-4.758828,1.826140,6.718850],[-1.615043,3.470175,8.800907,-5.046815,7.141814,-7.204963,-4.656919,3.582856,9.474753,-1.932887,7.507213,3.590290,-9.862499,-6.289891],[-7.776284,5.119539,9.124594,-9.018830,2.683325,-0.198409,7.849552,3.862796,-3.518944,5.098603,-6.781170,4.619213,9.211918,4.547239],[3.886791,-5.908608,-1.899662,-6.932673,-0.784272,-8.411010,8.692533,-5.984107,-6.641681,-1.744413,8.559051,-0.951704,0.159375,1.083065],[-2.921880,0.091222,-7.601006,5.958760,8.794201,9.874594,7.868413,-9.032500,-7.559962,7.193134,-8.464761,9.802295,8.903146,6.549416],[4.838545,-7.074819,-1.445045,3.241647,5.795920,7.377191,-9.124526,-9.494209,-3.659501,-8.369806,-6.033421,3.995788,-7.173271,-6.664635],[-3.923934,-3.389777,-2.215302,3.094513,-9.330335,6.652302,-2.434969,4.580508,7.616833,-2.278205,-6.656776,-4.178908,-6.830661,2.429502],[-9.515848,1.033586,-5.295948,4.023254,-1.256511,6.465188,7.496445,-7.853892,1.537364,6.788415,2.279074,-8.609473,-4.285753,-6.706886],[7.705729,3.014816,7.698905,-5.788238,2.200043,-8.660065,4.382752,-6.406325,0.558558,-0.876643,-9.282040,6.375810,6.104378,0.276767],[1.530017,-7.558300,-9.572361,-1.979481,-8.961949,0.571274,-1.511400,5.171236,9.790727,6.462611,-3.154065,7.364345,0.786881,4.823752],[-3.003602,-4.119481,-9.477721,-6.157567,7.063870,7.128953,-4.582370,8.721185,-4.214937,-3.230045,-1.847736,-1.554935,6.566425,-5.286619]],[[4.959614,9.533340,-4.523371,0.384099,-7.198198,6.940061,-7.987636,-9.413500,9.710147,-3.041427,-6.049613,5.397992,-4.090274,-7.151410],[6.420316,-8.250319,-9.158303,8.592236,9.807486,9.674810,-5.135010,8.724933,9.821602,9.902995,5.995164,3.830827,-1.971871,0.237290],[-9.297383,-5.348328,-9.806280,-6.893815,-2.083810,3.690807,-2.315071,-6.154053,-3.466889,-4.106117,3.342565,-6.119639,3.590487,-9.328136],[9.751445,-3.964637,0.642823,7.541578,0.844828,-0.970071,0.943885,4.549445,2.574030,9.305148,-3.648048,1.310535,1.247499,-8.097049],[4.654101,6.959225,-7.668376,2.522679,-3.625356,2.057334,-5.328977,-3.180285,-4.581223,-8.975711,2.528017,4.212401,0.276262,3.483723],[-1.712677,2.424953,-9.186666,-4.540402,-2.547369,6.961803,7.529826,-2.293461,-0.615292,7.970400,-9.695164,-3.970671,9.666750,3.082623],[5.276919,-1.986793,1.149787,7.830458,-0.684821,-5.490321,0.677800,3.202465,3.100999,9.899912,-7.934072,-7.174972,-4.693238,-2.714293],[-0.011610,-7.444818,-1.456018,1.990691,-8.378331,-2.172794,6.902673,1.379752,-2.192254,9.897654,-8.942316,4.878035,5.051820,1.758677],[9.930748,-2.635638,-4.188475,7.392419,3.823643,-4.934430,1.711480,-9.474135,9.940804,-6.122831,-6.684657,4.497572,-3.655735,-0.851547],[-0.890007,2.174164,0.727641,2.939224,-8.442080,2.593929,-2.255459,7.784673,-0.648980,-5.518676,2.719870,1.358973,-8.547831,-5.165532],[8.607989,-0.668949,-5.796244,8.684719,1.028070,0.048184,6.356603,4.867510,-4.731926,-8.521793,-8.811210,6.112833,8.142310,-3.530521],[2.035033,-0.703755,2.910662,2.091650,-8.128133,2.568402,3.925954,9.767922,7.889069,-5.925748,7.268707,-2.611981,2.747658,9.986854]],[[-7.439237,-0.011261,-7.054968,5.414300,-9.518236,8.784897,5.659377,-6.673576,-4.847484,-4.094306,7.768945,9.243344,8.931708,-1.582234],[9.816172,1.280574,5.225820,-5.371843,-3.294156,6.604523,-2.614877,6.412553,-3.900088,-7.192410,9.699498,-1.139612,-3.167742,3.388554],[-4.965913,-2.368604,7.037068,7.552310,-1.991326,-7.149502,7.473765,1.406329,-8.536591,-5.353974,-2.920782,1.115710,9.487784,-7.742050],[-9.791134,3.427936,-0.875182,-1.461515,0.177679,-9.185357,6.915526,-6.275861,5.854683,-7.092749,-5.782759,-7.282222,-4.659999,-0.697517],[9.622226,7.595933,-5.578562,-7.349930,-2.788350,-3.776581,1.624984,1.713242,9.208182,4.934839,3.003299,-5.637401,-2.034566,1.480783],[4.547716,-3.499723,-5.728997,-7.263468,-8.274574,3.752472,2.277985,-8.049967,4.698041,-3.287555,6.747391,8.670907,4.395355,-0.961145],[-6.714719,-4.903037,8.663443,-0.857113,-5.644376,-3.376368,-9.165210,-2.211582,2.293826,-6.998278,-7.638437,3.525600,-9.815986,5.490605],[2.229271,-7.825145,9.684079,2.093116,4.901708,-9.872260,-2.979720,4.685687,8.450496,-4.514416,-0.539599,8.577719,5.033776,5.683195],[0.210754,-1.721445,-6.864543,-7.451118,5.973394,1.645888,1.061740,1.809663,-8.916963,-5.261067,-3.847762,9.583953,0.546732,7.743627],[8.664637,6.657857,3.277229,0.579898,-2.561142,8.015970,5.635302,-6.205273,6.011720,-9.003900,-1.005739,0.586287,-3.485245,-9.390466],[5.649797,-9.440749,-7.940023,8.141907,0.003011,2.407241,-4.091008,-1.902907,0.978460,-1.418878,-7.443764,9.749456,-1.692360,5.774114],[2.023844,-1.833952,4.634355,7.169771,-2.520330,-3.521440,-2.078813,8.448732,-5.092917,-8.403007,6.090158,-6.950316,-8.160765,-9.424767]],[[-4.699722,5.920470,8.942264,-6.276608,-3.479966,-8.255192,-8.494560,5.172293,1.034968,2.602390,-1.982088,4.321607,6.309732,8.270948],[7.253008,-7.086079,3.425521,9.979510,2.631809,0.249758,-4.165747,8.174320,-1.799402,8.755618,4.729380,-4.505277,-9.276246,6.956557],[3.244545,7.284639,9.800579,8.241028,9.658494,7.571716,-8.548144,0.879828,3.966775,-4.737338,4.379439,2.928684,-8.787055,-4.560748],[2.829220,-7.847254,-1.515764,-7.278661,3.927191,-6.342989,-9.797895,-1.751594,-4.772326,7.095728,-7.429839,-6.266904,6.979811,-1.816312],[7.728172,2.867008,3.688352,2.316881,7.495982,0.870793,2.679231,-4.811902,2.948624,5.151292,-3.053290,5.823496,-9.166240,-4.131564],[0.024528,3.232216,3.653235,-6.372487,2.697968,-6.817836,0.970900,7.795023,9.872146,-0.977122,-5.501240,-1.985801,0.480468,5.005340],[3.525841,2.241339,9.805100,9.038812,1.525333,2.143801,-9.601067,-4.011025,5.484953,-3.325728,9.798380,0.428399,-5.069649,-5.812434],[-5.206122,2.980494,5.026800,-3.511308,-9.295237,5.872845,6.271974,-3.577481,-9.369017,9.145268,-3.827784,-9.065530,7.257778,-0.655516],[8.469608,0.746790,-3.093674,-7.806995,8.092732,-4.751280,-4.061468,-0.344112,-4.800606,0.717186,9.064189,-7.382763,9.668542,7.261781],[2.087235,-6.779614,-7.526186,-9.919539,0.352273,-4.530927,6.898631,-7.653052,-7.038575,-2.051296,4.775534,2.166961,-3.099884,-7.041664],[-6.671950,-7.233992,3.212454,-3.319448,-4.609689,6.044967,7.889084,6.982089,-9.229159,0.984171,-1.107946,-1.225496,4.877237,-2.694641],[4.458276,6.348309,-5.426044,0.721109,4.250494,1.269634,-2.021481,9.856349,-0.126881,7.624066,-7.403913,0.018887,-7.599728,-2.775022]],[[4.954181,6.474980,7.166723,-5.233769,6.387011,-4.579325,4.619843,-8.596929,-6.121433,-1.129677,-0.437426,5.926535,-7.667908,2.322497],[-2.706649,-1.401566,-6.656258,9.705673,4.798720,5.061947,8.039608,7.318031,2.582287,3.058776,4.987117,-1.265075,1.420801,-9.315801],[-1.050363,-1.364064,9.490362,-0.015078,-0.530226,8.149691,3.592310,-5.824315,-0.354682,-6.840441,-4.889620,9.873745,0.161823,8.038325],[-8.745399,-9.245845,-4.170124,6.777014,2.405562,2.971448,6.468323,7.001242,-0.931829,-0.711169,1.579942,-6.883409,-5.517593,3.854223],[-5.701491,-5.809674,-2.326037,5.983189,0.986868,-3.062508,0.969233,-2.391564,3.021678,8.930000,-1.001876,-5.041699,-5.306830,6.232922],[9.927070,-8.803133,2.870628,-5.752464,3.629795,-9.427068,-3.400666,-6.051526,2.429231,0.781519,-0.944939,-1.852425,-8.385700,8.393942],[8.955978,1.816003,0.043889,-2.634034,-9.976645,9.909524,0.621363,-6.935036,-7.759007,5.843945,7.575238,-6.548461,5.470766,-7.977440],[-4.613629,8.549459,-0.078394,-1.452217,-8.604715,7.832282,8.769967,1.998183,-5.875376,-0.740784,-2.600662,-3.240869,-8.751465,0.422720],[2.796606,4.097588,8.148840,-4.269037,2.083551,-8.697609,9.323152,-2.403580,-6.316761,7.276440,4.521642,7.705518,3.022471,-8.259591],[9.721050,-5.410394,1.019881,-0.213033,-2.693025,6.107266,5.109448,6.135292,2.546149,4.646220,6.212928,-5.976857,-4.376772,-8.942819],[-8.177894,-3.616005,6.737899,-7.385237,-9.977151,8.676817,7.461680,6.400734,-5.439021,-3.959845,-9.964299,5.113761,-5.932925,3.628218],[-0.550214,3.268682,-4.207960,-5.613807,-7.882506,-2.574009,3.808816,3.284823,-2.447422,2.627654,6.100729,-7.229140,0.940380,-6.695382]]], dtype = "float32")#candidate|7702|(7, 12, 14)|const|float32
bop_7703 = relay.floor_mod(call_7700.astype('float32'), relay.reshape(const_7702.astype('float32'), relay.shape_of(call_7700))) # shape=(7, 12, 14)
bop_7706 = relay.floor_mod(call_7701.astype('float32'), relay.reshape(const_7702.astype('float32'), relay.shape_of(call_7701))) # shape=(7, 12, 14)
uop_7714 = relay.sin(const_7702.astype('float32')) # shape=(7, 12, 14)
output = relay.Tuple([bop_7703,uop_7714,])
output2 = relay.Tuple([bop_7706,uop_7714,])
func_7724 = relay.Function([], output)
mod['func_7724'] = func_7724
mod = relay.transform.InferType()(mod)
output = func_7724()
func_7725 = relay.Function([], output)
mutated_mod['func_7725'] = func_7725
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7744 = relay.var("var_7744", dtype = "float64", shape = (1, 6, 11))#candidate|7744|(1, 6, 11)|var|float64
uop_7745 = relay.asinh(var_7744.astype('float64')) # shape=(1, 6, 11)
output = uop_7745
output2 = uop_7745
func_7747 = relay.Function([var_7744,], output)
mod['func_7747'] = func_7747
mod = relay.transform.InferType()(mod)
mutated_mod['func_7747'] = func_7747
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7748 = relay.var("var_7748", dtype = "float64", shape = (1, 6, 11))#candidate|7748|(1, 6, 11)|var|float64
func_7747_call = mutated_mod.get_global_var('func_7747')
call_7749 = func_7747_call(var_7748)
output = call_7749
func_7750 = relay.Function([var_7748], output)
mutated_mod['func_7750'] = func_7750
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7323_call = mod.get_global_var('func_7323')
func_7324_call = mutated_mod.get_global_var('func_7324')
call_7756 = relay.TupleGetItem(func_7323_call(), 0)
call_7757 = relay.TupleGetItem(func_7324_call(), 0)
uop_7758 = relay.asin(call_7756.astype('float64')) # shape=(7, 12, 14)
uop_7760 = relay.asin(call_7757.astype('float64')) # shape=(7, 12, 14)
func_6212_call = mod.get_global_var('func_6212')
func_6215_call = mutated_mod.get_global_var('func_6215')
const_7775 = relay.const([[-3],[5],[-1],[3],[7],[10],[-4],[6],[8],[1],[3],[-8],[9],[-6],[8],[-7],[6],[6],[-2],[5],[-7],[-9],[-9],[-10],[-8],[1],[-1],[4],[8],[6],[-3],[7],[-6],[-9],[4],[-2],[-8],[3],[7],[-4],[-6],[-6],[-3],[10],[-2],[9],[1],[5],[1],[-8],[9],[-7],[10],[-4],[-7],[1],[5],[-4],[-10],[4],[-3],[5],[9],[3],[-7],[4],[-10],[3],[-2],[8],[9],[-3],[-9],[-7],[-1],[8],[1],[10],[-7],[-9],[-4],[10],[-1],[6],[4],[-3],[5],[9],[2],[10],[-6],[1],[-4],[-7],[-2],[5],[7],[-9],[-10],[4],[-1],[7],[2],[10],[2],[1],[-10],[7],[-1],[-7],[1],[8],[9],[10],[4],[-3],[10],[1],[-8],[8],[-2],[-9],[-1],[-8],[-1],[7],[9],[1],[5],[-7],[-3],[4],[-2],[5],[-5],[-9],[-4],[-9],[5],[9],[-4],[-7],[2],[-1],[7],[-5],[-10],[-6],[-3],[2],[6],[5],[2],[-4],[3],[10],[-8],[10],[-4],[8],[-3],[-4],[4],[-5],[10],[7],[9],[-3],[7],[-7],[-1],[-8],[3],[-10],[3],[10],[2],[8],[3],[7],[1],[7],[-7],[10],[-10],[-6],[5],[9],[-4],[-6],[-8],[10],[10],[8],[-1],[7],[10],[-1],[-6],[2],[-9],[6],[-2],[3],[3],[-2],[6],[3],[-2],[-1],[5],[-5],[4],[1],[-1],[6],[3],[6],[-7],[3],[6],[3],[1],[-10],[-6],[-8],[-9],[-7],[10],[-2],[2],[3],[-10],[-1],[7],[6],[-1],[-7],[-4],[5],[-10],[-2],[-5],[3],[-8],[-10],[-5],[-6],[-3],[-9],[-10],[4],[-6],[2],[-2],[10],[10],[-2],[-3],[-4],[-1],[1],[-7],[-8],[-3],[9],[-6],[5],[-7],[-1],[-5],[-10],[5],[2],[8],[8],[10],[5],[6],[6],[-4],[3],[1],[1],[-6],[-7],[-5],[8],[1],[-7],[5],[10],[5],[-1],[-3],[-2],[-3],[7],[2],[1],[2],[1],[-5],[5],[-6],[-6],[-8],[-6],[-4],[-5],[5],[3],[2],[-1],[-10],[4],[-8],[-7],[-3],[-8],[-7],[-2],[1],[-9],[5],[1],[3],[8],[-6],[2],[1],[7],[-1],[2],[-9],[3],[-7],[2],[-2],[-6],[-6],[9],[-2],[5],[-5],[-3],[-2],[-6],[7],[7],[2],[-3],[-6],[10],[7],[-5],[2],[-4],[-10],[-4],[5],[1],[-10],[-10],[-9],[-4],[-8],[4],[1],[10],[-10],[2],[-8],[8],[-5],[-2],[10],[8],[4],[-6],[5],[-6],[6],[-7],[-3],[-6],[3],[-7],[-6],[8],[9],[-2],[5],[10],[7],[4],[5],[-5],[9],[-9],[-10],[-9],[5],[-3],[-3],[4],[2],[5],[-5],[-7],[-1],[4],[-3],[7],[2],[6],[1],[2],[-3],[8],[-7],[10],[-10],[5],[9],[10],[6],[-8],[-5],[-1],[-10],[-7],[-4],[8],[-6],[-3],[-1],[-10],[-9],[-6],[10],[-10],[8],[-3],[2],[-9],[3],[-3],[5],[-4],[10],[-3],[2],[9],[10],[-2],[9],[-5],[10],[1],[-4],[-4],[6],[-3],[1],[-3],[-5],[-1],[10],[8],[5],[-10],[-4],[3],[-5],[-5],[7],[-5],[7],[6],[-3],[10],[-5],[-5],[-10],[7],[-5],[-2],[-2],[-2],[-1],[7],[6],[-3],[-7],[-2],[7],[-8],[-2],[-7],[8],[-10],[3],[-1],[-6],[3],[7],[7],[9],[8],[-8],[6],[-2],[-6],[-9],[-7],[-1],[9],[6],[8],[-10],[3],[-10],[-3],[-2],[-4],[-1],[4],[9],[6],[-6],[-5],[9],[-8],[4],[10],[6],[5],[6],[2],[-9],[8],[1],[1],[-3],[7],[9],[6],[-8],[4],[-10],[-7],[-8],[10],[-10],[-1],[3],[9],[1],[-1],[7],[4],[10],[6],[4],[-9],[4],[1],[-10],[-5],[-7],[9],[6],[-3],[8],[-3],[-4],[2],[9],[-3],[10],[9],[9],[8],[-3],[10],[-1],[-8],[-7],[-6],[-7],[-9],[-6],[-4],[-9],[-7],[-10],[-4],[6],[-10],[5],[9],[-1],[5],[-9],[4],[-9],[-6],[5],[1],[-8],[4],[-7],[-7],[-10],[-4],[-9],[1],[1],[9],[-8],[-8],[7],[4],[-4],[8],[5],[10],[-10],[-7],[-5],[5],[7],[3],[3],[-9],[-4],[-6],[1],[-3],[-6],[6],[4],[-3],[2],[5],[4],[-1],[-6],[-8],[6],[-8],[4],[-1],[5],[-1],[6],[-2],[3],[5],[7],[3],[1],[-10],[-8],[-6],[6],[3],[9],[7],[10],[4],[-5],[-10],[-2],[-4],[-6],[8],[-2],[-4],[7],[-3],[3],[4],[-1],[-5],[9],[1],[-8],[2],[6],[8],[-4],[-9],[7],[7],[1],[-8],[5],[8],[3],[9],[5],[-7],[8],[2],[7],[6],[-10],[-10],[-8],[10],[4],[-6],[2],[-6],[-7],[8],[-2],[-4],[2],[4],[10],[3],[-7],[-5],[-7],[-4],[7],[-1],[-4],[-3],[-10],[5],[-3],[4],[-7],[-7],[10],[-6],[-10],[-2],[10],[-7],[8],[3],[6],[4],[-4],[-8],[8],[-4],[-10],[-3],[-8],[9],[-2],[4],[-7],[-8],[-2],[-6],[6],[2],[9],[-8],[-4],[5],[3],[8],[6],[1],[6],[-1],[-10],[-7],[-9],[-1],[-5],[6],[-5],[-2],[-9],[6],[-4],[7],[-10],[10],[-6],[9],[10],[-10],[-1],[6],[4],[-9],[-10],[-1],[-9],[-3],[1],[-4],[10],[9],[7],[-4],[5],[7],[-5],[-9],[7],[-9],[10],[-6],[-6],[1],[2],[-10],[-3],[10],[6],[8],[10],[-7],[-10],[-3],[6],[-6],[1],[-5],[-4],[6],[-6],[-6],[-3],[9],[-10],[3],[4],[-4],[-6],[-3],[-10],[-9],[10],[10],[4],[10],[10],[7],[2],[-5],[4],[-4],[-7],[7],[5],[8],[-9],[-6],[2],[-5],[-2],[4],[-10],[-7],[10],[-7],[-1],[-7],[9],[-2],[1],[10],[6],[1],[4],[4],[-10],[9],[-3],[4],[-10],[8],[-2],[-10],[8],[-5],[-1],[-9],[1],[-4],[-7],[-10],[-9],[8],[-5],[5],[-1],[-7],[-9],[-4],[-8],[-4],[-4],[-5],[-6],[-9],[-9],[9],[-7],[-10],[-9],[-10],[-10],[-5],[-5],[-4],[8],[3],[2],[8],[-8],[2],[-7],[7],[-7],[-8],[4],[7],[8],[-2],[1],[-9],[5],[-4],[1],[6],[10],[-1],[8],[10],[-7],[-2],[-10],[-6],[2],[-5],[-6],[-3],[-6],[8],[8],[9],[10],[4],[-7],[5],[-5],[-8],[7],[5],[-4],[2],[5],[-8],[2],[-8],[-10],[8],[-4],[9],[-7],[7],[1],[-8],[9],[-10],[6],[-2],[-9],[9],[8],[4],[6],[-9],[-4],[-4],[-5],[4],[-4],[8],[8],[6],[-10],[-4],[-1],[-10],[2],[-7],[6],[9],[-8],[-5],[-3],[3],[-3],[-3],[-7],[-4],[9],[5],[3],[-9],[9],[-3],[5],[9],[4],[8],[-2],[7],[2],[-6],[-10],[7],[10],[-9],[9],[-8],[-7],[-5],[3],[-8],[7],[4],[-7],[-5],[-10],[-9]], dtype = "int64")#candidate|7775|(1040, 1)|const|int64
call_7774 = relay.TupleGetItem(func_6212_call(relay.reshape(const_7775.astype('int64'), [8, 10, 13])), 1)
call_7776 = relay.TupleGetItem(func_6215_call(relay.reshape(const_7775.astype('int64'), [8, 10, 13])), 1)
output = relay.Tuple([uop_7758,call_7774,const_7775,])
output2 = relay.Tuple([uop_7760,call_7776,const_7775,])
func_7778 = relay.Function([], output)
mod['func_7778'] = func_7778
mod = relay.transform.InferType()(mod)
output = func_7778()
func_7779 = relay.Function([], output)
mutated_mod['func_7779'] = func_7779
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7590_call = mod.get_global_var('func_7590')
func_7592_call = mutated_mod.get_global_var('func_7592')
call_7853 = func_7590_call()
call_7854 = func_7590_call()
uop_7867 = relay.asin(call_7853.astype('float32')) # shape=(3, 6, 1)
uop_7869 = relay.asin(call_7854.astype('float32')) # shape=(3, 6, 1)
func_498_call = mod.get_global_var('func_498')
func_501_call = mutated_mod.get_global_var('func_501')
const_7901 = relay.const(7, dtype = "int64")#candidate|7901|()|const|int64
const_7902 = relay.const([-8,-4,10,7,-1,3,8,-8,-9,-3,-4,4,6,-9,8,8,6,8,1,-10,-8,-6,-1,5,3,-2,6,-6,-7,-7,-2,-2,-7,6,6,4,-1,10,-7,1,-1,-5,-10,-1,-10,2,1,2,-6,8,6,-8,2,-8,-3,7,1,-2,6,8,10,-8,5,1,-10,-3,-10,-3,9,9,10,5,-1,2,10,3,-1,-3,3,-8,-2,9,-2,-4,4,2,-3,-5,5,2,-9,-7,10,-7,-5,-5,-5,-1,-7,-7,-10,6,7,-8,1,10,-6,2,-1,8,3,-5,8,-5,-2,-7,-1,-6,8,-1,-3,-1,-9,7,-4,-6,-6,7,-6,10,-5,10,2,6,-7,1,9,-1,6,8,2,-9,4,4,-8,-10,1,-1,-6,-3,6,-5,7,-5,3,-3,7,3,7,3,-2,-8,-1,-6,-8,1,4,-10,1,3,1,1,7,-9,-3,-10,5,8,9,-4,4,4,1,-8,-1,6,-9,10,-3,2,1,-9,-2,-4,-10,9,-6,-1,-8,7,3,9,-2,-10,8,-9,6,9,6,10,-4,9,3,-6,2,-10,9,-9,-10,8,-2,9,6,7,-3,-9,5,8,-9,-9,-8,-7,8,-9,-6,-6,-5,-6,7,4,-10,9,-10,-5,9,-1,-3,-3,-6,-1,9,-1,-4,-5,4,-1,2,-2,-4,3,-3,10,5,-10,6,-5,9,-1,-7,-6,-6,5,-6,2,6,-5,10,-6,1,-9,-7,5,-2,-1,-1,-8,-5,-6,-10,2,4,6,5,2,-7,-4,-5,2,-3,6,1,4,-9,-6,-1,-6,8,-2,5,8,6,8,-2,9,-5,-1,3,4,-8,-2,9,-5,-1,9,-10,9,10,7,10,-7,-5,3,8,9,-8,-4,-10,-3,5,-8,-8,2,2,1,-9,7,9,-9,7,-2,10,1,4,-10,5,-7,-5,-2,10,9,2,-1,-7,-9,-2,-9,-6,2,-4,10,-10,-2,-5,4,-10,5,10,-4,-10,-3,-5,-3,-5,-4,7,6,-2,-4,7,-2,-10,8,5,-1,8,-5,8,-5,-3,10,4,1,8,-2,-3,9,-1,5,10,9,2,10,-2,-3,-5,-6,2,-6,-3,5,-3,1,-1,2,-4,9,6,6,-8,4,-5,-4,-10,-5,-9,10,5,7,-10,9,-1,10,10,5,6,-1,4,7,-8,-8,5,8,-1,-7,-6,-5,-7,-4,2,6,1,-10,-5,-2,1,9,-9,-5,-3,-1,1,4,10,6,7,1,-1,6,8,-8,-7,-5,5,-9,4,-5,-6,4,9,10,-2,-8,4,9,-2,-10,-6,-5,5,-7,-4,4,5,9,-8,2,2,4,-3,-7,-10,4,-10,-4,5,-5,-8,-10,-9,-9,-8,8,10,-5,3,-10,8,8,4,-4,7,-5,-8,-10,-4,3,-9,-1,1,3,-9,-8,8,-5,-9,-9,-8,-3,-1,-3,-9,8,-7,6,6,-1,-4,-2,-6,5,3,4,-2,8,-8,-10,-7,-7,-9,2,4,-10,4,-1,8,4,1,5,-4,7,-5,-3,7,-9,-2,-2,4,-5,6,7,-3,7,10,9,6,10,-5,6,-10,8,5,8,-4,8,-2,-5,-9,-1,6,-4,8,-6,4,8,-6,-8,8,10,1,-1,-4,-10,-9,-1,2,7,-1,6,-4,1,-1,-9,-7,1,7,-2,10,-2,-4,-4,-10,10,-4,9,1,6,-9,2,-3,5,-9,-1,-9,-8,7,1,2,3,8,-2,9,4,4,-5,3,9,5,8,4,-8,7,2,-3,-5,-4,1,-6,3,-2,-9,6,-4,-7,-6,-10,3,6,-7,8,-9,1,-6,-4,9,5,1,-5,4,-9,4,-7,-9,10,-1,7,1,-1,-7,5,-10,-3,4,8,-3,-8,-6,-3,7,10,4,-9,7,3,6,-9,10,9,-1,2,2,10,5,5,-7,-2,-4,5,3,-7,-5,7,-10,9,-1,-7,1,5,1,7,-4,-10,-2,-2,-4,-5,-9,4,9,3,4,-5,7,10,9,-7,-6,3,-1,-2,8,-4,10,-6,-3,8,-1,4,-4,-8,-10,10,-2,-4,2,8,3,-6,-1,-9,3,6,2,-4,4,3,-8,2,8,5,-1,-9,-4,-7,-9,-1,-6,8,7,-6,7,7,-4,7,4,-9,2,9,-5,3,3,-8,-5,8,-2,4,-6,5,7,-10,-4,8,-1,4,-3,9,4,-4,-6,10,-7,-7,3,-2,6,3,-3,5,-8,-9,5,5,-7,-8,-1,3,1,2,-4,8,6,-7,2,4,-1,1,5,7,6,7,4,-7,9,-10,-4,2,-2,9,-3,4,-6,-1,-2,2,-6,9,-10,6,8,4,-6,9,9,2,1,-7,-2,9,-1,-3,-2,6,9,-5,7,6,-8,-1,-5,1,8,2,-10,-3,-3,-7,-9,1,4,6,5,-5,8,-2,-9,-6,2,-9,10,3,-10,-10,-1,8,7,7,7,5,-1,6,-9,-9,4,-1,-9,10,5,8,-1,3,2,9,3,-5,-10,-4,-7,8,-8,6,7,7,-5,8,-3,5,-1,7,8,-10,-4,7,-7,1,-8,-5,2,-5,-6,5,5,7,6,-2,7,-3,6,4,-7,-1,3,-7,7,-2,-8,4,-8,-1,-6,-9,7,-6,3,8,-5,4,6,-3,-7,8,3,-9,5,-5,3,6,5,-2,-1,8,-1,4,-6,-10,1,6,-10,-4,7,3,-1,-9,-10,7,-3,-9,-7,-2,9,6,10,3,1,2,-7,7,6,6,-8,9,-8,-8,1,-2,1,-10,1,10,3,7,7,-7,9,10,6,1,-8,-3,-10,-9,2,-4,7,5,4,-7,6,-5,-7,4,-4,1,7,-3,8,10,3,5,7,-7,1,-3,10,-4,3,-2,7,1,7,3,-5,-9,6,-8,3,-4,-3,-3,-5,10,9,6,-7,-9,10,4,-4,4,5,5,-9,-4,7,5,-4,-1,9,8,6,-2,1,2,7,9,1,-1,2,3,3,-1,-5,10,2,9,7,-6,5,6,-5,-7,-9,-7,4,-10,9,5,-8,7,-3,9,8,-10,5,-7,1,9,2,10,-7,4,4,10,-4,-3,3,-9,-7,-4,-5,5,6,-7,-9,6,-9,-3,-2,6,-10,-3,9,2,10,-10,-8,2,-6,-2,-6,-2,1,-10,6,8,-5,9,-4,-1,6,9,4,-7,10,7,10,-3,-3,-3,-10,-7,4,8,6,10,1,-7,3,-7,-5,-9,4,-5,6,9,1,-1,-1,-10,-8,-10,-2,-4,-1,5,5,-1,9,-9,-4,-1,4,7,-10,-4,-9,-5,-9,3,-2,-8,-4,8,-2,8,-5,2,-2,-7,-8,-9,3,-8,-5,-6,1,3,-10,-1,-10,-2,-10,4,-3,-4,-2,-8,9,1,6,2,-1,5,8,8,4,2,-2,8,9,-6,5,8,-9,9,-6,5,5,-1,-5,-10,-6,-5,-1,4,4,-1,-6,-10,-7,4,-9,-3,10,-7,2,6,-10,-6,5,-10,-4,6,9,-6,-7,2,-9,10,8,4,5,-9,2,-7,-7,-6,6,-10,-9,3,-5,2,9,-3,1,10,7,2,-3,6,6,3,-3,-6,7,10,6,6,-4,-4,-6,1,-4,-5,-2,8,-5,9,-4,-2,-8,-3,-2,10,7,3,10,9,8,10,-4,-7,9,-7,-5,-4,-9,5,-5,1,9,-7,7,3,-7,5,-1,-10,-2,-3,-4,-10,-3,8,10,-2,-3,-9,7,6,-5,7,7,4,2,8,4,3,-3,-7,-10,5,10,-4,8,-4,4,6,-9,-3,-10,1,9,3,-4,-6,-9,-8,6,7,3,-4,-5,8,-3,-6,-2,-8,8,-4,2,-7,-2,2,-6,-2,2,-5,6,-8,-4,5,1,8,7,-4,-3,-9,-7,-3,-10,3,10,-7,-1,7,-1,-5,8,-2,5,-3,6,-5,3,-5,4,-6,-5,-3,10,-4,-4,1,-2,6,-8,10,-1,6,-5,-8,10,5,7,-4,10,7,-8,-8,1,10,3,3,6,-9,-4,-2,-2,-10,7,-5,-5,-2,1,3,-6,-3,-6,-4,-8,1,-3,-6,2,-4,-1,5,-3,9,9,-8,-7,-5,-7,-5,-3,7,-1,-10,9,9,7,6,-5,6,6,-10,-4,8,-5,6,-9,-5,-6,-3,-3,4,10,-9,-4,-10,8,-7,-6,-4,8,-8,-5,-1,-10,-5,-9,-2,-1,-4,6,7,-4,6,1,-1,-10,-10,-4,5,3,8,8,-3,-10,4,-10,10,7,-4,-4,7,-3,-10,-8,-2,2,5,9,9,-4,5,-3,-10,9,-9,10,-8,5,-4,10,3,6,-1,7,-4,2,7,-4,-8,-4,5,-4,-8,10,3,-8,3,-6,8,-4,-4,-4,2,9,-1,8,6,-1,-3,6,1,2,-7,8,-2,10,9,-9,1,2,9,-8,-1,9,9,10,7,-4,2,10,6,-2,-5,7,-8,-8,8,4,-4,-3,-8,3,-7,-2,10,-7,-3,3,-9,-3,-7,6,6,5,10,-5,3,6,6,2,-7,6,7,7,8,-3,-1,-2,-8,1,9,8,5,-3,-9,10,-4,-7,4,7,6,-8,-10,5,1,5,3,1,5,-8,-1,-2,3,-5,3,-10,3,-5,-2,2,8,3,-1,9,10,-2,-6,-5,-2,-9,-4,4,-8,-2,-1,4,-2,-3,1,2,-1,-10,9,-9,8,7,-6,-1,2,-5,-8,4,-5,-6,1,6,2,-1,3,-3,-8,5,3,-8,-9,-10,3,-10,3,5,-2,7,10,5,8,6,-8,9,7,8,2,5,-4,-6,-1,-2,-3,-8,-7,-8,-1,-10,-7,2,-6,-2,-8,6,3,10,4,-8,-1,9,9,2,4,-3,-8,-5,-5,5,-3,7,4,10,9,4,-6,9,-2,7,10,-5,5,7,4,-3,-4,4,10,-7,-4,1,3,5,-9,-1,2,-1,7,-7,9,-9,2,2,-7,-1,7,-1,9,10,-8,-1,9,7,10,-7,4,2,9,-8,-3,9,10,-4,6,1,5,6,3,-1,7,-2,6,-9,-9,3,-5,-6,2,5,4,-6,7,-4,-7,-5,-3,-7,2,3,-2,-7,-9,-3,-1,-1,-6,3,-8,6,-3,10,-8,4,3,-3,-6,-4,-1,5,5,6,-2,-5,-9,-6,1,-10,-2,-9,4,10,10,4,-10,5,5,-9,4,9,-6,-6,10,-6,-10,7,-6,-5,-10,-10,-8,-6,-8,-1,-8,6,5,10,9,8,-10,-5,-2,3,-9,-2,7,1,-4,10,3,7,9,5,-3,9,-10,10,-7,3,5,3,3,9,-6,-9,-4,-1,6,-3,1,-2,6,-10,-4,-9,8,3,7,9,1,-4,-6,10,-1,1,-4,-2,7,-3,4,-10,-5,-2,-4,-8,10,-2,9,8,-6,1,-4,-8,4,1,-5,-10,5,5,-4,-6,6,-3,-1,-4,-4,7,-9,-8,-8,3,-4,-6,-5,-10,-5,-5,6,6,3,-4,-7,2,6,1,2,9,-4,-7,-7,2,-3,5,-7,7,-2,-4,2,7,9,-3,-1,-9,9,-6,2,10,-4,-7,7,10,4,10,-1,7,-4,-1,3,10,7,-8,-3,-6,-3,-10,6,-8,4,-8,5,-5,6,-6,7,10,-3,4,-7,4,1,8,4,8,6,-4,-1,-1,-6,-5,2,-8,-4,-10,-1,8,-8,1,-2,3,5,8,6,-5,6,-7,5,-1,10,-9,6,4,4,8,-4,-6,8,-9,5,1,3,-10,-5,-9,-2,5,6,2,7,-9,-2,-2,-1,9,4,-7,-7,-7,-8,7,-5,-6,4,-2,-1,-1,-6,-5,5,-4,1,-8,-8,9,1,6,10,6,1,4,9,-4,10,3,-1,-4,8,-1,5,4,7,10,3,1,6,-5,1,-1,9,6,-10,-6,-10,-9,-8,1,-5,5,8,2,-1,8,-8,-3,-2,-1,-7,3,4,4,-6,-7,7,9,-8,-1,7,3,8,-4,-4,5,2,3,-1,-7,-2,-8,-8,6,7,5,7,-3,5,-5,4,2,-7,1,-2,5,-5,-2,-1,1,4,-5,-5,7,-6,8,-2,6,-5,-9], dtype = "int64")#candidate|7902|(2304,)|const|int64
call_7900 = func_498_call(relay.reshape(const_7901.astype('int64'), []), relay.reshape(const_7902.astype('int64'), [16, 9, 16]), )
call_7903 = func_498_call(relay.reshape(const_7901.astype('int64'), []), relay.reshape(const_7902.astype('int64'), [16, 9, 16]), )
func_7778_call = mod.get_global_var('func_7778')
func_7779_call = mutated_mod.get_global_var('func_7779')
call_7912 = relay.TupleGetItem(func_7778_call(), 0)
call_7913 = relay.TupleGetItem(func_7779_call(), 0)
output = relay.Tuple([uop_7867,call_7900,const_7901,const_7902,call_7912,])
output2 = relay.Tuple([uop_7869,call_7903,const_7901,const_7902,call_7913,])
func_7914 = relay.Function([], output)
mod['func_7914'] = func_7914
mod = relay.transform.InferType()(mod)
mutated_mod['func_7914'] = func_7914
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7914_call = mutated_mod.get_global_var('func_7914')
call_7915 = func_7914_call()
output = call_7915
func_7916 = relay.Function([], output)
mutated_mod['func_7916'] = func_7916
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7369_call = mod.get_global_var('func_7369')
func_7370_call = mutated_mod.get_global_var('func_7370')
call_7924 = relay.TupleGetItem(func_7369_call(), 0)
call_7925 = relay.TupleGetItem(func_7370_call(), 0)
output = relay.Tuple([call_7924,])
output2 = relay.Tuple([call_7925,])
func_7926 = relay.Function([], output)
mod['func_7926'] = func_7926
mod = relay.transform.InferType()(mod)
output = func_7926()
func_7927 = relay.Function([], output)
mutated_mod['func_7927'] = func_7927
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7404_call = mod.get_global_var('func_7404')
func_7405_call = mutated_mod.get_global_var('func_7405')
call_7933 = relay.TupleGetItem(func_7404_call(), 2)
call_7934 = relay.TupleGetItem(func_7405_call(), 2)
output = relay.Tuple([call_7933,])
output2 = relay.Tuple([call_7934,])
func_7938 = relay.Function([], output)
mod['func_7938'] = func_7938
mod = relay.transform.InferType()(mod)
mutated_mod['func_7938'] = func_7938
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7938_call = mutated_mod.get_global_var('func_7938')
call_7939 = func_7938_call()
output = call_7939
func_7940 = relay.Function([], output)
mutated_mod['func_7940'] = func_7940
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7554_call = mod.get_global_var('func_7554')
func_7556_call = mutated_mod.get_global_var('func_7556')
call_7997 = func_7554_call()
call_7998 = func_7554_call()
var_8013 = relay.var("var_8013", dtype = "bool", shape = (7, 12, 14))#candidate|8013|(7, 12, 14)|var|bool
bop_8014 = relay.equal(call_7997.astype('bool'), relay.reshape(var_8013.astype('bool'), relay.shape_of(call_7997))) # shape=(7, 12, 14)
bop_8017 = relay.equal(call_7998.astype('bool'), relay.reshape(var_8013.astype('bool'), relay.shape_of(call_7998))) # shape=(7, 12, 14)
func_7914_call = mod.get_global_var('func_7914')
func_7916_call = mutated_mod.get_global_var('func_7916')
call_8030 = relay.TupleGetItem(func_7914_call(), 2)
call_8031 = relay.TupleGetItem(func_7916_call(), 2)
func_7690_call = mod.get_global_var('func_7690')
func_7692_call = mutated_mod.get_global_var('func_7692')
const_8038 = relay.const([-4,1,-9,2,-3,8,8,-1,-8,2,-1,1,5,-1,-9,-2,-1,-7,-5,-10,3,-4,-5,-1,7,-6,8,-4,-9,5,-9,-10,-1,-1,-7,5,-8,-2,5,-7,9,-1,-1,4,-1,-7,-6,-1,6,-3,2,5,-10,2,-2,-8,-2,-10,5,2,-2,6,-6,7,8,6,-10,9,-8,5,-2,3,-3,5,-8,6,6,10,-1,-5,-6,9,10,8,-3,-1,8,-10,-8,1,-4,6,8,-3,2,8,-8,8,6,-7,-8,5,2,-9,2,6,6,5,7,-3,-5,9,-7,-1,-10,4,-9,-6,-6,-1,6,2,9,-5,5,-5,8,-2,-10,8,3,10,2,-3,2,5,-3,-9,6,1,2,2,2,5,-8,2,6,1,7,-6,-10,-6,-10,7,8,7,-8,10,-2,-1,-7,-10,-4,-10,-9,-1,-7,-3,-3,3,10,1,-7,-9,-5,9,-3,4,-2,-10,1,9,10,3,4,-5,5,4,9,1,4,-8,1,-4,-6,-5,6,5,7,9,5,8,2,-10,-7,-6,2,-8,8,5,8,1,5,-2,-3,6,5,-7,-7,-9,-9,7,-1,-4,9,-10,-1,-3,-6,-1,-5,8,10,-6,-4,3,-2,-5,-5,9,-10,3,2,10,-8,-1,-5,-3,-6,-1,-6,4,-5,8,-9,4,-7,-3,-2,9,3,4,-8,-4,-8,5,-1,1,-7,6,9,5,8,5,10,-9,-3,-4,10,7,7,3,10,-4,6,-1,3,-10,-4,10,-8,-1,-1,-4,-5,2,-3,-7,-10,8,-4,-10,-6,7,-3,6,-5,-2,1,9,7,5,-6,-10,7,2,-10,-8,3,8,4,7,10,8,-7,7,-8,-3,7,1,-5,5,7,2,9,-4,-4,2,4,5,-7,-7,-5,1,6,-5,-7,6,4,-4,8,5,2,-5,-9,8,-5,3,5,-1,8,-2,6,10,8,2,1,9,9,10,8,-6,-4,10,-2,2,9,-6,-4,5,-8,9,8,-5,-5,5,-4,4,-7,-9,9,1,-7,-3,3,4,-8,-5,4,1,4,1,-4,-7,-1,-4,-8,-8,-3,-8,2,-10,-7,-7,2,10,-4,5,8,-3,-8,1,3,1,-2,-2,10,-7,4,10,9,-3,3,-3,2,1,-2,-4,-4,8,-3,-4,-2,-10,2,2,9,6,-7,-2,2,9,-8,8,-7,9,9,-2,4,-7,1,-8,9,10,-3,-5,6,1,-6,-7,7,2,9,9,8,-10,5,9,3,10,-4,3,10,5,4,10,9,-9,7,-4,4,-4,-3,5,-2,2,-1,-7,8,8,5,-3,-9,3,-10,9,-10,-3,5,8,4,-5,-4,7,-8,2,-10,-8,-7,2,-7,-9,5,-1,-9,-2,-1,-7,1,7,-8,3,-5,-6,-1,10,-3,-6,-3,1,-5,7,9,-3,10,10,-10,-6,1,9,-2,9,-8,-4,-1,2,-7,4,-5,-8,8,2,10,-4,10,4,-2,7,-7,10,-5,6,3,2,10,2,-8,7,-2,1,-4,-6,-10,-6,-4,-7,-9,5,-6,10,6,3,6,-4,-10,-10,1,-3,-9,-10,-5,3,3,-8,4,-4,-9,4,6,4,4,2,-10,-8,4,-3,6,-5,-6,7,-10,-10,-7,-6,4,-3,-6,6,2,6,-2,4,-4,5,3,-10,3,4,8,-5,2,3,-2,3,-2,1,7,-10,-6,3,-6,-2,6,-9,8,7,1,-9,10,9,10,-6,7,9,2,3,-6,-7,3,-7,9,2,-5,-6,-2,6,7,8,-7,-7,9,-7,5,9,9,8,1,1,-2,2,-2,-5,-10,2,9,4,-7,5,4,-9,-2,-10,-8,3,-8,3,3,10,10,9,-3,-9,6,2,8,1,-10,-6,-4,10,4,-3,-3,8,-4,5,2,8,8,7,5,9,-1,-4,2,6,-7,-2,-1,-4,-9,-4,2,10,6,-7,5,4,9,-10,2,-8,6,-9,-10,4,3,10,-2,9,-8,-6,-2,-7,-10,3,-5,-1,1,-8,7,10,-9,-9,-3,-6,-3,-1,5,-8,-7,7,4,-2,9,5,1,-8,-8,-3,5,1,4,-5,-2,-1,5,-10,7,-5,-4,-4,8,9,-1,6,-2,4,-10,4,-1,10,5,5,4,8,-2,4,6,-5,-6,3,-9,3,-7,1,1,3,3,-8,10,6,-2,-2,-4,7,8,-7,8,-6,4,-2,1,3,-5,-1,-8,-7,-9,-9,5,-4,-8,2,8,1,-7,1,8,2,-4,10,-1,-4,-7,-5,9,-7,-8,-2,-9,2,-8,6,6,9,2,-6,8,3,-3,6,-6,10,2,-2,-7,-8,7,8,9,-5,-9,-4,-9,2,5,-3,-3,-7,-4,-7,-5,-5,7,6,-3,9,-2,-10,-1,-2,-10,-9,9,-9,9,4,-9,6,2,-3,3,-10,-4,5,-3,-2,-1,8,-9,2,3,1,7,-9,7,6,2,4,-6,-1,-5,6,4,-5,2,-10,-7,8,-8,3,-7,-7,4,-6,10,3,-10,3,-4,-6,8,-3,9,-9,6,-4,10,3,5,-8,7,-2,2,-1,-6,3,5,10,-7,2,-8,8,2,-4,3,3,5,4,-3,-2,-2,-4,2,2,3,-5,-4,3,-6,-2,8,6,-3,1,-7,-6,9,-9,-5,2,-7,-1,10,7,-10,5,-6,-3,3,-6,6,-1,-3,-8,1,8,-7,-1,2,2,-8,-4,-10,-3,1,-5,-3,-4,7,9,-1,10,-6,4,-8,4,5,-10,2,-8,-5,2,9,8,-9,8,2,8,6,9,-10,1,8,-8,7,7,-9,1,6,-6,4,5,-9,-7,-4,-10,-7,8,4,-10,-4,-2,6,10,3,-7,9,5,2,4,8,10,7,-5,-6,2,1,-4,5,9,2,-7,5,-1,-3,6,-1,9,6,10,8,-3,-4,-4,-3,-9,8,-7,7,3,-3,3,5,5,-5,-3,-7,-2,5,3,10,2,9,4,-5,8,-5,-5,7,2,-5,7,-3,-6,-4,6,-1,3,-8,-6,5,3,8,-2,10,-9,1,8,2,4,-2,-1,9,-3,-2,-9,4,6,-2,9,4,-6,1,-1,-7,-10,-5,2,-4,8,3,-2,1,-10,-8,-2,4,-7,3,7,-5,9,-7,-4,3,6,1,-4,8,5,1,-8,7,-2,-5,10,-6,-10,9,4,5,-9,-8,9,7,1,1,-6,7,9,-5,-4,10,-3,-5,3,7,-8,-7,2,-9,5,-4,-10,-7,5,-10,6,-2,-10,-8,-8,-5,1,-3,5,7,4,10,-4,-5,-2,9,-6,7,-9,9,9,4,-5,2,-9,-9,-2,-8,-8,9,-1,-6,-9,-5,7,6,5,3,-4,-9,5,7,8,8,-10,8,5,-8,-6,-5,-4,-6,-10,10,-5,9,8,-1,-1,4,4,-3,-5,-5,2,3,-8,7,-9,4,-6,8,-10,2,-8,5,10,10,8,6,5,8,-10,3,-3,-7,-1,5,-6,5,5,5,-7,-1,-10,5,-8,-1,9,2,-1,1,6,5,6,5,1,7,4,-3,4,-2,-2,-3,-6,-2,-5,-1,2,-2,-8,-8,-6,-7,4,7,-9,-2,-1,-1,-9,-6,-6,5,4,6,6,-1,10,5,7,2,10,-6,-9,7,-9,-4,7,5,-1,-3,5,-1,1,9,-7,-5,-4,-5,-9,-5,-5,-7,10,-6,-5,10,-3,6,-7,2,-7,9,10,-6,-8,7,-10,6,8,-3,-10,-2,-3,7,-5,-4,-7,-6,8,-4,-5,-10,7,6,-7,-8,-9,-10,-9,2,7,6,8,-9,-4,-3,-5,-3,-8,-8,8,-1,-6,-9,9,1,-7,10,-9,-2,-3,1,7,-2,4,9,8,9,3,1,1,-10,8,-4,8,-9,10,-10,-5,1,4,1,1,8,-10,-8,8,7,-7,-3,6,7,-4,-2,-1,8,4,9,-1,-3,-5,-10,-10,-1,10,1,5,-4,7,8,1,-3,-7,-4,9,-7,-10,-9,6,7,-1,-3,-8,-5,-3,1,9,2,-6,2,4,2,-8,2,1,1,-8,10,1,1,8,-9,5,3,-8,1,-8,-3,5,10,5,-8,4,-10,-5,1,2,10,-3,-1,10,2,4,-2,-3,5,-4,2,2,6,-3,-1,-9,2,-4,5,-6,1,4,-9,8,4,8,3,-10,-9,6,-9,1,-8,-6,-10,-4,2,-6,5,-6,7,9,-8,-1,-1,9,1,-1,6,6,10,6,-7,3,-6,3,3,-7,10,-9,2,-2,7,-6,1,-6,-9,4,-5,-8,-6,-8,2,1,1,4,6,-8,9,6,3,2,-6,-8,3,-4,8,9,5,-3,-2,10,2,10,2,-3,10,9,-4,-7,-4,8,-10,1,1,-2,10,10,1,-5,-8,10,-6,1,7,-8,8,-2,-7,4,8,8,1,1,-9,-5,-7,-4,3,2,5,10,6,-10,4,10,3,9,7,5,8,-3,-4,-7,-4,6,9,-1,-7,-9,-8,-2,-6,-4,-3,-10,-1,-8,-2,4,4,-7,6,-9,10,4,6,10,7,8,5,2,1,-2,5,-10,6,3,7,6,1,-5,4,-10,1,2,5,1,4,-10,-9,-9,10,-8,-3,4,4,10,7,10,9,2,-8,10,6,2,-2,2,-2,-9,-7,-10,4,-1,-3,7,-5,-5,-3,4,7,-7,-6,3,1,4,6,-9,5,1,2,-7,10,7,-9,5,6,6,-2,9,-4,-1,6,-3,9,6,-4,6,9,9,6,-5,-5,2,2,1,4,-8,-10,-9,5,-10,-2,-4,2,8,-7,-10,-4,10,-6,3,10,10,2,-1,-9,-7,9,-2,7,1,-3,-8,5,-6,-10,-3,-10,-2,-4,-9,-4,-6,2,-4,-9,4,-5,-10,2,-3,5,-1,-9,-7,-6,8,7,-2,1,7,-2,2,3,8,-10,-6,-7,1,-1,-10,7,8,-3,10,-10,-6,9,-8,3,-8,6,-7,-2,-8,-7,2,8,7,-4,-7,-5,5,-2,4,10,6,7,-7,-4,-4,3,4,-7,3,7,6,-3,-5,5,-8,-3,-10,-2,1,-4,-6,2,10,-2,-1,-5,4,-9,2,-10,8,9,-4,-7,-6,10,7,5,-1,2,-9,-2,-4,-1,4,1,5,-10,-2,5,-7,1,9,3,6,-4,2,-7,7,-7,9,3,-9,-4,9,8,-4,-9,-6,3,-8,8,-2,-8,-4,10,-4,-9,5,1,-1,-9,7,-10,-10,8,9,-10,2,-2,5,-2,-4,-2,-4,-2,-2,-2,8,-4,4,-8,8,7,-8,-8,10,3,-3,-2,8,4,4,-8,9,-3,-6,7,9,-5,3,-1,3,7,-9,-5,-3,-6,6,-9,8,7,3,9,7,10,-7,-3,4,-8,-8,-1,-1,-8,-5,-1,1,8,-3,-5,-10,10,-7,-2,4,-6,-3,3,-8,-3,8,-5,-2,-2,-7,-5,3,8,10,-10,10,-7,7,-8,-9,-5,5,-7,-2,-3,-7,7,6,1,-5,-10,-1,7,7,2,-8,-4,-6,1,-9,6,-3,-9,10,4,-10,-10,3,8,5,-5,-6,8,-9,9,-5,5,10,8,-3,5,9,6,-3,4,-4,-2,8,-4,1,7,10,6,6,-2,-8,-4,-10,-3,-7,-2,-3,-3,6,-8,-1,-5,-6,3,-8,-3,-9,5,1,4,-2,9,3,-6,1,6,-8,-5,5,-6,-10,-7,-10,-2,-10,-9,5,10,1,-4,2,4,-2,-4,-6,8,-1,-7,-9,2,-5,4,8,-7,9,-1,3,1,-4,-4,5,-6,-9,7,-2,-9,-7,-7,6,4,-7,-8,-10,-8,4,-3,-4,-5,-2,2,1,-10,-4,-3,-3,8,2,10,7,-4,-10,1,-8,6,1,3,-9,2,10,-6,2,2,-3,6,2,10,1,-3,-10,-8,-9,2,-1,-1,-10,5,2,8,2,5,7,6,-9,-6,10,-9,-2,6,3,-8,8,-7,-3,-8,-10,-10,10,-5,-5,-9,5,-7,-7,2,-2,-5,4,-3,-6,3,-3,2,-9,4,8,-10,-9,1,1,8,-6,6,-4,8,-9,5,-3,7,4], dtype = "int64")#candidate|8038|(2304,)|const|int64
call_8037 = relay.TupleGetItem(func_7690_call(relay.reshape(const_8038.astype('int64'), [8, 288])), 1)
call_8039 = relay.TupleGetItem(func_7692_call(relay.reshape(const_8038.astype('int64'), [8, 288])), 1)
func_7690_call = mod.get_global_var('func_7690')
func_7692_call = mutated_mod.get_global_var('func_7692')
call_8042 = relay.TupleGetItem(func_7690_call(relay.reshape(const_8038.astype('int64'), [8, 288])), 2)
call_8043 = relay.TupleGetItem(func_7692_call(relay.reshape(const_8038.astype('int64'), [8, 288])), 2)
output = relay.Tuple([bop_8014,call_8030,call_8037,const_8038,call_8042,])
output2 = relay.Tuple([bop_8017,call_8031,call_8039,const_8038,call_8043,])
func_8047 = relay.Function([var_8013,], output)
mod['func_8047'] = func_8047
mod = relay.transform.InferType()(mod)
var_8048 = relay.var("var_8048", dtype = "bool", shape = (7, 12, 14))#candidate|8048|(7, 12, 14)|var|bool
output = func_8047(var_8048)
func_8049 = relay.Function([var_8048], output)
mutated_mod['func_8049'] = func_8049
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8080 = relay.var("var_8080", dtype = "float32", shape = (11, 12, 2))#candidate|8080|(11, 12, 2)|var|float32
uop_8081 = relay.sin(var_8080.astype('float32')) # shape=(11, 12, 2)
uop_8085 = relay.rsqrt(uop_8081.astype('float64')) # shape=(11, 12, 2)
func_5610_call = mod.get_global_var('func_5610')
func_5613_call = mutated_mod.get_global_var('func_5613')
var_8096 = relay.var("var_8096", dtype = "float64", shape = (210,))#candidate|8096|(210,)|var|float64
var_8097 = relay.var("var_8097", dtype = "float64", shape = (1456,))#candidate|8097|(1456,)|var|float64
call_8095 = relay.TupleGetItem(func_5610_call(relay.reshape(var_8096.astype('float64'), [5, 14, 3]), relay.reshape(var_8097.astype('float64'), [1456,]), ), 2)
call_8098 = relay.TupleGetItem(func_5613_call(relay.reshape(var_8096.astype('float64'), [5, 14, 3]), relay.reshape(var_8097.astype('float64'), [1456,]), ), 2)
output = relay.Tuple([uop_8085,call_8095,var_8096,var_8097,])
output2 = relay.Tuple([uop_8085,call_8098,var_8096,var_8097,])
func_8113 = relay.Function([var_8080,var_8096,var_8097,], output)
mod['func_8113'] = func_8113
mod = relay.transform.InferType()(mod)
var_8114 = relay.var("var_8114", dtype = "float32", shape = (11, 12, 2))#candidate|8114|(11, 12, 2)|var|float32
var_8115 = relay.var("var_8115", dtype = "float64", shape = (210,))#candidate|8115|(210,)|var|float64
var_8116 = relay.var("var_8116", dtype = "float64", shape = (1456,))#candidate|8116|(1456,)|var|float64
output = func_8113(var_8114,var_8115,var_8116,)
func_8117 = relay.Function([var_8114,var_8115,var_8116,], output)
mutated_mod['func_8117'] = func_8117
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7590_call = mod.get_global_var('func_7590')
func_7592_call = mutated_mod.get_global_var('func_7592')
call_8175 = func_7590_call()
call_8176 = func_7590_call()
uop_8183 = relay.sigmoid(call_8175.astype('float32')) # shape=(3, 6, 1)
uop_8185 = relay.sigmoid(call_8176.astype('float32')) # shape=(3, 6, 1)
const_8188 = relay.const([[[-8.417274,0.100463,-9.529429,-2.658215,-7.270461,-0.846471,7.770804,-0.886326,-8.233831,-4.929007,8.412825,8.661569,3.154058,-6.115319],[0.491355,-1.769626,1.346262,8.317073,9.086450,-0.739101,-7.585822,6.228059,-6.221925,6.892350,6.593867,-1.951896,2.806089,2.715395],[-0.299067,-7.114578,6.189070,5.970458,4.326715,2.906414,-6.565274,-4.007748,-5.082360,-2.185088,-4.586230,0.475010,4.620157,-9.340130],[6.660949,2.849350,5.596762,3.201236,-8.784857,-7.941385,-4.351176,6.045387,7.925362,2.076784,1.658506,8.318082,1.435114,9.588089],[-4.805089,6.244143,2.690971,7.351063,4.564448,7.688488,3.335435,7.870873,7.691808,3.427838,-2.872799,1.604207,-9.248053,2.804193],[7.396191,6.995076,9.249118,-8.672171,1.540745,9.100354,-6.535482,2.758313,-8.270091,5.845796,3.863080,6.827045,-3.880809,1.814227]],[[6.878148,-1.687544,9.769742,-5.611651,1.887479,9.960106,5.224343,7.698559,6.730497,3.495558,2.902047,-3.091360,8.278368,-3.965765],[-8.094058,6.901957,2.699232,-3.777446,8.875484,3.513935,5.056841,7.037879,1.738243,0.461065,1.960793,7.718506,1.181995,0.879227],[6.007452,-7.408286,1.928270,8.443360,-8.205066,7.375814,-1.111100,-1.568925,0.715398,-6.536246,-8.860453,-3.104351,8.245499,-6.921662],[0.343756,2.679376,1.629729,-0.722448,3.787651,4.648406,7.122954,5.147529,8.221062,-7.604663,-4.653536,-3.560473,-9.243539,-3.061180],[-0.941955,-5.532465,5.844823,-8.571528,-8.157800,4.486971,-4.325573,8.757913,-5.371606,7.042157,-1.469257,-6.981408,1.836576,6.515897],[2.003782,9.720040,-7.275414,0.488532,9.367212,-9.038549,-4.193160,-4.516292,6.801716,2.829699,-2.385561,8.653468,-4.907905,1.131723]],[[-0.283206,3.259227,1.516692,8.642694,-1.920244,1.689081,-4.128184,0.622380,3.426353,2.933952,4.844196,-8.663306,-4.307952,-0.256746],[-0.072885,-1.826151,-0.632478,-7.025765,-4.567902,8.377161,9.955015,-7.441950,3.629215,-4.485680,2.073718,0.162388,-2.840427,2.496073],[6.289915,6.998513,1.515448,7.102652,8.202462,1.746555,9.940695,6.941529,1.343357,7.230220,0.764233,-3.976769,9.289914,-2.181792],[5.425992,-8.760331,8.531286,-9.323452,8.386596,6.411353,-6.105777,-0.749485,7.234786,-8.163706,-1.032573,9.255170,0.063855,-9.657414],[9.038582,9.929275,-6.730948,-2.670839,6.250087,3.980878,-0.499690,-1.464009,0.177771,-9.463886,-6.706513,-5.624042,-3.893373,-3.925647],[6.371159,2.753851,9.576807,7.822594,-5.153426,-3.784047,0.325579,3.569820,-5.888451,-2.652209,-0.860905,-0.607751,7.240671,4.745648]]], dtype = "float32")#candidate|8188|(3, 6, 14)|const|float32
bop_8189 = relay.multiply(call_8175.astype('int8'), const_8188.astype('int8')) # shape=(3, 6, 14)
bop_8192 = relay.multiply(call_8176.astype('int8'), const_8188.astype('int8')) # shape=(3, 6, 14)
func_7323_call = mod.get_global_var('func_7323')
func_7324_call = mutated_mod.get_global_var('func_7324')
call_8213 = relay.TupleGetItem(func_7323_call(), 0)
call_8214 = relay.TupleGetItem(func_7324_call(), 0)
uop_8220 = relay.asinh(uop_8183.astype('float64')) # shape=(3, 6, 1)
uop_8222 = relay.asinh(uop_8185.astype('float64')) # shape=(3, 6, 1)
uop_8224 = relay.log(uop_8183.astype('float64')) # shape=(3, 6, 1)
uop_8226 = relay.log(uop_8185.astype('float64')) # shape=(3, 6, 1)
func_4582_call = mod.get_global_var('func_4582')
func_4586_call = mutated_mod.get_global_var('func_4586')
const_8231 = relay.const([[-10,10,-5],[5,-10,9],[-8,3,4],[-4,8,-2],[-2,-9,8],[10,10,-1],[9,-4,10],[8,-10,4],[9,-10,2],[5,-5,-6],[-2,9,8],[-8,-8,5],[-6,8,4],[-1,-9,-9],[2,-8,-10],[8,-1,-5],[10,8,-6],[8,8,9],[9,6,-8],[9,-10,-7],[-1,4,5],[-5,-5,-3],[-5,-4,-6],[-8,2,2],[-10,-1,10],[-3,-4,-7],[8,-4,-4],[-3,-7,-4],[1,-7,-6],[4,2,6],[-5,4,-8],[10,10,9],[8,-3,-1],[7,10,5],[-5,-2,8],[10,7,-5],[-5,-2,-9],[-9,7,2],[-10,9,5],[6,5,-8],[5,6,-1],[8,-6,-1],[5,3,-3],[-9,-6,-4],[2,-4,7],[-10,1,6],[-7,-8,-7],[9,10,-2],[-9,-7,-7],[7,-3,8],[2,-4,-2],[-4,5,5],[10,1,-7],[4,-4,-10],[-6,-2,-7],[-10,-6,1],[3,10,-5],[9,10,9],[5,-3,6],[9,2,10],[-2,8,5],[8,3,7],[3,-7,-7],[10,10,8],[9,-10,9],[-10,-2,-10],[8,-4,-6],[-8,6,1],[4,5,7],[1,-1,8],[-5,-4,7],[-2,10,5],[-9,-4,-10],[10,6,-7],[-9,10,-1],[3,-7,3],[-8,8,-2],[-5,-5,8],[4,1,-3],[5,-7,3],[3,6,-2],[-3,-3,-2],[3,-8,6],[6,-3,-2],[-5,10,3],[-2,1,4],[4,-6,8],[3,-5,2],[6,1,-6],[8,1,-3],[-3,-1,-2],[10,4,-2],[5,-6,4],[-2,-7,-2],[8,-4,9],[-5,2,-9],[-1,-10,-6],[-7,-8,3],[-10,-4,8],[10,5,-6],[1,9,7],[8,6,5],[8,4,7],[-10,2,6],[10,-7,9],[-9,7,2],[5,-6,-5],[6,-2,-1],[-10,8,5],[-2,-9,9],[-6,-6,8],[1,-7,-8],[-5,-10,-5],[-8,4,-6],[9,5,1],[-5,4,-2],[-1,-8,9],[5,-10,-2],[7,-9,7],[3,5,7],[-4,3,-4],[-2,7,3],[8,9,-4],[3,5,4],[9,-2,-7],[-10,-9,-9],[-9,8,-3],[-1,1,-10],[-3,6,-9],[1,-10,-4],[-10,-8,-9],[-4,9,4],[6,-4,-5],[4,9,7],[-2,6,3],[-1,-4,4],[5,2,1],[-6,1,-6],[4,8,1],[1,-6,-7],[7,-2,6],[-6,3,3],[-6,-2,8],[-5,9,-6],[-9,-6,-4],[-3,-3,-1],[2,-10,-9],[-2,-3,-4],[-4,3,-2],[-4,8,7],[-4,-10,-7],[6,2,6],[-10,-8,3],[-5,-1,-10],[9,-6,-3],[6,5,-4],[1,-4,5],[-4,-8,-9],[-4,-8,3],[10,2,-9],[-8,4,-3],[8,8,6],[-1,10,5],[-10,6,-6],[6,2,-3],[-4,-4,-6],[7,-10,5],[-8,-8,-8],[2,2,8],[6,5,1],[-7,-8,-5],[9,-8,5],[-4,-2,3],[-5,-9,-2],[6,-8,-6],[-8,-6,-5],[3,-3,4],[6,10,2],[9,-8,-6],[-3,8,5],[4,8,-2],[-3,8,7],[1,-4,3],[-8,-3,3],[9,-4,-9],[3,-2,3],[4,2,1],[6,5,5],[-5,-4,-9],[10,1,5],[2,-5,-8],[10,-4,4],[4,-7,1],[8,-7,6],[7,4,-1],[10,-8,10],[3,8,2],[5,3,4],[-6,-1,3],[10,7,-10],[4,2,4],[8,1,9],[7,1,5],[-5,8,-5],[5,-2,9],[1,-3,5],[-2,-7,6],[-8,7,4],[-3,-5,7],[3,-5,-6],[-7,6,-9],[-7,4,6],[9,5,-1],[2,-10,-6],[-6,10,-4],[-4,3,-2],[2,3,-3],[-6,-1,2],[9,-8,10],[-7,7,-10],[4,-3,-5],[-7,-4,3],[-7,2,9],[2,10,9],[7,6,3],[-4,-1,4],[-2,3,3],[-5,-4,-10],[3,-10,-5],[-2,-5,6],[-6,7,-9],[-1,3,-7],[9,-9,-1],[5,5,6],[4,-2,-6],[-7,1,10],[-6,-1,7],[7,1,9],[7,5,-9],[1,9,-2],[-6,-9,-2],[6,-10,-7],[8,2,-10],[-3,-7,10],[-1,9,6],[7,10,-10],[-7,-2,-5],[3,-5,-3],[10,-5,-4],[4,5,5],[5,-5,10],[-1,2,-3],[4,-10,-2],[7,1,-10],[-4,2,8],[-3,1,-9],[-5,-9,4],[4,7,9],[9,5,8],[8,-8,3],[10,-8,-8],[-4,-7,-8],[5,1,7],[3,-7,-7],[4,7,6],[7,-10,6],[1,-8,3],[9,9,-9],[-1,-4,3],[-3,7,-8],[-2,8,9],[7,-6,-8],[5,6,-9],[-10,-1,1],[8,-10,4]], dtype = "uint8")#candidate|8231|(275, 3)|const|uint8
call_8230 = relay.TupleGetItem(func_4582_call(relay.reshape(const_8231.astype('uint8'), [15, 11, 5]), relay.reshape(const_8231.astype('uint8'), [15, 11, 5]), ), 0)
call_8232 = relay.TupleGetItem(func_4586_call(relay.reshape(const_8231.astype('uint8'), [15, 11, 5]), relay.reshape(const_8231.astype('uint8'), [15, 11, 5]), ), 0)
func_7249_call = mod.get_global_var('func_7249')
func_7251_call = mutated_mod.get_global_var('func_7251')
call_8265 = relay.TupleGetItem(func_7249_call(relay.reshape(call_8213.astype('bool'), [7, 12, 14])), 0)
call_8266 = relay.TupleGetItem(func_7251_call(relay.reshape(call_8213.astype('bool'), [7, 12, 14])), 0)
uop_8270 = relay.cos(uop_8224.astype('float32')) # shape=(3, 6, 1)
uop_8272 = relay.cos(uop_8226.astype('float32')) # shape=(3, 6, 1)
func_6862_call = mod.get_global_var('func_6862')
func_6866_call = mutated_mod.get_global_var('func_6866')
const_8277 = relay.const([[5,9,-6,2,10,5,-5,4,-3,-1,5,-7,-6,1,-8,8,-7,-7,-5,2,-1,7,-9,-10,-3,5,-4,-7,7,2,8,-9,8,8,3,7,7,1,-6,10,3,7,10,-6,3,4,-10,8,9,1,6,-5,3,10,-9,1,8,9,-4,-8,-5,-10,-5,2,2,7,3,-2,-10,-6,-5,-10,4,4,8,-7,-4,7,5,7,-5,7,6,4,4,-4,-8,-5,-6,2,-10,-7,6,-8,-7,8,7,10,7,-1,6,1,2,6,-4,3,7,-8,6,-4,1,5,-7,1,-2,6,-8,2,2,9,6,10,2,6,6,-10,-2,-2,3,5,-8,3,-8,7,5,-8,5,-4,-7,-4,-8,7,3,-1,5,-2,-6,10,-4,-6,10,-9,3,4,4,3,6,4,-1,6,8,10,6,10,6,8,1,3,-1,-3,6,-8,6,-2,6,5,-9,-10,5,-5,-5,5,8,-9,6,3,8,6,5,10,-7,5,-8,-1,6],[-1,6,-6,-7,-5,-7,-7,-2,-8,5,6,3,-10,-10,-5,4,7,6,-6,10,-8,-10,3,-9,8,-3,8,8,8,-6,4,10,3,7,-1,-1,-8,-3,4,6,-8,8,4,3,-6,4,10,-3,2,-2,-9,-1,7,-9,-9,-5,-3,-4,-1,-8,5,-8,8,10,1,4,-7,10,10,-5,6,6,4,-6,-5,1,6,7,-1,3,-10,-6,1,-1,5,10,7,-1,-3,6,-1,10,-6,-1,-7,-3,-3,-4,-6,7,-2,-5,10,1,-4,3,-4,3,3,9,10,5,-2,8,-5,-1,2,7,3,7,-3,-3,7,-8,-9,8,-10,1,-3,2,-5,-6,-9,1,1,9,10,10,5,-8,5,-4,-1,9,-7,4,5,9,5,8,-7,9,-7,5,-6,-8,10,-8,-8,-9,-1,7,4,-2,5,2,-6,-9,9,7,-8,-10,9,-3,6,-2,-4,-3,-4,-7,6,10,2,7,5,9,-10,-4,-7,-8,9,-10,-8,1,-1],[-10,10,8,-9,-3,10,-10,1,1,-2,-10,10,4,-6,-9,-5,-3,1,7,8,-4,2,-3,7,10,5,-10,10,3,9,3,3,9,7,3,3,-6,-9,-7,-2,-6,7,-2,-10,-2,-6,-2,-1,4,6,5,-5,6,1,2,10,-10,6,3,6,-4,2,-5,7,-1,7,2,-7,5,2,1,9,-9,5,10,9,8,-10,-4,-10,-9,3,8,10,9,-3,5,4,-7,-8,-4,1,-10,-3,-7,3,2,7,-5,-5,10,5,-2,-1,-9,5,10,3,6,-8,1,-9,5,-4,5,-5,1,-2,10,-1,-6,4,4,-6,5,3,5,-10,-10,-3,6,-9,9,-10,-9,-1,9,1,-3,6,-2,4,5,-8,-10,7,8,-3,-1,7,3,-3,1,10,2,2,8,-1,-1,5,7,-7,2,-3,4,1,8,-2,9,-5,-9,-6,4,-10,-6,6,1,-10,7,3,3,-9,-1,4,-2,-2,-7,-7,-6,5,4,-7,9,7,1],[5,6,-7,-4,7,-1,8,9,-8,-4,9,6,-4,-3,9,1,-8,-10,3,9,10,1,5,-5,5,5,7,9,-4,-2,-4,1,-1,-10,-4,4,-8,-4,-7,5,-8,5,2,9,-6,-1,6,-6,-2,1,5,2,2,-6,4,-10,-4,10,-1,-1,9,-7,5,-10,-10,-5,-8,-8,-2,9,6,10,4,-5,6,2,-10,-10,2,6,-1,-7,-9,-9,-7,-8,-8,2,-6,-7,-3,-8,7,9,-8,-1,7,9,-1,6,-7,-3,-1,-6,-2,-9,-1,-9,5,-6,-5,3,5,8,2,-7,8,-3,7,-6,-2,5,2,-10,3,1,4,-10,9,6,1,10,3,8,3,-8,-9,-8,6,9,7,5,-7,10,-4,7,10,-5,-1,3,-7,10,-4,8,-10,9,-10,-7,-1,2,5,-3,7,8,-2,-3,-3,-6,5,7,2,1,10,6,-6,7,8,-6,7,-2,-8,8,1,-8,-8,10,-1,-10,2,4,-6,9,2,-8,3],[8,6,3,-1,-4,6,-9,-6,9,8,-5,-4,-8,-2,-7,-8,-6,-2,2,8,4,-9,-2,-5,2,-4,-8,1,-9,4,-8,1,-7,-3,-8,-6,-6,7,-1,-10,-6,9,-7,9,5,-1,6,-9,5,-5,-4,7,-5,9,-9,-8,-7,8,-9,-9,-2,9,2,-4,-9,-2,-9,4,-7,9,-4,-10,6,-5,5,-1,-4,-7,-8,3,-10,-2,-8,-3,1,-9,-1,-6,-5,3,-4,-10,-5,-5,8,4,-7,-8,-5,7,3,9,-5,10,-5,-1,-7,7,8,7,-4,-7,-7,5,6,-8,-8,-2,3,4,-2,6,7,-3,9,-4,-1,3,4,2,2,8,8,-4,9,-6,2,-4,7,-6,7,9,-9,-10,4,4,3,-5,-1,1,-6,2,-10,7,-4,-4,-2,-1,-9,3,-2,-9,-10,-5,3,10,-2,9,9,-1,-10,-3,10,-1,-4,2,3,2,-8,-4,-2,2,7,8,-7,8,-4,8,-7,-4,-7,-9,-10,6,10],[8,-2,-6,10,-4,2,4,7,9,5,8,-10,2,10,7,-8,9,-3,-9,-10,-2,9,8,10,-9,-3,-4,-4,4,-6,3,5,-6,-9,-3,-9,1,1,-3,9,3,-9,-4,7,8,-8,-9,-2,-3,-9,-10,-1,8,4,-2,-3,6,6,-6,9,-8,4,-2,-2,7,-3,-2,2,6,-1,-1,-5,-6,-7,6,8,-5,-1,9,3,-5,-7,-1,-6,6,-7,-10,4,-7,-10,-6,-5,1,9,-9,7,9,10,-4,-8,4,7,-2,-1,1,2,-10,-10,2,10,-2,-5,3,-2,2,7,-9,-9,3,-2,1,-2,10,3,-1,-3,-2,-5,-4,1,-9,1,3,9,-1,-10,2,5,-6,-3,-3,-2,-7,-1,-2,-8,-3,8,-10,-1,7,-5,-7,-2,1,2,4,-9,8,3,-2,-2,-3,-10,7,-5,-7,7,1,9,-5,-5,4,1,6,4,6,-5,-6,1,8,-2,-4,-3,6,-8,4,1,9,-9,-3,-3,9,-7,2],[-10,2,9,1,-3,-3,-10,-6,4,1,2,-6,-5,2,-10,8,9,4,-5,10,-3,-3,-2,4,-6,-9,10,-3,10,5,-4,-4,4,-10,4,-9,3,-10,2,-2,8,9,7,-3,9,-1,-4,5,2,6,-5,4,8,-4,-7,-9,8,-5,1,-3,9,-5,-8,8,6,-7,9,-1,-5,-7,1,-1,5,-5,-7,7,2,-8,4,2,10,-1,3,7,-8,4,10,8,3,-10,-2,6,-10,-6,-2,4,-8,-2,8,-10,-2,8,10,-7,-1,-3,3,7,-4,8,1,-8,9,-1,9,-5,-6,5,9,6,9,3,9,-7,-2,8,9,4,8,-6,7,-2,-4,-8,8,-5,5,9,7,-6,-9,6,-4,5,-6,-1,-4,-7,-9,-3,8,4,-5,7,6,-5,-10,4,-9,-6,-2,9,3,4,10,-10,7,-4,-6,-4,-6,9,10,-10,4,8,-6,-4,5,-10,7,-5,-2,5,-4,10,2,6,5,-2,3,-9,-7,7,-10],[6,6,2,-2,8,9,-6,9,2,-7,7,2,-10,-8,8,-3,-9,-8,9,-9,-6,6,1,3,3,8,1,-5,-9,-7,5,3,-8,-5,1,-5,4,2,-9,7,-6,-2,-4,-7,2,-2,-1,-10,-6,-8,-9,-7,-4,-8,-3,-5,-1,5,3,-8,5,3,7,-6,8,-1,9,-2,4,-6,-7,5,7,1,1,9,3,1,-5,4,-3,4,2,4,8,-2,-2,-10,4,-3,5,10,-3,-8,10,-6,7,-4,8,5,-2,10,2,5,3,3,-1,8,6,4,7,8,10,3,1,-5,-4,9,4,4,-3,7,-9,-7,10,10,9,-3,1,-10,-3,7,9,3,-9,3,3,-3,-5,-9,10,-4,7,-2,3,-1,7,4,-2,-1,6,-1,6,-3,-6,5,10,-9,-7,5,2,-6,2,7,1,-4,-2,7,-3,-8,-1,-7,4,-9,-6,1,-10,9,1,7,5,-10,-10,-6,5,4,-9,-10,6,6,-4,1,5,8,-7],[-9,-8,-9,6,-3,-9,9,-7,-3,-6,6,5,8,7,-10,-10,-7,8,1,1,-4,-3,10,-10,5,-3,10,6,10,3,-8,-8,3,10,1,10,-4,6,2,-7,4,6,8,1,7,-9,-6,9,3,7,-1,-9,9,8,-3,-8,7,-2,-8,-4,-6,-8,-9,6,-6,-6,-10,-1,2,8,-6,-2,-10,7,-7,3,-5,-10,7,6,6,10,9,-5,-3,-4,-9,2,-3,9,2,-5,-2,1,10,-3,-9,4,-4,-9,-2,-6,3,10,6,8,-1,7,8,1,5,-6,-6,-4,-9,-9,-8,-2,2,-7,-3,-8,-7,-6,-3,5,-2,2,-3,-2,9,-3,-8,-10,-7,1,-9,4,6,-3,10,6,-10,4,5,6,-9,1,-4,-10,-7,2,-9,-3,8,-3,5,10,8,-1,-10,-6,-7,-6,9,3,6,1,-2,2,4,8,-7,-7,2,7,-4,-1,-10,-2,-3,-5,2,6,-2,-4,6,-6,-10,-7,10,4,-6,2,4],[-7,1,-7,7,7,-4,8,2,-2,-6,5,-6,9,-6,10,-7,8,-8,-8,-8,6,5,1,-7,-2,-3,-10,-7,-1,-10,-4,9,-2,5,-1,7,5,1,-3,-9,3,3,-1,2,5,4,-8,1,9,4,-9,9,-6,1,1,4,2,-9,8,-6,3,4,2,-3,-1,2,7,5,-2,-3,-6,8,4,2,9,7,-9,-5,-6,5,7,-7,-9,-10,-1,-7,-9,7,-2,-7,9,7,7,-3,2,10,5,6,10,-6,-8,-7,8,2,5,3,5,3,3,5,-4,-5,-2,5,-6,4,6,10,-5,5,4,-5,-9,-1,4,8,-10,-9,5,-6,-4,6,2,-3,-8,9,6,1,2,-8,7,-6,-2,-1,8,-1,-8,10,10,-8,-2,2,-1,-3,-4,-9,10,10,-2,-10,-10,1,-5,7,6,6,2,-6,-1,-4,-2,6,2,-4,8,-3,5,6,8,-7,-1,-4,3,4,1,-8,4,-4,1,9,2,-8,9,-8,9],[3,10,-3,-9,8,-6,2,-2,6,-4,5,-10,-4,-8,8,-8,7,10,1,-8,7,5,6,6,3,9,-8,10,8,4,3,-6,-2,-2,-6,-1,-6,2,6,-4,-8,6,9,-9,1,-2,-7,-9,-7,-1,-3,5,9,-1,-7,-3,-7,-2,4,-3,5,1,8,-1,1,7,2,-3,-1,-7,9,-3,10,3,9,9,5,-5,10,-5,6,4,4,-1,2,-3,-10,9,6,-6,-10,-6,-6,6,-7,-6,-5,-2,-10,5,-3,-4,7,-4,5,-7,-6,-10,5,8,-8,-4,-7,-3,-9,10,7,4,-9,-8,-8,-1,-7,5,-8,-4,9,1,-4,2,3,5,8,-5,-8,3,-7,10,-7,5,-10,-6,-5,-5,-1,2,1,-3,7,-7,-10,-2,-9,10,9,-3,-4,-8,-8,-8,1,3,7,2,6,10,-2,-5,-5,8,10,-3,-2,3,-5,9,3,8,9,-6,1,-5,8,-5,4,-5,5,-9,8,-7,5,8,7,9,-10],[-5,3,-6,-9,-6,-4,-9,10,6,-2,-2,8,-8,-8,2,-4,-8,6,-9,-5,-10,-7,-8,9,-4,6,1,-6,10,5,-1,-1,-7,-5,4,3,-8,4,-5,9,-5,3,-10,4,2,-4,-8,6,-3,-4,-10,10,-5,-4,-7,-10,-8,10,-2,2,4,9,-2,-9,-5,-2,8,-4,6,5,-1,-10,10,10,4,5,7,-10,-8,-4,2,7,7,4,1,1,-4,4,-8,-5,-6,10,4,-2,1,-3,-1,-2,4,-4,-5,9,-5,-3,-7,5,1,-7,-7,5,-7,8,3,-8,4,-1,8,-8,3,6,-2,-3,6,7,-1,1,3,7,9,-2,-9,2,5,10,5,-9,-7,-1,-4,-8,1,4,9,9,-1,1,-7,7,4,1,-1,8,3,-1,-6,-2,8,-2,-1,3,3,2,-8,2,-6,3,1,5,9,-1,-7,-3,-2,2,-5,3,-10,7,-4,9,-10,-9,-4,-7,2,-7,4,6,4,-7,-4,6,-7,-1,10],[3,4,4,-6,-10,-10,9,-8,8,-2,10,9,-9,7,-9,2,8,6,4,5,-10,1,-9,-6,-1,-5,-6,5,1,7,-10,4,5,-1,1,10,-1,3,-2,-8,-9,3,7,3,1,-8,9,10,1,4,9,3,7,-1,-5,1,2,-9,10,-7,-2,-4,8,-6,7,-10,3,8,9,10,-8,8,-3,-9,9,-5,-2,1,-5,6,8,-8,-9,-3,-6,4,2,-4,-1,9,10,10,-3,9,-9,-9,2,7,6,2,3,-3,-8,-1,1,-8,3,10,-10,-5,-7,7,4,3,-6,-1,10,5,3,6,7,5,-3,-10,-8,-3,1,-4,-4,8,-1,8,-5,1,2,-1,1,-2,3,-7,-9,3,8,9,-4,1,-4,-7,3,-6,-5,-3,3,1,7,4,-10,-8,-4,-2,1,-4,-2,5,-8,10,10,-2,-1,8,2,-6,10,-1,-8,-5,-6,-6,-9,-4,4,2,9,4,6,-8,5,-1,7,-1,4,-3,-6,-9,-2],[4,8,7,-10,7,-6,-6,-8,-7,-8,-9,-6,-5,3,-7,-8,10,-9,-3,-1,-8,-7,7,-1,10,7,-4,-4,-7,-10,4,7,3,-5,8,-9,3,1,1,8,-3,-3,-8,-3,-5,-1,-2,7,8,-4,-7,3,8,4,7,-5,5,-5,-6,-9,-3,4,-1,-1,-2,-5,7,-1,-3,-6,-6,-1,10,7,-6,9,-7,5,1,-6,8,-3,9,-9,10,-5,8,-9,-3,4,-3,1,3,9,-1,-8,8,5,5,2,-1,4,-2,-8,9,6,-5,1,4,-2,7,-5,9,-4,4,-4,2,6,10,1,-6,-1,-8,8,6,-7,10,-10,2,7,-10,10,-6,-8,-2,8,-7,-10,-3,7,8,2,7,-9,6,2,-7,-9,-1,-1,-5,-3,-6,-9,1,8,-3,-7,10,9,4,-3,-6,-3,-7,-1,1,-9,7,8,6,-7,-4,-1,-2,4,2,6,8,-6,-2,-1,3,2,8,7,-3,6,1,-6,6,1,-5,-5,-6]], dtype = "int8")#candidate|8277|(14, 195)|const|int8
call_8276 = relay.TupleGetItem(func_6862_call(relay.reshape(const_8277.astype('int8'), [13, 14, 15]), relay.reshape(const_8277.astype('int8'), [13, 14, 15]), relay.reshape(const_8277.astype('bool'), [13, 14, 15]), ), 0)
call_8278 = relay.TupleGetItem(func_6866_call(relay.reshape(const_8277.astype('int8'), [13, 14, 15]), relay.reshape(const_8277.astype('int8'), [13, 14, 15]), relay.reshape(const_8277.astype('bool'), [13, 14, 15]), ), 0)
uop_8294 = relay.tan(uop_8224.astype('float32')) # shape=(3, 6, 1)
uop_8296 = relay.tan(uop_8226.astype('float32')) # shape=(3, 6, 1)
output = relay.Tuple([bop_8189,call_8213,uop_8220,call_8230,const_8231,call_8265,uop_8270,call_8276,const_8277,uop_8294,])
output2 = relay.Tuple([bop_8192,call_8214,uop_8222,call_8232,const_8231,call_8266,uop_8272,call_8278,const_8277,uop_8296,])
func_8297 = relay.Function([], output)
mod['func_8297'] = func_8297
mod = relay.transform.InferType()(mod)
output = func_8297()
func_8298 = relay.Function([], output)
mutated_mod['func_8298'] = func_8298
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8307 = relay.const([[[1.731188,3.853654,-6.613672,4.508153,-3.253859,0.112492,5.248695,5.486036,8.023457,-2.472396,1.465194,-4.893028,-8.389690,-8.123258,-9.805947,2.671430],[-6.585879,-9.728768,1.096308,9.483664,2.163836,6.996886,3.428205,5.738429,-7.959820,-1.986202,-6.712037,-7.620537,3.985763,3.634937,2.505928,7.206330],[-8.389241,-4.481843,-6.313606,7.819932,-6.218044,-0.461308,5.169775,-8.546295,8.383204,5.842475,-0.995208,-6.073627,-6.062133,6.683062,7.080421,1.907567],[-3.373978,2.220460,-1.915377,-0.031458,3.501228,-9.430676,-7.102609,5.803840,5.365846,-5.736021,-7.092587,-5.708046,-5.961994,-1.125616,-5.431474,1.328354],[9.319383,6.897313,1.920892,1.432173,-1.005900,7.346040,-1.504917,-0.878658,6.245756,1.003966,-3.953023,-5.749743,-8.844758,-3.768468,4.622512,6.282739],[-4.302059,-0.017098,9.683219,-6.819161,8.671997,-8.634246,-6.505652,1.759589,6.228429,-4.600293,-0.531876,1.070528,9.402281,-9.593928,2.722902,-7.414947],[-3.857709,-3.001672,-5.004579,-3.303670,-2.325783,1.873990,2.607504,7.183187,-7.693379,-8.791127,-3.665837,9.522906,9.663102,-9.002993,0.245517,-6.451949],[6.634972,3.276602,-0.582938,0.032410,0.121792,8.099418,-1.926484,2.476022,-2.013379,3.213162,9.728529,7.101005,-3.324343,-8.416746,-1.597934,-0.168379],[7.645922,8.005851,4.510644,-3.441195,0.064056,5.690985,-6.764624,-1.405229,8.525881,-5.182696,-5.502436,1.635392,1.957134,5.609712,6.725564,-9.633495],[6.266859,-0.324313,-8.125748,5.658184,-4.664522,3.521533,-4.589327,-4.872817,-9.826970,-3.295822,-6.924705,4.927785,3.454309,1.863156,-8.049056,5.067294]],[[0.117879,-5.007205,5.402463,7.866218,6.166864,-8.557204,9.608123,9.360261,5.360869,-0.112192,2.186791,-5.829431,-8.679346,5.819197,0.012878,6.788784],[-3.589182,-2.196761,6.737960,-3.150247,1.795534,-9.923669,6.322239,-6.594788,-6.436070,-1.676074,-4.950049,-8.053278,-4.753316,-3.740580,5.545630,-2.273663],[3.481116,2.362579,-3.104780,8.527434,-3.596225,-2.179877,4.752778,8.209543,-6.154303,-7.619893,-8.180903,5.986308,-6.151217,-6.004107,0.480720,-1.645701],[1.920648,-3.818367,1.296785,4.637468,9.151047,6.293329,-2.277027,-2.206308,-5.149270,-3.336590,-4.181641,2.976170,5.929689,-8.178956,-8.878134,0.747677],[-0.026933,1.080095,-7.976717,3.178816,6.151312,-0.395225,3.406886,-9.918188,3.600747,-6.877621,-8.093028,7.487477,7.175823,5.822217,-5.143995,-6.907523],[-0.133180,-7.340370,-2.181951,-8.352763,-3.200037,-2.916101,-1.105088,6.271058,0.736551,7.382552,1.172047,6.496282,-4.543950,-1.038427,3.978050,6.442330],[-9.013386,-5.936344,3.420100,-4.830754,-1.629132,-8.904607,9.312957,-8.802970,5.530845,4.016540,-6.283530,-6.321985,1.345558,0.311837,6.363799,-7.419944],[-5.919437,-9.542205,6.260121,0.008250,5.536022,-5.757007,6.190656,4.989548,-5.112796,0.024142,3.220320,0.443952,-7.015205,-3.819319,4.400056,-3.991203],[0.474205,-0.651894,3.964534,-1.456563,6.062266,-3.374639,-0.757329,3.972228,-1.846722,1.975901,-2.539063,-9.521582,-9.042388,-6.287052,4.911718,6.947535],[-1.401377,1.861371,-2.314858,-9.434742,0.851239,-6.579704,1.406282,-6.957827,6.025796,5.580567,5.028051,-7.358699,-4.842159,2.944709,1.397693,2.519583]],[[-5.226869,-4.619710,-2.932471,-7.550890,6.578823,6.415774,1.208208,-5.719917,-2.659852,-0.216541,1.265298,0.994072,-9.293861,2.575783,4.421203,5.421131],[0.305355,-9.115742,-6.232175,8.181376,-2.812847,-5.478440,1.285504,-1.469024,6.165106,9.793815,1.588875,-9.876924,5.337532,-4.446119,-5.730094,4.511983],[8.522954,-4.359283,-0.104208,0.239860,-5.744935,-6.756128,-9.830648,8.611751,-2.611829,-1.258647,0.777417,8.619245,-9.595321,-9.713099,3.375293,-1.089629],[1.341080,-0.283836,6.212333,-8.710023,-6.294256,9.884653,5.818581,-4.855784,1.244213,-1.371553,6.760474,5.699542,8.465532,6.459200,2.969499,2.873742],[-9.750632,2.101003,4.674032,5.685365,-0.936764,-3.723274,-7.558183,6.285104,5.371834,-7.870947,9.624612,-2.824949,0.297787,8.981292,0.419204,-2.179102],[9.397908,4.690453,7.294768,-8.273813,0.149367,-7.004144,1.786576,9.890253,0.873144,5.688801,-7.272959,1.488870,7.125508,-0.160462,1.599443,-0.595607],[-5.876725,9.575730,5.063943,-5.221599,-2.109244,-4.765478,-2.239840,-9.261660,5.099992,6.652463,8.653640,-1.139594,2.506309,3.857791,4.615103,0.284856],[-4.069509,4.954058,-1.855600,-7.210077,-0.472334,-8.340833,7.246669,-5.120522,9.638326,-7.357706,-9.122835,0.179782,0.817602,-6.706779,4.608235,7.716289],[-4.674784,2.150530,-6.387865,5.595791,-2.220786,8.215409,-2.482931,-7.163310,7.342450,-8.671901,6.316189,-2.690698,4.750543,7.849910,-4.720430,-9.608506],[-0.845939,-4.075298,1.907175,0.001326,1.616907,5.193684,8.941937,7.084005,-0.809509,-4.786537,-2.000928,5.895633,-1.421173,-5.904338,4.467018,8.370572]],[[-7.809586,-1.238782,-7.589443,4.071359,-0.209598,9.903241,-2.071187,1.113945,4.696294,8.658824,-1.074998,0.318782,2.271644,4.506829,-3.373514,-7.703996],[-9.251633,-8.832830,3.235051,2.729258,8.140235,2.831124,8.723562,-8.661824,-3.217050,-2.760306,-6.664987,5.502412,1.079841,-8.055729,-5.669941,-2.912900],[6.475918,8.792252,-2.252781,5.897529,3.548141,-2.250344,8.915108,8.621980,-5.442807,-7.326241,7.788198,-7.035935,-6.380758,-8.724371,-6.854312,-9.262773],[-4.190405,-9.509850,-3.095580,-4.894950,-2.893412,-9.386235,0.683360,8.748399,-4.479388,5.600092,-5.930966,-1.342234,-2.361447,4.728436,-9.021111,4.909962],[1.863552,1.327151,9.140878,8.377221,-0.353271,9.040910,-3.039020,9.451117,-8.116743,-0.791256,7.670029,3.321411,-4.923804,-9.736527,-6.542378,3.463955],[8.844109,1.163496,-7.622953,-8.160915,2.142731,-3.464356,-0.597687,-8.457204,-5.916075,9.923455,9.078394,-6.828997,5.508006,-4.646998,-5.900747,0.766191],[1.291659,-3.913542,-2.548271,-2.540212,-6.130759,0.220050,7.050417,0.683902,-6.205727,8.910545,1.295032,0.775094,-8.146269,7.737326,1.641309,-9.103017],[4.472365,-3.664745,7.853430,1.280554,-6.113314,-8.983586,-3.926286,8.167432,7.463517,0.271280,-2.420431,7.037826,-0.410589,5.867295,-3.838026,-0.496677],[-6.020194,7.037431,-1.927416,5.953900,7.877103,-6.845181,0.533690,-5.479029,-8.051558,-3.535556,2.592512,2.041748,-0.083732,5.688368,-5.538994,-9.375283],[7.277315,-0.379440,5.111924,-3.029218,4.288262,-3.583064,-0.122685,3.975280,-8.262245,-4.925332,-2.557562,-2.922924,-2.775313,3.536430,6.115605,-9.851988]],[[1.829442,-7.954923,-4.907924,6.864958,6.034756,8.754865,-0.049537,-8.838638,-0.760388,-0.573195,-4.167598,2.005222,1.336983,7.701160,-9.228361,3.787950],[-9.027096,-9.061233,-3.235300,1.596471,-1.200217,3.944449,1.231467,1.600659,-1.615442,-3.677181,-3.222664,-2.419415,-5.467641,9.021946,9.313813,-6.427458],[-9.362037,-9.162352,-4.546025,7.684581,-2.847788,-5.115925,-5.408385,8.981589,6.559329,-4.832049,9.214971,8.942167,-1.890676,4.262393,9.197920,-4.816000],[-4.777474,-0.468189,-6.100239,3.126745,6.650371,-0.029739,-4.322114,-4.384682,-7.975074,9.779265,7.996283,6.568691,1.738070,4.136710,0.951480,1.702987],[0.631487,-3.203895,0.660144,-5.036528,3.142711,-4.576651,6.119661,-2.407461,6.195375,1.206747,-8.386252,2.264785,8.468707,7.718475,-5.496591,2.848589],[-2.419943,2.170484,6.966491,-3.046325,-8.980970,-8.965933,-2.407564,6.334955,3.688850,-5.644279,-0.318769,0.164133,0.777581,-0.779921,5.992748,3.399643],[6.331190,9.770645,-0.127308,-9.633810,5.569687,-9.597049,5.032609,6.278984,5.235490,-0.835110,0.609818,7.686974,-5.866759,-8.503466,8.407210,-6.178965],[-0.786662,-2.844227,0.731784,-6.034673,5.986173,-4.817572,-2.808879,3.955529,-2.158021,2.032476,-1.672233,-7.132984,-8.930130,-3.120239,-1.138114,4.168188],[0.993621,0.510612,-6.207087,9.008110,1.642116,-0.618331,1.184773,5.712336,1.595324,-1.622694,8.182089,9.224038,8.114400,-6.189042,-8.814493,5.934264],[7.076637,-2.398714,-2.739997,6.719514,-6.842222,2.245373,-8.124500,4.117418,-9.820309,6.239650,-4.639357,7.621052,-6.551085,9.227189,4.925309,-4.232574]],[[7.258089,-8.277296,-0.766125,5.181349,1.786891,7.633071,4.677409,-7.917954,-4.369835,-3.140567,-4.074885,-6.468826,9.566188,2.756877,-2.096002,9.388619],[-0.425704,0.769535,1.308875,0.506556,-0.839332,-7.880857,5.755589,6.987266,-9.917657,-1.592717,6.943566,-1.858728,-4.149095,-4.395780,9.475576,7.072294],[7.907659,9.930940,2.861234,-5.218405,1.832933,-2.654337,5.881626,-5.482161,4.012417,-0.736439,3.164806,8.095650,-4.496532,8.036007,4.997156,0.028866],[2.987001,9.246077,-4.957050,-8.443945,6.586722,-8.924884,-4.680246,-8.036499,-6.161384,1.001798,9.094703,8.998587,-8.299883,-5.695544,0.657899,-5.925275],[-0.553569,-1.086812,1.007975,-1.293429,8.564365,1.521505,8.371968,6.011532,-3.747557,1.305617,1.482652,5.313711,9.754222,8.496183,-0.723250,-2.240331],[4.721541,4.323210,9.467398,7.009952,-7.260908,7.704696,4.945488,1.670922,1.350711,3.666294,-7.459079,-2.864783,-8.617741,-8.844633,2.561316,9.746753],[3.355623,-2.465132,-6.652557,4.954740,-5.006914,-7.225733,9.079570,-9.367827,4.435165,0.208429,-2.860978,4.389845,1.046933,1.717615,-7.086678,-1.247286],[4.466060,4.055929,-3.483838,0.066117,5.063703,-1.428745,6.052466,6.160453,0.481581,-8.600848,-2.270474,-6.136125,-5.836502,-3.636262,9.307527,-8.743892],[6.762784,-5.964929,6.003063,1.450850,-6.032678,6.058051,-9.066904,-9.229061,-7.120984,3.455418,-2.949710,-7.693075,-5.536920,-8.826002,3.340145,-1.140257],[-8.674193,0.607376,-6.496137,-0.651040,-7.766644,1.512690,-6.354233,-3.522644,-6.517062,0.607408,-0.085209,3.365869,-9.117142,-4.373828,3.040237,9.864333]],[[7.280337,8.162316,0.645429,-2.743469,8.740022,-9.384596,4.689244,-8.823820,-1.416503,1.700543,-8.708656,0.079314,-0.028019,-7.903861,2.039656,4.272001],[-0.601555,-9.150961,-7.846587,-3.878360,-1.597000,0.456863,8.218486,-0.060586,7.576859,-0.582735,-7.741637,-3.011119,5.834222,-1.120497,-0.368361,-6.674263],[-0.153271,-1.122606,5.667658,9.617868,7.978263,-8.034882,-3.809889,4.150481,-0.279571,8.440349,9.498961,2.846746,5.404538,2.670465,9.897708,-2.783667],[5.924931,-4.682237,7.281200,-7.059754,-4.790620,-5.347593,4.124794,-0.298263,3.041447,4.852114,2.327999,-0.519042,-8.409818,5.305279,9.782241,-9.400203],[-1.956966,7.605528,-1.138421,3.343059,-3.202174,8.331980,5.773880,1.987260,-7.245005,9.549510,4.153770,-9.254643,-7.049423,0.272012,2.907856,-7.839327],[-0.553416,-8.730535,6.218475,7.505660,6.693332,-9.027115,-5.004384,0.394345,-8.273354,6.050219,-0.352939,4.964830,6.801592,-5.454627,-1.643745,-9.651377],[2.666031,4.800473,-9.596905,-9.987790,-0.657840,-1.579398,5.462616,0.404243,7.997880,0.031528,-3.361528,-4.513527,-6.280070,-1.273135,0.956748,4.165155],[2.850806,5.877919,-2.754000,4.622006,-0.746242,6.397715,-5.255946,8.465494,9.256289,2.782973,-4.897021,5.842732,4.082697,5.896904,1.779139,6.378548],[-4.045657,-8.775912,-4.515526,6.216861,-3.802382,-8.637461,8.354786,-5.870946,4.175496,-3.816034,1.234142,-7.482542,4.596855,0.770490,-2.659210,-9.328079],[3.737273,8.221839,-2.803574,9.817582,-2.660006,9.837798,4.034360,-6.469897,-4.852602,-4.736286,5.438297,-9.086894,0.667678,0.493890,-0.831551,-4.194435]]], dtype = "float32")#candidate|8307|(7, 10, 16)|const|float32
uop_8308 = relay.erf(const_8307.astype('float32')) # shape=(7, 10, 16)
func_7690_call = mod.get_global_var('func_7690')
func_7692_call = mutated_mod.get_global_var('func_7692')
var_8314 = relay.var("var_8314", dtype = "int64", shape = (2304,))#candidate|8314|(2304,)|var|int64
call_8313 = relay.TupleGetItem(func_7690_call(relay.reshape(var_8314.astype('int64'), [8, 288])), 3)
call_8315 = relay.TupleGetItem(func_7692_call(relay.reshape(var_8314.astype('int64'), [8, 288])), 3)
uop_8319 = relay.atan(uop_8308.astype('float32')) # shape=(7, 10, 16)
output = relay.Tuple([call_8313,var_8314,uop_8319,])
output2 = relay.Tuple([call_8315,var_8314,uop_8319,])
func_8326 = relay.Function([var_8314,], output)
mod['func_8326'] = func_8326
mod = relay.transform.InferType()(mod)
mutated_mod['func_8326'] = func_8326
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8327 = relay.var("var_8327", dtype = "int64", shape = (2304,))#candidate|8327|(2304,)|var|int64
func_8326_call = mutated_mod.get_global_var('func_8326')
call_8328 = func_8326_call(var_8327)
output = call_8328
func_8329 = relay.Function([var_8327], output)
mutated_mod['func_8329'] = func_8329
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8348 = relay.const([[[2.484717,6.730263,2.506608,5.665433,5.488462,7.196182,8.173989],[0.055782,-5.792008,-1.971441,1.569430,3.032589,4.414687,0.678593],[4.992241,2.717657,-4.044346,6.541499,-3.397552,5.702831,3.430481],[-9.297523,-5.457622,3.554344,-5.228450,0.927315,-6.936509,8.191710],[7.178148,-6.285546,2.803483,0.435471,-7.114621,0.476600,6.397442],[-4.168938,9.215145,6.730236,-3.908860,6.128853,-7.599093,3.584696],[1.816192,-5.284159,6.911425,1.410800,-4.551320,-5.916195,-5.535744]],[[-2.434631,1.883736,-9.147079,6.241561,-0.922222,-8.789694,-0.172293],[-5.260045,9.384878,-2.098987,-3.139492,-7.114789,-5.021756,-4.289331],[5.067660,-0.859682,-7.844398,6.852811,-6.985104,8.188983,-7.202659],[-3.729201,-9.576377,-7.869698,-9.967259,-4.353340,-2.220619,0.938631],[8.710305,-4.128710,-1.967642,-8.737089,-6.886307,7.497707,-7.586470],[5.014383,5.623078,2.866953,2.481029,4.256283,-7.662408,-1.213224],[2.123659,6.516160,-8.504298,0.635351,-4.047685,1.827098,9.949050]],[[-6.170872,3.993386,2.015342,3.385243,6.075097,-5.894553,1.380596],[-2.714666,-0.221130,6.897798,-5.580956,7.668397,-5.487601,-3.300074],[-8.810942,-0.926614,7.789046,-5.668637,-1.513435,-9.102501,-8.928964],[6.272297,0.867834,-9.118745,0.168971,-4.849613,1.762008,9.975414],[6.523442,3.968657,-5.096800,-0.065475,-9.476933,-0.881435,7.010194],[-7.771016,3.224876,0.120164,2.164378,-4.730818,6.518161,-6.585371],[-1.820946,-1.616704,5.964669,4.680668,7.451506,-9.372166,6.001744]],[[5.611469,8.959566,-6.402041,4.679723,2.775152,0.654926,8.969025],[-2.407016,3.175538,2.331804,9.455251,-3.971638,-6.445243,-2.031466],[2.256640,0.830345,-6.085328,-3.250128,-8.444955,-8.442791,-0.484603],[8.344286,-5.443381,9.944957,5.382000,9.194629,-7.491805,0.213687],[-2.200023,2.931370,8.892116,-4.850470,0.525865,3.346446,-5.747996],[0.487451,7.772877,-4.463394,4.951948,-5.188871,-9.551641,2.481907],[2.830257,-3.922763,-0.752313,4.994470,-8.392415,-7.393250,-3.051889]],[[2.406788,7.674154,7.304606,-2.686166,7.777662,8.763307,-5.906215],[4.250521,-4.888206,-5.839754,-4.190179,-0.304490,4.900549,7.061233],[-0.564441,9.855026,-0.187640,6.529194,5.346699,8.622809,9.072082],[-9.904318,8.477659,2.582551,-2.767073,-0.789147,-9.331544,-9.956249],[4.422801,4.600280,4.450230,-9.017043,-1.694349,2.154935,8.489676],[-4.599756,-9.079026,-9.997679,-4.442305,8.101851,6.269948,-0.291707],[5.182288,1.717578,-5.472185,-9.884387,3.775492,-4.003289,-2.763431]],[[-9.470188,-5.973515,-6.392431,4.188965,-1.863268,-3.819775,3.884721],[6.610869,-1.528544,-2.436140,-3.229781,-1.072845,3.527606,7.505705],[8.890381,8.723697,2.754495,-3.464588,-8.784091,-4.913080,-6.990248],[6.325592,-4.654421,7.202826,5.156870,9.485727,-9.515744,-2.827581],[1.321642,1.676178,-3.070323,-7.494317,4.650373,4.977092,8.968816],[-1.968629,2.898659,5.315466,5.855718,-5.339941,-4.716769,-0.456721],[9.981761,-9.723597,-3.128711,-4.591039,7.081741,-8.254071,2.953180]],[[-8.049319,2.379103,-1.484381,-8.031033,-4.135377,-0.881214,-1.620952],[-0.714924,-1.975706,-4.758824,5.099450,-7.839478,3.524856,-7.279102],[-6.630406,6.308945,-1.340823,-5.764102,2.737164,-9.405961,-5.093210],[-6.777264,-9.056013,4.354031,5.238842,2.012916,-1.991088,-3.815160],[2.020099,5.977684,-8.317701,9.623491,5.307686,-5.926590,-4.899740],[-0.853195,8.407614,-3.460524,-6.193147,-8.617549,6.152407,-2.810931],[-0.430455,6.532813,2.001099,8.856446,9.924685,1.135119,-0.667292]],[[-2.254427,-3.786449,7.398853,6.887525,6.243292,2.897540,9.806613],[-8.240911,-2.864679,-0.108173,-7.508932,-0.442842,-5.340495,-3.396697],[-8.682351,9.397529,-9.014305,-1.274819,6.940057,3.681867,0.454723],[6.672812,5.626259,-2.710834,-2.946128,1.120024,-9.405426,-5.423306],[1.415095,-5.673034,-6.332506,-9.140405,-2.138226,-6.030798,8.401566],[-5.451950,0.745057,9.344431,0.648649,-6.156518,5.590608,7.872173],[-3.069011,-0.716472,-6.592824,6.718181,-9.526756,3.702955,-3.454929]],[[-7.644842,1.550625,-9.581801,-5.721957,6.703537,4.218868,4.492118],[7.040209,8.107395,0.281994,-3.397102,-8.076550,-9.399981,4.927751],[2.884141,7.255543,9.278617,1.352238,7.291447,-9.698899,6.905763],[7.015586,-7.133378,4.613084,-9.247147,9.561465,4.813141,-7.835057],[-6.879610,0.458299,-0.166450,8.331227,-8.416514,4.051775,0.795905],[-3.343243,-9.700534,6.631626,4.526609,-5.192795,4.670345,-8.221455],[6.222771,-3.654559,-4.019720,-4.786048,4.971724,5.911310,-2.759406]],[[0.974054,-2.409391,-2.165637,2.834826,8.527389,8.129140,-7.300121],[6.128225,3.810429,-7.985749,-4.149721,5.792742,7.189323,-5.884548],[-6.188561,7.640875,-5.082558,-9.681990,-0.628135,1.823175,-7.982698],[4.717670,4.621430,8.146237,-2.130575,4.474497,-2.303188,5.151858],[6.029970,-1.294931,-1.379341,0.509947,0.846243,0.326979,-6.841562],[9.725422,6.638237,1.435914,3.026969,9.325417,-0.377864,-6.069121],[-3.062367,-1.738824,-9.236800,1.754516,1.046648,5.565190,-7.469024]],[[-2.614048,3.915812,1.153312,5.551352,-0.894499,3.542915,-4.865799],[-1.164945,5.483075,-7.607719,-7.609034,-6.141494,0.880157,-6.383498],[9.866360,5.951225,3.387733,0.314879,-8.448944,-1.324535,-1.124752],[-0.776469,4.095546,9.215289,9.644967,5.856997,-2.890423,-0.616157],[4.563672,8.644758,8.642965,-3.116272,4.080216,-9.880070,-6.024654],[-3.677641,-6.859638,6.617883,0.046261,-2.598818,-5.049331,-4.697488],[-4.420682,-6.722818,-6.396497,-1.201223,3.962865,-2.111592,-7.095789]],[[-1.002533,7.951749,9.371263,5.139306,-7.298472,-4.023719,-0.416255],[-2.502404,3.168791,8.242233,-9.935507,0.313994,6.140667,1.972969],[-1.229995,-2.318093,6.591733,9.370655,-6.695168,3.387949,-8.859711],[4.752871,5.361254,3.972056,-5.660268,-4.721787,-5.077789,9.582876],[-5.989126,-9.053268,5.147146,9.260207,-9.335389,7.379928,-8.342150],[3.734237,-3.502562,2.660843,-5.448841,9.415910,9.355650,6.536512],[2.619344,2.516675,-1.247574,-2.317039,2.759211,-8.844771,6.208117]],[[-3.823389,-0.724451,-3.816727,-4.896534,-8.509939,-1.878720,-9.236542],[-9.821804,-5.161778,-7.231840,1.762755,0.592616,-0.585667,-0.925515],[-9.326583,8.357266,8.303075,8.678644,-0.082086,1.227422,-2.870742],[-1.241853,9.728189,7.134761,5.921390,9.789350,-6.208022,-6.839839],[1.827988,1.152834,-8.320572,-8.151374,-4.140046,9.640034,-6.776574],[-4.058045,6.974985,4.506367,5.155091,-8.942600,-8.688386,8.789335],[-3.132747,-6.176021,-8.973717,1.770511,-1.236631,-9.641367,8.513246]],[[6.699356,-1.518505,5.004008,8.592008,-2.689830,3.792311,0.915303],[6.882464,-8.282109,-5.812996,1.381065,-6.781490,-4.755513,1.011997],[8.127123,-5.015654,-2.973728,-6.435594,-2.375417,-8.786272,-2.774194],[6.667680,8.404010,5.765268,-2.764889,-6.117287,-0.011836,5.233009],[6.101307,-2.817085,4.501929,-9.125915,7.134024,9.582368,-6.918103],[8.368562,2.012253,-7.789278,0.562424,-2.144333,1.983368,8.121172],[8.950209,-6.556657,5.052674,-7.695122,-6.929855,-1.587785,1.957340]]], dtype = "float64")#candidate|8348|(14, 7, 7)|const|float64
uop_8349 = relay.atan(const_8348.astype('float64')) # shape=(14, 7, 7)
output = relay.Tuple([uop_8349,])
output2 = relay.Tuple([uop_8349,])
func_8358 = relay.Function([], output)
mod['func_8358'] = func_8358
mod = relay.transform.InferType()(mod)
output = func_8358()
func_8359 = relay.Function([], output)
mutated_mod['func_8359'] = func_8359
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8360 = relay.const([[[5.303992,1.992900,-6.425284],[-2.179674,7.129474,-1.344244],[1.348557,-7.711875,7.321743],[9.554508,-9.365191,7.089290],[5.196310,1.186840,-9.020521],[-6.611605,4.867150,9.542492],[-7.959773,-2.810193,-1.004921],[0.019068,-2.200502,0.916443],[1.160291,0.326539,-5.219476],[5.131879,-0.800608,1.528379]],[[-1.278851,4.999916,4.592128],[9.842292,-2.712480,5.162510],[4.349482,9.467450,-8.846781],[3.713389,5.095810,-8.219141],[1.996249,9.950955,-9.268790],[-5.555882,-0.199144,-0.001976],[-2.764570,-6.293792,-3.994428],[6.479840,-8.953150,5.116674],[8.243806,-8.306900,0.291255],[5.922405,5.107433,-9.372192]],[[5.793719,-2.396739,-8.561195],[9.526070,-9.674445,-9.079855],[4.868226,-4.454452,-0.086686],[-8.857905,-8.049941,-3.663682],[8.788465,-8.633684,-7.506920],[1.341471,9.418880,2.940895],[-2.170602,5.064031,-5.335561],[8.721632,2.487925,-7.845950],[6.811226,-8.554252,5.263743],[2.901982,-2.605176,9.321893]]], dtype = "float32")#candidate|8360|(3, 10, 3)|const|float32
uop_8361 = relay.asin(const_8360.astype('float32')) # shape=(3, 10, 3)
output = uop_8361
output2 = uop_8361
func_8366 = relay.Function([], output)
mod['func_8366'] = func_8366
mod = relay.transform.InferType()(mod)
mutated_mod['func_8366'] = func_8366
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8366_call = mutated_mod.get_global_var('func_8366')
call_8367 = func_8366_call()
output = call_8367
func_8368 = relay.Function([], output)
mutated_mod['func_8368'] = func_8368
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7724_call = mod.get_global_var('func_7724')
func_7725_call = mutated_mod.get_global_var('func_7725')
call_8431 = relay.TupleGetItem(func_7724_call(), 1)
call_8432 = relay.TupleGetItem(func_7725_call(), 1)
output = call_8431
output2 = call_8432
func_8436 = relay.Function([], output)
mod['func_8436'] = func_8436
mod = relay.transform.InferType()(mod)
mutated_mod['func_8436'] = func_8436
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8436_call = mutated_mod.get_global_var('func_8436')
call_8437 = func_8436_call()
output = call_8437
func_8438 = relay.Function([], output)
mutated_mod['func_8438'] = func_8438
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7724_call = mod.get_global_var('func_7724')
func_7725_call = mutated_mod.get_global_var('func_7725')
call_8475 = relay.TupleGetItem(func_7724_call(), 1)
call_8476 = relay.TupleGetItem(func_7725_call(), 1)
func_7690_call = mod.get_global_var('func_7690')
func_7692_call = mutated_mod.get_global_var('func_7692')
var_8479 = relay.var("var_8479", dtype = "int64", shape = (2304,))#candidate|8479|(2304,)|var|int64
call_8478 = relay.TupleGetItem(func_7690_call(relay.reshape(var_8479.astype('int64'), [8, 288])), 5)
call_8480 = relay.TupleGetItem(func_7692_call(relay.reshape(var_8479.astype('int64'), [8, 288])), 5)
func_8436_call = mod.get_global_var('func_8436')
func_8438_call = mutated_mod.get_global_var('func_8438')
call_8489 = func_8436_call()
call_8490 = func_8436_call()
output = relay.Tuple([call_8475,call_8478,var_8479,call_8489,])
output2 = relay.Tuple([call_8476,call_8480,var_8479,call_8490,])
func_8506 = relay.Function([var_8479,], output)
mod['func_8506'] = func_8506
mod = relay.transform.InferType()(mod)
var_8507 = relay.var("var_8507", dtype = "int64", shape = (2304,))#candidate|8507|(2304,)|var|int64
output = func_8506(var_8507)
func_8508 = relay.Function([var_8507], output)
mutated_mod['func_8508'] = func_8508
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7323_call = mod.get_global_var('func_7323')
func_7324_call = mutated_mod.get_global_var('func_7324')
call_8579 = relay.TupleGetItem(func_7323_call(), 0)
call_8580 = relay.TupleGetItem(func_7324_call(), 0)
func_6862_call = mod.get_global_var('func_6862')
func_6866_call = mutated_mod.get_global_var('func_6866')
var_8582 = relay.var("var_8582", dtype = "int8", shape = (2730,))#candidate|8582|(2730,)|var|int8
call_8581 = relay.TupleGetItem(func_6862_call(relay.reshape(var_8582.astype('int8'), [13, 14, 15]), relay.reshape(var_8582.astype('int8'), [13, 14, 15]), relay.reshape(var_8582.astype('bool'), [13, 14, 15]), ), 0)
call_8583 = relay.TupleGetItem(func_6866_call(relay.reshape(var_8582.astype('int8'), [13, 14, 15]), relay.reshape(var_8582.astype('int8'), [13, 14, 15]), relay.reshape(var_8582.astype('bool'), [13, 14, 15]), ), 0)
func_7369_call = mod.get_global_var('func_7369')
func_7370_call = mutated_mod.get_global_var('func_7370')
call_8585 = relay.TupleGetItem(func_7369_call(), 0)
call_8586 = relay.TupleGetItem(func_7370_call(), 0)
func_8297_call = mod.get_global_var('func_8297')
func_8298_call = mutated_mod.get_global_var('func_8298')
call_8602 = relay.TupleGetItem(func_8297_call(), 6)
call_8603 = relay.TupleGetItem(func_8298_call(), 6)
output = relay.Tuple([call_8579,call_8581,var_8582,call_8585,call_8602,])
output2 = relay.Tuple([call_8580,call_8583,var_8582,call_8586,call_8603,])
func_8633 = relay.Function([var_8582,], output)
mod['func_8633'] = func_8633
mod = relay.transform.InferType()(mod)
var_8634 = relay.var("var_8634", dtype = "int8", shape = (2730,))#candidate|8634|(2730,)|var|int8
output = func_8633(var_8634)
func_8635 = relay.Function([var_8634], output)
mutated_mod['func_8635'] = func_8635
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8297_call = mod.get_global_var('func_8297')
func_8298_call = mutated_mod.get_global_var('func_8298')
call_8639 = relay.TupleGetItem(func_8297_call(), 7)
call_8640 = relay.TupleGetItem(func_8298_call(), 7)
uop_8658 = relay.atanh(call_8639.astype('float64')) # shape=(13, 14, 15)
uop_8660 = relay.atanh(call_8640.astype('float64')) # shape=(13, 14, 15)
output = relay.Tuple([uop_8658,])
output2 = relay.Tuple([uop_8660,])
func_8661 = relay.Function([], output)
mod['func_8661'] = func_8661
mod = relay.transform.InferType()(mod)
mutated_mod['func_8661'] = func_8661
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8661_call = mutated_mod.get_global_var('func_8661')
call_8662 = func_8661_call()
output = call_8662
func_8663 = relay.Function([], output)
mutated_mod['func_8663'] = func_8663
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7369_call = mod.get_global_var('func_7369')
func_7370_call = mutated_mod.get_global_var('func_7370')
call_8667 = relay.TupleGetItem(func_7369_call(), 0)
call_8668 = relay.TupleGetItem(func_7370_call(), 0)
output = relay.Tuple([call_8667,])
output2 = relay.Tuple([call_8668,])
func_8682 = relay.Function([], output)
mod['func_8682'] = func_8682
mod = relay.transform.InferType()(mod)
output = func_8682()
func_8683 = relay.Function([], output)
mutated_mod['func_8683'] = func_8683
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7369_call = mod.get_global_var('func_7369')
func_7370_call = mutated_mod.get_global_var('func_7370')
call_8770 = relay.TupleGetItem(func_7369_call(), 0)
call_8771 = relay.TupleGetItem(func_7370_call(), 0)
output = relay.Tuple([call_8770,])
output2 = relay.Tuple([call_8771,])
func_8777 = relay.Function([], output)
mod['func_8777'] = func_8777
mod = relay.transform.InferType()(mod)
mutated_mod['func_8777'] = func_8777
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8777_call = mutated_mod.get_global_var('func_8777')
call_8778 = func_8777_call()
output = call_8778
func_8779 = relay.Function([], output)
mutated_mod['func_8779'] = func_8779
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7101_call = mod.get_global_var('func_7101')
func_7103_call = mutated_mod.get_global_var('func_7103')
call_8791 = relay.TupleGetItem(func_7101_call(), 1)
call_8792 = relay.TupleGetItem(func_7103_call(), 1)
output = relay.Tuple([call_8791,])
output2 = relay.Tuple([call_8792,])
func_8793 = relay.Function([], output)
mod['func_8793'] = func_8793
mod = relay.transform.InferType()(mod)
mutated_mod['func_8793'] = func_8793
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8793_call = mutated_mod.get_global_var('func_8793')
call_8794 = func_8793_call()
output = call_8794
func_8795 = relay.Function([], output)
mutated_mod['func_8795'] = func_8795
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7914_call = mod.get_global_var('func_7914')
func_7916_call = mutated_mod.get_global_var('func_7916')
call_8802 = relay.TupleGetItem(func_7914_call(), 1)
call_8803 = relay.TupleGetItem(func_7916_call(), 1)
func_3682_call = mod.get_global_var('func_3682')
func_3684_call = mutated_mod.get_global_var('func_3684')
const_8811 = relay.const([7,7,7,6,-4,9,-9,-6,2,-5,10,8,-8,-1,8,7,8,-3,-7,-4,8,-2,-8,1,-10,1,-4,6,-1,4,10,7,7,-2,-10,5,10,6,6,7,6,7,-10,2,1,3,7,-9,1,-9,8,9,-9,-7,2,2,4,10,2,5,7,-7,9,9,9,-9,9,-6,-2,-5,9,-4,9,-10,3,-6,-5,-7,9,4,-3,5,-10,-2,6,-9,-7,1,-5,8,-6,2,-9,6,4,-6,-3,-9,-3,-7,10,-7,9,4,-1,-5,9,10,6,-6,4,-7,4,-1,-7,-8,-6,-6,5,2,4,-4,-5,-3,-8,1,-10,10,4,-10,2,8,7,5,-5,9,-4,-4,-5,4,-5,-9,3,8,-3,-8,10,-4,-3,-8,-8,10,10,-3,-1,2,1,-1,-3,4,1,2,10,-8,-7,-1,-5,-6,-5,4,5,-3,7,3,-5,9,-10,9,9,5,6,-10,7,8,7,1,7,-10,-8,-6,9,10,6,-9,7,-2,10,-3,-8,-2,-4,8,-6,8,1,-8,-9,2,-10,-2,-7,-9,8,7,-5,-2,-3,-10,9,5,-2,-2,5,-8,-9,1,7,-6,-2,-1,-3,7,3,6,-5,-2,6,-8,2,-8,-8,-8,7,-2,-6,-9,5,-4,1,-10,1,-3,-10,1,-9,-4,6,-4,5,-5,8,-9,-7,-1,4,-7,7,-3,-1,10,1,-6,5,1,5,-2,-9,-6,-7,7,10,6,5,4,-6,-5,8,6,-1,-5,5,9,-2,10,-2,9,-10,9,6,1,-10,1,-10,-1,-3,9,-8,2,1,-7,9,-5,5,-6,9,-5,6,5,10,-6,6,3,-4,-2,-4,-10,-9,2,10,6,-5,-6,-4,6,-1,-9,10,1,-4,10,3,3,-4,-7,2,4,4,-10,-5,4,-9,-2,-4,4,5,-8,-2,2,5,-2,5,-6,-6,-7,1,6,4,-10,1,6,7,-4,-4,-7,-10,-8,3,-3,-8,-9,-2,2,2,-4,-7,-9,-4,-3,1,-9,-9,5,-1,-2,-9,-10,7,-6,-6,-2,-1,-5,-3,-5,-8,-5,-1,8,7,1,-10,-6,4,4,4,-3,6,-2,-6,-3,-1,-1,9,4,-7,3,-7,4,4,-1,5,-3,-4,10,-2,-8,1,5,9,9,4,5,2,-5,9,-3,2,5,-1,-9,8,-5,-7,3,2,1,-2,9,6,-10,-10,1,-1,9,1,-4,-5,10,-1,-5,-2,9,3,-10,2,5,-5,3,3,7,-9,-3,-1,-6,5,-5,10,-3,-2,3,4,-5,6,-4,-9,3,1,-4,-10,-3,4,3,2,6,-2,-9,10,-7,1,5,10,1,5,-4,-6,3,-4,3,-4,-3,9,-5,5,5,-3,7,-10,7,-4,2,7,-1,2,1,2,-6,-4,-9,-5,7,7,-5,2,2,-4,-7,2,6,-9,-3,8,3,-2,-3,9,7,3,2,-6,3,-3,-1,-8,2,-3,-10,6,-5,6,-7,9,2,8,9,-10,-3,3,-1,-2,-8,-8,8,-2,2,2,-4,3,-2,9,4,6,-6,3,9,8,2,8,10,2,7,-1,-4,-4,-5,10,6,-9,4,-10,9,4,6,3,9,9,-9,4,7,2,5,-3,7,-3,-6,-7,3,-8,1,-6,-7,8,-5,1,-4,-4,-6,-10,-9,-7,-8,-9,4,-1,-9,9,3,-3,-10,10,1,3,-3,2,7,-6,-2,9,4,-4,6,10,1,-8,10,-6,-6,-8,-3,-10,10,7,-10,-1,-6,-9,10,-2,3,-5,1,-5,2,3,-6,6,-8,-9,9,5,6,-10,3,7,-3,2,4,1,3,-3,-9,-6,-4,-7,6,8,6,-6,9,7,-8,8,-6,-9,-4,-9,-1,-10,-9,-8,9,-7,-6,-3,8,9,-1,-7,-7,-6,-7,4,10,-3,-8,-4,-8,1,-5,9,6,-7,-6,-4,1,3,-4,7,8,-3,-10,-3,-9,2,-1,-7,-10,4,1,8,7,-9,10,-5,6,7,4,-6,-6,-8,9,4,10,-5,7,2,-7,-4,-10,5,6,4,4,4,-8,7,-8,9,2,-10,9,2,6,1,3,-10,8,9,-5,1,5,-5,10,10,9,-10,1,-2,-8,-1,-9,-9,8,-8,-3,6,-7,-1,-6,1,-1,2,5,-9,7,3,4,2,4,-4,-8,-6,-3,4,-8,-3,-7,2,-6,-4,-2,8,9,-7,9,9,-2,-2,2,2,-10,8,9,1,3,-10,-10,-1,8,1,9,-5,-7,-6,1,-8,5,10,7,1,5,-5,2,6,-3,-7,9,1,-9,4,7,2,-9,5,-6,-6,-10,7,-6,-1,-2,-1,-10,-8,1,10,-3,7,-7,-7,-9,-5,3,-10,-7,-8,-9,1,-1,-10,-10,-8,5,6,-10,-4,-6,-7,-10,-8,7,-5,2,6,4,4,6,-8,9,-2,7,-7,4,-3,-2,3,-6,-4,4,-2,7,4,-9,-4,-6,-7,-4,-7,-10,-7,3,2,8,-10,7,3,-9,9,9,8,2,10,2,6,-2,-4,3,-4,3,5,7,4,-5,6,6,9,3,-6,1,-9,-5,5,9,8,5,-2,9,8,10,-8,-2,-6,8,-10,-4,-9,-1,6,8,-4,5,-5,5,-10,9,-3,7,-6,1,-6,-6,-3,-1,-1,-3,2,-4,-4,-2,3,-4,-6,6,-8,9,-2,-8,4,-4,-10,9,-4,-1,-1,5,-8,-10,10,6,3,-9,-2,9,-8,-10,-9,10,-3,2,-6,10,3,-6,-8,-10,-10,7,6,8,1,10,-1,3,-3,-10,1,-3,-9,-7,3,-9,6,3,-4,-6,10,-4,8,3,-2,10,-2,-8,-2,-10,-4,-8,-7,-4,1,-7,-8,10,-10,-7,7,-8,2,1,-2,-1,-2,-1,-7,1,7,-8,10,-10,2,-3,-7,-9,-6,5,1,-8,-2,-3,4,-8,1,5,-6,2,-4,-9,5,-2,-6,10,-10,2,5,-2,9,-1,7,-4,3,-3,10,-10,7,5,-8,1,-1,-3,-10,7,-6,-2,4,-8,-9,-6,10,-3,9,-10,-10,6,-6,8,-5,-5,-5,5,-10,-8,1,-9,1,8,7,6,1,-1,-2,-10,5,-9,-2,-2,5,-3,-6,-9,-2,5,-7,1,5,-2,10,-4,-9,5,-5,-4,-9,-9,7,1,7,3,7,1,-3,-8,8,7,-5,9,-1,2,-9,-6,1,10,-3,5,6,-3,10,3,3,3,4,8,4,7,3,10,3,5,4,8,-5,-10,-4,10,2,-5,-7,4,-7,5,-6,-5,6,5,-9,9,-5,6,1,-7,1,-9,-7,10,-4,3,9,-7,7,4,-4,-9,-9,8,-4,2,7,4,4,9,6,-8,-1,1,-8,5,5,2,-10,5,-5,7,-8,-9,4,2,1,6,-6,9,9,7,5,-9,2,-9,1,-1,9,-1,8,-3,-3,9,6,-7,-2,-1,6,4,-6,-4,-10,-3,-5,-4,-8,-1,7,-4,8,10,-8,8,2,1,-4,-2,2,-7,-2,9,9,-2,-10,9,-10,9,-9,3,9,-9,10,1,-7,-8,-7,-8,9,-3,10,8,-3,7,3,5,-3,7,6,-7,6,3,-4,-2,-2,-9,-8,-2,5,-7,9,-2,-6,8,-9,-6,-10,-10,9,7,-8,-4,5,-1,5,-9,-10,9,-2,-8,1,5,3,8,-9,1,-1,-6,-1,5,5,-10,-6,10,3,-6,4,-8,9,6,10,7,-4,-6,-2,-1,-8,9,-8,-10,9,-9,-9,9,-2,-10,-6,-4,2,7,2,8], dtype = "int32")#candidate|8811|(1440,)|const|int32
call_8810 = relay.TupleGetItem(func_3682_call(relay.reshape(const_8811.astype('int32'), [1440,])), 0)
call_8812 = relay.TupleGetItem(func_3684_call(relay.reshape(const_8811.astype('int32'), [1440,])), 0)
output = relay.Tuple([call_8802,call_8810,const_8811,])
output2 = relay.Tuple([call_8803,call_8812,const_8811,])
func_8813 = relay.Function([], output)
mod['func_8813'] = func_8813
mod = relay.transform.InferType()(mod)
output = func_8813()
func_8814 = relay.Function([], output)
mutated_mod['func_8814'] = func_8814
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7778_call = mod.get_global_var('func_7778')
func_7779_call = mutated_mod.get_global_var('func_7779')
call_8880 = relay.TupleGetItem(func_7778_call(), 2)
call_8881 = relay.TupleGetItem(func_7779_call(), 2)
uop_8882 = relay.sigmoid(call_8880.astype('float64')) # shape=(1040, 1)
uop_8884 = relay.sigmoid(call_8881.astype('float64')) # shape=(1040, 1)
output = uop_8882
output2 = uop_8884
func_8889 = relay.Function([], output)
mod['func_8889'] = func_8889
mod = relay.transform.InferType()(mod)
output = func_8889()
func_8890 = relay.Function([], output)
mutated_mod['func_8890'] = func_8890
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7724_call = mod.get_global_var('func_7724')
func_7725_call = mutated_mod.get_global_var('func_7725')
call_8891 = relay.TupleGetItem(func_7724_call(), 0)
call_8892 = relay.TupleGetItem(func_7725_call(), 0)
output = relay.Tuple([call_8891,])
output2 = relay.Tuple([call_8892,])
func_8896 = relay.Function([], output)
mod['func_8896'] = func_8896
mod = relay.transform.InferType()(mod)
mutated_mod['func_8896'] = func_8896
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8896_call = mutated_mod.get_global_var('func_8896')
call_8897 = func_8896_call()
output = call_8897
func_8898 = relay.Function([], output)
mutated_mod['func_8898'] = func_8898
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8358_call = mod.get_global_var('func_8358')
func_8359_call = mutated_mod.get_global_var('func_8359')
call_8941 = relay.TupleGetItem(func_8358_call(), 0)
call_8942 = relay.TupleGetItem(func_8359_call(), 0)
output = call_8941
output2 = call_8942
func_8959 = relay.Function([], output)
mod['func_8959'] = func_8959
mod = relay.transform.InferType()(mod)
mutated_mod['func_8959'] = func_8959
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8959_call = mutated_mod.get_global_var('func_8959')
call_8960 = func_8959_call()
output = call_8960
func_8961 = relay.Function([], output)
mutated_mod['func_8961'] = func_8961
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8682_call = mod.get_global_var('func_8682')
func_8683_call = mutated_mod.get_global_var('func_8683')
call_8964 = relay.TupleGetItem(func_8682_call(), 0)
call_8965 = relay.TupleGetItem(func_8683_call(), 0)
func_8506_call = mod.get_global_var('func_8506')
func_8508_call = mutated_mod.get_global_var('func_8508')
var_8970 = relay.var("var_8970", dtype = "int64", shape = (2304,))#candidate|8970|(2304,)|var|int64
call_8969 = relay.TupleGetItem(func_8506_call(relay.reshape(var_8970.astype('int64'), [2304,])), 3)
call_8971 = relay.TupleGetItem(func_8508_call(relay.reshape(var_8970.astype('int64'), [2304,])), 3)
func_8633_call = mod.get_global_var('func_8633')
func_8635_call = mutated_mod.get_global_var('func_8635')
var_8987 = relay.var("var_8987", dtype = "int8", shape = (1, 2730))#candidate|8987|(1, 2730)|var|int8
call_8986 = relay.TupleGetItem(func_8633_call(relay.reshape(var_8987.astype('int8'), [2730,])), 3)
call_8988 = relay.TupleGetItem(func_8635_call(relay.reshape(var_8987.astype('int8'), [2730,])), 3)
var_8989 = relay.var("var_8989", dtype = "int8", shape = (1, 2730))#candidate|8989|(1, 2730)|var|int8
bop_8990 = relay.divide(var_8987.astype('float32'), relay.reshape(var_8989.astype('float32'), relay.shape_of(var_8987))) # shape=(1, 2730)
output = relay.Tuple([call_8964,call_8969,var_8970,call_8986,bop_8990,])
output2 = relay.Tuple([call_8965,call_8971,var_8970,call_8988,bop_8990,])
func_8993 = relay.Function([var_8970,var_8987,var_8989,], output)
mod['func_8993'] = func_8993
mod = relay.transform.InferType()(mod)
mutated_mod['func_8993'] = func_8993
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8993_call = mutated_mod.get_global_var('func_8993')
var_8995 = relay.var("var_8995", dtype = "int64", shape = (2304,))#candidate|8995|(2304,)|var|int64
var_8996 = relay.var("var_8996", dtype = "int8", shape = (1, 2730))#candidate|8996|(1, 2730)|var|int8
var_8997 = relay.var("var_8997", dtype = "int8", shape = (1, 2730))#candidate|8997|(1, 2730)|var|int8
call_8994 = func_8993_call(var_8995,var_8996,var_8997,)
output = call_8994
func_8998 = relay.Function([var_8995,var_8996,var_8997,], output)
mutated_mod['func_8998'] = func_8998
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8297_call = mod.get_global_var('func_8297')
func_8298_call = mutated_mod.get_global_var('func_8298')
call_9046 = relay.TupleGetItem(func_8297_call(), 8)
call_9047 = relay.TupleGetItem(func_8298_call(), 8)
var_9057 = relay.var("var_9057", dtype = "int8", shape = (14, 195))#candidate|9057|(14, 195)|var|int8
bop_9058 = relay.logical_or(call_9046.astype('bool'), relay.reshape(var_9057.astype('bool'), relay.shape_of(call_9046))) # shape=(14, 195)
bop_9061 = relay.logical_or(call_9047.astype('bool'), relay.reshape(var_9057.astype('bool'), relay.shape_of(call_9047))) # shape=(14, 195)
output = bop_9058
output2 = bop_9061
func_9068 = relay.Function([var_9057,], output)
mod['func_9068'] = func_9068
mod = relay.transform.InferType()(mod)
mutated_mod['func_9068'] = func_9068
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9069 = relay.var("var_9069", dtype = "int8", shape = (14, 195))#candidate|9069|(14, 195)|var|int8
func_9068_call = mutated_mod.get_global_var('func_9068')
call_9070 = func_9068_call(var_9069)
output = call_9070
func_9071 = relay.Function([var_9069], output)
mutated_mod['func_9071'] = func_9071
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8297_call = mod.get_global_var('func_8297')
func_8298_call = mutated_mod.get_global_var('func_8298')
call_9075 = relay.TupleGetItem(func_8297_call(), 0)
call_9076 = relay.TupleGetItem(func_8298_call(), 0)
output = relay.Tuple([call_9075,])
output2 = relay.Tuple([call_9076,])
func_9077 = relay.Function([], output)
mod['func_9077'] = func_9077
mod = relay.transform.InferType()(mod)
output = func_9077()
func_9078 = relay.Function([], output)
mutated_mod['func_9078'] = func_9078
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8436_call = mod.get_global_var('func_8436')
func_8438_call = mutated_mod.get_global_var('func_8438')
call_9084 = func_8436_call()
call_9085 = func_8436_call()
func_8297_call = mod.get_global_var('func_8297')
func_8298_call = mutated_mod.get_global_var('func_8298')
call_9089 = relay.TupleGetItem(func_8297_call(), 1)
call_9090 = relay.TupleGetItem(func_8298_call(), 1)
uop_9105 = relay.exp(call_9084.astype('float32')) # shape=(7, 12, 14)
uop_9107 = relay.exp(call_9085.astype('float32')) # shape=(7, 12, 14)
output = relay.Tuple([call_9089,uop_9105,])
output2 = relay.Tuple([call_9090,uop_9107,])
func_9109 = relay.Function([], output)
mod['func_9109'] = func_9109
mod = relay.transform.InferType()(mod)
mutated_mod['func_9109'] = func_9109
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9109_call = mutated_mod.get_global_var('func_9109')
call_9110 = func_9109_call()
output = call_9110
func_9111 = relay.Function([], output)
mutated_mod['func_9111'] = func_9111
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7938_call = mod.get_global_var('func_7938')
func_7940_call = mutated_mod.get_global_var('func_7940')
call_9140 = relay.TupleGetItem(func_7938_call(), 0)
call_9141 = relay.TupleGetItem(func_7940_call(), 0)
output = relay.Tuple([call_9140,])
output2 = relay.Tuple([call_9141,])
func_9162 = relay.Function([], output)
mod['func_9162'] = func_9162
mod = relay.transform.InferType()(mod)
output = func_9162()
func_9163 = relay.Function([], output)
mutated_mod['func_9163'] = func_9163
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7554_call = mod.get_global_var('func_7554')
func_7556_call = mutated_mod.get_global_var('func_7556')
call_9191 = func_7554_call()
call_9192 = func_7554_call()
output = relay.Tuple([call_9191,])
output2 = relay.Tuple([call_9192,])
func_9205 = relay.Function([], output)
mod['func_9205'] = func_9205
mod = relay.transform.InferType()(mod)
mutated_mod['func_9205'] = func_9205
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9205_call = mutated_mod.get_global_var('func_9205')
call_9206 = func_9205_call()
output = call_9206
func_9207 = relay.Function([], output)
mutated_mod['func_9207'] = func_9207
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7938_call = mod.get_global_var('func_7938')
func_7940_call = mutated_mod.get_global_var('func_7940')
call_9243 = relay.TupleGetItem(func_7938_call(), 0)
call_9244 = relay.TupleGetItem(func_7940_call(), 0)
output = relay.Tuple([call_9243,])
output2 = relay.Tuple([call_9244,])
func_9265 = relay.Function([], output)
mod['func_9265'] = func_9265
mod = relay.transform.InferType()(mod)
output = func_9265()
func_9266 = relay.Function([], output)
mutated_mod['func_9266'] = func_9266
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8777_call = mod.get_global_var('func_8777')
func_8779_call = mutated_mod.get_global_var('func_8779')
call_9310 = relay.TupleGetItem(func_8777_call(), 0)
call_9311 = relay.TupleGetItem(func_8779_call(), 0)
output = relay.Tuple([call_9310,])
output2 = relay.Tuple([call_9311,])
func_9323 = relay.Function([], output)
mod['func_9323'] = func_9323
mod = relay.transform.InferType()(mod)
mutated_mod['func_9323'] = func_9323
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9323_call = mutated_mod.get_global_var('func_9323')
call_9324 = func_9323_call()
output = call_9324
func_9325 = relay.Function([], output)
mutated_mod['func_9325'] = func_9325
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7101_call = mod.get_global_var('func_7101')
func_7103_call = mutated_mod.get_global_var('func_7103')
call_9341 = relay.TupleGetItem(func_7101_call(), 1)
call_9342 = relay.TupleGetItem(func_7103_call(), 1)
output = relay.Tuple([call_9341,])
output2 = relay.Tuple([call_9342,])
func_9345 = relay.Function([], output)
mod['func_9345'] = func_9345
mod = relay.transform.InferType()(mod)
output = func_9345()
func_9346 = relay.Function([], output)
mutated_mod['func_9346'] = func_9346
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8889_call = mod.get_global_var('func_8889')
func_8890_call = mutated_mod.get_global_var('func_8890')
call_9376 = func_8889_call()
call_9377 = func_8889_call()
uop_9380 = relay.acosh(call_9376.astype('float32')) # shape=(1040, 1)
uop_9382 = relay.acosh(call_9377.astype('float32')) # shape=(1040, 1)
uop_9391 = relay.log10(call_9376.astype('float64')) # shape=(1040, 1)
uop_9393 = relay.log10(call_9377.astype('float64')) # shape=(1040, 1)
bop_9395 = relay.bitwise_or(uop_9391.astype('int32'), relay.reshape(uop_9380.astype('int32'), relay.shape_of(uop_9391))) # shape=(1040, 1)
bop_9398 = relay.bitwise_or(uop_9393.astype('int32'), relay.reshape(uop_9382.astype('int32'), relay.shape_of(uop_9393))) # shape=(1040, 1)
output = bop_9395
output2 = bop_9398
func_9400 = relay.Function([], output)
mod['func_9400'] = func_9400
mod = relay.transform.InferType()(mod)
output = func_9400()
func_9401 = relay.Function([], output)
mutated_mod['func_9401'] = func_9401
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9463 = relay.var("var_9463", dtype = "float64", shape = (9, 8, 3))#candidate|9463|(9, 8, 3)|var|float64
uop_9464 = relay.log2(var_9463.astype('float64')) # shape=(9, 8, 3)
uop_9488 = relay.sin(uop_9464.astype('float32')) # shape=(9, 8, 3)
uop_9497 = relay.tan(uop_9464.astype('float64')) # shape=(9, 8, 3)
uop_9503 = relay.sqrt(uop_9464.astype('float32')) # shape=(9, 8, 3)
uop_9513 = relay.cosh(var_9463.astype('float32')) # shape=(9, 8, 3)
output = relay.Tuple([uop_9488,uop_9497,uop_9503,uop_9513,])
output2 = relay.Tuple([uop_9488,uop_9497,uop_9503,uop_9513,])
func_9519 = relay.Function([var_9463,], output)
mod['func_9519'] = func_9519
mod = relay.transform.InferType()(mod)
var_9520 = relay.var("var_9520", dtype = "float64", shape = (9, 8, 3))#candidate|9520|(9, 8, 3)|var|float64
output = func_9519(var_9520)
func_9521 = relay.Function([var_9520], output)
mutated_mod['func_9521'] = func_9521
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8436_call = mod.get_global_var('func_8436')
func_8438_call = mutated_mod.get_global_var('func_8438')
call_9602 = func_8436_call()
call_9603 = func_8436_call()
func_5532_call = mod.get_global_var('func_5532')
func_5536_call = mutated_mod.get_global_var('func_5536')
const_9610 = relay.const([[0.402078,2.372934,6.192613,-0.395330,-9.327403,4.560505,-5.910903,0.726224,3.566897,-1.288175,-5.449157,4.216268,-6.955481,9.277331,-7.837145,-5.596142,4.096502,7.381040,2.132195,0.783008,-6.021711,5.535211,-2.848896,9.670287,-9.873140,9.184993,0.411222,2.184391,6.882023,-4.856784,-0.946914,4.469008,-3.348520,0.428480,-5.610316,-4.362507,6.756342,5.263840,-9.576340,-8.405347,2.477168,5.000777,-3.637095,-9.996371,4.961173,8.180532,4.714405,-6.737806,8.309635,-0.709973,-9.643403,3.958469,-2.680674,1.720198,2.546550,8.501688,9.247558,-9.548712,-5.232072,-3.536297,3.968697,7.799228,-6.760503,5.044158,1.791426,-7.714238,-9.418260,-1.277799,-2.213967,4.843488,7.302548,-7.693776,-0.939999,-1.040137,8.684283,-4.915804,-3.131840,-0.381549,3.584135,8.153778,5.310606,4.086283,5.562159,-6.185905,9.691079,9.763393,-8.361313,-9.992014,-1.215155,1.088117,3.435030,2.203403,-3.377624,-4.664317,7.347697,-0.393870,7.837568,-2.493346,7.237785,3.919474,-1.856555,5.174358,-8.267339,5.672340,-8.508326,3.436003,6.828580,-9.103514,-7.009232,6.971797,-0.062674,-5.252330,3.020916,-6.432913,8.188349,-7.760458,-9.450229,-3.656916,5.849187,-0.030443,6.158661,6.013857,-7.047660,-0.837012,-6.680811,-4.838487,1.045255,0.207610,6.124669,-9.932204,5.128453,-8.984192,-2.590651,-2.490781,6.718267,-1.825565,-3.683547,3.483729,5.586395,4.002301,7.274171,-7.691408,-1.869197,-9.461881,3.044917,-1.967376,4.449165,-5.536417,-4.034845,0.759943,7.077591,-3.303008,7.884543,-7.035676,0.515139,-0.343701,5.625594,8.196078,-1.658178,5.093226,-5.217244,-4.428174,2.776419,-5.539358,-4.361780,6.832928,9.019388,3.612945,8.124813,9.287554,-7.948234,7.057129,-7.148719,5.875042,-9.485594,-9.954251,6.040622,-6.005257,6.945871,-8.481191,-6.316169,-4.862195,0.463541,-9.919945,8.694824,5.937122,-1.548511,-4.037816,9.110113,7.187332,-4.154862,1.891944,6.830531,-2.800603,-8.896864,-7.853080,-5.499061,-3.079224,-8.192799,-4.082473,-9.460709,3.648540,7.965726,9.035180,-0.888503,-3.442926,-1.757793,-9.490945,-8.371194,-8.656977,6.489649,4.544860,6.343237,9.068354,4.170125,-1.935086,0.808636,-8.075287,0.917981,5.434524,-3.263655,-3.886652,2.898535,-3.445960,-6.517950,-5.457936,7.594756,8.334349,1.908840,6.324382,5.842855,-9.720994,9.367912,2.250142,-6.259637,-0.384972,-7.866267,3.072988,6.284782,7.206072,4.516499,5.139067,-1.728356,8.040639,4.776364,-6.826362,-4.505420,8.880791,7.360495,-6.374878,-3.727448,-4.249050,-3.057807,-9.083631,-6.201710,7.232898,-9.427345,-3.156815,6.079238,-8.829943,-2.251196,9.267245,-7.201490,6.779727,1.945166,7.496345,-9.706083,8.930414,-9.642180,9.303034,1.082850,-8.160318,6.666747,-1.725890,-1.532387,-6.913203,8.683058,-6.151981,-0.908073,0.316157,6.771737,4.389467,9.896362,-1.687343,6.565134,-7.111425,-5.163727,-0.097663,4.245133,5.556406,2.797816,7.294176,1.415896,-1.850753,9.876754,-4.751766,7.084460,-6.635502,-9.199841,-0.798905,-9.434239,-6.452081,8.101418,0.239488,-6.341762,-9.903300,-2.164132,-8.193608,9.168469,5.509016,0.295417,-3.983141,-1.269344,5.771714,2.490857,-9.813783,-7.933287,3.924378,8.382467,-5.461554,5.046603,1.823660,-6.217439,8.290967,5.097439,-6.738220,-4.213158,4.109173,-2.595384,4.298782,-5.688953,2.298047,5.477261,-0.967629,3.037686,-0.458400,8.380971,-3.181026,7.838339,-5.178988,9.244451,3.573179,7.714741,-3.693094,8.593715,9.168795,0.176199,-8.375719,7.885828,6.588272,-1.280804,6.715546,2.999185,2.816661,-2.354550,2.975431,9.131708,3.555791,7.389570,-0.623250,-4.797110,-5.066484,-5.648540,-3.930912,0.588863,3.189960,4.679758,-2.560030,-3.286440,5.594525,7.801292,-0.126267,-7.728860,4.118246,1.587029,-7.106461,2.919889,9.385500,-0.036562,-2.965674,2.806886,6.607794,-1.603236,-8.402226,5.908091,3.390449,-7.864074,1.142492,-0.121858,1.580691,-0.441629,6.244429,-6.026643,-7.217121,-1.208644,8.275987,-1.408679,-6.841166,-7.867922,5.782394]], dtype = "float32")#candidate|9610|(1, 400)|const|float32
call_9609 = relay.TupleGetItem(func_5532_call(relay.reshape(const_9610.astype('float32'), [10, 5, 8]), relay.reshape(const_9610.astype('float32'), [10, 5, 8]), ), 0)
call_9611 = relay.TupleGetItem(func_5536_call(relay.reshape(const_9610.astype('float32'), [10, 5, 8]), relay.reshape(const_9610.astype('float32'), [10, 5, 8]), ), 0)
output = relay.Tuple([call_9602,call_9609,const_9610,])
output2 = relay.Tuple([call_9603,call_9611,const_9610,])
func_9619 = relay.Function([], output)
mod['func_9619'] = func_9619
mod = relay.transform.InferType()(mod)
output = func_9619()
func_9620 = relay.Function([], output)
mutated_mod['func_9620'] = func_9620
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9638 = relay.var("var_9638", dtype = "float32", shape = (7, 1, 12))#candidate|9638|(7, 1, 12)|var|float32
uop_9639 = relay.cos(var_9638.astype('float32')) # shape=(7, 1, 12)
func_7192_call = mod.get_global_var('func_7192')
func_7194_call = mutated_mod.get_global_var('func_7194')
var_9666 = relay.var("var_9666", dtype = "int8", shape = ())#candidate|9666|()|var|int8
call_9665 = relay.TupleGetItem(func_7192_call(relay.reshape(var_9666.astype('int8'), [])), 1)
call_9667 = relay.TupleGetItem(func_7194_call(relay.reshape(var_9666.astype('int8'), [])), 1)
output = relay.Tuple([uop_9639,call_9665,var_9666,])
output2 = relay.Tuple([uop_9639,call_9667,var_9666,])
func_9669 = relay.Function([var_9638,var_9666,], output)
mod['func_9669'] = func_9669
mod = relay.transform.InferType()(mod)
var_9670 = relay.var("var_9670", dtype = "float32", shape = (7, 1, 12))#candidate|9670|(7, 1, 12)|var|float32
var_9671 = relay.var("var_9671", dtype = "int8", shape = ())#candidate|9671|()|var|int8
output = func_9669(var_9670,var_9671,)
func_9672 = relay.Function([var_9670,var_9671,], output)
mutated_mod['func_9672'] = func_9672
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9265_call = mod.get_global_var('func_9265')
func_9266_call = mutated_mod.get_global_var('func_9266')
call_9690 = relay.TupleGetItem(func_9265_call(), 0)
call_9691 = relay.TupleGetItem(func_9266_call(), 0)
func_825_call = mod.get_global_var('func_825')
func_828_call = mutated_mod.get_global_var('func_828')
var_9738 = relay.var("var_9738", dtype = "float32", shape = (468,))#candidate|9738|(468,)|var|float32
const_9739 = relay.const(-9, dtype = "int64")#candidate|9739|()|const|int64
call_9737 = relay.TupleGetItem(func_825_call(relay.reshape(var_9738.astype('float32'), [9, 4, 13]), relay.reshape(const_9739.astype('int64'), []), ), 3)
call_9740 = relay.TupleGetItem(func_828_call(relay.reshape(var_9738.astype('float32'), [9, 4, 13]), relay.reshape(const_9739.astype('int64'), []), ), 3)
func_3682_call = mod.get_global_var('func_3682')
func_3684_call = mutated_mod.get_global_var('func_3684')
const_9744 = relay.const([[6,7,3,-4,-10,-7,7,-2,-10,10,3,-3,-8,-3,7,-5,9,8,3,7,1,4,5,-2,2,8,-2,4,10,-10,-3,1,-8,3,1,7,-3,9,6,10,5,-3,9,-4,-5,7,9,1,6,-1,6,-8,8,5,-9,3,-5,9,-4,-2,-9,-10,-6,8,-8,9,-8,3,2,-1,4,-7,10,2,10,6,4,10,8,-2,-10,8,-7,3,8,-2,-7,3,4,-3,3,4,5,9,-5,-8,1,-2,-9,-8,8,-1,-9,-4,10,-7,-5,10,6,-3,-10,5,-9,10,1,-4,9,6,10,9,5,2,-9,-2,-4,8,-8,-7,-10,-6,6,10,5,-1,5,-4,-10,-2,1,-5,-3,-6,8,9],[-10,-8,2,2,-3,-2,-7,-9,-3,7,9,8,7,-2,-7,10,5,-6,8,-6,-4,-9,7,9,3,5,-8,-3,-4,7,-7,3,-8,10,-10,5,7,7,6,-3,10,10,-8,2,-9,7,9,-7,-10,1,3,4,-3,-3,6,5,-3,-5,-7,7,7,1,6,1,5,6,9,8,-2,1,7,6,-3,3,10,-6,-3,-3,5,3,-7,7,-2,9,6,-5,-6,-2,-2,8,4,8,-3,4,-4,-7,9,-8,1,-8,7,-1,-2,3,10,7,5,1,4,-5,4,9,10,-6,-7,1,8,9,6,6,-1,-10,-6,-6,6,-9,7,-6,9,9,8,10,-9,6,10,1,-2,-10,10,1,9,-8,9,-3],[-8,4,10,10,4,-5,5,-6,7,-7,3,-4,-7,-1,6,7,-6,-10,7,-6,-5,5,-8,-8,6,1,3,-2,-6,1,6,-8,10,-9,-5,10,-7,-1,-6,10,-6,1,-6,4,-7,6,4,6,-9,5,-9,7,1,-10,8,-9,1,-8,5,1,-8,7,-10,-5,7,6,-4,1,10,2,-3,4,3,1,5,-1,-8,4,1,-8,9,4,6,1,-9,5,6,-6,-3,-6,-8,3,5,-5,-5,7,-8,9,8,-9,1,-9,-5,-5,-1,-9,9,-8,-9,3,7,-10,-10,-10,-7,5,4,6,-8,-8,-3,9,-10,8,-1,3,-10,-4,2,-9,2,-8,8,6,4,-5,2,10,-3,9,-9,2,7,-10],[-10,7,-4,8,8,10,-9,-10,-10,-3,7,5,-8,7,-10,4,7,2,6,-5,-6,-6,-9,8,-5,2,-4,-9,-3,8,5,-5,-1,8,-9,-2,8,-1,-2,-8,-1,10,5,-8,10,-4,-7,-1,-6,-6,2,1,5,8,-3,6,-5,9,-10,10,4,6,1,-10,4,1,3,5,3,7,10,-8,-2,4,-6,1,-8,-1,-2,-5,6,-2,5,-9,1,-4,9,-5,-1,-2,-5,10,10,4,2,-10,-5,-1,2,-1,-8,-3,9,8,8,10,5,-9,-1,8,-2,4,-1,-10,-7,-7,7,1,-9,-7,-3,2,-7,4,6,1,-2,-7,-10,-7,9,-1,3,4,3,1,-8,-5,-6,3,10,-9,-9,-5],[-3,-7,4,1,-9,9,6,-9,3,-9,2,-10,-6,-5,3,-3,2,-9,7,6,-2,-10,-7,3,5,-10,6,9,6,6,-6,6,-8,-6,6,2,1,8,-3,9,-5,-6,10,2,9,-7,-6,3,-9,-10,3,3,-6,-3,2,-8,2,7,-9,-9,-6,3,1,-5,-7,5,8,5,1,-2,1,-1,4,-6,-6,1,-1,-1,10,-3,4,8,-10,-4,10,-3,6,3,-1,-2,4,-6,-10,7,6,9,-10,1,-10,8,-1,-9,6,-10,3,-3,-7,-9,-7,-7,6,4,-2,5,-8,-2,-5,-9,-4,-7,10,1,-8,-2,-1,-9,-4,-5,6,10,3,6,-4,-9,3,-5,-4,10,-1,7,3,8,-9,-6],[1,8,10,3,8,-2,8,3,6,-5,6,-8,10,-8,9,1,-2,7,2,3,10,10,-3,-9,6,7,-6,3,-2,-4,-7,-4,-3,-8,-9,-6,8,-6,-10,-1,8,2,-4,-1,-6,-7,9,1,-10,-8,3,7,-3,4,7,4,5,3,-1,-4,-9,-1,2,-2,-2,-3,-6,6,-3,-5,-8,-10,-4,-2,9,-1,7,-9,-5,-5,-3,2,7,1,10,2,4,1,-7,3,9,4,-10,-8,6,-2,10,-6,-3,8,-4,1,4,-8,-7,5,-8,1,-4,3,-2,6,-10,-8,-3,6,9,-5,-1,4,-7,3,9,-3,5,-2,-2,7,-5,5,-3,5,-2,5,-5,-3,-9,10,-2,-1,-1,-2,-5,7],[7,-8,-6,-4,-3,-2,-9,3,-1,6,-5,8,3,-1,2,8,1,-10,1,3,-3,4,-10,-10,9,-6,-2,-10,-6,-3,10,-6,9,6,-9,4,6,6,5,8,-1,-8,-9,-7,-3,3,-4,-2,6,5,-1,-7,-8,-2,8,-9,-6,-1,-9,-2,-1,-4,4,9,8,-5,-4,-3,-7,7,8,-6,5,1,-10,-6,8,5,8,3,-8,4,-5,6,3,-9,9,7,-7,-10,3,-7,6,4,5,-9,-10,-7,-9,6,6,4,5,1,-10,-6,-7,-4,4,-8,-9,-4,-1,3,5,3,-7,7,8,3,-1,3,-1,-2,6,5,-8,-4,1,-8,-9,8,-5,9,2,-3,8,-2,4,-5,3,-6,1,9],[-1,10,5,-7,2,-8,-5,-9,7,-3,5,-1,-10,-1,-1,6,-7,-2,-4,-5,-3,3,5,3,5,-5,6,1,5,8,2,7,-10,-2,-8,-3,1,8,-9,-10,-7,-7,10,-10,1,10,1,3,-6,8,-3,6,-6,-9,-5,1,1,6,9,-6,-3,-6,-6,8,5,8,6,1,8,8,9,7,9,-3,9,-1,-10,9,-5,7,-2,7,9,-9,-7,10,6,8,-3,6,-4,6,-3,9,-3,-7,3,2,-1,1,-10,6,10,-1,-8,-7,-3,6,10,-5,6,-6,7,3,3,-8,6,-8,9,-3,8,9,5,-9,-3,-5,-10,7,3,7,-5,6,10,-2,-3,4,-7,5,10,-4,-10,-1,-2,-8],[-10,8,2,1,-9,-9,-9,6,-7,7,-4,-2,2,5,-4,8,9,-1,3,3,8,4,6,-3,-10,-2,-3,-9,8,8,8,-5,-3,8,-10,-6,2,6,-2,2,-1,-4,-9,-1,8,6,-5,-1,-9,4,9,-8,4,8,4,5,4,-4,-6,-7,-4,8,-6,-10,9,4,8,8,7,7,6,9,-5,1,5,4,3,-1,-5,3,6,2,1,-5,8,10,-6,-3,9,2,4,-5,10,-5,8,-8,9,-10,2,9,-9,-5,9,6,2,3,-4,2,-6,-8,8,1,-6,8,-6,9,7,10,1,-3,6,8,8,-3,-8,-9,4,6,10,-9,2,-4,1,-6,-2,5,6,-7,5,9,10,2,9,-6],[-9,-7,-3,1,-5,-6,7,-4,-5,7,2,3,-7,7,-2,-7,10,-3,5,6,-2,-6,6,-2,-10,10,7,3,2,-10,-3,-5,-10,-5,-4,-2,5,-5,-7,-3,6,-10,-1,-8,3,5,-4,-10,-1,-9,7,-3,-1,-7,-7,-7,4,-7,2,-5,-3,2,3,4,-8,2,6,2,-6,-8,-7,-6,-6,-7,-8,3,5,1,-9,3,-9,5,-2,5,-5,-1,-1,5,-9,4,-5,3,4,9,10,-3,8,-6,-6,-8,-5,-5,-5,-2,3,4,-6,-9,2,6,-9,-10,-8,7,7,-4,4,7,-10,-4,8,10,-6,6,6,-9,-2,3,-7,-5,8,5,9,-9,-4,1,-2,7,3,-5,5,5,7,9]], dtype = "int32")#candidate|9744|(10, 144)|const|int32
call_9743 = relay.TupleGetItem(func_3682_call(relay.reshape(const_9744.astype('int32'), [1440,])), 0)
call_9745 = relay.TupleGetItem(func_3684_call(relay.reshape(const_9744.astype('int32'), [1440,])), 0)
func_9345_call = mod.get_global_var('func_9345')
func_9346_call = mutated_mod.get_global_var('func_9346')
call_9751 = relay.TupleGetItem(func_9345_call(), 0)
call_9752 = relay.TupleGetItem(func_9346_call(), 0)
output = relay.Tuple([call_9690,call_9737,var_9738,const_9739,call_9743,const_9744,call_9751,])
output2 = relay.Tuple([call_9691,call_9740,var_9738,const_9739,call_9745,const_9744,call_9752,])
func_9764 = relay.Function([var_9738,], output)
mod['func_9764'] = func_9764
mod = relay.transform.InferType()(mod)
mutated_mod['func_9764'] = func_9764
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9765 = relay.var("var_9765", dtype = "float32", shape = (468,))#candidate|9765|(468,)|var|float32
func_9764_call = mutated_mod.get_global_var('func_9764')
call_9766 = func_9764_call(var_9765)
output = call_9766
func_9767 = relay.Function([var_9765], output)
mutated_mod['func_9767'] = func_9767
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7590_call = mod.get_global_var('func_7590')
func_7592_call = mutated_mod.get_global_var('func_7592')
call_9774 = func_7590_call()
call_9775 = func_7590_call()
uop_9778 = relay.atanh(call_9774.astype('float32')) # shape=(3, 6, 1)
uop_9780 = relay.atanh(call_9775.astype('float32')) # shape=(3, 6, 1)
output = relay.Tuple([uop_9778,])
output2 = relay.Tuple([uop_9780,])
func_9787 = relay.Function([], output)
mod['func_9787'] = func_9787
mod = relay.transform.InferType()(mod)
mutated_mod['func_9787'] = func_9787
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9787_call = mutated_mod.get_global_var('func_9787')
call_9788 = func_9787_call()
output = call_9788
func_9789 = relay.Function([], output)
mutated_mod['func_9789'] = func_9789
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9345_call = mod.get_global_var('func_9345')
func_9346_call = mutated_mod.get_global_var('func_9346')
call_9795 = relay.TupleGetItem(func_9345_call(), 0)
call_9796 = relay.TupleGetItem(func_9346_call(), 0)
output = relay.Tuple([call_9795,])
output2 = relay.Tuple([call_9796,])
func_9816 = relay.Function([], output)
mod['func_9816'] = func_9816
mod = relay.transform.InferType()(mod)
output = func_9816()
func_9817 = relay.Function([], output)
mutated_mod['func_9817'] = func_9817
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8297_call = mod.get_global_var('func_8297')
func_8298_call = mutated_mod.get_global_var('func_8298')
call_9824 = relay.TupleGetItem(func_8297_call(), 9)
call_9825 = relay.TupleGetItem(func_8298_call(), 9)
output = relay.Tuple([call_9824,])
output2 = relay.Tuple([call_9825,])
func_9830 = relay.Function([], output)
mod['func_9830'] = func_9830
mod = relay.transform.InferType()(mod)
output = func_9830()
func_9831 = relay.Function([], output)
mutated_mod['func_9831'] = func_9831
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9830_call = mod.get_global_var('func_9830')
func_9831_call = mutated_mod.get_global_var('func_9831')
call_9834 = relay.TupleGetItem(func_9830_call(), 0)
call_9835 = relay.TupleGetItem(func_9831_call(), 0)
func_9068_call = mod.get_global_var('func_9068')
func_9071_call = mutated_mod.get_global_var('func_9071')
var_9837 = relay.var("var_9837", dtype = "int8", shape = (2730,))#candidate|9837|(2730,)|var|int8
call_9836 = func_9068_call(relay.reshape(var_9837.astype('int8'), [14, 195]))
call_9838 = func_9068_call(relay.reshape(var_9837.astype('int8'), [14, 195]))
output = relay.Tuple([call_9834,call_9836,var_9837,])
output2 = relay.Tuple([call_9835,call_9838,var_9837,])
func_9849 = relay.Function([var_9837,], output)
mod['func_9849'] = func_9849
mod = relay.transform.InferType()(mod)
var_9850 = relay.var("var_9850", dtype = "int8", shape = (2730,))#candidate|9850|(2730,)|var|int8
output = func_9849(var_9850)
func_9851 = relay.Function([var_9850], output)
mutated_mod['func_9851'] = func_9851
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9323_call = mod.get_global_var('func_9323')
func_9325_call = mutated_mod.get_global_var('func_9325')
call_9886 = relay.TupleGetItem(func_9323_call(), 0)
call_9887 = relay.TupleGetItem(func_9325_call(), 0)
func_6212_call = mod.get_global_var('func_6212')
func_6215_call = mutated_mod.get_global_var('func_6215')
var_9890 = relay.var("var_9890", dtype = "int64", shape = (1040,))#candidate|9890|(1040,)|var|int64
call_9889 = relay.TupleGetItem(func_6212_call(relay.reshape(var_9890.astype('int64'), [8, 10, 13])), 1)
call_9891 = relay.TupleGetItem(func_6215_call(relay.reshape(var_9890.astype('int64'), [8, 10, 13])), 1)
output = relay.Tuple([call_9886,call_9889,var_9890,])
output2 = relay.Tuple([call_9887,call_9891,var_9890,])
func_9903 = relay.Function([var_9890,], output)
mod['func_9903'] = func_9903
mod = relay.transform.InferType()(mod)
var_9904 = relay.var("var_9904", dtype = "int64", shape = (1040,))#candidate|9904|(1040,)|var|int64
output = func_9903(var_9904)
func_9905 = relay.Function([var_9904], output)
mutated_mod['func_9905'] = func_9905
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9077_call = mod.get_global_var('func_9077')
func_9078_call = mutated_mod.get_global_var('func_9078')
call_10002 = relay.TupleGetItem(func_9077_call(), 0)
call_10003 = relay.TupleGetItem(func_9078_call(), 0)
func_7369_call = mod.get_global_var('func_7369')
func_7370_call = mutated_mod.get_global_var('func_7370')
call_10010 = relay.TupleGetItem(func_7369_call(), 0)
call_10011 = relay.TupleGetItem(func_7370_call(), 0)
output = relay.Tuple([call_10002,call_10010,])
output2 = relay.Tuple([call_10003,call_10011,])
func_10014 = relay.Function([], output)
mod['func_10014'] = func_10014
mod = relay.transform.InferType()(mod)
output = func_10014()
func_10015 = relay.Function([], output)
mutated_mod['func_10015'] = func_10015
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9619_call = mod.get_global_var('func_9619')
func_9620_call = mutated_mod.get_global_var('func_9620')
call_10041 = relay.TupleGetItem(func_9619_call(), 1)
call_10042 = relay.TupleGetItem(func_9620_call(), 1)
output = relay.Tuple([call_10041,])
output2 = relay.Tuple([call_10042,])
func_10073 = relay.Function([], output)
mod['func_10073'] = func_10073
mod = relay.transform.InferType()(mod)
output = func_10073()
func_10074 = relay.Function([], output)
mutated_mod['func_10074'] = func_10074
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8682_call = mod.get_global_var('func_8682')
func_8683_call = mutated_mod.get_global_var('func_8683')
call_10105 = relay.TupleGetItem(func_8682_call(), 0)
call_10106 = relay.TupleGetItem(func_8683_call(), 0)
func_1424_call = mod.get_global_var('func_1424')
func_1427_call = mutated_mod.get_global_var('func_1427')
const_10115 = relay.const(-10, dtype = "int32")#candidate|10115|()|const|int32
var_10116 = relay.var("var_10116", dtype = "int32", shape = (1400,))#candidate|10116|(1400,)|var|int32
call_10114 = relay.TupleGetItem(func_1424_call(relay.reshape(const_10115.astype('int32'), []), relay.reshape(var_10116.astype('int32'), [10, 10, 14]), ), 0)
call_10117 = relay.TupleGetItem(func_1427_call(relay.reshape(const_10115.astype('int32'), []), relay.reshape(var_10116.astype('int32'), [10, 10, 14]), ), 0)
output = relay.Tuple([call_10105,call_10114,const_10115,var_10116,])
output2 = relay.Tuple([call_10106,call_10117,const_10115,var_10116,])
func_10142 = relay.Function([var_10116,], output)
mod['func_10142'] = func_10142
mod = relay.transform.InferType()(mod)
var_10143 = relay.var("var_10143", dtype = "int32", shape = (1400,))#candidate|10143|(1400,)|var|int32
output = func_10142(var_10143)
func_10144 = relay.Function([var_10143], output)
mutated_mod['func_10144'] = func_10144
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7554_call = mod.get_global_var('func_7554')
func_7556_call = mutated_mod.get_global_var('func_7556')
call_10183 = func_7554_call()
call_10184 = func_7554_call()
func_8326_call = mod.get_global_var('func_8326')
func_8329_call = mutated_mod.get_global_var('func_8329')
const_10186 = relay.const([-5,-10,-3,1,-10,7,-6,4,10,-10,10,7,10,9,4,3,-10,-6,-9,7,3,-7,-4,2,-8,-4,2,-8,-7,2,-8,-9,-9,5,3,5,-5,7,-7,5,1,6,1,10,2,9,6,-10,4,-2,5,-7,4,-2,-2,4,6,-9,-3,-7,10,5,-4,2,10,9,1,-6,9,-6,4,-4,-2,-9,1,-2,-10,8,3,3,4,-7,-7,10,10,5,-7,-6,4,-4,9,-8,2,-4,4,6,-9,-2,7,-2,-9,-3,-8,5,-4,6,2,2,-8,9,-4,-1,-10,-9,7,6,-8,4,9,5,6,-7,-5,-4,-5,-4,-10,4,-10,-8,4,-4,-6,6,6,9,5,2,-4,3,-1,-10,4,10,-7,-10,6,-1,10,8,-1,2,10,5,2,3,5,-2,-7,10,3,-3,3,1,-3,1,-5,-9,-9,-9,10,-2,-7,-3,-9,10,-2,10,9,9,2,8,-5,2,-1,4,-5,8,1,8,-4,-9,-3,4,-2,-6,4,-10,10,4,-3,5,-3,9,4,-3,8,-9,-2,-3,-7,-1,-10,2,4,-1,2,-4,9,-8,-3,-5,4,-1,6,-3,2,4,4,2,-9,5,-1,6,-4,-2,7,7,-1,8,-2,-10,4,8,7,-5,5,8,9,-3,-10,8,-4,7,-5,1,-5,-2,5,6,-10,-8,9,10,-10,8,9,7,3,9,10,-5,-10,-5,-7,-7,-2,-3,-1,-8,5,2,6,-9,5,8,7,2,2,-2,-6,7,6,-10,10,-9,-6,3,2,2,8,-5,-5,2,-4,-6,5,-10,-1,7,8,10,-9,-7,-3,-2,-1,5,6,1,6,-2,-1,2,-5,-5,7,9,6,-10,-5,1,-9,-1,-6,5,-2,-4,1,2,7,9,3,-1,-3,10,-3,-5,-7,-7,1,-8,-1,3,-8,-8,-4,-8,-4,-8,2,-5,10,7,-6,-2,-6,-9,3,-1,-9,-6,7,-10,5,-7,7,-1,-2,4,-3,-9,9,8,-10,-2,7,1,-2,-4,-10,-3,3,-6,2,-6,-8,-6,3,-8,-2,-1,6,4,3,-4,-10,-10,1,-1,5,8,2,-2,-7,-7,1,-7,-8,-7,-8,3,-8,-3,10,1,-9,1,-4,-6,3,7,9,-5,4,7,-2,2,-3,10,6,1,2,-9,-4,5,-10,3,8,-8,9,6,6,-3,10,-4,-7,-6,-4,-5,-1,8,-3,-1,-9,3,4,3,-7,1,-2,-6,8,5,-6,-4,1,8,-3,6,8,1,-1,2,-1,-5,-7,-9,2,9,-6,-5,-5,4,-2,9,2,-3,-2,-10,9,-5,4,-1,10,4,-5,7,-2,7,3,-3,3,7,3,8,3,-6,7,-3,9,7,6,3,4,1,3,-2,10,-2,7,4,-3,-6,8,-9,9,-1,9,3,4,-9,-8,3,-10,-4,7,6,-8,2,4,-3,7,-9,9,-10,-6,10,-9,5,-8,-4,-6,-4,-5,-10,-8,-1,8,3,-2,10,1,-5,3,-8,10,7,-4,-8,-7,-9,3,2,-10,1,-8,-3,3,9,-7,-8,-1,-10,-5,-6,-1,7,-5,-7,6,8,-3,2,6,-1,-8,-1,-3,4,1,8,4,-8,-6,3,-5,7,1,-3,3,-1,2,-10,3,2,-5,-8,8,8,-2,-10,-4,-6,-6,-2,-2,10,5,10,-5,3,-5,-8,8,-10,7,-9,5,-5,-4,-10,10,-4,-1,4,-7,5,-10,6,9,10,6,-8,-7,-1,-10,1,2,-4,8,-8,-4,8,6,-2,1,-10,3,5,-10,5,1,9,-9,-8,-10,-3,-1,-8,6,1,-6,-4,10,-1,8,-10,9,-2,-4,-7,-9,1,-3,7,1,-9,-1,-5,2,1,1,-1,-3,-1,5,1,8,4,-3,3,10,-2,-2,-10,-5,6,-2,-8,-10,-2,-7,-1,-7,8,-7,-3,-2,-6,1,9,-8,-4,2,7,-1,8,-4,-6,-5,2,-5,9,-1,2,-4,10,9,-2,3,4,-10,3,3,-6,4,-10,-4,-8,7,-7,-4,1,-8,-4,-4,-7,3,10,-1,-6,-8,-6,7,-7,8,3,10,5,9,-3,8,-9,1,-8,-10,7,-1,10,1,-2,1,8,1,1,3,-7,3,-3,-9,-7,5,7,-9,6,4,6,7,-7,9,2,-2,-4,-7,9,8,-5,8,-3,-8,-6,8,8,-9,-6,2,2,-5,7,3,-7,10,6,-3,8,9,-6,7,2,8,4,-6,-4,-1,4,-6,7,-1,7,-3,7,-6,-8,-8,9,-10,8,7,8,2,6,-1,6,-7,7,-6,3,-9,5,3,5,-6,9,4,5,-7,6,3,1,-2,9,5,2,-3,5,-10,9,-5,1,-8,-7,-5,-5,2,-8,6,-4,1,9,2,2,-4,10,-1,-1,9,-6,-1,-5,-6,-9,2,5,9,9,-8,5,-4,-3,10,-6,2,-3,10,5,-1,-10,10,-10,3,-2,10,5,6,1,-6,3,6,2,-4,-3,3,-1,3,4,1,-9,5,7,3,-7,4,8,6,7,7,6,-7,3,-8,-8,-4,10,-10,-3,4,4,10,7,2,-7,-5,-6,-1,4,9,6,8,5,10,3,-9,-3,8,6,-5,-8,-7,-5,-5,-6,1,-8,-8,7,2,-4,-6,4,7,6,5,4,-8,10,8,-10,2,7,2,7,-5,-8,10,-7,-2,-8,-8,-8,-1,-4,8,9,-1,-9,-4,10,9,-10,-8,5,3,6,8,-10,4,-2,-5,2,9,2,10,-3,-7,-10,-2,-6,2,6,4,1,-7,10,-5,-1,-6,8,-4,6,3,-10,-1,-10,6,3,4,-10,8,-5,4,7,-3,-7,5,-10,-9,3,-7,-3,1,-5,-3,-5,4,-5,-8,-2,9,-7,3,1,2,-2,-7,3,4,-10,-2,-9,7,-7,-8,5,8,-10,-3,-1,-6,-3,-9,-10,2,-1,7,3,3,8,-8,-9,-8,5,3,-6,10,-2,6,3,6,-4,-3,-6,4,-10,-8,9,1,7,2,2,3,-3,10,6,-8,-8,5,9,-9,-4,-9,4,8,3,5,4,-1,-6,10,4,2,1,7,9,-9,2,-9,-8,-10,-9,-6,2,9,-6,-9,1,4,1,3,5,4,-10,6,1,8,-2,4,-10,3,4,-8,-3,8,-4,-5,-3,-8,3,-2,1,-6,-4,6,-3,-2,1,3,-4,10,-10,-7,-4,-7,-1,1,8,-5,-8,-6,2,-10,-10,8,2,10,-3,-6,-1,5,-1,-4,-6,1,1,-4,7,-5,7,-9,-3,2,5,4,2,-8,8,3,-10,-7,-4,-6,-7,6,-4,2,5,3,1,-7,-1,-5,6,4,-2,9,-3,5,-5,3,-7,9,6,-3,1,9,5,-10,2,9,6,10,-4,-9,-7,10,-7,5,9,2,7,4,7,-3,10,7,-9,-7,-1,3,1,1,10,-1,5,1,-7,4,-8,7,8,-4,-8,-1,7,6,-5,6,-4,-4,-10,-8,9,5,8,5,-3,-2,-2,-1,-7,7,-3,-7,9,5,-8,10,-5,-7,4,-7,-5,-9,4,-5,8,-4,6,9,5,-7,-5,2,-2,2,-3,5,2,2,-6,6,1,-7,3,2,-10,-1,-8,6,4,-7,9,-2,10,6,2,-1,3,-10,6,4,-1,-10,10,10,-3,8,3,-2,7,-10,-9,-4,3,-7,-5,2,8,6,5,9,-7,10,10,-4,8,-7,-6,-9,4,5,-9,-7,8,-2,-1,3,-1,-7,-2,9,4,-9,9,-9,-4,-4,3,9,-5,4,-3,4,-9,6,-10,3,10,-4,10,4,8,-6,-9,2,-5,2,5,-3,-4,8,-3,-8,5,-4,5,-10,5,-6,2,-8,8,6,-5,10,7,5,-10,-2,5,1,-3,-5,-6,1,-8,-6,1,10,10,-7,-7,-6,-7,2,-6,4,-2,8,-9,-8,9,3,-6,8,-4,-5,-9,-8,1,8,10,7,-10,-2,3,8,-5,-6,6,9,10,1,-6,4,6,5,4,8,8,-5,-1,4,3,-7,3,9,9,-1,-6,2,-8,9,-10,8,-6,-10,-3,3,6,5,5,5,1,-8,-2,2,-9,4,8,9,2,-3,8,10,-5,5,8,-3,-5,-9,-3,-7,-10,4,-2,3,4,10,9,8,-5,-3,1,4,-9,5,2,6,4,1,3,-9,-8,-9,-10,-1,9,10,2,-8,-4,4,-4,9,8,-3,4,8,-2,10,-3,9,-7,-2,2,1,-2,6,-5,5,7,-6,1,-4,2,-6,-7,7,-7,-4,-10,7,-1,-9,9,4,1,6,4,6,6,-1,1,8,8,7,8,-1,8,-7,-5,1,-1,-7,-9,-8,-6,-7,-8,5,6,5,7,-4,9,9,2,-9,1,7,10,-4,-6,-5,7,-10,1,8,5,-2,3,6,3,10,1,3,-3,-10,-9,3,5,8,1,6,10,-8,-9,-10,-2,-8,6,-6,8,7,-1,3,4,-3,-9,-8,-7,2,5,-10,-2,1,10,8,5,9,-6,3,-4,-2,5,4,10,-8,9,1,-8,1,10,-10,-7,-1,9,-2,2,8,7,9,-7,10,7,-9,-4,3,-2,-10,-1,-3,-7,-5,-10,-4,4,-4,-2,-9,8,4,-10,7,-1,4,-8,-2,3,-1,10,-2,3,-9,10,6,8,1,8,-10,3,-8,-1,5,8,9,-5,4,6,-3,-3,-6,8,7,-3,4,2,-8,-4,9,3,2,8,8,-1,-10,-1,-3,2,-4,10,-3,-1,9,8,-9,-7,-10,7,9,-10,-2,5,-9,-9,4,-2,6,-1,-9,3,1,9,5,1,5,2,2,5,4,4,-3,-4,10,-4,-4,8,-8,-7,4,6,-9,7,6,1,-5,-6,3,-9,-7,5,9,7,10,-2,-3,-4,-7,-4,-2,-10,1,-5,-8,-9,-7,-6,-8,6,10,4,4,-6,10,5,4,-9,3,-1,-8,8,7,-2,9,-6,-5,4,10,-2,1,-2,-3,4,-5,-9,-7,8,2,-2,-9,-2,9,-4,8,-9,5,6,10,-8,-4,8,3,-7,8,-6,8,-3,-5,-7,-5,2,8,2,9,-5,-6,-4,10,3,-3,-7,8,7,9,6,10,5,-7,8,-6,9,-5,-2,8,-5,4,-1,3,6,2,5,-2,-2,9,5,10,-9,10,-1,7,-7,-7,-5,-6,2,3,-2,10,-5,1,-6,5,9,7,2,-6,-6,9,5,2,-5,-5,-1,-10,-5,6,3,7,7,-2,9,-9,-2,6,-6,-5,3,-8,8,-9,-9,4,-8,-6,6,-3,-5,-2,3,-4,-6,9,-2,4,-5,1,-9,7,-8,10,10,-1,-8,-4,2,-1,9,-6,7,9,2,-5,6,8,-7,-8,-2,6,5,-4,-9,3,-4,-9,8,2,-9,-3,-3,7,-9,-8,7,4,3,-6,2,-10,-8,-7,6,-10,-8,-10,-6,-10,-5,6,4,1,-8,2,6,-6,1,-5,-3,-4,10,4,4,-8,4,-10,-6,6,7,3,9,2,-3,9,-1,-8,8,4,-6,10,8,6,10,-7,-1,-2,10,-10,-10,8,3,-2,-8,4,9,-1,3,-1,1,-2,8,3,-8,10,4,-9,4,10,8,-5,10,-5,5,-8,8,1,3,-4,10,1,4,3,-3,-9,8,9,-1,-3,-4,5,10,-8,1,-8,-7,-5,10,8,-2,6,2,8,-2,10,-1,-10,2,-7,-1,5,3,9,-9,-1,-6,1,-4,1,-9,4,7,-4,-3,5,-4,-3,2,4,-9,-2,-2,4,3,2,8,3,-1,6,8,9,2,10,-2,-5,9,-9,-2,7,-8,-9,-6,-2,1,-2,-1,-10,-2,7,5,6,-1,3,8,1,10,2,4,4,4,-6,-8,8,-7,4,6,3,9,-1,7,-2,-3,4,8,5,-5,-9,-9,5,-1,-7,-2,-4,-8,5,8,4,-2,9,6,2,-8,8,-7,3,-1,4,-1,-4,3,8,-9,-3,1,-10,7,-10,-4,-2,1,-8,-4,-8,1,7,3,5,8,-2,-9,5,6,-1,-4,-9,8], dtype = "int64")#candidate|10186|(2304,)|const|int64
call_10185 = relay.TupleGetItem(func_8326_call(relay.reshape(const_10186.astype('int64'), [2304,])), 1)
call_10187 = relay.TupleGetItem(func_8329_call(relay.reshape(const_10186.astype('int64'), [2304,])), 1)
func_7192_call = mod.get_global_var('func_7192')
func_7194_call = mutated_mod.get_global_var('func_7194')
var_10209 = relay.var("var_10209", dtype = "int8", shape = ())#candidate|10209|()|var|int8
call_10208 = relay.TupleGetItem(func_7192_call(relay.reshape(var_10209.astype('int8'), [])), 2)
call_10210 = relay.TupleGetItem(func_7194_call(relay.reshape(var_10209.astype('int8'), [])), 2)
output = relay.Tuple([call_10183,call_10185,const_10186,call_10208,var_10209,])
output2 = relay.Tuple([call_10184,call_10187,const_10186,call_10210,var_10209,])
func_10215 = relay.Function([var_10209,], output)
mod['func_10215'] = func_10215
mod = relay.transform.InferType()(mod)
var_10216 = relay.var("var_10216", dtype = "int8", shape = ())#candidate|10216|()|var|int8
output = func_10215(var_10216)
func_10217 = relay.Function([var_10216], output)
mutated_mod['func_10217'] = func_10217
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7323_call = mod.get_global_var('func_7323')
func_7324_call = mutated_mod.get_global_var('func_7324')
call_10244 = relay.TupleGetItem(func_7323_call(), 0)
call_10245 = relay.TupleGetItem(func_7324_call(), 0)
func_8506_call = mod.get_global_var('func_8506')
func_8508_call = mutated_mod.get_global_var('func_8508')
const_10252 = relay.const([[1,6,8,-5,-7,-10,-7,4,-1,-2,-1,3,-2,-6,7,6,4,3,6,-10,3,8,6,1,5,8,2,6,6,-2,-10,5,8,5,-6,-9,-2,-10,-6,-8,8,-9,-5,4,-6,6,-5,-9,9,-9,8,-5,-4,1,-7,5,2,6,10,9,-6,-2,-10,-4,-7,-5,2,5,4,-9,2,-8,9,-2,-4,5,-9,-3,-7,7,9,-9,1,-8,-10,8,1,6,8,9,10,3,8,-8,2,-1,5,-3,-1,-1,-6,-3,-5,-4,-9,-8,-6,8,-7,-1,2,-10,-1,3,-4,3,7,4,6,-6,5,-2,5,7,8,10,9,5,5,-1,6,8,1,5,1,10,7,7,6,3,1,2,-5,1,8,-8,10,-8,-7,-8,-6,6,-4,3,-8,-4,2,-2,-4,9,-9,-6,3,9,9,-10,-10,8,3,4,10,2,-3,-10,-7,8,-6,-4,8,-10,-3,-2,9,6,1,-3,7,4,-10,-6,-1,-3,-7,-5,2,-4,6,-9,5,-8,7,-1,9,-4,-10,-5,5,10,-7,-8,10,8,-7,-4,-2,3,6,-6,7,-3,2,-8,8,-8,-4,-5,-8,2,-10,10,-1,-3,-6,9,1,-2,9,-8,9,1,-4,-8,1,-8,8,-3,2,3,5,3,5,-8,7,-3,-4,10,3,8,9,5,7,-6,3,9,5,-3,9,-7,9,-5,-4,-9,-6,-1,7,2,-3,3,10,-4,-5,-7,10,5,2,10,-6,5,8,-6,-3,8,-1,-1,-4,7,-4,6,-6,3,10,6,-4,9,-10,-8,-5,10,-7,6,8,3,-6,7,-1,-2,4,8,-10,2,1,-4,6,10,-4,7,10,3,-10,-7,-1,-1,-8,4,5,9,-8,2,-8,-7,1,-4,5,-6,-10,-3,4,7,-4,-2,-9,-7,-4,10,3,4,-3,-6,10,3,-7,-10,-10,-4,9,5,5,-4,-3,2,-4,-2,9,-7,-2,-8,5,-3,-6,-1,-1,5,-10,-8,5,-9,-8,-8,-10,5,-3,2,-2,5,10,-5,6,-10,10,7,7,4,6,-4,5,8,-4,-8,-5,-6,-10,-9,-2,-3,4,6,6,9,-2,-8,-6,-6,9,9,-8,-1,8,7,9,-2,9,-6,-10,7,-2,2,3,10,-2,8,-6,10,-10,-3,4,2,5,-8,-7,-8,2,-6,-8,9,-5,-1,7,-4,6,-6,3,4,7,3,-9,-2,-9,-9,5,6,-6,-9,-8,-8,10,-7,-3,1,4,-6,2,-5,-6,-9,-2,-9,4,9,-2,-6,-4,-5,3,9,-9,10,2,-4,10,9,10,10,7,4,10,-10,-5,1,1,5,6,-1,3,-9,1,-6,-6,-3,-8,10,8,-2,7,1,5,7,-3,2,-6,-10,-6,5,5,-5,-6,-2,-7,7,10,-1,6,-6,6,7,-8,-6,7,8,-9,6,-10,-10,-3,-8,-7,-7,6,-1,1,2,-7,4,10,-6,7,-6,10,-1,-5,5,-9,-4,-8,-7,5,10,8,5,-8,-8,-3,-9,2,-6,-10,-10,3,-5,-9,2,10,5,6,7,-3,6,-3,8,6,4,-5,6,-8,-1,-3,-2,-4,2,-9,3,-6,-5,-5,-4,-7,6,5,-3,5,2,8,-3,-1,2,6,1,2,2,-8,-8,-9,10,8,-8,7,3,4,-8,4,6,-3,3,2,3,-6,-9,-7,8,10,10,-4,3,-10,-6,10,4,10,9,7,-3,4,7,-1,-7,-8,10,-10,3,-5,6,-10,7,10,-1,-9,-9,8,-4,-10,2,10,2,-9,1,4,7,10,4,-3,8,-3,5,-2,4,10,9,-10,-9,6,2,9,-3,-5,-8,6,-10,-2,2,-4,5,-2,3,7,-10,-3,-2,2,-1,4,7,3,1,-2,9,-9,9,1,5,5,-9,-10,1,8,-10,9,-2,-5,-8,-6,-3,3,8,2,-10,-1,-5,1,4,8,-2,1,1,-7,-5,8,-1,9,-3,-5,10,-3,8,1,-1,-5,-9,-7,6,-9,-10,-8,8,-2,-8,3,4,3,9,-5,-6,-5,1,-5,-7,-8,3,-10,3,1,9,-1,1,-7,1,-3,4,-2,-2,-2,1,-8,5,-5,-7,4,-2,1,1,6,-1,7,-8,2,5,-9,-3,-1,6,-9,-4,-1,7,10,1,10,-4,9,7,2,-5,-8,-1,-7,7,-9,8,-7,-1,5,-2,2,-3,10,2,3,6,-6,-10,-1,10,8,-8,-4,-10,9,-5,2,3,9,-5,-5,-4,5,5,-1,-5,-2,1,-10,-7,7,-1,2,-10,-1,3,-5,6,-1,7,5,-10,-5,-3,4,-5,1,-9,-1,-6,-5,8,-8,-3,5,-2,1,7,4,10,-1,-10,-4,7,-9,8,2,5,2,8,5,-10,-3,-2,-9,7,-1,4,6,-1,-2,9,8,-5,-10,-10,4,-3,8,-4,-2,-9,-7,-8,-4,-8,-1,4,8,2,2,-3,3,-3,-3,-2,-7,-8,5,9,-9,8,3,1,-1,9,4,-8,-10,-10,8,-10,4,-3,-7,8,9,-6,-10,-4,-10,4,9,-5,-5,-3,-8,9,-2,10,-5,5,-6,6,10,9,-7,5,5,4,-6,2,-10,3,3,1,-4,2,7,-8,-10,-6,9,10,3,3,-10,3,-6,-4,-2,9,-1,-5,-8,5,7,-4,7,10,9,1,-8,1,-3,-7,2,-8,-6,3,-6,-2,2,-1,2,-10,5,-10,6,-1,10,1,-1,-7,3,-10,10,4,-10,10,-6,-2,-2,6,-6,4,-2,-8,-5,1,-6,-7,-5,-8,-5,6,9,-4,2,8,6,6,8,-4,-10,2,-6,-2,-1,-5,-1,10,10,-2,6,4,3,-2,3,-3,-3,-1,-6,-7,5,5,-4,7,-9,-8,-8,-8,2,1,8,-10,-1,-7,6,-3,-7,-7,5,6,-5,-8,-9,-6,-8,10,-1,4,-3,-10,-8,-10,-3,-5,2,-2,-8,-2,9,-9,2,-1,-10,-8,10,4,1,3,2,2,-1,-3,-7,5,-10,2,-6,9,-10,10,5,7,9,-9,8,-7,8,-8,-6,10,1,-9,5,-2,-7,6,-8,7,3,-10,-9,-9,-8,1,-2,-1,-3,8,10,-6,6,-6,-6,-4,9,9,-1,-5,7,-3,7,2,6,-7,-3,3,4,4,2,-9,1,3,10,1,3,8,9,7,1,-2,-8,4,4,-4,-7,1,2,-8,-9,-10,4,-2,8,-8,7,3,-5,-9,-8,-7,-5,3,-10,10,1,-6,7,-7,9,-4,-7,2,-6,1,4,-1,6,-4,4,-10,3,-9,3,-5,-3,-1,-8,2,-5,-9,3,-6,1,-9,-6,-9,6,1,-4,-4,-5,-7,9,8,4,-3,-7,-8,-10,5,-6,7,2,3,-4,5,3,2,-1,8,-10,-2,9,-7,-7,-5,9,-6,9,9,6,1,-5,-1,-7,-2,9,4,-4,-9,3,3,-5,3,8,-7,5,4,-5,6,4,-7,-4,3,1,-8,-5,6,-1,5,-2,-4,10,-9,-2,5,5,-1,4,-6,3,1,6,-9,8,-6,4,-7,5,1,1,7,9,-4,1,8,-3,-1,6,-5,4,5,1,-4,8,-6,-1,-4,1,5,-7,6,-2,10,-9,-4,-8,2,-9,-6,2,-5,-4,-5,-8,-7,-3,-6,1,7,-4,-2,-8,-10,1,-5,9,-7,-10,10,-3,4,1,3,7,-2,10,3,-10,-6,-10,-5,-2,4,5,1,-2,-5,6,-2,9,4,-10,7,10,1,6,-1,-8,-4,8,2,2,-10,5,-1,-8,4,-2,7,6,-3,4,3,-8,5,-4,-3,-4,5,7,-6,1,-2,-2,-6,-7,-1,3,-2,-10,-5,6,9,3,1,-9,6,8,-2,6,-9,7,5,1,-8,-4,5,5,2,-7,-9,-4,6,-4,2,-4,-5,10,-10,-7,2,-3,3,-1,7,10,6,-2,5,1,-8,-10,-8,4,1,-6,5,2,-9,-5,-2,-6,-8,-3,6,2,-8,8,-3,4,6,-9,-1,-8,-3,-9,-9,-5,3,2,1,5,8,-7,-8,7,9,4,4,-10,-7,3,-4,-5,-8,8,4,-1,9,-5,7,2,7,-7,7,9,-8,2,-5,-1,-3,-2,-4,-1,-1,1,-8,5,10,8,9,3,-2,-9,1,1,9,-3,6,-8,-10,-4,-4,4,1,3,-1,-7,-1,-1,-6,-8,-6,8,5,-9,-6,3,-2,-6,-1,2,5,-5,6,9,-6,7,-8,-4,-2,7,-7,-2,9,3,6,2,-7,-6,-10,-4,-1,-10,7,-3,-8,1,-3,4,10,4,5,7,-2,4,9,-10,-1,3,-4,-1,7,6,6,3,-1,3,-2,7,-5,-8,1,9,8,-3,6,-5,-7,-6,2,8,8,-9,-2,-6,9,5,10,3,-4,10,-2,7,-5,10,-2,-3,10,1,-8,2,9,-7,-9,-8,-1,-7,3,-10,-6,-8,-9,-9,2,-2,6,-10,-1,-7,9,5,4,-3,-7,7,-3,2,-5,2,10,10,10,-3,6,3,-5,-7,2,6,-3,3,-8,-2,7,-2,10,4,-1,4,7,5,8,3,-4,-1,1,-6,10,-2,2,3,6,-3,-4,-6,-4,5,5,-2,-6,-7,-9,-8,9,-8,-5,-4,-8,-10,3,7,7,9,-1,-10,-6,-6,9,5,-5,10,4,3,-10,6,8,-3,7,-6,5,-5,-4,7,4,-3,5,-9,9,10,-4,5,10,-9,-9,3,-3,-6,-9,10,7,2,-9,8,4,7,4,2,-9,-1,5,4,-4,5,-5,7,-2,-3,-2,9,9,-6,10,-7,8,-1,3,3,8,-3,4,-7,8,7,1,8,6,10,-1,-6,6,3,3,-9,3,5,9,-6,-2,-9,-1,-2,10,-2,1,-9,7,8,-8,-2,6,-2,1,-6,-1,7,-3,-8,3,1,9,-10,-3,-8,-3,4,2,-8,2,-8,-10,-4,6,-5,3,2,7,-10,-10,1,-3,-5,-9,-7,-9,-7,-10,2,-2,-2,5,8,-5,4,1,9,10,-6,-8,-3,8,8,8,3,-8,-6,-10,-7,-5,10,-6,-9,-4,-7,-9,-1,-8,-4,-10,-8,-1,-3,3,6,5,-3,7,-7,-8,-5,-5,-2,7,9,3,10,-4,-7,-7,6,-10,-2,2,8,-4,-4,1,-1,-2,-10,8,10,-2,-10,1,8,-4,8,10,5,-1,4,-5,-2,5,-3,-1,6,10,-2,-1,-2,-3,-2,-6,-8,6,-1,-6,7,7,4,-10,1,6,1,-6,-6,-3,1,-5,-8,-10,1,4,-5,5,6,10,9,5,-3,5,9,8,-9,8,6,-8,1,-3,10,-6,7,-6,-1,-6,-1,4,9,9,-6,5,2,-9,5,1,-3,-2,2,5,-10,-8,2,-10,-5,-8,5,-5,9,1,-7,7,-9,8,-8,5,-6,8,4,-10,6,-1,3,9,-9,4,-1,6,2,1,9,-10,8,4,6,10,1,-5,7,-4,4,-2,3,-7,2,-6,4,7,-4,4,4,-1,7,-7,10,1,-3,1,9,-10,-7,-1,2,3,-8,5,-2,6,4,4,-7,10,-7,6,8,-6,-4,-6,-6,2,7,-7,4,10,9,4,8,7,-4,1,9,-6,6,-9,4,-6,1,-2,7,4,8,1,9,-1,-1,4,-10,4,4,-8,-7,1,-6,-2,7,-6,-4,-10,4,-6,4,8,-2,-1,8,-7,2,2,1,2,1,-2,6,10,3,-7,-7,4,7,-8,-5,-9,-4,-6,6,2,5,-4,8,-2,-1,-10,6,-10,9,8,-4,10,10,3,-3,3,1,-8,-1,-1,-1,-1,-7,2,8,10,8,7,6,-2,-7,7,-2,6,-7,-4,-8,-7,-3,-10,8,-10,-10,4,9,4,-1,-1,-8,-4,5,-5,-2,-9,1,3,-1,-6,2,-8,-6,-4,-5,-9,5,10,-1,3,9,-8,3,-10,6,5,5,-8,6,-7,-10,-4,10,-3,2,4,-9,-2,6,9,7,2,9,-3,4,6,6,9,7,-7,-9,10,5,-2,-3,3,-7,4,-6,1,-8,-4,-10,-8]], dtype = "int64")#candidate|10252|(1, 2304)|const|int64
call_10251 = relay.TupleGetItem(func_8506_call(relay.reshape(const_10252.astype('int64'), [2304,])), 0)
call_10253 = relay.TupleGetItem(func_8508_call(relay.reshape(const_10252.astype('int64'), [2304,])), 0)
output = relay.Tuple([call_10244,call_10251,const_10252,])
output2 = relay.Tuple([call_10245,call_10253,const_10252,])
func_10257 = relay.Function([], output)
mod['func_10257'] = func_10257
mod = relay.transform.InferType()(mod)
mutated_mod['func_10257'] = func_10257
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10257_call = mutated_mod.get_global_var('func_10257')
call_10258 = func_10257_call()
output = call_10258
func_10259 = relay.Function([], output)
mutated_mod['func_10259'] = func_10259
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7926_call = mod.get_global_var('func_7926')
func_7927_call = mutated_mod.get_global_var('func_7927')
call_10311 = relay.TupleGetItem(func_7926_call(), 0)
call_10312 = relay.TupleGetItem(func_7927_call(), 0)
output = relay.Tuple([call_10311,])
output2 = relay.Tuple([call_10312,])
func_10335 = relay.Function([], output)
mod['func_10335'] = func_10335
mod = relay.transform.InferType()(mod)
output = func_10335()
func_10336 = relay.Function([], output)
mutated_mod['func_10336'] = func_10336
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8896_call = mod.get_global_var('func_8896')
func_8898_call = mutated_mod.get_global_var('func_8898')
call_10389 = relay.TupleGetItem(func_8896_call(), 0)
call_10390 = relay.TupleGetItem(func_8898_call(), 0)
func_4582_call = mod.get_global_var('func_4582')
func_4586_call = mutated_mod.get_global_var('func_4586')
var_10392 = relay.var("var_10392", dtype = "uint8", shape = (825,))#candidate|10392|(825,)|var|uint8
call_10391 = relay.TupleGetItem(func_4582_call(relay.reshape(var_10392.astype('uint8'), [15, 11, 5]), relay.reshape(var_10392.astype('uint8'), [15, 11, 5]), ), 0)
call_10393 = relay.TupleGetItem(func_4586_call(relay.reshape(var_10392.astype('uint8'), [15, 11, 5]), relay.reshape(var_10392.astype('uint8'), [15, 11, 5]), ), 0)
output = relay.Tuple([call_10389,call_10391,var_10392,])
output2 = relay.Tuple([call_10390,call_10393,var_10392,])
func_10394 = relay.Function([var_10392,], output)
mod['func_10394'] = func_10394
mod = relay.transform.InferType()(mod)
var_10395 = relay.var("var_10395", dtype = "uint8", shape = (825,))#candidate|10395|(825,)|var|uint8
output = func_10394(var_10395)
func_10396 = relay.Function([var_10395], output)
mutated_mod['func_10396'] = func_10396
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9830_call = mod.get_global_var('func_9830')
func_9831_call = mutated_mod.get_global_var('func_9831')
call_10398 = relay.TupleGetItem(func_9830_call(), 0)
call_10399 = relay.TupleGetItem(func_9831_call(), 0)
func_1424_call = mod.get_global_var('func_1424')
func_1427_call = mutated_mod.get_global_var('func_1427')
var_10404 = relay.var("var_10404", dtype = "int32", shape = ())#candidate|10404|()|var|int32
var_10405 = relay.var("var_10405", dtype = "int32", shape = (1400,))#candidate|10405|(1400,)|var|int32
call_10403 = relay.TupleGetItem(func_1424_call(relay.reshape(var_10404.astype('int32'), []), relay.reshape(var_10405.astype('int32'), [10, 10, 14]), ), 0)
call_10406 = relay.TupleGetItem(func_1427_call(relay.reshape(var_10404.astype('int32'), []), relay.reshape(var_10405.astype('int32'), [10, 10, 14]), ), 0)
func_9619_call = mod.get_global_var('func_9619')
func_9620_call = mutated_mod.get_global_var('func_9620')
call_10407 = relay.TupleGetItem(func_9619_call(), 0)
call_10408 = relay.TupleGetItem(func_9620_call(), 0)
bop_10412 = relay.bitwise_or(call_10403.astype('int32'), var_10404.astype('int32')) # shape=(10, 10, 14)
bop_10415 = relay.bitwise_or(call_10406.astype('int32'), var_10404.astype('int32')) # shape=(10, 10, 14)
func_9265_call = mod.get_global_var('func_9265')
func_9266_call = mutated_mod.get_global_var('func_9266')
call_10429 = relay.TupleGetItem(func_9265_call(), 0)
call_10430 = relay.TupleGetItem(func_9266_call(), 0)
func_8777_call = mod.get_global_var('func_8777')
func_8779_call = mutated_mod.get_global_var('func_8779')
call_10431 = relay.TupleGetItem(func_8777_call(), 0)
call_10432 = relay.TupleGetItem(func_8779_call(), 0)
func_7554_call = mod.get_global_var('func_7554')
func_7556_call = mutated_mod.get_global_var('func_7556')
call_10437 = func_7554_call()
call_10438 = func_7554_call()
output = relay.Tuple([call_10398,var_10405,call_10407,bop_10412,call_10429,call_10431,call_10437,])
output2 = relay.Tuple([call_10399,var_10405,call_10408,bop_10415,call_10430,call_10432,call_10438,])
func_10439 = relay.Function([var_10404,var_10405,], output)
mod['func_10439'] = func_10439
mod = relay.transform.InferType()(mod)
var_10440 = relay.var("var_10440", dtype = "int32", shape = ())#candidate|10440|()|var|int32
var_10441 = relay.var("var_10441", dtype = "int32", shape = (1400,))#candidate|10441|(1400,)|var|int32
output = func_10439(var_10440,var_10441,)
func_10442 = relay.Function([var_10440,var_10441,], output)
mutated_mod['func_10442'] = func_10442
mutated_mod = relay.transform.InferType()(mutated_mod)
const_10490 = relay.const([[[-2.962126,7.057646],[-7.813360,-7.981221],[7.239324,8.549841],[6.134578,-5.406962],[-2.236747,-1.350184],[-9.995256,-3.043633],[-5.065810,6.359632],[5.986927,8.021882],[-0.985231,3.734060],[9.207420,5.833033],[-3.729309,7.671928],[8.178523,3.861693]]], dtype = "float32")#candidate|10490|(1, 12, 2)|const|float32
uop_10491 = relay.sinh(const_10490.astype('float32')) # shape=(1, 12, 2)
func_7323_call = mod.get_global_var('func_7323')
func_7324_call = mutated_mod.get_global_var('func_7324')
call_10494 = relay.TupleGetItem(func_7323_call(), 0)
call_10495 = relay.TupleGetItem(func_7324_call(), 0)
func_4035_call = mod.get_global_var('func_4035')
func_4039_call = mutated_mod.get_global_var('func_4039')
const_10498 = relay.const([-6.723718,8.387753,2.446407,-5.655212,2.560625,1.465399,4.306529,0.509813,-0.614591,-3.771705,-9.112597,-3.177755,-4.203334,-5.784379,8.359185,0.612876,2.325606,0.951754,-6.158828,-6.321470,-4.172375,1.878258,-7.123347,8.155067,-0.427900,-9.878452,-5.334344,-1.706192,0.968194,-1.281135,-6.848502,-6.493065,-3.789580,-9.287925,-4.131826,2.209905,0.519876,-0.761342,3.867747,-9.776381,4.666516,-1.979456,8.367473,-6.335725,-0.576846,2.734824,-7.459292,-5.543910,2.167485,1.999517,1.371232,-7.483183,-4.696764,1.332300,-6.987018,5.128489,-4.617129,6.015987,-6.494926,-4.781260,-5.896588,3.730839,5.693694,-2.366867,1.237125,-8.523036,-2.599958,4.012819,-0.526053,-8.754551,-7.678018,-8.945301,-8.265479,-4.857222,-7.362736,3.804834,-4.736210,4.113452,-4.043933,-0.701536,-8.357617,1.291186,5.036353,6.109645,0.409195,-6.474468,9.512853,-9.000205,6.870099,-7.235964,2.762732,-5.503063,-1.653702,3.807483,7.581710,-0.658230,8.913207,-2.099823,-7.315435,-7.000063,-2.791273,2.393266,6.642612,7.837521,-4.391582,-1.383538,7.483960,3.619160,0.665575,-7.349573,-7.191561,-1.015578,-0.792735,-8.110275,-7.646666,-2.879998,-2.705870,-7.042103,7.975174,-8.220407,4.191419,1.572147,9.825121,-5.326449,-7.397354,-8.904227,-4.865906,-1.933476,4.474089,2.822600,1.098752,-8.871949,-8.549083,9.588267,-3.230513,4.805571,1.279603,-6.238211,-5.259669,2.106757,-0.186187,3.220565,-6.572346,4.710483,2.724409,0.870050,3.262137,-3.248562,-2.092606,8.752132,1.218413,-1.132933,-5.477791,2.970085,7.340590,8.736274,-9.928559,-4.792089,-3.652600,3.232799,6.212817,-1.190883,-1.081921,-5.087840,-3.866668,-0.538432,-8.726809,-6.367363,7.305291,5.485349,-3.282634,-8.249349,-4.484824,6.864119,7.633829,-2.749901,6.227848,2.575085,8.949310,-5.130959,7.798831,8.850761,9.201772,-5.430227,9.373018,-7.963253,-0.652794,6.585956,9.248523,0.176785,6.190238,4.138469,-4.627536,-7.253892,-2.563654,-0.914815,2.453621,-2.624710,8.564128,-6.225848,-1.375302,5.006168,8.671283,2.872975,8.822654,7.172513,-1.811129,-8.909960,9.971589,-1.755739,1.259999,-7.269382,-7.608441,-1.746377,4.457797,1.059676,5.018778,6.191763,8.471230,8.297625,6.352598,8.548885,-5.734080,5.170795,-5.455484,4.541991,-0.042037,1.646718,-7.735295,-7.301035,-1.060616,-8.960408,-3.579774,-6.262379,-6.321841,0.950899,4.865235,-7.743699,-5.147796,3.327579,2.625566,-1.432190,-4.373530,5.972609,8.632410,9.731597,5.440904,8.467063,5.729085,9.050767,-7.137114,1.586608,9.619558,7.292055,8.627202,-7.755827,7.468827,-3.001969,-4.160751,2.939529,-4.349165,5.985778,-6.629094,2.884246,2.635365,3.921983,6.544492,8.313401,-6.219231,-0.439013,6.426484,2.602582,-9.617287,4.111810,6.847938,-2.673910,1.730829,2.664125,6.318013,1.550828,0.668516,-9.612990,8.430205,4.790896,-1.340618,-1.967295,-9.813564,-0.301594,8.203796,-3.652733,-6.697298,-7.847726,-5.980073,0.102350,5.011151,-2.130944,-7.790638,0.028368,-7.661276,4.416917,3.968824,0.563163,3.174592,-6.586851,1.971694,1.165730,7.588992,9.284267,0.396938,6.048813,9.164885,4.637953,-0.980175,1.149078,1.090004,2.796558,-3.481870,4.693621,0.880850,7.989787,-9.025939,-9.321976,-0.729162,9.669884,4.883365,-7.662265,6.964931,-6.342894,9.335616,-8.375153,-7.221869,1.374046,-0.489480,5.860651,-6.985115,-6.965735,9.225993,-5.492794,-6.943641,-0.206489,7.014659,-3.729915,-1.265934,-7.255873,0.335279,0.423862,9.626643,-8.285185,5.491965,5.166901,-8.476322,-8.920363,-0.030183,-6.328354,-4.229188,-3.267799,1.395561,-8.186919,0.987933,1.004573,-2.903750,1.950096,6.490051,2.430058,8.184361,-0.517338,6.472541,7.215458,-9.446852,-2.834836,-1.609692,-2.795531,-0.177555,-7.253912,9.590195,-1.498169,-7.854163,5.441140,5.864536,-1.464337,3.905829,7.715827,2.878553,3.630927,-9.156629,-5.596035,-8.737079,-6.897735,-4.305600,9.737775,3.103378,0.904311,5.399613,3.414862,2.044510,9.178912,7.131743,0.582025,6.705531,-3.074552,6.389166,4.800899,5.215418,-7.642321,-6.532706,0.201018,1.813557,0.790325,-3.103985,1.203199,-7.508634,-7.875252,7.050278,-7.813815,-2.193957,-6.286473,5.915025,-7.297988,-7.445738,-6.490381,-2.100786,-8.162676,-0.001967,-8.240802,-1.254169,8.548892,-7.046562,-5.302485,7.333671,-6.880766,4.558921,9.441011,-9.676741,6.899631,-3.152238,7.058727,-0.565393,-0.751690,3.028396,4.439517,7.086533,-4.915706,-8.707360,4.314852,7.500406,-2.691584,4.821066,-7.629643,8.065513,-2.761397,3.974732,-9.440050,7.027011,6.565006,2.143415,-6.724612,0.076619,-6.458015,-0.477305,4.879750,1.844482,-7.684313,-6.754281,4.775756,9.757001,3.229805,7.672184,-4.637535,8.624513,-8.490072,-1.286233,7.033505,8.474235,3.755728,5.954581,-0.517501,-5.083726,7.506857,7.520230,-4.926613,-1.583951,0.374605,6.503804,-0.669976,9.366370,9.013133,-2.644581,2.179526,-0.582739,2.484647,-6.059287,1.130326,-1.448989,9.218672,8.685675,-2.164677,5.672051,8.917900,0.535853,8.275819,-0.984567,-8.900623,3.718524,8.599280,0.172145,-2.800161,-5.335068,-0.450968,-5.627906,-1.100193,-4.233747,-3.718810,-0.738738,-9.887696,9.455693,0.894107,2.264340,-9.985914,3.923705,-5.954176], dtype = "float32")#candidate|10498|(520,)|const|float32
call_10497 = relay.TupleGetItem(func_4035_call(relay.reshape(const_10498.astype('float32'), [10, 4, 13]), relay.reshape(const_10498.astype('float32'), [10, 4, 13]), ), 1)
call_10499 = relay.TupleGetItem(func_4039_call(relay.reshape(const_10498.astype('float32'), [10, 4, 13]), relay.reshape(const_10498.astype('float32'), [10, 4, 13]), ), 1)
func_8326_call = mod.get_global_var('func_8326')
func_8329_call = mutated_mod.get_global_var('func_8329')
var_10501 = relay.var("var_10501", dtype = "int64", shape = (2304,))#candidate|10501|(2304,)|var|int64
call_10500 = relay.TupleGetItem(func_8326_call(relay.reshape(var_10501.astype('int64'), [2304,])), 2)
call_10502 = relay.TupleGetItem(func_8329_call(relay.reshape(var_10501.astype('int64'), [2304,])), 2)
output = relay.Tuple([uop_10491,call_10494,call_10497,const_10498,call_10500,var_10501,])
output2 = relay.Tuple([uop_10491,call_10495,call_10499,const_10498,call_10502,var_10501,])
func_10505 = relay.Function([var_10501,], output)
mod['func_10505'] = func_10505
mod = relay.transform.InferType()(mod)
mutated_mod['func_10505'] = func_10505
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10506 = relay.var("var_10506", dtype = "int64", shape = (2304,))#candidate|10506|(2304,)|var|int64
func_10505_call = mutated_mod.get_global_var('func_10505')
call_10507 = func_10505_call(var_10506)
output = call_10507
func_10508 = relay.Function([var_10506], output)
mutated_mod['func_10508'] = func_10508
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9323_call = mod.get_global_var('func_9323')
func_9325_call = mutated_mod.get_global_var('func_9325')
call_10513 = relay.TupleGetItem(func_9323_call(), 0)
call_10514 = relay.TupleGetItem(func_9325_call(), 0)
var_10518 = relay.var("var_10518", dtype = "bool", shape = (7, 12, 14))#candidate|10518|(7, 12, 14)|var|bool
bop_10519 = relay.mod(call_10513.astype('float64'), relay.reshape(var_10518.astype('float64'), relay.shape_of(call_10513))) # shape=(7, 12, 14)
bop_10522 = relay.mod(call_10514.astype('float64'), relay.reshape(var_10518.astype('float64'), relay.shape_of(call_10514))) # shape=(7, 12, 14)
var_10530 = relay.var("var_10530", dtype = "float64", shape = (7, 12, 14))#candidate|10530|(7, 12, 14)|var|float64
bop_10531 = relay.logical_xor(bop_10519.astype('int32'), relay.reshape(var_10530.astype('int32'), relay.shape_of(bop_10519))) # shape=(7, 12, 14)
bop_10534 = relay.logical_xor(bop_10522.astype('int32'), relay.reshape(var_10530.astype('int32'), relay.shape_of(bop_10522))) # shape=(7, 12, 14)
func_8506_call = mod.get_global_var('func_8506')
func_8508_call = mutated_mod.get_global_var('func_8508')
var_10538 = relay.var("var_10538", dtype = "int64", shape = (2304,))#candidate|10538|(2304,)|var|int64
call_10537 = relay.TupleGetItem(func_8506_call(relay.reshape(var_10538.astype('int64'), [2304,])), 2)
call_10539 = relay.TupleGetItem(func_8508_call(relay.reshape(var_10538.astype('int64'), [2304,])), 2)
output = relay.Tuple([bop_10531,call_10537,var_10538,])
output2 = relay.Tuple([bop_10534,call_10539,var_10538,])
func_10541 = relay.Function([var_10518,var_10530,var_10538,], output)
mod['func_10541'] = func_10541
mod = relay.transform.InferType()(mod)
var_10542 = relay.var("var_10542", dtype = "bool", shape = (7, 12, 14))#candidate|10542|(7, 12, 14)|var|bool
var_10543 = relay.var("var_10543", dtype = "float64", shape = (7, 12, 14))#candidate|10543|(7, 12, 14)|var|float64
var_10544 = relay.var("var_10544", dtype = "int64", shape = (2304,))#candidate|10544|(2304,)|var|int64
output = func_10541(var_10542,var_10543,var_10544,)
func_10545 = relay.Function([var_10542,var_10543,var_10544,], output)
mutated_mod['func_10545'] = func_10545
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8682_call = mod.get_global_var('func_8682')
func_8683_call = mutated_mod.get_global_var('func_8683')
call_10586 = relay.TupleGetItem(func_8682_call(), 0)
call_10587 = relay.TupleGetItem(func_8683_call(), 0)
func_7747_call = mod.get_global_var('func_7747')
func_7750_call = mutated_mod.get_global_var('func_7750')
var_10589 = relay.var("var_10589", dtype = "float64", shape = (66,))#candidate|10589|(66,)|var|float64
call_10588 = func_7747_call(relay.reshape(var_10589.astype('float64'), [1, 6, 11]))
call_10590 = func_7747_call(relay.reshape(var_10589.astype('float64'), [1, 6, 11]))
output = relay.Tuple([call_10586,call_10588,var_10589,])
output2 = relay.Tuple([call_10587,call_10590,var_10589,])
func_10609 = relay.Function([var_10589,], output)
mod['func_10609'] = func_10609
mod = relay.transform.InferType()(mod)
mutated_mod['func_10609'] = func_10609
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10610 = relay.var("var_10610", dtype = "float64", shape = (66,))#candidate|10610|(66,)|var|float64
func_10609_call = mutated_mod.get_global_var('func_10609')
call_10611 = func_10609_call(var_10610)
output = call_10611
func_10612 = relay.Function([var_10610], output)
mutated_mod['func_10612'] = func_10612
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8661_call = mod.get_global_var('func_8661')
func_8663_call = mutated_mod.get_global_var('func_8663')
call_10642 = relay.TupleGetItem(func_8661_call(), 0)
call_10643 = relay.TupleGetItem(func_8663_call(), 0)
uop_10656 = relay.rsqrt(call_10642.astype('float32')) # shape=(13, 14, 15)
uop_10658 = relay.rsqrt(call_10643.astype('float32')) # shape=(13, 14, 15)
output = relay.Tuple([uop_10656,])
output2 = relay.Tuple([uop_10658,])
func_10659 = relay.Function([], output)
mod['func_10659'] = func_10659
mod = relay.transform.InferType()(mod)
output = func_10659()
func_10660 = relay.Function([], output)
mutated_mod['func_10660'] = func_10660
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9162_call = mod.get_global_var('func_9162')
func_9163_call = mutated_mod.get_global_var('func_9163')
call_10680 = relay.TupleGetItem(func_9162_call(), 0)
call_10681 = relay.TupleGetItem(func_9163_call(), 0)
func_9162_call = mod.get_global_var('func_9162')
func_9163_call = mutated_mod.get_global_var('func_9163')
call_10688 = relay.TupleGetItem(func_9162_call(), 0)
call_10689 = relay.TupleGetItem(func_9163_call(), 0)
output = relay.Tuple([call_10680,call_10688,])
output2 = relay.Tuple([call_10681,call_10689,])
func_10699 = relay.Function([], output)
mod['func_10699'] = func_10699
mod = relay.transform.InferType()(mod)
mutated_mod['func_10699'] = func_10699
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10699_call = mutated_mod.get_global_var('func_10699')
call_10700 = func_10699_call()
output = call_10700
func_10701 = relay.Function([], output)
mutated_mod['func_10701'] = func_10701
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7404_call = mod.get_global_var('func_7404')
func_7405_call = mutated_mod.get_global_var('func_7405')
call_10702 = relay.TupleGetItem(func_7404_call(), 0)
call_10703 = relay.TupleGetItem(func_7405_call(), 0)
output = relay.Tuple([call_10702,])
output2 = relay.Tuple([call_10703,])
func_10708 = relay.Function([], output)
mod['func_10708'] = func_10708
mod = relay.transform.InferType()(mod)
output = func_10708()
func_10709 = relay.Function([], output)
mutated_mod['func_10709'] = func_10709
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9400_call = mod.get_global_var('func_9400')
func_9401_call = mutated_mod.get_global_var('func_9401')
call_10723 = func_9400_call()
call_10724 = func_9400_call()
func_7369_call = mod.get_global_var('func_7369')
func_7370_call = mutated_mod.get_global_var('func_7370')
call_10742 = relay.TupleGetItem(func_7369_call(), 0)
call_10743 = relay.TupleGetItem(func_7370_call(), 0)
var_10756 = relay.var("var_10756", dtype = "int32", shape = (1040, 7))#candidate|10756|(1040, 7)|var|int32
bop_10757 = relay.logical_xor(call_10723.astype('int32'), var_10756.astype('int32')) # shape=(1040, 7)
bop_10760 = relay.logical_xor(call_10724.astype('int32'), var_10756.astype('int32')) # shape=(1040, 7)
var_10767 = relay.var("var_10767", dtype = "int32", shape = (1040, 7))#candidate|10767|(1040, 7)|var|int32
bop_10768 = relay.not_equal(bop_10757.astype('bool'), relay.reshape(var_10767.astype('bool'), relay.shape_of(bop_10757))) # shape=(1040, 7)
bop_10771 = relay.not_equal(bop_10760.astype('bool'), relay.reshape(var_10767.astype('bool'), relay.shape_of(bop_10760))) # shape=(1040, 7)
func_10394_call = mod.get_global_var('func_10394')
func_10396_call = mutated_mod.get_global_var('func_10396')
const_10778 = relay.const([6,-9,8,2,-6,6,3,-8,-7,-4,-2,7,10,-4,-6,3,-10,-4,-10,8,5,7,9,5,-2,-2,-3,-4,10,6,-2,-8,1,-1,-10,7,2,-1,7,8,-5,4,1,1,-7,-7,-7,-1,1,-7,2,4,8,-6,-3,4,7,6,-7,1,-5,5,5,10,10,7,-3,-6,8,6,8,-9,-8,-5,1,1,6,10,3,-9,9,-5,-7,-3,-2,-8,9,-7,2,3,10,1,-1,-9,-3,7,4,-6,2,-10,8,-7,3,5,-6,9,4,3,-3,2,-1,-9,1,-8,5,-9,5,-2,-10,6,-5,1,6,-7,-6,-4,9,4,9,3,1,6,8,4,5,3,4,-1,9,9,8,4,9,7,9,9,-4,6,3,9,2,9,-7,8,2,-1,3,8,-3,-7,7,-2,2,-10,-8,4,10,-7,6,2,3,8,9,7,3,4,-1,-10,4,8,10,1,-5,-6,4,-9,-3,6,-5,4,8,-7,-4,-3,-4,10,3,3,-2,3,10,6,8,-5,-4,10,-7,-2,-1,-9,4,-10,-1,-8,-5,10,2,-7,5,-5,3,10,2,2,4,10,-1,8,-5,-6,9,6,-1,4,-6,-4,6,-10,-5,-4,6,-1,-6,10,5,-2,3,6,10,9,-2,-5,-8,-9,-7,-5,8,-9,-3,8,6,-4,7,-2,-1,2,-7,-2,-4,-1,-5,-6,-2,-1,-6,5,-6,-1,-9,1,8,-1,-2,10,-5,9,-7,5,9,-4,-5,-7,8,-6,-2,4,8,-5,-10,8,-7,-7,9,-4,10,-3,9,-5,-9,3,-6,3,6,-6,-4,4,-1,-8,3,-1,3,7,6,-8,-1,-6,10,2,-7,2,5,5,-7,8,-6,-4,-3,-1,-10,-1,10,1,7,7,4,-7,5,8,-6,3,-3,1,5,4,2,10,5,3,-5,-7,-10,-1,-8,-7,3,-6,-5,4,-8,-7,6,-2,9,2,-6,4,-5,10,-3,-6,5,5,-9,-9,-7,-9,6,-1,-9,-10,4,-10,8,-10,7,7,8,-1,9,5,-10,9,8,-2,5,-3,-5,-7,4,-6,-5,-2,-3,1,-3,-9,3,-1,-10,-7,5,5,2,7,-9,-7,-5,9,-10,-1,-9,7,10,4,-1,4,-2,7,1,1,6,6,7,-9,-8,-3,3,-10,8,-3,-4,4,-8,-1,7,-10,-10,-6,2,3,8,-8,5,-3,1,-1,-7,-2,-10,-3,-4,1,9,-10,-5,-4,8,5,7,8,6,-4,8,7,10,-4,4,8,-5,8,-1,4,-2,5,-6,1,4,-6,-3,10,-4,-6,2,-4,10,10,4,-3,2,8,-2,-2,4,1,-3,-9,-5,-5,-10,-7,-3,-4,-10,3,-4,2,2,4,-1,3,6,-1,10,-2,-9,1,-6,8,9,-10,4,10,-5,2,-1,-2,-1,-10,2,-9,10,10,-4,-4,10,7,5,10,4,-7,-6,-4,1,8,-5,-2,-9,-1,-3,-8,-8,-6,4,4,-5,5,-8,-2,2,-4,-9,1,1,2,8,8,7,-2,8,-9,5,-8,-10,5,8,-8,-8,-8,-5,-4,2,-1,-3,-10,-9,6,10,8,-2,-3,-2,1,3,8,10,1,3,-3,-6,-9,-1,-10,9,-2,-3,-3,-9,7,-2,2,-9,5,8,10,10,-1,-4,-1,-9,4,-1,8,-1,-4,2,-6,10,2,-9,1,2,10,3,9,-6,5,-9,-9,-10,3,10,2,3,7,-8,3,2,-8,-7,-6,-1,2,6,10,6,-7,-5,8,2,-9,-8,8,8,-5,-4,-9,4,5,-5,-5,2,-1,10,4,7,-10,-8,2,-6,-2,-10,3,4,-3,5,-4,-1,-4,2,-10,-3,-3,9,-8,4,5,-1,-7,8,-6,9,10,4,-10,-1,-7,-1,9,8,6,7,8,-10,7,-7,1,-2,8,4,-2,8,-1,-10,8,-8,-9,-6,7,2,-3,6,4,2,3,10,1,7,-7,-4,4,-1,-7,2,4,7,-2,9,10,-10,7,2,-9,4,5,-3,10,-6,3,-2,-1,-4,1,-2,5,5,3,-4,8,10,-5,-4,9,1,-7,10,-1,2,-8,-4,8,6,9,-6,9,-10,-9,9,-6,3,-7,-3,7,-2,-10,7,6,-1,-7,-1,3,1,8,1,4,7], dtype = "uint8")#candidate|10778|(825,)|const|uint8
call_10777 = relay.TupleGetItem(func_10394_call(relay.reshape(const_10778.astype('uint8'), [825,])), 0)
call_10779 = relay.TupleGetItem(func_10396_call(relay.reshape(const_10778.astype('uint8'), [825,])), 0)
func_9265_call = mod.get_global_var('func_9265')
func_9266_call = mutated_mod.get_global_var('func_9266')
call_10786 = relay.TupleGetItem(func_9265_call(), 0)
call_10787 = relay.TupleGetItem(func_9266_call(), 0)
func_9162_call = mod.get_global_var('func_9162')
func_9163_call = mutated_mod.get_global_var('func_9163')
call_10790 = relay.TupleGetItem(func_9162_call(), 0)
call_10791 = relay.TupleGetItem(func_9163_call(), 0)
func_10659_call = mod.get_global_var('func_10659')
func_10660_call = mutated_mod.get_global_var('func_10660')
call_10797 = relay.TupleGetItem(func_10659_call(), 0)
call_10798 = relay.TupleGetItem(func_10660_call(), 0)
func_1767_call = mod.get_global_var('func_1767')
func_1769_call = mutated_mod.get_global_var('func_1769')
const_10809 = relay.const([3.258590,-4.257525,-8.072006,-4.150214,-6.183009,-3.749580,-3.565935,-2.814673,9.952514,8.402488,-6.912693,2.993789,7.718809,0.013417,2.463570,-8.942144,0.574728,-9.140543,0.691619,1.322738,9.926573,-6.913725,7.016998,3.776780,9.186833,-4.713431,8.181243,-7.045873,2.703182,2.844546,-1.447572,3.725102,6.551135,6.748115,-6.178880,-1.016394,-1.474936,8.454129,-3.193745,-3.991368,-2.244754,0.259133,-7.643510,-5.106880,7.647963,-9.838903,7.292058,4.232965,-5.582278,2.694823,1.827126,-9.798173,4.706292,-6.864817,-9.812048,4.499112,3.847564,-6.069944,-1.558992,7.700851,1.026727,1.555314,3.300900,9.185649,9.874995,9.900632,-6.062073,-5.414970,3.196922,6.795491,4.206164,-4.675092,3.453883,-4.270732,-3.339352,4.949629,5.757363,-4.031815,2.318997,-2.138251,4.812437,-7.088353,0.275847,4.844157,7.971318,-1.417865,6.255746,0.865003,-5.239190,-7.981209,8.797651,-2.155533,-8.621111,6.201848,-5.236728,-4.849510,8.649748,1.018102,4.876597,-7.267622,-7.310951,1.724372,2.315315,-4.781169,-9.895922,-2.179400,4.843283,-6.408132,-1.912651,1.994055,-5.859391,-4.812281,-9.409968,-1.492808,-2.401622,-7.486329,-9.645537,-8.559778,-6.455110,2.418101,9.021243,-6.518098,-4.237166,-9.804927,3.311679,9.114988,8.297665,4.493781,8.274367,5.624453,-9.825673,-0.610227,5.075893,4.067440,-5.370753,-9.751603,-3.006985,-7.027967,7.745928,1.283888,-1.560434,-5.014784,-1.691208,-9.373656,-1.943512,4.594756,7.994455,1.029053,-3.570944,2.015507,8.607107,-4.568484,-2.513488,-7.356992,0.507909,-6.455597,-2.077258,7.451761,8.852547,-1.749301,5.268796,-8.817530,-0.422261,4.728900,-3.199736,4.766328,-1.275103,-4.755294,-6.795083,1.118176,-5.722569,4.932500,-0.685013,-5.375280,-3.234254,3.709810,-1.351366,0.696358,0.457898,-1.208043,7.980854,2.076985,7.560732,-2.269027,-8.789623,-3.227386,-7.122766,3.918506,-4.089017,-5.322192,0.815571,4.112208,5.223418,-0.063153,2.943979,9.726044,-4.010832,4.357949,-4.251954,3.890858,3.946773,4.922822,9.740941,-0.963949,-3.082584,0.036259,2.065966,-3.596414,5.598703,0.392494,3.078899,1.505511,-4.864289,0.126078,-3.607410,0.715317,-0.074701,8.588823,-9.961856,-0.378261,-4.335903,-4.571792,-7.678655,3.946715,9.790267,-7.168559,6.893854,-5.813186,-2.961317,-9.256735,-5.479335,-6.502006,-6.865983,-7.583914,-8.202029,-7.112389,-3.680771,-7.300569,3.462558,-0.672737,-0.264417,4.333688,-2.819511,7.579955,2.375943,-5.639883,-0.478777,7.069521,-5.623490,2.622259,-4.341117,-2.085840,-7.831497,1.046382,-0.577328,-6.205973,-9.692279,-9.746338,3.015343,-6.298708,2.229989,-3.413224,4.465343,-2.506660,7.850390,-2.423121,4.246265,6.980175,7.920904,7.017119,-3.976079,8.215752,3.910034,-5.682366,1.571861,-7.482711,1.611195,-5.908738,-0.077301,-9.970280,-1.560303,9.889869,1.069389,7.525324,4.436166,-4.129885,-2.961720,-5.557320,1.104445,-7.917365,5.273949,3.090515,0.322782,-2.236224,8.054307,-8.198319,7.726118,9.374596,-8.993767,-6.187951,-9.060195,2.383011,-2.518254,-6.928160,-0.494690,-0.353267,3.805638,-2.826221,-9.797739,-7.146311,-4.815007,1.604492,-2.738216,-8.173890,-6.404379,-3.164817,-0.961553,2.727655,-4.621647,-7.246920,5.618661,-8.567073,5.871874,3.374602,2.672483,4.530063,-0.285723,-7.186927,8.415970,6.307715,6.066352,-0.191944,-5.897759,-8.649287,-5.354866,6.472946,2.982032,-6.377238,9.467796,-1.042289,-4.075082,-0.247135,8.283420,9.535136,8.800924,-5.417200,9.628176,-5.086501,-7.960420,-9.638841,-1.690599,-5.609950,7.079719,-9.769527,2.420078,-3.328075,-3.503131,-5.020877,4.766983,-8.151013,1.715439,3.793470,-6.833338,-7.450341,-3.923508,6.786411,-3.851608,-0.011879,-7.978267,-1.275685,-1.603863,3.116997,7.768859,-0.656368,-1.464769,-2.037977,5.312767,-6.781187,1.150711,-2.538172,3.470938,-9.954633,-8.677498,5.262727,9.857676,-4.970837,-0.120750,-3.626433,6.275262,-1.360811,-2.781530,0.068697,-8.399446,2.712994,-3.706448,9.383856,5.591499,-5.027255,9.821668,-5.978459,7.114226,-1.343694,1.993370,-1.739489,6.469460,-0.990163,2.852209,5.038954,1.361665,1.831487,-0.634647,4.420653,1.006337,9.411006,2.192108,4.225047,-7.625024,8.012393,0.897322,7.278319,-8.083884,-3.684177,9.201488,-0.318119,-0.955140,3.829705,-2.439175,-1.718118,-6.550400,-2.292345,2.310296,-2.746486,3.379270,5.556945,7.869129,1.469166,-4.818996,1.313414,1.165099,-8.987911,-7.117402,5.518181,-1.371333,-9.690426,8.280674,7.055727,-6.190508,2.309729,6.338604,-6.464305,1.743475,-8.260163,9.302032,0.385035,0.383428,-1.525063,7.522717,4.229894,7.311706,-6.952611,-7.961888,-1.784596,-1.297423,6.394699,-2.891407,-6.499825,1.731319,-0.671976,3.901621,-5.126639,7.350770,-8.659545,-0.441984,6.504602,3.775133,-2.933120,3.901820,-0.813006,-4.177937,1.932472,-9.621242,-9.360558,-5.926322,-2.978722,3.649076,4.753385,-9.347293,8.088839,9.885205,-0.146476,8.097404,-4.370424,6.034338,-7.598087,-6.939530,2.024339,6.307966,9.344728,-3.018421,8.316842,-8.904674,-5.927291,-2.324850,2.782438,-5.350738,-4.689046,-4.307425,-5.049819,-0.816077,-7.229167,-3.454661,4.863276,0.198795,-7.614364,-3.977255,6.098927,-6.621293,7.710555,-3.937969,-7.190020,3.436075,-5.332081,7.308024,4.312885,2.364513,8.422696,4.554754,5.055893,6.781777,-1.309957,-2.464194,-4.223894,-2.474398,0.355772,-2.339999,9.703748,8.078049,6.310706,7.264625,-2.564897,-2.635502,-6.796383,-0.610934,7.637380,9.347725,1.157613,4.299350,-9.400104,-0.200703,-5.857804,4.268265,-4.661744,2.549400,-2.696527,-2.146082,0.101876,-9.424153,6.264960,-2.044511,-4.133056,-0.721478,3.843352,6.223181,8.151513,9.800584,-6.338701,-7.879499,6.481160,-5.734387,-1.630764,-9.936701,-8.687543,8.126082,6.355359,-7.003588,-4.231435,-0.617953,-7.817901,1.505336,5.736900,-4.601597,-3.592767,-9.910602,-1.299458,3.976772,7.950209,9.330138,-5.573726,3.632212,-3.393311,9.741784,9.154326,-6.854437,1.250092,9.814524,-6.213915,-8.678732,-7.145397,9.018982,7.617307,3.598624,-5.645767,-2.056307,-0.781264,3.668816,4.202083,0.166773,-4.487781,0.521564,8.392401,-9.318602,-0.326332,-2.704586,2.569762,6.481193,-7.485281,2.638118,4.776201,9.056160,-4.892766,-2.959486,4.895412,-4.170290,1.397739,5.291683,-1.908176,4.151887,-4.474481,-0.480405,0.513716,0.632174,-9.693590,-7.785170,-5.140795,0.173764,-6.395345,3.055217,2.349489,3.306333,1.566451,-5.518832,-3.910923,-0.586233,1.612513,-0.776050,-4.007492,7.969242,1.225118,1.287165,3.596105,-5.243573,-5.179412,-3.822226,9.131876,1.297823,-4.752138,-3.087384,5.385086,-3.195806,3.161632,2.478244,-4.995432,2.801129,-0.756097,9.758763,5.084619,-3.470863,8.993006,-4.237111,-9.689289,1.584770,6.067441,-2.650870,-7.200606,4.204325,2.365094,-3.825407,9.173653,4.068816,-8.769348,-5.963579,-1.927225,8.040913,0.049157,-1.377252,1.582429,-1.481869,-0.532516,1.672717,2.511106,-2.883938,3.754795,-9.088501,-4.604927,4.146689,3.916346,2.801520,-0.995232,4.632525,-2.035083,8.121028,-5.779221,-9.447115,-1.222526,1.410318,-8.468034,0.907094,-1.125625,0.136603,1.982706,5.126882,-8.847605,1.518783,-5.806329,-8.535001,-1.364094,-3.974238,7.595088,0.851131,8.399491,-4.962542,3.801806,6.674856,8.701127,-1.463427,3.952330,2.831564,-5.660519,-1.218107,-5.825732,2.780630,1.023162,4.966941,-2.727396,-9.421387,5.575213,-6.937774,-4.460565,2.537057,-0.410683,2.149741,7.752799,2.254754,7.548588,-4.881064,-3.593717,-4.461983,-2.001392,-1.734012,1.989663,-1.651665,3.101201,0.676712,-2.128993,-4.149568,-0.003697,4.655894,-0.205026,-5.040257,-7.187687,8.148404,-1.786408,-0.072671,3.724895,-2.871295,-8.859966,-9.075852,8.199705,4.944793,-3.843577,-1.866271,8.662010,-2.979516,-3.100466,7.307106,-7.304615,1.246139,7.542313,4.683204,-2.869429,0.352640,-2.226670,5.317444,5.431545,0.614616,-0.138312,-5.035281,2.972182,0.584201,6.264151,6.567302,-5.663629,4.785936,-4.195063,-2.915764,-8.089216,7.039225,1.727548,-0.838671,-6.630264,-1.578336,2.617115,-8.673110,-4.059972,-0.610179,8.658318,1.768784,-5.643700,8.884933,1.257933,2.917955,2.401699,-0.467322,1.878911,6.179692,-6.040411,-9.686865,-2.306941,3.873049,2.448808,3.311456,0.425005,-4.186285,6.367117,-4.242570,4.085646,-3.927944,8.571900,-5.220942,4.909623,-9.002108,1.225815,4.103850,8.378803,-9.694748,-9.172235,5.912982,-3.737670,8.786596,4.089039,-1.316870,6.091846,2.297442,7.578335,-8.834572,4.301399,8.307239,8.049246,8.248353,8.599775,2.660788,1.153477,1.956014,-1.459679,0.013474,-5.523308,0.203503,-2.477626,-5.500154,-4.115992,-7.155419,7.465297,-7.632505,-2.788813,-9.513960,-3.401406,3.268190,-8.753816,3.547167,6.623534,4.089385,1.551180,8.237913,9.866605,3.513335,-8.806487,-8.869810,0.543758,0.992024,-7.257495,8.219613,8.879014,-6.922765,6.926652,4.466603,-5.200351,6.908170,6.881388,4.158760,-0.101574,-5.098433,-8.279825,7.383883,0.433468,2.853318,-9.943338,-3.651395,5.516999,7.273790,5.490742,4.797717,6.621881,5.095178,3.684135,-8.259650,6.788656,3.397205,0.873743,-3.969807,6.196801,-1.948263,-4.297792,2.703261,8.323074,5.680976,4.738823,-9.750888,7.441765,0.222346,-3.374812,-5.077873,-5.755293,7.867154,-7.744734,6.251737,9.507214,9.644220,-1.143479,0.425920,-1.763617,-2.404780,5.117699,-2.308262,-8.649808,1.622729,0.103727,0.493626,9.754688,1.832435,-6.274382,8.926694,-5.334748,6.452870,-5.811768,-6.906205,4.064510,-3.555655,3.137215,2.310888,7.419142,-2.063825,4.460981,-8.737629,-6.794815,-5.072862,-7.709282,-7.054890,0.797976,-8.394227,-5.100337,-7.253644,8.302427,-5.822774,2.358312,9.743252,4.003895,-8.971582,0.577397,8.401009,-6.180884,-2.216846,-0.846690,-2.484948,-2.835282,0.774071,1.406948,6.979149,-3.235762,-9.079196,8.439996,-0.135733,4.707523,6.455389,-3.918383,7.496881,7.867801,5.232744,-6.018203,8.748315,-4.300720,-6.460331,-1.380581,1.465812,1.516614,-0.719225,9.192171,2.404532,1.125467,0.769410,-9.449398,6.484796,-3.400527,1.697601,-7.024866,1.431832,8.681576,-8.082830,4.922109,-1.934807,1.080801,-3.241474,-1.820403,-6.029834,-0.893124,4.233540,-1.543226,-6.540639,1.281567,6.274231,-4.847461,1.955923,-2.509030,9.653654,3.357976,3.625618,1.824615,5.694866,2.997786,9.174353,5.527824,-3.842129,2.583663,-9.962146,-5.923311,-0.017023,-8.931916,-0.992119,-7.976237,7.560265,-1.926291,-1.007843,-8.800821,0.451878,6.887253,3.230492,0.883575,-1.365630,2.909253,6.192975,5.707223,-0.722212,7.278700,-3.780454,9.351883,9.747656,-4.350339,3.577224,6.100739,0.763908,8.951420,8.398226,-8.455323,-8.395906,-0.806147,-9.205719,1.696634,-7.049737,2.416669,-0.075887,-1.064060,-8.330507,-8.372742,2.586958,-0.179225,-8.851514,2.745944,-2.102761,-1.553291,7.373260,9.850184,-6.452538,7.793920,7.341325,1.320354,7.352066,-7.353052,3.197108,6.917496,-9.525057,1.428646,7.957198,1.952785,-5.861337,-5.686132,-0.039591,2.126267,3.440875,0.878129,-0.335968,-9.558305,-4.433495,9.801959,0.674236,-7.484204,7.741421,8.326254,0.362194,-2.598516,-4.342576,3.486445,-1.752652,9.579332,0.133267,3.408858,6.531328,0.331363,-1.403172,3.523853,1.116475,9.933565,3.441153,-1.576937,0.450173,8.684837,4.809250,5.080062,9.350282,6.859191,6.769288,-3.826504,7.622651,8.435646,8.306966,0.233702,-4.861998,8.136544,6.460641,-7.894392,-1.768509,-2.352581,3.683284,-9.197749,-9.822407,2.876461,-1.064694,1.554017,-1.096475,6.869683,0.400562,-8.950236,7.578152,-1.498288,4.367001,-3.386278,-2.515077,-5.623095,-4.227450,-0.133629,-9.447635,-8.669413,-6.417809,-0.766820,-3.978907,-2.391714,0.544256,-9.230102,-5.410159,7.848881,6.209284,4.389400,2.942856,4.737571,-7.137206,-5.469623,-4.884091,3.074227,-3.688732,6.992979,0.929789,6.160602,-1.993897,-2.289377,-9.261840,1.733686,5.728151,8.434050,-6.529083,-3.376146,-8.607701,2.569377,7.196024,3.333979,0.422621,7.092952,-7.732634,6.137969,-0.891795,0.792631,4.031101,-7.655602,-1.037227,0.446805,4.172363,6.694635,3.654067,-7.949074,-9.909696,-5.925643,-7.400938,-0.735823,-8.960779,7.658903,6.755831,2.754278,7.897883,6.328994,3.742541,-6.169106,-0.059294,8.757669,9.349946,8.239810,1.399980,3.238806,1.107477,4.827482,9.582104,-7.235371,4.727338,7.214067,6.483658,-2.551152,-3.229078,9.018339,1.470736,-9.924880,-7.965241,-6.361060,5.903108,6.896162,0.475335,4.551334,-9.448267,-9.603756,3.416049,-8.529037,-0.116862,-1.288857,-8.047686,-6.519325,-3.603273,-4.821875,-2.848061,-8.598785,-8.946906,-0.909315,-6.260093,-5.643120,8.152572,5.655967,-5.795637,3.479928,-1.498261,3.824024,-3.748705,-3.208583,-6.374581,0.597540,3.647512,3.486761,-6.214899,-4.884400,7.777788,9.537364,3.054166,8.315724,-8.918384,-4.071703,-7.927241,5.124516,9.268384,9.776353,-0.998531,-2.192612,9.128836,0.816474,8.266058,-0.089669,-7.506850,8.232538,-8.077828,-0.007016,-6.809377,-4.123177,-1.093818,2.089201,8.009511,-7.768014,3.806901,-0.332301,-7.616376,-0.036064,9.566402,-9.011706,-7.203549,8.641389,-8.963096,-9.102179,-1.527022,-5.740873,-1.524149,8.171286,-2.945315,-5.991528,-4.286531,-9.216140,-0.983700,8.237971,-2.907862,-8.808288,5.334595,2.742972,8.831461,-8.612076,-3.902805,-0.832630,-7.957179,2.143262,7.107133,0.459428,-1.373921,-3.275787,-4.876012,-4.880915,1.732693,-9.495550,-3.136549,9.043857,6.689973,6.347669,-4.568128,-8.702137,7.912046,6.562955], dtype = "float64")#candidate|10809|(1344,)|const|float64
call_10808 = relay.TupleGetItem(func_1767_call(relay.reshape(const_10809.astype('float64'), [12, 7, 16])), 0)
call_10810 = relay.TupleGetItem(func_1769_call(relay.reshape(const_10809.astype('float64'), [12, 7, 16])), 0)
output = relay.Tuple([call_10742,bop_10768,call_10777,const_10778,call_10786,call_10790,call_10797,call_10808,const_10809,])
output2 = relay.Tuple([call_10743,bop_10771,call_10779,const_10778,call_10787,call_10791,call_10798,call_10810,const_10809,])
func_10825 = relay.Function([var_10756,var_10767,], output)
mod['func_10825'] = func_10825
mod = relay.transform.InferType()(mod)
var_10826 = relay.var("var_10826", dtype = "int32", shape = (1040, 7))#candidate|10826|(1040, 7)|var|int32
var_10827 = relay.var("var_10827", dtype = "int32", shape = (1040, 7))#candidate|10827|(1040, 7)|var|int32
output = func_10825(var_10826,var_10827,)
func_10828 = relay.Function([var_10826,var_10827,], output)
mutated_mod['func_10828'] = func_10828
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8358_call = mod.get_global_var('func_8358')
func_8359_call = mutated_mod.get_global_var('func_8359')
call_10861 = relay.TupleGetItem(func_8358_call(), 0)
call_10862 = relay.TupleGetItem(func_8359_call(), 0)
var_10867 = relay.var("var_10867", dtype = "float64", shape = (14, 7, 7))#candidate|10867|(14, 7, 7)|var|float64
bop_10868 = relay.left_shift(call_10861.astype('int32'), relay.reshape(var_10867.astype('int32'), relay.shape_of(call_10861))) # shape=(14, 7, 7)
bop_10871 = relay.left_shift(call_10862.astype('int32'), relay.reshape(var_10867.astype('int32'), relay.shape_of(call_10862))) # shape=(14, 7, 7)
output = bop_10868
output2 = bop_10871
func_10872 = relay.Function([var_10867,], output)
mod['func_10872'] = func_10872
mod = relay.transform.InferType()(mod)
mutated_mod['func_10872'] = func_10872
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10873 = relay.var("var_10873", dtype = "float64", shape = (14, 7, 7))#candidate|10873|(14, 7, 7)|var|float64
func_10872_call = mutated_mod.get_global_var('func_10872')
call_10874 = func_10872_call(var_10873)
output = call_10874
func_10875 = relay.Function([var_10873], output)
mutated_mod['func_10875'] = func_10875
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10879 = relay.var("var_10879", dtype = "float32", shape = (1, 16, 10))#candidate|10879|(1, 16, 10)|var|float32
uop_10880 = relay.atan(var_10879.astype('float32')) # shape=(1, 16, 10)
output = relay.Tuple([uop_10880,])
output2 = relay.Tuple([uop_10880,])
func_10883 = relay.Function([var_10879,], output)
mod['func_10883'] = func_10883
mod = relay.transform.InferType()(mod)
var_10884 = relay.var("var_10884", dtype = "float32", shape = (1, 16, 10))#candidate|10884|(1, 16, 10)|var|float32
output = func_10883(var_10884)
func_10885 = relay.Function([var_10884], output)
mutated_mod['func_10885'] = func_10885
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10659_call = mod.get_global_var('func_10659')
func_10660_call = mutated_mod.get_global_var('func_10660')
call_10895 = relay.TupleGetItem(func_10659_call(), 0)
call_10896 = relay.TupleGetItem(func_10660_call(), 0)
uop_10897 = relay.log(call_10895.astype('float64')) # shape=(13, 14, 15)
uop_10899 = relay.log(call_10896.astype('float64')) # shape=(13, 14, 15)
output = relay.Tuple([uop_10897,])
output2 = relay.Tuple([uop_10899,])
func_10907 = relay.Function([], output)
mod['func_10907'] = func_10907
mod = relay.transform.InferType()(mod)
output = func_10907()
func_10908 = relay.Function([], output)
mutated_mod['func_10908'] = func_10908
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7323_call = mod.get_global_var('func_7323')
func_7324_call = mutated_mod.get_global_var('func_7324')
call_10976 = relay.TupleGetItem(func_7323_call(), 0)
call_10977 = relay.TupleGetItem(func_7324_call(), 0)
output = call_10976
output2 = call_10977
func_10985 = relay.Function([], output)
mod['func_10985'] = func_10985
mod = relay.transform.InferType()(mod)
output = func_10985()
func_10986 = relay.Function([], output)
mutated_mod['func_10986'] = func_10986
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8436_call = mod.get_global_var('func_8436')
func_8438_call = mutated_mod.get_global_var('func_8438')
call_10987 = func_8436_call()
call_10988 = func_8436_call()
func_9345_call = mod.get_global_var('func_9345')
func_9346_call = mutated_mod.get_global_var('func_9346')
call_10991 = relay.TupleGetItem(func_9345_call(), 0)
call_10992 = relay.TupleGetItem(func_9346_call(), 0)
uop_11003 = relay.asinh(call_10991.astype('float32')) # shape=(7, 12, 14)
uop_11005 = relay.asinh(call_10992.astype('float32')) # shape=(7, 12, 14)
output = relay.Tuple([call_10987,uop_11003,])
output2 = relay.Tuple([call_10988,uop_11005,])
func_11006 = relay.Function([], output)
mod['func_11006'] = func_11006
mod = relay.transform.InferType()(mod)
mutated_mod['func_11006'] = func_11006
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11006_call = mutated_mod.get_global_var('func_11006')
call_11007 = func_11006_call()
output = call_11007
func_11008 = relay.Function([], output)
mutated_mod['func_11008'] = func_11008
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7724_call = mod.get_global_var('func_7724')
func_7725_call = mutated_mod.get_global_var('func_7725')
call_11022 = relay.TupleGetItem(func_7724_call(), 0)
call_11023 = relay.TupleGetItem(func_7725_call(), 0)
func_724_call = mod.get_global_var('func_724')
func_728_call = mutated_mod.get_global_var('func_728')
var_11043 = relay.var("var_11043", dtype = "float64", shape = (1584,))#candidate|11043|(1584,)|var|float64
var_11044 = relay.var("var_11044", dtype = "int64", shape = ())#candidate|11044|()|var|int64
const_11045 = relay.const([-9,2,6,-7,8,10,-5,-9,-3,-5,4,-8,-10,3,7,-5,2,6,-1,-9,-7,10,-3,-4,-9,3,-2,-10,-4,-8,10,7,-3,2,-10,-4,-3,-6,5,-5,6,-10,1,-3,-4,5,-6,-5,-7,-2,-1,-3,-3,1,8,-6,3,7,7,-8,10,-4,8,-5,8,4,-6,-2,-4,8,-8,-8,-10,5,-4,-8,-6,9,2,1,-3,-9,-9,-7,5,-7,-10,4,-2,5,3,8,-6,5,3,7,-8,5,7,-2,-7,-5,-4,7,9,-1,7,-4,-8,-10,3,-7,6,-8,-5,-7,-9,-1,3,-10,10,-5,-1,-10,7,10,-9,-1,-10,-8,-1,-9,-7,-5,8,3,9,7,-8,-6,8,5,2,4,8,9,9,2,-10,-8,-4,-8,-10,10,-3,3,4,-3,-5,-10,-1,2,9,-5,1,-7,4,-8,2,4,-6,-9,4,-9,-8,-4,2,-8,10,-9,-9,-9,-4,9,7,-3,8,-5,5,3,-5,-4,-5,-7,6,-7,6,9,-3,6,-10,2,1,2,3,1,4,-6,-8,3,3,-10,-6,-9,-5,-8,5,3,-9,-4,-2,-2,-8,5,-3,9,-8,5,8,-2,8,-8,-2,-9,-5,5,7,4,-8,-3,-5,9,3,-9,5,-4,3,-7,2,-6,-10,4,10,3,5,1,8,5,-1,2,8,-10,-5,-6,5,-4,4,-10,-6,-4,-1,-2,2,-10,-2,8,6,10,7,10,9,4,-4,8,1,10,5,-9,-9,-10,1,10,-8,-3,-6,6,9,-9,-8,2,8,-9,3,-2,9,5,1,-1,8,5,-7,9,3,-10,6,-10,5,1,-9,2,6,2,-3,-8,7,4,4,-1,-3,10,2,-6,-1,-6,-10,2,4,-5,7,5,-5,-9,2,10,10,5,-1,-10,5,-7,-4,3,3,4,-9,5,10,5,-3,-7,4,-8,2,1,3,4,-7,5,5,3,10,10,-3,2,-1,-10,1,-1,-7,10,-10,-7,-3,8,-4,2,10,-4,8,-8,2,-3,9,6,6,-6,-4,5,7,-5,-6,-7,-10,9,4,4,-9,-1,-3,-2,4,-7,-3,6,-6,3,8,10,10,6,9,1,9,4,-8,-10,6,-1,-10,9,7,-1,3,-3,-1,8,-10,-5,1,-10,-8,1,10,3,8,7,5,10,-9,2,3,9,-6,-2,-6,6,-3,-9,9,-2,-5,4,-8,9,-1,-7,-8,-8,3,-3,-2,-4,-6,-5,-5,3,7,10,-6,-3,10,3,-10,-4,1,-1,-4,8,-8,-6,2,-4,9,-4,-5,-3,-1,-2,-7,4,-2,1,-2,6,3,-4,1,4,2,-6,9,1,-6,-2,7,-3,3,-5,-4,-4,4,2,5,-7,5,5,5,-3,9,5,1,7,3,-8,4,4,9,-7,-1,5,-10,-10,-8,-9,8,7,4,-3,5,-6,3,-8,5,9,2,3,-6,-8,-8,3,2,5,-3,5,-10,-8,-10,-7,4,4,-2,7,-2,4,3,-5,-9,-1,1,-10,-8,5,-5,-4,8,4,-6,10,5,7,-3,-2,-3,5,-2,4,-5,7,-1,8,10,-1,-2,-4,5,4,-4,-10,-1,10,2,-3,-4,7,-1,7,9,-8,9,6,5,-1,8,5,-10,5,2,-9,8,4,-4,-1,-10,-2,2,4,1,6,9,-1,8,-1,5,9,-9,-3,7,-4,4,8,5,5,7,5,5,-5,5,-5,7,4,-10,-8,2,4,9,3,-1,-10,-4,-4,-3,5,-4,-8,6,-8,-8,3,-8,5,-6,1,-1,-6,10,-3,9,-2,-8,-6,10,-1,10,-8,1,-8,-2,-4,2,5,10,-6,7,3,-6,-4,-3,-7,-10,-3,-6,8,10,10,-2,5,-6,4,-6,-3,-8,-1,1,-5,-2,-2,9,-8,-1,-2,-5,8,5,5,9,-6,-4,-7,4,7,-2,4,-10,10,-1,4,-9,-7,4,-8,1,-9,10,1,-10,1,9,3,10,-1,-6,-6,9,9,-5,-6,10,3,-5,-5,-5,9,2,5,5,-2,1,6,-1,-3,2,3,9,2,-10,-9,3,-1,7,-6,2,-5,-6,-2,6,3,9,1,-2,1,2,-9,5,-10,5,-7,2,9,3,-2,9,10,-1,-7,6,7,6,-2,5,5,6,7,4,-7,-7,9,-4,7,9,-10,-10,2,-4,-6,4,1,3,-9,3,-5,5,-8,2,8,-9,-8,-7,4,-5,-2,-4,-9,10,4,-4,-6,5,-9,1,-2,-6,-9,1,4,-6,4,-1,6,3,-7,-9,5,10,2,-1,-2,-5,10,6,9,-4,1,6,-7,5,5,8,1,5,-9,-8,-3,-4,8,-1,-2,-1,-8,-8,7,10,1,-3,-6,-6,7,8,10,5,9,-6,-10,-2,8,-5,5,-9,3,-1,-10,-4,2,9,1,9,-9,-3,-5,-7,-6,8,-8,-10,-8,-10,7,-7,5,10,-9,9,5,7,4,-3,-6,4,9,-5,-2,-7,-6,-7,-2,8,-5,1,9,-9,2,5,-2,-4,-10,8,-1,-10,-3,9,-3,9,5,7,-6,7,8,-7,-1,-1,-7,3,-8,-4,-2,-6,-1,-5,5,-10,-8,-10,-9,7,8,-10,-1,-3,-8,9,2,-6,-2,-7,3,-7,-4,-7,4,2,-6,-8,-5,-7,10,4,-3,2,1,2,7,-5,8,6,10,5,10,2,-2,10,-4,3,5,5,-5,10,-8,-4,8,10,8,3,-7,-5,5,3,10,-7,9,2,8,-7,8,-5,-1,-4,8,-7,4,6,-7,-9,4,3,7,-9,-7,3,8,-2,1,-8,-5,6,8,7,10,4,1,7,-5,4,1,-7,-5,7,-7,7,-1,9,2,5,-3,5,-8,-5,7,5,7,8,-3,10,-4,-9,-7,-4,-6,10,-10,5,-7,3,10,-3,-9,10,8,1,-4,-6,-1,-9,-1,-8,6,-1,6,7,9,4,1,-2,-4,10,5,1,6,5,-1,-8,-8,9,2,-9,-8,-1,-9,-9,-7,-2,-6,-8,-3,10,6,8,-9,-8,-5,-2,-2,-1,7,5,-10,6,-10,-8,7,-6,8,-7,-2,-5,-1,-9,1,5,1,-2,9,-7,-2,3,-3,-2,-4,7,3,-5,9,9,-6,-8,8,-8,-5,7,7,9,-2,2,-10,-4,-1,7,-4,1,-5,-7,-8,10,-7,3,1,-8,2,9,-9,5,3,-1,2,-9,1,-10,10,-4,-8,-2,8,-2,-10,-2,-3,8,-9,-6,-10,-8,10,10,9,-6,-1,-8,10,9,10,-8,6,-10,4,-10,1,-5,-5,1,-1,2,7,10,9,-7,1,-1,-1,6,9,8,-1,2,-10,-1,-10,-10,3,4,1,9,7,9,-5,1,-8,-5,-4,6,-10,4,1,6,-5,-4,-2,-6,-6,-4,7,-4,-6,5,-8,3,-1,-7,-10,6,3,-2,4,-5,3,1,7,-7,8,3,5,1,5,-8,-1,2,4,-3,2,-1,7,6,-9,7,5,3,-9,5,2,-1,-8,9,9,-2,-7,-7,-7,8,-6,-5,-8,2,-1,-1,2,8,-7,4,8,-6,-1,1,5,-5,-6,-1,-7,2,-10,2,9,4,6,1,-3,9,1,3,-1,7,1,2,3,-7,-10,-6,1,-4,-5,-1,3,4,1,-2,-10,-10,10,-8,-7,-3,5,4,9,-1,3,5,-3,4,8,4,6,8,5,7,2,9,-1,-1,2,-5,5,5,-8,-2,4,8,-10,-5,4,-9,4,-2,-4,7,5,3,1,8,6,10,5,-9,4,-2,-8,3,-10,8,7,9,7,-4,1,-10,3,6,-7,5,-1,-10,-9,-2,9,4,-7,-2,5,5,-7,3,-6,-7,4,-4,10,-3,-8,-1,-6,5,-6,-10,-2,-8,-1,-10,-10,1,1,-8,-1,2,-7,-8,-8,8,1,-6,2,-3,-5,-3,-2,-6,10,-5,-6,-2,-10,7,5,-1,-3,1,-10,-10,9,-9,-8,3,-10,10,-5,-10,3,2,-3,4,1,3,2,-8,9,-2,-2,-4,1,-8,-6,-3,6,-9,-10,6,10,5,-3,3,-8,-8,9,-3,-7,9,1,-6,-7,7,8,1,3,2,-10,-7,-1,9,6,-10,-4,10,-1,4,9,-7,7,9,-3,5,7,2,-6,5,6,6,-6,-7,3,5,5,3,8,-1,2,-6,5,-8,-2,4,10,-10,-6,-3,2,-1,8,8,-5,-10,-4,-9,-8,-1,-9,10,5,-8,-9,-2,-9,-8,8,-6,7,-1,4,-4,-6,-5,-2,-6,7,9,-3,6,3,-8,2,-5,1,3,-7,-10,-6,8,9,6,-6,-3,6,-10,5,-2,-3,7,-3,9,-9,-3,-3,-2,4,2,5,-10,5,1,-9,7,2,-8,-6,4,-8,-10,-7,7,2,-1,3,9,-1,-7,5,-4,8,3,1,-9,4,1,-4,3,8,-3,3,-2,-2,7,-3,-6,5,4,7,-6,-5,-2,-7,-4,-7,9,-9,-6,-8,-10,-4,-3,-6,-6,2,-3,8,5,10,-2,8,-1,-10,10,10,10,-8,4,10,8,1,-9,9,-4,-3,8,-8,8,5,-8,10,10,3,-2,5,4,-1,7,-7,1,-9,-3,5,7,-1,-7,-4,-7,-5,9,8,8,-6,-1,5,-5,10,-1,9,-7,4,-9,2,-7,-6,-7,-2,6,-7,3,1,-6,5,-8,-7,5,8,2,-4,7,7,-4,6,-9,9,6,-9,2,2,-10,-4,2,3,-4,-5,6,-2,1,2,-2,1,2,-10,7,4,-3,-4,-2,1,3,4,5,2,5,-7,7,-3,-1,-3,7,6,6,6,-9,4,10,3,-6,-3,-9,8,-10,4,7,8,7,-5,7,10,8,-8,-4,6,-8,-10,1,2,10,1,-5,1,-6,-4,-8,9,-10,6,1,-3,5,3,-3,7,3,3,8,2,2,9,2,-8,6,-6,8,-4,-7,8,4,-5,3,6,6,7,4,8,3,-8,-1,-6,6,-3,8,4,5,10,-9,-1,-4,3,-2,2,10,-6,6,2,-3,6,-4,-3,10,-9,10,4,-6,-2,1,-6,5,1,-6,-5,6,10,2,1,7,-10,9,2,2,-6,9,-3,-5,-8,-5,-10,6,3,3,7,3,8,-3,9,-6,8,8,10,6,-6,10,-4,-6,-2,10,-1,-9,6,1,7,2,-1,-9,-6,8,7,-10,6,-7,-6,-10,-1,8,-2,7,-4,-9,9,-7,-4,-7,-7,-4,-6,1,-8,-9,-3,10,-5,7,6,-6,3,-8,-2,-9,-5,-10,-4,2,-4,-4,-7,-2,-1,-4,4,-2,5,5,-8,-4,9,-1,-7,-4,-4,-7,5,5,-10,-5,-9,3,-6,1,5,6,-9,7,-1,-6,1,8,-7,-2,-2,-3,-5,-4,5,6,1,3,8,-6,1,6,7,8,8,1,8,-2,-8,-3,-4,-2,8,4,5,8,4,-8,7,5,5,-7,9,3,6,2,-4,4,2,-1,-10,3,-1,4,-6,-5,-4,1,2,3,-1,-9,-3,-6,-2,4,-3,7,7,-4,-2,-1,3,-2,-7,4,-3,-10,7,1,-2,-3,-1,1,-4,2,-7,-2,6,-5,2,10,4,2,-7,-1,8,-6,-6,9,-5,6,4,2,6,5,-9,-3,-5,2,-8,3,-9,-6,-7,5,-6,3,2,1,5,6,-1,6,-4,9,1,7,-2,-7,8,4,4,5,5,6,4,-3,-4,4,-7,-9,7,-10,-9,-2,8,2,-3,2,6,9,3,-6,1,5,3,8,-10,-10,5,9,-8,-7,-9,-1,8,-7,-2,-6,-3,10,-4,7,-9,4,-1,-7,-5,1,5,1,2,2,10,-6,8,-8,-6,-6,-4,-9,5,-3,2,4,-8,9,-2,-3,-9,-5,6,-9,10,7,6,-8,-2,1,9,-1,2,-4,-3,5,7,-10,5,3,-3,-1,6,9,-4,-4,-8,7,-5,2,-9,9,-9,7,6,-1,-2,-9,-4,10,9,-9,7,6,-9,1,5,4,-8,-10,-2,-7,-1,-7,-5,3,1,2,7,1,4,4,1,-5,-8], dtype = "int64")#candidate|11045|(2304,)|const|int64
call_11042 = relay.TupleGetItem(func_724_call(relay.reshape(var_11043.astype('float64'), [16, 11, 9]), relay.reshape(var_11044.astype('int64'), []), relay.reshape(const_11045.astype('int64'), [2304,]), ), 2)
call_11046 = relay.TupleGetItem(func_728_call(relay.reshape(var_11043.astype('float64'), [16, 11, 9]), relay.reshape(var_11044.astype('int64'), []), relay.reshape(const_11045.astype('int64'), [2304,]), ), 2)
output = relay.Tuple([call_11022,call_11042,var_11043,var_11044,const_11045,])
output2 = relay.Tuple([call_11023,call_11046,var_11043,var_11044,const_11045,])
func_11054 = relay.Function([var_11043,var_11044,], output)
mod['func_11054'] = func_11054
mod = relay.transform.InferType()(mod)
mutated_mod['func_11054'] = func_11054
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11054_call = mutated_mod.get_global_var('func_11054')
var_11056 = relay.var("var_11056", dtype = "float64", shape = (1584,))#candidate|11056|(1584,)|var|float64
var_11057 = relay.var("var_11057", dtype = "int64", shape = ())#candidate|11057|()|var|int64
call_11055 = func_11054_call(var_11056,var_11057,)
output = call_11055
func_11058 = relay.Function([var_11056,var_11057,], output)
mutated_mod['func_11058'] = func_11058
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7778_call = mod.get_global_var('func_7778')
func_7779_call = mutated_mod.get_global_var('func_7779')
call_11070 = relay.TupleGetItem(func_7778_call(), 0)
call_11071 = relay.TupleGetItem(func_7779_call(), 0)
func_8436_call = mod.get_global_var('func_8436')
func_8438_call = mutated_mod.get_global_var('func_8438')
call_11086 = func_8436_call()
call_11087 = func_8436_call()
func_8959_call = mod.get_global_var('func_8959')
func_8961_call = mutated_mod.get_global_var('func_8961')
call_11092 = func_8959_call()
call_11093 = func_8959_call()
func_8297_call = mod.get_global_var('func_8297')
func_8298_call = mutated_mod.get_global_var('func_8298')
call_11094 = relay.TupleGetItem(func_8297_call(), 4)
call_11095 = relay.TupleGetItem(func_8298_call(), 4)
func_8813_call = mod.get_global_var('func_8813')
func_8814_call = mutated_mod.get_global_var('func_8814')
call_11103 = relay.TupleGetItem(func_8813_call(), 0)
call_11104 = relay.TupleGetItem(func_8814_call(), 0)
var_11113 = relay.var("var_11113", dtype = "uint8", shape = (275, 3))#candidate|11113|(275, 3)|var|uint8
bop_11114 = relay.bitwise_and(call_11094.astype('uint16'), relay.reshape(var_11113.astype('uint16'), relay.shape_of(call_11094))) # shape=(275, 3)
bop_11117 = relay.bitwise_and(call_11095.astype('uint16'), relay.reshape(var_11113.astype('uint16'), relay.shape_of(call_11095))) # shape=(275, 3)
uop_11121 = relay.log10(var_11113.astype('float64')) # shape=(275, 3)
output = relay.Tuple([call_11070,call_11086,call_11092,call_11103,bop_11114,uop_11121,])
output2 = relay.Tuple([call_11071,call_11087,call_11093,call_11104,bop_11117,uop_11121,])
func_11132 = relay.Function([var_11113,], output)
mod['func_11132'] = func_11132
mod = relay.transform.InferType()(mod)
mutated_mod['func_11132'] = func_11132
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11133 = relay.var("var_11133", dtype = "uint8", shape = (275, 3))#candidate|11133|(275, 3)|var|uint8
func_11132_call = mutated_mod.get_global_var('func_11132')
call_11134 = func_11132_call(var_11133)
output = call_11134
func_11135 = relay.Function([var_11133], output)
mutated_mod['func_11135'] = func_11135
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8366_call = mod.get_global_var('func_8366')
func_8368_call = mutated_mod.get_global_var('func_8368')
call_11141 = func_8366_call()
call_11142 = func_8366_call()
output = call_11141
output2 = call_11142
func_11156 = relay.Function([], output)
mod['func_11156'] = func_11156
mod = relay.transform.InferType()(mod)
mutated_mod['func_11156'] = func_11156
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11156_call = mutated_mod.get_global_var('func_11156')
call_11157 = func_11156_call()
output = call_11157
func_11158 = relay.Function([], output)
mutated_mod['func_11158'] = func_11158
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9109_call = mod.get_global_var('func_9109')
func_9111_call = mutated_mod.get_global_var('func_9111')
call_11176 = relay.TupleGetItem(func_9109_call(), 0)
call_11177 = relay.TupleGetItem(func_9111_call(), 0)
func_10439_call = mod.get_global_var('func_10439')
func_10442_call = mutated_mod.get_global_var('func_10442')
var_11180 = relay.var("var_11180", dtype = "int32", shape = ())#candidate|11180|()|var|int32
const_11181 = relay.const([-10,2,-2,9,3,5,8,7,-4,-7,-1,-4,7,-1,6,4,6,-7,-2,6,-4,-1,5,-4,-7,5,3,8,-7,-5,-10,-9,5,-3,-6,-2,1,3,-1,4,9,5,9,10,-6,-10,-5,1,7,-7,-4,-3,2,1,-6,-3,-4,-5,-4,10,-3,6,-9,8,-4,1,5,5,4,1,10,-3,4,9,4,-10,10,-6,7,-9,10,9,5,-1,1,-7,7,5,-9,-9,-4,1,-7,4,-1,-4,-2,6,-8,-6,-10,10,-4,-7,1,-7,7,10,-5,7,-9,6,-4,1,-1,1,-4,7,5,-1,3,3,6,-1,10,-8,9,-10,-8,4,-2,9,5,-3,3,9,2,4,-5,-2,5,4,5,8,7,-3,9,4,-1,6,-1,-7,-7,4,8,-7,-3,10,4,-1,9,1,-7,2,2,-1,-5,7,-1,-3,4,-3,-10,-4,8,5,-1,-5,-1,-6,7,5,6,-3,10,6,-6,2,-2,8,4,-9,-2,-5,3,8,-9,-1,5,-1,-10,3,-6,9,1,-1,-5,-2,-7,1,-6,-2,-4,-9,-7,-7,7,-10,-3,10,8,-9,-4,-1,-7,10,3,-8,5,5,-10,-8,10,-10,8,-9,3,-1,-10,-5,7,10,-9,7,10,7,-4,-6,4,-1,6,-9,7,-6,-4,-4,8,1,2,5,-1,1,9,2,-3,-4,-3,10,4,-7,-6,-9,4,-4,-9,-10,1,-6,1,2,10,-3,-10,3,8,2,2,8,1,-6,-1,1,-2,-2,4,6,-3,-9,3,-7,-3,-3,-10,4,-3,4,-9,-5,1,-3,-3,-2,-10,-9,2,-4,-5,-3,9,8,10,-7,-8,-1,2,-7,4,3,-8,-7,-8,-7,-9,10,8,2,-2,6,-1,-3,10,10,-9,8,-5,10,-5,6,9,-3,-6,4,4,-9,8,8,4,-2,10,2,4,-9,-3,4,-3,-9,-2,6,-5,-10,9,-3,-5,7,6,3,3,10,6,-8,-2,7,-1,7,8,-1,5,-3,10,10,-9,-5,-4,8,2,1,2,8,-1,-1,4,9,7,-4,9,-2,-6,3,-5,-3,9,-9,-2,-6,1,3,1,-7,-3,5,2,2,-6,1,8,-6,-6,7,1,-2,-3,10,-6,-2,7,-10,-5,-8,-9,-10,-10,5,-1,-5,-8,-9,-1,-4,-7,5,2,-2,10,-7,10,8,-2,-10,-7,-7,2,-5,4,-10,-6,4,2,6,-7,-3,-8,9,-5,-7,3,-7,-2,8,4,9,-4,-7,-9,10,-5,5,7,-7,4,-5,10,2,6,7,9,-9,7,1,8,3,6,1,3,-8,-4,4,6,-3,5,2,4,-8,7,8,-3,-3,1,6,1,-3,-6,-6,-2,-5,-9,-4,8,3,-3,1,3,9,-7,2,-7,-3,-1,-5,10,-1,-5,-1,6,8,-6,-7,4,-5,-1,9,1,10,4,4,-3,2,-9,-3,-6,4,2,3,7,7,6,-7,9,-8,3,9,-8,-6,-6,9,1,-6,-5,7,8,2,-9,10,6,-4,-1,-5,-6,3,3,3,-5,7,7,-6,7,6,4,-5,-3,9,2,2,-8,-7,7,5,1,6,5,3,-9,-9,7,5,-4,6,10,-3,3,1,4,-5,-7,2,-2,-3,8,-4,-7,8,3,7,-4,-6,-2,8,-3,10,-6,4,-9,-9,-1,3,1,-9,-7,-2,1,-7,-4,-1,-2,9,-5,-3,9,3,-4,8,-8,-2,7,6,-1,-1,10,2,-4,9,1,4,-4,10,3,-5,-8,8,2,-3,6,6,7,9,8,-9,-10,8,9,-3,-7,7,-7,1,8,-10,10,-2,5,-8,-7,-3,1,-10,1,-5,4,-4,-7,-8,-2,9,8,9,-3,8,8,-5,-3,9,8,2,8,-3,-2,-1,-3,6,-4,-5,-6,4,-2,-2,6,7,-9,-8,-5,-3,-3,-3,7,-6,-8,5,-3,7,2,10,-3,3,-6,-9,5,-1,-8,-5,-8,5,3,10,-1,-1,8,-10,-10,1,8,-10,3,1,8,6,8,-1,-1,7,2,4,1,1,1,-7,1,3,-9,-5,2,-4,-1,1,10,4,8,-1,4,-10,3,7,7,8,-4,-4,4,-7,4,7,-6,5,-10,2,-8,2,-2,-5,-7,-6,6,9,9,-5,4,9,4,5,-10,-2,3,-10,-3,3,-8,2,10,-5,7,-4,-3,-2,-8,-5,-8,-9,-10,-6,-1,-2,-10,4,6,-1,-9,-6,9,-3,9,-7,6,-7,-2,9,4,4,-6,5,8,-6,4,-3,-10,-2,-6,-5,5,-1,5,-2,-1,-4,-7,-10,-9,-5,-6,8,7,-6,-10,-7,1,4,8,-6,6,-8,2,-9,-4,-4,3,10,-5,-4,5,2,9,-5,-3,8,2,-2,5,5,-6,-2,2,-8,8,4,5,-1,-1,3,-7,5,6,4,-9,-1,-8,3,-6,-9,-4,6,-8,-6,-1,-4,2,8,5,9,10,8,-4,-10,-3,-5,-1,-8,7,-9,-5,-9,-10,-4,10,10,7,6,8,-4,-6,-2,9,7,6,-8,-8,-9,-5,-3,10,5,-1,9,-8,2,1,2,-6,7,6,4,-4,2,7,4,-9,5,9,-1,6,-2,9,-6,-6,8,8,-8,6,2,5,1,7,6,-7,-7,-10,9,-5,-4,-9,3,-4,-10,2,4,-1,3,-8,-6,-6,9,1,7,6,-9,4,2,4,10,5,-3,-6,6,7,-2,-6,1,2,5,9,-3,-7,-3,-7,7,5,-10,-6,9,-8,-6,-2,4,-3,2,-3,7,9,1,2,-2,5,2,-8,-7,-9,-3,-8,-7,-5,4,-5,8,-2,-2,6,-3,-5,4,-5,-10,-4,7,9,4,6,-4,3,-5,-10,9,-10,-8,-7,-8,3,-9,10,-10,2,5,-6,-9,10,1,-8,7,-3,2,-9,-4,-8,-9,9,-9,5,-10,-4,7,-10,5,1,7,7,5,10,8,2,-8,9,3,5,7,2,-1,-4,-2,8,-8,1,-3,-5,-2,-10,-10,-10,-5,6,-4,5,3,-4,6,-6,-9,10,-1,4,-3,-4,5,6,8,-3,-10,-8,10,8,3,2,3,5,6,7,-6,-2,4,-3,10,7,-6,5,-8,-4,8,-5,8,5,1,-5,3,-8,-5,-1,8,-7,2,4,4,3,6,3,7,-9,-9,5,-4,-9,3,4,-8,8,2,2,-2,9,2,-1,1,-7,-4,2,-5,-7,-3,-2,3,-4,3,-2,-2,2,-5,3,5,-6,-2,9,3,6,6,-8,-7,5,-10,-7,-7,4,-4,-8,7,-7,4,4,1,-3,5,7,6,4,-10,6,-9,-9,-9,1,-1,-5,-4,2,9,4,7,-8,5,6,-2,-3,7,4,-1,2,-3,8,-3,3,-4,-8,10,3,-9,-1,3,1,-7,6,10,-9,2,-10,-8,9,-2,2,-6,-7,3,-7,9,-8,5,-4,3,-7,3,-2,-2,10,9,-6,-6,-9,1,9,3,6,-3,-2,6,-1,-7,-7,-3,3,-8,8,-1,4,4,2,3,5,2,2,9,6,-6,4,-9,-5,7,-4,-10,-2,4,-2,-6,2,-6,-6,8,10,-5,7,-3,-5,-6,1,-7,-2,9,-7,3,-10,4,6,8,-7,-2,6,-5,-8,-10,-8,-3,10,-4,-4,-6,8,2,1,-1,2,-1], dtype = "int32")#candidate|11181|(1400,)|const|int32
call_11179 = relay.TupleGetItem(func_10439_call(relay.reshape(var_11180.astype('int32'), []), relay.reshape(const_11181.astype('int32'), [1400,]), ), 2)
call_11182 = relay.TupleGetItem(func_10442_call(relay.reshape(var_11180.astype('int32'), []), relay.reshape(const_11181.astype('int32'), [1400,]), ), 2)
bop_11192 = relay.not_equal(const_11181.astype('bool'), var_11180.astype('bool')) # shape=(1400,)
func_10541_call = mod.get_global_var('func_10541')
func_10545_call = mutated_mod.get_global_var('func_10545')
const_11201 = relay.const([-4,-10,9,-5,10,7,8,-7,8,-3,-2,-8,3,2,-7,7,5,-2,-9,-5,-10,5,4,-5,2,7,6,-6,1,4,5,1,-1,2,1,10,-10,1,1,-6,1,6,9,6,-8,-9,-4,-2,-5,-6,4,8,-3,9,3,4,9,1,3,-9,8,5,10,8,4,2,9,3,8,-5,-7,7,10,5,5,-4,2,8,7,-7,-7,-8,-10,-8,2,1,2,-7,-8,-6,6,10,7,2,-2,-2,10,7,10,-10,3,-4,-1,-9,-5,4,3,1,-1,-6,10,6,-10,1,10,-2,5,8,-7,7,-2,-3,-6,-6,5,-2,2,8,10,-1,1,5,-1,5,2,2,-4,10,9,-9,-10,3,8,3,1,10,9,-9,10,8,6,5,-7,2,-3,-2,3,-4,-9,10,-10,3,6,10,7,-10,-10,-5,-2,-2,-9,7,-2,-2,9,-2,-2,10,6,-6,10,8,-10,6,1,8,-2,3,-7,4,6,-5,-10,8,7,-1,-9,6,3,3,7,3,6,5,10,9,7,8,-9,5,2,2,6,-3,9,2,-9,7,-10,9,2,-10,2,-6,4,-8,7,10,-9,2,-10,3,-9,7,3,-1,-3,-5,1,-7,-3,3,-8,-5,5,4,10,-5,10,-8,7,9,4,-9,7,2,-3,-2,-10,-8,4,10,-1,-5,-8,-3,4,-7,10,-5,-1,7,-6,7,-9,10,-6,9,5,8,7,-10,-5,-3,-2,2,-7,-1,1,8,-2,-3,-7,8,6,-7,7,-8,-4,-9,-9,-4,-1,1,3,-2,-6,-5,-7,6,9,8,3,-8,7,5,-10,6,4,-3,-5,-1,-2,-5,-1,4,-6,-4,10,-8,-3,7,-2,5,8,-2,-5,-3,1,-7,1,-2,6,6,2,-5,8,8,-2,-5,-3,3,-2,-6,-6,-7,4,4,5,-6,-5,-2,10,3,3,4,7,-5,-6,1,-3,7,-8,-5,-10,-2,1,-7,5,3,-8,-5,4,3,10,2,-4,1,9,-5,-9,5,2,-1,2,5,2,-6,-10,6,2,-3,6,-8,-10,-5,1,-8,-10,8,-4,-3,-2,3,-7,-2,-9,-7,9,-2,-8,9,-7,-2,8,10,-4,-8,-3,10,4,-10,7,9,-1,-6,-10,-8,-1,-3,-2,-3,-9,3,-4,1,-5,2,-8,-7,-4,8,7,10,-8,-9,7,7,2,7,2,-5,-8,-10,-10,5,-1,7,-1,-8,-1,9,10,5,5,10,-1,-8,-4,5,-7,-7,5,10,2,-5,6,2,-10,-8,10,-4,-2,7,-3,9,5,10,-9,-6,-8,-3,-6,10,3,-3,-7,1,-1,7,-3,6,2,7,-6,-4,3,1,-4,7,1,8,1,7,-10,-8,9,-2,-9,4,-2,-10,-8,8,3,9,7,10,-9,-10,1,3,-1,3,-3,-5,-7,-2,7,-7,5,-4,7,10,1,6,-9,2,-3,-2,-3,-1,-4,-5,5,3,10,-2,-1,5,-4,2,2,-5,-10,-3,-6,1,-9,4,10,4,5,9,8,-8,8,6,-5,-7,2,7,-6,9,-7,-1,-2,-9,1,-5,-3,-1,-6,-3,2,5,1,1,2,-5,4,-8,-1,5,4,-10,4,9,8,10,-1,-3,9,-10,-3,2,10,-6,-4,2,-3,-6,-4,7,-5,4,-4,-10,9,7,-6,-1,-8,9,8,-1,-4,7,2,-9,-3,-4,-8,-1,4,-10,7,-9,8,9,9,-6,9,-10,7,7,-2,4,-5,8,-5,2,-2,8,-10,8,9,2,-5,-8,-2,10,-5,-4,3,2,10,9,6,4,6,-7,3,-4,4,1,-8,9,-9,-4,5,-10,1,-9,-9,-4,2,-10,1,-5,6,10,-9,5,-2,-2,-8,-3,6,-5,4,7,-1,1,9,-6,2,-6,4,2,-4,-2,1,-9,-7,9,6,-7,3,8,6,6,1,-2,7,1,-10,-4,-10,7,9,-1,2,-1,-10,8,4,-5,-7,-10,-2,-6,5,3,-2,5,6,6,5,-4,10,-2,-5,-1,-5,9,-1,-10,-4,10,-7,9,10,-3,5,-10,9,-1,-9,1,1,-3,-6,7,-10,-7,-3,-8,2,-7,-1,3,-1,6,-5,7,-8,10,-3,-3,-5,8,5,-2,1,5,8,-2,4,-2,5,-7,-10,-7,6,-6,10,-1,-1,-3,2,-2,8,1,2,-3,5,-1,8,5,-8,3,4,3,6,-8,6,9,6,7,5,6,-9,2,5,-9,8,-10,-7,10,9,-2,-1,-8,-2,4,5,7,7,1,-9,-6,6,1,-7,9,-10,10,3,-8,-10,-10,4,-9,7,4,4,-4,4,-8,-8,-8,9,10,3,-4,-2,-10,-4,-5,10,-8,9,-9,-7,5,-3,4,8,-3,-1,6,1,-10,-4,5,-6,10,-5,8,3,7,-6,-9,4,7,-9,1,-6,7,7,4,7,7,-3,5,-10,-6,-3,3,7,7,3,-5,8,-9,-6,-8,-6,-4,-2,7,-1,-10,-7,4,-5,9,-10,4,-8,4,-5,6,7,-2,-9,5,-1,-6,10,-2,2,2,8,9,9,10,6,-7,6,-6,-8,4,-5,-8,2,-1,-1,-6,9,5,-3,-1,-10,3,-8,8,-9,-3,-5,-1,-1,3,3,3,7,9,-4,8,-9,-8,10,-10,2,-3,-6,-4,-5,3,6,-2,-5,-4,1,2,3,-8,-10,1,-4,9,-9,9,9,3,-9,2,-6,-2,6,-7,-6,3,-5,-5,9,1,6,1,3,5,-1,-5,-1,3,10,10,7,1,-6,-9,2,-2,-9,6,-8,-3,5,-5,-4,8,8,-2,-9,-7,1,3,-7,2,9,7,8,-8,5,-1,-4,4,7,9,1,5,1,5,-3,3,4,9,9,5,3,-4,7,10,-4,-9,2,-6,10,-10,-10,-4,4,-8,-3,8,1,2,2,1,1,-10,2,8,9,4,1,-6,1,8,9,9,-10,7,5,9,-7,-10,6,2,6,-7,-4,-1,-6,-1,7,-6,-5,10,-10,7,-7,-6,-5,-8,-6,7,9,7,9,10,-9,4,9,5,2,-9,-9,9,5,2,-6,1,6,-9,-7,-4,7,-2,1,-8,-9,1,-3,-1,-2,2,-3,1,3,6,-1,8,-8,6,6,-4,2,3,8,8,9,5,-2,-1,8,-7,-10,9,-5,-7,1,-6,-9,-2,6,-4,-9,7,7,8,-9,-4,-2,-5,10,-8,7,5,4,10,7,-7,5,8,3,-7,3,-1,6,9,-10,-6,10,3,-1,6,-7,2,8,-5,-6,-5,-4,3,2,4,9,-9,5,7,-4,-2,7,-4,4,7,-10,10,-9,-3,-4,-5,9,6,-5,-8,7,2,5,-8,-7,-10,7,10,2,-7,2,-1,-5,5,-9,10,4,-9,-10,-8,2,-4,10,5,9,10,3,10,-10,7,-7,-5,-1,-10,9,-5,-9,-10,-3,3,-6,-3,6,-6,-10,4,-1,8,1,-10,7,-3,-6,-5,7,-3,1,-1,-1,3,-9,-7,-6,-2,-5,1,-2,8,7,-7,1,7,-7,-1,5,-8,-1,-7,-1,5,-5,-8,1,3,1,-2,3,6,-8,-8,3,9,2,2,-5,1,-5,7,7,6,1,10,-7,-3,7,10,-7,3,-3,3,2,-9,3,5,-5,7,8,1,-6,-2,6,-1,1,10,-9,-5,7,9,10,-9,4,-1,3,-8,6,10,-4,-5,-6,-2,-8,-7,-10,6,-2,-5,10,1,-9,10,10,7,2,-2,7,-3,-8,-3,-1,-8,-3,-1,10,4,-2,-5,6,-10,-6,-7,6,-9,2,-5,-10,-8,-8,3,3,-7,4,1,4,10,-4,4,-7,-6,-6,4,6,6,-4,-1,-8,4,-8,6,6,5,-1,2,1,-10,9,-10,7,6,-7,-8,3,1,-7,-7,-10,-5,-1,-2,-4,-9,6,5,-9,5,-10,-3,5,6,10,6,-8,-3,-9,1,-7,8,4,-5,6,9,2,-9,-7,-8,-2,8,-9,-9,8,-4,4,6,-5,9,2,-5,9,1,1,-4,6,-3,5,-3,-5,7,7,5,6,-3,-1,3,4,-7,-5,-10,-5,6,-6,-2,-6,-10,4,-4,9,-1,8,4,9,-7,-4,-5,-9,-8,10,7,1,-8,3,7,1,-4,-3,-1,2,7,6,-5,-5,-3,3,10,5,10,1,-2,5,-1,6,1,3,-6,-3,7,3,10,10,-1,9,-5,-7,3,2,-10,-8,-8,10,4,-2,1,1,-3,-3,-7,6,-1,6,-4,-9,-9,-7,10,1,-1,4,-10,5,-7,-8,9,6,-6,5,3,6,1,-10,-1,6,4,5,-7,7,-7,8,-8,7,9,4,5,5,-1,8,4,5,-6,-1,-1,8,-3,5,3,3,-5,3,5,8,10,2,-2,3,-7,2,1,5,6,-3,-3,8,-3,8,8,-8,3,-4,6,2,2,-3,-4,8,10,9,-10,-1,-10,5,-6,8,-2,4,-2,3,-2,8,7,-6,-7,-10,1,-2,-10,-1,-9,-6,3,-10,10,-10,10,-8,4,-3,8,10,5,-2,-8,-1,-4,-9,-9,-4,2,1,10,10,5,4,9,5,-5,-8,2,1,8,-2,9,-8,-8,7,-8,1,-2,-9,1,4,-10,1,2,7,4,-9,-3,-5,5,8,-1,-9,8,-4,1,-6,-10,5,1,-4,-1,-9,9,5,6,-1,4,9,-9,2,-9,-3,7,1,-9,-4,-9,5,7,-3,-3,9,4,1,1,3,4,-10,-5,-3,-7,7,2,-3,-3,-1,3,-8,-7,10,4,7,3,-1,10,5,10,1,-5,8,-3,4,10,2,-1,-5,-10,-3,2,1,5,-7,-5,7,-7,8,6,5,-6,-5,-1,-1,5,-2,-9,8,7,1,6,-4,4,2,-3,-8,-5,-7,-3,5,-4,4,-2,-9,8,4,9,8,9,-5,-10,-3,-8,-9,-1,-1,-5,-8,5,-9,9,-8,1,-2,-9,-7,2,2,-2,-2,-9,-6,8,-3,-3,-8,6,-1,-4,-1,9,-2,10,10,-6,3,-7,-10,-6,8,5,-4,-1,-10,-5,10,9,-5,-5,-8,-9,-6,1,1,-7,7,-2,3,-5,10,3,1,1,10,-3,7,-3,-8,7,2,-8,-5,1,6,10,3,8,-5,2,-5,8,-6,-4,-5,-4,6,5,4,9,1,6,3,10,2,-7,-6,8,-6,-8,5,8,-6,3,3,10,3,8,1,-6,-1,-2,10,10,-4,8,2,1,3,8,7,-9,-3,6,4,-8,7,-1,10,4,10,3,10,-10,7,-10,-3,5,-4,1,-5,1,7,-10,3,-10,7,-5,-7,-1,-2,-9,8,2,-6,-9,1,4,4,-6,-7,-2,-10,-3,-1,-1,7,-7,-5,8,3,2,-1,-4,10,4,8,4,-2,-5,5,-7,10,-9,4,-6,-9,10,7,-7,-4,4,6,2,-9,2,-4,8,2,9,-7,2,7,5,8,1,-2,5,-7,5,-3,9,3,-3,5,2,1,9,8,2,-8,7,7,8,-9,9,-8,-1,-6,-10,8,-4,-6,5,-10,9,9,8,9,10,-8,10,-5,-1,-7,3,-2,4,-1,3,5,9,-1,-10,2,-8,8,8,-1,6,7,5,8,7,-8,3,6,9,-9,-6,10,-3,4,-2,8,6,9,5,9,-9,6,-2,3,8,2,-5,9,-9,-7,1,10,3,7,7,1,4,-7,10,8,2,-1,10,-6,5,1,1,1,1,1,5,3,1,-6,7,-8,-3,9,1,6,9,3,-1,3,4,9,9,-9,-9,1,10,-9,2,-8,-3,10,4,-3,10,6,-1,-3,6,-1,8,4,-5,3,-3,10,-7,-10,-6,5,-1,7,-5,-4,-4,-7,9,2,-4,-1,6,-5,-4,4,-9,5,10,-6,4,-4,-5,5,-2,-9,-2,5,4,2,6,9,7,-7,-5,9,-3,2,-6,3,3,-4,4,6,-9,7,6,-1,7,-9,-3,6,3,-5,6,-7,-1,6,2,3,-10,-7,4,1,-7,8,1,7,3,-5,1], dtype = "int64")#candidate|11201|(2304,)|const|int64
call_11200 = relay.TupleGetItem(func_10541_call(relay.reshape(call_11176.astype('bool'), [7, 12, 14]), relay.reshape(call_11176.astype('float64'), [7, 12, 14]), relay.reshape(const_11201.astype('int64'), [2304,]), ), 0)
call_11202 = relay.TupleGetItem(func_10545_call(relay.reshape(call_11176.astype('bool'), [7, 12, 14]), relay.reshape(call_11176.astype('float64'), [7, 12, 14]), relay.reshape(const_11201.astype('int64'), [2304,]), ), 0)
func_5843_call = mod.get_global_var('func_5843')
func_5845_call = mutated_mod.get_global_var('func_5845')
call_11216 = relay.TupleGetItem(func_5843_call(relay.reshape(const_11201.astype('int64'), [2304,])), 0)
call_11217 = relay.TupleGetItem(func_5845_call(relay.reshape(const_11201.astype('int64'), [2304,])), 0)
func_10014_call = mod.get_global_var('func_10014')
func_10015_call = mutated_mod.get_global_var('func_10015')
call_11218 = relay.TupleGetItem(func_10014_call(), 1)
call_11219 = relay.TupleGetItem(func_10015_call(), 1)
output = relay.Tuple([call_11176,call_11179,bop_11192,call_11200,const_11201,call_11216,call_11218,])
output2 = relay.Tuple([call_11177,call_11182,bop_11192,call_11202,const_11201,call_11217,call_11219,])
func_11220 = relay.Function([var_11180,], output)
mod['func_11220'] = func_11220
mod = relay.transform.InferType()(mod)
var_11221 = relay.var("var_11221", dtype = "int32", shape = ())#candidate|11221|()|var|int32
output = func_11220(var_11221)
func_11222 = relay.Function([var_11221], output)
mutated_mod['func_11222'] = func_11222
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9323_call = mod.get_global_var('func_9323')
func_9325_call = mutated_mod.get_global_var('func_9325')
call_11240 = relay.TupleGetItem(func_9323_call(), 0)
call_11241 = relay.TupleGetItem(func_9325_call(), 0)
func_11006_call = mod.get_global_var('func_11006')
func_11008_call = mutated_mod.get_global_var('func_11008')
call_11242 = relay.TupleGetItem(func_11006_call(), 1)
call_11243 = relay.TupleGetItem(func_11008_call(), 1)
output = relay.Tuple([call_11240,call_11242,])
output2 = relay.Tuple([call_11241,call_11243,])
func_11250 = relay.Function([], output)
mod['func_11250'] = func_11250
mod = relay.transform.InferType()(mod)
mutated_mod['func_11250'] = func_11250
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11250_call = mutated_mod.get_global_var('func_11250')
call_11251 = func_11250_call()
output = call_11251
func_11252 = relay.Function([], output)
mutated_mod['func_11252'] = func_11252
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10073_call = mod.get_global_var('func_10073')
func_10074_call = mutated_mod.get_global_var('func_10074')
call_11282 = relay.TupleGetItem(func_10073_call(), 0)
call_11283 = relay.TupleGetItem(func_10074_call(), 0)
uop_11284 = relay.acos(call_11282.astype('float64')) # shape=(10, 5, 8)
uop_11286 = relay.acos(call_11283.astype('float64')) # shape=(10, 5, 8)
func_10215_call = mod.get_global_var('func_10215')
func_10217_call = mutated_mod.get_global_var('func_10217')
const_11294 = relay.const(1, dtype = "int8")#candidate|11294|()|const|int8
call_11293 = relay.TupleGetItem(func_10215_call(relay.reshape(const_11294.astype('int8'), [])), 0)
call_11295 = relay.TupleGetItem(func_10217_call(relay.reshape(const_11294.astype('int8'), [])), 0)
func_5532_call = mod.get_global_var('func_5532')
func_5536_call = mutated_mod.get_global_var('func_5536')
call_11303 = relay.TupleGetItem(func_5532_call(relay.reshape(uop_11284.astype('float32'), [10, 5, 8]), relay.reshape(call_11282.astype('float32'), [10, 5, 8]), ), 0)
call_11304 = relay.TupleGetItem(func_5536_call(relay.reshape(uop_11284.astype('float32'), [10, 5, 8]), relay.reshape(call_11282.astype('float32'), [10, 5, 8]), ), 0)
func_498_call = mod.get_global_var('func_498')
func_501_call = mutated_mod.get_global_var('func_501')
const_11326 = relay.const([8,8,-4,6,-1,5,4,6,-10,-8,-8,10,-2,-4,7,4,3,5,6,3,8,-1,-7,-8,-8,3,-3,-2,8,-4,9,-10,7,10,-7,-1,1,7,10,7,4,-4,3,-1,-1,-3,2,3,-1,5,5,2,7,-8,-7,-5,-2,-9,4,-5,-7,-7,4,-10,-2,2,10,-5,-3,6,-5,4,-1,-6,5,1,-10,2,-8,-8,5,8,-3,-4,4,-8,-10,-10,-5,7,-8,1,7,-3,-6,-3,-10,-8,-4,1,2,-10,-10,-5,-7,-5,1,2,-1,-2,5,-10,8,1,-10,-1,10,5,2,-6,-2,-5,-1,2,-3,9,-2,4,-6,-4,-7,-7,6,6,-5,10,-5,2,-1,10,-1,-3,-7,-4,4,-9,3,-6,9,-9,-8,4,4,-1,-10,-1,9,5,3,-9,7,7,-4,-3,9,-9,-2,10,9,-3,2,2,-9,9,6,10,6,7,10,-6,1,6,10,-9,9,10,5,-5,8,-8,-2,2,-4,1,-9,5,-4,-3,-10,3,-4,1,4,-6,9,-9,-10,8,-9,10,-6,8,-9,-4,3,6,-2,-7,-4,7,6,-2,-6,-2,1,-1,-8,-9,-9,-6,2,-10,-1,-9,1,-8,-3,-3,3,1,7,1,10,4,2,-2,4,-9,8,-1,5,3,-10,-6,-4,-6,-1,-8,-8,-10,4,7,3,-2,5,7,-3,-9,-1,-7,-1,5,4,3,-8,2,-7,8,6,-1,5,4,-10,-2,-7,-3,-4,2,-4,9,2,-3,-2,-8,-3,1,7,-6,8,8,-9,-6,1,-10,-7,-8,2,-7,-2,-3,4,-3,-1,9,-8,-7,-8,-9,-4,-8,10,7,7,6,-9,-6,-7,3,9,9,7,-4,10,-7,-6,3,-9,8,4,-7,3,5,10,7,-10,-7,-4,-3,8,-9,5,8,4,-1,-10,-1,-10,4,-4,1,7,10,-3,-6,-5,3,8,-5,9,-3,4,3,-10,-6,-6,-8,-9,6,5,10,10,-1,7,3,2,7,1,2,5,-8,6,-5,8,4,-7,3,-2,-6,-10,6,-6,-2,1,10,1,-6,-6,2,6,5,-4,1,-5,-4,-7,-9,-1,1,4,-7,-9,-3,-6,9,5,-3,4,-3,-10,-4,-7,-9,-5,-10,2,-5,10,6,-5,8,-10,-8,-5,-5,-8,-2,-3,5,1,-8,-3,-4,1,1,-6,5,-9,2,4,9,-8,8,3,-9,9,9,-10,-8,-2,8,-7,-6,8,10,-7,5,-3,-5,8,-3,3,2,-3,-6,-9,-5,-9,-5,-10,10,-6,-1,10,5,1,-7,-8,-8,9,-9,8,7,4,-4,-6,10,-9,-3,6,-9,6,3,-6,8,-7,-6,-9,-2,-4,9,-9,4,-9,-9,4,6,-3,-5,-10,-4,8,-1,2,1,-10,-6,9,-8,-4,7,-4,-10,-2,6,8,8,-10,2,-2,6,5,-2,-1,-7,7,4,7,-10,9,-10,6,2,8,-9,-10,6,-8,-10,-9,5,10,-9,5,5,-5,-2,6,-8,9,9,-4,-5,-1,1,-3,-8,-8,-2,-6,7,-4,4,-5,4,-2,5,8,-10,6,-1,-8,6,7,6,-4,7,-6,-8,5,-4,7,-5,-1,3,6,8,4,9,1,5,2,3,-4,6,-3,8,-2,-4,-8,2,-1,-8,-4,4,-4,-1,2,-4,-5,6,3,-9,-7,-9,7,10,2,3,-9,-3,8,9,8,-6,6,-2,-6,-3,1,1,-3,-8,-1,3,5,-2,10,3,-7,-2,1,-1,4,-1,7,-4,2,-5,10,4,-4,10,-2,-5,-2,-3,10,9,7,8,3,-4,4,10,9,-1,2,10,-4,2,-1,-8,-8,-6,10,-1,-8,8,6,5,-3,10,-8,9,5,-10,6,-7,7,-9,7,-10,5,-6,7,8,-8,7,-1,9,-8,10,7,10,1,10,9,1,-9,7,-8,8,-7,3,-1,-2,3,7,-1,3,4,8,-5,-9,7,2,3,1,-5,8,1,9,3,-6,-10,-6,4,10,-4,6,7,7,8,-9,-6,-10,-6,3,-4,-4,7,1,-6,3,-9,3,6,5,-10,6,-1,3,5,7,-4,-4,-4,4,-3,2,-7,8,-5,-5,7,-2,-8,-6,-10,2,5,-7,-10,-9,-8,-7,-5,8,9,-6,-7,-5,-3,9,1,9,7,4,-7,-10,-1,-1,3,-8,-5,7,3,6,-2,-3,-6,10,8,-1,-7,3,-10,-6,-4,-3,1,10,1,-1,-10,-5,-7,-10,-9,4,-3,-3,9,-4,-6,-1,-7,10,-6,-1,7,5,-3,1,-7,9,9,-3,-3,-3,-5,3,-5,10,-4,-10,-10,-5,1,6,-10,-9,7,1,-2,7,9,9,-3,-7,-3,9,1,6,-1,-1,-7,2,-4,-4,-7,4,-2,-10,-2,-3,-4,-8,-6,9,7,8,10,-10,5,1,-6,6,7,-3,2,6,10,-3,8,-6,3,1,-6,-10,-4,10,7,7,3,5,-10,5,2,-6,1,-7,6,8,6,4,10,-1,-2,-2,-10,4,7,10,7,-2,-10,3,-7,-9,-10,5,8,10,4,-7,-9,6,2,7,-4,8,-6,-9,5,-7,10,6,8,10,-7,8,-9,2,-2,1,-8,9,3,8,-7,-10,5,-7,-3,6,-3,6,1,-5,8,3,6,-1,-2,-4,4,-6,-1,3,-9,4,3,7,-1,-1,6,-7,3,-1,7,-4,9,-9,6,-6,8,8,-1,7,7,1,1,-6,-5,1,-2,2,-8,2,2,-8,8,-4,-3,1,1,3,-1,8,6,10,4,-9,-5,-6,-9,-9,-10,-7,6,-3,9,10,-5,-6,8,8,9,4,-10,-1,5,-9,-3,-10,-2,9,-6,-1,-7,-1,4,7,-9,-7,1,2,-8,-3,-5,1,3,-9,8,10,-1,-2,-10,-8,2,-2,5,-1,2,3,4,-5,3,5,-7,9,-6,3,-10,9,-8,4,-2,6,6,3,3,-8,5,-8,-10,10,-7,-4,-6,8,-3,-7,7,2,1,5,5,-10,9,-3,-6,7,-6,2,-7,5,-3,6,6,-5,-3,-2,-6,-9,2,-5,6,4,6,-5,-6,-2,3,-1,6,-7,-8,7,3,8,7,4,9,5,-3,6,-1,10,-6,4,-9,-1,9,-9,-2,-8,4,2,1,7,-8,-7,3,2,10,-1,4,-6,-8,7,-5,10,-10,-1,10,9,2,6,5,5,1,-4,8,1,-8,7,-7,1,9,-10,-3,-8,7,2,-9,7,5,-6,5,10,-6,-5,5,-10,-1,7,3,10,-7,-2,-1,6,-2,10,10,9,8,8,-3,2,-3,7,-2,6,9,-6,6,-6,-6,6,-6,-1,2,-8,10,-6,-8,-8,9,-10,1,7,-9,6,9,1,-8,8,4,2,7,-8,2,-5,-10,-9,2,6,1,9,5,-3,-4,4,8,-3,-5,-2,-9,-8,-2,7,3,5,7,-1,-4,7,7,8,-7,-2,4,-9,-9,-9,4,-4,1,-10,-3,-5,7,-7,-3,-10,5,-5,6,-1,3,-9,-8,-5,-2,1,7,-4,-6,-1,-5,-1,4,1,-10,-8,-4,9,10,3,10,-7,8,1,2,4,2,-8,-9,-8,-1,1,3,-7,3,-3,4,10,-3,5,-5,-3,-6,5,1,-4,10,-8,-5,-4,-7,-3,-8,2,-6,-9,7,7,-2,-9,-6,7,-10,8,2,-6,-10,-9,-4,2,-7,10,-2,9,1,-8,1,-2,-10,6,2,-10,-3,-1,-9,8,5,-4,-6,2,9,2,-5,10,-5,-7,10,-9,8,1,-4,-7,-6,-3,-2,-8,5,2,8,-5,-10,-10,-2,5,-1,-1,-5,2,-9,-4,2,-3,-5,8,9,-4,6,1,-5,9,-5,10,9,1,-1,-7,8,3,-7,5,-4,4,7,7,-2,-9,-7,6,3,1,2,-8,-10,-4,-1,2,7,3,-1,-5,9,1,3,3,5,-1,-6,9,-9,4,1,-5,-1,-4,3,5,-5,9,4,-5,7,-9,-4,-8,3,-5,7,-7,-10,-9,2,6,-2,7,-6,8,8,-6,-8,-7,8,9,4,2,-9,-9,-6,-10,8,8,-10,9,4,4,4,4,5,-5,-9,5,9,9,-6,8,8,2,-10,8,8,7,3,-4,-7,9,8,-6,-5,4,5,7,-6,1,-10,2,-3,2,2,-6,8,9,-7,-5,-1,6,-1,-1,-2,6,3,3,-9,-4,4,-4,-7,-6,-7,9,-10,-3,-9,-9,-9,4,5,10,4,-6,5,-9,-10,-9,8,4,4,-2,-4,-6,7,4,9,3,7,-2,-9,7,9,-6,-3,-6,10,9,-10,4,7,7,-10,-9,-2,-1,3,-2,-1,9,9,-10,3,2,6,-1,3,-9,10,2,-1,5,-1,6,5,8,3,4,1,1,3,-10,-10,3,-9,6,-10,-5,7,-6,9,10,-6,-1,-4,4,-4,6,-7,8,6,7,-4,-8,6,-7,10,8,-4,2,-1,5,-5,1,-10,8,-10,1,-7,-7,4,7,-1,-9,6,-1,10,-4,7,-4,6,-2,-7,2,-3,-7,3,1,3,-7,1,-7,3,5,1,-8,3,3,4,-6,-6,-4,-8,-3,4,1,-9,8,4,-4,5,1,-4,10,2,3,-8,7,1,-1,1,10,-2,3,-2,-2,1,-4,8,10,-9,-7,9,7,3,5,-9,3,-3,-9,3,3,5,-6,-3,-2,-9,-1,5,10,-5,-2,-2,-8,-1,-4,-8,-8,-6,5,-1,6,-8,-2,-7,10,1,-8,9,10,3,-4,-2,-6,-7,10,10,1,2,-2,8,-1,-8,-2,5,6,-5,-10,3,7,-9,-9,2,-10,3,-5,5,-10,5,9,1,7,-4,-4,5,8,-8,-4,6,7,5,2,8,-5,1,2,-7,-9,7,9,-7,-5,-3,9,4,-1,-10,1,5,10,1,-8,-2,-1,-4,-1,9,-10,-7,-4,-5,-2,-9,2,10,-8,3,-9,-4,-5,3,1,-4,-6,10,-3,-6,9,-7,-7,-10,-10,-2,-9,9,7,10,6,1,-6,-2,5,2,-3,-2,8,7,8,-6,8,-2,1,-6,-7,-1,-7,10,2,3,-2,8,-8,9,6,2,-3,2,-6,3,5,-4,6,4,7,3,-4,-1,-8,6,-6,-10,3,-4,-2,2,-10,2,4,4,-3,1,10,8,2,1,-4,-10,-5,-8,1,4,8,-9,-2,-4,-2,2,6,-9,6,8,-5,9,-3,6,-6,-7,-6,7,-9,-1,-5,-2,-5,-1,3,2,-10,-5,-7,8,3,8,-4,-5,5,4,1,10,9,8,3,-7,1,5,-4,1,-2,7,3,1,-10,-9,2,-8,3,10,-5,8,-10,-4,-9,4,-4,-7,2,9,2,-4,7,5,7,-5,-2,-8,5,-1,-9,-6,-5,-1,1,-9,-8,-7,-5,5,8,4,-3,6,-6,-4,1,7,-3,3,10,6,4,-5,6,1,-9,3,7,2,6,8,4,-3,6,10,5,8,-7,-8,-2,-6,2,-5,-1,-4,-10,6,8,2,3,-3,-6,-10,1,-8,5,-8,-5,7,9,-5,-4,3,-8,7,7,-2,1,7,-9,7,-9,10,7,2,-9,-4,-7,4,-4,-9,-2,-3,4,-5,5,7,-6,-7,-4,-8,5,-5,-9,-10,-1,3,3,-6,-5,9,4,3,-3,-4,9,-10,-4,-9,-4,-7,9,10,-5,10,-9,10,-7,5,3,-6,1,-9,1,-7,8,-1,3,2,8,-8,10,-2,10,6,-7,8,-8,-3,8,3,-4,-4,6,3,-7,-2,-10,4,4,-7,-2,-10,-3,-1,-3,-8,9,-3,7,10,8,3,-8,10,-8,-6,-2,-3,1,8,8,-2,8,-3,-3,1,5,-9,-10,9,-8,10,-1,-6,7,-8,-10,4,-6,-6,-10,-8,10,1,10,2,5,5,5,10,-5,-10,9,-4,-3,-1,7,9,9,-1,-8,-7,3,10,-3,-3,-1,5,7,2,-2,-2,-4,-10,10,2,-4,-2,-10,6,-5,6,-4,-5,-2,10,9,5,-4,6,6,-2,8,-7,8,-4,4,10,-10], dtype = "int64")#candidate|11326|(2304,)|const|int64
call_11325 = func_498_call(relay.reshape(const_11294.astype('int64'), []), relay.reshape(const_11326.astype('int64'), [16, 9, 16]), )
call_11327 = func_498_call(relay.reshape(const_11294.astype('int64'), []), relay.reshape(const_11326.astype('int64'), [16, 9, 16]), )
output = relay.Tuple([uop_11284,call_11293,const_11294,call_11303,call_11325,const_11326,])
output2 = relay.Tuple([uop_11286,call_11295,const_11294,call_11304,call_11327,const_11326,])
func_11334 = relay.Function([], output)
mod['func_11334'] = func_11334
mod = relay.transform.InferType()(mod)
output = func_11334()
func_11335 = relay.Function([], output)
mutated_mod['func_11335'] = func_11335
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10708_call = mod.get_global_var('func_10708')
func_10709_call = mutated_mod.get_global_var('func_10709')
call_11484 = relay.TupleGetItem(func_10708_call(), 0)
call_11485 = relay.TupleGetItem(func_10709_call(), 0)
func_7914_call = mod.get_global_var('func_7914')
func_7916_call = mutated_mod.get_global_var('func_7916')
call_11492 = relay.TupleGetItem(func_7914_call(), 4)
call_11493 = relay.TupleGetItem(func_7916_call(), 4)
func_9400_call = mod.get_global_var('func_9400')
func_9401_call = mutated_mod.get_global_var('func_9401')
call_11505 = func_9400_call()
call_11506 = func_9400_call()
uop_11515 = relay.asinh(call_11505.astype('float32')) # shape=(1040, 1)
uop_11517 = relay.asinh(call_11506.astype('float32')) # shape=(1040, 1)
const_11518 = relay.const([[-1.086793,-5.599222,-6.238922,-7.853588,-9.816034,-7.424630,4.301889,-8.649335,-8.001527,0.236295,1.900898,6.778887],[2.524563,3.075440,-9.334731,-4.890071,0.323185,6.279820,7.898464,-6.757801,3.008141,-8.466532,-5.451759,-3.007370],[0.733031,3.758824,-0.958120,1.968621,3.912466,9.305912,6.096148,4.277466,-3.856081,6.354332,-1.305865,4.289528],[-3.388830,-2.020352,-3.356205,1.251962,-8.998081,0.453395,5.393672,-8.962447,9.200204,4.202127,7.974608,4.420296],[8.219037,0.167767,8.902714,1.824721,-7.835796,-5.367936,9.168148,-5.565270,-6.422310,-8.594555,1.306072,1.220112],[-2.903848,5.347513,7.987491,1.639403,7.406292,-0.345763,4.861508,1.347886,0.470851,5.942631,0.240317,8.938475],[5.242269,-7.104103,-6.204586,9.940186,-3.710382,6.780879,-2.757387,-2.572316,8.112158,-2.948909,3.851156,6.648111],[6.071128,1.332407,-1.270740,-7.622209,-3.751751,-7.333963,-9.022765,2.648532,2.085751,-8.170540,6.432597,0.730769],[0.249574,5.961995,2.221729,-9.965848,5.492098,-5.351277,-6.994986,3.307012,0.303456,3.520749,-7.992914,-2.470441],[9.666550,9.083249,3.768059,-6.970597,-5.013355,1.907947,-2.410476,-4.156612,0.094166,3.307834,4.654014,-6.264013],[4.032142,8.049391,-4.059263,3.299495,-7.897716,-5.555098,4.843792,1.224243,6.624996,-2.098939,-1.777678,0.177263],[7.866231,4.925085,-9.685567,3.433671,5.843247,5.661837,-8.220014,-6.561073,9.939924,-8.406262,6.081379,-7.362842],[5.139301,-7.916131,0.497982,8.889990,-0.501139,6.995288,3.094651,-7.998779,6.590484,-3.910023,-2.864314,6.448062],[-6.340053,4.771304,3.276851,-6.657891,-4.478880,-8.924660,-2.048155,-0.875045,-1.230555,1.760894,-0.299818,-5.218113],[9.164739,3.032163,3.112232,4.981040,-7.294310,5.633118,-9.748655,-8.486977,-4.096225,-5.414347,2.300481,-8.678878],[8.170981,3.270447,9.301913,9.397996,-3.105319,1.560888,8.747788,7.790423,9.532159,5.341295,-8.266126,-0.697524],[-3.478575,-0.202879,1.386132,2.755070,-8.936208,-5.075903,3.357899,8.177354,-6.319719,9.308090,9.137516,5.633871],[-0.675648,6.971146,8.406599,2.300090,-3.180811,3.463288,-2.581842,-0.741933,7.129854,6.850218,3.202029,-2.295865],[9.145634,0.722576,4.040419,2.822871,-4.256337,-0.841944,-4.973860,7.141441,5.619913,-7.294110,-1.495740,0.449797],[4.292049,-7.713501,5.852217,-2.939976,-3.250696,4.029023,-7.479074,9.232430,9.861782,-5.802944,-5.621774,6.439173],[-5.440102,8.964683,-2.608057,-0.513774,2.214090,-2.357877,-2.734128,3.248229,3.166574,-4.369054,8.214644,-6.867572],[8.730241,-9.170283,-6.976870,-7.215137,5.210926,4.594325,-7.837566,8.401960,-4.604329,-0.596635,-1.128287,-5.677467],[-0.548189,-7.495763,-0.914644,4.808963,4.552269,2.531358,1.081325,5.284817,-3.579327,-4.669950,-6.572086,-6.001697],[-7.732755,9.643585,2.871760,-9.069059,-4.881829,6.076534,6.002526,3.688850,5.610293,-8.768735,-8.838189,6.827355],[1.870006,4.652423,-8.311295,-3.411033,-0.056078,6.111088,3.875163,7.251066,-6.405082,2.298615,0.405533,7.421752],[2.093590,7.833661,8.795331,-5.820146,4.139826,-4.576718,-4.969356,-4.953755,1.223385,-7.731086,6.253385,-5.736719],[-4.399608,0.507574,-4.935758,-7.764975,-4.872397,1.668233,9.719956,-0.343396,2.720459,-7.884491,-4.367794,-3.132636],[-7.145318,-4.210365,6.400719,-2.095561,-6.447020,4.615972,-3.396862,6.740764,-4.045864,-7.117813,-4.036382,-4.201825],[0.877676,1.115852,3.962528,4.057471,-1.364137,8.183168,6.036561,-9.305991,3.170552,-5.812005,8.333226,-1.104558],[1.207183,2.609211,-6.721807,3.173032,-9.253248,1.172650,8.074728,-8.660133,-5.156838,6.379341,0.332128,-1.322049],[9.830668,-5.736978,-4.705988,-0.493668,7.553803,3.815400,0.125694,6.689493,-6.987316,1.861046,-0.921143,2.167405],[9.574845,-2.156395,-8.026916,7.625736,3.856118,0.479069,3.474049,8.486156,8.710869,-3.340810,-2.212555,9.199060],[-3.429291,-3.341681,-9.368098,1.619414,-6.177019,-3.391206,-3.985900,-3.692821,0.469433,5.404532,-6.201118,1.779905],[-1.646637,-1.709489,4.547451,4.153387,4.888240,-1.697154,8.602144,6.268882,5.690507,3.306426,-7.712544,-7.885705],[5.532667,-0.367539,-1.869128,5.472228,9.453504,9.309721,6.861479,-2.762124,-1.981950,-7.484900,-4.323597,1.265730],[5.626992,-5.571284,8.668175,8.864194,-4.489521,-6.033087,7.586182,6.939679,7.658207,-4.364054,5.915464,4.359223],[3.221839,-6.493932,-8.263728,-7.004320,-8.266388,6.630399,9.705373,-8.087167,-2.744152,-5.150665,-4.234415,-1.559663],[4.586900,4.835482,3.762334,-0.335888,-1.045099,-1.949540,0.137791,7.792403,4.747915,2.923235,4.175955,0.122456],[-6.921597,-5.401893,6.333231,-6.045953,5.039109,-8.647329,9.701277,0.015695,9.339618,-5.019494,-3.271858,-0.978606],[-1.538320,-3.547413,3.391374,6.239814,-0.159074,-4.364676,-0.985569,-2.346802,-0.626723,-3.213841,2.089143,-2.007379],[1.404978,6.985593,-8.417002,-2.164159,6.633166,-7.162355,-6.881718,-5.168674,2.655483,-0.563985,-7.886120,4.722462],[0.367857,-6.387259,-2.410895,4.763910,6.515043,5.980686,-5.673723,-8.470364,2.017804,-6.664131,-0.365048,-2.877366],[-7.479877,1.361491,5.709347,8.186479,-1.900390,5.131098,-9.476866,-6.311254,-1.698569,7.340892,5.380854,-8.453691],[6.161231,-0.036547,-6.508467,1.477332,-9.447828,0.433685,-3.043446,-5.359577,-6.503422,1.720128,3.913406,-7.189425],[9.654886,-8.961545,7.034841,5.045218,-1.976698,-5.542704,-2.139206,5.796964,-4.841118,-0.506467,8.636706,5.973360],[0.631053,0.953469,-8.183505,-5.022612,9.671338,5.657424,1.553679,8.391923,-1.476135,-0.030431,-6.996659,4.387601],[-0.778935,3.052860,2.829574,3.764495,5.752164,4.855244,-5.751478,4.820747,-6.518204,-7.642142,-4.134390,4.704504],[4.235503,0.183105,9.729168,-8.650609,8.188241,-6.526082,-2.454979,0.967534,-7.396546,-6.391522,-7.681282,-8.052330],[-2.097129,-1.689658,9.975685,3.235563,-4.291684,-7.055975,-7.947236,2.888541,-7.455473,-6.261859,-3.767158,-1.437243],[-1.531912,5.221322,-5.508555,0.888919,5.698821,1.414653,-8.362890,3.810237,-1.654011,-0.154259,8.276162,-7.625465],[9.015596,-4.222451,-7.202443,-4.136042,6.440565,4.262371,-3.596578,-9.625667,-6.208974,-5.628859,4.278799,9.846468],[3.970117,-2.883939,-4.199862,-4.336150,8.298517,1.639279,8.641330,-2.256622,1.283294,-0.889200,-5.236976,9.573626],[5.560010,3.155255,-1.948587,-0.940088,2.068638,-7.710750,1.399183,1.945933,9.113959,-4.574623,1.141564,-3.855238],[-7.393891,-8.950177,2.719733,1.578611,5.174178,6.000339,-0.853703,7.273132,-0.212749,0.160303,-1.402134,-8.661482],[9.874747,-1.334905,9.488475,6.961322,1.779012,6.320646,-4.049861,3.672115,6.178548,0.269638,-2.095452,0.757408],[-8.066319,-2.990518,-9.247054,-0.180157,9.074933,-3.754031,2.236304,-8.527100,7.047955,-2.498189,7.552818,7.814132],[-4.775723,-5.483682,0.547668,-5.894833,-0.729324,-7.395349,2.660805,-1.155214,6.922450,-6.794847,-2.408311,8.012276],[-4.641228,9.133782,-6.565396,-3.240513,6.086128,1.867635,4.929927,-8.672943,0.065813,-5.011135,-6.035576,3.467134],[8.060666,-5.923567,4.451873,5.493158,1.285641,6.987477,7.105513,3.341915,-1.936389,6.514431,-8.012262,2.515057],[-9.839107,-5.715941,-5.323767,-2.698979,9.128783,8.191175,-9.531633,-4.019105,-4.037552,5.717499,-1.453561,-8.616990],[-1.516865,-9.052880,-8.531571,-2.578795,1.463884,8.952707,-4.547570,3.028721,-6.823863,-2.792885,4.884824,3.028348],[-2.664990,5.561450,3.673060,0.451788,8.226381,-2.623365,0.957956,-9.522219,6.066218,-1.512059,3.845867,-7.648852],[5.756721,-2.315720,1.950458,-1.879471,8.308847,-7.074839,8.831214,-5.125902,3.066842,-6.466767,5.213644,2.818363],[-2.201688,-0.764178,7.563460,-0.483804,-3.389799,6.156760,-7.362735,8.059175,3.431309,-4.685725,-0.768591,6.416108],[6.483725,-9.256163,-4.296189,2.317904,-8.232740,-7.537800,-5.923449,-1.838207,-1.614940,9.095979,3.868392,-7.017609],[-7.826403,4.477114,2.953109,3.872562,2.496809,1.854512,5.799542,-4.316334,-9.178740,-7.544082,8.598158,7.386943],[-4.948378,-8.972904,-9.572906,7.400741,8.829529,9.460709,2.814318,4.864856,-9.471021,4.112102,-4.966571,1.862716],[-6.977979,6.752977,-6.826671,6.302511,5.138854,-7.241372,-5.944654,0.435564,6.336956,-0.594618,7.419413,3.234554],[-1.160265,4.051561,-2.883698,-9.325489,-2.658006,2.913941,-2.914156,-3.746303,-2.991688,5.193118,-9.774169,3.255503],[8.231583,-0.152864,8.263623,3.475955,-8.422458,-0.684890,8.073224,-0.838533,0.157348,5.854351,-3.151915,9.399086],[-2.165938,-2.878756,2.145454,-1.255839,4.341579,1.887268,-0.573978,4.324373,-4.359836,-6.668995,-9.483466,5.872169],[-6.144894,7.400330,-2.264298,7.495149,-9.737443,6.724110,9.249521,-9.715504,1.065108,-3.078511,-6.755521,-5.031868],[4.814455,8.432999,1.606786,9.912050,0.767518,9.981365,-7.574508,-3.212247,-9.662034,-1.311677,-8.640931,-0.557738],[7.450387,8.522720,-3.913936,-9.848861,-9.241346,0.924415,-4.228679,4.007469,-6.030959,-8.577943,-2.343721,0.921928],[-9.625721,-5.545946,-8.474091,-0.935555,3.248626,-7.978904,-9.895863,-8.078119,-6.800476,-6.192418,-1.724388,-9.431245],[-4.750378,0.382910,2.900687,6.371066,8.558050,-8.712170,0.314387,3.365280,7.420942,-1.957858,-9.422286,-7.471278],[7.549844,7.308215,6.043692,-9.961458,-6.279699,-2.264436,-1.068676,-6.842639,1.019566,0.570708,7.730317,-4.119917],[-1.760375,-1.366991,0.583228,0.079997,-7.589839,-4.183986,-0.849634,5.841063,3.547854,7.149351,-0.216019,3.464585],[-8.664584,-6.454982,8.992590,-5.740958,9.613716,-6.185173,-5.019774,4.210617,-1.602867,-3.171001,-7.716217,-5.041208],[7.332366,4.357289,8.534512,7.226419,-8.123003,4.184064,-8.461874,4.631785,7.784329,-3.958687,-6.676642,-0.886868],[-7.211019,3.402068,-5.559351,-9.267304,0.158869,8.235644,-8.809417,6.550704,-8.144914,-6.739942,-0.210603,0.995692],[8.400218,4.443026,1.011509,-2.740075,-1.236643,6.191265,0.299549,-4.986074,5.179893,3.761092,9.428939,-6.070884],[-9.211265,-2.264818,9.632932,-9.576470,-1.016022,-9.320950,9.437306,0.011765,-3.500942,-3.985926,-3.363188,3.440656],[2.617460,3.821194,0.257204,-0.233281,-8.610245,-5.633802,-5.789495,-9.482352,0.801045,4.746399,2.557261,-4.279346],[8.315777,-9.551143,-4.733297,1.352718,-3.825542,-2.349472,1.959398,4.157321,8.932651,3.389575,-6.534591,-5.831458],[-2.844669,-4.514692,-3.929943,1.998251,-8.323702,3.076676,2.770234,-1.224594,4.699615,9.871572,7.367096,-3.171590],[6.714442,9.982946,8.854102,0.745632,7.421159,-7.092267,-9.618541,6.585677,8.057522,4.662407,8.546191,-1.812460],[-6.281137,1.472031,1.992336,4.561882,7.449730,-0.890296,-5.118038,-3.692898,-8.390899,-9.303242,8.162995,3.666730],[-0.334118,1.266779,-9.688749,0.032618,-1.157012,-8.381406,-1.776778,-1.944662,-2.263218,9.372017,-4.585367,-1.657917],[-6.307319,9.836912,-1.600248,-9.934764,-5.219055,2.400690,8.349744,9.560363,5.607428,3.322411,2.821769,-6.489443],[9.715786,9.205504,3.246382,-6.145598,-3.900666,9.853913,-1.843628,4.338417,-2.717717,3.710474,3.174648,2.171856],[-7.574231,4.853937,-1.168896,-2.070997,3.063284,5.871259,3.222274,-0.731451,9.531226,5.776549,8.911620,-4.538560],[4.619552,9.469427,1.447633,3.222614,-6.673260,1.332458,-3.237585,-9.496479,0.056546,5.844509,0.687636,-7.694150],[5.907639,-9.751054,0.568473,-6.002621,-8.040815,9.073138,-7.139841,0.521357,8.705144,2.634978,-3.693333,7.471501],[7.643548,5.144384,-2.179990,-9.395902,5.885588,-2.800640,1.112500,2.794812,8.962629,0.015338,1.329593,-4.749288],[-9.808791,0.248229,4.134589,-2.279751,5.656231,3.246755,-5.923386,5.743966,-1.210748,-2.749723,8.508731,7.939205],[-5.559105,-8.791407,0.431205,2.623024,6.034777,9.865887,8.081742,5.315578,5.397155,5.683137,-2.493784,7.991175],[-1.703486,7.028656,0.429209,-0.206706,5.070086,8.955446,3.113920,-7.245832,2.350360,5.085493,-0.144540,6.098736],[1.328555,6.599842,-8.975234,-0.560683,-4.313514,-3.345914,-0.737654,1.577826,9.010386,6.294841,7.722304,6.878545],[7.733848,-8.675317,-7.166986,0.228238,-7.376631,4.328213,7.945508,4.283251,7.119423,3.204528,5.626338,-9.239228],[7.837347,0.460765,8.071553,-4.588293,-3.724281,-8.013712,-0.091458,-3.435733,-0.532189,9.918296,-1.986032,2.423447],[-5.208598,6.326612,-6.394962,1.339241,3.724592,-2.827367,0.117843,9.844279,8.172509,-7.217641,7.708052,-0.605335],[1.775034,8.718198,7.261497,1.109544,1.721952,2.649942,-4.353967,-0.166645,7.672181,3.948927,1.634353,-0.929167],[-9.952190,-0.776672,-0.022489,-0.965017,4.944254,2.484908,-8.968734,-4.097466,3.569916,0.912742,-7.856189,-4.327746],[9.731000,3.715449,-3.683243,2.700390,-1.104487,5.236338,8.257714,-8.899624,6.099683,0.323610,7.111517,-9.968605],[5.172824,-3.224885,5.854173,6.976861,-3.145278,5.815782,9.529521,-8.753745,-6.377358,-2.948760,6.155829,-7.996463],[-3.723622,-7.368833,-1.665455,-5.392924,8.592669,4.827004,9.682324,7.030858,1.144973,5.229101,8.637638,1.744466],[3.180762,9.133402,-7.226236,5.157764,1.643858,-0.800907,-8.459777,8.125154,-1.191580,-3.506578,-3.546388,1.674552],[-6.762079,-7.165543,-3.773078,-4.850444,7.360658,-9.598511,2.116895,-3.482314,-2.072933,-8.675690,5.854941,-2.566465],[7.485355,-1.291009,-1.743018,0.905939,-8.695213,-3.535650,9.559300,-8.542613,8.727950,3.695650,-7.305559,1.184793],[-1.511466,-0.852264,-2.729301,5.968074,3.517257,1.217381,-2.975976,8.675856,-1.430919,7.534768,-5.889452,-5.754750],[4.809379,-2.932990,2.853180,-7.597191,-4.142333,3.626244,0.980235,-7.708477,-7.537982,-2.383588,-8.012540,8.313047],[0.465359,4.405018,-9.256499,4.487859,3.539605,-9.783623,-2.323263,-4.821498,1.439691,5.231038,9.412138,4.250268],[3.837717,-4.982881,0.219172,-0.253259,-9.715886,-2.134804,9.320072,-3.047405,-2.109894,9.990109,1.712593,7.512513],[6.971053,4.123601,-5.084505,5.294223,-2.523981,5.572548,2.405419,3.164956,0.500890,7.968044,4.316883,7.177830],[-0.285792,-6.935741,7.000816,-5.019676,-6.751459,4.416354,-0.206933,-1.782601,-2.397907,2.276174,5.329625,5.894317],[-8.170357,7.321003,1.752444,2.437475,2.084239,7.373115,4.666594,-6.323959,-6.079682,-5.274161,-3.438085,0.111090],[0.694780,-2.187194,4.494693,8.835371,-9.008546,-4.262001,-1.475569,3.326994,3.796015,-8.354336,-1.374844,8.355468],[-2.999111,-6.635086,-6.029321,3.238888,-3.537512,9.364096,3.566979,3.113563,1.355055,6.699533,-2.470949,-5.921523],[-2.649933,-3.575041,7.087858,9.985816,-1.084219,-4.312793,4.863364,-4.696983,5.278431,-5.229242,-0.849908,2.687617],[7.605289,4.405972,4.740169,6.406715,-4.223525,6.641404,9.253251,3.461336,-3.790051,2.474496,8.104120,1.057589],[0.290875,-5.554529,3.697953,0.119969,-6.486084,-2.859661,-8.019365,9.076962,-9.313789,-7.575723,2.501327,1.731447],[6.813812,-4.950496,-2.994118,-1.439429,9.205225,5.144536,-4.384622,9.485746,-6.392496,-9.016392,8.929444,3.393468],[-6.330962,-7.280199,-3.753429,0.665212,-6.482326,-0.526615,3.753015,-1.537740,0.042274,-8.948427,-0.324586,0.828182],[1.946966,-0.011208,5.679705,-9.841214,0.755029,-5.715687,-0.754221,-7.159880,9.076002,3.128193,5.853464,9.978856],[-2.824292,-9.033965,0.749822,2.168675,8.700431,4.031507,3.854616,9.182924,-0.034417,-6.533864,4.373711,1.363557],[-6.706011,-6.483951,-9.443404,-5.769722,9.626135,-1.532500,-4.990489,0.721003,8.592606,5.422791,0.915674,3.812484],[-3.016063,-6.133072,-0.905791,-1.955197,9.275275,-0.664775,-0.715921,-3.500146,3.732053,-1.085442,-7.970211,-8.176514],[-2.287645,-6.306487,-7.555827,-8.472360,-0.730255,-2.121887,-4.652994,2.707881,5.166379,-3.608430,-4.064808,3.670487],[9.020416,-4.236155,-5.493026,3.442909,-2.261149,-5.965743,2.664815,8.766892,2.207170,0.935772,-0.963663,2.595713],[-5.316637,7.479388,-5.969307,4.625356,-4.371510,5.397504,-3.207811,6.663934,8.719576,6.066429,-8.431190,-8.309096],[-2.764025,-2.755556,-9.034689,2.046011,4.648082,1.142767,2.241909,8.864347,-1.677500,-6.298251,2.087800,5.427154],[4.255828,6.244637,3.539220,-7.190822,4.856527,-2.952579,-7.992287,6.926547,-4.989696,-3.731302,5.002374,1.341648],[-4.213764,-6.286089,-0.828504,-5.475159,-0.775228,9.895213,7.880895,6.620661,-1.361422,-3.107855,7.513998,-2.008877],[1.804499,-5.117333,-1.519155,-0.433928,2.106050,-6.153312,1.832929,-4.366119,6.267047,0.310704,1.444755,8.557907],[9.473256,-7.631291,0.398662,-8.957100,8.965285,4.681081,7.730025,0.536077,-9.669907,-6.777560,-7.867485,2.001308],[-5.864414,2.333769,-7.586328,-0.430116,-4.467527,-4.447043,7.307770,-9.901913,1.022295,0.087099,-5.961333,-5.184211],[-7.956319,-0.769638,9.484110,-1.712761,-8.151374,8.975142,4.382851,-6.232526,-3.859954,9.556458,-8.745956,1.667198],[-8.565643,-9.188822,6.950702,0.510240,6.558100,-6.160867,-7.071168,-8.269754,-3.431276,4.210503,5.064017,-2.599659],[-7.645489,-6.291140,0.837410,9.018584,-4.995535,-0.303460,-9.767686,4.368091,3.483499,-8.411039,6.807060,0.868947],[-1.381136,2.391242,-9.116602,0.818133,3.807680,4.144712,8.069392,-9.965792,-5.135754,4.200397,3.037007,-5.954130],[3.308039,-1.420887,-7.675997,-6.423854,-5.844910,-7.046515,9.970919,5.793413,0.021415,-1.477536,4.275893,-3.307938],[8.345724,-2.656711,0.976222,-0.018629,2.152198,7.984790,-1.529051,-2.411150,4.843796,3.368584,0.474247,0.484686],[-5.647176,1.029484,6.927824,1.944047,-8.500554,9.165374,6.995949,-4.503127,-8.962950,-1.442058,0.597687,4.982944],[9.049248,-4.365982,7.953615,-9.567422,9.642477,-0.489643,1.006686,5.575737,5.528750,8.731912,-2.428765,-5.412187],[5.938225,2.435965,3.283307,4.209410,-7.498243,8.746475,-7.286053,6.582896,-1.431066,-3.421110,5.757416,1.728080],[-2.686100,4.664147,-2.653434,7.115087,-0.235411,-7.505617,4.066589,8.752014,3.877801,2.853726,-0.640635,1.929946],[-0.787367,-5.302158,-5.822146,2.623009,7.152572,2.532365,-7.001900,9.046924,-1.082800,-9.522712,-5.002757,1.255562],[0.376982,1.821138,3.615234,-7.799801,-4.420105,5.260045,-3.324441,6.409344,-1.634712,6.490164,5.167435,9.039949],[-2.244347,4.813561,2.424378,0.275887,1.415269,-8.756129,9.238047,1.996841,-1.312831,-1.337385,2.763349,-4.129099],[6.829122,-9.549637,-2.120921,-7.585404,9.692576,5.382518,-0.490224,8.018566,9.443684,-0.531803,-5.663831,-6.845074],[-6.652614,9.377448,-8.115094,3.509265,1.515835,-1.416261,-6.713833,5.318509,-7.362041,-2.111074,2.370373,1.000610],[-3.057910,0.030907,8.597767,0.948576,6.306265,7.888129,-9.140958,8.723639,-9.423376,0.289724,-7.708068,-6.011516],[-4.782712,7.010722,7.502633,-0.761671,-5.268327,-0.172742,-3.145657,3.682647,9.338963,8.220177,-3.659150,2.905890],[2.258572,6.024279,3.932194,-4.362125,-8.040678,3.783635,-0.454054,8.232962,-9.405257,-3.571483,9.159202,-0.668403],[-8.543078,-6.799652,-2.853629,0.267963,6.930568,0.984740,1.386721,-4.517026,1.233036,6.315789,5.940596,-3.988872],[-0.428916,-4.657500,-6.346602,-8.562049,4.672571,3.226686,8.300175,5.445932,7.845059,8.599309,-5.286460,4.255580],[-0.188286,-6.029849,6.603307,2.168924,4.043178,-5.067564,-1.394922,5.224739,0.877579,1.763686,1.732856,7.807066],[3.693192,5.626648,-6.593710,0.077524,2.164862,7.036997,-9.741048,5.629766,-8.584840,6.855028,-5.812834,-5.572842],[-3.139087,-7.641477,-9.533127,-5.934516,5.121381,-4.052856,-2.733176,-8.230846,8.674694,0.773286,-4.625374,1.264560],[-1.412135,9.219994,2.914296,-1.180324,3.999770,-4.207525,8.608609,5.892752,-6.100213,-9.318320,1.357926,1.855019],[-6.086704,-6.684002,9.471212,-4.932744,-5.622182,-9.399168,2.738566,8.985401,-7.981554,3.645002,3.555380,-4.632032],[-7.956388,-3.447528,3.910008,-7.350805,-0.444147,-3.169598,-4.797994,3.241294,-1.473054,3.452335,4.715922,-7.649605],[-9.981768,6.730415,-6.331847,9.075040,-2.837968,-7.949577,4.842013,-0.894553,2.455219,3.175915,6.311656,-6.961335],[6.866301,9.442881,4.630806,-3.846478,4.280814,3.996765,4.715425,-8.080848,-6.938329,0.238724,3.823640,-0.662027],[-4.387682,8.739555,-6.335513,2.679541,2.912568,-3.999000,-6.374949,-9.897123,-8.535314,8.312004,-1.789588,-0.187511],[-6.514720,7.535247,9.486772,-4.902405,8.406164,4.319257,5.389168,4.616179,8.421910,2.323078,-3.912180,-1.854046],[4.170152,-5.827340,1.220614,4.073989,-0.979490,-4.341661,-9.765038,7.658680,-8.780748,4.108037,5.918882,-9.229124],[1.884277,-1.322100,2.999196,-8.248825,-5.588001,-7.998598,3.826822,1.264448,-8.071116,5.278816,-1.217887,7.616178],[6.497856,3.181872,2.694782,-0.587968,6.460461,0.594415,1.603437,-3.867707,-7.586404,0.209095,-5.417765,-1.230397],[-6.004543,5.312219,-8.876428,2.631139,5.264642,4.597638,-5.491393,4.928799,-6.325094,-9.592404,7.894410,-4.654982],[-9.510521,6.762209,-1.708631,7.145040,-9.775193,-2.205453,4.990581,-4.185013,-1.579770,-8.275034,4.219593,-8.353729],[-9.437525,3.643557,4.704501,9.447459,-8.369272,-3.438057,-3.740636,1.711672,-8.643930,-5.455120,-8.900104,3.609686],[-9.094145,5.647417,6.930678,8.205706,5.784732,1.334556,-2.339514,-2.267920,-2.070536,-6.595536,-9.405053,4.490116],[0.744969,8.498454,-1.641052,-6.211584,-3.200731,5.232010,1.362792,2.937595,1.491266,-8.215077,6.398836,-6.695095],[3.586451,0.183815,5.521091,8.766806,-7.286421,-7.597092,5.171839,3.299835,-1.377369,6.397118,7.900493,-5.617391],[-0.270517,3.055089,1.041594,7.716660,-9.308873,7.604768,6.615116,-3.872770,5.300612,-2.902289,4.587442,-9.324476],[-6.488987,9.998590,-0.440161,8.991624,-3.954087,-8.498062,-6.486725,2.591226,-2.962444,-5.162976,4.790840,7.983959],[0.689627,8.547061,4.938706,0.733187,3.007217,-8.822843,-0.647445,-4.959519,-6.573433,2.364957,-9.894931,6.445709],[4.458065,-1.222627,-6.864629,7.572661,-4.984015,-6.529168,-9.217486,4.386885,-4.182336,4.367164,5.180677,-9.024133],[-3.919729,2.492577,-1.927279,-1.570738,-4.061857,-1.434211,-8.214225,3.775737,-7.752778,8.093617,6.252975,-7.586722],[-8.984644,-4.758211,-7.500328,1.317085,-7.445140,2.300639,3.414820,-0.225866,4.459210,-8.619801,-0.670528,-5.543717],[5.027511,2.196119,-5.089363,-1.121516,8.829978,6.250425,5.836711,3.071074,0.913733,-3.301572,-8.228029,-7.518122],[9.272658,8.609264,-5.505734,-8.940849,6.183650,-6.680691,-6.665225,-0.209605,-6.273278,6.078702,-9.202259,4.142456],[7.767687,-1.726225,9.143496,8.585968,9.616824,-4.875675,-2.381554,1.584039,7.832299,-2.494850,9.936816,4.382255],[-2.939206,7.938589,3.180587,-2.603572,1.853555,-0.638852,5.165141,6.930052,8.597301,4.809356,7.643312,3.230011],[-5.491156,-2.129238,2.526330,5.773182,-8.671818,-3.898025,-2.984872,-2.577034,-1.369089,-5.391337,8.497670,-6.473820],[2.336693,-5.295197,4.157379,3.214148,1.284717,0.857917,-3.368758,-6.618685,8.154125,-6.609560,3.986469,9.227119],[-0.188567,-2.614540,-3.997873,-5.159748,-0.857658,-1.215039,-6.369721,5.488680,0.477880,-9.240737,-5.656920,-5.178798],[-1.810371,3.188700,5.171331,3.489482,-6.104996,8.034303,-4.054934,-1.426109,6.124758,-6.421236,4.613281,8.059183],[-9.156245,-8.699822,5.474911,7.282552,4.650697,6.628687,1.471389,-5.513409,-8.298828,-6.336297,6.211296,9.576844],[1.574962,8.628075,-0.713979,3.081544,-0.213646,8.643555,-4.298417,8.233098,9.804601,8.793222,3.214493,-0.113820],[3.344363,2.813515,5.925289,1.195570,-1.868719,1.337491,-7.046658,-5.082203,-6.251845,-8.887458,-3.921086,0.073661],[-2.150882,-9.022627,-1.228427,-3.704741,-0.065034,5.302859,-2.655034,-0.404483,2.294393,5.352049,0.665046,-3.299399],[9.726763,-3.159931,7.542336,1.704016,-7.176484,2.967509,-1.905581,7.880687,9.763244,6.890649,8.389965,2.958402],[2.612972,-7.045026,-0.230513,3.347036,0.602476,4.476284,3.736705,9.916743,-1.193551,-4.420694,-9.447642,5.175198],[-9.941116,5.881287,1.068673,-7.220712,-4.062078,7.457515,-3.399083,-8.752682,-2.904304,-2.504504,2.449401,-8.200834],[-1.897104,-1.004206,-6.819124,2.036365,-1.477689,-9.116261,4.123244,7.551825,-2.407703,-9.190771,6.373622,-5.226641],[-2.645522,2.848987,-0.954423,6.920941,-5.524813,1.180069,-3.091520,-0.598956,-1.826060,-4.506271,4.395540,9.877735],[-2.279491,-6.808999,-4.410589,9.821331,9.954453,-8.914542,-8.600062,9.675025,-2.352489,7.318434,2.608250,1.491675],[1.752305,2.786830,8.375173,-3.191579,-7.692412,3.460029,0.858812,2.377403,3.247656,0.704997,0.153349,6.016493],[0.488521,-2.951100,-7.655050,-0.368440,8.175352,-7.071125,-6.140249,-9.254416,-6.287729,-7.545527,5.025803,-9.630803],[6.107816,-4.249492,-6.949655,-2.882545,9.544300,-3.885314,0.856606,0.620649,-8.657352,0.775070,-0.049068,1.744374],[-2.661263,-9.934686,1.677599,-2.594351,-0.337956,-5.174181,-5.006341,3.615504,7.615556,1.337562,-5.454625,-1.033426],[6.104788,-3.923837,8.579596,-6.041133,8.731509,1.020430,3.893338,2.802274,0.598829,2.286063,0.831148,3.103785],[-8.629420,1.730537,0.237371,-9.673787,4.544680,-8.749954,-9.259942,-0.888343,0.441909,6.243517,-5.412744,7.017185],[-4.611993,5.784541,1.640294,-6.869488,-7.469783,-1.645151,6.800383,-2.532491,2.857945,-9.309961,8.802355,2.938115],[-5.216648,5.668328,-3.938696,-8.054700,6.836588,-9.515254,-7.636899,8.334339,-0.245098,-6.449875,-7.913615,-9.060411],[3.688422,6.005226,-4.514145,-8.455761,6.195166,1.331299,-2.015066,-5.888002,8.763813,-0.209680,-6.028849,-8.115654],[3.558310,-1.102520,0.976914,-1.628490,2.474747,5.183596,-8.309876,3.494200,-7.005058,8.799822,-7.030939,-8.668952],[-5.817249,-7.122551,-1.621889,2.133856,6.432520,9.939550,1.710514,-1.405445,-6.759105,-4.139828,1.898081,-3.776978],[-6.152830,-6.352435,-6.167464,-6.899211,8.296702,6.158261,-9.711381,9.961235,-0.617564,-6.984063,-6.092536,8.599430],[5.397924,-8.577656,5.311612,-2.635204,-4.344786,-0.809851,4.063468,-1.922721,6.538122,4.323761,-2.017734,-9.760325],[8.260774,-7.165651,6.244799,-0.724363,7.316376,2.823033,-6.051159,-5.221163,-9.296852,7.438324,-1.954690,-3.008351],[3.917236,7.229023,-8.063815,-8.323011,-9.153337,-5.361367,-5.252782,-2.122870,8.087471,-8.261118,2.849636,-9.563940],[-0.082000,-1.104188,6.499863,-7.492227,-1.397880,1.050294,1.984070,-4.392611,-9.241504,5.271790,-8.471834,3.456544],[8.190593,3.382928,-3.108734,-1.219822,0.823520,5.108243,1.422796,9.209699,7.350228,3.541267,-3.628912,2.927849],[-9.288747,-7.560067,-5.988607,-2.030715,4.007691,6.414564,5.514260,-1.717270,-1.629191,-7.534739,-8.637430,4.710422],[-4.307299,-4.540345,-5.828815,0.403109,2.216915,1.588253,2.981508,8.652338,9.951701,3.895077,8.081446,8.536682],[3.146684,5.149258,6.189259,-2.185955,2.386427,1.916916,-3.617442,-9.411997,-3.408767,1.984068,3.076751,-8.958635],[7.424336,-3.014816,-9.817403,-0.071073,5.996065,1.521718,-7.736229,-8.867505,-3.271428,-2.872358,-5.451352,-2.833778],[-2.935013,2.085470,0.831155,9.441635,6.719862,6.284890,1.650905,1.658864,7.176054,-9.803870,-5.078331,-5.178118],[-6.667275,2.294627,6.811820,1.828217,-8.573390,-3.614580,-8.753260,-6.426326,0.365347,5.688445,-6.022198,1.267880],[4.470263,9.163376,-5.392012,0.173772,-8.062781,9.445226,-6.017201,-5.997102,7.761334,-4.523716,-5.083667,3.862489],[-2.401816,-5.865329,-4.755825,8.268481,5.459291,3.553770,-8.095740,-6.593816,-9.129093,-0.509252,-6.424688,4.964295],[9.777545,-3.072514,-5.845507,3.905265,-5.429125,5.744816,1.069492,5.083795,-2.243776,-2.664758,8.419654,6.784057],[3.322565,-2.411387,-6.405447,0.028774,-7.042037,6.641636,-9.464373,9.933178,6.709211,8.017549,8.616205,6.244604],[0.848006,-4.854364,2.687559,-7.164449,-5.875268,-5.865087,-8.193982,-3.455264,8.695614,-1.210259,6.251156,5.308746],[-4.098166,2.482120,4.308131,3.178401,5.469775,1.320369,-3.082305,3.572884,-3.830708,5.236220,2.326946,1.486030],[-5.489289,-7.620724,-5.570539,-3.838744,-7.855809,-3.021993,-3.403899,9.071699,-0.448298,-4.295774,-7.712673,4.104520],[-7.034538,-6.033550,-3.557697,-5.523254,4.785117,-2.493821,-5.032085,-3.294259,9.374876,-4.723001,3.870581,4.263000],[-9.265972,-4.581588,7.967057,-4.767704,-8.695465,6.548687,-9.784799,0.699404,9.628103,0.106430,-2.424405,-5.227691],[0.118478,-7.533202,-3.957492,-4.220215,7.828616,-5.493448,-7.678349,-6.819411,0.932192,8.279308,-0.105364,3.550984],[5.406168,3.980387,-0.465083,7.825800,0.127956,-7.320045,9.208650,-4.322145,3.155847,8.466905,1.232692,8.991042],[9.513159,9.172399,8.085238,4.995699,7.029784,4.238506,3.905853,9.277643,-1.086659,-1.190991,-1.911389,-4.270554],[8.213110,3.597837,-2.760686,5.227408,-0.178493,3.000385,0.788339,-6.439555,6.370875,1.645054,-9.665957,2.224468],[-9.892488,-3.050888,4.861920,8.028468,-4.981589,2.324405,0.488979,-6.151199,5.425104,3.869538,0.871115,-3.764102],[0.341786,8.436392,-9.234242,-3.770429,-1.932391,-0.331701,-0.104944,1.680220,-8.749865,8.902117,8.901013,0.296965],[9.462282,-7.922813,-1.125546,2.040150,-2.127828,4.280125,-6.970661,3.168514,-2.037096,-2.239788,3.637022,4.375525],[-3.514443,4.827915,7.287704,8.242492,-5.505497,6.176377,-2.548405,-7.314391,8.968083,7.068345,-5.579685,-0.360323],[-5.520177,6.071508,-2.312803,-4.272126,8.220866,2.568221,-6.837794,2.272898,-7.538934,-9.064550,3.229395,0.986938],[-5.558033,-1.388169,0.416055,-6.826318,0.034951,-4.930053,-8.463011,2.461522,-8.512940,-6.875123,0.418601,2.065460],[-0.070513,-4.288070,5.371896,-7.035073,-5.499988,-5.115429,-3.498286,-2.155653,-4.307191,3.236506,0.658741,-4.801099],[1.620444,-1.584535,-8.793461,-6.514451,6.362374,-1.404205,-5.634993,7.520872,-8.176858,9.900318,-3.563776,-3.882171],[-1.442438,1.994497,-6.487357,8.759586,6.314404,-7.770512,-7.781430,-8.107636,1.347032,-7.098237,-2.135949,2.563579],[4.358145,1.447749,-9.420457,-4.380163,7.861305,-5.189637,9.611523,-4.752012,4.889627,-7.531330,2.616563,-5.072964],[7.252120,4.144220,-9.656353,-0.907811,9.866770,3.109986,-7.130172,-3.722045,1.504155,2.016884,-6.984348,1.496152],[4.856138,3.612601,2.187247,0.736157,-8.191935,-1.325505,5.892080,-3.692660,-7.881860,-1.297900,5.943333,-4.156671],[1.890233,2.198075,3.104896,-8.648202,-8.840411,-2.646907,9.427967,2.026635,-1.176139,-4.592210,-6.692148,-6.950214],[-6.545285,5.553583,2.515132,-4.495761,-3.996413,-4.772583,1.362241,-9.752953,9.579377,9.302564,-0.356499,-4.788067],[-9.280492,5.126275,-2.011690,1.479342,-0.330545,-3.579184,-0.653738,4.144439,5.593111,0.534486,-8.685814,-5.468445],[-1.500998,-3.669590,-7.740127,3.222947,9.312026,-6.039135,-1.366391,-8.864273,-0.162474,-6.257643,6.649265,0.324808],[4.203254,9.055741,-7.425025,5.072901,9.545505,-6.089529,5.020002,-7.193334,-3.490216,-1.383870,-1.548784,4.190047],[0.387915,-8.743266,0.383702,6.674621,-2.926316,-7.143419,6.613338,6.875359,3.330181,-6.049402,2.227287,0.900504],[0.953931,-0.228180,-4.273010,3.184268,9.836852,3.025544,0.809552,7.174464,0.891581,2.395661,-4.712416,-1.848324],[-2.008366,-0.052827,0.688018,9.086063,7.103080,6.589882,6.943198,9.471961,-9.532496,-1.430600,-8.277359,0.456367],[4.632667,-1.901064,7.404587,-7.074360,8.537006,1.125361,-1.774826,-1.355430,-5.518968,-0.734518,-6.019491,-7.600467],[-4.370261,-2.496576,-0.590821,-8.642694,-2.440282,7.602924,9.174936,3.898012,-8.697755,-5.552614,6.769960,-8.961417],[-6.167752,-3.045520,8.486553,0.380437,3.853286,-3.470827,0.843359,0.322042,9.809281,0.995334,-0.265344,1.876631],[9.211575,-3.034814,-1.798813,-6.982957,6.555386,0.928839,5.044673,-6.501844,1.502156,-3.117206,7.678331,-2.701606],[2.438495,-9.531792,2.212023,-1.378819,0.170252,4.346575,-9.839317,-7.660597,-2.809301,-9.235017,-4.892304,-0.961006],[8.244896,-4.320119,1.036008,3.801964,-6.967501,-2.531478,8.252747,-3.359767,6.870728,4.849940,2.784639,6.747018],[2.851290,2.182360,-1.828614,0.289389,-5.864614,1.835251,8.924099,-8.944119,-2.399886,1.664432,-2.875797,-6.372720],[1.234052,0.621358,0.467539,9.297129,-3.055201,-6.539705,-7.990611,-8.963119,0.898046,-9.526021,-1.676605,-7.055158],[-9.919789,-9.253938,7.407538,-9.959791,-7.164982,9.307152,0.369441,9.106901,4.327400,-1.147664,2.086107,-5.068858],[-6.518144,1.461278,-7.840363,6.519438,8.654001,0.903792,-7.282236,-7.687243,0.463802,-1.648889,-9.016635,-8.044821],[6.554104,7.134798,0.970857,9.110869,4.315105,-2.587082,-1.319462,-0.406238,3.360646,-6.493429,6.016336,9.947776],[-4.404138,8.240402,4.361847,-3.967353,8.875199,4.552883,-1.260428,-8.113003,-3.594582,5.268033,7.018558,-2.578263],[1.825148,-0.954726,4.540862,7.883666,-5.524977,-6.265701,-8.392439,-4.053345,2.808532,-3.481021,5.161241,8.970975],[2.863508,-2.174542,-9.343073,8.895223,-4.812892,-6.308095,4.036249,1.060878,7.892475,3.070131,2.770964,8.104538],[-0.800143,-2.657574,-2.765647,3.885120,-1.379070,-8.589667,-8.897759,-1.504585,-4.994497,9.217103,-4.224443,7.210230],[-6.143856,1.942865,-4.283561,-4.568018,-9.809751,-9.549262,-1.653551,-5.901393,-0.685193,7.181426,-4.857226,8.362716],[7.817923,0.086116,4.028704,2.485801,6.086942,0.777428,1.577870,-8.758559,-3.834971,-4.835742,-7.609437,3.177777],[-6.623914,-6.937985,-1.788384,4.648639,-9.169534,6.980822,3.837813,1.215255,8.645786,-3.887392,6.351165,-3.420488],[-7.272664,-5.174151,4.656675,8.029697,6.984064,9.948341,3.975560,6.405199,5.853812,1.323854,2.769858,0.805498],[-5.599015,4.423076,5.996450,0.916693,-3.072802,-1.747667,-0.177377,5.421673,2.084778,9.740005,2.998754,-2.375795],[-5.042792,1.098396,3.208646,-3.623434,7.545021,4.715753,-8.656133,-1.508509,-3.185392,-5.507186,-1.929224,-6.022556],[-6.575744,-2.011815,-5.253883,-4.862242,-2.925157,-5.026805,8.102338,2.363751,-2.929517,1.958200,-7.228803,-9.529443],[-8.719090,4.223858,-3.434867,1.441478,1.827351,6.533615,-8.758174,-0.263615,7.180389,-0.863849,-5.668539,7.400111],[-7.422023,6.430942,-8.668389,-2.948779,-8.935318,2.625272,8.745871,-5.274248,-1.910417,5.025250,3.496397,-2.415798],[-0.555728,6.220791,-7.396183,-8.823412,0.847775,5.729118,8.729789,1.125817,8.232265,-6.922449,4.293766,-9.833612],[-3.213443,-2.795117,6.320289,1.335648,-8.620718,-4.039243,3.537612,9.170697,-7.217859,6.535168,-3.526230,-2.989899],[9.193637,6.345811,6.188427,7.773283,0.837172,2.106730,-3.229158,-4.718215,-2.454827,4.326099,9.466466,-3.939937],[-9.374493,3.424441,-3.086816,-2.092774,7.761280,-1.881061,6.477206,-3.500366,-2.593183,-3.668800,-1.375126,8.693674],[2.809403,9.535307,7.475253,0.463042,1.578413,3.069150,-1.912206,9.709410,9.224814,-0.068917,0.839691,4.613550],[-8.119886,-7.691492,-9.870268,4.154509,7.818116,9.204117,0.339175,-9.726893,8.137959,-0.985879,7.794944,6.467516],[-9.975750,-9.885579,5.376729,3.304453,4.472798,-6.500912,2.171995,2.129404,-2.630959,8.544905,9.328817,-1.322843],[9.908602,-4.540673,4.240989,5.021944,6.357523,7.551123,0.193713,7.406601,0.596331,4.663789,2.558500,1.661235],[1.738805,5.189538,-1.407299,9.322164,9.536976,-5.244925,-4.494490,-2.806654,3.027357,-8.991587,-9.453891,6.573325],[2.671896,-2.822540,-7.402368,8.364574,-5.588368,-5.687880,-2.862840,0.445553,-3.743911,-7.632933,2.026195,-1.108404],[4.225535,-0.439347,-1.026163,8.536952,-2.520747,8.662491,4.586901,-9.669169,9.160842,-0.397230,-1.887520,0.962736],[8.518129,7.148689,-4.730724,-1.738647,-9.850787,8.238190,-7.400201,2.968631,-5.234954,3.517383,0.627959,-1.094958],[7.958660,-2.667446,-7.161052,-7.133468,-4.204871,-8.045876,0.021200,-9.339106,6.546301,3.527635,-6.628953,-6.824819],[8.119490,-7.677134,2.804795,8.193032,5.484265,5.239861,-4.640395,3.846765,8.243059,1.877349,-4.859400,2.433389],[-4.222881,-3.710263,2.022232,5.156515,-7.069408,0.105214,-9.027140,-7.462452,-2.382162,9.267351,0.338589,3.098988],[1.670195,-9.863833,-4.740120,7.900036,-0.471244,9.287439,2.653237,-9.143732,-4.670871,7.515676,-3.608155,-1.592047],[0.498164,8.481633,8.597041,-7.228092,-2.765029,-9.459658,-4.645290,8.617812,8.624569,-3.318997,4.842683,3.369324],[-4.484332,6.379344,-5.438228,2.669092,5.948938,9.154247,-6.835269,7.945207,-3.317153,3.989372,-9.221082,1.988693],[-0.927708,-7.813635,-6.841051,8.212606,-9.355726,2.769871,8.615464,2.171654,-8.004998,6.605267,-1.850995,7.097195],[-4.501071,8.565682,8.490029,3.614259,-5.903558,0.337746,5.810313,0.995731,0.023245,-5.254566,2.652391,-1.853365],[-9.013211,-0.304601,-8.440455,1.951247,3.117336,3.868571,6.567469,-6.789449,-2.904947,-5.709837,-4.588294,-9.435281],[4.341038,-2.829109,-6.612962,-6.869596,-8.810549,6.211724,-5.547794,-8.451994,4.261679,-9.286844,-4.311454,-2.519585],[-0.485405,-1.858747,-4.316480,1.579742,4.403506,-6.870394,-3.928037,4.987832,-9.759844,5.716191,5.250642,-0.788562],[-9.318927,-3.621949,8.974336,4.546476,7.006212,-6.762299,-7.756584,7.433145,-3.186093,6.886307,-7.599386,6.369652],[4.320282,1.374190,-2.026839,5.940353,-0.694922,7.184615,-6.710633,-9.387344,-3.885009,9.970820,-9.055923,0.023245],[5.315917,0.166932,3.307384,-9.729635,5.253007,8.588226,2.774402,-8.710176,-7.981564,7.008372,8.909125,1.466588],[-2.448381,-7.089214,7.949761,1.738337,4.628695,4.311147,-8.814576,2.015589,5.720245,4.216983,-8.017984,6.188707],[-3.188929,2.596855,-3.111588,9.964784,-7.179194,3.996326,0.241901,-9.855504,8.534938,6.397340,3.782493,5.950258],[-8.153078,2.496665,5.547692,6.817609,5.315350,4.584372,8.601049,-8.601266,-0.834207,-5.997117,5.947046,-3.316016],[-8.842586,-8.630446,0.691382,-1.936896,-9.092750,-7.323893,-2.057002,0.100185,-9.240930,2.393389,-5.292355,0.363609],[0.352000,-2.541838,-9.518803,7.726509,2.286558,-8.395421,-2.469122,-4.922179,-3.165729,-1.729163,-0.243227,-6.870433],[-2.351953,8.333085,-0.411243,0.168855,-5.725746,-7.482539,6.126600,1.557720,3.323255,5.911046,-1.150742,-2.116936],[-3.933391,-9.190754,2.649367,4.159347,-1.842281,-1.735297,-7.525347,6.021346,9.254110,6.209095,9.874660,2.497495],[5.595157,-8.051093,-6.483927,-9.745606,6.202002,-5.227976,-8.328331,-2.069822,-5.132065,8.147659,4.736545,6.672630],[-5.032824,8.054625,8.958750,-5.704953,4.986983,-8.571905,5.727642,-9.138711,3.342226,8.219879,-0.586982,7.216753],[-4.350492,1.131505,2.072064,8.915354,-2.670411,0.857572,3.994146,-6.882601,2.535059,1.485616,1.922998,9.042118],[-4.652814,-6.815694,5.541824,2.075518,-4.345629,9.397259,5.520785,6.928194,7.632711,6.826655,-4.493289,4.080406],[-4.406675,2.957387,-5.503917,1.453576,8.043152,1.293118,5.871930,5.757339,-5.422387,1.156743,5.763312,2.519422],[1.408516,5.569100,-1.471268,2.824520,1.950885,-0.071215,-5.479664,-2.311913,-8.637362,-7.242020,-9.790661,4.154259],[-1.184238,-3.700884,-2.890793,-4.842810,-3.831776,3.025171,-3.108868,-1.945785,1.667235,5.452191,-9.154408,-7.779757],[2.021246,-0.076932,-3.196889,-5.387857,-2.419202,-4.906053,-8.707451,-3.937397,-9.570623,7.725526,0.581684,3.422942],[2.280110,-7.361552,-4.238853,-1.824047,0.398100,-2.609141,-2.308194,-4.143887,1.107751,9.375708,9.353116,6.790512],[-1.332483,-6.185034,-0.549252,-3.543063,-5.616407,5.921564,8.471356,-1.996042,-4.236057,-3.511058,-3.682877,7.330587],[3.396024,3.622123,-1.826286,6.419969,-6.650638,-8.687769,5.360617,-9.268672,6.670402,-5.680661,7.481136,4.986425],[2.506664,-5.374755,-9.556619,-5.002422,3.167720,-4.186544,-9.588708,-6.091674,0.593960,0.169531,0.222168,-7.441657],[0.079285,-3.238778,-5.780632,-3.014424,3.792031,6.340748,-0.570002,-7.378185,2.287268,8.291066,-1.321496,-6.559925],[9.528374,-9.896814,8.330070,4.754241,2.794965,1.106761,-0.682515,-4.735760,0.153344,2.900505,5.765948,7.621501],[4.942655,-2.266079,-8.004102,6.527421,-6.199165,-2.223467,5.284800,-2.354512,5.869609,-2.343308,8.028233,-2.528988],[-0.605433,-1.176949,8.434379,-6.113973,-2.326895,-3.251520,-5.127619,-2.496120,0.893159,-9.772025,6.120486,6.517708],[8.039275,-9.289565,-9.660353,7.526876,-1.516740,-3.327157,6.255672,-4.747087,6.765009,-1.475829,8.141698,-6.707498],[1.603711,4.604211,5.644109,-4.997385,-2.657248,0.082895,4.108508,0.539968,-1.667370,0.232021,-7.055228,-6.642709],[-0.574406,2.100080,5.927840,-7.813934,4.918323,2.822903,-6.513153,2.087231,-1.244516,-6.763616,3.313935,-8.461590],[7.160768,4.191509,9.773429,-5.847435,-4.848391,6.265034,8.285250,-6.542786,1.734892,-1.994388,5.128066,-3.701077],[-6.532745,1.602976,-1.911856,-9.053360,7.125330,-8.796013,1.308538,-6.193980,-5.737727,1.472947,9.623538,-2.114559],[-4.270865,4.823613,-1.702538,1.149362,-3.987975,-3.598095,-3.929202,-5.362779,-7.696947,3.528129,3.173491,0.066022],[4.345246,-8.928188,7.448806,-4.005497,1.585711,0.297282,1.692050,-9.218857,-4.331538,2.122932,3.247654,-8.652906],[-5.831939,1.920907,-5.266846,9.416250,-8.365367,-8.701588,6.085725,2.760972,-3.824639,-7.563964,2.406015,7.767173],[-6.133353,0.125022,1.516307,2.812978,2.308168,8.260137,-1.795303,4.023212,-0.122785,-5.710171,-5.126344,-6.545976],[-2.467552,9.471707,-1.246815,8.398851,2.232721,-2.566358,7.050540,-8.756667,8.298954,-7.002119,-0.097060,-1.419134],[7.106538,-6.686151,-5.305297,4.893857,-7.551527,-4.911138,3.542968,2.442700,-2.211342,7.999486,4.505653,-5.911364],[-8.905973,-6.532263,9.543257,5.457384,6.436126,-1.286850,9.056021,9.574918,-3.806413,-2.224350,9.826577,-7.013266],[7.275701,8.735877,5.544058,6.711306,-7.777252,4.282236,-0.983403,6.450112,-0.027617,5.835035,5.521069,2.763209],[6.386002,7.270359,1.142334,-5.145447,-5.200474,-1.786361,-4.539737,7.596063,1.825785,-0.726629,0.569495,-7.390824],[7.809755,8.135311,-5.917139,5.229585,-9.799372,-6.939850,-7.002436,7.211257,5.495075,6.154809,5.652737,-1.653360],[9.244861,6.972756,-6.596457,-1.453028,2.707970,-5.591107,8.467690,7.909527,4.916640,4.074101,8.512853,-4.801711],[-8.985612,-0.157360,-0.013039,0.729499,7.764722,-4.013970,-7.287567,3.639264,7.885507,2.696946,1.677779,-1.334253],[-4.225926,7.635498,-5.807698,-4.496485,6.589480,8.677922,-7.843796,6.237200,3.012316,6.948867,-3.529393,8.333552],[3.145595,-1.864116,-7.341020,9.871937,1.911120,-9.958220,-5.082127,-2.593793,7.644634,0.061368,-7.856975,7.261139],[-2.250237,2.442602,7.532397,-5.336100,6.498418,-5.001874,-3.070532,2.466185,-9.956393,2.813305,-8.957940,-7.141355],[6.789346,0.402586,-9.578774,7.146027,-8.699974,0.926149,-4.417361,-6.440688,7.516432,9.447760,-3.811975,6.631210],[-0.645984,5.905217,-6.817238,-6.283279,4.217868,-2.743685,-9.812073,-0.460641,-8.875735,-2.288576,-5.546811,2.998925],[2.787042,6.175904,4.107168,-1.524603,0.898560,-7.572618,3.215617,-0.315355,3.318089,-6.713426,-4.028870,-1.118501],[7.173167,5.344762,2.829103,4.880810,5.345364,-0.111327,8.987346,-9.967093,-6.377040,-9.778048,3.176088,-5.240852],[9.475699,-1.090371,8.039331,3.597334,-7.636808,-6.663068,6.004186,-6.557723,-0.170791,1.422211,-4.315668,2.113033],[-0.592881,-8.103486,-0.568873,-3.263909,-4.521230,2.321558,4.634548,-0.285580,-0.119391,1.181327,-3.146203,-8.572894],[-5.165235,-2.709775,-2.500419,7.507427,8.866979,-0.866100,-1.973596,-7.527892,-1.241629,5.197823,-1.232929,6.422928],[-9.568412,-1.325258,-4.702372,-6.323980,-2.834406,8.026862,-1.994513,3.349539,1.676796,6.292571,8.975452,-8.726277],[0.325382,1.973690,0.495874,-5.240004,-7.094236,-8.359587,-9.285213,4.165786,9.424118,2.614021,-3.029987,7.643278],[-2.383165,0.811590,-6.374225,3.926951,7.572889,1.533052,3.165084,5.324783,-9.694498,7.408970,-0.524243,0.359380],[6.274511,3.881822,-9.196049,6.627664,5.481782,-3.930399,-5.160325,6.657365,-7.485843,-6.418592,2.638262,8.835651],[0.587125,-9.850414,-6.267171,8.177885,-1.232120,3.067835,-9.052882,6.835962,5.146381,5.923755,-2.112014,-1.218888],[-7.052686,-2.622407,-9.799880,4.029820,-5.079246,6.040744,-1.781991,5.028289,5.312220,0.169817,0.689546,6.582624],[-0.459301,2.011109,2.303758,4.388249,-1.572148,7.908462,-2.613863,6.959418,-0.741154,9.866710,5.062689,5.318466],[7.451434,-6.055537,-1.369269,2.950275,6.682871,0.316851,-4.479658,-2.362299,-5.996776,1.836924,-0.039628,-8.359952],[4.350039,7.106918,-0.950662,4.330128,6.396104,-1.516193,7.452213,-3.988922,-7.733514,-9.694124,8.633839,-8.887331],[-7.991519,-6.961676,-4.040507,-1.805511,-0.122232,-2.295127,-5.348304,-5.698924,-4.585894,9.734070,-2.865412,-3.382674],[4.632059,-3.717219,2.398793,5.426551,-6.118920,-3.610133,-0.650347,5.813990,6.675996,4.149933,2.589123,1.655616],[-8.932428,-4.822087,2.994486,-0.300672,7.244488,8.752967,8.293210,-2.983091,-8.218649,-0.495112,1.484238,8.628303],[5.182688,0.653228,-0.217718,-1.979779,7.287099,7.812522,3.969683,-4.641569,-8.380396,1.586332,-9.514539,-7.917341],[3.180944,0.064776,-1.636881,8.606713,6.611506,-8.189899,5.555483,-6.266292,2.168565,1.465776,2.846717,2.923809],[5.932678,8.353823,8.811620,-8.472643,-5.777929,5.657951,-4.477703,3.788725,6.202037,5.570921,-3.823474,-6.479552],[-1.506338,3.499603,5.417769,4.539793,3.787441,-7.001890,-0.434429,9.044038,-5.982171,4.101269,3.406716,-5.389969],[9.198634,-1.596280,2.027114,9.382167,-4.609039,-4.522131,-9.264463,0.346606,-4.009337,-6.714589,-2.379050,-7.038059],[-5.394877,-1.465702,-2.745943,8.311898,-7.333939,4.664076,-4.396517,9.848207,3.411449,-7.988540,-7.584467,-3.047569],[8.988110,3.583906,-7.030769,-6.275672,-5.390879,1.959265,4.740422,-4.206101,-8.248452,8.745840,-8.841855,8.605021],[-8.790352,2.504366,4.305970,-3.439720,-9.889137,3.658450,6.317184,-9.419591,-7.159795,-0.355527,-5.413452,4.893492],[-4.410611,9.608177,-3.638736,1.076926,-3.807503,7.720008,-8.156124,-4.907160,0.850204,7.326029,9.592155,-6.363870],[1.731180,3.280468,5.100105,-8.775338,5.792538,8.732365,0.901501,4.008198,0.833351,2.606105,-8.487291,9.830666],[3.445096,-8.178823,-4.335274,-3.026984,3.003762,9.891368,6.744254,-4.632094,3.443875,-1.561646,-1.285242,-3.169106],[-2.203798,5.633672,0.195896,-4.523476,-0.547905,6.972636,-4.046008,-8.619284,1.398939,-6.726184,-1.189458,6.510395],[-9.190146,-1.930626,2.605953,6.690037,-0.813743,-7.866123,0.953503,5.415996,9.650318,-0.942544,-4.810700,5.473957],[-7.523165,-7.352459,6.805391,-3.537152,8.525969,-8.508561,1.505835,-2.644998,1.586350,4.368197,-7.154871,-3.926076],[8.951035,4.975824,7.789142,4.857868,-2.791075,-1.633598,9.329213,-9.277783,6.296657,-3.752316,-1.250303,8.051431],[2.308410,-1.869109,5.987243,-0.831403,8.498576,-8.196084,-7.955342,-2.916296,-9.473373,-6.028290,6.206245,-0.994727],[-2.812574,2.550105,-0.164978,-1.507402,4.090008,5.471698,1.962478,3.966096,8.920153,6.436859,1.867109,-3.264336],[3.337247,7.055172,6.080531,6.497516,-2.169657,-1.843270,9.070689,2.271832,1.468401,1.558774,-1.818226,6.064573],[2.401056,0.272473,-7.337061,-6.274886,2.249910,-2.402812,0.138533,-1.258253,-3.935322,-7.026037,2.466737,-9.570919],[-2.844512,5.356223,-0.764402,-3.767474,0.490288,-9.081991,-2.878767,1.901333,5.654382,-4.866928,-6.559299,-2.950089],[-8.922163,-6.085149,-2.410264,-5.653847,4.321080,0.984852,1.157018,9.480655,-0.130386,-8.839591,-8.184861,-6.721840],[-7.004642,-3.546473,5.750138,0.440992,-9.031534,7.308218,3.832547,2.250786,0.792719,-3.737247,3.172902,2.927127],[-9.455710,-2.899115,-3.761985,-4.081922,1.561284,1.897580,6.942193,-4.412735,-1.109464,9.921788,-4.068135,-7.666854],[7.908026,-1.142313,-0.849951,-9.563039,1.602137,9.674292,7.686046,-1.640914,8.250320,7.863958,5.799370,-9.333038],[9.255717,8.474860,-5.083293,9.548533,-5.588988,-4.075974,-0.648276,7.793612,9.991030,0.941588,-5.092060,-2.261836],[0.900270,2.642595,8.323533,-1.760506,8.784678,-7.247006,-8.740701,8.946872,9.583112,8.812517,0.299830,-1.413920],[-5.823280,9.738345,8.239516,-5.415645,-8.607584,7.691303,3.480298,-3.268247,6.928319,-2.944290,3.522023,0.044115],[-2.491707,-7.802649,1.658449,-6.448582,-1.449780,2.439596,9.929578,-8.115683,8.739319,-7.015630,6.354870,6.506328],[0.361042,-8.069370,1.976621,-5.114638,5.915600,7.802455,9.566128,-5.738830,-5.234897,1.185791,8.200764,9.409029],[-5.116985,0.430993,-0.026981,-5.383366,-7.562378,-1.894113,-2.810035,7.634280,6.604698,0.471651,6.595850,-8.437360],[5.541103,2.099986,9.485048,0.464070,-5.695988,-3.700085,2.346928,2.784609,2.228033,4.775858,-1.517337,1.817416],[-8.807522,-5.425577,-8.327467,9.533399,-7.710793,-2.049187,0.913455,5.390476,-3.792768,-5.277054,5.831748,-0.256804],[-0.535796,-3.338533,-5.921914,-5.123210,-3.630169,-7.501034,-0.538266,-4.377842,6.255602,-1.644738,-8.743056,-5.345227],[0.613832,-2.717462,-5.399068,-6.294080,3.628143,7.237460,-8.714582,-7.931086,-7.598262,-8.675771,-9.012684,-9.991082],[7.002747,-8.103627,-4.156475,7.968786,4.521478,-2.205632,-1.475564,-4.986616,-3.450035,3.349026,-0.610220,1.452406],[8.741848,5.212443,8.173829,6.470120,-5.251366,-1.621642,-9.282235,1.676552,-5.096807,-2.584905,-6.205815,-8.619459],[-2.276091,5.669139,5.906165,-6.866935,-3.565753,-1.930135,2.731852,9.743951,6.509903,-2.107379,7.693703,3.472138],[-8.210744,-8.392900,3.581749,0.927533,-8.608580,-4.684996,4.445991,-1.493106,-3.158168,4.933458,-4.173170,9.445465],[8.092414,-4.822029,4.137194,-6.204448,0.246589,-0.075197,9.557761,-8.175837,1.501929,6.326984,3.533646,-3.809410],[-2.062856,0.005569,-3.919232,-5.947076,1.163392,-8.740839,-2.926510,-1.687925,1.740897,-1.697074,-9.788199,8.050531],[0.124410,-3.595626,-8.538018,-1.012177,2.048824,-9.870848,2.599580,4.996083,0.138060,4.374604,-3.331509,7.882216],[8.898994,-6.566218,-6.817020,2.545637,-7.494877,9.945731,-1.440532,5.805376,5.922548,-1.564525,-8.265992,8.642380],[0.498780,6.433452,-3.559188,-1.470720,3.016120,4.042836,-7.934705,1.757905,6.441575,6.369403,1.273293,4.570592],[-2.907718,1.386828,8.628618,-6.743211,5.161050,-8.962519,-9.221028,2.723069,1.520736,-7.890041,7.244170,-7.929739],[-7.676998,1.963148,-9.724777,-1.639290,-2.076037,1.749096,8.204887,-4.650671,0.778353,-4.192974,0.599599,6.198323],[3.395065,-4.961838,-8.162306,3.166295,7.296241,-7.068016,2.966475,-8.463121,-4.587933,1.753679,-1.736658,-2.643685],[-3.082360,7.768152,5.779883,-0.182475,-1.416881,0.485358,1.692910,6.763712,9.629425,-0.651091,2.439591,-0.649244],[-5.020298,6.546720,-3.777455,-1.294669,-7.467742,-3.002308,7.436030,-6.514137,-8.381688,-5.428970,-9.479261,-4.454309],[5.065959,-0.257220,9.728287,-4.079497,-0.185204,-8.976926,5.832269,8.555910,8.186149,5.925957,-1.264914,-3.006301],[-6.606762,-7.154643,1.685998,-8.561098,8.661918,4.293085,-6.700880,-2.389647,8.646131,7.620689,-5.739070,-7.340986],[-0.235544,-4.872346,-0.883186,1.016773,4.629824,9.652206,-2.769403,5.456332,0.777839,8.321384,-8.589095,-5.702252],[-2.312586,-6.011324,2.070013,-7.554226,6.130968,-9.291933,-0.241165,-6.747610,-5.126598,-9.609595,5.845403,-1.697712],[-9.799859,-8.876670,-2.724778,-4.631225,-2.848937,5.306796,4.615283,-2.620436,-9.461563,-4.767703,-3.627014,-3.325317],[8.251549,-4.462111,-4.108719,8.494577,-9.412134,6.294671,-6.152292,8.444772,-2.665364,-3.770291,0.831196,-8.205299],[-2.283954,-2.552094,3.322055,5.768287,7.783212,-4.051831,-7.641023,-8.178813,3.320426,0.573223,1.903030,1.045597],[8.657525,3.497186,-6.735457,-2.895295,3.369604,5.619639,3.076860,8.350129,-8.452955,-0.468098,8.532752,9.178866],[-4.606370,-9.136150,-3.711538,-5.225929,-6.166478,-6.985314,0.090914,3.506084,8.754025,-7.083674,0.392156,0.678712],[2.971332,-4.355785,-7.272276,3.265828,7.512893,-6.159421,7.193955,3.674326,-6.914515,-6.843482,6.290736,-8.456192],[4.277444,3.018363,-2.660983,-6.906220,0.570642,-2.383197,3.246346,-3.922765,-5.954091,-5.056575,4.428644,3.089253],[7.192704,-1.968006,2.768739,9.547435,5.221242,0.885266,4.003719,3.213927,-4.535723,-7.387850,1.614333,-4.071501],[4.823499,-3.049277,1.658052,-5.367864,2.197371,0.071742,-8.812187,7.116357,6.475333,2.194767,8.688028,7.073235],[1.201748,9.334999,4.033003,-9.746347,-6.850507,8.342556,-2.761807,-6.779182,-8.999653,-9.468756,-2.427895,-8.957924],[-1.218162,-4.727212,-5.301569,8.064164,3.302960,1.310742,1.908732,6.954809,-8.751078,0.759464,-1.067715,-7.128948],[1.944620,4.038510,6.791406,5.269329,-1.782885,3.643335,-3.863095,-3.048337,4.102134,-5.532317,7.756774,-0.376613],[-5.673858,-7.236253,3.570529,-5.879798,7.217285,-4.699048,6.907071,-2.712625,1.935969,6.397274,-2.857169,1.291482],[8.555126,-7.122194,2.471761,-5.562542,-9.829537,-8.949571,3.774389,-7.349560,8.275535,3.731201,3.824606,-9.136779],[0.883396,-3.207461,8.417047,1.533554,9.450732,6.961075,-1.222436,-5.266851,-8.376225,-6.752974,8.216214,-2.695067],[4.949466,-7.530512,1.078490,8.767809,-2.565505,-1.076385,3.759415,-1.674385,-2.489884,2.007721,7.782014,3.138811],[7.643667,1.711620,1.647320,4.598664,-3.501593,1.626511,-0.389373,-1.127476,-7.937707,-2.314680,9.287335,-5.171759],[-5.930114,-9.233141,0.446802,8.679367,-9.073712,-0.062453,-0.264986,-8.071018,9.728950,-6.947750,4.024091,-0.829944],[6.663889,5.812662,2.741692,-5.323257,-3.730238,3.434018,1.811835,-0.828165,7.050674,9.215152,-7.438359,-2.301971],[4.098157,4.904873,-2.488876,-7.199018,-6.392303,-6.848227,2.815129,5.825678,2.461541,5.818980,8.775399,-3.256597],[-8.782158,-7.264074,-3.003092,-3.588676,2.611829,-4.863800,5.883688,6.082268,-4.137281,2.901049,1.649546,5.872359],[0.210030,5.550673,-0.351095,-3.975594,2.080911,7.071620,3.065900,2.799925,4.475997,-0.567165,-8.631143,-6.415109],[3.187719,-8.041754,-5.032573,-2.063436,-5.793257,-1.999518,4.941640,-9.267748,5.652934,-2.233680,2.893400,7.523247],[9.571798,-4.176614,-1.500812,0.875595,-9.618599,-8.846631,8.601383,4.589801,-1.786588,7.373789,-9.311693,-3.359379],[9.374886,-8.342908,-7.923760,-5.056476,-1.522225,3.680823,3.965438,-9.103876,-6.710204,1.106901,1.481982,0.573551],[-5.052793,-7.779688,-3.557523,2.787598,1.499393,1.124992,1.103219,-6.891307,-7.205272,-7.273845,-1.168337,2.025068],[0.531562,-6.772192,3.436267,-4.182152,-4.638986,-3.468266,2.088505,1.448137,-7.391295,-4.612372,-4.079447,1.953690],[-1.408528,-4.900204,-2.846721,3.728040,-6.073070,3.952846,-1.971932,-9.038855,-4.199999,6.111243,-1.281674,-3.590499],[6.923374,-1.083353,2.450027,-6.086025,-0.317458,-2.113078,7.776250,-8.568253,-3.170351,2.005843,-8.055635,4.823570],[8.315280,-2.749058,5.193544,-2.308290,-0.093078,-0.323250,-2.842130,9.844292,-3.894659,8.296839,-4.479108,9.179714],[2.626841,5.174144,-7.243627,-3.499371,6.780647,1.218880,-9.668289,-6.177609,8.089793,-6.461754,1.806396,-6.762138],[-7.592760,8.223084,8.269391,2.597689,-1.983428,-7.945876,4.402331,-1.449041,-9.227842,-3.613592,1.337776,2.763485],[2.746191,-9.201567,9.158283,-3.943402,-2.970983,-2.574977,1.720641,0.828069,-8.005360,-3.969901,-8.917690,6.250904],[6.238407,8.055785,-2.427000,6.856021,3.801890,-7.091424,-1.117759,-7.537559,7.551755,-4.810050,-9.821352,-7.212538],[-7.783159,-5.818120,4.362397,7.291218,4.853838,5.599303,4.963981,-5.515254,-1.421831,0.099235,2.975668,3.119850],[0.255142,1.123759,0.580954,-3.408102,4.958460,3.191992,-6.645812,1.082755,7.387682,9.313687,6.781643,5.048977],[0.560590,-8.576279,-6.555769,7.373137,6.540510,2.797687,-0.155180,-3.770000,5.113264,-7.063087,-4.252256,1.812118],[-9.836141,-0.392359,-9.849231,1.769263,2.684934,4.336833,0.195101,1.699478,2.708884,-4.885564,-9.425178,5.035827],[-6.197049,-5.358288,8.927962,-1.435444,-6.826539,7.844833,3.721621,-7.594835,-3.179883,-6.060470,-4.483194,9.958932],[9.383682,8.148773,-3.270738,9.895999,-0.185690,-0.372000,1.420678,4.566317,7.591344,3.599472,2.849561,5.720837],[4.623492,-1.137166,1.778831,2.738127,0.405947,3.683316,-1.984324,-1.973193,-0.341851,-2.847415,6.046852,7.072995],[0.499167,6.259839,5.759994,-3.504672,1.599114,-9.251590,-7.304644,4.030024,9.022341,-8.508487,8.629773,-1.914855],[5.306134,3.616739,2.217662,9.773347,9.011063,8.790159,-8.864042,5.720742,-5.362442,-3.193430,-2.936542,-5.532068],[-0.664063,0.430116,0.606082,1.863202,-4.691843,-9.386576,-8.896992,-8.087612,-7.842966,-5.262263,-6.310133,-1.734607],[3.672913,8.275487,-2.693484,6.268286,-3.632415,-2.962312,7.126111,-9.681223,7.528632,6.697104,4.524203,7.781091],[3.715024,-5.692657,-0.956805,2.582060,8.981205,0.858935,-1.505640,4.882125,4.744380,8.234834,6.983838,-0.140353],[-7.029071,-4.690631,-4.161434,0.558357,3.257735,1.233320,3.714180,-2.736109,5.968499,-7.181906,-1.087776,0.974230],[-7.461269,-0.655826,-5.034318,-7.888646,-3.348243,-3.886126,-8.339513,3.054206,4.677604,2.609058,6.021891,-0.318175],[6.924554,-5.459643,-4.012793,6.269154,-5.336164,-3.210684,5.920507,2.057838,-5.859871,-1.983653,-3.947566,-2.340738],[-9.636764,-0.112124,2.895146,-5.641877,0.997238,4.081706,-3.810716,-1.066997,-3.505223,-2.399144,9.745257,-0.673783],[0.348565,6.835077,-4.170125,-8.901473,7.473831,-9.090294,5.268646,-3.999212,9.968777,-5.170984,-1.494141,3.056626],[0.489466,-1.795910,4.284683,-4.336879,4.821280,-2.858855,-0.032190,-0.043088,1.651574,-9.383203,-2.954335,-3.599038],[-7.547538,1.129877,1.027018,-5.168599,-1.351333,-0.674659,1.876280,8.443076,-4.969085,-8.311235,-5.533959,-2.327108],[2.193549,-8.620447,8.607046,9.998764,6.132377,2.393401,7.018490,6.783523,-6.205018,-6.853023,2.263151,1.422082],[4.819016,-0.859053,-6.888602,-3.229669,3.820206,8.744522,6.643051,8.493441,-8.150094,8.578794,-8.299890,0.972474],[-7.821111,-1.027985,9.057156,1.950188,2.624797,-5.373000,5.531960,2.303101,6.066668,5.929964,5.884177,3.362771],[9.840725,-8.916813,-9.208503,6.283977,2.672492,-3.412579,1.150589,9.210544,3.927657,-7.749505,-0.879052,4.663270],[8.503529,-6.435775,7.676271,-9.218361,4.995391,-5.105230,-4.704626,-2.081276,4.275207,4.460436,1.841464,9.306746],[-0.351286,5.467815,8.685864,6.672897,2.745835,-3.708364,1.697506,-3.474163,0.545518,-2.412539,-0.442916,5.808601],[2.198942,-6.442599,9.801282,0.868247,9.541369,5.618363,-5.307620,3.016386,-2.164424,-1.224700,-4.083810,-9.036187],[-0.976151,-4.186639,-6.575112,-9.767520,-6.985405,-8.640026,9.890600,0.837715,-2.336441,6.818769,0.177838,-1.618470],[-8.781996,-1.268233,1.429621,-2.039075,0.209411,-4.747251,-0.281236,-6.268338,3.793764,0.327761,-1.799035,-2.210969],[8.378651,0.999058,-6.410109,-9.000412,4.807555,-5.568878,-8.133901,-3.791499,7.482237,3.358389,1.558297,-0.825209],[-8.022124,8.318467,-4.848151,0.537478,-0.676604,2.914315,-6.496566,5.660757,-2.013552,3.106768,3.819052,-1.911950],[-8.165624,-8.876709,2.172201,3.246480,-4.580611,5.773366,-7.235072,-1.412187,5.419298,3.384642,-0.765913,2.292654],[-7.930262,0.385211,-2.402913,-3.490128,5.898956,1.114783,9.779116,-6.249213,1.248743,8.389081,-8.863655,-5.810600],[0.149500,7.263511,2.789779,-9.462363,2.228282,7.259829,0.792219,3.076232,-5.770514,-4.138503,5.498139,-7.420816],[-9.263550,-4.398679,9.296196,-1.429304,-2.752720,-1.814134,2.065466,-5.852425,-7.843801,-2.214995,0.486585,-1.368374],[-3.598566,-9.351261,6.934923,0.360771,-5.561745,-3.071134,-9.184161,-1.752128,3.378419,-3.498798,9.764749,3.037782],[-9.441958,4.508094,1.954503,-2.215910,-9.398188,0.155595,7.877751,7.743574,-3.965444,1.109342,4.313719,-5.348177],[6.091249,6.510406,5.526529,-3.109027,-0.777623,9.800031,-7.171363,-3.836850,-5.965906,-1.976138,-1.540073,9.098732],[-2.628106,7.476840,-5.637396,-4.118162,7.015487,-7.398629,-7.411006,-7.505420,5.656591,7.189992,1.604248,-8.383312],[4.105274,1.001357,9.814614,8.216588,-6.518148,6.898960,-6.058490,-2.640771,8.285433,-5.070293,8.079067,-5.979698],[-0.615644,-5.801083,1.650538,-5.228698,-3.471435,-7.118787,-9.800273,2.317106,7.561783,-5.456787,-9.871623,5.007054],[9.899567,3.096680,-9.674838,5.765242,7.383662,4.077048,7.317246,-1.434256,7.509871,5.571379,-6.360525,-8.262789],[0.025853,0.834612,7.673552,9.141356,-3.492143,-9.516659,-0.549002,8.737773,4.341664,8.773422,-3.613773,-8.630489],[-9.595833,-1.944743,-4.285872,-9.449406,0.330529,5.139344,-9.320111,1.472985,-5.156559,-5.567496,-7.316691,-3.765151],[-3.411661,-2.075346,3.877694,-9.963716,-7.924792,-3.617795,-6.064221,-0.600563,-4.419065,-0.619760,-7.144201,2.045813],[8.912871,2.382083,-9.292133,-1.164333,7.375234,5.050224,1.433217,9.291442,-4.774305,6.233065,-3.626646,-9.052471],[5.717496,-0.953411,6.661486,-2.823835,0.954431,-4.018841,-6.234155,-4.926965,1.466095,-0.427697,0.186972,-6.495475],[-2.762081,-6.309138,1.987557,1.252730,-1.240827,-5.757089,-5.930099,-4.254858,-1.591388,7.277731,8.686519,5.134887],[4.068865,-6.002522,4.435117,2.456310,-7.976718,-7.639110,-8.577492,-6.830726,3.625773,-9.267860,-6.547250,7.715959],[4.426050,4.447706,-1.655140,9.653348,-0.783389,4.083216,-1.439120,1.130620,-9.380249,-5.325968,-0.512767,5.617614],[3.092089,7.180749,0.214726,0.297236,9.773314,0.412657,1.542066,3.608340,-2.675938,9.716995,1.184946,2.203652],[-3.495643,9.324862,4.949816,6.043196,-9.774271,-9.588027,1.217401,1.469620,-7.202972,2.250288,0.940041,6.763376],[8.169355,0.928442,-5.709241,-5.558122,-9.571762,5.277997,3.456054,5.150523,8.596951,2.204676,0.768877,7.771842],[0.448886,7.107681,4.683868,5.297944,4.200345,-2.294634,4.647759,-3.632063,-3.667735,5.074687,-8.947165,4.120163],[-6.322958,7.102566,9.619842,6.342261,3.151140,-6.354527,-1.439395,8.844236,-2.363894,6.883052,-0.361273,0.370530],[9.860983,-3.995427,3.600410,8.880669,-5.445754,9.072975,6.566346,6.504275,6.567888,7.174578,1.897543,9.662910],[-9.724695,2.433288,6.980007,3.903075,-6.737719,-7.696192,-8.608173,0.313018,-4.712840,-2.377219,-7.159320,-7.412880],[4.209718,7.592047,-4.365587,-2.390874,8.948141,-3.942355,3.279182,0.489174,5.870204,4.520800,5.078142,0.093566],[-0.357971,3.911001,7.991073,-2.172952,3.360197,7.882437,4.432478,9.941347,9.961984,8.843002,0.646958,-4.497255],[-9.049383,-8.391796,6.545844,-1.128591,-2.116777,-2.770182,4.019889,-9.220704,-8.677615,9.161103,-2.728215,-6.626496],[-8.414407,-8.615355,-3.877925,-1.139892,-7.837003,-1.523747,-1.539156,6.791889,-4.502072,-9.394224,0.298325,-2.453839],[-3.240610,6.637450,-4.738253,9.072987,5.944818,6.809006,-0.745580,-8.490364,-2.725563,-4.482185,0.794729,9.468417],[8.369347,-1.443625,9.754654,-3.095386,-8.730288,-0.601446,6.682551,6.700545,8.804733,-5.760335,-2.204663,-4.483387],[1.610027,-4.998351,6.613734,-3.304354,0.243626,6.904238,-2.181169,2.965712,7.733673,4.364875,0.819793,0.612968],[8.380974,-7.760371,-0.325054,5.505658,-5.939014,3.848177,3.006412,-0.027834,-4.348309,3.290396,-4.195613,6.826288],[-2.158711,-9.261089,7.506678,-7.388139,-0.384768,-0.176236,-8.491939,-0.677078,4.654363,-9.598024,-7.065730,-1.031558],[-8.088072,2.155644,-3.285601,-4.211564,3.659668,-5.928529,-0.076356,-2.217186,5.153547,4.025495,-8.405728,-0.740495],[7.998333,-2.609148,-9.117865,-0.651775,6.521614,0.992032,-8.849710,-3.197841,-3.462566,-6.673340,-8.677671,8.409144],[-0.911065,3.169326,0.250741,-6.233779,-9.256695,-7.566725,9.288455,9.119181,-3.862331,-0.179873,-1.414416,-5.914149],[3.858134,6.495292,2.495609,-8.494944,6.379103,-7.671145,2.655100,-2.664435,-0.079715,-5.628435,1.800116,-2.322670],[-8.005174,0.835821,2.234497,-4.412725,-6.440491,-9.976662,-7.839756,6.485763,-9.237112,-3.166546,3.816112,8.967724],[8.137848,7.730931,4.735267,-9.951441,7.965474,-0.054267,-2.482388,5.662621,-8.993832,-6.765076,-0.236788,7.151852],[-5.993895,1.907926,-1.548531,3.994281,-9.529714,-5.211455,-4.733074,-0.537872,-1.430196,-2.038647,2.857346,-2.555014],[-7.286193,-8.073996,-6.767267,9.506407,-4.590296,-8.822036,-3.724965,-4.840034,8.493404,-8.346461,-2.452056,6.735569],[-1.536147,5.267876,2.298153,6.026641,-8.508329,0.034437,5.460865,6.670770,6.497608,-5.113259,8.727029,-1.128850],[-9.357189,-3.165438,3.079163,1.931852,-5.200099,1.449305,-6.752706,8.805894,2.811306,-6.155636,3.256843,-6.577133],[0.957661,-3.956939,0.777758,2.006273,-4.629125,-7.801023,1.694583,7.728794,-8.974520,-9.492050,6.620366,-4.253493],[-9.366494,-9.422842,-6.871352,-2.537074,9.464219,6.999104,2.122665,-0.419023,-6.556886,-0.539518,5.204014,3.679889],[-7.362063,-1.966661,9.335611,-9.008981,4.970204,-0.432651,4.407513,-9.790874,3.717310,-4.230356,-0.334923,-1.647329],[6.496225,0.654938,-4.268261,2.309507,-5.989662,0.050634,-4.782700,2.766127,-1.962781,1.886566,-2.515907,-7.378818],[3.625011,-5.246298,-5.794260,2.561684,3.448065,-0.330844,6.163996,0.951292,2.663942,-5.426525,-7.659636,-7.019976],[8.495390,7.825963,7.207512,0.648261,-4.649118,-6.958892,1.838587,-1.143606,-9.673775,-1.565142,-9.397811,9.226234],[-8.782897,7.101830,7.373194,8.163576,-4.448404,-3.252250,6.284102,-5.801184,-1.793148,-3.703971,-2.978712,-1.540153],[0.476405,8.304964,-5.177547,0.712747,-9.324572,-7.047042,-4.722285,-4.355802,-2.981347,-4.564905,-3.038393,0.555707],[-9.724783,-5.806418,-6.880497,8.426403,-4.196768,-6.974366,-4.600481,5.348013,-7.527753,-7.419140,-7.766454,0.308652],[-7.812567,-5.049691,3.834705,4.306823,2.442137,-9.646011,-4.562896,3.414848,-3.797021,-2.127213,1.128569,9.991485],[8.378880,3.799413,-5.674298,-0.806951,-6.793515,-4.713489,-3.165336,8.545087,5.141595,7.664510,-1.256756,-5.174044],[-7.035529,1.647686,5.483556,-4.718987,-9.238761,-9.475398,-3.575875,4.933912,4.909674,-6.204233,7.998596,3.616522],[-0.838225,0.076639,7.687971,8.048843,-3.718430,2.756610,-5.974471,-4.518925,2.352195,0.547971,2.518913,9.198129],[-9.462686,-4.691659,7.322812,2.413318,-1.003732,-0.414243,-7.686787,-9.069240,-0.662831,-1.817950,6.005756,-8.329267],[5.969033,-3.290291,-4.694224,7.197698,-5.712886,6.851857,1.727260,3.407244,9.296766,5.069831,1.207558,-3.326526],[-1.772964,-2.218466,9.201007,-5.885946,7.067994,0.675892,-1.070375,-4.077930,-1.959716,1.889461,-5.615772,4.737701],[-7.116216,-1.493764,-2.925885,-0.481027,1.578532,-4.184173,5.419475,-2.487021,-5.225550,-1.374662,-7.687550,4.809212],[-5.022248,2.158440,0.680410,-4.514700,4.011754,7.245705,2.072469,-7.507189,9.537344,9.765427,-3.302850,8.316879],[3.128141,4.442483,-9.448684,-0.876491,7.024074,-7.364275,4.078116,7.332696,5.763842,-7.962660,-1.606524,8.227822],[-2.156965,-2.938844,-2.411904,5.349647,4.515014,-7.703934,9.462972,7.228246,-2.433927,6.594383,-0.660184,-1.537352],[5.021982,5.234922,-4.715236,8.412555,0.042699,6.048524,0.961132,-0.589525,1.201667,5.723832,7.365301,-9.865294],[-1.854375,9.916364,-7.976443,-6.164255,5.179628,9.227429,-8.998122,-6.246618,-3.079994,-9.544220,-9.287205,-6.135388],[2.842286,-9.822737,-7.672720,-1.100059,-0.172444,-8.297610,2.661772,-5.398349,-6.778698,-6.329303,3.282558,-4.000314],[-0.143745,4.647387,0.245247,1.342832,9.248362,-0.552591,-6.545766,-8.362459,-4.098864,9.083047,4.389714,-6.918610],[7.919275,4.370485,3.933079,-4.874651,-2.372819,-2.215285,2.667535,-4.170761,2.632771,4.940209,5.576396,-8.794748],[-7.465535,5.033881,-7.743132,9.512680,9.912874,-0.237231,-7.038422,-8.391006,-2.836592,7.019195,-1.150653,4.851871],[-6.026588,5.032972,-4.603720,9.507064,7.131484,6.402096,9.722978,1.923060,3.810513,6.103460,-9.535062,-0.706605],[5.549474,9.542334,5.715166,6.965989,9.574972,7.397730,9.265322,-2.757763,7.386043,-9.200055,-9.800626,7.951819],[6.757625,5.751158,3.482306,-5.848205,4.306683,-2.841371,-7.936501,-8.499337,9.933345,-6.148225,0.184182,5.889987],[-5.781872,4.044392,-5.265558,-3.852793,7.909495,9.809916,9.380380,6.638609,1.987018,3.236905,-4.192209,6.227284],[5.394388,-5.301041,-1.062375,3.058661,3.272180,7.292948,-5.285792,5.068783,-4.612062,-7.533684,-4.040560,-3.655094],[7.249713,-0.137222,-8.046875,5.334954,9.480246,-8.945502,-8.619279,-4.478300,-3.376178,0.219664,6.242757,-9.410356],[7.644000,9.898044,5.597741,-6.636549,8.890091,-7.834578,-8.407369,9.469271,0.268450,-3.917894,3.893723,4.495967],[-7.197538,-1.781137,2.240390,6.968657,2.202626,-2.698642,8.342394,-9.590761,8.532400,-6.086470,-1.840900,4.640499],[9.941964,7.424255,-9.815443,-2.385273,8.912807,-5.639748,0.126157,-4.703856,-9.197442,4.916690,8.951115,-8.523185],[-0.797437,-4.208283,-7.907405,-3.881601,2.499498,8.802861,-4.357035,9.378238,-2.491189,-9.106962,4.390631,5.996289],[-3.786941,7.007638,-8.536641,-3.767392,-8.801673,6.047548,5.327416,-7.222465,-2.125651,-5.692102,0.910785,-5.311825],[-1.119964,-1.549777,4.309727,1.275318,-6.730236,1.803040,0.634907,-6.838471,2.171524,-9.801456,2.592179,0.228053],[-4.692811,1.505343,0.377629,-5.303720,-0.207822,-7.701146,-9.933506,5.502408,-2.693282,4.092153,5.452612,-6.546004],[7.806155,0.002294,7.087515,-1.452419,-6.420982,-9.258765,-2.372619,9.650884,2.507355,-7.075254,-9.952868,-7.637065],[7.332278,-3.365656,7.501621,0.701630,2.827585,-2.786980,4.729064,3.689279,-4.077063,-0.800121,-7.223657,8.762520],[4.871927,5.823021,-3.760222,-8.878688,1.556346,-6.675321,5.212845,9.970091,-3.818113,-5.878651,8.346456,5.220126],[5.906120,-8.313530,-1.092297,0.582386,1.280082,9.085469,-4.759942,1.413529,-6.923773,0.495085,3.852240,-5.004239],[-5.985912,-0.271412,-7.017019,0.697082,8.758535,4.560277,8.346710,1.172322,9.948386,-8.028970,-0.707885,9.591637],[0.211212,7.210386,-1.483307,-9.453556,-3.728372,-0.178908,7.665849,-3.841617,9.571362,-8.219326,-1.962584,4.198866],[-3.167708,9.253564,-4.601707,4.135024,2.370365,-5.000452,-9.560635,-2.065998,3.819508,-7.874086,-9.990334,4.893226],[-6.645752,0.400742,5.237401,2.633108,-2.059806,0.618004,5.203784,3.988131,9.876146,-2.180897,-2.285937,-7.030354],[2.539172,-4.780015,7.666841,5.526490,8.753573,-2.476440,-8.987387,-4.789021,-0.762968,3.818231,-4.411354,2.567555],[-2.759032,-8.680935,-9.147795,8.449703,5.407466,-7.043029,5.229980,-8.990293,-5.567002,-9.746202,-2.508569,4.401795],[-2.943733,5.220162,9.092980,-2.753853,-8.368883,1.524819,0.543475,2.753030,-7.609004,4.200846,6.759003,5.511664],[-8.773624,-6.140314,-0.208134,0.371089,-2.933195,-2.983697,3.034152,-2.043716,7.627524,3.832890,-1.607162,7.916309],[-6.096630,-5.029305,-8.241090,4.302763,4.942747,-8.281459,3.140971,-8.792419,-9.726793,-8.095645,1.244259,6.467265],[-4.275206,6.854177,1.022645,3.532700,3.825484,-9.724262,9.762489,-4.888095,9.537712,2.278865,5.714067,1.010263],[-8.378797,1.614945,-5.574190,-4.193503,1.801538,3.324934,-0.194477,-7.047099,-7.317101,9.573332,-7.030241,3.615199],[-4.049872,5.857921,-7.798153,3.742999,-5.525617,4.769782,-7.233229,4.218233,5.510429,-1.524783,9.309381,-6.188501],[4.181369,-9.559366,0.287789,-3.713128,-6.911993,8.503093,-1.836202,1.491096,-7.100288,9.350795,-6.199671,-1.768752],[1.719362,0.582269,-1.336954,-3.023027,9.562418,9.164298,-5.433004,2.857729,6.428227,-3.423647,7.958737,-9.461967],[-6.492989,-2.069198,-2.579710,-9.009266,-3.053222,8.548452,4.562845,-3.353929,-1.770240,-2.094231,8.941852,6.816626],[-6.015150,-8.183598,4.242271,7.937274,-7.894677,-5.396644,0.450221,-5.934266,-3.636225,-8.538175,-3.092348,-4.206537],[-6.536465,6.778915,-1.686148,0.011309,-4.802431,4.469384,-3.750680,3.361391,-5.358631,-3.049453,1.667148,6.230825],[-2.627267,1.038455,2.008527,1.621615,-4.963181,2.493727,5.541569,-5.711506,9.573751,9.893734,-7.914043,-6.669083],[-7.294837,-8.132865,-0.021268,0.296178,6.732235,2.981464,-2.179491,4.645562,7.383394,-6.707106,0.349506,2.835325],[-7.183740,-7.384975,3.328758,5.716442,9.377232,0.545141,-7.327523,-5.915875,-2.719459,-9.696814,-4.154926,8.761551],[-6.978221,-0.931903,-1.813269,-0.508834,-6.242912,-9.396801,-1.251000,2.867575,8.558589,1.646678,8.777618,-2.436675],[9.580332,1.090891,-1.693931,1.951997,-1.438775,-8.013076,0.154967,6.567528,8.669839,-5.631756,2.458052,-6.225492],[-4.865364,-4.348746,7.509688,5.338480,4.741117,9.699580,-1.926926,9.494243,-0.669248,2.820504,-6.626038,-5.704595],[-8.113173,8.114060,-0.850467,8.117397,9.967017,4.414565,-5.683847,4.194093,4.678941,9.376765,-1.188172,-9.026830],[-9.356426,-6.778999,-0.949362,-7.397965,9.468381,-4.623030,2.711520,2.916992,-9.621121,-9.227955,8.369929,-9.654660],[-9.817217,-1.833043,-3.969152,2.842084,3.637066,-1.407469,-9.860155,-8.611409,-4.131284,-9.364957,-2.861546,6.966831],[-5.107066,0.288490,2.749633,-3.238577,7.315369,-6.627966,3.447392,-2.645667,-7.693590,-6.644032,-3.531253,-1.326583],[0.909225,-0.705061,-6.427494,-3.742212,8.989474,0.660685,-1.128122,-6.220106,-4.212145,9.621795,9.509982,-0.850633],[-4.187667,-0.459369,-0.496089,-8.897762,9.835543,2.576785,-9.478013,-4.110696,-8.754077,-1.005687,6.559419,-3.223181],[-8.623262,6.499743,-7.066089,6.089121,-4.779465,8.925346,-0.240150,9.291729,-9.863707,-1.518537,-8.208860,7.011309],[-8.694471,0.866157,-8.157096,7.295929,-9.265969,-1.750406,3.374195,3.200192,-1.748688,-4.807469,-5.353013,-1.687428],[-1.470142,0.825764,-3.206898,7.578788,4.038947,-6.218955,2.920031,-1.067637,9.421469,-6.512112,-2.779634,-7.478547],[-4.298714,9.920059,-4.540538,9.324227,-3.884330,-6.875545,1.758085,9.972074,-3.853523,1.401781,-5.555954,3.800751],[-1.070963,-5.312895,-8.226026,4.572657,8.763455,7.822207,0.225900,-6.242170,-1.585907,-8.429174,4.993796,-8.933862],[6.811404,8.595697,8.166133,5.100956,-9.593530,-6.667296,6.271790,5.002552,-6.274811,-3.531426,9.840404,-5.142295],[3.517123,-2.011447,-5.024569,5.197048,-1.596083,9.268883,5.175427,5.338259,-5.057202,-4.964114,-4.749854,-2.580815],[9.618023,-5.853170,-5.425576,-9.638758,8.300702,-1.581665,8.301192,8.812488,-0.771367,5.346682,-9.836890,5.396185],[-1.966551,-2.738122,7.096132,6.697326,2.565675,4.079168,-2.627869,-2.425950,-1.957267,-3.412306,-0.318922,8.323873],[-4.010750,-0.234285,-6.039281,-3.793053,-0.934575,7.112496,3.196383,-8.447271,-5.265519,-7.121825,7.976346,-5.165617],[5.101271,3.067357,-7.273089,-0.518959,2.562651,4.194280,-9.613541,-4.907359,-9.314040,-7.902785,-6.467185,9.738302],[9.891336,-5.172180,-9.804782,-6.221193,1.213536,2.661588,4.827460,-1.420093,-5.917915,-9.302935,3.210738,4.539570],[-5.586811,-5.556459,-1.653366,6.462964,6.691984,-3.327839,-4.395185,-8.034954,-1.493487,3.524254,6.342496,-2.214921],[-8.762349,7.898526,2.681763,2.702918,-6.295307,2.994458,8.595113,-3.751952,-6.565813,-4.928630,-2.982709,-2.640126],[-2.863895,-5.033240,5.249955,-8.922130,8.574847,-4.068805,-0.684967,-7.231474,8.424716,-2.563038,-1.885398,5.172046],[2.677475,8.604633,-7.640483,4.039515,6.738648,0.324826,-4.747201,-5.891458,6.751788,8.599570,6.101485,-8.875458],[6.457485,4.225039,-7.537178,-3.008569,6.751455,0.879418,7.845808,-7.015488,-7.406698,6.190509,4.328596,-4.725125],[-4.779501,7.533591,0.125808,-9.484100,-3.739581,-7.475352,2.591687,-1.240852,-2.172112,-4.774031,-8.454127,-8.115340],[-5.227817,-8.997229,-8.133358,-6.092142,-2.265587,-0.575418,-8.685932,-0.061839,-7.362017,8.116167,6.779796,-5.351336],[2.531925,8.206258,-3.118244,-4.475241,8.001414,-2.669600,5.348914,3.480865,-3.868484,0.945361,-8.041678,9.709089],[-3.942685,-9.647454,1.607822,5.572512,-3.878616,-5.543523,-9.235075,7.758732,8.939578,3.676874,9.488867,-4.578447],[-4.194999,-7.244048,9.698081,-0.381479,-5.101139,8.099256,2.777380,-4.654535,7.697067,-4.942234,4.614229,-2.282620],[-4.662219,7.326074,-5.234700,1.375907,0.479158,0.523101,-4.586643,-8.599428,6.568378,-4.888427,-8.585595,-7.513915],[6.770307,7.186385,-3.100870,-1.177824,-5.799392,-6.852008,2.331730,4.195318,8.236315,-7.153788,-6.853462,-2.087335],[-5.119875,4.538917,4.160140,3.535992,-0.828514,5.895275,-1.312360,4.292696,9.378535,7.029039,-8.464304,6.918611],[1.483065,6.889892,-7.661173,6.869274,-9.030779,7.102052,-6.284929,-6.503538,-7.005046,-8.205957,0.332185,8.626827],[7.019136,-6.875596,8.772700,-8.960600,1.679834,0.260320,5.382373,-5.205998,4.479845,-0.009662,-3.992035,-1.100673],[-9.864657,9.516526,7.089887,8.107148,3.485385,-1.832316,1.576802,-2.138080,-7.304211,9.736000,-3.533582,1.341946],[6.764008,-3.123945,-6.584484,-5.491428,3.938722,6.524917,-3.570094,0.854600,-9.696935,4.275478,-1.543895,-9.712241],[1.372664,5.548156,3.324538,5.833999,-7.166270,1.805882,-1.508366,2.928872,7.465688,-1.469924,7.216397,-2.319387],[7.439195,-4.412198,0.850698,-1.953687,-3.993018,-3.267004,-6.831117,-1.232174,0.616885,-2.494731,-9.207821,5.802176],[-5.573305,4.266110,-7.566045,9.986785,1.733838,0.409839,-8.761000,1.361996,3.986270,-1.110755,2.076991,-1.844035],[-6.149266,8.998306,2.857719,6.825855,-2.748752,7.378472,-3.183887,7.389126,-7.843920,-6.381195,-5.905866,0.242436],[7.623745,-3.119919,5.298561,-5.679639,3.668080,-2.524617,-0.791364,-5.881799,-7.920970,5.573843,-2.145364,5.695674],[-5.155565,5.682977,0.694888,-0.668153,-1.094031,-2.448366,-2.325517,-2.368346,-5.803721,-1.833608,-6.232254,2.013564],[-7.366023,3.456009,4.022922,-7.887073,-1.222828,1.414302,-3.384152,-0.538747,-1.689382,-3.544698,7.944092,-9.433954],[7.609492,8.590035,3.333375,3.014123,4.795416,-0.416026,3.191737,-2.771049,-9.333478,4.417188,-4.323732,5.618711],[-7.755892,9.828095,-5.205759,4.322984,-4.443218,5.295877,-5.180165,6.456456,5.808687,-2.600551,-7.867016,-0.512034],[-6.912996,-9.564445,-5.119689,8.101717,0.319095,-9.343928,-0.389895,-1.423647,-0.107616,-7.031179,-6.763259,8.298379],[7.497338,-3.200829,-0.167360,-4.527866,-5.809702,5.309508,4.698837,-6.051608,9.097437,-8.860285,-5.881774,-3.495059],[6.725203,0.010845,2.105251,3.045867,5.859063,-5.875716,9.022451,-9.913420,4.958940,-7.157369,2.981551,-9.874349],[5.809147,-8.352890,5.250777,3.446786,-0.888638,-5.061091,4.520204,-9.672906,0.117111,-0.926843,-0.743968,-7.583250],[5.460331,-4.241468,8.289643,8.351562,9.585068,0.059410,4.884706,4.233054,4.297337,9.810090,-8.046447,4.191995],[-7.306707,-4.617702,3.809307,4.544945,8.512708,7.685907,-2.487581,5.305424,-2.683153,-4.349642,0.065417,1.773898],[5.534259,5.531303,4.026590,1.292074,0.067376,-7.726073,-4.980001,4.711873,9.317510,0.908936,2.171824,7.469153],[1.234779,3.614258,-1.596747,3.690508,0.652573,4.898366,-5.561255,2.775343,-1.069621,-4.751520,5.438565,-4.931718],[-9.131141,-4.125819,-7.681028,6.296274,0.334440,6.147295,-2.694440,0.501100,3.677066,-0.687079,8.345838,5.616736],[5.454412,-3.296416,1.414274,3.680820,-1.725589,-3.901660,3.815326,-6.506863,-0.429953,-2.484821,6.803437,3.328950],[-9.489663,-1.410600,5.105224,3.511260,6.014877,6.628598,-4.325958,-3.160456,-8.915770,-7.252669,-9.759838,-8.418680],[-6.512013,5.284924,-9.896063,-0.399462,-4.996169,-8.709255,3.784071,-7.641015,4.018147,4.234134,-3.260127,3.684233],[-2.504622,3.582626,-3.522411,-8.759897,-6.789637,-6.445064,-4.239828,-9.210847,0.492325,-0.709025,-7.655100,3.431388],[-5.902607,-4.971578,-0.950926,0.035492,7.440931,-4.298829,-7.812320,-6.107232,-3.202382,3.460467,2.599220,-8.480579],[-9.942866,2.174880,5.009718,-5.433693,-6.526171,0.631181,-2.999068,9.738783,5.127436,-1.733866,-5.315850,-6.891503],[3.700284,9.986597,7.806896,-9.884394,-1.004202,0.434987,-7.093872,9.950626,-0.166747,-5.734061,1.550277,-0.350810],[3.782448,-8.591742,2.960311,-5.420191,-7.577119,3.814830,5.984702,0.329773,-0.848217,-0.951567,1.475502,7.174295],[-8.126133,-3.035846,4.492960,-9.766298,5.223372,4.736165,4.896209,-6.587143,6.057402,-1.464860,3.884509,6.984614],[-2.908618,-3.712724,7.667780,5.281094,6.860417,-1.243762,-2.844115,4.480321,3.071364,-7.257365,0.293566,6.583614],[-8.376148,8.978971,0.703083,7.904191,-6.803605,2.807199,4.468923,8.669636,5.381129,-8.785221,-4.593033,0.078402],[-2.193805,7.924613,-3.425101,-4.636286,-4.111104,-4.723248,-9.781330,7.810621,-5.617546,7.231046,1.377949,-9.696196],[-1.886439,-1.579570,6.347353,-0.650636,8.166445,7.924285,-5.099906,-5.401979,6.662538,8.039634,0.761637,5.693655],[7.027379,3.943504,2.819039,1.294925,-4.022302,7.161608,-9.691356,1.398149,0.783448,8.548415,1.456923,-3.593206],[0.399905,-5.451083,-6.243066,-8.650183,-4.558541,-0.210973,5.164595,6.238223,0.317896,6.334256,4.723426,8.462187],[9.116128,-4.339268,-9.277713,-8.045329,-1.894294,-0.405448,-0.721105,3.574140,3.432547,-7.673020,2.574143,-3.174164],[-3.134829,-1.548545,8.337038,-7.239252,5.304185,4.624482,5.938601,3.547978,-7.425082,-1.129142,-8.148443,-2.024912],[8.822623,-1.881769,-6.753409,2.783746,5.980273,-9.592971,9.652902,6.746873,-3.855701,2.963672,-7.203459,6.824071],[-6.051466,8.690371,0.773578,-2.991279,9.137522,-4.954354,-4.066018,-6.690891,4.038868,-9.800986,-4.257719,8.378059],[-9.605134,-8.730801,0.329886,3.335028,-0.833115,-9.082154,-7.495516,-7.580150,-0.488940,-3.219118,6.559575,-5.264343],[4.033279,4.162679,-1.375849,-2.301763,8.869234,-8.963204,4.294226,4.989840,-5.945452,7.814078,-1.782152,-0.605206],[-0.776015,5.860386,-1.051431,0.608299,-0.715629,4.221180,0.912913,0.266981,-4.039535,-4.804421,-9.019306,6.728296],[2.905858,9.918739,7.048029,-2.634900,-9.498630,1.111328,3.265639,4.445293,4.314385,1.463197,-0.571432,-6.792419],[-9.549415,-1.853490,-8.805087,8.839506,3.204551,6.221570,7.108710,-3.425483,-7.613925,-7.878750,-1.320351,2.490682],[-0.219203,1.878868,-6.516418,7.664383,-8.266988,2.069936,-1.515308,-3.318875,7.276439,-8.297032,-6.220449,9.198158],[-1.071473,-2.328415,8.977359,-7.062805,-7.793696,-6.059454,3.052480,0.460941,-2.242760,-0.011101,-1.720975,-0.467397],[9.543920,-4.321965,0.355807,-3.431792,9.076739,0.913891,-2.647573,-4.974402,9.949690,4.767908,-3.517945,-1.537079],[1.244982,0.669469,0.464114,-9.517865,-2.957898,-7.461684,-0.564506,1.185639,-5.348648,-5.194286,3.584402,0.972337],[6.931327,9.858471,-4.756249,-7.806853,5.485731,3.993896,2.423065,4.681867,-1.476509,-2.139382,-8.480112,-9.609593],[-1.901405,3.351723,0.575715,-8.986999,-1.522561,-6.608887,7.622002,-9.698537,8.387507,0.909066,7.131229,-7.166009],[8.989760,-7.501562,8.834797,-0.892032,3.157506,1.020528,-5.831479,-5.253617,9.609539,1.990949,0.949018,4.951644],[8.882036,-8.784317,2.493605,-3.112582,4.127694,-1.455742,9.231021,-3.591198,9.865645,1.301784,9.198549,-8.317895],[0.759106,0.787634,7.061005,5.988704,7.187130,-2.669143,-8.379733,7.384907,3.824467,-6.178606,-0.074583,-1.294691],[-1.475936,-1.218088,7.377296,5.530568,-2.211738,2.198587,9.467129,8.467807,-0.109076,-6.030297,-5.298970,-3.064386],[3.623240,7.231785,6.356899,4.217805,6.332579,2.241541,-8.841781,2.348705,6.108661,0.172086,1.281961,-0.881300],[-6.679806,2.787610,-2.003676,-9.283167,-2.059134,-9.664639,5.950144,-3.831711,8.856626,5.321409,-8.847980,-1.564139],[-9.726975,-2.202733,-2.770636,2.460894,3.432104,-0.789878,5.840313,-1.596848,-3.718751,8.058570,-5.410459,-9.836134],[-2.045691,-6.385190,8.453685,-6.024770,-8.071374,2.862421,3.504773,2.754874,4.760636,6.263122,-1.315361,1.024692],[-2.039101,3.443177,-1.543147,-3.864361,7.222998,0.277182,6.687046,-2.306455,-5.191064,9.669809,2.106787,3.591811],[-0.700645,5.636516,-2.208883,9.955436,0.130057,6.119792,-2.064399,-0.565023,-1.199356,-4.108958,-1.937058,8.998446],[5.771473,-3.382710,2.745726,4.011130,-3.564502,0.232324,5.302319,4.493389,1.853003,-1.860171,-8.774923,9.429645],[-2.387516,2.641977,5.496202,-9.101521,3.920998,7.353017,-4.706181,-5.459315,1.610357,3.621154,-9.639755,8.512350],[2.458983,2.051828,9.870379,5.064553,6.382479,-8.541176,1.526706,3.851516,0.404332,-9.258902,7.372075,6.713130],[-2.400564,-3.713813,7.251040,-6.087054,8.823020,1.639533,-9.774750,9.406729,2.402645,-9.020918,-3.994133,4.416809],[-7.640632,8.998233,-7.538738,-4.572790,9.134881,4.130588,9.437570,6.982373,5.006076,7.623484,8.960986,1.598084],[-2.624264,-9.530383,3.679295,-0.613384,5.125535,-2.081215,-6.140123,-1.872575,2.857283,0.917515,7.502537,7.231123],[4.492769,-1.225499,3.899666,7.718480,-4.869842,-0.409823,7.555895,1.352554,-4.609038,-1.174360,0.705395,-7.577033],[-0.857079,2.527160,4.409973,-4.240422,0.807725,9.366830,4.159182,-9.070694,-0.847326,5.761079,6.196369,-7.539922],[-7.973944,9.608427,7.783275,-9.941331,6.206540,1.211724,2.194078,5.231464,8.601589,8.001134,3.824967,-0.817509],[8.247078,2.913124,-0.882738,-3.882238,-8.317532,-9.022628,-6.688146,6.782124,-7.759820,-9.041654,-5.662325,-8.346059],[-1.123680,-5.255269,6.688195,-5.698528,0.776709,-5.894838,0.922297,-6.846264,-3.556862,-7.323395,-8.986030,-1.576006],[-4.159617,-1.523542,-8.399173,-9.316139,-7.275549,-2.363794,9.893717,-3.694725,-3.239016,6.698402,-2.149267,7.552399],[-2.769855,9.239815,1.203127,-1.489615,-4.420766,-7.555937,1.289109,3.972413,-4.182793,-9.627956,-5.316633,-1.088407],[7.098059,2.571819,9.715700,-0.595339,-2.158164,-4.185938,3.723659,4.078437,4.366802,-3.543940,6.228216,7.623948],[5.717628,4.964982,-3.186407,-4.263235,5.576725,3.081123,-3.064785,9.025172,6.272501,-6.809147,-3.146283,-9.630576],[3.318124,-7.121167,6.649477,-7.848692,0.338562,-5.169344,2.650675,4.807905,-1.345218,-5.709845,-8.805015,9.291339],[7.315977,-2.048191,-1.450509,-8.729573,1.463977,-3.988058,-2.360441,1.588503,-7.766656,2.737291,-0.104056,9.732292],[-2.376515,4.994646,6.982172,-5.023904,-1.025990,-5.813615,-9.392449,8.590005,1.656098,-4.662796,-2.598383,-9.919367],[3.090576,3.278793,-1.434614,1.001254,-4.524666,-8.991208,8.764721,-2.150181,5.218973,-3.434568,3.011802,-7.177642],[7.212049,-1.157373,-0.662427,6.343084,5.711112,-4.424004,7.995454,-1.348105,-1.197680,7.841323,8.550814,-3.313875],[-3.381923,-5.005726,-5.481644,-6.253740,1.133677,3.513062,7.419950,-2.998472,8.928189,1.598049,-2.845233,-1.971132],[-8.592589,-8.248736,-2.918214,-8.302164,-5.610524,-7.220077,3.138946,-9.089672,-5.949984,8.800187,-4.066002,-6.846904],[-4.306068,-7.917084,9.623844,7.915839,-0.113427,4.549276,-3.914188,2.681342,7.834975,4.883720,7.998737,9.848359],[-8.336861,5.274872,-7.261700,-9.408948,1.252975,2.067046,-6.564368,-2.941272,8.232849,3.828414,-1.010609,-1.748667],[-4.773222,-6.100103,0.732543,3.667303,-5.764301,2.920947,-1.893548,2.447324,-6.338847,-0.117324,-0.385007,-1.610881],[6.546438,4.336598,-5.922183,1.515943,-9.981668,-3.539077,4.138587,9.137431,8.456934,8.830265,-9.777427,8.322167],[7.341758,0.614168,9.328230,0.045862,8.659016,-7.502498,-8.822272,4.285039,7.250287,2.836320,1.068596,6.079566],[1.770735,4.941987,8.948429,-0.207985,-1.720404,-1.143274,3.922842,-8.582594,7.657916,7.350821,-8.651717,-9.157320],[-3.083218,5.981901,-6.079921,-3.803159,8.562987,9.540021,1.073043,9.606195,-8.973636,0.881918,-7.699143,-6.826103],[-9.361485,3.735902,-2.701671,-4.709790,0.131655,0.010277,-1.567497,4.938777,1.108717,6.864196,1.285754,-5.696821],[-0.751195,2.071083,-2.123948,-5.136709,4.383432,7.617225,0.609389,5.463114,8.923746,-7.381957,-9.198554,1.710811],[5.581307,-7.145920,-4.014392,-8.350474,-5.590448,0.685703,4.417316,9.198497,2.369777,4.986165,1.989861,-6.784704],[9.126241,-8.991277,-4.445804,0.293261,-2.371267,-0.162458,-4.540446,-5.636621,5.580970,6.532949,5.991455,3.807792],[-9.027226,-8.439931,7.781067,-3.033855,4.880730,7.235379,1.914168,5.048782,-2.622778,-6.669582,-3.341144,-6.695078],[-2.145391,0.022242,-1.009287,-5.757264,1.597793,-8.764539,1.981334,5.378819,-9.059229,0.094981,6.407497,2.190245],[-6.780449,-7.437926,-2.792191,-4.326603,7.027387,2.720918,2.098589,-4.531287,-8.611741,7.421971,6.051922,-6.011831],[1.858365,8.958884,1.675704,2.328871,-3.456056,-7.977231,-0.558301,6.132806,-2.591322,1.776149,9.436485,-9.603358],[0.221488,4.441295,-2.281649,-4.176140,1.247369,-1.284290,-1.853931,5.347834,-4.385013,-1.223089,-5.723238,-7.065659],[-5.409729,-0.915841,2.729962,6.233341,5.162207,0.373792,-1.060520,1.950161,-1.645025,-0.520810,4.752791,0.759612],[-1.065049,-6.416796,-5.917889,0.200634,3.666888,-5.876255,3.255736,7.517030,-8.367430,-2.356815,-1.228858,6.199129],[-8.316151,2.939818,8.907926,0.358016,-2.202191,-2.376668,-2.893438,3.161031,-1.027654,-2.365560,9.467636,-9.310947],[-8.306308,1.698817,-0.392827,9.631480,-6.924951,4.956942,-4.682802,9.734557,-6.744734,5.837878,-5.488681,-9.884164],[-0.635333,-4.568364,-3.483041,7.122060,9.125014,8.799798,0.336510,-6.929589,-6.487625,0.602808,-9.386316,5.729149],[8.588414,6.358906,-6.249559,-8.080594,-8.278940,-1.277010,9.286525,-9.694317,-9.888622,-9.218867,-9.851898,-4.801619],[-4.632913,6.139397,-3.497345,-1.995162,4.666536,7.763154,9.557151,-4.322442,-7.269604,4.466375,2.518072,9.341006],[7.467710,0.933501,-1.092332,-1.062822,-9.081020,-9.702884,3.357697,-1.055611,-7.409971,-5.266321,7.729541,-6.456738],[6.358009,5.931110,2.134246,6.203947,-7.451962,-2.857460,-9.269286,-6.114946,2.726484,2.776121,1.593228,5.018711],[-2.777371,0.741505,7.457747,0.435130,9.474891,3.679456,5.625165,-5.023495,7.421834,8.804034,4.043563,-7.229915],[-4.681655,8.197878,8.197348,2.164313,-9.988406,9.978501,-7.338456,7.917062,6.252012,-2.769989,0.450992,0.948585],[-1.974570,-3.966317,-4.160547,-9.912222,-1.137642,-4.049390,-5.358854,1.963338,-5.831944,-6.595864,-7.899949,7.490705],[-5.577426,-6.120951,-8.476045,1.014192,-4.618862,-6.626924,-3.296573,0.526977,4.176533,7.387298,-4.960081,-5.830460],[6.199611,9.016173,-5.102225,-6.547804,2.810452,-1.018231,-9.514725,-4.797138,2.199925,7.802582,1.586237,9.275974],[-2.377236,-6.725978,1.437474,4.600422,-8.569370,-4.372787,8.551123,1.484573,-0.865259,-0.031436,5.442543,0.364342],[-0.442896,6.833801,-9.754677,-7.511975,0.789122,6.693013,6.796141,9.522056,7.237918,2.082819,-0.328771,4.742449],[-4.245698,4.135277,-8.766163,9.392420,8.785736,-7.415696,7.047552,-6.719347,-3.898712,7.843914,7.466800,1.525704],[8.900728,7.417328,5.395163,-3.791921,3.205611,-4.908059,-2.213114,-2.267879,-1.047609,0.847145,6.136303,-3.289572],[6.310566,1.470478,-8.822393,-4.563264,9.498442,-5.598135,-1.202514,2.051509,-8.623226,-9.195053,2.934915,2.896631],[6.792304,9.554757,-5.300726,-1.574463,1.943816,-3.836550,-5.358302,3.450004,3.387618,2.350125,-4.810333,7.581053],[-5.049908,-8.564780,-2.169704,8.304559,-2.090917,-4.453751,-2.162884,8.682028,-4.740348,8.686152,-7.479550,2.675762],[-8.788783,4.384861,9.272423,-0.944127,-6.174944,1.700232,-7.019255,9.700425,3.223629,2.280037,-8.729727,9.646473],[0.209947,-0.342376,-1.820414,5.858010,-0.547752,7.356504,7.083144,6.112959,-7.047886,-7.922979,1.732158,-4.316442],[6.166155,-4.033551,-7.416841,-4.723517,-1.663883,9.009417,-8.722037,-2.741549,3.908994,-2.493695,1.487949,7.111407],[-7.774586,-3.374279,0.293919,-8.521412,-9.669966,-9.429605,3.369569,-7.524252,4.777651,-7.909478,-0.906594,-2.997826],[-8.258068,-8.321092,-4.072708,-6.242984,0.090328,-9.440272,6.819365,2.453748,6.921949,-5.167734,5.195223,8.383142],[-2.006064,-0.436091,-0.206195,-9.887924,-0.506582,-5.982247,-6.715479,1.820241,3.588984,-3.937152,3.209042,-1.774581],[-3.041841,1.926624,-6.275235,-9.112555,-0.358768,7.544264,-4.520666,2.082612,8.412892,5.465356,-3.229821,8.670413],[1.182329,-2.937283,-9.175284,4.212578,0.065943,-9.895398,0.640539,-7.316764,8.546622,-0.037248,-2.291351,-3.681666],[9.836377,5.331628,1.100472,4.817529,7.258550,9.754174,5.476576,-8.460344,8.194522,-8.480934,8.339635,-9.031655],[-0.597063,-6.380290,-9.288122,-1.636900,5.609179,-7.655961,3.723143,5.317297,9.220934,-1.894676,0.083609,-4.276083],[9.111823,-1.030339,2.280150,1.221486,4.435828,-7.246642,0.734153,-5.219578,7.293413,0.487471,-9.112633,0.166994],[1.276535,-1.084509,-0.630600,8.591686,9.830571,-5.325861,-3.294776,2.994580,-0.086618,6.288985,-9.917603,-0.980228],[-8.373482,-7.328555,-2.405229,0.126157,9.862539,-9.278408,-8.291934,6.364412,5.788635,-5.440816,-2.066709,-3.476449],[-3.315436,-7.383007,2.778981,-0.718201,-3.635687,-7.837987,-3.336015,-6.018664,-0.290733,0.614677,-1.662424,-9.581333],[-1.973642,5.172917,-7.220780,9.344105,5.088837,-9.853929,-8.456582,2.555072,1.515560,8.904284,9.330166,-4.892831],[5.777267,-5.833409,-8.040578,8.896884,0.842996,2.036707,-8.789802,-6.080881,-9.081951,-7.708281,6.967792,2.612403],[-1.157006,-8.488006,-0.202521,5.453023,-4.543096,9.129092,-3.214943,-5.826713,8.331693,-8.451199,-6.148576,-7.870086],[7.464724,-3.685848,-2.604340,4.545610,-8.954726,-2.233819,-2.861338,-9.315878,5.871144,-0.289091,7.666949,3.167169],[-1.732528,-8.904800,4.610339,-0.885715,-0.206879,7.408054,-0.153575,2.705919,5.821273,-5.825824,8.854214,-2.576510],[-9.754121,-3.188821,5.133564,4.199947,4.230781,7.065236,-7.541184,8.388879,-8.966923,3.584050,-5.162623,4.193142],[-6.423081,8.331314,6.065525,-3.153859,-7.054903,9.584989,-0.137412,-0.288868,-5.020554,-2.934113,9.169624,7.151093],[6.836167,-7.145198,9.221345,3.121061,4.176813,6.814263,-5.996558,0.910997,4.625154,1.353600,3.193133,1.357357],[3.188746,-1.931418,-2.223174,-2.806427,-3.847166,0.276581,-7.381552,1.214454,6.890719,-8.490115,-3.873847,2.787060],[-8.997186,1.893221,-4.461099,-9.973770,5.467421,-0.613484,-6.979099,1.057644,0.991055,6.641533,8.334501,-3.549715],[4.810834,-6.519449,-7.697518,8.616951,-0.355666,-3.702741,-8.637424,-6.280745,3.219039,8.177659,3.181045,-1.708168],[7.615771,1.562616,-7.528523,7.188654,-1.667378,2.419108,5.302381,-6.205722,5.495817,-7.821549,4.682565,2.576265],[4.450117,-4.756575,9.557009,-8.025532,-6.646907,7.971697,8.448356,3.717997,2.480098,-6.160982,7.228542,-9.868477],[6.150233,-9.582358,-9.504429,2.137767,-7.175861,-0.301739,-3.515500,-4.043473,-6.899418,2.961982,1.518352,-9.424112],[2.768362,1.724829,9.874430,8.314669,5.800161,5.970884,-1.647983,9.845499,-1.430038,-4.261457,-7.177031,-0.490882],[8.665185,-8.641721,-1.018626,3.662611,5.213541,-8.299929,-1.766904,2.653986,-6.897085,2.054519,2.357674,3.543311],[4.576065,-4.307480,1.174492,-9.672171,-2.217375,0.018548,2.095098,-7.931377,8.301731,2.181879,3.266605,2.060270],[3.911711,-2.908433,-8.150318,5.217526,4.535135,3.447821,-1.724923,9.507709,6.193365,4.227443,2.379580,1.229682],[-1.769881,5.501507,-7.761365,1.708039,4.260297,-7.470114,-7.597402,2.035284,-3.829030,-1.482092,5.156196,0.078464],[-4.464088,5.589448,3.610020,-5.206268,-9.863865,9.533664,2.235669,-0.024326,-1.297300,-3.820259,-7.321259,-8.032042],[-7.327850,6.240183,4.104226,-4.123670,8.478927,2.328873,2.847511,7.347411,3.548536,-3.109276,2.426506,-9.287618],[3.717917,-6.447204,-7.459575,-0.653390,2.217835,-0.289687,3.161856,-9.491827,8.826352,9.271919,-2.626154,-1.112458],[4.325188,-2.986553,0.964221,-0.737022,3.324583,4.197114,1.484131,-7.101185,1.598173,7.838102,-9.722838,-0.667239],[-1.210340,-0.701422,-1.075605,-5.661669,2.832536,-6.373634,6.340635,4.793838,-2.536433,7.499027,9.005607,-1.151653],[-0.791408,1.837640,-4.055709,-2.032717,8.628019,0.730517,3.319515,6.213198,-7.408864,-9.973094,-4.427885,-1.118657],[-3.355683,-6.748705,5.696382,-8.566353,1.392945,-6.161016,9.429314,-2.657937,8.146393,-4.372904,6.126296,1.095606],[-8.758133,-6.329363,-8.138491,6.410105,-3.661972,-9.079328,-8.372478,0.322635,-5.759271,4.228962,1.212516,-1.741292],[5.492628,9.743271,-6.030036,-6.434500,-6.579563,7.833491,5.212932,4.966411,-5.156313,-5.327913,3.272980,-9.369687],[8.808256,6.897278,3.099819,-0.298367,9.651979,-3.444903,-0.009100,-6.734408,8.989429,9.281712,-6.449801,-0.399351],[-8.088046,2.736171,-9.762161,3.966306,-2.808974,-9.171759,-5.935379,-1.443624,5.614438,5.350478,-4.779584,-3.135632],[4.373080,-2.645192,9.749925,6.944522,7.704082,5.690492,-2.107849,-4.104411,7.708169,6.589007,1.365669,2.839797],[-3.522685,-0.750457,-3.295683,-0.646317,8.520690,6.785657,6.671860,-2.451053,-9.334734,-3.352011,1.652554,5.517061],[-6.776430,-9.899499,-6.674040,-4.417764,1.111502,3.888690,2.078114,8.088943,1.640686,4.463080,2.046916,5.515768],[3.150848,8.989497,-1.769115,-3.413851,4.597029,-1.705313,-7.632141,-1.106024,-6.294517,-0.386938,6.057955,-0.301538],[-0.406842,2.959723,1.368715,7.806914,-8.184142,2.406176,6.503644,2.706081,6.771416,3.263552,-0.837534,5.428034],[5.349504,9.384058,5.305754,9.979201,7.170905,-4.668684,-6.517120,-4.958293,-2.695889,9.180687,1.969579,-6.052841],[4.058629,-3.267158,3.196197,-8.985803,9.758885,9.987962,3.349502,2.440702,2.905816,7.181990,4.384460,-3.491268],[-3.868625,-5.177360,7.801013,-5.629189,-6.174349,-1.546724,-2.007511,-5.444625,-7.127881,-1.009579,2.881721,9.430652],[3.599092,-8.988974,-5.849694,-7.401281,-5.734263,-6.607317,8.357094,-8.245706,5.523742,2.821618,2.940303,-4.012045],[4.476501,7.408157,-9.214245,5.041686,-6.794658,-0.216714,0.238642,8.014116,6.307906,2.546887,-6.976084,-0.644199],[-7.349432,6.847589,-6.152103,-2.732087,-7.253553,-2.475449,-3.281118,3.749008,2.442386,1.135532,-1.590733,-2.869838],[-5.214017,0.910299,-4.212013,-8.112816,6.022219,-5.822459,2.233416,-4.178332,8.023823,-8.788896,-0.207448,-8.543811],[-4.135702,-2.634191,-9.543059,-1.773725,-8.592946,1.326536,-4.593321,-6.640625,9.618697,1.698765,1.368916,-2.133449],[-3.275581,-1.759602,-0.084594,-1.600885,-0.982503,-1.424919,2.481015,7.145266,-6.006886,-5.997045,-4.167439,-6.091240],[-3.893184,0.072900,9.941846,-8.459133,-2.382039,8.085777,8.310198,7.247774,-8.793088,-6.439898,5.515382,-0.893278],[-0.519983,-3.809531,4.312785,-3.714949,-9.656862,5.957245,4.043746,5.700596,-7.965652,2.430980,-7.072936,5.036908],[-4.590737,-5.157884,9.898108,1.714153,-8.732737,-8.225561,-3.540423,9.850479,-7.040139,7.843607,-1.099382,-1.808056],[5.391934,-1.890239,-4.862754,-4.070475,1.655541,-5.697519,3.010997,-8.749141,8.413091,8.123530,7.651906,-9.696913],[3.248360,4.688566,-4.231693,-2.053292,0.645654,6.726140,-8.261227,-2.991702,6.634791,-0.176947,-5.292222,-9.436362],[-4.537572,-5.678517,-9.627582,4.601281,-5.624306,6.780203,-3.170429,-8.278989,-1.926367,-4.516598,9.040200,-0.164178],[0.549198,-8.843227,4.860840,-0.209652,-3.403977,6.576911,0.685346,1.551138,2.207861,4.465720,-3.381994,-6.426366],[4.578923,-9.603809,8.958112,0.851656,9.838715,5.019419,-1.974999,-1.559901,-6.421900,2.185335,0.441049,4.377813],[3.178756,-5.942766,-0.648827,-6.854663,3.743938,-6.961141,8.739118,-1.439493,3.377172,0.570996,4.522367,2.830440],[5.962224,0.436755,3.227488,-7.173212,4.467744,-7.977225,9.985389,-8.937412,8.546553,3.017701,-0.841603,-6.224656],[2.264897,-9.306745,9.180958,-5.380510,-1.410960,1.771339,-9.905918,5.523044,6.324102,9.234355,-2.645709,0.199237],[5.363182,0.987109,-5.433673,3.848781,4.180033,-5.980098,3.630836,-7.477102,9.059451,2.629109,8.629049,2.615543],[8.426236,8.612569,-9.576971,0.342794,0.930417,-7.776443,-1.493212,-2.283874,4.326732,8.473513,3.307901,-9.246661],[7.582446,5.007582,-8.561670,0.835928,2.445369,-4.886032,-0.208492,8.104687,-8.897148,5.230178,-2.468684,-4.597574],[9.802462,-7.221198,1.502941,5.665541,1.635951,8.378531,2.675125,9.300417,4.542332,2.949752,2.366690,-3.389285],[-8.267994,9.944059,7.879375,-5.759264,8.857609,8.940582,7.480148,4.724367,8.520874,8.262677,-9.337790,-2.894171],[-9.217413,0.728551,-3.320574,8.737204,7.758265,4.764310,-2.034430,9.605576,1.387996,0.169579,0.580553,8.214702],[6.083842,-3.972512,6.182339,-6.098453,-8.475574,1.835468,2.271028,9.147439,3.697983,9.346803,-8.018313,9.811193],[8.578036,-8.516860,-4.408993,-5.314152,-3.722284,3.597130,2.856789,4.866350,7.525594,-1.683393,4.029040,9.849880],[9.378636,6.895127,-5.142563,5.687173,7.357337,-7.512983,5.213052,3.224670,1.439220,4.818575,-2.688070,-8.238836],[0.883029,-8.913413,-7.108102,-6.793396,-9.085986,0.051113,-4.722328,2.934912,0.282857,3.714778,-0.454096,-1.448182],[4.014150,-9.787899,4.867243,8.826634,8.522492,2.452845,-5.466530,1.851178,2.902662,9.617555,3.072261,1.863792],[-7.708611,2.689889,-0.242147,7.284109,2.137563,1.907007,-3.778907,-2.865067,8.804472,-6.974876,5.416497,-7.782822],[-6.848671,-7.956508,-3.513609,-2.938178,5.686051,6.850105,-8.850437,2.247342,-7.659796,-1.553484,-9.165489,5.277717],[-4.108045,4.369248,1.943177,8.664103,9.252363,-9.150886,8.092198,-3.318151,-7.950355,-3.997383,-6.311651,8.433357],[4.753436,-8.118107,-1.813931,8.292496,6.300141,-2.289712,-8.674689,-0.005127,0.951258,-7.712866,-6.167879,9.557372],[-3.864054,6.876803,-0.568051,-8.810473,-2.179700,7.021659,-0.744118,2.066075,3.777958,-7.290593,7.989572,8.752181],[7.708947,-8.265043,-9.834555,9.465303,0.265741,-6.985110,6.361602,8.175483,9.675162,-0.997661,6.560846,6.059137],[5.344659,0.889123,-7.520930,2.208339,-6.634397,3.211771,-8.696380,1.887815,9.505057,1.344932,-0.445378,-2.165903],[9.841426,1.650516,8.490376,9.472488,5.543571,3.591934,5.561071,7.494056,-9.346409,-8.709023,4.432303,1.523943],[9.659882,4.851595,0.481376,7.152075,-9.395461,-6.080622,1.859894,-1.461128,-0.570239,1.030401,9.168618,4.546020],[8.429720,-6.111425,1.292566,-6.095935,-4.372298,7.658606,4.415728,-9.937046,4.744464,2.093174,-1.294296,2.515667],[-8.373009,-2.528290,-8.671693,9.728714,3.053285,-5.615664,1.356777,-5.992400,7.985294,-0.430362,-6.182906,-5.473140],[0.567174,8.810939,-5.723893,-6.434503,3.839791,-3.594639,-2.726179,9.570356,0.363534,-6.827521,-3.406943,-7.645549],[-0.368609,0.570183,5.131577,5.996294,0.748089,-5.536159,9.377973,-9.161329,9.774510,-0.155792,3.810194,9.255114],[-2.613375,0.808053,-1.576552,-9.131908,-0.111554,-2.401362,1.740938,-0.357475,-0.560629,-8.712319,2.265834,-0.710655],[2.873940,-1.832717,-7.977062,4.543424,-0.479004,-1.535640,-1.612199,3.363539,-7.615648,-2.604808,2.855079,-5.841944],[2.966903,-1.705254,-1.666658,5.421323,0.524620,-1.870261,-6.329440,-7.287455,-5.805713,5.847047,0.830362,-9.661253],[-6.249881,-8.324130,9.657518,5.484063,0.586474,-2.663429,-0.335952,-7.733418,9.372688,-1.785886,-5.783979,-4.066971],[5.288131,-7.574418,7.588979,-7.378529,1.877250,5.669543,6.731464,-9.178917,-1.336792,-9.959144,-4.499741,3.712516],[1.215904,4.705822,-3.631758,2.406646,-7.936419,0.942205,-0.782190,1.016798,-7.076376,-9.331292,-4.088050,-0.954445],[0.890222,0.797305,6.846248,-3.853360,-2.770707,6.072795,3.008038,-3.820592,-3.340558,1.138665,1.333997,-4.412672],[-2.557770,-4.864320,0.782015,4.853269,9.667155,3.805926,5.566844,-4.293923,9.226809,7.895086,-6.252514,-0.761241],[0.373204,6.578599,7.079157,-0.104474,-0.913406,-4.239751,5.370155,2.977651,-7.345505,-0.665361,-7.302175,-3.666249],[-7.407298,-3.924389,2.934403,1.082199,2.749089,-7.216311,-7.529129,-4.600087,7.879507,5.934004,-5.354609,9.264041],[0.419864,4.890899,-1.959893,0.945479,0.141178,8.232757,8.495655,5.056602,0.053177,8.432467,-6.620251,0.544294],[-2.060638,-3.852233,6.422142,6.478239,2.345478,-5.538791,-9.949823,-8.307075,7.708512,3.002863,-6.217711,2.851192],[-1.893802,-6.190884,-9.610244,-1.417730,-1.965313,-8.642314,-7.438520,-3.615560,-2.740515,-4.050893,-6.098538,-9.552265],[-1.947666,-5.969049,-2.457482,7.102030,-9.371409,7.849060,7.814899,2.084109,-4.170767,8.889441,-3.958137,8.655063],[-4.072600,6.858084,-6.516699,-6.211501,2.695651,-9.780616,6.747042,-9.489279,4.115756,-5.527018,4.943125,-5.019425],[0.190891,6.921214,4.557132,-7.930810,-3.024038,-2.875006,4.179008,4.175980,-8.288481,-5.502508,4.757740,8.531087],[-8.105795,7.351076,-6.510028,-8.974235,9.826493,5.785421,-2.030684,-5.671089,4.218819,5.341701,-4.152071,-8.586854],[-9.594628,-1.529644,5.923116,-4.055059,0.344615,-6.307528,9.693461,-0.124628,-0.719955,4.681904,8.781319,0.451939],[0.274676,-8.022067,6.606727,-1.640117,8.742399,-7.225165,-0.133704,4.442537,-8.878100,9.371265,-9.651566,3.574760],[5.609260,0.778914,-9.721345,-0.115049,5.948149,0.983935,8.578832,5.776840,-8.840806,4.390967,-5.267985,3.173874],[-3.472994,3.225497,-2.071064,3.718892,5.767953,-3.543027,0.468781,7.862087,2.886468,-8.909583,-5.807753,-6.061781],[3.434760,-8.257809,-2.752099,-4.522805,-4.187178,3.640298,-7.984475,6.970138,5.465728,-0.688933,-2.487540,4.523781],[-0.916687,-4.600757,3.133670,-4.657183,-6.267407,8.939405,-5.081542,-4.240302,3.755785,0.659233,-2.000240,6.241976],[-5.961121,3.414754,-1.706686,5.778920,-9.966681,1.816523,-1.118518,-9.637703,-4.063399,1.049704,7.325872,-9.416011],[2.333646,2.110838,-0.363391,7.798204,-3.403277,4.909511,5.863991,1.699397,-2.379657,-7.333262,-4.875903,6.888063],[-9.538874,8.578361,-1.151591,-5.674364,6.696969,-8.639390,-4.905195,9.552920,-7.879885,2.765922,7.423249,1.874806],[-7.018982,-3.373876,-6.852139,6.968521,-5.762458,-9.703125,-9.683346,-4.427121,-7.937265,3.766932,-1.643623,2.142172],[0.824078,-2.251800,-8.979037,-9.350124,5.194449,0.727983,7.620572,-3.014817,-2.669827,-7.481656,7.516541,-1.030424],[9.261457,7.878034,-7.691497,-8.924221,6.096198,-8.016140,-5.093732,-9.747847,2.630884,4.266823,1.657462,-3.915344],[3.302102,-1.301513,4.559222,-3.525965,5.567655,-0.041834,7.436818,6.010296,-0.060571,-8.691187,3.628773,-8.356227],[-0.748120,1.640132,-7.061905,8.451079,-9.309508,-3.033077,5.487087,0.586978,-5.064769,-4.494821,-4.032340,1.932917],[-3.414922,-6.185156,-6.292324,-6.396403,-8.012568,-5.379333,-6.734747,-3.237128,-8.520658,-8.199954,-4.175085,-7.550744],[-0.072665,-5.054895,-5.534500,3.485152,2.161039,-1.402946,-9.981714,-8.704588,-3.792752,4.793282,4.858143,-0.660121],[8.523566,5.316440,-6.255191,-2.399157,-4.036261,6.296230,-9.469810,1.444382,-8.938742,-8.844593,3.874112,-9.166749],[4.384097,-3.851118,5.093496,-5.964809,6.023762,-0.261984,3.450395,-8.793846,2.142403,4.417548,-1.304755,1.851136],[-8.585375,-8.910471,0.527644,-6.483854,-6.223611,8.134563,7.131448,-5.261445,3.110469,-7.592811,-9.074778,-9.806204],[-6.623125,0.226761,2.273236,-0.799539,-7.221939,9.989864,3.513880,6.827898,-3.606178,6.161742,-1.581270,-5.810191],[6.189768,8.180040,-2.157230,6.121986,9.711468,8.394203,-9.803975,-3.995457,-2.046628,-9.953392,7.260798,-9.012864],[-8.834279,8.927440,3.482296,-5.893307,-8.914669,-3.275312,1.700419,-3.070675,4.652118,2.447898,8.544767,-1.018469],[2.851575,6.721056,-5.850743,-6.715172,1.964307,-5.690353,-3.569430,5.038783,-3.445232,2.976157,-1.481721,-1.543401],[4.638239,4.260908,5.677289,6.248585,-6.266647,-4.993619,-4.639002,1.601746,-7.779056,-5.908682,-2.415131,-5.877154],[-2.863543,-2.423084,1.812666,-6.108861,7.955158,8.173201,2.420271,0.929185,3.277370,9.439897,3.872570,0.576748],[-3.240068,-6.400516,-2.361939,8.681766,-4.187285,7.550243,-7.040093,-9.498530,0.256393,-1.864630,-4.506644,-1.512545],[9.527488,1.700159,-4.232530,3.214750,3.726498,2.449874,-5.352052,-0.244193,-3.624093,-4.296007,6.001266,-1.003907],[-8.175535,4.507796,9.841318,-1.543183,8.651329,8.402438,-1.965334,-3.615596,-2.618155,2.979396,-1.633192,8.590881],[2.719349,5.479934,-0.828474,0.637718,8.022753,-4.100916,-0.083623,7.840570,-8.952233,1.129546,0.619080,-0.144786],[4.826098,-4.638141,1.225350,6.646317,2.666886,6.000241,-5.989481,-8.427234,-6.762205,-0.874798,3.739079,-1.350089],[-8.110289,9.876601,-2.034801,7.178298,9.727087,1.402043,1.731708,-0.946569,-0.585165,8.986087,-0.141241,-8.982919],[-8.022626,-6.853637,-2.272957,6.904263,-6.205692,7.179760,5.622355,3.380834,-8.986052,6.378327,6.085401,7.441796],[-0.066984,-3.933349,-4.937124,7.176808,-9.348987,8.220291,-2.354419,1.611625,0.744078,5.118820,-7.094435,5.262160],[-5.152363,-7.234113,-0.772623,6.411360,-0.221759,-8.915167,-7.209137,1.734514,6.445611,0.878046,-1.277021,-5.350868],[7.905763,-4.032290,-3.015814,3.210666,-5.863749,-9.259265,3.615044,9.834921,-2.954636,-1.201260,6.681664,9.954141],[-3.281540,1.610236,1.576985,-7.494204,0.648732,-7.747499,6.450329,-8.214923,-1.080870,-2.874381,-6.638584,2.736157],[3.214469,5.069586,-8.563196,9.290024,-4.209594,3.290449,9.277060,-1.282830,-4.269532,-6.440823,-5.666857,1.810421],[-1.913051,-8.009150,-4.722670,8.125000,-0.567812,-8.467446,3.804611,9.635508,-9.032694,5.587842,4.577929,9.473578],[4.954726,1.014024,-6.766574,-3.613919,-0.335457,-8.294370,-0.226787,5.119737,-5.610934,5.325974,1.882528,6.835305],[4.775575,7.930975,6.243058,-3.318196,5.917581,-4.987241,5.951784,-1.074355,-4.458293,-2.318022,-8.220992,4.057681],[8.144559,-8.384432,6.339932,9.428122,-3.307909,7.135023,6.004697,-3.899371,7.563986,-6.104761,5.165689,7.698441],[1.135276,3.981305,1.312851,6.564729,4.567447,7.320464,3.815850,-6.021354,-6.699179,3.667926,0.848878,-7.153396],[1.104401,3.734374,7.235435,-0.148970,-9.273865,-1.589925,-8.866912,8.954598,4.369513,-9.903241,2.396181,-7.618717],[7.022971,6.559314,-1.267540,1.466834,-0.353342,-1.345180,4.523589,5.697763,-1.085605,8.731061,7.420452,9.685809],[-6.519104,5.809730,-5.015296,9.940660,-6.393371,-8.754631,-0.920083,-6.361727,4.340661,-2.553622,5.784429,-0.878588],[7.834880,-1.675328,-5.200537,8.081079,7.342746,-9.937499,-7.154818,2.035583,-7.146293,7.423080,-8.726556,-0.822978],[2.621016,-3.207633,-5.431906,-5.015183,9.000748,-1.403546,-9.713557,-4.375493,-0.023010,4.621641,-1.608972,2.721811],[8.814968,1.430217,-3.016125,0.908352,-1.278622,-3.981988,-3.955442,-0.092814,0.997519,-1.302157,-5.885508,-6.654925],[3.986421,0.964614,-0.636070,3.539288,-5.640943,3.668605,-6.162190,-1.117828,0.128230,6.990014,7.482882,2.039200],[-1.117099,2.274517,-5.108799,1.294773,4.911756,8.441549,-8.124647,8.338387,2.901780,3.164812,4.111141,-0.026732],[2.639319,1.774670,3.623556,5.822754,-9.393877,-8.295307,-5.363737,-1.994347,-0.198377,-3.591321,-0.679656,6.034100],[-6.454561,0.455142,-1.650921,-0.976450,0.496758,2.071099,-2.329514,-9.279707,6.136253,5.085696,3.644286,4.109094],[0.669568,-1.466361,-9.539793,7.149334,-6.258369,-9.250055,-5.462580,-0.931894,-0.572494,-3.982436,0.606202,7.942158],[2.581356,-7.299491,1.514233,2.733225,8.959868,-2.617615,6.816279,4.724274,0.017245,1.180075,-7.651615,4.556621],[1.006469,-3.994180,9.795297,1.459474,-2.167935,8.124361,9.497664,2.177995,-3.438914,-3.462866,8.507967,1.721222],[-7.338707,6.511680,1.195941,5.300895,-3.412998,0.329022,-4.014401,7.249580,-7.835387,-5.836558,4.392875,3.401511],[5.008241,1.058259,9.583440,2.859850,8.392488,-6.079534,-6.274852,0.745920,7.651970,-3.078092,6.333955,8.592117],[-4.570739,-5.625329,6.210067,7.407722,9.955710,2.810214,8.688326,-1.412410,1.172065,4.353599,2.525841,3.730096],[9.736613,-9.141868,5.894229,3.969915,8.685594,9.961245,7.569385,2.010365,1.095281,3.814370,-4.578645,-5.545080],[-7.231416,1.351719,-2.798537,3.173780,-1.484181,0.488397,3.578030,5.370967,-8.347888,3.062645,5.471622,-6.800148],[4.962973,3.184501,-6.765468,-4.006923,-3.721688,-0.740742,-0.109855,-9.978301,6.490841,-1.747705,-7.918757,5.925507],[-0.502350,-2.041794,3.083719,-4.375718,-7.133579,-0.424324,1.600795,-7.317713,-9.129739,1.903786,-1.592404,7.583674],[6.771846,-6.364093,6.067948,-9.319700,-5.522199,9.003358,2.978041,-6.408235,-3.243620,-0.361090,5.242262,6.016915],[2.301361,-7.001402,-1.611922,4.340982,2.583411,-6.477926,9.393310,-9.422672,6.948641,-4.848069,-0.459125,8.292035],[7.216851,-8.936002,-9.125731,8.560152,-4.938284,9.244926,8.349533,-2.805083,-8.856585,-2.115189,5.909208,0.769710],[-0.943218,-7.852793,-8.037460,3.946089,9.310622,4.104194,5.432436,-4.465711,-9.176233,4.280901,-6.791271,0.250613],[-4.737968,1.718362,-2.277125,-2.940842,-7.216284,2.825451,-8.684605,-7.647953,0.963043,0.891040,-1.389121,-4.309639],[1.118782,2.481444,-6.996973,-2.600739,-9.148854,-9.456553,-3.914657,9.705810,5.989711,-0.013676,-2.490702,-7.496788],[-5.180151,-3.549772,2.851089,3.423005,-1.492319,-4.602222,0.091602,2.805979,-1.884357,5.875387,1.808487,1.556947],[8.903519,-8.604742,2.368727,5.229770,1.608633,-5.517807,6.660747,1.022736,-7.692469,-2.813114,2.251894,5.963686],[5.518393,-6.842438,-5.427287,-3.416832,2.704432,2.093614,3.953081,-8.564547,-9.415715,0.551471,2.156373,-0.435923],[-2.880167,6.937518,-6.413045,-8.565875,5.304535,-1.273241,-1.583471,-5.143822,-2.372333,-8.219883,-3.967106,-5.995215],[-0.664621,-7.877913,-3.474420,8.097331,3.608909,-9.558154,-1.151710,-8.689949,-9.342273,0.114407,3.696485,-5.370752],[7.775995,4.265987,-6.998994,-2.778294,6.765280,-9.506581,9.086386,-8.590718,-3.447349,9.005239,2.334879,9.712112],[-9.812021,9.614739,-2.705831,8.396346,-3.165949,0.328646,-6.552802,0.664240,7.038556,-5.679912,-9.567629,5.795453],[4.452985,5.335726,-5.065333,-4.959568,3.182849,-3.524924,-6.604367,7.698568,-9.815745,1.434676,-9.454955,-0.943791],[-2.161778,6.933778,-5.542300,4.996555,7.125671,-9.715675,5.682175,-0.292429,-7.839011,-7.434933,6.533325,-0.999465],[7.371473,-7.461660,-9.794775,2.659747,6.158599,1.163603,1.652830,-0.413917,5.944132,0.075986,5.889072,2.444325],[-0.216704,-3.403664,0.281673,-8.881238,-1.776181,4.076019,5.163574,9.896216,1.116766,-0.875787,-4.374815,0.149598],[-0.153912,-1.606000,-2.907069,1.260088,-8.415433,-1.339269,-7.141738,-4.672992,-3.487821,-4.550936,-3.244758,-1.186771],[-9.636711,-2.883543,6.168699,3.063257,-5.939582,-8.430351,3.921383,-4.688319,8.338577,-4.290941,9.561870,3.042573],[-9.368968,5.559005,5.923876,-0.673023,6.767112,-9.354241,-7.625826,-4.267434,-4.136965,8.064009,-5.700010,5.854081],[7.145653,-1.665377,-3.178253,-2.167191,8.742421,2.776987,9.774201,-2.956448,-2.120995,-0.333025,-2.966326,-9.434839],[9.132703,1.409438,0.249965,2.381263,-0.099567,6.386128,5.292762,2.655160,2.864743,-2.563513,-6.967705,6.079033],[6.279282,1.876692,-6.250693,-5.613762,4.404843,-6.228387,-8.196120,1.330466,5.216196,0.579383,-4.484276,4.099082],[1.118218,5.686614,-4.479514,2.655017,-1.614279,-7.229849,-3.743877,-3.009668,-8.935280,-6.034367,-2.755043,4.634213],[-5.467125,4.705786,2.708046,-2.840271,-6.206874,-4.094908,6.895089,-9.017805,-3.651962,-8.416297,-5.696506,-0.037378],[3.626749,5.451870,8.584004,5.807083,-8.407392,-4.883953,4.858051,-9.809585,-8.605186,3.892920,-2.466620,1.195658],[-8.762188,0.242209,-1.827734,1.102003,-1.710852,-3.390450,7.059198,5.529039,-8.395691,0.186836,4.036310,5.966750],[-0.796768,1.348845,-7.140761,5.982546,-4.047325,2.963764,-8.437869,4.926166,-2.732586,-0.515464,5.419328,9.123661],[-9.965779,-5.876688,-4.287117,3.685832,-1.976944,-6.118746,-0.881726,1.849806,-8.046020,0.011165,0.323722,-4.688213],[-3.356138,0.687678,-7.395018,7.612314,0.751584,-0.529802,9.667335,-2.482461,-6.368108,3.474158,-2.794253,-9.712548],[8.081783,9.268082,-6.084335,-2.784969,6.282472,-5.674345,-4.217830,-9.955681,5.808030,-4.793072,-1.725982,-3.640926],[0.276622,0.979311,-7.788173,-1.170423,-2.076225,-9.880876,0.082247,9.666289,-4.715111,4.880148,-9.218061,-8.345779],[-8.126965,-8.469407,2.793928,-0.497508,-8.606951,-8.989284,9.944915,2.328700,7.016391,-1.484064,-6.259952,0.050278],[7.791849,-2.138194,-0.654462,-1.298026,0.218715,5.560386,3.648005,6.274594,-8.196675,0.333886,-0.085747,3.530555],[-5.210669,5.906056,7.256327,-1.806007,0.771871,-4.602918,3.417811,-6.795554,-2.427500,-6.200291,0.337680,4.509153],[7.814881,1.304673,1.794830,2.964616,-2.928221,8.296203,7.223408,9.494186,-8.013504,-0.202868,-0.546339,-6.990278],[1.652129,-3.154089,-7.406595,-7.154267,-0.002725,7.992689,-4.212644,-1.427293,9.238954,-0.732499,0.084248,9.876184],[-3.971584,3.588285,7.122133,5.080628,-4.334617,4.692220,5.525209,6.538983,-9.053409,-6.119614,5.145624,8.784997],[-5.404159,-2.563018,7.234437,6.864225,6.505199,-4.359522,-2.576508,8.911762,-7.544572,1.842335,-5.438752,6.088220],[9.108281,7.680675,-7.015115,-9.825291,1.902100,-3.438288,-4.392142,-3.646540,1.783166,-5.308153,-3.207244,-4.223980],[1.433386,-1.592224,-7.077156,-5.330992,1.150651,9.509322,-9.742132,-3.551126,-4.580907,6.747412,-3.864569,-3.646083],[-9.159741,3.709658,5.631803,8.085558,4.046705,-2.056301,-6.985234,-6.345407,7.108539,0.362610,5.324930,2.182480],[8.546739,-9.107822,-6.138801,0.604711,-8.757495,3.455135,-2.986414,-6.922354,-8.146554,-0.592731,5.154852,2.763395],[-7.166516,-4.687845,-0.009199,7.588986,-3.556740,-8.694164,-2.378466,-0.393900,-1.593583,-2.855501,-0.064570,9.155200],[-1.234142,5.135209,-9.462986,-7.027823,-5.911337,-6.260076,-7.733872,-8.470670,9.102051,0.255480,-9.475940,-3.134112],[0.168380,3.729010,3.234230,-1.272540,-8.015880,8.272587,-3.859712,9.881951,4.177163,-0.528252,7.971339,-3.442787],[8.897137,3.408812,5.481524,-3.513682,-7.774115,3.481790,-2.419309,6.227324,0.001599,5.030259,-5.937821,-2.486401],[-2.859317,0.827875,4.411018,6.881152,5.220005,-7.901223,-9.619349,3.153808,3.241109,8.612468,6.208282,-8.784494],[0.471791,-8.274729,0.187856,6.961676,5.345786,8.590278,5.663773,6.998612,0.846156,8.029689,1.580279,9.468394],[7.549232,-3.358605,4.154897,-7.296104,8.433083,0.425192,0.787861,-2.141031,2.964864,-0.114072,-9.262112,-7.433045],[8.757818,-2.836868,-3.875136,7.182771,-5.521328,-5.973644,0.060235,-5.694584,-3.026431,4.321856,9.921407,-5.720894],[3.339744,1.862633,9.453626,-8.896846,8.884009,9.803752,-6.274738,-8.714941,-4.207722,-9.874223,6.205380,-3.922688],[-4.617265,5.029563,-4.891123,9.825715,-4.836162,5.945615,-6.067560,4.263508,-1.802700,5.774225,0.442639,5.570748],[3.171782,5.253541,6.104763,-3.105634,5.330352,1.227303,8.081951,-2.019946,3.620622,9.353911,1.379908,0.911565],[0.937004,-9.439502,-6.396013,8.725891,8.382371,-9.965362,-4.540172,8.675100,9.219852,0.220408,8.997119,-3.202250],[-8.648657,-4.085786,-8.664053,5.519464,-6.058263,1.175839,-9.729916,-4.491111,6.473288,-2.713289,4.824614,-2.846098],[-7.265354,-3.681128,7.686276,-9.816136,-6.355839,0.305290,-7.584248,1.265500,-4.740990,-5.269462,6.023178,-1.683779],[0.231729,-0.426200,-4.326463,2.790036,4.902039,-7.927873,1.604153,-7.404078,1.884347,-9.284350,-8.486958,0.881943],[-2.978930,8.992023,-2.209173,9.000520,-2.707551,9.996102,-2.944382,2.837230,-2.487850,-7.144591,-5.594754,3.138707],[-0.284046,-6.640330,5.072975,0.298274,3.334127,6.904453,-1.947097,2.848504,6.434746,-0.317873,-8.661658,7.294507],[4.010197,-0.768941,-5.552939,-3.566857,7.388482,8.850172,-5.595169,5.050476,-2.837620,0.738050,5.423397,8.396731],[1.494204,-0.889170,-7.364237,-6.115628,1.936088,2.345665,2.809120,-7.797458,-6.063189,5.209738,-6.237457,-8.627033],[-9.595252,2.793161,5.915172,-3.449744,-1.661860,-1.244598,-8.088553,9.034377,3.376052,2.844184,-7.944212,4.524848],[4.006206,7.387295,0.035748,-7.524750,1.631056,4.056907,9.742528,-4.118512,-4.793996,-2.908539,7.591012,-5.859702],[-2.349841,6.475100,8.947946,-6.723361,-8.302605,-3.479613,5.459499,5.444960,9.286431,1.966436,-2.191568,-3.343047],[-2.923199,2.192429,-6.275109,-2.179073,4.056662,7.641158,5.362272,4.634310,8.203193,4.533027,9.089510,-9.330179],[-7.905167,5.387247,2.248711,5.740842,-2.824600,7.882286,5.935904,3.797752,-4.616150,1.757240,-9.779127,8.407944],[8.889768,4.140001,1.937495,1.274803,2.840431,-8.476472,-6.338616,5.414970,-5.632193,-3.786335,-2.532005,-3.515706],[-4.263431,-1.535879,-8.935984,3.295745,0.340696,-9.742407,-2.391288,-6.987573,-0.012617,-5.699090,-0.190085,1.605026],[-7.247895,-3.696627,-9.490514,4.086101,6.477562,1.108715,8.674658,0.016129,9.002471,6.605019,9.120557,-4.911646],[-1.259472,-0.240223,-4.616679,6.470741,3.821604,5.637957,-6.855293,8.879568,1.046970,-2.984540,6.028758,0.937815],[2.397405,-6.294818,-6.967658,4.463290,6.968755,0.628776,8.557445,-9.988392,9.368694,-0.015877,7.483693,3.410001],[0.141670,9.234427,0.297594,3.127829,-1.864753,7.783088,-5.245992,0.195786,-7.168438,8.867252,-6.189341,5.164393],[-0.781783,1.538646,8.820469,-6.195147,-6.342837,8.756922,-5.959648,7.402151,-4.540139,6.072202,6.255620,-5.954849],[6.394227,1.079282,3.142426,4.925519,1.750437,3.480234,4.647783,7.835869,-7.340922,5.042943,5.868754,8.940596],[6.940424,9.352586,6.088934,5.557950,8.802289,-4.929708,5.672530,-4.363461,4.183243,4.813795,9.415857,-4.522320],[2.739254,-9.273095,-7.327162,-6.899811,-6.574958,-1.484476,7.163636,2.004209,2.998839,8.173454,8.892512,0.452436],[-9.843195,-7.124484,0.488696,5.344500,-8.857052,6.148983,5.569024,7.481321,1.694344,6.498216,0.240569,-2.187072],[9.798550,3.630353,1.969758,7.838631,0.431600,-9.680773,-1.875457,5.130771,7.921949,-7.612514,-8.805400,4.593503],[0.861368,-6.163786,2.770505,5.800071,-4.893725,7.106387,8.117755,1.046925,-7.150799,8.068098,2.230800,-6.550148],[-7.662118,3.185145,-6.353121,-5.371874,-1.936636,-6.115146,5.345611,-3.382422,-2.292417,-6.670605,-6.109379,-6.709530],[3.756001,9.663821,-7.114732,8.769644,-6.109731,1.104589,8.421624,5.991502,-3.303734,2.040658,9.806355,8.415691],[-0.002414,-3.490786,-9.981698,0.528347,-8.201195,-6.925841,-3.297534,7.459567,7.835231,2.652391,4.138569,-7.101346],[-2.965497,9.246891,6.440048,3.936400,-7.248360,-1.594894,-6.052862,-5.549465,-4.339399,2.189512,3.681621,-9.750972],[1.550794,4.285219,-0.410868,-4.594902,-4.823692,-1.419889,8.040190,5.123766,9.311829,-4.034703,4.332027,4.911950],[8.101338,5.659778,8.636518,2.818650,9.551427,6.391955,-4.018932,1.437677,-9.983963,-1.214474,2.565089,8.574599],[4.991059,6.434699,5.434905,8.546904,5.353114,4.827903,-4.873710,-2.229726,1.501708,3.567163,5.996283,-9.707692],[-7.335796,1.811774,-6.179279,0.767768,-2.761005,8.144189,7.768340,7.960830,9.441503,6.689402,3.351165,7.972132],[-6.250267,6.206997,8.085008,3.850593,-7.427697,-0.764904,0.548882,3.274592,-8.864653,1.685864,2.459782,-4.952682],[8.668307,-1.313653,8.316294,-8.152920,-7.108639,-2.482615,6.405959,1.821997,-4.163648,6.144247,2.157991,-5.903934],[2.573909,8.340647,-9.785134,0.728273,-2.282859,-9.253562,6.564511,7.379507,-7.173285,-2.874941,6.011354,-9.854703],[1.907914,3.174181,-2.065459,-9.681620,-3.111194,-0.126313,1.916125,-8.805071,4.339664,-0.536799,6.303043,-7.055113],[7.523047,-0.514699,-5.613968,-5.139561,-5.570305,7.715360,4.772565,-6.592348,1.937742,-6.747692,-4.387709,-3.029377],[-9.490813,-2.966366,-5.861268,4.437430,2.366724,-6.249742,-7.216031,2.625867,4.893590,4.076275,-8.253519,-3.146516],[-4.825185,8.677903,7.776317,-4.749785,-6.919622,-1.303445,6.450724,-7.588675,8.841062,4.085916,7.955516,-3.347208],[4.137887,-4.884580,3.679816,4.950810,2.907689,-5.134046,2.406779,-0.099250,8.903539,-4.088794,0.670080,-0.782075],[-4.924310,-1.246314,-9.413995,-6.837093,8.291610,-8.043249,8.500478,-4.386830,-2.842649,7.702971,-4.442620,0.856692],[-4.146241,-6.891966,-3.999813,-3.278566,-1.607435,-8.188446,7.334988,-4.941291,6.865697,8.672030,4.452115,-6.217179],[-6.768896,0.753363,3.657518,8.839299,-5.770138,2.930047,-6.492814,3.537026,5.627689,2.180849,-0.757205,4.616740],[-4.467440,-8.266791,-9.457493,8.524264,4.695216,9.350426,2.700150,-1.075727,5.916845,-0.117141,-0.454927,-1.281258],[-5.593838,-1.515457,-1.410812,-9.229748,5.478349,-0.925397,1.734863,-6.173824,-6.858400,-4.229307,-2.427574,1.706530],[-6.544036,4.871762,-1.087728,-6.645021,-5.969422,9.358137,-5.774725,3.456648,8.023882,-7.998824,-7.399032,0.170883],[-5.135190,-0.302312,-2.222626,-1.501244,-9.883368,9.454964,-7.966707,3.807493,3.348071,2.414044,-5.475337,1.960346],[-0.616890,9.244983,-9.317848,4.258265,-7.834318,-1.196740,2.900024,9.864823,-8.471510,-3.573512,0.258272,6.502531],[3.412466,-9.796595,-9.630723,8.323034,2.196622,7.846693,2.931010,1.575554,-5.345372,-5.483467,-5.265422,9.223125],[8.600773,9.540698,4.515951,3.176462,2.437073,5.270123,5.289948,-5.499309,0.361933,-6.617035,-8.961268,-1.319000],[2.441282,0.530588,-5.530730,2.842488,-7.440548,-6.534704,3.782584,-2.479356,-3.177477,-9.033668,-7.025966,-6.658457],[-2.154547,-9.679382,-1.039972,-4.399789,-5.533683,-2.322105,-1.651626,-0.992702,-5.320478,9.850596,-1.895165,1.840166],[0.237439,-7.572307,-5.761325,3.016925,0.283276,-6.389786,-9.619467,-7.614636,-3.521280,4.017096,-4.945937,9.729164],[0.090318,-2.150808,8.637235,-3.477124,-2.403140,-6.958335,2.540948,5.165961,-7.529330,5.475385,-5.457329,7.548179],[-8.225577,-9.686613,-7.234114,2.761958,-1.214418,5.487262,8.547075,-7.300089,-2.769939,7.294678,-0.065664,-9.020882],[-0.079673,7.846450,6.859891,6.900370,5.049517,-0.544516,8.561566,3.920991,-5.089944,8.899203,-8.880920,8.007154],[0.340623,1.502922,5.551736,-0.597210,6.486446,9.149696,-2.392237,-3.705729,-4.021613,5.102266,-5.600900,6.011041],[8.522043,4.713402,-4.021672,-4.948998,7.881373,2.934082,2.950995,-1.750809,6.093499,-7.916013,-0.552543,3.658584],[5.769508,-8.274634,-0.001789,-9.952944,3.758395,8.169063,-7.467836,7.525988,0.292995,5.423331,-4.799250,3.860196],[5.797235,3.416899,-1.319685,-0.325097,7.751236,-4.077070,-9.463696,9.899807,-7.501898,2.531482,-2.462056,-2.442419],[8.234046,-8.549380,6.249870,3.798361,8.187381,-2.952215,1.530497,-5.456616,3.673432,-2.253710,5.824051,2.250552],[1.292154,7.118348,5.749583,9.766861,0.509886,-1.893640,-8.962872,9.224027,-2.909970,5.524241,-7.736324,-2.329743],[-1.747696,2.089531,-9.827142,9.224870,9.937722,7.288718,-4.356231,3.356942,8.799740,-3.298925,8.292044,8.297495],[5.818866,9.501110,-8.946708,-5.182068,8.439398,1.536082,-9.567262,3.728419,7.499430,1.978281,2.874198,0.100946],[-9.695701,-5.936086,0.193457,-0.232359,8.559065,-7.285562,0.853845,-8.039044,-3.340089,1.777350,4.902182,-4.047795]], dtype = "float32")#candidate|11518|(1040, 12)|const|float32
bop_11519 = relay.left_shift(uop_11515.astype('uint8'), const_11518.astype('uint8')) # shape=(1040, 12)
bop_11522 = relay.left_shift(uop_11517.astype('uint8'), const_11518.astype('uint8')) # shape=(1040, 12)
func_8993_call = mod.get_global_var('func_8993')
func_8998_call = mutated_mod.get_global_var('func_8998')
const_11531 = relay.const([3,10,-4,-10,-8,4,-5,-10,-4,-8,-2,6,7,-8,-9,6,1,-7,4,-3,-2,-8,-10,1,-7,-4,1,4,7,-7,-9,8,10,-6,-5,-7,-4,5,7,9,-6,10,5,5,6,-10,-6,-6,4,-1,10,7,6,9,9,-5,9,2,9,-7,1,1,-4,6,-8,-8,-6,4,8,-3,-1,3,4,-5,-5,10,-8,3,-8,1,-5,-6,-5,-3,6,-1,4,7,9,3,-4,10,-5,-5,2,-1,-4,-10,-1,-5,10,-4,-10,-4,-4,-1,-1,-10,3,-1,1,4,1,8,8,9,-7,-2,-5,-6,-7,-5,7,7,3,7,-10,-1,6,4,-3,1,5,9,-2,-7,1,7,9,1,2,6,-10,2,8,-1,-9,1,6,6,-4,-8,6,4,-9,-9,-3,-2,4,1,10,-3,4,4,3,-9,2,-1,-3,6,-1,5,-2,1,1,-7,3,1,-3,9,-5,-2,-6,-5,-9,-2,-8,6,-2,-5,8,5,2,-1,8,-9,-10,2,-6,-6,-10,7,5,-5,2,-1,1,-6,-9,6,-8,-2,7,-4,-3,-10,-9,10,-4,-3,6,-1,-10,-10,3,-8,-2,-9,6,-6,4,-1,-6,-10,-7,-9,7,-10,6,-5,7,-1,-4,9,-4,9,2,-4,1,9,7,1,-1,-10,-10,-7,8,5,8,4,-1,-1,-4,-3,9,5,1,7,-6,8,-1,2,-3,-1,-10,-3,9,6,-9,10,-1,3,8,6,6,-9,-1,6,7,4,-2,10,1,5,-7,9,8,1,-1,-4,-3,5,4,-7,-9,-8,-8,-4,-6,-10,-4,2,10,-1,-2,-1,8,10,-7,2,-8,9,-1,-6,2,2,8,9,9,10,-3,-8,-6,2,5,-1,6,-10,5,-8,5,-2,-5,-10,10,-6,2,-5,-2,4,-1,-10,-9,6,8,10,3,6,-4,2,6,-9,2,7,-1,1,7,2,2,7,-1,3,10,4,6,8,-6,2,-10,-1,-9,-6,-2,4,6,5,-10,-5,-10,4,7,-9,8,-8,-10,3,1,-8,8,8,3,3,-4,4,7,1,10,4,1,10,3,3,-3,-1,-4,4,4,3,-6,-1,4,7,-2,-6,5,6,-7,5,1,10,-3,-3,4,5,4,2,-8,4,2,-2,-3,-6,-7,-2,-5,4,-9,-6,-2,2,7,-3,-5,-4,8,3,-6,4,7,2,8,-1,2,1,-8,-1,7,9,-5,-8,-1,-4,7,2,2,8,-9,-1,6,-8,-3,9,-7,3,-1,4,-9,1,-4,1,-7,8,-8,1,-10,-8,2,-2,-6,-10,5,1,10,-1,-6,-2,3,-3,10,-5,-4,1,10,4,10,5,8,1,-9,-2,-9,10,-4,-3,8,3,10,-8,1,8,-6,9,8,-1,6,-4,10,5,8,8,-5,-7,-9,7,7,-9,8,-6,-10,3,-2,1,2,6,3,5,-7,4,5,3,-9,-4,4,1,-7,-10,-3,3,-6,-3,-2,-8,1,4,7,6,4,1,10,-2,8,9,2,5,8,-10,8,-1,1,-5,-7,-4,-2,8,9,-2,1,-8,-1,2,5,-2,-9,-2,-10,-1,-9,-7,8,-5,-3,-3,6,9,6,-7,-5,-4,1,9,4,-8,2,5,1,8,7,-10,5,-2,-5,10,9,-6,-1,-4,4,-7,7,8,-4,-2,10,-5,3,7,-8,8,2,-10,9,-7,5,-9,8,10,6,2,-4,-4,-4,-3,-8,2,4,-3,5,6,-4,2,-6,5,-2,9,-3,3,2,2,8,9,5,7,-2,7,9,1,2,7,-2,-2,-9,-4,2,2,9,1,5,-3,-10,6,-2,7,2,7,-10,9,-3,-2,-9,4,6,-2,-5,10,5,-7,1,-10,9,7,6,1,-6,-6,-7,-3,-10,-8,9,-10,-1,1,4,7,9,-3,9,-6,-8,10,-5,-2,9,9,5,-2,8,-10,-7,6,-2,-2,-2,6,1,7,10,-10,-7,-6,-10,-1,-4,-1,-10,6,7,-3,-6,-10,6,4,7,4,5,-6,-8,3,10,10,2,-3,4,7,4,7,-5,5,-7,3,9,-6,8,9,-5,9,-5,-6,8,-8,-3,2,8,-7,6,-8,3,2,-5,-1,-9,8,5,-6,-9,7,1,-9,9,-7,-8,-10,1,4,4,-8,8,-1,-2,-5,-1,-3,4,-3,-8,7,-7,6,-2,6,6,9,10,6,-6,2,-5,-2,-9,-1,-7,-2,9,4,8,5,2,9,-5,3,-8,-9,-2,-4,-5,-7,-7,-9,-6,-6,-1,-10,7,4,-4,3,3,-7,-2,3,9,-2,-8,-3,-1,1,-9,6,10,-8,-8,6,-3,-6,7,-4,1,5,6,4,-6,-1,7,3,-7,10,3,9,-3,3,-4,10,-3,-5,-4,6,5,7,5,7,-4,-9,7,5,3,-1,6,-2,-8,-10,7,2,-3,2,-2,2,-8,-3,9,6,-9,-10,-10,-6,1,-1,-1,-10,2,4,3,-10,-7,7,-4,-7,-1,7,-1,-2,-8,1,-5,-6,3,3,-4,-8,-7,-6,-9,1,3,-5,-1,-7,9,-8,10,-3,2,10,10,-8,2,-5,10,-3,6,-5,7,5,3,2,5,-6,-5,4,2,-10,5,-9,5,-8,-2,-7,-7,6,-4,-3,6,-6,4,4,-2,-4,4,-4,5,-8,-6,-7,7,-3,2,2,3,-8,-9,-5,-9,-2,2,1,-7,-8,6,-6,-7,-6,4,6,9,6,-6,-1,-4,9,-8,-5,9,-7,-7,8,3,2,5,7,-9,1,8,2,2,7,-10,-4,8,-4,6,10,9,7,9,7,8,5,8,9,-9,-2,9,-9,-9,1,-8,-5,2,-10,-9,-10,3,-5,5,4,10,-4,-4,-5,8,8,-8,3,-8,-2,-8,-4,-8,-3,-4,-6,5,-3,-4,1,8,-8,-6,-8,-3,-1,-1,-1,5,3,-5,4,-8,8,-7,4,8,-2,4,-9,8,-8,-7,1,7,3,-10,9,-6,-2,5,8,9,-10,-10,9,-10,-1,6,-1,4,4,-5,-6,9,3,5,7,-1,-6,-7,1,4,4,-3,-2,3,3,-8,-8,-4,-10,2,2,6,6,-6,1,-10,9,-2,-10,-8,2,9,-4,-8,-3,-6,6,6,-5,1,-2,1,-4,-4,-7,-7,-8,-6,1,-9,-6,3,6,4,-2,7,3,5,10,-2,-2,5,-5,-2,-7,-1,5,5,-3,-3,1,1,8,3,-7,-5,4,-9,-3,5,6,-2,-2,-4,-3,2,-7,-2,-10,2,-10,8,-9,4,2,9,-9,-8,-8,-8,9,9,-6,10,-5,-5,1,10,-2,1,8,-1,3,-8,2,-3,9,-7,-10,10,1,-10,-9,-4,7,-5,5,1,-5,-6,6,-10,-1,9,3,-9,-5,9,-1,6,-8,4,9,9,4,-3,-7,7,-9,3,4,-8,-3,4,2,6,1,3,-5,3,10,-4,-8,-8,5,-9,-3,9,-8,2,1,9,-7,-1,7,-4,10,5,-8,3,4,4,10,5,-8,-9,-4,2,-3,4,7,-6,-5,-4,-5,6,-10,-9,8,10,3,-7,-8,-8,4,-10,9,7,-10,-7,-8,6,-7,-10,-1,1,2,10,-8,2,10,2,-1,-3,2,5,5,9,8,-7,2,4,-7,-3,-3,-7,-6,-2,8,7,7,9,5,6,-9,-4,-2,-2,-5,5,9,-10,-3,-3,10,-2,-4,-1,-10,2,-1,-8,-9,3,7,-1,-4,-3,-5,-7,-8,6,-1,-1,-3,8,-1,6,-1,1,10,6,5,8,-8,9,-7,6,-1,7,-9,-9,-3,2,7,-2,7,9,-7,-4,-6,-1,-7,9,5,5,2,6,-10,-9,-2,-3,1,3,-1,-3,1,9,10,-7,3,8,-5,-3,3,-3,7,5,8,-5,4,-5,1,-2,-2,-7,10,-2,-2,-3,9,1,2,1,6,8,-4,-5,-6,8,-6,3,-2,5,10,-10,-4,4,-9,-5,-10,4,-7,-1,-8,9,3,3,4,9,4,2,10,-3,2,-5,2,-8,-2,9,7,-5,-9,6,-4,9,4,-7,9,7,-7,-4,4,7,-3,6,-4,2,9,9,5,-5,-9,-5,-2,10,5,-10,7,6,4,2,5,3,4,-1,-10,-7,-9,-7,-5,10,-2,2,8,1,-2,-3,-7,-2,10,9,10,-9,8,-7,5,-6,10,8,6,1,10,-6,10,-7,3,-8,-2,1,-7,7,-8,10,-1,-5,8,6,9,7,1,-8,2,5,-7,5,5,-5,-5,2,-3,-4,4,-1,3,2,3,-8,8,-8,2,-6,-5,3,-5,-7,-1,-9,2,-7,7,-1,-1,-5,6,3,-9,6,-1,-8,-3,5,6,2,6,-7,1,3,-8,-1,6,-2,-7,2,1,-4,-5,-10,-5,-10,-2,-5,-4,-4,-9,-7,-3,1,-1,-7,1,7,-2,-6,1,-9,-5,-7,3,1,8,-8,-1,10,1,6,-9,-7,-2,-10,-1,6,-3,4,6,-1,-7,7,7,-10,5,10,9,-4,10,-1,-3,8,-2,2,-10,-2,2,-5,-5,7,2,-5,-7,-1,-3,10,1,-9,-2,9,-6,1,10,-8,2,6,-5,5,10,-8,10,6,-8,4,-8,6,-6,1,-2,1,-6,-7,10,2,-8,2,10,9,2,10,8,5,2,10,-7,-9,9,-4,10,8,6,-7,-7,4,2,1,-9,-4,6,-6,-4,-8,3,-2,9,2,-10,-2,7,-8,2,-9,-8,4,4,7,-7,10,4,-4,4,10,6,2,-10,4,-10,6,7,-9,2,-10,-8,10,4,7,-9,-3,9,-10,-6,4,1,-1,2,1,6,4,2,8,-5,6,-3,10,-6,2,9,5,8,8,8,5,-1,-7,-2,-10,1,-4,7,-8,-4,-5,8,5,-8,7,2,-9,2,7,3,2,5,10,-10,7,9,-9,3,-5,6,-4,-4,3,-9,10,10,-5,2,9,4,-7,7,1,1,1,-8,8,-10,-9,-1,-10,-5,-8,-2,6,-2,-10,1,8,-7,-9,-6,8,8,-4,8,-2,10,-7,-4,10,-8,-4,2,-10,3,-6,6,4,3,5,-3,-4,4,5,6,5,-4,4,-2,-6,6,5,-6,-8,-6,-10,-9,-2,-6,2,-2,8,7,-3,10,8,-1,-10,2,8,10,-7,-4,1,-7,4,3,5,-7,10,10,-3,-9,-10,10,10,-7,10,-7,-1,-5,4,-8,7,9,-3,5,10,9,-6,-9,1,-5,-5,-4,-5,-3,9,7,-9,5,-7,-7,8,-8,-5,3,3,8,8,-6,3,3,-5,9,-9,7,9,-5,-8,-1,2,-2,2,2,-4,-5,2,-10,-8,-2,-5,5,10,1,4,4,8,10,-4,1,5,-6,4,3,-6,1,3,-7,5,-3,-2,5,-3,-1,9,6,8,10,-7,-3,9,4,7,7,1,-3,8,-4,-4,7,-9,-7,2,-8,-2,2,5,3,9,-4,-9,3,4,6,4,-1,-6,-9,-8,9,-10,-1,-9,6,2,6,8,7,-9,-10,-6,-6,-3,-1,6,1,3,8,6,-9,6,10,-7,6,9,8,8,10,-1,-2,-2,-10,7,-4,3,-9,-1,1,-5,-3,-4,2,5,5,4,10,2,-9,-9,10,-8,-9,8,-6,-10,9,-10,-7,-4,8,10,2,-7,1,-5,7,9,-2,-7,-2,-9,-10,4,1,-10,6,6,-3,10,-10,4,8,-3,-4,1,9,9,-7,7,-2,7,-8,-5,-8,5,-10,5,-6,-8,-9,6,-9,7,7,5,2,7,-9,-3,9,-4,10,-7,-8,-5,-8,-4,6,-4,-7,4,3,3,4,-8,3,4,-3,-10,-9,-7,5,-3,-5,6,6,-5,-1,-8,2,10,7,-1,-6,-1,-5,10,-2,-3,-10,10,10,2,2,8,5,1,3,-4,2,-2,4,7,6,2,2,9,-5,-7,2,-1,5,-3,-4,5,-10,3,10,-9,-3,-2,1,10,4,-5,1,7,1,-4,5,-3,10,-1,7,7,-1,6,10,-1,3,3,5,-2,10,-1,7,3,1], dtype = "int64")#candidate|11531|(2304,)|const|int64
var_11532 = relay.var("var_11532", dtype = "int8", shape = (2730,))#candidate|11532|(2730,)|var|int8
call_11530 = relay.TupleGetItem(func_8993_call(relay.reshape(const_11531.astype('int64'), [2304,]), relay.reshape(var_11532.astype('int8'), [1, 2730]), relay.reshape(var_11532.astype('int8'), [1, 2730]), ), 0)
call_11533 = relay.TupleGetItem(func_8998_call(relay.reshape(const_11531.astype('int64'), [2304,]), relay.reshape(var_11532.astype('int8'), [1, 2730]), relay.reshape(var_11532.astype('int8'), [1, 2730]), ), 0)
func_2904_call = mod.get_global_var('func_2904')
func_2907_call = mutated_mod.get_global_var('func_2907')
const_11535 = relay.const(-6, dtype = "uint64")#candidate|11535|()|const|uint64
const_11536 = relay.const([-2,5,-6,-3,-3,7,-1,6,-9,6,-1,-10,5,-2,-8,-4,1,-10,-10,-6,-4,-10,8,-10,10,-10,-1,1,6,-4,-2,5,-8,2,7,-10,1,-3,10,7,-9,3,5,5,7,8,-8,5,-7,5,-5,3,6,8,-1,-6,-9,-2,4,10,7,-3,10,-2,-6,-8,-1,-8,1,3,-8,4,-9,-6,4,-8,-3,-7,-10,-9,-7,7,2,-6,-1,4,-9,1,-5,-3,-4,-1,2,1,8,-8,8,2,1,2,-7,3,3,6,-10,6,-9,-10,-4,3,-10,-6,6,-8,-5,9,5,10,6,7,-2,-10,9,-2,-1,-4,7,9,7,10,-10,-6,9,-4,-9,-10,3,1,-10,-4,1,-1,-9,2,10,7,-9,4,6,-4,8,-5,-6,2,1,-6,-7,3,-7,-9,6,-6,9,-6,5,-10,-6,5,-1,-7,-4,-7,7,-6,-4,3,1,7,-7,-4,3,-7,-9,10,-9,4,-7,6,-2,10,7,6,-3,7,5,4,5,6,6,-4,10,-10,-9,-5,-9,9,-10,-4,-9,3,-4,10,10,5,-10,3,-7,1,1,8,-10,-8,1,3,4,-2,3,-10,-7,-1,4,-1,6,8,5,-7,-1,7,-6,-2,4,-9,-7,2,-3,-3,4,9,-5,7,-3,8,1,7,-4,10,-4,-5,-9,5,9,-1,3,2,7,1,-8,-7,2,8,5,-4,-8,-10,-7,9,6,-8,9,8,-3,-9,7,10,10,-7,-8,5,-1,3,1,-5,-3,7,-7,10,-5,-1,-5,-2,-10,3,10,-6,-3,1,2,-3,1,6,7,7,9,2,8,-10,-5,-8,10,-7,2,9,8,-10,-3,6,-6,-2,1,-8,2,-7,2,-1,9,5,10,7,7,-6,6,2,6,-5,-10,6,-3,-6,-8,7,-6,9,6,3,-5,-4,2,-1,2,5,-10,-1,-6,10,-7,-3,9,1,10,-1,-3,-4,-2,3,-2,3,1,-9,-4,-3,5,-4,-8,4,-8,-10,1,-8,-8,5,1,-4,-6,1,1,1,-10,4,1,-3,-2,-2,7,-4,-2,7,-10,6,-5,4,-9,-3,9,4,-5,10,1,8,1,7,4,-7,-6,-8,7,6,-8,-4,6,8,-6,9,-10,9,1,-7,9,-9,4,-7,-1,7,-2,10,-1,-1,9,-8,7,2,-1,-2,2,7,-9,7,7,-3,6,-1,6,-6,10,-5,1,-4,6,-5,7,4,-8,10,-6,-8,-8,1,-9,-10,1,5,-1,-6,-4,5,5,-9,-10,-10,-2,1,7,6,7,6,-9,1,9,1,8,-7,7,8,5,-6,-8,8,6,-1,10,-2,8,3,1,-5,9,-2,7,4,9,8,-6,3,2,7,-1,5,2,-1,1,2,7,6,7,6,1,-3,2,-9,10,-8,-6,-4,-10,-3,-10,-1,-10,-3,-9,3,2,-7,2,1,-3,-4,-4,7,-3,5,5,2,-2,-2,-3,9,1,-2,-1,4,5,-2,6,3,10,-5,-3,-10,-4,-6,-7,4,10,-10,2,6,4,6,-9,-1,6,-4,5,-6,6,7,6,3,7,10,9,-7,-5,-3,2,1,-10,-9,-9,-5,6,10,1,-9,-9,10,-6,-1,9,-5,-9,-9,3,5,4,7,-10,-1,10,-1,-10,7,7,-6,5,7,8,-3,5,-3,6,8,-6,-8,2,7,2,7,5,6,-5,-4,-1,3,2,5,-5,5,6,2,-5,-10,-7,8,10,-2,9,7,-10,5,8,4,-7,-9,-4,-10,1,8,7,-10,2,-2,-7,-10,-1,2,5,5,5,-4,4,-8,6,-3,-3,-1,-6,-5,-4,-1,-10,-4,-9,6,10,10,5,-1,3,-5,-8,1,-1,-10,-3,-10,5,7,-3,-5,6,9,3,-4,3,-5,6,-6,4,2,6,-10,5,5,2,-3,5,-2,1,9,3,-6,1,8,7,-3,-1,5,2,-6,-8,-5,-2,-3,10,6,5,-6,3,2,-3,4,-7,4,9,-4,-10,1,-5,-4,8,10,-3,2,10,7,-8,-9,-1,6,2,8,10,-1,-8,10,6,-1,-6,-6,-6,10,-7,-1,-10,10,-7,-4,-10,4,2,3,-3,1,-5,6,2,-5,4,9,3,6,8,10,4,7,7,-6,-4,2,3,-3,3,-6,-6,-1,-6,2,6,3,4,-8,10,1,-2,-3,10,-2,4,10,-4,-8,7,-6,1,-4,9,-8,-7,-1,4,4,10,9,-5,-3,-9,9,2,-10,5,10,6,-5,10,2,1,-10,-1,4,-7,6,9,-1,-1,6,4,1,7,-7,-1,-1,-6,-3,9,4,4,9,3,6,2,3,-1,10,-2,5,5,-8,-6,-7,-8,-8,-8,8,10,9,-8,-9,-9,-5,5,4,5,-8,-5,-5,-5,5,-3,-7,9,-4,-8,-5,2,-6,1,7,-6,-6,-2,-1,-7,10,-1,2,3,-8,9,-8,5,-9,7,-2,-1,-3,-3,-9,3,8,-8,-6,6,-4,7,-7,-7,9,-10,-7,1,-3,-4,-5,-2,3,-3,1,-10,6,6,-10,-8,6,-9,-1,5,-5,6,8,-2,8,-9,-5,-3,-8,4,1,-6,2,-4,-6,-6,-9,-10,10,9,7,6,-9,-3,-7,5,-1,-7,-6,5,-9,2,3,7,4,-1,4,-3,6,7,4,-1,5,-7,6,-5,-3,3,9,-9,-5,-5,10,9,-5,9,-2,-6,6,-8,-7,7,9,6,-1,-4,7,-5,-7,-3,3,-6,2,-2,7,-3,4,-4,2,-5,-7,9,-8,3,9,10,9,8,7,-2,-3,-7,-4,2,-1,9,5,3,2,-1,-3,-6,-4,-6,8,5,10,8,5,10,-6,5,6,-5,6,-3,6,3,-6,2,4,3,1,10,9,3,8,7,10,6,9,-6,7,-4,8,-6,5,-6,1,4,5,-7,7,-1,-7,4,-4,-8,2,5,10,-2,-1,1,6,1,-3,6,-4,9,-2,5,5,-9,9,-9,-5,2,-1,7,-8,-9,-9,-1,4,2,4,3,5,8,-6,-1,-8,-7,7,4,-2,-6,-10,2,6,-9,3,10,4,10,-5,-10,-7,9,1,-9,10,2,2,-3,7,-7,-6,6,6,-1,-8,-5,-10,-9,10,3,-5,10,-8,4,-9,-4,1,-6,-8,10,-1,-3,9,-3,-1,-9,-1,4,5,3,-10,-8,8,9,-2,6,-4,-6,2,-4,-6,-1,-3,4,-2,2,3,4,6,1,-4,3,7,-1,-9,-4,-7,1,8,7,-2,4,1,-9,3,4,9,5,7,5,-8,-10,-1,-4,6,-1,-2,-4,-6,7,4,-7,9,9,8,1,-2,-1,-1,6,-8,-4,3,-3,-2,10,-2,-3,9,-6,-7,-2,-5,3,-10,3,-7,6,6,1,-10,8,-8,-2,2,-5,-4,-9,2,4,3,7,4,-2,-5,-10,3,-6,6,9,7,-8,-5,-1,-1,8,-2,-3,-2,-9,-7,-1,-5,-3,-8,-1,-8,-7,8,-1,-3,-2,-6,3,2,-3,1,9,-3,-8,-5,-6,-10,8,-9], dtype = "uint64")#candidate|11536|(1350,)|const|uint64
call_11534 = relay.TupleGetItem(func_2904_call(relay.reshape(const_11535.astype('uint64'), []), relay.reshape(const_11536.astype('uint64'), [15, 9, 10]), ), 0)
call_11537 = relay.TupleGetItem(func_2907_call(relay.reshape(const_11535.astype('uint64'), []), relay.reshape(const_11536.astype('uint64'), [15, 9, 10]), ), 0)
output = relay.Tuple([call_11484,call_11492,bop_11519,call_11530,const_11531,var_11532,call_11534,const_11535,const_11536,])
output2 = relay.Tuple([call_11485,call_11493,bop_11522,call_11533,const_11531,var_11532,call_11537,const_11535,const_11536,])
func_11545 = relay.Function([var_11532,], output)
mod['func_11545'] = func_11545
mod = relay.transform.InferType()(mod)
var_11546 = relay.var("var_11546", dtype = "int8", shape = (2730,))#candidate|11546|(2730,)|var|int8
output = func_11545(var_11546)
func_11547 = relay.Function([var_11546], output)
mutated_mod['func_11547'] = func_11547
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10073_call = mod.get_global_var('func_10073')
func_10074_call = mutated_mod.get_global_var('func_10074')
call_11561 = relay.TupleGetItem(func_10073_call(), 0)
call_11562 = relay.TupleGetItem(func_10074_call(), 0)
output = call_11561
output2 = call_11562
func_11565 = relay.Function([], output)
mod['func_11565'] = func_11565
mod = relay.transform.InferType()(mod)
output = func_11565()
func_11566 = relay.Function([], output)
mutated_mod['func_11566'] = func_11566
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8896_call = mod.get_global_var('func_8896')
func_8898_call = mutated_mod.get_global_var('func_8898')
call_11617 = relay.TupleGetItem(func_8896_call(), 0)
call_11618 = relay.TupleGetItem(func_8898_call(), 0)
output = relay.Tuple([call_11617,])
output2 = relay.Tuple([call_11618,])
func_11624 = relay.Function([], output)
mod['func_11624'] = func_11624
mod = relay.transform.InferType()(mod)
mutated_mod['func_11624'] = func_11624
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11624_call = mutated_mod.get_global_var('func_11624')
call_11625 = func_11624_call()
output = call_11625
func_11626 = relay.Function([], output)
mutated_mod['func_11626'] = func_11626
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9345_call = mod.get_global_var('func_9345')
func_9346_call = mutated_mod.get_global_var('func_9346')
call_11668 = relay.TupleGetItem(func_9345_call(), 0)
call_11669 = relay.TupleGetItem(func_9346_call(), 0)
output = relay.Tuple([call_11668,])
output2 = relay.Tuple([call_11669,])
func_11688 = relay.Function([], output)
mod['func_11688'] = func_11688
mod = relay.transform.InferType()(mod)
output = func_11688()
func_11689 = relay.Function([], output)
mutated_mod['func_11689'] = func_11689
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10014_call = mod.get_global_var('func_10014')
func_10015_call = mutated_mod.get_global_var('func_10015')
call_11697 = relay.TupleGetItem(func_10014_call(), 1)
call_11698 = relay.TupleGetItem(func_10015_call(), 1)
func_8682_call = mod.get_global_var('func_8682')
func_8683_call = mutated_mod.get_global_var('func_8683')
call_11704 = relay.TupleGetItem(func_8682_call(), 0)
call_11705 = relay.TupleGetItem(func_8683_call(), 0)
bop_11713 = relay.not_equal(call_11704.astype('bool'), relay.reshape(call_11697.astype('bool'), relay.shape_of(call_11704))) # shape=(7, 12, 14)
bop_11716 = relay.not_equal(call_11705.astype('bool'), relay.reshape(call_11698.astype('bool'), relay.shape_of(call_11705))) # shape=(7, 12, 14)
func_11156_call = mod.get_global_var('func_11156')
func_11158_call = mutated_mod.get_global_var('func_11158')
call_11730 = func_11156_call()
call_11731 = func_11156_call()
func_10985_call = mod.get_global_var('func_10985')
func_10986_call = mutated_mod.get_global_var('func_10986')
call_11732 = func_10985_call()
call_11733 = func_10985_call()
output = relay.Tuple([bop_11713,call_11730,call_11732,])
output2 = relay.Tuple([bop_11716,call_11731,call_11733,])
func_11738 = relay.Function([], output)
mod['func_11738'] = func_11738
mod = relay.transform.InferType()(mod)
mutated_mod['func_11738'] = func_11738
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11738_call = mutated_mod.get_global_var('func_11738')
call_11739 = func_11738_call()
output = call_11739
func_11740 = relay.Function([], output)
mutated_mod['func_11740'] = func_11740
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9400_call = mod.get_global_var('func_9400')
func_9401_call = mutated_mod.get_global_var('func_9401')
call_11799 = func_9400_call()
call_11800 = func_9400_call()
func_8047_call = mod.get_global_var('func_8047')
func_8049_call = mutated_mod.get_global_var('func_8049')
const_11802 = relay.const([True,True,False,True,True,False,False,True,False,False,False,True,True,True,False,True,True,False,False,False,True,True,True,False,True,False,False,True,True,False,False,False,True,False,True,True,False,True,False,False,False,True,False,True,False,False,False,True,False,False,True,True,False,True,True,True,True,True,True,False,False,True,True,True,False,False,False,False,False,True,True,False,False,True,True,False,True,True,True,False,True,False,True,True,True,True,True,False,False,False,True,False,True,False,False,True,False,False,False,False,True,True,False,True,False,True,True,True,False,False,True,False,True,True,True,False,False,False,True,False,False,False,True,False,False,True,True,False,True,True,True,True,False,True,False,False,True,False,False,True,False,True,True,True,False,True,False,False,True,True,True,False,True,False,False,True,True,True,True,False,True,False,True,True,False,False,False,True,False,False,False,False,True,False,False,False,True,False,False,False,True,True,False,False,True,False,True,False,False,False,True,True,True,False,False,True,False,False,False,False,False,False,True,False,False,True,False,True,True,False,False,False,False,False,False,True,True,True,False,True,True,True,False,False,True,False,True,False,True,True,False,True,False,True,True,False,False,True,False,True,False,False,True,False,False,True,True,True,False,True,False,False,False,False,False,False,True,False,False,False,True,False,True,True,False,True,False,False,False,False,False,False,False,True,False,False,True,False,False,True,True,False,True,False,True,False,False,False,False,False,False,True,False,True,True,False,False,True,True,True,True,True,True,True,False,False,True,True,False,True,True,True,False,False,True,True,False,True,True,False,True,True,False,False,False,True,False,True,False,True,False,True,False,True,False,True,True,True,False,True,True,True,True,True,False,False,False,False,False,True,True,True,False,True,True,False,False,False,True,False,True,True,True,False,True,True,True,False,False,True,False,True,True,True,False,True,True,False,True,True,True,False,True,True,True,False,False,True,False,True,True,False,True,False,False,False,True,True,False,False,False,False,True,True,True,False,False,True,False,False,False,False,False,True,True,False,False,True,True,False,True,True,False,False,True,False,False,True,True,False,True,False,True,False,True,False,False,False,True,True,False,False,True,False,True,False,False,True,False,False,False,True,True,False,True,False,True,True,True,False,True,False,False,False,True,False,True,True,False,False,False,False,False,True,False,False,False,True,True,False,True,True,True,False,False,False,False,True,True,False,True,False,False,False,True,True,False,False,True,False,False,True,False,True,True,False,True,True,True,False,True,False,False,False,False,False,False,True,True,True,True,False,True,True,False,False,True,False,False,False,False,True,True,False,False,False,True,True,True,False,True,False,True,True,False,True,True,False,False,False,True,True,True,True,True,True,True,False,False,False,False,False,True,True,True,True,False,False,False,True,False,True,False,True,True,False,True,False,True,True,True,False,True,False,True,False,True,True,False,True,True,False,False,False,True,True,True,True,True,True,True,True,False,True,True,True,True,False,False,False,True,True,True,False,True,False,False,False,True,False,False,False,False,False,False,False,True,True,True,False,False,False,True,True,True,False,False,True,False,False,True,False,True,False,False,False,True,True,True,False,True,True,True,False,True,True,False,False,True,True,False,True,False,True,False,True,False,True,False,False,True,False,False,True,False,True,True,True,False,False,False,True,True,True,True,False,False,True,False,True,True,False,True,True,False,True,False,False,False,True,False,False,True,True,True,True,False,False,True,False,True,True,True,False,False,True,True,False,False,True,False,True,False,True,False,False,False,True,False,True,False,False,True,True,True,False,False,True,False,True,True,True,False,True,False,False,False,True,True,False,False,True,False,False,False,False,False,False,True,False,True,True,True,False,False,False,False,True,False,True,False,True,False,True,False,False,True,False,True,False,True,False,True,True,False,True,True,True,False,True,True,True,False,False,False,True,True,False,False,True,True,False,False,False,True,True,False,True,True,False,True,False,False,True,True,False,False,True,True,False,False,True,False,False,True,False,True,False,False,True,True,False,False,False,False,True,True,False,False,False,False,False,True,False,True,False,True,True,True,False,False,True,True,False,False,True,False,True,True,False,True,True,False,True,True,False,False,False,True,True,False,True,True,True,False,False,False,True,True,True,True,True,True,True,True,True,False,True,False,True,False,True,False,False,False,True,True,True,True,False,False,False,True,True,True,True,True,True,False,False,True,False,False,False,True,True,True,True,True,True,False,True,True,True,True,True,False,False,False,False,False,False,False,False,True,True,True,False,True,False,True,False,False,True,False,True,False,True,False,True,False,False,False,True,True,False,True,False,False,True,False,True,False,False,True,True,True,False,False,False,False,True,False,False,False,False,True,False,True,True,False,False,False,False,True,True,False,False,True,True,False,True,False,False,True,True,True,True,True,True,True,False,False,False,False,False,False,False,True,False,True,True,False,True,True,True,True,False,False,False,True,False,False,True,False,True,False,True,False,True,True,False,True,True,False,False,False,False,False,True,False,True,False,False,True,True,False,False,True,False,False,False,False,False,True,False,False,True,True,False,True,False,False,False,False,False,False,False,True,False,True,True,False,True,False,True,False,False,True,False,False,True,False,False,False,False,False,False,True,True,False,False,False,True,True,False,True,True,False,False,False,True,False,False,False,False,True,False,False,False,False,False,True,True,False,True,True,False,True,False,True,False,True,True,True,False,True,False,True,True,True,True,False,True,True,False,True,False,True,True,False,True,True,False,False,True,True,True,True,True,False,False,True,True,False,False,True,True,False,False,True,True,False,True,False,True,False,True,False,True,False,False,False,True,False,True], dtype = "bool")#candidate|11802|(1176,)|const|bool
call_11801 = relay.TupleGetItem(func_8047_call(relay.reshape(const_11802.astype('bool'), [7, 12, 14])), 1)
call_11803 = relay.TupleGetItem(func_8049_call(relay.reshape(const_11802.astype('bool'), [7, 12, 14])), 1)
bop_11829 = relay.multiply(call_11799.astype('uint32'), call_11801.astype('uint32')) # shape=(1040, 1)
bop_11832 = relay.multiply(call_11800.astype('uint32'), call_11803.astype('uint32')) # shape=(1040, 1)
func_7192_call = mod.get_global_var('func_7192')
func_7194_call = mutated_mod.get_global_var('func_7194')
call_11834 = relay.TupleGetItem(func_7192_call(relay.reshape(call_11801.astype('int8'), [])), 0)
call_11835 = relay.TupleGetItem(func_7194_call(relay.reshape(call_11801.astype('int8'), [])), 0)
func_11334_call = mod.get_global_var('func_11334')
func_11335_call = mutated_mod.get_global_var('func_11335')
call_11838 = relay.TupleGetItem(func_11334_call(), 1)
call_11839 = relay.TupleGetItem(func_11335_call(), 1)
output = relay.Tuple([const_11802,bop_11829,call_11834,call_11838,])
output2 = relay.Tuple([const_11802,bop_11832,call_11835,call_11839,])
func_11888 = relay.Function([], output)
mod['func_11888'] = func_11888
mod = relay.transform.InferType()(mod)
output = func_11888()
func_11889 = relay.Function([], output)
mutated_mod['func_11889'] = func_11889
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11888_call = mod.get_global_var('func_11888')
func_11889_call = mutated_mod.get_global_var('func_11889')
call_11894 = relay.TupleGetItem(func_11888_call(), 1)
call_11895 = relay.TupleGetItem(func_11889_call(), 1)
var_11896 = relay.var("var_11896", dtype = "uint32", shape = (1040, 1))#candidate|11896|(1040, 1)|var|uint32
bop_11897 = relay.power(call_11894.astype('float32'), relay.reshape(var_11896.astype('float32'), relay.shape_of(call_11894))) # shape=(1040, 1)
bop_11900 = relay.power(call_11895.astype('float32'), relay.reshape(var_11896.astype('float32'), relay.shape_of(call_11895))) # shape=(1040, 1)
func_11220_call = mod.get_global_var('func_11220')
func_11222_call = mutated_mod.get_global_var('func_11222')
var_11902 = relay.var("var_11902", dtype = "int32", shape = ())#candidate|11902|()|var|int32
call_11901 = relay.TupleGetItem(func_11220_call(relay.reshape(var_11902.astype('int32'), [])), 4)
call_11903 = relay.TupleGetItem(func_11222_call(relay.reshape(var_11902.astype('int32'), [])), 4)
output = relay.Tuple([bop_11897,call_11901,var_11902,])
output2 = relay.Tuple([bop_11900,call_11903,var_11902,])
func_11908 = relay.Function([var_11896,var_11902,], output)
mod['func_11908'] = func_11908
mod = relay.transform.InferType()(mod)
var_11909 = relay.var("var_11909", dtype = "uint32", shape = (1040, 1))#candidate|11909|(1040, 1)|var|uint32
var_11910 = relay.var("var_11910", dtype = "int32", shape = ())#candidate|11910|()|var|int32
output = func_11908(var_11909,var_11910,)
func_11911 = relay.Function([var_11909,var_11910,], output)
mutated_mod['func_11911'] = func_11911
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10907_call = mod.get_global_var('func_10907')
func_10908_call = mutated_mod.get_global_var('func_10908')
call_11990 = relay.TupleGetItem(func_10907_call(), 0)
call_11991 = relay.TupleGetItem(func_10908_call(), 0)
output = call_11990
output2 = call_11991
func_12007 = relay.Function([], output)
mod['func_12007'] = func_12007
mod = relay.transform.InferType()(mod)
mutated_mod['func_12007'] = func_12007
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12007_call = mutated_mod.get_global_var('func_12007')
call_12008 = func_12007_call()
output = call_12008
func_12009 = relay.Function([], output)
mutated_mod['func_12009'] = func_12009
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10699_call = mod.get_global_var('func_10699')
func_10701_call = mutated_mod.get_global_var('func_10701')
call_12066 = relay.TupleGetItem(func_10699_call(), 1)
call_12067 = relay.TupleGetItem(func_10701_call(), 1)
func_8506_call = mod.get_global_var('func_8506')
func_8508_call = mutated_mod.get_global_var('func_8508')
const_12081 = relay.const([2,-8,-6,-6,3,-3,1,-1,-1,-7,-3,-8,10,-8,-6,-6,8,-1,4,-3,7,-9,9,5,2,2,-4,-10,4,7,-1,-8,7,-1,5,8,-1,10,9,-2,1,6,6,10,-4,-10,9,3,-5,9,-10,4,5,3,-3,-7,-9,-10,1,-5,-8,-9,2,5,8,-9,-2,-4,-9,5,2,-4,4,-5,3,-7,4,-10,-10,4,-8,8,8,-10,-9,-6,-4,-9,6,3,-4,2,8,4,4,6,3,-5,6,-7,-10,-5,5,3,9,-1,-8,-1,-3,-4,5,1,6,10,-1,8,-1,-6,-8,-8,-6,-10,-1,3,-5,3,9,-7,-1,-8,3,-6,8,1,-2,2,7,6,-2,2,-6,-7,-10,-9,-3,-5,-2,3,4,5,-10,-8,9,-4,3,-8,4,5,2,-7,10,1,7,-1,7,-9,-2,-5,10,-4,9,5,7,-9,3,-4,-10,-4,-1,7,10,-5,4,-5,-1,-9,-1,4,-4,9,-9,-2,-9,7,1,6,-2,6,-2,10,2,-6,6,2,-4,-9,3,-3,8,-2,8,10,2,-7,9,-10,9,-3,-5,-6,6,-2,-7,-3,9,-3,5,8,-1,2,4,-10,-5,9,10,10,1,6,9,4,-5,6,10,9,-10,-1,10,-7,-4,6,-2,-9,10,-2,5,8,2,-1,-1,4,-1,8,-6,-8,-3,-4,3,-9,-9,2,6,-5,6,-3,-6,10,3,1,-3,10,3,1,7,9,-3,-9,2,9,10,7,-8,5,5,1,-5,3,6,6,-6,-7,-5,-7,-10,7,8,-6,-10,-10,-7,4,3,-1,-3,-2,9,9,-6,3,5,-6,5,-1,-4,-10,3,4,1,-7,-10,5,-8,7,1,2,1,8,1,-1,-2,8,6,5,7,2,-1,-9,1,7,-8,-7,8,-7,9,-5,-10,10,7,3,-7,3,6,-9,10,9,4,8,-5,2,-4,7,-2,-2,-2,2,4,7,7,-6,-9,-6,-5,6,1,6,-5,-1,-1,7,-10,3,4,3,-6,-2,-6,-10,3,2,4,-1,-2,7,7,-5,2,-2,-7,-2,6,10,10,-4,5,-1,6,9,8,9,9,4,-5,-10,3,-7,-5,4,6,10,-6,4,5,-7,-9,-8,-4,10,1,2,-1,7,-6,1,9,-7,4,-4,-5,2,1,10,6,-5,-9,3,7,-4,-8,-9,6,-9,-7,1,-6,-6,5,-2,-8,-8,-7,-5,-8,1,3,5,8,-2,-9,-9,-6,-1,10,1,-4,5,9,-6,-10,-5,7,-4,3,9,1,-6,2,-7,3,-2,-9,6,8,7,1,3,-3,4,-5,10,3,-2,-3,9,8,-3,-10,-7,5,6,-7,5,-6,-7,-5,6,3,3,8,4,-7,5,7,6,5,7,1,-3,4,9,-7,5,2,7,-4,-5,9,-8,3,10,8,-1,1,5,6,-5,8,4,-2,1,4,-6,-8,-1,10,9,9,4,-6,7,4,4,4,3,8,9,-10,9,1,10,-3,7,9,-4,-4,-6,5,-10,7,-2,-5,-1,7,-4,-1,-8,-3,6,10,-8,3,1,-5,4,4,9,6,-4,-9,9,-3,4,-6,10,2,-8,-2,-2,2,9,3,-5,7,2,-10,-7,2,8,2,3,6,1,-2,6,-3,2,-2,-5,-6,6,9,-8,-3,-8,6,2,-3,-1,8,-3,-10,-6,-1,3,7,-5,1,9,4,2,9,2,-7,-10,-10,-5,-7,-5,2,-8,-7,7,-10,3,-4,-4,9,8,8,-2,-1,1,5,-8,3,-6,-3,-8,9,-5,-8,-7,-4,4,3,2,-10,3,10,4,9,6,5,5,7,9,8,4,-3,3,2,-1,10,-10,7,-4,4,-8,-5,-2,-2,8,7,1,-8,-5,2,5,-9,-10,8,3,-3,-2,-6,1,-5,8,-10,-3,3,-1,3,-5,-10,1,1,10,8,2,-6,2,1,7,-8,2,-8,6,-8,8,-8,-5,-4,2,-7,-6,7,-6,7,-2,4,6,-6,3,-7,-3,1,-5,5,7,-2,-4,-10,-7,-6,1,2,3,-2,-5,9,-4,-8,-5,6,4,6,7,2,2,5,-9,-1,-7,9,1,-2,8,4,4,5,6,-7,5,8,-7,-1,2,-9,6,-10,7,10,3,-7,3,-4,3,-3,1,8,-6,4,-2,6,-4,4,10,7,9,-2,-5,-1,-10,-9,-8,6,-7,-4,7,8,8,-3,6,-4,3,7,-6,8,-5,-4,-3,8,5,8,2,5,8,10,7,10,2,10,8,-4,5,7,-2,-8,9,-1,4,10,-4,-9,-6,3,-8,8,2,-10,-1,5,-4,-2,-2,3,-7,-9,5,3,9,-9,-8,-3,-10,9,2,7,-8,-8,-2,-8,5,-1,5,2,-2,1,10,2,8,1,5,3,-9,-4,1,-1,9,-7,-7,-10,-1,-9,-6,-9,2,4,2,-1,-8,1,6,6,-5,2,3,9,5,-5,10,-5,5,-8,-7,-7,3,-6,1,6,6,-6,-4,-5,6,9,-3,6,4,-7,4,-7,2,-10,7,7,-6,4,-1,-8,-8,-10,-1,-9,4,-7,-9,-7,-8,-4,-3,-8,-7,10,3,2,6,10,-2,-4,4,5,4,4,9,6,-10,-4,9,4,1,-1,10,4,-2,-8,-10,8,9,7,-10,1,-9,7,-8,-10,-7,-7,4,-8,-2,1,-3,7,10,9,8,10,-4,5,-5,2,6,6,-1,-6,-5,6,-5,8,-8,3,-9,-5,-7,-5,-7,-4,-6,-3,-9,1,-6,-9,-9,-4,6,-3,2,7,8,4,1,-8,-10,-6,-2,10,4,-6,-6,10,-10,6,10,-1,-3,6,3,-3,-7,-10,5,-6,9,2,6,7,4,8,-5,4,4,-4,-4,-9,-5,1,-9,9,-2,-3,-10,4,4,-7,1,-8,1,-3,10,-9,1,5,8,-9,-2,9,-3,-7,3,7,-7,-10,-9,-5,-4,-2,-4,-6,10,3,8,-5,2,-9,5,-10,10,-1,2,-6,10,-3,6,9,7,-7,5,-5,3,4,7,-8,-6,6,5,-6,1,-1,3,4,-3,4,-2,-5,-2,-10,-4,7,-7,10,4,-9,7,3,-2,-9,-7,-3,1,-3,8,3,-4,-4,5,5,1,-6,5,-8,4,10,-10,10,10,6,9,-1,-2,-5,8,8,-5,-8,2,7,-5,9,1,-9,-5,10,6,6,-6,-9,-3,4,9,-10,9,-9,4,4,-7,8,-9,5,-10,7,4,-10,1,6,-5,-1,4,1,-7,-3,9,6,10,5,-2,7,6,-2,-1,-7,5,-3,9,6,10,-2,-3,-4,10,4,-2,6,8,7,8,-6,-3,9,2,1,7,8,2,2,3,-3,-6,-3,9,-4,3,10,-8,9,6,-1,-3,-10,2,8,9,10,-2,-2,2,-10,5,-2,-10,-4,-3,9,5,-3,-5,-4,-4,-10,9,9,-7,8,-2,-6,3,1,6,-2,-3,-9,7,3,-2,-8,-4,-4,-10,4,5,4,-1,-6,7,9,4,-6,-3,-2,1,-6,1,-7,-4,-2,-4,-9,-3,3,2,8,10,-8,-5,10,2,-3,7,3,5,-4,-4,-4,-7,-7,-9,-6,-8,-5,-5,-9,2,10,-5,5,-10,7,-2,-3,9,10,4,8,10,-5,10,-2,9,4,-6,-2,-7,-2,-3,10,4,2,7,10,-5,4,2,-10,9,2,2,-4,6,-10,3,-1,-9,5,-2,3,1,-3,-3,-1,-6,8,1,-8,7,6,-7,7,9,-2,-6,-8,-2,9,5,-10,6,-10,-1,4,8,10,-8,-1,-8,9,6,2,-10,5,-2,8,-4,-7,-1,-3,-2,2,1,-8,-4,4,6,-2,-8,4,2,9,2,-1,8,2,8,-1,-7,7,-8,5,-8,2,4,7,8,1,6,5,-7,-4,-10,5,8,1,2,1,1,-7,9,-10,-4,1,5,3,-10,1,4,7,6,1,2,-10,-7,-9,-3,-5,1,6,-1,-10,-6,1,4,5,6,2,7,-2,-10,-1,9,9,-2,-6,4,4,-6,1,4,2,1,9,-7,-2,-1,8,-9,-10,4,3,-1,-9,1,8,7,5,-5,7,7,-7,-4,-10,3,-5,-5,6,-5,-4,-4,-4,-2,10,5,-9,7,-3,-2,4,-3,4,-7,-6,3,1,-10,-8,-5,-10,-6,-3,5,-3,-8,-2,-8,-1,-5,7,6,-5,4,9,-4,10,-9,2,-2,9,-4,3,7,4,10,2,-3,2,-2,7,-1,-5,-3,-4,-4,4,-6,-7,-8,5,-4,4,3,5,7,3,-10,-10,-7,-5,-7,-8,-6,6,-6,4,7,9,3,7,-5,-2,1,7,4,1,-3,-4,4,4,10,-1,-5,-9,4,10,8,-4,2,9,3,9,10,4,-5,3,-6,2,-5,-10,7,-8,-10,6,-2,-9,-6,3,-4,-10,-7,6,-9,3,-9,5,-2,3,-5,-3,-3,-4,-3,-4,5,-7,9,6,-2,-4,-3,-1,3,-7,2,-5,-4,-5,-7,-5,-5,7,-8,1,-3,2,-5,-2,-6,7,1,-4,-1,4,-10,-2,-3,-8,-1,10,-8,-1,5,1,2,-1,10,-10,6,8,-4,2,9,-10,-1,-8,5,3,-3,-3,-2,10,2,2,-3,-6,3,6,-10,-6,-7,1,2,-1,-8,-3,-1,-2,-4,-2,7,6,8,3,8,-10,-4,4,2,-2,-2,-1,-2,9,-9,5,-1,-9,-4,-8,4,5,6,3,-7,-10,-1,-5,6,-9,4,-3,6,5,-4,4,10,3,1,6,10,8,-7,-4,-4,9,8,3,6,6,3,-10,-9,9,-1,-7,-10,-4,-9,-3,-3,3,6,5,-5,6,1,9,10,-10,-4,2,4,-5,6,8,-10,-1,6,-2,7,7,3,9,-7,-4,6,6,-4,4,9,-9,2,7,6,-9,7,-4,-3,4,2,2,4,1,-9,7,-9,-6,8,9,5,10,3,2,7,-7,-2,6,-8,-3,1,4,-8,-1,8,-2,-5,4,-6,-3,2,1,-10,1,5,-5,-8,6,-3,-4,-6,-3,9,-10,-4,10,-4,4,-10,-2,-1,-1,9,-4,-6,-1,-5,7,2,2,10,-5,-5,-10,4,-1,-2,5,-4,2,-9,6,9,-9,9,-10,5,5,4,8,9,4,-6,3,-10,-1,9,-5,9,1,7,-8,7,-6,-1,1,-4,3,6,9,10,6,-7,10,-5,5,4,-8,-7,4,-9,-9,-7,-4,-6,-10,-2,6,5,5,-8,-6,4,-3,-8,-10,-9,-1,-9,1,7,4,8,-9,7,-7,-6,7,-8,-10,7,-3,-9,7,9,-7,-1,-6,-2,-2,-2,-6,-3,-8,-5,-7,-10,-1,5,9,7,-10,7,-7,-4,-10,9,7,-10,1,3,10,-8,-4,-10,-9,-9,5,-7,-6,1,-9,3,2,-1,1,-1,-9,1,-4,-6,-9,-1,2,-7,3,6,10,-8,-5,5,4,4,-5,-9,-9,1,2,4,-2,-6,-1,-6,4,-3,-4,-4,2,-6,-6,-7,1,-2,-2,9,-7,8,9,-9,10,1,-8,-4,4,1,-6,4,-8,10,-1,3,-6,-4,-5,-8,-4,-8,-8,7,4,-4,6,-6,2,-4,7,-1,-6,-9,-9,-3,10,7,6,9,-4,10,1,-4,-4,-6,-4,5,1,1,3,-2,7,-10,-5,-5,-4,-9,-1,-7,-1,-7,9,7,7,9,3,-4,3,5,7,-5,5,7,6,10,-9,4,-10,-10,-8,1,-2,-4,-3,1,1,2,-1,-9,-2,-6,-7,-1,-1,7,9,1,-5,6,-7,7,-4,-1,7,-4,10,-2,-10,7,-3,1,2,-3,8,-6,-6,-1,9,5,-4,5,-9,-5,9,8,-8,-3,-10,9,6,5,6,2,9,-3,6,-1,6,-4,9,4,3,-8,-4,3,2,-3,3,6,-3,-7,9,-8,5,10,5,9,-1,-1,4,6,1,6,5,7,3,10,3,6,9,-2,-2,-10,-8,10,6,-9,7,2,7,9,3,-1,7,-6,5,-9,-7,-10,4,8,-7,-9], dtype = "int64")#candidate|12081|(2304,)|const|int64
call_12080 = relay.TupleGetItem(func_8506_call(relay.reshape(const_12081.astype('int64'), [2304,])), 1)
call_12082 = relay.TupleGetItem(func_8508_call(relay.reshape(const_12081.astype('int64'), [2304,])), 1)
uop_12102 = relay.tan(const_12081.astype('float32')) # shape=(2304,)
uop_12111 = relay.atan(call_12080.astype('float64')) # shape=(15, 11, 5)
uop_12113 = relay.atan(call_12082.astype('float64')) # shape=(15, 11, 5)
func_8506_call = mod.get_global_var('func_8506')
func_8508_call = mutated_mod.get_global_var('func_8508')
call_12118 = relay.TupleGetItem(func_8506_call(relay.reshape(uop_12102.astype('int64'), [2304,])), 1)
call_12119 = relay.TupleGetItem(func_8508_call(relay.reshape(uop_12102.astype('int64'), [2304,])), 1)
func_11132_call = mod.get_global_var('func_11132')
func_11135_call = mutated_mod.get_global_var('func_11135')
call_12129 = relay.TupleGetItem(func_11132_call(relay.reshape(call_12118.astype('uint8'), [275, 3])), 5)
call_12130 = relay.TupleGetItem(func_11135_call(relay.reshape(call_12118.astype('uint8'), [275, 3])), 5)
bop_12136 = relay.maximum(uop_12111.astype('float32'), relay.reshape(call_12129.astype('float32'), relay.shape_of(uop_12111))) # shape=(15, 11, 5)
bop_12139 = relay.maximum(uop_12113.astype('float32'), relay.reshape(call_12130.astype('float32'), relay.shape_of(uop_12113))) # shape=(15, 11, 5)
output = relay.Tuple([call_12066,uop_12102,call_12118,bop_12136,])
output2 = relay.Tuple([call_12067,uop_12102,call_12119,bop_12139,])
func_12148 = relay.Function([], output)
mod['func_12148'] = func_12148
mod = relay.transform.InferType()(mod)
mutated_mod['func_12148'] = func_12148
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12148_call = mutated_mod.get_global_var('func_12148')
call_12149 = func_12148_call()
output = call_12149
func_12150 = relay.Function([], output)
mutated_mod['func_12150'] = func_12150
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12246 = relay.var("var_12246", dtype = "float32", shape = (1, 4, 15))#candidate|12246|(1, 4, 15)|var|float32
uop_12247 = relay.atan(var_12246.astype('float32')) # shape=(1, 4, 15)
func_10883_call = mod.get_global_var('func_10883')
func_10885_call = mutated_mod.get_global_var('func_10885')
var_12252 = relay.var("var_12252", dtype = "float32", shape = (16, 10))#candidate|12252|(16, 10)|var|float32
call_12251 = relay.TupleGetItem(func_10883_call(relay.reshape(var_12252.astype('float32'), [1, 16, 10])), 0)
call_12253 = relay.TupleGetItem(func_10885_call(relay.reshape(var_12252.astype('float32'), [1, 16, 10])), 0)
func_8661_call = mod.get_global_var('func_8661')
func_8663_call = mutated_mod.get_global_var('func_8663')
call_12260 = relay.TupleGetItem(func_8661_call(), 0)
call_12261 = relay.TupleGetItem(func_8663_call(), 0)
func_9519_call = mod.get_global_var('func_9519')
func_9521_call = mutated_mod.get_global_var('func_9521')
var_12267 = relay.var("var_12267", dtype = "float64", shape = (108, 2))#candidate|12267|(108, 2)|var|float64
call_12266 = relay.TupleGetItem(func_9519_call(relay.reshape(var_12267.astype('float64'), [9, 8, 3])), 1)
call_12268 = relay.TupleGetItem(func_9521_call(relay.reshape(var_12267.astype('float64'), [9, 8, 3])), 1)
bop_12269 = relay.bitwise_or(var_12246.astype('uint16'), relay.reshape(uop_12247.astype('uint16'), relay.shape_of(var_12246))) # shape=(1, 4, 15)
output = relay.Tuple([call_12251,var_12252,call_12260,call_12266,var_12267,bop_12269,])
output2 = relay.Tuple([call_12253,var_12252,call_12261,call_12268,var_12267,bop_12269,])
F = relay.Function([var_12246,var_12252,var_12267,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_12246,var_12252,var_12267,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

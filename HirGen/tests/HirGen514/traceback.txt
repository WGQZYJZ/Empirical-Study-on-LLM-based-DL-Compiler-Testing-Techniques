==========mod==========
#[version = "0.0.5"]
def @func_3082() -> Tensor[(1, 10, 7), float64] {
  @func_786() /* ty=Tensor[(1, 10, 7), float64] */
}

def @func_5732() -> Tensor[(1, 10, 7), float64] {
  @func_3503() /* ty=Tensor[(1, 10, 7), float64] */
}

def @func_6861(%var_6847: Tensor[(14, 11, 7), bool], %var_6848: Tensor[(14, 11, 7), bool]) -> Tensor[(14, 11, 7), bool] {
  %0 = cast(%var_6848, dtype="bool") /* ty=Tensor[(14, 11, 7), bool] */;
  %1 = shape_of(%var_6847, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2 = cast(%var_6847, dtype="bool") /* ty=Tensor[(14, 11, 7), bool] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%2, %3) /* ty=Tensor[(14, 11, 7), bool] */
}

def @func_3248(%var_3242: Tensor[(8, 10, 7), uint8]) -> Tensor[(8, 10, 7), bool] {
  %4 = @func_978() /* ty=Tensor[(8, 10, 7), uint8] */;
  %5 = cast(%var_3242, dtype="bool") /* ty=Tensor[(8, 10, 7), bool] */;
  %6 = shape_of(%4, dtype="int32") /* ty=Tensor[(3), int32] */;
  %7 = cast(%4, dtype="bool") /* ty=Tensor[(8, 10, 7), bool] */;
  %8 = dyn.reshape(%5, %6, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%7, %8) /* ty=Tensor[(8, 10, 7), bool] */
}

def @func_5598() -> (Tensor[(13, 12, 3), float64],) {
  %9 = @func_3999() /* ty=(Tensor[(13, 12, 3), float32], Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32], Tensor[(1, 10, 7), float64]) */;
  %10 = %9.0;
  %11 = cast(%10, dtype="float64") /* ty=Tensor[(13, 12, 3), float64] */;
  %12 = sqrt(%11) /* ty=Tensor[(13, 12, 3), float64] */;
  (%12,)
}

def @func_8956() -> (Tensor[(16, 10, 7), float64],) {
  %13 = @func_4293() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(16, 10, 7), bool], Tensor[(1120), float64]) */;
  %14 = %13.1;
  %15 = cast(%14, dtype="float64") /* ty=Tensor[(16, 10, 7), float64] */;
  %16 = atanh(%15) /* ty=Tensor[(16, 10, 7), float64] */;
  (%16,)
}

def @func_6179() -> Tensor[(?, 10, 7), bool] {
  %17 = @func_2831() /* ty=Tensor[(1, 10, 7), float64] */;
  %18 = @func_2913() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), uint8]) */;
  %19 = %18.0;
  %20 = cast(%19, dtype="bool") /* ty=Tensor[(1, 10, 7), bool] */;
  %21 = shape_of(%17, dtype="int32") /* ty=Tensor[(3), int32] */;
  %22 = cast(%17, dtype="bool") /* ty=Tensor[(1, 10, 7), bool] */;
  %23 = dyn.reshape(%20, %21, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%22, %23) /* ty=Tensor[(?, 10, 7), bool] */
}

def @func_3572(%var_3558: Tensor[(12, 10, 7), float64]) -> Tensor[(12, 10, 7), int8] {
  %24 = @func_1362() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64]) */;
  %25 = %24.1;
  %26 = cast(%25, dtype="int8") /* ty=Tensor[(1, 10, 7), int8] */;
  %27 = cast(%var_3558, dtype="int8") /* ty=Tensor[(12, 10, 7), int8] */;
  right_shift(%26, %27) /* ty=Tensor[(12, 10, 7), int8] */
}

def @func_8290() -> (Tensor[(1, 10, 7), float64],) {
  %28 = @func_5352() /* ty=Tensor[(1, 10, 7), float64] */;
  (%28,)
}

def @func_4879(%var_4870: Tensor[(35, 4), float64]) -> (Tensor[(1, 10, 7), float64], Tensor[(2, 10, 7), int8], Tensor[(35, 4), float64], Tensor[(768), int64]) {
  %29 = @func_3940() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %30 = cast(%var_4870, dtype="float64") /* ty=Tensor[(35, 4), float64] */;
  %31 = cast(meta[relay.Constant][0] /* ty=Tensor[(768), int64] */, dtype="int64") /* ty=Tensor[(768), int64] */;
  %32 = reshape(%30, newshape=[2, 10, 7]) /* ty=Tensor[(2, 10, 7), float64] */;
  %33 = reshape(%31, newshape=[768]) /* ty=Tensor[(768), int64] */;
  %34 = @func_3547(%32, %33) /* ty=(Tensor[(2, 10, 7), int8], Tensor[(1, 10, 7), float64], Tensor[(768), int64]) */;
  %35 = %29.0;
  %36 = %34.0;
  (%35, %36, %var_4870, meta[relay.Constant][0] /* ty=Tensor[(768), int64] */)
}

def @func_3940() -> (Tensor[(1, 10, 7), float64],) {
  %37 = @func_3796() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %38 = %37.0;
  (%38,)
}

def @func_3216() -> (Tensor[(13, 12, 3), float32],) {
  %39 = @func_2816() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(1120), float64]) */;
  %40 = %39.2;
  %41 = @func_2345() /* ty=(Tensor[(13, 12, 3), float32],) */;
  %42 = %41.0;
  %43 = cast(%42, dtype="float32") /* ty=Tensor[(13, 12, 3), float32] */;
  %44 = shape_of(%40, dtype="int32") /* ty=Tensor[(3), int32] */;
  %45 = cast(%40, dtype="float32") /* ty=Tensor[(13, 12, 3), float32] */;
  %46 = dyn.reshape(%43, %44, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %47 = floor_divide(%45, %46) /* ty=Tensor[(13, 12, 3), float32] */;
  (%47,)
}

def @func_7858() -> Tensor[(8, 10, 7), uint8] {
  %48 = @func_7240() /* ty=(Tensor[(8, 10, 7), uint8],) */;
  %48.0
}

def @func_10663() -> (Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64]) {
  %49 = @func_3683() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %50 = @func_3615() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %51 = %49.0;
  %52 = %50.0;
  (%51, %52)
}

def @func_1228(%var_1187: bool, %var_1188: Tensor[(6, 6, 6), bool]) -> (Tensor[(6, 6, 6), bool], Tensor[(16, 10, 7), bool], Tensor[(1120), float64], Tensor[(8, 10, 7), bool], Tensor[(280, 2), uint8]) {
  %53 = cast(%var_1187, dtype="bool") /* ty=bool */;
  %54 = cast(%var_1188, dtype="bool") /* ty=Tensor[(6, 6, 6), bool] */;
  %55 = cast(meta[relay.Constant][1] /* ty=Tensor[(1120), float64] */, dtype="float64") /* ty=Tensor[(1120), float64] */;
  %56 = reshape(%55, newshape=[16, 10, 7]) /* ty=Tensor[(16, 10, 7), float64] */;
  %57 = cast(meta[relay.Constant][2] /* ty=Tensor[(280, 2), uint8] */, dtype="uint8") /* ty=Tensor[(280, 2), uint8] */;
  %58 = reshape(%57, newshape=[8, 10, 7]) /* ty=Tensor[(8, 10, 7), uint8] */;
  %59 = @func_1027(%58) /* ty=(Tensor[(8, 10, 7), bool],) */;
  %60 = logical_or(%53, %54) /* ty=Tensor[(6, 6, 6), bool] */;
  %61 = @func_893(%56) /* ty=Tensor[(16, 10, 7), bool] */;
  %62 = %59.0;
  (%60, %61, meta[relay.Constant][1] /* ty=Tensor[(1120), float64] */, %62, meta[relay.Constant][2] /* ty=Tensor[(280, 2), uint8] */)
}

def @func_9254() -> (Tensor[(1, 10, 7), float64],) {
  %63 = @func_1757() /* ty=Tensor[(1, 10, 7), float64] */;
  (%63,)
}

def @func_1653() -> (Tensor[(8, 10, 7), uint8],) {
  %64 = @func_1488() /* ty=Tensor[(8, 10, 7), uint8] */;
  (%64,)
}

def @func_2686(%var_2649: Tensor[(7, 12, 15), int8]) -> (Tensor[(7, 12, 15), uint8], Tensor[(1, 10, 7), float64], Tensor[(768), int64]) {
  %65 = cast(meta[relay.Constant][3] /* ty=Tensor[(7, 12, 15), int8] */, dtype="int8") /* ty=Tensor[(7, 12, 15), int8] */;
  %66 = shape_of(%var_2649, dtype="int32") /* ty=Tensor[(3), int32] */;
  %67 = cast(%var_2649, dtype="int8") /* ty=Tensor[(7, 12, 15), int8] */;
  %68 = dyn.reshape(%65, %66, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %69 = subtract(%67, %68) /* ty=Tensor[(7, 12, 15), int8] */;
  %70 = cast(%69, dtype="uint8") /* ty=Tensor[(7, 12, 15), uint8] */;
  %71 = shape_of(%var_2649, dtype="int32") /* ty=Tensor[(3), int32] */;
  %72 = cast(%var_2649, dtype="uint8") /* ty=Tensor[(7, 12, 15), uint8] */;
  %73 = dyn.reshape(%70, %71, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %74 = cast(meta[relay.Constant][4] /* ty=Tensor[(768), int64] */, dtype="int64") /* ty=Tensor[(768), int64] */;
  %75 = reshape(%74, newshape=[12, 8, 8]) /* ty=Tensor[(12, 8, 8), int64] */;
  %76 = @func_1958(%75) /* ty=(Tensor[(12, 8, 8), bool], Tensor[(8, 10, 7), float64], Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32]) */;
  %77 = left_shift(%72, %73) /* ty=Tensor[(7, 12, 15), uint8] */;
  %78 = %76.4;
  (%77, %78, meta[relay.Constant][4] /* ty=Tensor[(768), int64] */)
}

def @func_2560(%var_2539: Tensor[(10, 1, 7), uint8], %var_2540: Tensor[(10, 9, 7), uint8], %var_2545: Tensor[(10, 9, 7), bool]) -> (Tensor[(10, 9, 7), float64], Tensor[(1, 10, 7), float64]) {
  %79 = cast(%var_2539, dtype="bool") /* ty=Tensor[(10, 1, 7), bool] */;
  %80 = cast(%var_2540, dtype="bool") /* ty=Tensor[(10, 9, 7), bool] */;
  %81 = greater(%79, %80) /* ty=Tensor[(10, 9, 7), bool] */;
  %82 = cast(%var_2545, dtype="float64") /* ty=Tensor[(10, 9, 7), float64] */;
  %83 = shape_of(%81, dtype="int32") /* ty=Tensor[(3), int32] */;
  %84 = cast(%81, dtype="float64") /* ty=Tensor[(10, 9, 7), float64] */;
  %85 = dyn.reshape(%82, %83, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %86 = @func_810() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %87 = power(%84, %85) /* ty=Tensor[(10, 9, 7), float64] */;
  %88 = %86.0;
  (%87, %88)
}

def @func_9950() -> Tensor[(1, 10, 7), float64] {
  %89 = @func_3615() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %89.0
}

def @func_5129(%var_5078: Tensor[(11, 10, 7), float64], %var_5105: Tensor[(12, 18), bool], %var_5112: Tensor[(5, 10, 7), float64]) -> (Tensor[(11, 10, 7), float32], Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32], Tensor[(11, 10, 7), bool], Tensor[(6, 6, 6), bool], bool, Tensor[(12, 18), bool], Tensor[(5, 10, 7), float32]) {
  %90 = @func_3313() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %91 = %90.0;
  %92 = cast(%91, dtype="float32") /* ty=Tensor[(1, 10, 7), float32] */;
  %93 = cast(%var_5078, dtype="float32") /* ty=Tensor[(11, 10, 7), float32] */;
  %94 = @func_4861() /* ty=(Tensor[(3, 11, 12), uint16], Tensor[(1, 10, 7), float64]) */;
  %95 = @func_2345() /* ty=(Tensor[(13, 12, 3), float32],) */;
  %96 = cast(%91, dtype="bool") /* ty=Tensor[(1, 10, 7), bool] */;
  %97 = cast(%var_5078, dtype="bool") /* ty=Tensor[(11, 10, 7), bool] */;
  %98 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %99 = cast(%var_5105, dtype="bool") /* ty=Tensor[(12, 18), bool] */;
  %100 = reshape(%98, newshape=[]) /* ty=bool */;
  %101 = reshape(%99, newshape=[6, 6, 6]) /* ty=Tensor[(6, 6, 6), bool] */;
  %102 = @func_1228(%100, %101) /* ty=(Tensor[(6, 6, 6), bool], Tensor[(16, 10, 7), bool], Tensor[(1120), float64], Tensor[(8, 10, 7), bool], Tensor[(280, 2), uint8]) */;
  %103 = cast(%91, dtype="float32") /* ty=Tensor[(1, 10, 7), float32] */;
  %104 = cast(%var_5112, dtype="float32") /* ty=Tensor[(5, 10, 7), float32] */;
  %105 = floor_mod(%92, %93) /* ty=Tensor[(11, 10, 7), float32] */;
  %106 = %94.1;
  %107 = %95.0;
  %108 = greater_equal(%96, %97) /* ty=Tensor[(11, 10, 7), bool] */;
  %109 = %102.0;
  %110 = floor_mod(%103, %104) /* ty=Tensor[(5, 10, 7), float32] */;
  (%105, %106, %107, %108, %109, True /* ty=bool */, %var_5105, %110)
}

def @func_7449() -> Tensor[(13, 12, 3), bool] {
  %111 = @func_4932() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32], Tensor[(1, 10, 7), float64]) */;
  %112 = %111.1;
  %113 = cast(meta[relay.Constant][5] /* ty=Tensor[(13, 12, 3), float32] */, dtype="int16") /* ty=Tensor[(13, 12, 3), int16] */;
  %114 = shape_of(%112, dtype="int32") /* ty=Tensor[(3), int32] */;
  %115 = cast(%112, dtype="int16") /* ty=Tensor[(13, 12, 3), int16] */;
  %116 = dyn.reshape(%113, %114, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %117 = bitwise_xor(%115, %116) /* ty=Tensor[(13, 12, 3), int16] */;
  %118 = cast(%117, dtype="bool") /* ty=Tensor[(13, 12, 3), bool] */;
  %119 = shape_of(%112, dtype="int32") /* ty=Tensor[(3), int32] */;
  %120 = cast(%112, dtype="bool") /* ty=Tensor[(13, 12, 3), bool] */;
  %121 = dyn.reshape(%118, %119, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%120, %121) /* ty=Tensor[(13, 12, 3), bool] */
}

def @func_5646() -> (Tensor[(1, 10, 7), float64], Tensor[(?, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(3, 10, 7), int32]) {
  %122 = @func_1813() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %123 = @func_5431() /* ty=(Tensor[(?, 10, 7), float64], Tensor[(1, 10, 7), float64]) */;
  %124 = @func_4932() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32], Tensor[(1, 10, 7), float64]) */;
  %125 = %124.0;
  %126 = cast(%125, dtype="int32") /* ty=Tensor[(1, 10, 7), int32] */;
  %127 = cast(meta[relay.Constant][6] /* ty=Tensor[(3, 10, 7), float64] */, dtype="int32") /* ty=Tensor[(3, 10, 7), int32] */;
  %128 = %122.0;
  %129 = %123.0;
  %130 = @func_4654() /* ty=Tensor[(1, 10, 7), float64] */;
  %131 = minimum(%126, %127) /* ty=Tensor[(3, 10, 7), int32] */;
  (%128, %129, %130, %131)
}

def @func_4139() -> (Tensor[(1, 10, 7), float64],) {
  %132 = @func_3940() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %133 = %132.0;
  (%133,)
}

def @func_2584(%var_2577: Tensor[(9, 3, 12), float64]) -> (Tensor[(9, 3, 12), float64], Tensor[(1, 10, 7), float64]) {
  %134 = cast(%var_2577, dtype="float64") /* ty=Tensor[(9, 3, 12), float64] */;
  %135 = @func_1362() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64]) */;
  %136 = rsqrt(%134) /* ty=Tensor[(9, 3, 12), float64] */;
  %137 = %135.1;
  (%136, %137)
}

def @func_7210(%var_7203: Tensor[(780), int16], %var_7205: Tensor[(768), int64]) -> (Tensor[(1, 10, 7), float64], Tensor[(?, 10, 7), bool], Tensor[(25, 6), float64], Tensor[(780), int16], Tensor[(150), float64], Tensor[(768), int64]) {
  %138 = @func_3940() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %139 = @func_3796() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %140 = %139.0;
  %141 = @func_6653() /* ty=Tensor[(?, 10, 7), uint32] */;
  %142 = cast(%141, dtype="bool") /* ty=Tensor[(?, 10, 7), bool] */;
  %143 = shape_of(%140, dtype="int32") /* ty=Tensor[(3), int32] */;
  %144 = cast(%140, dtype="bool") /* ty=Tensor[(1, 10, 7), bool] */;
  %145 = dyn.reshape(%142, %143, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %146 = cast(%var_7203, dtype="int16") /* ty=Tensor[(780), int16] */;
  %147 = cast(%var_7203, dtype="int16") /* ty=Tensor[(780), int16] */;
  %148 = cast(meta[relay.Constant][7] /* ty=Tensor[(150), float64] */, dtype="float64") /* ty=Tensor[(150), float64] */;
  %149 = cast(%var_7205, dtype="int64") /* ty=Tensor[(768), int64] */;
  %150 = reshape(%146, newshape=[13, 15, 4]) /* ty=Tensor[(13, 15, 4), int16] */;
  %151 = reshape(%147, newshape=[13, 15, 4]) /* ty=Tensor[(13, 15, 4), int16] */;
  %152 = reshape(%148, newshape=[25, 6]) /* ty=Tensor[(25, 6), float64] */;
  %153 = reshape(%149, newshape=[768]) /* ty=Tensor[(768), int64] */;
  %154 = @func_7020(%150, %151, %152, %153) /* ty=(Tensor[(13, 15, 4), bool], Tensor[(13, 12, 3), float64], Tensor[(1, 10, 7), float64], Tensor[(324), float64], Tensor[(5, 15, 2), float64], Tensor[(25, 6), float64], Tensor[(1, 10, 7), float64], Tensor[(768), int64], Tensor[(768), int64]) */;
  %155 = %138.0;
  %156 = logical_and(%144, %145) /* ty=Tensor[(?, 10, 7), bool] */;
  %157 = %154.5;
  (%155, %156, %157, %var_7203, meta[relay.Constant][7] /* ty=Tensor[(150), float64] */, %var_7205)
}

def @func_4553(%var_4528: Tensor[(1, 2, 4), int8]) -> Tensor[(2, 2, 4), bool] {
  %158 = cast(%var_4528, dtype="bool") /* ty=Tensor[(1, 2, 4), bool] */;
  %159 = cast(meta[relay.Constant][8] /* ty=Tensor[(2, 2, 4), int8] */, dtype="bool") /* ty=Tensor[(2, 2, 4), bool] */;
  greater(%158, %159) /* ty=Tensor[(2, 2, 4), bool] */
}

def @func_8508() -> (Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(1260), int8], Tensor[(280, 4), float64], Tensor[(1404), float32], Tensor[(1120), float64], Tensor[(1, 10, 7), float64]) {
  %160 = @func_7541() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %161 = @func_2816() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(1120), float64]) */;
  %162 = cast(meta[relay.Constant][9] /* ty=Tensor[(1260), int8] */, dtype="int8") /* ty=Tensor[(1260), int8] */;
  %163 = reshape(%162, newshape=[7, 12, 15]) /* ty=Tensor[(7, 12, 15), int8] */;
  %164 = @func_2686(%163) /* ty=(Tensor[(7, 12, 15), uint8], Tensor[(1, 10, 7), float64], Tensor[(768), int64]) */;
  %165 = cast(meta[relay.Constant][10] /* ty=Tensor[(1404), float32] */, dtype="float32") /* ty=Tensor[(1404), float32] */;
  %166 = cast(meta[relay.Constant][11] /* ty=Tensor[(1120), float64] */, dtype="float64") /* ty=Tensor[(1120), float64] */;
  %167 = reshape(%165, newshape=[9, 13, 12]) /* ty=Tensor[(9, 13, 12), float32] */;
  %168 = reshape(%166, newshape=[280, 4]) /* ty=Tensor[(280, 4), float64] */;
  %169 = @func_4454(%167, %168) /* ty=(Tensor[(9, 13, 12), float32], Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32], Tensor[(468, 1), float64], Tensor[(280, 4), float64]) */;
  %170 = %160.0;
  %171 = %161.4;
  %172 = %164.1;
  %173 = %169.4;
  %174 = @func_7561() /* ty=Tensor[(1, 10, 7), float64] */;
  (%170, %171, %172, meta[relay.Constant][9] /* ty=Tensor[(1260), int8] */, %173, meta[relay.Constant][10] /* ty=Tensor[(1404), float32] */, meta[relay.Constant][11] /* ty=Tensor[(1120), float64] */, %174)
}

def @func_4308() -> Tensor[(1, 10, 7), float64] {
  %175 = @func_1392() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64]) */;
  %175.1
}

def @func_10393(%var_10348: Tensor[(11, 10, 7), float64]) -> (Tensor[(1, 10, 7), float64], Tensor[(11, 10, 7), bool], Tensor[(11, 10, 7), uint64], Tensor[(8, 10, 7), float64]) {
  %176 = @func_5901() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %177 = @func_5431() /* ty=(Tensor[(?, 10, 7), float64], Tensor[(1, 10, 7), float64]) */;
  %178 = %177.1;
  %179 = cast(%178, dtype="bool") /* ty=Tensor[(1, 10, 7), bool] */;
  %180 = cast(%var_10348, dtype="bool") /* ty=Tensor[(11, 10, 7), bool] */;
  %181 = cast(%178, dtype="uint64") /* ty=Tensor[(1, 10, 7), uint64] */;
  %182 = cast(%var_10348, dtype="uint64") /* ty=Tensor[(11, 10, 7), uint64] */;
  %183 = @func_3341() /* ty=(Tensor[(8, 10, 7), float64],) */;
  %184 = %176.0;
  %185 = less(%179, %180) /* ty=Tensor[(11, 10, 7), bool] */;
  %186 = left_shift(%181, %182) /* ty=Tensor[(11, 10, 7), uint64] */;
  %187 = %183.0;
  (%184, %185, %186, %187)
}

def @func_6005(%var_5975: Tensor[(2, 560), float64]) -> (Tensor[(1, 10, 7), float64], Tensor[(2, 560), bool]) {
  %188 = cast(%var_5975, dtype="float64") /* ty=Tensor[(2, 560), float64] */;
  %189 = reshape(%188, newshape=[16, 10, 7]) /* ty=Tensor[(16, 10, 7), float64] */;
  %190 = @func_893(%189) /* ty=Tensor[(16, 10, 7), bool] */;
  %191 = cast(%190, dtype="bool") /* ty=Tensor[(16, 10, 7), bool] */;
  %192 = shape_of(%var_5975, dtype="int32") /* ty=Tensor[(2), int32] */;
  %193 = cast(%var_5975, dtype="bool") /* ty=Tensor[(2, 560), bool] */;
  %194 = dyn.reshape(%191, %192, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %195 = @func_4654() /* ty=Tensor[(1, 10, 7), float64] */;
  %196 = greater(%193, %194) /* ty=Tensor[(2, 560), bool] */;
  (%195, %196)
}

def @func_3341() -> (Tensor[(8, 10, 7), float64],) {
  %197 = @func_1653() /* ty=(Tensor[(8, 10, 7), uint8],) */;
  %198 = %197.0;
  %199 = cast(%198, dtype="float64") /* ty=Tensor[(8, 10, 7), float64] */;
  %200 = acosh(%199) /* ty=Tensor[(8, 10, 7), float64] */;
  (%200,)
}

def @func_6056() -> (Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32]) {
  %201 = @func_3615() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %202 = @func_1184() /* ty=(Tensor[(8, 10, 7), uint8], Tensor[(13, 12, 3), float32], Tensor[(468), float64], Tensor[(1120), float64]) */;
  %203 = %201.0;
  %204 = %202.1;
  (%203, %204)
}

def @func_7904(%var_7895: Tensor[(2, 4, 12), float64]) -> (Tensor[(2, 4, 12), int32],) {
  %205 = cast(%var_7895, dtype="float64") /* ty=Tensor[(2, 4, 12), float64] */;
  %206 = log10(%205) /* ty=Tensor[(2, 4, 12), float64] */;
  %207 = cast(%var_7895, dtype="int32") /* ty=Tensor[(2, 4, 12), int32] */;
  %208 = shape_of(%206, dtype="int32") /* ty=Tensor[(3), int32] */;
  %209 = cast(%206, dtype="int32") /* ty=Tensor[(2, 4, 12), int32] */;
  %210 = dyn.reshape(%207, %208, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %211 = subtract(%209, %210) /* ty=Tensor[(2, 4, 12), int32] */;
  (%211,)
}

def @func_6122() -> (Tensor[(1, 10, 7), float64],) {
  %212 = @func_3067() /* ty=Tensor[(1, 10, 7), float64] */;
  (%212,)
}

def @func_2380() -> Tensor[(1, 10, 7), float64] {
  @func_1757() /* ty=Tensor[(1, 10, 7), float64] */
}

def @func_6936() -> (Tensor[(1, 10, 7), float64],) {
  %213 = @func_5732() /* ty=Tensor[(1, 10, 7), float64] */;
  (%213,)
}

def @func_4427(%var_4420: Tensor[(15, 16, 10), int8], %var_4421: Tensor[(15, 16, 10), int8]) -> (Tensor[(15, 16, 10), bool],) {
  %214 = cast(%var_4421, dtype="bool") /* ty=Tensor[(15, 16, 10), bool] */;
  %215 = shape_of(%var_4420, dtype="int32") /* ty=Tensor[(3), int32] */;
  %216 = cast(%var_4420, dtype="bool") /* ty=Tensor[(15, 16, 10), bool] */;
  %217 = dyn.reshape(%214, %215, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %218 = equal(%216, %217) /* ty=Tensor[(15, 16, 10), bool] */;
  (%218,)
}

def @func_4589(%var_4583: Tensor[(3, 10, 7), float64]) -> (Tensor[(3, 10, 7), int16],) {
  %219 = @func_1589() /* ty=(Tensor[(13, 12, 3), int64], Tensor[(1, 10, 7), float64]) */;
  %220 = %219.1;
  %221 = cast(%220, dtype="int16") /* ty=Tensor[(1, 10, 7), int16] */;
  %222 = cast(%var_4583, dtype="int16") /* ty=Tensor[(3, 10, 7), int16] */;
  %223 = bitwise_and(%221, %222) /* ty=Tensor[(3, 10, 7), int16] */;
  (%223,)
}

def @func_5891(%var_5874: Tensor[(2, 11, 10), float64]) -> (Tensor[(2, 11, 10), float64], Tensor[(1, 10, 7), float64]) {
  %224 = cast(%var_5874, dtype="float64") /* ty=Tensor[(2, 11, 10), float64] */;
  %225 = @func_2816() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(1120), float64]) */;
  %226 = log(%224) /* ty=Tensor[(2, 11, 10), float64] */;
  %227 = %225.3;
  (%226, %227)
}

def @func_8582() -> (Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), float32]) {
  %228 = @func_4293() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(16, 10, 7), bool], Tensor[(1120), float64]) */;
  %229 = @func_7891() /* ty=(Tensor[(8, 10, 7), float32],) */;
  %230 = %228.0;
  %231 = %229.0;
  (%230, %231)
}

def @func_7240() -> (Tensor[(8, 10, 7), uint8],) {
  %232 = @func_1488() /* ty=Tensor[(8, 10, 7), uint8] */;
  (%232,)
}

def @func_2121() -> Tensor[(1, 10, 7), float64] {
  %233 = @func_1392() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64]) */;
  %233.0
}

def @func_1457() -> (Tensor[(1, 10, 7), float64],) {
  %234 = @func_810() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %235 = %234.0;
  (%235,)
}

def @func_7561() -> Tensor[(1, 10, 7), float64] {
  %236 = @func_7496() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %236.0
}

def @func_1027(%var_1018: Tensor[(8, 10, 7), uint8]) -> (Tensor[(8, 10, 7), bool],) {
  %237 = @func_978() /* ty=Tensor[(8, 10, 7), uint8] */;
  %238 = cast(%var_1018, dtype="bool") /* ty=Tensor[(8, 10, 7), bool] */;
  %239 = shape_of(%237, dtype="int32") /* ty=Tensor[(3), int32] */;
  %240 = cast(%237, dtype="bool") /* ty=Tensor[(8, 10, 7), bool] */;
  %241 = dyn.reshape(%238, %239, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %242 = less_equal(%240, %241) /* ty=Tensor[(8, 10, 7), bool] */;
  (%242,)
}

def @func_3313() -> (Tensor[(1, 10, 7), float64],) {
  %243 = @func_1362() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64]) */;
  %244 = %243.1;
  (%244,)
}

def @func_3924() -> Tensor[(3, 11, 12), uint16] {
  %245 = cast(meta[relay.Constant][12] /* ty=Tensor[(3, 11, 12), float32] */, dtype="float32") /* ty=Tensor[(3, 11, 12), float32] */;
  %246 = log(%245) /* ty=Tensor[(3, 11, 12), float32] */;
  %247 = cast(meta[relay.Constant][13] /* ty=Tensor[(3, 11, 12), float32] */, dtype="uint16") /* ty=Tensor[(3, 11, 12), uint16] */;
  %248 = shape_of(%246, dtype="int32") /* ty=Tensor[(3), int32] */;
  %249 = cast(%246, dtype="uint16") /* ty=Tensor[(3, 11, 12), uint16] */;
  %250 = dyn.reshape(%247, %248, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  right_shift(%249, %250) /* ty=Tensor[(3, 11, 12), uint16] */
}

def @func_3067() -> Tensor[(1, 10, 7), float64] {
  %251 = @func_1457() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %251.0
}

def @func_7036() -> (Tensor[(1, 10, 7), float64],) {
  %252 = @func_1813() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %253 = %252.0;
  (%253,)
}

def @func_2030() -> Tensor[(1, 10, 7), float64] {
  %254 = @func_1457() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %254.0
}

def @func_7711() -> (Tensor[(16, 10, 7), bool], Tensor[(16, 10, 7), bool]) {
  %255 = @func_4293() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(16, 10, 7), bool], Tensor[(1120), float64]) */;
  %256 = %255.1;
  %257 = cast(%256, dtype="float64") /* ty=Tensor[(16, 10, 7), float64] */;
  %258 = reshape(%257, newshape=[16, 10, 7]) /* ty=Tensor[(16, 10, 7), float64] */;
  %259 = @func_893(%258) /* ty=Tensor[(16, 10, 7), bool] */;
  (%256, %259)
}

def @func_3503() -> Tensor[(1, 10, 7), float64] {
  %260 = @func_1682() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64]) */;
  %260.1
}

def @func_5441() -> (Tensor[(1, 10, 7), float64],) {
  %261 = @func_786() /* ty=Tensor[(1, 10, 7), float64] */;
  (%261,)
}

def @func_5016(%var_4993: Tensor[(15, 3, 14), bool]) -> (Tensor[(15, 3, 14), bool], Tensor[(15, 3, 14), float64]) {
  %262 = cast(meta[relay.Constant][14] /* ty=Tensor[(15, 3, 14), bool] */, dtype="bool") /* ty=Tensor[(15, 3, 14), bool] */;
  %263 = shape_of(%var_4993, dtype="int32") /* ty=Tensor[(3), int32] */;
  %264 = cast(%var_4993, dtype="bool") /* ty=Tensor[(15, 3, 14), bool] */;
  %265 = dyn.reshape(%262, %263, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %266 = cast(meta[relay.Constant][14] /* ty=Tensor[(15, 3, 14), bool] */, dtype="float64") /* ty=Tensor[(15, 3, 14), float64] */;
  %267 = logical_and(%264, %265) /* ty=Tensor[(15, 3, 14), bool] */;
  %268 = exp(%266) /* ty=Tensor[(15, 3, 14), float64] */;
  (%267, %268)
}

def @func_5224() -> (Tensor[(8, 10, 7), float64],) {
  %269 = @func_978() /* ty=Tensor[(8, 10, 7), uint8] */;
  %270 = cast(%269, dtype="float64") /* ty=Tensor[(8, 10, 7), float64] */;
  %271 = atan(%270) /* ty=Tensor[(8, 10, 7), float64] */;
  (%271,)
}

def @func_6587() -> Tensor[(8, 10, 7), float32] {
  %272 = @func_5183() /* ty=(Tensor[(8, 10, 7), float32],) */;
  %273 = %272.0;
  %274 = cast(%273, dtype="float32") /* ty=Tensor[(8, 10, 7), float32] */;
  asin(%274) /* ty=Tensor[(8, 10, 7), float32] */
}

def @func_978() -> Tensor[(8, 10, 7), uint8] {
  %275 = @func_786() /* ty=Tensor[(1, 10, 7), float64] */;
  %276 = cast(%275, dtype="uint8") /* ty=Tensor[(1, 10, 7), uint8] */;
  %277 = cast(meta[relay.Constant][15] /* ty=Tensor[(8, 10, 7), float64] */, dtype="uint8") /* ty=Tensor[(8, 10, 7), uint8] */;
  bitwise_or(%276, %277) /* ty=Tensor[(8, 10, 7), uint8] */
}

def @func_8860() -> (Tensor[(1, 10, 7), float64],) {
  %278 = @func_786() /* ty=Tensor[(1, 10, 7), float64] */;
  (%278,)
}

def @func_4932() -> (Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32], Tensor[(1, 10, 7), float64]) {
  %279 = @func_3999() /* ty=(Tensor[(13, 12, 3), float32], Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32], Tensor[(1, 10, 7), float64]) */;
  %280 = @func_2143() /* ty=(Tensor[(13, 12, 3), float32],) */;
  %281 = %279.3;
  %282 = %280.0;
  %283 = @func_3067() /* ty=Tensor[(1, 10, 7), float64] */;
  (%281, %282, %283)
}

def @func_5784() -> Tensor[(?, 10, 7), float64] {
  %284 = @func_5431() /* ty=(Tensor[(?, 10, 7), float64], Tensor[(1, 10, 7), float64]) */;
  %284.0
}

def @func_3122(%var_3107: Tensor[(770), float32]) -> (Tensor[(1120), float32], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), uint8], Tensor[(770), float32]) {
  %285 = @func_1184() /* ty=(Tensor[(8, 10, 7), uint8], Tensor[(13, 12, 3), float32], Tensor[(468), float64], Tensor[(1120), float64]) */;
  %286 = %285.3;
  %287 = cast(%286, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %288 = cast(%var_3107, dtype="float32") /* ty=Tensor[(770), float32] */;
  %289 = reshape(%288, newshape=[11, 10, 7]) /* ty=Tensor[(11, 10, 7), float32] */;
  %290 = @func_1725(%289) /* ty=(Tensor[(11, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64]) */;
  %291 = log10(%287) /* ty=Tensor[(1120), float32] */;
  %292 = @func_1757() /* ty=Tensor[(1, 10, 7), float64] */;
  %293 = @func_2030() /* ty=Tensor[(1, 10, 7), float64] */;
  %294 = %290.2;
  (%291, %292, %293, %294, %var_3107)
}

def @func_1813() -> (Tensor[(1, 10, 7), float64],) {
  %295 = @func_1457() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %296 = %295.0;
  (%296,)
}

def @func_9821(%var_9777: Tensor[(54, 6), float64]) -> (Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), bool], Tensor[(1, 10, 7), float64], Tensor[(560), float32], Tensor[(1, 10, 7), float64], Tensor[(54, 6), float32], Tensor[(15, 10, 7), uint32]) {
  %297 = @func_3603() /* ty=(Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64]) */;
  %298 = cast(meta[relay.Constant][16] /* ty=Tensor[(560), float32] */, dtype="float32") /* ty=Tensor[(560), float32] */;
  %299 = reshape(%298, newshape=[8, 10, 7]) /* ty=Tensor[(8, 10, 7), float32] */;
  %300 = @func_7660(%299) /* ty=(Tensor[(8, 10, 7), uint8], Tensor[(8, 10, 7), int16], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32]) */;
  %301 = cast(%var_9777, dtype="float64") /* ty=Tensor[(54, 6), float64] */;
  %302 = reshape(%301, newshape=[9, 3, 12]) /* ty=Tensor[(9, 3, 12), float64] */;
  %303 = @func_2584(%302) /* ty=(Tensor[(9, 3, 12), float64], Tensor[(1, 10, 7), float64]) */;
  %304 = cast(%var_9777, dtype="float32") /* ty=Tensor[(54, 6), float32] */;
  %305 = %297.1;
  %306 = @func_7449() /* ty=Tensor[(13, 12, 3), bool] */;
  %307 = %300.2;
  %308 = %303.1;
  %309 = log10(%304) /* ty=Tensor[(54, 6), float32] */;
  %310 = @func_5072() /* ty=Tensor[(15, 10, 7), uint32] */;
  (%305, %306, %307, meta[relay.Constant][16] /* ty=Tensor[(560), float32] */, %308, %309, %310)
}

def @func_1725(%var_1692: Tensor[(11, 10, 7), float32]) -> (Tensor[(11, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64]) {
  %311 = @func_810() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %312 = %311.0;
  %313 = cast(%312, dtype="float32") /* ty=Tensor[(1, 10, 7), float32] */;
  %314 = atanh(%313) /* ty=Tensor[(1, 10, 7), float32] */;
  %315 = cast(%314, dtype="float64") /* ty=Tensor[(1, 10, 7), float64] */;
  %316 = cast(%var_1692, dtype="float64") /* ty=Tensor[(11, 10, 7), float64] */;
  %317 = @func_1362() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64]) */;
  %318 = @func_1653() /* ty=(Tensor[(8, 10, 7), uint8],) */;
  %319 = power(%315, %316) /* ty=Tensor[(11, 10, 7), float64] */;
  %320 = %317.0;
  %321 = %318.0;
  %322 = @func_786() /* ty=Tensor[(1, 10, 7), float64] */;
  (%319, %320, %321, %322)
}

def @func_470(%var_463: Tensor[(8, 11, 4), float32]) -> (Tensor[(8, 11, 4), float32],) {
  %323 = cast(%var_463, dtype="float32") /* ty=Tensor[(8, 11, 4), float32] */;
  %324 = sin(%323) /* ty=Tensor[(8, 11, 4), float32] */;
  (%324,)
}

def @func_7891() -> (Tensor[(8, 10, 7), float32],) {
  %325 = @func_7240() /* ty=(Tensor[(8, 10, 7), uint8],) */;
  %326 = %325.0;
  %327 = cast(%326, dtype="float32") /* ty=Tensor[(8, 10, 7), float32] */;
  %328 = exp(%327) /* ty=Tensor[(8, 10, 7), float32] */;
  (%328,)
}

def @func_4012() -> (Tensor[(1, 10, 7), float64],) {
  %329 = @func_3940() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %330 = %329.0;
  (%330,)
}

def @func_9400(%var_9385: Tensor[(1260), int8]) -> (Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64], uint16, Tensor[(728), uint16], Tensor[(?, 10, 7), bool], Tensor[(1260), int8]) {
  %331 = @func_5499() /* ty=(Tensor[(8, 10, 7), uint8],) */;
  %332 = cast(meta[relay.Constant][17] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %333 = cast(meta[relay.Constant][18] /* ty=Tensor[(728), uint16] */, dtype="uint16") /* ty=Tensor[(728), uint16] */;
  %334 = reshape(%332, newshape=[]) /* ty=uint16 */;
  %335 = reshape(%333, newshape=[8, 13, 7]) /* ty=Tensor[(8, 13, 7), uint16] */;
  %336 = @func_4385(%334, %335) /* ty=(Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), uint8], Tensor[(8, 13, 7), float32], Tensor[(1, 10, 7), float64]) */;
  %337 = cast(%var_9385, dtype="int8") /* ty=Tensor[(1260), int8] */;
  %338 = reshape(%337, newshape=[90, 14]) /* ty=Tensor[(90, 14), int8] */;
  %339 = @func_3473(%338) /* ty=(Tensor[(?, 10, 7), bool], Tensor[(1, 10, 7), float64], Tensor[(90, 14), int8]) */;
  %340 = %331.0;
  %341 = %336.0;
  %342 = %339.0;
  (%340, %341, meta[relay.Constant][17] /* ty=uint16 */, meta[relay.Constant][18] /* ty=Tensor[(728), uint16] */, %342, %var_9385)
}

def @func_9844() -> Tensor[(8, 10, 7), uint8] {
  %343 = @func_9107() /* ty=(Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64], Tensor[(2, 4, 12), int32], Tensor[(96), float64]) */;
  %343.0
}

def @func_3473(%var_3467: Tensor[(90, 14), int8]) -> (Tensor[(?, 10, 7), bool], Tensor[(1, 10, 7), float64], Tensor[(90, 14), int8]) {
  %344 = @func_1682() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64]) */;
  %345 = %344.0;
  %346 = @func_3067() /* ty=Tensor[(1, 10, 7), float64] */;
  %347 = cast(%346, dtype="uint8") /* ty=Tensor[(1, 10, 7), uint8] */;
  %348 = shape_of(%345, dtype="int32") /* ty=Tensor[(3), int32] */;
  %349 = cast(%345, dtype="uint8") /* ty=Tensor[(1, 10, 7), uint8] */;
  %350 = dyn.reshape(%347, %348, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %351 = minimum(%349, %350) /* ty=Tensor[(?, 10, 7), uint8] */;
  %352 = cast(%346, dtype="bool") /* ty=Tensor[(1, 10, 7), bool] */;
  %353 = shape_of(%351, dtype="int32") /* ty=Tensor[(3), int32] */;
  %354 = cast(%351, dtype="bool") /* ty=Tensor[(?, 10, 7), bool] */;
  %355 = dyn.reshape(%352, %353, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %356 = cast(%var_3467, dtype="int8") /* ty=Tensor[(90, 14), int8] */;
  %357 = reshape(%356, newshape=[7, 12, 15]) /* ty=Tensor[(7, 12, 15), int8] */;
  %358 = @func_2686(%357) /* ty=(Tensor[(7, 12, 15), uint8], Tensor[(1, 10, 7), float64], Tensor[(768), int64]) */;
  %359 = less(%354, %355) /* ty=Tensor[(?, 10, 7), bool] */;
  %360 = %358.1;
  (%359, %360, %var_3467)
}

def @func_3603() -> (Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64]) {
  %361 = @func_978() /* ty=Tensor[(8, 10, 7), uint8] */;
  %362 = @func_2121() /* ty=Tensor[(1, 10, 7), float64] */;
  (%361, %362)
}

def @func_6207() -> Tensor[(8, 10, 7), float64] {
  %363 = @func_978() /* ty=Tensor[(8, 10, 7), uint8] */;
  %364 = cast(%363, dtype="float64") /* ty=Tensor[(8, 10, 7), float64] */;
  sigmoid(%364) /* ty=Tensor[(8, 10, 7), float64] */
}

def @func_4483() -> Tensor[(3, 11, 12), bool] {
  %365 = @func_3924() /* ty=Tensor[(3, 11, 12), uint16] */;
  %366 = cast(meta[relay.Constant][19] /* ty=Tensor[(3, 11, 12), uint16] */, dtype="bool") /* ty=Tensor[(3, 11, 12), bool] */;
  %367 = shape_of(%365, dtype="int32") /* ty=Tensor[(3), int32] */;
  %368 = cast(%365, dtype="bool") /* ty=Tensor[(3, 11, 12), bool] */;
  %369 = dyn.reshape(%366, %367, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%368, %369) /* ty=Tensor[(3, 11, 12), bool] */
}

def @func_893(%var_885: Tensor[(16, 10, 7), float64]) -> Tensor[(16, 10, 7), bool] {
  %370 = @func_786() /* ty=Tensor[(1, 10, 7), float64] */;
  %371 = cast(%370, dtype="bool") /* ty=Tensor[(1, 10, 7), bool] */;
  %372 = cast(%var_885, dtype="bool") /* ty=Tensor[(16, 10, 7), bool] */;
  greater_equal(%371, %372) /* ty=Tensor[(16, 10, 7), bool] */
}

def @func_3720() -> (Tensor[(8, 10, 7), uint8],) {
  %373 = @func_978() /* ty=Tensor[(8, 10, 7), uint8] */;
  (%373,)
}

def @func_5352() -> Tensor[(1, 10, 7), float64] {
  %374 = @func_1682() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64]) */;
  %374.1
}

def @func_8920() -> (Tensor[(1, 10, 7), float64],) {
  %375 = @func_2121() /* ty=Tensor[(1, 10, 7), float64] */;
  (%375,)
}

def @func_4654() -> Tensor[(1, 10, 7), float64] {
  @func_3503() /* ty=Tensor[(1, 10, 7), float64] */
}

def @func_5032() -> (Tensor[(8, 10, 7), uint8], Tensor[(35, 4), float64], Tensor[(35, 4), float64]) {
  %376 = cast(meta[relay.Constant][20] /* ty=Tensor[(35, 4), float64] */, dtype="float64") /* ty=Tensor[(35, 4), float64] */;
  %377 = reshape(%376, newshape=[35, 4]) /* ty=Tensor[(35, 4), float64] */;
  %378 = @func_4879(%377) /* ty=(Tensor[(1, 10, 7), float64], Tensor[(2, 10, 7), int8], Tensor[(35, 4), float64], Tensor[(768), int64]) */;
  %379 = @func_978() /* ty=Tensor[(8, 10, 7), uint8] */;
  %380 = %378.2;
  (%379, %380, meta[relay.Constant][20] /* ty=Tensor[(35, 4), float64] */)
}

def @func_2831() -> Tensor[(1, 10, 7), float64] {
  %381 = @func_1813() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %381.0
}

def @func_4741(%var_4739: Tensor[(210), float64]) -> (Tensor[(3, 11, 12), uint16], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(3, 10, 7), int16], Tensor[(210), float64]) {
  %382 = @func_810() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %383 = cast(%var_4739, dtype="float64") /* ty=Tensor[(210), float64] */;
  %384 = reshape(%383, newshape=[3, 10, 7]) /* ty=Tensor[(3, 10, 7), float64] */;
  %385 = @func_4589(%384) /* ty=(Tensor[(3, 10, 7), int16],) */;
  %386 = @func_3924() /* ty=Tensor[(3, 11, 12), uint16] */;
  %387 = @func_2953() /* ty=Tensor[(1, 10, 7), float64] */;
  %388 = @func_1757() /* ty=Tensor[(1, 10, 7), float64] */;
  %389 = %382.0;
  %390 = %385.0;
  (%386, %387, %388, %389, %390, %var_4739)
}

def @func_3831(%var_3825: Tensor[(768), int64]) -> (Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(768), int64]) {
  %391 = cast(%var_3825, dtype="int64") /* ty=Tensor[(768), int64] */;
  %392 = reshape(%391, newshape=[12, 8, 8]) /* ty=Tensor[(12, 8, 8), int64] */;
  %393 = @func_1958(%392) /* ty=(Tensor[(12, 8, 8), bool], Tensor[(8, 10, 7), float64], Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32]) */;
  %394 = @func_3067() /* ty=Tensor[(1, 10, 7), float64] */;
  %395 = %393.5;
  (%394, %395, %var_3825)
}

def @func_1362() -> (Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64]) {
  %396 = @func_1129() /* ty=(Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), uint8], Tensor[(8, 10, 7), float64]) */;
  %397 = @func_810() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %398 = %396.1;
  %399 = %397.0;
  (%398, %399)
}

def @func_10195() -> Tensor[(1, 10, 7), float64] {
  %400 = @func_8550() /* ty=(Tensor[(13, 12, 3), float64], Tensor[(1, 10, 7), float64]) */;
  %400.1
}

def @func_3999() -> (Tensor[(13, 12, 3), float32], Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32], Tensor[(1, 10, 7), float64]) {
  %401 = @func_3216() /* ty=(Tensor[(13, 12, 3), float32],) */;
  %402 = @func_3216() /* ty=(Tensor[(13, 12, 3), float32],) */;
  %403 = @func_3796() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %404 = %401.0;
  %405 = @func_2121() /* ty=Tensor[(1, 10, 7), float64] */;
  %406 = %402.0;
  %407 = %403.0;
  (%404, %405, %406, %407)
}

def @func_5431() -> (Tensor[(?, 10, 7), float64], Tensor[(1, 10, 7), float64]) {
  %408 = @func_4012() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %409 = %408.0;
  %410 = @func_1362() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64]) */;
  %411 = %410.0;
  %412 = cast(%411, dtype="float64") /* ty=Tensor[(1, 10, 7), float64] */;
  %413 = shape_of(%409, dtype="int32") /* ty=Tensor[(3), int32] */;
  %414 = cast(%409, dtype="float64") /* ty=Tensor[(1, 10, 7), float64] */;
  %415 = dyn.reshape(%412, %413, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %416 = divide(%414, %415) /* ty=Tensor[(?, 10, 7), float64] */;
  %417 = @func_4308() /* ty=Tensor[(1, 10, 7), float64] */;
  (%416, %417)
}

def @func_2143() -> (Tensor[(13, 12, 3), float32],) {
  %418 = @func_1184() /* ty=(Tensor[(8, 10, 7), uint8], Tensor[(13, 12, 3), float32], Tensor[(468), float64], Tensor[(1120), float64]) */;
  %419 = %418.1;
  (%419,)
}

def @func_1392() -> (Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64]) {
  %420 = @func_1129() /* ty=(Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), uint8], Tensor[(8, 10, 7), float64]) */;
  %421 = @func_786() /* ty=Tensor[(1, 10, 7), float64] */;
  %422 = %420.1;
  (%421, %422)
}

def @func_6257(%var_6251: Tensor[(7, 13, 7), int16]) -> Tensor[(7, 13, 7), int16] {
  %423 = cast(meta[relay.Constant][21] /* ty=Tensor[(7, 13, 7), int16] */, dtype="int16") /* ty=Tensor[(7, 13, 7), int16] */;
  %424 = shape_of(%var_6251, dtype="int32") /* ty=Tensor[(3), int32] */;
  %425 = cast(%var_6251, dtype="int16") /* ty=Tensor[(7, 13, 7), int16] */;
  %426 = dyn.reshape(%423, %424, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  bitwise_or(%425, %426) /* ty=Tensor[(7, 13, 7), int16] */
}

def @func_6116() -> (Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64], Tensor[(2400), int8]) {
  %427 = @func_3720() /* ty=(Tensor[(8, 10, 7), uint8],) */;
  %428 = @func_3603() /* ty=(Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64]) */;
  %429 = cast(meta[relay.Constant][22] /* ty=Tensor[(2400), int8] */, dtype="int8") /* ty=Tensor[(2400), int8] */;
  %430 = cast(meta[relay.Constant][22] /* ty=Tensor[(2400), int8] */, dtype="int8") /* ty=Tensor[(2400), int8] */;
  %431 = reshape(%429, newshape=[15, 16, 10]) /* ty=Tensor[(15, 16, 10), int8] */;
  %432 = reshape(%430, newshape=[15, 16, 10]) /* ty=Tensor[(15, 16, 10), int8] */;
  %433 = @func_4427(%431, %432) /* ty=(Tensor[(15, 16, 10), bool],) */;
  %434 = %433.0;
  %435 = cast(%434, dtype="int8") /* ty=Tensor[(15, 16, 10), int8] */;
  %436 = shape_of(meta[relay.Constant][22] /* ty=Tensor[(2400), int8] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %437 = cast(meta[relay.Constant][22] /* ty=Tensor[(2400), int8] */, dtype="int8") /* ty=Tensor[(2400), int8] */;
  %438 = dyn.reshape(%435, %436, newshape=[]) /* ty=Tensor[(?), int8] */;
  %439 = %427.0;
  %440 = %428.1;
  %441 = right_shift(%437, %438) /* ty=Tensor[(2400), int8] */;
  (%439, %440, %441)
}

def @func_3796() -> (Tensor[(1, 10, 7), float64],) {
  %442 = @func_2121() /* ty=Tensor[(1, 10, 7), float64] */;
  (%442,)
}

def @func_4861() -> (Tensor[(3, 11, 12), uint16], Tensor[(1, 10, 7), float64]) {
  %443 = @func_2831() /* ty=Tensor[(1, 10, 7), float64] */;
  %444 = cast(%443, dtype="float64") /* ty=Tensor[(1, 10, 7), float64] */;
  %445 = @func_3924() /* ty=Tensor[(3, 11, 12), uint16] */;
  %446 = log(%444) /* ty=Tensor[(1, 10, 7), float64] */;
  (%445, %446)
}

def @func_4293() -> (Tensor[(1, 10, 7), float64], Tensor[(16, 10, 7), bool], Tensor[(1120), float64]) {
  %447 = cast(meta[relay.Constant][23] /* ty=Tensor[(1120), float64] */, dtype="float64") /* ty=Tensor[(1120), float64] */;
  %448 = reshape(%447, newshape=[16, 10, 7]) /* ty=Tensor[(16, 10, 7), float64] */;
  %449 = @func_786() /* ty=Tensor[(1, 10, 7), float64] */;
  %450 = @func_893(%448) /* ty=Tensor[(16, 10, 7), bool] */;
  (%449, %450, meta[relay.Constant][23] /* ty=Tensor[(1120), float64] */)
}

def @func_7110() -> Tensor[(1, 10, 7), float64] {
  @func_3503() /* ty=Tensor[(1, 10, 7), float64] */
}

def @func_2766(%var_2762: Tensor[(8, 2, 2), float32]) -> Tensor[(8, 2, 2), float32] {
  %451 = cast(%var_2762, dtype="float32") /* ty=Tensor[(8, 2, 2), float32] */;
  rsqrt(%451) /* ty=Tensor[(8, 2, 2), float32] */
}

def @func_1773() -> (Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), uint8]) {
  %452 = @func_1757() /* ty=Tensor[(1, 10, 7), float64] */;
  %453 = @func_1488() /* ty=Tensor[(8, 10, 7), uint8] */;
  (%452, %453)
}

def @func_736(%var_732: Tensor[(8, 13, 15), float32]) -> (Tensor[(8, 13, 15), float32],) {
  %454 = cast(%var_732, dtype="float32") /* ty=Tensor[(8, 13, 15), float32] */;
  %455 = tan(%454) /* ty=Tensor[(8, 13, 15), float32] */;
  (%455,)
}

def @func_1757() -> Tensor[(1, 10, 7), float64] {
  %456 = @func_810() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %456.0
}

def @func_4454(%var_4440: Tensor[(9, 13, 12), float32], %var_4450: Tensor[(280, 4), float64]) -> (Tensor[(9, 13, 12), float32], Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32], Tensor[(468, 1), float64], Tensor[(280, 4), float64]) {
  %457 = cast(meta[relay.Constant][24] /* ty=Tensor[(9, 13, 1), float32] */, dtype="float32") /* ty=Tensor[(9, 13, 1), float32] */;
  %458 = cast(%var_4440, dtype="float32") /* ty=Tensor[(9, 13, 12), float32] */;
  %459 = cast(meta[relay.Constant][25] /* ty=Tensor[(468, 1), float64] */, dtype="float64") /* ty=Tensor[(468, 1), float64] */;
  %460 = cast(%var_4450, dtype="float64") /* ty=Tensor[(280, 4), float64] */;
  %461 = reshape(%459, newshape=[13, 12, 3]) /* ty=Tensor[(13, 12, 3), float64] */;
  %462 = reshape(%460, newshape=[1, 1120]) /* ty=Tensor[(1, 1120), float64] */;
  %463 = @func_1072(%461, %462) /* ty=(Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32], Tensor[(16, 10, 7), bool], Tensor[(1, 1120), float64]) */;
  %464 = floor_divide(%457, %458) /* ty=Tensor[(9, 13, 12), float32] */;
  %465 = @func_2030() /* ty=Tensor[(1, 10, 7), float64] */;
  %466 = %463.1;
  (%464, %465, %466, meta[relay.Constant][25] /* ty=Tensor[(468, 1), float64] */, %var_4450)
}

def @func_9706() -> (Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), float64]) {
  %467 = @func_7240() /* ty=(Tensor[(8, 10, 7), uint8],) */;
  %468 = @func_8920() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %469 = @func_5224() /* ty=(Tensor[(8, 10, 7), float64],) */;
  %470 = @func_7561() /* ty=Tensor[(1, 10, 7), float64] */;
  %471 = %467.0;
  %472 = %468.0;
  %473 = %469.0;
  (%470, %471, %472, %473)
}

def @func_1184() -> (Tensor[(8, 10, 7), uint8], Tensor[(13, 12, 3), float32], Tensor[(468), float64], Tensor[(1120), float64]) {
  %474 = cast(meta[relay.Constant][26] /* ty=Tensor[(468), float64] */, dtype="float64") /* ty=Tensor[(468), float64] */;
  %475 = cast(meta[relay.Constant][27] /* ty=Tensor[(1120), float64] */, dtype="float64") /* ty=Tensor[(1120), float64] */;
  %476 = reshape(%474, newshape=[13, 12, 3]) /* ty=Tensor[(13, 12, 3), float64] */;
  %477 = reshape(%475, newshape=[1, 1120]) /* ty=Tensor[(1, 1120), float64] */;
  %478 = @func_1072(%476, %477) /* ty=(Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32], Tensor[(16, 10, 7), bool], Tensor[(1, 1120), float64]) */;
  %479 = @func_978() /* ty=Tensor[(8, 10, 7), uint8] */;
  %480 = %478.1;
  (%479, %480, meta[relay.Constant][26] /* ty=Tensor[(468), float64] */, meta[relay.Constant][27] /* ty=Tensor[(1120), float64] */)
}

def @func_8636(%var_8606: Tensor[(2400), int8]) -> (Tensor[(2400), uint8], Tensor[(2400), bool], Tensor[(2400), float64]) {
  %481 = @func_6116() /* ty=(Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64], Tensor[(2400), int8]) */;
  %482 = %481.2;
  %483 = cast(%var_8606, dtype="uint8") /* ty=Tensor[(2400), uint8] */;
  %484 = shape_of(%482, dtype="int32") /* ty=Tensor[(1), int32] */;
  %485 = cast(%482, dtype="uint8") /* ty=Tensor[(2400), uint8] */;
  %486 = dyn.reshape(%483, %484, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %487 = cast(%482, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %488 = atan(%487) /* ty=Tensor[(2400), float64] */;
  %489 = cast(meta[relay.Constant][28] /* ty=Tensor[(2400), float64] */, dtype="bool") /* ty=Tensor[(2400), bool] */;
  %490 = shape_of(%488, dtype="int32") /* ty=Tensor[(1), int32] */;
  %491 = cast(%488, dtype="bool") /* ty=Tensor[(2400), bool] */;
  %492 = dyn.reshape(%489, %490, newshape=[]) /* ty=Tensor[(?), bool] */;
  %493 = cast(%var_8606, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %494 = logical_xor(%485, %486) /* ty=Tensor[(2400), uint8] */;
  %495 = equal(%491, %492) /* ty=Tensor[(2400), bool] */;
  %496 = tan(%493) /* ty=Tensor[(2400), float64] */;
  (%494, %495, %496)
}

def @func_10148() -> Tensor[(1, 10, 7), float64] {
  @func_2953() /* ty=Tensor[(1, 10, 7), float64] */
}

def @func_10102(%var_10088: Tensor[(14, 1, 3), float64], %var_10095: Tensor[(14, 15, 3), float64]) -> (Tensor[(14, 15, 3), bool],) {
  %497 = cast(%var_10088, dtype="float64") /* ty=Tensor[(14, 1, 3), float64] */;
  %498 = tan(%497) /* ty=Tensor[(14, 1, 3), float64] */;
  %499 = cast(%498, dtype="bool") /* ty=Tensor[(14, 1, 3), bool] */;
  %500 = cast(%var_10095, dtype="bool") /* ty=Tensor[(14, 15, 3), bool] */;
  %501 = less(%499, %500) /* ty=Tensor[(14, 15, 3), bool] */;
  (%501,)
}

def @func_8731() -> (Tensor[(8, 10, 7), uint8],) {
  %502 = @func_5499() /* ty=(Tensor[(8, 10, 7), uint8],) */;
  %503 = %502.0;
  (%503,)
}

def @func_6330() -> (Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64]) {
  %504 = @func_5901() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %505 = @func_6122() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %506 = %504.0;
  %507 = %505.0;
  (%506, %507)
}

def @func_7788(%var_7748: Tensor[(2, 176), float32]) -> (Tensor[(13, 12, 3), float32], Tensor[(8, 11, 4), float32], Tensor[(2, 176), float32], Tensor[(12, 10, 7), int8], Tensor[(840), float64]) {
  %508 = @func_6056() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32]) */;
  %509 = cast(%var_7748, dtype="float32") /* ty=Tensor[(2, 176), float32] */;
  %510 = reshape(%509, newshape=[8, 11, 4]) /* ty=Tensor[(8, 11, 4), float32] */;
  %511 = @func_470(%510) /* ty=(Tensor[(8, 11, 4), float32],) */;
  %512 = cast(meta[relay.Constant][29] /* ty=Tensor[(840), float64] */, dtype="float64") /* ty=Tensor[(840), float64] */;
  %513 = reshape(%512, newshape=[12, 10, 7]) /* ty=Tensor[(12, 10, 7), float64] */;
  %514 = %508.1;
  %515 = %511.0;
  %516 = @func_3572(%513) /* ty=Tensor[(12, 10, 7), int8] */;
  (%514, %515, %var_7748, %516, meta[relay.Constant][29] /* ty=Tensor[(840), float64] */)
}

def @main(%var_10704: Tensor[(2, 11, 4), float64], %var_10712: Tensor[(2, 11, 4), float64]) -> (Tensor[(2, 11, 4), uint8], Tensor[(1, 10, 7), float64], Tensor[(2, 11, 4), float64]) {
  %517 = cast(%var_10704, dtype="float64") /* ty=Tensor[(2, 11, 4), float64] */;
  %518 = log(%517) /* ty=Tensor[(2, 11, 4), float64] */;
  %519 = cast(%var_10712, dtype="uint8") /* ty=Tensor[(2, 11, 4), uint8] */;
  %520 = shape_of(%518, dtype="int32") /* ty=Tensor[(3), int32] */;
  %521 = cast(%518, dtype="uint8") /* ty=Tensor[(2, 11, 4), uint8] */;
  %522 = dyn.reshape(%519, %520, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %523 = @func_1682() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64]) */;
  %524 = cast(%518, dtype="float64") /* ty=Tensor[(2, 11, 4), float64] */;
  %525 = multiply(%521, %522) /* ty=Tensor[(2, 11, 4), uint8] */;
  %526 = %523.1;
  %527 = exp(%524) /* ty=Tensor[(2, 11, 4), float64] */;
  (%525, %526, %527)
}

def @func_7961(%var_7948: Tensor[(11, 3, 3), float32]) -> (Tensor[(11, 3, 3), float32],) {
  %528 = cast(%var_7948, dtype="float32") /* ty=Tensor[(11, 3, 3), float32] */;
  %529 = acos(%528) /* ty=Tensor[(11, 3, 3), float32] */;
  (%529,)
}

def @func_1589() -> (Tensor[(13, 12, 3), int64], Tensor[(1, 10, 7), float64]) {
  %530 = @func_1184() /* ty=(Tensor[(8, 10, 7), uint8], Tensor[(13, 12, 3), float32], Tensor[(468), float64], Tensor[(1120), float64]) */;
  %531 = %530.1;
  %532 = cast(meta[relay.Constant][30] /* ty=Tensor[(13, 12, 3), float32] */, dtype="int64") /* ty=Tensor[(13, 12, 3), int64] */;
  %533 = shape_of(%531, dtype="int32") /* ty=Tensor[(3), int32] */;
  %534 = cast(%531, dtype="int64") /* ty=Tensor[(13, 12, 3), int64] */;
  %535 = dyn.reshape(%532, %533, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %536 = @func_1457() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %537 = bitwise_and(%534, %535) /* ty=Tensor[(13, 12, 3), int64] */;
  %538 = %536.0;
  (%537, %538)
}

def @func_8206() -> (Tensor[(3, 11, 12), float64], Tensor[(16, 10, 7), bool]) {
  %539 = @func_3924() /* ty=Tensor[(3, 11, 12), uint16] */;
  %540 = cast(%539, dtype="float32") /* ty=Tensor[(3, 11, 12), float32] */;
  %541 = sin(%540) /* ty=Tensor[(3, 11, 12), float32] */;
  %542 = cast(%541, dtype="float64") /* ty=Tensor[(3, 11, 12), float64] */;
  %543 = @func_7711() /* ty=(Tensor[(16, 10, 7), bool], Tensor[(16, 10, 7), bool]) */;
  %544 = cos(%542) /* ty=Tensor[(3, 11, 12), float64] */;
  %545 = %543.1;
  (%544, %545)
}

def @func_8065() -> (Tensor[(1, 10, 7), float64], Tensor[(3, 11, 12), uint16]) {
  %546 = @func_1129() /* ty=(Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), uint8], Tensor[(8, 10, 7), float64]) */;
  %547 = @func_4861() /* ty=(Tensor[(3, 11, 12), uint16], Tensor[(1, 10, 7), float64]) */;
  %548 = %546.1;
  %549 = %547.0;
  (%548, %549)
}

def @func_8550() -> (Tensor[(13, 12, 3), float64], Tensor[(1, 10, 7), float64]) {
  %550 = @func_7449() /* ty=Tensor[(13, 12, 3), bool] */;
  %551 = cast(%550, dtype="float64") /* ty=Tensor[(13, 12, 3), float64] */;
  %552 = exp(%551) /* ty=Tensor[(13, 12, 3), float64] */;
  %553 = @func_7561() /* ty=Tensor[(1, 10, 7), float64] */;
  (%552, %553)
}

def @func_3547(%var_3522: Tensor[(2, 10, 7), float64], %var_3537: Tensor[(768), int64]) -> (Tensor[(2, 10, 7), int8], Tensor[(1, 10, 7), float64], Tensor[(768), int64]) {
  %554 = @func_1757() /* ty=Tensor[(1, 10, 7), float64] */;
  %555 = cast(%554, dtype="int8") /* ty=Tensor[(1, 10, 7), int8] */;
  %556 = cast(%var_3522, dtype="int8") /* ty=Tensor[(2, 10, 7), int8] */;
  %557 = cast(%var_3537, dtype="int64") /* ty=Tensor[(768), int64] */;
  %558 = reshape(%557, newshape=[12, 8, 8]) /* ty=Tensor[(12, 8, 8), int64] */;
  %559 = @func_1958(%558) /* ty=(Tensor[(12, 8, 8), bool], Tensor[(8, 10, 7), float64], Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32]) */;
  %560 = add(%555, %556) /* ty=Tensor[(2, 10, 7), int8] */;
  %561 = %559.3;
  (%560, %561, %var_3537)
}

def @func_1682() -> (Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64]) {
  %562 = @func_1392() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64]) */;
  %563 = %562.1;
  %564 = @func_786() /* ty=Tensor[(1, 10, 7), float64] */;
  (%563, %564)
}

def @func_7990(%var_7987: Tensor[(150), float64]) -> (Tensor[(8, 10, 7), float32], Tensor[(13, 15, 4), bool], Tensor[(780), int16], Tensor[(150), float64], Tensor[(768), int64]) {
  %565 = @func_5183() /* ty=(Tensor[(8, 10, 7), float32],) */;
  %566 = cast(meta[relay.Constant][31] /* ty=Tensor[(780), int16] */, dtype="int16") /* ty=Tensor[(780), int16] */;
  %567 = cast(meta[relay.Constant][31] /* ty=Tensor[(780), int16] */, dtype="int16") /* ty=Tensor[(780), int16] */;
  %568 = cast(%var_7987, dtype="float64") /* ty=Tensor[(150), float64] */;
  %569 = cast(meta[relay.Constant][32] /* ty=Tensor[(768), int64] */, dtype="int64") /* ty=Tensor[(768), int64] */;
  %570 = reshape(%566, newshape=[13, 15, 4]) /* ty=Tensor[(13, 15, 4), int16] */;
  %571 = reshape(%567, newshape=[13, 15, 4]) /* ty=Tensor[(13, 15, 4), int16] */;
  %572 = reshape(%568, newshape=[25, 6]) /* ty=Tensor[(25, 6), float64] */;
  %573 = reshape(%569, newshape=[768]) /* ty=Tensor[(768), int64] */;
  %574 = @func_7020(%570, %571, %572, %573) /* ty=(Tensor[(13, 15, 4), bool], Tensor[(13, 12, 3), float64], Tensor[(1, 10, 7), float64], Tensor[(324), float64], Tensor[(5, 15, 2), float64], Tensor[(25, 6), float64], Tensor[(1, 10, 7), float64], Tensor[(768), int64], Tensor[(768), int64]) */;
  %575 = %565.0;
  %576 = %574.0;
  (%575, %576, meta[relay.Constant][31] /* ty=Tensor[(780), int16] */, %var_7987, meta[relay.Constant][32] /* ty=Tensor[(768), int64] */)
}

def @func_4210(%var_4187: Tensor[(60, 14), float64]) -> (Tensor[(1, 10, 7), float64], Tensor[(?, 10, 7), bool], Tensor[(1260), int8], Tensor[(1, 10, 7), float64], Tensor[(12, 10, 7), int8], Tensor[(60, 14), float64], Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), uint8], Tensor[(8, 10, 7), uint8]) {
  %577 = cast(meta[relay.Constant][33] /* ty=Tensor[(1260), int8] */, dtype="int8") /* ty=Tensor[(1260), int8] */;
  %578 = reshape(%577, newshape=[90, 14]) /* ty=Tensor[(90, 14), int8] */;
  %579 = @func_3473(%578) /* ty=(Tensor[(?, 10, 7), bool], Tensor[(1, 10, 7), float64], Tensor[(90, 14), int8]) */;
  %580 = cast(%var_4187, dtype="float64") /* ty=Tensor[(60, 14), float64] */;
  %581 = reshape(%580, newshape=[12, 10, 7]) /* ty=Tensor[(12, 10, 7), float64] */;
  %582 = cast(meta[relay.Constant][33] /* ty=Tensor[(1260), int8] */, dtype="int8") /* ty=Tensor[(1260), int8] */;
  %583 = reshape(%582, newshape=[90, 14]) /* ty=Tensor[(90, 14), int8] */;
  %584 = @func_3473(%583) /* ty=(Tensor[(?, 10, 7), bool], Tensor[(1, 10, 7), float64], Tensor[(90, 14), int8]) */;
  %585 = @func_3003() /* ty=(Tensor[(8, 10, 7), uint8], Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64]) */;
  %586 = @func_2030() /* ty=Tensor[(1, 10, 7), float64] */;
  %587 = %579.0;
  %588 = @func_3503() /* ty=Tensor[(1, 10, 7), float64] */;
  %589 = @func_3572(%581) /* ty=Tensor[(12, 10, 7), int8] */;
  %590 = %584.1;
  %591 = %585.1;
  %592 = @func_978() /* ty=Tensor[(8, 10, 7), uint8] */;
  (%586, %587, meta[relay.Constant][33] /* ty=Tensor[(1260), int8] */, %588, %589, %var_4187, %590, %591, %592)
}

def @func_2639(%var_2634: Tensor[(324), float64]) -> (Tensor[(1, 10, 7), float64], Tensor[(9, 3, 12), float64], Tensor[(324), float64]) {
  %593 = @func_1457() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %594 = cast(%var_2634, dtype="float64") /* ty=Tensor[(324), float64] */;
  %595 = reshape(%594, newshape=[9, 3, 12]) /* ty=Tensor[(9, 3, 12), float64] */;
  %596 = @func_2584(%595) /* ty=(Tensor[(9, 3, 12), float64], Tensor[(1, 10, 7), float64]) */;
  %597 = %593.0;
  %598 = %596.0;
  (%597, %598, %var_2634)
}

def @func_3516(%var_3513: Tensor[(5, 15, 2), float64]) -> Tensor[(5, 15, 2), float64] {
  %599 = cast(%var_3513, dtype="float64") /* ty=Tensor[(5, 15, 2), float64] */;
  atanh(%599) /* ty=Tensor[(5, 15, 2), float64] */
}

def @func_1488() -> Tensor[(8, 10, 7), uint8] {
  @func_978() /* ty=Tensor[(8, 10, 7), uint8] */
}

def @func_6653() -> Tensor[(?, 10, 7), uint32] {
  %600 = @func_4139() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %601 = %600.0;
  %602 = cast(meta[relay.Constant][34] /* ty=Tensor[(1, 10, 7), float64] */, dtype="uint32") /* ty=Tensor[(1, 10, 7), uint32] */;
  %603 = shape_of(%601, dtype="int32") /* ty=Tensor[(3), int32] */;
  %604 = cast(%601, dtype="uint32") /* ty=Tensor[(1, 10, 7), uint32] */;
  %605 = dyn.reshape(%602, %603, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  add(%604, %605) /* ty=Tensor[(?, 10, 7), uint32] */
}

def @func_5499() -> (Tensor[(8, 10, 7), uint8],) {
  %606 = @func_4771() /* ty=(Tensor[(8, 10, 7), uint8],) */;
  %607 = %606.0;
  (%607,)
}

def @func_8827(%var_8798: Tensor[(10, 16, 3), uint16], %var_8799: Tensor[(10, 16, 3), uint16]) -> (Tensor[(10, 16, 3), uint64],) {
  %608 = cast(%var_8799, dtype="bool") /* ty=Tensor[(10, 16, 3), bool] */;
  %609 = shape_of(%var_8798, dtype="int32") /* ty=Tensor[(3), int32] */;
  %610 = cast(%var_8798, dtype="bool") /* ty=Tensor[(10, 16, 3), bool] */;
  %611 = dyn.reshape(%608, %609, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %612 = greater(%610, %611) /* ty=Tensor[(10, 16, 3), bool] */;
  %613 = cast(%612, dtype="uint64") /* ty=Tensor[(10, 16, 3), uint64] */;
  %614 = shape_of(%var_8799, dtype="int32") /* ty=Tensor[(3), int32] */;
  %615 = cast(%var_8799, dtype="uint64") /* ty=Tensor[(10, 16, 3), uint64] */;
  %616 = dyn.reshape(%613, %614, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %617 = bitwise_or(%615, %616) /* ty=Tensor[(10, 16, 3), uint64] */;
  (%617,)
}

def @func_2913() -> (Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), uint8]) {
  %618 = @func_1129() /* ty=(Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), uint8], Tensor[(8, 10, 7), float64]) */;
  %619 = @func_2831() /* ty=Tensor[(1, 10, 7), float64] */;
  %620 = @func_1757() /* ty=Tensor[(1, 10, 7), float64] */;
  %621 = %618.0;
  (%619, %620, %621)
}

def @func_1129() -> (Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), uint8], Tensor[(8, 10, 7), float64]) {
  %622 = @func_978() /* ty=Tensor[(8, 10, 7), uint8] */;
  %623 = cast(%622, dtype="float64") /* ty=Tensor[(8, 10, 7), float64] */;
  %624 = @func_978() /* ty=Tensor[(8, 10, 7), uint8] */;
  %625 = @func_786() /* ty=Tensor[(1, 10, 7), float64] */;
  %626 = @func_978() /* ty=Tensor[(8, 10, 7), uint8] */;
  %627 = tan(%623) /* ty=Tensor[(8, 10, 7), float64] */;
  (%624, %625, %626, %627)
}

def @func_8445(%var_8378: Tensor[(13, 12, 3), float32]) -> (Tensor[(13, 12, 3), bool], Tensor[(8, 11, 4), float32], Tensor[(352), float32], Tensor[(13, 12, 3), float32], Tensor[(1, 10, 7), float64]) {
  %628 = @func_2345() /* ty=(Tensor[(13, 12, 3), float32],) */;
  %629 = %628.0;
  %630 = cast(%var_8378, dtype="bool") /* ty=Tensor[(13, 12, 3), bool] */;
  %631 = shape_of(%629, dtype="int32") /* ty=Tensor[(3), int32] */;
  %632 = cast(%629, dtype="bool") /* ty=Tensor[(13, 12, 3), bool] */;
  %633 = dyn.reshape(%630, %631, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %634 = cast(meta[relay.Constant][35] /* ty=Tensor[(352), float32] */, dtype="float32") /* ty=Tensor[(352), float32] */;
  %635 = reshape(%634, newshape=[8, 11, 4]) /* ty=Tensor[(8, 11, 4), float32] */;
  %636 = @func_470(%635) /* ty=(Tensor[(8, 11, 4), float32],) */;
  %637 = cast(%629, dtype="float32") /* ty=Tensor[(13, 12, 3), float32] */;
  %638 = shape_of(%var_8378, dtype="int32") /* ty=Tensor[(3), int32] */;
  %639 = cast(%var_8378, dtype="float32") /* ty=Tensor[(13, 12, 3), float32] */;
  %640 = dyn.reshape(%637, %638, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %641 = @func_5646() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(?, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(3, 10, 7), int32]) */;
  %642 = not_equal(%632, %633) /* ty=Tensor[(13, 12, 3), bool] */;
  %643 = %636.0;
  %644 = mod(%639, %640) /* ty=Tensor[(13, 12, 3), float32] */;
  %645 = %641.0;
  (%642, %643, meta[relay.Constant][35] /* ty=Tensor[(352), float32] */, %644, %645)
}

def @func_4385(%var_4344: uint16, %var_4345: Tensor[(8, 13, 7), uint16]) -> (Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), uint8], Tensor[(8, 13, 7), float32], Tensor[(1, 10, 7), float64]) {
  %646 = @func_1184() /* ty=(Tensor[(8, 10, 7), uint8], Tensor[(13, 12, 3), float32], Tensor[(468), float64], Tensor[(1120), float64]) */;
  %647 = cast(%var_4344, dtype="uint16") /* ty=uint16 */;
  %648 = cast(%var_4345, dtype="uint16") /* ty=Tensor[(8, 13, 7), uint16] */;
  %649 = multiply(%647, %648) /* ty=Tensor[(8, 13, 7), uint16] */;
  %650 = cast(%649, dtype="float32") /* ty=Tensor[(8, 13, 7), float32] */;
  %651 = @func_786() /* ty=Tensor[(1, 10, 7), float64] */;
  %652 = %646.0;
  %653 = acosh(%650) /* ty=Tensor[(8, 13, 7), float32] */;
  %654 = @func_2953() /* ty=Tensor[(1, 10, 7), float64] */;
  (%651, %652, %653, %654)
}

def @func_9132() -> (Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64]) {
  %655 = @func_4771() /* ty=(Tensor[(8, 10, 7), uint8],) */;
  %656 = @func_2816() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(1120), float64]) */;
  %657 = %655.0;
  %658 = @func_3082() /* ty=Tensor[(1, 10, 7), float64] */;
  %659 = %656.4;
  (%657, %658, %659)
}

def @func_5901() -> (Tensor[(1, 10, 7), float64],) {
  %660 = @func_4139() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %661 = %660.0;
  (%661,)
}

def @func_9752() -> (Tensor[(8, 10, 7), uint8],) {
  %662 = @func_4771() /* ty=(Tensor[(8, 10, 7), uint8],) */;
  %663 = %662.0;
  (%663,)
}

def @func_10526(%var_10491: Tensor[(630), float64]) -> (Tensor[(8, 10, 7), float32], Tensor[(1, 10, 7), float64], Tensor[(14, 15, 3), bool], Tensor[(14, 3), float64], Tensor[(630), float64]) {
  %664 = @func_3940() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %665 = %664.0;
  %666 = @func_1653() /* ty=(Tensor[(8, 10, 7), uint8],) */;
  %667 = %666.0;
  %668 = cast(%665, dtype="float32") /* ty=Tensor[(1, 10, 7), float32] */;
  %669 = cast(%667, dtype="float32") /* ty=Tensor[(8, 10, 7), float32] */;
  %670 = cast(meta[relay.Constant][36] /* ty=Tensor[(14, 3), float64] */, dtype="float64") /* ty=Tensor[(14, 3), float64] */;
  %671 = cast(%var_10491, dtype="float64") /* ty=Tensor[(630), float64] */;
  %672 = reshape(%670, newshape=[14, 1, 3]) /* ty=Tensor[(14, 1, 3), float64] */;
  %673 = reshape(%671, newshape=[14, 15, 3]) /* ty=Tensor[(14, 15, 3), float64] */;
  %674 = @func_10102(%672, %673) /* ty=(Tensor[(14, 15, 3), bool],) */;
  %675 = mod(%668, %669) /* ty=Tensor[(8, 10, 7), float32] */;
  %676 = @func_4654() /* ty=Tensor[(1, 10, 7), float64] */;
  %677 = %674.0;
  (%675, %676, %677, meta[relay.Constant][36] /* ty=Tensor[(14, 3), float64] */, %var_10491)
}

def @func_3683() -> (Tensor[(1, 10, 7), float64],) {
  %678 = @func_1757() /* ty=Tensor[(1, 10, 7), float64] */;
  (%678,)
}

def @func_3003() -> (Tensor[(8, 10, 7), uint8], Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64]) {
  %679 = @func_978() /* ty=Tensor[(8, 10, 7), uint8] */;
  %680 = @func_978() /* ty=Tensor[(8, 10, 7), uint8] */;
  %681 = @func_1757() /* ty=Tensor[(1, 10, 7), float64] */;
  %682 = @func_786() /* ty=Tensor[(1, 10, 7), float64] */;
  (%679, %680, %681, %682)
}

def @func_1072(%var_1035: Tensor[(13, 12, 3), float64], %var_1059: Tensor[(1, 1120), float64]) -> (Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32], Tensor[(16, 10, 7), bool], Tensor[(1, 1120), float64]) {
  %683 = cast(%var_1035, dtype="float64") /* ty=Tensor[(13, 12, 3), float64] */;
  %684 = atanh(%683) /* ty=Tensor[(13, 12, 3), float64] */;
  %685 = cast(meta[relay.Constant][37] /* ty=Tensor[(13, 12, 3), float64] */, dtype="float64") /* ty=Tensor[(13, 12, 3), float64] */;
  %686 = shape_of(%684, dtype="int32") /* ty=Tensor[(3), int32] */;
  %687 = cast(%684, dtype="float64") /* ty=Tensor[(13, 12, 3), float64] */;
  %688 = dyn.reshape(%685, %686, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %689 = floor_mod(%687, %688) /* ty=Tensor[(13, 12, 3), float64] */;
  %690 = cast(%689, dtype="float32") /* ty=Tensor[(13, 12, 3), float32] */;
  %691 = cast(%var_1059, dtype="float64") /* ty=Tensor[(1, 1120), float64] */;
  %692 = reshape(%691, newshape=[16, 10, 7]) /* ty=Tensor[(16, 10, 7), float64] */;
  %693 = @func_786() /* ty=Tensor[(1, 10, 7), float64] */;
  %694 = cosh(%690) /* ty=Tensor[(13, 12, 3), float32] */;
  %695 = @func_893(%692) /* ty=Tensor[(16, 10, 7), bool] */;
  (%693, %694, %695, %var_1059)
}

def @func_2345() -> (Tensor[(13, 12, 3), float32],) {
  %696 = @func_1184() /* ty=(Tensor[(8, 10, 7), uint8], Tensor[(13, 12, 3), float32], Tensor[(468), float64], Tensor[(1120), float64]) */;
  %697 = %696.1;
  (%697,)
}

def @func_2953() -> Tensor[(1, 10, 7), float64] {
  %698 = @func_810() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %699 = %698.0;
  %700 = cast(%699, dtype="float64") /* ty=Tensor[(1, 10, 7), float64] */;
  asinh(%700) /* ty=Tensor[(1, 10, 7), float64] */
}

def @func_2816() -> (Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(1120), float64]) {
  %701 = @func_2030() /* ty=Tensor[(1, 10, 7), float64] */;
  %702 = cast(%701, dtype="float64") /* ty=Tensor[(1, 10, 7), float64] */;
  %703 = @func_2143() /* ty=(Tensor[(13, 12, 3), float32],) */;
  %704 = @func_1813() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %705 = @func_1813() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %706 = @func_1184() /* ty=(Tensor[(8, 10, 7), uint8], Tensor[(13, 12, 3), float32], Tensor[(468), float64], Tensor[(1120), float64]) */;
  %707 = sigmoid(%702) /* ty=Tensor[(1, 10, 7), float64] */;
  %708 = @func_2121() /* ty=Tensor[(1, 10, 7), float64] */;
  %709 = %703.0;
  %710 = %704.0;
  %711 = %705.0;
  %712 = %706.3;
  (%707, %708, %709, %710, %711, %712)
}

def @func_7541() -> (Tensor[(1, 10, 7), float64],) {
  %713 = @func_4861() /* ty=(Tensor[(3, 11, 12), uint16], Tensor[(1, 10, 7), float64]) */;
  %714 = %713.1;
  (%714,)
}

def @func_3615() -> (Tensor[(1, 10, 7), float64],) {
  %715 = @func_1457() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %716 = %715.0;
  (%716,)
}

def @func_9536() -> (Tensor[(1, 10, 7), float64],) {
  %717 = @func_1129() /* ty=(Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), uint8], Tensor[(8, 10, 7), float64]) */;
  %718 = %717.1;
  (%718,)
}

def @func_5694() -> (Tensor[(1, 10, 7), float64],) {
  %719 = @func_3003() /* ty=(Tensor[(8, 10, 7), uint8], Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64]) */;
  %720 = %719.2;
  (%720,)
}

def @func_3049(%var_3043: Tensor[(324), float64]) -> (Tensor[(1, 10, 7), float64], Tensor[(9, 3, 12), float64], Tensor[(324), float64]) {
  %721 = cast(%var_3043, dtype="float64") /* ty=Tensor[(324), float64] */;
  %722 = reshape(%721, newshape=[9, 3, 12]) /* ty=Tensor[(9, 3, 12), float64] */;
  %723 = @func_2584(%722) /* ty=(Tensor[(9, 3, 12), float64], Tensor[(1, 10, 7), float64]) */;
  %724 = @func_2030() /* ty=Tensor[(1, 10, 7), float64] */;
  %725 = %723.0;
  (%724, %725, %var_3043)
}

def @func_9107() -> (Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64], Tensor[(2, 4, 12), int32], Tensor[(96), float64]) {
  %726 = @func_2913() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), uint8]) */;
  %727 = cast(meta[relay.Constant][38] /* ty=Tensor[(96), float64] */, dtype="float64") /* ty=Tensor[(96), float64] */;
  %728 = reshape(%727, newshape=[2, 4, 12]) /* ty=Tensor[(2, 4, 12), float64] */;
  %729 = @func_7904(%728) /* ty=(Tensor[(2, 4, 12), int32],) */;
  %730 = %726.2;
  %731 = @func_4308() /* ty=Tensor[(1, 10, 7), float64] */;
  %732 = %729.0;
  (%730, %731, %732, meta[relay.Constant][38] /* ty=Tensor[(96), float64] */)
}

def @func_10294() -> (Tensor[(8, 10, 7), uint8], Tensor[(11, 3, 3), float32], Tensor[(33, 3), float32]) {
  %733 = @func_5499() /* ty=(Tensor[(8, 10, 7), uint8],) */;
  %734 = cast(meta[relay.Constant][39] /* ty=Tensor[(33, 3), float32] */, dtype="float32") /* ty=Tensor[(33, 3), float32] */;
  %735 = reshape(%734, newshape=[11, 3, 3]) /* ty=Tensor[(11, 3, 3), float32] */;
  %736 = @func_7961(%735) /* ty=(Tensor[(11, 3, 3), float32],) */;
  %737 = %733.0;
  %738 = %736.0;
  (%737, %738, meta[relay.Constant][39] /* ty=Tensor[(33, 3), float32] */)
}

def @func_7496() -> (Tensor[(1, 10, 7), float64],) {
  %739 = @func_1362() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64]) */;
  %740 = %739.0;
  (%740,)
}

def @func_9891(%var_9854: Tensor[(3, 14, 2), int32]) -> (Tensor[(3, 14, 2), int32], Tensor[(?, 10, 7), bool], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64]) {
  %741 = cast(%var_9854, dtype="int32") /* ty=Tensor[(3, 14, 2), int32] */;
  %742 = shape_of(meta[relay.Constant][40] /* ty=Tensor[(3, 14, 2), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %743 = cast(meta[relay.Constant][40] /* ty=Tensor[(3, 14, 2), int32] */, dtype="int32") /* ty=Tensor[(3, 14, 2), int32] */;
  %744 = dyn.reshape(%741, %742, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %745 = @func_7036() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %746 = bitwise_and(%743, %744) /* ty=Tensor[(3, 14, 2), int32] */;
  %747 = @func_6179() /* ty=Tensor[(?, 10, 7), bool] */;
  %748 = %745.0;
  %749 = @func_2831() /* ty=Tensor[(1, 10, 7), float64] */;
  (%746, %747, %748, %749)
}

def @func_4771() -> (Tensor[(8, 10, 7), uint8],) {
  %750 = @func_1184() /* ty=(Tensor[(8, 10, 7), uint8], Tensor[(13, 12, 3), float32], Tensor[(468), float64], Tensor[(1120), float64]) */;
  %751 = %750.0;
  (%751,)
}

def @func_6491(%var_6487: Tensor[(8, 2, 3), float32]) -> Tensor[(8, 2, 3), float32] {
  %752 = cast(%var_6487, dtype="float32") /* ty=Tensor[(8, 2, 3), float32] */;
  sinh(%752) /* ty=Tensor[(8, 2, 3), float32] */
}

def @func_5183() -> (Tensor[(8, 10, 7), float32],) {
  %753 = @func_5032() /* ty=(Tensor[(8, 10, 7), uint8], Tensor[(35, 4), float64], Tensor[(35, 4), float64]) */;
  %754 = %753.0;
  %755 = cast(%754, dtype="float32") /* ty=Tensor[(8, 10, 7), float32] */;
  %756 = cosh(%755) /* ty=Tensor[(8, 10, 7), float32] */;
  (%756,)
}

def @func_6800(%var_6792: Tensor[(630), uint8]) -> (Tensor[(?, 10, 7), int8], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(630), uint8]) {
  %757 = @func_1813() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %758 = %757.0;
  %759 = cast(%758, dtype="float32") /* ty=Tensor[(1, 10, 7), float32] */;
  %760 = atan(%759) /* ty=Tensor[(1, 10, 7), float32] */;
  %761 = @func_5694() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %762 = %761.0;
  %763 = cast(%762, dtype="float64") /* ty=Tensor[(1, 10, 7), float64] */;
  %764 = shape_of(%760, dtype="int32") /* ty=Tensor[(3), int32] */;
  %765 = cast(%760, dtype="float64") /* ty=Tensor[(1, 10, 7), float64] */;
  %766 = dyn.reshape(%763, %764, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %767 = mod(%765, %766) /* ty=Tensor[(?, 10, 7), float64] */;
  %768 = cast(%767, dtype="int8") /* ty=Tensor[(?, 10, 7), int8] */;
  %769 = shape_of(%760, dtype="int32") /* ty=Tensor[(3), int32] */;
  %770 = cast(%760, dtype="int8") /* ty=Tensor[(1, 10, 7), int8] */;
  %771 = dyn.reshape(%768, %769, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %772 = cast(%758, dtype="uint8") /* ty=Tensor[(1, 10, 7), uint8] */;
  %773 = cast(%var_6792, dtype="uint8") /* ty=Tensor[(630), uint8] */;
  %774 = cast(%var_6792, dtype="bool") /* ty=Tensor[(630), bool] */;
  %775 = reshape(%772, newshape=[10, 1, 7]) /* ty=Tensor[(10, 1, 7), uint8] */;
  %776 = reshape(%773, newshape=[10, 9, 7]) /* ty=Tensor[(10, 9, 7), uint8] */;
  %777 = reshape(%774, newshape=[10, 9, 7]) /* ty=Tensor[(10, 9, 7), bool] */;
  %778 = @func_2560(%775, %776, %777) /* ty=(Tensor[(10, 9, 7), float64], Tensor[(1, 10, 7), float64]) */;
  %779 = multiply(%770, %771) /* ty=Tensor[(?, 10, 7), int8] */;
  %780 = @func_2953() /* ty=Tensor[(1, 10, 7), float64] */;
  %781 = %778.1;
  (%779, %780, %781, %var_6792)
}

def @func_786() -> Tensor[(1, 10, 7), float64] {
  %782 = cast(meta[relay.Constant][41] /* ty=Tensor[(1, 10, 7), float64] */, dtype="float64") /* ty=Tensor[(1, 10, 7), float64] */;
  sin(%782) /* ty=Tensor[(1, 10, 7), float64] */
}

def @func_10556() -> (Tensor[(1, 10, 7), float64], Tensor[(11, 3, 3), float32], Tensor[(99), float32], Tensor[(1, 10, 7), float64]) {
  %783 = @func_8860() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %784 = cast(meta[relay.Constant][42] /* ty=Tensor[(99), float32] */, dtype="float32") /* ty=Tensor[(99), float32] */;
  %785 = reshape(%784, newshape=[11, 3, 3]) /* ty=Tensor[(11, 3, 3), float32] */;
  %786 = @func_7961(%785) /* ty=(Tensor[(11, 3, 3), float32],) */;
  %787 = @func_7496() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %788 = %783.0;
  %789 = %786.0;
  %790 = %787.0;
  (%788, %789, meta[relay.Constant][42] /* ty=Tensor[(99), float32] */, %790)
}

def @func_7660(%var_7629: Tensor[(8, 10, 7), float32]) -> (Tensor[(8, 10, 7), uint8], Tensor[(8, 10, 7), int16], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32]) {
  %791 = @func_1773() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), uint8]) */;
  %792 = @func_6587() /* ty=Tensor[(8, 10, 7), float32] */;
  %793 = cast(%var_7629, dtype="int16") /* ty=Tensor[(8, 10, 7), int16] */;
  %794 = shape_of(%792, dtype="int32") /* ty=Tensor[(3), int32] */;
  %795 = cast(%792, dtype="int16") /* ty=Tensor[(8, 10, 7), int16] */;
  %796 = dyn.reshape(%793, %794, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %797 = @func_2913() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), uint8]) */;
  %798 = @func_3999() /* ty=(Tensor[(13, 12, 3), float32], Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32], Tensor[(1, 10, 7), float64]) */;
  %799 = %791.1;
  %800 = bitwise_and(%795, %796) /* ty=Tensor[(8, 10, 7), int16] */;
  %801 = %797.0;
  %802 = @func_4654() /* ty=Tensor[(1, 10, 7), float64] */;
  %803 = %798.2;
  (%799, %800, %801, %802, %803)
}

def @func_7020(%var_6983: Tensor[(13, 15, 4), int16], %var_6984: Tensor[(13, 15, 4), int16], %var_7007: Tensor[(25, 6), float64], %var_7018: Tensor[(768), int64]) -> (Tensor[(13, 15, 4), bool], Tensor[(13, 12, 3), float64], Tensor[(1, 10, 7), float64], Tensor[(324), float64], Tensor[(5, 15, 2), float64], Tensor[(25, 6), float64], Tensor[(1, 10, 7), float64], Tensor[(768), int64], Tensor[(768), int64]) {
  %804 = cast(%var_6984, dtype="bool") /* ty=Tensor[(13, 15, 4), bool] */;
  %805 = shape_of(%var_6983, dtype="int32") /* ty=Tensor[(3), int32] */;
  %806 = cast(%var_6983, dtype="bool") /* ty=Tensor[(13, 15, 4), bool] */;
  %807 = dyn.reshape(%804, %805, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %808 = @func_5598() /* ty=(Tensor[(13, 12, 3), float64],) */;
  %809 = cast(meta[relay.Constant][43] /* ty=Tensor[(324), float64] */, dtype="float64") /* ty=Tensor[(324), float64] */;
  %810 = reshape(%809, newshape=[9, 3, 12]) /* ty=Tensor[(9, 3, 12), float64] */;
  %811 = @func_2584(%810) /* ty=(Tensor[(9, 3, 12), float64], Tensor[(1, 10, 7), float64]) */;
  %812 = cast(%var_7007, dtype="float64") /* ty=Tensor[(25, 6), float64] */;
  %813 = reshape(%812, newshape=[5, 15, 2]) /* ty=Tensor[(5, 15, 2), float64] */;
  %814 = @func_3940() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %815 = cast(%var_7018, dtype="int64") /* ty=Tensor[(768), int64] */;
  %816 = reshape(%815, newshape=[768]) /* ty=Tensor[(768), int64] */;
  %817 = @func_3831(%816) /* ty=(Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(768), int64]) */;
  %818 = equal(%806, %807) /* ty=Tensor[(13, 15, 4), bool] */;
  %819 = %808.0;
  %820 = %811.1;
  %821 = @func_3516(%813) /* ty=Tensor[(5, 15, 2), float64] */;
  %822 = %814.0;
  %823 = %817.2;
  (%818, %819, %820, meta[relay.Constant][43] /* ty=Tensor[(324), float64] */, %821, %var_7007, %822, %823, %var_7018)
}

def @func_1958(%var_1867: Tensor[(12, 8, 8), int64]) -> (Tensor[(12, 8, 8), bool], Tensor[(8, 10, 7), float64], Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32]) {
  %824 = cast(3 /* ty=int64 */, dtype="bool") /* ty=bool */;
  %825 = cast(%var_1867, dtype="bool") /* ty=Tensor[(12, 8, 8), bool] */;
  %826 = @func_978() /* ty=Tensor[(8, 10, 7), uint8] */;
  %827 = cast(%826, dtype="float64") /* ty=Tensor[(8, 10, 7), float64] */;
  %828 = atanh(%827) /* ty=Tensor[(8, 10, 7), float64] */;
  %829 = cast(%828, dtype="float64") /* ty=Tensor[(8, 10, 7), float64] */;
  %830 = @func_1653() /* ty=(Tensor[(8, 10, 7), uint8],) */;
  %831 = @func_810() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %832 = @func_1773() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), uint8]) */;
  %833 = @func_1184() /* ty=(Tensor[(8, 10, 7), uint8], Tensor[(13, 12, 3), float32], Tensor[(468), float64], Tensor[(1120), float64]) */;
  %834 = greater(%824, %825) /* ty=Tensor[(12, 8, 8), bool] */;
  %835 = sinh(%829) /* ty=Tensor[(8, 10, 7), float64] */;
  %836 = %830.0;
  %837 = @func_1757() /* ty=Tensor[(1, 10, 7), float64] */;
  %838 = %831.0;
  %839 = %832.0;
  %840 = %833.1;
  (%834, %835, %836, %837, %838, %839, %840)
}

def @func_5072() -> Tensor[(15, 10, 7), uint32] {
  %841 = @func_3503() /* ty=Tensor[(1, 10, 7), float64] */;
  %842 = cast(%841, dtype="uint32") /* ty=Tensor[(1, 10, 7), uint32] */;
  %843 = cast(meta[relay.Constant][44] /* ty=Tensor[(15, 10, 7), float64] */, dtype="uint32") /* ty=Tensor[(15, 10, 7), uint32] */;
  right_shift(%842, %843) /* ty=Tensor[(15, 10, 7), uint32] */
}

def @func_810() -> (Tensor[(1, 10, 7), float64],) {
  %844 = @func_786() /* ty=Tensor[(1, 10, 7), float64] */;
  (%844,)
}

def @func_10032(%var_10004: Tensor[(8, 7, 16), float64]) -> (Tensor[(8, 7, 16), float64], Tensor[(1, 10, 7), float64]) {
  %845 = cast(%var_10004, dtype="float64") /* ty=Tensor[(8, 7, 16), float64] */;
  %846 = shape_of(meta[relay.Constant][45] /* ty=Tensor[(8, 7, 16), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %847 = cast(meta[relay.Constant][45] /* ty=Tensor[(8, 7, 16), float64] */, dtype="float64") /* ty=Tensor[(8, 7, 16), float64] */;
  %848 = dyn.reshape(%845, %846, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %849 = floor_mod(%847, %848) /* ty=Tensor[(8, 7, 16), float64] */;
  %850 = @func_3067() /* ty=Tensor[(1, 10, 7), float64] */;
  (%849, %850)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_2914() -> (Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), uint8]) {
  %4 = fn () -> (Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), uint8]) {
    %0 = @func_1129() /* ty=(Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), uint8], Tensor[(8, 10, 7), float64]) */;
    %1 = @func_2831() /* ty=Tensor[(1, 10, 7), float64] */;
    %2 = @func_1757() /* ty=Tensor[(1, 10, 7), float64] */;
    %3 = %0.0;
    (%1, %2, %3)
  };
  %4() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), uint8]) */
}

def @func_10557() -> (Tensor[(1, 10, 7), float64], Tensor[(11, 3, 3), float32], Tensor[(99), float32], Tensor[(1, 10, 7), float64]) {
  %13 = fn () -> (Tensor[(1, 10, 7), float64], Tensor[(11, 3, 3), float32], Tensor[(99), float32], Tensor[(1, 10, 7), float64]) {
    %5 = @func_8860() /* ty=(Tensor[(1, 10, 7), float64],) */;
    %6 = cast(meta[relay.Constant][0] /* ty=Tensor[(99), float32] */, dtype="float32") /* ty=Tensor[(99), float32] */;
    %7 = reshape(%6, newshape=[11, 3, 3]) /* ty=Tensor[(11, 3, 3), float32] */;
    %8 = @func_7961(%7) /* ty=(Tensor[(11, 3, 3), float32],) */;
    %9 = @func_7496() /* ty=(Tensor[(1, 10, 7), float64],) */;
    %10 = %5.0;
    %11 = %8.0;
    %12 = %9.0;
    (%10, %11, meta[relay.Constant][0] /* ty=Tensor[(99), float32] */, %12)
  };
  %13() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(11, 3, 3), float32], Tensor[(99), float32], Tensor[(1, 10, 7), float64]) */
}

def @func_7713() -> (Tensor[(16, 10, 7), bool], Tensor[(16, 10, 7), bool]) {
  @func_7711() /* ty=(Tensor[(16, 10, 7), bool], Tensor[(16, 10, 7), bool]) */
}

def @func_3067() -> Tensor[(1, 10, 7), float64] {
  %14 = @func_1457() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %14.0
}

def @func_6861(%var_6847: Tensor[(14, 11, 7), bool], %var_6848: Tensor[(14, 11, 7), bool]) -> Tensor[(14, 11, 7), bool] {
  %15 = cast(%var_6848, dtype="bool") /* ty=Tensor[(14, 11, 7), bool] */;
  %16 = shape_of(%var_6847, dtype="int32") /* ty=Tensor[(3), int32] */;
  %17 = cast(%var_6847, dtype="bool") /* ty=Tensor[(14, 11, 7), bool] */;
  %18 = dyn.reshape(%15, %16, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%17, %18) /* ty=Tensor[(14, 11, 7), bool] */
}

def @func_2642(%var_2640: Tensor[(324), float64]) -> (Tensor[(1, 10, 7), float64], Tensor[(9, 3, 12), float64], Tensor[(324), float64]) {
  @func_2639(%var_2640) /* ty=(Tensor[(1, 10, 7), float64], Tensor[(9, 3, 12), float64], Tensor[(324), float64]) */
}

def @func_4861() -> (Tensor[(3, 11, 12), uint16], Tensor[(1, 10, 7), float64]) {
  %19 = @func_2831() /* ty=Tensor[(1, 10, 7), float64] */;
  %20 = cast(%19, dtype="float64") /* ty=Tensor[(1, 10, 7), float64] */;
  %21 = @func_3924() /* ty=Tensor[(3, 11, 12), uint16] */;
  %22 = log(%20) /* ty=Tensor[(1, 10, 7), float64] */;
  (%21, %22)
}

def @func_1813() -> (Tensor[(1, 10, 7), float64],) {
  %23 = @func_1457() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %24 = %23.0;
  (%24,)
}

def @func_3605() -> (Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64]) {
  @func_3603() /* ty=(Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64]) */
}

def @func_6007(%var_6006: Tensor[(2, 560), float64]) -> (Tensor[(1, 10, 7), float64], Tensor[(2, 560), bool]) {
  %34 = fn (%var_5975: Tensor[(2, 560), float64]) -> (Tensor[(1, 10, 7), float64], Tensor[(2, 560), bool]) {
    %25 = cast(%var_5975, dtype="float64") /* ty=Tensor[(2, 560), float64] */;
    %26 = reshape(%25, newshape=[16, 10, 7]) /* ty=Tensor[(16, 10, 7), float64] */;
    %27 = @func_893(%26) /* ty=Tensor[(16, 10, 7), bool] */;
    %28 = cast(%27, dtype="bool") /* ty=Tensor[(16, 10, 7), bool] */;
    %29 = shape_of(%var_5975, dtype="int32") /* ty=Tensor[(2), int32] */;
    %30 = cast(%var_5975, dtype="bool") /* ty=Tensor[(2, 560), bool] */;
    %31 = dyn.reshape(%28, %29, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %32 = @func_4654() /* ty=Tensor[(1, 10, 7), float64] */;
    %33 = greater(%30, %31) /* ty=Tensor[(2, 560), bool] */;
    (%32, %33)
  };
  %34(%var_6006) /* ty=(Tensor[(1, 10, 7), float64], Tensor[(2, 560), bool]) */
}

def @func_1131() -> (Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), uint8], Tensor[(8, 10, 7), float64]) {
  @func_1129() /* ty=(Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), uint8], Tensor[(8, 10, 7), float64]) */
}

def @func_7025(%var_7021: Tensor[(13, 15, 4), int16], %var_7022: Tensor[(13, 15, 4), int16], %var_7023: Tensor[(25, 6), float64], %var_7024: Tensor[(768), int64]) -> (Tensor[(13, 15, 4), bool], Tensor[(13, 12, 3), float64], Tensor[(1, 10, 7), float64], Tensor[(324), float64], Tensor[(5, 15, 2), float64], Tensor[(25, 6), float64], Tensor[(1, 10, 7), float64], Tensor[(768), int64], Tensor[(768), int64]) {
  %55 = fn (%var_6983: Tensor[(13, 15, 4), int16], %var_6984: Tensor[(13, 15, 4), int16], %var_7007: Tensor[(25, 6), float64], %var_7018: Tensor[(768), int64]) -> (Tensor[(13, 15, 4), bool], Tensor[(13, 12, 3), float64], Tensor[(1, 10, 7), float64], Tensor[(324), float64], Tensor[(5, 15, 2), float64], Tensor[(25, 6), float64], Tensor[(1, 10, 7), float64], Tensor[(768), int64], Tensor[(768), int64]) {
    %35 = cast(%var_6984, dtype="bool") /* ty=Tensor[(13, 15, 4), bool] */;
    %36 = shape_of(%var_6983, dtype="int32") /* ty=Tensor[(3), int32] */;
    %37 = cast(%var_6983, dtype="bool") /* ty=Tensor[(13, 15, 4), bool] */;
    %38 = dyn.reshape(%35, %36, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %39 = @func_5598() /* ty=(Tensor[(13, 12, 3), float64],) */;
    %40 = cast(meta[relay.Constant][1] /* ty=Tensor[(324), float64] */, dtype="float64") /* ty=Tensor[(324), float64] */;
    %41 = reshape(%40, newshape=[9, 3, 12]) /* ty=Tensor[(9, 3, 12), float64] */;
    %42 = @func_2584(%41) /* ty=(Tensor[(9, 3, 12), float64], Tensor[(1, 10, 7), float64]) */;
    %43 = cast(%var_7007, dtype="float64") /* ty=Tensor[(25, 6), float64] */;
    %44 = reshape(%43, newshape=[5, 15, 2]) /* ty=Tensor[(5, 15, 2), float64] */;
    %45 = @func_3940() /* ty=(Tensor[(1, 10, 7), float64],) */;
    %46 = cast(%var_7018, dtype="int64") /* ty=Tensor[(768), int64] */;
    %47 = reshape(%46, newshape=[768]) /* ty=Tensor[(768), int64] */;
    %48 = @func_3831(%47) /* ty=(Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(768), int64]) */;
    %49 = equal(%37, %38) /* ty=Tensor[(13, 15, 4), bool] */;
    %50 = %39.0;
    %51 = %42.1;
    %52 = @func_3516(%44) /* ty=Tensor[(5, 15, 2), float64] */;
    %53 = %45.0;
    %54 = %48.2;
    (%49, %50, %51, meta[relay.Constant][1] /* ty=Tensor[(324), float64] */, %52, %var_7007, %53, %54, %var_7018)
  };
  %55(%var_7021, %var_7022, %var_7023, %var_7024) /* ty=(Tensor[(13, 15, 4), bool], Tensor[(13, 12, 3), float64], Tensor[(1, 10, 7), float64], Tensor[(324), float64], Tensor[(5, 15, 2), float64], Tensor[(25, 6), float64], Tensor[(1, 10, 7), float64], Tensor[(768), int64], Tensor[(768), int64]) */
}

def @func_10105(%var_10103: Tensor[(14, 1, 3), float64], %var_10104: Tensor[(14, 15, 3), float64]) -> (Tensor[(14, 15, 3), bool],) {
  %61 = fn (%var_10088: Tensor[(14, 1, 3), float64], %var_10095: Tensor[(14, 15, 3), float64]) -> (Tensor[(14, 15, 3), bool],) {
    %56 = cast(%var_10088, dtype="float64") /* ty=Tensor[(14, 1, 3), float64] */;
    %57 = tan(%56) /* ty=Tensor[(14, 1, 3), float64] */;
    %58 = cast(%57, dtype="bool") /* ty=Tensor[(14, 1, 3), bool] */;
    %59 = cast(%var_10095, dtype="bool") /* ty=Tensor[(14, 15, 3), bool] */;
    %60 = less(%58, %59) /* ty=Tensor[(14, 15, 3), bool] */;
    (%60,)
  };
  %61(%var_10103, %var_10104) /* ty=(Tensor[(14, 15, 3), bool],) */
}

def @func_4879(%var_4870: Tensor[(35, 4), float64]) -> (Tensor[(1, 10, 7), float64], Tensor[(2, 10, 7), int8], Tensor[(35, 4), float64], Tensor[(768), int64]) {
  %62 = @func_3940() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %63 = cast(%var_4870, dtype="float64") /* ty=Tensor[(35, 4), float64] */;
  %64 = cast(meta[relay.Constant][2] /* ty=Tensor[(768), int64] */, dtype="int64") /* ty=Tensor[(768), int64] */;
  %65 = reshape(%63, newshape=[2, 10, 7]) /* ty=Tensor[(2, 10, 7), float64] */;
  %66 = reshape(%64, newshape=[768]) /* ty=Tensor[(768), int64] */;
  %67 = @func_3547(%65, %66) /* ty=(Tensor[(2, 10, 7), int8], Tensor[(1, 10, 7), float64], Tensor[(768), int64]) */;
  %68 = %62.0;
  %69 = %67.0;
  (%68, %69, %var_4870, meta[relay.Constant][2] /* ty=Tensor[(768), int64] */)
}

def @func_8447(%var_8446: Tensor[(13, 12, 3), float32]) -> (Tensor[(13, 12, 3), bool], Tensor[(8, 11, 4), float32], Tensor[(352), float32], Tensor[(13, 12, 3), float32], Tensor[(1, 10, 7), float64]) {
  %88 = fn (%var_8378: Tensor[(13, 12, 3), float32]) -> (Tensor[(13, 12, 3), bool], Tensor[(8, 11, 4), float32], Tensor[(352), float32], Tensor[(13, 12, 3), float32], Tensor[(1, 10, 7), float64]) {
    %70 = @func_2345() /* ty=(Tensor[(13, 12, 3), float32],) */;
    %71 = %70.0;
    %72 = cast(%var_8378, dtype="bool") /* ty=Tensor[(13, 12, 3), bool] */;
    %73 = shape_of(%71, dtype="int32") /* ty=Tensor[(3), int32] */;
    %74 = cast(%71, dtype="bool") /* ty=Tensor[(13, 12, 3), bool] */;
    %75 = dyn.reshape(%72, %73, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %76 = cast(meta[relay.Constant][3] /* ty=Tensor[(352), float32] */, dtype="float32") /* ty=Tensor[(352), float32] */;
    %77 = reshape(%76, newshape=[8, 11, 4]) /* ty=Tensor[(8, 11, 4), float32] */;
    %78 = @func_470(%77) /* ty=(Tensor[(8, 11, 4), float32],) */;
    %79 = cast(%71, dtype="float32") /* ty=Tensor[(13, 12, 3), float32] */;
    %80 = shape_of(%var_8378, dtype="int32") /* ty=Tensor[(3), int32] */;
    %81 = cast(%var_8378, dtype="float32") /* ty=Tensor[(13, 12, 3), float32] */;
    %82 = dyn.reshape(%79, %80, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %83 = @func_5646() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(?, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(3, 10, 7), int32]) */;
    %84 = not_equal(%74, %75) /* ty=Tensor[(13, 12, 3), bool] */;
    %85 = %78.0;
    %86 = mod(%81, %82) /* ty=Tensor[(13, 12, 3), float32] */;
    %87 = %83.0;
    (%84, %85, meta[relay.Constant][3] /* ty=Tensor[(352), float32] */, %86, %87)
  };
  %88(%var_8446) /* ty=(Tensor[(13, 12, 3), bool], Tensor[(8, 11, 4), float32], Tensor[(352), float32], Tensor[(13, 12, 3), float32], Tensor[(1, 10, 7), float64]) */
}

def @func_1363() -> (Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64]) {
  %93 = fn () -> (Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64]) {
    %89 = @func_1129() /* ty=(Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), uint8], Tensor[(8, 10, 7), float64]) */;
    %90 = @func_810() /* ty=(Tensor[(1, 10, 7), float64],) */;
    %91 = %89.1;
    %92 = %90.0;
    (%91, %92)
  };
  %93() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64]) */
}

def @func_10294() -> (Tensor[(8, 10, 7), uint8], Tensor[(11, 3, 3), float32], Tensor[(33, 3), float32]) {
  %94 = @func_5499() /* ty=(Tensor[(8, 10, 7), uint8],) */;
  %95 = cast(meta[relay.Constant][4] /* ty=Tensor[(33, 3), float32] */, dtype="float32") /* ty=Tensor[(33, 3), float32] */;
  %96 = reshape(%95, newshape=[11, 3, 3]) /* ty=Tensor[(11, 3, 3), float32] */;
  %97 = @func_7961(%96) /* ty=(Tensor[(11, 3, 3), float32],) */;
  %98 = %94.0;
  %99 = %97.0;
  (%98, %99, meta[relay.Constant][4] /* ty=Tensor[(33, 3), float32] */)
}

def @func_8733() -> (Tensor[(8, 10, 7), uint8],) {
  @func_8731() /* ty=(Tensor[(8, 10, 7), uint8],) */
}

def @func_9134() -> (Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64]) {
  @func_9132() /* ty=(Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64]) */
}

def @func_9255() -> (Tensor[(1, 10, 7), float64],) {
  %101 = fn () -> (Tensor[(1, 10, 7), float64],) {
    %100 = @func_1757() /* ty=Tensor[(1, 10, 7), float64] */;
    (%100,)
  };
  %101() /* ty=(Tensor[(1, 10, 7), float64],) */
}

def @func_1184() -> (Tensor[(8, 10, 7), uint8], Tensor[(13, 12, 3), float32], Tensor[(468), float64], Tensor[(1120), float64]) {
  %102 = cast(meta[relay.Constant][5] /* ty=Tensor[(468), float64] */, dtype="float64") /* ty=Tensor[(468), float64] */;
  %103 = cast(meta[relay.Constant][6] /* ty=Tensor[(1120), float64] */, dtype="float64") /* ty=Tensor[(1120), float64] */;
  %104 = reshape(%102, newshape=[13, 12, 3]) /* ty=Tensor[(13, 12, 3), float64] */;
  %105 = reshape(%103, newshape=[1, 1120]) /* ty=Tensor[(1, 1120), float64] */;
  %106 = @func_1072(%104, %105) /* ty=(Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32], Tensor[(16, 10, 7), bool], Tensor[(1, 1120), float64]) */;
  %107 = @func_978() /* ty=Tensor[(8, 10, 7), uint8] */;
  %108 = %106.1;
  (%107, %108, meta[relay.Constant][5] /* ty=Tensor[(468), float64] */, meta[relay.Constant][6] /* ty=Tensor[(1120), float64] */)
}

def @func_5648() -> (Tensor[(1, 10, 7), float64], Tensor[(?, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(3, 10, 7), int32]) {
  @func_5646() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(?, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(3, 10, 7), int32]) */
}

def @func_2766(%var_2762: Tensor[(8, 2, 2), float32]) -> Tensor[(8, 2, 2), float32] {
  %109 = cast(%var_2762, dtype="float32") /* ty=Tensor[(8, 2, 2), float32] */;
  rsqrt(%109) /* ty=Tensor[(8, 2, 2), float32] */
}

def @func_3125(%var_3123: Tensor[(770), float32]) -> (Tensor[(1120), float32], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), uint8], Tensor[(770), float32]) {
  @func_3122(%var_3123) /* ty=(Tensor[(1120), float32], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), uint8], Tensor[(770), float32]) */
}

def @func_739(%var_737: Tensor[(8, 13, 15), float32]) -> (Tensor[(8, 13, 15), float32],) {
  @func_736(%var_737) /* ty=(Tensor[(8, 13, 15), float32],) */
}

def @func_7859() -> Tensor[(8, 10, 7), uint8] {
  %111 = fn () -> Tensor[(8, 10, 7), uint8] {
    %110 = @func_7240() /* ty=(Tensor[(8, 10, 7), uint8],) */;
    %110.0
  };
  %111() /* ty=Tensor[(8, 10, 7), uint8] */
}

def @func_5599() -> (Tensor[(13, 12, 3), float64],) {
  %116 = fn () -> (Tensor[(13, 12, 3), float64],) {
    %112 = @func_3999() /* ty=(Tensor[(13, 12, 3), float32], Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32], Tensor[(1, 10, 7), float64]) */;
    %113 = %112.0;
    %114 = cast(%113, dtype="float64") /* ty=Tensor[(13, 12, 3), float64] */;
    %115 = sqrt(%114) /* ty=Tensor[(13, 12, 3), float64] */;
    (%115,)
  };
  %116() /* ty=(Tensor[(13, 12, 3), float64],) */
}

def @func_5033() -> (Tensor[(8, 10, 7), uint8], Tensor[(35, 4), float64], Tensor[(35, 4), float64]) {
  %122 = fn () -> (Tensor[(8, 10, 7), uint8], Tensor[(35, 4), float64], Tensor[(35, 4), float64]) {
    %117 = cast(meta[relay.Constant][7] /* ty=Tensor[(35, 4), float64] */, dtype="float64") /* ty=Tensor[(35, 4), float64] */;
    %118 = reshape(%117, newshape=[35, 4]) /* ty=Tensor[(35, 4), float64] */;
    %119 = @func_4879(%118) /* ty=(Tensor[(1, 10, 7), float64], Tensor[(2, 10, 7), int8], Tensor[(35, 4), float64], Tensor[(768), int64]) */;
    %120 = @func_978() /* ty=Tensor[(8, 10, 7), uint8] */;
    %121 = %119.2;
    (%120, %121, meta[relay.Constant][7] /* ty=Tensor[(35, 4), float64] */)
  };
  %122() /* ty=(Tensor[(8, 10, 7), uint8], Tensor[(35, 4), float64], Tensor[(35, 4), float64]) */
}

def @func_6653() -> Tensor[(?, 10, 7), uint32] {
  %123 = @func_4139() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %124 = %123.0;
  %125 = cast(meta[relay.Constant][8] /* ty=Tensor[(1, 10, 7), float64] */, dtype="uint32") /* ty=Tensor[(1, 10, 7), uint32] */;
  %126 = shape_of(%124, dtype="int32") /* ty=Tensor[(3), int32] */;
  %127 = cast(%124, dtype="uint32") /* ty=Tensor[(1, 10, 7), uint32] */;
  %128 = dyn.reshape(%125, %126, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  add(%127, %128) /* ty=Tensor[(?, 10, 7), uint32] */
}

def @func_9752() -> (Tensor[(8, 10, 7), uint8],) {
  %129 = @func_4771() /* ty=(Tensor[(8, 10, 7), uint8],) */;
  %130 = %129.0;
  (%130,)
}

def @func_9846() -> Tensor[(8, 10, 7), uint8] {
  @func_9844() /* ty=Tensor[(8, 10, 7), uint8] */
}

def @func_8066() -> (Tensor[(1, 10, 7), float64], Tensor[(3, 11, 12), uint16]) {
  %135 = fn () -> (Tensor[(1, 10, 7), float64], Tensor[(3, 11, 12), uint16]) {
    %131 = @func_1129() /* ty=(Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), uint8], Tensor[(8, 10, 7), float64]) */;
    %132 = @func_4861() /* ty=(Tensor[(3, 11, 12), uint16], Tensor[(1, 10, 7), float64]) */;
    %133 = %131.1;
    %134 = %132.0;
    (%133, %134)
  };
  %135() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(3, 11, 12), uint16]) */
}

def @func_3617() -> (Tensor[(1, 10, 7), float64],) {
  @func_3615() /* ty=(Tensor[(1, 10, 7), float64],) */
}

def @func_2121() -> Tensor[(1, 10, 7), float64] {
  %136 = @func_1392() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64]) */;
  %136.0
}

def @func_7907(%var_7905: Tensor[(2, 4, 12), float64]) -> (Tensor[(2, 4, 12), int32],) {
  @func_7904(%var_7905) /* ty=(Tensor[(2, 4, 12), int32],) */
}

def @func_10529(%var_10527: Tensor[(630), float64]) -> (Tensor[(8, 10, 7), float32], Tensor[(1, 10, 7), float64], Tensor[(14, 15, 3), bool], Tensor[(14, 3), float64], Tensor[(630), float64]) {
  @func_10526(%var_10527) /* ty=(Tensor[(8, 10, 7), float32], Tensor[(1, 10, 7), float64], Tensor[(14, 15, 3), bool], Tensor[(14, 3), float64], Tensor[(630), float64]) */
}

def @func_9891(%var_9854: Tensor[(3, 14, 2), int32]) -> (Tensor[(3, 14, 2), int32], Tensor[(?, 10, 7), bool], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64]) {
  %137 = cast(%var_9854, dtype="int32") /* ty=Tensor[(3, 14, 2), int32] */;
  %138 = shape_of(meta[relay.Constant][9] /* ty=Tensor[(3, 14, 2), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %139 = cast(meta[relay.Constant][9] /* ty=Tensor[(3, 14, 2), int32] */, dtype="int32") /* ty=Tensor[(3, 14, 2), int32] */;
  %140 = dyn.reshape(%137, %138, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %141 = @func_7036() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %142 = bitwise_and(%139, %140) /* ty=Tensor[(3, 14, 2), int32] */;
  %143 = @func_6179() /* ty=Tensor[(?, 10, 7), bool] */;
  %144 = %141.0;
  %145 = @func_2831() /* ty=Tensor[(1, 10, 7), float64] */;
  (%142, %143, %144, %145)
}

def @func_2689(%var_2687: Tensor[(7, 12, 15), int8]) -> (Tensor[(7, 12, 15), uint8], Tensor[(1, 10, 7), float64], Tensor[(768), int64]) {
  @func_2686(%var_2687) /* ty=(Tensor[(7, 12, 15), uint8], Tensor[(1, 10, 7), float64], Tensor[(768), int64]) */
}

def @func_3069() -> Tensor[(1, 10, 7), float64] {
  @func_3067() /* ty=Tensor[(1, 10, 7), float64] */
}

def @func_9132() -> (Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64]) {
  %146 = @func_4771() /* ty=(Tensor[(8, 10, 7), uint8],) */;
  %147 = @func_2816() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(1120), float64]) */;
  %148 = %146.0;
  %149 = @func_3082() /* ty=Tensor[(1, 10, 7), float64] */;
  %150 = %147.4;
  (%148, %149, %150)
}

def @func_3051(%var_3050: Tensor[(324), float64]) -> (Tensor[(1, 10, 7), float64], Tensor[(9, 3, 12), float64], Tensor[(324), float64]) {
  %156 = fn (%var_3043: Tensor[(324), float64]) -> (Tensor[(1, 10, 7), float64], Tensor[(9, 3, 12), float64], Tensor[(324), float64]) {
    %151 = cast(%var_3043, dtype="float64") /* ty=Tensor[(324), float64] */;
    %152 = reshape(%151, newshape=[9, 3, 12]) /* ty=Tensor[(9, 3, 12), float64] */;
    %153 = @func_2584(%152) /* ty=(Tensor[(9, 3, 12), float64], Tensor[(1, 10, 7), float64]) */;
    %154 = @func_2030() /* ty=Tensor[(1, 10, 7), float64] */;
    %155 = %153.0;
    (%154, %155, %var_3043)
  };
  %156(%var_3050) /* ty=(Tensor[(1, 10, 7), float64], Tensor[(9, 3, 12), float64], Tensor[(324), float64]) */
}

def @func_8207() -> (Tensor[(3, 11, 12), float64], Tensor[(16, 10, 7), bool]) {
  %164 = fn () -> (Tensor[(3, 11, 12), float64], Tensor[(16, 10, 7), bool]) {
    %157 = @func_3924() /* ty=Tensor[(3, 11, 12), uint16] */;
    %158 = cast(%157, dtype="float32") /* ty=Tensor[(3, 11, 12), float32] */;
    %159 = sin(%158) /* ty=Tensor[(3, 11, 12), float32] */;
    %160 = cast(%159, dtype="float64") /* ty=Tensor[(3, 11, 12), float64] */;
    %161 = @func_7711() /* ty=(Tensor[(16, 10, 7), bool], Tensor[(16, 10, 7), bool]) */;
    %162 = cos(%160) /* ty=Tensor[(3, 11, 12), float64] */;
    %163 = %161.1;
    (%162, %163)
  };
  %164() /* ty=(Tensor[(3, 11, 12), float64], Tensor[(16, 10, 7), bool]) */
}

def @func_3925() -> Tensor[(3, 11, 12), uint16] {
  %171 = fn () -> Tensor[(3, 11, 12), uint16] {
    %165 = cast(meta[relay.Constant][10] /* ty=Tensor[(3, 11, 12), float32] */, dtype="float32") /* ty=Tensor[(3, 11, 12), float32] */;
    %166 = log(%165) /* ty=Tensor[(3, 11, 12), float32] */;
    %167 = cast(meta[relay.Constant][11] /* ty=Tensor[(3, 11, 12), float32] */, dtype="uint16") /* ty=Tensor[(3, 11, 12), uint16] */;
    %168 = shape_of(%166, dtype="int32") /* ty=Tensor[(3), int32] */;
    %169 = cast(%166, dtype="uint16") /* ty=Tensor[(3, 11, 12), uint16] */;
    %170 = dyn.reshape(%167, %168, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    right_shift(%169, %170) /* ty=Tensor[(3, 11, 12), uint16] */
  };
  %171() /* ty=Tensor[(3, 11, 12), uint16] */
}

def @func_4457(%var_4455: Tensor[(9, 13, 12), float32], %var_4456: Tensor[(280, 4), float64]) -> (Tensor[(9, 13, 12), float32], Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32], Tensor[(468, 1), float64], Tensor[(280, 4), float64]) {
  %182 = fn (%var_4440: Tensor[(9, 13, 12), float32], %var_4450: Tensor[(280, 4), float64]) -> (Tensor[(9, 13, 12), float32], Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32], Tensor[(468, 1), float64], Tensor[(280, 4), float64]) {
    %172 = cast(meta[relay.Constant][12] /* ty=Tensor[(9, 13, 1), float32] */, dtype="float32") /* ty=Tensor[(9, 13, 1), float32] */;
    %173 = cast(%var_4440, dtype="float32") /* ty=Tensor[(9, 13, 12), float32] */;
    %174 = cast(meta[relay.Constant][13] /* ty=Tensor[(468, 1), float64] */, dtype="float64") /* ty=Tensor[(468, 1), float64] */;
    %175 = cast(%var_4450, dtype="float64") /* ty=Tensor[(280, 4), float64] */;
    %176 = reshape(%174, newshape=[13, 12, 3]) /* ty=Tensor[(13, 12, 3), float64] */;
    %177 = reshape(%175, newshape=[1, 1120]) /* ty=Tensor[(1, 1120), float64] */;
    %178 = @func_1072(%176, %177) /* ty=(Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32], Tensor[(16, 10, 7), bool], Tensor[(1, 1120), float64]) */;
    %179 = floor_divide(%172, %173) /* ty=Tensor[(9, 13, 12), float32] */;
    %180 = @func_2030() /* ty=Tensor[(1, 10, 7), float64] */;
    %181 = %178.1;
    (%179, %180, %181, meta[relay.Constant][13] /* ty=Tensor[(468, 1), float64] */, %var_4450)
  };
  %182(%var_4455, %var_4456) /* ty=(Tensor[(9, 13, 12), float32], Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32], Tensor[(468, 1), float64], Tensor[(280, 4), float64]) */
}

def @func_4012() -> (Tensor[(1, 10, 7), float64],) {
  %183 = @func_3940() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %184 = %183.0;
  (%184,)
}

def @func_8827(%var_8798: Tensor[(10, 16, 3), uint16], %var_8799: Tensor[(10, 16, 3), uint16]) -> (Tensor[(10, 16, 3), uint64],) {
  %185 = cast(%var_8799, dtype="bool") /* ty=Tensor[(10, 16, 3), bool] */;
  %186 = shape_of(%var_8798, dtype="int32") /* ty=Tensor[(3), int32] */;
  %187 = cast(%var_8798, dtype="bool") /* ty=Tensor[(10, 16, 3), bool] */;
  %188 = dyn.reshape(%185, %186, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %189 = greater(%187, %188) /* ty=Tensor[(10, 16, 3), bool] */;
  %190 = cast(%189, dtype="uint64") /* ty=Tensor[(10, 16, 3), uint64] */;
  %191 = shape_of(%var_8799, dtype="int32") /* ty=Tensor[(3), int32] */;
  %192 = cast(%var_8799, dtype="uint64") /* ty=Tensor[(10, 16, 3), uint64] */;
  %193 = dyn.reshape(%190, %191, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %194 = bitwise_or(%192, %193) /* ty=Tensor[(10, 16, 3), uint64] */;
  (%194,)
}

def @func_3518(%var_3517: Tensor[(5, 15, 2), float64]) -> Tensor[(5, 15, 2), float64] {
  %196 = fn (%var_3513: Tensor[(5, 15, 2), float64]) -> Tensor[(5, 15, 2), float64] {
    %195 = cast(%var_3513, dtype="float64") /* ty=Tensor[(5, 15, 2), float64] */;
    atanh(%195) /* ty=Tensor[(5, 15, 2), float64] */
  };
  %196(%var_3517) /* ty=Tensor[(5, 15, 2), float64] */
}

def @func_1725(%var_1692: Tensor[(11, 10, 7), float32]) -> (Tensor[(11, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64]) {
  %197 = @func_810() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %198 = %197.0;
  %199 = cast(%198, dtype="float32") /* ty=Tensor[(1, 10, 7), float32] */;
  %200 = atanh(%199) /* ty=Tensor[(1, 10, 7), float32] */;
  %201 = cast(%200, dtype="float64") /* ty=Tensor[(1, 10, 7), float64] */;
  %202 = cast(%var_1692, dtype="float64") /* ty=Tensor[(11, 10, 7), float64] */;
  %203 = @func_1362() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64]) */;
  %204 = @func_1653() /* ty=(Tensor[(8, 10, 7), uint8],) */;
  %205 = power(%201, %202) /* ty=Tensor[(11, 10, 7), float64] */;
  %206 = %203.0;
  %207 = %204.0;
  %208 = @func_786() /* ty=Tensor[(1, 10, 7), float64] */;
  (%205, %206, %207, %208)
}

def @func_7112() -> Tensor[(1, 10, 7), float64] {
  @func_7110() /* ty=Tensor[(1, 10, 7), float64] */
}

def @func_786() -> Tensor[(1, 10, 7), float64] {
  %209 = cast(meta[relay.Constant][14] /* ty=Tensor[(1, 10, 7), float64] */, dtype="float64") /* ty=Tensor[(1, 10, 7), float64] */;
  sin(%209) /* ty=Tensor[(1, 10, 7), float64] */
}

def @func_4933() -> (Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32], Tensor[(1, 10, 7), float64]) {
  %215 = fn () -> (Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32], Tensor[(1, 10, 7), float64]) {
    %210 = @func_3999() /* ty=(Tensor[(13, 12, 3), float32], Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32], Tensor[(1, 10, 7), float64]) */;
    %211 = @func_2143() /* ty=(Tensor[(13, 12, 3), float32],) */;
    %212 = %210.3;
    %213 = %211.0;
    %214 = @func_3067() /* ty=Tensor[(1, 10, 7), float64] */;
    (%212, %213, %214)
  };
  %215() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32], Tensor[(1, 10, 7), float64]) */
}

def @func_5694() -> (Tensor[(1, 10, 7), float64],) {
  %216 = @func_3003() /* ty=(Tensor[(8, 10, 7), uint8], Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64]) */;
  %217 = %216.2;
  (%217,)
}

def @func_3798() -> (Tensor[(1, 10, 7), float64],) {
  @func_3796() /* ty=(Tensor[(1, 10, 7), float64],) */
}

def @func_5019(%var_5017: Tensor[(15, 3, 14), bool]) -> (Tensor[(15, 3, 14), bool], Tensor[(15, 3, 14), float64]) {
  @func_5016(%var_5017) /* ty=(Tensor[(15, 3, 14), bool], Tensor[(15, 3, 14), float64]) */
}

def @func_7038() -> (Tensor[(1, 10, 7), float64],) {
  @func_7036() /* ty=(Tensor[(1, 10, 7), float64],) */
}

def @func_7542() -> (Tensor[(1, 10, 7), float64],) {
  %220 = fn () -> (Tensor[(1, 10, 7), float64],) {
    %218 = @func_4861() /* ty=(Tensor[(3, 11, 12), uint16], Tensor[(1, 10, 7), float64]) */;
    %219 = %218.1;
    (%219,)
  };
  %220() /* ty=(Tensor[(1, 10, 7), float64],) */
}

def @func_812() -> (Tensor[(1, 10, 7), float64],) {
  @func_810() /* ty=(Tensor[(1, 10, 7), float64],) */
}

def @func_1075(%var_1073: Tensor[(13, 12, 3), float64], %var_1074: Tensor[(1, 1120), float64]) -> (Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32], Tensor[(16, 10, 7), bool], Tensor[(1, 1120), float64]) {
  %234 = fn (%var_1035: Tensor[(13, 12, 3), float64], %var_1059: Tensor[(1, 1120), float64]) -> (Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32], Tensor[(16, 10, 7), bool], Tensor[(1, 1120), float64]) {
    %221 = cast(%var_1035, dtype="float64") /* ty=Tensor[(13, 12, 3), float64] */;
    %222 = atanh(%221) /* ty=Tensor[(13, 12, 3), float64] */;
    %223 = cast(meta[relay.Constant][15] /* ty=Tensor[(13, 12, 3), float64] */, dtype="float64") /* ty=Tensor[(13, 12, 3), float64] */;
    %224 = shape_of(%222, dtype="int32") /* ty=Tensor[(3), int32] */;
    %225 = cast(%222, dtype="float64") /* ty=Tensor[(13, 12, 3), float64] */;
    %226 = dyn.reshape(%223, %224, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %227 = floor_mod(%225, %226) /* ty=Tensor[(13, 12, 3), float64] */;
    %228 = cast(%227, dtype="float32") /* ty=Tensor[(13, 12, 3), float32] */;
    %229 = cast(%var_1059, dtype="float64") /* ty=Tensor[(1, 1120), float64] */;
    %230 = reshape(%229, newshape=[16, 10, 7]) /* ty=Tensor[(16, 10, 7), float64] */;
    %231 = @func_786() /* ty=Tensor[(1, 10, 7), float64] */;
    %232 = cosh(%228) /* ty=Tensor[(13, 12, 3), float32] */;
    %233 = @func_893(%230) /* ty=Tensor[(16, 10, 7), bool] */;
    (%231, %232, %233, %var_1059)
  };
  %234(%var_1073, %var_1074) /* ty=(Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32], Tensor[(16, 10, 7), bool], Tensor[(1, 1120), float64]) */
}

def @func_9951() -> Tensor[(1, 10, 7), float64] {
  %236 = fn () -> Tensor[(1, 10, 7), float64] {
    %235 = @func_3615() /* ty=(Tensor[(1, 10, 7), float64],) */;
    %235.0
  };
  %236() /* ty=Tensor[(1, 10, 7), float64] */
}

def @func_5134(%var_5131: Tensor[(11, 10, 7), float64], %var_5132: Tensor[(12, 18), bool], %var_5133: Tensor[(5, 10, 7), float64]) -> (Tensor[(11, 10, 7), float32], Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32], Tensor[(11, 10, 7), bool], Tensor[(6, 6, 6), bool], bool, Tensor[(12, 18), bool], Tensor[(5, 10, 7), float32]) {
  @func_5129(%var_5131, %var_5132, %var_5133) /* ty=(Tensor[(11, 10, 7), float32], Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32], Tensor[(11, 10, 7), bool], Tensor[(6, 6, 6), bool], bool, Tensor[(12, 18), bool], Tensor[(5, 10, 7), float32]) */
}

def @func_1958(%var_1867: Tensor[(12, 8, 8), int64]) -> (Tensor[(12, 8, 8), bool], Tensor[(8, 10, 7), float64], Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32]) {
  %237 = cast(3 /* ty=int64 */, dtype="bool") /* ty=bool */;
  %238 = cast(%var_1867, dtype="bool") /* ty=Tensor[(12, 8, 8), bool] */;
  %239 = @func_978() /* ty=Tensor[(8, 10, 7), uint8] */;
  %240 = cast(%239, dtype="float64") /* ty=Tensor[(8, 10, 7), float64] */;
  %241 = atanh(%240) /* ty=Tensor[(8, 10, 7), float64] */;
  %242 = cast(%241, dtype="float64") /* ty=Tensor[(8, 10, 7), float64] */;
  %243 = @func_1653() /* ty=(Tensor[(8, 10, 7), uint8],) */;
  %244 = @func_810() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %245 = @func_1773() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), uint8]) */;
  %246 = @func_1184() /* ty=(Tensor[(8, 10, 7), uint8], Tensor[(13, 12, 3), float32], Tensor[(468), float64], Tensor[(1120), float64]) */;
  %247 = greater(%237, %238) /* ty=Tensor[(12, 8, 8), bool] */;
  %248 = sinh(%242) /* ty=Tensor[(8, 10, 7), float64] */;
  %249 = %243.0;
  %250 = @func_1757() /* ty=Tensor[(1, 10, 7), float64] */;
  %251 = %244.0;
  %252 = %245.0;
  %253 = %246.1;
  (%247, %248, %249, %250, %251, %252, %253)
}

def @func_7660(%var_7629: Tensor[(8, 10, 7), float32]) -> (Tensor[(8, 10, 7), uint8], Tensor[(8, 10, 7), int16], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32]) {
  %254 = @func_1773() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), uint8]) */;
  %255 = @func_6587() /* ty=Tensor[(8, 10, 7), float32] */;
  %256 = cast(%var_7629, dtype="int16") /* ty=Tensor[(8, 10, 7), int16] */;
  %257 = shape_of(%255, dtype="int32") /* ty=Tensor[(3), int32] */;
  %258 = cast(%255, dtype="int16") /* ty=Tensor[(8, 10, 7), int16] */;
  %259 = dyn.reshape(%256, %257, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %260 = @func_2913() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), uint8]) */;
  %261 = @func_3999() /* ty=(Tensor[(13, 12, 3), float32], Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32], Tensor[(1, 10, 7), float64]) */;
  %262 = %254.1;
  %263 = bitwise_and(%258, %259) /* ty=Tensor[(8, 10, 7), int16] */;
  %264 = %260.0;
  %265 = @func_4654() /* ty=Tensor[(1, 10, 7), float64] */;
  %266 = %261.2;
  (%262, %263, %264, %265, %266)
}

def @func_4385(%var_4344: uint16, %var_4345: Tensor[(8, 13, 7), uint16]) -> (Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), uint8], Tensor[(8, 13, 7), float32], Tensor[(1, 10, 7), float64]) {
  %267 = @func_1184() /* ty=(Tensor[(8, 10, 7), uint8], Tensor[(13, 12, 3), float32], Tensor[(468), float64], Tensor[(1120), float64]) */;
  %268 = cast(%var_4344, dtype="uint16") /* ty=uint16 */;
  %269 = cast(%var_4345, dtype="uint16") /* ty=Tensor[(8, 13, 7), uint16] */;
  %270 = multiply(%268, %269) /* ty=Tensor[(8, 13, 7), uint16] */;
  %271 = cast(%270, dtype="float32") /* ty=Tensor[(8, 13, 7), float32] */;
  %272 = @func_786() /* ty=Tensor[(1, 10, 7), float64] */;
  %273 = %267.0;
  %274 = acosh(%271) /* ty=Tensor[(8, 13, 7), float32] */;
  %275 = @func_2953() /* ty=Tensor[(1, 10, 7), float64] */;
  (%272, %273, %274, %275)
}

def @func_5785() -> Tensor[(?, 10, 7), float64] {
  %277 = fn () -> Tensor[(?, 10, 7), float64] {
    %276 = @func_5431() /* ty=(Tensor[(?, 10, 7), float64], Tensor[(1, 10, 7), float64]) */;
    %276.0
  };
  %277() /* ty=Tensor[(?, 10, 7), float64] */
}

def @func_3999() -> (Tensor[(13, 12, 3), float32], Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32], Tensor[(1, 10, 7), float64]) {
  %278 = @func_3216() /* ty=(Tensor[(13, 12, 3), float32],) */;
  %279 = @func_3216() /* ty=(Tensor[(13, 12, 3), float32],) */;
  %280 = @func_3796() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %281 = %278.0;
  %282 = @func_2121() /* ty=Tensor[(1, 10, 7), float64] */;
  %283 = %279.0;
  %284 = %280.0;
  (%281, %282, %283, %284)
}

def @func_5226() -> (Tensor[(8, 10, 7), float64],) {
  @func_5224() /* ty=(Tensor[(8, 10, 7), float64],) */
}

def @func_6331() -> (Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64]) {
  %289 = fn () -> (Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64]) {
    %285 = @func_5901() /* ty=(Tensor[(1, 10, 7), float64],) */;
    %286 = @func_6122() /* ty=(Tensor[(1, 10, 7), float64],) */;
    %287 = %285.0;
    %288 = %286.0;
    (%287, %288)
  };
  %289() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64]) */
}

def @func_1458() -> (Tensor[(1, 10, 7), float64],) {
  %292 = fn () -> (Tensor[(1, 10, 7), float64],) {
    %290 = @func_810() /* ty=(Tensor[(1, 10, 7), float64],) */;
    %291 = %290.0;
    (%291,)
  };
  %292() /* ty=(Tensor[(1, 10, 7), float64],) */
}

def @func_4882(%var_4880: Tensor[(35, 4), float64]) -> (Tensor[(1, 10, 7), float64], Tensor[(2, 10, 7), int8], Tensor[(35, 4), float64], Tensor[(768), int64]) {
  @func_4879(%var_4880) /* ty=(Tensor[(1, 10, 7), float64], Tensor[(2, 10, 7), int8], Tensor[(35, 4), float64], Tensor[(768), int64]) */
}

def @func_4308() -> Tensor[(1, 10, 7), float64] {
  %293 = @func_1392() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64]) */;
  %293.1
}

def @func_5903() -> (Tensor[(1, 10, 7), float64],) {
  @func_5901() /* ty=(Tensor[(1, 10, 7), float64],) */
}

def @func_893(%var_885: Tensor[(16, 10, 7), float64]) -> Tensor[(16, 10, 7), bool] {
  %294 = @func_786() /* ty=Tensor[(1, 10, 7), float64] */;
  %295 = cast(%294, dtype="bool") /* ty=Tensor[(1, 10, 7), bool] */;
  %296 = cast(%var_885, dtype="bool") /* ty=Tensor[(16, 10, 7), bool] */;
  greater_equal(%295, %296) /* ty=Tensor[(16, 10, 7), bool] */
}

def @func_8831(%var_8829: Tensor[(10, 16, 3), uint16], %var_8830: Tensor[(10, 16, 3), uint16]) -> (Tensor[(10, 16, 3), uint64],) {
  @func_8827(%var_8829, %var_8830) /* ty=(Tensor[(10, 16, 3), uint64],) */
}

def @func_3505() -> Tensor[(1, 10, 7), float64] {
  @func_3503() /* ty=Tensor[(1, 10, 7), float64] */
}

def @func_8922() -> (Tensor[(1, 10, 7), float64],) {
  @func_8920() /* ty=(Tensor[(1, 10, 7), float64],) */
}

def @func_1961(%var_1959: Tensor[(12, 8, 8), int64]) -> (Tensor[(12, 8, 8), bool], Tensor[(8, 10, 7), float64], Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32]) {
  @func_1958(%var_1959) /* ty=(Tensor[(12, 8, 8), bool], Tensor[(8, 10, 7), float64], Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32]) */
}

def @func_9109() -> (Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64], Tensor[(2, 4, 12), int32], Tensor[(96), float64]) {
  @func_9107() /* ty=(Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64], Tensor[(2, 4, 12), int32], Tensor[(96), float64]) */
}

def @func_3683() -> (Tensor[(1, 10, 7), float64],) {
  %297 = @func_1757() /* ty=Tensor[(1, 10, 7), float64] */;
  (%297,)
}

def @func_6491(%var_6487: Tensor[(8, 2, 3), float32]) -> Tensor[(8, 2, 3), float32] {
  %298 = cast(%var_6487, dtype="float32") /* ty=Tensor[(8, 2, 3), float32] */;
  sinh(%298) /* ty=Tensor[(8, 2, 3), float32] */
}

def @func_3941() -> (Tensor[(1, 10, 7), float64],) {
  %301 = fn () -> (Tensor[(1, 10, 7), float64],) {
    %299 = @func_3796() /* ty=(Tensor[(1, 10, 7), float64],) */;
    %300 = %299.0;
    (%300,)
  };
  %301() /* ty=(Tensor[(1, 10, 7), float64],) */
}

def @func_3503() -> Tensor[(1, 10, 7), float64] {
  %302 = @func_1682() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64]) */;
  %302.1
}

def @func_3004() -> (Tensor[(8, 10, 7), uint8], Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64]) {
  %307 = fn () -> (Tensor[(8, 10, 7), uint8], Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64]) {
    %303 = @func_978() /* ty=Tensor[(8, 10, 7), uint8] */;
    %304 = @func_978() /* ty=Tensor[(8, 10, 7), uint8] */;
    %305 = @func_1757() /* ty=Tensor[(1, 10, 7), float64] */;
    %306 = @func_786() /* ty=Tensor[(1, 10, 7), float64] */;
    (%303, %304, %305, %306)
  };
  %307() /* ty=(Tensor[(8, 10, 7), uint8], Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64]) */
}

def @func_6208() -> Tensor[(8, 10, 7), float64] {
  %310 = fn () -> Tensor[(8, 10, 7), float64] {
    %308 = @func_978() /* ty=Tensor[(8, 10, 7), uint8] */;
    %309 = cast(%308, dtype="float64") /* ty=Tensor[(8, 10, 7), float64] */;
    sigmoid(%309) /* ty=Tensor[(8, 10, 7), float64] */
  };
  %310() /* ty=Tensor[(8, 10, 7), float64] */
}

def @func_2144() -> (Tensor[(13, 12, 3), float32],) {
  %313 = fn () -> (Tensor[(13, 12, 3), float32],) {
    %311 = @func_1184() /* ty=(Tensor[(8, 10, 7), uint8], Tensor[(13, 12, 3), float32], Tensor[(468), float64], Tensor[(1120), float64]) */;
    %312 = %311.1;
    (%312,)
  };
  %313() /* ty=(Tensor[(13, 12, 3), float32],) */
}

def @func_5073() -> Tensor[(15, 10, 7), uint32] {
  %317 = fn () -> Tensor[(15, 10, 7), uint32] {
    %314 = @func_3503() /* ty=Tensor[(1, 10, 7), float64] */;
    %315 = cast(%314, dtype="uint32") /* ty=Tensor[(1, 10, 7), uint32] */;
    %316 = cast(meta[relay.Constant][16] /* ty=Tensor[(15, 10, 7), float64] */, dtype="uint32") /* ty=Tensor[(15, 10, 7), uint32] */;
    right_shift(%315, %316) /* ty=Tensor[(15, 10, 7), uint32] */
  };
  %317() /* ty=Tensor[(15, 10, 7), uint32] */
}

def @func_8508() -> (Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(1260), int8], Tensor[(280, 4), float64], Tensor[(1404), float32], Tensor[(1120), float64], Tensor[(1, 10, 7), float64]) {
  %318 = @func_7541() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %319 = @func_2816() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(1120), float64]) */;
  %320 = cast(meta[relay.Constant][17] /* ty=Tensor[(1260), int8] */, dtype="int8") /* ty=Tensor[(1260), int8] */;
  %321 = reshape(%320, newshape=[7, 12, 15]) /* ty=Tensor[(7, 12, 15), int8] */;
  %322 = @func_2686(%321) /* ty=(Tensor[(7, 12, 15), uint8], Tensor[(1, 10, 7), float64], Tensor[(768), int64]) */;
  %323 = cast(meta[relay.Constant][18] /* ty=Tensor[(1404), float32] */, dtype="float32") /* ty=Tensor[(1404), float32] */;
  %324 = cast(meta[relay.Constant][19] /* ty=Tensor[(1120), float64] */, dtype="float64") /* ty=Tensor[(1120), float64] */;
  %325 = reshape(%323, newshape=[9, 13, 12]) /* ty=Tensor[(9, 13, 12), float32] */;
  %326 = reshape(%324, newshape=[280, 4]) /* ty=Tensor[(280, 4), float64] */;
  %327 = @func_4454(%325, %326) /* ty=(Tensor[(9, 13, 12), float32], Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32], Tensor[(468, 1), float64], Tensor[(280, 4), float64]) */;
  %328 = %318.0;
  %329 = %319.4;
  %330 = %322.1;
  %331 = %327.4;
  %332 = @func_7561() /* ty=Tensor[(1, 10, 7), float64] */;
  (%328, %329, %330, meta[relay.Constant][17] /* ty=Tensor[(1260), int8] */, %331, meta[relay.Constant][18] /* ty=Tensor[(1404), float32] */, meta[relay.Constant][19] /* ty=Tensor[(1120), float64] */, %332)
}

def @func_6865(%var_6863: Tensor[(14, 11, 7), bool], %var_6864: Tensor[(14, 11, 7), bool]) -> Tensor[(14, 11, 7), bool] {
  @func_6861(%var_6863, %var_6864) /* ty=Tensor[(14, 11, 7), bool] */
}

def @func_2833() -> Tensor[(1, 10, 7), float64] {
  @func_2831() /* ty=Tensor[(1, 10, 7), float64] */
}

def @func_4863() -> (Tensor[(3, 11, 12), uint16], Tensor[(1, 10, 7), float64]) {
  @func_4861() /* ty=(Tensor[(3, 11, 12), uint16], Tensor[(1, 10, 7), float64]) */
}

def @func_4556(%var_4554: Tensor[(1, 2, 4), int8]) -> Tensor[(2, 2, 4), bool] {
  @func_4553(%var_4554) /* ty=Tensor[(2, 2, 4), bool] */
}

def @func_5696() -> (Tensor[(1, 10, 7), float64],) {
  @func_5694() /* ty=(Tensor[(1, 10, 7), float64],) */
}

def @func_978() -> Tensor[(8, 10, 7), uint8] {
  %333 = @func_786() /* ty=Tensor[(1, 10, 7), float64] */;
  %334 = cast(%333, dtype="uint8") /* ty=Tensor[(1, 10, 7), uint8] */;
  %335 = cast(meta[relay.Constant][20] /* ty=Tensor[(8, 10, 7), float64] */, dtype="uint8") /* ty=Tensor[(8, 10, 7), uint8] */;
  bitwise_or(%334, %335) /* ty=Tensor[(8, 10, 7), uint8] */
}

def @func_3685() -> (Tensor[(1, 10, 7), float64],) {
  @func_3683() /* ty=(Tensor[(1, 10, 7), float64],) */
}

def @func_5500() -> (Tensor[(8, 10, 7), uint8],) {
  %338 = fn () -> (Tensor[(8, 10, 7), uint8],) {
    %336 = @func_4771() /* ty=(Tensor[(8, 10, 7), uint8],) */;
    %337 = %336.0;
    (%337,)
  };
  %338() /* ty=(Tensor[(8, 10, 7), uint8],) */
}

def @func_7563() -> Tensor[(1, 10, 7), float64] {
  @func_7561() /* ty=Tensor[(1, 10, 7), float64] */
}

def @func_7496() -> (Tensor[(1, 10, 7), float64],) {
  %339 = @func_1362() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64]) */;
  %340 = %339.0;
  (%340,)
}

def @func_6117() -> (Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64], Tensor[(2400), int8]) {
  %356 = fn () -> (Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64], Tensor[(2400), int8]) {
    %341 = @func_3720() /* ty=(Tensor[(8, 10, 7), uint8],) */;
    %342 = @func_3603() /* ty=(Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64]) */;
    %343 = cast(meta[relay.Constant][21] /* ty=Tensor[(2400), int8] */, dtype="int8") /* ty=Tensor[(2400), int8] */;
    %344 = cast(meta[relay.Constant][21] /* ty=Tensor[(2400), int8] */, dtype="int8") /* ty=Tensor[(2400), int8] */;
    %345 = reshape(%343, newshape=[15, 16, 10]) /* ty=Tensor[(15, 16, 10), int8] */;
    %346 = reshape(%344, newshape=[15, 16, 10]) /* ty=Tensor[(15, 16, 10), int8] */;
    %347 = @func_4427(%345, %346) /* ty=(Tensor[(15, 16, 10), bool],) */;
    %348 = %347.0;
    %349 = cast(%348, dtype="int8") /* ty=Tensor[(15, 16, 10), int8] */;
    %350 = shape_of(meta[relay.Constant][21] /* ty=Tensor[(2400), int8] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %351 = cast(meta[relay.Constant][21] /* ty=Tensor[(2400), int8] */, dtype="int8") /* ty=Tensor[(2400), int8] */;
    %352 = dyn.reshape(%349, %350, newshape=[]) /* ty=Tensor[(?), int8] */;
    %353 = %341.0;
    %354 = %342.1;
    %355 = right_shift(%351, %352) /* ty=Tensor[(2400), int8] */;
    (%353, %354, %355)
  };
  %356() /* ty=(Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64], Tensor[(2400), int8]) */
}

def @func_10196() -> Tensor[(1, 10, 7), float64] {
  %358 = fn () -> Tensor[(1, 10, 7), float64] {
    %357 = @func_8550() /* ty=(Tensor[(13, 12, 3), float64], Tensor[(1, 10, 7), float64]) */;
    %357.1
  };
  %358() /* ty=Tensor[(1, 10, 7), float64] */
}

def @func_8636(%var_8606: Tensor[(2400), int8]) -> (Tensor[(2400), uint8], Tensor[(2400), bool], Tensor[(2400), float64]) {
  %359 = @func_6116() /* ty=(Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64], Tensor[(2400), int8]) */;
  %360 = %359.2;
  %361 = cast(%var_8606, dtype="uint8") /* ty=Tensor[(2400), uint8] */;
  %362 = shape_of(%360, dtype="int32") /* ty=Tensor[(1), int32] */;
  %363 = cast(%360, dtype="uint8") /* ty=Tensor[(2400), uint8] */;
  %364 = dyn.reshape(%361, %362, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %365 = cast(%360, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %366 = atan(%365) /* ty=Tensor[(2400), float64] */;
  %367 = cast(meta[relay.Constant][22] /* ty=Tensor[(2400), float64] */, dtype="bool") /* ty=Tensor[(2400), bool] */;
  %368 = shape_of(%366, dtype="int32") /* ty=Tensor[(1), int32] */;
  %369 = cast(%366, dtype="bool") /* ty=Tensor[(2400), bool] */;
  %370 = dyn.reshape(%367, %368, newshape=[]) /* ty=Tensor[(?), bool] */;
  %371 = cast(%var_8606, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %372 = logical_xor(%363, %364) /* ty=Tensor[(2400), uint8] */;
  %373 = equal(%369, %370) /* ty=Tensor[(2400), bool] */;
  %374 = tan(%371) /* ty=Tensor[(2400), float64] */;
  (%372, %373, %374)
}

def @func_7790(%var_7789: Tensor[(2, 176), float32]) -> (Tensor[(13, 12, 3), float32], Tensor[(8, 11, 4), float32], Tensor[(2, 176), float32], Tensor[(12, 10, 7), int8], Tensor[(840), float64]) {
  %384 = fn (%var_7748: Tensor[(2, 176), float32]) -> (Tensor[(13, 12, 3), float32], Tensor[(8, 11, 4), float32], Tensor[(2, 176), float32], Tensor[(12, 10, 7), int8], Tensor[(840), float64]) {
    %375 = @func_6056() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32]) */;
    %376 = cast(%var_7748, dtype="float32") /* ty=Tensor[(2, 176), float32] */;
    %377 = reshape(%376, newshape=[8, 11, 4]) /* ty=Tensor[(8, 11, 4), float32] */;
    %378 = @func_470(%377) /* ty=(Tensor[(8, 11, 4), float32],) */;
    %379 = cast(meta[relay.Constant][23] /* ty=Tensor[(840), float64] */, dtype="float64") /* ty=Tensor[(840), float64] */;
    %380 = reshape(%379, newshape=[12, 10, 7]) /* ty=Tensor[(12, 10, 7), float64] */;
    %381 = %375.1;
    %382 = %378.0;
    %383 = @func_3572(%380) /* ty=Tensor[(12, 10, 7), int8] */;
    (%381, %382, %var_7748, %383, meta[relay.Constant][23] /* ty=Tensor[(840), float64] */)
  };
  %384(%var_7789) /* ty=(Tensor[(13, 12, 3), float32], Tensor[(8, 11, 4), float32], Tensor[(2, 176), float32], Tensor[(12, 10, 7), int8], Tensor[(840), float64]) */
}

def @func_3083() -> Tensor[(1, 10, 7), float64] {
  %385 = fn () -> Tensor[(1, 10, 7), float64] {
    @func_786() /* ty=Tensor[(1, 10, 7), float64] */
  };
  %385() /* ty=Tensor[(1, 10, 7), float64] */
}

def @func_4014() -> (Tensor[(1, 10, 7), float64],) {
  @func_4012() /* ty=(Tensor[(1, 10, 7), float64],) */
}

def @func_6257(%var_6251: Tensor[(7, 13, 7), int16]) -> Tensor[(7, 13, 7), int16] {
  %386 = cast(meta[relay.Constant][24] /* ty=Tensor[(7, 13, 7), int16] */, dtype="int16") /* ty=Tensor[(7, 13, 7), int16] */;
  %387 = shape_of(%var_6251, dtype="int32") /* ty=Tensor[(3), int32] */;
  %388 = cast(%var_6251, dtype="int16") /* ty=Tensor[(7, 13, 7), int16] */;
  %389 = dyn.reshape(%386, %387, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  bitwise_or(%388, %389) /* ty=Tensor[(7, 13, 7), int16] */
}

def @func_2817() -> (Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(1120), float64]) {
  %402 = fn () -> (Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(1120), float64]) {
    %390 = @func_2030() /* ty=Tensor[(1, 10, 7), float64] */;
    %391 = cast(%390, dtype="float64") /* ty=Tensor[(1, 10, 7), float64] */;
    %392 = @func_2143() /* ty=(Tensor[(13, 12, 3), float32],) */;
    %393 = @func_1813() /* ty=(Tensor[(1, 10, 7), float64],) */;
    %394 = @func_1813() /* ty=(Tensor[(1, 10, 7), float64],) */;
    %395 = @func_1184() /* ty=(Tensor[(8, 10, 7), uint8], Tensor[(13, 12, 3), float32], Tensor[(468), float64], Tensor[(1120), float64]) */;
    %396 = sigmoid(%391) /* ty=Tensor[(1, 10, 7), float64] */;
    %397 = @func_2121() /* ty=Tensor[(1, 10, 7), float64] */;
    %398 = %392.0;
    %399 = %393.0;
    %400 = %394.0;
    %401 = %395.3;
    (%396, %397, %398, %399, %400, %401)
  };
  %402() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(1120), float64]) */
}

def @func_1392() -> (Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64]) {
  %403 = @func_1129() /* ty=(Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), uint8], Tensor[(8, 10, 7), float64]) */;
  %404 = @func_786() /* ty=Tensor[(1, 10, 7), float64] */;
  %405 = %403.1;
  (%404, %405)
}

def @func_7242() -> (Tensor[(8, 10, 7), uint8],) {
  @func_7240() /* ty=(Tensor[(8, 10, 7), uint8],) */
}

def @func_2565(%var_2562: Tensor[(10, 1, 7), uint8], %var_2563: Tensor[(10, 9, 7), uint8], %var_2564: Tensor[(10, 9, 7), bool]) -> (Tensor[(10, 9, 7), float64], Tensor[(1, 10, 7), float64]) {
  @func_2560(%var_2562, %var_2563, %var_2564) /* ty=(Tensor[(10, 9, 7), float64], Tensor[(1, 10, 7), float64]) */
}

def @func_2381() -> Tensor[(1, 10, 7), float64] {
  %406 = fn () -> Tensor[(1, 10, 7), float64] {
    @func_1757() /* ty=Tensor[(1, 10, 7), float64] */
  };
  %406() /* ty=Tensor[(1, 10, 7), float64] */
}

def @func_2031() -> Tensor[(1, 10, 7), float64] {
  %408 = fn () -> Tensor[(1, 10, 7), float64] {
    %407 = @func_1457() /* ty=(Tensor[(1, 10, 7), float64],) */;
    %407.0
  };
  %408() /* ty=Tensor[(1, 10, 7), float64] */
}

def @func_5646() -> (Tensor[(1, 10, 7), float64], Tensor[(?, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(3, 10, 7), int32]) {
  %409 = @func_1813() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %410 = @func_5431() /* ty=(Tensor[(?, 10, 7), float64], Tensor[(1, 10, 7), float64]) */;
  %411 = @func_4932() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32], Tensor[(1, 10, 7), float64]) */;
  %412 = %411.0;
  %413 = cast(%412, dtype="int32") /* ty=Tensor[(1, 10, 7), int32] */;
  %414 = cast(meta[relay.Constant][25] /* ty=Tensor[(3, 10, 7), float64] */, dtype="int32") /* ty=Tensor[(3, 10, 7), int32] */;
  %415 = %409.0;
  %416 = %410.0;
  %417 = @func_4654() /* ty=Tensor[(1, 10, 7), float64] */;
  %418 = minimum(%413, %414) /* ty=Tensor[(3, 10, 7), int32] */;
  (%415, %416, %417, %418)
}

def @func_7110() -> Tensor[(1, 10, 7), float64] {
  @func_3503() /* ty=Tensor[(1, 10, 7), float64] */
}

def @func_7449() -> Tensor[(13, 12, 3), bool] {
  %419 = @func_4932() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32], Tensor[(1, 10, 7), float64]) */;
  %420 = %419.1;
  %421 = cast(meta[relay.Constant][26] /* ty=Tensor[(13, 12, 3), float32] */, dtype="int16") /* ty=Tensor[(13, 12, 3), int16] */;
  %422 = shape_of(%420, dtype="int32") /* ty=Tensor[(3), int32] */;
  %423 = cast(%420, dtype="int16") /* ty=Tensor[(13, 12, 3), int16] */;
  %424 = dyn.reshape(%421, %422, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %425 = bitwise_xor(%423, %424) /* ty=Tensor[(13, 12, 3), int16] */;
  %426 = cast(%425, dtype="bool") /* ty=Tensor[(13, 12, 3), bool] */;
  %427 = shape_of(%420, dtype="int32") /* ty=Tensor[(3), int32] */;
  %428 = cast(%420, dtype="bool") /* ty=Tensor[(13, 12, 3), bool] */;
  %429 = dyn.reshape(%426, %427, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%428, %429) /* ty=Tensor[(13, 12, 3), bool] */
}

def @func_3476(%var_3474: Tensor[(90, 14), int8]) -> (Tensor[(?, 10, 7), bool], Tensor[(1, 10, 7), float64], Tensor[(90, 14), int8]) {
  @func_3473(%var_3474) /* ty=(Tensor[(?, 10, 7), bool], Tensor[(1, 10, 7), float64], Tensor[(90, 14), int8]) */
}

def @func_3603() -> (Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64]) {
  %430 = @func_978() /* ty=Tensor[(8, 10, 7), uint8] */;
  %431 = @func_2121() /* ty=Tensor[(1, 10, 7), float64] */;
  (%430, %431)
}

def @func_5442() -> (Tensor[(1, 10, 7), float64],) {
  %433 = fn () -> (Tensor[(1, 10, 7), float64],) {
    %432 = @func_786() /* ty=Tensor[(1, 10, 7), float64] */;
    (%432,)
  };
  %433() /* ty=(Tensor[(1, 10, 7), float64],) */
}

def @func_3833(%var_3832: Tensor[(768), int64]) -> (Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(768), int64]) {
  %439 = fn (%var_3825: Tensor[(768), int64]) -> (Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(768), int64]) {
    %434 = cast(%var_3825, dtype="int64") /* ty=Tensor[(768), int64] */;
    %435 = reshape(%434, newshape=[12, 8, 8]) /* ty=Tensor[(12, 8, 8), int64] */;
    %436 = @func_1958(%435) /* ty=(Tensor[(12, 8, 8), bool], Tensor[(8, 10, 7), float64], Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32]) */;
    %437 = @func_3067() /* ty=Tensor[(1, 10, 7), float64] */;
    %438 = %436.5;
    (%437, %438, %var_3825)
  };
  %439(%var_3832) /* ty=(Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(768), int64]) */
}

def @func_7964(%var_7962: Tensor[(11, 3, 3), float32]) -> (Tensor[(11, 3, 3), float32],) {
  @func_7961(%var_7962) /* ty=(Tensor[(11, 3, 3), float32],) */
}

def @func_788() -> Tensor[(1, 10, 7), float64] {
  @func_786() /* ty=Tensor[(1, 10, 7), float64] */
}

def @func_3342() -> (Tensor[(8, 10, 7), float64],) {
  %444 = fn () -> (Tensor[(8, 10, 7), float64],) {
    %440 = @func_1653() /* ty=(Tensor[(8, 10, 7), uint8],) */;
    %441 = %440.0;
    %442 = cast(%441, dtype="float64") /* ty=Tensor[(8, 10, 7), float64] */;
    %443 = acosh(%442) /* ty=Tensor[(8, 10, 7), float64] */;
    (%443,)
  };
  %444() /* ty=(Tensor[(8, 10, 7), float64],) */
}

def @func_9707() -> (Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), float64]) {
  %452 = fn () -> (Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), float64]) {
    %445 = @func_7240() /* ty=(Tensor[(8, 10, 7), uint8],) */;
    %446 = @func_8920() /* ty=(Tensor[(1, 10, 7), float64],) */;
    %447 = @func_5224() /* ty=(Tensor[(8, 10, 7), float64],) */;
    %448 = @func_7561() /* ty=Tensor[(1, 10, 7), float64] */;
    %449 = %445.0;
    %450 = %446.0;
    %451 = %447.0;
    (%448, %449, %450, %451)
  };
  %452() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), float64]) */
}

def @func_4485() -> Tensor[(3, 11, 12), bool] {
  @func_4483() /* ty=Tensor[(3, 11, 12), bool] */
}

def @func_1590() -> (Tensor[(13, 12, 3), int64], Tensor[(1, 10, 7), float64]) {
  %462 = fn () -> (Tensor[(13, 12, 3), int64], Tensor[(1, 10, 7), float64]) {
    %453 = @func_1184() /* ty=(Tensor[(8, 10, 7), uint8], Tensor[(13, 12, 3), float32], Tensor[(468), float64], Tensor[(1120), float64]) */;
    %454 = %453.1;
    %455 = cast(meta[relay.Constant][27] /* ty=Tensor[(13, 12, 3), float32] */, dtype="int64") /* ty=Tensor[(13, 12, 3), int64] */;
    %456 = shape_of(%454, dtype="int32") /* ty=Tensor[(3), int32] */;
    %457 = cast(%454, dtype="int64") /* ty=Tensor[(13, 12, 3), int64] */;
    %458 = dyn.reshape(%455, %456, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %459 = @func_1457() /* ty=(Tensor[(1, 10, 7), float64],) */;
    %460 = bitwise_and(%457, %458) /* ty=Tensor[(13, 12, 3), int64] */;
    %461 = %459.0;
    (%460, %461)
  };
  %462() /* ty=(Tensor[(13, 12, 3), int64], Tensor[(1, 10, 7), float64]) */
}

def @func_8551() -> (Tensor[(13, 12, 3), float64], Tensor[(1, 10, 7), float64]) {
  %467 = fn () -> (Tensor[(13, 12, 3), float64], Tensor[(1, 10, 7), float64]) {
    %463 = @func_7449() /* ty=Tensor[(13, 12, 3), bool] */;
    %464 = cast(%463, dtype="float64") /* ty=Tensor[(13, 12, 3), float64] */;
    %465 = exp(%464) /* ty=Tensor[(13, 12, 3), float64] */;
    %466 = @func_7561() /* ty=Tensor[(1, 10, 7), float64] */;
    (%465, %466)
  };
  %467() /* ty=(Tensor[(13, 12, 3), float64], Tensor[(1, 10, 7), float64]) */
}

def @func_8583() -> (Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), float32]) {
  %472 = fn () -> (Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), float32]) {
    %468 = @func_4293() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(16, 10, 7), bool], Tensor[(1120), float64]) */;
    %469 = @func_7891() /* ty=(Tensor[(8, 10, 7), float32],) */;
    %470 = %468.0;
    %471 = %469.0;
    (%470, %471)
  };
  %472() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), float32]) */
}

def @func_8639(%var_8637: Tensor[(2400), int8]) -> (Tensor[(2400), uint8], Tensor[(2400), bool], Tensor[(2400), float64]) {
  @func_8636(%var_8637) /* ty=(Tensor[(2400), uint8], Tensor[(2400), bool], Tensor[(2400), float64]) */
}

def @func_8862() -> (Tensor[(1, 10, 7), float64],) {
  @func_8860() /* ty=(Tensor[(1, 10, 7), float64],) */
}

def @func_6123() -> (Tensor[(1, 10, 7), float64],) {
  %474 = fn () -> (Tensor[(1, 10, 7), float64],) {
    %473 = @func_3067() /* ty=Tensor[(1, 10, 7), float64] */;
    (%473,)
  };
  %474() /* ty=(Tensor[(1, 10, 7), float64],) */
}

def @func_2769(%var_2767: Tensor[(8, 2, 2), float32]) -> Tensor[(8, 2, 2), float32] {
  @func_2766(%var_2767) /* ty=Tensor[(8, 2, 2), float32] */
}

def @func_1489() -> Tensor[(8, 10, 7), uint8] {
  %475 = fn () -> Tensor[(8, 10, 7), uint8] {
    @func_978() /* ty=Tensor[(8, 10, 7), uint8] */
  };
  %475() /* ty=Tensor[(8, 10, 7), uint8] */
}

def @func_6494(%var_6492: Tensor[(8, 2, 3), float32]) -> Tensor[(8, 2, 3), float32] {
  @func_6491(%var_6492) /* ty=Tensor[(8, 2, 3), float32] */
}

def @func_1655() -> (Tensor[(8, 10, 7), uint8],) {
  @func_1653() /* ty=(Tensor[(8, 10, 7), uint8],) */
}

def @func_4743(%var_4742: Tensor[(210), float64]) -> (Tensor[(3, 11, 12), uint16], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(3, 10, 7), int16], Tensor[(210), float64]) {
  %485 = fn (%var_4739: Tensor[(210), float64]) -> (Tensor[(3, 11, 12), uint16], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(3, 10, 7), int16], Tensor[(210), float64]) {
    %476 = @func_810() /* ty=(Tensor[(1, 10, 7), float64],) */;
    %477 = cast(%var_4739, dtype="float64") /* ty=Tensor[(210), float64] */;
    %478 = reshape(%477, newshape=[3, 10, 7]) /* ty=Tensor[(3, 10, 7), float64] */;
    %479 = @func_4589(%478) /* ty=(Tensor[(3, 10, 7), int16],) */;
    %480 = @func_3924() /* ty=Tensor[(3, 11, 12), uint16] */;
    %481 = @func_2953() /* ty=Tensor[(1, 10, 7), float64] */;
    %482 = @func_1757() /* ty=Tensor[(1, 10, 7), float64] */;
    %483 = %476.0;
    %484 = %479.0;
    (%480, %481, %482, %483, %484, %var_4739)
  };
  %485(%var_4742) /* ty=(Tensor[(3, 11, 12), uint16], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(3, 10, 7), int16], Tensor[(210), float64]) */
}

def @func_6180() -> Tensor[(?, 10, 7), bool] {
  %493 = fn () -> Tensor[(?, 10, 7), bool] {
    %486 = @func_2831() /* ty=Tensor[(1, 10, 7), float64] */;
    %487 = @func_2913() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), uint8]) */;
    %488 = %487.0;
    %489 = cast(%488, dtype="bool") /* ty=Tensor[(1, 10, 7), bool] */;
    %490 = shape_of(%486, dtype="int32") /* ty=Tensor[(3), int32] */;
    %491 = cast(%486, dtype="bool") /* ty=Tensor[(1, 10, 7), bool] */;
    %492 = dyn.reshape(%489, %490, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    greater_equal(%491, %492) /* ty=Tensor[(?, 10, 7), bool] */
  };
  %493() /* ty=Tensor[(?, 10, 7), bool] */
}

def @func_6655() -> Tensor[(?, 10, 7), uint32] {
  @func_6653() /* ty=Tensor[(?, 10, 7), uint32] */
}

def @func_10149() -> Tensor[(1, 10, 7), float64] {
  %494 = fn () -> Tensor[(1, 10, 7), float64] {
    @func_2953() /* ty=Tensor[(1, 10, 7), float64] */
  };
  %494() /* ty=Tensor[(1, 10, 7), float64] */
}

def @func_4140() -> (Tensor[(1, 10, 7), float64],) {
  %497 = fn () -> (Tensor[(1, 10, 7), float64],) {
    %495 = @func_3940() /* ty=(Tensor[(1, 10, 7), float64],) */;
    %496 = %495.0;
    (%496,)
  };
  %497() /* ty=(Tensor[(1, 10, 7), float64],) */
}

def @func_6587() -> Tensor[(8, 10, 7), float32] {
  %498 = @func_5183() /* ty=(Tensor[(8, 10, 7), float32],) */;
  %499 = %498.0;
  %500 = cast(%499, dtype="float32") /* ty=Tensor[(8, 10, 7), float32] */;
  asin(%500) /* ty=Tensor[(8, 10, 7), float32] */
}

def @func_9754() -> (Tensor[(8, 10, 7), uint8],) {
  @func_9752() /* ty=(Tensor[(8, 10, 7), uint8],) */
}

def @func_1815() -> (Tensor[(1, 10, 7), float64],) {
  @func_1813() /* ty=(Tensor[(1, 10, 7), float64],) */
}

def @func_4655() -> Tensor[(1, 10, 7), float64] {
  %501 = fn () -> Tensor[(1, 10, 7), float64] {
    @func_3503() /* ty=Tensor[(1, 10, 7), float64] */
  };
  %501() /* ty=Tensor[(1, 10, 7), float64] */
}

def @func_10663() -> (Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64]) {
  %502 = @func_3683() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %503 = @func_3615() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %504 = %502.0;
  %505 = %503.0;
  (%504, %505)
}

def @func_4427(%var_4420: Tensor[(15, 16, 10), int8], %var_4421: Tensor[(15, 16, 10), int8]) -> (Tensor[(15, 16, 10), bool],) {
  %506 = cast(%var_4421, dtype="bool") /* ty=Tensor[(15, 16, 10), bool] */;
  %507 = shape_of(%var_4420, dtype="int32") /* ty=Tensor[(3), int32] */;
  %508 = cast(%var_4420, dtype="bool") /* ty=Tensor[(15, 16, 10), bool] */;
  %509 = dyn.reshape(%506, %507, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %510 = equal(%508, %509) /* ty=Tensor[(15, 16, 10), bool] */;
  (%510,)
}

def @func_2560(%var_2539: Tensor[(10, 1, 7), uint8], %var_2540: Tensor[(10, 9, 7), uint8], %var_2545: Tensor[(10, 9, 7), bool]) -> (Tensor[(10, 9, 7), float64], Tensor[(1, 10, 7), float64]) {
  %511 = cast(%var_2539, dtype="bool") /* ty=Tensor[(10, 1, 7), bool] */;
  %512 = cast(%var_2540, dtype="bool") /* ty=Tensor[(10, 9, 7), bool] */;
  %513 = greater(%511, %512) /* ty=Tensor[(10, 9, 7), bool] */;
  %514 = cast(%var_2545, dtype="float64") /* ty=Tensor[(10, 9, 7), float64] */;
  %515 = shape_of(%513, dtype="int32") /* ty=Tensor[(3), int32] */;
  %516 = cast(%513, dtype="float64") /* ty=Tensor[(10, 9, 7), float64] */;
  %517 = dyn.reshape(%514, %515, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %518 = @func_810() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %519 = power(%516, %517) /* ty=Tensor[(10, 9, 7), float64] */;
  %520 = %518.0;
  (%519, %520)
}

def @func_8731() -> (Tensor[(8, 10, 7), uint8],) {
  %521 = @func_5499() /* ty=(Tensor[(8, 10, 7), uint8],) */;
  %522 = %521.0;
  (%522,)
}

def @func_3615() -> (Tensor[(1, 10, 7), float64],) {
  %523 = @func_1457() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %524 = %523.0;
  (%524,)
}

def @func_3722() -> (Tensor[(8, 10, 7), uint8],) {
  @func_3720() /* ty=(Tensor[(8, 10, 7), uint8],) */
}

def @func_4772() -> (Tensor[(8, 10, 7), uint8],) {
  %527 = fn () -> (Tensor[(8, 10, 7), uint8],) {
    %525 = @func_1184() /* ty=(Tensor[(8, 10, 7), uint8], Tensor[(13, 12, 3), float32], Tensor[(468), float64], Tensor[(1120), float64]) */;
    %526 = %525.0;
    (%526,)
  };
  %527() /* ty=(Tensor[(8, 10, 7), uint8],) */
}

def @func_3720() -> (Tensor[(8, 10, 7), uint8],) {
  %528 = @func_978() /* ty=Tensor[(8, 10, 7), uint8] */;
  (%528,)
}

def @func_3547(%var_3522: Tensor[(2, 10, 7), float64], %var_3537: Tensor[(768), int64]) -> (Tensor[(2, 10, 7), int8], Tensor[(1, 10, 7), float64], Tensor[(768), int64]) {
  %529 = @func_1757() /* ty=Tensor[(1, 10, 7), float64] */;
  %530 = cast(%529, dtype="int8") /* ty=Tensor[(1, 10, 7), int8] */;
  %531 = cast(%var_3522, dtype="int8") /* ty=Tensor[(2, 10, 7), int8] */;
  %532 = cast(%var_3537, dtype="int64") /* ty=Tensor[(768), int64] */;
  %533 = reshape(%532, newshape=[12, 8, 8]) /* ty=Tensor[(12, 8, 8), int64] */;
  %534 = @func_1958(%533) /* ty=(Tensor[(12, 8, 8), bool], Tensor[(8, 10, 7), float64], Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32]) */;
  %535 = add(%530, %531) /* ty=Tensor[(2, 10, 7), int8] */;
  %536 = %534.3;
  (%535, %536, %var_3537)
}

def @func_4212(%var_4211: Tensor[(60, 14), float64]) -> (Tensor[(1, 10, 7), float64], Tensor[(?, 10, 7), bool], Tensor[(1260), int8], Tensor[(1, 10, 7), float64], Tensor[(12, 10, 7), int8], Tensor[(60, 14), float64], Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), uint8], Tensor[(8, 10, 7), uint8]) {
  %553 = fn (%var_4187: Tensor[(60, 14), float64]) -> (Tensor[(1, 10, 7), float64], Tensor[(?, 10, 7), bool], Tensor[(1260), int8], Tensor[(1, 10, 7), float64], Tensor[(12, 10, 7), int8], Tensor[(60, 14), float64], Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), uint8], Tensor[(8, 10, 7), uint8]) {
    %537 = cast(meta[relay.Constant][28] /* ty=Tensor[(1260), int8] */, dtype="int8") /* ty=Tensor[(1260), int8] */;
    %538 = reshape(%537, newshape=[90, 14]) /* ty=Tensor[(90, 14), int8] */;
    %539 = @func_3473(%538) /* ty=(Tensor[(?, 10, 7), bool], Tensor[(1, 10, 7), float64], Tensor[(90, 14), int8]) */;
    %540 = cast(%var_4187, dtype="float64") /* ty=Tensor[(60, 14), float64] */;
    %541 = reshape(%540, newshape=[12, 10, 7]) /* ty=Tensor[(12, 10, 7), float64] */;
    %542 = cast(meta[relay.Constant][28] /* ty=Tensor[(1260), int8] */, dtype="int8") /* ty=Tensor[(1260), int8] */;
    %543 = reshape(%542, newshape=[90, 14]) /* ty=Tensor[(90, 14), int8] */;
    %544 = @func_3473(%543) /* ty=(Tensor[(?, 10, 7), bool], Tensor[(1, 10, 7), float64], Tensor[(90, 14), int8]) */;
    %545 = @func_3003() /* ty=(Tensor[(8, 10, 7), uint8], Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64]) */;
    %546 = @func_2030() /* ty=Tensor[(1, 10, 7), float64] */;
    %547 = %539.0;
    %548 = @func_3503() /* ty=Tensor[(1, 10, 7), float64] */;
    %549 = @func_3572(%541) /* ty=Tensor[(12, 10, 7), int8] */;
    %550 = %544.1;
    %551 = %545.1;
    %552 = @func_978() /* ty=Tensor[(8, 10, 7), uint8] */;
    (%546, %547, meta[relay.Constant][28] /* ty=Tensor[(1260), int8] */, %548, %549, %var_4187, %550, %551, %552)
  };
  %553(%var_4211) /* ty=(Tensor[(1, 10, 7), float64], Tensor[(?, 10, 7), bool], Tensor[(1260), int8], Tensor[(1, 10, 7), float64], Tensor[(12, 10, 7), int8], Tensor[(60, 14), float64], Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), uint8], Tensor[(8, 10, 7), uint8]) */
}

def @func_4001() -> (Tensor[(13, 12, 3), float32], Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32], Tensor[(1, 10, 7), float64]) {
  @func_3999() /* ty=(Tensor[(13, 12, 3), float32], Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32], Tensor[(1, 10, 7), float64]) */
}

def @func_9894(%var_9892: Tensor[(3, 14, 2), int32]) -> (Tensor[(3, 14, 2), int32], Tensor[(?, 10, 7), bool], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64]) {
  @func_9891(%var_9892) /* ty=(Tensor[(3, 14, 2), int32], Tensor[(?, 10, 7), bool], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64]) */
}

def @func_5901() -> (Tensor[(1, 10, 7), float64],) {
  %554 = @func_4139() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %555 = %554.0;
  (%555,)
}

def @func_896(%var_894: Tensor[(16, 10, 7), float64]) -> Tensor[(16, 10, 7), bool] {
  @func_893(%var_894) /* ty=Tensor[(16, 10, 7), bool] */
}

def @func_6057() -> (Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32]) {
  %560 = fn () -> (Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32]) {
    %556 = @func_3615() /* ty=(Tensor[(1, 10, 7), float64],) */;
    %557 = @func_1184() /* ty=(Tensor[(8, 10, 7), uint8], Tensor[(13, 12, 3), float32], Tensor[(468), float64], Tensor[(1120), float64]) */;
    %558 = %556.0;
    %559 = %557.1;
    (%558, %559)
  };
  %560() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32]) */
}

def @func_9107() -> (Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64], Tensor[(2, 4, 12), int32], Tensor[(96), float64]) {
  %561 = @func_2913() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), uint8]) */;
  %562 = cast(meta[relay.Constant][29] /* ty=Tensor[(96), float64] */, dtype="float64") /* ty=Tensor[(96), float64] */;
  %563 = reshape(%562, newshape=[2, 4, 12]) /* ty=Tensor[(2, 4, 12), float64] */;
  %564 = @func_7904(%563) /* ty=(Tensor[(2, 4, 12), int32],) */;
  %565 = %561.2;
  %566 = @func_4308() /* ty=Tensor[(1, 10, 7), float64] */;
  %567 = %564.0;
  (%565, %566, %567, meta[relay.Constant][29] /* ty=Tensor[(96), float64] */)
}

def @func_5184() -> (Tensor[(8, 10, 7), float32],) {
  %572 = fn () -> (Tensor[(8, 10, 7), float32],) {
    %568 = @func_5032() /* ty=(Tensor[(8, 10, 7), uint8], Tensor[(35, 4), float64], Tensor[(35, 4), float64]) */;
    %569 = %568.0;
    %570 = cast(%569, dtype="float32") /* ty=Tensor[(8, 10, 7), float32] */;
    %571 = cosh(%570) /* ty=Tensor[(8, 10, 7), float32] */;
    (%571,)
  };
  %572() /* ty=(Tensor[(8, 10, 7), float32],) */
}

def @func_9536() -> (Tensor[(1, 10, 7), float64],) {
  %573 = @func_1129() /* ty=(Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), uint8], Tensor[(8, 10, 7), float64]) */;
  %574 = %573.1;
  (%574,)
}

def @func_8920() -> (Tensor[(1, 10, 7), float64],) {
  %575 = @func_2121() /* ty=Tensor[(1, 10, 7), float64] */;
  (%575,)
}

def @func_1231(%var_1229: bool, %var_1230: Tensor[(6, 6, 6), bool]) -> (Tensor[(6, 6, 6), bool], Tensor[(16, 10, 7), bool], Tensor[(1120), float64], Tensor[(8, 10, 7), bool], Tensor[(280, 2), uint8]) {
  %586 = fn (%var_1187: bool, %var_1188: Tensor[(6, 6, 6), bool]) -> (Tensor[(6, 6, 6), bool], Tensor[(16, 10, 7), bool], Tensor[(1120), float64], Tensor[(8, 10, 7), bool], Tensor[(280, 2), uint8]) {
    %576 = cast(%var_1187, dtype="bool") /* ty=bool */;
    %577 = cast(%var_1188, dtype="bool") /* ty=Tensor[(6, 6, 6), bool] */;
    %578 = cast(meta[relay.Constant][30] /* ty=Tensor[(1120), float64] */, dtype="float64") /* ty=Tensor[(1120), float64] */;
    %579 = reshape(%578, newshape=[16, 10, 7]) /* ty=Tensor[(16, 10, 7), float64] */;
    %580 = cast(meta[relay.Constant][31] /* ty=Tensor[(280, 2), uint8] */, dtype="uint8") /* ty=Tensor[(280, 2), uint8] */;
    %581 = reshape(%580, newshape=[8, 10, 7]) /* ty=Tensor[(8, 10, 7), uint8] */;
    %582 = @func_1027(%581) /* ty=(Tensor[(8, 10, 7), bool],) */;
    %583 = logical_or(%576, %577) /* ty=Tensor[(6, 6, 6), bool] */;
    %584 = @func_893(%579) /* ty=Tensor[(16, 10, 7), bool] */;
    %585 = %582.0;
    (%583, %584, meta[relay.Constant][30] /* ty=Tensor[(1120), float64] */, %585, meta[relay.Constant][31] /* ty=Tensor[(280, 2), uint8] */)
  };
  %586(%var_1229, %var_1230) /* ty=(Tensor[(6, 6, 6), bool], Tensor[(16, 10, 7), bool], Tensor[(1120), float64], Tensor[(8, 10, 7), bool], Tensor[(280, 2), uint8]) */
}

def @func_810() -> (Tensor[(1, 10, 7), float64],) {
  %587 = @func_786() /* ty=Tensor[(1, 10, 7), float64] */;
  (%587,)
}

def @func_6802(%var_6801: Tensor[(630), uint8]) -> (Tensor[(?, 10, 7), int8], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(630), uint8]) {
  %613 = fn (%var_6792: Tensor[(630), uint8]) -> (Tensor[(?, 10, 7), int8], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(630), uint8]) {
    %588 = @func_1813() /* ty=(Tensor[(1, 10, 7), float64],) */;
    %589 = %588.0;
    %590 = cast(%589, dtype="float32") /* ty=Tensor[(1, 10, 7), float32] */;
    %591 = atan(%590) /* ty=Tensor[(1, 10, 7), float32] */;
    %592 = @func_5694() /* ty=(Tensor[(1, 10, 7), float64],) */;
    %593 = %592.0;
    %594 = cast(%593, dtype="float64") /* ty=Tensor[(1, 10, 7), float64] */;
    %595 = shape_of(%591, dtype="int32") /* ty=Tensor[(3), int32] */;
    %596 = cast(%591, dtype="float64") /* ty=Tensor[(1, 10, 7), float64] */;
    %597 = dyn.reshape(%594, %595, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %598 = mod(%596, %597) /* ty=Tensor[(?, 10, 7), float64] */;
    %599 = cast(%598, dtype="int8") /* ty=Tensor[(?, 10, 7), int8] */;
    %600 = shape_of(%591, dtype="int32") /* ty=Tensor[(3), int32] */;
    %601 = cast(%591, dtype="int8") /* ty=Tensor[(1, 10, 7), int8] */;
    %602 = dyn.reshape(%599, %600, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %603 = cast(%589, dtype="uint8") /* ty=Tensor[(1, 10, 7), uint8] */;
    %604 = cast(%var_6792, dtype="uint8") /* ty=Tensor[(630), uint8] */;
    %605 = cast(%var_6792, dtype="bool") /* ty=Tensor[(630), bool] */;
    %606 = reshape(%603, newshape=[10, 1, 7]) /* ty=Tensor[(10, 1, 7), uint8] */;
    %607 = reshape(%604, newshape=[10, 9, 7]) /* ty=Tensor[(10, 9, 7), uint8] */;
    %608 = reshape(%605, newshape=[10, 9, 7]) /* ty=Tensor[(10, 9, 7), bool] */;
    %609 = @func_2560(%606, %607, %608) /* ty=(Tensor[(10, 9, 7), float64], Tensor[(1, 10, 7), float64]) */;
    %610 = multiply(%601, %602) /* ty=Tensor[(?, 10, 7), int8] */;
    %611 = @func_2953() /* ty=Tensor[(1, 10, 7), float64] */;
    %612 = %609.1;
    (%610, %611, %612, %var_6792)
  };
  %613(%var_6801) /* ty=(Tensor[(?, 10, 7), int8], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(630), uint8]) */
}

def @func_980() -> Tensor[(8, 10, 7), uint8] {
  @func_978() /* ty=Tensor[(8, 10, 7), uint8] */
}

def @func_7711() -> (Tensor[(16, 10, 7), bool], Tensor[(16, 10, 7), bool]) {
  %614 = @func_4293() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(16, 10, 7), bool], Tensor[(1120), float64]) */;
  %615 = %614.1;
  %616 = cast(%615, dtype="float64") /* ty=Tensor[(16, 10, 7), float64] */;
  %617 = reshape(%616, newshape=[16, 10, 7]) /* ty=Tensor[(16, 10, 7), float64] */;
  %618 = @func_893(%617) /* ty=Tensor[(16, 10, 7), bool] */;
  (%615, %618)
}

def @func_4591(%var_4590: Tensor[(3, 10, 7), float64]) -> (Tensor[(3, 10, 7), int16],) {
  %624 = fn (%var_4583: Tensor[(3, 10, 7), float64]) -> (Tensor[(3, 10, 7), int16],) {
    %619 = @func_1589() /* ty=(Tensor[(13, 12, 3), int64], Tensor[(1, 10, 7), float64]) */;
    %620 = %619.1;
    %621 = cast(%620, dtype="int16") /* ty=Tensor[(1, 10, 7), int16] */;
    %622 = cast(%var_4583, dtype="int16") /* ty=Tensor[(3, 10, 7), int16] */;
    %623 = bitwise_and(%621, %622) /* ty=Tensor[(3, 10, 7), int16] */;
    (%623,)
  };
  %624(%var_4590) /* ty=(Tensor[(3, 10, 7), int16],) */
}

def @func_3314() -> (Tensor[(1, 10, 7), float64],) {
  %627 = fn () -> (Tensor[(1, 10, 7), float64],) {
    %625 = @func_1362() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64]) */;
    %626 = %625.1;
    (%626,)
  };
  %627() /* ty=(Tensor[(1, 10, 7), float64],) */
}

def @func_3217() -> (Tensor[(13, 12, 3), float32],) {
  %637 = fn () -> (Tensor[(13, 12, 3), float32],) {
    %628 = @func_2816() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(1120), float64]) */;
    %629 = %628.2;
    %630 = @func_2345() /* ty=(Tensor[(13, 12, 3), float32],) */;
    %631 = %630.0;
    %632 = cast(%631, dtype="float32") /* ty=Tensor[(13, 12, 3), float32] */;
    %633 = shape_of(%629, dtype="int32") /* ty=Tensor[(3), int32] */;
    %634 = cast(%629, dtype="float32") /* ty=Tensor[(13, 12, 3), float32] */;
    %635 = dyn.reshape(%632, %633, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %636 = floor_divide(%634, %635) /* ty=Tensor[(13, 12, 3), float32] */;
    (%636,)
  };
  %637() /* ty=(Tensor[(13, 12, 3), float32],) */
}

def @func_8510() -> (Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(1260), int8], Tensor[(280, 4), float64], Tensor[(1404), float32], Tensor[(1120), float64], Tensor[(1, 10, 7), float64]) {
  @func_8508() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(1260), int8], Tensor[(280, 4), float64], Tensor[(1404), float32], Tensor[(1120), float64], Tensor[(1, 10, 7), float64]) */
}

def @func_1728(%var_1726: Tensor[(11, 10, 7), float32]) -> (Tensor[(11, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64]) {
  @func_1725(%var_1726) /* ty=(Tensor[(11, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64]) */
}

def @func_7498() -> (Tensor[(1, 10, 7), float64],) {
  @func_7496() /* ty=(Tensor[(1, 10, 7), float64],) */
}

def @func_4310() -> Tensor[(1, 10, 7), float64] {
  @func_4308() /* ty=Tensor[(1, 10, 7), float64] */
}

def @func_9402(%var_9401: Tensor[(1260), int8]) -> (Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64], uint16, Tensor[(728), uint16], Tensor[(?, 10, 7), bool], Tensor[(1260), int8]) {
  %650 = fn (%var_9385: Tensor[(1260), int8]) -> (Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64], uint16, Tensor[(728), uint16], Tensor[(?, 10, 7), bool], Tensor[(1260), int8]) {
    %638 = @func_5499() /* ty=(Tensor[(8, 10, 7), uint8],) */;
    %639 = cast(meta[relay.Constant][32] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %640 = cast(meta[relay.Constant][33] /* ty=Tensor[(728), uint16] */, dtype="uint16") /* ty=Tensor[(728), uint16] */;
    %641 = reshape(%639, newshape=[]) /* ty=uint16 */;
    %642 = reshape(%640, newshape=[8, 13, 7]) /* ty=Tensor[(8, 13, 7), uint16] */;
    %643 = @func_4385(%641, %642) /* ty=(Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), uint8], Tensor[(8, 13, 7), float32], Tensor[(1, 10, 7), float64]) */;
    %644 = cast(%var_9385, dtype="int8") /* ty=Tensor[(1260), int8] */;
    %645 = reshape(%644, newshape=[90, 14]) /* ty=Tensor[(90, 14), int8] */;
    %646 = @func_3473(%645) /* ty=(Tensor[(?, 10, 7), bool], Tensor[(1, 10, 7), float64], Tensor[(90, 14), int8]) */;
    %647 = %638.0;
    %648 = %643.0;
    %649 = %646.0;
    (%647, %648, meta[relay.Constant][32] /* ty=uint16 */, meta[relay.Constant][33] /* ty=Tensor[(728), uint16] */, %649, %var_9385)
  };
  %650(%var_9401) /* ty=(Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64], uint16, Tensor[(728), uint16], Tensor[(?, 10, 7), bool], Tensor[(1260), int8]) */
}

def @func_5353() -> Tensor[(1, 10, 7), float64] {
  %652 = fn () -> Tensor[(1, 10, 7), float64] {
    %651 = @func_1682() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64]) */;
    %651.1
  };
  %652() /* ty=Tensor[(1, 10, 7), float64] */
}

def @func_5016(%var_4993: Tensor[(15, 3, 14), bool]) -> (Tensor[(15, 3, 14), bool], Tensor[(15, 3, 14), float64]) {
  %653 = cast(meta[relay.Constant][34] /* ty=Tensor[(15, 3, 14), bool] */, dtype="bool") /* ty=Tensor[(15, 3, 14), bool] */;
  %654 = shape_of(%var_4993, dtype="int32") /* ty=Tensor[(3), int32] */;
  %655 = cast(%var_4993, dtype="bool") /* ty=Tensor[(15, 3, 14), bool] */;
  %656 = dyn.reshape(%653, %654, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %657 = cast(meta[relay.Constant][34] /* ty=Tensor[(15, 3, 14), bool] */, dtype="float64") /* ty=Tensor[(15, 3, 14), float64] */;
  %658 = logical_and(%655, %656) /* ty=Tensor[(15, 3, 14), bool] */;
  %659 = exp(%657) /* ty=Tensor[(15, 3, 14), float64] */;
  (%658, %659)
}

def @func_7240() -> (Tensor[(8, 10, 7), uint8],) {
  %660 = @func_1488() /* ty=Tensor[(8, 10, 7), uint8] */;
  (%660,)
}

def @func_3551(%var_3549: Tensor[(2, 10, 7), float64], %var_3550: Tensor[(768), int64]) -> (Tensor[(2, 10, 7), int8], Tensor[(1, 10, 7), float64], Tensor[(768), int64]) {
  @func_3547(%var_3549, %var_3550) /* ty=(Tensor[(2, 10, 7), int8], Tensor[(1, 10, 7), float64], Tensor[(768), int64]) */
}

def @func_3473(%var_3467: Tensor[(90, 14), int8]) -> (Tensor[(?, 10, 7), bool], Tensor[(1, 10, 7), float64], Tensor[(90, 14), int8]) {
  %661 = @func_1682() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64]) */;
  %662 = %661.0;
  %663 = @func_3067() /* ty=Tensor[(1, 10, 7), float64] */;
  %664 = cast(%663, dtype="uint8") /* ty=Tensor[(1, 10, 7), uint8] */;
  %665 = shape_of(%662, dtype="int32") /* ty=Tensor[(3), int32] */;
  %666 = cast(%662, dtype="uint8") /* ty=Tensor[(1, 10, 7), uint8] */;
  %667 = dyn.reshape(%664, %665, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %668 = minimum(%666, %667) /* ty=Tensor[(?, 10, 7), uint8] */;
  %669 = cast(%663, dtype="bool") /* ty=Tensor[(1, 10, 7), bool] */;
  %670 = shape_of(%668, dtype="int32") /* ty=Tensor[(3), int32] */;
  %671 = cast(%668, dtype="bool") /* ty=Tensor[(?, 10, 7), bool] */;
  %672 = dyn.reshape(%669, %670, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %673 = cast(%var_3467, dtype="int8") /* ty=Tensor[(90, 14), int8] */;
  %674 = reshape(%673, newshape=[7, 12, 15]) /* ty=Tensor[(7, 12, 15), int8] */;
  %675 = @func_2686(%674) /* ty=(Tensor[(7, 12, 15), uint8], Tensor[(1, 10, 7), float64], Tensor[(768), int64]) */;
  %676 = less(%671, %672) /* ty=Tensor[(?, 10, 7), bool] */;
  %677 = %675.1;
  (%676, %677, %var_3467)
}

def @func_7451() -> Tensor[(13, 12, 3), bool] {
  @func_7449() /* ty=Tensor[(13, 12, 3), bool] */
}

def @func_2954() -> Tensor[(1, 10, 7), float64] {
  %681 = fn () -> Tensor[(1, 10, 7), float64] {
    %678 = @func_810() /* ty=(Tensor[(1, 10, 7), float64],) */;
    %679 = %678.0;
    %680 = cast(%679, dtype="float64") /* ty=Tensor[(1, 10, 7), float64] */;
    asinh(%680) /* ty=Tensor[(1, 10, 7), float64] */
  };
  %681() /* ty=Tensor[(1, 10, 7), float64] */
}

def @func_4431(%var_4429: Tensor[(15, 16, 10), int8], %var_4430: Tensor[(15, 16, 10), int8]) -> (Tensor[(15, 16, 10), bool],) {
  @func_4427(%var_4429, %var_4430) /* ty=(Tensor[(15, 16, 10), bool],) */
}

def @func_6937() -> (Tensor[(1, 10, 7), float64],) {
  %683 = fn () -> (Tensor[(1, 10, 7), float64],) {
    %682 = @func_5732() /* ty=Tensor[(1, 10, 7), float64] */;
    (%682,)
  };
  %683() /* ty=(Tensor[(1, 10, 7), float64],) */
}

def @func_5891(%var_5874: Tensor[(2, 11, 10), float64]) -> (Tensor[(2, 11, 10), float64], Tensor[(1, 10, 7), float64]) {
  %684 = cast(%var_5874, dtype="float64") /* ty=Tensor[(2, 11, 10), float64] */;
  %685 = @func_2816() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(1120), float64]) */;
  %686 = log(%684) /* ty=Tensor[(2, 11, 10), float64] */;
  %687 = %685.3;
  (%686, %687)
}

def @main(%var_10704: Tensor[(2, 11, 4), float64], %var_10712: Tensor[(2, 11, 4), float64]) -> (Tensor[(2, 11, 4), uint8], Tensor[(1, 10, 7), float64], Tensor[(2, 11, 4), float64]) {
  %688 = cast(%var_10704, dtype="float64") /* ty=Tensor[(2, 11, 4), float64] */;
  %689 = log(%688) /* ty=Tensor[(2, 11, 4), float64] */;
  %690 = cast(%var_10712, dtype="uint8") /* ty=Tensor[(2, 11, 4), uint8] */;
  %691 = shape_of(%689, dtype="int32") /* ty=Tensor[(3), int32] */;
  %692 = cast(%689, dtype="uint8") /* ty=Tensor[(2, 11, 4), uint8] */;
  %693 = dyn.reshape(%690, %691, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %694 = @func_1684() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64]) */;
  %695 = cast(%689, dtype="float64") /* ty=Tensor[(2, 11, 4), float64] */;
  %696 = multiply(%692, %693) /* ty=Tensor[(2, 11, 4), uint8] */;
  %697 = %694.1;
  %698 = exp(%695) /* ty=Tensor[(2, 11, 4), float64] */;
  (%696, %697, %698)
}

def @func_1757() -> Tensor[(1, 10, 7), float64] {
  %699 = @func_810() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %699.0
}

def @func_7904(%var_7895: Tensor[(2, 4, 12), float64]) -> (Tensor[(2, 4, 12), int32],) {
  %700 = cast(%var_7895, dtype="float64") /* ty=Tensor[(2, 4, 12), float64] */;
  %701 = log10(%700) /* ty=Tensor[(2, 4, 12), float64] */;
  %702 = cast(%var_7895, dtype="int32") /* ty=Tensor[(2, 4, 12), int32] */;
  %703 = shape_of(%701, dtype="int32") /* ty=Tensor[(3), int32] */;
  %704 = cast(%701, dtype="int32") /* ty=Tensor[(2, 4, 12), int32] */;
  %705 = dyn.reshape(%702, %703, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %706 = subtract(%704, %705) /* ty=Tensor[(2, 4, 12), int32] */;
  (%706,)
}

def @func_1129() -> (Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), uint8], Tensor[(8, 10, 7), float64]) {
  %707 = @func_978() /* ty=Tensor[(8, 10, 7), uint8] */;
  %708 = cast(%707, dtype="float64") /* ty=Tensor[(8, 10, 7), float64] */;
  %709 = @func_978() /* ty=Tensor[(8, 10, 7), uint8] */;
  %710 = @func_786() /* ty=Tensor[(1, 10, 7), float64] */;
  %711 = @func_978() /* ty=Tensor[(8, 10, 7), uint8] */;
  %712 = tan(%708) /* ty=Tensor[(8, 10, 7), float64] */;
  (%709, %710, %711, %712)
}

def @func_4294() -> (Tensor[(1, 10, 7), float64], Tensor[(16, 10, 7), bool], Tensor[(1120), float64]) {
  %717 = fn () -> (Tensor[(1, 10, 7), float64], Tensor[(16, 10, 7), bool], Tensor[(1120), float64]) {
    %713 = cast(meta[relay.Constant][35] /* ty=Tensor[(1120), float64] */, dtype="float64") /* ty=Tensor[(1120), float64] */;
    %714 = reshape(%713, newshape=[16, 10, 7]) /* ty=Tensor[(16, 10, 7), float64] */;
    %715 = @func_786() /* ty=Tensor[(1, 10, 7), float64] */;
    %716 = @func_893(%714) /* ty=Tensor[(16, 10, 7), bool] */;
    (%715, %716, meta[relay.Constant][35] /* ty=Tensor[(1120), float64] */)
  };
  %717() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(16, 10, 7), bool], Tensor[(1120), float64]) */
}

def @func_9844() -> Tensor[(8, 10, 7), uint8] {
  %718 = @func_9107() /* ty=(Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64], Tensor[(2, 4, 12), int32], Tensor[(96), float64]) */;
  %718.0
}

def @func_7210(%var_7203: Tensor[(780), int16], %var_7205: Tensor[(768), int64]) -> (Tensor[(1, 10, 7), float64], Tensor[(?, 10, 7), bool], Tensor[(25, 6), float64], Tensor[(780), int16], Tensor[(150), float64], Tensor[(768), int64]) {
  %719 = @func_3940() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %720 = @func_3796() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %721 = %720.0;
  %722 = @func_6653() /* ty=Tensor[(?, 10, 7), uint32] */;
  %723 = cast(%722, dtype="bool") /* ty=Tensor[(?, 10, 7), bool] */;
  %724 = shape_of(%721, dtype="int32") /* ty=Tensor[(3), int32] */;
  %725 = cast(%721, dtype="bool") /* ty=Tensor[(1, 10, 7), bool] */;
  %726 = dyn.reshape(%723, %724, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %727 = cast(%var_7203, dtype="int16") /* ty=Tensor[(780), int16] */;
  %728 = cast(%var_7203, dtype="int16") /* ty=Tensor[(780), int16] */;
  %729 = cast(meta[relay.Constant][36] /* ty=Tensor[(150), float64] */, dtype="float64") /* ty=Tensor[(150), float64] */;
  %730 = cast(%var_7205, dtype="int64") /* ty=Tensor[(768), int64] */;
  %731 = reshape(%727, newshape=[13, 15, 4]) /* ty=Tensor[(13, 15, 4), int16] */;
  %732 = reshape(%728, newshape=[13, 15, 4]) /* ty=Tensor[(13, 15, 4), int16] */;
  %733 = reshape(%729, newshape=[25, 6]) /* ty=Tensor[(25, 6), float64] */;
  %734 = reshape(%730, newshape=[768]) /* ty=Tensor[(768), int64] */;
  %735 = @func_7020(%731, %732, %733, %734) /* ty=(Tensor[(13, 15, 4), bool], Tensor[(13, 12, 3), float64], Tensor[(1, 10, 7), float64], Tensor[(324), float64], Tensor[(5, 15, 2), float64], Tensor[(25, 6), float64], Tensor[(1, 10, 7), float64], Tensor[(768), int64], Tensor[(768), int64]) */;
  %736 = %719.0;
  %737 = logical_and(%725, %726) /* ty=Tensor[(?, 10, 7), bool] */;
  %738 = %735.5;
  (%736, %737, %738, %var_7203, meta[relay.Constant][36] /* ty=Tensor[(150), float64] */, %var_7205)
}

def @func_1684() -> (Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64]) {
  @func_1682() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64]) */
}

def @func_3251(%var_3249: Tensor[(8, 10, 7), uint8]) -> Tensor[(8, 10, 7), bool] {
  @func_3248(%var_3249) /* ty=Tensor[(8, 10, 7), bool] */
}

def @func_1394() -> (Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64]) {
  @func_1392() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64]) */
}

def @func_2347() -> (Tensor[(13, 12, 3), float32],) {
  @func_2345() /* ty=(Tensor[(13, 12, 3), float32],) */
}

def @func_1653() -> (Tensor[(8, 10, 7), uint8],) {
  %739 = @func_1488() /* ty=Tensor[(8, 10, 7), uint8] */;
  (%739,)
}

def @func_4553(%var_4528: Tensor[(1, 2, 4), int8]) -> Tensor[(2, 2, 4), bool] {
  %740 = cast(%var_4528, dtype="bool") /* ty=Tensor[(1, 2, 4), bool] */;
  %741 = cast(meta[relay.Constant][37] /* ty=Tensor[(2, 2, 4), int8] */, dtype="bool") /* ty=Tensor[(2, 2, 4), bool] */;
  greater(%740, %741) /* ty=Tensor[(2, 2, 4), bool] */
}

def @func_7036() -> (Tensor[(1, 10, 7), float64],) {
  %742 = @func_1813() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %743 = %742.0;
  (%743,)
}

def @func_9538() -> (Tensor[(1, 10, 7), float64],) {
  @func_9536() /* ty=(Tensor[(1, 10, 7), float64],) */
}

def @func_1759() -> Tensor[(1, 10, 7), float64] {
  @func_1757() /* ty=Tensor[(1, 10, 7), float64] */
}

def @func_8860() -> (Tensor[(1, 10, 7), float64],) {
  %744 = @func_786() /* ty=Tensor[(1, 10, 7), float64] */;
  (%744,)
}

def @func_5733() -> Tensor[(1, 10, 7), float64] {
  %745 = fn () -> Tensor[(1, 10, 7), float64] {
    @func_3503() /* ty=Tensor[(1, 10, 7), float64] */
  };
  %745() /* ty=Tensor[(1, 10, 7), float64] */
}

def @func_2686(%var_2649: Tensor[(7, 12, 15), int8]) -> (Tensor[(7, 12, 15), uint8], Tensor[(1, 10, 7), float64], Tensor[(768), int64]) {
  %746 = cast(meta[relay.Constant][38] /* ty=Tensor[(7, 12, 15), int8] */, dtype="int8") /* ty=Tensor[(7, 12, 15), int8] */;
  %747 = shape_of(%var_2649, dtype="int32") /* ty=Tensor[(3), int32] */;
  %748 = cast(%var_2649, dtype="int8") /* ty=Tensor[(7, 12, 15), int8] */;
  %749 = dyn.reshape(%746, %747, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %750 = subtract(%748, %749) /* ty=Tensor[(7, 12, 15), int8] */;
  %751 = cast(%750, dtype="uint8") /* ty=Tensor[(7, 12, 15), uint8] */;
  %752 = shape_of(%var_2649, dtype="int32") /* ty=Tensor[(3), int32] */;
  %753 = cast(%var_2649, dtype="uint8") /* ty=Tensor[(7, 12, 15), uint8] */;
  %754 = dyn.reshape(%751, %752, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %755 = cast(meta[relay.Constant][39] /* ty=Tensor[(768), int64] */, dtype="int64") /* ty=Tensor[(768), int64] */;
  %756 = reshape(%755, newshape=[12, 8, 8]) /* ty=Tensor[(12, 8, 8), int64] */;
  %757 = @func_1958(%756) /* ty=(Tensor[(12, 8, 8), bool], Tensor[(8, 10, 7), float64], Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32]) */;
  %758 = left_shift(%753, %754) /* ty=Tensor[(7, 12, 15), uint8] */;
  %759 = %757.4;
  (%758, %759, meta[relay.Constant][39] /* ty=Tensor[(768), int64] */)
}

def @func_2123() -> Tensor[(1, 10, 7), float64] {
  @func_2121() /* ty=Tensor[(1, 10, 7), float64] */
}

def @func_3574(%var_3573: Tensor[(12, 10, 7), float64]) -> Tensor[(12, 10, 7), int8] {
  %764 = fn (%var_3558: Tensor[(12, 10, 7), float64]) -> Tensor[(12, 10, 7), int8] {
    %760 = @func_1362() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64]) */;
    %761 = %760.1;
    %762 = cast(%761, dtype="int8") /* ty=Tensor[(1, 10, 7), int8] */;
    %763 = cast(%var_3558, dtype="int8") /* ty=Tensor[(12, 10, 7), int8] */;
    right_shift(%762, %763) /* ty=Tensor[(12, 10, 7), int8] */
  };
  %764(%var_3573) /* ty=Tensor[(12, 10, 7), int8] */
}

def @func_6589() -> Tensor[(8, 10, 7), float32] {
  @func_6587() /* ty=Tensor[(8, 10, 7), float32] */
}

def @func_10526(%var_10491: Tensor[(630), float64]) -> (Tensor[(8, 10, 7), float32], Tensor[(1, 10, 7), float64], Tensor[(14, 15, 3), bool], Tensor[(14, 3), float64], Tensor[(630), float64]) {
  %765 = @func_3940() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %766 = %765.0;
  %767 = @func_1653() /* ty=(Tensor[(8, 10, 7), uint8],) */;
  %768 = %767.0;
  %769 = cast(%766, dtype="float32") /* ty=Tensor[(1, 10, 7), float32] */;
  %770 = cast(%768, dtype="float32") /* ty=Tensor[(8, 10, 7), float32] */;
  %771 = cast(meta[relay.Constant][40] /* ty=Tensor[(14, 3), float64] */, dtype="float64") /* ty=Tensor[(14, 3), float64] */;
  %772 = cast(%var_10491, dtype="float64") /* ty=Tensor[(630), float64] */;
  %773 = reshape(%771, newshape=[14, 1, 3]) /* ty=Tensor[(14, 1, 3), float64] */;
  %774 = reshape(%772, newshape=[14, 15, 3]) /* ty=Tensor[(14, 15, 3), float64] */;
  %775 = @func_10102(%773, %774) /* ty=(Tensor[(14, 15, 3), bool],) */;
  %776 = mod(%769, %770) /* ty=Tensor[(8, 10, 7), float32] */;
  %777 = @func_4654() /* ty=Tensor[(1, 10, 7), float64] */;
  %778 = %775.0;
  (%776, %777, %778, meta[relay.Constant][40] /* ty=Tensor[(14, 3), float64] */, %var_10491)
}

def @func_7992(%var_7991: Tensor[(150), float64]) -> (Tensor[(8, 10, 7), float32], Tensor[(13, 15, 4), bool], Tensor[(780), int16], Tensor[(150), float64], Tensor[(768), int64]) {
  %791 = fn (%var_7987: Tensor[(150), float64]) -> (Tensor[(8, 10, 7), float32], Tensor[(13, 15, 4), bool], Tensor[(780), int16], Tensor[(150), float64], Tensor[(768), int64]) {
    %779 = @func_5183() /* ty=(Tensor[(8, 10, 7), float32],) */;
    %780 = cast(meta[relay.Constant][41] /* ty=Tensor[(780), int16] */, dtype="int16") /* ty=Tensor[(780), int16] */;
    %781 = cast(meta[relay.Constant][41] /* ty=Tensor[(780), int16] */, dtype="int16") /* ty=Tensor[(780), int16] */;
    %782 = cast(%var_7987, dtype="float64") /* ty=Tensor[(150), float64] */;
    %783 = cast(meta[relay.Constant][42] /* ty=Tensor[(768), int64] */, dtype="int64") /* ty=Tensor[(768), int64] */;
    %784 = reshape(%780, newshape=[13, 15, 4]) /* ty=Tensor[(13, 15, 4), int16] */;
    %785 = reshape(%781, newshape=[13, 15, 4]) /* ty=Tensor[(13, 15, 4), int16] */;
    %786 = reshape(%782, newshape=[25, 6]) /* ty=Tensor[(25, 6), float64] */;
    %787 = reshape(%783, newshape=[768]) /* ty=Tensor[(768), int64] */;
    %788 = @func_7020(%784, %785, %786, %787) /* ty=(Tensor[(13, 15, 4), bool], Tensor[(13, 12, 3), float64], Tensor[(1, 10, 7), float64], Tensor[(324), float64], Tensor[(5, 15, 2), float64], Tensor[(25, 6), float64], Tensor[(1, 10, 7), float64], Tensor[(768), int64], Tensor[(768), int64]) */;
    %789 = %779.0;
    %790 = %788.0;
    (%789, %790, meta[relay.Constant][41] /* ty=Tensor[(780), int16] */, %var_7987, meta[relay.Constant][42] /* ty=Tensor[(768), int64] */)
  };
  %791(%var_7991) /* ty=(Tensor[(8, 10, 7), float32], Tensor[(13, 15, 4), bool], Tensor[(780), int16], Tensor[(150), float64], Tensor[(768), int64]) */
}

def @func_1029(%var_1028: Tensor[(8, 10, 7), uint8]) -> (Tensor[(8, 10, 7), bool],) {
  %798 = fn (%var_1018: Tensor[(8, 10, 7), uint8]) -> (Tensor[(8, 10, 7), bool],) {
    %792 = @func_978() /* ty=Tensor[(8, 10, 7), uint8] */;
    %793 = cast(%var_1018, dtype="bool") /* ty=Tensor[(8, 10, 7), bool] */;
    %794 = shape_of(%792, dtype="int32") /* ty=Tensor[(3), int32] */;
    %795 = cast(%792, dtype="bool") /* ty=Tensor[(8, 10, 7), bool] */;
    %796 = dyn.reshape(%793, %794, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %797 = less_equal(%795, %796) /* ty=Tensor[(8, 10, 7), bool] */;
    (%797,)
  };
  %798(%var_1028) /* ty=(Tensor[(8, 10, 7), bool],) */
}

def @func_473(%var_471: Tensor[(8, 11, 4), float32]) -> (Tensor[(8, 11, 4), float32],) {
  @func_470(%var_471) /* ty=(Tensor[(8, 11, 4), float32],) */
}

def @func_2639(%var_2634: Tensor[(324), float64]) -> (Tensor[(1, 10, 7), float64], Tensor[(9, 3, 12), float64], Tensor[(324), float64]) {
  %799 = @func_1457() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %800 = cast(%var_2634, dtype="float64") /* ty=Tensor[(324), float64] */;
  %801 = reshape(%800, newshape=[9, 3, 12]) /* ty=Tensor[(9, 3, 12), float64] */;
  %802 = @func_2584(%801) /* ty=(Tensor[(9, 3, 12), float64], Tensor[(1, 10, 7), float64]) */;
  %803 = %799.0;
  %804 = %802.0;
  (%803, %804, %var_2634)
}

def @func_7892() -> (Tensor[(8, 10, 7), float32],) {
  %809 = fn () -> (Tensor[(8, 10, 7), float32],) {
    %805 = @func_7240() /* ty=(Tensor[(8, 10, 7), uint8],) */;
    %806 = %805.0;
    %807 = cast(%806, dtype="float32") /* ty=Tensor[(8, 10, 7), float32] */;
    %808 = exp(%807) /* ty=Tensor[(8, 10, 7), float32] */;
    (%808,)
  };
  %809() /* ty=(Tensor[(8, 10, 7), float32],) */
}

def @func_1186() -> (Tensor[(8, 10, 7), uint8], Tensor[(13, 12, 3), float32], Tensor[(468), float64], Tensor[(1120), float64]) {
  @func_1184() /* ty=(Tensor[(8, 10, 7), uint8], Tensor[(13, 12, 3), float32], Tensor[(468), float64], Tensor[(1120), float64]) */
}

def @func_1774() -> (Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), uint8]) {
  %812 = fn () -> (Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), uint8]) {
    %810 = @func_1757() /* ty=Tensor[(1, 10, 7), float64] */;
    %811 = @func_1488() /* ty=Tensor[(8, 10, 7), uint8] */;
    (%810, %811)
  };
  %812() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), uint8]) */
}

def @func_4389(%var_4387: uint16, %var_4388: Tensor[(8, 13, 7), uint16]) -> (Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), uint8], Tensor[(8, 13, 7), float32], Tensor[(1, 10, 7), float64]) {
  @func_4385(%var_4387, %var_4388) /* ty=(Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), uint8], Tensor[(8, 13, 7), float32], Tensor[(1, 10, 7), float64]) */
}

def @func_5432() -> (Tensor[(?, 10, 7), float64], Tensor[(1, 10, 7), float64]) {
  %823 = fn () -> (Tensor[(?, 10, 7), float64], Tensor[(1, 10, 7), float64]) {
    %813 = @func_4012() /* ty=(Tensor[(1, 10, 7), float64],) */;
    %814 = %813.0;
    %815 = @func_1362() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64]) */;
    %816 = %815.0;
    %817 = cast(%816, dtype="float64") /* ty=Tensor[(1, 10, 7), float64] */;
    %818 = shape_of(%814, dtype="int32") /* ty=Tensor[(3), int32] */;
    %819 = cast(%814, dtype="float64") /* ty=Tensor[(1, 10, 7), float64] */;
    %820 = dyn.reshape(%817, %818, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %821 = divide(%819, %820) /* ty=Tensor[(?, 10, 7), float64] */;
    %822 = @func_4308() /* ty=Tensor[(1, 10, 7), float64] */;
    (%821, %822)
  };
  %823() /* ty=(Tensor[(?, 10, 7), float64], Tensor[(1, 10, 7), float64]) */
}

def @func_1682() -> (Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64]) {
  %824 = @func_1392() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64]) */;
  %825 = %824.1;
  %826 = @func_786() /* ty=Tensor[(1, 10, 7), float64] */;
  (%825, %826)
}

def @func_7561() -> Tensor[(1, 10, 7), float64] {
  %827 = @func_7496() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %827.0
}

def @func_3248(%var_3242: Tensor[(8, 10, 7), uint8]) -> Tensor[(8, 10, 7), bool] {
  %828 = @func_978() /* ty=Tensor[(8, 10, 7), uint8] */;
  %829 = cast(%var_3242, dtype="bool") /* ty=Tensor[(8, 10, 7), bool] */;
  %830 = shape_of(%828, dtype="int32") /* ty=Tensor[(3), int32] */;
  %831 = cast(%828, dtype="bool") /* ty=Tensor[(8, 10, 7), bool] */;
  %832 = dyn.reshape(%829, %830, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%831, %832) /* ty=Tensor[(8, 10, 7), bool] */
}

def @func_470(%var_463: Tensor[(8, 11, 4), float32]) -> (Tensor[(8, 11, 4), float32],) {
  %833 = cast(%var_463, dtype="float32") /* ty=Tensor[(8, 11, 4), float32] */;
  %834 = sin(%833) /* ty=Tensor[(8, 11, 4), float32] */;
  (%834,)
}

def @func_8957() -> (Tensor[(16, 10, 7), float64],) {
  %839 = fn () -> (Tensor[(16, 10, 7), float64],) {
    %835 = @func_4293() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(16, 10, 7), bool], Tensor[(1120), float64]) */;
    %836 = %835.1;
    %837 = cast(%836, dtype="float64") /* ty=Tensor[(16, 10, 7), float64] */;
    %838 = atanh(%837) /* ty=Tensor[(16, 10, 7), float64] */;
    (%838,)
  };
  %839() /* ty=(Tensor[(16, 10, 7), float64],) */
}

def @func_6260(%var_6258: Tensor[(7, 13, 7), int16]) -> Tensor[(7, 13, 7), int16] {
  @func_6257(%var_6258) /* ty=Tensor[(7, 13, 7), int16] */
}

def @func_3796() -> (Tensor[(1, 10, 7), float64],) {
  %840 = @func_2121() /* ty=Tensor[(1, 10, 7), float64] */;
  (%840,)
}

def @func_3122(%var_3107: Tensor[(770), float32]) -> (Tensor[(1120), float32], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), uint8], Tensor[(770), float32]) {
  %841 = @func_1184() /* ty=(Tensor[(8, 10, 7), uint8], Tensor[(13, 12, 3), float32], Tensor[(468), float64], Tensor[(1120), float64]) */;
  %842 = %841.3;
  %843 = cast(%842, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %844 = cast(%var_3107, dtype="float32") /* ty=Tensor[(770), float32] */;
  %845 = reshape(%844, newshape=[11, 10, 7]) /* ty=Tensor[(11, 10, 7), float32] */;
  %846 = @func_1725(%845) /* ty=(Tensor[(11, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64]) */;
  %847 = log10(%843) /* ty=Tensor[(1120), float32] */;
  %848 = @func_1757() /* ty=Tensor[(1, 10, 7), float64] */;
  %849 = @func_2030() /* ty=Tensor[(1, 10, 7), float64] */;
  %850 = %846.2;
  (%847, %848, %849, %850, %var_3107)
}

def @func_8291() -> (Tensor[(1, 10, 7), float64],) {
  %852 = fn () -> (Tensor[(1, 10, 7), float64],) {
    %851 = @func_5352() /* ty=Tensor[(1, 10, 7), float64] */;
    (%851,)
  };
  %852() /* ty=(Tensor[(1, 10, 7), float64],) */
}

def @func_7214(%var_7212: Tensor[(780), int16], %var_7213: Tensor[(768), int64]) -> (Tensor[(1, 10, 7), float64], Tensor[(?, 10, 7), bool], Tensor[(25, 6), float64], Tensor[(780), int16], Tensor[(150), float64], Tensor[(768), int64]) {
  @func_7210(%var_7212, %var_7213) /* ty=(Tensor[(1, 10, 7), float64], Tensor[(?, 10, 7), bool], Tensor[(25, 6), float64], Tensor[(780), int16], Tensor[(150), float64], Tensor[(768), int64]) */
}

def @func_7663(%var_7661: Tensor[(8, 10, 7), float32]) -> (Tensor[(8, 10, 7), uint8], Tensor[(8, 10, 7), int16], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32]) {
  @func_7660(%var_7661) /* ty=(Tensor[(8, 10, 7), uint8], Tensor[(8, 10, 7), int16], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32]) */
}

def @func_4483() -> Tensor[(3, 11, 12), bool] {
  %853 = @func_3924() /* ty=Tensor[(3, 11, 12), uint16] */;
  %854 = cast(meta[relay.Constant][43] /* ty=Tensor[(3, 11, 12), uint16] */, dtype="bool") /* ty=Tensor[(3, 11, 12), bool] */;
  %855 = shape_of(%853, dtype="int32") /* ty=Tensor[(3), int32] */;
  %856 = cast(%853, dtype="bool") /* ty=Tensor[(3, 11, 12), bool] */;
  %857 = dyn.reshape(%854, %855, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%856, %857) /* ty=Tensor[(3, 11, 12), bool] */
}

def @func_9823(%var_9822: Tensor[(54, 6), float64]) -> (Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), bool], Tensor[(1, 10, 7), float64], Tensor[(560), float32], Tensor[(1, 10, 7), float64], Tensor[(54, 6), float32], Tensor[(15, 10, 7), uint32]) {
  %872 = fn (%var_9777: Tensor[(54, 6), float64]) -> (Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), bool], Tensor[(1, 10, 7), float64], Tensor[(560), float32], Tensor[(1, 10, 7), float64], Tensor[(54, 6), float32], Tensor[(15, 10, 7), uint32]) {
    %858 = @func_3603() /* ty=(Tensor[(8, 10, 7), uint8], Tensor[(1, 10, 7), float64]) */;
    %859 = cast(meta[relay.Constant][44] /* ty=Tensor[(560), float32] */, dtype="float32") /* ty=Tensor[(560), float32] */;
    %860 = reshape(%859, newshape=[8, 10, 7]) /* ty=Tensor[(8, 10, 7), float32] */;
    %861 = @func_7660(%860) /* ty=(Tensor[(8, 10, 7), uint8], Tensor[(8, 10, 7), int16], Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32]) */;
    %862 = cast(%var_9777, dtype="float64") /* ty=Tensor[(54, 6), float64] */;
    %863 = reshape(%862, newshape=[9, 3, 12]) /* ty=Tensor[(9, 3, 12), float64] */;
    %864 = @func_2584(%863) /* ty=(Tensor[(9, 3, 12), float64], Tensor[(1, 10, 7), float64]) */;
    %865 = cast(%var_9777, dtype="float32") /* ty=Tensor[(54, 6), float32] */;
    %866 = %858.1;
    %867 = @func_7449() /* ty=Tensor[(13, 12, 3), bool] */;
    %868 = %861.2;
    %869 = %864.1;
    %870 = log10(%865) /* ty=Tensor[(54, 6), float32] */;
    %871 = @func_5072() /* ty=Tensor[(15, 10, 7), uint32] */;
    (%866, %867, %868, meta[relay.Constant][44] /* ty=Tensor[(560), float32] */, %869, %870, %871)
  };
  %872(%var_9822) /* ty=(Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), bool], Tensor[(1, 10, 7), float64], Tensor[(560), float32], Tensor[(1, 10, 7), float64], Tensor[(54, 6), float32], Tensor[(15, 10, 7), uint32]) */
}

def @func_10034(%var_10033: Tensor[(8, 7, 16), float64]) -> (Tensor[(8, 7, 16), float64], Tensor[(1, 10, 7), float64]) {
  %879 = fn (%var_10004: Tensor[(8, 7, 16), float64]) -> (Tensor[(8, 7, 16), float64], Tensor[(1, 10, 7), float64]) {
    %873 = cast(%var_10004, dtype="float64") /* ty=Tensor[(8, 7, 16), float64] */;
    %874 = shape_of(meta[relay.Constant][45] /* ty=Tensor[(8, 7, 16), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %875 = cast(meta[relay.Constant][45] /* ty=Tensor[(8, 7, 16), float64] */, dtype="float64") /* ty=Tensor[(8, 7, 16), float64] */;
    %876 = dyn.reshape(%873, %874, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %877 = floor_mod(%875, %876) /* ty=Tensor[(8, 7, 16), float64] */;
    %878 = @func_3067() /* ty=Tensor[(1, 10, 7), float64] */;
    (%877, %878)
  };
  %879(%var_10033) /* ty=(Tensor[(8, 7, 16), float64], Tensor[(1, 10, 7), float64]) */
}

def @func_5224() -> (Tensor[(8, 10, 7), float64],) {
  %880 = @func_978() /* ty=Tensor[(8, 10, 7), uint8] */;
  %881 = cast(%880, dtype="float64") /* ty=Tensor[(8, 10, 7), float64] */;
  %882 = atan(%881) /* ty=Tensor[(8, 10, 7), float64] */;
  (%882,)
}

def @func_10296() -> (Tensor[(8, 10, 7), uint8], Tensor[(11, 3, 3), float32], Tensor[(33, 3), float32]) {
  @func_10294() /* ty=(Tensor[(8, 10, 7), uint8], Tensor[(11, 3, 3), float32], Tensor[(33, 3), float32]) */
}

def @func_2586(%var_2585: Tensor[(9, 3, 12), float64]) -> (Tensor[(9, 3, 12), float64], Tensor[(1, 10, 7), float64]) {
  %887 = fn (%var_2577: Tensor[(9, 3, 12), float64]) -> (Tensor[(9, 3, 12), float64], Tensor[(1, 10, 7), float64]) {
    %883 = cast(%var_2577, dtype="float64") /* ty=Tensor[(9, 3, 12), float64] */;
    %884 = @func_1362() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64]) */;
    %885 = rsqrt(%883) /* ty=Tensor[(9, 3, 12), float64] */;
    %886 = %884.1;
    (%885, %886)
  };
  %887(%var_2585) /* ty=(Tensor[(9, 3, 12), float64], Tensor[(1, 10, 7), float64]) */
}

def @func_10395(%var_10394: Tensor[(11, 10, 7), float64]) -> (Tensor[(1, 10, 7), float64], Tensor[(11, 10, 7), bool], Tensor[(11, 10, 7), uint64], Tensor[(8, 10, 7), float64]) {
  %900 = fn (%var_10348: Tensor[(11, 10, 7), float64]) -> (Tensor[(1, 10, 7), float64], Tensor[(11, 10, 7), bool], Tensor[(11, 10, 7), uint64], Tensor[(8, 10, 7), float64]) {
    %888 = @func_5901() /* ty=(Tensor[(1, 10, 7), float64],) */;
    %889 = @func_5431() /* ty=(Tensor[(?, 10, 7), float64], Tensor[(1, 10, 7), float64]) */;
    %890 = %889.1;
    %891 = cast(%890, dtype="bool") /* ty=Tensor[(1, 10, 7), bool] */;
    %892 = cast(%var_10348, dtype="bool") /* ty=Tensor[(11, 10, 7), bool] */;
    %893 = cast(%890, dtype="uint64") /* ty=Tensor[(1, 10, 7), uint64] */;
    %894 = cast(%var_10348, dtype="uint64") /* ty=Tensor[(11, 10, 7), uint64] */;
    %895 = @func_3341() /* ty=(Tensor[(8, 10, 7), float64],) */;
    %896 = %888.0;
    %897 = less(%891, %892) /* ty=Tensor[(11, 10, 7), bool] */;
    %898 = left_shift(%893, %894) /* ty=Tensor[(11, 10, 7), uint64] */;
    %899 = %895.0;
    (%896, %897, %898, %899)
  };
  %900(%var_10394) /* ty=(Tensor[(1, 10, 7), float64], Tensor[(11, 10, 7), bool], Tensor[(11, 10, 7), uint64], Tensor[(8, 10, 7), float64]) */
}

def @func_736(%var_732: Tensor[(8, 13, 15), float32]) -> (Tensor[(8, 13, 15), float32],) {
  %901 = cast(%var_732, dtype="float32") /* ty=Tensor[(8, 13, 15), float32] */;
  %902 = tan(%901) /* ty=Tensor[(8, 13, 15), float32] */;
  (%902,)
}

def @func_5129(%var_5078: Tensor[(11, 10, 7), float64], %var_5105: Tensor[(12, 18), bool], %var_5112: Tensor[(5, 10, 7), float64]) -> (Tensor[(11, 10, 7), float32], Tensor[(1, 10, 7), float64], Tensor[(13, 12, 3), float32], Tensor[(11, 10, 7), bool], Tensor[(6, 6, 6), bool], bool, Tensor[(12, 18), bool], Tensor[(5, 10, 7), float32]) {
  %903 = @func_3313() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %904 = %903.0;
  %905 = cast(%904, dtype="float32") /* ty=Tensor[(1, 10, 7), float32] */;
  %906 = cast(%var_5078, dtype="float32") /* ty=Tensor[(11, 10, 7), float32] */;
  %907 = @func_4861() /* ty=(Tensor[(3, 11, 12), uint16], Tensor[(1, 10, 7), float64]) */;
  %908 = @func_2345() /* ty=(Tensor[(13, 12, 3), float32],) */;
  %909 = cast(%904, dtype="bool") /* ty=Tensor[(1, 10, 7), bool] */;
  %910 = cast(%var_5078, dtype="bool") /* ty=Tensor[(11, 10, 7), bool] */;
  %911 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %912 = cast(%var_5105, dtype="bool") /* ty=Tensor[(12, 18), bool] */;
  %913 = reshape(%911, newshape=[]) /* ty=bool */;
  %914 = reshape(%912, newshape=[6, 6, 6]) /* ty=Tensor[(6, 6, 6), bool] */;
  %915 = @func_1228(%913, %914) /* ty=(Tensor[(6, 6, 6), bool], Tensor[(16, 10, 7), bool], Tensor[(1120), float64], Tensor[(8, 10, 7), bool], Tensor[(280, 2), uint8]) */;
  %916 = cast(%904, dtype="float32") /* ty=Tensor[(1, 10, 7), float32] */;
  %917 = cast(%var_5112, dtype="float32") /* ty=Tensor[(5, 10, 7), float32] */;
  %918 = floor_mod(%905, %906) /* ty=Tensor[(11, 10, 7), float32] */;
  %919 = %907.1;
  %920 = %908.0;
  %921 = greater_equal(%909, %910) /* ty=Tensor[(11, 10, 7), bool] */;
  %922 = %915.0;
  %923 = floor_mod(%916, %917) /* ty=Tensor[(5, 10, 7), float32] */;
  (%918, %919, %920, %921, %922, True /* ty=bool */, %var_5105, %923)
}

def @func_5894(%var_5892: Tensor[(2, 11, 10), float64]) -> (Tensor[(2, 11, 10), float64], Tensor[(1, 10, 7), float64]) {
  @func_5891(%var_5892) /* ty=(Tensor[(2, 11, 10), float64], Tensor[(1, 10, 7), float64]) */
}

def @func_2831() -> Tensor[(1, 10, 7), float64] {
  %924 = @func_1813() /* ty=(Tensor[(1, 10, 7), float64],) */;
  %924.0
}

def @func_2345() -> (Tensor[(13, 12, 3), float32],) {
  %925 = @func_1184() /* ty=(Tensor[(8, 10, 7), uint8], Tensor[(13, 12, 3), float32], Tensor[(468), float64], Tensor[(1120), float64]) */;
  %926 = %925.1;
  (%926,)
}

def @func_10665() -> (Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64]) {
  @func_10663() /* ty=(Tensor[(1, 10, 7), float64], Tensor[(1, 10, 7), float64]) */
}

def @func_7961(%var_7948: Tensor[(11, 3, 3), float32]) -> (Tensor[(11, 3, 3), float32],) {
  %927 = cast(%var_7948, dtype="float32") /* ty=Tensor[(11, 3, 3), float32] */;
  %928 = acos(%927) /* ty=Tensor[(11, 3, 3), float32] */;
  (%928,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

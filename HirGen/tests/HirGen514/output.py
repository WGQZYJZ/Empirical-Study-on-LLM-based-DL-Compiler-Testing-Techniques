import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_463 = relay.var("var_463", dtype = "float32", shape = (8, 11, 4))#candidate|463|(8, 11, 4)|var|float32
uop_464 = relay.sin(var_463.astype('float32')) # shape=(8, 11, 4)
output = relay.Tuple([uop_464,])
output2 = relay.Tuple([uop_464,])
func_470 = relay.Function([var_463,], output)
mod['func_470'] = func_470
mod = relay.transform.InferType()(mod)
mutated_mod['func_470'] = func_470
mutated_mod = relay.transform.InferType()(mutated_mod)
var_471 = relay.var("var_471", dtype = "float32", shape = (8, 11, 4))#candidate|471|(8, 11, 4)|var|float32
func_470_call = mutated_mod.get_global_var('func_470')
call_472 = func_470_call(var_471)
output = call_472
func_473 = relay.Function([var_471], output)
mutated_mod['func_473'] = func_473
mutated_mod = relay.transform.InferType()(mutated_mod)
var_732 = relay.var("var_732", dtype = "float32", shape = (8, 13, 15))#candidate|732|(8, 13, 15)|var|float32
uop_733 = relay.tan(var_732.astype('float32')) # shape=(8, 13, 15)
output = relay.Tuple([uop_733,])
output2 = relay.Tuple([uop_733,])
func_736 = relay.Function([var_732,], output)
mod['func_736'] = func_736
mod = relay.transform.InferType()(mod)
mutated_mod['func_736'] = func_736
mutated_mod = relay.transform.InferType()(mutated_mod)
var_737 = relay.var("var_737", dtype = "float32", shape = (8, 13, 15))#candidate|737|(8, 13, 15)|var|float32
func_736_call = mutated_mod.get_global_var('func_736')
call_738 = func_736_call(var_737)
output = call_738
func_739 = relay.Function([var_737], output)
mutated_mod['func_739'] = func_739
mutated_mod = relay.transform.InferType()(mutated_mod)
const_772 = relay.const([[[8.682583,4.967991,-6.155014,-9.511993,1.973735,9.497701,-7.136086],[6.957190,5.417559,-6.109562,-6.132711,8.551205,6.675187,4.693972],[1.178801,5.080460,8.223956,-1.439564,-5.634950,-4.682116,-4.122183],[-2.799267,-1.324234,6.848843,3.901868,-2.685581,6.755733,9.945231],[-7.784368,3.740459,-3.838957,-1.561309,-0.291272,0.027296,-5.572516],[-2.214414,1.370891,4.053146,-5.053803,2.000344,0.517621,-6.085835],[6.546968,9.512565,-6.862567,-3.829133,-7.623926,-8.036004,9.061690],[7.936651,7.710831,-8.866288,-0.254737,-2.456455,-7.758254,4.524834],[-7.776614,-9.123849,5.300377,3.726576,9.755396,-9.865940,-6.718691],[-5.390583,2.894250,2.654321,1.391905,2.884017,-8.458318,5.687148]]], dtype = "float64")#candidate|772|(1, 10, 7)|const|float64
uop_773 = relay.sin(const_772.astype('float64')) # shape=(1, 10, 7)
output = uop_773
output2 = uop_773
func_786 = relay.Function([], output)
mod['func_786'] = func_786
mod = relay.transform.InferType()(mod)
mutated_mod['func_786'] = func_786
mutated_mod = relay.transform.InferType()(mutated_mod)
func_786_call = mutated_mod.get_global_var('func_786')
call_787 = func_786_call()
output = call_787
func_788 = relay.Function([], output)
mutated_mod['func_788'] = func_788
mutated_mod = relay.transform.InferType()(mutated_mod)
func_786_call = mod.get_global_var('func_786')
func_788_call = mutated_mod.get_global_var('func_788')
call_798 = func_786_call()
call_799 = func_786_call()
output = relay.Tuple([call_798,])
output2 = relay.Tuple([call_799,])
func_810 = relay.Function([], output)
mod['func_810'] = func_810
mod = relay.transform.InferType()(mod)
mutated_mod['func_810'] = func_810
mutated_mod = relay.transform.InferType()(mutated_mod)
func_810_call = mutated_mod.get_global_var('func_810')
call_811 = func_810_call()
output = call_811
func_812 = relay.Function([], output)
mutated_mod['func_812'] = func_812
mutated_mod = relay.transform.InferType()(mutated_mod)
func_786_call = mod.get_global_var('func_786')
func_788_call = mutated_mod.get_global_var('func_788')
call_833 = func_786_call()
call_834 = func_786_call()
var_885 = relay.var("var_885", dtype = "float64", shape = (16, 10, 7))#candidate|885|(16, 10, 7)|var|float64
bop_886 = relay.greater_equal(call_833.astype('bool'), var_885.astype('bool')) # shape=(16, 10, 7)
bop_889 = relay.greater_equal(call_834.astype('bool'), var_885.astype('bool')) # shape=(16, 10, 7)
output = bop_886
output2 = bop_889
func_893 = relay.Function([var_885,], output)
mod['func_893'] = func_893
mod = relay.transform.InferType()(mod)
mutated_mod['func_893'] = func_893
mutated_mod = relay.transform.InferType()(mutated_mod)
var_894 = relay.var("var_894", dtype = "float64", shape = (16, 10, 7))#candidate|894|(16, 10, 7)|var|float64
func_893_call = mutated_mod.get_global_var('func_893')
call_895 = func_893_call(var_894)
output = call_895
func_896 = relay.Function([var_894], output)
mutated_mod['func_896'] = func_896
mutated_mod = relay.transform.InferType()(mutated_mod)
func_786_call = mod.get_global_var('func_786')
func_788_call = mutated_mod.get_global_var('func_788')
call_937 = func_786_call()
call_938 = func_786_call()
const_944 = relay.const([[[-0.015823,-0.840491,-0.092783,-5.422064,7.884449,-8.217646,-2.166642],[1.349106,3.445422,-2.874562,7.504010,-3.544670,-4.442685,-1.405410],[5.291312,4.449410,-5.967511,-8.295478,2.011797,7.603747,-9.949993],[-0.187338,1.551946,7.171009,8.734273,-6.264712,-6.046931,6.460654],[-6.979378,1.735934,3.698825,9.468954,-4.253716,2.774995,-6.709225],[8.707841,-8.979600,-1.229336,1.222029,-8.451033,7.096315,-9.588920],[-1.653047,-9.188124,6.309855,-9.514387,-5.056706,-8.520906,-6.743437],[-1.824475,-6.488307,9.629171,-9.895272,7.708641,9.661752,-3.349360],[-8.334118,-9.876714,-6.451865,8.050950,0.314241,8.216473,-3.267854],[-0.351470,1.168154,0.248317,-0.323026,-0.084392,-8.868850,3.785141]],[[3.944618,-7.648248,-3.843837,-1.018473,2.974281,-5.620594,-1.274737],[0.034402,3.914794,8.652023,-5.765887,8.873707,6.896301,7.155665],[3.237949,9.336217,9.193532,-7.168136,-0.915079,-3.227141,8.896803],[-6.052894,-3.053166,-1.102851,-2.052215,-3.603108,-9.927347,8.323597],[0.054329,-3.793428,8.010039,-8.750600,4.775753,-1.940914,8.547235],[-5.249307,1.688492,-0.632507,-7.560786,-3.532992,-9.716909,5.711578],[-5.693993,-2.008886,-3.679882,-0.994704,-1.087946,-3.370836,5.243674],[-2.172537,2.903247,9.336947,7.965412,0.689664,-5.767404,-6.480917],[-9.606188,-8.053689,3.873031,3.536728,9.602939,1.997225,-5.618550],[1.116470,8.257565,-7.472820,-1.193225,2.708029,-2.802860,2.463288]],[[-5.364550,8.332903,-6.536742,5.954950,0.960574,7.457440,-7.547088],[-9.808662,-8.682912,6.257189,0.609119,-7.197198,5.863627,-2.695473],[-7.972452,8.059780,5.066508,-7.778701,-6.880042,7.209676,-8.855609],[-7.467332,-7.473859,8.161069,-7.250222,-2.084054,-0.777597,-4.564117],[-9.099372,3.458118,-3.484300,-8.893565,-2.850990,1.739028,-0.068921],[-8.138937,6.970471,-1.446406,5.976515,-4.360570,-4.190663,-9.918297],[-9.102609,-7.605500,9.508294,5.062284,-7.356041,6.883350,-4.391025],[6.019619,-1.255134,8.442199,-9.075456,4.659763,8.951157,-6.775991],[-2.875181,5.324058,7.502607,8.181922,2.873568,-9.769440,-8.815437],[-4.839441,6.696655,-3.460941,7.865442,0.700578,4.776519,-0.221251]],[[2.471664,-5.367974,0.541119,-3.681572,4.309010,7.489532,-7.287676],[9.261609,0.719273,-3.481009,4.082165,-8.226745,-7.697123,6.556499],[-6.211156,1.845322,-5.326716,0.522312,5.488430,-0.990771,-2.280544],[1.268981,9.285978,5.037564,0.012681,5.433072,-5.834026,2.066654],[-3.536671,-9.052361,-5.607862,-6.947646,7.412954,-0.506671,2.371413],[-8.783262,-6.697010,-9.291305,-1.793527,2.562598,7.872539,-4.641068],[-3.611538,1.045918,-0.652275,-7.434216,0.908276,4.926800,-0.018742],[6.214889,-5.320042,4.391482,6.543161,7.097024,-0.757989,7.052249],[5.327585,4.054240,-0.038287,-2.372710,3.444280,3.202597,6.690767],[8.784334,0.935909,8.082579,-9.306952,-8.057749,7.389048,5.183614]],[[-2.044659,5.401153,8.969913,-8.079290,1.390277,-2.512197,3.197406],[4.348077,7.852801,-8.663017,8.875967,-0.584006,2.220624,-2.039215],[-6.762301,-4.195407,-8.180630,9.289034,-3.459222,1.419931,-1.602312],[-5.019210,-8.937226,8.682784,4.688314,-4.916498,5.223592,-6.483334],[3.383154,7.303266,9.987800,7.422540,-4.234234,3.774888,-2.769772],[-4.930695,-0.808498,-0.327400,4.812346,-0.744638,8.923829,1.888962],[-4.359237,7.824831,-8.807459,6.642048,-7.436112,-6.267781,6.563537],[-8.830809,-2.838447,0.017893,9.147004,9.184754,7.593297,6.110657],[-6.939276,7.047125,5.947639,9.919220,-5.160820,5.029775,1.222623],[7.524896,7.379792,-8.545152,-3.986137,-6.340212,3.696929,-8.319303]],[[-1.423335,9.479533,0.220539,1.662646,-0.638063,-4.745083,4.415488],[7.185092,2.541189,-6.516513,-8.375210,3.286294,-3.311922,0.628726],[3.247301,-4.049759,3.435333,7.872826,-5.244151,6.610174,0.884772],[1.657422,8.539742,2.804392,9.184605,7.931977,-3.040765,3.087090],[9.058637,-0.325737,-3.138786,-9.182629,-3.427139,-0.166593,-1.736619],[1.612513,-6.918078,-5.069175,-2.413089,-8.624878,5.314398,8.023654],[-8.907084,-4.013862,2.505179,3.669251,3.132214,-9.396321,9.853209],[2.938760,-0.900776,7.915771,0.354025,7.176925,3.286626,-5.478643],[9.965528,-4.425036,-0.112609,6.873337,8.242831,8.004192,-7.350250],[-7.502234,7.197864,2.772643,2.305694,-7.099112,7.711858,-4.020365]],[[3.276008,5.500026,-5.246360,2.390715,5.570267,3.977870,1.358188],[5.451295,-1.463448,7.541585,2.784252,7.743733,3.858752,-5.936521],[5.398205,8.496560,8.854395,-3.144066,-7.437162,-8.919471,-4.113370],[-8.313565,-8.744101,-8.659182,0.409297,-7.947518,-1.875878,0.170757],[6.730589,-9.177192,-7.129957,-6.268831,4.241229,-3.716378,-4.737545],[3.138584,-9.655921,-0.986966,9.005506,9.599705,-3.061255,-7.225528],[3.229749,-7.429041,4.689054,-8.920888,-2.183703,4.060537,3.321554],[3.611546,-3.834296,-1.047330,-8.400325,5.083061,2.242475,-6.644804],[6.436013,3.401964,7.020737,9.565567,-5.257502,-9.232932,-3.933056],[-6.996300,6.911514,6.035998,-9.541126,-9.718087,-0.353461,6.868311]],[[-5.614430,2.428189,-0.271691,8.879582,-5.521902,-1.570909,-8.316510],[8.822084,-7.546376,-0.962035,6.082335,4.825936,1.692983,-7.890417],[2.655478,-3.568512,-2.042828,2.746552,-9.382158,-5.293697,-7.585473],[9.763771,2.655475,9.641618,4.039381,-8.254751,-7.548904,-4.456336],[8.704016,7.622630,-0.476213,3.684547,-5.413219,2.015927,1.257130],[6.399103,-5.262656,-0.537467,-6.380774,8.089339,3.390657,-6.698417],[2.456040,4.727908,-5.763343,-0.911091,-0.907564,2.624423,-7.098981],[1.182324,-7.027740,8.439010,-0.446632,-0.351793,-4.968349,-8.178355],[2.469515,4.837978,7.745323,-6.529753,7.688279,8.050106,-2.952741],[-7.155278,7.956160,-2.764046,6.822235,1.200598,4.289662,-4.969190]]], dtype = "float64")#candidate|944|(8, 10, 7)|const|float64
bop_945 = relay.bitwise_or(call_937.astype('uint8'), const_944.astype('uint8')) # shape=(8, 10, 7)
bop_948 = relay.bitwise_or(call_938.astype('uint8'), const_944.astype('uint8')) # shape=(8, 10, 7)
output = bop_945
output2 = bop_948
func_978 = relay.Function([], output)
mod['func_978'] = func_978
mod = relay.transform.InferType()(mod)
mutated_mod['func_978'] = func_978
mutated_mod = relay.transform.InferType()(mutated_mod)
func_978_call = mutated_mod.get_global_var('func_978')
call_979 = func_978_call()
output = call_979
func_980 = relay.Function([], output)
mutated_mod['func_980'] = func_980
mutated_mod = relay.transform.InferType()(mutated_mod)
func_978_call = mod.get_global_var('func_978')
func_980_call = mutated_mod.get_global_var('func_980')
call_1005 = func_978_call()
call_1006 = func_978_call()
var_1018 = relay.var("var_1018", dtype = "uint8", shape = (8, 10, 7))#candidate|1018|(8, 10, 7)|var|uint8
bop_1019 = relay.less_equal(call_1005.astype('bool'), relay.reshape(var_1018.astype('bool'), relay.shape_of(call_1005))) # shape=(8, 10, 7)
bop_1022 = relay.less_equal(call_1006.astype('bool'), relay.reshape(var_1018.astype('bool'), relay.shape_of(call_1006))) # shape=(8, 10, 7)
output = relay.Tuple([bop_1019,])
output2 = relay.Tuple([bop_1022,])
func_1027 = relay.Function([var_1018,], output)
mod['func_1027'] = func_1027
mod = relay.transform.InferType()(mod)
var_1028 = relay.var("var_1028", dtype = "uint8", shape = (8, 10, 7))#candidate|1028|(8, 10, 7)|var|uint8
output = func_1027(var_1028)
func_1029 = relay.Function([var_1028], output)
mutated_mod['func_1029'] = func_1029
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1035 = relay.var("var_1035", dtype = "float64", shape = (13, 12, 3))#candidate|1035|(13, 12, 3)|var|float64
uop_1036 = relay.atanh(var_1035.astype('float64')) # shape=(13, 12, 3)
func_786_call = mod.get_global_var('func_786')
func_788_call = mutated_mod.get_global_var('func_788')
call_1038 = func_786_call()
call_1039 = func_786_call()
const_1044 = relay.const([[[8.453567,-4.975183,0.150109],[8.370143,9.386818,-5.472681],[6.990342,-4.269236,-8.446350],[7.657377,-2.382846,-8.997808],[-3.387685,0.732901,1.786078],[-3.131861,-3.941784,7.995333],[4.088133,-3.908914,8.643128],[-6.052107,0.426998,-4.698695],[0.457101,-1.007402,-5.253124],[5.046048,5.421625,-8.725741],[-8.543851,-2.280628,5.503917],[-3.305424,-6.843506,-7.192088]],[[3.335044,-7.996229,9.725008],[-2.081183,5.651234,-6.648062],[9.045285,-0.251504,-2.619662],[7.442851,-3.750998,1.209272],[0.013682,-0.964826,-0.501042],[5.217299,1.669843,8.508757],[-7.677970,6.197785,-1.908725],[-0.531313,-7.990846,6.511182],[9.124658,0.663560,-5.460643],[5.412528,-4.850117,7.486521],[-8.353247,-7.449300,1.601912],[-2.127398,-1.797012,7.874939]],[[-1.875498,-5.407773,-5.797596],[7.121292,7.884285,3.563740],[-7.588999,3.575907,-6.188024],[3.487881,-8.407503,2.442456],[3.911379,3.944259,3.337278],[2.152160,-2.623558,-7.805875],[2.420122,-3.095626,-6.355545],[-3.592849,8.417312,0.403089],[-0.332784,-4.448154,0.854315],[-9.213399,-9.314312,-7.926551],[-7.768966,9.082555,3.181224],[-6.176133,8.174704,8.690061]],[[-3.942412,-1.651157,-5.585866],[-2.293320,4.998913,6.611285],[-1.216041,8.834591,9.737222],[-3.360884,5.981719,7.776883],[-7.340465,7.340638,-9.559119],[3.244860,-4.823572,-2.989266],[-0.092902,-2.763166,-9.683224],[-8.162114,9.629234,6.142408],[6.372451,7.165759,4.191368],[0.805502,-7.674939,8.450957],[-0.915621,9.097193,5.890720],[1.325800,-4.944692,0.733896]],[[2.907301,0.505656,9.262993],[3.252368,2.616710,-7.117861],[2.676856,-9.045243,-2.319484],[2.199125,-6.072382,-6.499358],[-2.846493,4.482211,0.932962],[5.730098,-2.490521,6.266407],[9.098843,-4.324754,2.544609],[9.865890,9.031916,-5.189241],[-1.170860,-8.377779,7.364870],[-9.871489,-3.028498,-7.551367],[-9.001341,-3.486696,9.009106],[-7.639092,-7.901420,5.185324]],[[0.311210,4.516147,-6.833848],[0.179933,3.215208,4.960800],[-0.792279,-6.399373,-7.905525],[-0.582375,2.011449,1.170792],[-8.815068,0.201977,2.098952],[1.074465,-3.057234,1.782183],[-8.739304,2.010156,-3.018076],[-9.000883,-7.843553,2.196221],[-3.239160,9.897063,-1.626906],[-1.024108,-8.154552,0.095078],[-7.030619,0.539356,7.482851],[3.157905,4.339401,8.955233]],[[3.995142,-6.323807,2.245991],[-3.928698,6.239113,8.980524],[2.174066,-1.087991,4.418579],[3.137766,-4.944125,-5.080237],[0.808343,-8.859766,-2.373637],[-9.473650,6.723320,7.250437],[-4.501800,-9.782411,4.915917],[9.139960,5.467842,0.138805],[8.835035,-0.202955,5.213781],[-9.666190,-5.405228,3.059935],[-0.401033,5.318342,-5.288375],[-0.561661,-2.073729,-9.388647]],[[-3.935745,-4.416815,8.109858],[9.403732,-6.380740,3.414567],[-2.261480,-0.855900,-9.698913],[-8.423511,2.748644,-0.100631],[-0.374647,-4.896138,-0.867810],[0.876449,-3.164886,-1.823867],[7.885732,2.949717,-8.069206],[4.564716,-0.423496,5.972703],[3.338819,3.552251,5.927596],[-3.789445,3.161128,2.817917],[6.786568,-0.235139,-3.731000],[1.973980,-1.453652,-2.874052]],[[6.476313,-5.190557,8.548384],[-8.608631,3.852462,-6.691824],[-0.072239,-9.338855,2.786603],[9.158493,-5.028727,5.140850],[-1.765983,-5.700396,1.009667],[8.706833,-4.989282,-4.856261],[-2.607567,-2.572150,-2.885653],[-3.294525,3.184424,-7.500171],[-8.245030,7.238930,-9.516703],[-6.054511,-8.043475,4.619714],[6.548015,-7.123387,-3.258738],[8.413115,-5.887201,-2.857965]],[[-2.559799,4.479670,-0.212660],[9.165965,2.219788,4.787300],[4.801101,-8.403604,4.621557],[4.144408,1.257761,-9.411679],[-2.226720,-7.131507,-7.359343],[9.365351,3.956200,-7.377966],[7.973230,9.252458,8.847774],[-6.580245,-6.964007,-5.609577],[-8.288617,-7.578066,0.521370],[-9.030046,-3.057233,-4.379554],[6.150102,-9.386101,-7.823116],[-2.827320,-9.688442,-3.720244]],[[6.892754,-2.775597,-3.385011],[9.220305,-3.617759,-3.988573],[-7.485632,9.403035,6.747868],[0.035424,4.975005,6.682802],[0.406311,7.063015,2.154122],[3.630645,-0.747369,-8.913308],[-8.619774,-7.248153,9.408039],[-4.220587,1.325051,0.897493],[-4.574666,5.164354,-7.665489],[2.977041,8.948602,2.997948],[1.148425,9.874278,-5.421880],[-9.354450,2.971409,4.639275]],[[1.905093,-6.396789,1.739566],[3.754280,3.331201,1.007129],[6.016896,3.707543,-4.283065],[-2.893681,4.842404,6.885027],[9.561571,-6.449073,-3.081514],[-1.713920,5.430938,-3.240857],[-8.234384,-3.750118,7.328646],[0.113935,2.338632,4.768012],[9.879954,4.814591,7.005652],[-1.555359,-3.245973,6.299257],[-0.660820,-9.143881,-3.515309],[-3.477169,-7.847377,-5.028137]],[[-4.345446,-8.357986,-3.414826],[2.096550,6.088633,-7.825529],[-7.468024,-5.601207,8.256417],[5.570396,1.802123,-9.820318],[3.019767,-7.255669,8.837495],[4.826399,-3.623483,7.387360],[4.633885,-1.346431,1.765169],[3.451008,5.333008,-7.661648],[8.929574,-5.971404,2.038913],[-2.876298,1.930147,-8.871947],[-9.084561,-6.952496,-2.072482],[8.918859,0.202805,-6.138288]]], dtype = "float64")#candidate|1044|(13, 12, 3)|const|float64
bop_1045 = relay.floor_mod(uop_1036.astype('float64'), relay.reshape(const_1044.astype('float64'), relay.shape_of(uop_1036))) # shape=(13, 12, 3)
uop_1051 = relay.cosh(bop_1045.astype('float32')) # shape=(13, 12, 3)
func_893_call = mod.get_global_var('func_893')
func_896_call = mutated_mod.get_global_var('func_896')
var_1059 = relay.var("var_1059", dtype = "float64", shape = (1, 1120))#candidate|1059|(1, 1120)|var|float64
call_1058 = func_893_call(relay.reshape(var_1059.astype('float64'), [16, 10, 7]))
call_1060 = func_893_call(relay.reshape(var_1059.astype('float64'), [16, 10, 7]))
output = relay.Tuple([call_1038,uop_1051,call_1058,var_1059,])
output2 = relay.Tuple([call_1039,uop_1051,call_1060,var_1059,])
func_1072 = relay.Function([var_1035,var_1059,], output)
mod['func_1072'] = func_1072
mod = relay.transform.InferType()(mod)
var_1073 = relay.var("var_1073", dtype = "float64", shape = (13, 12, 3))#candidate|1073|(13, 12, 3)|var|float64
var_1074 = relay.var("var_1074", dtype = "float64", shape = (1, 1120))#candidate|1074|(1, 1120)|var|float64
output = func_1072(var_1073,var_1074,)
func_1075 = relay.Function([var_1073,var_1074,], output)
mutated_mod['func_1075'] = func_1075
mutated_mod = relay.transform.InferType()(mutated_mod)
func_978_call = mod.get_global_var('func_978')
func_980_call = mutated_mod.get_global_var('func_980')
call_1104 = func_978_call()
call_1105 = func_978_call()
func_786_call = mod.get_global_var('func_786')
func_788_call = mutated_mod.get_global_var('func_788')
call_1108 = func_786_call()
call_1109 = func_786_call()
func_978_call = mod.get_global_var('func_978')
func_980_call = mutated_mod.get_global_var('func_980')
call_1114 = func_978_call()
call_1115 = func_978_call()
func_978_call = mod.get_global_var('func_978')
func_980_call = mutated_mod.get_global_var('func_980')
call_1119 = func_978_call()
call_1120 = func_978_call()
uop_1121 = relay.tan(call_1114.astype('float64')) # shape=(8, 10, 7)
uop_1123 = relay.tan(call_1115.astype('float64')) # shape=(8, 10, 7)
output = relay.Tuple([call_1104,call_1108,call_1119,uop_1121,])
output2 = relay.Tuple([call_1105,call_1109,call_1120,uop_1123,])
func_1129 = relay.Function([], output)
mod['func_1129'] = func_1129
mod = relay.transform.InferType()(mod)
mutated_mod['func_1129'] = func_1129
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1129_call = mutated_mod.get_global_var('func_1129')
call_1130 = func_1129_call()
output = call_1130
func_1131 = relay.Function([], output)
mutated_mod['func_1131'] = func_1131
mutated_mod = relay.transform.InferType()(mutated_mod)
func_978_call = mod.get_global_var('func_978')
func_980_call = mutated_mod.get_global_var('func_980')
call_1135 = func_978_call()
call_1136 = func_978_call()
func_1072_call = mod.get_global_var('func_1072')
func_1075_call = mutated_mod.get_global_var('func_1075')
const_1170 = relay.const([8.232140,-4.301496,-0.148220,6.424830,-7.273890,3.206548,-1.261216,-3.496554,-4.721800,5.830529,-0.633892,2.988898,-7.929518,1.484911,-3.900591,0.584580,4.603888,0.227737,-7.684466,5.044750,8.956603,-0.559283,-3.325270,-2.977882,2.866522,-2.984226,7.494654,1.593430,8.147377,-0.496492,-5.853747,7.926206,4.178107,1.801585,8.358846,3.905020,7.334430,-4.131694,-8.065728,-8.917482,-7.621217,-1.846947,7.066508,8.738542,-3.033096,-7.095563,3.968698,-9.928839,-3.842239,-6.785691,-2.693687,-8.763953,-8.261222,-7.961161,-9.291368,-8.532035,4.282531,-8.066499,-9.136491,9.299757,2.254983,3.839967,9.658614,-3.357492,7.341619,1.836767,-9.740581,-2.207561,-0.546293,9.106521,0.139288,4.609333,-3.504473,6.994658,6.488784,3.047836,-7.361147,-8.079595,2.260579,7.510676,6.072192,-1.297796,9.709881,-8.751989,4.957937,-7.428390,2.379130,8.427628,8.600014,-6.769383,6.379789,-6.263363,-1.271301,1.723473,9.223981,1.175046,5.281135,-8.948201,-7.828123,-1.000207,-0.472396,-3.530582,-6.322686,-8.486806,1.441178,8.218115,-7.388841,-0.432594,-7.452489,-6.657076,9.640209,-8.675250,-7.253460,4.038270,-3.800925,-0.091045,-3.754774,-2.081531,8.079666,-3.179863,-0.351566,8.049203,9.858084,4.392829,-9.438783,8.149160,3.135596,-5.502743,-1.937818,-6.572348,-3.648094,-5.636770,-9.090670,4.744412,2.226399,-7.841655,3.032814,-4.208716,9.684134,-2.219266,-9.112415,4.257136,-2.610503,1.119221,9.020255,0.931607,-5.620865,-4.640505,-6.140923,-9.140163,-5.002343,3.879169,8.988895,-5.497812,-7.953855,-7.152693,5.342540,-5.524011,0.109986,-4.085231,-7.928424,-8.244066,4.835148,4.537869,2.041276,0.980867,-2.869277,2.832924,9.641417,-2.566667,0.424452,-1.931673,3.439289,-3.852724,-2.571018,5.130930,-9.156544,9.225166,6.832415,1.545275,3.558470,-9.912307,-5.807251,4.389734,9.887762,7.078886,-4.445769,7.532213,-8.487055,-5.174727,9.803954,3.833128,-6.527158,3.803952,9.567866,-0.428711,-7.552742,-8.747398,-1.562696,-2.964547,-4.134227,-9.774646,2.217292,-0.784363,6.011726,-3.843156,-9.426565,-1.445038,-1.251648,-0.835769,5.726582,-2.582759,9.641026,-1.044789,-9.939074,-0.834115,-8.719984,4.924365,-3.339994,7.490249,5.509631,-7.645164,-3.212479,-7.936773,2.864592,-1.036116,4.204203,-3.202154,-9.892209,-7.815503,4.690174,1.530998,-5.909138,1.057548,-5.745410,-3.984612,-8.306682,7.077636,-1.780819,7.587747,1.623705,-2.981449,9.374195,8.335082,8.199553,-0.585515,-4.056394,-3.087982,7.812176,-8.641989,-2.678612,4.451625,0.515134,1.842088,-5.374622,5.361176,9.515728,-1.178294,-0.498121,-6.738376,1.890261,-2.721757,-3.514471,-9.385333,-9.036173,1.133696,-6.933603,2.862881,7.848397,0.519590,-3.474288,5.396959,-7.697036,-7.080593,-5.763506,-1.203093,8.963440,6.271647,7.513594,3.385521,-3.632180,-2.861025,7.711924,5.179454,4.835043,-7.497341,5.055984,1.565356,4.960404,5.077731,-3.441479,-7.021749,-0.839718,5.026500,6.643539,-5.250966,2.251276,-9.010882,-7.949861,5.823628,-5.674941,0.562623,-4.275264,5.029943,-2.035321,9.767371,-2.138066,6.226045,7.673387,-3.276341,1.893515,0.755481,-0.601693,-0.355106,6.974577,-6.424931,8.956307,0.463783,-0.317524,-8.925034,6.714490,4.959839,8.834999,4.810058,3.207486,5.271003,-5.623472,4.930123,3.857939,5.772495,8.727221,-2.788331,-0.327369,-7.444650,4.347465,2.243019,-4.328776,-6.681702,9.735722,4.310701,-3.626476,-8.510753,1.782455,1.589905,5.662383,6.316048,-8.936800,3.297234,7.744437,2.986320,-0.874700,-4.281346,1.818403,-9.909406,-2.834484,1.975059,0.757380,5.177302,9.825110,1.243307,6.496302,8.401879,-2.686477,-9.324947,9.635146,-9.416445,0.318605,-1.603598,-9.539314,2.084085,-6.002574,8.364417,-2.889544,-7.349757,0.658736,-8.898867,-9.973291,-0.002971,3.332963,8.170054,-4.675929,-5.961894,-9.232609,-0.904069,-1.535745,4.136952,-5.880906,-4.477195,5.157774,-1.055520,-8.427500,1.924203,-1.636243,7.998981,8.957203,-4.826377,4.586487,4.471361,-1.761815,-3.627156,7.455486,6.923667,-3.547598,1.907509,1.946069,-1.257624,-8.427832,-7.078603,0.082589,-9.323509,-2.665889,-7.176166,-6.904982,4.837874,9.403635,2.022539,9.404531,-8.217862,-3.520502,8.076845,3.327118,3.250833,-6.051260,-7.844853,7.642504,-2.366350,-4.504263,9.922259,-2.927667,1.956510,-8.980761,-7.475358,2.172295,1.555198,-7.555394,7.173142,-0.558676,-2.349346,0.277289,-3.599954,4.638936,-9.871789,9.766937,-6.739535,4.017098,6.675946,-8.009886,7.799889,-9.544745,2.565760,-9.202625,-8.703440,5.312757,9.606638,-5.752655,-7.347259,-5.398841,2.973079,-5.624481,9.423149,2.349529,-2.680344,-5.340040,9.608296,-8.299863,-3.107967,-1.347225,-4.276295], dtype = "float64")#candidate|1170|(468,)|const|float64
const_1171 = relay.const([7.195900,7.824550,0.581013,-6.412070,3.887307,9.766015,-3.276584,-4.383445,-3.363683,-6.060252,0.964090,1.093386,8.196379,8.003952,9.907632,-9.503636,-2.121083,-0.074163,-5.051510,-0.047955,-0.943402,-2.473483,0.304380,4.625214,0.923476,-3.015147,-3.227228,-4.617071,5.318639,-0.003995,8.050317,-4.561658,7.958239,6.664919,3.330745,2.086077,-2.123110,-8.221449,-3.553562,2.024915,4.834377,-2.494892,2.604428,-1.986703,8.857168,9.808202,9.996847,-2.690400,-4.784692,3.680989,7.857494,2.790228,-2.783597,9.102039,6.750089,-4.629592,2.879594,4.696131,9.437646,8.918558,-3.795692,6.249012,-9.654596,-9.983241,-6.486839,-3.757617,-9.151760,2.904233,-3.939626,-7.815736,4.495450,-2.606031,4.544185,2.600176,2.196237,2.552190,0.280452,-1.658536,1.024039,-5.547092,-6.934246,0.213236,-0.741015,3.016855,-3.574091,-3.314844,4.291716,-9.792105,-0.289699,0.086498,-6.779359,-3.117462,-9.312738,-0.925288,5.675925,8.208935,1.150397,0.308274,9.589372,-1.560836,-3.981617,9.244365,-4.413777,-3.596446,8.056011,-1.710454,9.904708,2.003555,7.634236,0.765843,-9.975673,-7.427111,5.592626,6.929398,8.169097,-9.942754,-3.874314,3.538333,4.041891,-9.713806,4.242725,8.306817,0.128399,-0.825390,-6.561599,6.411166,-9.602449,-9.035443,6.540407,-0.273775,-0.512061,-3.343336,-5.516775,8.791721,-2.520956,-6.668379,-7.942865,-2.811275,-3.418123,1.730472,-2.782398,1.662593,-8.251796,-8.716577,8.450959,-6.013958,-4.798395,5.247244,-9.042709,-2.174896,-5.121247,3.198481,-2.893903,-1.155275,-1.261057,1.101544,-5.180209,-9.912856,9.519571,8.868935,3.025798,-9.248729,-8.378618,7.874515,-9.837707,5.496548,-8.731271,9.086590,-9.327417,-0.339491,2.523293,8.546673,-0.161267,9.811982,5.986971,8.624999,-0.738485,-4.366844,8.077663,-2.723385,9.507186,-3.277464,-1.822711,1.269663,2.769468,5.662704,9.756781,-5.032721,-3.247455,5.745002,-3.571500,2.042696,-8.751359,-6.732820,2.437767,1.925278,-2.902479,-8.863359,-6.888212,-3.905722,4.095220,-6.997112,-0.679913,0.571326,-0.039312,-1.255629,9.296520,-2.910448,5.372463,0.435203,5.894292,-0.175142,-0.078502,-4.085384,-3.018133,-7.207528,-2.178463,-8.757125,0.890294,-0.412308,5.383161,3.362422,-7.681013,-3.153863,-5.962302,-8.106337,8.294443,2.917148,0.001848,-8.620519,-2.693441,-1.813485,5.615075,-4.793471,-9.329373,1.612971,8.371180,-6.793350,-0.590731,-4.404661,-8.757091,-5.926805,0.966207,2.563447,9.762479,-5.836836,-9.173938,-2.701509,2.724061,-6.163391,3.476944,5.216689,-8.997845,-5.005975,9.758937,2.648741,2.012617,6.411146,-1.424386,-7.587122,-0.252486,8.908511,9.398836,-6.246705,-7.360375,-1.856835,-9.291216,0.531895,4.003415,6.207673,-8.495863,-8.037589,-9.294376,-1.073167,-3.883476,-5.607550,3.806978,2.651317,-9.765247,3.374833,-3.066959,-7.855702,-2.009638,-9.633209,-5.369626,-1.986280,-8.989070,-3.367950,-9.205627,0.415330,5.552620,3.788612,-2.967946,8.151227,-2.811074,4.681050,-2.348715,-0.973508,8.150559,-4.085498,-4.478573,-6.604429,5.963447,-0.839154,1.357934,-2.392935,0.481368,8.977499,-2.202477,-4.978379,-1.483652,-9.907436,-8.819626,9.309748,2.025557,4.521529,-2.632503,-3.306101,-9.414967,4.749692,7.216189,7.405181,4.326211,-9.312928,7.140970,-8.173636,-5.673798,6.993661,3.495816,5.929225,-1.599812,9.320604,-3.820286,0.936691,-4.767204,6.372022,-4.664904,-4.184855,1.729806,-4.253142,-9.052262,-0.107828,4.981979,0.168738,-5.717433,6.882456,1.788662,2.212076,-4.256701,-7.296496,2.072885,-0.308024,-3.962055,6.041509,3.570570,0.615490,8.920472,4.186309,8.822572,9.462051,8.928805,-0.145676,7.604168,-5.740138,-9.287373,-6.049886,-3.582477,-8.968978,-1.049298,2.627475,8.766994,3.686535,-5.838103,2.622173,3.836786,-5.060075,7.194811,7.078120,-4.192561,-2.210199,-4.412329,5.260252,-8.737327,-4.674101,8.774412,-9.948448,-2.071659,1.209063,-2.878911,-6.296319,-2.266958,-4.665623,4.535849,-5.678991,-9.349767,5.286503,-9.346844,0.405955,-2.635739,4.330453,9.427465,-6.454479,5.807400,5.879657,-4.709081,9.716724,-4.794821,-8.857515,1.717143,4.559546,8.112105,-1.777258,6.396934,-9.505840,0.549468,-7.924023,-0.913242,-9.333738,-2.680703,5.229669,0.481913,7.332456,5.840508,-3.419030,5.768274,-0.886705,-3.805448,-9.637631,-5.331631,9.234982,-1.000707,8.782890,-3.371965,-9.070907,3.291783,1.140313,-6.643563,-9.143486,-6.259038,-5.316900,-0.911625,-6.414346,1.029800,6.863275,-9.951397,-1.591922,-3.414075,9.378788,1.802897,2.708457,8.402675,-0.850854,-7.708471,4.883111,5.277195,-4.198744,-0.513344,-4.010203,7.808966,-1.945501,-2.282084,-0.975578,-8.077849,2.088780,5.293060,-0.753594,8.499881,-6.829035,8.314793,-0.190026,9.929323,-9.264307,9.680763,8.574226,-6.574324,-6.746807,-0.389670,2.291789,-0.258650,7.361226,-7.080418,1.914006,-4.265255,7.296577,1.637314,-7.177198,-1.035469,9.274466,8.939898,-2.588346,-7.740776,-4.908582,0.397547,2.088998,-1.667790,8.808051,-4.729693,-0.342671,-8.788391,-7.847429,4.340620,-2.784997,9.678231,1.642522,-0.850562,2.007759,1.022199,-0.592359,5.860625,-7.561483,-4.985664,-3.170442,-5.896132,4.766773,-6.684246,4.811446,-1.889181,5.011411,4.519085,-2.253112,-9.279921,-3.354969,2.671521,-1.474495,-7.525615,-8.389228,-6.287750,5.399379,9.686779,2.345976,-5.191311,8.960289,-1.260051,-0.660540,6.228574,-9.254580,-8.634535,0.810104,4.393514,9.346136,8.099309,-1.109684,-2.801679,-1.934769,-6.781767,-2.113065,-8.323492,4.251743,-6.696238,-3.722887,-2.406505,-7.547399,2.189941,-9.299323,9.194146,-9.877022,6.763484,6.734495,-3.574925,9.980901,2.900750,3.602802,0.084363,4.069426,1.370083,5.252262,-4.559035,-2.576438,-7.452388,-5.972707,-9.037768,-8.506708,0.668335,-0.365245,9.090265,-2.330444,2.594262,1.656758,-5.924457,-2.620813,-0.656243,8.120254,0.651897,3.523313,-9.414614,-4.834113,-5.093980,-4.677214,-4.972184,-6.142996,-5.199988,-6.214137,-0.193465,-3.632904,-4.444757,-3.007930,-5.510460,3.784828,-7.166479,2.171291,-6.479509,7.122708,-0.051389,-7.099482,-0.784346,2.520633,8.335540,-7.549404,5.775389,-1.606010,-9.395205,-6.859592,-0.518604,-7.178941,-7.007629,7.403674,5.014403,-7.926512,-8.456380,-0.606103,0.546046,6.642320,-8.218465,-3.366494,-3.903764,6.545837,-7.593199,-0.651690,-4.139984,5.148211,-7.917938,1.025347,7.976168,-9.414158,0.192434,8.008685,-4.126375,0.253114,-1.740472,-8.984944,7.289614,2.700063,3.067421,-2.315757,4.285871,5.487364,5.498817,2.676269,-4.326982,-4.128015,2.860907,-8.000832,4.937044,-1.835677,9.690390,-8.148984,-4.880605,-7.437088,4.568360,3.291946,-8.842098,2.871744,-0.659098,9.799859,-4.817958,-4.721061,8.544203,9.677435,-6.256858,-5.494634,-5.041556,-5.212482,2.250119,-5.358371,-7.363412,7.992412,-5.719887,-1.963770,7.273645,2.545194,1.253988,3.915001,-2.741321,2.449868,-6.415234,7.335480,1.493854,-1.750521,-1.389410,9.070032,-3.541954,-9.945213,4.730959,7.443687,-6.674333,-4.852703,-4.846130,-8.321742,-0.847093,-5.430536,4.753412,0.634832,7.703873,3.610382,2.305440,-9.027443,7.231837,-4.756251,6.701997,-4.387566,9.119261,-4.531436,-8.297142,-5.456677,-1.679598,-9.631256,-6.419298,-1.636141,5.632228,-7.982202,4.013343,-7.107995,5.608830,2.861929,2.815189,-9.777276,0.086001,-3.142268,6.502718,-1.243200,4.038774,7.205414,1.651018,-5.431545,-7.272878,9.009179,3.711015,-2.735772,-6.164512,-4.839013,2.380820,-7.007491,7.303093,2.855591,-2.267299,-5.158313,-5.115290,8.167711,-5.677084,-2.509412,-3.090491,-4.123598,4.062340,-2.114011,-5.218883,2.896744,2.025072,-3.807590,1.721918,5.802070,-5.661564,2.548994,-6.552063,-4.056112,-0.168741,7.441339,-6.176210,6.389379,-9.271207,6.863901,-7.361895,0.268970,1.821337,-2.795522,4.673494,-7.523976,4.183779,-3.594185,-4.080781,-4.312293,8.125915,-8.209628,2.586278,4.723683,6.186296,7.277924,-6.521930,-9.969719,-8.492309,-0.533693,-3.167847,3.626861,-2.100646,8.982977,-0.602876,-0.824383,3.052132,1.164583,-4.743329,9.224055,-6.654892,6.058594,1.105213,-4.485598,-1.135246,4.440502,1.096137,-6.591358,-5.451900,-3.649856,-2.547554,-1.732288,4.884690,-6.408107,-6.995687,-9.734493,-6.556567,9.049465,2.978679,-5.341286,-8.972145,-1.764248,-9.348576,-8.976732,2.861898,-5.315131,6.233916,1.399036,-1.025613,-5.000826,4.886776,2.312398,-8.437819,4.033439,-6.104685,4.173536,8.598951,-9.026314,-7.028378,-4.474647,-8.181784,8.349709,4.009917,-5.585476,2.390825,7.048683,7.892383,-2.622852,1.114533,4.685130,5.628666,1.835734,1.284655,0.094796,-5.135564,1.899096,-0.700053,-7.815358,2.951034,9.180910,9.824847,-5.032035,-7.218322,-8.981241,-6.446499,8.245484,-7.407190,4.185775,6.854018,9.020639,-2.634069,-0.941499,-0.711846,6.225557,5.937804,-7.507775,8.605471,-9.120682,2.834453,6.634563,-4.924086,-3.374636,4.081902,-5.145575,-1.929329,-3.758085,-5.049675,7.854085,7.396332,4.915359,9.024085,6.647928,-9.858801,-9.025816,-8.167907,7.058831,7.455274,4.786863,6.925568,3.395763,-7.993858,5.805118,-9.252201,4.336812,0.406923,-7.011537,-6.591708,3.682044,3.720253,-8.035020,6.242442,4.397872,0.832018,-7.354453,-0.731888,-9.781011,2.691184,-6.660931,-2.239602,-4.732811,-3.274527,6.137738,-8.866987,9.057341,-7.094090,-6.821578,5.971682,-1.343775,-4.648729,-1.183511,-2.092799,3.373654,-5.033599,9.808574,0.956202,-6.066942,6.901580,-6.697697,-6.036857,3.374795,-2.886546,-3.174716,8.685758,-4.048171,7.594741,7.200276,-1.052453,-9.318245,-4.247688,9.272778,7.977046,8.644300,4.880481,-0.595153,3.357451,1.000705,4.829080,4.486640,-9.104284,5.622995,-7.908529,-2.652705,0.107604,9.041747,-9.307524,-9.949871,-5.551630,-6.623843,2.031374,1.910986,8.514713,-5.179469,1.768921,2.819614,-1.257368,0.519669,4.287610,8.245460,-6.888494,-4.372965,8.016406,-4.543238,-8.039204,-8.065140,-7.916146,-3.101809,-0.753725,-3.883241,4.797944,7.768490,-0.996345,-4.544616,-2.264581,5.228050,1.672909,-4.153846,-3.459052,-1.004737,5.189314,-9.189374,5.419848,1.358285,-4.791940,5.635771,-6.518779,3.236771,3.890709,-5.489197,5.790322,8.820279,-9.663127,6.628107,-2.956086,6.869312,-1.272232,0.370922,0.173874,4.239896,0.068384,9.553990,-8.604271,-4.795460,-9.433466,0.861601,-2.650716,-5.340212,-4.902122,7.012412,-6.366293,6.628024,8.257250,-4.025594,9.447608,-2.323840,-1.365314,-3.113413,-3.398268,-2.926183,-8.136734,-8.646855,-9.095472,1.541133,-8.698391,-0.529530,0.501327,-8.913024,-2.269585,4.268347,-9.837633,-7.013150,3.711780,1.760913,-9.955276,9.774030,-7.137427,2.251070,-7.939900,8.123304,-4.680048,7.223929,5.304221,-3.851551,-9.636915,-1.561975,0.262402,5.126088,5.026045,-0.457836,4.439582,-3.052121,4.548255,-3.095575,-8.939063,-1.570773,3.179240,3.847303,1.519927,6.980949,7.118273,5.478023,-6.318146,-8.863118,3.962350,3.955031,-3.899885,-0.297620,-1.167040,1.900061,5.642666,7.953508,-0.880565,3.440948,-3.382611,5.214380,-8.488975,-5.850442,-0.419921,2.835132,7.953312,-2.110951,-8.713174,8.876864,9.487698,-5.858519,-6.461352,-9.067237,-1.395262,2.610471,-1.079038,-9.806752,0.506597,7.312088,9.360140,1.330179,-7.827609,-0.010183,6.187911,8.515067,3.757521,2.553884], dtype = "float64")#candidate|1171|(1120,)|const|float64
call_1169 = relay.TupleGetItem(func_1072_call(relay.reshape(const_1170.astype('float64'), [13, 12, 3]), relay.reshape(const_1171.astype('float64'), [1, 1120]), ), 1)
call_1172 = relay.TupleGetItem(func_1075_call(relay.reshape(const_1170.astype('float64'), [13, 12, 3]), relay.reshape(const_1171.astype('float64'), [1, 1120]), ), 1)
output = relay.Tuple([call_1135,call_1169,const_1170,const_1171,])
output2 = relay.Tuple([call_1136,call_1172,const_1170,const_1171,])
func_1184 = relay.Function([], output)
mod['func_1184'] = func_1184
mod = relay.transform.InferType()(mod)
mutated_mod['func_1184'] = func_1184
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1184_call = mutated_mod.get_global_var('func_1184')
call_1185 = func_1184_call()
output = call_1185
func_1186 = relay.Function([], output)
mutated_mod['func_1186'] = func_1186
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1187 = relay.var("var_1187", dtype = "bool", shape = ())#candidate|1187|()|var|bool
var_1188 = relay.var("var_1188", dtype = "bool", shape = (6, 6, 6))#candidate|1188|(6, 6, 6)|var|bool
bop_1189 = relay.logical_or(var_1187.astype('bool'), var_1188.astype('bool')) # shape=(6, 6, 6)
func_893_call = mod.get_global_var('func_893')
func_896_call = mutated_mod.get_global_var('func_896')
const_1201 = relay.const([-2.103657,1.786147,4.817417,0.820186,-7.478149,-0.629442,-7.418746,-3.468641,-3.775448,-8.666575,3.172775,-9.235026,-8.354390,6.340357,-2.262040,3.410544,-9.833039,-4.000039,-5.974777,-7.224141,-1.991003,5.583727,8.467133,2.132237,7.137141,5.581979,-7.244237,1.440991,9.443261,4.638268,-4.775423,3.683275,1.090514,-1.911790,0.507472,-6.678612,0.754066,-4.509828,8.453026,-6.281713,-5.566850,8.143025,5.168670,2.699605,0.348291,-0.981419,8.259988,-1.042635,-6.075115,0.901344,3.499864,1.155088,4.543942,2.984447,1.985981,6.557276,-1.203472,7.553839,5.717915,-4.179082,9.817052,-0.522381,-7.151652,5.635475,4.941999,1.077523,-9.957335,2.856193,-9.615888,-5.391380,4.004892,9.722020,8.432602,1.901382,-4.020363,1.618943,3.415558,-8.750480,5.672508,-6.824565,-2.502329,3.664471,-8.873141,-7.726358,-6.758274,-4.897341,-5.068825,4.134307,-6.165305,-1.552989,-1.434388,-5.436176,6.647970,-7.012587,-6.149413,6.910433,-1.277428,1.734537,-8.743264,4.795815,7.153513,-2.412863,-2.658844,1.588402,-1.681153,2.421814,9.090523,-4.179331,-3.605860,7.586658,1.963704,-3.972465,-5.963331,-7.373327,6.952834,4.252303,-6.215874,3.451925,1.266824,6.441606,-1.267057,-0.687832,3.003192,9.759939,3.703435,-5.490011,2.910150,-4.586594,7.667786,-3.165171,3.276118,3.928463,0.615005,-0.958754,0.245410,0.148696,-4.283258,2.578729,-5.388624,2.483525,-2.047410,3.302363,-5.139643,2.429038,-6.622060,2.815284,3.473794,4.805856,8.275191,0.303872,-3.931672,-5.979401,-8.962203,-4.794800,-5.452238,5.433176,1.077850,7.068429,-9.776360,4.321108,-6.414311,-4.772255,8.321055,9.800284,2.330501,3.098119,5.712991,-0.470836,-2.895345,-4.434526,7.902567,2.652603,-3.273718,-2.314463,0.402837,-8.635096,-4.450888,2.452803,-2.161127,-7.468938,3.279444,0.651510,-4.997363,-7.015441,-7.693471,1.005748,-0.845944,4.047017,1.188847,-7.885322,0.640695,7.819041,9.711133,-9.381187,2.532742,-0.446638,-9.100115,3.144025,1.947557,5.275353,-4.337869,1.363010,7.479840,-3.858367,6.698008,1.790067,1.410588,-4.093059,3.996155,-8.406010,-6.415552,9.706142,5.888349,3.866516,2.788765,-1.123378,9.643449,-8.930241,-3.084221,-8.394470,4.433061,8.263189,-4.893088,-1.534691,-8.600780,-8.910815,2.615647,0.523318,-8.709728,6.537706,-3.992336,1.234009,-4.219591,-0.964866,-6.230014,-2.478360,1.514653,-4.078352,5.250673,4.303593,-8.426043,-8.787407,-3.955178,-3.949368,-2.803848,-7.647891,6.067738,0.689613,0.746097,1.197304,-5.222706,-1.612927,8.684784,4.967488,1.864546,-0.278112,-5.614760,6.174057,-2.583088,1.368701,9.620002,3.751017,7.442377,-2.655976,6.500293,9.879384,6.039327,1.036912,-3.304262,-7.670534,7.538235,8.393739,7.276294,-4.828612,-8.910959,0.987159,7.886828,4.178078,4.185179,-9.286228,1.938346,-1.293099,2.302468,4.166275,-2.995053,0.847621,-3.818739,1.774090,0.415935,0.846719,9.523088,6.572764,-7.423030,8.595656,5.927352,-3.608592,4.941356,6.795829,-4.379141,2.460873,-9.517875,-5.600650,7.640460,1.794283,-8.244495,3.048369,2.758030,-1.064435,9.613888,9.204565,6.156493,8.321881,-0.948918,5.068690,3.951593,5.723568,7.351572,-9.473964,3.089487,0.119687,-4.509762,8.678249,-0.362458,8.486671,7.386032,-7.368649,-2.067776,-3.666692,-8.485182,0.626386,-7.536690,-9.250984,6.633859,-0.782703,-9.856512,-5.036868,-3.591006,-7.526438,9.088010,-1.346198,-0.507017,-9.859077,-5.095331,8.092351,-4.177585,-3.525859,5.946030,8.607326,5.907627,4.107449,2.990836,6.347614,6.609038,-9.855779,0.375931,5.829963,0.398976,6.026791,-9.935524,1.976456,7.292267,2.818740,-9.198667,6.600607,2.034815,6.644811,-8.062498,-8.518058,-1.204499,0.800007,-3.371748,9.336287,-0.304380,7.153688,0.046032,1.672174,1.934022,7.319267,5.179698,4.207632,1.263459,-7.853095,2.061013,7.517652,2.447332,-6.532870,1.486443,-8.920887,-6.302226,1.303640,-9.663753,-6.642635,2.798779,2.042157,7.292942,7.494931,5.868953,-9.222705,5.877312,-1.979659,-5.147232,-9.118877,-0.775036,5.807097,-7.574164,-2.210357,-3.293219,-6.946482,-5.826037,-5.134461,9.016269,-5.802464,9.574194,9.574147,-6.941763,-0.298779,-9.431281,-2.221427,8.078317,9.750215,-5.159736,-2.270748,0.917925,7.859954,-0.404508,7.569417,9.245289,-4.859680,-5.227882,7.701364,4.478333,-6.414463,-2.848138,-6.278178,-9.642812,-3.487755,5.567758,4.336414,8.224044,-9.510611,2.638660,8.974753,1.066034,2.838759,-6.368386,-3.158884,-9.192540,7.562468,4.637198,-1.514980,-9.498791,3.346125,6.496884,-7.113464,1.327526,-2.443857,-2.245633,4.002500,2.726292,3.738298,-7.835887,6.940267,-7.714803,4.635621,-9.203492,-8.037482,-8.262551,-2.508115,-1.063305,4.714128,5.861177,-0.651950,3.885256,6.813805,2.102418,-9.855282,-3.878653,-3.817468,2.459785,1.746380,-4.291100,-5.292547,7.028509,-7.508456,7.394773,0.031339,-1.247726,-2.937702,1.042957,-9.251847,-6.988916,-0.760841,1.408424,-7.403093,2.097421,-6.246911,4.572038,-4.765990,-2.776536,-6.857286,-7.832523,-3.807576,-8.442969,8.076471,0.684009,-6.419361,-3.275946,-2.539559,1.766445,-0.531859,-9.622452,-3.752577,2.107343,-0.239326,-0.824815,5.024312,-0.947773,7.350262,-1.422500,5.206337,-7.720892,-6.874594,-5.073178,-0.867183,8.384451,-7.809625,-6.350768,0.740055,-6.250995,1.725184,-5.804679,9.495389,-1.992628,2.356051,6.875115,-4.625598,-3.647150,3.408649,-9.153087,7.141271,-5.572480,1.234889,-3.505176,4.626968,0.581886,3.149277,9.857868,-6.380378,2.137386,9.654284,-3.349087,7.556911,-1.661851,-4.277352,-2.289045,-1.459927,4.348317,7.541278,-4.935798,-1.882637,3.479751,1.570676,3.786372,2.130819,-5.041969,6.731686,-8.762023,8.036254,1.133911,1.931350,3.189005,5.904618,-4.147112,5.297437,4.020325,-4.855159,2.506112,0.562990,5.726728,-8.129502,5.065469,6.321788,-3.920733,-1.926478,-1.898167,7.929236,4.482371,-5.635227,-4.791921,-3.169653,-6.929649,-9.945131,8.575269,-0.853314,-6.434772,-3.105313,-5.359032,-5.088925,-0.390202,1.319822,-7.708190,2.491616,0.316774,1.456904,4.464034,1.871398,-3.852637,8.429044,0.066009,4.606917,-0.883744,-6.778940,4.581068,4.176702,2.338429,-4.497058,-8.049723,-3.064205,9.904968,0.386723,8.892273,-8.374672,-4.353539,3.471213,0.534187,-8.958280,-3.039901,2.288288,3.613038,-5.969799,3.412180,-0.712806,-0.391522,8.038819,9.414204,-4.681463,9.627284,-4.455105,-0.770677,8.747739,-6.753657,-9.762811,-6.817379,-4.428062,-8.279617,6.044070,3.757953,1.588775,-9.097429,-7.560912,8.153877,-0.639745,2.772600,0.003997,4.319934,-7.698455,-1.067021,-1.168111,-3.076964,-8.211966,5.425585,-2.788195,8.925006,-5.427477,-8.718185,6.435331,7.385685,-0.741973,0.492118,1.329071,-8.369254,-8.342497,-8.162710,-4.618744,-9.129137,0.459598,-7.769835,-9.531275,-3.282392,2.226932,0.251933,-9.019065,-9.514705,-3.737199,-5.673694,-0.698479,9.318269,1.849356,-2.721318,-7.627913,-2.118524,-5.542642,0.086383,5.208631,-1.823095,-1.576043,9.651856,-9.751050,9.853494,5.907640,-8.077321,-5.586530,4.261443,0.716315,7.965663,-5.574149,-3.534315,-3.055775,3.492123,5.384463,-5.391678,-4.082009,-4.236315,-9.911395,0.602860,-4.745231,9.604651,1.931149,-5.429511,-9.852056,-8.585454,-8.601933,-1.925828,-4.806577,-6.288179,3.802547,7.195698,-6.698016,-0.036357,6.084525,6.572639,-3.336805,-5.147884,2.165816,-5.319296,7.492183,-5.664765,9.652423,-9.157540,-6.976111,5.148557,-4.421536,8.858263,5.352672,3.096322,7.999375,-6.908166,5.725843,0.261559,1.176304,0.299112,-3.026663,-7.728908,-0.615822,6.697624,9.061069,-8.388227,5.886933,7.288357,2.840268,3.654034,4.149952,-6.046609,6.788066,8.774021,-1.288892,5.220542,-7.037807,-7.274906,-0.297300,7.731476,3.287246,4.013354,-8.007802,2.682648,2.879054,-1.183723,-8.854556,-3.242461,8.761512,-9.552643,-2.173873,-2.650114,-7.384590,5.699551,3.188361,-4.902107,-7.850514,5.347164,-2.627740,-2.351551,-9.339945,-2.041755,-1.485429,-9.467599,-7.834764,4.309814,-0.195446,6.476205,-7.952551,5.671354,-6.991108,-7.597337,-1.635270,1.617829,-3.850867,-6.677550,-3.264237,2.117760,9.213474,-2.393471,0.674872,-4.114770,-5.392399,-1.253056,-0.014223,-6.337822,8.898783,2.051079,-2.331895,2.020281,5.669964,5.142890,-2.614109,-7.917384,-3.262018,-9.137878,-0.523705,6.151937,-4.495752,9.749065,-6.661889,2.693431,1.416242,5.932019,4.745194,-9.773416,-9.258089,3.737065,0.064053,3.528069,-7.899998,3.557242,-7.478394,7.710277,-7.516701,-1.716907,-2.493936,-3.264646,-1.697720,-2.576657,-3.607068,-1.537453,-2.460115,-2.503848,3.320158,-1.053506,4.850264,-6.159808,-0.341485,-0.608074,0.792147,9.398371,9.549921,9.610254,7.513506,5.937157,-8.518051,9.813131,0.272799,-0.919603,9.569846,1.494143,-4.209761,-4.918963,4.374349,3.292614,6.807045,0.647353,9.428629,4.036210,-6.274258,-6.799146,-9.851494,1.028278,6.170782,1.901721,-1.274821,0.276357,-0.751974,-4.830331,5.435007,-8.553495,-7.312028,8.120822,-3.429829,7.283601,0.131738,-6.803781,0.993226,-1.069526,2.299376,5.488773,-0.275302,9.590231,-2.482370,-0.082037,6.532847,6.904280,-7.386649,8.266324,0.396991,6.183349,1.246210,-2.095162,-6.706350,4.529933,-0.623854,0.188671,-3.136974,-6.811897,-2.368400,-8.411379,8.496412,-1.048601,-4.787667,5.576073,-0.103704,-5.680597,-8.038428,-1.938756,7.486540,-3.572003,-4.278231,-2.746559,-5.189770,4.549066,-3.700805,4.001688,3.982794,4.459070,7.911178,0.206906,-0.628500,5.206398,7.648788,8.973505,-0.598690,-6.256004,8.062279,6.515990,5.358737,4.680967,-4.024167,-1.716085,-5.015526,0.360672,-9.399679,1.425342,-1.839347,6.850119,-1.188080,1.766808,-9.664097,6.171198,-2.981798,-5.566393,0.908324,1.794133,-7.629409,-9.256913,-5.075859,-1.809996,-2.984846,7.356243,4.111291,-1.260713,9.077641,-2.121565,-6.129966,2.351921,-9.215454,-4.839947,3.476570,2.744773,3.285961,-4.011181,3.779694,-2.999365,-4.632488,-8.842217,-0.723750,5.528184,-5.574317,-0.459154,8.664702,-4.430860,3.586384,-5.242801,-7.313816,-7.686887,5.960502,1.553955,9.442798,-2.927260,2.232419,7.843406,-9.290200,5.160219,-3.483166,6.637568,-9.412954,0.223051,-7.320335,-6.576314,3.213915,0.573506,-7.563243,1.090962,-6.159652,7.456521,3.201930,-6.645759,-9.160122,-2.997245,3.926457,-5.559656,4.332147,9.745155,4.975534,6.459849,-3.956916,2.920984,4.946559,-3.332639,6.847600,-0.584759,1.967592,-5.570840,-1.630174,-6.156445,-3.365327,5.555288,4.592914,2.067869,6.457601,6.050761,8.169341,-0.234158,-9.103441,1.345172,-5.870786,-1.689796,-9.190116,4.587406,8.609569,-6.541241,2.082052,-4.314288,-4.606039,1.991877,-3.363568,1.625171,-5.919523,-2.605780,-0.186264,-4.690971,8.636338,-9.965138,0.717747,5.761037,-3.354512,-9.242841,2.824514,-4.860658,-9.365144,3.951363,-0.675691,6.056125,-0.902630,7.070356,0.328786,-7.770133,-2.564324,-6.838359,-2.886122,9.191153,1.715274,-2.845664,-7.720388,-7.754600,5.616099,3.043022,-8.360465,-6.374984,-5.534144,9.858874,1.188993,9.272564,0.871064,6.524971,5.288682,-1.759147,-1.933022,9.272759,5.589204,4.278193,-2.310545,-1.713365,6.128578,7.895848,7.695436,3.848771,-7.475093,-2.215492,-8.414619,-0.613937,-4.963881,-2.388325,5.581374], dtype = "float64")#candidate|1201|(1120,)|const|float64
call_1200 = func_893_call(relay.reshape(const_1201.astype('float64'), [16, 10, 7]))
call_1202 = func_893_call(relay.reshape(const_1201.astype('float64'), [16, 10, 7]))
func_1027_call = mod.get_global_var('func_1027')
func_1029_call = mutated_mod.get_global_var('func_1029')
const_1204 = relay.const([[9,2],[-3,-5],[3,-10],[6,10],[7,10],[6,-4],[6,-8],[-1,2],[6,-9],[7,3],[-6,10],[-6,5],[6,9],[-5,-4],[-4,4],[9,-5],[-1,7],[10,10],[10,10],[-10,9],[2,10],[3,-8],[8,-4],[9,-3],[4,8],[7,-2],[8,3],[8,-6],[4,-8],[9,5],[10,-4],[7,-9],[5,-4],[7,-1],[7,5],[-8,6],[6,-10],[-1,-4],[-2,-2],[-8,-9],[10,7],[-1,-2],[-2,6],[7,-3],[-5,10],[8,7],[-4,9],[1,7],[3,-9],[-2,-5],[-2,-6],[2,-4],[4,2],[-1,2],[-1,-7],[6,4],[-8,6],[-7,-4],[-1,-8],[2,1],[-9,8],[6,-5],[-8,7],[-8,7],[-7,-6],[3,3],[-10,10],[-4,-10],[4,3],[7,-6],[10,-2],[6,2],[10,8],[-8,1],[2,2],[10,1],[9,5],[9,2],[5,-8],[1,4],[10,9],[1,-9],[-1,10],[-4,-9],[-6,10],[4,-7],[-8,-1],[4,2],[-5,3],[-3,10],[-3,5],[-5,2],[-9,-7],[6,3],[8,3],[-9,-6],[-8,-4],[-3,-4],[9,6],[6,-5],[2,-9],[5,-4],[-5,-5],[-4,3],[-1,-4],[3,3],[-7,-4],[-8,-9],[1,1],[-9,-9],[2,1],[6,-9],[-10,3],[10,5],[-6,-2],[8,-5],[9,-6],[-10,3],[8,1],[9,-1],[4,-2],[10,4],[6,10],[-9,-4],[-4,-5],[7,8],[1,1],[9,8],[-8,8],[8,5],[9,-10],[2,-5],[6,1],[-9,9],[10,9],[-2,5],[-9,-7],[4,-3],[-9,1],[8,-8],[-7,8],[-9,5],[8,1],[1,9],[8,7],[10,-4],[2,10],[3,-4],[8,4],[10,-1],[3,6],[7,-6],[-5,-6],[2,6],[7,-5],[6,9],[-1,5],[4,8],[7,3],[-1,-6],[1,-3],[-4,-8],[7,-9],[1,8],[3,-3],[-9,-6],[7,10],[-10,6],[10,4],[-10,-5],[4,-7],[4,-8],[1,5],[2,-8],[-3,-9],[-5,-6],[-4,-1],[3,-9],[-9,-3],[-6,-1],[-4,-8],[-8,-5],[3,7],[9,-4],[-4,-9],[-2,5],[9,-6],[10,-1],[-2,1],[3,4],[-2,-5],[2,5],[-8,-2],[-5,2],[4,-6],[-3,-1],[5,-6],[9,-4],[1,-5],[-1,-9],[-7,9],[-8,3],[-9,8],[-5,9],[-10,8],[-7,4],[4,-10],[-2,-3],[-10,10],[-3,1],[1,4],[-6,-7],[7,8],[8,1],[3,-6],[-10,3],[-3,-7],[-3,8],[8,3],[-6,2],[6,9],[-4,-5],[-10,2],[-1,-10],[-6,-3],[-5,-5],[5,-9],[-8,6],[1,-5],[4,3],[-10,3],[-8,8],[-2,-2],[-3,10],[-5,-1],[-9,5],[10,6],[2,9],[-4,5],[-9,-3],[5,-6],[2,-6],[-6,-2],[-4,7],[-10,10],[-4,-4],[-5,-8],[4,-3],[-9,-7],[8,2],[10,9],[10,10],[10,-2],[2,3],[-8,2],[-4,-1],[6,6],[3,8],[-1,-9],[-4,10],[2,-10],[-9,2],[6,1],[10,5],[-2,-10],[10,-8],[4,1],[-8,-3],[7,5],[-6,5],[-4,4],[-8,8],[1,-3],[-5,-1],[10,-10],[-6,-9],[4,-1],[4,4],[2,-9],[-6,-10]], dtype = "uint8")#candidate|1204|(280, 2)|const|uint8
call_1203 = relay.TupleGetItem(func_1027_call(relay.reshape(const_1204.astype('uint8'), [8, 10, 7])), 0)
call_1205 = relay.TupleGetItem(func_1029_call(relay.reshape(const_1204.astype('uint8'), [8, 10, 7])), 0)
output = relay.Tuple([bop_1189,call_1200,const_1201,call_1203,const_1204,])
output2 = relay.Tuple([bop_1189,call_1202,const_1201,call_1205,const_1204,])
func_1228 = relay.Function([var_1187,var_1188,], output)
mod['func_1228'] = func_1228
mod = relay.transform.InferType()(mod)
var_1229 = relay.var("var_1229", dtype = "bool", shape = ())#candidate|1229|()|var|bool
var_1230 = relay.var("var_1230", dtype = "bool", shape = (6, 6, 6))#candidate|1230|(6, 6, 6)|var|bool
output = func_1228(var_1229,var_1230,)
func_1231 = relay.Function([var_1229,var_1230,], output)
mutated_mod['func_1231'] = func_1231
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1129_call = mod.get_global_var('func_1129')
func_1131_call = mutated_mod.get_global_var('func_1131')
call_1331 = relay.TupleGetItem(func_1129_call(), 1)
call_1332 = relay.TupleGetItem(func_1131_call(), 1)
func_810_call = mod.get_global_var('func_810')
func_812_call = mutated_mod.get_global_var('func_812')
call_1356 = relay.TupleGetItem(func_810_call(), 0)
call_1357 = relay.TupleGetItem(func_812_call(), 0)
output = relay.Tuple([call_1331,call_1356,])
output2 = relay.Tuple([call_1332,call_1357,])
func_1362 = relay.Function([], output)
mod['func_1362'] = func_1362
mod = relay.transform.InferType()(mod)
output = func_1362()
func_1363 = relay.Function([], output)
mutated_mod['func_1363'] = func_1363
mutated_mod = relay.transform.InferType()(mutated_mod)
func_786_call = mod.get_global_var('func_786')
func_788_call = mutated_mod.get_global_var('func_788')
call_1369 = func_786_call()
call_1370 = func_786_call()
func_1129_call = mod.get_global_var('func_1129')
func_1131_call = mutated_mod.get_global_var('func_1131')
call_1387 = relay.TupleGetItem(func_1129_call(), 1)
call_1388 = relay.TupleGetItem(func_1131_call(), 1)
output = relay.Tuple([call_1369,call_1387,])
output2 = relay.Tuple([call_1370,call_1388,])
func_1392 = relay.Function([], output)
mod['func_1392'] = func_1392
mod = relay.transform.InferType()(mod)
mutated_mod['func_1392'] = func_1392
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1392_call = mutated_mod.get_global_var('func_1392')
call_1393 = func_1392_call()
output = call_1393
func_1394 = relay.Function([], output)
mutated_mod['func_1394'] = func_1394
mutated_mod = relay.transform.InferType()(mutated_mod)
func_810_call = mod.get_global_var('func_810')
func_812_call = mutated_mod.get_global_var('func_812')
call_1407 = relay.TupleGetItem(func_810_call(), 0)
call_1408 = relay.TupleGetItem(func_812_call(), 0)
output = relay.Tuple([call_1407,])
output2 = relay.Tuple([call_1408,])
func_1457 = relay.Function([], output)
mod['func_1457'] = func_1457
mod = relay.transform.InferType()(mod)
output = func_1457()
func_1458 = relay.Function([], output)
mutated_mod['func_1458'] = func_1458
mutated_mod = relay.transform.InferType()(mutated_mod)
func_978_call = mod.get_global_var('func_978')
func_980_call = mutated_mod.get_global_var('func_980')
call_1478 = func_978_call()
call_1479 = func_978_call()
output = call_1478
output2 = call_1479
func_1488 = relay.Function([], output)
mod['func_1488'] = func_1488
mod = relay.transform.InferType()(mod)
output = func_1488()
func_1489 = relay.Function([], output)
mutated_mod['func_1489'] = func_1489
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1184_call = mod.get_global_var('func_1184')
func_1186_call = mutated_mod.get_global_var('func_1186')
call_1565 = relay.TupleGetItem(func_1184_call(), 1)
call_1566 = relay.TupleGetItem(func_1186_call(), 1)
const_1567 = relay.const([[[-8.216726,-6.863443,-2.567827],[1.209575,2.153002,4.738876],[9.534557,-1.756206,-3.273131],[9.689782,-9.169968,5.516907],[-4.832615,-9.403503,7.396371],[4.580258,-5.290812,-6.067010],[0.252978,-9.542335,-2.399047],[-5.582735,6.546766,2.875653],[-3.504984,-1.691867,2.075831],[7.646484,-8.642882,-1.730183],[-4.233471,9.266439,4.057439],[1.882594,8.306008,-3.659198]],[[8.970087,0.305351,4.082798],[-0.930095,3.387789,8.919452],[7.602099,-2.661598,-1.727978],[8.765670,9.462512,4.320019],[4.573768,2.891562,0.108523],[-7.005026,1.890066,6.244742],[-0.652673,-7.770510,-0.682621],[-8.281548,-8.305544,8.062756],[3.981255,3.420035,-6.051955],[-2.497961,8.467627,-7.126653],[6.898298,-3.496777,0.451468],[0.233146,9.736041,5.294702]],[[9.411148,9.575696,3.936439],[-5.092621,-3.864663,4.731029],[5.501439,-9.089082,0.481805],[5.736485,6.896597,7.325526],[2.580670,4.625642,-7.104742],[-2.056535,-1.751916,-5.654166],[6.075320,1.548563,-9.616717],[-3.722541,-7.629411,0.325916],[4.345281,-2.446398,-8.612427],[8.945579,-6.709788,-9.126888],[-0.677294,6.962417,2.114147],[-5.445610,-5.299079,-6.997783]],[[-4.602059,-7.765957,9.178501],[-6.690523,-8.664071,5.447700],[0.638626,-6.070512,1.926089],[-2.125632,-5.403786,4.759780],[6.512626,-7.797347,9.751899],[4.738714,6.469126,-4.804198],[7.708542,1.202054,2.860136],[-7.684411,-8.706915,-6.421329],[4.876235,8.700832,-6.012938],[6.390795,-1.100629,-8.856186],[-6.953423,8.184245,0.210201],[-5.348201,-0.405943,9.792883]],[[6.725324,-2.701573,-5.996360],[9.506428,-4.193753,0.452755],[9.430040,-7.897847,-0.597271],[6.803920,-0.318540,-2.583285],[-6.637487,-9.097111,5.588616],[-5.079416,4.457258,-1.257546],[-5.968582,-0.423014,-7.714710],[1.155780,-5.136812,6.479283],[-8.252113,-2.361824,3.692064],[2.130149,3.684937,-8.502368],[2.806381,5.710376,-3.013958],[-6.099675,-9.830697,8.204548]],[[5.285667,-1.954246,-6.414829],[-4.442788,3.132305,-7.309040],[-4.365462,-9.199847,3.454726],[-4.319641,-1.521589,-0.010305],[7.154902,1.320542,1.248369],[-2.872388,8.671202,-4.655101],[-8.053451,2.266292,7.035294],[-9.935459,4.460184,-3.785977],[0.077839,8.883771,-2.928523],[-8.566485,-3.584044,6.164868],[-2.262451,-7.542016,4.751093],[-9.372226,-1.948264,5.425175]],[[2.110483,0.137070,-5.328131],[7.551924,-3.287776,5.609803],[-7.498314,-1.006014,0.085688],[-7.024745,7.139659,-4.954115],[-3.958968,-3.806522,-7.919082],[-5.658281,1.682249,-5.294669],[8.837853,0.165936,-4.726022],[7.505242,2.081905,5.696958],[0.337908,-8.750888,7.516275],[0.460472,0.461273,-4.227372],[0.488565,5.367243,-1.120453],[9.926815,-1.406787,3.609657]],[[1.381859,8.400870,-7.255258],[-6.787769,2.031396,-1.570281],[8.578323,-4.323407,3.048012],[-3.549051,2.256343,7.497204],[9.019736,-4.310134,4.665976],[-9.806307,-4.386056,1.828077],[-5.340137,-3.003369,4.850948],[-5.385286,6.442450,5.701084],[7.780587,5.486425,-0.603325],[-5.875634,6.227971,4.275482],[-2.612781,-7.779118,6.668715],[4.311843,9.822300,0.017587]],[[-2.469123,3.985502,-3.912545],[-9.732299,-6.008843,4.068616],[-6.754449,-0.102973,-3.010483],[3.958687,5.798351,7.621340],[2.625456,-1.514285,-2.689709],[6.239555,-7.730548,-9.486733],[-9.284049,-4.892139,9.192467],[6.665768,-4.070731,4.854035],[1.671541,3.370634,-7.947584],[7.044234,-5.424521,-4.413588],[-0.260915,4.515277,-6.649489],[2.164461,2.845727,8.805506]],[[8.154735,-7.643243,-4.778511],[-9.754645,-9.418218,-7.074823],[-5.935324,1.747048,-0.132951],[-5.745343,0.414549,1.217368],[8.052895,-5.427916,-5.119935],[3.212694,-9.603771,3.724153],[-2.304790,-4.449441,-1.992794],[8.266355,0.417898,4.265709],[4.490918,-7.582689,6.811805],[-8.827809,-3.496018,8.508330],[9.348451,6.319283,7.954671],[-1.854560,-9.686421,-5.836586]],[[-4.085200,-9.596743,-5.688356],[1.332249,6.924841,0.546503],[7.084594,8.591990,-5.677248],[-1.107814,-4.857809,-3.444440],[5.612222,8.294332,5.019884],[-4.233167,6.296854,0.748589],[-6.897601,1.765392,-9.258855],[-9.185371,1.900198,-9.780939],[0.374206,6.581224,-8.257007],[5.719343,-1.828318,0.194692],[-8.434754,1.465444,-5.748898],[-7.283495,8.297043,-7.061291]],[[-3.259756,1.733757,0.193823],[9.285261,3.637286,-2.211840],[-9.542649,2.951156,-8.059226],[8.154063,-5.565890,-4.618251],[4.362226,1.762452,3.841532],[8.649153,-1.867614,3.795436],[-5.678598,-1.889660,5.031209],[5.504560,-6.247103,-7.387898],[5.884131,-9.586337,4.963130],[6.502089,2.065063,8.863677],[-9.086057,-8.192092,-4.611788],[-7.743309,-4.916184,-8.723734]],[[7.247606,-3.993786,-1.151422],[-0.594975,-0.874818,4.879872],[-0.389323,-1.301013,4.506070],[-2.130977,-5.334613,-2.341757],[-9.670986,9.958909,-0.051405],[-0.173539,2.764152,2.874369],[2.186629,-9.578991,-0.908644],[9.942999,-3.935660,-6.939742],[-6.882629,3.140868,5.995421],[1.556117,8.261675,8.730143],[-3.618559,1.696870,-6.819627],[9.105291,2.014343,4.496320]]], dtype = "float32")#candidate|1567|(13, 12, 3)|const|float32
bop_1568 = relay.bitwise_and(call_1565.astype('int64'), relay.reshape(const_1567.astype('int64'), relay.shape_of(call_1565))) # shape=(13, 12, 3)
bop_1571 = relay.bitwise_and(call_1566.astype('int64'), relay.reshape(const_1567.astype('int64'), relay.shape_of(call_1566))) # shape=(13, 12, 3)
func_1457_call = mod.get_global_var('func_1457')
func_1458_call = mutated_mod.get_global_var('func_1458')
call_1575 = relay.TupleGetItem(func_1457_call(), 0)
call_1576 = relay.TupleGetItem(func_1458_call(), 0)
output = relay.Tuple([bop_1568,call_1575,])
output2 = relay.Tuple([bop_1571,call_1576,])
func_1589 = relay.Function([], output)
mod['func_1589'] = func_1589
mod = relay.transform.InferType()(mod)
output = func_1589()
func_1590 = relay.Function([], output)
mutated_mod['func_1590'] = func_1590
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1488_call = mod.get_global_var('func_1488')
func_1489_call = mutated_mod.get_global_var('func_1489')
call_1651 = func_1488_call()
call_1652 = func_1488_call()
output = relay.Tuple([call_1651,])
output2 = relay.Tuple([call_1652,])
func_1653 = relay.Function([], output)
mod['func_1653'] = func_1653
mod = relay.transform.InferType()(mod)
mutated_mod['func_1653'] = func_1653
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1653_call = mutated_mod.get_global_var('func_1653')
call_1654 = func_1653_call()
output = call_1654
func_1655 = relay.Function([], output)
mutated_mod['func_1655'] = func_1655
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1392_call = mod.get_global_var('func_1392')
func_1394_call = mutated_mod.get_global_var('func_1394')
call_1675 = relay.TupleGetItem(func_1392_call(), 1)
call_1676 = relay.TupleGetItem(func_1394_call(), 1)
func_786_call = mod.get_global_var('func_786')
func_788_call = mutated_mod.get_global_var('func_788')
call_1679 = func_786_call()
call_1680 = func_786_call()
output = relay.Tuple([call_1675,call_1679,])
output2 = relay.Tuple([call_1676,call_1680,])
func_1682 = relay.Function([], output)
mod['func_1682'] = func_1682
mod = relay.transform.InferType()(mod)
mutated_mod['func_1682'] = func_1682
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1682_call = mutated_mod.get_global_var('func_1682')
call_1683 = func_1682_call()
output = call_1683
func_1684 = relay.Function([], output)
mutated_mod['func_1684'] = func_1684
mutated_mod = relay.transform.InferType()(mutated_mod)
func_810_call = mod.get_global_var('func_810')
func_812_call = mutated_mod.get_global_var('func_812')
call_1685 = relay.TupleGetItem(func_810_call(), 0)
call_1686 = relay.TupleGetItem(func_812_call(), 0)
uop_1688 = relay.atanh(call_1685.astype('float32')) # shape=(1, 10, 7)
uop_1690 = relay.atanh(call_1686.astype('float32')) # shape=(1, 10, 7)
var_1692 = relay.var("var_1692", dtype = "float32", shape = (11, 10, 7))#candidate|1692|(11, 10, 7)|var|float32
bop_1693 = relay.power(uop_1688.astype('float64'), var_1692.astype('float64')) # shape=(11, 10, 7)
bop_1696 = relay.power(uop_1690.astype('float64'), var_1692.astype('float64')) # shape=(11, 10, 7)
func_1362_call = mod.get_global_var('func_1362')
func_1363_call = mutated_mod.get_global_var('func_1363')
call_1709 = relay.TupleGetItem(func_1362_call(), 0)
call_1710 = relay.TupleGetItem(func_1363_call(), 0)
func_1653_call = mod.get_global_var('func_1653')
func_1655_call = mutated_mod.get_global_var('func_1655')
call_1711 = relay.TupleGetItem(func_1653_call(), 0)
call_1712 = relay.TupleGetItem(func_1655_call(), 0)
func_786_call = mod.get_global_var('func_786')
func_788_call = mutated_mod.get_global_var('func_788')
call_1719 = func_786_call()
call_1720 = func_786_call()
output = relay.Tuple([bop_1693,call_1709,call_1711,call_1719,])
output2 = relay.Tuple([bop_1696,call_1710,call_1712,call_1720,])
func_1725 = relay.Function([var_1692,], output)
mod['func_1725'] = func_1725
mod = relay.transform.InferType()(mod)
mutated_mod['func_1725'] = func_1725
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1726 = relay.var("var_1726", dtype = "float32", shape = (11, 10, 7))#candidate|1726|(11, 10, 7)|var|float32
func_1725_call = mutated_mod.get_global_var('func_1725')
call_1727 = func_1725_call(var_1726)
output = call_1727
func_1728 = relay.Function([var_1726], output)
mutated_mod['func_1728'] = func_1728
mutated_mod = relay.transform.InferType()(mutated_mod)
func_810_call = mod.get_global_var('func_810')
func_812_call = mutated_mod.get_global_var('func_812')
call_1747 = relay.TupleGetItem(func_810_call(), 0)
call_1748 = relay.TupleGetItem(func_812_call(), 0)
output = call_1747
output2 = call_1748
func_1757 = relay.Function([], output)
mod['func_1757'] = func_1757
mod = relay.transform.InferType()(mod)
mutated_mod['func_1757'] = func_1757
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1757_call = mutated_mod.get_global_var('func_1757')
call_1758 = func_1757_call()
output = call_1758
func_1759 = relay.Function([], output)
mutated_mod['func_1759'] = func_1759
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1757_call = mod.get_global_var('func_1757')
func_1759_call = mutated_mod.get_global_var('func_1759')
call_1760 = func_1757_call()
call_1761 = func_1757_call()
func_1488_call = mod.get_global_var('func_1488')
func_1489_call = mutated_mod.get_global_var('func_1489')
call_1771 = func_1488_call()
call_1772 = func_1488_call()
output = relay.Tuple([call_1760,call_1771,])
output2 = relay.Tuple([call_1761,call_1772,])
func_1773 = relay.Function([], output)
mod['func_1773'] = func_1773
mod = relay.transform.InferType()(mod)
output = func_1773()
func_1774 = relay.Function([], output)
mutated_mod['func_1774'] = func_1774
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1457_call = mod.get_global_var('func_1457')
func_1458_call = mutated_mod.get_global_var('func_1458')
call_1799 = relay.TupleGetItem(func_1457_call(), 0)
call_1800 = relay.TupleGetItem(func_1458_call(), 0)
output = relay.Tuple([call_1799,])
output2 = relay.Tuple([call_1800,])
func_1813 = relay.Function([], output)
mod['func_1813'] = func_1813
mod = relay.transform.InferType()(mod)
mutated_mod['func_1813'] = func_1813
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1813_call = mutated_mod.get_global_var('func_1813')
call_1814 = func_1813_call()
output = call_1814
func_1815 = relay.Function([], output)
mutated_mod['func_1815'] = func_1815
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1866 = relay.const(3, dtype = "int64")#candidate|1866|()|const|int64
var_1867 = relay.var("var_1867", dtype = "int64", shape = (12, 8, 8))#candidate|1867|(12, 8, 8)|var|int64
bop_1868 = relay.greater(const_1866.astype('bool'), var_1867.astype('bool')) # shape=(12, 8, 8)
func_978_call = mod.get_global_var('func_978')
func_980_call = mutated_mod.get_global_var('func_980')
call_1874 = func_978_call()
call_1875 = func_978_call()
uop_1880 = relay.atanh(call_1874.astype('float64')) # shape=(8, 10, 7)
uop_1882 = relay.atanh(call_1875.astype('float64')) # shape=(8, 10, 7)
uop_1909 = relay.sinh(uop_1880.astype('float64')) # shape=(8, 10, 7)
uop_1911 = relay.sinh(uop_1882.astype('float64')) # shape=(8, 10, 7)
func_1653_call = mod.get_global_var('func_1653')
func_1655_call = mutated_mod.get_global_var('func_1655')
call_1912 = relay.TupleGetItem(func_1653_call(), 0)
call_1913 = relay.TupleGetItem(func_1655_call(), 0)
func_1757_call = mod.get_global_var('func_1757')
func_1759_call = mutated_mod.get_global_var('func_1759')
call_1943 = func_1757_call()
call_1944 = func_1757_call()
func_810_call = mod.get_global_var('func_810')
func_812_call = mutated_mod.get_global_var('func_812')
call_1947 = relay.TupleGetItem(func_810_call(), 0)
call_1948 = relay.TupleGetItem(func_812_call(), 0)
func_1773_call = mod.get_global_var('func_1773')
func_1774_call = mutated_mod.get_global_var('func_1774')
call_1950 = relay.TupleGetItem(func_1773_call(), 0)
call_1951 = relay.TupleGetItem(func_1774_call(), 0)
func_1184_call = mod.get_global_var('func_1184')
func_1186_call = mutated_mod.get_global_var('func_1186')
call_1952 = relay.TupleGetItem(func_1184_call(), 1)
call_1953 = relay.TupleGetItem(func_1186_call(), 1)
output = relay.Tuple([bop_1868,uop_1909,call_1912,call_1943,call_1947,call_1950,call_1952,])
output2 = relay.Tuple([bop_1868,uop_1911,call_1913,call_1944,call_1948,call_1951,call_1953,])
func_1958 = relay.Function([var_1867,], output)
mod['func_1958'] = func_1958
mod = relay.transform.InferType()(mod)
mutated_mod['func_1958'] = func_1958
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1959 = relay.var("var_1959", dtype = "int64", shape = (12, 8, 8))#candidate|1959|(12, 8, 8)|var|int64
func_1958_call = mutated_mod.get_global_var('func_1958')
call_1960 = func_1958_call(var_1959)
output = call_1960
func_1961 = relay.Function([var_1959], output)
mutated_mod['func_1961'] = func_1961
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1457_call = mod.get_global_var('func_1457')
func_1458_call = mutated_mod.get_global_var('func_1458')
call_2016 = relay.TupleGetItem(func_1457_call(), 0)
call_2017 = relay.TupleGetItem(func_1458_call(), 0)
output = call_2016
output2 = call_2017
func_2030 = relay.Function([], output)
mod['func_2030'] = func_2030
mod = relay.transform.InferType()(mod)
output = func_2030()
func_2031 = relay.Function([], output)
mutated_mod['func_2031'] = func_2031
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1392_call = mod.get_global_var('func_1392')
func_1394_call = mutated_mod.get_global_var('func_1394')
call_2092 = relay.TupleGetItem(func_1392_call(), 0)
call_2093 = relay.TupleGetItem(func_1394_call(), 0)
output = call_2092
output2 = call_2093
func_2121 = relay.Function([], output)
mod['func_2121'] = func_2121
mod = relay.transform.InferType()(mod)
mutated_mod['func_2121'] = func_2121
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2121_call = mutated_mod.get_global_var('func_2121')
call_2122 = func_2121_call()
output = call_2122
func_2123 = relay.Function([], output)
mutated_mod['func_2123'] = func_2123
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1184_call = mod.get_global_var('func_1184')
func_1186_call = mutated_mod.get_global_var('func_1186')
call_2135 = relay.TupleGetItem(func_1184_call(), 1)
call_2136 = relay.TupleGetItem(func_1186_call(), 1)
output = relay.Tuple([call_2135,])
output2 = relay.Tuple([call_2136,])
func_2143 = relay.Function([], output)
mod['func_2143'] = func_2143
mod = relay.transform.InferType()(mod)
output = func_2143()
func_2144 = relay.Function([], output)
mutated_mod['func_2144'] = func_2144
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1184_call = mod.get_global_var('func_1184')
func_1186_call = mutated_mod.get_global_var('func_1186')
call_2319 = relay.TupleGetItem(func_1184_call(), 1)
call_2320 = relay.TupleGetItem(func_1186_call(), 1)
output = relay.Tuple([call_2319,])
output2 = relay.Tuple([call_2320,])
func_2345 = relay.Function([], output)
mod['func_2345'] = func_2345
mod = relay.transform.InferType()(mod)
mutated_mod['func_2345'] = func_2345
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2345_call = mutated_mod.get_global_var('func_2345')
call_2346 = func_2345_call()
output = call_2346
func_2347 = relay.Function([], output)
mutated_mod['func_2347'] = func_2347
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1757_call = mod.get_global_var('func_1757')
func_1759_call = mutated_mod.get_global_var('func_1759')
call_2378 = func_1757_call()
call_2379 = func_1757_call()
output = call_2378
output2 = call_2379
func_2380 = relay.Function([], output)
mod['func_2380'] = func_2380
mod = relay.transform.InferType()(mod)
output = func_2380()
func_2381 = relay.Function([], output)
mutated_mod['func_2381'] = func_2381
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2539 = relay.var("var_2539", dtype = "uint8", shape = (10, 1, 7))#candidate|2539|(10, 1, 7)|var|uint8
var_2540 = relay.var("var_2540", dtype = "uint8", shape = (10, 9, 7))#candidate|2540|(10, 9, 7)|var|uint8
bop_2541 = relay.greater(var_2539.astype('bool'), var_2540.astype('bool')) # shape=(10, 9, 7)
var_2545 = relay.var("var_2545", dtype = "bool", shape = (10, 9, 7))#candidate|2545|(10, 9, 7)|var|bool
bop_2546 = relay.power(bop_2541.astype('float64'), relay.reshape(var_2545.astype('float64'), relay.shape_of(bop_2541))) # shape=(10, 9, 7)
func_810_call = mod.get_global_var('func_810')
func_812_call = mutated_mod.get_global_var('func_812')
call_2553 = relay.TupleGetItem(func_810_call(), 0)
call_2554 = relay.TupleGetItem(func_812_call(), 0)
output = relay.Tuple([bop_2546,call_2553,])
output2 = relay.Tuple([bop_2546,call_2554,])
func_2560 = relay.Function([var_2539,var_2540,var_2545,], output)
mod['func_2560'] = func_2560
mod = relay.transform.InferType()(mod)
mutated_mod['func_2560'] = func_2560
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2560_call = mutated_mod.get_global_var('func_2560')
var_2562 = relay.var("var_2562", dtype = "uint8", shape = (10, 1, 7))#candidate|2562|(10, 1, 7)|var|uint8
var_2563 = relay.var("var_2563", dtype = "uint8", shape = (10, 9, 7))#candidate|2563|(10, 9, 7)|var|uint8
var_2564 = relay.var("var_2564", dtype = "bool", shape = (10, 9, 7))#candidate|2564|(10, 9, 7)|var|bool
call_2561 = func_2560_call(var_2562,var_2563,var_2564,)
output = call_2561
func_2565 = relay.Function([var_2562,var_2563,var_2564,], output)
mutated_mod['func_2565'] = func_2565
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2577 = relay.var("var_2577", dtype = "float64", shape = (9, 3, 12))#candidate|2577|(9, 3, 12)|var|float64
uop_2578 = relay.rsqrt(var_2577.astype('float64')) # shape=(9, 3, 12)
func_1362_call = mod.get_global_var('func_1362')
func_1363_call = mutated_mod.get_global_var('func_1363')
call_2580 = relay.TupleGetItem(func_1362_call(), 1)
call_2581 = relay.TupleGetItem(func_1363_call(), 1)
output = relay.Tuple([uop_2578,call_2580,])
output2 = relay.Tuple([uop_2578,call_2581,])
func_2584 = relay.Function([var_2577,], output)
mod['func_2584'] = func_2584
mod = relay.transform.InferType()(mod)
var_2585 = relay.var("var_2585", dtype = "float64", shape = (9, 3, 12))#candidate|2585|(9, 3, 12)|var|float64
output = func_2584(var_2585)
func_2586 = relay.Function([var_2585], output)
mutated_mod['func_2586'] = func_2586
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1457_call = mod.get_global_var('func_1457')
func_1458_call = mutated_mod.get_global_var('func_1458')
call_2614 = relay.TupleGetItem(func_1457_call(), 0)
call_2615 = relay.TupleGetItem(func_1458_call(), 0)
func_2584_call = mod.get_global_var('func_2584')
func_2586_call = mutated_mod.get_global_var('func_2586')
var_2634 = relay.var("var_2634", dtype = "float64", shape = (324,))#candidate|2634|(324,)|var|float64
call_2633 = relay.TupleGetItem(func_2584_call(relay.reshape(var_2634.astype('float64'), [9, 3, 12])), 0)
call_2635 = relay.TupleGetItem(func_2586_call(relay.reshape(var_2634.astype('float64'), [9, 3, 12])), 0)
output = relay.Tuple([call_2614,call_2633,var_2634,])
output2 = relay.Tuple([call_2615,call_2635,var_2634,])
func_2639 = relay.Function([var_2634,], output)
mod['func_2639'] = func_2639
mod = relay.transform.InferType()(mod)
mutated_mod['func_2639'] = func_2639
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2640 = relay.var("var_2640", dtype = "float64", shape = (324,))#candidate|2640|(324,)|var|float64
func_2639_call = mutated_mod.get_global_var('func_2639')
call_2641 = func_2639_call(var_2640)
output = call_2641
func_2642 = relay.Function([var_2640], output)
mutated_mod['func_2642'] = func_2642
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2649 = relay.var("var_2649", dtype = "int8", shape = (7, 12, 15))#candidate|2649|(7, 12, 15)|var|int8
const_2650 = relay.const([[[-7,-8,-6,10,-7,-7,6,7,10,-5,3,-10,3,-6,5],[2,10,4,8,7,3,-6,-8,4,-8,5,-4,2,10,-8],[-1,-9,-2,-8,7,6,1,-2,-4,-9,5,4,6,7,-7],[2,-5,8,4,-8,1,-4,7,-3,10,5,-3,-7,8,-6],[-8,10,9,-3,-6,-5,-6,-9,-3,-7,-4,10,-3,6,-10],[-4,-1,4,-4,3,7,-7,7,9,10,-4,-8,2,3,3],[-10,-4,1,9,2,-5,9,5,10,7,9,4,10,-9,4],[8,6,5,9,-5,5,1,6,4,-9,-7,2,6,-9,-5],[-4,7,7,1,5,9,10,7,-8,-1,2,5,-1,-6,-5],[-5,7,3,5,2,-2,1,-2,5,9,-9,5,-5,-7,7],[5,3,6,-6,9,-1,6,10,-2,8,-2,2,-10,-2,-9],[9,2,6,5,7,9,-5,-9,4,2,3,-8,-9,-4,-7]],[[1,9,-5,9,8,-6,-3,-1,-7,-4,-7,-3,1,-5,-3],[2,-8,7,-7,-5,-4,1,5,-2,6,-1,2,-10,-4,-10],[9,2,2,-1,8,3,1,1,-5,-8,6,6,1,-1,-2],[5,10,7,7,-10,-7,6,6,-4,10,-1,-1,-4,-2,-1],[-5,-6,-2,-8,2,-3,-2,7,-8,-6,4,5,-4,-10,-4],[-1,-5,-4,1,-5,10,1,1,-10,2,-7,5,2,1,-8],[-10,3,-7,2,1,-10,-9,2,1,-9,10,-9,-2,-6,2],[-9,4,-8,1,10,1,-2,1,10,-8,6,9,-4,-8,-3],[4,-3,-5,1,2,7,-1,6,5,-7,9,2,1,-8,-6],[-7,4,-9,2,-5,3,-8,1,8,1,10,9,7,-9,6],[7,-4,-5,2,-4,2,8,-4,5,6,5,6,-1,-3,10],[-4,7,8,10,1,-6,5,-4,-5,-1,7,-9,2,-7,-8]],[[6,-2,9,-5,1,-7,9,-10,-1,6,-6,-9,-7,4,-6],[1,-4,3,4,-2,-5,3,-9,9,-8,3,7,8,1,-7],[4,-8,-2,10,2,2,-1,1,6,1,4,-7,-5,6,8],[-4,-3,9,-5,1,2,-3,8,4,-4,9,10,1,-2,-1],[10,3,6,-1,2,8,-5,9,-7,-7,-10,8,-2,-5,-6],[7,10,1,3,-8,-4,-10,-9,2,4,6,-6,5,-3,-4],[-7,-7,10,-2,10,7,8,2,-10,3,4,9,-4,-7,7],[10,-2,-8,4,5,-1,9,2,5,6,6,-7,-7,1,10],[5,1,-6,8,-10,6,-7,-9,6,1,-1,-1,3,-1,-4],[-4,2,6,4,-10,9,6,-10,-5,8,-8,6,-9,-9,-7],[3,4,7,-3,-4,-7,-8,-8,-5,-3,-2,4,-2,7,3],[-6,5,2,-10,5,10,6,5,4,-1,-5,-2,9,1,-7]],[[1,-1,-5,-8,-9,-10,7,7,-2,-3,10,5,6,5,-1],[-4,-8,-9,-9,10,2,-9,8,2,-6,2,-5,-9,-1,10],[9,-6,-8,-1,-2,7,3,-6,3,-10,4,-9,8,-2,2],[-5,-4,9,-6,1,3,5,-7,4,8,10,-5,3,-5,-6],[-6,10,-2,4,-9,-7,4,-6,-2,10,6,3,7,9,-2],[-10,8,8,1,9,4,2,-7,-8,1,-8,-6,-10,-9,-6],[4,7,8,-3,7,8,-7,1,9,2,7,-8,-2,-9,-7],[-2,-3,-4,-6,9,-8,-5,7,10,7,-7,1,1,-6,-4],[5,8,7,-8,-1,-6,-4,-6,7,9,8,-10,3,-6,-2],[-4,8,-5,-3,6,10,3,-3,6,-6,7,1,7,-1,-3],[-1,9,8,-4,7,-7,4,-2,10,8,-3,10,-2,-9,7],[-5,-10,10,8,-1,6,5,-7,-6,7,2,8,-5,8,3]],[[-6,6,1,-4,-1,-8,-2,-4,10,-5,-3,6,-9,-2,-2],[4,1,2,7,-5,-10,5,5,-10,-1,-9,-3,6,5,3],[-4,5,-7,9,2,2,6,5,-7,6,1,-2,10,8,-7],[3,6,-7,5,-8,-2,1,10,-1,1,6,-5,-6,-8,10],[-5,-7,3,5,3,-4,-6,7,3,4,7,5,8,-7,-8],[-2,-2,-4,-6,-2,6,6,-3,9,-10,9,3,-7,5,-7],[-1,-6,1,-9,-10,-6,6,-10,2,6,-2,-9,-9,8,-10],[-7,-6,-7,4,4,6,-2,-1,-3,2,6,2,-1,-4,5],[3,-7,6,6,8,3,9,8,8,6,1,-5,9,-6,-4],[7,4,6,5,-9,1,9,-9,-3,-8,-8,3,2,7,7],[10,9,-7,5,9,9,7,-2,-2,-5,4,-9,-7,10,-8],[5,10,-1,1,3,9,-9,-7,-7,4,1,-5,4,1,6]],[[-1,-7,-7,10,-6,7,6,-6,-5,-3,-4,6,5,3,-3],[5,-10,-5,-5,-6,-1,-8,6,-9,4,-1,-8,-8,-6,1],[10,3,2,-8,6,-8,6,3,10,3,6,4,1,-7,5],[-8,5,6,3,4,9,-6,10,6,-1,-5,3,1,3,2],[-7,2,4,-9,3,6,-5,-6,-4,-4,1,2,-1,1,2],[-2,6,10,4,-6,-3,1,-7,-3,-9,-5,-8,-8,1,-1],[-3,-1,6,8,3,9,8,-3,6,5,-5,-8,7,-10,-5],[1,-5,-6,8,-3,10,8,-9,-3,7,2,8,4,8,-4],[-6,-1,-9,-4,-3,-9,-6,-2,-6,-1,5,-6,5,-8,6],[6,-7,5,-5,5,3,-2,-9,-5,1,1,-9,-9,-10,7],[-9,8,-1,-5,9,6,-6,-2,-5,1,2,4,-2,8,-9],[8,10,-7,-8,-7,4,10,4,-4,-6,6,10,1,-2,4]],[[2,3,-7,-2,5,-1,-7,-9,-10,1,-10,5,-9,-4,3],[-4,1,8,-8,-4,-2,-1,5,-9,5,-4,-8,-6,7,-8],[1,7,9,-3,-8,9,-1,8,-2,-2,8,3,7,3,-1],[-6,2,6,1,-10,6,10,2,5,8,3,5,3,7,-8],[8,-3,-9,4,10,-10,3,-4,-9,-3,8,2,1,-7,-3],[7,3,4,10,-2,3,-7,-2,-3,1,8,1,-5,5,-1],[1,2,7,-3,-5,9,9,-4,8,3,-5,-9,1,9,7],[8,7,9,-7,2,1,10,5,2,3,-3,8,-3,9,7],[-1,2,-7,1,-7,-6,4,8,-9,-5,6,9,1,3,5],[5,-6,-3,2,-7,-6,-5,6,-10,-4,7,2,-5,9,4],[-9,7,8,8,-3,6,7,-2,7,-10,-6,2,-5,2,3],[6,-4,9,5,9,4,9,-9,6,2,6,7,5,-2,-3]]], dtype = "int8")#candidate|2650|(7, 12, 15)|const|int8
bop_2651 = relay.subtract(var_2649.astype('int8'), relay.reshape(const_2650.astype('int8'), relay.shape_of(var_2649))) # shape=(7, 12, 15)
bop_2655 = relay.left_shift(var_2649.astype('uint8'), relay.reshape(bop_2651.astype('uint8'), relay.shape_of(var_2649))) # shape=(7, 12, 15)
func_1958_call = mod.get_global_var('func_1958')
func_1961_call = mutated_mod.get_global_var('func_1961')
const_2679 = relay.const([1,-10,7,-3,-5,2,9,7,1,8,5,-1,-1,7,-4,-7,2,-1,5,-4,6,10,9,-7,-7,2,-1,7,5,-10,-6,-5,4,7,-2,10,10,3,9,10,5,10,-4,-1,-8,-10,-6,5,5,-1,-7,-4,3,4,7,8,5,-1,-4,8,3,-10,-6,-9,9,5,1,2,-9,5,-2,10,-2,4,5,-10,1,7,5,8,8,-1,-3,4,-1,7,-4,1,-2,-2,9,3,-3,9,10,1,1,8,7,5,1,-1,3,-10,9,9,-5,-9,-7,-6,8,-3,-3,2,-3,8,-2,-8,1,9,-2,-7,5,7,6,6,-3,10,2,-4,2,-8,10,-1,-5,-2,-9,4,-5,-5,-4,-3,-2,3,-7,-10,10,5,-5,3,-7,7,-4,-1,3,7,6,4,-5,5,-5,-2,4,-7,4,-1,6,6,-10,-8,2,10,-7,8,-3,-3,8,5,5,-3,5,9,-9,-1,1,-1,7,2,6,-6,-5,-7,-6,-6,-6,9,10,-1,2,-9,-5,5,2,6,9,6,2,-8,-6,1,-3,1,8,-2,8,-1,-2,5,-6,-1,-4,9,-10,6,9,-8,-8,6,5,-4,1,-5,4,8,-10,4,-8,2,8,-6,5,-9,-6,-7,-5,3,-6,9,-8,-9,8,4,4,3,-4,-9,4,-10,-5,9,-7,5,3,-3,-3,-1,6,8,-3,-4,-2,8,2,-4,4,-8,8,-6,7,1,-4,2,10,-1,-1,-4,9,8,-9,-10,-10,5,2,-10,-3,-1,-5,-8,-5,10,6,-8,5,6,-10,6,-5,-7,-2,-7,8,-3,-3,8,4,3,-3,6,-8,-9,-1,6,5,2,-10,4,7,9,-2,7,8,-7,2,8,-6,-6,-3,2,8,7,2,-6,-1,-8,-3,-1,4,3,-1,-4,1,3,-4,1,-8,-2,2,-9,2,-7,2,-7,8,-2,2,-6,-8,6,-6,6,7,-6,5,-3,-5,-3,10,3,1,-7,-1,-5,-5,-1,-9,-5,-6,-7,-8,-7,3,-10,-9,3,8,2,-4,-10,-7,10,-9,-2,7,5,10,-6,9,5,9,-7,-7,-8,-3,10,9,-8,4,-5,-9,-4,-10,1,-8,-9,-4,8,5,-4,4,10,1,-4,-8,-4,7,6,-2,-1,5,1,-8,3,-5,-2,9,2,2,5,-5,6,8,-3,9,3,6,3,1,9,-3,4,-5,-1,4,-6,4,-3,4,-5,2,6,1,3,-7,9,5,1,-10,6,8,-5,4,7,5,-10,9,6,7,-4,-4,-4,6,9,-6,2,-9,-6,-4,-10,4,-8,5,-3,-5,-7,-9,8,-4,3,-3,6,1,-2,5,-6,1,-2,-5,-1,3,1,-10,-9,-5,-6,7,-10,-6,-5,-6,1,-4,6,-7,2,-6,2,-2,-2,-5,-7,2,3,10,10,9,-3,-4,2,7,-3,-7,-3,-8,-5,-3,5,8,7,6,-3,-1,-7,7,-10,5,1,10,8,7,1,6,9,-6,1,6,-8,-4,1,6,8,-5,-1,3,3,5,-3,-3,-4,-9,-2,2,-1,3,-8,5,10,6,-5,3,10,5,6,6,-9,-6,1,9,4,3,-2,-9,10,-4,-4,-6,-2,8,1,1,-10,-10,-4,-10,-2,-8,5,7,-3,-10,-7,-3,-9,10,-6,9,5,-4,10,-7,9,7,5,9,6,-6,8,-3,-2,-7,1,2,-5,6,10,-8,-1,5,10,3,-5,-8,-10,-2,-5,9,-4,3,-7,7,-4,-10,-1,-10,-1,6,4,1,-8,-4,-9,-8,-6,-4,-1,2,-5,10,-7,6,3,-4,-9,-1,-7,7,-10,10,-5,-6,-7,-2,1,10,-4,6,10,4,-4,-6,10,6,8,3,-2,2,9,4,7,8,2,-9,-3,-4,10,7,-5,9,10,-9,-2,2,4,-1,-1,2,-10,-6,6,9,1,-7,10,-10,-9,-3,-9,-2,2,-3,2,-6,8,7,-3,-1,4,-3,-3,5,3,3,-4,4,-10,-8,-4,-7,8], dtype = "int64")#candidate|2679|(768,)|const|int64
call_2678 = relay.TupleGetItem(func_1958_call(relay.reshape(const_2679.astype('int64'), [12, 8, 8])), 4)
call_2680 = relay.TupleGetItem(func_1961_call(relay.reshape(const_2679.astype('int64'), [12, 8, 8])), 4)
output = relay.Tuple([bop_2655,call_2678,const_2679,])
output2 = relay.Tuple([bop_2655,call_2680,const_2679,])
func_2686 = relay.Function([var_2649,], output)
mod['func_2686'] = func_2686
mod = relay.transform.InferType()(mod)
mutated_mod['func_2686'] = func_2686
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2687 = relay.var("var_2687", dtype = "int8", shape = (7, 12, 15))#candidate|2687|(7, 12, 15)|var|int8
func_2686_call = mutated_mod.get_global_var('func_2686')
call_2688 = func_2686_call(var_2687)
output = call_2688
func_2689 = relay.Function([var_2687], output)
mutated_mod['func_2689'] = func_2689
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2762 = relay.var("var_2762", dtype = "float32", shape = (8, 2, 2))#candidate|2762|(8, 2, 2)|var|float32
uop_2763 = relay.rsqrt(var_2762.astype('float32')) # shape=(8, 2, 2)
output = uop_2763
output2 = uop_2763
func_2766 = relay.Function([var_2762,], output)
mod['func_2766'] = func_2766
mod = relay.transform.InferType()(mod)
mutated_mod['func_2766'] = func_2766
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2767 = relay.var("var_2767", dtype = "float32", shape = (8, 2, 2))#candidate|2767|(8, 2, 2)|var|float32
func_2766_call = mutated_mod.get_global_var('func_2766')
call_2768 = func_2766_call(var_2767)
output = call_2768
func_2769 = relay.Function([var_2767], output)
mutated_mod['func_2769'] = func_2769
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2030_call = mod.get_global_var('func_2030')
func_2031_call = mutated_mod.get_global_var('func_2031')
call_2771 = func_2030_call()
call_2772 = func_2030_call()
uop_2776 = relay.sigmoid(call_2771.astype('float64')) # shape=(1, 10, 7)
uop_2778 = relay.sigmoid(call_2772.astype('float64')) # shape=(1, 10, 7)
func_2121_call = mod.get_global_var('func_2121')
func_2123_call = mutated_mod.get_global_var('func_2123')
call_2783 = func_2121_call()
call_2784 = func_2121_call()
func_2143_call = mod.get_global_var('func_2143')
func_2144_call = mutated_mod.get_global_var('func_2144')
call_2794 = relay.TupleGetItem(func_2143_call(), 0)
call_2795 = relay.TupleGetItem(func_2144_call(), 0)
func_1813_call = mod.get_global_var('func_1813')
func_1815_call = mutated_mod.get_global_var('func_1815')
call_2802 = relay.TupleGetItem(func_1813_call(), 0)
call_2803 = relay.TupleGetItem(func_1815_call(), 0)
func_1813_call = mod.get_global_var('func_1813')
func_1815_call = mutated_mod.get_global_var('func_1815')
call_2805 = relay.TupleGetItem(func_1813_call(), 0)
call_2806 = relay.TupleGetItem(func_1815_call(), 0)
func_1184_call = mod.get_global_var('func_1184')
func_1186_call = mutated_mod.get_global_var('func_1186')
call_2812 = relay.TupleGetItem(func_1184_call(), 3)
call_2813 = relay.TupleGetItem(func_1186_call(), 3)
output = relay.Tuple([uop_2776,call_2783,call_2794,call_2802,call_2805,call_2812,])
output2 = relay.Tuple([uop_2778,call_2784,call_2795,call_2803,call_2806,call_2813,])
func_2816 = relay.Function([], output)
mod['func_2816'] = func_2816
mod = relay.transform.InferType()(mod)
output = func_2816()
func_2817 = relay.Function([], output)
mutated_mod['func_2817'] = func_2817
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1813_call = mod.get_global_var('func_1813')
func_1815_call = mutated_mod.get_global_var('func_1815')
call_2821 = relay.TupleGetItem(func_1813_call(), 0)
call_2822 = relay.TupleGetItem(func_1815_call(), 0)
output = call_2821
output2 = call_2822
func_2831 = relay.Function([], output)
mod['func_2831'] = func_2831
mod = relay.transform.InferType()(mod)
mutated_mod['func_2831'] = func_2831
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2831_call = mutated_mod.get_global_var('func_2831')
call_2832 = func_2831_call()
output = call_2832
func_2833 = relay.Function([], output)
mutated_mod['func_2833'] = func_2833
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2831_call = mod.get_global_var('func_2831')
func_2833_call = mutated_mod.get_global_var('func_2833')
call_2903 = func_2831_call()
call_2904 = func_2831_call()
func_1757_call = mod.get_global_var('func_1757')
func_1759_call = mutated_mod.get_global_var('func_1759')
call_2905 = func_1757_call()
call_2906 = func_1757_call()
func_1129_call = mod.get_global_var('func_1129')
func_1131_call = mutated_mod.get_global_var('func_1131')
call_2907 = relay.TupleGetItem(func_1129_call(), 0)
call_2908 = relay.TupleGetItem(func_1131_call(), 0)
output = relay.Tuple([call_2903,call_2905,call_2907,])
output2 = relay.Tuple([call_2904,call_2906,call_2908,])
func_2913 = relay.Function([], output)
mod['func_2913'] = func_2913
mod = relay.transform.InferType()(mod)
output = func_2913()
func_2914 = relay.Function([], output)
mutated_mod['func_2914'] = func_2914
mutated_mod = relay.transform.InferType()(mutated_mod)
func_810_call = mod.get_global_var('func_810')
func_812_call = mutated_mod.get_global_var('func_812')
call_2915 = relay.TupleGetItem(func_810_call(), 0)
call_2916 = relay.TupleGetItem(func_812_call(), 0)
uop_2939 = relay.asinh(call_2915.astype('float64')) # shape=(1, 10, 7)
uop_2941 = relay.asinh(call_2916.astype('float64')) # shape=(1, 10, 7)
output = uop_2939
output2 = uop_2941
func_2953 = relay.Function([], output)
mod['func_2953'] = func_2953
mod = relay.transform.InferType()(mod)
output = func_2953()
func_2954 = relay.Function([], output)
mutated_mod['func_2954'] = func_2954
mutated_mod = relay.transform.InferType()(mutated_mod)
func_978_call = mod.get_global_var('func_978')
func_980_call = mutated_mod.get_global_var('func_980')
call_2977 = func_978_call()
call_2978 = func_978_call()
func_978_call = mod.get_global_var('func_978')
func_980_call = mutated_mod.get_global_var('func_980')
call_2990 = func_978_call()
call_2991 = func_978_call()
func_1757_call = mod.get_global_var('func_1757')
func_1759_call = mutated_mod.get_global_var('func_1759')
call_2992 = func_1757_call()
call_2993 = func_1757_call()
func_786_call = mod.get_global_var('func_786')
func_788_call = mutated_mod.get_global_var('func_788')
call_2998 = func_786_call()
call_2999 = func_786_call()
output = relay.Tuple([call_2977,call_2990,call_2992,call_2998,])
output2 = relay.Tuple([call_2978,call_2991,call_2993,call_2999,])
func_3003 = relay.Function([], output)
mod['func_3003'] = func_3003
mod = relay.transform.InferType()(mod)
output = func_3003()
func_3004 = relay.Function([], output)
mutated_mod['func_3004'] = func_3004
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2030_call = mod.get_global_var('func_2030')
func_2031_call = mutated_mod.get_global_var('func_2031')
call_3036 = func_2030_call()
call_3037 = func_2030_call()
func_2584_call = mod.get_global_var('func_2584')
func_2586_call = mutated_mod.get_global_var('func_2586')
var_3043 = relay.var("var_3043", dtype = "float64", shape = (324,))#candidate|3043|(324,)|var|float64
call_3042 = relay.TupleGetItem(func_2584_call(relay.reshape(var_3043.astype('float64'), [9, 3, 12])), 0)
call_3044 = relay.TupleGetItem(func_2586_call(relay.reshape(var_3043.astype('float64'), [9, 3, 12])), 0)
output = relay.Tuple([call_3036,call_3042,var_3043,])
output2 = relay.Tuple([call_3037,call_3044,var_3043,])
func_3049 = relay.Function([var_3043,], output)
mod['func_3049'] = func_3049
mod = relay.transform.InferType()(mod)
var_3050 = relay.var("var_3050", dtype = "float64", shape = (324,))#candidate|3050|(324,)|var|float64
output = func_3049(var_3050)
func_3051 = relay.Function([var_3050], output)
mutated_mod['func_3051'] = func_3051
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1457_call = mod.get_global_var('func_1457')
func_1458_call = mutated_mod.get_global_var('func_1458')
call_3063 = relay.TupleGetItem(func_1457_call(), 0)
call_3064 = relay.TupleGetItem(func_1458_call(), 0)
output = call_3063
output2 = call_3064
func_3067 = relay.Function([], output)
mod['func_3067'] = func_3067
mod = relay.transform.InferType()(mod)
mutated_mod['func_3067'] = func_3067
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3067_call = mutated_mod.get_global_var('func_3067')
call_3068 = func_3067_call()
output = call_3068
func_3069 = relay.Function([], output)
mutated_mod['func_3069'] = func_3069
mutated_mod = relay.transform.InferType()(mutated_mod)
func_786_call = mod.get_global_var('func_786')
func_788_call = mutated_mod.get_global_var('func_788')
call_3076 = func_786_call()
call_3077 = func_786_call()
output = call_3076
output2 = call_3077
func_3082 = relay.Function([], output)
mod['func_3082'] = func_3082
mod = relay.transform.InferType()(mod)
output = func_3082()
func_3083 = relay.Function([], output)
mutated_mod['func_3083'] = func_3083
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1184_call = mod.get_global_var('func_1184')
func_1186_call = mutated_mod.get_global_var('func_1186')
call_3084 = relay.TupleGetItem(func_1184_call(), 3)
call_3085 = relay.TupleGetItem(func_1186_call(), 3)
uop_3090 = relay.log10(call_3084.astype('float32')) # shape=(1120,)
uop_3092 = relay.log10(call_3085.astype('float32')) # shape=(1120,)
func_1757_call = mod.get_global_var('func_1757')
func_1759_call = mutated_mod.get_global_var('func_1759')
call_3093 = func_1757_call()
call_3094 = func_1757_call()
func_2030_call = mod.get_global_var('func_2030')
func_2031_call = mutated_mod.get_global_var('func_2031')
call_3103 = func_2030_call()
call_3104 = func_2030_call()
func_1725_call = mod.get_global_var('func_1725')
func_1728_call = mutated_mod.get_global_var('func_1728')
var_3107 = relay.var("var_3107", dtype = "float32", shape = (770,))#candidate|3107|(770,)|var|float32
call_3106 = relay.TupleGetItem(func_1725_call(relay.reshape(var_3107.astype('float32'), [11, 10, 7])), 2)
call_3108 = relay.TupleGetItem(func_1728_call(relay.reshape(var_3107.astype('float32'), [11, 10, 7])), 2)
output = relay.Tuple([uop_3090,call_3093,call_3103,call_3106,var_3107,])
output2 = relay.Tuple([uop_3092,call_3094,call_3104,call_3108,var_3107,])
func_3122 = relay.Function([var_3107,], output)
mod['func_3122'] = func_3122
mod = relay.transform.InferType()(mod)
mutated_mod['func_3122'] = func_3122
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3123 = relay.var("var_3123", dtype = "float32", shape = (770,))#candidate|3123|(770,)|var|float32
func_3122_call = mutated_mod.get_global_var('func_3122')
call_3124 = func_3122_call(var_3123)
output = call_3124
func_3125 = relay.Function([var_3123], output)
mutated_mod['func_3125'] = func_3125
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2345_call = mod.get_global_var('func_2345')
func_2347_call = mutated_mod.get_global_var('func_2347')
call_3152 = relay.TupleGetItem(func_2345_call(), 0)
call_3153 = relay.TupleGetItem(func_2347_call(), 0)
func_2816_call = mod.get_global_var('func_2816')
func_2817_call = mutated_mod.get_global_var('func_2817')
call_3176 = relay.TupleGetItem(func_2816_call(), 2)
call_3177 = relay.TupleGetItem(func_2817_call(), 2)
bop_3191 = relay.floor_divide(call_3176.astype('float32'), relay.reshape(call_3152.astype('float32'), relay.shape_of(call_3176))) # shape=(13, 12, 3)
bop_3194 = relay.floor_divide(call_3177.astype('float32'), relay.reshape(call_3153.astype('float32'), relay.shape_of(call_3177))) # shape=(13, 12, 3)
output = relay.Tuple([bop_3191,])
output2 = relay.Tuple([bop_3194,])
func_3216 = relay.Function([], output)
mod['func_3216'] = func_3216
mod = relay.transform.InferType()(mod)
output = func_3216()
func_3217 = relay.Function([], output)
mutated_mod['func_3217'] = func_3217
mutated_mod = relay.transform.InferType()(mutated_mod)
func_978_call = mod.get_global_var('func_978')
func_980_call = mutated_mod.get_global_var('func_980')
call_3228 = func_978_call()
call_3229 = func_978_call()
var_3242 = relay.var("var_3242", dtype = "uint8", shape = (8, 10, 7))#candidate|3242|(8, 10, 7)|var|uint8
bop_3243 = relay.equal(call_3228.astype('bool'), relay.reshape(var_3242.astype('bool'), relay.shape_of(call_3228))) # shape=(8, 10, 7)
bop_3246 = relay.equal(call_3229.astype('bool'), relay.reshape(var_3242.astype('bool'), relay.shape_of(call_3229))) # shape=(8, 10, 7)
output = bop_3243
output2 = bop_3246
func_3248 = relay.Function([var_3242,], output)
mod['func_3248'] = func_3248
mod = relay.transform.InferType()(mod)
mutated_mod['func_3248'] = func_3248
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3249 = relay.var("var_3249", dtype = "uint8", shape = (8, 10, 7))#candidate|3249|(8, 10, 7)|var|uint8
func_3248_call = mutated_mod.get_global_var('func_3248')
call_3250 = func_3248_call(var_3249)
output = call_3250
func_3251 = relay.Function([var_3249], output)
mutated_mod['func_3251'] = func_3251
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1362_call = mod.get_global_var('func_1362')
func_1363_call = mutated_mod.get_global_var('func_1363')
call_3291 = relay.TupleGetItem(func_1362_call(), 1)
call_3292 = relay.TupleGetItem(func_1363_call(), 1)
output = relay.Tuple([call_3291,])
output2 = relay.Tuple([call_3292,])
func_3313 = relay.Function([], output)
mod['func_3313'] = func_3313
mod = relay.transform.InferType()(mod)
output = func_3313()
func_3314 = relay.Function([], output)
mutated_mod['func_3314'] = func_3314
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1653_call = mod.get_global_var('func_1653')
func_1655_call = mutated_mod.get_global_var('func_1655')
call_3321 = relay.TupleGetItem(func_1653_call(), 0)
call_3322 = relay.TupleGetItem(func_1655_call(), 0)
uop_3331 = relay.acosh(call_3321.astype('float64')) # shape=(8, 10, 7)
uop_3333 = relay.acosh(call_3322.astype('float64')) # shape=(8, 10, 7)
output = relay.Tuple([uop_3331,])
output2 = relay.Tuple([uop_3333,])
func_3341 = relay.Function([], output)
mod['func_3341'] = func_3341
mod = relay.transform.InferType()(mod)
output = func_3341()
func_3342 = relay.Function([], output)
mutated_mod['func_3342'] = func_3342
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1682_call = mod.get_global_var('func_1682')
func_1684_call = mutated_mod.get_global_var('func_1684')
call_3384 = relay.TupleGetItem(func_1682_call(), 0)
call_3385 = relay.TupleGetItem(func_1684_call(), 0)
func_3067_call = mod.get_global_var('func_3067')
func_3069_call = mutated_mod.get_global_var('func_3069')
call_3443 = func_3067_call()
call_3444 = func_3067_call()
bop_3452 = relay.minimum(call_3384.astype('uint8'), relay.reshape(call_3443.astype('uint8'), relay.shape_of(call_3384))) # shape=(1, 10, 7)
bop_3455 = relay.minimum(call_3385.astype('uint8'), relay.reshape(call_3444.astype('uint8'), relay.shape_of(call_3385))) # shape=(1, 10, 7)
bop_3462 = relay.less(bop_3452.astype('bool'), relay.reshape(call_3443.astype('bool'), relay.shape_of(bop_3452))) # shape=(1, 10, 7)
bop_3465 = relay.less(bop_3455.astype('bool'), relay.reshape(call_3444.astype('bool'), relay.shape_of(bop_3455))) # shape=(1, 10, 7)
func_2686_call = mod.get_global_var('func_2686')
func_2689_call = mutated_mod.get_global_var('func_2689')
var_3467 = relay.var("var_3467", dtype = "int8", shape = (90, 14))#candidate|3467|(90, 14)|var|int8
call_3466 = relay.TupleGetItem(func_2686_call(relay.reshape(var_3467.astype('int8'), [7, 12, 15])), 1)
call_3468 = relay.TupleGetItem(func_2689_call(relay.reshape(var_3467.astype('int8'), [7, 12, 15])), 1)
output = relay.Tuple([bop_3462,call_3466,var_3467,])
output2 = relay.Tuple([bop_3465,call_3468,var_3467,])
func_3473 = relay.Function([var_3467,], output)
mod['func_3473'] = func_3473
mod = relay.transform.InferType()(mod)
mutated_mod['func_3473'] = func_3473
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3474 = relay.var("var_3474", dtype = "int8", shape = (90, 14))#candidate|3474|(90, 14)|var|int8
func_3473_call = mutated_mod.get_global_var('func_3473')
call_3475 = func_3473_call(var_3474)
output = call_3475
func_3476 = relay.Function([var_3474], output)
mutated_mod['func_3476'] = func_3476
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1682_call = mod.get_global_var('func_1682')
func_1684_call = mutated_mod.get_global_var('func_1684')
call_3501 = relay.TupleGetItem(func_1682_call(), 1)
call_3502 = relay.TupleGetItem(func_1684_call(), 1)
output = call_3501
output2 = call_3502
func_3503 = relay.Function([], output)
mod['func_3503'] = func_3503
mod = relay.transform.InferType()(mod)
mutated_mod['func_3503'] = func_3503
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3503_call = mutated_mod.get_global_var('func_3503')
call_3504 = func_3503_call()
output = call_3504
func_3505 = relay.Function([], output)
mutated_mod['func_3505'] = func_3505
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3513 = relay.var("var_3513", dtype = "float64", shape = (5, 15, 2))#candidate|3513|(5, 15, 2)|var|float64
uop_3514 = relay.atanh(var_3513.astype('float64')) # shape=(5, 15, 2)
output = uop_3514
output2 = uop_3514
func_3516 = relay.Function([var_3513,], output)
mod['func_3516'] = func_3516
mod = relay.transform.InferType()(mod)
var_3517 = relay.var("var_3517", dtype = "float64", shape = (5, 15, 2))#candidate|3517|(5, 15, 2)|var|float64
output = func_3516(var_3517)
func_3518 = relay.Function([var_3517], output)
mutated_mod['func_3518'] = func_3518
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1757_call = mod.get_global_var('func_1757')
func_1759_call = mutated_mod.get_global_var('func_1759')
call_3520 = func_1757_call()
call_3521 = func_1757_call()
var_3522 = relay.var("var_3522", dtype = "float64", shape = (2, 10, 7))#candidate|3522|(2, 10, 7)|var|float64
bop_3523 = relay.add(call_3520.astype('int8'), var_3522.astype('int8')) # shape=(2, 10, 7)
bop_3526 = relay.add(call_3521.astype('int8'), var_3522.astype('int8')) # shape=(2, 10, 7)
func_1958_call = mod.get_global_var('func_1958')
func_1961_call = mutated_mod.get_global_var('func_1961')
var_3537 = relay.var("var_3537", dtype = "int64", shape = (768,))#candidate|3537|(768,)|var|int64
call_3536 = relay.TupleGetItem(func_1958_call(relay.reshape(var_3537.astype('int64'), [12, 8, 8])), 3)
call_3538 = relay.TupleGetItem(func_1961_call(relay.reshape(var_3537.astype('int64'), [12, 8, 8])), 3)
output = relay.Tuple([bop_3523,call_3536,var_3537,])
output2 = relay.Tuple([bop_3526,call_3538,var_3537,])
func_3547 = relay.Function([var_3522,var_3537,], output)
mod['func_3547'] = func_3547
mod = relay.transform.InferType()(mod)
mutated_mod['func_3547'] = func_3547
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3547_call = mutated_mod.get_global_var('func_3547')
var_3549 = relay.var("var_3549", dtype = "float64", shape = (2, 10, 7))#candidate|3549|(2, 10, 7)|var|float64
var_3550 = relay.var("var_3550", dtype = "int64", shape = (768,))#candidate|3550|(768,)|var|int64
call_3548 = func_3547_call(var_3549,var_3550,)
output = call_3548
func_3551 = relay.Function([var_3549,var_3550,], output)
mutated_mod['func_3551'] = func_3551
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1362_call = mod.get_global_var('func_1362')
func_1363_call = mutated_mod.get_global_var('func_1363')
call_3555 = relay.TupleGetItem(func_1362_call(), 1)
call_3556 = relay.TupleGetItem(func_1363_call(), 1)
var_3558 = relay.var("var_3558", dtype = "float64", shape = (12, 10, 7))#candidate|3558|(12, 10, 7)|var|float64
bop_3559 = relay.right_shift(call_3555.astype('int8'), var_3558.astype('int8')) # shape=(12, 10, 7)
bop_3562 = relay.right_shift(call_3556.astype('int8'), var_3558.astype('int8')) # shape=(12, 10, 7)
output = bop_3559
output2 = bop_3562
func_3572 = relay.Function([var_3558,], output)
mod['func_3572'] = func_3572
mod = relay.transform.InferType()(mod)
var_3573 = relay.var("var_3573", dtype = "float64", shape = (12, 10, 7))#candidate|3573|(12, 10, 7)|var|float64
output = func_3572(var_3573)
func_3574 = relay.Function([var_3573], output)
mutated_mod['func_3574'] = func_3574
mutated_mod = relay.transform.InferType()(mutated_mod)
func_978_call = mod.get_global_var('func_978')
func_980_call = mutated_mod.get_global_var('func_980')
call_3591 = func_978_call()
call_3592 = func_978_call()
func_2121_call = mod.get_global_var('func_2121')
func_2123_call = mutated_mod.get_global_var('func_2123')
call_3594 = func_2121_call()
call_3595 = func_2121_call()
output = relay.Tuple([call_3591,call_3594,])
output2 = relay.Tuple([call_3592,call_3595,])
func_3603 = relay.Function([], output)
mod['func_3603'] = func_3603
mod = relay.transform.InferType()(mod)
mutated_mod['func_3603'] = func_3603
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3603_call = mutated_mod.get_global_var('func_3603')
call_3604 = func_3603_call()
output = call_3604
func_3605 = relay.Function([], output)
mutated_mod['func_3605'] = func_3605
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1457_call = mod.get_global_var('func_1457')
func_1458_call = mutated_mod.get_global_var('func_1458')
call_3611 = relay.TupleGetItem(func_1457_call(), 0)
call_3612 = relay.TupleGetItem(func_1458_call(), 0)
output = relay.Tuple([call_3611,])
output2 = relay.Tuple([call_3612,])
func_3615 = relay.Function([], output)
mod['func_3615'] = func_3615
mod = relay.transform.InferType()(mod)
mutated_mod['func_3615'] = func_3615
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3615_call = mutated_mod.get_global_var('func_3615')
call_3616 = func_3615_call()
output = call_3616
func_3617 = relay.Function([], output)
mutated_mod['func_3617'] = func_3617
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1757_call = mod.get_global_var('func_1757')
func_1759_call = mutated_mod.get_global_var('func_1759')
call_3634 = func_1757_call()
call_3635 = func_1757_call()
output = relay.Tuple([call_3634,])
output2 = relay.Tuple([call_3635,])
func_3683 = relay.Function([], output)
mod['func_3683'] = func_3683
mod = relay.transform.InferType()(mod)
mutated_mod['func_3683'] = func_3683
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3683_call = mutated_mod.get_global_var('func_3683')
call_3684 = func_3683_call()
output = call_3684
func_3685 = relay.Function([], output)
mutated_mod['func_3685'] = func_3685
mutated_mod = relay.transform.InferType()(mutated_mod)
func_978_call = mod.get_global_var('func_978')
func_980_call = mutated_mod.get_global_var('func_980')
call_3704 = func_978_call()
call_3705 = func_978_call()
output = relay.Tuple([call_3704,])
output2 = relay.Tuple([call_3705,])
func_3720 = relay.Function([], output)
mod['func_3720'] = func_3720
mod = relay.transform.InferType()(mod)
mutated_mod['func_3720'] = func_3720
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3720_call = mutated_mod.get_global_var('func_3720')
call_3721 = func_3720_call()
output = call_3721
func_3722 = relay.Function([], output)
mutated_mod['func_3722'] = func_3722
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2121_call = mod.get_global_var('func_2121')
func_2123_call = mutated_mod.get_global_var('func_2123')
call_3791 = func_2121_call()
call_3792 = func_2121_call()
output = relay.Tuple([call_3791,])
output2 = relay.Tuple([call_3792,])
func_3796 = relay.Function([], output)
mod['func_3796'] = func_3796
mod = relay.transform.InferType()(mod)
mutated_mod['func_3796'] = func_3796
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3796_call = mutated_mod.get_global_var('func_3796')
call_3797 = func_3796_call()
output = call_3797
func_3798 = relay.Function([], output)
mutated_mod['func_3798'] = func_3798
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3067_call = mod.get_global_var('func_3067')
func_3069_call = mutated_mod.get_global_var('func_3069')
call_3821 = func_3067_call()
call_3822 = func_3067_call()
func_1958_call = mod.get_global_var('func_1958')
func_1961_call = mutated_mod.get_global_var('func_1961')
var_3825 = relay.var("var_3825", dtype = "int64", shape = (768,))#candidate|3825|(768,)|var|int64
call_3824 = relay.TupleGetItem(func_1958_call(relay.reshape(var_3825.astype('int64'), [12, 8, 8])), 5)
call_3826 = relay.TupleGetItem(func_1961_call(relay.reshape(var_3825.astype('int64'), [12, 8, 8])), 5)
output = relay.Tuple([call_3821,call_3824,var_3825,])
output2 = relay.Tuple([call_3822,call_3826,var_3825,])
func_3831 = relay.Function([var_3825,], output)
mod['func_3831'] = func_3831
mod = relay.transform.InferType()(mod)
var_3832 = relay.var("var_3832", dtype = "int64", shape = (768,))#candidate|3832|(768,)|var|int64
output = func_3831(var_3832)
func_3833 = relay.Function([var_3832], output)
mutated_mod['func_3833'] = func_3833
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3877 = relay.const([[[9.697117,-1.918527,3.438927,-0.022830,-4.433995,-8.255958,-9.869042,2.699570,8.992591,-2.357357,6.090003,-0.825137],[-9.624867,-1.746201,-6.800924,1.045697,-7.968055,-5.812773,-6.485317,-6.050118,-1.315520,2.112489,9.482631,0.437823],[6.284299,1.169050,-5.459087,3.207923,3.268263,3.908334,-9.632829,2.199890,-2.156135,-1.231985,1.357602,-8.504391],[-7.714294,-7.390490,-4.696984,-3.800501,6.962367,-2.572272,-6.786431,3.601821,4.390041,4.029446,2.809990,-3.398315],[-2.292108,8.291351,-4.667292,-3.365743,4.669686,-5.799123,-7.721968,3.061729,-1.283408,7.595760,-6.612384,5.524345],[9.490085,4.055013,3.801239,5.260859,-6.508732,5.944154,-8.339379,1.153358,2.882378,9.630652,2.381616,3.592746],[-3.013917,-8.089672,1.520469,-3.852090,-2.986449,-5.700411,-8.624243,4.328245,-9.238524,7.758673,-2.626961,-2.935344],[-3.120198,2.779697,0.109609,-5.067981,6.061979,-5.392127,-9.036751,-6.659085,-5.093950,-4.690817,-6.399772,4.507582],[8.275789,3.422456,-8.571603,8.078153,1.463177,-9.980568,4.852898,-3.117350,7.032952,-5.936100,4.131827,-4.691910],[4.738442,-3.709001,-6.763982,-8.749622,-9.271681,-9.518847,2.259210,-3.221902,-7.808748,1.623314,2.377637,2.552456],[-8.149798,-9.176893,-5.324079,2.209420,7.913763,4.602603,-3.389836,0.085619,9.966898,4.922805,0.232074,4.447731]],[[-8.445057,-1.992810,-3.525650,-9.449943,6.496781,-1.680088,8.992923,4.241769,-9.922492,-6.730451,-2.765370,1.681080],[6.290655,-6.686704,-0.418327,4.329768,0.647438,-3.735936,4.423110,-9.674403,7.764303,-6.339448,9.896020,-5.104851],[-1.690219,-3.712306,-2.978413,-0.910401,-0.329453,0.998525,-6.132772,7.000368,-0.597188,2.113239,-3.605867,-3.190432],[-2.961388,-6.742970,-5.610070,4.465588,2.138799,4.876717,-9.994849,-3.387705,-1.856335,4.376479,-0.214193,-0.194715],[1.754662,-7.988102,-2.078886,4.265139,8.948029,-9.309554,-2.076560,-6.544181,2.544392,-4.211501,8.876296,-9.056485],[-7.108787,-4.834018,-1.233242,5.602529,-3.507914,9.585270,-2.097341,6.153370,-5.320679,5.177643,-9.920394,-3.295333],[0.738635,9.074927,4.950928,-7.309748,7.127191,-4.775997,-3.262247,7.343441,1.707421,8.706852,-6.790909,1.311941],[-7.537892,9.101682,-1.442000,-0.018189,-6.412784,-7.721362,4.063456,1.300846,9.187479,-3.252179,8.070988,-1.162860],[-5.916754,-7.866549,1.531547,7.142158,-5.129697,-7.730401,-4.540712,-0.233463,-7.449545,1.582502,-5.273142,-5.568222],[-7.097736,7.879487,7.304393,6.407372,3.560680,-7.283649,5.181753,-5.359908,-9.368650,8.533783,5.203775,-2.280074],[-7.123089,4.956062,-9.619638,8.627217,-4.888814,0.497770,-3.602252,3.812672,-8.253009,-8.383775,4.108190,-5.693285]],[[5.501465,-3.005837,2.501758,-5.349577,-7.766514,-3.303906,-1.977736,-8.152108,-5.603010,-3.349115,-9.274795,-7.046931],[9.787328,-4.590339,5.696940,-8.910105,-8.583268,2.276872,3.107345,-2.492390,5.439428,8.800461,-1.973069,-4.624323],[9.691492,5.720223,-9.147171,-2.319603,3.239803,-5.301216,8.250978,3.318111,-8.783485,-4.436866,3.915682,9.638463],[3.981726,-9.988711,-1.236058,0.802869,5.902155,0.326802,-2.969979,0.332514,2.231630,8.427815,-9.582395,-2.113572],[5.756406,9.330411,4.416610,-0.349340,2.951302,-2.522068,3.655113,2.094462,3.736435,1.854521,-5.185940,5.357274],[-4.289204,2.415553,1.852458,2.906247,-8.406976,8.048485,-8.611291,-3.856227,-0.429872,0.410020,-2.916395,-5.930567],[-3.399406,-0.694989,-9.426416,-7.869659,-7.680173,-7.022670,2.969590,-2.493098,-7.510823,-2.185285,5.877263,-9.348270],[5.988905,-0.606666,-0.530024,4.460104,-8.030422,2.331873,4.331647,8.391508,8.282987,-8.789610,-6.925739,-1.027890],[-7.851479,9.831010,-5.324197,-4.191220,4.466322,9.194761,3.516054,-5.291938,-3.908956,5.960118,0.270327,7.125466],[-3.177934,-3.649617,7.234441,3.099060,8.710501,3.951982,-2.934735,2.367552,-7.334978,4.215206,-5.160980,4.184032],[6.448438,-4.627430,-4.695813,-4.670708,5.558273,4.942115,2.632544,3.399324,4.830921,-1.038443,-1.985968,0.957773]]], dtype = "float32")#candidate|3877|(3, 11, 12)|const|float32
uop_3878 = relay.log(const_3877.astype('float32')) # shape=(3, 11, 12)
const_3912 = relay.const([[[-0.041122,4.135338,-2.634863,-8.192184,9.947829,-2.325364,6.651096,-3.924815,8.180738,1.852856,-1.758946,-6.783094],[-0.508217,-8.702524,-7.418039,1.414442,8.774985,5.451957,2.001732,5.613312,-2.521886,1.829196,0.125777,-2.418585],[8.491452,-9.165897,-2.863178,8.230490,1.283702,-2.033974,3.188071,-2.631514,-2.882148,-0.410808,4.711950,-8.305481],[-9.144974,4.107639,4.072329,-6.142050,-8.097864,-1.748530,9.372887,7.262013,8.926176,-4.861536,0.674995,8.429970],[-1.541600,7.919316,-0.716932,1.855999,-8.081462,-2.877107,2.952704,-9.935446,2.280041,-3.456485,-0.316898,8.594582],[6.252300,-6.267978,-5.006181,-1.921711,-2.846738,-0.828748,-2.519667,3.652441,8.211741,-2.938158,-7.325062,-0.955678],[-8.437307,-0.505757,-3.458420,-2.445576,3.760383,7.465742,2.779563,-1.559232,4.274849,-8.398102,-1.771838,-6.735418],[1.088244,-1.385788,9.790368,2.118101,0.329493,-8.284897,3.144655,1.017715,-6.406180,-8.964020,4.726243,5.921691],[5.340427,-3.828490,8.853319,6.440961,0.717350,-3.066582,-2.043209,-3.737451,5.353519,-3.701103,-0.183595,3.765884],[-6.230559,-0.227441,-4.302324,-6.986077,2.462475,9.928730,-9.523032,8.359878,6.318516,-5.825632,9.818798,7.566790],[-7.626653,2.924494,-8.578438,1.714997,-1.151970,-4.165342,6.973407,-8.341791,2.738188,2.124488,9.596806,8.080637]],[[-2.827687,-7.338659,0.186604,-1.134792,9.795869,-6.562727,-2.280674,-9.647487,4.553418,5.246451,-3.506849,5.249888],[6.948814,4.394203,8.869059,1.278322,-3.493768,7.780560,-1.214774,1.147448,1.992850,1.699071,9.959305,-9.618383],[-2.900967,0.302253,1.277398,-6.791464,4.668682,4.099145,-1.304113,-9.089449,5.677109,-4.702724,3.610653,6.143156],[3.794010,-0.939066,2.384921,8.218482,-4.224723,-7.577639,1.513827,2.800400,-1.896954,2.251720,9.590843,8.054475],[9.928620,-8.698243,-3.775369,8.799265,-6.790215,-0.785011,-9.940289,8.740161,8.456029,9.148344,-7.573467,6.145907],[1.639888,-1.482625,1.674696,4.254537,1.765400,5.358698,-6.276736,-9.540903,2.995094,-8.842828,-2.887167,-7.386769],[2.388197,9.414107,-6.216929,-0.395739,5.017632,6.403903,-5.325461,-3.185482,-0.199219,5.551666,-3.351509,-4.306090],[1.207724,-6.290141,-7.728771,1.832884,-4.233857,-5.718060,3.560435,-0.960829,5.475549,8.534902,9.974525,9.069811],[-3.216072,-0.076242,-9.079744,-7.094727,9.913841,-4.447008,8.292415,2.955515,-9.781478,1.788672,-8.743914,-1.605847],[2.294506,8.008886,8.532818,-0.492650,-0.994932,4.503883,7.854416,-9.655120,-9.161138,1.106932,-5.789955,1.362790],[-9.614101,-9.353504,-9.678857,-6.792276,7.417232,-8.683835,-2.533741,-3.092257,3.309869,-3.476810,5.222295,8.551420]],[[2.813792,0.205145,2.797030,-9.639513,3.283808,-2.852056,4.435606,4.809126,2.788379,-1.233468,8.714628,-3.256749],[-0.422828,8.833933,9.794904,5.324573,3.916796,-1.484591,5.472139,-8.725387,3.896745,-4.693298,2.286682,4.654917],[-3.006418,2.631715,-6.483345,-7.575260,-2.102360,-2.839515,9.385571,-6.707312,1.477738,8.623842,5.108852,4.302138],[6.793633,9.538948,-6.015579,4.548919,-7.687390,-9.428331,-7.684833,1.613881,-8.886744,-3.374136,4.915116,6.541943],[9.310834,8.401305,-6.238821,0.101414,8.730221,7.138261,-5.709940,-6.521900,8.305861,1.649531,1.409364,-3.548984],[5.575419,7.246371,4.986316,8.340768,-7.575297,0.213411,1.920124,-5.893115,6.697548,-0.718632,-7.878999,8.736252],[6.844633,2.112249,5.795349,3.431335,-0.679640,-1.152949,8.393496,-1.253407,-9.566077,-9.772460,-1.778373,-8.963352],[-3.069201,2.350930,2.697965,-9.644529,-9.327123,-8.818419,5.352167,-4.091125,-4.369076,8.744963,-2.027760,2.326622],[0.030632,-5.367487,-4.701339,-5.842196,-0.978442,9.377333,-1.450693,-4.266629,3.406870,-4.038964,-6.308144,-2.725507],[8.883203,-1.580586,1.265708,8.331654,-0.319295,4.057418,-7.813287,8.450892,0.346342,8.368691,8.989386,-9.664690],[-2.508169,0.987645,6.142718,2.383450,-3.982165,-0.673956,-6.058220,-4.799207,-2.680337,9.335356,4.618404,5.535876]]], dtype = "float32")#candidate|3912|(3, 11, 12)|const|float32
bop_3913 = relay.right_shift(uop_3878.astype('uint16'), relay.reshape(const_3912.astype('uint16'), relay.shape_of(uop_3878))) # shape=(3, 11, 12)
output = bop_3913
output2 = bop_3913
func_3924 = relay.Function([], output)
mod['func_3924'] = func_3924
mod = relay.transform.InferType()(mod)
output = func_3924()
func_3925 = relay.Function([], output)
mutated_mod['func_3925'] = func_3925
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3796_call = mod.get_global_var('func_3796')
func_3798_call = mutated_mod.get_global_var('func_3798')
call_3932 = relay.TupleGetItem(func_3796_call(), 0)
call_3933 = relay.TupleGetItem(func_3798_call(), 0)
output = relay.Tuple([call_3932,])
output2 = relay.Tuple([call_3933,])
func_3940 = relay.Function([], output)
mod['func_3940'] = func_3940
mod = relay.transform.InferType()(mod)
output = func_3940()
func_3941 = relay.Function([], output)
mutated_mod['func_3941'] = func_3941
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3216_call = mod.get_global_var('func_3216')
func_3217_call = mutated_mod.get_global_var('func_3217')
call_3988 = relay.TupleGetItem(func_3216_call(), 0)
call_3989 = relay.TupleGetItem(func_3217_call(), 0)
func_2121_call = mod.get_global_var('func_2121')
func_2123_call = mutated_mod.get_global_var('func_2123')
call_3990 = func_2121_call()
call_3991 = func_2121_call()
func_3216_call = mod.get_global_var('func_3216')
func_3217_call = mutated_mod.get_global_var('func_3217')
call_3993 = relay.TupleGetItem(func_3216_call(), 0)
call_3994 = relay.TupleGetItem(func_3217_call(), 0)
func_3796_call = mod.get_global_var('func_3796')
func_3798_call = mutated_mod.get_global_var('func_3798')
call_3997 = relay.TupleGetItem(func_3796_call(), 0)
call_3998 = relay.TupleGetItem(func_3798_call(), 0)
output = relay.Tuple([call_3988,call_3990,call_3993,call_3997,])
output2 = relay.Tuple([call_3989,call_3991,call_3994,call_3998,])
func_3999 = relay.Function([], output)
mod['func_3999'] = func_3999
mod = relay.transform.InferType()(mod)
mutated_mod['func_3999'] = func_3999
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3999_call = mutated_mod.get_global_var('func_3999')
call_4000 = func_3999_call()
output = call_4000
func_4001 = relay.Function([], output)
mutated_mod['func_4001'] = func_4001
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3940_call = mod.get_global_var('func_3940')
func_3941_call = mutated_mod.get_global_var('func_3941')
call_4008 = relay.TupleGetItem(func_3940_call(), 0)
call_4009 = relay.TupleGetItem(func_3941_call(), 0)
output = relay.Tuple([call_4008,])
output2 = relay.Tuple([call_4009,])
func_4012 = relay.Function([], output)
mod['func_4012'] = func_4012
mod = relay.transform.InferType()(mod)
mutated_mod['func_4012'] = func_4012
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4012_call = mutated_mod.get_global_var('func_4012')
call_4013 = func_4012_call()
output = call_4013
func_4014 = relay.Function([], output)
mutated_mod['func_4014'] = func_4014
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3940_call = mod.get_global_var('func_3940')
func_3941_call = mutated_mod.get_global_var('func_3941')
call_4130 = relay.TupleGetItem(func_3940_call(), 0)
call_4131 = relay.TupleGetItem(func_3941_call(), 0)
output = relay.Tuple([call_4130,])
output2 = relay.Tuple([call_4131,])
func_4139 = relay.Function([], output)
mod['func_4139'] = func_4139
mod = relay.transform.InferType()(mod)
output = func_4139()
func_4140 = relay.Function([], output)
mutated_mod['func_4140'] = func_4140
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2030_call = mod.get_global_var('func_2030')
func_2031_call = mutated_mod.get_global_var('func_2031')
call_4174 = func_2030_call()
call_4175 = func_2030_call()
func_3473_call = mod.get_global_var('func_3473')
func_3476_call = mutated_mod.get_global_var('func_3476')
const_4177 = relay.const([-1,6,-10,9,-7,5,7,-3,7,2,6,3,-2,7,2,-8,-2,5,5,-2,-10,-8,8,-9,-7,-4,10,-2,-6,2,4,-10,-6,8,8,6,6,-4,-7,9,4,9,-3,-8,2,8,10,2,-3,-9,-4,-9,-1,5,4,6,-9,1,5,-2,9,-5,-8,-7,1,1,1,6,-3,-3,-6,4,-1,-9,4,7,1,-2,-3,1,-5,9,-2,-9,7,1,-1,1,10,2,3,-9,3,5,-2,-8,-1,-4,-2,-10,-7,2,-6,9,5,1,-1,2,4,8,6,-5,-4,9,-2,-7,-10,6,-4,-1,6,-6,-4,9,-8,6,-4,10,-7,-6,-10,9,-3,-5,10,5,1,3,2,5,-10,5,-9,-3,-7,-7,-1,-6,-1,-3,-8,7,10,5,3,-3,9,8,-4,-6,2,-6,10,-9,-5,-2,-9,-2,-10,-2,-7,5,-2,3,5,-4,3,-10,-4,-5,-1,1,5,-10,10,-7,8,2,4,5,7,6,3,-4,-7,7,-6,-10,2,6,-6,1,-5,-4,-10,-10,-10,8,6,-10,3,-3,-6,9,-4,1,8,-4,7,-1,6,-6,10,8,10,-9,7,-9,4,10,3,-8,7,1,7,-3,-3,-9,-4,9,7,4,-7,-7,-1,8,10,4,-5,1,8,5,2,-6,-3,10,-2,-3,9,1,7,-7,-5,-6,7,4,-3,9,-5,6,2,7,2,5,10,-5,-7,-7,3,-5,-3,8,-10,-5,-3,-10,-7,-1,6,4,5,-6,2,-5,7,7,-10,7,-1,-2,3,1,8,-1,-1,-4,-2,7,4,-1,5,-2,-1,3,-3,-6,9,-8,-1,-5,2,7,10,10,-9,6,8,-6,-8,1,-6,-8,8,1,-5,-2,-6,2,4,-1,-4,-6,2,3,1,-1,-3,-1,7,10,10,10,2,1,6,10,8,4,8,-2,-3,7,6,-7,-3,6,1,-9,-9,-9,-4,-7,-7,-4,10,3,9,-9,9,7,-3,5,-10,-6,-9,-4,-6,-5,1,7,3,5,1,8,-8,-1,-9,-6,5,6,7,-6,10,-5,1,4,-1,8,3,-1,3,3,-2,-1,-10,-8,-8,9,6,-10,-5,2,5,7,10,-10,-2,2,-3,1,-1,-8,5,-6,-3,-9,3,4,5,-6,1,-5,1,9,2,5,2,10,-3,10,5,4,-5,3,-2,-5,5,8,-1,9,-8,9,-10,-7,7,10,-9,7,-3,-5,1,7,-4,-3,-1,-10,-7,-9,8,-1,-5,7,5,9,-6,4,6,5,-6,5,-9,8,-4,2,-5,6,-5,-4,-9,-10,-9,2,6,3,6,-1,5,-10,6,-2,8,-1,-3,5,9,-4,-10,2,-6,7,-7,6,8,10,1,-7,1,3,-2,-3,2,1,-6,7,10,-3,-4,8,8,-8,-3,9,10,6,-8,6,8,3,10,5,4,8,10,2,7,8,-2,4,9,-7,-8,-9,10,-10,2,4,-7,5,-2,7,4,1,-2,-1,4,-8,-3,-1,-8,7,8,5,-6,5,7,9,-7,9,-5,10,10,-4,-4,-8,-5,2,8,9,10,-2,-5,-8,3,-10,8,8,8,3,-6,-6,-7,2,-8,9,-4,2,-4,-10,8,5,-9,-5,4,1,-2,1,-5,-7,4,2,-9,-9,-5,-9,-10,10,-7,8,-7,-3,6,-8,-7,-6,3,2,2,-4,-10,-3,-7,-10,10,-8,-9,-7,5,5,-2,-4,1,-4,5,2,-3,8,10,6,7,8,-5,10,10,-3,-8,-5,2,4,1,5,-2,4,10,-1,-6,-3,-2,2,-10,-4,1,-9,-1,2,-10,-6,1,-4,3,-10,-4,1,-7,10,7,8,-5,3,-10,10,4,-4,-9,6,2,1,10,-4,3,4,7,-2,-1,-8,1,-2,-5,10,3,-4,-1,-2,4,-7,9,-1,-5,9,-9,6,-7,5,-3,4,10,-2,2,1,2,-5,1,-7,8,-10,-7,6,-5,5,-5,-5,-8,7,10,8,-6,-3,10,3,10,-6,10,-10,-3,2,-6,5,3,-4,10,5,6,4,9,-3,-1,-3,-10,-5,-10,3,5,7,-9,-2,-4,6,-4,5,6,-2,6,-7,10,1,2,-5,-1,-4,5,1,5,-1,-8,2,-6,-2,-2,1,2,2,-8,-10,1,-1,-1,10,-2,5,-7,5,-3,-8,-7,-7,-2,2,7,-9,5,7,-2,2,-7,-5,3,-10,6,-1,6,1,-8,8,-4,-4,-4,-5,-7,2,3,10,7,2,7,-8,1,1,-4,-3,-3,-7,1,7,10,-1,7,9,-1,-1,2,1,3,-3,10,-5,-4,-2,-8,-2,-10,-1,6,3,9,-6,-5,6,-9,-7,4,4,6,-4,6,-3,3,-3,2,-8,2,-5,3,7,10,-10,5,6,-1,8,-8,-4,-4,10,5,-8,4,-5,7,-8,7,-3,4,-6,10,2,4,9,-3,6,8,4,-9,8,3,3,8,4,3,-6,-5,-1,4,-9,-8,2,10,10,7,3,6,1,2,-5,-9,-10,-1,7,10,2,-2,-7,-2,-10,-5,-10,1,-6,-1,9,-3,-6,9,-2,9,10,8,-2,4,-1,4,-1,-5,7,-9,-5,5,-9,-5,7,4,-5,-5,-5,8,-8,-7,7,-8,-9,-1,9,8,-2,8,-6,7,5,8,-10,5,-9,1,-8,2,-5,-2,1,-4,-4,2,-5,3,10,-1,8,-10,-10,-4,-9,-4,1,9,-9,-7,-7,4,8,3,9,-8,-8,3,-9,-6,3,-1,9,8,-4,10,-4,5,-2,-9,10,7,8,-8,8,3,6,-6,5,1,-9,-3,7,-6,-6,-1,4,6,9,9,10,9,-8,-10,-10,-4,-6,-3,-9,-2,-8,1,1,4,-5,-9,4,2,-2,-5,-7,-1,-10,-4,5,-3,-8,-5,-4,-3,1,-6,8,7,2,2,2,10,10,-10,3,8,-8,4,-1,2,7,-6,-6,6,-4,-7,2,8,-5,-6,2,10,6,-3,-1,8,-5,-2,9,10,6,10,7,9,6,10,9,7,4,-4,-7,2,9,4,9,1,-3,3,-9,-10,8,-3,10,6,-2,-10,3,4,5,1,-3,-1,-3,4,7,-7,6,5,1,-3,-2,-3,-4,-8,-4,2,1,-4,8,-6,-2,3,2,5,1,-6,10,7,-6,-2,6,-10,9,-3,1,-3,2,-2,-6,-8,4,8,-3,7,-2,4,3,4,9,9,7,-5,-10,5,-4,2,7,4,-7,-3,-2,-6,2,-8,-7,1,1,-5,2,8,3,6,10,-9,-4,3,-1,2,-8,4,-9], dtype = "int8")#candidate|4177|(1260,)|const|int8
call_4176 = relay.TupleGetItem(func_3473_call(relay.reshape(const_4177.astype('int8'), [90, 14])), 0)
call_4178 = relay.TupleGetItem(func_3476_call(relay.reshape(const_4177.astype('int8'), [90, 14])), 0)
func_3503_call = mod.get_global_var('func_3503')
func_3505_call = mutated_mod.get_global_var('func_3505')
call_4182 = func_3503_call()
call_4183 = func_3503_call()
func_3572_call = mod.get_global_var('func_3572')
func_3574_call = mutated_mod.get_global_var('func_3574')
var_4187 = relay.var("var_4187", dtype = "float64", shape = (60, 14))#candidate|4187|(60, 14)|var|float64
call_4186 = func_3572_call(relay.reshape(var_4187.astype('float64'), [12, 10, 7]))
call_4188 = func_3572_call(relay.reshape(var_4187.astype('float64'), [12, 10, 7]))
func_3473_call = mod.get_global_var('func_3473')
func_3476_call = mutated_mod.get_global_var('func_3476')
call_4189 = relay.TupleGetItem(func_3473_call(relay.reshape(const_4177.astype('int8'), [90, 14])), 1)
call_4190 = relay.TupleGetItem(func_3476_call(relay.reshape(const_4177.astype('int8'), [90, 14])), 1)
func_3003_call = mod.get_global_var('func_3003')
func_3004_call = mutated_mod.get_global_var('func_3004')
call_4193 = relay.TupleGetItem(func_3003_call(), 1)
call_4194 = relay.TupleGetItem(func_3004_call(), 1)
func_978_call = mod.get_global_var('func_978')
func_980_call = mutated_mod.get_global_var('func_980')
call_4207 = func_978_call()
call_4208 = func_978_call()
output = relay.Tuple([call_4174,call_4176,const_4177,call_4182,call_4186,var_4187,call_4189,call_4193,call_4207,])
output2 = relay.Tuple([call_4175,call_4178,const_4177,call_4183,call_4188,var_4187,call_4190,call_4194,call_4208,])
func_4210 = relay.Function([var_4187,], output)
mod['func_4210'] = func_4210
mod = relay.transform.InferType()(mod)
var_4211 = relay.var("var_4211", dtype = "float64", shape = (60, 14))#candidate|4211|(60, 14)|var|float64
output = func_4210(var_4211)
func_4212 = relay.Function([var_4211], output)
mutated_mod['func_4212'] = func_4212
mutated_mod = relay.transform.InferType()(mutated_mod)
func_786_call = mod.get_global_var('func_786')
func_788_call = mutated_mod.get_global_var('func_788')
call_4259 = func_786_call()
call_4260 = func_786_call()
func_893_call = mod.get_global_var('func_893')
func_896_call = mutated_mod.get_global_var('func_896')
const_4286 = relay.const([5.092573,-0.378621,9.514428,5.256065,-7.549248,-6.895103,-5.282214,6.408027,8.621591,8.452330,-0.992060,8.668728,2.140630,1.982914,8.243519,-9.156010,9.675406,-1.601887,8.283360,4.311041,1.729675,-8.029019,-3.005857,4.658987,-2.055891,5.842261,0.077708,-3.403843,-8.083506,-4.627899,8.380382,-7.751284,7.108629,3.140089,-8.939932,-6.204508,-0.333953,2.786202,-7.944642,0.552796,-7.772506,-3.552374,5.413632,-0.021415,-7.969050,1.269905,-9.563372,8.845852,1.712044,-4.886919,2.542252,9.540541,7.672783,-2.105467,5.540436,-3.203968,-0.949970,4.344826,-9.934504,0.906748,-9.072314,-8.949500,-7.919160,-4.269967,-8.375425,-7.475521,6.956600,-1.671134,-0.629302,7.864802,-4.150639,6.884416,-3.730458,-3.031057,4.085280,0.733815,2.533797,-2.530167,1.517424,7.076862,1.434023,8.205348,3.973101,0.701177,7.976715,7.830859,7.451976,-7.828411,1.869006,-4.758735,9.567944,1.221035,0.824148,-9.817797,-8.297304,-4.845892,0.372203,0.153000,3.073954,7.873029,2.477087,-2.623904,0.780251,-1.117659,-9.250184,2.900019,-4.466961,-2.165708,-0.905308,1.110145,-4.603883,-8.541568,0.009035,-4.857844,1.723703,9.453891,-1.515771,6.353278,4.282421,-8.585119,-5.627208,0.786814,-2.061569,-8.700401,-3.165888,-7.633767,6.539311,9.747778,-0.794232,-7.161011,8.588285,-8.812908,2.557782,1.107821,0.588667,-0.263359,-9.372889,-3.518176,7.952113,5.013153,-7.024552,-5.595202,8.873784,2.442223,9.240330,6.806481,2.962886,-8.962245,0.230134,6.235527,-2.854885,-1.081323,3.831166,4.384585,1.919756,6.194906,-2.786731,0.436848,3.716445,6.511262,-3.336225,7.063940,-2.486250,8.531838,7.200112,-5.229390,-6.367167,-2.559210,-8.747178,0.717181,4.094887,0.770102,-8.090652,6.693286,6.420891,9.038816,5.172930,-9.777628,-6.361391,4.995008,-3.198629,6.458594,-2.912591,2.309791,-4.559025,-7.373158,0.117519,1.734368,-2.602178,8.457397,-8.432424,-7.526627,5.775327,2.933347,-4.666208,0.835856,5.138313,2.144271,0.387407,-3.081721,1.972806,1.023837,-4.343197,2.456235,7.751520,7.684626,8.514124,3.496156,-7.010944,-4.907059,6.938953,4.119225,8.258598,-0.649451,7.347639,-2.735673,8.849940,9.230511,-9.606212,-7.122670,4.168485,8.914838,1.470305,5.560662,-8.577012,-5.030867,-8.287957,-9.644183,9.438543,-9.834059,2.414611,6.547840,-2.526447,-7.700745,9.767173,-1.147371,-0.136847,9.957663,-3.057509,7.537051,7.112500,-4.715349,-6.349982,6.001417,9.815484,-1.594177,-7.118860,9.395612,0.466490,9.128716,-4.980238,4.206860,-4.859041,8.096021,-9.629918,2.293233,-2.898588,8.176514,-0.363811,-7.637849,-4.076137,-2.817671,9.634994,1.979949,0.170652,9.666363,-9.789176,3.119948,-7.025454,7.596123,3.139466,-6.988263,-9.001740,-6.832842,-0.029792,-4.643056,-2.607815,3.232316,-2.158376,-6.803125,7.321115,3.222570,-6.060868,-3.339975,8.382607,5.065315,-8.697042,6.761780,6.555493,4.961291,-5.109697,-5.540103,-6.418907,-1.646597,-6.708721,0.362041,2.143037,9.874552,3.845923,-5.971197,4.751751,1.535378,9.740027,-7.787864,0.794671,-9.921695,6.614204,-3.742639,-6.959533,-6.763455,9.538395,-0.474771,0.707194,-4.863599,-2.283142,9.034534,2.783461,7.851806,6.456106,7.914543,-1.800653,6.845430,5.745710,0.461175,-8.870993,-2.011995,1.991684,-5.327410,2.336091,8.296040,7.919659,8.612947,-3.451103,4.063967,4.634715,-0.158412,-3.602541,4.067735,0.700859,4.355452,6.087782,6.185804,0.947963,6.936127,-5.686807,-4.530959,2.563004,-8.830717,-0.156124,-7.031819,8.766387,0.363354,-1.980537,3.087569,-7.488116,6.435853,-5.982682,-4.876874,2.566617,-2.610393,2.328337,8.704279,4.467926,-8.973948,-2.914499,7.729681,4.998693,9.922648,6.803388,5.943057,-6.530428,6.153065,1.902476,-6.844506,0.310345,-5.211595,3.449904,-0.071304,-2.605070,-3.782041,9.021671,-2.656764,4.206079,-8.752545,-7.770609,-2.152798,-0.102120,3.027620,2.948452,-9.196008,6.342957,1.175284,9.731535,4.240567,-6.526432,-8.607007,8.857369,-8.980342,-3.080022,3.076490,-9.391143,7.557178,-9.168501,-2.186857,-5.678172,-0.478987,-8.588635,-3.875310,9.570877,5.795736,-6.338061,5.148299,-4.471067,-2.786732,-3.219758,5.782408,8.639486,-2.621912,1.774390,5.992485,2.538093,4.094624,-8.691085,7.200435,5.169487,0.411690,-6.531690,0.863945,5.418414,-9.136753,-3.194995,-9.961226,-1.175398,6.865415,-0.325475,-1.450862,-7.162811,8.984289,2.868292,6.959684,4.140376,-0.035652,2.365128,-3.965377,7.945544,0.033180,-3.965428,9.788458,-0.064570,-1.133228,-0.629781,-7.297488,2.472624,2.890755,6.991467,6.667981,0.835082,-1.305286,-4.468644,8.840843,3.674212,5.841899,4.773456,3.073177,8.447767,-0.069926,-2.635040,-0.831714,-4.107869,-4.602764,-8.025010,-5.506975,-6.071513,5.296265,0.785174,-5.571265,6.894107,-0.827708,9.012493,-5.725260,4.476513,-6.305053,6.797098,7.188139,-7.781014,0.616970,-9.558453,-5.136584,8.392338,7.980379,0.861858,0.411477,3.367095,5.163582,8.925389,6.217938,-8.537030,-7.438396,-6.532358,0.843212,-3.008626,-3.958084,-5.850675,0.511303,-1.666381,-2.155851,-4.764882,-7.528494,4.190360,-3.454637,5.372507,7.341491,4.038612,2.325145,-8.421145,-5.717221,-0.185494,9.189689,-7.669769,-1.433026,1.218557,-5.026544,-3.580041,2.789192,-0.409493,1.236500,6.006988,9.174151,-5.886007,-4.353403,0.363657,7.904841,7.576667,-0.305592,5.590323,-8.099760,6.763838,7.763296,2.694782,1.363758,-3.438858,3.566701,0.030590,2.302611,-3.630145,-8.847754,-9.543983,8.709505,-4.165203,7.808422,-7.986877,-4.495630,-5.761451,6.139321,-7.180597,4.201840,6.571478,-0.027668,5.930311,5.304022,-0.798737,7.375409,3.424618,-6.249911,-8.413336,-8.230102,-1.612787,-2.989606,-5.880476,-0.257182,-6.502962,3.398908,8.728728,7.687021,7.791853,-6.675039,-1.888802,5.033904,-3.183214,-8.128280,0.565156,7.429140,6.768697,8.604864,1.474025,6.271180,3.550998,-8.635375,-1.241835,-3.539902,-1.120252,8.239414,-4.777513,-4.110728,4.809792,-9.536198,0.959775,-3.485886,4.765036,-1.228338,5.192293,6.271588,5.990109,2.302312,5.057525,0.135542,-8.513472,-5.461687,5.408280,5.800222,6.830044,-6.656597,7.114741,-8.598950,-4.448065,-8.405205,-5.000102,-0.013081,7.870286,4.738478,9.196586,-2.195121,-5.261138,8.559295,6.074816,-3.085985,-5.698211,-4.992107,7.411761,-6.806853,8.045558,9.765644,-5.901891,6.745653,-7.541990,-2.637558,-1.722957,1.865935,-8.638456,-0.422375,-6.951695,-8.589364,5.530359,-0.384705,5.289203,-7.195204,4.703156,-2.234719,-5.282006,8.664265,8.816525,-5.377877,-4.606767,-7.461042,-0.283195,0.320639,5.565475,9.390838,-1.289614,0.392254,8.574826,-7.292366,4.955330,-9.662853,3.053817,-0.511393,-3.468260,-9.221184,0.022458,4.176484,6.396087,-6.767739,-0.307618,-4.753628,5.593860,3.619387,4.213076,-2.834644,-8.754356,-6.314980,-1.714752,-6.179108,-6.138890,-7.910889,8.794781,7.074821,-8.479626,8.969774,-9.175872,3.780371,8.734547,-1.053037,-2.719225,-9.911253,2.255131,-8.711498,8.348665,-8.770705,7.853916,6.272513,-1.532528,-2.408744,-0.642873,-4.935869,9.854910,7.406804,-5.463641,6.569251,-5.240470,7.256663,5.661394,4.950976,4.663213,-8.003560,-2.659966,5.518825,-7.276327,5.378840,-6.012688,3.790093,1.906880,-2.739682,-4.821414,9.465505,3.049038,8.457766,-1.779674,-7.401380,-1.893719,6.739425,-9.142130,-9.544774,-8.028208,-3.456874,9.818897,-0.776474,-6.066909,-0.844969,-3.875820,2.745193,-5.862892,-7.121504,1.409903,-9.941332,0.141492,0.008088,2.631236,2.484843,1.083436,-2.067555,4.837887,-8.698028,9.579917,2.786663,-1.491164,-4.450505,9.799535,7.581510,8.223140,-7.988347,2.125869,-8.728759,9.276720,-0.338714,1.756497,2.225694,6.174809,-5.728333,-1.194911,5.755728,-4.737493,-1.540331,-8.870058,8.540458,1.791422,3.856278,3.515807,0.903551,8.667885,0.477401,-8.581582,4.662336,-7.864509,1.742468,3.517088,5.290384,-9.728218,1.717490,-3.841583,-9.856485,8.754397,-8.036277,8.078388,0.208541,-0.707571,-8.349483,-6.044224,-1.805811,4.612106,5.969545,-6.356428,2.428455,-8.561564,-8.749489,9.385591,7.491751,-1.731944,8.141284,2.139363,-2.057605,3.312311,1.987708,-0.422329,5.114865,9.085375,9.158302,3.832815,-1.580626,0.430301,-2.738148,3.463956,1.510936,-4.266805,3.144713,-5.368547,8.285003,-6.823155,5.875887,-9.376558,0.657076,8.090163,-8.709637,2.568429,8.150786,4.345356,2.725689,0.342323,-5.552499,5.054202,2.142879,6.643757,3.820267,9.355578,-7.769912,8.762724,9.718146,-2.068714,-3.104596,-0.662170,1.116649,5.518944,-7.713741,1.440403,-9.037208,4.995913,-9.774279,-9.501336,-6.807229,-0.160322,-0.118589,-6.964157,6.786588,1.885486,-1.113923,7.937176,6.110728,-5.074274,1.709278,-9.489162,-0.932142,9.162400,-3.896639,3.358684,-9.234188,6.472642,0.609691,-9.770541,4.961116,-7.901296,-3.014290,0.898853,7.096420,5.851926,0.028696,-5.463147,9.943231,9.184997,-0.811007,5.414407,-4.490325,4.997901,-1.139460,-5.945647,4.380582,-3.628546,-6.500684,6.778067,3.407285,-7.769006,-3.873686,3.950016,1.721133,2.325408,6.981203,-0.075073,8.088001,8.923887,2.079474,1.263276,8.176906,-7.566589,2.359290,0.280197,8.639316,-5.715437,-8.512055,5.090344,-9.226374,7.126781,6.060982,3.931128,6.913307,7.743605,6.346591,2.182923,-4.274551,-8.989367,2.087363,-5.971024,-3.727905,-7.944216,-0.029024,-8.228090,-2.996389,-9.326314,0.507907,1.678708,6.030001,7.189310,2.139793,4.666992,8.455331,-2.958307,5.696957,8.067822,1.808708,-2.258457,4.030202,-2.022144,0.818827,-2.311123,-7.329493,3.754349,-7.079002,-3.952736,-5.228203,4.667966,-8.433371,-8.653255,-3.110509,0.747219,-0.038386,-6.538747,-3.394561,8.727948,3.933501,-9.593440,8.666174,6.464825,-8.610571,-5.005402,9.443457,-4.986381,3.772830,7.720257,-9.922876,8.613639,9.334620,9.486406,-8.333841,2.501256,-7.227184,4.079975,7.814050,6.175233,4.061797,-7.794902,8.878372,-7.320520,-8.228706,-4.644245,-0.602129,7.813798,4.793477,1.963493,1.060585,-8.372915,-9.349147,-7.964375,-9.437565,9.365033,3.095125,5.320459,8.156754,0.573690,6.388788,-4.448376,9.585630,1.498789,-0.824554,-0.846353,6.533644,5.221997,-9.004771,-8.433858,4.224351,-9.773991,3.032399,9.414727,0.092702,-7.097416,7.517631,-8.139684,-7.552614,2.668288,-1.057259,8.575268,-0.021951,1.536096,-1.440264,-6.468308,-6.104845,-8.187499,-6.732160,-1.652947,-7.601140,-9.041003,6.155704,-1.481635,1.117553,8.766243,6.336627,4.366599,6.385405,-2.017950,-3.374631,-1.596969,-4.001643,9.393296,-8.573382,-7.245005,-3.490558,-7.919867,-6.902053,-4.499882,7.701123,5.435815,-9.768795,-4.989227,-7.252269,3.213451,5.519260,0.363460,-5.856020,-0.436484,-8.228884,1.767938,-8.604469,-2.764447,-7.359348,-4.179393,-7.600548,-4.321060,-1.320756,7.166749,0.468640,-4.013705,-1.648079,-7.019830,-2.724314,9.916732,-7.795285,0.834034,8.512561,2.778209,-8.331838,0.870437,3.460117,6.129905,-9.951052,-6.482331,2.164725,6.523516,-9.702859,-3.496447,-3.957281,2.594515,-1.215382,7.854446,5.919434,0.210809,-6.013533,-4.150868,-3.727814,-3.132438,-9.915350,0.275817,5.408871,8.949959,-5.216010,-1.323665,-9.666572,5.006409,-5.499320,-9.304316,8.950527,-6.860913,-0.254713,-1.898199,-7.106328], dtype = "float64")#candidate|4286|(1120,)|const|float64
call_4285 = func_893_call(relay.reshape(const_4286.astype('float64'), [16, 10, 7]))
call_4287 = func_893_call(relay.reshape(const_4286.astype('float64'), [16, 10, 7]))
output = relay.Tuple([call_4259,call_4285,const_4286,])
output2 = relay.Tuple([call_4260,call_4287,const_4286,])
func_4293 = relay.Function([], output)
mod['func_4293'] = func_4293
mod = relay.transform.InferType()(mod)
output = func_4293()
func_4294 = relay.Function([], output)
mutated_mod['func_4294'] = func_4294
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1392_call = mod.get_global_var('func_1392')
func_1394_call = mutated_mod.get_global_var('func_1394')
call_4302 = relay.TupleGetItem(func_1392_call(), 1)
call_4303 = relay.TupleGetItem(func_1394_call(), 1)
output = call_4302
output2 = call_4303
func_4308 = relay.Function([], output)
mod['func_4308'] = func_4308
mod = relay.transform.InferType()(mod)
mutated_mod['func_4308'] = func_4308
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4308_call = mutated_mod.get_global_var('func_4308')
call_4309 = func_4308_call()
output = call_4309
func_4310 = relay.Function([], output)
mutated_mod['func_4310'] = func_4310
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4344 = relay.var("var_4344", dtype = "uint16", shape = ())#candidate|4344|()|var|uint16
var_4345 = relay.var("var_4345", dtype = "uint16", shape = (8, 13, 7))#candidate|4345|(8, 13, 7)|var|uint16
bop_4346 = relay.multiply(var_4344.astype('uint16'), var_4345.astype('uint16')) # shape=(8, 13, 7)
func_786_call = mod.get_global_var('func_786')
func_788_call = mutated_mod.get_global_var('func_788')
call_4352 = func_786_call()
call_4353 = func_786_call()
func_1184_call = mod.get_global_var('func_1184')
func_1186_call = mutated_mod.get_global_var('func_1186')
call_4358 = relay.TupleGetItem(func_1184_call(), 0)
call_4359 = relay.TupleGetItem(func_1186_call(), 0)
uop_4381 = relay.acosh(bop_4346.astype('float32')) # shape=(8, 13, 7)
func_2953_call = mod.get_global_var('func_2953')
func_2954_call = mutated_mod.get_global_var('func_2954')
call_4383 = func_2953_call()
call_4384 = func_2953_call()
output = relay.Tuple([call_4352,call_4358,uop_4381,call_4383,])
output2 = relay.Tuple([call_4353,call_4359,uop_4381,call_4384,])
func_4385 = relay.Function([var_4344,var_4345,], output)
mod['func_4385'] = func_4385
mod = relay.transform.InferType()(mod)
mutated_mod['func_4385'] = func_4385
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4385_call = mutated_mod.get_global_var('func_4385')
var_4387 = relay.var("var_4387", dtype = "uint16", shape = ())#candidate|4387|()|var|uint16
var_4388 = relay.var("var_4388", dtype = "uint16", shape = (8, 13, 7))#candidate|4388|(8, 13, 7)|var|uint16
call_4386 = func_4385_call(var_4387,var_4388,)
output = call_4386
func_4389 = relay.Function([var_4387,var_4388,], output)
mutated_mod['func_4389'] = func_4389
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4420 = relay.var("var_4420", dtype = "int8", shape = (15, 16, 10))#candidate|4420|(15, 16, 10)|var|int8
var_4421 = relay.var("var_4421", dtype = "int8", shape = (15, 16, 10))#candidate|4421|(15, 16, 10)|var|int8
bop_4422 = relay.equal(var_4420.astype('bool'), relay.reshape(var_4421.astype('bool'), relay.shape_of(var_4420))) # shape=(15, 16, 10)
output = relay.Tuple([bop_4422,])
output2 = relay.Tuple([bop_4422,])
func_4427 = relay.Function([var_4420,var_4421,], output)
mod['func_4427'] = func_4427
mod = relay.transform.InferType()(mod)
mutated_mod['func_4427'] = func_4427
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4427_call = mutated_mod.get_global_var('func_4427')
var_4429 = relay.var("var_4429", dtype = "int8", shape = (15, 16, 10))#candidate|4429|(15, 16, 10)|var|int8
var_4430 = relay.var("var_4430", dtype = "int8", shape = (15, 16, 10))#candidate|4430|(15, 16, 10)|var|int8
call_4428 = func_4427_call(var_4429,var_4430,)
output = call_4428
func_4431 = relay.Function([var_4429,var_4430,], output)
mutated_mod['func_4431'] = func_4431
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4439 = relay.const([[[-5.038739],[9.810804],[7.773789],[-4.377410],[9.368358],[-3.421896],[5.116751],[7.168619],[6.702279],[-6.573547],[4.122759],[-8.886507],[-1.582464]],[[6.658576],[-0.946266],[9.312903],[2.639458],[-3.701876],[-3.463687],[8.215425],[7.740435],[-8.461411],[6.558169],[-7.209001],[-8.737300],[-9.273321]],[[8.465669],[4.346783],[5.946801],[6.556614],[9.250093],[-1.327154],[3.707101],[9.345032],[9.039938],[-7.275032],[-6.326963],[-7.372888],[-7.448833]],[[-8.636905],[2.911463],[8.551371],[7.813359],[-9.228646],[4.756975],[-5.720425],[-7.510410],[6.356758],[8.086407],[8.465660],[7.053719],[-9.006575]],[[-5.710541],[3.398868],[5.122166],[-3.860165],[0.960925],[5.423057],[-8.142923],[9.017361],[-2.972334],[-3.754045],[-4.344565],[-5.496092],[9.200680]],[[-9.384232],[3.035718],[-0.041410],[6.046013],[7.060658],[-4.307136],[7.450034],[5.982106],[-5.574859],[6.528273],[5.724995],[-1.267253],[-9.799046]],[[-6.818916],[-4.007527],[4.214377],[-1.739656],[7.607812],[-4.156884],[5.680835],[2.017023],[6.570003],[9.496103],[-4.143178],[-8.210344],[0.524221]],[[2.877895],[-5.535837],[-3.931339],[-9.896397],[-9.985899],[6.468838],[2.342005],[8.682036],[-5.690175],[1.224067],[-2.368768],[-9.615300],[3.722229]],[[-5.299752],[-5.827364],[4.914293],[9.206069],[-6.630418],[-2.759798],[-2.888470],[-7.035458],[-5.091626],[9.471277],[0.940497],[-1.259342],[6.176467]]], dtype = "float32")#candidate|4439|(9, 13, 1)|const|float32
var_4440 = relay.var("var_4440", dtype = "float32", shape = (9, 13, 12))#candidate|4440|(9, 13, 12)|var|float32
bop_4441 = relay.floor_divide(const_4439.astype('float32'), var_4440.astype('float32')) # shape=(9, 13, 12)
func_2030_call = mod.get_global_var('func_2030')
func_2031_call = mutated_mod.get_global_var('func_2031')
call_4446 = func_2030_call()
call_4447 = func_2030_call()
func_1072_call = mod.get_global_var('func_1072')
func_1075_call = mutated_mod.get_global_var('func_1075')
const_4449 = relay.const([[-3.792395],[-3.324914],[-3.138847],[9.273448],[7.122157],[-8.438864],[-1.173367],[-3.736935],[-2.632591],[0.211460],[0.027267],[-2.969725],[9.649518],[-7.277631],[1.725835],[7.451244],[-1.069659],[-0.057062],[4.217297],[-8.152573],[6.180670],[-9.661042],[-1.166303],[-5.470242],[8.207718],[4.582052],[1.106293],[-1.324032],[0.347682],[9.044485],[-4.235383],[5.645512],[-3.360298],[0.577938],[5.093983],[-8.183117],[-5.158836],[-7.561350],[0.149081],[4.311319],[-4.854099],[3.157582],[-7.103970],[8.106275],[-8.337538],[0.544209],[3.966006],[8.305227],[-7.546447],[8.984292],[-6.175204],[2.693275],[0.063096],[8.433238],[-2.217443],[2.760610],[3.787860],[6.817397],[-2.639792],[-5.174010],[6.624642],[7.496530],[-2.241815],[-4.384177],[2.747785],[-0.555822],[0.042311],[-8.975670],[-4.351938],[8.981413],[4.186206],[2.302754],[6.542766],[-4.355810],[5.543322],[-4.372545],[-8.559284],[0.382982],[-7.291323],[-3.635618],[-9.991042],[7.731452],[-5.220295],[-9.023224],[-3.588100],[8.029902],[-5.388745],[-3.558364],[9.449328],[8.906934],[7.286671],[7.501335],[-7.816561],[-0.705707],[-4.508698],[-5.074134],[-8.185066],[-6.603821],[-1.172158],[3.767143],[-6.636667],[-2.714917],[2.461402],[-3.257806],[5.617061],[-0.345047],[5.774316],[4.061193],[-8.345996],[-3.674814],[-2.412086],[2.603255],[6.706385],[0.217512],[-2.315677],[-0.680835],[4.414229],[8.207397],[9.962240],[-0.926594],[-9.577489],[-0.922001],[-0.363951],[4.188986],[4.800886],[-2.149425],[-7.801177],[-4.139967],[9.777968],[3.304870],[-3.034980],[9.771356],[-1.403882],[5.663957],[-4.165145],[0.682422],[-4.264382],[6.702504],[3.980948],[3.709875],[-9.578821],[-2.983579],[-1.320811],[-7.640817],[-6.770419],[9.140516],[7.038483],[-4.918136],[-8.716291],[-4.662957],[4.581580],[7.048320],[9.722660],[7.233355],[3.731106],[8.808200],[-7.559400],[-6.563784],[6.153709],[-5.982514],[9.088974],[-8.512616],[-7.098019],[-5.822268],[-6.146421],[-8.856345],[-7.077120],[9.048950],[-8.572300],[-9.695009],[-4.357075],[7.363225],[0.221502],[2.926807],[3.300744],[-2.121241],[0.492666],[9.182160],[-4.485909],[-2.948514],[-4.007225],[-1.331396],[-0.207335],[-9.365316],[-7.527045],[-5.395617],[9.838743],[5.652282],[-5.135618],[5.054375],[8.818174],[-2.734162],[-6.691368],[-8.862365],[4.703988],[-8.653025],[4.170222],[2.784885],[-2.383933],[-8.976659],[-5.200482],[9.105582],[8.088683],[9.361193],[1.794372],[0.786155],[-7.367357],[-1.148656],[5.674930],[9.867094],[1.501196],[7.022194],[4.121849],[1.423014],[-1.538571],[-5.772383],[-8.077806],[-9.906608],[7.509713],[5.803778],[-6.320227],[5.489099],[-9.249326],[-7.713892],[-0.414726],[2.832423],[0.561780],[0.488017],[8.559788],[-3.780855],[-5.590223],[-2.442165],[2.729082],[-1.944497],[-5.911451],[8.455023],[-1.646815],[-3.012959],[-8.628551],[4.988889],[-5.097425],[5.979921],[7.963887],[-9.376470],[3.112700],[-0.037387],[-8.926803],[-8.513891],[-4.053564],[-6.845649],[5.788639],[4.182647],[-7.714648],[-5.224577],[-6.246696],[6.194715],[-9.690226],[-5.497921],[3.646629],[-3.915641],[-1.143419],[1.074843],[-8.477296],[-4.045121],[-1.143666],[6.894489],[-5.380818],[-6.811022],[-5.368952],[-1.587914],[-0.372667],[-2.639329],[-4.180396],[-3.830603],[1.976385],[-6.730358],[9.682707],[-9.936493],[4.654951],[-1.800544],[8.212189],[0.452008],[4.018179],[-8.271778],[9.374586],[-6.173004],[0.560736],[-2.603262],[-9.790046],[3.685474],[-5.947144],[5.462317],[3.607220],[9.033322],[-3.608263],[6.897302],[5.897804],[1.758023],[-0.628791],[3.755118],[-2.577699],[1.220245],[-7.191476],[8.590677],[-5.352500],[-7.768387],[-2.378198],[-2.144056],[-5.646234],[3.796197],[-2.970500],[-6.708904],[9.326598],[-1.656651],[-8.181769],[3.183460],[9.065727],[-5.904539],[7.937075],[-6.320932],[-7.539724],[-1.810818],[-5.631127],[5.148082],[-6.076859],[0.570617],[9.817910],[-8.006200],[-1.771965],[-7.299961],[-7.296219],[1.586689],[-7.495976],[0.966793],[-3.390099],[6.476180],[5.994186],[5.737266],[-3.197140],[-1.227831],[2.173960],[4.415808],[4.663799],[-6.033144],[-2.290410],[-5.631237],[-3.687384],[6.633211],[7.800847],[-0.883039],[-6.411746],[6.137760],[4.928394],[-8.895219],[4.818933],[-1.862710],[-8.751167],[7.342821],[-8.189261],[0.278220],[-3.408441],[4.850702],[-0.652100],[6.779929],[-2.691038],[1.834584],[5.412672],[-5.012193],[9.640113],[-7.883282],[3.745385],[-0.040747],[0.630073],[3.096919],[1.023537],[-3.249909],[4.880505],[-3.516377],[-6.375220],[7.066139],[-1.748538],[-3.936989],[8.528930],[-6.017877],[6.592185],[3.850293],[-7.284129],[-1.614387],[5.756633],[1.726490],[4.716545],[-4.872279],[8.226734],[-9.403120],[-8.148229],[-6.811299],[-9.875121],[-2.222752],[9.214121],[-7.261875],[-9.978989],[3.022961],[9.925517],[-7.094726],[-6.619788],[6.420481],[2.194527],[-2.692792],[6.892532],[9.011485],[-1.924119],[-3.020758],[-2.402161],[7.772262],[2.622392],[-3.977630],[6.369266],[-8.277589],[3.273045],[-3.552616],[-2.809928],[2.746128],[2.033857],[0.475769],[-8.296697],[4.041099],[-6.907528],[1.345868],[-9.877767],[7.396961],[7.911372],[4.782277],[5.830236],[2.564980],[-0.224953],[-9.437316],[-3.509595],[9.078348],[1.596673],[-3.221227],[2.120141],[8.111409],[8.214607],[-2.224489],[8.305850],[8.544554],[3.838188],[0.409574],[0.659438],[5.126471],[-2.987307],[-2.047779],[-3.837326],[6.153987],[-6.121953],[2.241782],[2.864723],[-0.335237],[-3.345867],[-7.906542],[-7.643522],[-7.121362],[5.051458],[-7.532492],[-3.468347],[-7.351744],[-7.869944],[4.031968]], dtype = "float64")#candidate|4449|(468, 1)|const|float64
var_4450 = relay.var("var_4450", dtype = "float64", shape = (280, 4))#candidate|4450|(280, 4)|var|float64
call_4448 = relay.TupleGetItem(func_1072_call(relay.reshape(const_4449.astype('float64'), [13, 12, 3]), relay.reshape(var_4450.astype('float64'), [1, 1120]), ), 1)
call_4451 = relay.TupleGetItem(func_1075_call(relay.reshape(const_4449.astype('float64'), [13, 12, 3]), relay.reshape(var_4450.astype('float64'), [1, 1120]), ), 1)
output = relay.Tuple([bop_4441,call_4446,call_4448,const_4449,var_4450,])
output2 = relay.Tuple([bop_4441,call_4447,call_4451,const_4449,var_4450,])
func_4454 = relay.Function([var_4440,var_4450,], output)
mod['func_4454'] = func_4454
mod = relay.transform.InferType()(mod)
var_4455 = relay.var("var_4455", dtype = "float32", shape = (9, 13, 12))#candidate|4455|(9, 13, 12)|var|float32
var_4456 = relay.var("var_4456", dtype = "float64", shape = (280, 4))#candidate|4456|(280, 4)|var|float64
output = func_4454(var_4455,var_4456,)
func_4457 = relay.Function([var_4455,var_4456,], output)
mutated_mod['func_4457'] = func_4457
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3924_call = mod.get_global_var('func_3924')
func_3925_call = mutated_mod.get_global_var('func_3925')
call_4464 = func_3924_call()
call_4465 = func_3924_call()
const_4468 = relay.const([[[-2,-8,-4,9,9,-8,2,-9,-7,2,2,1],[9,9,-6,-7,3,5,4,-7,-3,-2,-10,-1],[-3,-9,4,7,9,5,-8,4,-8,1,2,-2],[2,-1,7,9,9,-9,10,-6,1,4,6,1],[6,5,-9,-4,-5,1,-9,3,10,10,-5,-9],[-8,6,-9,-7,10,-3,-2,-7,-10,-8,1,-6],[3,-1,2,7,-10,-5,1,-4,-7,7,1,-6],[-4,-1,-10,-10,-5,-3,10,9,4,-1,-8,-3],[3,4,-6,9,9,-7,-9,1,-7,-2,-6,-8],[-7,-5,-5,1,8,4,-8,-2,-2,-5,7,4],[-4,-2,9,3,9,10,4,-4,7,-4,2,3]],[[8,-5,-7,8,7,-4,-10,-2,-2,-4,4,-9],[-7,-7,1,-3,1,4,8,9,-2,4,7,10],[8,6,-4,-4,-7,10,-2,-7,-2,1,2,7],[-3,5,-7,-1,-9,-9,-1,-3,-4,8,-5,-3],[5,9,5,1,-9,10,-1,10,-8,-2,2,9],[8,5,2,2,-1,-5,7,4,4,1,-7,-7],[2,5,-7,-9,4,10,-2,-5,3,9,8,7],[1,9,-9,-4,8,-4,-6,1,8,7,-6,-5],[4,1,1,-6,-4,-10,-1,-5,-6,5,-3,-3],[10,1,4,-4,-1,-10,1,-3,-1,1,9,-3],[6,-6,-6,1,3,-9,7,-5,6,-1,3,3]],[[8,10,-9,-4,-2,-5,-1,4,8,1,7,-6],[-3,-2,-2,2,1,9,4,-7,6,-7,-8,-1],[4,-4,9,-6,8,1,-4,-1,-5,-5,6,7],[5,10,-3,-10,4,10,7,-8,-5,-6,-1,6],[-9,-5,4,-8,-6,-10,1,9,-7,1,-4,-8],[7,10,1,4,-8,7,-2,8,-5,-10,10,4],[-8,-1,5,3,-1,1,-10,2,-5,7,5,-9],[4,9,-9,-3,-1,9,-2,-9,5,7,-5,3],[-9,1,-6,6,-10,-5,-1,7,-3,-7,1,9],[6,-3,-6,-4,7,-1,-6,4,-6,-6,-9,7],[1,6,10,10,-3,8,7,4,-5,-8,2,8]]], dtype = "uint16")#candidate|4468|(3, 11, 12)|const|uint16
bop_4469 = relay.logical_or(call_4464.astype('bool'), relay.reshape(const_4468.astype('bool'), relay.shape_of(call_4464))) # shape=(3, 11, 12)
bop_4472 = relay.logical_or(call_4465.astype('bool'), relay.reshape(const_4468.astype('bool'), relay.shape_of(call_4465))) # shape=(3, 11, 12)
output = bop_4469
output2 = bop_4472
func_4483 = relay.Function([], output)
mod['func_4483'] = func_4483
mod = relay.transform.InferType()(mod)
mutated_mod['func_4483'] = func_4483
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4483_call = mutated_mod.get_global_var('func_4483')
call_4484 = func_4483_call()
output = call_4484
func_4485 = relay.Function([], output)
mutated_mod['func_4485'] = func_4485
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4528 = relay.var("var_4528", dtype = "int8", shape = (1, 2, 4))#candidate|4528|(1, 2, 4)|var|int8
const_4529 = relay.const([[[-4,-7,8,-2],[1,7,9,-7]],[[-10,10,-1,6],[-3,-3,-2,1]]], dtype = "int8")#candidate|4529|(2, 2, 4)|const|int8
bop_4530 = relay.greater(var_4528.astype('bool'), const_4529.astype('bool')) # shape=(2, 2, 4)
output = bop_4530
output2 = bop_4530
func_4553 = relay.Function([var_4528,], output)
mod['func_4553'] = func_4553
mod = relay.transform.InferType()(mod)
mutated_mod['func_4553'] = func_4553
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4554 = relay.var("var_4554", dtype = "int8", shape = (1, 2, 4))#candidate|4554|(1, 2, 4)|var|int8
func_4553_call = mutated_mod.get_global_var('func_4553')
call_4555 = func_4553_call(var_4554)
output = call_4555
func_4556 = relay.Function([var_4554], output)
mutated_mod['func_4556'] = func_4556
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1589_call = mod.get_global_var('func_1589')
func_1590_call = mutated_mod.get_global_var('func_1590')
call_4580 = relay.TupleGetItem(func_1589_call(), 1)
call_4581 = relay.TupleGetItem(func_1590_call(), 1)
var_4583 = relay.var("var_4583", dtype = "float64", shape = (3, 10, 7))#candidate|4583|(3, 10, 7)|var|float64
bop_4584 = relay.bitwise_and(call_4580.astype('int16'), var_4583.astype('int16')) # shape=(3, 10, 7)
bop_4587 = relay.bitwise_and(call_4581.astype('int16'), var_4583.astype('int16')) # shape=(3, 10, 7)
output = relay.Tuple([bop_4584,])
output2 = relay.Tuple([bop_4587,])
func_4589 = relay.Function([var_4583,], output)
mod['func_4589'] = func_4589
mod = relay.transform.InferType()(mod)
var_4590 = relay.var("var_4590", dtype = "float64", shape = (3, 10, 7))#candidate|4590|(3, 10, 7)|var|float64
output = func_4589(var_4590)
func_4591 = relay.Function([var_4590], output)
mutated_mod['func_4591'] = func_4591
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3503_call = mod.get_global_var('func_3503')
func_3505_call = mutated_mod.get_global_var('func_3505')
call_4637 = func_3503_call()
call_4638 = func_3503_call()
output = call_4637
output2 = call_4638
func_4654 = relay.Function([], output)
mod['func_4654'] = func_4654
mod = relay.transform.InferType()(mod)
output = func_4654()
func_4655 = relay.Function([], output)
mutated_mod['func_4655'] = func_4655
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3924_call = mod.get_global_var('func_3924')
func_3925_call = mutated_mod.get_global_var('func_3925')
call_4699 = func_3924_call()
call_4700 = func_3924_call()
func_2953_call = mod.get_global_var('func_2953')
func_2954_call = mutated_mod.get_global_var('func_2954')
call_4701 = func_2953_call()
call_4702 = func_2953_call()
func_1757_call = mod.get_global_var('func_1757')
func_1759_call = mutated_mod.get_global_var('func_1759')
call_4726 = func_1757_call()
call_4727 = func_1757_call()
func_810_call = mod.get_global_var('func_810')
func_812_call = mutated_mod.get_global_var('func_812')
call_4734 = relay.TupleGetItem(func_810_call(), 0)
call_4735 = relay.TupleGetItem(func_812_call(), 0)
func_4589_call = mod.get_global_var('func_4589')
func_4591_call = mutated_mod.get_global_var('func_4591')
var_4739 = relay.var("var_4739", dtype = "float64", shape = (210,))#candidate|4739|(210,)|var|float64
call_4738 = relay.TupleGetItem(func_4589_call(relay.reshape(var_4739.astype('float64'), [3, 10, 7])), 0)
call_4740 = relay.TupleGetItem(func_4591_call(relay.reshape(var_4739.astype('float64'), [3, 10, 7])), 0)
output = relay.Tuple([call_4699,call_4701,call_4726,call_4734,call_4738,var_4739,])
output2 = relay.Tuple([call_4700,call_4702,call_4727,call_4735,call_4740,var_4739,])
func_4741 = relay.Function([var_4739,], output)
mod['func_4741'] = func_4741
mod = relay.transform.InferType()(mod)
var_4742 = relay.var("var_4742", dtype = "float64", shape = (210,))#candidate|4742|(210,)|var|float64
output = func_4741(var_4742)
func_4743 = relay.Function([var_4742], output)
mutated_mod['func_4743'] = func_4743
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1184_call = mod.get_global_var('func_1184')
func_1186_call = mutated_mod.get_global_var('func_1186')
call_4768 = relay.TupleGetItem(func_1184_call(), 0)
call_4769 = relay.TupleGetItem(func_1186_call(), 0)
output = relay.Tuple([call_4768,])
output2 = relay.Tuple([call_4769,])
func_4771 = relay.Function([], output)
mod['func_4771'] = func_4771
mod = relay.transform.InferType()(mod)
output = func_4771()
func_4772 = relay.Function([], output)
mutated_mod['func_4772'] = func_4772
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3924_call = mod.get_global_var('func_3924')
func_3925_call = mutated_mod.get_global_var('func_3925')
call_4779 = func_3924_call()
call_4780 = func_3924_call()
func_2831_call = mod.get_global_var('func_2831')
func_2833_call = mutated_mod.get_global_var('func_2833')
call_4798 = func_2831_call()
call_4799 = func_2831_call()
uop_4850 = relay.log(call_4798.astype('float64')) # shape=(1, 10, 7)
uop_4852 = relay.log(call_4799.astype('float64')) # shape=(1, 10, 7)
output = relay.Tuple([call_4779,uop_4850,])
output2 = relay.Tuple([call_4780,uop_4852,])
func_4861 = relay.Function([], output)
mod['func_4861'] = func_4861
mod = relay.transform.InferType()(mod)
mutated_mod['func_4861'] = func_4861
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4861_call = mutated_mod.get_global_var('func_4861')
call_4862 = func_4861_call()
output = call_4862
func_4863 = relay.Function([], output)
mutated_mod['func_4863'] = func_4863
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3940_call = mod.get_global_var('func_3940')
func_3941_call = mutated_mod.get_global_var('func_3941')
call_4864 = relay.TupleGetItem(func_3940_call(), 0)
call_4865 = relay.TupleGetItem(func_3941_call(), 0)
func_3547_call = mod.get_global_var('func_3547')
func_3551_call = mutated_mod.get_global_var('func_3551')
var_4870 = relay.var("var_4870", dtype = "float64", shape = (35, 4))#candidate|4870|(35, 4)|var|float64
const_4871 = relay.const([-3,4,4,-8,4,2,-9,-6,1,-5,-4,4,-6,-4,-2,-4,3,8,-3,-8,6,-6,-6,-9,-8,6,5,-10,10,-1,-9,9,2,1,6,6,-1,6,-5,-6,9,5,-3,5,10,-6,-1,-3,2,10,-3,-1,-9,2,4,-4,-2,-9,5,8,9,6,-1,-3,-1,3,1,8,1,-1,10,9,8,6,-9,-1,-10,-8,-6,-4,-8,-2,-8,-9,10,5,-9,3,10,3,4,10,2,5,-1,-8,-3,-7,3,-2,-10,-5,1,8,-7,-3,-6,-7,2,-8,-8,-1,-7,3,-8,4,-4,-9,-7,8,-10,5,5,4,-3,-10,1,5,2,9,-5,-8,-2,-3,5,-10,-6,1,-10,-9,-1,5,10,1,8,-2,3,-1,6,-1,-7,6,-8,7,3,-3,4,-6,8,8,7,8,-7,-4,-2,6,8,5,10,-3,7,-7,4,7,1,9,-5,-10,7,-7,-9,-10,-6,2,-8,-1,3,-6,-3,2,-8,6,9,6,-7,6,-10,2,5,4,-1,6,4,10,7,-3,-2,-8,4,8,1,-9,2,6,5,1,-4,-9,-9,6,-10,10,-10,4,6,-7,-10,7,8,-1,5,9,7,8,7,-1,-4,1,-3,10,-1,-8,3,-2,3,4,-3,5,-2,-7,8,-8,-1,10,5,7,7,6,-3,9,-10,-1,-9,-3,3,2,10,-8,2,-6,8,-5,-9,2,-7,-7,7,2,-8,7,-4,3,-2,6,-8,10,-6,-8,-4,-8,-5,-10,4,-8,-6,6,-5,-6,1,-8,-4,3,-3,-6,5,-10,10,-3,-3,-9,-4,-8,3,6,6,2,-4,8,8,-6,8,5,7,2,-7,-6,-5,1,-10,1,3,-6,10,4,-7,-3,6,5,-6,-3,10,-5,6,5,5,4,1,4,-3,9,1,-9,10,10,10,8,-5,-5,8,-10,7,-10,-3,10,-5,8,-1,-2,-10,8,8,-10,-10,5,-6,-1,-9,1,-5,8,8,-3,2,3,-8,1,-8,10,-5,-5,9,4,-7,10,6,2,-5,-4,-2,10,-7,-7,-4,-2,-1,-2,1,8,10,9,-9,9,-8,4,1,2,-7,-4,6,-1,-1,7,8,-1,5,-4,3,-10,-8,2,8,-9,1,-5,-9,3,-7,3,8,-6,6,-9,5,1,-2,5,7,5,9,-6,-6,8,1,-1,-5,-2,-6,1,10,5,7,4,-5,-5,-10,-3,-9,-10,-10,9,-7,-8,2,4,-3,8,10,7,2,2,-2,8,3,2,-10,-3,-2,2,10,9,-7,-7,-6,6,8,-10,2,10,6,1,4,3,-4,-1,-2,-2,-5,8,5,1,-2,2,9,-1,7,-10,-5,7,9,6,8,2,8,9,4,7,-1,1,-4,-4,4,1,9,1,-8,1,4,1,3,-7,10,-6,4,10,10,8,7,3,7,-8,-10,1,4,8,-2,6,-9,-2,10,1,-5,1,-8,10,10,-10,-8,-6,5,-8,9,8,8,10,-1,5,-10,7,-5,-1,6,-5,4,-5,-7,5,-10,-5,4,-4,6,10,10,-2,-6,-9,-6,-7,8,-9,-6,3,9,4,-3,8,-10,5,-6,6,-2,4,-1,-8,4,6,-4,-6,6,6,-8,9,1,-9,-1,-8,-10,-8,-5,10,6,9,-4,2,-5,-9,3,5,2,-10,9,-3,-2,1,-9,-5,8,6,-1,2,-1,10,-9,-7,-9,3,6,-10,-6,6,-4,4,-6,-6,3,4,-10,-5,9,1,2,7,-7,8,8,3,-6,-5,-9,3,8,-3,2,-7,-1,-3,2,3,-7,-5,5,-8,-6,7,-2,5,-8,6,8,2,-4,4,-5,5,8,-8,1,5,-8,1,3,-10,6,-10,3,-6,7,3,7,-5,-2,-7,8,8,-4,-8,9,-5,-5,-9,-9,5,7,7,8,8,-4,10,-6,-7,-1,7,-2,5,9,6,-9,3,1,-9,-1,-6,3,-6,6,9,-10,-5,1,10,4,-10,-8,-10,-5,7,-7,3], dtype = "int64")#candidate|4871|(768,)|const|int64
call_4869 = relay.TupleGetItem(func_3547_call(relay.reshape(var_4870.astype('float64'), [2, 10, 7]), relay.reshape(const_4871.astype('int64'), [768,]), ), 0)
call_4872 = relay.TupleGetItem(func_3551_call(relay.reshape(var_4870.astype('float64'), [2, 10, 7]), relay.reshape(const_4871.astype('int64'), [768,]), ), 0)
output = relay.Tuple([call_4864,call_4869,var_4870,const_4871,])
output2 = relay.Tuple([call_4865,call_4872,var_4870,const_4871,])
func_4879 = relay.Function([var_4870,], output)
mod['func_4879'] = func_4879
mod = relay.transform.InferType()(mod)
mutated_mod['func_4879'] = func_4879
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4880 = relay.var("var_4880", dtype = "float64", shape = (35, 4))#candidate|4880|(35, 4)|var|float64
func_4879_call = mutated_mod.get_global_var('func_4879')
call_4881 = func_4879_call(var_4880)
output = call_4881
func_4882 = relay.Function([var_4880], output)
mutated_mod['func_4882'] = func_4882
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3999_call = mod.get_global_var('func_3999')
func_4001_call = mutated_mod.get_global_var('func_4001')
call_4906 = relay.TupleGetItem(func_3999_call(), 3)
call_4907 = relay.TupleGetItem(func_4001_call(), 3)
func_2143_call = mod.get_global_var('func_2143')
func_2144_call = mutated_mod.get_global_var('func_2144')
call_4918 = relay.TupleGetItem(func_2143_call(), 0)
call_4919 = relay.TupleGetItem(func_2144_call(), 0)
func_3067_call = mod.get_global_var('func_3067')
func_3069_call = mutated_mod.get_global_var('func_3069')
call_4926 = func_3067_call()
call_4927 = func_3067_call()
output = relay.Tuple([call_4906,call_4918,call_4926,])
output2 = relay.Tuple([call_4907,call_4919,call_4927,])
func_4932 = relay.Function([], output)
mod['func_4932'] = func_4932
mod = relay.transform.InferType()(mod)
output = func_4932()
func_4933 = relay.Function([], output)
mutated_mod['func_4933'] = func_4933
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4993 = relay.var("var_4993", dtype = "bool", shape = (15, 3, 14))#candidate|4993|(15, 3, 14)|var|bool
const_4994 = relay.const([[[False,True,True,False,True,True,False,True,True,True,True,False,False,False],[True,True,True,False,True,True,True,False,False,True,True,False,False,True],[True,True,True,False,True,False,False,False,False,False,True,True,True,True]],[[True,True,True,False,False,False,False,False,True,True,False,True,True,False],[True,True,True,True,False,True,True,True,True,True,False,True,True,True],[False,True,False,True,False,True,True,True,True,False,True,False,True,True]],[[False,False,True,True,True,True,False,False,False,True,True,True,False,True],[True,False,True,True,True,True,True,True,True,False,False,False,False,True],[True,False,True,True,False,False,False,False,True,True,False,True,False,True]],[[True,True,True,False,True,False,True,False,True,False,True,False,True,False],[True,True,True,False,True,False,True,False,True,True,False,False,False,False],[False,True,True,True,False,False,True,True,False,False,True,False,True,False]],[[False,False,False,True,True,False,True,True,False,False,True,True,False,True],[False,False,True,False,True,False,True,True,True,False,False,True,False,True],[True,True,False,False,True,False,True,True,False,True,False,True,True,True]],[[False,True,False,False,False,True,False,True,True,True,True,False,True,True],[False,False,True,True,True,True,True,True,True,True,False,False,False,False],[True,True,True,True,True,True,False,True,False,False,False,True,False,True]],[[False,True,True,False,True,False,True,True,True,True,False,False,False,False],[False,False,False,True,True,True,True,False,False,True,True,False,True,False],[True,True,True,True,True,False,True,False,False,True,True,True,False,True]],[[False,False,True,False,False,True,False,True,False,True,False,False,False,True],[False,True,True,False,True,True,True,False,True,True,False,False,False,False],[True,False,True,True,False,True,False,False,False,False,True,True,True,True]],[[True,True,True,False,False,False,False,True,True,True,True,True,False,False],[True,False,False,False,False,True,False,False,False,False,False,True,False,False],[False,True,True,True,False,False,True,False,True,True,False,False,True,True]],[[True,True,True,False,False,True,True,False,True,True,True,True,True,True],[False,True,True,False,False,True,False,False,True,True,False,False,True,False],[True,False,False,False,True,True,True,True,True,False,False,False,True,True]],[[True,False,False,False,True,False,False,True,True,False,True,False,False,True],[True,True,False,False,True,False,False,False,True,True,False,False,True,False],[False,False,True,False,False,True,False,True,True,False,False,False,True,True]],[[True,True,True,False,False,True,False,True,True,False,True,False,False,True],[True,True,True,True,False,False,True,False,False,True,False,True,False,False],[False,True,False,True,False,True,True,False,False,True,True,True,True,False]],[[True,True,False,False,True,True,False,True,False,True,True,False,True,True],[True,True,False,True,False,False,False,False,True,True,False,True,False,True],[False,False,True,True,True,True,False,False,True,False,True,True,True,True]],[[True,False,False,False,True,False,False,True,False,False,True,True,False,True],[False,False,False,False,False,False,False,False,True,False,False,False,False,False],[True,True,True,False,False,True,True,True,False,True,True,False,True,False]],[[False,True,False,False,False,False,True,False,False,True,False,False,True,True],[False,True,True,False,False,False,False,False,True,True,False,True,False,True],[False,False,True,False,True,True,False,True,False,True,False,False,False,False]]], dtype = "bool")#candidate|4994|(15, 3, 14)|const|bool
bop_4995 = relay.logical_and(var_4993.astype('bool'), relay.reshape(const_4994.astype('bool'), relay.shape_of(var_4993))) # shape=(15, 3, 14)
uop_5000 = relay.exp(const_4994.astype('float64')) # shape=(15, 3, 14)
output = relay.Tuple([bop_4995,uop_5000,])
output2 = relay.Tuple([bop_4995,uop_5000,])
func_5016 = relay.Function([var_4993,], output)
mod['func_5016'] = func_5016
mod = relay.transform.InferType()(mod)
mutated_mod['func_5016'] = func_5016
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5017 = relay.var("var_5017", dtype = "bool", shape = (15, 3, 14))#candidate|5017|(15, 3, 14)|var|bool
func_5016_call = mutated_mod.get_global_var('func_5016')
call_5018 = func_5016_call(var_5017)
output = call_5018
func_5019 = relay.Function([var_5017], output)
mutated_mod['func_5019'] = func_5019
mutated_mod = relay.transform.InferType()(mutated_mod)
func_978_call = mod.get_global_var('func_978')
func_980_call = mutated_mod.get_global_var('func_980')
call_5023 = func_978_call()
call_5024 = func_978_call()
func_4879_call = mod.get_global_var('func_4879')
func_4882_call = mutated_mod.get_global_var('func_4882')
const_5030 = relay.const([[9.768326,-2.809548,-0.120981,-6.687187],[-3.158265,4.461930,-0.596825,-5.468484],[6.247025,-6.499395,9.568029,-0.668590],[-9.290910,3.627447,0.697011,8.667688],[4.470270,4.193325,3.645247,-4.143874],[2.059609,4.178321,-8.660465,5.098185],[3.462697,4.460250,1.114426,9.506852],[-6.249260,-7.389401,8.506944,-0.105179],[6.262839,-2.203296,-6.805933,-5.512450],[-3.571797,3.378983,2.942198,-4.447151],[-9.182300,4.515612,5.713171,8.598446],[0.240524,-5.861593,-1.643119,8.979929],[-6.392639,-7.268958,-2.779113,-2.016245],[-9.177164,-1.090982,5.832110,2.886572],[-0.198980,1.338594,0.384506,4.332139],[-8.981134,4.934152,6.751146,-3.052111],[1.444282,-0.244979,1.556838,-3.013058],[-3.131422,-3.825329,-7.515029,2.548348],[-7.548473,-2.823592,-1.264758,2.936652],[2.547386,2.711575,0.118796,8.648215],[-7.721499,6.511602,-5.679669,1.499705],[-8.618862,-6.941582,0.676066,6.631205],[-7.153232,-3.115707,-5.127797,6.963289],[-9.377572,-2.346245,-8.953771,-7.959461],[6.248932,1.434888,-4.111227,-4.808119],[-0.949854,3.237596,-4.199996,9.020114],[-9.473561,5.879204,9.061088,9.983349],[3.782263,-9.468973,0.900560,-6.785647],[-8.413414,-6.248305,9.709286,3.957772],[-9.786929,8.198246,3.038856,8.416123],[-7.648487,-3.399208,-6.925765,-0.046345],[3.693428,7.258391,4.502089,5.098203],[2.347663,-3.576925,-4.333417,-4.596087],[-9.984898,-4.398552,2.121408,-2.282341],[-0.766796,9.596466,-9.166496,6.506401]], dtype = "float64")#candidate|5030|(35, 4)|const|float64
call_5029 = relay.TupleGetItem(func_4879_call(relay.reshape(const_5030.astype('float64'), [35, 4])), 2)
call_5031 = relay.TupleGetItem(func_4882_call(relay.reshape(const_5030.astype('float64'), [35, 4])), 2)
output = relay.Tuple([call_5023,call_5029,const_5030,])
output2 = relay.Tuple([call_5024,call_5031,const_5030,])
func_5032 = relay.Function([], output)
mod['func_5032'] = func_5032
mod = relay.transform.InferType()(mod)
output = func_5032()
func_5033 = relay.Function([], output)
mutated_mod['func_5033'] = func_5033
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3503_call = mod.get_global_var('func_3503')
func_3505_call = mutated_mod.get_global_var('func_3505')
call_5059 = func_3503_call()
call_5060 = func_3503_call()
const_5061 = relay.const([[[2.707013,-6.060282,8.111126,1.202599,-3.151212,-4.524630,5.603515],[5.807362,-0.105288,2.946117,8.250696,-8.774319,-8.727184,-2.901114],[7.453846,4.709285,8.305245,-3.812796,-2.373907,2.888597,5.584475],[5.919165,-8.830624,-0.463355,2.207615,6.323411,2.591120,-1.386514],[-2.498557,2.406221,-1.338485,-8.053468,9.915208,2.031883,-1.544697],[-7.001996,-3.611544,2.284787,-1.878071,6.559683,4.647053,3.202554],[-1.273788,-8.285597,-3.848542,-6.053086,6.908440,-7.232154,8.468332],[-7.479305,6.644993,-1.368300,-7.258408,-8.158502,9.485829,7.668613],[-9.776842,0.970342,-0.208461,9.993558,-0.672981,4.199595,5.760970],[-2.394243,1.907459,-8.711315,5.846955,-8.048755,-0.674669,2.884679]],[[-7.245790,-7.004619,8.388512,2.774143,-2.727902,-3.922230,-4.486340],[-1.402411,-6.463942,1.132073,6.000080,-7.570956,-2.331041,-4.088289],[9.982282,-2.777038,-8.653129,-1.188049,-9.726605,4.633509,4.747076],[3.365064,-5.508174,1.977772,-8.066953,-0.382158,-2.097301,8.839040],[-3.356471,-2.714221,3.682748,1.188454,6.319220,0.248375,-1.526298],[-3.245581,-5.961212,7.260203,9.540074,0.436844,6.457999,8.039200],[-1.205907,-3.897973,3.036417,-0.914096,1.943834,-2.195895,-8.514618],[3.762017,0.578798,-8.233902,0.189129,-0.907418,-3.410833,9.927845],[3.979895,6.939089,2.081298,-2.171252,-1.004561,4.833747,5.805706],[6.000641,6.540862,-8.218938,-2.224373,-2.088544,-2.390424,2.186526]],[[9.728627,6.887882,9.402277,-5.874784,-3.898206,7.425087,-2.623350],[2.326298,9.254993,5.398564,2.970832,2.415887,-0.767075,6.162595],[-9.225810,1.056849,6.310397,-8.364242,7.269181,5.708122,-2.630877],[9.527622,8.763959,-8.595506,8.470326,8.443904,2.788123,-8.619834],[0.950383,-7.332345,-3.798769,7.848374,-7.910710,0.173376,-2.331467],[-8.079596,1.221454,4.379949,-4.633702,8.876832,3.506695,-2.207583],[3.570127,-3.994087,-4.188903,-0.107513,-8.291922,9.443896,-5.689608],[5.835781,7.502569,5.595158,4.384843,-1.143011,-6.341831,1.384123],[-8.599972,-0.030660,-1.937666,-3.280035,7.776269,-7.587603,-3.617185],[6.171366,-5.285473,-8.856358,-1.576298,-4.873076,-1.174533,0.059229]],[[4.468492,5.311058,-6.534080,0.803018,-3.337720,2.423157,0.307911],[-2.916543,5.992170,-1.211929,-3.139502,-5.257472,-7.884851,-1.559941],[6.437333,8.809403,-5.991689,-5.871860,-4.514444,7.097447,-6.702619],[-7.259276,-0.605605,0.505888,-1.974528,4.999670,-7.886281,3.776365],[2.989049,-8.798233,0.135338,2.046829,-5.453620,-6.660341,3.540838],[9.421357,5.259730,4.644146,-7.392231,3.411137,-7.279851,0.623923],[-9.987890,0.146714,-4.237633,-7.104950,1.883375,2.167528,-9.772080],[-2.438360,-9.163470,2.572119,-9.779202,5.299634,8.700082,2.087272],[-7.514311,1.672033,-1.556050,-1.651739,-9.775778,-7.661605,-0.373396],[1.201212,-7.549068,-2.175832,8.749390,-8.391696,2.434941,0.638450]],[[-3.046958,-8.089857,0.534146,-0.496890,8.093064,0.706958,0.441314],[3.954770,7.009839,-7.640285,5.758469,-4.719490,-7.001361,-7.187356],[3.109469,2.788582,-9.790874,-0.372344,1.132223,3.929307,4.274495],[-5.950020,7.475784,-6.992830,-3.573992,-1.313848,9.498097,-2.613408],[6.714626,0.356092,-0.182593,-8.027217,1.259065,0.946914,0.437216],[1.354267,5.712846,-5.079407,1.705320,4.740507,3.160157,1.904022],[7.325344,8.128482,-5.221786,9.835893,3.079970,-9.272712,-5.557970],[4.571482,-5.954071,-3.184027,-7.684518,-9.392167,1.167287,3.534808],[3.638006,5.676830,-6.909726,9.024195,-0.100519,-4.754962,5.607902],[-6.294073,-3.447290,4.107594,-8.326974,-2.278318,-9.817258,-7.206503]],[[-7.993737,0.261072,8.651676,-5.792428,2.747075,-4.811264,-4.961268],[1.680379,6.742836,4.015331,2.717384,1.736473,-9.480166,-9.657825],[-2.417637,-2.776712,-0.911117,6.171076,2.816500,6.107101,4.373410],[-3.405282,-9.318354,8.320441,8.570758,7.330575,-4.289348,-4.750151],[-4.589576,0.921309,1.952969,-6.884864,6.160316,2.692103,3.672054],[6.280260,8.073668,0.342235,0.325397,8.452622,2.377578,1.615945],[2.146726,7.377592,-6.287980,5.578344,-6.744116,1.914663,6.338262],[-2.002985,-0.040655,5.065930,4.349239,6.728978,-1.522061,6.779354],[-4.714082,8.413734,-5.025819,3.202847,3.099318,9.317451,-4.184916],[-7.163717,7.279820,5.834408,-7.591771,7.284176,8.262653,8.119221]],[[-0.713190,4.704786,8.585781,-2.990911,1.301685,2.393443,-5.354059],[9.997468,1.232630,-6.699498,-5.169754,-6.882353,3.525284,1.490410],[0.398267,-5.595241,3.983695,-0.159731,-6.248943,2.816838,-3.165394],[-4.935084,2.606570,-3.387220,4.957880,1.101081,-6.774767,9.329492],[-1.182563,-2.439530,7.233661,2.308351,-6.748354,1.956132,-7.757034],[9.065230,2.208856,-8.113717,8.312086,-9.046500,0.219858,-6.727784],[3.548883,6.046125,-5.074302,7.083654,-7.828993,0.510018,-4.867927],[0.544559,1.273453,-9.083913,4.058382,1.305691,6.728298,0.847733],[0.461600,-7.971028,9.616340,-7.931956,0.845126,1.792922,-1.884651],[-6.056732,-9.120153,-1.142918,-7.633708,-7.438853,9.079020,-7.509013]],[[2.343768,1.699952,-4.370766,-2.241524,-1.784724,2.472720,-6.542766],[0.441287,3.187670,-8.060539,-8.874729,4.001122,1.502396,-5.984971],[1.480470,3.494282,-6.689989,-6.239232,-7.946371,4.217795,9.794555],[-6.048853,8.820950,7.464419,8.324200,-3.608924,-0.815748,0.273562],[-4.667029,-6.406385,-9.607007,-9.313571,-3.805362,2.346114,2.322556],[2.406471,-1.207917,2.829599,-7.219326,-1.362178,-4.577013,2.730011],[1.488321,-8.335481,-6.130852,4.969496,-0.298219,4.955043,-7.003246],[0.832560,4.421911,2.261848,-0.683695,-3.841153,1.281905,-5.501841],[3.041738,-7.330677,-8.061954,-2.489832,9.118755,-3.755132,-5.471204],[-8.013161,-9.086017,-6.977348,1.900283,8.477860,-6.980137,-8.890630]],[[5.819900,5.326771,-1.321036,5.845279,-0.814372,4.927818,3.458891],[5.441317,0.354530,5.870983,8.134600,-4.840975,5.669902,-7.043140],[6.488992,0.005030,-0.927515,3.272147,-9.487112,6.893561,9.658891],[-8.571709,-6.207522,-8.069378,2.219355,-0.370129,6.964663,3.062039],[-6.856953,5.125230,-6.012761,-0.824529,2.776978,0.591565,-4.512562],[0.701565,4.174265,9.405098,0.588713,-1.209001,3.240929,-8.434172],[8.242997,8.821898,6.934845,0.461513,4.194312,-5.326868,4.351577],[-9.897090,7.873105,4.844876,2.439905,-1.692127,-3.558437,7.907310],[2.976728,0.729556,-2.784100,4.685921,2.090450,5.609725,-1.148855],[8.665169,-0.108813,-0.879466,9.809766,-4.591492,-2.187275,-1.809364]],[[2.029662,-9.770275,8.886037,2.757487,-1.881304,4.125048,8.811982],[-0.219400,8.645796,-3.152135,5.937304,2.747071,-8.917113,9.475133],[-6.841056,-5.038352,6.384516,9.661787,-4.376359,-5.092145,1.195462],[-3.527498,1.946966,-8.052345,-9.217238,-5.628169,9.804777,0.841603],[7.293680,-3.334618,-6.808001,-9.634938,8.763492,-2.955428,-6.033015],[-7.941924,-2.965462,5.829281,8.713210,-4.762573,-3.162486,0.960103],[-6.325718,7.678496,8.966034,-1.962935,-6.447435,-0.812789,-3.076024],[6.657531,6.558199,-5.567172,-3.053177,2.609765,4.433049,-0.556729],[-3.235311,-8.240756,-8.254195,2.135336,4.682259,3.045694,-5.302384],[-2.537364,-1.310799,3.494718,6.469435,4.366367,8.219303,-5.635725]],[[2.719541,-6.968698,-0.922173,-4.087480,3.379290,0.151030,7.069256],[-2.546088,-5.812070,-2.199893,1.853846,-1.606333,3.804568,-6.480892],[2.011942,-1.501100,5.449986,-8.569373,2.013925,-4.416768,-6.353242],[4.450132,-1.710398,1.210750,-0.052039,2.269003,-3.208274,1.867459],[-7.565921,-5.224446,-1.384195,-6.326746,-5.217369,0.757174,7.881546],[-0.031920,2.628777,-7.949767,5.993895,-7.933130,0.479934,9.449457],[-0.430447,-1.003244,8.052035,-6.734544,1.301099,4.071865,6.398770],[9.754733,2.116298,8.666762,1.906518,-3.012727,5.080101,3.172578],[2.457087,-5.901127,1.050035,-6.748637,-9.789702,-9.628575,0.987147],[6.970394,-1.045442,9.606124,-9.370209,6.910615,-7.143782,-4.134524]],[[-7.056712,0.545089,1.045501,6.403016,-2.642228,4.358664,-0.468026],[-3.773517,7.742519,0.371187,-1.773477,9.482892,3.768951,-7.562410],[2.076236,8.745115,-6.620008,6.394183,2.638625,-4.626864,-4.486693],[-8.734636,3.441776,-7.340956,-0.868070,7.844817,-5.653324,7.600489],[3.585313,-9.666141,-6.011799,-3.602964,-6.897037,-8.135184,6.290687],[9.965583,-6.602126,-6.687221,-1.788418,9.143938,-7.417750,1.162775],[0.238632,-3.561208,-0.083891,3.008275,4.181043,-0.977312,7.684618],[4.495206,2.490526,-8.994822,-7.662408,-2.987648,8.610417,9.946952],[-6.370053,0.280507,1.963209,-1.397041,-3.074340,-7.155612,4.287367],[4.838996,-6.930273,6.023355,8.941967,6.619558,2.220750,-1.672990]],[[0.668705,-6.869924,-3.021359,-5.758023,-8.774261,5.858654,-3.741590],[-5.200294,-4.573989,8.923388,-5.828364,9.993235,-5.594359,7.197046],[-8.211629,7.610532,5.736636,1.736421,7.320485,2.512395,-4.156983],[-1.102375,-5.026555,-7.345647,-0.715489,7.956632,3.361773,-1.285235],[-3.997806,8.726265,1.510270,-4.926680,-7.887570,-2.831806,7.877581],[5.262755,-7.658197,2.413681,-8.343571,-8.603357,6.696299,1.521984],[-7.137784,-0.119510,8.559938,5.833093,-5.783270,8.875797,4.429340],[-0.908382,4.801212,-6.993203,7.449785,9.154636,0.482061,-8.665320],[7.609245,1.337046,3.207854,-3.772308,7.503019,9.845422,-6.499918],[0.619265,-8.584415,-8.992851,5.310597,-7.620444,-2.851833,4.919901]],[[1.105281,-3.626012,5.719391,-9.107369,-9.006185,-0.877928,-0.038541],[2.554337,-7.654535,-2.959206,6.343470,6.218076,4.344730,6.229508],[2.184235,8.572013,2.986930,0.367283,-1.184613,0.879302,7.001135],[-6.556701,-5.665448,-0.475298,-4.337459,6.809079,4.962777,3.965221],[-9.662749,7.174053,9.691503,-6.690980,-1.193902,8.031445,4.412803],[5.648314,-7.815175,-0.083605,-1.901415,-3.249220,8.001097,-9.336608],[-5.383025,2.889844,-8.248673,-2.733492,-3.796233,-0.007068,-8.052947],[8.833639,7.619791,-6.610496,-4.220556,-4.417580,4.124306,-0.811974],[-1.834071,-0.483442,-5.407090,-2.033671,-4.495835,-8.362042,4.538759],[8.553032,-9.522910,-7.051499,-1.473268,-8.451780,8.373136,1.413043]],[[5.759436,-2.403086,-1.905393,-0.350088,-6.373624,1.377773,7.357338],[0.897341,3.267773,-0.722703,2.677231,6.230475,-1.730681,7.326690],[-9.832878,-0.451710,-7.040179,5.420397,4.670566,2.209560,-4.440674],[-0.385255,-5.096037,8.537849,0.004812,9.796078,-3.837612,-0.060693],[-3.406797,-0.406856,-5.068622,-5.075463,3.000403,4.983159,1.234790],[6.593278,8.235492,1.454716,6.087323,0.377488,5.051145,-1.259402],[2.324863,-2.728414,-8.392715,-1.179710,0.984116,5.659502,3.861684],[-3.759034,1.895644,-5.186388,3.078376,-3.120066,-2.664073,8.319228],[-5.678063,2.752597,-8.034866,-4.869039,3.126033,8.133286,4.091076],[2.781053,2.845546,-6.763052,8.363818,-0.460007,-7.335926,-3.216048]]], dtype = "float64")#candidate|5061|(15, 10, 7)|const|float64
bop_5062 = relay.right_shift(call_5059.astype('uint32'), const_5061.astype('uint32')) # shape=(15, 10, 7)
bop_5065 = relay.right_shift(call_5060.astype('uint32'), const_5061.astype('uint32')) # shape=(15, 10, 7)
output = bop_5062
output2 = bop_5065
func_5072 = relay.Function([], output)
mod['func_5072'] = func_5072
mod = relay.transform.InferType()(mod)
output = func_5072()
func_5073 = relay.Function([], output)
mutated_mod['func_5073'] = func_5073
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3313_call = mod.get_global_var('func_3313')
func_3314_call = mutated_mod.get_global_var('func_3314')
call_5076 = relay.TupleGetItem(func_3313_call(), 0)
call_5077 = relay.TupleGetItem(func_3314_call(), 0)
var_5078 = relay.var("var_5078", dtype = "float64", shape = (11, 10, 7))#candidate|5078|(11, 10, 7)|var|float64
bop_5079 = relay.floor_mod(call_5076.astype('float32'), var_5078.astype('float32')) # shape=(11, 10, 7)
bop_5082 = relay.floor_mod(call_5077.astype('float32'), var_5078.astype('float32')) # shape=(11, 10, 7)
func_4861_call = mod.get_global_var('func_4861')
func_4863_call = mutated_mod.get_global_var('func_4863')
call_5088 = relay.TupleGetItem(func_4861_call(), 1)
call_5089 = relay.TupleGetItem(func_4863_call(), 1)
func_2345_call = mod.get_global_var('func_2345')
func_2347_call = mutated_mod.get_global_var('func_2347')
call_5092 = relay.TupleGetItem(func_2345_call(), 0)
call_5093 = relay.TupleGetItem(func_2347_call(), 0)
bop_5094 = relay.greater_equal(call_5076.astype('bool'), var_5078.astype('bool')) # shape=(11, 10, 7)
bop_5097 = relay.greater_equal(call_5077.astype('bool'), var_5078.astype('bool')) # shape=(11, 10, 7)
func_1228_call = mod.get_global_var('func_1228')
func_1231_call = mutated_mod.get_global_var('func_1231')
const_5104 = relay.const(True, dtype = "bool")#candidate|5104|()|const|bool
var_5105 = relay.var("var_5105", dtype = "bool", shape = (12, 18))#candidate|5105|(12, 18)|var|bool
call_5103 = relay.TupleGetItem(func_1228_call(relay.reshape(const_5104.astype('bool'), []), relay.reshape(var_5105.astype('bool'), [6, 6, 6]), ), 0)
call_5106 = relay.TupleGetItem(func_1231_call(relay.reshape(const_5104.astype('bool'), []), relay.reshape(var_5105.astype('bool'), [6, 6, 6]), ), 0)
var_5112 = relay.var("var_5112", dtype = "float64", shape = (5, 10, 7))#candidate|5112|(5, 10, 7)|var|float64
bop_5113 = relay.floor_mod(call_5076.astype('float32'), var_5112.astype('float32')) # shape=(5, 10, 7)
bop_5116 = relay.floor_mod(call_5077.astype('float32'), var_5112.astype('float32')) # shape=(5, 10, 7)
output = relay.Tuple([bop_5079,call_5088,call_5092,bop_5094,call_5103,const_5104,var_5105,bop_5113,])
output2 = relay.Tuple([bop_5082,call_5089,call_5093,bop_5097,call_5106,const_5104,var_5105,bop_5116,])
func_5129 = relay.Function([var_5078,var_5105,var_5112,], output)
mod['func_5129'] = func_5129
mod = relay.transform.InferType()(mod)
mutated_mod['func_5129'] = func_5129
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5129_call = mutated_mod.get_global_var('func_5129')
var_5131 = relay.var("var_5131", dtype = "float64", shape = (11, 10, 7))#candidate|5131|(11, 10, 7)|var|float64
var_5132 = relay.var("var_5132", dtype = "bool", shape = (12, 18))#candidate|5132|(12, 18)|var|bool
var_5133 = relay.var("var_5133", dtype = "float64", shape = (5, 10, 7))#candidate|5133|(5, 10, 7)|var|float64
call_5130 = func_5129_call(var_5131,var_5132,var_5133,)
output = call_5130
func_5134 = relay.Function([var_5131,var_5132,var_5133,], output)
mutated_mod['func_5134'] = func_5134
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5032_call = mod.get_global_var('func_5032')
func_5033_call = mutated_mod.get_global_var('func_5033')
call_5159 = relay.TupleGetItem(func_5032_call(), 0)
call_5160 = relay.TupleGetItem(func_5033_call(), 0)
uop_5179 = relay.cosh(call_5159.astype('float32')) # shape=(8, 10, 7)
uop_5181 = relay.cosh(call_5160.astype('float32')) # shape=(8, 10, 7)
output = relay.Tuple([uop_5179,])
output2 = relay.Tuple([uop_5181,])
func_5183 = relay.Function([], output)
mod['func_5183'] = func_5183
mod = relay.transform.InferType()(mod)
output = func_5183()
func_5184 = relay.Function([], output)
mutated_mod['func_5184'] = func_5184
mutated_mod = relay.transform.InferType()(mutated_mod)
func_978_call = mod.get_global_var('func_978')
func_980_call = mutated_mod.get_global_var('func_980')
call_5200 = func_978_call()
call_5201 = func_978_call()
uop_5220 = relay.atan(call_5200.astype('float64')) # shape=(8, 10, 7)
uop_5222 = relay.atan(call_5201.astype('float64')) # shape=(8, 10, 7)
output = relay.Tuple([uop_5220,])
output2 = relay.Tuple([uop_5222,])
func_5224 = relay.Function([], output)
mod['func_5224'] = func_5224
mod = relay.transform.InferType()(mod)
mutated_mod['func_5224'] = func_5224
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5224_call = mutated_mod.get_global_var('func_5224')
call_5225 = func_5224_call()
output = call_5225
func_5226 = relay.Function([], output)
mutated_mod['func_5226'] = func_5226
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1682_call = mod.get_global_var('func_1682')
func_1684_call = mutated_mod.get_global_var('func_1684')
call_5266 = relay.TupleGetItem(func_1682_call(), 1)
call_5267 = relay.TupleGetItem(func_1684_call(), 1)
output = call_5266
output2 = call_5267
func_5352 = relay.Function([], output)
mod['func_5352'] = func_5352
mod = relay.transform.InferType()(mod)
output = func_5352()
func_5353 = relay.Function([], output)
mutated_mod['func_5353'] = func_5353
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1362_call = mod.get_global_var('func_1362')
func_1363_call = mutated_mod.get_global_var('func_1363')
call_5386 = relay.TupleGetItem(func_1362_call(), 0)
call_5387 = relay.TupleGetItem(func_1363_call(), 0)
func_4012_call = mod.get_global_var('func_4012')
func_4014_call = mutated_mod.get_global_var('func_4014')
call_5405 = relay.TupleGetItem(func_4012_call(), 0)
call_5406 = relay.TupleGetItem(func_4014_call(), 0)
bop_5423 = relay.divide(call_5405.astype('float64'), relay.reshape(call_5386.astype('float64'), relay.shape_of(call_5405))) # shape=(1, 10, 7)
bop_5426 = relay.divide(call_5406.astype('float64'), relay.reshape(call_5387.astype('float64'), relay.shape_of(call_5406))) # shape=(1, 10, 7)
func_4308_call = mod.get_global_var('func_4308')
func_4310_call = mutated_mod.get_global_var('func_4310')
call_5429 = func_4308_call()
call_5430 = func_4308_call()
output = relay.Tuple([bop_5423,call_5429,])
output2 = relay.Tuple([bop_5426,call_5430,])
func_5431 = relay.Function([], output)
mod['func_5431'] = func_5431
mod = relay.transform.InferType()(mod)
output = func_5431()
func_5432 = relay.Function([], output)
mutated_mod['func_5432'] = func_5432
mutated_mod = relay.transform.InferType()(mutated_mod)
func_786_call = mod.get_global_var('func_786')
func_788_call = mutated_mod.get_global_var('func_788')
call_5436 = func_786_call()
call_5437 = func_786_call()
output = relay.Tuple([call_5436,])
output2 = relay.Tuple([call_5437,])
func_5441 = relay.Function([], output)
mod['func_5441'] = func_5441
mod = relay.transform.InferType()(mod)
output = func_5441()
func_5442 = relay.Function([], output)
mutated_mod['func_5442'] = func_5442
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4771_call = mod.get_global_var('func_4771')
func_4772_call = mutated_mod.get_global_var('func_4772')
call_5496 = relay.TupleGetItem(func_4771_call(), 0)
call_5497 = relay.TupleGetItem(func_4772_call(), 0)
output = relay.Tuple([call_5496,])
output2 = relay.Tuple([call_5497,])
func_5499 = relay.Function([], output)
mod['func_5499'] = func_5499
mod = relay.transform.InferType()(mod)
output = func_5499()
func_5500 = relay.Function([], output)
mutated_mod['func_5500'] = func_5500
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3999_call = mod.get_global_var('func_3999')
func_4001_call = mutated_mod.get_global_var('func_4001')
call_5577 = relay.TupleGetItem(func_3999_call(), 0)
call_5578 = relay.TupleGetItem(func_4001_call(), 0)
uop_5588 = relay.sqrt(call_5577.astype('float64')) # shape=(13, 12, 3)
uop_5590 = relay.sqrt(call_5578.astype('float64')) # shape=(13, 12, 3)
output = relay.Tuple([uop_5588,])
output2 = relay.Tuple([uop_5590,])
func_5598 = relay.Function([], output)
mod['func_5598'] = func_5598
mod = relay.transform.InferType()(mod)
output = func_5598()
func_5599 = relay.Function([], output)
mutated_mod['func_5599'] = func_5599
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1813_call = mod.get_global_var('func_1813')
func_1815_call = mutated_mod.get_global_var('func_1815')
call_5611 = relay.TupleGetItem(func_1813_call(), 0)
call_5612 = relay.TupleGetItem(func_1815_call(), 0)
func_5431_call = mod.get_global_var('func_5431')
func_5432_call = mutated_mod.get_global_var('func_5432')
call_5626 = relay.TupleGetItem(func_5431_call(), 0)
call_5627 = relay.TupleGetItem(func_5432_call(), 0)
func_4654_call = mod.get_global_var('func_4654')
func_4655_call = mutated_mod.get_global_var('func_4655')
call_5631 = func_4654_call()
call_5632 = func_4654_call()
func_4932_call = mod.get_global_var('func_4932')
func_4933_call = mutated_mod.get_global_var('func_4933')
call_5636 = relay.TupleGetItem(func_4932_call(), 0)
call_5637 = relay.TupleGetItem(func_4933_call(), 0)
const_5641 = relay.const([[[6.430487,1.313790,-7.388854,-3.058292,-9.140579,-2.811665,-9.731373],[0.636640,-8.040265,-8.714160,-0.969204,-2.509985,-8.189760,5.188001],[9.357861,-6.972254,5.883166,2.141660,5.140248,-5.488662,3.719125],[7.147486,9.884762,-8.041239,-7.700136,-5.667625,-4.475413,7.328017],[0.942322,4.486717,7.376277,3.825607,1.675204,-3.538608,7.872346],[-6.522675,5.621427,-8.535839,2.695782,-5.434693,3.107582,-5.861872],[6.145478,-7.758633,-8.286224,1.395389,6.111331,-0.016973,8.492593],[4.921760,3.888370,2.169462,3.990638,-7.156572,-4.130455,-0.993507],[8.162463,-0.943770,-7.471298,-6.806174,-4.264604,-0.821797,-3.406487],[-7.690098,-2.439862,-3.571124,0.340611,-2.870704,1.186456,5.474240]],[[-6.984932,2.398524,-3.939180,-7.253428,1.190294,-6.992591,7.547479],[4.247353,0.718277,2.885265,-6.993526,-1.363274,-4.141548,-1.072072],[3.847766,0.409558,-8.838967,0.247860,-1.093164,4.223868,-8.876712],[9.800095,4.934863,-4.655238,-6.303881,-6.319759,1.953443,7.320631],[8.539968,-4.109486,5.401557,-2.207664,-5.625638,7.258754,-9.814969],[-3.037495,-2.297486,-5.502089,3.060350,-2.829117,-4.044345,-6.349651],[6.044331,0.077588,6.477472,1.722866,-5.386528,-0.815184,-9.089644],[1.527047,4.250753,1.221869,-7.986593,9.921035,-3.988312,8.838966],[-7.925580,1.468764,4.921760,-6.280749,-1.203379,-0.109979,-4.344932],[6.802805,-8.169507,5.543409,3.003949,7.761153,-5.906899,4.300398]],[[-5.314282,9.159878,-4.243385,6.977230,-2.602708,-8.583072,8.382976],[4.372741,-9.441595,-5.444587,2.770211,-2.752263,6.243329,-7.625306],[-1.105876,-9.829099,2.184489,9.532135,-2.185104,5.369170,-1.543188],[9.326652,-3.358923,0.050414,-7.681795,5.579454,5.389858,-4.762247],[3.186348,-7.964409,-4.301637,2.227781,3.883733,2.892198,6.678014],[-0.645999,-5.322537,6.031939,-1.914162,7.127338,7.604767,-3.710145],[-4.907320,3.486216,-9.513385,6.372093,-9.651194,-3.614910,9.554444],[-4.786369,-4.570937,8.820041,-6.182480,-4.922562,0.343744,5.668806],[-5.216064,-3.134661,-3.739145,6.794051,1.086704,3.217685,3.785486],[1.476642,3.750444,0.748609,-0.575554,4.616552,1.460275,4.698900]]], dtype = "float64")#candidate|5641|(3, 10, 7)|const|float64
bop_5642 = relay.minimum(call_5636.astype('int32'), const_5641.astype('int32')) # shape=(3, 10, 7)
bop_5645 = relay.minimum(call_5637.astype('int32'), const_5641.astype('int32')) # shape=(3, 10, 7)
output = relay.Tuple([call_5611,call_5626,call_5631,bop_5642,])
output2 = relay.Tuple([call_5612,call_5627,call_5632,bop_5645,])
func_5646 = relay.Function([], output)
mod['func_5646'] = func_5646
mod = relay.transform.InferType()(mod)
mutated_mod['func_5646'] = func_5646
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5646_call = mutated_mod.get_global_var('func_5646')
call_5647 = func_5646_call()
output = call_5647
func_5648 = relay.Function([], output)
mutated_mod['func_5648'] = func_5648
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3003_call = mod.get_global_var('func_3003')
func_3004_call = mutated_mod.get_global_var('func_3004')
call_5660 = relay.TupleGetItem(func_3003_call(), 2)
call_5661 = relay.TupleGetItem(func_3004_call(), 2)
output = relay.Tuple([call_5660,])
output2 = relay.Tuple([call_5661,])
func_5694 = relay.Function([], output)
mod['func_5694'] = func_5694
mod = relay.transform.InferType()(mod)
mutated_mod['func_5694'] = func_5694
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5694_call = mutated_mod.get_global_var('func_5694')
call_5695 = func_5694_call()
output = call_5695
func_5696 = relay.Function([], output)
mutated_mod['func_5696'] = func_5696
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3503_call = mod.get_global_var('func_3503')
func_3505_call = mutated_mod.get_global_var('func_3505')
call_5724 = func_3503_call()
call_5725 = func_3503_call()
output = call_5724
output2 = call_5725
func_5732 = relay.Function([], output)
mod['func_5732'] = func_5732
mod = relay.transform.InferType()(mod)
output = func_5732()
func_5733 = relay.Function([], output)
mutated_mod['func_5733'] = func_5733
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5431_call = mod.get_global_var('func_5431')
func_5432_call = mutated_mod.get_global_var('func_5432')
call_5780 = relay.TupleGetItem(func_5431_call(), 0)
call_5781 = relay.TupleGetItem(func_5432_call(), 0)
output = call_5780
output2 = call_5781
func_5784 = relay.Function([], output)
mod['func_5784'] = func_5784
mod = relay.transform.InferType()(mod)
output = func_5784()
func_5785 = relay.Function([], output)
mutated_mod['func_5785'] = func_5785
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5874 = relay.var("var_5874", dtype = "float64", shape = (2, 11, 10))#candidate|5874|(2, 11, 10)|var|float64
uop_5875 = relay.log(var_5874.astype('float64')) # shape=(2, 11, 10)
func_2816_call = mod.get_global_var('func_2816')
func_2817_call = mutated_mod.get_global_var('func_2817')
call_5878 = relay.TupleGetItem(func_2816_call(), 3)
call_5879 = relay.TupleGetItem(func_2817_call(), 3)
output = relay.Tuple([uop_5875,call_5878,])
output2 = relay.Tuple([uop_5875,call_5879,])
func_5891 = relay.Function([var_5874,], output)
mod['func_5891'] = func_5891
mod = relay.transform.InferType()(mod)
mutated_mod['func_5891'] = func_5891
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5892 = relay.var("var_5892", dtype = "float64", shape = (2, 11, 10))#candidate|5892|(2, 11, 10)|var|float64
func_5891_call = mutated_mod.get_global_var('func_5891')
call_5893 = func_5891_call(var_5892)
output = call_5893
func_5894 = relay.Function([var_5892], output)
mutated_mod['func_5894'] = func_5894
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4139_call = mod.get_global_var('func_4139')
func_4140_call = mutated_mod.get_global_var('func_4140')
call_5896 = relay.TupleGetItem(func_4139_call(), 0)
call_5897 = relay.TupleGetItem(func_4140_call(), 0)
output = relay.Tuple([call_5896,])
output2 = relay.Tuple([call_5897,])
func_5901 = relay.Function([], output)
mod['func_5901'] = func_5901
mod = relay.transform.InferType()(mod)
mutated_mod['func_5901'] = func_5901
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5901_call = mutated_mod.get_global_var('func_5901')
call_5902 = func_5901_call()
output = call_5902
func_5903 = relay.Function([], output)
mutated_mod['func_5903'] = func_5903
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4654_call = mod.get_global_var('func_4654')
func_4655_call = mutated_mod.get_global_var('func_4655')
call_5956 = func_4654_call()
call_5957 = func_4654_call()
func_893_call = mod.get_global_var('func_893')
func_896_call = mutated_mod.get_global_var('func_896')
var_5975 = relay.var("var_5975", dtype = "float64", shape = (2, 560))#candidate|5975|(2, 560)|var|float64
call_5974 = func_893_call(relay.reshape(var_5975.astype('float64'), [16, 10, 7]))
call_5976 = func_893_call(relay.reshape(var_5975.astype('float64'), [16, 10, 7]))
bop_5995 = relay.greater(var_5975.astype('bool'), relay.reshape(call_5974.astype('bool'), relay.shape_of(var_5975))) # shape=(2, 560)
bop_5998 = relay.greater(var_5975.astype('bool'), relay.reshape(call_5976.astype('bool'), relay.shape_of(var_5975))) # shape=(2, 560)
output = relay.Tuple([call_5956,bop_5995,])
output2 = relay.Tuple([call_5957,bop_5998,])
func_6005 = relay.Function([var_5975,], output)
mod['func_6005'] = func_6005
mod = relay.transform.InferType()(mod)
var_6006 = relay.var("var_6006", dtype = "float64", shape = (2, 560))#candidate|6006|(2, 560)|var|float64
output = func_6005(var_6006)
func_6007 = relay.Function([var_6006], output)
mutated_mod['func_6007'] = func_6007
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3615_call = mod.get_global_var('func_3615')
func_3617_call = mutated_mod.get_global_var('func_3617')
call_6036 = relay.TupleGetItem(func_3615_call(), 0)
call_6037 = relay.TupleGetItem(func_3617_call(), 0)
func_1184_call = mod.get_global_var('func_1184')
func_1186_call = mutated_mod.get_global_var('func_1186')
call_6044 = relay.TupleGetItem(func_1184_call(), 1)
call_6045 = relay.TupleGetItem(func_1186_call(), 1)
output = relay.Tuple([call_6036,call_6044,])
output2 = relay.Tuple([call_6037,call_6045,])
func_6056 = relay.Function([], output)
mod['func_6056'] = func_6056
mod = relay.transform.InferType()(mod)
output = func_6056()
func_6057 = relay.Function([], output)
mutated_mod['func_6057'] = func_6057
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3720_call = mod.get_global_var('func_3720')
func_3722_call = mutated_mod.get_global_var('func_3722')
call_6063 = relay.TupleGetItem(func_3720_call(), 0)
call_6064 = relay.TupleGetItem(func_3722_call(), 0)
func_3603_call = mod.get_global_var('func_3603')
func_3605_call = mutated_mod.get_global_var('func_3605')
call_6067 = relay.TupleGetItem(func_3603_call(), 1)
call_6068 = relay.TupleGetItem(func_3605_call(), 1)
func_4427_call = mod.get_global_var('func_4427')
func_4431_call = mutated_mod.get_global_var('func_4431')
const_6076 = relay.const([7,-7,-10,9,9,10,8,4,-1,-6,-2,-6,9,6,6,-5,-1,-5,-1,-6,-4,-4,8,-6,4,-8,10,-3,-3,9,8,-2,8,10,2,2,10,8,3,5,-7,-4,-8,-8,-3,8,-10,-10,6,10,6,3,7,6,-5,-9,-5,-9,-7,-3,1,2,2,10,4,7,1,7,-1,-9,-5,1,1,-4,7,9,-9,-1,-2,8,-2,-7,-4,10,9,-4,-10,-4,-4,-9,6,-1,8,-3,-5,-8,7,-10,10,-10,1,-3,8,-2,-8,5,9,-8,-2,-7,3,3,-1,-4,-5,1,-8,-9,-6,3,3,7,-6,9,7,6,-1,9,-4,-4,7,6,-2,4,-7,-1,4,2,-4,-9,-7,10,-4,2,3,-6,3,-6,7,4,-4,6,-6,8,-1,2,10,8,10,1,-7,-4,8,-9,7,-1,-10,-8,7,-6,-1,-10,10,-6,-9,-6,3,-9,9,8,-1,8,7,-8,2,-7,-4,-3,-5,7,-5,10,-6,-10,7,2,8,9,-7,-4,-1,-9,7,1,2,-6,2,8,-5,4,8,-9,-7,-6,5,1,-10,-3,6,-1,-4,9,4,-4,6,10,4,-2,2,-5,-7,-5,9,-8,-1,-3,-7,-1,-8,8,4,9,1,-1,9,-10,-10,-5,-2,-4,-1,8,-7,-7,-5,-10,6,7,1,2,3,8,6,4,6,1,-3,5,5,9,-8,-8,-10,-4,4,3,-8,1,-4,-2,-3,6,-9,7,3,-5,-7,-7,-10,8,-7,-1,1,8,9,6,10,-9,4,-4,-2,-10,-4,3,-8,-9,-3,-9,-6,-10,7,-8,-7,-8,3,-10,3,-3,6,2,-9,10,-5,6,6,-8,-3,1,-3,3,-3,10,-2,4,1,4,8,1,1,-5,-7,-1,9,-10,-3,10,-5,-1,-3,5,-2,3,-2,-5,6,-1,5,3,6,-8,-8,4,-9,10,-1,-8,-5,2,7,-10,9,8,-5,-10,6,-9,-8,-6,9,1,-3,10,-9,-5,2,-1,-7,7,-2,5,6,-10,9,1,4,-8,8,6,2,4,-5,7,6,5,10,5,6,-2,3,-2,5,7,8,3,-3,4,-3,-1,6,8,6,3,1,6,9,3,8,9,1,5,-8,3,1,-2,-10,4,4,-9,-5,10,-4,9,-3,7,-10,-2,-3,-2,7,-3,4,4,-9,4,-9,-7,7,5,2,-8,4,1,-2,-2,-6,-9,-6,-10,-7,6,-1,9,9,-2,5,5,9,-7,-8,-2,-5,7,-4,-4,-3,9,3,2,3,3,3,7,4,4,2,8,-7,-9,-2,-3,3,-9,-1,8,-6,-2,-1,-10,3,-8,-10,-2,-1,-9,2,-6,-6,-1,7,-1,-2,-1,-1,9,4,9,-6,-2,-10,8,3,-8,2,-3,1,-9,8,8,-2,5,6,10,5,-9,-3,10,4,2,-7,2,-1,-3,-4,10,9,1,-9,9,3,2,6,1,-10,-5,-9,7,9,-1,-2,-8,4,8,10,-9,7,10,-3,-5,-5,-2,-7,-4,-10,1,6,2,-9,-3,-10,-4,6,-2,5,4,6,-4,-6,3,-5,-7,-6,-1,1,-3,-10,8,9,5,-7,-5,4,8,-10,-5,7,-6,-10,7,-2,-4,7,8,-2,-1,-9,-4,6,2,-4,10,8,-4,4,-2,2,-9,-8,7,8,-10,6,2,3,9,9,-9,-7,7,-6,8,-3,-9,3,-2,5,10,4,-5,-5,6,-6,-3,10,4,7,4,-8,2,8,-2,5,-6,5,-6,8,6,-9,-8,-9,4,2,-9,-2,2,4,-5,-10,-8,4,5,9,7,2,-6,-8,8,-10,-2,7,-2,-10,2,10,4,7,8,-5,-4,10,8,2,-10,5,5,-6,5,-6,7,-10,-1,-2,-2,6,4,6,6,1,8,-5,-8,-2,8,-3,-7,6,9,-9,-7,-7,-2,4,-8,-1,-3,-3,-9,5,4,-10,10,-1,6,-1,4,5,-10,-4,-5,9,3,-8,-7,-10,2,4,-6,2,6,6,-3,7,-9,4,-8,-10,4,-5,-3,-4,5,-7,-4,4,6,1,8,-3,-1,-10,1,-3,-10,-6,3,7,9,-2,5,-4,-5,-8,-4,-1,1,7,-3,-9,-9,5,-6,-2,6,-7,-10,-2,5,-10,-3,6,-4,8,-3,2,1,-4,10,9,9,-7,-8,-6,8,-3,-8,-7,-2,-4,1,7,-1,-8,-8,-7,4,8,10,4,-9,-9,6,3,-10,-2,-1,4,1,-3,8,8,3,-5,-7,10,-5,-6,6,8,-6,-8,1,-9,3,-3,-3,4,-6,-8,7,-10,-9,-3,6,3,-2,-9,3,7,-3,9,-1,1,-2,-2,-6,-3,-9,-10,-8,8,-3,4,8,-4,-4,-8,-5,-4,-9,8,-9,2,7,-6,4,6,-3,-5,-4,2,9,-4,-9,3,-7,3,4,-5,-9,8,4,-3,2,8,7,3,9,2,8,-8,-6,10,-8,3,-7,-1,2,-6,1,2,5,6,5,-4,3,7,-2,-1,3,8,-4,-8,10,-5,-9,9,-2,-8,10,9,5,-5,2,-7,-10,4,-3,-2,-8,4,-4,3,-5,-5,4,-10,-2,6,-1,-9,-10,-6,-5,6,7,-3,2,-9,9,-3,1,-2,10,-5,4,1,6,7,-6,-7,2,6,-5,10,-10,-7,-8,-4,-10,9,-2,6,-8,1,5,-8,7,-10,8,6,-2,-1,-5,-9,3,-7,-8,6,7,1,7,-10,3,5,-7,-3,6,-9,10,-6,-4,1,7,8,-7,9,-8,6,-8,-5,4,5,-4,10,2,9,8,-10,7,10,-6,-6,7,-10,-5,-1,-4,8,3,-4,-6,3,-2,1,-10,3,-10,-2,3,2,-6,-4,1,10,3,-9,6,-3,2,8,-4,9,10,-3,-3,8,9,-4,7,4,-8,9,4,10,5,-9,-9,-5,2,-1,-4,-6,2,-3,4,8,-2,-3,8,-6,3,6,-6,10,-10,2,-1,-6,10,1,9,-3,-6,-9,4,-1,-3,-9,-7,-4,10,-10,-6,-4,-8,-8,6,-9,-2,9,6,-10,-7,5,-8,3,-6,-8,1,-7,-7,-3,-8,7,3,-3,6,-7,2,6,-10,7,2,-8,-7,2,-10,9,9,6,-2,10,-2,-2,6,4,9,-4,7,5,-7,-8,-2,-4,2,1,-9,-3,-8,7,5,2,5,6,-9,5,-6,4,-9,8,-8,-7,-10,10,-9,1,-10,-9,-2,4,6,9,2,1,-2,7,8,7,-6,7,3,1,-3,-6,-5,-8,2,4,-5,-7,2,6,-8,9,1,-1,-5,8,3,5,-8,9,-4,-4,-8,3,5,-1,4,10,5,2,4,-8,-5,6,-7,3,-10,8,10,-7,5,-1,-5,6,2,9,-7,-6,-1,-8,-7,-10,10,4,-1,8,-8,-7,-9,4,1,9,4,2,8,-4,3,-4,1,-4,9,-10,-10,-2,10,-10,3,6,-5,-1,-8,-9,-10,-3,-1,5,10,8,2,9,-8,-2,-10,-6,-7,-1,-5,-8,-1,6,-10,1,6,-2,-9,-10,-1,8,1,10,5,4,2,-3,-3,-5,9,4,7,-4,6,5,-8,-3,-1,8,-4,3,4,-7,6,1,9,-1,-1,5,10,-7,5,7,2,-1,10,10,-2,1,10,3,7,-10,-10,-8,-6,-9,2,6,-3,-10,-3,-7,9,4,9,-1,-3,7,-5,-4,-9,-2,8,4,-9,4,-5,8,8,3,3,-6,-6,-2,9,4,8,8,7,7,8,-7,-2,-9,1,8,8,10,10,-9,-7,-6,2,-1,9,5,1,2,-9,2,1,-3,7,-6,-7,-5,-9,-1,8,-10,-2,-4,-8,-4,5,8,9,6,-7,2,-9,-10,1,-9,-3,-4,5,6,2,10,-10,-5,10,-7,-6,-10,-8,-3,-10,-8,3,-8,9,10,5,-9,10,6,-5,-6,-1,-6,-9,-10,3,-3,-7,5,-6,7,6,-8,2,-8,-6,10,3,8,6,2,-3,8,-6,8,-9,-3,3,-3,7,1,-8,-3,-6,-4,1,4,8,6,4,-6,-10,-7,-10,7,-2,1,9,10,6,-10,9,-3,-5,-3,-4,1,5,9,8,3,6,9,-9,-3,-6,-2,-6,-2,-5,-9,3,4,-7,3,9,-7,-9,10,-9,5,-5,-10,3,3,6,-6,1,-7,1,6,-6,-4,-1,-5,7,-6,6,-7,-8,4,2,3,9,4,1,-1,4,4,-10,-8,8,3,-7,-2,1,-9,7,8,3,10,-5,3,-6,7,-5,-7,6,-6,2,-8,-3,8,10,-9,-2,-10,-8,6,-7,4,-7,-6,10,-6,9,7,-2,3,-3,-6,1,-9,9,5,-8,10,9,-8,8,-1,-9,-1,3,4,8,10,8,-8,-7,-2,1,10,-10,9,4,4,-10,4,-1,-1,10,8,-3,2,-9,-4,-8,8,-5,-5,9,-2,-8,-2,7,-8,5,3,-2,7,-1,2,7,7,-7,1,-4,4,-1,1,-10,-5,6,-2,-4,10,9,-5,9,8,-4,3,2,-2,-4,3,1,-8,5,-5,-8,-2,-4,3,9,-3,-10,3,-6,7,7,3,-7,6,10,10,-6,-4,1,8,-1,-3,7,-3,2,-2,-9,8,5,-7,-7,2,-1,-6,6,-10,-4,7,2,6,-9,2,3,-5,6,-3,1,8,4,2,-9,6,-9,7,-3,3,1,-4,-7,-3,3,6,1,-3,10,-4,2,-2,-5,2,2,-1,-5,7,4,-5,-8,-10,-6,4,10,3,-10,-7,-4,2,-6,-8,8,3,7,-10,8,6,2,-10,-9,-6,-7,-3,-4,8,-8,1,2,-1,-3,-8,8,6,5,2,-8,5,3,-8,-3,-7,3,-10,-5,7,-1,-8,8,-8,-10,1,1,5,3,1,10,-10,7,9,10,-9,-1,-9,2,6,-8,-10,-10,-2,-8,1,-2,-2,-1,-10,-9,4,-5,2,10,7,-2,6,-2,9,3,2,2,-4,-7,8,3,-5,-4,-4,-5,-4,-10,3,1,5,-3,-1,9,8,10,-1,7,-1,-4,-7,8,8,-2,-1,2,-8,3,9,-5,-9,2,-9,-7,-10,-5,-2,8,2,-2,4,-9,10,-4,-5,6,5,3,9,-6,2,5,6,-5,-5,3,10,4,5,9,-6,-3,4,-6,-7,1,-8,3,-2,-4,3,8,1,-5,9,-6,8,-7,5,-5,-8,2,-7,-1,3,-7,3,10,-7,-10,-9,-3,-8,-1,-4,5,-7,1,2,-2,-7,1,-6,4,8,-2,-2,5,-5,-5,7,4,-9,-7,-5,5,-9,2,9,-1,-3,5,-7,-7,1,3,2,-3,2,-1,2,-1,-4,6,-10,-2,9,-10,10,-1,9,-10,-1,3,4,2,-2,6,-7,-3,1,-2,5,-9,9,-7,-3,-1,-1,-10,8,10,5,8,-10,9,-8,-2,-2,9,10,-10,-6,-9,-5,1,-1,3,-9,-7,4,10,8,-7,4,2,6,9,4,9,7,3,1,3,1,-10,-8,8,-2,-4,1,-2,-1,8,-7,5,7,1,5,9,-3,-10,-9,5,-3,10,9,10,-1,5,3,3,9,-7,5,2,-5,1,1,5,-8,-8,7,7,6,7,4,-1,-1,9,6,-7,4,-7,3,8,7,8,-4,1,7,-1,-7,3,-3,-5,2,10,-10,-10,8,-2,-4,10,-5,7,-10,-2,3,4,-8,2,1,-5,-10,-1,2,7,8,-5,-10,-5,-3,5,2,9,-8,-9,7,-9,-10,-9,-8,2,4,8,-10,-4,10,10,-1,-4,-3,8,-9,-9,9,-3,4,2,-3,-4,3,-7,-9,7,-5,7,-5,8,-3,-5,4,-1,3,8,4,-8,-10,-10,-1,9,7,6,2,-8,-2,1,-10,8,-6,9,10,8,4,1,6,-5,-5,-7,-8,5,-5,-10,9,-8,4,-6,7,-6,-4,8,4,-3,8,-9,-4,-6,9,5,4,4,3,4,-5,-10,-5,7,6,2,3,-8,-4,-7,2,2,5,6,7,7,10,9,10,9,-9,9,10,8,-6,10,6,6,9,1,-3,6,-10,3,4,-7,2,-4,5,-10,-6,9,-2,7,-8,-9,-1,-6,-1,-10,-10,-7,-2,7,-2,8,-7,2,-1,-3,9,10,9,10,7,-7,8,-1,5,-10,7,5,-3,3,5,-3,-2,-4,-8,-2,-4,-2,-3,5,-3,4,-10,-1,-5,-9,4,5,-4,6,-3,7,-7,2,-3,9,9,-5,-4,4,-5,-2,-4,5,-7,-9,1,-10,6,2,8,-5,-7,-7,-9,2,5,-2,-10,6,10,-8,3,9,9,-9], dtype = "int8")#candidate|6076|(2400,)|const|int8
call_6075 = relay.TupleGetItem(func_4427_call(relay.reshape(const_6076.astype('int8'), [15, 16, 10]), relay.reshape(const_6076.astype('int8'), [15, 16, 10]), ), 0)
call_6077 = relay.TupleGetItem(func_4431_call(relay.reshape(const_6076.astype('int8'), [15, 16, 10]), relay.reshape(const_6076.astype('int8'), [15, 16, 10]), ), 0)
bop_6087 = relay.right_shift(const_6076.astype('int8'), relay.reshape(call_6075.astype('int8'), relay.shape_of(const_6076))) # shape=(2400,)
bop_6090 = relay.right_shift(const_6076.astype('int8'), relay.reshape(call_6077.astype('int8'), relay.shape_of(const_6076))) # shape=(2400,)
output = relay.Tuple([call_6063,call_6067,bop_6087,])
output2 = relay.Tuple([call_6064,call_6068,bop_6090,])
func_6116 = relay.Function([], output)
mod['func_6116'] = func_6116
mod = relay.transform.InferType()(mod)
output = func_6116()
func_6117 = relay.Function([], output)
mutated_mod['func_6117'] = func_6117
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3067_call = mod.get_global_var('func_3067')
func_3069_call = mutated_mod.get_global_var('func_3069')
call_6118 = func_3067_call()
call_6119 = func_3067_call()
output = relay.Tuple([call_6118,])
output2 = relay.Tuple([call_6119,])
func_6122 = relay.Function([], output)
mod['func_6122'] = func_6122
mod = relay.transform.InferType()(mod)
output = func_6122()
func_6123 = relay.Function([], output)
mutated_mod['func_6123'] = func_6123
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2913_call = mod.get_global_var('func_2913')
func_2914_call = mutated_mod.get_global_var('func_2914')
call_6134 = relay.TupleGetItem(func_2913_call(), 0)
call_6135 = relay.TupleGetItem(func_2914_call(), 0)
func_2831_call = mod.get_global_var('func_2831')
func_2833_call = mutated_mod.get_global_var('func_2833')
call_6153 = func_2831_call()
call_6154 = func_2831_call()
bop_6167 = relay.greater_equal(call_6153.astype('bool'), relay.reshape(call_6134.astype('bool'), relay.shape_of(call_6153))) # shape=(1, 10, 7)
bop_6170 = relay.greater_equal(call_6154.astype('bool'), relay.reshape(call_6135.astype('bool'), relay.shape_of(call_6154))) # shape=(1, 10, 7)
output = bop_6167
output2 = bop_6170
func_6179 = relay.Function([], output)
mod['func_6179'] = func_6179
mod = relay.transform.InferType()(mod)
output = func_6179()
func_6180 = relay.Function([], output)
mutated_mod['func_6180'] = func_6180
mutated_mod = relay.transform.InferType()(mutated_mod)
func_978_call = mod.get_global_var('func_978')
func_980_call = mutated_mod.get_global_var('func_980')
call_6184 = func_978_call()
call_6185 = func_978_call()
uop_6186 = relay.sigmoid(call_6184.astype('float64')) # shape=(8, 10, 7)
uop_6188 = relay.sigmoid(call_6185.astype('float64')) # shape=(8, 10, 7)
output = uop_6186
output2 = uop_6188
func_6207 = relay.Function([], output)
mod['func_6207'] = func_6207
mod = relay.transform.InferType()(mod)
output = func_6207()
func_6208 = relay.Function([], output)
mutated_mod['func_6208'] = func_6208
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6251 = relay.var("var_6251", dtype = "int16", shape = (7, 13, 7))#candidate|6251|(7, 13, 7)|var|int16
const_6252 = relay.const([[[-9,-7,3,7,9,-8,6],[10,-9,-3,-9,3,-6,9],[4,9,10,-6,-5,7,-4],[-8,10,-6,-7,7,3,1],[5,-3,7,-10,10,-2,-9],[-7,-3,-5,-5,3,2,-9],[9,4,-9,3,-9,-4,1],[1,4,-6,7,1,4,5],[3,-3,-3,8,-4,-1,-6],[-9,1,-8,2,-4,-5,10],[-7,7,10,-4,-7,-6,-1],[-3,3,5,-5,-1,-7,5],[-9,3,-3,-8,10,-5,-2]],[[7,9,-2,1,-8,-2,-3],[-3,-1,5,-8,6,-1,-8],[5,-7,-5,2,1,-7,-10],[-6,-6,-3,-1,4,-9,9],[-9,4,7,6,-10,-1,2],[9,-5,-6,6,-1,-10,-10],[5,8,-6,-8,6,7,2],[6,-6,-7,2,3,7,-6],[-8,5,-6,7,-5,-5,1],[-6,9,-7,9,-5,1,10],[1,4,-4,5,2,-4,-9],[8,2,-2,-6,-6,-5,7],[-9,6,2,-3,9,-10,2]],[[-9,-4,10,9,-9,-3,1],[5,5,-4,6,-3,4,-7],[-4,-10,-1,-8,-10,-4,-5],[3,-4,3,-2,4,-2,-9],[8,5,-6,-3,-7,7,-9],[8,8,9,10,5,8,2],[-4,-10,-6,2,-8,-6,-7],[4,-3,-7,4,5,7,-5],[-9,7,-7,-6,10,4,3],[4,-2,6,-3,-10,-1,2],[-5,5,6,-7,-8,6,1],[5,8,5,-10,-9,6,-1],[-4,-6,-9,-3,2,-8,3]],[[8,1,-7,5,-3,3,-7],[1,5,-10,-4,-2,6,7],[4,-7,3,6,-9,1,5],[3,-2,-1,-10,10,1,-3],[5,10,-1,2,7,3,10],[-7,8,8,-6,9,-1,4],[-10,-9,-6,-4,8,-10,-5],[-10,-8,9,-8,-8,-7,4],[5,-10,-2,1,1,-6,3],[-3,-2,-1,-9,6,7,-4],[10,-4,4,9,-4,8,6],[-4,4,7,-8,4,-1,7],[-2,-4,-8,7,-2,-10,7]],[[-10,3,-3,-1,3,-9,9],[5,9,6,2,-2,8,5],[10,7,6,6,-9,10,-6],[-6,10,-2,3,-2,4,5],[-8,1,4,-10,9,10,10],[-9,8,3,1,8,-5,-10],[-6,10,-9,4,10,6,7],[-9,-5,-7,-6,-4,6,-2],[10,-10,10,10,1,-3,-7],[2,6,-5,2,5,-2,6],[8,-9,-3,-7,-8,-10,-3],[2,3,-6,-5,-9,10,-4],[4,-2,-9,5,9,5,-10]],[[-10,10,-5,-8,-2,-1,-10],[7,-5,6,-3,8,7,1],[7,-6,6,-1,-9,-1,1],[-1,5,7,-7,7,7,10],[-3,7,2,-8,-1,9,-7],[-10,4,-7,9,9,6,8],[9,1,-8,-3,4,-9,2],[5,-8,-8,-8,1,1,-5],[-4,-2,2,-9,2,1,5],[10,-7,9,-4,10,-3,1],[-1,-1,-9,1,6,2,-2],[-3,4,-8,-10,10,3,-8],[-1,10,-5,-8,-4,6,9]],[[-10,-4,7,8,-10,-2,4],[10,-2,1,4,5,-10,1],[8,7,-10,-3,-6,-4,-9],[7,-2,7,10,7,4,6],[-10,-4,-8,8,-10,4,-2],[-6,-5,-6,2,2,-3,-5],[-3,-3,-9,-3,7,-2,-4],[7,-7,7,-6,8,10,9],[2,-10,-5,8,-3,-1,-4],[-9,3,2,-1,-1,-6,4],[-10,-9,6,-7,-4,7,6],[8,-2,8,-7,3,-3,-4],[3,5,4,8,-3,3,10]]], dtype = "int16")#candidate|6252|(7, 13, 7)|const|int16
bop_6253 = relay.bitwise_or(var_6251.astype('int16'), relay.reshape(const_6252.astype('int16'), relay.shape_of(var_6251))) # shape=(7, 13, 7)
output = bop_6253
output2 = bop_6253
func_6257 = relay.Function([var_6251,], output)
mod['func_6257'] = func_6257
mod = relay.transform.InferType()(mod)
mutated_mod['func_6257'] = func_6257
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6258 = relay.var("var_6258", dtype = "int16", shape = (7, 13, 7))#candidate|6258|(7, 13, 7)|var|int16
func_6257_call = mutated_mod.get_global_var('func_6257')
call_6259 = func_6257_call(var_6258)
output = call_6259
func_6260 = relay.Function([var_6258], output)
mutated_mod['func_6260'] = func_6260
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5901_call = mod.get_global_var('func_5901')
func_5903_call = mutated_mod.get_global_var('func_5903')
call_6318 = relay.TupleGetItem(func_5901_call(), 0)
call_6319 = relay.TupleGetItem(func_5903_call(), 0)
func_6122_call = mod.get_global_var('func_6122')
func_6123_call = mutated_mod.get_global_var('func_6123')
call_6325 = relay.TupleGetItem(func_6122_call(), 0)
call_6326 = relay.TupleGetItem(func_6123_call(), 0)
output = relay.Tuple([call_6318,call_6325,])
output2 = relay.Tuple([call_6319,call_6326,])
func_6330 = relay.Function([], output)
mod['func_6330'] = func_6330
mod = relay.transform.InferType()(mod)
output = func_6330()
func_6331 = relay.Function([], output)
mutated_mod['func_6331'] = func_6331
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6487 = relay.var("var_6487", dtype = "float32", shape = (8, 2, 3))#candidate|6487|(8, 2, 3)|var|float32
uop_6488 = relay.sinh(var_6487.astype('float32')) # shape=(8, 2, 3)
output = uop_6488
output2 = uop_6488
func_6491 = relay.Function([var_6487,], output)
mod['func_6491'] = func_6491
mod = relay.transform.InferType()(mod)
mutated_mod['func_6491'] = func_6491
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6492 = relay.var("var_6492", dtype = "float32", shape = (8, 2, 3))#candidate|6492|(8, 2, 3)|var|float32
func_6491_call = mutated_mod.get_global_var('func_6491')
call_6493 = func_6491_call(var_6492)
output = call_6493
func_6494 = relay.Function([var_6492], output)
mutated_mod['func_6494'] = func_6494
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5183_call = mod.get_global_var('func_5183')
func_5184_call = mutated_mod.get_global_var('func_5184')
call_6573 = relay.TupleGetItem(func_5183_call(), 0)
call_6574 = relay.TupleGetItem(func_5184_call(), 0)
uop_6584 = relay.asin(call_6573.astype('float32')) # shape=(8, 10, 7)
uop_6586 = relay.asin(call_6574.astype('float32')) # shape=(8, 10, 7)
output = uop_6584
output2 = uop_6586
func_6587 = relay.Function([], output)
mod['func_6587'] = func_6587
mod = relay.transform.InferType()(mod)
mutated_mod['func_6587'] = func_6587
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6587_call = mutated_mod.get_global_var('func_6587')
call_6588 = func_6587_call()
output = call_6588
func_6589 = relay.Function([], output)
mutated_mod['func_6589'] = func_6589
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4139_call = mod.get_global_var('func_4139')
func_4140_call = mutated_mod.get_global_var('func_4140')
call_6590 = relay.TupleGetItem(func_4139_call(), 0)
call_6591 = relay.TupleGetItem(func_4140_call(), 0)
const_6629 = relay.const([[[8.948707,-8.876282,-8.371955,1.506807,0.127988,1.156908,-3.855610],[-0.727432,-4.937305,5.380330,-6.304671,-1.971437,8.084623,-8.929490],[5.575969,9.032571,-6.783091,0.293451,-9.111477,-9.921810,-1.533402],[-1.856574,4.156042,9.428779,3.215155,-4.078773,6.830298,3.759611],[-9.513439,3.741881,-7.730871,-7.924209,-3.212695,0.321531,0.830343],[-2.791876,-9.794370,-1.858860,-2.396651,9.733847,-9.480723,8.452068],[1.105677,-9.885739,-8.294280,3.038628,5.870588,4.668590,6.422840],[-6.051872,-0.089563,-1.591365,7.253383,9.519257,-9.023865,4.912307],[-4.449821,-6.276449,-7.350487,1.263573,-9.700993,6.560063,4.673413],[-1.693449,8.875692,8.293361,6.412649,-9.225094,-3.732452,-6.619659]]], dtype = "float64")#candidate|6629|(1, 10, 7)|const|float64
bop_6630 = relay.add(call_6590.astype('uint32'), relay.reshape(const_6629.astype('uint32'), relay.shape_of(call_6590))) # shape=(1, 10, 7)
bop_6633 = relay.add(call_6591.astype('uint32'), relay.reshape(const_6629.astype('uint32'), relay.shape_of(call_6591))) # shape=(1, 10, 7)
output = bop_6630
output2 = bop_6633
func_6653 = relay.Function([], output)
mod['func_6653'] = func_6653
mod = relay.transform.InferType()(mod)
mutated_mod['func_6653'] = func_6653
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6653_call = mutated_mod.get_global_var('func_6653')
call_6654 = func_6653_call()
output = call_6654
func_6655 = relay.Function([], output)
mutated_mod['func_6655'] = func_6655
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5694_call = mod.get_global_var('func_5694')
func_5696_call = mutated_mod.get_global_var('func_5696')
call_6734 = relay.TupleGetItem(func_5694_call(), 0)
call_6735 = relay.TupleGetItem(func_5696_call(), 0)
func_1813_call = mod.get_global_var('func_1813')
func_1815_call = mutated_mod.get_global_var('func_1815')
call_6740 = relay.TupleGetItem(func_1813_call(), 0)
call_6741 = relay.TupleGetItem(func_1815_call(), 0)
uop_6747 = relay.atan(call_6740.astype('float32')) # shape=(1, 10, 7)
uop_6749 = relay.atan(call_6741.astype('float32')) # shape=(1, 10, 7)
bop_6760 = relay.mod(uop_6747.astype('float64'), relay.reshape(call_6734.astype('float64'), relay.shape_of(uop_6747))) # shape=(1, 10, 7)
bop_6763 = relay.mod(uop_6749.astype('float64'), relay.reshape(call_6735.astype('float64'), relay.shape_of(uop_6749))) # shape=(1, 10, 7)
bop_6768 = relay.multiply(uop_6747.astype('int8'), relay.reshape(bop_6760.astype('int8'), relay.shape_of(uop_6747))) # shape=(1, 10, 7)
bop_6771 = relay.multiply(uop_6749.astype('int8'), relay.reshape(bop_6763.astype('int8'), relay.shape_of(uop_6749))) # shape=(1, 10, 7)
func_2953_call = mod.get_global_var('func_2953')
func_2954_call = mutated_mod.get_global_var('func_2954')
call_6780 = func_2953_call()
call_6781 = func_2953_call()
func_2560_call = mod.get_global_var('func_2560')
func_2565_call = mutated_mod.get_global_var('func_2565')
var_6792 = relay.var("var_6792", dtype = "uint8", shape = (630,))#candidate|6792|(630,)|var|uint8
call_6791 = relay.TupleGetItem(func_2560_call(relay.reshape(call_6740.astype('uint8'), [10, 1, 7]), relay.reshape(var_6792.astype('uint8'), [10, 9, 7]), relay.reshape(var_6792.astype('bool'), [10, 9, 7]), ), 1)
call_6793 = relay.TupleGetItem(func_2565_call(relay.reshape(call_6740.astype('uint8'), [10, 1, 7]), relay.reshape(var_6792.astype('uint8'), [10, 9, 7]), relay.reshape(var_6792.astype('bool'), [10, 9, 7]), ), 1)
output = relay.Tuple([bop_6768,call_6780,call_6791,var_6792,])
output2 = relay.Tuple([bop_6771,call_6781,call_6793,var_6792,])
func_6800 = relay.Function([var_6792,], output)
mod['func_6800'] = func_6800
mod = relay.transform.InferType()(mod)
var_6801 = relay.var("var_6801", dtype = "uint8", shape = (630,))#candidate|6801|(630,)|var|uint8
output = func_6800(var_6801)
func_6802 = relay.Function([var_6801], output)
mutated_mod['func_6802'] = func_6802
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6847 = relay.var("var_6847", dtype = "bool", shape = (14, 11, 7))#candidate|6847|(14, 11, 7)|var|bool
var_6848 = relay.var("var_6848", dtype = "bool", shape = (14, 11, 7))#candidate|6848|(14, 11, 7)|var|bool
bop_6849 = relay.logical_or(var_6847.astype('bool'), relay.reshape(var_6848.astype('bool'), relay.shape_of(var_6847))) # shape=(14, 11, 7)
output = bop_6849
output2 = bop_6849
func_6861 = relay.Function([var_6847,var_6848,], output)
mod['func_6861'] = func_6861
mod = relay.transform.InferType()(mod)
mutated_mod['func_6861'] = func_6861
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6861_call = mutated_mod.get_global_var('func_6861')
var_6863 = relay.var("var_6863", dtype = "bool", shape = (14, 11, 7))#candidate|6863|(14, 11, 7)|var|bool
var_6864 = relay.var("var_6864", dtype = "bool", shape = (14, 11, 7))#candidate|6864|(14, 11, 7)|var|bool
call_6862 = func_6861_call(var_6863,var_6864,)
output = call_6862
func_6865 = relay.Function([var_6863,var_6864,], output)
mutated_mod['func_6865'] = func_6865
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5732_call = mod.get_global_var('func_5732')
func_5733_call = mutated_mod.get_global_var('func_5733')
call_6929 = func_5732_call()
call_6930 = func_5732_call()
output = relay.Tuple([call_6929,])
output2 = relay.Tuple([call_6930,])
func_6936 = relay.Function([], output)
mod['func_6936'] = func_6936
mod = relay.transform.InferType()(mod)
output = func_6936()
func_6937 = relay.Function([], output)
mutated_mod['func_6937'] = func_6937
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6983 = relay.var("var_6983", dtype = "int16", shape = (13, 15, 4))#candidate|6983|(13, 15, 4)|var|int16
var_6984 = relay.var("var_6984", dtype = "int16", shape = (13, 15, 4))#candidate|6984|(13, 15, 4)|var|int16
bop_6985 = relay.equal(var_6983.astype('bool'), relay.reshape(var_6984.astype('bool'), relay.shape_of(var_6983))) # shape=(13, 15, 4)
func_5598_call = mod.get_global_var('func_5598')
func_5599_call = mutated_mod.get_global_var('func_5599')
call_6988 = relay.TupleGetItem(func_5598_call(), 0)
call_6989 = relay.TupleGetItem(func_5599_call(), 0)
func_2584_call = mod.get_global_var('func_2584')
func_2586_call = mutated_mod.get_global_var('func_2586')
const_6995 = relay.const([2.092630,-7.003611,-3.017934,-7.822274,-7.214094,4.872997,5.435213,-9.043540,7.521292,5.275362,-9.396436,-1.872601,7.440063,1.929019,8.694447,3.382260,-3.761397,-6.172110,4.354149,3.158610,9.600342,9.326012,3.527682,-7.460400,1.956523,-4.000648,6.984594,1.411316,-9.919327,2.425884,6.519414,-0.380152,-4.095930,-9.009009,7.202685,9.978049,6.601000,0.452545,-3.128048,2.146286,-6.337450,9.912820,-4.454031,-4.656790,-6.338385,8.269936,9.511308,2.557776,-2.031349,5.724065,9.306411,-1.038182,4.796866,0.453107,-3.723691,0.528415,-6.764884,-1.474501,7.235747,1.665813,-5.981275,0.550353,-2.671013,6.736095,8.650880,-1.390733,3.696367,4.852347,8.709308,-6.408377,7.180602,-1.349800,2.717905,5.500659,3.097394,-5.897556,7.153045,6.766786,-3.749071,-5.024116,7.177376,-2.600289,-1.032911,6.457044,-1.219942,9.003178,-1.036022,1.149744,-9.601722,-5.913456,-1.249834,2.805260,8.098934,2.796767,3.116285,6.977564,8.436064,7.376887,6.749456,3.839194,-8.314372,0.358749,-1.372236,-0.612586,4.780621,-9.743534,4.107904,7.753285,5.893677,-1.332672,7.365201,2.141376,7.500317,-7.932067,-0.401012,-6.325545,-2.593186,4.670859,5.440206,9.848881,-6.698636,-3.227968,2.231328,-0.498994,-2.910169,5.964539,-8.147220,-4.113337,2.962597,-1.337949,-8.289742,-9.575201,3.382839,8.272375,-4.360669,7.584066,5.970484,-3.215891,-7.906525,7.040446,-1.458105,-1.682810,8.397336,-9.002988,5.331405,-9.445486,-7.039766,-2.420592,-6.910585,-2.770687,-1.423963,-3.731606,7.671533,-2.122704,9.053669,-6.326670,-8.066929,2.466854,-6.139974,-8.434421,-6.908223,8.041398,6.490085,-1.253085,-7.766939,-0.567559,1.454984,-6.938944,-2.232653,-8.790754,-8.574132,0.715498,1.349328,-2.683358,-8.526508,7.787561,-5.422489,8.740064,-6.524862,6.600096,-7.765321,0.409986,-6.189485,-2.676811,-1.353577,9.076137,-6.635950,4.481578,3.246777,4.721074,-2.158461,-9.261928,5.690317,-6.774388,-0.772654,-0.697840,-1.778025,-9.897688,1.442970,9.867407,6.279084,-2.313518,0.839740,9.182477,-8.732988,-8.788031,0.883357,0.790733,0.440521,-3.130287,2.778586,-4.595653,-0.406571,5.239971,-5.504737,0.743015,6.632284,7.627436,1.668178,6.516255,2.169341,-4.190089,-8.971104,4.019588,0.478254,8.485404,6.099220,-0.269982,-5.879115,8.821965,-3.038216,-8.135975,8.159081,-3.582727,-5.289356,-9.244896,-3.775642,-9.701860,-3.663212,-5.149181,8.418789,-2.779156,4.854534,-3.390965,-7.309589,-7.210702,-6.387287,-3.350280,-4.778018,-1.677516,-9.938166,-7.812266,0.145010,-1.920938,4.545180,-4.663061,-8.484517,1.010604,3.480725,-0.984877,9.462557,0.092161,5.310138,7.205585,-8.746054,0.521902,-8.772046,4.504639,-4.949379,7.786155,-7.302167,4.801538,8.965670,5.049166,-5.628529,-9.533715,-8.652672,-1.971891,-7.288115,-8.464819,0.665458,1.228350,4.000856,-5.773762,-4.746021,9.628396,5.372351,-2.371128,1.634266,4.155168,6.836650,-8.074774,1.529675,5.603012,-5.807230,0.245291,5.379588,-7.895592,0.291171,8.294666,-4.778419,4.109442,0.926679,-2.894411,7.061359,-9.085927,-1.753266,-3.257634,5.713322,7.922442,4.656902,-2.955768,5.781891,-1.527443,5.539421,4.504891,-6.812250,6.402563,-9.435400,5.653714,2.863298,-4.780459,-9.957279,-0.830201], dtype = "float64")#candidate|6995|(324,)|const|float64
call_6994 = relay.TupleGetItem(func_2584_call(relay.reshape(const_6995.astype('float64'), [9, 3, 12])), 1)
call_6996 = relay.TupleGetItem(func_2586_call(relay.reshape(const_6995.astype('float64'), [9, 3, 12])), 1)
func_3516_call = mod.get_global_var('func_3516')
func_3518_call = mutated_mod.get_global_var('func_3518')
var_7007 = relay.var("var_7007", dtype = "float64", shape = (25, 6))#candidate|7007|(25, 6)|var|float64
call_7006 = func_3516_call(relay.reshape(var_7007.astype('float64'), [5, 15, 2]))
call_7008 = func_3516_call(relay.reshape(var_7007.astype('float64'), [5, 15, 2]))
func_3940_call = mod.get_global_var('func_3940')
func_3941_call = mutated_mod.get_global_var('func_3941')
call_7012 = relay.TupleGetItem(func_3940_call(), 0)
call_7013 = relay.TupleGetItem(func_3941_call(), 0)
func_3831_call = mod.get_global_var('func_3831')
func_3833_call = mutated_mod.get_global_var('func_3833')
var_7018 = relay.var("var_7018", dtype = "int64", shape = (768,))#candidate|7018|(768,)|var|int64
call_7017 = relay.TupleGetItem(func_3831_call(relay.reshape(var_7018.astype('int64'), [768,])), 2)
call_7019 = relay.TupleGetItem(func_3833_call(relay.reshape(var_7018.astype('int64'), [768,])), 2)
output = relay.Tuple([bop_6985,call_6988,call_6994,const_6995,call_7006,var_7007,call_7012,call_7017,var_7018,])
output2 = relay.Tuple([bop_6985,call_6989,call_6996,const_6995,call_7008,var_7007,call_7013,call_7019,var_7018,])
func_7020 = relay.Function([var_6983,var_6984,var_7007,var_7018,], output)
mod['func_7020'] = func_7020
mod = relay.transform.InferType()(mod)
var_7021 = relay.var("var_7021", dtype = "int16", shape = (13, 15, 4))#candidate|7021|(13, 15, 4)|var|int16
var_7022 = relay.var("var_7022", dtype = "int16", shape = (13, 15, 4))#candidate|7022|(13, 15, 4)|var|int16
var_7023 = relay.var("var_7023", dtype = "float64", shape = (25, 6))#candidate|7023|(25, 6)|var|float64
var_7024 = relay.var("var_7024", dtype = "int64", shape = (768,))#candidate|7024|(768,)|var|int64
output = func_7020(var_7021,var_7022,var_7023,var_7024,)
func_7025 = relay.Function([var_7021,var_7022,var_7023,var_7024,], output)
mutated_mod['func_7025'] = func_7025
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1813_call = mod.get_global_var('func_1813')
func_1815_call = mutated_mod.get_global_var('func_1815')
call_7034 = relay.TupleGetItem(func_1813_call(), 0)
call_7035 = relay.TupleGetItem(func_1815_call(), 0)
output = relay.Tuple([call_7034,])
output2 = relay.Tuple([call_7035,])
func_7036 = relay.Function([], output)
mod['func_7036'] = func_7036
mod = relay.transform.InferType()(mod)
mutated_mod['func_7036'] = func_7036
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7036_call = mutated_mod.get_global_var('func_7036')
call_7037 = func_7036_call()
output = call_7037
func_7038 = relay.Function([], output)
mutated_mod['func_7038'] = func_7038
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3503_call = mod.get_global_var('func_3503')
func_3505_call = mutated_mod.get_global_var('func_3505')
call_7105 = func_3503_call()
call_7106 = func_3503_call()
output = call_7105
output2 = call_7106
func_7110 = relay.Function([], output)
mod['func_7110'] = func_7110
mod = relay.transform.InferType()(mod)
mutated_mod['func_7110'] = func_7110
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7110_call = mutated_mod.get_global_var('func_7110')
call_7111 = func_7110_call()
output = call_7111
func_7112 = relay.Function([], output)
mutated_mod['func_7112'] = func_7112
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3796_call = mod.get_global_var('func_3796')
func_3798_call = mutated_mod.get_global_var('func_3798')
call_7159 = relay.TupleGetItem(func_3796_call(), 0)
call_7160 = relay.TupleGetItem(func_3798_call(), 0)
func_6653_call = mod.get_global_var('func_6653')
func_6655_call = mutated_mod.get_global_var('func_6655')
call_7164 = func_6653_call()
call_7165 = func_6653_call()
func_3940_call = mod.get_global_var('func_3940')
func_3941_call = mutated_mod.get_global_var('func_3941')
call_7179 = relay.TupleGetItem(func_3940_call(), 0)
call_7180 = relay.TupleGetItem(func_3941_call(), 0)
bop_7187 = relay.logical_and(call_7159.astype('bool'), relay.reshape(call_7164.astype('bool'), relay.shape_of(call_7159))) # shape=(1, 10, 7)
bop_7190 = relay.logical_and(call_7160.astype('bool'), relay.reshape(call_7165.astype('bool'), relay.shape_of(call_7160))) # shape=(1, 10, 7)
func_7020_call = mod.get_global_var('func_7020')
func_7025_call = mutated_mod.get_global_var('func_7025')
var_7203 = relay.var("var_7203", dtype = "int16", shape = (780,))#candidate|7203|(780,)|var|int16
const_7204 = relay.const([5.837047,-7.252052,4.620631,-5.471290,-1.091500,7.639061,-8.471364,-8.235636,2.911525,-9.294723,3.513606,5.756652,-4.883093,-4.361226,3.490094,1.311174,1.318460,-6.284535,7.349148,-9.832956,-9.712340,5.819478,-1.392330,-0.265522,-6.706630,1.777646,-7.193821,7.606878,-7.215074,-4.423746,-9.527063,-6.700321,-1.427322,-6.026670,3.603465,6.172261,-4.576961,4.985259,-4.506517,-4.282631,-4.272000,-7.915202,9.728140,-7.207682,9.177258,3.439129,-8.221354,4.342864,-7.175959,-3.610495,1.609305,2.971253,-0.935646,-5.542500,-0.937052,-2.008839,4.277880,1.205348,-6.706994,-6.158215,5.343193,6.272609,4.506230,-6.188099,-4.206738,-0.481760,-9.669409,-3.455519,-9.852051,-0.861751,1.316144,1.000175,5.518633,7.574871,-1.737082,-1.887733,5.968205,7.008068,-4.297610,-6.015974,-3.624725,-5.203358,-5.118552,-5.321042,-8.844132,-3.029475,8.327315,-8.101891,-3.664586,-5.323699,0.965464,-8.658836,-3.882040,3.458571,5.426861,1.043240,-9.971309,7.271641,-7.349870,1.456177,-1.732652,2.399267,-7.749656,-9.804594,3.524536,8.002820,0.165276,-5.636722,-1.550423,7.695814,1.100487,0.566904,-7.580333,6.157089,-1.340030,7.021369,-3.875346,-6.763420,-1.482781,4.839492,2.214362,-1.352384,7.772441,-1.629427,2.875811,6.151879,3.107318,-3.000577,6.719857,-9.827244,9.056437,-1.059559,-8.387434,-2.593821,-2.852832,2.714522,-5.189367,-4.655660,-3.072851,5.975791,-2.677206,-2.428440,-5.328212,-2.269462,-2.903876,1.991091,-0.978978,8.580015,0.486837,-3.385533], dtype = "float64")#candidate|7204|(150,)|const|float64
var_7205 = relay.var("var_7205", dtype = "int64", shape = (768,))#candidate|7205|(768,)|var|int64
call_7202 = relay.TupleGetItem(func_7020_call(relay.reshape(var_7203.astype('int16'), [13, 15, 4]), relay.reshape(var_7203.astype('int16'), [13, 15, 4]), relay.reshape(const_7204.astype('float64'), [25, 6]), relay.reshape(var_7205.astype('int64'), [768,]), ), 5)
call_7206 = relay.TupleGetItem(func_7025_call(relay.reshape(var_7203.astype('int16'), [13, 15, 4]), relay.reshape(var_7203.astype('int16'), [13, 15, 4]), relay.reshape(const_7204.astype('float64'), [25, 6]), relay.reshape(var_7205.astype('int64'), [768,]), ), 5)
output = relay.Tuple([call_7179,bop_7187,call_7202,var_7203,const_7204,var_7205,])
output2 = relay.Tuple([call_7180,bop_7190,call_7206,var_7203,const_7204,var_7205,])
func_7210 = relay.Function([var_7203,var_7205,], output)
mod['func_7210'] = func_7210
mod = relay.transform.InferType()(mod)
mutated_mod['func_7210'] = func_7210
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7210_call = mutated_mod.get_global_var('func_7210')
var_7212 = relay.var("var_7212", dtype = "int16", shape = (780,))#candidate|7212|(780,)|var|int16
var_7213 = relay.var("var_7213", dtype = "int64", shape = (768,))#candidate|7213|(768,)|var|int64
call_7211 = func_7210_call(var_7212,var_7213,)
output = call_7211
func_7214 = relay.Function([var_7212,var_7213,], output)
mutated_mod['func_7214'] = func_7214
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1488_call = mod.get_global_var('func_1488')
func_1489_call = mutated_mod.get_global_var('func_1489')
call_7229 = func_1488_call()
call_7230 = func_1488_call()
output = relay.Tuple([call_7229,])
output2 = relay.Tuple([call_7230,])
func_7240 = relay.Function([], output)
mod['func_7240'] = func_7240
mod = relay.transform.InferType()(mod)
mutated_mod['func_7240'] = func_7240
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7240_call = mutated_mod.get_global_var('func_7240')
call_7241 = func_7240_call()
output = call_7241
func_7242 = relay.Function([], output)
mutated_mod['func_7242'] = func_7242
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4932_call = mod.get_global_var('func_4932')
func_4933_call = mutated_mod.get_global_var('func_4933')
call_7415 = relay.TupleGetItem(func_4932_call(), 1)
call_7416 = relay.TupleGetItem(func_4933_call(), 1)
const_7438 = relay.const([[[-2.980648,5.704042,8.988642],[-6.672068,-4.913801,-2.252080],[-4.985026,9.524590,-5.866332],[3.087834,3.352681,-5.279611],[4.163888,5.908197,-2.378814],[2.556883,-8.451632,7.085996],[8.522069,5.805337,5.429455],[-3.485967,-0.710811,8.184907],[-8.880798,5.665462,3.448613],[-2.303787,5.768693,-6.693159],[0.007731,-2.430488,6.325020],[3.189872,0.482860,-9.368509]],[[-4.810833,7.874130,3.459175],[2.889429,7.668085,2.242023],[8.744414,0.937614,0.358192],[-2.225765,-6.150901,-0.919933],[-3.050345,-2.190479,-5.884334],[0.526318,3.423013,2.724005],[3.562169,-9.565881,3.358407],[9.486221,-4.075051,4.377150],[7.202717,-1.187078,-7.711772],[0.793913,-2.905132,-4.019444],[-4.274993,9.569436,-1.233412],[-8.170818,-0.187029,-1.848281]],[[-4.062627,-6.312209,9.515092],[-3.371534,3.822787,-8.649969],[2.544196,8.514133,6.391361],[-5.034499,8.318445,7.517775],[-6.858072,5.090430,1.555422],[-7.865220,1.946727,-9.987972],[-7.700528,0.081516,8.100580],[2.902064,7.820944,-6.819139],[5.491670,3.043281,-0.264156],[-5.268186,-4.608162,7.069150],[-5.880526,-6.884827,-6.820233],[-5.086111,5.971278,0.831440]],[[9.312939,-9.041974,3.553623],[2.273398,3.915537,8.463332],[2.140762,1.134205,1.015347],[9.224790,-2.521043,0.661754],[-7.537588,-9.266371,-1.427293],[-8.063404,-6.731749,-4.006450],[6.581921,-9.245917,-7.540207],[3.620010,-4.839089,-0.346252],[9.093515,9.072827,4.043686],[6.183247,-7.162423,8.282582],[9.337886,-1.978139,-3.878872],[7.909417,-3.667918,5.593515]],[[4.217698,-1.510538,5.044731],[8.469617,7.710100,-9.021945],[8.618064,-7.796767,2.209116],[-3.955593,-8.901431,4.903891],[-7.899074,-1.951909,-7.364157],[0.514010,-7.386297,3.217039],[-3.887560,9.596181,1.346704],[-8.364749,1.531572,-7.021227],[3.593043,5.291582,7.164757],[-6.571474,8.678698,-2.478024],[-4.368017,6.837954,-5.085145],[-1.722080,9.162402,-5.935060]],[[-2.148383,2.482246,3.594940],[-8.923597,4.186706,-8.433683],[-8.540294,-2.915473,-9.721270],[-8.524581,-4.165568,1.154668],[-4.751131,-4.835053,6.705365],[4.038247,1.336774,9.909266],[-1.573743,4.313223,8.937116],[3.816251,4.520298,5.372459],[-0.006476,-7.416571,1.024910],[3.106760,-7.046900,9.552669],[-6.801477,0.885524,-8.460718],[7.439608,-7.895647,-0.599892]],[[-0.657593,-3.872321,3.271661],[5.070463,2.403218,-4.077500],[-2.652521,-6.280511,9.075851],[-8.615314,-6.532186,-6.825482],[4.127516,-2.733483,-7.255359],[5.994620,-4.262277,-3.318641],[-2.180975,5.612523,-4.252868],[-1.549983,-8.714329,0.115380],[2.108893,5.959875,2.234155],[-9.638515,2.301791,-4.445952],[7.770017,2.159998,9.491540],[5.254699,7.966975,2.072411]],[[-6.954088,-9.660735,1.061283],[6.778337,-2.946482,-7.950057],[-2.133021,-4.419769,6.467350],[2.020870,-8.298765,-6.588640],[9.130476,4.667260,5.517858],[-0.442272,3.214375,-2.869954],[-2.396189,3.085437,-2.568966],[-7.214002,-6.775880,5.676543],[1.904091,-4.250833,3.770517],[-0.299168,-5.898636,8.223576],[-5.027788,2.890225,2.374386],[-6.734631,7.833140,-5.310615]],[[-0.534260,-9.929911,8.467952],[-6.437501,8.298984,-5.311130],[-4.238600,6.993103,6.010507],[-7.890487,-5.345504,9.079219],[6.087536,8.230907,0.810656],[-6.821399,-4.208164,-5.982804],[-6.620166,-9.825304,0.111335],[-7.745650,1.304180,-6.754503],[9.785409,9.711246,-0.027095],[6.068404,-1.855766,6.378409],[-6.687010,1.824163,-5.975619],[-2.710243,4.854137,-9.126643]],[[5.386428,-3.409897,-1.363142],[3.785102,1.175414,2.305067],[8.397603,0.476581,9.987308],[8.425867,-8.440398,-0.787552],[-2.809176,-8.031217,-2.631549],[-0.076375,7.373091,-4.184386],[8.127983,0.991830,-6.740948],[0.566356,3.096968,-0.744209],[0.967945,-1.854688,-9.696669],[-2.259973,4.501983,-8.299954],[-8.245693,-3.093096,2.831035],[0.795609,-4.114082,1.517147]],[[-8.812154,2.049908,5.582730],[-0.710711,1.504156,1.720302],[-8.900546,6.438748,-8.237075],[8.915955,-9.691973,-8.829342],[-6.354458,4.060865,9.562389],[-4.638284,9.948106,3.499705],[2.572316,3.905564,5.003153],[-8.522309,-6.501038,8.092129],[-7.276967,5.535883,-6.771610],[-6.367788,-7.965987,-9.945418],[8.196250,8.027839,-6.665477],[1.600923,-1.416754,-7.530708]],[[7.799768,6.120279,-6.838783],[-7.790165,1.362935,-2.468923],[-3.225324,5.462752,-9.507611],[-7.043224,-3.094855,-5.990326],[-0.372323,-4.459565,-1.077916],[-8.197656,3.760091,0.043771],[0.776221,-9.538104,-2.091238],[-3.385662,-6.859042,2.979170],[2.156602,-9.244020,6.129741],[-8.967978,-0.458751,-2.111703],[-3.784160,5.960599,8.856113],[1.454826,-3.648897,6.138094]],[[-2.625693,5.979187,0.721264],[9.066330,-0.797836,-6.382760],[-8.997181,-9.140699,2.735968],[9.445095,1.206423,-4.012964],[-9.079468,1.950594,3.786815],[5.599205,8.522366,-2.989625],[8.345796,0.264208,5.816558],[0.773635,8.653748,2.508996],[-9.977972,-6.874154,9.945767],[-5.615826,-8.501307,-8.296290],[5.613778,-1.175698,1.350849],[2.936714,-1.753942,-1.292730]]], dtype = "float32")#candidate|7438|(13, 12, 3)|const|float32
bop_7439 = relay.bitwise_xor(call_7415.astype('int16'), relay.reshape(const_7438.astype('int16'), relay.shape_of(call_7415))) # shape=(13, 12, 3)
bop_7442 = relay.bitwise_xor(call_7416.astype('int16'), relay.reshape(const_7438.astype('int16'), relay.shape_of(call_7416))) # shape=(13, 12, 3)
bop_7445 = relay.logical_and(call_7415.astype('bool'), relay.reshape(bop_7439.astype('bool'), relay.shape_of(call_7415))) # shape=(13, 12, 3)
bop_7448 = relay.logical_and(call_7416.astype('bool'), relay.reshape(bop_7442.astype('bool'), relay.shape_of(call_7416))) # shape=(13, 12, 3)
output = bop_7445
output2 = bop_7448
func_7449 = relay.Function([], output)
mod['func_7449'] = func_7449
mod = relay.transform.InferType()(mod)
mutated_mod['func_7449'] = func_7449
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7449_call = mutated_mod.get_global_var('func_7449')
call_7450 = func_7449_call()
output = call_7450
func_7451 = relay.Function([], output)
mutated_mod['func_7451'] = func_7451
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1362_call = mod.get_global_var('func_1362')
func_1363_call = mutated_mod.get_global_var('func_1363')
call_7487 = relay.TupleGetItem(func_1362_call(), 0)
call_7488 = relay.TupleGetItem(func_1363_call(), 0)
output = relay.Tuple([call_7487,])
output2 = relay.Tuple([call_7488,])
func_7496 = relay.Function([], output)
mod['func_7496'] = func_7496
mod = relay.transform.InferType()(mod)
mutated_mod['func_7496'] = func_7496
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7496_call = mutated_mod.get_global_var('func_7496')
call_7497 = func_7496_call()
output = call_7497
func_7498 = relay.Function([], output)
mutated_mod['func_7498'] = func_7498
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4861_call = mod.get_global_var('func_4861')
func_4863_call = mutated_mod.get_global_var('func_4863')
call_7539 = relay.TupleGetItem(func_4861_call(), 1)
call_7540 = relay.TupleGetItem(func_4863_call(), 1)
output = relay.Tuple([call_7539,])
output2 = relay.Tuple([call_7540,])
func_7541 = relay.Function([], output)
mod['func_7541'] = func_7541
mod = relay.transform.InferType()(mod)
output = func_7541()
func_7542 = relay.Function([], output)
mutated_mod['func_7542'] = func_7542
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7496_call = mod.get_global_var('func_7496')
func_7498_call = mutated_mod.get_global_var('func_7498')
call_7559 = relay.TupleGetItem(func_7496_call(), 0)
call_7560 = relay.TupleGetItem(func_7498_call(), 0)
output = call_7559
output2 = call_7560
func_7561 = relay.Function([], output)
mod['func_7561'] = func_7561
mod = relay.transform.InferType()(mod)
mutated_mod['func_7561'] = func_7561
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7561_call = mutated_mod.get_global_var('func_7561')
call_7562 = func_7561_call()
output = call_7562
func_7563 = relay.Function([], output)
mutated_mod['func_7563'] = func_7563
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6587_call = mod.get_global_var('func_6587')
func_6589_call = mutated_mod.get_global_var('func_6589')
call_7564 = func_6587_call()
call_7565 = func_6587_call()
func_1773_call = mod.get_global_var('func_1773')
func_1774_call = mutated_mod.get_global_var('func_1774')
call_7627 = relay.TupleGetItem(func_1773_call(), 1)
call_7628 = relay.TupleGetItem(func_1774_call(), 1)
var_7629 = relay.var("var_7629", dtype = "float32", shape = (8, 10, 7))#candidate|7629|(8, 10, 7)|var|float32
bop_7630 = relay.bitwise_and(call_7564.astype('int16'), relay.reshape(var_7629.astype('int16'), relay.shape_of(call_7564))) # shape=(8, 10, 7)
bop_7633 = relay.bitwise_and(call_7565.astype('int16'), relay.reshape(var_7629.astype('int16'), relay.shape_of(call_7565))) # shape=(8, 10, 7)
func_2913_call = mod.get_global_var('func_2913')
func_2914_call = mutated_mod.get_global_var('func_2914')
call_7639 = relay.TupleGetItem(func_2913_call(), 0)
call_7640 = relay.TupleGetItem(func_2914_call(), 0)
func_4654_call = mod.get_global_var('func_4654')
func_4655_call = mutated_mod.get_global_var('func_4655')
call_7645 = func_4654_call()
call_7646 = func_4654_call()
func_3999_call = mod.get_global_var('func_3999')
func_4001_call = mutated_mod.get_global_var('func_4001')
call_7647 = relay.TupleGetItem(func_3999_call(), 2)
call_7648 = relay.TupleGetItem(func_4001_call(), 2)
output = relay.Tuple([call_7627,bop_7630,call_7639,call_7645,call_7647,])
output2 = relay.Tuple([call_7628,bop_7633,call_7640,call_7646,call_7648,])
func_7660 = relay.Function([var_7629,], output)
mod['func_7660'] = func_7660
mod = relay.transform.InferType()(mod)
mutated_mod['func_7660'] = func_7660
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7661 = relay.var("var_7661", dtype = "float32", shape = (8, 10, 7))#candidate|7661|(8, 10, 7)|var|float32
func_7660_call = mutated_mod.get_global_var('func_7660')
call_7662 = func_7660_call(var_7661)
output = call_7662
func_7663 = relay.Function([var_7661], output)
mutated_mod['func_7663'] = func_7663
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4293_call = mod.get_global_var('func_4293')
func_4294_call = mutated_mod.get_global_var('func_4294')
call_7702 = relay.TupleGetItem(func_4293_call(), 1)
call_7703 = relay.TupleGetItem(func_4294_call(), 1)
func_893_call = mod.get_global_var('func_893')
func_896_call = mutated_mod.get_global_var('func_896')
call_7707 = func_893_call(relay.reshape(call_7702.astype('float64'), [16, 10, 7]))
call_7708 = func_893_call(relay.reshape(call_7702.astype('float64'), [16, 10, 7]))
output = relay.Tuple([call_7702,call_7707,])
output2 = relay.Tuple([call_7703,call_7708,])
func_7711 = relay.Function([], output)
mod['func_7711'] = func_7711
mod = relay.transform.InferType()(mod)
mutated_mod['func_7711'] = func_7711
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7711_call = mutated_mod.get_global_var('func_7711')
call_7712 = func_7711_call()
output = call_7712
func_7713 = relay.Function([], output)
mutated_mod['func_7713'] = func_7713
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6056_call = mod.get_global_var('func_6056')
func_6057_call = mutated_mod.get_global_var('func_6057')
call_7745 = relay.TupleGetItem(func_6056_call(), 1)
call_7746 = relay.TupleGetItem(func_6057_call(), 1)
func_470_call = mod.get_global_var('func_470')
func_473_call = mutated_mod.get_global_var('func_473')
var_7748 = relay.var("var_7748", dtype = "float32", shape = (2, 176))#candidate|7748|(2, 176)|var|float32
call_7747 = relay.TupleGetItem(func_470_call(relay.reshape(var_7748.astype('float32'), [8, 11, 4])), 0)
call_7749 = relay.TupleGetItem(func_473_call(relay.reshape(var_7748.astype('float32'), [8, 11, 4])), 0)
func_3572_call = mod.get_global_var('func_3572')
func_3574_call = mutated_mod.get_global_var('func_3574')
const_7771 = relay.const([-1.639893,-7.039369,2.836567,-8.809186,-3.480980,0.116161,7.525682,-0.863388,1.821175,-8.764532,-6.655991,7.696397,3.025179,-4.382906,-9.222472,0.255502,4.077813,-0.688481,9.724338,-6.194552,4.416238,9.236987,6.910647,-4.303338,7.079386,-7.298299,-8.855041,4.381040,1.865908,-2.848749,3.452375,7.379073,1.540621,4.662756,-2.440141,-9.510561,-7.335896,-7.778216,-3.263584,-4.294156,4.488501,4.701381,-2.716880,1.089789,-0.374860,5.805716,8.549160,-5.972030,-1.106297,1.425880,-4.498746,7.767345,-1.384615,-3.963428,-6.608813,-4.619461,8.641653,5.585437,-9.621924,-1.097467,-2.844167,-1.501694,-9.574951,8.971974,4.412549,8.630922,-9.449920,-0.777030,-6.662571,4.528410,1.751918,-9.463127,1.840450,-7.059430,-7.653242,-5.614183,-2.697004,-6.097884,-0.931980,8.544427,-1.283179,2.694063,2.821542,5.377818,-2.503580,0.075001,-4.648656,1.188970,2.213789,2.984159,-5.368985,2.554717,2.808226,3.890203,0.465958,5.274167,5.676267,-4.028959,-2.277615,-9.171061,8.994664,-8.532159,2.370310,4.134050,7.531338,-7.347825,6.175117,-4.956477,3.132159,-6.205274,-8.879325,-7.785653,-5.422481,7.282423,1.237316,3.059538,7.378807,-1.465142,0.918262,8.951521,0.930845,-6.198275,0.975296,6.359574,-3.305553,0.833364,9.671758,-4.787746,3.624620,-2.973918,0.207510,8.590009,9.844352,8.599579,7.050713,3.580565,-6.215526,5.168686,-9.231793,-6.036912,-7.958195,1.227449,-3.682882,5.416832,3.449306,-2.770821,-1.014420,9.597543,7.321112,-3.244564,-0.565630,9.605930,-2.895471,-7.534307,8.297606,8.360781,6.524649,1.761645,7.944404,9.957468,-8.456537,8.391060,8.413858,-4.743284,-5.597869,5.649863,-0.195232,1.788147,-9.469884,1.238150,8.593092,8.093926,-8.620954,-7.141522,-3.418342,-8.534519,4.419144,7.687876,9.131057,0.309824,-9.016126,-9.923453,-3.773499,6.385959,9.784151,-1.091773,-8.924370,0.750020,5.761763,-0.159046,5.692973,-5.701415,-5.486046,7.319346,-5.468665,3.852380,-5.324830,9.427213,-6.690881,8.279480,-3.850912,-2.604838,9.904905,0.066484,4.742566,-1.849566,-4.989862,2.838523,-8.999258,-7.299104,2.205259,-2.327550,3.519240,-5.334878,-2.594216,-1.692949,-4.607354,9.315150,-8.345938,-6.152529,-6.292516,5.220173,3.598970,-7.041667,7.825774,-8.601244,-6.648491,-1.557508,1.018681,6.403125,-1.418837,-1.126153,-2.891196,0.855391,-5.013717,-4.011100,-1.958555,2.079396,-2.034809,-3.635385,7.752436,2.141254,9.089618,2.412592,-1.815477,-9.145109,-5.957579,5.960223,6.833026,-4.199651,-2.020657,-6.964405,-7.407274,6.464481,3.841584,-4.210464,-1.180446,4.412532,-2.424444,-0.227900,1.678884,2.703385,9.170060,2.529755,3.759425,-1.492967,-9.834808,8.983416,5.368648,-7.713293,-8.255790,5.036095,-8.868232,-7.049563,9.328580,8.919729,1.129417,7.511524,-4.608444,6.187654,-9.389572,5.531872,6.844871,4.653837,1.888576,3.977269,-7.988274,3.976777,1.554651,8.512086,-6.404438,-5.419203,-3.212038,7.239846,-5.902689,-6.815868,-6.742275,4.082786,-2.862962,-2.620918,-8.076154,1.061967,-3.469752,9.789812,-4.146631,1.446248,-1.241910,1.520006,0.409074,6.066695,2.490529,-0.248182,3.199511,7.052218,-5.344369,-1.666941,-6.879805,0.329062,-8.406553,-5.873170,-5.528096,3.068288,0.438719,6.566200,2.406372,-0.052803,-7.415552,8.096260,0.617830,-1.680358,-2.612668,-6.586484,-3.592698,-5.601344,3.265440,-8.513665,-1.070978,-8.871760,-8.881796,-5.005624,-7.422665,-3.926195,2.721414,-7.812742,6.089567,-5.958968,8.295676,-5.365932,-6.799261,-9.798375,5.481232,6.594275,1.451174,-2.512729,8.393191,8.459360,7.530501,3.602535,1.223205,1.838383,-2.816491,9.435358,3.910296,2.412352,-5.177698,5.148759,-1.967466,3.729829,-7.892547,2.154866,-8.825371,0.594453,6.590143,-8.536489,-6.339382,6.966627,6.647858,8.017638,-2.348799,-6.965325,-8.685811,-8.188162,4.269645,-8.456157,3.557495,7.508876,0.775220,-2.737848,5.885904,1.768553,-3.239180,-0.740876,0.448487,-8.087411,2.135461,-8.213412,-5.175497,-2.266756,-1.545750,4.653241,1.559952,2.994726,6.757076,2.114787,-8.859789,4.315647,5.429847,-7.809850,4.893285,-8.037391,-4.490250,-7.975294,8.067667,-8.554339,-3.847636,-3.101044,-6.613697,-5.264490,4.213176,9.049922,-5.349140,-7.377025,-7.500206,7.721762,-7.700510,-6.253691,-3.434327,8.583128,-4.703237,-9.707536,-4.970190,-9.089058,-4.120565,-2.620571,-2.985438,-4.996047,-6.013087,-2.674258,4.038976,-3.225720,1.258151,-8.188884,-7.649849,2.780752,4.676936,0.369749,-3.139646,1.656378,-0.028722,-2.769556,7.909402,8.863564,-1.693351,-0.773225,2.759452,5.751044,-2.515033,1.857499,2.647723,0.535339,-1.574765,-2.763815,-7.574589,4.877274,-4.658678,9.249531,-4.864503,0.437654,-6.574499,0.059476,4.026236,-7.988395,-2.658172,-8.211411,-8.484334,8.738320,-4.274541,-2.083721,1.613922,3.764062,4.607980,7.369737,8.489163,-0.473194,-9.493058,-1.497433,-3.946998,4.844250,-3.226757,3.732929,9.292878,3.792371,-8.441094,-1.689124,7.948875,5.364847,-1.244468,7.096764,-2.683480,3.468862,2.388890,-8.386796,-5.240143,-8.210873,6.995315,-1.260023,-6.602724,-7.694742,0.713309,-4.070122,-8.340265,9.603189,-6.695012,-0.581752,0.121503,-9.659573,8.285050,-8.142068,-6.413534,-9.909960,-1.981319,6.394743,-1.449671,-2.667754,-2.347510,1.469863,-3.969225,-6.118331,6.357469,4.536775,-3.576560,8.274532,-0.443442,-8.399063,-1.463124,-1.837054,6.040847,-1.123638,7.256954,8.791760,3.430866,-7.459389,9.455928,5.275821,-2.400270,8.707491,-9.872191,-8.163057,5.278078,6.699076,-4.471275,-3.256925,8.035978,0.447977,5.208994,3.008256,1.615500,1.767793,-7.666506,9.645373,3.351080,1.663010,6.119188,0.662556,-1.989880,3.937759,-4.340686,-7.411264,-3.617561,4.133971,-8.370484,-2.411579,-7.710609,4.455323,-5.417246,0.652672,9.267562,5.582000,7.159200,7.772916,-4.571826,-8.617140,1.053960,-4.080648,-5.685941,4.166473,-7.168908,6.988219,7.739159,3.569814,5.648974,-2.649672,-1.953675,-0.423270,-0.735504,0.767488,-3.880793,9.390458,7.275684,4.381055,0.639432,-4.779196,-2.988927,6.302932,-3.798109,-5.617777,3.599072,7.689684,-4.904553,8.000833,1.661433,8.482467,-5.366764,2.158613,9.431474,-8.068959,-7.824344,-4.424673,-7.719819,-4.907465,0.690872,-4.470414,5.772905,-4.168490,7.282502,-5.347618,-8.822225,-4.765203,4.046355,-4.130323,-5.817766,3.278006,-3.778731,-3.555364,2.436886,8.711374,6.107382,-4.160191,5.949353,-9.105655,-8.783098,-4.605022,1.523792,-9.672183,-0.892189,0.484369,2.948760,4.656534,-5.397051,-5.568186,5.949193,-2.804202,7.953921,3.670719,5.878378,-9.818944,4.761103,1.060115,6.453143,0.928502,-1.383890,6.526211,7.766542,0.255826,-9.899166,-4.318411,-5.657667,-6.257075,6.005577,-5.671620,3.825383,-5.431972,3.956139,9.455621,4.361485,1.599351,4.691296,2.915957,7.091270,1.299483,-6.051116,3.483176,-2.084987,5.901004,-6.870363,3.836520,-7.288486,-9.408122,7.608348,-5.383740,-6.696478,-0.604221,-5.157577,-2.786481,2.664183,0.408666,0.718709,-2.966602,-9.887542,6.095748,4.265900,0.265251,9.999253,-6.509223,3.660929,9.608494,-4.429524,-3.762132,-4.667792,-6.103475,-6.191643,3.424441,5.321457,2.583333,8.934462,-9.448183,2.428232,-7.190608,0.333331,4.303248,-6.164574,-3.260265,5.499212,5.722031,1.710234,3.101267,-7.554250,-6.042569,-0.470024,6.436248,-7.374290,-0.829309,3.506490,-2.007080,2.691370,-6.608556,6.353879,-2.815656,5.139069,-9.305950,-6.447301,-2.059743,-0.124171,-8.613895,-0.650928,0.077015,2.970409,7.080566,-3.457970,5.032411,7.240965,2.609281,-9.078473,5.152550,-2.183062,-7.651890,2.656176,4.033383,7.838319,-3.103532,5.337538,9.221593,-1.702605,-8.461667,-6.997527,-9.208563,3.047517,-6.712215,-1.060678,7.739045,7.251010,6.135697,-2.438995,4.716760,-3.249749,8.549588,0.017398,-2.560947,5.075562,-0.469320,-4.625603,-2.682976,3.143884,7.616825,-6.674496,-3.570257,-7.778069,6.728463,-2.172111,4.294658,-9.382804,-9.767842,1.425602,4.300521,3.880448,-1.794395,7.441541,5.584288,-0.674974,-6.357169,2.079049,-9.542674,-8.352906,-3.660966,-0.447289,1.245635,1.790996,-0.501218,-0.357616,6.465615,-7.022091,4.992737,-8.285989,-8.473873,1.757904,-9.843143,4.722244,-6.921165,-5.866614,-3.291902,-0.731986,6.858888,0.739762,-2.778332,-9.698946,-7.548952,-6.423886,-5.564782,-3.505823,4.115291,7.707216,3.447854,-8.983480,-9.948934,-0.630048,-6.334996,-1.184170,-4.168427,6.142175,4.396115], dtype = "float64")#candidate|7771|(840,)|const|float64
call_7770 = func_3572_call(relay.reshape(const_7771.astype('float64'), [12, 10, 7]))
call_7772 = func_3572_call(relay.reshape(const_7771.astype('float64'), [12, 10, 7]))
output = relay.Tuple([call_7745,call_7747,var_7748,call_7770,const_7771,])
output2 = relay.Tuple([call_7746,call_7749,var_7748,call_7772,const_7771,])
func_7788 = relay.Function([var_7748,], output)
mod['func_7788'] = func_7788
mod = relay.transform.InferType()(mod)
var_7789 = relay.var("var_7789", dtype = "float32", shape = (2, 176))#candidate|7789|(2, 176)|var|float32
output = func_7788(var_7789)
func_7790 = relay.Function([var_7789], output)
mutated_mod['func_7790'] = func_7790
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7240_call = mod.get_global_var('func_7240')
func_7242_call = mutated_mod.get_global_var('func_7242')
call_7846 = relay.TupleGetItem(func_7240_call(), 0)
call_7847 = relay.TupleGetItem(func_7242_call(), 0)
output = call_7846
output2 = call_7847
func_7858 = relay.Function([], output)
mod['func_7858'] = func_7858
mod = relay.transform.InferType()(mod)
output = func_7858()
func_7859 = relay.Function([], output)
mutated_mod['func_7859'] = func_7859
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7240_call = mod.get_global_var('func_7240')
func_7242_call = mutated_mod.get_global_var('func_7242')
call_7874 = relay.TupleGetItem(func_7240_call(), 0)
call_7875 = relay.TupleGetItem(func_7242_call(), 0)
uop_7883 = relay.exp(call_7874.astype('float32')) # shape=(8, 10, 7)
uop_7885 = relay.exp(call_7875.astype('float32')) # shape=(8, 10, 7)
output = relay.Tuple([uop_7883,])
output2 = relay.Tuple([uop_7885,])
func_7891 = relay.Function([], output)
mod['func_7891'] = func_7891
mod = relay.transform.InferType()(mod)
output = func_7891()
func_7892 = relay.Function([], output)
mutated_mod['func_7892'] = func_7892
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7895 = relay.var("var_7895", dtype = "float64", shape = (2, 4, 12))#candidate|7895|(2, 4, 12)|var|float64
uop_7896 = relay.log10(var_7895.astype('float64')) # shape=(2, 4, 12)
bop_7901 = relay.subtract(uop_7896.astype('int32'), relay.reshape(var_7895.astype('int32'), relay.shape_of(uop_7896))) # shape=(2, 4, 12)
output = relay.Tuple([bop_7901,])
output2 = relay.Tuple([bop_7901,])
func_7904 = relay.Function([var_7895,], output)
mod['func_7904'] = func_7904
mod = relay.transform.InferType()(mod)
mutated_mod['func_7904'] = func_7904
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7905 = relay.var("var_7905", dtype = "float64", shape = (2, 4, 12))#candidate|7905|(2, 4, 12)|var|float64
func_7904_call = mutated_mod.get_global_var('func_7904')
call_7906 = func_7904_call(var_7905)
output = call_7906
func_7907 = relay.Function([var_7905], output)
mutated_mod['func_7907'] = func_7907
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7948 = relay.var("var_7948", dtype = "float32", shape = (11, 3, 3))#candidate|7948|(11, 3, 3)|var|float32
uop_7949 = relay.acos(var_7948.astype('float32')) # shape=(11, 3, 3)
output = relay.Tuple([uop_7949,])
output2 = relay.Tuple([uop_7949,])
func_7961 = relay.Function([var_7948,], output)
mod['func_7961'] = func_7961
mod = relay.transform.InferType()(mod)
mutated_mod['func_7961'] = func_7961
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7962 = relay.var("var_7962", dtype = "float32", shape = (11, 3, 3))#candidate|7962|(11, 3, 3)|var|float32
func_7961_call = mutated_mod.get_global_var('func_7961')
call_7963 = func_7961_call(var_7962)
output = call_7963
func_7964 = relay.Function([var_7962], output)
mutated_mod['func_7964'] = func_7964
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5183_call = mod.get_global_var('func_5183')
func_5184_call = mutated_mod.get_global_var('func_5184')
call_7978 = relay.TupleGetItem(func_5183_call(), 0)
call_7979 = relay.TupleGetItem(func_5184_call(), 0)
func_7020_call = mod.get_global_var('func_7020')
func_7025_call = mutated_mod.get_global_var('func_7025')
const_7986 = relay.const([7,5,-10,2,-9,9,-10,-8,-1,-9,3,1,-5,10,-2,6,-6,-7,-3,-6,-1,-10,4,-5,-1,7,4,-4,8,4,10,1,10,2,-6,8,3,-2,5,1,2,2,9,-4,1,-9,7,-6,-10,2,9,7,1,-1,7,-4,4,-2,3,10,-3,4,-10,8,-1,10,-4,1,6,-2,6,1,-2,-10,8,-9,-10,-2,-3,2,1,-3,-9,-10,6,8,-8,1,2,2,-3,3,-4,-6,3,3,2,-1,-10,-7,-5,-10,4,2,3,7,5,-9,-5,5,3,-4,-4,7,9,4,-7,-6,6,-10,-2,-6,7,5,10,-1,-8,9,1,-9,8,-4,-8,9,-8,4,5,6,-3,5,-1,-8,1,-2,-3,-3,-2,7,9,3,-4,9,7,5,-4,-5,9,5,-1,4,-8,5,6,-2,-6,4,2,-1,-7,-8,7,8,-7,7,10,1,8,9,-6,1,-6,5,-6,-8,3,8,9,7,10,5,-3,9,-10,7,1,-1,-3,-6,1,4,2,-5,7,-9,3,-7,10,-10,-6,8,5,4,-6,-8,6,2,-3,9,8,-9,3,9,-5,6,6,-7,-5,-8,1,9,-8,-5,1,-5,3,-10,-3,2,10,7,1,-6,7,7,-1,-7,-1,-2,-8,1,-2,-10,2,2,9,7,-5,6,6,-2,-4,-6,1,5,-6,1,-9,-4,4,-2,-7,-2,-1,-6,2,4,5,10,9,-5,4,-4,8,4,5,-4,-7,7,-5,-5,-9,2,10,-9,-9,-3,-2,-6,4,-2,-9,1,3,4,-1,4,7,-3,9,-5,8,-3,-6,1,-2,10,1,7,-1,3,-9,9,4,2,-6,4,-6,2,-8,3,8,-1,-5,3,7,-6,-3,-2,-7,-2,5,6,-7,-3,-3,-6,10,-10,-4,-8,10,-9,1,2,8,-10,4,-4,4,5,-6,8,8,8,10,-7,2,-5,-7,-10,3,-10,5,7,3,-9,-4,-4,5,-4,-2,7,-7,6,9,3,-7,8,-8,3,8,-2,-9,3,-10,8,10,-5,-8,-4,-8,-9,-9,9,2,1,-6,-10,-9,8,4,1,-3,-4,7,6,-5,2,-1,-3,3,-1,-7,5,-8,3,-10,5,-1,2,6,-5,4,9,6,-8,-8,-9,2,8,6,-1,8,-10,4,6,10,5,9,-9,5,-6,-6,7,1,-9,9,-5,-5,-3,-7,-1,2,-2,9,6,9,-7,10,-5,1,10,-4,-4,-10,-8,-10,3,-6,-1,-4,-10,-10,10,-3,1,-10,4,5,-1,-7,-9,1,-8,-7,-3,-7,-6,2,-9,2,10,2,-4,-2,-2,-7,7,-5,4,-6,-2,1,-2,-3,-9,2,7,-1,-2,9,3,7,3,-5,-3,-3,5,-5,7,9,-5,5,-6,-6,-1,-2,-2,-4,-10,-9,1,-10,-7,3,-4,-8,-5,4,9,-10,4,5,-9,-10,-8,-6,2,5,-2,3,-3,7,-6,-9,-1,-5,1,3,-9,-10,4,7,-1,-7,-3,1,3,-3,-10,-4,-3,10,-3,3,7,-10,-9,-9,9,5,8,7,-7,2,5,10,7,10,-4,1,-6,4,-9,-8,-3,-2,3,4,-10,-7,2,-2,9,8,-5,-7,-3,-6,6,-1,-9,9,2,1,-8,10,-8,-9,-4,-2,-10,-2,10,5,4,-4,-1,-4,-4,7,-3,-2,-9,8,7,-6,9,-10,-6,6,1,4,2,-4,-2,8,10,-6,10,6,-6,-6,8,5,-3,5,-2,7,-6,-2,-6,6,2,-6,-8,2,5,-10,-8,-9,7,-6,-5,-4,-5,-1,-9,-8,-9,-3,-9,2,5,-6,-6,-3,-1,3,-3,8,5,9,-6,-5,1,3,-5,3,6,2,-6,-4,-5,4,-8,-7,2,7,3,3,1,6,-3,-7,-8,-9,-5,5,2,9,-2,2,-2,-1,2,1,-2,-1,-5,1,7,-2,-5,-4,6,6,10,3,-9,-9,8,6,10,-4,6,-10,5,7,9,-6,5,-5,2,-8,-10,-3,10,8,-9,-5,-8,-1,-7,5,-8,-10,-5,-9,-3], dtype = "int16")#candidate|7986|(780,)|const|int16
var_7987 = relay.var("var_7987", dtype = "float64", shape = (150,))#candidate|7987|(150,)|var|float64
const_7988 = relay.const([5,-3,-3,-10,3,-9,-1,2,-7,-7,-8,8,6,-7,10,4,-2,-2,5,4,-3,-5,-1,10,-1,-8,10,6,-1,6,-3,-9,-1,-1,-10,-4,-9,9,8,-9,-6,8,2,4,9,5,4,6,-2,10,4,-6,5,-5,5,-1,-9,-9,-5,4,-4,-3,-4,4,7,-9,9,4,-3,8,10,-8,-8,-2,3,6,-7,-6,9,-9,5,7,-5,10,9,3,7,10,2,10,-8,-3,-7,-5,10,-7,4,-10,7,5,8,-7,3,2,-7,-3,1,1,-4,8,-2,10,1,5,10,5,-1,-2,-8,-2,-1,2,-8,1,1,7,-6,-1,4,6,7,-1,2,3,-2,-6,7,-4,-3,8,-6,-7,-1,-1,4,1,9,-8,-7,-10,5,1,-4,-6,10,10,8,-10,8,5,1,3,-10,-8,3,6,-5,-7,-2,7,4,7,7,-2,1,4,5,-1,-10,2,6,-9,-6,2,-9,7,-4,-7,6,-3,7,10,-7,-7,-7,-10,8,5,-6,-10,-4,6,5,-1,3,7,-3,1,5,9,-8,8,8,8,10,7,-6,6,-8,-2,2,10,6,7,1,5,7,-5,-9,-7,4,-7,-8,-4,9,-7,5,6,1,5,1,3,-5,3,5,3,3,-2,2,-5,-1,-1,10,-10,-3,4,4,4,-10,-3,4,-6,7,-7,-1,-9,-7,-1,-10,-9,-3,-8,2,6,8,9,-7,-10,1,3,-2,-8,-5,-5,7,9,-8,-9,-9,-4,-6,1,-8,-8,-8,2,-3,10,-7,-2,-8,-6,-8,-9,-4,3,8,3,-5,-4,4,-5,-6,5,-10,10,8,6,-5,-4,-10,8,1,3,-4,10,-2,-5,10,2,8,9,1,3,-4,4,-4,-1,4,2,8,-8,-9,-9,-2,10,-4,-8,-8,-1,-6,6,7,-6,1,3,-1,10,-3,-10,1,-6,3,-1,3,-3,9,10,7,9,3,9,-2,-4,9,1,-6,-4,9,7,-7,2,10,-4,-9,6,4,7,-4,10,-5,-1,5,7,3,9,-6,8,4,-6,-4,6,6,3,-4,-3,-3,1,4,-4,-6,6,6,10,3,-3,-8,4,-2,-6,-9,9,-7,-2,10,5,10,10,5,-6,-5,5,7,9,-6,10,-6,-9,-9,2,-8,-7,-8,4,6,2,-8,7,8,-7,-1,-2,-5,-7,-4,6,-6,2,-10,7,-6,-7,8,10,-10,-10,5,5,5,-4,3,-10,-3,-4,9,-6,2,9,-9,-6,7,7,10,-2,6,-3,-6,-9,-3,9,-4,-7,2,8,5,10,2,4,1,-6,-1,-7,1,-5,7,-6,-1,-1,9,4,-5,-5,-2,-10,4,10,-4,2,3,10,3,2,9,5,-1,1,3,-5,-5,-6,9,-4,-4,-8,6,-6,-4,-3,10,-10,-6,8,-4,-4,6,-8,7,9,10,8,-5,-7,1,-1,-7,-1,-1,4,-2,4,8,6,-4,7,-2,2,-7,8,8,-8,-10,9,10,7,-2,1,-3,-5,1,2,7,3,-2,4,10,-4,3,-4,-7,-6,-3,8,5,2,-7,1,8,-10,7,-2,-7,1,-2,-4,5,-9,-10,-4,-2,3,1,-5,-10,-3,10,5,-6,1,1,-8,-7,7,-5,4,-9,7,3,-1,9,-1,1,-8,4,4,5,6,-8,1,5,-1,2,-4,-1,9,1,1,-8,9,-8,-1,-7,-7,9,-10,-3,9,-2,2,8,-5,3,-10,-5,-7,4,-6,-5,7,2,10,-10,-3,-10,6,-10,4,7,6,-5,-4,9,9,4,-9,5,2,-8,8,1,5,-6,-5,-5,4,-2,-10,-10,-6,-6,1,-6,-7,-7,4,10,1,10,-9,-7,-6,5,1,-6,-10,-3,4,-3,8,7,-1,-1,2,-8,-10,-8,-3,4,-8,2,3,-10,-7,-9,4,6,2,8,1,-7,-1,9,7,10,4,-3,7,5,6,-8,-1,-6,2,-8,-1,5,-1,-6,8,4,-5,-8,-2,-8,-6,-1,-1,-9,-2], dtype = "int64")#candidate|7988|(768,)|const|int64
call_7985 = relay.TupleGetItem(func_7020_call(relay.reshape(const_7986.astype('int16'), [13, 15, 4]), relay.reshape(const_7986.astype('int16'), [13, 15, 4]), relay.reshape(var_7987.astype('float64'), [25, 6]), relay.reshape(const_7988.astype('int64'), [768,]), ), 0)
call_7989 = relay.TupleGetItem(func_7025_call(relay.reshape(const_7986.astype('int16'), [13, 15, 4]), relay.reshape(const_7986.astype('int16'), [13, 15, 4]), relay.reshape(var_7987.astype('float64'), [25, 6]), relay.reshape(const_7988.astype('int64'), [768,]), ), 0)
output = relay.Tuple([call_7978,call_7985,const_7986,var_7987,const_7988,])
output2 = relay.Tuple([call_7979,call_7989,const_7986,var_7987,const_7988,])
func_7990 = relay.Function([var_7987,], output)
mod['func_7990'] = func_7990
mod = relay.transform.InferType()(mod)
var_7991 = relay.var("var_7991", dtype = "float64", shape = (150,))#candidate|7991|(150,)|var|float64
output = func_7990(var_7991)
func_7992 = relay.Function([var_7991], output)
mutated_mod['func_7992'] = func_7992
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1129_call = mod.get_global_var('func_1129')
func_1131_call = mutated_mod.get_global_var('func_1131')
call_8047 = relay.TupleGetItem(func_1129_call(), 1)
call_8048 = relay.TupleGetItem(func_1131_call(), 1)
func_4861_call = mod.get_global_var('func_4861')
func_4863_call = mutated_mod.get_global_var('func_4863')
call_8049 = relay.TupleGetItem(func_4861_call(), 0)
call_8050 = relay.TupleGetItem(func_4863_call(), 0)
output = relay.Tuple([call_8047,call_8049,])
output2 = relay.Tuple([call_8048,call_8050,])
func_8065 = relay.Function([], output)
mod['func_8065'] = func_8065
mod = relay.transform.InferType()(mod)
output = func_8065()
func_8066 = relay.Function([], output)
mutated_mod['func_8066'] = func_8066
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3924_call = mod.get_global_var('func_3924')
func_3925_call = mutated_mod.get_global_var('func_3925')
call_8141 = func_3924_call()
call_8142 = func_3924_call()
uop_8160 = relay.sin(call_8141.astype('float32')) # shape=(3, 11, 12)
uop_8162 = relay.sin(call_8142.astype('float32')) # shape=(3, 11, 12)
uop_8166 = relay.cos(uop_8160.astype('float64')) # shape=(3, 11, 12)
uop_8168 = relay.cos(uop_8162.astype('float64')) # shape=(3, 11, 12)
func_7711_call = mod.get_global_var('func_7711')
func_7713_call = mutated_mod.get_global_var('func_7713')
call_8187 = relay.TupleGetItem(func_7711_call(), 1)
call_8188 = relay.TupleGetItem(func_7713_call(), 1)
output = relay.Tuple([uop_8166,call_8187,])
output2 = relay.Tuple([uop_8168,call_8188,])
func_8206 = relay.Function([], output)
mod['func_8206'] = func_8206
mod = relay.transform.InferType()(mod)
output = func_8206()
func_8207 = relay.Function([], output)
mutated_mod['func_8207'] = func_8207
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5352_call = mod.get_global_var('func_5352')
func_5353_call = mutated_mod.get_global_var('func_5353')
call_8266 = func_5352_call()
call_8267 = func_5352_call()
output = relay.Tuple([call_8266,])
output2 = relay.Tuple([call_8267,])
func_8290 = relay.Function([], output)
mod['func_8290'] = func_8290
mod = relay.transform.InferType()(mod)
output = func_8290()
func_8291 = relay.Function([], output)
mutated_mod['func_8291'] = func_8291
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2345_call = mod.get_global_var('func_2345')
func_2347_call = mutated_mod.get_global_var('func_2347')
call_8374 = relay.TupleGetItem(func_2345_call(), 0)
call_8375 = relay.TupleGetItem(func_2347_call(), 0)
var_8378 = relay.var("var_8378", dtype = "float32", shape = (13, 12, 3))#candidate|8378|(13, 12, 3)|var|float32
bop_8379 = relay.not_equal(call_8374.astype('bool'), relay.reshape(var_8378.astype('bool'), relay.shape_of(call_8374))) # shape=(13, 12, 3)
bop_8382 = relay.not_equal(call_8375.astype('bool'), relay.reshape(var_8378.astype('bool'), relay.shape_of(call_8375))) # shape=(13, 12, 3)
func_470_call = mod.get_global_var('func_470')
func_473_call = mutated_mod.get_global_var('func_473')
const_8392 = relay.const([-1.883222,5.275519,-7.220256,-9.131482,8.671585,8.614249,-2.165139,-8.764971,6.412675,0.465932,7.732989,-4.818879,6.636493,6.906107,-5.068792,-6.689519,3.171259,-6.551091,-5.075730,-4.061872,-7.196511,7.597795,4.656885,-0.449775,-8.034408,6.900862,-6.049412,-1.497928,-2.827653,-7.791868,-0.635999,4.358610,-4.772887,4.986260,5.183626,2.554484,2.237936,-7.650626,-6.027799,-8.132518,-6.769287,-2.655046,5.142325,-8.137064,-8.584401,-9.596140,4.652027,-2.089522,3.270503,2.281026,-6.717974,-9.573347,6.087895,-0.225924,-4.169190,-0.498893,-4.751625,3.579506,5.938544,0.659892,-4.709460,4.883506,1.024236,8.158312,4.831752,3.928002,3.192849,-9.946849,-3.957553,-6.825557,2.012567,1.601270,6.240514,2.041572,-2.170349,-1.687098,2.431309,6.721019,-1.456547,2.643829,2.139752,6.398589,1.683711,6.558957,-9.149582,-2.265929,3.851193,3.337939,-1.225566,6.557007,8.656095,2.810003,4.348846,6.632072,1.862202,-2.158166,-5.706605,-1.760248,9.830226,9.425999,0.670268,2.692933,-0.052363,-5.063336,0.251021,9.967132,8.948668,9.125063,9.080481,-6.197345,-2.059604,4.945707,-5.464263,-9.945429,-3.388626,0.572174,5.077510,-2.932944,0.094868,-9.675099,-2.904783,0.181387,-6.810822,5.234184,-2.657670,-0.289958,-7.858292,8.869503,3.303653,-4.688744,5.798182,-4.800695,-6.170954,-3.456776,1.511444,-9.446220,0.736485,7.296766,5.696287,7.546237,3.628235,-6.300596,-2.671935,-0.140116,7.103670,5.382801,0.396174,9.753836,-0.840235,8.277545,-1.120909,3.823810,-7.803160,5.059088,0.488345,4.086961,-0.730190,-4.235845,7.349968,1.748049,8.428917,2.989868,-5.177934,-6.727318,8.284751,-1.453701,-1.477566,4.085548,-0.121350,-7.296675,7.847289,-4.965631,5.389695,-3.672477,-0.414777,2.509808,-3.888330,-1.814294,7.857417,7.602550,-9.899840,-2.137005,-5.565032,2.324528,-7.751486,-4.329130,0.523589,3.533923,-0.567744,1.716208,7.738016,-2.221557,-0.020317,-1.591012,-8.207978,-8.307847,1.436148,1.094968,-4.968155,3.696698,-3.251249,-1.928312,-3.176458,-0.258439,-3.439016,6.224397,-6.520650,3.545968,-9.984512,-2.509890,-3.313765,-3.795828,2.985643,1.045238,-1.841187,-1.828981,-1.425612,8.897952,-3.171220,5.643928,9.061228,7.998238,5.368744,-3.000429,-1.368771,-8.987521,4.582172,7.035581,-4.047089,-8.689006,7.230721,7.630315,-5.612273,-8.544828,-2.154561,7.933517,4.602942,6.739971,3.623621,-6.804354,-2.763505,-1.004431,4.649188,-6.026770,-5.514466,5.207032,6.777273,-0.490584,6.531318,-6.985629,-2.649975,0.737496,-2.920875,-1.124652,9.329395,-1.973386,2.447607,8.564285,-0.106689,-7.269024,0.606582,-4.669266,-6.691579,-1.402276,4.755738,2.281384,-4.119822,5.691376,8.826093,-3.965743,7.213435,-0.999974,-8.730331,0.438060,8.289944,1.128151,3.695099,4.402894,-6.471853,4.043758,3.504431,-1.088838,-3.464280,-4.089442,9.813224,-7.587737,5.949030,-0.009789,-9.963086,-6.780878,0.992432,-0.980556,5.596460,5.447476,7.564902,-5.321820,4.195478,-7.620813,-7.902300,-1.010489,-6.007813,-1.823611,9.808240,0.573318,5.208737,-3.011024,4.703156,8.516718,-7.672429,9.282587,-6.419983,-7.621646,-0.382784,5.749230,-6.849048,-1.619818,-9.649681,-9.744421,1.295132,6.792040,-0.282203,-5.851983,3.313195,-8.391182,-8.967322,3.824658,5.031913,-0.216800,5.242440,8.358173,0.424346,-7.069485,-8.535667,-9.825654,-7.694247,-2.178344,3.056255,-4.675684,1.749886,-9.127401,-7.096456,-0.715346,-7.680789,9.407729,-8.980533,7.444902,8.630328,4.915913,-4.125460,8.877606,9.868189,5.816997], dtype = "float32")#candidate|8392|(352,)|const|float32
call_8391 = relay.TupleGetItem(func_470_call(relay.reshape(const_8392.astype('float32'), [8, 11, 4])), 0)
call_8393 = relay.TupleGetItem(func_473_call(relay.reshape(const_8392.astype('float32'), [8, 11, 4])), 0)
bop_8415 = relay.mod(var_8378.astype('float32'), relay.reshape(call_8374.astype('float32'), relay.shape_of(var_8378))) # shape=(13, 12, 3)
bop_8418 = relay.mod(var_8378.astype('float32'), relay.reshape(call_8375.astype('float32'), relay.shape_of(var_8378))) # shape=(13, 12, 3)
func_5646_call = mod.get_global_var('func_5646')
func_5648_call = mutated_mod.get_global_var('func_5648')
call_8430 = relay.TupleGetItem(func_5646_call(), 0)
call_8431 = relay.TupleGetItem(func_5648_call(), 0)
output = relay.Tuple([bop_8379,call_8391,const_8392,bop_8415,call_8430,])
output2 = relay.Tuple([bop_8382,call_8393,const_8392,bop_8418,call_8431,])
func_8445 = relay.Function([var_8378,], output)
mod['func_8445'] = func_8445
mod = relay.transform.InferType()(mod)
var_8446 = relay.var("var_8446", dtype = "float32", shape = (13, 12, 3))#candidate|8446|(13, 12, 3)|var|float32
output = func_8445(var_8446)
func_8447 = relay.Function([var_8446], output)
mutated_mod['func_8447'] = func_8447
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7541_call = mod.get_global_var('func_7541')
func_7542_call = mutated_mod.get_global_var('func_7542')
call_8454 = relay.TupleGetItem(func_7541_call(), 0)
call_8455 = relay.TupleGetItem(func_7542_call(), 0)
func_2816_call = mod.get_global_var('func_2816')
func_2817_call = mutated_mod.get_global_var('func_2817')
call_8462 = relay.TupleGetItem(func_2816_call(), 4)
call_8463 = relay.TupleGetItem(func_2817_call(), 4)
func_2686_call = mod.get_global_var('func_2686')
func_2689_call = mutated_mod.get_global_var('func_2689')
const_8469 = relay.const([10,1,5,9,1,-7,-1,-3,-9,4,-10,4,10,-8,1,-1,-7,8,-8,-9,-9,7,-1,2,9,-1,-10,-8,-7,3,-8,-1,-7,-8,-6,-3,5,6,2,5,-5,-10,-1,7,-5,-8,-5,7,-7,-8,-3,-9,-10,-4,4,-4,4,-4,-4,-5,-3,1,1,3,-4,3,9,8,9,-2,9,-2,3,10,-8,6,7,1,-7,7,3,-1,-4,-4,10,7,-3,2,6,-3,8,-8,-9,10,5,-9,7,-3,-8,-5,-2,-6,3,10,2,4,5,5,-2,7,-4,6,-6,-4,5,-3,-4,-1,-8,6,8,-2,-3,4,3,3,-10,9,-9,2,-4,10,-3,5,-5,5,-5,4,-5,-5,4,4,-8,-9,5,2,6,9,4,3,7,5,-7,1,-9,-10,6,-6,6,3,7,-3,7,2,-6,-3,5,6,-6,3,1,8,-7,4,-10,-7,2,7,9,-3,4,-9,-3,-10,10,-6,-7,10,1,-9,9,-9,3,-10,-5,9,-8,-10,-3,-4,4,-4,8,-8,6,-1,1,-7,6,-1,2,-2,-10,3,-1,-4,7,-9,-4,4,-4,6,-5,-2,-10,-1,6,-5,6,-10,5,3,4,8,10,-7,-9,10,7,4,-6,10,-10,8,2,-2,-4,10,-8,-5,10,-1,-6,-2,2,10,1,-1,6,-7,-9,-5,4,8,-4,10,-6,3,-3,-7,-1,4,7,-4,-7,3,-10,7,-6,7,2,5,10,2,-5,8,-5,1,-2,-7,8,4,-10,1,10,7,-5,1,-2,-1,-1,-4,-3,-10,-4,3,7,-9,2,3,7,-3,-10,-2,-9,-1,9,-9,-2,9,-6,-7,2,9,5,-6,-2,7,-5,-6,9,7,3,-4,4,1,6,4,4,-3,-7,-1,10,-1,-8,-1,4,-7,-3,2,-4,9,2,1,-9,5,3,-5,6,8,-2,-1,7,3,-10,-9,-1,8,4,-1,4,-10,-2,10,2,-3,6,-3,3,5,5,10,4,9,-7,-2,-6,8,9,7,-5,-8,-4,6,-8,-1,-4,-9,8,6,-10,-6,3,4,9,5,-4,5,-5,5,1,-8,-6,-1,7,-2,8,-3,2,-6,1,-7,6,2,2,-9,-3,7,-6,-6,10,1,-5,-10,2,-8,-9,9,-6,1,8,2,-6,3,-9,-6,6,-6,2,6,4,-8,-6,8,-7,9,-8,-9,9,-10,-2,7,6,8,1,-3,-9,-8,7,8,-7,-1,9,-1,3,-9,10,2,-9,-3,4,5,-6,-8,-9,8,5,-2,1,-3,5,-7,5,-8,-8,7,6,7,5,6,4,-1,-3,-1,6,-9,3,-5,-3,-5,5,-7,3,2,1,-1,2,-4,-5,-9,9,10,-4,-2,-8,-2,-10,4,2,1,-4,8,4,-2,7,10,1,-7,4,4,8,-7,-4,4,-6,1,7,7,3,10,3,5,-9,9,-4,7,8,2,4,-9,-1,2,2,-7,1,5,7,-7,10,2,-2,8,3,-3,-6,-7,5,-4,9,3,1,5,6,6,10,2,9,4,-1,-8,1,5,7,4,1,7,3,-9,3,-5,-3,7,-8,-3,7,-6,-1,6,-10,-3,8,-10,1,10,-5,9,3,-10,-6,-9,-6,-3,6,4,-10,5,-6,-8,4,-3,4,-7,-9,-7,-1,9,-1,-6,-4,1,7,3,-2,-4,-1,-7,8,-2,-2,3,-7,-5,-7,-5,1,-8,-3,4,1,4,-5,-7,-5,-2,-9,-2,-9,5,8,-8,8,-7,-6,10,9,9,5,8,6,6,-7,4,-5,-2,10,2,-6,3,-2,-9,-7,6,6,-1,-6,-8,7,-8,10,7,-8,2,-10,7,-7,4,7,-7,5,-5,-7,3,4,6,9,-8,2,4,2,-3,-8,-5,6,7,-10,-2,7,10,-9,7,-2,9,-2,6,-4,5,6,8,1,-3,10,-7,3,6,6,9,8,-1,-1,-4,-8,7,-8,7,-10,2,8,-7,-9,-2,-8,-2,-1,7,-4,4,-2,7,8,1,8,10,-5,8,9,10,3,6,-6,5,-5,-1,2,9,4,7,-3,8,3,-1,-6,-2,2,-4,-2,-10,9,-6,-9,-2,4,5,-6,5,-8,2,7,4,3,-10,8,5,-9,-10,-5,3,2,9,10,-7,-10,4,-4,-7,-8,-3,-6,6,9,-6,-10,4,-7,-2,-6,-7,10,4,-10,1,7,-4,2,10,8,4,5,2,2,2,2,4,1,-6,-8,-8,-10,-10,4,2,6,-10,7,-6,5,-8,-7,1,-2,-8,-3,-5,-9,-7,-5,-5,-6,-3,-8,-5,6,3,6,1,10,-8,6,-8,-10,-9,4,7,2,7,10,-4,3,-10,-1,9,-2,6,2,-4,1,-9,-9,6,-8,-3,3,5,-5,9,7,1,6,-9,3,1,9,8,-6,-1,-7,5,2,-8,-6,-6,6,2,5,8,-5,2,9,-3,-4,1,9,-1,-5,-9,-7,-4,2,-5,-9,5,-6,-9,-6,-1,-7,10,-10,6,-2,-6,1,4,-8,-2,-3,-3,5,3,-4,-4,9,-6,6,4,-8,7,-2,5,-9,7,6,-3,1,4,2,-8,-1,2,6,-5,6,-4,-4,-8,-3,-7,6,10,7,5,-10,-4,5,8,2,6,7,8,-6,-4,-3,10,2,7,5,-3,-4,8,1,-1,-1,-2,-6,2,7,4,7,-7,5,-2,-5,7,-10,-9,3,5,-8,6,7,9,-2,-4,-9,9,7,6,6,3,8,-8,-3,-9,-10,-6,-1,-1,-8,-3,7,10,-5,6,-10,7,3,1,8,9,-2,-5,2,5,10,-6,2,-1,-2,8,7,2,-1,-6,-10,7,1,-7,9,-2,2,5,4,2,-2,8,4,-9,-2,3,1,-5,3,5,6,10,3,-5,-1,5,-5,-3,2,3,-9,7,8,4,6,5,7,3,3,9,2,7,6,6,4,-3,6,4,-1,-9,-6,-10,-2,-4,-8,-8,6,8,7,-9,1,-3,9,-5,4,9,8,4,2,-4,-3,-1,-8,-1,10,6,-2,-10,-6,3,-1,-1,-2,9,-5,4,-7,-6,-1,2,5,-5,-6,-9,-2,-2,7,-1,8,-2,-7,10,-9,-1,-1,4,-10,6,3,-8,-8,-7,-6,3,-10,-9,-1,-1,5,-3,-2,6,-3,9,8,1,10,2,-8,-1,1,-5,9,3,5,-2,-10,-2,1,-10,-1,-4,9,-8,-10,-5,-7,3,6,9,1,-10,-10,-7,4,-9,-8,-5,-8,4,-9,8,9,1,-9,-7,-4,3,-9,-4,-8,7,5,-3,-4,10,7,-9], dtype = "int8")#candidate|8469|(1260,)|const|int8
call_8468 = relay.TupleGetItem(func_2686_call(relay.reshape(const_8469.astype('int8'), [7, 12, 15])), 1)
call_8470 = relay.TupleGetItem(func_2689_call(relay.reshape(const_8469.astype('int8'), [7, 12, 15])), 1)
func_4454_call = mod.get_global_var('func_4454')
func_4457_call = mutated_mod.get_global_var('func_4457')
const_8482 = relay.const([-5.785993,-1.740478,4.921713,8.067643,5.254368,8.331053,-2.955447,9.046098,-3.015029,-4.632304,-9.889162,8.867717,8.275350,-0.836140,-2.470730,-3.426223,-0.293128,3.580819,3.331538,9.831036,3.204351,-7.154213,-4.723226,8.703300,-8.098309,8.136372,9.120064,7.051514,-1.903134,-9.072971,0.850718,-3.306083,6.858430,4.792862,-2.089319,-9.733142,1.061599,-0.305707,-9.574221,-7.635106,9.062992,-1.526888,-9.513274,0.459377,4.821205,-1.664025,8.029803,-5.885199,-3.299923,8.286083,-4.221456,-8.677339,-1.701261,0.274483,-7.689040,-0.526302,8.727135,1.862995,-5.507882,2.820848,-2.383018,-7.415308,-9.436526,-7.602568,3.278742,8.986470,5.517863,9.888228,-1.956586,7.195555,9.760206,5.978364,-7.967994,-8.273453,1.737166,-0.663441,4.864947,6.700577,2.246446,-6.872520,0.033397,-5.988133,-5.239816,4.386571,-3.384864,7.730472,-8.573945,-9.414253,6.576464,8.573119,-4.828385,-1.872018,2.616880,5.325760,-7.267654,2.247387,-1.453894,-9.986349,2.568169,0.116023,-7.447983,9.574731,3.181603,2.568671,7.830290,-3.333775,-5.509974,9.722300,-8.094921,-2.683820,9.751629,1.538382,4.245886,-3.391741,3.853791,-3.292563,-6.823585,-7.803037,-7.055306,6.050269,-9.261476,6.040798,-4.911881,-9.261094,-0.006615,1.043256,-0.374001,3.970357,6.775154,0.123809,6.223405,-4.140382,7.485049,-1.163506,2.834309,8.737773,6.385714,-8.140212,-0.807099,-3.731958,-0.622908,-6.388572,-1.173763,-1.242741,8.815753,-8.005222,-4.241039,-9.046445,9.013356,2.254075,-3.717855,1.447053,9.912978,-9.890372,-1.774626,-8.502491,-5.927807,-1.627586,-6.241233,-8.177444,-6.726674,7.521825,-6.274157,-3.915884,-4.108845,-5.859547,8.128111,-7.965313,9.838013,-9.497898,2.107339,-7.954264,3.796905,8.552597,-8.383156,8.922792,-3.709503,3.137483,-5.443782,5.017349,5.355642,-1.904284,4.642366,6.298885,7.997291,-3.891156,5.966779,-3.605311,4.096769,-8.906085,-7.197876,-8.618901,-6.071958,0.113323,-3.998161,9.901666,-1.467601,-2.359343,-3.054160,-6.494725,7.228182,4.513788,-9.358927,5.258391,1.638284,9.332124,8.088590,-6.384193,4.970633,-6.001886,-7.966362,9.232097,3.268900,-5.114004,0.504052,9.395488,-3.969424,4.588259,5.506592,-9.172687,3.025937,-3.890270,-2.406904,-1.720717,-7.847977,0.869653,5.242810,2.425517,-2.355800,-4.849915,-9.511760,-4.298887,-5.279860,7.948196,-0.271118,-3.724272,3.518687,-8.391251,-8.863314,6.341370,8.783575,6.579369,7.821637,-6.128126,7.633453,-9.482346,-2.037459,-8.118853,-0.301588,-6.299300,0.019279,-7.150816,0.189192,-3.142411,-6.619620,-1.530842,-9.200971,-2.851317,-8.262389,3.132900,4.158721,-7.260990,-2.754835,2.606006,-2.552475,4.976521,-1.278649,0.688444,-0.676362,5.116331,2.270344,9.621258,-1.139108,-5.901126,-9.532480,-5.652144,4.312363,4.145537,5.217188,-0.664085,3.615793,1.319873,-4.109921,5.112850,2.521653,4.156085,3.330975,-9.681994,-6.140914,-4.258353,3.260493,-1.139192,4.754551,-3.571759,-5.391400,7.651465,6.332150,-9.865730,5.293406,-3.065733,-7.904344,7.114136,-9.241726,8.718483,-3.433860,5.359984,-5.679569,-4.661124,-9.737248,-7.367215,-3.569131,-8.186679,4.132383,4.622355,-9.555251,9.110948,9.535278,-4.860085,-5.018557,-3.616004,-6.715232,-7.827070,7.526853,-1.053436,-3.670979,3.998505,-5.573684,-3.549058,-1.001854,-4.645488,3.739116,8.012277,7.072380,9.632595,-4.675831,-3.573868,6.192641,7.606530,-1.682366,-0.087445,9.233073,1.162380,7.968337,5.792040,8.828230,4.830761,5.049351,5.687122,-8.404101,-0.312862,-8.789912,6.556225,-6.445449,-5.614278,8.893517,3.653195,-8.343309,-6.306733,-1.854670,5.209803,-4.186480,-6.509188,-5.854092,-5.824305,-9.073962,9.435497,2.958855,2.167404,9.772410,-5.607655,-0.511729,4.253311,-1.800007,1.037791,1.025789,-9.797520,8.395789,6.996920,-8.470521,-9.565571,4.423888,8.880622,2.454348,-2.893719,2.679065,2.158379,-6.727221,-3.224943,-4.945008,4.048776,6.290477,3.889751,-8.387708,-6.087189,-0.723264,-4.089431,-7.782446,5.869601,-9.039594,-4.693910,-8.043405,2.810042,4.099121,-0.525499,5.233196,2.608336,1.931626,8.624826,-4.037081,9.196663,4.179829,-5.882012,2.007553,8.337061,4.387139,7.756521,0.502563,-4.711316,4.129456,-9.983493,-2.205014,1.660838,1.799932,3.286720,-1.698275,-1.973629,-4.875399,2.640718,-1.786691,2.870675,-7.554347,-5.236185,-9.372633,-4.957277,0.194210,-7.230148,8.405356,1.665681,3.878368,-7.403465,2.842421,8.585899,0.692559,-8.279142,3.052686,8.478639,-9.712868,6.417090,-8.543619,-3.173425,-1.624591,4.081162,-1.354416,-0.427239,5.065850,1.371560,-8.309337,0.927640,9.556511,2.500428,7.353914,7.538740,-5.656255,-4.874302,-5.306106,-7.769376,-1.885391,-4.415675,6.165576,-9.930363,6.948941,5.317977,-6.423150,8.851407,-8.776516,-7.870135,7.814759,-3.206930,-6.343367,-1.627467,6.750940,6.400405,-0.410227,7.267284,2.329063,5.813477,2.170165,-1.513771,0.809665,-4.570239,-5.551428,5.648066,-8.322619,-2.348015,7.152929,3.856971,0.776092,-4.194043,6.187443,2.884600,2.398221,0.013125,-5.242858,-3.242327,-2.908000,6.475303,8.017136,-5.854416,-9.976430,-6.392609,-0.538004,4.105002,-3.573491,7.609797,6.450943,-9.325963,7.891800,3.956832,0.691850,4.957289,-0.287387,7.671352,-2.386483,2.659934,-7.361667,-8.651904,-3.394454,-6.816798,1.677288,-3.217898,7.301388,2.155076,-4.494752,-2.917381,-0.052487,1.988282,-4.616453,-2.741329,1.531940,-1.898840,5.826534,-4.377722,-5.889016,-3.904249,-8.600940,-8.025327,-2.308226,1.355026,-0.690737,-6.770901,8.154106,-0.084542,-5.862749,-4.386239,-2.083444,0.924658,6.163492,2.850163,9.282217,0.389438,-9.232570,3.047363,7.837872,-1.781838,-4.655187,-8.415221,-6.997549,1.136140,2.093218,-9.544360,-8.529151,6.894056,8.927139,6.984960,9.471597,8.264653,-3.167983,-6.277636,4.737875,-5.194325,2.276551,1.614426,8.490544,8.377218,2.123957,-6.946405,8.612586,5.200345,7.711175,3.438139,-7.268078,-7.723644,4.776343,-5.389353,3.499775,-4.627746,-9.032644,2.776468,0.459077,-0.271692,-1.828735,-3.565771,8.991560,8.154836,1.559396,3.470090,0.356788,-5.362726,-9.933627,2.352478,9.216203,-4.303131,2.269067,7.720195,-7.720241,0.162931,1.191666,8.415155,-0.122144,2.882149,7.749456,4.445143,-0.901744,-0.954301,-4.306121,6.545060,0.054382,4.028472,4.784709,0.022471,7.284119,-9.404662,7.839246,5.692222,-3.846391,3.586725,1.543615,-8.490010,-0.933994,-5.965018,-8.950975,4.386210,8.560608,8.128816,2.281577,7.183304,7.990770,8.297153,2.477102,-4.352952,5.079161,8.680443,-1.863694,9.836924,-5.455318,-4.989404,9.289574,2.944696,-0.372085,7.857641,5.827589,-0.876330,-4.886347,5.557692,-7.136008,-0.885966,8.927936,-7.472703,8.739588,5.148890,9.316629,0.572419,7.138941,-4.188038,0.818391,0.645578,-9.118808,2.078664,-8.685478,-2.562191,6.848628,-6.573902,-6.513294,-9.516397,-9.055467,-2.964067,4.489173,-3.758471,-8.670762,1.447816,-0.873399,-1.139518,-2.758499,-9.433097,5.193377,-5.107099,5.821738,8.546246,9.149416,2.442383,7.470613,-4.381080,7.368417,3.249135,0.097208,3.188379,-1.490664,-0.674682,-1.690371,1.454665,9.175579,-7.682588,-3.741812,-5.506224,9.610121,-0.263193,5.483233,-6.224870,4.503017,-3.308066,-2.488160,8.823077,-8.076802,5.739305,-9.216038,-8.932677,-4.606655,-6.527472,-5.003450,3.955086,-5.209087,7.160265,-7.572477,2.773686,0.777841,-3.236378,3.474237,-8.189386,2.040916,-4.145124,-2.959025,5.811560,6.983162,-6.762222,-0.021795,-0.186640,0.628782,0.339529,4.557103,2.926211,-0.696871,-1.788375,4.162764,6.320856,-0.235395,-3.229311,-3.230475,-4.062478,2.567787,-8.201136,-7.624444,5.891214,-2.185252,3.825184,4.039192,-1.755064,-0.012244,0.075742,-0.602032,-6.499604,9.443243,9.558134,-4.409873,7.382197,-2.441422,2.874786,-2.253367,-7.205442,4.198853,-4.328371,2.306704,8.806947,8.709096,8.258120,6.780512,1.591955,6.826454,3.453938,-3.973995,8.605933,-1.023327,8.271917,5.744576,9.104141,0.479678,3.558672,-3.194259,-9.515404,-9.739136,9.510698,8.564244,-3.420107,-1.006450,-0.699653,-9.617127,3.230866,-6.990134,-3.401112,5.986134,4.445832,0.672425,9.063914,2.708356,-0.963893,2.644966,2.709708,-2.989655,2.575912,4.093602,2.617737,-0.167592,-1.001972,9.503977,-6.530800,-1.131677,5.153248,7.614302,-7.996103,-5.066886,-3.723576,-2.331204,-3.448640,8.802837,4.321591,1.492065,-9.413464,-6.924809,-0.872461,6.376745,-3.187885,-2.348870,-0.713613,-9.281438,-4.212440,3.559469,-5.428023,2.944435,-3.089497,8.445862,5.495016,-1.316807,-7.142753,9.461799,-6.295479,9.753406,-9.099397,-4.205197,8.677163,2.820958,5.164956,-5.478956,5.715427,-0.302078,-6.565953,6.456051,-9.914475,-5.901111,-8.601181,1.792466,-3.657074,9.556026,1.000576,0.168211,-5.521287,-0.841054,5.397147,-9.556860,-0.712365,-6.779185,-7.838217,8.817744,3.094612,1.510652,3.109369,-6.552448,8.933544,-7.340789,2.620712,-7.856144,7.721430,5.371973,0.409144,5.334891,-5.512800,6.049292,1.524447,0.514984,-1.578176,4.661132,-2.274643,8.423365,7.354973,-6.254832,-0.214770,6.901956,3.558436,-9.530974,-8.615118,4.731489,-6.933954,6.458982,3.049302,-4.004013,5.080482,7.810753,-1.305825,9.039806,-8.445880,-5.480939,-5.882006,-1.778676,0.119804,7.320831,-0.659447,-0.120733,7.760550,6.681239,1.339434,-5.070525,1.493225,-0.288217,-4.545367,9.001246,3.236840,4.018911,8.073314,4.704161,2.895361,-6.283638,7.432669,-6.963570,-2.369780,8.775168,2.649783,-3.776980,2.167222,-0.355254,4.424668,2.373311,-6.288070,-0.066007,-8.539662,-4.387508,-0.205319,-4.965144,9.763917,-2.138090,-0.298533,4.451890,7.937545,-6.342949,-8.302102,1.413999,-9.545063,-7.638744,4.020752,0.321190,3.578144,0.261106,-3.810989,3.731497,-7.431692,-3.578977,-5.132469,8.392122,5.044507,-5.952185,-0.046265,0.979677,-1.373099,9.571896,5.422412,-4.493613,-1.905135,-7.273596,4.719256,1.167137,-9.694738,-9.345802,4.409173,-6.411077,6.020574,9.238303,-3.217141,-2.128676,-7.705165,8.057966,-4.306184,-8.727874,5.216825,-0.944571,7.843395,2.754473,5.965626,-2.291262,5.218101,5.390949,0.311519,-0.152375,-0.934249,0.038204,3.611182,-4.403549,-0.367471,-1.652468,4.227332,-6.270366,-8.723798,-5.915187,0.234001,6.644455,-3.905351,8.081036,5.868805,9.672651,-4.735499,-6.821265,5.576624,-5.182527,-0.634883,-6.677636,4.087728,-4.514060,-0.193836,2.033874,8.583654,-1.690683,7.440489,9.842638,3.357466,-5.587172,7.596393,0.620311,9.972214,-8.953652,3.691215,-8.391754,3.600408,-2.237226,0.577634,4.289398,-6.744086,-8.553603,2.244065,-7.227391,0.963411,9.957746,-7.811593,7.059367,-5.162909,1.199380,-8.109977,-6.374951,-9.213776,2.414691,-5.720766,-7.868421,-3.241453,-5.881660,-0.345904,9.330076,-1.727593,6.320298,4.290325,-4.617788,-5.738760,4.945435,1.217760,1.853932,5.230102,-4.928663,4.179986,-4.107865,3.646706,-7.951581,-4.994417,4.692787,-6.784558,4.373837,-9.541011,6.307305,5.840086,6.709659,-2.027459,-3.550149,-7.452231,5.057418,2.347493,3.191526,-1.130258,-2.048289,9.255513,0.962384,-1.738065,-3.931837,1.302736,-0.142476,-6.338263,6.623253,-4.113446,-1.471130,-5.844325,-3.113844,-7.196852,3.768424,8.332199,7.022217,7.969982,-6.671399,7.532271,-8.122360,-5.935982,6.088384,5.758183,5.011005,-2.976179,-2.589620,3.055207,-3.976804,-9.595295,2.046470,9.493508,3.436925,8.348331,1.857110,-8.226187,8.532197,-1.058262,6.330989,-6.002182,1.678924,3.419758,8.231460,-0.527510,-3.016187,4.310697,6.956231,-1.091296,-1.358382,-0.829651,-9.463514,5.015615,-7.945352,-0.333014,5.022651,-3.877860,9.486823,-1.422101,4.709164,-9.217013,-3.802393,6.207901,-2.068871,-2.462632,5.338958,-2.387716,8.290185,-7.990857,3.713577,1.982532,0.402986,8.785690,9.934973,8.716673,8.707987,-6.752309,-0.108572,4.913278,3.747816,1.332460,-4.597048,-4.270524,4.121746,7.152012,6.473428,-4.863880,6.753315,7.221084,1.619377,7.580924,-2.260185,-3.672916,1.972593,-5.923881,4.331026,5.456537,3.862488,3.275047,-3.311203,-3.254419,-9.848100,-0.833798,-1.081124,-7.357785,2.399728,-1.090134,-0.363860,-6.989185,-1.468925,-7.497108,-1.694473,-5.118543,-5.431577,-1.219492,-0.107493,-1.480190,8.822131,-0.125154,4.437802,-3.909917,-7.391376,-3.446757,7.774966,-7.148276,0.223110,-3.553706,5.214363,-7.288491,-7.261255,-3.571771,9.821763,1.312690,-5.406965,-0.345718,7.656549,-5.362042,-4.826254,-3.975517,9.720312,2.478765,2.828254,-5.041022,-3.781381,-6.891210,8.796325,-1.044452,-4.980719,-4.507812,1.249919,-2.605656,5.339643,4.085576,1.116976,5.676586,-2.579285,-4.663035,-3.321782,-2.285630,3.194073,-6.215863,-6.543301,6.786661,-9.778623,5.695752,-9.694058,-5.695878,-7.610391,6.074767,5.926208,-9.115063,-6.994119,-3.045989,5.949824,4.392415,2.124609,7.327247,-2.663300,-4.152369,-2.770825,2.795246,2.573604,-2.172519,1.455734,-7.912821,4.180741,-3.851413,0.362852,-5.355186,-2.036261,8.685383,6.713866,8.534090,2.599039,4.682303,4.083368,-6.115103,-7.518478,-6.798404,6.294108,0.247470,4.777016,-4.773430,-7.592106,3.015128,-6.193077,-0.340180,2.325360,-8.617759,-5.448409,6.085492,-7.533683,-7.470084,-7.027590,-7.144191,1.052547,-0.965959,2.096672,2.835844,-5.423601,-2.536135,5.744697,-1.215698,-9.320506,9.631429,-3.143540,-8.350648,0.049295,-2.328820,3.139661,4.591601,-3.320053,5.072180,-3.653108,0.032696,8.860289,7.806689,-0.282839,-5.460977,-7.644013,3.676445,-3.827874,5.413765,4.423726,9.015934,-6.981700,6.827941,9.279290,8.491074,-8.143564,-6.609985,-7.927663,-0.996622,7.410673,-8.825826,4.128569,5.578461,1.747663,3.952901,-9.151348,-9.348310,1.197047,7.386359,-3.120538,-1.685483,5.501897,0.345363,-2.325446,-2.574332,-3.687627,-6.810320,1.849897,4.754704,-7.619768,8.674768,9.868062,-0.743964,2.587395,0.360324,-7.655287,-1.228992,-4.736570,1.565712,-7.473323,0.603722,-6.012365,-7.068218,7.564659,3.736562,-5.615364,-2.881508,-7.377429,-1.999268,-8.905341,0.534671,6.102363,-1.668943,0.664455,-1.643520,9.703524,-7.201541,7.846134,7.128837,-3.493214,7.808442], dtype = "float32")#candidate|8482|(1404,)|const|float32
const_8483 = relay.const([-7.547848,-7.296125,1.713186,1.455415,3.091230,9.158767,5.006056,-3.362133,6.133350,3.768100,8.743364,2.025069,3.871606,-1.524997,-4.431691,-9.341458,3.028375,8.240288,-0.022140,3.040553,-1.147127,8.499637,8.536029,-9.542299,-2.295175,6.594728,2.768111,-3.129237,2.884851,9.866733,-5.940321,-7.448442,-4.329753,-6.624027,-4.033385,5.653964,-5.380694,7.222560,-2.018651,-6.845278,0.019508,0.328185,-0.046929,0.589714,-5.951373,1.473749,-8.439240,6.159357,4.977630,5.631780,4.627650,-0.009636,7.113167,8.264903,-0.755420,1.341731,-7.333284,-8.045198,-8.994071,-3.721563,-5.131885,8.294727,-2.055770,-8.908212,-8.514841,5.878482,-0.432081,-8.259147,5.308583,4.155003,8.210588,2.865981,5.013164,3.579556,1.990478,8.210527,6.731559,-8.805675,8.482532,-3.417860,3.993977,8.357298,6.339197,3.452598,-3.397473,-4.696760,8.838306,5.761468,3.041616,-2.221294,-4.222774,3.616112,-4.221689,8.019805,-6.266837,-5.392069,-5.828323,6.897616,1.797154,-5.121169,7.984340,2.724629,4.359684,-5.176459,3.872072,7.839977,-8.549324,-3.373040,1.754502,-7.769953,5.622277,2.904496,-3.127234,3.110279,4.107197,9.283256,5.194766,-8.954045,2.982278,5.263509,2.605941,7.190730,3.832982,3.769844,4.451111,-0.655252,-5.071717,-9.125402,-1.456227,-9.771010,-3.031584,2.768922,-3.996299,-5.467429,-2.676384,2.622521,-3.259434,6.368201,-1.176791,-4.369866,-5.899821,-0.256081,-0.256028,2.515679,-2.783995,5.893995,-9.875896,-0.288006,-9.156752,-7.956584,2.935151,-9.103572,-8.919298,0.295542,-8.556259,9.660278,3.674515,2.946621,-0.724753,-0.979113,-2.596517,1.978137,-3.985625,-7.187210,-1.202308,0.830332,-8.326045,-1.044335,7.843617,0.981371,4.445910,-1.394490,-1.630785,9.215054,0.328878,2.630558,3.815295,-0.290202,1.691446,-6.406169,1.110951,9.419578,2.161666,4.660709,2.009796,5.057614,1.878903,4.684886,0.767496,-6.276045,8.460735,9.452388,0.688495,-0.468730,-0.746649,-3.784265,1.631851,2.887761,0.198008,6.376794,9.910825,-5.873520,6.458064,-9.009038,-9.756173,2.748702,-3.163307,-3.862478,-8.990406,-2.395752,3.124136,-5.848773,-5.041741,5.843292,-5.313494,2.386059,4.016918,-2.990218,0.390917,-6.400361,-3.970785,0.407298,-1.335886,-9.816990,8.911470,8.383275,3.820821,6.315406,0.200547,-9.202041,6.581541,7.552616,5.309312,9.547907,-1.287314,-0.981415,4.700295,6.453494,0.741098,-6.180930,9.792433,1.927299,-9.735021,-1.507945,4.151709,7.667108,-5.570960,-5.676981,7.448122,8.493587,3.590879,-7.771843,1.245937,-1.902225,2.566804,5.160599,-3.904381,0.203762,2.795042,-0.243869,-2.480989,-3.909835,-1.267366,-1.835800,-4.076450,5.761230,4.655746,9.560094,0.180363,9.153409,-1.504595,0.516420,4.439842,4.850693,6.027768,-4.798730,-9.332704,-8.758267,0.756636,-5.552863,-6.256220,2.863167,7.451448,5.498337,-8.764749,5.705189,5.004514,6.355165,0.907038,-8.971530,-8.814479,7.332142,7.538321,8.565675,-6.363100,-4.900737,6.225181,8.425084,-7.296509,2.326473,3.108253,-4.068644,-8.108509,-6.537920,-4.694096,-9.741367,1.084859,2.429173,9.142742,7.756030,-9.678597,8.957987,8.753078,-8.646125,0.287063,-1.841693,-3.515181,4.377111,-6.713286,9.900231,-2.564158,5.213757,9.701244,-2.154520,6.305181,-6.567779,-4.302489,2.266249,-4.572931,7.852061,4.454872,7.066275,-8.616238,-3.166042,-5.739763,-1.908741,1.225969,-2.949184,-9.582812,-7.918965,-2.128120,-0.545582,-2.007330,-3.581171,4.789264,-8.910500,9.098526,0.604291,-2.612650,-9.999817,2.144049,-9.502065,-6.602530,3.869536,9.638396,-3.938191,-2.971716,-5.804501,-1.721422,-1.642150,9.887844,-4.877616,-2.892998,-9.960820,-9.922362,8.012245,4.903036,-4.357649,-7.735328,7.764910,3.793400,8.928449,-6.303069,-1.429517,-9.670867,-2.897480,4.863040,-6.753880,-1.682153,1.686295,4.438333,-6.405689,-4.028743,-8.227795,-4.992836,-5.841259,6.259261,-3.736680,-7.660497,-2.760603,6.240887,-1.451831,9.299366,-2.818381,4.047721,-4.649629,-0.084284,-5.414143,-1.708758,1.258462,-4.843562,-7.199360,0.273432,9.589902,-1.193428,-5.665077,-0.368530,-3.581088,0.400691,-4.905266,-6.850284,3.908930,7.546459,5.431362,-0.613249,8.724003,1.757283,-3.638870,-1.783574,-2.368479,7.210245,-3.370083,9.666729,7.336838,3.053853,3.147069,6.178112,-9.861827,-8.526274,-0.002262,-7.588591,5.820237,7.755530,-4.838694,9.730746,-6.423544,7.342214,0.881542,-3.044350,1.464186,-9.958731,7.422525,7.405767,-6.310339,-1.047292,-4.504253,-2.176962,-3.604643,9.062770,8.642465,7.526357,9.930212,-2.519118,7.564142,5.355540,-7.452671,0.349454,4.689463,7.216832,6.415642,-1.510008,-4.741165,6.925146,1.904130,0.110651,-5.172613,-2.565088,9.564272,-9.806930,5.498054,8.731107,2.197159,-2.467964,6.570579,-3.584266,8.538560,-0.256497,-7.024175,-2.385330,-9.420498,-5.034312,-8.100215,-4.563512,-5.542484,-8.102834,3.659500,2.784460,-6.321232,9.135540,-8.591884,-9.364000,8.133767,7.715301,7.550963,7.814751,-4.313672,-4.623359,-6.615791,-6.333139,3.429465,0.355395,7.399670,7.599813,-9.271233,4.506147,-9.058040,-8.413920,0.963066,5.645680,2.603874,-1.650500,8.276334,-6.541234,-2.341072,-7.557596,6.504927,-2.555486,-7.607840,-8.191188,-8.598302,3.819004,-4.666713,-7.005174,-5.539214,-8.006494,-3.782945,1.372040,7.657225,-3.520081,-2.868374,8.057432,-6.668392,-5.092066,9.425566,8.886122,0.442403,-3.770574,-5.015670,8.250659,2.702126,-0.694118,-1.134881,8.061601,4.840876,6.840158,-0.962395,0.210003,-9.063719,3.643409,-6.836330,-3.118101,-8.992779,9.298090,7.843162,1.700616,-4.465497,4.862383,4.682131,-3.306217,-7.227095,-1.501629,-3.687565,9.165792,-7.718626,-0.835180,0.398063,-0.724406,-1.386307,-0.065074,-7.712425,-7.696168,1.132213,3.265610,-3.211050,8.398144,-5.431834,7.298642,6.782572,3.331538,5.144274,-3.682855,-5.140410,-5.711414,9.985018,7.761060,-4.807748,-6.190237,3.114484,-8.025573,-9.086594,-6.004503,-9.163907,9.090740,-9.050124,5.710321,4.815597,-6.621480,-6.710363,-5.764836,3.622206,2.694653,0.102207,3.235234,1.835618,-3.353073,2.567568,-4.540390,-8.874696,7.974252,4.686556,-4.287607,-9.716648,-2.496690,-6.869721,-6.421012,-6.047462,1.256912,-6.434122,-8.880739,9.277407,5.254312,2.463058,-4.423337,7.941546,-3.993692,-7.651370,9.464955,1.697401,4.510261,-3.492501,5.044591,8.493437,-3.002110,9.751963,0.121476,8.959995,7.153536,2.861347,-3.658769,5.207091,9.777208,-0.166227,2.101843,-5.771256,7.838396,-2.813528,-9.778320,9.145511,9.617891,6.286531,6.907379,1.853205,-7.482862,-2.946285,-3.810764,0.985552,1.743421,-8.307584,-0.164457,0.422714,-7.477044,-0.520903,1.564974,6.077364,0.784961,-3.141043,-2.112972,4.735653,-2.686507,6.904503,-6.668400,-3.459013,-1.796351,-1.811308,4.390287,-3.429605,3.981983,-0.885490,3.741817,-1.104111,0.639483,9.039754,-4.614007,-0.723040,4.595319,4.425982,-6.709584,4.814366,7.269680,6.477103,-6.222524,-0.682591,4.720872,-5.098878,-4.183679,1.631541,3.635087,8.123485,1.480751,-4.554814,-5.457730,-5.166417,0.183990,1.118356,7.453575,-4.486332,6.028278,-9.504503,7.963000,7.623058,9.751065,5.773161,1.461662,-8.471388,-8.693962,0.272831,8.723522,-6.204448,-3.308832,6.280115,-8.855516,3.233028,-9.470701,-1.443278,-1.551713,2.163934,-8.249290,1.813427,-9.952376,1.569041,-2.352863,8.343279,-9.337339,7.516681,5.001931,3.871691,-3.608308,2.640722,-9.155951,-5.553278,8.372466,-0.035656,7.383950,-9.219584,0.827027,-8.952960,-6.296083,7.929583,1.977184,8.314959,2.538750,9.617893,1.097446,-2.130412,-3.366300,8.615707,5.581901,-0.681291,0.139746,-5.388457,-4.584548,-0.365893,-6.197412,7.718387,-7.894947,-4.404887,0.264870,5.208965,6.999481,-8.283275,7.365528,8.814096,0.265015,5.397615,-9.689953,-5.681748,-0.711250,-3.615796,-4.123325,3.364454,-0.469598,7.830336,1.483177,7.520451,-8.630082,-2.377913,4.451310,-9.238725,2.037462,4.392303,7.153286,-0.676475,-7.524664,-0.928852,9.446985,-3.283994,-8.205643,6.803883,-5.937676,-4.530208,9.419197,-8.842357,-8.325234,1.759352,-9.245048,-1.635840,-9.105729,-3.781216,7.992356,-3.534271,-0.826930,-8.985506,-2.538593,-4.696450,-7.406256,0.787981,8.979016,-4.622474,8.870452,-7.203681,-2.068479,9.952253,1.155307,-6.225105,8.301112,5.291592,9.170745,-8.304306,-8.219185,-8.862977,5.536583,-4.306139,-2.256120,-6.119930,-5.717142,9.814135,0.300683,-8.515295,-4.110226,7.539947,6.655298,3.055385,6.923442,-9.173753,-0.096635,-1.243171,-0.370712,1.559294,-2.761032,-7.405890,-5.301583,5.346240,0.781451,-1.312728,-5.203637,2.412602,0.882590,-8.018483,-3.672898,-6.538760,-1.269415,-7.904385,1.123194,8.392496,3.530908,-8.482468,1.199388,-5.467944,6.797775,7.392533,-9.428991,9.735735,2.363427,-7.191374,-6.390365,4.053032,-8.690285,-1.979774,1.460087,0.258506,5.998564,-8.719720,3.118778,7.772022,1.434196,3.235282,0.888934,7.306420,-9.956789,-0.023969,-8.157324,9.232904,5.300679,-9.294283,2.144921,-8.774970,-9.897809,-8.004400,8.649510,-6.773413,-2.784426,-4.033379,4.768051,-8.191205,-0.262323,-9.256261,-9.711126,0.849286,8.419429,-9.301468,2.468209,-5.905559,1.261928,6.801850,-0.097299,-5.855065,1.863164,7.159098,-0.951035,5.630724,-3.860407,-0.589848,0.942653,3.722052,3.285613,-2.590364,-0.936770,-9.342213,5.243117,-3.754780,-8.554785,-9.500210,5.443580,-9.618784,0.160036,-9.799530,0.913874,8.201099,-2.026584,-2.468466,-1.473503,-5.792573,5.070838,6.268190,8.643420,-6.121146,-4.779793,7.899239,-3.546076,4.487291,4.049514,-8.166632,-3.799532,-7.012094,-7.937053,6.184439,0.186413,4.925382,-9.908904,4.397054,-2.104675,8.658252,-6.372377,-1.624642,-2.482895,-8.017989,-7.168280,1.000774,-1.398023,8.659899,-1.081811,-8.185572,9.193345,-0.619857,-0.788324,0.445907,9.788083,0.012433,3.238471,1.254326,1.183416,-1.293622,-2.205889,8.621801,9.195740,8.923962,3.261477,4.823980,0.276198,-0.076459,7.038273,-8.233371,3.531964,-4.901926,8.572753,-3.030055,3.504693,-2.305929,-3.677882,0.776170,6.795737,1.038462,-2.275646,0.345150,-9.329249,2.193204,2.138885,6.697134,7.557444,2.502854,8.249180,3.738083,-9.239423,-0.740250,6.042228,-5.958011,-1.491524,4.790216,-5.361395,-8.175896,6.775682,-9.306900,9.876932,7.207161,0.215507,8.879779,-6.909658,-5.431655,5.088936,-0.940501,-9.831529,6.462195,-8.179182,5.972307,6.888856,-6.828820,7.216326,5.569492,-1.835666,5.901815,7.984545,-5.662625,3.316504,9.001053,9.402948,-9.606198,-2.295271,-6.448430,-8.447075,-9.517405,6.777189,-7.357071,7.938308,3.933817,-5.784220,-3.578194,5.622961,-2.009602,5.654533,1.162997,8.734930,-9.639666,3.909722,-1.734706,-3.540781,4.799712,9.998801,-3.657351,4.806630,-8.092712,-3.549197,-5.291492,6.797186,-4.723757,-0.540918,8.117530,3.791265,5.888386,-3.100243,0.378047,-3.703592,-9.404531,-0.679164,8.723041,-8.677215,-0.421395,-0.137711,4.479840,2.898659,-0.700321,5.490691,3.780515,8.172758,-0.940540,-3.447089,-5.053769,-9.909824,8.025434,0.774457,6.575082,-9.298085,-1.201195,-5.615857,9.369622,3.923513,8.039237,2.213844,-7.194491,8.396553,6.512415,-4.273824,2.533952,-1.634323,4.857142,6.564013,-0.735344,-7.089604,-6.794732,-0.774586,-0.727552], dtype = "float64")#candidate|8483|(1120,)|const|float64
call_8481 = relay.TupleGetItem(func_4454_call(relay.reshape(const_8482.astype('float32'), [9, 13, 12]), relay.reshape(const_8483.astype('float64'), [280, 4]), ), 4)
call_8484 = relay.TupleGetItem(func_4457_call(relay.reshape(const_8482.astype('float32'), [9, 13, 12]), relay.reshape(const_8483.astype('float64'), [280, 4]), ), 4)
func_7561_call = mod.get_global_var('func_7561')
func_7563_call = mutated_mod.get_global_var('func_7563')
call_8498 = func_7561_call()
call_8499 = func_7561_call()
output = relay.Tuple([call_8454,call_8462,call_8468,const_8469,call_8481,const_8482,const_8483,call_8498,])
output2 = relay.Tuple([call_8455,call_8463,call_8470,const_8469,call_8484,const_8482,const_8483,call_8499,])
func_8508 = relay.Function([], output)
mod['func_8508'] = func_8508
mod = relay.transform.InferType()(mod)
mutated_mod['func_8508'] = func_8508
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8508_call = mutated_mod.get_global_var('func_8508')
call_8509 = func_8508_call()
output = call_8509
func_8510 = relay.Function([], output)
mutated_mod['func_8510'] = func_8510
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7449_call = mod.get_global_var('func_7449')
func_7451_call = mutated_mod.get_global_var('func_7451')
call_8532 = func_7449_call()
call_8533 = func_7449_call()
uop_8542 = relay.exp(call_8532.astype('float64')) # shape=(13, 12, 3)
uop_8544 = relay.exp(call_8533.astype('float64')) # shape=(13, 12, 3)
func_7561_call = mod.get_global_var('func_7561')
func_7563_call = mutated_mod.get_global_var('func_7563')
call_8546 = func_7561_call()
call_8547 = func_7561_call()
output = relay.Tuple([uop_8542,call_8546,])
output2 = relay.Tuple([uop_8544,call_8547,])
func_8550 = relay.Function([], output)
mod['func_8550'] = func_8550
mod = relay.transform.InferType()(mod)
output = func_8550()
func_8551 = relay.Function([], output)
mutated_mod['func_8551'] = func_8551
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4293_call = mod.get_global_var('func_4293')
func_4294_call = mutated_mod.get_global_var('func_4294')
call_8572 = relay.TupleGetItem(func_4293_call(), 0)
call_8573 = relay.TupleGetItem(func_4294_call(), 0)
func_7891_call = mod.get_global_var('func_7891')
func_7892_call = mutated_mod.get_global_var('func_7892')
call_8576 = relay.TupleGetItem(func_7891_call(), 0)
call_8577 = relay.TupleGetItem(func_7892_call(), 0)
output = relay.Tuple([call_8572,call_8576,])
output2 = relay.Tuple([call_8573,call_8577,])
func_8582 = relay.Function([], output)
mod['func_8582'] = func_8582
mod = relay.transform.InferType()(mod)
output = func_8582()
func_8583 = relay.Function([], output)
mutated_mod['func_8583'] = func_8583
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6116_call = mod.get_global_var('func_6116')
func_6117_call = mutated_mod.get_global_var('func_6117')
call_8597 = relay.TupleGetItem(func_6116_call(), 2)
call_8598 = relay.TupleGetItem(func_6117_call(), 2)
var_8606 = relay.var("var_8606", dtype = "int8", shape = (2400,))#candidate|8606|(2400,)|var|int8
bop_8607 = relay.logical_xor(call_8597.astype('uint8'), relay.reshape(var_8606.astype('uint8'), relay.shape_of(call_8597))) # shape=(2400,)
bop_8610 = relay.logical_xor(call_8598.astype('uint8'), relay.reshape(var_8606.astype('uint8'), relay.shape_of(call_8598))) # shape=(2400,)
uop_8613 = relay.atan(call_8597.astype('float64')) # shape=(2400,)
uop_8615 = relay.atan(call_8598.astype('float64')) # shape=(2400,)
const_8617 = relay.const([-0.420099,-1.612118,2.277871,6.460835,-0.621649,-8.799180,-6.930993,5.366871,2.990683,-2.080680,-9.096954,-2.958955,-2.302169,6.550757,5.755473,4.645025,-2.975232,8.157968,-9.489440,-6.503088,0.520520,-1.849824,0.723370,1.071710,1.162726,-7.585419,-4.591131,8.827336,-8.392990,4.269846,2.139227,7.451799,-6.405773,-8.763919,-5.687191,8.835428,0.912104,6.119868,-3.284666,-6.988704,-4.810616,3.873127,3.366274,5.535347,-1.185954,3.272082,7.769591,8.721340,-1.550277,-1.514367,-2.490597,-5.972463,4.154622,5.245742,4.625025,8.643774,-1.178606,-2.803323,-5.390783,8.705515,-0.676829,-6.465756,2.290482,2.290325,9.135121,-5.072122,-7.748205,-2.151033,-5.944867,4.804466,5.829523,4.311306,3.760572,4.622011,-0.940763,-2.227311,5.444434,-1.118709,0.282918,-7.813083,-5.456375,-9.438392,-6.242894,-5.019440,-6.685404,-3.231899,2.745116,9.402412,8.714237,-5.201345,7.609382,-4.888063,8.789685,-2.513372,-0.910629,-6.950712,7.751940,9.893589,5.958616,9.627560,1.034535,4.010265,4.051539,-9.723906,1.990238,-6.858425,2.502322,1.377207,-5.404228,2.260884,1.486965,9.227085,8.977800,-6.746647,-1.786759,-6.105478,7.546612,-2.977985,2.522717,0.790098,0.538104,7.409560,-7.736941,-3.218639,-9.091737,3.436067,2.286470,2.975934,-4.899296,6.944690,7.984137,-3.071121,9.110154,7.724471,8.472704,6.596807,4.553334,-2.839691,9.767301,-3.640256,-4.540206,5.317743,-1.664195,-4.947327,-8.361254,6.340372,-6.066085,-8.879461,8.102223,-9.881410,-7.337115,4.918695,-1.850605,4.863674,-1.949413,-0.395693,-9.663450,-6.452912,-8.530233,6.085972,-3.708014,-2.322976,-0.577248,-9.226015,-7.031969,0.611150,-9.241393,-7.632868,-5.335107,8.369703,8.819554,5.394723,6.022963,-8.902081,7.444000,0.400982,6.126608,-2.372260,-2.746802,6.824719,1.963536,-4.551224,4.143220,-3.483829,-3.873960,6.132963,8.158847,7.458292,-7.575919,-5.885952,4.193124,-1.943301,9.350033,0.412444,0.720297,3.559990,8.488428,2.844577,-6.457742,-9.473726,4.628083,4.644019,-8.377203,6.434989,-0.764405,-0.188334,1.302477,-5.710668,1.185843,5.479023,-2.442393,9.352349,-4.215614,8.088379,9.750145,2.270260,1.483854,5.502644,-8.257222,-6.455959,5.219351,-5.035638,8.750664,8.389193,-6.202057,-3.588254,4.761858,-5.897795,-7.407512,3.314389,3.184534,-6.799554,5.621171,7.208819,-6.657766,-1.690648,-3.502852,1.528439,-7.906977,7.132784,0.078649,7.877579,0.614069,-0.273498,2.054921,2.296931,-7.771722,5.887078,-6.619489,0.618660,0.770437,-8.049442,9.281566,4.505756,-2.821900,-5.912452,-2.158194,5.668690,-0.767298,5.385561,6.904431,-0.511977,-6.419342,9.965098,-3.123495,-0.265678,-2.521002,-4.953604,-1.119420,8.670476,-0.422054,-6.117787,-0.680473,-6.409443,9.137661,-5.004785,3.767702,-1.446909,6.909707,-3.708831,8.725290,5.545744,0.671358,2.336968,8.853921,-9.601821,-5.226278,7.926529,-3.823924,8.653873,7.868743,-8.772357,1.302343,6.659586,-8.889163,-3.920051,-2.243998,-2.451895,6.115728,5.598136,-1.800433,-4.308631,-0.698578,7.402753,-4.932817,-1.388643,4.926550,-2.145183,7.407739,4.217862,2.704568,6.592446,9.281057,0.295975,2.864636,2.018980,-8.659219,1.268577,4.846058,-0.222762,4.755511,-9.662733,4.171053,6.565160,-7.286518,5.342898,2.356148,9.670109,-8.563872,1.544828,2.278763,8.713119,5.135402,-3.728711,-3.667820,-1.238555,1.208820,-4.983021,7.363087,6.170963,-2.920814,8.385065,-3.640646,-7.401859,4.507022,-2.955558,-5.656274,-4.254696,-2.533011,3.112685,5.781569,0.088927,-5.228527,-3.719834,2.750288,5.755944,-9.372192,2.461528,8.528876,0.045114,-4.989586,4.530341,4.448412,-1.032702,-5.077149,-5.164347,2.644210,-8.071633,5.090378,7.918026,-8.270116,-5.144064,4.668353,1.422872,5.468136,3.918574,1.729806,8.666318,-1.676755,-8.329047,2.932098,0.758554,-2.699270,-7.000672,-3.520796,0.603549,-3.777023,5.292236,4.972833,-3.538283,8.736367,-2.269560,-0.942815,7.063611,2.752177,9.594463,4.912337,0.927544,-5.463556,3.695291,8.774695,2.125480,2.398776,4.266275,-1.211438,0.643251,6.394579,-4.554206,7.281816,2.807026,3.586129,9.919309,7.510434,0.155494,-8.246528,-9.790336,6.428765,9.136069,-5.386726,3.873872,-3.146696,-9.866452,5.844211,3.958417,-9.046925,5.017518,4.083614,-8.018771,-8.435464,-6.365421,2.035317,-7.405725,7.611746,6.761078,9.648660,-9.763115,0.564910,9.064474,0.760964,-6.769860,9.270349,1.831365,-8.474683,5.800308,5.141653,-9.355434,-2.420119,9.566166,-3.271210,0.880267,-5.059534,-7.572055,-2.018437,-1.028240,-5.073921,-6.709642,-6.305377,1.980990,6.175668,1.112150,-1.082364,8.501582,5.531133,-0.110638,1.147340,3.862287,4.857936,-9.838233,8.069494,4.058045,0.147267,-3.308403,-1.024456,-0.010328,-6.674723,-8.351331,7.052443,-8.001467,2.392692,0.452554,-9.923750,-6.647463,-0.723813,-4.439579,2.571267,8.506087,7.989376,-0.974436,0.157125,7.726600,9.863280,8.043313,-2.041017,9.067869,-7.722977,-0.499216,1.164317,9.848321,7.265566,4.073527,8.285234,4.951000,-0.816911,-8.736338,4.571298,-4.088622,-2.771295,3.179134,9.505027,-0.254848,1.358862,-7.449116,3.572422,-8.382149,3.807833,6.309402,5.630264,3.032141,-4.264404,4.480145,-5.619996,-1.121245,4.518924,8.039500,-6.863457,3.092289,-9.788075,-3.581246,1.579073,8.526715,0.933559,5.361100,1.134813,-8.896837,5.242889,6.907197,7.093671,-0.256271,-7.937745,0.243853,1.246657,-5.655467,7.915950,2.617567,-7.726186,8.832635,9.418936,-8.149186,-8.549679,-6.711081,-6.612023,9.077978,-2.827334,6.308807,5.753255,2.076822,8.384180,-1.520597,5.287845,5.740313,-4.739993,4.289160,9.882470,4.786247,-5.498905,0.999503,6.901471,6.160039,-1.631468,-9.522345,1.924524,-7.139792,-3.164108,0.628617,-1.646045,4.869024,-3.593086,-5.002384,-1.002277,0.232423,-2.952389,5.226707,5.643586,1.550614,6.031544,5.053728,1.818625,2.887771,-6.986848,2.975413,5.913390,-6.267433,6.127305,-3.815683,-4.541557,6.763155,-4.084814,-7.485194,3.218569,-8.760423,-8.589391,2.906667,6.874515,6.370884,-9.423125,1.877270,7.590733,5.106926,-6.433474,-4.622794,5.538310,7.150859,-5.319102,7.341583,4.247237,2.725117,9.661772,-2.477914,3.974518,-0.906898,-2.414369,-4.943708,5.541654,8.774149,0.695971,-5.190603,1.363569,-3.729322,-3.586093,0.377202,2.963427,1.226666,2.985820,-6.691356,6.376790,-6.954523,-9.775933,4.214605,-7.123704,4.628982,-8.588863,-7.285161,-1.104814,2.085974,-2.224521,-3.416013,2.431727,-0.395223,4.986449,-7.736501,-8.617788,1.285680,6.561264,-9.610381,2.354200,4.640496,-0.331317,4.321187,-4.779897,4.870532,3.414007,9.438201,1.191032,2.002552,-2.646277,1.306892,2.791362,4.131173,9.824422,-6.719811,4.496184,-0.315563,-5.247636,-5.169514,-5.125331,4.980559,-4.601955,3.156601,0.976735,-8.468164,-6.337001,-3.894363,-2.225710,-1.711003,8.274954,-8.347784,-9.136724,-3.352378,-0.944113,3.286200,-1.846282,-1.982262,6.590713,-2.023499,9.355016,-1.694310,-7.862919,0.169504,-1.627077,-6.608995,-1.734507,2.943240,3.048212,6.122271,-6.085261,2.822199,-0.745072,0.908987,6.053644,-5.413130,9.151092,-1.401279,7.820908,-7.884139,1.416664,8.804499,-6.939993,-9.431245,2.916260,8.000970,-9.495340,-0.811894,2.826909,3.329669,-5.314180,3.611959,-6.226751,2.901106,1.173630,-2.705256,6.717082,-5.178082,-5.635955,5.380201,0.291784,8.923863,3.525863,-4.041382,-8.433566,0.070292,8.441224,-7.126314,-2.122191,2.556149,6.438693,-9.276582,0.538084,-1.016491,0.319210,1.645756,5.060947,3.743239,8.364012,1.966654,7.377602,-2.211430,5.235695,-2.999098,-2.179793,5.805966,1.493101,-3.835194,-3.848723,-3.196732,9.420710,-2.230168,4.447578,5.092016,1.074411,-0.857148,-0.300854,2.104478,9.212993,4.873556,8.920232,1.713795,6.011824,-9.954169,4.429342,8.271946,-0.729452,3.858455,2.429965,-6.709142,4.187609,9.921948,3.974046,8.822773,4.018577,4.595680,5.090059,4.307930,-5.321648,-9.361717,9.798374,-9.060210,-7.615360,8.686799,6.175925,-3.537140,-8.209177,-0.775181,4.516532,-5.142063,-0.573617,9.273946,-4.345854,-6.248020,-0.827395,-5.497438,6.107244,-4.655164,-4.531371,0.077009,9.980859,-8.971510,-4.236561,-6.982973,-6.436829,-5.230636,-2.134476,-2.550130,-3.053747,6.308535,-6.991251,-1.791566,2.762040,5.110199,-3.359461,9.736319,-6.908408,8.850208,-1.847710,-6.152855,-5.882661,4.203948,0.054742,-2.433279,6.838079,-6.195635,6.435004,8.961165,6.032058,6.543623,5.700406,-8.951241,-7.866706,-7.340894,2.103849,-4.362986,2.703578,-4.379936,5.955073,4.781836,-2.139776,-6.875965,-6.742880,-5.274368,-8.283488,-3.165088,-4.049512,-2.989577,-0.632345,5.343830,6.434926,-8.740117,-2.817929,2.243210,1.960231,-8.258577,9.102687,8.527576,-9.094423,6.516822,2.445107,-1.766647,-8.859352,4.712770,-4.857438,-6.432502,-1.936245,-4.466301,0.105851,-5.487312,-6.631491,8.387892,-8.828318,-0.653167,-6.965629,2.475046,1.314968,-2.358490,-2.396212,-6.379278,-7.014534,6.084063,5.428774,1.477558,7.380390,9.821298,-1.157463,6.742829,-6.511016,5.428530,-1.669134,-0.037714,8.939799,2.191423,-8.768052,-6.904979,8.641562,5.552267,5.821808,5.463037,7.460668,8.182420,2.127590,-5.697762,-5.408303,7.500957,-6.402936,-1.534007,-3.912036,-2.827466,0.350321,2.527532,-7.139389,-4.498256,-5.104710,-6.217401,-2.567440,6.626037,4.812769,7.899929,-2.101659,-9.282589,0.242048,-7.961980,-6.766436,-5.745399,8.117895,-7.051504,6.037927,1.307607,5.531255,8.055636,3.874802,5.856360,-2.259879,-0.396761,1.621850,2.196811,5.989899,-6.488910,-7.833359,-8.376334,3.293881,1.105593,0.072718,-9.016727,9.569205,-8.588113,-2.440553,9.606367,6.157661,6.309408,-7.175076,5.668809,-5.895360,4.286480,-7.733301,-2.191028,8.518497,-1.958390,1.243483,2.992619,-5.486743,4.199641,0.496529,9.144826,0.583114,-5.993535,-8.896029,9.656968,0.733222,4.868671,-1.536496,0.977349,-8.973911,-7.797431,-3.692348,-8.627212,-4.883343,-2.226161,-7.904407,-2.669084,-3.340685,3.876862,-4.862231,-1.825668,9.826965,9.748404,3.095712,3.847727,2.324616,1.283615,5.642899,-1.638717,-0.109925,-8.332182,0.952401,-9.531402,6.115282,-5.953329,-1.021211,9.656787,-8.149293,-9.326509,-3.527435,1.013957,2.765678,6.745878,-7.373087,-5.789966,-7.505982,6.495890,6.654421,-5.937499,7.651436,-8.880219,2.403252,-1.790838,1.627901,3.778835,-0.313678,6.558045,-4.234564,6.962253,-3.725604,4.631304,-7.338531,-2.475258,-2.564451,-9.143307,9.917130,0.820183,-2.806279,7.009417,-7.248966,9.894166,1.193376,8.239100,-2.319391,3.857766,-7.028871,0.122572,9.357431,0.799506,-7.891465,-4.711156,-6.189444,-2.850801,7.753762,-0.503953,1.828461,-1.835166,-8.732749,-4.233834,-4.256910,-9.414678,-9.003446,2.973699,8.451377,6.369161,-2.998304,-1.683652,1.848860,-8.510926,-4.811648,6.482086,-5.208826,-4.295671,3.306191,5.832134,-5.005890,-5.058118,-2.660055,4.067348,-2.673838,3.268205,-2.067469,-4.931965,7.912762,-0.763227,2.394038,1.834661,1.219449,4.721840,-0.551256,1.460183,-6.475440,1.645107,1.481702,-4.657360,8.919174,8.174963,8.783941,7.244890,-3.282531,-4.449249,3.629637,2.394671,-3.249005,5.409202,-1.536357,1.678715,8.453466,5.999891,3.836873,-1.593977,6.838589,-4.742299,5.736072,5.249455,2.222966,-6.096531,8.662955,-4.796134,-5.835585,-6.206455,-7.107354,4.414048,-3.708112,-5.358058,-4.634256,-9.788128,-3.031873,0.104989,3.322369,6.735840,-9.349202,8.520550,-3.124599,6.864252,-5.871476,1.854087,-3.686453,-6.974998,1.146370,-4.181842,1.108041,0.444732,-6.304271,-0.379246,-6.818966,-0.257184,8.133207,-2.308164,9.955171,-5.078757,-7.439726,-0.018645,-1.470769,3.177955,-3.726951,0.166300,1.285647,3.377550,6.583988,1.075935,-0.831995,1.951333,7.953254,6.588516,3.597090,-8.293101,6.917646,-5.212891,4.207283,2.344087,-0.773484,-7.310684,3.847815,2.401620,8.334444,-1.307471,-1.126178,5.139121,-3.889040,0.176233,-8.177791,1.320726,-3.519018,2.885387,2.608389,4.645571,9.466168,3.288140,-3.243743,-3.582557,1.527492,0.518839,-6.804390,-8.528612,6.069003,-1.364578,2.565465,7.658356,-8.806675,-4.404099,2.705196,6.167404,5.770382,7.763709,5.699589,1.743529,0.788913,-6.089399,6.366814,-8.424931,-2.344821,-8.849948,-0.974608,-0.739146,-1.587580,-5.335718,-9.394061,-2.351831,4.471699,6.453327,5.805547,2.209869,4.481134,-0.178439,-3.474056,2.918169,-5.197529,6.633702,3.903526,2.191078,-0.518606,2.666067,0.469578,-2.462211,-0.200332,1.762769,-3.987835,-6.551542,-4.412845,-2.159241,5.405655,-9.175932,2.972121,-9.533124,5.319279,-0.319395,4.931088,-8.044432,2.259630,4.936255,3.272776,-6.744659,-0.343744,7.909797,4.393691,2.657874,-4.487850,-5.688490,5.153744,-1.444759,-1.349202,-1.317545,4.744769,-2.850997,9.331207,-9.127071,-9.858199,-3.601858,5.477605,-1.103013,1.054777,7.422110,7.089756,6.264470,-4.468020,6.181385,-0.683683,-9.515734,-3.628189,7.743100,4.516256,-5.125900,-8.559783,-6.533778,6.784188,-8.317193,-5.112315,-8.496782,-4.180586,8.491737,8.166447,9.078101,-7.993529,2.340644,9.997841,2.349264,-0.277374,-3.827023,-8.960644,-4.505809,7.489892,0.850860,-5.175611,3.042564,4.712616,6.989934,9.779144,7.296672,5.306333,4.729739,1.740327,1.059743,-4.947356,-8.293007,-8.313872,-1.470282,2.063554,2.385547,1.119821,-8.939484,7.270931,-1.856855,0.735357,2.721363,-3.738595,1.722335,1.805536,-7.178342,-4.779272,-5.327880,4.736884,5.631065,-6.653906,5.614723,5.153271,5.920819,3.841481,-7.569274,8.944966,0.394256,-8.313954,5.069462,7.312169,1.963021,-3.093265,-7.579129,8.810329,-5.353496,3.103672,8.658909,-2.662892,6.908861,-2.588857,-2.411314,1.553419,-4.400385,-1.768387,7.272968,0.270287,7.664058,7.548316,1.332169,4.752050,-5.849995,8.311898,-9.369933,-3.893658,-5.963434,0.774328,-3.151109,-9.515264,-2.136709,-0.270016,6.239020,-7.850437,8.313596,-6.073531,-0.380811,1.921608,-8.922922,3.560781,-0.701771,4.405499,-5.803045,2.964199,1.061996,2.347150,-6.320034,-2.329552,0.991477,-2.570812,-0.506624,-9.014556,3.659554,1.874683,-7.754962,-6.952229,4.434002,1.249216,-1.934839,-5.085946,2.352355,4.267161,-8.633169,3.350130,-6.127672,-4.609085,-6.272181,-9.055064,-9.888567,-7.599996,-3.736907,9.245324,-5.211052,1.966394,4.881226,-7.181615,-3.517627,-2.346285,7.578946,-3.517390,-1.878983,-1.978495,3.763824,-9.880221,4.514489,3.952426,1.342272,8.906857,2.697150,-6.069882,-5.295986,4.767080,-6.653597,8.351051,8.221708,9.383764,7.394028,1.562263,-8.490222,-8.892018,-8.370039,6.489707,4.232915,3.259420,-0.865068,9.352869,-8.858762,7.353585,3.003360,4.139146,-1.911728,-9.901266,-0.701914,2.247369,7.785340,-9.212208,6.518439,1.535058,-9.961218,0.565192,-8.959563,-8.306624,-8.139651,0.831696,-5.797784,-8.682338,3.869216,-7.115922,-9.946075,2.430698,-6.509133,2.094434,5.119331,-4.545274,6.638569,-8.894032,-5.573857,4.153956,-2.645687,-3.194796,8.237016,-1.513338,2.445912,-2.035119,-6.344482,1.039428,-4.784280,-3.938362,1.273680,9.928643,-5.179701,-9.898985,-0.960887,5.344524,-3.978873,-5.541412,7.259572,3.442616,1.914023,-1.094460,7.481466,-2.662199,5.998110,4.730818,5.978078,5.448672,0.399113,0.552206,7.315743,-0.612679,-9.840240,1.957894,7.979754,1.114863,0.120955,-3.991514,0.606631,-3.118824,4.433675,-7.633856,-2.034736,8.575895,0.115285,-8.949485,9.422809,3.103091,0.603473,1.498927,3.974204,8.990589,7.163738,5.116263,2.688033,4.805420,6.581344,9.495472,2.193675,6.210737,0.263867,-3.339224,5.442519,9.070411,-3.905657,2.912200,2.221705,-7.357478,8.767488,5.723895,2.921114,0.351410,-4.595341,3.764466,7.749005,3.671535,-5.369367,-7.131335,2.894169,-7.781681,-9.937202,7.095655,-1.360516,-7.145963,7.371430,-8.716276,-3.811971,5.035250,8.211756,6.978898,-5.242377,1.594326,-7.174522,-9.782920,9.181131,0.752093,-3.082037,4.336522,2.584199,-5.147718,-7.142867,1.275710,6.779400,7.592897,0.136681,6.061868,7.713249,-9.501858,-1.992570,6.532877,0.478396,-3.252386,2.057742,7.990170,8.468150,0.368450,-7.307309,8.669493,-7.877752,-8.283940,5.012782,6.939973,5.876661,-6.716347,-4.154747,6.491345,-2.649304,2.150913,-0.734783,-7.658825,6.785472,9.436130,0.145182,5.436022,4.125701,8.330989,0.296139,-3.300399,4.797039,8.123592,-5.316546,1.754350,-4.692755,1.762486,6.030045,-0.250969,6.158483,8.489848,-0.915182,-3.655194,-4.464746,-7.064155,-5.550499,-5.677760,1.532143,9.466145,0.681188,8.172835,-4.408136,-6.890415,-3.924173,-2.637834,-6.448331,-3.106134,-3.475533,-9.697169,4.371475,-5.735877,8.902438,2.183509,-8.368807,1.779823,7.746259,5.150081,2.669835,-3.585756,3.624243,7.641962,-0.012226,-7.718735,2.984914,6.911559,-2.306592,-7.019455,9.264800,-0.974714,7.953009,9.320006,-8.752443,-0.402786,-9.807192,-9.603406,5.134685,4.262576,4.341152,-1.250991,-2.425107,2.872526,5.022743,6.456942,5.853952,6.391949,8.112337,-8.400791,3.744954,8.244928,4.850120,6.396120,7.042810,-2.106357,9.536228,8.001784,-3.510715,-4.205846,7.831793,-9.380329,0.171202,9.768316,-7.112697,6.035216,-9.288932,4.238590,-0.483358,-5.060420,3.706251,-1.416338,1.372134,6.874621,8.831135,1.828453,3.746721,5.600532,3.383270,6.889038,-5.362562,-3.123940,3.802520,-4.875691,-3.560315,5.812179,7.470998,-4.864934,-5.795228,8.901846,0.982081,-5.298814,-0.854631,-1.479898,-9.737973,-6.567390,-2.150918,9.376435,-8.364395,0.071976,-1.679107,1.265628,-8.761680,-5.593330,0.400598,-5.257614,-5.043900,5.538526,2.523413,9.054401,4.547927,-6.657776,-1.411384,9.122460,-5.538270,7.427510,0.287602,-3.364768,3.358340,-9.638142,-8.207483,8.430803,6.755109,-2.116430,-1.655447,-0.724234,2.602041,5.286160,-9.887834,-8.220102,6.892006,5.199288,-0.331414,0.623718,-7.782940,-7.100836,-6.061375,-2.454114,-8.057627,-5.415128,-5.593576,-4.230509,-8.723025,7.766887,-7.542114,8.998912,5.743292,4.310997,-0.427583,5.607483,-1.452243,-2.058357,-2.090927,0.770153,5.303815,4.078911,-1.659094,5.706204,-9.084052,-3.469258,-8.821627,-6.093538,-4.988662,-6.138311,-2.951692,-7.113538,6.487917,-8.206627,5.754123,3.445125,7.942534,-7.583079,-2.110705,-9.734967,-1.826481,-6.836641,-2.351165,-3.797149,-9.935815,-0.841092,5.329478,4.492163,2.246225,-0.353638,3.513617,0.574423,-8.104511,0.283030,5.423071,6.074062,-6.027445,-3.399980,7.611866,0.858196,2.469157,-5.260890,-4.152813,-3.844071,2.393116,-0.976648,-7.841352,-2.988461,6.818633,1.777405,5.576769,-5.374665,-4.457675,9.396203,-8.053380,3.045143,-6.260466,-6.432616,-7.398996,-0.457368,2.334653,-9.504428,-4.938969,-5.977150,-6.177794,-8.552426,3.822719,7.792036,2.833349,7.990468,-9.907723,-5.249960,-0.972574,7.609991,6.419735,4.961594,9.202787,-5.645229,-1.331223,7.850627,-7.811359,-0.576180,2.194002,-3.416605,-4.506312,-6.340599,-6.910505,6.293234,7.523525,3.413688,-9.889258,0.641295,4.064206,7.451934,-5.607138,-5.627176,-3.205897,-9.218961,9.850300,4.628191,-3.747242,-6.320484,-3.291842,-1.304846,-8.086588,-0.984275,-7.622816,-0.748678,9.113342,2.922048,5.432569,-0.362177,-7.946254,3.629344,5.244940,-2.506879,-4.414302,6.402148,-4.046574,-4.599969,3.598009,-1.141861,-3.141919,7.516212,-0.584323,8.871745,3.976010,-1.930260,5.232510,8.031895,-7.396444,-8.427916,-7.111736,2.852248,3.614676,2.491548,-6.477667,-0.267868,7.718645,-7.804534,-7.385373,9.851024,1.810013,-3.089105,7.963054,-5.045143,2.758247,-1.716765,-0.402942,-1.554276,0.742980,-0.184095,2.484881,-8.326245,8.475166,1.320015,-8.158847,1.110999,-2.013150,-7.949631,7.104667,7.883198,-8.387871,-5.929764,8.633262,-2.899872,-4.439124,-2.704709,-6.782611,-6.902701,9.304309,0.680253,-5.642429,9.728396,-1.715119,-8.070179,-9.668776,-5.498330,5.892708,6.629223,-4.786949,6.747771,8.118164,-1.852728,-0.172129,4.568894,-3.718501,-1.948962,8.478211,8.159002,2.423451,7.563546,1.548919,-8.157610,-4.241149,4.816058,-2.883482,9.557670,-4.777659,1.929576,0.572057,-0.760765,7.009865,-7.522566,0.136245,0.380022,-8.467618,-7.895078,-0.300607,-1.019079,1.757379,2.674449,5.254517,6.440911,4.590574,-4.129085,3.365041,-5.593185,6.408494,0.576357,6.590251,-8.950650,2.969730,0.065749,6.048540,-8.870473,-1.442466,-7.141955,-3.285268,8.379729,-1.904377,-5.747725,8.262499,5.715803,-7.237791,8.631735,3.500975,5.377466,-3.465566,-4.919480,-6.988769,-4.290075,0.574739,-3.028583,-5.783541,4.849643,-4.751314,-1.178947,-7.935952,-0.734800,-0.966849,-6.334502,9.441785,-1.899243,9.923563,-9.438749,0.438433,-4.493837,5.758168,3.912745,-5.098737,8.122880,-5.128413,-0.138379,9.530239,0.571102,-7.293996,8.711607,9.182480,-4.601363,-9.532745,6.023761,3.570582,-2.317421,-0.536159,4.534023,-4.566691,3.895567,-1.446862,-5.390282,0.526643,-7.740904,5.786735,6.039471,7.264727,8.237654,-4.728548,-9.906603,-8.460222,3.569743,-4.853499,-6.594982,9.673334,8.186581,9.515265,0.770417,-5.302067,1.812936,9.724320,-6.641628,-5.623652,-0.897176,-8.558736,-0.191041,-3.944866,-1.270226,-4.188739,5.812767,-7.631740,-3.476619,-7.355109,-0.526138,7.538259,1.906586,3.326773,0.903442,6.085967,-7.731000,-2.885982,5.350258,-8.017898,1.069588,-2.053930,-9.932781,-3.347209,-3.288808,-9.527441,5.270875,-6.300943,-6.542820,-1.531112,4.533906,-8.531555,-3.530597,3.757292,3.485319,4.140351,-5.407647,7.396748,-2.835459,4.515800,1.877583,-0.246228,1.026737,4.404308,-4.296548,-7.617251,6.231883,4.162315,9.383373,2.708109,0.239621,-5.253037,-4.363272,-2.104643,8.139092,-0.413978,-8.234408,5.769229,0.025092,8.398466,-6.099711,-5.932364,-6.409743,9.535875,-6.633806,-2.661195,8.436597,7.025564,7.520910,4.282270,-6.117635,1.663411,-7.019184,-8.626932,5.930977,7.492662,3.137476,5.535192,6.833051,-2.505851,-6.729597,5.007119,9.679357,5.653730,7.665409,3.647439,-4.601877,-1.162342,3.309107,5.119109,-2.586421,-0.882745,-3.380764,-4.154483,2.634676,9.944217,6.436916,5.022741,4.003175,8.634796,4.780075,-0.259986,3.509279,-5.647213,-9.151685,4.377642,-2.117471,-5.232883,-8.424850,1.388481,7.347495,9.289452,6.351056,0.928515,4.640158,2.350138,6.105992,3.411461,-3.039557,5.727219,8.533487,-6.862587,5.997668,-9.642086,5.103530,7.308336,-3.338061,4.206104,2.233199,-6.877569,-9.109596,-7.464271,-0.088994,-3.937153,6.546694,2.407641,5.326828,1.562860,-8.017413,-4.491709,4.813916,7.577690,-4.129946,0.953263,2.914415,-5.597149,-9.926369,-5.363267,-6.415091,7.511103,-0.502828,-3.218407,-4.562975,-0.462606,5.859121,-5.501243,-8.668466,-8.350415,8.820297,1.921732,-4.452323,-2.841079,-8.149088,9.920064,3.207273,-5.872642,4.110295,1.718479,-2.886344,-9.443655,-1.527195,-7.074937,-5.207260,2.032671,3.744919,7.085663,6.774821,-3.535916,-8.651167,-9.884258,-0.470884,6.091780,-2.398496,-8.476501,2.086494,-2.286796,4.908202,-6.733628,-0.459713,6.884825,-6.516152,0.387330,-1.136053,4.647546,9.150628,5.809031,1.602447,4.512503,4.036931,-0.741721,-8.674774,8.048125,-4.050101,-2.998630,5.525340,-5.164738,-4.190815,4.259429,4.538099,9.972676,2.715928,-8.323915,1.695371,-6.796834,7.502300,6.963757,7.802787,-6.395200,9.177978,-3.501942,-3.290920,-5.330404,-3.043666,-0.625827,7.474560,-8.265979,-3.314770,3.545414,-1.580485,-2.628923,-0.231257,-2.644842,-9.795613,6.051341,4.313610,7.165539,-0.133640,-0.174298,7.638935,-8.838646,-7.655459,8.345990,-6.676205,-5.627381,-2.300502,-0.887265,0.624716,5.834573,2.320775,6.512629,-8.191322,8.629304,-8.827320,-9.882688,-4.986438,-3.053568,9.826654,2.587312,-1.842883,1.061342,-8.464971,-1.834881,-4.344832,-6.801300,-4.198075,-4.992855,-4.216167,-2.940476,6.169534,-9.080407,5.599808,-9.648270,6.711120,-0.696147,4.466783,-9.803622,-2.630537,9.072758,-8.811387,-9.212910,7.352610,-8.061744,-5.147229,6.354324,0.684516,3.966510,-4.138880,0.843800,1.664522,-8.198222,2.390723,0.955155,1.087632,-4.121006,-8.063138,-6.925702,9.334579,3.376072,8.786861,9.134783,-4.052284,-5.727225], dtype = "float64")#candidate|8617|(2400,)|const|float64
bop_8618 = relay.equal(uop_8613.astype('bool'), relay.reshape(const_8617.astype('bool'), relay.shape_of(uop_8613))) # shape=(2400,)
bop_8621 = relay.equal(uop_8615.astype('bool'), relay.reshape(const_8617.astype('bool'), relay.shape_of(uop_8615))) # shape=(2400,)
uop_8629 = relay.tan(var_8606.astype('float64')) # shape=(2400,)
output = relay.Tuple([bop_8607,bop_8618,uop_8629,])
output2 = relay.Tuple([bop_8610,bop_8621,uop_8629,])
func_8636 = relay.Function([var_8606,], output)
mod['func_8636'] = func_8636
mod = relay.transform.InferType()(mod)
mutated_mod['func_8636'] = func_8636
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8637 = relay.var("var_8637", dtype = "int8", shape = (2400,))#candidate|8637|(2400,)|var|int8
func_8636_call = mutated_mod.get_global_var('func_8636')
call_8638 = func_8636_call(var_8637)
output = call_8638
func_8639 = relay.Function([var_8637], output)
mutated_mod['func_8639'] = func_8639
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5499_call = mod.get_global_var('func_5499')
func_5500_call = mutated_mod.get_global_var('func_5500')
call_8721 = relay.TupleGetItem(func_5499_call(), 0)
call_8722 = relay.TupleGetItem(func_5500_call(), 0)
output = relay.Tuple([call_8721,])
output2 = relay.Tuple([call_8722,])
func_8731 = relay.Function([], output)
mod['func_8731'] = func_8731
mod = relay.transform.InferType()(mod)
mutated_mod['func_8731'] = func_8731
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8731_call = mutated_mod.get_global_var('func_8731')
call_8732 = func_8731_call()
output = call_8732
func_8733 = relay.Function([], output)
mutated_mod['func_8733'] = func_8733
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8798 = relay.var("var_8798", dtype = "uint16", shape = (10, 16, 3))#candidate|8798|(10, 16, 3)|var|uint16
var_8799 = relay.var("var_8799", dtype = "uint16", shape = (10, 16, 3))#candidate|8799|(10, 16, 3)|var|uint16
bop_8800 = relay.greater(var_8798.astype('bool'), relay.reshape(var_8799.astype('bool'), relay.shape_of(var_8798))) # shape=(10, 16, 3)
bop_8824 = relay.bitwise_or(var_8799.astype('uint64'), relay.reshape(bop_8800.astype('uint64'), relay.shape_of(var_8799))) # shape=(10, 16, 3)
output = relay.Tuple([bop_8824,])
output2 = relay.Tuple([bop_8824,])
func_8827 = relay.Function([var_8798,var_8799,], output)
mod['func_8827'] = func_8827
mod = relay.transform.InferType()(mod)
mutated_mod['func_8827'] = func_8827
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8827_call = mutated_mod.get_global_var('func_8827')
var_8829 = relay.var("var_8829", dtype = "uint16", shape = (10, 16, 3))#candidate|8829|(10, 16, 3)|var|uint16
var_8830 = relay.var("var_8830", dtype = "uint16", shape = (10, 16, 3))#candidate|8830|(10, 16, 3)|var|uint16
call_8828 = func_8827_call(var_8829,var_8830,)
output = call_8828
func_8831 = relay.Function([var_8829,var_8830,], output)
mutated_mod['func_8831'] = func_8831
mutated_mod = relay.transform.InferType()(mutated_mod)
func_786_call = mod.get_global_var('func_786')
func_788_call = mutated_mod.get_global_var('func_788')
call_8855 = func_786_call()
call_8856 = func_786_call()
output = relay.Tuple([call_8855,])
output2 = relay.Tuple([call_8856,])
func_8860 = relay.Function([], output)
mod['func_8860'] = func_8860
mod = relay.transform.InferType()(mod)
mutated_mod['func_8860'] = func_8860
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8860_call = mutated_mod.get_global_var('func_8860')
call_8861 = func_8860_call()
output = call_8861
func_8862 = relay.Function([], output)
mutated_mod['func_8862'] = func_8862
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2121_call = mod.get_global_var('func_2121')
func_2123_call = mutated_mod.get_global_var('func_2123')
call_8914 = func_2121_call()
call_8915 = func_2121_call()
output = relay.Tuple([call_8914,])
output2 = relay.Tuple([call_8915,])
func_8920 = relay.Function([], output)
mod['func_8920'] = func_8920
mod = relay.transform.InferType()(mod)
mutated_mod['func_8920'] = func_8920
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8920_call = mutated_mod.get_global_var('func_8920')
call_8921 = func_8920_call()
output = call_8921
func_8922 = relay.Function([], output)
mutated_mod['func_8922'] = func_8922
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4293_call = mod.get_global_var('func_4293')
func_4294_call = mutated_mod.get_global_var('func_4294')
call_8926 = relay.TupleGetItem(func_4293_call(), 1)
call_8927 = relay.TupleGetItem(func_4294_call(), 1)
uop_8936 = relay.atanh(call_8926.astype('float64')) # shape=(16, 10, 7)
uop_8938 = relay.atanh(call_8927.astype('float64')) # shape=(16, 10, 7)
output = relay.Tuple([uop_8936,])
output2 = relay.Tuple([uop_8938,])
func_8956 = relay.Function([], output)
mod['func_8956'] = func_8956
mod = relay.transform.InferType()(mod)
output = func_8956()
func_8957 = relay.Function([], output)
mutated_mod['func_8957'] = func_8957
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2913_call = mod.get_global_var('func_2913')
func_2914_call = mutated_mod.get_global_var('func_2914')
call_9075 = relay.TupleGetItem(func_2913_call(), 2)
call_9076 = relay.TupleGetItem(func_2914_call(), 2)
func_4308_call = mod.get_global_var('func_4308')
func_4310_call = mutated_mod.get_global_var('func_4310')
call_9088 = func_4308_call()
call_9089 = func_4308_call()
func_7904_call = mod.get_global_var('func_7904')
func_7907_call = mutated_mod.get_global_var('func_7907')
const_9092 = relay.const([4.715352,-6.674081,-9.672717,9.013584,3.150228,8.266682,-3.125918,-3.157557,-4.223040,-3.705337,-8.359279,8.687489,5.550262,5.376194,4.946931,9.716790,0.407926,-5.081937,8.285921,0.464435,7.643213,6.915761,-6.081315,7.599338,-7.757077,-4.989484,4.705548,-7.860084,-1.203807,3.524517,-5.242402,-7.853489,-0.631698,4.969549,-6.165027,3.657663,8.051504,7.044419,-0.396880,-7.916144,-9.754241,6.202668,-9.763797,-9.194306,2.069479,8.084480,4.701362,2.587918,-8.634319,0.965228,-0.329079,-4.690548,6.847551,1.068108,-9.241588,3.978329,-3.803142,-4.901330,-3.769537,1.571174,1.466974,5.628907,-9.691639,-7.027055,5.469833,-1.685319,-1.167298,-8.102676,-1.196700,7.546046,4.890181,-1.456766,9.400000,7.712138,2.438446,4.687168,9.520155,8.659527,-2.074190,-8.643976,2.270335,7.057127,-9.566004,-7.559232,2.824279,9.769597,-7.136727,-7.725292,8.291011,8.170952,-6.651223,1.183268,-6.195287,8.866559,-4.323096,-5.035229], dtype = "float64")#candidate|9092|(96,)|const|float64
call_9091 = relay.TupleGetItem(func_7904_call(relay.reshape(const_9092.astype('float64'), [2, 4, 12])), 0)
call_9093 = relay.TupleGetItem(func_7907_call(relay.reshape(const_9092.astype('float64'), [2, 4, 12])), 0)
output = relay.Tuple([call_9075,call_9088,call_9091,const_9092,])
output2 = relay.Tuple([call_9076,call_9089,call_9093,const_9092,])
func_9107 = relay.Function([], output)
mod['func_9107'] = func_9107
mod = relay.transform.InferType()(mod)
mutated_mod['func_9107'] = func_9107
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9107_call = mutated_mod.get_global_var('func_9107')
call_9108 = func_9107_call()
output = call_9108
func_9109 = relay.Function([], output)
mutated_mod['func_9109'] = func_9109
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4771_call = mod.get_global_var('func_4771')
func_4772_call = mutated_mod.get_global_var('func_4772')
call_9120 = relay.TupleGetItem(func_4771_call(), 0)
call_9121 = relay.TupleGetItem(func_4772_call(), 0)
func_3082_call = mod.get_global_var('func_3082')
func_3083_call = mutated_mod.get_global_var('func_3083')
call_9123 = func_3082_call()
call_9124 = func_3082_call()
func_2816_call = mod.get_global_var('func_2816')
func_2817_call = mutated_mod.get_global_var('func_2817')
call_9129 = relay.TupleGetItem(func_2816_call(), 4)
call_9130 = relay.TupleGetItem(func_2817_call(), 4)
output = relay.Tuple([call_9120,call_9123,call_9129,])
output2 = relay.Tuple([call_9121,call_9124,call_9130,])
func_9132 = relay.Function([], output)
mod['func_9132'] = func_9132
mod = relay.transform.InferType()(mod)
mutated_mod['func_9132'] = func_9132
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9132_call = mutated_mod.get_global_var('func_9132')
call_9133 = func_9132_call()
output = call_9133
func_9134 = relay.Function([], output)
mutated_mod['func_9134'] = func_9134
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1757_call = mod.get_global_var('func_1757')
func_1759_call = mutated_mod.get_global_var('func_1759')
call_9238 = func_1757_call()
call_9239 = func_1757_call()
output = relay.Tuple([call_9238,])
output2 = relay.Tuple([call_9239,])
func_9254 = relay.Function([], output)
mod['func_9254'] = func_9254
mod = relay.transform.InferType()(mod)
output = func_9254()
func_9255 = relay.Function([], output)
mutated_mod['func_9255'] = func_9255
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5499_call = mod.get_global_var('func_5499')
func_5500_call = mutated_mod.get_global_var('func_5500')
call_9347 = relay.TupleGetItem(func_5499_call(), 0)
call_9348 = relay.TupleGetItem(func_5500_call(), 0)
func_4385_call = mod.get_global_var('func_4385')
func_4389_call = mutated_mod.get_global_var('func_4389')
const_9357 = relay.const(4, dtype = "uint16")#candidate|9357|()|const|uint16
const_9358 = relay.const([7,-6,-7,9,-9,1,2,5,-4,8,5,-5,7,6,-4,-2,7,5,2,9,10,5,7,1,-4,-7,4,6,8,3,-9,6,-5,-1,7,-6,-7,-7,10,-10,-7,-5,-9,-2,-5,2,10,-1,8,-1,9,2,-8,-2,6,-7,9,4,5,8,3,-3,5,-9,5,10,7,1,10,6,-5,1,-6,-5,-2,-10,-10,-7,8,-10,6,-6,1,-8,1,8,-8,-2,-5,5,10,2,8,-7,-5,-9,8,-2,1,9,-8,7,-6,-10,8,8,-1,-7,10,-7,-10,4,2,-6,-9,-4,-6,3,-2,4,-10,-7,1,-2,-8,5,-7,-6,6,3,-1,-2,-10,8,10,5,2,-1,-5,-5,-3,-9,-1,3,-8,-5,-3,-5,-2,8,-3,-1,4,2,-4,10,-9,-10,-5,10,-7,-4,1,-7,2,-4,8,-2,7,2,2,9,-3,4,9,-5,6,-1,9,-10,3,6,1,-6,3,-10,-1,8,5,4,-3,-4,-10,-8,3,10,3,-9,-5,3,-4,2,-9,9,-10,9,4,6,8,-3,-9,-9,8,-7,5,-10,2,-2,2,-6,-4,8,10,-2,-6,-3,5,-9,2,-7,-7,-5,6,-1,-1,-1,-6,5,-4,6,9,9,1,-10,-6,-1,-1,-2,-6,-7,2,3,8,-3,4,-4,-9,10,1,-3,4,-7,-10,4,-4,4,9,-3,7,1,5,6,-8,-4,-6,-5,-2,-7,-3,-10,-4,-2,-6,-1,-1,6,-8,10,1,-5,4,9,-2,10,-9,-4,-7,-5,-3,7,9,-2,8,-10,-7,-5,-5,-8,-3,2,-9,5,5,10,-8,-2,10,3,7,6,10,-6,8,-10,10,-2,-10,-6,1,-3,-1,-6,-8,-9,-4,-10,8,7,-9,6,-1,-10,-9,8,-2,-9,-5,-6,-3,9,-1,2,-2,-7,6,-2,-6,-9,-9,-5,7,4,8,-4,-6,-10,9,-8,1,-4,3,-5,8,-3,1,8,1,-10,3,-2,5,7,4,-7,-3,1,8,-4,-9,3,-5,10,4,-5,-1,5,-6,2,-8,-4,-1,-8,8,5,-8,-9,-1,9,6,10,8,5,-8,6,7,8,5,-9,7,-2,4,8,-10,-1,-10,6,-8,3,-10,-3,-1,9,6,-8,-1,6,10,3,10,8,6,-7,7,-10,1,7,2,-7,-3,-1,-3,-2,-2,7,-8,1,9,8,-10,-2,-2,2,-5,4,1,-2,2,-1,8,6,1,2,7,-5,-10,5,-7,6,5,-8,5,5,6,4,4,-4,9,-6,-7,1,-1,9,-5,-10,7,9,9,-1,-9,-1,-7,9,-10,-2,7,4,2,-6,10,-9,3,1,1,-9,9,3,-2,1,1,-8,-9,-8,10,9,-9,9,4,6,-1,6,-4,5,-5,-7,-2,-5,-1,-1,5,1,8,-8,9,10,10,2,-6,9,5,-6,-4,7,3,4,-10,4,4,-2,7,-5,-7,10,-3,-3,-6,5,-1,3,2,4,4,-10,9,1,4,-2,2,4,-10,4,-7,5,-3,4,8,7,-5,8,1,-1,-5,5,4,3,-6,1,9,-1,-4,8,-2,-2,6,-2,-9,-1,5,-4,-3,6,-3,5,1,-4,1,-5,-1,-10,8,3,7,4,9,-3,-2,-4,-6,-8,-4,-1,8,-10,4,-5,3,10,1,-2,-9,-5,-5,-9,-9,-7,-1,10,6,-8,1,1,-9,-6,4,-3,4,-7,8,-2,-2,9,-9,5,-8,-6,-4,3,-9,-8,-8,7,8,2,9,-2,-5,6,-8,1,-4,5,7,5,-8,8,-1,-7,-8,-4,5,8,7,-7,-7,-10,-7,-2,6,2,-8,9,5,10,-9,10,2,-5,6,-3,10,5,-2,-6,2,-2,8,2,9,9,-10,-3,9,-1,-10,7,2,1,-8,-10], dtype = "uint16")#candidate|9358|(728,)|const|uint16
call_9356 = relay.TupleGetItem(func_4385_call(relay.reshape(const_9357.astype('uint16'), []), relay.reshape(const_9358.astype('uint16'), [8, 13, 7]), ), 0)
call_9359 = relay.TupleGetItem(func_4389_call(relay.reshape(const_9357.astype('uint16'), []), relay.reshape(const_9358.astype('uint16'), [8, 13, 7]), ), 0)
func_3473_call = mod.get_global_var('func_3473')
func_3476_call = mutated_mod.get_global_var('func_3476')
var_9385 = relay.var("var_9385", dtype = "int8", shape = (1260,))#candidate|9385|(1260,)|var|int8
call_9384 = relay.TupleGetItem(func_3473_call(relay.reshape(var_9385.astype('int8'), [90, 14])), 0)
call_9386 = relay.TupleGetItem(func_3476_call(relay.reshape(var_9385.astype('int8'), [90, 14])), 0)
output = relay.Tuple([call_9347,call_9356,const_9357,const_9358,call_9384,var_9385,])
output2 = relay.Tuple([call_9348,call_9359,const_9357,const_9358,call_9386,var_9385,])
func_9400 = relay.Function([var_9385,], output)
mod['func_9400'] = func_9400
mod = relay.transform.InferType()(mod)
var_9401 = relay.var("var_9401", dtype = "int8", shape = (1260,))#candidate|9401|(1260,)|var|int8
output = func_9400(var_9401)
func_9402 = relay.Function([var_9401], output)
mutated_mod['func_9402'] = func_9402
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1129_call = mod.get_global_var('func_1129')
func_1131_call = mutated_mod.get_global_var('func_1131')
call_9520 = relay.TupleGetItem(func_1129_call(), 1)
call_9521 = relay.TupleGetItem(func_1131_call(), 1)
output = relay.Tuple([call_9520,])
output2 = relay.Tuple([call_9521,])
func_9536 = relay.Function([], output)
mod['func_9536'] = func_9536
mod = relay.transform.InferType()(mod)
mutated_mod['func_9536'] = func_9536
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9536_call = mutated_mod.get_global_var('func_9536')
call_9537 = func_9536_call()
output = call_9537
func_9538 = relay.Function([], output)
mutated_mod['func_9538'] = func_9538
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7561_call = mod.get_global_var('func_7561')
func_7563_call = mutated_mod.get_global_var('func_7563')
call_9605 = func_7561_call()
call_9606 = func_7561_call()
func_7240_call = mod.get_global_var('func_7240')
func_7242_call = mutated_mod.get_global_var('func_7242')
call_9674 = relay.TupleGetItem(func_7240_call(), 0)
call_9675 = relay.TupleGetItem(func_7242_call(), 0)
func_8920_call = mod.get_global_var('func_8920')
func_8922_call = mutated_mod.get_global_var('func_8922')
call_9680 = relay.TupleGetItem(func_8920_call(), 0)
call_9681 = relay.TupleGetItem(func_8922_call(), 0)
func_5224_call = mod.get_global_var('func_5224')
func_5226_call = mutated_mod.get_global_var('func_5226')
call_9689 = relay.TupleGetItem(func_5224_call(), 0)
call_9690 = relay.TupleGetItem(func_5226_call(), 0)
output = relay.Tuple([call_9605,call_9674,call_9680,call_9689,])
output2 = relay.Tuple([call_9606,call_9675,call_9681,call_9690,])
func_9706 = relay.Function([], output)
mod['func_9706'] = func_9706
mod = relay.transform.InferType()(mod)
output = func_9706()
func_9707 = relay.Function([], output)
mutated_mod['func_9707'] = func_9707
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4771_call = mod.get_global_var('func_4771')
func_4772_call = mutated_mod.get_global_var('func_4772')
call_9723 = relay.TupleGetItem(func_4771_call(), 0)
call_9724 = relay.TupleGetItem(func_4772_call(), 0)
output = relay.Tuple([call_9723,])
output2 = relay.Tuple([call_9724,])
func_9752 = relay.Function([], output)
mod['func_9752'] = func_9752
mod = relay.transform.InferType()(mod)
mutated_mod['func_9752'] = func_9752
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9752_call = mutated_mod.get_global_var('func_9752')
call_9753 = func_9752_call()
output = call_9753
func_9754 = relay.Function([], output)
mutated_mod['func_9754'] = func_9754
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3603_call = mod.get_global_var('func_3603')
func_3605_call = mutated_mod.get_global_var('func_3605')
call_9764 = relay.TupleGetItem(func_3603_call(), 1)
call_9765 = relay.TupleGetItem(func_3605_call(), 1)
func_7449_call = mod.get_global_var('func_7449')
func_7451_call = mutated_mod.get_global_var('func_7451')
call_9770 = func_7449_call()
call_9771 = func_7449_call()
func_7660_call = mod.get_global_var('func_7660')
func_7663_call = mutated_mod.get_global_var('func_7663')
const_9774 = relay.const([-1.753773,-9.517446,-8.769104,9.559394,-5.225297,-5.765275,2.701746,-7.139300,6.392015,-9.003140,0.857718,-9.083500,9.724379,4.899762,-6.422005,-1.023984,-0.733153,-0.654366,-2.309649,5.758121,4.594896,0.537624,-8.495636,7.309424,-4.780396,-6.731063,1.789061,-0.387816,6.155226,8.859800,3.948857,-6.957970,-4.607570,3.337710,-3.222361,7.957019,-5.494955,-1.809499,2.677075,-2.852101,-2.387891,0.790353,7.490871,-4.601836,4.309058,6.233197,3.402352,-4.224850,-3.079336,-9.684628,-9.890131,8.836056,4.989353,-5.904066,7.442062,-9.570435,5.510065,0.359060,2.469888,3.351582,4.277905,-3.559021,-6.766111,-5.448798,-6.002026,4.100320,-3.689410,8.073952,-4.280500,-3.393940,-0.792107,6.841911,-8.930579,-2.737701,-2.176950,-8.945318,-6.344326,-2.689621,0.652585,-0.751487,-1.279266,9.821060,-8.536467,-5.850262,-0.946526,-7.990404,3.957699,-2.864388,-2.775150,-4.148473,-8.313714,-1.115803,8.811681,4.677525,2.443150,-6.986767,3.135642,-4.902851,-8.717288,-6.176107,-9.673724,5.843678,1.736343,9.756812,-1.763862,-5.979842,0.599168,-2.496567,-9.103109,3.513736,2.184913,6.265227,2.697485,-7.316522,-5.415498,-7.978865,4.282798,-0.821008,8.728488,-8.324085,0.097233,-4.802113,1.709584,9.450604,-4.759106,7.985776,-0.928356,-1.834079,-5.625819,5.991831,-9.599468,2.349055,1.427752,-9.964059,-7.869210,1.506215,0.970119,-8.712838,-1.042385,-2.652173,-4.051745,-4.860619,-8.971063,6.811970,6.363268,6.354750,-6.698921,5.487505,1.737012,4.798311,-9.441734,6.829569,-5.362087,-0.405123,-1.899593,-6.837799,-4.931477,1.162587,1.242775,1.818696,-2.434636,-0.202954,-2.902708,-5.228095,6.549334,8.272853,-8.483356,-6.957426,-6.464438,6.096615,4.837362,6.354754,-4.149703,9.327025,6.885866,-3.482376,1.063071,0.512661,-1.360254,1.946292,8.582253,1.123400,-6.031780,-4.880472,-9.852031,0.704759,3.429211,7.959223,3.865418,-9.856227,-6.922340,-1.849509,8.174795,4.427239,-0.582185,-0.151097,9.916972,5.290645,0.187672,-1.364816,-9.044920,4.779615,-6.722534,4.257762,0.505014,5.623191,8.254668,-2.973310,9.291481,-1.706364,-4.853618,4.104349,8.198502,1.723726,-1.417789,-8.814754,2.016193,2.674191,0.294999,-1.365403,-9.270767,-1.104712,2.914608,-6.214711,-0.804847,-4.563864,5.886045,-5.753130,1.098181,1.769270,3.325236,-0.162336,-9.353321,-6.976133,-4.617532,-8.141137,-9.165748,-6.938116,9.169204,-2.619956,-9.396610,9.256536,-0.018458,-5.504730,9.232335,-8.280416,3.808957,-7.552417,-0.421861,5.367133,7.462216,1.440032,-4.536986,6.284082,-6.468189,2.801605,0.831637,9.755159,-1.679922,7.122020,8.866550,-1.420906,-2.132886,-6.502874,-7.200613,4.184291,-7.026958,0.510290,6.769019,-4.323491,2.189909,-8.673709,-2.343016,-1.998783,9.961402,2.675419,1.067861,4.298479,-4.091430,-0.439271,-0.051693,-2.398905,-4.276166,7.632218,-5.882983,-9.878664,-5.441322,-2.063085,-5.780104,2.118663,-3.943024,-7.732394,2.166810,0.950449,-2.548967,-0.446806,-5.741189,6.533466,-3.853818,-4.852875,-2.669643,-0.328258,6.337621,-0.677399,-6.072846,0.804648,-6.660893,-3.643151,9.089642,1.149278,-1.591264,-0.673236,-2.858579,7.608440,7.499747,2.475520,-7.235528,-0.114048,4.571844,1.988959,-5.151281,-6.884789,7.835325,-9.206771,7.307838,-4.506219,0.429664,-3.705436,-1.453142,5.773888,9.805749,7.727241,-4.369541,4.863068,-8.980641,1.107196,4.383335,0.533930,3.538526,4.712178,1.907143,-2.002111,3.444810,-5.907480,-3.321903,5.990909,2.402392,-3.120293,-0.528809,9.859203,-5.226221,0.720001,-2.815904,-9.559363,1.353786,-5.260707,6.461697,6.974170,1.432193,-3.659589,0.517130,6.982698,6.824497,0.561137,7.583115,-2.911260,6.209243,9.227829,9.273612,0.915662,-7.608060,2.286763,-2.117671,-0.166107,8.590114,-6.268387,-7.208420,3.564932,4.325766,7.062735,0.110767,-6.818241,1.770897,-8.700026,-1.372056,0.938194,-9.909659,-9.729921,-8.790310,-1.636056,-8.624467,-9.809735,2.315599,-0.612740,-5.764830,8.357872,9.015930,7.712276,-0.266296,1.768592,4.707792,0.959619,-1.323822,4.771725,-1.942775,-0.879465,-3.349489,1.627538,-3.558852,-7.800407,0.012768,-0.485232,4.006293,2.545282,6.201787,-5.272110,-6.472568,-9.522721,-9.407847,2.182854,-7.708013,5.405208,-2.256272,-0.860939,-7.908417,-3.889235,-1.051601,-0.189008,-0.377554,8.727986,3.093854,-9.506473,9.699554,-1.778463,-2.563893,-0.607589,9.856467,3.809694,-6.190057,-7.128716,-4.027862,-5.363008,7.163691,6.574977,9.250187,3.308003,-1.221842,-0.512702,6.351103,1.920079,-2.496898,-3.670451,3.485631,2.941790,2.801653,-8.929459,-2.445918,-8.885352,-5.504744,1.518435,6.390309,-5.026494,6.796614,4.328823,9.602629,-4.238499,7.077253,4.038826,9.684003,-4.801318,-6.522168,-9.159405,-6.942506,-0.916219,-0.064165,-5.008590,-4.456892,-2.739608,1.935294,-3.455060,-1.015346,-6.387939,0.905709,0.451136,-5.608173,8.344212,-4.021392,-3.814341,4.396518,6.199243,-9.116604,0.155877,-7.738959,-6.013305,9.118047,-8.973100,-2.790623,1.811742,-4.293636,-4.387373,4.649931,2.752916,6.894480,-8.530376,-0.349724,3.451214,9.045646,-2.231127,-1.013810,3.479383,0.325735,3.478618,-7.787463,-9.528878,5.904613,3.917017,-1.447072,2.356655,-8.894592,-6.422605,0.247178,-5.236541,-4.438222,9.723591,4.938788,9.310004,-5.406962,-9.606220,2.425643,-0.526524,1.158441,9.814829,-4.997435,-9.323709,-6.269032,-4.785727,-6.931424,-0.693652,7.996408,8.852232,-6.460968,5.625439,9.411303,3.403424,-1.683084,-3.077947,-7.870281,-9.562696,-7.616611,3.919821,5.333416,-5.644922,-5.554199,8.361272,-5.703671,6.042967,8.707304,-4.460210,-7.416486,4.288138], dtype = "float32")#candidate|9774|(560,)|const|float32
call_9773 = relay.TupleGetItem(func_7660_call(relay.reshape(const_9774.astype('float32'), [8, 10, 7])), 2)
call_9775 = relay.TupleGetItem(func_7663_call(relay.reshape(const_9774.astype('float32'), [8, 10, 7])), 2)
func_2584_call = mod.get_global_var('func_2584')
func_2586_call = mutated_mod.get_global_var('func_2586')
var_9777 = relay.var("var_9777", dtype = "float64", shape = (54, 6))#candidate|9777|(54, 6)|var|float64
call_9776 = relay.TupleGetItem(func_2584_call(relay.reshape(var_9777.astype('float64'), [9, 3, 12])), 1)
call_9778 = relay.TupleGetItem(func_2586_call(relay.reshape(var_9777.astype('float64'), [9, 3, 12])), 1)
uop_9792 = relay.log10(var_9777.astype('float32')) # shape=(54, 6)
func_5072_call = mod.get_global_var('func_5072')
func_5073_call = mutated_mod.get_global_var('func_5073')
call_9802 = func_5072_call()
call_9803 = func_5072_call()
output = relay.Tuple([call_9764,call_9770,call_9773,const_9774,call_9776,uop_9792,call_9802,])
output2 = relay.Tuple([call_9765,call_9771,call_9775,const_9774,call_9778,uop_9792,call_9803,])
func_9821 = relay.Function([var_9777,], output)
mod['func_9821'] = func_9821
mod = relay.transform.InferType()(mod)
var_9822 = relay.var("var_9822", dtype = "float64", shape = (54, 6))#candidate|9822|(54, 6)|var|float64
output = func_9821(var_9822)
func_9823 = relay.Function([var_9822], output)
mutated_mod['func_9823'] = func_9823
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9107_call = mod.get_global_var('func_9107')
func_9109_call = mutated_mod.get_global_var('func_9109')
call_9842 = relay.TupleGetItem(func_9107_call(), 0)
call_9843 = relay.TupleGetItem(func_9109_call(), 0)
output = call_9842
output2 = call_9843
func_9844 = relay.Function([], output)
mod['func_9844'] = func_9844
mod = relay.transform.InferType()(mod)
mutated_mod['func_9844'] = func_9844
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9844_call = mutated_mod.get_global_var('func_9844')
call_9845 = func_9844_call()
output = call_9845
func_9846 = relay.Function([], output)
mutated_mod['func_9846'] = func_9846
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9853 = relay.const([[[10,5],[-8,-9],[7,-1],[2,-3],[-1,4],[10,-10],[2,2],[10,-9],[8,8],[10,-2],[-1,-9],[2,-9],[-8,2],[-7,-3]],[[-4,4],[-4,6],[-8,9],[-2,-4],[-3,-7],[6,-7],[9,4],[-2,4],[-1,9],[3,9],[-10,7],[1,-6],[-8,-1],[-8,-9]],[[-10,2],[-10,-7],[5,8],[3,-9],[-8,-6],[10,5],[-4,-2],[-9,-1],[6,2],[-10,-6],[-6,4],[2,4],[-2,10],[2,-1]]], dtype = "int32")#candidate|9853|(3, 14, 2)|const|int32
var_9854 = relay.var("var_9854", dtype = "int32", shape = (3, 14, 2))#candidate|9854|(3, 14, 2)|var|int32
bop_9855 = relay.bitwise_and(const_9853.astype('int32'), relay.reshape(var_9854.astype('int32'), relay.shape_of(const_9853))) # shape=(3, 14, 2)
func_6179_call = mod.get_global_var('func_6179')
func_6180_call = mutated_mod.get_global_var('func_6180')
call_9858 = func_6179_call()
call_9859 = func_6179_call()
func_7036_call = mod.get_global_var('func_7036')
func_7038_call = mutated_mod.get_global_var('func_7038')
call_9862 = relay.TupleGetItem(func_7036_call(), 0)
call_9863 = relay.TupleGetItem(func_7038_call(), 0)
func_2831_call = mod.get_global_var('func_2831')
func_2833_call = mutated_mod.get_global_var('func_2833')
call_9886 = func_2831_call()
call_9887 = func_2831_call()
output = relay.Tuple([bop_9855,call_9858,call_9862,call_9886,])
output2 = relay.Tuple([bop_9855,call_9859,call_9863,call_9887,])
func_9891 = relay.Function([var_9854,], output)
mod['func_9891'] = func_9891
mod = relay.transform.InferType()(mod)
mutated_mod['func_9891'] = func_9891
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9892 = relay.var("var_9892", dtype = "int32", shape = (3, 14, 2))#candidate|9892|(3, 14, 2)|var|int32
func_9891_call = mutated_mod.get_global_var('func_9891')
call_9893 = func_9891_call(var_9892)
output = call_9893
func_9894 = relay.Function([var_9892], output)
mutated_mod['func_9894'] = func_9894
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3615_call = mod.get_global_var('func_3615')
func_3617_call = mutated_mod.get_global_var('func_3617')
call_9935 = relay.TupleGetItem(func_3615_call(), 0)
call_9936 = relay.TupleGetItem(func_3617_call(), 0)
output = call_9935
output2 = call_9936
func_9950 = relay.Function([], output)
mod['func_9950'] = func_9950
mod = relay.transform.InferType()(mod)
output = func_9950()
func_9951 = relay.Function([], output)
mutated_mod['func_9951'] = func_9951
mutated_mod = relay.transform.InferType()(mutated_mod)
const_10003 = relay.const([[[-6.330322,-2.824046,0.024340,-2.891611,-5.929691,6.338693,2.086468,7.146043,-1.757298,7.035297,6.253820,7.467528,-1.492841,6.086942,-0.486432,2.761436],[-6.572429,3.624230,-7.150871,7.365578,7.818168,-0.627849,1.322583,4.864872,-6.695466,-5.202808,-1.428923,9.575958,-8.406576,8.642216,-9.541653,5.301962],[-5.055813,-2.992426,0.126333,-4.523277,-9.855446,8.262181,-4.657194,-3.491011,-6.895604,-1.002841,-3.134757,5.409722,-8.790006,3.514329,8.915434,7.975647],[-2.195275,-1.837430,6.666082,-5.634982,-1.368324,-6.957898,6.424139,6.736335,9.261965,-8.130440,1.178705,-1.354398,8.289927,-2.498964,2.985633,-0.350720],[-8.138132,5.670020,0.226121,5.102615,3.397665,-4.591960,-0.229568,-4.499839,6.729583,0.289831,-0.532160,0.884930,-7.349980,7.939543,3.038752,5.010870],[-2.069373,-7.675789,-8.599714,8.238901,5.004395,-0.835415,6.060948,5.924564,-6.109615,-6.191178,-0.003505,-1.755232,3.513428,-1.492677,0.991819,-4.505822],[-0.472529,-8.068830,1.933247,1.502141,8.438488,-9.786235,-0.989896,-4.291544,9.515332,-2.017478,-4.814095,-7.918943,-4.032950,-4.624155,-1.344086,9.285645]],[[6.614849,2.789465,-8.899983,8.863967,4.419095,-4.263397,2.945432,-6.966477,7.203220,1.920900,0.106865,-7.395302,-3.446253,8.328294,6.837161,-5.027993],[-3.937691,9.407626,-0.239593,9.125450,0.810912,9.814434,-9.617331,0.780608,-5.849815,8.493525,-5.987853,6.408551,-5.526352,1.680593,-9.895290,3.223474],[6.827064,1.073936,1.178061,9.929202,-9.782071,-7.705965,-0.836039,8.582918,-1.645413,-8.765869,-5.723598,5.050803,7.555444,-8.003124,-7.692905,-3.248584],[4.275694,0.088000,-1.273197,2.267911,-3.421499,2.334784,5.711777,1.554084,7.207342,-2.423886,-6.975255,9.408005,-0.275348,2.923538,0.180066,-5.858235],[4.059131,6.091841,6.680821,-0.099322,-8.847141,-1.093249,-6.300074,2.094745,-5.906759,8.476780,-7.970395,-0.466413,4.187445,0.339125,6.332175,7.427834],[-1.174404,4.714208,1.880163,4.726275,6.877365,1.763344,1.369853,-6.947404,-9.002564,-5.126474,-0.774326,7.747874,-6.138199,-8.137555,-4.044656,-9.578155],[-5.203858,-8.698175,-6.745767,-9.224010,-0.834904,6.056948,-1.925857,9.747622,-7.046942,4.854479,-4.779893,-5.168890,-6.744924,-5.967182,-7.121405,0.175529]],[[-5.303070,-6.342882,4.300133,9.112050,-8.722668,3.366864,-9.338953,2.716354,4.537430,4.434374,2.342961,-1.615758,-6.207980,-0.266500,-1.508799,8.067404],[-4.467341,5.335426,-5.881432,6.552479,7.299456,-8.491721,2.852472,-1.237912,-1.572897,-5.711713,4.564247,1.032661,9.836880,-6.185941,1.934376,3.137700],[3.498341,5.781589,6.231725,-2.086847,-0.804797,-5.443585,-1.182667,-9.940487,-9.912916,-9.094822,7.825836,2.357791,-6.658411,-7.533418,9.353901,4.094917],[-4.892371,7.938718,6.368517,6.838988,-7.479621,9.289055,-4.639747,6.114419,-7.597054,4.197779,-6.391187,-5.898905,-7.529739,-3.174201,-3.726129,6.930266],[9.509170,-6.099454,-9.725014,-8.229708,3.254908,-1.551867,7.287966,-0.112177,9.365230,9.601900,-6.730362,-2.317261,1.766123,8.886627,-3.516344,-3.181390],[4.535234,-3.775519,-6.379411,-2.953887,-7.364273,-1.467834,-7.669138,4.588810,-8.936509,7.713631,6.530654,5.464813,9.791128,-5.806611,8.099298,9.995613],[-5.484915,7.661885,-8.219186,-0.198844,-5.342557,-4.532711,-1.049897,-7.625353,-6.948652,1.436938,-6.163568,-1.655223,6.984517,6.884468,-1.879965,7.662223]],[[6.768760,7.769477,-4.644608,-0.466695,-5.429284,-0.004241,8.371946,4.501697,-1.285920,8.505082,-0.979463,-5.810341,-3.175007,-2.013270,-6.553083,0.172447],[-7.916991,6.024821,9.020768,1.253319,-9.085511,-8.751991,4.860566,-1.534023,-1.000405,-6.585116,4.373234,9.887975,-5.708173,-8.360509,9.232981,-9.557902],[4.160327,5.843273,-7.217738,-3.120847,-5.601076,-2.158246,2.477364,0.534937,-5.632856,-3.469310,5.821090,4.859009,9.799965,-5.550493,-3.434304,0.448395],[4.691249,-0.316970,2.920774,-6.012409,8.076457,9.375438,0.446406,-0.836525,-2.244464,-0.745843,-3.777841,-7.851050,7.834513,3.780781,4.462232,0.696710],[3.515029,-5.024753,4.069166,-9.562899,8.955957,6.408749,-6.201782,-0.456757,-2.534192,-6.245705,1.421967,-5.471739,-8.123997,-7.750585,-4.928102,-5.797645],[4.544264,2.864305,5.412261,4.404836,6.099935,-2.349412,-2.021404,3.457155,0.020758,-5.649658,-6.803873,5.224502,-2.594689,-4.100376,-6.684430,-8.845064],[-6.113436,-2.906034,6.690310,-0.067388,-0.354840,-1.172814,-9.743564,9.039655,-5.610790,-0.140635,-8.466639,2.590268,7.430376,-5.402851,-6.324438,5.481370]],[[-9.522067,-8.781114,7.068470,-8.487338,4.877049,-7.580855,-4.260466,2.227342,6.685466,3.602771,-7.970086,-3.549975,1.030250,7.288238,4.643757,-8.002688],[-2.555232,0.980887,5.043773,1.413432,4.914419,-4.103917,7.390797,-5.199188,3.416887,-8.570996,-1.300717,4.102381,2.482230,8.514266,4.762846,-3.626878],[-4.964621,4.147868,-2.304620,8.488314,9.576028,6.220070,5.650930,7.129128,-2.154529,-1.874111,6.745764,-3.410564,-7.944797,3.153033,9.858583,3.292913],[-7.808654,8.609513,2.332605,-2.020734,6.016657,6.035451,3.957022,7.676487,3.150681,-7.017010,-4.568233,8.221268,-4.445010,-6.433950,6.124485,3.147235],[6.247346,-6.257370,5.071326,4.243684,-2.482283,-4.642001,4.227957,5.821647,5.261082,8.320492,-7.759387,0.710421,-8.936727,-0.112276,2.379338,2.443936],[5.878580,-9.479223,-5.735173,2.374899,-4.696752,-8.992159,4.506967,-5.829903,3.114295,-8.444356,7.219464,-0.252020,-1.500060,5.248279,-7.956007,-2.129407],[-0.569202,5.324539,-1.236749,3.899822,-3.242149,-9.566723,-8.487991,-8.807457,6.710154,3.611062,-3.100841,-1.350442,5.324988,3.057601,-7.221788,4.049978]],[[-5.665994,7.193171,8.806294,3.653941,-5.041310,5.126805,6.696252,-1.168035,5.599997,1.697861,8.659099,-3.948885,1.972464,-1.951590,3.789122,-8.718660],[-8.447203,-9.321661,-9.582113,1.196223,7.366142,9.482761,6.862085,2.560653,-7.006936,-9.399549,-6.433036,-1.136342,-5.835358,5.717654,-9.652354,9.376486],[8.903667,-0.361691,-5.905306,-1.655693,-3.322043,-0.537979,5.945988,-0.220684,-8.832226,8.659734,2.188954,-9.858556,5.827102,0.514007,7.376048,-3.770356],[-9.901844,-7.865848,4.983004,9.740323,2.874174,9.952549,3.243899,-4.724857,-5.933153,0.547980,1.329220,-8.644411,9.853461,-1.985100,-5.784048,-8.658110],[4.901831,7.221909,4.406627,-7.312373,-6.958104,-9.470626,-9.072152,5.549797,-8.535831,-6.751935,-0.949385,-6.024728,4.211269,-2.601143,-0.726367,-8.385229],[-9.600303,-0.312256,-9.186757,-5.036148,-8.469322,8.412873,9.139225,0.857880,4.411340,1.568585,-7.909943,2.946644,-8.952054,-2.669063,-4.674967,-2.508231],[-7.875605,6.936186,4.905014,-3.549184,-0.736475,-8.083498,-1.949354,1.629334,-4.987686,-5.057346,5.702485,-9.058917,9.581712,-8.881926,6.927902,-9.256293]],[[2.741314,4.094161,5.185699,-8.518012,3.726537,9.107080,-7.696825,0.533099,4.594636,-5.119702,3.224391,-3.945706,0.169292,9.225718,1.720441,-4.588605],[2.598571,-9.529410,1.449391,-6.838387,2.622584,1.876974,-7.470318,-6.081313,-7.268862,-7.152971,0.299604,-1.307626,0.382021,-8.469735,-7.771409,4.431957],[-9.173261,-9.148475,-5.605387,-0.441138,6.941157,-1.147440,-0.125447,4.125593,0.886755,-7.497500,5.018255,1.625486,-5.199586,8.031214,-3.136653,-9.883392],[-6.238828,5.851141,4.965244,5.339516,2.327790,2.864155,-8.525529,-2.087578,-0.321823,6.083231,2.987930,6.601604,-7.127738,-5.605052,9.617513,7.758721],[-5.796367,4.566246,-2.521866,-9.443929,-8.926993,6.691882,-8.894046,-3.119943,-3.885288,-6.053103,-3.121490,-8.461016,6.250613,5.560657,0.498445,-5.182387],[1.789732,-1.219016,-6.976535,5.440736,-9.543249,-5.410519,-1.222455,4.002897,-9.580972,1.644797,5.708383,7.432191,-7.299975,-8.751290,7.657877,1.623561],[-4.409059,-2.426662,-7.541508,6.960976,-8.401259,-4.829118,-0.610695,0.750409,0.879605,5.081030,-1.772060,8.533710,3.776813,4.853333,1.350096,-5.496614]],[[-6.258989,-2.785305,-9.294354,1.941733,0.396010,-4.296899,8.108291,-1.483273,-8.981427,-3.011186,-7.297970,3.550412,8.287075,-9.186054,-7.910488,-1.481258],[8.201166,9.893964,-1.929309,-8.858096,-6.950681,0.670073,2.166570,0.544477,2.735791,-0.767835,3.576018,3.989998,-5.462673,3.011819,-1.989959,7.330570],[3.443669,-2.944275,9.992445,8.703957,3.519311,-3.551625,8.345380,-6.613376,7.817182,-9.134427,-1.639317,2.397622,-9.708270,4.491724,-1.556238,-0.183065],[-8.564985,1.270074,-5.163902,8.397154,6.892540,-7.893115,4.400661,4.433056,3.317250,-6.979113,3.953601,4.666847,-2.782073,3.428627,2.984027,-5.846881],[-8.578530,-1.504284,1.733452,-0.532477,0.474547,2.826209,5.877115,1.130142,-2.984630,-0.956464,8.617755,4.585968,7.718834,-4.560004,4.555936,-0.824931],[-7.079323,-8.316448,-5.656275,-9.493195,1.909533,7.983635,-5.891585,5.996311,-5.647023,-2.202758,7.816768,6.145483,-9.953332,-2.919795,7.867085,7.110324],[4.604858,9.570153,-7.093419,6.276027,1.913052,-9.960837,4.328911,-1.065272,-8.759309,3.302136,4.458309,-2.816469,-7.123570,1.698184,9.243368,7.976235]]], dtype = "float64")#candidate|10003|(8, 7, 16)|const|float64
var_10004 = relay.var("var_10004", dtype = "float64", shape = (8, 7, 16))#candidate|10004|(8, 7, 16)|var|float64
bop_10005 = relay.floor_mod(const_10003.astype('float64'), relay.reshape(var_10004.astype('float64'), relay.shape_of(const_10003))) # shape=(8, 7, 16)
func_3067_call = mod.get_global_var('func_3067')
func_3069_call = mutated_mod.get_global_var('func_3069')
call_10009 = func_3067_call()
call_10010 = func_3067_call()
output = relay.Tuple([bop_10005,call_10009,])
output2 = relay.Tuple([bop_10005,call_10010,])
func_10032 = relay.Function([var_10004,], output)
mod['func_10032'] = func_10032
mod = relay.transform.InferType()(mod)
var_10033 = relay.var("var_10033", dtype = "float64", shape = (8, 7, 16))#candidate|10033|(8, 7, 16)|var|float64
output = func_10032(var_10033)
func_10034 = relay.Function([var_10033], output)
mutated_mod['func_10034'] = func_10034
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10088 = relay.var("var_10088", dtype = "float64", shape = (14, 1, 3))#candidate|10088|(14, 1, 3)|var|float64
uop_10089 = relay.tan(var_10088.astype('float64')) # shape=(14, 1, 3)
var_10095 = relay.var("var_10095", dtype = "float64", shape = (14, 15, 3))#candidate|10095|(14, 15, 3)|var|float64
bop_10096 = relay.less(uop_10089.astype('bool'), var_10095.astype('bool')) # shape=(14, 15, 3)
output = relay.Tuple([bop_10096,])
output2 = relay.Tuple([bop_10096,])
func_10102 = relay.Function([var_10088,var_10095,], output)
mod['func_10102'] = func_10102
mod = relay.transform.InferType()(mod)
var_10103 = relay.var("var_10103", dtype = "float64", shape = (14, 1, 3))#candidate|10103|(14, 1, 3)|var|float64
var_10104 = relay.var("var_10104", dtype = "float64", shape = (14, 15, 3))#candidate|10104|(14, 15, 3)|var|float64
output = func_10102(var_10103,var_10104,)
func_10105 = relay.Function([var_10103,var_10104,], output)
mutated_mod['func_10105'] = func_10105
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2953_call = mod.get_global_var('func_2953')
func_2954_call = mutated_mod.get_global_var('func_2954')
call_10133 = func_2953_call()
call_10134 = func_2953_call()
output = call_10133
output2 = call_10134
func_10148 = relay.Function([], output)
mod['func_10148'] = func_10148
mod = relay.transform.InferType()(mod)
output = func_10148()
func_10149 = relay.Function([], output)
mutated_mod['func_10149'] = func_10149
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8550_call = mod.get_global_var('func_8550')
func_8551_call = mutated_mod.get_global_var('func_8551')
call_10184 = relay.TupleGetItem(func_8550_call(), 1)
call_10185 = relay.TupleGetItem(func_8551_call(), 1)
output = call_10184
output2 = call_10185
func_10195 = relay.Function([], output)
mod['func_10195'] = func_10195
mod = relay.transform.InferType()(mod)
output = func_10195()
func_10196 = relay.Function([], output)
mutated_mod['func_10196'] = func_10196
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5499_call = mod.get_global_var('func_5499')
func_5500_call = mutated_mod.get_global_var('func_5500')
call_10254 = relay.TupleGetItem(func_5499_call(), 0)
call_10255 = relay.TupleGetItem(func_5500_call(), 0)
func_7961_call = mod.get_global_var('func_7961')
func_7964_call = mutated_mod.get_global_var('func_7964')
const_10274 = relay.const([[6.335842,-6.167627,-9.277570],[-2.189506,-7.887482,7.437831],[7.621877,1.569591,7.435545],[-7.120375,-3.076420,-5.518396],[-3.204319,7.193845,-4.605853],[7.040707,-9.986659,-9.933172],[5.962826,1.647440,5.954318],[-6.639020,-9.187991,6.117809],[8.171621,1.181653,5.829593],[-5.652979,-5.778232,0.036843],[-7.506237,-0.074811,-8.148966],[-5.721322,8.521613,8.790908],[-6.538173,-0.073510,2.605789],[-7.413328,4.636534,2.913130],[-6.230043,-2.868762,6.662819],[3.965846,3.843245,-4.742707],[-4.836896,9.715279,-1.926810],[3.527118,-9.617099,-2.196425],[8.599470,4.180842,-9.701230],[8.779231,-6.746935,6.032697],[1.839065,-4.713540,-1.516353],[7.118769,8.148889,6.960238],[3.194267,-6.754924,-5.291865],[-6.741868,-0.514147,-5.331835],[-8.633182,8.810429,3.975998],[-3.473539,3.650597,5.446883],[9.357208,0.092286,5.401955],[-9.991801,8.393802,0.588548],[7.978705,6.379254,3.150344],[4.327857,6.477963,-9.038280],[3.534260,-0.560640,9.249861],[8.627683,-3.666783,7.462873],[2.335135,-6.206924,8.801849]], dtype = "float32")#candidate|10274|(33, 3)|const|float32
call_10273 = relay.TupleGetItem(func_7961_call(relay.reshape(const_10274.astype('float32'), [11, 3, 3])), 0)
call_10275 = relay.TupleGetItem(func_7964_call(relay.reshape(const_10274.astype('float32'), [11, 3, 3])), 0)
output = relay.Tuple([call_10254,call_10273,const_10274,])
output2 = relay.Tuple([call_10255,call_10275,const_10274,])
func_10294 = relay.Function([], output)
mod['func_10294'] = func_10294
mod = relay.transform.InferType()(mod)
mutated_mod['func_10294'] = func_10294
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10294_call = mutated_mod.get_global_var('func_10294')
call_10295 = func_10294_call()
output = call_10295
func_10296 = relay.Function([], output)
mutated_mod['func_10296'] = func_10296
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5901_call = mod.get_global_var('func_5901')
func_5903_call = mutated_mod.get_global_var('func_5903')
call_10329 = relay.TupleGetItem(func_5901_call(), 0)
call_10330 = relay.TupleGetItem(func_5903_call(), 0)
func_5431_call = mod.get_global_var('func_5431')
func_5432_call = mutated_mod.get_global_var('func_5432')
call_10340 = relay.TupleGetItem(func_5431_call(), 1)
call_10341 = relay.TupleGetItem(func_5432_call(), 1)
var_10348 = relay.var("var_10348", dtype = "float64", shape = (11, 10, 7))#candidate|10348|(11, 10, 7)|var|float64
bop_10349 = relay.less(call_10340.astype('bool'), var_10348.astype('bool')) # shape=(11, 10, 7)
bop_10352 = relay.less(call_10341.astype('bool'), var_10348.astype('bool')) # shape=(11, 10, 7)
bop_10366 = relay.left_shift(call_10340.astype('uint64'), var_10348.astype('uint64')) # shape=(11, 10, 7)
bop_10369 = relay.left_shift(call_10341.astype('uint64'), var_10348.astype('uint64')) # shape=(11, 10, 7)
func_3341_call = mod.get_global_var('func_3341')
func_3342_call = mutated_mod.get_global_var('func_3342')
call_10384 = relay.TupleGetItem(func_3341_call(), 0)
call_10385 = relay.TupleGetItem(func_3342_call(), 0)
output = relay.Tuple([call_10329,bop_10349,bop_10366,call_10384,])
output2 = relay.Tuple([call_10330,bop_10352,bop_10369,call_10385,])
func_10393 = relay.Function([var_10348,], output)
mod['func_10393'] = func_10393
mod = relay.transform.InferType()(mod)
var_10394 = relay.var("var_10394", dtype = "float64", shape = (11, 10, 7))#candidate|10394|(11, 10, 7)|var|float64
output = func_10393(var_10394)
func_10395 = relay.Function([var_10394], output)
mutated_mod['func_10395'] = func_10395
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3940_call = mod.get_global_var('func_3940')
func_3941_call = mutated_mod.get_global_var('func_3941')
call_10437 = relay.TupleGetItem(func_3940_call(), 0)
call_10438 = relay.TupleGetItem(func_3941_call(), 0)
func_1653_call = mod.get_global_var('func_1653')
func_1655_call = mutated_mod.get_global_var('func_1655')
call_10439 = relay.TupleGetItem(func_1653_call(), 0)
call_10440 = relay.TupleGetItem(func_1655_call(), 0)
bop_10449 = relay.mod(call_10437.astype('float32'), call_10439.astype('float32')) # shape=(8, 10, 7)
bop_10452 = relay.mod(call_10438.astype('float32'), call_10440.astype('float32')) # shape=(8, 10, 7)
func_4654_call = mod.get_global_var('func_4654')
func_4655_call = mutated_mod.get_global_var('func_4655')
call_10486 = func_4654_call()
call_10487 = func_4654_call()
func_10102_call = mod.get_global_var('func_10102')
func_10105_call = mutated_mod.get_global_var('func_10105')
const_10490 = relay.const([[-7.105517,5.089224,-8.006386],[0.504023,-9.009404,3.355550],[-5.762356,5.857358,-2.938145],[5.368618,1.380491,7.518423],[3.276197,-8.641054,-9.289746],[-9.720126,7.510064,-3.767918],[-6.326924,-9.731045,-8.501626],[1.098594,7.263332,-9.522087],[8.431763,-0.975350,8.089929],[0.337178,-6.097019,-5.203323],[1.588746,-6.363691,2.453490],[8.526662,-2.887317,-8.280672],[1.697421,0.227927,-1.266319],[-1.401173,3.115716,-2.710395]], dtype = "float64")#candidate|10490|(14, 3)|const|float64
var_10491 = relay.var("var_10491", dtype = "float64", shape = (630,))#candidate|10491|(630,)|var|float64
call_10489 = relay.TupleGetItem(func_10102_call(relay.reshape(const_10490.astype('float64'), [14, 1, 3]), relay.reshape(var_10491.astype('float64'), [14, 15, 3]), ), 0)
call_10492 = relay.TupleGetItem(func_10105_call(relay.reshape(const_10490.astype('float64'), [14, 1, 3]), relay.reshape(var_10491.astype('float64'), [14, 15, 3]), ), 0)
output = relay.Tuple([bop_10449,call_10486,call_10489,const_10490,var_10491,])
output2 = relay.Tuple([bop_10452,call_10487,call_10492,const_10490,var_10491,])
func_10526 = relay.Function([var_10491,], output)
mod['func_10526'] = func_10526
mod = relay.transform.InferType()(mod)
mutated_mod['func_10526'] = func_10526
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10527 = relay.var("var_10527", dtype = "float64", shape = (630,))#candidate|10527|(630,)|var|float64
func_10526_call = mutated_mod.get_global_var('func_10526')
call_10528 = func_10526_call(var_10527)
output = call_10528
func_10529 = relay.Function([var_10527], output)
mutated_mod['func_10529'] = func_10529
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8860_call = mod.get_global_var('func_8860')
func_8862_call = mutated_mod.get_global_var('func_8862')
call_10537 = relay.TupleGetItem(func_8860_call(), 0)
call_10538 = relay.TupleGetItem(func_8862_call(), 0)
func_7961_call = mod.get_global_var('func_7961')
func_7964_call = mutated_mod.get_global_var('func_7964')
const_10542 = relay.const([-1.775176,-8.695281,4.995156,0.098033,-4.953643,5.960132,4.691756,-4.597955,9.890572,7.898272,-6.693194,4.196500,5.505754,9.042483,-6.296432,8.074532,-1.036046,-2.428848,7.460792,8.004514,8.318045,8.059666,8.080599,-3.529034,0.841589,9.256585,6.913816,0.577025,6.374120,0.261651,-0.889323,-0.683679,3.038874,4.933953,-8.667268,-2.193427,7.735469,-1.864710,5.204925,8.030499,-9.093739,-3.956194,7.752170,-4.510834,4.251535,-5.236292,-4.907604,-1.963731,2.955447,-0.850382,-0.925146,-3.996967,-2.967094,-2.712908,2.634102,5.034962,-2.395329,6.511149,9.189404,-4.336580,-4.460301,-7.366002,4.407579,-0.940123,-2.566522,7.896751,1.937299,-7.158982,-7.435575,-3.189869,-3.521051,-0.731063,3.698956,1.677846,9.324106,0.260140,-4.965079,2.541548,-2.519867,0.948748,-3.364140,9.529874,-8.019973,-4.632342,3.300562,-8.391985,-4.809553,-6.844051,-8.352809,-1.817271,-1.886245,2.440464,6.558407,-6.842339,-2.275736,5.741148,-1.115832,1.790899,-4.054303], dtype = "float32")#candidate|10542|(99,)|const|float32
call_10541 = relay.TupleGetItem(func_7961_call(relay.reshape(const_10542.astype('float32'), [11, 3, 3])), 0)
call_10543 = relay.TupleGetItem(func_7964_call(relay.reshape(const_10542.astype('float32'), [11, 3, 3])), 0)
func_7496_call = mod.get_global_var('func_7496')
func_7498_call = mutated_mod.get_global_var('func_7498')
call_10551 = relay.TupleGetItem(func_7496_call(), 0)
call_10552 = relay.TupleGetItem(func_7498_call(), 0)
output = relay.Tuple([call_10537,call_10541,const_10542,call_10551,])
output2 = relay.Tuple([call_10538,call_10543,const_10542,call_10552,])
func_10556 = relay.Function([], output)
mod['func_10556'] = func_10556
mod = relay.transform.InferType()(mod)
output = func_10556()
func_10557 = relay.Function([], output)
mutated_mod['func_10557'] = func_10557
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3683_call = mod.get_global_var('func_3683')
func_3685_call = mutated_mod.get_global_var('func_3685')
call_10652 = relay.TupleGetItem(func_3683_call(), 0)
call_10653 = relay.TupleGetItem(func_3685_call(), 0)
func_3615_call = mod.get_global_var('func_3615')
func_3617_call = mutated_mod.get_global_var('func_3617')
call_10658 = relay.TupleGetItem(func_3615_call(), 0)
call_10659 = relay.TupleGetItem(func_3617_call(), 0)
output = relay.Tuple([call_10652,call_10658,])
output2 = relay.Tuple([call_10653,call_10659,])
func_10663 = relay.Function([], output)
mod['func_10663'] = func_10663
mod = relay.transform.InferType()(mod)
mutated_mod['func_10663'] = func_10663
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10663_call = mutated_mod.get_global_var('func_10663')
call_10664 = func_10663_call()
output = call_10664
func_10665 = relay.Function([], output)
mutated_mod['func_10665'] = func_10665
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10704 = relay.var("var_10704", dtype = "float64", shape = (2, 11, 4))#candidate|10704|(2, 11, 4)|var|float64
uop_10705 = relay.log(var_10704.astype('float64')) # shape=(2, 11, 4)
var_10712 = relay.var("var_10712", dtype = "float64", shape = (2, 11, 4))#candidate|10712|(2, 11, 4)|var|float64
bop_10713 = relay.multiply(uop_10705.astype('uint8'), relay.reshape(var_10712.astype('uint8'), relay.shape_of(uop_10705))) # shape=(2, 11, 4)
func_1682_call = mod.get_global_var('func_1682')
func_1684_call = mutated_mod.get_global_var('func_1684')
call_10720 = relay.TupleGetItem(func_1682_call(), 1)
call_10721 = relay.TupleGetItem(func_1684_call(), 1)
uop_10726 = relay.exp(uop_10705.astype('float64')) # shape=(2, 11, 4)
output = relay.Tuple([bop_10713,call_10720,uop_10726,])
output2 = relay.Tuple([bop_10713,call_10721,uop_10726,])
F = relay.Function([var_10704,var_10712,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_10704,var_10712,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

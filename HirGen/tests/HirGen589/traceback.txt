==========mod==========
#[version = "0.0.5"]
def @func_7888() -> Tensor[(9, 12, 6), int16] {
  @func_6332() /* ty=Tensor[(9, 12, 6), int16] */
}

def @func_2879(%var_2865: Tensor[(4, 3, 3), float32]) -> Tensor[(4, 3, 3), int8] {
  %0 = @func_2658() /* ty=Tensor[(4, 3, 3), float32] */;
  %1 = cast(%var_2865, dtype="int8") /* ty=Tensor[(4, 3, 3), int8] */;
  %2 = shape_of(%0, dtype="int32") /* ty=Tensor[(3), int32] */;
  %3 = cast(%0, dtype="int8") /* ty=Tensor[(4, 3, 3), int8] */;
  %4 = dyn.reshape(%1, %2, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  logical_xor(%3, %4) /* ty=Tensor[(4, 3, 3), int8] */
}

def @func_8141(%var_8127: Tensor[(2366), float32]) -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(2366), float32]) {
  %5 = @func_6883() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(15, 13, 7), int8]) */;
  %6 = @func_5477() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(6, 2, 14), float32], Tensor[(2366), int64], Tensor[(168), float32]) */;
  %7 = %6.2;
  %8 = cast(%7, dtype="float32") /* ty=Tensor[(2366), float32] */;
  %9 = acos(%8) /* ty=Tensor[(2366), float32] */;
  %10 = cast(%var_8127, dtype="bool") /* ty=Tensor[(2366), bool] */;
  %11 = shape_of(%9, dtype="int32") /* ty=Tensor[(1), int32] */;
  %12 = cast(%9, dtype="bool") /* ty=Tensor[(2366), bool] */;
  %13 = dyn.reshape(%10, %11, newshape=[]) /* ty=Tensor[(?), bool] */;
  %14 = greater(%12, %13) /* ty=Tensor[(2366), bool] */;
  %15 = cast(%9, dtype="float32") /* ty=Tensor[(2366), float32] */;
  %16 = shape_of(%14, dtype="int32") /* ty=Tensor[(1), int32] */;
  %17 = cast(%14, dtype="float32") /* ty=Tensor[(2366), float32] */;
  %18 = dyn.reshape(%15, %16, newshape=[]) /* ty=Tensor[(?), float32] */;
  %19 = @func_3800() /* ty=Tensor[(4, 3, 3), float64] */;
  %20 = %5.0;
  %21 = mod(%17, %18) /* ty=Tensor[(2366), float32] */;
  (%19, %20, %21)
}

def @func_13779(%var_13770: Tensor[(1815), float64]) -> (Tensor[(1815), float64],) {
  %22 = @func_13128() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(1815), float64], Tensor[(6, 5, 9), float32], Tensor[(4, 3, 3), float64]) */;
  %23 = %22.3;
  %24 = cast(%var_13770, dtype="float64") /* ty=Tensor[(1815), float64] */;
  %25 = shape_of(%23, dtype="int32") /* ty=Tensor[(1), int32] */;
  %26 = cast(%23, dtype="float64") /* ty=Tensor[(1815), float64] */;
  %27 = dyn.reshape(%24, %25, newshape=[]) /* ty=Tensor[(?), float64] */;
  %28 = mod(%26, %27) /* ty=Tensor[(1815), float64] */;
  (%28,)
}

def @func_11203() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), int8], Tensor[(4, 3, 3), float64]) {
  %29 = @func_10889() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), uint64]) */;
  %30 = %29.0;
  %31 = cast(%30, dtype="float32") /* ty=Tensor[(4, 3, 3), float32] */;
  %32 = reshape(%31, newshape=[4, 3, 3]) /* ty=Tensor[(4, 3, 3), float32] */;
  %33 = @func_8075() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %34 = @func_2879(%32) /* ty=Tensor[(4, 3, 3), int8] */;
  %35 = %33.0;
  (%30, %34, %35)
}

def @func_10889() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), uint64]) {
  %36 = @func_10424() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(168), float32], Tensor[(4, 3, 3), float64]) */;
  %37 = %36.2;
  %38 = @func_6544() /* ty=Tensor[(4, 3, 3), uint64] */;
  (%37, %38)
}

def @func_3233() -> Tensor[(4, 3, 3), float64] {
  @func_2940() /* ty=Tensor[(4, 3, 3), float64] */
}

def @func_5185() -> (Tensor[(4, 3, 3), float64],) {
  %39 = @func_2061() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %40 = %39.0;
  (%40,)
}

def @func_7669() -> (Tensor[(4, 3, 3), uint64],) {
  %41 = @func_7055() /* ty=(Tensor[(4, 3, 3), uint64],) */;
  %42 = %41.0;
  (%42,)
}

def @func_8350(%var_8319: Tensor[(2366), int64]) -> (Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), float64], Tensor[(2366), int64], Tensor[(4, 3, 3), bool]) {
  %43 = @func_7316() /* ty=(Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), uint64]) */;
  %44 = cast(%var_8319, dtype="int64") /* ty=Tensor[(2366), int64] */;
  %45 = reshape(%44, newshape=[2366]) /* ty=Tensor[(2366), int64] */;
  %46 = @func_2091(%45) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(168), float32], Tensor[(4, 3, 3), float64], Tensor[(6, 2, 14), float64], Tensor[(2366), int64]) */;
  %47 = %43.0;
  %48 = cast(%47, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
  %49 = reshape(%48, newshape=[4, 3, 3]) /* ty=Tensor[(4, 3, 3), float64] */;
  %50 = %46.3;
  %51 = @func_3151(%49) /* ty=Tensor[(4, 3, 3), bool] */;
  (%47, %50, %var_8319, %51)
}

def @func_13363() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  %52 = @func_2778() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %53 = @func_12517() /* ty=Tensor[(4, 3, 3), float64] */;
  %54 = @func_4335() /* ty=Tensor[(4, 3, 3), float64] */;
  %55 = %52.0;
  (%53, %54, %55)
}

def @func_10254() -> (Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), float64]) {
  %56 = @func_9993() /* ty=(Tensor[(4, 3, 3), bool],) */;
  %57 = @func_9543() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float32], Tensor[(13, 182), int64], Tensor[(42, 4), bool], Tensor[(6, 28), float32], Tensor[(4, 3, 3), float64]) */;
  %58 = %56.0;
  %59 = %57.5;
  (%58, %59)
}

def @main(%var_16262: Tensor[(11, 6, 13), float64]) -> Tensor[(11, 6, 13), float64] {
  %60 = cast(%var_16262, dtype="float64") /* ty=Tensor[(11, 6, 13), float64] */;
  rsqrt(%60) /* ty=Tensor[(11, 6, 13), float64] */
}

def @func_13012() -> (Tensor[(4, 3, 3), float64],) {
  %61 = @func_3451() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %62 = %61.0;
  (%62,)
}

def @func_16074() -> (Tensor[(4, 3, 3), float64],) {
  %63 = @func_1870() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %64 = %63.0;
  (%64,)
}

def @func_3682() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(2366), int64], Tensor[(168), float32], Tensor[(4, 3, 3), float64]) {
  %65 = @func_2778() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %66 = @func_3266() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %67 = cast(meta[relay.Constant][0] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %68 = reshape(%67, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %69 = @func_1828(%68) /* ty=(Tensor[(4, 3, 3), float32], Tensor[(6, 2, 14), float64], Tensor[(2366), int64], Tensor[(168), float32], Tensor[(6, 2, 14), float32]) */;
  %70 = @func_2994() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %71 = %65.0;
  %72 = %66.0;
  %73 = @func_2828() /* ty=Tensor[(4, 3, 3), float64] */;
  %74 = @func_2940() /* ty=Tensor[(4, 3, 3), float64] */;
  %75 = %69.2;
  %76 = %70.0;
  (%71, %72, %73, %74, %75, meta[relay.Constant][0] /* ty=Tensor[(168), float32] */, %76)
}

def @func_6793(%var_6776: Tensor[(7, 10, 4), float32], %var_6777: Tensor[(7, 10, 4), float32]) -> Tensor[(7, 10, 4), bool] {
  %77 = cast(%var_6777, dtype="bool") /* ty=Tensor[(7, 10, 4), bool] */;
  %78 = shape_of(%var_6776, dtype="int32") /* ty=Tensor[(3), int32] */;
  %79 = cast(%var_6776, dtype="bool") /* ty=Tensor[(7, 10, 4), bool] */;
  %80 = dyn.reshape(%77, %78, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%79, %80) /* ty=Tensor[(7, 10, 4), bool] */
}

def @func_4264() -> Tensor[(4, 3, 3), float64] {
  %81 = @func_3196() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float32], Tensor[(4, 3, 3), float64]) */;
  %81.2
}

def @func_8075() -> (Tensor[(4, 3, 3), float64],) {
  %82 = @func_5725() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float32], Tensor[(168), float32], Tensor[(1183, 2), int64], Tensor[(42, 4), float32]) */;
  %83 = %82.0;
  (%83,)
}

def @func_9960() -> (Tensor[(4, 3, 3), float32],) {
  %84 = @func_6637() /* ty=(Tensor[(4, 3, 3), float32],) */;
  %85 = %84.0;
  (%85,)
}

def @func_11892(%var_11836: Tensor[(5, 6, 16), int8]) -> (Tensor[(5, 6, 16), bool], Tensor[(4, 3, 3), float64], Tensor[(168), float32], Tensor[(168), uint32], Tensor[(1176), float32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float32], Tensor[(5, 6, 16), float32]) {
  %86 = cast(%var_11836, dtype="bool") /* ty=Tensor[(5, 6, 16), bool] */;
  %87 = shape_of(meta[relay.Constant][1] /* ty=Tensor[(5, 6, 16), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %88 = cast(meta[relay.Constant][1] /* ty=Tensor[(5, 6, 16), int8] */, dtype="bool") /* ty=Tensor[(5, 6, 16), bool] */;
  %89 = dyn.reshape(%86, %87, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %90 = @func_5683() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %91 = cast(meta[relay.Constant][2] /* ty=Tensor[(1176), float32] */, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %92 = reshape(%91, newshape=[84, 14]) /* ty=Tensor[(84, 14), float32] */;
  %93 = @func_7920(%92) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(168), uint32], Tensor[(84, 14), float32], Tensor[(168), uint32], Tensor[(168), float32]) */;
  %94 = @func_5725() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float32], Tensor[(168), float32], Tensor[(1183, 2), int64], Tensor[(42, 4), float32]) */;
  %95 = cast(%var_11836, dtype="float64") /* ty=Tensor[(5, 6, 16), float64] */;
  %96 = rsqrt(%95) /* ty=Tensor[(5, 6, 16), float64] */;
  %97 = cast(%var_11836, dtype="float32") /* ty=Tensor[(5, 6, 16), float32] */;
  %98 = shape_of(%96, dtype="int32") /* ty=Tensor[(3), int32] */;
  %99 = cast(%96, dtype="float32") /* ty=Tensor[(5, 6, 16), float32] */;
  %100 = dyn.reshape(%97, %98, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %101 = greater(%88, %89) /* ty=Tensor[(5, 6, 16), bool] */;
  %102 = %90.0;
  %103 = @func_8171() /* ty=Tensor[(168), float32] */;
  %104 = %93.3;
  %105 = @func_10468() /* ty=Tensor[(4, 3, 3), float64] */;
  %106 = %94.1;
  %107 = divide(%99, %100) /* ty=Tensor[(5, 6, 16), float32] */;
  (%101, %102, %103, %104, meta[relay.Constant][2] /* ty=Tensor[(1176), float32] */, %105, %106, %107)
}

def @func_16118() -> (Tensor[(9, 12, 6), int16], Tensor[(4, 3, 3), float64]) {
  %108 = @func_13913() /* ty=(Tensor[(9, 12, 6), int16], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %109 = @func_6982() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %110 = %108.0;
  %111 = %109.0;
  (%110, %111)
}

def @func_12204() -> (Tensor[(4, 3, 3), uint64], Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  %112 = @func_7055() /* ty=(Tensor[(4, 3, 3), uint64],) */;
  %113 = %112.0;
  %114 = cast(%113, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
  %115 = reshape(%114, newshape=[4, 3, 3]) /* ty=Tensor[(4, 3, 3), float64] */;
  %116 = @func_12030() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %117 = @func_4511() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %118 = @func_3151(%115) /* ty=Tensor[(4, 3, 3), bool] */;
  %119 = %116.0;
  %120 = %117.0;
  (%113, %118, %119, %120)
}

def @func_5134() -> (Tensor[(6, 5, 9), bool],) {
  %121 = cast(meta[relay.Constant][4] /* ty=Tensor[(6, 5, 9), bool] */, dtype="bool") /* ty=Tensor[(6, 5, 9), bool] */;
  %122 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(6, 5, 9), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %123 = cast(meta[relay.Constant][3] /* ty=Tensor[(6, 5, 9), bool] */, dtype="bool") /* ty=Tensor[(6, 5, 9), bool] */;
  %124 = dyn.reshape(%121, %122, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %125 = logical_or(%123, %124) /* ty=Tensor[(6, 5, 9), bool] */;
  (%125,)
}

def @func_13548() -> (Tensor[(4, 3, 3), float64],) {
  %126 = @func_5973() /* ty=(Tensor[(4, 3, 3), uint64], Tensor[(4, 3, 3), float64]) */;
  %127 = %126.1;
  (%127,)
}

def @func_9661(%var_9642: Tensor[(2366), float32]) -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(2366), float32], Tensor[(2366), float64], Tensor[(4, 3, 3), bool]) {
  %128 = cast(%var_9642, dtype="float32") /* ty=Tensor[(2366), float32] */;
  %129 = reshape(%128, newshape=[2366]) /* ty=Tensor[(2366), float32] */;
  %130 = @func_8141(%129) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(2366), float32]) */;
  %131 = @func_8019() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(13, 182), int64], Tensor[(2366), float64]) */;
  %132 = cast(%var_9642, dtype="int64") /* ty=Tensor[(2366), int64] */;
  %133 = reshape(%132, newshape=[2366]) /* ty=Tensor[(2366), int64] */;
  %134 = @func_8350(%133) /* ty=(Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), float64], Tensor[(2366), int64], Tensor[(4, 3, 3), bool]) */;
  %135 = @func_2828() /* ty=Tensor[(4, 3, 3), float64] */;
  %136 = %130.1;
  %137 = %131.2;
  %138 = %134.3;
  (%135, %136, %var_9642, %137, %138)
}

def @func_12803() -> Tensor[(4, 3, 3), float64] {
  @func_12281() /* ty=Tensor[(4, 3, 3), float64] */
}

def @func_9176() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float32], Tensor[(4, 3, 3), uint64]) {
  %139 = @func_5973() /* ty=(Tensor[(4, 3, 3), uint64], Tensor[(4, 3, 3), float64]) */;
  %140 = @func_5258() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %141 = @func_3266() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %142 = @func_7524() /* ty=(Tensor[(4, 3, 3), uint64], Tensor[(4, 3, 3), float64]) */;
  %143 = @func_3800() /* ty=Tensor[(4, 3, 3), float64] */;
  %144 = %139.1;
  %145 = %140.0;
  %146 = %141.0;
  %147 = @func_2658() /* ty=Tensor[(4, 3, 3), float32] */;
  %148 = %142.0;
  (%143, %144, %145, %146, %147, %148)
}

def @func_4056(%var_4040: Tensor[(4, 3, 3), float64]) -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float32]) {
  %149 = @func_2386() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(168), float32], Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), float32], Tensor[(4, 3, 3), bool]) */;
  %150 = @func_2061() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %151 = %150.0;
  %152 = cast(%var_4040, dtype="float32") /* ty=Tensor[(4, 3, 3), float32] */;
  %153 = shape_of(%151, dtype="int32") /* ty=Tensor[(3), int32] */;
  %154 = cast(%151, dtype="float32") /* ty=Tensor[(4, 3, 3), float32] */;
  %155 = dyn.reshape(%152, %153, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %156 = @func_3800() /* ty=Tensor[(4, 3, 3), float64] */;
  %157 = %149.0;
  %158 = power(%154, %155) /* ty=Tensor[(4, 3, 3), float32] */;
  (%156, %157, %158)
}

def @func_7806() -> (Tensor[(4, 3, 3), float64],) {
  %159 = @func_4511() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %160 = %159.1;
  (%160,)
}

def @func_10285() -> (Tensor[(6, 5, 9), float32],) {
  %161 = @func_6670() /* ty=(Tensor[(6, 5, 9), bool],) */;
  %162 = %161.0;
  %163 = cast(%162, dtype="float32") /* ty=Tensor[(6, 5, 9), float32] */;
  %164 = sqrt(%163) /* ty=Tensor[(6, 5, 9), float32] */;
  (%164,)
}

def @func_3151(%var_3142: Tensor[(4, 3, 3), float64]) -> Tensor[(4, 3, 3), bool] {
  %165 = @func_2846() /* ty=Tensor[(4, 3, 3), float64] */;
  %166 = cast(%var_3142, dtype="bool") /* ty=Tensor[(4, 3, 3), bool] */;
  %167 = shape_of(%165, dtype="int32") /* ty=Tensor[(3), int32] */;
  %168 = cast(%165, dtype="bool") /* ty=Tensor[(4, 3, 3), bool] */;
  %169 = dyn.reshape(%166, %167, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%168, %169) /* ty=Tensor[(4, 3, 3), bool] */
}

def @func_9251() -> (Tensor[(4, 3, 3), float64],) {
  %170 = @func_5683() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %171 = %170.0;
  (%171,)
}

def @func_12042() -> Tensor[(4, 3, 3), float64] {
  @func_2465() /* ty=Tensor[(4, 3, 3), float64] */
}

def @func_6029() -> (Tensor[(7, 4, 6), float64], Tensor[(168), float32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), bool]) {
  %172 = cast(meta[relay.Constant][5] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %173 = reshape(%172, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %174 = @func_5308(%173) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(168), float32], Tensor[(7, 4, 6), float64]) */;
  %175 = @func_4395() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), bool]) */;
  %176 = %175.1;
  %177 = cast(%176, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
  %178 = log(%177) /* ty=Tensor[(4, 3, 3), float64] */;
  %179 = cast(%178, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
  %180 = reshape(%179, newshape=[4, 3, 3]) /* ty=Tensor[(4, 3, 3), float64] */;
  %181 = %174.3;
  %182 = @func_3151(%180) /* ty=Tensor[(4, 3, 3), bool] */;
  (%181, meta[relay.Constant][5] /* ty=Tensor[(168), float32] */, %178, %182)
}

def @func_8506(%var_8493: Tensor[(13, 13, 15), uint16], %var_8494: Tensor[(13, 13, 15), uint16]) -> (Tensor[(13, 13, 15), float32], Tensor[(4, 3, 3), float64]) {
  %183 = cast(%var_8494, dtype="bool") /* ty=Tensor[(13, 13, 15), bool] */;
  %184 = shape_of(%var_8493, dtype="int32") /* ty=Tensor[(3), int32] */;
  %185 = cast(%var_8493, dtype="bool") /* ty=Tensor[(13, 13, 15), bool] */;
  %186 = dyn.reshape(%183, %184, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %187 = not_equal(%185, %186) /* ty=Tensor[(13, 13, 15), bool] */;
  %188 = cast(%187, dtype="float32") /* ty=Tensor[(13, 13, 15), float32] */;
  %189 = acosh(%188) /* ty=Tensor[(13, 13, 15), float32] */;
  %190 = @func_3518() /* ty=Tensor[(4, 3, 3), float64] */;
  (%189, %190)
}

def @func_11499() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  %191 = @func_3488() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %192 = @func_10424() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(168), float32], Tensor[(4, 3, 3), float64]) */;
  %193 = @func_8771() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %194 = %191.0;
  %195 = %192.4;
  %196 = %193.0;
  %197 = @func_3218() /* ty=Tensor[(4, 3, 3), float64] */;
  (%194, %195, %196, %197)
}

def @func_11733() -> (Tensor[(4, 3, 3), uint64], Tensor[(7, 4, 6), uint32], Tensor[(42, 4), uint32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  %198 = @func_5973() /* ty=(Tensor[(4, 3, 3), uint64], Tensor[(4, 3, 3), float64]) */;
  %199 = cast(meta[relay.Constant][6] /* ty=Tensor[(42, 4), uint32] */, dtype="uint32") /* ty=Tensor[(42, 4), uint32] */;
  %200 = reshape(%199, newshape=[7, 4, 6]) /* ty=Tensor[(7, 4, 6), uint32] */;
  %201 = @func_4859(%200) /* ty=(Tensor[(7, 4, 6), uint32],) */;
  %202 = @func_9232() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %203 = %198.0;
  %204 = %201.0;
  %205 = @func_2465() /* ty=Tensor[(4, 3, 3), float64] */;
  %206 = %202.0;
  (%203, %204, meta[relay.Constant][6] /* ty=Tensor[(42, 4), uint32] */, %205, %206)
}

def @func_1983(%var_1924: Tensor[(168), float32], %var_1969: Tensor[(4, 3, 3), float64]) -> (Tensor[(6, 2, 14), float32], Tensor[(168), float32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  %207 = cast(%var_1924, dtype="float32") /* ty=Tensor[(168), float32] */;
  %208 = cast(%var_1924, dtype="int8") /* ty=Tensor[(168), int8] */;
  %209 = reshape(%207, newshape=[6, 2, 14]) /* ty=Tensor[(6, 2, 14), float32] */;
  %210 = reshape(%208, newshape=[6, 2, 14]) /* ty=Tensor[(6, 2, 14), int8] */;
  %211 = @func_162(%209, %210) /* ty=(Tensor[(6, 2, 14), float32], Tensor[(6, 2, 14), float64], Tensor[(6, 2, 14), float64]) */;
  %212 = @func_1870() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %213 = @func_1752() /* ty=Tensor[(4, 3, 3), float64] */;
  %214 = cast(%213, dtype="float32") /* ty=Tensor[(4, 3, 3), float32] */;
  %215 = acosh(%214) /* ty=Tensor[(4, 3, 3), float32] */;
  %216 = cast(%215, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
  %217 = cast(%var_1969, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
  %218 = shape_of(%213, dtype="int32") /* ty=Tensor[(3), int32] */;
  %219 = cast(%213, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
  %220 = dyn.reshape(%217, %218, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %221 = %211.0;
  %222 = %212.0;
  %223 = cosh(%216) /* ty=Tensor[(4, 3, 3), float64] */;
  %224 = floor_mod(%219, %220) /* ty=Tensor[(4, 3, 3), float64] */;
  (%221, %var_1924, %222, %223, %224)
}

def @func_2542() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), int16], Tensor[(4, 3, 3), float64]) {
  %225 = @func_1752() /* ty=Tensor[(4, 3, 3), float64] */;
  %226 = cast(%225, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
  %227 = reshape(%226, newshape=[4, 3, 3]) /* ty=Tensor[(4, 3, 3), float64] */;
  %228 = @func_2166(%227) /* ty=(Tensor[(4, 3, 3), int16], Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), float64], Tensor[(2366), int64], Tensor[(4, 3, 3), float64]) */;
  %229 = @func_2386() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(168), float32], Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), float32], Tensor[(4, 3, 3), bool]) */;
  %230 = @func_2465() /* ty=Tensor[(4, 3, 3), float64] */;
  %231 = %228.0;
  %232 = %229.1;
  (%230, %225, %231, %232)
}

def @func_10153() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(2366), int64], Tensor[(6, 2, 14), float64], Tensor[(168), float32]) {
  %233 = @func_2061() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %234 = @func_5185() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %235 = cast(meta[relay.Constant][7] /* ty=Tensor[(2366), int64] */, dtype="int64") /* ty=Tensor[(2366), int64] */;
  %236 = reshape(%235, newshape=[2366]) /* ty=Tensor[(2366), int64] */;
  %237 = @func_2091(%236) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(168), float32], Tensor[(4, 3, 3), float64], Tensor[(6, 2, 14), float64], Tensor[(2366), int64]) */;
  %238 = cast(meta[relay.Constant][8] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %239 = cast(meta[relay.Constant][8] /* ty=Tensor[(168), float32] */, dtype="int8") /* ty=Tensor[(168), int8] */;
  %240 = reshape(%238, newshape=[6, 2, 14]) /* ty=Tensor[(6, 2, 14), float32] */;
  %241 = reshape(%239, newshape=[6, 2, 14]) /* ty=Tensor[(6, 2, 14), int8] */;
  %242 = @func_162(%240, %241) /* ty=(Tensor[(6, 2, 14), float32], Tensor[(6, 2, 14), float64], Tensor[(6, 2, 14), float64]) */;
  %243 = %233.0;
  %244 = %234.0;
  %245 = %237.0;
  %246 = %242.2;
  (%243, %244, %245, meta[relay.Constant][7] /* ty=Tensor[(2366), int64] */, %246, meta[relay.Constant][8] /* ty=Tensor[(168), float32] */)
}

def @func_6314() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(6, 2, 14), bool]) {
  %247 = @func_2581() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %248 = @func_3073() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %249 = cast(meta[relay.Constant][9] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %250 = cast(meta[relay.Constant][9] /* ty=Tensor[(168), float32] */, dtype="int8") /* ty=Tensor[(168), int8] */;
  %251 = reshape(%249, newshape=[6, 2, 14]) /* ty=Tensor[(6, 2, 14), float32] */;
  %252 = reshape(%250, newshape=[6, 2, 14]) /* ty=Tensor[(6, 2, 14), int8] */;
  %253 = @func_162(%251, %252) /* ty=(Tensor[(6, 2, 14), float32], Tensor[(6, 2, 14), float64], Tensor[(6, 2, 14), float64]) */;
  %254 = %253.1;
  %255 = cast(%254, dtype="float32") /* ty=Tensor[(6, 2, 14), float32] */;
  %256 = cos(%255) /* ty=Tensor[(6, 2, 14), float32] */;
  %257 = cast(meta[relay.Constant][9] /* ty=Tensor[(168), float32] */, dtype="bool") /* ty=Tensor[(168), bool] */;
  %258 = shape_of(%256, dtype="int32") /* ty=Tensor[(3), int32] */;
  %259 = cast(%256, dtype="bool") /* ty=Tensor[(6, 2, 14), bool] */;
  %260 = dyn.reshape(%257, %258, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %261 = %247.0;
  %262 = %248.0;
  %263 = less_equal(%259, %260) /* ty=Tensor[(6, 2, 14), bool] */;
  (%261, %262, %263)
}

def @func_14360() -> (Tensor[(4, 3, 3), float64],) {
  %264 = @func_12269() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %265 = %264.0;
  (%265,)
}

def @func_15017() -> (Tensor[(4, 3, 3), uint64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(2366), float32]) {
  %266 = @func_9508() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), uint64]) */;
  %267 = @func_10254() /* ty=(Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), float64]) */;
  %268 = cast(meta[relay.Constant][10] /* ty=Tensor[(2366), float32] */, dtype="float32") /* ty=Tensor[(2366), float32] */;
  %269 = reshape(%268, newshape=[2366]) /* ty=Tensor[(2366), float32] */;
  %270 = @func_8141(%269) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(2366), float32]) */;
  %271 = %266.1;
  %272 = %267.1;
  %273 = %270.1;
  (%271, %272, %273, meta[relay.Constant][10] /* ty=Tensor[(2366), float32] */)
}

def @func_8671() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  %274 = @func_7103() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %275 = @func_7967() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %276 = @func_7564() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %277 = @func_2386() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(168), float32], Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), float32], Tensor[(4, 3, 3), bool]) */;
  %278 = %274.0;
  %279 = %275.0;
  %280 = %276.0;
  %281 = %277.1;
  (%278, %279, %280, %281)
}

def @func_6513() -> (Tensor[(4, 3, 3), float64],) {
  %282 = @func_3233() /* ty=Tensor[(4, 3, 3), float64] */;
  (%282,)
}

def @func_6131() -> (Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), uint64]) {
  %283 = @func_4395() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), bool]) */;
  %284 = %283.1;
  %285 = @func_3975() /* ty=Tensor[(4, 3, 3), uint64] */;
  (%284, %285)
}

def @func_4408() -> Tensor[(4, 3, 3), float64] {
  @func_4233() /* ty=Tensor[(4, 3, 3), float64] */
}

def @func_13960() -> Tensor[(4, 3, 3), float64] {
  %286 = @func_13548() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %286.0
}

def @func_13913() -> (Tensor[(9, 12, 6), int16], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  %287 = @func_9342() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %288 = %287.1;
  %289 = cast(%288, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
  %290 = reshape(%289, newshape=[4, 3, 3]) /* ty=Tensor[(4, 3, 3), float64] */;
  %291 = @func_2727(%290) /* ty=(Tensor[(6, 2, 14), float64], Tensor[(168), float32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %292 = @func_7888() /* ty=Tensor[(9, 12, 6), int16] */;
  %293 = %291.3;
  (%292, %288, %293)
}

def @func_9508() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), uint64]) {
  %294 = @func_5973() /* ty=(Tensor[(4, 3, 3), uint64], Tensor[(4, 3, 3), float64]) */;
  %295 = @func_3518() /* ty=Tensor[(4, 3, 3), float64] */;
  %296 = %294.0;
  (%295, %296)
}

def @func_2828() -> Tensor[(4, 3, 3), float64] {
  @func_1752() /* ty=Tensor[(4, 3, 3), float64] */
}

def @func_7316() -> (Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), uint64]) {
  %297 = @func_6131() /* ty=(Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), uint64]) */;
  %298 = @func_6172() /* ty=(Tensor[(4, 3, 3), uint64],) */;
  %299 = %297.0;
  %300 = %298.0;
  (%299, %300)
}

def @func_7484() -> (Tensor[(4, 3, 3), float64],) {
  %301 = @func_6982() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %302 = %301.0;
  (%302,)
}

def @func_14474() -> Tensor[(4, 3, 3), bool] {
  %303 = @func_9993() /* ty=(Tensor[(4, 3, 3), bool],) */;
  %303.0
}

def @func_3975() -> Tensor[(4, 3, 3), uint64] {
  %304 = @func_2542() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), int16], Tensor[(4, 3, 3), float64]) */;
  %305 = %304.1;
  %306 = cast(meta[relay.Constant][11] /* ty=Tensor[(4, 3, 3), float64] */, dtype="uint64") /* ty=Tensor[(4, 3, 3), uint64] */;
  %307 = shape_of(%305, dtype="int32") /* ty=Tensor[(3), int32] */;
  %308 = cast(%305, dtype="uint64") /* ty=Tensor[(4, 3, 3), uint64] */;
  %309 = dyn.reshape(%306, %307, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  bitwise_or(%308, %309) /* ty=Tensor[(4, 3, 3), uint64] */
}

def @func_5477() -> (Tensor[(4, 3, 3), float64], Tensor[(6, 2, 14), float32], Tensor[(2366), int64], Tensor[(168), float32]) {
  %310 = @func_5258() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %311 = %310.0;
  %312 = cast(%311, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
  %313 = cast(meta[relay.Constant][12] /* ty=Tensor[(2366), int64] */, dtype="int64") /* ty=Tensor[(2366), int64] */;
  %314 = cast(meta[relay.Constant][13] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %315 = reshape(%313, newshape=[13, 13, 14]) /* ty=Tensor[(13, 13, 14), int64] */;
  %316 = reshape(%314, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %317 = @func_440(%315, %316) /* ty=(Tensor[(13, 13, 14), int64], Tensor[(6, 2, 14), float64], Tensor[(168), float32], Tensor[(6, 2, 14), float64], Tensor[(6, 2, 14), float32], Tensor[(6, 2, 14), float64]) */;
  %318 = log10(%312) /* ty=Tensor[(4, 3, 3), float64] */;
  %319 = %317.4;
  (%318, %319, meta[relay.Constant][12] /* ty=Tensor[(2366), int64] */, meta[relay.Constant][13] /* ty=Tensor[(168), float32] */)
}

def @func_2994() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  %320 = @func_2542() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), int16], Tensor[(4, 3, 3), float64]) */;
  %321 = @func_2465() /* ty=Tensor[(4, 3, 3), float64] */;
  %322 = %320.3;
  (%321, %322)
}

def @func_2061() -> (Tensor[(4, 3, 3), float64],) {
  %323 = @func_1870() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %324 = %323.0;
  (%324,)
}

def @func_9993() -> (Tensor[(4, 3, 3), bool],) {
  %325 = @func_9923() /* ty=Tensor[(4, 3, 3), bool] */;
  (%325,)
}

def @func_9219(%var_9213: Tensor[(42, 4), float32]) -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(42, 4), int8]) {
  %326 = @func_8195() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %327 = @func_5725() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float32], Tensor[(168), float32], Tensor[(1183, 2), int64], Tensor[(42, 4), float32]) */;
  %328 = %327.4;
  %329 = cast(%var_9213, dtype="int8") /* ty=Tensor[(42, 4), int8] */;
  %330 = shape_of(%328, dtype="int32") /* ty=Tensor[(2), int32] */;
  %331 = cast(%328, dtype="int8") /* ty=Tensor[(42, 4), int8] */;
  %332 = dyn.reshape(%329, %330, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %333 = %326.0;
  %334 = @func_3218() /* ty=Tensor[(4, 3, 3), float64] */;
  %335 = minimum(%331, %332) /* ty=Tensor[(42, 4), int8] */;
  (%333, %334, %335)
}

def @func_7920(%var_7894: Tensor[(84, 14), float32]) -> (Tensor[(4, 3, 3), float64], Tensor[(168), uint32], Tensor[(84, 14), float32], Tensor[(168), uint32], Tensor[(168), float32]) {
  %336 = cast(%var_7894, dtype="float32") /* ty=Tensor[(84, 14), float32] */;
  %337 = cast(meta[relay.Constant][14] /* ty=Tensor[(168), uint32] */, dtype="uint32") /* ty=Tensor[(168), uint32] */;
  %338 = reshape(%336, newshape=[12, 7, 14]) /* ty=Tensor[(12, 7, 14), float32] */;
  %339 = reshape(%337, newshape=[168]) /* ty=Tensor[(168), uint32] */;
  %340 = @func_7217(%338, %339) /* ty=(Tensor[(12, 7, 14), float32], Tensor[(7, 4, 6), uint32], Tensor[(168), uint32], Tensor[(4, 3, 3), float64], Tensor[(36), float64]) */;
  %341 = %340.2;
  %342 = cast(%341, dtype="float32") /* ty=Tensor[(168), float32] */;
  %343 = @func_7767() /* ty=Tensor[(4, 3, 3), float64] */;
  %344 = cast(%343, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
  %345 = reshape(%342, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %346 = reshape(%344, newshape=[4, 3, 3]) /* ty=Tensor[(4, 3, 3), float64] */;
  %347 = @func_1983(%345, %346) /* ty=(Tensor[(6, 2, 14), float32], Tensor[(168), float32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %348 = %347.1;
  (%343, %341, %var_7894, meta[relay.Constant][14] /* ty=Tensor[(168), uint32] */, %348)
}

def @func_9391(%var_9389: Tensor[(270, 1), bool]) -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(6, 5, 9), int32], Tensor[(270, 1), bool]) {
  %349 = @func_6982() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %350 = @func_7564() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %351 = cast(%var_9389, dtype="bool") /* ty=Tensor[(270, 1), bool] */;
  %352 = reshape(%351, newshape=[6, 5, 9]) /* ty=Tensor[(6, 5, 9), bool] */;
  %353 = %349.0;
  %354 = %350.0;
  %355 = @func_6926(%352) /* ty=Tensor[(6, 5, 9), int32] */;
  (%353, %354, %355, %var_9389)
}

def @func_14658() -> (Tensor[(4, 3, 3), float64], Tensor[(9, 12, 6), int16], Tensor[(4, 3, 3), float64], Tensor[(2366), int64], Tensor[(1183, 2), int64]) {
  %356 = @func_12030() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %357 = @func_13318() /* ty=(Tensor[(6, 5, 9), float32], Tensor[(9, 12, 6), int16]) */;
  %358 = @func_5814() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %359 = cast(meta[relay.Constant][15] /* ty=Tensor[(1183, 2), int64] */, dtype="int64") /* ty=Tensor[(1183, 2), int64] */;
  %360 = reshape(%359, newshape=[2366]) /* ty=Tensor[(2366), int64] */;
  %361 = @func_4946(%360) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(2366), int64], Tensor[(4, 3, 3), float64]) */;
  %362 = %356.1;
  %363 = %357.1;
  %364 = %358.0;
  %365 = %361.2;
  (%362, %363, %364, %365, meta[relay.Constant][15] /* ty=Tensor[(1183, 2), int64] */)
}

def @func_12881() -> (Tensor[(4, 3, 3), float64],) {
  %366 = @func_4233() /* ty=Tensor[(4, 3, 3), float64] */;
  (%366,)
}

def @func_10941() -> Tensor[(4, 3, 3), bool] {
  %367 = @func_9993() /* ty=(Tensor[(4, 3, 3), bool],) */;
  %367.0
}

def @func_14290() -> Tensor[(4, 3, 3), float64] {
  %368 = @func_2386() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(168), float32], Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), float32], Tensor[(4, 3, 3), bool]) */;
  %368.0
}

def @func_13069() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(6, 5, 9), bool], Tensor[(270), float32]) {
  %369 = @func_4550() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %370 = @func_8771() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %371 = cast(meta[relay.Constant][16] /* ty=Tensor[(270), float32] */, dtype="float32") /* ty=Tensor[(270), float32] */;
  %372 = reshape(%371, newshape=[6, 5, 9]) /* ty=Tensor[(6, 5, 9), float32] */;
  %373 = @func_11048(%372) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(6, 5, 9), bool]) */;
  %374 = %369.0;
  %375 = %370.0;
  %376 = %373.1;
  (%374, %375, %376, meta[relay.Constant][16] /* ty=Tensor[(270), float32] */)
}

def @func_6544() -> Tensor[(4, 3, 3), uint64] {
  @func_4351() /* ty=Tensor[(4, 3, 3), uint64] */
}

def @func_7955() -> (Tensor[(4, 3, 3), float64],) {
  %377 = @func_4550() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %378 = %377.0;
  (%378,)
}

def @func_13675() -> (Tensor[(6, 5, 9), float32], Tensor[(4, 3, 3), bool]) {
  %379 = @func_11812() /* ty=(Tensor[(6, 5, 9), float32],) */;
  %380 = @func_12601() /* ty=(Tensor[(4, 3, 3), bool],) */;
  %381 = %379.0;
  %382 = %380.0;
  (%381, %382)
}

def @func_15798() -> Tensor[(4, 3, 3), float64] {
  %383 = @func_10889() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), uint64]) */;
  %383.0
}

def @func_14319() -> (Tensor[(4, 3, 3), float64],) {
  %384 = @func_2940() /* ty=Tensor[(4, 3, 3), float64] */;
  (%384,)
}

def @func_2465() -> Tensor[(4, 3, 3), float64] {
  @func_1752() /* ty=Tensor[(4, 3, 3), float64] */
}

def @func_13128() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(1815), float64], Tensor[(6, 5, 9), float32], Tensor[(4, 3, 3), float64]) {
  %385 = @func_3451() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %386 = @func_7564() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %387 = cast(meta[relay.Constant][17] /* ty=Tensor[(1815), float64] */, dtype="float64") /* ty=Tensor[(1815), float64] */;
  %388 = reshape(%387, newshape=[1815]) /* ty=Tensor[(1815), float64] */;
  %389 = @func_10917(%388) /* ty=(Tensor[(4, 3, 3), float32], Tensor[(4, 3, 3), float64], Tensor[(11, 11, 15), float64], Tensor[(1815), float64]) */;
  %390 = @func_11812() /* ty=(Tensor[(6, 5, 9), float32],) */;
  %391 = @func_2581() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %392 = %385.0;
  %393 = %386.0;
  %394 = %389.1;
  %395 = %390.0;
  %396 = %391.0;
  (%392, %393, %394, meta[relay.Constant][17] /* ty=Tensor[(1815), float64] */, %395, %396)
}

def @func_5725() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float32], Tensor[(168), float32], Tensor[(1183, 2), int64], Tensor[(42, 4), float32]) {
  %397 = @func_2778() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %398 = cast(meta[relay.Constant][18] /* ty=Tensor[(1183, 2), int64] */, dtype="int64") /* ty=Tensor[(1183, 2), int64] */;
  %399 = cast(meta[relay.Constant][19] /* ty=Tensor[(42, 4), float32] */, dtype="float32") /* ty=Tensor[(42, 4), float32] */;
  %400 = reshape(%398, newshape=[13, 13, 14]) /* ty=Tensor[(13, 13, 14), int64] */;
  %401 = reshape(%399, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %402 = @func_440(%400, %401) /* ty=(Tensor[(13, 13, 14), int64], Tensor[(6, 2, 14), float64], Tensor[(168), float32], Tensor[(6, 2, 14), float64], Tensor[(6, 2, 14), float32], Tensor[(6, 2, 14), float64]) */;
  %403 = %397.0;
  %404 = @func_2658() /* ty=Tensor[(4, 3, 3), float32] */;
  %405 = %402.2;
  (%403, %404, %405, meta[relay.Constant][18] /* ty=Tensor[(1183, 2), int64] */, meta[relay.Constant][19] /* ty=Tensor[(42, 4), float32] */)
}

def @func_6591(%var_6566: Tensor[(36), float64]) -> (Tensor[(6, 2, 14), bool], Tensor[(4, 3, 3), float64], Tensor[(36), float64], Tensor[(6, 2, 14), float64]) {
  %406 = @func_6314() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(6, 2, 14), bool]) */;
  %407 = cast(%var_6566, dtype="float64") /* ty=Tensor[(36), float64] */;
  %408 = reshape(%407, newshape=[4, 3, 3]) /* ty=Tensor[(4, 3, 3), float64] */;
  %409 = @func_4056(%408) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float32]) */;
  %410 = %409.1;
  %411 = cast(%410, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
  %412 = reshape(%411, newshape=[36]) /* ty=Tensor[(36), float64] */;
  %413 = @func_3278(%412) /* ty=(Tensor[(5, 12, 6), uint16], Tensor[(6, 2, 14), float64], Tensor[(36), float64]) */;
  %414 = %406.2;
  %415 = %413.1;
  (%414, %410, %var_6566, %415)
}

def @func_12517() -> Tensor[(4, 3, 3), float64] {
  @func_6708() /* ty=Tensor[(4, 3, 3), float64] */
}

def @func_16219(%var_16210: Tensor[(168), uint32]) -> (Tensor[(4, 3, 3), float64], Tensor[(7, 4, 6), uint32], Tensor[(168), uint32], Tensor[(4, 3, 3), float64]) {
  %416 = cast(%var_16210, dtype="uint32") /* ty=Tensor[(168), uint32] */;
  %417 = reshape(%416, newshape=[7, 4, 6]) /* ty=Tensor[(7, 4, 6), uint32] */;
  %418 = @func_4859(%417) /* ty=(Tensor[(7, 4, 6), uint32],) */;
  %419 = @func_10424() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(168), float32], Tensor[(4, 3, 3), float64]) */;
  %420 = @func_3800() /* ty=Tensor[(4, 3, 3), float64] */;
  %421 = %418.0;
  %422 = %419.1;
  (%420, %421, %var_16210, %422)
}

def @func_16028() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  %423 = @func_7967() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %424 = @func_6029() /* ty=(Tensor[(7, 4, 6), float64], Tensor[(168), float32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), bool]) */;
  %425 = %423.0;
  %426 = %424.2;
  (%425, %426)
}

def @func_11598() -> Tensor[(4, 3, 3), uint64] {
  @func_8487() /* ty=Tensor[(4, 3, 3), uint64] */
}

def @func_9543() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float32], Tensor[(13, 182), int64], Tensor[(42, 4), bool], Tensor[(6, 28), float32], Tensor[(4, 3, 3), float64]) {
  %427 = @func_8771() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %428 = %427.0;
  %429 = cast(%428, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
  %430 = reshape(%429, newshape=[4, 3, 3]) /* ty=Tensor[(4, 3, 3), float64] */;
  %431 = @func_4056(%430) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float32]) */;
  %432 = @func_8019() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(13, 182), int64], Tensor[(2366), float64]) */;
  %433 = cast(meta[relay.Constant][20] /* ty=Tensor[(6, 28), float32] */, dtype="float32") /* ty=Tensor[(6, 28), float32] */;
  %434 = reshape(%433, newshape=[42, 4]) /* ty=Tensor[(42, 4), float32] */;
  %435 = @func_5774(%434) /* ty=(Tensor[(42, 4), bool], Tensor[(4, 3, 3), float64]) */;
  %436 = @func_7103() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %437 = %431.2;
  %438 = %432.1;
  %439 = %435.0;
  %440 = %436.0;
  (%428, %437, %438, %439, meta[relay.Constant][20] /* ty=Tensor[(6, 28), float32] */, %440)
}

def @func_10509() -> (Tensor[(4, 3, 3), float64], Tensor[(6, 2, 14), bool]) {
  %441 = @func_8771() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %442 = cast(meta[relay.Constant][21] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %443 = reshape(%442, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %444 = @func_1828(%443) /* ty=(Tensor[(4, 3, 3), float32], Tensor[(6, 2, 14), float64], Tensor[(2366), int64], Tensor[(168), float32], Tensor[(6, 2, 14), float32]) */;
  %445 = %444.1;
  %446 = cast(meta[relay.Constant][21] /* ty=Tensor[(168), float32] */, dtype="bool") /* ty=Tensor[(168), bool] */;
  %447 = shape_of(%445, dtype="int32") /* ty=Tensor[(3), int32] */;
  %448 = cast(%445, dtype="bool") /* ty=Tensor[(6, 2, 14), bool] */;
  %449 = dyn.reshape(%446, %447, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %450 = %441.0;
  %451 = not_equal(%448, %449) /* ty=Tensor[(6, 2, 14), bool] */;
  (%450, %451)
}

def @func_8403() -> (Tensor[(168), float32], Tensor[(1183, 2), float32]) {
  %452 = @func_5477() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(6, 2, 14), float32], Tensor[(2366), int64], Tensor[(168), float32]) */;
  %453 = @func_5725() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float32], Tensor[(168), float32], Tensor[(1183, 2), int64], Tensor[(42, 4), float32]) */;
  %454 = %453.3;
  %455 = cast(%454, dtype="float32") /* ty=Tensor[(1183, 2), float32] */;
  %456 = %452.3;
  %457 = sqrt(%455) /* ty=Tensor[(1183, 2), float32] */;
  (%456, %457)
}

def @func_162(%var_104: Tensor[(6, 2, 14), float32], %var_126: Tensor[(6, 2, 14), int8]) -> (Tensor[(6, 2, 14), float32], Tensor[(6, 2, 14), float64], Tensor[(6, 2, 14), float64]) {
  %458 = cast(%var_104, dtype="float32") /* ty=Tensor[(6, 2, 14), float32] */;
  %459 = exp(%458) /* ty=Tensor[(6, 2, 14), float32] */;
  %460 = cast(%var_104, dtype="int8") /* ty=Tensor[(6, 2, 14), int8] */;
  %461 = shape_of(%459, dtype="int32") /* ty=Tensor[(3), int32] */;
  %462 = cast(%459, dtype="int8") /* ty=Tensor[(6, 2, 14), int8] */;
  %463 = dyn.reshape(%460, %461, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %464 = maximum(%462, %463) /* ty=Tensor[(6, 2, 14), int8] */;
  %465 = cast(%var_126, dtype="float32") /* ty=Tensor[(6, 2, 14), float32] */;
  %466 = shape_of(%464, dtype="int32") /* ty=Tensor[(3), int32] */;
  %467 = cast(%464, dtype="float32") /* ty=Tensor[(6, 2, 14), float32] */;
  %468 = dyn.reshape(%465, %466, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %469 = cast(%464, dtype="float64") /* ty=Tensor[(6, 2, 14), float64] */;
  %470 = cast(%464, dtype="float32") /* ty=Tensor[(6, 2, 14), float32] */;
  %471 = atan(%470) /* ty=Tensor[(6, 2, 14), float32] */;
  %472 = cast(%471, dtype="float64") /* ty=Tensor[(6, 2, 14), float64] */;
  %473 = power(%467, %468) /* ty=Tensor[(6, 2, 14), float32] */;
  %474 = sin(%469) /* ty=Tensor[(6, 2, 14), float64] */;
  %475 = log10(%472) /* ty=Tensor[(6, 2, 14), float64] */;
  (%473, %474, %475)
}

def @func_9923() -> Tensor[(4, 3, 3), bool] {
  %476 = @func_7316() /* ty=(Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), uint64]) */;
  %476.0
}

def @func_10791() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  %477 = @func_5185() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %478 = @func_2465() /* ty=Tensor[(4, 3, 3), float64] */;
  %479 = %477.0;
  (%478, %479)
}

def @func_12269() -> (Tensor[(4, 3, 3), float64],) {
  %480 = @func_7524() /* ty=(Tensor[(4, 3, 3), uint64], Tensor[(4, 3, 3), float64]) */;
  %481 = %480.1;
  (%481,)
}

def @func_9705() -> Tensor[(4, 3, 3), float64] {
  %482 = @func_8671() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %482.3
}

def @func_12491() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(1170), uint16]) {
  %483 = @func_7967() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %484 = cast(meta[relay.Constant][22] /* ty=Tensor[(1170), uint16] */, dtype="uint16") /* ty=Tensor[(1170), uint16] */;
  %485 = reshape(%484, newshape=[1170]) /* ty=Tensor[(1170), uint16] */;
  %486 = @func_5380(%485) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float32], Tensor[(1170), uint16], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %487 = %483.0;
  %488 = %486.4;
  (%487, %488, meta[relay.Constant][22] /* ty=Tensor[(1170), uint16] */)
}

def @func_14463() -> (Tensor[(4, 3, 3), float64],) {
  %489 = @func_5544() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %490 = %489.0;
  (%490,)
}

def @func_3196() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float32], Tensor[(4, 3, 3), float64]) {
  %491 = @func_2581() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %492 = @func_2778() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %493 = %491.0;
  %494 = @func_2658() /* ty=Tensor[(4, 3, 3), float32] */;
  %495 = %492.0;
  (%493, %494, %495)
}

def @func_10808() -> (Tensor[(4, 3, 3), float64],) {
  %496 = @func_4511() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %497 = %496.1;
  (%497,)
}

def @func_4395() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), bool]) {
  %498 = @func_2994() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %499 = %498.1;
  %500 = cast(%499, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
  %501 = reshape(%500, newshape=[4, 3, 3]) /* ty=Tensor[(4, 3, 3), float64] */;
  %502 = @func_2166(%501) /* ty=(Tensor[(4, 3, 3), int16], Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), float64], Tensor[(2366), int64], Tensor[(4, 3, 3), float64]) */;
  %503 = %502.1;
  %504 = cast(%499, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
  %505 = shape_of(%503, dtype="int32") /* ty=Tensor[(3), int32] */;
  %506 = cast(%503, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
  %507 = dyn.reshape(%504, %505, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %508 = cast(%503, dtype="bool") /* ty=Tensor[(4, 3, 3), bool] */;
  %509 = shape_of(%499, dtype="int32") /* ty=Tensor[(3), int32] */;
  %510 = cast(%499, dtype="bool") /* ty=Tensor[(4, 3, 3), bool] */;
  %511 = dyn.reshape(%508, %509, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %512 = mod(%506, %507) /* ty=Tensor[(4, 3, 3), float64] */;
  %513 = less_equal(%510, %511) /* ty=Tensor[(4, 3, 3), bool] */;
  (%512, %513)
}

def @func_10190() -> (Tensor[(6, 5, 9), bool], Tensor[(4, 3, 3), float64]) {
  %514 = @func_5134() /* ty=(Tensor[(6, 5, 9), bool],) */;
  %515 = @func_7373() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %516 = %514.0;
  %517 = %515.0;
  (%516, %517)
}

def @func_5258() -> (Tensor[(4, 3, 3), float64],) {
  %518 = @func_4289() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %519 = %518.0;
  (%519,)
}

def @func_3488() -> (Tensor[(4, 3, 3), float64],) {
  %520 = @func_1870() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %521 = %520.0;
  (%521,)
}

def @func_6637() -> (Tensor[(4, 3, 3), float32],) {
  %522 = @func_2994() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %523 = %522.0;
  %524 = cast(%523, dtype="float32") /* ty=Tensor[(4, 3, 3), float32] */;
  %525 = atanh(%524) /* ty=Tensor[(4, 3, 3), float32] */;
  (%525,)
}

def @func_5308(%var_5272: Tensor[(168), float32]) -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(168), float32], Tensor[(7, 4, 6), float64]) {
  %526 = @func_4395() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), bool]) */;
  %527 = cast(%var_5272, dtype="float32") /* ty=Tensor[(168), float32] */;
  %528 = %526.0;
  %529 = cast(%528, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
  %530 = reshape(%527, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %531 = reshape(%529, newshape=[4, 3, 3]) /* ty=Tensor[(4, 3, 3), float64] */;
  %532 = @func_1983(%530, %531) /* ty=(Tensor[(6, 2, 14), float32], Tensor[(168), float32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %533 = cast(%var_5272, dtype="uint32") /* ty=Tensor[(168), uint32] */;
  %534 = reshape(%533, newshape=[7, 4, 6]) /* ty=Tensor[(7, 4, 6), uint32] */;
  %535 = @func_4859(%534) /* ty=(Tensor[(7, 4, 6), uint32],) */;
  %536 = %535.0;
  %537 = cast(%536, dtype="float64") /* ty=Tensor[(7, 4, 6), float64] */;
  %538 = %532.2;
  %539 = log10(%537) /* ty=Tensor[(7, 4, 6), float64] */;
  (%528, %538, %var_5272, %539)
}

def @func_2249(%var_2215: Tensor[(4, 3, 3), float64]) -> (Tensor[(4, 3, 3), bool], Tensor[(2366), int64]) {
  %540 = @func_1752() /* ty=Tensor[(4, 3, 3), float64] */;
  %541 = cast(%var_2215, dtype="bool") /* ty=Tensor[(4, 3, 3), bool] */;
  %542 = shape_of(%540, dtype="int32") /* ty=Tensor[(3), int32] */;
  %543 = cast(%540, dtype="bool") /* ty=Tensor[(4, 3, 3), bool] */;
  %544 = dyn.reshape(%541, %542, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %545 = cast(%var_2215, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
  %546 = reshape(%545, newshape=[4, 3, 3]) /* ty=Tensor[(4, 3, 3), float64] */;
  %547 = @func_2166(%546) /* ty=(Tensor[(4, 3, 3), int16], Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), float64], Tensor[(2366), int64], Tensor[(4, 3, 3), float64]) */;
  %548 = equal(%543, %544) /* ty=Tensor[(4, 3, 3), bool] */;
  %549 = %547.3;
  (%548, %549)
}

def @func_4859(%var_4855: Tensor[(7, 4, 6), uint32]) -> (Tensor[(7, 4, 6), uint32],) {
  %550 = cast(meta[relay.Constant][23] /* ty=Tensor[(7, 4, 1), uint32] */, dtype="uint32") /* ty=Tensor[(7, 4, 1), uint32] */;
  %551 = cast(%var_4855, dtype="uint32") /* ty=Tensor[(7, 4, 6), uint32] */;
  %552 = left_shift(%550, %551) /* ty=Tensor[(7, 4, 6), uint32] */;
  (%552,)
}

def @func_8171() -> Tensor[(168), float32] {
  %553 = @func_5518() /* ty=(Tensor[(4, 3, 3), uint64], Tensor[(168), float32], Tensor[(168), float32]) */;
  %553.2
}

def @func_3518() -> Tensor[(4, 3, 3), float64] {
  %554 = @func_1870() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %554.0
}

def @func_9794() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  %555 = @func_4264() /* ty=Tensor[(4, 3, 3), float64] */;
  %556 = cast(%555, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
  %557 = reshape(%556, newshape=[4, 3, 3]) /* ty=Tensor[(4, 3, 3), float64] */;
  %558 = @func_2727(%557) /* ty=(Tensor[(6, 2, 14), float64], Tensor[(168), float32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %559 = %558.3;
  (%555, %559)
}

def @func_4946(%var_4913: Tensor[(2366), int64]) -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(2366), int64], Tensor[(4, 3, 3), float64]) {
  %560 = cast(%var_4913, dtype="int64") /* ty=Tensor[(2366), int64] */;
  %561 = reshape(%560, newshape=[2366]) /* ty=Tensor[(2366), int64] */;
  %562 = @func_2091(%561) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(168), float32], Tensor[(4, 3, 3), float64], Tensor[(6, 2, 14), float64], Tensor[(2366), int64]) */;
  %563 = @func_2846() /* ty=Tensor[(4, 3, 3), float64] */;
  %564 = %562.3;
  %565 = @func_3233() /* ty=Tensor[(4, 3, 3), float64] */;
  (%563, %564, %var_4913, %565)
}

def @func_10638(%var_10581: Tensor[(169, 14), float32]) -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(169, 14), float32], Tensor[(4, 3, 3), float64], Tensor[(6, 2, 14), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  %566 = @func_2994() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %567 = cast(%var_10581, dtype="float32") /* ty=Tensor[(169, 14), float32] */;
  %568 = reshape(%567, newshape=[2366]) /* ty=Tensor[(2366), float32] */;
  %569 = @func_9661(%568) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(2366), float32], Tensor[(2366), float64], Tensor[(4, 3, 3), bool]) */;
  %570 = @func_3196() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float32], Tensor[(4, 3, 3), float64]) */;
  %571 = @func_3518() /* ty=Tensor[(4, 3, 3), float64] */;
  %572 = cast(%571, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
  %573 = reshape(%572, newshape=[4, 3, 3]) /* ty=Tensor[(4, 3, 3), float64] */;
  %574 = @func_2727(%573) /* ty=(Tensor[(6, 2, 14), float64], Tensor[(168), float32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %575 = @func_7955() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %576 = @func_2061() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %577 = %566.1;
  %578 = %569.1;
  %579 = %570.2;
  %580 = %574.0;
  %581 = %575.0;
  %582 = @func_1752() /* ty=Tensor[(4, 3, 3), float64] */;
  %583 = %576.0;
  (%577, %571, %578, %var_10581, %579, %580, %581, %582, %583)
}

def @func_8852() -> (Tensor[(11, 2, 12), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  %584 = cast(meta[relay.Constant][25] /* ty=Tensor[(11, 2, 12), float64] */, dtype="float64") /* ty=Tensor[(11, 2, 12), float64] */;
  %585 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(11, 2, 12), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %586 = cast(meta[relay.Constant][24] /* ty=Tensor[(11, 2, 12), float64] */, dtype="float64") /* ty=Tensor[(11, 2, 12), float64] */;
  %587 = dyn.reshape(%584, %585, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %588 = @func_8075() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %589 = floor_divide(%586, %587) /* ty=Tensor[(11, 2, 12), float64] */;
  %590 = %588.0;
  %591 = @func_6708() /* ty=Tensor[(4, 3, 3), float64] */;
  (%589, %590, %591)
}

def @func_2940() -> Tensor[(4, 3, 3), float64] {
  @func_1752() /* ty=Tensor[(4, 3, 3), float64] */
}

def @func_4351() -> Tensor[(4, 3, 3), uint64] {
  @func_3975() /* ty=Tensor[(4, 3, 3), uint64] */
}

def @func_4233() -> Tensor[(4, 3, 3), float64] {
  @func_1752() /* ty=Tensor[(4, 3, 3), float64] */
}

def @func_5774(%var_5745: Tensor[(42, 4), float32]) -> (Tensor[(42, 4), bool], Tensor[(4, 3, 3), float64]) {
  %592 = @func_5725() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float32], Tensor[(168), float32], Tensor[(1183, 2), int64], Tensor[(42, 4), float32]) */;
  %593 = %592.4;
  %594 = cast(%var_5745, dtype="bool") /* ty=Tensor[(42, 4), bool] */;
  %595 = shape_of(%593, dtype="int32") /* ty=Tensor[(2), int32] */;
  %596 = cast(%593, dtype="bool") /* ty=Tensor[(42, 4), bool] */;
  %597 = dyn.reshape(%594, %595, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %598 = @func_3582() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %599 = greater_equal(%596, %597) /* ty=Tensor[(42, 4), bool] */;
  %600 = %598.0;
  (%599, %600)
}

def @func_12030() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  %601 = @func_3266() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %602 = @func_5258() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %603 = %601.0;
  %604 = %602.0;
  (%603, %604)
}

def @func_12655() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  %605 = @func_3451() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %606 = @func_9794() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %607 = %605.0;
  %608 = %606.0;
  (%607, %608)
}

def @func_14249(%var_14195: Tensor[(3, 56), uint32]) -> (Tensor[(4, 3, 3), float64], Tensor[(7, 4, 6), uint32], Tensor[(3, 56), uint32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(1815), bool]) {
  %609 = cast(%var_14195, dtype="uint32") /* ty=Tensor[(3, 56), uint32] */;
  %610 = reshape(%609, newshape=[7, 4, 6]) /* ty=Tensor[(7, 4, 6), uint32] */;
  %611 = @func_4859(%610) /* ty=(Tensor[(7, 4, 6), uint32],) */;
  %612 = @func_9232() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %613 = cast(meta[relay.Constant][26] /* ty=Tensor[(1815), float64] */, dtype="float64") /* ty=Tensor[(1815), float64] */;
  %614 = reshape(%613, newshape=[1815]) /* ty=Tensor[(1815), float64] */;
  %615 = @func_13779(%614) /* ty=(Tensor[(1815), float64],) */;
  %616 = %615.0;
  %617 = cast(%616, dtype="bool") /* ty=Tensor[(1815), bool] */;
  %618 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(1815), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %619 = cast(meta[relay.Constant][26] /* ty=Tensor[(1815), float64] */, dtype="bool") /* ty=Tensor[(1815), bool] */;
  %620 = dyn.reshape(%617, %618, newshape=[]) /* ty=Tensor[(?), bool] */;
  %621 = @func_4233() /* ty=Tensor[(4, 3, 3), float64] */;
  %622 = %611.0;
  %623 = @func_4335() /* ty=Tensor[(4, 3, 3), float64] */;
  %624 = %612.0;
  %625 = equal(%619, %620) /* ty=Tensor[(1815), bool] */;
  (%621, %622, %var_14195, %623, %624, %625)
}

def @func_15695(%var_15693: Tensor[(2366), int64]) -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(2366), int64], Tensor[(2366), int64]) {
  %626 = @func_12881() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %627 = @func_9342() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %628 = cast(%var_15693, dtype="int64") /* ty=Tensor[(2366), int64] */;
  %629 = reshape(%628, newshape=[2366]) /* ty=Tensor[(2366), int64] */;
  %630 = @func_4946(%629) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(2366), int64], Tensor[(4, 3, 3), float64]) */;
  %631 = %626.0;
  %632 = %627.1;
  %633 = %630.2;
  (%631, %632, %633, %var_15693)
}

def @func_9400() -> Tensor[(4, 3, 3), float64] {
  %634 = @func_7955() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %634.0
}

def @func_11048(%var_11032: Tensor[(6, 5, 9), float32]) -> (Tensor[(4, 3, 3), float64], Tensor[(6, 5, 9), bool]) {
  %635 = @func_10285() /* ty=(Tensor[(6, 5, 9), float32],) */;
  %636 = %635.0;
  %637 = cast(%var_11032, dtype="bool") /* ty=Tensor[(6, 5, 9), bool] */;
  %638 = shape_of(%636, dtype="int32") /* ty=Tensor[(3), int32] */;
  %639 = cast(%636, dtype="bool") /* ty=Tensor[(6, 5, 9), bool] */;
  %640 = dyn.reshape(%637, %638, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %641 = @func_3233() /* ty=Tensor[(4, 3, 3), float64] */;
  %642 = not_equal(%639, %640) /* ty=Tensor[(6, 5, 9), bool] */;
  (%641, %642)
}

def @func_1752() -> Tensor[(4, 3, 3), float64] {
  %643 = cast(meta[relay.Constant][27] /* ty=Tensor[(4, 3, 3), float64] */, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
  asinh(%643) /* ty=Tensor[(4, 3, 3), float64] */
}

def @func_7838(%var_7831: Tensor[(12, 2, 4), uint64], %var_7832: Tensor[(12, 2, 4), uint64]) -> (Tensor[(12, 2, 4), uint64],) {
  %644 = cast(%var_7832, dtype="uint64") /* ty=Tensor[(12, 2, 4), uint64] */;
  %645 = shape_of(%var_7831, dtype="int32") /* ty=Tensor[(3), int32] */;
  %646 = cast(%var_7831, dtype="uint64") /* ty=Tensor[(12, 2, 4), uint64] */;
  %647 = dyn.reshape(%644, %645, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %648 = multiply(%646, %647) /* ty=Tensor[(12, 2, 4), uint64] */;
  (%648,)
}

def @func_9232() -> (Tensor[(4, 3, 3), float64],) {
  %649 = @func_8075() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %650 = %649.0;
  (%650,)
}

def @func_3278(%var_3276: Tensor[(36), float64]) -> (Tensor[(5, 12, 6), uint16], Tensor[(6, 2, 14), float64], Tensor[(36), float64]) {
  %651 = cast(meta[relay.Constant][29] /* ty=Tensor[(5, 12, 6), uint16] */, dtype="uint16") /* ty=Tensor[(5, 12, 6), uint16] */;
  %652 = shape_of(meta[relay.Constant][28] /* ty=Tensor[(5, 12, 6), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %653 = cast(meta[relay.Constant][28] /* ty=Tensor[(5, 12, 6), uint16] */, dtype="uint16") /* ty=Tensor[(5, 12, 6), uint16] */;
  %654 = dyn.reshape(%651, %652, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %655 = cast(%var_3276, dtype="float64") /* ty=Tensor[(36), float64] */;
  %656 = reshape(%655, newshape=[4, 3, 3]) /* ty=Tensor[(4, 3, 3), float64] */;
  %657 = @func_2727(%656) /* ty=(Tensor[(6, 2, 14), float64], Tensor[(168), float32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %658 = multiply(%653, %654) /* ty=Tensor[(5, 12, 6), uint16] */;
  %659 = %657.0;
  (%658, %659, %var_3276)
}

def @func_1487(%var_1468: uint32, %var_1469: Tensor[(1, 6), uint32]) -> (Tensor[(1, 6), uint32],) {
  %660 = cast(%var_1468, dtype="uint32") /* ty=uint32 */;
  %661 = cast(%var_1469, dtype="uint32") /* ty=Tensor[(1, 6), uint32] */;
  %662 = multiply(%660, %661) /* ty=Tensor[(1, 6), uint32] */;
  (%662,)
}

def @func_5814() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  %663 = @func_3233() /* ty=Tensor[(4, 3, 3), float64] */;
  %664 = @func_3518() /* ty=Tensor[(4, 3, 3), float64] */;
  (%663, %664)
}

def @func_13517() -> (Tensor[(4, 3, 3), uint64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  %665 = @func_11462() /* ty=(Tensor[(4, 3, 3), uint64],) */;
  %666 = @func_12655() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %667 = @func_7484() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %668 = %665.0;
  %669 = %666.0;
  %670 = %667.0;
  (%668, %669, %670)
}

def @func_8019() -> (Tensor[(4, 3, 3), float64], Tensor[(13, 182), int64], Tensor[(2366), float64]) {
  %671 = cast(meta[relay.Constant][30] /* ty=Tensor[(2366), int64] */, dtype="int64") /* ty=Tensor[(2366), int64] */;
  %672 = reshape(%671, newshape=[13, 182]) /* ty=Tensor[(13, 182), int64] */;
  %673 = @func_7174(%672) /* ty=(Tensor[(4, 3, 3), uint64], Tensor[(4, 3, 3), float64], Tensor[(13, 182), int64]) */;
  %674 = cast(meta[relay.Constant][30] /* ty=Tensor[(2366), int64] */, dtype="float64") /* ty=Tensor[(2366), float64] */;
  %675 = @func_4233() /* ty=Tensor[(4, 3, 3), float64] */;
  %676 = %673.2;
  %677 = atan(%674) /* ty=Tensor[(2366), float64] */;
  (%675, %676, %677)
}

def @func_3218() -> Tensor[(4, 3, 3), float64] {
  %678 = @func_2386() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(168), float32], Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), float32], Tensor[(4, 3, 3), bool]) */;
  %678.0
}

def @func_12085(%var_12071: Tensor[(4, 10, 8), float32], %var_12072: Tensor[(4, 10, 8), float32]) -> (Tensor[(4, 10, 8), float32],) {
  %679 = cast(%var_12072, dtype="float32") /* ty=Tensor[(4, 10, 8), float32] */;
  %680 = shape_of(%var_12071, dtype="int32") /* ty=Tensor[(3), int32] */;
  %681 = cast(%var_12071, dtype="float32") /* ty=Tensor[(4, 10, 8), float32] */;
  %682 = dyn.reshape(%679, %680, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %683 = divide(%681, %682) /* ty=Tensor[(4, 10, 8), float32] */;
  (%683,)
}

def @func_11215() -> (Tensor[(4, 3, 3), float32],) {
  %684 = @func_2658() /* ty=Tensor[(4, 3, 3), float32] */;
  (%684,)
}

def @func_9342() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  %685 = @func_7806() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %686 = %685.0;
  %687 = @func_4233() /* ty=Tensor[(4, 3, 3), float64] */;
  %688 = @func_6708() /* ty=Tensor[(4, 3, 3), float64] */;
  (%686, %687, %688)
}

def @func_13318() -> (Tensor[(6, 5, 9), float32], Tensor[(9, 12, 6), int16]) {
  %689 = @func_11812() /* ty=(Tensor[(6, 5, 9), float32],) */;
  %690 = %689.0;
  %691 = @func_7888() /* ty=Tensor[(9, 12, 6), int16] */;
  (%690, %691)
}

def @func_10917(%var_10900: Tensor[(1815), float64]) -> (Tensor[(4, 3, 3), float32], Tensor[(4, 3, 3), float64], Tensor[(11, 11, 15), float64], Tensor[(1815), float64]) {
  %692 = @func_10791() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %693 = cast(%var_10900, dtype="float64") /* ty=Tensor[(1815), float64] */;
  %694 = cast(%var_10900, dtype="float64") /* ty=Tensor[(1815), float64] */;
  %695 = reshape(%693, newshape=[11, 11, 15]) /* ty=Tensor[(11, 11, 15), float64] */;
  %696 = reshape(%694, newshape=[11, 11, 15]) /* ty=Tensor[(11, 11, 15), float64] */;
  %697 = @func_9850(%695, %696) /* ty=(Tensor[(11, 11, 15), bool], Tensor[(11, 11, 15), float64]) */;
  %698 = @func_2658() /* ty=Tensor[(4, 3, 3), float32] */;
  %699 = %692.0;
  %700 = %697.1;
  (%698, %699, %700, %var_10900)
}

def @func_3073() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  %701 = @func_2994() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %702 = @func_2828() /* ty=Tensor[(4, 3, 3), float64] */;
  %703 = %701.1;
  (%702, %703)
}

def @func_2581() -> (Tensor[(4, 3, 3), float64],) {
  %704 = @func_2061() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %705 = %704.0;
  (%705,)
}

def @func_3444(%var_3433: Tensor[(3, 56), float32]) -> (Tensor[(4, 3, 3), float32], Tensor[(6, 2, 14), float64], Tensor[(3, 56), float32]) {
  %706 = cast(%var_3433, dtype="float32") /* ty=Tensor[(3, 56), float32] */;
  %707 = cast(%var_3433, dtype="int8") /* ty=Tensor[(3, 56), int8] */;
  %708 = reshape(%706, newshape=[6, 2, 14]) /* ty=Tensor[(6, 2, 14), float32] */;
  %709 = reshape(%707, newshape=[6, 2, 14]) /* ty=Tensor[(6, 2, 14), int8] */;
  %710 = @func_162(%708, %709) /* ty=(Tensor[(6, 2, 14), float32], Tensor[(6, 2, 14), float64], Tensor[(6, 2, 14), float64]) */;
  %711 = @func_2658() /* ty=Tensor[(4, 3, 3), float32] */;
  %712 = %710.1;
  (%711, %712, %var_3433)
}

def @func_7103() -> (Tensor[(4, 3, 3), float64],) {
  %713 = @func_4264() /* ty=Tensor[(4, 3, 3), float64] */;
  (%713,)
}

def @func_3582() -> (Tensor[(4, 3, 3), float64],) {
  %714 = @func_3233() /* ty=Tensor[(4, 3, 3), float64] */;
  (%714,)
}

def @func_10424() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(168), float32], Tensor[(4, 3, 3), float64]) {
  %715 = @func_5667() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %716 = @func_8195() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %717 = @func_8954() /* ty=(Tensor[(168), float32], Tensor[(4, 3, 3), float64]) */;
  %718 = @func_6050() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %719 = %715.0;
  %720 = %716.0;
  %721 = %717.1;
  %722 = @func_8171() /* ty=Tensor[(168), float32] */;
  %723 = %718.0;
  (%719, %720, %721, %722, %723)
}

def @func_12939(%var_12924: Tensor[(1170), uint16]) -> (Tensor[(4, 3, 3), float64], Tensor[(1170), int64], Tensor[(4, 3, 3), float64]) {
  %724 = @func_7955() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %725 = @func_12491() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(1170), uint16]) */;
  %726 = %725.2;
  %727 = cast(%var_12924, dtype="int64") /* ty=Tensor[(1170), int64] */;
  %728 = shape_of(%726, dtype="int32") /* ty=Tensor[(1), int32] */;
  %729 = cast(%726, dtype="int64") /* ty=Tensor[(1170), int64] */;
  %730 = dyn.reshape(%727, %728, newshape=[]) /* ty=Tensor[(?), int64] */;
  %731 = @func_3073() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %732 = %724.0;
  %733 = minimum(%729, %730) /* ty=Tensor[(1170), int64] */;
  %734 = %731.0;
  (%732, %733, %734)
}

def @func_11170() -> Tensor[(4, 3, 3), float64] {
  %735 = @func_6674() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %735.0
}

def @func_6982() -> (Tensor[(4, 3, 3), float64],) {
  %736 = @func_2778() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %737 = %736.0;
  (%737,)
}

def @func_13623() -> (Tensor[(4, 3, 3), uint64], Tensor[(7, 10, 4), bool], Tensor[(280), float32]) {
  %738 = @func_9508() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), uint64]) */;
  %739 = cast(meta[relay.Constant][31] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
  %740 = cast(meta[relay.Constant][31] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
  %741 = reshape(%739, newshape=[7, 10, 4]) /* ty=Tensor[(7, 10, 4), float32] */;
  %742 = reshape(%740, newshape=[7, 10, 4]) /* ty=Tensor[(7, 10, 4), float32] */;
  %743 = %738.1;
  %744 = @func_6793(%741, %742) /* ty=Tensor[(7, 10, 4), bool] */;
  (%743, %744, meta[relay.Constant][31] /* ty=Tensor[(280), float32] */)
}

def @func_13869() -> (Tensor[(4, 3, 3), float64],) {
  %745 = @func_13548() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %746 = %745.0;
  (%746,)
}

def @func_15401() -> (Tensor[(4, 3, 3), uint64],) {
  %747 = @func_6544() /* ty=Tensor[(4, 3, 3), uint64] */;
  (%747,)
}

def @func_5380(%var_5352: Tensor[(1170), uint16]) -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float32], Tensor[(1170), uint16], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  %748 = @func_3196() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float32], Tensor[(4, 3, 3), float64]) */;
  %749 = cast(%var_5352, dtype="uint16") /* ty=Tensor[(1170), uint16] */;
  %750 = reshape(%749, newshape=[15, 13, 6]) /* ty=Tensor[(15, 13, 6), uint16] */;
  %751 = @func_3819(%750) /* ty=(Tensor[(15, 13, 6), bool], Tensor[(4, 3, 3), float32]) */;
  %752 = %748.2;
  %753 = %751.1;
  %754 = @func_2940() /* ty=Tensor[(4, 3, 3), float64] */;
  %755 = @func_1752() /* ty=Tensor[(4, 3, 3), float64] */;
  (%752, %753, %var_5352, %754, %755)
}

def @func_7967() -> (Tensor[(4, 3, 3), float64],) {
  %756 = @func_3518() /* ty=Tensor[(4, 3, 3), float64] */;
  (%756,)
}

def @func_15285() -> (Tensor[(4, 3, 3), float64],) {
  %757 = @func_3682() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(2366), int64], Tensor[(168), float32], Tensor[(4, 3, 3), float64]) */;
  %758 = %757.0;
  (%758,)
}

def @func_2727(%var_2713: Tensor[(4, 3, 3), float64]) -> (Tensor[(6, 2, 14), float64], Tensor[(168), float32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  %759 = cast(meta[relay.Constant][32] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %760 = cast(meta[relay.Constant][32] /* ty=Tensor[(168), float32] */, dtype="int8") /* ty=Tensor[(168), int8] */;
  %761 = reshape(%759, newshape=[6, 2, 14]) /* ty=Tensor[(6, 2, 14), float32] */;
  %762 = reshape(%760, newshape=[6, 2, 14]) /* ty=Tensor[(6, 2, 14), int8] */;
  %763 = @func_162(%761, %762) /* ty=(Tensor[(6, 2, 14), float32], Tensor[(6, 2, 14), float64], Tensor[(6, 2, 14), float64]) */;
  %764 = @func_2061() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %765 = @func_2061() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %766 = %765.0;
  %767 = cast(%var_2713, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
  %768 = shape_of(%766, dtype="int32") /* ty=Tensor[(3), int32] */;
  %769 = cast(%766, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
  %770 = dyn.reshape(%767, %768, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %771 = %763.2;
  %772 = %764.0;
  %773 = floor_divide(%769, %770) /* ty=Tensor[(4, 3, 3), float64] */;
  (%771, meta[relay.Constant][32] /* ty=Tensor[(168), float32] */, %772, %773)
}

def @func_3956(%var_3894: Tensor[(2366), int64], %var_3895: Tensor[(168), float32]) -> (Tensor[(4, 3, 3), float64], Tensor[(2366), int8], Tensor[(6, 2, 14), int64], Tensor[(4, 3, 3), float64]) {
  %774 = @func_2778() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %775 = cast(meta[relay.Constant][33] /* ty=Tensor[(2366), int64] */, dtype="int8") /* ty=Tensor[(2366), int8] */;
  %776 = shape_of(%var_3894, dtype="int32") /* ty=Tensor[(1), int32] */;
  %777 = cast(%var_3894, dtype="int8") /* ty=Tensor[(2366), int8] */;
  %778 = dyn.reshape(%775, %776, newshape=[]) /* ty=Tensor[(?), int8] */;
  %779 = cast(%var_3894, dtype="int64") /* ty=Tensor[(2366), int64] */;
  %780 = cast(%var_3895, dtype="float32") /* ty=Tensor[(168), float32] */;
  %781 = reshape(%779, newshape=[13, 13, 14]) /* ty=Tensor[(13, 13, 14), int64] */;
  %782 = reshape(%780, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %783 = @func_440(%781, %782) /* ty=(Tensor[(13, 13, 14), int64], Tensor[(6, 2, 14), float64], Tensor[(168), float32], Tensor[(6, 2, 14), float64], Tensor[(6, 2, 14), float32], Tensor[(6, 2, 14), float64]) */;
  %784 = %783.3;
  %785 = cast(%var_3895, dtype="int64") /* ty=Tensor[(168), int64] */;
  %786 = shape_of(%784, dtype="int32") /* ty=Tensor[(3), int32] */;
  %787 = cast(%784, dtype="int64") /* ty=Tensor[(6, 2, 14), int64] */;
  %788 = dyn.reshape(%785, %786, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %789 = @func_3218() /* ty=Tensor[(4, 3, 3), float64] */;
  %790 = cast(%789, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
  %791 = %774.0;
  %792 = right_shift(%777, %778) /* ty=Tensor[(2366), int8] */;
  %793 = bitwise_or(%787, %788) /* ty=Tensor[(6, 2, 14), int64] */;
  %794 = asin(%790) /* ty=Tensor[(4, 3, 3), float64] */;
  (%791, %792, %793, %794)
}

def @func_12374(%var_12321: Tensor[(12, 13, 12), float64]) -> (Tensor[(9, 12, 6), int16], Tensor[(6, 5, 9), bool], Tensor[(12, 13, 12), float32], Tensor[(12, 13, 12), float64]) {
  %795 = @func_6670() /* ty=(Tensor[(6, 5, 9), bool],) */;
  %796 = cast(%var_12321, dtype="float64") /* ty=Tensor[(12, 13, 12), float64] */;
  %797 = tan(%796) /* ty=Tensor[(12, 13, 12), float64] */;
  %798 = cast(%var_12321, dtype="float64") /* ty=Tensor[(12, 13, 12), float64] */;
  %799 = shape_of(%797, dtype="int32") /* ty=Tensor[(3), int32] */;
  %800 = cast(%797, dtype="float64") /* ty=Tensor[(12, 13, 12), float64] */;
  %801 = dyn.reshape(%798, %799, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %802 = maximum(%800, %801) /* ty=Tensor[(12, 13, 12), float64] */;
  %803 = cast(%802, dtype="float32") /* ty=Tensor[(12, 13, 12), float32] */;
  %804 = log(%803) /* ty=Tensor[(12, 13, 12), float32] */;
  %805 = cast(meta[relay.Constant][34] /* ty=Tensor[(12, 13, 12), float32] */, dtype="float32") /* ty=Tensor[(12, 13, 12), float32] */;
  %806 = shape_of(%804, dtype="int32") /* ty=Tensor[(3), int32] */;
  %807 = cast(%804, dtype="float32") /* ty=Tensor[(12, 13, 12), float32] */;
  %808 = dyn.reshape(%805, %806, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %809 = cast(%804, dtype="float64") /* ty=Tensor[(12, 13, 12), float64] */;
  %810 = @func_7888() /* ty=Tensor[(9, 12, 6), int16] */;
  %811 = %795.0;
  %812 = subtract(%807, %808) /* ty=Tensor[(12, 13, 12), float32] */;
  %813 = log2(%809) /* ty=Tensor[(12, 13, 12), float64] */;
  (%810, %811, %812, %813)
}

def @func_7564() -> (Tensor[(4, 3, 3), float64],) {
  %814 = @func_3682() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(2366), int64], Tensor[(168), float32], Tensor[(4, 3, 3), float64]) */;
  %815 = %814.6;
  (%815,)
}

def @func_8487() -> Tensor[(4, 3, 3), uint64] {
  @func_6544() /* ty=Tensor[(4, 3, 3), uint64] */
}

def @func_15145(%var_15059: Tensor[(2366), int64], %var_15060: Tensor[(168, 1), float32], %var_15094: Tensor[(168, 2366), bool]) -> (Tensor[(4, 3, 3), float64], Tensor[(6, 2, 14), int64], Tensor[(4, 3, 3), float32], Tensor[(4, 3, 3), float64], Tensor[(168, 2366), float64], Tensor[(4, 3, 3), float64]) {
  %816 = @func_5683() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %817 = cast(%var_15059, dtype="int64") /* ty=Tensor[(2366), int64] */;
  %818 = cast(%var_15060, dtype="float32") /* ty=Tensor[(168, 1), float32] */;
  %819 = reshape(%817, newshape=[2366]) /* ty=Tensor[(2366), int64] */;
  %820 = reshape(%818, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %821 = @func_3956(%819, %820) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(2366), int8], Tensor[(6, 2, 14), int64], Tensor[(4, 3, 3), float64]) */;
  %822 = %821.2;
  %823 = cast(%822, dtype="float32") /* ty=Tensor[(6, 2, 14), float32] */;
  %824 = reshape(%823, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %825 = @func_1828(%824) /* ty=(Tensor[(4, 3, 3), float32], Tensor[(6, 2, 14), float64], Tensor[(2366), int64], Tensor[(168), float32], Tensor[(6, 2, 14), float32]) */;
  %826 = cast(%var_15059, dtype="float32") /* ty=Tensor[(2366), float32] */;
  %827 = reshape(%826, newshape=[169, 14]) /* ty=Tensor[(169, 14), float32] */;
  %828 = @func_10638(%827) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(169, 14), float32], Tensor[(4, 3, 3), float64], Tensor[(6, 2, 14), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %829 = cast(%var_15060, dtype="float32") /* ty=Tensor[(168, 1), float32] */;
  %830 = log(%829) /* ty=Tensor[(168, 1), float32] */;
  %831 = cast(%var_15059, dtype="bool") /* ty=Tensor[(2366), bool] */;
  %832 = cast(%830, dtype="bool") /* ty=Tensor[(168, 1), bool] */;
  %833 = less(%831, %832) /* ty=Tensor[(168, 2366), bool] */;
  %834 = cast(%var_15094, dtype="bool") /* ty=Tensor[(168, 2366), bool] */;
  %835 = shape_of(%833, dtype="int32") /* ty=Tensor[(2), int32] */;
  %836 = cast(%833, dtype="bool") /* ty=Tensor[(168, 2366), bool] */;
  %837 = dyn.reshape(%834, %835, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %838 = logical_or(%836, %837) /* ty=Tensor[(168, 2366), bool] */;
  %839 = cast(%838, dtype="bool") /* ty=Tensor[(168, 2366), bool] */;
  %840 = cast(%830, dtype="bool") /* ty=Tensor[(168, 1), bool] */;
  %841 = equal(%839, %840) /* ty=Tensor[(168, 2366), bool] */;
  %842 = cast(%830, dtype="int8") /* ty=Tensor[(168, 1), int8] */;
  %843 = cast(%841, dtype="int8") /* ty=Tensor[(168, 2366), int8] */;
  %844 = logical_xor(%842, %843) /* ty=Tensor[(168, 2366), int8] */;
  %845 = cast(%844, dtype="float64") /* ty=Tensor[(168, 2366), float64] */;
  %846 = %816.0;
  %847 = %825.0;
  %848 = %828.1;
  %849 = rsqrt(%845) /* ty=Tensor[(168, 2366), float64] */;
  %850 = @func_4335() /* ty=Tensor[(4, 3, 3), float64] */;
  (%846, %822, %847, %848, %849, %850)
}

def @func_7281(%var_7242: float64, %var_7243: Tensor[(12, 7, 4), float64]) -> (Tensor[(12, 7, 4), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(2366), int64], Tensor[(168), float32]) {
  %851 = cast(%var_7242, dtype="float64") /* ty=float64 */;
  %852 = cast(%var_7243, dtype="float64") /* ty=Tensor[(12, 7, 4), float64] */;
  %853 = @func_5683() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %854 = cast(meta[relay.Constant][35] /* ty=Tensor[(2366), int64] */, dtype="int64") /* ty=Tensor[(2366), int64] */;
  %855 = cast(meta[relay.Constant][36] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %856 = reshape(%854, newshape=[2366]) /* ty=Tensor[(2366), int64] */;
  %857 = reshape(%855, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %858 = @func_3956(%856, %857) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(2366), int8], Tensor[(6, 2, 14), int64], Tensor[(4, 3, 3), float64]) */;
  %859 = floor_divide(%851, %852) /* ty=Tensor[(12, 7, 4), float64] */;
  %860 = %853.0;
  %861 = %858.0;
  (%859, %860, %861, meta[relay.Constant][35] /* ty=Tensor[(2366), int64] */, meta[relay.Constant][36] /* ty=Tensor[(168), float32] */)
}

def @func_7043(%var_6993: Tensor[(280), float32]) -> (Tensor[(4, 3, 3), float64], Tensor[(7, 10, 4), bool], Tensor[(280), float32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  %862 = @func_1870() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %863 = cast(%var_6993, dtype="float32") /* ty=Tensor[(280), float32] */;
  %864 = cast(%var_6993, dtype="float32") /* ty=Tensor[(280), float32] */;
  %865 = reshape(%863, newshape=[7, 10, 4]) /* ty=Tensor[(7, 10, 4), float32] */;
  %866 = reshape(%864, newshape=[7, 10, 4]) /* ty=Tensor[(7, 10, 4), float32] */;
  %867 = @func_3682() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(2366), int64], Tensor[(168), float32], Tensor[(4, 3, 3), float64]) */;
  %868 = @func_3266() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %869 = @func_3266() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %870 = @func_6513() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %871 = @func_3488() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %872 = %862.0;
  %873 = @func_6793(%865, %866) /* ty=Tensor[(7, 10, 4), bool] */;
  %874 = %867.1;
  %875 = %868.0;
  %876 = %869.0;
  %877 = %870.0;
  %878 = @func_2940() /* ty=Tensor[(4, 3, 3), float64] */;
  %879 = %871.0;
  (%872, %873, %var_6993, %874, %875, %876, %877, %878, %879)
}

def @func_8269() -> (Tensor[(9, 12, 6), int16], Tensor[(4, 3, 3), float64]) {
  %880 = @func_7373() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %881 = @func_7888() /* ty=Tensor[(9, 12, 6), int16] */;
  %882 = %880.0;
  (%881, %882)
}

def @func_5577(%var_5572: Tensor[(15, 13, 7), float64], %var_5573: Tensor[(15, 13, 7), float64]) -> (Tensor[(15, 13, 7), bool],) {
  %883 = cast(%var_5573, dtype="bool") /* ty=Tensor[(15, 13, 7), bool] */;
  %884 = shape_of(%var_5572, dtype="int32") /* ty=Tensor[(3), int32] */;
  %885 = cast(%var_5572, dtype="bool") /* ty=Tensor[(15, 13, 7), bool] */;
  %886 = dyn.reshape(%883, %884, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %887 = greater_equal(%885, %886) /* ty=Tensor[(15, 13, 7), bool] */;
  (%887,)
}

def @func_6883() -> (Tensor[(4, 3, 3), float64], Tensor[(15, 13, 7), int8]) {
  %888 = cast(meta[relay.Constant][37] /* ty=Tensor[(1365, 1), float64] */, dtype="float64") /* ty=Tensor[(1365, 1), float64] */;
  %889 = cast(meta[relay.Constant][37] /* ty=Tensor[(1365, 1), float64] */, dtype="float64") /* ty=Tensor[(1365, 1), float64] */;
  %890 = reshape(%888, newshape=[15, 13, 7]) /* ty=Tensor[(15, 13, 7), float64] */;
  %891 = reshape(%889, newshape=[15, 13, 7]) /* ty=Tensor[(15, 13, 7), float64] */;
  %892 = @func_5577(%890, %891) /* ty=(Tensor[(15, 13, 7), bool],) */;
  %893 = %892.0;
  %894 = cast(meta[relay.Constant][37] /* ty=Tensor[(1365, 1), float64] */, dtype="int8") /* ty=Tensor[(1365, 1), int8] */;
  %895 = shape_of(%893, dtype="int32") /* ty=Tensor[(3), int32] */;
  %896 = cast(%893, dtype="int8") /* ty=Tensor[(15, 13, 7), int8] */;
  %897 = dyn.reshape(%894, %895, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %898 = @func_2828() /* ty=Tensor[(4, 3, 3), float64] */;
  %899 = bitwise_and(%896, %897) /* ty=Tensor[(15, 13, 7), int8] */;
  (%898, %899)
}

def @func_5544() -> (Tensor[(4, 3, 3), float64],) {
  %900 = @func_3451() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %901 = %900.0;
  (%901,)
}

def @func_6708() -> Tensor[(4, 3, 3), float64] {
  @func_4408() /* ty=Tensor[(4, 3, 3), float64] */
}

def @func_7767() -> Tensor[(4, 3, 3), float64] {
  %902 = @func_5544() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %902.0
}

def @func_13415() -> Tensor[(4, 3, 3), float64] {
  %903 = @func_7955() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %903.0
}

def @func_14548(%var_14521: float32) -> Tensor[(16, 11, 4), float64] {
  %904 = cast(%var_14521, dtype="float32") /* ty=float32 */;
  %905 = cast(meta[relay.Constant][38] /* ty=Tensor[(16, 11, 4), float32] */, dtype="float32") /* ty=Tensor[(16, 11, 4), float32] */;
  %906 = mod(%904, %905) /* ty=Tensor[(16, 11, 4), float32] */;
  %907 = cast(%906, dtype="float64") /* ty=Tensor[(16, 11, 4), float64] */;
  rsqrt(%907) /* ty=Tensor[(16, 11, 4), float64] */
}

def @func_5683() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  %908 = @func_3451() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %909 = @func_4408() /* ty=Tensor[(4, 3, 3), float64] */;
  %910 = %908.0;
  (%909, %910)
}

def @func_2658() -> Tensor[(4, 3, 3), float32] {
  %911 = @func_1752() /* ty=Tensor[(4, 3, 3), float64] */;
  %912 = cast(%911, dtype="float32") /* ty=Tensor[(4, 3, 3), float32] */;
  sinh(%912) /* ty=Tensor[(4, 3, 3), float32] */
}

def @func_4335() -> Tensor[(4, 3, 3), float64] {
  %913 = @func_4289() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %913.0
}

def @func_8295() -> Tensor[(4, 3, 3), float64] {
  %914 = @func_2994() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %914.1
}

def @func_12788() -> (Tensor[(4, 3, 3), float64],) {
  %915 = @func_2828() /* ty=Tensor[(4, 3, 3), float64] */;
  (%915,)
}

def @func_11462() -> (Tensor[(4, 3, 3), uint64],) {
  %916 = @func_6544() /* ty=Tensor[(4, 3, 3), uint64] */;
  (%916,)
}

def @func_14047() -> (Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  %917 = @func_8671() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %918 = @func_8954() /* ty=(Tensor[(168), float32], Tensor[(4, 3, 3), float64]) */;
  %919 = @func_9923() /* ty=Tensor[(4, 3, 3), bool] */;
  %920 = %917.0;
  %921 = %918.1;
  (%919, %920, %921)
}

def @func_15927() -> (Tensor[(4, 3, 3), float64],) {
  %922 = @func_9251() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %923 = %922.0;
  (%923,)
}

def @func_3800() -> Tensor[(4, 3, 3), float64] {
  %924 = @func_3451() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %924.0
}

def @func_9058() -> (Tensor[(4, 3, 3), uint64],) {
  %925 = @func_6172() /* ty=(Tensor[(4, 3, 3), uint64],) */;
  %926 = %925.0;
  (%926,)
}

def @func_11066() -> (Tensor[(4, 3, 3), float64],) {
  %927 = @func_8269() /* ty=(Tensor[(9, 12, 6), int16], Tensor[(4, 3, 3), float64]) */;
  %928 = %927.1;
  (%928,)
}

def @func_6926(%var_6921: Tensor[(6, 5, 9), bool]) -> Tensor[(6, 5, 9), int32] {
  %929 = @func_6670() /* ty=(Tensor[(6, 5, 9), bool],) */;
  %930 = %929.0;
  %931 = cast(%var_6921, dtype="int32") /* ty=Tensor[(6, 5, 9), int32] */;
  %932 = shape_of(%930, dtype="int32") /* ty=Tensor[(3), int32] */;
  %933 = cast(%930, dtype="int32") /* ty=Tensor[(6, 5, 9), int32] */;
  %934 = dyn.reshape(%931, %932, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  maximum(%933, %934) /* ty=Tensor[(6, 5, 9), int32] */
}

def @func_1870() -> (Tensor[(4, 3, 3), float64],) {
  %935 = @func_1752() /* ty=Tensor[(4, 3, 3), float64] */;
  (%935,)
}

def @func_12601() -> (Tensor[(4, 3, 3), bool],) {
  %936 = @func_9993() /* ty=(Tensor[(4, 3, 3), bool],) */;
  %937 = %936.0;
  (%937,)
}

def @func_9018() -> (Tensor[(6, 9, 8), float64], Tensor[(6, 9, 8), bool]) {
  %938 = cast(meta[relay.Constant][39] /* ty=Tensor[(6, 9, 8), float64] */, dtype="float64") /* ty=Tensor[(6, 9, 8), float64] */;
  %939 = cast(meta[relay.Constant][40] /* ty=Tensor[(6, 9, 8), float64] */, dtype="bool") /* ty=Tensor[(6, 9, 8), bool] */;
  %940 = shape_of(meta[relay.Constant][39] /* ty=Tensor[(6, 9, 8), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %941 = cast(meta[relay.Constant][39] /* ty=Tensor[(6, 9, 8), float64] */, dtype="bool") /* ty=Tensor[(6, 9, 8), bool] */;
  %942 = dyn.reshape(%939, %940, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %943 = sigmoid(%938) /* ty=Tensor[(6, 9, 8), float64] */;
  %944 = less(%941, %942) /* ty=Tensor[(6, 9, 8), bool] */;
  (%943, %944)
}

def @func_8954() -> (Tensor[(168), float32], Tensor[(4, 3, 3), float64]) {
  %945 = @func_6029() /* ty=(Tensor[(7, 4, 6), float64], Tensor[(168), float32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), bool]) */;
  %946 = @func_8171() /* ty=Tensor[(168), float32] */;
  %947 = %945.2;
  (%946, %947)
}

def @func_14866() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  %948 = @func_7564() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %949 = @func_11066() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %950 = %948.0;
  %951 = %949.0;
  (%950, %951)
}

def @func_2778() -> (Tensor[(4, 3, 3), float64],) {
  %952 = @func_1870() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %953 = %952.0;
  (%953,)
}

def @func_8469(%var_8459: Tensor[(2366), int64]) -> (Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), uint64], Tensor[(2366), int64], Tensor[(2366), int64]) {
  %954 = @func_2581() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %955 = %954.0;
  %956 = @func_2658() /* ty=Tensor[(4, 3, 3), float32] */;
  %957 = cast(%956, dtype="bool") /* ty=Tensor[(4, 3, 3), bool] */;
  %958 = shape_of(%955, dtype="int32") /* ty=Tensor[(3), int32] */;
  %959 = cast(%955, dtype="bool") /* ty=Tensor[(4, 3, 3), bool] */;
  %960 = dyn.reshape(%957, %958, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %961 = @func_6637() /* ty=(Tensor[(4, 3, 3), float32],) */;
  %962 = %961.0;
  %963 = cast(%955, dtype="bool") /* ty=Tensor[(4, 3, 3), bool] */;
  %964 = shape_of(%962, dtype="int32") /* ty=Tensor[(3), int32] */;
  %965 = cast(%962, dtype="bool") /* ty=Tensor[(4, 3, 3), bool] */;
  %966 = dyn.reshape(%963, %964, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %967 = @func_6172() /* ty=(Tensor[(4, 3, 3), uint64],) */;
  %968 = cast(%var_8459, dtype="int64") /* ty=Tensor[(2366), int64] */;
  %969 = reshape(%968, newshape=[2366]) /* ty=Tensor[(2366), int64] */;
  %970 = @func_4946(%969) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(2366), int64], Tensor[(4, 3, 3), float64]) */;
  %971 = less(%959, %960) /* ty=Tensor[(4, 3, 3), bool] */;
  %972 = not_equal(%965, %966) /* ty=Tensor[(4, 3, 3), bool] */;
  %973 = %967.0;
  %974 = %970.2;
  (%971, %972, %973, %974, %var_8459)
}

def @func_11812() -> (Tensor[(6, 5, 9), float32],) {
  %975 = @func_6670() /* ty=(Tensor[(6, 5, 9), bool],) */;
  %976 = %975.0;
  %977 = cast(%976, dtype="float32") /* ty=Tensor[(6, 5, 9), float32] */;
  %978 = asin(%977) /* ty=Tensor[(6, 5, 9), float32] */;
  (%978,)
}

def @func_6050() -> (Tensor[(4, 3, 3), float64],) {
  %979 = @func_3073() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %980 = %979.0;
  (%980,)
}

def @func_8771() -> (Tensor[(4, 3, 3), float64],) {
  %981 = @func_2846() /* ty=Tensor[(4, 3, 3), float64] */;
  (%981,)
}

def @func_11537() -> Tensor[(4, 3, 3), float64] {
  %982 = @func_4550() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %982.0
}

def @func_440(%var_410: Tensor[(13, 13, 14), int64], %var_416: Tensor[(168), float32]) -> (Tensor[(13, 13, 14), int64], Tensor[(6, 2, 14), float64], Tensor[(168), float32], Tensor[(6, 2, 14), float64], Tensor[(6, 2, 14), float32], Tensor[(6, 2, 14), float64]) {
  %983 = cast(9 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %984 = cast(%var_410, dtype="int64") /* ty=Tensor[(13, 13, 14), int64] */;
  %985 = cast(%var_416, dtype="float32") /* ty=Tensor[(168), float32] */;
  %986 = cast(%var_416, dtype="int8") /* ty=Tensor[(168), int8] */;
  %987 = reshape(%985, newshape=[6, 2, 14]) /* ty=Tensor[(6, 2, 14), float32] */;
  %988 = reshape(%986, newshape=[6, 2, 14]) /* ty=Tensor[(6, 2, 14), int8] */;
  %989 = @func_162(%987, %988) /* ty=(Tensor[(6, 2, 14), float32], Tensor[(6, 2, 14), float64], Tensor[(6, 2, 14), float64]) */;
  %990 = cast(%var_416, dtype="float32") /* ty=Tensor[(168), float32] */;
  %991 = %989.2;
  %992 = cast(%991, dtype="int8") /* ty=Tensor[(6, 2, 14), int8] */;
  %993 = reshape(%990, newshape=[6, 2, 14]) /* ty=Tensor[(6, 2, 14), float32] */;
  %994 = reshape(%992, newshape=[6, 2, 14]) /* ty=Tensor[(6, 2, 14), int8] */;
  %995 = @func_162(%993, %994) /* ty=(Tensor[(6, 2, 14), float32], Tensor[(6, 2, 14), float64], Tensor[(6, 2, 14), float64]) */;
  %996 = %995.1;
  %997 = cast(%996, dtype="float32") /* ty=Tensor[(6, 2, 14), float32] */;
  %998 = cast(%996, dtype="int8") /* ty=Tensor[(6, 2, 14), int8] */;
  %999 = reshape(%997, newshape=[6, 2, 14]) /* ty=Tensor[(6, 2, 14), float32] */;
  %1000 = reshape(%998, newshape=[6, 2, 14]) /* ty=Tensor[(6, 2, 14), int8] */;
  %1001 = @func_162(%999, %1000) /* ty=(Tensor[(6, 2, 14), float32], Tensor[(6, 2, 14), float64], Tensor[(6, 2, 14), float64]) */;
  %1002 = cast(%996, dtype="float32") /* ty=Tensor[(6, 2, 14), float32] */;
  %1003 = cast(%991, dtype="int8") /* ty=Tensor[(6, 2, 14), int8] */;
  %1004 = reshape(%1002, newshape=[6, 2, 14]) /* ty=Tensor[(6, 2, 14), float32] */;
  %1005 = reshape(%1003, newshape=[6, 2, 14]) /* ty=Tensor[(6, 2, 14), int8] */;
  %1006 = @func_162(%1004, %1005) /* ty=(Tensor[(6, 2, 14), float32], Tensor[(6, 2, 14), float64], Tensor[(6, 2, 14), float64]) */;
  %1007 = right_shift(%983, %984) /* ty=Tensor[(13, 13, 14), int64] */;
  %1008 = %1001.0;
  %1009 = %1006.1;
  (%1007, %991, %var_416, %996, %1008, %1009)
}

def @func_2386() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(168), float32], Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), float32], Tensor[(4, 3, 3), bool]) {
  %1010 = @func_1870() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %1011 = @func_2061() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %1012 = cast(meta[relay.Constant][41] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %1013 = %1011.0;
  %1014 = cast(%1013, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
  %1015 = reshape(%1012, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %1016 = reshape(%1014, newshape=[4, 3, 3]) /* ty=Tensor[(4, 3, 3), float64] */;
  %1017 = @func_1983(%1015, %1016) /* ty=(Tensor[(6, 2, 14), float32], Tensor[(168), float32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %1018 = %1017.2;
  %1019 = cast(%1018, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
  %1020 = reshape(%1019, newshape=[4, 3, 3]) /* ty=Tensor[(4, 3, 3), float64] */;
  %1021 = @func_2249(%1020) /* ty=(Tensor[(4, 3, 3), bool], Tensor[(2366), int64]) */;
  %1022 = cast(%1018, dtype="float32") /* ty=Tensor[(4, 3, 3), float32] */;
  %1023 = cast(%1018, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
  %1024 = reshape(%1023, newshape=[4, 3, 3]) /* ty=Tensor[(4, 3, 3), float64] */;
  %1025 = @func_2249(%1024) /* ty=(Tensor[(4, 3, 3), bool], Tensor[(2366), int64]) */;
  %1026 = %1010.0;
  %1027 = %1021.0;
  %1028 = exp(%1022) /* ty=Tensor[(4, 3, 3), float32] */;
  %1029 = %1025.0;
  (%1026, %1013, meta[relay.Constant][41] /* ty=Tensor[(168), float32] */, %1027, %1028, %1029)
}

def @func_7174(%var_7151: Tensor[(13, 182), int64]) -> (Tensor[(4, 3, 3), uint64], Tensor[(4, 3, 3), float64], Tensor[(13, 182), int64]) {
  %1030 = @func_5973() /* ty=(Tensor[(4, 3, 3), uint64], Tensor[(4, 3, 3), float64]) */;
  %1031 = cast(%var_7151, dtype="int64") /* ty=Tensor[(13, 182), int64] */;
  %1032 = reshape(%1031, newshape=[2366]) /* ty=Tensor[(2366), int64] */;
  %1033 = @func_2091(%1032) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(168), float32], Tensor[(4, 3, 3), float64], Tensor[(6, 2, 14), float64], Tensor[(2366), int64]) */;
  %1034 = %1030.0;
  %1035 = %1033.0;
  (%1034, %1035, %var_7151)
}

def @func_12013(%var_11938: Tensor[(3, 56), float32]) -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(3, 56), float32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), uint64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), uint64], Tensor[(2366, 1), int64], Tensor[(4, 3, 3), float64]) {
  %1036 = @func_5667() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %1037 = cast(%var_11938, dtype="float32") /* ty=Tensor[(3, 56), float32] */;
  %1038 = reshape(%1037, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %1039 = @func_5308(%1038) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(168), float32], Tensor[(7, 4, 6), float64]) */;
  %1040 = @func_11450() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %1041 = @func_9342() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %1042 = @func_5185() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %1043 = @func_7373() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %1044 = @func_3582() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %1045 = cast(meta[relay.Constant][42] /* ty=Tensor[(2366, 1), int64] */, dtype="int64") /* ty=Tensor[(2366, 1), int64] */;
  %1046 = reshape(%1045, newshape=[13, 182]) /* ty=Tensor[(13, 182), int64] */;
  %1047 = @func_7174(%1046) /* ty=(Tensor[(4, 3, 3), uint64], Tensor[(4, 3, 3), float64], Tensor[(13, 182), int64]) */;
  %1048 = @func_6982() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %1049 = %1036.0;
  %1050 = @func_11537() /* ty=Tensor[(4, 3, 3), float64] */;
  %1051 = @func_8295() /* ty=Tensor[(4, 3, 3), float64] */;
  %1052 = %1039.1;
  %1053 = %1040.0;
  %1054 = @func_3975() /* ty=Tensor[(4, 3, 3), uint64] */;
  %1055 = %1041.1;
  %1056 = %1042.0;
  %1057 = %1043.0;
  %1058 = %1044.0;
  %1059 = %1047.0;
  %1060 = %1048.0;
  (%1049, %1050, %1051, %1052, %var_11938, %1053, %1054, %1055, %1056, %1057, %1058, %1059, meta[relay.Constant][42] /* ty=Tensor[(2366, 1), int64] */, %1060)
}

def @func_12281() -> Tensor[(4, 3, 3), float64] {
  %1061 = @func_9342() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %1061.0
}

def @func_12537() -> (Tensor[(4, 3, 3), float64],) {
  %1062 = @func_10889() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), uint64]) */;
  %1063 = %1062.0;
  (%1063,)
}

def @func_4511() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  %1064 = @func_3800() /* ty=Tensor[(4, 3, 3), float64] */;
  %1065 = @func_4335() /* ty=Tensor[(4, 3, 3), float64] */;
  (%1064, %1065)
}

def @func_14839(%var_14815: Tensor[(15, 11, 14), float32], %var_14821: Tensor[(168), float32]) -> (Tensor[(15, 11, 14), float32], Tensor[(4, 3, 3), uint64], Tensor[(168), float32], Tensor[(4, 3, 3), float64]) {
  %1066 = cast(%var_14815, dtype="float32") /* ty=Tensor[(15, 11, 14), float32] */;
  %1067 = shape_of(meta[relay.Constant][43] /* ty=Tensor[(15, 11, 14), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1068 = cast(meta[relay.Constant][43] /* ty=Tensor[(15, 11, 14), float32] */, dtype="float32") /* ty=Tensor[(15, 11, 14), float32] */;
  %1069 = dyn.reshape(%1066, %1067, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1070 = cast(%var_14821, dtype="float32") /* ty=Tensor[(168), float32] */;
  %1071 = reshape(%1070, newshape=[3, 56]) /* ty=Tensor[(3, 56), float32] */;
  %1072 = @func_12013(%1071) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(3, 56), float32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), uint64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), uint64], Tensor[(2366, 1), int64], Tensor[(4, 3, 3), float64]) */;
  %1073 = @func_13548() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %1074 = power(%1068, %1069) /* ty=Tensor[(15, 11, 14), float32] */;
  %1075 = %1072.11;
  %1076 = %1073.0;
  (%1074, %1075, %var_14821, %1076)
}

def @func_10719() -> (Tensor[(4, 3, 3), float64],) {
  %1077 = @func_7967() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %1078 = %1077.0;
  (%1078,)
}

def @func_12830() -> (Tensor[(4, 3, 3), float64],) {
  %1079 = @func_11733() /* ty=(Tensor[(4, 3, 3), uint64], Tensor[(7, 4, 6), uint32], Tensor[(42, 4), uint32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %1080 = %1079.3;
  (%1080,)
}

def @func_3451() -> (Tensor[(4, 3, 3), float64],) {
  %1081 = @func_1870() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %1082 = %1081.0;
  (%1082,)
}

def @func_15559() -> (Tensor[(4, 3, 3), float64], Tensor[(168), float32]) {
  %1083 = @func_15285() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %1084 = @func_8954() /* ty=(Tensor[(168), float32], Tensor[(4, 3, 3), float64]) */;
  %1085 = %1083.0;
  %1086 = %1084.0;
  (%1085, %1086)
}

def @func_3819(%var_3810: Tensor[(15, 13, 6), uint16]) -> (Tensor[(15, 13, 6), bool], Tensor[(4, 3, 3), float32]) {
  %1087 = cast(%var_3810, dtype="bool") /* ty=Tensor[(15, 13, 6), bool] */;
  %1088 = shape_of(meta[relay.Constant][44] /* ty=Tensor[(15, 13, 6), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1089 = cast(meta[relay.Constant][44] /* ty=Tensor[(15, 13, 6), uint16] */, dtype="bool") /* ty=Tensor[(15, 13, 6), bool] */;
  %1090 = dyn.reshape(%1087, %1088, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1091 = less(%1089, %1090) /* ty=Tensor[(15, 13, 6), bool] */;
  %1092 = @func_2658() /* ty=Tensor[(4, 3, 3), float32] */;
  (%1091, %1092)
}

def @func_14139() -> (Tensor[(168), float32], Tensor[(4, 3, 3), float64]) {
  %1093 = @func_4289() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %1094 = @func_6247() /* ty=Tensor[(168), float32] */;
  %1095 = %1093.0;
  (%1094, %1095)
}

def @func_12837() -> (Tensor[(4, 3, 3), float64],) {
  %1096 = @func_12537() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %1097 = %1096.0;
  (%1097,)
}

def @func_9815(%var_9810: Tensor[(270), bool]) -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(270), bool]) {
  %1098 = @func_8771() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %1099 = cast(%var_9810, dtype="bool") /* ty=Tensor[(270), bool] */;
  %1100 = reshape(%1099, newshape=[270, 1]) /* ty=Tensor[(270, 1), bool] */;
  %1101 = @func_9391(%1100) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(6, 5, 9), int32], Tensor[(270, 1), bool]) */;
  %1102 = %1098.0;
  %1103 = %1101.1;
  (%1102, %1103, %var_9810)
}

def @func_15320() -> (Tensor[(4, 3, 3), float64],) {
  %1104 = @func_14463() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %1105 = %1104.0;
  (%1105,)
}

def @func_5667() -> (Tensor[(4, 3, 3), float64],) {
  %1106 = @func_3582() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %1107 = %1106.0;
  (%1107,)
}

def @func_10868() -> (Tensor[(4, 3, 3), float64], Tensor[(6, 2, 14), bool], Tensor[(4, 3, 3), bool]) {
  %1108 = @func_9508() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), uint64]) */;
  %1109 = @func_6314() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(6, 2, 14), bool]) */;
  %1110 = @func_4395() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), bool]) */;
  %1111 = %1108.0;
  %1112 = %1109.2;
  %1113 = %1110.1;
  (%1111, %1112, %1113)
}

def @func_7524() -> (Tensor[(4, 3, 3), uint64], Tensor[(4, 3, 3), float64]) {
  %1114 = @func_6513() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %1115 = @func_6544() /* ty=Tensor[(4, 3, 3), uint64] */;
  %1116 = %1114.0;
  (%1115, %1116)
}

def @func_11107() -> Tensor[(4, 3, 3), float64] {
  %1117 = @func_3196() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float32], Tensor[(4, 3, 3), float64]) */;
  %1117.2
}

def @func_11407() -> (Tensor[(4, 3, 3), float32],) {
  %1118 = @func_6637() /* ty=(Tensor[(4, 3, 3), float32],) */;
  %1119 = %1118.0;
  (%1119,)
}

def @func_6247() -> Tensor[(168), float32] {
  %1120 = @func_5518() /* ty=(Tensor[(4, 3, 3), uint64], Tensor[(168), float32], Tensor[(168), float32]) */;
  %1120.1
}

def @func_11553() -> Tensor[(4, 3, 3), float64] {
  %1121 = @func_9342() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %1121.0
}

def @func_12983(%var_12966: Tensor[(6, 2, 14), bool]) -> (Tensor[(6, 2, 14), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  %1122 = @func_6314() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(6, 2, 14), bool]) */;
  %1123 = %1122.2;
  %1124 = cast(%var_12966, dtype="float64") /* ty=Tensor[(6, 2, 14), float64] */;
  %1125 = shape_of(%1123, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1126 = cast(%1123, dtype="float64") /* ty=Tensor[(6, 2, 14), float64] */;
  %1127 = dyn.reshape(%1124, %1125, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1128 = add(%1126, %1127) /* ty=Tensor[(6, 2, 14), float64] */;
  %1129 = @func_12281() /* ty=Tensor[(4, 3, 3), float64] */;
  %1130 = @func_9400() /* ty=Tensor[(4, 3, 3), float64] */;
  (%1128, %1129, %1130)
}

def @func_6332() -> Tensor[(9, 12, 6), int16] {
  %1131 = cast(meta[relay.Constant][46] /* ty=Tensor[(9, 12, 6), float64] */, dtype="float64") /* ty=Tensor[(9, 12, 6), float64] */;
  %1132 = shape_of(meta[relay.Constant][45] /* ty=Tensor[(9, 12, 6), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1133 = cast(meta[relay.Constant][45] /* ty=Tensor[(9, 12, 6), float64] */, dtype="float64") /* ty=Tensor[(9, 12, 6), float64] */;
  %1134 = dyn.reshape(%1131, %1132, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1135 = floor_divide(%1133, %1134) /* ty=Tensor[(9, 12, 6), float64] */;
  %1136 = cast(%1135, dtype="int16") /* ty=Tensor[(9, 12, 6), int16] */;
  %1137 = shape_of(meta[relay.Constant][45] /* ty=Tensor[(9, 12, 6), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1138 = cast(meta[relay.Constant][45] /* ty=Tensor[(9, 12, 6), float64] */, dtype="int16") /* ty=Tensor[(9, 12, 6), int16] */;
  %1139 = dyn.reshape(%1136, %1137, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  bitwise_and(%1138, %1139) /* ty=Tensor[(9, 12, 6), int16] */
}

def @func_6674() -> (Tensor[(4, 3, 3), float64],) {
  %1140 = @func_3451() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %1141 = %1140.0;
  (%1141,)
}

def @func_9850(%var_9833: Tensor[(11, 11, 15), float64], %var_9834: Tensor[(11, 11, 15), float64]) -> (Tensor[(11, 11, 15), bool], Tensor[(11, 11, 15), float64]) {
  %1142 = cast(%var_9834, dtype="bool") /* ty=Tensor[(11, 11, 15), bool] */;
  %1143 = shape_of(%var_9833, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1144 = cast(%var_9833, dtype="bool") /* ty=Tensor[(11, 11, 15), bool] */;
  %1145 = dyn.reshape(%1142, %1143, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1146 = cast(%var_9834, dtype="float64") /* ty=Tensor[(11, 11, 15), float64] */;
  %1147 = not_equal(%1144, %1145) /* ty=Tensor[(11, 11, 15), bool] */;
  %1148 = sigmoid(%1146) /* ty=Tensor[(11, 11, 15), float64] */;
  (%1147, %1148)
}

def @func_15740() -> (Tensor[(4, 3, 3), float64],) {
  %1149 = @func_12281() /* ty=Tensor[(4, 3, 3), float64] */;
  (%1149,)
}

def @func_13245() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(270), bool], Tensor[(6, 5, 9), float32]) {
  %1150 = @func_9176() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float32], Tensor[(4, 3, 3), uint64]) */;
  %1151 = @func_12837() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %1152 = cast(meta[relay.Constant][47] /* ty=Tensor[(270), bool] */, dtype="bool") /* ty=Tensor[(270), bool] */;
  %1153 = reshape(%1152, newshape=[6, 5, 9]) /* ty=Tensor[(6, 5, 9), bool] */;
  %1154 = @func_6926(%1153) /* ty=Tensor[(6, 5, 9), int32] */;
  %1155 = cast(%1154, dtype="float64") /* ty=Tensor[(6, 5, 9), float64] */;
  %1156 = erf(%1155) /* ty=Tensor[(6, 5, 9), float64] */;
  %1157 = cast(%1156, dtype="float32") /* ty=Tensor[(6, 5, 9), float32] */;
  %1158 = %1150.1;
  %1159 = %1151.0;
  %1160 = cos(%1157) /* ty=Tensor[(6, 5, 9), float32] */;
  (%1158, %1159, meta[relay.Constant][47] /* ty=Tensor[(270), bool] */, %1160)
}

def @func_15667() -> (Tensor[(4, 3, 3), float64], Tensor[(6, 5, 9), bool]) {
  %1161 = @func_6674() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %1162 = @func_6670() /* ty=(Tensor[(6, 5, 9), bool],) */;
  %1163 = %1161.0;
  %1164 = %1162.0;
  (%1163, %1164)
}

def @func_11636() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), uint64], Tensor[(168), float32], Tensor[(4, 3, 3), float64]) {
  %1165 = @func_5185() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %1166 = @func_9594() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), uint64]) */;
  %1167 = @func_2386() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(168), float32], Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), float32], Tensor[(4, 3, 3), bool]) */;
  %1168 = @func_3488() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %1169 = %1165.0;
  %1170 = %1166.1;
  %1171 = %1167.2;
  %1172 = %1168.0;
  (%1169, %1170, %1171, %1172)
}

def @func_2166(%var_2120: Tensor[(4, 3, 3), float64]) -> (Tensor[(4, 3, 3), int16], Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), float64], Tensor[(2366), int64], Tensor[(4, 3, 3), float64]) {
  %1173 = @func_1752() /* ty=Tensor[(4, 3, 3), float64] */;
  %1174 = @func_1870() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %1175 = %1174.0;
  %1176 = cast(%var_2120, dtype="uint64") /* ty=Tensor[(4, 3, 3), uint64] */;
  %1177 = shape_of(%1175, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1178 = cast(%1175, dtype="uint64") /* ty=Tensor[(4, 3, 3), uint64] */;
  %1179 = dyn.reshape(%1176, %1177, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1180 = subtract(%1178, %1179) /* ty=Tensor[(4, 3, 3), uint64] */;
  %1181 = cast(%1180, dtype="int16") /* ty=Tensor[(4, 3, 3), int16] */;
  %1182 = shape_of(%1173, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1183 = cast(%1173, dtype="int16") /* ty=Tensor[(4, 3, 3), int16] */;
  %1184 = dyn.reshape(%1181, %1182, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1185 = cast(%var_2120, dtype="bool") /* ty=Tensor[(4, 3, 3), bool] */;
  %1186 = shape_of(%1175, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1187 = cast(%1175, dtype="bool") /* ty=Tensor[(4, 3, 3), bool] */;
  %1188 = dyn.reshape(%1185, %1186, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1189 = cast(meta[relay.Constant][48] /* ty=Tensor[(2366), int64] */, dtype="int64") /* ty=Tensor[(2366), int64] */;
  %1190 = reshape(%1189, newshape=[2366]) /* ty=Tensor[(2366), int64] */;
  %1191 = @func_2091(%1190) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(168), float32], Tensor[(4, 3, 3), float64], Tensor[(6, 2, 14), float64], Tensor[(2366), int64]) */;
  %1192 = cast(%1173, dtype="float32") /* ty=Tensor[(4, 3, 3), float32] */;
  %1193 = log2(%1192) /* ty=Tensor[(4, 3, 3), float32] */;
  %1194 = cast(%1193, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
  %1195 = bitwise_xor(%1183, %1184) /* ty=Tensor[(4, 3, 3), int16] */;
  %1196 = logical_or(%1187, %1188) /* ty=Tensor[(4, 3, 3), bool] */;
  %1197 = %1191.0;
  %1198 = tan(%1194) /* ty=Tensor[(4, 3, 3), float64] */;
  (%1195, %1196, %1197, meta[relay.Constant][48] /* ty=Tensor[(2366), int64] */, %1198)
}

def @func_7055() -> (Tensor[(4, 3, 3), uint64],) {
  %1199 = @func_4351() /* ty=Tensor[(4, 3, 3), uint64] */;
  (%1199,)
}

def @func_16015(%var_16007: Tensor[(1183, 2), float32]) -> (Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), float64], Tensor[(1183, 2), float32]) {
  %1200 = @func_12601() /* ty=(Tensor[(4, 3, 3), bool],) */;
  %1201 = cast(%var_16007, dtype="float32") /* ty=Tensor[(1183, 2), float32] */;
  %1202 = reshape(%1201, newshape=[2366]) /* ty=Tensor[(2366), float32] */;
  %1203 = @func_9661(%1202) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(2366), float32], Tensor[(2366), float64], Tensor[(4, 3, 3), bool]) */;
  %1204 = %1200.0;
  %1205 = %1203.0;
  (%1204, %1205, %var_16007)
}

def @func_15496() -> (Tensor[(168), float32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), uint64], Tensor[(168), float32]) {
  %1206 = @func_6247() /* ty=Tensor[(168), float32] */;
  %1207 = cast(%1206, dtype="float32") /* ty=Tensor[(168), float32] */;
  %1208 = reshape(%1207, newshape=[42, 4]) /* ty=Tensor[(42, 4), float32] */;
  %1209 = @func_9219(%1208) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(42, 4), int8]) */;
  %1210 = @func_14463() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %1211 = @func_11636() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), uint64], Tensor[(168), float32], Tensor[(4, 3, 3), float64]) */;
  %1212 = %1209.0;
  %1213 = %1210.0;
  %1214 = %1211.1;
  %1215 = @func_6247() /* ty=Tensor[(168), float32] */;
  (%1206, %1212, %1213, %1214, %1215)
}

def @func_2091(%var_2089: Tensor[(2366), int64]) -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(168), float32], Tensor[(4, 3, 3), float64], Tensor[(6, 2, 14), float64], Tensor[(2366), int64]) {
  %1216 = @func_1752() /* ty=Tensor[(4, 3, 3), float64] */;
  %1217 = cast(%1216, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
  %1218 = cast(meta[relay.Constant][49] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %1219 = cos(%1217) /* ty=Tensor[(4, 3, 3), float64] */;
  %1220 = cast(%1219, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
  %1221 = reshape(%1218, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %1222 = reshape(%1220, newshape=[4, 3, 3]) /* ty=Tensor[(4, 3, 3), float64] */;
  %1223 = @func_1983(%1221, %1222) /* ty=(Tensor[(6, 2, 14), float32], Tensor[(168), float32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %1224 = cast(%var_2089, dtype="int64") /* ty=Tensor[(2366), int64] */;
  %1225 = cast(meta[relay.Constant][49] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %1226 = reshape(%1224, newshape=[13, 13, 14]) /* ty=Tensor[(13, 13, 14), int64] */;
  %1227 = reshape(%1225, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %1228 = @func_440(%1226, %1227) /* ty=(Tensor[(13, 13, 14), int64], Tensor[(6, 2, 14), float64], Tensor[(168), float32], Tensor[(6, 2, 14), float64], Tensor[(6, 2, 14), float32], Tensor[(6, 2, 14), float64]) */;
  %1229 = %1223.2;
  %1230 = @func_1752() /* ty=Tensor[(4, 3, 3), float64] */;
  %1231 = %1228.5;
  (%1219, %1229, meta[relay.Constant][49] /* ty=Tensor[(168), float32] */, %1230, %1231, %var_2089)
}

def @func_5518() -> (Tensor[(4, 3, 3), uint64], Tensor[(168), float32], Tensor[(168), float32]) {
  %1232 = @func_5477() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(6, 2, 14), float32], Tensor[(2366), int64], Tensor[(168), float32]) */;
  %1233 = @func_3975() /* ty=Tensor[(4, 3, 3), uint64] */;
  %1234 = cast(%1233, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
  %1235 = reshape(%1234, newshape=[4, 3, 3]) /* ty=Tensor[(4, 3, 3), float64] */;
  %1236 = @func_2727(%1235) /* ty=(Tensor[(6, 2, 14), float64], Tensor[(168), float32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %1237 = %1232.3;
  %1238 = %1236.1;
  (%1233, %1237, %1238)
}

def @func_4550() -> (Tensor[(4, 3, 3), float64],) {
  %1239 = @func_2846() /* ty=Tensor[(4, 3, 3), float64] */;
  (%1239,)
}

def @func_7217(%var_7197: Tensor[(12, 7, 14), float32], %var_7203: Tensor[(168), uint32]) -> (Tensor[(12, 7, 14), float32], Tensor[(7, 4, 6), uint32], Tensor[(168), uint32], Tensor[(4, 3, 3), float64], Tensor[(36), float64]) {
  %1240 = cast(%var_7197, dtype="float32") /* ty=Tensor[(12, 7, 14), float32] */;
  %1241 = cast(%var_7203, dtype="uint32") /* ty=Tensor[(168), uint32] */;
  %1242 = reshape(%1241, newshape=[7, 4, 6]) /* ty=Tensor[(7, 4, 6), uint32] */;
  %1243 = @func_4859(%1242) /* ty=(Tensor[(7, 4, 6), uint32],) */;
  %1244 = %1243.0;
  %1245 = cast(%1244, dtype="float32") /* ty=Tensor[(7, 4, 6), float32] */;
  %1246 = cast(meta[relay.Constant][50] /* ty=Tensor[(36), float64] */, dtype="float64") /* ty=Tensor[(36), float64] */;
  %1247 = reshape(%1245, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %1248 = reshape(%1246, newshape=[4, 3, 3]) /* ty=Tensor[(4, 3, 3), float64] */;
  %1249 = @func_1983(%1247, %1248) /* ty=(Tensor[(6, 2, 14), float32], Tensor[(168), float32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %1250 = sigmoid(%1240) /* ty=Tensor[(12, 7, 14), float32] */;
  %1251 = %1249.2;
  (%1250, %1244, %var_7203, %1251, meta[relay.Constant][50] /* ty=Tensor[(36), float64] */)
}

def @func_15781() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(1170), uint16], Tensor[(4, 3, 3), bool]) {
  %1252 = cast(meta[relay.Constant][51] /* ty=Tensor[(1170), uint16] */, dtype="uint16") /* ty=Tensor[(1170), uint16] */;
  %1253 = reshape(%1252, newshape=[1170]) /* ty=Tensor[(1170), uint16] */;
  %1254 = @func_5380(%1253) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float32], Tensor[(1170), uint16], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %1255 = %1254.3;
  %1256 = cast(%1255, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
  %1257 = reshape(%1256, newshape=[4, 3, 3]) /* ty=Tensor[(4, 3, 3), float64] */;
  %1258 = @func_2249(%1257) /* ty=(Tensor[(4, 3, 3), bool], Tensor[(2366), int64]) */;
  %1259 = @func_2846() /* ty=Tensor[(4, 3, 3), float64] */;
  %1260 = %1258.0;
  (%1259, %1255, meta[relay.Constant][51] /* ty=Tensor[(1170), uint16] */, %1260)
}

def @func_8195() -> (Tensor[(4, 3, 3), float64],) {
  %1261 = @func_5185() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %1262 = %1261.0;
  (%1262,)
}

def @func_10468() -> Tensor[(4, 3, 3), float64] {
  %1263 = @func_9342() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %1263.2
}

def @func_3266() -> (Tensor[(4, 3, 3), float64],) {
  %1264 = @func_2581() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %1265 = %1264.0;
  (%1265,)
}

def @func_7373() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  %1266 = @func_2828() /* ty=Tensor[(4, 3, 3), float64] */;
  %1267 = @func_6708() /* ty=Tensor[(4, 3, 3), float64] */;
  (%1266, %1267)
}

def @func_9594() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), uint64]) {
  %1268 = @func_3196() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float32], Tensor[(4, 3, 3), float64]) */;
  %1269 = %1268.0;
  %1270 = @func_3975() /* ty=Tensor[(4, 3, 3), uint64] */;
  (%1269, %1270)
}

def @func_11450() -> (Tensor[(4, 3, 3), float64],) {
  %1271 = @func_3451() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %1272 = %1271.0;
  (%1272,)
}

def @func_11373() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  %1273 = @func_5725() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float32], Tensor[(168), float32], Tensor[(1183, 2), int64], Tensor[(42, 4), float32]) */;
  %1274 = @func_7955() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %1275 = @func_4289() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %1276 = %1273.0;
  %1277 = %1274.0;
  %1278 = %1275.0;
  (%1276, %1277, %1278)
}

def @func_16043() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  %1279 = @func_9232() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %1280 = %1279.0;
  %1281 = @func_11537() /* ty=Tensor[(4, 3, 3), float64] */;
  %1282 = @func_3800() /* ty=Tensor[(4, 3, 3), float64] */;
  (%1280, %1281, %1282)
}

def @func_4289() -> (Tensor[(4, 3, 3), float64],) {
  %1283 = @func_3975() /* ty=Tensor[(4, 3, 3), uint64] */;
  %1284 = cast(%1283, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
  %1285 = acos(%1284) /* ty=Tensor[(4, 3, 3), float64] */;
  (%1285,)
}

def @func_2846() -> Tensor[(4, 3, 3), float64] {
  %1286 = @func_2581() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %1286.0
}

def @func_6172() -> (Tensor[(4, 3, 3), uint64],) {
  %1287 = @func_5973() /* ty=(Tensor[(4, 3, 3), uint64], Tensor[(4, 3, 3), float64]) */;
  %1288 = %1287.0;
  (%1288,)
}

def @func_6670() -> (Tensor[(6, 5, 9), bool],) {
  %1289 = @func_5134() /* ty=(Tensor[(6, 5, 9), bool],) */;
  %1290 = %1289.0;
  (%1290,)
}

def @func_4802(%var_4695: Tensor[(2366), int64]) -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(2366), int64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), bool], Tensor[(42, 4), float32], Tensor[(168), float32]) {
  %1291 = @func_4550() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %1292 = cast(%var_4695, dtype="int64") /* ty=Tensor[(2366), int64] */;
  %1293 = cast(meta[relay.Constant][52] /* ty=Tensor[(42, 4), float32] */, dtype="float32") /* ty=Tensor[(42, 4), float32] */;
  %1294 = reshape(%1292, newshape=[2366]) /* ty=Tensor[(2366), int64] */;
  %1295 = reshape(%1293, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %1296 = @func_3956(%1294, %1295) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(2366), int8], Tensor[(6, 2, 14), int64], Tensor[(4, 3, 3), float64]) */;
  %1297 = cast(meta[relay.Constant][52] /* ty=Tensor[(42, 4), float32] */, dtype="float32") /* ty=Tensor[(42, 4), float32] */;
  %1298 = @func_1752() /* ty=Tensor[(4, 3, 3), float64] */;
  %1299 = cast(%1298, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
  %1300 = reshape(%1297, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %1301 = reshape(%1299, newshape=[4, 3, 3]) /* ty=Tensor[(4, 3, 3), float64] */;
  %1302 = @func_1983(%1300, %1301) /* ty=(Tensor[(6, 2, 14), float32], Tensor[(168), float32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %1303 = @func_3266() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %1304 = @func_4550() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %1305 = cast(%var_4695, dtype="int64") /* ty=Tensor[(2366), int64] */;
  %1306 = reshape(%1305, newshape=[2366]) /* ty=Tensor[(2366), int64] */;
  %1307 = @func_2091(%1306) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(168), float32], Tensor[(4, 3, 3), float64], Tensor[(6, 2, 14), float64], Tensor[(2366), int64]) */;
  %1308 = @func_4395() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), bool]) */;
  %1309 = cast(meta[relay.Constant][52] /* ty=Tensor[(42, 4), float32] */, dtype="float32") /* ty=Tensor[(42, 4), float32] */;
  %1310 = cast(meta[relay.Constant][52] /* ty=Tensor[(42, 4), float32] */, dtype="float32") /* ty=Tensor[(42, 4), float32] */;
  %1311 = reshape(%1310, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %1312 = @func_1828(%1311) /* ty=(Tensor[(4, 3, 3), float32], Tensor[(6, 2, 14), float64], Tensor[(2366), int64], Tensor[(168), float32], Tensor[(6, 2, 14), float32]) */;
  %1313 = @func_4408() /* ty=Tensor[(4, 3, 3), float64] */;
  %1314 = %1291.0;
  %1315 = @func_1752() /* ty=Tensor[(4, 3, 3), float64] */;
  %1316 = %1296.0;
  %1317 = @func_3218() /* ty=Tensor[(4, 3, 3), float64] */;
  %1318 = @func_3800() /* ty=Tensor[(4, 3, 3), float64] */;
  %1319 = %1302.2;
  %1320 = %1303.0;
  %1321 = %1304.0;
  %1322 = @func_4335() /* ty=Tensor[(4, 3, 3), float64] */;
  %1323 = @func_4264() /* ty=Tensor[(4, 3, 3), float64] */;
  %1324 = %1307.0;
  %1325 = %1308.1;
  %1326 = exp(%1309) /* ty=Tensor[(42, 4), float32] */;
  %1327 = %1312.3;
  (%1313, %1314, %1298, %1315, %1316, %var_4695, %1317, %1318, %1319, %1320, %1321, %1322, %1323, %1324, %1325, %1326, %1327)
}

def @func_1828(%var_1818: Tensor[(168), float32]) -> (Tensor[(4, 3, 3), float32], Tensor[(6, 2, 14), float64], Tensor[(2366), int64], Tensor[(168), float32], Tensor[(6, 2, 14), float32]) {
  %1328 = @func_1752() /* ty=Tensor[(4, 3, 3), float64] */;
  %1329 = cast(%1328, dtype="float32") /* ty=Tensor[(4, 3, 3), float32] */;
  %1330 = cast(meta[relay.Constant][53] /* ty=Tensor[(2366), int64] */, dtype="int64") /* ty=Tensor[(2366), int64] */;
  %1331 = cast(%var_1818, dtype="float32") /* ty=Tensor[(168), float32] */;
  %1332 = reshape(%1330, newshape=[13, 13, 14]) /* ty=Tensor[(13, 13, 14), int64] */;
  %1333 = reshape(%1331, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %1334 = @func_440(%1332, %1333) /* ty=(Tensor[(13, 13, 14), int64], Tensor[(6, 2, 14), float64], Tensor[(168), float32], Tensor[(6, 2, 14), float64], Tensor[(6, 2, 14), float32], Tensor[(6, 2, 14), float64]) */;
  %1335 = cast(%var_1818, dtype="float32") /* ty=Tensor[(168), float32] */;
  %1336 = %1334.5;
  %1337 = cast(%1336, dtype="int8") /* ty=Tensor[(6, 2, 14), int8] */;
  %1338 = reshape(%1335, newshape=[6, 2, 14]) /* ty=Tensor[(6, 2, 14), float32] */;
  %1339 = reshape(%1337, newshape=[6, 2, 14]) /* ty=Tensor[(6, 2, 14), int8] */;
  %1340 = @func_162(%1338, %1339) /* ty=(Tensor[(6, 2, 14), float32], Tensor[(6, 2, 14), float64], Tensor[(6, 2, 14), float64]) */;
  %1341 = sigmoid(%1329) /* ty=Tensor[(4, 3, 3), float32] */;
  %1342 = %1340.0;
  (%1341, %1336, meta[relay.Constant][53] /* ty=Tensor[(2366), int64] */, %var_1818, %1342)
}

def @func_3123(%var_3111: Tensor[(4, 3, 3), float64]) -> (Tensor[(4, 3, 3), float32], Tensor[(4, 3, 3), bool]) {
  %1343 = @func_1870() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %1344 = %1343.0;
  %1345 = cast(%var_3111, dtype="uint8") /* ty=Tensor[(4, 3, 3), uint8] */;
  %1346 = shape_of(%1344, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1347 = cast(%1344, dtype="uint8") /* ty=Tensor[(4, 3, 3), uint8] */;
  %1348 = dyn.reshape(%1345, %1346, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1349 = left_shift(%1347, %1348) /* ty=Tensor[(4, 3, 3), uint8] */;
  %1350 = cast(%1349, dtype="float32") /* ty=Tensor[(4, 3, 3), float32] */;
  %1351 = atan(%1350) /* ty=Tensor[(4, 3, 3), float32] */;
  %1352 = cast(%1351, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
  %1353 = reshape(%1352, newshape=[4, 3, 3]) /* ty=Tensor[(4, 3, 3), float64] */;
  %1354 = @func_2249(%1353) /* ty=(Tensor[(4, 3, 3), bool], Tensor[(2366), int64]) */;
  %1355 = %1354.0;
  (%1351, %1355)
}

def @func_5973() -> (Tensor[(4, 3, 3), uint64], Tensor[(4, 3, 3), float64]) {
  %1356 = @func_3975() /* ty=Tensor[(4, 3, 3), uint64] */;
  %1357 = @func_4264() /* ty=Tensor[(4, 3, 3), float64] */;
  (%1356, %1357)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_7807() -> (Tensor[(4, 3, 3), float64],) {
  %2 = fn () -> (Tensor[(4, 3, 3), float64],) {
    %0 = @func_4511() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
    %1 = %0.1;
    (%1,)
  };
  %2() /* ty=(Tensor[(4, 3, 3), float64],) */
}

def @func_15286() -> (Tensor[(4, 3, 3), float64],) {
  %5 = fn () -> (Tensor[(4, 3, 3), float64],) {
    %3 = @func_3682() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(2366), int64], Tensor[(168), float32], Tensor[(4, 3, 3), float64]) */;
    %4 = %3.0;
    (%4,)
  };
  %5() /* ty=(Tensor[(4, 3, 3), float64],) */
}

def @func_7484() -> (Tensor[(4, 3, 3), float64],) {
  %6 = @func_6982() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %7 = %6.0;
  (%7,)
}

def @func_6591(%var_6566: Tensor[(36), float64]) -> (Tensor[(6, 2, 14), bool], Tensor[(4, 3, 3), float64], Tensor[(36), float64], Tensor[(6, 2, 14), float64]) {
  %8 = @func_6314() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(6, 2, 14), bool]) */;
  %9 = cast(%var_6566, dtype="float64") /* ty=Tensor[(36), float64] */;
  %10 = reshape(%9, newshape=[4, 3, 3]) /* ty=Tensor[(4, 3, 3), float64] */;
  %11 = @func_4056(%10) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float32]) */;
  %12 = %11.1;
  %13 = cast(%12, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
  %14 = reshape(%13, newshape=[36]) /* ty=Tensor[(36), float64] */;
  %15 = @func_3278(%14) /* ty=(Tensor[(5, 12, 6), uint16], Tensor[(6, 2, 14), float64], Tensor[(36), float64]) */;
  %16 = %8.2;
  %17 = %15.1;
  (%16, %12, %var_6566, %17)
}

def @func_8352(%var_8351: Tensor[(2366), int64]) -> (Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), float64], Tensor[(2366), int64], Tensor[(4, 3, 3), bool]) {
  %27 = fn (%var_8319: Tensor[(2366), int64]) -> (Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), float64], Tensor[(2366), int64], Tensor[(4, 3, 3), bool]) {
    %18 = @func_7316() /* ty=(Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), uint64]) */;
    %19 = cast(%var_8319, dtype="int64") /* ty=Tensor[(2366), int64] */;
    %20 = reshape(%19, newshape=[2366]) /* ty=Tensor[(2366), int64] */;
    %21 = @func_2091(%20) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(168), float32], Tensor[(4, 3, 3), float64], Tensor[(6, 2, 14), float64], Tensor[(2366), int64]) */;
    %22 = %18.0;
    %23 = cast(%22, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
    %24 = reshape(%23, newshape=[4, 3, 3]) /* ty=Tensor[(4, 3, 3), float64] */;
    %25 = %21.3;
    %26 = @func_3151(%24) /* ty=Tensor[(4, 3, 3), bool] */;
    (%22, %25, %var_8319, %26)
  };
  %27(%var_8351) /* ty=(Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), float64], Tensor[(2366), int64], Tensor[(4, 3, 3), bool]) */
}

def @func_7375() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  @func_7373() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */
}

def @func_10154() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(2366), int64], Tensor[(6, 2, 14), float64], Tensor[(168), float32]) {
  %42 = fn () -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(2366), int64], Tensor[(6, 2, 14), float64], Tensor[(168), float32]) {
    %28 = @func_2061() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %29 = @func_5185() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %30 = cast(meta[relay.Constant][0] /* ty=Tensor[(2366), int64] */, dtype="int64") /* ty=Tensor[(2366), int64] */;
    %31 = reshape(%30, newshape=[2366]) /* ty=Tensor[(2366), int64] */;
    %32 = @func_2091(%31) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(168), float32], Tensor[(4, 3, 3), float64], Tensor[(6, 2, 14), float64], Tensor[(2366), int64]) */;
    %33 = cast(meta[relay.Constant][1] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
    %34 = cast(meta[relay.Constant][1] /* ty=Tensor[(168), float32] */, dtype="int8") /* ty=Tensor[(168), int8] */;
    %35 = reshape(%33, newshape=[6, 2, 14]) /* ty=Tensor[(6, 2, 14), float32] */;
    %36 = reshape(%34, newshape=[6, 2, 14]) /* ty=Tensor[(6, 2, 14), int8] */;
    %37 = @func_162(%35, %36) /* ty=(Tensor[(6, 2, 14), float32], Tensor[(6, 2, 14), float64], Tensor[(6, 2, 14), float64]) */;
    %38 = %28.0;
    %39 = %29.0;
    %40 = %32.0;
    %41 = %37.2;
    (%38, %39, %40, meta[relay.Constant][0] /* ty=Tensor[(2366), int64] */, %41, meta[relay.Constant][1] /* ty=Tensor[(168), float32] */)
  };
  %42() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(2366), int64], Tensor[(6, 2, 14), float64], Tensor[(168), float32]) */
}

def @func_3582() -> (Tensor[(4, 3, 3), float64],) {
  %43 = @func_3233() /* ty=Tensor[(4, 3, 3), float64] */;
  (%43,)
}

def @func_3235() -> Tensor[(4, 3, 3), float64] {
  @func_3233() /* ty=Tensor[(4, 3, 3), float64] */
}

def @func_3822(%var_3820: Tensor[(15, 13, 6), uint16]) -> (Tensor[(15, 13, 6), bool], Tensor[(4, 3, 3), float32]) {
  @func_3819(%var_3820) /* ty=(Tensor[(15, 13, 6), bool], Tensor[(4, 3, 3), float32]) */
}

def @func_7524() -> (Tensor[(4, 3, 3), uint64], Tensor[(4, 3, 3), float64]) {
  %44 = @func_6513() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %45 = @func_6544() /* ty=Tensor[(4, 3, 3), uint64] */;
  %46 = %44.0;
  (%45, %46)
}

def @func_3268() -> (Tensor[(4, 3, 3), float64],) {
  @func_3266() /* ty=(Tensor[(4, 3, 3), float64],) */
}

def @func_10641(%var_10639: Tensor[(169, 14), float32]) -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(169, 14), float32], Tensor[(4, 3, 3), float64], Tensor[(6, 2, 14), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  @func_10638(%var_10639) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(169, 14), float32], Tensor[(4, 3, 3), float64], Tensor[(6, 2, 14), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */
}

def @func_11051(%var_11049: Tensor[(6, 5, 9), float32]) -> (Tensor[(4, 3, 3), float64], Tensor[(6, 5, 9), bool]) {
  @func_11048(%var_11049) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(6, 5, 9), bool]) */
}

def @func_11107() -> Tensor[(4, 3, 3), float64] {
  %47 = @func_3196() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float32], Tensor[(4, 3, 3), float64]) */;
  %47.2
}

def @func_13550() -> (Tensor[(4, 3, 3), float64],) {
  @func_13548() /* ty=(Tensor[(4, 3, 3), float64],) */
}

def @func_14362() -> (Tensor[(4, 3, 3), float64],) {
  @func_14360() /* ty=(Tensor[(4, 3, 3), float64],) */
}

def @func_12803() -> Tensor[(4, 3, 3), float64] {
  @func_12281() /* ty=Tensor[(4, 3, 3), float64] */
}

def @func_3584() -> (Tensor[(4, 3, 3), float64],) {
  @func_3582() /* ty=(Tensor[(4, 3, 3), float64],) */
}

def @func_8197() -> (Tensor[(4, 3, 3), float64],) {
  @func_8195() /* ty=(Tensor[(4, 3, 3), float64],) */
}

def @func_443(%var_441: Tensor[(13, 13, 14), int64], %var_442: Tensor[(168), float32]) -> (Tensor[(13, 13, 14), int64], Tensor[(6, 2, 14), float64], Tensor[(168), float32], Tensor[(6, 2, 14), float64], Tensor[(6, 2, 14), float32], Tensor[(6, 2, 14), float64]) {
  %75 = fn (%var_410: Tensor[(13, 13, 14), int64], %var_416: Tensor[(168), float32]) -> (Tensor[(13, 13, 14), int64], Tensor[(6, 2, 14), float64], Tensor[(168), float32], Tensor[(6, 2, 14), float64], Tensor[(6, 2, 14), float32], Tensor[(6, 2, 14), float64]) {
    %48 = cast(9 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %49 = cast(%var_410, dtype="int64") /* ty=Tensor[(13, 13, 14), int64] */;
    %50 = cast(%var_416, dtype="float32") /* ty=Tensor[(168), float32] */;
    %51 = cast(%var_416, dtype="int8") /* ty=Tensor[(168), int8] */;
    %52 = reshape(%50, newshape=[6, 2, 14]) /* ty=Tensor[(6, 2, 14), float32] */;
    %53 = reshape(%51, newshape=[6, 2, 14]) /* ty=Tensor[(6, 2, 14), int8] */;
    %54 = @func_162(%52, %53) /* ty=(Tensor[(6, 2, 14), float32], Tensor[(6, 2, 14), float64], Tensor[(6, 2, 14), float64]) */;
    %55 = cast(%var_416, dtype="float32") /* ty=Tensor[(168), float32] */;
    %56 = %54.2;
    %57 = cast(%56, dtype="int8") /* ty=Tensor[(6, 2, 14), int8] */;
    %58 = reshape(%55, newshape=[6, 2, 14]) /* ty=Tensor[(6, 2, 14), float32] */;
    %59 = reshape(%57, newshape=[6, 2, 14]) /* ty=Tensor[(6, 2, 14), int8] */;
    %60 = @func_162(%58, %59) /* ty=(Tensor[(6, 2, 14), float32], Tensor[(6, 2, 14), float64], Tensor[(6, 2, 14), float64]) */;
    %61 = %60.1;
    %62 = cast(%61, dtype="float32") /* ty=Tensor[(6, 2, 14), float32] */;
    %63 = cast(%61, dtype="int8") /* ty=Tensor[(6, 2, 14), int8] */;
    %64 = reshape(%62, newshape=[6, 2, 14]) /* ty=Tensor[(6, 2, 14), float32] */;
    %65 = reshape(%63, newshape=[6, 2, 14]) /* ty=Tensor[(6, 2, 14), int8] */;
    %66 = @func_162(%64, %65) /* ty=(Tensor[(6, 2, 14), float32], Tensor[(6, 2, 14), float64], Tensor[(6, 2, 14), float64]) */;
    %67 = cast(%61, dtype="float32") /* ty=Tensor[(6, 2, 14), float32] */;
    %68 = cast(%56, dtype="int8") /* ty=Tensor[(6, 2, 14), int8] */;
    %69 = reshape(%67, newshape=[6, 2, 14]) /* ty=Tensor[(6, 2, 14), float32] */;
    %70 = reshape(%68, newshape=[6, 2, 14]) /* ty=Tensor[(6, 2, 14), int8] */;
    %71 = @func_162(%69, %70) /* ty=(Tensor[(6, 2, 14), float32], Tensor[(6, 2, 14), float64], Tensor[(6, 2, 14), float64]) */;
    %72 = right_shift(%48, %49) /* ty=Tensor[(13, 13, 14), int64] */;
    %73 = %66.0;
    %74 = %71.1;
    (%72, %56, %var_416, %61, %73, %74)
  };
  %75(%var_441, %var_442) /* ty=(Tensor[(13, 13, 14), int64], Tensor[(6, 2, 14), float64], Tensor[(168), float32], Tensor[(6, 2, 14), float64], Tensor[(6, 2, 14), float32], Tensor[(6, 2, 14), float64]) */
}

def @func_9178() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float32], Tensor[(4, 3, 3), uint64]) {
  @func_9176() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float32], Tensor[(4, 3, 3), uint64]) */
}

def @func_12032() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  @func_12030() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */
}

def @func_2168(%var_2167: Tensor[(4, 3, 3), float64]) -> (Tensor[(4, 3, 3), int16], Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), float64], Tensor[(2366), int64], Tensor[(4, 3, 3), float64]) {
  %102 = fn (%var_2120: Tensor[(4, 3, 3), float64]) -> (Tensor[(4, 3, 3), int16], Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), float64], Tensor[(2366), int64], Tensor[(4, 3, 3), float64]) {
    %76 = @func_1752() /* ty=Tensor[(4, 3, 3), float64] */;
    %77 = @func_1870() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %78 = %77.0;
    %79 = cast(%var_2120, dtype="uint64") /* ty=Tensor[(4, 3, 3), uint64] */;
    %80 = shape_of(%78, dtype="int32") /* ty=Tensor[(3), int32] */;
    %81 = cast(%78, dtype="uint64") /* ty=Tensor[(4, 3, 3), uint64] */;
    %82 = dyn.reshape(%79, %80, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %83 = subtract(%81, %82) /* ty=Tensor[(4, 3, 3), uint64] */;
    %84 = cast(%83, dtype="int16") /* ty=Tensor[(4, 3, 3), int16] */;
    %85 = shape_of(%76, dtype="int32") /* ty=Tensor[(3), int32] */;
    %86 = cast(%76, dtype="int16") /* ty=Tensor[(4, 3, 3), int16] */;
    %87 = dyn.reshape(%84, %85, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %88 = cast(%var_2120, dtype="bool") /* ty=Tensor[(4, 3, 3), bool] */;
    %89 = shape_of(%78, dtype="int32") /* ty=Tensor[(3), int32] */;
    %90 = cast(%78, dtype="bool") /* ty=Tensor[(4, 3, 3), bool] */;
    %91 = dyn.reshape(%88, %89, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %92 = cast(meta[relay.Constant][2] /* ty=Tensor[(2366), int64] */, dtype="int64") /* ty=Tensor[(2366), int64] */;
    %93 = reshape(%92, newshape=[2366]) /* ty=Tensor[(2366), int64] */;
    %94 = @func_2091(%93) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(168), float32], Tensor[(4, 3, 3), float64], Tensor[(6, 2, 14), float64], Tensor[(2366), int64]) */;
    %95 = cast(%76, dtype="float32") /* ty=Tensor[(4, 3, 3), float32] */;
    %96 = log2(%95) /* ty=Tensor[(4, 3, 3), float32] */;
    %97 = cast(%96, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
    %98 = bitwise_xor(%86, %87) /* ty=Tensor[(4, 3, 3), int16] */;
    %99 = logical_or(%90, %91) /* ty=Tensor[(4, 3, 3), bool] */;
    %100 = %94.0;
    %101 = tan(%97) /* ty=Tensor[(4, 3, 3), float64] */;
    (%98, %99, %100, meta[relay.Constant][2] /* ty=Tensor[(2366), int64] */, %101)
  };
  %102(%var_2167) /* ty=(Tensor[(4, 3, 3), int16], Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), float64], Tensor[(2366), int64], Tensor[(4, 3, 3), float64]) */
}

def @func_4233() -> Tensor[(4, 3, 3), float64] {
  @func_1752() /* ty=Tensor[(4, 3, 3), float64] */
}

def @func_3452() -> (Tensor[(4, 3, 3), float64],) {
  %105 = fn () -> (Tensor[(4, 3, 3), float64],) {
    %103 = @func_1870() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %104 = %103.0;
    (%104,)
  };
  %105() /* ty=(Tensor[(4, 3, 3), float64],) */
}

def @func_5310(%var_5309: Tensor[(168), float32]) -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(168), float32], Tensor[(7, 4, 6), float64]) {
  %120 = fn (%var_5272: Tensor[(168), float32]) -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(168), float32], Tensor[(7, 4, 6), float64]) {
    %106 = @func_4395() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), bool]) */;
    %107 = cast(%var_5272, dtype="float32") /* ty=Tensor[(168), float32] */;
    %108 = %106.0;
    %109 = cast(%108, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
    %110 = reshape(%107, newshape=[168]) /* ty=Tensor[(168), float32] */;
    %111 = reshape(%109, newshape=[4, 3, 3]) /* ty=Tensor[(4, 3, 3), float64] */;
    %112 = @func_1983(%110, %111) /* ty=(Tensor[(6, 2, 14), float32], Tensor[(168), float32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
    %113 = cast(%var_5272, dtype="uint32") /* ty=Tensor[(168), uint32] */;
    %114 = reshape(%113, newshape=[7, 4, 6]) /* ty=Tensor[(7, 4, 6), uint32] */;
    %115 = @func_4859(%114) /* ty=(Tensor[(7, 4, 6), uint32],) */;
    %116 = %115.0;
    %117 = cast(%116, dtype="float64") /* ty=Tensor[(7, 4, 6), float64] */;
    %118 = %112.2;
    %119 = log10(%117) /* ty=Tensor[(7, 4, 6), float64] */;
    (%108, %118, %var_5272, %119)
  };
  %120(%var_5309) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(168), float32], Tensor[(7, 4, 6), float64]) */
}

def @func_4290() -> (Tensor[(4, 3, 3), float64],) {
  %124 = fn () -> (Tensor[(4, 3, 3), float64],) {
    %121 = @func_3975() /* ty=Tensor[(4, 3, 3), uint64] */;
    %122 = cast(%121, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
    %123 = acos(%122) /* ty=Tensor[(4, 3, 3), float64] */;
    (%123,)
  };
  %124() /* ty=(Tensor[(4, 3, 3), float64],) */
}

def @func_5577(%var_5572: Tensor[(15, 13, 7), float64], %var_5573: Tensor[(15, 13, 7), float64]) -> (Tensor[(15, 13, 7), bool],) {
  %125 = cast(%var_5573, dtype="bool") /* ty=Tensor[(15, 13, 7), bool] */;
  %126 = shape_of(%var_5572, dtype="int32") /* ty=Tensor[(3), int32] */;
  %127 = cast(%var_5572, dtype="bool") /* ty=Tensor[(15, 13, 7), bool] */;
  %128 = dyn.reshape(%125, %126, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %129 = greater_equal(%127, %128) /* ty=Tensor[(15, 13, 7), bool] */;
  (%129,)
}

def @func_6247() -> Tensor[(168), float32] {
  %130 = @func_5518() /* ty=(Tensor[(4, 3, 3), uint64], Tensor[(168), float32], Tensor[(168), float32]) */;
  %130.1
}

def @func_9344() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  @func_9342() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */
}

def @func_4550() -> (Tensor[(4, 3, 3), float64],) {
  %131 = @func_2846() /* ty=Tensor[(4, 3, 3), float64] */;
  (%131,)
}

def @func_8771() -> (Tensor[(4, 3, 3), float64],) {
  %132 = @func_2846() /* ty=Tensor[(4, 3, 3), float64] */;
  (%132,)
}

def @func_16221(%var_16220: Tensor[(168), uint32]) -> (Tensor[(4, 3, 3), float64], Tensor[(7, 4, 6), uint32], Tensor[(168), uint32], Tensor[(4, 3, 3), float64]) {
  %140 = fn (%var_16210: Tensor[(168), uint32]) -> (Tensor[(4, 3, 3), float64], Tensor[(7, 4, 6), uint32], Tensor[(168), uint32], Tensor[(4, 3, 3), float64]) {
    %133 = cast(%var_16210, dtype="uint32") /* ty=Tensor[(168), uint32] */;
    %134 = reshape(%133, newshape=[7, 4, 6]) /* ty=Tensor[(7, 4, 6), uint32] */;
    %135 = @func_4859(%134) /* ty=(Tensor[(7, 4, 6), uint32],) */;
    %136 = @func_10424() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(168), float32], Tensor[(4, 3, 3), float64]) */;
    %137 = @func_3800() /* ty=Tensor[(4, 3, 3), float64] */;
    %138 = %135.0;
    %139 = %136.1;
    (%137, %138, %var_16210, %139)
  };
  %140(%var_16220) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(7, 4, 6), uint32], Tensor[(168), uint32], Tensor[(4, 3, 3), float64]) */
}

def @func_1987(%var_1985: Tensor[(168), float32], %var_1986: Tensor[(4, 3, 3), float64]) -> (Tensor[(6, 2, 14), float32], Tensor[(168), float32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  @func_1983(%var_1985, %var_1986) /* ty=(Tensor[(6, 2, 14), float32], Tensor[(168), float32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */
}

def @func_7956() -> (Tensor[(4, 3, 3), float64],) {
  %143 = fn () -> (Tensor[(4, 3, 3), float64],) {
    %141 = @func_4550() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %142 = %141.0;
    (%142,)
  };
  %143() /* ty=(Tensor[(4, 3, 3), float64],) */
}

def @func_8173() -> Tensor[(168), float32] {
  @func_8171() /* ty=Tensor[(168), float32] */
}

def @func_6638() -> (Tensor[(4, 3, 3), float32],) {
  %148 = fn () -> (Tensor[(4, 3, 3), float32],) {
    %144 = @func_2994() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
    %145 = %144.0;
    %146 = cast(%145, dtype="float32") /* ty=Tensor[(4, 3, 3), float32] */;
    %147 = atanh(%146) /* ty=Tensor[(4, 3, 3), float32] */;
    (%147,)
  };
  %148() /* ty=(Tensor[(4, 3, 3), float32],) */
}

def @func_2778() -> (Tensor[(4, 3, 3), float64],) {
  %149 = @func_1870() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %150 = %149.0;
  (%150,)
}

def @func_7284(%var_7282: float64, %var_7283: Tensor[(12, 7, 4), float64]) -> (Tensor[(12, 7, 4), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(2366), int64], Tensor[(168), float32]) {
  %162 = fn (%var_7242: float64, %var_7243: Tensor[(12, 7, 4), float64]) -> (Tensor[(12, 7, 4), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(2366), int64], Tensor[(168), float32]) {
    %151 = cast(%var_7242, dtype="float64") /* ty=float64 */;
    %152 = cast(%var_7243, dtype="float64") /* ty=Tensor[(12, 7, 4), float64] */;
    %153 = @func_5683() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
    %154 = cast(meta[relay.Constant][3] /* ty=Tensor[(2366), int64] */, dtype="int64") /* ty=Tensor[(2366), int64] */;
    %155 = cast(meta[relay.Constant][4] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
    %156 = reshape(%154, newshape=[2366]) /* ty=Tensor[(2366), int64] */;
    %157 = reshape(%155, newshape=[168]) /* ty=Tensor[(168), float32] */;
    %158 = @func_3956(%156, %157) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(2366), int8], Tensor[(6, 2, 14), int64], Tensor[(4, 3, 3), float64]) */;
    %159 = floor_divide(%151, %152) /* ty=Tensor[(12, 7, 4), float64] */;
    %160 = %153.0;
    %161 = %158.0;
    (%159, %160, %161, meta[relay.Constant][3] /* ty=Tensor[(2366), int64] */, meta[relay.Constant][4] /* ty=Tensor[(168), float32] */)
  };
  %162(%var_7282, %var_7283) /* ty=(Tensor[(12, 7, 4), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(2366), int64], Tensor[(168), float32]) */
}

def @func_8672() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  %171 = fn () -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
    %163 = @func_7103() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %164 = @func_7967() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %165 = @func_7564() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %166 = @func_2386() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(168), float32], Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), float32], Tensor[(4, 3, 3), bool]) */;
    %167 = %163.0;
    %168 = %164.0;
    %169 = %165.0;
    %170 = %166.1;
    (%167, %168, %169, %170)
  };
  %171() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */
}

def @func_6030() -> (Tensor[(7, 4, 6), float64], Tensor[(168), float32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), bool]) {
  %183 = fn () -> (Tensor[(7, 4, 6), float64], Tensor[(168), float32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), bool]) {
    %172 = cast(meta[relay.Constant][5] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
    %173 = reshape(%172, newshape=[168]) /* ty=Tensor[(168), float32] */;
    %174 = @func_5308(%173) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(168), float32], Tensor[(7, 4, 6), float64]) */;
    %175 = @func_4395() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), bool]) */;
    %176 = %175.1;
    %177 = cast(%176, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
    %178 = log(%177) /* ty=Tensor[(4, 3, 3), float64] */;
    %179 = cast(%178, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
    %180 = reshape(%179, newshape=[4, 3, 3]) /* ty=Tensor[(4, 3, 3), float64] */;
    %181 = %174.3;
    %182 = @func_3151(%180) /* ty=Tensor[(4, 3, 3), bool] */;
    (%181, meta[relay.Constant][5] /* ty=Tensor[(168), float32] */, %178, %182)
  };
  %183() /* ty=(Tensor[(7, 4, 6), float64], Tensor[(168), float32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), bool]) */
}

def @func_3075() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  @func_3073() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */
}

def @func_9993() -> (Tensor[(4, 3, 3), bool],) {
  %184 = @func_9923() /* ty=Tensor[(4, 3, 3), bool] */;
  (%184,)
}

def @func_14868() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  @func_14866() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */
}

def @func_2583() -> (Tensor[(4, 3, 3), float64],) {
  @func_2581() /* ty=(Tensor[(4, 3, 3), float64],) */
}

def @func_5258() -> (Tensor[(4, 3, 3), float64],) {
  %185 = @func_4289() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %186 = %185.0;
  (%186,)
}

def @func_4410() -> Tensor[(4, 3, 3), float64] {
  @func_4408() /* ty=Tensor[(4, 3, 3), float64] */
}

def @func_9594() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), uint64]) {
  %187 = @func_3196() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float32], Tensor[(4, 3, 3), float64]) */;
  %188 = %187.0;
  %189 = @func_3975() /* ty=Tensor[(4, 3, 3), uint64] */;
  (%188, %189)
}

def @func_10190() -> (Tensor[(6, 5, 9), bool], Tensor[(4, 3, 3), float64]) {
  %190 = @func_5134() /* ty=(Tensor[(6, 5, 9), bool],) */;
  %191 = @func_7373() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %192 = %190.0;
  %193 = %191.0;
  (%192, %193)
}

def @func_9508() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), uint64]) {
  %194 = @func_5973() /* ty=(Tensor[(4, 3, 3), uint64], Tensor[(4, 3, 3), float64]) */;
  %195 = @func_3518() /* ty=Tensor[(4, 3, 3), float64] */;
  %196 = %194.0;
  (%195, %196)
}

def @func_3684() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(2366), int64], Tensor[(168), float32], Tensor[(4, 3, 3), float64]) {
  @func_3682() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(2366), int64], Tensor[(168), float32], Tensor[(4, 3, 3), float64]) */
}

def @func_11172() -> Tensor[(4, 3, 3), float64] {
  @func_11170() /* ty=Tensor[(4, 3, 3), float64] */
}

def @func_12882() -> (Tensor[(4, 3, 3), float64],) {
  %198 = fn () -> (Tensor[(4, 3, 3), float64],) {
    %197 = @func_4233() /* ty=Tensor[(4, 3, 3), float64] */;
    (%197,)
  };
  %198() /* ty=(Tensor[(4, 3, 3), float64],) */
}

def @func_9252() -> (Tensor[(4, 3, 3), float64],) {
  %201 = fn () -> (Tensor[(4, 3, 3), float64],) {
    %199 = @func_5683() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
    %200 = %199.0;
    (%200,)
  };
  %201() /* ty=(Tensor[(4, 3, 3), float64],) */
}

def @func_2829() -> Tensor[(4, 3, 3), float64] {
  %202 = fn () -> Tensor[(4, 3, 3), float64] {
    @func_1752() /* ty=Tensor[(4, 3, 3), float64] */
  };
  %202() /* ty=Tensor[(4, 3, 3), float64] */
}

def @func_9706() -> Tensor[(4, 3, 3), float64] {
  %204 = fn () -> Tensor[(4, 3, 3), float64] {
    %203 = @func_8671() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
    %203.3
  };
  %204() /* ty=Tensor[(4, 3, 3), float64] */
}

def @func_9596() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), uint64]) {
  @func_9594() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), uint64]) */
}

def @func_4949(%var_4947: Tensor[(2366), int64]) -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(2366), int64], Tensor[(4, 3, 3), float64]) {
  @func_4946(%var_4947) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(2366), int64], Tensor[(4, 3, 3), float64]) */
}

def @func_14252(%var_14250: Tensor[(3, 56), uint32]) -> (Tensor[(4, 3, 3), float64], Tensor[(7, 4, 6), uint32], Tensor[(3, 56), uint32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(1815), bool]) {
  @func_14249(%var_14250) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(7, 4, 6), uint32], Tensor[(3, 56), uint32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(1815), bool]) */
}

def @func_3801() -> Tensor[(4, 3, 3), float64] {
  %206 = fn () -> Tensor[(4, 3, 3), float64] {
    %205 = @func_3451() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %205.0
  };
  %206() /* ty=Tensor[(4, 3, 3), float64] */
}

def @func_5382(%var_5381: Tensor[(1170), uint16]) -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float32], Tensor[(1170), uint16], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  %215 = fn (%var_5352: Tensor[(1170), uint16]) -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float32], Tensor[(1170), uint16], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
    %207 = @func_3196() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float32], Tensor[(4, 3, 3), float64]) */;
    %208 = cast(%var_5352, dtype="uint16") /* ty=Tensor[(1170), uint16] */;
    %209 = reshape(%208, newshape=[15, 13, 6]) /* ty=Tensor[(15, 13, 6), uint16] */;
    %210 = @func_3819(%209) /* ty=(Tensor[(15, 13, 6), bool], Tensor[(4, 3, 3), float32]) */;
    %211 = %207.2;
    %212 = %210.1;
    %213 = @func_2940() /* ty=Tensor[(4, 3, 3), float64] */;
    %214 = @func_1752() /* ty=Tensor[(4, 3, 3), float64] */;
    (%211, %212, %var_5352, %213, %214)
  };
  %215(%var_5381) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float32], Tensor[(1170), uint16], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */
}

def @func_5774(%var_5745: Tensor[(42, 4), float32]) -> (Tensor[(42, 4), bool], Tensor[(4, 3, 3), float64]) {
  %216 = @func_5725() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float32], Tensor[(168), float32], Tensor[(1183, 2), int64], Tensor[(42, 4), float32]) */;
  %217 = %216.4;
  %218 = cast(%var_5745, dtype="bool") /* ty=Tensor[(42, 4), bool] */;
  %219 = shape_of(%217, dtype="int32") /* ty=Tensor[(2), int32] */;
  %220 = cast(%217, dtype="bool") /* ty=Tensor[(42, 4), bool] */;
  %221 = dyn.reshape(%218, %219, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %222 = @func_3582() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %223 = greater_equal(%220, %221) /* ty=Tensor[(42, 4), bool] */;
  %224 = %222.0;
  (%223, %224)
}

def @func_12831() -> (Tensor[(4, 3, 3), float64],) {
  %227 = fn () -> (Tensor[(4, 3, 3), float64],) {
    %225 = @func_11733() /* ty=(Tensor[(4, 3, 3), uint64], Tensor[(7, 4, 6), uint32], Tensor[(42, 4), uint32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
    %226 = %225.3;
    (%226,)
  };
  %227() /* ty=(Tensor[(4, 3, 3), float64],) */
}

def @func_15799() -> Tensor[(4, 3, 3), float64] {
  %229 = fn () -> Tensor[(4, 3, 3), float64] {
    %228 = @func_10889() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), uint64]) */;
    %228.0
  };
  %229() /* ty=Tensor[(4, 3, 3), float64] */
}

def @func_13961() -> Tensor[(4, 3, 3), float64] {
  %231 = fn () -> Tensor[(4, 3, 3), float64] {
    %230 = @func_13548() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %230.0
  };
  %231() /* ty=Tensor[(4, 3, 3), float64] */
}

def @func_7046(%var_7044: Tensor[(280), float32]) -> (Tensor[(4, 3, 3), float64], Tensor[(7, 10, 4), bool], Tensor[(280), float32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  @func_7043(%var_7044) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(7, 10, 4), bool], Tensor[(280), float32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */
}

def @func_9221(%var_9220: Tensor[(42, 4), float32]) -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(42, 4), int8]) {
  %242 = fn (%var_9213: Tensor[(42, 4), float32]) -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(42, 4), int8]) {
    %232 = @func_8195() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %233 = @func_5725() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float32], Tensor[(168), float32], Tensor[(1183, 2), int64], Tensor[(42, 4), float32]) */;
    %234 = %233.4;
    %235 = cast(%var_9213, dtype="int8") /* ty=Tensor[(42, 4), int8] */;
    %236 = shape_of(%234, dtype="int32") /* ty=Tensor[(2), int32] */;
    %237 = cast(%234, dtype="int8") /* ty=Tensor[(42, 4), int8] */;
    %238 = dyn.reshape(%235, %236, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
    %239 = %232.0;
    %240 = @func_3218() /* ty=Tensor[(4, 3, 3), float64] */;
    %241 = minimum(%237, %238) /* ty=Tensor[(42, 4), int8] */;
    (%239, %240, %241)
  };
  %242(%var_9220) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(42, 4), int8]) */
}

def @func_3125(%var_3124: Tensor[(4, 3, 3), float64]) -> (Tensor[(4, 3, 3), float32], Tensor[(4, 3, 3), bool]) {
  %256 = fn (%var_3111: Tensor[(4, 3, 3), float64]) -> (Tensor[(4, 3, 3), float32], Tensor[(4, 3, 3), bool]) {
    %243 = @func_1870() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %244 = %243.0;
    %245 = cast(%var_3111, dtype="uint8") /* ty=Tensor[(4, 3, 3), uint8] */;
    %246 = shape_of(%244, dtype="int32") /* ty=Tensor[(3), int32] */;
    %247 = cast(%244, dtype="uint8") /* ty=Tensor[(4, 3, 3), uint8] */;
    %248 = dyn.reshape(%245, %246, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %249 = left_shift(%247, %248) /* ty=Tensor[(4, 3, 3), uint8] */;
    %250 = cast(%249, dtype="float32") /* ty=Tensor[(4, 3, 3), float32] */;
    %251 = atan(%250) /* ty=Tensor[(4, 3, 3), float32] */;
    %252 = cast(%251, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
    %253 = reshape(%252, newshape=[4, 3, 3]) /* ty=Tensor[(4, 3, 3), float64] */;
    %254 = @func_2249(%253) /* ty=(Tensor[(4, 3, 3), bool], Tensor[(2366), int64]) */;
    %255 = %254.0;
    (%251, %255)
  };
  %256(%var_3124) /* ty=(Tensor[(4, 3, 3), float32], Tensor[(4, 3, 3), bool]) */
}

def @func_9544() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float32], Tensor[(13, 182), int64], Tensor[(42, 4), bool], Tensor[(6, 28), float32], Tensor[(4, 3, 3), float64]) {
  %271 = fn () -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float32], Tensor[(13, 182), int64], Tensor[(42, 4), bool], Tensor[(6, 28), float32], Tensor[(4, 3, 3), float64]) {
    %257 = @func_8771() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %258 = %257.0;
    %259 = cast(%258, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
    %260 = reshape(%259, newshape=[4, 3, 3]) /* ty=Tensor[(4, 3, 3), float64] */;
    %261 = @func_4056(%260) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float32]) */;
    %262 = @func_8019() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(13, 182), int64], Tensor[(2366), float64]) */;
    %263 = cast(meta[relay.Constant][6] /* ty=Tensor[(6, 28), float32] */, dtype="float32") /* ty=Tensor[(6, 28), float32] */;
    %264 = reshape(%263, newshape=[42, 4]) /* ty=Tensor[(42, 4), float32] */;
    %265 = @func_5774(%264) /* ty=(Tensor[(42, 4), bool], Tensor[(4, 3, 3), float64]) */;
    %266 = @func_7103() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %267 = %261.2;
    %268 = %262.1;
    %269 = %265.0;
    %270 = %266.0;
    (%258, %267, %268, %269, meta[relay.Constant][6] /* ty=Tensor[(6, 28), float32] */, %270)
  };
  %271() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float32], Tensor[(13, 182), int64], Tensor[(42, 4), bool], Tensor[(6, 28), float32], Tensor[(4, 3, 3), float64]) */
}

def @func_12042() -> Tensor[(4, 3, 3), float64] {
  @func_2465() /* ty=Tensor[(4, 3, 3), float64] */
}

def @func_10720() -> (Tensor[(4, 3, 3), float64],) {
  %274 = fn () -> (Tensor[(4, 3, 3), float64],) {
    %272 = @func_7967() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %273 = %272.0;
    (%273,)
  };
  %274() /* ty=(Tensor[(4, 3, 3), float64],) */
}

def @func_1752() -> Tensor[(4, 3, 3), float64] {
  %275 = cast(meta[relay.Constant][7] /* ty=Tensor[(4, 3, 3), float64] */, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
  asinh(%275) /* ty=Tensor[(4, 3, 3), float64] */
}

def @func_6671() -> (Tensor[(6, 5, 9), bool],) {
  %278 = fn () -> (Tensor[(6, 5, 9), bool],) {
    %276 = @func_5134() /* ty=(Tensor[(6, 5, 9), bool],) */;
    %277 = %276.0;
    (%277,)
  };
  %278() /* ty=(Tensor[(6, 5, 9), bool],) */
}

def @func_10920(%var_10918: Tensor[(1815), float64]) -> (Tensor[(4, 3, 3), float32], Tensor[(4, 3, 3), float64], Tensor[(11, 11, 15), float64], Tensor[(1815), float64]) {
  @func_10917(%var_10918) /* ty=(Tensor[(4, 3, 3), float32], Tensor[(4, 3, 3), float64], Tensor[(11, 11, 15), float64], Tensor[(1815), float64]) */
}

def @func_11409() -> (Tensor[(4, 3, 3), float32],) {
  @func_11407() /* ty=(Tensor[(4, 3, 3), float32],) */
}

def @func_6051() -> (Tensor[(4, 3, 3), float64],) {
  %281 = fn () -> (Tensor[(4, 3, 3), float64],) {
    %279 = @func_3073() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
    %280 = %279.0;
    (%280,)
  };
  %281() /* ty=(Tensor[(4, 3, 3), float64],) */
}

def @func_14550(%var_14549: float32) -> Tensor[(16, 11, 4), float64] {
  %286 = fn (%var_14521: float32) -> Tensor[(16, 11, 4), float64] {
    %282 = cast(%var_14521, dtype="float32") /* ty=float32 */;
    %283 = cast(meta[relay.Constant][8] /* ty=Tensor[(16, 11, 4), float32] */, dtype="float32") /* ty=Tensor[(16, 11, 4), float32] */;
    %284 = mod(%282, %283) /* ty=Tensor[(16, 11, 4), float32] */;
    %285 = cast(%284, dtype="float64") /* ty=Tensor[(16, 11, 4), float64] */;
    rsqrt(%285) /* ty=Tensor[(16, 11, 4), float64] */
  };
  %286(%var_14549) /* ty=Tensor[(16, 11, 4), float64] */
}

def @func_8020() -> (Tensor[(4, 3, 3), float64], Tensor[(13, 182), int64], Tensor[(2366), float64]) {
  %294 = fn () -> (Tensor[(4, 3, 3), float64], Tensor[(13, 182), int64], Tensor[(2366), float64]) {
    %287 = cast(meta[relay.Constant][9] /* ty=Tensor[(2366), int64] */, dtype="int64") /* ty=Tensor[(2366), int64] */;
    %288 = reshape(%287, newshape=[13, 182]) /* ty=Tensor[(13, 182), int64] */;
    %289 = @func_7174(%288) /* ty=(Tensor[(4, 3, 3), uint64], Tensor[(4, 3, 3), float64], Tensor[(13, 182), int64]) */;
    %290 = cast(meta[relay.Constant][9] /* ty=Tensor[(2366), int64] */, dtype="float64") /* ty=Tensor[(2366), float64] */;
    %291 = @func_4233() /* ty=Tensor[(4, 3, 3), float64] */;
    %292 = %289.2;
    %293 = atan(%290) /* ty=Tensor[(2366), float64] */;
    (%291, %292, %293)
  };
  %294() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(13, 182), int64], Tensor[(2366), float64]) */
}

def @func_9391(%var_9389: Tensor[(270, 1), bool]) -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(6, 5, 9), int32], Tensor[(270, 1), bool]) {
  %295 = @func_6982() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %296 = @func_7564() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %297 = cast(%var_9389, dtype="bool") /* ty=Tensor[(270, 1), bool] */;
  %298 = reshape(%297, newshape=[6, 5, 9]) /* ty=Tensor[(6, 5, 9), bool] */;
  %299 = %295.0;
  %300 = %296.0;
  %301 = @func_6926(%298) /* ty=Tensor[(6, 5, 9), int32] */;
  (%299, %300, %301, %var_9389)
}

def @func_11500() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  %309 = fn () -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
    %302 = @func_3488() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %303 = @func_10424() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(168), float32], Tensor[(4, 3, 3), float64]) */;
    %304 = @func_8771() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %305 = %302.0;
    %306 = %303.4;
    %307 = %304.0;
    %308 = @func_3218() /* ty=Tensor[(4, 3, 3), float64] */;
    (%305, %306, %307, %308)
  };
  %309() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */
}

def @func_9019() -> (Tensor[(6, 9, 8), float64], Tensor[(6, 9, 8), bool]) {
  %317 = fn () -> (Tensor[(6, 9, 8), float64], Tensor[(6, 9, 8), bool]) {
    %310 = cast(meta[relay.Constant][10] /* ty=Tensor[(6, 9, 8), float64] */, dtype="float64") /* ty=Tensor[(6, 9, 8), float64] */;
    %311 = cast(meta[relay.Constant][11] /* ty=Tensor[(6, 9, 8), float64] */, dtype="bool") /* ty=Tensor[(6, 9, 8), bool] */;
    %312 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(6, 9, 8), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %313 = cast(meta[relay.Constant][10] /* ty=Tensor[(6, 9, 8), float64] */, dtype="bool") /* ty=Tensor[(6, 9, 8), bool] */;
    %314 = dyn.reshape(%311, %312, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %315 = sigmoid(%310) /* ty=Tensor[(6, 9, 8), float64] */;
    %316 = less(%313, %314) /* ty=Tensor[(6, 9, 8), bool] */;
    (%315, %316)
  };
  %317() /* ty=(Tensor[(6, 9, 8), float64], Tensor[(6, 9, 8), bool]) */
}

def @func_12941(%var_12940: Tensor[(1170), uint16]) -> (Tensor[(4, 3, 3), float64], Tensor[(1170), int64], Tensor[(4, 3, 3), float64]) {
  %329 = fn (%var_12924: Tensor[(1170), uint16]) -> (Tensor[(4, 3, 3), float64], Tensor[(1170), int64], Tensor[(4, 3, 3), float64]) {
    %318 = @func_7955() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %319 = @func_12491() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(1170), uint16]) */;
    %320 = %319.2;
    %321 = cast(%var_12924, dtype="int64") /* ty=Tensor[(1170), int64] */;
    %322 = shape_of(%320, dtype="int32") /* ty=Tensor[(1), int32] */;
    %323 = cast(%320, dtype="int64") /* ty=Tensor[(1170), int64] */;
    %324 = dyn.reshape(%321, %322, newshape=[]) /* ty=Tensor[(?), int64] */;
    %325 = @func_3073() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
    %326 = %318.0;
    %327 = minimum(%323, %324) /* ty=Tensor[(1170), int64] */;
    %328 = %325.0;
    (%326, %327, %328)
  };
  %329(%var_12940) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(1170), int64], Tensor[(4, 3, 3), float64]) */
}

def @func_9854(%var_9852: Tensor[(11, 11, 15), float64], %var_9853: Tensor[(11, 11, 15), float64]) -> (Tensor[(11, 11, 15), bool], Tensor[(11, 11, 15), float64]) {
  @func_9850(%var_9852, %var_9853) /* ty=(Tensor[(11, 11, 15), bool], Tensor[(11, 11, 15), float64]) */
}

def @func_2249(%var_2215: Tensor[(4, 3, 3), float64]) -> (Tensor[(4, 3, 3), bool], Tensor[(2366), int64]) {
  %330 = @func_1752() /* ty=Tensor[(4, 3, 3), float64] */;
  %331 = cast(%var_2215, dtype="bool") /* ty=Tensor[(4, 3, 3), bool] */;
  %332 = shape_of(%330, dtype="int32") /* ty=Tensor[(3), int32] */;
  %333 = cast(%330, dtype="bool") /* ty=Tensor[(4, 3, 3), bool] */;
  %334 = dyn.reshape(%331, %332, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %335 = cast(%var_2215, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
  %336 = reshape(%335, newshape=[4, 3, 3]) /* ty=Tensor[(4, 3, 3), float64] */;
  %337 = @func_2166(%336) /* ty=(Tensor[(4, 3, 3), int16], Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), float64], Tensor[(2366), int64], Tensor[(4, 3, 3), float64]) */;
  %338 = equal(%333, %334) /* ty=Tensor[(4, 3, 3), bool] */;
  %339 = %337.3;
  (%338, %339)
}

def @func_6174() -> (Tensor[(4, 3, 3), uint64],) {
  @func_6172() /* ty=(Tensor[(4, 3, 3), uint64],) */
}

def @func_8143(%var_8142: Tensor[(2366), float32]) -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(2366), float32]) {
  %357 = fn (%var_8127: Tensor[(2366), float32]) -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(2366), float32]) {
    %340 = @func_6883() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(15, 13, 7), int8]) */;
    %341 = @func_5477() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(6, 2, 14), float32], Tensor[(2366), int64], Tensor[(168), float32]) */;
    %342 = %341.2;
    %343 = cast(%342, dtype="float32") /* ty=Tensor[(2366), float32] */;
    %344 = acos(%343) /* ty=Tensor[(2366), float32] */;
    %345 = cast(%var_8127, dtype="bool") /* ty=Tensor[(2366), bool] */;
    %346 = shape_of(%344, dtype="int32") /* ty=Tensor[(1), int32] */;
    %347 = cast(%344, dtype="bool") /* ty=Tensor[(2366), bool] */;
    %348 = dyn.reshape(%345, %346, newshape=[]) /* ty=Tensor[(?), bool] */;
    %349 = greater(%347, %348) /* ty=Tensor[(2366), bool] */;
    %350 = cast(%344, dtype="float32") /* ty=Tensor[(2366), float32] */;
    %351 = shape_of(%349, dtype="int32") /* ty=Tensor[(1), int32] */;
    %352 = cast(%349, dtype="float32") /* ty=Tensor[(2366), float32] */;
    %353 = dyn.reshape(%350, %351, newshape=[]) /* ty=Tensor[(?), float32] */;
    %354 = @func_3800() /* ty=Tensor[(4, 3, 3), float64] */;
    %355 = %340.0;
    %356 = mod(%352, %353) /* ty=Tensor[(2366), float32] */;
    (%354, %355, %356)
  };
  %357(%var_8142) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(2366), float32]) */
}

def @func_12838() -> (Tensor[(4, 3, 3), float64],) {
  %360 = fn () -> (Tensor[(4, 3, 3), float64],) {
    %358 = @func_12537() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %359 = %358.0;
    (%359,)
  };
  %360() /* ty=(Tensor[(4, 3, 3), float64],) */
}

def @func_14464() -> (Tensor[(4, 3, 3), float64],) {
  %363 = fn () -> (Tensor[(4, 3, 3), float64],) {
    %361 = @func_5544() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %362 = %361.0;
    (%362,)
  };
  %363() /* ty=(Tensor[(4, 3, 3), float64],) */
}

def @func_14660() -> (Tensor[(4, 3, 3), float64], Tensor[(9, 12, 6), int16], Tensor[(4, 3, 3), float64], Tensor[(2366), int64], Tensor[(1183, 2), int64]) {
  @func_14658() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(9, 12, 6), int16], Tensor[(4, 3, 3), float64], Tensor[(2366), int64], Tensor[(1183, 2), int64]) */
}

def @func_16015(%var_16007: Tensor[(1183, 2), float32]) -> (Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), float64], Tensor[(1183, 2), float32]) {
  %364 = @func_12601() /* ty=(Tensor[(4, 3, 3), bool],) */;
  %365 = cast(%var_16007, dtype="float32") /* ty=Tensor[(1183, 2), float32] */;
  %366 = reshape(%365, newshape=[2366]) /* ty=Tensor[(2366), float32] */;
  %367 = @func_9661(%366) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(2366), float32], Tensor[(2366), float64], Tensor[(4, 3, 3), bool]) */;
  %368 = %364.0;
  %369 = %367.0;
  (%368, %369, %var_16007)
}

def @func_8195() -> (Tensor[(4, 3, 3), float64],) {
  %370 = @func_5185() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %371 = %370.0;
  (%371,)
}

def @func_4265() -> Tensor[(4, 3, 3), float64] {
  %373 = fn () -> Tensor[(4, 3, 3), float64] {
    %372 = @func_3196() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float32], Tensor[(4, 3, 3), float64]) */;
    %372.2
  };
  %373() /* ty=Tensor[(4, 3, 3), float64] */
}

def @func_7767() -> Tensor[(4, 3, 3), float64] {
  %374 = @func_5544() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %374.0
}

def @func_5581(%var_5579: Tensor[(15, 13, 7), float64], %var_5580: Tensor[(15, 13, 7), float64]) -> (Tensor[(15, 13, 7), bool],) {
  @func_5577(%var_5579, %var_5580) /* ty=(Tensor[(15, 13, 7), bool],) */
}

def @func_10469() -> Tensor[(4, 3, 3), float64] {
  %376 = fn () -> Tensor[(4, 3, 3), float64] {
    %375 = @func_9342() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
    %375.2
  };
  %376() /* ty=Tensor[(4, 3, 3), float64] */
}

def @func_6249() -> Tensor[(168), float32] {
  @func_6247() /* ty=Tensor[(168), float32] */
}

def @func_8488() -> Tensor[(4, 3, 3), uint64] {
  %377 = fn () -> Tensor[(4, 3, 3), uint64] {
    @func_6544() /* ty=Tensor[(4, 3, 3), uint64] */
  };
  %377() /* ty=Tensor[(4, 3, 3), uint64] */
}

def @func_4337() -> Tensor[(4, 3, 3), float64] {
  @func_4335() /* ty=Tensor[(4, 3, 3), float64] */
}

def @func_8403() -> (Tensor[(168), float32], Tensor[(1183, 2), float32]) {
  %378 = @func_5477() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(6, 2, 14), float32], Tensor[(2366), int64], Tensor[(168), float32]) */;
  %379 = @func_5725() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float32], Tensor[(168), float32], Tensor[(1183, 2), int64], Tensor[(42, 4), float32]) */;
  %380 = %379.3;
  %381 = cast(%380, dtype="float32") /* ty=Tensor[(1183, 2), float32] */;
  %382 = %378.3;
  %383 = sqrt(%381) /* ty=Tensor[(1183, 2), float32] */;
  (%382, %383)
}

def @func_8295() -> Tensor[(4, 3, 3), float64] {
  %384 = @func_2994() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %384.1
}

def @func_13781(%var_13780: Tensor[(1815), float64]) -> (Tensor[(1815), float64],) {
  %392 = fn (%var_13770: Tensor[(1815), float64]) -> (Tensor[(1815), float64],) {
    %385 = @func_13128() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(1815), float64], Tensor[(6, 5, 9), float32], Tensor[(4, 3, 3), float64]) */;
    %386 = %385.3;
    %387 = cast(%var_13770, dtype="float64") /* ty=Tensor[(1815), float64] */;
    %388 = shape_of(%386, dtype="int32") /* ty=Tensor[(1), int32] */;
    %389 = cast(%386, dtype="float64") /* ty=Tensor[(1815), float64] */;
    %390 = dyn.reshape(%387, %388, newshape=[]) /* ty=Tensor[(?), float64] */;
    %391 = mod(%389, %390) /* ty=Tensor[(1815), float64] */;
    (%391,)
  };
  %392(%var_13780) /* ty=(Tensor[(1815), float64],) */
}

def @func_6883() -> (Tensor[(4, 3, 3), float64], Tensor[(15, 13, 7), int8]) {
  %393 = cast(meta[relay.Constant][12] /* ty=Tensor[(1365, 1), float64] */, dtype="float64") /* ty=Tensor[(1365, 1), float64] */;
  %394 = cast(meta[relay.Constant][12] /* ty=Tensor[(1365, 1), float64] */, dtype="float64") /* ty=Tensor[(1365, 1), float64] */;
  %395 = reshape(%393, newshape=[15, 13, 7]) /* ty=Tensor[(15, 13, 7), float64] */;
  %396 = reshape(%394, newshape=[15, 13, 7]) /* ty=Tensor[(15, 13, 7), float64] */;
  %397 = @func_5577(%395, %396) /* ty=(Tensor[(15, 13, 7), bool],) */;
  %398 = %397.0;
  %399 = cast(meta[relay.Constant][12] /* ty=Tensor[(1365, 1), float64] */, dtype="int8") /* ty=Tensor[(1365, 1), int8] */;
  %400 = shape_of(%398, dtype="int32") /* ty=Tensor[(3), int32] */;
  %401 = cast(%398, dtype="int8") /* ty=Tensor[(15, 13, 7), int8] */;
  %402 = dyn.reshape(%399, %400, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %403 = @func_2828() /* ty=Tensor[(4, 3, 3), float64] */;
  %404 = bitwise_and(%401, %402) /* ty=Tensor[(15, 13, 7), int8] */;
  (%403, %404)
}

def @func_16119() -> (Tensor[(9, 12, 6), int16], Tensor[(4, 3, 3), float64]) {
  %409 = fn () -> (Tensor[(9, 12, 6), int16], Tensor[(4, 3, 3), float64]) {
    %405 = @func_13913() /* ty=(Tensor[(9, 12, 6), int16], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
    %406 = @func_6982() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %407 = %405.0;
    %408 = %406.0;
    (%407, %408)
  };
  %409() /* ty=(Tensor[(9, 12, 6), int16], Tensor[(4, 3, 3), float64]) */
}

def @func_2729(%var_2728: Tensor[(4, 3, 3), float64]) -> (Tensor[(6, 2, 14), float64], Tensor[(168), float32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  %425 = fn (%var_2713: Tensor[(4, 3, 3), float64]) -> (Tensor[(6, 2, 14), float64], Tensor[(168), float32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
    %410 = cast(meta[relay.Constant][13] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
    %411 = cast(meta[relay.Constant][13] /* ty=Tensor[(168), float32] */, dtype="int8") /* ty=Tensor[(168), int8] */;
    %412 = reshape(%410, newshape=[6, 2, 14]) /* ty=Tensor[(6, 2, 14), float32] */;
    %413 = reshape(%411, newshape=[6, 2, 14]) /* ty=Tensor[(6, 2, 14), int8] */;
    %414 = @func_162(%412, %413) /* ty=(Tensor[(6, 2, 14), float32], Tensor[(6, 2, 14), float64], Tensor[(6, 2, 14), float64]) */;
    %415 = @func_2061() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %416 = @func_2061() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %417 = %416.0;
    %418 = cast(%var_2713, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
    %419 = shape_of(%417, dtype="int32") /* ty=Tensor[(3), int32] */;
    %420 = cast(%417, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
    %421 = dyn.reshape(%418, %419, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %422 = %414.2;
    %423 = %415.0;
    %424 = floor_divide(%420, %421) /* ty=Tensor[(4, 3, 3), float64] */;
    (%422, meta[relay.Constant][13] /* ty=Tensor[(168), float32] */, %423, %424)
  };
  %425(%var_2728) /* ty=(Tensor[(6, 2, 14), float64], Tensor[(168), float32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */
}

def @func_5975() -> (Tensor[(4, 3, 3), uint64], Tensor[(4, 3, 3), float64]) {
  @func_5973() /* ty=(Tensor[(4, 3, 3), uint64], Tensor[(4, 3, 3), float64]) */
}

def @func_3975() -> Tensor[(4, 3, 3), uint64] {
  %426 = @func_2542() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), int16], Tensor[(4, 3, 3), float64]) */;
  %427 = %426.1;
  %428 = cast(meta[relay.Constant][14] /* ty=Tensor[(4, 3, 3), float64] */, dtype="uint64") /* ty=Tensor[(4, 3, 3), uint64] */;
  %429 = shape_of(%427, dtype="int32") /* ty=Tensor[(3), int32] */;
  %430 = cast(%427, dtype="uint64") /* ty=Tensor[(4, 3, 3), uint64] */;
  %431 = dyn.reshape(%428, %429, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  bitwise_or(%430, %431) /* ty=Tensor[(4, 3, 3), uint64] */
}

def @func_13246() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(270), bool], Tensor[(6, 5, 9), float32]) {
  %443 = fn () -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(270), bool], Tensor[(6, 5, 9), float32]) {
    %432 = @func_9176() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float32], Tensor[(4, 3, 3), uint64]) */;
    %433 = @func_12837() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %434 = cast(meta[relay.Constant][15] /* ty=Tensor[(270), bool] */, dtype="bool") /* ty=Tensor[(270), bool] */;
    %435 = reshape(%434, newshape=[6, 5, 9]) /* ty=Tensor[(6, 5, 9), bool] */;
    %436 = @func_6926(%435) /* ty=Tensor[(6, 5, 9), int32] */;
    %437 = cast(%436, dtype="float64") /* ty=Tensor[(6, 5, 9), float64] */;
    %438 = erf(%437) /* ty=Tensor[(6, 5, 9), float64] */;
    %439 = cast(%438, dtype="float32") /* ty=Tensor[(6, 5, 9), float32] */;
    %440 = %432.1;
    %441 = %433.0;
    %442 = cos(%439) /* ty=Tensor[(6, 5, 9), float32] */;
    (%440, %441, meta[relay.Constant][15] /* ty=Tensor[(270), bool] */, %442)
  };
  %443() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(270), bool], Tensor[(6, 5, 9), float32]) */
}

def @func_15321() -> (Tensor[(4, 3, 3), float64],) {
  %446 = fn () -> (Tensor[(4, 3, 3), float64],) {
    %444 = @func_14463() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %445 = %444.0;
    (%445,)
  };
  %446() /* ty=(Tensor[(4, 3, 3), float64],) */
}

def @func_7176(%var_7175: Tensor[(13, 182), int64]) -> (Tensor[(4, 3, 3), uint64], Tensor[(4, 3, 3), float64], Tensor[(13, 182), int64]) {
  %453 = fn (%var_7151: Tensor[(13, 182), int64]) -> (Tensor[(4, 3, 3), uint64], Tensor[(4, 3, 3), float64], Tensor[(13, 182), int64]) {
    %447 = @func_5973() /* ty=(Tensor[(4, 3, 3), uint64], Tensor[(4, 3, 3), float64]) */;
    %448 = cast(%var_7151, dtype="int64") /* ty=Tensor[(13, 182), int64] */;
    %449 = reshape(%448, newshape=[2366]) /* ty=Tensor[(2366), int64] */;
    %450 = @func_2091(%449) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(168), float32], Tensor[(4, 3, 3), float64], Tensor[(6, 2, 14), float64], Tensor[(2366), int64]) */;
    %451 = %447.0;
    %452 = %450.0;
    (%451, %452, %var_7151)
  };
  %453(%var_7175) /* ty=(Tensor[(4, 3, 3), uint64], Tensor[(4, 3, 3), float64], Tensor[(13, 182), int64]) */
}

def @func_7220(%var_7218: Tensor[(12, 7, 14), float32], %var_7219: Tensor[(168), uint32]) -> (Tensor[(12, 7, 14), float32], Tensor[(7, 4, 6), uint32], Tensor[(168), uint32], Tensor[(4, 3, 3), float64], Tensor[(36), float64]) {
  %466 = fn (%var_7197: Tensor[(12, 7, 14), float32], %var_7203: Tensor[(168), uint32]) -> (Tensor[(12, 7, 14), float32], Tensor[(7, 4, 6), uint32], Tensor[(168), uint32], Tensor[(4, 3, 3), float64], Tensor[(36), float64]) {
    %454 = cast(%var_7197, dtype="float32") /* ty=Tensor[(12, 7, 14), float32] */;
    %455 = cast(%var_7203, dtype="uint32") /* ty=Tensor[(168), uint32] */;
    %456 = reshape(%455, newshape=[7, 4, 6]) /* ty=Tensor[(7, 4, 6), uint32] */;
    %457 = @func_4859(%456) /* ty=(Tensor[(7, 4, 6), uint32],) */;
    %458 = %457.0;
    %459 = cast(%458, dtype="float32") /* ty=Tensor[(7, 4, 6), float32] */;
    %460 = cast(meta[relay.Constant][16] /* ty=Tensor[(36), float64] */, dtype="float64") /* ty=Tensor[(36), float64] */;
    %461 = reshape(%459, newshape=[168]) /* ty=Tensor[(168), float32] */;
    %462 = reshape(%460, newshape=[4, 3, 3]) /* ty=Tensor[(4, 3, 3), float64] */;
    %463 = @func_1983(%461, %462) /* ty=(Tensor[(6, 2, 14), float32], Tensor[(168), float32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
    %464 = sigmoid(%454) /* ty=Tensor[(12, 7, 14), float32] */;
    %465 = %463.2;
    (%464, %458, %var_7203, %465, meta[relay.Constant][16] /* ty=Tensor[(36), float64] */)
  };
  %466(%var_7218, %var_7219) /* ty=(Tensor[(12, 7, 14), float32], Tensor[(7, 4, 6), uint32], Tensor[(168), uint32], Tensor[(4, 3, 3), float64], Tensor[(36), float64]) */
}

def @func_2388() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(168), float32], Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), float32], Tensor[(4, 3, 3), bool]) {
  @func_2386() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(168), float32], Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), float32], Tensor[(4, 3, 3), bool]) */
}

def @func_9794() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  %467 = @func_4264() /* ty=Tensor[(4, 3, 3), float64] */;
  %468 = cast(%467, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
  %469 = reshape(%468, newshape=[4, 3, 3]) /* ty=Tensor[(4, 3, 3), float64] */;
  %470 = @func_2727(%469) /* ty=(Tensor[(6, 2, 14), float64], Tensor[(168), float32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %471 = %470.3;
  (%467, %471)
}

def @func_9401() -> Tensor[(4, 3, 3), float64] {
  %473 = fn () -> Tensor[(4, 3, 3), float64] {
    %472 = @func_7955() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %472.0
  };
  %473() /* ty=Tensor[(4, 3, 3), float64] */
}

def @func_11452() -> (Tensor[(4, 3, 3), float64],) {
  @func_11450() /* ty=(Tensor[(4, 3, 3), float64],) */
}

def @func_13129() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(1815), float64], Tensor[(6, 5, 9), float32], Tensor[(4, 3, 3), float64]) {
  %486 = fn () -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(1815), float64], Tensor[(6, 5, 9), float32], Tensor[(4, 3, 3), float64]) {
    %474 = @func_3451() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %475 = @func_7564() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %476 = cast(meta[relay.Constant][17] /* ty=Tensor[(1815), float64] */, dtype="float64") /* ty=Tensor[(1815), float64] */;
    %477 = reshape(%476, newshape=[1815]) /* ty=Tensor[(1815), float64] */;
    %478 = @func_10917(%477) /* ty=(Tensor[(4, 3, 3), float32], Tensor[(4, 3, 3), float64], Tensor[(11, 11, 15), float64], Tensor[(1815), float64]) */;
    %479 = @func_11812() /* ty=(Tensor[(6, 5, 9), float32],) */;
    %480 = @func_2581() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %481 = %474.0;
    %482 = %475.0;
    %483 = %478.1;
    %484 = %479.0;
    %485 = %480.0;
    (%481, %482, %483, meta[relay.Constant][17] /* ty=Tensor[(1815), float64] */, %484, %485)
  };
  %486() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(1815), float64], Tensor[(6, 5, 9), float32], Tensor[(4, 3, 3), float64]) */
}

def @func_14658() -> (Tensor[(4, 3, 3), float64], Tensor[(9, 12, 6), int16], Tensor[(4, 3, 3), float64], Tensor[(2366), int64], Tensor[(1183, 2), int64]) {
  %487 = @func_12030() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %488 = @func_13318() /* ty=(Tensor[(6, 5, 9), float32], Tensor[(9, 12, 6), int16]) */;
  %489 = @func_5814() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %490 = cast(meta[relay.Constant][18] /* ty=Tensor[(1183, 2), int64] */, dtype="int64") /* ty=Tensor[(1183, 2), int64] */;
  %491 = reshape(%490, newshape=[2366]) /* ty=Tensor[(2366), int64] */;
  %492 = @func_4946(%491) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(2366), int64], Tensor[(4, 3, 3), float64]) */;
  %493 = %487.1;
  %494 = %488.1;
  %495 = %489.0;
  %496 = %492.2;
  (%493, %494, %495, %496, meta[relay.Constant][18] /* ty=Tensor[(1183, 2), int64] */)
}

def @func_5816() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  @func_5814() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */
}

def @func_9232() -> (Tensor[(4, 3, 3), float64],) {
  %497 = @func_8075() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %498 = %497.0;
  (%498,)
}

def @func_3073() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  %499 = @func_2994() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %500 = @func_2828() /* ty=Tensor[(4, 3, 3), float64] */;
  %501 = %499.1;
  (%500, %501)
}

def @func_12269() -> (Tensor[(4, 3, 3), float64],) {
  %502 = @func_7524() /* ty=(Tensor[(4, 3, 3), uint64], Tensor[(4, 3, 3), float64]) */;
  %503 = %502.1;
  (%503,)
}

def @func_15560() -> (Tensor[(4, 3, 3), float64], Tensor[(168), float32]) {
  %508 = fn () -> (Tensor[(4, 3, 3), float64], Tensor[(168), float32]) {
    %504 = @func_15285() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %505 = @func_8954() /* ty=(Tensor[(168), float32], Tensor[(4, 3, 3), float64]) */;
    %506 = %504.0;
    %507 = %505.0;
    (%506, %507)
  };
  %508() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(168), float32]) */
}

def @func_3280(%var_3279: Tensor[(36), float64]) -> (Tensor[(5, 12, 6), uint16], Tensor[(6, 2, 14), float64], Tensor[(36), float64]) {
  %518 = fn (%var_3276: Tensor[(36), float64]) -> (Tensor[(5, 12, 6), uint16], Tensor[(6, 2, 14), float64], Tensor[(36), float64]) {
    %509 = cast(meta[relay.Constant][20] /* ty=Tensor[(5, 12, 6), uint16] */, dtype="uint16") /* ty=Tensor[(5, 12, 6), uint16] */;
    %510 = shape_of(meta[relay.Constant][19] /* ty=Tensor[(5, 12, 6), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %511 = cast(meta[relay.Constant][19] /* ty=Tensor[(5, 12, 6), uint16] */, dtype="uint16") /* ty=Tensor[(5, 12, 6), uint16] */;
    %512 = dyn.reshape(%509, %510, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %513 = cast(%var_3276, dtype="float64") /* ty=Tensor[(36), float64] */;
    %514 = reshape(%513, newshape=[4, 3, 3]) /* ty=Tensor[(4, 3, 3), float64] */;
    %515 = @func_2727(%514) /* ty=(Tensor[(6, 2, 14), float64], Tensor[(168), float32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
    %516 = multiply(%511, %512) /* ty=Tensor[(5, 12, 6), uint16] */;
    %517 = %515.0;
    (%516, %517, %var_3276)
  };
  %518(%var_3279) /* ty=(Tensor[(5, 12, 6), uint16], Tensor[(6, 2, 14), float64], Tensor[(36), float64]) */
}

def @func_8469(%var_8459: Tensor[(2366), int64]) -> (Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), uint64], Tensor[(2366), int64], Tensor[(2366), int64]) {
  %519 = @func_2581() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %520 = %519.0;
  %521 = @func_2658() /* ty=Tensor[(4, 3, 3), float32] */;
  %522 = cast(%521, dtype="bool") /* ty=Tensor[(4, 3, 3), bool] */;
  %523 = shape_of(%520, dtype="int32") /* ty=Tensor[(3), int32] */;
  %524 = cast(%520, dtype="bool") /* ty=Tensor[(4, 3, 3), bool] */;
  %525 = dyn.reshape(%522, %523, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %526 = @func_6637() /* ty=(Tensor[(4, 3, 3), float32],) */;
  %527 = %526.0;
  %528 = cast(%520, dtype="bool") /* ty=Tensor[(4, 3, 3), bool] */;
  %529 = shape_of(%527, dtype="int32") /* ty=Tensor[(3), int32] */;
  %530 = cast(%527, dtype="bool") /* ty=Tensor[(4, 3, 3), bool] */;
  %531 = dyn.reshape(%528, %529, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %532 = @func_6172() /* ty=(Tensor[(4, 3, 3), uint64],) */;
  %533 = cast(%var_8459, dtype="int64") /* ty=Tensor[(2366), int64] */;
  %534 = reshape(%533, newshape=[2366]) /* ty=Tensor[(2366), int64] */;
  %535 = @func_4946(%534) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(2366), int64], Tensor[(4, 3, 3), float64]) */;
  %536 = less(%524, %525) /* ty=Tensor[(4, 3, 3), bool] */;
  %537 = not_equal(%530, %531) /* ty=Tensor[(4, 3, 3), bool] */;
  %538 = %532.0;
  %539 = %535.2;
  (%536, %537, %538, %539, %var_8459)
}

def @func_10942() -> Tensor[(4, 3, 3), bool] {
  %541 = fn () -> Tensor[(4, 3, 3), bool] {
    %540 = @func_9993() /* ty=(Tensor[(4, 3, 3), bool],) */;
    %540.0
  };
  %541() /* ty=Tensor[(4, 3, 3), bool] */
}

def @func_12655() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  %542 = @func_3451() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %543 = @func_9794() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %544 = %542.0;
  %545 = %543.0;
  (%544, %545)
}

def @func_2062() -> (Tensor[(4, 3, 3), float64],) {
  %548 = fn () -> (Tensor[(4, 3, 3), float64],) {
    %546 = @func_1870() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %547 = %546.0;
    (%547,)
  };
  %548() /* ty=(Tensor[(4, 3, 3), float64],) */
}

def @func_16018(%var_16016: Tensor[(1183, 2), float32]) -> (Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), float64], Tensor[(1183, 2), float32]) {
  @func_16015(%var_16016) /* ty=(Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), float64], Tensor[(1183, 2), float32]) */
}

def @func_2466() -> Tensor[(4, 3, 3), float64] {
  %549 = fn () -> Tensor[(4, 3, 3), float64] {
    @func_1752() /* ty=Tensor[(4, 3, 3), float64] */
  };
  %549() /* ty=Tensor[(4, 3, 3), float64] */
}

def @func_3488() -> (Tensor[(4, 3, 3), float64],) {
  %550 = @func_1870() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %551 = %550.0;
  (%551,)
}

def @func_11894(%var_11893: Tensor[(5, 6, 16), int8]) -> (Tensor[(5, 6, 16), bool], Tensor[(4, 3, 3), float64], Tensor[(168), float32], Tensor[(168), uint32], Tensor[(1176), float32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float32], Tensor[(5, 6, 16), float32]) {
  %574 = fn (%var_11836: Tensor[(5, 6, 16), int8]) -> (Tensor[(5, 6, 16), bool], Tensor[(4, 3, 3), float64], Tensor[(168), float32], Tensor[(168), uint32], Tensor[(1176), float32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float32], Tensor[(5, 6, 16), float32]) {
    %552 = cast(%var_11836, dtype="bool") /* ty=Tensor[(5, 6, 16), bool] */;
    %553 = shape_of(meta[relay.Constant][21] /* ty=Tensor[(5, 6, 16), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %554 = cast(meta[relay.Constant][21] /* ty=Tensor[(5, 6, 16), int8] */, dtype="bool") /* ty=Tensor[(5, 6, 16), bool] */;
    %555 = dyn.reshape(%552, %553, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %556 = @func_5683() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
    %557 = cast(meta[relay.Constant][22] /* ty=Tensor[(1176), float32] */, dtype="float32") /* ty=Tensor[(1176), float32] */;
    %558 = reshape(%557, newshape=[84, 14]) /* ty=Tensor[(84, 14), float32] */;
    %559 = @func_7920(%558) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(168), uint32], Tensor[(84, 14), float32], Tensor[(168), uint32], Tensor[(168), float32]) */;
    %560 = @func_5725() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float32], Tensor[(168), float32], Tensor[(1183, 2), int64], Tensor[(42, 4), float32]) */;
    %561 = cast(%var_11836, dtype="float64") /* ty=Tensor[(5, 6, 16), float64] */;
    %562 = rsqrt(%561) /* ty=Tensor[(5, 6, 16), float64] */;
    %563 = cast(%var_11836, dtype="float32") /* ty=Tensor[(5, 6, 16), float32] */;
    %564 = shape_of(%562, dtype="int32") /* ty=Tensor[(3), int32] */;
    %565 = cast(%562, dtype="float32") /* ty=Tensor[(5, 6, 16), float32] */;
    %566 = dyn.reshape(%563, %564, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %567 = greater(%554, %555) /* ty=Tensor[(5, 6, 16), bool] */;
    %568 = %556.0;
    %569 = @func_8171() /* ty=Tensor[(168), float32] */;
    %570 = %559.3;
    %571 = @func_10468() /* ty=Tensor[(4, 3, 3), float64] */;
    %572 = %560.1;
    %573 = divide(%565, %566) /* ty=Tensor[(5, 6, 16), float32] */;
    (%567, %568, %569, %570, meta[relay.Constant][22] /* ty=Tensor[(1176), float32] */, %571, %572, %573)
  };
  %574(%var_11893) /* ty=(Tensor[(5, 6, 16), bool], Tensor[(4, 3, 3), float64], Tensor[(168), float32], Tensor[(168), uint32], Tensor[(1176), float32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float32], Tensor[(5, 6, 16), float32]) */
}

def @func_3819(%var_3810: Tensor[(15, 13, 6), uint16]) -> (Tensor[(15, 13, 6), bool], Tensor[(4, 3, 3), float32]) {
  %575 = cast(%var_3810, dtype="bool") /* ty=Tensor[(15, 13, 6), bool] */;
  %576 = shape_of(meta[relay.Constant][23] /* ty=Tensor[(15, 13, 6), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %577 = cast(meta[relay.Constant][23] /* ty=Tensor[(15, 13, 6), uint16] */, dtype="bool") /* ty=Tensor[(15, 13, 6), bool] */;
  %578 = dyn.reshape(%575, %576, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %579 = less(%577, %578) /* ty=Tensor[(15, 13, 6), bool] */;
  %580 = @func_2658() /* ty=Tensor[(4, 3, 3), float32] */;
  (%579, %580)
}

def @func_12657() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  @func_12655() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */
}

def @func_5684() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  %584 = fn () -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
    %581 = @func_3451() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %582 = @func_4408() /* ty=Tensor[(4, 3, 3), float64] */;
    %583 = %581.0;
    (%582, %583)
  };
  %584() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */
}

def @func_3682() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(2366), int64], Tensor[(168), float32], Tensor[(4, 3, 3), float64]) {
  %585 = @func_2778() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %586 = @func_3266() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %587 = cast(meta[relay.Constant][24] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %588 = reshape(%587, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %589 = @func_1828(%588) /* ty=(Tensor[(4, 3, 3), float32], Tensor[(6, 2, 14), float64], Tensor[(2366), int64], Tensor[(168), float32], Tensor[(6, 2, 14), float32]) */;
  %590 = @func_2994() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %591 = %585.0;
  %592 = %586.0;
  %593 = @func_2828() /* ty=Tensor[(4, 3, 3), float64] */;
  %594 = @func_2940() /* ty=Tensor[(4, 3, 3), float64] */;
  %595 = %589.2;
  %596 = %590.0;
  (%591, %592, %593, %594, %595, meta[relay.Constant][24] /* ty=Tensor[(168), float32] */, %596)
}

def @func_12538() -> (Tensor[(4, 3, 3), float64],) {
  %599 = fn () -> (Tensor[(4, 3, 3), float64],) {
    %597 = @func_10889() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), uint64]) */;
    %598 = %597.0;
    (%598,)
  };
  %599() /* ty=(Tensor[(4, 3, 3), float64],) */
}

def @func_4059(%var_4057: Tensor[(4, 3, 3), float64]) -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float32]) {
  @func_4056(%var_4057) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float32]) */
}

def @func_7565() -> (Tensor[(4, 3, 3), float64],) {
  %602 = fn () -> (Tensor[(4, 3, 3), float64],) {
    %600 = @func_3682() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(2366), int64], Tensor[(168), float32], Tensor[(4, 3, 3), float64]) */;
    %601 = %600.6;
    (%601,)
  };
  %602() /* ty=(Tensor[(4, 3, 3), float64],) */
}

def @func_12089(%var_12087: Tensor[(4, 10, 8), float32], %var_12088: Tensor[(4, 10, 8), float32]) -> (Tensor[(4, 10, 8), float32],) {
  @func_12085(%var_12087, %var_12088) /* ty=(Tensor[(4, 10, 8), float32],) */
}

def @func_10425() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(168), float32], Tensor[(4, 3, 3), float64]) {
  %612 = fn () -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(168), float32], Tensor[(4, 3, 3), float64]) {
    %603 = @func_5667() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %604 = @func_8195() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %605 = @func_8954() /* ty=(Tensor[(168), float32], Tensor[(4, 3, 3), float64]) */;
    %606 = @func_6050() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %607 = %603.0;
    %608 = %604.0;
    %609 = %605.1;
    %610 = @func_8171() /* ty=Tensor[(168), float32] */;
    %611 = %606.0;
    (%607, %608, %609, %610, %611)
  };
  %612() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(168), float32], Tensor[(4, 3, 3), float64]) */
}

def @func_13364() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  %617 = fn () -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
    %613 = @func_2778() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %614 = @func_12517() /* ty=Tensor[(4, 3, 3), float64] */;
    %615 = @func_4335() /* ty=Tensor[(4, 3, 3), float64] */;
    %616 = %613.0;
    (%614, %615, %616)
  };
  %617() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */
}

def @func_11170() -> Tensor[(4, 3, 3), float64] {
  %618 = @func_6674() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %618.0
}

def @func_9661(%var_9642: Tensor[(2366), float32]) -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(2366), float32], Tensor[(2366), float64], Tensor[(4, 3, 3), bool]) {
  %619 = cast(%var_9642, dtype="float32") /* ty=Tensor[(2366), float32] */;
  %620 = reshape(%619, newshape=[2366]) /* ty=Tensor[(2366), float32] */;
  %621 = @func_8141(%620) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(2366), float32]) */;
  %622 = @func_8019() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(13, 182), int64], Tensor[(2366), float64]) */;
  %623 = cast(%var_9642, dtype="int64") /* ty=Tensor[(2366), int64] */;
  %624 = reshape(%623, newshape=[2366]) /* ty=Tensor[(2366), int64] */;
  %625 = @func_8350(%624) /* ty=(Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), float64], Tensor[(2366), int64], Tensor[(4, 3, 3), bool]) */;
  %626 = @func_2828() /* ty=Tensor[(4, 3, 3), float64] */;
  %627 = %621.1;
  %628 = %622.2;
  %629 = %625.3;
  (%626, %627, %var_9642, %628, %629)
}

def @func_11204() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), int8], Tensor[(4, 3, 3), float64]) {
  %637 = fn () -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), int8], Tensor[(4, 3, 3), float64]) {
    %630 = @func_10889() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), uint64]) */;
    %631 = %630.0;
    %632 = cast(%631, dtype="float32") /* ty=Tensor[(4, 3, 3), float32] */;
    %633 = reshape(%632, newshape=[4, 3, 3]) /* ty=Tensor[(4, 3, 3), float32] */;
    %634 = @func_8075() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %635 = @func_2879(%633) /* ty=Tensor[(4, 3, 3), int8] */;
    %636 = %634.0;
    (%631, %635, %636)
  };
  %637() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), int8], Tensor[(4, 3, 3), float64]) */
}

def @func_13070() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(6, 5, 9), bool], Tensor[(270), float32]) {
  %646 = fn () -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(6, 5, 9), bool], Tensor[(270), float32]) {
    %638 = @func_4550() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %639 = @func_8771() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %640 = cast(meta[relay.Constant][25] /* ty=Tensor[(270), float32] */, dtype="float32") /* ty=Tensor[(270), float32] */;
    %641 = reshape(%640, newshape=[6, 5, 9]) /* ty=Tensor[(6, 5, 9), float32] */;
    %642 = @func_11048(%641) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(6, 5, 9), bool]) */;
    %643 = %638.0;
    %644 = %639.0;
    %645 = %642.1;
    (%643, %644, %645, meta[relay.Constant][25] /* ty=Tensor[(270), float32] */)
  };
  %646() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(6, 5, 9), bool], Tensor[(270), float32]) */
}

def @func_4552() -> (Tensor[(4, 3, 3), float64],) {
  @func_4550() /* ty=(Tensor[(4, 3, 3), float64],) */
}

def @func_8297() -> Tensor[(4, 3, 3), float64] {
  @func_8295() /* ty=Tensor[(4, 3, 3), float64] */
}

def @func_10638(%var_10581: Tensor[(169, 14), float32]) -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(169, 14), float32], Tensor[(4, 3, 3), float64], Tensor[(6, 2, 14), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  %647 = @func_2994() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %648 = cast(%var_10581, dtype="float32") /* ty=Tensor[(169, 14), float32] */;
  %649 = reshape(%648, newshape=[2366]) /* ty=Tensor[(2366), float32] */;
  %650 = @func_9661(%649) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(2366), float32], Tensor[(2366), float64], Tensor[(4, 3, 3), bool]) */;
  %651 = @func_3196() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float32], Tensor[(4, 3, 3), float64]) */;
  %652 = @func_3518() /* ty=Tensor[(4, 3, 3), float64] */;
  %653 = cast(%652, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
  %654 = reshape(%653, newshape=[4, 3, 3]) /* ty=Tensor[(4, 3, 3), float64] */;
  %655 = @func_2727(%654) /* ty=(Tensor[(6, 2, 14), float64], Tensor[(168), float32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %656 = @func_7955() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %657 = @func_2061() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %658 = %647.1;
  %659 = %650.1;
  %660 = %651.2;
  %661 = %655.0;
  %662 = %656.0;
  %663 = @func_1752() /* ty=Tensor[(4, 3, 3), float64] */;
  %664 = %657.0;
  (%658, %652, %659, %var_10581, %660, %661, %662, %663, %664)
}

def @func_5478() -> (Tensor[(4, 3, 3), float64], Tensor[(6, 2, 14), float32], Tensor[(2366), int64], Tensor[(168), float32]) {
  %675 = fn () -> (Tensor[(4, 3, 3), float64], Tensor[(6, 2, 14), float32], Tensor[(2366), int64], Tensor[(168), float32]) {
    %665 = @func_5258() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %666 = %665.0;
    %667 = cast(%666, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
    %668 = cast(meta[relay.Constant][26] /* ty=Tensor[(2366), int64] */, dtype="int64") /* ty=Tensor[(2366), int64] */;
    %669 = cast(meta[relay.Constant][27] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
    %670 = reshape(%668, newshape=[13, 13, 14]) /* ty=Tensor[(13, 13, 14), int64] */;
    %671 = reshape(%669, newshape=[168]) /* ty=Tensor[(168), float32] */;
    %672 = @func_440(%670, %671) /* ty=(Tensor[(13, 13, 14), int64], Tensor[(6, 2, 14), float64], Tensor[(168), float32], Tensor[(6, 2, 14), float64], Tensor[(6, 2, 14), float32], Tensor[(6, 2, 14), float64]) */;
    %673 = log10(%667) /* ty=Tensor[(4, 3, 3), float64] */;
    %674 = %672.4;
    (%673, %674, meta[relay.Constant][26] /* ty=Tensor[(2366), int64] */, meta[relay.Constant][27] /* ty=Tensor[(168), float32] */)
  };
  %675() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(6, 2, 14), float32], Tensor[(2366), int64], Tensor[(168), float32]) */
}

def @func_14319() -> (Tensor[(4, 3, 3), float64],) {
  %676 = @func_2940() /* ty=Tensor[(4, 3, 3), float64] */;
  (%676,)
}

def @func_162(%var_104: Tensor[(6, 2, 14), float32], %var_126: Tensor[(6, 2, 14), int8]) -> (Tensor[(6, 2, 14), float32], Tensor[(6, 2, 14), float64], Tensor[(6, 2, 14), float64]) {
  %677 = cast(%var_104, dtype="float32") /* ty=Tensor[(6, 2, 14), float32] */;
  %678 = exp(%677) /* ty=Tensor[(6, 2, 14), float32] */;
  %679 = cast(%var_104, dtype="int8") /* ty=Tensor[(6, 2, 14), int8] */;
  %680 = shape_of(%678, dtype="int32") /* ty=Tensor[(3), int32] */;
  %681 = cast(%678, dtype="int8") /* ty=Tensor[(6, 2, 14), int8] */;
  %682 = dyn.reshape(%679, %680, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %683 = maximum(%681, %682) /* ty=Tensor[(6, 2, 14), int8] */;
  %684 = cast(%var_126, dtype="float32") /* ty=Tensor[(6, 2, 14), float32] */;
  %685 = shape_of(%683, dtype="int32") /* ty=Tensor[(3), int32] */;
  %686 = cast(%683, dtype="float32") /* ty=Tensor[(6, 2, 14), float32] */;
  %687 = dyn.reshape(%684, %685, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %688 = cast(%683, dtype="float64") /* ty=Tensor[(6, 2, 14), float64] */;
  %689 = cast(%683, dtype="float32") /* ty=Tensor[(6, 2, 14), float32] */;
  %690 = atan(%689) /* ty=Tensor[(6, 2, 14), float32] */;
  %691 = cast(%690, dtype="float64") /* ty=Tensor[(6, 2, 14), float64] */;
  %692 = power(%686, %687) /* ty=Tensor[(6, 2, 14), float32] */;
  %693 = sin(%688) /* ty=Tensor[(6, 2, 14), float64] */;
  %694 = log10(%691) /* ty=Tensor[(6, 2, 14), float64] */;
  (%692, %693, %694)
}

def @func_6708() -> Tensor[(4, 3, 3), float64] {
  @func_4408() /* ty=Tensor[(4, 3, 3), float64] */
}

def @func_8773() -> (Tensor[(4, 3, 3), float64],) {
  @func_8771() /* ty=(Tensor[(4, 3, 3), float64],) */
}

def @func_12016(%var_12014: Tensor[(3, 56), float32]) -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(3, 56), float32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), uint64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), uint64], Tensor[(2366, 1), int64], Tensor[(4, 3, 3), float64]) {
  @func_12013(%var_12014) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(3, 56), float32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), uint64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), uint64], Tensor[(2366, 1), int64], Tensor[(4, 3, 3), float64]) */
}

def @func_7838(%var_7831: Tensor[(12, 2, 4), uint64], %var_7832: Tensor[(12, 2, 4), uint64]) -> (Tensor[(12, 2, 4), uint64],) {
  %695 = cast(%var_7832, dtype="uint64") /* ty=Tensor[(12, 2, 4), uint64] */;
  %696 = shape_of(%var_7831, dtype="int32") /* ty=Tensor[(3), int32] */;
  %697 = cast(%var_7831, dtype="uint64") /* ty=Tensor[(12, 2, 4), uint64] */;
  %698 = dyn.reshape(%695, %696, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %699 = multiply(%697, %698) /* ty=Tensor[(12, 2, 4), uint64] */;
  (%699,)
}

def @func_5814() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  %700 = @func_3233() /* ty=Tensor[(4, 3, 3), float64] */;
  %701 = @func_3518() /* ty=Tensor[(4, 3, 3), float64] */;
  (%700, %701)
}

def @func_8270() -> (Tensor[(9, 12, 6), int16], Tensor[(4, 3, 3), float64]) {
  %705 = fn () -> (Tensor[(9, 12, 6), int16], Tensor[(4, 3, 3), float64]) {
    %702 = @func_7373() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
    %703 = @func_7888() /* ty=Tensor[(9, 12, 6), int16] */;
    %704 = %702.0;
    (%703, %704)
  };
  %705() /* ty=(Tensor[(9, 12, 6), int16], Tensor[(4, 3, 3), float64]) */
}

def @func_15669() -> (Tensor[(4, 3, 3), float64], Tensor[(6, 5, 9), bool]) {
  @func_15667() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(6, 5, 9), bool]) */
}

def @func_2847() -> Tensor[(4, 3, 3), float64] {
  %707 = fn () -> Tensor[(4, 3, 3), float64] {
    %706 = @func_2581() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %706.0
  };
  %707() /* ty=Tensor[(4, 3, 3), float64] */
}

def @func_4396() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), bool]) {
  %724 = fn () -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), bool]) {
    %708 = @func_2994() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
    %709 = %708.1;
    %710 = cast(%709, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
    %711 = reshape(%710, newshape=[4, 3, 3]) /* ty=Tensor[(4, 3, 3), float64] */;
    %712 = @func_2166(%711) /* ty=(Tensor[(4, 3, 3), int16], Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), float64], Tensor[(2366), int64], Tensor[(4, 3, 3), float64]) */;
    %713 = %712.1;
    %714 = cast(%709, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
    %715 = shape_of(%713, dtype="int32") /* ty=Tensor[(3), int32] */;
    %716 = cast(%713, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
    %717 = dyn.reshape(%714, %715, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %718 = cast(%713, dtype="bool") /* ty=Tensor[(4, 3, 3), bool] */;
    %719 = shape_of(%709, dtype="int32") /* ty=Tensor[(3), int32] */;
    %720 = cast(%709, dtype="bool") /* ty=Tensor[(4, 3, 3), bool] */;
    %721 = dyn.reshape(%718, %719, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %722 = mod(%716, %717) /* ty=Tensor[(4, 3, 3), float64] */;
    %723 = less_equal(%720, %721) /* ty=Tensor[(4, 3, 3), bool] */;
    (%722, %723)
  };
  %724() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), bool]) */
}

def @func_13519() -> (Tensor[(4, 3, 3), uint64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  @func_13517() /* ty=(Tensor[(4, 3, 3), uint64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */
}

def @func_13870() -> (Tensor[(4, 3, 3), float64],) {
  %727 = fn () -> (Tensor[(4, 3, 3), float64],) {
    %725 = @func_13548() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %726 = %725.0;
    (%726,)
  };
  %727() /* ty=(Tensor[(4, 3, 3), float64],) */
}

def @func_4512() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  %730 = fn () -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
    %728 = @func_3800() /* ty=Tensor[(4, 3, 3), float64] */;
    %729 = @func_4335() /* ty=Tensor[(4, 3, 3), float64] */;
    (%728, %729)
  };
  %730() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */
}

def @func_10791() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  %731 = @func_5185() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %732 = @func_2465() /* ty=Tensor[(4, 3, 3), float64] */;
  %733 = %731.0;
  (%732, %733)
}

def @func_9342() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  %734 = @func_7806() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %735 = %734.0;
  %736 = @func_4233() /* ty=Tensor[(4, 3, 3), float64] */;
  %737 = @func_6708() /* ty=Tensor[(4, 3, 3), float64] */;
  (%735, %736, %737)
}

def @func_10890() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), uint64]) {
  %741 = fn () -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), uint64]) {
    %738 = @func_10424() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(168), float32], Tensor[(4, 3, 3), float64]) */;
    %739 = %738.2;
    %740 = @func_6544() /* ty=Tensor[(4, 3, 3), uint64] */;
    (%739, %740)
  };
  %741() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), uint64]) */
}

def @func_12805() -> Tensor[(4, 3, 3), float64] {
  @func_12803() /* ty=Tensor[(4, 3, 3), float64] */
}

def @func_12491() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(1170), uint16]) {
  %742 = @func_7967() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %743 = cast(meta[relay.Constant][28] /* ty=Tensor[(1170), uint16] */, dtype="uint16") /* ty=Tensor[(1170), uint16] */;
  %744 = reshape(%743, newshape=[1170]) /* ty=Tensor[(1170), uint16] */;
  %745 = @func_5380(%744) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float32], Tensor[(1170), uint16], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %746 = %742.0;
  %747 = %745.4;
  (%746, %747, meta[relay.Constant][28] /* ty=Tensor[(1170), uint16] */)
}

def @func_6172() -> (Tensor[(4, 3, 3), uint64],) {
  %748 = @func_5973() /* ty=(Tensor[(4, 3, 3), uint64], Tensor[(4, 3, 3), float64]) */;
  %749 = %748.0;
  (%749,)
}

def @func_7968() -> (Tensor[(4, 3, 3), float64],) {
  %751 = fn () -> (Tensor[(4, 3, 3), float64],) {
    %750 = @func_3518() /* ty=Tensor[(4, 3, 3), float64] */;
    (%750,)
  };
  %751() /* ty=(Tensor[(4, 3, 3), float64],) */
}

def @func_12602() -> (Tensor[(4, 3, 3), bool],) {
  %754 = fn () -> (Tensor[(4, 3, 3), bool],) {
    %752 = @func_9993() /* ty=(Tensor[(4, 3, 3), bool],) */;
    %753 = %752.0;
    (%753,)
  };
  %754() /* ty=(Tensor[(4, 3, 3), bool],) */
}

def @func_10192() -> (Tensor[(6, 5, 9), bool], Tensor[(4, 3, 3), float64]) {
  @func_10190() /* ty=(Tensor[(6, 5, 9), bool], Tensor[(4, 3, 3), float64]) */
}

def @func_2659() -> Tensor[(4, 3, 3), float32] {
  %757 = fn () -> Tensor[(4, 3, 3), float32] {
    %755 = @func_1752() /* ty=Tensor[(4, 3, 3), float64] */;
    %756 = cast(%755, dtype="float32") /* ty=Tensor[(4, 3, 3), float32] */;
    sinh(%756) /* ty=Tensor[(4, 3, 3), float32] */
  };
  %757() /* ty=Tensor[(4, 3, 3), float32] */
}

def @func_3233() -> Tensor[(4, 3, 3), float64] {
  @func_2940() /* ty=Tensor[(4, 3, 3), float64] */
}

def @func_15497() -> (Tensor[(168), float32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), uint64], Tensor[(168), float32]) {
  %768 = fn () -> (Tensor[(168), float32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), uint64], Tensor[(168), float32]) {
    %758 = @func_6247() /* ty=Tensor[(168), float32] */;
    %759 = cast(%758, dtype="float32") /* ty=Tensor[(168), float32] */;
    %760 = reshape(%759, newshape=[42, 4]) /* ty=Tensor[(42, 4), float32] */;
    %761 = @func_9219(%760) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(42, 4), int8]) */;
    %762 = @func_14463() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %763 = @func_11636() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), uint64], Tensor[(168), float32], Tensor[(4, 3, 3), float64]) */;
    %764 = %761.0;
    %765 = %762.0;
    %766 = %763.1;
    %767 = @func_6247() /* ty=Tensor[(168), float32] */;
    (%758, %764, %765, %766, %767)
  };
  %768() /* ty=(Tensor[(168), float32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), uint64], Tensor[(168), float32]) */
}

def @func_11374() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  %775 = fn () -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
    %769 = @func_5725() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float32], Tensor[(168), float32], Tensor[(1183, 2), int64], Tensor[(42, 4), float32]) */;
    %770 = @func_7955() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %771 = @func_4289() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %772 = %769.0;
    %773 = %770.0;
    %774 = %771.0;
    (%772, %773, %774)
  };
  %775() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */
}

def @func_2780() -> (Tensor[(4, 3, 3), float64],) {
  @func_2778() /* ty=(Tensor[(4, 3, 3), float64],) */
}

def @func_3519() -> Tensor[(4, 3, 3), float64] {
  %777 = fn () -> Tensor[(4, 3, 3), float64] {
    %776 = @func_1870() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %776.0
  };
  %777() /* ty=Tensor[(4, 3, 3), float64] */
}

def @func_11048(%var_11032: Tensor[(6, 5, 9), float32]) -> (Tensor[(4, 3, 3), float64], Tensor[(6, 5, 9), bool]) {
  %778 = @func_10285() /* ty=(Tensor[(6, 5, 9), float32],) */;
  %779 = %778.0;
  %780 = cast(%var_11032, dtype="bool") /* ty=Tensor[(6, 5, 9), bool] */;
  %781 = shape_of(%779, dtype="int32") /* ty=Tensor[(3), int32] */;
  %782 = cast(%779, dtype="bool") /* ty=Tensor[(6, 5, 9), bool] */;
  %783 = dyn.reshape(%780, %781, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %784 = @func_3233() /* ty=Tensor[(4, 3, 3), float64] */;
  %785 = not_equal(%782, %783) /* ty=Tensor[(6, 5, 9), bool] */;
  (%784, %785)
}

def @func_7486() -> (Tensor[(4, 3, 3), float64],) {
  @func_7484() /* ty=(Tensor[(4, 3, 3), float64],) */
}

def @func_11216() -> (Tensor[(4, 3, 3), float32],) {
  %787 = fn () -> (Tensor[(4, 3, 3), float32],) {
    %786 = @func_2658() /* ty=Tensor[(4, 3, 3), float32] */;
    (%786,)
  };
  %787() /* ty=(Tensor[(4, 3, 3), float32],) */
}

def @func_7842(%var_7840: Tensor[(12, 2, 4), uint64], %var_7841: Tensor[(12, 2, 4), uint64]) -> (Tensor[(12, 2, 4), uint64],) {
  @func_7838(%var_7840, %var_7841) /* ty=(Tensor[(12, 2, 4), uint64],) */
}

def @func_9796() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  @func_9794() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */
}

def @func_13013() -> (Tensor[(4, 3, 3), float64],) {
  %790 = fn () -> (Tensor[(4, 3, 3), float64],) {
    %788 = @func_3451() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %789 = %788.0;
    (%789,)
  };
  %790() /* ty=(Tensor[(4, 3, 3), float64],) */
}

def @func_6710() -> Tensor[(4, 3, 3), float64] {
  @func_6708() /* ty=Tensor[(4, 3, 3), float64] */
}

def @func_14291() -> Tensor[(4, 3, 3), float64] {
  %792 = fn () -> Tensor[(4, 3, 3), float64] {
    %791 = @func_2386() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(168), float32], Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), float32], Tensor[(4, 3, 3), bool]) */;
    %791.0
  };
  %792() /* ty=Tensor[(4, 3, 3), float64] */
}

def @func_12518() -> Tensor[(4, 3, 3), float64] {
  %793 = fn () -> Tensor[(4, 3, 3), float64] {
    @func_6708() /* ty=Tensor[(4, 3, 3), float64] */
  };
  %793() /* ty=Tensor[(4, 3, 3), float64] */
}

def @func_1871() -> (Tensor[(4, 3, 3), float64],) {
  %795 = fn () -> (Tensor[(4, 3, 3), float64],) {
    %794 = @func_1752() /* ty=Tensor[(4, 3, 3), float64] */;
    (%794,)
  };
  %795() /* ty=(Tensor[(4, 3, 3), float64],) */
}

def @func_4859(%var_4855: Tensor[(7, 4, 6), uint32]) -> (Tensor[(7, 4, 6), uint32],) {
  %796 = cast(meta[relay.Constant][29] /* ty=Tensor[(7, 4, 1), uint32] */, dtype="uint32") /* ty=Tensor[(7, 4, 1), uint32] */;
  %797 = cast(%var_4855, dtype="uint32") /* ty=Tensor[(7, 4, 6), uint32] */;
  %798 = left_shift(%796, %797) /* ty=Tensor[(7, 4, 6), uint32] */;
  (%798,)
}

def @func_8853() -> (Tensor[(11, 2, 12), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  %807 = fn () -> (Tensor[(11, 2, 12), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
    %799 = cast(meta[relay.Constant][31] /* ty=Tensor[(11, 2, 12), float64] */, dtype="float64") /* ty=Tensor[(11, 2, 12), float64] */;
    %800 = shape_of(meta[relay.Constant][30] /* ty=Tensor[(11, 2, 12), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %801 = cast(meta[relay.Constant][30] /* ty=Tensor[(11, 2, 12), float64] */, dtype="float64") /* ty=Tensor[(11, 2, 12), float64] */;
    %802 = dyn.reshape(%799, %800, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %803 = @func_8075() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %804 = floor_divide(%801, %802) /* ty=Tensor[(11, 2, 12), float64] */;
    %805 = %803.0;
    %806 = @func_6708() /* ty=Tensor[(4, 3, 3), float64] */;
    (%804, %805, %806)
  };
  %807() /* ty=(Tensor[(11, 2, 12), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */
}

def @func_12789() -> (Tensor[(4, 3, 3), float64],) {
  %809 = fn () -> (Tensor[(4, 3, 3), float64],) {
    %808 = @func_2828() /* ty=Tensor[(4, 3, 3), float64] */;
    (%808,)
  };
  %809() /* ty=(Tensor[(4, 3, 3), float64],) */
}

def @func_2581() -> (Tensor[(4, 3, 3), float64],) {
  %810 = @func_2061() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %811 = %810.0;
  (%811,)
}

def @func_2093(%var_2092: Tensor[(2366), int64]) -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(168), float32], Tensor[(4, 3, 3), float64], Tensor[(6, 2, 14), float64], Tensor[(2366), int64]) {
  %828 = fn (%var_2089: Tensor[(2366), int64]) -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(168), float32], Tensor[(4, 3, 3), float64], Tensor[(6, 2, 14), float64], Tensor[(2366), int64]) {
    %812 = @func_1752() /* ty=Tensor[(4, 3, 3), float64] */;
    %813 = cast(%812, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
    %814 = cast(meta[relay.Constant][32] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
    %815 = cos(%813) /* ty=Tensor[(4, 3, 3), float64] */;
    %816 = cast(%815, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
    %817 = reshape(%814, newshape=[168]) /* ty=Tensor[(168), float32] */;
    %818 = reshape(%816, newshape=[4, 3, 3]) /* ty=Tensor[(4, 3, 3), float64] */;
    %819 = @func_1983(%817, %818) /* ty=(Tensor[(6, 2, 14), float32], Tensor[(168), float32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
    %820 = cast(%var_2089, dtype="int64") /* ty=Tensor[(2366), int64] */;
    %821 = cast(meta[relay.Constant][32] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
    %822 = reshape(%820, newshape=[13, 13, 14]) /* ty=Tensor[(13, 13, 14), int64] */;
    %823 = reshape(%821, newshape=[168]) /* ty=Tensor[(168), float32] */;
    %824 = @func_440(%822, %823) /* ty=(Tensor[(13, 13, 14), int64], Tensor[(6, 2, 14), float64], Tensor[(168), float32], Tensor[(6, 2, 14), float64], Tensor[(6, 2, 14), float32], Tensor[(6, 2, 14), float64]) */;
    %825 = %819.2;
    %826 = @func_1752() /* ty=Tensor[(4, 3, 3), float64] */;
    %827 = %824.5;
    (%815, %825, meta[relay.Constant][32] /* ty=Tensor[(168), float32] */, %826, %827, %var_2089)
  };
  %828(%var_2092) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(168), float32], Tensor[(4, 3, 3), float64], Tensor[(6, 2, 14), float64], Tensor[(2366), int64]) */
}

def @func_12044() -> Tensor[(4, 3, 3), float64] {
  @func_12042() /* ty=Tensor[(4, 3, 3), float64] */
}

def @func_7526() -> (Tensor[(4, 3, 3), uint64], Tensor[(4, 3, 3), float64]) {
  @func_7524() /* ty=(Tensor[(4, 3, 3), uint64], Tensor[(4, 3, 3), float64]) */
}

def @func_4235() -> Tensor[(4, 3, 3), float64] {
  @func_4233() /* ty=Tensor[(4, 3, 3), float64] */
}

def @func_2543() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), int16], Tensor[(4, 3, 3), float64]) {
  %837 = fn () -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), int16], Tensor[(4, 3, 3), float64]) {
    %829 = @func_1752() /* ty=Tensor[(4, 3, 3), float64] */;
    %830 = cast(%829, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
    %831 = reshape(%830, newshape=[4, 3, 3]) /* ty=Tensor[(4, 3, 3), float64] */;
    %832 = @func_2166(%831) /* ty=(Tensor[(4, 3, 3), int16], Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), float64], Tensor[(2366), int64], Tensor[(4, 3, 3), float64]) */;
    %833 = @func_2386() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(168), float32], Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), float32], Tensor[(4, 3, 3), bool]) */;
    %834 = @func_2465() /* ty=Tensor[(4, 3, 3), float64] */;
    %835 = %832.0;
    %836 = %833.1;
    (%834, %829, %835, %836)
  };
  %837() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), int16], Tensor[(4, 3, 3), float64]) */
}

def @func_4335() -> Tensor[(4, 3, 3), float64] {
  %838 = @func_4289() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %838.0
}

def @func_13319() -> (Tensor[(6, 5, 9), float32], Tensor[(9, 12, 6), int16]) {
  %842 = fn () -> (Tensor[(6, 5, 9), float32], Tensor[(9, 12, 6), int16]) {
    %839 = @func_11812() /* ty=(Tensor[(6, 5, 9), float32],) */;
    %840 = %839.0;
    %841 = @func_7888() /* ty=Tensor[(9, 12, 6), int16] */;
    (%840, %841)
  };
  %842() /* ty=(Tensor[(6, 5, 9), float32], Tensor[(9, 12, 6), int16]) */
}

def @func_7923(%var_7921: Tensor[(84, 14), float32]) -> (Tensor[(4, 3, 3), float64], Tensor[(168), uint32], Tensor[(84, 14), float32], Tensor[(168), uint32], Tensor[(168), float32]) {
  @func_7920(%var_7921) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(168), uint32], Tensor[(84, 14), float32], Tensor[(168), uint32], Tensor[(168), float32]) */
}

def @func_10917(%var_10900: Tensor[(1815), float64]) -> (Tensor[(4, 3, 3), float32], Tensor[(4, 3, 3), float64], Tensor[(11, 11, 15), float64], Tensor[(1815), float64]) {
  %843 = @func_10791() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %844 = cast(%var_10900, dtype="float64") /* ty=Tensor[(1815), float64] */;
  %845 = cast(%var_10900, dtype="float64") /* ty=Tensor[(1815), float64] */;
  %846 = reshape(%844, newshape=[11, 11, 15]) /* ty=Tensor[(11, 11, 15), float64] */;
  %847 = reshape(%845, newshape=[11, 11, 15]) /* ty=Tensor[(11, 11, 15), float64] */;
  %848 = @func_9850(%846, %847) /* ty=(Tensor[(11, 11, 15), bool], Tensor[(11, 11, 15), float64]) */;
  %849 = @func_2658() /* ty=Tensor[(4, 3, 3), float32] */;
  %850 = %843.0;
  %851 = %848.1;
  (%849, %850, %851, %var_10900)
}

def @func_7920(%var_7894: Tensor[(84, 14), float32]) -> (Tensor[(4, 3, 3), float64], Tensor[(168), uint32], Tensor[(84, 14), float32], Tensor[(168), uint32], Tensor[(168), float32]) {
  %852 = cast(%var_7894, dtype="float32") /* ty=Tensor[(84, 14), float32] */;
  %853 = cast(meta[relay.Constant][33] /* ty=Tensor[(168), uint32] */, dtype="uint32") /* ty=Tensor[(168), uint32] */;
  %854 = reshape(%852, newshape=[12, 7, 14]) /* ty=Tensor[(12, 7, 14), float32] */;
  %855 = reshape(%853, newshape=[168]) /* ty=Tensor[(168), uint32] */;
  %856 = @func_7217(%854, %855) /* ty=(Tensor[(12, 7, 14), float32], Tensor[(7, 4, 6), uint32], Tensor[(168), uint32], Tensor[(4, 3, 3), float64], Tensor[(36), float64]) */;
  %857 = %856.2;
  %858 = cast(%857, dtype="float32") /* ty=Tensor[(168), float32] */;
  %859 = @func_7767() /* ty=Tensor[(4, 3, 3), float64] */;
  %860 = cast(%859, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
  %861 = reshape(%858, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %862 = reshape(%860, newshape=[4, 3, 3]) /* ty=Tensor[(4, 3, 3), float64] */;
  %863 = @func_1983(%861, %862) /* ty=(Tensor[(6, 2, 14), float32], Tensor[(168), float32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %864 = %863.1;
  (%859, %857, %var_7894, meta[relay.Constant][33] /* ty=Tensor[(168), uint32] */, %864)
}

def @func_15401() -> (Tensor[(4, 3, 3), uint64],) {
  %865 = @func_6544() /* ty=Tensor[(4, 3, 3), uint64] */;
  (%865,)
}

def @func_8509(%var_8507: Tensor[(13, 13, 15), uint16], %var_8508: Tensor[(13, 13, 15), uint16]) -> (Tensor[(13, 13, 15), float32], Tensor[(4, 3, 3), float64]) {
  %874 = fn (%var_8493: Tensor[(13, 13, 15), uint16], %var_8494: Tensor[(13, 13, 15), uint16]) -> (Tensor[(13, 13, 15), float32], Tensor[(4, 3, 3), float64]) {
    %866 = cast(%var_8494, dtype="bool") /* ty=Tensor[(13, 13, 15), bool] */;
    %867 = shape_of(%var_8493, dtype="int32") /* ty=Tensor[(3), int32] */;
    %868 = cast(%var_8493, dtype="bool") /* ty=Tensor[(13, 13, 15), bool] */;
    %869 = dyn.reshape(%866, %867, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %870 = not_equal(%868, %869) /* ty=Tensor[(13, 13, 15), bool] */;
    %871 = cast(%870, dtype="float32") /* ty=Tensor[(13, 13, 15), float32] */;
    %872 = acosh(%871) /* ty=Tensor[(13, 13, 15), float32] */;
    %873 = @func_3518() /* ty=Tensor[(4, 3, 3), float64] */;
    (%872, %873)
  };
  %874(%var_8507, %var_8508) /* ty=(Tensor[(13, 13, 15), float32], Tensor[(4, 3, 3), float64]) */
}

def @func_1830(%var_1829: Tensor[(168), float32]) -> (Tensor[(4, 3, 3), float32], Tensor[(6, 2, 14), float64], Tensor[(2366), int64], Tensor[(168), float32], Tensor[(6, 2, 14), float32]) {
  %890 = fn (%var_1818: Tensor[(168), float32]) -> (Tensor[(4, 3, 3), float32], Tensor[(6, 2, 14), float64], Tensor[(2366), int64], Tensor[(168), float32], Tensor[(6, 2, 14), float32]) {
    %875 = @func_1752() /* ty=Tensor[(4, 3, 3), float64] */;
    %876 = cast(%875, dtype="float32") /* ty=Tensor[(4, 3, 3), float32] */;
    %877 = cast(meta[relay.Constant][34] /* ty=Tensor[(2366), int64] */, dtype="int64") /* ty=Tensor[(2366), int64] */;
    %878 = cast(%var_1818, dtype="float32") /* ty=Tensor[(168), float32] */;
    %879 = reshape(%877, newshape=[13, 13, 14]) /* ty=Tensor[(13, 13, 14), int64] */;
    %880 = reshape(%878, newshape=[168]) /* ty=Tensor[(168), float32] */;
    %881 = @func_440(%879, %880) /* ty=(Tensor[(13, 13, 14), int64], Tensor[(6, 2, 14), float64], Tensor[(168), float32], Tensor[(6, 2, 14), float64], Tensor[(6, 2, 14), float32], Tensor[(6, 2, 14), float64]) */;
    %882 = cast(%var_1818, dtype="float32") /* ty=Tensor[(168), float32] */;
    %883 = %881.5;
    %884 = cast(%883, dtype="int8") /* ty=Tensor[(6, 2, 14), int8] */;
    %885 = reshape(%882, newshape=[6, 2, 14]) /* ty=Tensor[(6, 2, 14), float32] */;
    %886 = reshape(%884, newshape=[6, 2, 14]) /* ty=Tensor[(6, 2, 14), int8] */;
    %887 = @func_162(%885, %886) /* ty=(Tensor[(6, 2, 14), float32], Tensor[(6, 2, 14), float64], Tensor[(6, 2, 14), float64]) */;
    %888 = sigmoid(%876) /* ty=Tensor[(4, 3, 3), float32] */;
    %889 = %887.0;
    (%888, %883, meta[relay.Constant][34] /* ty=Tensor[(2366), int64] */, %var_1818, %889)
  };
  %890(%var_1829) /* ty=(Tensor[(4, 3, 3), float32], Tensor[(6, 2, 14), float64], Tensor[(2366), int64], Tensor[(168), float32], Tensor[(6, 2, 14), float32]) */
}

def @func_6928(%var_6927: Tensor[(6, 5, 9), bool]) -> Tensor[(6, 5, 9), int32] {
  %897 = fn (%var_6921: Tensor[(6, 5, 9), bool]) -> Tensor[(6, 5, 9), int32] {
    %891 = @func_6670() /* ty=(Tensor[(6, 5, 9), bool],) */;
    %892 = %891.0;
    %893 = cast(%var_6921, dtype="int32") /* ty=Tensor[(6, 5, 9), int32] */;
    %894 = shape_of(%892, dtype="int32") /* ty=Tensor[(3), int32] */;
    %895 = cast(%892, dtype="int32") /* ty=Tensor[(6, 5, 9), int32] */;
    %896 = dyn.reshape(%893, %894, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    maximum(%895, %896) /* ty=Tensor[(6, 5, 9), int32] */
  };
  %897(%var_6927) /* ty=Tensor[(6, 5, 9), int32] */
}

def @func_11067() -> (Tensor[(4, 3, 3), float64],) {
  %900 = fn () -> (Tensor[(4, 3, 3), float64],) {
    %898 = @func_8269() /* ty=(Tensor[(9, 12, 6), int16], Tensor[(4, 3, 3), float64]) */;
    %899 = %898.1;
    (%899,)
  };
  %900() /* ty=(Tensor[(4, 3, 3), float64],) */
}

def @func_11538() -> Tensor[(4, 3, 3), float64] {
  %902 = fn () -> Tensor[(4, 3, 3), float64] {
    %901 = @func_4550() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %901.0
  };
  %902() /* ty=Tensor[(4, 3, 3), float64] */
}

def @func_5518() -> (Tensor[(4, 3, 3), uint64], Tensor[(168), float32], Tensor[(168), float32]) {
  %903 = @func_5477() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(6, 2, 14), float32], Tensor[(2366), int64], Tensor[(168), float32]) */;
  %904 = @func_3975() /* ty=Tensor[(4, 3, 3), uint64] */;
  %905 = cast(%904, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
  %906 = reshape(%905, newshape=[4, 3, 3]) /* ty=Tensor[(4, 3, 3), float64] */;
  %907 = @func_2727(%906) /* ty=(Tensor[(6, 2, 14), float64], Tensor[(168), float32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %908 = %903.3;
  %909 = %907.1;
  (%904, %908, %909)
}

def @func_2252(%var_2250: Tensor[(4, 3, 3), float64]) -> (Tensor[(4, 3, 3), bool], Tensor[(2366), int64]) {
  @func_2249(%var_2250) /* ty=(Tensor[(4, 3, 3), bool], Tensor[(2366), int64]) */
}

def @func_2996() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  @func_2994() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */
}

def @func_4862(%var_4860: Tensor[(7, 4, 6), uint32]) -> (Tensor[(7, 4, 6), uint32],) {
  @func_4859(%var_4860) /* ty=(Tensor[(7, 4, 6), uint32],) */
}

def @func_5973() -> (Tensor[(4, 3, 3), uint64], Tensor[(4, 3, 3), float64]) {
  %910 = @func_3975() /* ty=Tensor[(4, 3, 3), uint64] */;
  %911 = @func_4264() /* ty=Tensor[(4, 3, 3), float64] */;
  (%910, %911)
}

def @func_12282() -> Tensor[(4, 3, 3), float64] {
  %913 = fn () -> Tensor[(4, 3, 3), float64] {
    %912 = @func_9342() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
    %912.0
  };
  %913() /* ty=Tensor[(4, 3, 3), float64] */
}

def @func_14866() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  %914 = @func_7564() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %915 = @func_11066() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %916 = %914.0;
  %917 = %915.0;
  (%916, %917)
}

def @func_7055() -> (Tensor[(4, 3, 3), uint64],) {
  %918 = @func_4351() /* ty=Tensor[(4, 3, 3), uint64] */;
  (%918,)
}

def @func_13416() -> Tensor[(4, 3, 3), float64] {
  %920 = fn () -> Tensor[(4, 3, 3), float64] {
    %919 = @func_7955() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %919.0
  };
  %920() /* ty=Tensor[(4, 3, 3), float64] */
}

def @func_3959(%var_3957: Tensor[(2366), int64], %var_3958: Tensor[(168), float32]) -> (Tensor[(4, 3, 3), float64], Tensor[(2366), int8], Tensor[(6, 2, 14), int64], Tensor[(4, 3, 3), float64]) {
  %942 = fn (%var_3894: Tensor[(2366), int64], %var_3895: Tensor[(168), float32]) -> (Tensor[(4, 3, 3), float64], Tensor[(2366), int8], Tensor[(6, 2, 14), int64], Tensor[(4, 3, 3), float64]) {
    %921 = @func_2778() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %922 = cast(meta[relay.Constant][35] /* ty=Tensor[(2366), int64] */, dtype="int8") /* ty=Tensor[(2366), int8] */;
    %923 = shape_of(%var_3894, dtype="int32") /* ty=Tensor[(1), int32] */;
    %924 = cast(%var_3894, dtype="int8") /* ty=Tensor[(2366), int8] */;
    %925 = dyn.reshape(%922, %923, newshape=[]) /* ty=Tensor[(?), int8] */;
    %926 = cast(%var_3894, dtype="int64") /* ty=Tensor[(2366), int64] */;
    %927 = cast(%var_3895, dtype="float32") /* ty=Tensor[(168), float32] */;
    %928 = reshape(%926, newshape=[13, 13, 14]) /* ty=Tensor[(13, 13, 14), int64] */;
    %929 = reshape(%927, newshape=[168]) /* ty=Tensor[(168), float32] */;
    %930 = @func_440(%928, %929) /* ty=(Tensor[(13, 13, 14), int64], Tensor[(6, 2, 14), float64], Tensor[(168), float32], Tensor[(6, 2, 14), float64], Tensor[(6, 2, 14), float32], Tensor[(6, 2, 14), float64]) */;
    %931 = %930.3;
    %932 = cast(%var_3895, dtype="int64") /* ty=Tensor[(168), int64] */;
    %933 = shape_of(%931, dtype="int32") /* ty=Tensor[(3), int32] */;
    %934 = cast(%931, dtype="int64") /* ty=Tensor[(6, 2, 14), int64] */;
    %935 = dyn.reshape(%932, %933, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %936 = @func_3218() /* ty=Tensor[(4, 3, 3), float64] */;
    %937 = cast(%936, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
    %938 = %921.0;
    %939 = right_shift(%924, %925) /* ty=Tensor[(2366), int8] */;
    %940 = bitwise_or(%934, %935) /* ty=Tensor[(6, 2, 14), int64] */;
    %941 = asin(%937) /* ty=Tensor[(4, 3, 3), float64] */;
    (%938, %939, %940, %941)
  };
  %942(%var_3957, %var_3958) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(2366), int8], Tensor[(6, 2, 14), int64], Tensor[(4, 3, 3), float64]) */
}

def @func_11733() -> (Tensor[(4, 3, 3), uint64], Tensor[(7, 4, 6), uint32], Tensor[(42, 4), uint32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  %943 = @func_5973() /* ty=(Tensor[(4, 3, 3), uint64], Tensor[(4, 3, 3), float64]) */;
  %944 = cast(meta[relay.Constant][36] /* ty=Tensor[(42, 4), uint32] */, dtype="uint32") /* ty=Tensor[(42, 4), uint32] */;
  %945 = reshape(%944, newshape=[7, 4, 6]) /* ty=Tensor[(7, 4, 6), uint32] */;
  %946 = @func_4859(%945) /* ty=(Tensor[(7, 4, 6), uint32],) */;
  %947 = @func_9232() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %948 = %943.0;
  %949 = %946.0;
  %950 = @func_2465() /* ty=Tensor[(4, 3, 3), float64] */;
  %951 = %947.0;
  (%948, %949, meta[relay.Constant][36] /* ty=Tensor[(42, 4), uint32] */, %950, %951)
}

def @func_10869() -> (Tensor[(4, 3, 3), float64], Tensor[(6, 2, 14), bool], Tensor[(4, 3, 3), bool]) {
  %958 = fn () -> (Tensor[(4, 3, 3), float64], Tensor[(6, 2, 14), bool], Tensor[(4, 3, 3), bool]) {
    %952 = @func_9508() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), uint64]) */;
    %953 = @func_6314() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(6, 2, 14), bool]) */;
    %954 = @func_4395() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), bool]) */;
    %955 = %952.0;
    %956 = %953.2;
    %957 = %954.1;
    (%955, %956, %957)
  };
  %958() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(6, 2, 14), bool], Tensor[(4, 3, 3), bool]) */
}

def @func_7104() -> (Tensor[(4, 3, 3), float64],) {
  %960 = fn () -> (Tensor[(4, 3, 3), float64],) {
    %959 = @func_4264() /* ty=Tensor[(4, 3, 3), float64] */;
    (%959,)
  };
  %960() /* ty=(Tensor[(4, 3, 3), float64],) */
}

def @func_11450() -> (Tensor[(4, 3, 3), float64],) {
  %961 = @func_3451() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %962 = %961.0;
  (%962,)
}

def @func_15697(%var_15696: Tensor[(2366), int64]) -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(2366), int64], Tensor[(2366), int64]) {
  %971 = fn (%var_15693: Tensor[(2366), int64]) -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(2366), int64], Tensor[(2366), int64]) {
    %963 = @func_12881() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %964 = @func_9342() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
    %965 = cast(%var_15693, dtype="int64") /* ty=Tensor[(2366), int64] */;
    %966 = reshape(%965, newshape=[2366]) /* ty=Tensor[(2366), int64] */;
    %967 = @func_4946(%966) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(2366), int64], Tensor[(4, 3, 3), float64]) */;
    %968 = %963.0;
    %969 = %964.1;
    %970 = %967.2;
    (%968, %969, %970, %var_15693)
  };
  %971(%var_15696) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(2366), int64], Tensor[(2366), int64]) */
}

def @func_12271() -> (Tensor[(4, 3, 3), float64],) {
  @func_12269() /* ty=(Tensor[(4, 3, 3), float64],) */
}

def @func_2881(%var_2880: Tensor[(4, 3, 3), float32]) -> Tensor[(4, 3, 3), int8] {
  %977 = fn (%var_2865: Tensor[(4, 3, 3), float32]) -> Tensor[(4, 3, 3), int8] {
    %972 = @func_2658() /* ty=Tensor[(4, 3, 3), float32] */;
    %973 = cast(%var_2865, dtype="int8") /* ty=Tensor[(4, 3, 3), int8] */;
    %974 = shape_of(%972, dtype="int32") /* ty=Tensor[(3), int32] */;
    %975 = cast(%972, dtype="int8") /* ty=Tensor[(4, 3, 3), int8] */;
    %976 = dyn.reshape(%973, %974, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    logical_xor(%975, %976) /* ty=Tensor[(4, 3, 3), int8] */
  };
  %977(%var_2880) /* ty=Tensor[(4, 3, 3), int8] */
}

def @func_1490(%var_1488: uint32, %var_1489: Tensor[(1, 6), uint32]) -> (Tensor[(1, 6), uint32],) {
  %981 = fn (%var_1468: uint32, %var_1469: Tensor[(1, 6), uint32]) -> (Tensor[(1, 6), uint32],) {
    %978 = cast(%var_1468, dtype="uint32") /* ty=uint32 */;
    %979 = cast(%var_1469, dtype="uint32") /* ty=Tensor[(1, 6), uint32] */;
    %980 = multiply(%978, %979) /* ty=Tensor[(1, 6), uint32] */;
    (%980,)
  };
  %981(%var_1488, %var_1489) /* ty=(Tensor[(1, 6), uint32],) */
}

def @func_10255() -> (Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), float64]) {
  %986 = fn () -> (Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), float64]) {
    %982 = @func_9993() /* ty=(Tensor[(4, 3, 3), bool],) */;
    %983 = @func_9543() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float32], Tensor[(13, 182), int64], Tensor[(42, 4), bool], Tensor[(6, 28), float32], Tensor[(4, 3, 3), float64]) */;
    %984 = %982.0;
    %985 = %983.5;
    (%984, %985)
  };
  %986() /* ty=(Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), float64]) */
}

def @func_5186() -> (Tensor[(4, 3, 3), float64],) {
  %989 = fn () -> (Tensor[(4, 3, 3), float64],) {
    %987 = @func_2061() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %988 = %987.0;
    (%988,)
  };
  %989() /* ty=(Tensor[(4, 3, 3), float64],) */
}

def @func_13676() -> (Tensor[(6, 5, 9), float32], Tensor[(4, 3, 3), bool]) {
  %994 = fn () -> (Tensor[(6, 5, 9), float32], Tensor[(4, 3, 3), bool]) {
    %990 = @func_11812() /* ty=(Tensor[(6, 5, 9), float32],) */;
    %991 = @func_12601() /* ty=(Tensor[(4, 3, 3), bool],) */;
    %992 = %990.0;
    %993 = %991.0;
    (%992, %993)
  };
  %994() /* ty=(Tensor[(6, 5, 9), float32], Tensor[(4, 3, 3), bool]) */
}

def @func_14360() -> (Tensor[(4, 3, 3), float64],) {
  %995 = @func_12269() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %996 = %995.0;
  (%996,)
}

def @func_10286() -> (Tensor[(6, 5, 9), float32],) {
  %1001 = fn () -> (Tensor[(6, 5, 9), float32],) {
    %997 = @func_6670() /* ty=(Tensor[(6, 5, 9), bool],) */;
    %998 = %997.0;
    %999 = cast(%998, dtype="float32") /* ty=Tensor[(6, 5, 9), float32] */;
    %1000 = sqrt(%999) /* ty=Tensor[(6, 5, 9), float32] */;
    (%1000,)
  };
  %1001() /* ty=(Tensor[(6, 5, 9), float32],) */
}

def @func_10510() -> (Tensor[(4, 3, 3), float64], Tensor[(6, 2, 14), bool]) {
  %1013 = fn () -> (Tensor[(4, 3, 3), float64], Tensor[(6, 2, 14), bool]) {
    %1002 = @func_8771() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %1003 = cast(meta[relay.Constant][37] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
    %1004 = reshape(%1003, newshape=[168]) /* ty=Tensor[(168), float32] */;
    %1005 = @func_1828(%1004) /* ty=(Tensor[(4, 3, 3), float32], Tensor[(6, 2, 14), float64], Tensor[(2366), int64], Tensor[(168), float32], Tensor[(6, 2, 14), float32]) */;
    %1006 = %1005.1;
    %1007 = cast(meta[relay.Constant][37] /* ty=Tensor[(168), float32] */, dtype="bool") /* ty=Tensor[(168), bool] */;
    %1008 = shape_of(%1006, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1009 = cast(%1006, dtype="bool") /* ty=Tensor[(6, 2, 14), bool] */;
    %1010 = dyn.reshape(%1007, %1008, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1011 = %1002.0;
    %1012 = not_equal(%1009, %1010) /* ty=Tensor[(6, 2, 14), bool] */;
    (%1011, %1012)
  };
  %1013() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(6, 2, 14), bool]) */
}

def @func_13624() -> (Tensor[(4, 3, 3), uint64], Tensor[(7, 10, 4), bool], Tensor[(280), float32]) {
  %1021 = fn () -> (Tensor[(4, 3, 3), uint64], Tensor[(7, 10, 4), bool], Tensor[(280), float32]) {
    %1014 = @func_9508() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), uint64]) */;
    %1015 = cast(meta[relay.Constant][38] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
    %1016 = cast(meta[relay.Constant][38] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
    %1017 = reshape(%1015, newshape=[7, 10, 4]) /* ty=Tensor[(7, 10, 4), float32] */;
    %1018 = reshape(%1016, newshape=[7, 10, 4]) /* ty=Tensor[(7, 10, 4), float32] */;
    %1019 = %1014.1;
    %1020 = @func_6793(%1017, %1018) /* ty=Tensor[(7, 10, 4), bool] */;
    (%1019, %1020, meta[relay.Constant][38] /* ty=Tensor[(280), float32] */)
  };
  %1021() /* ty=(Tensor[(4, 3, 3), uint64], Tensor[(7, 10, 4), bool], Tensor[(280), float32]) */
}

def @func_3490() -> (Tensor[(4, 3, 3), float64],) {
  @func_3488() /* ty=(Tensor[(4, 3, 3), float64],) */
}

def @func_4056(%var_4040: Tensor[(4, 3, 3), float64]) -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float32]) {
  %1022 = @func_2386() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(168), float32], Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), float32], Tensor[(4, 3, 3), bool]) */;
  %1023 = @func_2061() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %1024 = %1023.0;
  %1025 = cast(%var_4040, dtype="float32") /* ty=Tensor[(4, 3, 3), float32] */;
  %1026 = shape_of(%1024, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1027 = cast(%1024, dtype="float32") /* ty=Tensor[(4, 3, 3), float32] */;
  %1028 = dyn.reshape(%1025, %1026, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1029 = @func_3800() /* ty=Tensor[(4, 3, 3), float64] */;
  %1030 = %1022.0;
  %1031 = power(%1027, %1028) /* ty=Tensor[(4, 3, 3), float32] */;
  (%1029, %1030, %1031)
}

def @func_11600() -> Tensor[(4, 3, 3), uint64] {
  @func_11598() /* ty=Tensor[(4, 3, 3), uint64] */
}

def @func_5520() -> (Tensor[(4, 3, 3), uint64], Tensor[(168), float32], Tensor[(168), float32]) {
  @func_5518() /* ty=(Tensor[(4, 3, 3), uint64], Tensor[(168), float32], Tensor[(168), float32]) */
}

def @func_3220() -> Tensor[(4, 3, 3), float64] {
  @func_3218() /* ty=Tensor[(4, 3, 3), float64] */
}

def @func_6984() -> (Tensor[(4, 3, 3), float64],) {
  @func_6982() /* ty=(Tensor[(4, 3, 3), float64],) */
}

def @func_14140() -> (Tensor[(168), float32], Tensor[(4, 3, 3), float64]) {
  %1035 = fn () -> (Tensor[(168), float32], Tensor[(4, 3, 3), float64]) {
    %1032 = @func_4289() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %1033 = @func_6247() /* ty=Tensor[(168), float32] */;
    %1034 = %1032.0;
    (%1033, %1034)
  };
  %1035() /* ty=(Tensor[(168), float32], Tensor[(4, 3, 3), float64]) */
}

def @func_3153(%var_3152: Tensor[(4, 3, 3), float64]) -> Tensor[(4, 3, 3), bool] {
  %1041 = fn (%var_3142: Tensor[(4, 3, 3), float64]) -> Tensor[(4, 3, 3), bool] {
    %1036 = @func_2846() /* ty=Tensor[(4, 3, 3), float64] */;
    %1037 = cast(%var_3142, dtype="bool") /* ty=Tensor[(4, 3, 3), bool] */;
    %1038 = shape_of(%1036, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1039 = cast(%1036, dtype="bool") /* ty=Tensor[(4, 3, 3), bool] */;
    %1040 = dyn.reshape(%1037, %1038, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    greater(%1039, %1040) /* ty=Tensor[(4, 3, 3), bool] */
  };
  %1041(%var_3152) /* ty=Tensor[(4, 3, 3), bool] */
}

def @func_14048() -> (Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  %1047 = fn () -> (Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
    %1042 = @func_8671() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
    %1043 = @func_8954() /* ty=(Tensor[(168), float32], Tensor[(4, 3, 3), float64]) */;
    %1044 = @func_9923() /* ty=Tensor[(4, 3, 3), bool] */;
    %1045 = %1042.0;
    %1046 = %1043.1;
    (%1044, %1045, %1046)
  };
  %1047() /* ty=(Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */
}

def @func_2386() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(168), float32], Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), float32], Tensor[(4, 3, 3), bool]) {
  %1048 = @func_1870() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %1049 = @func_2061() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %1050 = cast(meta[relay.Constant][39] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %1051 = %1049.0;
  %1052 = cast(%1051, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
  %1053 = reshape(%1050, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %1054 = reshape(%1052, newshape=[4, 3, 3]) /* ty=Tensor[(4, 3, 3), float64] */;
  %1055 = @func_1983(%1053, %1054) /* ty=(Tensor[(6, 2, 14), float32], Tensor[(168), float32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %1056 = %1055.2;
  %1057 = cast(%1056, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
  %1058 = reshape(%1057, newshape=[4, 3, 3]) /* ty=Tensor[(4, 3, 3), float64] */;
  %1059 = @func_2249(%1058) /* ty=(Tensor[(4, 3, 3), bool], Tensor[(2366), int64]) */;
  %1060 = cast(%1056, dtype="float32") /* ty=Tensor[(4, 3, 3), float32] */;
  %1061 = cast(%1056, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
  %1062 = reshape(%1061, newshape=[4, 3, 3]) /* ty=Tensor[(4, 3, 3), float64] */;
  %1063 = @func_2249(%1062) /* ty=(Tensor[(4, 3, 3), bool], Tensor[(2366), int64]) */;
  %1064 = %1048.0;
  %1065 = %1059.0;
  %1066 = exp(%1060) /* ty=Tensor[(4, 3, 3), float32] */;
  %1067 = %1063.0;
  (%1064, %1051, meta[relay.Constant][39] /* ty=Tensor[(168), float32] */, %1065, %1066, %1067)
}

def @func_5726() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float32], Tensor[(168), float32], Tensor[(1183, 2), int64], Tensor[(42, 4), float32]) {
  %1077 = fn () -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float32], Tensor[(168), float32], Tensor[(1183, 2), int64], Tensor[(42, 4), float32]) {
    %1068 = @func_2778() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %1069 = cast(meta[relay.Constant][40] /* ty=Tensor[(1183, 2), int64] */, dtype="int64") /* ty=Tensor[(1183, 2), int64] */;
    %1070 = cast(meta[relay.Constant][41] /* ty=Tensor[(42, 4), float32] */, dtype="float32") /* ty=Tensor[(42, 4), float32] */;
    %1071 = reshape(%1069, newshape=[13, 13, 14]) /* ty=Tensor[(13, 13, 14), int64] */;
    %1072 = reshape(%1070, newshape=[168]) /* ty=Tensor[(168), float32] */;
    %1073 = @func_440(%1071, %1072) /* ty=(Tensor[(13, 13, 14), int64], Tensor[(6, 2, 14), float64], Tensor[(168), float32], Tensor[(6, 2, 14), float64], Tensor[(6, 2, 14), float32], Tensor[(6, 2, 14), float64]) */;
    %1074 = %1068.0;
    %1075 = @func_2658() /* ty=Tensor[(4, 3, 3), float32] */;
    %1076 = %1073.2;
    (%1074, %1075, %1076, meta[relay.Constant][40] /* ty=Tensor[(1183, 2), int64] */, meta[relay.Constant][41] /* ty=Tensor[(42, 4), float32] */)
  };
  %1077() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float32], Tensor[(168), float32], Tensor[(1183, 2), int64], Tensor[(42, 4), float32]) */
}

def @func_11813() -> (Tensor[(6, 5, 9), float32],) {
  %1082 = fn () -> (Tensor[(6, 5, 9), float32],) {
    %1078 = @func_6670() /* ty=(Tensor[(6, 5, 9), bool],) */;
    %1079 = %1078.0;
    %1080 = cast(%1079, dtype="float32") /* ty=Tensor[(6, 5, 9), float32] */;
    %1081 = asin(%1080) /* ty=Tensor[(6, 5, 9), float32] */;
    (%1081,)
  };
  %1082() /* ty=(Tensor[(6, 5, 9), float32],) */
}

def @func_9850(%var_9833: Tensor[(11, 11, 15), float64], %var_9834: Tensor[(11, 11, 15), float64]) -> (Tensor[(11, 11, 15), bool], Tensor[(11, 11, 15), float64]) {
  %1083 = cast(%var_9834, dtype="bool") /* ty=Tensor[(11, 11, 15), bool] */;
  %1084 = shape_of(%var_9833, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1085 = cast(%var_9833, dtype="bool") /* ty=Tensor[(11, 11, 15), bool] */;
  %1086 = dyn.reshape(%1083, %1084, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1087 = cast(%var_9834, dtype="float64") /* ty=Tensor[(11, 11, 15), float64] */;
  %1088 = not_equal(%1085, %1086) /* ty=Tensor[(11, 11, 15), bool] */;
  %1089 = sigmoid(%1087) /* ty=Tensor[(11, 11, 15), float64] */;
  (%1088, %1089)
}

def @func_5260() -> (Tensor[(4, 3, 3), float64],) {
  @func_5258() /* ty=(Tensor[(4, 3, 3), float64],) */
}

def @func_2994() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  %1090 = @func_2542() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), int16], Tensor[(4, 3, 3), float64]) */;
  %1091 = @func_2465() /* ty=Tensor[(4, 3, 3), float64] */;
  %1092 = %1090.3;
  (%1091, %1092)
}

def @func_6982() -> (Tensor[(4, 3, 3), float64],) {
  %1093 = @func_2778() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %1094 = %1093.0;
  (%1094,)
}

def @func_9510() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), uint64]) {
  @func_9508() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), uint64]) */
}

def @func_14476() -> Tensor[(4, 3, 3), bool] {
  @func_14474() /* ty=Tensor[(4, 3, 3), bool] */
}

def @func_12493() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(1170), uint16]) {
  @func_12491() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(1170), uint16]) */
}

def @func_7317() -> (Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), uint64]) {
  %1099 = fn () -> (Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), uint64]) {
    %1095 = @func_6131() /* ty=(Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), uint64]) */;
    %1096 = @func_6172() /* ty=(Tensor[(4, 3, 3), uint64],) */;
    %1097 = %1095.0;
    %1098 = %1096.0;
    (%1097, %1098)
  };
  %1099() /* ty=(Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), uint64]) */
}

def @func_11637() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), uint64], Tensor[(168), float32], Tensor[(4, 3, 3), float64]) {
  %1108 = fn () -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), uint64], Tensor[(168), float32], Tensor[(4, 3, 3), float64]) {
    %1100 = @func_5185() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %1101 = @func_9594() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), uint64]) */;
    %1102 = @func_2386() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(168), float32], Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), float32], Tensor[(4, 3, 3), bool]) */;
    %1103 = @func_3488() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %1104 = %1100.0;
    %1105 = %1101.1;
    %1106 = %1102.2;
    %1107 = %1103.0;
    (%1104, %1105, %1106, %1107)
  };
  %1108() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), uint64], Tensor[(168), float32], Tensor[(4, 3, 3), float64]) */
}

def @func_9234() -> (Tensor[(4, 3, 3), float64],) {
  @func_9232() /* ty=(Tensor[(4, 3, 3), float64],) */
}

def @func_8171() -> Tensor[(168), float32] {
  %1109 = @func_5518() /* ty=(Tensor[(4, 3, 3), uint64], Tensor[(168), float32], Tensor[(168), float32]) */;
  %1109.2
}

def @func_14321() -> (Tensor[(4, 3, 3), float64],) {
  @func_14319() /* ty=(Tensor[(4, 3, 3), float64],) */
}

def @func_9394(%var_9392: Tensor[(270, 1), bool]) -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(6, 5, 9), int32], Tensor[(270, 1), bool]) {
  @func_9391(%var_9392) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(6, 5, 9), int32], Tensor[(270, 1), bool]) */
}

def @func_7057() -> (Tensor[(4, 3, 3), uint64],) {
  @func_7055() /* ty=(Tensor[(4, 3, 3), uint64],) */
}

def @func_6132() -> (Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), uint64]) {
  %1113 = fn () -> (Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), uint64]) {
    %1110 = @func_4395() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), bool]) */;
    %1111 = %1110.1;
    %1112 = @func_3975() /* ty=Tensor[(4, 3, 3), uint64] */;
    (%1111, %1112)
  };
  %1113() /* ty=(Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), uint64]) */
}

def @func_5668() -> (Tensor[(4, 3, 3), float64],) {
  %1116 = fn () -> (Tensor[(4, 3, 3), float64],) {
    %1114 = @func_3582() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %1115 = %1114.0;
    (%1115,)
  };
  %1116() /* ty=(Tensor[(4, 3, 3), float64],) */
}

def @func_11735() -> (Tensor[(4, 3, 3), uint64], Tensor[(7, 4, 6), uint32], Tensor[(42, 4), uint32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  @func_11733() /* ty=(Tensor[(4, 3, 3), uint64], Tensor[(7, 4, 6), uint32], Tensor[(42, 4), uint32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */
}

def @main(%var_16262: Tensor[(11, 6, 13), float64]) -> Tensor[(11, 6, 13), float64] {
  %1117 = cast(%var_16262, dtype="float64") /* ty=Tensor[(11, 6, 13), float64] */;
  rsqrt(%1117) /* ty=Tensor[(11, 6, 13), float64] */
}

def @func_11464() -> (Tensor[(4, 3, 3), uint64],) {
  @func_11462() /* ty=(Tensor[(4, 3, 3), uint64],) */
}

def @func_16075() -> (Tensor[(4, 3, 3), float64],) {
  %1120 = fn () -> (Tensor[(4, 3, 3), float64],) {
    %1118 = @func_1870() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %1119 = %1118.0;
    (%1119,)
  };
  %1120() /* ty=(Tensor[(4, 3, 3), float64],) */
}

def @func_10793() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  @func_10791() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */
}

def @func_12085(%var_12071: Tensor[(4, 10, 8), float32], %var_12072: Tensor[(4, 10, 8), float32]) -> (Tensor[(4, 10, 8), float32],) {
  %1121 = cast(%var_12072, dtype="float32") /* ty=Tensor[(4, 10, 8), float32] */;
  %1122 = shape_of(%var_12071, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1123 = cast(%var_12071, dtype="float32") /* ty=Tensor[(4, 10, 8), float32] */;
  %1124 = dyn.reshape(%1121, %1122, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1125 = divide(%1123, %1124) /* ty=Tensor[(4, 10, 8), float32] */;
  (%1125,)
}

def @func_3266() -> (Tensor[(4, 3, 3), float64],) {
  %1126 = @func_2581() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %1127 = %1126.0;
  (%1127,)
}

def @func_4804(%var_4803: Tensor[(2366), int64]) -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(2366), int64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), bool], Tensor[(42, 4), float32], Tensor[(168), float32]) {
  %1165 = fn (%var_4695: Tensor[(2366), int64]) -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(2366), int64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), bool], Tensor[(42, 4), float32], Tensor[(168), float32]) {
    %1128 = @func_4550() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %1129 = cast(%var_4695, dtype="int64") /* ty=Tensor[(2366), int64] */;
    %1130 = cast(meta[relay.Constant][42] /* ty=Tensor[(42, 4), float32] */, dtype="float32") /* ty=Tensor[(42, 4), float32] */;
    %1131 = reshape(%1129, newshape=[2366]) /* ty=Tensor[(2366), int64] */;
    %1132 = reshape(%1130, newshape=[168]) /* ty=Tensor[(168), float32] */;
    %1133 = @func_3956(%1131, %1132) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(2366), int8], Tensor[(6, 2, 14), int64], Tensor[(4, 3, 3), float64]) */;
    %1134 = cast(meta[relay.Constant][42] /* ty=Tensor[(42, 4), float32] */, dtype="float32") /* ty=Tensor[(42, 4), float32] */;
    %1135 = @func_1752() /* ty=Tensor[(4, 3, 3), float64] */;
    %1136 = cast(%1135, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
    %1137 = reshape(%1134, newshape=[168]) /* ty=Tensor[(168), float32] */;
    %1138 = reshape(%1136, newshape=[4, 3, 3]) /* ty=Tensor[(4, 3, 3), float64] */;
    %1139 = @func_1983(%1137, %1138) /* ty=(Tensor[(6, 2, 14), float32], Tensor[(168), float32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
    %1140 = @func_3266() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %1141 = @func_4550() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %1142 = cast(%var_4695, dtype="int64") /* ty=Tensor[(2366), int64] */;
    %1143 = reshape(%1142, newshape=[2366]) /* ty=Tensor[(2366), int64] */;
    %1144 = @func_2091(%1143) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(168), float32], Tensor[(4, 3, 3), float64], Tensor[(6, 2, 14), float64], Tensor[(2366), int64]) */;
    %1145 = @func_4395() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), bool]) */;
    %1146 = cast(meta[relay.Constant][42] /* ty=Tensor[(42, 4), float32] */, dtype="float32") /* ty=Tensor[(42, 4), float32] */;
    %1147 = cast(meta[relay.Constant][42] /* ty=Tensor[(42, 4), float32] */, dtype="float32") /* ty=Tensor[(42, 4), float32] */;
    %1148 = reshape(%1147, newshape=[168]) /* ty=Tensor[(168), float32] */;
    %1149 = @func_1828(%1148) /* ty=(Tensor[(4, 3, 3), float32], Tensor[(6, 2, 14), float64], Tensor[(2366), int64], Tensor[(168), float32], Tensor[(6, 2, 14), float32]) */;
    %1150 = @func_4408() /* ty=Tensor[(4, 3, 3), float64] */;
    %1151 = %1128.0;
    %1152 = @func_1752() /* ty=Tensor[(4, 3, 3), float64] */;
    %1153 = %1133.0;
    %1154 = @func_3218() /* ty=Tensor[(4, 3, 3), float64] */;
    %1155 = @func_3800() /* ty=Tensor[(4, 3, 3), float64] */;
    %1156 = %1139.2;
    %1157 = %1140.0;
    %1158 = %1141.0;
    %1159 = @func_4335() /* ty=Tensor[(4, 3, 3), float64] */;
    %1160 = @func_4264() /* ty=Tensor[(4, 3, 3), float64] */;
    %1161 = %1144.0;
    %1162 = %1145.1;
    %1163 = exp(%1146) /* ty=Tensor[(42, 4), float32] */;
    %1164 = %1149.3;
    (%1150, %1151, %1135, %1152, %1153, %var_4695, %1154, %1155, %1156, %1157, %1158, %1159, %1160, %1161, %1162, %1163, %1164)
  };
  %1165(%var_4803) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(2366), int64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), bool], Tensor[(42, 4), float32], Tensor[(168), float32]) */
}

def @func_16029() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  %1170 = fn () -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
    %1166 = @func_7967() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %1167 = @func_6029() /* ty=(Tensor[(7, 4, 6), float64], Tensor[(168), float32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), bool]) */;
    %1168 = %1166.0;
    %1169 = %1167.2;
    (%1168, %1169)
  };
  %1170() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */
}

def @func_7889() -> Tensor[(9, 12, 6), int16] {
  %1171 = fn () -> Tensor[(9, 12, 6), int16] {
    @func_6332() /* ty=Tensor[(9, 12, 6), int16] */
  };
  %1171() /* ty=Tensor[(9, 12, 6), int16] */
}

def @func_166(%var_164: Tensor[(6, 2, 14), float32], %var_165: Tensor[(6, 2, 14), int8]) -> (Tensor[(6, 2, 14), float32], Tensor[(6, 2, 14), float64], Tensor[(6, 2, 14), float64]) {
  @func_162(%var_164, %var_165) /* ty=(Tensor[(6, 2, 14), float32], Tensor[(6, 2, 14), float64], Tensor[(6, 2, 14), float64]) */
}

def @func_9961() -> (Tensor[(4, 3, 3), float32],) {
  %1174 = fn () -> (Tensor[(4, 3, 3), float32],) {
    %1172 = @func_6637() /* ty=(Tensor[(4, 3, 3), float32],) */;
    %1173 = %1172.0;
    (%1173,)
  };
  %1174() /* ty=(Tensor[(4, 3, 3), float32],) */
}

def @func_3197() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float32], Tensor[(4, 3, 3), float64]) {
  %1180 = fn () -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float32], Tensor[(4, 3, 3), float64]) {
    %1175 = @func_2581() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %1176 = @func_2778() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %1177 = %1175.0;
    %1178 = @func_2658() /* ty=Tensor[(4, 3, 3), float32] */;
    %1179 = %1176.0;
    (%1177, %1178, %1179)
  };
  %1180() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float32], Tensor[(4, 3, 3), float64]) */
}

def @func_11598() -> Tensor[(4, 3, 3), uint64] {
  @func_8487() /* ty=Tensor[(4, 3, 3), uint64] */
}

def @func_5546() -> (Tensor[(4, 3, 3), float64],) {
  @func_5544() /* ty=(Tensor[(4, 3, 3), float64],) */
}

def @func_7373() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  %1181 = @func_2828() /* ty=Tensor[(4, 3, 3), float64] */;
  %1182 = @func_6708() /* ty=Tensor[(4, 3, 3), float64] */;
  (%1181, %1182)
}

def @func_1754() -> Tensor[(4, 3, 3), float64] {
  @func_1752() /* ty=Tensor[(4, 3, 3), float64] */
}

def @func_10809() -> (Tensor[(4, 3, 3), float64],) {
  %1185 = fn () -> (Tensor[(4, 3, 3), float64],) {
    %1183 = @func_4511() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
    %1184 = %1183.1;
    (%1184,)
  };
  %1185() /* ty=(Tensor[(4, 3, 3), float64],) */
}

def @func_9059() -> (Tensor[(4, 3, 3), uint64],) {
  %1188 = fn () -> (Tensor[(4, 3, 3), uint64],) {
    %1186 = @func_6172() /* ty=(Tensor[(4, 3, 3), uint64],) */;
    %1187 = %1186.0;
    (%1187,)
  };
  %1188() /* ty=(Tensor[(4, 3, 3), uint64],) */
}

def @func_6594(%var_6592: Tensor[(36), float64]) -> (Tensor[(6, 2, 14), bool], Tensor[(4, 3, 3), float64], Tensor[(36), float64], Tensor[(6, 2, 14), float64]) {
  @func_6591(%var_6592) /* ty=(Tensor[(6, 2, 14), bool], Tensor[(4, 3, 3), float64], Tensor[(36), float64], Tensor[(6, 2, 14), float64]) */
}

def @func_11554() -> Tensor[(4, 3, 3), float64] {
  %1190 = fn () -> Tensor[(4, 3, 3), float64] {
    %1189 = @func_9342() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
    %1189.0
  };
  %1190() /* ty=Tensor[(4, 3, 3), float64] */
}

def @func_2941() -> Tensor[(4, 3, 3), float64] {
  %1191 = fn () -> Tensor[(4, 3, 3), float64] {
    @func_1752() /* ty=Tensor[(4, 3, 3), float64] */
  };
  %1191() /* ty=Tensor[(4, 3, 3), float64] */
}

def @func_13548() -> (Tensor[(4, 3, 3), float64],) {
  %1192 = @func_5973() /* ty=(Tensor[(4, 3, 3), uint64], Tensor[(4, 3, 3), float64]) */;
  %1193 = %1192.1;
  (%1193,)
}

def @func_5544() -> (Tensor[(4, 3, 3), float64],) {
  %1194 = @func_3451() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %1195 = %1194.0;
  (%1195,)
}

def @func_4408() -> Tensor[(4, 3, 3), float64] {
  @func_4233() /* ty=Tensor[(4, 3, 3), float64] */
}

def @func_12206() -> (Tensor[(4, 3, 3), uint64], Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  @func_12204() /* ty=(Tensor[(4, 3, 3), uint64], Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */
}

def @func_3977() -> Tensor[(4, 3, 3), uint64] {
  @func_3975() /* ty=Tensor[(4, 3, 3), uint64] */
}

def @func_6514() -> (Tensor[(4, 3, 3), float64],) {
  %1197 = fn () -> (Tensor[(4, 3, 3), float64],) {
    %1196 = @func_3233() /* ty=Tensor[(4, 3, 3), float64] */;
    (%1196,)
  };
  %1197() /* ty=(Tensor[(4, 3, 3), float64],) */
}

def @func_15741() -> (Tensor[(4, 3, 3), float64],) {
  %1199 = fn () -> (Tensor[(4, 3, 3), float64],) {
    %1198 = @func_12281() /* ty=Tensor[(4, 3, 3), float64] */;
    (%1198,)
  };
  %1199() /* ty=(Tensor[(4, 3, 3), float64],) */
}

def @func_15782() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(1170), uint16], Tensor[(4, 3, 3), bool]) {
  %1209 = fn () -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(1170), uint16], Tensor[(4, 3, 3), bool]) {
    %1200 = cast(meta[relay.Constant][43] /* ty=Tensor[(1170), uint16] */, dtype="uint16") /* ty=Tensor[(1170), uint16] */;
    %1201 = reshape(%1200, newshape=[1170]) /* ty=Tensor[(1170), uint16] */;
    %1202 = @func_5380(%1201) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float32], Tensor[(1170), uint16], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
    %1203 = %1202.3;
    %1204 = cast(%1203, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
    %1205 = reshape(%1204, newshape=[4, 3, 3]) /* ty=Tensor[(4, 3, 3), float64] */;
    %1206 = @func_2249(%1205) /* ty=(Tensor[(4, 3, 3), bool], Tensor[(2366), int64]) */;
    %1207 = @func_2846() /* ty=Tensor[(4, 3, 3), float64] */;
    %1208 = %1206.0;
    (%1207, %1203, meta[relay.Constant][43] /* ty=Tensor[(1170), uint16] */, %1208)
  };
  %1209() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(1170), uint16], Tensor[(4, 3, 3), bool]) */
}

def @func_15929() -> (Tensor[(4, 3, 3), float64],) {
  @func_15927() /* ty=(Tensor[(4, 3, 3), float64],) */
}

def @func_3446(%var_3445: Tensor[(3, 56), float32]) -> (Tensor[(4, 3, 3), float32], Tensor[(6, 2, 14), float64], Tensor[(3, 56), float32]) {
  %1217 = fn (%var_3433: Tensor[(3, 56), float32]) -> (Tensor[(4, 3, 3), float32], Tensor[(6, 2, 14), float64], Tensor[(3, 56), float32]) {
    %1210 = cast(%var_3433, dtype="float32") /* ty=Tensor[(3, 56), float32] */;
    %1211 = cast(%var_3433, dtype="int8") /* ty=Tensor[(3, 56), int8] */;
    %1212 = reshape(%1210, newshape=[6, 2, 14]) /* ty=Tensor[(6, 2, 14), float32] */;
    %1213 = reshape(%1211, newshape=[6, 2, 14]) /* ty=Tensor[(6, 2, 14), int8] */;
    %1214 = @func_162(%1212, %1213) /* ty=(Tensor[(6, 2, 14), float32], Tensor[(6, 2, 14), float64], Tensor[(6, 2, 14), float64]) */;
    %1215 = @func_2658() /* ty=Tensor[(4, 3, 3), float32] */;
    %1216 = %1214.1;
    (%1215, %1216, %var_3433)
  };
  %1217(%var_3445) /* ty=(Tensor[(4, 3, 3), float32], Tensor[(6, 2, 14), float64], Tensor[(3, 56), float32]) */
}

def @func_15403() -> (Tensor[(4, 3, 3), uint64],) {
  @func_15401() /* ty=(Tensor[(4, 3, 3), uint64],) */
}

def @func_8472(%var_8470: Tensor[(2366), int64]) -> (Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), uint64], Tensor[(2366), int64], Tensor[(2366), int64]) {
  @func_8469(%var_8470) /* ty=(Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), uint64], Tensor[(2366), int64], Tensor[(2366), int64]) */
}

def @func_4352() -> Tensor[(4, 3, 3), uint64] {
  %1218 = fn () -> Tensor[(4, 3, 3), uint64] {
    @func_3975() /* ty=Tensor[(4, 3, 3), uint64] */
  };
  %1218() /* ty=Tensor[(4, 3, 3), uint64] */
}

def @func_15667() -> (Tensor[(4, 3, 3), float64], Tensor[(6, 5, 9), bool]) {
  %1219 = @func_6674() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %1220 = @func_6670() /* ty=(Tensor[(6, 5, 9), bool],) */;
  %1221 = %1219.0;
  %1222 = %1220.0;
  (%1221, %1222)
}

def @func_3218() -> Tensor[(4, 3, 3), float64] {
  %1223 = @func_2386() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(168), float32], Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), float32], Tensor[(4, 3, 3), bool]) */;
  %1223.0
}

def @func_13517() -> (Tensor[(4, 3, 3), uint64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  %1224 = @func_11462() /* ty=(Tensor[(4, 3, 3), uint64],) */;
  %1225 = @func_12655() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %1226 = @func_7484() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %1227 = %1224.0;
  %1228 = %1225.0;
  %1229 = %1226.0;
  (%1227, %1228, %1229)
}

def @func_12204() -> (Tensor[(4, 3, 3), uint64], Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  %1230 = @func_7055() /* ty=(Tensor[(4, 3, 3), uint64],) */;
  %1231 = %1230.0;
  %1232 = cast(%1231, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
  %1233 = reshape(%1232, newshape=[4, 3, 3]) /* ty=Tensor[(4, 3, 3), float64] */;
  %1234 = @func_12030() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %1235 = @func_4511() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %1236 = @func_3151(%1233) /* ty=Tensor[(4, 3, 3), bool] */;
  %1237 = %1234.0;
  %1238 = %1235.0;
  (%1231, %1236, %1237, %1238)
}

def @func_6885() -> (Tensor[(4, 3, 3), float64], Tensor[(15, 13, 7), int8]) {
  @func_6883() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(15, 13, 7), int8]) */
}

def @func_16044() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  %1243 = fn () -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
    %1239 = @func_9232() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %1240 = %1239.0;
    %1241 = @func_11537() /* ty=Tensor[(4, 3, 3), float64] */;
    %1242 = @func_3800() /* ty=Tensor[(4, 3, 3), float64] */;
    (%1240, %1241, %1242)
  };
  %1243() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */
}

def @func_12030() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  %1244 = @func_3266() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %1245 = @func_5258() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %1246 = %1244.0;
  %1247 = %1245.0;
  (%1246, %1247)
}

def @func_8955() -> (Tensor[(168), float32], Tensor[(4, 3, 3), float64]) {
  %1251 = fn () -> (Tensor[(168), float32], Tensor[(4, 3, 3), float64]) {
    %1248 = @func_6029() /* ty=(Tensor[(7, 4, 6), float64], Tensor[(168), float32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), bool]) */;
    %1249 = @func_8171() /* ty=Tensor[(168), float32] */;
    %1250 = %1248.2;
    (%1249, %1250)
  };
  %1251() /* ty=(Tensor[(168), float32], Tensor[(4, 3, 3), float64]) */
}

def @func_6796(%var_6794: Tensor[(7, 10, 4), float32], %var_6795: Tensor[(7, 10, 4), float32]) -> Tensor[(7, 10, 4), bool] {
  %1256 = fn (%var_6776: Tensor[(7, 10, 4), float32], %var_6777: Tensor[(7, 10, 4), float32]) -> Tensor[(7, 10, 4), bool] {
    %1252 = cast(%var_6777, dtype="bool") /* ty=Tensor[(7, 10, 4), bool] */;
    %1253 = shape_of(%var_6776, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1254 = cast(%var_6776, dtype="bool") /* ty=Tensor[(7, 10, 4), bool] */;
    %1255 = dyn.reshape(%1252, %1253, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    equal(%1254, %1255) /* ty=Tensor[(7, 10, 4), bool] */
  };
  %1256(%var_6794, %var_6795) /* ty=Tensor[(7, 10, 4), bool] */
}

def @func_6333() -> Tensor[(9, 12, 6), int16] {
  %1266 = fn () -> Tensor[(9, 12, 6), int16] {
    %1257 = cast(meta[relay.Constant][45] /* ty=Tensor[(9, 12, 6), float64] */, dtype="float64") /* ty=Tensor[(9, 12, 6), float64] */;
    %1258 = shape_of(meta[relay.Constant][44] /* ty=Tensor[(9, 12, 6), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1259 = cast(meta[relay.Constant][44] /* ty=Tensor[(9, 12, 6), float64] */, dtype="float64") /* ty=Tensor[(9, 12, 6), float64] */;
    %1260 = dyn.reshape(%1257, %1258, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1261 = floor_divide(%1259, %1260) /* ty=Tensor[(9, 12, 6), float64] */;
    %1262 = cast(%1261, dtype="int16") /* ty=Tensor[(9, 12, 6), int16] */;
    %1263 = shape_of(meta[relay.Constant][44] /* ty=Tensor[(9, 12, 6), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1264 = cast(meta[relay.Constant][44] /* ty=Tensor[(9, 12, 6), float64] */, dtype="int16") /* ty=Tensor[(9, 12, 6), int16] */;
    %1265 = dyn.reshape(%1262, %1263, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    bitwise_and(%1264, %1265) /* ty=Tensor[(9, 12, 6), int16] */
  };
  %1266() /* ty=Tensor[(9, 12, 6), int16] */
}

def @func_15149(%var_15146: Tensor[(2366), int64], %var_15147: Tensor[(168, 1), float32], %var_15148: Tensor[(168, 2366), bool]) -> (Tensor[(4, 3, 3), float64], Tensor[(6, 2, 14), int64], Tensor[(4, 3, 3), float32], Tensor[(4, 3, 3), float64], Tensor[(168, 2366), float64], Tensor[(4, 3, 3), float64]) {
  %1302 = fn (%var_15059: Tensor[(2366), int64], %var_15060: Tensor[(168, 1), float32], %var_15094: Tensor[(168, 2366), bool]) -> (Tensor[(4, 3, 3), float64], Tensor[(6, 2, 14), int64], Tensor[(4, 3, 3), float32], Tensor[(4, 3, 3), float64], Tensor[(168, 2366), float64], Tensor[(4, 3, 3), float64]) {
    %1267 = @func_5683() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
    %1268 = cast(%var_15059, dtype="int64") /* ty=Tensor[(2366), int64] */;
    %1269 = cast(%var_15060, dtype="float32") /* ty=Tensor[(168, 1), float32] */;
    %1270 = reshape(%1268, newshape=[2366]) /* ty=Tensor[(2366), int64] */;
    %1271 = reshape(%1269, newshape=[168]) /* ty=Tensor[(168), float32] */;
    %1272 = @func_3956(%1270, %1271) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(2366), int8], Tensor[(6, 2, 14), int64], Tensor[(4, 3, 3), float64]) */;
    %1273 = %1272.2;
    %1274 = cast(%1273, dtype="float32") /* ty=Tensor[(6, 2, 14), float32] */;
    %1275 = reshape(%1274, newshape=[168]) /* ty=Tensor[(168), float32] */;
    %1276 = @func_1828(%1275) /* ty=(Tensor[(4, 3, 3), float32], Tensor[(6, 2, 14), float64], Tensor[(2366), int64], Tensor[(168), float32], Tensor[(6, 2, 14), float32]) */;
    %1277 = cast(%var_15059, dtype="float32") /* ty=Tensor[(2366), float32] */;
    %1278 = reshape(%1277, newshape=[169, 14]) /* ty=Tensor[(169, 14), float32] */;
    %1279 = @func_10638(%1278) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(169, 14), float32], Tensor[(4, 3, 3), float64], Tensor[(6, 2, 14), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
    %1280 = cast(%var_15060, dtype="float32") /* ty=Tensor[(168, 1), float32] */;
    %1281 = log(%1280) /* ty=Tensor[(168, 1), float32] */;
    %1282 = cast(%var_15059, dtype="bool") /* ty=Tensor[(2366), bool] */;
    %1283 = cast(%1281, dtype="bool") /* ty=Tensor[(168, 1), bool] */;
    %1284 = less(%1282, %1283) /* ty=Tensor[(168, 2366), bool] */;
    %1285 = cast(%var_15094, dtype="bool") /* ty=Tensor[(168, 2366), bool] */;
    %1286 = shape_of(%1284, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1287 = cast(%1284, dtype="bool") /* ty=Tensor[(168, 2366), bool] */;
    %1288 = dyn.reshape(%1285, %1286, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1289 = logical_or(%1287, %1288) /* ty=Tensor[(168, 2366), bool] */;
    %1290 = cast(%1289, dtype="bool") /* ty=Tensor[(168, 2366), bool] */;
    %1291 = cast(%1281, dtype="bool") /* ty=Tensor[(168, 1), bool] */;
    %1292 = equal(%1290, %1291) /* ty=Tensor[(168, 2366), bool] */;
    %1293 = cast(%1281, dtype="int8") /* ty=Tensor[(168, 1), int8] */;
    %1294 = cast(%1292, dtype="int8") /* ty=Tensor[(168, 2366), int8] */;
    %1295 = logical_xor(%1293, %1294) /* ty=Tensor[(168, 2366), int8] */;
    %1296 = cast(%1295, dtype="float64") /* ty=Tensor[(168, 2366), float64] */;
    %1297 = %1267.0;
    %1298 = %1276.0;
    %1299 = %1279.1;
    %1300 = rsqrt(%1296) /* ty=Tensor[(168, 2366), float64] */;
    %1301 = @func_4335() /* ty=Tensor[(4, 3, 3), float64] */;
    (%1297, %1273, %1298, %1299, %1300, %1301)
  };
  %1302(%var_15146, %var_15147, %var_15148) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(6, 2, 14), int64], Tensor[(4, 3, 3), float32], Tensor[(4, 3, 3), float64], Tensor[(168, 2366), float64], Tensor[(4, 3, 3), float64]) */
}

def @func_9664(%var_9662: Tensor[(2366), float32]) -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(2366), float32], Tensor[(2366), float64], Tensor[(4, 3, 3), bool]) {
  @func_9661(%var_9662) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(2366), float32], Tensor[(2366), float64], Tensor[(4, 3, 3), bool]) */
}

def @func_12985(%var_12984: Tensor[(6, 2, 14), bool]) -> (Tensor[(6, 2, 14), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  %1312 = fn (%var_12966: Tensor[(6, 2, 14), bool]) -> (Tensor[(6, 2, 14), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
    %1303 = @func_6314() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(6, 2, 14), bool]) */;
    %1304 = %1303.2;
    %1305 = cast(%var_12966, dtype="float64") /* ty=Tensor[(6, 2, 14), float64] */;
    %1306 = shape_of(%1304, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1307 = cast(%1304, dtype="float64") /* ty=Tensor[(6, 2, 14), float64] */;
    %1308 = dyn.reshape(%1305, %1306, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1309 = add(%1307, %1308) /* ty=Tensor[(6, 2, 14), float64] */;
    %1310 = @func_12281() /* ty=Tensor[(4, 3, 3), float64] */;
    %1311 = @func_9400() /* ty=Tensor[(4, 3, 3), float64] */;
    (%1309, %1310, %1311)
  };
  %1312(%var_12984) /* ty=(Tensor[(6, 2, 14), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */
}

def @func_9817(%var_9816: Tensor[(270), bool]) -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(270), bool]) {
  %1319 = fn (%var_9810: Tensor[(270), bool]) -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(270), bool]) {
    %1313 = @func_8771() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %1314 = cast(%var_9810, dtype="bool") /* ty=Tensor[(270), bool] */;
    %1315 = reshape(%1314, newshape=[270, 1]) /* ty=Tensor[(270, 1), bool] */;
    %1316 = @func_9391(%1315) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(6, 5, 9), int32], Tensor[(270, 1), bool]) */;
    %1317 = %1313.0;
    %1318 = %1316.1;
    (%1317, %1318, %var_9810)
  };
  %1319(%var_9816) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(270), bool]) */
}

def @func_15018() -> (Tensor[(4, 3, 3), uint64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(2366), float32]) {
  %1328 = fn () -> (Tensor[(4, 3, 3), uint64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(2366), float32]) {
    %1320 = @func_9508() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), uint64]) */;
    %1321 = @func_10254() /* ty=(Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), float64]) */;
    %1322 = cast(meta[relay.Constant][46] /* ty=Tensor[(2366), float32] */, dtype="float32") /* ty=Tensor[(2366), float32] */;
    %1323 = reshape(%1322, newshape=[2366]) /* ty=Tensor[(2366), float32] */;
    %1324 = @func_8141(%1323) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(2366), float32]) */;
    %1325 = %1320.1;
    %1326 = %1321.1;
    %1327 = %1324.1;
    (%1325, %1326, %1327, meta[relay.Constant][46] /* ty=Tensor[(2366), float32] */)
  };
  %1328() /* ty=(Tensor[(4, 3, 3), uint64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(2366), float32]) */
}

def @func_5135() -> (Tensor[(6, 5, 9), bool],) {
  %1334 = fn () -> (Tensor[(6, 5, 9), bool],) {
    %1329 = cast(meta[relay.Constant][48] /* ty=Tensor[(6, 5, 9), bool] */, dtype="bool") /* ty=Tensor[(6, 5, 9), bool] */;
    %1330 = shape_of(meta[relay.Constant][47] /* ty=Tensor[(6, 5, 9), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1331 = cast(meta[relay.Constant][47] /* ty=Tensor[(6, 5, 9), bool] */, dtype="bool") /* ty=Tensor[(6, 5, 9), bool] */;
    %1332 = dyn.reshape(%1329, %1330, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1333 = logical_or(%1331, %1332) /* ty=Tensor[(6, 5, 9), bool] */;
    (%1333,)
  };
  %1334() /* ty=(Tensor[(6, 5, 9), bool],) */
}

def @func_14842(%var_14840: Tensor[(15, 11, 14), float32], %var_14841: Tensor[(168), float32]) -> (Tensor[(15, 11, 14), float32], Tensor[(4, 3, 3), uint64], Tensor[(168), float32], Tensor[(4, 3, 3), float64]) {
  %1346 = fn (%var_14815: Tensor[(15, 11, 14), float32], %var_14821: Tensor[(168), float32]) -> (Tensor[(15, 11, 14), float32], Tensor[(4, 3, 3), uint64], Tensor[(168), float32], Tensor[(4, 3, 3), float64]) {
    %1335 = cast(%var_14815, dtype="float32") /* ty=Tensor[(15, 11, 14), float32] */;
    %1336 = shape_of(meta[relay.Constant][49] /* ty=Tensor[(15, 11, 14), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1337 = cast(meta[relay.Constant][49] /* ty=Tensor[(15, 11, 14), float32] */, dtype="float32") /* ty=Tensor[(15, 11, 14), float32] */;
    %1338 = dyn.reshape(%1335, %1336, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1339 = cast(%var_14821, dtype="float32") /* ty=Tensor[(168), float32] */;
    %1340 = reshape(%1339, newshape=[3, 56]) /* ty=Tensor[(3, 56), float32] */;
    %1341 = @func_12013(%1340) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(3, 56), float32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), uint64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), uint64], Tensor[(2366, 1), int64], Tensor[(4, 3, 3), float64]) */;
    %1342 = @func_13548() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %1343 = power(%1337, %1338) /* ty=Tensor[(15, 11, 14), float32] */;
    %1344 = %1341.11;
    %1345 = %1342.0;
    (%1343, %1344, %var_14821, %1345)
  };
  %1346(%var_14840, %var_14841) /* ty=(Tensor[(15, 11, 14), float32], Tensor[(4, 3, 3), uint64], Tensor[(168), float32], Tensor[(4, 3, 3), float64]) */
}

def @func_15927() -> (Tensor[(4, 3, 3), float64],) {
  %1347 = @func_9251() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %1348 = %1347.0;
  (%1348,)
}

def @func_8405() -> (Tensor[(168), float32], Tensor[(1183, 2), float32]) {
  @func_8403() /* ty=(Tensor[(168), float32], Tensor[(1183, 2), float32]) */
}

def @func_12376(%var_12375: Tensor[(12, 13, 12), float64]) -> (Tensor[(9, 12, 6), int16], Tensor[(6, 5, 9), bool], Tensor[(12, 13, 12), float32], Tensor[(12, 13, 12), float64]) {
  %1368 = fn (%var_12321: Tensor[(12, 13, 12), float64]) -> (Tensor[(9, 12, 6), int16], Tensor[(6, 5, 9), bool], Tensor[(12, 13, 12), float32], Tensor[(12, 13, 12), float64]) {
    %1349 = @func_6670() /* ty=(Tensor[(6, 5, 9), bool],) */;
    %1350 = cast(%var_12321, dtype="float64") /* ty=Tensor[(12, 13, 12), float64] */;
    %1351 = tan(%1350) /* ty=Tensor[(12, 13, 12), float64] */;
    %1352 = cast(%var_12321, dtype="float64") /* ty=Tensor[(12, 13, 12), float64] */;
    %1353 = shape_of(%1351, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1354 = cast(%1351, dtype="float64") /* ty=Tensor[(12, 13, 12), float64] */;
    %1355 = dyn.reshape(%1352, %1353, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1356 = maximum(%1354, %1355) /* ty=Tensor[(12, 13, 12), float64] */;
    %1357 = cast(%1356, dtype="float32") /* ty=Tensor[(12, 13, 12), float32] */;
    %1358 = log(%1357) /* ty=Tensor[(12, 13, 12), float32] */;
    %1359 = cast(meta[relay.Constant][50] /* ty=Tensor[(12, 13, 12), float32] */, dtype="float32") /* ty=Tensor[(12, 13, 12), float32] */;
    %1360 = shape_of(%1358, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1361 = cast(%1358, dtype="float32") /* ty=Tensor[(12, 13, 12), float32] */;
    %1362 = dyn.reshape(%1359, %1360, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1363 = cast(%1358, dtype="float64") /* ty=Tensor[(12, 13, 12), float64] */;
    %1364 = @func_7888() /* ty=Tensor[(9, 12, 6), int16] */;
    %1365 = %1349.0;
    %1366 = subtract(%1361, %1362) /* ty=Tensor[(12, 13, 12), float32] */;
    %1367 = log2(%1363) /* ty=Tensor[(12, 13, 12), float64] */;
    (%1364, %1365, %1366, %1367)
  };
  %1368(%var_12375) /* ty=(Tensor[(9, 12, 6), int16], Tensor[(6, 5, 9), bool], Tensor[(12, 13, 12), float32], Tensor[(12, 13, 12), float64]) */
}

def @func_8077() -> (Tensor[(4, 3, 3), float64],) {
  @func_8075() /* ty=(Tensor[(4, 3, 3), float64],) */
}

def @func_11109() -> Tensor[(4, 3, 3), float64] {
  @func_11107() /* ty=Tensor[(4, 3, 3), float64] */
}

def @func_14249(%var_14195: Tensor[(3, 56), uint32]) -> (Tensor[(4, 3, 3), float64], Tensor[(7, 4, 6), uint32], Tensor[(3, 56), uint32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(1815), bool]) {
  %1369 = cast(%var_14195, dtype="uint32") /* ty=Tensor[(3, 56), uint32] */;
  %1370 = reshape(%1369, newshape=[7, 4, 6]) /* ty=Tensor[(7, 4, 6), uint32] */;
  %1371 = @func_4859(%1370) /* ty=(Tensor[(7, 4, 6), uint32],) */;
  %1372 = @func_9232() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %1373 = cast(meta[relay.Constant][51] /* ty=Tensor[(1815), float64] */, dtype="float64") /* ty=Tensor[(1815), float64] */;
  %1374 = reshape(%1373, newshape=[1815]) /* ty=Tensor[(1815), float64] */;
  %1375 = @func_13779(%1374) /* ty=(Tensor[(1815), float64],) */;
  %1376 = %1375.0;
  %1377 = cast(%1376, dtype="bool") /* ty=Tensor[(1815), bool] */;
  %1378 = shape_of(meta[relay.Constant][51] /* ty=Tensor[(1815), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1379 = cast(meta[relay.Constant][51] /* ty=Tensor[(1815), float64] */, dtype="bool") /* ty=Tensor[(1815), bool] */;
  %1380 = dyn.reshape(%1377, %1378, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1381 = @func_4233() /* ty=Tensor[(4, 3, 3), float64] */;
  %1382 = %1371.0;
  %1383 = @func_4335() /* ty=Tensor[(4, 3, 3), float64] */;
  %1384 = %1372.0;
  %1385 = equal(%1379, %1380) /* ty=Tensor[(1815), bool] */;
  (%1381, %1382, %var_14195, %1383, %1384, %1385)
}

def @func_11407() -> (Tensor[(4, 3, 3), float32],) {
  %1386 = @func_6637() /* ty=(Tensor[(4, 3, 3), float32],) */;
  %1387 = %1386.0;
  (%1387,)
}

def @func_11462() -> (Tensor[(4, 3, 3), uint64],) {
  %1388 = @func_6544() /* ty=Tensor[(4, 3, 3), uint64] */;
  (%1388,)
}

def @func_4946(%var_4913: Tensor[(2366), int64]) -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(2366), int64], Tensor[(4, 3, 3), float64]) {
  %1389 = cast(%var_4913, dtype="int64") /* ty=Tensor[(2366), int64] */;
  %1390 = reshape(%1389, newshape=[2366]) /* ty=Tensor[(2366), int64] */;
  %1391 = @func_2091(%1390) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(168), float32], Tensor[(4, 3, 3), float64], Tensor[(6, 2, 14), float64], Tensor[(2366), int64]) */;
  %1392 = @func_2846() /* ty=Tensor[(4, 3, 3), float64] */;
  %1393 = %1391.3;
  %1394 = @func_3233() /* ty=Tensor[(4, 3, 3), float64] */;
  (%1392, %1393, %var_4913, %1394)
}

def @func_14474() -> Tensor[(4, 3, 3), bool] {
  %1395 = @func_9993() /* ty=(Tensor[(4, 3, 3), bool],) */;
  %1395.0
}

def @func_7769() -> Tensor[(4, 3, 3), float64] {
  @func_7767() /* ty=Tensor[(4, 3, 3), float64] */
}

def @func_6675() -> (Tensor[(4, 3, 3), float64],) {
  %1398 = fn () -> (Tensor[(4, 3, 3), float64],) {
    %1396 = @func_3451() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %1397 = %1396.0;
    (%1397,)
  };
  %1398() /* ty=(Tensor[(4, 3, 3), float64],) */
}

def @func_6545() -> Tensor[(4, 3, 3), uint64] {
  %1399 = fn () -> Tensor[(4, 3, 3), uint64] {
    @func_4351() /* ty=Tensor[(4, 3, 3), uint64] */
  };
  %1399() /* ty=Tensor[(4, 3, 3), uint64] */
}

def @func_9995() -> (Tensor[(4, 3, 3), bool],) {
  @func_9993() /* ty=(Tensor[(4, 3, 3), bool],) */
}

def @func_7670() -> (Tensor[(4, 3, 3), uint64],) {
  %1402 = fn () -> (Tensor[(4, 3, 3), uint64],) {
    %1400 = @func_7055() /* ty=(Tensor[(4, 3, 3), uint64],) */;
    %1401 = %1400.0;
    (%1401,)
  };
  %1402() /* ty=(Tensor[(4, 3, 3), uint64],) */
}

def @func_1983(%var_1924: Tensor[(168), float32], %var_1969: Tensor[(4, 3, 3), float64]) -> (Tensor[(6, 2, 14), float32], Tensor[(168), float32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  %1403 = cast(%var_1924, dtype="float32") /* ty=Tensor[(168), float32] */;
  %1404 = cast(%var_1924, dtype="int8") /* ty=Tensor[(168), int8] */;
  %1405 = reshape(%1403, newshape=[6, 2, 14]) /* ty=Tensor[(6, 2, 14), float32] */;
  %1406 = reshape(%1404, newshape=[6, 2, 14]) /* ty=Tensor[(6, 2, 14), int8] */;
  %1407 = @func_162(%1405, %1406) /* ty=(Tensor[(6, 2, 14), float32], Tensor[(6, 2, 14), float64], Tensor[(6, 2, 14), float64]) */;
  %1408 = @func_1870() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %1409 = @func_1752() /* ty=Tensor[(4, 3, 3), float64] */;
  %1410 = cast(%1409, dtype="float32") /* ty=Tensor[(4, 3, 3), float32] */;
  %1411 = acosh(%1410) /* ty=Tensor[(4, 3, 3), float32] */;
  %1412 = cast(%1411, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
  %1413 = cast(%var_1969, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
  %1414 = shape_of(%1409, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1415 = cast(%1409, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
  %1416 = dyn.reshape(%1413, %1414, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1417 = %1407.0;
  %1418 = %1408.0;
  %1419 = cosh(%1412) /* ty=Tensor[(4, 3, 3), float64] */;
  %1420 = floor_mod(%1415, %1416) /* ty=Tensor[(4, 3, 3), float64] */;
  (%1417, %var_1924, %1418, %1419, %1420)
}

def @func_9176() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float32], Tensor[(4, 3, 3), uint64]) {
  %1421 = @func_5973() /* ty=(Tensor[(4, 3, 3), uint64], Tensor[(4, 3, 3), float64]) */;
  %1422 = @func_5258() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %1423 = @func_3266() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %1424 = @func_7524() /* ty=(Tensor[(4, 3, 3), uint64], Tensor[(4, 3, 3), float64]) */;
  %1425 = @func_3800() /* ty=Tensor[(4, 3, 3), float64] */;
  %1426 = %1421.1;
  %1427 = %1422.0;
  %1428 = %1423.0;
  %1429 = @func_2658() /* ty=Tensor[(4, 3, 3), float32] */;
  %1430 = %1424.0;
  (%1425, %1426, %1427, %1428, %1429, %1430)
}

def @func_9924() -> Tensor[(4, 3, 3), bool] {
  %1432 = fn () -> Tensor[(4, 3, 3), bool] {
    %1431 = @func_7316() /* ty=(Tensor[(4, 3, 3), bool], Tensor[(4, 3, 3), uint64]) */;
    %1431.0
  };
  %1432() /* ty=Tensor[(4, 3, 3), bool] */
}

def @func_7043(%var_6993: Tensor[(280), float32]) -> (Tensor[(4, 3, 3), float64], Tensor[(7, 10, 4), bool], Tensor[(280), float32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  %1433 = @func_1870() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %1434 = cast(%var_6993, dtype="float32") /* ty=Tensor[(280), float32] */;
  %1435 = cast(%var_6993, dtype="float32") /* ty=Tensor[(280), float32] */;
  %1436 = reshape(%1434, newshape=[7, 10, 4]) /* ty=Tensor[(7, 10, 4), float32] */;
  %1437 = reshape(%1435, newshape=[7, 10, 4]) /* ty=Tensor[(7, 10, 4), float32] */;
  %1438 = @func_3682() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(2366), int64], Tensor[(168), float32], Tensor[(4, 3, 3), float64]) */;
  %1439 = @func_3266() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %1440 = @func_3266() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %1441 = @func_6513() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %1442 = @func_3488() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %1443 = %1433.0;
  %1444 = @func_6793(%1436, %1437) /* ty=Tensor[(7, 10, 4), bool] */;
  %1445 = %1438.1;
  %1446 = %1439.0;
  %1447 = %1440.0;
  %1448 = %1441.0;
  %1449 = @func_2940() /* ty=Tensor[(4, 3, 3), float64] */;
  %1450 = %1442.0;
  (%1443, %1444, %var_6993, %1445, %1446, %1447, %1448, %1449, %1450)
}

def @func_5777(%var_5775: Tensor[(42, 4), float32]) -> (Tensor[(42, 4), bool], Tensor[(4, 3, 3), float64]) {
  @func_5774(%var_5775) /* ty=(Tensor[(42, 4), bool], Tensor[(4, 3, 3), float64]) */
}

def @func_6315() -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(6, 2, 14), bool]) {
  %1468 = fn () -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(6, 2, 14), bool]) {
    %1451 = @func_2581() /* ty=(Tensor[(4, 3, 3), float64],) */;
    %1452 = @func_3073() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
    %1453 = cast(meta[relay.Constant][52] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
    %1454 = cast(meta[relay.Constant][52] /* ty=Tensor[(168), float32] */, dtype="int8") /* ty=Tensor[(168), int8] */;
    %1455 = reshape(%1453, newshape=[6, 2, 14]) /* ty=Tensor[(6, 2, 14), float32] */;
    %1456 = reshape(%1454, newshape=[6, 2, 14]) /* ty=Tensor[(6, 2, 14), int8] */;
    %1457 = @func_162(%1455, %1456) /* ty=(Tensor[(6, 2, 14), float32], Tensor[(6, 2, 14), float64], Tensor[(6, 2, 14), float64]) */;
    %1458 = %1457.1;
    %1459 = cast(%1458, dtype="float32") /* ty=Tensor[(6, 2, 14), float32] */;
    %1460 = cos(%1459) /* ty=Tensor[(6, 2, 14), float32] */;
    %1461 = cast(meta[relay.Constant][52] /* ty=Tensor[(168), float32] */, dtype="bool") /* ty=Tensor[(168), bool] */;
    %1462 = shape_of(%1460, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1463 = cast(%1460, dtype="bool") /* ty=Tensor[(6, 2, 14), bool] */;
    %1464 = dyn.reshape(%1461, %1462, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1465 = %1451.0;
    %1466 = %1452.0;
    %1467 = less_equal(%1463, %1464) /* ty=Tensor[(6, 2, 14), bool] */;
    (%1465, %1466, %1467)
  };
  %1468() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(6, 2, 14), bool]) */
}

def @func_13914() -> (Tensor[(9, 12, 6), int16], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
  %1476 = fn () -> (Tensor[(9, 12, 6), int16], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) {
    %1469 = @func_9342() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
    %1470 = %1469.1;
    %1471 = cast(%1470, dtype="float64") /* ty=Tensor[(4, 3, 3), float64] */;
    %1472 = reshape(%1471, newshape=[4, 3, 3]) /* ty=Tensor[(4, 3, 3), float64] */;
    %1473 = @func_2727(%1472) /* ty=(Tensor[(6, 2, 14), float64], Tensor[(168), float32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
    %1474 = @func_7888() /* ty=Tensor[(9, 12, 6), int16] */;
    %1475 = %1473.3;
    (%1474, %1470, %1475)
  };
  %1476() /* ty=(Tensor[(9, 12, 6), int16], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */
}

def @func_12013(%var_11938: Tensor[(3, 56), float32]) -> (Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(3, 56), float32], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), uint64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), uint64], Tensor[(2366, 1), int64], Tensor[(4, 3, 3), float64]) {
  %1477 = @func_5667() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %1478 = cast(%var_11938, dtype="float32") /* ty=Tensor[(3, 56), float32] */;
  %1479 = reshape(%1478, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %1480 = @func_5308(%1479) /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(168), float32], Tensor[(7, 4, 6), float64]) */;
  %1481 = @func_11450() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %1482 = @func_9342() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %1483 = @func_5185() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %1484 = @func_7373() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float64]) */;
  %1485 = @func_3582() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %1486 = cast(meta[relay.Constant][53] /* ty=Tensor[(2366, 1), int64] */, dtype="int64") /* ty=Tensor[(2366, 1), int64] */;
  %1487 = reshape(%1486, newshape=[13, 182]) /* ty=Tensor[(13, 182), int64] */;
  %1488 = @func_7174(%1487) /* ty=(Tensor[(4, 3, 3), uint64], Tensor[(4, 3, 3), float64], Tensor[(13, 182), int64]) */;
  %1489 = @func_6982() /* ty=(Tensor[(4, 3, 3), float64],) */;
  %1490 = %1477.0;
  %1491 = @func_11537() /* ty=Tensor[(4, 3, 3), float64] */;
  %1492 = @func_8295() /* ty=Tensor[(4, 3, 3), float64] */;
  %1493 = %1480.1;
  %1494 = %1481.0;
  %1495 = @func_3975() /* ty=Tensor[(4, 3, 3), uint64] */;
  %1496 = %1482.1;
  %1497 = %1483.0;
  %1498 = %1484.0;
  %1499 = %1485.0;
  %1500 = %1488.0;
  %1501 = %1489.0;
  (%1490, %1491, %1492, %1493, %var_11938, %1494, %1495, %1496, %1497, %1498, %1499, %1500, meta[relay.Constant][53] /* ty=Tensor[(2366, 1), int64] */, %1501)
}

def @func_8075() -> (Tensor[(4, 3, 3), float64],) {
  %1502 = @func_5725() /* ty=(Tensor[(4, 3, 3), float64], Tensor[(4, 3, 3), float32], Tensor[(168), float32], Tensor[(1183, 2), int64], Tensor[(42, 4), float32]) */;
  %1503 = %1502.0;
  (%1503,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen589/build/output.py:4820: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen589/build/output.py", line 4825, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(858) tvmgen_default_fused_rsqrt_kernel0(double* __restrict__ tensor, double* __restrict__ placeholder) {
  tensor[(((int)threadIdx.x))] = (1.000000e+00 / sqrt(placeholder[(((int)threadIdx.x))]));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


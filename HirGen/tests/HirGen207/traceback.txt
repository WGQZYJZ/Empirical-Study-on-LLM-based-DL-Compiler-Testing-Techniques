==========mod==========
#[version = "0.0.5"]
def @func_3848(%var_3792: Tensor[(5, 15, 4), float64], %var_3800: float32, %var_3801: Tensor[(1470), float32], %var_3802: Tensor[(210), float64], %var_3820: Tensor[(585), int16]) -> (Tensor[(5, 15, 4), int32], Tensor[(210), float64], float32, Tensor[(1470), float32], Tensor[(210), float64], Tensor[(1470), float32], Tensor[(585), int16]) {
  %0 = @func_3502() /* ty=Tensor[(5, 15, 4), float64] */;
  %1 = cast(%var_3792, dtype="int32") /* ty=Tensor[(5, 15, 4), int32] */;
  %2 = shape_of(%0, dtype="int32") /* ty=Tensor[(3), int32] */;
  %3 = cast(%0, dtype="int32") /* ty=Tensor[(5, 15, 4), int32] */;
  %4 = dyn.reshape(%1, %2, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %5 = cast(%var_3800, dtype="float32") /* ty=float32 */;
  %6 = cast(%var_3801, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %7 = cast(%var_3802, dtype="float64") /* ty=Tensor[(210), float64] */;
  %8 = reshape(%5, newshape=[]) /* ty=float32 */;
  %9 = reshape(%6, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
  %10 = reshape(%7, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %11 = @func_3186(%8, %9, %10) /* ty=(Tensor[(5, 15, 4), float64], Tensor[(210, 7), int64], float32, Tensor[(72), float32], Tensor[(585), int16], Tensor[(1470), float32], Tensor[(210), float64]) */;
  %12 = cast(%var_3820, dtype="int16") /* ty=Tensor[(585), int16] */;
  %13 = reshape(%12, newshape=[65, 9]) /* ty=Tensor[(65, 9), int16] */;
  %14 = @func_2440(%13) /* ty=(Tensor[(5, 15, 4), bool], Tensor[(210), float64], Tensor[(1470), float32], Tensor[(65, 9), float64]) */;
  %15 = bitwise_xor(%3, %4) /* ty=Tensor[(5, 15, 4), int32] */;
  %16 = %11.6;
  %17 = %14.2;
  (%15, %16, %var_3800, %var_3801, %var_3802, %17, %var_3820)
}

def @func_908(%var_858: Tensor[(5, 9, 16), float32], %var_887: Tensor[(210), float64], %var_893: Tensor[(5, 9, 16), float32]) -> (Tensor[(5, 9, 16), float32], Tensor[(6, 7, 5), int32], Tensor[(210), float64], Tensor[(5, 9, 16), bool], Tensor[(6, 7, 5), int32]) {
  %18 = cast(meta[relay.Constant][0] /* ty=Tensor[(5, 9, 16), float32] */, dtype="float32") /* ty=Tensor[(5, 9, 16), float32] */;
  %19 = shape_of(%var_858, dtype="int32") /* ty=Tensor[(3), int32] */;
  %20 = cast(%var_858, dtype="float32") /* ty=Tensor[(5, 9, 16), float32] */;
  %21 = dyn.reshape(%18, %19, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %22 = cast(%var_887, dtype="float64") /* ty=Tensor[(210), float64] */;
  %23 = reshape(%22, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %24 = @func_406(%23) /* ty=(Tensor[(6, 7, 5), int32], Tensor[(210), float64], Tensor[(13, 12, 2), float32], Tensor[(13, 12, 2), int64], Tensor[(6, 7, 5), int32], Tensor[(6, 7, 5), int32]) */;
  %25 = cast(%var_893, dtype="bool") /* ty=Tensor[(5, 9, 16), bool] */;
  %26 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(5, 9, 16), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %27 = cast(meta[relay.Constant][0] /* ty=Tensor[(5, 9, 16), float32] */, dtype="bool") /* ty=Tensor[(5, 9, 16), bool] */;
  %28 = dyn.reshape(%25, %26, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %29 = cast(%var_887, dtype="float64") /* ty=Tensor[(210), float64] */;
  %30 = cast(%var_887, dtype="float64") /* ty=Tensor[(210), float64] */;
  %31 = reshape(%29, newshape=[6, 7, 5]) /* ty=Tensor[(6, 7, 5), float64] */;
  %32 = reshape(%30, newshape=[6, 7, 5]) /* ty=Tensor[(6, 7, 5), float64] */;
  %33 = divide(%20, %21) /* ty=Tensor[(5, 9, 16), float32] */;
  %34 = %24.5;
  %35 = equal(%27, %28) /* ty=Tensor[(5, 9, 16), bool] */;
  %36 = @func_317(%31, %32) /* ty=Tensor[(6, 7, 5), int32] */;
  (%33, %34, %var_887, %35, %36)
}

def @func_2114() -> (Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float32], Tensor[(2025), float32]) {
  %37 = cast(meta[relay.Constant][1] /* ty=Tensor[(2025), float32] */, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %38 = reshape(%37, newshape=[27, 75]) /* ty=Tensor[(27, 75), float32] */;
  %39 = @func_2090(%38) /* ty=(Tensor[(5, 15, 4), float32], float64, Tensor[(176), float64], Tensor[(27, 75), float32], Tensor[(126), float64]) */;
  %40 = @func_1957() /* ty=Tensor[(5, 15, 4), float32] */;
  %41 = %39.0;
  (%40, %41, meta[relay.Constant][1] /* ty=Tensor[(2025), float32] */)
}

def @func_2026(%var_1966: Tensor[(1, 16, 11), float64], %var_1991: Tensor[(2025), float32], %var_1995: Tensor[(126), float64]) -> (Tensor[(13, 12, 2), int64], Tensor[(105, 2), float64], Tensor[(13, 12, 2), int64], Tensor[(2025), float32], Tensor[(14, 3, 3), bool], float64, Tensor[(126), float64], Tensor[(12, 16, 11), uint8], Tensor[(?, 16, 11), bool]) {
  %42 = cast(meta[relay.Constant][2] /* ty=Tensor[(105, 2), float64] */, dtype="float64") /* ty=Tensor[(105, 2), float64] */;
  %43 = reshape(%42, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %44 = @func_406(%43) /* ty=(Tensor[(6, 7, 5), int32], Tensor[(210), float64], Tensor[(13, 12, 2), float32], Tensor[(13, 12, 2), int64], Tensor[(6, 7, 5), int32], Tensor[(6, 7, 5), int32]) */;
  %45 = cast(%var_1991, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %46 = reshape(%45, newshape=[15, 15, 9]) /* ty=Tensor[(15, 15, 9), float32] */;
  %47 = @func_1289(%46) /* ty=(Tensor[(15, 15, 9), float32], Tensor[(13, 12, 2), int64], Tensor[(1, 210), float64]) */;
  %48 = cast(-9.99912f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %49 = cast(%var_1995, dtype="float64") /* ty=Tensor[(126), float64] */;
  %50 = reshape(%48, newshape=[]) /* ty=float64 */;
  %51 = reshape(%49, newshape=[14, 3, 3]) /* ty=Tensor[(14, 3, 3), float64] */;
  %52 = @func_1331(%50, %51) /* ty=(Tensor[(14, 3, 3), bool],) */;
  %53 = cast(%var_1966, dtype="float64") /* ty=Tensor[(1, 16, 11), float64] */;
  %54 = log10(%53) /* ty=Tensor[(1, 16, 11), float64] */;
  %55 = cast(%54, dtype="float32") /* ty=Tensor[(1, 16, 11), float32] */;
  %56 = acos(%55) /* ty=Tensor[(1, 16, 11), float32] */;
  %57 = cast(%56, dtype="uint8") /* ty=Tensor[(1, 16, 11), uint8] */;
  %58 = cast(meta[relay.Constant][3] /* ty=Tensor[(12, 16, 11), float32] */, dtype="uint8") /* ty=Tensor[(12, 16, 11), uint8] */;
  %59 = cast(%var_1966, dtype="bool") /* ty=Tensor[(1, 16, 11), bool] */;
  %60 = shape_of(%56, dtype="int32") /* ty=Tensor[(3), int32] */;
  %61 = cast(%56, dtype="bool") /* ty=Tensor[(1, 16, 11), bool] */;
  %62 = dyn.reshape(%59, %60, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %63 = %44.3;
  %64 = %47.1;
  %65 = %52.0;
  %66 = multiply(%57, %58) /* ty=Tensor[(12, 16, 11), uint8] */;
  %67 = logical_and(%61, %62) /* ty=Tensor[(?, 16, 11), bool] */;
  (%63, meta[relay.Constant][2] /* ty=Tensor[(105, 2), float64] */, %64, %var_1991, %65, -9.99912f64 /* ty=float64 */, %var_1995, %66, %67)
}

def @func_5759() -> (Tensor[(5, 15, 4), float64], Tensor[(585), int16]) {
  %68 = @func_2975() /* ty=Tensor[(5, 15, 4), float64] */;
  %69 = @func_5158() /* ty=Tensor[(585), int16] */;
  (%68, %69)
}

def @func_1245(%var_1197: float32, %var_1198: Tensor[(3, 6, 4), float32], %var_1204: Tensor[(585), int16], %var_1205: Tensor[(1470), float32], %var_1211: Tensor[(210), float64]) -> (Tensor[(3, 6, 4), float32], Tensor[(210, 7), int64], Tensor[(585), int16], Tensor[(5, 9, 16), float32], Tensor[(60, 12), float32], Tensor[(210), float64], Tensor[(1470), float32], Tensor[(6, 7, 5), int32]) {
  %70 = cast(%var_1197, dtype="float32") /* ty=float32 */;
  %71 = cast(%var_1198, dtype="float32") /* ty=Tensor[(3, 6, 4), float32] */;
  %72 = cast(%var_1204, dtype="int16") /* ty=Tensor[(585), int16] */;
  %73 = cast(%var_1205, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %74 = reshape(%72, newshape=[13, 3, 15]) /* ty=Tensor[(13, 3, 15), int16] */;
  %75 = reshape(%73, newshape=[210, 7]) /* ty=Tensor[(210, 7), float32] */;
  %76 = @func_477(%74, %75) /* ty=(Tensor[(13, 3, 15), bool], Tensor[(210), float64], Tensor[(210, 7), int64], Tensor[(6, 7, 5), int32]) */;
  %77 = cast(meta[relay.Constant][4] /* ty=Tensor[(60, 12), float32] */, dtype="float32") /* ty=Tensor[(60, 12), float32] */;
  %78 = cast(%var_1211, dtype="float64") /* ty=Tensor[(210), float64] */;
  %79 = cast(meta[relay.Constant][4] /* ty=Tensor[(60, 12), float32] */, dtype="float32") /* ty=Tensor[(60, 12), float32] */;
  %80 = reshape(%77, newshape=[5, 9, 16]) /* ty=Tensor[(5, 9, 16), float32] */;
  %81 = reshape(%78, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %82 = reshape(%79, newshape=[5, 9, 16]) /* ty=Tensor[(5, 9, 16), float32] */;
  %83 = @func_908(%80, %81, %82) /* ty=(Tensor[(5, 9, 16), float32], Tensor[(6, 7, 5), int32], Tensor[(210), float64], Tensor[(5, 9, 16), bool], Tensor[(6, 7, 5), int32]) */;
  %84 = cast(%var_1205, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %85 = cast(%var_1211, dtype="float64") /* ty=Tensor[(210), float64] */;
  %86 = cast(%var_1211, dtype="float64") /* ty=Tensor[(210), float64] */;
  %87 = reshape(%85, newshape=[6, 7, 5]) /* ty=Tensor[(6, 7, 5), float64] */;
  %88 = reshape(%86, newshape=[6, 7, 5]) /* ty=Tensor[(6, 7, 5), float64] */;
  %89 = floor_mod(%70, %71) /* ty=Tensor[(3, 6, 4), float32] */;
  %90 = %76.2;
  %91 = %83.0;
  %92 = asinh(%84) /* ty=Tensor[(1470), float32] */;
  %93 = @func_317(%87, %88) /* ty=Tensor[(6, 7, 5), int32] */;
  (%89, %90, %var_1204, %91, meta[relay.Constant][4] /* ty=Tensor[(60, 12), float32] */, %var_1211, %92, %93)
}

def @func_3217() -> (Tensor[(2025), float32],) {
  %94 = @func_2114() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float32], Tensor[(2025), float32]) */;
  %95 = %94.2;
  (%95,)
}

def @func_7010() -> Tensor[(5, 15, 4), float32] {
  %96 = @func_5243() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float64]) */;
  %96.0
}

def @func_4158(%var_4151: Tensor[(5, 15, 4), float64]) -> Tensor[(5, 15, 4), bool] {
  %97 = @func_3302() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float64]) */;
  %98 = %97.1;
  %99 = cast(%var_4151, dtype="bool") /* ty=Tensor[(5, 15, 4), bool] */;
  %100 = shape_of(%98, dtype="int32") /* ty=Tensor[(3), int32] */;
  %101 = cast(%98, dtype="bool") /* ty=Tensor[(5, 15, 4), bool] */;
  %102 = dyn.reshape(%99, %100, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%101, %102) /* ty=Tensor[(5, 15, 4), bool] */
}

def @func_477(%var_429: Tensor[(13, 3, 15), int16], %var_466: Tensor[(210, 7), float32]) -> (Tensor[(13, 3, 15), bool], Tensor[(210), float64], Tensor[(210, 7), int64], Tensor[(6, 7, 5), int32]) {
  %103 = cast(meta[relay.Constant][5] /* ty=int16 */, dtype="bool") /* ty=bool */;
  %104 = cast(%var_429, dtype="bool") /* ty=Tensor[(13, 3, 15), bool] */;
  %105 = cast(meta[relay.Constant][6] /* ty=Tensor[(210, 1), float64] */, dtype="float64") /* ty=Tensor[(210, 1), float64] */;
  %106 = reshape(%105, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %107 = @func_406(%106) /* ty=(Tensor[(6, 7, 5), int32], Tensor[(210), float64], Tensor[(13, 12, 2), float32], Tensor[(13, 12, 2), int64], Tensor[(6, 7, 5), int32], Tensor[(6, 7, 5), int32]) */;
  %108 = cast(meta[relay.Constant][6] /* ty=Tensor[(210, 1), float64] */, dtype="float32") /* ty=Tensor[(210, 1), float32] */;
  %109 = sin(%108) /* ty=Tensor[(210, 1), float32] */;
  %110 = cast(%109, dtype="int64") /* ty=Tensor[(210, 1), int64] */;
  %111 = cast(%var_466, dtype="int64") /* ty=Tensor[(210, 7), int64] */;
  %112 = cast(%109, dtype="float64") /* ty=Tensor[(210, 1), float64] */;
  %113 = reshape(%112, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %114 = @func_406(%113) /* ty=(Tensor[(6, 7, 5), int32], Tensor[(210), float64], Tensor[(13, 12, 2), float32], Tensor[(13, 12, 2), int64], Tensor[(6, 7, 5), int32], Tensor[(6, 7, 5), int32]) */;
  %115 = greater(%103, %104) /* ty=Tensor[(13, 3, 15), bool] */;
  %116 = %107.1;
  %117 = multiply(%110, %111) /* ty=Tensor[(210, 7), int64] */;
  %118 = %114.5;
  (%115, %116, %117, %118)
}

def @func_5049() -> Tensor[(5, 15, 4), float64] {
  @func_3733() /* ty=Tensor[(5, 15, 4), float64] */
}

def @func_5243() -> (Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float64]) {
  %119 = @func_2632() /* ty=Tensor[(5, 15, 4), float32] */;
  %120 = @func_2975() /* ty=Tensor[(5, 15, 4), float64] */;
  (%119, %120)
}

def @func_3502() -> Tensor[(5, 15, 4), float64] {
  %121 = @func_3302() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float64]) */;
  %121.1
}

def @func_5077(%var_5070: Tensor[(5, 5, 9), float32]) -> Tensor[(5, 5, 9), float32] {
  %122 = cast(%var_5070, dtype="float32") /* ty=Tensor[(5, 5, 9), float32] */;
  log(%122) /* ty=Tensor[(5, 5, 9), float32] */
}

def @func_3733() -> Tensor[(5, 15, 4), float64] {
  %123 = @func_3663() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float64], Tensor[(210), float64]) */;
  %123.1
}

def @func_5528(%var_5488: Tensor[(21, 6), float64]) -> (Tensor[(4, 16, 16), float32], Tensor[(1024), float32], Tensor[(14, 3, 3), bool], float64, Tensor[(21, 6), float64], Tensor[(5, 15, 4), float32], Tensor[(4, 11, 13), float32]) {
  %124 = cast(meta[relay.Constant][7] /* ty=Tensor[(1024), float32] */, dtype="float32") /* ty=Tensor[(1024), float32] */;
  %125 = reshape(%124, newshape=[4, 16, 16]) /* ty=Tensor[(4, 16, 16), float32] */;
  %126 = @func_1943(%125) /* ty=(Tensor[(4, 16, 16), float32],) */;
  %127 = cast(-4.00147f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %128 = cast(%var_5488, dtype="float64") /* ty=Tensor[(21, 6), float64] */;
  %129 = reshape(%127, newshape=[]) /* ty=float64 */;
  %130 = reshape(%128, newshape=[14, 3, 3]) /* ty=Tensor[(14, 3, 3), float64] */;
  %131 = @func_1331(%129, %130) /* ty=(Tensor[(14, 3, 3), bool],) */;
  %132 = @func_3696() /* ty=(Tensor[(5, 15, 4), float32],) */;
  %133 = cast(meta[relay.Constant][8] /* ty=Tensor[(4, 11, 13), float32] */, dtype="float32") /* ty=Tensor[(4, 11, 13), float32] */;
  %134 = log10(%133) /* ty=Tensor[(4, 11, 13), float32] */;
  %135 = cast(%134, dtype="float32") /* ty=Tensor[(4, 11, 13), float32] */;
  %136 = %126.0;
  %137 = %131.0;
  %138 = %132.0;
  %139 = sigmoid(%135) /* ty=Tensor[(4, 11, 13), float32] */;
  (%136, meta[relay.Constant][7] /* ty=Tensor[(1024), float32] */, %137, -4.00147f64 /* ty=float64 */, %var_5488, %138, %139)
}

def @func_5679() -> (Tensor[(15, 14, 10), float64],) {
  %140 = @func_4977() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(15, 14, 10), float64], Tensor[(2100), float64]) */;
  %141 = %140.1;
  %142 = cast(%141, dtype="float64") /* ty=Tensor[(15, 14, 10), float64] */;
  %143 = sigmoid(%142) /* ty=Tensor[(15, 14, 10), float64] */;
  (%143,)
}

def @func_5725() -> (Tensor[(5, 15, 4), float32], Tensor[(72), float32], Tensor[(585), int16]) {
  %144 = cast(meta[relay.Constant][9] /* ty=Tensor[(585), int16] */, dtype="int16") /* ty=Tensor[(585), int16] */;
  %145 = reshape(%144, newshape=[585]) /* ty=Tensor[(585), int16] */;
  %146 = @func_3465(%145) /* ty=(Tensor[(2025), float32], Tensor[(1470), float32], Tensor[(72), float32], Tensor[(585), int16]) */;
  %147 = @func_1957() /* ty=Tensor[(5, 15, 4), float32] */;
  %148 = %146.2;
  (%147, %148, meta[relay.Constant][9] /* ty=Tensor[(585), int16] */)
}

def @func_2253(%var_2247: Tensor[(11, 15, 11), int8], %var_2248: Tensor[(11, 15, 11), int8]) -> Tensor[(11, 15, 11), int8] {
  %149 = cast(%var_2248, dtype="int8") /* ty=Tensor[(11, 15, 11), int8] */;
  %150 = shape_of(%var_2247, dtype="int32") /* ty=Tensor[(3), int32] */;
  %151 = cast(%var_2247, dtype="int8") /* ty=Tensor[(11, 15, 11), int8] */;
  %152 = dyn.reshape(%149, %150, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  minimum(%151, %152) /* ty=Tensor[(11, 15, 11), int8] */
}

def @func_6861(%var_6836: Tensor[(15, 5, 8), uint8], %var_6837: Tensor[(15, 5, 8), uint8]) -> Tensor[(15, 5, 8), bool] {
  %153 = cast(%var_6837, dtype="bool") /* ty=Tensor[(15, 5, 8), bool] */;
  %154 = shape_of(%var_6836, dtype="int32") /* ty=Tensor[(3), int32] */;
  %155 = cast(%var_6836, dtype="bool") /* ty=Tensor[(15, 5, 8), bool] */;
  %156 = dyn.reshape(%153, %154, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %157 = equal(%155, %156) /* ty=Tensor[(15, 5, 8), bool] */;
  %158 = cast(%var_6836, dtype="bool") /* ty=Tensor[(15, 5, 8), bool] */;
  %159 = shape_of(%157, dtype="int32") /* ty=Tensor[(3), int32] */;
  %160 = cast(%157, dtype="bool") /* ty=Tensor[(15, 5, 8), bool] */;
  %161 = dyn.reshape(%158, %159, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %162 = logical_or(%160, %161) /* ty=Tensor[(15, 5, 8), bool] */;
  %163 = cast(meta[relay.Constant][10] /* ty=Tensor[(15, 5, 8), bool] */, dtype="bool") /* ty=Tensor[(15, 5, 8), bool] */;
  %164 = shape_of(%162, dtype="int32") /* ty=Tensor[(3), int32] */;
  %165 = cast(%162, dtype="bool") /* ty=Tensor[(15, 5, 8), bool] */;
  %166 = dyn.reshape(%163, %164, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%165, %166) /* ty=Tensor[(15, 5, 8), bool] */
}

def @func_2051(%var_2044: Tensor[(72), float32], %var_2045: Tensor[(1, 585), int16]) -> (Tensor[(5, 15, 4), float32], Tensor[(6, 7, 5), int32], float32, Tensor[(72), float32], Tensor[(1, 585), int16], Tensor[(1470), float32], Tensor[(210), float64]) {
  %167 = cast(8.89418f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %168 = cast(%var_2044, dtype="float32") /* ty=Tensor[(72), float32] */;
  %169 = cast(%var_2045, dtype="int16") /* ty=Tensor[(1, 585), int16] */;
  %170 = cast(meta[relay.Constant][11] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %171 = cast(meta[relay.Constant][12] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %172 = reshape(%167, newshape=[]) /* ty=float32 */;
  %173 = reshape(%168, newshape=[3, 6, 4]) /* ty=Tensor[(3, 6, 4), float32] */;
  %174 = reshape(%169, newshape=[585]) /* ty=Tensor[(585), int16] */;
  %175 = reshape(%170, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
  %176 = reshape(%171, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %177 = @func_1245(%172, %173, %174, %175, %176) /* ty=(Tensor[(3, 6, 4), float32], Tensor[(210, 7), int64], Tensor[(585), int16], Tensor[(5, 9, 16), float32], Tensor[(60, 12), float32], Tensor[(210), float64], Tensor[(1470), float32], Tensor[(6, 7, 5), int32]) */;
  %178 = @func_1957() /* ty=Tensor[(5, 15, 4), float32] */;
  %179 = %177.7;
  (%178, %179, 8.89418f /* ty=float32 */, %var_2044, %var_2045, meta[relay.Constant][11] /* ty=Tensor[(1470), float32] */, meta[relay.Constant][12] /* ty=Tensor[(210), float64] */)
}

def @func_3186(%var_3173: float32, %var_3176: Tensor[(1470), float32], %var_3177: Tensor[(210), float64]) -> (Tensor[(5, 15, 4), float64], Tensor[(210, 7), int64], float32, Tensor[(72), float32], Tensor[(585), int16], Tensor[(1470), float32], Tensor[(210), float64]) {
  %180 = cast(%var_3173, dtype="float32") /* ty=float32 */;
  %181 = cast(meta[relay.Constant][13] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %182 = cast(meta[relay.Constant][14] /* ty=Tensor[(585), int16] */, dtype="int16") /* ty=Tensor[(585), int16] */;
  %183 = cast(%var_3176, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %184 = cast(%var_3177, dtype="float64") /* ty=Tensor[(210), float64] */;
  %185 = reshape(%180, newshape=[]) /* ty=float32 */;
  %186 = reshape(%181, newshape=[3, 6, 4]) /* ty=Tensor[(3, 6, 4), float32] */;
  %187 = reshape(%182, newshape=[585]) /* ty=Tensor[(585), int16] */;
  %188 = reshape(%183, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
  %189 = reshape(%184, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %190 = @func_1245(%185, %186, %187, %188, %189) /* ty=(Tensor[(3, 6, 4), float32], Tensor[(210, 7), int64], Tensor[(585), int16], Tensor[(5, 9, 16), float32], Tensor[(60, 12), float32], Tensor[(210), float64], Tensor[(1470), float32], Tensor[(6, 7, 5), int32]) */;
  %191 = @func_2975() /* ty=Tensor[(5, 15, 4), float64] */;
  %192 = %190.1;
  (%191, %192, %var_3173, meta[relay.Constant][13] /* ty=Tensor[(72), float32] */, meta[relay.Constant][14] /* ty=Tensor[(585), int16] */, %var_3176, %var_3177)
}

def @func_5158() -> Tensor[(585), int16] {
  %193 = @func_4222() /* ty=(Tensor[(5, 15, 4), float64], Tensor[(13, 12, 2), float32], Tensor[(168), float64], Tensor[(5, 15, 4), float32], Tensor[(585), int16], Tensor[(1470), float32]) */;
  %193.4
}

def @func_6663() -> Tensor[(5, 15, 4), float32] {
  %194 = @func_3545() /* ty=(Tensor[(5, 15, 4), float32],) */;
  %194.0
}

def @func_2826() -> (Tensor[(210), float64],) {
  %195 = @func_2226() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(168), float64], Tensor[(6, 7, 5), int32], Tensor[(210), float64], Tensor[(13, 12, 2), bool], Tensor[(6, 7, 5), int32]) */;
  %196 = %195.3;
  (%196,)
}

def @func_4481(%var_4429: Tensor[(16, 15, 16), float32]) -> (Tensor[(2025), float32], Tensor[(585), int16], Tensor[(210), float64], Tensor[(2025), float32], Tensor[(16, 15, 16), float32], Tensor[(11, 15, 11), int8], Tensor[(11, 165), int8]) {
  %197 = cast(meta[relay.Constant][15] /* ty=Tensor[(585), int16] */, dtype="int16") /* ty=Tensor[(585), int16] */;
  %198 = cast(meta[relay.Constant][16] /* ty=Tensor[(2025), float32] */, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %199 = cast(meta[relay.Constant][17] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %200 = reshape(%197, newshape=[585, 1]) /* ty=Tensor[(585, 1), int16] */;
  %201 = reshape(%198, newshape=[2025]) /* ty=Tensor[(2025), float32] */;
  %202 = reshape(%199, newshape=[6, 7, 5]) /* ty=Tensor[(6, 7, 5), float64] */;
  %203 = @func_3134(%200, %201, %202) /* ty=(Tensor[(210), float64], Tensor[(585, 1), int16], Tensor[(1, 210), float64], Tensor[(2025), float32], Tensor[(6, 7, 5), float64]) */;
  %204 = cast(meta[relay.Constant][16] /* ty=Tensor[(2025), float32] */, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %205 = cast(%var_4429, dtype="float32") /* ty=Tensor[(16, 15, 16), float32] */;
  %206 = tan(%205) /* ty=Tensor[(16, 15, 16), float32] */;
  %207 = cast(%206, dtype="float32") /* ty=Tensor[(16, 15, 16), float32] */;
  %208 = shape_of(%var_4429, dtype="int32") /* ty=Tensor[(3), int32] */;
  %209 = cast(%var_4429, dtype="float32") /* ty=Tensor[(16, 15, 16), float32] */;
  %210 = dyn.reshape(%207, %208, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %211 = floor_divide(%209, %210) /* ty=Tensor[(16, 15, 16), float32] */;
  %212 = cast(%211, dtype="float32") /* ty=Tensor[(16, 15, 16), float32] */;
  %213 = cast(meta[relay.Constant][18] /* ty=Tensor[(11, 165), int8] */, dtype="int8") /* ty=Tensor[(11, 165), int8] */;
  %214 = cast(meta[relay.Constant][18] /* ty=Tensor[(11, 165), int8] */, dtype="int8") /* ty=Tensor[(11, 165), int8] */;
  %215 = reshape(%213, newshape=[11, 15, 11]) /* ty=Tensor[(11, 15, 11), int8] */;
  %216 = reshape(%214, newshape=[11, 15, 11]) /* ty=Tensor[(11, 15, 11), int8] */;
  %217 = %203.3;
  %218 = log10(%204) /* ty=Tensor[(2025), float32] */;
  %219 = sinh(%212) /* ty=Tensor[(16, 15, 16), float32] */;
  %220 = @func_2253(%215, %216) /* ty=Tensor[(11, 15, 11), int8] */;
  (%217, meta[relay.Constant][15] /* ty=Tensor[(585), int16] */, meta[relay.Constant][17] /* ty=Tensor[(210), float64] */, %218, %219, %220, meta[relay.Constant][18] /* ty=Tensor[(11, 165), int8] */)
}

def @func_3433() -> (Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float32], Tensor[(65, 9), float32]) {
  %221 = @func_3245() /* ty=(Tensor[(5, 15, 4), float32],) */;
  %222 = @func_3245() /* ty=(Tensor[(5, 15, 4), float32],) */;
  %223 = cast(meta[relay.Constant][19] /* ty=Tensor[(585), int16] */, dtype="int16") /* ty=Tensor[(585), int16] */;
  %224 = reshape(%223, newshape=[65, 9]) /* ty=Tensor[(65, 9), int16] */;
  %225 = @func_2440(%224) /* ty=(Tensor[(5, 15, 4), bool], Tensor[(210), float64], Tensor[(1470), float32], Tensor[(65, 9), float64]) */;
  %226 = %225.3;
  %227 = cast(meta[relay.Constant][19] /* ty=Tensor[(585), int16] */, dtype="float32") /* ty=Tensor[(585), float32] */;
  %228 = shape_of(%226, dtype="int32") /* ty=Tensor[(2), int32] */;
  %229 = cast(%226, dtype="float32") /* ty=Tensor[(65, 9), float32] */;
  %230 = dyn.reshape(%227, %228, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %231 = %221.0;
  %232 = %222.0;
  %233 = floor_mod(%229, %230) /* ty=Tensor[(65, 9), float32] */;
  (%231, %232, %233)
}

def @func_1626(%var_1588: Tensor[(8, 3, 7), float64]) -> (Tensor[(13, 12, 2), float32], Tensor[(210), float64], Tensor[(8, 3, 7), float32]) {
  %234 = cast(meta[relay.Constant][20] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %235 = reshape(%234, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %236 = @func_406(%235) /* ty=(Tensor[(6, 7, 5), int32], Tensor[(210), float64], Tensor[(13, 12, 2), float32], Tensor[(13, 12, 2), int64], Tensor[(6, 7, 5), int32], Tensor[(6, 7, 5), int32]) */;
  %237 = cast(%var_1588, dtype="float64") /* ty=Tensor[(8, 3, 7), float64] */;
  %238 = asinh(%237) /* ty=Tensor[(8, 3, 7), float64] */;
  %239 = cast(%238, dtype="float32") /* ty=Tensor[(8, 3, 7), float32] */;
  %240 = cosh(%239) /* ty=Tensor[(8, 3, 7), float32] */;
  %241 = cast(%240, dtype="float32") /* ty=Tensor[(8, 3, 7), float32] */;
  %242 = %236.2;
  %243 = log10(%241) /* ty=Tensor[(8, 3, 7), float32] */;
  (%242, meta[relay.Constant][20] /* ty=Tensor[(210), float64] */, %243)
}

def @func_3353(%var_3329: Tensor[(1815), int8], %var_3339: Tensor[(585), int16]) -> (Tensor[(6, 7, 5), float32], Tensor[(11, 15, 11), int8], Tensor[(1815), int8], Tensor[(5, 15, 4), float32], Tensor[(72), float32], Tensor[(585), int16]) {
  %244 = @func_2226() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(168), float64], Tensor[(6, 7, 5), int32], Tensor[(210), float64], Tensor[(13, 12, 2), bool], Tensor[(6, 7, 5), int32]) */;
  %245 = %244.2;
  %246 = cast(%245, dtype="float32") /* ty=Tensor[(6, 7, 5), float32] */;
  %247 = cast(%var_3329, dtype="int8") /* ty=Tensor[(1815), int8] */;
  %248 = cast(%var_3329, dtype="int8") /* ty=Tensor[(1815), int8] */;
  %249 = reshape(%247, newshape=[11, 15, 11]) /* ty=Tensor[(11, 15, 11), int8] */;
  %250 = reshape(%248, newshape=[11, 15, 11]) /* ty=Tensor[(11, 15, 11), int8] */;
  %251 = cast(meta[relay.Constant][21] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %252 = cast(%var_3339, dtype="int16") /* ty=Tensor[(585), int16] */;
  %253 = reshape(%251, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %254 = reshape(%252, newshape=[1, 585]) /* ty=Tensor[(1, 585), int16] */;
  %255 = @func_2051(%253, %254) /* ty=(Tensor[(5, 15, 4), float32], Tensor[(6, 7, 5), int32], float32, Tensor[(72), float32], Tensor[(1, 585), int16], Tensor[(1470), float32], Tensor[(210), float64]) */;
  %256 = erf(%246) /* ty=Tensor[(6, 7, 5), float32] */;
  %257 = @func_2253(%249, %250) /* ty=Tensor[(11, 15, 11), int8] */;
  %258 = %255.0;
  (%256, %257, %var_3329, %258, meta[relay.Constant][21] /* ty=Tensor[(72), float32] */, %var_3339)
}

def @func_4713(%var_4681: Tensor[(13, 13, 13), uint8], %var_4682: Tensor[(13, 13, 13), uint8]) -> (Tensor[(13, 13, 13), bool], Tensor[(13, 13, 13), float64]) {
  %259 = cast(%var_4682, dtype="bool") /* ty=Tensor[(13, 13, 13), bool] */;
  %260 = shape_of(%var_4681, dtype="int32") /* ty=Tensor[(3), int32] */;
  %261 = cast(%var_4681, dtype="bool") /* ty=Tensor[(13, 13, 13), bool] */;
  %262 = dyn.reshape(%259, %260, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %263 = cast(%var_4681, dtype="float64") /* ty=Tensor[(13, 13, 13), float64] */;
  %264 = shape_of(%var_4682, dtype="int32") /* ty=Tensor[(3), int32] */;
  %265 = cast(%var_4682, dtype="float64") /* ty=Tensor[(13, 13, 13), float64] */;
  %266 = dyn.reshape(%263, %264, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %267 = less(%261, %262) /* ty=Tensor[(13, 13, 13), bool] */;
  %268 = mod(%265, %266) /* ty=Tensor[(13, 13, 13), float64] */;
  (%267, %268)
}

def @func_2320() -> (Tensor[(5, 15, 4), bool], Tensor[(5, 15, 4), bool]) {
  %269 = @func_2114() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float32], Tensor[(2025), float32]) */;
  %270 = %269.0;
  %271 = cast(meta[relay.Constant][22] /* ty=Tensor[(5, 15, 4), float32] */, dtype="bool") /* ty=Tensor[(5, 15, 4), bool] */;
  %272 = shape_of(%270, dtype="int32") /* ty=Tensor[(3), int32] */;
  %273 = cast(%270, dtype="bool") /* ty=Tensor[(5, 15, 4), bool] */;
  %274 = dyn.reshape(%271, %272, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %275 = cast(meta[relay.Constant][22] /* ty=Tensor[(5, 15, 4), float32] */, dtype="bool") /* ty=Tensor[(5, 15, 4), bool] */;
  %276 = shape_of(%270, dtype="int32") /* ty=Tensor[(3), int32] */;
  %277 = cast(%270, dtype="bool") /* ty=Tensor[(5, 15, 4), bool] */;
  %278 = dyn.reshape(%275, %276, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %279 = logical_and(%273, %274) /* ty=Tensor[(5, 15, 4), bool] */;
  %280 = greater_equal(%277, %278) /* ty=Tensor[(5, 15, 4), bool] */;
  (%279, %280)
}

def @func_6967() -> (Tensor[(5, 16, 8), float32],) {
  %281 = cast(meta[relay.Constant][23] /* ty=Tensor[(5, 16, 8), float32] */, dtype="float32") /* ty=Tensor[(5, 16, 8), float32] */;
  %282 = cosh(%281) /* ty=Tensor[(5, 16, 8), float32] */;
  (%282,)
}

def @func_1331(%var_1321: float64, %var_1322: Tensor[(14, 3, 3), float64]) -> (Tensor[(14, 3, 3), bool],) {
  %283 = cast(%var_1321, dtype="bool") /* ty=bool */;
  %284 = cast(%var_1322, dtype="bool") /* ty=Tensor[(14, 3, 3), bool] */;
  %285 = equal(%283, %284) /* ty=Tensor[(14, 3, 3), bool] */;
  (%285,)
}

def @func_6784() -> (Tensor[(5, 15, 4), float32],) {
  %286 = @func_1957() /* ty=Tensor[(5, 15, 4), float32] */;
  (%286,)
}

def @func_6620(%var_6547: Tensor[(585), int16], %var_6577: Tensor[(1470), float32], %var_6592: Tensor[(2025), float32]) -> (Tensor[(210), float64], Tensor[(13, 12, 2), int64], Tensor[(585), int16], Tensor[(1470), uint32], Tensor[(210), float64], Tensor[(2025), float32], Tensor[(5, 15, 4), float32]) {
  %287 = @func_2826() /* ty=(Tensor[(210), float64],) */;
  %288 = %287.0;
  %289 = cast(%288, dtype="float64") /* ty=Tensor[(210), float64] */;
  %290 = reshape(%289, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %291 = @func_406(%290) /* ty=(Tensor[(6, 7, 5), int32], Tensor[(210), float64], Tensor[(13, 12, 2), float32], Tensor[(13, 12, 2), int64], Tensor[(6, 7, 5), int32], Tensor[(6, 7, 5), int32]) */;
  %292 = cast(%var_6547, dtype="int16") /* ty=Tensor[(585), int16] */;
  %293 = reshape(%292, newshape=[65, 9]) /* ty=Tensor[(65, 9), int16] */;
  %294 = @func_2440(%293) /* ty=(Tensor[(5, 15, 4), bool], Tensor[(210), float64], Tensor[(1470), float32], Tensor[(65, 9), float64]) */;
  %295 = %294.2;
  %296 = cast(%var_6577, dtype="uint32") /* ty=Tensor[(1470), uint32] */;
  %297 = shape_of(%295, dtype="int32") /* ty=Tensor[(1), int32] */;
  %298 = cast(%295, dtype="uint32") /* ty=Tensor[(1470), uint32] */;
  %299 = dyn.reshape(%296, %297, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %300 = cast(%var_6547, dtype="int16") /* ty=Tensor[(585), int16] */;
  %301 = cast(%var_6592, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %302 = cast(%288, dtype="float64") /* ty=Tensor[(210), float64] */;
  %303 = reshape(%300, newshape=[585, 1]) /* ty=Tensor[(585, 1), int16] */;
  %304 = reshape(%301, newshape=[2025]) /* ty=Tensor[(2025), float32] */;
  %305 = reshape(%302, newshape=[6, 7, 5]) /* ty=Tensor[(6, 7, 5), float64] */;
  %306 = @func_3134(%303, %304, %305) /* ty=(Tensor[(210), float64], Tensor[(585, 1), int16], Tensor[(1, 210), float64], Tensor[(2025), float32], Tensor[(6, 7, 5), float64]) */;
  %307 = cast(%var_6547, dtype="int16") /* ty=Tensor[(585), int16] */;
  %308 = reshape(%307, newshape=[585]) /* ty=Tensor[(585), int16] */;
  %309 = @func_6374(%308) /* ty=(Tensor[(1815), int8], Tensor[(1815), int8], Tensor[(585), int16], Tensor[(5, 15, 4), float32]) */;
  %310 = %291.3;
  %311 = logical_xor(%298, %299) /* ty=Tensor[(1470), uint32] */;
  %312 = %306.0;
  %313 = %309.3;
  (%288, %310, %var_6547, %311, %312, %var_6592, %313)
}

def @func_1957() -> Tensor[(5, 15, 4), float32] {
  %314 = cast(meta[relay.Constant][24] /* ty=Tensor[(5, 15, 4), float32] */, dtype="float32") /* ty=Tensor[(5, 15, 4), float32] */;
  cosh(%314) /* ty=Tensor[(5, 15, 4), float32] */
}

def @func_4222() -> (Tensor[(5, 15, 4), float64], Tensor[(13, 12, 2), float32], Tensor[(168), float64], Tensor[(5, 15, 4), float32], Tensor[(585), int16], Tensor[(1470), float32]) {
  %315 = cast(meta[relay.Constant][25] /* ty=Tensor[(168), float64] */, dtype="float64") /* ty=Tensor[(168), float64] */;
  %316 = reshape(%315, newshape=[8, 3, 7]) /* ty=Tensor[(8, 3, 7), float64] */;
  %317 = @func_1626(%316) /* ty=(Tensor[(13, 12, 2), float32], Tensor[(210), float64], Tensor[(8, 3, 7), float32]) */;
  %318 = cast(meta[relay.Constant][26] /* ty=Tensor[(585), int16] */, dtype="int16") /* ty=Tensor[(585), int16] */;
  %319 = cast(meta[relay.Constant][27] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %320 = cast(meta[relay.Constant][26] /* ty=Tensor[(585), int16] */, dtype="int16") /* ty=Tensor[(585), int16] */;
  %321 = reshape(%318, newshape=[585]) /* ty=Tensor[(585), int16] */;
  %322 = reshape(%319, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
  %323 = reshape(%320, newshape=[585]) /* ty=Tensor[(585), int16] */;
  %324 = @func_4096(%321, %322, %323) /* ty=(Tensor[(5, 15, 4), float64], Tensor[(5, 15, 4), float32], Tensor[(210, 7), int64], Tensor[(585), uint16], Tensor[(1470), float32], Tensor[(1, 210), float64], Tensor[(2025), float32], Tensor[(2025), float32], Tensor[(1470), float64]) */;
  %325 = @func_3733() /* ty=Tensor[(5, 15, 4), float64] */;
  %326 = %317.0;
  %327 = %324.1;
  (%325, %326, meta[relay.Constant][25] /* ty=Tensor[(168), float64] */, %327, meta[relay.Constant][26] /* ty=Tensor[(585), int16] */, meta[relay.Constant][27] /* ty=Tensor[(1470), float32] */)
}

def @func_7046() -> (Tensor[(5, 15, 4), float32],) {
  %328 = @func_6784() /* ty=(Tensor[(5, 15, 4), float32],) */;
  %329 = %328.0;
  (%329,)
}

def @func_1289(%var_1269: Tensor[(15, 15, 9), float32]) -> (Tensor[(15, 15, 9), float32], Tensor[(13, 12, 2), int64], Tensor[(1, 210), float64]) {
  %330 = cast(%var_1269, dtype="float32") /* ty=Tensor[(15, 15, 9), float32] */;
  %331 = cast(meta[relay.Constant][28] /* ty=Tensor[(1, 210), float64] */, dtype="float64") /* ty=Tensor[(1, 210), float64] */;
  %332 = reshape(%331, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %333 = @func_406(%332) /* ty=(Tensor[(6, 7, 5), int32], Tensor[(210), float64], Tensor[(13, 12, 2), float32], Tensor[(13, 12, 2), int64], Tensor[(6, 7, 5), int32], Tensor[(6, 7, 5), int32]) */;
  %334 = sinh(%330) /* ty=Tensor[(15, 15, 9), float32] */;
  %335 = %333.3;
  (%334, %335, meta[relay.Constant][28] /* ty=Tensor[(1, 210), float64] */)
}

def @func_3545() -> (Tensor[(5, 15, 4), float32],) {
  %336 = @func_3433() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float32], Tensor[(65, 9), float32]) */;
  %337 = %336.0;
  (%337,)
}

def @func_2614() -> (Tensor[(5, 15, 4), bool],) {
  %338 = @func_2320() /* ty=(Tensor[(5, 15, 4), bool], Tensor[(5, 15, 4), bool]) */;
  %339 = %338.0;
  (%339,)
}

def @func_6206(%var_6185: int32, %var_6186: Tensor[(14, 5, 1), int32], %var_6191: Tensor[(585), int16], %var_6203: Tensor[(2025), float32]) -> (Tensor[(14, 5, 1), int32], Tensor[(1470), float32], Tensor[(585), int16], Tensor[(27, 75), float32], Tensor[(2025), float32]) {
  %340 = cast(%var_6185, dtype="int32") /* ty=int32 */;
  %341 = cast(%var_6186, dtype="int32") /* ty=Tensor[(14, 5, 1), int32] */;
  %342 = cast(%var_6191, dtype="int16") /* ty=Tensor[(585), int16] */;
  %343 = reshape(%342, newshape=[65, 9]) /* ty=Tensor[(65, 9), int16] */;
  %344 = @func_2440(%343) /* ty=(Tensor[(5, 15, 4), bool], Tensor[(210), float64], Tensor[(1470), float32], Tensor[(65, 9), float64]) */;
  %345 = cast(%var_6203, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %346 = reshape(%345, newshape=[27, 75]) /* ty=Tensor[(27, 75), float32] */;
  %347 = @func_2090(%346) /* ty=(Tensor[(5, 15, 4), float32], float64, Tensor[(176), float64], Tensor[(27, 75), float32], Tensor[(126), float64]) */;
  %348 = multiply(%340, %341) /* ty=Tensor[(14, 5, 1), int32] */;
  %349 = %344.2;
  %350 = %347.3;
  (%348, %349, %var_6191, %350, %var_6203)
}

def @func_2732(%var_2727: Tensor[(30), float32], %var_2729: Tensor[(585), int16], %var_2730: Tensor[(1470), float32]) -> (Tensor[(6, 7, 5), int32], Tensor[(210), float64], Tensor[(30), float32], Tensor[(18, 4), float32], Tensor[(585), int16], Tensor[(1470), float32]) {
  %351 = @func_2226() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(168), float64], Tensor[(6, 7, 5), int32], Tensor[(210), float64], Tensor[(13, 12, 2), bool], Tensor[(6, 7, 5), int32]) */;
  %352 = cast(%var_2727, dtype="float32") /* ty=Tensor[(30), float32] */;
  %353 = cast(meta[relay.Constant][29] /* ty=Tensor[(18, 4), float32] */, dtype="float32") /* ty=Tensor[(18, 4), float32] */;
  %354 = cast(%var_2729, dtype="int16") /* ty=Tensor[(585), int16] */;
  %355 = cast(%var_2730, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %356 = %351.2;
  %357 = cast(%356, dtype="float64") /* ty=Tensor[(6, 7, 5), float64] */;
  %358 = reshape(%352, newshape=[1, 2, 15]) /* ty=Tensor[(1, 2, 15), float32] */;
  %359 = reshape(%353, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %360 = reshape(%354, newshape=[195, 3]) /* ty=Tensor[(195, 3), int16] */;
  %361 = reshape(%355, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
  %362 = reshape(%357, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %363 = @func_1704(%358, %359, %360, %361, %362) /* ty=(Tensor[(585), int16], float32, Tensor[(72), float32], Tensor[(195, 3), int16], Tensor[(1470), float32], Tensor[(210), float64], Tensor[(13, 3, 15), bool], Tensor[(210), float64], Tensor[(?, 2, 15), int16]) */;
  %364 = %363.5;
  (%356, %364, %var_2727, meta[relay.Constant][29] /* ty=Tensor[(18, 4), float32] */, %var_2729, %var_2730)
}

def @func_317(%var_303: Tensor[(6, 7, 5), float64], %var_307: Tensor[(6, 7, 5), float64]) -> Tensor[(6, 7, 5), int32] {
  %365 = cast(%var_303, dtype="float64") /* ty=Tensor[(6, 7, 5), float64] */;
  %366 = acosh(%365) /* ty=Tensor[(6, 7, 5), float64] */;
  %367 = cast(%var_307, dtype="int32") /* ty=Tensor[(6, 7, 5), int32] */;
  %368 = shape_of(%366, dtype="int32") /* ty=Tensor[(3), int32] */;
  %369 = cast(%366, dtype="int32") /* ty=Tensor[(6, 7, 5), int32] */;
  %370 = dyn.reshape(%367, %368, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  left_shift(%369, %370) /* ty=Tensor[(6, 7, 5), int32] */
}

def @func_4236() -> Tensor[(5, 15, 4), float32] {
  %371 = @func_3433() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float32], Tensor[(65, 9), float32]) */;
  %371.1
}

def @func_3465(%var_3447: Tensor[(585), int16]) -> (Tensor[(2025), float32], Tensor[(1470), float32], Tensor[(72), float32], Tensor[(585), int16]) {
  %372 = @func_2114() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float32], Tensor[(2025), float32]) */;
  %373 = cast(meta[relay.Constant][30] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %374 = cast(%var_3447, dtype="int16") /* ty=Tensor[(585), int16] */;
  %375 = reshape(%373, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %376 = reshape(%374, newshape=[1, 585]) /* ty=Tensor[(1, 585), int16] */;
  %377 = @func_2051(%375, %376) /* ty=(Tensor[(5, 15, 4), float32], Tensor[(6, 7, 5), int32], float32, Tensor[(72), float32], Tensor[(1, 585), int16], Tensor[(1470), float32], Tensor[(210), float64]) */;
  %378 = %372.2;
  %379 = %377.5;
  (%378, %379, meta[relay.Constant][30] /* ty=Tensor[(72), float32] */, %var_3447)
}

def @func_6014(%var_5972: Tensor[(288), float32], %var_5977: Tensor[(2025), float32], %var_5991: Tensor[(65, 9), float64]) -> (Tensor[(585), int16], Tensor[(72, 4), float32], Tensor[(96), int8], Tensor[(864), int8], Tensor[(210), float64], Tensor[(288), float32], Tensor[(2025), int64], Tensor[(13, 12, 2), int64], Tensor[(65, 9), bool]) {
  %380 = cast(meta[relay.Constant][31] /* ty=Tensor[(96), int8] */, dtype="int8") /* ty=Tensor[(96), int8] */;
  %381 = cast(meta[relay.Constant][32] /* ty=Tensor[(864), int8] */, dtype="int8") /* ty=Tensor[(864), int8] */;
  %382 = cast(meta[relay.Constant][33] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %383 = cast(%var_5972, dtype="float32") /* ty=Tensor[(288), float32] */;
  %384 = reshape(%380, newshape=[16, 6, 1]) /* ty=Tensor[(16, 6, 1), int8] */;
  %385 = reshape(%381, newshape=[16, 6, 9]) /* ty=Tensor[(16, 6, 9), int8] */;
  %386 = reshape(%382, newshape=[5, 42]) /* ty=Tensor[(5, 42), float64] */;
  %387 = reshape(%383, newshape=[72, 4]) /* ty=Tensor[(72, 4), float32] */;
  %388 = @func_2926(%384, %385, %386, %387) /* ty=(Tensor[(15, 14, 10), float64], Tensor[(30, 70), float64], Tensor[(5, 9, 16), float32], Tensor[(720), float32], Tensor[(5, 42), float64], Tensor[(5, 15, 4), float32], Tensor[(126), float64], Tensor[(72, 4), float32], float64, Tensor[(16, 6, 9), int8], float64, Tensor[(176), float64], Tensor[(2025), float32], Tensor[(585), int16], Tensor[(72), float32], Tensor[(1470), float32], Tensor[(5, 15, 4), float32], Tensor[(6, 7, 5), int32]) */;
  %389 = @func_3217() /* ty=(Tensor[(2025), float32],) */;
  %390 = %389.0;
  %391 = cast(%var_5977, dtype="int64") /* ty=Tensor[(2025), int64] */;
  %392 = shape_of(%390, dtype="int32") /* ty=Tensor[(1), int32] */;
  %393 = cast(%390, dtype="int64") /* ty=Tensor[(2025), int64] */;
  %394 = dyn.reshape(%391, %392, newshape=[]) /* ty=Tensor[(?), int64] */;
  %395 = cast(%var_5977, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %396 = reshape(%395, newshape=[15, 15, 9]) /* ty=Tensor[(15, 15, 9), float32] */;
  %397 = @func_1289(%396) /* ty=(Tensor[(15, 15, 9), float32], Tensor[(13, 12, 2), int64], Tensor[(1, 210), float64]) */;
  %398 = cast(meta[relay.Constant][34] /* ty=Tensor[(585), int16] */, dtype="int16") /* ty=Tensor[(585), int16] */;
  %399 = reshape(%398, newshape=[65, 9]) /* ty=Tensor[(65, 9), int16] */;
  %400 = @func_2440(%399) /* ty=(Tensor[(5, 15, 4), bool], Tensor[(210), float64], Tensor[(1470), float32], Tensor[(65, 9), float64]) */;
  %401 = %400.3;
  %402 = cast(%var_5991, dtype="float64") /* ty=Tensor[(65, 9), float64] */;
  %403 = shape_of(%401, dtype="int32") /* ty=Tensor[(2), int32] */;
  %404 = cast(%401, dtype="float64") /* ty=Tensor[(65, 9), float64] */;
  %405 = dyn.reshape(%402, %403, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %406 = power(%404, %405) /* ty=Tensor[(65, 9), float64] */;
  %407 = cast(meta[relay.Constant][34] /* ty=Tensor[(585), int16] */, dtype="bool") /* ty=Tensor[(585), bool] */;
  %408 = shape_of(%406, dtype="int32") /* ty=Tensor[(2), int32] */;
  %409 = cast(%406, dtype="bool") /* ty=Tensor[(65, 9), bool] */;
  %410 = dyn.reshape(%407, %408, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %411 = @func_5158() /* ty=Tensor[(585), int16] */;
  %412 = %388.7;
  %413 = bitwise_xor(%393, %394) /* ty=Tensor[(2025), int64] */;
  %414 = %397.1;
  %415 = greater_equal(%409, %410) /* ty=Tensor[(65, 9), bool] */;
  (%411, %412, meta[relay.Constant][31] /* ty=Tensor[(96), int8] */, meta[relay.Constant][32] /* ty=Tensor[(864), int8] */, meta[relay.Constant][33] /* ty=Tensor[(210), float64] */, %var_5972, %413, %414, %415)
}

def @func_2796(%var_2788: Tensor[(585), int16]) -> (Tensor[(5, 15, 4), bool], Tensor[(5, 15, 4), float32], Tensor[(210), float64], Tensor[(585), int16], Tensor[(1470), float32]) {
  %416 = @func_2614() /* ty=(Tensor[(5, 15, 4), bool],) */;
  %417 = cast(%var_2788, dtype="int16") /* ty=Tensor[(585), int16] */;
  %418 = cast(meta[relay.Constant][35] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %419 = reshape(%417, newshape=[13, 3, 15]) /* ty=Tensor[(13, 3, 15), int16] */;
  %420 = reshape(%418, newshape=[210, 7]) /* ty=Tensor[(210, 7), float32] */;
  %421 = @func_477(%419, %420) /* ty=(Tensor[(13, 3, 15), bool], Tensor[(210), float64], Tensor[(210, 7), int64], Tensor[(6, 7, 5), int32]) */;
  %422 = %416.0;
  %423 = @func_2632() /* ty=Tensor[(5, 15, 4), float32] */;
  %424 = %421.1;
  (%422, %423, %424, %var_2788, meta[relay.Constant][35] /* ty=Tensor[(1470), float32] */)
}

def @main() -> (Tensor[(10, 5, 13), float64], Tensor[(10, 5, 13), float64]) {
  %425 = cast(meta[relay.Constant][36] /* ty=Tensor[(10, 5, 13), float32] */, dtype="float32") /* ty=Tensor[(10, 5, 13), float32] */;
  %426 = log(%425) /* ty=Tensor[(10, 5, 13), float32] */;
  %427 = cast(%426, dtype="float64") /* ty=Tensor[(10, 5, 13), float64] */;
  %428 = cast(%426, dtype="float64") /* ty=Tensor[(10, 5, 13), float64] */;
  %429 = sigmoid(%427) /* ty=Tensor[(10, 5, 13), float64] */;
  %430 = log10(%428) /* ty=Tensor[(10, 5, 13), float64] */;
  (%429, %430)
}

def @func_6332() -> Tensor[(5, 15, 4), float32] {
  %431 = @func_5858() /* ty=(Tensor[(5, 15, 4), float32],) */;
  %431.0
}

def @func_2440(%var_2414: Tensor[(65, 9), int16]) -> (Tensor[(5, 15, 4), bool], Tensor[(210), float64], Tensor[(1470), float32], Tensor[(65, 9), float64]) {
  %432 = @func_2320() /* ty=(Tensor[(5, 15, 4), bool], Tensor[(5, 15, 4), bool]) */;
  %433 = cast(%var_2414, dtype="int16") /* ty=Tensor[(65, 9), int16] */;
  %434 = cast(meta[relay.Constant][37] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %435 = reshape(%433, newshape=[13, 3, 15]) /* ty=Tensor[(13, 3, 15), int16] */;
  %436 = reshape(%434, newshape=[210, 7]) /* ty=Tensor[(210, 7), float32] */;
  %437 = @func_477(%435, %436) /* ty=(Tensor[(13, 3, 15), bool], Tensor[(210), float64], Tensor[(210, 7), int64], Tensor[(6, 7, 5), int32]) */;
  %438 = cast(%var_2414, dtype="float32") /* ty=Tensor[(65, 9), float32] */;
  %439 = rsqrt(%438) /* ty=Tensor[(65, 9), float32] */;
  %440 = cast(%439, dtype="float64") /* ty=Tensor[(65, 9), float64] */;
  %441 = %432.0;
  %442 = %437.1;
  %443 = exp(%440) /* ty=Tensor[(65, 9), float64] */;
  (%441, %442, meta[relay.Constant][37] /* ty=Tensor[(1470), float32] */, %443)
}

def @func_4665(%var_4643: Tensor[(2, 14, 7), uint64]) -> (Tensor[(2, 14, 7), uint64], Tensor[(5, 15, 4), float64]) {
  %444 = cast(meta[relay.Constant][38] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %445 = cast(%var_4643, dtype="uint64") /* ty=Tensor[(2, 14, 7), uint64] */;
  %446 = @func_4270() /* ty=(Tensor[(5, 15, 4), float64],) */;
  %447 = logical_xor(%444, %445) /* ty=Tensor[(2, 14, 7), uint64] */;
  %448 = %446.0;
  (%447, %448)
}

def @func_6374(%var_6363: Tensor[(585), int16]) -> (Tensor[(1815), int8], Tensor[(1815), int8], Tensor[(585), int16], Tensor[(5, 15, 4), float32]) {
  %449 = cast(meta[relay.Constant][39] /* ty=Tensor[(1815), int8] */, dtype="int8") /* ty=Tensor[(1815), int8] */;
  %450 = cast(%var_6363, dtype="int16") /* ty=Tensor[(585), int16] */;
  %451 = reshape(%449, newshape=[1815]) /* ty=Tensor[(1815), int8] */;
  %452 = reshape(%450, newshape=[585]) /* ty=Tensor[(585), int16] */;
  %453 = @func_3353(%451, %452) /* ty=(Tensor[(6, 7, 5), float32], Tensor[(11, 15, 11), int8], Tensor[(1815), int8], Tensor[(5, 15, 4), float32], Tensor[(72), float32], Tensor[(585), int16]) */;
  %454 = @func_4270() /* ty=(Tensor[(5, 15, 4), float64],) */;
  %455 = %454.0;
  %456 = cast(%455, dtype="float64") /* ty=Tensor[(5, 15, 4), float64] */;
  %457 = atanh(%456) /* ty=Tensor[(5, 15, 4), float64] */;
  %458 = cast(%457, dtype="float32") /* ty=Tensor[(5, 15, 4), float32] */;
  %459 = %453.2;
  %460 = sqrt(%458) /* ty=Tensor[(5, 15, 4), float32] */;
  (%459, meta[relay.Constant][39] /* ty=Tensor[(1815), int8] */, %var_6363, %460)
}

def @func_4624(%var_4589: Tensor[(30, 1), float32]) -> (Tensor[(6, 7, 5), int32], Tensor[(1470), float64], Tensor[(585), int16], Tensor[(1470), float32], Tensor[(195, 3), int16], Tensor[(30, 1), float32], Tensor[(72), float32], Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float32], Tensor[(6, 7, 5), int32], Tensor[(210), float32], Tensor[(5, 15, 4), float64]) {
  %461 = @func_2226() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(168), float64], Tensor[(6, 7, 5), int32], Tensor[(210), float64], Tensor[(13, 12, 2), bool], Tensor[(6, 7, 5), int32]) */;
  %462 = %461.3;
  %463 = cast(%462, dtype="float64") /* ty=Tensor[(210), float64] */;
  %464 = cast(%462, dtype="float64") /* ty=Tensor[(210), float64] */;
  %465 = reshape(%463, newshape=[6, 7, 5]) /* ty=Tensor[(6, 7, 5), float64] */;
  %466 = reshape(%464, newshape=[6, 7, 5]) /* ty=Tensor[(6, 7, 5), float64] */;
  %467 = cast(meta[relay.Constant][40] /* ty=Tensor[(585), int16] */, dtype="int16") /* ty=Tensor[(585), int16] */;
  %468 = cast(meta[relay.Constant][41] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %469 = cast(meta[relay.Constant][40] /* ty=Tensor[(585), int16] */, dtype="int16") /* ty=Tensor[(585), int16] */;
  %470 = reshape(%467, newshape=[585]) /* ty=Tensor[(585), int16] */;
  %471 = reshape(%468, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
  %472 = reshape(%469, newshape=[585]) /* ty=Tensor[(585), int16] */;
  %473 = @func_4096(%470, %471, %472) /* ty=(Tensor[(5, 15, 4), float64], Tensor[(5, 15, 4), float32], Tensor[(210, 7), int64], Tensor[(585), uint16], Tensor[(1470), float32], Tensor[(1, 210), float64], Tensor[(2025), float32], Tensor[(2025), float32], Tensor[(1470), float64]) */;
  %474 = cast(%var_4589, dtype="float32") /* ty=Tensor[(30, 1), float32] */;
  %475 = cast(meta[relay.Constant][42] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %476 = cast(meta[relay.Constant][40] /* ty=Tensor[(585), int16] */, dtype="int16") /* ty=Tensor[(585), int16] */;
  %477 = %473.8;
  %478 = cast(%477, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %479 = @func_317(%465, %466) /* ty=Tensor[(6, 7, 5), int32] */;
  %480 = cast(%479, dtype="float64") /* ty=Tensor[(6, 7, 5), float64] */;
  %481 = reshape(%474, newshape=[1, 2, 15]) /* ty=Tensor[(1, 2, 15), float32] */;
  %482 = reshape(%475, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %483 = reshape(%476, newshape=[195, 3]) /* ty=Tensor[(195, 3), int16] */;
  %484 = reshape(%478, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
  %485 = reshape(%480, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %486 = @func_1704(%481, %482, %483, %484, %485) /* ty=(Tensor[(585), int16], float32, Tensor[(72), float32], Tensor[(195, 3), int16], Tensor[(1470), float32], Tensor[(210), float64], Tensor[(13, 3, 15), bool], Tensor[(210), float64], Tensor[(?, 2, 15), int16]) */;
  %487 = cast(meta[relay.Constant][40] /* ty=Tensor[(585), int16] */, dtype="int16") /* ty=Tensor[(585), int16] */;
  %488 = cast(%477, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %489 = reshape(%487, newshape=[13, 3, 15]) /* ty=Tensor[(13, 3, 15), int16] */;
  %490 = reshape(%488, newshape=[210, 7]) /* ty=Tensor[(210, 7), float32] */;
  %491 = @func_477(%489, %490) /* ty=(Tensor[(13, 3, 15), bool], Tensor[(210), float64], Tensor[(210, 7), int64], Tensor[(6, 7, 5), int32]) */;
  %492 = cast(%462, dtype="float32") /* ty=Tensor[(210), float32] */;
  %493 = @func_4426() /* ty=(Tensor[(5, 15, 4), float64],) */;
  %494 = %486.3;
  %495 = @func_2632() /* ty=Tensor[(5, 15, 4), float32] */;
  %496 = @func_2632() /* ty=Tensor[(5, 15, 4), float32] */;
  %497 = %491.3;
  %498 = log(%492) /* ty=Tensor[(210), float32] */;
  %499 = %493.0;
  (%479, %477, meta[relay.Constant][40] /* ty=Tensor[(585), int16] */, meta[relay.Constant][41] /* ty=Tensor[(1470), float32] */, %494, %var_4589, meta[relay.Constant][42] /* ty=Tensor[(72), float32] */, %495, %496, %497, %498, %499)
}

def @func_5324(%var_5298: Tensor[(5, 15, 4), float32]) -> (Tensor[(5, 15, 4), bool],) {
  %500 = @func_4815() /* ty=(Tensor[(5, 15, 4), float32],) */;
  %501 = %500.0;
  %502 = cast(%var_5298, dtype="bool") /* ty=Tensor[(5, 15, 4), bool] */;
  %503 = shape_of(%501, dtype="int32") /* ty=Tensor[(3), int32] */;
  %504 = cast(%501, dtype="bool") /* ty=Tensor[(5, 15, 4), bool] */;
  %505 = dyn.reshape(%502, %503, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %506 = logical_or(%504, %505) /* ty=Tensor[(5, 15, 4), bool] */;
  (%506,)
}

def @func_4977() -> (Tensor[(5, 15, 4), float32], Tensor[(15, 14, 10), float64], Tensor[(2100), float64]) {
  %507 = @func_2614() /* ty=(Tensor[(5, 15, 4), bool],) */;
  %508 = %507.0;
  %509 = cast(%508, dtype="float32") /* ty=Tensor[(5, 15, 4), float32] */;
  %510 = cast(meta[relay.Constant][43] /* ty=Tensor[(2100), float64] */, dtype="float64") /* ty=Tensor[(2100), float64] */;
  %511 = cast(meta[relay.Constant][43] /* ty=Tensor[(2100), float64] */, dtype="float64") /* ty=Tensor[(2100), float64] */;
  %512 = reshape(%510, newshape=[15, 14, 10]) /* ty=Tensor[(15, 14, 10), float64] */;
  %513 = reshape(%511, newshape=[15, 14, 10]) /* ty=Tensor[(15, 14, 10), float64] */;
  %514 = log2(%509) /* ty=Tensor[(5, 15, 4), float32] */;
  %515 = @func_954(%512, %513) /* ty=Tensor[(15, 14, 10), float64] */;
  (%514, %515, meta[relay.Constant][43] /* ty=Tensor[(2100), float64] */)
}

def @func_7204(%var_7191: Tensor[(585), int16], %var_7192: Tensor[(490, 3), float32], %var_7196: Tensor[(490, 3), float32]) -> (Tensor[(210), float64], Tensor[(13, 3, 15), bool], Tensor[(585), int16], Tensor[(490, 3), bool]) {
  %516 = @func_2826() /* ty=(Tensor[(210), float64],) */;
  %517 = cast(%var_7191, dtype="int16") /* ty=Tensor[(585), int16] */;
  %518 = cast(%var_7192, dtype="float32") /* ty=Tensor[(490, 3), float32] */;
  %519 = reshape(%517, newshape=[13, 3, 15]) /* ty=Tensor[(13, 3, 15), int16] */;
  %520 = reshape(%518, newshape=[210, 7]) /* ty=Tensor[(210, 7), float32] */;
  %521 = @func_477(%519, %520) /* ty=(Tensor[(13, 3, 15), bool], Tensor[(210), float64], Tensor[(210, 7), int64], Tensor[(6, 7, 5), int32]) */;
  %522 = cast(%var_7196, dtype="bool") /* ty=Tensor[(490, 3), bool] */;
  %523 = shape_of(%var_7192, dtype="int32") /* ty=Tensor[(2), int32] */;
  %524 = cast(%var_7192, dtype="bool") /* ty=Tensor[(490, 3), bool] */;
  %525 = dyn.reshape(%522, %523, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %526 = %516.0;
  %527 = %521.0;
  %528 = less(%524, %525) /* ty=Tensor[(490, 3), bool] */;
  (%526, %527, %var_7191, %528)
}

def @func_4426() -> (Tensor[(5, 15, 4), float64],) {
  %529 = @func_2975() /* ty=Tensor[(5, 15, 4), float64] */;
  (%529,)
}

def @func_2926(%var_2873: Tensor[(16, 6, 1), int8], %var_2874: Tensor[(16, 6, 9), int8], %var_2888: Tensor[(5, 42), float64], %var_2897: Tensor[(72, 4), float32]) -> (Tensor[(15, 14, 10), float64], Tensor[(30, 70), float64], Tensor[(5, 9, 16), float32], Tensor[(720), float32], Tensor[(5, 42), float64], Tensor[(5, 15, 4), float32], Tensor[(126), float64], Tensor[(72, 4), float32], float64, Tensor[(16, 6, 9), int8], float64, Tensor[(176), float64], Tensor[(2025), float32], Tensor[(585), int16], Tensor[(72), float32], Tensor[(1470), float32], Tensor[(5, 15, 4), float32], Tensor[(6, 7, 5), int32]) {
  %530 = cast(meta[relay.Constant][44] /* ty=Tensor[(30, 70), float64] */, dtype="float64") /* ty=Tensor[(30, 70), float64] */;
  %531 = cast(meta[relay.Constant][44] /* ty=Tensor[(30, 70), float64] */, dtype="float64") /* ty=Tensor[(30, 70), float64] */;
  %532 = reshape(%530, newshape=[15, 14, 10]) /* ty=Tensor[(15, 14, 10), float64] */;
  %533 = reshape(%531, newshape=[15, 14, 10]) /* ty=Tensor[(15, 14, 10), float64] */;
  %534 = cast(meta[relay.Constant][45] /* ty=Tensor[(720), float32] */, dtype="float32") /* ty=Tensor[(720), float32] */;
  %535 = cast(%var_2888, dtype="float64") /* ty=Tensor[(5, 42), float64] */;
  %536 = cast(meta[relay.Constant][45] /* ty=Tensor[(720), float32] */, dtype="float32") /* ty=Tensor[(720), float32] */;
  %537 = reshape(%534, newshape=[5, 9, 16]) /* ty=Tensor[(5, 9, 16), float32] */;
  %538 = reshape(%535, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %539 = reshape(%536, newshape=[5, 9, 16]) /* ty=Tensor[(5, 9, 16), float32] */;
  %540 = @func_908(%537, %538, %539) /* ty=(Tensor[(5, 9, 16), float32], Tensor[(6, 7, 5), int32], Tensor[(210), float64], Tensor[(5, 9, 16), bool], Tensor[(6, 7, 5), int32]) */;
  %541 = cast(%var_2897, dtype="float32") /* ty=Tensor[(72, 4), float32] */;
  %542 = cast(%var_2897, dtype="float32") /* ty=Tensor[(72, 4), float32] */;
  %543 = cast(2.02435f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %544 = reshape(%541, newshape=[16, 9, 2]) /* ty=Tensor[(16, 9, 2), float32] */;
  %545 = reshape(%542, newshape=[16, 9, 2]) /* ty=Tensor[(16, 9, 2), float32] */;
  %546 = reshape(%543, newshape=[]) /* ty=float64 */;
  %547 = @func_1439(%544, %545, %546) /* ty=(Tensor[(16, 9, 2), float32], Tensor[(14, 3, 3), bool], float64, Tensor[(126), float64], Tensor[(14, 3, 3), bool]) */;
  %548 = cast(%var_2873, dtype="float32") /* ty=Tensor[(16, 6, 1), float32] */;
  %549 = atan(%548) /* ty=Tensor[(16, 6, 1), float32] */;
  %550 = cast(%var_2873, dtype="int8") /* ty=Tensor[(16, 6, 1), int8] */;
  %551 = cast(%var_2874, dtype="int8") /* ty=Tensor[(16, 6, 9), int8] */;
  %552 = left_shift(%550, %551) /* ty=Tensor[(16, 6, 9), int8] */;
  %553 = cast(%549, dtype="int8") /* ty=Tensor[(16, 6, 1), int8] */;
  %554 = cast(%552, dtype="int8") /* ty=Tensor[(16, 6, 9), int8] */;
  %555 = cast(meta[relay.Constant][46] /* ty=Tensor[(176), float64] */, dtype="float64") /* ty=Tensor[(176), float64] */;
  %556 = cast(meta[relay.Constant][47] /* ty=Tensor[(2025), float32] */, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %557 = %547.3;
  %558 = cast(%557, dtype="float64") /* ty=Tensor[(126), float64] */;
  %559 = reshape(%555, newshape=[1, 16, 11]) /* ty=Tensor[(1, 16, 11), float64] */;
  %560 = reshape(%556, newshape=[2025]) /* ty=Tensor[(2025), float32] */;
  %561 = reshape(%558, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %562 = @func_2026(%559, %560, %561) /* ty=(Tensor[(13, 12, 2), int64], Tensor[(105, 2), float64], Tensor[(13, 12, 2), int64], Tensor[(2025), float32], Tensor[(14, 3, 3), bool], float64, Tensor[(126), float64], Tensor[(12, 16, 11), uint8], Tensor[(?, 16, 11), bool]) */;
  %563 = %562.5;
  %564 = cast(%563, dtype="float32") /* ty=float32 */;
  %565 = cast(meta[relay.Constant][48] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %566 = cast(meta[relay.Constant][49] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %567 = cast(%var_2888, dtype="float64") /* ty=Tensor[(5, 42), float64] */;
  %568 = reshape(%564, newshape=[]) /* ty=float32 */;
  %569 = reshape(%565, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %570 = reshape(%566, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
  %571 = reshape(%567, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %572 = @func_2681(%568, %569, %570, %571) /* ty=(Tensor[(5, 15, 4), float32], Tensor[(5, 9, 16), float32], float32, Tensor[(72), float32], Tensor[(585), int16], Tensor[(1470), float32], Tensor[(210), float64]) */;
  %573 = %540.0;
  %574 = cast(%573, dtype="float32") /* ty=Tensor[(5, 9, 16), float32] */;
  %575 = cast(%var_2888, dtype="float64") /* ty=Tensor[(5, 42), float64] */;
  %576 = cast(meta[relay.Constant][45] /* ty=Tensor[(720), float32] */, dtype="float32") /* ty=Tensor[(720), float32] */;
  %577 = reshape(%574, newshape=[5, 9, 16]) /* ty=Tensor[(5, 9, 16), float32] */;
  %578 = reshape(%575, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %579 = reshape(%576, newshape=[5, 9, 16]) /* ty=Tensor[(5, 9, 16), float32] */;
  %580 = @func_908(%577, %578, %579) /* ty=(Tensor[(5, 9, 16), float32], Tensor[(6, 7, 5), int32], Tensor[(210), float64], Tensor[(5, 9, 16), bool], Tensor[(6, 7, 5), int32]) */;
  %581 = @func_954(%532, %533) /* ty=Tensor[(15, 14, 10), float64] */;
  %582 = @func_2632() /* ty=Tensor[(5, 15, 4), float32] */;
  %583 = maximum(%553, %554) /* ty=Tensor[(16, 6, 9), int8] */;
  %584 = %572.4;
  %585 = @func_1957() /* ty=Tensor[(5, 15, 4), float32] */;
  %586 = %580.1;
  (%581, meta[relay.Constant][44] /* ty=Tensor[(30, 70), float64] */, %573, meta[relay.Constant][45] /* ty=Tensor[(720), float32] */, %var_2888, %582, %557, %var_2897, 2.02435f64 /* ty=float64 */, %583, %563, meta[relay.Constant][46] /* ty=Tensor[(176), float64] */, meta[relay.Constant][47] /* ty=Tensor[(2025), float32] */, %584, meta[relay.Constant][48] /* ty=Tensor[(72), float32] */, meta[relay.Constant][49] /* ty=Tensor[(1470), float32] */, %585, %586)
}

def @func_954(%var_937: Tensor[(15, 14, 10), float64], %var_938: Tensor[(15, 14, 10), float64]) -> Tensor[(15, 14, 10), float64] {
  %587 = cast(%var_938, dtype="float64") /* ty=Tensor[(15, 14, 10), float64] */;
  %588 = shape_of(%var_937, dtype="int32") /* ty=Tensor[(3), int32] */;
  %589 = cast(%var_937, dtype="float64") /* ty=Tensor[(15, 14, 10), float64] */;
  %590 = dyn.reshape(%587, %588, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_divide(%589, %590) /* ty=Tensor[(15, 14, 10), float64] */
}

def @func_3245() -> (Tensor[(5, 15, 4), float32],) {
  %591 = @func_2632() /* ty=Tensor[(5, 15, 4), float32] */;
  (%591,)
}

def @func_6757() -> Tensor[(168), float64] {
  %592 = @func_2226() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(168), float64], Tensor[(6, 7, 5), int32], Tensor[(210), float64], Tensor[(13, 12, 2), bool], Tensor[(6, 7, 5), int32]) */;
  %592.1
}

def @func_3769() -> Tensor[(5, 15, 4), float32] {
  @func_1957() /* ty=Tensor[(5, 15, 4), float32] */
}

def @func_4527(%var_4493: Tensor[(5, 12, 9), float64], %var_4512: Tensor[(300), float32]) -> (Tensor[(5, 12, 9), float64], Tensor[(2025), float32], Tensor[(300), float32], Tensor[(176, 1), float64], Tensor[(2025), float32], Tensor[(5, 15, 4), float64]) {
  %593 = cast(%var_4493, dtype="float64") /* ty=Tensor[(5, 12, 9), float64] */;
  %594 = cast(%var_4512, dtype="float32") /* ty=Tensor[(300), float32] */;
  %595 = cast(meta[relay.Constant][50] /* ty=Tensor[(176, 1), float64] */, dtype="float64") /* ty=Tensor[(176, 1), float64] */;
  %596 = cast(meta[relay.Constant][51] /* ty=Tensor[(2025), float32] */, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %597 = reshape(%594, newshape=[5, 15, 4]) /* ty=Tensor[(5, 15, 4), float32] */;
  %598 = reshape(%595, newshape=[176]) /* ty=Tensor[(176), float64] */;
  %599 = reshape(%596, newshape=[2025]) /* ty=Tensor[(2025), float32] */;
  %600 = @func_4371(%597, %598, %599) /* ty=(Tensor[(5, 15, 4), int64], float64, Tensor[(176), float64], Tensor[(2025), float32], Tensor[(126), float64], Tensor[(6, 7, 5), int32]) */;
  %601 = @func_3302() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float64]) */;
  %602 = acosh(%593) /* ty=Tensor[(5, 12, 9), float64] */;
  %603 = %600.3;
  %604 = %601.1;
  (%602, %603, %var_4512, meta[relay.Constant][50] /* ty=Tensor[(176, 1), float64] */, meta[relay.Constant][51] /* ty=Tensor[(2025), float32] */, %604)
}

def @func_2632() -> Tensor[(5, 15, 4), float32] {
  @func_1957() /* ty=Tensor[(5, 15, 4), float32] */
}

def @func_4815() -> (Tensor[(5, 15, 4), float32],) {
  %605 = @func_3433() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float32], Tensor[(65, 9), float32]) */;
  %606 = %605.1;
  (%606,)
}

def @func_2975() -> Tensor[(5, 15, 4), float64] {
  %607 = @func_2320() /* ty=(Tensor[(5, 15, 4), bool], Tensor[(5, 15, 4), bool]) */;
  %608 = %607.1;
  %609 = cast(%608, dtype="float64") /* ty=Tensor[(5, 15, 4), float64] */;
  sigmoid(%609) /* ty=Tensor[(5, 15, 4), float64] */
}

def @func_6107() -> (Tensor[(5, 15, 4), float32], Tensor[(72), float32], Tensor[(585), int16]) {
  %610 = cast(meta[relay.Constant][52] /* ty=Tensor[(585), int16] */, dtype="int16") /* ty=Tensor[(585), int16] */;
  %611 = reshape(%610, newshape=[585]) /* ty=Tensor[(585), int16] */;
  %612 = @func_3465(%611) /* ty=(Tensor[(2025), float32], Tensor[(1470), float32], Tensor[(72), float32], Tensor[(585), int16]) */;
  %613 = @func_2632() /* ty=Tensor[(5, 15, 4), float32] */;
  %614 = %612.2;
  (%613, %614, meta[relay.Constant][52] /* ty=Tensor[(585), int16] */)
}

def @func_2681(%var_2669: float32, %var_2670: Tensor[(72), float32], %var_2672: Tensor[(1470), float32], %var_2673: Tensor[(210), float64]) -> (Tensor[(5, 15, 4), float32], Tensor[(5, 9, 16), float32], float32, Tensor[(72), float32], Tensor[(585), int16], Tensor[(1470), float32], Tensor[(210), float64]) {
  %615 = cast(%var_2669, dtype="float32") /* ty=float32 */;
  %616 = cast(%var_2670, dtype="float32") /* ty=Tensor[(72), float32] */;
  %617 = cast(meta[relay.Constant][53] /* ty=Tensor[(585), int16] */, dtype="int16") /* ty=Tensor[(585), int16] */;
  %618 = cast(%var_2672, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %619 = cast(%var_2673, dtype="float64") /* ty=Tensor[(210), float64] */;
  %620 = reshape(%615, newshape=[]) /* ty=float32 */;
  %621 = reshape(%616, newshape=[3, 6, 4]) /* ty=Tensor[(3, 6, 4), float32] */;
  %622 = reshape(%617, newshape=[585]) /* ty=Tensor[(585), int16] */;
  %623 = reshape(%618, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
  %624 = reshape(%619, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %625 = @func_1245(%620, %621, %622, %623, %624) /* ty=(Tensor[(3, 6, 4), float32], Tensor[(210, 7), int64], Tensor[(585), int16], Tensor[(5, 9, 16), float32], Tensor[(60, 12), float32], Tensor[(210), float64], Tensor[(1470), float32], Tensor[(6, 7, 5), int32]) */;
  %626 = @func_2632() /* ty=Tensor[(5, 15, 4), float32] */;
  %627 = %625.3;
  (%626, %627, %var_2669, %var_2670, meta[relay.Constant][53] /* ty=Tensor[(585), int16] */, %var_2672, %var_2673)
}

def @func_5136(%var_5088: uint32, %var_5089: Tensor[(11, 12, 13), uint32], %var_5101: Tensor[(300), float32], %var_5129: Tensor[(11, 12, 13), uint32]) -> (Tensor[(11, 12, 13), uint32], Tensor[(270, 2), float64], Tensor[(300), float32], Tensor[(176, 1), uint16], Tensor[(5, 15, 4), float32], Tensor[(11, 12, 13), uint8]) {
  %628 = cast(%var_5088, dtype="uint32") /* ty=uint32 */;
  %629 = cast(%var_5089, dtype="uint32") /* ty=Tensor[(11, 12, 13), uint32] */;
  %630 = cast(meta[relay.Constant][54] /* ty=Tensor[(270, 2), float64] */, dtype="float64") /* ty=Tensor[(270, 2), float64] */;
  %631 = cast(%var_5101, dtype="float32") /* ty=Tensor[(300), float32] */;
  %632 = reshape(%630, newshape=[5, 12, 9]) /* ty=Tensor[(5, 12, 9), float64] */;
  %633 = reshape(%631, newshape=[300]) /* ty=Tensor[(300), float32] */;
  %634 = @func_4527(%632, %633) /* ty=(Tensor[(5, 12, 9), float64], Tensor[(2025), float32], Tensor[(300), float32], Tensor[(176, 1), float64], Tensor[(2025), float32], Tensor[(5, 15, 4), float64]) */;
  %635 = %634.3;
  %636 = cast(%635, dtype="uint16") /* ty=Tensor[(176, 1), uint16] */;
  %637 = cast(%var_5088, dtype="uint16") /* ty=uint16 */;
  %638 = @func_3302() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float64]) */;
  %639 = cast(%var_5129, dtype="uint64") /* ty=Tensor[(11, 12, 13), uint64] */;
  %640 = shape_of(%var_5089, dtype="int32") /* ty=Tensor[(3), int32] */;
  %641 = cast(%var_5089, dtype="uint64") /* ty=Tensor[(11, 12, 13), uint64] */;
  %642 = dyn.reshape(%639, %640, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %643 = logical_xor(%641, %642) /* ty=Tensor[(11, 12, 13), uint64] */;
  %644 = cast(%643, dtype="uint8") /* ty=Tensor[(11, 12, 13), uint8] */;
  %645 = shape_of(%var_5129, dtype="int32") /* ty=Tensor[(3), int32] */;
  %646 = cast(%var_5129, dtype="uint8") /* ty=Tensor[(11, 12, 13), uint8] */;
  %647 = dyn.reshape(%644, %645, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %648 = maximum(%628, %629) /* ty=Tensor[(11, 12, 13), uint32] */;
  %649 = multiply(%636, %637) /* ty=Tensor[(176, 1), uint16] */;
  %650 = %638.0;
  %651 = bitwise_or(%646, %647) /* ty=Tensor[(11, 12, 13), uint8] */;
  (%648, meta[relay.Constant][54] /* ty=Tensor[(270, 2), float64] */, %var_5101, %649, %650, %651)
}

def @func_5623() -> (Tensor[(5, 15, 4), float32], Tensor[(264), float32], Tensor[(3, 11, 8), float64]) {
  %652 = @func_3545() /* ty=(Tensor[(5, 15, 4), float32],) */;
  %653 = cast(meta[relay.Constant][55] /* ty=Tensor[(264), float32] */, dtype="float32") /* ty=Tensor[(264), float32] */;
  %654 = reshape(%653, newshape=[3, 11, 8]) /* ty=Tensor[(3, 11, 8), float32] */;
  %655 = @func_5024(%654) /* ty=(Tensor[(3, 11, 8), float32], Tensor[(3, 11, 8), bool], Tensor[(6, 7, 5), int32], Tensor[(210), float64]) */;
  %656 = %655.0;
  %657 = cast(%656, dtype="float64") /* ty=Tensor[(3, 11, 8), float64] */;
  %658 = %652.0;
  %659 = exp(%657) /* ty=Tensor[(3, 11, 8), float64] */;
  (%658, meta[relay.Constant][55] /* ty=Tensor[(264), float32] */, %659)
}

def @func_3696() -> (Tensor[(5, 15, 4), float32],) {
  %660 = @func_3245() /* ty=(Tensor[(5, 15, 4), float32],) */;
  %661 = %660.0;
  (%661,)
}

def @func_1943(%var_1940: Tensor[(4, 16, 16), float32]) -> (Tensor[(4, 16, 16), float32],) {
  %662 = cast(%var_1940, dtype="float32") /* ty=Tensor[(4, 16, 16), float32] */;
  %663 = acosh(%662) /* ty=Tensor[(4, 16, 16), float32] */;
  (%663,)
}

def @func_3663() -> (Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float64], Tensor[(210), float64]) {
  %664 = @func_3245() /* ty=(Tensor[(5, 15, 4), float32],) */;
  %665 = @func_3245() /* ty=(Tensor[(5, 15, 4), float32],) */;
  %666 = %665.0;
  %667 = cast(%666, dtype="float64") /* ty=Tensor[(5, 15, 4), float64] */;
  %668 = @func_2826() /* ty=(Tensor[(210), float64],) */;
  %669 = %664.0;
  %670 = sin(%667) /* ty=Tensor[(5, 15, 4), float64] */;
  %671 = %668.0;
  (%669, %670, %671)
}

def @func_4388() -> (Tensor[(5, 15, 4), float32],) {
  %672 = @func_3433() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float32], Tensor[(65, 9), float32]) */;
  %673 = %672.0;
  (%673,)
}

def @func_7029() -> (Tensor[(13, 12, 2), float32],) {
  %674 = @func_4222() /* ty=(Tensor[(5, 15, 4), float64], Tensor[(13, 12, 2), float32], Tensor[(168), float64], Tensor[(5, 15, 4), float32], Tensor[(585), int16], Tensor[(1470), float32]) */;
  %675 = %674.1;
  (%675,)
}

def @func_7302() -> (Tensor[(5, 15, 4), float64],) {
  %676 = @func_3502() /* ty=Tensor[(5, 15, 4), float64] */;
  (%676,)
}

def @func_5858() -> (Tensor[(5, 15, 4), float32],) {
  %677 = @func_3245() /* ty=(Tensor[(5, 15, 4), float32],) */;
  %678 = %677.0;
  (%678,)
}

def @func_406(%var_362: Tensor[(210), float64]) -> (Tensor[(6, 7, 5), int32], Tensor[(210), float64], Tensor[(13, 12, 2), float32], Tensor[(13, 12, 2), int64], Tensor[(6, 7, 5), int32], Tensor[(6, 7, 5), int32]) {
  %679 = cast(%var_362, dtype="float64") /* ty=Tensor[(210), float64] */;
  %680 = cast(%var_362, dtype="float64") /* ty=Tensor[(210), float64] */;
  %681 = reshape(%679, newshape=[6, 7, 5]) /* ty=Tensor[(6, 7, 5), float64] */;
  %682 = reshape(%680, newshape=[6, 7, 5]) /* ty=Tensor[(6, 7, 5), float64] */;
  %683 = cast(meta[relay.Constant][56] /* ty=Tensor[(13, 12, 2), float32] */, dtype="float32") /* ty=Tensor[(13, 12, 2), float32] */;
  %684 = asin(%683) /* ty=Tensor[(13, 12, 2), float32] */;
  %685 = cast(%684, dtype="float32") /* ty=Tensor[(13, 12, 2), float32] */;
  %686 = cast(%684, dtype="int64") /* ty=Tensor[(13, 12, 2), int64] */;
  %687 = shape_of(meta[relay.Constant][56] /* ty=Tensor[(13, 12, 2), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %688 = cast(meta[relay.Constant][56] /* ty=Tensor[(13, 12, 2), float32] */, dtype="int64") /* ty=Tensor[(13, 12, 2), int64] */;
  %689 = dyn.reshape(%686, %687, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %690 = @func_317(%681, %682) /* ty=Tensor[(6, 7, 5), int32] */;
  %691 = cast(%690, dtype="float64") /* ty=Tensor[(6, 7, 5), float64] */;
  %692 = cast(%690, dtype="float64") /* ty=Tensor[(6, 7, 5), float64] */;
  %693 = reshape(%691, newshape=[6, 7, 5]) /* ty=Tensor[(6, 7, 5), float64] */;
  %694 = reshape(%692, newshape=[6, 7, 5]) /* ty=Tensor[(6, 7, 5), float64] */;
  %695 = cast(%var_362, dtype="float64") /* ty=Tensor[(210), float64] */;
  %696 = cast(%var_362, dtype="float64") /* ty=Tensor[(210), float64] */;
  %697 = reshape(%695, newshape=[6, 7, 5]) /* ty=Tensor[(6, 7, 5), float64] */;
  %698 = reshape(%696, newshape=[6, 7, 5]) /* ty=Tensor[(6, 7, 5), float64] */;
  %699 = asinh(%685) /* ty=Tensor[(13, 12, 2), float32] */;
  %700 = left_shift(%688, %689) /* ty=Tensor[(13, 12, 2), int64] */;
  %701 = @func_317(%693, %694) /* ty=Tensor[(6, 7, 5), int32] */;
  %702 = @func_317(%697, %698) /* ty=Tensor[(6, 7, 5), int32] */;
  (%690, %var_362, %699, %700, %701, %702)
}

def @func_4096(%var_4019: Tensor[(585), int16], %var_4020: Tensor[(1470), float32], %var_4035: Tensor[(585), int16]) -> (Tensor[(5, 15, 4), float64], Tensor[(5, 15, 4), float32], Tensor[(210, 7), int64], Tensor[(585), uint16], Tensor[(1470), float32], Tensor[(1, 210), float64], Tensor[(2025), float32], Tensor[(2025), float32], Tensor[(1470), float64]) {
  %703 = cast(%var_4019, dtype="int16") /* ty=Tensor[(585), int16] */;
  %704 = cast(%var_4020, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %705 = reshape(%703, newshape=[13, 3, 15]) /* ty=Tensor[(13, 3, 15), int16] */;
  %706 = reshape(%704, newshape=[210, 7]) /* ty=Tensor[(210, 7), float32] */;
  %707 = @func_477(%705, %706) /* ty=(Tensor[(13, 3, 15), bool], Tensor[(210), float64], Tensor[(210, 7), int64], Tensor[(6, 7, 5), int32]) */;
  %708 = cast(%var_4035, dtype="uint16") /* ty=Tensor[(585), uint16] */;
  %709 = shape_of(%var_4019, dtype="int32") /* ty=Tensor[(1), int32] */;
  %710 = cast(%var_4019, dtype="uint16") /* ty=Tensor[(585), uint16] */;
  %711 = dyn.reshape(%708, %709, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %712 = cast(%var_4020, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %713 = cosh(%712) /* ty=Tensor[(1470), float32] */;
  %714 = cast(meta[relay.Constant][57] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %715 = shape_of(%713, dtype="int32") /* ty=Tensor[(1), int32] */;
  %716 = cast(%713, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %717 = dyn.reshape(%714, %715, newshape=[]) /* ty=Tensor[(?), float32] */;
  %718 = cast(meta[relay.Constant][58] /* ty=Tensor[(2025), float32] */, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %719 = reshape(%718, newshape=[15, 15, 9]) /* ty=Tensor[(15, 15, 9), float32] */;
  %720 = @func_1289(%719) /* ty=(Tensor[(15, 15, 9), float32], Tensor[(13, 12, 2), int64], Tensor[(1, 210), float64]) */;
  %721 = @func_3217() /* ty=(Tensor[(2025), float32],) */;
  %722 = cast(meta[relay.Constant][57] /* ty=Tensor[(1470), float32] */, dtype="bool") /* ty=Tensor[(1470), bool] */;
  %723 = shape_of(%713, dtype="int32") /* ty=Tensor[(1), int32] */;
  %724 = cast(%713, dtype="bool") /* ty=Tensor[(1470), bool] */;
  %725 = dyn.reshape(%722, %723, newshape=[]) /* ty=Tensor[(?), bool] */;
  %726 = less_equal(%724, %725) /* ty=Tensor[(1470), bool] */;
  %727 = cast(%726, dtype="float64") /* ty=Tensor[(1470), float64] */;
  %728 = @func_2975() /* ty=Tensor[(5, 15, 4), float64] */;
  %729 = @func_1957() /* ty=Tensor[(5, 15, 4), float32] */;
  %730 = %707.2;
  %731 = add(%710, %711) /* ty=Tensor[(585), uint16] */;
  %732 = divide(%716, %717) /* ty=Tensor[(1470), float32] */;
  %733 = %720.2;
  %734 = %721.0;
  %735 = atan(%727) /* ty=Tensor[(1470), float64] */;
  (%728, %729, %730, %731, %732, %733, meta[relay.Constant][58] /* ty=Tensor[(2025), float32] */, %734, %735)
}

def @func_1439(%var_1404: Tensor[(16, 9, 2), float32], %var_1405: Tensor[(16, 9, 2), float32], %var_1414: float64) -> (Tensor[(16, 9, 2), float32], Tensor[(14, 3, 3), bool], float64, Tensor[(126), float64], Tensor[(14, 3, 3), bool]) {
  %736 = cast(%var_1405, dtype="float32") /* ty=Tensor[(16, 9, 2), float32] */;
  %737 = shape_of(%var_1404, dtype="int32") /* ty=Tensor[(3), int32] */;
  %738 = cast(%var_1404, dtype="float32") /* ty=Tensor[(16, 9, 2), float32] */;
  %739 = dyn.reshape(%736, %737, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %740 = cast(%var_1414, dtype="float64") /* ty=float64 */;
  %741 = cast(meta[relay.Constant][59] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
  %742 = reshape(%740, newshape=[]) /* ty=float64 */;
  %743 = reshape(%741, newshape=[14, 3, 3]) /* ty=Tensor[(14, 3, 3), float64] */;
  %744 = @func_1331(%742, %743) /* ty=(Tensor[(14, 3, 3), bool],) */;
  %745 = cast(%var_1414, dtype="float64") /* ty=float64 */;
  %746 = cast(meta[relay.Constant][59] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
  %747 = reshape(%745, newshape=[]) /* ty=float64 */;
  %748 = reshape(%746, newshape=[14, 3, 3]) /* ty=Tensor[(14, 3, 3), float64] */;
  %749 = @func_1331(%747, %748) /* ty=(Tensor[(14, 3, 3), bool],) */;
  %750 = power(%738, %739) /* ty=Tensor[(16, 9, 2), float32] */;
  %751 = %744.0;
  %752 = %749.0;
  (%750, %751, %var_1414, meta[relay.Constant][59] /* ty=Tensor[(126), float64] */, %752)
}

def @func_3912(%var_3882: Tensor[(585, 1), int16], %var_3890: Tensor[(126), float64]) -> (Tensor[(5, 15, 4), float32], Tensor[(210), float64], Tensor[(30), float32], Tensor[(585, 1), int16], Tensor[(1470), float32], Tensor[(14, 3, 3), bool], float64, Tensor[(126), float64]) {
  %753 = @func_3245() /* ty=(Tensor[(5, 15, 4), float32],) */;
  %754 = cast(meta[relay.Constant][60] /* ty=Tensor[(30), float32] */, dtype="float32") /* ty=Tensor[(30), float32] */;
  %755 = cast(%var_3882, dtype="int16") /* ty=Tensor[(585, 1), int16] */;
  %756 = cast(meta[relay.Constant][61] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %757 = reshape(%754, newshape=[30]) /* ty=Tensor[(30), float32] */;
  %758 = reshape(%755, newshape=[585]) /* ty=Tensor[(585), int16] */;
  %759 = reshape(%756, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
  %760 = @func_2732(%757, %758, %759) /* ty=(Tensor[(6, 7, 5), int32], Tensor[(210), float64], Tensor[(30), float32], Tensor[(18, 4), float32], Tensor[(585), int16], Tensor[(1470), float32]) */;
  %761 = cast(7.38705f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %762 = cast(%var_3890, dtype="float64") /* ty=Tensor[(126), float64] */;
  %763 = reshape(%761, newshape=[]) /* ty=float64 */;
  %764 = reshape(%762, newshape=[14, 3, 3]) /* ty=Tensor[(14, 3, 3), float64] */;
  %765 = @func_1331(%763, %764) /* ty=(Tensor[(14, 3, 3), bool],) */;
  %766 = %753.0;
  %767 = %760.1;
  %768 = %765.0;
  (%766, %767, meta[relay.Constant][60] /* ty=Tensor[(30), float32] */, %var_3882, meta[relay.Constant][61] /* ty=Tensor[(1470), float32] */, %768, 7.38705f64 /* ty=float64 */, %var_3890)
}

def @func_4371(%var_4351: Tensor[(5, 15, 4), float32], %var_4359: Tensor[(176), float64], %var_4360: Tensor[(2025), float32]) -> (Tensor[(5, 15, 4), int64], float64, Tensor[(176), float64], Tensor[(2025), float32], Tensor[(126), float64], Tensor[(6, 7, 5), int32]) {
  %769 = @func_2632() /* ty=Tensor[(5, 15, 4), float32] */;
  %770 = cast(%var_4351, dtype="int64") /* ty=Tensor[(5, 15, 4), int64] */;
  %771 = shape_of(%769, dtype="int32") /* ty=Tensor[(3), int32] */;
  %772 = cast(%769, dtype="int64") /* ty=Tensor[(5, 15, 4), int64] */;
  %773 = dyn.reshape(%770, %771, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %774 = cast(%var_4359, dtype="float64") /* ty=Tensor[(176), float64] */;
  %775 = cast(%var_4360, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %776 = cast(meta[relay.Constant][62] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
  %777 = reshape(%774, newshape=[1, 16, 11]) /* ty=Tensor[(1, 16, 11), float64] */;
  %778 = reshape(%775, newshape=[2025]) /* ty=Tensor[(2025), float32] */;
  %779 = reshape(%776, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %780 = @func_2026(%777, %778, %779) /* ty=(Tensor[(13, 12, 2), int64], Tensor[(105, 2), float64], Tensor[(13, 12, 2), int64], Tensor[(2025), float32], Tensor[(14, 3, 3), bool], float64, Tensor[(126), float64], Tensor[(12, 16, 11), uint8], Tensor[(?, 16, 11), bool]) */;
  %781 = @func_2226() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(168), float64], Tensor[(6, 7, 5), int32], Tensor[(210), float64], Tensor[(13, 12, 2), bool], Tensor[(6, 7, 5), int32]) */;
  %782 = bitwise_or(%772, %773) /* ty=Tensor[(5, 15, 4), int64] */;
  %783 = %780.5;
  %784 = %781.2;
  (%782, %783, %var_4359, %var_4360, meta[relay.Constant][62] /* ty=Tensor[(126), float64] */, %784)
}

def @func_3134(%var_3089: Tensor[(585, 1), int16], %var_3103: Tensor[(2025), float32], %var_3114: Tensor[(6, 7, 5), float64]) -> (Tensor[(210), float64], Tensor[(585, 1), int16], Tensor[(1, 210), float64], Tensor[(2025), float32], Tensor[(6, 7, 5), float64]) {
  %785 = cast(%var_3089, dtype="int16") /* ty=Tensor[(585, 1), int16] */;
  %786 = reshape(%785, newshape=[65, 9]) /* ty=Tensor[(65, 9), int16] */;
  %787 = @func_2440(%786) /* ty=(Tensor[(5, 15, 4), bool], Tensor[(210), float64], Tensor[(1470), float32], Tensor[(65, 9), float64]) */;
  %788 = cast(%var_3103, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %789 = reshape(%788, newshape=[15, 15, 9]) /* ty=Tensor[(15, 15, 9), float32] */;
  %790 = @func_1289(%789) /* ty=(Tensor[(15, 15, 9), float32], Tensor[(13, 12, 2), int64], Tensor[(1, 210), float64]) */;
  %791 = @func_2226() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(168), float64], Tensor[(6, 7, 5), int32], Tensor[(210), float64], Tensor[(13, 12, 2), bool], Tensor[(6, 7, 5), int32]) */;
  %792 = %791.2;
  %793 = cast(%792, dtype="float64") /* ty=Tensor[(6, 7, 5), float64] */;
  %794 = rsqrt(%793) /* ty=Tensor[(6, 7, 5), float64] */;
  %795 = cast(%var_3114, dtype="bool") /* ty=Tensor[(6, 7, 5), bool] */;
  %796 = shape_of(%794, dtype="int32") /* ty=Tensor[(3), int32] */;
  %797 = cast(%794, dtype="bool") /* ty=Tensor[(6, 7, 5), bool] */;
  %798 = dyn.reshape(%795, %796, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %799 = greater(%797, %798) /* ty=Tensor[(6, 7, 5), bool] */;
  %800 = cast(%799, dtype="float64") /* ty=Tensor[(6, 7, 5), float64] */;
  %801 = %787.1;
  %802 = %790.2;
  %803 = atan(%800) /* ty=Tensor[(6, 7, 5), float64] */;
  (%801, %var_3089, %802, %var_3103, %803)
}

def @func_3984(%var_3980: Tensor[(30), float32]) -> (Tensor[(5, 15, 4), uint64], Tensor[(5, 15, 4), bool], Tensor[(1470), float32], Tensor[(30), float32], Tensor[(585), int16], Tensor[(1470), float32]) {
  %804 = @func_2975() /* ty=Tensor[(5, 15, 4), float64] */;
  %805 = @func_3545() /* ty=(Tensor[(5, 15, 4), float32],) */;
  %806 = %805.0;
  %807 = cast(%806, dtype="uint64") /* ty=Tensor[(5, 15, 4), uint64] */;
  %808 = shape_of(%804, dtype="int32") /* ty=Tensor[(3), int32] */;
  %809 = cast(%804, dtype="uint64") /* ty=Tensor[(5, 15, 4), uint64] */;
  %810 = dyn.reshape(%807, %808, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %811 = cast(%804, dtype="bool") /* ty=Tensor[(5, 15, 4), bool] */;
  %812 = shape_of(%806, dtype="int32") /* ty=Tensor[(3), int32] */;
  %813 = cast(%806, dtype="bool") /* ty=Tensor[(5, 15, 4), bool] */;
  %814 = dyn.reshape(%811, %812, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %815 = cast(%var_3980, dtype="float32") /* ty=Tensor[(30), float32] */;
  %816 = cast(meta[relay.Constant][63] /* ty=Tensor[(585), int16] */, dtype="int16") /* ty=Tensor[(585), int16] */;
  %817 = cast(meta[relay.Constant][64] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %818 = reshape(%815, newshape=[30]) /* ty=Tensor[(30), float32] */;
  %819 = reshape(%816, newshape=[585]) /* ty=Tensor[(585), int16] */;
  %820 = reshape(%817, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
  %821 = @func_2732(%818, %819, %820) /* ty=(Tensor[(6, 7, 5), int32], Tensor[(210), float64], Tensor[(30), float32], Tensor[(18, 4), float32], Tensor[(585), int16], Tensor[(1470), float32]) */;
  %822 = maximum(%809, %810) /* ty=Tensor[(5, 15, 4), uint64] */;
  %823 = greater(%813, %814) /* ty=Tensor[(5, 15, 4), bool] */;
  %824 = %821.5;
  (%822, %823, %824, %var_3980, meta[relay.Constant][63] /* ty=Tensor[(585), int16] */, meta[relay.Constant][64] /* ty=Tensor[(1470), float32] */)
}

def @func_2162() -> (Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float32], Tensor[(2025), float32]) {
  %825 = @func_2114() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float32], Tensor[(2025), float32]) */;
  %826 = cast(meta[relay.Constant][65] /* ty=Tensor[(2025), float32] */, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %827 = reshape(%826, newshape=[27, 75]) /* ty=Tensor[(27, 75), float32] */;
  %828 = @func_2090(%827) /* ty=(Tensor[(5, 15, 4), float32], float64, Tensor[(176), float64], Tensor[(27, 75), float32], Tensor[(126), float64]) */;
  %829 = %825.0;
  %830 = %828.0;
  (%829, %830, meta[relay.Constant][65] /* ty=Tensor[(2025), float32] */)
}

def @func_4874(%var_4865: Tensor[(98, 15), float64]) -> (Tensor[(5, 15, 4), float32], Tensor[(585), int16], float32, Tensor[(210), float64], Tensor[(98, 15), float32], Tensor[(11, 15, 11), int8], Tensor[(1815), int8], Tensor[(2025), float32], Tensor[(98, 15), bool], Tensor[(98, 15), uint32], Tensor[(5, 15, 4), float64]) {
  %831 = cast(-2.41885f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %832 = cast(meta[relay.Constant][66] /* ty=Tensor[(98, 15), float32] */, dtype="float32") /* ty=Tensor[(98, 15), float32] */;
  %833 = cast(meta[relay.Constant][67] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %834 = reshape(%831, newshape=[]) /* ty=float32 */;
  %835 = reshape(%832, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
  %836 = reshape(%833, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %837 = @func_3186(%834, %835, %836) /* ty=(Tensor[(5, 15, 4), float64], Tensor[(210, 7), int64], float32, Tensor[(72), float32], Tensor[(585), int16], Tensor[(1470), float32], Tensor[(210), float64]) */;
  %838 = cast(meta[relay.Constant][66] /* ty=Tensor[(98, 15), float32] */, dtype="float32") /* ty=Tensor[(98, 15), float32] */;
  %839 = cosh(%838) /* ty=Tensor[(98, 15), float32] */;
  %840 = cast(%839, dtype="float32") /* ty=Tensor[(98, 15), float32] */;
  %841 = cast(meta[relay.Constant][68] /* ty=Tensor[(1815), int8] */, dtype="int8") /* ty=Tensor[(1815), int8] */;
  %842 = cast(meta[relay.Constant][68] /* ty=Tensor[(1815), int8] */, dtype="int8") /* ty=Tensor[(1815), int8] */;
  %843 = reshape(%841, newshape=[11, 15, 11]) /* ty=Tensor[(11, 15, 11), int8] */;
  %844 = reshape(%842, newshape=[11, 15, 11]) /* ty=Tensor[(11, 15, 11), int8] */;
  %845 = @func_2162() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float32], Tensor[(2025), float32]) */;
  %846 = cast(%839, dtype="float64") /* ty=Tensor[(98, 15), float64] */;
  %847 = sinh(%846) /* ty=Tensor[(98, 15), float64] */;
  %848 = cast(meta[relay.Constant][66] /* ty=Tensor[(98, 15), float32] */, dtype="bool") /* ty=Tensor[(98, 15), bool] */;
  %849 = shape_of(%847, dtype="int32") /* ty=Tensor[(2), int32] */;
  %850 = cast(%847, dtype="bool") /* ty=Tensor[(98, 15), bool] */;
  %851 = dyn.reshape(%848, %849, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %852 = cast(%var_4865, dtype="uint32") /* ty=Tensor[(98, 15), uint32] */;
  %853 = shape_of(%847, dtype="int32") /* ty=Tensor[(2), int32] */;
  %854 = cast(%847, dtype="uint32") /* ty=Tensor[(98, 15), uint32] */;
  %855 = dyn.reshape(%852, %853, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %856 = @func_4426() /* ty=(Tensor[(5, 15, 4), float64],) */;
  %857 = @func_2632() /* ty=Tensor[(5, 15, 4), float32] */;
  %858 = %837.4;
  %859 = tan(%840) /* ty=Tensor[(98, 15), float32] */;
  %860 = @func_2253(%843, %844) /* ty=Tensor[(11, 15, 11), int8] */;
  %861 = %845.2;
  %862 = less(%850, %851) /* ty=Tensor[(98, 15), bool] */;
  %863 = subtract(%854, %855) /* ty=Tensor[(98, 15), uint32] */;
  %864 = %856.0;
  (%857, %858, -2.41885f /* ty=float32 */, meta[relay.Constant][67] /* ty=Tensor[(210), float64] */, %859, %860, meta[relay.Constant][68] /* ty=Tensor[(1815), int8] */, %861, %862, %863, %864)
}

def @func_6939(%var_6935: int32) -> (Tensor[(2025), float32], Tensor[(585), int16], int32, Tensor[(1, 70), int32], Tensor[(585), int16]) {
  %865 = @func_2114() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float32], Tensor[(2025), float32]) */;
  %866 = cast(%var_6935, dtype="int32") /* ty=int32 */;
  %867 = cast(meta[relay.Constant][69] /* ty=Tensor[(1, 70), int32] */, dtype="int32") /* ty=Tensor[(1, 70), int32] */;
  %868 = cast(meta[relay.Constant][70] /* ty=Tensor[(585), int16] */, dtype="int16") /* ty=Tensor[(585), int16] */;
  %869 = %865.2;
  %870 = cast(%869, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %871 = reshape(%866, newshape=[]) /* ty=int32 */;
  %872 = reshape(%867, newshape=[14, 5, 1]) /* ty=Tensor[(14, 5, 1), int32] */;
  %873 = reshape(%868, newshape=[585]) /* ty=Tensor[(585), int16] */;
  %874 = reshape(%870, newshape=[2025]) /* ty=Tensor[(2025), float32] */;
  %875 = @func_6206(%871, %872, %873, %874) /* ty=(Tensor[(14, 5, 1), int32], Tensor[(1470), float32], Tensor[(585), int16], Tensor[(27, 75), float32], Tensor[(2025), float32]) */;
  %876 = %875.2;
  (%869, %876, %var_6935, meta[relay.Constant][69] /* ty=Tensor[(1, 70), int32] */, meta[relay.Constant][70] /* ty=Tensor[(585), int16] */)
}

def @func_1704(%var_1659: Tensor[(1, 2, 15), float32], %var_1665: Tensor[(72), float32], %var_1666: Tensor[(195, 3), int16], %var_1667: Tensor[(1470), float32], %var_1668: Tensor[(210), float64]) -> (Tensor[(585), int16], float32, Tensor[(72), float32], Tensor[(195, 3), int16], Tensor[(1470), float32], Tensor[(210), float64], Tensor[(13, 3, 15), bool], Tensor[(210), float64], Tensor[(?, 2, 15), int16]) {
  %877 = cast(-0.355011f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %878 = cast(%var_1665, dtype="float32") /* ty=Tensor[(72), float32] */;
  %879 = cast(%var_1666, dtype="int16") /* ty=Tensor[(195, 3), int16] */;
  %880 = cast(%var_1667, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %881 = cast(%var_1668, dtype="float64") /* ty=Tensor[(210), float64] */;
  %882 = reshape(%877, newshape=[]) /* ty=float32 */;
  %883 = reshape(%878, newshape=[3, 6, 4]) /* ty=Tensor[(3, 6, 4), float32] */;
  %884 = reshape(%879, newshape=[585]) /* ty=Tensor[(585), int16] */;
  %885 = reshape(%880, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
  %886 = reshape(%881, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %887 = @func_1245(%882, %883, %884, %885, %886) /* ty=(Tensor[(3, 6, 4), float32], Tensor[(210, 7), int64], Tensor[(585), int16], Tensor[(5, 9, 16), float32], Tensor[(60, 12), float32], Tensor[(210), float64], Tensor[(1470), float32], Tensor[(6, 7, 5), int32]) */;
  %888 = %887.2;
  %889 = cast(%888, dtype="int16") /* ty=Tensor[(585), int16] */;
  %890 = cast(%var_1667, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %891 = reshape(%889, newshape=[13, 3, 15]) /* ty=Tensor[(13, 3, 15), int16] */;
  %892 = reshape(%890, newshape=[210, 7]) /* ty=Tensor[(210, 7), float32] */;
  %893 = @func_477(%891, %892) /* ty=(Tensor[(13, 3, 15), bool], Tensor[(210), float64], Tensor[(210, 7), int64], Tensor[(6, 7, 5), int32]) */;
  %894 = cast(-0.355011f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %895 = cast(%var_1665, dtype="float32") /* ty=Tensor[(72), float32] */;
  %896 = cast(%888, dtype="int16") /* ty=Tensor[(585), int16] */;
  %897 = cast(%var_1667, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %898 = cast(%var_1668, dtype="float64") /* ty=Tensor[(210), float64] */;
  %899 = reshape(%894, newshape=[]) /* ty=float32 */;
  %900 = reshape(%895, newshape=[3, 6, 4]) /* ty=Tensor[(3, 6, 4), float32] */;
  %901 = reshape(%896, newshape=[585]) /* ty=Tensor[(585), int16] */;
  %902 = reshape(%897, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
  %903 = reshape(%898, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %904 = @func_1245(%899, %900, %901, %902, %903) /* ty=(Tensor[(3, 6, 4), float32], Tensor[(210, 7), int64], Tensor[(585), int16], Tensor[(5, 9, 16), float32], Tensor[(60, 12), float32], Tensor[(210), float64], Tensor[(1470), float32], Tensor[(6, 7, 5), int32]) */;
  %905 = cast(%var_1659, dtype="float32") /* ty=Tensor[(1, 2, 15), float32] */;
  %906 = log2(%905) /* ty=Tensor[(1, 2, 15), float32] */;
  %907 = cast(%var_1659, dtype="int16") /* ty=Tensor[(1, 2, 15), int16] */;
  %908 = shape_of(%906, dtype="int32") /* ty=Tensor[(3), int32] */;
  %909 = cast(%906, dtype="int16") /* ty=Tensor[(1, 2, 15), int16] */;
  %910 = dyn.reshape(%907, %908, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %911 = %893.0;
  %912 = %904.5;
  %913 = bitwise_and(%909, %910) /* ty=Tensor[(?, 2, 15), int16] */;
  (%888, -0.355011f /* ty=float32 */, %var_1665, %var_1666, %var_1667, %var_1668, %911, %912, %913)
}

def @func_4270() -> (Tensor[(5, 15, 4), float64],) {
  %914 = @func_3502() /* ty=Tensor[(5, 15, 4), float64] */;
  (%914,)
}

def @func_5024(%var_4991: Tensor[(3, 11, 8), float32]) -> (Tensor[(3, 11, 8), float32], Tensor[(3, 11, 8), bool], Tensor[(6, 7, 5), int32], Tensor[(210), float64]) {
  %915 = cast(meta[relay.Constant][71] /* ty=Tensor[(3, 11, 8), float32] */, dtype="float32") /* ty=Tensor[(3, 11, 8), float32] */;
  %916 = shape_of(%var_4991, dtype="int32") /* ty=Tensor[(3), int32] */;
  %917 = cast(%var_4991, dtype="float32") /* ty=Tensor[(3, 11, 8), float32] */;
  %918 = dyn.reshape(%915, %916, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %919 = cast(meta[relay.Constant][71] /* ty=Tensor[(3, 11, 8), float32] */, dtype="bool") /* ty=Tensor[(3, 11, 8), bool] */;
  %920 = shape_of(%var_4991, dtype="int32") /* ty=Tensor[(3), int32] */;
  %921 = cast(%var_4991, dtype="bool") /* ty=Tensor[(3, 11, 8), bool] */;
  %922 = dyn.reshape(%919, %920, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %923 = cast(meta[relay.Constant][72] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %924 = reshape(%923, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %925 = @func_406(%924) /* ty=(Tensor[(6, 7, 5), int32], Tensor[(210), float64], Tensor[(13, 12, 2), float32], Tensor[(13, 12, 2), int64], Tensor[(6, 7, 5), int32], Tensor[(6, 7, 5), int32]) */;
  %926 = floor_mod(%917, %918) /* ty=Tensor[(3, 11, 8), float32] */;
  %927 = less_equal(%921, %922) /* ty=Tensor[(3, 11, 8), bool] */;
  %928 = %925.5;
  (%926, %927, %928, meta[relay.Constant][72] /* ty=Tensor[(210), float64] */)
}

def @func_6479() -> (Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float64]) {
  %929 = @func_3545() /* ty=(Tensor[(5, 15, 4), float32],) */;
  %930 = @func_3302() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float64]) */;
  %931 = %930.0;
  %932 = cast(%931, dtype="float64") /* ty=Tensor[(5, 15, 4), float64] */;
  %933 = %929.0;
  %934 = acosh(%932) /* ty=Tensor[(5, 15, 4), float64] */;
  (%933, %934)
}

def @func_2090(%var_2072: Tensor[(27, 75), float32]) -> (Tensor[(5, 15, 4), float32], float64, Tensor[(176), float64], Tensor[(27, 75), float32], Tensor[(126), float64]) {
  %935 = cast(meta[relay.Constant][73] /* ty=Tensor[(176), float64] */, dtype="float64") /* ty=Tensor[(176), float64] */;
  %936 = cast(%var_2072, dtype="float32") /* ty=Tensor[(27, 75), float32] */;
  %937 = cast(meta[relay.Constant][74] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
  %938 = reshape(%935, newshape=[1, 16, 11]) /* ty=Tensor[(1, 16, 11), float64] */;
  %939 = reshape(%936, newshape=[2025]) /* ty=Tensor[(2025), float32] */;
  %940 = reshape(%937, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %941 = @func_2026(%938, %939, %940) /* ty=(Tensor[(13, 12, 2), int64], Tensor[(105, 2), float64], Tensor[(13, 12, 2), int64], Tensor[(2025), float32], Tensor[(14, 3, 3), bool], float64, Tensor[(126), float64], Tensor[(12, 16, 11), uint8], Tensor[(?, 16, 11), bool]) */;
  %942 = @func_1957() /* ty=Tensor[(5, 15, 4), float32] */;
  %943 = %941.5;
  (%942, %943, meta[relay.Constant][73] /* ty=Tensor[(176), float64] */, %var_2072, meta[relay.Constant][74] /* ty=Tensor[(126), float64] */)
}

def @func_2226() -> (Tensor[(5, 15, 4), float32], Tensor[(168), float64], Tensor[(6, 7, 5), int32], Tensor[(210), float64], Tensor[(13, 12, 2), bool], Tensor[(6, 7, 5), int32]) {
  %944 = @func_2114() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float32], Tensor[(2025), float32]) */;
  %945 = cast(meta[relay.Constant][76] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %946 = reshape(%945, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %947 = @func_406(%946) /* ty=(Tensor[(6, 7, 5), int32], Tensor[(210), float64], Tensor[(13, 12, 2), float32], Tensor[(13, 12, 2), int64], Tensor[(6, 7, 5), int32], Tensor[(6, 7, 5), int32]) */;
  %948 = cast(meta[relay.Constant][75] /* ty=Tensor[(168), float64] */, dtype="float64") /* ty=Tensor[(168), float64] */;
  %949 = reshape(%948, newshape=[8, 3, 7]) /* ty=Tensor[(8, 3, 7), float64] */;
  %950 = @func_1626(%949) /* ty=(Tensor[(13, 12, 2), float32], Tensor[(210), float64], Tensor[(8, 3, 7), float32]) */;
  %951 = %950.0;
  %952 = cast(meta[relay.Constant][77] /* ty=Tensor[(13, 12, 2), float32] */, dtype="bool") /* ty=Tensor[(13, 12, 2), bool] */;
  %953 = shape_of(%951, dtype="int32") /* ty=Tensor[(3), int32] */;
  %954 = cast(%951, dtype="bool") /* ty=Tensor[(13, 12, 2), bool] */;
  %955 = dyn.reshape(%952, %953, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %956 = %947.4;
  %957 = cast(%956, dtype="float64") /* ty=Tensor[(6, 7, 5), float64] */;
  %958 = reshape(%957, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %959 = @func_406(%958) /* ty=(Tensor[(6, 7, 5), int32], Tensor[(210), float64], Tensor[(13, 12, 2), float32], Tensor[(13, 12, 2), int64], Tensor[(6, 7, 5), int32], Tensor[(6, 7, 5), int32]) */;
  %960 = %944.1;
  %961 = less(%954, %955) /* ty=Tensor[(13, 12, 2), bool] */;
  %962 = %959.5;
  (%960, meta[relay.Constant][75] /* ty=Tensor[(168), float64] */, %956, meta[relay.Constant][76] /* ty=Tensor[(210), float64] */, %961, %962)
}

def @func_3302() -> (Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float64]) {
  %963 = @func_1957() /* ty=Tensor[(5, 15, 4), float32] */;
  %964 = cast(%963, dtype="float32") /* ty=Tensor[(5, 15, 4), float32] */;
  %965 = cast(%963, dtype="float64") /* ty=Tensor[(5, 15, 4), float64] */;
  %966 = asin(%965) /* ty=Tensor[(5, 15, 4), float64] */;
  %967 = cast(%966, dtype="float32") /* ty=Tensor[(5, 15, 4), float32] */;
  %968 = acos(%967) /* ty=Tensor[(5, 15, 4), float32] */;
  %969 = cast(%968, dtype="float64") /* ty=Tensor[(5, 15, 4), float64] */;
  %970 = log(%964) /* ty=Tensor[(5, 15, 4), float32] */;
  %971 = rsqrt(%969) /* ty=Tensor[(5, 15, 4), float64] */;
  (%970, %971)
}

def @func_6994() -> Tensor[(5, 15, 4), float32] {
  %972 = @func_5725() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(72), float32], Tensor[(585), int16]) */;
  %972.0
}

def @func_7103() -> (Tensor[(5, 15, 4), float64],) {
  %973 = @func_3663() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float64], Tensor[(210), float64]) */;
  %974 = %973.1;
  (%974,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_3698() -> (Tensor[(5, 15, 4), float32],) {
  @func_3696() /* ty=(Tensor[(5, 15, 4), float32],) */
}

def @func_3848(%var_3792: Tensor[(5, 15, 4), float64], %var_3800: float32, %var_3801: Tensor[(1470), float32], %var_3802: Tensor[(210), float64], %var_3820: Tensor[(585), int16]) -> (Tensor[(5, 15, 4), int32], Tensor[(210), float64], float32, Tensor[(1470), float32], Tensor[(210), float64], Tensor[(1470), float32], Tensor[(585), int16]) {
  %0 = @func_3502() /* ty=Tensor[(5, 15, 4), float64] */;
  %1 = cast(%var_3792, dtype="int32") /* ty=Tensor[(5, 15, 4), int32] */;
  %2 = shape_of(%0, dtype="int32") /* ty=Tensor[(3), int32] */;
  %3 = cast(%0, dtype="int32") /* ty=Tensor[(5, 15, 4), int32] */;
  %4 = dyn.reshape(%1, %2, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %5 = cast(%var_3800, dtype="float32") /* ty=float32 */;
  %6 = cast(%var_3801, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %7 = cast(%var_3802, dtype="float64") /* ty=Tensor[(210), float64] */;
  %8 = reshape(%5, newshape=[]) /* ty=float32 */;
  %9 = reshape(%6, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
  %10 = reshape(%7, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %11 = @func_3186(%8, %9, %10) /* ty=(Tensor[(5, 15, 4), float64], Tensor[(210, 7), int64], float32, Tensor[(72), float32], Tensor[(585), int16], Tensor[(1470), float32], Tensor[(210), float64]) */;
  %12 = cast(%var_3820, dtype="int16") /* ty=Tensor[(585), int16] */;
  %13 = reshape(%12, newshape=[65, 9]) /* ty=Tensor[(65, 9), int16] */;
  %14 = @func_2440(%13) /* ty=(Tensor[(5, 15, 4), bool], Tensor[(210), float64], Tensor[(1470), float32], Tensor[(65, 9), float64]) */;
  %15 = bitwise_xor(%3, %4) /* ty=Tensor[(5, 15, 4), int32] */;
  %16 = %11.6;
  %17 = %14.2;
  (%15, %16, %var_3800, %var_3801, %var_3802, %17, %var_3820)
}

def @func_6212(%var_6208: int32, %var_6209: Tensor[(14, 5, 1), int32], %var_6210: Tensor[(585), int16], %var_6211: Tensor[(2025), float32]) -> (Tensor[(14, 5, 1), int32], Tensor[(1470), float32], Tensor[(585), int16], Tensor[(27, 75), float32], Tensor[(2025), float32]) {
  @func_6206(%var_6208, %var_6209, %var_6210, %var_6211) /* ty=(Tensor[(14, 5, 1), int32], Tensor[(1470), float32], Tensor[(585), int16], Tensor[(27, 75), float32], Tensor[(2025), float32]) */
}

def @func_954(%var_937: Tensor[(15, 14, 10), float64], %var_938: Tensor[(15, 14, 10), float64]) -> Tensor[(15, 14, 10), float64] {
  %18 = cast(%var_938, dtype="float64") /* ty=Tensor[(15, 14, 10), float64] */;
  %19 = shape_of(%var_937, dtype="int32") /* ty=Tensor[(3), int32] */;
  %20 = cast(%var_937, dtype="float64") /* ty=Tensor[(15, 14, 10), float64] */;
  %21 = dyn.reshape(%18, %19, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_divide(%20, %21) /* ty=Tensor[(15, 14, 10), float64] */
}

def @func_4817() -> (Tensor[(5, 15, 4), float32],) {
  @func_4815() /* ty=(Tensor[(5, 15, 4), float32],) */
}

def @func_2686(%var_2682: float32, %var_2683: Tensor[(72), float32], %var_2684: Tensor[(1470), float32], %var_2685: Tensor[(210), float64]) -> (Tensor[(5, 15, 4), float32], Tensor[(5, 9, 16), float32], float32, Tensor[(72), float32], Tensor[(585), int16], Tensor[(1470), float32], Tensor[(210), float64]) {
  %35 = fn (%var_2669: float32, %var_2670: Tensor[(72), float32], %var_2672: Tensor[(1470), float32], %var_2673: Tensor[(210), float64]) -> (Tensor[(5, 15, 4), float32], Tensor[(5, 9, 16), float32], float32, Tensor[(72), float32], Tensor[(585), int16], Tensor[(1470), float32], Tensor[(210), float64]) {
    %22 = cast(%var_2669, dtype="float32") /* ty=float32 */;
    %23 = cast(%var_2670, dtype="float32") /* ty=Tensor[(72), float32] */;
    %24 = cast(meta[relay.Constant][0] /* ty=Tensor[(585), int16] */, dtype="int16") /* ty=Tensor[(585), int16] */;
    %25 = cast(%var_2672, dtype="float32") /* ty=Tensor[(1470), float32] */;
    %26 = cast(%var_2673, dtype="float64") /* ty=Tensor[(210), float64] */;
    %27 = reshape(%22, newshape=[]) /* ty=float32 */;
    %28 = reshape(%23, newshape=[3, 6, 4]) /* ty=Tensor[(3, 6, 4), float32] */;
    %29 = reshape(%24, newshape=[585]) /* ty=Tensor[(585), int16] */;
    %30 = reshape(%25, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
    %31 = reshape(%26, newshape=[210]) /* ty=Tensor[(210), float64] */;
    %32 = @func_1245(%27, %28, %29, %30, %31) /* ty=(Tensor[(3, 6, 4), float32], Tensor[(210, 7), int64], Tensor[(585), int16], Tensor[(5, 9, 16), float32], Tensor[(60, 12), float32], Tensor[(210), float64], Tensor[(1470), float32], Tensor[(6, 7, 5), int32]) */;
    %33 = @func_2632() /* ty=Tensor[(5, 15, 4), float32] */;
    %34 = %32.3;
    (%33, %34, %var_2669, %var_2670, meta[relay.Constant][0] /* ty=Tensor[(585), int16] */, %var_2672, %var_2673)
  };
  %35(%var_2682, %var_2683, %var_2684, %var_2685) /* ty=(Tensor[(5, 15, 4), float32], Tensor[(5, 9, 16), float32], float32, Tensor[(72), float32], Tensor[(585), int16], Tensor[(1470), float32], Tensor[(210), float64]) */
}

def @func_2926(%var_2873: Tensor[(16, 6, 1), int8], %var_2874: Tensor[(16, 6, 9), int8], %var_2888: Tensor[(5, 42), float64], %var_2897: Tensor[(72, 4), float32]) -> (Tensor[(15, 14, 10), float64], Tensor[(30, 70), float64], Tensor[(5, 9, 16), float32], Tensor[(720), float32], Tensor[(5, 42), float64], Tensor[(5, 15, 4), float32], Tensor[(126), float64], Tensor[(72, 4), float32], float64, Tensor[(16, 6, 9), int8], float64, Tensor[(176), float64], Tensor[(2025), float32], Tensor[(585), int16], Tensor[(72), float32], Tensor[(1470), float32], Tensor[(5, 15, 4), float32], Tensor[(6, 7, 5), int32]) {
  %36 = cast(meta[relay.Constant][1] /* ty=Tensor[(30, 70), float64] */, dtype="float64") /* ty=Tensor[(30, 70), float64] */;
  %37 = cast(meta[relay.Constant][1] /* ty=Tensor[(30, 70), float64] */, dtype="float64") /* ty=Tensor[(30, 70), float64] */;
  %38 = reshape(%36, newshape=[15, 14, 10]) /* ty=Tensor[(15, 14, 10), float64] */;
  %39 = reshape(%37, newshape=[15, 14, 10]) /* ty=Tensor[(15, 14, 10), float64] */;
  %40 = cast(meta[relay.Constant][2] /* ty=Tensor[(720), float32] */, dtype="float32") /* ty=Tensor[(720), float32] */;
  %41 = cast(%var_2888, dtype="float64") /* ty=Tensor[(5, 42), float64] */;
  %42 = cast(meta[relay.Constant][2] /* ty=Tensor[(720), float32] */, dtype="float32") /* ty=Tensor[(720), float32] */;
  %43 = reshape(%40, newshape=[5, 9, 16]) /* ty=Tensor[(5, 9, 16), float32] */;
  %44 = reshape(%41, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %45 = reshape(%42, newshape=[5, 9, 16]) /* ty=Tensor[(5, 9, 16), float32] */;
  %46 = @func_908(%43, %44, %45) /* ty=(Tensor[(5, 9, 16), float32], Tensor[(6, 7, 5), int32], Tensor[(210), float64], Tensor[(5, 9, 16), bool], Tensor[(6, 7, 5), int32]) */;
  %47 = cast(%var_2897, dtype="float32") /* ty=Tensor[(72, 4), float32] */;
  %48 = cast(%var_2897, dtype="float32") /* ty=Tensor[(72, 4), float32] */;
  %49 = cast(2.02435f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %50 = reshape(%47, newshape=[16, 9, 2]) /* ty=Tensor[(16, 9, 2), float32] */;
  %51 = reshape(%48, newshape=[16, 9, 2]) /* ty=Tensor[(16, 9, 2), float32] */;
  %52 = reshape(%49, newshape=[]) /* ty=float64 */;
  %53 = @func_1439(%50, %51, %52) /* ty=(Tensor[(16, 9, 2), float32], Tensor[(14, 3, 3), bool], float64, Tensor[(126), float64], Tensor[(14, 3, 3), bool]) */;
  %54 = cast(%var_2873, dtype="float32") /* ty=Tensor[(16, 6, 1), float32] */;
  %55 = atan(%54) /* ty=Tensor[(16, 6, 1), float32] */;
  %56 = cast(%var_2873, dtype="int8") /* ty=Tensor[(16, 6, 1), int8] */;
  %57 = cast(%var_2874, dtype="int8") /* ty=Tensor[(16, 6, 9), int8] */;
  %58 = left_shift(%56, %57) /* ty=Tensor[(16, 6, 9), int8] */;
  %59 = cast(%55, dtype="int8") /* ty=Tensor[(16, 6, 1), int8] */;
  %60 = cast(%58, dtype="int8") /* ty=Tensor[(16, 6, 9), int8] */;
  %61 = cast(meta[relay.Constant][3] /* ty=Tensor[(176), float64] */, dtype="float64") /* ty=Tensor[(176), float64] */;
  %62 = cast(meta[relay.Constant][4] /* ty=Tensor[(2025), float32] */, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %63 = %53.3;
  %64 = cast(%63, dtype="float64") /* ty=Tensor[(126), float64] */;
  %65 = reshape(%61, newshape=[1, 16, 11]) /* ty=Tensor[(1, 16, 11), float64] */;
  %66 = reshape(%62, newshape=[2025]) /* ty=Tensor[(2025), float32] */;
  %67 = reshape(%64, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %68 = @func_2026(%65, %66, %67) /* ty=(Tensor[(13, 12, 2), int64], Tensor[(105, 2), float64], Tensor[(13, 12, 2), int64], Tensor[(2025), float32], Tensor[(14, 3, 3), bool], float64, Tensor[(126), float64], Tensor[(12, 16, 11), uint8], Tensor[(?, 16, 11), bool]) */;
  %69 = %68.5;
  %70 = cast(%69, dtype="float32") /* ty=float32 */;
  %71 = cast(meta[relay.Constant][5] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %72 = cast(meta[relay.Constant][6] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %73 = cast(%var_2888, dtype="float64") /* ty=Tensor[(5, 42), float64] */;
  %74 = reshape(%70, newshape=[]) /* ty=float32 */;
  %75 = reshape(%71, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %76 = reshape(%72, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
  %77 = reshape(%73, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %78 = @func_2681(%74, %75, %76, %77) /* ty=(Tensor[(5, 15, 4), float32], Tensor[(5, 9, 16), float32], float32, Tensor[(72), float32], Tensor[(585), int16], Tensor[(1470), float32], Tensor[(210), float64]) */;
  %79 = %46.0;
  %80 = cast(%79, dtype="float32") /* ty=Tensor[(5, 9, 16), float32] */;
  %81 = cast(%var_2888, dtype="float64") /* ty=Tensor[(5, 42), float64] */;
  %82 = cast(meta[relay.Constant][2] /* ty=Tensor[(720), float32] */, dtype="float32") /* ty=Tensor[(720), float32] */;
  %83 = reshape(%80, newshape=[5, 9, 16]) /* ty=Tensor[(5, 9, 16), float32] */;
  %84 = reshape(%81, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %85 = reshape(%82, newshape=[5, 9, 16]) /* ty=Tensor[(5, 9, 16), float32] */;
  %86 = @func_908(%83, %84, %85) /* ty=(Tensor[(5, 9, 16), float32], Tensor[(6, 7, 5), int32], Tensor[(210), float64], Tensor[(5, 9, 16), bool], Tensor[(6, 7, 5), int32]) */;
  %87 = @func_954(%38, %39) /* ty=Tensor[(15, 14, 10), float64] */;
  %88 = @func_2632() /* ty=Tensor[(5, 15, 4), float32] */;
  %89 = maximum(%59, %60) /* ty=Tensor[(16, 6, 9), int8] */;
  %90 = %78.4;
  %91 = @func_1957() /* ty=Tensor[(5, 15, 4), float32] */;
  %92 = %86.1;
  (%87, meta[relay.Constant][1] /* ty=Tensor[(30, 70), float64] */, %79, meta[relay.Constant][2] /* ty=Tensor[(720), float32] */, %var_2888, %88, %63, %var_2897, 2.02435f64 /* ty=float64 */, %89, %69, meta[relay.Constant][3] /* ty=Tensor[(176), float64] */, meta[relay.Constant][4] /* ty=Tensor[(2025), float32] */, %90, meta[relay.Constant][5] /* ty=Tensor[(72), float32] */, meta[relay.Constant][6] /* ty=Tensor[(1470), float32] */, %91, %92)
}

def @func_6206(%var_6185: int32, %var_6186: Tensor[(14, 5, 1), int32], %var_6191: Tensor[(585), int16], %var_6203: Tensor[(2025), float32]) -> (Tensor[(14, 5, 1), int32], Tensor[(1470), float32], Tensor[(585), int16], Tensor[(27, 75), float32], Tensor[(2025), float32]) {
  %93 = cast(%var_6185, dtype="int32") /* ty=int32 */;
  %94 = cast(%var_6186, dtype="int32") /* ty=Tensor[(14, 5, 1), int32] */;
  %95 = cast(%var_6191, dtype="int16") /* ty=Tensor[(585), int16] */;
  %96 = reshape(%95, newshape=[65, 9]) /* ty=Tensor[(65, 9), int16] */;
  %97 = @func_2440(%96) /* ty=(Tensor[(5, 15, 4), bool], Tensor[(210), float64], Tensor[(1470), float32], Tensor[(65, 9), float64]) */;
  %98 = cast(%var_6203, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %99 = reshape(%98, newshape=[27, 75]) /* ty=Tensor[(27, 75), float32] */;
  %100 = @func_2090(%99) /* ty=(Tensor[(5, 15, 4), float32], float64, Tensor[(176), float64], Tensor[(27, 75), float32], Tensor[(126), float64]) */;
  %101 = multiply(%93, %94) /* ty=Tensor[(14, 5, 1), int32] */;
  %102 = %97.2;
  %103 = %100.3;
  (%101, %102, %var_6191, %103, %var_6203)
}

def @func_7208(%var_7205: Tensor[(585), int16], %var_7206: Tensor[(490, 3), float32], %var_7207: Tensor[(490, 3), float32]) -> (Tensor[(210), float64], Tensor[(13, 3, 15), bool], Tensor[(585), int16], Tensor[(490, 3), bool]) {
  %117 = fn (%var_7191: Tensor[(585), int16], %var_7192: Tensor[(490, 3), float32], %var_7196: Tensor[(490, 3), float32]) -> (Tensor[(210), float64], Tensor[(13, 3, 15), bool], Tensor[(585), int16], Tensor[(490, 3), bool]) {
    %104 = @func_2826() /* ty=(Tensor[(210), float64],) */;
    %105 = cast(%var_7191, dtype="int16") /* ty=Tensor[(585), int16] */;
    %106 = cast(%var_7192, dtype="float32") /* ty=Tensor[(490, 3), float32] */;
    %107 = reshape(%105, newshape=[13, 3, 15]) /* ty=Tensor[(13, 3, 15), int16] */;
    %108 = reshape(%106, newshape=[210, 7]) /* ty=Tensor[(210, 7), float32] */;
    %109 = @func_477(%107, %108) /* ty=(Tensor[(13, 3, 15), bool], Tensor[(210), float64], Tensor[(210, 7), int64], Tensor[(6, 7, 5), int32]) */;
    %110 = cast(%var_7196, dtype="bool") /* ty=Tensor[(490, 3), bool] */;
    %111 = shape_of(%var_7192, dtype="int32") /* ty=Tensor[(2), int32] */;
    %112 = cast(%var_7192, dtype="bool") /* ty=Tensor[(490, 3), bool] */;
    %113 = dyn.reshape(%110, %111, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %114 = %104.0;
    %115 = %109.0;
    %116 = less(%112, %113) /* ty=Tensor[(490, 3), bool] */;
    (%114, %115, %var_7191, %116)
  };
  %117(%var_7205, %var_7206, %var_7207) /* ty=(Tensor[(210), float64], Tensor[(13, 3, 15), bool], Tensor[(585), int16], Tensor[(490, 3), bool]) */
}

def @func_5160() -> Tensor[(585), int16] {
  @func_5158() /* ty=Tensor[(585), int16] */
}

def @func_3984(%var_3980: Tensor[(30), float32]) -> (Tensor[(5, 15, 4), uint64], Tensor[(5, 15, 4), bool], Tensor[(1470), float32], Tensor[(30), float32], Tensor[(585), int16], Tensor[(1470), float32]) {
  %118 = @func_2975() /* ty=Tensor[(5, 15, 4), float64] */;
  %119 = @func_3545() /* ty=(Tensor[(5, 15, 4), float32],) */;
  %120 = %119.0;
  %121 = cast(%120, dtype="uint64") /* ty=Tensor[(5, 15, 4), uint64] */;
  %122 = shape_of(%118, dtype="int32") /* ty=Tensor[(3), int32] */;
  %123 = cast(%118, dtype="uint64") /* ty=Tensor[(5, 15, 4), uint64] */;
  %124 = dyn.reshape(%121, %122, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %125 = cast(%118, dtype="bool") /* ty=Tensor[(5, 15, 4), bool] */;
  %126 = shape_of(%120, dtype="int32") /* ty=Tensor[(3), int32] */;
  %127 = cast(%120, dtype="bool") /* ty=Tensor[(5, 15, 4), bool] */;
  %128 = dyn.reshape(%125, %126, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %129 = cast(%var_3980, dtype="float32") /* ty=Tensor[(30), float32] */;
  %130 = cast(meta[relay.Constant][7] /* ty=Tensor[(585), int16] */, dtype="int16") /* ty=Tensor[(585), int16] */;
  %131 = cast(meta[relay.Constant][8] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %132 = reshape(%129, newshape=[30]) /* ty=Tensor[(30), float32] */;
  %133 = reshape(%130, newshape=[585]) /* ty=Tensor[(585), int16] */;
  %134 = reshape(%131, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
  %135 = @func_2732(%132, %133, %134) /* ty=(Tensor[(6, 7, 5), int32], Tensor[(210), float64], Tensor[(30), float32], Tensor[(18, 4), float32], Tensor[(585), int16], Tensor[(1470), float32]) */;
  %136 = maximum(%123, %124) /* ty=Tensor[(5, 15, 4), uint64] */;
  %137 = greater(%127, %128) /* ty=Tensor[(5, 15, 4), bool] */;
  %138 = %135.5;
  (%136, %137, %138, %var_3980, meta[relay.Constant][7] /* ty=Tensor[(585), int16] */, meta[relay.Constant][8] /* ty=Tensor[(1470), float32] */)
}

def @func_4531(%var_4529: Tensor[(5, 12, 9), float64], %var_4530: Tensor[(300), float32]) -> (Tensor[(5, 12, 9), float64], Tensor[(2025), float32], Tensor[(300), float32], Tensor[(176, 1), float64], Tensor[(2025), float32], Tensor[(5, 15, 4), float64]) {
  @func_4527(%var_4529, %var_4530) /* ty=(Tensor[(5, 12, 9), float64], Tensor[(2025), float32], Tensor[(300), float32], Tensor[(176, 1), float64], Tensor[(2025), float32], Tensor[(5, 15, 4), float64]) */
}

def @func_1331(%var_1321: float64, %var_1322: Tensor[(14, 3, 3), float64]) -> (Tensor[(14, 3, 3), bool],) {
  %139 = cast(%var_1321, dtype="bool") /* ty=bool */;
  %140 = cast(%var_1322, dtype="bool") /* ty=Tensor[(14, 3, 3), bool] */;
  %141 = equal(%139, %140) /* ty=Tensor[(14, 3, 3), bool] */;
  (%141,)
}

def @func_7304() -> (Tensor[(5, 15, 4), float64],) {
  @func_7302() /* ty=(Tensor[(5, 15, 4), float64],) */
}

def @func_2633() -> Tensor[(5, 15, 4), float32] {
  %142 = fn () -> Tensor[(5, 15, 4), float32] {
    @func_1957() /* ty=Tensor[(5, 15, 4), float32] */
  };
  %142() /* ty=Tensor[(5, 15, 4), float32] */
}

def @func_913(%var_910: Tensor[(5, 9, 16), float32], %var_911: Tensor[(210), float64], %var_912: Tensor[(5, 9, 16), float32]) -> (Tensor[(5, 9, 16), float32], Tensor[(6, 7, 5), int32], Tensor[(210), float64], Tensor[(5, 9, 16), bool], Tensor[(6, 7, 5), int32]) {
  @func_908(%var_910, %var_911, %var_912) /* ty=(Tensor[(5, 9, 16), float32], Tensor[(6, 7, 5), int32], Tensor[(210), float64], Tensor[(5, 9, 16), bool], Tensor[(6, 7, 5), int32]) */
}

def @func_958(%var_956: Tensor[(15, 14, 10), float64], %var_957: Tensor[(15, 14, 10), float64]) -> Tensor[(15, 14, 10), float64] {
  @func_954(%var_956, %var_957) /* ty=Tensor[(15, 14, 10), float64] */
}

def @func_6994() -> Tensor[(5, 15, 4), float32] {
  %143 = @func_5725() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(72), float32], Tensor[(585), int16]) */;
  %143.0
}

def @func_6941(%var_6940: int32) -> (Tensor[(2025), float32], Tensor[(585), int16], int32, Tensor[(1, 70), int32], Tensor[(585), int16]) {
  %156 = fn (%var_6935: int32) -> (Tensor[(2025), float32], Tensor[(585), int16], int32, Tensor[(1, 70), int32], Tensor[(585), int16]) {
    %144 = @func_2114() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float32], Tensor[(2025), float32]) */;
    %145 = cast(%var_6935, dtype="int32") /* ty=int32 */;
    %146 = cast(meta[relay.Constant][9] /* ty=Tensor[(1, 70), int32] */, dtype="int32") /* ty=Tensor[(1, 70), int32] */;
    %147 = cast(meta[relay.Constant][10] /* ty=Tensor[(585), int16] */, dtype="int16") /* ty=Tensor[(585), int16] */;
    %148 = %144.2;
    %149 = cast(%148, dtype="float32") /* ty=Tensor[(2025), float32] */;
    %150 = reshape(%145, newshape=[]) /* ty=int32 */;
    %151 = reshape(%146, newshape=[14, 5, 1]) /* ty=Tensor[(14, 5, 1), int32] */;
    %152 = reshape(%147, newshape=[585]) /* ty=Tensor[(585), int16] */;
    %153 = reshape(%149, newshape=[2025]) /* ty=Tensor[(2025), float32] */;
    %154 = @func_6206(%150, %151, %152, %153) /* ty=(Tensor[(14, 5, 1), int32], Tensor[(1470), float32], Tensor[(585), int16], Tensor[(27, 75), float32], Tensor[(2025), float32]) */;
    %155 = %154.2;
    (%148, %155, %var_6935, meta[relay.Constant][9] /* ty=Tensor[(1, 70), int32] */, meta[relay.Constant][10] /* ty=Tensor[(585), int16] */)
  };
  %156(%var_6940) /* ty=(Tensor[(2025), float32], Tensor[(585), int16], int32, Tensor[(1, 70), int32], Tensor[(585), int16]) */
}

def @func_3304() -> (Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float64]) {
  @func_3302() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float64]) */
}

def @func_7012() -> Tensor[(5, 15, 4), float32] {
  @func_7010() /* ty=Tensor[(5, 15, 4), float32] */
}

def @func_3218() -> (Tensor[(2025), float32],) {
  %159 = fn () -> (Tensor[(2025), float32],) {
    %157 = @func_2114() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float32], Tensor[(2025), float32]) */;
    %158 = %157.2;
    (%158,)
  };
  %159() /* ty=(Tensor[(2025), float32],) */
}

def @func_4665(%var_4643: Tensor[(2, 14, 7), uint64]) -> (Tensor[(2, 14, 7), uint64], Tensor[(5, 15, 4), float64]) {
  %160 = cast(meta[relay.Constant][11] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %161 = cast(%var_4643, dtype="uint64") /* ty=Tensor[(2, 14, 7), uint64] */;
  %162 = @func_4270() /* ty=(Tensor[(5, 15, 4), float64],) */;
  %163 = logical_xor(%160, %161) /* ty=Tensor[(2, 14, 7), uint64] */;
  %164 = %162.0;
  (%163, %164)
}

def @func_5681() -> (Tensor[(15, 14, 10), float64],) {
  @func_5679() /* ty=(Tensor[(15, 14, 10), float64],) */
}

def @func_4428() -> (Tensor[(5, 15, 4), float64],) {
  @func_4426() /* ty=(Tensor[(5, 15, 4), float64],) */
}

def @func_4668(%var_4666: Tensor[(2, 14, 7), uint64]) -> (Tensor[(2, 14, 7), uint64], Tensor[(5, 15, 4), float64]) {
  @func_4665(%var_4666) /* ty=(Tensor[(2, 14, 7), uint64], Tensor[(5, 15, 4), float64]) */
}

def @func_2030(%var_2027: Tensor[(1, 16, 11), float64], %var_2028: Tensor[(2025), float32], %var_2029: Tensor[(126), float64]) -> (Tensor[(13, 12, 2), int64], Tensor[(105, 2), float64], Tensor[(13, 12, 2), int64], Tensor[(2025), float32], Tensor[(14, 3, 3), bool], float64, Tensor[(126), float64], Tensor[(12, 16, 11), uint8], Tensor[(?, 16, 11), bool]) {
  %191 = fn (%var_1966: Tensor[(1, 16, 11), float64], %var_1991: Tensor[(2025), float32], %var_1995: Tensor[(126), float64]) -> (Tensor[(13, 12, 2), int64], Tensor[(105, 2), float64], Tensor[(13, 12, 2), int64], Tensor[(2025), float32], Tensor[(14, 3, 3), bool], float64, Tensor[(126), float64], Tensor[(12, 16, 11), uint8], Tensor[(?, 16, 11), bool]) {
    %165 = cast(meta[relay.Constant][12] /* ty=Tensor[(105, 2), float64] */, dtype="float64") /* ty=Tensor[(105, 2), float64] */;
    %166 = reshape(%165, newshape=[210]) /* ty=Tensor[(210), float64] */;
    %167 = @func_406(%166) /* ty=(Tensor[(6, 7, 5), int32], Tensor[(210), float64], Tensor[(13, 12, 2), float32], Tensor[(13, 12, 2), int64], Tensor[(6, 7, 5), int32], Tensor[(6, 7, 5), int32]) */;
    %168 = cast(%var_1991, dtype="float32") /* ty=Tensor[(2025), float32] */;
    %169 = reshape(%168, newshape=[15, 15, 9]) /* ty=Tensor[(15, 15, 9), float32] */;
    %170 = @func_1289(%169) /* ty=(Tensor[(15, 15, 9), float32], Tensor[(13, 12, 2), int64], Tensor[(1, 210), float64]) */;
    %171 = cast(-9.99912f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %172 = cast(%var_1995, dtype="float64") /* ty=Tensor[(126), float64] */;
    %173 = reshape(%171, newshape=[]) /* ty=float64 */;
    %174 = reshape(%172, newshape=[14, 3, 3]) /* ty=Tensor[(14, 3, 3), float64] */;
    %175 = @func_1331(%173, %174) /* ty=(Tensor[(14, 3, 3), bool],) */;
    %176 = cast(%var_1966, dtype="float64") /* ty=Tensor[(1, 16, 11), float64] */;
    %177 = log10(%176) /* ty=Tensor[(1, 16, 11), float64] */;
    %178 = cast(%177, dtype="float32") /* ty=Tensor[(1, 16, 11), float32] */;
    %179 = acos(%178) /* ty=Tensor[(1, 16, 11), float32] */;
    %180 = cast(%179, dtype="uint8") /* ty=Tensor[(1, 16, 11), uint8] */;
    %181 = cast(meta[relay.Constant][13] /* ty=Tensor[(12, 16, 11), float32] */, dtype="uint8") /* ty=Tensor[(12, 16, 11), uint8] */;
    %182 = cast(%var_1966, dtype="bool") /* ty=Tensor[(1, 16, 11), bool] */;
    %183 = shape_of(%179, dtype="int32") /* ty=Tensor[(3), int32] */;
    %184 = cast(%179, dtype="bool") /* ty=Tensor[(1, 16, 11), bool] */;
    %185 = dyn.reshape(%182, %183, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %186 = %167.3;
    %187 = %170.1;
    %188 = %175.0;
    %189 = multiply(%180, %181) /* ty=Tensor[(12, 16, 11), uint8] */;
    %190 = logical_and(%184, %185) /* ty=Tensor[(?, 16, 11), bool] */;
    (%186, meta[relay.Constant][12] /* ty=Tensor[(105, 2), float64] */, %187, %var_1991, %188, -9.99912f64 /* ty=float64 */, %var_1995, %189, %190)
  };
  %191(%var_2027, %var_2028, %var_2029) /* ty=(Tensor[(13, 12, 2), int64], Tensor[(105, 2), float64], Tensor[(13, 12, 2), int64], Tensor[(2025), float32], Tensor[(14, 3, 3), bool], float64, Tensor[(126), float64], Tensor[(12, 16, 11), uint8], Tensor[(?, 16, 11), bool]) */
}

def @func_4527(%var_4493: Tensor[(5, 12, 9), float64], %var_4512: Tensor[(300), float32]) -> (Tensor[(5, 12, 9), float64], Tensor[(2025), float32], Tensor[(300), float32], Tensor[(176, 1), float64], Tensor[(2025), float32], Tensor[(5, 15, 4), float64]) {
  %192 = cast(%var_4493, dtype="float64") /* ty=Tensor[(5, 12, 9), float64] */;
  %193 = cast(%var_4512, dtype="float32") /* ty=Tensor[(300), float32] */;
  %194 = cast(meta[relay.Constant][14] /* ty=Tensor[(176, 1), float64] */, dtype="float64") /* ty=Tensor[(176, 1), float64] */;
  %195 = cast(meta[relay.Constant][15] /* ty=Tensor[(2025), float32] */, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %196 = reshape(%193, newshape=[5, 15, 4]) /* ty=Tensor[(5, 15, 4), float32] */;
  %197 = reshape(%194, newshape=[176]) /* ty=Tensor[(176), float64] */;
  %198 = reshape(%195, newshape=[2025]) /* ty=Tensor[(2025), float32] */;
  %199 = @func_4371(%196, %197, %198) /* ty=(Tensor[(5, 15, 4), int64], float64, Tensor[(176), float64], Tensor[(2025), float32], Tensor[(126), float64], Tensor[(6, 7, 5), int32]) */;
  %200 = @func_3302() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float64]) */;
  %201 = acosh(%192) /* ty=Tensor[(5, 12, 9), float64] */;
  %202 = %199.3;
  %203 = %200.1;
  (%201, %202, %var_4512, meta[relay.Constant][14] /* ty=Tensor[(176, 1), float64] */, meta[relay.Constant][15] /* ty=Tensor[(2025), float32] */, %203)
}

def @func_1946(%var_1944: Tensor[(4, 16, 16), float32]) -> (Tensor[(4, 16, 16), float32],) {
  @func_1943(%var_1944) /* ty=(Tensor[(4, 16, 16), float32],) */
}

def @func_4222() -> (Tensor[(5, 15, 4), float64], Tensor[(13, 12, 2), float32], Tensor[(168), float64], Tensor[(5, 15, 4), float32], Tensor[(585), int16], Tensor[(1470), float32]) {
  %204 = cast(meta[relay.Constant][16] /* ty=Tensor[(168), float64] */, dtype="float64") /* ty=Tensor[(168), float64] */;
  %205 = reshape(%204, newshape=[8, 3, 7]) /* ty=Tensor[(8, 3, 7), float64] */;
  %206 = @func_1626(%205) /* ty=(Tensor[(13, 12, 2), float32], Tensor[(210), float64], Tensor[(8, 3, 7), float32]) */;
  %207 = cast(meta[relay.Constant][17] /* ty=Tensor[(585), int16] */, dtype="int16") /* ty=Tensor[(585), int16] */;
  %208 = cast(meta[relay.Constant][18] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %209 = cast(meta[relay.Constant][17] /* ty=Tensor[(585), int16] */, dtype="int16") /* ty=Tensor[(585), int16] */;
  %210 = reshape(%207, newshape=[585]) /* ty=Tensor[(585), int16] */;
  %211 = reshape(%208, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
  %212 = reshape(%209, newshape=[585]) /* ty=Tensor[(585), int16] */;
  %213 = @func_4096(%210, %211, %212) /* ty=(Tensor[(5, 15, 4), float64], Tensor[(5, 15, 4), float32], Tensor[(210, 7), int64], Tensor[(585), uint16], Tensor[(1470), float32], Tensor[(1, 210), float64], Tensor[(2025), float32], Tensor[(2025), float32], Tensor[(1470), float64]) */;
  %214 = @func_3733() /* ty=Tensor[(5, 15, 4), float64] */;
  %215 = %206.0;
  %216 = %213.1;
  (%214, %215, meta[relay.Constant][16] /* ty=Tensor[(168), float64] */, %216, meta[relay.Constant][17] /* ty=Tensor[(585), int16] */, meta[relay.Constant][18] /* ty=Tensor[(1470), float32] */)
}

def @func_5760() -> (Tensor[(5, 15, 4), float64], Tensor[(585), int16]) {
  %219 = fn () -> (Tensor[(5, 15, 4), float64], Tensor[(585), int16]) {
    %217 = @func_2975() /* ty=Tensor[(5, 15, 4), float64] */;
    %218 = @func_5158() /* ty=Tensor[(585), int16] */;
    (%217, %218)
  };
  %219() /* ty=(Tensor[(5, 15, 4), float64], Tensor[(585), int16]) */
}

def @func_6332() -> Tensor[(5, 15, 4), float32] {
  %220 = @func_5858() /* ty=(Tensor[(5, 15, 4), float32],) */;
  %220.0
}

def @func_3987(%var_3985: Tensor[(30), float32]) -> (Tensor[(5, 15, 4), uint64], Tensor[(5, 15, 4), bool], Tensor[(1470), float32], Tensor[(30), float32], Tensor[(585), int16], Tensor[(1470), float32]) {
  @func_3984(%var_3985) /* ty=(Tensor[(5, 15, 4), uint64], Tensor[(5, 15, 4), bool], Tensor[(1470), float32], Tensor[(30), float32], Tensor[(585), int16], Tensor[(1470), float32]) */
}

def @func_4160(%var_4159: Tensor[(5, 15, 4), float64]) -> Tensor[(5, 15, 4), bool] {
  %227 = fn (%var_4151: Tensor[(5, 15, 4), float64]) -> Tensor[(5, 15, 4), bool] {
    %221 = @func_3302() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float64]) */;
    %222 = %221.1;
    %223 = cast(%var_4151, dtype="bool") /* ty=Tensor[(5, 15, 4), bool] */;
    %224 = shape_of(%222, dtype="int32") /* ty=Tensor[(3), int32] */;
    %225 = cast(%222, dtype="bool") /* ty=Tensor[(5, 15, 4), bool] */;
    %226 = dyn.reshape(%223, %224, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    not_equal(%225, %226) /* ty=Tensor[(5, 15, 4), bool] */
  };
  %227(%var_4159) /* ty=Tensor[(5, 15, 4), bool] */
}

def @func_6968() -> (Tensor[(5, 16, 8), float32],) {
  %230 = fn () -> (Tensor[(5, 16, 8), float32],) {
    %228 = cast(meta[relay.Constant][19] /* ty=Tensor[(5, 16, 8), float32] */, dtype="float32") /* ty=Tensor[(5, 16, 8), float32] */;
    %229 = cosh(%228) /* ty=Tensor[(5, 16, 8), float32] */;
    (%229,)
  };
  %230() /* ty=(Tensor[(5, 16, 8), float32],) */
}

def @func_4101(%var_4098: Tensor[(585), int16], %var_4099: Tensor[(1470), float32], %var_4100: Tensor[(585), int16]) -> (Tensor[(5, 15, 4), float64], Tensor[(5, 15, 4), float32], Tensor[(210, 7), int64], Tensor[(585), uint16], Tensor[(1470), float32], Tensor[(1, 210), float64], Tensor[(2025), float32], Tensor[(2025), float32], Tensor[(1470), float64]) {
  @func_4096(%var_4098, %var_4099, %var_4100) /* ty=(Tensor[(5, 15, 4), float64], Tensor[(5, 15, 4), float32], Tensor[(210, 7), int64], Tensor[(585), uint16], Tensor[(1470), float32], Tensor[(1, 210), float64], Tensor[(2025), float32], Tensor[(2025), float32], Tensor[(1470), float64]) */
}

def @func_5026(%var_5025: Tensor[(3, 11, 8), float32]) -> (Tensor[(3, 11, 8), float32], Tensor[(3, 11, 8), bool], Tensor[(6, 7, 5), int32], Tensor[(210), float64]) {
  %245 = fn (%var_4991: Tensor[(3, 11, 8), float32]) -> (Tensor[(3, 11, 8), float32], Tensor[(3, 11, 8), bool], Tensor[(6, 7, 5), int32], Tensor[(210), float64]) {
    %231 = cast(meta[relay.Constant][20] /* ty=Tensor[(3, 11, 8), float32] */, dtype="float32") /* ty=Tensor[(3, 11, 8), float32] */;
    %232 = shape_of(%var_4991, dtype="int32") /* ty=Tensor[(3), int32] */;
    %233 = cast(%var_4991, dtype="float32") /* ty=Tensor[(3, 11, 8), float32] */;
    %234 = dyn.reshape(%231, %232, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %235 = cast(meta[relay.Constant][20] /* ty=Tensor[(3, 11, 8), float32] */, dtype="bool") /* ty=Tensor[(3, 11, 8), bool] */;
    %236 = shape_of(%var_4991, dtype="int32") /* ty=Tensor[(3), int32] */;
    %237 = cast(%var_4991, dtype="bool") /* ty=Tensor[(3, 11, 8), bool] */;
    %238 = dyn.reshape(%235, %236, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %239 = cast(meta[relay.Constant][21] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
    %240 = reshape(%239, newshape=[210]) /* ty=Tensor[(210), float64] */;
    %241 = @func_406(%240) /* ty=(Tensor[(6, 7, 5), int32], Tensor[(210), float64], Tensor[(13, 12, 2), float32], Tensor[(13, 12, 2), int64], Tensor[(6, 7, 5), int32], Tensor[(6, 7, 5), int32]) */;
    %242 = floor_mod(%233, %234) /* ty=Tensor[(3, 11, 8), float32] */;
    %243 = less_equal(%237, %238) /* ty=Tensor[(3, 11, 8), bool] */;
    %244 = %241.5;
    (%242, %243, %244, meta[relay.Constant][21] /* ty=Tensor[(210), float64] */)
  };
  %245(%var_5025) /* ty=(Tensor[(3, 11, 8), float32], Tensor[(3, 11, 8), bool], Tensor[(6, 7, 5), int32], Tensor[(210), float64]) */
}

def @func_2320() -> (Tensor[(5, 15, 4), bool], Tensor[(5, 15, 4), bool]) {
  %246 = @func_2114() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float32], Tensor[(2025), float32]) */;
  %247 = %246.0;
  %248 = cast(meta[relay.Constant][22] /* ty=Tensor[(5, 15, 4), float32] */, dtype="bool") /* ty=Tensor[(5, 15, 4), bool] */;
  %249 = shape_of(%247, dtype="int32") /* ty=Tensor[(3), int32] */;
  %250 = cast(%247, dtype="bool") /* ty=Tensor[(5, 15, 4), bool] */;
  %251 = dyn.reshape(%248, %249, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %252 = cast(meta[relay.Constant][22] /* ty=Tensor[(5, 15, 4), float32] */, dtype="bool") /* ty=Tensor[(5, 15, 4), bool] */;
  %253 = shape_of(%247, dtype="int32") /* ty=Tensor[(3), int32] */;
  %254 = cast(%247, dtype="bool") /* ty=Tensor[(5, 15, 4), bool] */;
  %255 = dyn.reshape(%252, %253, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %256 = logical_and(%250, %251) /* ty=Tensor[(5, 15, 4), bool] */;
  %257 = greater_equal(%254, %255) /* ty=Tensor[(5, 15, 4), bool] */;
  (%256, %257)
}

def @func_3357(%var_3355: Tensor[(1815), int8], %var_3356: Tensor[(585), int16]) -> (Tensor[(6, 7, 5), float32], Tensor[(11, 15, 11), int8], Tensor[(1815), int8], Tensor[(5, 15, 4), float32], Tensor[(72), float32], Tensor[(585), int16]) {
  @func_3353(%var_3355, %var_3356) /* ty=(Tensor[(6, 7, 5), float32], Tensor[(11, 15, 11), int8], Tensor[(1815), int8], Tensor[(5, 15, 4), float32], Tensor[(72), float32], Tensor[(585), int16]) */
}

def @func_2116() -> (Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float32], Tensor[(2025), float32]) {
  @func_2114() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float32], Tensor[(2025), float32]) */
}

def @func_4626(%var_4625: Tensor[(30, 1), float32]) -> (Tensor[(6, 7, 5), int32], Tensor[(1470), float64], Tensor[(585), int16], Tensor[(1470), float32], Tensor[(195, 3), int16], Tensor[(30, 1), float32], Tensor[(72), float32], Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float32], Tensor[(6, 7, 5), int32], Tensor[(210), float32], Tensor[(5, 15, 4), float64]) {
  %297 = fn (%var_4589: Tensor[(30, 1), float32]) -> (Tensor[(6, 7, 5), int32], Tensor[(1470), float64], Tensor[(585), int16], Tensor[(1470), float32], Tensor[(195, 3), int16], Tensor[(30, 1), float32], Tensor[(72), float32], Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float32], Tensor[(6, 7, 5), int32], Tensor[(210), float32], Tensor[(5, 15, 4), float64]) {
    %258 = @func_2226() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(168), float64], Tensor[(6, 7, 5), int32], Tensor[(210), float64], Tensor[(13, 12, 2), bool], Tensor[(6, 7, 5), int32]) */;
    %259 = %258.3;
    %260 = cast(%259, dtype="float64") /* ty=Tensor[(210), float64] */;
    %261 = cast(%259, dtype="float64") /* ty=Tensor[(210), float64] */;
    %262 = reshape(%260, newshape=[6, 7, 5]) /* ty=Tensor[(6, 7, 5), float64] */;
    %263 = reshape(%261, newshape=[6, 7, 5]) /* ty=Tensor[(6, 7, 5), float64] */;
    %264 = cast(meta[relay.Constant][23] /* ty=Tensor[(585), int16] */, dtype="int16") /* ty=Tensor[(585), int16] */;
    %265 = cast(meta[relay.Constant][24] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
    %266 = cast(meta[relay.Constant][23] /* ty=Tensor[(585), int16] */, dtype="int16") /* ty=Tensor[(585), int16] */;
    %267 = reshape(%264, newshape=[585]) /* ty=Tensor[(585), int16] */;
    %268 = reshape(%265, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
    %269 = reshape(%266, newshape=[585]) /* ty=Tensor[(585), int16] */;
    %270 = @func_4096(%267, %268, %269) /* ty=(Tensor[(5, 15, 4), float64], Tensor[(5, 15, 4), float32], Tensor[(210, 7), int64], Tensor[(585), uint16], Tensor[(1470), float32], Tensor[(1, 210), float64], Tensor[(2025), float32], Tensor[(2025), float32], Tensor[(1470), float64]) */;
    %271 = cast(%var_4589, dtype="float32") /* ty=Tensor[(30, 1), float32] */;
    %272 = cast(meta[relay.Constant][25] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
    %273 = cast(meta[relay.Constant][23] /* ty=Tensor[(585), int16] */, dtype="int16") /* ty=Tensor[(585), int16] */;
    %274 = %270.8;
    %275 = cast(%274, dtype="float32") /* ty=Tensor[(1470), float32] */;
    %276 = @func_317(%262, %263) /* ty=Tensor[(6, 7, 5), int32] */;
    %277 = cast(%276, dtype="float64") /* ty=Tensor[(6, 7, 5), float64] */;
    %278 = reshape(%271, newshape=[1, 2, 15]) /* ty=Tensor[(1, 2, 15), float32] */;
    %279 = reshape(%272, newshape=[72]) /* ty=Tensor[(72), float32] */;
    %280 = reshape(%273, newshape=[195, 3]) /* ty=Tensor[(195, 3), int16] */;
    %281 = reshape(%275, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
    %282 = reshape(%277, newshape=[210]) /* ty=Tensor[(210), float64] */;
    %283 = @func_1704(%278, %279, %280, %281, %282) /* ty=(Tensor[(585), int16], float32, Tensor[(72), float32], Tensor[(195, 3), int16], Tensor[(1470), float32], Tensor[(210), float64], Tensor[(13, 3, 15), bool], Tensor[(210), float64], Tensor[(?, 2, 15), int16]) */;
    %284 = cast(meta[relay.Constant][23] /* ty=Tensor[(585), int16] */, dtype="int16") /* ty=Tensor[(585), int16] */;
    %285 = cast(%274, dtype="float32") /* ty=Tensor[(1470), float32] */;
    %286 = reshape(%284, newshape=[13, 3, 15]) /* ty=Tensor[(13, 3, 15), int16] */;
    %287 = reshape(%285, newshape=[210, 7]) /* ty=Tensor[(210, 7), float32] */;
    %288 = @func_477(%286, %287) /* ty=(Tensor[(13, 3, 15), bool], Tensor[(210), float64], Tensor[(210, 7), int64], Tensor[(6, 7, 5), int32]) */;
    %289 = cast(%259, dtype="float32") /* ty=Tensor[(210), float32] */;
    %290 = @func_4426() /* ty=(Tensor[(5, 15, 4), float64],) */;
    %291 = %283.3;
    %292 = @func_2632() /* ty=Tensor[(5, 15, 4), float32] */;
    %293 = @func_2632() /* ty=Tensor[(5, 15, 4), float32] */;
    %294 = %288.3;
    %295 = log(%289) /* ty=Tensor[(210), float32] */;
    %296 = %290.0;
    (%276, %274, meta[relay.Constant][23] /* ty=Tensor[(585), int16] */, meta[relay.Constant][24] /* ty=Tensor[(1470), float32] */, %291, %var_4589, meta[relay.Constant][25] /* ty=Tensor[(72), float32] */, %292, %293, %294, %295, %296)
  };
  %297(%var_4625) /* ty=(Tensor[(6, 7, 5), int32], Tensor[(1470), float64], Tensor[(585), int16], Tensor[(1470), float32], Tensor[(195, 3), int16], Tensor[(30, 1), float32], Tensor[(72), float32], Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float32], Tensor[(6, 7, 5), int32], Tensor[(210), float32], Tensor[(5, 15, 4), float64]) */
}

def @func_3433() -> (Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float32], Tensor[(65, 9), float32]) {
  %298 = @func_3245() /* ty=(Tensor[(5, 15, 4), float32],) */;
  %299 = @func_3245() /* ty=(Tensor[(5, 15, 4), float32],) */;
  %300 = cast(meta[relay.Constant][26] /* ty=Tensor[(585), int16] */, dtype="int16") /* ty=Tensor[(585), int16] */;
  %301 = reshape(%300, newshape=[65, 9]) /* ty=Tensor[(65, 9), int16] */;
  %302 = @func_2440(%301) /* ty=(Tensor[(5, 15, 4), bool], Tensor[(210), float64], Tensor[(1470), float32], Tensor[(65, 9), float64]) */;
  %303 = %302.3;
  %304 = cast(meta[relay.Constant][26] /* ty=Tensor[(585), int16] */, dtype="float32") /* ty=Tensor[(585), float32] */;
  %305 = shape_of(%303, dtype="int32") /* ty=Tensor[(2), int32] */;
  %306 = cast(%303, dtype="float32") /* ty=Tensor[(65, 9), float32] */;
  %307 = dyn.reshape(%304, %305, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %308 = %298.0;
  %309 = %299.0;
  %310 = floor_mod(%306, %307) /* ty=Tensor[(65, 9), float32] */;
  (%308, %309, %310)
}

def @func_1443(%var_1440: Tensor[(16, 9, 2), float32], %var_1441: Tensor[(16, 9, 2), float32], %var_1442: float64) -> (Tensor[(16, 9, 2), float32], Tensor[(14, 3, 3), bool], float64, Tensor[(126), float64], Tensor[(14, 3, 3), bool]) {
  %328 = fn (%var_1404: Tensor[(16, 9, 2), float32], %var_1405: Tensor[(16, 9, 2), float32], %var_1414: float64) -> (Tensor[(16, 9, 2), float32], Tensor[(14, 3, 3), bool], float64, Tensor[(126), float64], Tensor[(14, 3, 3), bool]) {
    %311 = cast(%var_1405, dtype="float32") /* ty=Tensor[(16, 9, 2), float32] */;
    %312 = shape_of(%var_1404, dtype="int32") /* ty=Tensor[(3), int32] */;
    %313 = cast(%var_1404, dtype="float32") /* ty=Tensor[(16, 9, 2), float32] */;
    %314 = dyn.reshape(%311, %312, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %315 = cast(%var_1414, dtype="float64") /* ty=float64 */;
    %316 = cast(meta[relay.Constant][27] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
    %317 = reshape(%315, newshape=[]) /* ty=float64 */;
    %318 = reshape(%316, newshape=[14, 3, 3]) /* ty=Tensor[(14, 3, 3), float64] */;
    %319 = @func_1331(%317, %318) /* ty=(Tensor[(14, 3, 3), bool],) */;
    %320 = cast(%var_1414, dtype="float64") /* ty=float64 */;
    %321 = cast(meta[relay.Constant][27] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
    %322 = reshape(%320, newshape=[]) /* ty=float64 */;
    %323 = reshape(%321, newshape=[14, 3, 3]) /* ty=Tensor[(14, 3, 3), float64] */;
    %324 = @func_1331(%322, %323) /* ty=(Tensor[(14, 3, 3), bool],) */;
    %325 = power(%313, %314) /* ty=Tensor[(16, 9, 2), float32] */;
    %326 = %319.0;
    %327 = %324.0;
    (%325, %326, %var_1414, meta[relay.Constant][27] /* ty=Tensor[(126), float64] */, %327)
  };
  %328(%var_1440, %var_1441, %var_1442) /* ty=(Tensor[(16, 9, 2), float32], Tensor[(14, 3, 3), bool], float64, Tensor[(126), float64], Tensor[(14, 3, 3), bool]) */
}

def @func_3190(%var_3187: float32, %var_3188: Tensor[(1470), float32], %var_3189: Tensor[(210), float64]) -> (Tensor[(5, 15, 4), float64], Tensor[(210, 7), int64], float32, Tensor[(72), float32], Tensor[(585), int16], Tensor[(1470), float32], Tensor[(210), float64]) {
  %342 = fn (%var_3173: float32, %var_3176: Tensor[(1470), float32], %var_3177: Tensor[(210), float64]) -> (Tensor[(5, 15, 4), float64], Tensor[(210, 7), int64], float32, Tensor[(72), float32], Tensor[(585), int16], Tensor[(1470), float32], Tensor[(210), float64]) {
    %329 = cast(%var_3173, dtype="float32") /* ty=float32 */;
    %330 = cast(meta[relay.Constant][28] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
    %331 = cast(meta[relay.Constant][29] /* ty=Tensor[(585), int16] */, dtype="int16") /* ty=Tensor[(585), int16] */;
    %332 = cast(%var_3176, dtype="float32") /* ty=Tensor[(1470), float32] */;
    %333 = cast(%var_3177, dtype="float64") /* ty=Tensor[(210), float64] */;
    %334 = reshape(%329, newshape=[]) /* ty=float32 */;
    %335 = reshape(%330, newshape=[3, 6, 4]) /* ty=Tensor[(3, 6, 4), float32] */;
    %336 = reshape(%331, newshape=[585]) /* ty=Tensor[(585), int16] */;
    %337 = reshape(%332, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
    %338 = reshape(%333, newshape=[210]) /* ty=Tensor[(210), float64] */;
    %339 = @func_1245(%334, %335, %336, %337, %338) /* ty=(Tensor[(3, 6, 4), float32], Tensor[(210, 7), int64], Tensor[(585), int16], Tensor[(5, 9, 16), float32], Tensor[(60, 12), float32], Tensor[(210), float64], Tensor[(1470), float32], Tensor[(6, 7, 5), int32]) */;
    %340 = @func_2975() /* ty=Tensor[(5, 15, 4), float64] */;
    %341 = %339.1;
    (%340, %341, %var_3173, meta[relay.Constant][28] /* ty=Tensor[(72), float32] */, meta[relay.Constant][29] /* ty=Tensor[(585), int16] */, %var_3176, %var_3177)
  };
  %342(%var_3187, %var_3188, %var_3189) /* ty=(Tensor[(5, 15, 4), float64], Tensor[(210, 7), int64], float32, Tensor[(72), float32], Tensor[(585), int16], Tensor[(1470), float32], Tensor[(210), float64]) */
}

def @func_7030() -> (Tensor[(13, 12, 2), float32],) {
  %345 = fn () -> (Tensor[(13, 12, 2), float32],) {
    %343 = @func_4222() /* ty=(Tensor[(5, 15, 4), float64], Tensor[(13, 12, 2), float32], Tensor[(168), float64], Tensor[(5, 15, 4), float32], Tensor[(585), int16], Tensor[(1470), float32]) */;
    %344 = %343.1;
    (%344,)
  };
  %345() /* ty=(Tensor[(13, 12, 2), float32],) */
}

def @func_4224() -> (Tensor[(5, 15, 4), float64], Tensor[(13, 12, 2), float32], Tensor[(168), float64], Tensor[(5, 15, 4), float32], Tensor[(585), int16], Tensor[(1470), float32]) {
  @func_4222() /* ty=(Tensor[(5, 15, 4), float64], Tensor[(13, 12, 2), float32], Tensor[(168), float64], Tensor[(5, 15, 4), float32], Tensor[(585), int16], Tensor[(1470), float32]) */
}

def @func_6479() -> (Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float64]) {
  %346 = @func_3545() /* ty=(Tensor[(5, 15, 4), float32],) */;
  %347 = @func_3302() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float64]) */;
  %348 = %347.0;
  %349 = cast(%348, dtype="float64") /* ty=Tensor[(5, 15, 4), float64] */;
  %350 = %346.0;
  %351 = acosh(%349) /* ty=Tensor[(5, 15, 4), float64] */;
  (%350, %351)
}

def @func_6108() -> (Tensor[(5, 15, 4), float32], Tensor[(72), float32], Tensor[(585), int16]) {
  %357 = fn () -> (Tensor[(5, 15, 4), float32], Tensor[(72), float32], Tensor[(585), int16]) {
    %352 = cast(meta[relay.Constant][30] /* ty=Tensor[(585), int16] */, dtype="int16") /* ty=Tensor[(585), int16] */;
    %353 = reshape(%352, newshape=[585]) /* ty=Tensor[(585), int16] */;
    %354 = @func_3465(%353) /* ty=(Tensor[(2025), float32], Tensor[(1470), float32], Tensor[(72), float32], Tensor[(585), int16]) */;
    %355 = @func_2632() /* ty=Tensor[(5, 15, 4), float32] */;
    %356 = %354.2;
    (%355, %356, meta[relay.Constant][30] /* ty=Tensor[(585), int16] */)
  };
  %357() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(72), float32], Tensor[(585), int16]) */
}

def @func_2090(%var_2072: Tensor[(27, 75), float32]) -> (Tensor[(5, 15, 4), float32], float64, Tensor[(176), float64], Tensor[(27, 75), float32], Tensor[(126), float64]) {
  %358 = cast(meta[relay.Constant][31] /* ty=Tensor[(176), float64] */, dtype="float64") /* ty=Tensor[(176), float64] */;
  %359 = cast(%var_2072, dtype="float32") /* ty=Tensor[(27, 75), float32] */;
  %360 = cast(meta[relay.Constant][32] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
  %361 = reshape(%358, newshape=[1, 16, 11]) /* ty=Tensor[(1, 16, 11), float64] */;
  %362 = reshape(%359, newshape=[2025]) /* ty=Tensor[(2025), float32] */;
  %363 = reshape(%360, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %364 = @func_2026(%361, %362, %363) /* ty=(Tensor[(13, 12, 2), int64], Tensor[(105, 2), float64], Tensor[(13, 12, 2), int64], Tensor[(2025), float32], Tensor[(14, 3, 3), bool], float64, Tensor[(126), float64], Tensor[(12, 16, 11), uint8], Tensor[(?, 16, 11), bool]) */;
  %365 = @func_1957() /* ty=Tensor[(5, 15, 4), float32] */;
  %366 = %364.5;
  (%365, %366, meta[relay.Constant][31] /* ty=Tensor[(176), float64] */, %var_2072, meta[relay.Constant][32] /* ty=Tensor[(126), float64] */)
}

def @func_3134(%var_3089: Tensor[(585, 1), int16], %var_3103: Tensor[(2025), float32], %var_3114: Tensor[(6, 7, 5), float64]) -> (Tensor[(210), float64], Tensor[(585, 1), int16], Tensor[(1, 210), float64], Tensor[(2025), float32], Tensor[(6, 7, 5), float64]) {
  %367 = cast(%var_3089, dtype="int16") /* ty=Tensor[(585, 1), int16] */;
  %368 = reshape(%367, newshape=[65, 9]) /* ty=Tensor[(65, 9), int16] */;
  %369 = @func_2440(%368) /* ty=(Tensor[(5, 15, 4), bool], Tensor[(210), float64], Tensor[(1470), float32], Tensor[(65, 9), float64]) */;
  %370 = cast(%var_3103, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %371 = reshape(%370, newshape=[15, 15, 9]) /* ty=Tensor[(15, 15, 9), float32] */;
  %372 = @func_1289(%371) /* ty=(Tensor[(15, 15, 9), float32], Tensor[(13, 12, 2), int64], Tensor[(1, 210), float64]) */;
  %373 = @func_2226() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(168), float64], Tensor[(6, 7, 5), int32], Tensor[(210), float64], Tensor[(13, 12, 2), bool], Tensor[(6, 7, 5), int32]) */;
  %374 = %373.2;
  %375 = cast(%374, dtype="float64") /* ty=Tensor[(6, 7, 5), float64] */;
  %376 = rsqrt(%375) /* ty=Tensor[(6, 7, 5), float64] */;
  %377 = cast(%var_3114, dtype="bool") /* ty=Tensor[(6, 7, 5), bool] */;
  %378 = shape_of(%376, dtype="int32") /* ty=Tensor[(3), int32] */;
  %379 = cast(%376, dtype="bool") /* ty=Tensor[(6, 7, 5), bool] */;
  %380 = dyn.reshape(%377, %378, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %381 = greater(%379, %380) /* ty=Tensor[(6, 7, 5), bool] */;
  %382 = cast(%381, dtype="float64") /* ty=Tensor[(6, 7, 5), float64] */;
  %383 = %369.1;
  %384 = %372.2;
  %385 = atan(%382) /* ty=Tensor[(6, 7, 5), float64] */;
  (%383, %var_3089, %384, %var_3103, %385)
}

def @func_5158() -> Tensor[(585), int16] {
  %386 = @func_4222() /* ty=(Tensor[(5, 15, 4), float64], Tensor[(13, 12, 2), float32], Tensor[(168), float64], Tensor[(5, 15, 4), float32], Tensor[(585), int16], Tensor[(1470), float32]) */;
  %386.4
}

def @func_6014(%var_5972: Tensor[(288), float32], %var_5977: Tensor[(2025), float32], %var_5991: Tensor[(65, 9), float64]) -> (Tensor[(585), int16], Tensor[(72, 4), float32], Tensor[(96), int8], Tensor[(864), int8], Tensor[(210), float64], Tensor[(288), float32], Tensor[(2025), int64], Tensor[(13, 12, 2), int64], Tensor[(65, 9), bool]) {
  %387 = cast(meta[relay.Constant][33] /* ty=Tensor[(96), int8] */, dtype="int8") /* ty=Tensor[(96), int8] */;
  %388 = cast(meta[relay.Constant][34] /* ty=Tensor[(864), int8] */, dtype="int8") /* ty=Tensor[(864), int8] */;
  %389 = cast(meta[relay.Constant][35] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %390 = cast(%var_5972, dtype="float32") /* ty=Tensor[(288), float32] */;
  %391 = reshape(%387, newshape=[16, 6, 1]) /* ty=Tensor[(16, 6, 1), int8] */;
  %392 = reshape(%388, newshape=[16, 6, 9]) /* ty=Tensor[(16, 6, 9), int8] */;
  %393 = reshape(%389, newshape=[5, 42]) /* ty=Tensor[(5, 42), float64] */;
  %394 = reshape(%390, newshape=[72, 4]) /* ty=Tensor[(72, 4), float32] */;
  %395 = @func_2926(%391, %392, %393, %394) /* ty=(Tensor[(15, 14, 10), float64], Tensor[(30, 70), float64], Tensor[(5, 9, 16), float32], Tensor[(720), float32], Tensor[(5, 42), float64], Tensor[(5, 15, 4), float32], Tensor[(126), float64], Tensor[(72, 4), float32], float64, Tensor[(16, 6, 9), int8], float64, Tensor[(176), float64], Tensor[(2025), float32], Tensor[(585), int16], Tensor[(72), float32], Tensor[(1470), float32], Tensor[(5, 15, 4), float32], Tensor[(6, 7, 5), int32]) */;
  %396 = @func_3217() /* ty=(Tensor[(2025), float32],) */;
  %397 = %396.0;
  %398 = cast(%var_5977, dtype="int64") /* ty=Tensor[(2025), int64] */;
  %399 = shape_of(%397, dtype="int32") /* ty=Tensor[(1), int32] */;
  %400 = cast(%397, dtype="int64") /* ty=Tensor[(2025), int64] */;
  %401 = dyn.reshape(%398, %399, newshape=[]) /* ty=Tensor[(?), int64] */;
  %402 = cast(%var_5977, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %403 = reshape(%402, newshape=[15, 15, 9]) /* ty=Tensor[(15, 15, 9), float32] */;
  %404 = @func_1289(%403) /* ty=(Tensor[(15, 15, 9), float32], Tensor[(13, 12, 2), int64], Tensor[(1, 210), float64]) */;
  %405 = cast(meta[relay.Constant][36] /* ty=Tensor[(585), int16] */, dtype="int16") /* ty=Tensor[(585), int16] */;
  %406 = reshape(%405, newshape=[65, 9]) /* ty=Tensor[(65, 9), int16] */;
  %407 = @func_2440(%406) /* ty=(Tensor[(5, 15, 4), bool], Tensor[(210), float64], Tensor[(1470), float32], Tensor[(65, 9), float64]) */;
  %408 = %407.3;
  %409 = cast(%var_5991, dtype="float64") /* ty=Tensor[(65, 9), float64] */;
  %410 = shape_of(%408, dtype="int32") /* ty=Tensor[(2), int32] */;
  %411 = cast(%408, dtype="float64") /* ty=Tensor[(65, 9), float64] */;
  %412 = dyn.reshape(%409, %410, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %413 = power(%411, %412) /* ty=Tensor[(65, 9), float64] */;
  %414 = cast(meta[relay.Constant][36] /* ty=Tensor[(585), int16] */, dtype="bool") /* ty=Tensor[(585), bool] */;
  %415 = shape_of(%413, dtype="int32") /* ty=Tensor[(2), int32] */;
  %416 = cast(%413, dtype="bool") /* ty=Tensor[(65, 9), bool] */;
  %417 = dyn.reshape(%414, %415, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %418 = @func_5158() /* ty=Tensor[(585), int16] */;
  %419 = %395.7;
  %420 = bitwise_xor(%400, %401) /* ty=Tensor[(2025), int64] */;
  %421 = %404.1;
  %422 = greater_equal(%416, %417) /* ty=Tensor[(65, 9), bool] */;
  (%418, %419, meta[relay.Constant][33] /* ty=Tensor[(96), int8] */, meta[relay.Constant][34] /* ty=Tensor[(864), int8] */, meta[relay.Constant][35] /* ty=Tensor[(210), float64] */, %var_5972, %420, %421, %422)
}

def @func_3246() -> (Tensor[(5, 15, 4), float32],) {
  %424 = fn () -> (Tensor[(5, 15, 4), float32],) {
    %423 = @func_2632() /* ty=Tensor[(5, 15, 4), float32] */;
    (%423,)
  };
  %424() /* ty=(Tensor[(5, 15, 4), float32],) */
}

def @func_6334() -> Tensor[(5, 15, 4), float32] {
  @func_6332() /* ty=Tensor[(5, 15, 4), float32] */
}

def @func_3503() -> Tensor[(5, 15, 4), float64] {
  %426 = fn () -> Tensor[(5, 15, 4), float64] {
    %425 = @func_3302() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float64]) */;
    %425.1
  };
  %426() /* ty=Tensor[(5, 15, 4), float64] */
}

def @func_2616() -> (Tensor[(5, 15, 4), bool],) {
  @func_2614() /* ty=(Tensor[(5, 15, 4), bool],) */
}

def @func_3696() -> (Tensor[(5, 15, 4), float32],) {
  %427 = @func_3245() /* ty=(Tensor[(5, 15, 4), float32],) */;
  %428 = %427.0;
  (%428,)
}

def @func_5050() -> Tensor[(5, 15, 4), float64] {
  %429 = fn () -> Tensor[(5, 15, 4), float64] {
    @func_3733() /* ty=Tensor[(5, 15, 4), float64] */
  };
  %429() /* ty=Tensor[(5, 15, 4), float64] */
}

def @func_5531(%var_5529: Tensor[(21, 6), float64]) -> (Tensor[(4, 16, 16), float32], Tensor[(1024), float32], Tensor[(14, 3, 3), bool], float64, Tensor[(21, 6), float64], Tensor[(5, 15, 4), float32], Tensor[(4, 11, 13), float32]) {
  @func_5528(%var_5529) /* ty=(Tensor[(4, 16, 16), float32], Tensor[(1024), float32], Tensor[(14, 3, 3), bool], float64, Tensor[(21, 6), float64], Tensor[(5, 15, 4), float32], Tensor[(4, 11, 13), float32]) */
}

def @func_6996() -> Tensor[(5, 15, 4), float32] {
  @func_6994() /* ty=Tensor[(5, 15, 4), float32] */
}

def @func_3467(%var_3466: Tensor[(585), int16]) -> (Tensor[(2025), float32], Tensor[(1470), float32], Tensor[(72), float32], Tensor[(585), int16]) {
  %438 = fn (%var_3447: Tensor[(585), int16]) -> (Tensor[(2025), float32], Tensor[(1470), float32], Tensor[(72), float32], Tensor[(585), int16]) {
    %430 = @func_2114() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float32], Tensor[(2025), float32]) */;
    %431 = cast(meta[relay.Constant][37] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
    %432 = cast(%var_3447, dtype="int16") /* ty=Tensor[(585), int16] */;
    %433 = reshape(%431, newshape=[72]) /* ty=Tensor[(72), float32] */;
    %434 = reshape(%432, newshape=[1, 585]) /* ty=Tensor[(1, 585), int16] */;
    %435 = @func_2051(%433, %434) /* ty=(Tensor[(5, 15, 4), float32], Tensor[(6, 7, 5), int32], float32, Tensor[(72), float32], Tensor[(1, 585), int16], Tensor[(1470), float32], Tensor[(210), float64]) */;
    %436 = %430.2;
    %437 = %435.5;
    (%436, %437, meta[relay.Constant][37] /* ty=Tensor[(72), float32] */, %var_3447)
  };
  %438(%var_3466) /* ty=(Tensor[(2025), float32], Tensor[(1470), float32], Tensor[(72), float32], Tensor[(585), int16]) */
}

def @func_7105() -> (Tensor[(5, 15, 4), float64],) {
  @func_7103() /* ty=(Tensor[(5, 15, 4), float64],) */
}

def @func_1292(%var_1290: Tensor[(15, 15, 9), float32]) -> (Tensor[(15, 15, 9), float32], Tensor[(13, 12, 2), int64], Tensor[(1, 210), float64]) {
  @func_1289(%var_1290) /* ty=(Tensor[(15, 15, 9), float32], Tensor[(13, 12, 2), int64], Tensor[(1, 210), float64]) */
}

def @func_4483(%var_4482: Tensor[(16, 15, 16), float32]) -> (Tensor[(2025), float32], Tensor[(585), int16], Tensor[(210), float64], Tensor[(2025), float32], Tensor[(16, 15, 16), float32], Tensor[(11, 15, 11), int8], Tensor[(11, 165), int8]) {
  %463 = fn (%var_4429: Tensor[(16, 15, 16), float32]) -> (Tensor[(2025), float32], Tensor[(585), int16], Tensor[(210), float64], Tensor[(2025), float32], Tensor[(16, 15, 16), float32], Tensor[(11, 15, 11), int8], Tensor[(11, 165), int8]) {
    %439 = cast(meta[relay.Constant][38] /* ty=Tensor[(585), int16] */, dtype="int16") /* ty=Tensor[(585), int16] */;
    %440 = cast(meta[relay.Constant][39] /* ty=Tensor[(2025), float32] */, dtype="float32") /* ty=Tensor[(2025), float32] */;
    %441 = cast(meta[relay.Constant][40] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
    %442 = reshape(%439, newshape=[585, 1]) /* ty=Tensor[(585, 1), int16] */;
    %443 = reshape(%440, newshape=[2025]) /* ty=Tensor[(2025), float32] */;
    %444 = reshape(%441, newshape=[6, 7, 5]) /* ty=Tensor[(6, 7, 5), float64] */;
    %445 = @func_3134(%442, %443, %444) /* ty=(Tensor[(210), float64], Tensor[(585, 1), int16], Tensor[(1, 210), float64], Tensor[(2025), float32], Tensor[(6, 7, 5), float64]) */;
    %446 = cast(meta[relay.Constant][39] /* ty=Tensor[(2025), float32] */, dtype="float32") /* ty=Tensor[(2025), float32] */;
    %447 = cast(%var_4429, dtype="float32") /* ty=Tensor[(16, 15, 16), float32] */;
    %448 = tan(%447) /* ty=Tensor[(16, 15, 16), float32] */;
    %449 = cast(%448, dtype="float32") /* ty=Tensor[(16, 15, 16), float32] */;
    %450 = shape_of(%var_4429, dtype="int32") /* ty=Tensor[(3), int32] */;
    %451 = cast(%var_4429, dtype="float32") /* ty=Tensor[(16, 15, 16), float32] */;
    %452 = dyn.reshape(%449, %450, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %453 = floor_divide(%451, %452) /* ty=Tensor[(16, 15, 16), float32] */;
    %454 = cast(%453, dtype="float32") /* ty=Tensor[(16, 15, 16), float32] */;
    %455 = cast(meta[relay.Constant][41] /* ty=Tensor[(11, 165), int8] */, dtype="int8") /* ty=Tensor[(11, 165), int8] */;
    %456 = cast(meta[relay.Constant][41] /* ty=Tensor[(11, 165), int8] */, dtype="int8") /* ty=Tensor[(11, 165), int8] */;
    %457 = reshape(%455, newshape=[11, 15, 11]) /* ty=Tensor[(11, 15, 11), int8] */;
    %458 = reshape(%456, newshape=[11, 15, 11]) /* ty=Tensor[(11, 15, 11), int8] */;
    %459 = %445.3;
    %460 = log10(%446) /* ty=Tensor[(2025), float32] */;
    %461 = sinh(%454) /* ty=Tensor[(16, 15, 16), float32] */;
    %462 = @func_2253(%457, %458) /* ty=Tensor[(11, 15, 11), int8] */;
    (%459, meta[relay.Constant][38] /* ty=Tensor[(585), int16] */, meta[relay.Constant][40] /* ty=Tensor[(210), float64] */, %460, %461, %462, meta[relay.Constant][41] /* ty=Tensor[(11, 165), int8] */)
  };
  %463(%var_4482) /* ty=(Tensor[(2025), float32], Tensor[(585), int16], Tensor[(210), float64], Tensor[(2025), float32], Tensor[(16, 15, 16), float32], Tensor[(11, 15, 11), int8], Tensor[(11, 165), int8]) */
}

def @func_2114() -> (Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float32], Tensor[(2025), float32]) {
  %464 = cast(meta[relay.Constant][42] /* ty=Tensor[(2025), float32] */, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %465 = reshape(%464, newshape=[27, 75]) /* ty=Tensor[(27, 75), float32] */;
  %466 = @func_2090(%465) /* ty=(Tensor[(5, 15, 4), float32], float64, Tensor[(176), float64], Tensor[(27, 75), float32], Tensor[(126), float64]) */;
  %467 = @func_1957() /* ty=Tensor[(5, 15, 4), float32] */;
  %468 = %466.0;
  (%467, %468, meta[relay.Constant][42] /* ty=Tensor[(2025), float32] */)
}

def @func_2798(%var_2797: Tensor[(585), int16]) -> (Tensor[(5, 15, 4), bool], Tensor[(5, 15, 4), float32], Tensor[(210), float64], Tensor[(585), int16], Tensor[(1470), float32]) {
  %478 = fn (%var_2788: Tensor[(585), int16]) -> (Tensor[(5, 15, 4), bool], Tensor[(5, 15, 4), float32], Tensor[(210), float64], Tensor[(585), int16], Tensor[(1470), float32]) {
    %469 = @func_2614() /* ty=(Tensor[(5, 15, 4), bool],) */;
    %470 = cast(%var_2788, dtype="int16") /* ty=Tensor[(585), int16] */;
    %471 = cast(meta[relay.Constant][43] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
    %472 = reshape(%470, newshape=[13, 3, 15]) /* ty=Tensor[(13, 3, 15), int16] */;
    %473 = reshape(%471, newshape=[210, 7]) /* ty=Tensor[(210, 7), float32] */;
    %474 = @func_477(%472, %473) /* ty=(Tensor[(13, 3, 15), bool], Tensor[(210), float64], Tensor[(210, 7), int64], Tensor[(6, 7, 5), int32]) */;
    %475 = %469.0;
    %476 = @func_2632() /* ty=Tensor[(5, 15, 4), float32] */;
    %477 = %474.1;
    (%475, %476, %477, %var_2788, meta[relay.Constant][43] /* ty=Tensor[(1470), float32] */)
  };
  %478(%var_2797) /* ty=(Tensor[(5, 15, 4), bool], Tensor[(5, 15, 4), float32], Tensor[(210), float64], Tensor[(585), int16], Tensor[(1470), float32]) */
}

def @func_3770() -> Tensor[(5, 15, 4), float32] {
  %479 = fn () -> Tensor[(5, 15, 4), float32] {
    @func_1957() /* ty=Tensor[(5, 15, 4), float32] */
  };
  %479() /* ty=Tensor[(5, 15, 4), float32] */
}

def @func_2614() -> (Tensor[(5, 15, 4), bool],) {
  %480 = @func_2320() /* ty=(Tensor[(5, 15, 4), bool], Tensor[(5, 15, 4), bool]) */;
  %481 = %480.0;
  (%481,)
}

def @func_4096(%var_4019: Tensor[(585), int16], %var_4020: Tensor[(1470), float32], %var_4035: Tensor[(585), int16]) -> (Tensor[(5, 15, 4), float64], Tensor[(5, 15, 4), float32], Tensor[(210, 7), int64], Tensor[(585), uint16], Tensor[(1470), float32], Tensor[(1, 210), float64], Tensor[(2025), float32], Tensor[(2025), float32], Tensor[(1470), float64]) {
  %482 = cast(%var_4019, dtype="int16") /* ty=Tensor[(585), int16] */;
  %483 = cast(%var_4020, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %484 = reshape(%482, newshape=[13, 3, 15]) /* ty=Tensor[(13, 3, 15), int16] */;
  %485 = reshape(%483, newshape=[210, 7]) /* ty=Tensor[(210, 7), float32] */;
  %486 = @func_477(%484, %485) /* ty=(Tensor[(13, 3, 15), bool], Tensor[(210), float64], Tensor[(210, 7), int64], Tensor[(6, 7, 5), int32]) */;
  %487 = cast(%var_4035, dtype="uint16") /* ty=Tensor[(585), uint16] */;
  %488 = shape_of(%var_4019, dtype="int32") /* ty=Tensor[(1), int32] */;
  %489 = cast(%var_4019, dtype="uint16") /* ty=Tensor[(585), uint16] */;
  %490 = dyn.reshape(%487, %488, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %491 = cast(%var_4020, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %492 = cosh(%491) /* ty=Tensor[(1470), float32] */;
  %493 = cast(meta[relay.Constant][44] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %494 = shape_of(%492, dtype="int32") /* ty=Tensor[(1), int32] */;
  %495 = cast(%492, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %496 = dyn.reshape(%493, %494, newshape=[]) /* ty=Tensor[(?), float32] */;
  %497 = cast(meta[relay.Constant][45] /* ty=Tensor[(2025), float32] */, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %498 = reshape(%497, newshape=[15, 15, 9]) /* ty=Tensor[(15, 15, 9), float32] */;
  %499 = @func_1289(%498) /* ty=(Tensor[(15, 15, 9), float32], Tensor[(13, 12, 2), int64], Tensor[(1, 210), float64]) */;
  %500 = @func_3217() /* ty=(Tensor[(2025), float32],) */;
  %501 = cast(meta[relay.Constant][44] /* ty=Tensor[(1470), float32] */, dtype="bool") /* ty=Tensor[(1470), bool] */;
  %502 = shape_of(%492, dtype="int32") /* ty=Tensor[(1), int32] */;
  %503 = cast(%492, dtype="bool") /* ty=Tensor[(1470), bool] */;
  %504 = dyn.reshape(%501, %502, newshape=[]) /* ty=Tensor[(?), bool] */;
  %505 = less_equal(%503, %504) /* ty=Tensor[(1470), bool] */;
  %506 = cast(%505, dtype="float64") /* ty=Tensor[(1470), float64] */;
  %507 = @func_2975() /* ty=Tensor[(5, 15, 4), float64] */;
  %508 = @func_1957() /* ty=Tensor[(5, 15, 4), float32] */;
  %509 = %486.2;
  %510 = add(%489, %490) /* ty=Tensor[(585), uint16] */;
  %511 = divide(%495, %496) /* ty=Tensor[(1470), float32] */;
  %512 = %499.2;
  %513 = %500.0;
  %514 = atan(%506) /* ty=Tensor[(1470), float64] */;
  (%507, %508, %509, %510, %511, %512, meta[relay.Constant][45] /* ty=Tensor[(2025), float32] */, %513, %514)
}

def @func_2164() -> (Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float32], Tensor[(2025), float32]) {
  @func_2162() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float32], Tensor[(2025), float32]) */
}

def @func_2828() -> (Tensor[(210), float64],) {
  @func_2826() /* ty=(Tensor[(210), float64],) */
}

def @func_3663() -> (Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float64], Tensor[(210), float64]) {
  %515 = @func_3245() /* ty=(Tensor[(5, 15, 4), float32],) */;
  %516 = @func_3245() /* ty=(Tensor[(5, 15, 4), float32],) */;
  %517 = %516.0;
  %518 = cast(%517, dtype="float64") /* ty=Tensor[(5, 15, 4), float64] */;
  %519 = @func_2826() /* ty=(Tensor[(210), float64],) */;
  %520 = %515.0;
  %521 = sin(%518) /* ty=Tensor[(5, 15, 4), float64] */;
  %522 = %519.0;
  (%520, %521, %522)
}

def @func_2440(%var_2414: Tensor[(65, 9), int16]) -> (Tensor[(5, 15, 4), bool], Tensor[(210), float64], Tensor[(1470), float32], Tensor[(65, 9), float64]) {
  %523 = @func_2320() /* ty=(Tensor[(5, 15, 4), bool], Tensor[(5, 15, 4), bool]) */;
  %524 = cast(%var_2414, dtype="int16") /* ty=Tensor[(65, 9), int16] */;
  %525 = cast(meta[relay.Constant][46] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %526 = reshape(%524, newshape=[13, 3, 15]) /* ty=Tensor[(13, 3, 15), int16] */;
  %527 = reshape(%525, newshape=[210, 7]) /* ty=Tensor[(210, 7), float32] */;
  %528 = @func_477(%526, %527) /* ty=(Tensor[(13, 3, 15), bool], Tensor[(210), float64], Tensor[(210, 7), int64], Tensor[(6, 7, 5), int32]) */;
  %529 = cast(%var_2414, dtype="float32") /* ty=Tensor[(65, 9), float32] */;
  %530 = rsqrt(%529) /* ty=Tensor[(65, 9), float32] */;
  %531 = cast(%530, dtype="float64") /* ty=Tensor[(65, 9), float64] */;
  %532 = %523.0;
  %533 = %528.1;
  %534 = exp(%531) /* ty=Tensor[(65, 9), float64] */;
  (%532, %533, meta[relay.Constant][46] /* ty=Tensor[(1470), float32] */, %534)
}

def @func_1704(%var_1659: Tensor[(1, 2, 15), float32], %var_1665: Tensor[(72), float32], %var_1666: Tensor[(195, 3), int16], %var_1667: Tensor[(1470), float32], %var_1668: Tensor[(210), float64]) -> (Tensor[(585), int16], float32, Tensor[(72), float32], Tensor[(195, 3), int16], Tensor[(1470), float32], Tensor[(210), float64], Tensor[(13, 3, 15), bool], Tensor[(210), float64], Tensor[(?, 2, 15), int16]) {
  %535 = cast(-0.355011f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %536 = cast(%var_1665, dtype="float32") /* ty=Tensor[(72), float32] */;
  %537 = cast(%var_1666, dtype="int16") /* ty=Tensor[(195, 3), int16] */;
  %538 = cast(%var_1667, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %539 = cast(%var_1668, dtype="float64") /* ty=Tensor[(210), float64] */;
  %540 = reshape(%535, newshape=[]) /* ty=float32 */;
  %541 = reshape(%536, newshape=[3, 6, 4]) /* ty=Tensor[(3, 6, 4), float32] */;
  %542 = reshape(%537, newshape=[585]) /* ty=Tensor[(585), int16] */;
  %543 = reshape(%538, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
  %544 = reshape(%539, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %545 = @func_1245(%540, %541, %542, %543, %544) /* ty=(Tensor[(3, 6, 4), float32], Tensor[(210, 7), int64], Tensor[(585), int16], Tensor[(5, 9, 16), float32], Tensor[(60, 12), float32], Tensor[(210), float64], Tensor[(1470), float32], Tensor[(6, 7, 5), int32]) */;
  %546 = %545.2;
  %547 = cast(%546, dtype="int16") /* ty=Tensor[(585), int16] */;
  %548 = cast(%var_1667, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %549 = reshape(%547, newshape=[13, 3, 15]) /* ty=Tensor[(13, 3, 15), int16] */;
  %550 = reshape(%548, newshape=[210, 7]) /* ty=Tensor[(210, 7), float32] */;
  %551 = @func_477(%549, %550) /* ty=(Tensor[(13, 3, 15), bool], Tensor[(210), float64], Tensor[(210, 7), int64], Tensor[(6, 7, 5), int32]) */;
  %552 = cast(-0.355011f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %553 = cast(%var_1665, dtype="float32") /* ty=Tensor[(72), float32] */;
  %554 = cast(%546, dtype="int16") /* ty=Tensor[(585), int16] */;
  %555 = cast(%var_1667, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %556 = cast(%var_1668, dtype="float64") /* ty=Tensor[(210), float64] */;
  %557 = reshape(%552, newshape=[]) /* ty=float32 */;
  %558 = reshape(%553, newshape=[3, 6, 4]) /* ty=Tensor[(3, 6, 4), float32] */;
  %559 = reshape(%554, newshape=[585]) /* ty=Tensor[(585), int16] */;
  %560 = reshape(%555, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
  %561 = reshape(%556, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %562 = @func_1245(%557, %558, %559, %560, %561) /* ty=(Tensor[(3, 6, 4), float32], Tensor[(210, 7), int64], Tensor[(585), int16], Tensor[(5, 9, 16), float32], Tensor[(60, 12), float32], Tensor[(210), float64], Tensor[(1470), float32], Tensor[(6, 7, 5), int32]) */;
  %563 = cast(%var_1659, dtype="float32") /* ty=Tensor[(1, 2, 15), float32] */;
  %564 = log2(%563) /* ty=Tensor[(1, 2, 15), float32] */;
  %565 = cast(%var_1659, dtype="int16") /* ty=Tensor[(1, 2, 15), int16] */;
  %566 = shape_of(%564, dtype="int32") /* ty=Tensor[(3), int32] */;
  %567 = cast(%564, dtype="int16") /* ty=Tensor[(1, 2, 15), int16] */;
  %568 = dyn.reshape(%565, %566, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %569 = %551.0;
  %570 = %562.5;
  %571 = bitwise_and(%567, %568) /* ty=Tensor[(?, 2, 15), int16] */;
  (%546, -0.355011f /* ty=float32 */, %var_1665, %var_1666, %var_1667, %var_1668, %569, %570, %571)
}

def @func_3302() -> (Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float64]) {
  %572 = @func_1957() /* ty=Tensor[(5, 15, 4), float32] */;
  %573 = cast(%572, dtype="float32") /* ty=Tensor[(5, 15, 4), float32] */;
  %574 = cast(%572, dtype="float64") /* ty=Tensor[(5, 15, 4), float64] */;
  %575 = asin(%574) /* ty=Tensor[(5, 15, 4), float64] */;
  %576 = cast(%575, dtype="float32") /* ty=Tensor[(5, 15, 4), float32] */;
  %577 = acos(%576) /* ty=Tensor[(5, 15, 4), float32] */;
  %578 = cast(%577, dtype="float64") /* ty=Tensor[(5, 15, 4), float64] */;
  %579 = log(%573) /* ty=Tensor[(5, 15, 4), float32] */;
  %580 = rsqrt(%578) /* ty=Tensor[(5, 15, 4), float64] */;
  (%579, %580)
}

def @func_3916(%var_3914: Tensor[(585, 1), int16], %var_3915: Tensor[(126), float64]) -> (Tensor[(5, 15, 4), float32], Tensor[(210), float64], Tensor[(30), float32], Tensor[(585, 1), int16], Tensor[(1470), float32], Tensor[(14, 3, 3), bool], float64, Tensor[(126), float64]) {
  @func_3912(%var_3914, %var_3915) /* ty=(Tensor[(5, 15, 4), float32], Tensor[(210), float64], Tensor[(30), float32], Tensor[(585, 1), int16], Tensor[(1470), float32], Tensor[(14, 3, 3), bool], float64, Tensor[(126), float64]) */
}

def @func_2443(%var_2441: Tensor[(65, 9), int16]) -> (Tensor[(5, 15, 4), bool], Tensor[(210), float64], Tensor[(1470), float32], Tensor[(65, 9), float64]) {
  @func_2440(%var_2441) /* ty=(Tensor[(5, 15, 4), bool], Tensor[(210), float64], Tensor[(1470), float32], Tensor[(65, 9), float64]) */
}

def @func_5244() -> (Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float64]) {
  %583 = fn () -> (Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float64]) {
    %581 = @func_2632() /* ty=Tensor[(5, 15, 4), float32] */;
    %582 = @func_2975() /* ty=Tensor[(5, 15, 4), float64] */;
    (%581, %582)
  };
  %583() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float64]) */
}

def @func_4426() -> (Tensor[(5, 15, 4), float64],) {
  %584 = @func_2975() /* ty=Tensor[(5, 15, 4), float64] */;
  (%584,)
}

def @func_7047() -> (Tensor[(5, 15, 4), float32],) {
  %587 = fn () -> (Tensor[(5, 15, 4), float32],) {
    %585 = @func_6784() /* ty=(Tensor[(5, 15, 4), float32],) */;
    %586 = %585.0;
    (%586,)
  };
  %587() /* ty=(Tensor[(5, 15, 4), float32],) */
}

def @func_2055(%var_2053: Tensor[(72), float32], %var_2054: Tensor[(1, 585), int16]) -> (Tensor[(5, 15, 4), float32], Tensor[(6, 7, 5), int32], float32, Tensor[(72), float32], Tensor[(1, 585), int16], Tensor[(1470), float32], Tensor[(210), float64]) {
  @func_2051(%var_2053, %var_2054) /* ty=(Tensor[(5, 15, 4), float32], Tensor[(6, 7, 5), int32], float32, Tensor[(72), float32], Tensor[(1, 585), int16], Tensor[(1470), float32], Tensor[(210), float64]) */
}

def @func_6019(%var_6016: Tensor[(288), float32], %var_6017: Tensor[(2025), float32], %var_6018: Tensor[(65, 9), float64]) -> (Tensor[(585), int16], Tensor[(72, 4), float32], Tensor[(96), int8], Tensor[(864), int8], Tensor[(210), float64], Tensor[(288), float32], Tensor[(2025), int64], Tensor[(13, 12, 2), int64], Tensor[(65, 9), bool]) {
  @func_6014(%var_6016, %var_6017, %var_6018) /* ty=(Tensor[(585), int16], Tensor[(72, 4), float32], Tensor[(96), int8], Tensor[(864), int8], Tensor[(210), float64], Tensor[(288), float32], Tensor[(2025), int64], Tensor[(13, 12, 2), int64], Tensor[(65, 9), bool]) */
}

def @func_4270() -> (Tensor[(5, 15, 4), float64],) {
  %588 = @func_3502() /* ty=Tensor[(5, 15, 4), float64] */;
  (%588,)
}

def @func_480(%var_478: Tensor[(13, 3, 15), int16], %var_479: Tensor[(210, 7), float32]) -> (Tensor[(13, 3, 15), bool], Tensor[(210), float64], Tensor[(210, 7), int64], Tensor[(6, 7, 5), int32]) {
  %605 = fn (%var_429: Tensor[(13, 3, 15), int16], %var_466: Tensor[(210, 7), float32]) -> (Tensor[(13, 3, 15), bool], Tensor[(210), float64], Tensor[(210, 7), int64], Tensor[(6, 7, 5), int32]) {
    %589 = cast(meta[relay.Constant][47] /* ty=int16 */, dtype="bool") /* ty=bool */;
    %590 = cast(%var_429, dtype="bool") /* ty=Tensor[(13, 3, 15), bool] */;
    %591 = cast(meta[relay.Constant][48] /* ty=Tensor[(210, 1), float64] */, dtype="float64") /* ty=Tensor[(210, 1), float64] */;
    %592 = reshape(%591, newshape=[210]) /* ty=Tensor[(210), float64] */;
    %593 = @func_406(%592) /* ty=(Tensor[(6, 7, 5), int32], Tensor[(210), float64], Tensor[(13, 12, 2), float32], Tensor[(13, 12, 2), int64], Tensor[(6, 7, 5), int32], Tensor[(6, 7, 5), int32]) */;
    %594 = cast(meta[relay.Constant][48] /* ty=Tensor[(210, 1), float64] */, dtype="float32") /* ty=Tensor[(210, 1), float32] */;
    %595 = sin(%594) /* ty=Tensor[(210, 1), float32] */;
    %596 = cast(%595, dtype="int64") /* ty=Tensor[(210, 1), int64] */;
    %597 = cast(%var_466, dtype="int64") /* ty=Tensor[(210, 7), int64] */;
    %598 = cast(%595, dtype="float64") /* ty=Tensor[(210, 1), float64] */;
    %599 = reshape(%598, newshape=[210]) /* ty=Tensor[(210), float64] */;
    %600 = @func_406(%599) /* ty=(Tensor[(6, 7, 5), int32], Tensor[(210), float64], Tensor[(13, 12, 2), float32], Tensor[(13, 12, 2), int64], Tensor[(6, 7, 5), int32], Tensor[(6, 7, 5), int32]) */;
    %601 = greater(%589, %590) /* ty=Tensor[(13, 3, 15), bool] */;
    %602 = %593.1;
    %603 = multiply(%596, %597) /* ty=Tensor[(210, 7), int64] */;
    %604 = %600.5;
    (%601, %602, %603, %604)
  };
  %605(%var_478, %var_479) /* ty=(Tensor[(13, 3, 15), bool], Tensor[(210), float64], Tensor[(210, 7), int64], Tensor[(6, 7, 5), int32]) */
}

def @func_7010() -> Tensor[(5, 15, 4), float32] {
  %606 = @func_5243() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float64]) */;
  %606.0
}

def @func_3665() -> (Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float64], Tensor[(210), float64]) {
  @func_3663() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float64], Tensor[(210), float64]) */
}

def @func_2093(%var_2091: Tensor[(27, 75), float32]) -> (Tensor[(5, 15, 4), float32], float64, Tensor[(176), float64], Tensor[(27, 75), float32], Tensor[(126), float64]) {
  @func_2090(%var_2091) /* ty=(Tensor[(5, 15, 4), float32], float64, Tensor[(176), float64], Tensor[(27, 75), float32], Tensor[(126), float64]) */
}

def @func_2253(%var_2247: Tensor[(11, 15, 11), int8], %var_2248: Tensor[(11, 15, 11), int8]) -> Tensor[(11, 15, 11), int8] {
  %607 = cast(%var_2248, dtype="int8") /* ty=Tensor[(11, 15, 11), int8] */;
  %608 = shape_of(%var_2247, dtype="int32") /* ty=Tensor[(3), int32] */;
  %609 = cast(%var_2247, dtype="int8") /* ty=Tensor[(11, 15, 11), int8] */;
  %610 = dyn.reshape(%607, %608, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  minimum(%609, %610) /* ty=Tensor[(11, 15, 11), int8] */
}

def @func_5726() -> (Tensor[(5, 15, 4), float32], Tensor[(72), float32], Tensor[(585), int16]) {
  %616 = fn () -> (Tensor[(5, 15, 4), float32], Tensor[(72), float32], Tensor[(585), int16]) {
    %611 = cast(meta[relay.Constant][49] /* ty=Tensor[(585), int16] */, dtype="int16") /* ty=Tensor[(585), int16] */;
    %612 = reshape(%611, newshape=[585]) /* ty=Tensor[(585), int16] */;
    %613 = @func_3465(%612) /* ty=(Tensor[(2025), float32], Tensor[(1470), float32], Tensor[(72), float32], Tensor[(585), int16]) */;
    %614 = @func_1957() /* ty=Tensor[(5, 15, 4), float32] */;
    %615 = %613.2;
    (%614, %615, meta[relay.Constant][49] /* ty=Tensor[(585), int16] */)
  };
  %616() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(72), float32], Tensor[(585), int16]) */
}

def @func_5528(%var_5488: Tensor[(21, 6), float64]) -> (Tensor[(4, 16, 16), float32], Tensor[(1024), float32], Tensor[(14, 3, 3), bool], float64, Tensor[(21, 6), float64], Tensor[(5, 15, 4), float32], Tensor[(4, 11, 13), float32]) {
  %617 = cast(meta[relay.Constant][50] /* ty=Tensor[(1024), float32] */, dtype="float32") /* ty=Tensor[(1024), float32] */;
  %618 = reshape(%617, newshape=[4, 16, 16]) /* ty=Tensor[(4, 16, 16), float32] */;
  %619 = @func_1943(%618) /* ty=(Tensor[(4, 16, 16), float32],) */;
  %620 = cast(-4.00147f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %621 = cast(%var_5488, dtype="float64") /* ty=Tensor[(21, 6), float64] */;
  %622 = reshape(%620, newshape=[]) /* ty=float64 */;
  %623 = reshape(%621, newshape=[14, 3, 3]) /* ty=Tensor[(14, 3, 3), float64] */;
  %624 = @func_1331(%622, %623) /* ty=(Tensor[(14, 3, 3), bool],) */;
  %625 = @func_3696() /* ty=(Tensor[(5, 15, 4), float32],) */;
  %626 = cast(meta[relay.Constant][51] /* ty=Tensor[(4, 11, 13), float32] */, dtype="float32") /* ty=Tensor[(4, 11, 13), float32] */;
  %627 = log10(%626) /* ty=Tensor[(4, 11, 13), float32] */;
  %628 = cast(%627, dtype="float32") /* ty=Tensor[(4, 11, 13), float32] */;
  %629 = %619.0;
  %630 = %624.0;
  %631 = %625.0;
  %632 = sigmoid(%628) /* ty=Tensor[(4, 11, 13), float32] */;
  (%629, meta[relay.Constant][50] /* ty=Tensor[(1024), float32] */, %630, -4.00147f64 /* ty=float64 */, %var_5488, %631, %632)
}

def @func_2162() -> (Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float32], Tensor[(2025), float32]) {
  %633 = @func_2114() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float32], Tensor[(2025), float32]) */;
  %634 = cast(meta[relay.Constant][52] /* ty=Tensor[(2025), float32] */, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %635 = reshape(%634, newshape=[27, 75]) /* ty=Tensor[(27, 75), float32] */;
  %636 = @func_2090(%635) /* ty=(Tensor[(5, 15, 4), float32], float64, Tensor[(176), float64], Tensor[(27, 75), float32], Tensor[(126), float64]) */;
  %637 = %633.0;
  %638 = %636.0;
  (%637, %638, meta[relay.Constant][52] /* ty=Tensor[(2025), float32] */)
}

def @func_409(%var_407: Tensor[(210), float64]) -> (Tensor[(6, 7, 5), int32], Tensor[(210), float64], Tensor[(13, 12, 2), float32], Tensor[(13, 12, 2), int64], Tensor[(6, 7, 5), int32], Tensor[(6, 7, 5), int32]) {
  @func_406(%var_407) /* ty=(Tensor[(6, 7, 5), int32], Tensor[(210), float64], Tensor[(13, 12, 2), float32], Tensor[(13, 12, 2), int64], Tensor[(6, 7, 5), int32], Tensor[(6, 7, 5), int32]) */
}

def @func_6481() -> (Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float64]) {
  @func_6479() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float64]) */
}

def @func_3435() -> (Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float32], Tensor[(65, 9), float32]) {
  @func_3433() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float32], Tensor[(65, 9), float32]) */
}

def @func_6865(%var_6863: Tensor[(15, 5, 8), uint8], %var_6864: Tensor[(15, 5, 8), uint8]) -> Tensor[(15, 5, 8), bool] {
  @func_6861(%var_6863, %var_6864) /* ty=Tensor[(15, 5, 8), bool] */
}

def @func_5141(%var_5137: uint32, %var_5138: Tensor[(11, 12, 13), uint32], %var_5139: Tensor[(300), float32], %var_5140: Tensor[(11, 12, 13), uint32]) -> (Tensor[(11, 12, 13), uint32], Tensor[(270, 2), float64], Tensor[(300), float32], Tensor[(176, 1), uint16], Tensor[(5, 15, 4), float32], Tensor[(11, 12, 13), uint8]) {
  %663 = fn (%var_5088: uint32, %var_5089: Tensor[(11, 12, 13), uint32], %var_5101: Tensor[(300), float32], %var_5129: Tensor[(11, 12, 13), uint32]) -> (Tensor[(11, 12, 13), uint32], Tensor[(270, 2), float64], Tensor[(300), float32], Tensor[(176, 1), uint16], Tensor[(5, 15, 4), float32], Tensor[(11, 12, 13), uint8]) {
    %639 = cast(%var_5088, dtype="uint32") /* ty=uint32 */;
    %640 = cast(%var_5089, dtype="uint32") /* ty=Tensor[(11, 12, 13), uint32] */;
    %641 = cast(meta[relay.Constant][53] /* ty=Tensor[(270, 2), float64] */, dtype="float64") /* ty=Tensor[(270, 2), float64] */;
    %642 = cast(%var_5101, dtype="float32") /* ty=Tensor[(300), float32] */;
    %643 = reshape(%641, newshape=[5, 12, 9]) /* ty=Tensor[(5, 12, 9), float64] */;
    %644 = reshape(%642, newshape=[300]) /* ty=Tensor[(300), float32] */;
    %645 = @func_4527(%643, %644) /* ty=(Tensor[(5, 12, 9), float64], Tensor[(2025), float32], Tensor[(300), float32], Tensor[(176, 1), float64], Tensor[(2025), float32], Tensor[(5, 15, 4), float64]) */;
    %646 = %645.3;
    %647 = cast(%646, dtype="uint16") /* ty=Tensor[(176, 1), uint16] */;
    %648 = cast(%var_5088, dtype="uint16") /* ty=uint16 */;
    %649 = @func_3302() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float64]) */;
    %650 = cast(%var_5129, dtype="uint64") /* ty=Tensor[(11, 12, 13), uint64] */;
    %651 = shape_of(%var_5089, dtype="int32") /* ty=Tensor[(3), int32] */;
    %652 = cast(%var_5089, dtype="uint64") /* ty=Tensor[(11, 12, 13), uint64] */;
    %653 = dyn.reshape(%650, %651, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %654 = logical_xor(%652, %653) /* ty=Tensor[(11, 12, 13), uint64] */;
    %655 = cast(%654, dtype="uint8") /* ty=Tensor[(11, 12, 13), uint8] */;
    %656 = shape_of(%var_5129, dtype="int32") /* ty=Tensor[(3), int32] */;
    %657 = cast(%var_5129, dtype="uint8") /* ty=Tensor[(11, 12, 13), uint8] */;
    %658 = dyn.reshape(%655, %656, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %659 = maximum(%639, %640) /* ty=Tensor[(11, 12, 13), uint32] */;
    %660 = multiply(%647, %648) /* ty=Tensor[(176, 1), uint16] */;
    %661 = %649.0;
    %662 = bitwise_or(%657, %658) /* ty=Tensor[(11, 12, 13), uint8] */;
    (%659, meta[relay.Constant][53] /* ty=Tensor[(270, 2), float64] */, %var_5101, %660, %661, %662)
  };
  %663(%var_5137, %var_5138, %var_5139, %var_5140) /* ty=(Tensor[(11, 12, 13), uint32], Tensor[(270, 2), float64], Tensor[(300), float32], Tensor[(176, 1), uint16], Tensor[(5, 15, 4), float32], Tensor[(11, 12, 13), uint8]) */
}

def @func_2322() -> (Tensor[(5, 15, 4), bool], Tensor[(5, 15, 4), bool]) {
  @func_2320() /* ty=(Tensor[(5, 15, 4), bool], Tensor[(5, 15, 4), bool]) */
}

def @func_1958() -> Tensor[(5, 15, 4), float32] {
  %665 = fn () -> Tensor[(5, 15, 4), float32] {
    %664 = cast(meta[relay.Constant][54] /* ty=Tensor[(5, 15, 4), float32] */, dtype="float32") /* ty=Tensor[(5, 15, 4), float32] */;
    cosh(%664) /* ty=Tensor[(5, 15, 4), float32] */
  };
  %665() /* ty=Tensor[(5, 15, 4), float32] */
}

def @func_7302() -> (Tensor[(5, 15, 4), float64],) {
  %666 = @func_3502() /* ty=Tensor[(5, 15, 4), float64] */;
  (%666,)
}

def @func_2977() -> Tensor[(5, 15, 4), float64] {
  @func_2975() /* ty=Tensor[(5, 15, 4), float64] */
}

def @func_3733() -> Tensor[(5, 15, 4), float64] {
  %667 = @func_3663() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float64], Tensor[(210), float64]) */;
  %667.1
}

def @func_6376(%var_6375: Tensor[(585), int16]) -> (Tensor[(1815), int8], Tensor[(1815), int8], Tensor[(585), int16], Tensor[(5, 15, 4), float32]) {
  %680 = fn (%var_6363: Tensor[(585), int16]) -> (Tensor[(1815), int8], Tensor[(1815), int8], Tensor[(585), int16], Tensor[(5, 15, 4), float32]) {
    %668 = cast(meta[relay.Constant][55] /* ty=Tensor[(1815), int8] */, dtype="int8") /* ty=Tensor[(1815), int8] */;
    %669 = cast(%var_6363, dtype="int16") /* ty=Tensor[(585), int16] */;
    %670 = reshape(%668, newshape=[1815]) /* ty=Tensor[(1815), int8] */;
    %671 = reshape(%669, newshape=[585]) /* ty=Tensor[(585), int16] */;
    %672 = @func_3353(%670, %671) /* ty=(Tensor[(6, 7, 5), float32], Tensor[(11, 15, 11), int8], Tensor[(1815), int8], Tensor[(5, 15, 4), float32], Tensor[(72), float32], Tensor[(585), int16]) */;
    %673 = @func_4270() /* ty=(Tensor[(5, 15, 4), float64],) */;
    %674 = %673.0;
    %675 = cast(%674, dtype="float64") /* ty=Tensor[(5, 15, 4), float64] */;
    %676 = atanh(%675) /* ty=Tensor[(5, 15, 4), float64] */;
    %677 = cast(%676, dtype="float32") /* ty=Tensor[(5, 15, 4), float32] */;
    %678 = %672.2;
    %679 = sqrt(%677) /* ty=Tensor[(5, 15, 4), float32] */;
    (%678, meta[relay.Constant][55] /* ty=Tensor[(1815), int8] */, %var_6363, %679)
  };
  %680(%var_6375) /* ty=(Tensor[(1815), int8], Tensor[(1815), int8], Tensor[(585), int16], Tensor[(5, 15, 4), float32]) */
}

def @func_3139(%var_3136: Tensor[(585, 1), int16], %var_3137: Tensor[(2025), float32], %var_3138: Tensor[(6, 7, 5), float64]) -> (Tensor[(210), float64], Tensor[(585, 1), int16], Tensor[(1, 210), float64], Tensor[(2025), float32], Tensor[(6, 7, 5), float64]) {
  @func_3134(%var_3136, %var_3137, %var_3138) /* ty=(Tensor[(210), float64], Tensor[(585, 1), int16], Tensor[(1, 210), float64], Tensor[(2025), float32], Tensor[(6, 7, 5), float64]) */
}

def @func_6620(%var_6547: Tensor[(585), int16], %var_6577: Tensor[(1470), float32], %var_6592: Tensor[(2025), float32]) -> (Tensor[(210), float64], Tensor[(13, 12, 2), int64], Tensor[(585), int16], Tensor[(1470), uint32], Tensor[(210), float64], Tensor[(2025), float32], Tensor[(5, 15, 4), float32]) {
  %681 = @func_2826() /* ty=(Tensor[(210), float64],) */;
  %682 = %681.0;
  %683 = cast(%682, dtype="float64") /* ty=Tensor[(210), float64] */;
  %684 = reshape(%683, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %685 = @func_406(%684) /* ty=(Tensor[(6, 7, 5), int32], Tensor[(210), float64], Tensor[(13, 12, 2), float32], Tensor[(13, 12, 2), int64], Tensor[(6, 7, 5), int32], Tensor[(6, 7, 5), int32]) */;
  %686 = cast(%var_6547, dtype="int16") /* ty=Tensor[(585), int16] */;
  %687 = reshape(%686, newshape=[65, 9]) /* ty=Tensor[(65, 9), int16] */;
  %688 = @func_2440(%687) /* ty=(Tensor[(5, 15, 4), bool], Tensor[(210), float64], Tensor[(1470), float32], Tensor[(65, 9), float64]) */;
  %689 = %688.2;
  %690 = cast(%var_6577, dtype="uint32") /* ty=Tensor[(1470), uint32] */;
  %691 = shape_of(%689, dtype="int32") /* ty=Tensor[(1), int32] */;
  %692 = cast(%689, dtype="uint32") /* ty=Tensor[(1470), uint32] */;
  %693 = dyn.reshape(%690, %691, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %694 = cast(%var_6547, dtype="int16") /* ty=Tensor[(585), int16] */;
  %695 = cast(%var_6592, dtype="float32") /* ty=Tensor[(2025), float32] */;
  %696 = cast(%682, dtype="float64") /* ty=Tensor[(210), float64] */;
  %697 = reshape(%694, newshape=[585, 1]) /* ty=Tensor[(585, 1), int16] */;
  %698 = reshape(%695, newshape=[2025]) /* ty=Tensor[(2025), float32] */;
  %699 = reshape(%696, newshape=[6, 7, 5]) /* ty=Tensor[(6, 7, 5), float64] */;
  %700 = @func_3134(%697, %698, %699) /* ty=(Tensor[(210), float64], Tensor[(585, 1), int16], Tensor[(1, 210), float64], Tensor[(2025), float32], Tensor[(6, 7, 5), float64]) */;
  %701 = cast(%var_6547, dtype="int16") /* ty=Tensor[(585), int16] */;
  %702 = reshape(%701, newshape=[585]) /* ty=Tensor[(585), int16] */;
  %703 = @func_6374(%702) /* ty=(Tensor[(1815), int8], Tensor[(1815), int8], Tensor[(585), int16], Tensor[(5, 15, 4), float32]) */;
  %704 = %685.3;
  %705 = logical_xor(%692, %693) /* ty=Tensor[(1470), uint32] */;
  %706 = %700.0;
  %707 = %703.3;
  (%682, %704, %var_6547, %705, %706, %var_6592, %707)
}

def @func_3547() -> (Tensor[(5, 15, 4), float32],) {
  @func_3545() /* ty=(Tensor[(5, 15, 4), float32],) */
}

def @func_4375(%var_4372: Tensor[(5, 15, 4), float32], %var_4373: Tensor[(176), float64], %var_4374: Tensor[(2025), float32]) -> (Tensor[(5, 15, 4), int64], float64, Tensor[(176), float64], Tensor[(2025), float32], Tensor[(126), float64], Tensor[(6, 7, 5), int32]) {
  %724 = fn (%var_4351: Tensor[(5, 15, 4), float32], %var_4359: Tensor[(176), float64], %var_4360: Tensor[(2025), float32]) -> (Tensor[(5, 15, 4), int64], float64, Tensor[(176), float64], Tensor[(2025), float32], Tensor[(126), float64], Tensor[(6, 7, 5), int32]) {
    %708 = @func_2632() /* ty=Tensor[(5, 15, 4), float32] */;
    %709 = cast(%var_4351, dtype="int64") /* ty=Tensor[(5, 15, 4), int64] */;
    %710 = shape_of(%708, dtype="int32") /* ty=Tensor[(3), int32] */;
    %711 = cast(%708, dtype="int64") /* ty=Tensor[(5, 15, 4), int64] */;
    %712 = dyn.reshape(%709, %710, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %713 = cast(%var_4359, dtype="float64") /* ty=Tensor[(176), float64] */;
    %714 = cast(%var_4360, dtype="float32") /* ty=Tensor[(2025), float32] */;
    %715 = cast(meta[relay.Constant][56] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
    %716 = reshape(%713, newshape=[1, 16, 11]) /* ty=Tensor[(1, 16, 11), float64] */;
    %717 = reshape(%714, newshape=[2025]) /* ty=Tensor[(2025), float32] */;
    %718 = reshape(%715, newshape=[126]) /* ty=Tensor[(126), float64] */;
    %719 = @func_2026(%716, %717, %718) /* ty=(Tensor[(13, 12, 2), int64], Tensor[(105, 2), float64], Tensor[(13, 12, 2), int64], Tensor[(2025), float32], Tensor[(14, 3, 3), bool], float64, Tensor[(126), float64], Tensor[(12, 16, 11), uint8], Tensor[(?, 16, 11), bool]) */;
    %720 = @func_2226() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(168), float64], Tensor[(6, 7, 5), int32], Tensor[(210), float64], Tensor[(13, 12, 2), bool], Tensor[(6, 7, 5), int32]) */;
    %721 = bitwise_or(%711, %712) /* ty=Tensor[(5, 15, 4), int64] */;
    %722 = %719.5;
    %723 = %720.2;
    (%721, %722, %var_4359, %var_4360, meta[relay.Constant][56] /* ty=Tensor[(126), float64] */, %723)
  };
  %724(%var_4372, %var_4373, %var_4374) /* ty=(Tensor[(5, 15, 4), int64], float64, Tensor[(176), float64], Tensor[(2025), float32], Tensor[(126), float64], Tensor[(6, 7, 5), int32]) */
}

def @func_3545() -> (Tensor[(5, 15, 4), float32],) {
  %725 = @func_3433() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float32], Tensor[(65, 9), float32]) */;
  %726 = %725.0;
  (%726,)
}

def @func_3353(%var_3329: Tensor[(1815), int8], %var_3339: Tensor[(585), int16]) -> (Tensor[(6, 7, 5), float32], Tensor[(11, 15, 11), int8], Tensor[(1815), int8], Tensor[(5, 15, 4), float32], Tensor[(72), float32], Tensor[(585), int16]) {
  %727 = @func_2226() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(168), float64], Tensor[(6, 7, 5), int32], Tensor[(210), float64], Tensor[(13, 12, 2), bool], Tensor[(6, 7, 5), int32]) */;
  %728 = %727.2;
  %729 = cast(%728, dtype="float32") /* ty=Tensor[(6, 7, 5), float32] */;
  %730 = cast(%var_3329, dtype="int8") /* ty=Tensor[(1815), int8] */;
  %731 = cast(%var_3329, dtype="int8") /* ty=Tensor[(1815), int8] */;
  %732 = reshape(%730, newshape=[11, 15, 11]) /* ty=Tensor[(11, 15, 11), int8] */;
  %733 = reshape(%731, newshape=[11, 15, 11]) /* ty=Tensor[(11, 15, 11), int8] */;
  %734 = cast(meta[relay.Constant][57] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %735 = cast(%var_3339, dtype="int16") /* ty=Tensor[(585), int16] */;
  %736 = reshape(%734, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %737 = reshape(%735, newshape=[1, 585]) /* ty=Tensor[(1, 585), int16] */;
  %738 = @func_2051(%736, %737) /* ty=(Tensor[(5, 15, 4), float32], Tensor[(6, 7, 5), int32], float32, Tensor[(72), float32], Tensor[(1, 585), int16], Tensor[(1470), float32], Tensor[(210), float64]) */;
  %739 = erf(%729) /* ty=Tensor[(6, 7, 5), float32] */;
  %740 = @func_2253(%732, %733) /* ty=Tensor[(11, 15, 11), int8] */;
  %741 = %738.0;
  (%739, %740, %var_3329, %741, meta[relay.Constant][57] /* ty=Tensor[(72), float32] */, %var_3339)
}

def @func_2826() -> (Tensor[(210), float64],) {
  %742 = @func_2226() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(168), float64], Tensor[(6, 7, 5), int32], Tensor[(210), float64], Tensor[(13, 12, 2), bool], Tensor[(6, 7, 5), int32]) */;
  %743 = %742.3;
  (%743,)
}

def @func_6785() -> (Tensor[(5, 15, 4), float32],) {
  %745 = fn () -> (Tensor[(5, 15, 4), float32],) {
    %744 = @func_1957() /* ty=Tensor[(5, 15, 4), float32] */;
    (%744,)
  };
  %745() /* ty=(Tensor[(5, 15, 4), float32],) */
}

def @func_1628(%var_1627: Tensor[(8, 3, 7), float64]) -> (Tensor[(13, 12, 2), float32], Tensor[(210), float64], Tensor[(8, 3, 7), float32]) {
  %756 = fn (%var_1588: Tensor[(8, 3, 7), float64]) -> (Tensor[(13, 12, 2), float32], Tensor[(210), float64], Tensor[(8, 3, 7), float32]) {
    %746 = cast(meta[relay.Constant][58] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
    %747 = reshape(%746, newshape=[210]) /* ty=Tensor[(210), float64] */;
    %748 = @func_406(%747) /* ty=(Tensor[(6, 7, 5), int32], Tensor[(210), float64], Tensor[(13, 12, 2), float32], Tensor[(13, 12, 2), int64], Tensor[(6, 7, 5), int32], Tensor[(6, 7, 5), int32]) */;
    %749 = cast(%var_1588, dtype="float64") /* ty=Tensor[(8, 3, 7), float64] */;
    %750 = asinh(%749) /* ty=Tensor[(8, 3, 7), float64] */;
    %751 = cast(%750, dtype="float32") /* ty=Tensor[(8, 3, 7), float32] */;
    %752 = cosh(%751) /* ty=Tensor[(8, 3, 7), float32] */;
    %753 = cast(%752, dtype="float32") /* ty=Tensor[(8, 3, 7), float32] */;
    %754 = %748.2;
    %755 = log10(%753) /* ty=Tensor[(8, 3, 7), float32] */;
    (%754, meta[relay.Constant][58] /* ty=Tensor[(210), float64] */, %755)
  };
  %756(%var_1627) /* ty=(Tensor[(13, 12, 2), float32], Tensor[(210), float64], Tensor[(8, 3, 7), float32]) */
}

def @func_1711(%var_1706: Tensor[(1, 2, 15), float32], %var_1707: Tensor[(72), float32], %var_1708: Tensor[(195, 3), int16], %var_1709: Tensor[(1470), float32], %var_1710: Tensor[(210), float64]) -> (Tensor[(585), int16], float32, Tensor[(72), float32], Tensor[(195, 3), int16], Tensor[(1470), float32], Tensor[(210), float64], Tensor[(13, 3, 15), bool], Tensor[(210), float64], Tensor[(?, 2, 15), int16]) {
  @func_1704(%var_1706, %var_1707, %var_1708, %var_1709, %var_1710) /* ty=(Tensor[(585), int16], float32, Tensor[(72), float32], Tensor[(195, 3), int16], Tensor[(1470), float32], Tensor[(210), float64], Tensor[(13, 3, 15), bool], Tensor[(210), float64], Tensor[(?, 2, 15), int16]) */
}

def @func_4388() -> (Tensor[(5, 15, 4), float32],) {
  %757 = @func_3433() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float32], Tensor[(65, 9), float32]) */;
  %758 = %757.0;
  (%758,)
}

def @func_5079(%var_5078: Tensor[(5, 5, 9), float32]) -> Tensor[(5, 5, 9), float32] {
  %760 = fn (%var_5070: Tensor[(5, 5, 9), float32]) -> Tensor[(5, 5, 9), float32] {
    %759 = cast(%var_5070, dtype="float32") /* ty=Tensor[(5, 5, 9), float32] */;
    log(%759) /* ty=Tensor[(5, 5, 9), float32] */
  };
  %760(%var_5078) /* ty=Tensor[(5, 5, 9), float32] */
}

def @func_2227() -> (Tensor[(5, 15, 4), float32], Tensor[(168), float64], Tensor[(6, 7, 5), int32], Tensor[(210), float64], Tensor[(13, 12, 2), bool], Tensor[(6, 7, 5), int32]) {
  %780 = fn () -> (Tensor[(5, 15, 4), float32], Tensor[(168), float64], Tensor[(6, 7, 5), int32], Tensor[(210), float64], Tensor[(13, 12, 2), bool], Tensor[(6, 7, 5), int32]) {
    %761 = @func_2114() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float32], Tensor[(2025), float32]) */;
    %762 = cast(meta[relay.Constant][60] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
    %763 = reshape(%762, newshape=[210]) /* ty=Tensor[(210), float64] */;
    %764 = @func_406(%763) /* ty=(Tensor[(6, 7, 5), int32], Tensor[(210), float64], Tensor[(13, 12, 2), float32], Tensor[(13, 12, 2), int64], Tensor[(6, 7, 5), int32], Tensor[(6, 7, 5), int32]) */;
    %765 = cast(meta[relay.Constant][59] /* ty=Tensor[(168), float64] */, dtype="float64") /* ty=Tensor[(168), float64] */;
    %766 = reshape(%765, newshape=[8, 3, 7]) /* ty=Tensor[(8, 3, 7), float64] */;
    %767 = @func_1626(%766) /* ty=(Tensor[(13, 12, 2), float32], Tensor[(210), float64], Tensor[(8, 3, 7), float32]) */;
    %768 = %767.0;
    %769 = cast(meta[relay.Constant][61] /* ty=Tensor[(13, 12, 2), float32] */, dtype="bool") /* ty=Tensor[(13, 12, 2), bool] */;
    %770 = shape_of(%768, dtype="int32") /* ty=Tensor[(3), int32] */;
    %771 = cast(%768, dtype="bool") /* ty=Tensor[(13, 12, 2), bool] */;
    %772 = dyn.reshape(%769, %770, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %773 = %764.4;
    %774 = cast(%773, dtype="float64") /* ty=Tensor[(6, 7, 5), float64] */;
    %775 = reshape(%774, newshape=[210]) /* ty=Tensor[(210), float64] */;
    %776 = @func_406(%775) /* ty=(Tensor[(6, 7, 5), int32], Tensor[(210), float64], Tensor[(13, 12, 2), float32], Tensor[(13, 12, 2), int64], Tensor[(6, 7, 5), int32], Tensor[(6, 7, 5), int32]) */;
    %777 = %761.1;
    %778 = less(%771, %772) /* ty=Tensor[(13, 12, 2), bool] */;
    %779 = %776.5;
    (%777, meta[relay.Constant][59] /* ty=Tensor[(168), float64] */, %773, meta[relay.Constant][60] /* ty=Tensor[(210), float64] */, %778, %779)
  };
  %780() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(168), float64], Tensor[(6, 7, 5), int32], Tensor[(210), float64], Tensor[(13, 12, 2), bool], Tensor[(6, 7, 5), int32]) */
}

def @func_4717(%var_4715: Tensor[(13, 13, 13), uint8], %var_4716: Tensor[(13, 13, 13), uint8]) -> (Tensor[(13, 13, 13), bool], Tensor[(13, 13, 13), float64]) {
  @func_4713(%var_4715, %var_4716) /* ty=(Tensor[(13, 13, 13), bool], Tensor[(13, 13, 13), float64]) */
}

def @func_5859() -> (Tensor[(5, 15, 4), float32],) {
  %783 = fn () -> (Tensor[(5, 15, 4), float32],) {
    %781 = @func_3245() /* ty=(Tensor[(5, 15, 4), float32],) */;
    %782 = %781.0;
    (%782,)
  };
  %783() /* ty=(Tensor[(5, 15, 4), float32],) */
}

def @func_2932(%var_2928: Tensor[(16, 6, 1), int8], %var_2929: Tensor[(16, 6, 9), int8], %var_2930: Tensor[(5, 42), float64], %var_2931: Tensor[(72, 4), float32]) -> (Tensor[(15, 14, 10), float64], Tensor[(30, 70), float64], Tensor[(5, 9, 16), float32], Tensor[(720), float32], Tensor[(5, 42), float64], Tensor[(5, 15, 4), float32], Tensor[(126), float64], Tensor[(72, 4), float32], float64, Tensor[(16, 6, 9), int8], float64, Tensor[(176), float64], Tensor[(2025), float32], Tensor[(585), int16], Tensor[(72), float32], Tensor[(1470), float32], Tensor[(5, 15, 4), float32], Tensor[(6, 7, 5), int32]) {
  @func_2926(%var_2928, %var_2929, %var_2930, %var_2931) /* ty=(Tensor[(15, 14, 10), float64], Tensor[(30, 70), float64], Tensor[(5, 9, 16), float32], Tensor[(720), float32], Tensor[(5, 42), float64], Tensor[(5, 15, 4), float32], Tensor[(126), float64], Tensor[(72, 4), float32], float64, Tensor[(16, 6, 9), int8], float64, Tensor[(176), float64], Tensor[(2025), float32], Tensor[(585), int16], Tensor[(72), float32], Tensor[(1470), float32], Tensor[(5, 15, 4), float32], Tensor[(6, 7, 5), int32]) */
}

def @func_1335(%var_1333: float64, %var_1334: Tensor[(14, 3, 3), float64]) -> (Tensor[(14, 3, 3), bool],) {
  @func_1331(%var_1333, %var_1334) /* ty=(Tensor[(14, 3, 3), bool],) */
}

def @func_3912(%var_3882: Tensor[(585, 1), int16], %var_3890: Tensor[(126), float64]) -> (Tensor[(5, 15, 4), float32], Tensor[(210), float64], Tensor[(30), float32], Tensor[(585, 1), int16], Tensor[(1470), float32], Tensor[(14, 3, 3), bool], float64, Tensor[(126), float64]) {
  %784 = @func_3245() /* ty=(Tensor[(5, 15, 4), float32],) */;
  %785 = cast(meta[relay.Constant][62] /* ty=Tensor[(30), float32] */, dtype="float32") /* ty=Tensor[(30), float32] */;
  %786 = cast(%var_3882, dtype="int16") /* ty=Tensor[(585, 1), int16] */;
  %787 = cast(meta[relay.Constant][63] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %788 = reshape(%785, newshape=[30]) /* ty=Tensor[(30), float32] */;
  %789 = reshape(%786, newshape=[585]) /* ty=Tensor[(585), int16] */;
  %790 = reshape(%787, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
  %791 = @func_2732(%788, %789, %790) /* ty=(Tensor[(6, 7, 5), int32], Tensor[(210), float64], Tensor[(30), float32], Tensor[(18, 4), float32], Tensor[(585), int16], Tensor[(1470), float32]) */;
  %792 = cast(7.38705f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %793 = cast(%var_3890, dtype="float64") /* ty=Tensor[(126), float64] */;
  %794 = reshape(%792, newshape=[]) /* ty=float64 */;
  %795 = reshape(%793, newshape=[14, 3, 3]) /* ty=Tensor[(14, 3, 3), float64] */;
  %796 = @func_1331(%794, %795) /* ty=(Tensor[(14, 3, 3), bool],) */;
  %797 = %784.0;
  %798 = %791.1;
  %799 = %796.0;
  (%797, %798, meta[relay.Constant][62] /* ty=Tensor[(30), float32] */, %var_3882, meta[relay.Constant][63] /* ty=Tensor[(1470), float32] */, %799, 7.38705f64 /* ty=float64 */, %var_3890)
}

def @func_4713(%var_4681: Tensor[(13, 13, 13), uint8], %var_4682: Tensor[(13, 13, 13), uint8]) -> (Tensor[(13, 13, 13), bool], Tensor[(13, 13, 13), float64]) {
  %800 = cast(%var_4682, dtype="bool") /* ty=Tensor[(13, 13, 13), bool] */;
  %801 = shape_of(%var_4681, dtype="int32") /* ty=Tensor[(3), int32] */;
  %802 = cast(%var_4681, dtype="bool") /* ty=Tensor[(13, 13, 13), bool] */;
  %803 = dyn.reshape(%800, %801, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %804 = cast(%var_4681, dtype="float64") /* ty=Tensor[(13, 13, 13), float64] */;
  %805 = shape_of(%var_4682, dtype="int32") /* ty=Tensor[(3), int32] */;
  %806 = cast(%var_4682, dtype="float64") /* ty=Tensor[(13, 13, 13), float64] */;
  %807 = dyn.reshape(%804, %805, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %808 = less(%802, %803) /* ty=Tensor[(13, 13, 13), bool] */;
  %809 = mod(%806, %807) /* ty=Tensor[(13, 13, 13), float64] */;
  (%808, %809)
}

def @func_4978() -> (Tensor[(5, 15, 4), float32], Tensor[(15, 14, 10), float64], Tensor[(2100), float64]) {
  %819 = fn () -> (Tensor[(5, 15, 4), float32], Tensor[(15, 14, 10), float64], Tensor[(2100), float64]) {
    %810 = @func_2614() /* ty=(Tensor[(5, 15, 4), bool],) */;
    %811 = %810.0;
    %812 = cast(%811, dtype="float32") /* ty=Tensor[(5, 15, 4), float32] */;
    %813 = cast(meta[relay.Constant][64] /* ty=Tensor[(2100), float64] */, dtype="float64") /* ty=Tensor[(2100), float64] */;
    %814 = cast(meta[relay.Constant][64] /* ty=Tensor[(2100), float64] */, dtype="float64") /* ty=Tensor[(2100), float64] */;
    %815 = reshape(%813, newshape=[15, 14, 10]) /* ty=Tensor[(15, 14, 10), float64] */;
    %816 = reshape(%814, newshape=[15, 14, 10]) /* ty=Tensor[(15, 14, 10), float64] */;
    %817 = log2(%812) /* ty=Tensor[(5, 15, 4), float32] */;
    %818 = @func_954(%815, %816) /* ty=Tensor[(15, 14, 10), float64] */;
    (%817, %818, meta[relay.Constant][64] /* ty=Tensor[(2100), float64] */)
  };
  %819() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(15, 14, 10), float64], Tensor[(2100), float64]) */
}

def @func_5625() -> (Tensor[(5, 15, 4), float32], Tensor[(264), float32], Tensor[(3, 11, 8), float64]) {
  @func_5623() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(264), float32], Tensor[(3, 11, 8), float64]) */
}

def @func_7103() -> (Tensor[(5, 15, 4), float64],) {
  %820 = @func_3663() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float64], Tensor[(210), float64]) */;
  %821 = %820.1;
  (%821,)
}

def @func_406(%var_362: Tensor[(210), float64]) -> (Tensor[(6, 7, 5), int32], Tensor[(210), float64], Tensor[(13, 12, 2), float32], Tensor[(13, 12, 2), int64], Tensor[(6, 7, 5), int32], Tensor[(6, 7, 5), int32]) {
  %822 = cast(%var_362, dtype="float64") /* ty=Tensor[(210), float64] */;
  %823 = cast(%var_362, dtype="float64") /* ty=Tensor[(210), float64] */;
  %824 = reshape(%822, newshape=[6, 7, 5]) /* ty=Tensor[(6, 7, 5), float64] */;
  %825 = reshape(%823, newshape=[6, 7, 5]) /* ty=Tensor[(6, 7, 5), float64] */;
  %826 = cast(meta[relay.Constant][65] /* ty=Tensor[(13, 12, 2), float32] */, dtype="float32") /* ty=Tensor[(13, 12, 2), float32] */;
  %827 = asin(%826) /* ty=Tensor[(13, 12, 2), float32] */;
  %828 = cast(%827, dtype="float32") /* ty=Tensor[(13, 12, 2), float32] */;
  %829 = cast(%827, dtype="int64") /* ty=Tensor[(13, 12, 2), int64] */;
  %830 = shape_of(meta[relay.Constant][65] /* ty=Tensor[(13, 12, 2), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %831 = cast(meta[relay.Constant][65] /* ty=Tensor[(13, 12, 2), float32] */, dtype="int64") /* ty=Tensor[(13, 12, 2), int64] */;
  %832 = dyn.reshape(%829, %830, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %833 = @func_317(%824, %825) /* ty=Tensor[(6, 7, 5), int32] */;
  %834 = cast(%833, dtype="float64") /* ty=Tensor[(6, 7, 5), float64] */;
  %835 = cast(%833, dtype="float64") /* ty=Tensor[(6, 7, 5), float64] */;
  %836 = reshape(%834, newshape=[6, 7, 5]) /* ty=Tensor[(6, 7, 5), float64] */;
  %837 = reshape(%835, newshape=[6, 7, 5]) /* ty=Tensor[(6, 7, 5), float64] */;
  %838 = cast(%var_362, dtype="float64") /* ty=Tensor[(210), float64] */;
  %839 = cast(%var_362, dtype="float64") /* ty=Tensor[(210), float64] */;
  %840 = reshape(%838, newshape=[6, 7, 5]) /* ty=Tensor[(6, 7, 5), float64] */;
  %841 = reshape(%839, newshape=[6, 7, 5]) /* ty=Tensor[(6, 7, 5), float64] */;
  %842 = asinh(%828) /* ty=Tensor[(13, 12, 2), float32] */;
  %843 = left_shift(%831, %832) /* ty=Tensor[(13, 12, 2), int64] */;
  %844 = @func_317(%836, %837) /* ty=Tensor[(6, 7, 5), int32] */;
  %845 = @func_317(%840, %841) /* ty=Tensor[(6, 7, 5), int32] */;
  (%833, %var_362, %842, %843, %844, %845)
}

def @func_2257(%var_2255: Tensor[(11, 15, 11), int8], %var_2256: Tensor[(11, 15, 11), int8]) -> Tensor[(11, 15, 11), int8] {
  @func_2253(%var_2255, %var_2256) /* ty=Tensor[(11, 15, 11), int8] */
}

def @main() -> (Tensor[(10, 5, 13), float64], Tensor[(10, 5, 13), float64]) {
  %846 = cast(meta[relay.Constant][66] /* ty=Tensor[(10, 5, 13), float32] */, dtype="float32") /* ty=Tensor[(10, 5, 13), float32] */;
  %847 = log(%846) /* ty=Tensor[(10, 5, 13), float32] */;
  %848 = cast(%847, dtype="float64") /* ty=Tensor[(10, 5, 13), float64] */;
  %849 = cast(%847, dtype="float64") /* ty=Tensor[(10, 5, 13), float64] */;
  %850 = sigmoid(%848) /* ty=Tensor[(10, 5, 13), float64] */;
  %851 = log10(%849) /* ty=Tensor[(10, 5, 13), float64] */;
  (%850, %851)
}

def @func_4272() -> (Tensor[(5, 15, 4), float64],) {
  @func_4270() /* ty=(Tensor[(5, 15, 4), float64],) */
}

def @func_2736(%var_2733: Tensor[(30), float32], %var_2734: Tensor[(585), int16], %var_2735: Tensor[(1470), float32]) -> (Tensor[(6, 7, 5), int32], Tensor[(210), float64], Tensor[(30), float32], Tensor[(18, 4), float32], Tensor[(585), int16], Tensor[(1470), float32]) {
  %866 = fn (%var_2727: Tensor[(30), float32], %var_2729: Tensor[(585), int16], %var_2730: Tensor[(1470), float32]) -> (Tensor[(6, 7, 5), int32], Tensor[(210), float64], Tensor[(30), float32], Tensor[(18, 4), float32], Tensor[(585), int16], Tensor[(1470), float32]) {
    %852 = @func_2226() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(168), float64], Tensor[(6, 7, 5), int32], Tensor[(210), float64], Tensor[(13, 12, 2), bool], Tensor[(6, 7, 5), int32]) */;
    %853 = cast(%var_2727, dtype="float32") /* ty=Tensor[(30), float32] */;
    %854 = cast(meta[relay.Constant][67] /* ty=Tensor[(18, 4), float32] */, dtype="float32") /* ty=Tensor[(18, 4), float32] */;
    %855 = cast(%var_2729, dtype="int16") /* ty=Tensor[(585), int16] */;
    %856 = cast(%var_2730, dtype="float32") /* ty=Tensor[(1470), float32] */;
    %857 = %852.2;
    %858 = cast(%857, dtype="float64") /* ty=Tensor[(6, 7, 5), float64] */;
    %859 = reshape(%853, newshape=[1, 2, 15]) /* ty=Tensor[(1, 2, 15), float32] */;
    %860 = reshape(%854, newshape=[72]) /* ty=Tensor[(72), float32] */;
    %861 = reshape(%855, newshape=[195, 3]) /* ty=Tensor[(195, 3), int16] */;
    %862 = reshape(%856, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
    %863 = reshape(%858, newshape=[210]) /* ty=Tensor[(210), float64] */;
    %864 = @func_1704(%859, %860, %861, %862, %863) /* ty=(Tensor[(585), int16], float32, Tensor[(72), float32], Tensor[(195, 3), int16], Tensor[(1470), float32], Tensor[(210), float64], Tensor[(13, 3, 15), bool], Tensor[(210), float64], Tensor[(?, 2, 15), int16]) */;
    %865 = %864.5;
    (%857, %865, %var_2727, meta[relay.Constant][67] /* ty=Tensor[(18, 4), float32] */, %var_2729, %var_2730)
  };
  %866(%var_2733, %var_2734, %var_2735) /* ty=(Tensor[(6, 7, 5), int32], Tensor[(210), float64], Tensor[(30), float32], Tensor[(18, 4), float32], Tensor[(585), int16], Tensor[(1470), float32]) */
}

def @func_320(%var_318: Tensor[(6, 7, 5), float64], %var_319: Tensor[(6, 7, 5), float64]) -> Tensor[(6, 7, 5), int32] {
  %873 = fn (%var_303: Tensor[(6, 7, 5), float64], %var_307: Tensor[(6, 7, 5), float64]) -> Tensor[(6, 7, 5), int32] {
    %867 = cast(%var_303, dtype="float64") /* ty=Tensor[(6, 7, 5), float64] */;
    %868 = acosh(%867) /* ty=Tensor[(6, 7, 5), float64] */;
    %869 = cast(%var_307, dtype="int32") /* ty=Tensor[(6, 7, 5), int32] */;
    %870 = shape_of(%868, dtype="int32") /* ty=Tensor[(3), int32] */;
    %871 = cast(%868, dtype="int32") /* ty=Tensor[(6, 7, 5), int32] */;
    %872 = dyn.reshape(%869, %870, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    left_shift(%871, %872) /* ty=Tensor[(6, 7, 5), int32] */
  };
  %873(%var_318, %var_319) /* ty=Tensor[(6, 7, 5), int32] */
}

def @func_908(%var_858: Tensor[(5, 9, 16), float32], %var_887: Tensor[(210), float64], %var_893: Tensor[(5, 9, 16), float32]) -> (Tensor[(5, 9, 16), float32], Tensor[(6, 7, 5), int32], Tensor[(210), float64], Tensor[(5, 9, 16), bool], Tensor[(6, 7, 5), int32]) {
  %874 = cast(meta[relay.Constant][68] /* ty=Tensor[(5, 9, 16), float32] */, dtype="float32") /* ty=Tensor[(5, 9, 16), float32] */;
  %875 = shape_of(%var_858, dtype="int32") /* ty=Tensor[(3), int32] */;
  %876 = cast(%var_858, dtype="float32") /* ty=Tensor[(5, 9, 16), float32] */;
  %877 = dyn.reshape(%874, %875, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %878 = cast(%var_887, dtype="float64") /* ty=Tensor[(210), float64] */;
  %879 = reshape(%878, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %880 = @func_406(%879) /* ty=(Tensor[(6, 7, 5), int32], Tensor[(210), float64], Tensor[(13, 12, 2), float32], Tensor[(13, 12, 2), int64], Tensor[(6, 7, 5), int32], Tensor[(6, 7, 5), int32]) */;
  %881 = cast(%var_893, dtype="bool") /* ty=Tensor[(5, 9, 16), bool] */;
  %882 = shape_of(meta[relay.Constant][68] /* ty=Tensor[(5, 9, 16), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %883 = cast(meta[relay.Constant][68] /* ty=Tensor[(5, 9, 16), float32] */, dtype="bool") /* ty=Tensor[(5, 9, 16), bool] */;
  %884 = dyn.reshape(%881, %882, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %885 = cast(%var_887, dtype="float64") /* ty=Tensor[(210), float64] */;
  %886 = cast(%var_887, dtype="float64") /* ty=Tensor[(210), float64] */;
  %887 = reshape(%885, newshape=[6, 7, 5]) /* ty=Tensor[(6, 7, 5), float64] */;
  %888 = reshape(%886, newshape=[6, 7, 5]) /* ty=Tensor[(6, 7, 5), float64] */;
  %889 = divide(%876, %877) /* ty=Tensor[(5, 9, 16), float32] */;
  %890 = %880.5;
  %891 = equal(%883, %884) /* ty=Tensor[(5, 9, 16), bool] */;
  %892 = @func_317(%887, %888) /* ty=Tensor[(6, 7, 5), int32] */;
  (%889, %890, %var_887, %891, %892)
}

def @func_6664() -> Tensor[(5, 15, 4), float32] {
  %894 = fn () -> Tensor[(5, 15, 4), float32] {
    %893 = @func_3545() /* ty=(Tensor[(5, 15, 4), float32],) */;
    %893.0
  };
  %894() /* ty=Tensor[(5, 15, 4), float32] */
}

def @func_4815() -> (Tensor[(5, 15, 4), float32],) {
  %895 = @func_3433() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float32], Tensor[(65, 9), float32]) */;
  %896 = %895.1;
  (%896,)
}

def @func_2051(%var_2044: Tensor[(72), float32], %var_2045: Tensor[(1, 585), int16]) -> (Tensor[(5, 15, 4), float32], Tensor[(6, 7, 5), int32], float32, Tensor[(72), float32], Tensor[(1, 585), int16], Tensor[(1470), float32], Tensor[(210), float64]) {
  %897 = cast(8.89418f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %898 = cast(%var_2044, dtype="float32") /* ty=Tensor[(72), float32] */;
  %899 = cast(%var_2045, dtype="int16") /* ty=Tensor[(1, 585), int16] */;
  %900 = cast(meta[relay.Constant][69] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %901 = cast(meta[relay.Constant][70] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %902 = reshape(%897, newshape=[]) /* ty=float32 */;
  %903 = reshape(%898, newshape=[3, 6, 4]) /* ty=Tensor[(3, 6, 4), float32] */;
  %904 = reshape(%899, newshape=[585]) /* ty=Tensor[(585), int16] */;
  %905 = reshape(%900, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
  %906 = reshape(%901, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %907 = @func_1245(%902, %903, %904, %905, %906) /* ty=(Tensor[(3, 6, 4), float32], Tensor[(210, 7), int64], Tensor[(585), int16], Tensor[(5, 9, 16), float32], Tensor[(60, 12), float32], Tensor[(210), float64], Tensor[(1470), float32], Tensor[(6, 7, 5), int32]) */;
  %908 = @func_1957() /* ty=Tensor[(5, 15, 4), float32] */;
  %909 = %907.7;
  (%908, %909, 8.89418f /* ty=float32 */, %var_2044, %var_2045, meta[relay.Constant][69] /* ty=Tensor[(1470), float32] */, meta[relay.Constant][70] /* ty=Tensor[(210), float64] */)
}

def @func_4237() -> Tensor[(5, 15, 4), float32] {
  %911 = fn () -> Tensor[(5, 15, 4), float32] {
    %910 = @func_3433() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float32], Tensor[(65, 9), float32]) */;
    %910.1
  };
  %911() /* ty=Tensor[(5, 15, 4), float32] */
}

def @func_1943(%var_1940: Tensor[(4, 16, 16), float32]) -> (Tensor[(4, 16, 16), float32],) {
  %912 = cast(%var_1940, dtype="float32") /* ty=Tensor[(4, 16, 16), float32] */;
  %913 = acosh(%912) /* ty=Tensor[(4, 16, 16), float32] */;
  (%913,)
}

def @func_2975() -> Tensor[(5, 15, 4), float64] {
  %914 = @func_2320() /* ty=(Tensor[(5, 15, 4), bool], Tensor[(5, 15, 4), bool]) */;
  %915 = %914.1;
  %916 = cast(%915, dtype="float64") /* ty=Tensor[(5, 15, 4), float64] */;
  sigmoid(%916) /* ty=Tensor[(5, 15, 4), float64] */
}

def @func_6861(%var_6836: Tensor[(15, 5, 8), uint8], %var_6837: Tensor[(15, 5, 8), uint8]) -> Tensor[(15, 5, 8), bool] {
  %917 = cast(%var_6837, dtype="bool") /* ty=Tensor[(15, 5, 8), bool] */;
  %918 = shape_of(%var_6836, dtype="int32") /* ty=Tensor[(3), int32] */;
  %919 = cast(%var_6836, dtype="bool") /* ty=Tensor[(15, 5, 8), bool] */;
  %920 = dyn.reshape(%917, %918, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %921 = equal(%919, %920) /* ty=Tensor[(15, 5, 8), bool] */;
  %922 = cast(%var_6836, dtype="bool") /* ty=Tensor[(15, 5, 8), bool] */;
  %923 = shape_of(%921, dtype="int32") /* ty=Tensor[(3), int32] */;
  %924 = cast(%921, dtype="bool") /* ty=Tensor[(15, 5, 8), bool] */;
  %925 = dyn.reshape(%922, %923, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %926 = logical_or(%924, %925) /* ty=Tensor[(15, 5, 8), bool] */;
  %927 = cast(meta[relay.Constant][71] /* ty=Tensor[(15, 5, 8), bool] */, dtype="bool") /* ty=Tensor[(15, 5, 8), bool] */;
  %928 = shape_of(%926, dtype="int32") /* ty=Tensor[(3), int32] */;
  %929 = cast(%926, dtype="bool") /* ty=Tensor[(15, 5, 8), bool] */;
  %930 = dyn.reshape(%927, %928, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%929, %930) /* ty=Tensor[(15, 5, 8), bool] */
}

def @func_6625(%var_6622: Tensor[(585), int16], %var_6623: Tensor[(1470), float32], %var_6624: Tensor[(2025), float32]) -> (Tensor[(210), float64], Tensor[(13, 12, 2), int64], Tensor[(585), int16], Tensor[(1470), uint32], Tensor[(210), float64], Tensor[(2025), float32], Tensor[(5, 15, 4), float32]) {
  @func_6620(%var_6622, %var_6623, %var_6624) /* ty=(Tensor[(210), float64], Tensor[(13, 12, 2), int64], Tensor[(585), int16], Tensor[(1470), uint32], Tensor[(210), float64], Tensor[(2025), float32], Tensor[(5, 15, 4), float32]) */
}

def @func_6758() -> Tensor[(168), float64] {
  %932 = fn () -> Tensor[(168), float64] {
    %931 = @func_2226() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(168), float64], Tensor[(6, 7, 5), int32], Tensor[(210), float64], Tensor[(13, 12, 2), bool], Tensor[(6, 7, 5), int32]) */;
    %931.1
  };
  %932() /* ty=Tensor[(168), float64] */
}

def @func_5623() -> (Tensor[(5, 15, 4), float32], Tensor[(264), float32], Tensor[(3, 11, 8), float64]) {
  %933 = @func_3545() /* ty=(Tensor[(5, 15, 4), float32],) */;
  %934 = cast(meta[relay.Constant][72] /* ty=Tensor[(264), float32] */, dtype="float32") /* ty=Tensor[(264), float32] */;
  %935 = reshape(%934, newshape=[3, 11, 8]) /* ty=Tensor[(3, 11, 8), float32] */;
  %936 = @func_5024(%935) /* ty=(Tensor[(3, 11, 8), float32], Tensor[(3, 11, 8), bool], Tensor[(6, 7, 5), int32], Tensor[(210), float64]) */;
  %937 = %936.0;
  %938 = cast(%937, dtype="float64") /* ty=Tensor[(3, 11, 8), float64] */;
  %939 = %933.0;
  %940 = exp(%938) /* ty=Tensor[(3, 11, 8), float64] */;
  (%939, meta[relay.Constant][72] /* ty=Tensor[(264), float32] */, %940)
}

def @func_5679() -> (Tensor[(15, 14, 10), float64],) {
  %941 = @func_4977() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(15, 14, 10), float64], Tensor[(2100), float64]) */;
  %942 = %941.1;
  %943 = cast(%942, dtype="float64") /* ty=Tensor[(15, 14, 10), float64] */;
  %944 = sigmoid(%943) /* ty=Tensor[(15, 14, 10), float64] */;
  (%944,)
}

def @func_3855(%var_3850: Tensor[(5, 15, 4), float64], %var_3851: float32, %var_3852: Tensor[(1470), float32], %var_3853: Tensor[(210), float64], %var_3854: Tensor[(585), int16]) -> (Tensor[(5, 15, 4), int32], Tensor[(210), float64], float32, Tensor[(1470), float32], Tensor[(210), float64], Tensor[(1470), float32], Tensor[(585), int16]) {
  @func_3848(%var_3850, %var_3851, %var_3852, %var_3853, %var_3854) /* ty=(Tensor[(5, 15, 4), int32], Tensor[(210), float64], float32, Tensor[(1470), float32], Tensor[(210), float64], Tensor[(1470), float32], Tensor[(585), int16]) */
}

def @func_4876(%var_4875: Tensor[(98, 15), float64]) -> (Tensor[(5, 15, 4), float32], Tensor[(585), int16], float32, Tensor[(210), float64], Tensor[(98, 15), float32], Tensor[(11, 15, 11), int8], Tensor[(1815), int8], Tensor[(2025), float32], Tensor[(98, 15), bool], Tensor[(98, 15), uint32], Tensor[(5, 15, 4), float64]) {
  %979 = fn (%var_4865: Tensor[(98, 15), float64]) -> (Tensor[(5, 15, 4), float32], Tensor[(585), int16], float32, Tensor[(210), float64], Tensor[(98, 15), float32], Tensor[(11, 15, 11), int8], Tensor[(1815), int8], Tensor[(2025), float32], Tensor[(98, 15), bool], Tensor[(98, 15), uint32], Tensor[(5, 15, 4), float64]) {
    %945 = cast(-2.41885f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %946 = cast(meta[relay.Constant][73] /* ty=Tensor[(98, 15), float32] */, dtype="float32") /* ty=Tensor[(98, 15), float32] */;
    %947 = cast(meta[relay.Constant][74] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
    %948 = reshape(%945, newshape=[]) /* ty=float32 */;
    %949 = reshape(%946, newshape=[1470]) /* ty=Tensor[(1470), float32] */;
    %950 = reshape(%947, newshape=[210]) /* ty=Tensor[(210), float64] */;
    %951 = @func_3186(%948, %949, %950) /* ty=(Tensor[(5, 15, 4), float64], Tensor[(210, 7), int64], float32, Tensor[(72), float32], Tensor[(585), int16], Tensor[(1470), float32], Tensor[(210), float64]) */;
    %952 = cast(meta[relay.Constant][73] /* ty=Tensor[(98, 15), float32] */, dtype="float32") /* ty=Tensor[(98, 15), float32] */;
    %953 = cosh(%952) /* ty=Tensor[(98, 15), float32] */;
    %954 = cast(%953, dtype="float32") /* ty=Tensor[(98, 15), float32] */;
    %955 = cast(meta[relay.Constant][75] /* ty=Tensor[(1815), int8] */, dtype="int8") /* ty=Tensor[(1815), int8] */;
    %956 = cast(meta[relay.Constant][75] /* ty=Tensor[(1815), int8] */, dtype="int8") /* ty=Tensor[(1815), int8] */;
    %957 = reshape(%955, newshape=[11, 15, 11]) /* ty=Tensor[(11, 15, 11), int8] */;
    %958 = reshape(%956, newshape=[11, 15, 11]) /* ty=Tensor[(11, 15, 11), int8] */;
    %959 = @func_2162() /* ty=(Tensor[(5, 15, 4), float32], Tensor[(5, 15, 4), float32], Tensor[(2025), float32]) */;
    %960 = cast(%953, dtype="float64") /* ty=Tensor[(98, 15), float64] */;
    %961 = sinh(%960) /* ty=Tensor[(98, 15), float64] */;
    %962 = cast(meta[relay.Constant][73] /* ty=Tensor[(98, 15), float32] */, dtype="bool") /* ty=Tensor[(98, 15), bool] */;
    %963 = shape_of(%961, dtype="int32") /* ty=Tensor[(2), int32] */;
    %964 = cast(%961, dtype="bool") /* ty=Tensor[(98, 15), bool] */;
    %965 = dyn.reshape(%962, %963, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %966 = cast(%var_4865, dtype="uint32") /* ty=Tensor[(98, 15), uint32] */;
    %967 = shape_of(%961, dtype="int32") /* ty=Tensor[(2), int32] */;
    %968 = cast(%961, dtype="uint32") /* ty=Tensor[(98, 15), uint32] */;
    %969 = dyn.reshape(%966, %967, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
    %970 = @func_4426() /* ty=(Tensor[(5, 15, 4), float64],) */;
    %971 = @func_2632() /* ty=Tensor[(5, 15, 4), float32] */;
    %972 = %951.4;
    %973 = tan(%954) /* ty=Tensor[(98, 15), float32] */;
    %974 = @func_2253(%957, %958) /* ty=Tensor[(11, 15, 11), int8] */;
    %975 = %959.2;
    %976 = less(%964, %965) /* ty=Tensor[(98, 15), bool] */;
    %977 = subtract(%968, %969) /* ty=Tensor[(98, 15), uint32] */;
    %978 = %970.0;
    (%971, %972, -2.41885f /* ty=float32 */, meta[relay.Constant][74] /* ty=Tensor[(210), float64] */, %973, %974, meta[relay.Constant][75] /* ty=Tensor[(1815), int8] */, %975, %976, %977, %978)
  };
  %979(%var_4875) /* ty=(Tensor[(5, 15, 4), float32], Tensor[(585), int16], float32, Tensor[(210), float64], Tensor[(98, 15), float32], Tensor[(11, 15, 11), int8], Tensor[(1815), int8], Tensor[(2025), float32], Tensor[(98, 15), bool], Tensor[(98, 15), uint32], Tensor[(5, 15, 4), float64]) */
}

def @func_4390() -> (Tensor[(5, 15, 4), float32],) {
  @func_4388() /* ty=(Tensor[(5, 15, 4), float32],) */
}

def @func_5326(%var_5325: Tensor[(5, 15, 4), float32]) -> (Tensor[(5, 15, 4), bool],) {
  %987 = fn (%var_5298: Tensor[(5, 15, 4), float32]) -> (Tensor[(5, 15, 4), bool],) {
    %980 = @func_4815() /* ty=(Tensor[(5, 15, 4), float32],) */;
    %981 = %980.0;
    %982 = cast(%var_5298, dtype="bool") /* ty=Tensor[(5, 15, 4), bool] */;
    %983 = shape_of(%981, dtype="int32") /* ty=Tensor[(3), int32] */;
    %984 = cast(%981, dtype="bool") /* ty=Tensor[(5, 15, 4), bool] */;
    %985 = dyn.reshape(%982, %983, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %986 = logical_or(%984, %985) /* ty=Tensor[(5, 15, 4), bool] */;
    (%986,)
  };
  %987(%var_5325) /* ty=(Tensor[(5, 15, 4), bool],) */
}

def @func_3735() -> Tensor[(5, 15, 4), float64] {
  @func_3733() /* ty=Tensor[(5, 15, 4), float64] */
}

def @func_1251(%var_1246: float32, %var_1247: Tensor[(3, 6, 4), float32], %var_1248: Tensor[(585), int16], %var_1249: Tensor[(1470), float32], %var_1250: Tensor[(210), float64]) -> (Tensor[(3, 6, 4), float32], Tensor[(210, 7), int64], Tensor[(585), int16], Tensor[(5, 9, 16), float32], Tensor[(60, 12), float32], Tensor[(210), float64], Tensor[(1470), float32], Tensor[(6, 7, 5), int32]) {
  %1012 = fn (%var_1197: float32, %var_1198: Tensor[(3, 6, 4), float32], %var_1204: Tensor[(585), int16], %var_1205: Tensor[(1470), float32], %var_1211: Tensor[(210), float64]) -> (Tensor[(3, 6, 4), float32], Tensor[(210, 7), int64], Tensor[(585), int16], Tensor[(5, 9, 16), float32], Tensor[(60, 12), float32], Tensor[(210), float64], Tensor[(1470), float32], Tensor[(6, 7, 5), int32]) {
    %988 = cast(%var_1197, dtype="float32") /* ty=float32 */;
    %989 = cast(%var_1198, dtype="float32") /* ty=Tensor[(3, 6, 4), float32] */;
    %990 = cast(%var_1204, dtype="int16") /* ty=Tensor[(585), int16] */;
    %991 = cast(%var_1205, dtype="float32") /* ty=Tensor[(1470), float32] */;
    %992 = reshape(%990, newshape=[13, 3, 15]) /* ty=Tensor[(13, 3, 15), int16] */;
    %993 = reshape(%991, newshape=[210, 7]) /* ty=Tensor[(210, 7), float32] */;
    %994 = @func_477(%992, %993) /* ty=(Tensor[(13, 3, 15), bool], Tensor[(210), float64], Tensor[(210, 7), int64], Tensor[(6, 7, 5), int32]) */;
    %995 = cast(meta[relay.Constant][76] /* ty=Tensor[(60, 12), float32] */, dtype="float32") /* ty=Tensor[(60, 12), float32] */;
    %996 = cast(%var_1211, dtype="float64") /* ty=Tensor[(210), float64] */;
    %997 = cast(meta[relay.Constant][76] /* ty=Tensor[(60, 12), float32] */, dtype="float32") /* ty=Tensor[(60, 12), float32] */;
    %998 = reshape(%995, newshape=[5, 9, 16]) /* ty=Tensor[(5, 9, 16), float32] */;
    %999 = reshape(%996, newshape=[210]) /* ty=Tensor[(210), float64] */;
    %1000 = reshape(%997, newshape=[5, 9, 16]) /* ty=Tensor[(5, 9, 16), float32] */;
    %1001 = @func_908(%998, %999, %1000) /* ty=(Tensor[(5, 9, 16), float32], Tensor[(6, 7, 5), int32], Tensor[(210), float64], Tensor[(5, 9, 16), bool], Tensor[(6, 7, 5), int32]) */;
    %1002 = cast(%var_1205, dtype="float32") /* ty=Tensor[(1470), float32] */;
    %1003 = cast(%var_1211, dtype="float64") /* ty=Tensor[(210), float64] */;
    %1004 = cast(%var_1211, dtype="float64") /* ty=Tensor[(210), float64] */;
    %1005 = reshape(%1003, newshape=[6, 7, 5]) /* ty=Tensor[(6, 7, 5), float64] */;
    %1006 = reshape(%1004, newshape=[6, 7, 5]) /* ty=Tensor[(6, 7, 5), float64] */;
    %1007 = floor_mod(%988, %989) /* ty=Tensor[(3, 6, 4), float32] */;
    %1008 = %994.2;
    %1009 = %1001.0;
    %1010 = asinh(%1002) /* ty=Tensor[(1470), float32] */;
    %1011 = @func_317(%1005, %1006) /* ty=Tensor[(6, 7, 5), int32] */;
    (%1007, %1008, %var_1204, %1009, meta[relay.Constant][76] /* ty=Tensor[(60, 12), float32] */, %var_1211, %1010, %1011)
  };
  %1012(%var_1246, %var_1247, %var_1248, %var_1249, %var_1250) /* ty=(Tensor[(3, 6, 4), float32], Tensor[(210, 7), int64], Tensor[(585), int16], Tensor[(5, 9, 16), float32], Tensor[(60, 12), float32], Tensor[(210), float64], Tensor[(1470), float32], Tensor[(6, 7, 5), int32]) */
}

def @func_1289(%var_1269: Tensor[(15, 15, 9), float32]) -> (Tensor[(15, 15, 9), float32], Tensor[(13, 12, 2), int64], Tensor[(1, 210), float64]) {
  %1013 = cast(%var_1269, dtype="float32") /* ty=Tensor[(15, 15, 9), float32] */;
  %1014 = cast(meta[relay.Constant][77] /* ty=Tensor[(1, 210), float64] */, dtype="float64") /* ty=Tensor[(1, 210), float64] */;
  %1015 = reshape(%1014, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %1016 = @func_406(%1015) /* ty=(Tensor[(6, 7, 5), int32], Tensor[(210), float64], Tensor[(13, 12, 2), float32], Tensor[(13, 12, 2), int64], Tensor[(6, 7, 5), int32], Tensor[(6, 7, 5), int32]) */;
  %1017 = sinh(%1013) /* ty=Tensor[(15, 15, 9), float32] */;
  %1018 = %1016.3;
  (%1017, %1018, meta[relay.Constant][77] /* ty=Tensor[(1, 210), float64] */)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen207/build/output.py:2223: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen207/build/output.py:2228: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='cuda')

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen207/build/output.py", line 2249, in <module>
    mod = seq(mod)
  File "/home/yujunzhe/tvm/python/tvm/ir/transform.py", line 161, in __call__
    return _ffi_transform_api.RunPass(self, mod)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  10: TVMFuncCall
  9: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::transform::Pass, tvm::IRModule)>::AssignTypedLambda<tvm::transform::__mk_TVM8::{lambda(tvm::transform::Pass, tvm::IRModule)#1}>(tvm::transform::__mk_TVM8::{lambda(tvm::transform::Pass, tvm::IRModule)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  8: tvm::transform::Pass::operator()(tvm::IRModule) const
  7: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  6: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  5: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  4: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::LazyGradientInit()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::LazyGradientInit()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::relay::LazyGradientInit(tvm::RelayExpr const&, tvm::IRModule)
  1: tvm::relay::CheckFeature(tvm::RelayExpr const&, tvm::relay::FeatureSet const&)
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/src/relay/analysis/feature.cc", line 142
TVMError: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------
  Check failed: (dfs.is_subset_of(fs)) is false: #[version = "0.0.5"]
fn () -> ((Tensor[(10, 5, 13), float64], Tensor[(10, 5, 13), float64]), ()) {
  let %x: Tensor[(10, 5, 13), float64] = meta[relay.Constant][0] /* ty=Tensor[(10, 5, 13), float64] */;
  let %x1: Tensor[(10, 5, 13), float64] = zeros_like(%x) /* ty=Tensor[(10, 5, 13), float64] */;
  let %x2: Tensor[(10, 5, 13), float64] = meta[relay.Constant][1] /* ty=Tensor[(10, 5, 13), float64] */;
  let %x3: Tensor[(10, 5, 13), float64] = zeros_like(%x2) /* ty=Tensor[(10, 5, 13), float64] */;
  let %x4: (Tensor[(10, 5, 13), float64], Tensor[(10, 5, 13), float64]) = (%x, %x2);
  %0 = zeros(shape=[10, 5, 13], dtype="float64") /* ty=Tensor[(10, 5, 13), float64] */;
  %1 = zeros(shape=[10, 5, 13], dtype="float64") /* ty=Tensor[(10, 5, 13), float64] */;
  let %x5: (Tensor[(10, 5, 13), float64], Tensor[(10, 5, 13), float64]) = (%0, %1);
  %2 = ones(shape=[10, 5, 13], dtype="float64") /* ty=Tensor[(10, 5, 13), float64] */;
  %3 = ones(shape=[10, 5, 13], dtype="float64") /* ty=Tensor[(10, 5, 13), float64] */;
  %4 = (%2, %3);
  %5 = %4.0;
  %7 = (
    let %x6: Tensor[(10, 5, 13), float64] = add(%x1, %5) /* ty=Tensor[(10, 5, 13), float64] */;
    %6 = %4.1;
    let %x7: Tensor[(10, 5, 13), float64] = add(%x3, %6) /* ty=Tensor[(10, 5, 13), float64] */;
    ()
  );
  (%x4, %7)
}
/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
has unsupported feature: [fGraph, ]

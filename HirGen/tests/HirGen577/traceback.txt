==========mod==========
#[version = "0.0.5"]
def @func_4272(%var_4239: Tensor[(9, 8, 5), float64], %var_4240: Tensor[(9, 8, 5), float64]) -> (Tensor[(9, 8, 5), float64], Tensor[(9, 8, 5), bool], Tensor[(700), float32], Tensor[(16, 6, 3), int64], Tensor[(288), int64], Tensor[(5, 10, 14), float32]) {
  %0 = cast(%var_4240, dtype="float64") /* ty=Tensor[(9, 8, 5), float64] */;
  %1 = shape_of(%var_4239, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2 = cast(%var_4239, dtype="float64") /* ty=Tensor[(9, 8, 5), float64] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %4 = cast(%var_4239, dtype="bool") /* ty=Tensor[(9, 8, 5), bool] */;
  %5 = shape_of(%var_4240, dtype="int32") /* ty=Tensor[(3), int32] */;
  %6 = cast(%var_4240, dtype="bool") /* ty=Tensor[(9, 8, 5), bool] */;
  %7 = dyn.reshape(%4, %5, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %8 = cast(meta[relay.Constant][1] /* ty=Tensor[(288), int64] */, dtype="int64") /* ty=Tensor[(288), int64] */;
  %9 = reshape(%8, newshape=[16, 6, 3]) /* ty=Tensor[(16, 6, 3), int64] */;
  %10 = cast(meta[relay.Constant][0] /* ty=Tensor[(700), float32] */, dtype="float32") /* ty=Tensor[(700), float32] */;
  %11 = cast(meta[relay.Constant][0] /* ty=Tensor[(700), float32] */, dtype="float32") /* ty=Tensor[(700), float32] */;
  %12 = reshape(%10, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), float32] */;
  %13 = reshape(%11, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), float32] */;
  %14 = @func_2415(%12, %13) /* ty=(Tensor[(5, 10, 14), bool],) */;
  %15 = %14.0;
  %16 = cast(%15, dtype="float32") /* ty=Tensor[(5, 10, 14), float32] */;
  %17 = multiply(%2, %3) /* ty=Tensor[(9, 8, 5), float64] */;
  %18 = less_equal(%6, %7) /* ty=Tensor[(9, 8, 5), bool] */;
  %19 = @func_21(%9) /* ty=Tensor[(16, 6, 3), int64] */;
  %20 = sinh(%16) /* ty=Tensor[(5, 10, 14), float32] */;
  (%17, %18, meta[relay.Constant][0] /* ty=Tensor[(700), float32] */, %19, meta[relay.Constant][1] /* ty=Tensor[(288), int64] */, %20)
}

def @func_8532(%var_8517: Tensor[(6, 9, 9), float64]) -> (Tensor[(6, 9, 9), float64], Tensor[(6, 9, 9), bool]) {
  %21 = cast(%var_8517, dtype="float64") /* ty=Tensor[(6, 9, 9), float64] */;
  %22 = cast(meta[relay.Constant][2] /* ty=Tensor[(6, 9, 9), float64] */, dtype="bool") /* ty=Tensor[(6, 9, 9), bool] */;
  %23 = shape_of(%var_8517, dtype="int32") /* ty=Tensor[(3), int32] */;
  %24 = cast(%var_8517, dtype="bool") /* ty=Tensor[(6, 9, 9), bool] */;
  %25 = dyn.reshape(%22, %23, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %26 = atanh(%21) /* ty=Tensor[(6, 9, 9), float64] */;
  %27 = less_equal(%24, %25) /* ty=Tensor[(6, 9, 9), bool] */;
  (%26, %27)
}

def @func_8747() -> Tensor[(7, 2, 15), float32] {
  @func_7115() /* ty=Tensor[(7, 2, 15), float32] */
}

def @func_10305() -> Tensor[(700), float32] {
  %28 = @func_8421() /* ty=(Tensor[(7, 2, 15), int64], Tensor[(5, 10, 14), bool], Tensor[(700), float32]) */;
  %29 = %28.2;
  %30 = cast(%29, dtype="float32") /* ty=Tensor[(700), float32] */;
  asin(%30) /* ty=Tensor[(700), float32] */
}

def @func_4640(%var_4630: Tensor[(16, 3, 6), float64]) -> (Tensor[(16, 3, 6), float64],) {
  %31 = cast(%var_4630, dtype="float64") /* ty=Tensor[(16, 3, 6), float64] */;
  %32 = exp(%31) /* ty=Tensor[(16, 3, 6), float64] */;
  (%32,)
}

def @func_12097(%var_12066: Tensor[(7, 2, 15), float32], %var_12075: Tensor[(1144), float64], %var_12076: Tensor[(560), int16]) -> (Tensor[(7, 2, 15), bool], Tensor[(280, 2), float32], Tensor[(1144), float64], Tensor[(560), int16], Tensor[(7, 2, 15), float32]) {
  %33 = @func_7506() /* ty=(Tensor[(7, 2, 15), float32], Tensor[(7, 2, 15), float32]) */;
  %34 = %33.1;
  %35 = cast(%var_12066, dtype="bool") /* ty=Tensor[(7, 2, 15), bool] */;
  %36 = shape_of(%34, dtype="int32") /* ty=Tensor[(3), int32] */;
  %37 = cast(%34, dtype="bool") /* ty=Tensor[(7, 2, 15), bool] */;
  %38 = dyn.reshape(%35, %36, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %39 = cast(%var_12075, dtype="float64") /* ty=Tensor[(1144), float64] */;
  %40 = cast(%var_12076, dtype="int16") /* ty=Tensor[(560), int16] */;
  %41 = reshape(%39, newshape=[1144]) /* ty=Tensor[(1144), float64] */;
  %42 = reshape(%40, newshape=[280, 2]) /* ty=Tensor[(280, 2), int16] */;
  %43 = @func_11099(%41, %42) /* ty=(Tensor[(7, 2, 15), float32], Tensor[(13, 11, 8), float64], Tensor[(1144), float64], Tensor[(11, 11, 3), float32], Tensor[(363, 1), float32], Tensor[(280, 2), float32]) */;
  %44 = logical_and(%37, %38) /* ty=Tensor[(7, 2, 15), bool] */;
  %45 = %43.5;
  %46 = @func_8437() /* ty=Tensor[(7, 2, 15), float32] */;
  (%44, %45, %var_12075, %var_12076, %46)
}

def @func_11293() -> (Tensor[(9, 3, 10), float64],) {
  %47 = @func_10907() /* ty=Tensor[(9, 3, 10), float64] */;
  (%47,)
}

def @func_10887(%var_10877: Tensor[(405), float32], %var_10878: Tensor[(24, 2), int32]) -> (Tensor[(7, 2, 15), float32], Tensor[(468), float32], Tensor[(405), float32], Tensor[(24, 2), int32]) {
  %48 = cast(%var_10877, dtype="float32") /* ty=Tensor[(405), float32] */;
  %49 = cast(%var_10878, dtype="int32") /* ty=Tensor[(24, 2), int32] */;
  %50 = reshape(%48, newshape=[135, 3]) /* ty=Tensor[(135, 3), float32] */;
  %51 = reshape(%49, newshape=[48]) /* ty=Tensor[(48), int32] */;
  %52 = @func_10640(%50, %51) /* ty=(Tensor[(8, 36), int64], Tensor[(1352), float64], Tensor[(135, 3), float32], Tensor[(8, 36), int64], Tensor[(48), int32], Tensor[(4, 13, 9), float32], Tensor[(468), float32], Tensor[(7, 2, 15), float64], Tensor[(13, 11, 8), float64], Tensor[(1144), float64]) */;
  %53 = @func_8291() /* ty=Tensor[(7, 2, 15), float32] */;
  %54 = %52.6;
  (%53, %54, %var_10877, %var_10878)
}

def @func_11230(%var_11157: Tensor[(98, 6), uint8], %var_11215: Tensor[(98, 6), uint8]) -> (Tensor[(7, 2, 15), float32], Tensor[(7, 2, 15), float32], Tensor[(7, 2, 15), float32], Tensor[(7, 2, 15), int64], Tensor[(98, 6), bool]) {
  %55 = @func_9488() /* ty=(Tensor[(7, 2, 15), float32], Tensor[(9, 3, 10), float64], Tensor[(13, 15, 15), int64], Tensor[(975, 3), int64]) */;
  %56 = cast(%var_11157, dtype="uint8") /* ty=Tensor[(98, 6), uint8] */;
  %57 = reshape(%56, newshape=[588]) /* ty=Tensor[(588), uint8] */;
  %58 = @func_7556(%57) /* ty=(Tensor[(7, 2, 15), float32], Tensor[(15, 8, 7), uint32], Tensor[(420, 2), uint32], Tensor[(6, 14, 7), bool], Tensor[(588), uint8], Tensor[(135, 3), float32], Tensor[(48), int32]) */;
  %59 = @func_8222() /* ty=(Tensor[(7, 2, 15), int64],) */;
  %60 = cast(%var_11215, dtype="bool") /* ty=Tensor[(98, 6), bool] */;
  %61 = shape_of(%var_11157, dtype="int32") /* ty=Tensor[(2), int32] */;
  %62 = cast(%var_11157, dtype="bool") /* ty=Tensor[(98, 6), bool] */;
  %63 = dyn.reshape(%60, %61, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %64 = %55.0;
  %65 = %58.0;
  %66 = @func_8291() /* ty=Tensor[(7, 2, 15), float32] */;
  %67 = %59.0;
  %68 = not_equal(%62, %63) /* ty=Tensor[(98, 6), bool] */;
  (%64, %65, %66, %67, %68)
}

def @func_12000(%var_11984: Tensor[(48), int32], %var_11988: Tensor[(405), float32]) -> (Tensor[(6, 12, 15), float32], Tensor[(288), int64], Tensor[(48), int32], Tensor[(1, 16, 16), float32], Tensor[(700), float32], Tensor[(405), float32]) {
  %69 = @func_10463() /* ty=(Tensor[(7, 2, 15), float32], Tensor[(6, 12, 15), float32], Tensor[(1080), float32]) */;
  %70 = cast(%var_11984, dtype="int32") /* ty=Tensor[(48), int32] */;
  %71 = reshape(%70, newshape=[48]) /* ty=Tensor[(48), int32] */;
  %72 = @func_8941(%71) /* ty=(Tensor[(7, 2, 15), float32], Tensor[(8, 36), int64], Tensor[(1680), int32], Tensor[(405), float32], Tensor[(288), int64], Tensor[(48), int32]) */;
  %73 = cast(meta[relay.Constant][3] /* ty=Tensor[(700), float32] */, dtype="float32") /* ty=Tensor[(700), float32] */;
  %74 = cast(%var_11988, dtype="float32") /* ty=Tensor[(405), float32] */;
  %75 = cast(%var_11984, dtype="int32") /* ty=Tensor[(48), int32] */;
  %76 = reshape(%73, newshape=[700]) /* ty=Tensor[(700), float32] */;
  %77 = reshape(%74, newshape=[1, 405]) /* ty=Tensor[(1, 405), float32] */;
  %78 = reshape(%75, newshape=[48]) /* ty=Tensor[(48), int32] */;
  %79 = @func_3901(%76, %77, %78) /* ty=(Tensor[(1, 16, 16), float32], Tensor[(5, 10, 14), bool], Tensor[(700), float32], Tensor[(8, 13, 13), float64], Tensor[(26, 52), float64], Tensor[(1, 405), float32], Tensor[(288), int64], Tensor[(48), int32]) */;
  %80 = %69.1;
  %81 = %72.4;
  %82 = %79.0;
  (%80, %81, %var_11984, %82, meta[relay.Constant][3] /* ty=Tensor[(700), float32] */, %var_11988)
}

def @func_5420(%var_5415: Tensor[(16, 5, 12), float32]) -> Tensor[(16, 5, 12), float32] {
  %83 = cast(%var_5415, dtype="float32") /* ty=Tensor[(16, 5, 12), float32] */;
  acos(%83) /* ty=Tensor[(16, 5, 12), float32] */
}

def @func_6569(%var_6564: Tensor[(13, 15, 15), int64], %var_6565: Tensor[(13, 15, 15), int64]) -> (Tensor[(13, 15, 15), int64],) {
  %84 = cast(%var_6565, dtype="int64") /* ty=Tensor[(13, 15, 15), int64] */;
  %85 = shape_of(%var_6564, dtype="int32") /* ty=Tensor[(3), int32] */;
  %86 = cast(%var_6564, dtype="int64") /* ty=Tensor[(13, 15, 15), int64] */;
  %87 = dyn.reshape(%84, %85, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %88 = right_shift(%86, %87) /* ty=Tensor[(13, 15, 15), int64] */;
  (%88,)
}

def @func_4857(%var_4853: Tensor[(5, 9, 15), bool]) -> (Tensor[(5, 9, 15), bool],) {
  %89 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %90 = cast(%var_4853, dtype="bool") /* ty=Tensor[(5, 9, 15), bool] */;
  %91 = logical_and(%89, %90) /* ty=Tensor[(5, 9, 15), bool] */;
  (%91,)
}

def @func_7556(%var_7541: Tensor[(588), uint8]) -> (Tensor[(7, 2, 15), float32], Tensor[(15, 8, 7), uint32], Tensor[(420, 2), uint32], Tensor[(6, 14, 7), bool], Tensor[(588), uint8], Tensor[(135, 3), float32], Tensor[(48), int32]) {
  %92 = @func_7331() /* ty=(Tensor[(7, 2, 15), float32],) */;
  %93 = cast(meta[relay.Constant][4] /* ty=Tensor[(420, 2), uint32] */, dtype="uint32") /* ty=Tensor[(420, 2), uint32] */;
  %94 = cast(meta[relay.Constant][4] /* ty=Tensor[(420, 2), uint32] */, dtype="uint32") /* ty=Tensor[(420, 2), uint32] */;
  %95 = reshape(%93, newshape=[15, 8, 7]) /* ty=Tensor[(15, 8, 7), uint32] */;
  %96 = reshape(%94, newshape=[15, 8, 7]) /* ty=Tensor[(15, 8, 7), uint32] */;
  %97 = @func_2593(%95, %96) /* ty=(Tensor[(15, 8, 7), uint32],) */;
  %98 = cast(%var_7541, dtype="uint8") /* ty=Tensor[(588), uint8] */;
  %99 = cast(%var_7541, dtype="uint8") /* ty=Tensor[(588), uint8] */;
  %100 = cast(%var_7541, dtype="uint8") /* ty=Tensor[(588), uint8] */;
  %101 = cast(meta[relay.Constant][5] /* ty=Tensor[(135, 3), float32] */, dtype="float32") /* ty=Tensor[(135, 3), float32] */;
  %102 = cast(meta[relay.Constant][6] /* ty=Tensor[(48), int32] */, dtype="int32") /* ty=Tensor[(48), int32] */;
  %103 = reshape(%98, newshape=[6, 14, 7]) /* ty=Tensor[(6, 14, 7), uint8] */;
  %104 = reshape(%99, newshape=[6, 14, 7]) /* ty=Tensor[(6, 14, 7), uint8] */;
  %105 = reshape(%100, newshape=[6, 14, 7]) /* ty=Tensor[(6, 14, 7), uint8] */;
  %106 = reshape(%101, newshape=[405]) /* ty=Tensor[(405), float32] */;
  %107 = reshape(%102, newshape=[48]) /* ty=Tensor[(48), int32] */;
  %108 = @func_1762(%103, %104, %105, %106, %107) /* ty=(Tensor[(6, 14, 7), bool], Tensor[(6, 14, 7), uint8], Tensor[(16, 6, 3), int64], Tensor[(405), float32], Tensor[(288), int64], Tensor[(48), int32]) */;
  %109 = %92.0;
  %110 = %97.0;
  %111 = %108.0;
  (%109, %110, meta[relay.Constant][4] /* ty=Tensor[(420, 2), uint32] */, %111, %var_7541, meta[relay.Constant][5] /* ty=Tensor[(135, 3), float32] */, meta[relay.Constant][6] /* ty=Tensor[(48), int32] */)
}

def @func_11768() -> Tensor[(7, 2, 15), float32] {
  %112 = @func_7238() /* ty=(Tensor[(7, 2, 15), float32],) */;
  %112.0
}

def @func_10102() -> Tensor[(7, 2, 15), int64] {
  %113 = @func_8421() /* ty=(Tensor[(7, 2, 15), int64], Tensor[(5, 10, 14), bool], Tensor[(700), float32]) */;
  %113.0
}

def @func_4704(%var_4689: Tensor[(15, 10, 11), float64]) -> (Tensor[(15, 10, 11), float64], Tensor[(16, 6, 3), int64], Tensor[(2, 144), int64]) {
  %114 = cast(%var_4689, dtype="float64") /* ty=Tensor[(15, 10, 11), float64] */;
  %115 = cast(meta[relay.Constant][7] /* ty=Tensor[(2, 144), int64] */, dtype="int64") /* ty=Tensor[(2, 144), int64] */;
  %116 = reshape(%115, newshape=[16, 6, 3]) /* ty=Tensor[(16, 6, 3), int64] */;
  %117 = atan(%114) /* ty=Tensor[(15, 10, 11), float64] */;
  %118 = @func_21(%116) /* ty=Tensor[(16, 6, 3), int64] */;
  (%117, %118, meta[relay.Constant][7] /* ty=Tensor[(2, 144), int64] */)
}

def @func_6026(%var_5956: Tensor[(405), float32], %var_5957: Tensor[(144, 2), int64], %var_5958: Tensor[(48), int32], %var_6015: Tensor[(1, 468), float32]) -> (Tensor[(8, 36), int64], Tensor[(12, 140), int32], Tensor[(405), float32], Tensor[(144, 2), int64], Tensor[(48), int32], Tensor[(16, 5, 12), float32], Tensor[(960), float32], Tensor[(16, 11, ?), float32], Tensor[(4, 13, 9), float32], Tensor[(1, 468), float32], Tensor[(16, 11, ?), int16]) {
  %119 = cast(meta[relay.Constant][8] /* ty=Tensor[(12, 140), int32] */, dtype="int32") /* ty=Tensor[(12, 140), int32] */;
  %120 = cast(%var_5956, dtype="float32") /* ty=Tensor[(405), float32] */;
  %121 = cast(%var_5957, dtype="int64") /* ty=Tensor[(144, 2), int64] */;
  %122 = cast(%var_5958, dtype="int32") /* ty=Tensor[(48), int32] */;
  %123 = reshape(%119, newshape=[16, 7, 15]) /* ty=Tensor[(16, 7, 15), int32] */;
  %124 = reshape(%120, newshape=[405]) /* ty=Tensor[(405), float32] */;
  %125 = reshape(%121, newshape=[288]) /* ty=Tensor[(288), int64] */;
  %126 = reshape(%122, newshape=[2, 24]) /* ty=Tensor[(2, 24), int32] */;
  %127 = @func_2831(%123, %124, %125, %126) /* ty=(Tensor[(16, 7, 15), int32], Tensor[(16, 7, 15), bool], Tensor[(8, 36), int64], Tensor[(1352), float64], Tensor[(405), float32], Tensor[(288), int64], Tensor[(2, 24), int32]) */;
  %128 = cast(meta[relay.Constant][9] /* ty=Tensor[(960), float32] */, dtype="float32") /* ty=Tensor[(960), float32] */;
  %129 = reshape(%128, newshape=[16, 5, 12]) /* ty=Tensor[(16, 5, 12), float32] */;
  %130 = cast(meta[relay.Constant][10] /* ty=Tensor[(16, 11, 1), float32] */, dtype="float32") /* ty=Tensor[(16, 11, 1), float32] */;
  %131 = sinh(%130) /* ty=Tensor[(16, 11, 1), float32] */;
  %132 = cast(%131, dtype="float64") /* ty=Tensor[(16, 11, 1), float64] */;
  %133 = log(%132) /* ty=Tensor[(16, 11, 1), float64] */;
  %134 = cast(%133, dtype="float32") /* ty=Tensor[(16, 11, 1), float32] */;
  %135 = acos(%134) /* ty=Tensor[(16, 11, 1), float32] */;
  %136 = cast(%135, dtype="float64") /* ty=Tensor[(16, 11, 1), float64] */;
  %137 = asinh(%136) /* ty=Tensor[(16, 11, 1), float64] */;
  %138 = cast(%137, dtype="float32") /* ty=Tensor[(16, 11, 1), float32] */;
  %139 = exp(%138) /* ty=Tensor[(16, 11, 1), float32] */;
  %140 = cast(%133, dtype="int64") /* ty=Tensor[(16, 11, 1), int64] */;
  %141 = shape_of(%135, dtype="int32") /* ty=Tensor[(3), int32] */;
  %142 = cast(%135, dtype="int64") /* ty=Tensor[(16, 11, 1), int64] */;
  %143 = dyn.reshape(%140, %141, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %144 = maximum(%142, %143) /* ty=Tensor[(16, 11, ?), int64] */;
  %145 = cast(%144, dtype="float32") /* ty=Tensor[(16, 11, ?), float32] */;
  %146 = shape_of(%139, dtype="int32") /* ty=Tensor[(3), int32] */;
  %147 = cast(%139, dtype="float32") /* ty=Tensor[(16, 11, 1), float32] */;
  %148 = dyn.reshape(%145, %146, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %149 = cast(%var_6015, dtype="float32") /* ty=Tensor[(1, 468), float32] */;
  %150 = reshape(%149, newshape=[4, 13, 9]) /* ty=Tensor[(4, 13, 9), float32] */;
  %151 = cast(%139, dtype="int16") /* ty=Tensor[(16, 11, 1), int16] */;
  %152 = shape_of(%137, dtype="int32") /* ty=Tensor[(3), int32] */;
  %153 = cast(%137, dtype="int16") /* ty=Tensor[(16, 11, 1), int16] */;
  %154 = dyn.reshape(%151, %152, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %155 = %127.2;
  %156 = @func_5420(%129) /* ty=Tensor[(16, 5, 12), float32] */;
  %157 = multiply(%147, %148) /* ty=Tensor[(16, 11, ?), float32] */;
  %158 = @func_2688(%150) /* ty=Tensor[(4, 13, 9), float32] */;
  %159 = bitwise_and(%153, %154) /* ty=Tensor[(16, 11, ?), int16] */;
  (%155, meta[relay.Constant][8] /* ty=Tensor[(12, 140), int32] */, %var_5956, %var_5957, %var_5958, %156, meta[relay.Constant][9] /* ty=Tensor[(960), float32] */, %157, %158, %var_6015, %159)
}

def @func_2415(%var_2392: Tensor[(5, 10, 14), float32], %var_2406: Tensor[(5, 10, 14), float32]) -> (Tensor[(5, 10, 14), bool],) {
  %160 = cast(%var_2392, dtype="float32") /* ty=Tensor[(5, 10, 14), float32] */;
  %161 = log10(%160) /* ty=Tensor[(5, 10, 14), float32] */;
  %162 = cast(%var_2406, dtype="bool") /* ty=Tensor[(5, 10, 14), bool] */;
  %163 = shape_of(%161, dtype="int32") /* ty=Tensor[(3), int32] */;
  %164 = cast(%161, dtype="bool") /* ty=Tensor[(5, 10, 14), bool] */;
  %165 = dyn.reshape(%162, %163, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %166 = logical_or(%164, %165) /* ty=Tensor[(5, 10, 14), bool] */;
  (%166,)
}

def @func_11861(%var_11810: Tensor[(700), float32]) -> (Tensor[(9, 3, 10), float64], Tensor[(700), float32], Tensor[(48), int32], Tensor[(7, 2, 15), float32], Tensor[(45, 9), bool], Tensor[(7, 2, 15), float32]) {
  %167 = @func_11293() /* ty=(Tensor[(9, 3, 10), float64],) */;
  %168 = cast(%var_11810, dtype="float32") /* ty=Tensor[(700), float32] */;
  %169 = cast(meta[relay.Constant][12] /* ty=Tensor[(45, 9), float32] */, dtype="float32") /* ty=Tensor[(45, 9), float32] */;
  %170 = cast(meta[relay.Constant][11] /* ty=Tensor[(48), int32] */, dtype="int32") /* ty=Tensor[(48), int32] */;
  %171 = reshape(%168, newshape=[700]) /* ty=Tensor[(700), float32] */;
  %172 = reshape(%169, newshape=[1, 405]) /* ty=Tensor[(1, 405), float32] */;
  %173 = reshape(%170, newshape=[48]) /* ty=Tensor[(48), int32] */;
  %174 = @func_3901(%171, %172, %173) /* ty=(Tensor[(1, 16, 16), float32], Tensor[(5, 10, 14), bool], Tensor[(700), float32], Tensor[(8, 13, 13), float64], Tensor[(26, 52), float64], Tensor[(1, 405), float32], Tensor[(288), int64], Tensor[(48), int32]) */;
  %175 = %174.5;
  %176 = cast(%175, dtype="uint16") /* ty=Tensor[(1, 405), uint16] */;
  %177 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(45, 9), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %178 = cast(meta[relay.Constant][12] /* ty=Tensor[(45, 9), float32] */, dtype="uint16") /* ty=Tensor[(45, 9), uint16] */;
  %179 = dyn.reshape(%176, %177, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %180 = bitwise_xor(%178, %179) /* ty=Tensor[(45, 9), uint16] */;
  %181 = cast(meta[relay.Constant][12] /* ty=Tensor[(45, 9), float32] */, dtype="bool") /* ty=Tensor[(45, 9), bool] */;
  %182 = shape_of(%180, dtype="int32") /* ty=Tensor[(2), int32] */;
  %183 = cast(%180, dtype="bool") /* ty=Tensor[(45, 9), bool] */;
  %184 = dyn.reshape(%181, %182, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %185 = @func_8015() /* ty=(Tensor[(7, 2, 15), float32],) */;
  %186 = %167.0;
  %187 = @func_8702() /* ty=Tensor[(7, 2, 15), float32] */;
  %188 = equal(%183, %184) /* ty=Tensor[(45, 9), bool] */;
  %189 = %185.0;
  (%186, %var_11810, meta[relay.Constant][11] /* ty=Tensor[(48), int32] */, %187, %188, %189)
}

def @func_1608(%var_1583: Tensor[(468), float32]) -> (Tensor[(9, 13, 15), float32], Tensor[(16, 6, 3), int64], Tensor[(8, 36), int64], Tensor[(13, 6, 6), bool], Tensor[(468), float32], Tensor[(9, 13, 15), float32]) {
  %190 = cast(-7.65094f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %191 = cast(meta[relay.Constant][13] /* ty=Tensor[(9, 13, 15), float32] */, dtype="float32") /* ty=Tensor[(9, 13, 15), float32] */;
  %192 = cast(meta[relay.Constant][14] /* ty=Tensor[(8, 36), int64] */, dtype="int64") /* ty=Tensor[(8, 36), int64] */;
  %193 = reshape(%192, newshape=[16, 6, 3]) /* ty=Tensor[(16, 6, 3), int64] */;
  %194 = cast(%var_1583, dtype="float32") /* ty=Tensor[(468), float32] */;
  %195 = reshape(%194, newshape=[13, 6, 6]) /* ty=Tensor[(13, 6, 6), float32] */;
  %196 = @func_1124(%195) /* ty=(Tensor[(13, 6, 6), bool],) */;
  %197 = cast(meta[relay.Constant][13] /* ty=Tensor[(9, 13, 15), float32] */, dtype="float32") /* ty=Tensor[(9, 13, 15), float32] */;
  %198 = floor_divide(%190, %191) /* ty=Tensor[(9, 13, 15), float32] */;
  %199 = @func_21(%193) /* ty=Tensor[(16, 6, 3), int64] */;
  %200 = %196.0;
  %201 = sin(%197) /* ty=Tensor[(9, 13, 15), float32] */;
  (%198, %199, meta[relay.Constant][14] /* ty=Tensor[(8, 36), int64] */, %200, %var_1583, %201)
}

def @func_3694(%var_3683: Tensor[(10, 9, 1), float32]) -> Tensor[(10, 9, 1), float32] {
  %202 = cast(%var_3683, dtype="float32") /* ty=Tensor[(10, 9, 1), float32] */;
  asinh(%202) /* ty=Tensor[(10, 9, 1), float32] */
}

def @func_8385(%var_8375: Tensor[(13, 11, 8), float64]) -> Tensor[(13, 11, 8), float64] {
  %203 = cast(%var_8375, dtype="float64") /* ty=Tensor[(13, 11, 8), float64] */;
  sinh(%203) /* ty=Tensor[(13, 11, 8), float64] */
}

def @func_9876() -> (Tensor[(7, 2, 15), float32], Tensor[(7, 2, 15), float32], Tensor[(16, 5, 13), float32], Tensor[(1040), float32]) {
  %204 = @func_7238() /* ty=(Tensor[(7, 2, 15), float32],) */;
  %205 = cast(meta[relay.Constant][15] /* ty=Tensor[(1040), float32] */, dtype="float32") /* ty=Tensor[(1040), float32] */;
  %206 = cast(meta[relay.Constant][15] /* ty=Tensor[(1040), float32] */, dtype="float32") /* ty=Tensor[(1040), float32] */;
  %207 = reshape(%205, newshape=[16, 5, 13]) /* ty=Tensor[(16, 5, 13), float32] */;
  %208 = reshape(%206, newshape=[16, 5, 13]) /* ty=Tensor[(16, 5, 13), float32] */;
  %209 = @func_5702(%207, %208) /* ty=(Tensor[(16, 5, 13), float32],) */;
  %210 = %204.0;
  %211 = @func_8291() /* ty=Tensor[(7, 2, 15), float32] */;
  %212 = %209.0;
  (%210, %211, %212, meta[relay.Constant][15] /* ty=Tensor[(1040), float32] */)
}

def @func_10808() -> Tensor[(7, 2, 15), float32] {
  %213 = @func_7506() /* ty=(Tensor[(7, 2, 15), float32], Tensor[(7, 2, 15), float32]) */;
  %213.0
}

def @func_7649(%var_7637: Tensor[(588), uint8]) -> (Tensor[(7, 2, 15), float64], Tensor[(48), int32], Tensor[(588), uint8], Tensor[(7, 2, 15), bool]) {
  %214 = @func_7506() /* ty=(Tensor[(7, 2, 15), float32], Tensor[(7, 2, 15), float32]) */;
  %215 = %214.0;
  %216 = cast(%215, dtype="float64") /* ty=Tensor[(7, 2, 15), float64] */;
  %217 = acos(%216) /* ty=Tensor[(7, 2, 15), float64] */;
  %218 = cast(%217, dtype="float64") /* ty=Tensor[(7, 2, 15), float64] */;
  %219 = shape_of(%215, dtype="int32") /* ty=Tensor[(3), int32] */;
  %220 = cast(%215, dtype="float64") /* ty=Tensor[(7, 2, 15), float64] */;
  %221 = dyn.reshape(%218, %219, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %222 = cast(%var_7637, dtype="uint8") /* ty=Tensor[(588), uint8] */;
  %223 = reshape(%222, newshape=[588]) /* ty=Tensor[(588), uint8] */;
  %224 = @func_7556(%223) /* ty=(Tensor[(7, 2, 15), float32], Tensor[(15, 8, 7), uint32], Tensor[(420, 2), uint32], Tensor[(6, 14, 7), bool], Tensor[(588), uint8], Tensor[(135, 3), float32], Tensor[(48), int32]) */;
  %225 = cast(%215, dtype="bool") /* ty=Tensor[(7, 2, 15), bool] */;
  %226 = shape_of(%217, dtype="int32") /* ty=Tensor[(3), int32] */;
  %227 = cast(%217, dtype="bool") /* ty=Tensor[(7, 2, 15), bool] */;
  %228 = dyn.reshape(%225, %226, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %229 = floor_divide(%220, %221) /* ty=Tensor[(7, 2, 15), float64] */;
  %230 = %224.6;
  %231 = greater(%227, %228) /* ty=Tensor[(7, 2, 15), bool] */;
  (%229, %230, %var_7637, %231)
}

def @func_8291() -> Tensor[(7, 2, 15), float32] {
  %232 = @func_7331() /* ty=(Tensor[(7, 2, 15), float32],) */;
  %232.0
}

def @func_7506() -> (Tensor[(7, 2, 15), float32], Tensor[(7, 2, 15), float32]) {
  %233 = @func_7259() /* ty=Tensor[(7, 2, 15), float32] */;
  %234 = @func_7115() /* ty=Tensor[(7, 2, 15), float32] */;
  (%233, %234)
}

def @func_10025(%var_10004: Tensor[(468), float32]) -> (Tensor[(1040), float32], Tensor[(4, 13, 9), float32], Tensor[(468), float32], Tensor[(13, 6, 6), bool], Tensor[(48), int32], Tensor[(588), uint8]) {
  %235 = @func_9876() /* ty=(Tensor[(7, 2, 15), float32], Tensor[(7, 2, 15), float32], Tensor[(16, 5, 13), float32], Tensor[(1040), float32]) */;
  %236 = cast(%var_10004, dtype="float32") /* ty=Tensor[(468), float32] */;
  %237 = reshape(%236, newshape=[4, 13, 9]) /* ty=Tensor[(4, 13, 9), float32] */;
  %238 = cast(%var_10004, dtype="float32") /* ty=Tensor[(468), float32] */;
  %239 = reshape(%238, newshape=[13, 6, 6]) /* ty=Tensor[(13, 6, 6), float32] */;
  %240 = @func_1124(%239) /* ty=(Tensor[(13, 6, 6), bool],) */;
  %241 = cast(meta[relay.Constant][16] /* ty=Tensor[(588), uint8] */, dtype="uint8") /* ty=Tensor[(588), uint8] */;
  %242 = reshape(%241, newshape=[588]) /* ty=Tensor[(588), uint8] */;
  %243 = @func_7649(%242) /* ty=(Tensor[(7, 2, 15), float64], Tensor[(48), int32], Tensor[(588), uint8], Tensor[(7, 2, 15), bool]) */;
  %244 = %235.3;
  %245 = @func_2688(%237) /* ty=Tensor[(4, 13, 9), float32] */;
  %246 = %240.0;
  %247 = %243.1;
  (%244, %245, %var_10004, %246, %247, meta[relay.Constant][16] /* ty=Tensor[(588), uint8] */)
}

def @func_6491(%var_6474: int8, %var_6475: Tensor[(1, 9), int8]) -> (Tensor[(1, 9), int8], Tensor[(4, 13, 9), float32], Tensor[(3, 156), float32]) {
  %248 = cast(%var_6474, dtype="int8") /* ty=int8 */;
  %249 = cast(%var_6475, dtype="int8") /* ty=Tensor[(1, 9), int8] */;
  %250 = cast(meta[relay.Constant][17] /* ty=Tensor[(3, 156), float32] */, dtype="float32") /* ty=Tensor[(3, 156), float32] */;
  %251 = reshape(%250, newshape=[4, 13, 9]) /* ty=Tensor[(4, 13, 9), float32] */;
  %252 = subtract(%248, %249) /* ty=Tensor[(1, 9), int8] */;
  %253 = @func_2688(%251) /* ty=Tensor[(4, 13, 9), float32] */;
  (%252, %253, meta[relay.Constant][17] /* ty=Tensor[(3, 156), float32] */)
}

def @func_9825(%var_9817: Tensor[(40, 26), float32], %var_9821: Tensor[(405), float32]) -> (Tensor[(7, 2, 15), int64], Tensor[(7, 2, 15), float32], Tensor[(40, 26), float32], Tensor[(1680), int32], Tensor[(1680), int32], Tensor[(405), float32], Tensor[(288), int64], Tensor[(48), int32]) {
  %254 = @func_8222() /* ty=(Tensor[(7, 2, 15), int64],) */;
  %255 = cast(%var_9817, dtype="float32") /* ty=Tensor[(40, 26), float32] */;
  %256 = reshape(%255, newshape=[1, 1040]) /* ty=Tensor[(1, 1040), float32] */;
  %257 = @func_8359(%256) /* ty=(Tensor[(3, 12, 10), float32], Tensor[(7, 2, 15), float32], Tensor[(10, 9, 1), float32], Tensor[(90), float32], Tensor[(16, 5, 13), float32], Tensor[(1, 1040), float32], Tensor[(7, 2, 15), int64]) */;
  %258 = cast(meta[relay.Constant][18] /* ty=Tensor[(1680), int32] */, dtype="int32") /* ty=Tensor[(1680), int32] */;
  %259 = cast(%var_9821, dtype="float32") /* ty=Tensor[(405), float32] */;
  %260 = cast(meta[relay.Constant][19] /* ty=Tensor[(288), int64] */, dtype="int64") /* ty=Tensor[(288), int64] */;
  %261 = cast(meta[relay.Constant][20] /* ty=Tensor[(48), int32] */, dtype="int32") /* ty=Tensor[(48), int32] */;
  %262 = reshape(%258, newshape=[1680]) /* ty=Tensor[(1680), int32] */;
  %263 = reshape(%259, newshape=[1, 405]) /* ty=Tensor[(1, 405), float32] */;
  %264 = reshape(%260, newshape=[288]) /* ty=Tensor[(288), int64] */;
  %265 = reshape(%261, newshape=[48]) /* ty=Tensor[(48), int32] */;
  %266 = @func_9384(%262, %263, %264, %265) /* ty=(Tensor[(7, 2, 15), float32], Tensor[(288), int64], Tensor[(1680), int32], Tensor[(1, 405), float32], Tensor[(288), int64], Tensor[(48), int32]) */;
  %267 = %254.0;
  %268 = %257.1;
  %269 = %266.2;
  (%267, %268, %var_9817, %269, meta[relay.Constant][18] /* ty=Tensor[(1680), int32] */, %var_9821, meta[relay.Constant][19] /* ty=Tensor[(288), int64] */, meta[relay.Constant][20] /* ty=Tensor[(48), int32] */)
}

def @func_10640(%var_10602: Tensor[(135, 3), float32], %var_10604: Tensor[(48), int32]) -> (Tensor[(8, 36), int64], Tensor[(1352), float64], Tensor[(135, 3), float32], Tensor[(8, 36), int64], Tensor[(48), int32], Tensor[(4, 13, 9), float32], Tensor[(468), float32], Tensor[(7, 2, 15), float64], Tensor[(13, 11, 8), float64], Tensor[(1144), float64]) {
  %270 = cast(meta[relay.Constant][21] /* ty=Tensor[(1352), float64] */, dtype="float64") /* ty=Tensor[(1352), float64] */;
  %271 = cast(%var_10602, dtype="float32") /* ty=Tensor[(135, 3), float32] */;
  %272 = cast(meta[relay.Constant][22] /* ty=Tensor[(8, 36), int64] */, dtype="int64") /* ty=Tensor[(8, 36), int64] */;
  %273 = cast(%var_10604, dtype="int32") /* ty=Tensor[(48), int32] */;
  %274 = reshape(%270, newshape=[8, 13, 13]) /* ty=Tensor[(8, 13, 13), float64] */;
  %275 = reshape(%271, newshape=[405]) /* ty=Tensor[(405), float32] */;
  %276 = reshape(%272, newshape=[8, 36]) /* ty=Tensor[(8, 36), int64] */;
  %277 = reshape(%273, newshape=[2, 24]) /* ty=Tensor[(2, 24), int32] */;
  %278 = @func_2100(%274, %275, %276, %277) /* ty=(Tensor[(8, 13, 13), float64], Tensor[(4, 4, 3), int16], Tensor[(405), float32], Tensor[(8, 36), int64], Tensor[(2, 24), int32], Tensor[(16, 6, 3), int64]) */;
  %279 = cast(meta[relay.Constant][23] /* ty=Tensor[(468), float32] */, dtype="float32") /* ty=Tensor[(468), float32] */;
  %280 = reshape(%279, newshape=[4, 13, 9]) /* ty=Tensor[(4, 13, 9), float32] */;
  %281 = @func_9876() /* ty=(Tensor[(7, 2, 15), float32], Tensor[(7, 2, 15), float32], Tensor[(16, 5, 13), float32], Tensor[(1040), float32]) */;
  %282 = %281.1;
  %283 = cast(%282, dtype="float64") /* ty=Tensor[(7, 2, 15), float64] */;
  %284 = log(%283) /* ty=Tensor[(7, 2, 15), float64] */;
  %285 = cast(%284, dtype="float64") /* ty=Tensor[(7, 2, 15), float64] */;
  %286 = cast(meta[relay.Constant][24] /* ty=Tensor[(1144), float64] */, dtype="float64") /* ty=Tensor[(1144), float64] */;
  %287 = reshape(%286, newshape=[13, 11, 8]) /* ty=Tensor[(13, 11, 8), float64] */;
  %288 = %278.3;
  %289 = @func_2688(%280) /* ty=Tensor[(4, 13, 9), float32] */;
  %290 = acosh(%285) /* ty=Tensor[(7, 2, 15), float64] */;
  %291 = @func_8385(%287) /* ty=Tensor[(13, 11, 8), float64] */;
  (%288, meta[relay.Constant][21] /* ty=Tensor[(1352), float64] */, %var_10602, meta[relay.Constant][22] /* ty=Tensor[(8, 36), int64] */, %var_10604, %289, meta[relay.Constant][23] /* ty=Tensor[(468), float32] */, %290, %291, meta[relay.Constant][24] /* ty=Tensor[(1144), float64] */)
}

def @func_10710() -> (Tensor[(7, 2, 15), float32],) {
  %292 = @func_7115() /* ty=Tensor[(7, 2, 15), float32] */;
  (%292,)
}

def @func_11723(%var_11696: Tensor[(9, 3, 10), float64], %var_11706: Tensor[(2, 144), int64]) -> (Tensor[(16, 6, 3), int64], Tensor[(2, 144), int64], Tensor[(7, 2, 15), float32], Tensor[(9, 3, 10), bool]) {
  %293 = cast(%var_11706, dtype="int64") /* ty=Tensor[(2, 144), int64] */;
  %294 = reshape(%293, newshape=[16, 6, 3]) /* ty=Tensor[(16, 6, 3), int64] */;
  %295 = @func_9296() /* ty=Tensor[(9, 3, 10), float64] */;
  %296 = cast(%295, dtype="float32") /* ty=Tensor[(9, 3, 10), float32] */;
  %297 = cosh(%296) /* ty=Tensor[(9, 3, 10), float32] */;
  %298 = cast(%var_11696, dtype="bool") /* ty=Tensor[(9, 3, 10), bool] */;
  %299 = shape_of(%295, dtype="int32") /* ty=Tensor[(3), int32] */;
  %300 = cast(%295, dtype="bool") /* ty=Tensor[(9, 3, 10), bool] */;
  %301 = dyn.reshape(%298, %299, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %302 = greater(%300, %301) /* ty=Tensor[(9, 3, 10), bool] */;
  %303 = cast(%302, dtype="bool") /* ty=Tensor[(9, 3, 10), bool] */;
  %304 = shape_of(%297, dtype="int32") /* ty=Tensor[(3), int32] */;
  %305 = cast(%297, dtype="bool") /* ty=Tensor[(9, 3, 10), bool] */;
  %306 = dyn.reshape(%303, %304, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %307 = @func_21(%294) /* ty=Tensor[(16, 6, 3), int64] */;
  %308 = @func_10149() /* ty=Tensor[(7, 2, 15), float32] */;
  %309 = less(%305, %306) /* ty=Tensor[(9, 3, 10), bool] */;
  (%307, %var_11706, %308, %309)
}

def @func_6582(%var_6579: Tensor[(16, 8, 5), float64]) -> Tensor[(16, 8, 5), float64] {
  %310 = cast(%var_6579, dtype="float64") /* ty=Tensor[(16, 8, 5), float64] */;
  acos(%310) /* ty=Tensor[(16, 8, 5), float64] */
}

def @func_7080(%var_7013: Tensor[(10, 1, 13), float32], %var_7039: Tensor[(1650), float64]) -> (Tensor[(13, 15, 15), int64], Tensor[(2925), int64], Tensor[(2, 144), int64], Tensor[(1650), float64], Tensor[(10, 1, 13), float64], Tensor[(8, 5, 7), float32], Tensor[(10, 28), float64]) {
  %311 = cast(meta[relay.Constant][25] /* ty=Tensor[(2925), int64] */, dtype="int64") /* ty=Tensor[(2925), int64] */;
  %312 = cast(meta[relay.Constant][25] /* ty=Tensor[(2925), int64] */, dtype="int64") /* ty=Tensor[(2925), int64] */;
  %313 = reshape(%311, newshape=[13, 15, 15]) /* ty=Tensor[(13, 15, 15), int64] */;
  %314 = reshape(%312, newshape=[13, 15, 15]) /* ty=Tensor[(13, 15, 15), int64] */;
  %315 = @func_6569(%313, %314) /* ty=(Tensor[(13, 15, 15), int64],) */;
  %316 = cast(%var_7039, dtype="float64") /* ty=Tensor[(1650), float64] */;
  %317 = reshape(%316, newshape=[15, 10, 11]) /* ty=Tensor[(15, 10, 11), float64] */;
  %318 = @func_4704(%317) /* ty=(Tensor[(15, 10, 11), float64], Tensor[(16, 6, 3), int64], Tensor[(2, 144), int64]) */;
  %319 = cast(%var_7013, dtype="float32") /* ty=Tensor[(10, 1, 13), float32] */;
  %320 = acos(%319) /* ty=Tensor[(10, 1, 13), float32] */;
  %321 = cast(%320, dtype="float64") /* ty=Tensor[(10, 1, 13), float64] */;
  %322 = cast(meta[relay.Constant][26] /* ty=Tensor[(10, 28), float64] */, dtype="float64") /* ty=Tensor[(10, 28), float64] */;
  %323 = reshape(%322, newshape=[8, 5, 7]) /* ty=Tensor[(8, 5, 7), float64] */;
  %324 = @func_5524(%323) /* ty=(Tensor[(8, 5, 7), int32], Tensor[(8, 5, 7), float32]) */;
  %325 = %315.0;
  %326 = %318.2;
  %327 = log10(%321) /* ty=Tensor[(10, 1, 13), float64] */;
  %328 = %324.1;
  (%325, meta[relay.Constant][25] /* ty=Tensor[(2925), int64] */, %326, %var_7039, %327, %328, meta[relay.Constant][26] /* ty=Tensor[(10, 28), float64] */)
}

def @func_9428() -> Tensor[(7, 2, 15), float32] {
  %329 = @func_7506() /* ty=(Tensor[(7, 2, 15), float32], Tensor[(7, 2, 15), float32]) */;
  %329.0
}

def @func_8317() -> Tensor[(7, 2, 15), float32] {
  %330 = @func_7331() /* ty=(Tensor[(7, 2, 15), float32],) */;
  %330.0
}

def @func_9488() -> (Tensor[(7, 2, 15), float32], Tensor[(9, 3, 10), float64], Tensor[(13, 15, 15), int64], Tensor[(975, 3), int64]) {
  %331 = @func_9052() /* ty=(Tensor[(7, 2, 15), float32],) */;
  %332 = %331.0;
  %333 = cast(%332, dtype="float32") /* ty=Tensor[(7, 2, 15), float32] */;
  %334 = cast(meta[relay.Constant][27] /* ty=Tensor[(975, 3), int64] */, dtype="int64") /* ty=Tensor[(975, 3), int64] */;
  %335 = cast(meta[relay.Constant][27] /* ty=Tensor[(975, 3), int64] */, dtype="int64") /* ty=Tensor[(975, 3), int64] */;
  %336 = reshape(%334, newshape=[13, 15, 15]) /* ty=Tensor[(13, 15, 15), int64] */;
  %337 = reshape(%335, newshape=[13, 15, 15]) /* ty=Tensor[(13, 15, 15), int64] */;
  %338 = @func_6569(%336, %337) /* ty=(Tensor[(13, 15, 15), int64],) */;
  %339 = atan(%333) /* ty=Tensor[(7, 2, 15), float32] */;
  %340 = @func_9296() /* ty=Tensor[(9, 3, 10), float64] */;
  %341 = %338.0;
  (%339, %340, %341, meta[relay.Constant][27] /* ty=Tensor[(975, 3), int64] */)
}

def @func_10130() -> (Tensor[(7, 2, 15), float32],) {
  %342 = @func_7238() /* ty=(Tensor[(7, 2, 15), float32],) */;
  %343 = %342.0;
  (%343,)
}

def @func_11318() -> (Tensor[(7, 2, 15), float32],) {
  %344 = @func_9833() /* ty=(Tensor[(7, 2, 15), float32],) */;
  %345 = %344.0;
  (%345,)
}

def @func_11736() -> (Tensor[(7, 2, 15), float32],) {
  %346 = @func_8317() /* ty=Tensor[(7, 2, 15), float32] */;
  (%346,)
}

def @func_10463() -> (Tensor[(7, 2, 15), float32], Tensor[(6, 12, 15), float32], Tensor[(1080), float32]) {
  %347 = cast(meta[relay.Constant][28] /* ty=Tensor[(1080), float32] */, dtype="float32") /* ty=Tensor[(1080), float32] */;
  %348 = reshape(%347, newshape=[6, 12, 15]) /* ty=Tensor[(6, 12, 15), float32] */;
  %349 = @func_8291() /* ty=Tensor[(7, 2, 15), float32] */;
  %350 = @func_4618(%348) /* ty=Tensor[(6, 12, 15), float32] */;
  (%349, %350, meta[relay.Constant][28] /* ty=Tensor[(1080), float32] */)
}

def @func_8824() -> Tensor[(7, 2, 15), float32] {
  @func_7259() /* ty=Tensor[(7, 2, 15), float32] */
}

def @func_2593(%var_2588: Tensor[(15, 8, 7), uint32], %var_2589: Tensor[(15, 8, 7), uint32]) -> (Tensor[(15, 8, 7), uint32],) {
  %351 = cast(%var_2589, dtype="uint32") /* ty=Tensor[(15, 8, 7), uint32] */;
  %352 = shape_of(%var_2588, dtype="int32") /* ty=Tensor[(3), int32] */;
  %353 = cast(%var_2588, dtype="uint32") /* ty=Tensor[(15, 8, 7), uint32] */;
  %354 = dyn.reshape(%351, %352, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %355 = logical_xor(%353, %354) /* ty=Tensor[(15, 8, 7), uint32] */;
  (%355,)
}

def @func_9351(%var_9330: int8, %var_9334: Tensor[(48), int32]) -> (Tensor[(7, 2, 15), float32], Tensor[(4, 13, 9), float32], int8, Tensor[(9, 1), int8], Tensor[(1680), int32], Tensor[(48), int32], Tensor[(7, 2, 15), float32], Tensor[(588), uint8]) {
  %356 = @func_7506() /* ty=(Tensor[(7, 2, 15), float32], Tensor[(7, 2, 15), float32]) */;
  %357 = cast(%var_9330, dtype="int8") /* ty=int8 */;
  %358 = cast(meta[relay.Constant][29] /* ty=Tensor[(9, 1), int8] */, dtype="int8") /* ty=Tensor[(9, 1), int8] */;
  %359 = reshape(%357, newshape=[]) /* ty=int8 */;
  %360 = reshape(%358, newshape=[1, 9]) /* ty=Tensor[(1, 9), int8] */;
  %361 = @func_6491(%359, %360) /* ty=(Tensor[(1, 9), int8], Tensor[(4, 13, 9), float32], Tensor[(3, 156), float32]) */;
  %362 = cast(%var_9334, dtype="int32") /* ty=Tensor[(48), int32] */;
  %363 = reshape(%362, newshape=[48]) /* ty=Tensor[(48), int32] */;
  %364 = @func_8941(%363) /* ty=(Tensor[(7, 2, 15), float32], Tensor[(8, 36), int64], Tensor[(1680), int32], Tensor[(405), float32], Tensor[(288), int64], Tensor[(48), int32]) */;
  %365 = cast(%var_9330, dtype="int8") /* ty=int8 */;
  %366 = cast(meta[relay.Constant][30] /* ty=Tensor[(588), uint8] */, dtype="uint8") /* ty=Tensor[(588), uint8] */;
  %367 = reshape(%365, newshape=[]) /* ty=int8 */;
  %368 = reshape(%366, newshape=[588]) /* ty=Tensor[(588), uint8] */;
  %369 = @func_8132(%367, %368) /* ty=(Tensor[(7, 2, 15), float32], Tensor[(3, 156), float32], int8, Tensor[(9), int8], Tensor[(420, 2), uint32], Tensor[(588), uint8]) */;
  %370 = %356.1;
  %371 = %361.1;
  %372 = %364.2;
  %373 = %369.0;
  (%370, %371, %var_9330, meta[relay.Constant][29] /* ty=Tensor[(9, 1), int8] */, %372, %var_9334, %373, meta[relay.Constant][30] /* ty=Tensor[(588), uint8] */)
}

def @func_9710(%var_9537: Tensor[(7, 2, 15), float32], %var_9553: Tensor[(48), int32], %var_9569: Tensor[(1650), float64], %var_9578: Tensor[(9), int8], %var_9646: Tensor[(588), uint8]) -> (Tensor[(7, 2, 15), int64], Tensor[(48), int32], Tensor[(48), int32], Tensor[(7, 2, 15), float32], Tensor[(16, 6, 3), int64], Tensor[(1650), float64], Tensor[(9), int8], Tensor[(16, 5, 12), float32], Tensor[(960), float32], Tensor[(6, 14, 7), uint8], Tensor[(588), uint8], Tensor[(3, 135), float32], Tensor[(3, 156), float32], Tensor[(3, 156), int8]) {
  %374 = @func_9428() /* ty=Tensor[(7, 2, 15), float32] */;
  %375 = cast(%var_9537, dtype="int64") /* ty=Tensor[(7, 2, 15), int64] */;
  %376 = shape_of(%374, dtype="int32") /* ty=Tensor[(3), int32] */;
  %377 = cast(%374, dtype="int64") /* ty=Tensor[(7, 2, 15), int64] */;
  %378 = dyn.reshape(%375, %376, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %379 = cast(%var_9553, dtype="int32") /* ty=Tensor[(48), int32] */;
  %380 = reshape(%379, newshape=[48]) /* ty=Tensor[(48), int32] */;
  %381 = @func_8941(%380) /* ty=(Tensor[(7, 2, 15), float32], Tensor[(8, 36), int64], Tensor[(1680), int32], Tensor[(405), float32], Tensor[(288), int64], Tensor[(48), int32]) */;
  %382 = cast(%var_9569, dtype="float64") /* ty=Tensor[(1650), float64] */;
  %383 = reshape(%382, newshape=[15, 10, 11]) /* ty=Tensor[(15, 10, 11), float64] */;
  %384 = @func_4704(%383) /* ty=(Tensor[(15, 10, 11), float64], Tensor[(16, 6, 3), int64], Tensor[(2, 144), int64]) */;
  %385 = cast(meta[relay.Constant][31] /* ty=Tensor[(960), float32] */, dtype="float32") /* ty=Tensor[(960), float32] */;
  %386 = reshape(%385, newshape=[16, 5, 12]) /* ty=Tensor[(16, 5, 12), float32] */;
  %387 = cast(%var_9646, dtype="uint8") /* ty=Tensor[(588), uint8] */;
  %388 = cast(%var_9646, dtype="uint8") /* ty=Tensor[(588), uint8] */;
  %389 = cast(%var_9646, dtype="uint8") /* ty=Tensor[(588), uint8] */;
  %390 = cast(meta[relay.Constant][32] /* ty=Tensor[(3, 135), float32] */, dtype="float32") /* ty=Tensor[(3, 135), float32] */;
  %391 = %381.5;
  %392 = cast(%391, dtype="int32") /* ty=Tensor[(48), int32] */;
  %393 = reshape(%387, newshape=[6, 14, 7]) /* ty=Tensor[(6, 14, 7), uint8] */;
  %394 = reshape(%388, newshape=[6, 14, 7]) /* ty=Tensor[(6, 14, 7), uint8] */;
  %395 = reshape(%389, newshape=[6, 14, 7]) /* ty=Tensor[(6, 14, 7), uint8] */;
  %396 = reshape(%390, newshape=[405]) /* ty=Tensor[(405), float32] */;
  %397 = reshape(%392, newshape=[48]) /* ty=Tensor[(48), int32] */;
  %398 = @func_1762(%393, %394, %395, %396, %397) /* ty=(Tensor[(6, 14, 7), bool], Tensor[(6, 14, 7), uint8], Tensor[(16, 6, 3), int64], Tensor[(405), float32], Tensor[(288), int64], Tensor[(48), int32]) */;
  %399 = cast(meta[relay.Constant][33] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %400 = cast(%var_9578, dtype="int8") /* ty=Tensor[(9), int8] */;
  %401 = reshape(%399, newshape=[]) /* ty=int8 */;
  %402 = reshape(%400, newshape=[1, 9]) /* ty=Tensor[(1, 9), int8] */;
  %403 = @func_6491(%401, %402) /* ty=(Tensor[(1, 9), int8], Tensor[(4, 13, 9), float32], Tensor[(3, 156), float32]) */;
  %404 = %403.2;
  %405 = cast(%404, dtype="float64") /* ty=Tensor[(3, 156), float64] */;
  %406 = atanh(%405) /* ty=Tensor[(3, 156), float64] */;
  %407 = cast(%404, dtype="uint64") /* ty=Tensor[(3, 156), uint64] */;
  %408 = cast(meta[relay.Constant][33] /* ty=int8 */, dtype="uint64") /* ty=uint64 */;
  %409 = logical_xor(%407, %408) /* ty=Tensor[(3, 156), uint64] */;
  %410 = cast(%409, dtype="float32") /* ty=Tensor[(3, 156), float32] */;
  %411 = shape_of(%406, dtype="int32") /* ty=Tensor[(2), int32] */;
  %412 = cast(%406, dtype="float32") /* ty=Tensor[(3, 156), float32] */;
  %413 = dyn.reshape(%410, %411, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %414 = cast(%404, dtype="int8") /* ty=Tensor[(3, 156), int8] */;
  %415 = shape_of(%406, dtype="int32") /* ty=Tensor[(2), int32] */;
  %416 = cast(%406, dtype="int8") /* ty=Tensor[(3, 156), int8] */;
  %417 = dyn.reshape(%414, %415, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %418 = bitwise_or(%377, %378) /* ty=Tensor[(7, 2, 15), int64] */;
  %419 = @func_8824() /* ty=Tensor[(7, 2, 15), float32] */;
  %420 = %384.1;
  %421 = @func_5420(%386) /* ty=Tensor[(16, 5, 12), float32] */;
  %422 = %398.1;
  %423 = mod(%412, %413) /* ty=Tensor[(3, 156), float32] */;
  %424 = right_shift(%416, %417) /* ty=Tensor[(3, 156), int8] */;
  (%418, %391, %var_9553, %419, %420, %var_9569, %var_9578, %421, meta[relay.Constant][31] /* ty=Tensor[(960), float32] */, %422, %var_9646, meta[relay.Constant][32] /* ty=Tensor[(3, 135), float32] */, %423, %424)
}

def @func_10223(%var_10221: Tensor[(468, 1), float32]) -> (Tensor[(7, 2, 15), float32], Tensor[(11, 4, 14), float64], Tensor[(16, 6, 3), int64], Tensor[(48), int32], Tensor[(7, 2, 15), float32], Tensor[(4, 13, 9), float32], Tensor[(468, 1), float32]) {
  %425 = cast(meta[relay.Constant][34] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
  %426 = cast(meta[relay.Constant][34] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
  %427 = reshape(%425, newshape=[11, 4, 14]) /* ty=Tensor[(11, 4, 14), float64] */;
  %428 = reshape(%426, newshape=[11, 4, 14]) /* ty=Tensor[(11, 4, 14), float64] */;
  %429 = @func_8184(%427, %428) /* ty=(Tensor[(11, 4, 14), float64],) */;
  %430 = %429.0;
  %431 = cast(meta[relay.Constant][34] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
  %432 = shape_of(%430, dtype="int32") /* ty=Tensor[(3), int32] */;
  %433 = cast(%430, dtype="float64") /* ty=Tensor[(11, 4, 14), float64] */;
  %434 = dyn.reshape(%431, %432, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %435 = cast(meta[relay.Constant][35] /* ty=Tensor[(48), int32] */, dtype="int32") /* ty=Tensor[(48), int32] */;
  %436 = cast(meta[relay.Constant][35] /* ty=Tensor[(48), int32] */, dtype="int32") /* ty=Tensor[(48), int32] */;
  %437 = reshape(%435, newshape=[4, 4, 3]) /* ty=Tensor[(4, 4, 3), int32] */;
  %438 = reshape(%436, newshape=[4, 4, 3]) /* ty=Tensor[(4, 4, 3), int32] */;
  %439 = @func_664(%437, %438) /* ty=(Tensor[(4, 4, 3), int16], Tensor[(16, 6, 3), int64], Tensor[(288), int64]) */;
  %440 = cast(%var_10221, dtype="float32") /* ty=Tensor[(468, 1), float32] */;
  %441 = reshape(%440, newshape=[4, 13, 9]) /* ty=Tensor[(4, 13, 9), float32] */;
  %442 = @func_8317() /* ty=Tensor[(7, 2, 15), float32] */;
  %443 = mod(%433, %434) /* ty=Tensor[(11, 4, 14), float64] */;
  %444 = %439.1;
  %445 = @func_7259() /* ty=Tensor[(7, 2, 15), float32] */;
  %446 = @func_2688(%441) /* ty=Tensor[(4, 13, 9), float32] */;
  (%442, %443, %444, meta[relay.Constant][35] /* ty=Tensor[(48), int32] */, %445, %446, %var_10221)
}

def @func_8359(%var_8349: Tensor[(1, 1040), float32]) -> (Tensor[(3, 12, 10), float32], Tensor[(7, 2, 15), float32], Tensor[(10, 9, 1), float32], Tensor[(90), float32], Tensor[(16, 5, 13), float32], Tensor[(1, 1040), float32], Tensor[(7, 2, 15), int64]) {
  %447 = cast(meta[relay.Constant][36] /* ty=Tensor[(3, 12, 10), float32] */, dtype="float32") /* ty=Tensor[(3, 12, 10), float32] */;
  %448 = @func_7238() /* ty=(Tensor[(7, 2, 15), float32],) */;
  %449 = cast(meta[relay.Constant][37] /* ty=Tensor[(90), float32] */, dtype="float32") /* ty=Tensor[(90), float32] */;
  %450 = reshape(%449, newshape=[10, 9, 1]) /* ty=Tensor[(10, 9, 1), float32] */;
  %451 = cast(%var_8349, dtype="float32") /* ty=Tensor[(1, 1040), float32] */;
  %452 = cast(%var_8349, dtype="float32") /* ty=Tensor[(1, 1040), float32] */;
  %453 = reshape(%451, newshape=[16, 5, 13]) /* ty=Tensor[(16, 5, 13), float32] */;
  %454 = reshape(%452, newshape=[16, 5, 13]) /* ty=Tensor[(16, 5, 13), float32] */;
  %455 = @func_5702(%453, %454) /* ty=(Tensor[(16, 5, 13), float32],) */;
  %456 = @func_8222() /* ty=(Tensor[(7, 2, 15), int64],) */;
  %457 = rsqrt(%447) /* ty=Tensor[(3, 12, 10), float32] */;
  %458 = %448.0;
  %459 = @func_3694(%450) /* ty=Tensor[(10, 9, 1), float32] */;
  %460 = %455.0;
  %461 = %456.0;
  (%457, %458, %459, meta[relay.Constant][37] /* ty=Tensor[(90), float32] */, %460, %var_8349, %461)
}

def @func_1762(%var_1736: Tensor[(6, 14, 7), uint8], %var_1737: Tensor[(6, 14, 7), uint8], %var_1746: Tensor[(6, 14, 7), uint8], %var_1754: Tensor[(405), float32], %var_1756: Tensor[(48), int32]) -> (Tensor[(6, 14, 7), bool], Tensor[(6, 14, 7), uint8], Tensor[(16, 6, 3), int64], Tensor[(405), float32], Tensor[(288), int64], Tensor[(48), int32]) {
  %462 = cast(%var_1746, dtype="bool") /* ty=Tensor[(6, 14, 7), bool] */;
  %463 = shape_of(%var_1736, dtype="int32") /* ty=Tensor[(3), int32] */;
  %464 = cast(%var_1736, dtype="bool") /* ty=Tensor[(6, 14, 7), bool] */;
  %465 = dyn.reshape(%462, %463, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %466 = cast(%var_1737, dtype="uint8") /* ty=Tensor[(6, 14, 7), uint8] */;
  %467 = shape_of(%var_1736, dtype="int32") /* ty=Tensor[(3), int32] */;
  %468 = cast(%var_1736, dtype="uint8") /* ty=Tensor[(6, 14, 7), uint8] */;
  %469 = dyn.reshape(%466, %467, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %470 = bitwise_and(%468, %469) /* ty=Tensor[(6, 14, 7), uint8] */;
  %471 = cast(%470, dtype="uint8") /* ty=Tensor[(6, 14, 7), uint8] */;
  %472 = shape_of(%var_1737, dtype="int32") /* ty=Tensor[(3), int32] */;
  %473 = cast(%var_1737, dtype="uint8") /* ty=Tensor[(6, 14, 7), uint8] */;
  %474 = dyn.reshape(%471, %472, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %475 = cast(%var_1754, dtype="float32") /* ty=Tensor[(405), float32] */;
  %476 = cast(meta[relay.Constant][38] /* ty=Tensor[(288), int64] */, dtype="int64") /* ty=Tensor[(288), int64] */;
  %477 = cast(%var_1756, dtype="int32") /* ty=Tensor[(48), int32] */;
  %478 = reshape(%475, newshape=[15, 9, 3]) /* ty=Tensor[(15, 9, 3), float32] */;
  %479 = reshape(%476, newshape=[288]) /* ty=Tensor[(288), int64] */;
  %480 = reshape(%477, newshape=[48]) /* ty=Tensor[(48), int32] */;
  %481 = @func_1095(%478, %479, %480) /* ty=(Tensor[(15, 9, 3), float32], Tensor[(16, 6, 3), int64], Tensor[(288), int64], Tensor[(4, 4, 3), int16], Tensor[(48), int32]) */;
  %482 = greater_equal(%464, %465) /* ty=Tensor[(6, 14, 7), bool] */;
  %483 = bitwise_xor(%473, %474) /* ty=Tensor[(6, 14, 7), uint8] */;
  %484 = %481.1;
  (%482, %483, %484, %var_1754, meta[relay.Constant][38] /* ty=Tensor[(288), int64] */, %var_1756)
}

def @func_9266(%var_9255: Tensor[(14, 12, 8), float32], %var_9256: Tensor[(14, 12, 8), float32]) -> (Tensor[(14, 12, 8), bool], Tensor[(7, 2, 15), float32]) {
  %485 = cast(%var_9256, dtype="bool") /* ty=Tensor[(14, 12, 8), bool] */;
  %486 = shape_of(%var_9255, dtype="int32") /* ty=Tensor[(3), int32] */;
  %487 = cast(%var_9255, dtype="bool") /* ty=Tensor[(14, 12, 8), bool] */;
  %488 = dyn.reshape(%485, %486, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %489 = @func_7238() /* ty=(Tensor[(7, 2, 15), float32],) */;
  %490 = greater(%487, %488) /* ty=Tensor[(14, 12, 8), bool] */;
  %491 = %489.0;
  (%490, %491)
}

def @func_5524(%var_5506: Tensor[(8, 5, 7), float64]) -> (Tensor[(8, 5, 7), int32], Tensor[(8, 5, 7), float32]) {
  %492 = cast(%var_5506, dtype="float64") /* ty=Tensor[(8, 5, 7), float64] */;
  %493 = sin(%492) /* ty=Tensor[(8, 5, 7), float64] */;
  %494 = cast(%493, dtype="int32") /* ty=Tensor[(8, 5, 7), int32] */;
  %495 = shape_of(%var_5506, dtype="int32") /* ty=Tensor[(3), int32] */;
  %496 = cast(%var_5506, dtype="int32") /* ty=Tensor[(8, 5, 7), int32] */;
  %497 = dyn.reshape(%494, %495, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %498 = cast(%493, dtype="float32") /* ty=Tensor[(8, 5, 7), float32] */;
  %499 = maximum(%496, %497) /* ty=Tensor[(8, 5, 7), int32] */;
  %500 = tan(%498) /* ty=Tensor[(8, 5, 7), float32] */;
  (%499, %500)
}

def @func_5702(%var_5693: Tensor[(16, 5, 13), float32], %var_5694: Tensor[(16, 5, 13), float32]) -> (Tensor[(16, 5, 13), float32],) {
  %501 = cast(%var_5694, dtype="float32") /* ty=Tensor[(16, 5, 13), float32] */;
  %502 = shape_of(%var_5693, dtype="int32") /* ty=Tensor[(3), int32] */;
  %503 = cast(%var_5693, dtype="float32") /* ty=Tensor[(16, 5, 13), float32] */;
  %504 = dyn.reshape(%501, %502, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %505 = mod(%503, %504) /* ty=Tensor[(16, 5, 13), float32] */;
  (%505,)
}

def @func_2831(%var_2787: Tensor[(16, 7, 15), int32], %var_2813: Tensor[(405), float32], %var_2814: Tensor[(288), int64], %var_2815: Tensor[(2, 24), int32]) -> (Tensor[(16, 7, 15), int32], Tensor[(16, 7, 15), bool], Tensor[(8, 36), int64], Tensor[(1352), float64], Tensor[(405), float32], Tensor[(288), int64], Tensor[(2, 24), int32]) {
  %506 = cast(-6 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %507 = cast(%var_2787, dtype="int32") /* ty=Tensor[(16, 7, 15), int32] */;
  %508 = cast(meta[relay.Constant][39] /* ty=Tensor[(16, 7, 15), int32] */, dtype="bool") /* ty=Tensor[(16, 7, 15), bool] */;
  %509 = shape_of(%var_2787, dtype="int32") /* ty=Tensor[(3), int32] */;
  %510 = cast(%var_2787, dtype="bool") /* ty=Tensor[(16, 7, 15), bool] */;
  %511 = dyn.reshape(%508, %509, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %512 = cast(meta[relay.Constant][40] /* ty=Tensor[(1352), float64] */, dtype="float64") /* ty=Tensor[(1352), float64] */;
  %513 = cast(%var_2813, dtype="float32") /* ty=Tensor[(405), float32] */;
  %514 = cast(%var_2814, dtype="int64") /* ty=Tensor[(288), int64] */;
  %515 = cast(%var_2815, dtype="int32") /* ty=Tensor[(2, 24), int32] */;
  %516 = reshape(%512, newshape=[8, 13, 13]) /* ty=Tensor[(8, 13, 13), float64] */;
  %517 = reshape(%513, newshape=[405]) /* ty=Tensor[(405), float32] */;
  %518 = reshape(%514, newshape=[8, 36]) /* ty=Tensor[(8, 36), int64] */;
  %519 = reshape(%515, newshape=[2, 24]) /* ty=Tensor[(2, 24), int32] */;
  %520 = @func_2100(%516, %517, %518, %519) /* ty=(Tensor[(8, 13, 13), float64], Tensor[(4, 4, 3), int16], Tensor[(405), float32], Tensor[(8, 36), int64], Tensor[(2, 24), int32], Tensor[(16, 6, 3), int64]) */;
  %521 = subtract(%506, %507) /* ty=Tensor[(16, 7, 15), int32] */;
  %522 = logical_or(%510, %511) /* ty=Tensor[(16, 7, 15), bool] */;
  %523 = %520.3;
  (%521, %522, %523, meta[relay.Constant][40] /* ty=Tensor[(1352), float64] */, %var_2813, %var_2814, %var_2815)
}

def @func_8222() -> (Tensor[(7, 2, 15), int64],) {
  %524 = @func_7115() /* ty=Tensor[(7, 2, 15), float32] */;
  %525 = cast(meta[relay.Constant][41] /* ty=Tensor[(7, 2, 15), float32] */, dtype="int64") /* ty=Tensor[(7, 2, 15), int64] */;
  %526 = shape_of(%524, dtype="int32") /* ty=Tensor[(3), int32] */;
  %527 = cast(%524, dtype="int64") /* ty=Tensor[(7, 2, 15), int64] */;
  %528 = dyn.reshape(%525, %526, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %529 = minimum(%527, %528) /* ty=Tensor[(7, 2, 15), int64] */;
  (%529,)
}

def @func_8702() -> Tensor[(7, 2, 15), float32] {
  %530 = @func_7506() /* ty=(Tensor[(7, 2, 15), float32], Tensor[(7, 2, 15), float32]) */;
  %530.1
}

def @func_9384(%var_9372: Tensor[(1680), int32], %var_9373: Tensor[(1, 405), float32], %var_9374: Tensor[(288), int64], %var_9375: Tensor[(48), int32]) -> (Tensor[(7, 2, 15), float32], Tensor[(288), int64], Tensor[(1680), int32], Tensor[(1, 405), float32], Tensor[(288), int64], Tensor[(48), int32]) {
  %531 = @func_8015() /* ty=(Tensor[(7, 2, 15), float32],) */;
  %532 = cast(%var_9372, dtype="int32") /* ty=Tensor[(1680), int32] */;
  %533 = cast(%var_9373, dtype="float32") /* ty=Tensor[(1, 405), float32] */;
  %534 = cast(%var_9374, dtype="int64") /* ty=Tensor[(288), int64] */;
  %535 = cast(%var_9375, dtype="int32") /* ty=Tensor[(48), int32] */;
  %536 = reshape(%532, newshape=[16, 7, 15]) /* ty=Tensor[(16, 7, 15), int32] */;
  %537 = reshape(%533, newshape=[405]) /* ty=Tensor[(405), float32] */;
  %538 = reshape(%534, newshape=[288]) /* ty=Tensor[(288), int64] */;
  %539 = reshape(%535, newshape=[2, 24]) /* ty=Tensor[(2, 24), int32] */;
  %540 = @func_2831(%536, %537, %538, %539) /* ty=(Tensor[(16, 7, 15), int32], Tensor[(16, 7, 15), bool], Tensor[(8, 36), int64], Tensor[(1352), float64], Tensor[(405), float32], Tensor[(288), int64], Tensor[(2, 24), int32]) */;
  %541 = %531.0;
  %542 = %540.5;
  (%541, %542, %var_9372, %var_9373, %var_9374, %var_9375)
}

def @func_9296() -> Tensor[(9, 3, 10), float64] {
  %543 = cast(meta[relay.Constant][43] /* ty=Tensor[(9, 3, 10), float64] */, dtype="float64") /* ty=Tensor[(9, 3, 10), float64] */;
  %544 = shape_of(meta[relay.Constant][42] /* ty=Tensor[(9, 3, 10), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %545 = cast(meta[relay.Constant][42] /* ty=Tensor[(9, 3, 10), float64] */, dtype="float64") /* ty=Tensor[(9, 3, 10), float64] */;
  %546 = dyn.reshape(%543, %544, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_mod(%545, %546) /* ty=Tensor[(9, 3, 10), float64] */
}

def @func_10907() -> Tensor[(9, 3, 10), float64] {
  @func_9296() /* ty=Tensor[(9, 3, 10), float64] */
}

def @func_21(%var_5: Tensor[(16, 6, 3), int64]) -> Tensor[(16, 6, 3), int64] {
  %547 = cast(meta[relay.Constant][44] /* ty=Tensor[(16, 6, 3), int64] */, dtype="int64") /* ty=Tensor[(16, 6, 3), int64] */;
  %548 = shape_of(%var_5, dtype="int32") /* ty=Tensor[(3), int32] */;
  %549 = cast(%var_5, dtype="int64") /* ty=Tensor[(16, 6, 3), int64] */;
  %550 = dyn.reshape(%547, %548, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  bitwise_or(%549, %550) /* ty=Tensor[(16, 6, 3), int64] */
}

def @func_9833() -> (Tensor[(7, 2, 15), float32],) {
  %551 = @func_8824() /* ty=Tensor[(7, 2, 15), float32] */;
  (%551,)
}

def @func_10149() -> Tensor[(7, 2, 15), float32] {
  @func_8747() /* ty=Tensor[(7, 2, 15), float32] */
}

def @func_11099(%var_11068: Tensor[(1144), float64], %var_11071: Tensor[(280, 2), int16]) -> (Tensor[(7, 2, 15), float32], Tensor[(13, 11, 8), float64], Tensor[(1144), float64], Tensor[(11, 11, 3), float32], Tensor[(363, 1), float32], Tensor[(280, 2), float32]) {
  %552 = cast(%var_11068, dtype="float64") /* ty=Tensor[(1144), float64] */;
  %553 = reshape(%552, newshape=[13, 11, 8]) /* ty=Tensor[(13, 11, 8), float64] */;
  %554 = cast(%var_11071, dtype="int16") /* ty=Tensor[(280, 2), int16] */;
  %555 = cast(%var_11071, dtype="int16") /* ty=Tensor[(280, 2), int16] */;
  %556 = cast(meta[relay.Constant][45] /* ty=Tensor[(363, 1), float32] */, dtype="float32") /* ty=Tensor[(363, 1), float32] */;
  %557 = reshape(%554, newshape=[7, 10, 8]) /* ty=Tensor[(7, 10, 8), int16] */;
  %558 = reshape(%555, newshape=[7, 10, 8]) /* ty=Tensor[(7, 10, 8), int16] */;
  %559 = reshape(%556, newshape=[363]) /* ty=Tensor[(363), float32] */;
  %560 = @func_9982(%557, %558, %559) /* ty=(Tensor[(7, 10, 8), int16], Tensor[(11, 11, 3), float32], Tensor[(363), float32]) */;
  %561 = cast(%var_11071, dtype="float32") /* ty=Tensor[(280, 2), float32] */;
  %562 = @func_8291() /* ty=Tensor[(7, 2, 15), float32] */;
  %563 = @func_8385(%553) /* ty=Tensor[(13, 11, 8), float64] */;
  %564 = %560.1;
  %565 = log10(%561) /* ty=Tensor[(280, 2), float32] */;
  (%562, %563, %var_11068, %564, meta[relay.Constant][45] /* ty=Tensor[(363, 1), float32] */, %565)
}

def @func_8161(%var_8150: Tensor[(1, 48), int32]) -> (Tensor[(7, 2, 15), float32], Tensor[(6, 14, 7), uint8], Tensor[(588), uint8], Tensor[(9, 45), float32], Tensor[(1, 48), int32], Tensor[(7, 2, 15), float32]) {
  %566 = @func_7238() /* ty=(Tensor[(7, 2, 15), float32],) */;
  %567 = cast(meta[relay.Constant][46] /* ty=Tensor[(588), uint8] */, dtype="uint8") /* ty=Tensor[(588), uint8] */;
  %568 = cast(meta[relay.Constant][46] /* ty=Tensor[(588), uint8] */, dtype="uint8") /* ty=Tensor[(588), uint8] */;
  %569 = cast(meta[relay.Constant][46] /* ty=Tensor[(588), uint8] */, dtype="uint8") /* ty=Tensor[(588), uint8] */;
  %570 = cast(meta[relay.Constant][47] /* ty=Tensor[(9, 45), float32] */, dtype="float32") /* ty=Tensor[(9, 45), float32] */;
  %571 = cast(%var_8150, dtype="int32") /* ty=Tensor[(1, 48), int32] */;
  %572 = reshape(%567, newshape=[6, 14, 7]) /* ty=Tensor[(6, 14, 7), uint8] */;
  %573 = reshape(%568, newshape=[6, 14, 7]) /* ty=Tensor[(6, 14, 7), uint8] */;
  %574 = reshape(%569, newshape=[6, 14, 7]) /* ty=Tensor[(6, 14, 7), uint8] */;
  %575 = reshape(%570, newshape=[405]) /* ty=Tensor[(405), float32] */;
  %576 = reshape(%571, newshape=[48]) /* ty=Tensor[(48), int32] */;
  %577 = @func_1762(%572, %573, %574, %575, %576) /* ty=(Tensor[(6, 14, 7), bool], Tensor[(6, 14, 7), uint8], Tensor[(16, 6, 3), int64], Tensor[(405), float32], Tensor[(288), int64], Tensor[(48), int32]) */;
  %578 = %566.0;
  %579 = %577.1;
  %580 = @func_7259() /* ty=Tensor[(7, 2, 15), float32] */;
  (%578, %579, meta[relay.Constant][46] /* ty=Tensor[(588), uint8] */, meta[relay.Constant][47] /* ty=Tensor[(9, 45), float32] */, %var_8150, %580)
}

def @func_5246(%var_5220: Tensor[(1, 15, 4), float32], %var_5242: Tensor[(25), float64]) -> (Tensor[(1, 15, 4), float32], Tensor[(15, 9, 3), float32], Tensor[(25), float64], Tensor[(468), float32], Tensor[(405), float32]) {
  %581 = cast(%var_5220, dtype="float32") /* ty=Tensor[(1, 15, 4), float32] */;
  %582 = cast(%var_5242, dtype="float64") /* ty=Tensor[(25), float64] */;
  %583 = cast(meta[relay.Constant][48] /* ty=Tensor[(468), float32] */, dtype="float32") /* ty=Tensor[(468), float32] */;
  %584 = cast(meta[relay.Constant][49] /* ty=Tensor[(405), float32] */, dtype="float32") /* ty=Tensor[(405), float32] */;
  %585 = reshape(%582, newshape=[5, 1, 5]) /* ty=Tensor[(5, 1, 5), float64] */;
  %586 = reshape(%583, newshape=[6, 78]) /* ty=Tensor[(6, 78), float32] */;
  %587 = reshape(%584, newshape=[405]) /* ty=Tensor[(405), float32] */;
  %588 = @func_2535(%585, %586, %587) /* ty=(Tensor[(5, 1, 5), float64], Tensor[(5, 10, 14), bool], Tensor[(700), float32], Tensor[(5, 10, 14), bool], Tensor[(13, 6, 6), bool], Tensor[(6, 78), float32], Tensor[(13, 6, 6), bool], Tensor[(48), float64], Tensor[(624), float64], Tensor[(16, 6, 3), int64], Tensor[(1352), float64], Tensor[(405), float32], Tensor[(288), int64], Tensor[(2, 24), int32], Tensor[(15, 9, 3), float32], Tensor[(8, 36), int64]) */;
  %589 = log10(%581) /* ty=Tensor[(1, 15, 4), float32] */;
  %590 = %588.14;
  (%589, %590, %var_5242, meta[relay.Constant][48] /* ty=Tensor[(468), float32] */, meta[relay.Constant][49] /* ty=Tensor[(405), float32] */)
}

def @func_8941(%var_8920: Tensor[(48), int32]) -> (Tensor[(7, 2, 15), float32], Tensor[(8, 36), int64], Tensor[(1680), int32], Tensor[(405), float32], Tensor[(288), int64], Tensor[(48), int32]) {
  %591 = cast(meta[relay.Constant][50] /* ty=Tensor[(1680), int32] */, dtype="int32") /* ty=Tensor[(1680), int32] */;
  %592 = cast(meta[relay.Constant][51] /* ty=Tensor[(405), float32] */, dtype="float32") /* ty=Tensor[(405), float32] */;
  %593 = cast(meta[relay.Constant][52] /* ty=Tensor[(288), int64] */, dtype="int64") /* ty=Tensor[(288), int64] */;
  %594 = cast(%var_8920, dtype="int32") /* ty=Tensor[(48), int32] */;
  %595 = reshape(%591, newshape=[16, 7, 15]) /* ty=Tensor[(16, 7, 15), int32] */;
  %596 = reshape(%592, newshape=[405]) /* ty=Tensor[(405), float32] */;
  %597 = reshape(%593, newshape=[288]) /* ty=Tensor[(288), int64] */;
  %598 = reshape(%594, newshape=[2, 24]) /* ty=Tensor[(2, 24), int32] */;
  %599 = @func_2831(%595, %596, %597, %598) /* ty=(Tensor[(16, 7, 15), int32], Tensor[(16, 7, 15), bool], Tensor[(8, 36), int64], Tensor[(1352), float64], Tensor[(405), float32], Tensor[(288), int64], Tensor[(2, 24), int32]) */;
  %600 = @func_8747() /* ty=Tensor[(7, 2, 15), float32] */;
  %601 = %599.2;
  (%600, %601, meta[relay.Constant][50] /* ty=Tensor[(1680), int32] */, meta[relay.Constant][51] /* ty=Tensor[(405), float32] */, meta[relay.Constant][52] /* ty=Tensor[(288), int64] */, %var_8920)
}

def @func_4618(%var_4613: Tensor[(6, 12, 15), float32]) -> Tensor[(6, 12, 15), float32] {
  %602 = cast(%var_4613, dtype="float32") /* ty=Tensor[(6, 12, 15), float32] */;
  atanh(%602) /* ty=Tensor[(6, 12, 15), float32] */
}

def @func_11508(%var_11451: Tensor[(4, 4, 15), uint64]) -> (Tensor[(4, 4, 15), bool], Tensor[(468), float32], Tensor[(405), float32], Tensor[(12, 4), int32], Tensor[(4, 4, 15), float64]) {
  %603 = cast(meta[relay.Constant][53] /* ty=Tensor[(4, 4, 15), uint64] */, dtype="bool") /* ty=Tensor[(4, 4, 15), bool] */;
  %604 = shape_of(%var_11451, dtype="int32") /* ty=Tensor[(3), int32] */;
  %605 = cast(%var_11451, dtype="bool") /* ty=Tensor[(4, 4, 15), bool] */;
  %606 = dyn.reshape(%603, %604, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %607 = cast(meta[relay.Constant][54] /* ty=Tensor[(405), float32] */, dtype="float32") /* ty=Tensor[(405), float32] */;
  %608 = cast(meta[relay.Constant][55] /* ty=Tensor[(12, 4), int32] */, dtype="int32") /* ty=Tensor[(12, 4), int32] */;
  %609 = reshape(%607, newshape=[405]) /* ty=Tensor[(405), float32] */;
  %610 = reshape(%608, newshape=[24, 2]) /* ty=Tensor[(24, 2), int32] */;
  %611 = @func_10887(%609, %610) /* ty=(Tensor[(7, 2, 15), float32], Tensor[(468), float32], Tensor[(405), float32], Tensor[(24, 2), int32]) */;
  %612 = cast(%var_11451, dtype="uint64") /* ty=Tensor[(4, 4, 15), uint64] */;
  %613 = shape_of(meta[relay.Constant][56] /* ty=Tensor[(4, 4, 15), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %614 = cast(meta[relay.Constant][56] /* ty=Tensor[(4, 4, 15), uint64] */, dtype="uint64") /* ty=Tensor[(4, 4, 15), uint64] */;
  %615 = dyn.reshape(%612, %613, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %616 = minimum(%614, %615) /* ty=Tensor[(4, 4, 15), uint64] */;
  %617 = cast(%616, dtype="float64") /* ty=Tensor[(4, 4, 15), float64] */;
  %618 = logical_or(%605, %606) /* ty=Tensor[(4, 4, 15), bool] */;
  %619 = %611.1;
  %620 = acosh(%617) /* ty=Tensor[(4, 4, 15), float64] */;
  (%618, %619, meta[relay.Constant][54] /* ty=Tensor[(405), float32] */, meta[relay.Constant][55] /* ty=Tensor[(12, 4), int32] */, %620)
}

def @func_8421() -> (Tensor[(7, 2, 15), int64], Tensor[(5, 10, 14), bool], Tensor[(700), float32]) {
  %621 = @func_8222() /* ty=(Tensor[(7, 2, 15), int64],) */;
  %622 = cast(meta[relay.Constant][57] /* ty=Tensor[(700), float32] */, dtype="float32") /* ty=Tensor[(700), float32] */;
  %623 = cast(meta[relay.Constant][57] /* ty=Tensor[(700), float32] */, dtype="float32") /* ty=Tensor[(700), float32] */;
  %624 = reshape(%622, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), float32] */;
  %625 = reshape(%623, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), float32] */;
  %626 = @func_2415(%624, %625) /* ty=(Tensor[(5, 10, 14), bool],) */;
  %627 = %621.0;
  %628 = %626.0;
  (%627, %628, meta[relay.Constant][57] /* ty=Tensor[(700), float32] */)
}

def @main(%var_12116: float64, %var_12117: Tensor[(15, 16, 14), float64]) -> (Tensor[(15, 16, 14), bool], Tensor[(15, 16, 14), uint64]) {
  %629 = cast(%var_12116, dtype="bool") /* ty=bool */;
  %630 = cast(%var_12117, dtype="bool") /* ty=Tensor[(15, 16, 14), bool] */;
  %631 = cast(%var_12117, dtype="uint64") /* ty=Tensor[(15, 16, 14), uint64] */;
  %632 = cast(%var_12116, dtype="uint64") /* ty=uint64 */;
  %633 = equal(%629, %630) /* ty=Tensor[(15, 16, 14), bool] */;
  %634 = add(%631, %632) /* ty=Tensor[(15, 16, 14), uint64] */;
  (%633, %634)
}

def @func_9052() -> (Tensor[(7, 2, 15), float32],) {
  %635 = @func_8747() /* ty=Tensor[(7, 2, 15), float32] */;
  (%635,)
}

def @func_11039(%var_10996: Tensor[(48), int32], %var_11035: Tensor[(130), float32], %var_11036: Tensor[(1650), float64]) -> (Tensor[(7, 2, 15), float32], Tensor[(1, 48), int32], Tensor[(48), int32], Tensor[(468, 1), float32], Tensor[(6, 78), float32], Tensor[(8, 5, 7), float32], Tensor[(130), float32], Tensor[(1650), float64]) {
  %636 = @func_8015() /* ty=(Tensor[(7, 2, 15), float32],) */;
  %637 = cast(%var_10996, dtype="int32") /* ty=Tensor[(48), int32] */;
  %638 = reshape(%637, newshape=[1, 48]) /* ty=Tensor[(1, 48), int32] */;
  %639 = @func_8161(%638) /* ty=(Tensor[(7, 2, 15), float32], Tensor[(6, 14, 7), uint8], Tensor[(588), uint8], Tensor[(9, 45), float32], Tensor[(1, 48), int32], Tensor[(7, 2, 15), float32]) */;
  %640 = cast(meta[relay.Constant][58] /* ty=Tensor[(6, 78), float32] */, dtype="float32") /* ty=Tensor[(6, 78), float32] */;
  %641 = reshape(%640, newshape=[468, 1]) /* ty=Tensor[(468, 1), float32] */;
  %642 = @func_10223(%641) /* ty=(Tensor[(7, 2, 15), float32], Tensor[(11, 4, 14), float64], Tensor[(16, 6, 3), int64], Tensor[(48), int32], Tensor[(7, 2, 15), float32], Tensor[(4, 13, 9), float32], Tensor[(468, 1), float32]) */;
  %643 = cast(%var_11035, dtype="float32") /* ty=Tensor[(130), float32] */;
  %644 = cast(%var_11036, dtype="float64") /* ty=Tensor[(1650), float64] */;
  %645 = reshape(%643, newshape=[10, 1, 13]) /* ty=Tensor[(10, 1, 13), float32] */;
  %646 = reshape(%644, newshape=[1650]) /* ty=Tensor[(1650), float64] */;
  %647 = @func_7080(%645, %646) /* ty=(Tensor[(13, 15, 15), int64], Tensor[(2925), int64], Tensor[(2, 144), int64], Tensor[(1650), float64], Tensor[(10, 1, 13), float64], Tensor[(8, 5, 7), float32], Tensor[(10, 28), float64]) */;
  %648 = %636.0;
  %649 = %639.4;
  %650 = %642.6;
  %651 = %647.5;
  (%648, %649, %var_10996, %650, meta[relay.Constant][58] /* ty=Tensor[(6, 78), float32] */, %651, %var_11035, %var_11036)
}

def @func_8404() -> (Tensor[(7, 2, 15), float32], Tensor[(7, 2, 15), float32]) {
  %652 = @func_7506() /* ty=(Tensor[(7, 2, 15), float32], Tensor[(7, 2, 15), float32]) */;
  %653 = %652.0;
  %654 = @func_7115() /* ty=Tensor[(7, 2, 15), float32] */;
  (%653, %654)
}

def @func_10681() -> (Tensor[(7, 2, 15), float32], Tensor[(4, 13, 9), float32], Tensor[(468), float32], Tensor[(7, 2, 15), int64]) {
  %655 = cast(meta[relay.Constant][59] /* ty=Tensor[(468), float32] */, dtype="float32") /* ty=Tensor[(468), float32] */;
  %656 = reshape(%655, newshape=[4, 13, 9]) /* ty=Tensor[(4, 13, 9), float32] */;
  %657 = @func_8702() /* ty=Tensor[(7, 2, 15), float32] */;
  %658 = @func_2688(%656) /* ty=Tensor[(4, 13, 9), float32] */;
  %659 = @func_10102() /* ty=Tensor[(7, 2, 15), int64] */;
  (%657, %658, meta[relay.Constant][59] /* ty=Tensor[(468), float32] */, %659)
}

def @func_8184(%var_8174: Tensor[(11, 4, 14), float64], %var_8175: Tensor[(11, 4, 14), float64]) -> (Tensor[(11, 4, 14), float64],) {
  %660 = cast(%var_8175, dtype="float64") /* ty=Tensor[(11, 4, 14), float64] */;
  %661 = shape_of(%var_8174, dtype="int32") /* ty=Tensor[(3), int32] */;
  %662 = cast(%var_8174, dtype="float64") /* ty=Tensor[(11, 4, 14), float64] */;
  %663 = dyn.reshape(%660, %661, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %664 = floor_mod(%662, %663) /* ty=Tensor[(11, 4, 14), float64] */;
  (%664,)
}

def @func_11337() -> (Tensor[(9, 3, 10), float64],) {
  %665 = @func_9296() /* ty=Tensor[(9, 3, 10), float64] */;
  (%665,)
}

def @func_3669(%var_3665: Tensor[(3, 16, 14), uint8]) -> (Tensor[(3, 16, 14), uint8],) {
  %666 = cast(%var_3665, dtype="uint8") /* ty=Tensor[(3, 16, 14), uint8] */;
  %667 = shape_of(meta[relay.Constant][60] /* ty=Tensor[(3, 16, 14), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %668 = cast(meta[relay.Constant][60] /* ty=Tensor[(3, 16, 14), uint8] */, dtype="uint8") /* ty=Tensor[(3, 16, 14), uint8] */;
  %669 = dyn.reshape(%666, %667, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %670 = left_shift(%668, %669) /* ty=Tensor[(3, 16, 14), uint8] */;
  (%670,)
}

def @func_7115() -> Tensor[(7, 2, 15), float32] {
  %671 = cast(meta[relay.Constant][61] /* ty=Tensor[(7, 2, 15), float32] */, dtype="float32") /* ty=Tensor[(7, 2, 15), float32] */;
  exp(%671) /* ty=Tensor[(7, 2, 15), float32] */
}

def @func_8449() -> Tensor[(7, 2, 15), float32] {
  @func_8437() /* ty=Tensor[(7, 2, 15), float32] */
}

def @func_7259() -> Tensor[(7, 2, 15), float32] {
  %672 = @func_7238() /* ty=(Tensor[(7, 2, 15), float32],) */;
  %672.0
}

def @func_8437() -> Tensor[(7, 2, 15), float32] {
  %673 = @func_7331() /* ty=(Tensor[(7, 2, 15), float32],) */;
  %673.0
}

def @func_10793(%var_10773: Tensor[(6, 1, 15), float32]) -> Tensor[(6, ?, 15), bool] {
  %674 = cast(%var_10773, dtype="float32") /* ty=Tensor[(6, 1, 15), float32] */;
  %675 = sinh(%674) /* ty=Tensor[(6, 1, 15), float32] */;
  %676 = cast(%675, dtype="float64") /* ty=Tensor[(6, 1, 15), float64] */;
  %677 = log2(%676) /* ty=Tensor[(6, 1, 15), float64] */;
  %678 = cast(%677, dtype="bool") /* ty=Tensor[(6, 1, 15), bool] */;
  %679 = shape_of(%var_10773, dtype="int32") /* ty=Tensor[(3), int32] */;
  %680 = cast(%var_10773, dtype="bool") /* ty=Tensor[(6, 1, 15), bool] */;
  %681 = dyn.reshape(%678, %679, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%680, %681) /* ty=Tensor[(6, ?, 15), bool] */
}

def @func_10754() -> (Tensor[(7, 2, 15), float32], Tensor[(9, 13, 15), float32], Tensor[(468), float32]) {
  %682 = @func_9833() /* ty=(Tensor[(7, 2, 15), float32],) */;
  %683 = cast(meta[relay.Constant][62] /* ty=Tensor[(468), float32] */, dtype="float32") /* ty=Tensor[(468), float32] */;
  %684 = reshape(%683, newshape=[468]) /* ty=Tensor[(468), float32] */;
  %685 = @func_1608(%684) /* ty=(Tensor[(9, 13, 15), float32], Tensor[(16, 6, 3), int64], Tensor[(8, 36), int64], Tensor[(13, 6, 6), bool], Tensor[(468), float32], Tensor[(9, 13, 15), float32]) */;
  %686 = %682.0;
  %687 = %685.0;
  (%686, %687, meta[relay.Constant][62] /* ty=Tensor[(468), float32] */)
}

def @func_10949(%var_10943: Tensor[(1080), float32]) -> (Tensor[(7, 2, 15), int64], Tensor[(6, 12, 15), float32], Tensor[(1080), float32]) {
  %688 = @func_8222() /* ty=(Tensor[(7, 2, 15), int64],) */;
  %689 = cast(%var_10943, dtype="float32") /* ty=Tensor[(1080), float32] */;
  %690 = reshape(%689, newshape=[6, 12, 15]) /* ty=Tensor[(6, 12, 15), float32] */;
  %691 = %688.0;
  %692 = @func_4618(%690) /* ty=Tensor[(6, 12, 15), float32] */;
  (%691, %692, %var_10943)
}

def @func_11129() -> Tensor[(7, 2, 15), float32] {
  @func_10149() /* ty=Tensor[(7, 2, 15), float32] */
}

def @func_3901(%var_3883: Tensor[(700), float32], %var_3897: Tensor[(1, 405), float32], %var_3899: Tensor[(48), int32]) -> (Tensor[(1, 16, 16), float32], Tensor[(5, 10, 14), bool], Tensor[(700), float32], Tensor[(8, 13, 13), float64], Tensor[(26, 52), float64], Tensor[(1, 405), float32], Tensor[(288), int64], Tensor[(48), int32]) {
  %693 = cast(meta[relay.Constant][63] /* ty=Tensor[(1, 16, 16), float32] */, dtype="float32") /* ty=Tensor[(1, 16, 16), float32] */;
  %694 = cast(%var_3883, dtype="float32") /* ty=Tensor[(700), float32] */;
  %695 = cast(%var_3883, dtype="float32") /* ty=Tensor[(700), float32] */;
  %696 = reshape(%694, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), float32] */;
  %697 = reshape(%695, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), float32] */;
  %698 = @func_2415(%696, %697) /* ty=(Tensor[(5, 10, 14), bool],) */;
  %699 = cast(meta[relay.Constant][64] /* ty=Tensor[(26, 52), float64] */, dtype="float64") /* ty=Tensor[(26, 52), float64] */;
  %700 = cast(%var_3897, dtype="float32") /* ty=Tensor[(1, 405), float32] */;
  %701 = cast(meta[relay.Constant][65] /* ty=Tensor[(288), int64] */, dtype="int64") /* ty=Tensor[(288), int64] */;
  %702 = cast(%var_3899, dtype="int32") /* ty=Tensor[(48), int32] */;
  %703 = reshape(%699, newshape=[8, 13, 13]) /* ty=Tensor[(8, 13, 13), float64] */;
  %704 = reshape(%700, newshape=[405]) /* ty=Tensor[(405), float32] */;
  %705 = reshape(%701, newshape=[8, 36]) /* ty=Tensor[(8, 36), int64] */;
  %706 = reshape(%702, newshape=[2, 24]) /* ty=Tensor[(2, 24), int32] */;
  %707 = @func_2100(%703, %704, %705, %706) /* ty=(Tensor[(8, 13, 13), float64], Tensor[(4, 4, 3), int16], Tensor[(405), float32], Tensor[(8, 36), int64], Tensor[(2, 24), int32], Tensor[(16, 6, 3), int64]) */;
  %708 = acos(%693) /* ty=Tensor[(1, 16, 16), float32] */;
  %709 = %698.0;
  %710 = %707.0;
  (%708, %709, %var_3883, %710, meta[relay.Constant][64] /* ty=Tensor[(26, 52), float64] */, %var_3897, meta[relay.Constant][65] /* ty=Tensor[(288), int64] */, %var_3899)
}

def @func_11365(%var_11355: Tensor[(588), uint8], %var_11356: Tensor[(405), float32]) -> (Tensor[(7, 2, 15), float32], Tensor[(48), int32], Tensor[(588), uint8], Tensor[(48), int32], Tensor[(405), float64]) {
  %711 = @func_7331() /* ty=(Tensor[(7, 2, 15), float32],) */;
  %712 = cast(%var_11355, dtype="uint8") /* ty=Tensor[(588), uint8] */;
  %713 = cast(%var_11355, dtype="uint8") /* ty=Tensor[(588), uint8] */;
  %714 = cast(%var_11355, dtype="uint8") /* ty=Tensor[(588), uint8] */;
  %715 = cast(%var_11356, dtype="float32") /* ty=Tensor[(405), float32] */;
  %716 = cast(meta[relay.Constant][66] /* ty=Tensor[(48), int32] */, dtype="int32") /* ty=Tensor[(48), int32] */;
  %717 = reshape(%712, newshape=[6, 14, 7]) /* ty=Tensor[(6, 14, 7), uint8] */;
  %718 = reshape(%713, newshape=[6, 14, 7]) /* ty=Tensor[(6, 14, 7), uint8] */;
  %719 = reshape(%714, newshape=[6, 14, 7]) /* ty=Tensor[(6, 14, 7), uint8] */;
  %720 = reshape(%715, newshape=[405]) /* ty=Tensor[(405), float32] */;
  %721 = reshape(%716, newshape=[48]) /* ty=Tensor[(48), int32] */;
  %722 = @func_1762(%717, %718, %719, %720, %721) /* ty=(Tensor[(6, 14, 7), bool], Tensor[(6, 14, 7), uint8], Tensor[(16, 6, 3), int64], Tensor[(405), float32], Tensor[(288), int64], Tensor[(48), int32]) */;
  %723 = cast(%var_11356, dtype="float64") /* ty=Tensor[(405), float64] */;
  %724 = %711.0;
  %725 = %722.5;
  %726 = sinh(%723) /* ty=Tensor[(405), float64] */;
  (%724, %725, %var_11355, meta[relay.Constant][66] /* ty=Tensor[(48), int32] */, %726)
}

def @func_7781(%var_7756: Tensor[(12, 4), float64], %var_7757: Tensor[(1, 624), float64], %var_7758: Tensor[(468), float32]) -> (Tensor[(468), float32], Tensor[(12, 4), float64], Tensor[(1, 624), float64], Tensor[(468), float32], Tensor[(7, 2, 15), int64]) {
  %727 = cast(%var_7756, dtype="float64") /* ty=Tensor[(12, 4), float64] */;
  %728 = cast(%var_7757, dtype="float64") /* ty=Tensor[(1, 624), float64] */;
  %729 = cast(%var_7758, dtype="float32") /* ty=Tensor[(468), float32] */;
  %730 = reshape(%727, newshape=[6, 1, 8]) /* ty=Tensor[(6, 1, 8), float64] */;
  %731 = reshape(%728, newshape=[6, 13, 8]) /* ty=Tensor[(6, 13, 8), float64] */;
  %732 = reshape(%729, newshape=[468]) /* ty=Tensor[(468), float32] */;
  %733 = @func_2359(%730, %731, %732) /* ty=(Tensor[(6, 13, 8), float64], Tensor[(16, 6, 3), int64], Tensor[(3, 135), float32], Tensor[(288), int64], Tensor[(16, 6, 3), int64], Tensor[(13, 6, 6), bool], Tensor[(468), float32]) */;
  %734 = @func_7259() /* ty=Tensor[(7, 2, 15), float32] */;
  %735 = cast(%734, dtype="float32") /* ty=Tensor[(7, 2, 15), float32] */;
  %736 = sigmoid(%735) /* ty=Tensor[(7, 2, 15), float32] */;
  %737 = cast(meta[relay.Constant][67] /* ty=Tensor[(7, 2, 15), float32] */, dtype="int64") /* ty=Tensor[(7, 2, 15), int64] */;
  %738 = shape_of(%736, dtype="int32") /* ty=Tensor[(3), int32] */;
  %739 = cast(%736, dtype="int64") /* ty=Tensor[(7, 2, 15), int64] */;
  %740 = dyn.reshape(%737, %738, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %741 = %733.6;
  %742 = subtract(%739, %740) /* ty=Tensor[(7, 2, 15), int64] */;
  (%741, %var_7756, %var_7757, %var_7758, %742)
}

def @func_11922(%var_11897: Tensor[(405), float32], %var_11898: Tensor[(48), int32], %var_11909: Tensor[(560), int16], %var_11910: Tensor[(363), float32]) -> (Tensor[(7, 2, 15), float32], Tensor[(7, 2, 15), float32], Tensor[(7, 2, 15), int64], Tensor[(16, 6, 3), int64], Tensor[(588), uint8], Tensor[(405), float32], Tensor[(48), int32], Tensor[(15, 8, 7), uint32], Tensor[(11, 11, 3), float32], Tensor[(560), int16], Tensor[(363), float32]) {
  %743 = cast(meta[relay.Constant][68] /* ty=Tensor[(588), uint8] */, dtype="uint8") /* ty=Tensor[(588), uint8] */;
  %744 = cast(meta[relay.Constant][68] /* ty=Tensor[(588), uint8] */, dtype="uint8") /* ty=Tensor[(588), uint8] */;
  %745 = cast(meta[relay.Constant][68] /* ty=Tensor[(588), uint8] */, dtype="uint8") /* ty=Tensor[(588), uint8] */;
  %746 = cast(%var_11897, dtype="float32") /* ty=Tensor[(405), float32] */;
  %747 = cast(%var_11898, dtype="int32") /* ty=Tensor[(48), int32] */;
  %748 = reshape(%743, newshape=[6, 14, 7]) /* ty=Tensor[(6, 14, 7), uint8] */;
  %749 = reshape(%744, newshape=[6, 14, 7]) /* ty=Tensor[(6, 14, 7), uint8] */;
  %750 = reshape(%745, newshape=[6, 14, 7]) /* ty=Tensor[(6, 14, 7), uint8] */;
  %751 = reshape(%746, newshape=[405]) /* ty=Tensor[(405), float32] */;
  %752 = reshape(%747, newshape=[48]) /* ty=Tensor[(48), int32] */;
  %753 = @func_1762(%748, %749, %750, %751, %752) /* ty=(Tensor[(6, 14, 7), bool], Tensor[(6, 14, 7), uint8], Tensor[(16, 6, 3), int64], Tensor[(405), float32], Tensor[(288), int64], Tensor[(48), int32]) */;
  %754 = cast(meta[relay.Constant][68] /* ty=Tensor[(588), uint8] */, dtype="uint8") /* ty=Tensor[(588), uint8] */;
  %755 = reshape(%754, newshape=[588]) /* ty=Tensor[(588), uint8] */;
  %756 = @func_7556(%755) /* ty=(Tensor[(7, 2, 15), float32], Tensor[(15, 8, 7), uint32], Tensor[(420, 2), uint32], Tensor[(6, 14, 7), bool], Tensor[(588), uint8], Tensor[(135, 3), float32], Tensor[(48), int32]) */;
  %757 = cast(%var_11909, dtype="int16") /* ty=Tensor[(560), int16] */;
  %758 = cast(%var_11909, dtype="int16") /* ty=Tensor[(560), int16] */;
  %759 = cast(%var_11910, dtype="float32") /* ty=Tensor[(363), float32] */;
  %760 = reshape(%757, newshape=[7, 10, 8]) /* ty=Tensor[(7, 10, 8), int16] */;
  %761 = reshape(%758, newshape=[7, 10, 8]) /* ty=Tensor[(7, 10, 8), int16] */;
  %762 = reshape(%759, newshape=[363]) /* ty=Tensor[(363), float32] */;
  %763 = @func_9982(%760, %761, %762) /* ty=(Tensor[(7, 10, 8), int16], Tensor[(11, 11, 3), float32], Tensor[(363), float32]) */;
  %764 = @func_11129() /* ty=Tensor[(7, 2, 15), float32] */;
  %765 = @func_9428() /* ty=Tensor[(7, 2, 15), float32] */;
  %766 = @func_10102() /* ty=Tensor[(7, 2, 15), int64] */;
  %767 = %753.2;
  %768 = %756.1;
  %769 = %763.1;
  (%764, %765, %766, %767, meta[relay.Constant][68] /* ty=Tensor[(588), uint8] */, %var_11897, %var_11898, %768, %769, %var_11909, %var_11910)
}

def @func_4071(%var_4060: Tensor[(11, 11, 3), float32]) -> Tensor[(11, 11, 3), float32] {
  %770 = cast(%var_4060, dtype="float32") /* ty=Tensor[(11, 11, 3), float32] */;
  acosh(%770) /* ty=Tensor[(11, 11, 3), float32] */
}

def @func_2359(%var_2336: Tensor[(6, 1, 8), float64], %var_2337: Tensor[(6, 13, 8), float64], %var_2353: Tensor[(468), float32]) -> (Tensor[(6, 13, 8), float64], Tensor[(16, 6, 3), int64], Tensor[(3, 135), float32], Tensor[(288), int64], Tensor[(16, 6, 3), int64], Tensor[(13, 6, 6), bool], Tensor[(468), float32]) {
  %771 = cast(%var_2336, dtype="float64") /* ty=Tensor[(6, 1, 8), float64] */;
  %772 = cast(%var_2337, dtype="float64") /* ty=Tensor[(6, 13, 8), float64] */;
  %773 = cast(meta[relay.Constant][69] /* ty=Tensor[(3, 135), float32] */, dtype="float32") /* ty=Tensor[(3, 135), float32] */;
  %774 = cast(meta[relay.Constant][70] /* ty=Tensor[(288), int64] */, dtype="int64") /* ty=Tensor[(288), int64] */;
  %775 = cast(%var_2336, dtype="int32") /* ty=Tensor[(6, 1, 8), int32] */;
  %776 = reshape(%773, newshape=[15, 9, 3]) /* ty=Tensor[(15, 9, 3), float32] */;
  %777 = reshape(%774, newshape=[288]) /* ty=Tensor[(288), int64] */;
  %778 = reshape(%775, newshape=[48]) /* ty=Tensor[(48), int32] */;
  %779 = @func_1095(%776, %777, %778) /* ty=(Tensor[(15, 9, 3), float32], Tensor[(16, 6, 3), int64], Tensor[(288), int64], Tensor[(4, 4, 3), int16], Tensor[(48), int32]) */;
  %780 = cast(meta[relay.Constant][69] /* ty=Tensor[(3, 135), float32] */, dtype="float32") /* ty=Tensor[(3, 135), float32] */;
  %781 = cast(meta[relay.Constant][70] /* ty=Tensor[(288), int64] */, dtype="int64") /* ty=Tensor[(288), int64] */;
  %782 = cast(%var_2336, dtype="int32") /* ty=Tensor[(6, 1, 8), int32] */;
  %783 = reshape(%780, newshape=[15, 9, 3]) /* ty=Tensor[(15, 9, 3), float32] */;
  %784 = reshape(%781, newshape=[288]) /* ty=Tensor[(288), int64] */;
  %785 = reshape(%782, newshape=[48]) /* ty=Tensor[(48), int32] */;
  %786 = @func_1095(%783, %784, %785) /* ty=(Tensor[(15, 9, 3), float32], Tensor[(16, 6, 3), int64], Tensor[(288), int64], Tensor[(4, 4, 3), int16], Tensor[(48), int32]) */;
  %787 = cast(%var_2353, dtype="float32") /* ty=Tensor[(468), float32] */;
  %788 = reshape(%787, newshape=[468]) /* ty=Tensor[(468), float32] */;
  %789 = @func_1608(%788) /* ty=(Tensor[(9, 13, 15), float32], Tensor[(16, 6, 3), int64], Tensor[(8, 36), int64], Tensor[(13, 6, 6), bool], Tensor[(468), float32], Tensor[(9, 13, 15), float32]) */;
  %790 = divide(%771, %772) /* ty=Tensor[(6, 13, 8), float64] */;
  %791 = %779.1;
  %792 = %786.1;
  %793 = %789.3;
  (%790, %791, meta[relay.Constant][69] /* ty=Tensor[(3, 135), float32] */, meta[relay.Constant][70] /* ty=Tensor[(288), int64] */, %792, %793, %var_2353)
}

def @func_7173(%var_7166: Tensor[(468), float32], %var_7167: Tensor[(405), float32]) -> (Tensor[(7, 2, 15), float32], Tensor[(405), float32], Tensor[(25), float64], Tensor[(468), float32], Tensor[(405), float32]) {
  %794 = cast(meta[relay.Constant][71] /* ty=Tensor[(25), float64] */, dtype="float64") /* ty=Tensor[(25), float64] */;
  %795 = cast(%var_7166, dtype="float32") /* ty=Tensor[(468), float32] */;
  %796 = cast(%var_7167, dtype="float32") /* ty=Tensor[(405), float32] */;
  %797 = reshape(%794, newshape=[5, 1, 5]) /* ty=Tensor[(5, 1, 5), float64] */;
  %798 = reshape(%795, newshape=[6, 78]) /* ty=Tensor[(6, 78), float32] */;
  %799 = reshape(%796, newshape=[405]) /* ty=Tensor[(405), float32] */;
  %800 = @func_2535(%797, %798, %799) /* ty=(Tensor[(5, 1, 5), float64], Tensor[(5, 10, 14), bool], Tensor[(700), float32], Tensor[(5, 10, 14), bool], Tensor[(13, 6, 6), bool], Tensor[(6, 78), float32], Tensor[(13, 6, 6), bool], Tensor[(48), float64], Tensor[(624), float64], Tensor[(16, 6, 3), int64], Tensor[(1352), float64], Tensor[(405), float32], Tensor[(288), int64], Tensor[(2, 24), int32], Tensor[(15, 9, 3), float32], Tensor[(8, 36), int64]) */;
  %801 = @func_7115() /* ty=Tensor[(7, 2, 15), float32] */;
  %802 = %800.11;
  (%801, %802, meta[relay.Constant][71] /* ty=Tensor[(25), float64] */, %var_7166, %var_7167)
}

def @func_9223(%var_9185: Tensor[(2925), int64]) -> (Tensor[(13, 15, 15), int64], Tensor[(2925), int64], Tensor[(7, 2, 15), bool]) {
  %803 = cast(%var_9185, dtype="int64") /* ty=Tensor[(2925), int64] */;
  %804 = cast(%var_9185, dtype="int64") /* ty=Tensor[(2925), int64] */;
  %805 = reshape(%803, newshape=[13, 15, 15]) /* ty=Tensor[(13, 15, 15), int64] */;
  %806 = reshape(%804, newshape=[13, 15, 15]) /* ty=Tensor[(13, 15, 15), int64] */;
  %807 = @func_6569(%805, %806) /* ty=(Tensor[(13, 15, 15), int64],) */;
  %808 = @func_8702() /* ty=Tensor[(7, 2, 15), float32] */;
  %809 = cast(%808, dtype="float32") /* ty=Tensor[(7, 2, 15), float32] */;
  %810 = log10(%809) /* ty=Tensor[(7, 2, 15), float32] */;
  %811 = cast(%808, dtype="bool") /* ty=Tensor[(7, 2, 15), bool] */;
  %812 = shape_of(%810, dtype="int32") /* ty=Tensor[(3), int32] */;
  %813 = cast(%810, dtype="bool") /* ty=Tensor[(7, 2, 15), bool] */;
  %814 = dyn.reshape(%811, %812, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %815 = %807.0;
  %816 = logical_or(%813, %814) /* ty=Tensor[(7, 2, 15), bool] */;
  (%815, %var_9185, %816)
}

def @func_1124(%var_1110: Tensor[(13, 6, 6), float32]) -> (Tensor[(13, 6, 6), bool],) {
  %817 = cast(%var_1110, dtype="float32") /* ty=Tensor[(13, 6, 6), float32] */;
  %818 = tan(%817) /* ty=Tensor[(13, 6, 6), float32] */;
  %819 = cast(%818, dtype="float64") /* ty=Tensor[(13, 6, 6), float64] */;
  %820 = asinh(%819) /* ty=Tensor[(13, 6, 6), float64] */;
  %821 = cast(%818, dtype="bool") /* ty=Tensor[(13, 6, 6), bool] */;
  %822 = shape_of(%820, dtype="int32") /* ty=Tensor[(3), int32] */;
  %823 = cast(%820, dtype="bool") /* ty=Tensor[(13, 6, 6), bool] */;
  %824 = dyn.reshape(%821, %822, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %825 = greater(%823, %824) /* ty=Tensor[(13, 6, 6), bool] */;
  (%825,)
}

def @func_11641(%var_11595: Tensor[(1650), float64]) -> (Tensor[(7, 2, 15), float32], Tensor[(13, 15, 15), int64], Tensor[(1, 130), float32], Tensor[(1650), float64]) {
  %826 = @func_9833() /* ty=(Tensor[(7, 2, 15), float32],) */;
  %827 = cast(meta[relay.Constant][72] /* ty=Tensor[(1, 130), float32] */, dtype="float32") /* ty=Tensor[(1, 130), float32] */;
  %828 = cast(%var_11595, dtype="float64") /* ty=Tensor[(1650), float64] */;
  %829 = reshape(%827, newshape=[10, 1, 13]) /* ty=Tensor[(10, 1, 13), float32] */;
  %830 = reshape(%828, newshape=[1650]) /* ty=Tensor[(1650), float64] */;
  %831 = @func_7080(%829, %830) /* ty=(Tensor[(13, 15, 15), int64], Tensor[(2925), int64], Tensor[(2, 144), int64], Tensor[(1650), float64], Tensor[(10, 1, 13), float64], Tensor[(8, 5, 7), float32], Tensor[(10, 28), float64]) */;
  %832 = %826.0;
  %833 = %831.0;
  (%832, %833, meta[relay.Constant][72] /* ty=Tensor[(1, 130), float32] */, %var_11595)
}

def @func_9982(%var_9940: Tensor[(7, 10, 8), int16], %var_9941: Tensor[(7, 10, 8), int16], %var_9958: Tensor[(363), float32]) -> (Tensor[(7, 10, 8), int16], Tensor[(11, 11, 3), float32], Tensor[(363), float32]) {
  %834 = cast(%var_9941, dtype="int16") /* ty=Tensor[(7, 10, 8), int16] */;
  %835 = shape_of(%var_9940, dtype="int32") /* ty=Tensor[(3), int32] */;
  %836 = cast(%var_9940, dtype="int16") /* ty=Tensor[(7, 10, 8), int16] */;
  %837 = dyn.reshape(%834, %835, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %838 = cast(%var_9958, dtype="float32") /* ty=Tensor[(363), float32] */;
  %839 = reshape(%838, newshape=[11, 11, 3]) /* ty=Tensor[(11, 11, 3), float32] */;
  %840 = right_shift(%836, %837) /* ty=Tensor[(7, 10, 8), int16] */;
  %841 = @func_4071(%839) /* ty=Tensor[(11, 11, 3), float32] */;
  (%840, %841, %var_9958)
}

def @func_7238() -> (Tensor[(7, 2, 15), float32],) {
  %842 = @func_7115() /* ty=Tensor[(7, 2, 15), float32] */;
  (%842,)
}

def @func_6937(%var_6931: Tensor[(15, 8, 3), uint64]) -> (Tensor[(15, 8, 3), bool],) {
  %843 = cast(meta[relay.Constant][73] /* ty=Tensor[(15, 1, 3), uint64] */, dtype="bool") /* ty=Tensor[(15, 1, 3), bool] */;
  %844 = cast(%var_6931, dtype="bool") /* ty=Tensor[(15, 8, 3), bool] */;
  %845 = greater_equal(%843, %844) /* ty=Tensor[(15, 8, 3), bool] */;
  (%845,)
}

def @func_7879(%var_7822: Tensor[(1040), float32]) -> (Tensor[(7, 2, 15), float32], Tensor[(1040), float32]) {
  %846 = cast(%var_7822, dtype="float32") /* ty=Tensor[(1040), float32] */;
  %847 = cast(%var_7822, dtype="float32") /* ty=Tensor[(1040), float32] */;
  %848 = reshape(%846, newshape=[16, 5, 13]) /* ty=Tensor[(16, 5, 13), float32] */;
  %849 = reshape(%847, newshape=[16, 5, 13]) /* ty=Tensor[(16, 5, 13), float32] */;
  %850 = @func_5702(%848, %849) /* ty=(Tensor[(16, 5, 13), float32],) */;
  %851 = %850.0;
  %852 = cast(%851, dtype="int32") /* ty=Tensor[(16, 5, 13), int32] */;
  %853 = shape_of(%var_7822, dtype="int32") /* ty=Tensor[(1), int32] */;
  %854 = cast(%var_7822, dtype="int32") /* ty=Tensor[(1040), int32] */;
  %855 = dyn.reshape(%852, %853, newshape=[]) /* ty=Tensor[(?), int32] */;
  %856 = bitwise_xor(%854, %855) /* ty=Tensor[(1040), int32] */;
  %857 = cast(%856, dtype="float32") /* ty=Tensor[(1040), float32] */;
  %858 = @func_7115() /* ty=Tensor[(7, 2, 15), float32] */;
  %859 = cosh(%857) /* ty=Tensor[(1040), float32] */;
  (%858, %859)
}

def @func_8015() -> (Tensor[(7, 2, 15), float32],) {
  %860 = @func_7259() /* ty=Tensor[(7, 2, 15), float32] */;
  (%860,)
}

def @func_7721(%var_7706: Tensor[(2925), int64]) -> (Tensor[(9, 12, 12), float64], Tensor[(13, 15, 15), bool]) {
  %861 = cast(meta[relay.Constant][74] /* ty=Tensor[(9, 12, 12), float64] */, dtype="float64") /* ty=Tensor[(9, 12, 12), float64] */;
  %862 = cast(%var_7706, dtype="int64") /* ty=Tensor[(2925), int64] */;
  %863 = cast(%var_7706, dtype="int64") /* ty=Tensor[(2925), int64] */;
  %864 = reshape(%862, newshape=[13, 15, 15]) /* ty=Tensor[(13, 15, 15), int64] */;
  %865 = reshape(%863, newshape=[13, 15, 15]) /* ty=Tensor[(13, 15, 15), int64] */;
  %866 = @func_6569(%864, %865) /* ty=(Tensor[(13, 15, 15), int64],) */;
  %867 = %866.0;
  %868 = cast(%var_7706, dtype="bool") /* ty=Tensor[(2925), bool] */;
  %869 = shape_of(%867, dtype="int32") /* ty=Tensor[(3), int32] */;
  %870 = cast(%867, dtype="bool") /* ty=Tensor[(13, 15, 15), bool] */;
  %871 = dyn.reshape(%868, %869, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %872 = atan(%861) /* ty=Tensor[(9, 12, 12), float64] */;
  %873 = greater_equal(%870, %871) /* ty=Tensor[(13, 15, 15), bool] */;
  (%872, %873)
}

def @func_2100(%var_2076: Tensor[(8, 13, 13), float64], %var_2082: Tensor[(405), float32], %var_2083: Tensor[(8, 36), int64], %var_2084: Tensor[(2, 24), int32]) -> (Tensor[(8, 13, 13), float64], Tensor[(4, 4, 3), int16], Tensor[(405), float32], Tensor[(8, 36), int64], Tensor[(2, 24), int32], Tensor[(16, 6, 3), int64]) {
  %874 = cast(%var_2076, dtype="float64") /* ty=Tensor[(8, 13, 13), float64] */;
  %875 = cast(%var_2082, dtype="float32") /* ty=Tensor[(405), float32] */;
  %876 = cast(%var_2083, dtype="int64") /* ty=Tensor[(8, 36), int64] */;
  %877 = cast(%var_2084, dtype="int32") /* ty=Tensor[(2, 24), int32] */;
  %878 = reshape(%875, newshape=[15, 9, 3]) /* ty=Tensor[(15, 9, 3), float32] */;
  %879 = reshape(%876, newshape=[288]) /* ty=Tensor[(288), int64] */;
  %880 = reshape(%877, newshape=[48]) /* ty=Tensor[(48), int32] */;
  %881 = @func_1095(%878, %879, %880) /* ty=(Tensor[(15, 9, 3), float32], Tensor[(16, 6, 3), int64], Tensor[(288), int64], Tensor[(4, 4, 3), int16], Tensor[(48), int32]) */;
  %882 = cast(%var_2084, dtype="int32") /* ty=Tensor[(2, 24), int32] */;
  %883 = %881.3;
  %884 = cast(%883, dtype="int32") /* ty=Tensor[(4, 4, 3), int32] */;
  %885 = reshape(%882, newshape=[4, 4, 3]) /* ty=Tensor[(4, 4, 3), int32] */;
  %886 = reshape(%884, newshape=[4, 4, 3]) /* ty=Tensor[(4, 4, 3), int32] */;
  %887 = @func_664(%885, %886) /* ty=(Tensor[(4, 4, 3), int16], Tensor[(16, 6, 3), int64], Tensor[(288), int64]) */;
  %888 = log2(%874) /* ty=Tensor[(8, 13, 13), float64] */;
  %889 = %887.1;
  (%888, %883, %var_2082, %var_2083, %var_2084, %889)
}

def @func_1095(%var_1049: Tensor[(15, 9, 3), float32], %var_1064: Tensor[(288), int64], %var_1091: Tensor[(48), int32]) -> (Tensor[(15, 9, 3), float32], Tensor[(16, 6, 3), int64], Tensor[(288), int64], Tensor[(4, 4, 3), int16], Tensor[(48), int32]) {
  %890 = cast(%var_1049, dtype="float32") /* ty=Tensor[(15, 9, 3), float32] */;
  %891 = cast(%var_1064, dtype="int64") /* ty=Tensor[(288), int64] */;
  %892 = reshape(%891, newshape=[16, 6, 3]) /* ty=Tensor[(16, 6, 3), int64] */;
  %893 = cast(%var_1091, dtype="int32") /* ty=Tensor[(48), int32] */;
  %894 = cast(%var_1091, dtype="int32") /* ty=Tensor[(48), int32] */;
  %895 = reshape(%893, newshape=[4, 4, 3]) /* ty=Tensor[(4, 4, 3), int32] */;
  %896 = reshape(%894, newshape=[4, 4, 3]) /* ty=Tensor[(4, 4, 3), int32] */;
  %897 = @func_664(%895, %896) /* ty=(Tensor[(4, 4, 3), int16], Tensor[(16, 6, 3), int64], Tensor[(288), int64]) */;
  %898 = log2(%890) /* ty=Tensor[(15, 9, 3), float32] */;
  %899 = @func_21(%892) /* ty=Tensor[(16, 6, 3), int64] */;
  %900 = %897.0;
  (%898, %899, %var_1064, %900, %var_1091)
}

def @func_2535(%var_2476: Tensor[(5, 1, 5), float64], %var_2497: Tensor[(6, 78), float32], %var_2518: Tensor[(405), float32]) -> (Tensor[(5, 1, 5), float64], Tensor[(5, 10, 14), bool], Tensor[(700), float32], Tensor[(5, 10, 14), bool], Tensor[(13, 6, 6), bool], Tensor[(6, 78), float32], Tensor[(13, 6, 6), bool], Tensor[(48), float64], Tensor[(624), float64], Tensor[(16, 6, 3), int64], Tensor[(1352), float64], Tensor[(405), float32], Tensor[(288), int64], Tensor[(2, 24), int32], Tensor[(15, 9, 3), float32], Tensor[(8, 36), int64]) {
  %901 = cast(%var_2476, dtype="float64") /* ty=Tensor[(5, 1, 5), float64] */;
  %902 = cast(meta[relay.Constant][75] /* ty=Tensor[(700), float32] */, dtype="float32") /* ty=Tensor[(700), float32] */;
  %903 = cast(meta[relay.Constant][75] /* ty=Tensor[(700), float32] */, dtype="float32") /* ty=Tensor[(700), float32] */;
  %904 = reshape(%902, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), float32] */;
  %905 = reshape(%903, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), float32] */;
  %906 = @func_2415(%904, %905) /* ty=(Tensor[(5, 10, 14), bool],) */;
  %907 = %906.0;
  %908 = cast(%907, dtype="float32") /* ty=Tensor[(5, 10, 14), float32] */;
  %909 = cast(meta[relay.Constant][75] /* ty=Tensor[(700), float32] */, dtype="float32") /* ty=Tensor[(700), float32] */;
  %910 = reshape(%908, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), float32] */;
  %911 = reshape(%909, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), float32] */;
  %912 = @func_2415(%910, %911) /* ty=(Tensor[(5, 10, 14), bool],) */;
  %913 = cast(%var_2497, dtype="float32") /* ty=Tensor[(6, 78), float32] */;
  %914 = reshape(%913, newshape=[13, 6, 6]) /* ty=Tensor[(13, 6, 6), float32] */;
  %915 = @func_1124(%914) /* ty=(Tensor[(13, 6, 6), bool],) */;
  %916 = cast(meta[relay.Constant][76] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %917 = cast(meta[relay.Constant][77] /* ty=Tensor[(624), float64] */, dtype="float64") /* ty=Tensor[(624), float64] */;
  %918 = %915.0;
  %919 = cast(%918, dtype="float32") /* ty=Tensor[(13, 6, 6), float32] */;
  %920 = reshape(%916, newshape=[6, 1, 8]) /* ty=Tensor[(6, 1, 8), float64] */;
  %921 = reshape(%917, newshape=[6, 13, 8]) /* ty=Tensor[(6, 13, 8), float64] */;
  %922 = reshape(%919, newshape=[468]) /* ty=Tensor[(468), float32] */;
  %923 = @func_2359(%920, %921, %922) /* ty=(Tensor[(6, 13, 8), float64], Tensor[(16, 6, 3), int64], Tensor[(3, 135), float32], Tensor[(288), int64], Tensor[(16, 6, 3), int64], Tensor[(13, 6, 6), bool], Tensor[(468), float32]) */;
  %924 = cast(meta[relay.Constant][78] /* ty=Tensor[(1352), float64] */, dtype="float64") /* ty=Tensor[(1352), float64] */;
  %925 = cast(%var_2518, dtype="float32") /* ty=Tensor[(405), float32] */;
  %926 = cast(meta[relay.Constant][79] /* ty=Tensor[(288), int64] */, dtype="int64") /* ty=Tensor[(288), int64] */;
  %927 = cast(meta[relay.Constant][76] /* ty=Tensor[(48), float64] */, dtype="int32") /* ty=Tensor[(48), int32] */;
  %928 = reshape(%924, newshape=[8, 13, 13]) /* ty=Tensor[(8, 13, 13), float64] */;
  %929 = reshape(%925, newshape=[405]) /* ty=Tensor[(405), float32] */;
  %930 = reshape(%926, newshape=[8, 36]) /* ty=Tensor[(8, 36), int64] */;
  %931 = reshape(%927, newshape=[2, 24]) /* ty=Tensor[(2, 24), int32] */;
  %932 = @func_2100(%928, %929, %930, %931) /* ty=(Tensor[(8, 13, 13), float64], Tensor[(4, 4, 3), int16], Tensor[(405), float32], Tensor[(8, 36), int64], Tensor[(2, 24), int32], Tensor[(16, 6, 3), int64]) */;
  %933 = cast(meta[relay.Constant][78] /* ty=Tensor[(1352), float64] */, dtype="float64") /* ty=Tensor[(1352), float64] */;
  %934 = cast(%var_2518, dtype="float32") /* ty=Tensor[(405), float32] */;
  %935 = %932.5;
  %936 = cast(%935, dtype="int64") /* ty=Tensor[(16, 6, 3), int64] */;
  %937 = cast(meta[relay.Constant][76] /* ty=Tensor[(48), float64] */, dtype="int32") /* ty=Tensor[(48), int32] */;
  %938 = reshape(%933, newshape=[8, 13, 13]) /* ty=Tensor[(8, 13, 13), float64] */;
  %939 = reshape(%934, newshape=[405]) /* ty=Tensor[(405), float32] */;
  %940 = reshape(%936, newshape=[8, 36]) /* ty=Tensor[(8, 36), int64] */;
  %941 = reshape(%937, newshape=[2, 24]) /* ty=Tensor[(2, 24), int32] */;
  %942 = @func_2100(%938, %939, %940, %941) /* ty=(Tensor[(8, 13, 13), float64], Tensor[(4, 4, 3), int16], Tensor[(405), float32], Tensor[(8, 36), int64], Tensor[(2, 24), int32], Tensor[(16, 6, 3), int64]) */;
  %943 = cast(%var_2518, dtype="float32") /* ty=Tensor[(405), float32] */;
  %944 = cast(meta[relay.Constant][79] /* ty=Tensor[(288), int64] */, dtype="int64") /* ty=Tensor[(288), int64] */;
  %945 = cast(meta[relay.Constant][76] /* ty=Tensor[(48), float64] */, dtype="int32") /* ty=Tensor[(48), int32] */;
  %946 = reshape(%943, newshape=[15, 9, 3]) /* ty=Tensor[(15, 9, 3), float32] */;
  %947 = reshape(%944, newshape=[288]) /* ty=Tensor[(288), int64] */;
  %948 = reshape(%945, newshape=[48]) /* ty=Tensor[(48), int32] */;
  %949 = @func_1095(%946, %947, %948) /* ty=(Tensor[(15, 9, 3), float32], Tensor[(16, 6, 3), int64], Tensor[(288), int64], Tensor[(4, 4, 3), int16], Tensor[(48), int32]) */;
  %950 = cast(meta[relay.Constant][78] /* ty=Tensor[(1352), float64] */, dtype="float64") /* ty=Tensor[(1352), float64] */;
  %951 = cast(%var_2518, dtype="float32") /* ty=Tensor[(405), float32] */;
  %952 = cast(meta[relay.Constant][79] /* ty=Tensor[(288), int64] */, dtype="int64") /* ty=Tensor[(288), int64] */;
  %953 = cast(meta[relay.Constant][76] /* ty=Tensor[(48), float64] */, dtype="int32") /* ty=Tensor[(48), int32] */;
  %954 = reshape(%950, newshape=[8, 13, 13]) /* ty=Tensor[(8, 13, 13), float64] */;
  %955 = reshape(%951, newshape=[405]) /* ty=Tensor[(405), float32] */;
  %956 = reshape(%952, newshape=[8, 36]) /* ty=Tensor[(8, 36), int64] */;
  %957 = reshape(%953, newshape=[2, 24]) /* ty=Tensor[(2, 24), int32] */;
  %958 = @func_2100(%954, %955, %956, %957) /* ty=(Tensor[(8, 13, 13), float64], Tensor[(4, 4, 3), int16], Tensor[(405), float32], Tensor[(8, 36), int64], Tensor[(2, 24), int32], Tensor[(16, 6, 3), int64]) */;
  %959 = sin(%901) /* ty=Tensor[(5, 1, 5), float64] */;
  %960 = %912.0;
  %961 = %923.5;
  %962 = %942.4;
  %963 = %949.0;
  %964 = %958.3;
  (%959, %907, meta[relay.Constant][75] /* ty=Tensor[(700), float32] */, %960, %918, %var_2497, %961, meta[relay.Constant][76] /* ty=Tensor[(48), float64] */, meta[relay.Constant][77] /* ty=Tensor[(624), float64] */, %935, meta[relay.Constant][78] /* ty=Tensor[(1352), float64] */, %var_2518, meta[relay.Constant][79] /* ty=Tensor[(288), int64] */, %962, %963, %964)
}

def @func_2688(%var_2685: Tensor[(4, 13, 9), float32]) -> Tensor[(4, 13, 9), float32] {
  %965 = cast(%var_2685, dtype="float32") /* ty=Tensor[(4, 13, 9), float32] */;
  log10(%965) /* ty=Tensor[(4, 13, 9), float32] */
}

def @func_7331() -> (Tensor[(7, 2, 15), float32],) {
  %966 = @func_7238() /* ty=(Tensor[(7, 2, 15), float32],) */;
  %967 = %966.0;
  (%967,)
}

def @func_8132(%var_8115: int8, %var_8127: Tensor[(588), uint8]) -> (Tensor[(7, 2, 15), float32], Tensor[(3, 156), float32], int8, Tensor[(9), int8], Tensor[(420, 2), uint32], Tensor[(588), uint8]) {
  %968 = @func_7331() /* ty=(Tensor[(7, 2, 15), float32],) */;
  %969 = cast(%var_8115, dtype="int8") /* ty=int8 */;
  %970 = cast(meta[relay.Constant][80] /* ty=Tensor[(9), int8] */, dtype="int8") /* ty=Tensor[(9), int8] */;
  %971 = reshape(%969, newshape=[]) /* ty=int8 */;
  %972 = reshape(%970, newshape=[1, 9]) /* ty=Tensor[(1, 9), int8] */;
  %973 = @func_6491(%971, %972) /* ty=(Tensor[(1, 9), int8], Tensor[(4, 13, 9), float32], Tensor[(3, 156), float32]) */;
  %974 = cast(%var_8127, dtype="uint8") /* ty=Tensor[(588), uint8] */;
  %975 = reshape(%974, newshape=[588]) /* ty=Tensor[(588), uint8] */;
  %976 = @func_7556(%975) /* ty=(Tensor[(7, 2, 15), float32], Tensor[(15, 8, 7), uint32], Tensor[(420, 2), uint32], Tensor[(6, 14, 7), bool], Tensor[(588), uint8], Tensor[(135, 3), float32], Tensor[(48), int32]) */;
  %977 = %968.0;
  %978 = %973.2;
  %979 = %976.2;
  (%977, %978, %var_8115, meta[relay.Constant][80] /* ty=Tensor[(9), int8] */, %979, %var_8127)
}

def @func_664(%var_648: Tensor[(4, 4, 3), int32], %var_649: Tensor[(4, 4, 3), int32]) -> (Tensor[(4, 4, 3), int16], Tensor[(16, 6, 3), int64], Tensor[(288), int64]) {
  %980 = cast(%var_649, dtype="int32") /* ty=Tensor[(4, 4, 3), int32] */;
  %981 = shape_of(%var_648, dtype="int32") /* ty=Tensor[(3), int32] */;
  %982 = cast(%var_648, dtype="int32") /* ty=Tensor[(4, 4, 3), int32] */;
  %983 = dyn.reshape(%980, %981, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %984 = subtract(%982, %983) /* ty=Tensor[(4, 4, 3), int32] */;
  %985 = cast(%984, dtype="int16") /* ty=Tensor[(4, 4, 3), int16] */;
  %986 = shape_of(%var_649, dtype="int32") /* ty=Tensor[(3), int32] */;
  %987 = cast(%var_649, dtype="int16") /* ty=Tensor[(4, 4, 3), int16] */;
  %988 = dyn.reshape(%985, %986, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %989 = cast(meta[relay.Constant][81] /* ty=Tensor[(288), int64] */, dtype="int64") /* ty=Tensor[(288), int64] */;
  %990 = reshape(%989, newshape=[16, 6, 3]) /* ty=Tensor[(16, 6, 3), int64] */;
  %991 = bitwise_and(%987, %988) /* ty=Tensor[(4, 4, 3), int16] */;
  %992 = @func_21(%990) /* ty=Tensor[(16, 6, 3), int64] */;
  (%991, %992, meta[relay.Constant][81] /* ty=Tensor[(288), int64] */)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_10644(%var_10642: Tensor[(135, 3), float32], %var_10643: Tensor[(48), int32]) -> (Tensor[(8, 36), int64], Tensor[(1352), float64], Tensor[(135, 3), float32], Tensor[(8, 36), int64], Tensor[(48), int32], Tensor[(4, 13, 9), float32], Tensor[(468), float32], Tensor[(7, 2, 15), float64], Tensor[(13, 11, 8), float64], Tensor[(1144), float64]) {
  @func_10640(%var_10642, %var_10643) /* ty=(Tensor[(8, 36), int64], Tensor[(1352), float64], Tensor[(135, 3), float32], Tensor[(8, 36), int64], Tensor[(48), int32], Tensor[(4, 13, 9), float32], Tensor[(468), float32], Tensor[(7, 2, 15), float64], Tensor[(13, 11, 8), float64], Tensor[(1144), float64]) */
}

def @func_4618(%var_4613: Tensor[(6, 12, 15), float32]) -> Tensor[(6, 12, 15), float32] {
  %0 = cast(%var_4613, dtype="float32") /* ty=Tensor[(6, 12, 15), float32] */;
  atanh(%0) /* ty=Tensor[(6, 12, 15), float32] */
}

def @func_9489() -> (Tensor[(7, 2, 15), float32], Tensor[(9, 3, 10), float64], Tensor[(13, 15, 15), int64], Tensor[(975, 3), int64]) {
  %12 = fn () -> (Tensor[(7, 2, 15), float32], Tensor[(9, 3, 10), float64], Tensor[(13, 15, 15), int64], Tensor[(975, 3), int64]) {
    %1 = @func_9052() /* ty=(Tensor[(7, 2, 15), float32],) */;
    %2 = %1.0;
    %3 = cast(%2, dtype="float32") /* ty=Tensor[(7, 2, 15), float32] */;
    %4 = cast(meta[relay.Constant][0] /* ty=Tensor[(975, 3), int64] */, dtype="int64") /* ty=Tensor[(975, 3), int64] */;
    %5 = cast(meta[relay.Constant][0] /* ty=Tensor[(975, 3), int64] */, dtype="int64") /* ty=Tensor[(975, 3), int64] */;
    %6 = reshape(%4, newshape=[13, 15, 15]) /* ty=Tensor[(13, 15, 15), int64] */;
    %7 = reshape(%5, newshape=[13, 15, 15]) /* ty=Tensor[(13, 15, 15), int64] */;
    %8 = @func_6569(%6, %7) /* ty=(Tensor[(13, 15, 15), int64],) */;
    %9 = atan(%3) /* ty=Tensor[(7, 2, 15), float32] */;
    %10 = @func_9296() /* ty=Tensor[(9, 3, 10), float64] */;
    %11 = %8.0;
    (%9, %10, %11, meta[relay.Constant][0] /* ty=Tensor[(975, 3), int64] */)
  };
  %12() /* ty=(Tensor[(7, 2, 15), float32], Tensor[(9, 3, 10), float64], Tensor[(13, 15, 15), int64], Tensor[(975, 3), int64]) */
}

def @func_12097(%var_12066: Tensor[(7, 2, 15), float32], %var_12075: Tensor[(1144), float64], %var_12076: Tensor[(560), int16]) -> (Tensor[(7, 2, 15), bool], Tensor[(280, 2), float32], Tensor[(1144), float64], Tensor[(560), int16], Tensor[(7, 2, 15), float32]) {
  %13 = @func_7506() /* ty=(Tensor[(7, 2, 15), float32], Tensor[(7, 2, 15), float32]) */;
  %14 = %13.1;
  %15 = cast(%var_12066, dtype="bool") /* ty=Tensor[(7, 2, 15), bool] */;
  %16 = shape_of(%14, dtype="int32") /* ty=Tensor[(3), int32] */;
  %17 = cast(%14, dtype="bool") /* ty=Tensor[(7, 2, 15), bool] */;
  %18 = dyn.reshape(%15, %16, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %19 = cast(%var_12075, dtype="float64") /* ty=Tensor[(1144), float64] */;
  %20 = cast(%var_12076, dtype="int16") /* ty=Tensor[(560), int16] */;
  %21 = reshape(%19, newshape=[1144]) /* ty=Tensor[(1144), float64] */;
  %22 = reshape(%20, newshape=[280, 2]) /* ty=Tensor[(280, 2), int16] */;
  %23 = @func_11099(%21, %22) /* ty=(Tensor[(7, 2, 15), float32], Tensor[(13, 11, 8), float64], Tensor[(1144), float64], Tensor[(11, 11, 3), float32], Tensor[(363, 1), float32], Tensor[(280, 2), float32]) */;
  %24 = logical_and(%17, %18) /* ty=Tensor[(7, 2, 15), bool] */;
  %25 = %23.5;
  %26 = @func_8437() /* ty=Tensor[(7, 2, 15), float32] */;
  (%24, %25, %var_12075, %var_12076, %26)
}

def @func_11039(%var_10996: Tensor[(48), int32], %var_11035: Tensor[(130), float32], %var_11036: Tensor[(1650), float64]) -> (Tensor[(7, 2, 15), float32], Tensor[(1, 48), int32], Tensor[(48), int32], Tensor[(468, 1), float32], Tensor[(6, 78), float32], Tensor[(8, 5, 7), float32], Tensor[(130), float32], Tensor[(1650), float64]) {
  %27 = @func_8015() /* ty=(Tensor[(7, 2, 15), float32],) */;
  %28 = cast(%var_10996, dtype="int32") /* ty=Tensor[(48), int32] */;
  %29 = reshape(%28, newshape=[1, 48]) /* ty=Tensor[(1, 48), int32] */;
  %30 = @func_8161(%29) /* ty=(Tensor[(7, 2, 15), float32], Tensor[(6, 14, 7), uint8], Tensor[(588), uint8], Tensor[(9, 45), float32], Tensor[(1, 48), int32], Tensor[(7, 2, 15), float32]) */;
  %31 = cast(meta[relay.Constant][1] /* ty=Tensor[(6, 78), float32] */, dtype="float32") /* ty=Tensor[(6, 78), float32] */;
  %32 = reshape(%31, newshape=[468, 1]) /* ty=Tensor[(468, 1), float32] */;
  %33 = @func_10223(%32) /* ty=(Tensor[(7, 2, 15), float32], Tensor[(11, 4, 14), float64], Tensor[(16, 6, 3), int64], Tensor[(48), int32], Tensor[(7, 2, 15), float32], Tensor[(4, 13, 9), float32], Tensor[(468, 1), float32]) */;
  %34 = cast(%var_11035, dtype="float32") /* ty=Tensor[(130), float32] */;
  %35 = cast(%var_11036, dtype="float64") /* ty=Tensor[(1650), float64] */;
  %36 = reshape(%34, newshape=[10, 1, 13]) /* ty=Tensor[(10, 1, 13), float32] */;
  %37 = reshape(%35, newshape=[1650]) /* ty=Tensor[(1650), float64] */;
  %38 = @func_7080(%36, %37) /* ty=(Tensor[(13, 15, 15), int64], Tensor[(2925), int64], Tensor[(2, 144), int64], Tensor[(1650), float64], Tensor[(10, 1, 13), float64], Tensor[(8, 5, 7), float32], Tensor[(10, 28), float64]) */;
  %39 = %27.0;
  %40 = %30.4;
  %41 = %33.6;
  %42 = %38.5;
  (%39, %40, %var_10996, %41, meta[relay.Constant][1] /* ty=Tensor[(6, 78), float32] */, %42, %var_11035, %var_11036)
}

def @func_11643(%var_11642: Tensor[(1650), float64]) -> (Tensor[(7, 2, 15), float32], Tensor[(13, 15, 15), int64], Tensor[(1, 130), float32], Tensor[(1650), float64]) {
  %51 = fn (%var_11595: Tensor[(1650), float64]) -> (Tensor[(7, 2, 15), float32], Tensor[(13, 15, 15), int64], Tensor[(1, 130), float32], Tensor[(1650), float64]) {
    %43 = @func_9833() /* ty=(Tensor[(7, 2, 15), float32],) */;
    %44 = cast(meta[relay.Constant][2] /* ty=Tensor[(1, 130), float32] */, dtype="float32") /* ty=Tensor[(1, 130), float32] */;
    %45 = cast(%var_11595, dtype="float64") /* ty=Tensor[(1650), float64] */;
    %46 = reshape(%44, newshape=[10, 1, 13]) /* ty=Tensor[(10, 1, 13), float32] */;
    %47 = reshape(%45, newshape=[1650]) /* ty=Tensor[(1650), float64] */;
    %48 = @func_7080(%46, %47) /* ty=(Tensor[(13, 15, 15), int64], Tensor[(2925), int64], Tensor[(2, 144), int64], Tensor[(1650), float64], Tensor[(10, 1, 13), float64], Tensor[(8, 5, 7), float32], Tensor[(10, 28), float64]) */;
    %49 = %43.0;
    %50 = %48.0;
    (%49, %50, meta[relay.Constant][2] /* ty=Tensor[(1, 130), float32] */, %var_11595)
  };
  %51(%var_11642) /* ty=(Tensor[(7, 2, 15), float32], Tensor[(13, 15, 15), int64], Tensor[(1, 130), float32], Tensor[(1650), float64]) */
}

def @func_11369(%var_11367: Tensor[(588), uint8], %var_11368: Tensor[(405), float32]) -> (Tensor[(7, 2, 15), float32], Tensor[(48), int32], Tensor[(588), uint8], Tensor[(48), int32], Tensor[(405), float64]) {
  @func_11365(%var_11367, %var_11368) /* ty=(Tensor[(7, 2, 15), float32], Tensor[(48), int32], Tensor[(588), uint8], Tensor[(48), int32], Tensor[(405), float64]) */
}

def @func_11365(%var_11355: Tensor[(588), uint8], %var_11356: Tensor[(405), float32]) -> (Tensor[(7, 2, 15), float32], Tensor[(48), int32], Tensor[(588), uint8], Tensor[(48), int32], Tensor[(405), float64]) {
  %52 = @func_7331() /* ty=(Tensor[(7, 2, 15), float32],) */;
  %53 = cast(%var_11355, dtype="uint8") /* ty=Tensor[(588), uint8] */;
  %54 = cast(%var_11355, dtype="uint8") /* ty=Tensor[(588), uint8] */;
  %55 = cast(%var_11355, dtype="uint8") /* ty=Tensor[(588), uint8] */;
  %56 = cast(%var_11356, dtype="float32") /* ty=Tensor[(405), float32] */;
  %57 = cast(meta[relay.Constant][3] /* ty=Tensor[(48), int32] */, dtype="int32") /* ty=Tensor[(48), int32] */;
  %58 = reshape(%53, newshape=[6, 14, 7]) /* ty=Tensor[(6, 14, 7), uint8] */;
  %59 = reshape(%54, newshape=[6, 14, 7]) /* ty=Tensor[(6, 14, 7), uint8] */;
  %60 = reshape(%55, newshape=[6, 14, 7]) /* ty=Tensor[(6, 14, 7), uint8] */;
  %61 = reshape(%56, newshape=[405]) /* ty=Tensor[(405), float32] */;
  %62 = reshape(%57, newshape=[48]) /* ty=Tensor[(48), int32] */;
  %63 = @func_1762(%58, %59, %60, %61, %62) /* ty=(Tensor[(6, 14, 7), bool], Tensor[(6, 14, 7), uint8], Tensor[(16, 6, 3), int64], Tensor[(405), float32], Tensor[(288), int64], Tensor[(48), int32]) */;
  %64 = cast(%var_11356, dtype="float64") /* ty=Tensor[(405), float64] */;
  %65 = %52.0;
  %66 = %63.5;
  %67 = sinh(%64) /* ty=Tensor[(405), float64] */;
  (%65, %66, %var_11355, meta[relay.Constant][3] /* ty=Tensor[(48), int32] */, %67)
}

def @main(%var_12116: float64, %var_12117: Tensor[(15, 16, 14), float64]) -> (Tensor[(15, 16, 14), bool], Tensor[(15, 16, 14), uint64]) {
  %68 = cast(%var_12116, dtype="bool") /* ty=bool */;
  %69 = cast(%var_12117, dtype="bool") /* ty=Tensor[(15, 16, 14), bool] */;
  %70 = cast(%var_12117, dtype="uint64") /* ty=Tensor[(15, 16, 14), uint64] */;
  %71 = cast(%var_12116, dtype="uint64") /* ty=uint64 */;
  %72 = equal(%68, %69) /* ty=Tensor[(15, 16, 14), bool] */;
  %73 = add(%70, %71) /* ty=Tensor[(15, 16, 14), uint64] */;
  (%72, %73)
}

def @func_8319() -> Tensor[(7, 2, 15), float32] {
  @func_8317() /* ty=Tensor[(7, 2, 15), float32] */
}

def @func_7724(%var_7722: Tensor[(2925), int64]) -> (Tensor[(9, 12, 12), float64], Tensor[(13, 15, 15), bool]) {
  @func_7721(%var_7722) /* ty=(Tensor[(9, 12, 12), float64], Tensor[(13, 15, 15), bool]) */
}

def @func_4706(%var_4705: Tensor[(15, 10, 11), float64]) -> (Tensor[(15, 10, 11), float64], Tensor[(16, 6, 3), int64], Tensor[(2, 144), int64]) {
  %79 = fn (%var_4689: Tensor[(15, 10, 11), float64]) -> (Tensor[(15, 10, 11), float64], Tensor[(16, 6, 3), int64], Tensor[(2, 144), int64]) {
    %74 = cast(%var_4689, dtype="float64") /* ty=Tensor[(15, 10, 11), float64] */;
    %75 = cast(meta[relay.Constant][4] /* ty=Tensor[(2, 144), int64] */, dtype="int64") /* ty=Tensor[(2, 144), int64] */;
    %76 = reshape(%75, newshape=[16, 6, 3]) /* ty=Tensor[(16, 6, 3), int64] */;
    %77 = atan(%74) /* ty=Tensor[(15, 10, 11), float64] */;
    %78 = @func_21(%76) /* ty=Tensor[(16, 6, 3), int64] */;
    (%77, %78, meta[relay.Constant][4] /* ty=Tensor[(2, 144), int64] */)
  };
  %79(%var_4705) /* ty=(Tensor[(15, 10, 11), float64], Tensor[(16, 6, 3), int64], Tensor[(2, 144), int64]) */
}

def @func_12102(%var_12099: Tensor[(7, 2, 15), float32], %var_12100: Tensor[(1144), float64], %var_12101: Tensor[(560), int16]) -> (Tensor[(7, 2, 15), bool], Tensor[(280, 2), float32], Tensor[(1144), float64], Tensor[(560), int16], Tensor[(7, 2, 15), float32]) {
  @func_12097(%var_12099, %var_12100, %var_12101) /* ty=(Tensor[(7, 2, 15), bool], Tensor[(280, 2), float32], Tensor[(1144), float64], Tensor[(560), int16], Tensor[(7, 2, 15), float32]) */
}

def @func_10756() -> (Tensor[(7, 2, 15), float32], Tensor[(9, 13, 15), float32], Tensor[(468), float32]) {
  @func_10754() /* ty=(Tensor[(7, 2, 15), float32], Tensor[(9, 13, 15), float32], Tensor[(468), float32]) */
}

def @func_5250(%var_5248: Tensor[(1, 15, 4), float32], %var_5249: Tensor[(25), float64]) -> (Tensor[(1, 15, 4), float32], Tensor[(15, 9, 3), float32], Tensor[(25), float64], Tensor[(468), float32], Tensor[(405), float32]) {
  @func_5246(%var_5248, %var_5249) /* ty=(Tensor[(1, 15, 4), float32], Tensor[(15, 9, 3), float32], Tensor[(25), float64], Tensor[(468), float32], Tensor[(405), float32]) */
}

def @func_11727(%var_11725: Tensor[(9, 3, 10), float64], %var_11726: Tensor[(2, 144), int64]) -> (Tensor[(16, 6, 3), int64], Tensor[(2, 144), int64], Tensor[(7, 2, 15), float32], Tensor[(9, 3, 10), bool]) {
  @func_11723(%var_11725, %var_11726) /* ty=(Tensor[(16, 6, 3), int64], Tensor[(2, 144), int64], Tensor[(7, 2, 15), float32], Tensor[(9, 3, 10), bool]) */
}

def @func_2415(%var_2392: Tensor[(5, 10, 14), float32], %var_2406: Tensor[(5, 10, 14), float32]) -> (Tensor[(5, 10, 14), bool],) {
  %80 = cast(%var_2392, dtype="float32") /* ty=Tensor[(5, 10, 14), float32] */;
  %81 = log10(%80) /* ty=Tensor[(5, 10, 14), float32] */;
  %82 = cast(%var_2406, dtype="bool") /* ty=Tensor[(5, 10, 14), bool] */;
  %83 = shape_of(%81, dtype="int32") /* ty=Tensor[(3), int32] */;
  %84 = cast(%81, dtype="bool") /* ty=Tensor[(5, 10, 14), bool] */;
  %85 = dyn.reshape(%82, %83, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %86 = logical_or(%84, %85) /* ty=Tensor[(5, 10, 14), bool] */;
  (%86,)
}

def @func_9052() -> (Tensor[(7, 2, 15), float32],) {
  %87 = @func_8747() /* ty=Tensor[(7, 2, 15), float32] */;
  (%87,)
}

def @func_9876() -> (Tensor[(7, 2, 15), float32], Tensor[(7, 2, 15), float32], Tensor[(16, 5, 13), float32], Tensor[(1040), float32]) {
  %88 = @func_7238() /* ty=(Tensor[(7, 2, 15), float32],) */;
  %89 = cast(meta[relay.Constant][5] /* ty=Tensor[(1040), float32] */, dtype="float32") /* ty=Tensor[(1040), float32] */;
  %90 = cast(meta[relay.Constant][5] /* ty=Tensor[(1040), float32] */, dtype="float32") /* ty=Tensor[(1040), float32] */;
  %91 = reshape(%89, newshape=[16, 5, 13]) /* ty=Tensor[(16, 5, 13), float32] */;
  %92 = reshape(%90, newshape=[16, 5, 13]) /* ty=Tensor[(16, 5, 13), float32] */;
  %93 = @func_5702(%91, %92) /* ty=(Tensor[(16, 5, 13), float32],) */;
  %94 = %88.0;
  %95 = @func_8291() /* ty=Tensor[(7, 2, 15), float32] */;
  %96 = %93.0;
  (%94, %95, %96, meta[relay.Constant][5] /* ty=Tensor[(1040), float32] */)
}

def @func_11861(%var_11810: Tensor[(700), float32]) -> (Tensor[(9, 3, 10), float64], Tensor[(700), float32], Tensor[(48), int32], Tensor[(7, 2, 15), float32], Tensor[(45, 9), bool], Tensor[(7, 2, 15), float32]) {
  %97 = @func_11293() /* ty=(Tensor[(9, 3, 10), float64],) */;
  %98 = cast(%var_11810, dtype="float32") /* ty=Tensor[(700), float32] */;
  %99 = cast(meta[relay.Constant][7] /* ty=Tensor[(45, 9), float32] */, dtype="float32") /* ty=Tensor[(45, 9), float32] */;
  %100 = cast(meta[relay.Constant][6] /* ty=Tensor[(48), int32] */, dtype="int32") /* ty=Tensor[(48), int32] */;
  %101 = reshape(%98, newshape=[700]) /* ty=Tensor[(700), float32] */;
  %102 = reshape(%99, newshape=[1, 405]) /* ty=Tensor[(1, 405), float32] */;
  %103 = reshape(%100, newshape=[48]) /* ty=Tensor[(48), int32] */;
  %104 = @func_3901(%101, %102, %103) /* ty=(Tensor[(1, 16, 16), float32], Tensor[(5, 10, 14), bool], Tensor[(700), float32], Tensor[(8, 13, 13), float64], Tensor[(26, 52), float64], Tensor[(1, 405), float32], Tensor[(288), int64], Tensor[(48), int32]) */;
  %105 = %104.5;
  %106 = cast(%105, dtype="uint16") /* ty=Tensor[(1, 405), uint16] */;
  %107 = shape_of(meta[relay.Constant][7] /* ty=Tensor[(45, 9), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %108 = cast(meta[relay.Constant][7] /* ty=Tensor[(45, 9), float32] */, dtype="uint16") /* ty=Tensor[(45, 9), uint16] */;
  %109 = dyn.reshape(%106, %107, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %110 = bitwise_xor(%108, %109) /* ty=Tensor[(45, 9), uint16] */;
  %111 = cast(meta[relay.Constant][7] /* ty=Tensor[(45, 9), float32] */, dtype="bool") /* ty=Tensor[(45, 9), bool] */;
  %112 = shape_of(%110, dtype="int32") /* ty=Tensor[(2), int32] */;
  %113 = cast(%110, dtype="bool") /* ty=Tensor[(45, 9), bool] */;
  %114 = dyn.reshape(%111, %112, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %115 = @func_8015() /* ty=(Tensor[(7, 2, 15), float32],) */;
  %116 = %97.0;
  %117 = @func_8702() /* ty=Tensor[(7, 2, 15), float32] */;
  %118 = equal(%113, %114) /* ty=Tensor[(45, 9), bool] */;
  %119 = %115.0;
  (%116, %var_11810, meta[relay.Constant][6] /* ty=Tensor[(48), int32] */, %117, %118, %119)
}

def @func_6491(%var_6474: int8, %var_6475: Tensor[(1, 9), int8]) -> (Tensor[(1, 9), int8], Tensor[(4, 13, 9), float32], Tensor[(3, 156), float32]) {
  %120 = cast(%var_6474, dtype="int8") /* ty=int8 */;
  %121 = cast(%var_6475, dtype="int8") /* ty=Tensor[(1, 9), int8] */;
  %122 = cast(meta[relay.Constant][8] /* ty=Tensor[(3, 156), float32] */, dtype="float32") /* ty=Tensor[(3, 156), float32] */;
  %123 = reshape(%122, newshape=[4, 13, 9]) /* ty=Tensor[(4, 13, 9), float32] */;
  %124 = subtract(%120, %121) /* ty=Tensor[(1, 9), int8] */;
  %125 = @func_2688(%123) /* ty=Tensor[(4, 13, 9), float32] */;
  (%124, %125, meta[relay.Constant][8] /* ty=Tensor[(3, 156), float32] */)
}

def @func_9987(%var_9984: Tensor[(7, 10, 8), int16], %var_9985: Tensor[(7, 10, 8), int16], %var_9986: Tensor[(363), float32]) -> (Tensor[(7, 10, 8), int16], Tensor[(11, 11, 3), float32], Tensor[(363), float32]) {
  @func_9982(%var_9984, %var_9985, %var_9986) /* ty=(Tensor[(7, 10, 8), int16], Tensor[(11, 11, 3), float32], Tensor[(363), float32]) */
}

def @func_2359(%var_2336: Tensor[(6, 1, 8), float64], %var_2337: Tensor[(6, 13, 8), float64], %var_2353: Tensor[(468), float32]) -> (Tensor[(6, 13, 8), float64], Tensor[(16, 6, 3), int64], Tensor[(3, 135), float32], Tensor[(288), int64], Tensor[(16, 6, 3), int64], Tensor[(13, 6, 6), bool], Tensor[(468), float32]) {
  %126 = cast(%var_2336, dtype="float64") /* ty=Tensor[(6, 1, 8), float64] */;
  %127 = cast(%var_2337, dtype="float64") /* ty=Tensor[(6, 13, 8), float64] */;
  %128 = cast(meta[relay.Constant][9] /* ty=Tensor[(3, 135), float32] */, dtype="float32") /* ty=Tensor[(3, 135), float32] */;
  %129 = cast(meta[relay.Constant][10] /* ty=Tensor[(288), int64] */, dtype="int64") /* ty=Tensor[(288), int64] */;
  %130 = cast(%var_2336, dtype="int32") /* ty=Tensor[(6, 1, 8), int32] */;
  %131 = reshape(%128, newshape=[15, 9, 3]) /* ty=Tensor[(15, 9, 3), float32] */;
  %132 = reshape(%129, newshape=[288]) /* ty=Tensor[(288), int64] */;
  %133 = reshape(%130, newshape=[48]) /* ty=Tensor[(48), int32] */;
  %134 = @func_1095(%131, %132, %133) /* ty=(Tensor[(15, 9, 3), float32], Tensor[(16, 6, 3), int64], Tensor[(288), int64], Tensor[(4, 4, 3), int16], Tensor[(48), int32]) */;
  %135 = cast(meta[relay.Constant][9] /* ty=Tensor[(3, 135), float32] */, dtype="float32") /* ty=Tensor[(3, 135), float32] */;
  %136 = cast(meta[relay.Constant][10] /* ty=Tensor[(288), int64] */, dtype="int64") /* ty=Tensor[(288), int64] */;
  %137 = cast(%var_2336, dtype="int32") /* ty=Tensor[(6, 1, 8), int32] */;
  %138 = reshape(%135, newshape=[15, 9, 3]) /* ty=Tensor[(15, 9, 3), float32] */;
  %139 = reshape(%136, newshape=[288]) /* ty=Tensor[(288), int64] */;
  %140 = reshape(%137, newshape=[48]) /* ty=Tensor[(48), int32] */;
  %141 = @func_1095(%138, %139, %140) /* ty=(Tensor[(15, 9, 3), float32], Tensor[(16, 6, 3), int64], Tensor[(288), int64], Tensor[(4, 4, 3), int16], Tensor[(48), int32]) */;
  %142 = cast(%var_2353, dtype="float32") /* ty=Tensor[(468), float32] */;
  %143 = reshape(%142, newshape=[468]) /* ty=Tensor[(468), float32] */;
  %144 = @func_1608(%143) /* ty=(Tensor[(9, 13, 15), float32], Tensor[(16, 6, 3), int64], Tensor[(8, 36), int64], Tensor[(13, 6, 6), bool], Tensor[(468), float32], Tensor[(9, 13, 15), float32]) */;
  %145 = divide(%126, %127) /* ty=Tensor[(6, 13, 8), float64] */;
  %146 = %134.1;
  %147 = %141.1;
  %148 = %144.3;
  (%145, %146, meta[relay.Constant][9] /* ty=Tensor[(3, 135), float32] */, meta[relay.Constant][10] /* ty=Tensor[(288), int64] */, %147, %148, %var_2353)
}

def @func_2690(%var_2689: Tensor[(4, 13, 9), float32]) -> Tensor[(4, 13, 9), float32] {
  %150 = fn (%var_2685: Tensor[(4, 13, 9), float32]) -> Tensor[(4, 13, 9), float32] {
    %149 = cast(%var_2685, dtype="float32") /* ty=Tensor[(4, 13, 9), float32] */;
    log10(%149) /* ty=Tensor[(4, 13, 9), float32] */
  };
  %150(%var_2689) /* ty=Tensor[(4, 13, 9), float32] */
}

def @func_10949(%var_10943: Tensor[(1080), float32]) -> (Tensor[(7, 2, 15), int64], Tensor[(6, 12, 15), float32], Tensor[(1080), float32]) {
  %151 = @func_8222() /* ty=(Tensor[(7, 2, 15), int64],) */;
  %152 = cast(%var_10943, dtype="float32") /* ty=Tensor[(1080), float32] */;
  %153 = reshape(%152, newshape=[6, 12, 15]) /* ty=Tensor[(6, 12, 15), float32] */;
  %154 = %151.0;
  %155 = @func_4618(%153) /* ty=Tensor[(6, 12, 15), float32] */;
  (%154, %155, %var_10943)
}

def @func_8359(%var_8349: Tensor[(1, 1040), float32]) -> (Tensor[(3, 12, 10), float32], Tensor[(7, 2, 15), float32], Tensor[(10, 9, 1), float32], Tensor[(90), float32], Tensor[(16, 5, 13), float32], Tensor[(1, 1040), float32], Tensor[(7, 2, 15), int64]) {
  %156 = cast(meta[relay.Constant][11] /* ty=Tensor[(3, 12, 10), float32] */, dtype="float32") /* ty=Tensor[(3, 12, 10), float32] */;
  %157 = @func_7238() /* ty=(Tensor[(7, 2, 15), float32],) */;
  %158 = cast(meta[relay.Constant][12] /* ty=Tensor[(90), float32] */, dtype="float32") /* ty=Tensor[(90), float32] */;
  %159 = reshape(%158, newshape=[10, 9, 1]) /* ty=Tensor[(10, 9, 1), float32] */;
  %160 = cast(%var_8349, dtype="float32") /* ty=Tensor[(1, 1040), float32] */;
  %161 = cast(%var_8349, dtype="float32") /* ty=Tensor[(1, 1040), float32] */;
  %162 = reshape(%160, newshape=[16, 5, 13]) /* ty=Tensor[(16, 5, 13), float32] */;
  %163 = reshape(%161, newshape=[16, 5, 13]) /* ty=Tensor[(16, 5, 13), float32] */;
  %164 = @func_5702(%162, %163) /* ty=(Tensor[(16, 5, 13), float32],) */;
  %165 = @func_8222() /* ty=(Tensor[(7, 2, 15), int64],) */;
  %166 = rsqrt(%156) /* ty=Tensor[(3, 12, 10), float32] */;
  %167 = %157.0;
  %168 = @func_3694(%159) /* ty=Tensor[(10, 9, 1), float32] */;
  %169 = %164.0;
  %170 = %165.0;
  (%166, %167, %168, meta[relay.Constant][12] /* ty=Tensor[(90), float32] */, %169, %var_8349, %170)
}

def @func_9297() -> Tensor[(9, 3, 10), float64] {
  %175 = fn () -> Tensor[(9, 3, 10), float64] {
    %171 = cast(meta[relay.Constant][14] /* ty=Tensor[(9, 3, 10), float64] */, dtype="float64") /* ty=Tensor[(9, 3, 10), float64] */;
    %172 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(9, 3, 10), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %173 = cast(meta[relay.Constant][13] /* ty=Tensor[(9, 3, 10), float64] */, dtype="float64") /* ty=Tensor[(9, 3, 10), float64] */;
    %174 = dyn.reshape(%171, %172, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    floor_mod(%173, %174) /* ty=Tensor[(9, 3, 10), float64] */
  };
  %175() /* ty=Tensor[(9, 3, 10), float64] */
}

def @func_10306() -> Tensor[(700), float32] {
  %179 = fn () -> Tensor[(700), float32] {
    %176 = @func_8421() /* ty=(Tensor[(7, 2, 15), int64], Tensor[(5, 10, 14), bool], Tensor[(700), float32]) */;
    %177 = %176.2;
    %178 = cast(%177, dtype="float32") /* ty=Tensor[(700), float32] */;
    asin(%178) /* ty=Tensor[(700), float32] */
  };
  %179() /* ty=Tensor[(700), float32] */
}

def @func_5420(%var_5415: Tensor[(16, 5, 12), float32]) -> Tensor[(16, 5, 12), float32] {
  %180 = cast(%var_5415, dtype="float32") /* ty=Tensor[(16, 5, 12), float32] */;
  acos(%180) /* ty=Tensor[(16, 5, 12), float32] */
}

def @func_11230(%var_11157: Tensor[(98, 6), uint8], %var_11215: Tensor[(98, 6), uint8]) -> (Tensor[(7, 2, 15), float32], Tensor[(7, 2, 15), float32], Tensor[(7, 2, 15), float32], Tensor[(7, 2, 15), int64], Tensor[(98, 6), bool]) {
  %181 = @func_9488() /* ty=(Tensor[(7, 2, 15), float32], Tensor[(9, 3, 10), float64], Tensor[(13, 15, 15), int64], Tensor[(975, 3), int64]) */;
  %182 = cast(%var_11157, dtype="uint8") /* ty=Tensor[(98, 6), uint8] */;
  %183 = reshape(%182, newshape=[588]) /* ty=Tensor[(588), uint8] */;
  %184 = @func_7556(%183) /* ty=(Tensor[(7, 2, 15), float32], Tensor[(15, 8, 7), uint32], Tensor[(420, 2), uint32], Tensor[(6, 14, 7), bool], Tensor[(588), uint8], Tensor[(135, 3), float32], Tensor[(48), int32]) */;
  %185 = @func_8222() /* ty=(Tensor[(7, 2, 15), int64],) */;
  %186 = cast(%var_11215, dtype="bool") /* ty=Tensor[(98, 6), bool] */;
  %187 = shape_of(%var_11157, dtype="int32") /* ty=Tensor[(2), int32] */;
  %188 = cast(%var_11157, dtype="bool") /* ty=Tensor[(98, 6), bool] */;
  %189 = dyn.reshape(%186, %187, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %190 = %181.0;
  %191 = %184.0;
  %192 = @func_8291() /* ty=Tensor[(7, 2, 15), float32] */;
  %193 = %185.0;
  %194 = not_equal(%188, %189) /* ty=Tensor[(98, 6), bool] */;
  (%190, %191, %192, %193, %194)
}

def @func_9389(%var_9385: Tensor[(1680), int32], %var_9386: Tensor[(1, 405), float32], %var_9387: Tensor[(288), int64], %var_9388: Tensor[(48), int32]) -> (Tensor[(7, 2, 15), float32], Tensor[(288), int64], Tensor[(1680), int32], Tensor[(1, 405), float32], Tensor[(288), int64], Tensor[(48), int32]) {
  %207 = fn (%var_9372: Tensor[(1680), int32], %var_9373: Tensor[(1, 405), float32], %var_9374: Tensor[(288), int64], %var_9375: Tensor[(48), int32]) -> (Tensor[(7, 2, 15), float32], Tensor[(288), int64], Tensor[(1680), int32], Tensor[(1, 405), float32], Tensor[(288), int64], Tensor[(48), int32]) {
    %195 = @func_8015() /* ty=(Tensor[(7, 2, 15), float32],) */;
    %196 = cast(%var_9372, dtype="int32") /* ty=Tensor[(1680), int32] */;
    %197 = cast(%var_9373, dtype="float32") /* ty=Tensor[(1, 405), float32] */;
    %198 = cast(%var_9374, dtype="int64") /* ty=Tensor[(288), int64] */;
    %199 = cast(%var_9375, dtype="int32") /* ty=Tensor[(48), int32] */;
    %200 = reshape(%196, newshape=[16, 7, 15]) /* ty=Tensor[(16, 7, 15), int32] */;
    %201 = reshape(%197, newshape=[405]) /* ty=Tensor[(405), float32] */;
    %202 = reshape(%198, newshape=[288]) /* ty=Tensor[(288), int64] */;
    %203 = reshape(%199, newshape=[2, 24]) /* ty=Tensor[(2, 24), int32] */;
    %204 = @func_2831(%200, %201, %202, %203) /* ty=(Tensor[(16, 7, 15), int32], Tensor[(16, 7, 15), bool], Tensor[(8, 36), int64], Tensor[(1352), float64], Tensor[(405), float32], Tensor[(288), int64], Tensor[(2, 24), int32]) */;
    %205 = %195.0;
    %206 = %204.5;
    (%205, %206, %var_9372, %var_9373, %var_9374, %var_9375)
  };
  %207(%var_9385, %var_9386, %var_9387, %var_9388) /* ty=(Tensor[(7, 2, 15), float32], Tensor[(288), int64], Tensor[(1680), int32], Tensor[(1, 405), float32], Tensor[(288), int64], Tensor[(48), int32]) */
}

def @func_8944(%var_8942: Tensor[(48), int32]) -> (Tensor[(7, 2, 15), float32], Tensor[(8, 36), int64], Tensor[(1680), int32], Tensor[(405), float32], Tensor[(288), int64], Tensor[(48), int32]) {
  @func_8941(%var_8942) /* ty=(Tensor[(7, 2, 15), float32], Tensor[(8, 36), int64], Tensor[(1680), int32], Tensor[(405), float32], Tensor[(288), int64], Tensor[(48), int32]) */
}

def @func_7652(%var_7650: Tensor[(588), uint8]) -> (Tensor[(7, 2, 15), float64], Tensor[(48), int32], Tensor[(588), uint8], Tensor[(7, 2, 15), bool]) {
  @func_7649(%var_7650) /* ty=(Tensor[(7, 2, 15), float64], Tensor[(48), int32], Tensor[(588), uint8], Tensor[(7, 2, 15), bool]) */
}

def @func_8423() -> (Tensor[(7, 2, 15), int64], Tensor[(5, 10, 14), bool], Tensor[(700), float32]) {
  @func_8421() /* ty=(Tensor[(7, 2, 15), int64], Tensor[(5, 10, 14), bool], Tensor[(700), float32]) */
}

def @func_7721(%var_7706: Tensor[(2925), int64]) -> (Tensor[(9, 12, 12), float64], Tensor[(13, 15, 15), bool]) {
  %208 = cast(meta[relay.Constant][15] /* ty=Tensor[(9, 12, 12), float64] */, dtype="float64") /* ty=Tensor[(9, 12, 12), float64] */;
  %209 = cast(%var_7706, dtype="int64") /* ty=Tensor[(2925), int64] */;
  %210 = cast(%var_7706, dtype="int64") /* ty=Tensor[(2925), int64] */;
  %211 = reshape(%209, newshape=[13, 15, 15]) /* ty=Tensor[(13, 15, 15), int64] */;
  %212 = reshape(%210, newshape=[13, 15, 15]) /* ty=Tensor[(13, 15, 15), int64] */;
  %213 = @func_6569(%211, %212) /* ty=(Tensor[(13, 15, 15), int64],) */;
  %214 = %213.0;
  %215 = cast(%var_7706, dtype="bool") /* ty=Tensor[(2925), bool] */;
  %216 = shape_of(%214, dtype="int32") /* ty=Tensor[(3), int32] */;
  %217 = cast(%214, dtype="bool") /* ty=Tensor[(13, 15, 15), bool] */;
  %218 = dyn.reshape(%215, %216, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %219 = atan(%208) /* ty=Tensor[(9, 12, 12), float64] */;
  %220 = greater_equal(%217, %218) /* ty=Tensor[(13, 15, 15), bool] */;
  (%219, %220)
}

def @func_7084(%var_7082: Tensor[(10, 1, 13), float32], %var_7083: Tensor[(1650), float64]) -> (Tensor[(13, 15, 15), int64], Tensor[(2925), int64], Tensor[(2, 144), int64], Tensor[(1650), float64], Tensor[(10, 1, 13), float64], Tensor[(8, 5, 7), float32], Tensor[(10, 28), float64]) {
  @func_7080(%var_7082, %var_7083) /* ty=(Tensor[(13, 15, 15), int64], Tensor[(2925), int64], Tensor[(2, 144), int64], Tensor[(1650), float64], Tensor[(10, 1, 13), float64], Tensor[(8, 5, 7), float32], Tensor[(10, 28), float64]) */
}

def @func_7331() -> (Tensor[(7, 2, 15), float32],) {
  %221 = @func_7238() /* ty=(Tensor[(7, 2, 15), float32],) */;
  %222 = %221.0;
  (%222,)
}

def @func_2837(%var_2833: Tensor[(16, 7, 15), int32], %var_2834: Tensor[(405), float32], %var_2835: Tensor[(288), int64], %var_2836: Tensor[(2, 24), int32]) -> (Tensor[(16, 7, 15), int32], Tensor[(16, 7, 15), bool], Tensor[(8, 36), int64], Tensor[(1352), float64], Tensor[(405), float32], Tensor[(288), int64], Tensor[(2, 24), int32]) {
  @func_2831(%var_2833, %var_2834, %var_2835, %var_2836) /* ty=(Tensor[(16, 7, 15), int32], Tensor[(16, 7, 15), bool], Tensor[(8, 36), int64], Tensor[(1352), float64], Tensor[(405), float32], Tensor[(288), int64], Tensor[(2, 24), int32]) */
}

def @func_5526(%var_5525: Tensor[(8, 5, 7), float64]) -> (Tensor[(8, 5, 7), int32], Tensor[(8, 5, 7), float32]) {
  %232 = fn (%var_5506: Tensor[(8, 5, 7), float64]) -> (Tensor[(8, 5, 7), int32], Tensor[(8, 5, 7), float32]) {
    %223 = cast(%var_5506, dtype="float64") /* ty=Tensor[(8, 5, 7), float64] */;
    %224 = sin(%223) /* ty=Tensor[(8, 5, 7), float64] */;
    %225 = cast(%224, dtype="int32") /* ty=Tensor[(8, 5, 7), int32] */;
    %226 = shape_of(%var_5506, dtype="int32") /* ty=Tensor[(3), int32] */;
    %227 = cast(%var_5506, dtype="int32") /* ty=Tensor[(8, 5, 7), int32] */;
    %228 = dyn.reshape(%225, %226, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %229 = cast(%224, dtype="float32") /* ty=Tensor[(8, 5, 7), float32] */;
    %230 = maximum(%227, %228) /* ty=Tensor[(8, 5, 7), int32] */;
    %231 = tan(%229) /* ty=Tensor[(8, 5, 7), float32] */;
    (%230, %231)
  };
  %232(%var_5525) /* ty=(Tensor[(8, 5, 7), int32], Tensor[(8, 5, 7), float32]) */
}

def @func_6032(%var_6028: Tensor[(405), float32], %var_6029: Tensor[(144, 2), int64], %var_6030: Tensor[(48), int32], %var_6031: Tensor[(1, 468), float32]) -> (Tensor[(8, 36), int64], Tensor[(12, 140), int32], Tensor[(405), float32], Tensor[(144, 2), int64], Tensor[(48), int32], Tensor[(16, 5, 12), float32], Tensor[(960), float32], Tensor[(16, 11, ?), float32], Tensor[(4, 13, 9), float32], Tensor[(1, 468), float32], Tensor[(16, 11, ?), int16]) {
  @func_6026(%var_6028, %var_6029, %var_6030, %var_6031) /* ty=(Tensor[(8, 36), int64], Tensor[(12, 140), int32], Tensor[(405), float32], Tensor[(144, 2), int64], Tensor[(48), int32], Tensor[(16, 5, 12), float32], Tensor[(960), float32], Tensor[(16, 11, ?), float32], Tensor[(4, 13, 9), float32], Tensor[(1, 468), float32], Tensor[(16, 11, ?), int16]) */
}

def @func_10640(%var_10602: Tensor[(135, 3), float32], %var_10604: Tensor[(48), int32]) -> (Tensor[(8, 36), int64], Tensor[(1352), float64], Tensor[(135, 3), float32], Tensor[(8, 36), int64], Tensor[(48), int32], Tensor[(4, 13, 9), float32], Tensor[(468), float32], Tensor[(7, 2, 15), float64], Tensor[(13, 11, 8), float64], Tensor[(1144), float64]) {
  %233 = cast(meta[relay.Constant][16] /* ty=Tensor[(1352), float64] */, dtype="float64") /* ty=Tensor[(1352), float64] */;
  %234 = cast(%var_10602, dtype="float32") /* ty=Tensor[(135, 3), float32] */;
  %235 = cast(meta[relay.Constant][17] /* ty=Tensor[(8, 36), int64] */, dtype="int64") /* ty=Tensor[(8, 36), int64] */;
  %236 = cast(%var_10604, dtype="int32") /* ty=Tensor[(48), int32] */;
  %237 = reshape(%233, newshape=[8, 13, 13]) /* ty=Tensor[(8, 13, 13), float64] */;
  %238 = reshape(%234, newshape=[405]) /* ty=Tensor[(405), float32] */;
  %239 = reshape(%235, newshape=[8, 36]) /* ty=Tensor[(8, 36), int64] */;
  %240 = reshape(%236, newshape=[2, 24]) /* ty=Tensor[(2, 24), int32] */;
  %241 = @func_2100(%237, %238, %239, %240) /* ty=(Tensor[(8, 13, 13), float64], Tensor[(4, 4, 3), int16], Tensor[(405), float32], Tensor[(8, 36), int64], Tensor[(2, 24), int32], Tensor[(16, 6, 3), int64]) */;
  %242 = cast(meta[relay.Constant][18] /* ty=Tensor[(468), float32] */, dtype="float32") /* ty=Tensor[(468), float32] */;
  %243 = reshape(%242, newshape=[4, 13, 9]) /* ty=Tensor[(4, 13, 9), float32] */;
  %244 = @func_9876() /* ty=(Tensor[(7, 2, 15), float32], Tensor[(7, 2, 15), float32], Tensor[(16, 5, 13), float32], Tensor[(1040), float32]) */;
  %245 = %244.1;
  %246 = cast(%245, dtype="float64") /* ty=Tensor[(7, 2, 15), float64] */;
  %247 = log(%246) /* ty=Tensor[(7, 2, 15), float64] */;
  %248 = cast(%247, dtype="float64") /* ty=Tensor[(7, 2, 15), float64] */;
  %249 = cast(meta[relay.Constant][19] /* ty=Tensor[(1144), float64] */, dtype="float64") /* ty=Tensor[(1144), float64] */;
  %250 = reshape(%249, newshape=[13, 11, 8]) /* ty=Tensor[(13, 11, 8), float64] */;
  %251 = %241.3;
  %252 = @func_2688(%243) /* ty=Tensor[(4, 13, 9), float32] */;
  %253 = acosh(%248) /* ty=Tensor[(7, 2, 15), float64] */;
  %254 = @func_8385(%250) /* ty=Tensor[(13, 11, 8), float64] */;
  (%251, meta[relay.Constant][16] /* ty=Tensor[(1352), float64] */, %var_10602, meta[relay.Constant][17] /* ty=Tensor[(8, 36), int64] */, %var_10604, %252, meta[relay.Constant][18] /* ty=Tensor[(468), float32] */, %253, %254, meta[relay.Constant][19] /* ty=Tensor[(1144), float64] */)
}

def @func_10754() -> (Tensor[(7, 2, 15), float32], Tensor[(9, 13, 15), float32], Tensor[(468), float32]) {
  %255 = @func_9833() /* ty=(Tensor[(7, 2, 15), float32],) */;
  %256 = cast(meta[relay.Constant][20] /* ty=Tensor[(468), float32] */, dtype="float32") /* ty=Tensor[(468), float32] */;
  %257 = reshape(%256, newshape=[468]) /* ty=Tensor[(468), float32] */;
  %258 = @func_1608(%257) /* ty=(Tensor[(9, 13, 15), float32], Tensor[(16, 6, 3), int64], Tensor[(8, 36), int64], Tensor[(13, 6, 6), bool], Tensor[(468), float32], Tensor[(9, 13, 15), float32]) */;
  %259 = %255.0;
  %260 = %258.0;
  (%259, %260, meta[relay.Constant][20] /* ty=Tensor[(468), float32] */)
}

def @func_8017() -> (Tensor[(7, 2, 15), float32],) {
  @func_8015() /* ty=(Tensor[(7, 2, 15), float32],) */
}

def @func_11922(%var_11897: Tensor[(405), float32], %var_11898: Tensor[(48), int32], %var_11909: Tensor[(560), int16], %var_11910: Tensor[(363), float32]) -> (Tensor[(7, 2, 15), float32], Tensor[(7, 2, 15), float32], Tensor[(7, 2, 15), int64], Tensor[(16, 6, 3), int64], Tensor[(588), uint8], Tensor[(405), float32], Tensor[(48), int32], Tensor[(15, 8, 7), uint32], Tensor[(11, 11, 3), float32], Tensor[(560), int16], Tensor[(363), float32]) {
  %261 = cast(meta[relay.Constant][21] /* ty=Tensor[(588), uint8] */, dtype="uint8") /* ty=Tensor[(588), uint8] */;
  %262 = cast(meta[relay.Constant][21] /* ty=Tensor[(588), uint8] */, dtype="uint8") /* ty=Tensor[(588), uint8] */;
  %263 = cast(meta[relay.Constant][21] /* ty=Tensor[(588), uint8] */, dtype="uint8") /* ty=Tensor[(588), uint8] */;
  %264 = cast(%var_11897, dtype="float32") /* ty=Tensor[(405), float32] */;
  %265 = cast(%var_11898, dtype="int32") /* ty=Tensor[(48), int32] */;
  %266 = reshape(%261, newshape=[6, 14, 7]) /* ty=Tensor[(6, 14, 7), uint8] */;
  %267 = reshape(%262, newshape=[6, 14, 7]) /* ty=Tensor[(6, 14, 7), uint8] */;
  %268 = reshape(%263, newshape=[6, 14, 7]) /* ty=Tensor[(6, 14, 7), uint8] */;
  %269 = reshape(%264, newshape=[405]) /* ty=Tensor[(405), float32] */;
  %270 = reshape(%265, newshape=[48]) /* ty=Tensor[(48), int32] */;
  %271 = @func_1762(%266, %267, %268, %269, %270) /* ty=(Tensor[(6, 14, 7), bool], Tensor[(6, 14, 7), uint8], Tensor[(16, 6, 3), int64], Tensor[(405), float32], Tensor[(288), int64], Tensor[(48), int32]) */;
  %272 = cast(meta[relay.Constant][21] /* ty=Tensor[(588), uint8] */, dtype="uint8") /* ty=Tensor[(588), uint8] */;
  %273 = reshape(%272, newshape=[588]) /* ty=Tensor[(588), uint8] */;
  %274 = @func_7556(%273) /* ty=(Tensor[(7, 2, 15), float32], Tensor[(15, 8, 7), uint32], Tensor[(420, 2), uint32], Tensor[(6, 14, 7), bool], Tensor[(588), uint8], Tensor[(135, 3), float32], Tensor[(48), int32]) */;
  %275 = cast(%var_11909, dtype="int16") /* ty=Tensor[(560), int16] */;
  %276 = cast(%var_11909, dtype="int16") /* ty=Tensor[(560), int16] */;
  %277 = cast(%var_11910, dtype="float32") /* ty=Tensor[(363), float32] */;
  %278 = reshape(%275, newshape=[7, 10, 8]) /* ty=Tensor[(7, 10, 8), int16] */;
  %279 = reshape(%276, newshape=[7, 10, 8]) /* ty=Tensor[(7, 10, 8), int16] */;
  %280 = reshape(%277, newshape=[363]) /* ty=Tensor[(363), float32] */;
  %281 = @func_9982(%278, %279, %280) /* ty=(Tensor[(7, 10, 8), int16], Tensor[(11, 11, 3), float32], Tensor[(363), float32]) */;
  %282 = @func_11129() /* ty=Tensor[(7, 2, 15), float32] */;
  %283 = @func_9428() /* ty=Tensor[(7, 2, 15), float32] */;
  %284 = @func_10102() /* ty=Tensor[(7, 2, 15), int64] */;
  %285 = %271.2;
  %286 = %274.1;
  %287 = %281.1;
  (%282, %283, %284, %285, meta[relay.Constant][21] /* ty=Tensor[(588), uint8] */, %var_11897, %var_11898, %286, %287, %var_11909, %var_11910)
}

def @func_9429() -> Tensor[(7, 2, 15), float32] {
  %289 = fn () -> Tensor[(7, 2, 15), float32] {
    %288 = @func_7506() /* ty=(Tensor[(7, 2, 15), float32], Tensor[(7, 2, 15), float32]) */;
    %288.0
  };
  %289() /* ty=Tensor[(7, 2, 15), float32] */
}

def @func_4276(%var_4274: Tensor[(9, 8, 5), float64], %var_4275: Tensor[(9, 8, 5), float64]) -> (Tensor[(9, 8, 5), float64], Tensor[(9, 8, 5), bool], Tensor[(700), float32], Tensor[(16, 6, 3), int64], Tensor[(288), int64], Tensor[(5, 10, 14), float32]) {
  @func_4272(%var_4274, %var_4275) /* ty=(Tensor[(9, 8, 5), float64], Tensor[(9, 8, 5), bool], Tensor[(700), float32], Tensor[(16, 6, 3), int64], Tensor[(288), int64], Tensor[(5, 10, 14), float32]) */
}

def @func_7781(%var_7756: Tensor[(12, 4), float64], %var_7757: Tensor[(1, 624), float64], %var_7758: Tensor[(468), float32]) -> (Tensor[(468), float32], Tensor[(12, 4), float64], Tensor[(1, 624), float64], Tensor[(468), float32], Tensor[(7, 2, 15), int64]) {
  %290 = cast(%var_7756, dtype="float64") /* ty=Tensor[(12, 4), float64] */;
  %291 = cast(%var_7757, dtype="float64") /* ty=Tensor[(1, 624), float64] */;
  %292 = cast(%var_7758, dtype="float32") /* ty=Tensor[(468), float32] */;
  %293 = reshape(%290, newshape=[6, 1, 8]) /* ty=Tensor[(6, 1, 8), float64] */;
  %294 = reshape(%291, newshape=[6, 13, 8]) /* ty=Tensor[(6, 13, 8), float64] */;
  %295 = reshape(%292, newshape=[468]) /* ty=Tensor[(468), float32] */;
  %296 = @func_2359(%293, %294, %295) /* ty=(Tensor[(6, 13, 8), float64], Tensor[(16, 6, 3), int64], Tensor[(3, 135), float32], Tensor[(288), int64], Tensor[(16, 6, 3), int64], Tensor[(13, 6, 6), bool], Tensor[(468), float32]) */;
  %297 = @func_7259() /* ty=Tensor[(7, 2, 15), float32] */;
  %298 = cast(%297, dtype="float32") /* ty=Tensor[(7, 2, 15), float32] */;
  %299 = sigmoid(%298) /* ty=Tensor[(7, 2, 15), float32] */;
  %300 = cast(meta[relay.Constant][22] /* ty=Tensor[(7, 2, 15), float32] */, dtype="int64") /* ty=Tensor[(7, 2, 15), int64] */;
  %301 = shape_of(%299, dtype="int32") /* ty=Tensor[(3), int32] */;
  %302 = cast(%299, dtype="int64") /* ty=Tensor[(7, 2, 15), int64] */;
  %303 = dyn.reshape(%300, %301, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %304 = %296.6;
  %305 = subtract(%302, %303) /* ty=Tensor[(7, 2, 15), int64] */;
  (%304, %var_7756, %var_7757, %var_7758, %305)
}

def @func_8437() -> Tensor[(7, 2, 15), float32] {
  %306 = @func_7331() /* ty=(Tensor[(7, 2, 15), float32],) */;
  %306.0
}

def @func_8824() -> Tensor[(7, 2, 15), float32] {
  @func_7259() /* ty=Tensor[(7, 2, 15), float32] */
}

def @func_9266(%var_9255: Tensor[(14, 12, 8), float32], %var_9256: Tensor[(14, 12, 8), float32]) -> (Tensor[(14, 12, 8), bool], Tensor[(7, 2, 15), float32]) {
  %307 = cast(%var_9256, dtype="bool") /* ty=Tensor[(14, 12, 8), bool] */;
  %308 = shape_of(%var_9255, dtype="int32") /* ty=Tensor[(3), int32] */;
  %309 = cast(%var_9255, dtype="bool") /* ty=Tensor[(14, 12, 8), bool] */;
  %310 = dyn.reshape(%307, %308, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %311 = @func_7238() /* ty=(Tensor[(7, 2, 15), float32],) */;
  %312 = greater(%309, %310) /* ty=Tensor[(14, 12, 8), bool] */;
  %313 = %311.0;
  (%312, %313)
}

def @func_11044(%var_11041: Tensor[(48), int32], %var_11042: Tensor[(130), float32], %var_11043: Tensor[(1650), float64]) -> (Tensor[(7, 2, 15), float32], Tensor[(1, 48), int32], Tensor[(48), int32], Tensor[(468, 1), float32], Tensor[(6, 78), float32], Tensor[(8, 5, 7), float32], Tensor[(130), float32], Tensor[(1650), float64]) {
  @func_11039(%var_11041, %var_11042, %var_11043) /* ty=(Tensor[(7, 2, 15), float32], Tensor[(1, 48), int32], Tensor[(48), int32], Tensor[(468, 1), float32], Tensor[(6, 78), float32], Tensor[(8, 5, 7), float32], Tensor[(130), float32], Tensor[(1650), float64]) */
}

def @func_9223(%var_9185: Tensor[(2925), int64]) -> (Tensor[(13, 15, 15), int64], Tensor[(2925), int64], Tensor[(7, 2, 15), bool]) {
  %314 = cast(%var_9185, dtype="int64") /* ty=Tensor[(2925), int64] */;
  %315 = cast(%var_9185, dtype="int64") /* ty=Tensor[(2925), int64] */;
  %316 = reshape(%314, newshape=[13, 15, 15]) /* ty=Tensor[(13, 15, 15), int64] */;
  %317 = reshape(%315, newshape=[13, 15, 15]) /* ty=Tensor[(13, 15, 15), int64] */;
  %318 = @func_6569(%316, %317) /* ty=(Tensor[(13, 15, 15), int64],) */;
  %319 = @func_8702() /* ty=Tensor[(7, 2, 15), float32] */;
  %320 = cast(%319, dtype="float32") /* ty=Tensor[(7, 2, 15), float32] */;
  %321 = log10(%320) /* ty=Tensor[(7, 2, 15), float32] */;
  %322 = cast(%319, dtype="bool") /* ty=Tensor[(7, 2, 15), bool] */;
  %323 = shape_of(%321, dtype="int32") /* ty=Tensor[(3), int32] */;
  %324 = cast(%321, dtype="bool") /* ty=Tensor[(7, 2, 15), bool] */;
  %325 = dyn.reshape(%322, %323, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %326 = %318.0;
  %327 = logical_or(%324, %325) /* ty=Tensor[(7, 2, 15), bool] */;
  (%326, %var_9185, %327)
}

def @func_7786(%var_7783: Tensor[(12, 4), float64], %var_7784: Tensor[(1, 624), float64], %var_7785: Tensor[(468), float32]) -> (Tensor[(468), float32], Tensor[(12, 4), float64], Tensor[(1, 624), float64], Tensor[(468), float32], Tensor[(7, 2, 15), int64]) {
  @func_7781(%var_7783, %var_7784, %var_7785) /* ty=(Tensor[(468), float32], Tensor[(12, 4), float64], Tensor[(1, 624), float64], Tensor[(468), float32], Tensor[(7, 2, 15), int64]) */
}

def @func_7261() -> Tensor[(7, 2, 15), float32] {
  @func_7259() /* ty=Tensor[(7, 2, 15), float32] */
}

def @func_10681() -> (Tensor[(7, 2, 15), float32], Tensor[(4, 13, 9), float32], Tensor[(468), float32], Tensor[(7, 2, 15), int64]) {
  %328 = cast(meta[relay.Constant][23] /* ty=Tensor[(468), float32] */, dtype="float32") /* ty=Tensor[(468), float32] */;
  %329 = reshape(%328, newshape=[4, 13, 9]) /* ty=Tensor[(4, 13, 9), float32] */;
  %330 = @func_8702() /* ty=Tensor[(7, 2, 15), float32] */;
  %331 = @func_2688(%329) /* ty=Tensor[(4, 13, 9), float32] */;
  %332 = @func_10102() /* ty=Tensor[(7, 2, 15), int64] */;
  (%330, %331, meta[relay.Constant][23] /* ty=Tensor[(468), float32] */, %332)
}

def @func_8747() -> Tensor[(7, 2, 15), float32] {
  @func_7115() /* ty=Tensor[(7, 2, 15), float32] */
}

def @func_2596(%var_2594: Tensor[(15, 8, 7), uint32], %var_2595: Tensor[(15, 8, 7), uint32]) -> (Tensor[(15, 8, 7), uint32],) {
  %338 = fn (%var_2588: Tensor[(15, 8, 7), uint32], %var_2589: Tensor[(15, 8, 7), uint32]) -> (Tensor[(15, 8, 7), uint32],) {
    %333 = cast(%var_2589, dtype="uint32") /* ty=Tensor[(15, 8, 7), uint32] */;
    %334 = shape_of(%var_2588, dtype="int32") /* ty=Tensor[(3), int32] */;
    %335 = cast(%var_2588, dtype="uint32") /* ty=Tensor[(15, 8, 7), uint32] */;
    %336 = dyn.reshape(%333, %334, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %337 = logical_xor(%335, %336) /* ty=Tensor[(15, 8, 7), uint32] */;
    (%337,)
  };
  %338(%var_2594, %var_2595) /* ty=(Tensor[(15, 8, 7), uint32],) */
}

def @func_8187(%var_8185: Tensor[(11, 4, 14), float64], %var_8186: Tensor[(11, 4, 14), float64]) -> (Tensor[(11, 4, 14), float64],) {
  %344 = fn (%var_8174: Tensor[(11, 4, 14), float64], %var_8175: Tensor[(11, 4, 14), float64]) -> (Tensor[(11, 4, 14), float64],) {
    %339 = cast(%var_8175, dtype="float64") /* ty=Tensor[(11, 4, 14), float64] */;
    %340 = shape_of(%var_8174, dtype="int32") /* ty=Tensor[(3), int32] */;
    %341 = cast(%var_8174, dtype="float64") /* ty=Tensor[(11, 4, 14), float64] */;
    %342 = dyn.reshape(%339, %340, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %343 = floor_mod(%341, %342) /* ty=Tensor[(11, 4, 14), float64] */;
    (%343,)
  };
  %344(%var_8185, %var_8186) /* ty=(Tensor[(11, 4, 14), float64],) */
}

def @func_6582(%var_6579: Tensor[(16, 8, 5), float64]) -> Tensor[(16, 8, 5), float64] {
  %345 = cast(%var_6579, dtype="float64") /* ty=Tensor[(16, 8, 5), float64] */;
  acos(%345) /* ty=Tensor[(16, 8, 5), float64] */
}

def @func_7240() -> (Tensor[(7, 2, 15), float32],) {
  @func_7238() /* ty=(Tensor[(7, 2, 15), float32],) */
}

def @func_9878() -> (Tensor[(7, 2, 15), float32], Tensor[(7, 2, 15), float32], Tensor[(16, 5, 13), float32], Tensor[(1040), float32]) {
  @func_9876() /* ty=(Tensor[(7, 2, 15), float32], Tensor[(7, 2, 15), float32], Tensor[(16, 5, 13), float32], Tensor[(1040), float32]) */
}

def @func_664(%var_648: Tensor[(4, 4, 3), int32], %var_649: Tensor[(4, 4, 3), int32]) -> (Tensor[(4, 4, 3), int16], Tensor[(16, 6, 3), int64], Tensor[(288), int64]) {
  %346 = cast(%var_649, dtype="int32") /* ty=Tensor[(4, 4, 3), int32] */;
  %347 = shape_of(%var_648, dtype="int32") /* ty=Tensor[(3), int32] */;
  %348 = cast(%var_648, dtype="int32") /* ty=Tensor[(4, 4, 3), int32] */;
  %349 = dyn.reshape(%346, %347, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %350 = subtract(%348, %349) /* ty=Tensor[(4, 4, 3), int32] */;
  %351 = cast(%350, dtype="int16") /* ty=Tensor[(4, 4, 3), int16] */;
  %352 = shape_of(%var_649, dtype="int32") /* ty=Tensor[(3), int32] */;
  %353 = cast(%var_649, dtype="int16") /* ty=Tensor[(4, 4, 3), int16] */;
  %354 = dyn.reshape(%351, %352, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %355 = cast(meta[relay.Constant][24] /* ty=Tensor[(288), int64] */, dtype="int64") /* ty=Tensor[(288), int64] */;
  %356 = reshape(%355, newshape=[16, 6, 3]) /* ty=Tensor[(16, 6, 3), int64] */;
  %357 = bitwise_and(%353, %354) /* ty=Tensor[(4, 4, 3), int16] */;
  %358 = @func_21(%356) /* ty=Tensor[(16, 6, 3), int64] */;
  (%357, %358, meta[relay.Constant][24] /* ty=Tensor[(288), int64] */)
}

def @func_11102(%var_11100: Tensor[(1144), float64], %var_11101: Tensor[(280, 2), int16]) -> (Tensor[(7, 2, 15), float32], Tensor[(13, 11, 8), float64], Tensor[(1144), float64], Tensor[(11, 11, 3), float32], Tensor[(363, 1), float32], Tensor[(280, 2), float32]) {
  %373 = fn (%var_11068: Tensor[(1144), float64], %var_11071: Tensor[(280, 2), int16]) -> (Tensor[(7, 2, 15), float32], Tensor[(13, 11, 8), float64], Tensor[(1144), float64], Tensor[(11, 11, 3), float32], Tensor[(363, 1), float32], Tensor[(280, 2), float32]) {
    %359 = cast(%var_11068, dtype="float64") /* ty=Tensor[(1144), float64] */;
    %360 = reshape(%359, newshape=[13, 11, 8]) /* ty=Tensor[(13, 11, 8), float64] */;
    %361 = cast(%var_11071, dtype="int16") /* ty=Tensor[(280, 2), int16] */;
    %362 = cast(%var_11071, dtype="int16") /* ty=Tensor[(280, 2), int16] */;
    %363 = cast(meta[relay.Constant][25] /* ty=Tensor[(363, 1), float32] */, dtype="float32") /* ty=Tensor[(363, 1), float32] */;
    %364 = reshape(%361, newshape=[7, 10, 8]) /* ty=Tensor[(7, 10, 8), int16] */;
    %365 = reshape(%362, newshape=[7, 10, 8]) /* ty=Tensor[(7, 10, 8), int16] */;
    %366 = reshape(%363, newshape=[363]) /* ty=Tensor[(363), float32] */;
    %367 = @func_9982(%364, %365, %366) /* ty=(Tensor[(7, 10, 8), int16], Tensor[(11, 11, 3), float32], Tensor[(363), float32]) */;
    %368 = cast(%var_11071, dtype="float32") /* ty=Tensor[(280, 2), float32] */;
    %369 = @func_8291() /* ty=Tensor[(7, 2, 15), float32] */;
    %370 = @func_8385(%360) /* ty=Tensor[(13, 11, 8), float64] */;
    %371 = %367.1;
    %372 = log10(%368) /* ty=Tensor[(280, 2), float32] */;
    (%369, %370, %var_11068, %371, meta[relay.Constant][25] /* ty=Tensor[(363, 1), float32] */, %372)
  };
  %373(%var_11100, %var_11101) /* ty=(Tensor[(7, 2, 15), float32], Tensor[(13, 11, 8), float64], Tensor[(1144), float64], Tensor[(11, 11, 3), float32], Tensor[(363, 1), float32], Tensor[(280, 2), float32]) */
}

def @func_10150() -> Tensor[(7, 2, 15), float32] {
  %374 = fn () -> Tensor[(7, 2, 15), float32] {
    @func_8747() /* ty=Tensor[(7, 2, 15), float32] */
  };
  %374() /* ty=Tensor[(7, 2, 15), float32] */
}

def @func_8015() -> (Tensor[(7, 2, 15), float32],) {
  %375 = @func_7259() /* ty=Tensor[(7, 2, 15), float32] */;
  (%375,)
}

def @func_5705(%var_5703: Tensor[(16, 5, 13), float32], %var_5704: Tensor[(16, 5, 13), float32]) -> (Tensor[(16, 5, 13), float32],) {
  %381 = fn (%var_5693: Tensor[(16, 5, 13), float32], %var_5694: Tensor[(16, 5, 13), float32]) -> (Tensor[(16, 5, 13), float32],) {
    %376 = cast(%var_5694, dtype="float32") /* ty=Tensor[(16, 5, 13), float32] */;
    %377 = shape_of(%var_5693, dtype="int32") /* ty=Tensor[(3), int32] */;
    %378 = cast(%var_5693, dtype="float32") /* ty=Tensor[(16, 5, 13), float32] */;
    %379 = dyn.reshape(%376, %377, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %380 = mod(%378, %379) /* ty=Tensor[(16, 5, 13), float32] */;
    (%380,)
  };
  %381(%var_5703, %var_5704) /* ty=(Tensor[(16, 5, 13), float32],) */
}

def @func_7881(%var_7880: Tensor[(1040), float32]) -> (Tensor[(7, 2, 15), float32], Tensor[(1040), float32]) {
  %396 = fn (%var_7822: Tensor[(1040), float32]) -> (Tensor[(7, 2, 15), float32], Tensor[(1040), float32]) {
    %382 = cast(%var_7822, dtype="float32") /* ty=Tensor[(1040), float32] */;
    %383 = cast(%var_7822, dtype="float32") /* ty=Tensor[(1040), float32] */;
    %384 = reshape(%382, newshape=[16, 5, 13]) /* ty=Tensor[(16, 5, 13), float32] */;
    %385 = reshape(%383, newshape=[16, 5, 13]) /* ty=Tensor[(16, 5, 13), float32] */;
    %386 = @func_5702(%384, %385) /* ty=(Tensor[(16, 5, 13), float32],) */;
    %387 = %386.0;
    %388 = cast(%387, dtype="int32") /* ty=Tensor[(16, 5, 13), int32] */;
    %389 = shape_of(%var_7822, dtype="int32") /* ty=Tensor[(1), int32] */;
    %390 = cast(%var_7822, dtype="int32") /* ty=Tensor[(1040), int32] */;
    %391 = dyn.reshape(%388, %389, newshape=[]) /* ty=Tensor[(?), int32] */;
    %392 = bitwise_xor(%390, %391) /* ty=Tensor[(1040), int32] */;
    %393 = cast(%392, dtype="float32") /* ty=Tensor[(1040), float32] */;
    %394 = @func_7115() /* ty=Tensor[(7, 2, 15), float32] */;
    %395 = cosh(%393) /* ty=Tensor[(1040), float32] */;
    (%394, %395)
  };
  %396(%var_7880) /* ty=(Tensor[(7, 2, 15), float32], Tensor[(1040), float32]) */
}

def @func_8826() -> Tensor[(7, 2, 15), float32] {
  @func_8824() /* ty=Tensor[(7, 2, 15), float32] */
}

def @func_9270(%var_9268: Tensor[(14, 12, 8), float32], %var_9269: Tensor[(14, 12, 8), float32]) -> (Tensor[(14, 12, 8), bool], Tensor[(7, 2, 15), float32]) {
  @func_9266(%var_9268, %var_9269) /* ty=(Tensor[(14, 12, 8), bool], Tensor[(7, 2, 15), float32]) */
}

def @func_1099(%var_1096: Tensor[(15, 9, 3), float32], %var_1097: Tensor[(288), int64], %var_1098: Tensor[(48), int32]) -> (Tensor[(15, 9, 3), float32], Tensor[(16, 6, 3), int64], Tensor[(288), int64], Tensor[(4, 4, 3), int16], Tensor[(48), int32]) {
  %408 = fn (%var_1049: Tensor[(15, 9, 3), float32], %var_1064: Tensor[(288), int64], %var_1091: Tensor[(48), int32]) -> (Tensor[(15, 9, 3), float32], Tensor[(16, 6, 3), int64], Tensor[(288), int64], Tensor[(4, 4, 3), int16], Tensor[(48), int32]) {
    %397 = cast(%var_1049, dtype="float32") /* ty=Tensor[(15, 9, 3), float32] */;
    %398 = cast(%var_1064, dtype="int64") /* ty=Tensor[(288), int64] */;
    %399 = reshape(%398, newshape=[16, 6, 3]) /* ty=Tensor[(16, 6, 3), int64] */;
    %400 = cast(%var_1091, dtype="int32") /* ty=Tensor[(48), int32] */;
    %401 = cast(%var_1091, dtype="int32") /* ty=Tensor[(48), int32] */;
    %402 = reshape(%400, newshape=[4, 4, 3]) /* ty=Tensor[(4, 4, 3), int32] */;
    %403 = reshape(%401, newshape=[4, 4, 3]) /* ty=Tensor[(4, 4, 3), int32] */;
    %404 = @func_664(%402, %403) /* ty=(Tensor[(4, 4, 3), int16], Tensor[(16, 6, 3), int64], Tensor[(288), int64]) */;
    %405 = log2(%397) /* ty=Tensor[(15, 9, 3), float32] */;
    %406 = @func_21(%399) /* ty=Tensor[(16, 6, 3), int64] */;
    %407 = %404.0;
    (%405, %406, %var_1064, %407, %var_1091)
  };
  %408(%var_1096, %var_1097, %var_1098) /* ty=(Tensor[(15, 9, 3), float32], Tensor[(16, 6, 3), int64], Tensor[(288), int64], Tensor[(4, 4, 3), int16], Tensor[(48), int32]) */
}

def @func_10025(%var_10004: Tensor[(468), float32]) -> (Tensor[(1040), float32], Tensor[(4, 13, 9), float32], Tensor[(468), float32], Tensor[(13, 6, 6), bool], Tensor[(48), int32], Tensor[(588), uint8]) {
  %409 = @func_9876() /* ty=(Tensor[(7, 2, 15), float32], Tensor[(7, 2, 15), float32], Tensor[(16, 5, 13), float32], Tensor[(1040), float32]) */;
  %410 = cast(%var_10004, dtype="float32") /* ty=Tensor[(468), float32] */;
  %411 = reshape(%410, newshape=[4, 13, 9]) /* ty=Tensor[(4, 13, 9), float32] */;
  %412 = cast(%var_10004, dtype="float32") /* ty=Tensor[(468), float32] */;
  %413 = reshape(%412, newshape=[13, 6, 6]) /* ty=Tensor[(13, 6, 6), float32] */;
  %414 = @func_1124(%413) /* ty=(Tensor[(13, 6, 6), bool],) */;
  %415 = cast(meta[relay.Constant][26] /* ty=Tensor[(588), uint8] */, dtype="uint8") /* ty=Tensor[(588), uint8] */;
  %416 = reshape(%415, newshape=[588]) /* ty=Tensor[(588), uint8] */;
  %417 = @func_7649(%416) /* ty=(Tensor[(7, 2, 15), float64], Tensor[(48), int32], Tensor[(588), uint8], Tensor[(7, 2, 15), bool]) */;
  %418 = %409.3;
  %419 = @func_2688(%411) /* ty=Tensor[(4, 13, 9), float32] */;
  %420 = %414.0;
  %421 = %417.1;
  (%418, %419, %var_10004, %420, %421, meta[relay.Constant][26] /* ty=Tensor[(588), uint8] */)
}

def @func_1608(%var_1583: Tensor[(468), float32]) -> (Tensor[(9, 13, 15), float32], Tensor[(16, 6, 3), int64], Tensor[(8, 36), int64], Tensor[(13, 6, 6), bool], Tensor[(468), float32], Tensor[(9, 13, 15), float32]) {
  %422 = cast(-7.65094f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %423 = cast(meta[relay.Constant][27] /* ty=Tensor[(9, 13, 15), float32] */, dtype="float32") /* ty=Tensor[(9, 13, 15), float32] */;
  %424 = cast(meta[relay.Constant][28] /* ty=Tensor[(8, 36), int64] */, dtype="int64") /* ty=Tensor[(8, 36), int64] */;
  %425 = reshape(%424, newshape=[16, 6, 3]) /* ty=Tensor[(16, 6, 3), int64] */;
  %426 = cast(%var_1583, dtype="float32") /* ty=Tensor[(468), float32] */;
  %427 = reshape(%426, newshape=[13, 6, 6]) /* ty=Tensor[(13, 6, 6), float32] */;
  %428 = @func_1124(%427) /* ty=(Tensor[(13, 6, 6), bool],) */;
  %429 = cast(meta[relay.Constant][27] /* ty=Tensor[(9, 13, 15), float32] */, dtype="float32") /* ty=Tensor[(9, 13, 15), float32] */;
  %430 = floor_divide(%422, %423) /* ty=Tensor[(9, 13, 15), float32] */;
  %431 = @func_21(%425) /* ty=Tensor[(16, 6, 3), int64] */;
  %432 = %428.0;
  %433 = sin(%429) /* ty=Tensor[(9, 13, 15), float32] */;
  (%430, %431, meta[relay.Constant][28] /* ty=Tensor[(8, 36), int64] */, %432, %var_1583, %433)
}

def @func_10952(%var_10950: Tensor[(1080), float32]) -> (Tensor[(7, 2, 15), int64], Tensor[(6, 12, 15), float32], Tensor[(1080), float32]) {
  @func_10949(%var_10950) /* ty=(Tensor[(7, 2, 15), int64], Tensor[(6, 12, 15), float32], Tensor[(1080), float32]) */
}

def @func_8317() -> Tensor[(7, 2, 15), float32] {
  %434 = @func_7331() /* ty=(Tensor[(7, 2, 15), float32],) */;
  %434.0
}

def @func_1124(%var_1110: Tensor[(13, 6, 6), float32]) -> (Tensor[(13, 6, 6), bool],) {
  %435 = cast(%var_1110, dtype="float32") /* ty=Tensor[(13, 6, 6), float32] */;
  %436 = tan(%435) /* ty=Tensor[(13, 6, 6), float32] */;
  %437 = cast(%436, dtype="float64") /* ty=Tensor[(13, 6, 6), float64] */;
  %438 = asinh(%437) /* ty=Tensor[(13, 6, 6), float64] */;
  %439 = cast(%436, dtype="bool") /* ty=Tensor[(13, 6, 6), bool] */;
  %440 = shape_of(%438, dtype="int32") /* ty=Tensor[(3), int32] */;
  %441 = cast(%438, dtype="bool") /* ty=Tensor[(13, 6, 6), bool] */;
  %442 = dyn.reshape(%439, %440, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %443 = greater(%441, %442) /* ty=Tensor[(13, 6, 6), bool] */;
  (%443,)
}

def @func_9226(%var_9224: Tensor[(2925), int64]) -> (Tensor[(13, 15, 15), int64], Tensor[(2925), int64], Tensor[(7, 2, 15), bool]) {
  @func_9223(%var_9224) /* ty=(Tensor[(13, 15, 15), int64], Tensor[(2925), int64], Tensor[(7, 2, 15), bool]) */
}

def @func_7649(%var_7637: Tensor[(588), uint8]) -> (Tensor[(7, 2, 15), float64], Tensor[(48), int32], Tensor[(588), uint8], Tensor[(7, 2, 15), bool]) {
  %444 = @func_7506() /* ty=(Tensor[(7, 2, 15), float32], Tensor[(7, 2, 15), float32]) */;
  %445 = %444.0;
  %446 = cast(%445, dtype="float64") /* ty=Tensor[(7, 2, 15), float64] */;
  %447 = acos(%446) /* ty=Tensor[(7, 2, 15), float64] */;
  %448 = cast(%447, dtype="float64") /* ty=Tensor[(7, 2, 15), float64] */;
  %449 = shape_of(%445, dtype="int32") /* ty=Tensor[(3), int32] */;
  %450 = cast(%445, dtype="float64") /* ty=Tensor[(7, 2, 15), float64] */;
  %451 = dyn.reshape(%448, %449, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %452 = cast(%var_7637, dtype="uint8") /* ty=Tensor[(588), uint8] */;
  %453 = reshape(%452, newshape=[588]) /* ty=Tensor[(588), uint8] */;
  %454 = @func_7556(%453) /* ty=(Tensor[(7, 2, 15), float32], Tensor[(15, 8, 7), uint32], Tensor[(420, 2), uint32], Tensor[(6, 14, 7), bool], Tensor[(588), uint8], Tensor[(135, 3), float32], Tensor[(48), int32]) */;
  %455 = cast(%445, dtype="bool") /* ty=Tensor[(7, 2, 15), bool] */;
  %456 = shape_of(%447, dtype="int32") /* ty=Tensor[(3), int32] */;
  %457 = cast(%447, dtype="bool") /* ty=Tensor[(7, 2, 15), bool] */;
  %458 = dyn.reshape(%455, %456, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %459 = floor_divide(%450, %451) /* ty=Tensor[(7, 2, 15), float64] */;
  %460 = %454.6;
  %461 = greater(%457, %458) /* ty=Tensor[(7, 2, 15), bool] */;
  (%459, %460, %var_7637, %461)
}

def @func_8439() -> Tensor[(7, 2, 15), float32] {
  @func_8437() /* ty=Tensor[(7, 2, 15), float32] */
}

def @func_6585(%var_6583: Tensor[(16, 8, 5), float64]) -> Tensor[(16, 8, 5), float64] {
  @func_6582(%var_6583) /* ty=Tensor[(16, 8, 5), float64] */
}

def @func_668(%var_666: Tensor[(4, 4, 3), int32], %var_667: Tensor[(4, 4, 3), int32]) -> (Tensor[(4, 4, 3), int16], Tensor[(16, 6, 3), int64], Tensor[(288), int64]) {
  @func_664(%var_666, %var_667) /* ty=(Tensor[(4, 4, 3), int16], Tensor[(16, 6, 3), int64], Tensor[(288), int64]) */
}

def @func_7176(%var_7174: Tensor[(468), float32], %var_7175: Tensor[(405), float32]) -> (Tensor[(7, 2, 15), float32], Tensor[(405), float32], Tensor[(25), float64], Tensor[(468), float32], Tensor[(405), float32]) {
  %471 = fn (%var_7166: Tensor[(468), float32], %var_7167: Tensor[(405), float32]) -> (Tensor[(7, 2, 15), float32], Tensor[(405), float32], Tensor[(25), float64], Tensor[(468), float32], Tensor[(405), float32]) {
    %462 = cast(meta[relay.Constant][29] /* ty=Tensor[(25), float64] */, dtype="float64") /* ty=Tensor[(25), float64] */;
    %463 = cast(%var_7166, dtype="float32") /* ty=Tensor[(468), float32] */;
    %464 = cast(%var_7167, dtype="float32") /* ty=Tensor[(405), float32] */;
    %465 = reshape(%462, newshape=[5, 1, 5]) /* ty=Tensor[(5, 1, 5), float64] */;
    %466 = reshape(%463, newshape=[6, 78]) /* ty=Tensor[(6, 78), float32] */;
    %467 = reshape(%464, newshape=[405]) /* ty=Tensor[(405), float32] */;
    %468 = @func_2535(%465, %466, %467) /* ty=(Tensor[(5, 1, 5), float64], Tensor[(5, 10, 14), bool], Tensor[(700), float32], Tensor[(5, 10, 14), bool], Tensor[(13, 6, 6), bool], Tensor[(6, 78), float32], Tensor[(13, 6, 6), bool], Tensor[(48), float64], Tensor[(624), float64], Tensor[(16, 6, 3), int64], Tensor[(1352), float64], Tensor[(405), float32], Tensor[(288), int64], Tensor[(2, 24), int32], Tensor[(15, 9, 3), float32], Tensor[(8, 36), int64]) */;
    %469 = @func_7115() /* ty=Tensor[(7, 2, 15), float32] */;
    %470 = %468.11;
    (%469, %470, meta[relay.Constant][29] /* ty=Tensor[(25), float64] */, %var_7166, %var_7167)
  };
  %471(%var_7174, %var_7175) /* ty=(Tensor[(7, 2, 15), float32], Tensor[(405), float32], Tensor[(25), float64], Tensor[(468), float32], Tensor[(405), float32]) */
}

def @func_10891(%var_10889: Tensor[(405), float32], %var_10890: Tensor[(24, 2), int32]) -> (Tensor[(7, 2, 15), float32], Tensor[(468), float32], Tensor[(405), float32], Tensor[(24, 2), int32]) {
  @func_10887(%var_10889, %var_10890) /* ty=(Tensor[(7, 2, 15), float32], Tensor[(468), float32], Tensor[(405), float32], Tensor[(24, 2), int32]) */
}

def @func_11295() -> (Tensor[(9, 3, 10), float64],) {
  @func_11293() /* ty=(Tensor[(9, 3, 10), float64],) */
}

def @func_3694(%var_3683: Tensor[(10, 9, 1), float32]) -> Tensor[(10, 9, 1), float32] {
  %472 = cast(%var_3683, dtype="float32") /* ty=Tensor[(10, 9, 1), float32] */;
  asinh(%472) /* ty=Tensor[(10, 9, 1), float32] */
}

def @func_11320() -> (Tensor[(7, 2, 15), float32],) {
  @func_11318() /* ty=(Tensor[(7, 2, 15), float32],) */
}

def @func_11738() -> (Tensor[(7, 2, 15), float32],) {
  @func_11736() /* ty=(Tensor[(7, 2, 15), float32],) */
}

def @func_11769() -> Tensor[(7, 2, 15), float32] {
  %474 = fn () -> Tensor[(7, 2, 15), float32] {
    %473 = @func_7238() /* ty=(Tensor[(7, 2, 15), float32],) */;
    %473.0
  };
  %474() /* ty=Tensor[(7, 2, 15), float32] */
}

def @func_4640(%var_4630: Tensor[(16, 3, 6), float64]) -> (Tensor[(16, 3, 6), float64],) {
  %475 = cast(%var_4630, dtype="float64") /* ty=Tensor[(16, 3, 6), float64] */;
  %476 = exp(%475) /* ty=Tensor[(16, 3, 6), float64] */;
  (%476,)
}

def @func_9354(%var_9352: int8, %var_9353: Tensor[(48), int32]) -> (Tensor[(7, 2, 15), float32], Tensor[(4, 13, 9), float32], int8, Tensor[(9, 1), int8], Tensor[(1680), int32], Tensor[(48), int32], Tensor[(7, 2, 15), float32], Tensor[(588), uint8]) {
  %495 = fn (%var_9330: int8, %var_9334: Tensor[(48), int32]) -> (Tensor[(7, 2, 15), float32], Tensor[(4, 13, 9), float32], int8, Tensor[(9, 1), int8], Tensor[(1680), int32], Tensor[(48), int32], Tensor[(7, 2, 15), float32], Tensor[(588), uint8]) {
    %477 = @func_7506() /* ty=(Tensor[(7, 2, 15), float32], Tensor[(7, 2, 15), float32]) */;
    %478 = cast(%var_9330, dtype="int8") /* ty=int8 */;
    %479 = cast(meta[relay.Constant][30] /* ty=Tensor[(9, 1), int8] */, dtype="int8") /* ty=Tensor[(9, 1), int8] */;
    %480 = reshape(%478, newshape=[]) /* ty=int8 */;
    %481 = reshape(%479, newshape=[1, 9]) /* ty=Tensor[(1, 9), int8] */;
    %482 = @func_6491(%480, %481) /* ty=(Tensor[(1, 9), int8], Tensor[(4, 13, 9), float32], Tensor[(3, 156), float32]) */;
    %483 = cast(%var_9334, dtype="int32") /* ty=Tensor[(48), int32] */;
    %484 = reshape(%483, newshape=[48]) /* ty=Tensor[(48), int32] */;
    %485 = @func_8941(%484) /* ty=(Tensor[(7, 2, 15), float32], Tensor[(8, 36), int64], Tensor[(1680), int32], Tensor[(405), float32], Tensor[(288), int64], Tensor[(48), int32]) */;
    %486 = cast(%var_9330, dtype="int8") /* ty=int8 */;
    %487 = cast(meta[relay.Constant][31] /* ty=Tensor[(588), uint8] */, dtype="uint8") /* ty=Tensor[(588), uint8] */;
    %488 = reshape(%486, newshape=[]) /* ty=int8 */;
    %489 = reshape(%487, newshape=[588]) /* ty=Tensor[(588), uint8] */;
    %490 = @func_8132(%488, %489) /* ty=(Tensor[(7, 2, 15), float32], Tensor[(3, 156), float32], int8, Tensor[(9), int8], Tensor[(420, 2), uint32], Tensor[(588), uint8]) */;
    %491 = %477.1;
    %492 = %482.1;
    %493 = %485.2;
    %494 = %490.0;
    (%491, %492, %var_9330, meta[relay.Constant][30] /* ty=Tensor[(9, 1), int8] */, %493, %var_9334, %494, meta[relay.Constant][31] /* ty=Tensor[(588), uint8] */)
  };
  %495(%var_9352, %var_9353) /* ty=(Tensor[(7, 2, 15), float32], Tensor[(4, 13, 9), float32], int8, Tensor[(9, 1), int8], Tensor[(1680), int32], Tensor[(48), int32], Tensor[(7, 2, 15), float32], Tensor[(588), uint8]) */
}

def @func_10683() -> (Tensor[(7, 2, 15), float32], Tensor[(4, 13, 9), float32], Tensor[(468), float32], Tensor[(7, 2, 15), int64]) {
  @func_10681() /* ty=(Tensor[(7, 2, 15), float32], Tensor[(4, 13, 9), float32], Tensor[(468), float32], Tensor[(7, 2, 15), int64]) */
}

def @func_2419(%var_2417: Tensor[(5, 10, 14), float32], %var_2418: Tensor[(5, 10, 14), float32]) -> (Tensor[(5, 10, 14), bool],) {
  @func_2415(%var_2417, %var_2418) /* ty=(Tensor[(5, 10, 14), bool],) */
}

def @func_7507() -> (Tensor[(7, 2, 15), float32], Tensor[(7, 2, 15), float32]) {
  %498 = fn () -> (Tensor[(7, 2, 15), float32], Tensor[(7, 2, 15), float32]) {
    %496 = @func_7259() /* ty=Tensor[(7, 2, 15), float32] */;
    %497 = @func_7115() /* ty=Tensor[(7, 2, 15), float32] */;
    (%496, %497)
  };
  %498() /* ty=(Tensor[(7, 2, 15), float32], Tensor[(7, 2, 15), float32]) */
}

def @func_4071(%var_4060: Tensor[(11, 11, 3), float32]) -> Tensor[(11, 11, 3), float32] {
  %499 = cast(%var_4060, dtype="float32") /* ty=Tensor[(11, 11, 3), float32] */;
  acosh(%499) /* ty=Tensor[(11, 11, 3), float32] */
}

def @func_8387(%var_8386: Tensor[(13, 11, 8), float64]) -> Tensor[(13, 11, 8), float64] {
  %501 = fn (%var_8375: Tensor[(13, 11, 8), float64]) -> Tensor[(13, 11, 8), float64] {
    %500 = cast(%var_8375, dtype="float64") /* ty=Tensor[(13, 11, 8), float64] */;
    sinh(%500) /* ty=Tensor[(13, 11, 8), float64] */
  };
  %501(%var_8386) /* ty=Tensor[(13, 11, 8), float64] */
}

def @func_9716(%var_9711: Tensor[(7, 2, 15), float32], %var_9712: Tensor[(48), int32], %var_9713: Tensor[(1650), float64], %var_9714: Tensor[(9), int8], %var_9715: Tensor[(588), uint8]) -> (Tensor[(7, 2, 15), int64], Tensor[(48), int32], Tensor[(48), int32], Tensor[(7, 2, 15), float32], Tensor[(16, 6, 3), int64], Tensor[(1650), float64], Tensor[(9), int8], Tensor[(16, 5, 12), float32], Tensor[(960), float32], Tensor[(6, 14, 7), uint8], Tensor[(588), uint8], Tensor[(3, 135), float32], Tensor[(3, 156), float32], Tensor[(3, 156), int8]) {
  %553 = fn (%var_9537: Tensor[(7, 2, 15), float32], %var_9553: Tensor[(48), int32], %var_9569: Tensor[(1650), float64], %var_9578: Tensor[(9), int8], %var_9646: Tensor[(588), uint8]) -> (Tensor[(7, 2, 15), int64], Tensor[(48), int32], Tensor[(48), int32], Tensor[(7, 2, 15), float32], Tensor[(16, 6, 3), int64], Tensor[(1650), float64], Tensor[(9), int8], Tensor[(16, 5, 12), float32], Tensor[(960), float32], Tensor[(6, 14, 7), uint8], Tensor[(588), uint8], Tensor[(3, 135), float32], Tensor[(3, 156), float32], Tensor[(3, 156), int8]) {
    %502 = @func_9428() /* ty=Tensor[(7, 2, 15), float32] */;
    %503 = cast(%var_9537, dtype="int64") /* ty=Tensor[(7, 2, 15), int64] */;
    %504 = shape_of(%502, dtype="int32") /* ty=Tensor[(3), int32] */;
    %505 = cast(%502, dtype="int64") /* ty=Tensor[(7, 2, 15), int64] */;
    %506 = dyn.reshape(%503, %504, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %507 = cast(%var_9553, dtype="int32") /* ty=Tensor[(48), int32] */;
    %508 = reshape(%507, newshape=[48]) /* ty=Tensor[(48), int32] */;
    %509 = @func_8941(%508) /* ty=(Tensor[(7, 2, 15), float32], Tensor[(8, 36), int64], Tensor[(1680), int32], Tensor[(405), float32], Tensor[(288), int64], Tensor[(48), int32]) */;
    %510 = cast(%var_9569, dtype="float64") /* ty=Tensor[(1650), float64] */;
    %511 = reshape(%510, newshape=[15, 10, 11]) /* ty=Tensor[(15, 10, 11), float64] */;
    %512 = @func_4704(%511) /* ty=(Tensor[(15, 10, 11), float64], Tensor[(16, 6, 3), int64], Tensor[(2, 144), int64]) */;
    %513 = cast(meta[relay.Constant][32] /* ty=Tensor[(960), float32] */, dtype="float32") /* ty=Tensor[(960), float32] */;
    %514 = reshape(%513, newshape=[16, 5, 12]) /* ty=Tensor[(16, 5, 12), float32] */;
    %515 = cast(%var_9646, dtype="uint8") /* ty=Tensor[(588), uint8] */;
    %516 = cast(%var_9646, dtype="uint8") /* ty=Tensor[(588), uint8] */;
    %517 = cast(%var_9646, dtype="uint8") /* ty=Tensor[(588), uint8] */;
    %518 = cast(meta[relay.Constant][33] /* ty=Tensor[(3, 135), float32] */, dtype="float32") /* ty=Tensor[(3, 135), float32] */;
    %519 = %509.5;
    %520 = cast(%519, dtype="int32") /* ty=Tensor[(48), int32] */;
    %521 = reshape(%515, newshape=[6, 14, 7]) /* ty=Tensor[(6, 14, 7), uint8] */;
    %522 = reshape(%516, newshape=[6, 14, 7]) /* ty=Tensor[(6, 14, 7), uint8] */;
    %523 = reshape(%517, newshape=[6, 14, 7]) /* ty=Tensor[(6, 14, 7), uint8] */;
    %524 = reshape(%518, newshape=[405]) /* ty=Tensor[(405), float32] */;
    %525 = reshape(%520, newshape=[48]) /* ty=Tensor[(48), int32] */;
    %526 = @func_1762(%521, %522, %523, %524, %525) /* ty=(Tensor[(6, 14, 7), bool], Tensor[(6, 14, 7), uint8], Tensor[(16, 6, 3), int64], Tensor[(405), float32], Tensor[(288), int64], Tensor[(48), int32]) */;
    %527 = cast(meta[relay.Constant][34] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %528 = cast(%var_9578, dtype="int8") /* ty=Tensor[(9), int8] */;
    %529 = reshape(%527, newshape=[]) /* ty=int8 */;
    %530 = reshape(%528, newshape=[1, 9]) /* ty=Tensor[(1, 9), int8] */;
    %531 = @func_6491(%529, %530) /* ty=(Tensor[(1, 9), int8], Tensor[(4, 13, 9), float32], Tensor[(3, 156), float32]) */;
    %532 = %531.2;
    %533 = cast(%532, dtype="float64") /* ty=Tensor[(3, 156), float64] */;
    %534 = atanh(%533) /* ty=Tensor[(3, 156), float64] */;
    %535 = cast(%532, dtype="uint64") /* ty=Tensor[(3, 156), uint64] */;
    %536 = cast(meta[relay.Constant][34] /* ty=int8 */, dtype="uint64") /* ty=uint64 */;
    %537 = logical_xor(%535, %536) /* ty=Tensor[(3, 156), uint64] */;
    %538 = cast(%537, dtype="float32") /* ty=Tensor[(3, 156), float32] */;
    %539 = shape_of(%534, dtype="int32") /* ty=Tensor[(2), int32] */;
    %540 = cast(%534, dtype="float32") /* ty=Tensor[(3, 156), float32] */;
    %541 = dyn.reshape(%538, %539, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %542 = cast(%532, dtype="int8") /* ty=Tensor[(3, 156), int8] */;
    %543 = shape_of(%534, dtype="int32") /* ty=Tensor[(2), int32] */;
    %544 = cast(%534, dtype="int8") /* ty=Tensor[(3, 156), int8] */;
    %545 = dyn.reshape(%542, %543, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
    %546 = bitwise_or(%505, %506) /* ty=Tensor[(7, 2, 15), int64] */;
    %547 = @func_8824() /* ty=Tensor[(7, 2, 15), float32] */;
    %548 = %512.1;
    %549 = @func_5420(%514) /* ty=Tensor[(16, 5, 12), float32] */;
    %550 = %526.1;
    %551 = mod(%540, %541) /* ty=Tensor[(3, 156), float32] */;
    %552 = right_shift(%544, %545) /* ty=Tensor[(3, 156), int8] */;
    (%546, %519, %var_9553, %547, %548, %var_9569, %var_9578, %549, meta[relay.Constant][32] /* ty=Tensor[(960), float32] */, %550, %var_9646, meta[relay.Constant][33] /* ty=Tensor[(3, 135), float32] */, %551, %552)
  };
  %553(%var_9711, %var_9712, %var_9713, %var_9714, %var_9715) /* ty=(Tensor[(7, 2, 15), int64], Tensor[(48), int32], Tensor[(48), int32], Tensor[(7, 2, 15), float32], Tensor[(16, 6, 3), int64], Tensor[(1650), float64], Tensor[(9), int8], Tensor[(16, 5, 12), float32], Tensor[(960), float32], Tensor[(6, 14, 7), uint8], Tensor[(588), uint8], Tensor[(3, 135), float32], Tensor[(3, 156), float32], Tensor[(3, 156), int8]) */
}

def @func_6939(%var_6938: Tensor[(15, 8, 3), uint64]) -> (Tensor[(15, 8, 3), bool],) {
  %557 = fn (%var_6931: Tensor[(15, 8, 3), uint64]) -> (Tensor[(15, 8, 3), bool],) {
    %554 = cast(meta[relay.Constant][35] /* ty=Tensor[(15, 1, 3), uint64] */, dtype="bool") /* ty=Tensor[(15, 1, 3), bool] */;
    %555 = cast(%var_6931, dtype="bool") /* ty=Tensor[(15, 8, 3), bool] */;
    %556 = greater_equal(%554, %555) /* ty=Tensor[(15, 8, 3), bool] */;
    (%556,)
  };
  %557(%var_6938) /* ty=(Tensor[(15, 8, 3), bool],) */
}

def @func_6495(%var_6493: int8, %var_6494: Tensor[(1, 9), int8]) -> (Tensor[(1, 9), int8], Tensor[(4, 13, 9), float32], Tensor[(3, 156), float32]) {
  @func_6491(%var_6493, %var_6494) /* ty=(Tensor[(1, 9), int8], Tensor[(4, 13, 9), float32], Tensor[(3, 156), float32]) */
}

def @func_11510(%var_11509: Tensor[(4, 4, 15), uint64]) -> (Tensor[(4, 4, 15), bool], Tensor[(468), float32], Tensor[(405), float32], Tensor[(12, 4), int32], Tensor[(4, 4, 15), float64]) {
  %576 = fn (%var_11451: Tensor[(4, 4, 15), uint64]) -> (Tensor[(4, 4, 15), bool], Tensor[(468), float32], Tensor[(405), float32], Tensor[(12, 4), int32], Tensor[(4, 4, 15), float64]) {
    %558 = cast(meta[relay.Constant][36] /* ty=Tensor[(4, 4, 15), uint64] */, dtype="bool") /* ty=Tensor[(4, 4, 15), bool] */;
    %559 = shape_of(%var_11451, dtype="int32") /* ty=Tensor[(3), int32] */;
    %560 = cast(%var_11451, dtype="bool") /* ty=Tensor[(4, 4, 15), bool] */;
    %561 = dyn.reshape(%558, %559, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %562 = cast(meta[relay.Constant][37] /* ty=Tensor[(405), float32] */, dtype="float32") /* ty=Tensor[(405), float32] */;
    %563 = cast(meta[relay.Constant][38] /* ty=Tensor[(12, 4), int32] */, dtype="int32") /* ty=Tensor[(12, 4), int32] */;
    %564 = reshape(%562, newshape=[405]) /* ty=Tensor[(405), float32] */;
    %565 = reshape(%563, newshape=[24, 2]) /* ty=Tensor[(24, 2), int32] */;
    %566 = @func_10887(%564, %565) /* ty=(Tensor[(7, 2, 15), float32], Tensor[(468), float32], Tensor[(405), float32], Tensor[(24, 2), int32]) */;
    %567 = cast(%var_11451, dtype="uint64") /* ty=Tensor[(4, 4, 15), uint64] */;
    %568 = shape_of(meta[relay.Constant][39] /* ty=Tensor[(4, 4, 15), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %569 = cast(meta[relay.Constant][39] /* ty=Tensor[(4, 4, 15), uint64] */, dtype="uint64") /* ty=Tensor[(4, 4, 15), uint64] */;
    %570 = dyn.reshape(%567, %568, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %571 = minimum(%569, %570) /* ty=Tensor[(4, 4, 15), uint64] */;
    %572 = cast(%571, dtype="float64") /* ty=Tensor[(4, 4, 15), float64] */;
    %573 = logical_or(%560, %561) /* ty=Tensor[(4, 4, 15), bool] */;
    %574 = %566.1;
    %575 = acosh(%572) /* ty=Tensor[(4, 4, 15), float64] */;
    (%573, %574, meta[relay.Constant][37] /* ty=Tensor[(405), float32] */, meta[relay.Constant][38] /* ty=Tensor[(12, 4), int32] */, %575)
  };
  %576(%var_11509) /* ty=(Tensor[(4, 4, 15), bool], Tensor[(468), float32], Tensor[(405), float32], Tensor[(12, 4), int32], Tensor[(4, 4, 15), float64]) */
}

def @func_8534(%var_8533: Tensor[(6, 9, 9), float64]) -> (Tensor[(6, 9, 9), float64], Tensor[(6, 9, 9), bool]) {
  %584 = fn (%var_8517: Tensor[(6, 9, 9), float64]) -> (Tensor[(6, 9, 9), float64], Tensor[(6, 9, 9), bool]) {
    %577 = cast(%var_8517, dtype="float64") /* ty=Tensor[(6, 9, 9), float64] */;
    %578 = cast(meta[relay.Constant][40] /* ty=Tensor[(6, 9, 9), float64] */, dtype="bool") /* ty=Tensor[(6, 9, 9), bool] */;
    %579 = shape_of(%var_8517, dtype="int32") /* ty=Tensor[(3), int32] */;
    %580 = cast(%var_8517, dtype="bool") /* ty=Tensor[(6, 9, 9), bool] */;
    %581 = dyn.reshape(%578, %579, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %582 = atanh(%577) /* ty=Tensor[(6, 9, 9), float64] */;
    %583 = less_equal(%580, %581) /* ty=Tensor[(6, 9, 9), bool] */;
    (%582, %583)
  };
  %584(%var_8533) /* ty=(Tensor[(6, 9, 9), float64], Tensor[(6, 9, 9), bool]) */
}

def @func_8749() -> Tensor[(7, 2, 15), float32] {
  @func_8747() /* ty=Tensor[(7, 2, 15), float32] */
}

def @func_6026(%var_5956: Tensor[(405), float32], %var_5957: Tensor[(144, 2), int64], %var_5958: Tensor[(48), int32], %var_6015: Tensor[(1, 468), float32]) -> (Tensor[(8, 36), int64], Tensor[(12, 140), int32], Tensor[(405), float32], Tensor[(144, 2), int64], Tensor[(48), int32], Tensor[(16, 5, 12), float32], Tensor[(960), float32], Tensor[(16, 11, ?), float32], Tensor[(4, 13, 9), float32], Tensor[(1, 468), float32], Tensor[(16, 11, ?), int16]) {
  %585 = cast(meta[relay.Constant][41] /* ty=Tensor[(12, 140), int32] */, dtype="int32") /* ty=Tensor[(12, 140), int32] */;
  %586 = cast(%var_5956, dtype="float32") /* ty=Tensor[(405), float32] */;
  %587 = cast(%var_5957, dtype="int64") /* ty=Tensor[(144, 2), int64] */;
  %588 = cast(%var_5958, dtype="int32") /* ty=Tensor[(48), int32] */;
  %589 = reshape(%585, newshape=[16, 7, 15]) /* ty=Tensor[(16, 7, 15), int32] */;
  %590 = reshape(%586, newshape=[405]) /* ty=Tensor[(405), float32] */;
  %591 = reshape(%587, newshape=[288]) /* ty=Tensor[(288), int64] */;
  %592 = reshape(%588, newshape=[2, 24]) /* ty=Tensor[(2, 24), int32] */;
  %593 = @func_2831(%589, %590, %591, %592) /* ty=(Tensor[(16, 7, 15), int32], Tensor[(16, 7, 15), bool], Tensor[(8, 36), int64], Tensor[(1352), float64], Tensor[(405), float32], Tensor[(288), int64], Tensor[(2, 24), int32]) */;
  %594 = cast(meta[relay.Constant][42] /* ty=Tensor[(960), float32] */, dtype="float32") /* ty=Tensor[(960), float32] */;
  %595 = reshape(%594, newshape=[16, 5, 12]) /* ty=Tensor[(16, 5, 12), float32] */;
  %596 = cast(meta[relay.Constant][43] /* ty=Tensor[(16, 11, 1), float32] */, dtype="float32") /* ty=Tensor[(16, 11, 1), float32] */;
  %597 = sinh(%596) /* ty=Tensor[(16, 11, 1), float32] */;
  %598 = cast(%597, dtype="float64") /* ty=Tensor[(16, 11, 1), float64] */;
  %599 = log(%598) /* ty=Tensor[(16, 11, 1), float64] */;
  %600 = cast(%599, dtype="float32") /* ty=Tensor[(16, 11, 1), float32] */;
  %601 = acos(%600) /* ty=Tensor[(16, 11, 1), float32] */;
  %602 = cast(%601, dtype="float64") /* ty=Tensor[(16, 11, 1), float64] */;
  %603 = asinh(%602) /* ty=Tensor[(16, 11, 1), float64] */;
  %604 = cast(%603, dtype="float32") /* ty=Tensor[(16, 11, 1), float32] */;
  %605 = exp(%604) /* ty=Tensor[(16, 11, 1), float32] */;
  %606 = cast(%599, dtype="int64") /* ty=Tensor[(16, 11, 1), int64] */;
  %607 = shape_of(%601, dtype="int32") /* ty=Tensor[(3), int32] */;
  %608 = cast(%601, dtype="int64") /* ty=Tensor[(16, 11, 1), int64] */;
  %609 = dyn.reshape(%606, %607, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %610 = maximum(%608, %609) /* ty=Tensor[(16, 11, ?), int64] */;
  %611 = cast(%610, dtype="float32") /* ty=Tensor[(16, 11, ?), float32] */;
  %612 = shape_of(%605, dtype="int32") /* ty=Tensor[(3), int32] */;
  %613 = cast(%605, dtype="float32") /* ty=Tensor[(16, 11, 1), float32] */;
  %614 = dyn.reshape(%611, %612, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %615 = cast(%var_6015, dtype="float32") /* ty=Tensor[(1, 468), float32] */;
  %616 = reshape(%615, newshape=[4, 13, 9]) /* ty=Tensor[(4, 13, 9), float32] */;
  %617 = cast(%605, dtype="int16") /* ty=Tensor[(16, 11, 1), int16] */;
  %618 = shape_of(%603, dtype="int32") /* ty=Tensor[(3), int32] */;
  %619 = cast(%603, dtype="int16") /* ty=Tensor[(16, 11, 1), int16] */;
  %620 = dyn.reshape(%617, %618, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %621 = %593.2;
  %622 = @func_5420(%595) /* ty=Tensor[(16, 5, 12), float32] */;
  %623 = multiply(%613, %614) /* ty=Tensor[(16, 11, ?), float32] */;
  %624 = @func_2688(%616) /* ty=Tensor[(4, 13, 9), float32] */;
  %625 = bitwise_and(%619, %620) /* ty=Tensor[(16, 11, ?), int16] */;
  (%621, meta[relay.Constant][41] /* ty=Tensor[(12, 140), int32] */, %var_5956, %var_5957, %var_5958, %622, meta[relay.Constant][42] /* ty=Tensor[(960), float32] */, %623, %624, %var_6015, %625)
}

def @func_10103() -> Tensor[(7, 2, 15), int64] {
  %627 = fn () -> Tensor[(7, 2, 15), int64] {
    %626 = @func_8421() /* ty=(Tensor[(7, 2, 15), int64], Tensor[(5, 10, 14), bool], Tensor[(700), float32]) */;
    %626.0
  };
  %627() /* ty=Tensor[(7, 2, 15), int64] */
}

def @func_10887(%var_10877: Tensor[(405), float32], %var_10878: Tensor[(24, 2), int32]) -> (Tensor[(7, 2, 15), float32], Tensor[(468), float32], Tensor[(405), float32], Tensor[(24, 2), int32]) {
  %628 = cast(%var_10877, dtype="float32") /* ty=Tensor[(405), float32] */;
  %629 = cast(%var_10878, dtype="int32") /* ty=Tensor[(24, 2), int32] */;
  %630 = reshape(%628, newshape=[135, 3]) /* ty=Tensor[(135, 3), float32] */;
  %631 = reshape(%629, newshape=[48]) /* ty=Tensor[(48), int32] */;
  %632 = @func_10640(%630, %631) /* ty=(Tensor[(8, 36), int64], Tensor[(1352), float64], Tensor[(135, 3), float32], Tensor[(8, 36), int64], Tensor[(48), int32], Tensor[(4, 13, 9), float32], Tensor[(468), float32], Tensor[(7, 2, 15), float64], Tensor[(13, 11, 8), float64], Tensor[(1144), float64]) */;
  %633 = @func_8291() /* ty=Tensor[(7, 2, 15), float32] */;
  %634 = %632.6;
  (%633, %634, %var_10877, %var_10878)
}

def @func_1127(%var_1125: Tensor[(13, 6, 6), float32]) -> (Tensor[(13, 6, 6), bool],) {
  @func_1124(%var_1125) /* ty=(Tensor[(13, 6, 6), bool],) */
}

def @func_6573(%var_6571: Tensor[(13, 15, 15), int64], %var_6572: Tensor[(13, 15, 15), int64]) -> (Tensor[(13, 15, 15), int64],) {
  @func_6569(%var_6571, %var_6572) /* ty=(Tensor[(13, 15, 15), int64],) */
}

def @func_23(%var_22: Tensor[(16, 6, 3), int64]) -> Tensor[(16, 6, 3), int64] {
  %639 = fn (%var_5: Tensor[(16, 6, 3), int64]) -> Tensor[(16, 6, 3), int64] {
    %635 = cast(meta[relay.Constant][44] /* ty=Tensor[(16, 6, 3), int64] */, dtype="int64") /* ty=Tensor[(16, 6, 3), int64] */;
    %636 = shape_of(%var_5, dtype="int32") /* ty=Tensor[(3), int32] */;
    %637 = cast(%var_5, dtype="int64") /* ty=Tensor[(16, 6, 3), int64] */;
    %638 = dyn.reshape(%635, %636, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    bitwise_or(%637, %638) /* ty=Tensor[(16, 6, 3), int64] */
  };
  %639(%var_22) /* ty=Tensor[(16, 6, 3), int64] */
}

def @func_2364(%var_2361: Tensor[(6, 1, 8), float64], %var_2362: Tensor[(6, 13, 8), float64], %var_2363: Tensor[(468), float32]) -> (Tensor[(6, 13, 8), float64], Tensor[(16, 6, 3), int64], Tensor[(3, 135), float32], Tensor[(288), int64], Tensor[(16, 6, 3), int64], Tensor[(13, 6, 6), bool], Tensor[(468), float32]) {
  @func_2359(%var_2361, %var_2362, %var_2363) /* ty=(Tensor[(6, 13, 8), float64], Tensor[(16, 6, 3), int64], Tensor[(3, 135), float32], Tensor[(288), int64], Tensor[(16, 6, 3), int64], Tensor[(13, 6, 6), bool], Tensor[(468), float32]) */
}

def @func_8163(%var_8162: Tensor[(1, 48), int32]) -> (Tensor[(7, 2, 15), float32], Tensor[(6, 14, 7), uint8], Tensor[(588), uint8], Tensor[(9, 45), float32], Tensor[(1, 48), int32], Tensor[(7, 2, 15), float32]) {
  %655 = fn (%var_8150: Tensor[(1, 48), int32]) -> (Tensor[(7, 2, 15), float32], Tensor[(6, 14, 7), uint8], Tensor[(588), uint8], Tensor[(9, 45), float32], Tensor[(1, 48), int32], Tensor[(7, 2, 15), float32]) {
    %640 = @func_7238() /* ty=(Tensor[(7, 2, 15), float32],) */;
    %641 = cast(meta[relay.Constant][45] /* ty=Tensor[(588), uint8] */, dtype="uint8") /* ty=Tensor[(588), uint8] */;
    %642 = cast(meta[relay.Constant][45] /* ty=Tensor[(588), uint8] */, dtype="uint8") /* ty=Tensor[(588), uint8] */;
    %643 = cast(meta[relay.Constant][45] /* ty=Tensor[(588), uint8] */, dtype="uint8") /* ty=Tensor[(588), uint8] */;
    %644 = cast(meta[relay.Constant][46] /* ty=Tensor[(9, 45), float32] */, dtype="float32") /* ty=Tensor[(9, 45), float32] */;
    %645 = cast(%var_8150, dtype="int32") /* ty=Tensor[(1, 48), int32] */;
    %646 = reshape(%641, newshape=[6, 14, 7]) /* ty=Tensor[(6, 14, 7), uint8] */;
    %647 = reshape(%642, newshape=[6, 14, 7]) /* ty=Tensor[(6, 14, 7), uint8] */;
    %648 = reshape(%643, newshape=[6, 14, 7]) /* ty=Tensor[(6, 14, 7), uint8] */;
    %649 = reshape(%644, newshape=[405]) /* ty=Tensor[(405), float32] */;
    %650 = reshape(%645, newshape=[48]) /* ty=Tensor[(48), int32] */;
    %651 = @func_1762(%646, %647, %648, %649, %650) /* ty=(Tensor[(6, 14, 7), bool], Tensor[(6, 14, 7), uint8], Tensor[(16, 6, 3), int64], Tensor[(405), float32], Tensor[(288), int64], Tensor[(48), int32]) */;
    %652 = %640.0;
    %653 = %651.1;
    %654 = @func_7259() /* ty=Tensor[(7, 2, 15), float32] */;
    (%652, %653, meta[relay.Constant][45] /* ty=Tensor[(588), uint8] */, meta[relay.Constant][46] /* ty=Tensor[(9, 45), float32] */, %var_8150, %654)
  };
  %655(%var_8162) /* ty=(Tensor[(7, 2, 15), float32], Tensor[(6, 14, 7), uint8], Tensor[(588), uint8], Tensor[(9, 45), float32], Tensor[(1, 48), int32], Tensor[(7, 2, 15), float32]) */
}

def @func_9834() -> (Tensor[(7, 2, 15), float32],) {
  %657 = fn () -> (Tensor[(7, 2, 15), float32],) {
    %656 = @func_8824() /* ty=Tensor[(7, 2, 15), float32] */;
    (%656,)
  };
  %657() /* ty=(Tensor[(7, 2, 15), float32],) */
}

def @func_4074(%var_4072: Tensor[(11, 11, 3), float32]) -> Tensor[(11, 11, 3), float32] {
  @func_4071(%var_4072) /* ty=Tensor[(11, 11, 3), float32] */
}

def @func_11234(%var_11232: Tensor[(98, 6), uint8], %var_11233: Tensor[(98, 6), uint8]) -> (Tensor[(7, 2, 15), float32], Tensor[(7, 2, 15), float32], Tensor[(7, 2, 15), float32], Tensor[(7, 2, 15), int64], Tensor[(98, 6), bool]) {
  @func_11230(%var_11232, %var_11233) /* ty=(Tensor[(7, 2, 15), float32], Tensor[(7, 2, 15), float32], Tensor[(7, 2, 15), float32], Tensor[(7, 2, 15), int64], Tensor[(98, 6), bool]) */
}

def @func_11928(%var_11924: Tensor[(405), float32], %var_11925: Tensor[(48), int32], %var_11926: Tensor[(560), int16], %var_11927: Tensor[(363), float32]) -> (Tensor[(7, 2, 15), float32], Tensor[(7, 2, 15), float32], Tensor[(7, 2, 15), int64], Tensor[(16, 6, 3), int64], Tensor[(588), uint8], Tensor[(405), float32], Tensor[(48), int32], Tensor[(15, 8, 7), uint32], Tensor[(11, 11, 3), float32], Tensor[(560), int16], Tensor[(363), float32]) {
  @func_11922(%var_11924, %var_11925, %var_11926, %var_11927) /* ty=(Tensor[(7, 2, 15), float32], Tensor[(7, 2, 15), float32], Tensor[(7, 2, 15), int64], Tensor[(16, 6, 3), int64], Tensor[(588), uint8], Tensor[(405), float32], Tensor[(48), int32], Tensor[(15, 8, 7), uint32], Tensor[(11, 11, 3), float32], Tensor[(560), int16], Tensor[(363), float32]) */
}

def @func_8450() -> Tensor[(7, 2, 15), float32] {
  %658 = fn () -> Tensor[(7, 2, 15), float32] {
    @func_8437() /* ty=Tensor[(7, 2, 15), float32] */
  };
  %658() /* ty=Tensor[(7, 2, 15), float32] */
}

def @func_9825(%var_9817: Tensor[(40, 26), float32], %var_9821: Tensor[(405), float32]) -> (Tensor[(7, 2, 15), int64], Tensor[(7, 2, 15), float32], Tensor[(40, 26), float32], Tensor[(1680), int32], Tensor[(1680), int32], Tensor[(405), float32], Tensor[(288), int64], Tensor[(48), int32]) {
  %659 = @func_8222() /* ty=(Tensor[(7, 2, 15), int64],) */;
  %660 = cast(%var_9817, dtype="float32") /* ty=Tensor[(40, 26), float32] */;
  %661 = reshape(%660, newshape=[1, 1040]) /* ty=Tensor[(1, 1040), float32] */;
  %662 = @func_8359(%661) /* ty=(Tensor[(3, 12, 10), float32], Tensor[(7, 2, 15), float32], Tensor[(10, 9, 1), float32], Tensor[(90), float32], Tensor[(16, 5, 13), float32], Tensor[(1, 1040), float32], Tensor[(7, 2, 15), int64]) */;
  %663 = cast(meta[relay.Constant][47] /* ty=Tensor[(1680), int32] */, dtype="int32") /* ty=Tensor[(1680), int32] */;
  %664 = cast(%var_9821, dtype="float32") /* ty=Tensor[(405), float32] */;
  %665 = cast(meta[relay.Constant][48] /* ty=Tensor[(288), int64] */, dtype="int64") /* ty=Tensor[(288), int64] */;
  %666 = cast(meta[relay.Constant][49] /* ty=Tensor[(48), int32] */, dtype="int32") /* ty=Tensor[(48), int32] */;
  %667 = reshape(%663, newshape=[1680]) /* ty=Tensor[(1680), int32] */;
  %668 = reshape(%664, newshape=[1, 405]) /* ty=Tensor[(1, 405), float32] */;
  %669 = reshape(%665, newshape=[288]) /* ty=Tensor[(288), int64] */;
  %670 = reshape(%666, newshape=[48]) /* ty=Tensor[(48), int32] */;
  %671 = @func_9384(%667, %668, %669, %670) /* ty=(Tensor[(7, 2, 15), float32], Tensor[(288), int64], Tensor[(1680), int32], Tensor[(1, 405), float32], Tensor[(288), int64], Tensor[(48), int32]) */;
  %672 = %659.0;
  %673 = %662.1;
  %674 = %671.2;
  (%672, %673, %var_9817, %674, meta[relay.Constant][47] /* ty=Tensor[(1680), int32] */, %var_9821, meta[relay.Constant][48] /* ty=Tensor[(288), int64] */, meta[relay.Constant][49] /* ty=Tensor[(48), int32] */)
}

def @func_2831(%var_2787: Tensor[(16, 7, 15), int32], %var_2813: Tensor[(405), float32], %var_2814: Tensor[(288), int64], %var_2815: Tensor[(2, 24), int32]) -> (Tensor[(16, 7, 15), int32], Tensor[(16, 7, 15), bool], Tensor[(8, 36), int64], Tensor[(1352), float64], Tensor[(405), float32], Tensor[(288), int64], Tensor[(2, 24), int32]) {
  %675 = cast(-6 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %676 = cast(%var_2787, dtype="int32") /* ty=Tensor[(16, 7, 15), int32] */;
  %677 = cast(meta[relay.Constant][50] /* ty=Tensor[(16, 7, 15), int32] */, dtype="bool") /* ty=Tensor[(16, 7, 15), bool] */;
  %678 = shape_of(%var_2787, dtype="int32") /* ty=Tensor[(3), int32] */;
  %679 = cast(%var_2787, dtype="bool") /* ty=Tensor[(16, 7, 15), bool] */;
  %680 = dyn.reshape(%677, %678, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %681 = cast(meta[relay.Constant][51] /* ty=Tensor[(1352), float64] */, dtype="float64") /* ty=Tensor[(1352), float64] */;
  %682 = cast(%var_2813, dtype="float32") /* ty=Tensor[(405), float32] */;
  %683 = cast(%var_2814, dtype="int64") /* ty=Tensor[(288), int64] */;
  %684 = cast(%var_2815, dtype="int32") /* ty=Tensor[(2, 24), int32] */;
  %685 = reshape(%681, newshape=[8, 13, 13]) /* ty=Tensor[(8, 13, 13), float64] */;
  %686 = reshape(%682, newshape=[405]) /* ty=Tensor[(405), float32] */;
  %687 = reshape(%683, newshape=[8, 36]) /* ty=Tensor[(8, 36), int64] */;
  %688 = reshape(%684, newshape=[2, 24]) /* ty=Tensor[(2, 24), int32] */;
  %689 = @func_2100(%685, %686, %687, %688) /* ty=(Tensor[(8, 13, 13), float64], Tensor[(4, 4, 3), int16], Tensor[(405), float32], Tensor[(8, 36), int64], Tensor[(2, 24), int32], Tensor[(16, 6, 3), int64]) */;
  %690 = subtract(%675, %676) /* ty=Tensor[(16, 7, 15), int32] */;
  %691 = logical_or(%679, %680) /* ty=Tensor[(16, 7, 15), bool] */;
  %692 = %689.3;
  (%690, %691, %692, meta[relay.Constant][51] /* ty=Tensor[(1352), float64] */, %var_2813, %var_2814, %var_2815)
}

def @func_3697(%var_3695: Tensor[(10, 9, 1), float32]) -> Tensor[(10, 9, 1), float32] {
  @func_3694(%var_3695) /* ty=Tensor[(10, 9, 1), float32] */
}

def @func_6569(%var_6564: Tensor[(13, 15, 15), int64], %var_6565: Tensor[(13, 15, 15), int64]) -> (Tensor[(13, 15, 15), int64],) {
  %693 = cast(%var_6565, dtype="int64") /* ty=Tensor[(13, 15, 15), int64] */;
  %694 = shape_of(%var_6564, dtype="int32") /* ty=Tensor[(3), int32] */;
  %695 = cast(%var_6564, dtype="int64") /* ty=Tensor[(13, 15, 15), int64] */;
  %696 = dyn.reshape(%693, %694, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %697 = right_shift(%695, %696) /* ty=Tensor[(13, 15, 15), int64] */;
  (%697,)
}

def @func_8406() -> (Tensor[(7, 2, 15), float32], Tensor[(7, 2, 15), float32]) {
  @func_8404() /* ty=(Tensor[(7, 2, 15), float32], Tensor[(7, 2, 15), float32]) */
}

def @func_4643(%var_4641: Tensor[(16, 3, 6), float64]) -> (Tensor[(16, 3, 6), float64],) {
  @func_4640(%var_4641) /* ty=(Tensor[(16, 3, 6), float64],) */
}

def @func_3672(%var_3670: Tensor[(3, 16, 14), uint8]) -> (Tensor[(3, 16, 14), uint8],) {
  @func_3669(%var_3670) /* ty=(Tensor[(3, 16, 14), uint8],) */
}

def @func_11339() -> (Tensor[(9, 3, 10), float64],) {
  @func_11337() /* ty=(Tensor[(9, 3, 10), float64],) */
}

def @func_7333() -> (Tensor[(7, 2, 15), float32],) {
  @func_7331() /* ty=(Tensor[(7, 2, 15), float32],) */
}

def @func_10908() -> Tensor[(9, 3, 10), float64] {
  %698 = fn () -> Tensor[(9, 3, 10), float64] {
    @func_9296() /* ty=Tensor[(9, 3, 10), float64] */
  };
  %698() /* ty=Tensor[(9, 3, 10), float64] */
}

def @func_11864(%var_11862: Tensor[(700), float32]) -> (Tensor[(9, 3, 10), float64], Tensor[(700), float32], Tensor[(48), int32], Tensor[(7, 2, 15), float32], Tensor[(45, 9), bool], Tensor[(7, 2, 15), float32]) {
  @func_11861(%var_11862) /* ty=(Tensor[(9, 3, 10), float64], Tensor[(700), float32], Tensor[(48), int32], Tensor[(7, 2, 15), float32], Tensor[(45, 9), bool], Tensor[(7, 2, 15), float32]) */
}

def @func_9054() -> (Tensor[(7, 2, 15), float32],) {
  @func_9052() /* ty=(Tensor[(7, 2, 15), float32],) */
}

def @func_11736() -> (Tensor[(7, 2, 15), float32],) {
  %699 = @func_8317() /* ty=Tensor[(7, 2, 15), float32] */;
  (%699,)
}

def @func_10028(%var_10026: Tensor[(468), float32]) -> (Tensor[(1040), float32], Tensor[(4, 13, 9), float32], Tensor[(468), float32], Tensor[(13, 6, 6), bool], Tensor[(48), int32], Tensor[(588), uint8]) {
  @func_10025(%var_10026) /* ty=(Tensor[(1040), float32], Tensor[(4, 13, 9), float32], Tensor[(468), float32], Tensor[(13, 6, 6), bool], Tensor[(48), int32], Tensor[(588), uint8]) */
}

def @func_11293() -> (Tensor[(9, 3, 10), float64],) {
  %700 = @func_10907() /* ty=Tensor[(9, 3, 10), float64] */;
  (%700,)
}

def @func_7559(%var_7557: Tensor[(588), uint8]) -> (Tensor[(7, 2, 15), float32], Tensor[(15, 8, 7), uint32], Tensor[(420, 2), uint32], Tensor[(6, 14, 7), bool], Tensor[(588), uint8], Tensor[(135, 3), float32], Tensor[(48), int32]) {
  @func_7556(%var_7557) /* ty=(Tensor[(7, 2, 15), float32], Tensor[(15, 8, 7), uint32], Tensor[(420, 2), uint32], Tensor[(6, 14, 7), bool], Tensor[(588), uint8], Tensor[(135, 3), float32], Tensor[(48), int32]) */
}

def @func_3905(%var_3902: Tensor[(700), float32], %var_3903: Tensor[(1, 405), float32], %var_3904: Tensor[(48), int32]) -> (Tensor[(1, 16, 16), float32], Tensor[(5, 10, 14), bool], Tensor[(700), float32], Tensor[(8, 13, 13), float64], Tensor[(26, 52), float64], Tensor[(1, 405), float32], Tensor[(288), int64], Tensor[(48), int32]) {
  %719 = fn (%var_3883: Tensor[(700), float32], %var_3897: Tensor[(1, 405), float32], %var_3899: Tensor[(48), int32]) -> (Tensor[(1, 16, 16), float32], Tensor[(5, 10, 14), bool], Tensor[(700), float32], Tensor[(8, 13, 13), float64], Tensor[(26, 52), float64], Tensor[(1, 405), float32], Tensor[(288), int64], Tensor[(48), int32]) {
    %701 = cast(meta[relay.Constant][52] /* ty=Tensor[(1, 16, 16), float32] */, dtype="float32") /* ty=Tensor[(1, 16, 16), float32] */;
    %702 = cast(%var_3883, dtype="float32") /* ty=Tensor[(700), float32] */;
    %703 = cast(%var_3883, dtype="float32") /* ty=Tensor[(700), float32] */;
    %704 = reshape(%702, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), float32] */;
    %705 = reshape(%703, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), float32] */;
    %706 = @func_2415(%704, %705) /* ty=(Tensor[(5, 10, 14), bool],) */;
    %707 = cast(meta[relay.Constant][53] /* ty=Tensor[(26, 52), float64] */, dtype="float64") /* ty=Tensor[(26, 52), float64] */;
    %708 = cast(%var_3897, dtype="float32") /* ty=Tensor[(1, 405), float32] */;
    %709 = cast(meta[relay.Constant][54] /* ty=Tensor[(288), int64] */, dtype="int64") /* ty=Tensor[(288), int64] */;
    %710 = cast(%var_3899, dtype="int32") /* ty=Tensor[(48), int32] */;
    %711 = reshape(%707, newshape=[8, 13, 13]) /* ty=Tensor[(8, 13, 13), float64] */;
    %712 = reshape(%708, newshape=[405]) /* ty=Tensor[(405), float32] */;
    %713 = reshape(%709, newshape=[8, 36]) /* ty=Tensor[(8, 36), int64] */;
    %714 = reshape(%710, newshape=[2, 24]) /* ty=Tensor[(2, 24), int32] */;
    %715 = @func_2100(%711, %712, %713, %714) /* ty=(Tensor[(8, 13, 13), float64], Tensor[(4, 4, 3), int16], Tensor[(405), float32], Tensor[(8, 36), int64], Tensor[(2, 24), int32], Tensor[(16, 6, 3), int64]) */;
    %716 = acos(%701) /* ty=Tensor[(1, 16, 16), float32] */;
    %717 = %706.0;
    %718 = %715.0;
    (%716, %717, %var_3883, %718, meta[relay.Constant][53] /* ty=Tensor[(26, 52), float64] */, %var_3897, meta[relay.Constant][54] /* ty=Tensor[(288), int64] */, %var_3899)
  };
  %719(%var_3902, %var_3903, %var_3904) /* ty=(Tensor[(1, 16, 16), float32], Tensor[(5, 10, 14), bool], Tensor[(700), float32], Tensor[(8, 13, 13), float64], Tensor[(26, 52), float64], Tensor[(1, 405), float32], Tensor[(288), int64], Tensor[(48), int32]) */
}

def @func_11318() -> (Tensor[(7, 2, 15), float32],) {
  %720 = @func_9833() /* ty=(Tensor[(7, 2, 15), float32],) */;
  %721 = %720.0;
  (%721,)
}

def @func_8292() -> Tensor[(7, 2, 15), float32] {
  %723 = fn () -> Tensor[(7, 2, 15), float32] {
    %722 = @func_7331() /* ty=(Tensor[(7, 2, 15), float32],) */;
    %722.0
  };
  %723() /* ty=Tensor[(7, 2, 15), float32] */
}

def @func_5423(%var_5421: Tensor[(16, 5, 12), float32]) -> Tensor[(16, 5, 12), float32] {
  @func_5420(%var_5421) /* ty=Tensor[(16, 5, 12), float32] */
}

def @func_10808() -> Tensor[(7, 2, 15), float32] {
  %724 = @func_7506() /* ty=(Tensor[(7, 2, 15), float32], Tensor[(7, 2, 15), float32]) */;
  %724.0
}

def @func_8941(%var_8920: Tensor[(48), int32]) -> (Tensor[(7, 2, 15), float32], Tensor[(8, 36), int64], Tensor[(1680), int32], Tensor[(405), float32], Tensor[(288), int64], Tensor[(48), int32]) {
  %725 = cast(meta[relay.Constant][55] /* ty=Tensor[(1680), int32] */, dtype="int32") /* ty=Tensor[(1680), int32] */;
  %726 = cast(meta[relay.Constant][56] /* ty=Tensor[(405), float32] */, dtype="float32") /* ty=Tensor[(405), float32] */;
  %727 = cast(meta[relay.Constant][57] /* ty=Tensor[(288), int64] */, dtype="int64") /* ty=Tensor[(288), int64] */;
  %728 = cast(%var_8920, dtype="int32") /* ty=Tensor[(48), int32] */;
  %729 = reshape(%725, newshape=[16, 7, 15]) /* ty=Tensor[(16, 7, 15), int32] */;
  %730 = reshape(%726, newshape=[405]) /* ty=Tensor[(405), float32] */;
  %731 = reshape(%727, newshape=[288]) /* ty=Tensor[(288), int64] */;
  %732 = reshape(%728, newshape=[2, 24]) /* ty=Tensor[(2, 24), int32] */;
  %733 = @func_2831(%729, %730, %731, %732) /* ty=(Tensor[(16, 7, 15), int32], Tensor[(16, 7, 15), bool], Tensor[(8, 36), int64], Tensor[(1352), float64], Tensor[(405), float32], Tensor[(288), int64], Tensor[(2, 24), int32]) */;
  %734 = @func_8747() /* ty=Tensor[(7, 2, 15), float32] */;
  %735 = %733.2;
  (%734, %735, meta[relay.Constant][55] /* ty=Tensor[(1680), int32] */, meta[relay.Constant][56] /* ty=Tensor[(405), float32] */, meta[relay.Constant][57] /* ty=Tensor[(288), int64] */, %var_8920)
}

def @func_5246(%var_5220: Tensor[(1, 15, 4), float32], %var_5242: Tensor[(25), float64]) -> (Tensor[(1, 15, 4), float32], Tensor[(15, 9, 3), float32], Tensor[(25), float64], Tensor[(468), float32], Tensor[(405), float32]) {
  %736 = cast(%var_5220, dtype="float32") /* ty=Tensor[(1, 15, 4), float32] */;
  %737 = cast(%var_5242, dtype="float64") /* ty=Tensor[(25), float64] */;
  %738 = cast(meta[relay.Constant][58] /* ty=Tensor[(468), float32] */, dtype="float32") /* ty=Tensor[(468), float32] */;
  %739 = cast(meta[relay.Constant][59] /* ty=Tensor[(405), float32] */, dtype="float32") /* ty=Tensor[(405), float32] */;
  %740 = reshape(%737, newshape=[5, 1, 5]) /* ty=Tensor[(5, 1, 5), float64] */;
  %741 = reshape(%738, newshape=[6, 78]) /* ty=Tensor[(6, 78), float32] */;
  %742 = reshape(%739, newshape=[405]) /* ty=Tensor[(405), float32] */;
  %743 = @func_2535(%740, %741, %742) /* ty=(Tensor[(5, 1, 5), float64], Tensor[(5, 10, 14), bool], Tensor[(700), float32], Tensor[(5, 10, 14), bool], Tensor[(13, 6, 6), bool], Tensor[(6, 78), float32], Tensor[(13, 6, 6), bool], Tensor[(48), float64], Tensor[(624), float64], Tensor[(16, 6, 3), int64], Tensor[(1352), float64], Tensor[(405), float32], Tensor[(288), int64], Tensor[(2, 24), int32], Tensor[(15, 9, 3), float32], Tensor[(8, 36), int64]) */;
  %744 = log10(%736) /* ty=Tensor[(1, 15, 4), float32] */;
  %745 = %743.14;
  (%744, %745, %var_5242, meta[relay.Constant][58] /* ty=Tensor[(468), float32] */, meta[relay.Constant][59] /* ty=Tensor[(405), float32] */)
}

def @func_8136(%var_8134: int8, %var_8135: Tensor[(588), uint8]) -> (Tensor[(7, 2, 15), float32], Tensor[(3, 156), float32], int8, Tensor[(9), int8], Tensor[(420, 2), uint32], Tensor[(588), uint8]) {
  @func_8132(%var_8134, %var_8135) /* ty=(Tensor[(7, 2, 15), float32], Tensor[(3, 156), float32], int8, Tensor[(9), int8], Tensor[(420, 2), uint32], Tensor[(588), uint8]) */
}

def @func_11130() -> Tensor[(7, 2, 15), float32] {
  %746 = fn () -> Tensor[(7, 2, 15), float32] {
    @func_10149() /* ty=Tensor[(7, 2, 15), float32] */
  };
  %746() /* ty=Tensor[(7, 2, 15), float32] */
}

def @func_1611(%var_1609: Tensor[(468), float32]) -> (Tensor[(9, 13, 15), float32], Tensor[(16, 6, 3), int64], Tensor[(8, 36), int64], Tensor[(13, 6, 6), bool], Tensor[(468), float32], Tensor[(9, 13, 15), float32]) {
  @func_1608(%var_1609) /* ty=(Tensor[(9, 13, 15), float32], Tensor[(16, 6, 3), int64], Tensor[(8, 36), int64], Tensor[(13, 6, 6), bool], Tensor[(468), float32], Tensor[(9, 13, 15), float32]) */
}

def @func_8222() -> (Tensor[(7, 2, 15), int64],) {
  %747 = @func_7115() /* ty=Tensor[(7, 2, 15), float32] */;
  %748 = cast(meta[relay.Constant][60] /* ty=Tensor[(7, 2, 15), float32] */, dtype="int64") /* ty=Tensor[(7, 2, 15), int64] */;
  %749 = shape_of(%747, dtype="int32") /* ty=Tensor[(3), int32] */;
  %750 = cast(%747, dtype="int64") /* ty=Tensor[(7, 2, 15), int64] */;
  %751 = dyn.reshape(%748, %749, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %752 = minimum(%750, %751) /* ty=Tensor[(7, 2, 15), int64] */;
  (%752,)
}

def @func_2539(%var_2536: Tensor[(5, 1, 5), float64], %var_2537: Tensor[(6, 78), float32], %var_2538: Tensor[(405), float32]) -> (Tensor[(5, 1, 5), float64], Tensor[(5, 10, 14), bool], Tensor[(700), float32], Tensor[(5, 10, 14), bool], Tensor[(13, 6, 6), bool], Tensor[(6, 78), float32], Tensor[(13, 6, 6), bool], Tensor[(48), float64], Tensor[(624), float64], Tensor[(16, 6, 3), int64], Tensor[(1352), float64], Tensor[(405), float32], Tensor[(288), int64], Tensor[(2, 24), int32], Tensor[(15, 9, 3), float32], Tensor[(8, 36), int64]) {
  %817 = fn (%var_2476: Tensor[(5, 1, 5), float64], %var_2497: Tensor[(6, 78), float32], %var_2518: Tensor[(405), float32]) -> (Tensor[(5, 1, 5), float64], Tensor[(5, 10, 14), bool], Tensor[(700), float32], Tensor[(5, 10, 14), bool], Tensor[(13, 6, 6), bool], Tensor[(6, 78), float32], Tensor[(13, 6, 6), bool], Tensor[(48), float64], Tensor[(624), float64], Tensor[(16, 6, 3), int64], Tensor[(1352), float64], Tensor[(405), float32], Tensor[(288), int64], Tensor[(2, 24), int32], Tensor[(15, 9, 3), float32], Tensor[(8, 36), int64]) {
    %753 = cast(%var_2476, dtype="float64") /* ty=Tensor[(5, 1, 5), float64] */;
    %754 = cast(meta[relay.Constant][61] /* ty=Tensor[(700), float32] */, dtype="float32") /* ty=Tensor[(700), float32] */;
    %755 = cast(meta[relay.Constant][61] /* ty=Tensor[(700), float32] */, dtype="float32") /* ty=Tensor[(700), float32] */;
    %756 = reshape(%754, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), float32] */;
    %757 = reshape(%755, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), float32] */;
    %758 = @func_2415(%756, %757) /* ty=(Tensor[(5, 10, 14), bool],) */;
    %759 = %758.0;
    %760 = cast(%759, dtype="float32") /* ty=Tensor[(5, 10, 14), float32] */;
    %761 = cast(meta[relay.Constant][61] /* ty=Tensor[(700), float32] */, dtype="float32") /* ty=Tensor[(700), float32] */;
    %762 = reshape(%760, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), float32] */;
    %763 = reshape(%761, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), float32] */;
    %764 = @func_2415(%762, %763) /* ty=(Tensor[(5, 10, 14), bool],) */;
    %765 = cast(%var_2497, dtype="float32") /* ty=Tensor[(6, 78), float32] */;
    %766 = reshape(%765, newshape=[13, 6, 6]) /* ty=Tensor[(13, 6, 6), float32] */;
    %767 = @func_1124(%766) /* ty=(Tensor[(13, 6, 6), bool],) */;
    %768 = cast(meta[relay.Constant][62] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
    %769 = cast(meta[relay.Constant][63] /* ty=Tensor[(624), float64] */, dtype="float64") /* ty=Tensor[(624), float64] */;
    %770 = %767.0;
    %771 = cast(%770, dtype="float32") /* ty=Tensor[(13, 6, 6), float32] */;
    %772 = reshape(%768, newshape=[6, 1, 8]) /* ty=Tensor[(6, 1, 8), float64] */;
    %773 = reshape(%769, newshape=[6, 13, 8]) /* ty=Tensor[(6, 13, 8), float64] */;
    %774 = reshape(%771, newshape=[468]) /* ty=Tensor[(468), float32] */;
    %775 = @func_2359(%772, %773, %774) /* ty=(Tensor[(6, 13, 8), float64], Tensor[(16, 6, 3), int64], Tensor[(3, 135), float32], Tensor[(288), int64], Tensor[(16, 6, 3), int64], Tensor[(13, 6, 6), bool], Tensor[(468), float32]) */;
    %776 = cast(meta[relay.Constant][64] /* ty=Tensor[(1352), float64] */, dtype="float64") /* ty=Tensor[(1352), float64] */;
    %777 = cast(%var_2518, dtype="float32") /* ty=Tensor[(405), float32] */;
    %778 = cast(meta[relay.Constant][65] /* ty=Tensor[(288), int64] */, dtype="int64") /* ty=Tensor[(288), int64] */;
    %779 = cast(meta[relay.Constant][62] /* ty=Tensor[(48), float64] */, dtype="int32") /* ty=Tensor[(48), int32] */;
    %780 = reshape(%776, newshape=[8, 13, 13]) /* ty=Tensor[(8, 13, 13), float64] */;
    %781 = reshape(%777, newshape=[405]) /* ty=Tensor[(405), float32] */;
    %782 = reshape(%778, newshape=[8, 36]) /* ty=Tensor[(8, 36), int64] */;
    %783 = reshape(%779, newshape=[2, 24]) /* ty=Tensor[(2, 24), int32] */;
    %784 = @func_2100(%780, %781, %782, %783) /* ty=(Tensor[(8, 13, 13), float64], Tensor[(4, 4, 3), int16], Tensor[(405), float32], Tensor[(8, 36), int64], Tensor[(2, 24), int32], Tensor[(16, 6, 3), int64]) */;
    %785 = cast(meta[relay.Constant][64] /* ty=Tensor[(1352), float64] */, dtype="float64") /* ty=Tensor[(1352), float64] */;
    %786 = cast(%var_2518, dtype="float32") /* ty=Tensor[(405), float32] */;
    %787 = %784.5;
    %788 = cast(%787, dtype="int64") /* ty=Tensor[(16, 6, 3), int64] */;
    %789 = cast(meta[relay.Constant][62] /* ty=Tensor[(48), float64] */, dtype="int32") /* ty=Tensor[(48), int32] */;
    %790 = reshape(%785, newshape=[8, 13, 13]) /* ty=Tensor[(8, 13, 13), float64] */;
    %791 = reshape(%786, newshape=[405]) /* ty=Tensor[(405), float32] */;
    %792 = reshape(%788, newshape=[8, 36]) /* ty=Tensor[(8, 36), int64] */;
    %793 = reshape(%789, newshape=[2, 24]) /* ty=Tensor[(2, 24), int32] */;
    %794 = @func_2100(%790, %791, %792, %793) /* ty=(Tensor[(8, 13, 13), float64], Tensor[(4, 4, 3), int16], Tensor[(405), float32], Tensor[(8, 36), int64], Tensor[(2, 24), int32], Tensor[(16, 6, 3), int64]) */;
    %795 = cast(%var_2518, dtype="float32") /* ty=Tensor[(405), float32] */;
    %796 = cast(meta[relay.Constant][65] /* ty=Tensor[(288), int64] */, dtype="int64") /* ty=Tensor[(288), int64] */;
    %797 = cast(meta[relay.Constant][62] /* ty=Tensor[(48), float64] */, dtype="int32") /* ty=Tensor[(48), int32] */;
    %798 = reshape(%795, newshape=[15, 9, 3]) /* ty=Tensor[(15, 9, 3), float32] */;
    %799 = reshape(%796, newshape=[288]) /* ty=Tensor[(288), int64] */;
    %800 = reshape(%797, newshape=[48]) /* ty=Tensor[(48), int32] */;
    %801 = @func_1095(%798, %799, %800) /* ty=(Tensor[(15, 9, 3), float32], Tensor[(16, 6, 3), int64], Tensor[(288), int64], Tensor[(4, 4, 3), int16], Tensor[(48), int32]) */;
    %802 = cast(meta[relay.Constant][64] /* ty=Tensor[(1352), float64] */, dtype="float64") /* ty=Tensor[(1352), float64] */;
    %803 = cast(%var_2518, dtype="float32") /* ty=Tensor[(405), float32] */;
    %804 = cast(meta[relay.Constant][65] /* ty=Tensor[(288), int64] */, dtype="int64") /* ty=Tensor[(288), int64] */;
    %805 = cast(meta[relay.Constant][62] /* ty=Tensor[(48), float64] */, dtype="int32") /* ty=Tensor[(48), int32] */;
    %806 = reshape(%802, newshape=[8, 13, 13]) /* ty=Tensor[(8, 13, 13), float64] */;
    %807 = reshape(%803, newshape=[405]) /* ty=Tensor[(405), float32] */;
    %808 = reshape(%804, newshape=[8, 36]) /* ty=Tensor[(8, 36), int64] */;
    %809 = reshape(%805, newshape=[2, 24]) /* ty=Tensor[(2, 24), int32] */;
    %810 = @func_2100(%806, %807, %808, %809) /* ty=(Tensor[(8, 13, 13), float64], Tensor[(4, 4, 3), int16], Tensor[(405), float32], Tensor[(8, 36), int64], Tensor[(2, 24), int32], Tensor[(16, 6, 3), int64]) */;
    %811 = sin(%753) /* ty=Tensor[(5, 1, 5), float64] */;
    %812 = %764.0;
    %813 = %775.5;
    %814 = %794.4;
    %815 = %801.0;
    %816 = %810.3;
    (%811, %759, meta[relay.Constant][61] /* ty=Tensor[(700), float32] */, %812, %770, %var_2497, %813, meta[relay.Constant][62] /* ty=Tensor[(48), float64] */, meta[relay.Constant][63] /* ty=Tensor[(624), float64] */, %787, meta[relay.Constant][64] /* ty=Tensor[(1352), float64] */, %var_2518, meta[relay.Constant][65] /* ty=Tensor[(288), int64] */, %814, %815, %816)
  };
  %817(%var_2536, %var_2537, %var_2538) /* ty=(Tensor[(5, 1, 5), float64], Tensor[(5, 10, 14), bool], Tensor[(700), float32], Tensor[(5, 10, 14), bool], Tensor[(13, 6, 6), bool], Tensor[(6, 78), float32], Tensor[(13, 6, 6), bool], Tensor[(48), float64], Tensor[(624), float64], Tensor[(16, 6, 3), int64], Tensor[(1352), float64], Tensor[(405), float32], Tensor[(288), int64], Tensor[(2, 24), int32], Tensor[(15, 9, 3), float32], Tensor[(8, 36), int64]) */
}

def @func_7116() -> Tensor[(7, 2, 15), float32] {
  %819 = fn () -> Tensor[(7, 2, 15), float32] {
    %818 = cast(meta[relay.Constant][66] /* ty=Tensor[(7, 2, 15), float32] */, dtype="float32") /* ty=Tensor[(7, 2, 15), float32] */;
    exp(%818) /* ty=Tensor[(7, 2, 15), float32] */
  };
  %819() /* ty=Tensor[(7, 2, 15), float32] */
}

def @func_2105(%var_2101: Tensor[(8, 13, 13), float64], %var_2102: Tensor[(405), float32], %var_2103: Tensor[(8, 36), int64], %var_2104: Tensor[(2, 24), int32]) -> (Tensor[(8, 13, 13), float64], Tensor[(4, 4, 3), int16], Tensor[(405), float32], Tensor[(8, 36), int64], Tensor[(2, 24), int32], Tensor[(16, 6, 3), int64]) {
  %836 = fn (%var_2076: Tensor[(8, 13, 13), float64], %var_2082: Tensor[(405), float32], %var_2083: Tensor[(8, 36), int64], %var_2084: Tensor[(2, 24), int32]) -> (Tensor[(8, 13, 13), float64], Tensor[(4, 4, 3), int16], Tensor[(405), float32], Tensor[(8, 36), int64], Tensor[(2, 24), int32], Tensor[(16, 6, 3), int64]) {
    %820 = cast(%var_2076, dtype="float64") /* ty=Tensor[(8, 13, 13), float64] */;
    %821 = cast(%var_2082, dtype="float32") /* ty=Tensor[(405), float32] */;
    %822 = cast(%var_2083, dtype="int64") /* ty=Tensor[(8, 36), int64] */;
    %823 = cast(%var_2084, dtype="int32") /* ty=Tensor[(2, 24), int32] */;
    %824 = reshape(%821, newshape=[15, 9, 3]) /* ty=Tensor[(15, 9, 3), float32] */;
    %825 = reshape(%822, newshape=[288]) /* ty=Tensor[(288), int64] */;
    %826 = reshape(%823, newshape=[48]) /* ty=Tensor[(48), int32] */;
    %827 = @func_1095(%824, %825, %826) /* ty=(Tensor[(15, 9, 3), float32], Tensor[(16, 6, 3), int64], Tensor[(288), int64], Tensor[(4, 4, 3), int16], Tensor[(48), int32]) */;
    %828 = cast(%var_2084, dtype="int32") /* ty=Tensor[(2, 24), int32] */;
    %829 = %827.3;
    %830 = cast(%829, dtype="int32") /* ty=Tensor[(4, 4, 3), int32] */;
    %831 = reshape(%828, newshape=[4, 4, 3]) /* ty=Tensor[(4, 4, 3), int32] */;
    %832 = reshape(%830, newshape=[4, 4, 3]) /* ty=Tensor[(4, 4, 3), int32] */;
    %833 = @func_664(%831, %832) /* ty=(Tensor[(4, 4, 3), int16], Tensor[(16, 6, 3), int64], Tensor[(288), int64]) */;
    %834 = log2(%820) /* ty=Tensor[(8, 13, 13), float64] */;
    %835 = %833.1;
    (%834, %829, %var_2082, %var_2083, %var_2084, %835)
  };
  %836(%var_2101, %var_2102, %var_2103, %var_2104) /* ty=(Tensor[(8, 13, 13), float64], Tensor[(4, 4, 3), int16], Tensor[(405), float32], Tensor[(8, 36), int64], Tensor[(2, 24), int32], Tensor[(16, 6, 3), int64]) */
}

def @func_8362(%var_8360: Tensor[(1, 1040), float32]) -> (Tensor[(3, 12, 10), float32], Tensor[(7, 2, 15), float32], Tensor[(10, 9, 1), float32], Tensor[(90), float32], Tensor[(16, 5, 13), float32], Tensor[(1, 1040), float32], Tensor[(7, 2, 15), int64]) {
  @func_8359(%var_8360) /* ty=(Tensor[(3, 12, 10), float32], Tensor[(7, 2, 15), float32], Tensor[(10, 9, 1), float32], Tensor[(90), float32], Tensor[(16, 5, 13), float32], Tensor[(1, 1040), float32], Tensor[(7, 2, 15), int64]) */
}

def @func_9982(%var_9940: Tensor[(7, 10, 8), int16], %var_9941: Tensor[(7, 10, 8), int16], %var_9958: Tensor[(363), float32]) -> (Tensor[(7, 10, 8), int16], Tensor[(11, 11, 3), float32], Tensor[(363), float32]) {
  %837 = cast(%var_9941, dtype="int16") /* ty=Tensor[(7, 10, 8), int16] */;
  %838 = shape_of(%var_9940, dtype="int32") /* ty=Tensor[(3), int32] */;
  %839 = cast(%var_9940, dtype="int16") /* ty=Tensor[(7, 10, 8), int16] */;
  %840 = dyn.reshape(%837, %838, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %841 = cast(%var_9958, dtype="float32") /* ty=Tensor[(363), float32] */;
  %842 = reshape(%841, newshape=[11, 11, 3]) /* ty=Tensor[(11, 11, 3), float32] */;
  %843 = right_shift(%839, %840) /* ty=Tensor[(7, 10, 8), int16] */;
  %844 = @func_4071(%842) /* ty=Tensor[(11, 11, 3), float32] */;
  (%843, %844, %var_9958)
}

def @func_8404() -> (Tensor[(7, 2, 15), float32], Tensor[(7, 2, 15), float32]) {
  %845 = @func_7506() /* ty=(Tensor[(7, 2, 15), float32], Tensor[(7, 2, 15), float32]) */;
  %846 = %845.0;
  %847 = @func_7115() /* ty=Tensor[(7, 2, 15), float32] */;
  (%846, %847)
}

def @func_8224() -> (Tensor[(7, 2, 15), int64],) {
  @func_8222() /* ty=(Tensor[(7, 2, 15), int64],) */
}

def @func_1768(%var_1763: Tensor[(6, 14, 7), uint8], %var_1764: Tensor[(6, 14, 7), uint8], %var_1765: Tensor[(6, 14, 7), uint8], %var_1766: Tensor[(405), float32], %var_1767: Tensor[(48), int32]) -> (Tensor[(6, 14, 7), bool], Tensor[(6, 14, 7), uint8], Tensor[(16, 6, 3), int64], Tensor[(405), float32], Tensor[(288), int64], Tensor[(48), int32]) {
  %871 = fn (%var_1736: Tensor[(6, 14, 7), uint8], %var_1737: Tensor[(6, 14, 7), uint8], %var_1746: Tensor[(6, 14, 7), uint8], %var_1754: Tensor[(405), float32], %var_1756: Tensor[(48), int32]) -> (Tensor[(6, 14, 7), bool], Tensor[(6, 14, 7), uint8], Tensor[(16, 6, 3), int64], Tensor[(405), float32], Tensor[(288), int64], Tensor[(48), int32]) {
    %848 = cast(%var_1746, dtype="bool") /* ty=Tensor[(6, 14, 7), bool] */;
    %849 = shape_of(%var_1736, dtype="int32") /* ty=Tensor[(3), int32] */;
    %850 = cast(%var_1736, dtype="bool") /* ty=Tensor[(6, 14, 7), bool] */;
    %851 = dyn.reshape(%848, %849, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %852 = cast(%var_1737, dtype="uint8") /* ty=Tensor[(6, 14, 7), uint8] */;
    %853 = shape_of(%var_1736, dtype="int32") /* ty=Tensor[(3), int32] */;
    %854 = cast(%var_1736, dtype="uint8") /* ty=Tensor[(6, 14, 7), uint8] */;
    %855 = dyn.reshape(%852, %853, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %856 = bitwise_and(%854, %855) /* ty=Tensor[(6, 14, 7), uint8] */;
    %857 = cast(%856, dtype="uint8") /* ty=Tensor[(6, 14, 7), uint8] */;
    %858 = shape_of(%var_1737, dtype="int32") /* ty=Tensor[(3), int32] */;
    %859 = cast(%var_1737, dtype="uint8") /* ty=Tensor[(6, 14, 7), uint8] */;
    %860 = dyn.reshape(%857, %858, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %861 = cast(%var_1754, dtype="float32") /* ty=Tensor[(405), float32] */;
    %862 = cast(meta[relay.Constant][67] /* ty=Tensor[(288), int64] */, dtype="int64") /* ty=Tensor[(288), int64] */;
    %863 = cast(%var_1756, dtype="int32") /* ty=Tensor[(48), int32] */;
    %864 = reshape(%861, newshape=[15, 9, 3]) /* ty=Tensor[(15, 9, 3), float32] */;
    %865 = reshape(%862, newshape=[288]) /* ty=Tensor[(288), int64] */;
    %866 = reshape(%863, newshape=[48]) /* ty=Tensor[(48), int32] */;
    %867 = @func_1095(%864, %865, %866) /* ty=(Tensor[(15, 9, 3), float32], Tensor[(16, 6, 3), int64], Tensor[(288), int64], Tensor[(4, 4, 3), int16], Tensor[(48), int32]) */;
    %868 = greater_equal(%850, %851) /* ty=Tensor[(6, 14, 7), bool] */;
    %869 = bitwise_xor(%859, %860) /* ty=Tensor[(6, 14, 7), uint8] */;
    %870 = %867.1;
    (%868, %869, %870, %var_1754, meta[relay.Constant][67] /* ty=Tensor[(288), int64] */, %var_1756)
  };
  %871(%var_1763, %var_1764, %var_1765, %var_1766, %var_1767) /* ty=(Tensor[(6, 14, 7), bool], Tensor[(6, 14, 7), uint8], Tensor[(16, 6, 3), int64], Tensor[(405), float32], Tensor[(288), int64], Tensor[(48), int32]) */
}

def @func_7080(%var_7013: Tensor[(10, 1, 13), float32], %var_7039: Tensor[(1650), float64]) -> (Tensor[(13, 15, 15), int64], Tensor[(2925), int64], Tensor[(2, 144), int64], Tensor[(1650), float64], Tensor[(10, 1, 13), float64], Tensor[(8, 5, 7), float32], Tensor[(10, 28), float64]) {
  %872 = cast(meta[relay.Constant][68] /* ty=Tensor[(2925), int64] */, dtype="int64") /* ty=Tensor[(2925), int64] */;
  %873 = cast(meta[relay.Constant][68] /* ty=Tensor[(2925), int64] */, dtype="int64") /* ty=Tensor[(2925), int64] */;
  %874 = reshape(%872, newshape=[13, 15, 15]) /* ty=Tensor[(13, 15, 15), int64] */;
  %875 = reshape(%873, newshape=[13, 15, 15]) /* ty=Tensor[(13, 15, 15), int64] */;
  %876 = @func_6569(%874, %875) /* ty=(Tensor[(13, 15, 15), int64],) */;
  %877 = cast(%var_7039, dtype="float64") /* ty=Tensor[(1650), float64] */;
  %878 = reshape(%877, newshape=[15, 10, 11]) /* ty=Tensor[(15, 10, 11), float64] */;
  %879 = @func_4704(%878) /* ty=(Tensor[(15, 10, 11), float64], Tensor[(16, 6, 3), int64], Tensor[(2, 144), int64]) */;
  %880 = cast(%var_7013, dtype="float32") /* ty=Tensor[(10, 1, 13), float32] */;
  %881 = acos(%880) /* ty=Tensor[(10, 1, 13), float32] */;
  %882 = cast(%881, dtype="float64") /* ty=Tensor[(10, 1, 13), float64] */;
  %883 = cast(meta[relay.Constant][69] /* ty=Tensor[(10, 28), float64] */, dtype="float64") /* ty=Tensor[(10, 28), float64] */;
  %884 = reshape(%883, newshape=[8, 5, 7]) /* ty=Tensor[(8, 5, 7), float64] */;
  %885 = @func_5524(%884) /* ty=(Tensor[(8, 5, 7), int32], Tensor[(8, 5, 7), float32]) */;
  %886 = %876.0;
  %887 = %879.2;
  %888 = log10(%882) /* ty=Tensor[(10, 1, 13), float64] */;
  %889 = %885.1;
  (%886, meta[relay.Constant][68] /* ty=Tensor[(2925), int64] */, %887, %var_7039, %888, %889, meta[relay.Constant][69] /* ty=Tensor[(10, 28), float64] */)
}

def @func_7259() -> Tensor[(7, 2, 15), float32] {
  %890 = @func_7238() /* ty=(Tensor[(7, 2, 15), float32],) */;
  %890.0
}

def @func_8132(%var_8115: int8, %var_8127: Tensor[(588), uint8]) -> (Tensor[(7, 2, 15), float32], Tensor[(3, 156), float32], int8, Tensor[(9), int8], Tensor[(420, 2), uint32], Tensor[(588), uint8]) {
  %891 = @func_7331() /* ty=(Tensor[(7, 2, 15), float32],) */;
  %892 = cast(%var_8115, dtype="int8") /* ty=int8 */;
  %893 = cast(meta[relay.Constant][70] /* ty=Tensor[(9), int8] */, dtype="int8") /* ty=Tensor[(9), int8] */;
  %894 = reshape(%892, newshape=[]) /* ty=int8 */;
  %895 = reshape(%893, newshape=[1, 9]) /* ty=Tensor[(1, 9), int8] */;
  %896 = @func_6491(%894, %895) /* ty=(Tensor[(1, 9), int8], Tensor[(4, 13, 9), float32], Tensor[(3, 156), float32]) */;
  %897 = cast(%var_8127, dtype="uint8") /* ty=Tensor[(588), uint8] */;
  %898 = reshape(%897, newshape=[588]) /* ty=Tensor[(588), uint8] */;
  %899 = @func_7556(%898) /* ty=(Tensor[(7, 2, 15), float32], Tensor[(15, 8, 7), uint32], Tensor[(420, 2), uint32], Tensor[(6, 14, 7), bool], Tensor[(588), uint8], Tensor[(135, 3), float32], Tensor[(48), int32]) */;
  %900 = %891.0;
  %901 = %896.2;
  %902 = %899.2;
  (%900, %901, %var_8115, meta[relay.Constant][70] /* ty=Tensor[(9), int8] */, %902, %var_8127)
}

def @func_8703() -> Tensor[(7, 2, 15), float32] {
  %904 = fn () -> Tensor[(7, 2, 15), float32] {
    %903 = @func_7506() /* ty=(Tensor[(7, 2, 15), float32], Tensor[(7, 2, 15), float32]) */;
    %903.1
  };
  %904() /* ty=Tensor[(7, 2, 15), float32] */
}

def @func_7556(%var_7541: Tensor[(588), uint8]) -> (Tensor[(7, 2, 15), float32], Tensor[(15, 8, 7), uint32], Tensor[(420, 2), uint32], Tensor[(6, 14, 7), bool], Tensor[(588), uint8], Tensor[(135, 3), float32], Tensor[(48), int32]) {
  %905 = @func_7331() /* ty=(Tensor[(7, 2, 15), float32],) */;
  %906 = cast(meta[relay.Constant][71] /* ty=Tensor[(420, 2), uint32] */, dtype="uint32") /* ty=Tensor[(420, 2), uint32] */;
  %907 = cast(meta[relay.Constant][71] /* ty=Tensor[(420, 2), uint32] */, dtype="uint32") /* ty=Tensor[(420, 2), uint32] */;
  %908 = reshape(%906, newshape=[15, 8, 7]) /* ty=Tensor[(15, 8, 7), uint32] */;
  %909 = reshape(%907, newshape=[15, 8, 7]) /* ty=Tensor[(15, 8, 7), uint32] */;
  %910 = @func_2593(%908, %909) /* ty=(Tensor[(15, 8, 7), uint32],) */;
  %911 = cast(%var_7541, dtype="uint8") /* ty=Tensor[(588), uint8] */;
  %912 = cast(%var_7541, dtype="uint8") /* ty=Tensor[(588), uint8] */;
  %913 = cast(%var_7541, dtype="uint8") /* ty=Tensor[(588), uint8] */;
  %914 = cast(meta[relay.Constant][72] /* ty=Tensor[(135, 3), float32] */, dtype="float32") /* ty=Tensor[(135, 3), float32] */;
  %915 = cast(meta[relay.Constant][73] /* ty=Tensor[(48), int32] */, dtype="int32") /* ty=Tensor[(48), int32] */;
  %916 = reshape(%911, newshape=[6, 14, 7]) /* ty=Tensor[(6, 14, 7), uint8] */;
  %917 = reshape(%912, newshape=[6, 14, 7]) /* ty=Tensor[(6, 14, 7), uint8] */;
  %918 = reshape(%913, newshape=[6, 14, 7]) /* ty=Tensor[(6, 14, 7), uint8] */;
  %919 = reshape(%914, newshape=[405]) /* ty=Tensor[(405), float32] */;
  %920 = reshape(%915, newshape=[48]) /* ty=Tensor[(48), int32] */;
  %921 = @func_1762(%916, %917, %918, %919, %920) /* ty=(Tensor[(6, 14, 7), bool], Tensor[(6, 14, 7), uint8], Tensor[(16, 6, 3), int64], Tensor[(405), float32], Tensor[(288), int64], Tensor[(48), int32]) */;
  %922 = %905.0;
  %923 = %910.0;
  %924 = %921.0;
  (%922, %923, meta[relay.Constant][71] /* ty=Tensor[(420, 2), uint32] */, %924, %var_7541, meta[relay.Constant][72] /* ty=Tensor[(135, 3), float32] */, meta[relay.Constant][73] /* ty=Tensor[(48), int32] */)
}

def @func_12003(%var_12001: Tensor[(48), int32], %var_12002: Tensor[(405), float32]) -> (Tensor[(6, 12, 15), float32], Tensor[(288), int64], Tensor[(48), int32], Tensor[(1, 16, 16), float32], Tensor[(700), float32], Tensor[(405), float32]) {
  %939 = fn (%var_11984: Tensor[(48), int32], %var_11988: Tensor[(405), float32]) -> (Tensor[(6, 12, 15), float32], Tensor[(288), int64], Tensor[(48), int32], Tensor[(1, 16, 16), float32], Tensor[(700), float32], Tensor[(405), float32]) {
    %925 = @func_10463() /* ty=(Tensor[(7, 2, 15), float32], Tensor[(6, 12, 15), float32], Tensor[(1080), float32]) */;
    %926 = cast(%var_11984, dtype="int32") /* ty=Tensor[(48), int32] */;
    %927 = reshape(%926, newshape=[48]) /* ty=Tensor[(48), int32] */;
    %928 = @func_8941(%927) /* ty=(Tensor[(7, 2, 15), float32], Tensor[(8, 36), int64], Tensor[(1680), int32], Tensor[(405), float32], Tensor[(288), int64], Tensor[(48), int32]) */;
    %929 = cast(meta[relay.Constant][74] /* ty=Tensor[(700), float32] */, dtype="float32") /* ty=Tensor[(700), float32] */;
    %930 = cast(%var_11988, dtype="float32") /* ty=Tensor[(405), float32] */;
    %931 = cast(%var_11984, dtype="int32") /* ty=Tensor[(48), int32] */;
    %932 = reshape(%929, newshape=[700]) /* ty=Tensor[(700), float32] */;
    %933 = reshape(%930, newshape=[1, 405]) /* ty=Tensor[(1, 405), float32] */;
    %934 = reshape(%931, newshape=[48]) /* ty=Tensor[(48), int32] */;
    %935 = @func_3901(%932, %933, %934) /* ty=(Tensor[(1, 16, 16), float32], Tensor[(5, 10, 14), bool], Tensor[(700), float32], Tensor[(8, 13, 13), float64], Tensor[(26, 52), float64], Tensor[(1, 405), float32], Tensor[(288), int64], Tensor[(48), int32]) */;
    %936 = %925.1;
    %937 = %928.4;
    %938 = %935.0;
    (%936, %937, %var_11984, %938, meta[relay.Constant][74] /* ty=Tensor[(700), float32] */, %var_11988)
  };
  %939(%var_12001, %var_12002) /* ty=(Tensor[(6, 12, 15), float32], Tensor[(288), int64], Tensor[(48), int32], Tensor[(1, 16, 16), float32], Tensor[(700), float32], Tensor[(405), float32]) */
}

def @func_8421() -> (Tensor[(7, 2, 15), int64], Tensor[(5, 10, 14), bool], Tensor[(700), float32]) {
  %940 = @func_8222() /* ty=(Tensor[(7, 2, 15), int64],) */;
  %941 = cast(meta[relay.Constant][75] /* ty=Tensor[(700), float32] */, dtype="float32") /* ty=Tensor[(700), float32] */;
  %942 = cast(meta[relay.Constant][75] /* ty=Tensor[(700), float32] */, dtype="float32") /* ty=Tensor[(700), float32] */;
  %943 = reshape(%941, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), float32] */;
  %944 = reshape(%942, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), float32] */;
  %945 = @func_2415(%943, %944) /* ty=(Tensor[(5, 10, 14), bool],) */;
  %946 = %940.0;
  %947 = %945.0;
  (%946, %947, meta[relay.Constant][75] /* ty=Tensor[(700), float32] */)
}

def @func_4272(%var_4239: Tensor[(9, 8, 5), float64], %var_4240: Tensor[(9, 8, 5), float64]) -> (Tensor[(9, 8, 5), float64], Tensor[(9, 8, 5), bool], Tensor[(700), float32], Tensor[(16, 6, 3), int64], Tensor[(288), int64], Tensor[(5, 10, 14), float32]) {
  %948 = cast(%var_4240, dtype="float64") /* ty=Tensor[(9, 8, 5), float64] */;
  %949 = shape_of(%var_4239, dtype="int32") /* ty=Tensor[(3), int32] */;
  %950 = cast(%var_4239, dtype="float64") /* ty=Tensor[(9, 8, 5), float64] */;
  %951 = dyn.reshape(%948, %949, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %952 = cast(%var_4239, dtype="bool") /* ty=Tensor[(9, 8, 5), bool] */;
  %953 = shape_of(%var_4240, dtype="int32") /* ty=Tensor[(3), int32] */;
  %954 = cast(%var_4240, dtype="bool") /* ty=Tensor[(9, 8, 5), bool] */;
  %955 = dyn.reshape(%952, %953, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %956 = cast(meta[relay.Constant][77] /* ty=Tensor[(288), int64] */, dtype="int64") /* ty=Tensor[(288), int64] */;
  %957 = reshape(%956, newshape=[16, 6, 3]) /* ty=Tensor[(16, 6, 3), int64] */;
  %958 = cast(meta[relay.Constant][76] /* ty=Tensor[(700), float32] */, dtype="float32") /* ty=Tensor[(700), float32] */;
  %959 = cast(meta[relay.Constant][76] /* ty=Tensor[(700), float32] */, dtype="float32") /* ty=Tensor[(700), float32] */;
  %960 = reshape(%958, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), float32] */;
  %961 = reshape(%959, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), float32] */;
  %962 = @func_2415(%960, %961) /* ty=(Tensor[(5, 10, 14), bool],) */;
  %963 = %962.0;
  %964 = cast(%963, dtype="float32") /* ty=Tensor[(5, 10, 14), float32] */;
  %965 = multiply(%950, %951) /* ty=Tensor[(9, 8, 5), float64] */;
  %966 = less_equal(%954, %955) /* ty=Tensor[(9, 8, 5), bool] */;
  %967 = @func_21(%957) /* ty=Tensor[(16, 6, 3), int64] */;
  %968 = sinh(%964) /* ty=Tensor[(5, 10, 14), float32] */;
  (%965, %966, meta[relay.Constant][76] /* ty=Tensor[(700), float32] */, %967, meta[relay.Constant][77] /* ty=Tensor[(288), int64] */, %968)
}

def @func_10810() -> Tensor[(7, 2, 15), float32] {
  @func_10808() /* ty=Tensor[(7, 2, 15), float32] */
}

def @func_11337() -> (Tensor[(9, 3, 10), float64],) {
  %969 = @func_9296() /* ty=Tensor[(9, 3, 10), float64] */;
  (%969,)
}

def @func_4859(%var_4858: Tensor[(5, 9, 15), bool]) -> (Tensor[(5, 9, 15), bool],) {
  %973 = fn (%var_4853: Tensor[(5, 9, 15), bool]) -> (Tensor[(5, 9, 15), bool],) {
    %970 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
    %971 = cast(%var_4853, dtype="bool") /* ty=Tensor[(5, 9, 15), bool] */;
    %972 = logical_and(%970, %971) /* ty=Tensor[(5, 9, 15), bool] */;
    (%972,)
  };
  %973(%var_4858) /* ty=(Tensor[(5, 9, 15), bool],) */
}

def @func_7238() -> (Tensor[(7, 2, 15), float32],) {
  %974 = @func_7115() /* ty=Tensor[(7, 2, 15), float32] */;
  (%974,)
}

def @func_10464() -> (Tensor[(7, 2, 15), float32], Tensor[(6, 12, 15), float32], Tensor[(1080), float32]) {
  %979 = fn () -> (Tensor[(7, 2, 15), float32], Tensor[(6, 12, 15), float32], Tensor[(1080), float32]) {
    %975 = cast(meta[relay.Constant][78] /* ty=Tensor[(1080), float32] */, dtype="float32") /* ty=Tensor[(1080), float32] */;
    %976 = reshape(%975, newshape=[6, 12, 15]) /* ty=Tensor[(6, 12, 15), float32] */;
    %977 = @func_8291() /* ty=Tensor[(7, 2, 15), float32] */;
    %978 = @func_4618(%976) /* ty=Tensor[(6, 12, 15), float32] */;
    (%977, %978, meta[relay.Constant][78] /* ty=Tensor[(1080), float32] */)
  };
  %979() /* ty=(Tensor[(7, 2, 15), float32], Tensor[(6, 12, 15), float32], Tensor[(1080), float32]) */
}

def @func_10795(%var_10794: Tensor[(6, 1, 15), float32]) -> Tensor[(6, ?, 15), bool] {
  %988 = fn (%var_10773: Tensor[(6, 1, 15), float32]) -> Tensor[(6, ?, 15), bool] {
    %980 = cast(%var_10773, dtype="float32") /* ty=Tensor[(6, 1, 15), float32] */;
    %981 = sinh(%980) /* ty=Tensor[(6, 1, 15), float32] */;
    %982 = cast(%981, dtype="float64") /* ty=Tensor[(6, 1, 15), float64] */;
    %983 = log2(%982) /* ty=Tensor[(6, 1, 15), float64] */;
    %984 = cast(%983, dtype="bool") /* ty=Tensor[(6, 1, 15), bool] */;
    %985 = shape_of(%var_10773, dtype="int32") /* ty=Tensor[(3), int32] */;
    %986 = cast(%var_10773, dtype="bool") /* ty=Tensor[(6, 1, 15), bool] */;
    %987 = dyn.reshape(%984, %985, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    greater(%986, %987) /* ty=Tensor[(6, ?, 15), bool] */
  };
  %988(%var_10794) /* ty=Tensor[(6, ?, 15), bool] */
}

def @func_4621(%var_4619: Tensor[(6, 12, 15), float32]) -> Tensor[(6, 12, 15), float32] {
  @func_4618(%var_4619) /* ty=Tensor[(6, 12, 15), float32] */
}

def @func_10225(%var_10224: Tensor[(468, 1), float32]) -> (Tensor[(7, 2, 15), float32], Tensor[(11, 4, 14), float64], Tensor[(16, 6, 3), int64], Tensor[(48), int32], Tensor[(7, 2, 15), float32], Tensor[(4, 13, 9), float32], Tensor[(468, 1), float32]) {
  %1011 = fn (%var_10221: Tensor[(468, 1), float32]) -> (Tensor[(7, 2, 15), float32], Tensor[(11, 4, 14), float64], Tensor[(16, 6, 3), int64], Tensor[(48), int32], Tensor[(7, 2, 15), float32], Tensor[(4, 13, 9), float32], Tensor[(468, 1), float32]) {
    %989 = cast(meta[relay.Constant][79] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
    %990 = cast(meta[relay.Constant][79] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
    %991 = reshape(%989, newshape=[11, 4, 14]) /* ty=Tensor[(11, 4, 14), float64] */;
    %992 = reshape(%990, newshape=[11, 4, 14]) /* ty=Tensor[(11, 4, 14), float64] */;
    %993 = @func_8184(%991, %992) /* ty=(Tensor[(11, 4, 14), float64],) */;
    %994 = %993.0;
    %995 = cast(meta[relay.Constant][79] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
    %996 = shape_of(%994, dtype="int32") /* ty=Tensor[(3), int32] */;
    %997 = cast(%994, dtype="float64") /* ty=Tensor[(11, 4, 14), float64] */;
    %998 = dyn.reshape(%995, %996, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %999 = cast(meta[relay.Constant][80] /* ty=Tensor[(48), int32] */, dtype="int32") /* ty=Tensor[(48), int32] */;
    %1000 = cast(meta[relay.Constant][80] /* ty=Tensor[(48), int32] */, dtype="int32") /* ty=Tensor[(48), int32] */;
    %1001 = reshape(%999, newshape=[4, 4, 3]) /* ty=Tensor[(4, 4, 3), int32] */;
    %1002 = reshape(%1000, newshape=[4, 4, 3]) /* ty=Tensor[(4, 4, 3), int32] */;
    %1003 = @func_664(%1001, %1002) /* ty=(Tensor[(4, 4, 3), int16], Tensor[(16, 6, 3), int64], Tensor[(288), int64]) */;
    %1004 = cast(%var_10221, dtype="float32") /* ty=Tensor[(468, 1), float32] */;
    %1005 = reshape(%1004, newshape=[4, 13, 9]) /* ty=Tensor[(4, 13, 9), float32] */;
    %1006 = @func_8317() /* ty=Tensor[(7, 2, 15), float32] */;
    %1007 = mod(%997, %998) /* ty=Tensor[(11, 4, 14), float64] */;
    %1008 = %1003.1;
    %1009 = @func_7259() /* ty=Tensor[(7, 2, 15), float32] */;
    %1010 = @func_2688(%1005) /* ty=Tensor[(4, 13, 9), float32] */;
    (%1006, %1007, %1008, meta[relay.Constant][80] /* ty=Tensor[(48), int32] */, %1009, %1010, %var_10221)
  };
  %1011(%var_10224) /* ty=(Tensor[(7, 2, 15), float32], Tensor[(11, 4, 14), float64], Tensor[(16, 6, 3), int64], Tensor[(48), int32], Tensor[(7, 2, 15), float32], Tensor[(4, 13, 9), float32], Tensor[(468, 1), float32]) */
}

def @func_10131() -> (Tensor[(7, 2, 15), float32],) {
  %1014 = fn () -> (Tensor[(7, 2, 15), float32],) {
    %1012 = @func_7238() /* ty=(Tensor[(7, 2, 15), float32],) */;
    %1013 = %1012.0;
    (%1013,)
  };
  %1014() /* ty=(Tensor[(7, 2, 15), float32],) */
}

def @func_9829(%var_9827: Tensor[(40, 26), float32], %var_9828: Tensor[(405), float32]) -> (Tensor[(7, 2, 15), int64], Tensor[(7, 2, 15), float32], Tensor[(40, 26), float32], Tensor[(1680), int32], Tensor[(1680), int32], Tensor[(405), float32], Tensor[(288), int64], Tensor[(48), int32]) {
  @func_9825(%var_9827, %var_9828) /* ty=(Tensor[(7, 2, 15), int64], Tensor[(7, 2, 15), float32], Tensor[(40, 26), float32], Tensor[(1680), int32], Tensor[(1680), int32], Tensor[(405), float32], Tensor[(288), int64], Tensor[(48), int32]) */
}

def @func_3669(%var_3665: Tensor[(3, 16, 14), uint8]) -> (Tensor[(3, 16, 14), uint8],) {
  %1015 = cast(%var_3665, dtype="uint8") /* ty=Tensor[(3, 16, 14), uint8] */;
  %1016 = shape_of(meta[relay.Constant][81] /* ty=Tensor[(3, 16, 14), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1017 = cast(meta[relay.Constant][81] /* ty=Tensor[(3, 16, 14), uint8] */, dtype="uint8") /* ty=Tensor[(3, 16, 14), uint8] */;
  %1018 = dyn.reshape(%1015, %1016, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1019 = left_shift(%1017, %1018) /* ty=Tensor[(3, 16, 14), uint8] */;
  (%1019,)
}

def @func_10711() -> (Tensor[(7, 2, 15), float32],) {
  %1021 = fn () -> (Tensor[(7, 2, 15), float32],) {
    %1020 = @func_7115() /* ty=Tensor[(7, 2, 15), float32] */;
    (%1020,)
  };
  %1021() /* ty=(Tensor[(7, 2, 15), float32],) */
}

def @func_11723(%var_11696: Tensor[(9, 3, 10), float64], %var_11706: Tensor[(2, 144), int64]) -> (Tensor[(16, 6, 3), int64], Tensor[(2, 144), int64], Tensor[(7, 2, 15), float32], Tensor[(9, 3, 10), bool]) {
  %1022 = cast(%var_11706, dtype="int64") /* ty=Tensor[(2, 144), int64] */;
  %1023 = reshape(%1022, newshape=[16, 6, 3]) /* ty=Tensor[(16, 6, 3), int64] */;
  %1024 = @func_9296() /* ty=Tensor[(9, 3, 10), float64] */;
  %1025 = cast(%1024, dtype="float32") /* ty=Tensor[(9, 3, 10), float32] */;
  %1026 = cosh(%1025) /* ty=Tensor[(9, 3, 10), float32] */;
  %1027 = cast(%var_11696, dtype="bool") /* ty=Tensor[(9, 3, 10), bool] */;
  %1028 = shape_of(%1024, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1029 = cast(%1024, dtype="bool") /* ty=Tensor[(9, 3, 10), bool] */;
  %1030 = dyn.reshape(%1027, %1028, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1031 = greater(%1029, %1030) /* ty=Tensor[(9, 3, 10), bool] */;
  %1032 = cast(%1031, dtype="bool") /* ty=Tensor[(9, 3, 10), bool] */;
  %1033 = shape_of(%1026, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1034 = cast(%1026, dtype="bool") /* ty=Tensor[(9, 3, 10), bool] */;
  %1035 = dyn.reshape(%1032, %1033, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1036 = @func_21(%1023) /* ty=Tensor[(16, 6, 3), int64] */;
  %1037 = @func_10149() /* ty=Tensor[(7, 2, 15), float32] */;
  %1038 = less(%1034, %1035) /* ty=Tensor[(9, 3, 10), bool] */;
  (%1036, %var_11706, %1037, %1038)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen577/build/output.py:2408: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen577/build/output.py", line 2413, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(1024) tvmgen_default_fused_cast_cast_equal_kernel0(signed char* __restrict__ T_equal, double* __restrict__ placeholder, double* __restrict__ placeholder1) {
  if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 3360) {
    T_equal[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = ((signed char)(((bool)placeholder[(0)]) == ((bool)placeholder1[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))])));
  }
}

extern "C" __global__ void __launch_bounds__(1024) tvmgen_default_fused_cast_cast_add_kernel0(uint64_t* __restrict__ T_add, double* __restrict__ placeholder, double* __restrict__ placeholder1) {
  if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 3360) {
    T_add[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = (((uint64_t)placeholder[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))]) + ((uint64_t)placeholder1[(0)]));
  }
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_5 = relay.var("var_5", dtype = "int64", shape = (16, 6, 3))#candidate|5|(16, 6, 3)|var|int64
const_6 = relay.const([[[-9,-1,-6],[-4,6,-10],[-8,-3,3],[-1,2,5],[-1,-2,-8],[-10,-1,10]],[[3,4,7],[2,-1,6],[-10,4,-2],[-9,8,5],[-6,-3,-5],[-2,8,-6]],[[10,-10,-4],[4,5,6],[-9,-4,6],[4,-4,9],[-9,-8,9],[-2,3,-9]],[[-8,10,10],[-3,-1,-7],[6,-7,6],[4,8,-2],[7,3,4],[8,4,-7]],[[4,-3,-9],[-1,2,9],[-3,3,4],[-8,7,-2],[5,5,10],[4,-4,-10]],[[-9,-9,-9],[1,1,5],[9,-8,-5],[9,2,9],[-8,7,-10],[-6,-8,-2]],[[-5,-10,6],[4,9,4],[-2,-3,-9],[-6,5,-10],[2,8,2],[8,-2,6]],[[4,-5,-3],[8,-4,-10],[5,-9,-3],[7,-4,5],[4,5,-2],[8,-2,10]],[[4,1,-10],[10,-8,6],[-9,-7,10],[8,5,-2],[4,-6,4],[2,-3,7]],[[-3,-9,-7],[4,-9,-8],[-3,1,-10],[9,-4,2],[1,8,-6],[-9,4,-2]],[[2,7,-7],[8,-1,-9],[3,-9,-1],[7,-7,-5],[-9,-4,2],[-4,-3,4]],[[5,-1,-3],[7,6,-5],[7,10,6],[-8,2,10],[1,-6,6],[-4,6,-5]],[[-6,4,-10],[-3,-10,2],[-8,1,-4],[4,6,10],[4,10,1],[-6,2,1]],[[1,-1,-6],[-5,5,6],[8,7,-2],[3,-2,3],[-10,10,-10],[-4,-6,-2]],[[-9,-9,-4],[8,-7,-7],[1,-2,-2],[-6,-5,-6],[9,6,6],[10,-6,2]],[[7,3,4],[-10,9,-5],[10,-5,10],[-10,1,6],[5,-3,-6],[10,-6,7]]], dtype = "int64")#candidate|6|(16, 6, 3)|const|int64
bop_7 = relay.bitwise_or(var_5.astype('int64'), relay.reshape(const_6.astype('int64'), relay.shape_of(var_5))) # shape=(16, 6, 3)
output = bop_7
output2 = bop_7
func_21 = relay.Function([var_5,], output)
mod['func_21'] = func_21
mod = relay.transform.InferType()(mod)
var_22 = relay.var("var_22", dtype = "int64", shape = (16, 6, 3))#candidate|22|(16, 6, 3)|var|int64
output = func_21(var_22)
func_23 = relay.Function([var_22], output)
mutated_mod['func_23'] = func_23
mutated_mod = relay.transform.InferType()(mutated_mod)
var_648 = relay.var("var_648", dtype = "int32", shape = (4, 4, 3))#candidate|648|(4, 4, 3)|var|int32
var_649 = relay.var("var_649", dtype = "int32", shape = (4, 4, 3))#candidate|649|(4, 4, 3)|var|int32
bop_650 = relay.subtract(var_648.astype('int32'), relay.reshape(var_649.astype('int32'), relay.shape_of(var_648))) # shape=(4, 4, 3)
bop_655 = relay.bitwise_and(var_649.astype('int16'), relay.reshape(bop_650.astype('int16'), relay.shape_of(var_649))) # shape=(4, 4, 3)
func_21_call = mod.get_global_var('func_21')
func_23_call = mutated_mod.get_global_var('func_23')
const_661 = relay.const([-4,-10,-6,3,7,5,10,-9,2,1,-3,8,9,4,-3,-5,-5,-9,-7,-1,2,-4,1,-1,7,3,-5,6,10,-8,-1,1,-10,-7,3,-3,3,-7,3,7,10,-9,-10,8,7,2,1,-5,4,-7,-1,-3,-10,-9,10,2,-8,6,-6,-6,4,-4,-3,-3,-3,5,-3,-2,-1,-7,-9,-5,-9,-4,7,9,-10,-6,2,-10,-2,-2,-5,9,7,9,4,-2,-4,8,-6,5,-10,9,-10,10,5,-8,-6,4,-2,1,6,-9,-10,4,-5,-4,-7,8,1,1,2,6,-8,-3,-5,8,-8,2,5,-5,-4,-7,1,10,5,-10,5,-7,6,3,4,3,-10,1,-2,8,-5,-8,-2,8,2,-6,-4,9,-5,-1,6,3,8,3,-10,5,6,2,2,7,10,10,-8,-3,-3,-4,-8,-5,2,-8,9,-10,7,-2,5,-2,5,-6,10,8,6,2,-2,2,-7,8,4,-2,1,-7,-3,9,2,3,-9,-7,4,8,-8,-9,1,-2,5,-5,8,-5,10,3,3,3,-8,4,-10,7,3,7,-3,-8,-5,-9,4,5,7,-7,3,-2,-2,2,-9,4,-5,7,-9,10,-7,-8,10,6,-3,-10,4,-7,6,-10,10,-10,-2,5,-1,7,4,10,9,3,-10,-8,3,-3,-7,-8,7,-4,-5,4,5,-6,7,3,6,9,1,2,-5,4,8,-2,10,-5,4,2,1,8,-6,7,1,7,3,5,-4,3], dtype = "int64")#candidate|661|(288,)|const|int64
call_660 = func_21_call(relay.reshape(const_661.astype('int64'), [16, 6, 3]))
call_662 = func_21_call(relay.reshape(const_661.astype('int64'), [16, 6, 3]))
output = relay.Tuple([bop_655,call_660,const_661,])
output2 = relay.Tuple([bop_655,call_662,const_661,])
func_664 = relay.Function([var_648,var_649,], output)
mod['func_664'] = func_664
mod = relay.transform.InferType()(mod)
mutated_mod['func_664'] = func_664
mutated_mod = relay.transform.InferType()(mutated_mod)
func_664_call = mutated_mod.get_global_var('func_664')
var_666 = relay.var("var_666", dtype = "int32", shape = (4, 4, 3))#candidate|666|(4, 4, 3)|var|int32
var_667 = relay.var("var_667", dtype = "int32", shape = (4, 4, 3))#candidate|667|(4, 4, 3)|var|int32
call_665 = func_664_call(var_666,var_667,)
output = call_665
func_668 = relay.Function([var_666,var_667,], output)
mutated_mod['func_668'] = func_668
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1049 = relay.var("var_1049", dtype = "float32", shape = (15, 9, 3))#candidate|1049|(15, 9, 3)|var|float32
uop_1050 = relay.log2(var_1049.astype('float32')) # shape=(15, 9, 3)
func_21_call = mod.get_global_var('func_21')
func_23_call = mutated_mod.get_global_var('func_23')
var_1064 = relay.var("var_1064", dtype = "int64", shape = (288,))#candidate|1064|(288,)|var|int64
call_1063 = func_21_call(relay.reshape(var_1064.astype('int64'), [16, 6, 3]))
call_1065 = func_21_call(relay.reshape(var_1064.astype('int64'), [16, 6, 3]))
func_664_call = mod.get_global_var('func_664')
func_668_call = mutated_mod.get_global_var('func_668')
var_1091 = relay.var("var_1091", dtype = "int32", shape = (48,))#candidate|1091|(48,)|var|int32
call_1090 = relay.TupleGetItem(func_664_call(relay.reshape(var_1091.astype('int32'), [4, 4, 3]), relay.reshape(var_1091.astype('int32'), [4, 4, 3]), ), 0)
call_1092 = relay.TupleGetItem(func_668_call(relay.reshape(var_1091.astype('int32'), [4, 4, 3]), relay.reshape(var_1091.astype('int32'), [4, 4, 3]), ), 0)
output = relay.Tuple([uop_1050,call_1063,var_1064,call_1090,var_1091,])
output2 = relay.Tuple([uop_1050,call_1065,var_1064,call_1092,var_1091,])
func_1095 = relay.Function([var_1049,var_1064,var_1091,], output)
mod['func_1095'] = func_1095
mod = relay.transform.InferType()(mod)
var_1096 = relay.var("var_1096", dtype = "float32", shape = (15, 9, 3))#candidate|1096|(15, 9, 3)|var|float32
var_1097 = relay.var("var_1097", dtype = "int64", shape = (288,))#candidate|1097|(288,)|var|int64
var_1098 = relay.var("var_1098", dtype = "int32", shape = (48,))#candidate|1098|(48,)|var|int32
output = func_1095(var_1096,var_1097,var_1098,)
func_1099 = relay.Function([var_1096,var_1097,var_1098,], output)
mutated_mod['func_1099'] = func_1099
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1110 = relay.var("var_1110", dtype = "float32", shape = (13, 6, 6))#candidate|1110|(13, 6, 6)|var|float32
uop_1111 = relay.tan(var_1110.astype('float32')) # shape=(13, 6, 6)
uop_1113 = relay.asinh(uop_1111.astype('float64')) # shape=(13, 6, 6)
bop_1115 = relay.greater(uop_1113.astype('bool'), relay.reshape(uop_1111.astype('bool'), relay.shape_of(uop_1113))) # shape=(13, 6, 6)
output = relay.Tuple([bop_1115,])
output2 = relay.Tuple([bop_1115,])
func_1124 = relay.Function([var_1110,], output)
mod['func_1124'] = func_1124
mod = relay.transform.InferType()(mod)
mutated_mod['func_1124'] = func_1124
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1125 = relay.var("var_1125", dtype = "float32", shape = (13, 6, 6))#candidate|1125|(13, 6, 6)|var|float32
func_1124_call = mutated_mod.get_global_var('func_1124')
call_1126 = func_1124_call(var_1125)
output = call_1126
func_1127 = relay.Function([var_1125], output)
mutated_mod['func_1127'] = func_1127
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1570 = relay.const(-7.650936, dtype = "float32")#candidate|1570|()|const|float32
const_1571 = relay.const([[[5.523672,2.071405,8.241008,0.809890,-3.836770,5.822167,1.636535,9.936626,-1.891283,-5.867262,5.137796,-1.200074,-8.026199,9.832229,3.538259],[1.103228,2.061688,-8.138370,-1.082744,-5.427267,-7.488681,6.289465,6.868278,2.188609,-3.794896,-8.482915,-9.754591,-8.025860,-2.962011,5.293796],[-6.999925,9.075613,1.488360,-4.860409,2.573899,-5.406217,5.987726,0.790172,9.048945,-8.057932,-7.069312,3.502184,-7.315075,6.192649,9.190798],[-0.977287,-7.155525,1.540877,4.688396,6.578057,-4.087009,6.192978,-6.658355,4.770998,5.415934,7.520792,-6.187308,-3.390532,-4.566076,-2.297061],[-8.437526,-8.927131,-4.473271,1.253997,3.256460,-0.230936,-4.845005,8.248922,7.721205,-3.626165,4.863056,-8.059214,3.114596,-8.976694,1.707205],[5.292550,3.680251,-5.229876,-4.005553,-2.878140,-9.667846,0.217431,-0.704520,1.270299,7.631116,-9.043251,2.036687,7.356165,8.622259,2.389965],[-2.607021,8.562028,-4.797283,2.961543,8.540057,-6.147017,-0.546464,-0.255395,5.692274,-7.606607,-4.330899,3.554284,-4.355330,-7.732234,-5.573205],[-3.086364,-3.947878,-8.088602,2.811376,4.645561,3.635659,-6.933864,-1.126429,-7.966117,0.032575,-1.653466,3.100909,8.820554,-8.137390,-4.236475],[4.808733,1.771324,-6.399452,-1.246218,3.317704,-2.276285,-5.153055,6.423594,1.786911,-6.852328,-5.364121,-8.307314,-7.990094,7.301035,7.211093],[3.142952,-8.331963,2.774160,-1.172257,-2.335375,7.976102,9.668312,-4.455560,-0.626707,-4.779456,-6.492014,-8.491784,9.789217,-4.921022,3.153171],[-6.132864,8.811902,-0.425899,0.281500,-1.002356,-4.003210,-3.677359,3.333254,-6.991778,-9.586953,-2.383260,-3.688258,-7.564292,8.292116,-2.377339],[-1.071109,0.085429,-8.707781,-5.244047,0.362723,4.157962,1.068705,4.023524,-1.648402,-7.762233,-1.659614,1.289463,0.717509,-8.074153,6.463607],[-5.727497,8.948356,9.159945,8.828183,1.705637,-7.134115,-7.363034,-7.218628,5.360770,-9.278856,-3.883424,-4.400679,5.031633,8.197594,4.067722]],[[-3.468916,-0.697428,5.856113,9.544644,-7.376361,1.777914,-3.921739,-7.560742,1.052917,6.710146,9.605311,3.851062,-1.328670,-1.693576,-1.179378],[-7.571820,7.731112,7.413198,-8.660960,5.355636,9.561865,5.379516,-7.135880,2.687959,8.679078,5.339999,-7.794153,4.504844,0.004054,-4.060483],[3.581690,2.088167,7.348424,6.383707,6.655631,-8.052979,-2.951372,-4.610686,2.375559,-0.825886,7.995965,-8.862201,-2.959021,-0.529658,8.868289],[-9.682145,1.874149,5.733748,-0.527889,-7.597781,5.752609,-0.613872,-0.851210,-8.258101,-5.183339,7.419353,8.172723,3.525792,3.620915,8.710383],[-2.388340,7.241613,6.226927,5.785489,7.848680,-1.739578,-3.406536,-3.366274,8.442043,5.831121,-6.284754,1.157480,-1.902877,2.753365,-6.652908],[-1.117484,-7.611826,-2.368112,-5.990277,8.202596,4.937899,-1.005189,7.889277,0.027634,4.017343,-1.428822,5.089990,0.972448,3.980150,0.876703],[-2.534051,-4.354283,7.567283,-1.337391,-1.120221,7.914252,6.151302,-4.941138,4.774417,-2.212807,-8.703198,-5.970156,-2.093753,2.843028,-6.298117],[-4.154277,-5.755582,-6.830489,5.182096,0.518948,-9.183183,-0.701332,-4.980608,-7.334378,-5.545663,-4.556559,-6.644580,-7.083258,0.010197,-0.729290],[-7.053996,-3.754082,7.694622,-0.901795,8.125172,9.160841,-8.468770,-4.303085,-7.384737,-6.161345,5.745691,2.112499,3.196019,-9.511473,5.693010],[0.532528,0.382758,-4.114962,-9.456861,-4.645132,-0.573331,4.384612,6.675202,1.870854,0.601762,-3.983478,-0.695314,-6.705264,9.436586,-0.489876],[0.574388,-6.115530,0.339673,5.887824,7.767387,-1.950339,6.935773,-2.444080,9.526211,-9.341919,-1.908775,9.657929,-8.155099,-3.827531,-1.238323],[-7.899121,-1.325003,4.302272,1.332758,4.669408,-8.896521,-3.373529,-4.839286,-8.175208,-5.875883,-0.669634,6.679726,-5.153786,1.531246,5.907724],[8.206606,9.437691,-2.997572,-0.750174,9.470587,-9.945659,5.897460,-5.329898,9.728070,5.275130,8.320752,-2.347643,7.605040,4.457502,-8.341045]],[[-0.650795,-1.254433,9.661602,-0.297136,9.655585,-9.379038,1.179142,-0.390972,5.519717,-2.313281,-4.166658,-0.139585,-1.398220,5.350516,-1.217448],[-5.253027,0.180542,-3.735360,1.157122,-0.906531,-2.018265,-9.120316,-4.233513,6.409338,1.371291,-2.647056,-5.567810,-5.891800,-7.945014,-3.101039],[7.541306,-0.889281,0.192032,-3.955570,1.730172,5.360639,1.335981,-8.804748,4.076984,8.881213,8.850503,-9.222283,-2.114432,3.549865,-1.751716],[8.232348,-4.327914,-3.530136,-7.968852,6.341764,-9.758204,8.812136,-6.521563,6.252775,-9.792798,-1.943337,1.676400,5.391152,-8.962927,-1.891660],[-0.965749,-5.314905,7.450245,-8.046663,7.009261,-3.825871,4.720135,8.779593,7.561874,0.265825,3.154815,9.169785,-8.237031,-8.009419,4.734263],[8.167129,-7.053024,7.788519,-0.142079,3.261978,2.880030,3.635573,-7.884479,-7.928212,-9.716999,8.271960,-2.756874,-5.052747,5.599548,3.458321],[9.415981,-7.189976,-3.715186,-8.331611,7.274551,9.488009,4.520679,0.366448,7.438865,6.333774,9.266725,-6.865074,1.839454,-8.096326,8.508970],[-9.711280,-1.998595,1.897057,-7.759532,-5.350300,5.536025,-5.735016,-4.532896,-9.231068,4.121446,7.398568,-0.189511,-9.541280,-5.023603,-3.847931],[-1.931871,6.879292,5.965282,-4.844016,-6.611187,-5.867066,-9.880551,-5.790034,-2.263647,-0.029322,-1.812512,4.187593,0.144852,-2.795857,-0.279654],[-8.090375,2.853644,-5.886871,-0.073454,-3.588473,0.725033,-9.009513,5.168350,-3.899283,-5.192879,-4.643275,0.370535,7.155626,4.053930,-8.723441],[5.920393,3.794500,-1.907117,2.536130,-0.397862,9.320156,-6.301033,0.216388,-4.632428,-7.259763,-1.635043,0.291460,-9.648228,5.446936,9.225347],[2.789738,-8.647589,7.307267,-8.904591,0.114157,3.559628,-2.914080,-8.957697,3.986962,-8.754288,4.490789,-7.955088,-6.488498,-3.318835,1.543196],[7.608140,-6.662951,1.818928,7.881364,-8.528980,-7.379303,8.884033,-4.385777,-3.916045,7.533403,8.927398,8.080391,8.734304,-3.259756,0.308035]],[[1.496669,-1.307532,-8.549459,-6.380346,-9.988882,-2.348943,-8.567945,8.754901,-4.332405,-7.487337,-7.200009,-3.806333,-0.692212,8.327136,1.683563],[-1.753711,-3.094138,-8.415947,-3.717716,-4.687065,-8.317303,3.446761,-0.815759,1.177296,-6.056999,-2.803568,6.800673,-1.107878,9.659613,-8.003257],[0.178471,1.372582,7.275069,-0.406112,-7.694041,-9.209764,-3.590838,1.834973,4.212132,5.841323,4.892586,-9.585436,-8.655511,-2.422971,6.490900],[1.837301,2.244270,-7.597450,-9.525401,-5.044511,4.394831,2.668193,-8.847643,-4.230477,7.525927,1.169234,-9.157161,9.037620,-4.981374,-0.191310],[-7.765874,-8.817549,-4.482888,9.981476,-3.046224,-7.554774,-1.636319,6.769019,-5.819189,-1.235842,1.286642,-6.637055,-2.357456,-7.038168,6.598574],[-0.227146,-5.157408,8.164888,1.041066,-3.207157,-5.163967,0.852089,-3.700698,6.277926,-3.780507,6.588085,0.785520,2.651195,3.618396,9.616389],[-0.697557,3.958764,-7.393402,-9.559088,9.101715,0.557313,7.499105,-0.980946,1.516972,-8.719837,-9.172464,1.733457,-3.119569,7.711394,3.481495],[-4.716479,-2.085428,-4.765057,9.133595,-7.094622,3.201884,-9.165967,-2.931126,9.653330,6.964456,2.704673,6.370160,5.548276,-0.454787,9.061372],[4.452201,7.762092,8.305942,7.476464,-2.460205,9.592600,7.836127,-1.257071,6.838859,-5.454812,-9.609439,-2.981893,-8.789618,3.805762,-8.219853],[-1.466140,-9.766175,2.209125,-6.134630,-5.220775,-1.751058,-5.559136,-1.735929,5.113770,-5.287662,-3.168126,4.717440,-6.307236,-0.620033,-8.109708],[2.572416,7.752107,7.705740,6.977390,4.961008,-3.117021,-1.293892,9.034726,-2.618628,-3.002303,-4.299725,5.182207,0.975576,-2.230654,2.230820],[-1.631684,1.232485,-8.431175,-2.377664,-9.398016,-1.267202,8.375590,-4.922492,1.197483,8.010551,4.212937,-7.669205,6.142317,4.633345,9.662891],[7.753182,6.140375,1.223874,5.783371,3.947158,6.488576,-5.804209,-9.638095,-4.456703,1.420569,3.859901,6.065932,8.125515,0.751660,-3.358484]],[[2.983054,-6.262786,3.978270,1.549410,4.803157,-1.330253,-6.681786,6.257592,6.877136,-1.151178,2.055059,-4.873461,7.273742,-4.678307,-7.543354],[5.207459,-7.600645,-8.991508,-9.286907,-9.196390,-7.085844,-9.632381,5.646767,-6.564865,9.607142,-8.605925,-8.079475,-4.235722,-4.814955,3.867786],[7.117474,7.558057,-6.111544,2.492508,3.262569,0.753829,4.654959,-8.616950,4.867151,4.596660,4.992253,-1.405112,-3.809830,9.492177,7.383792],[9.484959,8.290272,-3.670276,-1.021571,-5.201674,0.207368,-3.431226,-0.467725,3.852573,8.014937,-5.217669,-8.656511,-2.132891,6.408913,-6.136469],[-8.249695,-3.080042,-6.035083,-9.065270,-1.112522,-4.840691,-2.447868,-0.842342,7.601190,-4.187096,5.351360,3.835981,4.287089,-3.525629,1.469323],[4.786176,9.811949,2.892340,-7.114964,-1.412341,1.681477,-2.420005,3.209412,-2.943619,3.136359,6.692585,1.885108,-4.900614,1.934897,-7.575643],[9.170233,-9.281490,4.217626,-7.710705,7.663107,-4.706138,7.013850,-4.270173,-2.049579,7.843105,-4.143333,-2.475695,8.991915,-9.622426,9.883784],[9.759755,2.319609,9.248848,-7.459805,-5.635831,9.262681,-0.511042,-9.186207,5.161851,7.679046,-6.934972,-4.779298,0.068922,7.008221,-7.424287],[-9.290033,-9.969907,7.069870,-7.599528,9.482501,-4.732469,-6.855155,-4.652329,2.368217,1.911732,-7.581061,-1.553601,-5.744268,9.830204,-0.195795],[-9.854482,4.817583,-7.204511,1.563610,-0.835823,7.601813,4.884329,8.589842,-8.821835,0.409718,3.816245,2.964843,-3.974160,-7.035683,-5.513507],[7.926363,1.184762,1.359438,-2.049947,3.948042,7.466345,2.735983,-0.600965,-0.181585,7.723113,-5.134453,-2.181749,0.104921,1.738241,-5.626604],[-3.432713,-3.474424,-8.865336,2.594881,-0.386402,-0.436651,2.854063,-0.652707,-5.570396,5.042248,0.778566,5.232148,8.453480,-5.939622,-5.559654],[-6.209840,8.419263,-9.157643,-9.114392,-8.177304,-3.321590,7.688905,-1.723253,0.738011,-4.472433,-3.673474,-1.792381,6.702188,-5.820273,-8.764348]],[[-2.899367,4.676420,-1.726591,-1.536052,5.046532,5.875104,2.350055,-7.320022,1.236282,-0.502169,-6.401872,0.557451,-7.785790,-4.101075,-6.396043],[8.142384,-3.367339,-2.533122,5.133626,0.968394,7.768633,-3.298331,1.401996,-4.675464,0.749801,5.135213,-2.407861,-6.704296,0.121940,5.087245],[-0.549713,8.136797,-3.377056,3.234812,-9.859629,-2.344009,0.696782,-4.518339,7.347800,8.643763,1.196674,-7.994804,4.774612,4.271021,-0.350388],[2.686237,8.825157,8.845965,-0.487747,6.818492,5.233482,0.856109,6.417100,-1.860872,-8.585699,7.621940,-8.961173,8.402101,-4.486401,-3.170922],[-4.936325,8.073944,-6.165591,1.636941,0.539601,1.965145,-9.864534,-0.280431,-4.729806,4.127260,-6.475145,1.548525,-0.817707,3.092376,7.135020],[7.049940,5.315184,9.892958,1.739448,-4.593152,-8.414296,-5.731671,-4.267117,-0.031193,0.932521,-8.630250,-2.404003,-4.250449,-4.205107,7.528812],[0.559578,6.335788,-0.116258,6.622703,3.774960,-5.177983,5.898190,7.834056,7.196180,4.138550,4.653241,8.880549,6.719745,-5.912485,5.836393],[2.640751,1.541294,2.542497,9.527501,7.230920,-6.440823,-9.648885,-6.573000,-1.777008,9.209205,-7.221904,6.445637,-1.497857,3.921460,-2.439819],[2.031808,-6.748427,9.320614,-5.145214,-7.927321,7.728862,8.447521,-8.133969,2.377050,-5.748305,-2.414522,1.597843,-2.869925,-6.635247,9.197094],[-6.237439,-4.492561,1.349573,-3.476976,6.096339,8.272640,1.128248,-1.602276,1.232798,-2.744725,5.480597,-3.568105,-0.030811,-3.069575,2.375336],[-9.518602,-5.887304,-8.657787,-2.145663,1.295902,8.872799,-5.420925,-7.500109,-8.863907,8.261663,0.433877,-6.814912,2.117950,-3.356921,3.302527],[9.553813,8.512333,0.684503,7.879683,-4.065695,0.235646,-3.536912,-7.918890,-0.625180,-6.039930,-5.854706,-5.117934,7.707395,4.668870,-9.662483],[6.192251,-9.103159,1.305563,-1.143275,8.596654,-2.019097,-0.159402,0.203892,2.960085,-3.237604,5.116489,8.379347,4.840559,0.511410,-7.600039]],[[6.807385,-3.516118,-8.684064,3.478206,-0.919776,1.185413,5.077174,1.627977,-3.194209,8.147073,-6.904427,4.232484,-5.998637,9.676409,-3.754612],[9.764630,5.498833,3.264807,-4.768039,6.205290,-1.775574,2.464166,-9.487125,-0.994391,4.476396,1.877178,-4.633148,3.466632,6.547951,-7.460782],[-1.864112,-3.410688,1.566746,6.631991,-9.817297,8.406877,2.291377,3.268084,3.037689,-6.238063,4.016622,6.362145,7.760767,-6.585698,6.635585],[-5.070879,5.023905,7.801311,-7.919476,-9.999092,2.935935,6.661676,-2.141034,0.067187,-7.413935,-9.775394,1.579499,1.519061,-7.178801,-0.535848],[6.977312,8.240972,1.446350,7.022012,9.854731,-5.257256,3.708396,9.984119,-4.867939,-9.347521,-8.350809,-4.183123,-8.844484,-6.772486,-3.848952],[-2.478047,1.825033,-2.950706,-2.148478,0.174362,3.905158,4.094527,7.493540,-6.866017,0.135236,9.412740,4.292931,9.695551,1.466097,-0.966635],[-9.741198,8.909264,-1.961598,-5.754040,-5.497975,-9.350705,-5.194789,-5.108337,-8.670513,5.143986,5.909191,4.221274,3.839435,-4.845435,9.341258],[-7.466149,7.656777,5.046017,1.650411,4.329208,5.997142,7.117809,4.119091,-4.482910,-9.913409,1.831016,-9.375419,-0.951035,7.208326,-5.186272],[0.183459,4.269182,9.741743,-6.996467,-9.750862,-0.556143,1.164027,2.988721,6.249596,-6.625120,-3.310765,-6.595036,-1.097361,-5.686380,0.006453],[-9.021048,5.225234,-8.095292,9.609805,2.112471,-2.141940,0.030066,5.525515,-8.670102,-9.358794,-8.962988,-1.741804,5.900338,0.975266,-5.119786],[5.768865,8.504334,-2.534876,8.315055,-2.086807,-1.961187,-9.624225,-8.462712,-5.159351,-1.920806,8.054831,7.307437,7.278576,-5.580673,-8.634264],[-7.341886,-5.560221,-1.088320,0.706808,-9.766549,-4.527456,-4.958787,-7.019714,-8.856393,4.862236,-6.331915,4.422108,-2.770959,-4.222732,6.058640],[9.858381,-0.444107,1.789905,6.753103,-2.621252,-0.943106,-9.139614,6.089593,2.723843,7.884744,5.289954,3.367308,-0.532013,2.469339,1.258459]],[[8.972047,-1.571522,-7.446434,5.240782,-5.475446,5.975845,-6.028045,1.067389,-7.994013,-5.533042,9.430748,7.853940,-5.428947,-9.806042,9.899985],[2.028273,9.132807,-4.015544,3.856570,3.997321,-6.877568,0.403663,-6.103505,-0.215139,0.684451,-2.129397,-6.791957,-1.140394,2.646113,0.013220],[-2.223091,-1.335906,-4.098623,6.419122,-5.141912,-1.033695,2.201794,9.053767,-1.725734,-1.179139,-6.798406,0.290046,5.827390,-2.488287,-5.157485],[8.492304,-8.821113,-9.478862,-7.507115,-9.465363,-1.353886,8.095288,-8.210960,0.320952,3.821236,3.064470,8.542381,-9.737556,-7.944611,7.160901],[-8.068708,8.505652,-3.677242,-3.788660,0.201746,1.293172,9.681365,9.230616,-5.206728,-3.647122,-6.068644,5.164652,-5.138451,-3.203511,-3.518461],[-0.898102,-5.569377,5.491025,5.197358,-0.560587,4.737650,0.048444,-9.578297,-4.799481,9.446852,-6.715526,-0.862684,4.517149,-3.063445,9.798391],[-1.505121,9.751971,9.562344,6.270686,-2.905569,2.072627,-1.788404,-2.964892,2.108107,8.557931,-8.477673,9.517596,7.367776,3.179992,-9.192185],[5.970828,-3.304101,-4.051259,5.448133,2.365874,7.416239,2.264051,1.119430,-0.885280,8.383486,5.476658,-6.112389,-3.348559,-1.502644,0.479381],[4.120721,2.204213,7.843731,0.545199,4.011446,2.931048,-7.368143,-9.954667,-1.955988,-5.110016,-8.060037,4.810756,-9.816608,9.298001,-8.704705],[-0.648888,2.911570,7.610325,1.805137,7.464368,8.293066,1.518350,-2.176521,6.175128,-3.025459,-9.794457,-7.717334,1.866402,0.640348,6.531429],[3.390791,3.348177,2.962559,-1.885935,-7.368420,4.072830,-0.026724,4.932879,6.559255,0.180555,-5.703810,-4.502964,-7.888400,-8.854742,-3.836785],[9.668310,9.189212,-2.494620,3.309565,7.656379,6.410309,-7.117068,7.275120,-3.991647,-2.552275,-2.094021,9.684983,8.692321,0.851732,4.571771],[2.358449,7.738197,-5.198250,5.558844,-1.513799,5.687767,-3.853888,3.573281,6.553571,-7.255173,-4.564442,-1.026673,5.878162,9.315513,1.888643]],[[6.219510,4.236551,8.073524,-7.206875,5.902565,6.333324,-5.880608,-4.995698,4.898564,7.030570,-2.880555,5.735127,3.140382,-6.485609,1.667318],[-6.826193,9.056266,2.954295,5.972523,2.373773,5.327472,9.956883,-6.974935,7.284161,6.898426,4.167659,-1.747708,-6.733519,-6.684691,-1.678570],[6.639844,-6.569541,-4.121023,5.072542,9.168143,8.598951,-0.342917,0.744592,-0.460979,-4.097340,2.705520,3.078348,-2.393960,-0.602912,7.636438],[-8.396941,8.327717,5.363131,1.732170,7.205458,5.635045,1.714327,4.491013,6.698185,0.732190,9.591978,4.915455,0.862185,-3.085024,-3.676169],[-3.787214,-6.689983,7.174866,-0.201600,2.907820,-4.291414,-1.788748,-2.708849,-8.480322,4.870669,6.631417,-1.353939,-0.163701,2.466248,8.620629],[-0.409396,-5.018530,3.339760,-8.398163,-7.146928,8.696135,-1.645857,-9.330401,4.554627,-6.555782,9.464525,9.900942,7.149356,1.475873,1.693391],[-7.788576,-3.239578,-3.591886,8.795963,4.688625,-4.331250,-2.797077,-4.034834,0.157748,0.358511,4.958378,-3.934598,-3.881644,-7.197846,-5.793791],[2.556696,5.225792,1.695198,7.082815,-6.122297,0.838031,-1.143948,1.891466,-7.180564,-0.608541,2.188159,-4.653746,9.688357,8.168569,-7.148502],[3.369598,-1.408887,-4.236355,-9.003787,-4.911533,-0.821363,-8.440414,8.517511,-5.826249,-9.654975,4.524235,-7.487666,6.794434,2.064327,0.990788],[-4.757335,0.048654,9.633296,5.345872,9.026617,-0.888065,3.728287,-2.765933,-7.139927,-2.997980,-0.006911,-7.697259,-9.967490,-5.139285,-9.680196],[1.865060,-5.962116,-9.702110,-5.297250,5.122609,2.642173,-0.583957,-5.916453,-4.323199,7.989341,-9.803430,-7.847717,-2.169180,-4.129764,-3.514650],[-3.057018,-0.272654,-8.025773,-8.278948,-2.286067,4.812346,2.205337,-9.568767,-0.844722,-6.146397,8.081551,9.261230,-8.699691,-9.357852,-5.261837],[2.322511,4.828879,4.777059,-2.531236,-6.165843,-4.818125,0.164725,0.540354,8.483696,-0.860465,3.688512,-2.338594,4.668036,-9.728161,-0.236945]]], dtype = "float32")#candidate|1571|(9, 13, 15)|const|float32
bop_1572 = relay.floor_divide(const_1570.astype('float32'), const_1571.astype('float32')) # shape=(9, 13, 15)
func_21_call = mod.get_global_var('func_21')
func_23_call = mutated_mod.get_global_var('func_23')
const_1580 = relay.const([[9,2,-8,-7,10,1,8,6,-2,-3,-3,-10,2,-5,-5,-5,-6,-8,-2,3,-6,-7,4,8,6,-2,2,5,2,-10,-6,-1,-1,-1,4,6],[8,-6,-7,-8,-6,3,4,3,-10,3,5,2,-3,-1,-7,-8,-8,-9,7,-7,10,10,-8,10,-3,7,6,-5,10,-7,3,-2,-8,-8,-8,7],[-7,-2,7,4,-4,9,10,-1,2,-7,-3,-7,-2,7,2,-10,2,-5,-3,-10,-1,6,-5,-2,-5,3,10,1,7,-3,-4,9,6,-5,-2,-7],[6,-2,10,-9,5,-7,3,6,-7,-10,-4,7,10,1,8,3,-1,6,-1,10,-6,10,4,1,6,2,-10,-4,-2,-2,-2,4,-2,-9,-5,10],[6,3,5,-1,5,3,-4,-6,1,-7,-5,-8,-1,-3,-8,8,-10,-3,-6,7,2,9,-8,-4,-4,-4,4,-7,3,-1,-2,2,-3,8,3,-3],[9,3,-8,10,10,1,8,-8,10,1,-2,4,9,-5,9,-7,9,-8,7,-8,-2,8,1,-2,-9,10,5,9,6,-6,1,5,-3,8,1,-4],[5,4,2,-6,10,-4,-10,10,-6,-10,10,-8,8,-3,-10,-1,-1,-2,4,5,3,-10,-10,-8,-9,-3,6,3,5,-3,5,3,-3,-10,-2,3],[-4,-10,-5,1,1,-4,7,-2,-5,9,-3,9,-9,4,-4,9,-2,-2,-9,3,-9,6,-6,10,5,1,-4,-3,9,-4,-4,3,-2,-5,2,-3]], dtype = "int64")#candidate|1580|(8, 36)|const|int64
call_1579 = func_21_call(relay.reshape(const_1580.astype('int64'), [16, 6, 3]))
call_1581 = func_21_call(relay.reshape(const_1580.astype('int64'), [16, 6, 3]))
func_1124_call = mod.get_global_var('func_1124')
func_1127_call = mutated_mod.get_global_var('func_1127')
var_1583 = relay.var("var_1583", dtype = "float32", shape = (468,))#candidate|1583|(468,)|var|float32
call_1582 = relay.TupleGetItem(func_1124_call(relay.reshape(var_1583.astype('float32'), [13, 6, 6])), 0)
call_1584 = relay.TupleGetItem(func_1127_call(relay.reshape(var_1583.astype('float32'), [13, 6, 6])), 0)
uop_1585 = relay.sin(const_1571.astype('float32')) # shape=(9, 13, 15)
output = relay.Tuple([bop_1572,call_1579,const_1580,call_1582,var_1583,uop_1585,])
output2 = relay.Tuple([bop_1572,call_1581,const_1580,call_1584,var_1583,uop_1585,])
func_1608 = relay.Function([var_1583,], output)
mod['func_1608'] = func_1608
mod = relay.transform.InferType()(mod)
mutated_mod['func_1608'] = func_1608
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1609 = relay.var("var_1609", dtype = "float32", shape = (468,))#candidate|1609|(468,)|var|float32
func_1608_call = mutated_mod.get_global_var('func_1608')
call_1610 = func_1608_call(var_1609)
output = call_1610
func_1611 = relay.Function([var_1609], output)
mutated_mod['func_1611'] = func_1611
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1736 = relay.var("var_1736", dtype = "uint8", shape = (6, 14, 7))#candidate|1736|(6, 14, 7)|var|uint8
var_1737 = relay.var("var_1737", dtype = "uint8", shape = (6, 14, 7))#candidate|1737|(6, 14, 7)|var|uint8
bop_1738 = relay.bitwise_and(var_1736.astype('uint8'), relay.reshape(var_1737.astype('uint8'), relay.shape_of(var_1736))) # shape=(6, 14, 7)
var_1746 = relay.var("var_1746", dtype = "uint8", shape = (6, 14, 7))#candidate|1746|(6, 14, 7)|var|uint8
bop_1747 = relay.greater_equal(var_1736.astype('bool'), relay.reshape(var_1746.astype('bool'), relay.shape_of(var_1736))) # shape=(6, 14, 7)
bop_1750 = relay.bitwise_xor(var_1737.astype('uint8'), relay.reshape(bop_1738.astype('uint8'), relay.shape_of(var_1737))) # shape=(6, 14, 7)
func_1095_call = mod.get_global_var('func_1095')
func_1099_call = mutated_mod.get_global_var('func_1099')
var_1754 = relay.var("var_1754", dtype = "float32", shape = (405,))#candidate|1754|(405,)|var|float32
const_1755 = relay.const([2,3,-1,-2,10,-9,-6,3,8,3,10,4,-7,-5,10,5,4,-9,-4,1,7,-10,4,5,3,-5,5,10,-2,4,-6,5,-6,-8,-7,4,-8,-7,10,-4,9,5,-1,-7,-9,-6,-10,9,-7,-8,-4,6,-9,-4,-2,-1,10,-4,-10,-5,-2,7,3,-9,1,-5,-2,-6,-4,9,9,-7,-7,-1,4,7,8,-9,10,-3,7,-5,-1,-9,9,10,-7,8,-2,10,-4,3,3,-5,3,-1,8,-9,-8,3,-6,7,2,9,2,-9,8,-8,-5,3,3,-8,1,1,8,7,8,1,-9,3,2,6,5,3,9,2,2,-4,-9,-4,-2,3,7,10,-4,7,-7,6,-9,6,6,1,-7,-3,-1,-5,8,-2,2,10,7,10,2,-7,-6,10,-2,10,-5,8,-7,-10,-1,-1,4,-6,1,-6,5,-6,8,-3,-5,2,5,8,4,-9,10,-7,1,7,3,-5,-7,-7,6,-7,-4,-1,-10,-1,8,-9,-9,-7,2,-2,-7,1,-9,1,10,-6,-9,-3,9,3,-3,-6,-1,-1,-8,5,-4,-1,7,-10,-2,-3,-7,-1,-10,4,9,4,-4,2,-1,-7,-5,2,10,1,2,6,10,-6,4,-4,9,-6,4,-4,4,2,10,1,7,4,8,9,-9,-8,4,-9,-1,-5,-2,-2,10,6,-9,10,3,-7,5,-6,-10,9,-8,4,-3,6,8,2,5,8,8,-2,-1,9,5,-2,2,9,-2,-1], dtype = "int64")#candidate|1755|(288,)|const|int64
var_1756 = relay.var("var_1756", dtype = "int32", shape = (48,))#candidate|1756|(48,)|var|int32
call_1753 = relay.TupleGetItem(func_1095_call(relay.reshape(var_1754.astype('float32'), [15, 9, 3]), relay.reshape(const_1755.astype('int64'), [288,]), relay.reshape(var_1756.astype('int32'), [48,]), ), 1)
call_1757 = relay.TupleGetItem(func_1099_call(relay.reshape(var_1754.astype('float32'), [15, 9, 3]), relay.reshape(const_1755.astype('int64'), [288,]), relay.reshape(var_1756.astype('int32'), [48,]), ), 1)
output = relay.Tuple([bop_1747,bop_1750,call_1753,var_1754,const_1755,var_1756,])
output2 = relay.Tuple([bop_1747,bop_1750,call_1757,var_1754,const_1755,var_1756,])
func_1762 = relay.Function([var_1736,var_1737,var_1746,var_1754,var_1756,], output)
mod['func_1762'] = func_1762
mod = relay.transform.InferType()(mod)
var_1763 = relay.var("var_1763", dtype = "uint8", shape = (6, 14, 7))#candidate|1763|(6, 14, 7)|var|uint8
var_1764 = relay.var("var_1764", dtype = "uint8", shape = (6, 14, 7))#candidate|1764|(6, 14, 7)|var|uint8
var_1765 = relay.var("var_1765", dtype = "uint8", shape = (6, 14, 7))#candidate|1765|(6, 14, 7)|var|uint8
var_1766 = relay.var("var_1766", dtype = "float32", shape = (405,))#candidate|1766|(405,)|var|float32
var_1767 = relay.var("var_1767", dtype = "int32", shape = (48,))#candidate|1767|(48,)|var|int32
output = func_1762(var_1763,var_1764,var_1765,var_1766,var_1767,)
func_1768 = relay.Function([var_1763,var_1764,var_1765,var_1766,var_1767,], output)
mutated_mod['func_1768'] = func_1768
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2076 = relay.var("var_2076", dtype = "float64", shape = (8, 13, 13))#candidate|2076|(8, 13, 13)|var|float64
uop_2077 = relay.log2(var_2076.astype('float64')) # shape=(8, 13, 13)
func_1095_call = mod.get_global_var('func_1095')
func_1099_call = mutated_mod.get_global_var('func_1099')
var_2082 = relay.var("var_2082", dtype = "float32", shape = (405,))#candidate|2082|(405,)|var|float32
var_2083 = relay.var("var_2083", dtype = "int64", shape = (8, 36))#candidate|2083|(8, 36)|var|int64
var_2084 = relay.var("var_2084", dtype = "int32", shape = (2, 24))#candidate|2084|(2, 24)|var|int32
call_2081 = relay.TupleGetItem(func_1095_call(relay.reshape(var_2082.astype('float32'), [15, 9, 3]), relay.reshape(var_2083.astype('int64'), [288,]), relay.reshape(var_2084.astype('int32'), [48,]), ), 3)
call_2085 = relay.TupleGetItem(func_1099_call(relay.reshape(var_2082.astype('float32'), [15, 9, 3]), relay.reshape(var_2083.astype('int64'), [288,]), relay.reshape(var_2084.astype('int32'), [48,]), ), 3)
func_664_call = mod.get_global_var('func_664')
func_668_call = mutated_mod.get_global_var('func_668')
call_2086 = relay.TupleGetItem(func_664_call(relay.reshape(var_2084.astype('int32'), [4, 4, 3]), relay.reshape(call_2081.astype('int32'), [4, 4, 3]), ), 1)
call_2087 = relay.TupleGetItem(func_668_call(relay.reshape(var_2084.astype('int32'), [4, 4, 3]), relay.reshape(call_2081.astype('int32'), [4, 4, 3]), ), 1)
output = relay.Tuple([uop_2077,call_2081,var_2082,var_2083,var_2084,call_2086,])
output2 = relay.Tuple([uop_2077,call_2085,var_2082,var_2083,var_2084,call_2087,])
func_2100 = relay.Function([var_2076,var_2082,var_2083,var_2084,], output)
mod['func_2100'] = func_2100
mod = relay.transform.InferType()(mod)
var_2101 = relay.var("var_2101", dtype = "float64", shape = (8, 13, 13))#candidate|2101|(8, 13, 13)|var|float64
var_2102 = relay.var("var_2102", dtype = "float32", shape = (405,))#candidate|2102|(405,)|var|float32
var_2103 = relay.var("var_2103", dtype = "int64", shape = (8, 36))#candidate|2103|(8, 36)|var|int64
var_2104 = relay.var("var_2104", dtype = "int32", shape = (2, 24))#candidate|2104|(2, 24)|var|int32
output = func_2100(var_2101,var_2102,var_2103,var_2104,)
func_2105 = relay.Function([var_2101,var_2102,var_2103,var_2104,], output)
mutated_mod['func_2105'] = func_2105
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2336 = relay.var("var_2336", dtype = "float64", shape = (6, 1, 8))#candidate|2336|(6, 1, 8)|var|float64
var_2337 = relay.var("var_2337", dtype = "float64", shape = (6, 13, 8))#candidate|2337|(6, 13, 8)|var|float64
bop_2338 = relay.divide(var_2336.astype('float64'), var_2337.astype('float64')) # shape=(6, 13, 8)
func_1095_call = mod.get_global_var('func_1095')
func_1099_call = mutated_mod.get_global_var('func_1099')
const_2344 = relay.const([[-8.059194,-1.774007,6.550567,-7.666169,0.970427,-7.254898,-0.264903,-5.970556,-7.372157,5.120690,3.576795,3.894147,5.208550,-9.111871,-9.378217,1.077190,6.606920,-2.973942,-3.093984,-8.715140,4.565840,-7.750346,-2.267566,0.373310,7.066989,-2.219762,2.622575,-4.051685,-3.131563,2.456652,9.820803,-7.091926,-4.050332,0.135407,0.124189,-8.776094,0.075369,3.344982,3.813659,-8.276340,3.417235,4.823938,-4.553859,6.817488,7.049459,-0.868021,6.974461,4.571641,0.003540,-6.488008,3.841606,7.237862,-3.395961,-9.574848,0.849888,-8.879047,2.803742,-9.627525,5.490754,7.027516,-4.667231,7.602606,-3.789426,8.306113,-9.619325,-5.750365,1.825094,-6.418659,-8.856868,2.508740,6.177765,-2.840145,-6.982216,-4.677502,-0.783945,-1.108129,2.882790,9.640494,-5.385211,-2.085564,-9.563688,-8.564859,-9.993056,4.872722,0.601220,1.344877,7.535328,-3.838087,-2.631717,0.054363,-3.952547,5.322936,-9.086842,6.000889,0.601993,0.688436,-9.225140,3.687562,-8.690650,-2.543509,-9.124658,-0.359563,2.388881,4.554613,2.204140,1.070758,-6.489631,-3.283955,0.202373,5.589148,0.136405,-5.314053,1.874322,-3.282961,3.172407,3.873676,-2.298645,5.450122,-9.850662,2.586776,0.289427,7.625202,9.867125,-0.115881,5.606655,-6.346857,-2.454974,9.356607,-2.106004,8.552644,-6.858093,1.700493,-1.372000,-3.533021,7.036922],[6.767727,-3.351233,-3.908701,-5.697163,-7.745601,7.645412,-7.699460,-9.080858,8.774130,9.801231,-4.798928,3.622134,5.854853,-4.347530,2.943096,8.110200,-2.323042,6.524707,-0.981003,-3.461079,-8.272496,1.069698,3.514661,-9.623849,-4.859971,-3.827626,2.926422,6.802763,3.243468,-2.519512,6.051904,5.424600,-3.180464,1.388442,-3.612379,8.032996,1.630463,7.743277,-6.454624,1.600456,-0.777164,1.776159,5.571718,-0.519539,-3.690546,7.829106,-2.059230,-4.808583,-9.839370,8.140193,7.188077,9.633397,7.863354,4.439037,-7.808257,9.943378,-2.751453,-8.742818,4.567851,6.484743,2.535574,8.117593,4.636288,-6.217948,8.437385,2.339356,2.571672,8.153914,5.810988,-1.620741,1.703068,-5.457567,7.375411,-1.615593,5.221448,-3.681343,-5.788584,4.703076,3.325729,4.479287,8.261289,3.697468,7.388393,-5.679663,-1.128494,-2.809875,-3.552395,2.011017,4.684232,-9.823844,0.464442,-7.970352,-0.879060,-3.399233,4.522483,8.960827,-6.626319,6.328028,5.782991,-8.537261,6.210917,-1.474225,-6.596228,8.972490,2.452002,-5.607823,-7.474030,-7.397200,-9.407019,7.922442,4.481359,3.105766,7.443857,9.957157,-0.310112,-3.766593,6.632356,0.634893,7.728606,2.076585,-3.868482,3.379873,-3.218388,5.375109,-6.613394,1.001194,7.467337,9.670814,5.841509,-9.006362,3.707584,5.511816,5.662016,-7.095917,3.359980],[7.840518,2.990984,3.504599,-6.245038,2.455722,6.505352,-4.081826,7.734342,2.205871,1.344441,-8.366403,7.423141,9.834051,-9.154879,9.931486,0.908176,2.656194,8.076495,1.835334,0.806210,4.320935,0.173282,-1.311114,9.533595,4.899061,8.117467,5.785769,-8.515029,1.196374,-5.797560,-9.151758,8.864681,9.541208,-6.918710,-2.007609,7.082594,-2.977466,-1.862900,3.650867,9.481457,-4.733703,-0.815181,5.252750,-6.409548,5.959496,8.758767,-6.412159,6.253592,9.684753,-0.379971,8.468474,6.073075,-5.348545,-7.115088,-0.760941,9.149136,-9.751273,-2.256323,-3.370590,-1.644519,-5.178255,7.165710,-0.823000,-2.052423,9.953442,-1.298795,-6.282592,-7.555401,3.500153,-3.703928,-5.604346,-1.325089,4.744891,-9.037400,0.307424,4.984337,-1.227828,-2.222193,2.814957,4.685090,-5.480077,9.510617,2.682268,6.112096,2.742412,-2.734786,3.193226,-1.469356,-9.868708,-2.182401,-6.029870,0.779815,0.765873,7.076947,-4.699705,8.169936,-6.205809,4.732088,-5.195685,-1.804572,-1.210196,-3.759578,6.650499,-4.585702,4.795127,0.305118,-2.368382,9.768570,4.711618,-0.988567,1.458429,-2.023990,-0.335921,5.250070,-5.124717,-5.798351,2.237217,6.161941,-0.025820,-0.710622,-2.155127,2.775967,-9.820048,-0.825649,0.856039,0.897098,-7.674043,7.975523,3.236416,-5.309613,-3.911641,-4.442041,9.160743,0.573373,1.790465]], dtype = "float32")#candidate|2344|(3, 135)|const|float32
const_2345 = relay.const([2,5,-5,-10,-10,-4,1,1,4,-3,4,2,3,3,-5,-7,-8,2,7,-4,2,-5,-3,-8,6,3,-7,6,-10,-1,-3,5,-9,5,-8,-5,6,-5,4,7,5,4,4,10,-6,2,-9,3,1,-6,-8,1,-8,-6,-2,-6,2,8,7,3,-1,5,9,8,7,-2,4,10,2,6,-8,10,2,9,6,-7,4,-6,1,6,7,-2,3,-5,-9,-10,5,10,-6,1,8,10,7,8,8,-5,-1,-8,-10,-1,7,-9,-1,-2,-5,-10,8,-8,4,4,-9,10,7,-8,2,7,1,2,4,-9,-6,5,-1,-10,8,-8,4,-10,-6,9,8,-7,-3,-10,-4,7,2,-5,-4,5,-10,2,10,4,-10,4,-8,-6,-2,7,9,-6,-7,-3,6,6,2,-2,10,6,9,-8,3,-8,-4,10,3,6,7,-3,-7,10,7,-10,8,-6,10,-3,-10,7,-10,-9,1,4,-3,2,6,-9,-6,1,-9,-10,-3,-1,8,10,2,-10,5,2,1,-9,-10,1,9,1,-2,-6,-5,-9,2,-10,1,9,6,-3,7,-3,10,4,-9,-5,5,-6,-8,-5,6,-5,9,-2,-5,-1,7,-1,1,6,2,1,-5,-10,-1,3,4,6,-2,-8,3,1,-5,-9,-2,6,-8,-1,-1,-6,-8,4,9,-5,8,9,-5,5,5,-6,-1,-10,9,-4,4,7,-10,-6,-10,-9,-6,-4,-1,1,-5,4,9,-8,7,1,3,5], dtype = "int64")#candidate|2345|(288,)|const|int64
call_2343 = relay.TupleGetItem(func_1095_call(relay.reshape(const_2344.astype('float32'), [15, 9, 3]), relay.reshape(const_2345.astype('int64'), [288,]), relay.reshape(var_2336.astype('int32'), [48,]), ), 1)
call_2346 = relay.TupleGetItem(func_1099_call(relay.reshape(const_2344.astype('float32'), [15, 9, 3]), relay.reshape(const_2345.astype('int64'), [288,]), relay.reshape(var_2336.astype('int32'), [48,]), ), 1)
func_1095_call = mod.get_global_var('func_1095')
func_1099_call = mutated_mod.get_global_var('func_1099')
call_2347 = relay.TupleGetItem(func_1095_call(relay.reshape(const_2344.astype('float32'), [15, 9, 3]), relay.reshape(const_2345.astype('int64'), [288,]), relay.reshape(var_2336.astype('int32'), [48,]), ), 1)
call_2348 = relay.TupleGetItem(func_1099_call(relay.reshape(const_2344.astype('float32'), [15, 9, 3]), relay.reshape(const_2345.astype('int64'), [288,]), relay.reshape(var_2336.astype('int32'), [48,]), ), 1)
func_1608_call = mod.get_global_var('func_1608')
func_1611_call = mutated_mod.get_global_var('func_1611')
var_2353 = relay.var("var_2353", dtype = "float32", shape = (468,))#candidate|2353|(468,)|var|float32
call_2352 = relay.TupleGetItem(func_1608_call(relay.reshape(var_2353.astype('float32'), [468,])), 3)
call_2354 = relay.TupleGetItem(func_1611_call(relay.reshape(var_2353.astype('float32'), [468,])), 3)
output = relay.Tuple([bop_2338,call_2343,const_2344,const_2345,call_2347,call_2352,var_2353,])
output2 = relay.Tuple([bop_2338,call_2346,const_2344,const_2345,call_2348,call_2354,var_2353,])
func_2359 = relay.Function([var_2336,var_2337,var_2353,], output)
mod['func_2359'] = func_2359
mod = relay.transform.InferType()(mod)
mutated_mod['func_2359'] = func_2359
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2359_call = mutated_mod.get_global_var('func_2359')
var_2361 = relay.var("var_2361", dtype = "float64", shape = (6, 1, 8))#candidate|2361|(6, 1, 8)|var|float64
var_2362 = relay.var("var_2362", dtype = "float64", shape = (6, 13, 8))#candidate|2362|(6, 13, 8)|var|float64
var_2363 = relay.var("var_2363", dtype = "float32", shape = (468,))#candidate|2363|(468,)|var|float32
call_2360 = func_2359_call(var_2361,var_2362,var_2363,)
output = call_2360
func_2364 = relay.Function([var_2361,var_2362,var_2363,], output)
mutated_mod['func_2364'] = func_2364
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2392 = relay.var("var_2392", dtype = "float32", shape = (5, 10, 14))#candidate|2392|(5, 10, 14)|var|float32
uop_2393 = relay.log10(var_2392.astype('float32')) # shape=(5, 10, 14)
var_2406 = relay.var("var_2406", dtype = "float32", shape = (5, 10, 14))#candidate|2406|(5, 10, 14)|var|float32
bop_2407 = relay.logical_or(uop_2393.astype('bool'), relay.reshape(var_2406.astype('bool'), relay.shape_of(uop_2393))) # shape=(5, 10, 14)
output = relay.Tuple([bop_2407,])
output2 = relay.Tuple([bop_2407,])
func_2415 = relay.Function([var_2392,var_2406,], output)
mod['func_2415'] = func_2415
mod = relay.transform.InferType()(mod)
mutated_mod['func_2415'] = func_2415
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2415_call = mutated_mod.get_global_var('func_2415')
var_2417 = relay.var("var_2417", dtype = "float32", shape = (5, 10, 14))#candidate|2417|(5, 10, 14)|var|float32
var_2418 = relay.var("var_2418", dtype = "float32", shape = (5, 10, 14))#candidate|2418|(5, 10, 14)|var|float32
call_2416 = func_2415_call(var_2417,var_2418,)
output = call_2416
func_2419 = relay.Function([var_2417,var_2418,], output)
mutated_mod['func_2419'] = func_2419
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2476 = relay.var("var_2476", dtype = "float64", shape = (5, 1, 5))#candidate|2476|(5, 1, 5)|var|float64
uop_2477 = relay.sin(var_2476.astype('float64')) # shape=(5, 1, 5)
func_2415_call = mod.get_global_var('func_2415')
func_2419_call = mutated_mod.get_global_var('func_2419')
const_2488 = relay.const([6.942621,1.965825,-8.585309,2.681899,-2.712362,0.941844,-4.380433,6.423242,5.275246,-2.452879,6.841120,8.823124,-8.576002,0.940533,9.839514,-3.765886,-9.606095,0.323459,-8.402389,7.592846,-3.492902,-2.105566,-2.858641,-7.003498,-7.233155,-0.501659,-3.350173,-9.090295,-7.659383,-0.993740,4.890102,0.628971,4.222405,9.961509,7.280057,-9.613735,1.270817,-7.049410,5.254678,2.703449,-4.671098,0.199134,3.185336,3.155062,-1.989797,5.796727,-0.793614,4.087634,5.800677,2.796920,3.879619,-2.759136,5.121126,0.088442,2.092143,-4.791293,-4.386308,2.983208,9.888943,-1.961088,-0.209978,2.126485,-0.964282,-8.205861,2.675746,-8.072706,-7.371100,7.873939,4.308300,-3.341977,7.142154,-8.467798,-3.362081,9.546377,1.491326,2.203479,-4.064567,-9.321458,-8.922409,-5.482215,3.879471,-1.085165,-1.051128,9.711541,-1.876952,-5.522581,-1.688510,-0.579543,-3.770528,-0.943251,8.876466,-7.215770,-0.845034,-5.713637,4.003037,7.614038,4.938837,-4.091161,4.708692,4.306989,1.194532,-9.271652,3.009269,1.089564,-9.370989,1.910679,6.020642,2.075385,-1.913491,-8.837333,6.433455,-5.779641,-7.688760,-9.160780,-6.482566,4.677004,1.370425,0.382148,-5.247106,8.642681,-0.060653,-8.735974,-4.648847,-6.447881,1.101950,-5.538460,-9.880320,0.535703,-3.477641,-5.754334,-4.804571,-3.851678,0.011341,-2.366678,-4.355100,8.171388,-8.409400,1.564928,7.889414,9.013539,-6.288253,0.280682,4.711217,0.657029,-4.631225,-1.284525,-8.822588,7.927779,7.249065,1.488116,6.301985,-4.461332,9.358311,-0.527262,8.906725,9.099583,7.954533,-0.823698,-2.336863,-6.158681,-5.263118,7.177169,-8.476276,-9.734326,-0.068451,8.005187,-9.619082,0.450814,0.326699,7.407073,9.312837,4.193180,9.713441,4.302017,1.519700,3.143610,3.993266,-1.880531,6.616742,4.867087,9.882734,8.517350,-3.976516,1.054150,-4.643413,6.854095,2.812674,-3.619455,-5.451845,-3.032606,-7.701750,0.828651,-3.938602,4.457513,3.096758,2.078396,0.243808,-7.903412,1.779556,-0.958430,-3.412215,-8.788913,-6.666984,4.268509,-8.940925,-5.514879,6.554380,-6.115876,-9.049512,3.947044,-7.310500,-1.513981,6.424448,-0.877776,-8.246981,-2.111518,-0.535738,-5.284671,7.239545,6.629219,-2.821164,-8.223330,-9.964343,4.023758,-6.749197,-8.919842,-7.855085,2.474930,2.274030,-2.234362,-8.501538,6.458320,3.288093,1.408815,5.331368,3.880007,-7.082323,8.077457,-8.134864,5.962135,2.538035,-6.758232,-4.810503,5.476224,4.503738,1.548699,-2.678709,-2.575723,1.281390,-7.751976,-4.738827,-6.151537,-4.909159,7.718403,-0.726694,3.143537,-0.958765,5.547495,1.143556,9.419624,6.866443,-0.161978,6.877893,1.455875,-8.632217,5.681705,5.055214,-9.018226,3.151657,7.417197,-4.902463,4.200112,-6.419694,-1.409101,5.828232,-6.343440,-6.689617,-6.745382,3.366970,-2.789583,6.212495,-5.565722,8.749189,-4.337592,1.207373,4.653161,7.725802,-1.349539,8.939977,1.815305,-0.157065,9.035557,9.996549,-2.135434,-6.235320,-9.652563,-9.213352,-7.709002,1.089068,-3.100859,-1.526036,9.162490,-8.219928,4.501351,-5.158410,-6.458891,-6.711288,7.279517,3.890598,-7.948357,8.840719,-9.271422,-6.971799,8.230983,4.282434,-0.143982,2.314828,9.863014,0.115709,-0.341374,-8.150936,6.038962,-1.239565,-1.205249,-4.077827,6.190969,4.309196,-8.030892,9.543355,-5.803740,9.527516,-2.741242,-6.481575,5.747829,0.058012,2.058096,-7.961259,-8.627550,7.223540,9.152453,-4.482685,9.178056,-0.691638,0.318149,-0.036125,-2.891442,-4.180519,-0.609602,8.130423,-7.548075,6.703113,-0.170011,-7.483814,8.426096,4.569351,-2.481779,0.183087,7.123944,2.329124,3.712279,-2.925825,6.969498,0.276481,6.307566,5.806569,4.738274,4.518830,9.415408,-1.541521,-4.863695,2.272326,9.120852,-5.542272,-0.955024,3.140712,9.331521,7.996251,-4.116507,7.703011,3.920183,-2.520351,5.751885,-9.737475,0.015344,9.773157,-3.786933,-8.976508,-5.453300,6.131837,-9.867957,-1.572214,-2.458634,0.070291,-8.745987,0.968361,7.774698,-0.948057,9.192288,5.609467,-6.638750,-4.692034,6.029883,-3.847289,-1.618476,-3.385169,9.032220,-1.042127,4.883849,-6.248746,-9.834433,6.483705,2.183049,7.510838,9.237182,-1.090900,0.273261,-6.596530,6.323737,-2.316018,-9.023166,3.153260,-4.258090,-4.255173,5.357946,5.080989,-6.948010,8.105782,1.332583,-5.943166,-6.492484,-6.228534,-0.495125,-5.755051,6.620436,5.128681,-1.916614,6.953891,-3.930397,-1.727076,9.643959,-6.987160,-4.987194,1.943863,-3.178620,-2.826842,-8.206917,-4.754361,-6.497942,0.410639,-1.925450,9.662689,2.666211,1.710001,-1.494297,8.423229,7.058377,0.371474,6.460391,2.754436,3.310221,-9.206906,-2.033769,-8.251776,-6.540101,5.012501,-8.844629,1.245275,5.358614,2.990818,-9.440311,6.497700,-0.043815,1.475656,-7.912108,2.473169,2.948505,5.303423,3.297297,-6.053138,3.855782,-9.903608,-4.387545,8.443586,-3.514774,-4.155177,2.089076,-0.979176,-7.959031,-7.222434,3.473204,-2.909873,3.403069,-8.769988,6.378104,-7.974065,-3.009139,-4.205357,-2.173041,7.554169,5.152046,6.727617,5.164614,-2.739983,-7.961637,-2.662378,1.156608,-0.047485,6.088774,0.841538,9.826945,1.753480,-3.934523,-6.534704,-3.742269,6.932232,0.501919,-0.756697,-4.920339,5.533280,7.791035,-6.399260,-2.345881,-0.846621,-6.130369,7.581414,2.867880,6.301514,-1.869907,4.560436,3.295089,-0.923298,9.916716,-1.379570,-5.074731,-4.900466,2.150687,-9.698899,6.572600,6.907041,-1.419583,2.427261,-4.758786,9.500169,6.164831,1.853125,7.773581,2.976410,-4.241992,-8.225672,2.881289,3.591089,-8.926931,6.469382,-2.321421,7.429091,7.067815,-6.621281,4.801656,-3.670316,-0.963651,-8.421330,-5.336387,3.090739,8.645191,8.262964,-1.451304,6.110655,-8.461944,0.993497,-8.751669,4.212749,8.553766,3.068973,7.816169,9.154575,2.537065,1.329474,-0.997023,-1.529839,-3.138130,-1.933275,-5.147341,4.155903,-3.826484,4.173550,8.636122,-6.249634,9.721514,-1.584963,-5.550208,-8.740911,8.058994,3.001833,-8.340793,9.766709,4.391499,-6.997014,7.514125,-9.404654,-9.983600,-8.944058,-1.001232,-2.599287,-9.875190,-7.073551,9.538905,-0.504064,-0.230769,-9.172758,-3.329172,1.440370,5.038958,1.358156,-3.003072,6.053631,-8.441238,-4.298070,-4.292348,-8.129814,3.864353,6.240921,1.671921,8.817666,8.691318,2.085584,4.957659,2.621843,-4.251960,-6.634104,-5.211919,6.325171,5.484223,0.929155,-4.200885,6.554586,-9.401492,-3.503480,-1.826062,9.742932,7.679572,2.837197,-6.089665,-0.401203,-8.765798,3.992250,-1.398312,6.512754,-2.315538,6.831788,-7.183016,0.739300,-4.237514,-7.622177,1.143907,-2.057334,-2.163036,-0.633273,4.720991,1.691808,0.789123,-4.542676,5.172409,2.119736,6.544686,1.562305,9.826032,-6.552830,-7.369835,8.725457,4.384920,3.897034,4.457940,-2.643648,-9.733998,-0.268877,-6.348713,7.431775,-3.037286,0.959149,8.258474,7.623389,2.838207,-5.296632,0.492551,-2.640975,-4.938472,-1.814410,6.157435,-6.199701,5.982551,0.812212,3.604558,3.852360,4.769368,3.877738,7.280062,-7.650983,2.910436,2.514578,-9.337212], dtype = "float32")#candidate|2488|(700,)|const|float32
call_2487 = relay.TupleGetItem(func_2415_call(relay.reshape(const_2488.astype('float32'), [5, 10, 14]), relay.reshape(const_2488.astype('float32'), [5, 10, 14]), ), 0)
call_2489 = relay.TupleGetItem(func_2419_call(relay.reshape(const_2488.astype('float32'), [5, 10, 14]), relay.reshape(const_2488.astype('float32'), [5, 10, 14]), ), 0)
func_2415_call = mod.get_global_var('func_2415')
func_2419_call = mutated_mod.get_global_var('func_2419')
call_2493 = relay.TupleGetItem(func_2415_call(relay.reshape(call_2487.astype('float32'), [5, 10, 14]), relay.reshape(const_2488.astype('float32'), [5, 10, 14]), ), 0)
call_2494 = relay.TupleGetItem(func_2419_call(relay.reshape(call_2487.astype('float32'), [5, 10, 14]), relay.reshape(const_2488.astype('float32'), [5, 10, 14]), ), 0)
func_1124_call = mod.get_global_var('func_1124')
func_1127_call = mutated_mod.get_global_var('func_1127')
var_2497 = relay.var("var_2497", dtype = "float32", shape = (6, 78))#candidate|2497|(6, 78)|var|float32
call_2496 = relay.TupleGetItem(func_1124_call(relay.reshape(var_2497.astype('float32'), [13, 6, 6])), 0)
call_2498 = relay.TupleGetItem(func_1127_call(relay.reshape(var_2497.astype('float32'), [13, 6, 6])), 0)
func_2359_call = mod.get_global_var('func_2359')
func_2364_call = mutated_mod.get_global_var('func_2364')
const_2508 = relay.const([-6.284105,-0.799574,-3.873677,-5.089262,-9.125194,-6.302022,2.356561,0.333318,1.869201,7.628663,-4.696981,-6.887793,-5.103259,4.223568,-5.711667,-7.232011,-5.014872,6.189761,8.939356,-8.087173,-1.883284,-8.761521,-2.434691,-0.348405,0.939005,-6.321645,-1.596823,7.207867,5.062293,-5.121263,6.672083,-6.112173,5.238426,-3.491092,4.076134,1.125244,-2.281590,8.014433,8.585184,-3.001748,-6.861849,-8.925089,9.768579,7.214730,3.839553,-3.521406,-9.517282,-1.238998], dtype = "float64")#candidate|2508|(48,)|const|float64
const_2509 = relay.const([5.770032,-5.374314,-8.843891,-0.710943,-1.303000,-4.200514,-5.667024,3.957466,-9.525502,-5.574803,-1.341228,-8.664192,-7.395501,-7.160471,-1.949243,-3.857983,-5.132388,7.877349,5.488936,-2.993524,-1.123011,-4.559486,-7.022655,-9.149288,-7.478807,-7.949881,9.398404,7.450773,4.557698,3.340551,3.968188,9.386507,9.457974,-0.419440,-7.308769,-5.945074,3.552929,2.155171,-5.166099,-7.431641,8.882703,2.790773,7.673668,-3.305230,-6.606644,-9.106816,7.190271,-7.944105,-6.666112,5.389269,2.419996,3.133366,-8.425906,-9.230714,-5.149174,0.021510,0.562216,7.126161,-9.017903,9.432584,8.397717,-1.983008,6.222407,5.983515,2.212926,8.902368,-5.278359,6.213502,4.475801,1.973341,-5.654820,8.177119,9.947679,-1.312854,-9.344650,4.124279,-0.612971,0.118581,-2.627904,8.898108,9.044835,-8.799329,-6.719048,0.389838,-9.239577,6.925169,2.700648,-2.861055,3.487981,-8.464055,4.549856,-1.399046,2.840737,5.010984,-7.739474,3.167056,7.954846,-8.297509,2.576907,-1.779547,-6.696248,-9.514473,-2.068000,4.272752,-4.356974,-9.531543,8.745627,3.229182,-5.440660,-2.074948,1.393432,-1.030957,0.455934,-3.817916,-7.205688,-6.064853,8.621500,5.851185,-7.703029,1.079284,-2.064137,-3.347898,-5.014061,4.085928,-4.163454,-0.117756,0.575652,1.778687,2.036865,-3.657399,-4.227343,-0.074900,8.653364,0.223054,-7.679445,-7.329445,-8.770456,-9.840161,-6.762853,6.863517,4.840966,9.330790,8.056038,-4.673937,-8.146011,-1.405213,0.208644,-1.273064,-8.235700,-0.923769,0.032973,-6.018499,1.646905,-3.089617,-4.138385,3.287689,8.039166,-2.880945,7.685748,6.185961,9.440398,-4.141529,5.754456,-8.954500,-4.435425,-8.375089,2.249111,-7.231441,-0.577891,5.792567,-9.506740,-5.096657,0.495883,-9.526447,0.259059,-2.191969,-0.372328,-9.074506,-1.766809,8.146140,4.769879,-7.414340,-9.896188,-8.375607,9.249435,3.489714,-3.581592,-0.632066,7.219188,-2.441525,-4.115077,2.500328,9.790888,-3.803828,-3.283368,-8.013141,-0.528268,2.238138,7.945268,7.850052,7.040105,3.085900,-7.051313,3.571421,-3.751311,7.368886,-5.781711,4.962570,-1.852215,1.640108,-9.822977,-4.312149,-5.140499,3.849729,8.690742,1.559871,-9.915766,-7.229120,-5.984313,-1.508661,9.203921,4.956138,-2.951039,0.224782,6.377514,-3.604084,4.320649,-7.446378,-4.735117,9.020098,-9.839629,-0.942859,4.744843,3.875733,-1.978345,7.854326,0.396766,9.111729,0.483087,-0.275298,-4.308202,-8.583271,-5.641960,2.207470,2.056819,-9.401826,4.154393,-3.828753,-7.359620,-7.649409,9.587397,-8.855768,1.484307,-5.260147,4.724348,4.839008,6.899232,8.264304,-9.005812,-0.051104,9.957110,0.883790,4.238075,-6.965615,3.638688,-7.167524,-9.386038,-7.438536,5.241615,-2.722634,7.412594,-5.638511,-1.147535,-5.866882,-8.787632,-8.385628,-9.927080,6.205499,4.273239,5.442151,-7.735862,9.882696,-8.520317,-9.021774,-0.322348,-8.387497,-2.379802,0.091087,-7.264774,0.778040,-1.543506,6.563550,3.628403,7.884961,-4.862280,-1.777029,-6.511307,3.877787,7.375455,-8.810368,-1.370498,2.386836,0.704975,2.211613,7.416480,9.972577,-3.276633,-4.152630,7.644631,-9.363760,-6.472545,-2.815093,-7.955470,5.373039,-6.764445,-9.280421,2.285771,7.288237,-1.534489,-0.968446,-0.781525,0.243750,-9.978404,-9.070281,3.215097,8.407099,1.840731,4.016675,2.327381,6.267691,-3.416818,8.995158,-7.185621,0.030816,1.955111,-3.518346,4.872942,5.225930,5.090243,1.565814,-5.658666,-1.883349,-2.282957,-7.258087,-9.419730,1.985959,6.889071,-8.183150,-2.205475,-3.566539,-3.895426,5.659390,-5.532314,0.019717,-5.656378,3.996577,-4.543701,4.330443,3.493108,-9.895614,9.733398,-1.161911,-4.705091,-7.750014,-0.106479,0.827758,2.371165,-6.295948,8.018593,5.839380,-6.698134,-7.657297,-9.196310,-8.669200,9.380623,-9.969723,-2.294256,2.892375,9.661780,5.920493,-4.828667,-0.184489,4.635363,-1.278256,3.477073,6.804442,-8.073663,-9.989549,7.173864,-3.666744,4.218234,2.498868,9.272314,4.073589,5.488434,1.975542,8.864470,0.045948,-8.918293,5.521750,-7.159636,-4.640573,-6.917999,0.215858,0.738042,0.150847,-9.994139,-8.144710,9.537775,9.316326,8.233357,3.486834,-5.555643,6.727700,-2.580234,-1.744741,6.218018,6.116219,4.654685,2.459225,-8.030167,-1.873036,-5.370958,-0.007221,-8.266045,-5.969412,-8.462239,-3.123474,-7.024729,-7.981884,-3.436248,8.882020,3.416232,5.111691,-5.897389,0.462085,5.883046,2.954765,-5.585509,-1.016591,2.637374,-5.775373,-3.304850,1.317257,3.226617,9.191288,-7.215807,5.035260,5.166869,0.760511,-8.172475,-3.596026,-0.844190,1.387420,2.915830,9.359756,-1.039345,2.572183,-2.350804,2.953516,-5.391290,9.244523,-6.389016,-3.744561,2.207013,9.392628,-5.365882,-1.627157,0.092275,6.502426,3.825127,-4.454144,4.361095,-6.608389,-1.562710,3.921711,-3.801530,0.651402,7.611249,-4.105063,5.640234,-6.587984,7.702408,-1.916423,-0.661996,2.537309,-2.977945,6.721691,8.275111,7.496438,-7.288815,-8.496266,0.811360,0.539279,9.783035,-8.959961,3.361131,-5.862888,4.894635,0.545612,6.272394,2.742569,-2.320125,3.760149,-5.802685,5.508054,6.555349,5.200223,-4.518516,9.909244,-7.494896,-9.617111,3.943851,-4.783620,-5.972436,-0.893508,-1.840573,5.906460,2.003215,4.068735,-3.757853,-7.847844,-0.704954,-0.227996,-4.014056,5.640863,9.011386,-0.288755,-0.831434,4.363804,-4.574623,-8.100819,5.855313,-5.736620,-1.675228,-1.571035,-3.612175,-1.175350,-7.949970,7.929491,5.768855,9.828931,0.878825,5.778477,-6.080290,-8.856416,-1.710259,-8.063598,-8.936820,-4.240285,-8.864929,1.454885,2.591571,1.677962,9.546211,-3.757917,3.711880,5.095545,8.447116,0.301172,-5.579891,6.058030,-5.060041,-3.633306,-5.369022,-0.753909,-7.979629,5.261329,1.333733,5.081959,-9.745278,2.561895,-6.705340,-6.151585,1.543501,4.015397,4.419788,5.094175,-5.938616,-9.583331,-9.933354,2.621566,0.523845,8.915336,-2.049909,1.315138,-7.880989,-5.411618,8.541192,3.853095,-1.121517,-5.790528,0.635232,-5.551904,-3.703689,-8.004048,3.487377,9.883815,-3.351600,7.638463,6.469344,7.472297,-8.808489,-8.824171,-1.047458,-8.050088,4.447029,-7.774971,-9.180558,-1.860987,-5.969257,-5.429379,0.990585,-8.443357,-9.914354,-6.550942,-3.101246,1.557345,5.320000,-1.770519,7.926084,2.408960,-2.212605,7.396326], dtype = "float64")#candidate|2509|(624,)|const|float64
call_2507 = relay.TupleGetItem(func_2359_call(relay.reshape(const_2508.astype('float64'), [6, 1, 8]), relay.reshape(const_2509.astype('float64'), [6, 13, 8]), relay.reshape(call_2496.astype('float32'), [468,]), ), 5)
call_2510 = relay.TupleGetItem(func_2364_call(relay.reshape(const_2508.astype('float64'), [6, 1, 8]), relay.reshape(const_2509.astype('float64'), [6, 13, 8]), relay.reshape(call_2496.astype('float32'), [468,]), ), 5)
func_2100_call = mod.get_global_var('func_2100')
func_2105_call = mutated_mod.get_global_var('func_2105')
const_2517 = relay.const([1.380294,0.896236,4.178980,-7.718873,8.553040,0.102195,3.318300,-5.324753,-4.381359,-5.503113,-6.386343,9.891633,-9.924167,-8.391768,8.603804,6.890282,3.485733,9.535868,5.867127,-6.517416,-7.872969,-8.079404,-3.153458,6.591009,-8.091641,-4.042275,-3.898084,3.580798,-7.156395,-8.807391,7.518512,-3.147161,-3.569486,-8.551629,1.052316,1.062250,-0.573876,0.140860,-5.232466,5.723590,1.677791,3.782198,8.578902,-3.736005,-1.902832,-6.594689,9.102600,-0.009645,-4.874982,0.169713,6.089688,8.467533,7.097109,-9.487084,2.919120,-2.530404,-6.576531,-5.749620,-9.313728,3.878824,-2.616300,8.578078,-1.202755,3.416434,-3.532812,-0.430929,1.037987,8.069981,-2.058073,-2.705286,3.090163,-4.668864,-9.720200,3.473368,-2.892420,7.884457,-7.863465,-8.302694,-6.263998,6.286937,-3.235510,8.973280,-6.094250,-0.936018,-2.214393,-3.864859,-4.341388,0.738041,-1.412547,2.480398,5.190769,1.553881,4.756512,-4.556575,7.386651,-9.668961,1.488887,-2.210106,-4.585639,8.827327,6.933827,-3.192719,-6.310113,8.426821,8.600930,2.857684,5.449259,-8.931114,-7.894946,5.527618,5.043914,-1.849308,6.570139,-5.411142,4.446678,-0.196482,3.454380,-8.373309,6.629192,-1.604833,4.996572,8.014241,-1.531713,3.787253,6.216425,2.156157,8.139574,1.889030,-0.907560,-0.978306,1.510777,-7.911286,-3.481108,2.165053,-5.191268,-3.671526,6.411305,6.318335,9.774434,2.490386,9.385538,9.117946,-2.319290,1.723555,-2.667857,-5.886013,-8.267008,6.553302,-8.967197,-6.978897,-8.050292,-4.159366,8.930725,-4.136003,-5.807023,0.599982,-6.981085,-6.112245,3.060973,1.549692,-8.265308,-7.250892,-7.648117,6.555993,-7.159375,-9.591992,-3.365145,-4.444786,-9.913668,-3.546496,-5.902615,-4.607700,0.401585,0.773433,-5.417800,-8.703205,8.767476,6.704709,-6.495057,-5.187742,1.910272,-6.954246,2.996334,3.266825,7.022632,-8.939669,8.493469,-1.054163,-5.581599,9.553801,-1.134469,1.797347,-2.037243,2.376279,5.192819,1.608767,-2.453210,-9.630454,6.755903,4.442685,1.570926,-2.845259,-1.769601,9.587352,3.002762,8.853362,2.864176,5.744034,-0.962387,-0.479664,-6.823838,-0.556224,7.450163,-1.313704,-1.915491,3.618408,9.341872,-3.202317,-3.154623,-8.089090,-7.264846,9.736205,-4.146476,-3.443949,-1.636244,-6.984232,-6.970842,5.062420,5.679049,-3.989302,-5.845543,-5.175950,-9.221671,5.200492,-6.437612,-2.809003,-4.250018,-3.565004,-9.388472,3.189555,-4.768592,5.233189,-9.629158,-0.542840,-5.327837,2.476389,2.585899,-5.841576,-4.798238,-7.593160,-4.967414,0.173456,1.786519,5.172781,-5.295479,-7.951635,6.411410,-8.036402,-2.788120,9.967555,4.344528,8.085580,-4.396326,-6.102592,-4.908976,-4.988973,2.489750,4.450627,5.615236,-2.086243,5.329470,-0.967712,-0.564086,-7.462214,-1.251211,7.544718,-9.181243,-6.083652,8.311651,2.898541,1.909960,-1.764151,2.553592,2.150542,-1.970331,4.205040,-6.936584,-8.548617,-1.077422,-1.926535,0.834085,-6.882661,-0.046317,-0.798033,-9.505160,8.244845,9.872711,-4.578742,6.838253,-2.538424,-4.284991,9.853271,4.173387,7.524354,-2.691643,-5.769083,-2.347582,0.100185,9.776027,-2.768909,9.870597,-8.496830,8.045996,-4.256481,-6.169837,-1.706358,-5.701690,-8.613111,-8.400822,8.334986,1.454986,-3.432088,-2.586087,-3.088231,7.423463,4.301861,8.811154,-9.509777,7.345547,7.498688,4.856385,-7.275801,-9.696700,0.210755,-9.364160,0.730060,4.864549,1.785797,-3.853984,9.170255,-2.907041,-1.038515,-0.321201,-3.316685,2.543965,-8.828397,-4.334147,-7.583676,9.794801,2.264895,-5.777415,6.156437,-7.503313,-0.367733,-5.787179,-7.364421,-5.134333,-3.084675,1.087103,-5.420391,4.730567,0.589974,8.768120,-4.456824,-1.716551,9.555129,-8.454090,-1.541247,5.420071,5.067139,-8.867599,3.131625,1.547143,-0.960742,-5.290840,4.546454,8.654510,4.661175,0.758248,9.760116,6.314465,-9.714044,9.115704,-8.357261,3.625692,-6.614378,-2.213221,6.661299,-6.094431,-4.468135,-8.832396,-5.136587,6.605384,1.134570,9.534628,-7.924689,3.834796,-3.227448,7.146883,8.253175,2.327150,-1.941550,5.303185,3.282479,2.264673,0.091836,1.868822,0.609899,9.064261,7.139689,9.511932,-3.286259,5.628255,0.892930,5.862637,8.956647,5.223572,-5.172364,0.927492,-4.934737,-6.826501,0.499802,4.395793,-5.792529,3.725618,8.625920,0.736604,2.547281,-4.671563,3.880358,3.644889,-0.537477,-4.384006,-4.469953,-5.196939,1.769868,-3.665519,9.324925,1.488904,-1.432259,1.845944,-4.329439,6.348779,8.474872,-6.855653,-3.571507,-9.330497,-1.163103,4.405642,-4.772508,7.623664,-1.752806,-0.312683,7.920400,8.275517,-2.902655,5.918159,4.362488,-4.068078,8.921485,0.252486,8.885917,-5.070347,3.138493,-4.513941,-8.247700,3.397982,8.576619,-4.835912,9.105590,-0.378445,-4.503934,-0.161613,7.678852,9.151124,-4.875300,-4.966608,-7.066879,9.252820,-4.351383,1.876028,-6.428101,-3.928620,2.430072,-2.784131,-9.083310,-0.556765,9.536303,5.435539,-9.575712,9.687987,3.660906,-4.184208,-5.077203,4.811773,5.038931,6.604415,7.559542,3.238310,-6.874198,-2.813649,-7.655917,-2.868528,6.991303,-8.361204,-4.965635,-8.540402,1.660144,9.625385,8.076799,9.227904,4.268805,-9.260996,-8.004729,8.979363,8.677089,4.801208,0.198436,8.987716,7.603470,-6.008612,8.952276,-2.143752,7.669397,6.164481,-1.598150,9.673875,9.443410,6.584916,5.929703,1.500519,-3.636171,-8.385087,-5.643652,-1.595568,-0.966053,5.039668,-7.824897,-4.233990,4.608662,-7.374968,-9.003741,1.927938,0.963341,2.921541,-4.071488,1.330134,-5.544425,-5.939968,-7.284123,-2.178963,8.064346,-2.012566,4.319640,4.332107,-4.296637,2.210285,4.051594,3.861300,6.956447,8.046353,4.741802,-1.468980,-5.531894,-5.099433,4.694227,5.439481,-5.893165,-6.605404,2.942879,-7.320323,8.204763,-6.994757,-3.146344,7.570683,5.588114,9.183516,-2.506116,-3.006185,-4.967641,1.279029,9.346615,-1.554605,-8.513380,-2.924313,-6.509138,-1.422156,-5.403890,-0.490053,-4.473145,-7.806415,-7.414169,-1.708029,7.911056,-3.312782,6.751594,6.532895,-1.121087,-0.240710,7.932959,-4.977579,1.815211,3.319691,-3.019246,-6.860728,-3.963776,-3.934017,1.941016,2.832835,6.298075,-9.053534,3.432136,8.411258,-2.611981,-8.743715,-9.396988,4.149138,8.003277,6.322504,2.749759,-0.401433,-2.848778,-3.375172,6.682161,-7.977148,4.920166,9.471568,9.899521,8.320414,-8.727235,6.132179,-7.497853,-8.873505,8.637491,6.004064,-6.012337,-1.320160,-7.125033,-7.739567,-9.219117,-8.448061,0.762248,-5.521646,3.892895,-0.953384,-7.910553,-8.221102,2.071230,-7.229349,1.780864,0.747286,-1.580894,-2.625611,-5.188768,-7.778388,-4.221869,5.340719,9.084501,-6.169353,8.870130,-9.119124,-7.742526,-3.681046,-9.945311,-5.422904,4.415237,4.557359,-7.821964,-0.535413,-1.170257,5.538899,-8.593161,-6.605119,7.856749,-9.756872,-5.182158,-5.075171,5.397657,-1.267825,2.938432,4.322434,-4.072294,-3.244910,6.288766,4.374093,-7.027998,-2.610220,8.087261,-3.578181,9.508347,7.347636,2.272344,-4.955655,6.062130,-7.363519,7.656762,5.050874,-2.238341,-2.775013,-3.667320,1.186017,0.960680,3.676803,4.691726,9.606511,-4.623691,-3.491403,-5.400090,6.573206,9.844816,-5.059453,2.886016,-5.470261,-2.511270,2.113223,-8.786606,9.385044,-7.401491,2.180558,-2.409141,-9.152605,0.120436,-8.985463,5.379860,4.308737,-1.298787,-8.667634,8.793632,6.505074,6.599322,6.925427,-1.787501,6.839974,2.526951,-8.041991,7.664330,9.330475,7.268808,-5.668189,0.056496,0.591946,-3.062770,8.906723,-7.621741,0.782351,-4.752005,3.376578,6.807453,3.617288,0.582164,-6.838169,1.218754,-0.595587,5.666969,3.869494,-4.631151,-0.903500,-9.210309,1.276908,9.202594,1.783427,9.666129,-6.510655,2.941352,3.166539,9.728774,-7.526315,3.850286,0.265902,6.530410,3.522368,4.125190,-7.727307,-2.404777,-1.502932,-1.381301,4.758878,-0.849671,-4.737348,6.545527,5.978632,7.745942,1.918339,-4.572564,-6.134462,-3.356737,3.205070,2.852146,5.214985,8.749860,8.884373,0.667940,1.506114,-8.920853,-2.600537,-4.676915,-6.547596,2.071023,-9.561356,-5.738913,0.074841,6.699368,-5.972794,9.126746,-2.998847,8.019517,-0.680774,-1.320843,8.298671,-3.268494,-7.171850,6.023785,-2.754246,9.739600,-7.554441,1.951643,-2.411924,-0.895039,-0.467327,-8.166727,7.206319,-9.359530,3.316571,9.843122,-6.482281,-4.882094,-7.629895,5.563432,-0.719737,-9.873144,7.448115,-5.569443,-4.514507,-9.855791,-0.111647,4.022110,2.465980,-3.954409,-6.953371,3.910511,7.890386,7.322584,2.429839,-5.706295,8.976037,-1.997314,7.625522,-4.206186,8.900717,-2.101006,-0.553056,6.665038,9.595415,-2.009083,-1.521490,-0.338151,6.162433,9.414275,8.892220,-9.373166,-7.670917,2.878693,5.749697,1.885221,-1.043656,8.356275,3.683989,-3.660274,-9.330081,-4.932229,-3.176308,-7.659672,6.420640,-8.718476,2.967665,1.253678,9.294617,3.948422,1.359228,-6.709888,-1.701835,-1.399234,-1.628100,7.268759,4.177252,1.668922,-8.314706,9.195973,-4.647380,-8.084724,-9.265097,4.142992,-9.063509,-1.894335,-6.717628,-9.573912,-6.592885,-9.522480,4.377217,4.798136,-3.681752,4.092372,-8.718503,-7.280466,-8.197844,2.610217,-3.098029,5.287763,7.768703,-1.709328,-0.027866,0.680216,0.033631,9.827037,0.759840,3.045576,-8.598661,-7.195272,1.721193,5.084674,-4.521380,-4.500023,1.647942,9.012816,-8.511200,-7.938234,-7.363171,9.383933,-1.224744,6.326724,-4.298521,2.692429,9.569085,8.184700,-4.594140,-2.052659,5.256953,5.292274,-2.608278,-4.527613,8.119784,9.997341,-4.952802,4.330334,-5.359626,-9.842602,-9.485302,3.075173,0.429951,-3.449724,4.919052,-1.730243,-8.749088,3.026492,4.949164,8.402677,5.322343,-1.689353,2.734028,-8.892292,-7.148607,-1.171284,-9.380892,-7.393019,9.236553,7.022907,-5.009473,9.488982,2.067986,0.140828,-9.263341,0.762340,-8.733836,2.031829,-3.800935,1.745333,-1.087759,1.558769,8.317468,1.914779,-8.306852,3.616004,-1.163940,6.186234,6.624100,-1.142227,7.477818,1.190144,-3.400177,-1.630075,-7.762603,6.357654,6.063414,9.667333,0.057308,2.942357,8.319520,-5.479943,-4.069032,-7.334574,-9.197252,9.687954,-9.367257,8.052560,-3.476010,9.913283,1.805047,5.085884,7.085536,2.538662,1.040536,3.425894,1.346877,0.804041,5.421703,-4.401549,-4.978100,-8.762613,-6.430881,3.523154,6.610353,-4.453377,-1.172944,2.127198,-3.475876,-4.941737,-7.801971,3.060444,6.580396,8.011049,-5.083842,-0.469503,8.491590,6.969182,6.111368,-9.786362,-2.950797,8.987630,3.041579,-1.550191,-0.046204,3.979900,-4.103572,-9.218481,3.706239,6.906571,2.930662,7.447486,-1.418820,9.373659,1.559810,-4.885447,-8.096360,-2.736405,-7.551604,8.820483,1.153070,4.303846,2.983686,3.502494,2.099737,-9.065488,9.367537,-3.673768,0.955270,2.292434,0.592796,-2.362471,5.033556,1.652199,3.451337,-9.168298,-5.464985,2.256324,-9.830660,-3.514445,7.893671,-3.460125,-3.656822,-7.979128,-3.263852,9.944290,7.242010,6.597398,-0.540494,-4.323928,-2.682399,7.304427,2.993399,-9.198217,7.366611,2.162927,-1.209112,6.252366,-3.795760,-9.330116,8.563329,1.622870,3.274591,-5.219862,0.641693,4.300301,9.438227,-3.888159,2.376005,-3.260327,-6.812261,2.991032,-7.823639,6.213127,-9.760460,4.627696,4.061025,-1.326104,-6.285395,6.415399,-0.987823,3.944354,2.475824,-4.792714,-8.380867,8.613187,-9.623227,3.547521,-5.641027,-3.542044,-1.918785,-2.958091,-3.194966,-8.545574,1.013031,-6.398830,2.655915,-4.266094,-4.384540,5.984899,9.963710,8.372682,-9.619616,-7.429981,0.721871,7.475300,6.424408,-5.369553,7.841559,-3.587690,-4.928852,-2.699286,-8.701280,-1.716840,3.124282,9.582624,-3.499263,-2.908660,-4.092126,5.641865,4.566559,7.099178,2.093643,-4.343675,8.980789,9.179383,-9.299198,4.567174,-7.869924,2.298253,7.351963,8.001892,0.611317,-1.070388,-7.557329,2.078953,4.150239,-5.510164,-8.292532,7.662257,4.785472,1.119985,-0.213901,-0.716029,-8.979305,-7.179926,4.712020,-8.836069,2.942625,-8.470803,-6.698461,-9.593498,-8.195491,-9.802222,6.609930,-4.197964,5.550328,-8.806293,-3.934296,-0.204687,-2.791575,4.784447,-2.442598,-6.307512,-7.351056,-8.654387,6.819961,-3.100738,3.362027,-1.578497,-5.462662,-3.224891,7.256986,7.923931,8.762074,-5.047910,-2.577878,7.196532,4.887015,1.476716,-6.517336,5.353094,-4.798282,-4.204052,-3.489232,-6.835135,5.189654,-7.782661,-6.099848,0.488342,-5.949171,7.039959,2.077015,5.019627,4.105118,-6.968527,-8.740697,3.890242,-1.489292,3.492459,-7.676896,6.703356,-7.281306,-6.575572,-1.863041,-7.407748,-0.371306,7.890725,1.103934,-4.079586,5.504906,-8.226167,-3.956971,-9.589524,2.261579,-9.092512,-7.578820,-8.067415,5.431281,8.276707,-8.275283,-2.345787,7.521844,-4.201690,8.451470,4.138368,2.965245,-1.209395,0.542833,-2.717403,-5.645600,1.026897,3.407503,1.012722,-4.961327,-8.347066,5.312901,7.614392,-2.618483,6.365382,5.464133,1.319364,-8.568415,-6.702130,-0.516589,4.238722,7.750995,0.030512,-9.159085,-5.297794,2.304531,7.854254,7.571569,-3.191692,-5.847922,1.805126,-4.136905,-3.032457,3.150607,9.287488,-8.213448,-5.788158,3.456069,-0.429878,3.112219,-6.009173,0.764767,5.921189,3.584588,-9.801758,1.029630,6.896815,-4.088853,-7.055966,-7.545658,-6.722693,-2.678753,1.873194,-0.490913,8.714920,-5.663485,3.229249,0.697413,-2.387696,-1.780628,-6.644248,5.619071,8.775818,-9.642402,8.690067,1.820529,3.286612,-5.896946,1.976125,-6.375310,-7.499672,8.134381,-1.839706,-9.406349,2.631896,5.165533,-2.632778,4.489588,0.787527,-6.824420,-0.490117,-0.652115,2.840654,-4.058065,2.421627,-7.137918,3.554714,7.496811,-2.056443,4.664784,-8.764480], dtype = "float64")#candidate|2517|(1352,)|const|float64
var_2518 = relay.var("var_2518", dtype = "float32", shape = (405,))#candidate|2518|(405,)|var|float32
const_2519 = relay.const([3,-5,-10,-2,1,4,-5,-3,-3,4,7,7,9,-5,5,6,-7,-7,-1,9,-6,-3,-7,-7,9,8,-3,2,-1,6,10,-6,-4,-4,-3,-6,6,-10,-8,-3,-8,1,-6,-5,1,-4,3,7,-2,-2,-4,4,8,2,10,-10,-6,2,-7,8,-10,10,2,-1,-8,1,-1,-3,8,-2,-1,-1,-7,-9,-1,2,-1,5,10,2,-8,10,-8,6,-8,-8,-3,4,-1,-4,-1,-4,-9,-8,6,6,10,3,1,-6,2,-8,1,6,-6,-6,9,9,-10,8,4,-10,-4,-4,4,5,-4,-10,-6,8,-9,9,4,-5,-5,-10,8,3,3,-6,9,-3,-4,-9,1,2,-4,5,1,4,-6,-4,2,-6,-7,2,-4,1,9,-10,-9,-8,5,3,-7,1,1,8,5,10,6,9,8,8,10,-8,10,4,-1,-3,-5,-2,2,-10,3,10,-4,9,-9,-9,-7,-9,-5,4,1,-6,2,3,-7,-2,4,8,-10,-10,-6,-7,-6,-9,9,-8,-3,-9,2,10,6,8,1,-8,4,10,-8,4,5,-4,-9,7,7,-6,9,-8,5,6,3,8,3,9,7,5,7,8,-4,-7,-2,-9,6,-5,3,-8,5,-6,-6,-8,-10,-6,-2,4,-1,6,1,-4,1,7,-9,8,3,-10,1,-5,-1,-10,7,-9,-3,2,8,-1,5,1,-5,6,5,8,-4,-8,3,-7,10,-1,-1,-4,-10,8,-5,7,-9,9,-9,-1], dtype = "int64")#candidate|2519|(288,)|const|int64
call_2516 = relay.TupleGetItem(func_2100_call(relay.reshape(const_2517.astype('float64'), [8, 13, 13]), relay.reshape(var_2518.astype('float32'), [405,]), relay.reshape(const_2519.astype('int64'), [8, 36]), relay.reshape(const_2508.astype('int32'), [2, 24]), ), 5)
call_2520 = relay.TupleGetItem(func_2105_call(relay.reshape(const_2517.astype('float64'), [8, 13, 13]), relay.reshape(var_2518.astype('float32'), [405,]), relay.reshape(const_2519.astype('int64'), [8, 36]), relay.reshape(const_2508.astype('int32'), [2, 24]), ), 5)
func_2100_call = mod.get_global_var('func_2100')
func_2105_call = mutated_mod.get_global_var('func_2105')
call_2523 = relay.TupleGetItem(func_2100_call(relay.reshape(const_2517.astype('float64'), [8, 13, 13]), relay.reshape(var_2518.astype('float32'), [405,]), relay.reshape(call_2516.astype('int64'), [8, 36]), relay.reshape(const_2508.astype('int32'), [2, 24]), ), 4)
call_2524 = relay.TupleGetItem(func_2105_call(relay.reshape(const_2517.astype('float64'), [8, 13, 13]), relay.reshape(var_2518.astype('float32'), [405,]), relay.reshape(call_2516.astype('int64'), [8, 36]), relay.reshape(const_2508.astype('int32'), [2, 24]), ), 4)
func_1095_call = mod.get_global_var('func_1095')
func_1099_call = mutated_mod.get_global_var('func_1099')
call_2531 = relay.TupleGetItem(func_1095_call(relay.reshape(var_2518.astype('float32'), [15, 9, 3]), relay.reshape(const_2519.astype('int64'), [288,]), relay.reshape(const_2508.astype('int32'), [48,]), ), 0)
call_2532 = relay.TupleGetItem(func_1099_call(relay.reshape(var_2518.astype('float32'), [15, 9, 3]), relay.reshape(const_2519.astype('int64'), [288,]), relay.reshape(const_2508.astype('int32'), [48,]), ), 0)
func_2100_call = mod.get_global_var('func_2100')
func_2105_call = mutated_mod.get_global_var('func_2105')
call_2533 = relay.TupleGetItem(func_2100_call(relay.reshape(const_2517.astype('float64'), [8, 13, 13]), relay.reshape(var_2518.astype('float32'), [405,]), relay.reshape(const_2519.astype('int64'), [8, 36]), relay.reshape(const_2508.astype('int32'), [2, 24]), ), 3)
call_2534 = relay.TupleGetItem(func_2105_call(relay.reshape(const_2517.astype('float64'), [8, 13, 13]), relay.reshape(var_2518.astype('float32'), [405,]), relay.reshape(const_2519.astype('int64'), [8, 36]), relay.reshape(const_2508.astype('int32'), [2, 24]), ), 3)
output = relay.Tuple([uop_2477,call_2487,const_2488,call_2493,call_2496,var_2497,call_2507,const_2508,const_2509,call_2516,const_2517,var_2518,const_2519,call_2523,call_2531,call_2533,])
output2 = relay.Tuple([uop_2477,call_2489,const_2488,call_2494,call_2498,var_2497,call_2510,const_2508,const_2509,call_2520,const_2517,var_2518,const_2519,call_2524,call_2532,call_2534,])
func_2535 = relay.Function([var_2476,var_2497,var_2518,], output)
mod['func_2535'] = func_2535
mod = relay.transform.InferType()(mod)
var_2536 = relay.var("var_2536", dtype = "float64", shape = (5, 1, 5))#candidate|2536|(5, 1, 5)|var|float64
var_2537 = relay.var("var_2537", dtype = "float32", shape = (6, 78))#candidate|2537|(6, 78)|var|float32
var_2538 = relay.var("var_2538", dtype = "float32", shape = (405,))#candidate|2538|(405,)|var|float32
output = func_2535(var_2536,var_2537,var_2538,)
func_2539 = relay.Function([var_2536,var_2537,var_2538,], output)
mutated_mod['func_2539'] = func_2539
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2588 = relay.var("var_2588", dtype = "uint32", shape = (15, 8, 7))#candidate|2588|(15, 8, 7)|var|uint32
var_2589 = relay.var("var_2589", dtype = "uint32", shape = (15, 8, 7))#candidate|2589|(15, 8, 7)|var|uint32
bop_2590 = relay.logical_xor(var_2588.astype('uint32'), relay.reshape(var_2589.astype('uint32'), relay.shape_of(var_2588))) # shape=(15, 8, 7)
output = relay.Tuple([bop_2590,])
output2 = relay.Tuple([bop_2590,])
func_2593 = relay.Function([var_2588,var_2589,], output)
mod['func_2593'] = func_2593
mod = relay.transform.InferType()(mod)
var_2594 = relay.var("var_2594", dtype = "uint32", shape = (15, 8, 7))#candidate|2594|(15, 8, 7)|var|uint32
var_2595 = relay.var("var_2595", dtype = "uint32", shape = (15, 8, 7))#candidate|2595|(15, 8, 7)|var|uint32
output = func_2593(var_2594,var_2595,)
func_2596 = relay.Function([var_2594,var_2595,], output)
mutated_mod['func_2596'] = func_2596
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2685 = relay.var("var_2685", dtype = "float32", shape = (4, 13, 9))#candidate|2685|(4, 13, 9)|var|float32
uop_2686 = relay.log10(var_2685.astype('float32')) # shape=(4, 13, 9)
output = uop_2686
output2 = uop_2686
func_2688 = relay.Function([var_2685,], output)
mod['func_2688'] = func_2688
mod = relay.transform.InferType()(mod)
var_2689 = relay.var("var_2689", dtype = "float32", shape = (4, 13, 9))#candidate|2689|(4, 13, 9)|var|float32
output = func_2688(var_2689)
func_2690 = relay.Function([var_2689], output)
mutated_mod['func_2690'] = func_2690
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2786 = relay.const(-6, dtype = "int32")#candidate|2786|()|const|int32
var_2787 = relay.var("var_2787", dtype = "int32", shape = (16, 7, 15))#candidate|2787|(16, 7, 15)|var|int32
bop_2788 = relay.subtract(const_2786.astype('int32'), var_2787.astype('int32')) # shape=(16, 7, 15)
const_2802 = relay.const([[[-1,-5,5,-5,8,-4,-8,3,-10,-9,6,-5,7,-8,7],[6,-2,6,6,2,3,-4,6,4,-4,-7,4,-7,-1,7],[-6,5,3,-5,-5,4,-2,2,8,6,-7,-10,-6,-2,-1],[-5,4,-5,5,8,7,-9,-2,9,-5,2,7,-4,1,9],[7,-1,8,-7,-5,3,1,-3,1,5,-4,-9,-10,-5,9],[5,10,6,-1,10,-10,-10,-5,5,4,1,6,-10,-4,-9],[10,8,1,9,9,-2,4,-9,4,4,-4,3,-6,-8,9]],[[-3,3,-9,5,10,9,2,-3,-2,-7,-2,-1,10,-9,8],[-6,-7,2,7,7,-3,7,-10,8,-5,10,5,4,1,-6],[1,1,4,5,-3,7,9,-1,6,2,-4,1,-6,-9,-8],[7,8,7,-3,3,5,10,-6,4,10,-5,10,8,-1,-2],[-3,-8,7,4,10,-6,7,-8,8,-7,9,7,-8,-5,1],[9,6,-6,5,-5,-7,-9,-8,9,10,-6,-8,8,7,6],[-9,-3,-2,-10,-1,9,5,-6,6,10,-9,-5,-1,-2,6]],[[-8,3,-2,4,-2,-6,-5,-9,-7,-6,1,5,-4,-10,-5],[-4,-1,-4,-2,4,3,4,-4,-1,-10,-6,-2,-8,7,3],[-4,3,-6,10,-7,-1,-6,-10,-8,9,-8,10,8,-8,-5],[5,10,5,-6,5,1,6,10,8,-7,-7,-6,6,-2,8],[-7,-7,2,-6,-8,4,4,-7,-3,4,3,-8,-6,-4,-1],[6,-5,9,-6,6,4,1,9,4,-4,4,10,8,-6,-4],[3,7,4,7,-10,4,-4,-4,5,-5,-8,8,-2,-4,9]],[[7,10,3,-1,6,3,7,-6,-10,-9,-2,5,5,-6,-6],[-8,8,9,4,2,-3,-1,-2,-1,8,9,-9,9,10,4],[2,-8,-10,4,1,5,10,-4,2,7,5,1,-10,9,-8],[5,5,-2,2,-8,-3,7,-8,8,-6,2,-2,-5,-3,-2],[7,3,-1,-6,3,8,-8,1,-5,6,7,3,10,4,4],[6,-3,3,6,-1,-5,6,3,9,-6,7,4,-5,-8,8],[6,3,-5,-5,8,-9,-6,-6,10,-7,2,-4,-6,9,-9]],[[-7,-4,-4,9,-7,7,1,9,-2,-5,-9,-5,-1,1,4],[-10,-3,-1,1,-10,10,4,-3,-1,4,-4,-2,4,-9,-7],[5,3,-2,-6,-6,-1,4,-10,-8,1,-6,3,-5,5,-3],[6,10,5,8,6,8,2,5,-8,-2,7,4,-8,-8,-3],[-7,-9,10,10,-7,-4,6,-6,8,3,3,-8,1,-5,10],[10,-7,-4,-4,9,-1,-4,-8,7,6,-6,2,-7,-1,-2],[10,-8,-10,8,-9,3,9,-6,-2,3,-6,7,4,-1,-8]],[[-5,4,9,-6,-7,-3,4,2,9,6,1,2,8,-4,10],[-1,-2,6,8,-8,6,9,-3,1,-4,3,-7,-5,-2,5],[3,-7,-2,6,-5,-6,4,-3,8,-9,3,10,-1,-6,-6],[-5,10,3,4,-1,-4,2,-4,-6,-10,-5,-9,4,9,-10],[-2,3,-6,-5,8,9,-3,-1,-9,9,2,-2,-6,8,8],[-10,5,-4,2,1,-5,3,5,-7,10,2,10,10,2,-1],[8,-3,-7,-5,-4,10,-9,7,8,6,10,10,6,5,-10]],[[10,-8,-10,-8,3,-1,3,-7,-4,6,2,10,5,-4,3],[9,-1,-6,1,7,-8,-8,-10,3,9,-4,7,-3,-7,5],[10,-5,10,-1,5,-6,8,-6,-8,-2,2,9,7,2,-8],[6,-8,6,-10,8,9,-10,9,-5,9,-5,1,-10,6,2],[8,10,9,-5,-7,6,-8,-10,6,-5,3,8,4,4,-10],[3,-6,-8,-1,4,8,3,-8,-5,8,-9,-10,7,-5,-7],[9,6,5,8,7,-5,2,10,-10,-6,5,-1,4,-10,-1]],[[5,8,-3,3,8,-5,-4,-10,-9,-9,1,10,-10,2,-3],[-8,-10,10,-7,7,5,-2,-9,3,-5,2,-8,-7,-9,10],[-1,2,3,5,7,9,1,2,4,-9,10,4,-4,-8,-2],[-6,-5,2,-10,-9,-10,10,-10,3,-10,4,4,9,10,2],[4,-5,-6,-8,-6,5,7,-7,-8,2,5,-7,5,8,3],[-9,7,9,-1,-10,-6,-4,10,2,4,-7,2,-7,-10,-4],[4,-4,-7,4,10,6,-9,-10,2,9,8,4,-10,6,-7]],[[-6,4,-1,1,-9,-1,8,5,-3,10,4,7,-7,-10,-10],[-1,-7,-4,-8,-8,-7,-3,-3,3,-7,7,10,-1,5,-9],[-10,9,7,-10,10,1,-8,-2,-5,4,-9,-5,-7,7,-8],[4,7,7,-9,-9,4,-8,-4,-1,7,-3,8,-5,-2,6],[-7,10,-6,-9,4,5,8,10,4,-3,7,-7,-1,10,5],[5,-6,7,4,10,4,5,9,-3,5,5,-1,-8,5,6],[-4,5,8,4,7,-9,9,2,7,2,1,-5,2,-5,-1]],[[-8,-5,-7,-4,-4,-6,4,5,5,1,-6,-7,-9,6,7],[-6,-4,-7,-4,3,3,-9,7,3,7,-1,10,-4,8,-2],[7,9,9,-4,8,8,-9,8,-2,7,-7,-2,8,-4,6],[-1,-4,-6,-8,-5,-8,-8,2,2,-9,5,9,10,5,-4],[-2,6,9,8,-10,6,7,-6,3,5,9,5,7,-5,-1],[-3,-8,-10,1,-6,2,1,-7,-6,-5,10,1,9,-3,2],[5,-7,-4,-10,5,-6,-8,-6,-3,7,3,9,-5,4,5]],[[3,3,5,-7,4,10,10,-8,5,9,9,-1,10,9,5],[-1,-5,10,-2,4,-10,-8,2,-9,5,-1,1,-3,2,-4],[7,7,10,4,4,-7,-2,-7,1,3,3,2,-8,5,-8],[-6,6,9,-9,-9,-2,-7,3,1,7,10,10,4,-9,-5],[-9,2,-4,-5,-5,-8,-3,1,9,10,8,8,3,5,4],[-9,-2,-2,1,3,-2,-4,8,-10,9,-4,1,-4,-7,-8],[-10,-6,7,1,3,-5,5,-9,5,9,-9,-1,-9,7,-6]],[[9,-2,-8,-10,7,3,8,3,10,-7,2,-3,6,-1,-10],[-10,3,-3,-10,-10,-6,-1,10,2,-2,8,-4,-8,-5,-5],[-4,-3,6,-9,-8,-5,1,-1,-2,10,3,-7,-1,7,-3],[-10,-9,7,-8,6,-3,-2,-9,-7,5,6,-7,5,9,5],[-6,1,7,-3,-4,3,-9,4,-8,-10,10,1,8,-7,-9],[9,7,-3,9,3,4,-1,-1,-3,-7,3,9,-7,1,-4],[-6,6,-6,-2,-4,8,-1,4,-7,-2,-10,-4,-1,5,-4]],[[-2,3,-8,8,4,4,-1,5,10,2,8,9,2,10,-1],[6,7,-3,10,4,5,-8,-5,-2,6,-9,8,4,-7,7],[3,5,-5,-6,10,-9,-7,3,-1,-9,1,-1,5,10,2],[-1,-3,6,5,-2,-9,1,-7,10,-1,7,6,-2,-5,-4],[-2,-3,-1,2,8,-2,3,5,-10,-10,-7,-1,-4,5,-7],[-6,3,-3,-6,-2,-7,3,10,1,-4,-10,-7,3,6,-1],[-6,2,-6,-8,8,-9,6,6,-10,5,10,-5,6,10,-8]],[[5,-10,5,-1,-2,-3,-7,-3,-5,2,8,-7,8,-3,-5],[1,-2,10,9,-10,-2,4,-4,-2,1,-10,5,2,-1,4],[-5,-8,8,-6,-1,9,-1,-3,-9,3,1,9,-1,9,-5],[7,-10,8,-7,4,-3,9,6,-9,9,5,7,5,-4,-1],[-9,-10,7,6,4,-10,-5,-1,3,7,3,-1,5,-2,10],[1,-4,-8,-1,-3,-6,-10,-3,1,-10,-7,10,7,4,8],[3,-3,10,-7,8,4,4,3,4,3,-4,-10,6,2,7]],[[4,-9,8,-2,10,7,-2,-7,-6,10,-6,-10,1,-4,-8],[4,2,2,-3,-6,-2,7,4,2,-5,-1,-9,7,-9,-4],[1,-10,1,6,-6,-7,5,-4,-7,1,9,5,3,7,-3],[10,6,1,-3,3,9,-8,5,-7,8,-4,-10,-4,-1,6],[1,9,5,7,5,7,-2,-2,7,-9,7,-4,2,-9,-1],[8,2,-1,5,7,10,8,9,8,9,-2,1,-3,-6,-8],[9,10,3,-8,-1,-2,7,2,-10,-1,-6,-5,-9,-1,-1]],[[1,-7,1,4,10,-4,-4,-10,8,-7,-1,2,-9,4,-5],[9,7,10,-5,7,8,8,4,-8,-10,-1,-7,6,-3,6],[-9,7,2,-6,-10,4,6,-1,10,1,4,8,5,7,-6],[10,-9,-1,-4,10,10,3,-4,6,-4,1,-9,1,-4,-3],[-3,-8,-2,5,-8,2,-9,-5,1,-6,-8,-5,7,-2,4],[3,-8,2,-10,6,2,-5,4,3,-1,2,-5,6,-3,-4],[4,6,10,2,5,-9,7,-7,6,-6,-10,-6,-7,8,1]]], dtype = "int32")#candidate|2802|(16, 7, 15)|const|int32
bop_2803 = relay.logical_or(var_2787.astype('bool'), relay.reshape(const_2802.astype('bool'), relay.shape_of(var_2787))) # shape=(16, 7, 15)
func_2100_call = mod.get_global_var('func_2100')
func_2105_call = mutated_mod.get_global_var('func_2105')
const_2812 = relay.const([-8.593429,-3.559283,-2.932812,-8.782207,-8.004662,-9.778900,-8.372338,-8.412038,-9.135335,-7.819623,4.499215,1.177160,6.756190,4.898923,6.207394,-5.979207,8.003229,0.778591,6.141096,5.547692,2.403589,4.217413,2.563468,2.610721,-3.032062,-3.893317,2.195697,-9.932753,-8.210576,-0.851913,-3.767226,3.639928,1.073252,8.962568,-4.045036,-7.111927,-6.700945,7.195186,-4.175052,-9.813751,-7.130927,-7.894803,-2.677607,-3.319929,-4.919914,-5.945182,4.000949,9.419742,3.878664,1.794820,2.273257,0.094668,5.032594,6.874042,9.679213,-7.922900,8.614827,-6.648555,8.083089,-5.726358,7.578259,3.734471,-0.369397,5.063955,7.149765,-7.031296,4.782668,7.008383,-1.242515,-0.529947,-8.767668,-6.718106,3.226577,8.628015,8.163991,-3.153335,7.150951,-3.639795,-1.655972,3.952481,-5.904308,-2.897804,8.087781,9.840627,5.826043,-1.696009,-9.056875,8.680371,7.190278,9.471563,-6.390744,6.701099,1.248822,3.483467,3.394966,7.086654,-3.988911,0.533081,6.370944,-1.104324,-9.263507,-6.822239,4.259549,-9.557184,0.279627,6.066958,-3.507892,3.608538,-8.617610,5.974103,4.881133,-2.271910,7.582219,7.626839,-3.748982,0.902050,-5.257108,2.328096,9.538849,-4.309877,5.877426,-2.955571,-0.020424,1.296027,-2.926254,7.517467,-1.204985,-6.198757,9.693605,-7.700548,4.485648,5.542502,-9.429816,5.045892,-6.385689,-2.104826,1.012749,3.201548,-1.569619,9.462624,-7.283877,-3.303208,-1.811761,-2.284002,-5.693724,3.463737,-3.926405,-7.819221,0.122491,-1.437462,2.819873,-6.433944,2.973764,1.763899,-1.442124,-3.413309,7.481296,0.075513,7.660610,4.499685,2.348079,0.074224,4.591617,-8.363495,3.274903,4.263982,0.551764,-3.764216,2.726271,-4.813587,-5.750747,-0.610482,0.536914,9.113520,1.866002,-1.836968,9.537092,-7.882856,8.192882,2.870360,4.226155,-7.178256,-5.468082,1.300966,-3.983653,-9.066467,3.044706,-8.165838,-4.234141,4.329398,-3.141678,-4.094031,-7.510710,0.749163,3.066808,-9.201946,5.545516,3.332531,5.187698,7.883421,-5.221744,-1.875294,8.758334,-6.715654,-7.851922,1.297094,-3.316053,-5.778231,9.063368,-1.466841,7.700902,9.142244,4.997899,-9.946289,-7.532236,-8.938847,3.061861,-1.014359,8.469139,2.076396,-4.190472,6.885278,-7.240038,1.165919,6.308546,7.748731,7.314635,1.825249,8.608439,9.755279,4.686206,4.535928,2.000036,0.574504,-9.319779,-4.074185,-9.620951,9.351684,-5.542573,-9.242810,4.353698,-5.660986,-9.835852,1.226344,1.654761,8.771996,9.201583,-4.192982,-5.954241,7.842089,-5.083925,-7.306693,3.797044,5.981924,-1.288399,5.611244,2.748753,-7.371726,2.703473,-1.601839,3.237121,-2.095518,-2.638097,8.921540,-9.356455,8.163518,-0.421160,6.335802,-2.828878,1.870163,-5.389445,-5.243194,-8.937968,-9.109523,-2.822232,9.756654,-4.654670,-8.934297,-0.032173,-6.242417,8.827247,0.139370,3.846772,3.614298,9.956897,-1.066217,-2.499651,-7.624479,-2.716718,-1.623824,2.641788,-6.291082,9.164968,-7.252088,-4.291725,9.917210,-0.841897,9.759758,5.554824,2.024896,-7.587216,1.795002,-3.293123,1.676396,-6.713470,-0.766991,5.044497,0.318869,7.677821,-6.619139,-2.323416,4.997516,-8.807257,-4.231918,-7.704731,1.564428,-2.626881,9.998032,-0.612527,0.609670,-9.277518,-2.277427,-2.632713,5.518846,9.443970,5.370131,0.210922,-3.061741,8.710322,3.949943,3.361031,-2.164059,1.042614,-3.716957,2.420996,-9.128631,4.397303,6.001109,6.916282,-8.593086,4.705719,-7.325215,-7.585752,-9.306730,-0.769653,0.508214,-9.866268,7.674306,0.441892,9.859260,4.921098,7.169203,-8.938187,-5.543121,4.334233,-9.107822,-2.455724,4.084624,-5.546284,-6.761587,2.237198,-9.300191,-3.786672,-1.050578,2.375915,-6.797642,2.892314,-1.122144,-1.521891,6.865593,6.354387,-1.359152,9.635085,-1.659523,-5.869463,-8.939378,9.243838,2.258028,-8.932815,9.006870,-4.668258,-8.624541,6.094396,6.355214,3.607107,9.025089,3.391756,-3.625155,7.299856,-8.949001,8.513704,-4.190122,4.179267,-8.416084,7.826227,6.629852,5.533668,6.280761,-5.810173,3.863136,-8.883899,-1.770348,-5.795520,-4.013192,-7.157363,0.502154,1.817029,-9.238960,-0.620044,-8.094855,-3.533446,1.733620,0.387209,9.267396,9.014461,6.465366,0.379066,5.792513,-2.201693,-2.297289,-6.250451,-1.037707,2.536240,-3.082148,-0.298412,8.039951,9.350991,-3.322243,1.194906,-2.194454,-9.474492,-2.668001,-6.804220,-0.285733,1.491168,5.631264,-6.384603,4.515487,-4.368263,5.689932,-8.151991,1.497647,5.592825,-2.373439,4.125679,-8.463474,-7.042665,-7.666854,-3.696914,4.777378,4.911888,-0.174749,3.203144,4.322303,3.445063,-3.469287,1.178656,2.502352,7.696659,1.745507,1.783065,5.146766,7.702580,-6.664752,-3.126895,3.070927,-4.029971,4.852580,-8.550647,7.512286,-1.179868,7.161764,3.154951,-5.523244,2.550154,-2.820026,4.103585,-4.968403,5.454307,8.281815,0.778029,0.489244,-3.655224,5.658961,5.853406,-1.394961,-6.272399,1.713210,0.098379,-2.760079,0.587126,4.479473,-9.920439,9.861501,-6.093923,3.810720,-7.461063,3.902718,-0.857930,1.771879,3.237274,7.031820,9.848489,6.987842,-8.983196,9.097670,-1.150991,1.177940,7.069189,-8.543089,4.779836,2.098255,-8.097367,-8.767945,5.528090,-6.962311,2.288085,-0.802906,-0.753693,9.725306,4.117022,5.082877,8.155922,0.257349,1.362166,-3.149633,1.333933,-2.147539,-7.001533,-2.920472,-4.168045,-5.102729,-5.077533,1.523008,2.314416,-1.642201,4.254007,-1.340321,-8.352719,0.395709,-5.441340,-0.960197,4.765294,4.788844,2.173856,0.727452,4.839275,3.321978,-2.102361,-0.103721,-0.183690,9.040767,-1.602838,-2.214220,8.554327,4.047777,-5.334610,0.608545,-8.114031,9.733021,8.199568,-0.268496,2.306170,-9.285313,-2.856746,7.483910,6.183783,-7.476084,-3.163231,-4.095332,4.967702,8.105559,0.497725,9.606247,-3.821259,6.928053,-4.563776,-5.945344,-2.580551,1.162517,6.821872,2.442889,2.107652,1.197292,-1.309321,1.564200,9.567935,7.056264,-8.754505,-8.514788,-0.545321,-2.029918,4.900929,-7.130190,8.706719,-1.881126,-0.042907,-0.190575,-2.296066,6.475771,0.707589,-1.529682,-7.312037,-7.786060,-9.346034,3.464496,-4.350230,2.177914,-7.694190,5.495595,-0.825300,-7.400134,5.576630,-6.657686,-4.676568,3.532558,9.385393,-8.169231,5.424622,-0.411126,-1.298495,-3.934365,7.344036,-4.472992,5.706194,8.532534,-5.168506,-2.904959,-9.791860,1.039117,8.634890,6.959440,-4.539371,-4.987723,-4.007544,5.205314,-7.970403,5.472958,-5.836719,1.920970,-1.884469,9.030829,-4.389709,-6.800879,-5.392751,-8.250087,-1.835809,-0.067840,1.287697,9.417394,3.921798,-0.251984,-7.599390,9.606282,-0.218864,0.821088,-8.968090,0.679148,-9.287121,2.023493,8.006875,-3.505364,3.663025,-2.251839,1.563262,-0.001931,-7.317702,-8.534620,1.370855,8.923374,-9.050256,-2.715679,2.564211,-6.075253,3.686968,5.859584,8.270326,3.224860,-1.607685,4.561142,6.616559,3.223643,6.178234,-3.047314,7.259396,-8.004764,-3.416956,-0.667584,-8.265437,-4.206456,2.125811,-5.512949,0.797873,9.276909,9.433565,-4.767420,0.055464,-2.128312,3.096663,4.052863,4.665310,0.204361,-7.219540,6.937736,-2.668836,-2.057690,2.546823,-9.081288,-9.875465,0.207341,-1.484935,-6.455195,7.351852,-7.934858,-9.450632,7.639543,4.700386,2.060733,6.962794,-1.491059,-5.993432,5.867626,8.824728,1.211179,3.033898,5.402982,-7.556665,4.369376,9.842765,-3.227678,4.447884,2.473935,-4.115699,-9.293269,5.028213,5.820705,-6.644558,-4.761839,-9.577337,9.848299,-3.461756,-2.443293,6.748061,-4.943580,3.416883,-8.587523,-0.287823,-1.691383,-4.610646,-2.236987,5.072472,-6.309368,-3.468035,-8.087583,-1.157153,2.746719,-6.120446,7.146264,0.297988,-6.441616,-0.277365,-6.892914,-2.138049,-0.328371,0.481736,3.418137,-3.738290,-0.097254,-4.031224,-2.839041,1.523119,2.261409,8.200221,2.797281,-6.364052,1.804311,-4.724852,0.583381,-3.252480,0.518368,3.628642,8.427149,-4.842990,-0.084947,-9.738607,0.245580,-8.431798,1.360956,1.044558,8.911714,3.514769,5.996419,-1.658133,-3.042207,-7.930264,-6.369000,-0.475376,0.194197,-9.805406,9.083366,-0.149014,-0.739077,7.180538,-2.675947,-6.105304,-2.536614,7.598378,3.948310,8.923653,-0.886370,9.920739,8.311472,-0.411806,7.288099,-5.187186,2.968290,4.558454,-2.095727,-4.943996,-6.541009,-8.565493,-1.236555,-8.177770,1.114954,5.163606,8.690929,-1.238866,5.662960,6.625135,3.752808,0.370291,3.430374,-6.547633,-8.562802,-3.435428,2.334152,2.292322,-2.259938,3.030361,7.089898,-2.785044,-2.457437,7.311922,7.213145,-9.590474,1.981182,-7.286141,-9.966813,-5.923841,6.540844,5.988946,5.936466,-9.363167,-9.878831,8.032692,-5.312151,-0.703122,-9.254570,-9.890307,9.676637,6.441086,9.355229,8.030714,-2.216935,-2.913076,-1.472552,0.754153,-9.997399,-3.776234,3.237763,6.530163,0.597160,-3.618750,9.332357,6.321161,3.794821,9.441862,-7.044723,6.867910,-5.452410,-5.663047,4.445844,-4.676225,1.981213,3.837968,-3.771661,3.753793,-0.154637,-5.531759,-0.987903,-2.160638,-2.864399,-6.523064,-2.560614,6.438095,1.321063,-4.779083,9.495127,4.663651,9.284877,-4.222935,5.717622,3.496161,8.173979,8.932894,3.980363,-2.237477,-3.752039,3.072039,-0.038582,7.921935,-7.627667,-4.345865,5.900073,6.835316,-0.536906,-0.075367,9.725220,-3.555657,1.416843,-0.905090,1.692139,-3.070723,-0.982342,3.553578,7.369460,-9.521557,-6.084669,6.006491,-1.979404,-6.564281,-0.859244,-0.801002,-5.514363,1.040077,8.968181,-6.362647,-5.927739,-7.376771,-5.089386,9.946368,-4.062388,-8.830505,-2.765926,-7.910823,-5.683965,-6.533484,-5.433547,-3.032350,7.747697,-8.193805,4.390292,1.632629,-7.753152,-4.624362,4.928109,-5.798664,-6.195743,-6.597075,-9.133027,9.251050,8.314918,-3.880438,0.703132,-8.171944,-6.479361,5.136814,-1.824820,2.941761,-2.261355,5.351938,7.530094,9.363499,-2.935102,-4.151996,3.004077,5.771497,6.694867,-3.567532,-0.441870,3.792925,1.396057,3.770504,-6.180239,-6.183624,-7.491267,-0.866182,6.014037,7.220889,-4.759489,4.027944,-4.448603,-0.686105,-5.036149,-4.189846,-7.572669,0.547944,-6.461140,8.813244,2.903009,1.553571,7.240397,5.453418,7.470096,6.931138,-7.548124,9.898639,8.898271,9.459364,-0.108153,6.764837,3.788772,1.418639,6.620148,-7.365500,-7.492459,-6.792466,-1.439481,3.688483,5.786277,0.979080,4.114269,-9.981326,-4.358029,-3.236415,3.316207,7.231556,-9.740929,-5.276306,6.771690,-0.412347,-1.956470,-6.017876,-0.474779,-7.398467,-5.128041,9.814659,1.290036,-0.925985,5.707839,-4.585128,-7.288650,-0.270349,-4.382723,-1.904316,0.539543,-9.423850,-7.927163,-9.260492,-1.989448,-1.397242,-1.688516,-9.053996,9.938222,-0.414489,9.141364,4.256517,-0.990608,-8.270969,-8.655669,4.731161,0.932277,6.804374,-9.191897,-6.302958,-7.458575,2.595179,-4.302644,-2.036644,-9.588046,1.234126,-3.354275,-0.092032,-3.867250,0.240074,5.050598,-7.043690,-8.948476,-2.666847,-7.785165,2.000941,1.744226,4.241292,-3.810356,2.434658,-5.996556,-4.516734,8.506655,-6.235086,5.721792,-3.897859,-4.809867,9.994660,-8.114697,3.301340,-3.272627,-4.384767,5.521796,-0.092139,3.248132,-0.353336,-0.603133,-4.217157,0.006876,5.534805,1.560324,-2.717965,-7.518736,-6.050916,8.420193,7.951832,3.333307,-3.255603,-7.113700,-7.466365,-0.044023,5.663635,-1.841135,4.192696,-8.318099,-6.147039,-4.359230,2.172927,9.978247,-7.626416,9.990380,-3.005675,8.552423,8.422457,8.011989,1.743112,8.259432,-6.944474,0.350018,6.123082,-6.244094,6.208168,-3.580585,-9.493249,-2.407224,6.824874,-0.805818,-6.723328,-3.967959,2.505247,-2.152984,3.663845,-9.810607,4.326613,3.229729,5.614729,-2.083944,5.030335,-8.553282,-5.599377,-6.618443,-3.954211,-6.015776,-7.988414,5.343981,-7.921931,-6.015982,1.124696,-6.150181,-2.981972,8.739482,5.835115,-4.289167,2.512599,-0.556276,-1.463621,4.258973,-2.646686,2.773236,-4.936271,-2.147773,-0.163521,-9.016944,5.092352,-0.177841,9.384016,-1.638784,-6.152208,7.305266,8.662668,1.507834,-8.335486,-2.689313,-8.771652,2.068548,-8.880155,-5.590703,-3.907005,-9.164976,6.896712,-6.514042,6.944746,9.338769,8.722563,0.323181,2.088919,-5.397162,3.159877,-2.498865,1.698565,-6.583326,2.322340,-1.256087,9.818489,-3.653334,-1.325663,7.209238,8.807042,9.668719,7.223689,9.565068,3.607812,-8.211652,-0.620744,2.423575,-8.565793,-5.531653,-7.704838,-0.133344,9.644510,-4.063966,1.537075,1.212883,-8.866607,5.773875,2.605150,-0.766577,5.897108,8.501842,7.732063,6.367465,-6.185377,-3.759909,-0.418396,9.000760,3.852137,9.610924,7.489036,9.952719,6.988223,-2.238430,9.467096,-1.968377,1.759152,-6.736118,-0.373120,0.276824,8.948507,4.072032,-5.445971,-8.986845,-8.558543,-9.735398,-2.730787,9.867824,-2.389153,6.155094,8.227080,-1.661823,2.150485,7.279488,-4.296409,7.918927,-1.979388,-2.154124,6.111937,-2.243856,-7.146542,2.143804,-4.887970,4.634042,-4.860340,-2.010581,-3.415248,3.675232,-4.110147,3.172268,3.343818,-2.565678,2.801964,-1.577572,4.163517,-2.829393,3.709009,9.796200,-5.131422,-9.674592,9.979204,-8.546948,-5.297775,8.215378,7.764238,7.183776,5.143391,-9.784409,-8.409453,1.962384,-5.178555,-9.096115,-8.193793,2.787414,-8.971997,3.571246,5.449384,6.755196,3.179797,-7.226335,3.171483,3.700483,8.253727,8.444305,-4.109848,-1.170060,-8.122409,-4.880575,-9.156654,6.714533,-1.474806,-9.652233,2.815210,5.516701,-3.456300,8.743399,0.337477,3.394090,-6.034068,9.162897,8.245811,8.359707,-8.780623,-7.782225,-4.958573,5.085464,4.942873,-2.413913,2.627825,3.688325,4.296752,9.488556,-2.558396,5.074776,9.396837,9.457728,-5.812489,-6.344469,0.591290,9.191624], dtype = "float64")#candidate|2812|(1352,)|const|float64
var_2813 = relay.var("var_2813", dtype = "float32", shape = (405,))#candidate|2813|(405,)|var|float32
var_2814 = relay.var("var_2814", dtype = "int64", shape = (288,))#candidate|2814|(288,)|var|int64
var_2815 = relay.var("var_2815", dtype = "int32", shape = (2, 24))#candidate|2815|(2, 24)|var|int32
call_2811 = relay.TupleGetItem(func_2100_call(relay.reshape(const_2812.astype('float64'), [8, 13, 13]), relay.reshape(var_2813.astype('float32'), [405,]), relay.reshape(var_2814.astype('int64'), [8, 36]), relay.reshape(var_2815.astype('int32'), [2, 24]), ), 3)
call_2816 = relay.TupleGetItem(func_2105_call(relay.reshape(const_2812.astype('float64'), [8, 13, 13]), relay.reshape(var_2813.astype('float32'), [405,]), relay.reshape(var_2814.astype('int64'), [8, 36]), relay.reshape(var_2815.astype('int32'), [2, 24]), ), 3)
output = relay.Tuple([bop_2788,bop_2803,call_2811,const_2812,var_2813,var_2814,var_2815,])
output2 = relay.Tuple([bop_2788,bop_2803,call_2816,const_2812,var_2813,var_2814,var_2815,])
func_2831 = relay.Function([var_2787,var_2813,var_2814,var_2815,], output)
mod['func_2831'] = func_2831
mod = relay.transform.InferType()(mod)
mutated_mod['func_2831'] = func_2831
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2831_call = mutated_mod.get_global_var('func_2831')
var_2833 = relay.var("var_2833", dtype = "int32", shape = (16, 7, 15))#candidate|2833|(16, 7, 15)|var|int32
var_2834 = relay.var("var_2834", dtype = "float32", shape = (405,))#candidate|2834|(405,)|var|float32
var_2835 = relay.var("var_2835", dtype = "int64", shape = (288,))#candidate|2835|(288,)|var|int64
var_2836 = relay.var("var_2836", dtype = "int32", shape = (2, 24))#candidate|2836|(2, 24)|var|int32
call_2832 = func_2831_call(var_2833,var_2834,var_2835,var_2836,)
output = call_2832
func_2837 = relay.Function([var_2833,var_2834,var_2835,var_2836,], output)
mutated_mod['func_2837'] = func_2837
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3664 = relay.const([[[-10,10,-7,-2,-1,9,9,4,4,10,-8,-5,-2,-9],[-2,2,9,-1,3,5,-10,-5,-2,6,2,5,10,10],[-4,10,-9,-8,-2,-7,4,-6,-6,5,1,-7,7,5],[-3,1,2,-3,-2,9,2,1,-10,4,8,-6,-1,2],[-5,5,-1,-5,-10,6,-3,-7,3,-3,-5,-10,6,-3],[-9,5,3,-3,-10,9,-9,1,-2,-9,4,-9,-10,-3],[-5,3,1,-9,2,1,10,-2,-7,-3,1,5,3,-6],[4,-7,-6,-2,-10,3,3,-4,4,-4,-8,9,6,-5],[-9,-1,-10,2,1,-5,7,5,-2,4,6,8,-4,3],[2,-10,9,-3,-2,-7,3,5,3,-1,-10,2,3,-10],[-6,9,-1,8,10,10,-10,-6,2,4,-3,10,-10,-9],[-2,-9,2,-6,-7,-2,10,1,-9,-5,-8,4,-4,5],[7,-8,-5,-7,5,9,-10,10,-2,-1,6,2,5,-5],[2,-4,4,-8,-8,-5,8,4,-4,1,-5,-7,-8,-7],[8,-3,-2,9,-10,-4,-4,1,4,2,-2,-3,5,8],[-2,-8,4,1,10,-1,-9,-7,5,-6,5,-6,3,2]],[[1,3,4,4,-1,-6,-6,-9,6,-9,6,-2,5,8],[9,-6,-9,-6,8,-4,4,2,-9,-7,1,-7,-3,-7],[-7,6,4,-6,1,-7,1,-2,3,9,8,-8,3,-5],[-2,-3,-7,5,-3,6,3,4,7,3,1,4,7,8],[7,6,-8,-8,-10,-8,-6,-6,8,-6,-8,-6,10,-10],[-2,-7,-4,8,-2,8,-1,-4,1,-7,9,-5,-10,-6],[1,-7,4,1,7,-1,8,-2,8,-8,-3,9,6,-9],[-6,-9,10,-9,-2,-4,2,1,-5,-8,6,-1,1,-10],[-3,-5,3,6,-2,8,9,-4,-7,10,-7,-4,-6,-3],[-4,-4,-2,-8,1,-10,10,8,2,-10,-6,-1,-1,-7],[2,4,2,5,-4,-3,-6,9,-3,-7,8,3,10,-8],[-3,-7,-4,-10,-8,-2,-7,-7,-8,-1,3,7,5,-7],[6,-5,-2,-3,-5,5,-8,-4,-4,8,-9,-4,-6,6],[-2,8,10,-6,-8,-1,2,6,4,6,3,1,-2,-8],[7,2,9,-7,5,-1,2,8,7,7,6,-9,-7,4],[-5,-10,8,-2,-3,-6,-2,-3,-1,10,7,-9,-1,5]],[[-9,9,-1,8,2,8,9,-6,-3,5,2,-9,-5,3],[9,5,-6,5,3,9,-5,3,-1,5,7,-7,7,7],[6,-7,-7,4,7,3,3,7,10,-2,-10,6,-4,6],[1,-3,-5,-10,5,10,-3,1,-6,4,2,-1,-10,10],[2,-7,-1,-7,-3,3,-3,9,5,-2,2,-8,-9,-7],[-8,4,6,2,-2,-6,-8,-2,-9,6,10,-4,1,7],[3,-10,-2,2,4,5,-2,2,9,2,-4,1,-6,6],[-9,9,8,4,4,8,-1,-3,-4,-5,-8,1,5,5],[9,1,6,-3,-1,-4,4,-2,-3,-7,1,-9,9,2],[6,-3,1,-6,-6,-3,7,-2,7,5,1,8,6,-3],[-1,-6,2,-1,-7,-2,-5,10,10,2,-7,1,3,-10],[-1,3,-5,9,10,10,7,10,7,-6,3,-6,7,8],[9,8,-2,9,1,7,-10,-1,-1,10,3,4,-4,-8],[-10,-10,6,-6,-10,-8,-7,-4,-1,3,-8,-9,9,-8],[-4,5,-5,-2,4,9,-6,-8,-1,-7,7,-4,3,5],[9,-6,-2,-8,7,-5,-9,-6,3,-8,-6,7,-5,10]]], dtype = "uint8")#candidate|3664|(3, 16, 14)|const|uint8
var_3665 = relay.var("var_3665", dtype = "uint8", shape = (3, 16, 14))#candidate|3665|(3, 16, 14)|var|uint8
bop_3666 = relay.left_shift(const_3664.astype('uint8'), relay.reshape(var_3665.astype('uint8'), relay.shape_of(const_3664))) # shape=(3, 16, 14)
output = relay.Tuple([bop_3666,])
output2 = relay.Tuple([bop_3666,])
func_3669 = relay.Function([var_3665,], output)
mod['func_3669'] = func_3669
mod = relay.transform.InferType()(mod)
mutated_mod['func_3669'] = func_3669
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3670 = relay.var("var_3670", dtype = "uint8", shape = (3, 16, 14))#candidate|3670|(3, 16, 14)|var|uint8
func_3669_call = mutated_mod.get_global_var('func_3669')
call_3671 = func_3669_call(var_3670)
output = call_3671
func_3672 = relay.Function([var_3670], output)
mutated_mod['func_3672'] = func_3672
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3683 = relay.var("var_3683", dtype = "float32", shape = (10, 9, 1))#candidate|3683|(10, 9, 1)|var|float32
uop_3684 = relay.asinh(var_3683.astype('float32')) # shape=(10, 9, 1)
output = uop_3684
output2 = uop_3684
func_3694 = relay.Function([var_3683,], output)
mod['func_3694'] = func_3694
mod = relay.transform.InferType()(mod)
mutated_mod['func_3694'] = func_3694
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3695 = relay.var("var_3695", dtype = "float32", shape = (10, 9, 1))#candidate|3695|(10, 9, 1)|var|float32
func_3694_call = mutated_mod.get_global_var('func_3694')
call_3696 = func_3694_call(var_3695)
output = call_3696
func_3697 = relay.Function([var_3695], output)
mutated_mod['func_3697'] = func_3697
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3870 = relay.const([[[-2.040018,4.053901,8.878228,-0.626109,-3.006808,-2.011621,2.494992,7.241910,5.441446,1.368151,1.779015,-6.265358,3.777037,0.025785,0.918210,4.007799],[7.281131,0.948467,0.250600,5.262757,-5.935603,1.810903,-9.146866,-5.875871,0.808427,4.998489,8.319943,3.447280,-6.177427,-7.438181,-6.897618,4.442636],[1.642145,-8.251042,-8.767443,-8.821667,3.990057,0.082912,1.748819,9.332322,0.085534,2.332294,3.300850,-2.916705,0.596720,7.165301,-7.830879,2.477424],[0.240238,-9.246722,-9.349113,-4.584230,-3.263194,0.452024,8.143748,9.792783,2.724466,0.907872,7.711757,-0.772981,0.127315,-1.598816,-5.448330,8.124831],[5.899588,-8.116391,-6.837579,-5.470777,-4.958672,-7.771146,-9.489094,-4.246463,-1.304274,-0.519258,1.736358,3.792315,-7.590038,-5.314034,4.683134,1.090449],[-0.805859,-8.815179,-6.321477,8.437081,-1.319042,7.664543,1.642971,-1.430873,0.845617,-9.982472,2.184348,9.853585,3.290904,6.761707,0.859823,-5.031197],[-6.220355,4.748924,4.332067,2.457686,-4.426653,-7.566068,-0.729356,-1.529845,-5.601523,5.588329,-8.484785,7.266243,-8.654293,-4.074369,8.083160,3.319440],[-1.253679,5.934249,-0.152377,6.788815,7.434110,-2.381729,1.425325,1.439033,1.350511,6.715283,-6.374906,-4.765360,1.508234,-0.012939,2.220616,-7.738228],[-7.781639,8.757860,-9.766050,-9.580448,-4.860933,-0.960556,4.953480,9.309861,-1.257411,-0.753338,-8.222622,9.855626,6.610081,-3.926377,-3.614235,-3.560047],[-8.675903,7.595453,4.687706,-8.159905,-9.814004,0.612759,0.471749,0.553996,6.622905,-9.700048,-3.819651,-6.627405,9.456821,-0.484188,4.955607,8.416360],[-3.748655,4.375784,-8.882075,0.422876,-2.338427,-3.822220,-8.476190,1.644204,1.032695,0.718056,8.288532,1.915397,-5.689832,-4.154064,6.744800,-6.026087],[-8.799693,2.137595,7.931936,-3.197024,4.070203,2.963695,-7.813916,6.707235,-6.859294,7.037870,-6.739999,3.948482,-9.940878,4.026766,4.758096,2.522350],[8.120693,-5.048535,8.513414,-9.361104,6.085848,-6.686151,-1.055195,0.778358,-3.163127,-8.012668,4.993051,-9.273233,-1.706320,2.619766,0.975258,4.551629],[5.634583,3.602302,-4.518550,4.571586,-0.529548,5.700446,-6.489722,3.589336,7.114260,7.095656,2.090102,-8.203917,2.063066,9.652736,-3.004137,5.969959],[-1.797960,7.591568,-2.791742,-4.283576,-2.523170,5.142521,-0.395161,-4.580649,1.212119,8.127349,6.687174,-3.772709,6.570216,6.840787,-8.997553,-3.439657],[6.657935,-1.657191,-0.614076,-8.080715,-9.096269,1.016651,1.683807,9.466092,-5.398315,5.986231,-6.017742,-4.163633,-8.615981,-8.883296,7.049932,0.004855]]], dtype = "float32")#candidate|3870|(1, 16, 16)|const|float32
uop_3871 = relay.acos(const_3870.astype('float32')) # shape=(1, 16, 16)
func_2415_call = mod.get_global_var('func_2415')
func_2419_call = mutated_mod.get_global_var('func_2419')
var_3883 = relay.var("var_3883", dtype = "float32", shape = (700,))#candidate|3883|(700,)|var|float32
call_3882 = relay.TupleGetItem(func_2415_call(relay.reshape(var_3883.astype('float32'), [5, 10, 14]), relay.reshape(var_3883.astype('float32'), [5, 10, 14]), ), 0)
call_3884 = relay.TupleGetItem(func_2419_call(relay.reshape(var_3883.astype('float32'), [5, 10, 14]), relay.reshape(var_3883.astype('float32'), [5, 10, 14]), ), 0)
func_2100_call = mod.get_global_var('func_2100')
func_2105_call = mutated_mod.get_global_var('func_2105')
const_3896 = relay.const([[-2.963534,4.004029,3.345841,-4.009179,-0.493991,-9.371616,7.957984,-7.047362,-4.187170,-7.943129,5.353846,-4.362901,-4.413677,-9.014933,4.366398,-4.880765,-8.895061,-9.236309,-6.709062,0.738743,-9.673830,0.212670,-3.217267,-2.410752,9.765739,9.543967,-1.775598,7.406470,7.391387,0.233316,1.913274,5.302528,5.942672,9.995882,-9.257482,-4.113660,-8.910369,-1.668932,-9.467291,2.781785,3.374465,-5.847247,-0.742243,6.714447,-0.771439,-0.276660,-3.239660,9.727780,-9.717060,0.348972,5.698173,1.723456],[3.838471,-2.175458,-5.233746,3.888604,-0.013927,1.371118,1.736543,-7.037529,1.138885,9.709286,-9.918148,-9.528303,6.876388,-3.545448,6.442760,-4.992920,9.861695,-7.881823,-9.709612,-9.033193,-7.379677,-1.799673,-5.139970,1.200035,1.547443,7.994507,9.651658,-0.236074,9.439006,8.249499,-8.253964,8.534121,-1.685627,-9.510792,-8.137860,5.861367,-0.487603,-4.666309,-5.754668,9.251183,4.350776,-3.746718,-5.277860,3.705155,4.828167,-9.540720,5.315660,3.893837,-6.667810,-5.992413,-8.976395,1.770251],[6.146364,2.031913,4.257902,-2.570139,5.486354,4.553906,9.687484,5.066684,0.049839,2.731503,-6.483218,-4.625941,-3.569399,4.116615,-2.017936,1.510160,-8.752275,5.597252,9.790046,-5.476737,-0.357713,-2.321472,2.251468,-5.645976,-9.451153,8.831978,7.056865,8.982011,-7.632646,-4.058566,7.824277,9.316451,2.130862,5.791947,-2.370157,5.549373,3.618746,-9.525594,-2.384940,9.112926,-4.416244,9.373766,-5.944626,4.657646,3.622215,7.273934,-4.345651,-5.290809,3.715405,-3.122557,-6.928754,2.030555],[-6.260569,-9.777702,-8.194149,3.147027,-5.315516,-7.042126,2.005635,3.288776,-7.922366,3.370097,1.869217,-7.787528,2.992065,-6.750727,-3.206364,7.158251,-5.872685,9.109868,7.058511,0.888390,1.058980,-4.478069,-0.245989,4.484168,-5.623318,0.692880,5.227622,-3.543058,-0.433688,-9.090076,-4.730483,9.338999,1.621364,-5.951344,3.347515,-0.363592,9.717726,9.653744,-3.633493,-6.433669,3.282900,8.422365,4.610639,3.708048,-5.683065,1.529028,5.675804,2.326837,6.359361,9.252471,-3.448226,-8.446528],[-1.589204,0.693459,-3.795054,1.760581,7.466245,-1.784404,5.955690,-5.956743,3.229426,-0.834711,9.212375,1.350027,5.322688,7.357271,-5.466766,-4.235554,-3.743431,-9.049564,1.501081,-1.868807,-6.485801,-8.164080,4.883530,3.105045,-9.043372,1.076509,-2.330231,-9.559580,-1.547430,8.698764,5.416434,2.690183,0.630530,8.033412,-1.787995,2.681601,-3.178617,-8.596211,-1.044409,9.723693,0.311649,-1.761679,4.324012,-2.662407,4.031582,1.166201,6.325321,-3.589843,-7.452949,8.474111,7.123923,5.513810],[-9.421120,8.278021,1.534710,4.847385,-1.454162,-3.962099,7.284230,4.559877,-5.561003,4.788778,7.498963,-8.653298,2.142165,-7.223331,-1.122309,0.459333,7.399549,-3.183394,7.870047,-8.576305,9.153671,9.469773,9.182093,6.353950,2.424250,2.542088,-9.883869,-0.719066,8.643245,6.129310,-8.069682,1.837375,3.851523,1.856749,1.998874,-7.367713,-8.616768,7.711623,-4.998890,-4.020043,-2.298784,0.056996,4.041902,-5.254344,-6.399343,6.077327,-8.724097,8.571598,-2.553600,-1.657105,-2.231927,-1.783741],[6.150039,-9.092329,8.583883,2.515300,-4.997162,-3.178935,2.777230,-5.346889,-5.976427,-1.566104,-7.590817,5.109766,-0.155558,9.147884,-3.108907,-9.289835,2.980890,-4.284463,2.780452,-7.903585,-7.972015,8.748377,-3.254707,7.603231,6.607806,9.109457,3.393375,-9.824378,0.325180,-7.212724,-2.735029,7.081003,7.384074,-0.885173,0.612212,-2.731687,4.693250,0.220982,-2.150460,8.318040,2.751120,6.297254,9.238224,-5.787062,4.271112,-8.940428,4.902254,-4.080140,5.594438,6.008322,4.806752,-4.062056],[-0.326333,-4.510967,5.558240,-9.296138,9.636055,3.102881,-8.176373,3.277558,2.931485,9.964227,1.094349,9.946186,-7.505917,6.735570,9.855383,-7.855001,-6.328686,-0.377906,-2.118208,-7.431094,-4.744413,-8.363167,7.094938,5.889061,-1.642017,-0.961939,-4.680142,-7.671710,-3.963947,-4.723165,-3.933064,3.664763,-4.207164,-7.056524,0.273219,-5.498138,-2.299926,-1.163669,-7.794350,-5.438179,-0.248714,-1.340482,9.932084,7.154337,-3.949401,3.721098,-7.276797,1.150109,-2.391671,-0.099698,-5.147773,8.194291],[6.312022,0.657482,7.010244,-0.198573,-2.340655,-6.421841,-8.876099,6.751702,-8.856307,0.521014,-5.064375,1.133327,-8.882465,-5.524462,-4.435856,5.724729,7.472972,1.345126,4.874370,-6.170148,-0.301781,9.530352,-3.245626,9.976105,9.449391,9.241420,-2.972244,-7.389441,-9.047164,6.208598,-8.149451,9.764575,2.152201,7.477292,-2.648401,-2.875017,-3.313169,0.587178,3.830759,4.236142,7.495849,-4.677688,3.598030,-5.688599,2.656841,-3.048991,0.602413,0.510135,-3.837371,0.815725,-7.010276,6.338452],[8.908804,4.689856,-5.228412,1.044882,0.948409,9.686996,-1.682350,5.649711,3.411025,6.932201,2.565373,-6.917077,7.224971,-9.897097,8.273620,4.522732,8.149856,8.298693,6.884507,8.646416,-8.954860,-9.772689,6.051508,-9.924269,7.351585,6.507042,-9.683793,5.593607,0.488648,3.573178,6.200650,0.085841,4.589492,-2.496159,3.133790,-9.408002,-0.106759,-9.892163,-5.644719,2.024630,-9.307282,-0.516590,-0.370631,8.844624,0.120250,-1.318178,1.936384,7.529046,0.480194,0.399760,-9.925604,-2.432744],[-3.903480,-8.716180,-9.630143,3.540425,-5.722719,8.856382,5.194635,-4.370224,-8.503720,5.255700,-1.867720,-2.128431,6.631028,-2.103483,6.781720,-3.665978,8.767466,-5.002403,-2.994899,-1.722249,7.727994,8.772459,-6.286850,-4.342953,8.274083,-2.508677,-1.781151,0.706278,2.643364,6.463515,-3.751271,-4.876506,-6.489831,5.640582,-6.433683,6.440132,-9.400793,-7.631454,-6.468817,9.810035,9.548696,5.882175,-4.356421,6.309637,-3.229268,0.754895,-3.254749,-1.230838,-7.330589,-7.406283,-6.663891,7.908795],[-4.755143,8.288727,-7.158101,-2.425872,4.407477,2.843898,-4.435727,0.380643,-0.148432,-9.610991,-8.127132,5.116079,-8.940334,-0.014501,-4.584133,8.744571,7.082467,6.714170,8.894887,6.435118,-6.368680,2.117288,6.650182,4.015898,3.598119,9.028145,8.038859,-8.016928,-0.779086,-3.497035,-8.455796,0.081535,-5.407188,4.196912,4.870733,-0.549914,-7.162604,-3.177058,-0.881382,4.447605,1.722710,-8.544689,1.275710,2.615468,8.213063,-3.742314,4.776407,8.092223,5.359156,-5.350906,-1.221675,-6.704338],[-8.931989,-5.181977,-6.067342,-6.253878,-4.137532,-7.135660,7.012331,5.264088,3.325634,1.110210,-3.364034,4.603981,0.974206,-6.947292,-8.660148,-8.641434,4.819172,-6.986874,-7.279819,-7.368013,7.382913,4.869036,-8.231807,5.864982,-5.479655,-4.394933,2.107027,-9.367600,3.217432,-2.771591,2.913464,-0.298963,-1.000077,2.888867,7.947650,4.661809,-3.385405,-3.934256,-9.264114,1.701811,-9.179231,8.177885,4.080298,-3.577366,-9.320666,-0.988702,-9.657216,-4.968352,6.117573,8.456689,9.940099,9.728257],[9.678465,-6.146416,0.441421,4.952178,-7.909301,-4.903458,-5.981332,-3.295784,3.576266,3.154113,-4.949894,-4.971678,3.320538,-8.919029,9.994568,-8.111436,0.901648,-7.164700,-0.311352,-1.372322,-0.917081,-1.729336,-1.322368,5.835761,-6.465009,2.910582,-8.758776,-9.662781,3.801365,0.748553,1.547206,-2.088759,-7.254535,5.674106,-7.812134,4.634541,-1.112445,2.482020,6.741661,5.031188,7.455727,-0.276055,-8.620665,6.145452,0.124445,-8.003978,7.943947,-9.381281,4.734406,-1.634960,6.998572,-3.964123],[-8.743107,-0.617082,-0.272915,6.426074,-2.033287,-5.452970,-5.873435,2.636921,-6.055306,-6.640439,-1.835221,7.428251,4.663213,7.103293,-5.718817,-1.745621,9.690383,-4.950966,-1.709033,-0.554458,9.635152,-4.423958,-2.749113,8.370462,1.370693,-4.349731,-7.459139,-3.351060,-5.887212,3.897685,7.103231,9.017376,-2.860830,0.365879,5.527808,-1.450989,-4.773466,-2.536743,-9.324608,5.530762,-6.370809,7.257286,4.209242,-3.798647,8.680361,-5.396767,2.018413,0.318163,6.533166,0.976371,-2.617026,3.300196],[-5.656808,-4.816886,-1.687576,-2.417931,4.222751,0.690907,3.118733,-8.132290,9.946710,-7.738280,-4.725500,2.863920,-6.056314,-4.974229,-7.999601,5.444574,-1.121364,0.432992,3.766242,2.913711,7.863021,4.610615,-9.559581,6.136463,8.773683,-8.932091,8.858087,3.875085,-0.848230,8.823799,-5.378938,9.199466,-0.257675,2.468860,0.864479,-2.739923,1.097908,1.808831,-5.126456,-6.419827,-8.645504,5.830028,-4.008642,8.414907,8.089243,1.706038,3.489233,-2.591749,5.541148,0.936694,-6.720325,1.270001],[-7.194045,6.170785,5.336516,-3.864006,-6.230669,7.753207,-7.566154,-1.277121,7.594272,7.471539,-9.439381,-0.292360,7.579262,-6.394059,-8.802831,-4.115839,4.863490,4.462740,6.784323,-4.828064,1.169921,-5.125983,2.415274,0.349409,-3.646992,6.361481,-2.055585,-6.791282,-3.379504,4.234356,-6.716398,7.870318,0.193851,-1.496517,-4.164859,5.799133,-1.908708,8.150691,-1.103021,3.590628,-8.698620,6.198932,-6.347663,-9.647055,1.335517,3.749132,5.155550,4.812601,8.136575,6.300534,-3.376320,-3.538162],[-7.876453,-6.329194,-8.334374,1.259084,3.540926,-1.835494,-5.673875,-6.233680,-3.893494,8.745183,-3.639897,3.275391,-5.707916,1.184760,7.631647,-3.612872,8.145389,-8.300411,-4.184142,-0.044189,-8.670168,5.797587,-2.435648,-0.359007,-3.678697,-8.919552,-2.368695,-8.406058,8.092800,-4.324550,8.379333,-1.532174,2.498516,8.457384,4.298187,1.639990,-2.360055,-5.732174,-0.023710,0.250855,2.703491,1.374598,3.757765,-2.676252,9.962416,6.310790,9.685965,-7.835246,-7.242225,-4.720362,6.246217,-7.239801],[6.907486,-3.252400,8.007427,-9.642144,-5.663258,2.812220,2.017976,-5.092439,-9.002630,-8.508992,0.272690,-6.383550,-9.377284,1.907389,1.560680,2.432055,2.598943,-5.335657,8.243600,1.917783,7.135300,-3.962964,-0.588548,6.667550,-0.543227,8.969922,-2.140292,-7.436832,-4.762432,3.087864,5.210413,-3.933921,-4.013517,3.664756,1.161592,7.685059,1.091409,-9.771548,-1.625306,-0.073638,3.082354,7.947555,-7.967955,-5.958617,6.347017,-7.011145,-8.099317,1.742868,5.674542,-5.614167,7.221564,3.098349],[9.771811,0.214240,-7.634646,9.572311,4.812234,9.215029,-1.457541,-5.953249,2.201971,-5.489469,-8.625779,0.553858,-3.989409,-9.417329,9.914862,1.366866,4.202440,9.312218,-4.629985,8.864001,5.792150,8.204654,-6.305673,1.395637,-5.651453,1.832624,-0.588832,6.139794,9.536644,-2.017463,5.468179,5.386703,-9.049040,-8.748832,8.887959,-6.566420,7.928484,-3.348290,-3.905418,5.738071,9.336261,7.866197,1.949929,2.549357,-1.728087,-9.953608,8.774215,5.974722,-9.370379,-9.450685,3.158727,-6.100479],[5.112507,0.017000,-7.638028,-7.305010,8.542173,9.895756,-9.347384,9.038187,2.691863,3.215468,-1.103733,-8.271567,-2.090745,-9.625397,-6.853710,-4.731154,-2.541283,4.308072,4.703158,-1.668650,1.820658,6.577621,-9.657400,-5.216482,-1.079837,-5.768958,-9.808750,3.862088,-0.249642,1.184024,-7.978186,-5.615776,9.878148,-6.577240,7.108279,5.277048,-9.812676,7.557247,-7.798514,-6.944137,7.659352,9.465522,-0.750933,-6.733047,-4.484479,2.904434,-8.810537,8.940742,4.338665,-0.836672,4.974000,9.077005],[-1.307137,-2.379700,-2.462229,-7.854345,-8.458969,-5.094708,-9.618496,9.579737,-4.624827,-2.328319,-1.076744,-3.167086,3.749964,-6.244842,-6.632571,-4.771590,-9.459875,8.206716,-3.948458,-3.449549,5.509827,1.871917,-5.867202,7.509094,1.201487,6.065363,7.126121,4.781393,-0.252195,2.273548,7.736816,5.772009,1.870612,-8.855277,-9.484301,-4.826805,8.583020,-1.795197,-9.952349,-3.029661,0.496609,9.481412,5.539207,2.444944,-6.695969,5.924722,-1.512457,-1.976426,2.281430,2.022407,0.714885,-5.031611],[9.016730,-6.290754,-2.414141,4.670562,-0.335272,-3.414088,0.779408,8.351716,9.382247,5.967929,-5.038499,0.392420,3.513905,0.231755,-3.973405,9.198105,-7.064939,3.058956,4.778907,-3.239242,1.797375,3.292809,-0.383467,-3.871575,1.439335,-6.664488,0.870338,-6.919083,-2.038560,-7.733367,8.828310,6.430688,0.305918,-8.339605,1.152452,6.648113,2.563925,-2.788357,3.754192,0.083542,-9.219407,-2.693401,3.887124,-3.570400,3.804094,-9.110729,0.982517,-1.259990,-5.304174,0.842763,-8.557396,-0.664248],[3.825319,6.646704,-5.494707,-8.475194,-6.652927,-5.210381,0.201268,-4.779625,3.164399,0.673107,-8.498352,-7.145692,-4.912650,-0.559235,-8.643880,-3.469806,5.199190,-6.495571,6.749039,8.124806,-1.032850,7.712630,-5.882287,-9.374645,0.836357,-8.516307,3.102045,-5.170561,-5.686032,-3.886350,-8.912066,8.489177,2.941428,8.161572,-1.261821,-2.472075,-8.772665,-3.722956,4.954698,2.070426,-1.737461,-2.140755,-0.632099,8.500492,-1.348320,6.092073,-9.220731,-0.930948,-5.418528,-7.378866,-7.607866,4.678556],[3.161012,-9.066234,-6.558580,5.626221,5.317425,0.509391,-8.680869,5.382324,-8.376671,6.677861,8.361902,-7.333281,8.138980,-4.449759,-9.648213,0.703573,3.453267,-5.743475,6.365243,-1.869037,-2.145446,-1.580036,-7.445109,8.181912,-5.362486,2.930490,-0.298434,4.583408,0.482804,-5.798324,-1.807785,3.159036,7.547269,2.337176,4.858473,5.576142,1.846167,-7.865144,2.521001,2.229361,8.437196,7.349797,-7.392019,8.859523,-8.135980,8.282362,1.440946,-0.917365,0.651555,5.305630,0.723766,-6.234386],[-5.102361,-6.840366,-2.892166,1.934488,0.156110,5.433120,-3.578864,3.231932,-2.997421,9.845432,7.570289,-2.809113,0.937632,8.371397,0.603768,-7.707121,-6.589849,5.410557,-3.188117,-2.558987,-2.813564,3.624433,5.225135,1.264417,-4.818693,9.647859,7.558845,-4.468100,-0.221005,3.990238,1.541070,3.171472,5.218479,-2.712749,-5.825977,5.425078,-5.244877,9.402727,3.390078,-3.684703,0.073601,8.012471,5.607560,9.364617,6.254933,9.134331,-0.075769,-6.618845,-9.156542,1.855803,-9.838235,7.298779]], dtype = "float64")#candidate|3896|(26, 52)|const|float64
var_3897 = relay.var("var_3897", dtype = "float32", shape = (1, 405))#candidate|3897|(1, 405)|var|float32
const_3898 = relay.const([-9,-9,-2,4,-3,2,4,-9,6,-10,9,1,6,8,-8,-7,9,-3,-6,-8,-7,-8,-8,5,-5,1,5,-7,6,7,10,2,1,2,-2,8,-3,-10,1,3,10,-9,-7,-8,-4,6,-10,-5,6,6,-8,-5,1,9,1,-10,-7,-6,5,-7,8,3,4,8,-5,-5,-1,3,-8,-3,-8,9,-2,-10,-10,8,-10,7,8,3,-2,-8,1,-4,-6,9,2,9,-7,-2,6,5,10,-2,-9,-4,5,1,-3,-6,-2,3,7,9,-3,-10,-1,-6,9,9,-5,7,5,6,5,-9,9,2,-7,9,-1,8,-6,-3,4,-2,-5,9,-1,1,6,-4,5,-2,-8,-2,-2,3,7,-4,7,2,-9,5,-5,-7,-10,8,8,8,3,-6,-2,-2,6,2,3,7,-4,-1,3,-3,-8,8,3,1,6,10,10,-9,-7,10,-4,2,-3,10,-1,-7,-4,-3,1,-2,5,4,-3,2,3,-1,-10,8,8,-7,1,-5,9,3,-6,-6,6,-6,5,10,-1,9,-6,5,5,2,-10,-2,-9,-10,9,-5,7,5,-1,-2,-5,-6,-7,6,6,1,-7,4,9,10,-9,-4,-8,10,3,-4,2,1,2,3,-5,2,9,-9,-10,-8,-4,7,1,-3,-9,3,8,3,1,-6,2,10,5,-10,6,6,-10,4,-10,6,-6,3,2,4,3,10,7,9,-7,7,-8,-5,-5,10,6,7,4,7,-5,7,-8,-7,5,7], dtype = "int64")#candidate|3898|(288,)|const|int64
var_3899 = relay.var("var_3899", dtype = "int32", shape = (48,))#candidate|3899|(48,)|var|int32
call_3895 = relay.TupleGetItem(func_2100_call(relay.reshape(const_3896.astype('float64'), [8, 13, 13]), relay.reshape(var_3897.astype('float32'), [405,]), relay.reshape(const_3898.astype('int64'), [8, 36]), relay.reshape(var_3899.astype('int32'), [2, 24]), ), 0)
call_3900 = relay.TupleGetItem(func_2105_call(relay.reshape(const_3896.astype('float64'), [8, 13, 13]), relay.reshape(var_3897.astype('float32'), [405,]), relay.reshape(const_3898.astype('int64'), [8, 36]), relay.reshape(var_3899.astype('int32'), [2, 24]), ), 0)
output = relay.Tuple([uop_3871,call_3882,var_3883,call_3895,const_3896,var_3897,const_3898,var_3899,])
output2 = relay.Tuple([uop_3871,call_3884,var_3883,call_3900,const_3896,var_3897,const_3898,var_3899,])
func_3901 = relay.Function([var_3883,var_3897,var_3899,], output)
mod['func_3901'] = func_3901
mod = relay.transform.InferType()(mod)
var_3902 = relay.var("var_3902", dtype = "float32", shape = (700,))#candidate|3902|(700,)|var|float32
var_3903 = relay.var("var_3903", dtype = "float32", shape = (1, 405))#candidate|3903|(1, 405)|var|float32
var_3904 = relay.var("var_3904", dtype = "int32", shape = (48,))#candidate|3904|(48,)|var|int32
output = func_3901(var_3902,var_3903,var_3904,)
func_3905 = relay.Function([var_3902,var_3903,var_3904,], output)
mutated_mod['func_3905'] = func_3905
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4060 = relay.var("var_4060", dtype = "float32", shape = (11, 11, 3))#candidate|4060|(11, 11, 3)|var|float32
uop_4061 = relay.acosh(var_4060.astype('float32')) # shape=(11, 11, 3)
output = uop_4061
output2 = uop_4061
func_4071 = relay.Function([var_4060,], output)
mod['func_4071'] = func_4071
mod = relay.transform.InferType()(mod)
mutated_mod['func_4071'] = func_4071
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4072 = relay.var("var_4072", dtype = "float32", shape = (11, 11, 3))#candidate|4072|(11, 11, 3)|var|float32
func_4071_call = mutated_mod.get_global_var('func_4071')
call_4073 = func_4071_call(var_4072)
output = call_4073
func_4074 = relay.Function([var_4072], output)
mutated_mod['func_4074'] = func_4074
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4239 = relay.var("var_4239", dtype = "float64", shape = (9, 8, 5))#candidate|4239|(9, 8, 5)|var|float64
var_4240 = relay.var("var_4240", dtype = "float64", shape = (9, 8, 5))#candidate|4240|(9, 8, 5)|var|float64
bop_4241 = relay.multiply(var_4239.astype('float64'), relay.reshape(var_4240.astype('float64'), relay.shape_of(var_4239))) # shape=(9, 8, 5)
bop_4250 = relay.less_equal(var_4240.astype('bool'), relay.reshape(var_4239.astype('bool'), relay.shape_of(var_4240))) # shape=(9, 8, 5)
func_2415_call = mod.get_global_var('func_2415')
func_2419_call = mutated_mod.get_global_var('func_2419')
const_4260 = relay.const([-0.219418,5.245378,-9.702742,2.305215,9.461491,-1.088778,-1.681220,8.325198,-1.679491,7.621251,-0.844256,4.552881,8.283750,-6.486922,-1.820198,-9.465396,-7.685008,-6.101289,7.139430,-2.645741,4.952699,-6.868817,-1.926037,7.872439,8.304667,-6.370818,4.791804,-3.225074,8.305164,-2.283693,-0.745302,-6.653872,-7.923005,5.175184,-4.908915,-6.579199,-2.228650,4.322052,-6.497742,6.398447,-7.004516,2.974982,5.440712,-4.413146,2.900927,-2.134909,-0.731539,-8.751388,-3.804884,-4.426480,4.361282,-3.769503,3.013239,-0.870693,-8.845773,9.452368,0.974001,-2.540503,4.224617,-7.478574,7.788412,-8.352441,8.966959,7.529416,-0.961480,4.834088,-0.463802,-9.692164,3.166522,-7.773981,-1.925354,-0.840999,-7.048198,0.117588,-0.268549,-1.417612,-3.024812,1.496723,5.891385,5.626007,-0.122597,9.061312,-3.317925,-3.288810,1.782096,0.705084,-4.124936,8.881107,8.915619,-7.534370,-5.740631,8.501404,6.168755,5.104918,6.526588,6.316799,6.397941,1.941470,-8.793777,8.869091,-0.718446,1.511007,4.169639,3.537966,9.380774,-5.908353,2.123998,0.375895,-9.515001,2.486111,3.229032,9.950317,-6.950141,5.425669,-2.190522,-6.044958,8.157001,1.562362,-3.189590,4.810669,1.214463,-4.269989,-4.964913,5.633715,-1.599469,-8.746013,7.384791,-2.158537,-1.350861,-6.920744,-8.446865,8.618191,3.671024,-5.749791,-4.773443,6.922330,6.319617,-8.146438,9.724059,-3.740032,-4.179156,-9.101924,-0.377317,6.703158,-8.923373,3.475491,-1.230556,-0.280030,-6.503316,-3.307481,3.365664,-2.944297,2.940724,-3.035804,-3.832551,-9.461285,0.704096,5.070786,6.004331,3.408439,-3.425732,-4.576738,3.967254,-7.341875,-2.467614,-7.714868,2.747264,-8.754421,5.825845,3.358332,-5.943164,8.796748,-3.771936,8.105634,4.959973,0.427622,-5.914082,8.907493,6.558040,7.760170,-5.366445,9.967703,-8.426080,-9.990841,-8.134093,1.778913,5.999015,-0.815720,0.461229,1.847079,-9.806007,7.943275,-0.537792,2.352810,-1.648452,9.327053,-0.052999,-4.206920,4.826449,5.719866,8.278430,-7.339315,2.386868,-9.528914,-5.686714,9.272385,5.117401,8.610866,4.155314,6.539887,3.681854,-0.536792,8.109742,-7.490678,9.647631,-1.182731,0.114243,5.677473,1.079794,5.538798,8.691195,5.442142,0.762833,7.049148,9.730119,5.639398,4.453043,-8.748467,-4.345695,2.934227,-9.682658,-9.544958,-2.944879,-9.138881,-6.351921,-3.551793,5.149643,-2.692161,-9.889557,9.417197,-4.503080,7.872237,1.032861,-0.033097,-3.825347,9.385708,5.962731,-4.210337,-9.741381,7.763822,9.202231,-6.301244,6.587227,4.276660,-7.803959,1.553174,0.392425,6.131862,2.971314,5.107732,5.729499,-0.672149,-0.574111,3.349909,-1.113970,6.537527,-7.997948,-0.037847,-1.601129,3.147012,-3.901231,2.968060,8.615150,-5.838986,-5.220642,8.337992,4.169894,-3.284675,-1.776869,-8.218177,3.750605,-8.976841,7.834154,9.942567,6.535942,9.926592,-4.055015,2.091662,6.053593,-1.332752,9.249555,2.918050,0.392394,7.796911,4.047241,-3.731487,9.769390,-1.222649,4.160293,7.419937,6.963124,7.418558,3.193455,9.263612,-4.074096,1.242669,5.403889,-4.879997,-8.589427,7.938597,2.399234,-2.546058,-8.379044,-5.331677,5.184791,-4.594959,-9.359298,-6.357378,1.431525,-3.097254,0.974743,4.219826,-7.671754,9.084200,7.395030,2.197982,9.615963,-5.519246,-3.279205,3.819358,-4.898372,-5.283771,4.001625,-1.477353,6.221954,0.013489,-7.596826,3.105202,-0.790732,-5.646611,8.961785,3.929454,5.923454,0.518785,-6.932338,5.768614,-1.945043,0.734941,-9.574789,-5.804615,-9.721300,-5.311097,9.312731,7.739714,3.068576,6.607467,2.092351,4.981906,-3.067451,0.719498,8.755092,9.092745,-4.223135,-7.723427,1.905218,-0.843285,-5.977994,-2.064181,8.116239,9.465032,2.845634,9.590564,7.212325,-7.286599,1.316753,-4.902242,-8.963232,6.222236,-4.099463,-6.870019,-7.680278,3.467847,9.569352,-3.232463,-3.331009,0.066642,5.427070,-6.664020,8.709935,-4.786713,-5.104031,-2.045308,8.479478,-2.191309,8.994633,5.535542,4.192095,-8.029472,-7.823906,8.273651,-9.045992,7.730595,-9.557460,7.363995,-8.692687,-1.179702,-3.346708,2.882739,-4.540320,-5.033775,-8.634418,-6.420460,-1.888973,9.360464,5.634875,4.816384,7.188502,2.897395,5.868359,-2.360376,9.049889,-6.041723,1.725477,1.436905,1.454256,5.677819,1.475382,-3.975176,-3.506825,-3.376523,-8.914767,4.127069,-6.423283,4.209295,7.805999,7.784044,6.794016,2.052662,-0.665433,-6.470423,-8.048625,0.830913,5.534793,6.134063,3.647923,-7.884738,-3.699531,-5.818677,-4.977387,-6.768138,8.258301,-0.820011,2.646234,1.014424,-4.017210,-8.927298,4.200857,-4.939635,0.097840,-0.953687,-2.501424,-4.481541,-6.755241,3.555185,1.486468,8.354149,-9.651036,1.437160,8.055781,2.416596,-9.085408,-6.957472,6.221008,8.266136,-2.802982,-7.295823,-8.604896,6.678350,1.110476,4.166714,-9.330631,2.246629,8.010050,2.864389,0.839019,-2.321712,-2.022586,6.988983,-1.687520,-7.660486,-9.740167,8.055299,3.596973,1.294899,7.232881,0.578675,2.761426,-2.500857,8.694402,0.663054,-8.576830,5.978522,-0.593946,6.667278,5.669416,-7.647774,-5.972321,-0.627742,-6.137365,-2.496664,-3.520709,-8.661407,-7.735179,-0.092661,-1.626074,-0.215233,-8.951723,9.117249,-1.397973,3.021604,-6.116998,0.913735,3.867388,-8.782719,0.311076,4.200068,0.085031,-8.614533,9.871625,8.342867,-9.232791,-5.418505,7.651863,-0.081140,-1.490019,1.390843,9.929082,6.400537,-7.970005,-5.094318,-0.662250,-3.934111,6.495187,0.648015,6.086723,-9.943511,-0.450078,-6.980108,-8.127741,9.652604,-8.600684,5.814006,1.755035,-1.671095,5.411337,-1.907641,0.130910,0.252884,8.322550,9.401215,8.733268,-9.617002,-6.724278,-8.971995,9.272379,-5.290971,-5.376797,1.606025,-8.667827,-4.862796,9.272112,-4.415277,1.653714,6.145489,-1.527348,7.800072,9.368955,-9.541176,7.960236,-0.520324,-5.272463,-2.574248,4.208639,6.353993,-1.886185,1.631766,-1.629637,-9.654410,4.944801,-5.261949,-0.908717,3.780063,3.738740,6.435161,-1.595249,-1.398611,-0.960854,-9.226781,-9.216139,-4.666725,9.350101,-2.885704,0.423502,7.990071,3.293297,-8.486708,5.267632,3.840355,4.106512,2.870906,-9.665559,8.085428,5.300944,-6.336054,9.210569,-9.280326,-5.207768,-4.542023,5.654989,-2.598965,0.472127,-6.301766,1.583752,9.382682,-5.166648,-2.852090,-4.508012,-5.552458,3.224698,-3.502351,3.295231,1.239978,7.458460,9.510506,1.711330,6.418959,-3.223262,-5.802104,3.723654,3.601154,-3.426575,5.035578,8.299082,-6.155417,-5.116674,9.040784,6.473586,-3.545308,-8.265527,9.759879,7.859865,-8.585811,-1.617602,2.784881,-2.471697,-0.132474,4.794522,-3.645687,6.447304,7.193956,5.489869,7.564121,-7.442083,9.973595,3.365267,-9.289026,-2.015581,-5.629161,0.242623,-3.629751,-4.553754,7.965454,-6.020455,-4.467419,-8.237984,-8.046752,-2.063922,3.261219,4.478474,8.600735,1.514972,7.627607,-0.265249,0.981909,-2.424851,-8.664557,-9.808993,-7.410301,3.808368,-0.940139,-0.748996,3.710537,-7.705669,2.162760,8.530244,-3.309850,0.148748,-1.918386,2.966926,4.493461], dtype = "float32")#candidate|4260|(700,)|const|float32
call_4259 = relay.TupleGetItem(func_2415_call(relay.reshape(const_4260.astype('float32'), [5, 10, 14]), relay.reshape(const_4260.astype('float32'), [5, 10, 14]), ), 0)
call_4261 = relay.TupleGetItem(func_2419_call(relay.reshape(const_4260.astype('float32'), [5, 10, 14]), relay.reshape(const_4260.astype('float32'), [5, 10, 14]), ), 0)
func_21_call = mod.get_global_var('func_21')
func_23_call = mutated_mod.get_global_var('func_23')
const_4263 = relay.const([-3,4,-4,9,8,10,6,5,6,10,3,1,2,-10,-2,-7,-10,8,-4,9,-1,-1,6,-1,-5,4,-9,-7,-2,3,2,8,3,-7,-5,10,-7,2,-6,-6,4,-10,2,7,4,8,9,9,-2,-8,7,4,8,7,-9,-6,-10,9,4,8,3,4,-1,-6,3,1,-4,4,-1,8,4,2,-2,10,6,-4,3,2,2,1,6,5,-7,5,-10,7,-9,-9,-1,-5,-6,-7,-8,7,1,-5,-9,8,-9,-5,6,-4,4,-3,2,-3,8,9,1,6,-1,-6,1,-8,6,3,7,4,1,-8,7,3,-3,1,-8,3,-8,-2,2,-3,-5,-10,-4,-6,4,-9,-7,-6,7,-2,4,4,4,-1,8,-7,-10,7,-1,-8,9,8,4,-6,-3,5,4,9,7,-8,-6,10,-2,-10,2,-10,9,-6,-1,-3,-3,-2,-10,-6,-3,-4,9,-4,10,4,2,-2,-3,2,-3,10,3,-2,3,10,2,4,7,-10,10,1,-1,2,3,8,1,9,-10,-9,-9,-10,4,-10,-3,-9,8,6,-3,1,-4,-2,-7,-3,4,-1,-10,3,6,-4,-6,4,3,3,-8,-1,-3,1,6,10,-3,-2,-3,-8,10,8,5,2,-1,3,9,-6,-7,-6,-1,2,5,-9,-8,-7,-1,6,10,5,3,3,-1,6,-7,2,7,2,-9,2,9,10,8,-7,4,-10,-9,-8,-3,2,-5,8,10,5,10,-1,-1,-1,6,7], dtype = "int64")#candidate|4263|(288,)|const|int64
call_4262 = func_21_call(relay.reshape(const_4263.astype('int64'), [16, 6, 3]))
call_4264 = func_21_call(relay.reshape(const_4263.astype('int64'), [16, 6, 3]))
uop_4265 = relay.sinh(call_4259.astype('float32')) # shape=(5, 10, 14)
uop_4267 = relay.sinh(call_4261.astype('float32')) # shape=(5, 10, 14)
output = relay.Tuple([bop_4241,bop_4250,const_4260,call_4262,const_4263,uop_4265,])
output2 = relay.Tuple([bop_4241,bop_4250,const_4260,call_4264,const_4263,uop_4267,])
func_4272 = relay.Function([var_4239,var_4240,], output)
mod['func_4272'] = func_4272
mod = relay.transform.InferType()(mod)
mutated_mod['func_4272'] = func_4272
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4272_call = mutated_mod.get_global_var('func_4272')
var_4274 = relay.var("var_4274", dtype = "float64", shape = (9, 8, 5))#candidate|4274|(9, 8, 5)|var|float64
var_4275 = relay.var("var_4275", dtype = "float64", shape = (9, 8, 5))#candidate|4275|(9, 8, 5)|var|float64
call_4273 = func_4272_call(var_4274,var_4275,)
output = call_4273
func_4276 = relay.Function([var_4274,var_4275,], output)
mutated_mod['func_4276'] = func_4276
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4613 = relay.var("var_4613", dtype = "float32", shape = (6, 12, 15))#candidate|4613|(6, 12, 15)|var|float32
uop_4614 = relay.atanh(var_4613.astype('float32')) # shape=(6, 12, 15)
output = uop_4614
output2 = uop_4614
func_4618 = relay.Function([var_4613,], output)
mod['func_4618'] = func_4618
mod = relay.transform.InferType()(mod)
mutated_mod['func_4618'] = func_4618
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4619 = relay.var("var_4619", dtype = "float32", shape = (6, 12, 15))#candidate|4619|(6, 12, 15)|var|float32
func_4618_call = mutated_mod.get_global_var('func_4618')
call_4620 = func_4618_call(var_4619)
output = call_4620
func_4621 = relay.Function([var_4619], output)
mutated_mod['func_4621'] = func_4621
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4630 = relay.var("var_4630", dtype = "float64", shape = (16, 3, 6))#candidate|4630|(16, 3, 6)|var|float64
uop_4631 = relay.exp(var_4630.astype('float64')) # shape=(16, 3, 6)
output = relay.Tuple([uop_4631,])
output2 = relay.Tuple([uop_4631,])
func_4640 = relay.Function([var_4630,], output)
mod['func_4640'] = func_4640
mod = relay.transform.InferType()(mod)
mutated_mod['func_4640'] = func_4640
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4641 = relay.var("var_4641", dtype = "float64", shape = (16, 3, 6))#candidate|4641|(16, 3, 6)|var|float64
func_4640_call = mutated_mod.get_global_var('func_4640')
call_4642 = func_4640_call(var_4641)
output = call_4642
func_4643 = relay.Function([var_4641], output)
mutated_mod['func_4643'] = func_4643
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4689 = relay.var("var_4689", dtype = "float64", shape = (15, 10, 11))#candidate|4689|(15, 10, 11)|var|float64
uop_4690 = relay.atan(var_4689.astype('float64')) # shape=(15, 10, 11)
func_21_call = mod.get_global_var('func_21')
func_23_call = mutated_mod.get_global_var('func_23')
const_4693 = relay.const([[6,-7,7,-9,1,-2,-5,-9,8,10,-10,-8,-1,6,-1,-10,4,6,-3,4,-4,10,-9,2,-6,-5,-1,-9,6,-8,-10,5,-8,-5,5,6,8,-1,-9,-8,-9,-9,-6,5,-8,2,-1,-1,-8,-9,-8,4,-5,2,-2,-6,1,-1,6,2,7,1,1,-7,8,5,3,9,8,1,-2,-9,2,4,4,-3,2,-10,-6,3,7,10,-9,7,4,7,4,-1,-6,6,2,2,3,-6,-3,3,-9,9,5,9,-5,-5,2,5,2,-7,-1,8,-5,3,5,9,2,-6,-5,6,1,6,1,1,-3,10,9,7,4,5,7,-5,-1,6,6,-5,5,-8,3,10,8,-1,9,5,10,-3,2,-6],[1,-9,1,-1,5,3,-1,-5,4,-9,4,4,-2,10,7,6,-7,-2,-9,5,6,-2,-2,7,-3,-6,-10,2,9,5,10,-3,-8,-5,2,3,-9,-5,3,6,-10,-6,7,10,2,4,-1,-8,4,10,-5,-3,9,9,2,2,10,-10,-6,4,10,-1,-5,-9,-4,6,-1,6,-7,-6,2,8,-5,-10,-3,-10,-2,-1,2,7,-9,5,-2,-4,8,7,-7,2,5,7,-6,-8,-10,7,-1,9,-9,-3,-7,-9,6,-7,-3,9,2,-6,4,9,5,7,-4,9,3,6,9,-7,3,8,-6,4,4,8,-7,4,-5,-9,9,4,-10,-2,-8,-3,-4,7,-9,-7,4,-1,-4,-3,5,-10,2,6]], dtype = "int64")#candidate|4693|(2, 144)|const|int64
call_4692 = func_21_call(relay.reshape(const_4693.astype('int64'), [16, 6, 3]))
call_4694 = func_21_call(relay.reshape(const_4693.astype('int64'), [16, 6, 3]))
output = relay.Tuple([uop_4690,call_4692,const_4693,])
output2 = relay.Tuple([uop_4690,call_4694,const_4693,])
func_4704 = relay.Function([var_4689,], output)
mod['func_4704'] = func_4704
mod = relay.transform.InferType()(mod)
var_4705 = relay.var("var_4705", dtype = "float64", shape = (15, 10, 11))#candidate|4705|(15, 10, 11)|var|float64
output = func_4704(var_4705)
func_4706 = relay.Function([var_4705], output)
mutated_mod['func_4706'] = func_4706
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4852 = relay.const(True, dtype = "bool")#candidate|4852|()|const|bool
var_4853 = relay.var("var_4853", dtype = "bool", shape = (5, 9, 15))#candidate|4853|(5, 9, 15)|var|bool
bop_4854 = relay.logical_and(const_4852.astype('bool'), var_4853.astype('bool')) # shape=(5, 9, 15)
output = relay.Tuple([bop_4854,])
output2 = relay.Tuple([bop_4854,])
func_4857 = relay.Function([var_4853,], output)
mod['func_4857'] = func_4857
mod = relay.transform.InferType()(mod)
var_4858 = relay.var("var_4858", dtype = "bool", shape = (5, 9, 15))#candidate|4858|(5, 9, 15)|var|bool
output = func_4857(var_4858)
func_4859 = relay.Function([var_4858], output)
mutated_mod['func_4859'] = func_4859
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5220 = relay.var("var_5220", dtype = "float32", shape = (1, 15, 4))#candidate|5220|(1, 15, 4)|var|float32
uop_5221 = relay.log10(var_5220.astype('float32')) # shape=(1, 15, 4)
func_2535_call = mod.get_global_var('func_2535')
func_2539_call = mutated_mod.get_global_var('func_2539')
var_5242 = relay.var("var_5242", dtype = "float64", shape = (25,))#candidate|5242|(25,)|var|float64
const_5243 = relay.const([8.178003,-2.460533,4.466215,-9.721840,6.933591,-0.517700,-8.192911,8.356619,4.400340,-0.452723,3.623727,-4.063371,-8.671798,9.346277,-9.716279,-1.881660,-7.305971,-7.068620,9.737165,-7.644171,-9.222058,-1.822866,9.552325,0.016940,-3.940159,-2.032207,8.151608,8.001539,-4.308372,-9.281325,2.372783,9.070183,6.133193,8.942939,-7.087187,1.904712,-1.533959,-4.371040,6.717522,1.015019,9.114712,0.012547,-7.061711,7.405570,2.960909,2.181690,-3.370633,9.326175,-2.177503,-5.877211,-4.407136,-8.961818,7.460376,-0.416257,-3.399048,4.157646,5.680811,2.073955,5.086810,9.407868,-2.407063,-8.430112,9.099995,-4.748424,-1.921116,-4.121995,-7.657687,-2.935915,6.994980,-7.976083,-2.713924,-9.213494,0.017885,2.743085,-4.653982,1.569242,6.808040,6.962481,7.600008,9.327195,-8.440136,7.831972,-1.422974,6.233564,-6.481920,9.585106,7.718262,5.897602,9.571336,1.310519,3.321932,-4.341100,-8.223962,3.194686,9.836201,-9.503961,-3.100535,-0.969668,1.590784,2.362210,-1.516190,-6.258691,-5.417829,-9.486999,-6.355463,9.009109,-5.933630,-2.650589,4.265597,4.172342,-3.253661,-9.597923,2.421227,9.997580,-1.407498,-8.443526,-2.963288,-6.431886,-4.789682,-2.257860,6.275299,-9.504157,-3.275241,-6.890672,-5.810899,-0.402965,1.973814,-8.565144,-4.108961,5.228813,-7.951736,3.395608,-7.940223,6.321469,-0.478119,0.843899,4.487993,1.692903,8.850927,6.660549,1.472580,-9.387935,-5.931953,3.794475,9.829913,-5.988481,7.608449,-5.045977,5.236338,-0.889202,1.426934,5.896482,-3.803563,-0.266268,6.204696,5.882606,-1.491845,1.100875,-4.277553,3.332738,-9.426832,8.166969,5.202267,6.887619,4.875099,-7.200324,-9.389367,2.496672,-3.893665,-2.797442,0.146727,1.251931,4.293141,9.631955,6.137658,3.638503,-8.070259,1.253581,-3.668261,-5.311424,5.455783,8.158311,4.018198,-6.198610,-9.202258,7.350645,-3.976742,4.082261,9.089399,-7.319554,3.716506,-4.197668,-8.443142,4.622480,6.738667,9.912702,-1.111220,-2.494309,4.945630,-0.065770,4.772110,-7.027069,-8.214957,9.665389,-7.766523,-1.145110,-9.728071,0.263911,9.501730,8.000050,-6.007608,7.616663,7.594234,-4.054311,-7.745422,4.636349,-0.518873,1.417138,2.233346,5.883345,-1.907948,-3.097262,-7.846775,-5.550254,-2.175240,-3.691350,-0.978539,-3.979969,3.350508,-7.102316,2.109551,8.569011,6.670133,-5.500814,-7.374216,-6.088484,2.590921,9.704922,-5.591011,5.593300,8.089594,-1.179638,4.385583,-2.876058,5.786106,-5.883646,-2.163922,0.941941,2.424547,-1.479871,7.399820,-8.791728,1.146128,-0.173034,7.215900,8.558634,-4.744969,-4.159340,-0.366031,-8.356490,-5.171179,-5.624695,0.902669,-6.854710,6.373214,-8.506418,-3.811260,3.027780,-8.379504,5.754226,-7.795961,-8.667573,-8.192965,-0.820578,5.941046,3.788326,-6.102299,-1.263842,2.900358,-0.758183,-8.876221,4.925353,0.789627,-7.642201,-0.542313,-3.738949,-0.782995,7.771886,3.751809,7.858971,0.314772,-7.128821,-8.269258,7.476410,-8.044985,-2.064123,-0.274076,2.542100,6.534864,3.840552,2.337950,-9.254726,-8.168793,1.894072,1.503860,7.015024,4.598359,-1.327349,-0.934269,9.387839,9.820937,6.781807,6.906686,-3.075539,7.637862,-9.485819,6.384022,-6.730102,6.057880,8.656960,1.890406,6.918211,7.550749,-3.873275,5.920880,-9.904535,-0.275271,-2.050534,-2.702549,-1.688423,-0.674208,-8.384366,5.229556,5.866899,-1.651326,6.448884,9.978828,-8.170019,3.403923,8.964291,-6.609843,5.611497,1.189442,-6.324201,-7.251675,5.032579,-1.204991,-0.641697,0.228223,-6.713970,3.470530,1.738034,-6.260541,0.615558,-2.307401,-4.011747,-5.208810,9.994741,6.063080,1.824277,-3.974733,-5.259817,-0.626922,-2.973669,-7.769469,-2.708114,9.676367,1.113047,3.849291,6.439952,4.773525,5.413463,0.959426,6.886541,-2.156150,9.496361,-2.236558,7.165632,-8.911781,-9.498807,-2.614463,-2.577398,-6.141171,9.317185,-3.265497,1.680050,-6.479412,1.395423,-7.567962,-0.273779,7.314107,9.365621,3.164307,7.749553,2.943191,9.189934,-8.851164,0.856144,7.012864,-1.054568,2.414000,3.133867,-5.969899,8.150604,6.708904,-8.187158,9.279517,-2.556579,-8.307223,4.622897,5.988899,-0.005255,-0.399253,-7.770505,-8.263505,-9.631156,9.695917,-5.935745,-9.686701,-0.740950,2.007233,0.587294,-5.436981,-2.767205,0.520261,-3.035826,-5.138516,-4.811167,-8.343192,-3.458445,4.826950,-1.337593,-5.174138,9.012897,7.591251,-5.972604,-6.813304,9.876919,-1.780558,9.080034,7.964285,-3.500530,-1.550594,7.500877,-9.690424,-9.112602,-6.487575,-1.008158,4.206688,4.894619,0.750974,3.923916,2.700091,-0.499489,-2.695490,8.223452,-0.144659,8.202517,-2.752459,3.837717,-0.970235,8.727212,5.639286,6.536279,9.827108,4.879698,0.034034,-5.434946], dtype = "float32")#candidate|5243|(468,)|const|float32
const_5244 = relay.const([-2.012381,-9.165402,8.441592,-4.379115,-2.316774,-2.137395,6.005539,6.325083,9.497566,7.779268,6.854278,1.446816,8.027720,-3.852299,0.397904,1.304421,-3.056209,-7.052751,9.271694,-9.581543,-4.968224,3.048811,-0.362704,-3.641353,1.744506,-9.283446,-3.554013,9.684564,0.269208,9.382810,-8.591544,-0.315639,-0.660806,3.815363,5.679585,1.533659,-7.626213,8.468610,4.737262,0.914894,7.093880,3.454067,1.918326,-0.964236,-3.530268,9.581460,-5.390335,-2.297467,-7.031229,-4.691885,3.977141,-5.455054,-5.922673,-0.608068,6.422247,5.526687,8.927315,6.261776,4.325198,3.853818,1.702022,8.971179,-4.435000,-7.934390,7.804009,8.316057,-8.872646,-4.518352,4.840566,-5.808823,-3.797738,-0.311371,-5.383452,9.211284,1.275462,-1.478588,8.680213,-5.663567,4.803182,4.329694,8.741539,3.717652,-3.729619,8.287863,-5.379518,-2.921217,5.084274,-3.178149,-5.645023,5.537240,-3.484732,-4.183627,6.663516,8.734297,4.714578,7.583573,2.941045,-4.089090,3.258274,-4.619825,3.009138,-9.973934,4.270992,9.822460,-0.926158,7.865962,-6.833543,3.601606,-1.249937,-9.063057,4.301032,-0.278977,-6.920224,-1.309734,-9.653251,2.651155,8.490924,-7.938403,-3.293498,8.765605,0.166035,1.129375,-1.234009,6.532806,6.274845,6.537283,-5.851735,-9.449600,-7.618813,-8.908985,4.295912,1.673899,2.748389,1.088680,2.435977,7.821160,4.093879,-0.983055,6.667898,-7.159178,2.851991,3.727704,2.702811,-4.722214,-7.365914,8.065621,-9.429976,-9.379441,-5.630028,6.880335,-1.011748,-6.860058,3.313041,-7.045987,5.114151,8.616454,-0.763265,-7.872453,-7.050472,5.624162,8.263567,-2.153102,3.686661,6.262250,-3.901993,1.228174,2.253202,-8.304367,-5.699337,7.845688,1.442541,-8.358047,1.113859,-4.173677,7.471444,-6.731763,-7.313420,-4.847730,-1.887738,1.794861,-9.383807,5.861573,7.669069,-5.269280,-6.905022,0.376194,7.553605,4.983305,-0.799938,-0.995385,-9.041382,-8.524643,-7.353518,-7.487829,-6.403974,3.102451,9.401615,1.641212,1.237261,-5.580741,7.751924,1.829078,-4.089711,-3.924514,-4.090384,-9.158842,5.485104,7.106683,-6.211239,-8.341610,-7.025947,2.662071,7.863803,-7.261960,1.375688,-6.771528,-8.199776,2.958338,1.116542,0.478427,-4.841454,-6.623800,-1.265746,3.826712,2.749100,0.856677,-1.589103,1.280410,3.281809,-6.217939,3.133375,-5.171963,-7.369205,-6.183628,8.802394,-7.771148,7.717543,5.923233,-7.418776,-7.717528,8.966319,8.544062,6.122318,8.473202,-2.265726,5.264911,-0.589475,2.254617,1.995904,-5.554788,5.215898,-7.234412,6.803081,-4.362034,9.180755,-0.049819,7.905102,-1.190273,-0.170394,2.332626,5.714674,-9.909467,-1.268446,-8.208337,3.298626,-3.036710,8.839339,-5.938004,1.325916,8.678335,6.909423,2.338004,5.215298,6.952972,8.523182,4.170170,4.820959,-5.883083,2.595803,1.496169,-8.775788,-3.598507,3.709860,-3.739129,2.442885,0.426205,9.289832,0.381657,-0.983253,3.115750,-9.520731,-8.852256,-3.235466,9.184762,8.987065,3.113896,8.454584,-5.662094,-6.743497,6.436942,-6.869740,-6.995160,9.108420,-8.254324,8.494820,2.244295,-2.309473,2.198911,-8.470822,0.444306,-9.051678,2.337427,-5.378457,-8.243655,0.719734,-4.551376,-9.932205,8.120610,3.197921,5.189722,9.942102,-9.503561,-9.764301,4.906593,-6.651402,-4.856815,4.392270,-8.074476,0.571032,-1.622738,-1.609549,-3.402799,4.615801,-6.069617,-2.666164,1.113354,-3.662451,4.181875,-8.573845,-7.220901,9.085557,3.400124,-6.352776,-4.962961,-8.248875,-0.775058,-3.042358,6.217614,2.677628,-3.279571,2.970653,7.736632,7.827673,-4.049564,6.926260,-0.206929,6.688945,1.787484,-5.295993,-0.543095,-4.918302,1.067674,5.588963,2.925960,7.274008,-9.604749,0.651552,-1.115267,2.968824,-1.356059,8.435228,9.234665,-2.000228,0.394219,2.563661,0.237906,-4.800226,-0.950602,8.031083,-8.615560,2.804140,0.956801,6.221278,9.904345,-3.921946,7.408487,-3.463112,8.424565,-0.670544,6.987414,-4.488955,2.909447,-1.608883,-1.702063,3.978177,-9.795983,-4.559146,-8.359390,3.764809,-6.746763,2.472000,-0.654862,-9.518597,1.157957,-0.250539], dtype = "float32")#candidate|5244|(405,)|const|float32
call_5241 = relay.TupleGetItem(func_2535_call(relay.reshape(var_5242.astype('float64'), [5, 1, 5]), relay.reshape(const_5243.astype('float32'), [6, 78]), relay.reshape(const_5244.astype('float32'), [405,]), ), 14)
call_5245 = relay.TupleGetItem(func_2539_call(relay.reshape(var_5242.astype('float64'), [5, 1, 5]), relay.reshape(const_5243.astype('float32'), [6, 78]), relay.reshape(const_5244.astype('float32'), [405,]), ), 14)
output = relay.Tuple([uop_5221,call_5241,var_5242,const_5243,const_5244,])
output2 = relay.Tuple([uop_5221,call_5245,var_5242,const_5243,const_5244,])
func_5246 = relay.Function([var_5220,var_5242,], output)
mod['func_5246'] = func_5246
mod = relay.transform.InferType()(mod)
mutated_mod['func_5246'] = func_5246
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5246_call = mutated_mod.get_global_var('func_5246')
var_5248 = relay.var("var_5248", dtype = "float32", shape = (1, 15, 4))#candidate|5248|(1, 15, 4)|var|float32
var_5249 = relay.var("var_5249", dtype = "float64", shape = (25,))#candidate|5249|(25,)|var|float64
call_5247 = func_5246_call(var_5248,var_5249,)
output = call_5247
func_5250 = relay.Function([var_5248,var_5249,], output)
mutated_mod['func_5250'] = func_5250
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5415 = relay.var("var_5415", dtype = "float32", shape = (16, 5, 12))#candidate|5415|(16, 5, 12)|var|float32
uop_5416 = relay.acos(var_5415.astype('float32')) # shape=(16, 5, 12)
output = uop_5416
output2 = uop_5416
func_5420 = relay.Function([var_5415,], output)
mod['func_5420'] = func_5420
mod = relay.transform.InferType()(mod)
mutated_mod['func_5420'] = func_5420
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5421 = relay.var("var_5421", dtype = "float32", shape = (16, 5, 12))#candidate|5421|(16, 5, 12)|var|float32
func_5420_call = mutated_mod.get_global_var('func_5420')
call_5422 = func_5420_call(var_5421)
output = call_5422
func_5423 = relay.Function([var_5421], output)
mutated_mod['func_5423'] = func_5423
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5506 = relay.var("var_5506", dtype = "float64", shape = (8, 5, 7))#candidate|5506|(8, 5, 7)|var|float64
uop_5507 = relay.sin(var_5506.astype('float64')) # shape=(8, 5, 7)
bop_5519 = relay.maximum(var_5506.astype('int32'), relay.reshape(uop_5507.astype('int32'), relay.shape_of(var_5506))) # shape=(8, 5, 7)
uop_5522 = relay.tan(uop_5507.astype('float32')) # shape=(8, 5, 7)
output = relay.Tuple([bop_5519,uop_5522,])
output2 = relay.Tuple([bop_5519,uop_5522,])
func_5524 = relay.Function([var_5506,], output)
mod['func_5524'] = func_5524
mod = relay.transform.InferType()(mod)
var_5525 = relay.var("var_5525", dtype = "float64", shape = (8, 5, 7))#candidate|5525|(8, 5, 7)|var|float64
output = func_5524(var_5525)
func_5526 = relay.Function([var_5525], output)
mutated_mod['func_5526'] = func_5526
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5693 = relay.var("var_5693", dtype = "float32", shape = (16, 5, 13))#candidate|5693|(16, 5, 13)|var|float32
var_5694 = relay.var("var_5694", dtype = "float32", shape = (16, 5, 13))#candidate|5694|(16, 5, 13)|var|float32
bop_5695 = relay.mod(var_5693.astype('float32'), relay.reshape(var_5694.astype('float32'), relay.shape_of(var_5693))) # shape=(16, 5, 13)
output = relay.Tuple([bop_5695,])
output2 = relay.Tuple([bop_5695,])
func_5702 = relay.Function([var_5693,var_5694,], output)
mod['func_5702'] = func_5702
mod = relay.transform.InferType()(mod)
var_5703 = relay.var("var_5703", dtype = "float32", shape = (16, 5, 13))#candidate|5703|(16, 5, 13)|var|float32
var_5704 = relay.var("var_5704", dtype = "float32", shape = (16, 5, 13))#candidate|5704|(16, 5, 13)|var|float32
output = func_5702(var_5703,var_5704,)
func_5705 = relay.Function([var_5703,var_5704,], output)
mutated_mod['func_5705'] = func_5705
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5946 = relay.const([[[4.738677],[8.220808],[3.068984],[1.579588],[0.153606],[5.417929],[-1.685353],[1.866957],[5.493553],[-4.600995],[-8.352562]],[[-0.718459],[-9.672115],[-6.532866],[-2.911733],[-5.064761],[2.755289],[-8.836351],[9.428518],[-6.846354],[-5.553723],[1.129300]],[[-3.460172],[-2.108431],[7.714502],[8.306818],[0.786613],[6.255075],[1.079611],[2.336791],[4.873539],[2.291607],[0.333566]],[[6.626791],[3.653604],[4.537674],[7.932843],[-7.510398],[5.157945],[-2.369417],[8.297665],[-5.092016],[3.791059],[-9.315007]],[[0.165948],[-9.629522],[-4.817178],[-1.616935],[1.662492],[-0.727416],[0.402363],[-7.631466],[-4.591138],[-9.074459],[0.586803]],[[-1.004429],[-3.530788],[5.223416],[-3.661426],[-0.824313],[6.937686],[-5.964360],[-8.975576],[3.803070],[-1.572820],[-0.023115]],[[7.722523],[5.558358],[4.450311],[-0.829068],[-4.999894],[-0.313860],[3.949272],[-9.479960],[1.921914],[-1.065452],[5.565131]],[[-9.695874],[0.782621],[7.859395],[1.217740],[8.972602],[-3.792414],[-1.998255],[-4.368447],[-6.406523],[-4.779757],[0.070787]],[[-8.725380],[9.697292],[-5.278239],[-2.680483],[2.974009],[9.364261],[-4.425774],[-0.274778],[-7.115841],[-1.653428],[-3.274935]],[[-5.999427],[0.962692],[4.867778],[0.874186],[-6.762144],[-3.189946],[-0.056094],[5.151253],[-4.013790],[3.399564],[8.887701]],[[-1.960051],[-5.934096],[2.020315],[0.056167],[3.858814],[-4.607544],[-9.702412],[-4.897054],[-3.197244],[8.838798],[7.381645]],[[2.709440],[-3.872126],[6.094515],[9.339047],[8.364024],[-6.554100],[-0.488010],[2.808392],[-8.651624],[0.117064],[7.156656]],[[-8.918997],[-5.434081],[-2.650321],[-3.810231],[1.064211],[-1.932994],[3.503613],[3.144187],[-7.423247],[2.645352],[-6.630511]],[[-4.114413],[7.311494],[4.275971],[3.561217],[5.655509],[-4.474810],[-7.830594],[2.059123],[-2.951062],[-9.243142],[8.807332]],[[-3.550756],[-2.225007],[0.894586],[-8.698118],[0.597076],[0.623899],[1.511194],[-2.178773],[-5.630023],[-6.055461],[5.710973]],[[2.045617],[5.648074],[6.522090],[8.454157],[-8.486095],[5.969182],[-7.016611],[-2.942267],[1.836165],[-1.836986],[-9.965901]]], dtype = "float32")#candidate|5946|(16, 11, 1)|const|float32
uop_5947 = relay.sinh(const_5946.astype('float32')) # shape=(16, 11, 1)
func_2831_call = mod.get_global_var('func_2831')
func_2837_call = mutated_mod.get_global_var('func_2837')
const_5955 = relay.const([[5,-7,10,7,-1,-9,9,1,3,-4,9,-8,-2,2,4,-4,7,9,-1,-5,5,9,9,1,-5,1,-9,-10,9,-10,-9,-1,8,-4,-6,-3,4,-5,3,7,1,2,4,-10,4,-5,4,9,-5,3,1,-2,-8,-10,-5,1,-2,5,-4,8,-4,-1,6,-2,-3,2,-9,-1,-5,9,7,-5,2,-4,6,-4,-4,1,-7,10,-10,-5,1,7,6,-6,-6,1,-1,-4,-8,1,5,1,7,-1,-8,-5,4,-4,7,-5,-1,3,-3,2,7,-3,-5,6,10,8,-6,8,6,10,4,-8,-2,-8,8,-8,1,-9,8,8,-5,-7,-1,2,-6,1,-8,4,10,8,-2,-2,8,9],[9,5,6,-8,4,4,-2,2,4,3,8,1,-8,10,6,-3,9,-10,9,-3,8,6,2,2,-4,1,6,9,-7,-1,2,-10,3,7,-8,8,-6,7,-2,6,-6,7,9,8,-9,-8,5,2,-8,2,7,-3,6,-3,-1,-4,7,8,9,3,5,9,-1,-7,-9,-6,-1,-1,1,7,4,8,5,7,-2,-4,-4,-6,-5,4,4,-2,9,3,-1,3,-2,-7,8,2,6,10,8,-5,-1,-9,-8,-1,8,8,-2,5,5,10,-5,5,8,-3,1,1,6,-8,-3,-3,1,-10,-4,9,-6,3,3,5,5,-10,-8,2,-1,8,9,6,-3,-5,3,8,-4,3,3,9,-7,-8],[-9,9,-9,5,10,-10,-8,-2,8,10,-3,1,10,3,10,4,-10,-9,-2,8,6,7,-2,6,-8,-4,-9,6,5,-1,-1,-4,8,3,-8,1,1,-7,-6,-5,-9,-7,3,2,-3,5,-5,-6,-4,2,1,3,1,7,5,4,-10,-6,4,-5,8,2,10,-8,-8,4,4,-3,1,2,1,-2,7,-6,-6,8,10,9,10,4,-8,7,-10,-8,-10,7,-8,-2,8,8,8,10,-7,-10,8,3,4,9,10,-3,8,2,2,1,-10,4,4,-8,4,-8,-1,8,10,-7,5,-3,-3,-8,-6,3,-7,-6,2,4,1,8,-2,7,-4,-4,-6,1,-1,4,-8,-5,-5,-8,4,-5],[-3,-7,1,-8,-10,-5,1,-6,3,-10,-9,7,-6,5,6,-7,2,3,7,8,6,-4,9,9,-3,4,6,8,-4,-5,2,9,-5,-7,6,2,9,6,7,10,6,2,3,5,-4,10,-2,9,-3,-10,2,-10,-7,8,4,3,-10,-4,-8,2,9,9,-1,9,-7,-3,-10,-1,-9,-2,-7,-3,-2,1,5,-4,-7,8,-1,2,-7,-6,-7,-5,-6,-9,3,-1,10,7,-7,-2,3,-2,8,-2,-10,5,7,-4,-6,-9,7,-6,-4,-4,5,7,7,-4,-3,3,7,1,-7,-1,9,4,8,5,-4,-4,7,6,-9,1,9,7,10,-1,4,10,10,3,5,-1,-1,7,-4,-9],[5,9,4,9,-6,2,10,7,-7,9,2,-10,-7,-8,2,-6,-9,-1,2,8,-10,-2,-4,4,1,3,5,6,-10,3,-4,-1,7,-8,3,9,-8,-8,1,-4,-5,-8,10,-4,-10,4,-7,9,-8,5,4,-7,-6,-7,-4,9,-7,4,3,-10,5,7,9,-8,-2,8,-6,10,-9,8,7,-5,-6,-2,6,-2,-5,7,-4,3,-7,-3,8,-6,8,10,-3,10,5,10,3,6,-2,6,-7,3,-1,-10,10,8,2,-5,-5,6,-6,-5,10,-1,-4,2,5,7,2,5,-3,-1,-10,-10,1,7,4,-8,-3,9,-3,9,8,4,-3,-3,-3,-5,-1,10,-1,-9,8,1,8,9],[1,-9,-5,-1,3,7,8,-9,-7,1,5,-6,9,6,-5,9,4,7,3,8,-1,4,-8,-8,-9,6,-9,8,-8,-5,9,1,4,-1,-5,4,5,-5,10,-8,10,-4,-6,9,5,7,10,7,7,2,8,-7,-6,6,6,5,-9,7,1,9,1,-2,-5,6,1,-3,-8,2,5,-9,3,6,-5,7,-8,6,2,10,-8,-9,-8,8,7,9,-7,2,2,-1,-1,-5,-7,-8,-8,8,7,-5,-2,-9,2,-10,6,-8,-9,7,7,7,-4,5,-3,10,-10,5,9,-10,3,7,-1,-10,-3,-10,-3,-6,-4,-1,-2,9,7,4,1,6,-6,-5,-9,9,4,-4,-8,5,1,-1],[6,-7,-5,8,6,9,-8,-9,9,-1,-7,1,-5,-9,10,-3,1,1,10,-3,-5,6,-7,2,-3,1,8,-5,-8,-1,-6,7,4,-5,-9,-3,-3,10,4,-7,5,-6,2,5,-8,8,-3,-3,-5,5,9,10,7,-3,2,-9,-8,1,8,9,4,-2,-2,-6,-5,1,-9,9,1,-6,-10,1,9,9,7,5,-3,10,2,-4,-9,5,6,-3,-6,1,5,5,5,3,-1,-3,3,-2,1,4,-3,-7,4,7,10,-5,1,1,3,-5,-2,1,-6,-2,10,-9,8,-1,8,10,5,3,5,-9,-7,3,7,-7,-6,1,7,-9,6,5,8,-9,1,9,7,-6,-4,-6,-4,5],[-1,6,-4,3,6,1,-3,7,6,2,5,10,9,-2,2,-3,-4,3,5,-8,-3,-5,1,4,9,3,-6,-5,2,7,5,-6,-8,-6,4,4,-3,8,2,-3,10,6,10,2,-9,5,9,-4,10,-2,6,-6,6,4,7,-8,5,2,5,7,-5,7,-4,4,3,-10,3,-7,-1,-6,10,3,8,-1,3,7,8,3,7,6,3,-6,-4,-5,3,3,-7,-7,6,-8,-5,7,10,-5,-5,-4,1,-5,2,1,-1,-9,3,-5,-3,7,9,1,-2,-4,-1,5,10,-6,10,-10,-2,-1,-4,-1,9,-6,2,8,6,-2,2,-7,-9,-7,-10,2,-5,-6,-7,-7,-5,-5,-10,2],[6,-3,3,-3,4,-3,-8,-10,-6,-3,3,1,4,-6,8,-2,-4,-3,6,-1,-7,-9,-9,-7,5,-2,-1,-8,-9,-1,4,3,8,-7,3,9,4,2,-4,10,10,-8,5,10,-2,-2,4,-6,-3,-1,1,-4,-5,-8,-7,10,2,-2,6,4,-3,-4,-4,-1,3,1,1,9,-2,-7,-7,10,-9,-8,-4,-2,-1,-6,-7,1,-9,4,-8,8,-9,-10,-3,6,5,-6,-8,-6,5,3,-8,-3,-7,-9,-1,-4,1,7,-8,-6,8,-10,10,-5,-7,-8,5,4,-10,4,7,10,-5,3,-9,-4,1,-5,-1,6,1,3,-5,7,-9,5,-2,-5,3,10,-7,10,10,10,8,-1],[2,-6,-2,-2,-3,-6,-5,1,7,1,8,1,-9,-3,-9,-7,-8,-5,3,1,8,2,-6,-1,-6,8,-2,-4,-2,-9,9,9,6,-10,-3,8,6,-5,2,-7,6,2,4,10,-3,6,-4,3,-9,10,4,5,7,4,6,8,9,-4,8,-9,-5,-2,8,-9,-8,10,7,4,7,-5,-1,7,-5,-1,6,-1,-6,8,-10,-2,-5,2,10,-8,-2,-2,-8,-3,1,-3,5,-6,10,-7,-2,-1,-3,-9,-7,-4,1,-3,6,-1,1,3,-1,9,4,2,-4,3,3,2,2,-10,1,-4,-9,-5,-1,6,-7,5,-8,-9,9,-2,5,-4,-2,-10,6,-4,-8,-5,5,-3,4,-8],[-7,7,-9,10,-4,1,-9,-3,-2,3,-3,-1,8,5,-3,6,-9,8,3,4,-4,-7,3,-1,-6,6,-1,-8,-2,2,-5,7,-5,-4,5,-8,-2,-4,-7,-3,-9,10,8,10,-2,-7,-5,3,-3,8,8,7,-3,6,-7,-10,-9,-8,-2,-7,3,3,2,5,6,3,9,3,-2,1,7,-8,6,3,4,-2,6,4,3,3,-3,1,-8,-8,-3,-10,2,9,3,6,2,4,-3,-7,-10,-6,-9,-6,9,-5,-3,-3,2,5,-3,-3,-10,4,5,-2,2,-7,2,5,-9,6,-7,7,2,-7,4,10,6,7,-3,-8,4,-5,-3,10,5,2,-6,3,4,10,9,9,-4,-1],[-5,4,-6,-10,3,1,-7,-8,-5,-8,1,4,-2,7,1,-2,9,-10,7,4,-9,8,9,8,8,-10,7,-9,8,2,-6,-8,2,-9,-7,1,-9,1,-4,9,-6,-1,4,-2,7,-2,10,-9,-7,5,1,-9,4,8,10,10,-8,-10,2,-3,-6,4,-6,-10,1,-6,-1,5,-6,3,-10,-1,-5,-1,1,-6,10,4,-2,8,10,-8,-10,8,5,9,6,6,-10,-6,10,9,3,7,-10,1,-10,2,-3,3,4,7,-3,-1,9,-8,-1,-2,-2,2,-3,-1,3,10,-6,5,-8,-1,-7,-6,2,-9,10,-9,-8,4,3,2,-9,-3,-9,4,-5,8,7,-8,9,2,-9,-2]], dtype = "int32")#candidate|5955|(12, 140)|const|int32
var_5956 = relay.var("var_5956", dtype = "float32", shape = (405,))#candidate|5956|(405,)|var|float32
var_5957 = relay.var("var_5957", dtype = "int64", shape = (144, 2))#candidate|5957|(144, 2)|var|int64
var_5958 = relay.var("var_5958", dtype = "int32", shape = (48,))#candidate|5958|(48,)|var|int32
call_5954 = relay.TupleGetItem(func_2831_call(relay.reshape(const_5955.astype('int32'), [16, 7, 15]), relay.reshape(var_5956.astype('float32'), [405,]), relay.reshape(var_5957.astype('int64'), [288,]), relay.reshape(var_5958.astype('int32'), [2, 24]), ), 2)
call_5959 = relay.TupleGetItem(func_2837_call(relay.reshape(const_5955.astype('int32'), [16, 7, 15]), relay.reshape(var_5956.astype('float32'), [405,]), relay.reshape(var_5957.astype('int64'), [288,]), relay.reshape(var_5958.astype('int32'), [2, 24]), ), 2)
uop_5963 = relay.log(uop_5947.astype('float64')) # shape=(16, 11, 1)
uop_5965 = relay.acos(uop_5963.astype('float32')) # shape=(16, 11, 1)
bop_5983 = relay.maximum(uop_5965.astype('int64'), relay.reshape(uop_5963.astype('int64'), relay.shape_of(uop_5965))) # shape=(16, 11, 1)
uop_5987 = relay.asinh(uop_5965.astype('float64')) # shape=(16, 11, 1)
func_5420_call = mod.get_global_var('func_5420')
func_5423_call = mutated_mod.get_global_var('func_5423')
const_5994 = relay.const([-2.327923,-0.992484,-3.408166,-9.046117,-0.798750,-3.628590,-0.493974,9.603927,-5.147158,-1.102860,0.505522,-4.141453,-9.775673,3.421716,-0.600077,1.751407,5.704374,-8.239940,-5.692553,-3.849660,-6.199746,3.487025,-0.953577,5.307595,4.398867,6.964902,3.994923,-5.239097,9.945963,7.966606,7.677869,-0.169059,-7.402326,-6.766501,5.466401,0.897163,-1.149358,5.678590,7.761120,4.622576,-2.540614,4.568441,-2.252352,6.727852,1.171071,5.595416,1.827208,-9.772847,-8.668287,-6.836692,4.143838,-7.757150,1.742048,-4.521459,-5.395349,7.113743,3.667503,-5.783292,-9.619269,0.238554,-3.969025,-1.640119,-6.305615,5.340172,-7.765820,-9.608722,-9.442951,2.084874,-5.045636,-6.469753,1.655722,7.282696,2.247973,-1.732411,8.590923,7.193552,8.352431,-1.099446,-5.845481,-4.408703,5.739254,-3.678402,2.558271,1.616078,-3.805812,5.963033,3.477818,-4.972753,-4.236491,-5.990788,-3.217918,-3.483569,-6.770573,1.199599,-6.859931,5.840180,-1.777322,3.091730,1.845414,-8.353882,6.419488,5.066372,-5.056239,9.336921,-4.793965,3.920472,4.865257,-4.749024,-1.895136,4.196208,-1.244445,-1.678210,-6.658531,-6.033309,1.706908,1.540633,-1.140165,8.524812,-7.324079,-7.910737,0.279910,1.119275,2.500143,-2.144353,8.354512,-0.767334,-9.410294,3.960420,4.387485,-2.674728,-8.548626,1.122854,-5.833566,8.648408,3.494098,7.568355,5.687855,1.898770,1.899750,-7.899668,7.971132,-4.630094,-3.781303,0.605868,1.217752,-1.707452,0.540029,7.396407,-7.826127,5.982259,-0.089709,-5.291382,6.715369,-6.303392,6.302435,-1.957016,2.968413,-0.315145,-8.991927,5.401611,2.899417,5.580782,1.040659,-7.002005,0.095914,4.706128,4.574421,-6.767098,-8.195537,6.499221,9.046259,-1.280367,-9.606718,-8.179288,-9.551688,-9.807945,9.317910,9.366467,-1.476737,8.054305,1.558487,9.847852,-7.491560,5.169774,-1.320235,8.964732,-7.423135,8.876857,-5.265507,0.134351,4.565059,2.424530,0.348470,-2.218169,-7.706657,-0.229426,-9.703057,-7.525676,9.278737,6.301143,-6.201080,2.587057,0.466023,1.122325,9.464399,-5.131564,1.800859,6.133126,-0.981541,-5.617630,3.601076,-1.632599,5.576610,8.507778,4.835757,-5.315163,7.423085,-7.448865,-0.805121,-9.874851,0.053087,6.985140,-4.433534,7.020495,-8.175070,-3.806514,-3.879979,9.723345,5.980357,-0.096035,-2.136785,6.707938,6.260771,-4.000109,2.908933,3.052738,4.204852,9.901221,2.022863,5.385085,0.321413,-3.299792,-1.293869,4.202594,-7.981071,-4.382547,-3.416967,-4.374201,-3.918607,-6.922626,2.088733,-9.572367,-0.612747,0.619815,-4.050114,7.463267,-2.432915,-0.535913,1.017784,-4.273275,3.220365,-0.856853,-3.733553,8.646879,4.996821,4.884490,4.840176,-8.428268,3.760965,-2.520451,-4.487013,6.960501,6.785434,8.210982,4.402513,-7.599219,5.318623,4.723019,5.985478,-0.242772,-7.827793,6.915528,0.530902,4.952119,1.208920,-0.967234,3.521006,-8.210395,1.305160,3.433749,-0.298129,-7.213090,4.784772,7.537316,-8.904618,5.313081,9.389206,2.313168,-4.720994,-5.538404,-2.757257,9.356285,-0.841536,-8.087239,-1.456760,4.003550,4.768394,-1.045598,0.258031,7.601281,5.398387,-6.703360,0.674333,7.796749,-3.675802,-2.852960,-8.916347,-1.146428,5.290064,4.630514,-5.369206,-7.363958,-6.800483,-0.462669,0.891995,1.572605,7.116069,1.635893,3.790115,-1.064050,-3.230325,-1.037374,6.069298,-2.541429,5.318278,-5.155498,-1.114091,6.476410,0.082403,-1.560819,2.821853,6.948783,4.983650,-2.634785,9.629437,-0.461702,1.082466,-3.966806,0.648914,7.480811,-4.717977,-1.218498,9.402860,4.504109,-1.276344,4.629683,-0.679198,-3.324144,2.494455,-4.008328,6.552884,8.032680,-2.232953,9.118475,-5.585533,-4.221364,-0.203041,9.589807,5.733961,-9.149302,-6.438601,4.680929,-2.376843,-7.849904,-5.722213,-5.526937,3.731530,-2.687087,-2.497219,9.626887,6.053706,5.513253,-4.128597,7.082152,-1.207819,1.047492,6.240373,5.680869,-2.476456,4.670980,-3.525717,9.538874,4.345370,5.302981,5.539094,-8.599007,4.402513,5.919368,-2.021730,9.790517,-0.642119,0.120792,6.023075,-5.796529,-3.032432,3.539301,3.746570,-8.209841,-0.085261,-6.521728,-6.993211,-1.243527,5.414497,-7.700521,-3.810191,-1.756543,-3.292303,-5.112620,-8.761961,-1.711276,6.488546,4.174961,-7.191477,2.937677,-9.368826,-7.297383,5.976379,-2.062195,-7.196087,-7.956131,-7.757527,-8.316011,7.906945,-8.046225,7.192925,-3.361695,-0.703698,6.947737,-3.322135,-6.629565,6.856737,2.116482,8.946442,2.942911,-7.945047,1.984193,-8.605502,-2.120100,-7.786526,1.906224,3.307646,-1.753706,4.436154,-5.908198,7.913221,-8.651796,0.958083,1.846869,2.484778,7.806756,-2.004542,-8.244865,-8.582875,-0.767873,-7.065021,-9.879658,-4.132899,8.520496,-2.918721,5.927550,-3.828933,-2.322266,3.913020,7.217924,-4.532219,3.417679,8.804681,2.845219,-4.881446,-0.299280,5.665197,-2.024771,-3.129532,-6.446639,0.655849,-2.694763,7.655516,5.666232,-5.856362,-6.108648,6.104378,0.482402,0.873363,-7.533340,5.812314,-6.323977,3.763094,-2.579278,4.381268,4.096786,-9.931287,-6.661212,-0.197630,-3.434486,-3.931627,-5.726979,-6.111708,-0.543589,-5.762324,3.487376,-0.436138,2.938434,-0.802965,4.610559,-1.714350,-8.708473,-2.356762,-9.599898,7.393041,4.738928,8.409605,0.529654,1.033790,-4.248697,1.477763,7.690681,9.483557,0.281822,-9.886475,9.137759,3.843498,3.353509,0.835584,0.814251,4.211011,-6.586481,-1.188660,-8.894368,-2.656778,9.616709,9.390016,0.563733,4.114854,-6.461695,4.081621,-4.755674,-6.077673,-6.501621,-0.626585,-0.644958,-5.220334,-4.747324,-5.327209,-5.740833,3.841625,-7.968101,2.817408,-9.515909,3.263716,-7.151613,-3.763528,9.440575,1.493879,-1.489234,8.745226,9.196918,-5.188287,-3.335283,-6.770331,1.139372,9.645396,-2.601617,3.702448,4.080281,-2.148541,5.936967,2.021800,0.736722,-5.496164,-8.714850,-4.240094,9.072625,0.013574,9.279688,-0.419112,-6.756859,4.564540,-2.532323,6.803762,2.438713,-3.080937,-3.197907,5.847687,-8.199578,-0.907059,-0.112246,-6.551424,3.775728,2.286217,2.420646,7.519424,6.529338,3.169290,8.175154,-8.608193,-1.784941,3.062490,-6.096778,-7.216383,-5.760983,0.573219,0.522885,-0.537326,0.989784,1.031783,9.926124,-3.863411,0.123803,8.471869,-7.497262,1.438863,-1.423633,-1.561005,-7.243401,5.574917,3.700061,3.630750,-9.785938,5.810967,0.539551,-9.232819,0.599063,-2.885530,-5.720226,9.917469,1.955013,9.693508,6.417995,-8.672408,-7.779305,-0.457170,-7.088813,-6.994790,1.532294,-3.596648,7.457106,7.985000,-3.536490,7.989514,0.546585,6.619147,-6.694728,-2.469400,-8.209859,7.941092,-5.366006,-0.081267,9.080336,6.820583,-9.846893,8.257128,2.697543,-8.694820,-5.894716,-1.819302,-8.602336,-5.366347,5.337068,-3.408692,0.635875,-6.098364,4.459631,-3.907481,-5.193792,3.685503,-7.737480,-0.214953,-5.804252,8.637095,-7.676802,-0.354433,5.211700,6.457173,-4.360666,3.394308,0.440745,3.685483,-2.265982,1.653280,-5.035353,-9.636999,-1.096238,-0.029814,9.128008,9.362741,9.079955,6.920523,8.411064,0.640518,-9.553893,8.776094,9.391548,3.766929,7.966731,-4.927302,2.589447,-1.518438,0.228286,-2.122694,-5.705054,-7.210368,-2.293199,-5.895136,0.646259,7.418011,-1.308338,5.025675,7.655064,-5.583791,-7.764921,-1.539990,5.366300,4.150679,4.351324,3.587187,8.973777,-0.623040,3.203351,2.182537,-8.677577,0.838131,-4.988871,-1.086774,5.111990,-1.926629,0.079377,3.969254,7.497565,4.209563,6.432588,-2.206045,7.076998,-4.455715,8.819320,6.453393,-9.965133,0.048160,8.225735,-1.195142,-9.686232,-4.209576,-6.967702,-0.131971,-7.829966,-0.626806,-8.877850,5.923480,9.480743,2.381517,4.996403,8.024235,4.853265,-4.867721,-2.302155,7.451707,8.061785,5.655895,6.131634,2.978312,0.887417,0.622875,-6.896045,0.280756,-2.418719,5.223957,3.103032,9.313008,3.216896,-8.753836,0.766631,-5.776211,0.977716,-7.886674,1.707741,2.471603,5.279619,-0.595931,4.987242,-9.081360,-6.868087,0.975235,-0.955225,-1.774722,2.759040,3.007379,-1.780823,8.950562,3.552237,9.122748,-2.512810,-2.163431,5.406858,0.847814,-0.188000,5.588276,7.086471,9.060765,1.787761,0.096566,-9.544399,7.341793,-8.972441,-9.726619,-9.864899,-0.811394,-9.748524,2.031747,-8.522829,-6.876277,-5.519229,3.842717,4.821203,3.992971,9.416786,9.323988,8.124245,-4.917830,3.778419,-3.433940,-7.572231,-4.550890,4.511402,5.134483,1.501160,-4.129257,0.642964,7.994892,-2.014695,0.410497,-8.690420,2.864161,-0.653768,1.853710,8.261966,6.097815,9.850050,-9.934784,5.626381,-9.140942,-2.231129,-4.840614,-7.077863,-5.521392,-4.474323,-0.228180,-3.173765,3.331997,-6.122770,-5.773229,-4.174031,5.270468,-8.153594,-8.906939,6.722438,-2.659777,6.833052,1.077800,-6.640260,8.852986,-2.376756,9.015176,7.402547,8.198991,-8.998300,3.987068,1.886642,-5.593756,3.795856,-1.596326,9.012619,-4.105411,8.378435,-7.141753,6.011661,3.528975,-9.325921,-8.429822,8.926113,6.049984,5.338913,-4.440122,7.391072,-9.008136,5.012082,-8.566122,4.507016,6.374808,-8.886155,7.515853,9.241638,6.327499,6.360614,-1.933835,4.891899,-7.243404,-4.718299,-0.923105,8.231752,-9.522668,1.111771,9.357025,3.252322,1.952575,2.550570,2.588110,7.494882,-2.380263,-4.645630,8.524643,-6.699985,6.121242,-9.262253,-7.766078,-3.447750,-7.251107,6.712125,5.728612,7.983315,0.221237,3.874931,8.608508,8.035844,0.334019,-6.759179,-7.176752,0.730764,-1.414553,4.967085,3.631411,0.404960,0.795799,-5.914426,-4.863817,6.926747,-2.188865,-0.940845,-3.604175,2.995097,-8.595494,-5.213089,-0.876999,-2.432384,-4.433159,0.925352,2.209501,4.254988,-1.948307,1.551745,8.736001,-3.829901], dtype = "float32")#candidate|5994|(960,)|const|float32
call_5993 = func_5420_call(relay.reshape(const_5994.astype('float32'), [16, 5, 12]))
call_5995 = func_5420_call(relay.reshape(const_5994.astype('float32'), [16, 5, 12]))
uop_6004 = relay.exp(uop_5987.astype('float32')) # shape=(16, 11, 1)
bop_6006 = relay.multiply(uop_6004.astype('float32'), relay.reshape(bop_5983.astype('float32'), relay.shape_of(uop_6004))) # shape=(16, 11, 1)
func_2688_call = mod.get_global_var('func_2688')
func_2690_call = mutated_mod.get_global_var('func_2690')
var_6015 = relay.var("var_6015", dtype = "float32", shape = (1, 468))#candidate|6015|(1, 468)|var|float32
call_6014 = func_2688_call(relay.reshape(var_6015.astype('float32'), [4, 13, 9]))
call_6016 = func_2688_call(relay.reshape(var_6015.astype('float32'), [4, 13, 9]))
bop_6021 = relay.bitwise_and(uop_5987.astype('int16'), relay.reshape(uop_6004.astype('int16'), relay.shape_of(uop_5987))) # shape=(16, 11, 1)
output = relay.Tuple([call_5954,const_5955,var_5956,var_5957,var_5958,call_5993,const_5994,bop_6006,call_6014,var_6015,bop_6021,])
output2 = relay.Tuple([call_5959,const_5955,var_5956,var_5957,var_5958,call_5995,const_5994,bop_6006,call_6016,var_6015,bop_6021,])
func_6026 = relay.Function([var_5956,var_5957,var_5958,var_6015,], output)
mod['func_6026'] = func_6026
mod = relay.transform.InferType()(mod)
mutated_mod['func_6026'] = func_6026
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6026_call = mutated_mod.get_global_var('func_6026')
var_6028 = relay.var("var_6028", dtype = "float32", shape = (405,))#candidate|6028|(405,)|var|float32
var_6029 = relay.var("var_6029", dtype = "int64", shape = (144, 2))#candidate|6029|(144, 2)|var|int64
var_6030 = relay.var("var_6030", dtype = "int32", shape = (48,))#candidate|6030|(48,)|var|int32
var_6031 = relay.var("var_6031", dtype = "float32", shape = (1, 468))#candidate|6031|(1, 468)|var|float32
call_6027 = func_6026_call(var_6028,var_6029,var_6030,var_6031,)
output = call_6027
func_6032 = relay.Function([var_6028,var_6029,var_6030,var_6031,], output)
mutated_mod['func_6032'] = func_6032
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6474 = relay.var("var_6474", dtype = "int8", shape = ())#candidate|6474|()|var|int8
var_6475 = relay.var("var_6475", dtype = "int8", shape = (1, 9))#candidate|6475|(1, 9)|var|int8
bop_6476 = relay.subtract(var_6474.astype('int8'), var_6475.astype('int8')) # shape=(1, 9)
func_2688_call = mod.get_global_var('func_2688')
func_2690_call = mutated_mod.get_global_var('func_2690')
const_6484 = relay.const([[0.368732,-2.256910,3.575960,5.881407,-7.367280,1.721546,9.219155,1.848138,-0.105378,-6.587382,-3.723778,6.269318,3.925311,9.861032,6.014471,7.058629,-3.928622,1.424155,-4.066763,8.041833,9.078259,-6.578500,-7.855109,-0.439421,9.003127,-1.728880,2.716714,-6.566034,-4.861796,-2.150002,2.482661,-1.880281,2.133708,2.195497,-3.178956,-8.178625,7.287489,9.003014,7.124869,-8.364427,-6.635101,-4.645247,7.513110,-3.089941,1.963329,2.934875,-3.353030,-2.816082,2.185073,7.661547,9.878611,-3.325650,0.501624,-1.263566,8.521610,5.262373,4.989066,4.190234,-5.466295,-5.621965,-2.322752,3.407197,-2.817215,-3.557923,2.933809,8.755622,-0.893739,-4.394287,8.547993,-4.369346,9.431992,-8.526581,2.642840,4.544244,3.584415,8.868449,1.601537,2.711021,8.881295,-9.117082,3.841045,0.432594,2.870104,5.223476,-1.573950,3.943081,-3.685253,7.912919,-4.027677,1.067638,-7.529164,9.507219,3.626831,1.563577,4.026012,-4.526603,-9.533574,-4.775606,7.728751,-7.591408,9.532964,8.500830,-1.362559,7.724575,-2.676622,-6.476207,-4.889019,-1.767167,-8.282445,-1.796840,0.976076,9.298748,-8.032795,4.069607,1.384966,6.623502,-9.893991,-5.246476,7.814608,2.094936,2.412204,2.315074,2.309660,5.722849,1.850690,9.334534,-2.720037,-0.161405,-3.733735,-1.173113,-2.698935,-1.064490,6.815942,9.870259,9.076027,-9.468783,-4.775492,-6.983917,9.423931,-4.893161,6.703461,-1.917923,-8.179373,-0.568674,-5.254479,-1.653787,-3.308496,0.275166,-2.594823,5.731268,0.118038,-2.061066,3.812866,-8.040416,-0.402375,4.381020],[-8.580455,-4.561265,1.428906,-6.149205,9.311076,-3.802839,0.786747,8.424511,-5.799166,5.249759,-8.410841,5.898618,-9.434641,7.100809,-4.770100,-0.402062,-7.654467,4.947210,4.149524,3.375686,6.894359,3.867134,-5.538262,-0.094502,1.246465,-0.252163,7.440875,8.867898,0.211266,-4.797649,0.097842,4.080783,1.461186,8.211502,-0.639795,-3.782816,-7.711368,-2.302992,-2.391169,7.603420,9.886823,-5.954416,-9.495017,-9.074265,-8.359778,8.597907,-1.858064,1.270434,-5.777356,-8.778068,9.842639,-4.505041,-0.673397,-0.060859,5.108533,-1.416983,-4.176002,0.087796,-9.543656,-7.412946,-5.930691,5.256238,-0.408287,9.625852,0.087271,3.959166,-5.162335,7.795568,5.591741,8.226611,4.037554,3.896415,-1.268582,-2.351642,-5.818015,1.524472,3.747805,1.742213,4.451868,-4.995474,0.025732,-1.414705,8.973395,-3.523847,6.285313,0.504036,-8.862766,-6.053496,6.125872,9.201784,-0.732518,-8.426156,1.679154,5.356827,-0.299940,-9.296330,-1.180341,5.723847,-9.774227,-1.055604,-4.405692,-0.532826,-3.938776,4.120804,-1.522362,3.832426,-8.597332,-9.820091,-6.311468,-7.146938,9.364319,-9.152487,5.402723,8.126408,2.275488,-9.822635,1.033750,-5.926309,7.289296,5.577462,9.607702,-4.504086,-7.829030,3.901819,5.989919,-9.310780,-3.641699,-3.817586,-0.773842,6.160277,5.114667,1.386785,0.729761,-7.373657,-8.885390,-4.824653,-8.071596,7.541744,1.611659,2.053026,-1.491783,3.257037,-5.332332,6.235135,9.607270,4.201932,-1.355179,6.423281,-5.925426,-5.206563,5.035006,-1.893060,-1.143089,-2.365180,2.042424,-7.008319],[0.109052,-8.151514,8.930693,4.187144,0.165971,6.505083,5.183692,8.062198,-6.625590,-7.775069,-0.732756,2.589546,-1.169706,-6.060603,-6.328064,-2.256422,-1.091810,6.897229,-3.697169,-1.216592,4.260098,7.023875,-1.104246,3.301943,-0.088637,-1.622244,-7.869987,7.090445,9.620643,-7.637719,-1.810763,-8.812572,-6.610921,-6.220432,-7.929230,-5.240046,-7.428000,-7.526976,-9.334996,9.771795,-7.687734,6.305781,-1.675893,3.277154,-8.604193,8.297100,-6.780975,9.194210,6.428109,8.582990,-6.775801,-3.145742,8.188789,8.625143,-6.354976,0.047697,-8.190874,3.313283,8.246696,-4.026273,7.581984,6.817761,0.990241,-9.948331,-9.034019,-8.743627,6.679984,-4.505899,-6.477680,-0.533363,-5.659236,3.417989,-0.270921,5.516378,4.467766,9.643516,7.445913,3.311912,0.490008,-3.645249,5.509062,-0.541014,9.686708,-9.068415,-1.150535,-8.799415,-3.697694,0.304862,-0.712939,-5.207358,-5.909620,-4.517956,-1.824389,4.657310,6.652948,-5.039529,-7.909035,6.011380,5.378389,9.274967,-1.181306,-9.116968,3.093224,0.310512,7.540326,-3.254652,6.597867,0.939289,-9.393935,1.097768,-7.041012,-4.780087,-3.203785,-0.824268,6.094783,8.840174,7.847160,-3.428009,1.315289,9.133306,-9.364866,9.353591,-9.436520,8.507247,2.828987,3.342144,-5.084173,-4.784521,1.685948,-5.326350,1.973046,8.401030,-6.617947,5.805393,7.335150,-6.704818,-2.051082,-3.196277,-1.309237,6.379833,-8.598836,-7.613956,0.318028,-3.569834,3.929440,6.238291,-6.379966,-7.036652,4.755500,6.729691,-0.837352,-4.087948,2.437664,4.717538,-6.780182,8.519547]], dtype = "float32")#candidate|6484|(3, 156)|const|float32
call_6483 = func_2688_call(relay.reshape(const_6484.astype('float32'), [4, 13, 9]))
call_6485 = func_2688_call(relay.reshape(const_6484.astype('float32'), [4, 13, 9]))
output = relay.Tuple([bop_6476,call_6483,const_6484,])
output2 = relay.Tuple([bop_6476,call_6485,const_6484,])
func_6491 = relay.Function([var_6474,var_6475,], output)
mod['func_6491'] = func_6491
mod = relay.transform.InferType()(mod)
mutated_mod['func_6491'] = func_6491
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6491_call = mutated_mod.get_global_var('func_6491')
var_6493 = relay.var("var_6493", dtype = "int8", shape = ())#candidate|6493|()|var|int8
var_6494 = relay.var("var_6494", dtype = "int8", shape = (1, 9))#candidate|6494|(1, 9)|var|int8
call_6492 = func_6491_call(var_6493,var_6494,)
output = call_6492
func_6495 = relay.Function([var_6493,var_6494,], output)
mutated_mod['func_6495'] = func_6495
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6564 = relay.var("var_6564", dtype = "int64", shape = (13, 15, 15))#candidate|6564|(13, 15, 15)|var|int64
var_6565 = relay.var("var_6565", dtype = "int64", shape = (13, 15, 15))#candidate|6565|(13, 15, 15)|var|int64
bop_6566 = relay.right_shift(var_6564.astype('int64'), relay.reshape(var_6565.astype('int64'), relay.shape_of(var_6564))) # shape=(13, 15, 15)
output = relay.Tuple([bop_6566,])
output2 = relay.Tuple([bop_6566,])
func_6569 = relay.Function([var_6564,var_6565,], output)
mod['func_6569'] = func_6569
mod = relay.transform.InferType()(mod)
mutated_mod['func_6569'] = func_6569
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6569_call = mutated_mod.get_global_var('func_6569')
var_6571 = relay.var("var_6571", dtype = "int64", shape = (13, 15, 15))#candidate|6571|(13, 15, 15)|var|int64
var_6572 = relay.var("var_6572", dtype = "int64", shape = (13, 15, 15))#candidate|6572|(13, 15, 15)|var|int64
call_6570 = func_6569_call(var_6571,var_6572,)
output = call_6570
func_6573 = relay.Function([var_6571,var_6572,], output)
mutated_mod['func_6573'] = func_6573
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6579 = relay.var("var_6579", dtype = "float64", shape = (16, 8, 5))#candidate|6579|(16, 8, 5)|var|float64
uop_6580 = relay.acos(var_6579.astype('float64')) # shape=(16, 8, 5)
output = uop_6580
output2 = uop_6580
func_6582 = relay.Function([var_6579,], output)
mod['func_6582'] = func_6582
mod = relay.transform.InferType()(mod)
mutated_mod['func_6582'] = func_6582
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6583 = relay.var("var_6583", dtype = "float64", shape = (16, 8, 5))#candidate|6583|(16, 8, 5)|var|float64
func_6582_call = mutated_mod.get_global_var('func_6582')
call_6584 = func_6582_call(var_6583)
output = call_6584
func_6585 = relay.Function([var_6583], output)
mutated_mod['func_6585'] = func_6585
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6930 = relay.const([[[-4,-8,5]],[[-5,-2,7]],[[-6,7,9]],[[8,1,-8]],[[2,-4,-9]],[[4,-9,-4]],[[-2,3,5]],[[-2,-8,7]],[[-10,-9,-10]],[[10,7,6]],[[-6,9,-5]],[[-10,-2,-3]],[[-2,-8,-5]],[[-8,-3,5]],[[-6,-5,10]]], dtype = "uint64")#candidate|6930|(15, 1, 3)|const|uint64
var_6931 = relay.var("var_6931", dtype = "uint64", shape = (15, 8, 3))#candidate|6931|(15, 8, 3)|var|uint64
bop_6932 = relay.greater_equal(const_6930.astype('bool'), var_6931.astype('bool')) # shape=(15, 8, 3)
output = relay.Tuple([bop_6932,])
output2 = relay.Tuple([bop_6932,])
func_6937 = relay.Function([var_6931,], output)
mod['func_6937'] = func_6937
mod = relay.transform.InferType()(mod)
var_6938 = relay.var("var_6938", dtype = "uint64", shape = (15, 8, 3))#candidate|6938|(15, 8, 3)|var|uint64
output = func_6937(var_6938)
func_6939 = relay.Function([var_6938], output)
mutated_mod['func_6939'] = func_6939
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7013 = relay.var("var_7013", dtype = "float32", shape = (10, 1, 13))#candidate|7013|(10, 1, 13)|var|float32
uop_7014 = relay.acos(var_7013.astype('float32')) # shape=(10, 1, 13)
func_6569_call = mod.get_global_var('func_6569')
func_6573_call = mutated_mod.get_global_var('func_6573')
const_7020 = relay.const([-7,-9,5,-6,-3,3,5,7,9,-5,10,1,-2,-7,10,-9,10,7,5,8,2,-9,3,10,5,-3,1,4,-8,10,-3,-7,6,-8,-7,-10,-6,-6,6,10,-1,-6,-4,6,3,10,-7,-9,-2,6,1,-6,7,-7,10,-6,-8,-3,-5,6,5,2,-4,-4,9,-6,8,-9,-6,1,4,6,2,-6,-8,-2,8,-4,-6,9,-10,8,-8,4,5,-9,3,-1,-7,-1,-7,8,7,-10,-10,-10,5,-10,-7,7,10,-1,5,9,8,9,-10,-5,-8,-2,3,1,-2,-2,-7,-2,-9,1,6,-6,-9,2,-3,-10,1,1,6,3,-5,8,6,-9,3,-8,2,-5,-10,-2,-5,4,-4,9,9,7,-9,-5,5,7,-6,8,1,-6,-2,2,1,-3,-10,-5,6,-2,7,9,3,-1,-3,4,-6,-2,1,6,-1,6,-3,2,-3,6,4,-3,3,6,4,-7,4,-1,-7,-6,-7,-2,5,2,8,7,3,-1,-5,2,10,-2,-1,9,9,6,10,-6,10,5,8,-4,-4,-7,5,-10,9,7,-4,-7,4,9,-9,-10,-5,-1,-9,-3,-1,1,2,-8,3,2,-4,10,-10,1,-6,-10,-8,-3,5,9,10,9,3,-4,7,-6,5,-8,-9,-6,-1,-5,7,-7,5,8,10,-9,7,1,-1,4,7,3,-2,-10,-5,-4,-4,-7,-9,-4,4,-1,-7,4,3,6,-9,-7,-7,-6,1,-7,10,-4,10,-9,-3,5,5,10,7,-10,-4,-9,-4,-5,4,-2,7,5,-7,-2,-5,2,8,1,-7,-4,-8,4,-8,10,1,6,1,-7,-6,-7,-8,2,-1,1,-4,1,-8,7,-3,7,1,6,-3,-10,-4,9,-8,-9,-3,-8,-7,-2,-5,-2,6,-4,1,10,-5,-2,-7,-4,-3,3,5,-7,-4,1,8,8,3,2,6,-9,-2,1,-3,4,9,-5,1,-9,1,-4,1,10,8,9,3,4,-10,-5,-1,10,8,-4,-7,6,1,4,6,8,-7,-7,-5,-6,-9,8,1,9,3,-2,6,-8,-2,1,-8,1,7,6,10,-9,-4,-10,-6,8,-2,-2,10,9,4,-7,10,8,5,-3,5,-5,-8,-7,4,6,6,6,9,8,-7,6,5,7,7,7,10,2,-7,-4,4,8,-7,-8,2,-2,4,-6,-3,1,3,-5,-9,2,-5,8,-6,1,-3,-4,6,-3,5,9,2,-9,7,-7,10,-4,-6,8,1,7,-10,-6,-6,-7,8,-10,-6,-5,-2,1,2,1,-10,-9,-8,-2,7,5,8,-4,-9,-9,3,10,-4,1,6,3,-1,-4,1,9,5,1,5,-2,-10,-1,-2,-10,10,6,3,2,4,-3,6,-2,6,-6,1,-7,-8,-3,7,-1,-5,5,-6,2,-6,6,-8,3,-4,-5,9,-7,8,1,5,6,-9,-8,9,7,-4,7,1,-6,-1,1,2,-8,8,-10,1,3,-7,9,10,3,-8,7,-2,-6,5,4,-5,-2,2,-8,-5,7,3,-10,-1,-10,-3,10,-2,-10,-6,-6,7,-6,7,-3,4,-6,5,9,-9,7,-5,-7,7,-4,2,-4,8,-7,3,-9,10,-3,1,3,2,-10,-8,6,6,6,9,-4,-1,2,-1,-10,-4,7,4,5,-9,3,-4,1,-8,-6,1,4,3,6,6,-6,-9,-8,-3,9,8,7,2,1,-9,8,9,1,-9,5,-1,6,3,2,-6,8,-4,7,-7,7,7,3,7,-7,1,2,4,3,-3,-5,-8,3,10,-10,-10,10,-2,3,-10,-8,4,-4,-9,8,-4,8,-6,5,-5,-2,4,2,8,7,-6,9,-6,-8,10,4,-7,-5,7,10,7,-5,-3,-6,2,8,-10,-8,8,9,2,-1,8,-3,-7,5,2,-4,-8,-7,-6,8,2,2,4,9,9,-4,-9,1,9,-2,7,9,8,8,10,2,4,3,7,3,-5,2,5,2,9,-6,-9,6,10,1,-1,-4,-7,2,-3,2,3,4,5,-5,-9,5,-5,-5,-4,-7,-1,10,9,2,9,10,7,-4,-7,9,10,-5,-4,2,-9,2,9,8,6,-10,3,8,1,4,-1,-5,8,5,-2,-1,3,1,-5,-10,6,-5,9,10,-5,9,7,6,5,7,-6,8,-2,-3,-5,-8,-4,-3,6,2,-8,-9,6,10,5,-1,-8,4,8,-8,2,-6,-1,-9,2,10,2,-5,-5,10,-4,2,-9,-3,4,10,9,2,4,-7,-3,-6,-6,-3,-6,10,-3,-4,-9,-1,-10,8,-6,-7,4,-7,-1,-9,-4,6,7,-1,-8,-5,4,9,7,-3,-10,5,4,-10,-5,-10,3,-10,-3,1,6,10,1,1,-1,-3,5,-6,10,-4,4,3,-1,8,-3,-9,4,-6,1,5,4,-4,3,-7,-3,-7,6,-4,4,3,10,4,-3,3,2,5,-5,4,-8,-1,4,10,10,7,8,3,5,-4,-10,2,4,-7,-8,-6,-3,-7,-7,-5,1,-2,5,6,3,-8,-6,4,-8,6,-1,10,9,1,6,-4,-9,5,2,-5,3,9,-2,1,5,5,2,-9,7,-9,-7,10,-1,-1,-8,9,10,5,2,-5,3,-4,7,6,-5,-7,-9,-8,1,3,-8,5,2,-3,3,-3,7,-1,-3,10,-3,-2,-3,-1,2,6,-8,-9,10,-7,9,1,-7,10,-3,-2,7,-9,4,5,-5,7,1,-4,-9,5,-10,2,3,9,-2,2,-5,-8,-10,5,3,1,-8,-6,-5,-5,-9,4,10,-8,6,-2,1,-10,-4,-8,-6,2,3,3,10,5,-4,1,-2,-6,7,9,-7,-8,-1,7,-7,-3,6,-10,-3,-6,-4,3,-4,-6,5,10,2,3,6,3,1,-6,4,-3,-3,-6,-6,4,-5,2,4,6,-9,9,10,-9,-8,6,-10,-8,10,9,4,5,-2,1,-8,-1,-5,2,-4,6,7,3,3,-2,9,6,-5,-3,7,-4,-3,1,7,5,8,5,-3,5,-2,-8,8,-4,-4,-1,-3,7,-2,-5,-4,10,10,-9,4,9,-1,-10,-1,-2,-3,8,-8,3,-3,-8,-9,-1,4,1,4,-7,-9,3,-1,-6,8,4,9,3,-8,-9,9,-5,7,-4,-8,-5,-8,-6,5,-7,6,-8,-9,-6,-4,-3,4,8,3,-6,3,-9,-2,-1,-9,-10,10,-1,-1,-7,4,7,-5,3,7,1,1,-2,-5,9,-5,-10,-9,5,9,-6,-9,5,10,-6,-7,8,6,-10,6,6,2,-4,10,2,1,-4,-1,-8,7,7,-10,-2,6,1,3,1,5,8,-9,5,-10,-4,-8,-3,6,-6,6,7,2,-6,-5,-2,-4,-6,-3,-5,-1,-6,-1,1,9,-6,-7,-9,-8,4,1,6,6,-10,-4,-2,4,-4,-6,-2,6,2,-10,-2,5,4,4,3,3,-1,-10,3,-2,7,-4,3,-7,-5,3,7,-5,-5,-2,-3,4,3,-10,8,-3,-9,5,9,4,-1,1,-6,3,-9,2,2,-7,-1,-1,-8,5,-3,9,2,-8,-2,-3,7,-2,2,8,1,7,4,-3,4,2,-8,-3,-2,-5,8,-3,-7,1,10,-1,7,-6,-8,3,-9,-1,-6,9,-3,-2,-6,8,-3,-1,8,-5,2,6,-2,-1,-6,8,-9,9,5,5,-10,5,3,6,7,-8,3,-8,5,-4,4,-2,-10,4,-4,-7,3,-8,7,8,5,3,-10,-1,-2,7,-10,8,-1,7,1,-10,5,1,-9,-6,-4,2,-1,10,-9,-9,5,-1,10,-2,2,-7,7,9,-6,-10,-5,6,-7,-1,-3,-7,8,5,-8,2,8,-6,-9,2,-1,8,5,4,-8,8,3,-10,-5,-2,-1,-2,-4,-3,-5,-8,7,4,10,6,1,9,-1,-9,-3,9,3,-4,-10,-2,2,-3,8,5,-3,3,-6,10,-1,-4,-9,-10,-4,1,-1,-1,5,-4,-1,-8,-1,-10,5,-4,10,1,-3,-4,-3,-3,10,-7,-9,-7,-1,7,-5,-9,-1,-7,1,10,6,10,-1,-6,-8,5,6,-8,-6,-1,3,1,2,-5,-5,6,-3,5,-9,4,-3,-5,-2,6,-7,8,6,6,-9,-1,-9,10,-3,-5,-3,10,-7,-5,-7,6,-7,-7,-8,-10,-5,-3,-10,-6,7,7,-10,6,-1,8,-1,3,-1,-2,5,-5,-5,-7,-1,-7,-4,-10,1,-2,8,-2,6,-8,8,-3,-6,-5,7,7,5,-8,-8,3,-4,-4,7,-1,5,-10,-1,-6,-3,7,3,10,8,6,6,-9,-6,-3,1,6,5,-9,-10,3,-7,3,-6,7,9,-2,-3,-5,4,-2,2,-2,-5,-3,-9,-6,7,-6,2,-9,-5,6,-1,-6,9,-3,7,7,-8,7,-5,4,4,-6,-1,5,-7,-3,4,-5,-7,-5,6,6,-10,-1,-8,10,-5,6,3,-4,-6,9,8,4,-2,2,1,-4,-3,-8,10,-2,-4,2,4,6,-5,-10,8,-8,3,2,10,-4,9,-5,-10,5,-7,-9,-5,9,-1,2,-2,-4,4,10,-10,-6,-8,1,10,-2,-4,-8,-8,-10,-7,-10,7,-8,10,5,-4,-2,-4,10,6,10,3,-1,-6,-9,5,6,5,-3,9,8,8,6,10,5,6,-10,-5,9,3,-8,9,-10,-5,-3,2,-8,1,4,9,-9,-7,3,9,-5,2,-1,-5,-7,-8,7,-4,-10,-10,-6,4,-6,-4,2,3,-8,-3,5,-1,-10,-5,-9,-1,-3,1,-2,7,-5,6,-6,7,1,-2,9,1,4,-6,4,-10,-10,6,-6,-9,4,10,-2,4,8,10,-1,7,-6,6,2,-6,-9,-6,3,-7,9,-7,-6,-4,8,4,-6,5,-5,3,9,2,10,-4,-3,4,-10,-3,-3,-3,-3,-2,-7,1,10,-1,-3,-8,3,8,4,-8,-2,-1,7,7,2,-9,4,2,3,-4,8,-9,-3,7,-10,2,-5,8,10,2,-3,-10,10,-5,-9,7,-1,10,-5,1,-1,7,7,-10,1,8,10,2,-2,-2,6,-10,-8,-10,7,-8,6,6,1,2,-7,-5,-8,8,-4,3,-10,4,1,-10,-5,7,-4,-7,-1,4,-7,7,-5,-7,3,-8,1,2,-6,-10,-1,-4,-4,-7,-10,-2,-1,2,4,-5,-9,2,5,-2,6,-5,1,-1,10,9,-10,-7,-2,7,10,2,4,-9,-10,3,-3,5,8,8,-6,10,-7,-7,9,4,-7,-9,2,2,-9,10,-3,-5,-8,9,-9,10,-7,5,-4,-3,7,3,-10,-1,-2,-10,-3,6,-7,7,-3,3,7,-5,-9,1,-2,3,-1,-2,7,-8,6,-4,-6,-8,10,-10,-9,8,-3,4,-3,-7,3,-7,-1,1,-6,10,-7,-2,2,-2,7,1,-8,3,-1,-8,-10,-7,8,6,-6,-8,7,-8,2,-1,1,-8,4,2,2,4,-5,-10,-2,8,7,8,8,2,-9,10,5,-1,-7,-6,5,10,-2,4,1,1,10,3,-7,-9,-9,6,-6,3,-2,-4,-9,-8,9,7,5,-9,7,-6,-6,-1,-5,9,6,7,-10,-6,7,2,-5,7,4,9,-9,-6,-10,-2,-3,-6,-10,8,4,-1,-7,9,1,-4,-4,-6,7,-10,8,2,2,2,-9,-3,4,3,6,-5,-10,2,3,-8,10,7,-1,-1,5,4,6,8,-1,3,-5,-4,7,-10,4,1,8,-5,-7,2,2,9,-3,-9,-7,4,3,6,4,2,-6,5,3,4,8,3,2,-9,-8,-3,-5,9,-5,-7,3,-10,-2,-4,4,-4,-2,4,10,2,4,-5,10,-6,-10,-5,-2,-3,-9,9,5,-6,2,-4,3,-10,-9,5,-2,-6,4,7,-6,10,9,9,-3,-4,6,7,2,-6,4,-2,-4,9,10,4,10,1,3,5,6,-1,5,-2,7,10,3,8,-8,7,-6,-4,-7,6,-7,-8,-8,5,-8,2,5,7,-4,5,-3,-2,3,3,-2,-10,10,2,-6,3,4,-7,9,-6,8,-9,-4,-8,-8,7,-10,9,-4,9,-7,-3,-10,-9,6,-6,-9,-5,-5,-9,6,2,-4,7,1,-9,-8,1,-5,-9,-8,-3,-9,9,3,-4,6,6,-7,10,-9,-10,9,7,6,5,2,-10,-8,4,8,10,-5,6,1,2,2,9,5,-7,5,-4,10,7,-4,-9,10,-8,6,-5,-7,7,8,3,3,2,-10,4,-10,-7,-1,-9,-6,5,9,8,-8,-7,2,-10,10,4,10,-1,8,-7,4,1,-10,-1,6,-5,6,-9,-2,3,2,-1,5,3,9,2,5,-5,-10,4,-8,8,-2,10,7,5,3,2,-7,-1,8,-2,-9,-7,-5,-4,-1,7,-9,-9,-2,-8,2,5,8,8,1,6,-10,10,-6,-8,-7,2,2,4,8,1,1,-9,-3,-4,8,-8,-5,-4,3,7,5,-7,3,-2,-3,-10,10,5,6,-10,1,5,-6,-4,10,-10,3,3,9,8,2,-10,7,8,7,10,-5,2,5,-2,-9,2,-10,-1,-2,-4,-5,9,-10,-5,-4,-2,1,10,-2,-3,-5,-7,9,5,-5,8,-3,-1,-3,-9,3,-5,7,-2,-8,-2,-9,-7,6,-2,2,2,8,-8,10,-9,9,9,9,-7,-8,1,9,-6,1,8,1,-7,-1,-1,10,-8,-3,-7,10,-1,-2,-4,10,5,-9,3,3,8,-4,-7,-10,-5,1,7,-5,-10,1,-7,-5,2,-7,3,-6,-4,-1,-7,5,3,-6,-7,-9,8,-10,-2,-9,-6,-9,6,9,6,-10,-10,6,1,2,-3,-3,-2,5,-8,8,1,-3,3,-7,-4,3,-2,-5,-9,8,-1,-10,-6,7,-1,5,4,-1,4,7,4,9,-7,6,-5,-7,-7,-1,3,-6,5,-8,-1,-6,-8,-2,3,8,-10,-5,3,3,-8,-3,-2,-7,10,8,6,-8,-6,-7,-2,8,-3,6,4,6,-4,3,9,5,-5,3,-6,8,-1,-3,-3,-6,-4,2,2,10,-10,1,4,9,6,3,-4,6,-7,10,-9,-4,-9,-3,-8,-6,-7,-6,-5,-2,-10,5,-5,1,9,2,8,-5,4,-9,-2,-9,-3,1,1,-9,8,4,6,-7,-7,-4,-7,-1,8,5,4,-10,10,-5,5,-3,9,-10,3,9,-8,-2,-2,8,-2,2,7,-2,-3,10,-2,-5,-10,-5,4,-10,7,-1,-8,10,2,-7,4,-7,-8,-7,8,1,-8,-1,-10,-7,7,-9,7,-5,3,-7,3,4,-1,-2,-4,8,-1,4,-2,-10,9,3,9,4,-10,-9,-6,-6,5,-7,3,2,-4,5,9,4,5,5,-5,-5,3,10,6,-8,4,-3,1,-10,2,-3,-3,1,4,3,9,6,2,1,2,3,5,2,1,-2,-9,6,-2,1,4,-9,4,5,1,-5,5,6,2,-7,10,-6,2,1,8,4,-8,5,8,5,5,-2,-8,2,8,4,7,-7,1,-7,-1,-5,3,8,-1,1,-5,-6,-3,4,8,-9,8,-5,5,-2,-2,3,6,-7,6,-2,-10,3,-9,-5,5,-1,10,-3,-8,1,-1,-5,6,3,9,3,6,-5,5,3,5,-2,-9,-10,-8,-7,7,-6,-2,-7,8,2,-7,10,-8,1], dtype = "int64")#candidate|7020|(2925,)|const|int64
call_7019 = relay.TupleGetItem(func_6569_call(relay.reshape(const_7020.astype('int64'), [13, 15, 15]), relay.reshape(const_7020.astype('int64'), [13, 15, 15]), ), 0)
call_7021 = relay.TupleGetItem(func_6573_call(relay.reshape(const_7020.astype('int64'), [13, 15, 15]), relay.reshape(const_7020.astype('int64'), [13, 15, 15]), ), 0)
func_4704_call = mod.get_global_var('func_4704')
func_4706_call = mutated_mod.get_global_var('func_4706')
var_7039 = relay.var("var_7039", dtype = "float64", shape = (1650,))#candidate|7039|(1650,)|var|float64
call_7038 = relay.TupleGetItem(func_4704_call(relay.reshape(var_7039.astype('float64'), [15, 10, 11])), 2)
call_7040 = relay.TupleGetItem(func_4706_call(relay.reshape(var_7039.astype('float64'), [15, 10, 11])), 2)
uop_7053 = relay.log10(uop_7014.astype('float64')) # shape=(10, 1, 13)
func_5524_call = mod.get_global_var('func_5524')
func_5526_call = mutated_mod.get_global_var('func_5526')
const_7065 = relay.const([[5.107695,-4.096385,-0.894670,1.744438,-7.456889,3.314589,-0.939319,3.001339,-5.804664,9.307955,-5.282320,2.720963,-0.124412,6.770124,-2.257977,4.785222,-1.108967,-2.674812,9.285100,-4.836629,2.771375,4.013808,1.233197,4.856845,6.204168,4.788611,9.453751,-0.744318],[7.762622,-5.789197,-1.064385,-9.770211,-6.380007,-4.031974,-9.343759,7.595822,-7.968480,6.059194,-7.374017,3.989573,-4.849466,7.629760,4.057175,7.021428,2.945577,5.444284,-4.017879,4.720964,-8.923411,-2.390444,-8.785183,-5.884313,-9.602162,-5.557090,-0.705848,-8.851310],[-0.125381,-8.738243,-3.727786,0.825705,-7.752715,1.340919,-7.629269,4.235497,-2.849545,9.940163,4.777097,8.824676,7.583928,-9.587720,0.399226,-4.888411,4.871825,-4.676860,3.021712,9.156795,-8.759904,-5.972425,8.618086,0.483986,3.958483,-3.623502,-7.098335,-6.213873],[-9.107969,4.565713,3.744257,7.334760,8.495395,-7.793115,0.193911,-7.115809,9.552174,-9.779061,-9.018599,-8.758783,-2.468650,-9.885560,7.090314,5.876960,-8.397633,3.599807,-3.818060,-2.222484,-9.603089,-1.492601,-5.227379,3.642295,0.479551,9.071620,2.269871,3.762779],[-4.092919,-8.215083,-0.454075,5.810514,9.294401,4.347710,-4.407674,6.958430,-5.939886,-4.788585,-9.520296,-2.783567,-7.281739,6.628147,-0.628213,2.085228,-6.205734,-4.050651,0.882173,8.618361,-4.935409,1.360304,-2.665724,-5.120430,-4.756404,-6.986216,-2.994535,9.422876],[-5.580895,1.496196,5.549916,7.473362,-6.354925,6.036241,-8.036642,-3.860735,9.628688,1.129445,-3.288896,-5.734896,-7.257788,1.356995,-8.874902,6.797904,9.351066,1.183363,-0.940166,8.012138,-0.317404,-7.661248,5.198833,0.085285,-6.564293,8.549655,-2.821630,-4.030592],[-0.676212,-7.779163,-7.749807,7.007731,-5.339152,-0.642374,8.066029,7.175472,-0.301653,-4.807175,6.576602,-8.064611,-2.021319,-6.596628,-8.784516,-3.819229,5.607265,9.416777,-7.652184,6.710250,2.595664,2.235126,1.609321,-3.668349,3.085510,-1.638383,-4.438112,-2.709476],[-0.812552,-0.478930,1.412935,6.059179,9.530608,-6.193631,9.740080,-0.100067,-0.997660,6.455874,-4.524901,0.791380,0.195829,-1.441109,5.165680,-1.341258,-5.370166,-9.127130,3.811936,-7.806607,-9.995670,3.170271,-0.254618,-5.838154,6.758180,5.389899,4.127015,6.088059],[-8.261647,-2.087941,8.401918,6.554972,7.715946,6.357237,7.755403,1.471537,7.111726,3.175807,-9.477246,-5.149118,2.042632,-8.785163,-0.860106,9.155747,1.068451,-5.247694,6.497654,-6.243021,0.343698,0.680566,3.146910,-4.450474,1.270956,2.515564,5.673593,-4.750060],[5.273594,2.487592,-9.476505,-5.420386,0.416103,-1.315672,-6.618144,9.329780,4.499355,-6.378773,-8.831985,7.352246,-9.184465,9.498429,-6.136412,-4.693073,-6.667908,1.550372,3.952115,6.428863,4.452639,1.468397,-4.546947,1.808624,2.547021,9.721184,0.926317,-4.818280]], dtype = "float64")#candidate|7065|(10, 28)|const|float64
call_7064 = relay.TupleGetItem(func_5524_call(relay.reshape(const_7065.astype('float64'), [8, 5, 7])), 1)
call_7066 = relay.TupleGetItem(func_5526_call(relay.reshape(const_7065.astype('float64'), [8, 5, 7])), 1)
output = relay.Tuple([call_7019,const_7020,call_7038,var_7039,uop_7053,call_7064,const_7065,])
output2 = relay.Tuple([call_7021,const_7020,call_7040,var_7039,uop_7053,call_7066,const_7065,])
func_7080 = relay.Function([var_7013,var_7039,], output)
mod['func_7080'] = func_7080
mod = relay.transform.InferType()(mod)
mutated_mod['func_7080'] = func_7080
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7080_call = mutated_mod.get_global_var('func_7080')
var_7082 = relay.var("var_7082", dtype = "float32", shape = (10, 1, 13))#candidate|7082|(10, 1, 13)|var|float32
var_7083 = relay.var("var_7083", dtype = "float64", shape = (1650,))#candidate|7083|(1650,)|var|float64
call_7081 = func_7080_call(var_7082,var_7083,)
output = call_7081
func_7084 = relay.Function([var_7082,var_7083,], output)
mutated_mod['func_7084'] = func_7084
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7110 = relay.const([[[6.332743,-3.765537,1.916031,-9.893698,-9.426548,-1.879516,-9.500381,0.161114,0.018947,0.787294,0.691939,9.348489,3.124342,-3.325640,7.886256],[-2.725664,6.820453,0.686127,1.239155,-3.696655,6.028079,0.303584,6.488744,-6.881962,-5.521230,-1.366003,-0.102124,-5.318325,5.183376,-9.018218]],[[4.102288,7.898165,5.852349,8.291678,9.719983,-9.787461,9.150569,-0.590124,1.366126,5.021912,-5.520719,8.782812,2.964683,-4.072593,-3.606995],[9.160051,2.583882,-2.863804,-4.900915,-1.987587,4.859332,-6.227709,-4.334819,5.023366,-2.361768,1.461379,-8.590966,1.411536,3.500979,6.999260]],[[-6.159224,8.919889,8.852336,-8.312208,6.249694,5.975952,7.704646,0.095717,-8.346867,2.072910,-6.555664,4.455264,6.295679,-7.502252,-9.831977],[1.569690,0.730427,4.448614,-6.115221,-4.638637,-8.984261,3.745678,7.958121,9.888951,9.498742,-5.898429,8.460893,2.486538,-2.951166,5.447407]],[[0.382898,3.822439,5.526670,8.403552,-2.127442,-2.403953,-3.985926,9.848716,-6.319798,2.340106,8.749716,4.106521,-7.761866,-8.142743,0.503842],[2.901406,-8.638737,4.169775,1.968056,3.171629,-3.112056,-8.319049,7.041891,-0.988841,-8.180430,-2.976731,-4.139403,0.692508,-6.259994,8.035650]],[[9.464537,-4.343701,-1.938010,-1.824634,-9.499176,3.400985,8.690147,8.386103,1.978066,-6.836385,-8.559213,-9.262360,4.351430,2.077979,0.193604],[5.524853,7.348237,-6.926229,9.056893,-7.906414,-1.450284,-0.138131,0.954639,0.010485,3.391485,8.978287,-0.122726,-4.330487,8.383685,2.777454]],[[8.710843,4.039623,-0.480227,-5.182039,-1.936677,8.706093,-5.113809,-6.168708,-0.202425,2.765045,-8.837826,1.476227,-6.374542,-2.643970,1.556877],[-7.995746,-5.877302,7.436445,9.459797,-6.654366,-3.786118,-9.099753,7.044639,1.247760,-3.241720,3.454777,5.415443,3.881853,0.914692,0.064981]],[[6.700802,5.332362,8.526861,-2.759390,-0.805879,1.243548,6.789644,2.476818,-9.043147,-8.702907,5.282255,4.676571,-5.459664,-5.358345,-8.260214],[-6.268023,1.693388,8.382769,-5.902064,7.490931,-5.565310,-2.617172,4.366571,-0.325142,-0.941168,-1.795016,8.068840,-7.873255,6.105852,3.141757]]], dtype = "float32")#candidate|7110|(7, 2, 15)|const|float32
uop_7111 = relay.exp(const_7110.astype('float32')) # shape=(7, 2, 15)
output = uop_7111
output2 = uop_7111
func_7115 = relay.Function([], output)
mod['func_7115'] = func_7115
mod = relay.transform.InferType()(mod)
output = func_7115()
func_7116 = relay.Function([], output)
mutated_mod['func_7116'] = func_7116
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7115_call = mod.get_global_var('func_7115')
func_7116_call = mutated_mod.get_global_var('func_7116')
call_7136 = func_7115_call()
call_7137 = func_7115_call()
func_2535_call = mod.get_global_var('func_2535')
func_2539_call = mutated_mod.get_global_var('func_2539')
const_7165 = relay.const([-8.961242,9.970847,-3.980899,-7.281024,5.665220,7.499628,-6.672518,6.107179,-1.675568,-4.393187,0.519269,-5.790046,8.642697,-2.414965,2.422445,-2.607302,-0.171731,7.850375,-8.904198,-0.520096,5.143187,-5.114328,-0.864659,-8.707451,-7.171588], dtype = "float64")#candidate|7165|(25,)|const|float64
var_7166 = relay.var("var_7166", dtype = "float32", shape = (468,))#candidate|7166|(468,)|var|float32
var_7167 = relay.var("var_7167", dtype = "float32", shape = (405,))#candidate|7167|(405,)|var|float32
call_7164 = relay.TupleGetItem(func_2535_call(relay.reshape(const_7165.astype('float64'), [5, 1, 5]), relay.reshape(var_7166.astype('float32'), [6, 78]), relay.reshape(var_7167.astype('float32'), [405,]), ), 11)
call_7168 = relay.TupleGetItem(func_2539_call(relay.reshape(const_7165.astype('float64'), [5, 1, 5]), relay.reshape(var_7166.astype('float32'), [6, 78]), relay.reshape(var_7167.astype('float32'), [405,]), ), 11)
output = relay.Tuple([call_7136,call_7164,const_7165,var_7166,var_7167,])
output2 = relay.Tuple([call_7137,call_7168,const_7165,var_7166,var_7167,])
func_7173 = relay.Function([var_7166,var_7167,], output)
mod['func_7173'] = func_7173
mod = relay.transform.InferType()(mod)
var_7174 = relay.var("var_7174", dtype = "float32", shape = (468,))#candidate|7174|(468,)|var|float32
var_7175 = relay.var("var_7175", dtype = "float32", shape = (405,))#candidate|7175|(405,)|var|float32
output = func_7173(var_7174,var_7175,)
func_7176 = relay.Function([var_7174,var_7175,], output)
mutated_mod['func_7176'] = func_7176
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7115_call = mod.get_global_var('func_7115')
func_7116_call = mutated_mod.get_global_var('func_7116')
call_7217 = func_7115_call()
call_7218 = func_7115_call()
output = relay.Tuple([call_7217,])
output2 = relay.Tuple([call_7218,])
func_7238 = relay.Function([], output)
mod['func_7238'] = func_7238
mod = relay.transform.InferType()(mod)
mutated_mod['func_7238'] = func_7238
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7238_call = mutated_mod.get_global_var('func_7238')
call_7239 = func_7238_call()
output = call_7239
func_7240 = relay.Function([], output)
mutated_mod['func_7240'] = func_7240
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7238_call = mod.get_global_var('func_7238')
func_7240_call = mutated_mod.get_global_var('func_7240')
call_7249 = relay.TupleGetItem(func_7238_call(), 0)
call_7250 = relay.TupleGetItem(func_7240_call(), 0)
output = call_7249
output2 = call_7250
func_7259 = relay.Function([], output)
mod['func_7259'] = func_7259
mod = relay.transform.InferType()(mod)
mutated_mod['func_7259'] = func_7259
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7259_call = mutated_mod.get_global_var('func_7259')
call_7260 = func_7259_call()
output = call_7260
func_7261 = relay.Function([], output)
mutated_mod['func_7261'] = func_7261
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7238_call = mod.get_global_var('func_7238')
func_7240_call = mutated_mod.get_global_var('func_7240')
call_7329 = relay.TupleGetItem(func_7238_call(), 0)
call_7330 = relay.TupleGetItem(func_7240_call(), 0)
output = relay.Tuple([call_7329,])
output2 = relay.Tuple([call_7330,])
func_7331 = relay.Function([], output)
mod['func_7331'] = func_7331
mod = relay.transform.InferType()(mod)
mutated_mod['func_7331'] = func_7331
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7331_call = mutated_mod.get_global_var('func_7331')
call_7332 = func_7331_call()
output = call_7332
func_7333 = relay.Function([], output)
mutated_mod['func_7333'] = func_7333
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7259_call = mod.get_global_var('func_7259')
func_7261_call = mutated_mod.get_global_var('func_7261')
call_7492 = func_7259_call()
call_7493 = func_7259_call()
func_7115_call = mod.get_global_var('func_7115')
func_7116_call = mutated_mod.get_global_var('func_7116')
call_7504 = func_7115_call()
call_7505 = func_7115_call()
output = relay.Tuple([call_7492,call_7504,])
output2 = relay.Tuple([call_7493,call_7505,])
func_7506 = relay.Function([], output)
mod['func_7506'] = func_7506
mod = relay.transform.InferType()(mod)
output = func_7506()
func_7507 = relay.Function([], output)
mutated_mod['func_7507'] = func_7507
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7331_call = mod.get_global_var('func_7331')
func_7333_call = mutated_mod.get_global_var('func_7333')
call_7525 = relay.TupleGetItem(func_7331_call(), 0)
call_7526 = relay.TupleGetItem(func_7333_call(), 0)
func_2593_call = mod.get_global_var('func_2593')
func_2596_call = mutated_mod.get_global_var('func_2596')
const_7528 = relay.const([[-7,6],[-1,-3],[-6,3],[8,10],[6,-5],[5,9],[4,3],[-4,-1],[7,10],[10,4],[8,1],[-7,10],[-6,-2],[-2,4],[-9,-2],[-9,-5],[10,-4],[-9,-10],[8,-2],[2,-10],[-6,-9],[3,4],[10,6],[9,-6],[7,1],[8,2],[3,-3],[-4,5],[-3,-8],[-10,2],[-10,-9],[-2,-8],[-3,-4],[2,-7],[7,-2],[-10,3],[-1,-4],[7,1],[2,4],[3,2],[5,-6],[-1,-2],[2,-3],[10,10],[9,10],[-7,1],[9,5],[1,7],[-5,-3],[-6,9],[8,4],[8,-9],[7,-10],[2,-4],[-9,4],[-8,6],[-4,2],[-3,-9],[10,8],[7,-4],[-9,-9],[-8,-2],[3,6],[7,-7],[-10,-2],[-9,-1],[6,9],[-1,10],[-9,-10],[3,3],[10,-9],[3,9],[-6,-4],[1,6],[-9,1],[-9,-9],[-9,3],[-3,-9],[-8,-9],[6,-4],[-8,-7],[-4,-4],[-9,-10],[-5,7],[7,7],[-8,2],[-5,-7],[-10,1],[-7,-5],[-3,-5],[-6,-3],[3,-7],[9,2],[-10,-3],[5,6],[-1,3],[7,-1],[1,-5],[1,9],[7,8],[-2,3],[-3,7],[-8,-5],[-9,-9],[10,-7],[7,9],[-9,6],[4,1],[-2,-10],[-3,-5],[9,10],[-2,-6],[-2,-3],[-6,-9],[-1,-10],[6,-3],[-6,-5],[1,9],[-2,9],[9,-6],[10,-10],[-2,-3],[3,-9],[7,-9],[-4,-3],[4,6],[3,10],[3,-3],[-5,-1],[-1,9],[-10,-2],[10,-1],[6,1],[3,6],[3,8],[-9,-10],[5,1],[-10,9],[-9,-8],[-4,3],[-2,-10],[4,-1],[-1,4],[3,6],[9,-3],[10,-10],[6,-7],[-6,10],[7,-3],[7,9],[-6,-2],[8,6],[-7,-8],[-2,5],[-6,-10],[-5,2],[-10,4],[-10,7],[-7,-4],[7,6],[-8,1],[3,-2],[8,-5],[10,-6],[2,-2],[-4,-10],[-8,-8],[4,-8],[-8,-6],[3,-2],[-8,6],[4,-2],[2,1],[-3,-9],[-5,7],[-10,-6],[4,-1],[-10,1],[-2,9],[7,-4],[-7,6],[-6,-2],[-1,4],[6,2],[-4,10],[-8,5],[6,-5],[7,-3],[-4,4],[-6,-3],[-7,-8],[7,-4],[5,-6],[-5,-10],[-2,5],[6,-4],[8,2],[-8,1],[-4,-10],[-1,3],[-10,-6],[7,-5],[4,-10],[9,1],[-4,3],[8,7],[3,2],[-4,1],[-1,9],[4,8],[-6,-8],[-4,4],[2,2],[-1,9],[-8,9],[7,6],[-8,5],[-10,10],[3,1],[-7,-5],[-4,8],[-8,1],[-9,8],[2,-3],[10,2],[4,6],[-2,-5],[3,9],[-9,-3],[5,2],[4,-1],[5,-5],[-3,-5],[-1,-4],[-7,1],[1,7],[8,-8],[2,6],[-10,-4],[-2,-10],[-8,-1],[3,1],[6,-9],[-3,-8],[6,3],[-4,6],[5,-10],[9,-1],[6,-5],[9,10],[9,4],[-8,2],[-6,4],[3,5],[9,6],[-9,8],[-10,4],[-8,-7],[-6,8],[3,5],[-2,-1],[-10,4],[4,-9],[6,-8],[-10,-6],[-7,-7],[5,-6],[-3,6],[-2,2],[-3,-1],[-6,-2],[10,1],[-10,-10],[1,1],[-1,2],[8,3],[7,1],[-4,9],[-3,-4],[-8,-2],[-1,9],[-8,-8],[7,-4],[10,-6],[3,-6],[-10,-8],[-7,5],[-7,-8],[-7,-2],[7,-3],[2,3],[5,8],[9,-8],[1,3],[8,5],[-2,8],[8,-6],[10,3],[-9,3],[-6,-5],[-4,-5],[6,-3],[5,-4],[9,-8],[-1,-5],[-6,-4],[-3,-10],[-7,7],[5,-6],[-9,9],[-7,10],[-6,6],[-5,-10],[-9,5],[-1,-4],[-9,10],[2,-6],[5,6],[-8,-9],[-9,4],[7,-4],[-8,10],[-3,8],[5,5],[-1,10],[-6,-9],[7,1],[-4,7],[-8,-10],[9,6],[2,3],[9,7],[-6,-8],[-5,9],[7,-7],[2,4],[6,-6],[4,6],[-5,3],[6,-6],[7,5],[2,-6],[-3,-4],[9,-6],[-4,10],[4,3],[-7,-3],[-8,-5],[4,-9],[-5,9],[-9,2],[-1,-5],[-1,-2],[-2,-4],[3,2],[-6,-6],[-7,9],[3,-10],[1,4],[-2,-6],[5,8],[2,8],[9,7],[-5,6],[-2,-5],[-4,-9],[7,-6],[10,2],[9,5],[-1,-1],[1,6],[2,1],[8,7],[1,5],[-9,6],[3,7],[9,-7],[2,-1],[-5,10],[-8,9],[5,7],[4,-5],[-3,4],[-1,9],[-10,-10],[-4,5],[7,-5],[6,-4],[2,8],[-3,8],[-4,-3],[-1,4],[-9,-6],[-5,-2],[-6,-1],[3,-5],[5,10],[4,6],[-10,2],[-3,7],[-1,5],[-3,10],[6,-6],[-5,3],[-2,-1],[-10,-6],[-8,-4],[-5,3],[3,1],[6,9],[-1,10],[-4,9],[3,6],[-7,-6],[1,3],[2,-3],[5,4],[3,3],[8,1],[6,10]], dtype = "uint32")#candidate|7528|(420, 2)|const|uint32
call_7527 = relay.TupleGetItem(func_2593_call(relay.reshape(const_7528.astype('uint32'), [15, 8, 7]), relay.reshape(const_7528.astype('uint32'), [15, 8, 7]), ), 0)
call_7529 = relay.TupleGetItem(func_2596_call(relay.reshape(const_7528.astype('uint32'), [15, 8, 7]), relay.reshape(const_7528.astype('uint32'), [15, 8, 7]), ), 0)
func_1762_call = mod.get_global_var('func_1762')
func_1768_call = mutated_mod.get_global_var('func_1768')
var_7541 = relay.var("var_7541", dtype = "uint8", shape = (588,))#candidate|7541|(588,)|var|uint8
const_7542 = relay.const([[0.513837,-7.617037,1.015651],[-8.212482,3.377299,5.851449],[-7.521748,9.175027,-4.290639],[7.443580,7.753233,-7.701833],[3.516537,1.122771,-3.299940],[-2.723172,-1.897854,3.628469],[-7.391684,2.268433,1.880118],[-2.336209,-7.872280,-7.781910],[-7.675945,-8.501668,-4.933180],[-7.157231,-9.138745,2.106798],[-6.446844,-9.775408,-6.106717],[-2.370331,9.563481,4.381745],[-9.486527,8.527127,3.169121],[-7.202090,1.869464,-6.856659],[5.484174,5.812776,-0.008592],[2.350735,-7.829187,-1.722097],[2.873310,8.210286,-2.705523],[-9.981853,0.919679,3.829031],[7.363364,-6.113928,-2.282099],[-7.429456,2.847738,1.040615],[-0.040452,-6.724268,-5.191698],[7.476836,-8.079973,7.550289],[8.444044,0.288045,3.935143],[-2.833137,-4.167402,7.051285],[7.845012,8.020870,-1.974335],[-9.963719,7.460011,4.611406],[7.918413,0.294484,-4.903345],[-5.920869,-6.225727,-6.325303],[1.127948,-8.023449,7.656836],[-4.225845,4.124898,9.003101],[1.892702,-7.485595,-6.793742],[-6.415888,7.213320,7.928820],[-6.599994,4.461269,-5.830825],[-7.192130,-6.307636,5.021336],[4.481752,-0.972538,4.093659],[-3.226119,-0.592023,0.311562],[-4.874766,-6.973702,-1.933498],[7.081121,-3.420598,0.275996],[-7.145205,-6.745674,5.941634],[-5.763126,4.918055,6.450434],[-5.254036,8.732181,2.782340],[-0.741475,4.109824,5.997084],[-2.129763,-6.454020,9.267723],[4.369038,-6.835092,7.414798],[-3.221653,-8.084321,-1.580590],[-0.109503,3.418015,6.444319],[3.578018,-3.179477,1.193236],[-1.251032,0.078790,-4.613478],[-2.627515,-3.745233,9.761400],[-6.431698,-2.463074,8.699651],[2.309644,1.354373,-1.606026],[8.375739,-4.741974,-5.893787],[0.966436,-6.043800,2.204971],[4.196304,-1.983554,-9.949812],[6.852551,9.661150,4.476875],[5.255139,2.205799,7.012552],[9.083710,3.887165,8.034673],[9.044587,-7.192096,9.463060],[-6.597347,7.527013,-6.991810],[-5.739272,6.376999,9.034853],[9.056721,1.220347,-9.443572],[-8.480216,3.453847,6.976365],[5.476741,4.884989,-2.356486],[1.014985,6.520457,-0.802235],[0.136769,-0.660136,-9.301684],[7.353711,-7.641424,-3.994339],[-7.858047,-2.180961,-3.637786],[-2.043223,4.323771,3.129900],[-2.812834,-5.804010,-0.990903],[4.034461,-4.324866,-9.081115],[-5.195961,-6.085425,-3.890080],[9.845609,7.778846,-5.230681],[8.598899,2.077944,-4.180470],[8.435060,2.088449,-1.980803],[-3.759609,0.878572,1.906097],[2.091568,-7.745827,-8.708148],[2.581076,6.500653,-9.570854],[-2.413049,-4.288223,-1.210240],[9.589415,9.832962,5.589766],[-3.850953,8.141760,-1.833796],[3.618244,-7.686739,2.585844],[-5.639655,-1.112456,7.675325],[8.647799,6.932946,9.128069],[-7.415025,5.872772,-0.361127],[2.058254,-7.424170,-9.620770],[-8.044468,-6.576736,4.556637],[6.848696,-9.747171,5.485124],[-9.679708,-7.026509,-1.461551],[8.000678,-3.957217,-9.331548],[-4.890643,8.086983,8.984769],[4.140209,4.419495,-9.882337],[-4.145826,-6.914114,-3.378463],[-7.666017,-1.747847,-7.020681],[5.970401,9.717834,-2.773156],[-8.831980,0.989238,9.789731],[9.295840,-3.484977,-8.874180],[-7.180158,5.313934,-4.820542],[-1.122545,-5.275666,1.026252],[-6.977022,1.255492,-4.938512],[6.512484,-7.072535,-1.965428],[7.084869,-5.795905,-2.698375],[2.971852,3.341041,6.634520],[-0.146414,2.307532,-6.422738],[7.415543,6.947061,-0.174437],[-5.674741,-8.955852,-0.827223],[-2.487737,-9.576615,-7.447664],[9.270809,9.127088,-5.309399],[-7.000935,3.097167,7.552273],[-0.293902,-0.379884,8.442710],[7.584102,-0.984700,-2.868273],[-9.714776,7.806401,-7.868081],[3.965248,4.274653,-8.358844],[4.907479,-3.355389,-0.861230],[-7.792744,-1.666645,-6.740818],[5.613664,7.022653,8.941499],[6.676515,-5.521756,0.746216],[-1.440118,-3.957056,6.551719],[6.641696,-6.292927,8.629481],[7.049809,2.750114,-4.793895],[-2.855845,-4.635436,-5.761896],[1.364301,4.474108,-3.563678],[-7.300666,-5.755944,-4.557662],[-2.401003,-9.503409,4.883006],[4.556994,-3.715720,-4.975999],[1.334073,-1.760602,-7.138925],[6.240249,-9.743117,2.602694],[6.573116,9.440152,-7.865803],[-8.313593,8.337759,7.453489],[-2.557636,-9.859542,-5.729358],[-0.194884,7.390132,2.115668],[7.471998,9.119681,2.034754],[-9.553670,7.624046,-6.578450],[1.685697,-9.905888,-6.560241],[5.681547,-7.887176,2.081079],[-2.981878,-1.874600,-5.760627]], dtype = "float32")#candidate|7542|(135, 3)|const|float32
const_7543 = relay.const([6,-3,-6,3,-8,4,-6,-5,-2,-10,6,-1,1,-5,10,4,5,-9,2,4,6,9,8,-8,-2,5,10,-6,-5,-8,10,-1,3,6,3,-7,-10,8,10,-6,-2,-10,-6,-3,-1,8,-7,6], dtype = "int32")#candidate|7543|(48,)|const|int32
call_7540 = relay.TupleGetItem(func_1762_call(relay.reshape(var_7541.astype('uint8'), [6, 14, 7]), relay.reshape(var_7541.astype('uint8'), [6, 14, 7]), relay.reshape(var_7541.astype('uint8'), [6, 14, 7]), relay.reshape(const_7542.astype('float32'), [405,]), relay.reshape(const_7543.astype('int32'), [48,]), ), 0)
call_7544 = relay.TupleGetItem(func_1768_call(relay.reshape(var_7541.astype('uint8'), [6, 14, 7]), relay.reshape(var_7541.astype('uint8'), [6, 14, 7]), relay.reshape(var_7541.astype('uint8'), [6, 14, 7]), relay.reshape(const_7542.astype('float32'), [405,]), relay.reshape(const_7543.astype('int32'), [48,]), ), 0)
output = relay.Tuple([call_7525,call_7527,const_7528,call_7540,var_7541,const_7542,const_7543,])
output2 = relay.Tuple([call_7526,call_7529,const_7528,call_7544,var_7541,const_7542,const_7543,])
func_7556 = relay.Function([var_7541,], output)
mod['func_7556'] = func_7556
mod = relay.transform.InferType()(mod)
mutated_mod['func_7556'] = func_7556
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7557 = relay.var("var_7557", dtype = "uint8", shape = (588,))#candidate|7557|(588,)|var|uint8
func_7556_call = mutated_mod.get_global_var('func_7556')
call_7558 = func_7556_call(var_7557)
output = call_7558
func_7559 = relay.Function([var_7557], output)
mutated_mod['func_7559'] = func_7559
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7506_call = mod.get_global_var('func_7506')
func_7507_call = mutated_mod.get_global_var('func_7507')
call_7617 = relay.TupleGetItem(func_7506_call(), 0)
call_7618 = relay.TupleGetItem(func_7507_call(), 0)
uop_7621 = relay.acos(call_7617.astype('float64')) # shape=(7, 2, 15)
uop_7623 = relay.acos(call_7618.astype('float64')) # shape=(7, 2, 15)
bop_7632 = relay.floor_divide(call_7617.astype('float64'), relay.reshape(uop_7621.astype('float64'), relay.shape_of(call_7617))) # shape=(7, 2, 15)
bop_7635 = relay.floor_divide(call_7618.astype('float64'), relay.reshape(uop_7623.astype('float64'), relay.shape_of(call_7618))) # shape=(7, 2, 15)
func_7556_call = mod.get_global_var('func_7556')
func_7559_call = mutated_mod.get_global_var('func_7559')
var_7637 = relay.var("var_7637", dtype = "uint8", shape = (588,))#candidate|7637|(588,)|var|uint8
call_7636 = relay.TupleGetItem(func_7556_call(relay.reshape(var_7637.astype('uint8'), [588,])), 6)
call_7638 = relay.TupleGetItem(func_7559_call(relay.reshape(var_7637.astype('uint8'), [588,])), 6)
bop_7639 = relay.greater(uop_7621.astype('bool'), relay.reshape(call_7617.astype('bool'), relay.shape_of(uop_7621))) # shape=(7, 2, 15)
bop_7642 = relay.greater(uop_7623.astype('bool'), relay.reshape(call_7618.astype('bool'), relay.shape_of(uop_7623))) # shape=(7, 2, 15)
output = relay.Tuple([bop_7632,call_7636,var_7637,bop_7639,])
output2 = relay.Tuple([bop_7635,call_7638,var_7637,bop_7642,])
func_7649 = relay.Function([var_7637,], output)
mod['func_7649'] = func_7649
mod = relay.transform.InferType()(mod)
mutated_mod['func_7649'] = func_7649
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7650 = relay.var("var_7650", dtype = "uint8", shape = (588,))#candidate|7650|(588,)|var|uint8
func_7649_call = mutated_mod.get_global_var('func_7649')
call_7651 = func_7649_call(var_7650)
output = call_7651
func_7652 = relay.Function([var_7650], output)
mutated_mod['func_7652'] = func_7652
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7701 = relay.const([[[7.188933,4.316389,6.796067,-1.679961,5.831275,-6.012750,-4.801096,5.158027,-9.092405,-7.896753,-3.616401,-4.754713],[0.022070,9.637511,-7.049273,-0.132740,1.131978,-7.420160,-3.646844,3.582335,-1.041210,-4.774058,-1.730101,-3.806937],[6.595146,-4.824315,6.010127,4.951974,-1.321082,-2.449905,-9.842610,-4.229722,-2.269802,-0.256521,3.931152,-6.919183],[4.701714,-5.023921,4.492817,2.981008,-7.360336,-2.271178,-8.565170,-2.360641,-0.522392,8.714920,8.894815,-8.422704],[-0.578654,5.742048,-5.395188,2.316392,-6.183640,2.511223,-6.110656,-1.764427,5.674473,5.019173,-7.859348,-3.109998],[-9.642397,0.046720,8.236171,-7.350138,-2.473404,7.836685,3.360371,9.675782,-7.954507,4.146513,3.341720,0.711762],[-9.694005,-0.538885,0.342051,1.532220,-9.627528,3.784421,-1.015602,3.723390,1.760788,-0.841313,3.740465,-8.233961],[-8.331777,-7.259286,7.375389,-1.626080,-1.176568,3.956022,2.949009,-0.335077,9.050413,7.108549,8.359405,2.002023],[2.339435,3.287028,2.895012,4.488655,-6.395573,9.849266,3.460480,8.801705,-4.215016,7.365195,-5.611758,2.080861],[-2.828086,6.897357,3.603660,-6.139137,-3.382625,6.489525,-3.996655,-9.793643,-0.757694,-1.586935,8.381441,-9.306686],[-4.921847,-3.771782,4.555466,2.194724,-1.704772,3.477711,9.893944,3.309296,3.488973,1.927020,5.583020,-1.145598],[1.680009,8.359082,3.613128,-9.551164,-6.289181,-3.983616,-4.301447,6.883152,-6.279576,-2.318996,-1.224909,-3.413565]],[[-8.144848,1.859939,2.572036,2.228932,4.562985,9.934038,-7.244171,-8.989777,-8.087245,-3.127624,-0.737645,-1.271167],[-5.796151,-6.914282,-4.578559,3.716871,-6.023882,-5.857399,-5.056525,-2.664564,-1.872385,-2.350730,4.874630,8.095901],[9.748437,-8.231516,3.091352,7.671296,8.245041,3.980267,-7.213915,-9.961149,9.166741,-4.347676,7.108806,6.113085],[-1.001770,-8.775499,4.503103,-0.141727,-3.137169,-6.391135,6.829070,4.689094,-1.492415,-5.246764,7.890848,5.131439],[9.701994,0.963328,8.316557,-0.595307,-8.813005,2.034885,1.233254,7.827473,2.300210,3.121539,8.496358,3.360829],[9.108957,-4.331475,3.222965,-9.107040,4.593333,5.323715,-6.724776,-2.718780,-1.691742,-0.456010,2.576817,2.142513],[-1.799307,3.248167,-0.016643,2.244047,-4.458960,-3.799769,5.279502,-6.309708,-2.322048,7.256395,-2.621878,-9.538068],[-5.811470,-8.003772,-8.101744,-8.276136,-5.820769,-2.063234,-1.885525,0.475530,1.515273,-8.445245,-6.407758,5.355641],[-8.106654,4.468572,-5.430770,-4.931463,4.115346,6.209026,-5.834118,-0.160274,8.491726,3.612527,-2.761829,7.771507],[3.928039,-5.551359,-8.979012,-4.281501,8.998249,4.405382,3.211582,-5.323516,-9.264038,-1.567544,6.035589,-8.313602],[6.048117,-0.233589,-6.178953,0.713250,-1.354562,6.197193,5.920594,8.371101,7.677758,8.483222,-4.454760,1.119139],[6.699386,-6.185619,-3.788322,0.702094,-7.965976,7.430336,3.935498,-6.715309,1.043419,9.339958,-6.963664,9.661460]],[[1.600887,-0.803835,-0.504261,5.512779,-9.157195,-5.896648,-3.004879,-5.701376,7.844624,2.210535,3.838902,-4.024332],[1.403464,2.960069,9.685403,2.280671,7.567348,-0.296116,-4.548020,6.485193,8.430275,2.520138,-3.657257,7.062874],[-0.362307,-9.781991,-9.908397,-9.560819,-5.818219,4.109164,-8.193768,9.197766,0.398486,8.000054,3.427041,-6.822468],[-4.882111,-2.609535,1.600324,-6.200535,-3.916147,1.263777,-7.772041,-0.680410,-5.245344,-5.184525,-5.506036,-1.572744],[5.007352,7.084215,3.696865,-7.942446,-6.169559,-2.122480,-7.362646,3.402054,7.435148,3.816362,-8.200629,8.265093],[-9.842696,3.570060,4.385675,-5.354612,6.513500,5.470559,0.952490,-0.414686,-9.607823,1.085734,6.209439,0.668286],[-4.273326,-1.118676,-8.336764,3.457936,2.701778,1.040107,-2.397868,-3.178452,-5.569918,-0.290088,4.352253,4.674002],[1.762403,-5.524263,1.619871,-5.581665,-6.388604,-9.170445,-4.267563,5.671065,-3.942368,-7.303141,-6.543525,-1.451461],[-0.206160,-9.442517,6.692517,5.279046,1.203249,2.407309,9.034337,-5.702584,4.895450,-2.540089,-5.653615,8.603749],[-4.794354,0.966889,-9.805004,0.661060,9.032680,-1.951770,4.390359,1.685760,6.225450,1.713185,-3.600383,1.149530],[-3.692592,1.145053,3.469745,9.626576,-0.825765,3.977423,-5.135854,8.581318,-8.670763,-2.536514,9.358671,-5.019800],[0.252705,3.105682,6.536001,8.717853,-4.740041,-9.203691,6.859006,-5.187130,8.872119,4.819182,-7.413646,5.294085]],[[-2.948550,5.585609,1.446802,0.801643,7.353804,7.892015,7.327541,3.058127,5.729944,3.245292,8.103184,5.881622],[9.291996,7.061606,3.505660,7.381303,-3.673165,-2.652739,-6.931680,-4.229012,-7.392174,7.843838,-2.693960,-4.429327],[-6.424274,9.599882,7.951334,-2.905013,3.696360,-6.336790,-2.795500,-7.207773,-4.044809,3.534636,-4.982303,0.218526],[5.290260,-6.673203,9.171305,3.971069,9.350255,6.461080,2.140761,0.664397,9.323991,-9.119760,0.308473,7.640298],[4.585491,7.684836,-3.601515,-8.439222,7.272863,-6.108401,9.149379,-6.823340,-8.636272,8.689159,-7.898163,-7.128045],[1.706620,1.297374,6.776539,-9.558094,2.774506,3.456224,-0.128365,5.708416,-6.546558,-2.158821,-5.811803,-3.969707],[3.416631,-3.515419,4.803101,1.208591,0.236102,9.129752,6.623866,9.942608,1.801466,8.993644,0.070878,2.256183],[-1.310259,7.626969,4.946874,8.105915,-3.401325,-6.031150,-9.290339,-0.254143,-5.874303,-3.990605,2.762354,0.788991],[-5.750943,7.193376,9.901841,-1.698274,-3.884818,-1.890856,9.953169,-0.672285,-6.246301,0.719737,3.351349,-1.685803],[-9.497059,5.104294,7.700395,-2.559033,3.051541,0.049472,6.199065,-3.690489,2.621541,6.021979,-3.086836,-9.072276],[-1.975033,6.192845,3.770874,3.992601,9.497181,-0.810424,8.701566,-9.689620,-1.588973,-4.556958,4.420130,0.367112],[5.979372,-6.298816,6.955782,-1.953964,-2.780031,4.734055,-4.816991,8.299335,0.340728,-7.971325,3.247560,-4.438465]],[[-3.510492,0.992073,3.872840,-5.161181,0.183168,4.180136,-7.526528,-6.677445,9.544547,-2.742839,-7.553566,0.483957],[3.657496,5.029529,4.965397,-8.262722,-3.207946,0.301881,3.459688,-1.992927,-1.394064,4.727054,-3.404085,-6.638517],[0.619711,3.969046,-6.495561,1.725558,-0.940119,-0.436701,-2.428006,1.105862,-0.042828,4.580924,-9.333016,-3.352666],[1.908786,0.682691,6.774818,9.761152,8.822743,1.223210,-3.998832,5.173801,9.112538,-7.144810,6.130095,-5.835073],[-7.190515,2.929213,0.733871,-7.810862,5.181887,-0.373354,9.790603,5.424541,-7.734873,-0.568881,5.287478,4.533946],[-8.209712,0.639619,4.439675,0.810855,0.279667,3.147112,1.387231,4.311084,5.612224,6.703651,8.591350,5.902656],[2.575009,-6.096081,-9.566077,6.789441,6.736470,-4.272788,-3.683087,0.153549,-6.391624,2.450538,-2.301236,-0.518132],[-3.019648,-1.944571,-6.115245,-9.520146,2.874723,-7.883384,-3.895936,-4.284435,-9.825642,9.049282,1.337708,-6.406937],[4.745893,4.309449,-8.196162,9.258866,8.130265,9.360311,-0.960037,-7.477554,-9.385038,1.736967,-5.417776,6.394318],[-8.377775,-0.578996,4.134544,8.244434,-4.333771,-9.662768,-2.095005,3.217510,8.080785,4.334350,-6.387445,2.558459],[-9.756580,-9.847297,0.910707,-6.272388,-3.125540,4.718733,0.687504,-8.639424,7.346678,6.456958,-9.249627,3.882118],[4.085889,1.505753,-7.023146,-3.460505,3.391647,-3.161665,-2.404161,-4.841210,0.116054,-7.898634,-7.457916,-1.087728]],[[3.870684,0.050208,-7.602201,9.022733,9.579033,-6.985867,-7.845517,3.001475,1.339578,-9.481341,-3.178259,-3.794942],[-8.361600,-8.328526,4.192758,-8.327395,-0.607988,-9.586773,-9.801835,-7.548170,5.988786,-8.972390,-1.629065,1.353971],[8.223295,6.967817,5.058438,8.790902,1.443069,-5.173762,-1.063551,1.877245,9.875473,3.495035,-8.796131,7.838918],[-2.289806,6.492588,2.965865,-0.818244,-1.813129,-6.090995,0.635836,4.071354,-8.012804,3.777226,-0.688259,9.072599],[3.210084,1.507926,4.143688,8.518772,-4.808428,-8.387227,5.476386,-1.898180,-2.190834,1.271099,-0.848990,-9.907276],[3.140088,7.540059,1.597730,1.081063,-0.426157,-1.562102,8.820070,2.368435,-6.812891,-1.647073,7.012647,6.861840],[1.333552,9.743945,3.842325,-2.935143,-8.406907,-1.632700,3.067724,-0.147669,-9.947715,8.468029,-5.270004,-1.132816],[-3.692804,-2.642799,7.230960,4.382381,6.813809,8.425333,7.603708,7.309603,6.323613,9.858900,3.123152,-6.571715],[-0.437483,0.109645,0.283971,5.763982,-9.551080,0.476112,2.084219,9.676045,1.597007,3.487715,-7.701780,-5.199606],[-7.420347,-1.448171,9.534373,9.748961,-8.156937,-0.990600,-1.143659,7.751424,-2.676443,2.774038,-2.762429,-6.052579],[1.978518,-9.578470,-2.425158,8.694840,-2.097531,-8.439823,7.120913,3.419644,-5.011646,3.713275,6.349524,-9.179953],[2.074323,7.034784,-6.670767,2.937231,4.893965,1.782228,7.204358,-7.741467,7.444726,3.298564,-6.998518,-0.978418]],[[9.400615,-8.682745,0.285974,-8.036261,-4.945505,-0.377536,3.300557,-3.821610,7.213353,-0.814715,-5.140077,-5.214627],[2.981423,-3.879357,-7.052913,-1.633101,-4.473902,-2.410832,8.435627,-0.427784,-1.711785,-1.103782,9.098352,-0.968006],[3.805873,8.223622,8.480524,9.506592,9.195470,-3.466640,-9.498973,7.724513,6.010436,-5.785266,-4.286114,-6.711949],[6.163458,-8.304319,1.742047,4.276054,3.720644,4.261680,-7.941871,9.441675,-0.547312,6.174057,0.346697,-2.732768],[-5.754863,2.417042,0.914513,4.471017,8.766664,0.247715,-0.717021,1.348197,1.139101,-8.676151,7.227048,-7.532903],[-2.004508,-9.469692,-5.609427,-5.016806,-3.047723,-5.944261,-4.430734,-9.649388,5.952437,-4.233032,9.373761,-4.726384],[-3.361459,-0.134207,-5.732140,-3.748134,3.281486,-7.075175,3.015172,-6.951180,3.809592,8.941376,0.331361,8.748583],[-0.974142,-6.751421,0.527099,-3.485535,-6.108884,5.836246,3.713596,4.953817,-3.558339,3.908853,-6.459322,3.346746],[-1.585342,2.034044,6.942223,-2.710755,4.398713,6.772076,1.785941,-5.353048,-0.661121,5.179054,0.569491,-2.769389],[-1.616999,0.926091,-5.653209,-0.717266,-2.964996,-1.365497,-9.145934,5.894062,6.352401,-4.033594,-4.194454,-1.989817],[-0.181459,4.404691,-4.395663,-4.974852,9.003689,-4.520838,-5.412787,-1.581376,-7.238337,-9.428839,9.447250,-2.432067],[-0.138929,-6.779353,-1.185807,-2.941318,-0.391048,-7.944433,5.563278,7.629107,5.982468,-6.134748,4.024116,-4.448751]],[[5.176649,-0.563306,-4.703907,-5.417053,-2.736675,2.061678,4.155973,5.299016,5.609209,4.635563,-6.167196,8.746230],[-6.295789,-5.345818,-8.589918,3.257631,0.137889,3.291534,5.987056,9.460289,-2.472131,-0.377581,-0.864781,4.538014],[1.120683,-8.461128,9.421733,3.220449,-1.271555,2.957613,-5.389298,-1.957879,2.331237,5.222821,2.659837,-3.436504],[-4.786775,-4.068094,-1.893009,-8.003370,-1.189625,-2.442019,5.384765,3.667183,6.808728,-1.641115,1.405216,3.561702],[-9.987866,2.604354,9.857309,5.186306,-9.195457,-2.696855,2.292431,6.285466,-8.948980,-7.417906,7.512742,1.078513],[-3.403797,6.532599,-4.656866,-5.878542,9.584430,4.572788,6.823461,-6.273796,-7.573103,5.632948,-7.323230,8.668105],[-7.762658,-3.006783,8.793320,-2.065755,7.630685,4.346309,-6.843242,9.200245,-5.994190,6.369007,1.869393,2.399924],[-3.615742,-6.893305,3.123139,6.871615,8.257025,-4.858688,7.936252,-4.447650,-3.044171,3.650156,-6.442878,-6.065011],[8.802257,-7.186242,-3.518465,-3.155079,-5.613371,7.475815,-2.214059,5.420222,-2.991822,-5.432941,-0.453887,-4.163495],[-9.927227,-5.366316,-7.144974,0.125610,-7.525344,9.493385,-1.455393,0.048914,-8.893224,-1.107825,-8.772704,-5.668283],[0.853103,-6.638012,1.566936,-6.330398,-8.704967,-0.406458,-3.987772,-6.076698,-4.281938,9.478910,7.730318,4.413245],[4.230794,-4.413548,-3.723051,-7.803690,3.854790,1.293352,5.481340,6.751878,-8.014821,1.351075,2.646277,3.835546]],[[2.850714,-2.213012,-6.847475,-4.610687,-8.316716,9.404444,4.618163,-9.646821,-2.034004,5.470218,-7.329869,-3.957733],[5.296380,5.935050,9.722095,-2.790247,0.716269,-2.485218,-1.037307,0.669672,1.312019,2.866573,-1.598570,-1.070250],[-5.011032,-5.307503,-6.015089,0.301711,-8.425961,-5.021049,-7.721014,-0.244377,-6.514804,0.289127,1.259392,2.456652],[1.252931,0.658544,-6.959308,-1.342720,-0.775927,7.063217,1.481328,-2.097997,1.000773,-9.154777,6.241472,1.198709],[3.908551,-0.638930,2.919731,4.702824,6.806500,-6.024387,-6.936384,-2.540401,-2.886751,8.495846,-4.579563,3.608373],[0.594326,3.239351,3.083729,-5.515386,6.519599,0.660426,-8.726813,2.224754,-8.915860,7.863619,9.129281,4.086697],[-5.967880,1.803248,-1.086516,-1.130009,-0.734129,-3.717057,6.787695,-1.192653,6.908226,2.035639,9.713463,5.385164],[0.472930,-2.551808,-9.524125,-6.579431,9.529101,-2.986819,-0.042556,9.514096,-6.012076,-6.429178,-8.191538,9.045165],[9.825835,6.338874,7.396812,-4.332673,3.978537,5.516359,-3.255025,-6.717069,-8.297802,1.333489,-0.522679,8.288101],[-9.437079,-4.761609,8.155046,-3.581544,-1.879417,2.377785,4.942654,-2.547378,-7.578130,-4.461586,3.122132,-4.069965],[9.834362,1.908312,-3.362023,8.866302,-8.262074,2.895050,1.991051,-4.224513,2.480719,1.195039,0.949186,-4.543457],[-8.053886,-4.682158,0.445638,0.784801,-6.862466,-6.161497,8.632274,7.288196,8.632688,7.478760,5.109622,1.687108]]], dtype = "float64")#candidate|7701|(9, 12, 12)|const|float64
uop_7702 = relay.atan(const_7701.astype('float64')) # shape=(9, 12, 12)
func_6569_call = mod.get_global_var('func_6569')
func_6573_call = mutated_mod.get_global_var('func_6573')
var_7706 = relay.var("var_7706", dtype = "int64", shape = (2925,))#candidate|7706|(2925,)|var|int64
call_7705 = relay.TupleGetItem(func_6569_call(relay.reshape(var_7706.astype('int64'), [13, 15, 15]), relay.reshape(var_7706.astype('int64'), [13, 15, 15]), ), 0)
call_7707 = relay.TupleGetItem(func_6573_call(relay.reshape(var_7706.astype('int64'), [13, 15, 15]), relay.reshape(var_7706.astype('int64'), [13, 15, 15]), ), 0)
bop_7708 = relay.greater_equal(call_7705.astype('bool'), relay.reshape(var_7706.astype('bool'), relay.shape_of(call_7705))) # shape=(13, 15, 15)
bop_7711 = relay.greater_equal(call_7707.astype('bool'), relay.reshape(var_7706.astype('bool'), relay.shape_of(call_7707))) # shape=(13, 15, 15)
output = relay.Tuple([uop_7702,bop_7708,])
output2 = relay.Tuple([uop_7702,bop_7711,])
func_7721 = relay.Function([var_7706,], output)
mod['func_7721'] = func_7721
mod = relay.transform.InferType()(mod)
mutated_mod['func_7721'] = func_7721
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7722 = relay.var("var_7722", dtype = "int64", shape = (2925,))#candidate|7722|(2925,)|var|int64
func_7721_call = mutated_mod.get_global_var('func_7721')
call_7723 = func_7721_call(var_7722)
output = call_7723
func_7724 = relay.Function([var_7722], output)
mutated_mod['func_7724'] = func_7724
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7259_call = mod.get_global_var('func_7259')
func_7261_call = mutated_mod.get_global_var('func_7261')
call_7750 = func_7259_call()
call_7751 = func_7259_call()
uop_7752 = relay.sigmoid(call_7750.astype('float32')) # shape=(7, 2, 15)
uop_7754 = relay.sigmoid(call_7751.astype('float32')) # shape=(7, 2, 15)
func_2359_call = mod.get_global_var('func_2359')
func_2364_call = mutated_mod.get_global_var('func_2364')
var_7756 = relay.var("var_7756", dtype = "float64", shape = (12, 4))#candidate|7756|(12, 4)|var|float64
var_7757 = relay.var("var_7757", dtype = "float64", shape = (1, 624))#candidate|7757|(1, 624)|var|float64
var_7758 = relay.var("var_7758", dtype = "float32", shape = (468,))#candidate|7758|(468,)|var|float32
call_7755 = relay.TupleGetItem(func_2359_call(relay.reshape(var_7756.astype('float64'), [6, 1, 8]), relay.reshape(var_7757.astype('float64'), [6, 13, 8]), relay.reshape(var_7758.astype('float32'), [468,]), ), 6)
call_7759 = relay.TupleGetItem(func_2364_call(relay.reshape(var_7756.astype('float64'), [6, 1, 8]), relay.reshape(var_7757.astype('float64'), [6, 13, 8]), relay.reshape(var_7758.astype('float32'), [468,]), ), 6)
const_7767 = relay.const([[[3.204996,-1.180666,2.946101,8.737997,0.693423,1.732632,-1.172880,6.071636,1.584191,9.840636,-3.199268,-7.137095,-9.090336,2.560025,-7.179282],[1.011382,6.121122,7.818468,-7.688223,-1.972856,-7.797872,-9.289207,-2.575577,-4.426454,6.527388,0.065693,-9.613884,7.823397,8.188651,-0.476744]],[[-8.234343,8.975653,3.050632,-4.755115,7.208649,6.506958,-6.453579,-9.194645,-7.402299,-7.678035,-2.222896,9.628653,5.301680,0.914476,8.445126],[-2.287159,-9.522086,7.371780,1.330435,3.487117,7.445977,-3.630191,-6.825955,-2.949944,6.953035,-2.381467,-8.453686,-9.768189,-3.113665,-1.219914]],[[4.787723,2.625779,-7.879087,3.592545,-2.041468,-2.051506,-3.677578,-1.198718,8.957227,1.104269,9.202280,-7.123290,2.863995,-0.544549,6.693164],[2.399691,6.017906,-0.337028,4.145085,5.353519,-6.709566,1.800585,4.489734,4.579069,7.927821,5.561638,-0.925004,-4.923916,1.257798,5.607870]],[[-9.337959,3.771761,-3.286020,7.032337,-7.699636,4.153551,0.880128,5.769192,-5.757330,9.511218,6.801117,9.782419,7.145190,0.427871,-1.194856],[5.926997,3.870827,-4.491494,-3.057628,0.869576,5.169437,9.933989,-5.621801,3.775341,4.134262,-5.516223,2.964233,-8.438202,2.684153,9.453245]],[[-3.638925,-1.878721,-5.500137,1.804642,9.978419,3.636144,-0.875231,9.521986,7.202879,2.824661,4.011026,7.513771,6.048210,2.279912,6.921327],[-9.701253,7.840333,0.653512,-0.724335,-3.922334,7.247164,-9.048557,-7.220173,-4.148653,-6.388695,-3.768952,5.024927,-1.545821,9.907554,-7.304142]],[[8.287259,2.331078,7.843091,-9.315894,3.578208,7.130058,-1.421078,-9.338281,4.685367,-9.377965,4.483303,-6.781143,-5.221122,1.733393,-5.184450],[-9.768909,7.627421,9.327045,-2.326599,-8.628308,-8.515933,-4.019816,9.522557,-3.212199,-4.355279,-1.033741,0.557973,-5.271265,9.165670,-2.401396]],[[1.998143,4.546848,-9.458937,-4.458778,-2.446634,-3.287301,-7.462401,8.624927,-9.541956,7.795655,-8.860977,-8.684015,-9.567496,4.659009,-8.645528],[9.869611,-6.106369,-6.782231,5.667131,1.681838,5.494564,9.752251,2.318150,1.296105,-1.846477,-6.156513,-8.667925,-1.047105,4.328160,0.220038]]], dtype = "float32")#candidate|7767|(7, 2, 15)|const|float32
bop_7768 = relay.subtract(uop_7752.astype('int64'), relay.reshape(const_7767.astype('int64'), relay.shape_of(uop_7752))) # shape=(7, 2, 15)
bop_7771 = relay.subtract(uop_7754.astype('int64'), relay.reshape(const_7767.astype('int64'), relay.shape_of(uop_7754))) # shape=(7, 2, 15)
output = relay.Tuple([call_7755,var_7756,var_7757,var_7758,bop_7768,])
output2 = relay.Tuple([call_7759,var_7756,var_7757,var_7758,bop_7771,])
func_7781 = relay.Function([var_7756,var_7757,var_7758,], output)
mod['func_7781'] = func_7781
mod = relay.transform.InferType()(mod)
mutated_mod['func_7781'] = func_7781
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7781_call = mutated_mod.get_global_var('func_7781')
var_7783 = relay.var("var_7783", dtype = "float64", shape = (12, 4))#candidate|7783|(12, 4)|var|float64
var_7784 = relay.var("var_7784", dtype = "float64", shape = (1, 624))#candidate|7784|(1, 624)|var|float64
var_7785 = relay.var("var_7785", dtype = "float32", shape = (468,))#candidate|7785|(468,)|var|float32
call_7782 = func_7781_call(var_7783,var_7784,var_7785,)
output = call_7782
func_7786 = relay.Function([var_7783,var_7784,var_7785,], output)
mutated_mod['func_7786'] = func_7786
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7115_call = mod.get_global_var('func_7115')
func_7116_call = mutated_mod.get_global_var('func_7116')
call_7804 = func_7115_call()
call_7805 = func_7115_call()
func_5702_call = mod.get_global_var('func_5702')
func_5705_call = mutated_mod.get_global_var('func_5705')
var_7822 = relay.var("var_7822", dtype = "float32", shape = (1040,))#candidate|7822|(1040,)|var|float32
call_7821 = relay.TupleGetItem(func_5702_call(relay.reshape(var_7822.astype('float32'), [16, 5, 13]), relay.reshape(var_7822.astype('float32'), [16, 5, 13]), ), 0)
call_7823 = relay.TupleGetItem(func_5705_call(relay.reshape(var_7822.astype('float32'), [16, 5, 13]), relay.reshape(var_7822.astype('float32'), [16, 5, 13]), ), 0)
bop_7847 = relay.bitwise_xor(var_7822.astype('int32'), relay.reshape(call_7821.astype('int32'), relay.shape_of(var_7822))) # shape=(1040,)
bop_7850 = relay.bitwise_xor(var_7822.astype('int32'), relay.reshape(call_7823.astype('int32'), relay.shape_of(var_7822))) # shape=(1040,)
uop_7862 = relay.cosh(bop_7847.astype('float32')) # shape=(1040,)
uop_7864 = relay.cosh(bop_7850.astype('float32')) # shape=(1040,)
output = relay.Tuple([call_7804,uop_7862,])
output2 = relay.Tuple([call_7805,uop_7864,])
func_7879 = relay.Function([var_7822,], output)
mod['func_7879'] = func_7879
mod = relay.transform.InferType()(mod)
var_7880 = relay.var("var_7880", dtype = "float32", shape = (1040,))#candidate|7880|(1040,)|var|float32
output = func_7879(var_7880)
func_7881 = relay.Function([var_7880], output)
mutated_mod['func_7881'] = func_7881
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7259_call = mod.get_global_var('func_7259')
func_7261_call = mutated_mod.get_global_var('func_7261')
call_7982 = func_7259_call()
call_7983 = func_7259_call()
output = relay.Tuple([call_7982,])
output2 = relay.Tuple([call_7983,])
func_8015 = relay.Function([], output)
mod['func_8015'] = func_8015
mod = relay.transform.InferType()(mod)
mutated_mod['func_8015'] = func_8015
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8015_call = mutated_mod.get_global_var('func_8015')
call_8016 = func_8015_call()
output = call_8016
func_8017 = relay.Function([], output)
mutated_mod['func_8017'] = func_8017
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7331_call = mod.get_global_var('func_7331')
func_7333_call = mutated_mod.get_global_var('func_7333')
call_8110 = relay.TupleGetItem(func_7331_call(), 0)
call_8111 = relay.TupleGetItem(func_7333_call(), 0)
func_6491_call = mod.get_global_var('func_6491')
func_6495_call = mutated_mod.get_global_var('func_6495')
var_8115 = relay.var("var_8115", dtype = "int8", shape = ())#candidate|8115|()|var|int8
const_8116 = relay.const([2,-5,9,-8,-7,-6,-5,9,-1], dtype = "int8")#candidate|8116|(9,)|const|int8
call_8114 = relay.TupleGetItem(func_6491_call(relay.reshape(var_8115.astype('int8'), []), relay.reshape(const_8116.astype('int8'), [1, 9]), ), 2)
call_8117 = relay.TupleGetItem(func_6495_call(relay.reshape(var_8115.astype('int8'), []), relay.reshape(const_8116.astype('int8'), [1, 9]), ), 2)
func_7556_call = mod.get_global_var('func_7556')
func_7559_call = mutated_mod.get_global_var('func_7559')
var_8127 = relay.var("var_8127", dtype = "uint8", shape = (588,))#candidate|8127|(588,)|var|uint8
call_8126 = relay.TupleGetItem(func_7556_call(relay.reshape(var_8127.astype('uint8'), [588,])), 2)
call_8128 = relay.TupleGetItem(func_7559_call(relay.reshape(var_8127.astype('uint8'), [588,])), 2)
output = relay.Tuple([call_8110,call_8114,var_8115,const_8116,call_8126,var_8127,])
output2 = relay.Tuple([call_8111,call_8117,var_8115,const_8116,call_8128,var_8127,])
func_8132 = relay.Function([var_8115,var_8127,], output)
mod['func_8132'] = func_8132
mod = relay.transform.InferType()(mod)
mutated_mod['func_8132'] = func_8132
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8132_call = mutated_mod.get_global_var('func_8132')
var_8134 = relay.var("var_8134", dtype = "int8", shape = ())#candidate|8134|()|var|int8
var_8135 = relay.var("var_8135", dtype = "uint8", shape = (588,))#candidate|8135|(588,)|var|uint8
call_8133 = func_8132_call(var_8134,var_8135,)
output = call_8133
func_8136 = relay.Function([var_8134,var_8135,], output)
mutated_mod['func_8136'] = func_8136
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7238_call = mod.get_global_var('func_7238')
func_7240_call = mutated_mod.get_global_var('func_7240')
call_8143 = relay.TupleGetItem(func_7238_call(), 0)
call_8144 = relay.TupleGetItem(func_7240_call(), 0)
func_1762_call = mod.get_global_var('func_1762')
func_1768_call = mutated_mod.get_global_var('func_1768')
const_8148 = relay.const([-3,-8,-8,3,-7,1,7,-6,4,-6,-9,2,-1,7,-6,-9,-1,-9,6,-8,-2,7,-2,6,-4,-6,7,1,8,7,2,-2,-5,-5,-3,-5,1,-4,-4,-2,1,1,5,6,-10,9,3,7,4,-8,-5,4,5,-1,-6,-7,-1,7,-10,1,-7,2,-4,5,-10,-7,-8,-3,6,-9,-6,-3,5,-5,2,7,-6,9,-9,-10,-9,-6,-5,-7,-2,7,-3,7,10,-4,-7,4,-1,5,-9,-3,-1,5,-7,-1,1,6,-8,-5,-6,5,-2,-9,3,-5,1,1,4,-10,-2,-9,-8,-8,-10,7,2,1,10,-6,-6,-5,8,10,4,4,-10,-1,-2,5,4,9,-3,-1,-10,5,-8,6,-8,10,6,-10,-1,-7,1,-6,-3,2,-5,8,-8,3,5,5,-6,9,-1,10,-1,-4,8,-9,4,8,2,5,9,9,-9,-9,-9,9,-7,-1,-8,3,4,-9,-1,8,-1,5,-2,5,-7,8,-5,6,-6,10,-4,9,5,6,3,1,-6,-5,1,2,8,-3,-7,-3,-6,6,-10,-7,5,2,9,3,2,-6,1,10,-9,10,-4,8,10,1,1,4,3,-5,3,-8,7,7,-5,7,4,8,2,9,2,-1,-7,-10,-3,5,-2,-9,8,-6,7,-6,3,-8,-2,7,4,-8,3,3,2,9,2,2,8,-4,-3,5,-4,1,7,-1,-5,3,-6,3,-8,-1,-4,10,-3,6,-7,-4,-3,9,2,-4,9,-7,8,7,4,-4,-3,10,-3,3,-9,-10,-1,-6,-9,2,-8,6,-10,-1,1,3,-2,-1,3,-4,1,7,-3,7,-5,-1,-9,-10,10,-5,7,-6,-3,3,-10,-8,-8,-5,2,-2,-2,-10,10,1,-1,2,6,-6,-6,5,-5,1,2,6,-7,-10,1,-1,2,-2,10,-1,-5,-5,6,-9,5,-6,-5,2,1,2,-4,5,-6,-10,-3,1,8,9,8,-6,-9,9,-5,7,-2,7,3,-3,9,3,2,1,10,5,7,10,-4,-1,1,-4,-6,-1,5,8,-7,7,5,-1,-8,-4,10,3,4,-2,4,9,10,-1,-6,-10,-7,2,7,-6,2,1,3,-5,-10,3,-4,3,6,9,-10,5,-6,-9,2,7,7,-7,2,9,-8,3,9,-8,-8,7,3,-5,-8,-1,2,-8,6,3,-7,7,7,9,-5,-10,-3,-3,8,-7,-4,9,-8,7,2,1,2,-5,7,-6,-3,7,5,2,8,2,-10,10,-7,4,-8,-9,3,1,9,4,8,-8,3,-8,1,-5,-10,1,-3,-9,9,1,-1,4,4,4,1,-6,-1,-7,2,-3,8,-2,-8,10,-6,-1,-7,-10,3,4,-5,-2,3,-9,1,9,-8,10,1,-7,-5,5,1,3,-9,-2,5,3,3,-7,5,-4,7,1,6,-5,6,2,-7,-3,-2,-3,9,7,7,6,9,5,6,4,-5,4,2,1,9,-8,-1,9,8,-1,9,-6,-1,-6,10,10,10,-9,10,-4,3,1,4,5,-6,-8], dtype = "uint8")#candidate|8148|(588,)|const|uint8
const_8149 = relay.const([[8.284766,-4.323898,-6.316825,9.719484,1.494024,-5.106403,6.449217,-3.477029,-7.784779,-3.252381,3.576994,-7.227374,1.503690,-4.687948,1.220057,7.674702,-8.049962,4.287240,-1.526761,-7.973633,-2.942158,-2.072830,5.568753,4.498447,6.143732,8.293466,-5.527734,4.299761,7.811753,2.614869,9.140275,7.129660,-1.791808,1.745485,-8.365142,6.019803,-1.215926,-7.685940,-0.702771,-3.987239,4.855768,-5.979013,8.830314,7.037959,7.183509],[5.166795,9.730966,-8.266848,-7.380081,-3.388211,8.400454,4.792184,6.722146,-4.047287,5.733224,8.097857,-7.001047,-7.770090,2.684858,-6.939167,-1.393524,-6.219514,4.406425,-7.232053,-2.243545,-9.309054,-9.944075,7.458204,6.764052,8.013670,-4.080024,4.440458,-3.183817,2.785417,1.350874,-5.939560,5.522512,2.633547,6.654874,-5.138553,-7.503188,3.679754,-3.606152,-1.862712,-3.030346,-8.202137,-2.022255,4.473863,4.202879,-3.809584],[4.426102,2.058674,9.141801,1.561375,-2.131044,-6.911498,-5.957192,7.933424,4.237830,-0.111215,8.428767,-3.086697,-7.403438,-5.228260,-3.916167,-4.874082,8.129586,9.054056,-1.423778,6.975355,-8.759569,1.530117,1.903282,-9.328244,-5.391207,6.852046,8.518864,0.419019,0.196455,-7.670311,-4.347208,1.098200,-5.799582,1.418346,2.715181,3.343091,-0.442065,-9.519241,5.321054,-1.792869,0.605085,8.189883,-2.345580,-9.685662,-5.898031],[2.404952,1.532191,-5.024717,0.420083,-1.452017,-6.278988,5.193528,-0.631267,-8.872733,-7.603861,8.954746,-4.294936,-8.977786,1.170821,6.371180,0.224779,6.691362,3.247684,-1.189376,9.865912,-1.524364,-6.752062,-2.147309,8.977375,-2.813921,-3.223700,-9.123734,-6.781563,7.343257,5.783018,9.118205,9.828150,-8.251059,-3.253913,-9.237343,4.180049,8.504421,-3.186498,4.652214,8.069005,9.663012,1.625031,-3.367314,-9.421877,-8.789271],[-4.019441,3.775671,-4.195934,7.357817,-5.760985,-2.952842,-0.454994,-9.904026,1.766459,-0.434722,7.089085,-5.348052,4.682151,1.630762,-3.595062,-8.527973,0.933044,0.349378,4.303260,7.065144,-6.119019,7.836106,5.155387,4.084602,8.587076,2.102244,8.389921,-0.275293,8.611640,-4.066540,0.374509,-8.659677,-8.037108,-6.103418,-2.874199,-8.335345,6.462058,0.775332,1.295436,4.127148,8.613155,7.106974,5.973863,0.895507,5.092451],[-3.489338,-2.877306,-1.324896,-7.043882,-9.603700,-5.296353,6.062054,2.106163,-6.418507,0.963131,8.188482,2.626788,6.719002,-0.116562,2.705501,8.436431,-9.959681,-2.073030,-9.410418,6.080446,-4.001718,8.835999,7.510414,-3.076064,3.067474,-6.305206,-6.416787,-1.316995,-8.525115,3.797291,-9.415937,4.797279,-4.184915,9.865076,1.023696,-5.155499,-8.852443,4.952817,-5.206619,-4.481762,-8.117969,-5.124891,-9.491428,-6.918924,-7.363448],[-1.675069,-3.594149,9.996108,3.562327,-4.233269,-1.536539,-8.079147,-0.889322,-6.456877,-7.321581,1.504927,5.745947,0.836392,-2.073350,-5.168161,4.008333,7.735503,5.145873,3.402743,-1.774481,7.149058,-4.450262,7.232162,9.204673,1.256362,-8.630998,-7.018737,-2.690498,8.272464,-1.388718,0.953500,-2.087234,9.636615,-8.883486,2.341132,-8.598710,9.996158,-3.174932,-2.544373,-7.035298,5.798253,-2.822930,2.746599,-4.047951,6.162689],[-9.294478,-3.715685,9.817203,-0.066958,-8.658008,-0.049085,-2.009950,6.390318,6.985720,1.223467,0.143966,-7.391287,-7.492204,5.339432,2.355147,7.926572,4.014574,-6.472957,-7.012060,-6.140495,-5.128220,0.426743,-8.041483,-8.022097,-5.538180,-8.674153,-4.249482,1.009807,-4.742531,4.312469,8.438544,0.706294,3.947781,-9.962599,9.839661,-3.094831,9.942422,-4.886117,3.285756,2.476755,-3.882766,9.402182,5.747153,-2.661258,7.340188],[0.729412,-5.470178,-5.182424,-6.825388,7.102827,5.300660,-5.647277,-2.863273,6.569414,5.053914,6.932819,-1.995179,-2.029502,-2.501382,0.210474,2.445306,-6.651262,9.725429,6.409748,1.592355,6.840079,-7.966717,-5.641954,2.394200,-4.227620,-4.465512,-1.203958,0.900569,-7.883136,3.498496,7.961166,-8.554768,6.253610,-3.341390,-9.983752,7.542190,6.984115,9.235074,-1.631261,8.768670,7.887323,5.232860,-5.167414,-9.649517,-2.258356]], dtype = "float32")#candidate|8149|(9, 45)|const|float32
var_8150 = relay.var("var_8150", dtype = "int32", shape = (1, 48))#candidate|8150|(1, 48)|var|int32
call_8147 = relay.TupleGetItem(func_1762_call(relay.reshape(const_8148.astype('uint8'), [6, 14, 7]), relay.reshape(const_8148.astype('uint8'), [6, 14, 7]), relay.reshape(const_8148.astype('uint8'), [6, 14, 7]), relay.reshape(const_8149.astype('float32'), [405,]), relay.reshape(var_8150.astype('int32'), [48,]), ), 1)
call_8151 = relay.TupleGetItem(func_1768_call(relay.reshape(const_8148.astype('uint8'), [6, 14, 7]), relay.reshape(const_8148.astype('uint8'), [6, 14, 7]), relay.reshape(const_8148.astype('uint8'), [6, 14, 7]), relay.reshape(const_8149.astype('float32'), [405,]), relay.reshape(var_8150.astype('int32'), [48,]), ), 1)
func_7259_call = mod.get_global_var('func_7259')
func_7261_call = mutated_mod.get_global_var('func_7261')
call_8159 = func_7259_call()
call_8160 = func_7259_call()
output = relay.Tuple([call_8143,call_8147,const_8148,const_8149,var_8150,call_8159,])
output2 = relay.Tuple([call_8144,call_8151,const_8148,const_8149,var_8150,call_8160,])
func_8161 = relay.Function([var_8150,], output)
mod['func_8161'] = func_8161
mod = relay.transform.InferType()(mod)
var_8162 = relay.var("var_8162", dtype = "int32", shape = (1, 48))#candidate|8162|(1, 48)|var|int32
output = func_8161(var_8162)
func_8163 = relay.Function([var_8162], output)
mutated_mod['func_8163'] = func_8163
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8174 = relay.var("var_8174", dtype = "float64", shape = (11, 4, 14))#candidate|8174|(11, 4, 14)|var|float64
var_8175 = relay.var("var_8175", dtype = "float64", shape = (11, 4, 14))#candidate|8175|(11, 4, 14)|var|float64
bop_8176 = relay.floor_mod(var_8174.astype('float64'), relay.reshape(var_8175.astype('float64'), relay.shape_of(var_8174))) # shape=(11, 4, 14)
output = relay.Tuple([bop_8176,])
output2 = relay.Tuple([bop_8176,])
func_8184 = relay.Function([var_8174,var_8175,], output)
mod['func_8184'] = func_8184
mod = relay.transform.InferType()(mod)
var_8185 = relay.var("var_8185", dtype = "float64", shape = (11, 4, 14))#candidate|8185|(11, 4, 14)|var|float64
var_8186 = relay.var("var_8186", dtype = "float64", shape = (11, 4, 14))#candidate|8186|(11, 4, 14)|var|float64
output = func_8184(var_8185,var_8186,)
func_8187 = relay.Function([var_8185,var_8186,], output)
mutated_mod['func_8187'] = func_8187
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7115_call = mod.get_global_var('func_7115')
func_7116_call = mutated_mod.get_global_var('func_7116')
call_8192 = func_7115_call()
call_8193 = func_7115_call()
const_8212 = relay.const([[[-6.328440,-9.306487,1.812565,1.918646,-7.223776,2.398503,3.247441,-7.359447,4.368155,9.898600,-4.978226,-9.741057,-9.466335,-9.700064,4.693838],[-8.273564,9.759016,-3.596120,-0.537406,-4.517625,-8.097545,3.027382,-7.619548,-0.521058,7.002315,1.413360,-4.059088,-3.239447,1.323934,-8.430854]],[[-0.008892,-7.962856,-2.694456,-0.860667,7.924411,2.118156,0.820034,4.086519,-6.300222,5.215718,7.156178,-1.589865,-7.692733,9.272925,5.346438],[-1.141370,-3.485134,-0.460971,9.052140,9.614865,1.995327,7.561410,-3.359103,-7.632550,-7.951901,-6.003144,8.117067,6.356043,1.943902,4.950789]],[[5.171369,-9.278084,5.907709,-6.864231,-6.760540,3.913677,-6.587955,-4.302349,3.156834,4.055840,-4.163232,-8.848264,-5.846666,9.907803,-5.562694],[3.800160,-4.730911,5.670446,-9.911031,3.551643,-4.108737,-7.275335,5.098777,9.139889,2.030072,-6.133201,-5.590997,0.209635,-6.974904,-3.650470]],[[-1.226995,-8.679456,6.747967,-9.462144,6.453336,-9.535763,-6.248856,-0.566232,4.031114,-3.742180,3.628819,-2.192696,1.670396,-1.618508,-3.051097],[-6.961875,-8.924201,-4.558300,3.683956,4.874551,-5.033752,-2.495738,-2.948417,-7.997098,-7.488145,0.581473,1.302777,4.788044,1.693512,-7.879233]],[[-1.009114,-0.443215,-6.816723,-1.189377,4.702862,-0.817697,-4.084170,-3.434438,-1.104567,-8.131823,-8.081142,-2.167185,-1.442309,-0.183930,8.451010],[3.615982,-1.710522,1.571833,-0.053903,-9.041903,6.976727,1.348607,9.240996,4.940624,-5.069450,-1.555310,7.149230,-9.856426,-6.803855,5.695785]],[[-2.019584,7.625493,7.892541,7.576707,-8.229325,8.076869,-2.772060,1.924750,2.667049,9.662244,5.036555,-1.136277,-0.678679,-4.812035,0.807667],[8.699012,-0.309687,-8.757070,3.910294,-4.328791,0.455095,4.446837,-6.828763,9.263431,5.878261,-3.423571,-8.479949,0.244750,2.794009,2.422037]],[[-6.558177,-3.129640,1.604406,-9.715019,-8.977592,7.235162,-7.744941,-4.316046,6.340122,-7.653827,-9.306248,7.329196,2.112292,-0.842471,-7.707108],[-5.236669,-8.022990,-8.987842,9.409143,-7.393006,9.215046,-3.676433,-9.469575,-2.071366,-2.090888,1.061746,4.088696,-3.965840,7.574393,-8.970044]]], dtype = "float32")#candidate|8212|(7, 2, 15)|const|float32
bop_8213 = relay.minimum(call_8192.astype('int64'), relay.reshape(const_8212.astype('int64'), relay.shape_of(call_8192))) # shape=(7, 2, 15)
bop_8216 = relay.minimum(call_8193.astype('int64'), relay.reshape(const_8212.astype('int64'), relay.shape_of(call_8193))) # shape=(7, 2, 15)
output = relay.Tuple([bop_8213,])
output2 = relay.Tuple([bop_8216,])
func_8222 = relay.Function([], output)
mod['func_8222'] = func_8222
mod = relay.transform.InferType()(mod)
mutated_mod['func_8222'] = func_8222
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8222_call = mutated_mod.get_global_var('func_8222')
call_8223 = func_8222_call()
output = call_8223
func_8224 = relay.Function([], output)
mutated_mod['func_8224'] = func_8224
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7331_call = mod.get_global_var('func_7331')
func_7333_call = mutated_mod.get_global_var('func_7333')
call_8238 = relay.TupleGetItem(func_7331_call(), 0)
call_8239 = relay.TupleGetItem(func_7333_call(), 0)
output = call_8238
output2 = call_8239
func_8291 = relay.Function([], output)
mod['func_8291'] = func_8291
mod = relay.transform.InferType()(mod)
output = func_8291()
func_8292 = relay.Function([], output)
mutated_mod['func_8292'] = func_8292
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7331_call = mod.get_global_var('func_7331')
func_7333_call = mutated_mod.get_global_var('func_7333')
call_8310 = relay.TupleGetItem(func_7331_call(), 0)
call_8311 = relay.TupleGetItem(func_7333_call(), 0)
output = call_8310
output2 = call_8311
func_8317 = relay.Function([], output)
mod['func_8317'] = func_8317
mod = relay.transform.InferType()(mod)
mutated_mod['func_8317'] = func_8317
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8317_call = mutated_mod.get_global_var('func_8317')
call_8318 = func_8317_call()
output = call_8318
func_8319 = relay.Function([], output)
mutated_mod['func_8319'] = func_8319
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8328 = relay.const([[[5.698394,-2.857505,0.094423,-4.642544,-7.931686,-6.374693,0.699283,-3.662785,-2.049102,-0.546372],[-7.000618,-6.325192,7.403487,-3.602697,-1.513001,4.120309,5.288004,9.047259,-3.164300,-5.376774],[3.953583,-3.572072,0.303907,1.361305,-5.099767,6.745940,-8.676880,5.596468,-0.652723,1.557024],[5.880387,-7.394590,-1.671866,7.512590,-6.126955,4.134275,3.358771,-9.072302,-9.826956,-5.652639],[9.647054,-3.970697,7.701786,8.787040,2.866163,-6.883902,7.437878,5.387640,-4.620109,-3.508916],[-9.224423,8.330711,9.033749,7.876523,3.348502,6.990186,5.480385,-0.423080,9.272825,-9.102441],[3.321503,0.908849,-5.302144,-9.694044,7.703117,3.381698,2.556783,5.238603,-2.696553,-1.429246],[-0.951674,9.691294,6.879847,8.547395,3.702734,-6.974425,-5.276771,-5.704447,-4.069775,-2.846878],[4.749318,-7.589577,-5.857962,-7.469726,-4.421011,-7.981192,-9.030894,-7.354044,2.005537,-5.961844],[0.649397,5.036014,-9.426579,-6.059827,0.210858,-0.461073,-8.651540,6.851553,5.804122,-4.312619],[-3.468211,-2.011821,-4.812801,0.977915,-9.125342,-3.594324,-4.522037,-0.282009,7.859507,3.633396],[1.645016,-9.936437,-6.322814,-3.012187,2.566430,5.337590,1.049360,-0.634088,-2.441193,5.490078]],[[0.520258,1.405326,-0.329964,-1.475031,-1.012649,-9.433911,9.548553,-1.306309,-6.313051,5.458865],[2.578587,5.806806,8.962182,-2.832167,2.926613,-7.030335,1.333225,-6.356346,8.849092,-5.177029],[6.229186,4.135988,7.555624,-9.606256,-8.464703,7.450096,4.343231,-6.531075,-7.666068,-0.546486],[5.611006,-8.400179,-6.209209,-5.244884,3.990043,-2.848587,8.221693,0.760342,3.481079,-8.856317],[-4.711707,8.646179,-4.523049,-8.360242,-4.352402,6.825836,0.192797,-2.784995,-8.924712,-4.782149],[0.754645,-9.668652,-2.930762,4.835568,-9.208323,-5.032149,9.805406,-0.699196,8.563779,-6.693132],[0.441611,5.384980,7.716811,4.447334,-4.137556,6.387399,-9.450191,-1.427117,-6.865675,-8.750076],[8.991759,1.467391,-4.315159,9.719305,-6.312409,1.577082,5.139542,-7.394903,-2.933175,-2.041174],[8.807054,1.162903,-9.950780,4.999802,0.481825,1.785965,-8.092028,-0.042121,-7.875654,-7.135002],[7.460553,-3.111300,2.208053,-2.086523,-8.724586,-2.030884,-4.413244,6.026210,-7.764365,6.138358],[-1.411129,-0.547221,3.526367,4.573854,-9.421975,-1.633446,6.454919,-0.621406,-7.907026,8.146556],[-3.277398,-3.657090,7.806422,5.945781,-3.101228,7.601808,6.443375,0.570732,-8.839501,-2.049420]],[[3.398583,3.061627,1.009357,0.070801,-3.373918,9.010302,-7.819344,0.097097,6.987421,9.996279],[-9.752639,9.233794,2.318824,-1.546219,6.967144,-8.259828,-4.179153,-7.353322,-7.223873,3.401876],[-4.307268,4.645061,-1.318884,-0.442866,8.550001,-7.737398,-9.856930,9.786122,-1.650482,-4.007261],[-6.527964,-5.277071,-8.145646,-2.256616,-7.950106,3.214989,-0.288586,-6.774020,1.558435,6.057493],[-9.799682,-7.768207,9.010331,-1.683249,-4.675152,2.523519,-3.718113,3.394275,-7.256921,0.655413],[5.595257,9.079105,3.683394,-2.564954,-0.608485,9.148657,1.196816,-9.237206,3.311027,5.348656],[8.722113,-5.014222,-0.564375,-9.454721,7.722041,-8.455817,-3.410801,5.641607,8.441943,-1.654920],[1.182326,-3.380370,-4.964514,7.394133,-9.947619,4.048872,1.564830,4.783367,1.474549,6.197047],[6.122187,1.837000,2.925663,7.767719,-3.820405,6.534100,2.671323,7.385129,-9.536898,2.967925],[2.600483,-0.066351,-7.771207,-1.407972,4.748083,-2.680131,9.417723,-8.939322,-6.559001,5.287125],[8.047189,-1.778393,0.456538,-2.448910,-6.218667,-6.097116,-9.622593,4.822916,-2.333301,-2.788382],[1.621090,-4.075402,-0.151276,1.756274,-7.662446,-7.755957,8.491328,-8.420309,-1.521439,-5.629517]]], dtype = "float32")#candidate|8328|(3, 12, 10)|const|float32
uop_8329 = relay.rsqrt(const_8328.astype('float32')) # shape=(3, 12, 10)
func_7238_call = mod.get_global_var('func_7238')
func_7240_call = mutated_mod.get_global_var('func_7240')
call_8334 = relay.TupleGetItem(func_7238_call(), 0)
call_8335 = relay.TupleGetItem(func_7240_call(), 0)
func_3694_call = mod.get_global_var('func_3694')
func_3697_call = mutated_mod.get_global_var('func_3697')
const_8338 = relay.const([-1.906435,-4.384735,-3.469936,4.021600,7.344655,0.865834,-5.365986,-7.486068,-1.976178,-4.010220,-7.814926,-9.806032,-9.595016,5.433555,-9.079064,6.985897,2.786120,-0.158242,0.084521,-2.428150,6.821363,0.676282,7.460290,-2.004023,7.007459,-6.459345,1.654159,7.869092,3.606120,2.028539,-0.162525,-1.625946,-4.271612,7.220310,0.165871,-6.260045,2.346953,-1.741494,7.519181,-0.751194,-0.402616,-5.037245,-4.236595,0.310854,8.709803,2.248163,9.369412,3.431279,-7.453688,6.940861,-4.782196,-6.032474,-1.591166,-0.392064,-9.786897,-3.558363,-2.056915,-7.144492,6.557850,-2.065619,-2.977957,-3.679681,7.329814,7.824196,-9.308677,0.269884,-1.717488,-8.895717,5.652052,-1.500236,-3.317898,-4.990619,5.285258,2.231994,-6.557569,9.267711,4.284027,-2.202512,1.700222,-6.053858,-9.867324,3.291874,0.055664,0.698370,-9.748969,-3.306166,1.949497,8.292852,1.634945,6.071992], dtype = "float32")#candidate|8338|(90,)|const|float32
call_8337 = func_3694_call(relay.reshape(const_8338.astype('float32'), [10, 9, 1]))
call_8339 = func_3694_call(relay.reshape(const_8338.astype('float32'), [10, 9, 1]))
func_5702_call = mod.get_global_var('func_5702')
func_5705_call = mutated_mod.get_global_var('func_5705')
var_8349 = relay.var("var_8349", dtype = "float32", shape = (1, 1040))#candidate|8349|(1, 1040)|var|float32
call_8348 = relay.TupleGetItem(func_5702_call(relay.reshape(var_8349.astype('float32'), [16, 5, 13]), relay.reshape(var_8349.astype('float32'), [16, 5, 13]), ), 0)
call_8350 = relay.TupleGetItem(func_5705_call(relay.reshape(var_8349.astype('float32'), [16, 5, 13]), relay.reshape(var_8349.astype('float32'), [16, 5, 13]), ), 0)
func_8222_call = mod.get_global_var('func_8222')
func_8224_call = mutated_mod.get_global_var('func_8224')
call_8351 = relay.TupleGetItem(func_8222_call(), 0)
call_8352 = relay.TupleGetItem(func_8224_call(), 0)
output = relay.Tuple([uop_8329,call_8334,call_8337,const_8338,call_8348,var_8349,call_8351,])
output2 = relay.Tuple([uop_8329,call_8335,call_8339,const_8338,call_8350,var_8349,call_8352,])
func_8359 = relay.Function([var_8349,], output)
mod['func_8359'] = func_8359
mod = relay.transform.InferType()(mod)
mutated_mod['func_8359'] = func_8359
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8360 = relay.var("var_8360", dtype = "float32", shape = (1, 1040))#candidate|8360|(1, 1040)|var|float32
func_8359_call = mutated_mod.get_global_var('func_8359')
call_8361 = func_8359_call(var_8360)
output = call_8361
func_8362 = relay.Function([var_8360], output)
mutated_mod['func_8362'] = func_8362
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8375 = relay.var("var_8375", dtype = "float64", shape = (13, 11, 8))#candidate|8375|(13, 11, 8)|var|float64
uop_8376 = relay.sinh(var_8375.astype('float64')) # shape=(13, 11, 8)
output = uop_8376
output2 = uop_8376
func_8385 = relay.Function([var_8375,], output)
mod['func_8385'] = func_8385
mod = relay.transform.InferType()(mod)
var_8386 = relay.var("var_8386", dtype = "float64", shape = (13, 11, 8))#candidate|8386|(13, 11, 8)|var|float64
output = func_8385(var_8386)
func_8387 = relay.Function([var_8386], output)
mutated_mod['func_8387'] = func_8387
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7506_call = mod.get_global_var('func_7506')
func_7507_call = mutated_mod.get_global_var('func_7507')
call_8391 = relay.TupleGetItem(func_7506_call(), 0)
call_8392 = relay.TupleGetItem(func_7507_call(), 0)
func_7115_call = mod.get_global_var('func_7115')
func_7116_call = mutated_mod.get_global_var('func_7116')
call_8397 = func_7115_call()
call_8398 = func_7115_call()
output = relay.Tuple([call_8391,call_8397,])
output2 = relay.Tuple([call_8392,call_8398,])
func_8404 = relay.Function([], output)
mod['func_8404'] = func_8404
mod = relay.transform.InferType()(mod)
mutated_mod['func_8404'] = func_8404
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8404_call = mutated_mod.get_global_var('func_8404')
call_8405 = func_8404_call()
output = call_8405
func_8406 = relay.Function([], output)
mutated_mod['func_8406'] = func_8406
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8222_call = mod.get_global_var('func_8222')
func_8224_call = mutated_mod.get_global_var('func_8224')
call_8410 = relay.TupleGetItem(func_8222_call(), 0)
call_8411 = relay.TupleGetItem(func_8224_call(), 0)
func_2415_call = mod.get_global_var('func_2415')
func_2419_call = mutated_mod.get_global_var('func_2419')
const_8418 = relay.const([-0.830263,-9.638353,2.971303,-3.649747,-3.425004,-8.091437,5.024231,1.374311,-4.203851,-9.038148,-4.593793,0.944950,-9.591712,-4.396594,8.162447,-3.763784,-0.363580,5.806315,5.851151,-8.942135,7.526656,9.372501,-0.424201,-4.993548,2.742621,9.710334,-9.903962,-3.800266,2.801185,-7.859735,-1.837162,-7.094777,-3.035782,5.434269,-4.363196,7.659489,-4.424566,-9.539459,3.360045,-7.068454,1.042905,-7.282754,-1.288599,-0.379072,4.535377,9.208044,5.457314,8.409719,0.821080,-1.133568,-0.102496,0.031378,-5.031683,6.887760,8.386911,-2.163442,3.481544,-9.071029,-8.178227,-6.297478,-0.596062,9.129796,7.482137,7.188818,2.855209,-4.227905,7.802852,1.554578,4.296452,8.959140,-7.597443,1.512466,-2.109262,3.747630,-5.998488,5.829776,7.874792,7.069015,0.462658,0.588200,-2.826187,-8.650013,-5.081428,2.042450,0.947171,-5.195231,4.010220,6.167221,6.118540,-6.440430,-2.355952,-7.375612,-0.016496,5.964248,-0.662443,3.177851,-7.693559,-2.747644,9.779146,5.983794,-8.785303,-6.317090,4.375769,-1.364814,-8.489839,1.562628,-0.387963,3.368857,6.853054,-1.350495,8.769765,-3.217157,5.588484,-2.353016,-9.636017,0.293419,5.792771,-9.407100,-7.498482,-9.775983,4.509733,6.624111,8.133940,4.361256,7.781986,4.590937,4.588420,8.935300,-9.747431,4.606749,9.989769,-6.337543,-5.241405,9.649190,8.615745,2.247092,0.764660,-6.204162,7.763468,0.843995,3.862106,-7.343077,-9.132542,7.458761,5.385426,-6.568001,-9.941003,-1.559256,2.900149,7.550756,5.147342,-0.599270,1.128712,6.518161,-6.213571,-8.892044,5.007271,-0.019344,-2.262445,1.177974,-7.778823,-6.147579,-4.243538,8.358857,-4.929483,-4.331455,0.789828,8.717523,3.633702,-8.336743,5.575225,8.138401,8.280290,5.731632,0.490205,2.358978,-0.076626,-6.366087,-9.952036,-8.298705,-2.141503,-4.137030,4.491403,6.347490,2.696550,-2.271324,-7.135911,9.121471,5.662211,0.008996,5.693975,-7.899067,-4.507630,-2.261020,-3.449853,9.859931,3.133537,9.391771,1.665643,3.115256,-4.316362,-6.401575,6.479226,-9.652191,-1.421794,-7.583796,-3.621317,0.532402,1.384396,-9.957128,-3.201424,8.009300,8.402311,4.381048,4.618222,6.857975,-2.784375,-9.125587,-8.079773,3.236583,-0.435456,-4.779475,-3.962786,9.708436,-7.374460,-4.911961,5.715970,-5.873928,-9.027202,-3.971808,1.189461,8.807955,8.278907,8.364089,-2.248404,-2.777246,-1.735658,5.373354,-2.307708,8.087692,-0.120312,2.053964,0.585641,7.490299,8.615134,0.462771,8.475046,7.144710,-5.806900,-1.723296,4.903460,5.138693,-1.379054,-7.041974,4.193073,9.281826,3.906581,0.941082,-0.545972,-7.940017,-0.017731,-0.846930,-2.637156,-5.724803,0.574338,3.125044,9.741251,-7.033334,-9.190457,-8.840491,-3.639048,3.677762,2.695023,-6.007206,0.742391,5.683472,-6.038737,-7.971174,1.721327,4.552293,7.764476,4.627868,9.488115,-4.360749,8.116363,1.293531,-0.485493,4.693926,-1.600683,-0.457363,4.367351,1.599283,0.191840,-1.032796,8.038191,4.728775,3.067456,4.028651,7.046500,-5.650205,0.777455,-4.616411,-5.629089,8.640589,-3.224763,2.986678,9.993553,4.937714,-5.839462,-7.305123,-2.332867,-6.506541,-8.625070,-3.113973,-1.802570,-8.862233,7.888406,6.504123,2.305875,-9.011127,-9.405111,7.189034,-2.020801,4.677073,-3.544520,-6.661384,6.109191,-7.809559,8.373282,7.898870,9.774114,0.858715,1.577559,4.574880,8.415044,-3.368656,0.488202,3.130105,-9.000722,-5.123267,-7.305883,8.955031,5.723621,-4.339527,8.505579,-1.405387,3.768595,8.285439,8.498296,4.673009,-1.632084,-5.639391,6.578370,6.420151,-3.846852,3.519400,2.002097,2.913961,-2.567384,0.184065,0.342691,4.627694,4.076486,0.940338,1.091464,5.366335,-0.739883,3.554792,2.438340,-3.014132,-5.554489,5.325021,-9.048668,-4.746645,-9.158746,-4.479103,-3.225626,-3.887493,-3.524476,-9.647444,9.456505,5.195386,8.638282,9.596070,-4.210126,7.262401,6.867596,-7.386535,8.282418,1.867434,-3.336267,5.535351,1.121929,-5.448701,-9.879042,4.062402,-7.936591,0.428884,1.318770,-1.441134,-6.738832,-7.401856,-1.886286,-3.132310,3.172108,2.716364,6.268583,-9.483906,8.954103,4.211207,3.164648,9.199402,5.425769,-8.934734,7.400568,-3.453777,-8.705563,-0.865318,7.618695,-3.919341,-5.759141,-2.840903,-8.294290,-0.643771,4.314473,7.436830,-1.417377,-6.439966,-3.067510,-0.008908,-0.300646,6.111260,9.050025,3.386334,-5.244234,0.753026,-3.152559,5.963077,4.706813,-1.799410,1.363615,0.677313,-5.614679,0.485103,-7.463381,-5.146616,4.350294,7.612838,2.201571,0.632428,-6.742283,-9.389682,9.709871,-2.209378,2.431984,7.465759,-1.020179,-9.145706,9.883483,4.449284,3.279179,-7.710396,-2.986363,5.157814,-1.614096,8.602280,-2.645581,4.029148,1.416502,-4.908542,-8.574038,2.025307,-5.815543,3.356508,-3.694433,-8.077185,5.674202,-9.739091,-1.002983,1.258787,-3.641791,-7.471139,4.240775,-9.242209,5.036048,7.315963,9.670541,-4.641158,9.925408,0.419138,6.506938,1.548863,-1.005423,-2.105488,-7.476715,6.082274,-5.273045,3.809313,-0.608653,9.616505,-8.773339,4.957363,4.270885,0.043015,-6.601516,-5.871001,-7.250038,-2.897126,2.143421,-9.400046,-6.339741,7.451797,7.004210,-1.204474,-3.130921,4.119747,8.029738,-0.722473,-7.563364,0.632880,-9.299859,-6.390806,4.538398,1.208908,3.682686,-7.963217,-7.817701,0.065457,-5.586829,8.536421,1.621716,3.907033,6.811228,2.460334,-5.745784,-8.570621,8.587095,3.581436,0.592920,0.294856,-9.144327,2.769729,2.128955,-1.735859,-7.708010,2.979988,-9.322282,-2.955109,-7.155120,-2.263047,-2.881235,-3.525205,5.429527,7.279907,-7.132272,-3.981482,-7.241022,7.524253,-8.681654,-6.167456,7.757345,-7.044008,-1.207750,-6.109085,-1.054358,5.888501,0.825309,-7.668539,-0.318960,-1.121466,5.157935,3.394168,-0.566412,2.087664,3.025163,1.585087,8.619581,-2.190143,0.481852,8.576364,2.883337,-5.586061,-8.549994,-6.789480,-8.149410,3.143470,3.855863,-9.752336,-8.247804,-5.083236,7.983358,-0.657400,8.701635,-1.051781,0.302926,-4.736520,6.981369,-0.039134,-1.109090,-8.710755,8.571014,-1.469599,-7.209671,-3.080517,-9.837422,-8.181410,-8.403160,2.797736,-8.440279,-2.213335,0.560004,-5.625183,-9.585109,-5.227451,9.443817,1.506687,-2.499656,2.073084,-7.212661,0.781602,-7.764054,-0.923607,4.989552,-3.572368,-1.703624,6.228874,-2.995878,-8.151192,-9.915074,1.172180,3.829262,-7.881638,-9.694725,-7.786420,1.195186,4.846674,-2.965998,8.473512,2.661345,2.583198,-0.670081,7.603937,-5.796880,6.567495,-3.178376,8.515102,-8.883258,-1.580639,9.592325,8.333587,-0.444097,5.194416,3.037193,-0.927536,-1.513860,-9.531403,8.915150,3.773800,1.397517,-7.186095,6.088578,9.011846,-6.427146,-8.259198,-7.783870,-5.660677,2.644204,4.536255,-0.034781,8.799264,9.345119,-9.172666,-7.827708,5.412052,-1.666685,6.727858,5.718860,0.847232,-9.696572,7.189733,-4.531300,-7.336826,0.417020,-2.346411,2.511798,7.441440,1.587244,4.737225,7.812730,8.602256,6.670106,-7.632904,1.678051,-2.477972,9.557891,-8.147936,8.533833,5.265848,0.452750,7.046054], dtype = "float32")#candidate|8418|(700,)|const|float32
call_8417 = relay.TupleGetItem(func_2415_call(relay.reshape(const_8418.astype('float32'), [5, 10, 14]), relay.reshape(const_8418.astype('float32'), [5, 10, 14]), ), 0)
call_8419 = relay.TupleGetItem(func_2419_call(relay.reshape(const_8418.astype('float32'), [5, 10, 14]), relay.reshape(const_8418.astype('float32'), [5, 10, 14]), ), 0)
output = relay.Tuple([call_8410,call_8417,const_8418,])
output2 = relay.Tuple([call_8411,call_8419,const_8418,])
func_8421 = relay.Function([], output)
mod['func_8421'] = func_8421
mod = relay.transform.InferType()(mod)
mutated_mod['func_8421'] = func_8421
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8421_call = mutated_mod.get_global_var('func_8421')
call_8422 = func_8421_call()
output = call_8422
func_8423 = relay.Function([], output)
mutated_mod['func_8423'] = func_8423
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7331_call = mod.get_global_var('func_7331')
func_7333_call = mutated_mod.get_global_var('func_7333')
call_8432 = relay.TupleGetItem(func_7331_call(), 0)
call_8433 = relay.TupleGetItem(func_7333_call(), 0)
output = call_8432
output2 = call_8433
func_8437 = relay.Function([], output)
mod['func_8437'] = func_8437
mod = relay.transform.InferType()(mod)
mutated_mod['func_8437'] = func_8437
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8437_call = mutated_mod.get_global_var('func_8437')
call_8438 = func_8437_call()
output = call_8438
func_8439 = relay.Function([], output)
mutated_mod['func_8439'] = func_8439
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8437_call = mod.get_global_var('func_8437')
func_8439_call = mutated_mod.get_global_var('func_8439')
call_8445 = func_8437_call()
call_8446 = func_8437_call()
output = call_8445
output2 = call_8446
func_8449 = relay.Function([], output)
mod['func_8449'] = func_8449
mod = relay.transform.InferType()(mod)
output = func_8449()
func_8450 = relay.Function([], output)
mutated_mod['func_8450'] = func_8450
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8517 = relay.var("var_8517", dtype = "float64", shape = (6, 9, 9))#candidate|8517|(6, 9, 9)|var|float64
uop_8518 = relay.atanh(var_8517.astype('float64')) # shape=(6, 9, 9)
const_8527 = relay.const([[[6.363143,-2.423367,-3.759195,-7.201586,1.507469,-7.480123,3.521229,-2.996170,7.472986],[-9.085563,4.817074,-6.156207,9.254951,-4.453622,0.512507,-8.843410,-2.897524,2.689085],[-5.960543,6.760024,-4.171838,-8.701128,-6.712160,-5.363379,0.991393,0.128456,-2.868369],[2.669028,-5.520452,-1.941081,4.960839,-3.059925,4.689799,-9.253051,5.342489,0.199963],[9.973187,5.001978,4.590230,5.425051,8.956133,9.702208,-2.593552,7.707452,8.399346],[-4.428555,-4.153557,-1.475469,-8.721155,4.592442,-4.655932,1.525762,8.625489,0.651073],[-5.958097,6.368639,7.141635,9.825808,1.297872,-1.224445,5.397199,-3.814354,-6.217932],[5.114233,1.399959,-2.605449,-0.822368,-6.061932,9.304911,-2.932321,-8.551077,4.499822],[-5.020167,-7.307815,8.425808,-4.531162,4.615202,2.208388,2.487765,2.393609,9.762668]],[[-3.850874,8.654375,7.523353,3.863804,7.776643,2.320832,0.770230,5.476891,-2.424616],[2.792180,3.992647,4.222466,-5.373265,-4.409363,3.349325,7.251357,6.941618,-9.567421],[6.460165,-8.941938,-1.243287,3.321150,4.714181,9.858868,-3.678785,5.106363,5.459796],[-3.624692,1.647537,1.833665,-3.812924,6.447396,-8.681712,3.680832,9.403650,-1.347540],[6.133424,9.100962,-8.359642,-3.459589,2.491507,0.002949,-5.202844,-8.360464,-7.130340],[7.111423,4.900684,-3.730539,-3.381796,5.615951,1.079909,0.743913,-3.691656,1.181957],[8.613629,5.256318,7.966558,-0.699776,-3.184492,-9.947118,-7.064656,4.020932,-7.544579],[0.642898,2.584427,-9.836376,-2.375184,-0.139548,-6.948897,-9.304599,4.708601,5.515251],[-6.361551,9.004719,-7.816724,8.236512,8.301003,-5.257047,-6.924000,-9.787318,0.740179]],[[-4.629927,1.408842,-8.452433,-2.698576,8.061956,-1.801031,2.381551,-3.552928,9.012078],[-5.657419,-2.712886,5.852720,9.193852,-5.472429,-2.624166,-0.701985,-6.627175,4.477439],[7.658705,2.882382,7.834745,5.307115,-2.284737,1.089223,5.790030,-3.644564,8.207582],[-4.065697,6.734839,4.344308,-9.219071,-6.292996,3.326031,7.528227,2.746831,0.637982],[-6.277784,5.600002,8.505342,-8.170017,-8.516220,-4.722884,7.915173,-3.155968,6.072974],[-4.435487,5.108896,-0.227681,-3.424417,-3.789143,-6.561501,-2.580330,-6.240074,4.296164],[9.627306,-5.199779,-0.933582,0.916751,-0.974961,-9.076802,4.598014,1.518280,0.784231],[4.666868,-5.373030,-1.722688,-7.441037,9.889821,-9.338905,-5.774479,0.682161,-2.622674],[5.182048,6.410001,6.952419,3.703859,-1.042171,-4.113611,2.837514,3.665056,5.735800]],[[-2.750485,-9.832769,-8.348283,1.587957,-0.376370,-7.864497,-9.976329,4.327373,4.691293],[-5.864565,3.742369,7.034119,-2.133071,-6.630218,-7.646258,4.644479,5.214151,9.568921],[6.883500,-0.831854,1.646603,-1.749710,-6.355547,5.981089,-7.064306,-4.867241,-9.834909],[9.655581,-7.117355,-0.372098,7.737422,-0.208036,2.182080,3.435878,-3.531424,0.441760],[-9.220082,3.264957,5.490419,-2.431541,-3.334710,2.806161,-8.037352,-7.783369,-9.110903],[-3.855552,-9.540434,-8.070259,-7.296869,-4.019552,6.479005,-1.890302,7.744452,-9.680638],[-1.396043,0.944393,-0.713193,7.814288,9.630963,8.587136,-7.481589,-0.386235,-4.518586],[-2.501161,-9.592218,2.124231,-0.332236,2.905024,-7.860229,-5.876120,-2.074177,6.119692],[8.170520,0.143387,-3.006227,-3.357373,-9.854935,-7.608006,-2.415608,8.169160,9.033212]],[[-1.218015,-1.194716,-4.945927,-1.878860,1.817296,-8.652214,1.066774,5.569579,-6.959479],[2.447587,-2.748181,9.157816,8.654416,-3.882111,-4.286929,8.847210,3.157192,-5.300675],[-6.296614,7.879812,0.053693,8.458220,3.660054,-7.139514,-9.914339,-3.153597,5.217788],[7.398478,4.192856,-1.495715,-1.510082,2.413916,0.443637,1.041476,-2.172610,-5.524638],[-0.275296,-7.647921,-5.267737,0.704693,-4.837945,-0.600283,-4.457141,-6.246244,9.795804],[4.414729,3.204060,3.865867,0.347182,-1.690440,7.818226,1.262445,-7.196636,0.874341],[-2.196099,-7.391423,0.419654,9.714853,-5.036450,9.775739,-9.449736,6.207437,6.112117],[-2.341218,3.280413,-2.108124,0.025547,-1.250531,4.980573,2.190552,7.151657,4.566583],[-2.008568,-7.616272,-9.255670,-8.669565,-4.464377,-6.786170,-3.851567,-9.047952,-8.093002]],[[9.115742,8.999601,3.349561,2.653291,-0.853108,-1.719993,9.510495,-9.263136,-6.742342],[-1.917743,3.938189,-5.221849,-3.704109,0.814214,9.095863,-6.581527,5.812925,-0.419294],[-6.273335,4.066804,-0.878016,-9.474266,-1.178288,7.970413,-9.066286,4.462670,6.790028],[7.607634,8.314921,-7.418230,-5.966854,4.409143,-2.164684,1.171491,8.943731,-9.016964],[-7.555187,-8.627967,0.944779,1.428662,7.711627,-4.975783,2.394355,-8.907521,-6.522823],[0.889627,7.637063,-1.001953,-7.634549,7.664122,5.855428,-9.995674,-4.698803,-9.757730],[-1.353919,5.618175,9.918093,-7.630570,-6.129397,1.556403,-9.632146,6.563182,2.495964],[3.572830,5.280209,4.921564,-1.947672,2.784074,-5.725099,3.942926,1.185454,-6.499548],[-4.661489,1.966884,-8.324280,7.324820,7.801409,-4.506192,-4.445276,9.571067,-6.493259]]], dtype = "float64")#candidate|8527|(6, 9, 9)|const|float64
bop_8528 = relay.less_equal(var_8517.astype('bool'), relay.reshape(const_8527.astype('bool'), relay.shape_of(var_8517))) # shape=(6, 9, 9)
output = relay.Tuple([uop_8518,bop_8528,])
output2 = relay.Tuple([uop_8518,bop_8528,])
func_8532 = relay.Function([var_8517,], output)
mod['func_8532'] = func_8532
mod = relay.transform.InferType()(mod)
var_8533 = relay.var("var_8533", dtype = "float64", shape = (6, 9, 9))#candidate|8533|(6, 9, 9)|var|float64
output = func_8532(var_8533)
func_8534 = relay.Function([var_8533], output)
mutated_mod['func_8534'] = func_8534
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7506_call = mod.get_global_var('func_7506')
func_7507_call = mutated_mod.get_global_var('func_7507')
call_8680 = relay.TupleGetItem(func_7506_call(), 1)
call_8681 = relay.TupleGetItem(func_7507_call(), 1)
output = call_8680
output2 = call_8681
func_8702 = relay.Function([], output)
mod['func_8702'] = func_8702
mod = relay.transform.InferType()(mod)
output = func_8702()
func_8703 = relay.Function([], output)
mutated_mod['func_8703'] = func_8703
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7115_call = mod.get_global_var('func_7115')
func_7116_call = mutated_mod.get_global_var('func_7116')
call_8743 = func_7115_call()
call_8744 = func_7115_call()
output = call_8743
output2 = call_8744
func_8747 = relay.Function([], output)
mod['func_8747'] = func_8747
mod = relay.transform.InferType()(mod)
mutated_mod['func_8747'] = func_8747
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8747_call = mutated_mod.get_global_var('func_8747')
call_8748 = func_8747_call()
output = call_8748
func_8749 = relay.Function([], output)
mutated_mod['func_8749'] = func_8749
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7259_call = mod.get_global_var('func_7259')
func_7261_call = mutated_mod.get_global_var('func_7261')
call_8788 = func_7259_call()
call_8789 = func_7259_call()
output = call_8788
output2 = call_8789
func_8824 = relay.Function([], output)
mod['func_8824'] = func_8824
mod = relay.transform.InferType()(mod)
mutated_mod['func_8824'] = func_8824
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8824_call = mutated_mod.get_global_var('func_8824')
call_8825 = func_8824_call()
output = call_8825
func_8826 = relay.Function([], output)
mutated_mod['func_8826'] = func_8826
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8747_call = mod.get_global_var('func_8747')
func_8749_call = mutated_mod.get_global_var('func_8749')
call_8835 = func_8747_call()
call_8836 = func_8747_call()
func_2831_call = mod.get_global_var('func_2831')
func_2837_call = mutated_mod.get_global_var('func_2837')
const_8917 = relay.const([-4,8,10,7,6,6,1,-9,-9,4,-5,6,-10,6,8,7,-4,-8,-4,6,-10,-2,-4,-3,7,7,-4,5,5,9,1,-5,-3,-7,7,-9,-8,10,-1,9,10,2,-8,2,-8,-7,9,4,-5,10,-4,1,-9,8,-3,8,2,1,-4,-5,4,-3,-4,-6,6,10,-3,6,1,-2,10,10,-7,-3,-4,5,-8,2,3,-10,-1,3,-9,-8,2,5,-7,3,7,-4,4,-8,8,-8,-7,-2,-7,4,3,-8,-1,6,-9,-3,6,-7,7,-7,-5,-5,-1,1,-1,8,1,8,1,2,-2,-8,2,-1,1,5,-10,6,-9,-3,-6,-6,-7,8,6,-9,5,-7,1,10,-5,-7,9,-8,2,1,-10,-4,-9,6,2,-6,-1,6,2,-5,2,1,5,10,-1,-7,7,-10,4,4,9,3,-4,3,4,2,-8,-7,-2,-4,9,-6,3,-3,-9,-10,-6,10,1,-5,-9,-5,9,4,1,6,9,6,-5,-6,-5,-5,-1,-10,-8,1,1,-8,8,-4,10,-8,-2,-1,-3,-3,5,-1,5,-1,6,2,-8,10,2,4,3,-3,6,4,-10,10,-7,4,-4,-6,-6,10,1,-9,-5,9,3,-5,-3,-2,5,10,5,-3,6,-9,-2,-8,10,-7,8,-3,5,2,6,-3,-8,-3,7,-1,-9,-7,9,3,-3,-4,-4,2,4,1,9,-3,9,9,-5,-10,1,3,-3,9,7,-6,10,-2,5,-6,-7,3,-4,1,3,4,-9,5,-5,9,-8,3,-5,2,-10,4,5,5,-2,-1,-8,-10,-1,-2,-9,-8,-7,3,-8,4,1,-5,-5,-8,-7,-1,-3,5,-6,-2,-9,10,-1,-10,7,-7,1,-7,-4,-5,-5,5,9,-3,6,-10,6,-1,-6,-8,-6,-3,10,-5,-6,-5,-9,8,2,-3,-7,-3,6,1,-8,4,7,1,7,10,-4,-4,-5,1,6,-6,-8,7,7,-5,-9,7,4,3,-3,5,-8,-2,-5,-2,6,5,9,1,2,-10,-5,-8,6,2,-4,7,-8,-9,-2,4,-1,6,-3,-7,-1,7,-6,6,-8,-1,5,-6,-7,-8,8,-6,2,-10,-9,1,5,-7,-5,-3,9,-7,2,-1,-10,7,-10,-6,7,9,-4,7,8,-2,-6,8,-9,-2,-8,-1,2,6,-2,-8,10,-6,-8,6,6,-3,-1,10,5,2,-6,2,10,2,10,-3,-9,-5,-2,5,6,-10,6,-10,3,6,6,7,-4,10,-1,6,-1,-7,1,1,-7,-8,-3,5,2,-3,-9,-6,1,9,-10,4,-6,-4,-2,-6,-8,-3,1,-4,1,-1,10,-5,5,7,-7,-7,-3,-9,8,5,10,-6,7,-5,-9,-1,4,-4,-8,-4,-3,9,2,10,-3,-3,-10,-5,-10,7,7,-10,4,9,4,-8,-4,2,4,5,4,2,8,-3,8,-8,8,5,4,3,-9,5,-7,-1,-7,-2,-4,-5,4,1,-9,-4,-8,10,-2,10,-3,7,3,5,-2,-1,3,-1,5,8,4,1,-10,-4,4,-6,-10,-9,8,-3,2,9,1,2,-5,-7,2,-10,9,-7,-9,-9,5,-4,-5,7,2,-3,-7,8,-7,10,-5,4,-4,8,-3,2,9,2,4,9,7,-10,7,6,-5,3,-7,-5,-7,2,-9,9,2,-2,-3,4,-3,6,-2,-3,-1,6,-3,-6,-3,-2,5,-2,5,5,5,9,4,7,8,-1,-6,6,8,-2,10,-5,5,4,-9,9,-8,1,4,6,-6,10,5,-3,-7,4,-9,2,4,4,-7,-9,-1,-7,-6,6,1,6,-3,-9,-4,-8,9,4,8,-1,3,9,8,-9,-8,-8,3,5,3,-6,6,-9,-4,2,-3,6,-1,-9,1,-5,5,10,-9,5,10,10,-5,-2,-2,-2,5,10,-5,7,9,6,9,-3,10,4,-9,-7,3,-5,6,-1,-7,9,2,-9,1,-6,-9,1,-8,1,-7,-2,-10,7,-6,6,-1,-7,-2,5,-2,-4,-1,2,9,-7,-4,9,7,1,-6,1,4,10,6,1,-10,9,-1,-1,4,7,8,-3,1,10,-3,-5,-9,-4,2,-3,2,4,-2,-2,-2,6,4,-4,-5,2,-5,4,-2,1,4,6,7,-7,-4,7,7,-5,3,6,4,-6,3,-7,8,6,-3,8,-4,-8,4,-4,7,2,9,-9,-5,3,5,-10,-7,5,-1,-9,7,-3,1,4,9,1,5,2,-5,8,7,2,-6,-4,-9,-4,-10,-7,-6,-10,-10,-6,1,5,-5,7,-2,-5,-6,-7,-4,1,-8,5,-1,3,-6,-6,-7,2,-5,3,7,-6,-1,-8,-4,10,-9,-9,10,2,1,2,1,7,10,-3,-1,10,4,8,-8,1,1,-10,2,-8,1,8,-1,-10,-8,-10,4,1,-9,-5,5,-4,7,-1,5,-1,-7,-10,7,-1,-3,-4,-2,-4,-5,-8,6,-9,8,-2,-9,-1,4,-7,1,6,9,-10,6,-2,2,1,3,-3,-2,-6,-7,-9,10,2,4,-5,7,-3,-7,1,-4,9,6,10,6,9,5,-8,4,8,7,10,-9,6,8,7,-4,3,10,-6,-9,4,4,3,-2,-7,-4,-5,-10,1,10,3,-8,-2,8,-9,-6,5,4,10,-8,-7,4,7,2,-3,8,4,10,6,-5,-7,7,1,-7,-9,9,-9,-5,4,-6,10,3,-10,10,-1,1,8,-7,9,-1,10,4,1,-6,7,-4,-6,10,7,3,9,-5,2,-5,7,1,3,9,-5,1,-8,10,9,1,-4,-4,-8,7,3,3,7,9,9,4,-4,-9,-9,8,1,-3,-4,7,8,-2,-5,10,10,1,-9,5,-1,10,1,7,-7,-8,-1,-3,-8,-9,1,-4,1,10,10,5,-10,-3,-3,5,-3,1,8,3,10,-7,-1,3,6,-2,-1,-8,-2,-3,1,4,-1,-10,-10,2,-4,4,2,5,-3,4,4,6,-5,2,7,2,3,-6,6,5,-9,-3,-6,-8,-5,-4,4,-6,1,7,-4,-5,-2,9,8,-7,-1,-7,1,6,8,9,-2,-3,3,-10,-10,3,5,-1,4,-2,-10,-1,-4,1,9,-6,-2,-3,-10,1,7,3,4,8,3,6,-9,-6,-6,-9,-4,-5,3,-1,-2,-4,-6,2,10,-9,-10,-6,-2,3,9,4,-6,-10,-8,3,-5,8,3,-1,-1,-6,5,-1,-6,6,8,-9,-8,5,-3,-5,-5,-8,-6,1,-9,-10,3,-3,8,6,-1,10,5,-7,-4,-7,-7,9,-5,-3,-9,1,8,1,-5,-4,2,-6,-1,-7,5,-6,-8,8,-5,-8,-7,4,-2,1,-4,2,9,4,10,7,-5,8,7,-9,-8,-5,-7,-10,6,6,6,-5,-7,9,2,5,-8,-5,10,7,2,-2,-3,-7,6,10,-3,-9,7,8,-3,-9,5,-5,-7,-4,6,-9,10,9,-1,-8,-7,-7,-4,-4,-9,7,6,-10,4,-3,1,9,-1,-7,-1,-7,3,-3,-10,-5,7,-2,4,7,5,10,3,7,-10,-6,-9,-9,8,9,-8,-6,6,9,9,10,7,2,-9,-4,3,-10,-5,-5,1,-3,-8,-4,-7,6,9,2,8,-6,2,8,1,8,-8,-3,6,-8,4,-1,-6,-9,-7,-1,-6,3,-8,-1,-10,-7,1,7,-5,-4,-8,-2,-5,9,3,-8,6,6,4,-5,8,5,3,9,-7,-8,1,9,-2,-10,6,-5,9,10,-1,-10,-8,-10,-6,-6,-5,8,-4,-2,5,3,-9,-8,2,-6,3,-3,2,10,4,1,-10,-5,-7,-3,10,6,8,10,9,4,1,-3,-1,-10,-8,-2,1,-5,4,-3,-7,4,2,-5,9,5,5,4,10,10,-5,8,-10,6,-4,10,9,-7,9,4,-3,1,-8,3,7,7,8,7,10,-3,4,6,-1,-6,6,10,10,7,-4,-7,-6,2,2,1,5,-8,9,-4,-8,-1,-10,-4,-4,-8,5,-9,2,4,-5,7,1,10,-9,10,-3,-2,4,3,8,6,9,-4,-1,4,-5,5,-6,8,9,3,-1,-5,2,4,-9,5,8,-10,10,-4,-5,-3,-3,-6,-8,-4,-3,-5,7,7,2,8,5,-8,2,-2,-2,-9,7,-7,4,6,-10,-6,-2,7,-7,5,-10,7,-6,8,5,3,3,-8,1,8,-7,-10,-7,5,9,6,-3,-3,3,7,1,9,-9,-4,-3,2,5,10,-9,6,7,9,-6,-8,-6,-6,-6,2,3,6,8,-7,1,7,-4,-10,-6,10,-3,-10,7,7,-10,-7,-7,-1,2,-10,-7,3,-1,-2,-1,-8,5,5,-3,-3,3,7,4,5,-8,-1,1,4,-6,-8,3,5,-3,9,-3,10,-4,-6,-9,-6,-5], dtype = "int32")#candidate|8917|(1680,)|const|int32
const_8918 = relay.const([-0.882451,2.859338,6.767115,4.191138,-4.811408,-1.359238,9.968447,-4.799833,-1.470720,3.536245,-8.208496,-4.209855,-7.945151,-6.223075,-5.600917,-9.389467,4.537437,2.967078,7.153951,4.495378,-0.624795,-1.021835,-7.727381,-4.220930,2.630440,6.498749,6.652189,8.056624,8.473508,-1.377305,9.527334,-4.142302,-0.379027,2.892209,0.122373,3.721209,-6.479163,1.832363,-9.110803,8.911952,7.676155,9.477074,-0.019981,6.801607,-7.073136,3.323984,-2.675310,6.865422,9.398927,-8.707451,5.545161,-7.313048,8.733605,-1.601305,-9.538511,6.392425,-2.141695,-0.493015,5.443269,-3.049432,2.579937,9.602317,-1.052066,-5.843381,7.566831,-5.676969,-2.716737,-0.987254,-7.720764,8.035331,-8.983349,-5.695124,5.965039,5.630589,-8.481705,6.650210,0.729522,-8.504737,4.546477,0.552382,8.756904,2.879353,5.270620,-4.398419,-7.582838,-5.320202,-3.146199,3.919067,4.948777,1.203362,6.896053,-1.771300,4.454817,-7.873671,4.650454,-5.910630,9.376106,7.926553,5.986965,-7.782095,8.600929,0.810742,7.304902,-9.834764,9.319959,4.071978,-4.891437,-3.344862,-9.492342,-8.781966,-2.799133,-2.074545,-1.646217,-2.037034,0.565483,3.890596,9.933420,9.003801,1.317816,-3.533987,0.733146,4.227400,0.215073,2.631270,-8.153102,9.942685,-2.423423,-4.855986,6.826171,1.970851,7.929988,-0.427462,2.284421,-7.460046,0.707289,2.818198,-1.376775,-9.435958,-7.540816,0.338032,6.515070,-8.574946,-5.664925,-9.044489,9.030870,9.669653,-6.228800,-4.373232,0.969677,-6.745405,4.424222,7.390143,3.906043,9.184210,3.442848,-9.511796,4.599242,3.423350,-8.758022,-8.429517,1.633936,-6.592914,3.255033,4.550822,7.585050,4.870580,4.743105,-4.171467,-9.581987,1.242043,-2.945216,-6.257141,-8.399982,-8.376950,6.289797,-1.864756,-9.396709,-2.704729,7.987269,-9.877872,2.885057,9.157642,-1.391962,1.070881,7.751531,-1.125506,7.831710,-3.345558,-1.458417,-2.661776,0.856092,-0.325400,2.451217,4.423952,-9.628834,-7.489343,0.962990,9.446153,4.141801,-5.570238,8.585400,0.320602,2.864833,-1.937376,-6.815586,5.442745,1.029326,5.577396,-1.487614,-1.283206,-0.031409,-5.214700,-7.617823,6.770413,7.183636,8.156469,-0.829177,1.334224,-5.646151,-0.707291,-4.050816,-4.889533,1.588735,-7.307278,-9.337819,1.628477,9.694778,-7.840552,5.294278,-4.748579,2.303381,6.898189,-4.328555,4.392399,-0.964440,2.374757,2.480029,-9.599605,6.663050,-1.788431,7.921910,-6.707983,7.678776,8.554323,-9.180578,6.448260,2.777737,9.038677,2.952282,-4.560484,-3.102446,-3.669880,9.343401,3.419966,-1.961817,-9.311447,8.037533,-1.151439,8.814359,3.580502,2.946073,3.519731,6.598898,-2.089730,4.636181,-8.034570,-2.652118,5.400184,2.135336,-2.052628,-7.280188,-7.970663,2.991130,-1.489825,-3.995211,-6.227902,3.721803,-5.371076,0.772857,7.495191,8.815851,-2.710487,9.719349,4.099155,-7.202586,-3.184710,-1.040241,-0.037375,5.485272,-0.804765,-1.046385,-1.680738,-9.203061,-0.434267,5.945279,-3.738049,7.796952,9.550959,-9.405610,-3.996995,-0.229174,8.554227,4.203134,7.524787,-1.899671,-1.096547,-9.504092,-1.577731,5.910986,-0.171609,3.462245,9.676532,-3.315618,5.413162,9.123090,0.765927,-4.292155,-1.871416,5.781621,-1.803901,3.446780,-9.702597,1.709884,-8.133997,-9.723646,-7.113184,4.971726,-9.878480,-5.243126,-9.480456,9.898840,7.945811,-9.479294,1.325462,9.930456,6.628295,-0.600995,6.927620,5.526402,-8.037969,-7.122464,8.251648,-4.562395,1.969592,5.212290,-2.840843,-0.960886,-1.864413,3.482523,-7.345672,7.198548,9.252825,0.048095,-4.472482,-9.593301,-2.682045,4.079305,-7.887291,-8.597575,-4.286597,5.745192,-2.804995,-1.206724,-4.763729,9.942041,8.790932,6.316726,-1.447619,6.714294,0.014720,-3.780246,-6.227021,1.943789,7.867619,2.234845,6.782221,8.773199,-0.635151,-0.287059,4.032077,9.497706,-7.793360,-5.576464,0.277886,7.730203,6.110856,6.003472,2.681057,9.534590,-0.527048,-9.260909,5.365904,0.782475,-1.401178,8.820325,2.109089,-3.532206,1.501167,5.924818,-1.403397,8.581580,-5.405548,2.738405,3.587301,-6.750378], dtype = "float32")#candidate|8918|(405,)|const|float32
const_8919 = relay.const([-4,2,8,8,-10,-7,-6,8,8,1,4,3,-5,9,-3,5,-9,3,-6,1,1,1,-10,3,2,3,3,1,10,9,4,3,4,1,4,-4,-9,-4,-5,-6,10,-2,-7,4,-4,-3,8,2,-1,-10,2,-1,2,-1,-2,-5,-6,9,1,-3,6,-3,-1,6,7,-8,-3,-1,6,-3,7,-3,4,-10,-3,10,-10,-6,10,-4,10,-6,-3,-10,-7,7,9,-10,-10,-8,5,6,2,6,-6,9,-2,-10,9,2,-1,1,7,-2,4,-1,9,4,-9,-5,9,-2,-8,6,2,-5,-8,-4,-2,3,-8,4,-4,-3,7,10,4,8,2,-1,-3,9,5,-6,10,10,6,7,2,-4,8,8,-6,3,-2,4,1,9,-5,-2,6,2,7,3,9,-2,-3,-8,7,-7,-8,-6,-4,-4,2,5,7,10,-7,5,2,5,-8,-4,-6,5,4,2,8,9,3,6,1,6,-10,-6,-8,8,3,2,3,-5,1,-6,-5,-9,-9,8,4,8,5,-8,4,-1,-8,-10,2,-1,-5,4,-2,-10,-1,-10,4,-8,-5,-4,-2,8,9,4,-3,4,10,10,10,-4,8,-5,4,-3,-10,8,3,-4,5,-4,3,-8,4,4,8,5,1,-2,3,-6,2,7,-1,8,10,-6,-7,-5,-4,7,8,2,3,-8,7,1,9,5,-2,-6,2,-7,-8,-2,-3,4,10,-5,-10,-9,-7,6,-10,-6,1,-5,5,4,4,6], dtype = "int64")#candidate|8919|(288,)|const|int64
var_8920 = relay.var("var_8920", dtype = "int32", shape = (48,))#candidate|8920|(48,)|var|int32
call_8916 = relay.TupleGetItem(func_2831_call(relay.reshape(const_8917.astype('int32'), [16, 7, 15]), relay.reshape(const_8918.astype('float32'), [405,]), relay.reshape(const_8919.astype('int64'), [288,]), relay.reshape(var_8920.astype('int32'), [2, 24]), ), 2)
call_8921 = relay.TupleGetItem(func_2837_call(relay.reshape(const_8917.astype('int32'), [16, 7, 15]), relay.reshape(const_8918.astype('float32'), [405,]), relay.reshape(const_8919.astype('int64'), [288,]), relay.reshape(var_8920.astype('int32'), [2, 24]), ), 2)
output = relay.Tuple([call_8835,call_8916,const_8917,const_8918,const_8919,var_8920,])
output2 = relay.Tuple([call_8836,call_8921,const_8917,const_8918,const_8919,var_8920,])
func_8941 = relay.Function([var_8920,], output)
mod['func_8941'] = func_8941
mod = relay.transform.InferType()(mod)
mutated_mod['func_8941'] = func_8941
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8942 = relay.var("var_8942", dtype = "int32", shape = (48,))#candidate|8942|(48,)|var|int32
func_8941_call = mutated_mod.get_global_var('func_8941')
call_8943 = func_8941_call(var_8942)
output = call_8943
func_8944 = relay.Function([var_8942], output)
mutated_mod['func_8944'] = func_8944
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8747_call = mod.get_global_var('func_8747')
func_8749_call = mutated_mod.get_global_var('func_8749')
call_9050 = func_8747_call()
call_9051 = func_8747_call()
output = relay.Tuple([call_9050,])
output2 = relay.Tuple([call_9051,])
func_9052 = relay.Function([], output)
mod['func_9052'] = func_9052
mod = relay.transform.InferType()(mod)
mutated_mod['func_9052'] = func_9052
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9052_call = mutated_mod.get_global_var('func_9052')
call_9053 = func_9052_call()
output = call_9053
func_9054 = relay.Function([], output)
mutated_mod['func_9054'] = func_9054
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8702_call = mod.get_global_var('func_8702')
func_8703_call = mutated_mod.get_global_var('func_8703')
call_9168 = func_8702_call()
call_9169 = func_8702_call()
uop_9174 = relay.log10(call_9168.astype('float32')) # shape=(7, 2, 15)
uop_9176 = relay.log10(call_9169.astype('float32')) # shape=(7, 2, 15)
func_6569_call = mod.get_global_var('func_6569')
func_6573_call = mutated_mod.get_global_var('func_6573')
var_9185 = relay.var("var_9185", dtype = "int64", shape = (2925,))#candidate|9185|(2925,)|var|int64
call_9184 = relay.TupleGetItem(func_6569_call(relay.reshape(var_9185.astype('int64'), [13, 15, 15]), relay.reshape(var_9185.astype('int64'), [13, 15, 15]), ), 0)
call_9186 = relay.TupleGetItem(func_6573_call(relay.reshape(var_9185.astype('int64'), [13, 15, 15]), relay.reshape(var_9185.astype('int64'), [13, 15, 15]), ), 0)
bop_9210 = relay.logical_or(uop_9174.astype('bool'), relay.reshape(call_9168.astype('bool'), relay.shape_of(uop_9174))) # shape=(7, 2, 15)
bop_9213 = relay.logical_or(uop_9176.astype('bool'), relay.reshape(call_9169.astype('bool'), relay.shape_of(uop_9176))) # shape=(7, 2, 15)
output = relay.Tuple([call_9184,var_9185,bop_9210,])
output2 = relay.Tuple([call_9186,var_9185,bop_9213,])
func_9223 = relay.Function([var_9185,], output)
mod['func_9223'] = func_9223
mod = relay.transform.InferType()(mod)
mutated_mod['func_9223'] = func_9223
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9224 = relay.var("var_9224", dtype = "int64", shape = (2925,))#candidate|9224|(2925,)|var|int64
func_9223_call = mutated_mod.get_global_var('func_9223')
call_9225 = func_9223_call(var_9224)
output = call_9225
func_9226 = relay.Function([var_9224], output)
mutated_mod['func_9226'] = func_9226
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9255 = relay.var("var_9255", dtype = "float32", shape = (14, 12, 8))#candidate|9255|(14, 12, 8)|var|float32
var_9256 = relay.var("var_9256", dtype = "float32", shape = (14, 12, 8))#candidate|9256|(14, 12, 8)|var|float32
bop_9257 = relay.greater(var_9255.astype('bool'), relay.reshape(var_9256.astype('bool'), relay.shape_of(var_9255))) # shape=(14, 12, 8)
func_7238_call = mod.get_global_var('func_7238')
func_7240_call = mutated_mod.get_global_var('func_7240')
call_9260 = relay.TupleGetItem(func_7238_call(), 0)
call_9261 = relay.TupleGetItem(func_7240_call(), 0)
output = relay.Tuple([bop_9257,call_9260,])
output2 = relay.Tuple([bop_9257,call_9261,])
func_9266 = relay.Function([var_9255,var_9256,], output)
mod['func_9266'] = func_9266
mod = relay.transform.InferType()(mod)
mutated_mod['func_9266'] = func_9266
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9266_call = mutated_mod.get_global_var('func_9266')
var_9268 = relay.var("var_9268", dtype = "float32", shape = (14, 12, 8))#candidate|9268|(14, 12, 8)|var|float32
var_9269 = relay.var("var_9269", dtype = "float32", shape = (14, 12, 8))#candidate|9269|(14, 12, 8)|var|float32
call_9267 = func_9266_call(var_9268,var_9269,)
output = call_9267
func_9270 = relay.Function([var_9268,var_9269,], output)
mutated_mod['func_9270'] = func_9270
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9281 = relay.const([[[2.743300,9.930674,-2.078252,-7.576307,0.439451,-5.032786,6.011237,-8.933977,9.688804,-0.364942],[0.894163,-4.019924,-5.561350,-3.499437,-5.162966,0.070511,4.295924,9.647735,4.660252,-5.812111],[8.090346,3.862830,-4.756284,3.610912,-5.836039,-9.169533,9.840893,-1.547357,-2.041047,-9.261263]],[[9.851397,-2.890674,3.190236,-2.089835,-2.251888,7.619469,1.221898,-2.736072,-0.905323,4.292229],[8.080538,-2.258054,-7.493186,-8.709323,6.787207,5.775641,-7.825787,0.193654,9.552995,0.077850],[-8.869015,1.274820,8.285752,0.620899,-0.289703,-3.921547,-1.356867,-8.209389,-6.022124,3.859654]],[[0.317200,-6.726798,0.558969,1.754807,9.631478,-1.249815,0.214331,9.767665,1.264615,-1.582988],[4.277034,8.000675,-9.453248,-0.597868,-5.604442,-7.027861,6.993116,9.005231,5.368019,4.312201],[3.477594,-9.845520,-5.573969,-0.866230,5.591376,0.453313,9.690703,-4.150412,-1.761987,-7.310595]],[[9.437012,-1.505971,4.572190,2.492860,3.221034,3.057281,-6.865230,3.629697,3.100644,-1.086893],[9.798404,6.598481,-4.269200,-9.078121,2.037397,0.497613,9.196218,8.952421,4.189101,5.904714],[1.667911,-9.272578,1.754709,-6.259962,9.137682,6.901939,-4.652699,3.560793,-2.225086,0.218706]],[[7.976691,-9.374929,4.599381,0.042225,-6.615205,2.963729,-4.335389,3.908010,3.783791,-6.432429],[-1.375082,8.294579,2.684611,4.795525,-7.531603,9.963345,6.695960,9.637851,0.019972,-9.431450],[0.262713,7.877124,9.918464,5.216223,1.138408,2.784653,7.465854,-3.276893,0.155012,3.598954]],[[1.862589,4.072660,-1.032507,1.369828,-5.735606,-8.530726,8.244682,5.759698,-7.572427,3.670764],[-3.198021,-3.308291,-4.964766,-9.298098,-2.120998,0.402529,-2.892000,3.157812,7.708825,-4.452055],[-3.956390,-5.264110,8.194887,-0.599399,-7.980931,3.900121,-0.481814,6.663453,-6.741280,-5.500999]],[[7.745661,-7.111645,1.303529,-2.741476,-9.697270,-9.116099,9.875984,-1.845170,-0.538350,5.495113],[3.863779,7.903214,-1.316441,-8.642443,5.164663,2.561761,-8.650042,-5.116014,2.034385,9.897820],[-7.593355,-7.527202,-1.346702,-5.322734,2.140851,9.415526,-8.509435,-5.111007,8.629102,3.302738]],[[-2.972284,5.085845,1.117919,-5.233872,0.908339,-5.609023,9.156344,5.293817,-4.475596,-3.812414],[5.506316,-0.330853,-0.655764,-3.255431,0.381820,-4.254479,8.971937,-1.480931,-6.034921,9.601583],[-6.978295,3.521862,5.213783,7.755693,-1.793522,1.195401,-1.894796,0.917955,8.847936,-7.534561]],[[6.173322,-1.206274,8.463449,4.525531,5.909155,8.853853,3.882330,8.197188,3.332294,-2.008673],[-3.074769,-6.647943,9.376476,8.636259,5.244521,7.419716,8.767159,0.593671,-8.285475,-0.501047],[-9.004084,-9.538606,-2.718327,-2.010286,-6.103351,8.626890,-2.055073,0.899647,9.359694,-9.922661]]], dtype = "float64")#candidate|9281|(9, 3, 10)|const|float64
const_9282 = relay.const([[[2.327325,5.721913,6.741338,-2.992002,6.561919,8.068583,-5.070081,4.746289,3.765582,4.989876],[-1.349028,-9.374274,0.120388,6.236270,2.008277,2.248847,9.137818,5.109519,-1.301311,-1.247235],[-0.511350,2.523108,5.840639,3.662698,0.953619,6.957455,5.716946,6.546242,1.772908,-0.965085]],[[3.975971,5.844544,0.206446,5.220470,-1.946338,6.026931,6.901804,9.854819,-0.863450,-1.496536],[3.753825,6.553008,6.128055,7.387388,1.858214,0.467145,1.004228,7.513567,-7.500635,2.095050],[-1.189238,0.509249,1.582188,-2.264076,-0.799124,8.642861,-9.425063,-4.865506,-7.068599,-6.552289]],[[3.887010,-8.458235,0.119015,1.623458,4.056661,-2.177169,-1.245614,1.579581,7.344431,5.093067],[-2.546521,3.958108,2.599053,4.152098,-5.595761,-1.938037,1.766157,-7.111808,-3.335333,-2.719644],[-1.117518,-6.147654,5.835643,9.889101,7.809392,-6.006154,9.423352,8.815081,8.540333,-9.897602]],[[-3.864697,1.803155,-2.598217,-1.883840,-1.969630,-8.794950,-7.724494,1.167028,-7.471490,-7.611082],[4.723086,-4.267407,-3.033529,9.543139,-7.069414,4.518043,-2.518369,-1.034188,0.896847,-8.899963],[-7.729084,-5.729786,0.419297,-9.152150,-4.389836,2.536097,6.467137,5.759125,5.498536,2.414083]],[[-2.340884,8.418920,6.290352,4.215104,-9.516013,-1.431351,-4.203811,4.114802,-5.698557,-9.598429],[-2.446108,-9.076324,5.440587,-4.035004,2.286994,-2.429295,-9.027466,-4.558670,4.568688,-0.664844],[3.066088,-3.803120,-6.176820,7.973336,2.697317,8.048020,-3.323207,5.162320,0.735583,-8.449803]],[[7.404049,4.521941,-3.542723,-7.397758,8.943650,-2.584875,8.140197,4.280920,-2.535550,9.131093],[-7.261972,-1.686300,-2.036716,-9.104310,8.056745,-9.402275,2.952943,-8.116040,-8.722132,5.660426],[-0.294707,-6.898329,0.586190,1.833752,4.483109,2.696202,4.000213,-9.942316,-6.421463,-8.396549]],[[8.064935,-2.463499,-9.531107,2.927031,2.289636,-8.211250,-6.226632,-8.949732,-0.642370,1.573279],[-1.714514,5.432912,-7.206553,4.282728,-9.162011,-9.812575,4.111270,-4.939572,-6.675006,-7.179618],[0.612505,7.923444,5.402403,4.796277,3.150337,8.093516,6.687564,8.075645,-4.814999,-7.926814]],[[-5.019344,5.796817,-4.357482,0.581882,1.879165,-2.046699,3.575545,-3.065094,1.730906,-7.919945],[-0.522319,-0.596591,9.082565,-8.606142,4.759256,-0.140951,6.831307,4.431192,-8.812695,-5.930196],[-4.356439,-6.198451,-3.389853,-0.025100,-7.098161,-7.746352,9.110083,-2.633237,0.061214,-3.145789]],[[-0.618223,-2.966475,-7.993567,8.522731,4.445071,-4.630972,-8.745567,2.178601,7.610153,9.128288],[-7.564027,8.125537,-2.430393,-4.160913,-2.566498,-4.121667,-1.887620,-9.000651,-6.437997,5.271919],[-4.470236,6.805470,-9.466812,8.443186,7.379281,2.384770,8.283339,4.797138,-2.513266,5.275587]]], dtype = "float64")#candidate|9282|(9, 3, 10)|const|float64
bop_9283 = relay.floor_mod(const_9281.astype('float64'), relay.reshape(const_9282.astype('float64'), relay.shape_of(const_9281))) # shape=(9, 3, 10)
output = bop_9283
output2 = bop_9283
func_9296 = relay.Function([], output)
mod['func_9296'] = func_9296
mod = relay.transform.InferType()(mod)
output = func_9296()
func_9297 = relay.Function([], output)
mutated_mod['func_9297'] = func_9297
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7506_call = mod.get_global_var('func_7506')
func_7507_call = mutated_mod.get_global_var('func_7507')
call_9319 = relay.TupleGetItem(func_7506_call(), 1)
call_9320 = relay.TupleGetItem(func_7507_call(), 1)
func_6491_call = mod.get_global_var('func_6491')
func_6495_call = mutated_mod.get_global_var('func_6495')
var_9330 = relay.var("var_9330", dtype = "int8", shape = ())#candidate|9330|()|var|int8
const_9331 = relay.const([[1],[4],[-9],[-6],[-8],[-3],[-7],[1],[9]], dtype = "int8")#candidate|9331|(9, 1)|const|int8
call_9329 = relay.TupleGetItem(func_6491_call(relay.reshape(var_9330.astype('int8'), []), relay.reshape(const_9331.astype('int8'), [1, 9]), ), 1)
call_9332 = relay.TupleGetItem(func_6495_call(relay.reshape(var_9330.astype('int8'), []), relay.reshape(const_9331.astype('int8'), [1, 9]), ), 1)
func_8941_call = mod.get_global_var('func_8941')
func_8944_call = mutated_mod.get_global_var('func_8944')
var_9334 = relay.var("var_9334", dtype = "int32", shape = (48,))#candidate|9334|(48,)|var|int32
call_9333 = relay.TupleGetItem(func_8941_call(relay.reshape(var_9334.astype('int32'), [48,])), 2)
call_9335 = relay.TupleGetItem(func_8944_call(relay.reshape(var_9334.astype('int32'), [48,])), 2)
func_8132_call = mod.get_global_var('func_8132')
func_8136_call = mutated_mod.get_global_var('func_8136')
const_9344 = relay.const([5,-6,-8,-1,4,-7,-6,-6,1,1,-2,-8,9,-7,8,-10,3,1,4,6,-1,-9,-8,-8,-4,5,-2,-4,6,5,-3,-8,-10,-10,10,2,-2,8,5,-9,5,-7,-8,9,-4,9,-1,6,5,-8,5,-6,-1,5,10,-7,9,-1,-4,-2,-9,6,7,3,-9,8,-1,8,-9,-9,10,-4,-1,7,-9,4,9,6,-3,9,10,-5,-2,-4,-8,9,-3,9,10,-9,-5,7,-2,-2,-3,-6,-10,5,-6,2,6,-1,8,2,6,-9,4,-4,10,-3,7,-8,-10,9,-6,9,-4,-2,2,10,-5,8,-6,8,-10,-9,-10,-6,-9,-6,5,6,8,4,2,-8,5,-6,10,-7,7,-9,-10,-7,7,-4,9,-6,8,6,5,6,-2,3,8,-4,3,-2,-8,3,-2,-10,9,-7,7,6,9,-6,-4,-5,-8,-9,-2,-5,10,8,9,3,5,4,5,-7,-1,3,1,-10,-9,-9,10,3,-6,-1,8,-2,6,-8,3,3,-6,9,-6,-6,8,6,-3,-9,10,3,-8,3,-8,-4,6,-7,6,10,5,-7,-3,-4,-3,-5,-6,1,3,7,8,-4,-9,-7,-7,6,-4,8,9,-4,-6,5,7,-4,-3,2,2,-4,-7,5,1,-5,-6,4,4,8,-9,1,-9,6,8,3,-6,-1,9,6,-9,5,-5,-3,-9,8,-3,3,6,6,-1,-5,6,-9,-4,-5,5,8,-2,-8,1,-8,7,-6,3,8,-1,-1,9,-1,5,5,9,2,6,2,-8,-4,2,-7,-4,-8,-7,1,9,8,10,-7,-9,-2,-1,-2,5,-3,8,9,-6,-4,-6,-9,-6,10,-10,-9,-8,-4,7,7,4,6,-1,-1,-4,1,1,-6,9,-5,4,10,6,10,-1,-5,8,-8,-8,7,-7,3,-8,-5,8,-6,5,-6,-1,6,5,9,-3,-4,10,-5,2,3,1,-9,-9,3,2,-6,-8,-4,-4,-6,-2,9,4,6,-6,-5,8,-7,-8,10,-10,2,-9,-2,-9,-9,1,-2,-2,10,-1,4,-1,-4,-1,-1,-1,10,-7,-2,-3,9,8,8,4,-9,-4,-2,-6,-4,-3,10,5,-7,-4,-3,1,-10,5,-1,7,4,3,-6,4,-5,-4,4,-7,-6,-9,8,10,9,8,-6,9,6,-8,2,4,-1,-6,-10,4,-4,4,3,9,-1,3,2,1,-8,2,-1,9,5,-6,8,10,5,3,-7,-1,1,-10,-5,-1,-10,-3,9,2,9,10,10,-9,-3,-2,-9,1,-6,-3,3,-6,-8,1,-4,5,3,-1,5,-7,-4,-1,3,-1,4,-1,-9,-8,-7,6,6,-5,7,1,3,10,-10,-8,-2,1,4,-3,-3,10,1,-1,7,5,1,-6,7,-4,7,-7,3,-5,4,-10,10,-6,7,-10,-5,-10,3,3,-2,-7,8,-9,6,10,3,-6,1,6,1,-4,-10,-3,10,5,2,2,7,-3,-5,-10,2,-1,-8,-2,-10,-5,9,-5,5,-3,-1,-9,6,1,4,10,-7,-2,8], dtype = "uint8")#candidate|9344|(588,)|const|uint8
call_9343 = relay.TupleGetItem(func_8132_call(relay.reshape(var_9330.astype('int8'), []), relay.reshape(const_9344.astype('uint8'), [588,]), ), 0)
call_9345 = relay.TupleGetItem(func_8136_call(relay.reshape(var_9330.astype('int8'), []), relay.reshape(const_9344.astype('uint8'), [588,]), ), 0)
output = relay.Tuple([call_9319,call_9329,var_9330,const_9331,call_9333,var_9334,call_9343,const_9344,])
output2 = relay.Tuple([call_9320,call_9332,var_9330,const_9331,call_9335,var_9334,call_9345,const_9344,])
func_9351 = relay.Function([var_9330,var_9334,], output)
mod['func_9351'] = func_9351
mod = relay.transform.InferType()(mod)
var_9352 = relay.var("var_9352", dtype = "int8", shape = ())#candidate|9352|()|var|int8
var_9353 = relay.var("var_9353", dtype = "int32", shape = (48,))#candidate|9353|(48,)|var|int32
output = func_9351(var_9352,var_9353,)
func_9354 = relay.Function([var_9352,var_9353,], output)
mutated_mod['func_9354'] = func_9354
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8015_call = mod.get_global_var('func_8015')
func_8017_call = mutated_mod.get_global_var('func_8017')
call_9361 = relay.TupleGetItem(func_8015_call(), 0)
call_9362 = relay.TupleGetItem(func_8017_call(), 0)
func_2831_call = mod.get_global_var('func_2831')
func_2837_call = mutated_mod.get_global_var('func_2837')
var_9372 = relay.var("var_9372", dtype = "int32", shape = (1680,))#candidate|9372|(1680,)|var|int32
var_9373 = relay.var("var_9373", dtype = "float32", shape = (1, 405))#candidate|9373|(1, 405)|var|float32
var_9374 = relay.var("var_9374", dtype = "int64", shape = (288,))#candidate|9374|(288,)|var|int64
var_9375 = relay.var("var_9375", dtype = "int32", shape = (48,))#candidate|9375|(48,)|var|int32
call_9371 = relay.TupleGetItem(func_2831_call(relay.reshape(var_9372.astype('int32'), [16, 7, 15]), relay.reshape(var_9373.astype('float32'), [405,]), relay.reshape(var_9374.astype('int64'), [288,]), relay.reshape(var_9375.astype('int32'), [2, 24]), ), 5)
call_9376 = relay.TupleGetItem(func_2837_call(relay.reshape(var_9372.astype('int32'), [16, 7, 15]), relay.reshape(var_9373.astype('float32'), [405,]), relay.reshape(var_9374.astype('int64'), [288,]), relay.reshape(var_9375.astype('int32'), [2, 24]), ), 5)
output = relay.Tuple([call_9361,call_9371,var_9372,var_9373,var_9374,var_9375,])
output2 = relay.Tuple([call_9362,call_9376,var_9372,var_9373,var_9374,var_9375,])
func_9384 = relay.Function([var_9372,var_9373,var_9374,var_9375,], output)
mod['func_9384'] = func_9384
mod = relay.transform.InferType()(mod)
var_9385 = relay.var("var_9385", dtype = "int32", shape = (1680,))#candidate|9385|(1680,)|var|int32
var_9386 = relay.var("var_9386", dtype = "float32", shape = (1, 405))#candidate|9386|(1, 405)|var|float32
var_9387 = relay.var("var_9387", dtype = "int64", shape = (288,))#candidate|9387|(288,)|var|int64
var_9388 = relay.var("var_9388", dtype = "int32", shape = (48,))#candidate|9388|(48,)|var|int32
output = func_9384(var_9385,var_9386,var_9387,var_9388,)
func_9389 = relay.Function([var_9385,var_9386,var_9387,var_9388,], output)
mutated_mod['func_9389'] = func_9389
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7506_call = mod.get_global_var('func_7506')
func_7507_call = mutated_mod.get_global_var('func_7507')
call_9414 = relay.TupleGetItem(func_7506_call(), 0)
call_9415 = relay.TupleGetItem(func_7507_call(), 0)
output = call_9414
output2 = call_9415
func_9428 = relay.Function([], output)
mod['func_9428'] = func_9428
mod = relay.transform.InferType()(mod)
output = func_9428()
func_9429 = relay.Function([], output)
mutated_mod['func_9429'] = func_9429
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9052_call = mod.get_global_var('func_9052')
func_9054_call = mutated_mod.get_global_var('func_9054')
call_9439 = relay.TupleGetItem(func_9052_call(), 0)
call_9440 = relay.TupleGetItem(func_9054_call(), 0)
uop_9443 = relay.atan(call_9439.astype('float32')) # shape=(7, 2, 15)
uop_9445 = relay.atan(call_9440.astype('float32')) # shape=(7, 2, 15)
func_9296_call = mod.get_global_var('func_9296')
func_9297_call = mutated_mod.get_global_var('func_9297')
call_9455 = func_9296_call()
call_9456 = func_9296_call()
func_6569_call = mod.get_global_var('func_6569')
func_6573_call = mutated_mod.get_global_var('func_6573')
const_9466 = relay.const([[-5,-10,5],[1,-8,-1],[5,2,-7],[-7,7,7],[-3,-4,10],[-10,6,7],[3,-7,2],[-9,-7,-8],[3,9,9],[2,10,6],[5,6,-8],[-5,3,-2],[-4,-6,2],[-5,1,-7],[-2,2,-8],[-2,4,6],[-3,3,-5],[-4,5,-9],[-4,-2,-8],[5,1,-10],[6,1,1],[4,-10,-9],[3,5,-3],[-5,-9,-4],[-9,7,-6],[8,-2,-4],[8,-5,4],[-5,-9,-6],[-7,1,-9],[4,-4,9],[-9,-4,8],[4,-5,-6],[6,7,-4],[-8,-4,-6],[4,1,1],[7,-7,-3],[-8,-10,-7],[-1,10,6],[9,-2,3],[-5,7,6],[-6,-10,-4],[7,-9,5],[5,-6,-4],[-6,8,-5],[9,-9,-6],[6,10,6],[-8,-7,1],[-4,-8,1],[5,-4,-7],[-6,-10,5],[-2,9,-7],[-7,9,-4],[4,7,8],[-5,-5,-8],[9,-1,2],[7,4,-7],[1,8,6],[10,-9,5],[5,2,10],[-4,-7,7],[10,-7,-10],[-7,-8,2],[-6,7,7],[5,-1,-4],[9,9,-3],[-7,-2,1],[-9,-4,-5],[3,9,7],[2,-10,8],[-6,-1,5],[5,9,8],[-1,8,4],[-2,-5,8],[6,3,-7],[-9,-10,-9],[-4,-6,-4],[-3,-1,-10],[4,-3,4],[-2,-3,8],[6,2,6],[10,8,3],[2,6,-6],[-10,10,-3],[7,7,-10],[10,10,1],[-5,-8,-1],[-6,-6,6],[-1,-6,2],[-9,5,-8],[9,-1,10],[-7,-7,10],[5,-8,-10],[-6,-3,-6],[-4,-3,-9],[5,9,-6],[-10,-3,-9],[2,9,-6],[-8,-2,9],[-5,10,-3],[1,8,-4],[6,-9,-10],[2,-10,-3],[1,-3,2],[8,-4,-9],[9,2,7],[-2,-9,-4],[7,2,8],[-8,-9,-2],[2,2,2],[2,1,-9],[-2,-3,-3],[-2,4,10],[1,3,-8],[3,-6,-5],[-4,10,-10],[6,-3,3],[-6,6,8],[2,-3,-9],[9,-10,-5],[-5,-3,6],[7,5,1],[-6,2,-6],[8,-2,-4],[-2,1,10],[-1,6,-2],[-7,-6,-7],[-10,-3,4],[7,-1,3],[-7,10,8],[-5,5,-3],[8,5,2],[-1,6,-7],[7,-10,-2],[-4,7,9],[4,-6,-9],[-7,9,-3],[6,3,9],[-10,-5,-7],[-5,-8,-6],[10,4,10],[-5,10,-1],[-4,6,8],[-7,-6,-1],[1,-3,-8],[5,9,-4],[-3,-10,-2],[8,9,-1],[-3,-7,5],[9,4,3],[1,10,7],[2,2,5],[-4,-7,-8],[10,-1,8],[5,-9,1],[2,2,-3],[7,-3,7],[4,10,4],[2,-9,3],[10,-7,8],[3,-10,-6],[-5,8,4],[5,-7,-9],[-5,7,7],[-3,7,-6],[-8,6,5],[10,-7,-10],[-4,-8,2],[-1,2,2],[7,6,9],[-10,-10,-4],[-10,-5,-3],[-7,9,-7],[5,-9,8],[-4,-1,1],[-2,-7,-9],[7,7,6],[8,8,-9],[10,5,-10],[-1,1,7],[-3,3,1],[-3,3,2],[-2,5,8],[7,9,-5],[8,-3,1],[-1,7,4],[-7,-8,-9],[-2,-1,-2],[-2,-6,4],[7,-1,-9],[8,-7,-3],[5,-8,-2],[5,9,-10],[4,-4,2],[4,-8,-2],[7,8,-7],[3,-2,-8],[9,8,-9],[2,4,-4],[4,8,2],[10,9,3],[2,1,8],[-8,-1,8],[-9,-3,-6],[1,-4,-1],[-8,8,-10],[7,-7,-6],[6,-4,4],[-6,2,-6],[-6,-6,8],[9,-8,-5],[-7,10,1],[-9,-10,3],[-4,-7,-8],[-3,-1,-7],[6,-5,4],[-5,-4,-7],[9,-1,8],[2,-3,-8],[-1,-5,2],[1,9,-4],[-8,6,-2],[-7,8,9],[-2,-7,2],[-3,-6,7],[-2,6,6],[6,7,-6],[-4,9,10],[5,-2,6],[10,9,10],[4,4,-3],[9,4,1],[6,-4,-7],[-6,-6,-7],[-2,-2,2],[7,-3,-5],[-1,8,-2],[-7,4,5],[6,6,-10],[6,7,-3],[1,-5,10],[5,-6,-7],[1,7,5],[-9,-3,-7],[-7,5,3],[4,-7,-2],[-1,-8,-7],[-7,9,8],[-6,-9,3],[2,-8,-3],[-4,-9,-8],[-5,6,-7],[-8,-5,-8],[5,1,3],[-9,-1,1],[-2,-5,-3],[9,-3,3],[10,-6,-10],[-8,-8,-6],[-3,5,4],[10,-10,-4],[-9,3,10],[3,7,4],[4,10,-3],[3,3,-9],[-6,2,5],[1,9,-7],[-9,-10,8],[4,10,-3],[10,8,-6],[10,-8,-7],[8,-9,3],[-7,-6,1],[-3,-5,-8],[-5,-6,4],[9,-1,-8],[-2,-10,5],[-8,-8,-1],[10,3,-8],[-6,1,-3],[-2,-1,-1],[-5,7,-7],[9,-7,2],[5,4,9],[-10,5,7],[-6,-2,3],[-6,-8,6],[-5,1,-1],[2,4,5],[-9,8,-6],[-4,5,-9],[-9,9,-10],[-1,7,7],[-6,7,8],[-5,6,-1],[-10,5,10],[4,-1,-5],[5,5,1],[-1,4,8],[9,-9,9],[-9,6,2],[10,-5,8],[-1,9,4],[-10,6,-4],[-4,-8,-10],[-2,5,3],[-3,-5,3],[8,6,-1],[-7,7,7],[-8,6,3],[-4,-7,4],[-8,4,-5],[7,-2,-3],[3,-6,-1],[-4,3,6],[8,-2,9],[-6,4,10],[-6,5,2],[-10,7,-5],[-6,-9,1],[-4,3,5],[-5,9,-10],[9,10,5],[-3,8,3],[-10,4,-8],[5,3,2],[-10,-6,6],[-1,-3,10],[-4,-3,5],[-6,4,4],[-3,8,7],[-4,6,-7],[8,-7,1],[-9,2,-7],[-9,-10,3],[9,-1,3],[-6,4,-7],[-6,2,-5],[3,-10,-7],[10,10,-9],[3,8,-4],[1,-8,-5],[7,1,5],[2,2,-10],[9,-5,9],[-1,-3,-6],[1,-8,-4],[5,4,-3],[-4,6,-7],[6,-6,4],[-6,-8,3],[7,-3,3],[8,1,4],[1,-8,-5],[-1,10,4],[5,-8,-1],[8,3,3],[-1,3,-2],[-7,-6,-10],[-10,2,10],[-6,7,7],[5,4,-9],[3,7,-3],[3,-4,4],[10,4,-6],[9,7,-5],[4,2,-7],[4,-4,-8],[-1,-6,1],[-8,-4,4],[-5,1,9],[-10,8,-10],[4,7,-8],[-4,7,6],[10,9,-4],[-5,6,-3],[-3,-9,-7],[-8,-6,9],[-1,4,3],[-3,4,8],[-5,-9,8],[-5,6,-4],[4,4,-8],[-1,-5,6],[-7,-2,3],[10,-10,10],[-4,-3,-10],[5,-10,1],[3,-8,8],[-8,-6,-7],[8,-10,8],[-8,-4,5],[9,-5,9],[8,1,2],[-1,6,9],[-8,-1,-7],[8,-1,8],[4,6,-6],[-9,-8,-10],[10,9,1],[-7,6,7],[7,1,-8],[6,8,-5],[-6,9,-3],[-4,-10,-8],[2,-10,-5],[4,-4,2],[3,6,-9],[-6,-3,8],[-1,10,-7],[2,4,-8],[1,-3,-6],[-9,-4,-2],[3,-7,-2],[4,-1,-7],[-3,-8,3],[7,9,-10],[-8,5,1],[-6,-7,5],[-10,-3,5],[9,-8,-6],[6,-6,-5],[1,-3,-7],[6,-1,6],[2,-6,9],[4,-9,7],[-5,1,10],[-8,-1,-9],[-9,10,8],[7,4,-5],[-3,10,-3],[-7,4,2],[4,-4,4],[3,-8,3],[-1,-6,-2],[-7,-1,-6],[8,5,-3],[-5,-8,2],[-2,-5,-10],[-6,7,-7],[4,5,-2],[10,-6,1],[1,-8,5],[-2,7,-7],[6,-9,5],[1,9,-3],[-8,-1,7],[4,10,-8],[4,-1,-7],[-7,10,-5],[1,4,-3],[10,-9,6],[5,-3,-3],[-9,1,5],[8,3,9],[3,-4,-9],[6,-8,2],[-3,3,-3],[1,1,-2],[1,10,8],[-10,9,-1],[-2,-10,4],[-2,3,6],[-2,-10,8],[1,1,-3],[-3,3,-10],[-2,1,-1],[-8,-5,10],[6,8,-5],[7,-8,-9],[1,-6,4],[9,6,-2],[9,4,10],[5,6,-4],[-10,8,3],[-8,9,-9],[10,1,-1],[7,-2,2],[-4,9,-10],[2,-8,-9],[8,-5,3],[-10,-3,-9],[3,-4,6],[8,-3,-10],[2,7,4],[10,5,-1],[-1,-9,3],[1,-5,-10],[1,1,-4],[8,-4,-7],[1,2,-3],[4,3,8],[-3,-1,-2],[-9,10,-8],[10,-2,1],[3,-7,9],[8,-3,9],[7,8,2],[3,-4,1],[9,8,-6],[-3,4,-3],[-1,8,-2],[-3,1,-10],[-3,4,8],[-7,-7,-10],[-5,-3,4],[-4,9,-7],[9,3,-1],[-10,-6,2],[-10,-10,-6],[-3,3,2],[3,10,-5],[6,-7,3],[4,2,8],[3,-5,-6],[-3,-3,-4],[-4,8,3],[-1,9,-10],[5,6,3],[3,3,-10],[8,7,-2],[6,-9,9],[10,-1,-9],[-3,-4,-2],[-4,-2,3],[-5,5,-2],[-4,2,3],[-5,3,-5],[-8,7,-9],[8,3,10],[10,-7,-1],[2,7,9],[5,-4,4],[1,8,-4],[6,-10,-10],[5,8,-4],[2,4,-10],[-9,9,-3],[3,-4,1],[-5,2,6],[-8,3,-4],[4,-3,-5],[-1,9,-8],[-2,-8,9],[6,6,1],[-9,4,4],[-1,4,-9],[8,-1,-2],[9,7,10],[-9,-2,-4],[7,-2,7],[9,-4,-1],[-9,-3,-6],[-9,-8,-6],[-4,7,-10],[-1,-6,7],[10,-1,-8],[7,3,-8],[-6,-6,5],[5,7,-9],[6,-3,4],[-6,-6,9],[1,-1,-10],[3,-6,-2],[-3,4,10],[-6,-3,9],[-8,4,-3],[-8,-10,9],[8,6,3],[6,-5,-7],[-4,-1,9],[-8,6,1],[-4,-4,-5],[-4,6,-6],[-6,-8,-5],[-5,-5,7],[6,-1,5],[2,8,-4],[2,8,8],[1,-8,-4],[-2,-1,-5],[1,4,-4],[1,-8,5],[-3,-2,6],[-5,-5,-6],[6,-5,-4],[-5,-2,6],[-8,3,7],[-2,6,3],[5,1,-3],[-6,-6,5],[-3,-7,-9],[-2,-10,-5],[-4,9,-10],[-6,-2,-4],[5,-3,-2],[2,-1,2],[-2,9,9],[10,8,5],[-2,2,7],[7,5,-4],[-10,-6,-7],[-3,1,10],[-3,-3,-10],[8,9,-5],[5,10,-4],[10,-3,7],[3,7,-1],[3,-9,-6],[7,8,5],[4,-5,-1],[-1,5,7],[1,1,3],[-7,5,-7],[5,-6,-1],[8,2,-10],[-4,-3,-4],[-8,-10,5],[10,-2,-9],[9,-2,-7],[-7,-8,10],[-1,-10,1],[7,-9,2],[-10,7,9],[-2,10,-3],[-7,-1,9],[-5,-6,-5],[9,8,-8],[-3,3,2],[-5,-10,8],[-1,-4,-2],[-4,3,3],[6,-1,9],[7,10,1],[-3,8,-1],[-9,-3,-5],[-7,-3,-10],[10,6,4],[-1,-7,-10],[4,-5,9],[9,8,-10],[-9,5,-9],[8,-5,-1],[2,-10,4],[9,5,8],[-10,1,-9],[5,10,-9],[7,6,-4],[8,10,6],[10,-10,9],[-9,5,9],[1,-3,5],[9,1,-1],[4,-10,-9],[-8,2,-4],[-6,-2,-2],[-6,-6,-5],[-2,1,2],[6,-3,-2],[-3,-9,-8],[5,-7,6],[7,-4,2],[-4,-6,8],[6,7,10],[-2,-2,9],[-6,-6,1],[-2,-8,3],[-6,6,9],[1,8,5],[-9,-5,9],[-1,-8,6],[2,10,-4],[2,8,-3],[2,4,-4],[-1,7,-4],[-8,1,-5],[-5,-7,-7],[-8,1,8],[4,-8,1],[-9,-6,6],[5,8,-2],[-3,10,-4],[10,-7,-9],[-5,-5,3],[-6,8,-1],[4,10,1],[5,-1,-5],[1,8,-6],[-4,-1,-5],[-7,-7,5],[-1,3,10],[-5,8,-7],[2,8,-9],[10,3,-2],[-6,-9,4],[-10,-2,-6],[8,7,-7],[9,-4,3],[1,-7,-5],[-5,10,3],[-10,8,-9],[-4,6,-3],[6,6,8],[5,1,6],[-5,-6,-4],[10,5,6],[4,10,-1],[-5,-4,-9],[10,-4,8],[-8,8,9],[-4,-8,4],[-4,-5,-8],[-5,5,6],[4,10,7],[-5,-2,-1],[-8,7,-6],[9,-1,4],[1,4,1],[-10,6,-2],[-1,-9,1],[-5,7,-5],[6,2,-6],[-9,-8,-3],[-5,-3,-6],[-5,1,1],[4,-10,-9],[-3,-9,-2],[-3,-4,-6],[-9,3,-3],[4,-5,1],[-6,-3,7],[3,6,-7],[9,-1,-3],[1,7,2],[10,-7,-3],[-2,-5,-5],[-6,4,-10],[-10,1,1],[8,5,-5],[-5,-5,1],[-1,6,9],[-10,-10,9],[-5,7,2],[-1,-10,-6],[-5,10,-3],[9,6,-2],[7,-2,-4],[4,-1,5],[-1,-4,3],[5,-10,10],[-8,9,-2],[-2,3,-5],[4,8,2],[-9,-2,-3],[-2,4,5],[-7,-1,-8],[-9,4,-2],[-3,-8,-4],[-6,1,-7],[-2,-3,10],[10,-1,-6],[-6,7,1],[8,-10,4],[-7,8,-8],[-2,-3,-9],[-3,2,10],[2,5,5],[-1,-7,-1],[4,1,6],[8,-10,-5],[1,7,-3],[-3,4,-4],[-3,4,-5],[-1,3,-4],[1,-6,-10],[9,-10,-7],[5,6,8],[-8,7,1],[9,3,-5],[-10,7,-9],[-9,-10,-5],[10,7,-9],[7,5,1],[6,-9,-9],[-5,5,5],[1,-2,-2],[10,-9,9],[-1,5,-2],[4,-4,6],[1,4,-5],[10,2,-9],[-1,8,5],[7,-6,3],[-7,-4,10],[-6,-3,-7],[-9,8,-8],[-8,7,8],[3,-7,-8],[-5,-7,-7],[10,8,-4],[-4,1,-6],[1,8,10],[-8,-1,-10],[-7,-5,-5],[-1,-6,8],[5,6,-6],[-5,-6,2],[10,9,-9],[2,7,10],[10,6,-2],[9,-8,1],[5,10,-2],[-9,4,-6],[10,-1,-7],[-8,-4,-4],[-1,-2,-6],[-3,-3,-6],[5,7,-7],[4,-5,6],[-6,1,-1],[4,8,10],[-3,8,-4],[-8,2,-8],[-10,-8,-7],[-7,1,3],[-2,5,-7],[5,6,5],[-8,8,-8],[-10,-1,3],[5,3,9],[9,6,-1],[-8,4,-2],[3,10,1],[-10,-10,9],[2,-5,-9],[4,-6,-3],[5,5,-3],[-6,6,-10],[8,6,-4],[1,-9,1],[-1,-8,-5],[-3,-10,10],[3,2,6],[6,3,-1],[-7,10,-9],[5,-8,-4],[-6,5,-5],[-1,-3,-10],[4,-10,-6],[-1,3,10],[-4,9,-10],[5,2,-1],[-5,7,-5],[4,1,-4],[6,1,-9],[-1,-7,-3],[7,-2,5],[8,-6,-7],[-10,-8,-6],[-9,10,-4],[-10,-1,7],[-6,1,-3],[-1,-8,4],[8,6,-6],[-2,7,-4],[2,5,-4],[7,-7,6],[-7,-1,-6],[10,-10,3],[1,2,9],[8,-3,-5],[7,5,-2],[-4,-1,-6],[9,-2,4],[-6,1,4],[5,1,7],[4,-10,8],[1,-1,-6],[-9,4,-5],[-9,7,10],[-9,-5,2],[8,6,5],[8,-7,-8],[9,-9,1],[3,-6,1],[4,-8,2],[-1,-5,8],[2,-6,8],[-3,1,10],[-5,-3,5],[-4,4,6],[-3,6,-5],[-8,2,-9],[7,-7,-1],[2,10,-4],[9,-2,1],[1,-6,-1],[-3,9,2],[6,-9,8],[8,3,-7],[-2,6,-1],[1,-10,-7],[9,2,5],[-7,3,-4],[3,3,1],[-4,8,7],[6,9,7],[7,-8,-6],[-2,6,7],[8,-3,6],[1,-8,-2],[8,5,4],[-3,-7,-1],[-6,4,-10],[-1,2,9],[9,-10,9],[-2,-9,-4],[8,-5,8],[10,9,-5],[6,7,-1],[6,6,-5],[-7,2,3],[-9,3,7],[-10,-7,-2],[9,-8,4],[3,-9,7],[4,2,-9],[1,-9,-4],[8,-3,6],[-7,3,-3],[7,8,-5],[-2,8,6],[-3,7,-1],[-8,8,4],[-9,9,6],[-1,-10,-9],[-4,3,-8],[-1,-5,-3],[-3,5,-4],[-5,10,5],[8,7,4],[2,-8,2],[-5,7,3],[-6,2,-8],[-2,9,7],[-6,-1,2],[10,5,-10],[-3,2,-4],[-1,1,-4],[10,-2,-8],[5,3,-8],[1,-8,7],[1,-2,2],[-8,-6,6],[10,6,7],[8,-9,-5],[-7,-6,-1],[2,4,7],[-9,1,-5],[-5,-5,6],[8,-1,6],[-5,-4,-7],[-3,1,6],[5,4,-1],[3,6,1],[-7,8,6],[-7,9,2],[-6,-9,-2],[4,10,-3],[9,-1,1],[8,10,7],[-2,-7,-6],[8,-3,9],[-2,5,1],[3,2,-4],[5,-3,10]], dtype = "int64")#candidate|9466|(975, 3)|const|int64
call_9465 = relay.TupleGetItem(func_6569_call(relay.reshape(const_9466.astype('int64'), [13, 15, 15]), relay.reshape(const_9466.astype('int64'), [13, 15, 15]), ), 0)
call_9467 = relay.TupleGetItem(func_6573_call(relay.reshape(const_9466.astype('int64'), [13, 15, 15]), relay.reshape(const_9466.astype('int64'), [13, 15, 15]), ), 0)
output = relay.Tuple([uop_9443,call_9455,call_9465,const_9466,])
output2 = relay.Tuple([uop_9445,call_9456,call_9467,const_9466,])
func_9488 = relay.Function([], output)
mod['func_9488'] = func_9488
mod = relay.transform.InferType()(mod)
output = func_9488()
func_9489 = relay.Function([], output)
mutated_mod['func_9489'] = func_9489
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9428_call = mod.get_global_var('func_9428')
func_9429_call = mutated_mod.get_global_var('func_9429')
call_9532 = func_9428_call()
call_9533 = func_9428_call()
var_9537 = relay.var("var_9537", dtype = "float32", shape = (7, 2, 15))#candidate|9537|(7, 2, 15)|var|float32
bop_9538 = relay.bitwise_or(call_9532.astype('int64'), relay.reshape(var_9537.astype('int64'), relay.shape_of(call_9532))) # shape=(7, 2, 15)
bop_9541 = relay.bitwise_or(call_9533.astype('int64'), relay.reshape(var_9537.astype('int64'), relay.shape_of(call_9533))) # shape=(7, 2, 15)
func_8941_call = mod.get_global_var('func_8941')
func_8944_call = mutated_mod.get_global_var('func_8944')
var_9553 = relay.var("var_9553", dtype = "int32", shape = (48,))#candidate|9553|(48,)|var|int32
call_9552 = relay.TupleGetItem(func_8941_call(relay.reshape(var_9553.astype('int32'), [48,])), 5)
call_9554 = relay.TupleGetItem(func_8944_call(relay.reshape(var_9553.astype('int32'), [48,])), 5)
func_8824_call = mod.get_global_var('func_8824')
func_8826_call = mutated_mod.get_global_var('func_8826')
call_9561 = func_8824_call()
call_9562 = func_8824_call()
func_4704_call = mod.get_global_var('func_4704')
func_4706_call = mutated_mod.get_global_var('func_4706')
var_9569 = relay.var("var_9569", dtype = "float64", shape = (1650,))#candidate|9569|(1650,)|var|float64
call_9568 = relay.TupleGetItem(func_4704_call(relay.reshape(var_9569.astype('float64'), [15, 10, 11])), 1)
call_9570 = relay.TupleGetItem(func_4706_call(relay.reshape(var_9569.astype('float64'), [15, 10, 11])), 1)
func_6491_call = mod.get_global_var('func_6491')
func_6495_call = mutated_mod.get_global_var('func_6495')
const_9577 = relay.const(-2, dtype = "int8")#candidate|9577|()|const|int8
var_9578 = relay.var("var_9578", dtype = "int8", shape = (9,))#candidate|9578|(9,)|var|int8
call_9576 = relay.TupleGetItem(func_6491_call(relay.reshape(const_9577.astype('int8'), []), relay.reshape(var_9578.astype('int8'), [1, 9]), ), 2)
call_9579 = relay.TupleGetItem(func_6495_call(relay.reshape(const_9577.astype('int8'), []), relay.reshape(var_9578.astype('int8'), [1, 9]), ), 2)
bop_9593 = relay.logical_xor(call_9576.astype('uint64'), const_9577.astype('uint64')) # shape=(3, 156)
bop_9596 = relay.logical_xor(call_9579.astype('uint64'), const_9577.astype('uint64')) # shape=(3, 156)
func_5420_call = mod.get_global_var('func_5420')
func_5423_call = mutated_mod.get_global_var('func_5423')
const_9602 = relay.const([-6.385987,6.842525,-6.570708,-3.547176,-0.400108,2.883474,3.322445,-3.156235,-5.080854,4.578107,-3.670787,9.550516,4.550336,-2.375441,-4.000259,-2.785342,3.816803,-0.169665,4.981933,3.527798,-7.581116,8.795647,6.091923,8.095056,-1.602071,-6.025808,3.288092,8.639533,-3.623267,5.222176,3.666900,9.310854,8.089494,-8.628524,-1.852907,-8.273481,-6.063469,-8.800991,9.639388,-6.656659,8.690082,3.962990,-3.140231,8.545212,-6.430335,7.013325,-0.970241,2.239046,-5.305127,0.626187,6.062503,0.785126,1.395573,-8.495371,1.573594,1.530626,8.503485,6.736754,1.558684,7.242155,8.729742,7.987457,0.242048,9.555205,-7.091311,8.630740,-1.146964,-0.687670,-9.089510,7.215146,3.525350,-1.528484,0.381307,-7.151127,-7.055580,-0.474351,-4.424207,-5.054469,-2.908986,1.063196,-6.716887,2.727191,1.846176,-1.324821,-5.916117,0.978875,-7.338255,-2.551117,-7.076199,-9.559333,-0.171763,-7.529525,-7.851235,4.753915,7.749388,-4.226040,8.038378,-6.325213,4.276442,-3.426050,-0.045538,4.012095,-6.616624,-2.529423,-8.277046,4.895818,-2.720896,4.661863,-2.974399,7.730206,3.436244,1.619679,3.278736,5.260082,7.871051,-7.503430,8.213988,-6.745464,-4.846616,-7.839716,-6.631967,2.882383,-4.622860,8.303778,3.534195,-3.183405,-5.495979,6.576705,5.345142,-7.958060,0.610444,6.548971,-8.501138,-0.613368,-2.211795,8.707435,-4.805851,5.273219,6.641165,-6.809384,-8.569323,5.139895,-0.937192,-7.065988,8.268108,-1.898241,-1.975721,-1.925290,-5.207985,8.469650,7.169018,8.225383,6.762733,-3.314072,3.047083,-7.203788,9.297775,4.709406,-3.835577,-6.892158,-9.788468,-9.301576,-0.795444,-6.840680,7.223429,4.890787,-3.650608,8.530905,-9.216383,8.915442,-7.073241,7.006353,4.028282,5.670544,-1.532280,-2.144038,8.569684,6.084263,3.922509,-4.727189,0.060478,3.013426,-0.763895,-3.959505,2.212361,-5.744496,8.904899,0.542815,-8.421543,-5.965831,-5.802542,-4.035852,-2.421676,1.746497,8.795895,-8.116488,-8.159259,-9.407020,-8.752696,8.196938,-0.031776,1.096865,3.265169,0.869130,-3.189931,-5.977913,-5.801046,-6.924653,6.660051,-3.283706,4.472436,5.216802,-6.109854,-2.850120,-6.460966,-5.911196,8.275988,-7.405388,1.310536,3.503947,-1.645818,-5.758655,-6.286028,7.484536,0.322827,-5.136753,-9.961567,-9.901256,2.593881,-8.417317,-8.855756,7.182347,-6.255082,-8.863222,9.295045,3.694773,4.710691,-6.139900,-1.244412,4.695301,0.520882,-9.244296,-5.946895,-9.674572,2.043256,0.096340,-3.521892,-7.438339,4.582785,-0.486306,-4.857086,-1.399647,5.949274,2.855565,-0.536257,8.256387,-9.539366,0.098111,-2.178957,-1.144118,-6.146472,5.813542,-1.437019,-1.610717,-6.573353,-2.388868,-7.089714,9.253815,4.556208,-2.740532,4.115242,7.902338,8.815653,-4.228098,4.084989,-7.555117,7.010089,-4.195576,6.169996,4.654175,1.186824,-6.770654,-9.327170,4.400658,-5.814675,0.344265,-3.731056,8.838709,5.710455,3.799103,-8.141837,2.075516,-7.255629,-8.814686,-4.431749,7.011429,5.655225,9.048412,6.303865,-1.208773,-0.186521,-5.416155,-9.288475,8.548702,3.676988,-3.081758,-1.323119,9.797112,5.678179,-6.222397,7.394231,5.835436,3.118417,-5.236191,-5.220202,-0.534040,-5.132031,5.363017,-8.560974,1.980370,8.535843,1.240115,0.663476,-1.531142,-0.362776,-4.435655,2.219769,0.593108,-7.093887,6.161735,-4.485742,-1.663491,-4.013909,3.071537,-2.995037,0.924353,8.856270,6.731669,0.400947,0.389404,-4.198917,-7.820004,-2.266478,-9.423222,2.734988,9.909271,2.067534,3.736769,6.294193,-1.879734,6.601115,3.632123,-7.467805,5.477709,4.894625,-3.719417,-6.115258,0.401856,-2.038864,6.356115,4.979305,9.435101,-2.366543,1.230383,5.839840,4.911558,0.272273,9.471400,5.176676,9.941625,-8.934758,-3.275818,-8.508679,1.761844,4.750130,0.905862,0.953950,2.963309,5.403668,7.613711,-0.371304,0.706172,6.225086,-2.130102,5.413119,8.820586,3.287348,-9.138816,8.814823,-4.888245,-6.455306,-8.039834,-6.319217,-8.570166,-2.585558,-3.197258,-9.682578,-5.511886,7.442092,7.258758,-9.202092,-0.338980,-9.774880,-7.539497,-2.636096,8.084195,-7.333295,-3.342529,1.425215,-8.064033,-1.867851,6.655544,-0.072930,-0.949442,-7.737578,-7.476540,6.027630,-7.075028,1.692745,8.664404,8.579281,-1.574754,-2.063836,-7.925474,0.991789,6.450328,2.808788,3.785051,-3.551408,2.904225,1.369692,-6.818282,-3.112154,-7.090658,6.476090,9.063874,-8.156669,-1.752675,-0.200931,2.810791,9.486535,3.507153,2.025845,-6.747864,9.023251,-9.734193,0.472910,8.938235,7.051601,3.773771,4.822162,2.476874,-2.307067,3.139518,-2.429392,5.439723,3.653945,-6.256166,6.511188,0.833306,3.871357,2.415081,-1.111301,-0.625006,-0.913864,-0.931116,6.215049,-0.789507,2.374825,-4.722814,-5.044226,2.214653,5.006003,-4.228632,-0.644193,5.244992,0.272386,-2.696792,9.470444,1.319168,-1.551382,8.526899,6.841085,9.182192,0.954442,-9.476463,9.373248,-9.645918,1.910991,0.630533,-4.688602,7.068447,5.540859,6.556207,8.628618,5.136037,-9.254402,4.665711,-9.397857,-9.255154,-1.724353,7.918840,-2.173459,-0.491239,-8.981065,8.124622,-5.099977,-4.298625,-2.788878,-5.338193,-2.602513,2.491266,0.600838,-3.396805,0.696326,4.495490,3.086238,-8.676610,-7.869180,2.904400,-4.633790,6.090704,-6.550196,0.957791,8.510596,-8.794841,3.337854,-7.698751,-4.499670,-6.561574,6.190684,3.798715,-7.758121,-1.361183,6.810172,7.998223,-4.414660,-2.751822,-7.900784,3.117559,-8.403281,6.755403,2.991094,-4.966056,-3.996602,-5.930861,-3.919627,-9.953692,3.288129,-6.210515,-9.174409,-1.482134,-1.923817,8.855819,-8.355673,9.182497,-2.655263,-2.331159,-0.042972,2.425760,9.384065,8.913663,-4.294998,-4.926072,-5.109465,-1.509915,-8.948748,-6.520550,1.667349,9.015950,-0.456897,-1.356057,8.571493,1.308879,0.827001,-3.446713,-6.705250,2.782868,6.778607,-3.465555,-8.928021,9.851594,4.329273,0.193997,0.708294,6.287677,0.769659,4.109788,-0.716122,0.555389,8.452481,4.597552,4.659688,-4.308805,-6.469412,-3.022844,6.234321,-8.308239,5.289807,-2.421811,-1.371954,9.623247,5.515163,9.967010,2.433938,-3.378706,-4.227155,-9.273534,-6.869093,0.685101,1.661272,8.229953,1.865304,5.098216,6.332538,8.351602,1.740647,-9.875989,4.649208,0.740425,-7.031145,-3.406958,2.991275,-2.640727,1.071775,-9.912443,4.985823,-1.298828,4.411277,-8.686696,5.538109,8.171954,-7.208900,0.216443,9.197567,-8.084914,-7.931329,-6.599434,6.699769,9.817655,-1.919088,6.622958,2.626506,-1.741425,1.469904,-7.783906,6.866224,-1.161607,8.702927,6.560690,-6.913530,-1.014445,-7.955915,-1.899727,8.754015,9.470436,1.137298,3.515793,-9.848504,-9.688406,-7.038232,-2.442532,-0.240838,3.729407,-0.843950,-0.217912,-4.452873,-2.872578,6.856528,-2.868176,-7.421097,2.880057,-5.230088,6.026668,-2.681777,6.337500,-5.247485,-7.364345,-9.989868,-1.693288,9.033510,4.206431,8.412364,-8.852176,-2.647088,8.558601,-3.533922,-5.819873,5.598759,5.033952,1.844969,0.872411,-0.305982,-0.234794,0.955345,-6.631468,1.786944,0.391641,4.372806,-9.531602,-4.658367,-8.200582,-4.876269,-6.491314,-0.804821,2.743338,-9.849156,1.034159,7.194792,0.499050,-6.417420,8.733140,5.478363,-0.944984,-3.683951,-7.493890,-6.698575,-8.767826,2.263252,1.956741,-6.003485,-7.563329,6.791691,-7.144424,2.743266,5.789805,5.937982,-4.416179,4.389915,3.531888,5.428110,9.497388,-0.589186,-1.406804,-0.358126,-1.962622,-0.339221,7.272143,-7.578234,-6.629868,5.766397,-5.091935,-7.408530,0.221899,2.401199,-1.248129,-4.562339,0.284260,1.812324,-5.052884,4.306677,-0.552131,8.614085,7.772465,5.197048,-1.388780,7.044612,3.912742,0.059049,-3.563403,4.805885,5.512440,-4.258524,1.421001,-4.817182,4.205694,-8.565932,3.710867,8.935700,1.663346,2.809165,5.898995,-2.796400,-1.001067,3.042922,8.693693,1.956776,-7.786365,4.625107,2.340402,7.444588,0.939186,6.810126,-1.678943,8.367834,8.267070,0.252291,4.321282,-7.020689,0.225957,-5.866283,-6.727202,6.882196,8.776765,-5.295647,-9.131818,8.409997,4.421212,-6.834427,9.820820,-7.639030,-6.701292,0.086307,5.245994,-7.932946,3.830747,5.378483,-6.932328,-3.397864,3.417664,4.949715,7.479276,3.008527,5.699501,-5.212213,9.161768,0.416206,-8.239724,-8.414063,-5.749768,-7.217590,9.815455,-1.839095,-6.351284,-0.785520,7.890183,2.114109,-6.134221,-2.265092,-4.378644,5.049926,6.046294,-3.653141,4.937728,7.851392,8.305993,-3.725643,-7.474138,-3.337268,3.191802,-3.850977,-0.899255,1.894208,9.689605,-9.559239,-5.337405,0.079243,1.248983,1.639926,-5.129634,-5.792794,-8.802589,0.090865,6.750870,2.203687,-7.193131,-0.886064,5.669159,6.836113,1.481066,5.322905,6.373584,0.191578,-3.986034,-2.260669,3.498157,-3.726416,3.998017,-1.789482,7.232682,1.224399,-9.816483,3.023933,-6.435175,-5.939071,-5.594480,3.852448,-6.022130,-8.245243,-5.048239,-4.275980,-0.372130,3.255822,-2.850116,-9.874558,-1.503525,2.810411,3.761207,-7.356994,3.286904,2.051725,-4.714229,-5.967583,9.553613,5.758258,5.776022,-1.760899,-0.157265,1.996314,9.294814,9.642589,8.924447,-9.998054,0.191934,-2.543163,4.790743,-1.973673,6.271127,4.126835,-7.156542,-6.555553,-2.378711,6.262526,-5.696908,9.525853,-2.368709,8.422960,1.279302,2.836980,7.119667,5.577176,5.525808,-9.105580,-3.435564,-2.094873,5.858716,-5.826616,6.826586,-3.802492,-4.666695,6.691899,-2.399815,1.118722,0.108967,-1.073952,-3.230448,7.425388,-4.826894,-4.434445,3.449981,4.836137,6.021213,-8.670892,3.775771,0.824894,-5.882375,-0.482286,2.460665,-8.620363,-8.018874,2.771836,8.477079,7.588611,9.805420,-2.994174,-5.723423,0.888818,-8.821676,-9.617169,-9.798374], dtype = "float32")#candidate|9602|(960,)|const|float32
call_9601 = func_5420_call(relay.reshape(const_9602.astype('float32'), [16, 5, 12]))
call_9603 = func_5420_call(relay.reshape(const_9602.astype('float32'), [16, 5, 12]))
func_1762_call = mod.get_global_var('func_1762')
func_1768_call = mutated_mod.get_global_var('func_1768')
var_9646 = relay.var("var_9646", dtype = "uint8", shape = (588,))#candidate|9646|(588,)|var|uint8
const_9647 = relay.const([[-8.214392,6.745475,-8.357556,-1.818130,-3.247182,-1.256537,3.998180,5.119877,-0.071653,7.186769,6.326424,-5.275250,-2.446772,-9.930267,-1.193367,3.086574,1.647812,-3.898035,-4.305638,-7.902915,1.142288,-5.128157,-1.175639,-7.968801,3.521777,0.444224,0.317245,3.733620,4.215820,-3.789709,-8.614047,-6.344014,1.920384,6.303100,9.258225,-6.711732,-8.689282,8.811031,-3.771128,6.693041,-7.640450,-6.146926,9.221515,5.404221,0.423072,-9.254153,-9.530055,-3.107149,8.072005,6.878899,6.825427,9.856987,-4.590829,-2.274838,2.415343,-4.492741,-8.012734,8.863205,-2.232692,-2.610030,7.414700,6.250645,6.381095,6.443160,6.788977,0.491880,-0.283036,-7.004360,-2.150497,6.062207,4.539464,5.146712,-3.184953,2.382656,3.420298,5.837550,-3.713648,-8.810023,-8.215421,9.023780,-2.901620,-4.756392,9.913863,3.030395,6.029984,6.267450,3.551997,-1.586665,-1.511904,-8.632676,7.392143,-1.747845,1.782069,5.558651,-0.740710,1.013704,9.311494,8.201002,7.748609,-9.995288,8.667652,7.998170,-2.344883,-0.551119,9.934349,7.314409,-3.103505,-4.589188,-2.099382,6.103018,-9.705052,-4.813344,-4.913724,2.454631,-1.313563,-3.223483,1.658563,-6.793892,3.333669,-5.602922,-5.915255,5.511761,9.356532,-1.939593,6.597810,-3.259361,-2.757617,-3.028187,-1.755799,-1.471120,9.817719,-9.935779,-3.987286,5.733483,-4.348204],[-9.675136,5.065593,0.735046,-4.921927,-7.676282,-2.471546,7.038243,2.194673,2.966043,1.112302,3.721955,7.990225,-1.399144,-9.918393,4.227522,6.187825,8.552686,-1.281417,-6.593526,-5.081153,-1.230619,7.799922,-9.534982,9.965597,0.810065,3.780876,-0.728381,-9.617387,8.630318,-0.185376,5.488652,-5.113334,-3.372866,-2.818107,8.191784,3.600589,5.297827,-7.064217,-6.430363,7.466210,-0.696839,-7.582961,9.333794,8.573808,0.610797,-6.581764,-1.354941,-7.124327,9.126490,4.843419,9.644509,-6.772413,9.283017,-6.735180,2.402699,4.276294,5.458397,-8.249893,4.227952,9.533349,6.575013,4.228616,-7.784219,-9.165268,-7.337359,9.586575,-6.670359,-3.173698,-8.016425,4.468353,5.610733,0.882128,-0.778266,3.807834,-2.099364,2.448853,-2.099852,3.611705,-9.155914,-1.118047,0.709422,-6.422993,-6.886976,8.966109,-7.527669,-8.686062,-6.701347,-7.129826,3.523924,-5.410476,-0.303553,5.666286,-1.088574,4.919825,-4.724392,-5.575760,5.414893,2.194097,0.821799,-3.249456,-1.166166,8.145860,9.789987,1.241543,-8.983300,-3.655303,4.462027,1.272804,-4.758213,-4.583019,3.146274,-9.454780,-4.600129,-6.041426,-0.435264,0.731250,4.450667,8.937794,-1.705833,8.613404,-4.069687,3.679148,9.692574,-3.384165,2.343196,-7.987166,2.481156,-3.855797,-8.090831,9.206035,2.241113,7.336348,-7.370281,9.827045,-0.727334],[9.668450,-2.434002,-3.051311,9.991374,2.282069,-5.914578,5.348652,-8.599427,3.449810,-2.516625,-2.946993,1.274538,-9.826052,-4.085096,-8.952885,-7.432710,-6.413423,-7.065589,-9.637795,3.384752,-2.298545,3.436521,7.689167,5.041416,6.565310,3.549762,-6.889254,1.805907,-1.045340,-4.575639,-3.314119,-8.091887,-9.069251,-6.968394,9.975797,-5.895234,2.110380,0.353177,-7.819096,7.968871,2.081043,0.801080,0.450668,-4.354645,-0.158261,-0.784894,-0.132435,6.250398,4.269433,2.377723,2.258431,-3.961745,-9.228069,0.015866,8.182310,-3.998402,-8.244017,-5.304622,-1.514242,9.677612,9.316385,-8.921733,0.942857,-3.411104,6.537170,2.670055,-0.447775,4.526023,9.173112,4.231695,8.929875,1.423288,3.297621,4.628201,6.576660,-6.526649,-7.127561,-7.452419,9.841971,-4.316397,-5.346850,8.523227,9.730591,6.420193,-3.647840,7.948054,-5.464013,9.858858,-0.225203,-5.668270,0.160848,1.465590,3.595013,7.455204,-8.446351,0.144541,1.093367,7.364230,5.342733,-2.759113,1.306554,8.219744,-5.877780,2.795730,4.053137,-7.342848,1.318135,-2.806044,1.994261,3.166307,7.694323,0.140357,8.382767,5.306250,2.728791,-5.555988,-6.394162,9.986616,-6.513688,4.329997,-9.893469,7.434983,3.914010,-9.581050,7.344617,6.067841,-9.090180,-5.869746,9.752275,-7.725436,3.938400,-9.693167,-4.169412,-5.141633,-8.640040]], dtype = "float32")#candidate|9647|(3, 135)|const|float32
call_9645 = relay.TupleGetItem(func_1762_call(relay.reshape(var_9646.astype('uint8'), [6, 14, 7]), relay.reshape(var_9646.astype('uint8'), [6, 14, 7]), relay.reshape(var_9646.astype('uint8'), [6, 14, 7]), relay.reshape(const_9647.astype('float32'), [405,]), relay.reshape(call_9552.astype('int32'), [48,]), ), 1)
call_9648 = relay.TupleGetItem(func_1768_call(relay.reshape(var_9646.astype('uint8'), [6, 14, 7]), relay.reshape(var_9646.astype('uint8'), [6, 14, 7]), relay.reshape(var_9646.astype('uint8'), [6, 14, 7]), relay.reshape(const_9647.astype('float32'), [405,]), relay.reshape(call_9552.astype('int32'), [48,]), ), 1)
uop_9656 = relay.atanh(call_9576.astype('float64')) # shape=(3, 156)
uop_9658 = relay.atanh(call_9579.astype('float64')) # shape=(3, 156)
bop_9670 = relay.mod(uop_9656.astype('float32'), relay.reshape(bop_9593.astype('float32'), relay.shape_of(uop_9656))) # shape=(3, 156)
bop_9673 = relay.mod(uop_9658.astype('float32'), relay.reshape(bop_9596.astype('float32'), relay.shape_of(uop_9658))) # shape=(3, 156)
bop_9674 = relay.right_shift(uop_9656.astype('int8'), relay.reshape(call_9576.astype('int8'), relay.shape_of(uop_9656))) # shape=(3, 156)
bop_9677 = relay.right_shift(uop_9658.astype('int8'), relay.reshape(call_9579.astype('int8'), relay.shape_of(uop_9658))) # shape=(3, 156)
output = relay.Tuple([bop_9538,call_9552,var_9553,call_9561,call_9568,var_9569,var_9578,call_9601,const_9602,call_9645,var_9646,const_9647,bop_9670,bop_9674,])
output2 = relay.Tuple([bop_9541,call_9554,var_9553,call_9562,call_9570,var_9569,var_9578,call_9603,const_9602,call_9648,var_9646,const_9647,bop_9673,bop_9677,])
func_9710 = relay.Function([var_9537,var_9553,var_9569,var_9578,var_9646,], output)
mod['func_9710'] = func_9710
mod = relay.transform.InferType()(mod)
var_9711 = relay.var("var_9711", dtype = "float32", shape = (7, 2, 15))#candidate|9711|(7, 2, 15)|var|float32
var_9712 = relay.var("var_9712", dtype = "int32", shape = (48,))#candidate|9712|(48,)|var|int32
var_9713 = relay.var("var_9713", dtype = "float64", shape = (1650,))#candidate|9713|(1650,)|var|float64
var_9714 = relay.var("var_9714", dtype = "int8", shape = (9,))#candidate|9714|(9,)|var|int8
var_9715 = relay.var("var_9715", dtype = "uint8", shape = (588,))#candidate|9715|(588,)|var|uint8
output = func_9710(var_9711,var_9712,var_9713,var_9714,var_9715,)
func_9716 = relay.Function([var_9711,var_9712,var_9713,var_9714,var_9715,], output)
mutated_mod['func_9716'] = func_9716
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8222_call = mod.get_global_var('func_8222')
func_8224_call = mutated_mod.get_global_var('func_8224')
call_9798 = relay.TupleGetItem(func_8222_call(), 0)
call_9799 = relay.TupleGetItem(func_8224_call(), 0)
func_8359_call = mod.get_global_var('func_8359')
func_8362_call = mutated_mod.get_global_var('func_8362')
var_9817 = relay.var("var_9817", dtype = "float32", shape = (40, 26))#candidate|9817|(40, 26)|var|float32
call_9816 = relay.TupleGetItem(func_8359_call(relay.reshape(var_9817.astype('float32'), [1, 1040])), 1)
call_9818 = relay.TupleGetItem(func_8362_call(relay.reshape(var_9817.astype('float32'), [1, 1040])), 1)
func_9384_call = mod.get_global_var('func_9384')
func_9389_call = mutated_mod.get_global_var('func_9389')
const_9820 = relay.const([-6,-3,-5,10,-4,10,3,10,-7,-6,-3,-1,8,-4,-1,-10,-2,-10,7,-4,2,-7,-4,-3,-9,-6,-5,-9,-10,-7,8,8,10,4,-9,-8,-2,10,-2,-9,-3,7,-3,3,1,-4,7,8,-1,5,-3,-5,-10,3,7,6,8,-7,10,-4,-2,-2,10,8,-4,-3,8,4,-10,-1,-10,8,8,8,-7,-1,-1,-8,4,-4,1,-5,-5,6,-7,-4,-3,6,-8,-1,7,4,6,-8,-9,7,10,-8,3,10,-2,1,-7,-7,3,1,-10,5,6,6,-6,5,7,10,-9,1,7,7,9,8,-3,-2,-4,9,-2,7,-10,-3,8,-6,-6,-10,-9,6,10,1,-4,6,-10,10,-4,10,-1,-10,8,6,4,-8,3,-10,9,8,-4,3,-1,-4,2,-10,6,-10,5,10,-1,2,-2,7,-4,5,9,-2,3,-9,9,-7,-7,-3,4,4,10,9,8,3,1,2,8,-4,9,7,1,6,3,-2,1,-2,10,4,7,2,9,-2,7,9,7,3,-2,-6,8,-1,4,1,7,3,-7,4,8,-5,1,-10,-2,6,4,10,-2,3,6,-9,3,7,-7,-6,-6,-2,4,5,7,-9,-5,-2,-10,4,-9,9,7,2,6,10,8,8,4,-8,-7,1,-8,1,-8,-5,8,-10,7,-8,1,-4,-10,1,-6,-4,-9,-4,-9,-6,10,5,5,-2,1,-7,9,-1,6,2,2,6,2,8,-5,-6,8,-4,1,7,-7,2,6,5,-7,3,-5,-1,-8,-6,-5,-9,-6,-6,-10,-8,-7,-3,6,-4,-4,-2,-3,6,4,-6,4,2,8,-8,-2,3,9,-4,-5,7,3,-10,2,10,6,5,-1,2,8,6,-8,-1,9,3,-4,-3,2,5,-7,-2,-1,5,-5,-1,-8,-6,10,-5,-3,-10,1,-3,-7,10,3,7,8,-8,-10,9,6,6,3,4,10,-4,-7,5,-7,-6,-5,-4,8,10,-1,-5,6,-4,3,-6,1,-3,9,10,2,-6,-2,4,2,-7,-4,-3,-6,-9,4,3,5,4,3,-10,4,4,6,-8,-3,-3,-1,-7,-3,7,2,-5,-5,1,-6,5,-4,-8,8,-1,2,7,-10,2,1,-5,7,-9,10,10,-2,-10,5,-9,5,-1,-1,2,-3,7,4,-6,-3,-3,5,-2,10,5,9,6,1,-3,-6,-6,-9,-10,6,-4,-10,-1,-2,-4,-5,8,1,10,-1,-4,9,-5,-2,3,-10,-6,-6,7,-4,-2,8,-2,4,-10,-6,4,-4,-8,-4,6,-10,6,3,-7,2,5,9,-2,-9,2,7,-3,-4,9,3,-2,2,-10,1,4,-5,7,6,1,-2,-3,8,1,-8,-10,10,4,1,-6,9,8,-9,-10,-2,10,-3,-2,10,10,6,9,-1,-7,-6,5,-5,9,-7,6,-9,3,1,2,-1,-1,2,10,-4,-8,-9,4,-5,7,2,-1,-2,-5,-10,-6,9,7,-7,7,-3,10,9,8,-6,5,-8,3,1,-3,-6,3,6,1,6,-5,-4,-4,8,6,-7,-6,-7,5,8,2,-8,-3,4,6,-1,-2,-5,-7,-8,-8,2,-10,-4,1,-4,10,-8,4,5,4,2,-1,10,-9,1,-3,-3,3,7,-3,-5,-1,-6,-4,7,-6,-4,4,-7,4,2,10,-10,7,7,6,-5,-6,4,-1,-10,9,-6,-9,8,10,3,-9,2,-10,-8,-2,5,-3,10,9,-10,3,1,-10,7,1,9,3,-8,2,-1,-10,-4,5,-4,3,5,4,10,-7,4,-9,1,-8,-6,6,7,-2,-6,7,3,8,6,6,-5,-2,-4,-4,2,-4,4,-6,6,4,-6,4,10,9,-3,1,1,-7,-4,-8,4,-5,-3,-9,-8,1,-7,5,-6,-3,-1,-6,-10,7,-3,10,-8,6,-7,-10,-10,-1,5,-4,2,1,4,8,-2,7,10,3,-6,1,3,-8,-2,2,7,-10,5,-4,1,-4,7,-8,-3,-6,9,-10,-9,-7,-9,8,-7,7,-2,-5,-3,7,2,-6,6,2,9,8,-2,9,-4,-9,9,-4,-5,7,-8,7,-10,5,-4,1,-10,-3,6,6,-3,2,9,5,5,-3,4,6,-2,2,-9,1,-4,6,8,-9,-6,-3,8,-10,-7,9,2,7,-6,2,-2,7,-9,5,4,10,-8,7,-10,1,8,3,3,4,9,-7,8,8,-6,7,-10,1,10,3,3,-9,4,-2,2,-8,-3,3,-8,9,5,-5,-2,2,-2,-2,-9,-7,5,-1,7,-1,6,-2,-6,-2,8,7,-4,2,3,3,6,-6,1,-9,9,-1,-5,-3,5,-1,3,-2,6,4,-7,1,9,6,5,10,-7,-2,3,3,-1,2,-2,-2,10,6,-3,3,-4,-1,6,6,-2,8,-4,-5,5,8,4,6,5,1,10,-1,-5,-5,6,6,10,5,-3,8,10,5,-7,7,-4,-2,-4,-1,7,-10,7,-9,10,-8,4,2,3,5,-10,-4,1,-1,8,4,7,-6,-1,-1,1,-7,7,-9,1,-10,8,-7,9,6,9,-5,-3,1,8,-9,3,-3,7,3,-8,9,7,5,-4,-5,10,-7,3,-10,-2,-9,5,5,6,8,-1,7,2,7,-4,7,4,-8,-4,7,7,10,10,2,5,9,6,5,-2,2,-5,-10,4,6,-8,3,1,-5,-1,8,-6,2,-6,10,9,4,2,3,-3,6,-3,7,2,-6,7,-9,-2,-7,-7,-6,2,2,-5,-1,-5,-2,-6,2,-8,-3,2,-2,-2,-3,-9,-9,9,6,-8,4,4,4,4,-7,4,-1,-3,-3,3,6,-4,-2,6,-7,-5,-8,9,-8,-7,9,-7,10,-3,-5,-8,8,-5,5,8,-8,6,-1,-7,10,-4,-7,-9,-2,-1,-1,-7,-3,9,8,3,-8,9,6,8,1,-6,4,-5,-10,-1,-7,7,-5,-9,2,8,-1,-1,4,-2,1,1,-3,-10,-7,1,-3,4,-5,-2,5,10,6,10,9,3,9,-5,-4,-3,-8,-5,-5,1,-3,8,3,-3,-9,7,6,8,-5,8,-8,10,-7,10,-5,-1,-4,-6,9,5,4,-6,1,-8,6,8,8,3,3,7,-4,6,-9,4,4,6,1,-10,5,-1,-3,7,8,-7,3,1,-4,5,1,-3,-1,3,-10,-6,-9,8,-7,3,6,8,-4,7,6,-3,-5,2,-5,10,7,2,3,10,-8,-5,3,-4,-2,6,6,7,-4,-7,-5,6,-3,2,10,-7,-6,-3,-8,5,9,-10,-1,-4,7,5,10,-5,-10,2,8,-8,-4,3,-7,3,-2,-9,-1,9,8,-9,-7,-3,1,9,-5,-6,-8,-2,-9,-1,10,-5,6,-9,10,-3,10,6,-1,3,-1,-6,7,-6,-3,-9,-10,5,10,10,-10,7,-1,5,7,10,6,9,-4,-2,-3,-1,5,6,-10,5,1,1,-6,-6,4,-3,9,-6,6,-1,8,9,-8,9,3,-7,8,6,6,-9,7,-3,-1,-1,-6,5,4,7,8,9,10,6,8,3,6,-6,-3,9,-9,-2,-3,-9,8,-9,10,10,6,7,1,-7,2,-10,-4,1,-1,8,-8,1,3,-6,9,-2,-3,-8,2,1,-1,-1,2,-8,-4,7,3,10,9,8,2,-3,-10,-1,-8,-8,-5,-4,10,-10,-8,6,6,-5,4,2,-3,2,6,8,10,-3,-5,-4,10,-9,4,10,-5,-4,8,4,-1,-9,-4,8,-4,-10,9,6,-1,-6,2,4,10,-4,-4,-2,-9,-9,-9,-6,10,-4,10,-8,4,-6,9,2,6,10,6,-4,-4,-5,-1,-7,-7,-10,10,-9,-2,-9,-3,-4,6,-10,7,-7,-6,-5,-7,8,3,2,5,-8,-6,-2,9,-9,-10,-9,-2,8,-3,5,-5,-4,10,-4,7,6,10,-6,3,-3,-6,-2,1,6,-4,3,-3,-10,3,10,7,-7,3,5,7,-1,-10,-1,4,6,8,7,-6,-6,10,-1,1,3,1,2,-6,3,7,-9,-1,8,6,-5,-2,-3,7,1,-4,-2,2,3,8,-6,-7,-5,-1,2,-8,-10,-5,5,9,-10,10,-5,7,-4,3,-7,4,1,-4,-5,-9,1,9,8,1,10,1,8,3,-10,-2,9,10,3,4,-6,-2,8,4,9,5,9,-5,1,-8,6,-1,-8,-4,7,-9,-10,-10,6,4,1,5,5,-8,-9,1,-6,8,-5,7,10,-3,-8,-9,-8,10,-4,9,6,-8,-2,10,-1,-6,-3,-6,-8,3,3,10,7,-1,6,10,5,-9,-7,9,-1,4,-5,-7,1,-8,-2,-8,-10,-9,6,10,-9,10,-2,-6,3,9,4,10,-7,-2,9,-7,-6,7,10,-5,10,7,-4,7], dtype = "int32")#candidate|9820|(1680,)|const|int32
var_9821 = relay.var("var_9821", dtype = "float32", shape = (405,))#candidate|9821|(405,)|var|float32
const_9822 = relay.const([1,4,6,-7,3,-3,-4,2,10,3,1,-4,-2,2,4,-2,5,-4,-1,3,7,-4,-8,5,2,-10,5,-9,2,2,-3,2,2,6,-7,9,8,-4,-8,4,8,-4,-5,-9,8,-2,8,8,10,-5,-4,-10,6,9,-5,-5,-7,6,-3,1,-8,2,-9,-8,-4,-5,-7,-3,10,-8,-4,-8,1,-5,10,-8,8,-6,2,-7,9,9,6,-9,-3,-1,-8,-8,-2,-7,-10,3,-7,-7,5,9,4,9,9,6,3,-9,-6,-1,-3,-3,5,10,-4,-3,9,-2,2,-2,-9,5,8,4,2,-4,-6,-7,-2,-3,2,-5,1,-3,-1,6,-5,-2,4,9,-3,-2,-10,10,-5,-8,10,-7,5,4,5,5,-8,5,5,9,-6,9,-9,10,3,-3,3,5,-10,-3,-8,6,-7,1,4,-2,-2,-8,1,7,6,-10,-9,-9,6,3,10,4,-2,-1,-5,-1,-3,10,-9,-1,-6,-5,6,4,-6,7,-8,-5,-6,-1,9,-9,-2,-10,5,-5,-2,6,6,1,-8,-10,-1,-9,3,-9,-3,-7,-9,-6,-8,-7,-3,8,4,-1,-2,-9,10,-10,-9,5,9,-8,9,-5,5,7,5,-7,-9,-9,1,-1,-5,4,-4,-5,5,3,7,10,8,-4,-5,1,-1,-2,-8,5,-8,9,-10,-4,10,-8,3,-1,-7,5,-5,-7,-9,-9,4,4,3,-1,-8,9,-2,4,-6,10,1,-9,-6,-3,5,-3,5,10], dtype = "int64")#candidate|9822|(288,)|const|int64
const_9823 = relay.const([-2,-10,6,9,9,9,1,7,-6,-6,7,2,2,-9,7,5,-8,2,7,6,-7,7,6,-7,6,-1,7,-5,3,1,-4,9,3,6,1,6,-8,5,9,-6,9,10,-3,5,8,5,-4,4], dtype = "int32")#candidate|9823|(48,)|const|int32
call_9819 = relay.TupleGetItem(func_9384_call(relay.reshape(const_9820.astype('int32'), [1680,]), relay.reshape(var_9821.astype('float32'), [1, 405]), relay.reshape(const_9822.astype('int64'), [288,]), relay.reshape(const_9823.astype('int32'), [48,]), ), 2)
call_9824 = relay.TupleGetItem(func_9389_call(relay.reshape(const_9820.astype('int32'), [1680,]), relay.reshape(var_9821.astype('float32'), [1, 405]), relay.reshape(const_9822.astype('int64'), [288,]), relay.reshape(const_9823.astype('int32'), [48,]), ), 2)
output = relay.Tuple([call_9798,call_9816,var_9817,call_9819,const_9820,var_9821,const_9822,const_9823,])
output2 = relay.Tuple([call_9799,call_9818,var_9817,call_9824,const_9820,var_9821,const_9822,const_9823,])
func_9825 = relay.Function([var_9817,var_9821,], output)
mod['func_9825'] = func_9825
mod = relay.transform.InferType()(mod)
mutated_mod['func_9825'] = func_9825
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9825_call = mutated_mod.get_global_var('func_9825')
var_9827 = relay.var("var_9827", dtype = "float32", shape = (40, 26))#candidate|9827|(40, 26)|var|float32
var_9828 = relay.var("var_9828", dtype = "float32", shape = (405,))#candidate|9828|(405,)|var|float32
call_9826 = func_9825_call(var_9827,var_9828,)
output = call_9826
func_9829 = relay.Function([var_9827,var_9828,], output)
mutated_mod['func_9829'] = func_9829
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8824_call = mod.get_global_var('func_8824')
func_8826_call = mutated_mod.get_global_var('func_8826')
call_9831 = func_8824_call()
call_9832 = func_8824_call()
output = relay.Tuple([call_9831,])
output2 = relay.Tuple([call_9832,])
func_9833 = relay.Function([], output)
mod['func_9833'] = func_9833
mod = relay.transform.InferType()(mod)
output = func_9833()
func_9834 = relay.Function([], output)
mutated_mod['func_9834'] = func_9834
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7238_call = mod.get_global_var('func_7238')
func_7240_call = mutated_mod.get_global_var('func_7240')
call_9859 = relay.TupleGetItem(func_7238_call(), 0)
call_9860 = relay.TupleGetItem(func_7240_call(), 0)
func_8291_call = mod.get_global_var('func_8291')
func_8292_call = mutated_mod.get_global_var('func_8292')
call_9862 = func_8291_call()
call_9863 = func_8291_call()
func_5702_call = mod.get_global_var('func_5702')
func_5705_call = mutated_mod.get_global_var('func_5705')
const_9867 = relay.const([-1.260815,-5.410803,3.032617,-6.595741,8.083707,9.226923,6.246727,2.366690,1.735862,7.147090,0.344111,9.327456,-4.885948,-4.838207,6.433368,6.459058,1.929082,6.676349,-5.020806,-2.400474,2.475739,-8.949276,-8.078520,8.856721,1.198052,3.482443,1.691992,-2.822038,-9.411918,9.050494,8.547581,2.927858,-3.617091,-8.072308,-4.471694,-3.307141,-1.045774,-9.177715,1.049465,6.990405,-9.233262,7.823716,2.991716,-9.603721,-2.380268,6.779909,-5.518263,-5.324797,5.995782,5.299589,6.226164,3.002126,-8.183530,8.594572,4.935033,-2.844678,0.225855,1.371085,-6.246633,-0.648221,4.322750,-5.093884,-3.597117,4.228423,9.748635,6.551401,-0.266964,3.953852,4.322543,-9.835879,5.915172,-4.439123,-2.812351,2.175145,7.432919,-9.982327,-4.203888,-3.022429,0.791093,-8.359496,-0.650549,-0.975940,9.457985,0.853956,-6.573573,6.970627,8.662303,-8.109865,-5.850991,-8.364663,6.436036,-6.980472,5.684791,-4.065791,-3.639642,-1.464711,-9.479540,-3.948394,-6.837967,-5.109588,1.061077,-2.556258,-2.417198,7.102033,-0.492282,-7.857281,-6.639261,0.135727,-5.702121,-7.089936,2.610987,2.632612,4.460789,0.638910,-9.728960,-8.227502,4.979993,-1.961177,3.811746,-9.091746,6.194112,0.100554,-4.888558,2.312632,-4.502754,7.426140,-5.783585,-1.680964,-0.821794,4.229502,5.267773,3.007425,-6.495585,-6.073144,1.943599,-3.069799,-7.774029,-1.642036,-9.103624,2.181322,2.559948,-3.401285,6.966961,-6.863871,-4.114244,-8.201556,7.287927,4.248491,2.087809,-9.678327,-4.197351,4.678881,-7.423803,2.122073,-9.462709,-5.327963,-9.229775,6.616960,3.547066,5.649351,-1.787956,2.338454,1.644195,2.350151,5.517640,6.586416,-3.638567,-3.028117,-2.663323,-1.594816,-7.384170,1.886414,3.088182,-3.891989,-4.305332,8.787585,-6.683443,-2.534448,4.671087,-5.159916,0.522457,-0.457930,0.142414,1.946394,0.988725,-1.115131,-2.357991,-2.314553,-0.832749,-1.694471,-8.405449,6.597735,-6.146248,6.274156,-9.160164,-1.618314,0.954036,3.153562,7.352565,5.805344,-9.873485,-9.312697,0.422137,9.727513,-7.271480,-2.524428,1.088152,9.761179,7.230641,9.092224,-7.269111,-6.823259,-3.784743,-1.860775,-8.953657,-7.693078,7.987127,5.721528,2.959692,1.716464,-2.841611,2.379607,0.673647,8.772809,5.682318,-3.321005,7.770868,1.566919,7.702349,0.130845,3.126150,-8.174151,8.225836,4.652845,-4.228957,-6.869648,-4.963033,-7.242878,-9.168756,7.382552,-1.546615,1.052048,-2.889707,-3.680275,0.589646,6.264779,2.885267,1.468721,6.293858,-6.372156,7.148059,-2.516775,-4.668566,-7.058960,-2.469983,-2.891439,9.490742,-1.085702,-7.551405,4.380394,8.103366,5.315269,2.901121,1.391809,2.167297,-7.451255,-3.507695,5.482768,-1.149415,3.177792,2.639643,1.605624,4.507942,-7.491992,-3.732412,6.292049,-3.934664,9.701725,-2.904185,-2.321151,-5.147965,-4.915143,6.655319,4.463472,3.730251,-8.886279,-6.653269,-5.947890,-1.093075,3.686446,-1.626751,-0.517363,8.717459,-0.172600,-6.051677,-6.232609,-9.608380,6.501599,-8.254089,9.946432,2.459882,-5.834427,1.954649,2.175443,0.751091,4.335736,-1.894380,-2.106526,2.647592,1.134783,4.273157,-2.409327,-6.942031,5.038192,-9.096955,4.383920,-4.116171,5.278976,-6.362147,0.792423,1.241354,7.002057,-4.649154,-2.468989,8.724623,6.330508,7.090890,-8.258158,7.059456,-6.827749,-1.669428,2.799813,2.002424,-0.986742,-7.085588,1.575855,-1.093988,9.094489,-3.270652,-2.692139,9.853675,-6.613742,8.134045,-3.387393,-6.949553,-3.744206,-0.482322,9.834740,-7.880315,0.720382,-1.891421,2.032229,-0.622871,3.281188,-8.208188,-8.663342,-8.843125,-1.789393,3.871922,-2.663757,9.485326,-7.431785,3.511145,2.572601,5.403773,-0.333018,7.443229,6.691469,-4.362004,-7.205490,-2.179356,-0.415803,4.531032,3.109489,6.745192,-7.046061,-1.115738,9.008593,-1.332221,-6.262664,5.951505,7.229650,-3.088216,-5.235718,-1.311077,9.871955,0.641118,4.889287,-9.703354,0.385411,-8.512626,-5.011786,-3.056206,-3.123867,-8.920034,6.560964,6.091180,-6.663702,0.072543,-8.786144,2.203104,-3.967663,8.557231,7.933249,-5.059251,-0.212863,-0.318953,-7.526090,-6.609799,9.491541,3.810755,-2.830936,-9.473502,-5.453985,-1.594089,7.354871,-1.135189,-8.512118,6.043198,2.989531,0.384203,-3.700866,-1.348517,-4.492650,-2.385123,6.871306,-1.096214,-4.957363,-8.903163,-3.049096,-8.318204,-2.661425,-9.747569,-4.584423,-0.471718,8.626865,5.691535,7.673589,-8.776079,-6.212264,9.678263,-9.344366,-8.735229,-9.689425,5.297364,4.325665,-7.692890,-2.218785,-3.816066,-2.650984,-0.333035,-1.160171,-6.818440,8.236364,-6.584066,9.633789,9.424891,8.565303,-6.207065,-5.109639,2.214989,0.722751,0.413851,-9.325439,0.349376,-1.918005,-1.923221,2.912679,-9.101854,-7.893516,1.810213,1.148468,1.281940,-6.452871,-5.209202,-9.112652,-3.965782,-4.153507,6.612298,8.357788,9.883222,2.944888,3.037722,-7.197481,7.908387,-3.247445,-6.714862,-7.327826,-7.535185,-2.024256,1.498184,-9.995266,-1.093194,-7.059431,6.570030,-9.354346,1.835958,4.387911,2.868684,3.654280,-4.634108,4.649834,7.391282,-9.739996,-5.004052,-4.697379,6.411514,8.412412,4.684717,-1.560404,1.009434,-9.890728,-9.391253,1.729860,9.476406,-8.799772,-1.097459,6.907657,5.521282,-1.486783,-2.350496,-6.259036,6.610944,9.198016,0.081373,-8.151269,3.516910,6.034707,-0.468474,8.923256,9.074808,8.746594,1.104223,1.276475,-4.966241,-5.266897,9.801602,1.450038,-7.724274,2.433355,-9.802596,-9.146284,-0.737899,7.269447,3.707499,9.317531,-3.501973,-7.740938,9.008242,5.570911,7.856990,-4.300173,-5.509676,-8.410515,-6.472570,-3.624706,6.188799,-2.217700,-5.948238,-9.408589,-2.401928,9.575865,-9.483816,-7.365995,4.395930,1.828072,3.792186,8.636120,6.164349,-3.914525,-8.368973,-4.934897,-0.314840,0.508085,-1.324603,-6.392993,7.327860,-8.116453,1.749257,5.958456,-4.095305,-7.152689,-5.062895,1.948991,5.702884,-6.607866,-2.076615,8.421939,6.624223,3.289785,-1.470185,4.833185,2.140922,8.673209,-7.145690,-6.143041,5.973405,7.255905,-4.418859,-0.588465,-9.159899,5.998958,1.569594,5.799123,-9.207056,5.620159,-2.163674,-6.878562,-7.616650,2.644201,5.819173,4.687279,-5.737273,-6.332228,5.005831,-0.945666,1.090186,-1.919415,-8.285996,-8.634557,-5.252242,7.512122,-4.623702,6.297821,9.993410,1.551643,-2.887630,5.143531,6.561979,2.216923,-6.963685,4.384756,-2.145904,2.587869,6.064032,6.558333,8.465178,5.361725,-0.626574,-2.998152,3.498820,-9.353482,-1.364934,-8.339744,-1.591543,-6.802919,2.228892,-8.814800,5.849608,-1.821592,6.037400,-3.167783,-8.598752,-2.244284,-2.625634,-2.866607,5.720943,8.148571,-1.116525,6.817421,-5.405563,-8.751167,3.260626,3.629711,-6.832294,-9.038597,0.220066,-5.930943,-1.589680,-9.803912,3.270258,-2.121298,-9.890801,-9.137858,6.076095,7.498642,6.358902,1.343607,-8.192481,9.112225,-9.457645,7.184777,-0.208797,7.375110,-5.165920,-7.289084,-2.317517,-5.851150,-8.422924,2.994794,5.475367,6.679020,-6.517360,1.901412,6.964793,6.839208,-6.736878,4.468669,-9.815326,0.857898,5.121778,-6.301471,-8.412591,-2.082082,9.722298,-8.048714,-5.608450,3.910806,-6.736125,3.933501,7.661214,7.950533,3.411864,0.992338,9.230908,4.396974,-7.063242,-8.175367,-0.823091,9.323272,7.438251,-7.513181,-7.266532,-0.123414,4.831277,-8.884425,3.271329,-9.298619,6.218163,-0.716706,7.357965,9.192257,-5.468087,-8.099938,-7.902894,-3.102709,-2.719599,5.781830,4.529472,1.120748,6.647878,8.817501,-6.843983,-2.623477,5.363745,-0.413994,-6.601749,-0.259409,-7.259703,4.165618,4.086426,-4.834738,2.459322,-8.443139,8.628406,0.587712,6.922987,0.717609,-4.481244,5.353873,0.436008,-8.840560,0.386838,-9.729683,-5.649254,-0.602988,7.294272,7.469821,-5.085687,5.392646,4.410741,5.205370,-1.264091,-7.746838,-6.357075,-7.493576,-4.712750,4.176226,-0.298173,9.365831,9.187978,-8.141401,-2.345378,4.907736,2.854993,-9.998059,5.208824,1.730520,3.419703,7.755773,-4.372792,5.464291,-8.976853,-1.159810,-1.745297,0.043524,-5.101232,-7.254975,0.074727,7.409951,6.572961,-0.464162,4.755748,-1.474317,2.106201,-9.037263,5.722227,-9.754690,-3.404008,-8.102752,-4.351546,5.293894,1.162196,9.890682,2.596646,7.042382,3.962063,-5.370617,-1.851109,8.734312,-6.216125,4.970416,8.769999,2.851024,-9.163340,-3.731961,-5.349758,9.505240,0.278426,-4.264753,-5.893019,1.594842,3.439741,-8.020574,-9.256929,-3.160434,-1.660406,9.487128,4.134896,6.189181,-5.338823,3.383470,4.609812,4.868518,2.738618,-5.035772,2.439033,8.164115,1.007676,-0.686947,3.159867,-6.553111,-0.732939,1.120731,-7.932471,-6.487784,-6.897774,4.702408,-9.334535,4.412316,1.290934,8.796499,9.191835,9.028732,4.645717,3.528900,-8.922508,-4.073203,8.432369,6.952578,-6.742092,-0.613336,3.902390,5.587684,-9.180820,1.828209,-3.886174,4.225326,-9.544092,-9.394978,-1.293489,-2.632143,9.006678,-6.934307,7.546081,-4.187667,3.593630,-2.647117,4.743079,-9.718295,-4.675024,4.852932,5.546256,4.055912,6.137911,8.043910,2.007363,5.932983,-5.349828,6.139530,1.324124,1.416849,-3.088896,4.744192,3.974674,-6.516540,8.741335,-4.094619,-7.709846,-9.567144,1.738913,0.077563,-7.072907,5.610836,-1.674967,-7.196048,0.816989,-5.145684,5.583481,4.672117,-3.197000,9.283120,6.842217,-6.440657,1.174311,5.554130,-6.339641,9.904663,3.036347,2.504474,9.041759,4.383439,2.760826,-0.237004,9.407633,-4.406737,7.156749,-9.634598,5.760434,-1.111648,0.680429,-0.428162,8.711223,-7.006388,-3.721218,-3.868119,7.914497,-1.326012,-8.944547,-4.040340,-3.699287,2.722376,-0.992211,-2.837162,-0.265624,-5.386387,4.208797,4.645770,-3.464013,1.107826,2.202570,-4.648875,-9.147167,9.916735,6.685428,-1.302942,-1.792553,-8.960900,8.389207,4.739184,2.256593,-7.512291,-2.654212,3.816454,9.856909,3.914081,7.336128,-9.565095,3.038312,-7.339918,9.325854,-6.980062,-0.306309,-0.411385,-3.425313,2.872950,0.921640,-5.953768,6.528483,-6.385739,-9.722680,7.461864,9.804826,1.699353,4.647974,7.331717,8.372331,7.323396,-9.900172,2.989119,0.068767,0.197169,-8.224590,-3.703290,6.641305,9.009695,-5.310864,1.587988,-2.921670,-4.534143,-6.946741,-3.058961,-4.520237,5.620008,3.089197,3.537860,3.726294,9.303748,-0.448502,5.183209,-4.279174,9.748758,0.521735,-6.978216,-6.573437,-1.695710,-2.644900,-7.795686,-0.962462,-0.498070,-3.579778,-5.675233,-0.943855,-2.795237,5.867054,-5.327747,-3.233430,-2.179418,6.292259,8.048027], dtype = "float32")#candidate|9867|(1040,)|const|float32
call_9866 = relay.TupleGetItem(func_5702_call(relay.reshape(const_9867.astype('float32'), [16, 5, 13]), relay.reshape(const_9867.astype('float32'), [16, 5, 13]), ), 0)
call_9868 = relay.TupleGetItem(func_5705_call(relay.reshape(const_9867.astype('float32'), [16, 5, 13]), relay.reshape(const_9867.astype('float32'), [16, 5, 13]), ), 0)
output = relay.Tuple([call_9859,call_9862,call_9866,const_9867,])
output2 = relay.Tuple([call_9860,call_9863,call_9868,const_9867,])
func_9876 = relay.Function([], output)
mod['func_9876'] = func_9876
mod = relay.transform.InferType()(mod)
mutated_mod['func_9876'] = func_9876
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9876_call = mutated_mod.get_global_var('func_9876')
call_9877 = func_9876_call()
output = call_9877
func_9878 = relay.Function([], output)
mutated_mod['func_9878'] = func_9878
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9940 = relay.var("var_9940", dtype = "int16", shape = (7, 10, 8))#candidate|9940|(7, 10, 8)|var|int16
var_9941 = relay.var("var_9941", dtype = "int16", shape = (7, 10, 8))#candidate|9941|(7, 10, 8)|var|int16
bop_9942 = relay.right_shift(var_9940.astype('int16'), relay.reshape(var_9941.astype('int16'), relay.shape_of(var_9940))) # shape=(7, 10, 8)
func_4071_call = mod.get_global_var('func_4071')
func_4074_call = mutated_mod.get_global_var('func_4074')
var_9958 = relay.var("var_9958", dtype = "float32", shape = (363,))#candidate|9958|(363,)|var|float32
call_9957 = func_4071_call(relay.reshape(var_9958.astype('float32'), [11, 11, 3]))
call_9959 = func_4071_call(relay.reshape(var_9958.astype('float32'), [11, 11, 3]))
output = relay.Tuple([bop_9942,call_9957,var_9958,])
output2 = relay.Tuple([bop_9942,call_9959,var_9958,])
func_9982 = relay.Function([var_9940,var_9941,var_9958,], output)
mod['func_9982'] = func_9982
mod = relay.transform.InferType()(mod)
mutated_mod['func_9982'] = func_9982
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9982_call = mutated_mod.get_global_var('func_9982')
var_9984 = relay.var("var_9984", dtype = "int16", shape = (7, 10, 8))#candidate|9984|(7, 10, 8)|var|int16
var_9985 = relay.var("var_9985", dtype = "int16", shape = (7, 10, 8))#candidate|9985|(7, 10, 8)|var|int16
var_9986 = relay.var("var_9986", dtype = "float32", shape = (363,))#candidate|9986|(363,)|var|float32
call_9983 = func_9982_call(var_9984,var_9985,var_9986,)
output = call_9983
func_9987 = relay.Function([var_9984,var_9985,var_9986,], output)
mutated_mod['func_9987'] = func_9987
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9876_call = mod.get_global_var('func_9876')
func_9878_call = mutated_mod.get_global_var('func_9878')
call_9997 = relay.TupleGetItem(func_9876_call(), 3)
call_9998 = relay.TupleGetItem(func_9878_call(), 3)
func_2688_call = mod.get_global_var('func_2688')
func_2690_call = mutated_mod.get_global_var('func_2690')
var_10004 = relay.var("var_10004", dtype = "float32", shape = (468,))#candidate|10004|(468,)|var|float32
call_10003 = func_2688_call(relay.reshape(var_10004.astype('float32'), [4, 13, 9]))
call_10005 = func_2688_call(relay.reshape(var_10004.astype('float32'), [4, 13, 9]))
func_1124_call = mod.get_global_var('func_1124')
func_1127_call = mutated_mod.get_global_var('func_1127')
call_10010 = relay.TupleGetItem(func_1124_call(relay.reshape(var_10004.astype('float32'), [13, 6, 6])), 0)
call_10011 = relay.TupleGetItem(func_1127_call(relay.reshape(var_10004.astype('float32'), [13, 6, 6])), 0)
func_7649_call = mod.get_global_var('func_7649')
func_7652_call = mutated_mod.get_global_var('func_7652')
const_10017 = relay.const([9,-6,10,1,-7,-3,6,8,-8,-1,8,-7,-7,-8,-9,3,-6,-8,4,8,10,-4,5,8,-4,8,-2,-6,7,-8,-8,-4,-2,5,-4,9,-6,10,6,9,-8,-1,-3,-9,-10,-7,-8,7,5,-7,-4,-3,-9,6,-3,-5,-1,1,-3,4,-7,-4,-4,-6,2,8,-2,-10,5,8,2,-1,10,-7,-4,8,4,8,-4,4,10,2,2,6,-10,7,8,5,2,2,-4,7,2,-5,10,10,3,5,-6,5,3,-7,2,10,-5,9,-1,-9,-2,9,8,-5,3,-8,-8,8,7,-4,-9,-4,-7,6,-9,-2,1,-4,-1,2,8,-7,-3,10,10,8,8,-6,4,4,-6,6,-8,-8,3,6,-10,-8,8,2,1,9,-3,-6,-6,-2,-7,-2,3,3,-10,7,-2,2,2,1,-5,3,-5,4,-9,6,9,10,-5,-9,-2,4,1,7,9,7,8,1,10,7,-4,-5,10,-8,-8,10,3,-5,2,-10,-8,3,8,1,9,-9,-2,9,-10,7,-2,-8,-4,1,-5,-5,7,-10,1,-7,3,5,-10,7,9,-6,4,-8,-6,-2,-10,-5,4,4,-9,8,-6,-7,-7,-6,2,-1,-7,3,-8,6,4,6,7,5,-10,-7,-8,-3,-3,-5,-1,9,5,-3,1,-2,-1,4,6,-1,4,5,4,-9,8,-2,-8,9,5,8,-1,2,7,-7,5,3,10,1,7,1,-4,4,-3,7,7,7,-4,-10,-3,5,-9,-7,-6,2,-8,9,-5,-4,-8,-10,6,4,4,-2,3,7,6,10,4,-7,7,4,9,-2,-1,-5,-8,7,-3,3,6,9,-3,4,-4,-10,7,3,-4,-4,-7,-9,7,9,5,-7,1,3,-8,-1,-7,1,7,-9,-9,5,3,-3,2,-10,5,7,5,9,-6,4,-3,7,-1,10,-1,-7,9,-3,-3,7,2,3,-4,1,-7,3,-1,10,9,3,-3,4,-2,2,-2,3,-4,9,1,6,-4,7,-9,9,-7,8,5,-3,-9,-2,5,-4,2,-5,-3,2,-1,-7,8,-10,10,-4,-10,-2,3,1,-9,-6,-10,7,-5,-3,10,9,-7,2,9,-4,4,-9,10,-6,6,-2,-5,10,-10,8,-4,-5,-8,-10,-4,7,10,6,7,-3,-3,7,-5,-10,9,-2,-7,-6,5,-3,8,-8,5,10,-3,-2,7,-6,6,7,6,-10,8,1,10,6,-3,10,-6,9,-5,-8,2,-7,2,6,3,2,-2,9,-6,-3,7,6,-4,-5,-5,1,4,6,2,-3,-7,-10,-7,-2,4,-1,-7,-6,-1,-7,-1,4,6,3,-3,5,-3,-9,-4,5,-4,-8,-5,-1,-7,-3,-9,-6,-10,-5,7,-2,-4,3,2,3,6,7,8,-8,-10,-3,-9,-6,-10,-1,-2,5,2,2,-8,1,8,5,-8,3,5,7,-7,-4,-5,-3,-8,10,8,5,7,-10,-4,3,10,-7,3,9,-8,-8,8,7,2,5,9,6,5,-3,2,8,5,5,3,10,8,2], dtype = "uint8")#candidate|10017|(588,)|const|uint8
call_10016 = relay.TupleGetItem(func_7649_call(relay.reshape(const_10017.astype('uint8'), [588,])), 1)
call_10018 = relay.TupleGetItem(func_7652_call(relay.reshape(const_10017.astype('uint8'), [588,])), 1)
output = relay.Tuple([call_9997,call_10003,var_10004,call_10010,call_10016,const_10017,])
output2 = relay.Tuple([call_9998,call_10005,var_10004,call_10011,call_10018,const_10017,])
func_10025 = relay.Function([var_10004,], output)
mod['func_10025'] = func_10025
mod = relay.transform.InferType()(mod)
mutated_mod['func_10025'] = func_10025
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10026 = relay.var("var_10026", dtype = "float32", shape = (468,))#candidate|10026|(468,)|var|float32
func_10025_call = mutated_mod.get_global_var('func_10025')
call_10027 = func_10025_call(var_10026)
output = call_10027
func_10028 = relay.Function([var_10026], output)
mutated_mod['func_10028'] = func_10028
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8421_call = mod.get_global_var('func_8421')
func_8423_call = mutated_mod.get_global_var('func_8423')
call_10097 = relay.TupleGetItem(func_8421_call(), 0)
call_10098 = relay.TupleGetItem(func_8423_call(), 0)
output = call_10097
output2 = call_10098
func_10102 = relay.Function([], output)
mod['func_10102'] = func_10102
mod = relay.transform.InferType()(mod)
output = func_10102()
func_10103 = relay.Function([], output)
mutated_mod['func_10103'] = func_10103
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7238_call = mod.get_global_var('func_7238')
func_7240_call = mutated_mod.get_global_var('func_7240')
call_10128 = relay.TupleGetItem(func_7238_call(), 0)
call_10129 = relay.TupleGetItem(func_7240_call(), 0)
output = relay.Tuple([call_10128,])
output2 = relay.Tuple([call_10129,])
func_10130 = relay.Function([], output)
mod['func_10130'] = func_10130
mod = relay.transform.InferType()(mod)
output = func_10130()
func_10131 = relay.Function([], output)
mutated_mod['func_10131'] = func_10131
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8747_call = mod.get_global_var('func_8747')
func_8749_call = mutated_mod.get_global_var('func_8749')
call_10143 = func_8747_call()
call_10144 = func_8747_call()
output = call_10143
output2 = call_10144
func_10149 = relay.Function([], output)
mod['func_10149'] = func_10149
mod = relay.transform.InferType()(mod)
output = func_10149()
func_10150 = relay.Function([], output)
mutated_mod['func_10150'] = func_10150
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8317_call = mod.get_global_var('func_8317')
func_8319_call = mutated_mod.get_global_var('func_8319')
call_10158 = func_8317_call()
call_10159 = func_8317_call()
func_8184_call = mod.get_global_var('func_8184')
func_8187_call = mutated_mod.get_global_var('func_8187')
const_10164 = relay.const([0.787553,-2.422974,-2.358096,-4.127821,8.037819,-2.281114,-5.307812,-7.366208,-1.018308,-8.737534,6.470381,-6.255913,-6.881607,9.765723,-8.105039,-0.119042,4.238064,7.461950,8.240035,4.007721,-2.253729,-4.696141,-5.598878,4.460012,-2.986157,3.221338,-0.227507,4.406382,7.469818,1.519522,1.705021,0.101009,-1.506909,-6.353290,0.993184,-7.760085,-1.239943,-7.087893,5.542272,5.711601,3.771322,7.492758,-3.953749,-7.740332,2.330247,4.265533,4.132638,1.957026,-7.683947,-7.342464,2.937621,2.903364,6.300617,4.415443,8.857594,-6.161294,7.869107,-5.518153,-2.681263,-5.217109,-2.242497,3.568984,-1.148015,4.611741,-2.983169,-9.251144,5.602266,7.769939,6.368413,9.499054,3.017515,-6.301406,-1.838018,9.131516,0.712535,-9.286448,7.166038,-8.984224,7.381558,-6.263813,5.479978,1.178357,-6.345126,4.799054,1.968652,-0.894949,-0.388901,-7.922433,-7.585410,-9.620722,4.133693,5.370329,-2.433365,-0.513689,-4.321983,5.375323,-8.169038,-8.111094,-1.025516,-8.056102,-2.231762,-0.532455,4.384041,3.074528,-9.879825,-6.346058,4.236312,8.436906,6.666396,2.942051,-4.841192,5.323404,3.650456,-6.165660,4.837451,-5.250394,5.227280,-0.749531,1.379920,-2.591885,3.908157,1.554804,7.826956,-5.160254,-5.465987,-5.285205,1.610218,4.921022,8.404311,-1.526821,0.918218,-7.824060,6.518607,8.571816,8.792588,3.339556,-5.434965,5.407568,4.338735,-2.816880,1.851416,-4.484907,-4.894006,3.498659,6.318488,-0.318334,-9.866541,-7.878476,-9.628388,-8.160904,4.136192,-8.025675,-0.491244,6.088024,-4.328320,-0.875135,-6.655464,-1.726289,-6.564071,-1.757627,0.373963,-1.899509,-4.062922,0.524554,8.162313,-7.260555,6.316297,-1.646855,-6.118492,3.548762,-2.288338,-7.516858,7.581178,4.629742,-5.303810,8.881462,1.048452,-2.742207,-0.069129,-2.187008,8.072485,5.445593,9.151291,2.376947,7.335974,-9.510347,-6.594569,0.056620,7.196273,6.995500,-0.673631,0.916860,5.393560,9.841022,-3.279683,1.746008,-0.038642,-2.639078,-6.841945,8.970650,4.217783,9.705881,-3.444147,2.258777,-5.505785,-3.603637,5.690092,-8.848402,2.732565,2.097033,4.670549,1.709374,0.078201,7.962665,8.790424,6.957439,8.481360,-4.628320,5.602964,1.047514,5.369853,7.633789,-9.745937,9.760884,2.199256,3.038251,0.322853,6.990345,-1.685407,-7.865931,7.083052,-1.582906,1.093687,6.045891,-3.009655,-6.106347,-4.668986,0.459874,7.270538,-8.022715,0.393948,7.075189,-6.317480,3.351196,9.575013,6.032679,8.285201,9.282026,-7.847909,-9.365519,-2.719658,-2.100252,-1.009421,8.861826,-0.907627,-5.464321,3.646400,-6.551480,-5.934918,-4.576089,-8.610548,7.298397,-9.643078,-6.936932,8.043856,1.890023,8.253154,-4.008600,1.078215,2.572431,5.763115,7.761827,4.663230,-6.477432,8.703444,9.875570,-0.379024,-4.741132,-6.106124,-2.491267,3.536418,5.706341,2.681783,-0.384339,5.225454,0.816684,8.705108,5.407993,-7.251391,9.627026,-9.608135,5.087598,6.942140,5.700555,-1.059969,0.657609,-4.694373,-9.031804,-4.558281,-0.621456,-1.743948,-5.254343,6.938666,-9.596088,5.839757,4.327673,5.800724,2.557696,-5.965867,-7.510509,-5.082441,-3.485410,-7.111909,-8.013188,1.445413,-2.400142,-3.863381,-3.853847,-3.653683,-0.322970,-0.075307,2.181957,-8.083523,-4.742553,-5.490154,-8.677294,-2.126383,6.219537,1.460409,4.037561,-9.436533,3.529249,-1.978928,-6.499172,-6.420266,-4.243746,0.165269,-4.144715,-8.460933,-0.668212,3.385548,8.695291,-2.580955,-9.064252,0.523361,-0.956714,9.285619,-6.501539,4.323772,-9.260448,6.392472,-8.803566,2.316609,7.221735,2.285238,-8.466122,-5.224582,-3.914064,-7.793015,-7.939042,-5.403375,7.668120,-3.750895,6.985221,0.872699,-7.968623,3.963706,3.076607,1.093832,-1.367458,-0.474140,-6.129784,5.200604,5.429258,6.764853,4.001803,8.023865,-8.233183,-0.342278,5.728804,2.532378,0.023627,2.636421,6.987412,5.892534,0.845786,-9.971914,-4.944360,1.266243,0.746446,3.360000,-0.233801,-1.352535,4.349448,9.007262,-1.383079,-4.226181,7.332458,-3.366724,-0.978036,-3.575631,7.445594,3.461054,-2.916417,-9.037901,-7.392674,-3.516463,-4.841120,3.898269,-7.073962,-0.330638,5.867550,-6.363499,-5.682799,-2.806740,-8.903517,7.578622,7.663300,8.364293,9.141946,-0.093618,2.022065,-3.633561,0.232454,3.881492,-1.755434,-8.432192,-4.761592,-5.481228,3.504219,-1.382965,-5.974432,1.296450,-0.572875,2.123614,-6.055004,3.945803,3.309898,5.060043,7.561078,-8.013589,3.416024,-7.108934,0.321137,-0.282030,7.726967,-1.867350,-5.037605,1.386219,-6.406015,-3.424758,-1.088666,-1.475912,-8.275034,-6.867685,2.376801,1.914242,0.294202,-2.733606,7.058773,4.821767,0.442478,-8.035067,-0.663266,4.071727,-3.774741,2.705021,1.156729,-7.309641,-3.929380,-7.827911,0.855523,-9.603087,8.235811,9.517341,2.207522,9.931805,-5.093576,4.794856,1.053618,2.244519,-7.927545,3.823167,2.767312,2.228378,-5.078744,0.259691,-9.431856,0.949630,-2.549375,-3.093368,5.662069,6.476242,7.940437,-7.566009,8.972418,-7.875847,5.494838,5.601845,-4.446142,-2.418013,-2.122594,-5.918972,5.607074,-6.583076,4.630436,0.361698,-3.055036,-2.179359,9.807805,5.823071,2.701012,0.130926,5.441450,1.217987,8.335789,-5.361411,6.751177,-5.033724,-6.000361,-3.798524,8.803279,2.092054,-0.736388,9.806730,-8.265003,-1.269733,5.169737,-2.236019,9.260436,-3.549380,0.336531,-1.186629,2.282125,0.427894,-1.447290,9.095726,-8.235900,0.371939,8.398715,-5.444414,7.489798,0.443968,-5.355200,0.564992,7.538616,2.594271,4.669156,6.860404,-7.926299,-8.521001,-8.679348,0.208283,-7.160220,-8.478365,5.089277,-2.390352,6.161947,5.251951,0.639320,2.828329,-1.975500,-0.128979,3.347921,0.156127,-9.458613,-5.596151,5.577150,0.164495,-9.985453,8.882871,3.186122,6.495889,3.568724,-5.991481,4.606187,3.611624,-1.798062,2.561945,9.421124,-1.098067,6.347769,9.490152,-9.790874,-5.347633,-9.000602,-7.084798,8.448637,-2.933622,0.146216,-4.175348,1.158435,-9.659185,0.891676,0.684401,-6.535231,-3.067214,-3.643766,3.036327,5.422123,3.920922,8.362093,1.678842,8.513536,-8.733181,-5.212687,-7.343534,-1.998456,-6.283561,-2.906933,3.351261,1.280484,-9.775338,5.197228,-5.090104,-6.519713], dtype = "float64")#candidate|10164|(616,)|const|float64
call_10163 = relay.TupleGetItem(func_8184_call(relay.reshape(const_10164.astype('float64'), [11, 4, 14]), relay.reshape(const_10164.astype('float64'), [11, 4, 14]), ), 0)
call_10165 = relay.TupleGetItem(func_8187_call(relay.reshape(const_10164.astype('float64'), [11, 4, 14]), relay.reshape(const_10164.astype('float64'), [11, 4, 14]), ), 0)
bop_10192 = relay.mod(call_10163.astype('float64'), relay.reshape(const_10164.astype('float64'), relay.shape_of(call_10163))) # shape=(11, 4, 14)
bop_10195 = relay.mod(call_10165.astype('float64'), relay.reshape(const_10164.astype('float64'), relay.shape_of(call_10165))) # shape=(11, 4, 14)
func_664_call = mod.get_global_var('func_664')
func_668_call = mutated_mod.get_global_var('func_668')
const_10198 = relay.const([-2,-6,-8,-9,10,3,5,-9,-5,9,2,7,6,3,4,9,-8,4,-1,-8,4,1,3,10,7,-6,-3,-10,-2,6,8,5,-10,3,1,-4,-5,4,-9,7,-6,-2,5,-5,-7,-4,-6,-9], dtype = "int32")#candidate|10198|(48,)|const|int32
call_10197 = relay.TupleGetItem(func_664_call(relay.reshape(const_10198.astype('int32'), [4, 4, 3]), relay.reshape(const_10198.astype('int32'), [4, 4, 3]), ), 1)
call_10199 = relay.TupleGetItem(func_668_call(relay.reshape(const_10198.astype('int32'), [4, 4, 3]), relay.reshape(const_10198.astype('int32'), [4, 4, 3]), ), 1)
func_7259_call = mod.get_global_var('func_7259')
func_7261_call = mutated_mod.get_global_var('func_7261')
call_10200 = func_7259_call()
call_10201 = func_7259_call()
func_2688_call = mod.get_global_var('func_2688')
func_2690_call = mutated_mod.get_global_var('func_2690')
var_10221 = relay.var("var_10221", dtype = "float32", shape = (468, 1))#candidate|10221|(468, 1)|var|float32
call_10220 = func_2688_call(relay.reshape(var_10221.astype('float32'), [4, 13, 9]))
call_10222 = func_2688_call(relay.reshape(var_10221.astype('float32'), [4, 13, 9]))
output = relay.Tuple([call_10158,bop_10192,call_10197,const_10198,call_10200,call_10220,var_10221,])
output2 = relay.Tuple([call_10159,bop_10195,call_10199,const_10198,call_10201,call_10222,var_10221,])
func_10223 = relay.Function([var_10221,], output)
mod['func_10223'] = func_10223
mod = relay.transform.InferType()(mod)
var_10224 = relay.var("var_10224", dtype = "float32", shape = (468, 1))#candidate|10224|(468, 1)|var|float32
output = func_10223(var_10224)
func_10225 = relay.Function([var_10224], output)
mutated_mod['func_10225'] = func_10225
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8421_call = mod.get_global_var('func_8421')
func_8423_call = mutated_mod.get_global_var('func_8423')
call_10268 = relay.TupleGetItem(func_8421_call(), 2)
call_10269 = relay.TupleGetItem(func_8423_call(), 2)
uop_10297 = relay.asin(call_10268.astype('float32')) # shape=(700,)
uop_10299 = relay.asin(call_10269.astype('float32')) # shape=(700,)
output = uop_10297
output2 = uop_10299
func_10305 = relay.Function([], output)
mod['func_10305'] = func_10305
mod = relay.transform.InferType()(mod)
output = func_10305()
func_10306 = relay.Function([], output)
mutated_mod['func_10306'] = func_10306
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8291_call = mod.get_global_var('func_8291')
func_8292_call = mutated_mod.get_global_var('func_8292')
call_10451 = func_8291_call()
call_10452 = func_8291_call()
func_4618_call = mod.get_global_var('func_4618')
func_4621_call = mutated_mod.get_global_var('func_4621')
const_10454 = relay.const([7.778389,-3.606332,3.917207,0.657098,8.961105,4.090999,-8.926935,-2.347910,2.256350,0.129774,-4.197171,-8.319709,-1.035677,1.686108,-4.439588,9.525204,1.136472,9.095112,8.564354,-7.425647,7.290394,3.015257,-1.672147,6.265306,-9.435543,-6.877154,-8.797402,-0.698891,-9.198641,1.593878,2.708759,-7.173646,-8.432138,0.077810,-8.113101,-1.598627,1.507374,-4.738295,4.882079,9.895991,-4.854892,4.306342,-8.964051,0.274401,8.401637,4.298824,0.183526,1.302909,7.621413,-2.361370,-8.181025,3.371434,-7.137903,5.078665,6.708462,-7.672303,-5.385577,5.567815,5.664011,4.586794,8.673555,2.301202,-2.322626,-3.039944,4.372565,3.136015,0.339304,0.122074,-0.183879,-0.694097,5.381295,3.998523,-7.687978,-4.573473,-6.417425,-5.405127,-1.321307,-5.943177,-7.776430,-9.154357,8.344602,2.058326,-8.677491,2.856389,1.348718,0.121125,-3.083792,-5.294030,4.590430,-0.910934,-5.718074,4.213148,0.842531,4.557671,-6.437015,7.571196,5.520881,-9.788020,-8.762408,6.704225,6.622810,-2.539652,5.701872,-6.895448,-1.475735,-8.805486,9.556566,8.671776,-8.223798,-3.787376,8.180094,-8.130021,-2.357260,-0.034763,-5.010529,-1.414632,-9.856136,4.123720,7.667626,-6.484977,8.175036,-9.977371,-0.903986,3.355107,-4.236759,0.199457,1.926423,9.701746,1.830697,-6.260182,9.638174,9.821821,-0.879885,3.310354,5.741930,8.290101,4.413850,4.756042,0.148698,-2.589654,3.778265,1.130543,2.599608,-9.670047,8.945672,3.058174,-6.019820,-1.102117,6.324647,-5.514174,-9.022591,7.960101,-0.480530,0.239299,8.781426,9.140494,-9.222815,-6.354964,3.908374,-6.927926,2.147695,3.845705,-1.694169,-0.561258,-4.735921,-9.427810,-5.881356,-5.175169,0.836466,6.251747,1.627421,4.727086,5.604955,1.168112,-0.733717,4.880240,4.739228,9.058386,4.311464,-1.724935,9.786653,-4.327561,-3.346389,-9.440611,-0.709456,5.021425,-7.751199,5.517158,-6.707611,4.989766,-7.442361,-0.418217,8.881073,-0.303678,-6.501227,-7.998947,6.157656,5.542003,6.729256,8.387798,0.094909,2.201742,4.093755,-4.401605,-0.444463,6.395582,-3.762286,-5.357529,8.439016,-9.431884,9.730834,9.695069,8.321032,2.399256,-3.475651,6.267160,5.494592,-1.672359,2.451921,-3.781525,-9.666981,1.718638,3.254631,-0.407408,-6.836546,-2.041436,-8.234184,-2.525833,2.450835,-8.800524,1.559973,1.096337,7.092065,8.269496,-8.511979,-0.495104,7.724631,-6.623048,4.514070,-8.149873,4.427416,-3.044312,-6.140746,-0.855088,-4.504292,-7.490519,-4.784899,-0.158775,2.162599,-1.435695,5.665571,-8.231564,-9.411040,3.781863,8.479345,8.764410,2.875200,-4.445813,2.759429,3.763301,-2.502998,9.627671,1.649316,-5.108403,9.581676,4.330024,0.814041,-6.914091,-2.046047,2.678257,3.338298,-5.142726,-4.233772,-0.558968,1.384140,7.319450,9.327514,-5.645927,-9.556792,0.124126,-8.137448,-8.120986,-7.482601,5.151042,8.534870,0.254500,-0.677091,5.653569,-1.300828,-6.975380,4.682111,3.659972,-2.227003,8.754944,-8.780889,-9.130246,1.810339,-9.202827,0.809327,-4.247050,9.792488,5.016359,-5.335264,-1.619833,4.618414,-4.277324,5.994768,7.417468,-2.404676,-3.003460,-5.508716,0.393946,-4.875912,8.262005,9.286052,-5.429751,2.583549,-5.738515,-9.710273,4.613999,4.841714,-0.951494,7.392563,-4.214621,-9.148776,0.994644,-0.069066,8.949966,-1.769357,-8.624957,-4.579092,-9.389856,6.325464,9.424222,-0.879930,8.838310,1.337157,-6.738680,4.148929,-4.105433,9.962639,-8.533672,-2.701493,-6.703123,1.253861,-4.274858,2.587586,2.249631,-0.687751,-0.843856,2.011907,-3.330919,2.833037,-1.932963,-3.475124,9.586058,-1.072978,2.751124,2.860496,5.149057,-3.188965,-2.186290,0.201423,-8.792914,7.425621,-5.853237,-1.915015,0.534307,6.890913,4.213629,-7.566880,6.132888,-7.762973,6.344252,0.904679,-1.942780,-3.727972,9.350943,4.525435,0.226556,9.901180,6.746848,9.203921,2.375510,-6.100893,-4.542076,0.478179,2.330915,-0.392056,2.047085,-0.110646,1.545291,2.776610,-0.517832,2.560067,4.612365,2.281311,-7.113291,8.143495,0.203221,-8.560958,-9.851755,0.952582,-4.440613,-1.070179,4.820587,6.229293,2.475466,-5.071150,6.120578,-9.506782,-6.198146,-5.306964,-8.732381,-4.776614,5.361335,8.425197,3.319732,-6.837668,-9.211409,7.094937,4.196994,-8.601979,1.556610,-6.464576,-0.189721,6.498121,-9.327482,-8.624608,9.786184,-6.607946,1.288370,-6.320077,-2.700920,-3.196845,8.318132,9.040163,8.664831,-1.301418,-9.487979,0.747446,1.639699,7.992421,-6.517553,-2.994006,-4.147632,0.440375,-5.583755,-7.851437,-0.051572,6.424028,9.388561,-2.756149,-6.427764,1.928597,4.563458,-0.324931,-4.535462,-7.982458,5.948589,-1.381440,4.973172,3.826820,-3.543481,-4.023561,9.719687,-1.302518,-8.498824,7.468777,3.332700,3.916033,8.036217,7.089021,1.313873,7.219858,-9.767592,0.611352,9.083660,5.568613,-9.147568,-0.638043,8.284466,-9.063948,5.385155,9.910105,9.729467,5.783258,-7.869046,-9.251465,-4.560984,-5.204358,6.079403,-8.982027,-9.959533,-0.021821,1.541310,-9.693547,-9.112777,4.369176,-1.609625,-3.547519,1.535690,1.773959,8.559872,-1.472254,0.964648,-7.407018,-8.431422,8.448497,7.380048,2.266085,-4.183139,1.740909,4.750166,-9.399712,0.941330,5.761236,-6.914319,-0.414461,-5.058889,2.735271,6.164164,-5.339456,-3.236338,9.517409,-0.090913,-0.111972,-9.177726,0.005948,-0.009234,-6.841160,-9.668747,2.303392,-6.546794,-5.035536,-9.273348,-4.123922,-8.106687,9.827134,-3.461572,-1.239845,8.457663,3.912470,-3.514989,4.589536,-1.703681,1.015345,6.670335,9.761256,-0.530332,-0.850923,9.104040,5.454676,-2.863645,-6.390938,4.480251,4.704265,0.060592,-9.391321,6.751168,5.352238,3.000154,-5.916567,2.473377,-0.819716,-2.616836,-1.702257,9.900527,6.072454,-0.088714,-2.378752,-4.560624,-9.337301,-3.652013,3.810545,7.933708,5.566889,0.084046,3.974804,2.408240,8.284088,3.644898,0.820798,9.035239,-7.318883,-1.764939,5.340950,-8.716130,5.554469,-6.687007,-1.925394,8.076393,6.594791,2.977905,1.728557,-7.030617,-5.575944,-7.539137,7.099775,-8.331957,6.740710,-4.390247,7.768068,-0.550341,-7.257836,-7.343472,-1.927630,-2.933247,-7.674167,0.267549,5.827040,-0.035581,8.169869,0.007947,-8.071869,-7.622398,0.907603,-6.642556,6.071509,3.607446,-8.372052,-6.747630,0.535139,-4.949304,-6.192421,1.654484,3.905637,-7.824877,-7.274033,3.255850,9.877152,-7.553405,3.813556,-5.517312,8.537735,-6.195550,5.131561,8.970257,7.115645,-3.900724,6.258914,9.403118,-2.284019,6.658739,-4.832747,5.346518,-2.578861,-9.936977,8.155693,-3.707340,-9.164114,-7.865859,7.652106,-6.101414,0.671071,-9.279640,-6.411762,1.539202,4.436409,2.704883,-1.566672,-6.359581,-9.309284,-5.807799,5.408241,-5.797040,5.413527,4.178890,-4.596077,4.327605,-8.012183,-0.911933,-0.556646,2.190280,-2.303306,8.395616,-5.480762,6.379749,-3.602307,-7.290578,-4.040999,5.684768,5.958631,-4.400157,-1.621592,6.076868,-5.399114,8.550326,2.764133,-6.364330,4.836650,-7.636057,3.719214,-7.935949,7.507182,2.093157,5.501850,4.371298,0.113729,5.266364,-3.448048,8.538858,-0.588661,0.791483,2.527743,-4.279365,5.655276,-6.603855,-5.440645,-8.286025,0.261289,-3.198527,-2.368597,9.288332,3.955326,0.098122,7.495057,-8.783277,2.310128,-8.571401,-3.634752,0.839341,5.311776,-3.118741,-5.585295,-3.454352,3.100162,-1.952619,-9.547492,6.594432,-9.996871,3.729395,2.089743,-1.940264,1.799765,-0.462317,1.509067,9.634926,0.186524,-5.105422,-1.551217,-4.292751,7.858422,6.797126,-2.407267,-2.449210,5.943801,0.694970,5.869487,6.676362,-6.093570,-6.858286,6.346519,-9.289290,-0.180698,-2.511298,6.599406,-9.331635,-1.865863,9.178098,-4.651465,7.941266,2.759747,2.481022,-9.495606,-1.613750,-4.289803,-4.021811,-4.054836,-2.654420,-7.294109,-2.962127,4.115213,-7.725942,-6.961588,0.080059,8.803247,7.330231,8.278028,-8.975764,9.758908,-3.078015,9.578290,-6.653277,2.894586,-0.763237,1.571257,-9.430590,1.206249,-5.088334,-8.810431,8.595626,2.587091,-9.553546,9.898921,-3.817868,1.019160,-0.421679,-9.342956,7.533325,7.777334,4.328021,-8.895785,-8.084752,-5.348746,3.774969,-9.153166,9.178501,8.979812,-4.004445,-2.286289,-4.489971,7.404449,-7.306267,7.621283,3.110109,-6.596633,8.051433,-5.867537,-1.912187,7.882526,2.863871,-3.438444,3.784095,6.280059,-7.197822,-0.346114,0.516410,9.742829,7.569039,6.311964,-0.051062,9.783042,-6.676761,0.027403,8.756323,5.092489,-4.016871,0.264761,7.189672,3.193229,-6.257784,-6.058838,0.837434,6.090204,-9.639929,2.669575,-1.239228,7.326591,3.070095,-8.091800,7.253376,3.553316,8.703375,7.026390,2.887379,1.047605,-0.178281,-2.575500,1.052000,6.281339,-3.789550,-8.606922,4.731908,-7.283539,-0.289332,7.680772,-2.421688,2.206971,3.374835,-0.540936,1.913106,-4.194736,-1.147865,9.422613,7.870104,8.301805,-0.333065,-8.280827,9.275082,-3.060835,7.105887,9.948641,-4.201759,-3.840306,6.968280,8.198207,-2.941453,9.558061,-7.490413,-8.358622,5.949682,0.184837,-3.868068,9.923301,-3.381060,7.781889,-6.753665,1.983000,-9.915067,-7.189431,1.999228,-8.935476,-5.372307,-3.191177,4.760976,-7.856501,-7.183890,-2.279698,9.996553,9.683623,1.159060,-0.754376,3.484211,-9.972482,1.842076,-9.534582,-5.797752,-0.477229,-8.352201,2.783032,3.692169,-3.834611,-2.527762,-4.226007,-5.596181,4.647918,5.063032,4.725596,-1.052199,-2.703052,9.401304,-7.088973,7.746289,-0.112033,0.821625,5.758936,4.301990,-5.749076,-9.149899,9.200731,-5.292049,-2.468493,-4.796189,2.094287,-6.972767,-9.488143,-8.229487,1.638276,1.034662,3.168412,-7.038996,-5.968294,-5.443325,8.492003,6.459923,5.191577,6.396800,4.341942,-5.810833,-9.457957,-0.350718,-9.149240,9.330637,5.515844,4.694844,8.713544,5.106291,5.795924,6.966526,6.429152,8.438985,-2.120121,-8.637914,9.815290,-7.575459,2.369459,-1.811256,0.819614,-8.878556,1.006862,0.076049,2.537292,-8.752634,-4.330053,3.946747,-2.752330,3.332413,9.376286,5.565482,-6.787890,9.287601,-5.534838,7.236657,1.716423,-8.047778,1.674704,-2.944310,0.645441,1.982411,-5.738633,0.629200,0.991675,6.700533,-6.965523,3.659467,8.998690,9.032543,9.503331,8.889113,-3.549424,4.280411,-3.782779,-4.077448,-9.039150,6.023003,-4.039193,5.394442,4.427569,-2.927241,2.615542,-7.290354,-8.753741,9.189673,-3.922077,1.673701,-5.692299,-1.988707,-7.029263,-8.964446,-7.825541,8.274166,-9.903943,5.964122,7.719505,-7.494115,5.359386,6.556193,-0.440199,1.997834,-6.095037,4.006212,9.698653,2.624155,-2.311547,-5.509112,9.222604,7.069228,0.707256,-5.839596,-1.975200,4.251769,8.999660,-3.251481,1.181995,1.946844,-0.495606,4.243673,-4.963268,7.278194,-7.866257,-4.772166,5.466031,-4.742868,-9.083578,5.323173,0.794232,-4.373218,-5.447819,-2.347402,6.826750,9.430647,-9.555512,9.633315,3.089885,1.306082,1.167769,7.467714,9.414176,1.816062], dtype = "float32")#candidate|10454|(1080,)|const|float32
call_10453 = func_4618_call(relay.reshape(const_10454.astype('float32'), [6, 12, 15]))
call_10455 = func_4618_call(relay.reshape(const_10454.astype('float32'), [6, 12, 15]))
output = relay.Tuple([call_10451,call_10453,const_10454,])
output2 = relay.Tuple([call_10452,call_10455,const_10454,])
func_10463 = relay.Function([], output)
mod['func_10463'] = func_10463
mod = relay.transform.InferType()(mod)
output = func_10463()
func_10464 = relay.Function([], output)
mutated_mod['func_10464'] = func_10464
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9876_call = mod.get_global_var('func_9876')
func_9878_call = mutated_mod.get_global_var('func_9878')
call_10573 = relay.TupleGetItem(func_9876_call(), 1)
call_10574 = relay.TupleGetItem(func_9878_call(), 1)
uop_10582 = relay.log(call_10573.astype('float64')) # shape=(7, 2, 15)
uop_10584 = relay.log(call_10574.astype('float64')) # shape=(7, 2, 15)
func_2100_call = mod.get_global_var('func_2100')
func_2105_call = mutated_mod.get_global_var('func_2105')
const_10601 = relay.const([-1.049840,-6.119681,3.443585,0.255055,6.000188,-1.115006,-6.293645,-6.114938,6.197478,2.124051,-6.764903,-1.512622,3.017885,5.888553,-2.475432,1.417091,6.208880,-3.896955,1.287424,8.599603,-5.445737,8.176004,5.972875,-1.692292,2.676735,-9.477759,4.671511,2.921584,9.212790,-4.012209,-0.075522,-7.522655,9.049536,-0.459526,-6.014631,4.971906,6.822753,0.670889,0.844631,-7.493840,6.444139,-7.171200,6.050583,2.720223,-5.819362,9.346117,0.912478,-1.138000,-8.594378,-5.725037,7.004750,1.714592,-3.830652,7.156437,-1.538146,-6.067527,-7.087269,-1.250322,-8.618581,-5.174924,0.937747,1.115306,-4.787758,2.229804,8.586313,5.802696,-8.296930,7.313993,-8.852045,-9.141681,-8.657628,-6.049520,6.012010,2.606001,3.610598,-6.317556,0.952456,4.608972,6.059084,-4.703907,-1.705992,2.460307,-9.591190,1.655499,-2.257336,5.731406,-7.196259,8.799886,-4.791414,4.151269,7.074297,3.275127,-0.043055,-4.992775,4.810337,-0.527650,-8.382829,-9.748338,-9.545069,6.501091,4.129921,-8.581776,8.518973,0.906295,-6.485994,1.413339,-6.856055,-8.965566,5.752746,2.535413,1.790804,2.484585,7.259128,-1.111556,1.451197,-5.216368,-2.145462,0.397364,0.915973,0.769646,5.717348,1.411031,0.592373,-1.921730,-6.898246,-8.649207,7.277478,1.264747,1.159093,8.814730,-5.487831,-1.534446,-6.804911,-3.816594,-9.732013,9.344247,-3.910866,-6.499453,-8.290310,-8.359575,-6.836578,-2.428870,-7.434458,-4.217247,2.817086,9.414945,-6.942912,-4.297312,5.725847,-9.062784,-5.839296,6.428031,-3.811827,7.961445,2.581400,6.567065,-9.644281,4.197330,8.845395,-7.334249,5.054589,-2.907971,6.374717,-5.246873,9.299109,2.966093,-2.674539,-4.929186,-3.238300,5.322661,-8.797084,5.575732,-3.616534,7.640064,-7.916113,-9.340576,1.228502,0.856550,4.430162,2.773642,-6.487142,3.706171,-3.172530,1.289948,1.738959,-1.402409,6.230976,-6.571961,-1.490318,-0.448488,4.548184,0.065701,3.824202,-8.835979,-1.198728,-2.758009,-7.695539,-6.233751,8.754712,8.656084,-8.738689,-1.232379,8.089687,-3.532384,3.456268,-4.743843,5.728855,6.106597,5.854321,-7.989696,-8.767485,-0.214756,-7.738572,0.883054,8.267087,-3.654063,-6.626420,3.653501,2.566697,9.577502,-1.665061,3.065202,4.190481,7.174078,-8.673094,0.763365,-9.832425,1.192808,-0.250022,-4.669364,5.804010,3.556676,-1.931138,7.603855,-6.141457,-8.465085,9.216657,9.516557,-4.493228,1.595273,-7.699945,7.541430,-8.405641,4.444392,0.295308,-8.516833,-1.632514,-5.697783,1.314201,-3.556445,9.040150,-6.775253,-8.661097,0.715589,-6.360319,-5.325757,6.278430,6.699171,-4.997448,-5.391011,2.677810,4.007917,8.157347,-3.900782,3.176528,-9.025976,2.682296,4.684336,-6.562546,-6.208742,1.076422,2.601999,3.088294,6.690444,3.992965,8.981264,-1.058657,-3.981647,2.159679,-1.683853,2.943260,0.839443,-8.163986,3.148655,7.276946,8.329252,-5.770201,-5.451471,-0.516493,3.931881,1.513550,-7.030390,2.869009,4.702339,3.767714,-8.578470,7.544925,6.138795,-7.397047,-5.494787,-6.435428,3.691105,0.740940,-4.586953,3.374849,5.105995,8.129090,-1.759204,7.705822,9.555499,-1.076896,9.175431,8.601672,6.303001,4.515489,0.173579,8.151025,-9.204173,-3.924944,-8.927490,0.845656,6.268697,4.209345,9.722859,8.138378,6.834674,-3.312370,2.539248,7.364965,-1.038329,0.745310,2.289373,-3.565979,1.070473,-1.530622,-1.188883,3.497830,-5.945249,9.769273,3.538621,-9.446895,-4.086627,-1.240172,-1.548396,-3.697528,-1.130240,9.690282,8.621834,-6.678795,-2.248961,-7.156776,-7.158273,-0.078400,9.667553,-5.251888,2.290858,3.948122,-0.118547,4.388675,-0.936466,0.123312,5.456095,-0.812514,-1.264663,0.784674,7.623235,1.522770,-2.334843,3.324219,8.727123,-6.188780,-8.333398,3.978928,3.630636,-6.965703,-0.500687,8.676485,-4.301071,-5.817930,-7.979203,4.050766,-3.426012,9.339500,0.330299,-1.132321,-5.438014,7.988031,-6.169931,6.507271,6.518433,2.720720,1.482863,-7.773179,-2.722202,-7.163491,-9.377648,9.361321,-1.414691,9.488503,4.022453,4.427550,8.722535,-0.036795,8.449141,8.549504,2.712411,-6.108195,7.120700,-8.223633,-9.631680,-7.135249,4.494355,8.350594,-3.760078,2.506599,-8.241609,-5.983933,0.612845,4.028576,-0.092931,8.569707,-0.489811,9.527286,-3.689755,0.656819,-2.528662,-9.218668,5.219979,-2.985425,-2.534194,1.861737,-2.265658,-4.470081,7.560728,-7.093239,8.172953,9.091401,2.864649,7.769396,2.355291,-3.687784,8.032674,5.260338,-7.525339,-9.479815,4.850441,2.329398,5.230413,9.044321,-7.687749,9.400646,5.554752,6.323765,0.431549,4.004969,7.957223,-6.544190,-4.295782,-9.476789,7.965064,7.393987,-3.117917,-4.773033,6.705002,-4.536976,1.077074,3.883984,0.326650,-5.857643,0.254072,0.592124,9.250102,8.682386,7.949956,1.069079,4.354889,2.338265,5.257334,9.633871,4.565420,-4.119414,6.631937,6.744757,-8.378130,0.843303,3.098441,9.246647,2.963450,-5.381193,-7.388864,1.429664,1.489011,1.134743,8.988128,8.975526,3.545497,4.876586,6.196166,7.567522,-5.397976,6.369843,5.516012,4.366495,-6.976508,1.934966,4.157097,-0.933816,2.813993,6.861808,-3.915984,8.218671,1.140341,3.166772,0.420160,-3.349654,1.447882,-0.427211,-1.375161,4.707613,6.328492,9.875074,-5.790085,7.220025,-8.330954,-6.114541,0.954922,-7.828621,-6.567550,2.749801,-8.502333,-1.455757,-6.195354,-4.565460,-5.496804,5.905767,-3.362107,-9.860329,-5.115253,-7.698244,-2.556842,4.133098,-4.809323,-0.075864,5.919636,-8.251158,-6.858932,-7.677445,8.978852,3.632104,-7.685578,-8.211224,-0.080211,9.941548,-2.781101,7.217857,-6.423656,9.852989,-3.852259,-8.544038,0.664339,5.686129,2.208085,-3.032438,-0.345446,-5.998015,-7.784137,9.583546,1.541756,6.980333,-7.518117,-3.983182,-2.671821,8.311500,-9.455392,-8.548596,-7.431614,1.830733,0.798875,4.684283,9.383441,8.744366,-8.727336,-3.000898,9.781826,2.689413,-1.680165,4.632319,3.818924,7.906887,-4.960662,-2.092918,6.681697,-6.981329,7.008730,-9.075889,5.808382,4.303395,-7.191517,0.527176,7.842354,2.696583,-6.107379,-4.253717,6.552266,7.764654,-6.338654,0.876579,2.854011,-6.112020,5.065665,-3.645844,-1.567422,-9.325989,9.996147,0.139643,-7.402349,7.268172,4.560873,3.748653,6.445941,-6.051849,-9.809651,-3.540155,1.022527,-4.355463,6.102218,3.639196,-5.449607,0.777384,2.955345,9.430525,3.262596,-8.194399,-8.027699,-6.118042,1.307310,7.334703,-0.258951,0.544393,7.366588,-9.774871,-2.312821,-4.408466,2.547682,9.651900,-6.461384,-3.933833,7.769908,-5.623677,-2.078411,3.389936,3.792318,2.999631,-9.934056,4.918030,5.254013,6.523889,9.364869,-5.182275,9.780472,0.264822,-9.861308,2.058289,5.530659,-3.553027,-8.554582,3.298780,-6.444875,8.717534,6.405283,-0.044663,-0.068075,8.031051,-9.950026,-3.920147,0.660118,4.257658,-2.632665,6.188708,5.015159,0.062236,2.498784,4.154875,-8.145888,9.894453,-9.792410,-2.684238,7.618244,-2.644049,3.325229,9.597034,5.122397,4.809845,9.138379,8.341341,-5.937118,7.346928,9.604600,2.307647,6.926528,5.045055,3.208938,3.675597,6.242358,-5.625938,-7.962333,7.594634,-2.572636,1.229875,5.341920,-4.655045,-7.356594,-0.758388,2.477320,7.110588,-0.840600,-7.904494,-1.285369,-8.274094,0.387399,-8.356224,-3.915381,6.016031,-4.308219,-3.305937,6.036617,2.181260,-3.108355,9.523987,-7.902327,9.765094,-4.846066,-1.269213,9.735592,-3.429704,1.181190,-8.381067,5.076025,-6.072852,7.574384,8.789502,-5.113504,-8.155571,-0.444236,-6.165168,-0.597586,9.631730,4.634273,9.411589,-9.113471,7.753331,-1.618196,0.463323,-3.964181,-5.312899,0.291322,-4.804672,-7.093992,-1.914826,5.028825,5.216555,-2.296402,-8.191492,-3.626392,-4.297862,3.216723,-4.816315,-0.378097,7.173423,-8.462733,-4.521176,-2.954199,0.281946,1.403055,1.847147,-4.787178,-9.539365,-5.494034,-4.498793,-1.167662,0.611868,-1.492809,7.604664,-0.634244,4.541267,-5.510297,-2.627692,5.984344,-2.404803,1.176754,1.048835,-2.757677,4.149396,-8.842858,-9.274634,-9.135924,-6.601365,7.833838,4.451405,1.749673,-2.876036,-2.271248,-0.461314,-0.561906,-9.386121,-7.870729,9.180208,9.487654,0.879164,-5.608019,-3.081589,-1.811112,-2.265760,3.789805,2.068945,-7.730148,-1.186953,-0.456058,-5.121907,9.132747,-0.146726,-6.642480,0.774467,-2.832344,5.779813,-4.108848,-6.648847,7.975702,-1.129735,-6.990138,7.462999,-6.715175,-2.854473,-4.942298,5.809079,9.236811,1.121148,-4.122798,-1.783152,-9.290680,0.215032,7.246333,2.282728,-3.706620,0.062657,8.871516,-8.508235,9.592340,-9.986941,6.669435,2.218608,4.940054,0.389050,8.414674,6.740165,9.096972,-3.291916,-0.235101,6.766096,-0.660944,6.959818,3.302529,7.607664,-3.130039,-3.102905,7.911028,8.270570,5.479713,-1.869968,-6.031713,-8.402279,3.016317,-9.135771,-0.637449,-3.172314,4.464755,-0.232253,8.927068,9.012596,9.525676,-4.134711,0.404427,5.090307,-3.328208,-7.776254,8.209757,-6.319006,9.349041,-7.906796,8.060455,-2.985830,4.559705,0.338084,-2.169799,-5.561266,0.458052,5.169780,-4.754954,8.057115,-0.705257,4.760944,-7.385093,-9.170559,8.778038,3.917347,-0.995630,4.845746,-5.417307,-8.700404,3.655106,-5.223691,4.975931,1.344539,-8.204204,-4.401183,-1.562157,7.684269,-0.125230,7.619712,-0.995998,-4.606597,-3.605497,-0.932930,-6.718279,-2.871602,-8.446975,-4.196382,-2.908992,0.421878,-2.867277,2.900839,-9.919783,3.662147,7.876523,-3.771953,7.030421,-5.069257,-3.213939,-4.369597,9.149819,-9.801772,9.776155,-6.491392,-5.557594,4.440809,7.471455,-8.050109,1.666479,-9.675832,-7.378662,-5.308381,6.728039,9.808921,-7.048286,8.677495,-4.865296,6.541490,-1.535793,2.643643,1.475418,-4.836996,-6.907471,-6.197624,-3.506297,-8.717182,4.975958,4.685470,7.941845,-6.972429,-0.026282,1.964907,8.414951,1.995356,-6.350738,6.552221,9.190460,7.487794,-2.595338,4.163061,-5.334447,2.380198,-6.293483,6.975385,2.252850,9.584750,9.541751,3.900765,2.045680,-8.974571,1.849508,-5.563091,6.685080,-7.699988,2.706767,7.633608,7.405512,-1.060212,3.225015,8.724356,7.182584,-6.492047,-4.558296,-9.100904,-1.049746,3.977586,-7.184146,-9.463787,3.480196,7.957163,-0.158866,8.827050,5.869015,-7.931597,0.691639,9.463659,-7.022371,9.008266,6.509032,6.655726,-1.324338,-8.719348,-3.265509,7.191762,8.605720,-4.425408,9.943116,-5.233572,7.526190,4.483290,-4.734525,-0.770376,-7.699763,6.172505,3.281573,-6.535688,-2.620843,-0.401602,0.073737,-6.085407,-3.180230,3.315292,-1.826259,-9.361268,-7.547649,-9.706863,-2.243172,3.945469,-5.844680,4.598696,5.746490,-2.770372,-7.827711,-6.464738,-6.321615,-3.604714,-7.456376,-1.576325,0.441135,-0.294105,-2.509086,0.153195,4.159987,1.180928,1.285171,1.364139,-0.913892,-2.066284,-9.732499,7.277782,-3.152156,8.236848,2.730706,2.292072,-8.489208,-0.896370,2.213378,-1.801565,-0.690223,-8.518072,-2.096359,1.886289,6.963863,4.522171,-9.671007,-2.913654,-7.500947,8.734210,5.515817,7.075496,3.807345,-3.768215,2.400915,4.687123,5.867861,0.527109,-7.857827,-7.715096,3.678158,9.085099,-5.974547,-9.815337,-3.337129,-2.784464,-8.394612,8.093413,7.035640,-8.879731,-8.307565,5.481141,-0.652105,0.102661,7.962335,-5.499188,7.878793,-2.711461,-9.570659,1.611808,5.272642,-0.367556,7.614990,9.939055,-3.388997,2.367524,3.034256,-9.082254,5.117010,-0.284652,9.308726,2.498319,5.565469,2.079766,-9.141781,-1.327185,-0.236934,-1.194114,-2.035493,8.394767,2.463772,-3.012713,8.375103,-2.758103,-7.326761,5.792178,-8.600607,5.209355,-5.565963,6.595981,4.488522,-2.215533,-9.611465,0.246321,-6.015714,7.965364,3.424668,3.585163,-9.379215,9.435863,-9.994849,8.577568,-1.242253,-1.441575,7.902637,8.805066,0.908956,-8.953262,-8.183898,0.803835,-4.926659,3.949841,-3.039492,-0.696492,-6.662415,2.629426,-0.009381,9.776962,1.029082,-3.620178,4.795785,4.665440,5.375897,5.054115,9.039952,8.280802,1.168313,9.905517,6.188860,7.889960,-3.740635,-0.532886,5.388070,6.587402,-9.020387,2.195355,1.677101,-4.052553,-6.373838,5.827770,-0.684737,-2.399012,2.673297,8.895822,6.979882,-5.512300,-3.260091,3.925031,4.106712,-9.942229,-8.601565,6.558672,0.667917,-7.961001,1.373333,5.799882,-4.157054,-2.591996,-9.460185,-6.539403,-7.566384,0.860641,-0.496697,-7.956531,1.817536,2.114656,-6.577528,0.036158,-7.982939,7.290668,2.555875,-8.616770,-4.362069,3.401907,-9.689324,7.765755,0.555990,2.296872,7.682812,2.781375,6.059860,-6.146610,5.409036,0.488587,1.485148,-4.556239,1.683282,6.627790,3.175039,-4.908304,-8.389159,-8.015221,-4.688351,0.967966,9.055408,-4.265424,8.245301,-9.016374,8.981885,2.988830,-7.560140,3.211209,-1.577390,-8.308027,-7.577661,0.846252,-7.725047,-9.606340,-5.936402,-2.136117,-3.935598,-9.968608,3.161499,-4.613607,-7.641273,6.653018,8.247461,-6.282763,8.331882,5.450829,-5.032234,4.503772,-3.404034,8.127561,5.212620,-5.123469,9.645359,-2.046025,6.194003,6.386999,-2.188750,9.029622,1.813050,1.013143,-9.346741,-8.924997,3.898983,4.224828,6.403103,-1.719853,-7.801404,-3.665363,5.207848,-2.670136,-4.468820,-9.530646,-2.737942,-0.621858,-0.467672,8.987691,2.523902,3.794850,1.091377,-8.432581,3.419898,3.271494,-1.186535,2.389084,-0.702682,-0.304097,3.270383,9.527978,-7.453503,-5.506481,0.973626,8.937972,7.192142,-4.602126,5.756639,-3.898284,7.699265,-6.345628,3.844658,-0.567590,0.801308,-8.446369,0.589131,2.820891,-6.024435,-5.392959,1.152937,-6.174412,-6.420883,3.562211,0.776844,5.020357,6.671724,-8.418631,4.527742,1.760344,-9.070913,-8.331401,9.990020,3.891533,9.917224], dtype = "float64")#candidate|10601|(1352,)|const|float64
var_10602 = relay.var("var_10602", dtype = "float32", shape = (135, 3))#candidate|10602|(135, 3)|var|float32
const_10603 = relay.const([[-9,-1,-8,-7,-9,-2,-6,-1,-1,8,1,-3,-5,-5,-4,7,5,4,-7,10,-2,7,1,8,8,9,-6,-4,-7,7,-9,-3,-2,-10,2,3],[2,1,-1,-7,-4,10,1,1,2,9,10,-8,1,-9,7,6,-5,5,5,-5,-8,-9,7,-7,7,4,8,-10,-1,-1,-3,8,-3,4,-4,-4],[-3,3,2,1,-8,7,-7,6,-5,6,3,8,8,-3,-2,-9,2,5,2,3,10,-5,-8,5,-7,5,-9,-7,6,1,6,1,2,2,-1,-5],[9,-8,-2,-10,5,10,-8,-1,6,2,-2,10,8,-9,10,-8,3,-4,8,-3,-1,9,1,-4,5,-10,1,-2,-5,8,2,-2,3,-1,2,-5],[8,-4,7,-7,6,-9,9,-5,-10,-10,10,-1,-10,3,-6,-6,-4,3,-10,2,-10,-2,10,-5,-10,-7,7,-3,-8,-10,5,-9,8,-8,4,4],[-1,-3,4,3,3,6,8,8,4,-2,-7,5,5,-6,3,3,6,7,5,6,2,9,-9,-9,8,1,-4,-1,-2,-8,-6,-1,6,-2,7,-9],[8,-10,7,-2,-1,-8,-9,-2,7,8,-10,8,6,-8,-8,2,5,4,1,6,-1,5,-7,-1,-8,10,7,-7,-7,-3,-2,-2,-9,10,4,-10],[-2,5,3,-6,6,-2,-5,3,1,-9,-3,1,-9,1,-7,-10,-7,10,2,2,3,10,-10,2,-1,4,3,-7,6,-8,1,4,5,-8,4,-5]], dtype = "int64")#candidate|10603|(8, 36)|const|int64
var_10604 = relay.var("var_10604", dtype = "int32", shape = (48,))#candidate|10604|(48,)|var|int32
call_10600 = relay.TupleGetItem(func_2100_call(relay.reshape(const_10601.astype('float64'), [8, 13, 13]), relay.reshape(var_10602.astype('float32'), [405,]), relay.reshape(const_10603.astype('int64'), [8, 36]), relay.reshape(var_10604.astype('int32'), [2, 24]), ), 3)
call_10605 = relay.TupleGetItem(func_2105_call(relay.reshape(const_10601.astype('float64'), [8, 13, 13]), relay.reshape(var_10602.astype('float32'), [405,]), relay.reshape(const_10603.astype('int64'), [8, 36]), relay.reshape(var_10604.astype('int32'), [2, 24]), ), 3)
func_2688_call = mod.get_global_var('func_2688')
func_2690_call = mutated_mod.get_global_var('func_2690')
const_10614 = relay.const([4.436285,7.358737,-5.073715,-8.473694,-4.536535,5.119219,-3.694744,3.125935,2.920966,-2.557221,-9.297770,1.460169,-9.994749,7.712076,5.918932,-7.006338,-5.630376,1.394017,1.141782,-3.100688,-6.533750,3.374747,-6.229763,8.612212,8.475685,3.175244,-2.880286,5.753947,-0.355143,-6.828527,-6.501730,5.742814,-6.714997,1.208331,-7.272921,0.002430,3.510095,2.354821,2.791364,7.482737,1.028003,-1.868015,7.292101,-3.329148,-4.507319,8.506738,8.941290,-1.769312,-7.065068,0.145707,2.082453,5.802206,1.009808,-2.509479,-3.514377,-7.550735,-6.452016,1.499127,-6.933571,3.862608,-5.783428,2.895675,9.893410,-2.831432,7.092476,-5.628817,-7.875345,8.120396,1.928828,8.164484,7.665312,7.571274,-7.169310,1.990656,-5.774770,-1.892978,-3.847867,4.397635,6.245695,5.383874,5.341451,4.686790,0.645227,-5.226902,-0.241116,-7.444573,8.875646,1.378864,-3.164644,-0.045133,9.101036,-3.044612,-4.928655,-0.502588,9.158325,-4.145227,3.354763,-1.658311,-9.147376,6.017095,-7.687703,-4.438806,5.589023,-8.143876,-8.559088,3.120453,5.166463,7.927247,4.321837,8.315495,1.932267,0.414868,7.545030,-0.663825,-1.687026,-1.159079,7.977067,-6.819640,-0.994771,3.680105,1.629002,-4.446224,-9.097543,-7.154846,9.402824,-5.719780,3.026833,-0.901431,6.999940,-5.561985,-8.145445,2.493191,1.963080,2.570509,-1.595841,6.608674,1.951194,-5.926153,1.726834,0.033369,-6.178903,-8.499891,8.060257,-7.746250,7.795626,4.653630,1.508231,1.855072,-0.362499,-9.150988,5.725562,0.688509,1.002455,-7.530452,-9.404751,-2.863476,0.270711,6.441118,2.671179,-0.275364,-6.187607,-5.585421,-9.139519,7.651092,-3.023575,3.183786,7.540307,-9.696296,-2.448640,6.303913,-1.760781,7.124139,-8.432216,9.046179,-0.980127,-3.573092,2.032595,-4.562075,9.692704,-6.491658,8.535741,2.569593,-2.361035,0.781167,8.422611,-8.497915,-1.979856,4.379620,-3.692562,-2.375553,-7.638214,5.842739,-2.389883,9.693701,1.029858,9.106885,1.632289,9.366894,3.571123,-6.459418,-2.796159,-8.355173,-3.279585,2.253942,-6.199382,2.240432,2.889991,-6.007578,-9.878152,6.511003,-6.373288,-1.095336,7.260997,1.107309,6.625719,3.676289,-2.120124,-7.927589,-9.163399,6.416989,-2.283859,9.748728,-2.401282,9.754199,-8.579526,-3.882670,2.945613,-3.825060,4.913011,4.034011,-1.908395,-3.498329,0.234586,5.810365,-9.372635,-1.438947,-8.359332,-2.745312,-7.420207,7.588276,-5.742850,9.331886,3.973690,4.165072,5.142205,4.228850,5.422586,5.343062,-7.440569,-1.788867,5.054149,2.028342,8.278965,-7.502468,2.644767,-4.965332,-1.460287,-2.887626,3.430475,-0.953872,-4.518821,-3.488548,4.394575,-7.544312,5.191194,-2.656958,-0.463874,-7.820131,-4.440590,3.629485,-4.625967,5.986005,6.376723,-4.361604,7.149274,3.149768,-4.320737,-8.520795,1.785146,-0.300513,2.418693,-2.534826,-0.916425,0.133064,4.587471,4.146203,-4.156109,-6.548947,-1.457379,7.835750,1.729704,5.546705,-4.627736,8.156438,1.560881,-4.724498,7.293546,-7.303954,8.697383,-5.699546,-3.782917,1.120420,-6.699734,-0.221005,-7.469727,7.322320,-8.515577,-5.974568,-6.594522,8.345106,3.949155,-9.103377,-3.925001,-8.694693,0.454013,-1.241598,-1.476585,-3.334010,-3.744707,8.425750,-4.968706,-9.794768,-3.704568,-2.522350,1.383798,-4.655953,6.636391,8.799958,7.669577,-1.419878,-2.615052,-0.607857,-8.303430,9.896917,8.486615,8.101897,2.862119,-4.833669,-5.884996,-2.541628,-6.208097,-6.294053,-9.335803,8.871883,-3.703690,-5.191689,0.705952,4.172429,0.211586,-9.353882,-8.202953,0.436397,6.940080,2.996553,-9.246898,8.731380,-0.060433,-0.131759,8.642991,-7.250036,8.071255,-8.038959,0.527651,-4.358302,5.573826,3.139633,9.968128,4.786860,-8.644464,-6.164419,9.763428,-2.777165,-6.624656,-3.841837,-7.231038,8.497762,1.020840,-6.326195,7.588517,0.961305,2.703459,-5.334173,2.470598,-9.079695,-5.184259,-5.557968,-6.518527,1.866490,-1.650375,7.245519,-4.495567,-4.478095,-1.898806,-8.080233,-0.206668,-8.908561,-7.374612,-6.805021,5.169794,-5.996816,3.211225,0.971254,7.772293,-6.090835,-9.744084,-6.442611,-3.736226,-2.864966,-9.997214,2.357893,-8.484991,-5.092696,-6.706939,3.322232,6.231484,-8.583715,-5.683550,5.196999,-2.833536,1.789901,1.286273,-5.098423,5.296755,-3.188431,0.642529,-3.242052,-8.916801,0.936523,9.131838,-4.448621,-7.657020,8.402088,-9.740008,-0.195824,8.274264,2.652756,3.427535,-5.279625,-7.172056,-7.000464,-3.140225,3.258524,-8.409343,-3.746641,0.472788,-6.913456,6.828649,8.018255,-4.621814,-1.114519,0.317330,-4.650275,5.170029,6.368723,-6.303264,-0.110480,-6.043797,1.691487,-1.845123,-1.400160,-5.002198,7.527602,0.082544,8.221248,-1.789515,9.196589,5.722327,-4.507636], dtype = "float32")#candidate|10614|(468,)|const|float32
call_10613 = func_2688_call(relay.reshape(const_10614.astype('float32'), [4, 13, 9]))
call_10615 = func_2688_call(relay.reshape(const_10614.astype('float32'), [4, 13, 9]))
uop_10621 = relay.acosh(uop_10582.astype('float64')) # shape=(7, 2, 15)
uop_10623 = relay.acosh(uop_10584.astype('float64')) # shape=(7, 2, 15)
func_8385_call = mod.get_global_var('func_8385')
func_8387_call = mutated_mod.get_global_var('func_8387')
const_10625 = relay.const([-2.872115,1.873724,-3.032203,-8.398867,-1.048234,-1.277653,7.521096,2.150650,4.124249,-6.069687,-5.820690,-7.537203,-5.608517,-1.481603,-7.477305,-5.052251,5.779989,4.635706,-2.430152,6.962323,-1.941024,0.480681,-9.951462,-0.820038,-5.979965,0.216802,2.218400,2.284182,-3.879812,8.474041,6.365025,6.401273,8.503268,-7.662699,0.145270,-3.026380,7.133035,7.347313,-6.184210,5.846238,-0.595650,-7.785104,-8.382968,3.327001,1.806371,1.544454,-4.209090,-7.607650,-7.681961,5.843500,-1.672195,1.969797,7.536578,3.113441,-7.158483,4.439955,-9.822281,-5.294628,8.645709,0.315609,-5.909061,8.623865,9.639662,-1.126409,-7.301208,9.921572,1.907533,-5.579249,7.393985,2.327963,-4.002280,-5.380172,-9.678639,9.875912,-0.131617,-5.910205,-2.189539,-4.622959,4.124817,4.120853,-0.722842,-7.920849,2.414450,8.553214,8.766553,-7.250073,5.734117,-2.128610,8.398408,8.724839,-2.471349,-0.234866,7.820659,-6.568128,0.198630,-2.093775,7.979037,8.607356,1.109674,6.666621,9.920922,-2.179519,0.452710,-2.412778,-0.166152,-7.234114,-7.373001,3.764473,6.754508,-4.159740,1.370525,0.093916,-6.306488,6.418961,9.786347,-4.495521,-1.259025,5.483604,7.364206,-7.202035,2.775711,-3.867340,7.073534,6.866125,6.460754,7.119131,-3.503015,3.653681,-8.276473,-0.781561,-2.973349,-6.271218,5.194962,-8.074300,-7.981017,-4.907589,8.307974,2.933533,8.268940,-1.822500,-4.746519,8.004487,-8.390108,7.234919,-3.950611,-8.665859,-7.572057,1.370413,-6.992999,-3.682605,7.985963,-4.693297,5.724478,3.015654,-2.184182,-0.276798,-3.779643,8.915747,-8.539566,4.736731,-5.054122,6.932329,-2.750924,-1.024840,-7.384788,2.201830,3.457538,9.281164,7.983816,9.069621,-6.654747,3.141864,-5.871284,4.394417,3.797688,8.648654,-7.295354,8.230154,3.000462,7.379695,-0.780192,5.280059,-2.517908,3.961691,-9.201219,7.711493,-0.287598,5.279733,7.083689,9.580706,6.058220,-5.452785,-7.554927,-5.195696,4.903853,6.289738,9.143762,4.432464,3.384079,7.298463,-8.486437,-7.604271,0.324515,1.821649,-4.278594,-5.825899,4.271018,0.546406,-4.789726,8.999274,3.497358,2.589039,-9.110176,-9.475513,8.966153,6.246598,-3.460384,-6.831064,6.329045,-6.112342,9.761160,9.751660,9.489816,-1.584751,-6.509149,0.534484,-6.825210,-1.188676,-5.321149,6.516770,0.907254,0.810470,-4.768747,3.861230,8.409107,-4.883013,-3.301957,2.326667,-9.308398,5.352002,1.253148,7.632391,-4.974095,-9.766873,-3.821022,-7.730598,-5.434585,-7.633639,-2.647548,-8.919434,7.832404,-1.878382,-8.859365,-5.890112,7.735840,-4.421665,-9.535160,-3.120893,5.269011,5.863866,-7.198080,8.403246,2.467868,-6.886532,-8.679795,2.292769,8.872820,9.655207,6.148072,-6.085451,-8.196772,-6.285060,-0.006927,5.713886,7.633454,-0.952845,-7.841016,0.655270,0.466609,8.402142,-5.335385,2.257297,-3.577200,-3.192716,-7.070727,-1.927613,7.477740,-7.741586,-6.150762,8.652493,-9.447930,0.949434,-1.745593,0.222138,-3.308086,7.258622,6.707506,-0.154366,2.955182,-5.955029,-2.476995,-0.863092,6.617738,0.680517,-4.520256,2.499155,-8.646405,-2.134556,2.556412,-1.448568,-6.986398,6.996213,1.308964,-9.027684,-7.165439,-1.235252,8.179569,-1.118990,5.846314,-8.105307,-0.322118,1.421501,3.928569,1.897247,0.923140,-4.115816,4.868936,4.699606,-9.902702,-1.831563,-4.609746,2.275973,1.379652,-3.058321,5.675907,3.193006,2.020325,0.932445,-1.605619,4.864798,-7.677835,8.221718,6.848761,-0.796639,-7.209339,-6.436319,-0.234904,8.625290,8.045787,-2.490514,-1.511474,8.701244,-1.307138,-6.273795,4.973616,-0.202968,-1.269051,-7.963821,9.021687,1.998125,6.631704,-8.385278,0.429697,1.432572,-5.250489,8.999381,4.378331,-0.423456,0.971028,-2.648701,-0.848337,3.633067,8.516579,6.010524,-3.790877,-9.723848,-5.635930,3.105458,-2.118532,5.194976,1.082547,-0.543358,4.886239,-1.585297,6.668608,4.196628,-5.475368,-8.048004,-3.917132,-8.753791,-8.382415,-6.053206,7.445406,-7.546743,7.180941,-3.372272,4.281015,8.173391,7.531606,7.171400,8.933445,6.394534,9.827759,4.414795,3.852822,1.430586,-0.434306,-7.264511,5.160072,-2.486098,-2.165386,1.533761,5.711854,-8.511978,7.379843,4.071647,3.198065,-0.916463,5.242955,-9.512164,2.893303,-5.099347,-5.136550,5.639682,-1.682252,-1.428999,4.872197,-0.098183,-7.498316,7.098328,-3.748330,-2.584161,1.058006,5.100735,-9.165372,0.551757,9.284627,-4.960991,9.832436,5.680493,6.717670,-2.285345,-3.159933,7.815346,-1.508753,-4.591897,0.004145,-4.713088,8.397916,1.010939,2.219220,6.084648,9.063268,-4.685839,0.246382,-1.002476,8.906906,2.607744,5.136175,5.249447,-0.181392,-4.179881,-6.870340,-0.907789,-5.616923,-0.493941,8.940718,-0.061252,3.014422,7.965830,1.210955,3.201105,-6.163888,-7.445612,1.699488,6.253117,2.019841,4.735973,-0.249914,0.163854,-6.594406,3.845593,3.844018,-0.618389,-8.400177,7.151682,3.162619,3.130275,-4.072690,7.670232,9.447911,4.920805,-0.728363,-4.422532,-7.991556,-7.106127,6.307082,-6.541763,5.388585,3.496194,-3.997894,5.369880,5.651423,-3.807610,-0.658784,2.661328,-9.655049,-6.208457,-1.178263,-3.769633,-3.674638,2.684580,-4.420108,-6.688997,-2.675910,7.147414,2.119418,-8.900466,9.032767,-8.779358,-5.458945,0.402484,-2.114674,3.455882,9.233121,4.028621,-0.165634,9.682126,9.912280,6.237874,-9.021106,-5.405192,4.411746,-3.838097,5.401601,2.658482,1.730172,2.134472,-7.426052,-9.527154,-1.758354,-7.987972,-8.983415,8.022981,4.222773,9.350165,0.172543,7.101787,-6.375757,-9.450579,-3.743601,6.046366,-4.535730,5.862284,8.184245,-2.714902,-7.594012,9.625064,5.540486,-1.817668,7.967734,-3.833913,4.067535,5.503634,2.571628,-2.850738,6.608505,2.138647,-7.924582,3.484723,-6.424791,1.691095,-0.663709,7.501400,1.884664,-3.785797,8.937934,0.627250,4.286914,-1.202087,-6.701761,-7.336688,-6.283551,-5.741385,2.764449,9.123344,6.489884,-8.936384,0.081394,4.680378,5.579403,9.099409,-2.134793,5.397914,1.932426,8.564814,-7.641629,-4.098057,4.545448,3.246968,-6.765705,8.835180,1.388017,2.296916,3.544514,3.075977,-3.818516,-7.026641,-5.069304,-3.305608,1.165926,2.554784,-4.854824,8.899224,-5.011170,-6.373374,4.693932,4.076515,7.828783,2.199860,3.618716,5.837470,2.179046,7.807755,0.699694,9.275769,7.953280,9.340924,-3.364259,0.682003,6.014775,6.188166,5.045039,-1.168553,7.208594,-4.281870,-8.570144,4.093521,8.763588,7.557367,-4.666723,1.432557,-4.128166,4.448334,4.837805,8.424751,-4.827504,8.632556,6.629978,-4.095014,9.402688,-0.170286,-1.171627,9.862156,-3.351588,9.648925,-8.159011,-6.360876,9.038105,3.040265,-4.436162,3.156723,-6.677304,3.562116,-0.495953,-0.396545,-7.831635,-7.231330,-9.064348,-8.271942,-4.509302,-0.381381,-7.884762,2.418093,-5.113779,6.293539,-2.627308,-5.636221,6.462293,-5.450671,8.724615,-5.667702,4.665931,6.048537,-8.967592,-2.435966,3.920406,2.427193,2.122819,1.714962,-9.762413,3.292488,5.002892,2.948970,1.794865,1.115719,-2.358698,-1.366315,-6.204180,-1.937970,2.738184,2.836368,7.745174,-2.843044,-0.874956,-9.449962,-5.022122,2.435453,8.527788,6.974875,-5.051004,-8.814951,-1.877553,0.198927,-3.151864,2.785572,-4.316182,-7.156317,-6.594414,0.160127,-5.843296,7.174843,5.797370,-7.227757,4.933625,5.201534,-8.118851,-2.711946,-9.266468,1.824281,7.841502,-8.381488,-5.460782,1.198511,8.471027,5.574162,9.783401,4.066997,6.518815,4.862439,8.061039,-9.697784,-3.187773,-3.519281,-2.037795,3.209873,-3.526372,-6.943445,-8.630470,7.314712,-5.884609,2.793220,4.505123,-6.620841,1.942672,8.642987,-5.396942,-0.276436,4.654848,8.529467,5.204851,0.055855,-2.971385,-3.613104,-7.733675,-0.386797,-7.032522,-3.303471,-8.852582,-2.448314,-8.075259,-0.899426,6.404277,-5.762150,6.162660,9.267225,-8.050181,9.958538,-4.060845,-9.910213,5.436520,7.468850,-2.722121,-4.588280,-6.959136,-7.644238,-4.784750,5.125066,-8.886278,-8.010468,0.069983,-4.911975,0.299132,-5.079478,3.350086,-1.016688,1.211882,-9.973191,4.422466,8.377801,4.233182,-1.323035,-9.285884,2.282006,4.428980,1.927162,0.501866,0.503621,5.877571,-1.438169,-0.832465,7.400889,-0.300273,6.179843,-3.659621,3.054058,0.930549,-4.287704,5.549926,-5.139583,5.134637,4.485253,0.312789,0.982359,-4.591404,3.213846,-9.151613,7.165234,-8.377574,-0.245679,6.376467,-0.832771,-8.126091,-8.922013,-8.218684,-9.974426,-4.809995,3.859203,-2.901501,-3.277476,-4.221303,1.811638,5.304505,-0.585305,-8.158548,-9.473928,-6.362171,-5.145205,8.692296,8.240197,2.938132,-1.267547,8.395446,8.350625,-4.846773,1.188216,9.316761,-5.021947,6.465824,-0.850905,7.557597,0.852006,8.805298,-9.941520,-9.803706,-5.716008,-0.049043,-5.771389,-5.098613,8.380992,3.977852,-5.884133,-7.644524,0.393922,7.310939,9.442118,3.435933,-8.527204,-6.594787,6.693314,-3.756359,-2.787402,-6.012448,7.391552,-6.294670,-5.975185,7.943673,-5.281313,0.851286,1.939874,6.955562,0.130955,3.861106,7.781885,2.956305,-1.372251,-3.098744,-5.627732,5.134979,-9.525830,-2.123533,-5.718620,2.658368,4.514095,-9.277295,7.369824,5.956613,-2.596225,-7.540754,-4.570795,8.863827,-9.302283,6.905372,-4.867392,-7.864090,-7.154377,1.607699,-4.593704,5.256144,3.782026,-2.948905,9.976110,-6.512340,-8.321513,6.008831,-0.470367,9.819573,9.312307,5.927896,-3.782450,-8.801393,-4.914115,7.600247,-2.199388,2.106213,-3.489958,-6.238695,4.742319,-7.315232,9.827537,3.940263,-8.652512,-3.453120,8.805562,0.493678,3.415247,6.603796,-0.654073,-0.832334,3.835998,-6.338562,5.787184,-9.571880,0.063859,-1.498318,-5.398527,-2.850432,7.518534,-4.824709,-4.571898,-5.880452,1.631084,-3.909132,-2.965657,-3.401337,-7.588891,9.600041,1.900394,-2.326216,-2.818652,-3.473943,-6.349139,4.682559,4.639148,2.405215,-2.976350,-5.124278,6.499274,3.582699,7.044864,1.862712,-9.316708,-7.307050,-9.251702,8.646599,8.774293,-7.838236,-8.381440,6.029556,4.335344,-3.303481,-7.979025,-6.251931,4.991193,7.116292,1.035390,-6.082286,-5.873078,-5.259951,7.174355,0.780167,8.767151,0.426242,-2.680078,2.254455,0.216990,6.931726,-9.926666,1.577321,8.559089,4.570728,4.257752,-1.917149,-1.584519,3.026278,-1.380064,-0.875847,-1.979077,-1.993332,0.195440,-6.026606,8.455163,-2.079075,5.685306,3.667802,0.489696,-8.909565,-8.440422,-8.782597,5.375317,-1.582130,-7.785658,4.917437,-7.668229,7.656612,0.226054,-6.706780,8.561763,5.461372,-1.910081,4.695373,4.125349,9.549643,6.469859,-1.040911,9.080327,-1.400218,4.763834,-0.055163,4.943921,0.361063,8.202215,2.182402,2.028916,-4.407464,0.809755,6.026658,3.097158,-9.980895,-8.593118,4.417190,-1.488195,3.121869,2.022292,7.907169,-4.909854,4.075515,2.077590,-4.126722,5.260924,-1.519678,0.613072,0.431072,-6.004560,1.768045,-7.311567,-7.837702,-7.709698,2.221058,0.494837,2.933989,9.597841,-9.414996,5.120095,1.989156,7.468667,-6.010003,2.850889,2.530307,1.003054,-2.720579,6.214785,-2.224291,5.607300,0.824532,7.139534,-7.822185,9.170490,1.018409,9.090530,-2.839441,-6.688800,6.932689,-8.820213,-1.267018,2.451376,-6.265881,6.118453,0.352891,-1.708979,-1.842495,3.745291,-4.327025,5.973401,3.939917,6.997690,5.541626,-5.388456,7.063546,2.424607,3.698222,1.112180,4.555605,-6.802863,9.363236,8.675137,-5.906858,-1.912572,0.803443,-6.172210,-3.846005,-8.930476,-4.304111,7.945880,-7.561085,9.677027,1.067903,1.089074,8.985922,1.205767,-0.247052,-3.662229,9.920770,0.893069], dtype = "float64")#candidate|10625|(1144,)|const|float64
call_10624 = func_8385_call(relay.reshape(const_10625.astype('float64'), [13, 11, 8]))
call_10626 = func_8385_call(relay.reshape(const_10625.astype('float64'), [13, 11, 8]))
output = relay.Tuple([call_10600,const_10601,var_10602,const_10603,var_10604,call_10613,const_10614,uop_10621,call_10624,const_10625,])
output2 = relay.Tuple([call_10605,const_10601,var_10602,const_10603,var_10604,call_10615,const_10614,uop_10623,call_10626,const_10625,])
func_10640 = relay.Function([var_10602,var_10604,], output)
mod['func_10640'] = func_10640
mod = relay.transform.InferType()(mod)
mutated_mod['func_10640'] = func_10640
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10640_call = mutated_mod.get_global_var('func_10640')
var_10642 = relay.var("var_10642", dtype = "float32", shape = (135, 3))#candidate|10642|(135, 3)|var|float32
var_10643 = relay.var("var_10643", dtype = "int32", shape = (48,))#candidate|10643|(48,)|var|int32
call_10641 = func_10640_call(var_10642,var_10643,)
output = call_10641
func_10644 = relay.Function([var_10642,var_10643,], output)
mutated_mod['func_10644'] = func_10644
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8702_call = mod.get_global_var('func_8702')
func_8703_call = mutated_mod.get_global_var('func_8703')
call_10650 = func_8702_call()
call_10651 = func_8702_call()
func_2688_call = mod.get_global_var('func_2688')
func_2690_call = mutated_mod.get_global_var('func_2690')
const_10667 = relay.const([9.511744,-1.645516,-1.020492,4.363394,-8.925200,2.771387,4.129160,-6.123989,-8.147022,2.020545,5.007283,-7.143209,3.150193,-8.674047,3.098004,-0.016168,5.369625,4.846599,6.354717,-6.426801,-9.012512,7.170454,4.323258,-4.543873,-3.096566,8.875063,-5.030802,0.614511,-0.302344,-7.692783,-9.973675,-9.372815,-7.674393,8.718551,-7.690921,8.589080,-5.874328,7.507175,8.502753,3.946029,3.988303,8.541013,-9.238959,7.381665,8.840506,-6.387126,-7.039616,0.382649,0.350560,-7.568454,4.642065,-3.413484,3.688583,0.074431,5.527615,-1.353843,0.155979,-6.384672,-0.156012,5.759168,-4.164046,3.044274,-5.934135,5.052899,-5.501279,-2.100442,1.878121,9.271183,-9.247055,9.487598,2.638844,-6.813641,-8.826677,1.609247,-0.712235,-1.349475,-1.621601,-9.971243,-4.339560,-8.245361,1.228697,-3.268629,9.790661,5.505219,7.711849,-0.864940,1.472467,0.456630,4.772491,-0.692641,2.402218,-4.925157,0.154893,0.175839,-6.487269,-2.509415,-2.215282,3.651639,-8.434295,0.225185,4.639956,-1.772244,-5.642474,-1.624907,-8.281780,1.904887,0.047807,-7.249736,-0.086322,7.360637,3.147745,1.614447,-0.392499,-1.352452,3.725077,-2.610992,7.894809,1.434167,6.585458,1.608509,2.747002,5.155203,2.857436,3.516299,0.656278,-8.081471,-7.354570,-8.328237,-1.360092,1.496869,-3.283964,9.406836,-2.418432,9.877726,-8.090840,-9.151939,-1.254135,5.715532,1.312245,6.732605,0.030711,9.739483,4.265280,-2.565661,-3.382294,-6.928723,-5.406962,-0.377512,-9.045648,-2.164952,5.339027,-5.758792,-5.392917,2.567895,-2.573312,5.220485,-1.096113,6.123297,-6.962627,-0.764075,7.695837,-8.721748,-2.023330,7.235334,-6.797823,9.657805,-0.895134,0.820698,1.430041,-9.992761,-6.691825,9.062941,-2.844963,-6.277957,3.349090,-0.130063,5.637894,-4.255315,7.096493,9.699239,5.948891,2.870120,-6.983392,-3.952101,3.595292,-4.604650,-5.914153,8.905578,-7.017571,-9.890903,-8.714006,1.024464,2.946963,5.980505,7.953464,-2.767592,4.403622,-6.915391,2.304526,-8.062010,1.561165,-1.618244,-5.914501,-8.246526,3.125993,-5.477075,8.989326,-3.996104,1.619131,-8.046672,-0.058055,1.416411,-3.638587,1.620047,4.114630,0.607913,-0.275763,-7.246057,9.234677,-2.341694,4.857652,-9.261877,-8.785916,2.272111,-3.565333,-3.078804,0.380543,-2.956682,4.538736,0.485102,7.320157,1.974115,-9.114265,5.824710,-2.677911,-9.342084,-6.373870,4.430974,9.013408,0.789914,-6.201970,-2.726858,4.297283,6.776943,9.422077,1.973790,8.368318,-5.812912,1.858468,1.046236,4.940072,7.690425,-3.063127,-4.289086,-7.978565,1.326171,4.133481,-2.842296,7.104911,5.133447,-4.217366,3.307890,5.546037,6.133840,0.984340,1.693711,-8.196817,6.469005,9.710270,7.097501,2.623217,-0.412912,-3.730072,2.964426,-3.239272,-3.801339,-3.430886,3.596560,-8.260148,-4.184585,5.717096,-4.723712,-0.782926,7.435881,-1.608111,9.150151,5.293272,-3.442629,-3.745063,5.738861,3.348069,9.964428,-5.529671,1.648722,1.600197,-1.422620,9.541090,5.880334,-1.370256,0.170188,2.192503,-6.880011,-0.858015,-1.285975,5.511897,-3.194618,-3.638246,-2.750747,-6.719906,8.363894,9.112562,-3.649656,-2.320501,-2.207374,-3.345215,1.537190,7.530206,9.021970,5.996240,-1.779114,1.731048,9.017669,1.682821,-3.603500,8.027545,3.302344,-7.540498,-6.698734,9.853341,1.706734,-4.112567,2.955812,9.703626,-6.786779,0.150167,7.280753,6.992389,-5.936535,-8.935046,-0.178203,-9.304879,-2.141422,9.833465,5.587682,7.007910,2.144428,-7.032559,1.998155,5.136978,-0.832871,7.232839,7.471276,-9.563369,7.218775,7.750069,-4.873254,0.035098,-2.973378,1.476306,-0.488562,-5.023623,8.905421,-2.676998,-2.318421,-5.860561,-4.216335,-8.223429,-2.030961,5.940645,4.112305,5.541668,-9.024395,-8.329083,4.127063,7.607400,0.905465,2.716907,-3.990794,0.641475,9.382782,6.190278,7.220643,-0.901339,-0.475224,3.841644,-7.043801,5.845591,-3.462132,1.889697,-7.413980,1.913465,-4.156057,-0.067621,-6.024824,-7.949444,8.730944,-4.285951,2.446471,-4.899540,-3.704412,-3.736821,-9.968548,-2.172872,0.512886,-8.649388,-3.581987,7.288957,1.198175,5.630828,-0.300329,1.164001,8.978188,-3.684969,-4.439068,-1.980173,1.145497,7.908688,-1.615224,-2.846617,2.959301,5.990719,-2.744623,0.764597,-1.012000,4.950522,-7.015571,-3.216383,-4.841909,-9.073781,1.893329,-5.079657,2.939068,-5.835138,6.427271,-7.199322,-5.139203,-0.797769,-6.848462,-5.544084,-6.258929,7.144382,-8.466027,-7.471480,2.910471,-3.507089,2.719931,0.683096,-9.999538,-8.573470,-3.252228,5.336853,5.534774,7.624721,1.428679,-6.040807,2.481371,-5.327237,-6.802734,7.569753,0.389508,-5.452913,-8.682069,-5.100938,-9.447810,-1.587909,2.026297,8.098254,6.904254], dtype = "float32")#candidate|10667|(468,)|const|float32
call_10666 = func_2688_call(relay.reshape(const_10667.astype('float32'), [4, 13, 9]))
call_10668 = func_2688_call(relay.reshape(const_10667.astype('float32'), [4, 13, 9]))
func_10102_call = mod.get_global_var('func_10102')
func_10103_call = mutated_mod.get_global_var('func_10103')
call_10669 = func_10102_call()
call_10670 = func_10102_call()
output = relay.Tuple([call_10650,call_10666,const_10667,call_10669,])
output2 = relay.Tuple([call_10651,call_10668,const_10667,call_10670,])
func_10681 = relay.Function([], output)
mod['func_10681'] = func_10681
mod = relay.transform.InferType()(mod)
mutated_mod['func_10681'] = func_10681
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10681_call = mutated_mod.get_global_var('func_10681')
call_10682 = func_10681_call()
output = call_10682
func_10683 = relay.Function([], output)
mutated_mod['func_10683'] = func_10683
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7115_call = mod.get_global_var('func_7115')
func_7116_call = mutated_mod.get_global_var('func_7116')
call_10684 = func_7115_call()
call_10685 = func_7115_call()
output = relay.Tuple([call_10684,])
output2 = relay.Tuple([call_10685,])
func_10710 = relay.Function([], output)
mod['func_10710'] = func_10710
mod = relay.transform.InferType()(mod)
output = func_10710()
func_10711 = relay.Function([], output)
mutated_mod['func_10711'] = func_10711
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9833_call = mod.get_global_var('func_9833')
func_9834_call = mutated_mod.get_global_var('func_9834')
call_10735 = relay.TupleGetItem(func_9833_call(), 0)
call_10736 = relay.TupleGetItem(func_9834_call(), 0)
func_1608_call = mod.get_global_var('func_1608')
func_1611_call = mutated_mod.get_global_var('func_1611')
const_10745 = relay.const([8.915393,4.886077,-7.929345,-3.148877,8.223435,2.754558,-9.128373,9.342789,-5.879743,-1.309909,-3.730434,-4.748305,-4.671022,-3.946743,7.273334,-4.482481,6.914222,7.205504,0.701895,-6.782339,-8.662387,6.046041,2.035215,9.187731,9.384742,0.871931,6.782685,7.178107,5.917266,-5.843919,5.870477,-8.471066,-2.270595,3.216510,3.241388,-5.747964,4.453111,-7.355265,-9.771010,-4.264699,5.102784,9.548377,-7.188332,-2.637776,-7.982642,-7.914901,-9.531785,1.924320,5.655515,-7.250619,-8.993050,-2.297491,-0.666807,-0.218953,-1.184762,-4.437295,5.545901,6.647574,-0.146930,4.055802,-0.583811,5.298500,-3.555624,6.509217,2.573958,-5.319916,-4.337547,8.727613,9.191402,-7.201512,-4.336533,-0.126041,-4.795309,1.643140,7.298569,-2.048827,2.805667,-3.455672,-0.235919,8.966657,7.075886,6.830590,-2.074387,4.260822,-6.013689,-2.054997,-7.109855,-8.160076,-4.385500,-1.424697,8.337914,4.793662,-9.503096,-2.133697,5.263655,-9.849959,-5.600066,-9.029192,-2.942431,-3.564919,1.528085,1.788236,6.907404,3.259387,-2.489554,-9.738954,-5.209076,-3.487102,2.376272,4.373032,-9.185090,-6.798326,1.709942,9.108223,-7.372238,-1.000462,-2.721092,9.792113,-6.476161,5.803361,-2.499761,-0.164788,9.348613,3.526623,7.015639,1.889254,-6.202591,-3.573615,3.195748,1.047307,-4.213120,1.759329,-9.298852,-9.349377,1.469822,9.948331,7.711842,-0.390282,-5.084065,-8.668512,-8.702315,5.711838,9.354175,-0.351899,6.743514,-5.281135,-7.922876,1.571539,-7.547348,0.199951,5.889765,-0.992881,-1.077801,-0.010183,-4.967925,-9.865430,-1.349858,-0.536497,-8.970166,-6.249399,-9.512912,2.424707,4.492452,9.460385,-3.344261,0.390920,8.137528,2.570619,7.719858,-6.059521,-6.312215,-9.991388,-1.664863,-2.378694,-3.258309,0.494312,4.064442,0.038833,9.460529,-6.351026,8.767076,0.190989,7.140705,-8.582356,-2.224773,3.726533,8.977101,-2.130737,-9.111501,-4.536395,5.766328,3.735195,-6.784787,9.155374,-9.628696,-8.467003,-6.465515,-1.799736,-9.656765,-0.112803,-5.350102,7.392172,2.696099,7.965749,-3.049281,-4.921937,9.775558,-9.972640,-1.190000,1.565422,1.340284,-1.528738,-9.673546,-8.337482,3.173690,2.697651,-2.240030,-2.375259,-6.416790,2.412676,9.159400,4.662277,9.080366,9.720714,6.743608,-2.630018,-0.785936,-7.231487,-0.243421,2.253688,0.308086,6.365615,3.686794,-5.050435,8.178091,-2.625596,1.344349,-6.060987,3.986878,3.128037,-1.911033,4.587501,-6.819137,3.581892,-1.093735,3.991546,-3.188022,3.329542,-4.884618,6.208946,2.061376,-7.370673,8.607641,-6.246565,-8.097573,-9.424916,4.821928,6.492925,4.258792,-5.250195,6.825158,-0.607477,-4.137298,1.801241,0.876277,7.865825,-3.058757,5.841522,-4.606954,-5.358946,3.359846,6.751357,1.597224,7.390107,-6.954451,-8.094481,5.011987,5.751356,8.428597,-6.008719,2.421766,0.142218,3.257612,-2.127343,-0.712220,2.129838,2.154460,6.154683,1.730759,8.884672,-9.214274,-0.649043,-5.115406,-0.364893,-1.432472,-7.274221,-9.926650,-8.155672,1.309651,2.426059,4.415119,7.168530,9.766476,9.142175,3.862451,-0.693233,1.706923,6.256385,-7.877025,4.014129,-8.250008,7.362327,8.500789,2.180664,-1.732483,7.952243,5.500156,-8.823028,3.994212,2.358657,-8.202046,-3.968973,-2.583802,-4.296424,5.715863,-1.343140,7.937589,-0.903252,3.335308,5.333898,-8.033939,8.905155,-2.813603,0.189961,-9.007793,-8.890158,-0.674565,-8.497735,9.093090,-1.890139,-0.189099,-3.531961,-7.229792,-5.975310,-5.152803,6.733329,-8.933646,-5.242842,-1.344886,-3.912783,2.293307,4.539878,-1.124832,-6.589246,-6.437146,-8.589795,4.799702,4.147058,-4.466345,2.273631,2.362738,0.183038,-2.804546,-5.911428,5.044686,0.815691,-4.664684,9.969121,-3.070471,-2.759199,-9.337289,0.619859,0.289538,7.513472,-6.526123,4.168147,1.792965,-4.703854,-1.584844,-6.708855,8.412143,-8.306520,-2.891582,-3.129433,-6.689770,-5.331958,-6.169773,-9.512820,-9.773525,5.215175,1.780468,-5.032518,8.858214,-4.779298,-0.638279,-8.590301,-9.534094,8.341968,-0.864704,1.288497,-0.199699,3.253824,9.285418,-2.389524,0.513736,-0.789046,-1.808554,1.279499,0.289270,-0.562054,-8.752686,-6.322483,6.401693,6.563465,2.157882,-9.698785,-5.661163,-7.437618,-3.747137,7.148828,-7.303838,-3.535915,5.767233,9.210965,4.741700,-7.543360,-7.714759,-9.132401,-1.998325,5.773904,-5.558406,2.389898,4.301024,-0.992306,-2.759830,9.070653,6.321931,-0.061663,5.015202,-0.386280,8.485222,-6.054960,3.229986,8.649538,-3.894639,7.264671,3.738077,-6.984053,7.226084,-3.638284,-1.640825,-6.185275,3.082181,-5.490781,-2.454262,4.334806,5.768681,2.714262,-3.146585,-0.500060,3.210828,6.569503,-0.941777,5.896494,-0.693157,-5.491753,5.006020,-8.558894], dtype = "float32")#candidate|10745|(468,)|const|float32
call_10744 = relay.TupleGetItem(func_1608_call(relay.reshape(const_10745.astype('float32'), [468,])), 0)
call_10746 = relay.TupleGetItem(func_1611_call(relay.reshape(const_10745.astype('float32'), [468,])), 0)
output = relay.Tuple([call_10735,call_10744,const_10745,])
output2 = relay.Tuple([call_10736,call_10746,const_10745,])
func_10754 = relay.Function([], output)
mod['func_10754'] = func_10754
mod = relay.transform.InferType()(mod)
mutated_mod['func_10754'] = func_10754
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10754_call = mutated_mod.get_global_var('func_10754')
call_10755 = func_10754_call()
output = call_10755
func_10756 = relay.Function([], output)
mutated_mod['func_10756'] = func_10756
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10773 = relay.var("var_10773", dtype = "float32", shape = (6, 1, 15))#candidate|10773|(6, 1, 15)|var|float32
uop_10774 = relay.sinh(var_10773.astype('float32')) # shape=(6, 1, 15)
uop_10786 = relay.log2(uop_10774.astype('float64')) # shape=(6, 1, 15)
bop_10788 = relay.greater(var_10773.astype('bool'), relay.reshape(uop_10786.astype('bool'), relay.shape_of(var_10773))) # shape=(6, 1, 15)
output = bop_10788
output2 = bop_10788
func_10793 = relay.Function([var_10773,], output)
mod['func_10793'] = func_10793
mod = relay.transform.InferType()(mod)
var_10794 = relay.var("var_10794", dtype = "float32", shape = (6, 1, 15))#candidate|10794|(6, 1, 15)|var|float32
output = func_10793(var_10794)
func_10795 = relay.Function([var_10794], output)
mutated_mod['func_10795'] = func_10795
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7506_call = mod.get_global_var('func_7506')
func_7507_call = mutated_mod.get_global_var('func_7507')
call_10806 = relay.TupleGetItem(func_7506_call(), 0)
call_10807 = relay.TupleGetItem(func_7507_call(), 0)
output = call_10806
output2 = call_10807
func_10808 = relay.Function([], output)
mod['func_10808'] = func_10808
mod = relay.transform.InferType()(mod)
mutated_mod['func_10808'] = func_10808
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10808_call = mutated_mod.get_global_var('func_10808')
call_10809 = func_10808_call()
output = call_10809
func_10810 = relay.Function([], output)
mutated_mod['func_10810'] = func_10810
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8291_call = mod.get_global_var('func_8291')
func_8292_call = mutated_mod.get_global_var('func_8292')
call_10874 = func_8291_call()
call_10875 = func_8291_call()
func_10640_call = mod.get_global_var('func_10640')
func_10644_call = mutated_mod.get_global_var('func_10644')
var_10877 = relay.var("var_10877", dtype = "float32", shape = (405,))#candidate|10877|(405,)|var|float32
var_10878 = relay.var("var_10878", dtype = "int32", shape = (24, 2))#candidate|10878|(24, 2)|var|int32
call_10876 = relay.TupleGetItem(func_10640_call(relay.reshape(var_10877.astype('float32'), [135, 3]), relay.reshape(var_10878.astype('int32'), [48,]), ), 6)
call_10879 = relay.TupleGetItem(func_10644_call(relay.reshape(var_10877.astype('float32'), [135, 3]), relay.reshape(var_10878.astype('int32'), [48,]), ), 6)
output = relay.Tuple([call_10874,call_10876,var_10877,var_10878,])
output2 = relay.Tuple([call_10875,call_10879,var_10877,var_10878,])
func_10887 = relay.Function([var_10877,var_10878,], output)
mod['func_10887'] = func_10887
mod = relay.transform.InferType()(mod)
mutated_mod['func_10887'] = func_10887
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10887_call = mutated_mod.get_global_var('func_10887')
var_10889 = relay.var("var_10889", dtype = "float32", shape = (405,))#candidate|10889|(405,)|var|float32
var_10890 = relay.var("var_10890", dtype = "int32", shape = (24, 2))#candidate|10890|(24, 2)|var|int32
call_10888 = func_10887_call(var_10889,var_10890,)
output = call_10888
func_10891 = relay.Function([var_10889,var_10890,], output)
mutated_mod['func_10891'] = func_10891
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9296_call = mod.get_global_var('func_9296')
func_9297_call = mutated_mod.get_global_var('func_9297')
call_10901 = func_9296_call()
call_10902 = func_9296_call()
output = call_10901
output2 = call_10902
func_10907 = relay.Function([], output)
mod['func_10907'] = func_10907
mod = relay.transform.InferType()(mod)
output = func_10907()
func_10908 = relay.Function([], output)
mutated_mod['func_10908'] = func_10908
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8222_call = mod.get_global_var('func_8222')
func_8224_call = mutated_mod.get_global_var('func_8224')
call_10939 = relay.TupleGetItem(func_8222_call(), 0)
call_10940 = relay.TupleGetItem(func_8224_call(), 0)
func_4618_call = mod.get_global_var('func_4618')
func_4621_call = mutated_mod.get_global_var('func_4621')
var_10943 = relay.var("var_10943", dtype = "float32", shape = (1080,))#candidate|10943|(1080,)|var|float32
call_10942 = func_4618_call(relay.reshape(var_10943.astype('float32'), [6, 12, 15]))
call_10944 = func_4618_call(relay.reshape(var_10943.astype('float32'), [6, 12, 15]))
output = relay.Tuple([call_10939,call_10942,var_10943,])
output2 = relay.Tuple([call_10940,call_10944,var_10943,])
func_10949 = relay.Function([var_10943,], output)
mod['func_10949'] = func_10949
mod = relay.transform.InferType()(mod)
mutated_mod['func_10949'] = func_10949
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10950 = relay.var("var_10950", dtype = "float32", shape = (1080,))#candidate|10950|(1080,)|var|float32
func_10949_call = mutated_mod.get_global_var('func_10949')
call_10951 = func_10949_call(var_10950)
output = call_10951
func_10952 = relay.Function([var_10950], output)
mutated_mod['func_10952'] = func_10952
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8015_call = mod.get_global_var('func_8015')
func_8017_call = mutated_mod.get_global_var('func_8017')
call_10987 = relay.TupleGetItem(func_8015_call(), 0)
call_10988 = relay.TupleGetItem(func_8017_call(), 0)
func_8161_call = mod.get_global_var('func_8161')
func_8163_call = mutated_mod.get_global_var('func_8163')
var_10996 = relay.var("var_10996", dtype = "int32", shape = (48,))#candidate|10996|(48,)|var|int32
call_10995 = relay.TupleGetItem(func_8161_call(relay.reshape(var_10996.astype('int32'), [1, 48])), 4)
call_10997 = relay.TupleGetItem(func_8163_call(relay.reshape(var_10996.astype('int32'), [1, 48])), 4)
func_10223_call = mod.get_global_var('func_10223')
func_10225_call = mutated_mod.get_global_var('func_10225')
const_11007 = relay.const([[1.380421,-1.327909,-8.804112,-0.552716,-9.371677,-7.234570,3.293903,6.294382,1.374387,-9.264500,-1.025944,6.736905,-2.270734,7.576069,3.539694,7.551678,-4.843486,8.412591,1.793624,-6.211365,-2.003489,1.906849,4.574301,1.511683,-1.496950,5.938198,7.412701,4.140537,2.014251,2.674158,6.270594,0.384164,-6.946356,-4.965482,-2.617590,9.032828,1.027933,-9.047518,-1.676042,5.553268,-6.509726,9.953990,-6.071718,7.381816,0.715738,-6.727507,2.364251,-5.064813,-8.939901,0.017419,-0.266481,3.495783,-2.320501,-1.134651,3.266333,0.545816,-2.720061,-4.513930,2.869175,-9.953759,-4.672309,5.871979,-0.163848,1.594887,-2.574117,7.916771,-1.052467,-2.700981,0.239750,7.991168,6.316525,-8.465580,2.522342,-1.495957,-2.188704,8.433208,5.939189,-2.509153],[5.140932,6.790400,-9.457376,-4.609386,2.614066,2.335921,0.162383,-4.059049,-9.167166,9.079813,7.756038,-3.697353,-9.450771,-8.875125,6.941639,-9.407551,-8.298851,-8.283529,-4.026131,1.394710,-1.372006,-9.245045,1.597641,-7.011034,9.931133,9.338297,2.958962,-4.093775,-8.807029,3.227532,6.372671,-0.608838,9.064183,1.418826,9.017848,-7.457638,8.253777,6.853443,4.330316,-4.129419,2.096769,9.495921,-1.741457,3.678478,-4.549748,-9.461579,-6.119311,2.285210,8.965961,6.315610,-8.412376,-3.309071,4.754134,-1.825169,3.334958,2.268165,1.269336,9.716122,9.488123,-4.445276,-9.640702,2.957236,8.082078,-8.502187,4.698214,1.121360,1.910403,-5.776706,2.048538,5.575196,8.741167,-2.083040,0.435735,-4.001359,-6.582848,-6.350375,4.311679,8.066614],[8.508065,-6.069053,3.882365,-9.144077,1.865899,5.976349,7.851688,-7.942341,-3.481086,7.155960,-6.606486,-0.296705,-4.915863,6.917291,-9.468902,-6.738156,9.211753,9.046342,-8.337578,3.522562,-7.386226,6.107360,-1.251046,-9.409794,-9.705553,-5.649411,-4.298298,2.329457,-2.818853,-6.098389,7.614765,-8.913863,6.841991,0.453963,0.730587,-3.428745,-1.804011,4.208865,8.250234,9.309732,-9.994351,-8.917778,-3.013185,9.710574,5.563044,8.240886,6.704785,6.879388,9.530127,-5.501144,3.768119,-9.963425,-3.464974,-4.187074,-4.599247,4.438287,-1.241226,7.611984,6.011202,0.303783,-6.504529,7.602250,-2.044305,3.023103,-9.588419,-5.558940,-0.191131,8.842428,-5.430506,-3.011966,3.276489,3.719766,2.460410,-2.775661,-7.078668,7.444935,-4.445422,-6.988774],[8.217728,0.107044,5.503444,-7.044207,-9.010518,0.692145,4.140564,3.178468,4.095458,-2.843499,8.069692,-9.980370,-6.745485,4.597712,-1.421831,9.598904,9.260386,4.323988,-9.702255,-3.613311,3.500115,-3.108892,9.317860,3.504959,-8.076499,0.812376,-1.473100,0.979036,-0.733027,-6.643597,-4.567991,-8.449605,-3.683639,0.703317,6.584010,8.634997,1.148436,-5.499990,-9.981403,7.957960,1.724781,-6.968484,-7.613327,7.365240,-4.509302,-0.985939,5.630403,-8.340581,-0.441943,4.316726,9.461624,5.470395,-1.758832,4.137692,3.997702,2.070748,-3.028445,5.426056,-1.761078,9.216156,-8.392921,2.492749,-7.240007,7.185230,3.349568,7.074245,2.895411,6.740799,-5.162961,-6.930330,-9.121640,-3.696957,-8.674033,1.653738,-7.835875,3.167369,-4.734889,9.695785],[3.118851,-6.824111,6.757647,8.571198,-1.311521,-0.952145,-3.992868,-0.531184,-1.399686,4.456886,-4.791832,5.371754,3.483004,9.958363,-7.007128,-1.873720,1.935766,-9.522526,-9.002566,-6.709811,2.868041,7.859682,4.093512,-3.129274,3.850537,-6.500887,-1.948107,-9.779416,6.561080,-1.003900,-4.630348,5.186111,0.245055,-6.618731,0.963453,-5.331865,4.221406,-4.758926,9.048937,2.722799,-8.369988,9.632339,8.577293,-0.169685,1.839933,-1.643793,-8.793112,-2.740827,-9.923467,5.926525,7.386097,-6.413838,-8.994858,9.228767,3.741144,-4.617600,5.420297,-5.523035,0.068243,2.285817,7.782602,5.825758,8.721846,1.892970,-4.046520,6.064363,-1.888373,9.697621,5.934713,0.587070,9.763272,-8.005500,4.619865,7.420675,-4.110964,8.920885,0.313346,3.992905],[-9.993097,-2.728452,9.595025,-7.204648,1.558025,-2.150250,3.604423,6.680392,9.507887,9.412982,-0.154053,-4.988673,2.542117,9.062670,-1.161817,2.110838,4.256606,9.149773,9.641408,3.677757,0.504050,4.428387,5.102928,4.383572,3.258052,8.058183,-7.427281,-8.503879,0.984848,-4.585044,-1.877448,4.580306,9.097114,-3.019874,-3.077628,2.832106,-9.274695,-2.379849,4.585032,-2.595682,-7.039158,-6.980167,7.293496,-4.594721,-8.036717,-5.424780,-9.453600,2.087308,0.864976,1.020972,7.691225,0.238977,9.298245,0.432689,-6.794905,4.605310,3.325522,9.283680,-3.924192,8.584554,-8.012054,2.057570,8.228510,-2.696435,7.133646,7.216949,-7.292321,-3.272037,-8.889022,-6.970514,4.560578,-8.361314,1.493681,-0.348636,6.234712,7.899576,0.426897,5.546118]], dtype = "float32")#candidate|11007|(6, 78)|const|float32
call_11006 = relay.TupleGetItem(func_10223_call(relay.reshape(const_11007.astype('float32'), [468, 1])), 6)
call_11008 = relay.TupleGetItem(func_10225_call(relay.reshape(const_11007.astype('float32'), [468, 1])), 6)
func_7080_call = mod.get_global_var('func_7080')
func_7084_call = mutated_mod.get_global_var('func_7084')
var_11035 = relay.var("var_11035", dtype = "float32", shape = (130,))#candidate|11035|(130,)|var|float32
var_11036 = relay.var("var_11036", dtype = "float64", shape = (1650,))#candidate|11036|(1650,)|var|float64
call_11034 = relay.TupleGetItem(func_7080_call(relay.reshape(var_11035.astype('float32'), [10, 1, 13]), relay.reshape(var_11036.astype('float64'), [1650,]), ), 5)
call_11037 = relay.TupleGetItem(func_7084_call(relay.reshape(var_11035.astype('float32'), [10, 1, 13]), relay.reshape(var_11036.astype('float64'), [1650,]), ), 5)
output = relay.Tuple([call_10987,call_10995,var_10996,call_11006,const_11007,call_11034,var_11035,var_11036,])
output2 = relay.Tuple([call_10988,call_10997,var_10996,call_11008,const_11007,call_11037,var_11035,var_11036,])
func_11039 = relay.Function([var_10996,var_11035,var_11036,], output)
mod['func_11039'] = func_11039
mod = relay.transform.InferType()(mod)
mutated_mod['func_11039'] = func_11039
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11039_call = mutated_mod.get_global_var('func_11039')
var_11041 = relay.var("var_11041", dtype = "int32", shape = (48,))#candidate|11041|(48,)|var|int32
var_11042 = relay.var("var_11042", dtype = "float32", shape = (130,))#candidate|11042|(130,)|var|float32
var_11043 = relay.var("var_11043", dtype = "float64", shape = (1650,))#candidate|11043|(1650,)|var|float64
call_11040 = func_11039_call(var_11041,var_11042,var_11043,)
output = call_11040
func_11044 = relay.Function([var_11041,var_11042,var_11043,], output)
mutated_mod['func_11044'] = func_11044
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8291_call = mod.get_global_var('func_8291')
func_8292_call = mutated_mod.get_global_var('func_8292')
call_11063 = func_8291_call()
call_11064 = func_8291_call()
func_8385_call = mod.get_global_var('func_8385')
func_8387_call = mutated_mod.get_global_var('func_8387')
var_11068 = relay.var("var_11068", dtype = "float64", shape = (1144,))#candidate|11068|(1144,)|var|float64
call_11067 = func_8385_call(relay.reshape(var_11068.astype('float64'), [13, 11, 8]))
call_11069 = func_8385_call(relay.reshape(var_11068.astype('float64'), [13, 11, 8]))
func_9982_call = mod.get_global_var('func_9982')
func_9987_call = mutated_mod.get_global_var('func_9987')
var_11071 = relay.var("var_11071", dtype = "int16", shape = (280, 2))#candidate|11071|(280, 2)|var|int16
const_11072 = relay.const([[-7.226551],[-6.685732],[9.929476],[-1.200374],[-7.273037],[6.603429],[8.263198],[-6.992078],[9.610968],[-5.848799],[2.148272],[3.847233],[8.991770],[6.948193],[-1.335183],[-6.965019],[8.535475],[-0.986124],[-6.147141],[-1.516891],[-7.280383],[-3.501859],[8.623335],[-4.701477],[-7.714673],[-3.097018],[3.696641],[-5.792780],[-0.566726],[-5.745149],[5.508722],[8.926092],[5.097011],[7.173911],[-1.202085],[-9.218958],[0.020853],[-0.623247],[3.819787],[-5.784153],[-8.456267],[4.022958],[-8.913091],[-9.219733],[-4.776612],[-2.943908],[8.189733],[-6.030765],[8.549374],[-4.059183],[-9.493482],[6.367615],[-7.919827],[-2.345347],[-6.905261],[2.932846],[6.435417],[-0.787343],[-8.534528],[-3.257016],[4.994385],[-1.852725],[6.877117],[1.597090],[-7.865588],[-4.182891],[-3.416644],[-5.954925],[-5.043581],[9.986241],[9.762087],[4.060161],[6.291199],[1.099139],[-3.079524],[-1.829018],[-5.951252],[-5.598954],[-3.986233],[-8.524998],[-5.329788],[1.219565],[-9.256224],[2.067808],[-2.042649],[2.775362],[7.938066],[-6.800218],[-7.977672],[-5.425492],[0.822257],[-5.897016],[6.365270],[2.037677],[-1.568540],[-3.593609],[2.285084],[-8.060612],[9.186962],[-3.694504],[-3.026842],[-3.849708],[-8.326273],[-9.620796],[-3.078612],[7.140752],[-4.011153],[2.435503],[-3.459218],[1.593610],[-8.149356],[3.519343],[0.216217],[-0.555810],[3.565203],[-4.256409],[-1.977773],[2.132336],[0.009324],[-2.156883],[-6.103534],[0.230908],[3.350715],[-5.628845],[-6.373461],[0.536454],[0.561427],[-3.247828],[-0.282550],[-5.408156],[0.339302],[7.896198],[5.612316],[-2.680945],[-3.564887],[-4.592156],[-2.284757],[7.517236],[-3.600412],[2.240571],[3.683624],[3.821782],[-4.809017],[5.130725],[-7.464439],[-7.419537],[-8.364431],[-7.664774],[3.168018],[-8.880731],[5.693100],[-2.233163],[8.990910],[1.017609],[-6.881170],[-4.044756],[6.036029],[-3.876147],[4.902787],[-9.601445],[5.785601],[4.714789],[-4.888770],[7.773411],[-7.782349],[-8.089713],[-2.680640],[6.732675],[-9.468915],[1.669326],[1.673018],[9.777708],[-6.750390],[-3.008317],[0.086585],[3.268011],[-8.625978],[8.797546],[-3.943256],[-3.490238],[-0.189014],[-8.172843],[5.968189],[-1.077785],[5.714885],[-2.434480],[7.858087],[7.841981],[-8.331343],[8.089327],[2.063120],[-2.303183],[0.560047],[-0.483752],[0.254068],[-0.898617],[6.912409],[-2.062824],[-6.817774],[8.616709],[5.160224],[3.410084],[5.925200],[-1.634781],[-2.512385],[9.610659],[-2.829340],[1.634789],[1.396864],[-8.577775],[-4.436649],[0.030778],[4.580886],[7.455429],[-1.980738],[6.682608],[-8.293582],[3.458112],[-7.609490],[0.239166],[5.452830],[-7.543519],[6.286985],[-5.436924],[5.972626],[1.438428],[2.309649],[-0.076167],[-7.077138],[2.403271],[-8.426546],[-6.569678],[8.933867],[-3.773950],[3.234333],[-0.568171],[-0.417078],[4.872760],[7.362929],[4.167333],[-8.671951],[-8.354376],[6.436570],[-8.831172],[-7.858262],[-5.649234],[6.123006],[-5.983274],[-7.150864],[-9.691435],[-4.445945],[7.707073],[5.476616],[-2.050353],[-1.295691],[0.313892],[-0.322644],[-4.836529],[-4.182594],[-1.053664],[-1.935865],[0.655097],[4.578756],[-9.552860],[-1.435954],[-4.695245],[-6.098568],[-2.074841],[-2.640987],[-0.477343],[-1.051540],[3.038021],[6.298415],[-4.627332],[-0.453057],[3.129919],[7.715211],[-4.446242],[-3.469401],[5.892138],[2.576308],[7.228019],[0.599844],[4.675600],[4.217042],[-9.556163],[-7.418080],[-8.309763],[3.164632],[4.521520],[0.045308],[0.731216],[-2.675695],[-2.476694],[-9.423221],[1.721000],[7.070412],[3.443314],[-3.597245],[-0.533147],[-4.517037],[0.671021],[-7.911391],[4.591385],[-9.725192],[8.781300],[6.463046],[2.056983],[7.887185],[-7.534242],[2.889657],[5.395377],[-0.501764],[9.664028],[-6.382987],[-6.851826],[-3.704840],[6.873299],[-2.808431],[-2.520472],[3.324795],[-9.938309],[-8.625975],[-9.444242],[8.455036],[-2.560917],[6.472434],[1.223748],[-0.412587],[-2.280444],[-3.517234],[-0.047971],[2.900786],[1.371426],[-4.536930],[-6.747321],[-0.406717],[-9.253833],[-2.553928],[-9.096945],[4.638373],[-1.883884],[-8.055661],[-3.136440],[-3.566421],[5.847522],[-5.739491],[4.316506],[7.412504],[3.434061],[4.794230],[-4.090565],[-7.858685],[-1.089584],[0.087923],[2.831378],[1.628728],[0.084766],[4.746043],[9.116212],[6.317502],[7.628274],[-5.373424]], dtype = "float32")#candidate|11072|(363, 1)|const|float32
call_11070 = relay.TupleGetItem(func_9982_call(relay.reshape(var_11071.astype('int16'), [7, 10, 8]), relay.reshape(var_11071.astype('int16'), [7, 10, 8]), relay.reshape(const_11072.astype('float32'), [363,]), ), 1)
call_11073 = relay.TupleGetItem(func_9987_call(relay.reshape(var_11071.astype('int16'), [7, 10, 8]), relay.reshape(var_11071.astype('int16'), [7, 10, 8]), relay.reshape(const_11072.astype('float32'), [363,]), ), 1)
uop_11094 = relay.log10(var_11071.astype('float32')) # shape=(280, 2)
output = relay.Tuple([call_11063,call_11067,var_11068,call_11070,const_11072,uop_11094,])
output2 = relay.Tuple([call_11064,call_11069,var_11068,call_11073,const_11072,uop_11094,])
func_11099 = relay.Function([var_11068,var_11071,], output)
mod['func_11099'] = func_11099
mod = relay.transform.InferType()(mod)
var_11100 = relay.var("var_11100", dtype = "float64", shape = (1144,))#candidate|11100|(1144,)|var|float64
var_11101 = relay.var("var_11101", dtype = "int16", shape = (280, 2))#candidate|11101|(280, 2)|var|int16
output = func_11099(var_11100,var_11101,)
func_11102 = relay.Function([var_11100,var_11101,], output)
mutated_mod['func_11102'] = func_11102
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10149_call = mod.get_global_var('func_10149')
func_10150_call = mutated_mod.get_global_var('func_10150')
call_11117 = func_10149_call()
call_11118 = func_10149_call()
output = call_11117
output2 = call_11118
func_11129 = relay.Function([], output)
mod['func_11129'] = func_11129
mod = relay.transform.InferType()(mod)
output = func_11129()
func_11130 = relay.Function([], output)
mutated_mod['func_11130'] = func_11130
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9488_call = mod.get_global_var('func_9488')
func_9489_call = mutated_mod.get_global_var('func_9489')
call_11152 = relay.TupleGetItem(func_9488_call(), 0)
call_11153 = relay.TupleGetItem(func_9489_call(), 0)
func_7556_call = mod.get_global_var('func_7556')
func_7559_call = mutated_mod.get_global_var('func_7559')
var_11157 = relay.var("var_11157", dtype = "uint8", shape = (98, 6))#candidate|11157|(98, 6)|var|uint8
call_11156 = relay.TupleGetItem(func_7556_call(relay.reshape(var_11157.astype('uint8'), [588,])), 0)
call_11158 = relay.TupleGetItem(func_7559_call(relay.reshape(var_11157.astype('uint8'), [588,])), 0)
func_8291_call = mod.get_global_var('func_8291')
func_8292_call = mutated_mod.get_global_var('func_8292')
call_11179 = func_8291_call()
call_11180 = func_8291_call()
func_8222_call = mod.get_global_var('func_8222')
func_8224_call = mutated_mod.get_global_var('func_8224')
call_11184 = relay.TupleGetItem(func_8222_call(), 0)
call_11185 = relay.TupleGetItem(func_8224_call(), 0)
var_11215 = relay.var("var_11215", dtype = "uint8", shape = (98, 6))#candidate|11215|(98, 6)|var|uint8
bop_11216 = relay.not_equal(var_11157.astype('bool'), relay.reshape(var_11215.astype('bool'), relay.shape_of(var_11157))) # shape=(98, 6)
output = relay.Tuple([call_11152,call_11156,call_11179,call_11184,bop_11216,])
output2 = relay.Tuple([call_11153,call_11158,call_11180,call_11185,bop_11216,])
func_11230 = relay.Function([var_11157,var_11215,], output)
mod['func_11230'] = func_11230
mod = relay.transform.InferType()(mod)
mutated_mod['func_11230'] = func_11230
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11230_call = mutated_mod.get_global_var('func_11230')
var_11232 = relay.var("var_11232", dtype = "uint8", shape = (98, 6))#candidate|11232|(98, 6)|var|uint8
var_11233 = relay.var("var_11233", dtype = "uint8", shape = (98, 6))#candidate|11233|(98, 6)|var|uint8
call_11231 = func_11230_call(var_11232,var_11233,)
output = call_11231
func_11234 = relay.Function([var_11232,var_11233,], output)
mutated_mod['func_11234'] = func_11234
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10907_call = mod.get_global_var('func_10907')
func_10908_call = mutated_mod.get_global_var('func_10908')
call_11290 = func_10907_call()
call_11291 = func_10907_call()
output = relay.Tuple([call_11290,])
output2 = relay.Tuple([call_11291,])
func_11293 = relay.Function([], output)
mod['func_11293'] = func_11293
mod = relay.transform.InferType()(mod)
mutated_mod['func_11293'] = func_11293
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11293_call = mutated_mod.get_global_var('func_11293')
call_11294 = func_11293_call()
output = call_11294
func_11295 = relay.Function([], output)
mutated_mod['func_11295'] = func_11295
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9833_call = mod.get_global_var('func_9833')
func_9834_call = mutated_mod.get_global_var('func_9834')
call_11307 = relay.TupleGetItem(func_9833_call(), 0)
call_11308 = relay.TupleGetItem(func_9834_call(), 0)
output = relay.Tuple([call_11307,])
output2 = relay.Tuple([call_11308,])
func_11318 = relay.Function([], output)
mod['func_11318'] = func_11318
mod = relay.transform.InferType()(mod)
mutated_mod['func_11318'] = func_11318
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11318_call = mutated_mod.get_global_var('func_11318')
call_11319 = func_11318_call()
output = call_11319
func_11320 = relay.Function([], output)
mutated_mod['func_11320'] = func_11320
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9296_call = mod.get_global_var('func_9296')
func_9297_call = mutated_mod.get_global_var('func_9297')
call_11323 = func_9296_call()
call_11324 = func_9296_call()
output = relay.Tuple([call_11323,])
output2 = relay.Tuple([call_11324,])
func_11337 = relay.Function([], output)
mod['func_11337'] = func_11337
mod = relay.transform.InferType()(mod)
mutated_mod['func_11337'] = func_11337
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11337_call = mutated_mod.get_global_var('func_11337')
call_11338 = func_11337_call()
output = call_11338
func_11339 = relay.Function([], output)
mutated_mod['func_11339'] = func_11339
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7331_call = mod.get_global_var('func_7331')
func_7333_call = mutated_mod.get_global_var('func_7333')
call_11352 = relay.TupleGetItem(func_7331_call(), 0)
call_11353 = relay.TupleGetItem(func_7333_call(), 0)
func_1762_call = mod.get_global_var('func_1762')
func_1768_call = mutated_mod.get_global_var('func_1768')
var_11355 = relay.var("var_11355", dtype = "uint8", shape = (588,))#candidate|11355|(588,)|var|uint8
var_11356 = relay.var("var_11356", dtype = "float32", shape = (405,))#candidate|11356|(405,)|var|float32
const_11357 = relay.const([-2,8,6,5,2,-10,-5,-8,5,-2,-8,3,-8,5,9,-7,4,10,-5,9,-10,10,3,4,5,-2,9,-1,4,-5,5,-5,-9,-8,1,-4,6,8,-2,-9,8,-2,-5,-6,-8,-3,4,1], dtype = "int32")#candidate|11357|(48,)|const|int32
call_11354 = relay.TupleGetItem(func_1762_call(relay.reshape(var_11355.astype('uint8'), [6, 14, 7]), relay.reshape(var_11355.astype('uint8'), [6, 14, 7]), relay.reshape(var_11355.astype('uint8'), [6, 14, 7]), relay.reshape(var_11356.astype('float32'), [405,]), relay.reshape(const_11357.astype('int32'), [48,]), ), 5)
call_11358 = relay.TupleGetItem(func_1768_call(relay.reshape(var_11355.astype('uint8'), [6, 14, 7]), relay.reshape(var_11355.astype('uint8'), [6, 14, 7]), relay.reshape(var_11355.astype('uint8'), [6, 14, 7]), relay.reshape(var_11356.astype('float32'), [405,]), relay.reshape(const_11357.astype('int32'), [48,]), ), 5)
uop_11361 = relay.sinh(var_11356.astype('float64')) # shape=(405,)
output = relay.Tuple([call_11352,call_11354,var_11355,const_11357,uop_11361,])
output2 = relay.Tuple([call_11353,call_11358,var_11355,const_11357,uop_11361,])
func_11365 = relay.Function([var_11355,var_11356,], output)
mod['func_11365'] = func_11365
mod = relay.transform.InferType()(mod)
mutated_mod['func_11365'] = func_11365
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11365_call = mutated_mod.get_global_var('func_11365')
var_11367 = relay.var("var_11367", dtype = "uint8", shape = (588,))#candidate|11367|(588,)|var|uint8
var_11368 = relay.var("var_11368", dtype = "float32", shape = (405,))#candidate|11368|(405,)|var|float32
call_11366 = func_11365_call(var_11367,var_11368,)
output = call_11366
func_11369 = relay.Function([var_11367,var_11368,], output)
mutated_mod['func_11369'] = func_11369
mutated_mod = relay.transform.InferType()(mutated_mod)
const_11450 = relay.const([[[8,-1,6,6,9,-8,9,-6,-6,-6,-8,4,8,5,9],[-5,-7,-10,8,-4,-1,4,10,4,2,7,-4,6,-8,-1],[-6,-6,3,-6,5,2,4,3,-7,-2,-1,-1,-9,-7,7],[-8,4,-5,-1,2,3,-1,9,1,-2,-6,-1,8,-3,10]],[[2,-4,1,7,-10,-7,2,-8,-3,8,-3,8,1,-7,-10],[-6,-3,1,10,8,-7,-1,-5,10,9,3,4,7,1,2],[10,-6,-10,9,-4,-8,-3,10,9,6,-9,9,4,9,-1],[-7,-2,-4,-9,-2,1,4,10,-2,3,6,-10,-5,4,-2]],[[-8,-6,1,3,-2,-2,7,-6,9,8,9,4,-1,-8,5],[-10,8,-3,5,-10,3,1,-10,-10,7,9,-2,-9,-3,7],[-4,1,2,-10,10,-5,4,4,3,10,-2,9,-3,-6,-5],[4,-2,1,9,-3,1,-3,-2,-8,-2,8,-9,-9,-5,-9]],[[-10,10,-8,-7,2,5,6,10,-8,4,5,6,-8,8,-2],[4,10,5,4,-6,-10,2,10,5,-8,-9,-2,9,-2,3],[-4,5,2,-3,-9,-3,-9,-6,-4,-10,-9,-9,4,1,5],[-7,3,-4,-1,3,7,3,-10,-8,8,-9,4,8,-6,-5]]], dtype = "uint64")#candidate|11450|(4, 4, 15)|const|uint64
var_11451 = relay.var("var_11451", dtype = "uint64", shape = (4, 4, 15))#candidate|11451|(4, 4, 15)|var|uint64
bop_11452 = relay.minimum(const_11450.astype('uint64'), relay.reshape(var_11451.astype('uint64'), relay.shape_of(const_11450))) # shape=(4, 4, 15)
const_11477 = relay.const([[[-5,3,-9,-3,5,-7,6,-4,-10,2,10,-8,4,10,-4],[-2,-1,10,-6,-7,2,8,4,5,-7,-1,-6,-10,9,-6],[3,2,3,-4,-7,-1,-6,7,1,4,-10,-4,4,-9,-4],[-7,-1,2,5,6,-8,-10,-6,-4,10,-4,5,-9,4,3]],[[10,-6,1,8,4,7,-1,-6,-6,3,-10,-6,-6,3,2],[-9,-6,-7,3,-2,-9,8,-5,-6,-7,-9,-7,2,-2,5],[-1,-10,9,3,-3,6,-3,2,9,1,9,2,6,1,-1],[4,9,8,-1,10,5,6,2,-7,5,6,-9,2,-2,-3]],[[-9,6,3,8,6,-6,3,10,9,6,-7,-10,1,-2,-4],[8,4,-3,-8,8,6,5,-5,5,-2,2,3,6,5,-7],[-2,4,10,10,-8,-2,-2,4,-1,5,-9,-5,-8,-6,-8],[4,9,6,7,5,-4,-10,3,-8,-2,-2,-10,3,7,-5]],[[-4,4,8,1,6,1,-5,8,4,4,1,-8,2,-10,-3],[-3,5,8,-7,-9,9,5,-8,3,9,7,-3,10,6,-4],[7,6,7,5,7,9,1,-9,4,-2,-9,-4,4,10,8],[-1,-5,6,2,-6,-5,-4,-8,7,3,7,-8,6,7,-4]]], dtype = "uint64")#candidate|11477|(4, 4, 15)|const|uint64
bop_11478 = relay.logical_or(var_11451.astype('bool'), relay.reshape(const_11477.astype('bool'), relay.shape_of(var_11451))) # shape=(4, 4, 15)
func_10887_call = mod.get_global_var('func_10887')
func_10891_call = mutated_mod.get_global_var('func_10891')
const_11487 = relay.const([9.023204,-4.755677,-1.014084,-6.701815,4.034523,-6.973308,-7.789101,-9.958114,0.703761,-3.528669,-8.263141,1.491457,-4.863149,6.721533,3.989856,0.757511,0.512038,-6.811742,-9.765931,1.665090,-4.988034,2.759182,5.776156,5.165771,3.404903,-6.082851,-1.776861,-2.684568,-7.552589,4.874462,-1.440587,-7.428551,-6.021590,6.371736,1.497033,-6.120904,-5.442541,-4.868102,-6.077304,-1.954386,-7.147869,4.669083,-8.367466,8.390692,-4.348544,-0.816007,1.089364,-9.364838,2.051069,-1.294606,-4.406852,2.121652,4.682138,-0.711583,6.963300,2.050685,-5.912984,-1.642077,2.320447,9.600697,-0.887591,-3.087330,-4.040894,-6.628517,-7.604009,-2.624489,1.483102,3.332365,8.709378,-9.524261,2.786004,-7.848504,3.604510,-4.764542,3.653535,-1.313560,-7.570912,0.915510,1.527053,-6.900005,8.563417,1.032137,-3.765156,3.809913,-0.538760,-7.890443,0.229088,7.443923,-6.093985,4.277393,5.921849,6.029003,-1.061645,-4.681893,-4.233607,3.773818,6.116472,3.250226,-9.581562,-0.721875,-1.539220,-2.889199,9.546471,-3.324348,2.672930,0.667919,3.713659,-0.475698,-0.228414,-6.267508,-3.337333,-3.265852,-4.308678,1.984166,-9.365673,7.138502,6.647120,-8.475025,-0.334643,-3.333470,6.383056,-7.863832,-2.546805,-5.233955,-9.729075,-6.732207,5.390772,-7.058725,-4.120334,-4.045843,4.819485,1.288127,8.932102,-6.728173,6.389084,3.253617,-2.204450,3.304160,5.030931,4.211164,-5.624424,-3.654659,-3.508611,4.544349,-9.470980,5.601752,-8.616565,-0.103122,7.929630,9.599686,3.349163,0.130691,-6.805074,5.449888,-9.782965,4.053432,-8.851359,-5.363830,4.245892,2.837634,8.030117,8.380940,0.606040,5.946587,-2.272902,7.105620,-1.752022,-4.565550,-6.731953,-0.600686,-5.363583,2.339975,7.208290,-5.538212,-2.887868,-0.861537,-9.597148,4.669607,-3.558881,-3.812022,5.488377,-2.972049,-5.928935,-4.237587,-6.484221,-1.761251,6.271566,4.242216,5.414956,3.824380,3.677881,-4.501197,5.407243,-4.924355,-6.103577,8.234530,-8.132115,8.476335,-4.107326,2.533898,-6.391011,3.336878,-6.725709,-5.273711,-5.554493,2.560126,-5.461409,-0.717093,6.051925,7.761769,1.241046,5.753900,-7.226206,6.256860,-4.359524,-2.318838,-4.339763,-6.528608,-7.811552,-7.847108,-6.320523,8.678689,3.057941,1.954580,-1.747814,7.373278,9.121199,6.077896,1.272374,-9.093884,-7.360222,8.979661,-9.046367,5.835477,-8.171747,-3.440376,0.766973,9.199781,1.636253,5.966844,7.425107,1.046870,6.865175,9.712403,3.334977,-1.690200,-9.708025,-8.460890,-1.572658,4.580735,-0.805491,1.497969,8.747412,-0.962545,1.278033,-5.320276,-6.148862,5.845988,1.563379,8.703700,-6.049715,-1.434313,0.042288,-5.696254,-6.668614,-8.412402,1.052129,-0.353089,8.666120,4.146734,-4.645031,8.370890,9.812430,-3.839202,4.908174,-5.798171,4.523056,-1.992644,1.109122,-3.250101,4.257926,-0.199988,9.817789,3.861742,-2.828883,2.814093,6.068477,5.078304,-5.584223,7.308430,3.972682,7.735503,-3.277943,9.931284,-3.054120,5.719447,9.508733,-3.337453,-5.378025,0.990220,-1.112151,4.421242,0.304240,1.284269,-4.303127,-4.294066,-5.867172,-5.310789,8.024414,-1.805418,-1.697276,2.210929,-6.931067,-4.118581,-9.051242,1.283408,-3.929870,-9.122333,9.203826,2.525112,-3.579685,-5.156519,-4.999517,6.593105,-6.964477,3.309265,6.744348,-5.288418,7.559037,-2.871949,-6.334524,-5.662028,-2.538083,3.784194,-7.542469,5.374814,-2.604944,4.653348,-4.103158,-6.717361,0.441529,1.582973,9.907959,-3.814511,-3.374640,-5.923995,-5.231742,-4.509551,5.331396,-5.342176,-2.480836,-4.050886,4.543644,2.757248,-4.461885,0.045187,-2.627195,-7.579745,-4.716294,-3.030568,6.953545,-7.960531,6.760532,-1.509761,-6.590219,7.228503,-4.984006,7.909675,7.067897,1.396804,-3.413917,2.145476,-8.920655,-3.172737,-8.962905,2.436084,1.467921,8.950147,-6.400511,7.619325,8.365757,-9.498878,-7.787667,3.478916,-8.839768,6.937088,0.213049,0.966724,-9.650684,2.911367,-7.682826,-7.288005,-7.686561,2.385915,5.219638,1.101240,7.173319,-9.773244,4.414001,4.761227,8.535743,-0.579890,-2.080862,-8.387280,-6.269666], dtype = "float32")#candidate|11487|(405,)|const|float32
const_11488 = relay.const([[-2,-9,-7,-2],[9,-9,-9,-10],[-8,-8,-4,-3],[-5,-9,-4,4],[-5,4,-1,1],[10,-1,-4,-7],[-3,-1,3,7],[10,-5,-9,8],[-3,4,-1,-4],[-6,1,7,2],[2,-7,7,2],[-10,-2,7,10]], dtype = "int32")#candidate|11488|(12, 4)|const|int32
call_11486 = relay.TupleGetItem(func_10887_call(relay.reshape(const_11487.astype('float32'), [405,]), relay.reshape(const_11488.astype('int32'), [24, 2]), ), 1)
call_11489 = relay.TupleGetItem(func_10891_call(relay.reshape(const_11487.astype('float32'), [405,]), relay.reshape(const_11488.astype('int32'), [24, 2]), ), 1)
uop_11506 = relay.acosh(bop_11452.astype('float64')) # shape=(4, 4, 15)
output = relay.Tuple([bop_11478,call_11486,const_11487,const_11488,uop_11506,])
output2 = relay.Tuple([bop_11478,call_11489,const_11487,const_11488,uop_11506,])
func_11508 = relay.Function([var_11451,], output)
mod['func_11508'] = func_11508
mod = relay.transform.InferType()(mod)
var_11509 = relay.var("var_11509", dtype = "uint64", shape = (4, 4, 15))#candidate|11509|(4, 4, 15)|var|uint64
output = func_11508(var_11509)
func_11510 = relay.Function([var_11509], output)
mutated_mod['func_11510'] = func_11510
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9833_call = mod.get_global_var('func_9833')
func_9834_call = mutated_mod.get_global_var('func_9834')
call_11560 = relay.TupleGetItem(func_9833_call(), 0)
call_11561 = relay.TupleGetItem(func_9834_call(), 0)
func_7080_call = mod.get_global_var('func_7080')
func_7084_call = mutated_mod.get_global_var('func_7084')
const_11594 = relay.const([[9.060978,-3.894561,-7.747142,-7.261550,4.868944,-7.720975,-3.786778,-4.453217,8.225353,-3.104915,3.008429,3.443686,8.785025,0.692585,3.067424,-6.719411,-0.010891,0.146957,-8.231797,-1.082032,9.379313,-0.687771,-7.606240,6.945438,6.577978,-6.895210,3.951825,7.197062,-2.801347,-1.941597,9.939142,-2.030967,5.333529,5.423531,5.650214,8.787657,-5.284938,-0.270867,-5.719099,-9.895399,-8.396723,3.012339,-3.879538,-8.533554,8.316391,9.666532,5.228823,-8.386508,7.156658,-7.528573,-5.639326,3.149578,5.308867,4.339836,1.461010,-6.794022,-4.751322,5.046836,-9.128731,6.821412,-4.553312,9.409767,-1.007434,3.664031,1.296766,-9.830808,1.317889,-1.665264,-7.628619,6.212518,2.473087,1.708322,8.375677,-3.383464,-2.464789,0.483301,-2.725332,-3.910627,-4.741549,-4.162513,-4.684650,5.093525,0.170561,-4.546850,-2.772642,6.649897,8.774658,3.479541,-1.093826,2.942467,-9.317183,4.569316,3.860481,5.448722,1.855018,7.487872,8.267663,-4.122142,-5.195443,-1.841615,-2.720819,-9.442157,-2.284284,-3.204872,5.574571,0.493258,-3.799823,6.403089,-0.865279,1.742685,-3.073741,4.416271,-8.539144,-3.849525,7.359785,9.090554,5.206469,5.273269,5.458607,-4.514863,4.830294,-9.349729,-8.167529,4.822234,5.185803,7.880607,9.974055,8.268789,-6.366055,-9.462788]], dtype = "float32")#candidate|11594|(1, 130)|const|float32
var_11595 = relay.var("var_11595", dtype = "float64", shape = (1650,))#candidate|11595|(1650,)|var|float64
call_11593 = relay.TupleGetItem(func_7080_call(relay.reshape(const_11594.astype('float32'), [10, 1, 13]), relay.reshape(var_11595.astype('float64'), [1650,]), ), 0)
call_11596 = relay.TupleGetItem(func_7084_call(relay.reshape(const_11594.astype('float32'), [10, 1, 13]), relay.reshape(var_11595.astype('float64'), [1650,]), ), 0)
output = relay.Tuple([call_11560,call_11593,const_11594,var_11595,])
output2 = relay.Tuple([call_11561,call_11596,const_11594,var_11595,])
func_11641 = relay.Function([var_11595,], output)
mod['func_11641'] = func_11641
mod = relay.transform.InferType()(mod)
var_11642 = relay.var("var_11642", dtype = "float64", shape = (1650,))#candidate|11642|(1650,)|var|float64
output = func_11641(var_11642)
func_11643 = relay.Function([var_11642], output)
mutated_mod['func_11643'] = func_11643
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9296_call = mod.get_global_var('func_9296')
func_9297_call = mutated_mod.get_global_var('func_9297')
call_11674 = func_9296_call()
call_11675 = func_9296_call()
var_11696 = relay.var("var_11696", dtype = "float64", shape = (9, 3, 10))#candidate|11696|(9, 3, 10)|var|float64
bop_11697 = relay.greater(call_11674.astype('bool'), relay.reshape(var_11696.astype('bool'), relay.shape_of(call_11674))) # shape=(9, 3, 10)
bop_11700 = relay.greater(call_11675.astype('bool'), relay.reshape(var_11696.astype('bool'), relay.shape_of(call_11675))) # shape=(9, 3, 10)
uop_11701 = relay.cosh(call_11674.astype('float32')) # shape=(9, 3, 10)
uop_11703 = relay.cosh(call_11675.astype('float32')) # shape=(9, 3, 10)
func_21_call = mod.get_global_var('func_21')
func_23_call = mutated_mod.get_global_var('func_23')
var_11706 = relay.var("var_11706", dtype = "int64", shape = (2, 144))#candidate|11706|(2, 144)|var|int64
call_11705 = func_21_call(relay.reshape(var_11706.astype('int64'), [16, 6, 3]))
call_11707 = func_21_call(relay.reshape(var_11706.astype('int64'), [16, 6, 3]))
func_10149_call = mod.get_global_var('func_10149')
func_10150_call = mutated_mod.get_global_var('func_10150')
call_11708 = func_10149_call()
call_11709 = func_10149_call()
bop_11710 = relay.less(uop_11701.astype('bool'), relay.reshape(bop_11697.astype('bool'), relay.shape_of(uop_11701))) # shape=(9, 3, 10)
bop_11713 = relay.less(uop_11703.astype('bool'), relay.reshape(bop_11700.astype('bool'), relay.shape_of(uop_11703))) # shape=(9, 3, 10)
output = relay.Tuple([call_11705,var_11706,call_11708,bop_11710,])
output2 = relay.Tuple([call_11707,var_11706,call_11709,bop_11713,])
func_11723 = relay.Function([var_11696,var_11706,], output)
mod['func_11723'] = func_11723
mod = relay.transform.InferType()(mod)
mutated_mod['func_11723'] = func_11723
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11723_call = mutated_mod.get_global_var('func_11723')
var_11725 = relay.var("var_11725", dtype = "float64", shape = (9, 3, 10))#candidate|11725|(9, 3, 10)|var|float64
var_11726 = relay.var("var_11726", dtype = "int64", shape = (2, 144))#candidate|11726|(2, 144)|var|int64
call_11724 = func_11723_call(var_11725,var_11726,)
output = call_11724
func_11727 = relay.Function([var_11725,var_11726,], output)
mutated_mod['func_11727'] = func_11727
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8317_call = mod.get_global_var('func_8317')
func_8319_call = mutated_mod.get_global_var('func_8319')
call_11732 = func_8317_call()
call_11733 = func_8317_call()
output = relay.Tuple([call_11732,])
output2 = relay.Tuple([call_11733,])
func_11736 = relay.Function([], output)
mod['func_11736'] = func_11736
mod = relay.transform.InferType()(mod)
mutated_mod['func_11736'] = func_11736
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11736_call = mutated_mod.get_global_var('func_11736')
call_11737 = func_11736_call()
output = call_11737
func_11738 = relay.Function([], output)
mutated_mod['func_11738'] = func_11738
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7238_call = mod.get_global_var('func_7238')
func_7240_call = mutated_mod.get_global_var('func_7240')
call_11766 = relay.TupleGetItem(func_7238_call(), 0)
call_11767 = relay.TupleGetItem(func_7240_call(), 0)
output = call_11766
output2 = call_11767
func_11768 = relay.Function([], output)
mod['func_11768'] = func_11768
mod = relay.transform.InferType()(mod)
output = func_11768()
func_11769 = relay.Function([], output)
mutated_mod['func_11769'] = func_11769
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11293_call = mod.get_global_var('func_11293')
func_11295_call = mutated_mod.get_global_var('func_11295')
call_11802 = relay.TupleGetItem(func_11293_call(), 0)
call_11803 = relay.TupleGetItem(func_11295_call(), 0)
func_3901_call = mod.get_global_var('func_3901')
func_3905_call = mutated_mod.get_global_var('func_3905')
var_11810 = relay.var("var_11810", dtype = "float32", shape = (700,))#candidate|11810|(700,)|var|float32
const_11811 = relay.const([[-2.505562,9.889413,6.616293,9.984387,1.370322,0.347504,-0.254265,-5.994970,8.758297],[2.524866,9.760468,-2.258892,6.338724,0.970731,-4.456144,-6.083588,-7.895993,5.127890],[-3.539164,7.264573,-5.657103,3.219271,2.240128,7.884454,-1.144336,1.923689,-0.261493],[1.014262,8.032257,-5.777018,-5.160578,6.240082,-9.244520,-1.058996,4.600093,7.347868],[2.256697,-4.920693,-2.465539,8.911247,-6.815989,6.403971,-8.818142,-7.031876,5.108707],[2.662747,-7.823102,3.866578,5.090289,4.155146,3.666125,-0.131253,3.241878,9.918204],[-1.001959,-7.754198,8.734492,-7.015855,-4.844210,-4.493312,1.657403,-5.133827,-3.621269],[-6.252151,9.486967,-2.565490,-8.803018,3.384452,-5.557885,-1.101123,2.175463,9.017981],[-7.193395,2.195321,7.887930,-9.704920,5.284744,-4.726612,-8.731297,-8.549416,-0.977658],[-6.060860,1.564402,2.179191,0.837417,5.448153,-2.333666,9.348220,-2.908269,-5.120407],[-7.560045,-9.279906,5.915043,0.913316,9.034835,4.722719,3.680861,8.592896,-3.692764],[-9.007950,-6.547814,-6.920325,-2.530754,6.906370,-8.723377,-7.008160,-4.323565,0.407787],[5.556017,-8.507434,-4.195539,6.874026,8.875922,-6.821872,2.813231,3.594176,-4.818417],[-6.076491,-5.632181,0.434068,8.921746,8.878894,-6.117860,2.048680,-8.606281,4.230660],[-6.003064,-7.008093,6.429973,7.797328,6.953766,-2.537174,-4.947192,-1.556670,-8.426128],[-1.846705,-5.928969,0.759627,-2.410990,-9.282013,-7.811499,6.295942,-5.178978,4.440047],[-3.190976,-6.122066,9.776956,-6.088442,-6.622658,-7.264313,-5.872020,-8.310810,6.438647],[-7.109400,1.237809,-8.309130,-6.284398,-5.404907,2.869657,-9.571403,-6.601705,2.864021],[7.465032,1.262325,-1.720552,-8.796325,-2.203121,2.050993,-2.158164,5.581256,0.328162],[-1.365156,4.888940,-5.210268,-5.373342,8.864843,-0.702187,-5.578713,-0.398659,4.855434],[-8.341392,5.425348,-7.474143,-9.909785,-6.583102,-7.293617,8.475645,5.938593,3.825428],[6.677052,-7.510818,-4.152057,7.906299,-1.524086,0.969945,-6.485378,7.326270,-6.763308],[2.058084,7.610397,2.878461,8.405238,-5.942406,6.649931,-1.957258,8.122334,0.800345],[4.667136,-1.494579,-4.617136,0.689989,1.511633,0.238682,0.127594,-3.909910,-8.896342],[-9.140643,-8.688316,2.912517,6.700572,-5.935655,-5.421750,-9.037408,-5.283263,-4.895783],[-4.155800,-6.922004,-1.557233,-7.568246,-6.727094,-1.286547,-7.133703,-0.847854,5.113887],[-9.250933,5.500548,4.525296,6.415230,-5.436126,2.814623,-7.178092,-6.043396,7.432785],[-0.905911,-3.022504,4.953290,-8.638602,-9.302553,-7.756818,-5.642306,-1.662605,-8.392043],[4.937976,6.407890,3.461151,-4.081762,9.123679,-8.448096,-0.676441,-1.786220,8.201592],[6.229191,6.638432,-7.813408,-3.980129,-7.824043,3.112165,-0.861957,-9.143067,-2.507949],[-0.612843,-0.920688,2.960510,2.663905,1.935145,5.566542,7.316480,-5.704722,-9.840022],[-5.479665,7.836131,6.073560,4.659630,-7.881908,4.287626,-9.924258,8.716639,6.695647],[1.374081,-2.435762,-7.681454,-1.736093,8.342231,-2.215872,3.761482,-6.027028,-1.850733],[1.291541,3.760507,5.381077,-5.566588,1.060819,-7.193001,6.866967,4.450446,5.498402],[2.859894,1.622222,-5.245912,-0.037279,-6.507142,8.524631,-3.595905,6.565813,-1.074569],[-6.487593,-7.360334,-1.458604,0.671730,-6.451941,-7.995147,-1.761526,9.268398,-6.754618],[-8.107164,-7.313193,4.387218,8.841711,-7.083063,3.811389,8.213064,-4.166067,7.280826],[8.356671,-5.902861,9.925604,1.082505,-3.793817,7.400020,-3.765155,1.920781,5.437893],[-6.978640,-6.726725,8.943309,8.858961,6.782289,-3.319096,0.716066,0.129019,7.141953],[-5.147397,5.058988,-8.105988,8.324432,-2.200339,0.243059,0.219036,-9.726668,-6.210455],[5.180801,-4.247540,6.187310,-4.167890,-3.976104,-7.017215,-4.114192,-3.955205,5.655922],[1.752772,-0.532642,2.221205,5.426932,6.041321,-8.172856,6.455819,-3.700547,8.941967],[-2.304742,-8.683819,8.046729,-4.583496,8.718536,2.286808,1.092959,9.183270,-9.497864],[9.848005,0.570317,3.116926,9.316273,7.277151,8.322490,9.310257,-6.887962,-0.633380],[1.942801,-2.070395,-2.218451,6.181713,-8.834778,6.559842,-5.538828,-6.875856,6.267393]], dtype = "float32")#candidate|11811|(45, 9)|const|float32
const_11812 = relay.const([8,7,-8,-3,7,6,-3,-5,-2,-1,-10,-5,3,-1,-7,7,2,5,-9,5,-2,9,-1,8,-3,-10,-8,-1,-4,-2,-1,-4,5,1,8,9,10,-5,-4,-6,4,9,-8,4,5,3,-9,8], dtype = "int32")#candidate|11812|(48,)|const|int32
call_11809 = relay.TupleGetItem(func_3901_call(relay.reshape(var_11810.astype('float32'), [700,]), relay.reshape(const_11811.astype('float32'), [1, 405]), relay.reshape(const_11812.astype('int32'), [48,]), ), 5)
call_11813 = relay.TupleGetItem(func_3905_call(relay.reshape(var_11810.astype('float32'), [700,]), relay.reshape(const_11811.astype('float32'), [1, 405]), relay.reshape(const_11812.astype('int32'), [48,]), ), 5)
bop_11822 = relay.bitwise_xor(const_11811.astype('uint16'), relay.reshape(call_11809.astype('uint16'), relay.shape_of(const_11811))) # shape=(45, 9)
bop_11825 = relay.bitwise_xor(const_11811.astype('uint16'), relay.reshape(call_11813.astype('uint16'), relay.shape_of(const_11811))) # shape=(45, 9)
func_8702_call = mod.get_global_var('func_8702')
func_8703_call = mutated_mod.get_global_var('func_8703')
call_11827 = func_8702_call()
call_11828 = func_8702_call()
bop_11835 = relay.equal(bop_11822.astype('bool'), relay.reshape(const_11811.astype('bool'), relay.shape_of(bop_11822))) # shape=(45, 9)
bop_11838 = relay.equal(bop_11825.astype('bool'), relay.reshape(const_11811.astype('bool'), relay.shape_of(bop_11825))) # shape=(45, 9)
func_8015_call = mod.get_global_var('func_8015')
func_8017_call = mutated_mod.get_global_var('func_8017')
call_11847 = relay.TupleGetItem(func_8015_call(), 0)
call_11848 = relay.TupleGetItem(func_8017_call(), 0)
output = relay.Tuple([call_11802,var_11810,const_11812,call_11827,bop_11835,call_11847,])
output2 = relay.Tuple([call_11803,var_11810,const_11812,call_11828,bop_11838,call_11848,])
func_11861 = relay.Function([var_11810,], output)
mod['func_11861'] = func_11861
mod = relay.transform.InferType()(mod)
mutated_mod['func_11861'] = func_11861
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11862 = relay.var("var_11862", dtype = "float32", shape = (700,))#candidate|11862|(700,)|var|float32
func_11861_call = mutated_mod.get_global_var('func_11861')
call_11863 = func_11861_call(var_11862)
output = call_11863
func_11864 = relay.Function([var_11862], output)
mutated_mod['func_11864'] = func_11864
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11129_call = mod.get_global_var('func_11129')
func_11130_call = mutated_mod.get_global_var('func_11130')
call_11871 = func_11129_call()
call_11872 = func_11129_call()
func_9428_call = mod.get_global_var('func_9428')
func_9429_call = mutated_mod.get_global_var('func_9429')
call_11882 = func_9428_call()
call_11883 = func_9428_call()
func_10102_call = mod.get_global_var('func_10102')
func_10103_call = mutated_mod.get_global_var('func_10103')
call_11893 = func_10102_call()
call_11894 = func_10102_call()
func_1762_call = mod.get_global_var('func_1762')
func_1768_call = mutated_mod.get_global_var('func_1768')
const_11896 = relay.const([-1,-4,-10,-10,5,5,-6,9,-10,-8,-1,4,8,-5,1,5,2,-8,-4,1,4,7,-10,2,3,-2,6,-8,-6,-1,5,-9,-7,9,-7,3,8,-3,-8,10,-4,-8,10,7,9,3,5,-2,10,6,-4,9,8,-4,-7,-8,9,-1,3,7,5,-5,3,-3,-1,-8,-7,-8,-9,9,-7,6,6,6,-7,-9,-2,-5,4,-8,6,-9,-5,7,-9,9,-5,1,4,1,10,-6,-6,9,-8,6,-3,8,-4,-1,1,-9,6,-8,-7,4,10,-2,-10,10,-6,-3,-3,-6,-5,-10,-8,3,-8,4,1,-3,-9,-7,7,-8,-4,-3,-1,-4,7,-3,10,9,-6,-3,3,7,-4,3,-2,4,4,-2,6,3,9,-8,-9,-9,2,-3,-2,8,-5,-5,4,2,7,-4,2,-6,-1,-2,-3,-7,-4,9,9,10,-10,10,4,-1,7,-4,1,10,6,4,2,4,2,-10,3,-4,6,-5,7,3,-1,3,-9,-4,4,4,-9,-9,-4,-1,-10,-7,10,-9,8,-1,1,1,-6,4,-2,5,9,-2,7,-9,8,-5,10,5,8,-8,-1,-6,5,8,-2,-1,-1,5,6,-4,2,5,5,-1,-8,-1,-10,-8,9,-4,-1,2,-10,9,-3,-2,-4,6,-9,-4,7,-7,-4,-4,3,4,3,-7,4,-8,-8,-9,-9,4,5,-4,3,9,-8,-10,1,6,-9,6,6,-8,6,9,-6,3,10,4,-9,-1,-6,-10,5,2,7,-9,3,9,9,-7,10,-4,5,4,-1,-3,-7,7,-8,-10,-8,-10,-8,-2,-7,-2,7,7,-6,-10,-7,-5,5,-10,10,8,9,-8,-6,-4,7,8,-1,-8,8,-5,10,-3,1,-9,-1,8,-4,-9,-7,1,-8,-10,6,8,-7,-10,3,3,5,7,-9,-10,-3,1,-1,-6,1,-1,-5,2,-2,-8,-8,-10,-2,-10,4,-4,-8,-7,-5,-9,-8,-5,9,-4,2,9,4,2,8,9,-6,9,5,-5,8,9,4,6,5,-6,3,-6,7,-6,-4,9,7,-3,3,-5,2,6,1,-1,3,3,5,6,1,-8,-7,4,4,-10,-5,-7,-10,5,4,-8,-7,6,10,5,4,-6,-8,-6,-10,-9,-3,4,-9,5,-8,4,-5,7,-10,9,-4,6,-7,-6,1,4,2,-7,10,8,-6,1,-1,-7,1,-9,-10,8,-7,4,10,2,-7,-4,-3,-3,5,10,-4,-10,-4,-1,2,-2,6,9,-8,-9,-9,2,-7,1,-10,-7,10,3,-6,8,8,9,10,1,8,-2,4,9,10,-3,-2,9,10,8,6,4,-10,7,8,7,-9,2,-5,-5,4,-7,10,10,6,6,6,6,-10,5,3,5,-2,-7,10,4,-2,2,-5,-2,10,4,5,-1,7,4,-9,3,-5,-8,2,1,-3,6,5,10,5,3,-8,-4,2,6,-6,-3,-9,6,-5,7,-9,-7,-10,-2,-4,4,9,8,7,-3,3,2,8,-3,-6,-10,-3,9,-5,10,-6,-1,4,8], dtype = "uint8")#candidate|11896|(588,)|const|uint8
var_11897 = relay.var("var_11897", dtype = "float32", shape = (405,))#candidate|11897|(405,)|var|float32
var_11898 = relay.var("var_11898", dtype = "int32", shape = (48,))#candidate|11898|(48,)|var|int32
call_11895 = relay.TupleGetItem(func_1762_call(relay.reshape(const_11896.astype('uint8'), [6, 14, 7]), relay.reshape(const_11896.astype('uint8'), [6, 14, 7]), relay.reshape(const_11896.astype('uint8'), [6, 14, 7]), relay.reshape(var_11897.astype('float32'), [405,]), relay.reshape(var_11898.astype('int32'), [48,]), ), 2)
call_11899 = relay.TupleGetItem(func_1768_call(relay.reshape(const_11896.astype('uint8'), [6, 14, 7]), relay.reshape(const_11896.astype('uint8'), [6, 14, 7]), relay.reshape(const_11896.astype('uint8'), [6, 14, 7]), relay.reshape(var_11897.astype('float32'), [405,]), relay.reshape(var_11898.astype('int32'), [48,]), ), 2)
func_7556_call = mod.get_global_var('func_7556')
func_7559_call = mutated_mod.get_global_var('func_7559')
call_11902 = relay.TupleGetItem(func_7556_call(relay.reshape(const_11896.astype('uint8'), [588,])), 1)
call_11903 = relay.TupleGetItem(func_7559_call(relay.reshape(const_11896.astype('uint8'), [588,])), 1)
func_9982_call = mod.get_global_var('func_9982')
func_9987_call = mutated_mod.get_global_var('func_9987')
var_11909 = relay.var("var_11909", dtype = "int16", shape = (560,))#candidate|11909|(560,)|var|int16
var_11910 = relay.var("var_11910", dtype = "float32", shape = (363,))#candidate|11910|(363,)|var|float32
call_11908 = relay.TupleGetItem(func_9982_call(relay.reshape(var_11909.astype('int16'), [7, 10, 8]), relay.reshape(var_11909.astype('int16'), [7, 10, 8]), relay.reshape(var_11910.astype('float32'), [363,]), ), 1)
call_11911 = relay.TupleGetItem(func_9987_call(relay.reshape(var_11909.astype('int16'), [7, 10, 8]), relay.reshape(var_11909.astype('int16'), [7, 10, 8]), relay.reshape(var_11910.astype('float32'), [363,]), ), 1)
output = relay.Tuple([call_11871,call_11882,call_11893,call_11895,const_11896,var_11897,var_11898,call_11902,call_11908,var_11909,var_11910,])
output2 = relay.Tuple([call_11872,call_11883,call_11894,call_11899,const_11896,var_11897,var_11898,call_11903,call_11911,var_11909,var_11910,])
func_11922 = relay.Function([var_11897,var_11898,var_11909,var_11910,], output)
mod['func_11922'] = func_11922
mod = relay.transform.InferType()(mod)
mutated_mod['func_11922'] = func_11922
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11922_call = mutated_mod.get_global_var('func_11922')
var_11924 = relay.var("var_11924", dtype = "float32", shape = (405,))#candidate|11924|(405,)|var|float32
var_11925 = relay.var("var_11925", dtype = "int32", shape = (48,))#candidate|11925|(48,)|var|int32
var_11926 = relay.var("var_11926", dtype = "int16", shape = (560,))#candidate|11926|(560,)|var|int16
var_11927 = relay.var("var_11927", dtype = "float32", shape = (363,))#candidate|11927|(363,)|var|float32
call_11923 = func_11922_call(var_11924,var_11925,var_11926,var_11927,)
output = call_11923
func_11928 = relay.Function([var_11924,var_11925,var_11926,var_11927,], output)
mutated_mod['func_11928'] = func_11928
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10463_call = mod.get_global_var('func_10463')
func_10464_call = mutated_mod.get_global_var('func_10464')
call_11970 = relay.TupleGetItem(func_10463_call(), 1)
call_11971 = relay.TupleGetItem(func_10464_call(), 1)
func_8941_call = mod.get_global_var('func_8941')
func_8944_call = mutated_mod.get_global_var('func_8944')
var_11984 = relay.var("var_11984", dtype = "int32", shape = (48,))#candidate|11984|(48,)|var|int32
call_11983 = relay.TupleGetItem(func_8941_call(relay.reshape(var_11984.astype('int32'), [48,])), 4)
call_11985 = relay.TupleGetItem(func_8944_call(relay.reshape(var_11984.astype('int32'), [48,])), 4)
func_3901_call = mod.get_global_var('func_3901')
func_3905_call = mutated_mod.get_global_var('func_3905')
const_11987 = relay.const([-8.609827,3.106997,-9.812852,-3.866363,6.668369,8.279650,8.165364,-3.806915,5.483994,6.163448,1.112542,5.048252,9.182965,-9.369007,1.152248,-5.797751,-3.424927,-1.286499,-8.882194,-0.632412,4.812593,-6.012259,7.793979,-9.248272,9.892755,9.852564,9.474176,5.332078,4.235928,-6.413091,7.861852,6.406195,-1.356105,-4.640306,-3.261668,4.575247,-7.542999,-8.803486,-4.288481,-0.758119,2.046135,-1.158605,-9.838631,4.768761,1.554164,4.461438,-4.761692,7.658182,-8.239317,-8.898899,-3.956337,1.286356,9.888772,8.577422,-2.062960,1.664346,6.324078,-9.477021,1.731553,-7.096163,7.128291,4.538004,-4.786426,5.578925,-6.024924,2.058591,0.193185,7.152053,-4.647058,-7.889869,4.521645,-6.013263,3.152159,-3.025040,1.875545,-0.462447,-4.019460,-0.753827,-3.101051,-5.917834,0.964243,1.725805,-5.944924,7.740590,8.249568,9.495471,2.093739,-3.298058,-1.189739,-5.183533,6.109781,0.963632,-9.404938,-6.264626,1.592480,-9.207368,-6.622770,9.378721,-9.666708,7.793543,-9.025932,-0.193967,9.885117,-8.598260,-2.092459,5.843645,5.568101,3.876532,-4.627627,-2.525886,-3.514046,9.792865,5.286759,9.954900,7.344370,1.098332,7.436440,-0.559216,-8.333916,5.988371,0.231170,-0.973341,3.554263,-1.128399,2.762169,6.091046,6.582990,-8.517144,7.529904,6.843701,2.369153,-3.959116,-1.627821,9.080113,2.362236,1.884755,8.380500,-1.014382,-9.780658,-7.970360,7.370246,7.897968,-0.739559,6.940838,-6.298180,9.592300,-5.092463,-2.407685,-0.232544,8.791784,-4.856280,-8.713694,0.369653,-4.576898,6.606803,2.602781,-0.035454,-7.489775,8.732548,-0.164574,-7.222454,6.578508,2.362128,7.331812,4.863386,-0.500458,-6.612775,5.513788,4.139620,9.737749,-2.910107,3.062529,3.343893,-9.723871,-4.663509,-0.101171,-4.399166,2.750893,-3.519687,0.294539,2.973192,2.630366,-9.430076,9.049848,2.854192,-2.804072,-7.853799,-6.322231,1.165230,-2.007883,-3.069380,-2.249206,-8.619966,-8.905464,3.902833,-5.153353,8.650695,-8.284414,-7.229604,3.531325,-4.414286,0.402666,-9.969677,-4.187036,-8.559860,8.825667,-0.226394,7.082491,9.988932,0.653681,0.585714,8.820051,0.451155,-3.693621,-8.109030,9.699899,-4.980718,2.978615,0.008206,-5.022029,-9.819016,-3.581298,-3.009625,5.633149,4.733183,-2.663497,-0.934371,-6.183031,2.475194,1.369214,-3.369314,-1.353041,4.580055,1.100871,4.439951,3.206609,7.785223,-0.923175,5.186329,7.337201,-2.139646,-4.242631,-0.798610,8.393875,8.052126,2.645075,9.582491,-4.618266,6.108491,9.779582,-1.553481,-1.772604,-9.494496,4.710899,-4.878909,0.496495,-8.729533,2.786689,-5.677039,-3.136834,7.316735,8.798472,1.335550,9.708555,-6.202759,8.376390,4.371186,-5.890249,7.891425,-8.898724,8.244099,-4.586155,4.098078,-3.757518,-6.118023,6.929807,-7.686163,7.896845,9.240900,-6.733521,8.379399,-5.338226,4.837897,5.878498,-7.179755,-1.748460,2.145763,0.469395,-1.684738,-3.837083,-3.302897,-1.086416,-5.220974,-5.754353,-7.722833,0.042395,-3.771624,3.371284,4.492074,-6.564365,-4.247947,5.822375,-9.728326,-1.811184,-7.545770,3.521865,-3.828381,6.511745,1.951960,-8.492091,-0.119474,-0.137346,2.663226,-4.844911,-8.064945,-7.058494,8.651984,-9.836134,-9.003053,-4.055120,5.119453,1.020300,7.333444,-2.458473,-2.341027,-9.495544,0.462695,-6.229134,-0.504394,9.333413,2.808555,8.336521,3.656705,-3.923523,-0.147379,-1.130510,8.943197,-5.185558,-9.285555,9.150156,6.551605,4.813161,-9.790835,-3.307750,-9.534976,1.735491,3.946994,-1.786037,-7.279291,7.131260,3.681068,-9.936907,9.310951,1.208778,-1.043333,6.617178,-3.566868,-2.707584,-7.968117,-7.800405,-1.380925,-7.420045,-7.161944,-6.391802,-9.917292,-6.200110,4.858305,-9.672393,7.803562,-9.121732,-0.022202,3.524523,-8.112038,-2.603270,-4.258898,2.859618,-4.490992,1.923118,-8.746305,-4.033815,6.917371,-0.456026,5.335161,6.642992,-2.453725,-5.715846,5.236074,8.336271,1.580988,-4.459058,-1.774429,-9.398844,-0.742665,-7.410280,7.520897,0.891401,8.891465,5.206225,-5.052415,5.478875,-5.774567,0.028714,6.351052,9.572843,-7.114448,4.750269,1.303459,-8.816898,2.086660,-5.044184,9.663201,9.341417,2.747363,1.126583,7.959109,-5.172583,9.334543,-2.223967,3.059623,6.759688,8.847574,-8.754363,9.249137,-9.253941,9.804596,3.429652,-4.102946,5.305594,-5.832032,8.600729,2.875657,3.712268,-0.956411,-5.490484,-4.189566,4.022786,-0.244058,-1.904743,-4.951491,-9.871653,-8.372416,-4.613199,-4.261938,-2.041446,8.819720,-5.030510,-3.293360,1.264099,6.774293,-6.556287,0.258421,-1.429212,5.456053,9.318480,0.447284,-7.271049,-9.809609,8.812040,-5.276181,0.016989,8.568472,6.342053,4.939121,-5.427252,-6.470938,-6.494463,1.298257,1.195953,-9.070564,-9.628455,-2.568438,6.972269,-1.586782,8.611841,-5.668579,-0.793619,-3.221263,1.936538,-7.840270,6.736740,-1.703761,-3.321606,-9.898957,5.198205,2.924859,-7.529513,-5.872896,-8.026940,-0.407168,8.811605,-6.735159,5.213270,9.150503,-6.698655,-5.114206,-8.764110,-3.705189,-3.915451,-1.479444,8.468951,-5.117820,8.638421,9.969080,5.933098,3.351401,-0.606889,-3.880171,1.999503,9.344706,7.270976,8.038425,-7.291806,-8.685205,-4.612638,-7.351160,-9.846355,9.039258,8.703570,3.677210,5.586097,-2.320204,-2.628283,0.475926,-0.319850,-1.884349,-9.584167,-0.365809,0.884586,-8.235355,7.184383,3.445160,5.194997,-6.584797,8.073249,4.052443,-5.799086,-0.319363,-2.993075,-6.749901,-1.476013,-1.544948,-6.096768,-3.036047,4.419025,6.188240,2.949922,9.412192,-2.680562,-7.942240,0.460990,-5.736322,2.692923,7.181303,-2.717482,-6.514581,-8.127914,5.073582,6.271277,-5.721733,-5.878693,-5.686047,-0.571448,-9.640537,8.948416,-6.353772,-4.809725,-1.592758,3.333306,3.354349,-2.077591,8.177476,-1.106664,2.361193,-3.278568,5.395913,-3.952449,-8.877777,4.661853,8.785123,4.549345,8.069269,-1.252229,9.623447,7.192255,3.427278,8.561616,-4.093306,0.228511,8.600977,7.889039,1.464788,-7.848286,-2.496177,-4.204207,-8.397370,1.899033,-1.356935,-2.168019,-5.924073,-6.782856,7.210321,-1.755466,-8.887332,0.741993,4.490855,-0.178100,-8.221597,-7.366551,-7.015054,-4.625902,5.069364,-1.527582,5.436679,3.968329,6.122109,5.241621,0.575596,-1.273502,-3.422114,-1.954115,1.071624,-9.128173,0.088412,-5.006957,8.083233,4.287142,0.501977,-0.223567,-3.471674,-1.698990,-7.095888,-1.617834,4.875835,2.992868,-3.979649,7.760927,-3.867324,-4.776890,-1.525477,4.421148,1.887551,-5.356635,-9.601907,-0.429655,3.105084,-3.689356,-9.621492,6.409251,-9.803473,5.282819,-8.731597,-3.114512,-1.591619,9.250984,9.858587,5.234051,7.230505,2.889818,-9.452213,-9.176653,-3.056860,1.613648,5.782046,-4.183103,0.268821,-2.528520,-4.541713,-2.874701,9.392776,-0.325104,-1.801791,-6.212140,6.694491,-3.092711,1.915478,7.989241,8.496239,-2.669690,-6.777493,-8.208768,3.268622,7.311345,4.035049,-2.488449,2.120885,-5.694791,-8.878953,2.862070,-4.299054,-4.694942,-3.078750,-8.231579,-3.359002,-6.061375,2.110307,4.337359,-5.507298,7.135138,-4.911276,-9.733556], dtype = "float32")#candidate|11987|(700,)|const|float32
var_11988 = relay.var("var_11988", dtype = "float32", shape = (405,))#candidate|11988|(405,)|var|float32
call_11986 = relay.TupleGetItem(func_3901_call(relay.reshape(const_11987.astype('float32'), [700,]), relay.reshape(var_11988.astype('float32'), [1, 405]), relay.reshape(var_11984.astype('int32'), [48,]), ), 0)
call_11989 = relay.TupleGetItem(func_3905_call(relay.reshape(const_11987.astype('float32'), [700,]), relay.reshape(var_11988.astype('float32'), [1, 405]), relay.reshape(var_11984.astype('int32'), [48,]), ), 0)
output = relay.Tuple([call_11970,call_11983,var_11984,call_11986,const_11987,var_11988,])
output2 = relay.Tuple([call_11971,call_11985,var_11984,call_11989,const_11987,var_11988,])
func_12000 = relay.Function([var_11984,var_11988,], output)
mod['func_12000'] = func_12000
mod = relay.transform.InferType()(mod)
var_12001 = relay.var("var_12001", dtype = "int32", shape = (48,))#candidate|12001|(48,)|var|int32
var_12002 = relay.var("var_12002", dtype = "float32", shape = (405,))#candidate|12002|(405,)|var|float32
output = func_12000(var_12001,var_12002,)
func_12003 = relay.Function([var_12001,var_12002,], output)
mutated_mod['func_12003'] = func_12003
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7506_call = mod.get_global_var('func_7506')
func_7507_call = mutated_mod.get_global_var('func_7507')
call_12056 = relay.TupleGetItem(func_7506_call(), 1)
call_12057 = relay.TupleGetItem(func_7507_call(), 1)
var_12066 = relay.var("var_12066", dtype = "float32", shape = (7, 2, 15))#candidate|12066|(7, 2, 15)|var|float32
bop_12067 = relay.logical_and(call_12056.astype('bool'), relay.reshape(var_12066.astype('bool'), relay.shape_of(call_12056))) # shape=(7, 2, 15)
bop_12070 = relay.logical_and(call_12057.astype('bool'), relay.reshape(var_12066.astype('bool'), relay.shape_of(call_12057))) # shape=(7, 2, 15)
func_11099_call = mod.get_global_var('func_11099')
func_11102_call = mutated_mod.get_global_var('func_11102')
var_12075 = relay.var("var_12075", dtype = "float64", shape = (1144,))#candidate|12075|(1144,)|var|float64
var_12076 = relay.var("var_12076", dtype = "int16", shape = (560,))#candidate|12076|(560,)|var|int16
call_12074 = relay.TupleGetItem(func_11099_call(relay.reshape(var_12075.astype('float64'), [1144,]), relay.reshape(var_12076.astype('int16'), [280, 2]), ), 5)
call_12077 = relay.TupleGetItem(func_11102_call(relay.reshape(var_12075.astype('float64'), [1144,]), relay.reshape(var_12076.astype('int16'), [280, 2]), ), 5)
func_8437_call = mod.get_global_var('func_8437')
func_8439_call = mutated_mod.get_global_var('func_8439')
call_12084 = func_8437_call()
call_12085 = func_8437_call()
output = relay.Tuple([bop_12067,call_12074,var_12075,var_12076,call_12084,])
output2 = relay.Tuple([bop_12070,call_12077,var_12075,var_12076,call_12085,])
func_12097 = relay.Function([var_12066,var_12075,var_12076,], output)
mod['func_12097'] = func_12097
mod = relay.transform.InferType()(mod)
mutated_mod['func_12097'] = func_12097
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12097_call = mutated_mod.get_global_var('func_12097')
var_12099 = relay.var("var_12099", dtype = "float32", shape = (7, 2, 15))#candidate|12099|(7, 2, 15)|var|float32
var_12100 = relay.var("var_12100", dtype = "float64", shape = (1144,))#candidate|12100|(1144,)|var|float64
var_12101 = relay.var("var_12101", dtype = "int16", shape = (560,))#candidate|12101|(560,)|var|int16
call_12098 = func_12097_call(var_12099,var_12100,var_12101,)
output = call_12098
func_12102 = relay.Function([var_12099,var_12100,var_12101,], output)
mutated_mod['func_12102'] = func_12102
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12116 = relay.var("var_12116", dtype = "float64", shape = ())#candidate|12116|()|var|float64
var_12117 = relay.var("var_12117", dtype = "float64", shape = (15, 16, 14))#candidate|12117|(15, 16, 14)|var|float64
bop_12118 = relay.equal(var_12116.astype('bool'), var_12117.astype('bool')) # shape=(15, 16, 14)
bop_12123 = relay.add(var_12117.astype('uint64'), var_12116.astype('uint64')) # shape=(15, 16, 14)
output = relay.Tuple([bop_12118,bop_12123,])
output2 = relay.Tuple([bop_12118,bop_12123,])
F = relay.Function([var_12116,var_12117,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_12116,var_12117,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
	relay.transform.ToBasicBlockNormalForm(),
	relay.transform.FuseOps(3),
	relay.transform.DefuseOps(),
	relay.transform.SimplifyExpr(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_97 = relay.var("var_97", dtype = "float32", shape = (2, 10, 10))#candidate|97|(2, 10, 10)|var|float32
uop_98 = relay.asinh(var_97.astype('float32')) # shape=(2, 10, 10)
var_108 = relay.var("var_108", dtype = "float32", shape = (2, 10, 10))#candidate|108|(2, 10, 10)|var|float32
bop_109 = relay.greater(uop_98.astype('bool'), relay.reshape(var_108.astype('bool'), relay.shape_of(uop_98))) # shape=(2, 10, 10)
output = relay.Tuple([bop_109,])
output2 = relay.Tuple([bop_109,])
func_114 = relay.Function([var_97,var_108,], output)
mod['func_114'] = func_114
mod = relay.transform.InferType()(mod)
var_115 = relay.var("var_115", dtype = "float32", shape = (2, 10, 10))#candidate|115|(2, 10, 10)|var|float32
var_116 = relay.var("var_116", dtype = "float32", shape = (2, 10, 10))#candidate|116|(2, 10, 10)|var|float32
output = func_114(var_115,var_116,)
func_117 = relay.Function([var_115,var_116,], output)
mutated_mod['func_117'] = func_117
mutated_mod = relay.transform.InferType()(mutated_mod)
var_238 = relay.var("var_238", dtype = "uint64", shape = (1, 16, 3))#candidate|238|(1, 16, 3)|var|uint64
var_239 = relay.var("var_239", dtype = "uint64", shape = (8, 16, 3))#candidate|239|(8, 16, 3)|var|uint64
bop_240 = relay.left_shift(var_238.astype('uint64'), var_239.astype('uint64')) # shape=(8, 16, 3)
func_114_call = mod.get_global_var('func_114')
func_117_call = mutated_mod.get_global_var('func_117')
const_244 = relay.const([7.599655,-8.847572,5.143802,-8.255418,4.336424,-7.212538,4.789290,3.635137,0.761875,1.992860,4.350178,-6.374437,-4.478093,-1.999333,8.025365,-9.922202,-7.635487,-8.025699,-8.181858,2.585047,6.061793,-0.392873,-7.389806,2.991586,-9.780323,-4.443355,9.504584,-8.518883,-4.576299,1.617229,-1.523522,0.839642,-2.728700,-6.070120,-9.056161,-3.159247,7.512119,-2.423767,-7.078914,-5.002054,-6.928420,5.347244,1.755889,0.181227,-2.267069,3.047861,1.117222,5.784171,-1.904141,-0.230307,5.275826,-9.874564,5.206254,-8.899529,-4.074318,-1.482119,-3.570408,6.703277,8.396996,9.600736,7.377164,-6.806825,4.263364,7.590722,-5.682866,1.458696,-4.931648,-3.992788,-2.441266,-2.720621,5.909514,-3.979329,-7.250088,5.392364,-5.726501,7.620973,4.646839,-9.752566,1.587218,-7.016220,6.659603,-6.804704,-5.813350,-0.700689,9.876563,4.443646,0.925010,-5.903623,4.577703,-2.255506,8.908461,-8.515961,4.769441,6.114196,-6.785907,-6.849130,6.590294,7.251213,-4.249357,5.613854,-7.524398,-5.456196,-8.511669,2.584508,8.384650,6.418333,0.043171,9.761372,1.140982,-7.043102,3.884388,0.170455,0.536469,-1.140235,-8.525073,8.152663,-5.911303,1.381109,4.099308,9.212928,-4.564616,1.248480,-7.913377,-0.258904,8.366270,0.135758,-1.049739,-4.963618,1.746814,6.837632,-9.281448,6.427234,-0.438053,3.371245,7.048521,-4.886506,9.004249,-6.434294,9.173197,6.376919,4.631909,7.703578,-1.909381,2.877004,-0.024316,8.136744,0.279076,7.526090,0.651176,8.271053,2.993002,-3.610869,5.231370,-3.258992,-2.044148,-5.745681,-0.669391,1.177131,3.921704,7.448679,7.863398,-2.538359,7.074579,-1.389874,-8.552364,9.045819,-1.841008,-2.789268,-6.533370,-5.354186,4.493586,-3.711575,-6.749888,-5.374635,-0.777306,2.816074,-2.292594,2.230044,4.951371,1.871017,5.818325,-3.135204,-0.792404,-0.003517,6.461535,5.758509,3.034717,3.103000,1.684751,0.306514,4.090785,9.464232,-3.840153,4.904088,8.551979,7.221175,6.362727,-6.924558,-5.544594,4.967057], dtype = "float32")#candidate|244|(200,)|const|float32
call_243 = relay.TupleGetItem(func_114_call(relay.reshape(const_244.astype('float32'), [2, 10, 10]), relay.reshape(const_244.astype('float32'), [2, 10, 10]), ), 0)
call_245 = relay.TupleGetItem(func_117_call(relay.reshape(const_244.astype('float32'), [2, 10, 10]), relay.reshape(const_244.astype('float32'), [2, 10, 10]), ), 0)
var_249 = relay.var("var_249", dtype = "uint64", shape = (8, 16, 3))#candidate|249|(8, 16, 3)|var|uint64
bop_250 = relay.power(var_239.astype('float32'), relay.reshape(var_249.astype('float32'), relay.shape_of(var_239))) # shape=(8, 16, 3)
uop_256 = relay.log10(bop_250.astype('float32')) # shape=(8, 16, 3)
output = relay.Tuple([bop_240,call_243,const_244,uop_256,])
output2 = relay.Tuple([bop_240,call_245,const_244,uop_256,])
func_259 = relay.Function([var_238,var_239,var_249,], output)
mod['func_259'] = func_259
mod = relay.transform.InferType()(mod)
mutated_mod['func_259'] = func_259
mutated_mod = relay.transform.InferType()(mutated_mod)
func_259_call = mutated_mod.get_global_var('func_259')
var_261 = relay.var("var_261", dtype = "uint64", shape = (1, 16, 3))#candidate|261|(1, 16, 3)|var|uint64
var_262 = relay.var("var_262", dtype = "uint64", shape = (8, 16, 3))#candidate|262|(8, 16, 3)|var|uint64
var_263 = relay.var("var_263", dtype = "uint64", shape = (8, 16, 3))#candidate|263|(8, 16, 3)|var|uint64
call_260 = func_259_call(var_261,var_262,var_263,)
output = call_260
func_264 = relay.Function([var_261,var_262,var_263,], output)
mutated_mod['func_264'] = func_264
mutated_mod = relay.transform.InferType()(mutated_mod)
var_351 = relay.var("var_351", dtype = "float32", shape = (3, 4, 15))#candidate|351|(3, 4, 15)|var|float32
uop_352 = relay.log(var_351.astype('float32')) # shape=(3, 4, 15)
output = relay.Tuple([uop_352,])
output2 = relay.Tuple([uop_352,])
func_357 = relay.Function([var_351,], output)
mod['func_357'] = func_357
mod = relay.transform.InferType()(mod)
mutated_mod['func_357'] = func_357
mutated_mod = relay.transform.InferType()(mutated_mod)
var_358 = relay.var("var_358", dtype = "float32", shape = (3, 4, 15))#candidate|358|(3, 4, 15)|var|float32
func_357_call = mutated_mod.get_global_var('func_357')
call_359 = func_357_call(var_358)
output = call_359
func_360 = relay.Function([var_358], output)
mutated_mod['func_360'] = func_360
mutated_mod = relay.transform.InferType()(mutated_mod)
var_823 = relay.var("var_823", dtype = "float64", shape = (3, 4, 5))#candidate|823|(3, 4, 5)|var|float64
uop_824 = relay.sinh(var_823.astype('float64')) # shape=(3, 4, 5)
output = relay.Tuple([uop_824,])
output2 = relay.Tuple([uop_824,])
func_827 = relay.Function([var_823,], output)
mod['func_827'] = func_827
mod = relay.transform.InferType()(mod)
mutated_mod['func_827'] = func_827
mutated_mod = relay.transform.InferType()(mutated_mod)
var_828 = relay.var("var_828", dtype = "float64", shape = (3, 4, 5))#candidate|828|(3, 4, 5)|var|float64
func_827_call = mutated_mod.get_global_var('func_827')
call_829 = func_827_call(var_828)
output = call_829
func_830 = relay.Function([var_828], output)
mutated_mod['func_830'] = func_830
mutated_mod = relay.transform.InferType()(mutated_mod)
var_955 = relay.var("var_955", dtype = "uint16", shape = ())#candidate|955|()|var|uint16
var_956 = relay.var("var_956", dtype = "uint16", shape = (11, 7, 7))#candidate|956|(11, 7, 7)|var|uint16
bop_957 = relay.greater_equal(var_955.astype('bool'), var_956.astype('bool')) # shape=(11, 7, 7)
func_357_call = mod.get_global_var('func_357')
func_360_call = mutated_mod.get_global_var('func_360')
const_961 = relay.const([-7.047358,5.259800,6.309671,2.106262,-8.902023,1.943368,4.909589,5.780008,9.674840,-1.526215,2.298213,-5.336410,2.623018,-3.676583,1.797130,6.750691,-7.155130,-7.522338,9.929738,-9.306447,-0.128966,3.713036,-1.380059,-3.133765,2.620291,-8.436327,2.519891,-0.366902,-4.977346,-4.522902,-2.948069,5.912962,-9.455175,-3.725656,-9.620567,8.398365,-9.643545,-0.880860,0.402426,-4.897039,7.840487,-9.756119,2.524925,-7.671625,1.301664,-7.506665,-1.813212,3.284858,4.804719,-9.210096,-6.575119,-2.992852,7.851449,9.234722,9.953460,6.830239,-1.874230,-4.588113,-3.442695,8.974280,4.505077,1.152872,-2.132817,-2.296622,-1.279131,9.087765,-6.486198,-8.786032,-5.897748,8.387245,1.109260,8.770163,-5.773505,-9.564814,-2.964376,-4.031754,5.913660,9.138286,-6.684284,5.553963,-6.822689,8.639042,5.380259,-4.279433,7.059023,4.881196,9.132537,-3.684577,-0.895568,-2.136060,2.030316,-9.868218,2.145730,-1.816448,2.283231,-9.297398,-3.084863,7.163785,0.891218,9.061628,2.429185,-3.117219,7.403219,-4.866569,0.460923,-9.717322,2.584196,2.650467,-9.888259,0.815813,1.810836,-1.408415,0.904414,5.771437,1.489513,-3.043347,-3.557021,1.650827,2.168762,9.799196,6.429527,3.017553,9.772269,4.816401,-8.640008,8.984405,-1.370883,8.125595,2.948183,5.188842,-4.527894,5.245001,-1.977808,-3.923961,-5.788526,-2.305121,-5.347498,1.819671,-2.437134,8.061397,8.565829,-0.888461,-7.829253,8.263028,3.479828,8.328439,-9.710296,-0.364884,9.012280,6.607391,-9.836378,8.111913,7.550246,-3.522404,9.673788,8.953089,8.651228,3.251820,2.449359,1.127652,0.041806,-9.092975,-1.455975,-0.296727,-3.768437,6.956592,7.556398,8.311064,5.622633,-7.776241,2.613806,7.104790,2.082732,8.499476,-8.263249,0.129929,4.232866,3.419033,-6.283877,0.532689], dtype = "float32")#candidate|961|(180,)|const|float32
call_960 = relay.TupleGetItem(func_357_call(relay.reshape(const_961.astype('float32'), [3, 4, 15])), 0)
call_962 = relay.TupleGetItem(func_360_call(relay.reshape(const_961.astype('float32'), [3, 4, 15])), 0)
output = relay.Tuple([bop_957,call_960,const_961,])
output2 = relay.Tuple([bop_957,call_962,const_961,])
func_964 = relay.Function([var_955,var_956,], output)
mod['func_964'] = func_964
mod = relay.transform.InferType()(mod)
mutated_mod['func_964'] = func_964
mutated_mod = relay.transform.InferType()(mutated_mod)
func_964_call = mutated_mod.get_global_var('func_964')
var_966 = relay.var("var_966", dtype = "uint16", shape = ())#candidate|966|()|var|uint16
var_967 = relay.var("var_967", dtype = "uint16", shape = (11, 7, 7))#candidate|967|(11, 7, 7)|var|uint16
call_965 = func_964_call(var_966,var_967,)
output = call_965
func_968 = relay.Function([var_966,var_967,], output)
mutated_mod['func_968'] = func_968
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1761 = relay.var("var_1761", dtype = "float32", shape = (1, 13, 15))#candidate|1761|(1, 13, 15)|var|float32
uop_1762 = relay.exp(var_1761.astype('float32')) # shape=(1, 13, 15)
output = relay.Tuple([uop_1762,])
output2 = relay.Tuple([uop_1762,])
func_1766 = relay.Function([var_1761,], output)
mod['func_1766'] = func_1766
mod = relay.transform.InferType()(mod)
var_1767 = relay.var("var_1767", dtype = "float32", shape = (1, 13, 15))#candidate|1767|(1, 13, 15)|var|float32
output = func_1766(var_1767)
func_1768 = relay.Function([var_1767], output)
mutated_mod['func_1768'] = func_1768
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2318 = relay.var("var_2318", dtype = "float64", shape = (9, 7, 11))#candidate|2318|(9, 7, 11)|var|float64
uop_2319 = relay.asinh(var_2318.astype('float64')) # shape=(9, 7, 11)
output = relay.Tuple([uop_2319,])
output2 = relay.Tuple([uop_2319,])
func_2323 = relay.Function([var_2318,], output)
mod['func_2323'] = func_2323
mod = relay.transform.InferType()(mod)
var_2324 = relay.var("var_2324", dtype = "float64", shape = (9, 7, 11))#candidate|2324|(9, 7, 11)|var|float64
output = func_2323(var_2324)
func_2325 = relay.Function([var_2324], output)
mutated_mod['func_2325'] = func_2325
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2396 = relay.var("var_2396", dtype = "float32", shape = (1, 13, 6))#candidate|2396|(1, 13, 6)|var|float32
uop_2397 = relay.asin(var_2396.astype('float32')) # shape=(1, 13, 6)
func_114_call = mod.get_global_var('func_114')
func_117_call = mutated_mod.get_global_var('func_117')
var_2400 = relay.var("var_2400", dtype = "float32", shape = (200,))#candidate|2400|(200,)|var|float32
call_2399 = relay.TupleGetItem(func_114_call(relay.reshape(var_2400.astype('float32'), [2, 10, 10]), relay.reshape(var_2400.astype('float32'), [2, 10, 10]), ), 0)
call_2401 = relay.TupleGetItem(func_117_call(relay.reshape(var_2400.astype('float32'), [2, 10, 10]), relay.reshape(var_2400.astype('float32'), [2, 10, 10]), ), 0)
output = relay.Tuple([uop_2397,call_2399,var_2400,])
output2 = relay.Tuple([uop_2397,call_2401,var_2400,])
func_2406 = relay.Function([var_2396,var_2400,], output)
mod['func_2406'] = func_2406
mod = relay.transform.InferType()(mod)
var_2407 = relay.var("var_2407", dtype = "float32", shape = (1, 13, 6))#candidate|2407|(1, 13, 6)|var|float32
var_2408 = relay.var("var_2408", dtype = "float32", shape = (200,))#candidate|2408|(200,)|var|float32
output = func_2406(var_2407,var_2408,)
func_2409 = relay.Function([var_2407,var_2408,], output)
mutated_mod['func_2409'] = func_2409
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2428 = relay.var("var_2428", dtype = "float64", shape = (7, 7))#candidate|2428|(7, 7)|var|float64
uop_2429 = relay.atanh(var_2428.astype('float64')) # shape=(7, 7)
output = relay.Tuple([uop_2429,])
output2 = relay.Tuple([uop_2429,])
func_2447 = relay.Function([var_2428,], output)
mod['func_2447'] = func_2447
mod = relay.transform.InferType()(mod)
mutated_mod['func_2447'] = func_2447
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2448 = relay.var("var_2448", dtype = "float64", shape = (7, 7))#candidate|2448|(7, 7)|var|float64
func_2447_call = mutated_mod.get_global_var('func_2447')
call_2449 = func_2447_call(var_2448)
output = call_2449
func_2450 = relay.Function([var_2448], output)
mutated_mod['func_2450'] = func_2450
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3791 = relay.var("var_3791", dtype = "float32", shape = (14, 14, 3))#candidate|3791|(14, 14, 3)|var|float32
uop_3792 = relay.atanh(var_3791.astype('float32')) # shape=(14, 14, 3)
output = relay.Tuple([uop_3792,])
output2 = relay.Tuple([uop_3792,])
func_3801 = relay.Function([var_3791,], output)
mod['func_3801'] = func_3801
mod = relay.transform.InferType()(mod)
mutated_mod['func_3801'] = func_3801
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3802 = relay.var("var_3802", dtype = "float32", shape = (14, 14, 3))#candidate|3802|(14, 14, 3)|var|float32
func_3801_call = mutated_mod.get_global_var('func_3801')
call_3803 = func_3801_call(var_3802)
output = call_3803
func_3804 = relay.Function([var_3802], output)
mutated_mod['func_3804'] = func_3804
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3951 = relay.var("var_3951", dtype = "float64", shape = (13, 15, 13))#candidate|3951|(13, 15, 13)|var|float64
var_3952 = relay.var("var_3952", dtype = "float64", shape = (13, 15, 13))#candidate|3952|(13, 15, 13)|var|float64
bop_3953 = relay.divide(var_3951.astype('float64'), relay.reshape(var_3952.astype('float64'), relay.shape_of(var_3951))) # shape=(13, 15, 13)
output = bop_3953
output2 = bop_3953
func_3956 = relay.Function([var_3951,var_3952,], output)
mod['func_3956'] = func_3956
mod = relay.transform.InferType()(mod)
mutated_mod['func_3956'] = func_3956
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3956_call = mutated_mod.get_global_var('func_3956')
var_3958 = relay.var("var_3958", dtype = "float64", shape = (13, 15, 13))#candidate|3958|(13, 15, 13)|var|float64
var_3959 = relay.var("var_3959", dtype = "float64", shape = (13, 15, 13))#candidate|3959|(13, 15, 13)|var|float64
call_3957 = func_3956_call(var_3958,var_3959,)
output = call_3957
func_3960 = relay.Function([var_3958,var_3959,], output)
mutated_mod['func_3960'] = func_3960
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3976 = relay.var("var_3976", dtype = "float64", shape = (8, 9, 13))#candidate|3976|(8, 9, 13)|var|float64
uop_3977 = relay.acosh(var_3976.astype('float64')) # shape=(8, 9, 13)
func_3801_call = mod.get_global_var('func_3801')
func_3804_call = mutated_mod.get_global_var('func_3804')
var_3990 = relay.var("var_3990", dtype = "float32", shape = (588,))#candidate|3990|(588,)|var|float32
call_3989 = relay.TupleGetItem(func_3801_call(relay.reshape(var_3990.astype('float32'), [14, 14, 3])), 0)
call_3991 = relay.TupleGetItem(func_3804_call(relay.reshape(var_3990.astype('float32'), [14, 14, 3])), 0)
func_357_call = mod.get_global_var('func_357')
func_360_call = mutated_mod.get_global_var('func_360')
var_4004 = relay.var("var_4004", dtype = "float32", shape = (180,))#candidate|4004|(180,)|var|float32
call_4003 = relay.TupleGetItem(func_357_call(relay.reshape(var_4004.astype('float32'), [3, 4, 15])), 0)
call_4005 = relay.TupleGetItem(func_360_call(relay.reshape(var_4004.astype('float32'), [3, 4, 15])), 0)
output = relay.Tuple([uop_3977,call_3989,var_3990,call_4003,var_4004,])
output2 = relay.Tuple([uop_3977,call_3991,var_3990,call_4005,var_4004,])
func_4012 = relay.Function([var_3976,var_3990,var_4004,], output)
mod['func_4012'] = func_4012
mod = relay.transform.InferType()(mod)
mutated_mod['func_4012'] = func_4012
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4012_call = mutated_mod.get_global_var('func_4012')
var_4014 = relay.var("var_4014", dtype = "float64", shape = (8, 9, 13))#candidate|4014|(8, 9, 13)|var|float64
var_4015 = relay.var("var_4015", dtype = "float32", shape = (588,))#candidate|4015|(588,)|var|float32
var_4016 = relay.var("var_4016", dtype = "float32", shape = (180,))#candidate|4016|(180,)|var|float32
call_4013 = func_4012_call(var_4014,var_4015,var_4016,)
output = call_4013
func_4017 = relay.Function([var_4014,var_4015,var_4016,], output)
mutated_mod['func_4017'] = func_4017
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4361 = relay.var("var_4361", dtype = "int64", shape = (15, 11, 14))#candidate|4361|(15, 11, 14)|var|int64
var_4362 = relay.var("var_4362", dtype = "int64", shape = (15, 11, 14))#candidate|4362|(15, 11, 14)|var|int64
bop_4363 = relay.maximum(var_4361.astype('int64'), relay.reshape(var_4362.astype('int64'), relay.shape_of(var_4361))) # shape=(15, 11, 14)
output = bop_4363
output2 = bop_4363
func_4366 = relay.Function([var_4361,var_4362,], output)
mod['func_4366'] = func_4366
mod = relay.transform.InferType()(mod)
var_4367 = relay.var("var_4367", dtype = "int64", shape = (15, 11, 14))#candidate|4367|(15, 11, 14)|var|int64
var_4368 = relay.var("var_4368", dtype = "int64", shape = (15, 11, 14))#candidate|4368|(15, 11, 14)|var|int64
output = func_4366(var_4367,var_4368,)
func_4369 = relay.Function([var_4367,var_4368,], output)
mutated_mod['func_4369'] = func_4369
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4693 = relay.var("var_4693", dtype = "float32", shape = (13, 12, 10))#candidate|4693|(13, 12, 10)|var|float32
uop_4694 = relay.acosh(var_4693.astype('float32')) # shape=(13, 12, 10)
output = uop_4694
output2 = uop_4694
func_4700 = relay.Function([var_4693,], output)
mod['func_4700'] = func_4700
mod = relay.transform.InferType()(mod)
var_4701 = relay.var("var_4701", dtype = "float32", shape = (13, 12, 10))#candidate|4701|(13, 12, 10)|var|float32
output = func_4700(var_4701)
func_4702 = relay.Function([var_4701], output)
mutated_mod['func_4702'] = func_4702
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4838 = relay.var("var_4838", dtype = "float32", shape = (8, 1, 2))#candidate|4838|(8, 1, 2)|var|float32
uop_4839 = relay.cosh(var_4838.astype('float32')) # shape=(8, 1, 2)
uop_4841 = relay.asin(var_4838.astype('float32')) # shape=(8, 1, 2)
output = relay.Tuple([uop_4839,uop_4841,])
output2 = relay.Tuple([uop_4839,uop_4841,])
func_4855 = relay.Function([var_4838,], output)
mod['func_4855'] = func_4855
mod = relay.transform.InferType()(mod)
mutated_mod['func_4855'] = func_4855
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4856 = relay.var("var_4856", dtype = "float32", shape = (8, 1, 2))#candidate|4856|(8, 1, 2)|var|float32
func_4855_call = mutated_mod.get_global_var('func_4855')
call_4857 = func_4855_call(var_4856)
output = call_4857
func_4858 = relay.Function([var_4856], output)
mutated_mod['func_4858'] = func_4858
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4910 = relay.const([[[-1.899886,-0.504154,-8.149068,-8.020363,-3.901252,4.215493],[-6.631582,8.759224,-5.083346,9.709569,-1.203079,-1.685659],[-1.852573,2.845503,-5.023707,-0.350786,-9.185947,-0.222219],[3.177266,6.088904,8.681982,7.956413,-0.070723,-7.241202],[2.817517,8.345942,4.119306,0.444031,6.164491,-3.826514],[7.188812,-4.228017,4.614588,9.105124,7.239057,6.022251],[1.772358,2.538164,6.363638,0.774904,6.117122,0.958426]],[[-8.072032,-2.587392,1.099977,-1.620439,8.592341,-9.431864],[0.598765,1.115217,-5.934775,-4.535112,2.044961,7.448684],[2.911739,-9.173926,8.657612,-6.487201,-4.261449,-0.607541],[9.556228,1.259683,8.104717,-1.481748,9.290572,-7.595983],[-5.914535,4.401245,-5.212853,-0.371348,9.300374,-7.973329],[-5.691507,9.699385,7.758539,6.247937,-8.888858,5.027621],[-0.322928,-6.032818,4.101620,-8.175014,2.259874,-2.358664]],[[-1.256953,-2.447630,8.390764,5.205549,4.823815,-4.613333],[-0.985215,7.005231,-3.039581,-2.102465,-0.155162,-0.815429],[6.599792,7.441386,6.559873,-9.466993,0.246983,6.350736],[2.253449,-0.257190,1.582702,5.282936,-0.584713,-2.585550],[0.973568,-2.121700,-5.492583,-9.746300,9.457702,-0.514981],[5.776607,-2.293813,7.922049,9.817543,-9.499415,0.840945],[-9.220761,1.125034,-1.837117,-0.488968,3.861688,5.370885]],[[5.033158,8.748674,-9.942766,9.569582,0.190883,-0.189538],[-5.472424,8.437755,1.609919,-5.464546,-8.835613,5.219205],[-1.944333,-9.339230,-7.307156,4.989414,4.610379,-9.865177],[-2.390246,3.231575,1.570727,7.676168,5.664394,3.962769],[9.932709,0.071653,8.012442,-7.110821,-2.186793,3.597891],[8.290219,-5.657456,-1.377418,-0.355103,6.716473,-3.549133],[3.874766,-1.472046,-3.963986,3.954258,2.929354,2.919784]],[[9.893383,-9.197667,1.367297,-1.108435,-9.333623,7.132390],[7.573908,-0.698075,-4.860549,-4.139661,-9.980906,-6.971044],[-9.052646,-1.522140,-2.343700,-0.826833,-0.811033,9.107642],[2.993062,-4.183920,8.669347,-8.365580,1.017461,6.382199],[7.683224,5.551894,-3.001465,-2.293295,4.181544,-8.003131],[1.210788,-8.644760,-5.783301,3.988103,6.200722,7.944286],[5.691710,-5.218890,-3.386325,-9.301514,9.393911,8.448474]],[[-0.367818,-3.204965,2.528725,8.426134,7.174565,-1.546762],[-0.935952,2.957238,8.978315,-7.497612,-7.013624,3.864566],[-4.567517,-9.216123,0.849507,7.564798,-4.198190,5.195562],[-1.376341,-8.785029,-6.737903,5.407232,-1.041019,4.331481],[-7.711730,-2.762488,-8.393360,2.342489,-0.738611,-6.769982],[-4.328979,3.611453,6.870462,-1.018957,4.463973,4.420781],[3.451191,-5.023469,-0.504339,3.909915,6.534622,2.069294]],[[2.780820,-5.383636,8.522288,1.761179,-2.548138,-7.357365],[3.276839,-2.409323,9.335156,2.013110,-9.911957,-7.565307],[5.559574,8.721300,1.261019,-0.472995,-0.717091,-2.364941],[3.739976,9.033323,-1.502318,8.277023,-9.056129,8.209491],[4.865231,-0.710243,-0.491312,-8.313561,-6.944320,4.059076],[8.676616,-0.287949,-9.083606,8.294842,-0.576581,-0.125364],[-6.142349,-4.307788,8.875022,-7.538688,-4.215247,-5.139147]]], dtype = "float32")#candidate|4910|(7, 7, 6)|const|float32
uop_4911 = relay.acos(const_4910.astype('float32')) # shape=(7, 7, 6)
func_2447_call = mod.get_global_var('func_2447')
func_2450_call = mutated_mod.get_global_var('func_2450')
const_4914 = relay.const([[6.704444,-6.374622,-4.043354,9.491486,8.998658,-9.805653,-7.814464,-5.705844,-3.693981,0.397785,3.932142,-9.953708,3.884052,-4.905328,8.406473,9.436077,6.406627,-6.774829,-8.948408,-5.599460,-4.094238,5.208766,-1.175570,-3.705409,6.539598,2.686786,-3.345978,-5.254202,-5.777871,1.859185,-1.404045,-9.362993,-8.370586,3.157045,5.135462,-9.472027,1.357512,-0.431054,5.533261,-4.465720,-8.682730,0.111335,8.995766,9.154681,-9.965329,5.959848,1.056144,-0.533784,0.744462]], dtype = "float64")#candidate|4914|(1, 49)|const|float64
call_4913 = relay.TupleGetItem(func_2447_call(relay.reshape(const_4914.astype('float64'), [7, 7])), 0)
call_4915 = relay.TupleGetItem(func_2450_call(relay.reshape(const_4914.astype('float64'), [7, 7])), 0)
func_4700_call = mod.get_global_var('func_4700')
func_4702_call = mutated_mod.get_global_var('func_4702')
const_4918 = relay.const([[-1.134392,4.686722,4.381200,-3.456081,0.640111,-8.458129,-9.365800,-5.077192,-3.700013,6.620987,-6.965194,-9.012031,9.174323,-2.189890,6.579318,-4.975324,-1.201045,-4.978906,-2.028337,-3.962350,8.656004,2.130433,1.418777,-5.828345,-1.526149,-1.613628,-7.228732,8.279875,-5.578916,5.789707,3.224695,9.235924,-9.644171,3.451322,-9.249048,-1.509215,1.509360,-9.520779,-9.934641,-9.786781,-9.349973,6.575053,-9.337788,4.900014,-6.636128,-3.638418,-1.857758,2.168856,-9.247174,6.051848,1.668980,-4.733554,0.699222,1.415840,6.060636,-1.608908,-4.611490,3.515093,5.886756,6.231277,8.453656,2.243869,4.568280,-1.592664,3.996161,-7.547439,-9.789933,2.669776,0.029278,2.582118,4.955934,9.122999,6.285016,-0.613965,6.478882,-4.379022,5.004177,-9.751545,-4.616203,-1.323981,-0.406735,-7.211495,7.046238,-3.607557,-3.715365,-6.412734,-5.336864,0.261306,-0.168370,-1.467014,2.276427,-2.514694,-1.044420,7.298443,-0.233752,-2.148350,8.156920,1.999947,2.473087,4.793262,7.192295,2.510129,0.071854,4.434363,-5.395964,3.563011,-1.403422,-6.170447,-0.437332,9.275574,-0.719524,8.230751,7.243954,-1.242722,2.001781,-9.770769,5.002830,-8.381174,3.872279,-7.853194,1.456588,3.154813,-9.683572,-7.822655,-8.740209,7.176633,2.436514,-0.084440,1.549365,8.457008,-4.534596,0.177949,1.311998,6.453867,9.984345,-0.096886,2.501106,-1.845020,-8.936727,8.150318,-6.240626,0.450754,8.798318,-3.183371,-8.358214,7.302505,-0.528631,6.463218,-8.575601,-4.407340,-4.358236,-5.398632,-2.952996,3.894975,0.447156,0.880623,6.069157,-8.535168,-3.823829,3.674927,-1.807664,-0.674137,3.174472,8.169139,-2.442403,0.736961,-6.821832,-9.982841,-8.060918,3.461209,-7.496566,-8.137598,8.969032,4.924941,9.577004,3.712935,1.445850,-0.111161,2.032251,5.977838,9.818969,-9.022573,-3.621668,3.048272,6.221099,4.770544,7.971519,3.611383,-5.887152,2.409519,-1.182472,8.958173,-7.754861,-1.783873,8.327705,4.455699,5.869470,9.596258,-2.384183,-8.951529,3.265157,-5.959639,6.149194,-7.556555,-1.420404,-0.544431,-9.223604,-6.697691,7.830890,-1.686976,-3.860759,-6.905725,6.718735,-9.541060,-5.653428,9.376634,-7.095926,-1.396030,-2.095430,1.705579,-7.258291,1.298193,3.034829,1.447723,-1.459540,-3.953887,0.222416,-9.452510,-8.848748,6.507428,-9.783877,-5.984591,-9.163007,-4.602656,8.780646,2.108797,3.726692,-2.327335,-9.524038,-9.762767,6.663670,-0.203624,8.966958,-7.732223,3.636955,-5.139928,-7.762608,-0.530054,1.386378,6.633616,-0.612488,7.854598,5.355862,-4.187814,6.183075,6.176943,4.058401,-6.566624,-4.555476,-3.893622],[-8.701274,9.074809,-7.494415,9.106556,5.985920,-8.962774,1.881735,5.137435,-7.638586,-9.775643,-3.859697,-3.266768,3.474777,-0.327737,2.955616,2.853757,2.155943,4.522018,-7.611598,-6.771889,9.675083,8.858235,-7.925131,-7.767051,8.269399,-0.407561,-8.497466,4.425234,6.807606,4.263771,8.826451,-7.472689,-8.311222,-9.746804,-4.374153,-5.543344,2.448157,-6.061041,-7.686324,-2.331178,-9.457923,-5.077217,-5.481417,-0.255131,2.308222,-0.766742,5.320486,-4.291003,-7.755597,-8.562987,2.326096,2.773369,7.700868,-5.791095,-9.008055,0.973849,6.699130,7.940157,2.734594,-6.651109,1.521792,1.092423,9.691708,-9.813724,-3.944985,0.394817,8.647276,6.870488,-9.378160,1.083895,-5.956349,2.947481,-6.922774,6.155046,4.978715,-7.741559,3.328351,4.625956,1.568815,-6.405891,-5.953305,9.498207,-2.451684,-8.844338,-4.840327,5.270022,-7.958065,6.123378,2.557253,7.516226,-0.870666,-6.957003,8.383013,-4.417262,1.722441,3.131896,-5.350334,-5.512610,8.576271,-8.458617,-0.098293,-4.228322,-9.187918,5.465422,7.720176,-1.662669,-1.360694,6.754669,-8.159399,2.838073,-3.666088,-1.568666,9.878744,-7.732327,3.763670,6.823485,-2.682722,9.110230,0.415076,7.482151,8.736937,-3.156106,-3.059960,4.393229,0.602184,-1.793797,3.425351,1.644276,0.575795,9.468019,-7.401789,-7.531915,9.476901,7.844523,-7.969238,7.172395,6.970509,-4.239253,7.948873,-0.786363,-0.514173,-5.679611,8.948345,-5.907319,9.905857,-7.715845,-9.922120,9.903479,-7.952434,-7.877113,6.004793,-7.045784,9.584534,-4.843894,-3.684770,-3.971168,5.014136,5.250407,-9.637171,-4.611795,0.097381,1.446806,9.250505,8.830383,3.523344,6.277799,0.837377,0.045822,-0.680297,4.727984,3.362122,5.020352,2.423261,6.393318,-6.205011,0.809659,-3.034604,-4.140561,8.691973,6.444617,0.589391,0.648188,-3.460689,-8.372702,-9.476777,-4.798681,1.496034,0.867339,-7.988928,-0.383468,-0.897945,-6.413685,-1.434277,-4.676888,7.676407,-2.678528,-0.820445,5.311185,7.105027,7.086707,-5.643461,7.573743,7.482148,-7.024972,6.656895,2.462318,-3.380536,4.318169,-8.290263,4.385455,0.466337,-2.999490,1.806041,1.192562,8.624873,4.500556,-4.905367,0.216156,0.267749,5.740290,-9.069829,-8.147748,-5.790518,1.498640,3.448036,-7.403461,5.705431,6.117966,2.457574,9.571657,5.203752,-5.475746,5.439910,-8.787173,0.308351,2.726878,-9.932350,-3.495032,7.402167,4.646233,-7.132879,-5.609834,-4.860058,7.694853,-9.330253,9.899555,7.572291,2.796036,8.763454,5.219543,6.740642,1.471753,-9.695473,-1.343291,1.721739,-4.324456,-2.578524,1.467039,-5.640649,-4.850254],[0.924970,5.716776,5.015203,2.109896,-8.669460,6.680912,-1.521628,4.589297,-4.816902,-1.192157,2.280458,-7.518790,8.139645,-8.316541,-9.724490,-6.111079,-6.714260,-0.548630,-3.433930,5.162621,-3.461110,-2.501268,1.263661,7.122034,-9.635269,7.305113,-8.740077,0.584113,-4.205240,-6.209305,-2.096470,-9.963157,-0.982391,-1.803664,8.303147,7.625084,-2.744259,-0.052178,3.720064,6.629054,5.442370,7.337242,-8.358654,-0.278311,-7.977705,0.066052,3.021039,-2.594899,-1.718312,3.307892,-1.341840,7.776002,-9.654129,-6.121370,6.980464,5.650825,-9.881546,7.455495,6.599850,5.035857,-0.112150,-4.422417,4.310611,0.887642,4.337674,9.115319,0.784486,-2.062102,-0.875443,4.036115,7.338738,-7.733491,5.325330,-4.577561,0.357842,-8.844986,2.411015,-8.734294,5.256224,-1.846913,-6.505287,-3.681440,9.447424,8.655634,2.422039,6.955158,-8.698052,4.272409,6.829491,-2.642205,7.953344,-0.060394,-4.672260,8.524473,-9.784197,-8.085512,7.162419,-9.776165,-1.737398,-8.159070,-5.178021,-3.763147,-7.109083,-5.675156,5.454536,-1.793243,-8.929598,3.621806,9.987377,-1.163209,0.504983,-6.838940,-2.427531,0.191488,4.637497,-4.752487,7.827002,-3.201268,-2.581710,-5.585308,4.246332,9.432716,3.980408,-4.277140,6.995521,8.020590,-3.772627,-7.773634,-9.183387,8.163783,3.250119,-6.646160,-5.458137,-3.978989,3.261293,-8.441992,-9.588113,-1.862306,0.177866,-4.437382,-0.264845,0.326643,-7.399472,3.036969,9.514863,-3.389764,-4.212978,4.476383,1.629879,-1.933818,-5.144987,7.207330,-7.362001,7.582605,4.113009,-3.786247,3.479064,-2.903847,9.215418,-8.470796,-0.345378,-0.685082,9.879561,7.705739,5.870465,-8.318310,-3.371084,-1.315242,9.348833,-5.593115,-6.658433,-0.345466,-0.826987,5.089418,-7.031162,-3.392236,-7.571797,-7.107775,5.953865,-3.317822,7.425270,-3.719720,-5.720124,-1.228572,-5.382584,-4.927299,9.385308,-2.858715,7.821678,-5.775060,-9.872570,-4.439631,8.091514,-6.712976,-5.320936,8.487331,3.086563,-6.461908,8.000981,-0.201132,9.755599,-7.151051,5.310064,8.546323,-5.132427,4.988753,-5.516444,7.582680,-1.496200,-0.270870,-8.800460,-7.572242,-4.596252,6.239820,7.115138,5.220962,5.443051,4.650222,7.967770,8.814180,-8.115712,-3.298789,2.148181,-7.489776,3.880165,-4.497964,1.588634,-2.634307,4.802966,8.555728,4.347377,-8.658375,-4.598238,6.178307,-1.414183,9.982376,1.239459,2.833481,9.787657,-0.562149,7.854877,-5.598787,5.086476,-9.384210,-3.819686,4.134254,-5.660826,-9.727278,-3.383458,-1.386336,3.029343,6.288226,6.049733,4.039844,7.744207,-3.416914,-3.733598,0.266432,5.359699,4.354931],[1.671295,7.198359,-3.103851,-1.637579,7.496463,4.314832,-0.460718,-7.058444,2.625429,-3.906312,8.177938,9.271455,7.955996,-1.369939,-9.055429,-4.238838,-0.807347,-2.301945,-4.782477,5.443098,6.455319,-1.121923,-2.032292,-5.018558,-3.151532,-8.435537,0.250993,4.710445,-3.588108,2.424352,7.568804,-2.201318,8.037484,-7.028586,3.110589,9.869450,-9.420073,-7.582396,-2.254786,4.241186,6.993735,3.092785,9.251559,0.150530,-9.643008,3.863941,-0.367771,1.658644,-9.545165,5.603912,-2.495137,-6.864578,-0.262352,5.240389,3.929222,1.290867,-7.147517,9.626568,-8.824794,1.454176,6.758140,-4.253022,-5.911553,1.767955,-5.690839,-4.297171,-1.930023,0.849421,5.290378,4.056128,0.848925,6.148385,5.287763,-7.248078,4.288919,-7.879147,-9.460802,-9.293618,6.211871,0.341328,9.388712,-9.158342,-8.323521,-8.776314,-6.152572,2.667923,7.941697,5.059106,5.191662,-0.071163,1.288106,-1.809902,0.448952,-0.207131,-5.103447,-3.985444,8.595029,4.290718,2.513649,7.670400,-4.276655,4.430350,7.544866,-3.887758,-6.442453,1.527797,-4.793576,0.277339,-2.097988,-8.060117,3.551616,-3.050826,7.240390,4.030687,-3.923900,-5.541880,5.870299,-7.190808,-4.063865,2.098626,6.464322,-4.395996,-7.287270,4.442211,8.694885,-3.823530,7.924970,6.331363,-0.966870,1.721620,5.913007,7.947262,0.395158,2.102948,3.290247,6.609588,2.965572,-4.035117,3.919594,-8.805888,0.073039,-6.289665,-5.726857,8.077850,-3.977129,2.095376,-9.401783,-1.300370,-7.595449,6.371440,-1.451371,-7.237468,-7.074133,-8.430889,-0.446707,-3.227867,9.721513,-2.406219,-1.332878,-0.632943,-5.665990,-8.430201,1.047513,6.054471,-8.505765,4.429165,1.034807,-7.806568,-7.614560,4.769503,2.365181,-1.348891,-9.118379,-3.581478,-4.534889,8.656927,-6.290997,2.566774,-5.416886,2.617914,6.580272,-9.060779,-4.605882,-2.484740,1.907561,-5.384630,8.715629,3.865009,7.011270,-3.599904,-4.298902,3.385383,9.494925,-4.620544,2.224869,-4.601458,-6.675285,3.938513,5.868768,6.422078,5.085016,5.818129,-6.423339,2.483530,6.077239,8.279097,0.117349,-3.071930,4.545622,4.307609,4.201516,3.927513,-2.434592,-3.473571,-3.695090,-2.226047,3.923250,-3.884308,-6.382190,-4.708006,7.673573,2.530428,-8.039091,7.381153,2.144742,-1.982958,-8.279912,-6.267054,-2.064989,-2.576441,1.517438,-8.985331,9.591629,-0.659159,-1.922246,7.874805,3.383425,0.488446,-0.175638,1.642270,5.665493,-3.675914,-8.652784,-5.443223,-1.033222,9.484402,1.594343,-6.654091,9.232109,-3.019696,4.983667,5.312947,-3.325306,-5.468154,-9.684375,-8.829101,0.581500,0.801835,-4.379535,-0.345624],[1.376906,-7.115063,-0.702422,4.769036,9.512200,3.952329,9.027424,7.200552,4.418406,-8.421504,-3.183920,9.741744,-5.270272,5.757407,-4.314922,3.878923,2.744009,-6.553163,-3.857334,8.518639,9.615885,9.355692,-5.853276,8.690841,-9.774454,3.398120,-9.644033,0.421014,3.171051,2.888497,-1.514735,5.703420,-3.847506,5.188164,0.082611,7.699792,-6.670331,4.224878,2.128674,-8.969331,2.273805,-5.109889,7.108143,-1.548657,-5.768938,-4.222307,-4.071183,4.064175,-8.500787,5.699739,5.709965,-3.528522,0.037480,-1.760789,-1.172574,9.620399,-2.533178,-4.650376,0.892307,9.053614,-2.145053,-8.340545,9.291659,-0.347427,1.270395,-2.457487,-2.208497,-5.808343,-2.011260,-4.558465,3.324285,-6.504065,-8.037528,5.315250,4.934323,2.762976,5.612112,-6.903379,8.454359,-9.690867,7.611374,-2.297160,1.974079,0.370024,1.754939,8.610052,0.322977,1.866480,-9.903031,0.888150,7.780518,8.017718,7.397561,0.791322,-1.088997,5.859505,-2.545239,6.996046,-5.777861,-6.397361,2.189257,-1.731724,6.799500,-9.576566,1.484160,-5.944283,-6.285548,7.925789,1.322824,5.802964,-6.845727,1.047994,-4.795452,-3.361172,-6.561810,-9.729390,-2.088930,-4.422294,-5.599097,3.355587,3.158851,-0.463373,-4.139621,6.285053,6.719350,1.454852,6.298332,-1.308477,-9.342143,-9.290274,6.389378,-7.614175,7.147747,-0.127899,0.274344,2.757150,5.096414,-2.776608,6.354674,2.005171,-3.921092,-8.699763,-2.256320,1.579198,-1.105802,8.787925,7.011176,8.608032,-1.112260,-1.346008,-2.954417,-5.042782,-5.082519,2.994708,-3.540286,-4.751148,4.134196,-3.060570,2.780391,-2.426695,7.915847,-7.294522,7.339447,-1.527258,4.507428,2.543552,-8.761738,3.576361,8.645757,7.980712,1.518949,-9.562969,-4.985115,-2.260115,4.505728,7.646989,-7.674095,5.158870,-2.622715,-8.721816,-4.765063,5.804160,3.560308,7.414439,1.574691,1.453111,-0.239852,6.848436,-6.785287,8.870958,0.167049,0.231689,-0.544762,5.989527,-2.394588,-7.587995,-7.823522,8.558867,-9.040210,-5.482969,8.435891,-1.562818,5.973118,2.670663,-9.292810,6.534173,9.054559,1.062493,6.702936,-3.605996,-5.529112,5.894827,-5.843588,9.788103,8.906507,-7.695984,7.585455,3.554162,8.106345,-5.766146,0.139893,0.623482,-3.606931,-7.657578,1.206773,9.907332,3.216642,-1.346837,-2.208411,-2.676729,5.093457,-1.358323,1.143514,-9.839594,-4.805891,-2.312226,-0.694971,6.584614,9.622879,4.075324,-0.535142,-5.007812,3.046840,-3.382399,-3.557482,1.154357,4.559100,-9.379103,0.257205,6.409992,-6.864900,6.339905,2.291507,8.244728,-6.285663,-7.718247,-7.265077,-7.932343,4.127080,3.842283],[6.803272,-0.699672,-0.719185,-5.446984,8.314325,-2.643064,1.106554,-2.868017,-9.485951,7.982796,-4.230887,8.204251,3.816810,-5.217890,-7.724491,-9.222214,1.553187,5.869752,-7.375751,3.132155,4.554996,2.393144,-7.907969,-1.038647,4.631640,2.403356,0.543469,-9.352505,9.324427,0.882986,-6.186067,0.815399,-0.044387,-4.451373,-3.661644,-0.807724,2.074320,0.247974,-2.059970,-9.192760,1.289814,7.355851,-5.619818,8.120789,6.556537,-6.281739,0.952711,4.651727,-8.400295,-3.462713,5.051117,-8.863727,-4.827238,-8.525928,0.905289,-2.835932,3.688941,6.481687,-2.527954,0.797811,-7.822635,2.001635,3.110438,7.969590,-0.605671,5.590371,9.920521,-2.854663,3.844151,-5.527762,0.084612,3.811106,-6.201106,5.699262,-7.426861,-7.744321,-3.937549,-2.464572,-3.727698,4.530023,2.106080,8.799420,-9.632866,-2.278268,-1.979461,1.853810,0.310679,-8.061338,3.444431,-5.867274,-7.335342,-9.572030,6.511735,8.705016,2.850695,-9.354805,2.690207,4.173268,-3.269742,7.066621,-6.238448,-3.849669,2.616267,1.825869,-9.693618,-7.181868,0.522861,3.905850,1.966603,-4.271807,4.728383,4.987669,-0.509203,1.655494,-0.704843,-3.282880,6.971323,3.940280,4.911857,7.945681,-0.339166,2.728018,4.852339,-0.924974,8.024030,2.002754,-2.850771,8.602717,6.181250,6.002289,4.782856,-0.108506,-3.512354,3.594533,-7.006048,-7.089420,7.296465,-0.070860,-8.714486,8.940599,-1.445275,8.335559,-7.604494,1.332913,7.501233,9.449891,-6.100828,2.679475,6.175965,5.791119,3.993479,5.822435,3.352594,2.213631,-7.916677,1.486601,1.080101,2.898957,1.466378,2.757569,1.577448,8.419036,-0.384190,7.621581,6.024503,-2.411079,-8.650651,9.089052,9.038820,7.980879,-4.771708,-6.149395,5.798120,1.244477,1.725084,2.163416,2.185268,-1.824508,9.953696,-4.894312,-9.107427,-6.112779,-5.427137,-4.047834,-2.073214,9.041148,-9.653563,9.896315,-6.062890,-1.374982,0.179786,-5.265740,-2.716526,0.043782,-3.655872,8.166796,-2.554834,8.540479,0.602504,-2.504200,-7.066001,-3.724715,-7.249767,-4.503711,-1.247732,-5.561315,1.573486,0.313258,8.075219,8.621768,-4.883752,4.190253,-9.902498,3.276119,-9.889868,-2.583650,9.431010,-3.034044,-1.013274,-2.126102,5.580384,-3.593207,-3.564656,4.234543,-3.042578,6.543714,5.029019,5.895061,-4.765065,5.489248,1.522017,7.439551,3.222527,-3.829613,-6.652075,-9.073533,2.899169,-5.072992,-3.526638,1.605010,4.625160,7.270479,7.527214,-1.729637,3.183481,7.037218,7.642440,-6.749117,-0.558097,-5.694574,1.042453,-1.506691,-8.525538,-0.776173,-7.847531,2.868874,9.544900,-6.893877,-7.594056,-6.745477]], dtype = "float32")#candidate|4918|(6, 260)|const|float32
call_4917 = func_4700_call(relay.reshape(const_4918.astype('float32'), [13, 12, 10]))
call_4919 = func_4700_call(relay.reshape(const_4918.astype('float32'), [13, 12, 10]))
output = relay.Tuple([uop_4911,call_4913,const_4914,call_4917,const_4918,])
output2 = relay.Tuple([uop_4911,call_4915,const_4914,call_4919,const_4918,])
func_4924 = relay.Function([], output)
mod['func_4924'] = func_4924
mod = relay.transform.InferType()(mod)
output = func_4924()
func_4925 = relay.Function([], output)
mutated_mod['func_4925'] = func_4925
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4924_call = mod.get_global_var('func_4924')
func_4925_call = mutated_mod.get_global_var('func_4925')
call_4935 = relay.TupleGetItem(func_4924_call(), 0)
call_4936 = relay.TupleGetItem(func_4925_call(), 0)
output = call_4935
output2 = call_4936
func_4944 = relay.Function([], output)
mod['func_4944'] = func_4944
mod = relay.transform.InferType()(mod)
output = func_4944()
func_4945 = relay.Function([], output)
mutated_mod['func_4945'] = func_4945
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4944_call = mod.get_global_var('func_4944')
func_4945_call = mutated_mod.get_global_var('func_4945')
call_4997 = func_4944_call()
call_4998 = func_4944_call()
const_4999 = relay.const([[[-8.678572,5.332161,-6.221734,7.975834,2.683046,-3.634528],[-0.071196,1.679106,-9.501597,-2.975120,7.737515,-6.950391],[-7.287125,0.366690,-8.337450,8.790561,1.015750,-9.370575],[9.142333,-3.307912,0.359640,5.896997,8.299946,3.857841],[7.738462,5.201526,-2.478521,-0.542280,-1.957039,2.849394],[-6.311392,8.282154,6.160125,5.718083,3.425942,2.643997],[-8.795183,-7.809840,9.178954,-3.798359,9.127700,1.547095]],[[7.367016,-7.772444,-2.542262,-9.170867,7.056131,-2.942676],[6.420926,4.456442,5.776990,-8.769875,-6.612558,0.143505],[-3.465863,-4.558122,6.931546,-1.027695,5.372417,-4.992384],[-5.659615,-2.356321,-4.905173,-0.461963,-3.568036,-9.602477],[2.295610,2.348861,0.420233,9.521662,-7.788742,0.213986],[-6.557423,-4.264374,8.566866,4.546011,6.197313,7.701439],[-4.165058,-5.859743,8.464508,8.124813,8.756668,-0.090892]],[[9.773921,-6.851416,8.350842,-2.294646,6.238724,9.872564],[2.123480,-0.966365,-7.431803,8.632145,-6.187459,5.866723],[-4.463729,-2.719094,-5.634793,7.141996,-9.904680,7.150443],[8.493089,3.583749,2.966741,4.577058,3.337948,9.849656],[0.043528,0.632272,-2.068313,-5.054183,5.589318,-5.960206],[8.794113,2.408425,-7.243926,-7.741848,-9.875444,-8.505055],[-5.123460,3.954207,-2.111464,-4.935086,1.034823,6.502100]],[[-1.420536,-7.561960,-7.343229,6.660659,-5.211683,6.490629],[-6.867468,6.487063,-9.328279,-6.049566,0.002621,-9.385835],[-1.871171,-4.814508,-7.686688,-6.261747,8.491268,-1.816893],[0.607253,2.745213,4.509586,-1.026645,-5.285872,-4.359501],[-4.820649,-8.946076,-0.389351,0.420162,1.508510,-4.763515],[4.632398,-9.420763,-6.515027,-4.642420,6.727923,7.905269],[-7.953608,-9.177962,8.425453,1.722723,1.941169,-4.005915]],[[6.097723,-3.270986,8.940910,-3.455559,4.043822,8.115129],[-3.547635,-0.374407,0.377464,-8.578236,3.618627,6.175907],[3.075622,-7.729197,-0.624930,8.394035,-5.513775,-3.016110],[-1.429271,-9.497481,8.269639,3.577196,4.255735,8.758010],[-8.432925,4.972452,-9.331504,-6.695343,3.490689,-9.257628],[2.576188,3.176900,-0.889307,9.058414,9.683760,-2.053278],[1.623787,-0.168370,9.719194,-3.011953,9.025352,-9.485929]],[[-6.110167,0.695385,8.088869,5.286368,9.213025,2.814575],[-4.768920,1.630281,-5.267040,-1.370873,8.645567,9.927303],[7.863490,-7.530875,9.771330,-7.210042,-8.507677,8.299184],[-6.719953,-3.105623,-2.273225,9.515312,4.685256,-5.924762],[-8.370558,9.958565,4.669960,6.155058,-0.943222,3.941705],[-2.272088,2.715941,4.004518,-8.678240,6.876299,-8.158204],[-9.187367,-9.152878,-8.723916,-8.345165,-9.494340,-0.680033]],[[-0.931144,-0.317036,-4.218316,-5.782871,8.529655,1.993395],[-8.426644,-3.167208,-5.331210,2.147170,-6.129817,-7.633023],[-3.498912,-6.442412,2.986588,-2.644535,-2.194696,-9.566806],[-6.068602,9.618833,4.108003,9.325067,-4.410941,5.510955],[-7.909919,-2.186002,1.157694,1.969660,9.957889,-5.339454],[-5.680864,-7.048330,0.249386,1.090274,1.633886,3.863186],[1.530583,-5.433336,5.340302,3.818283,5.838524,-4.195673]]], dtype = "float32")#candidate|4999|(7, 7, 6)|const|float32
bop_5000 = relay.minimum(call_4997.astype('uint64'), relay.reshape(const_4999.astype('uint64'), relay.shape_of(call_4997))) # shape=(7, 7, 6)
bop_5003 = relay.minimum(call_4998.astype('uint64'), relay.reshape(const_4999.astype('uint64'), relay.shape_of(call_4998))) # shape=(7, 7, 6)
output = bop_5000
output2 = bop_5003
func_5004 = relay.Function([], output)
mod['func_5004'] = func_5004
mod = relay.transform.InferType()(mod)
output = func_5004()
func_5005 = relay.Function([], output)
mutated_mod['func_5005'] = func_5005
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5116 = relay.var("var_5116", dtype = "uint64", shape = ())#candidate|5116|()|var|uint64
var_5117 = relay.var("var_5117", dtype = "uint64", shape = (15, 3, 7))#candidate|5117|(15, 3, 7)|var|uint64
bop_5118 = relay.not_equal(var_5116.astype('bool'), var_5117.astype('bool')) # shape=(15, 3, 7)
output = bop_5118
output2 = bop_5118
func_5125 = relay.Function([var_5116,var_5117,], output)
mod['func_5125'] = func_5125
mod = relay.transform.InferType()(mod)
mutated_mod['func_5125'] = func_5125
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5125_call = mutated_mod.get_global_var('func_5125')
var_5127 = relay.var("var_5127", dtype = "uint64", shape = ())#candidate|5127|()|var|uint64
var_5128 = relay.var("var_5128", dtype = "uint64", shape = (15, 3, 7))#candidate|5128|(15, 3, 7)|var|uint64
call_5126 = func_5125_call(var_5127,var_5128,)
output = call_5126
func_5129 = relay.Function([var_5127,var_5128,], output)
mutated_mod['func_5129'] = func_5129
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5004_call = mod.get_global_var('func_5004')
func_5005_call = mutated_mod.get_global_var('func_5005')
call_5150 = func_5004_call()
call_5151 = func_5004_call()
uop_5190 = relay.tan(call_5150.astype('float32')) # shape=(7, 7, 6)
uop_5192 = relay.tan(call_5151.astype('float32')) # shape=(7, 7, 6)
uop_5202 = relay.cos(call_5150.astype('float64')) # shape=(7, 7, 6)
uop_5204 = relay.cos(call_5151.astype('float64')) # shape=(7, 7, 6)
output = relay.Tuple([uop_5190,uop_5202,])
output2 = relay.Tuple([uop_5192,uop_5204,])
func_5215 = relay.Function([], output)
mod['func_5215'] = func_5215
mod = relay.transform.InferType()(mod)
mutated_mod['func_5215'] = func_5215
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5215_call = mutated_mod.get_global_var('func_5215')
call_5216 = func_5215_call()
output = call_5216
func_5217 = relay.Function([], output)
mutated_mod['func_5217'] = func_5217
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4944_call = mod.get_global_var('func_4944')
func_4945_call = mutated_mod.get_global_var('func_4945')
call_5224 = func_4944_call()
call_5225 = func_4944_call()
func_4012_call = mod.get_global_var('func_4012')
func_4017_call = mutated_mod.get_global_var('func_4017')
var_5231 = relay.var("var_5231", dtype = "float64", shape = (936,))#candidate|5231|(936,)|var|float64
var_5232 = relay.var("var_5232", dtype = "float32", shape = (294, 2))#candidate|5232|(294, 2)|var|float32
const_5233 = relay.const([1.328546,-0.797771,-6.097207,-8.186658,2.637198,7.857311,3.666483,8.487979,1.210647,2.589182,1.974993,-8.642834,-4.927832,-0.041002,4.925999,-3.425574,-9.064913,8.644846,2.743337,6.640959,1.047889,-4.843101,-7.674643,1.062192,3.809759,-6.970764,-3.196031,-8.732216,-8.177370,-0.370954,-1.148566,-0.523133,5.575869,0.872269,-7.652596,5.267018,-7.697708,-7.123534,5.540437,-8.507056,-2.217501,-0.756173,2.327521,7.081292,0.191770,0.371360,-0.308457,-7.705583,8.690766,-0.933975,-8.030725,4.891164,9.141506,-9.828303,-9.152746,-3.509376,1.659954,3.861495,3.516873,4.578815,8.382081,3.876430,-0.215290,2.146611,3.202562,0.177659,-5.552747,-5.335428,-8.952440,-5.404671,3.594500,7.893022,2.283044,9.899805,-7.123428,-9.250773,-6.649867,7.571197,4.937218,-0.244365,5.942625,9.698940,9.487921,2.345947,-1.076925,-3.581332,-6.742277,-3.307862,-8.662158,4.420625,-3.771746,-2.616961,5.149770,-8.987642,6.777273,5.887409,-2.525199,-1.798200,7.637835,-2.533854,8.789743,3.322812,-3.188040,-1.902953,-2.988050,1.840007,7.030822,7.308807,-1.427467,2.047666,-6.615438,-2.939956,9.768519,-4.705986,-3.572187,-6.607070,7.899327,-0.040164,-1.742688,3.765314,-8.559723,0.942445,-6.790451,-8.247967,-7.529985,-6.982247,-5.392044,-8.272194,0.182854,-0.897160,1.003663,-2.390947,3.429270,-2.040512,3.523712,-3.111098,7.592944,4.134546,-7.385865,-0.169423,7.661436,7.212887,8.750931,-0.642506,0.891604,-9.876818,7.194111,9.003881,8.473727,-4.245469,1.763813,-0.935392,2.982425,6.463391,7.156194,-9.972385,-1.066735,7.462600,0.233583,6.882341,-1.635559,2.764418,-2.208346,-3.295811,7.703630,-8.344200,6.217883,5.708300,-4.301371,-8.937602,-3.118292,-0.212002,5.658530,-0.679383,7.383403,9.686970,3.002346,-4.097443,8.233496,-1.958975], dtype = "float32")#candidate|5233|(180,)|const|float32
call_5230 = relay.TupleGetItem(func_4012_call(relay.reshape(var_5231.astype('float64'), [8, 9, 13]), relay.reshape(var_5232.astype('float32'), [588,]), relay.reshape(const_5233.astype('float32'), [180,]), ), 2)
call_5234 = relay.TupleGetItem(func_4017_call(relay.reshape(var_5231.astype('float64'), [8, 9, 13]), relay.reshape(var_5232.astype('float32'), [588,]), relay.reshape(const_5233.astype('float32'), [180,]), ), 2)
output = relay.Tuple([call_5224,call_5230,var_5231,var_5232,const_5233,])
output2 = relay.Tuple([call_5225,call_5234,var_5231,var_5232,const_5233,])
func_5243 = relay.Function([var_5231,var_5232,], output)
mod['func_5243'] = func_5243
mod = relay.transform.InferType()(mod)
mutated_mod['func_5243'] = func_5243
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5243_call = mutated_mod.get_global_var('func_5243')
var_5245 = relay.var("var_5245", dtype = "float64", shape = (936,))#candidate|5245|(936,)|var|float64
var_5246 = relay.var("var_5246", dtype = "float32", shape = (294, 2))#candidate|5246|(294, 2)|var|float32
call_5244 = func_5243_call(var_5245,var_5246,)
output = call_5244
func_5247 = relay.Function([var_5245,var_5246,], output)
mutated_mod['func_5247'] = func_5247
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4924_call = mod.get_global_var('func_4924')
func_4925_call = mutated_mod.get_global_var('func_4925')
call_5263 = relay.TupleGetItem(func_4924_call(), 3)
call_5264 = relay.TupleGetItem(func_4925_call(), 3)
var_5267 = relay.var("var_5267", dtype = "float32", shape = (13, 12, 10))#candidate|5267|(13, 12, 10)|var|float32
bop_5268 = relay.divide(call_5263.astype('float32'), relay.reshape(var_5267.astype('float32'), relay.shape_of(call_5263))) # shape=(13, 12, 10)
bop_5271 = relay.divide(call_5264.astype('float32'), relay.reshape(var_5267.astype('float32'), relay.shape_of(call_5264))) # shape=(13, 12, 10)
uop_5278 = relay.log(var_5267.astype('float64')) # shape=(13, 12, 10)
func_5125_call = mod.get_global_var('func_5125')
func_5129_call = mutated_mod.get_global_var('func_5129')
const_5290 = relay.const(-2, dtype = "uint64")#candidate|5290|()|const|uint64
var_5291 = relay.var("var_5291", dtype = "uint64", shape = (315,))#candidate|5291|(315,)|var|uint64
call_5289 = func_5125_call(relay.reshape(const_5290.astype('uint64'), []), relay.reshape(var_5291.astype('uint64'), [15, 3, 7]), )
call_5292 = func_5125_call(relay.reshape(const_5290.astype('uint64'), []), relay.reshape(var_5291.astype('uint64'), [15, 3, 7]), )
bop_5294 = relay.bitwise_or(uop_5278.astype('uint64'), relay.reshape(call_5263.astype('uint64'), relay.shape_of(uop_5278))) # shape=(13, 12, 10)
bop_5297 = relay.bitwise_or(uop_5278.astype('uint64'), relay.reshape(call_5264.astype('uint64'), relay.shape_of(uop_5278))) # shape=(13, 12, 10)
bop_5303 = relay.floor_mod(bop_5294.astype('float32'), relay.reshape(var_5267.astype('float32'), relay.shape_of(bop_5294))) # shape=(13, 12, 10)
bop_5306 = relay.floor_mod(bop_5297.astype('float32'), relay.reshape(var_5267.astype('float32'), relay.shape_of(bop_5297))) # shape=(13, 12, 10)
uop_5318 = relay.log10(var_5267.astype('float32')) # shape=(13, 12, 10)
output = relay.Tuple([bop_5268,call_5289,const_5290,var_5291,bop_5303,uop_5318,])
output2 = relay.Tuple([bop_5271,call_5292,const_5290,var_5291,bop_5306,uop_5318,])
func_5323 = relay.Function([var_5267,var_5291,], output)
mod['func_5323'] = func_5323
mod = relay.transform.InferType()(mod)
var_5324 = relay.var("var_5324", dtype = "float32", shape = (13, 12, 10))#candidate|5324|(13, 12, 10)|var|float32
var_5325 = relay.var("var_5325", dtype = "uint64", shape = (315,))#candidate|5325|(315,)|var|uint64
output = func_5323(var_5324,var_5325,)
func_5326 = relay.Function([var_5324,var_5325,], output)
mutated_mod['func_5326'] = func_5326
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4944_call = mod.get_global_var('func_4944')
func_4945_call = mutated_mod.get_global_var('func_4945')
call_5328 = func_4944_call()
call_5329 = func_4944_call()
func_5215_call = mod.get_global_var('func_5215')
func_5217_call = mutated_mod.get_global_var('func_5217')
call_5349 = relay.TupleGetItem(func_5215_call(), 0)
call_5350 = relay.TupleGetItem(func_5217_call(), 0)
uop_5351 = relay.log2(call_5328.astype('float64')) # shape=(7, 7, 6)
uop_5353 = relay.log2(call_5329.astype('float64')) # shape=(7, 7, 6)
func_5215_call = mod.get_global_var('func_5215')
func_5217_call = mutated_mod.get_global_var('func_5217')
call_5354 = relay.TupleGetItem(func_5215_call(), 1)
call_5355 = relay.TupleGetItem(func_5217_call(), 1)
uop_5376 = relay.exp(uop_5351.astype('float64')) # shape=(7, 7, 6)
uop_5378 = relay.exp(uop_5353.astype('float64')) # shape=(7, 7, 6)
output = relay.Tuple([call_5349,call_5354,uop_5376,])
output2 = relay.Tuple([call_5350,call_5355,uop_5378,])
func_5389 = relay.Function([], output)
mod['func_5389'] = func_5389
mod = relay.transform.InferType()(mod)
output = func_5389()
func_5390 = relay.Function([], output)
mutated_mod['func_5390'] = func_5390
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4944_call = mod.get_global_var('func_4944')
func_4945_call = mutated_mod.get_global_var('func_4945')
call_5488 = func_4944_call()
call_5489 = func_4944_call()
uop_5490 = relay.sqrt(call_5488.astype('float64')) # shape=(7, 7, 6)
uop_5492 = relay.sqrt(call_5489.astype('float64')) # shape=(7, 7, 6)
output = uop_5490
output2 = uop_5492
func_5496 = relay.Function([], output)
mod['func_5496'] = func_5496
mod = relay.transform.InferType()(mod)
mutated_mod['func_5496'] = func_5496
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5496_call = mutated_mod.get_global_var('func_5496')
call_5497 = func_5496_call()
output = call_5497
func_5498 = relay.Function([], output)
mutated_mod['func_5498'] = func_5498
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5004_call = mod.get_global_var('func_5004')
func_5005_call = mutated_mod.get_global_var('func_5005')
call_5499 = func_5004_call()
call_5500 = func_5004_call()
func_4924_call = mod.get_global_var('func_4924')
func_4925_call = mutated_mod.get_global_var('func_4925')
call_5505 = relay.TupleGetItem(func_4924_call(), 3)
call_5506 = relay.TupleGetItem(func_4925_call(), 3)
output = relay.Tuple([call_5499,call_5505,])
output2 = relay.Tuple([call_5500,call_5506,])
func_5517 = relay.Function([], output)
mod['func_5517'] = func_5517
mod = relay.transform.InferType()(mod)
mutated_mod['func_5517'] = func_5517
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5517_call = mutated_mod.get_global_var('func_5517')
call_5518 = func_5517_call()
output = call_5518
func_5519 = relay.Function([], output)
mutated_mod['func_5519'] = func_5519
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5389_call = mod.get_global_var('func_5389')
func_5390_call = mutated_mod.get_global_var('func_5390')
call_5527 = relay.TupleGetItem(func_5389_call(), 1)
call_5528 = relay.TupleGetItem(func_5390_call(), 1)
var_5569 = relay.var("var_5569", dtype = "float64", shape = (7, 7, 6))#candidate|5569|(7, 7, 6)|var|float64
bop_5570 = relay.less_equal(call_5527.astype('bool'), relay.reshape(var_5569.astype('bool'), relay.shape_of(call_5527))) # shape=(7, 7, 6)
bop_5573 = relay.less_equal(call_5528.astype('bool'), relay.reshape(var_5569.astype('bool'), relay.shape_of(call_5528))) # shape=(7, 7, 6)
output = bop_5570
output2 = bop_5573
func_5578 = relay.Function([var_5569,], output)
mod['func_5578'] = func_5578
mod = relay.transform.InferType()(mod)
mutated_mod['func_5578'] = func_5578
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5579 = relay.var("var_5579", dtype = "float64", shape = (7, 7, 6))#candidate|5579|(7, 7, 6)|var|float64
func_5578_call = mutated_mod.get_global_var('func_5578')
call_5580 = func_5578_call(var_5579)
output = call_5580
func_5581 = relay.Function([var_5579], output)
mutated_mod['func_5581'] = func_5581
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5389_call = mod.get_global_var('func_5389')
func_5390_call = mutated_mod.get_global_var('func_5390')
call_5599 = relay.TupleGetItem(func_5389_call(), 1)
call_5600 = relay.TupleGetItem(func_5390_call(), 1)
func_357_call = mod.get_global_var('func_357')
func_360_call = mutated_mod.get_global_var('func_360')
const_5613 = relay.const([2.986129,0.271504,0.543526,5.230483,-6.337491,5.326825,-9.026466,-8.614476,8.762593,-7.796535,-6.772172,8.418514,-0.305220,-5.252736,-4.376035,-9.047734,5.333940,-2.479302,-1.190243,-3.230477,-4.457342,-6.481527,8.805081,0.843080,8.315010,-3.085041,9.471854,-9.223855,7.620983,2.238866,-0.893221,7.651392,3.150809,-1.203711,5.049446,7.696086,3.238768,-9.211064,-8.752268,3.477660,0.637687,-4.181786,6.731771,4.885896,4.707247,0.776744,-4.162476,-8.307599,-5.596701,-4.098493,1.256952,-1.697547,1.794947,3.049157,-5.899115,5.574800,-6.202850,-7.709917,-4.589411,-9.405829,1.423940,-2.194662,8.460411,5.002047,8.207752,7.304316,4.671528,0.543057,4.594895,5.735324,-3.482462,8.937839,-7.088928,-3.019724,7.377991,-0.474711,-6.431492,5.636898,8.698486,-2.783856,-7.544435,0.222533,2.336143,-7.254733,-0.150961,-5.840546,-3.553467,3.041347,5.907735,-2.014908,4.603811,4.243798,5.495380,0.037873,-2.975057,1.204966,1.639466,-3.992612,-2.074636,3.174023,-4.402064,7.008708,-9.596961,6.235782,-4.378689,-6.134175,1.067445,-7.826131,-4.146042,9.171032,4.333542,8.154476,-8.897109,3.734396,-3.532926,1.085961,-7.621353,-4.653494,0.888665,-5.013962,7.082963,8.634654,9.004705,5.252544,2.614920,-7.056192,0.425533,-9.827935,6.241394,-9.174089,-9.551788,3.553618,-5.151471,2.735425,4.322341,-0.972428,6.014084,5.915885,0.617714,-1.349219,-7.584054,9.067202,7.514307,9.069738,4.090598,-6.062446,4.978491,-0.136860,0.679841,9.455683,8.279703,1.144240,-4.947557,0.646386,6.741553,-0.972949,-2.176693,-9.737654,6.509791,5.204978,5.924993,7.404042,8.297432,3.298479,8.586444,3.084529,-1.709428,7.045149,-1.485576,-4.264689,5.435756,4.954456,-3.312400,0.026252,9.828559,-5.132355,-2.471825,2.659418,1.001761,9.291693], dtype = "float32")#candidate|5613|(180,)|const|float32
call_5612 = relay.TupleGetItem(func_357_call(relay.reshape(const_5613.astype('float32'), [3, 4, 15])), 0)
call_5614 = relay.TupleGetItem(func_360_call(relay.reshape(const_5613.astype('float32'), [3, 4, 15])), 0)
var_5620 = relay.var("var_5620", dtype = "float32", shape = (3, 4, 15))#candidate|5620|(3, 4, 15)|var|float32
bop_5621 = relay.logical_and(call_5612.astype('bool'), relay.reshape(var_5620.astype('bool'), relay.shape_of(call_5612))) # shape=(3, 4, 15)
bop_5624 = relay.logical_and(call_5614.astype('bool'), relay.reshape(var_5620.astype('bool'), relay.shape_of(call_5614))) # shape=(3, 4, 15)
output = relay.Tuple([call_5599,const_5613,bop_5621,])
output2 = relay.Tuple([call_5600,const_5613,bop_5624,])
func_5628 = relay.Function([var_5620,], output)
mod['func_5628'] = func_5628
mod = relay.transform.InferType()(mod)
mutated_mod['func_5628'] = func_5628
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5629 = relay.var("var_5629", dtype = "float32", shape = (3, 4, 15))#candidate|5629|(3, 4, 15)|var|float32
func_5628_call = mutated_mod.get_global_var('func_5628')
call_5630 = func_5628_call(var_5629)
output = call_5630
func_5631 = relay.Function([var_5629], output)
mutated_mod['func_5631'] = func_5631
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5496_call = mod.get_global_var('func_5496')
func_5498_call = mutated_mod.get_global_var('func_5498')
call_5692 = func_5496_call()
call_5693 = func_5496_call()
output = call_5692
output2 = call_5693
func_5696 = relay.Function([], output)
mod['func_5696'] = func_5696
mod = relay.transform.InferType()(mod)
mutated_mod['func_5696'] = func_5696
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5696_call = mutated_mod.get_global_var('func_5696')
call_5697 = func_5696_call()
output = call_5697
func_5698 = relay.Function([], output)
mutated_mod['func_5698'] = func_5698
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5496_call = mod.get_global_var('func_5496')
func_5498_call = mutated_mod.get_global_var('func_5498')
call_5701 = func_5496_call()
call_5702 = func_5496_call()
func_5389_call = mod.get_global_var('func_5389')
func_5390_call = mutated_mod.get_global_var('func_5390')
call_5724 = relay.TupleGetItem(func_5389_call(), 0)
call_5725 = relay.TupleGetItem(func_5390_call(), 0)
uop_5729 = relay.sigmoid(call_5701.astype('float32')) # shape=(7, 7, 6)
uop_5731 = relay.sigmoid(call_5702.astype('float32')) # shape=(7, 7, 6)
func_5578_call = mod.get_global_var('func_5578')
func_5581_call = mutated_mod.get_global_var('func_5581')
call_5733 = func_5578_call(relay.reshape(uop_5729.astype('float64'), [7, 7, 6]))
call_5734 = func_5578_call(relay.reshape(uop_5729.astype('float64'), [7, 7, 6]))
output = relay.Tuple([call_5724,uop_5729,call_5733,])
output2 = relay.Tuple([call_5725,uop_5731,call_5734,])
func_5738 = relay.Function([], output)
mod['func_5738'] = func_5738
mod = relay.transform.InferType()(mod)
mutated_mod['func_5738'] = func_5738
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5738_call = mutated_mod.get_global_var('func_5738')
call_5739 = func_5738_call()
output = call_5739
func_5740 = relay.Function([], output)
mutated_mod['func_5740'] = func_5740
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5215_call = mod.get_global_var('func_5215')
func_5217_call = mutated_mod.get_global_var('func_5217')
call_5750 = relay.TupleGetItem(func_5215_call(), 0)
call_5751 = relay.TupleGetItem(func_5217_call(), 0)
output = relay.Tuple([call_5750,])
output2 = relay.Tuple([call_5751,])
func_5754 = relay.Function([], output)
mod['func_5754'] = func_5754
mod = relay.transform.InferType()(mod)
output = func_5754()
func_5755 = relay.Function([], output)
mutated_mod['func_5755'] = func_5755
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5738_call = mod.get_global_var('func_5738')
func_5740_call = mutated_mod.get_global_var('func_5740')
call_5790 = relay.TupleGetItem(func_5738_call(), 0)
call_5791 = relay.TupleGetItem(func_5740_call(), 0)
func_2323_call = mod.get_global_var('func_2323')
func_2325_call = mutated_mod.get_global_var('func_2325')
const_5802 = relay.const([-5.103454,-0.186105,-8.723601,8.858216,2.676812,5.417433,-5.198895,5.950459,-1.217097,5.354649,-1.387769,3.911534,6.087023,-0.727413,-2.771468,1.530529,-8.640541,7.128887,0.568618,3.571149,-0.165776,-4.667492,6.927404,4.949551,9.302011,6.124622,3.183613,-7.370960,4.949735,6.802506,8.173268,-9.085123,8.241621,-9.345498,-1.436257,6.309650,2.485151,2.488004,2.999176,-2.251100,7.346931,-7.882476,-5.726038,7.683933,-8.422034,3.549727,-9.119946,6.265560,8.997470,-9.751703,9.493581,1.751333,-0.469070,-2.226252,6.404316,-2.003191,-8.147647,2.611953,7.674949,8.370894,-4.538263,5.732019,-3.936652,-3.683767,9.497131,-1.976662,-5.286966,2.976260,-9.522120,-7.945257,-0.500991,7.510461,-0.822518,0.739551,4.745291,5.000054,-3.543705,-3.697511,6.860013,-8.653041,-6.037260,5.114630,-5.153265,2.975858,-0.428355,7.107406,-9.004410,-1.152797,6.658646,6.309061,-2.264076,-4.493678,6.114207,2.243992,7.812558,3.928081,-7.653563,-1.717746,4.768560,-4.975604,-4.282044,-1.148571,-0.697278,9.429929,3.726030,-0.432807,1.009491,-8.774064,-6.360584,4.227391,5.706005,4.288950,3.719661,3.262107,5.035479,9.321432,0.638753,-3.841872,-2.739938,9.747177,-3.584164,0.135677,9.106667,3.720245,2.153980,0.470387,7.368381,4.142061,4.882239,-9.178734,-9.943571,-7.497320,9.364656,5.764799,-5.937894,1.411622,-6.747112,-8.864043,-7.299821,3.894908,-9.356769,3.646517,4.154194,-3.753973,7.217009,3.591780,-3.827909,0.904983,3.291732,1.733282,9.846314,-3.967176,2.184856,8.356856,-9.130563,-7.724830,-5.580394,0.718117,-1.546344,-3.877488,-8.989024,9.055727,0.127841,-0.405684,3.586897,-0.578435,5.343220,-9.902755,8.676521,-6.053971,6.462123,-5.295933,-8.710540,1.386223,4.915144,-9.268895,-2.709992,3.035136,-7.442644,-5.403322,2.773027,2.383580,5.141175,-3.256108,0.324548,3.169912,4.303084,-4.608121,2.643705,-9.157880,5.590651,-3.426332,-0.051205,3.295393,1.063449,-8.012378,-6.510583,3.927525,3.088871,-4.411337,2.904216,4.689030,7.427789,-2.848059,-7.581386,-9.563655,-3.499121,5.935186,-6.336425,3.798837,-5.470945,-5.582167,8.839621,-5.755967,9.664735,-7.308100,-1.660088,9.204012,0.630965,-5.312172,-6.048506,-9.033006,1.615102,7.045463,-8.977411,-3.521245,-8.480932,-4.746589,-6.736547,8.180331,1.666322,-4.922804,0.837930,-9.642235,-9.763089,-7.048073,5.688647,8.334681,-4.696971,-6.532825,4.451119,9.732443,5.420750,-3.204623,8.769297,-1.513110,2.801756,-2.431304,-4.561243,0.921684,-7.657812,-5.522748,-2.876632,-7.055549,-2.912027,-9.731291,4.982779,-8.845872,6.184058,2.800490,-3.823740,2.046802,-8.863200,-5.515285,-8.404035,4.911621,-7.740963,-1.210215,0.269389,2.937071,5.404895,-8.709911,-7.857661,-4.294454,0.925978,-5.085456,9.077930,7.538576,3.226468,-3.174961,8.295822,-3.329737,2.397327,0.471245,-6.485234,7.055513,-9.458867,-4.849587,-5.542206,-0.330157,-6.008094,1.429692,-1.533990,-6.699040,-8.029991,-3.704771,-7.059838,7.729243,0.389747,7.588843,-7.564590,-4.423198,-9.757496,2.300471,6.733689,-1.215505,-0.195974,0.624780,-0.573910,-1.693004,-3.113625,-3.857007,-3.119998,4.222685,-5.336684,1.541383,6.641550,5.115154,-2.940291,-0.116179,-5.900556,-0.668422,-6.437996,-1.679512,4.668573,8.132967,0.883094,-6.483437,-6.040518,1.349241,-4.844254,2.401980,-5.410112,5.671801,9.902196,-2.096057,-2.245155,-8.597977,-3.196510,3.921461,3.243238,-7.378178,9.815711,-4.173684,-8.029924,-0.804372,-9.916519,-5.697923,6.317257,-4.714590,6.257678,-9.482507,9.953611,-7.319740,5.341519,1.049226,-2.987857,8.969275,-8.814898,7.151411,-0.596922,-6.956053,8.374154,3.897450,-9.761283,1.850635,2.975624,-1.213971,-5.577686,-2.728917,-9.377957,8.366013,6.062001,-4.633585,-1.782862,-2.422540,-2.166589,-0.821717,5.561524,-7.141813,5.524236,0.072577,4.943733,0.265643,-1.030845,-4.384172,4.381751,-1.835228,-5.920904,-2.718056,-1.529048,9.982673,0.345901,6.993870,-7.326707,9.990208,5.185808,-1.341068,-2.479638,9.285283,6.530545,2.456199,2.368764,-0.708546,3.294542,-2.338131,4.101556,-0.535978,2.899248,-6.841891,8.799696,4.024376,-4.678867,0.069875,0.249333,-3.268751,-2.806499,0.677805,3.420003,-6.625884,4.218684,-5.283062,-9.419012,7.723918,-6.408561,3.527196,7.668267,2.242030,-2.400319,-8.589169,8.056195,8.227276,0.314067,2.657142,-5.475004,9.164891,-7.889214,-3.468945,-9.632660,1.640970,5.802502,-3.563766,4.019564,5.497196,-1.682927,-0.533808,-8.274193,-8.698285,-7.183575,-1.940363,2.395547,-6.718514,4.201125,-1.936357,7.056388,2.068746,6.475412,2.807375,7.958543,-2.047841,0.729750,3.931050,-6.150474,5.657080,0.225477,9.775385,1.601713,-9.974525,9.254444,-9.591824,-3.144952,0.293986,4.263449,5.029368,8.520689,-7.206258,-5.643179,-2.442681,0.830183,9.088549,9.464595,2.604036,7.683737,-1.890422,0.453128,4.514730,-3.030069,1.544198,3.384991,-0.443195,-1.746994,9.086463,-4.640803,-7.146579,4.514631,-0.800607,-0.936682,1.631161,1.638146,-3.399870,-3.357947,9.472760,6.196669,-9.027795,8.402035,8.465097,-3.386513,-7.993116,3.796752,-4.377621,-6.363786,9.404045,4.656671,-9.234942,-7.264674,9.362808,-6.495551,3.914244,1.758436,7.945095,-3.676034,-2.207512,5.472460,2.890888,4.084950,-0.075542,-6.405117,5.070070,-3.691029,1.744047,-2.356289,-8.439233,3.101395,-8.380348,7.601352,8.321063,1.301892,-1.692336,-9.291333,6.753143,-7.968933,6.095216,1.682029,-6.564748,9.816135,5.693475,-4.809459,-9.197293,9.549367,-1.909920,-1.036401,9.150889,8.286364,9.420009,4.835302,-3.921366,-0.601962,2.648118,-4.451270,1.187200,9.878212,2.785648,-8.796819,7.237585,2.149690,4.308939,8.314236,5.893567,-1.602635,-0.890227,9.596353,8.023403,-1.182525,6.536519,-0.130876,-3.758402,8.743335,3.349131,-1.612451,-4.346166,-5.075305,1.578620,-5.282194,1.858595,9.647772,-5.067224,-2.281115,-6.775889,-2.494102,1.298838,4.344709,-8.044824,3.618723,-5.344522,-6.469878,5.514980,-0.870896,-2.466412,1.727987,-4.636179,0.903618,4.618399,-5.476832,4.377408,-3.333066,-6.577623,-9.833179,-8.517740,-5.853460,5.228425,6.270360,-4.222351,-5.679560,-4.572621,-9.770719,-6.089420,-6.624514,3.826318,-9.844424,0.345993,8.252799,-6.598786,9.839340,7.494932,7.601417,-6.468573,-8.526146,8.012421,-6.086224,-1.088338,-4.317527,-9.043176,7.972749,8.457621,-8.520323,-6.959547,-6.325283,-8.378071,0.406062,-6.125838,-4.935918,-3.409412,7.052751,4.928983,7.671045,-8.411393,0.219804,-4.777068,-9.376576,-0.412137,7.160025,-6.196331,6.468477,6.287692,-5.490558,3.938048,-6.040220,0.595411,5.279170,7.742565,9.120535,-0.203060,9.400644,7.356605,8.500568,-5.386396,-1.732832,-7.641682,7.949449,-1.035210,5.733502,9.442483,5.879021,2.444362,2.973989,-5.232404,-8.322649,4.045802,3.931851,1.095347,-8.232516,1.148016,-7.861648,-1.404217,2.234729,-9.526381,9.798237,1.417694,-7.402603,3.552106,8.316916,-2.692246,8.521350], dtype = "float64")#candidate|5802|(693,)|const|float64
call_5801 = relay.TupleGetItem(func_2323_call(relay.reshape(const_5802.astype('float64'), [9, 7, 11])), 0)
call_5803 = relay.TupleGetItem(func_2325_call(relay.reshape(const_5802.astype('float64'), [9, 7, 11])), 0)
output = relay.Tuple([call_5790,call_5801,const_5802,])
output2 = relay.Tuple([call_5791,call_5803,const_5802,])
func_5849 = relay.Function([], output)
mod['func_5849'] = func_5849
mod = relay.transform.InferType()(mod)
mutated_mod['func_5849'] = func_5849
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5849_call = mutated_mod.get_global_var('func_5849')
call_5850 = func_5849_call()
output = call_5850
func_5851 = relay.Function([], output)
mutated_mod['func_5851'] = func_5851
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5215_call = mod.get_global_var('func_5215')
func_5217_call = mutated_mod.get_global_var('func_5217')
call_5877 = relay.TupleGetItem(func_5215_call(), 0)
call_5878 = relay.TupleGetItem(func_5217_call(), 0)
func_4944_call = mod.get_global_var('func_4944')
func_4945_call = mutated_mod.get_global_var('func_4945')
call_5886 = func_4944_call()
call_5887 = func_4944_call()
output = relay.Tuple([call_5877,call_5886,])
output2 = relay.Tuple([call_5878,call_5887,])
func_5895 = relay.Function([], output)
mod['func_5895'] = func_5895
mod = relay.transform.InferType()(mod)
output = func_5895()
func_5896 = relay.Function([], output)
mutated_mod['func_5896'] = func_5896
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5849_call = mod.get_global_var('func_5849')
func_5851_call = mutated_mod.get_global_var('func_5851')
call_5900 = relay.TupleGetItem(func_5849_call(), 0)
call_5901 = relay.TupleGetItem(func_5851_call(), 0)
output = relay.Tuple([call_5900,])
output2 = relay.Tuple([call_5901,])
func_5903 = relay.Function([], output)
mod['func_5903'] = func_5903
mod = relay.transform.InferType()(mod)
mutated_mod['func_5903'] = func_5903
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5903_call = mutated_mod.get_global_var('func_5903')
call_5904 = func_5903_call()
output = call_5904
func_5905 = relay.Function([], output)
mutated_mod['func_5905'] = func_5905
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5849_call = mod.get_global_var('func_5849')
func_5851_call = mutated_mod.get_global_var('func_5851')
call_5963 = relay.TupleGetItem(func_5849_call(), 0)
call_5964 = relay.TupleGetItem(func_5851_call(), 0)
output = relay.Tuple([call_5963,])
output2 = relay.Tuple([call_5964,])
func_5970 = relay.Function([], output)
mod['func_5970'] = func_5970
mod = relay.transform.InferType()(mod)
mutated_mod['func_5970'] = func_5970
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5970_call = mutated_mod.get_global_var('func_5970')
call_5971 = func_5970_call()
output = call_5971
func_5972 = relay.Function([], output)
mutated_mod['func_5972'] = func_5972
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5895_call = mod.get_global_var('func_5895')
func_5896_call = mutated_mod.get_global_var('func_5896')
call_5995 = relay.TupleGetItem(func_5895_call(), 1)
call_5996 = relay.TupleGetItem(func_5896_call(), 1)
func_4366_call = mod.get_global_var('func_4366')
func_4369_call = mutated_mod.get_global_var('func_4369')
var_5998 = relay.var("var_5998", dtype = "int64", shape = (2310,))#candidate|5998|(2310,)|var|int64
call_5997 = func_4366_call(relay.reshape(var_5998.astype('int64'), [15, 11, 14]), relay.reshape(var_5998.astype('int64'), [15, 11, 14]), )
call_5999 = func_4366_call(relay.reshape(var_5998.astype('int64'), [15, 11, 14]), relay.reshape(var_5998.astype('int64'), [15, 11, 14]), )
output = relay.Tuple([call_5995,call_5997,var_5998,])
output2 = relay.Tuple([call_5996,call_5999,var_5998,])
func_6009 = relay.Function([var_5998,], output)
mod['func_6009'] = func_6009
mod = relay.transform.InferType()(mod)
var_6010 = relay.var("var_6010", dtype = "int64", shape = (2310,))#candidate|6010|(2310,)|var|int64
output = func_6009(var_6010)
func_6011 = relay.Function([var_6010], output)
mutated_mod['func_6011'] = func_6011
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4924_call = mod.get_global_var('func_4924')
func_4925_call = mutated_mod.get_global_var('func_4925')
call_6082 = relay.TupleGetItem(func_4924_call(), 4)
call_6083 = relay.TupleGetItem(func_4925_call(), 4)
output = call_6082
output2 = call_6083
func_6087 = relay.Function([], output)
mod['func_6087'] = func_6087
mod = relay.transform.InferType()(mod)
output = func_6087()
func_6088 = relay.Function([], output)
mutated_mod['func_6088'] = func_6088
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5389_call = mod.get_global_var('func_5389')
func_5390_call = mutated_mod.get_global_var('func_5390')
call_6092 = relay.TupleGetItem(func_5389_call(), 0)
call_6093 = relay.TupleGetItem(func_5390_call(), 0)
const_6117 = relay.const([[[6.039395,6.856853,-8.771778,0.748547,-6.946763,-3.811966],[2.234988,0.224839,-1.289178,-7.017084,-2.571554,-6.605499],[7.714886,-1.328306,-6.227391,-7.119867,8.770193,-3.494798],[-8.222107,4.643441,6.185048,-3.026608,-8.439718,-6.333083],[-5.462218,3.267057,-1.332342,1.026396,-8.250730,7.411829],[3.754449,-4.963192,-5.631027,-4.438306,-0.542642,2.894280],[-4.044374,-8.254571,1.250604,9.770786,4.006949,-0.320852]],[[-7.517284,-5.203099,0.122244,5.277831,5.513467,1.859351],[-4.538200,-3.138178,5.085586,-6.604698,1.505624,-4.695447],[2.746961,4.247433,6.065410,0.078683,7.411366,-7.331852],[8.815364,1.493965,7.211952,-7.008148,9.445582,-6.525013],[-0.023446,-9.358335,-7.241923,-0.078127,-3.605931,-6.629043],[2.168363,4.893041,6.086428,-2.160022,-9.678061,1.934532],[-9.479156,5.015682,7.909145,4.170178,7.033409,8.704807]],[[-2.000841,1.916056,4.891797,-9.215973,0.050499,7.191468],[0.017184,-5.273191,-0.387298,0.012870,4.244805,-1.949743],[6.396386,3.587085,3.169499,-2.159062,-4.906435,-4.665809],[2.639051,7.891338,-4.181400,-2.328407,-2.144358,9.276092],[-1.655132,9.657113,-9.164021,-8.838417,8.734136,-3.091387],[7.782246,0.827428,-5.141839,0.597644,-7.164873,0.054655],[-1.938302,9.525120,-1.756961,6.206753,5.157526,-6.776597]],[[-7.854539,8.971605,-3.027640,-3.461004,-1.263384,-8.343654],[5.536754,2.155937,-1.447539,-1.154622,-6.479981,3.248658],[8.671055,4.948148,8.700350,-2.121228,3.836892,-9.306970],[2.354066,4.498453,-5.299834,-7.287514,0.476472,7.142920],[-0.595928,-5.607988,4.784528,8.346816,-1.815268,-4.973142],[2.238643,4.147214,-2.112773,-1.304537,-9.866875,-1.808688],[5.698080,-0.578472,-6.651056,-6.771014,-2.144557,1.861183]],[[-8.559073,-9.917983,3.907714,7.418355,9.943978,8.688509],[-7.265776,9.818877,3.228565,5.255176,-2.697583,-5.947964],[8.460711,-4.627087,8.833973,-6.258823,-2.405492,6.568597],[5.578496,-5.451488,6.496203,-5.105932,-7.267283,3.314481],[1.527169,-5.385534,-6.973168,-1.652258,-9.496274,3.089849],[-8.140593,5.921507,-3.206784,2.395201,1.024389,-1.082864],[4.397478,-2.348547,-5.636742,-5.585644,-8.913934,-3.531882]],[[9.618543,2.431284,0.136424,5.196301,-8.920052,-7.940374],[0.937074,-9.332571,-3.508660,-7.388140,6.608763,6.482595],[-0.080486,-4.470642,-1.538897,1.229167,7.906366,6.109576],[-1.846901,3.772647,-1.014103,7.175574,7.599049,-8.311723],[6.897017,9.053156,-2.370590,-7.326526,-4.686957,5.203953],[2.100721,-0.326663,5.681300,8.512940,6.684938,-4.094022],[2.028361,8.476771,8.985045,-3.606374,-2.120079,-1.027725]],[[-7.905143,8.810215,8.474139,2.305556,-5.796610,5.901433],[-8.995763,0.954755,7.132653,4.024343,2.923416,8.423554],[-3.766570,8.892378,-9.345005,9.569528,3.519578,3.635000],[-6.633999,7.351785,4.509385,-3.728894,-6.840497,2.458069],[-0.202957,-1.159355,1.102256,-6.872733,1.472925,0.904954],[3.331821,-9.564809,6.930415,9.041429,-2.934144,-1.045206],[-6.711397,1.513243,-9.480140,-2.540787,7.310671,9.889330]]], dtype = "float32")#candidate|6117|(7, 7, 6)|const|float32
bop_6118 = relay.divide(call_6092.astype('float64'), relay.reshape(const_6117.astype('float64'), relay.shape_of(call_6092))) # shape=(7, 7, 6)
bop_6121 = relay.divide(call_6093.astype('float64'), relay.reshape(const_6117.astype('float64'), relay.shape_of(call_6093))) # shape=(7, 7, 6)
output = bop_6118
output2 = bop_6121
func_6144 = relay.Function([], output)
mod['func_6144'] = func_6144
mod = relay.transform.InferType()(mod)
output = func_6144()
func_6145 = relay.Function([], output)
mutated_mod['func_6145'] = func_6145
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5004_call = mod.get_global_var('func_5004')
func_5005_call = mutated_mod.get_global_var('func_5005')
call_6187 = func_5004_call()
call_6188 = func_5004_call()
output = call_6187
output2 = call_6188
func_6192 = relay.Function([], output)
mod['func_6192'] = func_6192
mod = relay.transform.InferType()(mod)
output = func_6192()
func_6193 = relay.Function([], output)
mutated_mod['func_6193'] = func_6193
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5004_call = mod.get_global_var('func_5004')
func_5005_call = mutated_mod.get_global_var('func_5005')
call_6245 = func_5004_call()
call_6246 = func_5004_call()
uop_6247 = relay.asinh(call_6245.astype('float32')) # shape=(7, 7, 6)
uop_6249 = relay.asinh(call_6246.astype('float32')) # shape=(7, 7, 6)
func_5696_call = mod.get_global_var('func_5696')
func_5698_call = mutated_mod.get_global_var('func_5698')
call_6253 = func_5696_call()
call_6254 = func_5696_call()
output = relay.Tuple([uop_6247,call_6253,])
output2 = relay.Tuple([uop_6249,call_6254,])
func_6260 = relay.Function([], output)
mod['func_6260'] = func_6260
mod = relay.transform.InferType()(mod)
mutated_mod['func_6260'] = func_6260
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6260_call = mutated_mod.get_global_var('func_6260')
call_6261 = func_6260_call()
output = call_6261
func_6262 = relay.Function([], output)
mutated_mod['func_6262'] = func_6262
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5496_call = mod.get_global_var('func_5496')
func_5498_call = mutated_mod.get_global_var('func_5498')
call_6273 = func_5496_call()
call_6274 = func_5496_call()
uop_6275 = relay.log10(call_6273.astype('float64')) # shape=(7, 7, 6)
uop_6277 = relay.log10(call_6274.astype('float64')) # shape=(7, 7, 6)
output = relay.Tuple([uop_6275,])
output2 = relay.Tuple([uop_6277,])
func_6280 = relay.Function([], output)
mod['func_6280'] = func_6280
mod = relay.transform.InferType()(mod)
mutated_mod['func_6280'] = func_6280
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6280_call = mutated_mod.get_global_var('func_6280')
call_6281 = func_6280_call()
output = call_6281
func_6282 = relay.Function([], output)
mutated_mod['func_6282'] = func_6282
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6144_call = mod.get_global_var('func_6144')
func_6145_call = mutated_mod.get_global_var('func_6145')
call_6348 = func_6144_call()
call_6349 = func_6144_call()
output = call_6348
output2 = call_6349
func_6376 = relay.Function([], output)
mod['func_6376'] = func_6376
mod = relay.transform.InferType()(mod)
output = func_6376()
func_6377 = relay.Function([], output)
mutated_mod['func_6377'] = func_6377
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5895_call = mod.get_global_var('func_5895')
func_5896_call = mutated_mod.get_global_var('func_5896')
call_6501 = relay.TupleGetItem(func_5895_call(), 1)
call_6502 = relay.TupleGetItem(func_5896_call(), 1)
const_6507 = relay.const([[[7.544692,6.828223,1.619030,6.881825,-8.322936,0.263636],[-0.427296,4.141918,-8.420190,-4.009694,-5.197282,1.528339],[-9.385217,-5.030637,-4.431004,-3.091902,5.130352,1.352972],[8.435020,-0.761374,4.928703,6.514707,-9.230239,1.712133],[-8.884268,-6.407103,-2.823639,0.225198,7.608726,-8.541466],[6.081516,1.347339,-8.361830,-4.990977,-9.507895,-2.397881],[-5.034379,1.782588,-3.361803,3.332301,-1.238338,6.056941]],[[3.171511,0.542676,-5.269951,-7.533546,-1.212980,7.961601],[6.217731,2.477397,-3.267052,5.312141,1.407082,-3.961975],[-6.897757,-2.732310,6.467848,9.515070,-4.380822,6.721768],[-5.171862,-4.283516,-1.909048,-6.665539,7.419011,4.850875],[8.518466,-3.712635,9.836277,-9.164478,-1.917136,-7.024550],[4.967937,9.471027,-2.207508,-5.430619,-7.533504,6.980101],[-3.278268,-7.756014,9.114144,-0.065746,6.106567,7.820002]],[[3.088816,-2.602861,-1.012678,0.516351,-6.477669,2.205002],[-0.436464,8.625694,9.032908,4.748982,-6.486601,1.976631],[8.568104,-2.668324,4.914526,8.189682,-6.132608,-7.532328],[-4.840600,-0.161142,-7.082682,0.676993,7.061092,-1.835918],[1.392671,9.456463,8.006412,-0.741779,-6.159093,0.534349],[-5.394638,-5.465011,-0.756639,-2.319978,-1.047348,6.055246],[-3.807651,5.966044,-7.606286,-2.064494,9.176326,3.249907]],[[3.073852,7.426024,4.957975,3.889901,0.616518,-8.481857],[-7.062390,-5.431598,7.823733,-2.618144,-3.363160,6.740378],[9.041296,5.566459,2.256036,4.653608,-1.727913,-5.781624],[-4.391606,3.538840,2.987304,3.981517,-3.973119,9.393089],[-0.593582,-0.791515,5.818103,6.907511,1.709138,-0.252915],[6.224144,8.639895,-8.155943,9.236294,4.380202,9.907914],[-4.661179,8.750535,-0.238810,-4.332676,-7.705431,-8.918552]],[[4.709390,-1.532540,-8.786526,9.050515,-7.198042,0.087219],[0.504681,7.586703,5.114616,0.702708,-8.475619,9.457395],[6.906311,6.107304,-3.048099,-5.968107,8.032354,-0.174784],[5.010396,8.176293,1.108764,-8.399946,-2.991888,6.423638],[-3.003548,4.565562,7.122113,-8.592510,6.226491,-6.690106],[9.424675,2.382395,0.182775,-5.019880,4.721353,9.858465],[-6.207033,2.602802,3.661436,-5.151442,-6.416539,-2.452547]],[[-2.388913,-3.453470,-6.756960,9.241801,4.310495,-3.599477],[2.293456,7.127970,2.288212,7.247714,6.431576,-6.919403],[5.721152,-8.452570,-1.325812,-8.860542,7.928225,-9.435519],[7.969372,0.721678,-3.622131,-5.075799,-8.891311,3.431743],[-2.508054,8.693433,2.475672,-9.692910,3.777396,-0.305186],[-7.596490,-9.852053,-5.736166,3.084655,0.158967,-1.806153],[5.789506,5.859845,1.670164,4.340275,4.097374,7.645439]],[[-3.010142,6.647300,-1.090106,8.218918,-0.292234,3.004267],[6.237875,3.022803,1.710710,-2.506572,-0.584821,8.945282],[-1.333044,5.432373,1.310187,3.877620,-8.699465,8.566036],[-0.848678,1.794648,9.921478,4.185524,-5.279560,2.479342],[7.676121,-2.900229,8.226537,2.505817,-4.443769,9.948634],[7.216109,8.578525,7.705102,-8.636876,7.643976,4.269730],[-3.710008,1.375432,4.462191,3.497097,7.535168,-1.160220]]], dtype = "float32")#candidate|6507|(7, 7, 6)|const|float32
bop_6508 = relay.floor_mod(call_6501.astype('float64'), relay.reshape(const_6507.astype('float64'), relay.shape_of(call_6501))) # shape=(7, 7, 6)
bop_6511 = relay.floor_mod(call_6502.astype('float64'), relay.reshape(const_6507.astype('float64'), relay.shape_of(call_6502))) # shape=(7, 7, 6)
bop_6514 = relay.less(const_6507.astype('bool'), relay.reshape(bop_6508.astype('bool'), relay.shape_of(const_6507))) # shape=(7, 7, 6)
bop_6517 = relay.less(const_6507.astype('bool'), relay.reshape(bop_6511.astype('bool'), relay.shape_of(const_6507))) # shape=(7, 7, 6)
uop_6535 = relay.asin(const_6507.astype('float32')) # shape=(7, 7, 6)
output = relay.Tuple([bop_6514,uop_6535,])
output2 = relay.Tuple([bop_6517,uop_6535,])
func_6540 = relay.Function([], output)
mod['func_6540'] = func_6540
mod = relay.transform.InferType()(mod)
output = func_6540()
func_6541 = relay.Function([], output)
mutated_mod['func_6541'] = func_6541
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5970_call = mod.get_global_var('func_5970')
func_5972_call = mutated_mod.get_global_var('func_5972')
call_6544 = relay.TupleGetItem(func_5970_call(), 0)
call_6545 = relay.TupleGetItem(func_5972_call(), 0)
func_3801_call = mod.get_global_var('func_3801')
func_3804_call = mutated_mod.get_global_var('func_3804')
const_6549 = relay.const([-2.110539,6.900300,5.080297,-5.855453,1.077367,0.399624,4.915527,0.178138,-0.283802,2.470158,2.312657,-9.917213,5.102416,-4.587169,7.463288,-2.569074,2.298890,4.657947,-4.455462,8.955412,3.891330,-6.261851,2.681830,7.689621,8.010657,-6.367781,6.402999,-6.791662,-8.604225,8.234636,-6.700874,3.976355,8.056961,-6.144765,-6.388467,-2.333782,8.765340,3.159068,-6.832417,-1.730452,7.160505,-0.917029,4.514824,8.931838,9.825510,0.530690,-8.239134,7.636592,-5.527795,5.219549,1.888133,-9.403943,5.176741,4.917549,-4.898724,2.725818,-4.655973,-0.454632,-8.170197,-8.848950,-1.066412,3.250894,-8.867293,7.085283,-4.088294,-1.738701,-4.492630,-2.136464,-5.243003,8.992243,-7.540775,-0.188589,-9.278372,-2.987245,-2.804935,-2.223099,4.986640,3.131628,-5.997237,-4.262901,2.697614,-5.589557,7.462184,9.243161,-2.860813,-1.382005,2.765627,8.898547,-4.991728,-2.955171,-1.043802,6.313275,-5.102431,-6.875465,4.775432,-8.267285,8.521656,-1.679653,6.066856,-1.454190,-1.281687,-6.430997,4.943136,8.054411,-1.847741,-9.641096,-3.658407,-5.451729,-5.149757,0.812833,8.820282,-6.868687,-9.849311,7.896690,3.544720,4.131989,-3.829047,7.855246,-7.018225,4.392585,2.904660,5.525026,-2.053034,-3.719914,-7.188580,-0.449035,5.541773,-1.157782,-1.701686,-8.421599,6.454195,3.945616,1.069969,5.984372,-2.913937,-3.012335,-2.471014,9.047150,0.513706,4.519614,-3.397462,3.570646,7.645362,0.414610,1.432785,6.848019,-9.367372,1.610862,1.308888,5.402014,5.080558,2.785525,2.328387,-4.629637,0.354499,0.138583,-7.852627,7.568252,-0.240480,4.946800,-5.705736,7.905966,1.170216,2.042873,5.361841,-0.038498,-4.543133,8.967966,3.764403,4.490541,4.443480,-4.323729,5.775766,4.247521,-9.201880,-4.923696,0.765130,8.621112,-1.598491,-1.967710,1.324595,-8.708929,-1.713261,-4.236596,-4.633063,-4.340234,-2.525670,9.647433,3.330861,7.604516,6.035612,-0.701639,8.026966,7.363971,-2.161119,-5.432560,3.268890,-5.189144,-9.058995,1.294272,-9.558713,-5.382472,-7.472319,-2.915806,4.537066,5.101059,1.572557,3.516343,-5.571711,-3.788615,-7.254757,-1.424203,-0.116025,-1.377567,9.841266,0.415080,3.945303,-3.295376,7.734264,2.726205,9.066671,4.519136,3.139881,2.274751,4.951508,-0.638485,-3.115392,2.115460,6.826427,5.598368,6.783180,-0.306246,9.566889,-5.009821,-2.101688,9.055536,1.280322,-2.365934,2.223073,-7.964138,-9.032171,4.646848,5.584500,0.622749,-4.613179,-0.085674,2.363935,-6.173532,5.257426,4.278760,5.599191,6.304534,0.076845,4.386752,-3.082995,3.474725,-6.130367,0.696700,-2.697293,4.116789,-4.873648,-4.868672,-0.329604,-8.982604,-8.657169,4.379890,-6.028377,-1.636023,8.338647,-9.885081,4.425690,-9.883221,-6.581509,5.396612,-2.886677,8.496551,-6.293333,-1.561308,3.867004,5.571138,-7.622101,8.220667,3.890794,-3.178572,7.142856,-7.550925,-1.850894,-4.590810,9.564804,2.388979,-2.516158,-0.583510,4.839657,-3.582210,5.168223,-4.538983,-8.431513,-5.371562,4.825360,-7.203816,2.503360,4.449009,5.503167,3.190897,6.780893,-7.941476,6.181333,9.067566,0.812191,2.498735,2.482778,-1.655690,5.516036,4.026563,4.869364,6.536578,8.565393,7.166030,4.263998,6.725689,3.464501,-1.092366,-3.988690,3.181583,7.045113,-8.965183,-3.710773,3.224538,7.196185,-2.211273,-6.912852,7.697382,-4.840233,9.898785,4.332113,5.307396,-1.709741,-8.134742,2.031868,7.891956,-3.539736,4.647521,-1.802071,9.718461,5.953800,3.169053,6.856928,9.533626,6.799475,4.632253,4.123476,5.019451,7.185805,-3.102701,-3.129352,0.946753,8.925690,1.671202,6.198647,8.322520,6.624530,1.408007,-4.743388,-9.967584,8.557013,-6.070424,-8.150216,-9.525080,3.795855,-7.185554,-2.017961,5.846564,-9.419548,-9.863286,3.123698,5.160923,-3.053559,5.070095,1.101227,-7.059331,-9.464490,-0.275920,-5.719677,-0.972509,3.015773,6.282158,-3.301316,-6.161554,-6.805183,6.669065,-1.695830,-4.543474,4.751658,4.577293,3.261110,2.196123,5.304577,2.455176,-0.072619,6.059466,-9.660087,-7.221569,0.056351,-1.439953,6.954749,2.690247,-3.642335,-1.950938,-8.973900,-8.257566,8.120334,1.791721,0.586993,-9.655591,-7.027536,-0.799544,1.292236,5.163613,8.149125,-0.459826,4.531308,-5.046333,6.729180,6.506019,0.158294,7.073419,5.080391,0.950965,8.882793,8.047464,5.961714,0.849256,-2.091736,-5.299812,-8.726262,-0.840370,-9.674808,3.508547,3.323244,0.333924,-8.529873,3.473425,0.302992,5.415124,-1.199635,-5.508679,-1.314474,-4.768776,4.737216,-0.840584,4.699386,1.748782,8.535420,7.254782,-6.553075,2.797684,-7.098481,-2.185541,0.393255,-3.693615,-9.677603,-1.633024,-8.308677,4.971682,9.090118,5.252764,-6.769433,-8.875556,6.186160,-2.707987,9.089004,9.761105,-6.170141,9.033294,1.258750,-4.604686,4.947188,-8.145751,2.745626,7.351859,0.988846,-7.764319,1.542676,2.397790,-3.811797,-9.243884,-2.247004,7.277429,-0.729225,-4.531847,8.958816,6.873745,2.931549,-0.379832,-2.589195,3.933807,4.672713,4.753500,1.924411,7.602765,4.316818,4.876422,3.555571,-1.197782,9.274343,9.720770,1.934252,7.413412,-9.669499,-5.378017,0.658286,-2.038965,2.295449,-5.637385,8.907028,-7.225083,5.022094,-8.289008,8.636572,-2.707927,8.573283,9.034674,7.365051,-1.996945,-7.647218,-4.741171,-7.114689,-2.614316,-9.520243,-9.650868,8.243797,-9.398132,-8.723806,7.382974,-5.120893,6.274488,-9.266535,-1.949682,1.318032,1.453127,6.940335,-1.190975,6.530042,6.105535,4.370221,1.104224,3.614494,9.674138,-5.162872,3.397368,8.885008,-5.654467,2.834677,4.900455,1.165198,-2.812390,-5.265485,6.630303,-3.128758,5.603956,-5.752701,-0.414646,4.449082,-4.329323,-6.537889,-2.098327,-1.660657,2.952293,2.625080,-8.344349,-2.671291,-9.216972,1.957598,-5.047864,-1.339780,0.007825,-3.684306,-9.698595,-0.512697,6.988557,-4.431021,-7.030324,-1.444894,-6.743183,-4.683417,8.629183,-0.403618,3.444892], dtype = "float32")#candidate|6549|(588,)|const|float32
call_6548 = relay.TupleGetItem(func_3801_call(relay.reshape(const_6549.astype('float32'), [14, 14, 3])), 0)
call_6550 = relay.TupleGetItem(func_3804_call(relay.reshape(const_6549.astype('float32'), [14, 14, 3])), 0)
output = relay.Tuple([call_6544,call_6548,const_6549,])
output2 = relay.Tuple([call_6545,call_6550,const_6549,])
func_6553 = relay.Function([], output)
mod['func_6553'] = func_6553
mod = relay.transform.InferType()(mod)
mutated_mod['func_6553'] = func_6553
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6553_call = mutated_mod.get_global_var('func_6553')
call_6554 = func_6553_call()
output = call_6554
func_6555 = relay.Function([], output)
mutated_mod['func_6555'] = func_6555
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5970_call = mod.get_global_var('func_5970')
func_5972_call = mutated_mod.get_global_var('func_5972')
call_6574 = relay.TupleGetItem(func_5970_call(), 0)
call_6575 = relay.TupleGetItem(func_5972_call(), 0)
var_6582 = relay.var("var_6582", dtype = "float32", shape = (7, 7, 6))#candidate|6582|(7, 7, 6)|var|float32
bop_6583 = relay.bitwise_xor(call_6574.astype('uint64'), relay.reshape(var_6582.astype('uint64'), relay.shape_of(call_6574))) # shape=(7, 7, 6)
bop_6586 = relay.bitwise_xor(call_6575.astype('uint64'), relay.reshape(var_6582.astype('uint64'), relay.shape_of(call_6575))) # shape=(7, 7, 6)
output = bop_6583
output2 = bop_6586
func_6615 = relay.Function([var_6582,], output)
mod['func_6615'] = func_6615
mod = relay.transform.InferType()(mod)
var_6616 = relay.var("var_6616", dtype = "float32", shape = (7, 7, 6))#candidate|6616|(7, 7, 6)|var|float32
output = func_6615(var_6616)
func_6617 = relay.Function([var_6616], output)
mutated_mod['func_6617'] = func_6617
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5517_call = mod.get_global_var('func_5517')
func_5519_call = mutated_mod.get_global_var('func_5519')
call_6630 = relay.TupleGetItem(func_5517_call(), 1)
call_6631 = relay.TupleGetItem(func_5519_call(), 1)
output = relay.Tuple([call_6630,])
output2 = relay.Tuple([call_6631,])
func_6639 = relay.Function([], output)
mod['func_6639'] = func_6639
mod = relay.transform.InferType()(mod)
output = func_6639()
func_6640 = relay.Function([], output)
mutated_mod['func_6640'] = func_6640
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5849_call = mod.get_global_var('func_5849')
func_5851_call = mutated_mod.get_global_var('func_5851')
call_6653 = relay.TupleGetItem(func_5849_call(), 2)
call_6654 = relay.TupleGetItem(func_5851_call(), 2)
uop_6694 = relay.log2(call_6653.astype('float64')) # shape=(693,)
uop_6696 = relay.log2(call_6654.astype('float64')) # shape=(693,)
func_5895_call = mod.get_global_var('func_5895')
func_5896_call = mutated_mod.get_global_var('func_5896')
call_6700 = relay.TupleGetItem(func_5895_call(), 0)
call_6701 = relay.TupleGetItem(func_5896_call(), 0)
func_5754_call = mod.get_global_var('func_5754')
func_5755_call = mutated_mod.get_global_var('func_5755')
call_6711 = relay.TupleGetItem(func_5754_call(), 0)
call_6712 = relay.TupleGetItem(func_5755_call(), 0)
uop_6720 = relay.acosh(call_6653.astype('float64')) # shape=(693,)
uop_6722 = relay.acosh(call_6654.astype('float64')) # shape=(693,)
bop_6726 = relay.left_shift(uop_6720.astype('int32'), relay.reshape(uop_6694.astype('int32'), relay.shape_of(uop_6720))) # shape=(693,)
bop_6729 = relay.left_shift(uop_6722.astype('int32'), relay.reshape(uop_6696.astype('int32'), relay.shape_of(uop_6722))) # shape=(693,)
const_6731 = relay.const([8.992809,4.844851,7.828651,-9.912293,3.336109,7.639315,4.864069,2.334656,-2.929652,-0.005356,1.084097,-4.055361,-9.934426,-0.157356,7.757620,-4.370358,3.836328,-9.400573,6.031015,8.799651,8.662765,3.987724,3.284986,-5.116165,3.178214,8.479977,7.001536,9.623653,-8.802699,-5.100872,9.958319,-1.166875,7.374109,-4.901188,-0.748976,1.135611,-5.521979,-3.891251,-9.988989,-9.463670,6.832475,-4.324680,2.509829,-0.240732,-7.926399,6.319549,7.463964,-8.722577,9.714810,-0.413784,-4.632022,0.582447,-0.518330,-6.593743,-9.650063,7.524624,2.568691,-6.342031,8.728157,-2.107681,3.925464,-4.727565,2.002954,1.211792,7.820121,-4.664844,-2.507472,-9.910574,4.272319,4.737065,6.668345,-8.906664,-4.177610,1.745520,0.853218,6.637191,-6.802760,-8.878986,2.007040,-0.650283,5.242408,-1.383886,-3.380275,-2.562191,-2.359189,2.428436,-8.575538,-9.265721,-8.359049,1.238322,2.656997,-5.418837,-2.272691,2.652614,2.645168,-6.647703,8.524322,-3.771977,9.741494,7.217490,-5.718601,-2.810490,-9.044614,1.776934,-8.370266,1.806144,-7.029490,5.366597,-7.555453,-2.280137,-6.468219,-8.721600,4.826416,7.143051,6.122059,-5.296381,4.021415,8.185394,8.310379,-6.578242,5.886669,5.157145,-6.523228,-3.118429,-1.386450,-2.552958,8.966700,-4.762349,0.822760,6.121216,-4.117538,-7.214335,-7.817475,-6.920308,-1.547365,-4.648405,-5.182481,9.583809,-5.698770,4.504788,-9.342520,-3.255011,-3.558096,4.811188,-8.584822,-6.326572,-1.777161,8.137459,-2.370518,1.898117,-8.692340,-7.008123,9.727069,2.493751,1.056736,-0.456135,-6.386576,3.038752,3.058393,-6.974977,-7.990803,2.954104,7.759811,5.209565,-2.389296,2.269389,-2.604676,9.019465,0.944453,-0.139688,4.695955,0.436609,0.174229,-6.400869,7.311726,-1.916354,0.239787,-0.788814,-3.326616,2.943142,-0.529498,-7.552727,-8.736694,5.253711,-9.537258,6.102408,-9.088680,-2.424388,3.314752,8.249062,1.556943,-7.252388,3.724422,-0.892864,9.010230,-2.264937,-4.360669,-8.395155,-0.713741,-1.738460,9.929590,-9.704291,-3.568138,5.455934,4.692642,-5.232049,1.005828,8.366984,-6.801086,-3.908742,6.531606,3.197436,8.173191,7.977678,6.032845,8.183469,1.370563,8.704949,-0.014571,0.750578,3.192661,-7.167554,1.352135,9.102932,0.640849,1.707627,-4.142206,-2.574412,-2.906016,0.456930,-9.259570,7.157054,-6.219707,6.253869,9.860764,-3.366939,6.423685,1.502939,-4.366929,-6.705759,5.620224,8.402540,-2.804170,9.629137,6.443350,3.944902,0.242402,3.873929,9.827798,-6.015985,0.242512,9.441911,-7.590348,0.737946,4.578817,-4.295290,7.516525,-4.158012,-9.201638,3.485898,-1.209664,4.163881,7.484797,7.011250,2.762518,8.527662,-5.417888,6.683630,-5.849950,2.779100,-4.673893,-8.350299,4.491988,-9.573879,-9.831940,3.066731,-3.759465,5.069529,5.371361,-3.995153,-2.540878,-5.320237,-5.651188,3.184565,-4.345570,-5.872152,6.765169,2.871235,9.042465,-5.686552,0.632757,-7.758712,-7.575491,5.512224,-3.822317,-4.571349,7.308176,5.920172,4.665421,-7.043341,0.416648,-8.573598,3.263490,-6.924178,0.018070,5.169243,-8.139945,-5.001654,3.473629,0.122392,1.720273,-2.600763,-6.542385,-6.697539,9.650685,9.189917,8.280157,3.682451,2.265508,5.789352,-5.093955,8.791977,-7.635322,0.281669,8.570601,3.639436,-9.554178,-5.933832,5.242221,-7.956392,8.021857,-3.994112,-2.273549,-9.489889,6.430918,-9.676755,-3.700616,-1.802415,-9.379051,-9.812198,-8.487127,-2.456703,5.435639,8.027053,-9.403758,1.728336,-1.221641,-6.597476,2.550553,-4.699215,0.656315,-4.420589,2.780669,-6.258030,-2.293546,8.455583,8.670416,-2.411469,-4.929618,8.454468,8.180068,5.405223,-6.609808,-4.739996,-9.339716,-1.699799,-1.221780,4.404507,-4.548886,1.711519,-3.988433,9.531084,-2.620949,-5.824329,-0.082071,9.317576,7.884440,1.233149,7.979103,8.797464,-5.099172,2.712945,0.692901,-8.130635,-0.496857,-2.800547,9.659883,-5.555549,5.557160,-3.712587,8.990490,-6.910640,-4.297179,-2.413672,7.073057,3.990873,-6.060524,-1.514796,7.001616,3.410326,-8.263177,-7.218848,4.803447,-4.003929,-7.449121,-2.608059,-0.568978,-2.272350,-7.861398,-5.660304,-2.813501,-9.813175,-5.407349,-5.066251,8.972184,-6.408945,-0.931100,6.363325,0.840864,-4.857202,1.081823,1.144446,5.891819,-8.266279,5.990048,-4.752021,1.105575,-2.657345,6.426885,4.869529,-8.454246,3.451134,2.226288,-0.685004,-9.768753,-2.729224,-0.231919,3.438331,8.347990,4.384665,4.515148,-2.432822,-1.778472,-7.094645,-3.564341,0.103727,4.144259,9.462183,0.182716,-5.293677,-3.467138,8.720842,-3.801933,5.284999,8.993601,-1.656564,-1.995948,4.652543,5.105323,-9.708736,7.819065,-4.375298,-8.897133,4.301399,-0.852022,4.585063,-6.142653,3.880444,-9.195145,-4.809589,9.989280,-4.472447,-9.051673,4.649992,0.968605,3.794833,3.393879,-4.886137,5.395759,2.510645,1.522225,-9.851878,-6.877165,-2.355690,-6.368003,-5.597253,-0.925668,1.301608,-6.469467,-3.394245,5.227734,-8.668019,-6.232707,-3.341807,9.786671,9.233938,8.130597,-6.277652,9.149778,-3.264544,-1.659786,6.257602,9.901440,5.921392,0.519570,5.261002,5.851297,4.052453,-0.788962,3.778097,-4.756598,-2.848345,-8.279936,5.385133,-6.314487,-0.904596,-0.998503,1.097937,-5.422424,1.072097,-9.671982,-0.878689,-1.016573,8.216237,-1.323381,-8.422065,4.228536,-5.268396,-5.851048,1.150396,9.066334,5.112790,-8.045803,5.842786,1.482218,-8.762742,8.300201,5.209198,3.283690,0.812211,9.050267,-8.048743,-2.075236,-2.430599,-4.007551,3.195693,1.991045,9.648516,4.391916,3.778541,0.734902,5.971585,-4.175237,-2.408525,7.398071,4.926797,-6.693362,-5.086389,-4.773087,4.890303,-4.711392,-7.979146,4.947258,5.196751,-6.198929,1.185351,8.240475,1.822817,6.301063,4.317232,7.510773,6.372566,-7.425036,-2.152704,-3.698884,7.870037,4.303481,7.439374,5.283051,2.514956,8.994673,1.666096,0.111688,-1.570679,-1.501354,-5.962033,7.761044,5.805304,6.372195,-0.444294,0.994711,-2.503685,-2.096677,7.284129,6.963830,6.572389,7.885218,3.489485,1.407846,0.804755,6.506067,7.580667,7.705415,-8.510662,6.709455,3.986789,-8.025902,2.251694,0.482778,-6.958526,0.283632,6.469595,-7.560091,-0.099908,-0.185579,2.529879,3.798436,-1.166605,-9.709903,4.635491,-3.991075,-8.459923,-8.810958,5.434999,1.146097,-3.544656,6.260411,1.882839,-3.242704,-2.329632,-8.394317,-6.016248,-4.126193,-8.331386,8.677861,-4.250586,-5.699383,-5.781454,-9.768182,-2.496089,6.345107,2.073792,-3.565693,-3.621883,-3.036638,-7.050153,1.998127,-2.552248,7.186943,-6.548784,-9.951674,-1.038287,7.368883,7.489215,-7.512548,4.307856,3.308785,0.146173,-5.770678,-7.202769,-9.283635,9.679829,-8.295177,3.834809,-7.120425,-5.330469,7.582021,-9.467701,-5.423762,-6.952716,8.778978,-1.252166,-0.964378,4.032419,-9.170007,2.167817,-2.842513,-9.841020,-4.202922,-3.008520,4.970491,3.839952,-6.740556,1.944836,-3.463817,3.937864,-0.003642,-9.071522,4.764263,3.639661,1.618056,-2.758743,3.995618], dtype = "float64")#candidate|6731|(693,)|const|float64
bop_6732 = relay.divide(uop_6720.astype('float32'), relay.reshape(const_6731.astype('float32'), relay.shape_of(uop_6720))) # shape=(693,)
bop_6735 = relay.divide(uop_6722.astype('float32'), relay.reshape(const_6731.astype('float32'), relay.shape_of(uop_6722))) # shape=(693,)
output = relay.Tuple([call_6700,call_6711,bop_6726,bop_6732,])
output2 = relay.Tuple([call_6701,call_6712,bop_6729,bop_6735,])
func_6736 = relay.Function([], output)
mod['func_6736'] = func_6736
mod = relay.transform.InferType()(mod)
output = func_6736()
func_6737 = relay.Function([], output)
mutated_mod['func_6737'] = func_6737
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6740 = relay.var("var_6740", dtype = "float32", shape = (11, 12, 7))#candidate|6740|(11, 12, 7)|var|float32
uop_6741 = relay.asin(var_6740.astype('float32')) # shape=(11, 12, 7)
var_6759 = relay.var("var_6759", dtype = "float32", shape = (11, 12, 7))#candidate|6759|(11, 12, 7)|var|float32
bop_6760 = relay.bitwise_and(uop_6741.astype('int8'), relay.reshape(var_6759.astype('int8'), relay.shape_of(uop_6741))) # shape=(11, 12, 7)
func_4366_call = mod.get_global_var('func_4366')
func_4369_call = mutated_mod.get_global_var('func_4369')
const_6778 = relay.const([3,7,-2,4,10,-1,5,5,6,2,6,-6,5,6,7,-5,9,-8,2,10,-3,10,-8,1,-9,-4,4,8,10,-5,7,9,-3,-9,-10,9,-10,1,-6,-2,5,9,-5,-1,3,2,-5,6,-10,4,-3,-5,-4,9,-9,2,-6,-5,10,-6,9,2,10,3,4,10,-2,8,-9,3,-9,-2,-6,8,1,8,3,-6,-10,1,-8,-1,3,-4,10,10,2,4,9,3,-5,1,-3,-9,10,8,10,-8,-3,-9,2,10,-3,2,-6,3,-8,-1,3,-5,-1,-3,-6,-6,-5,-10,4,9,-4,-1,-9,-6,-1,9,7,9,9,-9,-10,4,9,10,-3,3,3,-10,8,-9,-2,-3,4,-7,3,-10,10,-8,-7,6,-1,-7,-5,-7,4,-4,-6,-7,10,-5,-9,-5,10,-10,4,-5,7,9,9,-6,4,1,-8,2,2,8,4,-10,7,-1,8,-3,-8,-8,8,3,-6,2,3,-10,3,6,-1,2,-8,8,1,-2,6,7,6,8,6,-3,-5,-4,3,6,4,-2,2,-10,-3,-1,4,3,-10,1,-10,-3,-9,3,-6,-8,6,-5,-1,-9,-7,1,10,1,-4,4,-1,1,5,-4,3,-3,3,7,-1,6,9,-9,-3,9,-7,3,1,7,-8,-6,4,-1,-7,9,-9,8,-4,6,-9,5,7,3,-10,3,3,2,-1,4,-3,6,2,1,10,1,4,7,-4,9,-1,3,-4,-5,9,-2,4,6,9,2,-7,-1,1,-2,6,-8,-8,5,5,6,1,8,-6,-3,-2,-6,-8,-9,3,-3,-5,-10,-1,4,4,1,9,-1,4,10,9,-6,-1,7,6,-6,10,-5,-10,-10,-10,10,-2,2,6,-1,-8,-3,2,6,9,-3,8,3,-7,-10,6,4,-2,-4,-2,5,-4,10,8,7,10,10,8,-3,8,1,5,2,6,10,-2,8,1,1,-6,9,-10,3,2,-4,9,-4,3,-6,1,6,10,9,-4,3,1,-7,10,-9,-5,-3,-8,-1,-3,9,4,9,-9,-5,9,4,-1,10,-8,4,-2,10,-5,1,9,-4,-7,-6,1,9,1,-9,4,-4,10,8,6,-2,-8,-3,-4,3,-9,-8,-2,10,2,-8,1,-1,-9,-3,-6,9,9,-4,-8,4,5,10,3,-3,-9,3,2,-1,2,9,8,-1,-8,9,1,-5,-7,6,-5,7,9,-6,-2,5,10,2,-1,-2,-10,-7,4,9,-5,1,3,5,-8,6,-7,-5,-4,2,2,6,-5,-4,5,2,8,1,3,-5,5,10,4,-7,-2,4,3,5,3,8,-3,-7,4,-2,3,8,3,-10,-3,5,-7,9,-1,9,4,-1,8,7,7,10,1,8,8,-10,4,-6,6,-3,10,10,-1,-2,-8,-2,-10,-5,-2,6,-8,1,-2,6,-4,5,-3,9,-6,5,-10,1,1,3,-8,5,7,-1,-5,-9,6,-5,8,4,-5,-10,-6,-6,-6,2,10,-1,5,8,-6,9,10,2,-7,2,5,-6,-2,8,3,-3,7,-4,3,-2,-6,5,-4,3,-3,-3,6,9,-4,-7,7,4,1,6,-9,-7,1,10,-8,9,10,2,-3,-4,-8,-8,1,10,-9,10,-5,2,6,3,6,7,-6,-2,2,8,8,-4,7,3,-10,-5,-9,-3,10,2,8,4,10,10,3,-1,-3,2,-1,-7,9,8,-8,6,6,6,7,5,7,9,-7,-2,9,10,2,-3,-9,10,1,-5,-4,-3,10,-8,5,-6,-10,-3,-4,-1,2,9,4,-9,7,-3,5,-2,4,-2,9,-3,8,-10,-1,-1,2,4,-1,-2,-7,9,-1,-6,1,7,-6,9,-8,-8,-9,-2,1,8,9,2,6,-7,-10,-5,-1,-1,3,-2,-10,-10,1,1,-9,6,10,5,9,5,7,2,-2,-8,4,6,2,4,-9,9,-5,-8,-5,3,7,3,7,5,-10,-4,4,-8,-7,2,-9,-6,6,-1,8,-4,1,-10,-5,-10,9,7,6,-10,10,-3,-2,3,-2,10,-8,7,-2,-2,4,-1,-5,-6,6,6,-7,4,7,-7,4,10,-2,5,-4,2,-8,2,-3,-6,6,6,-2,-3,2,1,7,-7,-8,2,9,1,9,3,-2,1,-3,-1,9,-8,-4,-6,8,-10,8,-8,8,-6,-3,-6,-10,-2,6,-9,-7,-6,6,2,5,-10,-3,-2,10,-7,7,-7,-2,1,4,3,-9,-4,2,8,-7,-2,9,-1,-2,-9,2,7,6,-2,-9,4,5,-2,-4,-6,-9,1,-10,4,-3,-2,-10,8,6,10,6,-3,2,8,6,-8,2,-2,6,-6,-2,3,-9,9,1,-3,3,-8,3,-4,-1,5,-4,8,4,6,-4,7,-9,1,8,-7,-9,-8,2,-3,-4,8,7,5,-2,9,-9,-9,5,-6,-3,-3,-9,-7,3,-8,10,3,4,1,1,1,-4,-8,-10,1,-9,-6,-3,1,-2,-3,5,-10,-5,2,-8,-4,3,3,-6,5,-7,4,-1,-6,-4,-7,-4,-5,-7,5,-9,-10,-10,-6,-7,6,1,6,6,6,2,8,-10,4,-1,-5,-7,5,-9,-8,1,10,5,-3,-9,-1,-4,-6,-2,-2,-9,-7,1,8,2,-6,-1,4,-4,4,-8,2,-4,6,9,2,4,-6,9,7,-3,6,-1,9,9,-9,-10,1,-1,1,5,-10,1,8,-4,-5,7,-9,2,-6,-1,8,-9,-5,-5,2,10,-3,-8,4,3,8,-9,-2,5,1,-4,9,-9,-6,3,-6,-8,7,-7,9,-10,-4,4,-1,-4,6,3,-3,-2,-7,-7,-9,4,-2,-6,-3,-9,-9,-2,3,3,6,-7,-8,-10,-5,2,3,-7,-6,-7,1,-7,9,1,7,-3,1,4,10,-8,4,-8,-3,9,10,-8,1,1,5,4,-7,-5,-9,-2,6,6,8,-4,-9,-10,-10,-9,-6,-3,-4,2,-3,4,7,-3,-3,-2,2,-2,10,7,-10,3,9,-6,-2,-6,5,-9,5,-5,10,9,-5,3,3,-7,8,-9,-7,-2,1,-6,-8,-1,6,1,-5,-9,1,6,-4,7,5,1,-8,1,-10,8,-1,-1,4,4,-4,10,7,-9,10,-4,-3,7,9,3,-4,-9,1,-3,-4,6,3,5,-1,2,-2,6,-3,-9,10,4,-4,-2,-3,-3,3,-6,5,-6,-6,10,5,3,1,-2,3,-7,-1,5,-4,-2,8,-5,7,-3,-10,-3,1,4,-10,-2,-4,-2,-8,8,5,-10,8,-8,-5,-10,-4,-9,-8,6,1,1,-5,-2,-1,-4,2,9,-7,5,-8,8,-7,-8,4,-3,1,2,-8,-8,9,-5,-8,-9,1,-9,-8,-2,8,9,3,-6,-7,-10,-7,4,-4,4,-3,-7,8,5,6,10,9,-5,3,-9,-2,-7,-9,4,2,-5,3,-1,-1,7,-6,-3,-8,7,10,4,-5,2,6,9,-5,2,8,7,10,9,10,-10,10,2,5,5,-8,6,-4,1,9,7,7,-9,9,2,1,10,9,-3,-9,-6,7,3,7,1,7,5,2,-8,5,-2,2,-8,-5,7,9,-1,5,8,-7,-10,-4,6,-1,9,-6,2,5,3,1,4,-5,-8,10,-4,4,-9,1,8,-4,9,10,-2,-1,6,6,6,6,4,2,1,4,-6,-7,-6,-3,-3,-8,9,9,-3,-5,6,7,-5,8,4,-8,-6,7,6,-8,-5,5,6,-9,-6,-10,-4,-2,5,-7,-3,-3,9,-10,-2,-5,5,-8,1,9,-2,2,7,6,-6,-5,5,-8,8,9,-6,-6,4,1,-3,-5,-3,-10,-2,4,-1,-7,-5,-1,2,-2,8,-9,-1,-10,-1,9,3,-4,-8,-5,7,5,6,6,10,6,7,-10,6,-3,6,-2,-3,-6,-7,10,-2,8,3,-3,6,-10,-7,-1,2,-9,-8,-7,-9,10,3,-2,4,-10,7,-9,7,6,-2,4,-1,-10,5,-7,-2,4,8,-10,-7,-1,-8,-9,-10,6,10,-5,4,-9,5,-7,5,-4,-7,-5,-7,-1,7,-7,-3,-10,-4,5,2,-8,1,4,7,1,4,-8,-4,-5,9,9,-6,6,-6,9,8,-5,-5,5,8,-3,3,3,-10,-8,2,-10,8,2,10,2,-3,7,5,-9,9,5,-5,9,9,-4,-5,-3,4,-9,-7,2,-5,7,10,-2,1,-1,8,-2,7,9,-2,-7,8,-1,-6,-4,-2,10,10,-9,1,-7,-9,-7,-7,-10,-9,-7,4,1,-3,-10,9,-4,-6,-9,-4,6,-5,10,9,3,7,-4,-2,-1,-3,9,-3,-2,8,5,-8,-7,-4,-7,7,3,-1,-6,-4,-7,10,-1,-9,-3,4,2,9,-5,6,-7,3,10,-5,-7,5,-9,10,-9,3,-9,-10,-9,10,-3,7,9,8,-5,8,-3,8,8,-2,-8,-9,-1,7,9,5,2,-9,-1,-2,9,8,3,-6,3,-7,4,-9,-6,-5,4,6,10,-8,-2,9,2,-7,-5,-5,-2,1,-2,-9,7,-5,1,-6,7,-6,-6,-10,4,5,-10,-10,-7,-6,-1,7,-8,8,4,-4,10,7,5,-6,7,-8,4,-9,9,9,-10,-10,1,-2,6,5,4,-3,1,7,3,-7,3,7,1,4,6,-2,5,-1,9,-6,10,-1,-9,1,6,-8,-3,-3,-2,-6,4,-5,-3,10,4,7,5,7,8,3,-5,3,5,10,2,8,-7,4,9,4,-2,-7,8,-9,1,8,-3,4,6,7,-4,-5,8,-3,-5,-2,5,-2,-3,-9,4,-2,8,-7,4,4,9,-10,-9,3,7,3,-5,9,7,-4,-5,8,-6,10,8,-7,3,3,-10,8,-4,-1,5,8,-8,-4,1,-8,6,-7,2,-1,-1,9,-5,-9,7,7,-2,5,-9,2,-1,-7,8,1,-9,-7,1,4,-2,-4,-4,2,-7,-7,7,6,-2,7,8,4,-4,-8,4,10,6,4,6,8,-4,-10,6,1,9,-2,5,4,4,4,-5,-5,-10,-1,-6,10,5,2,-7,1,-10,3,-6,7,-1,9,7,9,2,4,10,-7,7,6,2,-10,-2,-10,-3,10,9,-2,-5,4,10,5,-5,4,-4,5,-2,10,9,-2,-8,6,4,-2,8,6,7,7,8,5,6,1,5,9,3,8,-6,7,-4,-8,-8,-10,10,6,-3,-1,10,-4,-3,-1,-6,6,-3,1,3,-10,6,3,-9,3,9,-8,3,-4,-7,-1,-1,-5,9,2,7,-2,-1,-8,-3,4,-2,10,6,-4,-8,6,-3,6,6,3,-1,6,-9,4,-5,5,-1,-5,-1,-10,3,2,8,7,7,9,6,-10,10,-8,-10,-2,-1,8,3,3,-5,-1,3,6,9,-8,1,-1,-9,5,3,-8,4,6,-3,3,-4,-10,-4,6,4,-8,1,-7,8,10,1,4,6,-3,9,-7,-2,-1,-5,-10,3,3,7,4,2,-7,-2,8,-10,-6,-9,-5,2,-9,-3,4,-7,9,7,-9,9,-1,4,-8,-2,-7,-1,-4,-6,-10,2,-6,2,-2,3,9,-5,3,-2,8,-9,-5,-7,3,-9,-6,-10,-9,10,-3,-1,4,-5,-7,-10,-10,-2,-9,-3,-4,-9,3,-3,-2,-4,-7,-9,4,10,10,-8,8,5,-9,-10,-1,1,8,6,8,-7,8,-8,10,4,7,-10,10,-2,4,-1,-3,-8,-6,-3,8,-1,-7,-7,-8,-9,-2,10,6,10,6,-4,-4,9,9,-6,1,-1,10,-7,8,-3,-7,-2,-5,-3,-4,9,1,9,10,-5,5,-1,-6,3,-6,-6,-9,10,-3,-6,-1,-6,-3,-10,-10,-3,-3,-10,-5,-4,-9,-8,9,4,-10,-10,5,3,10,-8,10,-7,-8,-1,2,-5,-4,-9,10,6,4,-3,3,-7,-9,3,-8,10,7,-10,7,-10,-8,-5,-4,10,-8,-9,7,3,-10,-7,7,4,-1,5,-10,8,-5,6,-3,-9,9,1,3,4,-10,-10,10,-3,8,6,2,-4,6,-8,8,1,5,-5,-8,10], dtype = "int64")#candidate|6778|(2310,)|const|int64
call_6777 = func_4366_call(relay.reshape(const_6778.astype('int64'), [15, 11, 14]), relay.reshape(const_6778.astype('int64'), [15, 11, 14]), )
call_6779 = func_4366_call(relay.reshape(const_6778.astype('int64'), [15, 11, 14]), relay.reshape(const_6778.astype('int64'), [15, 11, 14]), )
output = relay.Tuple([bop_6760,call_6777,const_6778,])
output2 = relay.Tuple([bop_6760,call_6779,const_6778,])
func_6784 = relay.Function([var_6740,var_6759,], output)
mod['func_6784'] = func_6784
mod = relay.transform.InferType()(mod)
var_6785 = relay.var("var_6785", dtype = "float32", shape = (11, 12, 7))#candidate|6785|(11, 12, 7)|var|float32
var_6786 = relay.var("var_6786", dtype = "float32", shape = (11, 12, 7))#candidate|6786|(11, 12, 7)|var|float32
output = func_6784(var_6785,var_6786,)
func_6787 = relay.Function([var_6785,var_6786,], output)
mutated_mod['func_6787'] = func_6787
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6553_call = mod.get_global_var('func_6553')
func_6555_call = mutated_mod.get_global_var('func_6555')
call_6792 = relay.TupleGetItem(func_6553_call(), 1)
call_6793 = relay.TupleGetItem(func_6555_call(), 1)
output = call_6792
output2 = call_6793
func_6798 = relay.Function([], output)
mod['func_6798'] = func_6798
mod = relay.transform.InferType()(mod)
mutated_mod['func_6798'] = func_6798
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6798_call = mutated_mod.get_global_var('func_6798')
call_6799 = func_6798_call()
output = call_6799
func_6800 = relay.Function([], output)
mutated_mod['func_6800'] = func_6800
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5004_call = mod.get_global_var('func_5004')
func_5005_call = mutated_mod.get_global_var('func_5005')
call_6807 = func_5004_call()
call_6808 = func_5004_call()
uop_6872 = relay.sin(call_6807.astype('float32')) # shape=(7, 7, 6)
uop_6874 = relay.sin(call_6808.astype('float32')) # shape=(7, 7, 6)
func_6087_call = mod.get_global_var('func_6087')
func_6088_call = mutated_mod.get_global_var('func_6088')
call_6880 = func_6087_call()
call_6881 = func_6087_call()
func_5323_call = mod.get_global_var('func_5323')
func_5326_call = mutated_mod.get_global_var('func_5326')
const_6886 = relay.const([[4],[6],[2],[4],[-7],[-8],[-1],[8],[-2],[-7],[-6],[-7],[-9],[-8],[8],[6],[1],[7],[-9],[3],[-7],[-6],[-1],[10],[-3],[-6],[-3],[4],[9],[-4],[-10],[-8],[2],[6],[-6],[9],[9],[-2],[2],[-8],[8],[-6],[6],[-4],[-1],[-3],[-9],[-4],[6],[-6],[9],[8],[3],[-2],[9],[-9],[-3],[-9],[-4],[5],[1],[8],[9],[-3],[-10],[-9],[-6],[-10],[-6],[-1],[-2],[3],[5],[4],[5],[7],[-7],[6],[-7],[-3],[7],[7],[-1],[-2],[9],[4],[-6],[-5],[-9],[2],[-8],[9],[-4],[-3],[3],[-7],[2],[-4],[10],[3],[-9],[-1],[4],[-6],[4],[-8],[-7],[-10],[-10],[-1],[1],[-3],[-3],[-7],[3],[4],[-7],[-7],[-8],[-7],[-2],[-7],[-1],[-9],[9],[6],[-9],[4],[-8],[-5],[-1],[4],[-2],[2],[-7],[6],[-3],[6],[9],[-7],[-5],[-10],[-3],[-6],[-7],[3],[10],[7],[-10],[5],[5],[7],[-2],[2],[-8],[2],[3],[8],[6],[7],[5],[-1],[-9],[8],[-9],[-9],[2],[-4],[8],[-8],[6],[-10],[1],[5],[1],[1],[1],[-2],[4],[10],[-1],[-8],[4],[9],[-8],[8],[4],[5],[7],[-3],[1],[6],[-7],[2],[8],[-5],[-2],[4],[-4],[8],[8],[8],[-2],[-9],[10],[-7],[7],[-4],[-4],[8],[-10],[-1],[-5],[-8],[5],[-1],[-10],[7],[1],[-2],[10],[-3],[-5],[-5],[-3],[10],[-7],[6],[3],[-3],[10],[1],[4],[-5],[-6],[7],[8],[-6],[6],[3],[6],[3],[-2],[7],[4],[4],[-5],[-5],[7],[-3],[7],[-10],[9],[10],[-9],[5],[6],[-1],[6],[6],[10],[-6],[-6],[-4],[-1],[7],[-5],[4],[5],[9],[9],[-1],[1],[-3],[-4],[9],[-8],[-10],[3],[9],[-1],[3],[3],[9],[-3],[4],[-2],[5],[9],[-2],[-7],[-8],[5],[-9],[-2],[-4],[3],[10],[-5],[6],[9],[10],[-4],[-5],[-2],[-7],[-8],[-2],[-3],[-1],[1],[9],[-5],[2],[7]], dtype = "uint64")#candidate|6886|(315, 1)|const|uint64
call_6885 = relay.TupleGetItem(func_5323_call(relay.reshape(call_6880.astype('float32'), [13, 12, 10]), relay.reshape(const_6886.astype('uint64'), [315,]), ), 2)
call_6887 = relay.TupleGetItem(func_5326_call(relay.reshape(call_6880.astype('float32'), [13, 12, 10]), relay.reshape(const_6886.astype('uint64'), [315,]), ), 2)
func_6009_call = mod.get_global_var('func_6009')
func_6011_call = mutated_mod.get_global_var('func_6011')
const_6893 = relay.const([[10,8,-4],[8,-6,7],[-10,2,-9],[-8,-4,5],[1,-7,-1],[-2,4,9],[-8,7,-1],[-4,3,4],[6,2,-10],[5,7,10],[4,-9,4],[6,4,-10],[8,-5,1],[-2,1,4],[3,5,-1],[9,8,4],[7,-6,5],[-7,-1,3],[-2,-6,9],[6,-1,-1],[5,10,10],[-7,-5,-8],[-10,-1,-7],[-10,9,4],[10,-9,1],[3,-2,1],[-6,8,1],[10,-1,2],[-5,-7,-2],[2,2,-1],[5,-1,7],[-8,-2,4],[2,-7,-7],[3,3,8],[-2,5,6],[-7,2,-8],[3,3,4],[-9,3,1],[4,6,5],[-3,8,9],[8,5,-7],[10,-10,-5],[2,3,1],[9,-10,-5],[3,-2,-7],[-5,10,-4],[4,4,9],[-8,-5,-8],[9,-2,-4],[-5,-6,-6],[-9,-8,2],[3,8,-9],[9,9,2],[-8,5,-1],[-8,4,3],[-7,-2,9],[-8,1,2],[-4,9,2],[-3,2,4],[-6,10,-6],[-1,-5,-9],[10,-7,-7],[1,9,-7],[3,5,5],[-9,-2,3],[3,-3,9],[-3,1,-8],[-10,-10,-8],[1,-6,-7],[6,3,8],[-5,8,-9],[2,-3,-3],[-1,-1,1],[-9,-3,9],[-5,-7,-10],[-2,5,-5],[-8,6,9],[-4,2,3],[-7,4,-7],[-9,7,-1],[-2,-3,7],[-1,4,6],[-7,-4,-8],[-2,9,-2],[-10,-9,8],[3,-4,-6],[6,-4,7],[2,2,4],[-2,2,2],[-6,-6,9],[-6,1,3],[-9,-5,7],[-4,-7,-4],[-6,-5,6],[4,-2,-8],[4,5,1],[5,5,6],[-3,1,-9],[-10,1,-7],[5,-10,4],[7,-9,-5],[10,-4,-1],[9,1,3],[4,6,9],[4,-5,-10],[-10,8,1],[4,3,-8],[-6,-6,6],[-6,-3,8],[6,-7,-6],[-9,-5,-8],[10,10,9],[6,5,-2],[-3,3,-1],[-7,5,-9],[10,7,-6],[-4,8,10],[1,3,-9],[-9,5,8],[3,4,-9],[6,10,-7],[-2,-3,-6],[-10,-8,-5],[9,-9,5],[2,-3,5],[7,3,7],[-6,-2,1],[-1,-7,7],[-5,-5,3],[-4,-8,-1],[-10,4,-8],[5,2,-10],[-5,8,-9],[5,1,10],[2,9,2],[-2,-8,8],[-9,-7,-10],[6,9,9],[-8,4,6],[1,10,7],[10,6,6],[-2,-7,-8],[10,-4,7],[-9,-10,4],[8,4,-5],[-2,8,3],[-4,-1,-3],[-9,2,-2],[-7,-3,5],[-4,3,3],[-7,-5,4],[1,2,-10],[10,8,1],[10,-2,-8],[10,-9,10],[-5,6,-5],[9,-10,-7],[-5,-10,-8],[6,10,1],[-4,9,-8],[-5,7,-2],[-4,8,1],[6,4,-1],[-6,10,-5],[-5,-4,2],[5,-4,9],[-5,-8,-10],[-10,-6,-2],[-9,-4,-8],[2,7,10],[-9,-5,9],[10,10,1],[-8,8,-5],[3,-1,-5],[-5,2,2],[-9,9,3],[-1,-6,-2],[3,-7,-5],[1,8,-6],[-3,-7,-3],[9,1,10],[-7,-8,4],[-9,-1,-9],[-9,-6,-4],[-10,-3,2],[-8,-10,10],[-3,-2,10],[-9,4,7],[8,-6,5],[-9,9,-1],[-10,3,-8],[-9,-9,-9],[7,-10,-10],[6,3,6],[-4,-2,-9],[-5,4,8],[-8,-2,-7],[6,1,-5],[-2,-10,-3],[-2,3,9],[9,-8,9],[-4,2,3],[-4,-3,6],[-7,9,3],[6,-8,-9],[9,-10,-10],[3,-7,9],[2,3,-10],[3,5,-5],[-3,-4,-9],[9,-5,-7],[9,9,2],[-8,-3,2],[-9,-9,9],[5,-6,-5],[5,5,5],[5,1,-10],[1,-9,-10],[-8,-8,-3],[4,8,-8],[6,-9,3],[4,-7,-1],[-8,-6,9],[-2,5,5],[-6,8,8],[9,9,-9],[-1,10,8],[5,-4,-6],[9,1,7],[-3,-4,9],[9,7,7],[10,-9,-7],[2,4,5],[10,-8,-7],[4,8,-1],[9,6,-7],[4,-2,-10],[1,-3,9],[-4,1,9],[-7,-7,2],[-1,-9,-8],[1,-8,4],[-1,1,1],[9,10,-7],[9,-3,-8],[-8,5,-7],[6,5,-8],[3,6,-1],[-5,-2,4],[3,3,10],[10,-2,5],[-5,5,6],[-1,-5,2],[-3,8,-3],[3,6,3],[-9,5,-5],[-9,3,2],[-9,10,-9],[-10,1,-6],[-2,2,8],[3,-6,7],[1,4,1],[-5,9,4],[8,-10,4],[3,8,-4],[-1,-4,-5],[2,6,-10],[-2,-7,8],[10,-9,-5],[10,-9,-5],[7,-9,-5],[-9,-10,3],[-3,-5,-7],[-6,-9,9],[8,-1,-10],[-9,2,-7],[2,-4,-2],[-2,-1,7],[-10,-6,6],[10,-7,-10],[-9,5,8],[-8,9,-5],[-10,-7,-4],[8,-7,-2],[10,-8,4],[7,8,-5],[-5,7,7],[-4,-8,8],[5,-5,-10],[7,8,-10],[-3,6,-8],[-10,-5,6],[8,1,-3],[10,-6,-2],[2,10,-5],[4,5,1],[-2,6,-7],[-3,4,-3],[-2,-5,-9],[-7,-6,-1],[-7,-9,7],[-8,3,8],[8,-7,3],[9,4,-6],[-3,-4,-1],[-2,-1,3],[-2,-7,-4],[-5,4,7],[3,-7,-4],[-1,-7,7],[-1,-8,-9],[2,-1,8],[-6,10,-4],[-9,6,5],[-8,-6,1],[-7,-2,9],[-6,-5,-4],[4,6,9],[-4,-7,6],[-8,-8,1],[10,4,-3],[-5,5,-7],[3,-8,7],[10,-10,10],[1,-10,6],[10,9,10],[-8,2,7],[4,-9,10],[4,7,-9],[9,9,-8],[-3,3,-4],[-8,9,8],[7,7,-8],[4,-9,7],[-10,-7,-8],[-5,3,6],[10,10,2],[-7,-1,7],[-5,3,-1],[-1,7,-1],[-5,7,-4],[-5,-9,-6],[-4,1,9],[-7,6,8],[8,-10,1],[1,6,4],[-3,6,6],[4,-5,7],[1,-10,-2],[6,-10,-7],[6,7,-6],[-3,9,-2],[9,7,8],[-10,8,8],[8,3,2],[1,8,1],[-8,-4,2],[-6,-1,-9],[-8,10,10],[-9,-5,8],[-2,3,-8],[5,-9,-5],[-6,-5,3],[-6,2,-9],[7,1,-8],[-7,-10,2],[7,6,-6],[-6,-1,9],[-5,-4,-2],[-9,1,-9],[3,-1,6],[-2,9,-8],[8,-7,-7],[10,-1,8],[9,4,-1],[9,9,-8],[-1,10,8],[-7,4,-5],[2,2,2],[-9,-9,-1],[6,-4,-7],[-1,-5,-10],[-1,-9,-3],[-5,-10,8],[-6,2,-10],[6,2,2],[-4,-10,8],[-4,-9,3],[7,-8,-6],[2,-5,-7],[-7,2,7],[-1,-9,-2],[2,-5,8],[6,-5,-4],[-1,2,1],[1,-6,-1],[7,4,2],[-2,-1,-7],[4,-4,-6],[-1,-7,2],[-4,-7,-6],[-3,-10,-8],[4,-9,6],[4,9,-8],[-8,-3,1],[2,6,6],[-10,4,10],[4,-1,-9],[-9,6,10],[-3,10,1],[1,7,-5],[-1,3,-6],[-9,-7,3],[7,8,10],[-7,4,10],[9,1,9],[10,-10,7],[-8,-6,7],[10,3,-9],[-5,9,6],[-7,1,2],[1,-1,-8],[8,-5,10],[6,-7,-9],[-4,-3,-4],[-4,-5,-8],[-6,10,1],[-6,-4,3],[-2,-6,-10],[5,9,-10],[-8,-3,-7],[7,-9,3],[-5,-9,9],[-2,3,-1],[-3,10,4],[-3,2,3],[-7,5,9],[8,-6,-4],[-8,-9,6],[-7,-6,-9],[7,-5,1],[10,-2,6],[4,9,10],[8,-2,1],[9,-7,5],[7,1,2],[-2,10,1],[7,-1,-7],[8,8,-4],[-7,7,8],[-1,5,-7],[-2,9,-2],[1,6,-4],[10,2,-3],[7,9,-4],[-5,2,-7],[-6,5,-2],[-6,6,4],[8,-3,1],[7,6,1],[3,-6,-3],[1,3,-5],[-4,-7,-6],[2,4,4],[-1,-3,-7],[8,-8,2],[-7,-3,10],[7,-2,4],[-7,1,4],[-7,6,-2],[4,-2,4],[8,-6,4],[-2,8,5],[-1,2,4],[-9,9,-4],[-10,-10,-3],[-6,-6,5],[-8,8,10],[-2,8,4],[10,-6,3],[-9,-6,-5],[3,-3,6],[6,-4,2],[2,6,-7],[-3,-6,-5],[6,-1,-5],[5,-2,7],[-6,-3,-9],[-4,-10,2],[-1,-6,3],[7,9,4],[-8,2,-5],[9,-1,-2],[9,3,4],[-1,-10,3],[10,3,-10],[3,-5,-8],[-5,-4,1],[-9,9,2],[-9,2,1],[5,7,-1],[4,-5,-3],[1,-1,-4],[-8,3,-5],[5,-9,3],[2,3,5],[-6,-10,-8],[-3,-10,-4],[7,7,3],[6,-4,-5],[-6,5,6],[-3,-7,-3],[-7,5,-1],[4,-3,7],[-1,-6,-9],[-1,7,4],[4,-6,-10],[9,7,7],[-5,5,1],[5,-4,-6],[3,-8,3],[-6,7,9],[2,9,4],[-5,-8,-8],[-2,-9,-6],[-9,-2,9],[-9,4,6],[-7,1,-6],[-3,-3,-3],[8,-4,2],[-3,8,10],[-3,-10,-6],[10,3,-9],[-8,1,-3],[-4,10,1],[-7,6,2],[-3,-4,-1],[7,4,-7],[-2,9,-8],[-10,5,-2],[3,-3,-7],[5,-9,2],[9,-5,1],[10,-9,-9],[-1,-1,8],[-5,5,1],[2,-1,-5],[2,2,9],[-1,9,7],[-9,6,7],[3,6,-7],[-9,3,9],[-1,-1,2],[8,-10,3],[4,8,-2],[-5,-4,-3],[8,-1,2],[-8,-2,-7],[1,-8,-2],[-8,5,-6],[10,1,2],[8,-6,2],[8,-2,-1],[7,-4,-2],[-7,3,-8],[-6,10,-6],[-1,-2,-3],[6,6,-4],[-9,-8,-7],[1,3,-6],[5,-3,1],[-9,4,-1],[8,8,9],[1,-2,-3],[3,3,-2],[-9,10,3],[-1,-4,-6],[10,6,7],[10,3,1],[1,2,2],[-10,10,-2],[1,-7,-8],[4,8,6],[3,-7,9],[2,2,3],[-7,-6,3],[2,-1,3],[-4,9,-4],[9,-2,6],[4,1,-2],[-1,-7,8],[5,6,-2],[7,-5,-10],[-1,8,5],[5,2,7],[-10,4,3],[7,-3,6],[-3,1,-9],[-9,-10,-6],[-1,-6,8],[-8,10,-6],[-6,-5,-10],[-4,3,-3],[8,5,-10],[-5,-3,-5],[-2,9,-7],[-9,2,1],[2,-4,-3],[-7,10,-1],[10,-1,-4],[-4,-9,10],[-2,8,10],[5,-7,7],[8,10,-6],[8,6,-9],[-8,-7,-7],[-3,-6,2],[-10,-8,-6],[6,-8,3],[9,10,-5],[-6,-5,7],[1,-1,-1],[-3,-10,10],[7,-1,4],[9,-9,7],[-9,4,5],[5,3,1],[1,-7,-6],[-8,-2,-7],[4,8,-4],[-7,7,8],[3,7,9],[10,-3,-2],[3,-1,-8],[-9,-4,-8],[-1,3,6],[-1,-3,7],[-6,4,5],[8,6,2],[8,10,10],[8,5,-1],[-3,2,-1],[-9,-9,6],[-1,-3,-4],[2,-10,-1],[10,-2,-3],[6,7,1],[10,-5,-3],[2,-3,-10],[3,8,4],[-2,1,9],[-10,9,6],[5,9,2],[9,7,-2],[1,-9,-9],[-10,-9,-6],[6,-7,3],[-6,7,10],[-9,-7,3],[5,5,4],[-9,4,9],[8,5,-2],[-9,9,-6],[-5,-8,-3],[-2,-6,2],[-10,8,1],[-3,3,-6],[-8,-3,-9],[8,4,-8],[8,5,6],[7,10,-9],[3,2,2],[10,1,9],[-4,5,4],[7,3,7],[9,7,-1],[10,10,9],[10,-6,-7],[-2,-3,-9],[2,10,-7],[-7,2,6],[2,-7,-10],[6,10,-10],[6,-5,10],[-5,-9,-8],[-3,3,-8],[-9,6,5],[-4,7,-3],[-10,10,-10],[-1,-3,-2],[-9,7,-10],[-2,9,7],[-8,-5,7],[-2,8,6],[2,-7,-10],[-9,3,2],[5,4,-5],[-6,-2,-6],[10,7,9],[8,-1,-10],[3,1,-7],[1,8,-6],[6,6,4],[6,9,1],[-7,1,3],[2,-3,2],[-7,-2,10],[-9,-9,-2],[-4,-6,-4],[-3,6,-10],[5,5,-6],[-8,1,9],[9,6,3],[-2,8,2],[-2,4,8],[7,7,-3],[-8,-5,2],[-8,10,-10],[4,9,-7],[6,5,9],[6,-9,7],[-4,-5,-4],[3,-8,8],[7,10,-5],[-9,10,3],[-9,7,-9],[-10,-9,-4],[-3,-7,-1],[9,-8,-3],[7,4,-6],[-7,5,3],[-8,1,-9],[2,-3,3],[3,-1,2],[-4,8,8],[-6,-8,-9],[-4,-5,6],[-9,6,-7],[-5,4,9],[-2,6,-2],[3,-9,8],[-6,-7,-7],[-7,-3,-10],[3,-1,5],[-4,5,-6],[-4,5,-2],[1,5,-10],[-3,3,-1],[6,-2,2],[7,2,-4],[8,-9,-1],[-6,-10,-4],[-5,7,-5],[-3,-2,-8],[-10,-8,8],[3,4,-1],[-5,-9,7],[-5,-10,-2],[-9,-6,10],[5,2,4],[-9,-7,3],[8,-4,2],[10,-8,8],[-5,-7,-9],[-6,8,-10],[-9,-3,2],[6,-1,6],[-4,9,-7],[1,5,3],[-4,-8,9]], dtype = "int64")#candidate|6893|(770, 3)|const|int64
call_6892 = relay.TupleGetItem(func_6009_call(relay.reshape(const_6893.astype('int64'), [2310,])), 0)
call_6894 = relay.TupleGetItem(func_6011_call(relay.reshape(const_6893.astype('int64'), [2310,])), 0)
output = relay.Tuple([uop_6872,call_6880,call_6885,const_6886,call_6892,const_6893,])
output2 = relay.Tuple([uop_6874,call_6881,call_6887,const_6886,call_6894,const_6893,])
func_6896 = relay.Function([], output)
mod['func_6896'] = func_6896
mod = relay.transform.InferType()(mod)
output = func_6896()
func_6897 = relay.Function([], output)
mutated_mod['func_6897'] = func_6897
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4944_call = mod.get_global_var('func_4944')
func_4945_call = mutated_mod.get_global_var('func_4945')
call_6907 = func_4944_call()
call_6908 = func_4944_call()
output = call_6907
output2 = call_6908
func_6920 = relay.Function([], output)
mod['func_6920'] = func_6920
mod = relay.transform.InferType()(mod)
output = func_6920()
func_6921 = relay.Function([], output)
mutated_mod['func_6921'] = func_6921
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5738_call = mod.get_global_var('func_5738')
func_5740_call = mutated_mod.get_global_var('func_5740')
call_6924 = relay.TupleGetItem(func_5738_call(), 2)
call_6925 = relay.TupleGetItem(func_5740_call(), 2)
uop_6938 = relay.rsqrt(call_6924.astype('float32')) # shape=(7, 7, 6)
uop_6940 = relay.rsqrt(call_6925.astype('float32')) # shape=(7, 7, 6)
output = relay.Tuple([uop_6938,])
output2 = relay.Tuple([uop_6940,])
func_6943 = relay.Function([], output)
mod['func_6943'] = func_6943
mod = relay.transform.InferType()(mod)
mutated_mod['func_6943'] = func_6943
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6943_call = mutated_mod.get_global_var('func_6943')
call_6944 = func_6943_call()
output = call_6944
func_6945 = relay.Function([], output)
mutated_mod['func_6945'] = func_6945
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6943_call = mod.get_global_var('func_6943')
func_6945_call = mutated_mod.get_global_var('func_6945')
call_6965 = relay.TupleGetItem(func_6943_call(), 0)
call_6966 = relay.TupleGetItem(func_6945_call(), 0)
output = relay.Tuple([call_6965,])
output2 = relay.Tuple([call_6966,])
func_6968 = relay.Function([], output)
mod['func_6968'] = func_6968
mod = relay.transform.InferType()(mod)
mutated_mod['func_6968'] = func_6968
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6968_call = mutated_mod.get_global_var('func_6968')
call_6969 = func_6968_call()
output = call_6969
func_6970 = relay.Function([], output)
mutated_mod['func_6970'] = func_6970
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5517_call = mod.get_global_var('func_5517')
func_5519_call = mutated_mod.get_global_var('func_5519')
call_6991 = relay.TupleGetItem(func_5517_call(), 0)
call_6992 = relay.TupleGetItem(func_5519_call(), 0)
output = call_6991
output2 = call_6992
func_6995 = relay.Function([], output)
mod['func_6995'] = func_6995
mod = relay.transform.InferType()(mod)
mutated_mod['func_6995'] = func_6995
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6995_call = mutated_mod.get_global_var('func_6995')
call_6996 = func_6995_call()
output = call_6996
func_6997 = relay.Function([], output)
mutated_mod['func_6997'] = func_6997
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5895_call = mod.get_global_var('func_5895')
func_5896_call = mutated_mod.get_global_var('func_5896')
call_7030 = relay.TupleGetItem(func_5895_call(), 0)
call_7031 = relay.TupleGetItem(func_5896_call(), 0)
func_2323_call = mod.get_global_var('func_2323')
func_2325_call = mutated_mod.get_global_var('func_2325')
var_7046 = relay.var("var_7046", dtype = "float64", shape = (693, 1))#candidate|7046|(693, 1)|var|float64
call_7045 = relay.TupleGetItem(func_2323_call(relay.reshape(var_7046.astype('float64'), [9, 7, 11])), 0)
call_7047 = relay.TupleGetItem(func_2325_call(relay.reshape(var_7046.astype('float64'), [9, 7, 11])), 0)
func_6192_call = mod.get_global_var('func_6192')
func_6193_call = mutated_mod.get_global_var('func_6193')
call_7048 = func_6192_call()
call_7049 = func_6192_call()
uop_7051 = relay.sqrt(call_7045.astype('float32')) # shape=(9, 7, 11)
uop_7053 = relay.sqrt(call_7047.astype('float32')) # shape=(9, 7, 11)
output = relay.Tuple([call_7030,var_7046,call_7048,uop_7051,])
output2 = relay.Tuple([call_7031,var_7046,call_7049,uop_7053,])
func_7061 = relay.Function([var_7046,], output)
mod['func_7061'] = func_7061
mod = relay.transform.InferType()(mod)
var_7062 = relay.var("var_7062", dtype = "float64", shape = (693, 1))#candidate|7062|(693, 1)|var|float64
output = func_7061(var_7062)
func_7063 = relay.Function([var_7062], output)
mutated_mod['func_7063'] = func_7063
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6736_call = mod.get_global_var('func_6736')
func_6737_call = mutated_mod.get_global_var('func_6737')
call_7112 = relay.TupleGetItem(func_6736_call(), 2)
call_7113 = relay.TupleGetItem(func_6737_call(), 2)
var_7123 = relay.var("var_7123", dtype = "int32", shape = (693,))#candidate|7123|(693,)|var|int32
bop_7124 = relay.logical_or(call_7112.astype('bool'), relay.reshape(var_7123.astype('bool'), relay.shape_of(call_7112))) # shape=(693,)
bop_7127 = relay.logical_or(call_7113.astype('bool'), relay.reshape(var_7123.astype('bool'), relay.shape_of(call_7113))) # shape=(693,)
output = relay.Tuple([bop_7124,])
output2 = relay.Tuple([bop_7127,])
func_7137 = relay.Function([var_7123,], output)
mod['func_7137'] = func_7137
mod = relay.transform.InferType()(mod)
var_7138 = relay.var("var_7138", dtype = "int32", shape = (693,))#candidate|7138|(693,)|var|int32
output = func_7137(var_7138)
func_7139 = relay.Function([var_7138], output)
mutated_mod['func_7139'] = func_7139
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5895_call = mod.get_global_var('func_5895')
func_5896_call = mutated_mod.get_global_var('func_5896')
call_7201 = relay.TupleGetItem(func_5895_call(), 0)
call_7202 = relay.TupleGetItem(func_5896_call(), 0)
func_5389_call = mod.get_global_var('func_5389')
func_5390_call = mutated_mod.get_global_var('func_5390')
call_7206 = relay.TupleGetItem(func_5389_call(), 0)
call_7207 = relay.TupleGetItem(func_5390_call(), 0)
func_5125_call = mod.get_global_var('func_5125')
func_5129_call = mutated_mod.get_global_var('func_5129')
var_7220 = relay.var("var_7220", dtype = "uint64", shape = ())#candidate|7220|()|var|uint64
var_7221 = relay.var("var_7221", dtype = "uint64", shape = (315,))#candidate|7221|(315,)|var|uint64
call_7219 = func_5125_call(relay.reshape(var_7220.astype('uint64'), []), relay.reshape(var_7221.astype('uint64'), [15, 3, 7]), )
call_7222 = func_5125_call(relay.reshape(var_7220.astype('uint64'), []), relay.reshape(var_7221.astype('uint64'), [15, 3, 7]), )
func_5215_call = mod.get_global_var('func_5215')
func_5217_call = mutated_mod.get_global_var('func_5217')
call_7225 = relay.TupleGetItem(func_5215_call(), 1)
call_7226 = relay.TupleGetItem(func_5217_call(), 1)
output = relay.Tuple([call_7201,call_7206,call_7219,var_7220,var_7221,call_7225,])
output2 = relay.Tuple([call_7202,call_7207,call_7222,var_7220,var_7221,call_7226,])
func_7241 = relay.Function([var_7220,var_7221,], output)
mod['func_7241'] = func_7241
mod = relay.transform.InferType()(mod)
var_7242 = relay.var("var_7242", dtype = "uint64", shape = ())#candidate|7242|()|var|uint64
var_7243 = relay.var("var_7243", dtype = "uint64", shape = (315,))#candidate|7243|(315,)|var|uint64
output = func_7241(var_7242,var_7243,)
func_7244 = relay.Function([var_7242,var_7243,], output)
mutated_mod['func_7244'] = func_7244
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5389_call = mod.get_global_var('func_5389')
func_5390_call = mutated_mod.get_global_var('func_5390')
call_7259 = relay.TupleGetItem(func_5389_call(), 0)
call_7260 = relay.TupleGetItem(func_5390_call(), 0)
var_7266 = relay.var("var_7266", dtype = "float32", shape = (7, 7, 6))#candidate|7266|(7, 7, 6)|var|float32
bop_7267 = relay.mod(call_7259.astype('float32'), relay.reshape(var_7266.astype('float32'), relay.shape_of(call_7259))) # shape=(7, 7, 6)
bop_7270 = relay.mod(call_7260.astype('float32'), relay.reshape(var_7266.astype('float32'), relay.shape_of(call_7260))) # shape=(7, 7, 6)
output = bop_7267
output2 = bop_7270
func_7271 = relay.Function([var_7266,], output)
mod['func_7271'] = func_7271
mod = relay.transform.InferType()(mod)
var_7272 = relay.var("var_7272", dtype = "float32", shape = (7, 7, 6))#candidate|7272|(7, 7, 6)|var|float32
output = func_7271(var_7272)
func_7273 = relay.Function([var_7272], output)
mutated_mod['func_7273'] = func_7273
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5389_call = mod.get_global_var('func_5389')
func_5390_call = mutated_mod.get_global_var('func_5390')
call_7328 = relay.TupleGetItem(func_5389_call(), 0)
call_7329 = relay.TupleGetItem(func_5390_call(), 0)
func_6087_call = mod.get_global_var('func_6087')
func_6088_call = mutated_mod.get_global_var('func_6088')
call_7339 = func_6087_call()
call_7340 = func_6087_call()
const_7344 = relay.const([[[-1.567269,4.332622,8.647686,5.977126,1.578105,-4.481704],[-1.255448,9.030224,-0.234096,2.609752,3.261667,-7.849744],[-0.297172,-1.932369,8.380397,5.739596,0.601200,5.162515],[6.757397,7.417281,-1.379091,-4.949393,-8.460392,-1.770919],[-6.127995,-0.538251,8.464891,5.861882,-3.222253,-3.488452],[0.600979,7.227968,-1.845636,-4.632845,7.129672,-5.866705],[3.214839,8.918373,0.371738,-9.433534,6.875154,6.916408]],[[-5.330880,-7.214634,-7.843938,-8.907950,-3.628603,-3.916490],[9.433835,-6.859932,0.890407,-0.225787,-0.199898,-1.133101],[9.081816,6.350815,3.854095,-9.325054,4.129419,-9.163213],[3.948795,5.506611,-4.631619,-3.070789,-0.510675,-1.932564],[8.774509,-0.411381,-0.124682,1.935641,-0.425221,-8.236236],[-7.316412,6.771618,1.103849,6.187057,-0.424176,-4.307856],[5.189709,-4.537796,-9.286483,6.520075,-9.834476,5.833468]],[[-0.744358,-7.234222,5.451521,-3.862133,2.181642,8.700163],[2.374445,1.970423,3.619507,-3.907552,-3.891309,2.791606],[3.731860,3.602311,-4.237410,4.891006,2.547303,1.819569],[-1.877532,-5.695882,0.119556,1.963583,0.689961,6.566192],[-9.624590,7.459753,-2.475919,7.709652,5.684312,7.193089],[7.567123,-4.255244,7.731325,7.045889,3.768212,4.760173],[5.457988,4.606953,-4.840682,-3.633890,-6.841128,0.929442]],[[-7.513455,-6.409546,0.473076,0.548065,-0.562192,-3.405017],[-4.898229,-7.993879,8.071145,-3.599352,-6.180261,1.904935],[-0.477570,2.047657,0.764405,-5.608263,-2.384691,2.707668],[-9.529448,-6.147146,-5.013006,-3.436447,5.308244,-1.765727],[1.410700,4.364800,-2.692247,-8.142827,-1.008582,6.293447],[-2.950752,5.756024,9.361852,3.276600,-8.344374,-0.312967],[-2.668816,8.159556,2.515837,-5.760549,-1.281485,-8.287961]],[[3.043148,-3.483295,1.608960,7.915363,8.973274,-9.653223],[-8.978812,-9.181961,1.342406,3.959801,-9.201446,6.042822],[2.930815,-3.952813,-5.468371,-8.762115,0.354513,4.405036],[5.747040,-0.284372,-4.154094,5.972626,-7.892465,3.786829],[-7.883630,4.359426,1.603067,6.834497,1.583035,-7.722418],[-4.646125,6.394193,8.712019,-6.905018,3.835795,6.224328],[9.895372,-1.828498,5.314051,-1.416951,4.619742,-0.506203]],[[-9.909902,5.393632,7.589197,9.328257,-1.243462,7.808026],[-2.108174,-7.144708,-6.079028,9.167783,-3.080779,-2.520956],[2.303286,-4.557702,-6.636340,1.389931,-1.293626,-8.251201],[-7.760024,2.361176,-8.015419,8.675182,2.222128,6.769267],[4.099272,2.487519,-9.923384,6.803563,-0.844678,-3.923192],[-7.711965,-4.069542,-2.368732,-3.299985,-5.623639,-6.159352],[-2.409147,8.541438,8.691670,-1.707659,0.410307,5.327446]],[[1.297988,3.087016,-9.107294,-9.254579,1.418661,3.048765],[-3.758316,7.266191,6.510945,5.191678,8.527522,0.212343],[1.787678,5.718089,-4.052119,2.394105,-0.044084,4.927266],[-8.407771,4.546561,-4.532215,-8.714249,7.452642,-5.881067],[0.733373,-7.843745,-4.171520,0.503038,6.465463,4.918283],[0.904221,7.433212,9.085963,-9.944188,8.317359,-2.708850],[-1.475680,-7.915343,-9.130158,8.022568,-5.221840,-6.997326]]], dtype = "float32")#candidate|7344|(7, 7, 6)|const|float32
bop_7345 = relay.multiply(call_7328.astype('uint8'), relay.reshape(const_7344.astype('uint8'), relay.shape_of(call_7328))) # shape=(7, 7, 6)
bop_7348 = relay.multiply(call_7329.astype('uint8'), relay.reshape(const_7344.astype('uint8'), relay.shape_of(call_7329))) # shape=(7, 7, 6)
func_3956_call = mod.get_global_var('func_3956')
func_3960_call = mutated_mod.get_global_var('func_3960')
var_7352 = relay.var("var_7352", dtype = "float64", shape = (2535,))#candidate|7352|(2535,)|var|float64
call_7351 = func_3956_call(relay.reshape(var_7352.astype('float64'), [13, 15, 13]), relay.reshape(var_7352.astype('float64'), [13, 15, 13]), )
call_7353 = func_3956_call(relay.reshape(var_7352.astype('float64'), [13, 15, 13]), relay.reshape(var_7352.astype('float64'), [13, 15, 13]), )
output = relay.Tuple([call_7339,bop_7345,call_7351,var_7352,])
output2 = relay.Tuple([call_7340,bop_7348,call_7353,var_7352,])
func_7360 = relay.Function([var_7352,], output)
mod['func_7360'] = func_7360
mod = relay.transform.InferType()(mod)
mutated_mod['func_7360'] = func_7360
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7361 = relay.var("var_7361", dtype = "float64", shape = (2535,))#candidate|7361|(2535,)|var|float64
func_7360_call = mutated_mod.get_global_var('func_7360')
call_7362 = func_7360_call(var_7361)
output = call_7362
func_7363 = relay.Function([var_7361], output)
mutated_mod['func_7363'] = func_7363
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5696_call = mod.get_global_var('func_5696')
func_5698_call = mutated_mod.get_global_var('func_5698')
call_7393 = func_5696_call()
call_7394 = func_5696_call()
func_357_call = mod.get_global_var('func_357')
func_360_call = mutated_mod.get_global_var('func_360')
var_7421 = relay.var("var_7421", dtype = "float32", shape = (30, 6))#candidate|7421|(30, 6)|var|float32
call_7420 = relay.TupleGetItem(func_357_call(relay.reshape(var_7421.astype('float32'), [3, 4, 15])), 0)
call_7422 = relay.TupleGetItem(func_360_call(relay.reshape(var_7421.astype('float32'), [3, 4, 15])), 0)
output = relay.Tuple([call_7393,call_7420,var_7421,])
output2 = relay.Tuple([call_7394,call_7422,var_7421,])
func_7425 = relay.Function([var_7421,], output)
mod['func_7425'] = func_7425
mod = relay.transform.InferType()(mod)
mutated_mod['func_7425'] = func_7425
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7426 = relay.var("var_7426", dtype = "float32", shape = (30, 6))#candidate|7426|(30, 6)|var|float32
func_7425_call = mutated_mod.get_global_var('func_7425')
call_7427 = func_7425_call(var_7426)
output = call_7427
func_7428 = relay.Function([var_7426], output)
mutated_mod['func_7428'] = func_7428
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6260_call = mod.get_global_var('func_6260')
func_6262_call = mutated_mod.get_global_var('func_6262')
call_7493 = relay.TupleGetItem(func_6260_call(), 0)
call_7494 = relay.TupleGetItem(func_6262_call(), 0)
output = relay.Tuple([call_7493,])
output2 = relay.Tuple([call_7494,])
func_7495 = relay.Function([], output)
mod['func_7495'] = func_7495
mod = relay.transform.InferType()(mod)
output = func_7495()
func_7496 = relay.Function([], output)
mutated_mod['func_7496'] = func_7496
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6639_call = mod.get_global_var('func_6639')
func_6640_call = mutated_mod.get_global_var('func_6640')
call_7502 = relay.TupleGetItem(func_6639_call(), 0)
call_7503 = relay.TupleGetItem(func_6640_call(), 0)
func_5517_call = mod.get_global_var('func_5517')
func_5519_call = mutated_mod.get_global_var('func_5519')
call_7515 = relay.TupleGetItem(func_5517_call(), 0)
call_7516 = relay.TupleGetItem(func_5519_call(), 0)
func_6995_call = mod.get_global_var('func_6995')
func_6997_call = mutated_mod.get_global_var('func_6997')
call_7534 = func_6995_call()
call_7535 = func_6995_call()
uop_7538 = relay.acos(call_7502.astype('float32')) # shape=(13, 12, 10)
uop_7540 = relay.acos(call_7503.astype('float32')) # shape=(13, 12, 10)
func_6995_call = mod.get_global_var('func_6995')
func_6997_call = mutated_mod.get_global_var('func_6997')
call_7555 = func_6995_call()
call_7556 = func_6995_call()
output = relay.Tuple([call_7515,call_7534,uop_7538,call_7555,])
output2 = relay.Tuple([call_7516,call_7535,uop_7540,call_7556,])
func_7561 = relay.Function([], output)
mod['func_7561'] = func_7561
mod = relay.transform.InferType()(mod)
mutated_mod['func_7561'] = func_7561
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7561_call = mutated_mod.get_global_var('func_7561')
call_7562 = func_7561_call()
output = call_7562
func_7563 = relay.Function([], output)
mutated_mod['func_7563'] = func_7563
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7495_call = mod.get_global_var('func_7495')
func_7496_call = mutated_mod.get_global_var('func_7496')
call_7627 = relay.TupleGetItem(func_7495_call(), 0)
call_7628 = relay.TupleGetItem(func_7496_call(), 0)
func_5628_call = mod.get_global_var('func_5628')
func_5631_call = mutated_mod.get_global_var('func_5631')
var_7640 = relay.var("var_7640", dtype = "float32", shape = (180,))#candidate|7640|(180,)|var|float32
call_7639 = relay.TupleGetItem(func_5628_call(relay.reshape(var_7640.astype('float32'), [3, 4, 15])), 0)
call_7641 = relay.TupleGetItem(func_5631_call(relay.reshape(var_7640.astype('float32'), [3, 4, 15])), 0)
func_7495_call = mod.get_global_var('func_7495')
func_7496_call = mutated_mod.get_global_var('func_7496')
call_7653 = relay.TupleGetItem(func_7495_call(), 0)
call_7654 = relay.TupleGetItem(func_7496_call(), 0)
output = relay.Tuple([call_7627,call_7639,var_7640,call_7653,])
output2 = relay.Tuple([call_7628,call_7641,var_7640,call_7654,])
func_7673 = relay.Function([var_7640,], output)
mod['func_7673'] = func_7673
mod = relay.transform.InferType()(mod)
var_7674 = relay.var("var_7674", dtype = "float32", shape = (180,))#candidate|7674|(180,)|var|float32
output = func_7673(var_7674)
func_7675 = relay.Function([var_7674], output)
mutated_mod['func_7675'] = func_7675
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7705 = relay.const([[[6.948040,-3.690748,4.134163,-2.515261],[3.037891,5.701109,6.664049,-5.240829]],[[3.369857,9.099566,0.144297,-0.051743],[8.994739,-0.518098,7.405931,-8.617751]]], dtype = "float64")#candidate|7705|(2, 2, 4)|const|float64
uop_7706 = relay.tan(const_7705.astype('float64')) # shape=(2, 2, 4)
func_5496_call = mod.get_global_var('func_5496')
func_5498_call = mutated_mod.get_global_var('func_5498')
call_7715 = func_5496_call()
call_7716 = func_5496_call()
output = relay.Tuple([uop_7706,call_7715,])
output2 = relay.Tuple([uop_7706,call_7716,])
func_7723 = relay.Function([], output)
mod['func_7723'] = func_7723
mod = relay.transform.InferType()(mod)
mutated_mod['func_7723'] = func_7723
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7723_call = mutated_mod.get_global_var('func_7723')
call_7724 = func_7723_call()
output = call_7724
func_7725 = relay.Function([], output)
mutated_mod['func_7725'] = func_7725
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6553_call = mod.get_global_var('func_6553')
func_6555_call = mutated_mod.get_global_var('func_6555')
call_7843 = relay.TupleGetItem(func_6553_call(), 0)
call_7844 = relay.TupleGetItem(func_6555_call(), 0)
output = call_7843
output2 = call_7844
func_7851 = relay.Function([], output)
mod['func_7851'] = func_7851
mod = relay.transform.InferType()(mod)
mutated_mod['func_7851'] = func_7851
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7851_call = mutated_mod.get_global_var('func_7851')
call_7852 = func_7851_call()
output = call_7852
func_7853 = relay.Function([], output)
mutated_mod['func_7853'] = func_7853
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5903_call = mod.get_global_var('func_5903')
func_5905_call = mutated_mod.get_global_var('func_5905')
call_7932 = relay.TupleGetItem(func_5903_call(), 0)
call_7933 = relay.TupleGetItem(func_5905_call(), 0)
func_5903_call = mod.get_global_var('func_5903')
func_5905_call = mutated_mod.get_global_var('func_5905')
call_7936 = relay.TupleGetItem(func_5903_call(), 0)
call_7937 = relay.TupleGetItem(func_5905_call(), 0)
func_5389_call = mod.get_global_var('func_5389')
func_5390_call = mutated_mod.get_global_var('func_5390')
call_7941 = relay.TupleGetItem(func_5389_call(), 0)
call_7942 = relay.TupleGetItem(func_5390_call(), 0)
func_5323_call = mod.get_global_var('func_5323')
func_5326_call = mutated_mod.get_global_var('func_5326')
const_7959 = relay.const([[8.802191,3.350704,1.754397,-6.125729,-3.413432,6.352943,-6.881770,-4.651184,-4.262766,9.628647,-2.419468,1.986005,6.453923,-1.875126,5.643660,4.008871,6.720738,6.429594,-8.946460,7.674415,3.807642,5.324450,9.501626,4.805250,-3.154024,-3.698576,-2.585006,-9.615870,-0.770391,-7.984329,-3.614282,-7.080201,-4.581843,-6.108926,-3.483513,8.932839,-5.701752,0.818986,-5.546189,7.996688,5.079237,-1.631245,9.137455,2.285223,6.357144,8.482897,6.492336,-5.883972,2.033750,-9.323108,-5.231432,-0.581610,5.343588,-2.608285,-7.995697,-6.502497,4.427524,3.783720,9.634593,1.974918,-5.546356,-3.638491,-4.672708,6.645986,0.622115,4.404605,6.539673,1.692533,-7.756959,1.713701,2.534420,-2.221222,-5.101702,-5.365983,6.379735,-9.483928,-2.531491,9.946652,8.300404,0.593237,2.595934,-4.664429,-6.444906,6.806725,-8.890268,5.172474,-8.446418,-2.971015,6.794164,0.642528,-7.404618,7.649246,-0.435836,-6.916623,2.320396,0.218017,-8.843313,-5.059991,3.834998,8.173055,-0.010272,9.551157,0.421745,6.608575,-0.867643,1.245896,-5.830412,-9.172220,7.665099,8.055470,-6.430373,8.454739,-8.167350,0.049541,1.594949,7.965903,1.045302,0.807436,1.302305,7.792027,1.861620,-1.753960,1.495059,-5.004423,0.362470,-3.648229,-8.196929,0.286535,5.270712,-8.414019],[0.950447,-6.927531,5.682691,4.432017,-4.589215,-2.029031,6.778316,8.115731,4.676336,-9.971378,2.415716,-8.162408,-9.591504,1.573820,-0.783025,6.984236,4.012082,-7.279274,8.593187,3.434470,4.158808,6.686856,5.052311,8.825918,-3.654306,3.906850,-9.524656,-4.098659,8.033637,-4.901320,4.493272,-9.223232,7.935520,5.197071,-1.433989,-3.780839,3.944121,0.507120,6.826542,1.954300,-0.440990,7.735498,7.081190,7.227660,4.972252,-2.956549,5.516630,-3.837391,-7.505176,9.425480,-3.131641,-5.174376,8.619077,-3.093468,-4.767250,6.464612,6.122986,-3.085049,-8.054261,6.434086,9.312603,-4.809852,-0.397082,-7.859874,7.379838,-1.503387,0.355511,0.590750,-8.384792,8.402744,6.092755,5.849506,-0.484963,3.140679,3.043291,-8.224718,1.501397,-2.526345,0.077149,-3.382412,-1.878796,9.834871,3.917485,0.279103,-6.310477,-4.295819,8.436088,-3.234259,7.090961,-6.908370,6.221396,-0.233305,5.118462,-3.220580,3.604209,7.588717,8.442996,0.253453,4.951675,-7.615508,-5.254519,-1.734557,-4.045799,9.925264,-9.306940,3.809191,-4.228940,-7.406646,-0.957082,2.410905,5.527795,4.667953,9.076289,5.104269,0.092326,-0.376317,3.756043,7.314399,-1.638331,0.612998,-6.722237,-5.355361,-7.078697,3.200096,8.411956,-2.697594,1.309101,-6.528897,7.686495,-8.919027],[2.970202,-2.648423,2.836693,5.430361,-8.127983,-8.003752,7.387923,2.960289,-1.519525,-0.740762,4.605273,-4.344273,-2.737081,6.288532,2.023392,2.294647,4.253375,3.782908,7.129373,-9.525543,8.116327,3.366759,2.307914,6.799044,1.925860,3.792102,-1.912562,1.884525,-5.557509,-5.042759,-2.668096,8.416836,6.927375,-6.699255,9.024896,-2.768431,-6.082341,4.500869,2.061760,0.640006,-1.898402,0.570368,-4.498769,0.109812,-9.287133,-4.195919,6.343128,-6.834244,-7.989092,-3.262713,2.088536,0.118577,-2.343519,1.722993,0.440476,-8.118292,6.966158,-6.109147,-9.818626,4.980294,-4.501693,-7.671578,4.028785,-3.682935,9.634685,7.017105,-5.553110,-5.635229,4.169545,-0.186288,-1.862330,-5.696580,-5.250681,-5.779338,-9.725088,8.673370,4.492706,1.748365,-3.977088,9.754540,-5.323831,-5.047008,0.923502,2.905497,-4.985741,9.927146,-4.523754,5.670596,-1.705199,9.426969,3.099714,6.820793,-0.568630,1.959917,1.021297,0.002996,8.095412,-9.490988,-7.601620,8.329920,3.130688,-4.341113,-8.846353,-7.368877,4.652521,5.941786,0.417628,5.309863,0.419310,-1.051286,3.507738,-0.854930,-6.860240,2.877663,-0.532436,0.756420,0.354305,1.604492,0.653878,0.237511,-5.254457,2.830748,9.585752,3.323683,8.136149,2.364328,2.879411,1.967367,-8.799682,6.706570],[4.074627,-4.540971,-5.179802,-3.008406,-2.925692,-9.348159,4.262406,-1.200509,-5.495048,5.706558,3.939260,0.935950,0.361279,-9.035775,1.471165,-8.792695,5.340317,-6.722370,0.046377,5.448224,-1.946164,-1.831139,-0.382404,-9.848005,-8.292271,-3.306349,6.391859,5.024276,9.737477,-1.593652,2.929425,6.383687,-0.573107,-2.126546,5.733955,8.786293,2.567088,8.416122,-8.096741,-7.077748,9.546318,-7.754187,-9.198019,1.829794,-1.571239,5.547776,0.831724,-3.497568,-2.732653,3.490610,-5.220916,2.447210,-4.361046,0.909749,-5.631800,9.010114,2.562575,-6.827264,5.059164,8.197002,-0.485743,7.511047,4.796850,2.069331,-8.993316,0.749090,0.568153,-6.805911,1.678322,-5.655567,-4.909117,-9.732381,3.452890,5.399098,-5.244518,-4.966420,3.487106,-6.239732,8.222722,-3.722560,-2.072090,5.929629,-7.197563,9.696698,5.994232,-5.672772,-9.540071,8.465899,7.722747,-7.846166,3.124684,-3.520662,0.420429,-1.914941,-8.261757,-2.397656,-5.913719,-8.473898,-6.152154,9.943891,7.620580,1.569813,-9.336976,-3.543355,8.473984,3.288616,5.738393,-7.816250,9.452592,-4.301065,2.717900,-0.689628,-7.261849,2.762236,0.107171,-9.978072,-5.809053,-8.251991,5.300135,-9.243769,4.795606,3.680398,-0.582426,7.153818,-9.967016,9.407656,3.292922,-3.100867,0.298394,-2.568635],[-3.025903,9.071218,-1.859669,0.661794,-6.201766,-1.579234,8.797687,8.230083,2.132697,6.731308,-9.373462,-6.106714,8.929240,9.535499,-8.118134,3.631758,-6.055803,4.016848,-5.078663,-5.888699,-9.968857,-8.901064,0.793495,9.235339,6.038849,-6.947064,-4.953306,9.892117,0.285687,-3.843230,-0.898973,-0.079928,-4.654458,3.044567,-1.725148,-9.394611,-5.730553,5.567525,-0.818610,0.770011,6.629002,0.973890,-0.162619,8.111386,2.198608,6.292873,4.772533,-6.094578,1.990542,-9.916521,-1.546862,-9.024966,-5.002354,-8.228692,4.637603,-2.613282,3.686934,-0.953195,-0.687912,-0.136135,2.117585,0.475652,5.093186,-4.988638,7.105601,6.962537,8.372884,-1.644007,9.511311,-3.463367,-2.281030,6.100797,-8.891522,1.702879,-0.683869,-4.897864,9.458786,-8.700637,-4.836775,9.848070,-2.952578,6.710212,6.631408,5.035476,-5.570322,8.218882,-9.086449,-1.151247,-6.510970,0.702940,3.899359,-9.196569,3.519785,-4.908009,1.093279,8.428520,-4.035020,-3.200969,-9.455823,-6.955049,5.296834,-1.684413,-7.862505,5.576119,-0.134047,3.258118,-3.140816,7.686063,1.318965,5.454402,6.236744,-9.381542,7.449317,6.370527,-7.682156,-0.485572,7.979116,0.360280,-0.838665,-6.319244,8.250129,-2.078279,2.672006,3.601501,8.572816,-9.950510,8.700092,-2.549281,6.394057,-4.498281],[6.687147,2.321981,8.825695,6.927116,2.467895,8.914534,7.412317,6.592460,0.135532,6.057460,5.917421,3.386946,-6.016817,-3.017865,-3.288459,7.688732,5.494529,-1.159564,3.476329,-5.848173,-3.431522,8.138311,-8.352897,-4.449195,8.379343,-5.043876,2.550874,5.165484,-0.203654,1.804756,1.671579,-1.778927,-2.758230,8.628498,-4.442814,-4.078220,7.396390,9.062740,-0.127054,0.809733,4.917318,3.354627,-7.244533,6.238565,-0.550411,9.386119,2.202720,-2.648605,-7.718117,-3.569193,-0.971753,8.048535,-4.503790,4.370416,7.341201,8.334558,-1.094980,9.223927,9.270208,3.266868,-7.292637,9.252669,3.667956,5.982247,-0.680219,-2.451224,-8.603312,-2.701684,-5.096656,-3.958031,6.967454,2.931921,-5.831249,-6.717039,2.399480,1.841343,-4.077312,5.101971,-2.742605,4.254461,-8.271917,3.204700,-0.925494,-6.408348,4.567082,-9.191445,-2.619359,9.759905,-1.868609,-1.250850,1.122826,1.472417,5.216782,7.507960,9.209573,-4.042808,2.104708,5.709488,0.274831,-4.102326,-4.606148,7.105136,-1.814333,1.489682,-0.767883,-6.519535,1.772910,8.835230,5.840277,-4.911478,-5.039756,-0.227352,4.590034,5.100948,3.045119,6.313472,-6.512675,-4.864999,0.887721,4.746828,-6.768400,-6.540267,-0.948520,-1.336512,-6.999646,-8.666959,5.493664,-1.269126,-6.855308,8.786438],[-1.666141,8.934873,-1.662081,9.234357,2.635501,9.783417,2.449310,6.757357,-3.663359,8.903892,8.392614,5.790489,-9.448062,0.218430,6.065835,0.242840,7.821273,-5.241231,-3.472075,-4.198298,-2.793955,8.923333,3.143896,5.258327,-8.279781,-4.785452,0.994712,-9.416434,-6.896556,-9.515891,9.956395,0.648421,5.563994,-8.231052,6.893079,8.661023,-9.454630,6.503825,-2.849958,7.681368,8.253381,-3.729210,8.868460,3.394494,-9.648149,7.671523,7.563972,-3.034673,-2.186817,-4.165785,3.998220,-3.128793,4.977591,9.131971,-0.461515,-4.057550,8.730255,-7.486284,-0.995158,-1.145870,-5.308743,-7.805587,-0.293258,-3.237607,6.536422,-2.307347,-3.762160,-2.161317,7.133529,7.707493,5.237836,3.410867,-6.462216,7.999738,7.078255,2.306232,-3.571770,2.068779,0.142638,4.093861,7.179411,7.595929,-6.488968,4.185121,-8.040105,-8.570586,-5.031959,-1.211852,1.271633,9.252139,2.341327,-7.124320,-7.369916,-6.707822,2.078009,-8.285345,6.627910,9.190817,-4.029027,6.527762,5.814623,-4.992260,-0.577121,6.358741,-0.208741,-9.158649,5.829827,6.890292,0.332422,6.738805,-1.739589,9.873533,-0.117068,4.624069,5.646748,0.338668,-8.513432,-2.661052,-8.599274,8.258446,0.908073,-3.568028,-3.615749,-5.407089,7.530113,8.750989,-1.489115,2.576991,8.433070,9.833980],[-3.927957,2.047226,-4.446182,0.109182,7.246738,1.261971,-9.922937,-8.124055,-9.882769,-5.072214,-7.565963,4.270563,-2.958596,9.965706,6.871589,-7.723169,5.663737,5.246281,-3.094321,-1.385015,1.965532,-3.578068,1.245952,-1.660567,3.333612,9.505779,-4.153721,-3.366131,-5.825782,-0.565545,-3.850948,4.084976,4.354766,9.150930,6.493109,5.346837,-9.111912,-6.391397,-1.609299,1.453212,-8.263796,-1.062950,7.749958,7.346803,-1.532536,4.508508,3.406984,2.025053,0.817343,-5.783145,-2.223365,9.329053,7.765432,6.290563,6.788427,7.090530,6.093030,-7.176190,4.388559,-3.558466,-2.170178,-0.436229,-3.932544,-4.271073,2.014191,-8.496409,-2.589062,-4.264271,-7.476311,-6.361838,-9.345052,3.277459,6.965608,-6.537138,3.508894,-2.147969,-9.422842,4.501354,-0.413091,2.712560,-3.631621,-5.473876,0.999867,-4.042924,-1.975987,8.478513,1.202709,-4.977321,2.989407,2.152050,-8.154878,-2.265044,-6.932579,3.317458,5.730668,-9.395493,6.927455,-4.350675,1.289117,-1.789142,5.713603,-3.163002,-2.169451,0.541345,9.763264,-1.117013,4.700037,8.076660,9.786180,-0.403593,3.077153,-5.132908,8.203667,0.827658,-0.232568,-8.226384,-7.570325,-2.742169,-6.606369,-2.872820,-2.375867,2.404076,8.280908,9.897227,9.004931,9.272662,4.322195,3.986527,-2.789900,2.553147],[-1.563924,8.491212,7.732763,4.560987,7.488241,0.556196,1.799850,3.958387,7.812324,3.251408,5.916290,7.078268,-8.221256,7.611217,-8.254864,2.491567,9.588963,4.732615,-3.808312,-7.688553,-4.637677,1.511122,-6.958078,-2.167211,-1.617639,-9.911899,-1.012413,-3.429519,3.488901,8.813770,-4.982555,-9.811956,7.466659,-4.935462,3.469740,-7.261635,7.037796,5.444660,-2.089338,2.852746,3.742849,-5.873524,-8.048407,-4.312218,0.208592,6.509652,2.755047,8.134379,9.705784,-3.334303,-1.248069,-7.943362,0.836579,4.647346,1.143755,-3.693154,-4.474775,-4.171324,5.902323,-1.460629,-8.402659,-7.288878,-6.153140,5.386833,-5.370609,-7.701397,-3.418246,-9.499038,-1.599468,9.423859,-0.850698,-4.973699,3.134039,2.050303,5.792272,2.848051,1.512399,8.705930,6.850392,3.975316,0.568339,-5.961449,-8.988045,7.301180,-8.129970,-5.168847,-9.508435,4.217546,1.026201,-3.930864,3.490870,5.835684,5.308150,-7.830370,7.168553,-6.845029,0.991028,-8.269171,3.126073,-5.173247,-8.484270,2.839176,3.578807,-4.961538,1.461272,5.957639,-4.641944,-8.007716,-8.149669,-6.636696,-1.783473,-1.022707,7.658884,-4.769655,-8.102720,-7.856363,5.834627,1.907502,6.877166,-2.967299,-1.366049,3.228503,-2.895764,-3.889006,-9.035871,-4.568517,-9.673483,-8.732101,4.476828,-0.554757],[3.435533,-5.122892,-1.605462,7.198372,-8.313948,1.166353,9.196369,5.179869,-4.519888,-2.261484,9.994620,3.704354,2.382152,0.420130,-2.576748,-0.624045,7.753379,6.497935,-5.363817,6.765170,-6.720357,6.284167,8.219621,4.659147,2.605159,-0.041489,-4.056731,-9.735831,8.834872,-8.950007,6.503760,2.833419,2.367611,5.682328,1.525872,-1.479770,0.766912,2.174346,6.810925,-8.068313,2.052762,6.800823,-8.079659,2.975161,3.447695,-1.755430,5.738535,3.168254,-5.437239,-7.776567,1.864340,9.598156,2.985318,2.712249,6.269758,7.672937,-5.781028,-0.668688,-7.868417,-6.654690,2.597199,-8.016230,-2.408995,7.452436,-2.371364,-8.818189,9.120564,-6.885556,5.737220,5.510066,0.267509,9.102528,0.774593,2.130617,6.049387,5.241311,-2.960032,7.724413,-2.586065,6.430361,8.799908,-0.597805,8.561248,5.625344,3.480523,8.380868,7.905599,-0.006063,-0.156346,-2.715288,-4.491073,-4.426082,4.609184,0.228105,-7.915417,6.250993,4.551473,-8.858325,-0.139970,9.153536,-6.583002,0.190188,1.497502,-9.103142,8.719611,1.873043,1.778589,-9.166892,-7.099415,-5.094224,-2.310356,-3.190109,5.851293,-0.203182,-5.002445,2.411034,-2.061314,-8.771895,1.458246,4.182688,8.695883,-7.674107,-3.514135,6.485509,-2.321454,4.767730,2.975722,-6.130423,8.104157,5.337369],[-6.344422,-6.222272,3.334827,-4.802979,-3.998984,5.170687,5.148520,-7.418455,-1.470222,-5.785098,0.629109,0.725720,4.970493,4.633763,-1.006868,-2.788004,-5.543319,7.610384,2.636038,-5.029716,4.939724,6.334126,7.468641,-2.279061,8.706392,-3.273656,-7.143932,-3.440864,-6.608461,-8.103947,-0.837350,9.305300,-0.593397,-9.379203,6.713259,5.915446,-3.882412,3.062142,-3.190064,0.927995,-9.953474,-9.173658,8.137433,-3.423789,-2.155572,-6.856525,0.685364,8.575376,-1.471144,4.684393,-3.209888,-0.436159,6.348244,-4.739672,2.209211,0.199007,-0.693739,-8.591100,-2.324376,5.840717,-1.858988,5.685702,3.855991,5.383445,-4.088207,2.582832,1.759950,1.332317,7.019672,-2.478984,4.789317,-2.256780,7.514695,8.073970,7.995442,-0.123626,-9.403494,5.673588,6.769245,0.425459,1.280237,-5.651863,-9.521607,8.791419,-7.623117,-0.627206,-2.750549,5.929584,-0.573947,8.149767,1.193712,6.499176,-7.397746,5.922053,4.375357,9.010426,-7.947647,5.659723,-1.878409,-8.328794,-2.280305,-6.835812,-6.864352,-6.091614,5.967432,-7.649927,6.577409,-9.999214,0.213423,9.057125,2.858952,4.156910,9.048400,-4.210654,-3.459355,-6.373056,-7.816104,9.342990,-3.268789,4.653014,4.225982,-2.917744,0.875319,-2.615301,-3.193286,2.485838,3.790681,1.596375,8.603159,-9.004506],[4.380820,-4.503482,1.132289,-9.384313,5.112673,4.920747,3.165908,2.708187,9.757971,9.827985,-8.633543,0.556006,-0.255792,-5.768427,-8.593298,0.915022,5.221472,3.666486,2.555149,-7.661007,6.174606,6.260868,3.522255,9.265871,4.259872,-4.089126,1.272158,0.770084,7.029721,6.332729,-4.899952,7.128564,-2.651320,-4.874931,-8.526744,-1.644783,3.115674,-7.854623,3.403473,6.561678,1.710483,-0.539536,8.653768,-8.758783,8.623680,-2.562285,-5.580347,8.468727,2.834517,-7.287951,-1.568470,4.140023,-5.270023,-7.854579,-0.524825,-7.942680,8.903250,-6.979958,-0.267695,9.288472,5.268002,5.263066,7.539174,-8.311186,8.209984,-3.159503,-6.065733,4.705626,-4.335943,-9.438482,0.858257,-5.072186,9.491068,1.359608,8.029510,6.013963,-5.352908,-5.519988,7.446482,-4.079955,5.065079,-6.471086,0.947717,-1.203750,3.689106,-1.251715,-6.414717,4.701522,3.607586,9.139537,-6.374345,1.246282,-6.628982,-0.109489,3.377333,-6.679871,-8.565628,-8.120377,-8.761472,0.338091,7.212973,-3.671084,-4.031445,9.276858,-0.003924,-3.165805,0.875143,6.723796,4.935846,1.133979,8.461896,4.761169,-3.682276,2.547276,-1.939752,-0.662694,-7.296671,4.852749,-6.846866,-6.801157,-8.387773,3.789559,2.442307,8.953602,9.565875,6.537366,-1.237041,-4.519989,-8.677713,3.479394]], dtype = "float32")#candidate|7959|(12, 130)|const|float32
var_7960 = relay.var("var_7960", dtype = "uint64", shape = (5, 63))#candidate|7960|(5, 63)|var|uint64
call_7958 = relay.TupleGetItem(func_5323_call(relay.reshape(const_7959.astype('float32'), [13, 12, 10]), relay.reshape(var_7960.astype('uint64'), [315,]), ), 5)
call_7961 = relay.TupleGetItem(func_5326_call(relay.reshape(const_7959.astype('float32'), [13, 12, 10]), relay.reshape(var_7960.astype('uint64'), [315,]), ), 5)
bop_7964 = relay.greater(const_7959.astype('bool'), relay.reshape(call_7958.astype('bool'), relay.shape_of(const_7959))) # shape=(12, 130)
bop_7967 = relay.greater(const_7959.astype('bool'), relay.reshape(call_7961.astype('bool'), relay.shape_of(const_7959))) # shape=(12, 130)
uop_7970 = relay.atanh(bop_7964.astype('float32')) # shape=(12, 130)
uop_7972 = relay.atanh(bop_7967.astype('float32')) # shape=(12, 130)
output = relay.Tuple([call_7932,call_7936,call_7941,var_7960,uop_7970,])
output2 = relay.Tuple([call_7933,call_7937,call_7942,var_7960,uop_7972,])
func_7986 = relay.Function([var_7960,], output)
mod['func_7986'] = func_7986
mod = relay.transform.InferType()(mod)
var_7987 = relay.var("var_7987", dtype = "uint64", shape = (5, 63))#candidate|7987|(5, 63)|var|uint64
output = func_7986(var_7987)
func_7988 = relay.Function([var_7987], output)
mutated_mod['func_7988'] = func_7988
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6144_call = mod.get_global_var('func_6144')
func_6145_call = mutated_mod.get_global_var('func_6145')
call_8027 = func_6144_call()
call_8028 = func_6144_call()
func_6943_call = mod.get_global_var('func_6943')
func_6945_call = mutated_mod.get_global_var('func_6945')
call_8034 = relay.TupleGetItem(func_6943_call(), 0)
call_8035 = relay.TupleGetItem(func_6945_call(), 0)
output = relay.Tuple([call_8027,call_8034,])
output2 = relay.Tuple([call_8028,call_8035,])
func_8036 = relay.Function([], output)
mod['func_8036'] = func_8036
mod = relay.transform.InferType()(mod)
mutated_mod['func_8036'] = func_8036
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8036_call = mutated_mod.get_global_var('func_8036')
call_8037 = func_8036_call()
output = call_8037
func_8038 = relay.Function([], output)
mutated_mod['func_8038'] = func_8038
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6540_call = mod.get_global_var('func_6540')
func_6541_call = mutated_mod.get_global_var('func_6541')
call_8171 = relay.TupleGetItem(func_6540_call(), 0)
call_8172 = relay.TupleGetItem(func_6541_call(), 0)
func_114_call = mod.get_global_var('func_114')
func_117_call = mutated_mod.get_global_var('func_117')
var_8188 = relay.var("var_8188", dtype = "float32", shape = (200,))#candidate|8188|(200,)|var|float32
call_8187 = relay.TupleGetItem(func_114_call(relay.reshape(var_8188.astype('float32'), [2, 10, 10]), relay.reshape(var_8188.astype('float32'), [2, 10, 10]), ), 0)
call_8189 = relay.TupleGetItem(func_117_call(relay.reshape(var_8188.astype('float32'), [2, 10, 10]), relay.reshape(var_8188.astype('float32'), [2, 10, 10]), ), 0)
uop_8196 = relay.erf(call_8187.astype('float64')) # shape=(2, 10, 10)
uop_8198 = relay.erf(call_8189.astype('float64')) # shape=(2, 10, 10)
func_5243_call = mod.get_global_var('func_5243')
func_5247_call = mutated_mod.get_global_var('func_5247')
var_8200 = relay.var("var_8200", dtype = "float64", shape = (936,))#candidate|8200|(936,)|var|float64
var_8201 = relay.var("var_8201", dtype = "float32", shape = (588, 1))#candidate|8201|(588, 1)|var|float32
call_8199 = relay.TupleGetItem(func_5243_call(relay.reshape(var_8200.astype('float64'), [936,]), relay.reshape(var_8201.astype('float32'), [294, 2]), ), 4)
call_8202 = relay.TupleGetItem(func_5247_call(relay.reshape(var_8200.astype('float64'), [936,]), relay.reshape(var_8201.astype('float32'), [294, 2]), ), 4)
func_6615_call = mod.get_global_var('func_6615')
func_6617_call = mutated_mod.get_global_var('func_6617')
call_8203 = func_6615_call(relay.reshape(call_8171.astype('float32'), [7, 7, 6]))
call_8204 = func_6615_call(relay.reshape(call_8171.astype('float32'), [7, 7, 6]))
uop_8226 = relay.cos(uop_8196.astype('float32')) # shape=(2, 10, 10)
uop_8228 = relay.cos(uop_8198.astype('float32')) # shape=(2, 10, 10)
bop_8246 = relay.logical_or(uop_8196.astype('bool'), relay.reshape(uop_8226.astype('bool'), relay.shape_of(uop_8196))) # shape=(2, 10, 10)
bop_8249 = relay.logical_or(uop_8198.astype('bool'), relay.reshape(uop_8228.astype('bool'), relay.shape_of(uop_8198))) # shape=(2, 10, 10)
output = relay.Tuple([call_8171,var_8188,call_8199,var_8200,var_8201,call_8203,bop_8246,])
output2 = relay.Tuple([call_8172,var_8188,call_8202,var_8200,var_8201,call_8204,bop_8249,])
func_8256 = relay.Function([var_8188,var_8200,var_8201,], output)
mod['func_8256'] = func_8256
mod = relay.transform.InferType()(mod)
var_8257 = relay.var("var_8257", dtype = "float32", shape = (200,))#candidate|8257|(200,)|var|float32
var_8258 = relay.var("var_8258", dtype = "float64", shape = (936,))#candidate|8258|(936,)|var|float64
var_8259 = relay.var("var_8259", dtype = "float32", shape = (588, 1))#candidate|8259|(588, 1)|var|float32
output = func_8256(var_8257,var_8258,var_8259,)
func_8260 = relay.Function([var_8257,var_8258,var_8259,], output)
mutated_mod['func_8260'] = func_8260
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6639_call = mod.get_global_var('func_6639')
func_6640_call = mutated_mod.get_global_var('func_6640')
call_8301 = relay.TupleGetItem(func_6639_call(), 0)
call_8302 = relay.TupleGetItem(func_6640_call(), 0)
func_7986_call = mod.get_global_var('func_7986')
func_7988_call = mutated_mod.get_global_var('func_7988')
const_8310 = relay.const([-2,-2,-8,5,1,4,4,-3,-10,-4,5,6,-9,9,-8,-9,3,-5,8,-6,3,-8,-7,7,6,-8,3,4,-6,7,-1,6,-10,4,-2,-1,-2,9,-10,7,-2,-8,10,8,-4,1,3,-1,10,-3,8,7,-2,9,7,-9,-10,3,-8,-5,-9,-10,-4,7,8,6,5,6,-2,-1,-1,-7,7,9,4,-10,10,5,-2,-8,4,6,1,-9,5,1,2,6,-9,-7,-9,-6,-8,3,-5,10,-8,9,6,-2,9,8,-3,-3,9,7,-6,7,4,-1,2,8,-6,9,6,5,-5,9,5,-2,9,-4,-10,6,-2,3,-10,6,-8,10,-4,-9,7,-7,-7,9,-8,-10,4,4,-7,-10,8,3,-8,-9,-9,1,8,8,-9,-3,8,5,3,7,-6,5,4,-9,-4,-7,9,-6,-10,-2,1,-5,-9,2,2,2,-8,-4,-8,7,3,2,5,-9,-2,3,-6,-6,-1,-9,-10,2,7,-2,-9,4,6,4,-3,4,5,3,-6,-6,-9,-1,-5,7,-9,8,2,9,-7,-7,7,-10,-9,-4,3,-3,7,9,6,-6,9,-4,6,-6,8,7,-5,8,1,-8,-1,7,4,10,4,-7,-9,-1,-4,-10,-2,-8,6,-10,5,1,8,2,4,4,-9,2,-9,5,-1,6,5,-10,-7,8,-8,-7,-9,-8,2,-2,2,3,6,-7,-4,-2,-6,-10,1,-6,-6,-5,4,9,-7,9,2,1,9,-7,-10,3,-1,10,8,-3,8,1,-3,-10,-1,10,-10,-3,8,3,1,5,-7,-4,-2,3,-6,4,5,10,10,9,-10], dtype = "uint64")#candidate|8310|(315,)|const|uint64
call_8309 = relay.TupleGetItem(func_7986_call(relay.reshape(const_8310.astype('uint64'), [5, 63])), 1)
call_8311 = relay.TupleGetItem(func_7988_call(relay.reshape(const_8310.astype('uint64'), [5, 63])), 1)
output = relay.Tuple([call_8301,call_8309,const_8310,])
output2 = relay.Tuple([call_8302,call_8311,const_8310,])
func_8313 = relay.Function([], output)
mod['func_8313'] = func_8313
mod = relay.transform.InferType()(mod)
output = func_8313()
func_8314 = relay.Function([], output)
mutated_mod['func_8314'] = func_8314
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6736_call = mod.get_global_var('func_6736')
func_6737_call = mutated_mod.get_global_var('func_6737')
call_8328 = relay.TupleGetItem(func_6736_call(), 2)
call_8329 = relay.TupleGetItem(func_6737_call(), 2)
uop_8338 = relay.atan(call_8328.astype('float32')) # shape=(693,)
uop_8340 = relay.atan(call_8329.astype('float32')) # shape=(693,)
output = relay.Tuple([uop_8338,])
output2 = relay.Tuple([uop_8340,])
func_8380 = relay.Function([], output)
mod['func_8380'] = func_8380
mod = relay.transform.InferType()(mod)
mutated_mod['func_8380'] = func_8380
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8380_call = mutated_mod.get_global_var('func_8380')
call_8381 = func_8380_call()
output = call_8381
func_8382 = relay.Function([], output)
mutated_mod['func_8382'] = func_8382
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8403 = relay.var("var_8403", dtype = "uint32", shape = (7, 5, 15))#candidate|8403|(7, 5, 15)|var|uint32
var_8404 = relay.var("var_8404", dtype = "uint32", shape = (7, 5, 15))#candidate|8404|(7, 5, 15)|var|uint32
bop_8405 = relay.bitwise_xor(var_8403.astype('uint32'), relay.reshape(var_8404.astype('uint32'), relay.shape_of(var_8403))) # shape=(7, 5, 15)
uop_8418 = relay.exp(var_8404.astype('float64')) # shape=(7, 5, 15)
var_8426 = relay.var("var_8426", dtype = "float64", shape = (7, 5, 15))#candidate|8426|(7, 5, 15)|var|float64
bop_8427 = relay.maximum(uop_8418.astype('uint32'), relay.reshape(var_8426.astype('uint32'), relay.shape_of(uop_8418))) # shape=(7, 5, 15)
bop_8434 = relay.left_shift(bop_8427.astype('int16'), relay.reshape(var_8404.astype('int16'), relay.shape_of(bop_8427))) # shape=(7, 5, 15)
func_5895_call = mod.get_global_var('func_5895')
func_5896_call = mutated_mod.get_global_var('func_5896')
call_8437 = relay.TupleGetItem(func_5895_call(), 1)
call_8438 = relay.TupleGetItem(func_5896_call(), 1)
output = relay.Tuple([bop_8405,bop_8434,call_8437,])
output2 = relay.Tuple([bop_8405,bop_8434,call_8438,])
func_8442 = relay.Function([var_8403,var_8404,var_8426,], output)
mod['func_8442'] = func_8442
mod = relay.transform.InferType()(mod)
var_8443 = relay.var("var_8443", dtype = "uint32", shape = (7, 5, 15))#candidate|8443|(7, 5, 15)|var|uint32
var_8444 = relay.var("var_8444", dtype = "uint32", shape = (7, 5, 15))#candidate|8444|(7, 5, 15)|var|uint32
var_8445 = relay.var("var_8445", dtype = "float64", shape = (7, 5, 15))#candidate|8445|(7, 5, 15)|var|float64
output = func_8442(var_8443,var_8444,var_8445,)
func_8446 = relay.Function([var_8443,var_8444,var_8445,], output)
mutated_mod['func_8446'] = func_8446
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5738_call = mod.get_global_var('func_5738')
func_5740_call = mutated_mod.get_global_var('func_5740')
call_8502 = relay.TupleGetItem(func_5738_call(), 1)
call_8503 = relay.TupleGetItem(func_5740_call(), 1)
func_8380_call = mod.get_global_var('func_8380')
func_8382_call = mutated_mod.get_global_var('func_8382')
call_8536 = relay.TupleGetItem(func_8380_call(), 0)
call_8537 = relay.TupleGetItem(func_8382_call(), 0)
output = relay.Tuple([call_8502,call_8536,])
output2 = relay.Tuple([call_8503,call_8537,])
func_8538 = relay.Function([], output)
mod['func_8538'] = func_8538
mod = relay.transform.InferType()(mod)
output = func_8538()
func_8539 = relay.Function([], output)
mutated_mod['func_8539'] = func_8539
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5696_call = mod.get_global_var('func_5696')
func_5698_call = mutated_mod.get_global_var('func_5698')
call_8570 = func_5696_call()
call_8571 = func_5696_call()
output = relay.Tuple([call_8570,])
output2 = relay.Tuple([call_8571,])
func_8587 = relay.Function([], output)
mod['func_8587'] = func_8587
mod = relay.transform.InferType()(mod)
mutated_mod['func_8587'] = func_8587
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8587_call = mutated_mod.get_global_var('func_8587')
call_8588 = func_8587_call()
output = call_8588
func_8589 = relay.Function([], output)
mutated_mod['func_8589'] = func_8589
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8587_call = mod.get_global_var('func_8587')
func_8589_call = mutated_mod.get_global_var('func_8589')
call_8603 = relay.TupleGetItem(func_8587_call(), 0)
call_8604 = relay.TupleGetItem(func_8589_call(), 0)
output = relay.Tuple([call_8603,])
output2 = relay.Tuple([call_8604,])
func_8641 = relay.Function([], output)
mod['func_8641'] = func_8641
mod = relay.transform.InferType()(mod)
output = func_8641()
func_8642 = relay.Function([], output)
mutated_mod['func_8642'] = func_8642
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8659 = relay.var("var_8659", dtype = "float32", shape = (14, 10, 2))#candidate|8659|(14, 10, 2)|var|float32
uop_8660 = relay.sqrt(var_8659.astype('float32')) # shape=(14, 10, 2)
func_5738_call = mod.get_global_var('func_5738')
func_5740_call = mutated_mod.get_global_var('func_5740')
call_8662 = relay.TupleGetItem(func_5738_call(), 1)
call_8663 = relay.TupleGetItem(func_5740_call(), 1)
output = relay.Tuple([uop_8660,call_8662,])
output2 = relay.Tuple([uop_8660,call_8663,])
func_8664 = relay.Function([var_8659,], output)
mod['func_8664'] = func_8664
mod = relay.transform.InferType()(mod)
mutated_mod['func_8664'] = func_8664
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8665 = relay.var("var_8665", dtype = "float32", shape = (14, 10, 2))#candidate|8665|(14, 10, 2)|var|float32
func_8664_call = mutated_mod.get_global_var('func_8664')
call_8666 = func_8664_call(var_8665)
output = call_8666
func_8667 = relay.Function([var_8665], output)
mutated_mod['func_8667'] = func_8667
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6798_call = mod.get_global_var('func_6798')
func_6800_call = mutated_mod.get_global_var('func_6800')
call_8669 = func_6798_call()
call_8670 = func_6798_call()
func_6896_call = mod.get_global_var('func_6896')
func_6897_call = mutated_mod.get_global_var('func_6897')
call_8713 = relay.TupleGetItem(func_6896_call(), 0)
call_8714 = relay.TupleGetItem(func_6897_call(), 0)
output = relay.Tuple([call_8669,call_8713,])
output2 = relay.Tuple([call_8670,call_8714,])
func_8738 = relay.Function([], output)
mod['func_8738'] = func_8738
mod = relay.transform.InferType()(mod)
output = func_8738()
func_8739 = relay.Function([], output)
mutated_mod['func_8739'] = func_8739
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6540_call = mod.get_global_var('func_6540')
func_6541_call = mutated_mod.get_global_var('func_6541')
call_8892 = relay.TupleGetItem(func_6540_call(), 0)
call_8893 = relay.TupleGetItem(func_6541_call(), 0)
func_5125_call = mod.get_global_var('func_5125')
func_5129_call = mutated_mod.get_global_var('func_5129')
const_8921 = relay.const(1, dtype = "uint64")#candidate|8921|()|const|uint64
const_8922 = relay.const([5,4,8,-1,4,9,9,-5,10,-9,7,3,4,7,5,9,-7,1,4,2,-5,9,8,1,3,3,7,-9,6,-10,-3,-3,3,-4,6,-4,-8,7,6,-7,7,9,4,6,-4,-4,-5,-7,-1,-5,8,7,2,-5,-3,9,10,5,6,7,10,-6,8,-5,-6,-5,-10,10,10,2,8,3,-9,-4,-10,4,-2,-6,4,9,-2,4,-1,-5,2,2,1,9,-4,3,-6,5,-7,-6,2,3,-2,-3,-3,-1,8,-6,1,-6,-8,8,-6,-10,5,6,-3,-9,-7,-7,-3,-7,4,-7,-7,-9,-4,9,-1,4,6,1,-10,6,5,2,-4,8,-2,-2,-7,-6,-7,10,-3,-3,-6,-8,-7,6,8,9,-6,-9,-9,1,-1,7,-1,7,1,5,-6,-4,7,-4,-9,-8,-7,5,-9,4,-3,-9,9,-10,-8,10,8,-7,-5,4,2,-10,9,7,-2,-8,-1,9,5,-2,4,6,-5,9,-4,7,4,-6,-3,-1,-3,9,-7,6,10,4,-10,-6,-3,-7,7,-4,-1,4,-5,-8,3,6,8,2,10,1,-6,4,-1,8,-7,9,-7,2,7,4,-9,-1,-10,4,1,-9,4,8,-6,-5,1,1,-8,-1,6,4,4,2,-10,-6,-4,8,8,-5,-2,-9,4,-2,4,-7,7,-6,9,-6,8,10,7,-2,-5,1,-5,2,-10,-2,-8,-5,-10,-7,-10,-10,5,10,9,8,7,3,10,3,-10,6,-4,4,-3,5,-3,2,4,-9,6,-6,7,-4,3,-10,-2,2,9,-10,-6,-8,9,-7,5,-3,-5,3,8], dtype = "uint64")#candidate|8922|(315,)|const|uint64
call_8920 = func_5125_call(relay.reshape(const_8921.astype('uint64'), []), relay.reshape(const_8922.astype('uint64'), [15, 3, 7]), )
call_8923 = func_5125_call(relay.reshape(const_8921.astype('uint64'), []), relay.reshape(const_8922.astype('uint64'), [15, 3, 7]), )
bop_8928 = relay.floor_divide(call_8892.astype('float64'), const_8921.astype('float64')) # shape=(7, 7, 6)
bop_8931 = relay.floor_divide(call_8893.astype('float64'), const_8921.astype('float64')) # shape=(7, 7, 6)
func_5496_call = mod.get_global_var('func_5496')
func_5498_call = mutated_mod.get_global_var('func_5498')
call_8952 = func_5496_call()
call_8953 = func_5496_call()
func_6540_call = mod.get_global_var('func_6540')
func_6541_call = mutated_mod.get_global_var('func_6541')
call_8956 = relay.TupleGetItem(func_6540_call(), 0)
call_8957 = relay.TupleGetItem(func_6541_call(), 0)
func_6144_call = mod.get_global_var('func_6144')
func_6145_call = mutated_mod.get_global_var('func_6145')
call_8979 = func_6144_call()
call_8980 = func_6144_call()
output = relay.Tuple([call_8920,const_8922,bop_8928,call_8952,call_8956,call_8979,])
output2 = relay.Tuple([call_8923,const_8922,bop_8931,call_8953,call_8957,call_8980,])
func_8984 = relay.Function([], output)
mod['func_8984'] = func_8984
mod = relay.transform.InferType()(mod)
output = func_8984()
func_8985 = relay.Function([], output)
mutated_mod['func_8985'] = func_8985
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6144_call = mod.get_global_var('func_6144')
func_6145_call = mutated_mod.get_global_var('func_6145')
call_9062 = func_6144_call()
call_9063 = func_6144_call()
output = relay.Tuple([call_9062,])
output2 = relay.Tuple([call_9063,])
func_9064 = relay.Function([], output)
mod['func_9064'] = func_9064
mod = relay.transform.InferType()(mod)
output = func_9064()
func_9065 = relay.Function([], output)
mutated_mod['func_9065'] = func_9065
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6639_call = mod.get_global_var('func_6639')
func_6640_call = mutated_mod.get_global_var('func_6640')
call_9066 = relay.TupleGetItem(func_6639_call(), 0)
call_9067 = relay.TupleGetItem(func_6640_call(), 0)
func_3956_call = mod.get_global_var('func_3956')
func_3960_call = mutated_mod.get_global_var('func_3960')
const_9076 = relay.const([-1.103942,-6.178412,2.359461,2.352745,6.913968,3.462860,-3.009460,5.306714,-3.928571,-8.320413,-5.796357,-0.507937,0.751269,-9.419278,3.508364,6.651362,-9.917874,-9.456230,-1.891257,5.939641,-0.237126,-4.956054,-9.988257,4.878407,7.565045,8.817057,3.786478,-2.004734,-2.757568,3.606393,-0.281358,6.296070,-2.724711,-6.124867,-9.403532,8.267934,-6.673146,2.221531,7.012457,-4.300849,-9.953019,-5.973065,5.777680,-2.213519,8.462240,9.538948,-9.843092,4.428770,2.109849,1.240558,7.432574,-8.202463,-5.687680,0.621148,-2.380733,-2.106910,2.397163,-0.234316,1.985555,7.873927,1.813351,5.938816,1.400789,-0.790810,-0.033096,-4.927657,-6.461083,-2.344050,-7.934523,2.876508,6.629255,9.657786,-1.034624,5.000278,-5.759193,3.387187,-1.648233,6.307190,9.183979,-2.417031,8.112548,6.387685,0.006032,-3.797799,3.398092,-4.214121,2.018714,-0.016068,7.384004,-9.765789,-7.432596,8.255269,-6.274858,-9.404310,9.668032,7.222115,-2.440593,-7.144878,-9.210253,8.237002,-5.364346,-2.348842,-6.457778,-0.649069,3.705426,4.497015,-7.967135,-9.433569,-5.388505,-5.713788,3.285312,-1.945964,-1.477645,2.653979,-2.565062,7.316684,-3.407316,-9.005160,-1.993318,-6.474902,8.564964,9.445721,5.168846,-9.460601,-5.240702,3.298455,8.566005,0.206292,-3.601980,-5.163512,-9.461173,-5.905138,-5.778481,2.642699,9.801249,-2.547506,2.820754,-8.141016,1.419278,-0.339562,1.443849,8.402694,-2.831502,-9.479309,5.941665,4.974845,-0.785136,-7.435700,-0.010997,2.102278,6.507458,3.418164,7.219436,8.072670,-0.953097,0.145989,2.539487,-5.276584,7.947424,3.779851,-9.458788,-9.912778,-7.095303,7.252786,-5.184501,-4.129579,-1.750754,1.445834,2.279113,-3.984139,-3.973220,6.955253,-3.025163,3.057269,-2.654137,-7.849955,2.647732,-8.711062,7.423854,3.364260,-9.658314,9.982461,5.418436,5.523959,-6.464315,-5.093576,0.301162,-5.820023,-0.458243,3.178283,-2.877103,1.171592,7.684204,9.989314,9.207101,-1.580944,-6.123844,-6.704223,-8.151715,-2.296948,4.310451,-4.020564,-7.372738,-7.143779,-2.043571,-9.891486,3.115441,1.239943,2.485451,8.205391,5.361556,-0.633489,8.201354,1.477299,-0.099172,-9.359576,-8.315636,-1.419733,-0.352620,7.563727,9.355247,8.123710,2.361243,5.416548,-1.450320,5.495356,-4.424268,3.985933,-1.243821,-4.930531,0.305588,-0.467872,3.906514,-3.612215,8.233297,-9.333948,7.167589,4.127872,-7.403475,5.148210,6.864770,-4.375243,0.500341,-2.497560,-4.055224,-4.328193,1.870742,-3.066399,-9.027209,-5.616775,-1.750737,-9.667456,2.287226,5.976295,-0.646592,-6.705642,5.258305,6.837801,-7.415170,6.911108,-8.510775,-6.931404,-8.782918,-2.381487,-9.800327,1.105206,-0.939233,-6.368263,8.204181,2.696781,1.766244,-1.091404,1.402665,0.358025,6.309135,-1.706366,-2.860579,1.214116,0.591022,8.665164,9.681849,1.829546,-9.739996,9.648931,7.315307,4.316528,-6.775425,1.377428,-2.709712,3.175400,3.869227,9.994015,0.171728,9.136749,0.733359,-4.664756,2.917461,-9.930812,1.558837,6.863909,-3.778397,2.561220,-7.691777,-7.080536,6.319765,-0.753226,-5.795804,1.632975,1.293953,-3.542306,0.957392,9.091432,-9.339266,2.736249,1.689692,-8.152647,2.262370,-5.826583,3.226166,-9.512041,-4.675309,5.604369,3.445313,-0.781018,8.570353,9.886651,1.823954,1.546142,-7.092256,-0.309305,-5.257020,3.997526,-3.540863,5.765722,4.341318,5.087529,1.200123,-4.267417,2.028052,1.820555,7.681200,8.935489,0.893724,5.905935,0.353162,9.822713,-7.069868,-3.977063,-5.982037,-5.203197,6.401564,7.525815,4.063518,7.318706,3.658839,2.077151,1.016463,8.585249,-6.320076,-1.708322,-3.631349,1.636221,7.357645,-9.761582,3.359754,2.680622,-9.509938,2.281268,-6.976287,-3.294037,9.862949,-5.924610,-8.185051,1.987402,-5.473258,2.935528,7.228765,-2.460682,-6.066423,-7.631936,6.071094,-3.478888,2.228319,5.133812,0.037966,0.794289,-7.944894,6.346389,3.545285,8.656838,5.557870,5.969071,0.633413,7.958920,-5.328596,0.889900,9.354543,0.798820,-7.124334,-9.723013,-5.179027,-6.039503,6.550842,5.021323,7.219619,6.198586,7.361920,7.820259,-6.123237,-4.137342,3.193037,-3.254228,-6.085527,0.750146,9.653080,-5.276608,0.143020,-4.341377,-4.783630,6.370984,-1.116968,-4.883652,9.776233,-4.370069,-0.052579,-8.247726,-0.121256,-5.249061,-4.075552,5.868064,4.780456,0.538839,7.250766,-3.974812,-7.644438,4.882439,-0.769278,-6.498335,5.980650,4.860561,-9.189477,9.290767,-4.357994,7.753158,2.977079,-5.876889,-8.441054,5.751899,6.550617,7.953999,-4.946664,-4.364314,6.771639,-4.161146,7.857673,-5.959090,-7.600928,0.681951,-0.255890,4.886459,0.812894,-0.733335,-1.982043,5.718970,6.393628,8.109197,1.890817,-0.949501,-0.846951,-9.550394,-2.792754,2.766156,-5.632056,-9.120385,9.345622,2.921489,9.827652,-3.100470,4.905715,-3.545138,7.750986,-5.296268,2.234402,5.686727,-3.839814,-8.201239,-7.712289,1.500949,-1.122393,8.899646,6.065060,-0.974214,5.075436,-2.884998,2.628467,4.787545,-1.020932,9.914155,9.480109,-6.262060,-1.358237,-7.879755,-2.076439,-6.248546,4.347112,5.793693,-2.945620,-5.873877,-3.679034,-1.348698,6.985382,-8.402608,-6.833836,3.426617,-0.523164,6.179745,-3.757734,-0.416615,7.198654,1.251438,-6.867432,4.267295,9.274462,-6.287824,1.369190,6.570409,4.476828,-5.011838,9.621591,5.646252,1.178876,0.910816,-5.746826,8.563894,-3.714062,7.870739,3.198190,5.018645,-7.251431,-2.215321,-6.102126,-8.336002,-2.735258,7.525324,-4.823083,1.825334,1.528860,-6.369776,-1.528001,0.238532,-9.453262,-9.514929,-0.329769,-5.003145,2.536537,-3.203006,-1.045560,5.544366,4.446532,7.030745,5.876414,-2.671141,8.962805,9.935954,-2.680529,-9.179215,2.831470,-8.842022,-5.786056,-7.544422,6.927079,3.940842,3.510200,-4.055894,-0.225321,-5.132962,3.971310,-9.898449,8.401076,-7.235170,6.017543,0.700502,0.586185,-8.557945,-5.575924,-3.389275,8.001358,-7.020191,-2.592992,5.887199,-0.972553,5.872619,-6.638692,-7.553340,9.668012,9.939950,6.855974,0.313084,-4.982430,-8.441520,-0.655829,3.946709,-1.384168,-2.362113,-5.011761,2.331267,5.999562,-4.187255,2.922717,-8.564726,-2.396904,1.710211,-1.305726,-5.961993,-6.119409,7.240730,8.811134,-8.147847,-1.784005,5.321299,-2.699080,2.516058,2.618309,-5.539272,-3.832785,2.529468,-8.602389,-1.060711,9.510423,-8.813358,3.742991,-3.845170,-4.768827,5.589914,0.470914,1.951868,6.788523,2.485173,2.497130,8.509796,-7.392330,-9.092741,1.378100,8.036547,2.810807,-5.987191,-3.647956,-2.340354,7.537504,9.143975,-3.827406,4.311492,-0.161201,-1.754471,-0.188470,3.778551,-2.313060,2.901445,5.538915,-1.067696,-7.005428,1.361286,6.305624,9.014795,6.541997,6.666167,-9.833301,-5.777742,9.155965,-1.834933,-6.448244,6.537115,9.733986,6.129861,9.848634,0.281515,-1.656088,-3.324888,-5.365967,9.900936,3.563463,7.717595,5.106107,-2.884568,-6.391233,-7.394924,-7.943830,2.983178,-6.974523,-6.858295,-4.231420,-2.128978,5.562086,-7.770116,-8.744108,4.031496,-2.758856,5.609122,-0.855508,7.333634,-8.678260,-9.446728,5.610279,-1.208529,-6.583420,3.205022,2.188353,1.236648,6.326707,-0.946381,3.323599,2.440138,0.318409,5.860354,-2.439115,-9.003981,-1.867171,1.927722,5.098082,-0.394204,8.480126,-3.033306,6.269366,1.245132,-0.346358,-5.109948,0.151132,1.113469,3.139871,7.048746,2.649675,-4.297476,-2.888988,9.814937,-5.885640,9.887142,-7.997016,-3.376983,2.803034,-5.771145,5.940360,-2.350808,-1.324873,7.683047,-4.190462,8.559896,3.863896,-6.570910,6.578351,8.113544,5.251078,1.175187,-2.411008,2.237473,7.187394,0.605138,-7.688258,-1.116469,-5.987554,-1.954853,-1.974506,-3.161113,-0.210960,5.330821,2.450004,0.928494,0.697134,-0.894445,-0.602054,0.921051,2.227975,-9.400979,-3.848690,-1.008177,7.654143,-1.909091,-6.648487,3.459073,9.879327,-1.153414,9.663032,6.571420,6.252192,-5.793684,2.290000,1.569981,1.531843,-7.991922,-1.655703,-1.965068,-6.735791,1.383670,3.259297,7.573183,0.626434,3.332174,5.822042,2.797602,-5.128071,-8.971305,-5.188923,-6.134799,8.092497,9.291849,8.589087,3.867354,-1.592418,-6.259881,5.101209,-3.349426,-1.967101,2.142375,-2.662852,-5.131564,9.225723,-7.653426,-6.382258,0.405665,-5.460478,-2.963543,-2.244174,2.623386,-5.142447,-1.087290,6.026436,7.554239,1.310630,5.486302,3.272217,-8.797376,-6.812821,-0.157758,-0.167287,-6.309264,0.486121,-1.995288,6.799337,-6.537379,-5.034478,7.958907,-8.698645,3.344885,-7.500670,4.792414,-8.596034,-9.086195,9.866067,5.635220,-1.196504,-3.275304,-4.322565,4.553809,-6.953962,-8.567386,-7.469079,-8.436369,-0.307481,-5.258003,-7.593769,-1.927338,-4.502161,5.218705,-7.963437,7.369305,-0.382585,-1.433216,-3.445413,-7.006264,1.101374,9.103312,6.989740,-4.795920,6.036458,-3.411413,6.929863,-7.362423,6.586138,9.656032,4.188985,-8.767471,-5.488791,-2.516279,-6.387326,2.376890,4.622886,4.910467,-5.603471,-0.244037,4.890584,2.364045,-1.078167,-8.169054,5.460704,4.183473,-8.179145,-4.736659,-4.781873,5.129724,-1.539034,-9.440284,-5.098712,-6.776987,-7.252196,-2.791082,2.646554,-1.450860,-8.263517,6.086416,-8.279534,-2.873835,-6.254618,0.698196,5.379365,5.202619,0.910089,-0.748612,5.442510,-8.295219,4.570232,0.881597,-1.264684,-9.859548,-3.837985,-5.539701,-9.817998,3.553967,0.348090,9.295554,-2.197551,-6.253457,6.722939,2.281349,0.039280,-3.297779,-9.768491,9.405574,5.732264,1.593631,4.006892,-3.543907,-5.684358,-2.085549,-2.982791,5.908670,-6.025592,-8.799917,-1.019695,1.533275,6.953425,-9.148877,3.085592,-1.119045,-8.022631,9.259199,4.905018,9.600613,1.357316,9.646989,-6.496297,-0.852097,8.919321,-3.624171,-3.838700,9.797033,0.502489,-4.006371,-7.173446,9.668664,-8.965815,-1.139014,-3.701363,-5.295798,-7.799098,2.493206,-0.553037,4.388951,-3.219259,3.745288,8.228917,-7.084906,-1.871229,-4.843471,0.712263,8.659326,-0.317575,0.220105,-2.002258,-9.922050,3.766164,4.381410,-4.173604,7.440956,-0.512211,5.437222,-9.603464,-8.994340,-7.216591,7.241624,-3.856310,-1.022682,-1.753585,8.898175,1.717963,1.647810,6.411564,-4.458779,-9.128939,-9.255732,-1.922004,-9.325706,6.843049,6.799315,7.461470,4.974247,-8.602045,-6.195455,9.523366,8.700198,-3.712238,6.689203,7.075611,7.268464,-7.704021,-0.771578,0.450383,2.972292,2.972321,9.758523,7.486435,-8.323720,-0.235703,-7.143248,-5.856922,-8.697750,1.873713,-1.635150,8.800808,-3.382379,3.557874,-7.748703,5.492425,7.277327,-3.115684,-3.322093,0.706820,2.537886,8.442752,2.939457,8.395730,-7.546968,4.639045,5.446420,-4.159370,-7.044671,-3.979172,6.275159,-5.101381,-9.123858,5.102589,-0.384504,7.832719,-6.731604,-9.746670,-0.541477,8.758534,-8.059410,6.445799,0.370466,4.065721,2.011514,-4.315745,3.738850,5.610847,7.161639,-6.855903,6.932846,-2.211522,1.121296,9.573824,-7.134966,-7.594566,-2.933379,7.244758,-3.049583,7.853554,-1.232419,-4.102389,5.176862,-6.689020,-0.807591,-3.662922,-4.945019,6.875960,8.610644,-7.641342,7.315150,-6.615504,-7.891724,2.146435,-3.689446,4.745241,-4.446881,9.552998,1.980378,-5.581315,-9.540821,-3.789894,9.462027,-1.025828,-4.306417,7.480985,-8.711992,6.233947,9.681775,1.115141,-7.041850,-4.175826,-7.505068,-0.043432,4.261482,2.387355,6.937366,4.455123,3.417655,-3.716556,-1.282521,6.399495,2.091341,3.828283,8.113265,9.595880,6.392329,-8.451544,7.342748,-1.932859,7.352868,-8.031778,2.980801,-4.705788,-4.725437,-6.986423,-8.688706,9.051685,9.723267,-4.719925,7.437730,-2.738973,6.778172,-1.954526,8.789416,-1.313540,-6.421419,9.146142,-5.540620,-8.653344,-0.217918,4.943669,-5.001410,7.142597,5.226543,-1.177664,9.688194,-8.832507,6.660445,7.565179,2.452206,6.658583,-7.479471,2.521497,-9.964458,4.223469,-4.831176,7.523482,8.680933,-8.941041,-4.885457,5.809924,0.372304,0.482907,-7.149371,4.164464,-8.835417,6.090128,-7.476524,4.721094,-4.486749,0.825094,7.373977,7.653784,9.022181,3.370944,-7.660785,9.905133,-8.140783,-1.861709,5.042853,-5.500888,2.457572,2.145133,-2.328580,-6.784232,7.200788,-8.753639,5.488386,-1.816547,0.786839,-0.939583,-4.599070,-9.043221,-2.339605,-7.833453,-9.793641,2.462629,-4.791460,4.741679,0.953560,-9.216393,-4.426724,3.203861,-0.882405,-9.765588,-0.459689,-1.790376,7.142095,1.855478,4.622895,7.857502,9.022693,4.187073,6.752054,-6.298020,1.895937,-7.014706,8.310501,4.159297,2.827081,-9.167494,-6.291430,-6.491366,5.949234,-0.566234,5.905531,-5.025301,-5.575517,2.541779,0.376893,6.161332,-3.176085,-5.972078,1.705324,5.831639,3.768794,-6.068690,-3.228239,5.337478,3.562874,6.056294,-0.006229,4.757066,5.864314,-8.877126,-1.393514,0.247886,5.175599,9.645170,3.369629,4.637158,-8.987391,7.309126,0.343927,-9.612047,-9.299070,1.655096,6.854885,2.416302,1.872348,6.922258,5.408733,-3.504867,-7.765665,-6.841988,5.953509,9.419696,9.948005,-6.910826,1.948220,5.946310,-1.766798,-1.258672,3.830723,2.187860,-3.723438,3.715790,1.308172,-4.150656,2.189341,-3.139390,8.143560,-2.350525,-9.337860,4.569291,5.136310,6.869660,8.213577,0.494294,8.332946,-4.541987,-1.200544,-2.884006,2.341787,5.727492,1.301836,5.377860,1.838444,9.056924,6.416975,-7.969067,-8.104968,-9.152054,4.295514,-6.470576,-5.732225,-8.169041,-8.670302,4.788787,-8.220418,-2.617663,-0.692750,-1.231940,7.875933,1.702435,-5.048255,9.506808,2.595567,-4.884707,-8.000654,5.324924,2.177108,9.678986,-0.691074,-3.942022,1.340217,-0.329280,-0.499512,-7.098244,4.084527,-8.386901,5.341331,-5.505987,-9.879709,6.686796,1.787813,7.426113,9.640287,8.178228,0.818259,-0.678178,-9.635229,-8.642397,0.191409,2.500177,-5.286595,-9.293317,0.735473,-8.046633,2.928993,-8.202425,9.999292,-8.107863,-7.573165,-4.508677,1.127777,3.085944,-0.050353,-5.177993,-5.424027,-8.263264,-0.335519,-5.111731,4.730830,8.682035,-6.050328,8.315071,6.938844,-6.127716,1.113088,-7.471434,0.148312,2.168745,6.559735,1.304032,6.345254,6.063841,-1.139582,7.597235,-9.103144,1.001817,1.517021,-8.201249,-2.776727,-3.872336,-0.012527,-3.794009,-7.051333,2.765346,4.522845,5.933337,-9.825945,-2.195830,-8.240473,-5.202621,-3.008006,-1.302566,-5.849478,7.948090,7.066828,9.053693,-8.928138,-9.030237,6.731285,-6.768948,-5.980654,9.315102,-4.417209,-8.527118,6.089660,-5.995687,-1.223016,2.059723,3.662167,6.525583,7.819169,-9.701959,-2.619430,-3.995181,-9.828754,-4.281948,3.995183,0.955871,-5.473583,-0.060818,-8.426318,9.010291,9.853505,-1.755309,6.255012,-6.798641,-1.388435,-5.571231,4.548048,-0.934430,-9.700266,-0.165076,-3.927219,2.247503,9.504176,-5.660449,-8.754464,-5.459422,8.714849,5.530277,-9.623817,4.739525,-7.442362,7.939759,-2.538870,-2.829144,8.500375,-7.524918,-5.795944,-2.854595,-4.980914,-0.623248,-1.963133,-5.805754,2.829147,7.983942,6.805349,-7.090207,-3.012484,9.445871,9.725953,9.690101,5.895335,-8.719629,-9.105818,0.406834,6.910028,9.408465,0.720691,2.653997,0.609345,-0.908928,7.439000,3.322739,1.824391,4.405840,-1.606245,7.656349,-8.528450,2.475695,-4.852616,9.821771,-3.748651,9.033835,4.830029,-7.693616,4.192813,6.740830,8.401837,7.621828,-8.296800,8.566472,8.638722,-5.997406,-7.583073,-6.681349,-0.647986,8.616976,6.695993,-9.712363,3.722904,6.187307,-1.323719,-8.835250,2.839940,-1.683283,-8.382256,-8.634481,-9.707645,5.689590,4.593755,2.150046,-1.202836,-5.134956,6.991785,-3.525014,-4.476324,-2.270540,-3.867941,-3.575433,-8.977976,4.493896,9.913901,-4.155270,-1.691488,-2.491435,-6.246062,-0.427365,-8.362675,-4.467449,7.484675,7.838550,-9.699176,-2.234332,-0.215901,2.411081,6.555679,6.740920,-4.956822,-1.565461,0.839563,-5.032655,-7.789471,-3.442288,-9.437534,6.431457,4.427958,3.335341,-4.654425,3.876909,-6.773653,8.346947,1.634237,-5.175880,-2.158077,9.277588,-5.738817,9.852291,-8.317316,8.866311,-7.463029,-6.748232,0.408488,-9.863042,-4.171323,-1.224111,-4.506502,-8.706782,-4.002010,1.473290,-6.377344,2.779648,2.615952,4.241417,-2.801007,-8.618028,6.649106,1.125177,-4.241059,-4.414459,8.674264,9.988831,-0.517622,5.950912,1.036865,-8.700633,9.329391,-9.621333,-6.208748,-2.349619,-6.039311,-1.317890,-9.341015,6.926822,1.539965,5.586602,-8.566520,-0.405508,-8.863337,-1.321876,-9.778601,4.570002,-4.270791,-9.486430,-0.931501,4.399748,1.404124,-1.983570,5.797266,-5.586104,-6.673190,3.409034,6.024978,8.648936,-5.775645,2.045735,-5.586008,-8.401242,-1.818624,-6.152643,-3.866892,4.542765,0.316933,6.610295,7.549718,6.268527,6.689401,6.943881,-5.683250,-2.526069,-0.016700,9.921573,1.121342,9.090209,5.535340,-1.875610,8.040930,8.755297,2.914354,-7.063338,5.947039,-8.595287,-7.723218,0.415411,2.996390,6.695951,4.835909,-2.151319,3.778836,-5.020210,2.497656,-6.196268,-9.447318,0.887564,-8.215676,4.232390,1.179136,-2.992442,3.003921,-1.762543,5.948443,-5.873076,4.378028,6.627055,-3.433183,6.761929,-4.052193,-1.570518,7.510943,5.549753,2.738717,5.729195,-0.230498,7.444710,2.936790,-4.456220,5.549348,2.618536,-7.648585,4.209176,-0.437291,-0.526931,-7.019234,-9.447252,0.966545,0.184717,-4.794938,4.207683,-5.513475,-6.259373,5.712707,2.215357,5.421972,5.345204,4.688814,-6.521390,1.152303,7.427733,7.098231,8.578768,2.314231,-8.194700,-3.244376,-1.346965,-2.465959,-7.337874,-0.905512,-0.724879,3.823461,1.856556,7.156480,-8.283398,-2.918068,-4.589030,8.823938,-4.777683,0.490935,-4.649675,2.057773,-3.757076,9.873997,0.629233,-3.081600,5.451368,9.741603,6.727634,-5.661912,6.148438,0.998464,2.221902,9.098383,9.624906,-6.395201,-7.568872,-1.013389,7.895675,-4.556427,9.741559,-8.231026,-5.876922,5.683177,-6.239276,2.699417,0.153314,-2.755969,-8.685757,-9.843653,-6.918855,7.982321,-5.737514,6.701542,-8.160836,-2.697658,6.676192,-0.991516,-4.440122,8.280910,-1.704730,-1.986065,6.495397,-7.009806,0.019290,8.087185,2.249861,-5.963620,-1.700170,0.034995,6.153862,9.707126,-8.691763,-9.128148,7.780759,-9.042292,4.867136,4.552350,2.647367,-6.422888,2.911726,-9.805047,-2.306670,-7.756222,-9.749634,6.312984,-3.586777,-9.233850,2.351218,3.166386,-3.433413,-0.337385,7.977111,-5.229316,9.838140,0.901432,-2.741711,7.573471,-5.719646,-6.064687,6.634321,0.237200,-6.143027,-5.562263,-1.425009,-2.398901,1.212046,-6.679293,2.325577,7.561290,0.904382,3.800447,-0.518067,1.147878,-2.333573,-7.092791,5.653439,8.895761,5.332926,9.503577,-6.136256,9.336912,-7.812514,-5.652893,-8.057183,-7.475446,-2.989976,-6.296160,-3.742535,9.082029,2.701884,-6.879486,4.944742,-3.823662,-2.718960,5.064630,8.232110,-4.749452,-5.854625,5.502727,3.671271,6.061953,5.873453,-5.970630,3.444586,7.216415,1.159479,2.831371,7.885386,-8.652418,-8.884450,-7.767840,-7.468474,7.383579,5.850070,9.102389,2.956181,-6.897153,-0.136904,-2.887660,8.251866,-9.953351,-2.425652,8.597151,1.196171,2.137129,5.554460,-6.384345,-6.760739,2.681086,-0.916581,-4.742108,8.178792,6.773275,-1.778176,4.797462,4.051828,-8.404238,6.611914,8.717985,3.697937,-3.354764,6.842487,-2.837006,8.549901,8.086311,4.054692,1.391683,9.089663,-3.687900,-8.134090,5.538811,-5.880199,4.561484,1.177558,-7.928298,9.726015,-2.622359,4.296130,9.801186,-8.368565,2.972866,-1.296775,-7.967574,7.126075,3.943540,-4.864611,0.538029,7.729996,-3.861371,0.820179,6.647678,-0.820579,6.537410,5.769855,-3.145347,-4.608883,5.041863,-3.693896,-9.659465,-7.865629,8.529633,-6.878447,5.925239,-3.885523,-8.367984,2.812736,-6.075026,1.789845,0.290927,-5.254960,-9.516781,3.505442,-5.686467,8.450152,4.690984,-8.244187,-7.389146,3.933001,-9.538361,-4.926880,-2.533304,7.330905,9.295119,-2.581945,3.610602,-7.690172,2.148174,3.706009,8.763545,-0.138371,-8.478442,0.521561,8.579371,6.062706,-8.845020,8.186294,7.055918,-1.169450,0.153198,9.417747,4.304011,4.680726,-0.864441,-1.736248,3.762489,-0.793740,-9.578279,0.999978,8.699269,5.699270,-7.233269,-0.312193,5.247072,-6.270096,3.390953,9.430978,7.979035,-1.906777,2.311990,1.494964,9.215231,2.188995,3.757655,-7.447054,5.557395,0.352092,-4.669388,1.685201,-1.029335,-8.637081,1.916751,-4.593315,-1.184902,-9.850000,-4.028779,8.890144,-6.986952,8.498357,0.598612,-9.348982,3.182731,-3.627648,2.144239,-6.663569,4.141428,2.491612,-1.361745,8.749525,-5.967226,4.682409,5.224530,1.239771,6.413307,6.647771,-3.062826,3.701461,7.248604,2.920532,2.081427,-6.024887,-0.976364,8.688239,-5.153035,-0.625386,6.515281,0.494909,-8.936882,-9.237550,0.544413,-2.733237,3.182526,4.732624,4.383647,8.810804,-6.625340,7.419066,2.090960,-9.345520,0.311996,8.007232,-4.063508,0.842165,7.281245,-5.577431,3.264655,-2.767144,-5.757848,-5.438295,-0.303818,-2.369305,8.262576,0.120857,-0.177283,-6.613906,-5.109216,-9.020700,-1.808706,4.733344,7.895790,-4.151116,-1.724475,0.955271,0.500384,-7.327150,9.635661,-2.090561,-5.719685,-0.387129,1.133590,-6.542966,-5.240905,-2.037217,-4.904304,-0.979149,7.255886,0.406118,6.566205,-3.189609,-2.639930,-1.832815,8.716871,-1.461899,-4.923965,3.328762,-5.480709,-6.371079,-3.472338,0.080104,-5.621884,3.387974,7.557714,-4.272543,0.887168,8.057233,0.219078,-2.740949,-8.519004,5.822942,2.484099,9.492959,-5.236319,-9.642867,-7.664134,-1.839204,9.856385,0.666143,-5.077309,4.470906,-5.846342,1.929362,-2.474034,9.725227,-9.538099,1.911696,4.459161,0.846227,-2.692044,-1.111181,-0.368440,-7.620504,-2.489719,-1.951390,7.708058,5.070022,-0.599356,2.862258,-7.785566,9.390571,7.979640,-1.249141,8.735299,3.511575,6.905179,0.854535,-9.245346,6.879896,7.491028,0.341758,0.136253,-9.831021,4.475630,-5.880394,-5.348403,-0.614301,-8.565663,-4.161192,0.020362,-9.125407,-6.678447,-5.922528,3.374645,2.138904,6.732498,6.791371,8.824932,-6.069127,9.645538,-3.182932,-2.427286,-8.947737,2.050479,3.468298,-2.479388,6.321455,9.416816,1.754758,5.272095,5.844527,0.648472,7.361329,-5.642291,8.826311,-7.185347,-0.051392,-1.044204,-5.195456,2.699584,-8.000329,1.831041,-4.518501,8.887236,1.354875,0.734005,5.556213,2.179979,2.999608,-7.368802,9.050464,0.268224,-5.674087,-6.409698,0.852018,-8.433464,5.888863,-3.097822,-9.564377,5.591591,-6.825740,-9.942672,2.773945,8.753881,4.368206,3.520681,-1.232979,-0.528591,1.481801,2.928731,5.490474,-6.300474,0.229780,-9.550837,9.247606,9.502624,-0.802928,9.023698,1.416527,2.397297,3.869686,-4.847799,5.164163,-2.410626,8.507609,0.990146,3.523476,-0.416869,-9.195993,-5.744617,-4.847595,-7.029400,6.164223,4.778887,-1.087692,7.862821,0.547349,9.958694,8.908846,1.400333,-0.787471,2.344564,0.830303,-0.594493,-6.891934,3.747864,1.569421,-5.539176,3.311000,0.903540,-6.704294,3.416529,-9.625665,-4.774992,-1.761262,4.609179,-0.798387,-9.977298,-5.335468,-1.696800,9.393813,4.513794,7.656921,6.532714,4.377867,-5.243641,-4.944186,-7.898795,-7.099124,-5.718626,-5.162823,5.724101,-2.457712,-8.791982,2.991060,9.295506,-5.426655,2.216266,-6.397381,9.879900,2.548664,5.638949,4.247364,0.022511,-2.942309,9.193946,6.137841,-7.023438,-0.020837,-8.683963,8.182349,5.606749,-1.638919,4.572855,1.955791,5.857805,-4.460626,-3.115157,-7.120182,7.231161,0.537940,9.617778,-4.497169,-1.467939,7.138202,-8.685481,2.166373,-3.021456,-5.448235,-8.706667,-5.526152,-3.713187,9.354072,9.155138,-1.495148,-0.371584,3.565589,-5.013531,0.341087,-8.048806,6.991013,6.796457,-1.318008,2.750396,6.351784,0.214792,6.621637,-3.498875,-6.765366,-6.968934,9.752663,7.239183,-2.295434,-0.653498,-2.926851,-0.639499,3.398993,-5.592354,-3.617478,-1.429479,-8.963264,5.809336,7.393817,-8.295944,4.446743,6.933295,1.883987,8.612024,-4.362602,-1.245920,2.537483,0.076903,-4.957610,-0.376544,0.902980,7.914678,-0.494383,4.545732,-0.731056,-9.750479,-1.974261,-5.646146,-4.083631,2.596304,5.466487,6.641197,6.348480,0.502693,8.583812,-0.490857,-5.849001,-3.359422,-0.997190,4.223066,2.366584,5.467461,3.408014,2.732335,5.983668,-0.607183,-7.398882,5.395290,-5.098973,-8.383244,6.566908,-7.975947,-2.220795,-7.482957,-1.960714,9.732231,4.399626,8.320732,8.106017,-3.745335,-0.198760,5.242158,5.279361,-6.314049,-2.130829,2.095270,6.183396,3.897172,-7.629436,-5.703622,1.048294,-7.555900,-9.363650,6.832104,-4.525896,0.198102,8.251969,-1.234233,0.359648,-4.669955,5.809452,1.257639,-4.462672,-6.911908,3.937419,6.999735,-9.862475,6.272123,-5.654068,-7.891277,2.820921,9.753470,0.111171,5.465935,-8.788468,-8.304568,0.943740,-1.876531,-9.318201,-1.693348,4.414965,5.235208,1.673211,6.900956,3.491721,-5.042578,4.315228,8.811405,6.909374,9.498314,6.449523,5.001583,-5.222322,-9.075703,-6.730623,-0.123977,-7.284747,-1.353345,-8.042886,0.116791,4.679873,-2.165629,7.925871,5.932078,-3.070610,-1.819564,-1.711178,-8.243529,7.732742,-4.820677,0.583084,-7.220573,-1.495672,5.021044,-6.792956,-0.978543,1.947769,-5.893449,6.677542,5.026714,-2.402421,6.464950,-0.837428,4.681413,-9.684787,8.860704,-7.872350,4.538401,-1.310360,-8.338630,-4.351296,9.631544,0.523399,-7.877511,5.426420,1.547561,-3.173093,6.614611,-1.321581,-0.291095,-1.099996,8.686670,1.977172,7.725282,1.482772,-0.461133,-2.248725,0.247500,3.064109,-4.778216,-1.098457,5.112868,-1.700182,9.402882,4.368247,2.655260,2.114295,0.139611,-1.600989,5.104933,-1.104184,4.024393,8.573600,-4.585121,-1.573046], dtype = "float64")#candidate|9076|(2535,)|const|float64
call_9075 = func_3956_call(relay.reshape(const_9076.astype('float64'), [13, 15, 13]), relay.reshape(const_9076.astype('float64'), [13, 15, 13]), )
call_9077 = func_3956_call(relay.reshape(const_9076.astype('float64'), [13, 15, 13]), relay.reshape(const_9076.astype('float64'), [13, 15, 13]), )
output = relay.Tuple([call_9066,call_9075,const_9076,])
output2 = relay.Tuple([call_9067,call_9077,const_9076,])
func_9083 = relay.Function([], output)
mod['func_9083'] = func_9083
mod = relay.transform.InferType()(mod)
output = func_9083()
func_9084 = relay.Function([], output)
mutated_mod['func_9084'] = func_9084
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5738_call = mod.get_global_var('func_5738')
func_5740_call = mutated_mod.get_global_var('func_5740')
call_9085 = relay.TupleGetItem(func_5738_call(), 2)
call_9086 = relay.TupleGetItem(func_5740_call(), 2)
func_4366_call = mod.get_global_var('func_4366')
func_4369_call = mutated_mod.get_global_var('func_4369')
const_9093 = relay.const([1,2,-9,6,8,7,1,-8,6,2,-1,5,-1,-1,8,3,-3,5,-6,10,-7,1,-6,-6,7,6,-6,1,9,-6,-2,-8,-4,9,-6,-5,7,-8,6,-5,-3,-10,5,6,-5,-1,-1,-6,-4,4,-3,10,6,-2,5,5,10,4,-9,7,3,5,-9,-7,-5,2,2,7,-3,10,8,-3,-3,4,-9,9,1,6,-4,-4,7,-6,-9,7,-4,9,4,-10,10,2,5,3,-3,7,-3,-6,-6,-9,5,-6,-5,-3,-8,8,7,9,-1,-9,3,-4,4,7,2,4,2,-10,-8,5,-6,-5,-3,4,-9,8,8,8,-2,1,-1,-5,6,9,6,9,9,4,8,-5,2,9,-5,-9,2,-5,4,7,3,5,1,1,8,1,-5,5,10,-5,-10,4,-4,-4,-8,2,8,1,1,-9,-7,-7,7,-10,-3,-3,-9,5,-7,4,2,7,3,-1,-9,-3,3,1,-1,8,-5,-9,2,-8,4,6,-7,-10,-10,5,1,8,-8,-5,-1,5,6,8,7,-8,-9,-1,-9,9,1,-1,-3,-8,9,10,-8,5,8,-3,1,-5,8,-9,6,8,-3,10,7,7,-1,5,-1,-3,-6,-3,8,7,6,4,-5,9,-9,-4,-7,4,7,7,-2,8,-7,-4,10,2,9,-2,-6,4,2,-4,6,-8,9,-10,6,-10,-10,-7,-6,-8,4,-1,3,-8,3,3,-1,-2,-6,3,2,-4,-8,3,-1,10,3,6,9,10,-5,1,3,6,8,3,3,-2,-10,4,8,-7,-5,8,6,-6,-10,-6,-10,6,4,-10,7,-7,-7,-8,-6,7,-9,-5,-2,7,10,8,-10,10,4,-10,-1,7,9,-4,-4,8,7,-8,6,4,-3,-6,7,-4,5,1,2,-6,7,5,5,5,-9,-5,-10,-1,-3,3,-4,-2,-2,6,5,4,4,-3,5,2,-1,-6,-8,-4,-5,-3,-6,5,8,-2,5,-6,5,9,7,1,10,3,-6,9,5,-8,4,1,-9,6,-10,3,4,-5,-3,3,8,1,2,-7,1,10,-3,9,7,-3,10,2,10,-6,-8,8,2,1,-9,-1,-6,-6,-5,10,-4,6,-3,-9,10,5,4,-5,3,2,-6,2,5,2,7,-9,7,7,6,10,-1,3,8,-4,5,3,-9,3,5,4,-7,2,-10,1,-5,3,8,3,-5,-5,3,10,-4,-7,-8,10,-6,9,-3,4,-3,-6,-5,7,8,-8,1,-4,-3,-4,2,8,10,5,-10,-3,-6,-8,-10,10,-8,-8,8,-3,-4,6,1,-5,-3,-4,7,-10,8,3,2,5,-2,8,-6,-3,-8,-6,2,1,10,-10,5,-2,-7,-1,8,8,1,-10,-7,-5,3,-5,5,-2,-1,3,-4,9,10,10,-7,6,6,-3,10,-9,3,9,10,-2,4,7,10,1,7,8,2,2,-1,-3,4,5,6,5,5,-8,-1,-7,2,-3,-9,-3,-4,-1,1,-9,5,-2,7,-8,-5,1,1,8,-8,-4,-9,-10,-3,1,4,-9,-3,-2,8,-5,8,8,-4,5,-7,-10,6,-1,-10,1,4,5,-10,-10,-8,-3,10,8,-10,-7,1,-3,-7,8,-9,-3,10,10,4,-2,6,-9,-9,-10,9,5,-5,9,-3,1,-7,-4,-10,-8,-6,-7,6,-7,-2,-3,4,-2,-4,-1,9,10,-6,-4,-7,-3,3,-5,5,-1,9,-7,-1,2,-10,-4,-4,-5,-7,7,1,8,9,10,-5,10,-6,7,-7,-3,-1,-6,-9,5,1,-9,1,6,-1,5,-9,10,-3,-1,7,9,-8,4,7,-3,-1,-1,-2,-4,3,-10,4,6,-10,-10,-10,4,-4,-7,-8,-1,5,-1,1,1,-5,-6,5,-6,2,10,3,-2,-4,9,-1,1,4,-4,-7,1,-10,-1,-3,-7,-3,7,-3,-4,-7,-9,5,6,-1,-4,-7,-2,-4,-1,-10,-9,5,8,4,7,4,4,5,9,-10,6,-10,6,9,-10,-6,-9,-7,-1,10,-6,5,4,-10,5,7,-1,10,-2,5,-8,-3,3,8,2,-1,10,8,5,-8,10,-4,2,-6,-4,6,-3,-3,-10,-8,8,-1,-7,-4,-7,-5,-8,5,4,4,-6,2,-9,6,5,-2,-5,-3,1,7,10,6,10,7,7,-3,-10,-2,9,10,2,-9,4,1,9,-7,7,-6,7,2,5,-6,-8,5,6,5,7,5,8,-9,4,-8,1,10,7,1,5,8,6,5,1,10,-6,1,2,2,8,-7,-4,-7,8,5,-3,-9,8,-1,-3,-7,7,-2,-10,5,4,6,-8,1,1,9,10,-3,1,-7,6,-3,4,1,10,3,-7,-2,-4,-1,10,6,-6,-10,6,1,-5,-8,10,4,-7,-3,-8,9,9,-6,10,1,-5,-4,2,5,-2,8,-2,1,1,-4,-1,2,5,-1,2,-2,4,-7,3,-2,5,-6,-2,6,5,4,-3,7,6,4,9,2,3,-8,1,1,1,1,-6,-9,-7,6,3,1,-1,-5,10,-4,7,7,-3,2,-6,9,3,3,-3,1,2,5,-6,4,10,-9,1,4,6,7,-2,4,-6,-5,-5,7,10,-3,-2,2,-6,-10,-9,-10,-2,-7,-5,10,-9,2,-3,3,1,-10,4,7,-3,6,1,6,-7,10,3,5,4,8,-6,-9,-7,-2,-2,-1,-7,-8,-7,4,7,-5,-1,-4,10,2,-3,3,-9,2,-5,8,-2,-10,9,2,-5,6,-9,-1,-2,-3,4,-6,-4,-6,-1,-2,-1,5,-6,7,4,-9,4,2,-5,-3,-4,5,5,-6,8,-3,-2,-10,-5,-10,-8,4,3,2,-10,8,-1,-9,-4,7,6,-2,10,5,-7,-4,7,9,-3,-5,-3,4,-6,2,-1,4,1,-4,-6,-6,-5,7,10,2,-6,-4,-2,7,-5,-9,-10,-4,9,-3,10,-9,10,8,4,3,7,-1,10,-8,-6,1,-2,-8,6,7,1,-10,-3,-2,8,-7,3,-5,-7,-7,-10,1,-5,4,-10,-7,8,-1,8,6,-9,3,2,-6,-3,-3,3,-6,5,-2,-10,8,-10,8,4,-6,-8,6,8,-10,7,7,-9,10,2,9,-3,-1,5,1,-3,2,-7,-3,2,-8,-9,9,-8,2,-1,4,-7,6,-6,3,3,1,8,5,-9,9,7,-4,8,-7,-6,-2,-7,8,5,-3,1,-10,-9,-6,-9,-4,4,-1,5,-1,10,5,4,-1,7,1,9,4,6,4,-9,-10,-8,7,-3,-4,4,10,-5,8,4,-9,-9,-1,-6,-10,3,8,-5,5,-3,-8,-8,-4,-9,6,-4,-10,-7,9,6,-8,9,2,-9,1,6,9,-10,-1,-9,-4,-10,-5,-5,-2,-4,-2,6,-9,1,-9,9,-4,-2,8,10,4,8,10,-4,4,3,-10,-8,-4,-9,7,-10,7,-6,5,6,-7,-9,-8,9,2,6,1,-1,4,-7,-7,3,-10,6,-6,-5,9,-2,-8,6,3,1,7,-8,-1,-5,-1,-2,-9,6,-3,10,8,6,1,7,-6,-9,-2,6,-1,4,1,-4,-4,-6,3,8,6,-7,-8,4,-3,-8,7,8,7,1,-6,6,7,-7,-8,2,-9,-4,5,10,8,-3,-4,-4,-3,-6,-1,-10,-6,9,-4,-9,-1,-1,-10,4,-10,4,10,-4,-2,1,-5,-2,-2,5,1,10,-9,-8,-3,-9,-1,-9,-1,-1,5,6,7,-9,8,-2,9,1,-4,-9,3,-3,8,-3,-7,2,8,-10,-8,3,-6,-5,8,3,6,10,7,-2,-7,4,3,8,5,-6,8,9,6,-8,-1,-8,-2,-6,4,-6,5,7,-7,9,2,7,7,-5,-1,9,4,8,-6,7,-2,-2,-2,-5,5,-2,-3,8,-4,-5,6,6,-9,-7,7,-4,-6,6,-7,-8,-6,9,9,9,2,10,-6,-7,-1,10,8,-6,2,2,-4,-4,-3,10,-2,-7,3,-10,4,-3,-4,4,9,-6,-2,4,1,6,9,-5,-5,5,2,6,-5,-10,4,-2,-3,-5,1,3,-7,5,7,9,4,9,-9,9,-3,-6,-6,1,-9,6,-6,-1,2,-9,5,2,-1,-5,-5,6,-5,7,1,1,-4,1,10,5,7,10,3,3,-2,-6,-3,6,-5,1,1,-7,1,-9,1,2,1,9,-5,-9,1,5,-8,-1,-4,-8,-4,-3,6,-5,-5,2,-10,-9,-5,1,4,7,-7,-4,3,-7,10,2,-10,-10,6,3,6,1,2,7,-8,-5,-7,5,2,4,1,-5,-5,-8,-8,-8,-4,-6,-1,-10,9,5,6,-3,1,8,5,5,-8,-2,-3,-3,-1,1,3,-2,-9,-10,6,-3,3,1,5,-2,6,-3,6,7,-4,9,10,-2,8,-5,-5,3,2,-10,7,-1,-5,3,-10,-7,9,-4,9,9,7,-4,-4,4,1,4,3,-3,2,10,-6,-8,4,5,9,-3,-10,1,-3,2,9,2,-1,-10,10,-7,-8,-1,-9,6,-2,4,-5,8,2,-2,7,-10,-8,3,2,-4,7,3,-4,3,7,8,6,9,-9,6,-6,6,9,-2,1,9,3,-3,-10,-5,-8,8,10,-10,10,-6,-2,-2,2,-10,-2,-1,3,-6,-2,10,3,-2,7,3,-7,6,1,-8,2,6,-9,2,10,-4,6,-2,2,-3,7,-6,7,4,10,1,-2,-7,-3,-4,5,-5,4,10,-3,-4,-9,3,-4,3,8,7,10,-4,1,6,-8,6,10,7,-1,2,-3,5,3,-5,-10,3,-6,-5,-5,-4,-3,2,-8,-7,-1,-8,-5,4,-9,-8,-3,2,-8,-6,-9,-5,-1,-8,-7,8,5,2,9,7,-7,8,6,9,7,8,-6,-8,1,5,-2,-5,1,6,-3,7,-10,2,-6,-1,-6,1,-3,6,7,-1,8,-8,1,-8,-9,-8,1,6,-1,-4,-7,7,-6,-3,8,-3,-7,-3,7,7,-8,4,7,1,-8,-4,-10,4,-6,2,-10,-10,8,-9,7,-8,3,4,-3,-5,-10,5,-2,7,-7,-3,3,-7,-7,3,-4,-8,-4,-4,-9,-7,2,10,-2,-3,5,-7,-9,1,-3,-9,9,4,10,-10,9,-8,9,4,-5,10,2,2,4,-5,-10,-5,-2,2,-7,10,2,-6,8,-2,-8,6,-2,9,-2,6,-1,-10,-10,-4,7,-4,6,9,1,-8,6,6,2,7,-10,-5,3,-3,-2,-9,-2,7,2,-1,-7,-1,3,-2,-5,-7,1,-7,1,-7,-6,1,9,8,-4,-8,8,-4,9,5,5,10,-8,-8,6,2,-4,-3,-1,-8,-10,5,-6,-10,-5,10,9,-5,6,5,-1,-7,10,-7,1,-7,2,10,1,2,6,-5,1,-9,-3,10,-1,-8,6,-3,1,-9,-2,-10,10,-6,-1,1,-10,8,5,7,6,9,1,1,4,6,1,-6,7,9,-6,1,-1,9,-8,3,4,-5,8,10,8,-7,-1,1,-8,7,3,9,-8,1,7,-7,10,7,-10,9,2,-6,-8,2,-1,9,8,7,6,-9,4,3,9,-1,6,6,5,-10,1,10,-10,6,-4,-3,3,-3,-9,-2,-6,-9,2,-10,-7,9,-4,-2,7,-4,10,-1,-9,-3,-3,-7,7,-3,1,-5,6,8,4,-4,-5,2,-6,-2,7,3,8,1,4,-6,7,-3,9,3,-1,-4,9,-4,1,10,-9,10,-1,-5,-2,1,-4,4,-8,-7,-8,-5,-9,2,7,7,-2,-5,7,1,-3,-1,-9,-10,-6,5,-10,-10,3,8,-3,6,-2,-10,5,10,-4,-4,-10,1,3,-9,-8,9,-3,1,-2,3,2,-6,-5,-4,9,-3,4,4,-1,8,4,-3,6,4,3,-5,9,1,-8,-6,-2,-6,4,-4,5,-6,-1,7,-1,9,-6,-8,-6,2,3,-8,8,1,-6,-9,-9,1,2,-9,-8,-8,3,-3,6,-10,5,3,-4,5,1,10,-7,-10,-8,3,-7,2,8,8,3,4,-8,9,-5,-3,-8,-6,5,-5,7,10,-2,4], dtype = "int64")#candidate|9093|(2310,)|const|int64
call_9092 = func_4366_call(relay.reshape(const_9093.astype('int64'), [15, 11, 14]), relay.reshape(const_9093.astype('int64'), [15, 11, 14]), )
call_9094 = func_4366_call(relay.reshape(const_9093.astype('int64'), [15, 11, 14]), relay.reshape(const_9093.astype('int64'), [15, 11, 14]), )
func_2406_call = mod.get_global_var('func_2406')
func_2409_call = mutated_mod.get_global_var('func_2409')
var_9097 = relay.var("var_9097", dtype = "float32", shape = (78,))#candidate|9097|(78,)|var|float32
const_9098 = relay.const([-0.950338,4.544269,2.157447,6.004190,-4.945969,3.502110,9.871365,-4.988021,2.412971,3.903763,7.428958,2.953261,-4.178413,-0.503653,-9.903976,0.417556,1.382179,3.798789,-0.396595,-3.069209,7.388164,-9.088287,8.441185,-1.312799,-0.322235,1.906399,-3.656096,4.475142,9.102148,-0.293260,-4.669060,-1.005414,-7.149996,2.679852,-3.752373,8.428372,9.985961,-6.007568,-6.751563,5.760393,3.022493,-8.781350,-6.746044,-9.430591,-4.296734,3.092413,-3.837837,-6.897899,8.447731,3.682238,-9.168889,6.959234,7.840289,-1.498414,2.411314,-6.052438,-1.405694,-1.589450,-6.512520,-0.232697,-6.536937,5.925265,6.595692,2.483935,2.623351,7.720223,-9.134975,0.919992,-2.111397,1.465345,-9.257235,-0.515820,5.829329,3.766766,1.415591,-9.766775,8.657325,9.110972,0.644511,7.071179,3.393582,-1.866621,3.089861,0.724096,-6.694063,9.111899,-2.424296,3.982476,0.587889,1.241921,9.271345,-5.447389,-0.148608,8.938281,-2.048684,-2.975225,2.004691,0.071096,1.938223,3.415114,-0.383658,-3.145384,-2.859394,-7.379339,-9.023676,5.499924,7.063811,-3.949907,6.951885,4.261637,-2.089942,1.375558,3.805414,-3.907811,-0.909243,-8.589167,1.776405,7.830974,-9.344457,2.505205,-2.478220,-4.605233,-5.003697,4.548744,3.836346,8.634937,-7.082188,8.097907,-4.310751,-2.668215,5.031180,9.791331,1.725346,5.366699,-0.622589,-2.700302,4.299675,-3.966694,0.152824,7.174775,-1.211072,-1.069604,8.689238,-2.147896,-8.237867,-3.256173,0.280457,-3.927551,9.306909,9.369312,-1.232396,-2.616891,-5.842151,9.195054,-2.814938,-3.354559,1.645860,9.438576,2.200353,-9.764027,6.867677,3.937439,-2.543570,1.937484,8.649879,3.758931,4.852987,7.754270,-4.115506,0.879886,3.860716,-7.872043,7.644885,-6.423886,5.604606,-3.972867,2.050416,-4.977152,7.451774,6.150016,-3.362778,-5.474441,-3.376321,5.496198,-6.489225,3.310245,9.650293,-6.793168,-8.749788,0.500298,-7.923620,-2.964179,1.065681,0.797323,-8.764165,-5.054347,-7.263821,-5.129739,-4.851931,6.709650], dtype = "float32")#candidate|9098|(200,)|const|float32
call_9096 = relay.TupleGetItem(func_2406_call(relay.reshape(var_9097.astype('float32'), [1, 13, 6]), relay.reshape(const_9098.astype('float32'), [200,]), ), 0)
call_9099 = relay.TupleGetItem(func_2409_call(relay.reshape(var_9097.astype('float32'), [1, 13, 6]), relay.reshape(const_9098.astype('float32'), [200,]), ), 0)
func_6144_call = mod.get_global_var('func_6144')
func_6145_call = mutated_mod.get_global_var('func_6145')
call_9103 = func_6144_call()
call_9104 = func_6144_call()
func_114_call = mod.get_global_var('func_114')
func_117_call = mutated_mod.get_global_var('func_117')
call_9116 = relay.TupleGetItem(func_114_call(relay.reshape(const_9098.astype('float32'), [2, 10, 10]), relay.reshape(const_9098.astype('float32'), [2, 10, 10]), ), 0)
call_9117 = relay.TupleGetItem(func_117_call(relay.reshape(const_9098.astype('float32'), [2, 10, 10]), relay.reshape(const_9098.astype('float32'), [2, 10, 10]), ), 0)
func_6995_call = mod.get_global_var('func_6995')
func_6997_call = mutated_mod.get_global_var('func_6997')
call_9118 = func_6995_call()
call_9119 = func_6995_call()
output = relay.Tuple([call_9085,call_9092,const_9093,call_9096,var_9097,const_9098,call_9103,call_9116,call_9118,])
output2 = relay.Tuple([call_9086,call_9094,const_9093,call_9099,var_9097,const_9098,call_9104,call_9117,call_9119,])
func_9136 = relay.Function([var_9097,], output)
mod['func_9136'] = func_9136
mod = relay.transform.InferType()(mod)
mutated_mod['func_9136'] = func_9136
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9137 = relay.var("var_9137", dtype = "float32", shape = (78,))#candidate|9137|(78,)|var|float32
func_9136_call = mutated_mod.get_global_var('func_9136')
call_9138 = func_9136_call(var_9137)
output = call_9138
func_9139 = relay.Function([var_9137], output)
mutated_mod['func_9139'] = func_9139
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5517_call = mod.get_global_var('func_5517')
func_5519_call = mutated_mod.get_global_var('func_5519')
call_9149 = relay.TupleGetItem(func_5517_call(), 0)
call_9150 = relay.TupleGetItem(func_5519_call(), 0)
func_6920_call = mod.get_global_var('func_6920')
func_6921_call = mutated_mod.get_global_var('func_6921')
call_9154 = func_6920_call()
call_9155 = func_6920_call()
func_4366_call = mod.get_global_var('func_4366')
func_4369_call = mutated_mod.get_global_var('func_4369')
const_9174 = relay.const([9,-9,-9,-1,6,-1,3,9,6,-10,-7,8,3,6,-1,7,1,7,7,-7,1,5,7,-9,-1,-7,-7,4,9,3,4,-2,-6,-5,10,-5,1,2,-6,-10,-1,-3,-4,-10,8,-4,3,-9,8,1,7,6,8,7,-2,10,4,4,4,-10,7,-7,2,9,-10,-8,8,7,6,1,9,-1,-7,-10,1,5,3,-8,6,5,-10,4,-8,6,-5,10,-8,-6,10,-8,-5,10,-5,-3,8,8,10,7,-3,2,10,1,-6,7,-4,-6,-7,8,-7,-2,8,4,-2,-8,6,2,-3,-5,9,-3,-6,3,-7,7,2,10,1,-2,7,-9,-1,10,-3,2,-7,-6,-8,-10,2,9,-9,5,-5,5,8,-6,5,2,-10,-10,1,-4,7,-4,-1,2,-1,10,-6,9,-8,-3,-10,-1,-1,-9,-6,-1,-7,9,-7,-6,10,6,10,9,10,-3,9,3,2,2,5,1,6,9,-1,-2,10,8,-5,2,-1,6,-6,7,10,-7,3,-8,6,-2,2,-1,-6,-4,7,4,10,7,-10,-5,-6,-7,10,7,3,-6,-7,-7,5,-2,9,10,8,7,-2,10,7,-6,-3,5,-4,10,6,-4,1,3,4,1,-1,-1,5,10,9,10,-10,-9,-4,4,8,-2,4,1,1,1,4,-6,3,2,-3,-3,5,-5,-1,-10,-9,-8,-10,-2,-4,-4,4,7,5,7,-10,-10,4,-4,6,-4,6,9,-4,8,3,6,9,5,1,-1,4,-7,-9,-3,-7,-2,-2,1,-2,-4,1,4,-3,6,-1,-6,10,-3,-4,-2,7,6,-4,5,-5,5,-9,8,6,-6,10,-3,-5,7,-5,2,4,-1,-6,6,-5,9,-10,6,8,-6,-3,-9,5,10,7,-2,-2,9,9,-1,-10,10,5,7,-9,-4,-2,-3,-8,-7,-8,6,-1,-10,-2,-7,-9,-4,5,10,4,8,-6,3,5,7,-8,-3,-7,1,4,-4,7,9,-9,7,4,1,6,2,-1,-5,3,8,-3,-1,-7,1,-5,5,1,9,-7,5,-4,5,7,4,9,10,-3,8,10,-3,2,-10,1,-8,10,2,-10,1,8,-7,-9,9,-2,9,8,6,1,-1,-5,-3,-2,-1,3,-2,-7,-7,10,8,5,-3,-1,-3,4,5,4,-6,-2,-1,-1,7,3,-6,-2,-4,-2,-1,5,5,7,9,-9,-8,-4,-7,3,4,-8,1,-5,-8,-2,-9,-3,4,-6,3,-8,6,1,8,7,-10,-4,-4,5,-7,-3,4,3,-9,-3,-4,-3,-4,6,-8,3,8,8,8,8,-2,2,-10,-6,-3,1,-9,-2,9,-4,-10,5,-8,-2,10,-10,2,10,6,-8,6,-10,4,-9,-9,9,2,9,-9,-6,10,1,9,-3,9,6,1,-10,8,-7,2,6,10,-6,6,-5,-10,-10,10,-4,7,2,-5,-4,-2,10,8,10,1,6,9,-4,10,6,9,6,-9,3,-3,-7,-9,10,2,5,7,-1,-1,-7,-10,10,4,-7,-6,-7,9,-5,10,6,-7,-7,10,-3,4,-3,-3,-6,-9,-10,-5,-6,-2,3,-6,5,-1,8,-10,-4,2,-9,-2,-2,9,-8,10,9,4,-3,2,-4,10,-6,-6,7,8,3,-2,-3,-10,5,4,9,7,-8,1,2,7,-4,-8,1,8,8,-2,2,1,-9,3,-10,-3,9,-4,7,-1,-4,-3,-7,-2,10,-5,5,10,-10,3,3,-10,-2,-3,6,10,-3,9,-2,6,-5,6,6,4,-9,5,5,-4,10,5,-1,7,8,5,-5,3,1,-9,-5,2,10,-8,3,-3,9,-8,-3,-6,1,10,-2,5,2,10,-7,-5,-10,-3,7,7,-3,8,-1,4,8,7,9,-5,6,-10,8,9,10,-4,-7,5,-9,6,7,-2,-6,-7,3,-5,7,-3,5,-4,5,4,-8,-3,-9,-7,-1,-5,1,1,6,-4,-5,8,10,-5,-10,6,7,7,10,-4,6,-7,3,-1,-8,-2,4,3,1,-9,-6,-3,6,-10,-5,-7,-6,-7,4,6,5,-3,7,2,-3,-3,10,5,-7,2,9,-4,-6,2,9,2,-7,2,2,-3,9,-7,3,4,-4,3,-8,6,6,-3,-7,8,1,-9,-5,9,8,10,-7,1,-3,-5,-1,-6,-3,1,-6,-6,-8,10,-7,7,7,9,6,-5,6,9,-3,4,3,-7,-4,-6,8,-8,-6,-10,-6,7,9,-10,-2,-2,-5,-4,-10,9,-4,10,2,-6,-5,-3,7,3,-2,1,-4,-2,9,-7,-6,5,-1,3,5,4,-8,-2,-9,-1,10,6,4,2,5,-4,-6,-1,6,-2,5,-10,5,6,-1,-4,8,6,9,7,9,-4,-2,4,1,6,2,-7,-10,-8,1,-1,-3,10,4,3,-1,-8,2,-9,-8,8,-3,-6,1,5,7,8,-4,1,8,-3,10,1,5,-6,-7,4,3,-6,-7,6,-8,3,5,-1,-7,3,10,-1,6,-2,6,-2,8,-3,8,9,6,-9,6,-5,8,2,3,-3,-3,-9,-10,7,-8,3,2,3,1,-8,-2,2,2,-8,-7,4,-7,-6,6,5,6,2,-7,3,-7,-9,-3,-10,2,9,-10,-9,6,6,-1,-7,-8,-4,-4,-6,-7,3,-5,6,-3,-9,8,10,5,7,8,2,3,-2,4,-1,5,4,6,-7,5,-4,4,-8,-9,-5,-10,-2,7,-1,5,2,7,8,-6,-4,3,-5,-1,5,9,-8,1,2,-5,-8,7,10,8,9,5,4,-9,-4,-3,2,-1,10,10,9,-9,6,7,-1,-6,-8,4,-8,2,-5,2,-6,6,4,-10,-3,-10,-4,-7,-1,-5,-5,-2,4,-6,8,6,3,-1,-10,-2,9,-2,-10,-10,-3,1,-6,2,6,8,-7,7,6,9,-9,7,-4,3,-9,8,-9,-1,-3,-6,-10,-2,-7,-7,8,-9,6,5,6,-5,-2,-10,-1,6,1,-4,6,-7,6,8,-7,-1,2,4,-5,-6,3,5,-4,-9,-5,-7,10,4,6,-2,-8,10,8,-1,-5,7,2,4,-7,2,-6,2,10,2,9,-1,-6,10,-4,-6,-7,-9,-8,-6,3,-6,-8,-5,-8,6,-2,8,-9,3,-9,-4,-3,-7,3,-6,3,7,4,-8,2,2,3,3,8,5,4,-4,-2,10,4,4,-9,7,-7,-8,10,-3,9,5,2,3,-9,5,-7,7,-2,-9,3,6,4,9,1,-7,9,-8,-1,-1,1,2,-2,1,1,4,-7,-4,-2,5,6,-6,5,10,-8,-6,8,8,6,-1,-1,-1,-5,9,9,-3,-7,1,-6,8,1,-2,10,6,-9,-3,4,-9,6,-8,-4,-9,1,-5,-1,8,6,3,-10,-2,-8,9,6,2,-6,8,-1,-2,-8,-9,7,5,9,-9,-6,10,-7,-7,7,-6,2,-4,4,-7,-1,3,4,-3,-5,6,5,-7,-6,-5,4,7,-7,10,5,4,-4,5,-7,2,1,7,-5,8,9,-4,5,10,10,-3,-7,-10,8,-10,-6,-8,2,4,-10,-7,-8,-3,-2,-6,2,7,10,2,-5,-2,-5,-9,-8,4,-7,-6,-4,9,1,-8,7,-4,-3,3,-9,10,-7,-2,-1,-2,1,-3,-8,-1,-10,-4,2,-3,4,-4,3,8,-2,7,-1,4,-9,-7,1,-6,4,-9,-9,3,10,-8,-3,7,9,1,-2,-1,3,-8,3,7,-5,6,-9,-7,8,4,-2,-7,4,2,-4,-7,-1,3,-8,-3,-7,6,2,6,9,-1,2,5,-7,-10,-9,8,-1,-4,-3,3,-10,7,4,-1,-3,5,2,1,-6,10,9,5,-3,10,-10,6,-2,9,4,9,4,-5,4,6,9,5,-6,-8,1,-4,1,-10,-1,-6,-1,-4,-9,-1,-7,10,3,-3,-8,-9,-1,2,1,4,3,8,-5,10,3,6,6,-5,-3,-9,1,10,3,5,-5,7,-7,3,7,-7,-5,-10,8,2,-4,-2,3,9,5,-9,1,10,2,3,7,10,10,4,5,-9,9,6,-5,-5,8,-3,-1,-10,-6,-4,2,6,-4,-2,-6,-10,4,4,-10,2,-6,-9,-5,2,4,4,-10,10,1,-4,4,-10,7,-8,7,-5,2,-10,4,10,-5,-4,7,8,-5,-4,6,7,-10,-10,-4,9,-10,-5,-8,2,1,8,-1,5,1,-5,3,-2,-9,-9,-9,9,7,4,10,1,-2,-9,-7,9,4,-5,-7,10,-9,-9,1,-8,5,-6,-7,-8,5,-4,-4,10,-8,-6,4,-1,7,3,-7,6,2,6,-8,8,4,4,4,5,-1,-7,7,9,-7,3,3,5,-1,5,-7,-3,-7,-8,-2,-5,6,-7,-9,8,-9,9,2,9,6,5,9,4,-4,10,-5,-9,6,-3,-2,-2,-2,5,4,-9,8,-4,1,-6,10,9,1,-6,3,6,10,8,-9,-8,-7,-5,-1,3,-9,-7,4,-2,-3,4,8,3,7,10,4,-1,6,-5,7,9,6,-2,-1,7,-3,-1,-10,6,6,5,5,9,2,-10,-4,2,6,-2,8,-2,10,-1,10,8,-5,-3,9,-4,10,7,-5,-3,2,-10,3,-1,-7,-3,-10,-10,6,-7,-9,-3,7,2,10,4,9,2,8,-6,6,2,10,10,9,-10,-8,-7,4,8,-3,6,10,7,-3,-3,-10,-4,-8,8,-2,6,-3,9,-2,-1,-3,8,-7,9,8,9,-6,-2,-7,-2,1,3,10,-9,-10,7,9,5,2,6,-8,10,5,-10,2,-3,9,5,9,2,-8,3,6,-3,-3,-10,1,-5,-10,1,7,5,2,-5,-7,2,-6,1,2,2,-3,6,-10,2,-8,-4,-9,-4,2,-3,6,4,-10,-6,1,8,10,-7,9,-2,2,-5,-8,1,-8,-9,-10,8,8,-2,4,2,-8,-4,-8,-3,4,-3,-4,-2,-1,-7,-4,2,-1,-10,8,10,-2,-10,-3,-3,2,-1,2,-9,4,7,2,-1,-8,9,4,-2,6,-7,7,-7,-9,5,2,6,9,6,-5,-6,10,8,5,-10,-2,-1,10,7,-8,1,-6,8,10,-9,-2,9,10,-6,7,-9,5,-7,-8,2,-7,-6,10,10,-9,-9,6,3,-5,-5,4,-1,-4,4,5,7,-9,-6,-10,-10,-7,-2,-7,1,5,-4,9,-10,6,-4,1,10,6,-10,-4,7,-9,4,-3,8,2,7,-9,-2,-2,-3,-8,3,-1,-2,3,-6,-6,10,7,9,2,-9,-4,6,-7,-9,2,-1,-2,7,10,-10,4,-10,-8,8,-5,-10,10,-5,5,-4,-5,-1,7,6,1,-6,6,6,2,-3,-5,-8,-1,3,-8,-2,-1,-1,10,6,3,-6,7,-2,-8,-8,10,-7,8,4,7,10,-10,6,10,1,3,2,-1,-9,-1,-1,2,1,-10,-7,-2,2,-1,10,-10,5,-10,3,3,-10,8,5,-3,-1,1,7,8,5,-10,1,8,3,-4,9,10,-4,-5,10,5,-9,1,10,-7,-7,2,7,3,-7,-8,-6,6,-7,-1,8,-8,4,3,7,1,-5,1,2,-3,10,-3,-10,-8,-1,5,7,-6,-3,7,7,3,10,5,7,-8,1,-5,4,1,-6,-5,-10,-4,-10,-2,-8,10,-8,-7,-4,3,-10,-10,4,10,-8,3,-5,-10,7,-1,-8,2,-5,2,-7,7,-3,-10,8,9,6,-3,-10,-8,-4,3,-10,-7,-7,6,-4,-9,-10,4,-10,4,-4,9,-8,10,-5,-6,-9,2,4,9,-1,-2,9,10,8,7,1,-7,-2,2,1,2,3,-5,-2,-2,3,7,-2,3,-1,4,-8,-10,8,-10,10,-9,8,9,-8,-4,-6,3,7,8,10,-9,-4,9,-3,-3,10,5,5,9,-6,6,-3,-8,7,-10,9,-5,2,-7,4,-5,3,4,7,-3,4,3,-8,-2,8,-4,-5,1,5,-10,7,3,7,-10,-9,-7,2,-4,10,7,-10,-4,8,-10,-3,-1,-6,-2,2,-9,-5,-5,6,-9,-7,-4], dtype = "int64")#candidate|9174|(2310,)|const|int64
call_9173 = func_4366_call(relay.reshape(const_9174.astype('int64'), [15, 11, 14]), relay.reshape(const_9174.astype('int64'), [15, 11, 14]), )
call_9175 = func_4366_call(relay.reshape(const_9174.astype('int64'), [15, 11, 14]), relay.reshape(const_9174.astype('int64'), [15, 11, 14]), )
output = relay.Tuple([call_9149,call_9154,call_9173,const_9174,])
output2 = relay.Tuple([call_9150,call_9155,call_9175,const_9174,])
func_9176 = relay.Function([], output)
mod['func_9176'] = func_9176
mod = relay.transform.InferType()(mod)
output = func_9176()
func_9177 = relay.Function([], output)
mutated_mod['func_9177'] = func_9177
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6144_call = mod.get_global_var('func_6144')
func_6145_call = mutated_mod.get_global_var('func_6145')
call_9189 = func_6144_call()
call_9190 = func_6144_call()
func_9064_call = mod.get_global_var('func_9064')
func_9065_call = mutated_mod.get_global_var('func_9065')
call_9192 = relay.TupleGetItem(func_9064_call(), 0)
call_9193 = relay.TupleGetItem(func_9065_call(), 0)
output = relay.Tuple([call_9189,call_9192,])
output2 = relay.Tuple([call_9190,call_9193,])
func_9204 = relay.Function([], output)
mod['func_9204'] = func_9204
mod = relay.transform.InferType()(mod)
mutated_mod['func_9204'] = func_9204
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9204_call = mutated_mod.get_global_var('func_9204')
call_9205 = func_9204_call()
output = call_9205
func_9206 = relay.Function([], output)
mutated_mod['func_9206'] = func_9206
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6553_call = mod.get_global_var('func_6553')
func_6555_call = mutated_mod.get_global_var('func_6555')
call_9238 = relay.TupleGetItem(func_6553_call(), 2)
call_9239 = relay.TupleGetItem(func_6555_call(), 2)
output = relay.Tuple([call_9238,])
output2 = relay.Tuple([call_9239,])
func_9242 = relay.Function([], output)
mod['func_9242'] = func_9242
mod = relay.transform.InferType()(mod)
output = func_9242()
func_9243 = relay.Function([], output)
mutated_mod['func_9243'] = func_9243
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5215_call = mod.get_global_var('func_5215')
func_5217_call = mutated_mod.get_global_var('func_5217')
call_9270 = relay.TupleGetItem(func_5215_call(), 1)
call_9271 = relay.TupleGetItem(func_5217_call(), 1)
func_4366_call = mod.get_global_var('func_4366')
func_4369_call = mutated_mod.get_global_var('func_4369')
const_9282 = relay.const([[-4,9,-10,-4,6,1,2,-8,5,3,-6,-6,-7,1,-1,-3,1,-1,-1,-6,-10,-2,1,7,5,9,9,8,-6,-4,-9,2,-1,10,5,-10,3,1,-4,-1,-8,-10,8,5,-8,-1,-7,8,-5,9,-4,-6,3,-2,6,5,4,3,3,5,6,-10,-6,-1,7,-2,-1,8,6,8,-3,-7,8,8,9,-5,-7,8,-3,6,-10,-1,-7,-2,10,6,-5,-10,-7,6,-2,-1,-8,-4,-1,-3,1,2,6,2,6,-9,4,-5,8,7,2,8,-10,-3,7,9,-1,-7,-7,-2,10,5,1,-7,1,6,3,-5,8,-3,5,2,-5,2,-9,-6,-6,-3,2,3,-3,7,4,-10,-2,-7,6,-3,-8,4,9,-6,-2,-9,6,-10,-2,-4,10,9,6,-9,5,3,6,1,-7,2,6,8,5,3,-4,4,-3,-8,-6,1,-8,5,2,-3,6,2,9,6,-5,-3,-7,5,-9,9,9,-9,6,4,3,-9,-3,1,-9,7,-3,5,5,-10,-2,-2,-10,-1,-6,-4,-2,-5,4,-8,10,-8,-4,-5,-2,5,-7,-6,-9,-3,2,1,-4,1,-2,-10,-4,9,1,1,10,-9,5,4,-2,7,8,-8,-6,-10,-9,3,9,3,6,3,-10,-5,-8,8,-5,6,5,-6,2,-1,6,-4,6,7,1,-1,4,7,2,4,4,-3,-1,-2,-6,-5,7,-7,7,6,-6,1,1,-2,5,2,-3,8,7,10,-1,6,-6,-10,9,-3,10,-4,1,-6,1,6,5,1,-6,-5,-8,6,4,-7,1,-7,-3,4,9,2,9,8,-4,8,-10,8,6,1,9,4,-7,2,3,4,7,-2,4,10,8,7,-1,-9,-8,-8,8,6,2,-3,-4,-7,-3,-5,10,4,-3,10,-5,-2,9,9,-1,-3,10,6,-5,5,3,-2,5,-10,6,-6,-9,3,10,3,6,2,4,-10,-2,-4,4,5,1,-2,7,7,8,-2,-3,-10,3,-4,2,5,-8,-9,4,-6,1,-3,5,6,1,4,5,2,5,-4,-2,3,7,-4,5,-7,5,-9,-9,8,1,5,-7,3,-6,1,5,6,3,2,-10,-8,-8,-7,-10,-8,-8,-8,-3,-7,9,5,-1,5,-2,3,5,-7,6,9,-1,-8,1,4,-8,-10,-8,-2,-7,2,-5,9,6,-4,-10,-10,-9,9,-6,-3,3,-1,8,9,-2,5,8,7,10,8,-4,10,-7,-5,-2,-7,-10,8,-4,5,10,3,-4,1,4,3,-8,-3,-3,-9,-5,-2,9,-4,8,10,1,-7,-6,8,-8,7,-3,-2,-9,1,-1,8,4,-2,-5,-2,6,9,6,3,8,1,-2,-8,-7,-2,4,8,-6,-2,-5,-7,-4,4,-4,5,8,-5,-10,-9,4,5,5,-7,4,-2,-6,1,-5,-9,1,-3,9,-9,-3,-7,-2,-6,-6,10,4,10,-2,9,5,8,-1,4,1,10,2,10,8,2,10,-5,-3,6,5,3,-3,-5,-2,-4,-4,6,10,1,3,-3,5,-1,2,-4,-3,6,-7,-10,-1,3,-7,-3,-6,-6,-8,-4,-6,9,-4,-2,9,-5,-8,-5,-7,4,9,2,2,4,6,2,5,-7,-6,8,-8,2,-7,-5,-7,-2,-8,2,2,-9,6,-8,5,-1,-8,-6,3,-2,-7,7,-10,2,3,8,-2,2,8,-10,-9,4,2,-4,8,-7,5,-10,-5,10,6,3,-5,-5,-7,8,8,3,-1,-6,5,3,9,4,8,2,-4,-4,-10,-5,-4,4,4,3,-6,-2,6,10,1,-1,-10,2,8,2,-5,-6,10,2,-9,9,7,8,-9,9,4,6,3,-5,-2,-8,6,7,-5,-1,-5,2,2,-5,8,-10,4,-4,3,-7,-10,3,8,-5,-8,-7,-7,-5,7,-1,-4,7,6,-4,-3,-6,-5,-3,7,-5,-4,-10,-9,3,4,3,6,7,-1,3,-3,1,7,2,1,1,-10,-10,3,-7,9,7,9,-9,9,6,-2,10,10,5,9,-9,-4,-8,-10,8,-2,-7,10,-1,2,1,-4,-3,-2,8,-2,-10,3,7,-10,5,9,5,9,-8,-5,3,1,6,6,-5,-8,-7,1,-4,-9,5,2,7,7,-10,-6,2,3,-1,9,-7,10,-7,10,-4,-2,-6,2,-6,1,-9,-9,6,-8,-10,2,-5,-3,-7,-6,1,1,-4,1,2,-4,-10,-4,6,3,1,3,-10,-8,7,-8,-4,4,-4,6,8,8,4,4,6,-3,-5,-4,-3,1,-8,8,2,8,8,3,-5,-6,5,-8,-7,9,-9,6,7,10,10,5,-2,9,8,-8,5,1,-1,-2,-10,-2,-5,-9,-8,6,-10,2,-6,2,5,7,1,3,-7,-2,-7,5,3,-4,6,-10,3,-6,7,2,-7,3,9,10,2,-2,-8,-10,-1,-3,6,-3,9,7,7,-7,2,-2,7,-6,8,5,5,7,2,4,5,-9,7,10,7,10,-9,-2,-6,3,-6,-10,-8,8,-6,9,10,-8,4,-10,-7,-2,-3,-1,3,-5,-6,10,9,-3,-10,10,8,6,-8,-3,-9,1,9,2,-10,1,-1,10,-8,-7,-5,8,-7,-7,3,1,-5,3,-6,8,-2,-2,9,-3,6,7,6,-7,2,-7,-4,-4,-3,-4,3,-5,-10,-10,-10,6,-4,9,10,5,10,4,2,-4,6,2,-2,6,5,-1,-8,10,1,2,-5,-3,8,-8,7,3,-2,7,-3,5,9,-4,-4,9,-4,-9,7,-6,9,-7,-8,4,-7,-3,3,10,-8,9,9,-9,10,-3,-8,-5,-3,-5,-3,10,-7,-2,-2,2,-5,2,-10,8,-7,-10,10,-1,-8,-3,-5,-10,-7,-5,-3,9,-2,3,-1,4,1,-4,9,-3,4,-5,10,-5,8,-6,-9,-2,-5,2,3,6,10,-5,7,-6,-6,4,-10,3,-7,2,1,6,6,-3,-6,7,3,6,1,-3,-7,-3,3,7,-2,-9,-1,-2,-5,-10,-6,-8,8,-8,-8,-6,-9,-3,4,4,9,10,10,-8,8,5,-4,2,-7,-9,-3,-1,1,-5,-6,-2,4,-2,3,-9,-8,5,-7,4,-9,-10,-5,5,9,-2,10,-7,-5,1,10,10,-6,2,4,-9,6,-5,4,-10,1,5,7,8,-10,-1,-10,-10,8,10,-7,-4,10,-5,-1,-7,-6,-6,4,-4,-6,7,-8,2,1,7,-1,-1,2,7,-9,-8,7,-8,9,-7,9,-8,-3,4,-2,-1,1,6,-6,-7,-7,1,-8,-5,1,1,-6,-8,1,4,-10,-8,7,-6,-7,7,9,-10,-7,5,6,9,-7,2,6,1,3,10,-3,2,-3,-6,6,-1,-10,2,-2,-8,7,-5,8,-2,-5,-10,1,8,10,6,9,-3,-4,3,-8,-5,4,10,5,-4,6,-7,-5,-9,-1,5,2,9,4,2,-4,7,-6,-10,10,-1,8,-3,5,10,-9,-5,2,9,-7,-8,-7,-9,-3,-3,-4,1,-4,-7,-6,-4,3,-6,-3,-2,5,1,4,-4,-2,-2,-3,10,-7,6,-3,8,2,-2,-8,-7,-2,-6,2,-5,-7,1,-10,-9,10,-10,-8,9,-4,-4,5,7,2,4,-3,8,-8,2,-4,6,-6,6,-7,-3,8,-5,-1,-8,6,-8,-5,-1,-7,-2,5,2,-6,-7,-5,-6,-8,-4,5,-3,-8,-2,-7,-5,-9,7,2,-7,-10,-3,-5,-8,10,-3,5,-8,8,5,4,-2,-4,-6,8,7,8,-3,-9,-5,2,-5,-5,-2,-2,8,5,-8,-9,-9,6,5,8,-6,-10,7,10,-10,5,-7,9,5,-7,4,5,-3,9,-8,9,-3,4,10,4,-6,2,-7,1,4,5,4,-1,-5,-6,-9,-5,-3,-4,3,-4,8,4,-6,7,3,-10,-4,-5,-5,-1,7,7,-5,4,1,-8,-6,2,7,6,3,-8,-8,5,-5,10,-2,-1,-9,4,-7,-7,-5,6,10,6,9,10,7,3,-2,4,-9,1,-4,-8,-7,3,-5,8,3,1,-7,9,8,6,4,-4,-8,3,-9,-2,-7,10,8,-1,1,-2,5,-2,5,5,-9,2,-3,9,7,10,-8,8,-10,6,-1,10,2,-10,-10,-6,-5,6,5,-2,7,-6,6,-1,-3,8,7,-9,-9,-6,6,-8,10,1,-7,8,6,-9,10,-9,-8,6,-6,-4,7,-6,2,6,-5,-7,-1,-8,-9,-9,8,-3,-6,4,5,1,-8,5,-8,-1,-7,7,1,4,2,-2,-1,7,-1,3,8,8,-10,7,-3,3,5,7,-3,10,4,4,-5,7,1,-4,6,7,4,-6,-2,-6,-6,7,-5,5,-8,-7,3,1,-3,-4,-6,7,-9,-6,1,-10,-6,-8,-3,-10,-5,4,-8,1,7,-2,-10,-2,1,10,9,-9,-4,-5,2,-7,-2,-3,3,4,3,4,5,10,1,6,-9,-6,1,-1,-7,-10,-9,-9,-8,4,-1,5,-2,1,-5,7,3,-9,3,9,-8,8,1,10,10,-1,10,-6,10,-10,-8,1,8,-8,-9,2,-4,-5,-8,4,-8,-1,-2,-3,-8,-9,9,8,9,-10,-10,8,-3,-1,-7,-2,-2,3,2,6,8,6,5,-5,-9,7,-7,5,5,2,-3,-6,7,-8,-7,1,-10,-5,1,3,4,1,-4,-3,4,-2,-8,-1,8,-4,-4,10,-9,10,4,-2,-5,2,-3,8,-8,6,9,-1,-7,-3,9,6,10,-10,1,-7,-6,6,3,9,-4,-9,10,-3,-4,-9,-4,1,-1,10,-4,8,5,-1,8,2,-5,-9,3,-4,-10,2,-6,-10,5,-8,-7,10,10,2,3,4,-7,5,-6,-6,1,-2,10,-5,2,-5,10,2,-9,10,8,-4,-6,4,-7,10,-10,-9,4,7,-5,-6,-8,-7,-5,-10,2,8,2,-9,4,-1,2,5,1,-4,4,3,10,-10,-8,8,6,-7,-9,1,8,8,-1,-5,-6,-1,9,-4,-6,4,7,-4,-7,3,-9,-9,-6,6,9,2,-10,-8,8,8,8,-8,3,2,-2,7,-1,8,-3,-7,-6,8,1,-5,-9,3,-6,-6,2,2,-3,5,5,-3,10,9,-8,-1,4,-8,-2,2,-9,-8,6,-6,9,5,7,-2,-8,2,-1,-5,-3,-10,3,3,-2,-4,3,9,1,7,2,6,2,5,3,10,4,-10,-4,8,8,-4,2,-4,-5,-5,-2,-8,9,10,5,7,-2,6,-2,9,6,10,5,3,4,-9,-8,-3,-10,8,-4,5,-2,1,-5,1,-4,-1,4,10,-3,6,-8,8,-3,3,1,-5,-1,4,-7,-9,-7,-9,-8,9,-2,3,-6,-7,-7,-10,10,-1,2,-9,4,9,2,-2,-10,2,-8,1,-7,-4,-9,-5,10,4,-3,10,-2,-9,-10,5,-6,10,-1,9,-9,2,-5,-1,-5,8,7,-5,8,5,9,-8,6,-8,-10,5,-9,-9,6,-1,2,-8,9,10,-1,5,-3,-4,10,-6,-10,10,-9,-6,-7,-7,6,10,1,3,2,-4,1,-6,4,3,-4,-3,-2,-10,-6,1,-2,-7,8,-7,-10,-7,-10,3,-6,8,-9,-7,-2,3,-3,9,-5,10,-8,6,-1,6,8,7,-6,-6,-8,8,-9,7,5,-9,4,-2,10,10,-10,3,8,4,5,-8,4,-4,-7,6,8,-10,7,-5,-1,6,-3,-1,-9,2,-6,8,6,-2,-4,5,-6,-6,-7,9,8,-9,-4,-10,5,8,6,-1,9,-5,4,7,-5,2,-6,9,-8,-4,1,7,10,7,-1,-6,4,3,3,7,-5,-7,-1,4,7,2,-2,3,-4,5,1,-6,-7,4,-1,6,-1,8,3,1,-7,-7,-4,2,3,3,-1,10,10,-7,-4,-8,10,-6,7,1,4,5,-10,-8,-6,-8,2,6,3,-4,8,1,9,9,9,-9,9,1,-5,-2,-1,-8,10,2,9,10,9,5,3,1,-7,-4,-8,-6,5,-4,8,-7,7,-4,7,-4,-7,2,5,3,8,8]], dtype = "int64")#candidate|9282|(1, 2310)|const|int64
call_9281 = func_4366_call(relay.reshape(const_9282.astype('int64'), [15, 11, 14]), relay.reshape(const_9282.astype('int64'), [15, 11, 14]), )
call_9283 = func_4366_call(relay.reshape(const_9282.astype('int64'), [15, 11, 14]), relay.reshape(const_9282.astype('int64'), [15, 11, 14]), )
func_6376_call = mod.get_global_var('func_6376')
func_6377_call = mutated_mod.get_global_var('func_6377')
call_9284 = func_6376_call()
call_9285 = func_6376_call()
output = relay.Tuple([call_9270,call_9281,const_9282,call_9284,])
output2 = relay.Tuple([call_9271,call_9283,const_9282,call_9285,])
func_9301 = relay.Function([], output)
mod['func_9301'] = func_9301
mod = relay.transform.InferType()(mod)
mutated_mod['func_9301'] = func_9301
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9301_call = mutated_mod.get_global_var('func_9301')
call_9302 = func_9301_call()
output = call_9302
func_9303 = relay.Function([], output)
mutated_mod['func_9303'] = func_9303
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6968_call = mod.get_global_var('func_6968')
func_6970_call = mutated_mod.get_global_var('func_6970')
call_9378 = relay.TupleGetItem(func_6968_call(), 0)
call_9379 = relay.TupleGetItem(func_6970_call(), 0)
func_6615_call = mod.get_global_var('func_6615')
func_6617_call = mutated_mod.get_global_var('func_6617')
call_9391 = func_6615_call(relay.reshape(call_9378.astype('float32'), [7, 7, 6]))
call_9392 = func_6615_call(relay.reshape(call_9378.astype('float32'), [7, 7, 6]))
output = relay.Tuple([call_9378,call_9391,])
output2 = relay.Tuple([call_9379,call_9392,])
func_9394 = relay.Function([], output)
mod['func_9394'] = func_9394
mod = relay.transform.InferType()(mod)
output = func_9394()
func_9395 = relay.Function([], output)
mutated_mod['func_9395'] = func_9395
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9064_call = mod.get_global_var('func_9064')
func_9065_call = mutated_mod.get_global_var('func_9065')
call_9404 = relay.TupleGetItem(func_9064_call(), 0)
call_9405 = relay.TupleGetItem(func_9065_call(), 0)
output = call_9404
output2 = call_9405
func_9410 = relay.Function([], output)
mod['func_9410'] = func_9410
mod = relay.transform.InferType()(mod)
output = func_9410()
func_9411 = relay.Function([], output)
mutated_mod['func_9411'] = func_9411
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6087_call = mod.get_global_var('func_6087')
func_6088_call = mutated_mod.get_global_var('func_6088')
call_9429 = func_6087_call()
call_9430 = func_6087_call()
var_9431 = relay.var("var_9431", dtype = "float32", shape = (6, 260))#candidate|9431|(6, 260)|var|float32
bop_9432 = relay.logical_or(call_9429.astype('bool'), relay.reshape(var_9431.astype('bool'), relay.shape_of(call_9429))) # shape=(6, 260)
bop_9435 = relay.logical_or(call_9430.astype('bool'), relay.reshape(var_9431.astype('bool'), relay.shape_of(call_9430))) # shape=(6, 260)
uop_9438 = relay.acos(var_9431.astype('float32')) # shape=(6, 260)
var_9440 = relay.var("var_9440", dtype = "float32", shape = (6, 260))#candidate|9440|(6, 260)|var|float32
bop_9441 = relay.logical_xor(uop_9438.astype('uint64'), relay.reshape(var_9440.astype('uint64'), relay.shape_of(uop_9438))) # shape=(6, 260)
func_5389_call = mod.get_global_var('func_5389')
func_5390_call = mutated_mod.get_global_var('func_5390')
call_9452 = relay.TupleGetItem(func_5389_call(), 2)
call_9453 = relay.TupleGetItem(func_5390_call(), 2)
uop_9456 = relay.tan(uop_9438.astype('float32')) # shape=(6, 260)
bop_9459 = relay.bitwise_and(uop_9456.astype('uint64'), relay.reshape(uop_9438.astype('uint64'), relay.shape_of(uop_9456))) # shape=(6, 260)
func_6995_call = mod.get_global_var('func_6995')
func_6997_call = mutated_mod.get_global_var('func_6997')
call_9468 = func_6995_call()
call_9469 = func_6995_call()
func_9410_call = mod.get_global_var('func_9410')
func_9411_call = mutated_mod.get_global_var('func_9411')
call_9474 = func_9410_call()
call_9475 = func_9410_call()
output = relay.Tuple([bop_9432,bop_9441,call_9452,bop_9459,call_9468,call_9474,])
output2 = relay.Tuple([bop_9435,bop_9441,call_9453,bop_9459,call_9469,call_9475,])
func_9485 = relay.Function([var_9431,var_9440,], output)
mod['func_9485'] = func_9485
mod = relay.transform.InferType()(mod)
var_9486 = relay.var("var_9486", dtype = "float32", shape = (6, 260))#candidate|9486|(6, 260)|var|float32
var_9487 = relay.var("var_9487", dtype = "float32", shape = (6, 260))#candidate|9487|(6, 260)|var|float32
output = func_9485(var_9486,var_9487,)
func_9488 = relay.Function([var_9486,var_9487,], output)
mutated_mod['func_9488'] = func_9488
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5215_call = mod.get_global_var('func_5215')
func_5217_call = mutated_mod.get_global_var('func_5217')
call_9560 = relay.TupleGetItem(func_5215_call(), 0)
call_9561 = relay.TupleGetItem(func_5217_call(), 0)
output = relay.Tuple([call_9560,])
output2 = relay.Tuple([call_9561,])
func_9574 = relay.Function([], output)
mod['func_9574'] = func_9574
mod = relay.transform.InferType()(mod)
mutated_mod['func_9574'] = func_9574
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9574_call = mutated_mod.get_global_var('func_9574')
call_9575 = func_9574_call()
output = call_9575
func_9576 = relay.Function([], output)
mutated_mod['func_9576'] = func_9576
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9583 = relay.var("var_9583", dtype = "float64", shape = (5, 1, 13))#candidate|9583|(5, 1, 13)|var|float64
uop_9584 = relay.log(var_9583.astype('float64')) # shape=(5, 1, 13)
output = relay.Tuple([uop_9584,])
output2 = relay.Tuple([uop_9584,])
func_9589 = relay.Function([var_9583,], output)
mod['func_9589'] = func_9589
mod = relay.transform.InferType()(mod)
mutated_mod['func_9589'] = func_9589
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9590 = relay.var("var_9590", dtype = "float64", shape = (5, 1, 13))#candidate|9590|(5, 1, 13)|var|float64
func_9589_call = mutated_mod.get_global_var('func_9589')
call_9591 = func_9589_call(var_9590)
output = call_9591
func_9592 = relay.Function([var_9590], output)
mutated_mod['func_9592'] = func_9592
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5738_call = mod.get_global_var('func_5738')
func_5740_call = mutated_mod.get_global_var('func_5740')
call_9632 = relay.TupleGetItem(func_5738_call(), 1)
call_9633 = relay.TupleGetItem(func_5740_call(), 1)
output = call_9632
output2 = call_9633
func_9642 = relay.Function([], output)
mod['func_9642'] = func_9642
mod = relay.transform.InferType()(mod)
output = func_9642()
func_9643 = relay.Function([], output)
mutated_mod['func_9643'] = func_9643
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5517_call = mod.get_global_var('func_5517')
func_5519_call = mutated_mod.get_global_var('func_5519')
call_9648 = relay.TupleGetItem(func_5517_call(), 0)
call_9649 = relay.TupleGetItem(func_5519_call(), 0)
output = call_9648
output2 = call_9649
func_9652 = relay.Function([], output)
mod['func_9652'] = func_9652
mod = relay.transform.InferType()(mod)
mutated_mod['func_9652'] = func_9652
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9652_call = mutated_mod.get_global_var('func_9652')
call_9653 = func_9652_call()
output = call_9653
func_9654 = relay.Function([], output)
mutated_mod['func_9654'] = func_9654
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8538_call = mod.get_global_var('func_8538')
func_8539_call = mutated_mod.get_global_var('func_8539')
call_9673 = relay.TupleGetItem(func_8538_call(), 0)
call_9674 = relay.TupleGetItem(func_8539_call(), 0)
output = relay.Tuple([call_9673,])
output2 = relay.Tuple([call_9674,])
func_9701 = relay.Function([], output)
mod['func_9701'] = func_9701
mod = relay.transform.InferType()(mod)
output = func_9701()
func_9702 = relay.Function([], output)
mutated_mod['func_9702'] = func_9702
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8984_call = mod.get_global_var('func_8984')
func_8985_call = mutated_mod.get_global_var('func_8985')
call_9710 = relay.TupleGetItem(func_8984_call(), 1)
call_9711 = relay.TupleGetItem(func_8985_call(), 1)
output = call_9710
output2 = call_9711
func_9712 = relay.Function([], output)
mod['func_9712'] = func_9712
mod = relay.transform.InferType()(mod)
mutated_mod['func_9712'] = func_9712
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9712_call = mutated_mod.get_global_var('func_9712')
call_9713 = func_9712_call()
output = call_9713
func_9714 = relay.Function([], output)
mutated_mod['func_9714'] = func_9714
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9712_call = mod.get_global_var('func_9712')
func_9714_call = mutated_mod.get_global_var('func_9714')
call_9750 = func_9712_call()
call_9751 = func_9712_call()
output = relay.Tuple([call_9750,])
output2 = relay.Tuple([call_9751,])
func_9753 = relay.Function([], output)
mod['func_9753'] = func_9753
mod = relay.transform.InferType()(mod)
output = func_9753()
func_9754 = relay.Function([], output)
mutated_mod['func_9754'] = func_9754
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7723_call = mod.get_global_var('func_7723')
func_7725_call = mutated_mod.get_global_var('func_7725')
call_9774 = relay.TupleGetItem(func_7723_call(), 0)
call_9775 = relay.TupleGetItem(func_7725_call(), 0)
var_9779 = relay.var("var_9779", dtype = "float64", shape = (2, 2, 4))#candidate|9779|(2, 2, 4)|var|float64
bop_9780 = relay.right_shift(call_9774.astype('uint8'), relay.reshape(var_9779.astype('uint8'), relay.shape_of(call_9774))) # shape=(2, 2, 4)
bop_9783 = relay.right_shift(call_9775.astype('uint8'), relay.reshape(var_9779.astype('uint8'), relay.shape_of(call_9775))) # shape=(2, 2, 4)
output = bop_9780
output2 = bop_9783
func_9785 = relay.Function([var_9779,], output)
mod['func_9785'] = func_9785
mod = relay.transform.InferType()(mod)
mutated_mod['func_9785'] = func_9785
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9786 = relay.var("var_9786", dtype = "float64", shape = (2, 2, 4))#candidate|9786|(2, 2, 4)|var|float64
func_9785_call = mutated_mod.get_global_var('func_9785')
call_9787 = func_9785_call(var_9786)
output = call_9787
func_9788 = relay.Function([var_9786], output)
mutated_mod['func_9788'] = func_9788
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7561_call = mod.get_global_var('func_7561')
func_7563_call = mutated_mod.get_global_var('func_7563')
call_9824 = relay.TupleGetItem(func_7561_call(), 0)
call_9825 = relay.TupleGetItem(func_7563_call(), 0)
output = call_9824
output2 = call_9825
func_9827 = relay.Function([], output)
mod['func_9827'] = func_9827
mod = relay.transform.InferType()(mod)
mutated_mod['func_9827'] = func_9827
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9827_call = mutated_mod.get_global_var('func_9827')
call_9828 = func_9827_call()
output = call_9828
func_9829 = relay.Function([], output)
mutated_mod['func_9829'] = func_9829
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7723_call = mod.get_global_var('func_7723')
func_7725_call = mutated_mod.get_global_var('func_7725')
call_9856 = relay.TupleGetItem(func_7723_call(), 1)
call_9857 = relay.TupleGetItem(func_7725_call(), 1)
func_7673_call = mod.get_global_var('func_7673')
func_7675_call = mutated_mod.get_global_var('func_7675')
var_9869 = relay.var("var_9869", dtype = "float32", shape = (180,))#candidate|9869|(180,)|var|float32
call_9868 = relay.TupleGetItem(func_7673_call(relay.reshape(var_9869.astype('float32'), [180,])), 1)
call_9870 = relay.TupleGetItem(func_7675_call(relay.reshape(var_9869.astype('float32'), [180,])), 1)
func_7561_call = mod.get_global_var('func_7561')
func_7563_call = mutated_mod.get_global_var('func_7563')
call_9877 = relay.TupleGetItem(func_7561_call(), 2)
call_9878 = relay.TupleGetItem(func_7563_call(), 2)
output = relay.Tuple([call_9856,call_9868,var_9869,call_9877,])
output2 = relay.Tuple([call_9857,call_9870,var_9869,call_9878,])
func_9900 = relay.Function([var_9869,], output)
mod['func_9900'] = func_9900
mod = relay.transform.InferType()(mod)
var_9901 = relay.var("var_9901", dtype = "float32", shape = (180,))#candidate|9901|(180,)|var|float32
output = func_9900(var_9901)
func_9902 = relay.Function([var_9901], output)
mutated_mod['func_9902'] = func_9902
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9204_call = mod.get_global_var('func_9204')
func_9206_call = mutated_mod.get_global_var('func_9206')
call_9904 = relay.TupleGetItem(func_9204_call(), 0)
call_9905 = relay.TupleGetItem(func_9206_call(), 0)
func_7986_call = mod.get_global_var('func_7986')
func_7988_call = mutated_mod.get_global_var('func_7988')
const_9911 = relay.const([5,10,4,-4,5,7,9,-8,8,5,-4,3,1,6,-9,3,9,-3,-5,3,-10,-1,6,2,-3,-1,-9,-1,-2,-6,4,-7,1,5,-1,-6,-3,-10,6,2,-10,8,-9,2,8,4,-5,4,-3,4,1,4,8,-10,9,6,7,1,-5,-9,10,4,4,-5,-10,10,-10,-3,10,5,-7,1,6,-4,-4,3,-4,-1,-8,-3,5,8,-10,8,-6,1,5,-1,-5,-2,-6,5,4,8,4,8,7,-7,-1,-6,7,2,1,-2,8,5,9,-4,8,2,-3,1,10,-6,-2,-6,4,-10,-1,1,-6,-3,-8,5,1,8,-10,6,9,-9,-6,2,4,5,6,-7,2,-5,-9,8,10,3,-9,9,1,-10,6,-7,8,8,-5,6,4,-10,4,10,6,-5,2,-2,6,10,-6,2,8,-7,2,-2,7,-9,2,6,-5,-2,8,2,5,-4,10,6,4,2,-9,4,8,8,7,7,-8,10,2,8,7,-10,-9,-6,-2,-1,-3,-8,2,-3,3,-10,-9,-4,6,8,-5,-10,-7,-9,5,3,-7,-10,-8,-8,3,9,-10,-10,-7,8,9,8,4,-6,-7,8,-9,-5,-9,9,10,-3,2,-7,-4,-3,-4,-10,8,9,4,-1,6,-1,6,-7,7,-7,5,-8,-8,1,-1,2,6,3,9,-4,-10,1,4,-4,-10,-10,6,4,-8,-8,8,8,-3,4,7,-8,3,-4,-9,-10,1,2,7,-3,-10,5,3,2,6,-10,5,9,7,-7,-2,-5,-6,-2,2,-9,8,-2,9,7,-1,-8,4,8,-1,-10,-3,-7,2], dtype = "uint64")#candidate|9911|(315,)|const|uint64
call_9910 = relay.TupleGetItem(func_7986_call(relay.reshape(const_9911.astype('uint64'), [5, 63])), 1)
call_9912 = relay.TupleGetItem(func_7988_call(relay.reshape(const_9911.astype('uint64'), [5, 63])), 1)
func_9589_call = mod.get_global_var('func_9589')
func_9592_call = mutated_mod.get_global_var('func_9592')
const_9917 = relay.const([-0.561390,-4.780940,-1.035518,-4.078683,3.881582,-5.830708,-3.613347,1.222499,8.274929,3.179621,9.711034,0.813671,7.541284,8.233536,-1.335421,1.615840,3.182859,-3.125568,5.888983,-5.563535,-7.672614,5.937492,4.399666,1.488889,-1.813834,-2.498901,-5.357286,5.432610,-4.522094,-1.248996,5.211814,9.899745,1.394870,-6.354288,-4.377393,-0.412436,-2.471241,8.931184,-3.912990,-2.740561,1.406908,-5.430252,-2.405141,2.354902,-3.443941,2.693013,-4.444058,7.739934,4.826586,-9.728583,-0.039233,-4.385243,-0.838868,-1.632781,-5.673819,3.275848,3.095697,0.176043,8.887011,-4.343712,5.128207,2.969655,-1.595318,6.061856,0.865826], dtype = "float64")#candidate|9917|(65,)|const|float64
call_9916 = relay.TupleGetItem(func_9589_call(relay.reshape(const_9917.astype('float64'), [5, 1, 13])), 0)
call_9918 = relay.TupleGetItem(func_9592_call(relay.reshape(const_9917.astype('float64'), [5, 1, 13])), 0)
output = relay.Tuple([call_9904,call_9910,const_9911,call_9916,const_9917,])
output2 = relay.Tuple([call_9905,call_9912,const_9911,call_9918,const_9917,])
func_9921 = relay.Function([], output)
mod['func_9921'] = func_9921
mod = relay.transform.InferType()(mod)
output = func_9921()
func_9922 = relay.Function([], output)
mutated_mod['func_9922'] = func_9922
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6896_call = mod.get_global_var('func_6896')
func_6897_call = mutated_mod.get_global_var('func_6897')
call_9926 = relay.TupleGetItem(func_6896_call(), 2)
call_9927 = relay.TupleGetItem(func_6897_call(), 2)
func_9921_call = mod.get_global_var('func_9921')
func_9922_call = mutated_mod.get_global_var('func_9922')
call_9928 = relay.TupleGetItem(func_9921_call(), 0)
call_9929 = relay.TupleGetItem(func_9922_call(), 0)
func_3956_call = mod.get_global_var('func_3956')
func_3960_call = mutated_mod.get_global_var('func_3960')
var_9942 = relay.var("var_9942", dtype = "float64", shape = (2535,))#candidate|9942|(2535,)|var|float64
call_9941 = func_3956_call(relay.reshape(var_9942.astype('float64'), [13, 15, 13]), relay.reshape(var_9942.astype('float64'), [13, 15, 13]), )
call_9943 = func_3956_call(relay.reshape(var_9942.astype('float64'), [13, 15, 13]), relay.reshape(var_9942.astype('float64'), [13, 15, 13]), )
output = relay.Tuple([call_9926,call_9928,call_9941,var_9942,])
output2 = relay.Tuple([call_9927,call_9929,call_9943,var_9942,])
func_9960 = relay.Function([var_9942,], output)
mod['func_9960'] = func_9960
mod = relay.transform.InferType()(mod)
var_9961 = relay.var("var_9961", dtype = "float64", shape = (2535,))#candidate|9961|(2535,)|var|float64
output = func_9960(var_9961)
func_9962 = relay.Function([var_9961], output)
mutated_mod['func_9962'] = func_9962
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9995 = relay.var("var_9995", dtype = "uint8", shape = ())#candidate|9995|()|var|uint8
const_9996 = relay.const([[[7],[-5],[-10],[5],[5],[-4],[1]]], dtype = "uint8")#candidate|9996|(1, 7, 1)|const|uint8
bop_9997 = relay.left_shift(var_9995.astype('uint8'), const_9996.astype('uint8')) # shape=(1, 7, 1)
output = relay.Tuple([bop_9997,])
output2 = relay.Tuple([bop_9997,])
func_10005 = relay.Function([var_9995,], output)
mod['func_10005'] = func_10005
mod = relay.transform.InferType()(mod)
var_10006 = relay.var("var_10006", dtype = "uint8", shape = ())#candidate|10006|()|var|uint8
output = func_10005(var_10006)
func_10007 = relay.Function([var_10006], output)
mutated_mod['func_10007'] = func_10007
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10017 = relay.var("var_10017", dtype = "float64", shape = (1, 3, 9))#candidate|10017|(1, 3, 9)|var|float64
uop_10018 = relay.sin(var_10017.astype('float64')) # shape=(1, 3, 9)
output = relay.Tuple([uop_10018,])
output2 = relay.Tuple([uop_10018,])
func_10022 = relay.Function([var_10017,], output)
mod['func_10022'] = func_10022
mod = relay.transform.InferType()(mod)
var_10023 = relay.var("var_10023", dtype = "float64", shape = (1, 3, 9))#candidate|10023|(1, 3, 9)|var|float64
output = func_10022(var_10023)
func_10024 = relay.Function([var_10023], output)
mutated_mod['func_10024'] = func_10024
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10079 = relay.var("var_10079", dtype = "float32", shape = (13, 16, 3))#candidate|10079|(13, 16, 3)|var|float32
var_10080 = relay.var("var_10080", dtype = "float32", shape = (13, 16, 3))#candidate|10080|(13, 16, 3)|var|float32
bop_10081 = relay.greater_equal(var_10079.astype('bool'), relay.reshape(var_10080.astype('bool'), relay.shape_of(var_10079))) # shape=(13, 16, 3)
output = relay.Tuple([bop_10081,])
output2 = relay.Tuple([bop_10081,])
func_10095 = relay.Function([var_10079,var_10080,], output)
mod['func_10095'] = func_10095
mod = relay.transform.InferType()(mod)
mutated_mod['func_10095'] = func_10095
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10095_call = mutated_mod.get_global_var('func_10095')
var_10097 = relay.var("var_10097", dtype = "float32", shape = (13, 16, 3))#candidate|10097|(13, 16, 3)|var|float32
var_10098 = relay.var("var_10098", dtype = "float32", shape = (13, 16, 3))#candidate|10098|(13, 16, 3)|var|float32
call_10096 = func_10095_call(var_10097,var_10098,)
output = call_10096
func_10099 = relay.Function([var_10097,var_10098,], output)
mutated_mod['func_10099'] = func_10099
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6943_call = mod.get_global_var('func_6943')
func_6945_call = mutated_mod.get_global_var('func_6945')
call_10104 = relay.TupleGetItem(func_6943_call(), 0)
call_10105 = relay.TupleGetItem(func_6945_call(), 0)
func_6736_call = mod.get_global_var('func_6736')
func_6737_call = mutated_mod.get_global_var('func_6737')
call_10111 = relay.TupleGetItem(func_6736_call(), 3)
call_10112 = relay.TupleGetItem(func_6737_call(), 3)
var_10119 = relay.var("var_10119", dtype = "float32", shape = (693,))#candidate|10119|(693,)|var|float32
bop_10120 = relay.not_equal(call_10111.astype('bool'), relay.reshape(var_10119.astype('bool'), relay.shape_of(call_10111))) # shape=(693,)
bop_10123 = relay.not_equal(call_10112.astype('bool'), relay.reshape(var_10119.astype('bool'), relay.shape_of(call_10112))) # shape=(693,)
func_8442_call = mod.get_global_var('func_8442')
func_8446_call = mutated_mod.get_global_var('func_8446')
const_10130 = relay.const([-5,6,-6,5,4,-8,-7,-1,-3,-1,-4,-7,-3,-8,-7,2,5,8,-3,-9,2,-9,-10,-2,-5,5,1,-6,2,-1,-3,1,-1,9,-3,-4,4,1,-4,-8,-7,-10,-6,3,10,-6,-6,-9,7,2,-6,4,10,5,-10,4,-7,-6,-3,-10,-10,4,-5,-5,-2,-4,-5,-8,6,10,-8,3,-1,8,-5,-6,7,3,4,-6,-4,5,-9,-4,-8,-10,3,2,2,7,-8,-6,-5,-9,-6,-5,7,2,3,-10,-2,-7,-4,8,-1,-5,10,-6,-8,-3,-9,-7,-8,-2,-4,-4,-5,-1,2,-4,6,1,-1,-10,1,-5,2,9,-2,-1,-5,5,7,-8,-7,1,-4,-1,7,-5,-7,-9,2,-8,-8,1,5,-3,3,-1,-8,6,-5,8,-10,-10,-3,5,6,-2,-2,8,-10,-2,-6,3,-7,7,-8,4,8,-5,1,-8,3,1,-2,5,-2,5,1,-2,-9,-10,6,6,-6,-6,-1,5,-4,-9,7,-10,-2,7,-5,2,1,-2,4,2,-7,8,-7,-1,-9,-9,6,-5,4,-2,2,2,5,-10,-10,-10,5,6,-9,2,1,4,1,-6,1,2,3,7,-8,9,-3,6,5,9,10,3,3,9,-9,6,4,-3,4,4,-1,9,-2,-2,-4,2,-2,-5,4,-8,-10,3,6,10,-10,-1,9,-4,2,7,-7,-2,-4,6,3,-3,10,-7,-5,-6,5,-5,5,7,-3,5,-3,-9,-6,-7,8,-3,7,7,-1,9,10,2,3,-5,2,-6,-9,-2,-1,5,10,-2,-10,-10,-1,6,-3,9,6,2,-7,4,5,-2,-6,10,7,-4,-10,-7,-5,4,-1,-2,8,6,-4,1,6,-8,4,-10,-9,-7,3,9,7,6,6,-5,-3,10,-1,7,-8,-2,4,-3,-10,-1,8,-9,-3,5,2,-4,2,2,-8,-3,-3,-1,10,-9,6,-1,10,-1,6,2,7,5,-3,5,4,-10,-4,6,-4,-2,7,-7,7,1,6,-1,1,-10,-3,-8,2,5,-10,2,10,-6,-9,-3,3,-10,-9,-9,7,7,-6,-6,-4,6,6,7,2,-2,-6,-7,-8,7,-8,-8,-8,4,1,-2,-2,8,-4,3,-8,-7,9,7,-1,-7,-3,-3,-1,4,-8,6,5,-10,-10,-7,8,-7,9,6,-8,-8,-7,3,1,-9,-6,-1,-8,-3,3,-9,3,-10,1,4,-9,2,5,-4,-5,-5,8,3,6,6,-6,-2,2,3,10,-5,-10,-4,2,-1,-1,-9,2,-4,-8,10,5,4,6,3,5,-2,4,-1,-4,-7,-1,-3,-8,1,-7,-3,5,-4,-5,4,4,6,-3,-8,1,3,10,5,5,8,-9,6,8,-4,8], dtype = "uint32")#candidate|10130|(525,)|const|uint32
call_10129 = relay.TupleGetItem(func_8442_call(relay.reshape(const_10130.astype('uint32'), [7, 5, 15]), relay.reshape(const_10130.astype('uint32'), [7, 5, 15]), relay.reshape(const_10130.astype('float64'), [7, 5, 15]), ), 2)
call_10131 = relay.TupleGetItem(func_8446_call(relay.reshape(const_10130.astype('uint32'), [7, 5, 15]), relay.reshape(const_10130.astype('uint32'), [7, 5, 15]), relay.reshape(const_10130.astype('float64'), [7, 5, 15]), ), 2)
output = relay.Tuple([call_10104,bop_10120,call_10129,const_10130,])
output2 = relay.Tuple([call_10105,bop_10123,call_10131,const_10130,])
func_10145 = relay.Function([var_10119,], output)
mod['func_10145'] = func_10145
mod = relay.transform.InferType()(mod)
var_10146 = relay.var("var_10146", dtype = "float32", shape = (693,))#candidate|10146|(693,)|var|float32
output = func_10145(var_10146)
func_10147 = relay.Function([var_10146], output)
mutated_mod['func_10147'] = func_10147
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6376_call = mod.get_global_var('func_6376')
func_6377_call = mutated_mod.get_global_var('func_6377')
call_10170 = func_6376_call()
call_10171 = func_6376_call()
func_9785_call = mod.get_global_var('func_9785')
func_9788_call = mutated_mod.get_global_var('func_9788')
const_10173 = relay.const([[-5.357996,2.515418,-0.931742,7.550962,-4.980702,8.428346,3.399382,-4.625309,-7.374454,-6.813950,6.588590,-8.047599,-2.020022,1.205413,1.726901,4.978011]], dtype = "float64")#candidate|10173|(1, 16)|const|float64
call_10172 = func_9785_call(relay.reshape(const_10173.astype('float64'), [2, 2, 4]))
call_10174 = func_9785_call(relay.reshape(const_10173.astype('float64'), [2, 2, 4]))
func_7673_call = mod.get_global_var('func_7673')
func_7675_call = mutated_mod.get_global_var('func_7675')
var_10181 = relay.var("var_10181", dtype = "float32", shape = (180,))#candidate|10181|(180,)|var|float32
call_10180 = relay.TupleGetItem(func_7673_call(relay.reshape(var_10181.astype('float32'), [180,])), 3)
call_10182 = relay.TupleGetItem(func_7675_call(relay.reshape(var_10181.astype('float32'), [180,])), 3)
output = relay.Tuple([call_10170,call_10172,const_10173,call_10180,var_10181,])
output2 = relay.Tuple([call_10171,call_10174,const_10173,call_10182,var_10181,])
func_10193 = relay.Function([var_10181,], output)
mod['func_10193'] = func_10193
mod = relay.transform.InferType()(mod)
var_10194 = relay.var("var_10194", dtype = "float32", shape = (180,))#candidate|10194|(180,)|var|float32
output = func_10193(var_10194)
func_10195 = relay.Function([var_10194], output)
mutated_mod['func_10195'] = func_10195
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5970_call = mod.get_global_var('func_5970')
func_5972_call = mutated_mod.get_global_var('func_5972')
call_10217 = relay.TupleGetItem(func_5970_call(), 0)
call_10218 = relay.TupleGetItem(func_5972_call(), 0)
output = call_10217
output2 = call_10218
func_10230 = relay.Function([], output)
mod['func_10230'] = func_10230
mod = relay.transform.InferType()(mod)
output = func_10230()
func_10231 = relay.Function([], output)
mutated_mod['func_10231'] = func_10231
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9394_call = mod.get_global_var('func_9394')
func_9395_call = mutated_mod.get_global_var('func_9395')
call_10254 = relay.TupleGetItem(func_9394_call(), 1)
call_10255 = relay.TupleGetItem(func_9395_call(), 1)
func_5895_call = mod.get_global_var('func_5895')
func_5896_call = mutated_mod.get_global_var('func_5896')
call_10270 = relay.TupleGetItem(func_5895_call(), 1)
call_10271 = relay.TupleGetItem(func_5896_call(), 1)
uop_10278 = relay.sinh(call_10270.astype('float64')) # shape=(7, 7, 6)
uop_10280 = relay.sinh(call_10271.astype('float64')) # shape=(7, 7, 6)
func_9394_call = mod.get_global_var('func_9394')
func_9395_call = mutated_mod.get_global_var('func_9395')
call_10283 = relay.TupleGetItem(func_9394_call(), 1)
call_10284 = relay.TupleGetItem(func_9395_call(), 1)
output = relay.Tuple([call_10254,uop_10278,call_10283,])
output2 = relay.Tuple([call_10255,uop_10280,call_10284,])
func_10289 = relay.Function([], output)
mod['func_10289'] = func_10289
mod = relay.transform.InferType()(mod)
mutated_mod['func_10289'] = func_10289
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10289_call = mutated_mod.get_global_var('func_10289')
call_10290 = func_10289_call()
output = call_10290
func_10291 = relay.Function([], output)
mutated_mod['func_10291'] = func_10291
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10315 = relay.var("var_10315", dtype = "float64", shape = (14, 2, 16))#candidate|10315|(14, 2, 16)|var|float64
uop_10316 = relay.sin(var_10315.astype('float64')) # shape=(14, 2, 16)
bop_10327 = relay.less(var_10315.astype('bool'), relay.reshape(uop_10316.astype('bool'), relay.shape_of(var_10315))) # shape=(14, 2, 16)
func_7986_call = mod.get_global_var('func_7986')
func_7988_call = mutated_mod.get_global_var('func_7988')
const_10336 = relay.const([5,3,7,-3,-10,3,5,-10,-8,-4,-6,4,9,-8,-2,-2,-8,6,2,10,-2,-9,4,3,-8,-8,10,-2,6,7,-7,-7,-6,10,-10,2,-5,1,10,-3,5,-3,-3,-3,5,9,1,-6,-6,-6,1,10,-7,-5,-9,7,2,-8,-5,6,-10,-1,-10,9,7,4,-3,2,-7,9,9,-9,-6,-8,7,10,-10,10,7,-5,7,2,6,-2,-3,9,6,5,-3,4,8,9,2,7,1,6,3,-9,-2,-10,-9,8,-6,-1,7,-1,7,2,-9,3,-1,7,-6,3,-5,-6,-3,-4,-9,-10,-8,9,8,7,10,-7,-8,5,1,4,4,-2,4,5,-1,-10,-5,6,-10,-3,4,1,4,-8,5,-3,-1,5,-3,1,-7,-6,-9,10,-7,10,-4,-3,-7,5,4,3,7,3,10,5,-4,-2,3,-2,6,10,-3,10,6,3,5,5,4,1,5,-1,-9,2,6,2,8,-4,7,-10,-1,-2,1,-8,9,-8,7,3,-4,-8,1,-4,2,-7,-4,-1,-3,1,2,6,-9,4,-4,4,2,-10,-3,-1,4,5,6,-5,1,-1,-5,4,5,-4,7,-9,-1,3,3,9,3,-7,2,-7,6,-7,9,7,-1,3,8,-10,-10,2,-6,-1,7,-7,-10,3,4,-8,-3,-7,7,-4,-1,-3,7,4,-6,-4,3,-3,6,10,6,-3,5,3,9,7,4,-2,-5,8,-3,6,4,10,3,-1,8,-10,-5,2,-2,5,9,1,-6,-7,1,-5,-3,6,5,-7,-3,-5,-9,4,6,-1,9,-10,3,3,3,1,-5], dtype = "uint64")#candidate|10336|(315,)|const|uint64
call_10335 = relay.TupleGetItem(func_7986_call(relay.reshape(const_10336.astype('uint64'), [5, 63])), 4)
call_10337 = relay.TupleGetItem(func_7988_call(relay.reshape(const_10336.astype('uint64'), [5, 63])), 4)
output = relay.Tuple([bop_10327,call_10335,const_10336,])
output2 = relay.Tuple([bop_10327,call_10337,const_10336,])
func_10348 = relay.Function([var_10315,], output)
mod['func_10348'] = func_10348
mod = relay.transform.InferType()(mod)
var_10349 = relay.var("var_10349", dtype = "float64", shape = (14, 2, 16))#candidate|10349|(14, 2, 16)|var|float64
output = func_10348(var_10349)
func_10350 = relay.Function([var_10349], output)
mutated_mod['func_10350'] = func_10350
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5895_call = mod.get_global_var('func_5895')
func_5896_call = mutated_mod.get_global_var('func_5896')
call_10419 = relay.TupleGetItem(func_5895_call(), 1)
call_10420 = relay.TupleGetItem(func_5896_call(), 1)
func_10095_call = mod.get_global_var('func_10095')
func_10099_call = mutated_mod.get_global_var('func_10099')
var_10429 = relay.var("var_10429", dtype = "float32", shape = (24, 26))#candidate|10429|(24, 26)|var|float32
call_10428 = relay.TupleGetItem(func_10095_call(relay.reshape(var_10429.astype('float32'), [13, 16, 3]), relay.reshape(var_10429.astype('float32'), [13, 16, 3]), ), 0)
call_10430 = relay.TupleGetItem(func_10099_call(relay.reshape(var_10429.astype('float32'), [13, 16, 3]), relay.reshape(var_10429.astype('float32'), [13, 16, 3]), ), 0)
func_8442_call = mod.get_global_var('func_8442')
func_8446_call = mutated_mod.get_global_var('func_8446')
var_10438 = relay.var("var_10438", dtype = "uint32", shape = (525,))#candidate|10438|(525,)|var|uint32
call_10437 = relay.TupleGetItem(func_8442_call(relay.reshape(var_10438.astype('uint32'), [7, 5, 15]), relay.reshape(var_10438.astype('uint32'), [7, 5, 15]), relay.reshape(var_10438.astype('float64'), [7, 5, 15]), ), 1)
call_10439 = relay.TupleGetItem(func_8446_call(relay.reshape(var_10438.astype('uint32'), [7, 5, 15]), relay.reshape(var_10438.astype('uint32'), [7, 5, 15]), relay.reshape(var_10438.astype('float64'), [7, 5, 15]), ), 1)
func_8984_call = mod.get_global_var('func_8984')
func_8985_call = mutated_mod.get_global_var('func_8985')
call_10441 = relay.TupleGetItem(func_8984_call(), 2)
call_10442 = relay.TupleGetItem(func_8985_call(), 2)
func_10193_call = mod.get_global_var('func_10193')
func_10195_call = mutated_mod.get_global_var('func_10195')
var_10444 = relay.var("var_10444", dtype = "float32", shape = (180,))#candidate|10444|(180,)|var|float32
call_10443 = relay.TupleGetItem(func_10193_call(relay.reshape(var_10444.astype('float32'), [180,])), 3)
call_10445 = relay.TupleGetItem(func_10195_call(relay.reshape(var_10444.astype('float32'), [180,])), 3)
func_5578_call = mod.get_global_var('func_5578')
func_5581_call = mutated_mod.get_global_var('func_5581')
call_10454 = func_5578_call(relay.reshape(call_10441.astype('float64'), [7, 7, 6]))
call_10455 = func_5578_call(relay.reshape(call_10441.astype('float64'), [7, 7, 6]))
func_9827_call = mod.get_global_var('func_9827')
func_9829_call = mutated_mod.get_global_var('func_9829')
call_10480 = func_9827_call()
call_10481 = func_9827_call()
func_8036_call = mod.get_global_var('func_8036')
func_8038_call = mutated_mod.get_global_var('func_8038')
call_10483 = relay.TupleGetItem(func_8036_call(), 0)
call_10484 = relay.TupleGetItem(func_8038_call(), 0)
func_9204_call = mod.get_global_var('func_9204')
func_9206_call = mutated_mod.get_global_var('func_9206')
call_10492 = relay.TupleGetItem(func_9204_call(), 0)
call_10493 = relay.TupleGetItem(func_9206_call(), 0)
func_8442_call = mod.get_global_var('func_8442')
func_8446_call = mutated_mod.get_global_var('func_8446')
call_10498 = relay.TupleGetItem(func_8442_call(relay.reshape(var_10438.astype('uint32'), [7, 5, 15]), relay.reshape(call_10437.astype('uint32'), [7, 5, 15]), relay.reshape(call_10437.astype('float64'), [7, 5, 15]), ), 0)
call_10499 = relay.TupleGetItem(func_8446_call(relay.reshape(var_10438.astype('uint32'), [7, 5, 15]), relay.reshape(call_10437.astype('uint32'), [7, 5, 15]), relay.reshape(call_10437.astype('float64'), [7, 5, 15]), ), 0)
func_9900_call = mod.get_global_var('func_9900')
func_9902_call = mutated_mod.get_global_var('func_9902')
call_10532 = relay.TupleGetItem(func_9900_call(relay.reshape(var_10444.astype('float32'), [180,])), 1)
call_10533 = relay.TupleGetItem(func_9902_call(relay.reshape(var_10444.astype('float32'), [180,])), 1)
func_1766_call = mod.get_global_var('func_1766')
func_1768_call = mutated_mod.get_global_var('func_1768')
const_10542 = relay.const([-2.486218,2.012163,-3.665140,-8.364203,-5.208845,9.998819,9.390094,6.718469,4.332426,-1.813225,6.151185,3.230158,6.600470,8.799352,-6.722704,-0.613868,2.122953,-6.508260,-5.885694,-0.970908,-6.874195,-3.772578,-8.795208,0.754965,9.820612,9.099609,-0.719081,-1.903931,8.465200,-6.003347,-4.613098,-8.787671,-2.935670,1.430810,8.607938,6.319391,-0.824709,7.839839,4.685974,-9.465164,-5.321042,6.862667,-1.903245,1.880082,-5.807894,7.911037,-5.090318,-0.190172,7.521706,5.230661,8.316873,-3.757048,9.836226,2.253924,-7.885074,4.346918,0.435142,7.161908,-7.283192,2.225417,-4.032523,9.797451,4.198798,7.063516,8.165479,2.463747,-2.590053,-4.258824,-9.648284,-7.701078,-5.028927,6.781708,6.083306,9.554090,0.373080,-0.848885,-7.663051,-0.487485,9.586452,-6.513303,0.519731,0.644750,3.452105,2.206091,0.333414,-6.569570,8.490408,5.481701,4.086600,-1.759290,-2.107064,-4.173581,-1.199976,-1.212406,7.497334,-1.697289,-9.165649,-7.504829,-0.840948,7.217035,3.550988,6.221120,-9.578070,8.068487,8.126877,-2.954445,-1.826006,-8.349059,-1.434548,-9.828658,2.369256,-5.711311,7.609354,4.908111,-3.639887,5.541187,2.878450,-5.668565,-6.004316,6.462215,6.948645,1.115223,-7.724604,-1.372943,-4.317341,-7.355664,0.206574,2.915109,5.960279,-5.356147,-1.396328,-2.523686,-1.349985,0.313726,-7.022998,0.920491,-0.626245,-8.762635,-5.596046,4.933651,1.669105,1.262409,-9.257847,2.091442,1.186089,8.763633,-4.271912,5.056055,-9.034863,6.094714,4.368823,-7.638325,0.960247,4.462507,1.993442,-7.780660,-3.452286,-4.183212,-0.712827,4.122140,4.726357,9.398293,-0.755766,1.900329,1.043957,9.220606,1.370534,7.644685,-8.039713,-8.470514,8.191468,4.702337,-2.478968,4.453684,4.776684,9.417086,2.924060,-0.850854,7.403300,6.890860,-2.811931,-9.392480,-7.487006,-2.020392,-7.892965,7.153333,2.788808,3.283869,-5.285386,1.026605,9.601251,-8.228002,5.870485,-5.503434,-6.440770], dtype = "float32")#candidate|10542|(195,)|const|float32
call_10541 = relay.TupleGetItem(func_1766_call(relay.reshape(const_10542.astype('float32'), [1, 13, 15])), 0)
call_10543 = relay.TupleGetItem(func_1768_call(relay.reshape(const_10542.astype('float32'), [1, 13, 15])), 0)
func_7723_call = mod.get_global_var('func_7723')
func_7725_call = mutated_mod.get_global_var('func_7725')
call_10589 = relay.TupleGetItem(func_7723_call(), 1)
call_10590 = relay.TupleGetItem(func_7725_call(), 1)
output = relay.Tuple([call_10419,call_10428,var_10429,call_10437,var_10438,call_10441,call_10443,var_10444,call_10454,call_10480,call_10483,call_10492,call_10498,call_10532,call_10541,const_10542,call_10589,])
output2 = relay.Tuple([call_10420,call_10430,var_10429,call_10439,var_10438,call_10442,call_10445,var_10444,call_10455,call_10481,call_10484,call_10493,call_10499,call_10533,call_10543,const_10542,call_10590,])
func_10591 = relay.Function([var_10429,var_10438,var_10444,], output)
mod['func_10591'] = func_10591
mod = relay.transform.InferType()(mod)
mutated_mod['func_10591'] = func_10591
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10591_call = mutated_mod.get_global_var('func_10591')
var_10593 = relay.var("var_10593", dtype = "float32", shape = (24, 26))#candidate|10593|(24, 26)|var|float32
var_10594 = relay.var("var_10594", dtype = "uint32", shape = (525,))#candidate|10594|(525,)|var|uint32
var_10595 = relay.var("var_10595", dtype = "float32", shape = (180,))#candidate|10595|(180,)|var|float32
call_10592 = func_10591_call(var_10593,var_10594,var_10595,)
output = call_10592
func_10596 = relay.Function([var_10593,var_10594,var_10595,], output)
mutated_mod['func_10596'] = func_10596
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7851_call = mod.get_global_var('func_7851')
func_7853_call = mutated_mod.get_global_var('func_7853')
call_10598 = func_7851_call()
call_10599 = func_7851_call()
var_10600 = relay.var("var_10600", dtype = "float32", shape = (7, 7, 6))#candidate|10600|(7, 7, 6)|var|float32
bop_10601 = relay.maximum(call_10598.astype('uint32'), relay.reshape(var_10600.astype('uint32'), relay.shape_of(call_10598))) # shape=(7, 7, 6)
bop_10604 = relay.maximum(call_10599.astype('uint32'), relay.reshape(var_10600.astype('uint32'), relay.shape_of(call_10599))) # shape=(7, 7, 6)
output = relay.Tuple([bop_10601,])
output2 = relay.Tuple([bop_10604,])
func_10607 = relay.Function([var_10600,], output)
mod['func_10607'] = func_10607
mod = relay.transform.InferType()(mod)
var_10608 = relay.var("var_10608", dtype = "float32", shape = (7, 7, 6))#candidate|10608|(7, 7, 6)|var|float32
output = func_10607(var_10608)
func_10609 = relay.Function([var_10608], output)
mutated_mod['func_10609'] = func_10609
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6798_call = mod.get_global_var('func_6798')
func_6800_call = mutated_mod.get_global_var('func_6800')
call_10666 = func_6798_call()
call_10667 = func_6798_call()
var_10670 = relay.var("var_10670", dtype = "float32", shape = (14, 14, 3))#candidate|10670|(14, 14, 3)|var|float32
bop_10671 = relay.subtract(call_10666.astype('float64'), relay.reshape(var_10670.astype('float64'), relay.shape_of(call_10666))) # shape=(14, 14, 3)
bop_10674 = relay.subtract(call_10667.astype('float64'), relay.reshape(var_10670.astype('float64'), relay.shape_of(call_10667))) # shape=(14, 14, 3)
uop_10684 = relay.sigmoid(bop_10671.astype('float64')) # shape=(14, 14, 3)
uop_10686 = relay.sigmoid(bop_10674.astype('float64')) # shape=(14, 14, 3)
bop_10692 = relay.right_shift(bop_10671.astype('int8'), relay.reshape(var_10670.astype('int8'), relay.shape_of(bop_10671))) # shape=(14, 14, 3)
bop_10695 = relay.right_shift(bop_10674.astype('int8'), relay.reshape(var_10670.astype('int8'), relay.shape_of(bop_10674))) # shape=(14, 14, 3)
func_4700_call = mod.get_global_var('func_4700')
func_4702_call = mutated_mod.get_global_var('func_4702')
const_10697 = relay.const([3.167545,-3.958376,8.863656,2.702358,5.548831,-9.057867,-0.734734,1.097438,5.531430,-6.533927,-2.969080,7.880702,6.250414,-9.934145,-8.568034,2.283738,-3.366907,-1.179595,8.999070,-6.924342,-6.868469,-9.632823,-4.252029,1.006004,1.797631,7.469981,-7.998656,2.244744,-7.329859,-1.872953,3.833884,-6.957782,-7.879246,4.487733,-2.291844,-7.985123,-8.875087,4.258582,-7.576329,-9.126857,-6.441833,9.431478,7.464066,0.027719,7.727292,-3.201275,9.492257,-6.300758,-8.675013,6.215410,0.461645,4.325291,-9.152468,-6.516095,3.762888,-4.386415,-6.738844,-7.130074,-4.476510,-8.061560,-4.382729,-1.494506,4.649180,4.115000,9.346854,7.455714,-3.929568,-3.524791,3.127850,4.976143,-2.657831,6.545936,8.049074,-0.629362,3.417820,8.277526,9.329563,5.320156,-2.026098,-7.787286,4.459047,-0.373682,-3.487476,5.703409,-1.844475,-6.164522,-6.706094,0.732774,-5.468206,-2.181669,-7.988927,7.936106,3.195444,7.575786,2.299807,2.994841,8.003524,-0.576513,9.465055,1.360288,-7.241143,-9.225048,9.077850,-8.529034,9.381829,7.452622,9.548150,7.927500,6.532741,-7.048149,1.017472,-1.065862,-5.785925,-5.985459,-8.587304,1.180665,-3.378233,9.821478,7.072253,9.069618,-5.371972,9.976861,6.885095,5.550513,1.237713,8.867322,3.636411,9.210272,-2.628374,3.415573,1.028577,5.242882,-3.826835,-0.036211,-0.314097,-4.447797,-9.371472,-5.342406,6.447861,2.131845,-0.439268,0.148641,-6.482099,8.315110,-5.773140,6.979351,5.780468,9.154399,3.189333,8.176364,6.449405,4.196658,5.468247,7.323190,5.407215,8.420092,0.491054,6.999508,3.907952,-5.528599,-7.718345,-6.701147,-6.800008,1.650552,9.287852,-1.602682,1.569053,-2.820393,0.639112,0.190274,-9.240434,-1.102517,5.328403,4.548179,-9.528733,-1.088584,6.376823,-3.893148,4.846508,-9.107924,0.429999,0.505314,-6.862577,1.458397,-2.690609,-6.511540,-2.828228,-8.222587,-8.789175,-5.440673,-2.116287,8.860252,6.911729,6.011054,-0.097318,1.968930,-3.312132,-3.923781,6.668823,0.838182,-5.024148,-7.033842,-3.001975,-7.089309,5.530408,-7.200008,5.034291,1.685134,6.998391,6.161050,-2.276143,7.258306,-1.793503,3.991812,-3.722278,2.334702,-3.338051,3.604878,-2.833806,-0.860080,-8.291451,4.126605,-7.046566,0.581206,-4.743694,2.839270,0.483498,3.762418,-7.783333,8.158907,0.266316,2.797045,7.167850,4.122713,-6.643315,6.045614,-2.881289,2.647582,2.808323,-8.790748,8.914973,9.020063,4.479711,-8.680063,6.698303,-8.376712,-8.717624,9.636750,-3.863579,-0.308254,-6.391987,6.453570,-5.558743,6.954087,3.540892,0.630731,-0.253664,-7.891186,-9.418079,9.876245,-0.398436,-5.199756,-3.591510,-2.725015,-2.555800,9.352224,-5.085122,3.718098,0.145112,8.884795,3.068378,-8.929703,7.834869,4.647680,7.083018,8.309572,-4.848743,8.745149,7.324302,8.594442,-8.557608,-1.660712,1.953628,6.197860,7.059486,-5.773803,-5.157944,-2.086662,2.919915,2.514933,-6.771205,-9.134353,-2.174990,7.486577,-4.937983,-0.625325,-0.809042,8.433674,-8.356776,-8.575662,6.933578,-6.211060,5.584327,3.121296,-1.898229,-3.244555,-5.110277,2.895811,-6.420182,-1.357081,6.339433,4.245229,-5.890481,-4.181921,4.198298,-0.619756,3.623556,-1.872012,7.131850,2.193443,-0.383512,-3.201900,-1.124597,-5.382555,9.023854,7.495090,9.003889,-7.910971,-2.487739,-3.076279,4.103070,-9.306314,-7.836943,-1.613080,1.863001,0.524892,4.213408,-3.244038,-1.167753,-4.730791,7.362850,-0.801605,-0.590240,-2.693958,1.490582,-2.842252,6.943378,6.794788,-2.309319,8.798590,0.249978,7.622382,5.311188,0.659987,-9.663361,8.497192,1.547754,-5.104579,-3.139832,-0.828490,-4.242892,-6.504344,-7.556275,3.509713,8.826111,-2.006454,2.503618,6.568095,2.273557,-4.795916,-0.266357,6.035466,-2.099100,0.998362,8.160120,-9.763430,0.058457,8.426869,0.203882,-8.603578,-1.549094,7.395484,-3.321420,-5.188989,3.287270,-2.799456,-7.533784,-2.132550,1.578448,6.868870,9.377765,-1.046497,-8.710877,-3.079272,-8.257439,2.984668,8.511214,3.592569,4.718739,4.814803,-9.536501,7.311605,-8.112485,3.731591,5.861612,-8.548839,8.983493,1.434089,-1.288531,0.840122,-1.527672,1.644848,4.225533,-2.138100,-0.523141,-3.090011,3.260747,0.807088,7.645611,6.483770,1.573630,4.769473,3.523033,9.110547,7.369757,-8.393690,2.120973,6.193875,-0.720178,3.422637,-4.544614,-5.296942,0.774202,2.541519,-7.428786,-8.446825,-7.687881,-3.925651,-6.508026,1.719896,-3.329971,-0.177605,-4.321135,3.662192,6.131601,1.199243,-8.296543,7.950633,-4.867451,-2.432147,2.039025,-8.227802,-6.632307,6.691342,-2.042860,-3.643225,8.247231,-8.324322,5.506665,-6.003050,4.970970,-7.591009,5.064240,7.772487,-2.335143,7.364079,-5.067595,8.484454,-4.775230,-1.379828,6.119861,-7.531088,4.876670,-0.450519,-3.383894,8.903594,8.540842,7.894508,2.242309,-6.460431,-2.307112,8.582687,3.494443,9.225851,-7.457589,3.623068,3.845878,-3.793346,-2.359267,6.882628,8.785085,-7.999342,-2.857912,-5.556984,3.095123,3.505905,-9.492312,-7.840436,0.562654,5.310710,0.617284,2.918557,-8.900511,6.417490,1.939969,2.477232,9.658682,3.948206,3.429902,4.542297,-6.432647,-4.400629,-5.373819,-1.363189,5.831380,9.013005,-1.412633,9.101670,-2.215952,-5.119313,0.867249,-8.749223,6.198411,-4.677322,2.308473,5.097928,-6.294311,-0.213085,5.739392,-8.036893,7.886260,2.029563,-2.857715,-2.195416,-2.845289,-4.293756,8.431729,-2.969071,-5.192219,5.826330,8.296491,6.673096,8.669507,-8.813033,2.086218,1.693012,-8.297684,-1.300025,8.140551,8.879877,3.214114,4.661371,-6.041561,-8.352217,-3.375847,4.054101,-2.526101,6.758824,-6.046814,-4.169561,-0.242658,-0.785743,2.372265,2.338496,-9.145143,-4.933059,2.273369,-9.883734,4.490163,-7.953108,-8.976272,8.544899,9.672013,-8.478168,-9.908630,5.032277,-0.134067,8.187206,-5.546035,-0.589285,9.961693,4.507821,-2.292060,1.379732,-5.103071,5.969320,3.482547,2.680310,6.386146,-6.820102,7.073417,-8.369449,-4.942714,1.620884,9.863696,2.418941,-7.888108,3.090863,-3.021124,-1.789418,-6.440342,0.876822,1.336431,-1.927205,9.848050,-6.185829,-4.354698,-9.924490,8.622770,-1.693942,-4.200089,4.655200,-7.854486,3.729665,7.399735,9.129015,-1.510635,9.293946,5.375175,-6.214076,5.838658,5.227134,-2.674054,-9.623431,2.763169,-4.491272,-9.184952,-5.083568,-5.927154,9.059243,-3.967323,4.810229,5.499376,-9.478070,7.029061,0.917930,9.579970,-7.649069,4.390069,8.879225,7.468336,-2.039130,-6.378798,-2.398231,-8.914262,-3.410014,-7.171249,4.063405,6.300180,7.580903,4.050430,2.750511,7.693179,-0.146614,-4.620085,-3.677300,3.580468,6.586879,1.568326,-7.435612,8.425008,-4.785349,-8.581606,0.047979,6.608461,-4.200900,-9.648082,-7.890251,-3.577479,-6.085329,-2.247432,-3.703916,6.434995,7.096634,-8.111264,-4.314152,5.548699,4.764139,5.028763,9.426171,7.370317,2.724223,0.915403,-3.913801,-8.229558,-1.726674,1.965962,-8.476732,-9.359026,7.331000,3.914245,-4.362712,8.244543,-4.025814,-7.264967,6.207905,-6.249692,8.227304,-7.980806,5.380090,-6.476408,-8.694659,-2.213769,-6.977519,-6.221812,8.656160,-1.704833,-9.237648,-3.547114,-5.573684,-6.406103,-8.051652,-1.000706,-2.355987,8.884344,6.859996,1.453830,7.395511,-9.369866,-6.620199,-9.866756,-7.922396,1.750760,-0.842254,2.336105,3.130852,-3.109717,-3.286553,5.521700,-4.368472,-5.907168,9.152751,3.066606,-8.158380,-4.197486,-7.829696,-5.493172,4.349714,-1.342999,6.278229,-8.444588,3.493522,3.393055,4.394967,8.931299,8.324398,7.724769,2.251209,-9.310958,-3.237434,8.460156,2.221231,3.903981,8.589400,-9.648926,-9.280635,7.972913,8.694292,5.523936,-6.125959,-2.166847,1.207498,-5.182923,-4.200289,-2.491973,6.188263,-6.801246,2.305198,-2.634174,1.756724,-6.209094,5.525051,7.470482,-2.242352,-0.044286,8.924243,-8.050135,-1.104144,-3.889295,9.959142,-1.441360,-8.989497,6.487270,-4.710893,-2.728985,-2.533337,7.667277,9.034287,6.525513,-8.008281,-9.785838,-6.503868,-5.413322,4.123415,-6.620252,3.159268,3.078964,6.442593,0.846466,-4.473944,3.336030,-7.308623,6.543281,6.435755,4.262867,-3.059813,-4.622074,4.658902,3.949282,7.156358,4.157010,-9.382504,-0.987022,-0.669012,-6.441671,9.507682,5.082798,-2.557003,3.590105,9.438317,0.646359,-1.846981,7.670264,-0.224821,-4.199286,-8.341465,-6.381052,7.236016,-7.387928,3.500251,-4.172909,-8.165986,-4.799492,-4.938712,-0.722485,7.579628,4.665168,4.580992,3.036536,-2.039342,0.237837,4.163354,0.631168,-7.836424,-6.171706,-2.380691,2.089253,0.640425,-6.743505,2.222950,5.753424,-5.966361,3.137722,2.457998,-3.900222,-2.338750,-8.467486,4.117573,-9.193023,7.499526,8.807132,-2.034091,-7.158726,9.599810,9.800604,-3.697139,8.989871,-9.484181,-9.595032,4.753427,7.717615,6.081826,3.596582,5.773719,-9.014747,6.430843,3.413666,-9.170632,6.517651,-8.858927,8.871961,7.104984,6.880467,3.000248,-4.915617,-2.067464,-8.736050,1.868410,1.102991,-6.317950,-1.160317,3.153622,5.420344,5.139292,0.843976,2.558999,-6.140428,6.481465,-7.214636,-5.471275,8.488880,-4.559951,-9.691952,-5.350734,2.278659,8.870797,-4.852404,7.321908,2.241648,-6.870359,-0.983090,2.259682,-3.842441,-2.512743,4.178590,6.454878,-0.546943,-2.765892,-8.435451,-2.915737,3.028787,6.548425,-4.087752,2.358406,9.040375,2.079464,-1.154380,2.637740,8.393589,9.534311,-8.705417,-8.430038,0.960080,6.786217,2.281730,4.305755,5.583762,-2.914520,7.175572,1.129037,2.295756,-4.702657,6.126085,-9.782689,6.075548,3.483332,1.900244,-9.253793,2.140699,-6.964743,0.440816,8.025513,-1.865992,5.761837,-6.939924,-8.824638,6.304721,8.311022,-0.384383,3.866914,3.499737,8.131583,-8.863261,2.467723,5.767456,-7.714845,4.258272,-9.398834,1.451695,5.786569,-9.709688,6.124931,-1.365052,8.786000,5.735246,5.450182,9.570153,9.630978,-2.794009,1.532117,-6.891234,1.252549,-9.930944,1.025508,5.089405,5.007769,-6.322559,3.395166,2.382039,-8.797949,5.332042,1.733113,-0.723703,3.085304,-0.181349,1.855862,-2.028543,-1.964890,-5.784646,9.331502,3.654482,0.468884,0.318254,-3.776369,7.068369,9.136170,-9.860422,-7.336111,6.280851,-8.444666,-9.367075,-0.626557,-6.527562,7.939055,-7.733935,-9.482634,4.442326,-6.922708,-6.234852,0.706133,4.351569,-9.994502,-6.315348,-2.120716,-7.050203,7.866104,-8.214378,-4.801780,-4.582429,0.630282,-8.998042,-2.683088,-4.433544,-9.674761,-3.199262,-5.704436,1.206630,0.275934,7.095704,8.597508,-0.307336,5.010195,1.161390,8.752147,4.551479,-7.311744,-6.814310,-1.488081,2.047457,0.982831,-5.778485,3.818172,6.819310,5.160703,2.193556,-3.579443,7.189024,-2.706713,3.910956,1.183155,9.811735,-5.775705,-7.081141,-5.359946,-9.551304,8.807198,3.319973,-9.725863,-8.476561,-3.775998,-2.403381,1.570805,-6.159941,-2.957344,-2.897820,-1.041222,-2.967731,7.385905,2.405963,-4.497870,-4.999659,1.549312,7.386358,-0.495547,7.393269,8.892339,9.081668,-8.205174,-0.608911,-2.394506,-4.185079,-0.510836,2.993164,8.748748,3.241603,-5.201782,-6.511702,-1.096034,3.754451,0.585804,6.105512,6.442961,1.197652,-3.226107,-2.183634,-1.091803,1.170649,8.904097,7.191935,-8.476097,5.791740,-5.573215,-3.965163,5.824346,5.288894,-6.553488,3.640964,5.367770,7.080654,-4.378655,-6.178889,-6.210749,-3.281919,2.115239,1.067914,-0.258032,-7.816782,-3.148146,2.863550,7.106240,-8.417570,3.504262,9.393083,-6.462027,-2.480862,-8.870693,-0.511236,4.727398,9.187860,-3.352907,-2.424570,8.673560,4.768977,6.052921,5.811004,2.589060,-4.782909,1.634677,8.230551,8.992979,-5.638207,9.353336,-4.970858,6.908065,9.784286,-4.540264,0.583909,-1.435789,5.410531,0.616888,-1.666301,-5.774168,-7.228037,-3.671614,-3.923341,7.219547,-9.867718,8.229711,0.026054,-3.392210,-1.369412,-1.024860,-9.891592,-5.993462,-4.245066,-5.300218,-9.341827,-0.702172,-4.519944,-1.916904,-3.868562,8.870498,-0.727793,0.356302,-9.528370,-0.407071,4.393536,-3.089108,-5.776172,3.785382,-6.770168,6.325986,0.401584,9.490097,4.383090,-8.021049,-8.361827,-8.011610,-1.461049,-9.812778,1.186710,9.292473,-1.237973,-6.554513,-7.038310,3.844313,3.376793,5.959331,-1.728461,-7.843227,-5.539873,9.358998,-8.250529,-8.774508,-0.307183,9.557156,4.108169,-9.260466,-0.871259,-7.440019,-4.237644,-4.052250,1.610283,-0.426677,-3.187323,3.441000,0.693361,0.535764,-5.425456,-0.016502,9.996489,-4.568467,-5.925608,-4.390656,1.570381,7.597493,-0.454688,9.041828,5.808830,-5.633491,-5.562850,4.527605,-8.746249,9.540505,-8.453765,6.948195,-9.812357,-0.683268,-7.628710,7.562149,-4.341974,-8.492332,-8.883718,-2.233936,8.490545,-9.178699,-0.835221,-3.309437,-0.787816,1.273017,3.370525,-6.010078,-5.252823,6.016334,4.266495,-5.292141,2.392378,2.423138,-7.773630,-6.756173,-7.925124,6.997656,-7.608178,2.876862,9.256654,3.929130,-8.260427,-5.336949,-3.408682,7.418655,8.480419,4.685626,-8.813546,-0.412348,-7.588218,1.838008,0.939351,8.794233,-8.623374,7.799739,4.839901,-3.143479,-6.704160,-6.550334,-8.998456,5.401431,4.717225,5.217297,9.070631,-3.031767,-8.645399,-7.638430,-9.432444,6.532088,-6.178886,1.014274,8.667337,3.382460,-5.376176,-2.054465,-4.391422,-7.887373,6.206624,4.547779,-1.457695,-4.495468,6.909870,-4.797252,0.194201,-4.885235,-1.468321,3.070289,-2.227559,-9.246678,1.737437,8.888121,-3.471523,7.904334,7.581057,-4.121898,1.548377,-7.998678,8.722156,-3.808463,-0.794102,-9.904668,-5.677123,-1.450542,2.639352,-1.992075,-6.003893,-5.316613,4.755236,-3.468436,-6.012979,-9.701918,6.358179,0.983546,-2.571222,1.575587,-1.408091,9.513424,-8.509404,5.265322,-2.602734,-1.426945,-4.392840,6.553198,-8.841727,-9.187059,-5.842680,-3.032730,-5.757925,-9.027457,-1.270084,4.253342,-7.664183,7.040715,2.797649,-4.156165,-9.752289,-9.159550,8.654950,8.967455,7.911632,-1.647852,-3.158422,9.895917,-8.315231,8.940829,-0.956403,-5.494032,-1.335049,0.165909,-5.672531,1.989410,-1.004168,6.432501,-7.429413,1.575632,8.625557,5.631785,7.884366,-5.368545,7.028833,-4.240741,-9.206943,-2.514188,-6.018721,-7.473376,6.906816,-7.102122,8.457020,7.595876,-5.421230,6.071875,-0.266915,4.564373,-8.970085,-4.352321,-9.873842,4.847023,0.960156,3.733089,3.405542,-5.535468,4.884990,-5.188590,0.327172,-9.850743,-7.709379,1.361658,1.629494,-1.650913,-7.481382,2.669016,5.916297,2.922287,-4.917311,6.947184,9.021220,-0.098457,-2.578512,5.872668,-2.458182,3.418707,-9.967871,7.964946,9.675257,3.929854,-6.557180,-4.799503,6.869086,-7.529986,-5.954559,3.022508,-0.820671,0.350884,-5.400042,-1.386867,-3.410803,3.195612,-3.598379,-4.544596,9.968710,8.651770,-9.012357,8.296781,6.771610,7.769108,4.579680,3.176737,-1.185217,-6.098367,-7.103807,2.660962,-3.263552,2.813239,-8.750753,8.032479,4.900531,3.205109,-9.687217,1.799335,5.141567,-3.066197,7.107218,-8.919949,-2.588701,-3.016759,3.788864,9.684684,-8.627512,-7.184347,5.313228,-5.619036,-1.026744,-7.262918,0.879060,-9.514495,3.640343,0.542655,6.300174,-3.960938,6.838506,-9.232587,5.368998,-9.372652,-6.428772,-5.934163,-3.635957,-2.822641,-4.300539,-9.268786,-7.375354,-1.939324,1.940405,-2.820275,5.580127,-5.308461,1.454478,0.752204,-9.511004,-9.214004,-8.540500,-1.743234,-6.659162,5.433207,-3.863101,-2.007966,7.859844,-3.184602,-3.750880,3.712916,7.029822,-2.866985,-9.530465,8.170599,-8.118807,1.232407,-9.121921,9.482851,-0.622592,-5.148498,-6.456268,2.661712,8.400102,-5.668885,-9.347508,-6.245475,3.882270,-6.125266,-8.465642,4.315454,5.935884,-3.265054,-3.402945,-6.503984,-9.091167,8.618631,4.477603,-1.961385,-9.226036,1.434194,-9.280506,3.074169,-3.141820,4.959729,8.492686,6.652431], dtype = "float32")#candidate|10697|(1560,)|const|float32
call_10696 = func_4700_call(relay.reshape(const_10697.astype('float32'), [13, 12, 10]))
call_10698 = func_4700_call(relay.reshape(const_10697.astype('float32'), [13, 12, 10]))
bop_10703 = relay.power(uop_10684.astype('float64'), relay.reshape(bop_10671.astype('float64'), relay.shape_of(uop_10684))) # shape=(14, 14, 3)
bop_10706 = relay.power(uop_10686.astype('float64'), relay.reshape(bop_10674.astype('float64'), relay.shape_of(uop_10686))) # shape=(14, 14, 3)
func_8036_call = mod.get_global_var('func_8036')
func_8038_call = mutated_mod.get_global_var('func_8038')
call_10710 = relay.TupleGetItem(func_8036_call(), 0)
call_10711 = relay.TupleGetItem(func_8038_call(), 0)
bop_10727 = relay.minimum(bop_10703.astype('int64'), relay.reshape(var_10670.astype('int64'), relay.shape_of(bop_10703))) # shape=(14, 14, 3)
bop_10730 = relay.minimum(bop_10706.astype('int64'), relay.reshape(var_10670.astype('int64'), relay.shape_of(bop_10706))) # shape=(14, 14, 3)
output = relay.Tuple([bop_10692,call_10696,const_10697,call_10710,bop_10727,])
output2 = relay.Tuple([bop_10695,call_10698,const_10697,call_10711,bop_10730,])
func_10735 = relay.Function([var_10670,], output)
mod['func_10735'] = func_10735
mod = relay.transform.InferType()(mod)
mutated_mod['func_10735'] = func_10735
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10736 = relay.var("var_10736", dtype = "float32", shape = (14, 14, 3))#candidate|10736|(14, 14, 3)|var|float32
func_10735_call = mutated_mod.get_global_var('func_10735')
call_10737 = func_10735_call(var_10736)
output = call_10737
func_10738 = relay.Function([var_10736], output)
mutated_mod['func_10738'] = func_10738
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7851_call = mod.get_global_var('func_7851')
func_7853_call = mutated_mod.get_global_var('func_7853')
call_10788 = func_7851_call()
call_10789 = func_7851_call()
func_6920_call = mod.get_global_var('func_6920')
func_6921_call = mutated_mod.get_global_var('func_6921')
call_10799 = func_6920_call()
call_10800 = func_6920_call()
func_6968_call = mod.get_global_var('func_6968')
func_6970_call = mutated_mod.get_global_var('func_6970')
call_10842 = relay.TupleGetItem(func_6968_call(), 0)
call_10843 = relay.TupleGetItem(func_6970_call(), 0)
output = relay.Tuple([call_10788,call_10799,call_10842,])
output2 = relay.Tuple([call_10789,call_10800,call_10843,])
func_10847 = relay.Function([], output)
mod['func_10847'] = func_10847
mod = relay.transform.InferType()(mod)
mutated_mod['func_10847'] = func_10847
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10847_call = mutated_mod.get_global_var('func_10847')
call_10848 = func_10847_call()
output = call_10848
func_10849 = relay.Function([], output)
mutated_mod['func_10849'] = func_10849
mutated_mod = relay.transform.InferType()(mutated_mod)
const_10868 = relay.constdtype = "float64")#candidate|10868|(10, 15, 14)|const|float64
uop_10869 = relay.sin(const_10868.astype('float64')) # shape=(10, 15, 14)
func_8313_call = mod.get_global_var('func_8313')
func_8314_call = mutated_mod.get_global_var('func_8314')
call_10872 = relay.TupleGetItem(func_8313_call(), 1)
call_10873 = relay.TupleGetItem(func_8314_call(), 1)
output = relay.Tuple([uop_10869,call_10872,])
output2 = relay.Tuple([uop_10869,call_10873,])
func_10875 = relay.Function([], output)
mod['func_10875'] = func_10875
mod = relay.transform.InferType()(mod)
output = func_10875()
func_10876 = relay.Function([], output)
mutated_mod['func_10876'] = func_10876
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10926 = relay.var("var_10926", dtype = "float64", shape = (12, 7, 11))#candidate|10926|(12, 7, 11)|var|float64
uop_10927 = relay.sinh(var_10926.astype('float64')) # shape=(12, 7, 11)
output = relay.Tuple([uop_10927,])
output2 = relay.Tuple([uop_10927,])
func_10945 = relay.Function([var_10926,], output)
mod['func_10945'] = func_10945
mod = relay.transform.InferType()(mod)
var_10946 = relay.var("var_10946", dtype = "float64", shape = (12, 7, 11))#candidate|10946|(12, 7, 11)|var|float64
output = func_10945(var_10946)
func_10947 = relay.Function([var_10946], output)
mutated_mod['func_10947'] = func_10947
mutated_mod = relay.transform.InferType()(mutated_mod)
const_10979 = relay.constdtype = "float64")#candidate|10979|(13, 10, 13)|const|float64
uop_10980 = relay.sqrt(const_10979.astype('float64')) # shape=(13, 10, 13)
func_2406_call = mod.get_global_var('func_2406')
func_2409_call = mutated_mod.get_global_var('func_2409')
var_10994 = relay.var("var_10994", dtype = "float32", shape = (78,))#candidate|10994|(78,)|var|float32
var_10995 = relay.var("var_10995", dtype = "float32", shape = (100, 2))#candidate|10995|(100, 2)|var|float32
call_10993 = relay.TupleGetItem(func_2406_call(relay.reshape(var_10994.astype('float32'), [1, 13, 6]), relay.reshape(var_10995.astype('float32'), [200,]), ), 0)
call_10996 = relay.TupleGetItem(func_2409_call(relay.reshape(var_10994.astype('float32'), [1, 13, 6]), relay.reshape(var_10995.astype('float32'), [200,]), ), 0)
output = relay.Tuple([uop_10980,call_10993,var_10994,var_10995,])
output2 = relay.Tuple([uop_10980,call_10996,var_10994,var_10995,])
func_11000 = relay.Function([var_10994,var_10995,], output)
mod['func_11000'] = func_11000
mod = relay.transform.InferType()(mod)
mutated_mod['func_11000'] = func_11000
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11000_call = mutated_mod.get_global_var('func_11000')
var_11002 = relay.var("var_11002", dtype = "float32", shape = (78,))#candidate|11002|(78,)|var|float32
var_11003 = relay.var("var_11003", dtype = "float32", shape = (100, 2))#candidate|11003|(100, 2)|var|float32
call_11001 = func_11000_call(var_11002,var_11003,)
output = call_11001
func_11004 = relay.Function([var_11002,var_11003,], output)
mutated_mod['func_11004'] = func_11004
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6087_call = mod.get_global_var('func_6087')
func_6088_call = mutated_mod.get_global_var('func_6088')
call_11015 = func_6087_call()
call_11016 = func_6087_call()
output = relay.Tuple([call_11015,])
output2 = relay.Tuple([call_11016,])
func_11021 = relay.Function([], output)
mod['func_11021'] = func_11021
mod = relay.transform.InferType()(mod)
output = func_11021()
func_11022 = relay.Function([], output)
mutated_mod['func_11022'] = func_11022
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6540_call = mod.get_global_var('func_6540')
func_6541_call = mutated_mod.get_global_var('func_6541')
call_11023 = relay.TupleGetItem(func_6540_call(), 0)
call_11024 = relay.TupleGetItem(func_6541_call(), 0)
output = relay.Tuple([call_11023,])
output2 = relay.Tuple([call_11024,])
func_11030 = relay.Function([], output)
mod['func_11030'] = func_11030
mod = relay.transform.InferType()(mod)
mutated_mod['func_11030'] = func_11030
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11030_call = mutated_mod.get_global_var('func_11030')
call_11031 = func_11030_call()
output = call_11031
func_11032 = relay.Function([], output)
mutated_mod['func_11032'] = func_11032
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6995_call = mod.get_global_var('func_6995')
func_6997_call = mutated_mod.get_global_var('func_6997')
call_11073 = func_6995_call()
call_11074 = func_6995_call()
output = relay.Tuple([call_11073,])
output2 = relay.Tuple([call_11074,])
func_11086 = relay.Function([], output)
mod['func_11086'] = func_11086
mod = relay.transform.InferType()(mod)
output = func_11086()
func_11087 = relay.Function([], output)
mutated_mod['func_11087'] = func_11087
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7723_call = mod.get_global_var('func_7723')
func_7725_call = mutated_mod.get_global_var('func_7725')
call_11102 = relay.TupleGetItem(func_7723_call(), 1)
call_11103 = relay.TupleGetItem(func_7725_call(), 1)
func_5125_call = mod.get_global_var('func_5125')
func_5129_call = mutated_mod.get_global_var('func_5129')
var_11111 = relay.var("var_11111", dtype = "uint64", shape = ())#candidate|11111|()|var|uint64
const_11112 = relay.const([6,-7,-5,-5,-2,-4,1,1,3,6,1,7,-10,-9,5,4,-1,8,6,6,4,9,7,-9,-4,-4,6,-6,-6,1,4,5,-8,3,8,-2,-9,-10,-4,7,-5,2,-4,-2,-5,6,-10,-7,5,2,9,-6,8,-5,6,-2,-4,-6,5,1,-1,-1,5,9,6,-3,-9,3,8,2,9,7,-8,-2,-3,3,7,4,2,5,-7,4,9,5,-5,-1,9,-8,5,10,-2,-9,-6,4,-8,-5,5,-1,7,2,-3,4,5,8,1,-5,10,-1,-10,-4,2,-3,9,3,-10,-5,2,-6,3,-6,-2,9,-6,10,-5,-4,6,-8,-1,-10,-8,5,-8,6,5,-8,-2,2,-9,-5,9,-3,-5,9,-2,7,7,9,-3,7,-6,8,3,-7,2,-7,1,5,9,-2,-6,10,-2,-9,3,-6,2,-8,-2,9,8,7,6,-5,-10,5,-7,9,3,8,-3,-6,8,2,-10,6,-5,-7,-6,5,1,-2,-6,-10,9,6,10,-9,-7,-8,9,6,8,-6,-8,-10,4,7,-5,8,5,-7,5,3,6,8,-7,3,10,10,2,-6,2,-6,-2,-2,-10,2,-7,-9,6,8,4,9,-1,-1,-6,1,2,-6,6,9,-9,3,-6,8,-2,7,10,-9,2,-5,-8,-10,-8,3,6,-9,-5,-8,-5,-4,5,-4,-7,5,4,10,8,2,-6,-7,-1,7,9,8,4,-4,5,-1,2,2,3,9,1,7,-8,-10,-3,6,2,7,-8,-2,-8,3,-6,7,6,5,7,5,-8,-6,-1,2,-8,9,9,-9,6,-6,-7,-6,-9], dtype = "uint64")#candidate|11112|(315,)|const|uint64
call_11110 = func_5125_call(relay.reshape(var_11111.astype('uint64'), []), relay.reshape(const_11112.astype('uint64'), [15, 3, 7]), )
call_11113 = func_5125_call(relay.reshape(var_11111.astype('uint64'), []), relay.reshape(const_11112.astype('uint64'), [15, 3, 7]), )
func_5125_call = mod.get_global_var('func_5125')
func_5129_call = mutated_mod.get_global_var('func_5129')
call_11125 = func_5125_call(relay.reshape(var_11111.astype('uint64'), []), relay.reshape(const_11112.astype('uint64'), [15, 3, 7]), )
call_11126 = func_5125_call(relay.reshape(var_11111.astype('uint64'), []), relay.reshape(const_11112.astype('uint64'), [15, 3, 7]), )
output = relay.Tuple([call_11102,call_11110,var_11111,const_11112,call_11125,])
output2 = relay.Tuple([call_11103,call_11113,var_11111,const_11112,call_11126,])
func_11127 = relay.Function([var_11111,], output)
mod['func_11127'] = func_11127
mod = relay.transform.InferType()(mod)
mutated_mod['func_11127'] = func_11127
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11128 = relay.var("var_11128", dtype = "uint64", shape = ())#candidate|11128|()|var|uint64
func_11127_call = mutated_mod.get_global_var('func_11127')
call_11129 = func_11127_call(var_11128)
output = call_11129
func_11130 = relay.Function([var_11128], output)
mutated_mod['func_11130'] = func_11130
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9642_call = mod.get_global_var('func_9642')
func_9643_call = mutated_mod.get_global_var('func_9643')
call_11132 = func_9642_call()
call_11133 = func_9642_call()
output = relay.Tuple([call_11132,])
output2 = relay.Tuple([call_11133,])
func_11144 = relay.Function([], output)
mod['func_11144'] = func_11144
mod = relay.transform.InferType()(mod)
output = func_11144()
func_11145 = relay.Function([], output)
mutated_mod['func_11145'] = func_11145
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6639_call = mod.get_global_var('func_6639')
func_6640_call = mutated_mod.get_global_var('func_6640')
call_11155 = relay.TupleGetItem(func_6639_call(), 0)
call_11156 = relay.TupleGetItem(func_6640_call(), 0)
func_6087_call = mod.get_global_var('func_6087')
func_6088_call = mutated_mod.get_global_var('func_6088')
call_11157 = func_6087_call()
call_11158 = func_6087_call()
bop_11159 = relay.floor_divide(call_11155.astype('float64'), relay.reshape(call_11157.astype('float64'), relay.shape_of(call_11155))) # shape=(13, 12, 10)
bop_11162 = relay.floor_divide(call_11156.astype('float64'), relay.reshape(call_11158.astype('float64'), relay.shape_of(call_11156))) # shape=(13, 12, 10)
uop_11164 = relay.exp(call_11157.astype('float32')) # shape=(6, 260)
uop_11166 = relay.exp(call_11158.astype('float32')) # shape=(6, 260)
bop_11173 = relay.divide(uop_11164.astype('float64'), relay.reshape(call_11157.astype('float64'), relay.shape_of(uop_11164))) # shape=(6, 260)
bop_11176 = relay.divide(uop_11166.astype('float64'), relay.reshape(call_11158.astype('float64'), relay.shape_of(uop_11166))) # shape=(6, 260)
uop_11187 = relay.sqrt(bop_11173.astype('float32')) # shape=(6, 260)
uop_11189 = relay.sqrt(bop_11176.astype('float32')) # shape=(6, 260)
output = relay.Tuple([bop_11159,uop_11187,])
output2 = relay.Tuple([bop_11162,uop_11189,])
func_11195 = relay.Function([], output)
mod['func_11195'] = func_11195
mod = relay.transform.InferType()(mod)
mutated_mod['func_11195'] = func_11195
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11195_call = mutated_mod.get_global_var('func_11195')
call_11196 = func_11195_call()
output = call_11196
func_11197 = relay.Function([], output)
mutated_mod['func_11197'] = func_11197
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10289_call = mod.get_global_var('func_10289')
func_10291_call = mutated_mod.get_global_var('func_10291')
call_11210 = relay.TupleGetItem(func_10289_call(), 0)
call_11211 = relay.TupleGetItem(func_10291_call(), 0)
output = call_11210
output2 = call_11211
func_11215 = relay.Function([], output)
mod['func_11215'] = func_11215
mod = relay.transform.InferType()(mod)
mutated_mod['func_11215'] = func_11215
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11215_call = mutated_mod.get_global_var('func_11215')
call_11216 = func_11215_call()
output = call_11216
func_11217 = relay.Function([], output)
mutated_mod['func_11217'] = func_11217
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7851_call = mod.get_global_var('func_7851')
func_7853_call = mutated_mod.get_global_var('func_7853')
call_11245 = func_7851_call()
call_11246 = func_7851_call()
output = relay.Tuple([call_11245,])
output2 = relay.Tuple([call_11246,])
func_11253 = relay.Function([], output)
mod['func_11253'] = func_11253
mod = relay.transform.InferType()(mod)
mutated_mod['func_11253'] = func_11253
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11253_call = mutated_mod.get_global_var('func_11253')
call_11254 = func_11253_call()
output = call_11254
func_11255 = relay.Function([], output)
mutated_mod['func_11255'] = func_11255
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8538_call = mod.get_global_var('func_8538')
func_8539_call = mutated_mod.get_global_var('func_8539')
call_11261 = relay.TupleGetItem(func_8538_call(), 1)
call_11262 = relay.TupleGetItem(func_8539_call(), 1)
func_9204_call = mod.get_global_var('func_9204')
func_9206_call = mutated_mod.get_global_var('func_9206')
call_11278 = relay.TupleGetItem(func_9204_call(), 1)
call_11279 = relay.TupleGetItem(func_9206_call(), 1)
output = relay.Tuple([call_11261,call_11278,])
output2 = relay.Tuple([call_11262,call_11279,])
func_11291 = relay.Function([], output)
mod['func_11291'] = func_11291
mod = relay.transform.InferType()(mod)
mutated_mod['func_11291'] = func_11291
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11291_call = mutated_mod.get_global_var('func_11291')
call_11292 = func_11291_call()
output = call_11292
func_11293 = relay.Function([], output)
mutated_mod['func_11293'] = func_11293
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10289_call = mod.get_global_var('func_10289')
func_10291_call = mutated_mod.get_global_var('func_10291')
call_11302 = relay.TupleGetItem(func_10289_call(), 1)
call_11303 = relay.TupleGetItem(func_10291_call(), 1)
output = call_11302
output2 = call_11303
func_11309 = relay.Function([], output)
mod['func_11309'] = func_11309
mod = relay.transform.InferType()(mod)
output = func_11309()
func_11310 = relay.Function([], output)
mutated_mod['func_11310'] = func_11310
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11483 = relay.var("var_11483", dtype = "float64", shape = (1, 7, 7))#candidate|11483|(1, 7, 7)|var|float64
uop_11484 = relay.log10(var_11483.astype('float64')) # shape=(1, 7, 7)
func_1766_call = mod.get_global_var('func_1766')
func_1768_call = mutated_mod.get_global_var('func_1768')
const_11489 = relay.const([6.230303,3.393642,4.267632,-9.819408,-5.946096,-2.362991,-0.073506,4.214438,1.068132,2.367574,-2.293253,2.504054,5.211259,-9.807775,-5.703815,-3.401883,-3.535789,-9.499974,5.966435,9.523249,7.621993,1.883375,5.708871,1.617127,-5.029871,4.561423,3.654672,-3.394247,-1.911837,-7.442569,5.338329,8.716608,-2.586055,5.569690,-5.922067,5.730643,0.035580,7.747386,2.540004,5.632775,4.218348,1.687347,-2.959990,-4.442313,-9.488644,5.558791,0.300949,5.371885,-0.377709,4.255879,-2.615856,-5.427327,2.572621,-3.615182,-4.378765,-9.986037,-1.315878,7.057169,9.597307,-1.718187,-7.106639,5.974522,-9.438112,0.847742,-4.320759,3.336575,3.299921,-0.376101,7.284837,0.450147,-5.519587,-7.161692,9.739720,3.805987,3.742183,2.563960,0.605794,6.183536,6.508971,-3.413211,1.121268,-1.503237,6.464721,0.232710,6.303386,4.830589,-5.455212,1.312282,9.611319,3.069314,-9.034707,-9.752701,2.351690,6.898284,-4.470145,-6.949206,0.160012,-0.249111,2.155935,4.340883,-6.374657,5.655254,-6.274760,7.111492,9.203581,-2.442307,1.221297,-0.590747,-3.362137,7.480577,7.057536,-9.987469,7.915399,-2.531315,-9.360819,6.191908,-2.430461,-5.172609,2.683677,-0.384929,-9.572568,-9.659130,9.545036,-4.874394,-1.244104,-5.539555,-7.968323,-9.634978,1.562338,-1.584719,0.288893,-9.849163,-3.885416,-4.820826,-7.491016,3.670959,-6.709546,-8.790186,-1.158566,0.675959,3.854235,-8.320249,8.207951,0.880576,9.420331,-7.238411,6.138808,-3.862084,3.609963,-2.757348,0.017848,-9.546487,6.561403,7.964343,-9.160634,4.415428,-7.913314,9.266606,-1.381706,-6.288321,-2.643272,-7.579203,-9.885681,-2.110333,-0.019977,3.564802,-2.821765,2.857452,0.613191,4.535520,5.430159,6.097274,-0.863862,1.097682,6.198539,6.050500,4.091556,5.376462,-4.955811,7.020064,-0.880200,6.796275,6.501862,0.132548,4.063103,-6.241895,6.348632,8.027930,-9.417751,-4.463946,-9.867015,3.040402,-2.610753,9.074343,-0.236745], dtype = "float32")#candidate|11489|(195,)|const|float32
call_11488 = relay.TupleGetItem(func_1766_call(relay.reshape(const_11489.astype('float32'), [1, 13, 15])), 0)
call_11490 = relay.TupleGetItem(func_1768_call(relay.reshape(const_11489.astype('float32'), [1, 13, 15])), 0)
uop_11491 = relay.sigmoid(uop_11484.astype('float32')) # shape=(1, 7, 7)
output = relay.Tuple([call_11488,const_11489,uop_11491,])
output2 = relay.Tuple([call_11490,const_11489,uop_11491,])
func_11501 = relay.Function([var_11483,], output)
mod['func_11501'] = func_11501
mod = relay.transform.InferType()(mod)
var_11502 = relay.var("var_11502", dtype = "float64", shape = (1, 7, 7))#candidate|11502|(1, 7, 7)|var|float64
output = func_11501(var_11502)
func_11503 = relay.Function([var_11502], output)
mutated_mod['func_11503'] = func_11503
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6553_call = mod.get_global_var('func_6553')
func_6555_call = mutated_mod.get_global_var('func_6555')
call_11610 = relay.TupleGetItem(func_6553_call(), 1)
call_11611 = relay.TupleGetItem(func_6555_call(), 1)
uop_11615 = relay.erf(call_11610.astype('float32')) # shape=(14, 14, 3)
uop_11617 = relay.erf(call_11611.astype('float32')) # shape=(14, 14, 3)
func_7061_call = mod.get_global_var('func_7061')
func_7063_call = mutated_mod.get_global_var('func_7063')
var_11633 = relay.var("var_11633", dtype = "float64", shape = (231, 3))#candidate|11633|(231, 3)|var|float64
call_11632 = relay.TupleGetItem(func_7061_call(relay.reshape(var_11633.astype('float64'), [693, 1])), 0)
call_11634 = relay.TupleGetItem(func_7063_call(relay.reshape(var_11633.astype('float64'), [693, 1])), 0)
uop_11640 = relay.log(uop_11615.astype('float32')) # shape=(14, 14, 3)
uop_11642 = relay.log(uop_11617.astype('float32')) # shape=(14, 14, 3)
func_7673_call = mod.get_global_var('func_7673')
func_7675_call = mutated_mod.get_global_var('func_7675')
var_11644 = relay.var("var_11644", dtype = "float32", shape = (30, 6))#candidate|11644|(30, 6)|var|float32
call_11643 = relay.TupleGetItem(func_7673_call(relay.reshape(var_11644.astype('float32'), [180,])), 2)
call_11645 = relay.TupleGetItem(func_7675_call(relay.reshape(var_11644.astype('float32'), [180,])), 2)
output = relay.Tuple([call_11632,var_11633,uop_11640,call_11643,var_11644,])
output2 = relay.Tuple([call_11634,var_11633,uop_11642,call_11645,var_11644,])
func_11658 = relay.Function([var_11633,var_11644,], output)
mod['func_11658'] = func_11658
mod = relay.transform.InferType()(mod)
var_11659 = relay.var("var_11659", dtype = "float64", shape = (231, 3))#candidate|11659|(231, 3)|var|float64
var_11660 = relay.var("var_11660", dtype = "float32", shape = (30, 6))#candidate|11660|(30, 6)|var|float32
output = func_11658(var_11659,var_11660,)
func_11661 = relay.Function([var_11659,var_11660,], output)
mutated_mod['func_11661'] = func_11661
mutated_mod = relay.transform.InferType()(mutated_mod)
const_11676 = relay.const([[[7,4,-7,8,4,-3,4,-1],[-7,9,5,2,-4,-2,9,-10],[8,-10,-3,-4,2,9,3,6],[10,-1,5,-10,10,-9,-9,-5],[5,2,6,6,-3,-4,2,6],[7,-8,1,-1,-1,9,-1,9],[-10,7,-8,5,-5,-8,1,2],[1,10,7,2,4,-10,-6,5],[3,-5,3,10,9,9,-4,-5],[9,7,-9,-6,2,9,6,-7],[6,-7,2,-6,-9,-8,-6,-8],[-10,-10,7,1,-1,-9,-4,5]],[[-8,8,-2,-10,1,-4,1,-1],[8,-10,-5,-6,3,3,-2,9],[1,-2,4,-5,-10,-4,-2,1],[-6,7,-4,-8,-8,6,9,2],[5,-4,7,-5,-6,-7,-4,10],[-9,-1,-8,2,2,-6,3,3],[-3,8,4,-7,6,1,-2,2],[-8,6,4,3,-6,-10,-10,-1],[-10,5,4,-6,-7,10,10,5],[-5,-5,1,-8,1,-7,1,-6],[-7,-4,-4,-3,9,-2,-5,8],[-8,-2,3,5,6,-4,2,-7]],[[-10,3,-1,-5,-8,-9,2,5],[-10,-8,-7,-8,-8,1,4,-2],[6,10,-10,8,-10,2,-4,-3],[-6,-1,7,-5,6,7,-1,-6],[-2,6,9,-1,1,-4,-2,1],[-9,8,-4,1,8,-9,6,-10],[4,-2,10,-4,7,-7,-5,7],[-3,-10,-10,6,-10,1,-2,4],[-4,1,-8,-4,2,-5,10,-3],[-9,-9,-5,-8,-1,10,-9,1],[1,-7,6,-5,5,-7,4,-7],[4,-3,-10,-3,2,-4,8,-4]]], dtype = "uint64")#candidate|11676|(3, 12, 8)|const|uint64
const_11677 = relay.const([[[3,1,-3,9,-8,8,10,-2],[-5,5,-6,-8,8,-7,-3,8],[-4,-1,1,1,-4,7,-1,8],[-1,1,-7,-8,9,9,2,-9],[8,3,9,-7,3,6,6,9],[-8,-7,-1,2,-10,-3,8,-1],[1,6,-10,-2,8,6,-5,-1],[5,-10,3,-8,2,-9,5,-7],[-6,6,-5,-10,10,6,10,10],[7,6,3,3,7,-8,-4,7],[-9,5,-3,8,10,1,-3,-9],[-3,8,-9,1,-7,-8,-5,8]],[[-10,-7,-9,-8,-1,10,10,-2],[-6,-8,5,3,-10,10,6,9],[-2,-2,-3,1,9,-6,3,-3],[10,6,-3,-7,7,-10,7,10],[-8,-2,3,5,-7,5,10,-10],[1,8,-2,9,-4,4,-8,3],[-9,9,10,-5,4,6,-10,-6],[2,-7,1,-6,4,-6,-6,-10],[-4,8,2,1,-5,-10,3,6],[-2,-2,8,7,7,6,-2,2],[-7,2,-6,-5,-1,-8,3,-2],[6,5,9,9,5,3,4,-5]],[[-8,10,1,-4,10,-7,-5,-5],[10,-8,4,-8,3,-8,7,-7],[2,8,1,-4,-6,-4,-9,-4],[3,-9,-7,7,8,-6,3,-1],[-1,8,5,-2,4,-1,-7,1],[9,6,-7,-6,2,-10,-5,8],[2,-7,10,7,7,5,5,5],[-6,-9,-6,5,-9,1,-8,2],[-6,8,-10,8,-4,-5,-8,2],[1,-6,8,-5,8,3,-6,9],[-5,8,1,7,10,6,-10,4],[10,8,-3,7,8,1,-6,-8]]], dtype = "uint64")#candidate|11677|(3, 12, 8)|const|uint64
bop_11678 = relay.right_shift(const_11676.astype('uint64'), relay.reshape(const_11677.astype('uint64'), relay.shape_of(const_11676))) # shape=(3, 12, 8)
output = bop_11678
output2 = bop_11678
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

==========mod==========
#[version = "0.0.5"]
def @func_2875(%var_2872: Tensor[(3, 14), float32]) -> Tensor[(3, 14), float32] {
  %0 = cast(%var_2872, dtype="float32") /* ty=Tensor[(3, 14), float32] */;
  acosh(%0) /* ty=Tensor[(3, 14), float32] */
}

def @func_2856() -> (Tensor[(9, 9, 14), bool], Tensor[(26, 3), float32], Tensor[(13, 3, 2), float32]) {
  %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(26, 3), float32] */, dtype="float32") /* ty=Tensor[(26, 3), float32] */;
  %2 = reshape(%1, newshape=[78]) /* ty=Tensor[(78), float32] */;
  %3 = @func_1387(%2) /* ty=(Tensor[(9, 9, 14), bool], Tensor[(13, 3, 2), bool]) */;
  %4 = %3.1;
  %5 = cast(%4, dtype="float32") /* ty=Tensor[(13, 3, 2), float32] */;
  %6 = @func_2135() /* ty=Tensor[(9, 9, 14), bool] */;
  %7 = log10(%5) /* ty=Tensor[(13, 3, 2), float32] */;
  (%6, meta[relay.Constant][0] /* ty=Tensor[(26, 3), float32] */, %7)
}

def @func_1596() -> Tensor[(9, 2, 15), float64] {
  @func_1133() /* ty=Tensor[(9, 2, 15), float64] */
}

def @func_625(%var_617: Tensor[(9, 9, 14), float32]) -> Tensor[(9, 9, 14), bool] {
  %8 = @func_277() /* ty=Tensor[(9, 9, 14), float32] */;
  %9 = cast(%var_617, dtype="bool") /* ty=Tensor[(9, 9, 14), bool] */;
  %10 = shape_of(%8, dtype="int32") /* ty=Tensor[(3), int32] */;
  %11 = cast(%8, dtype="bool") /* ty=Tensor[(9, 9, 14), bool] */;
  %12 = dyn.reshape(%9, %10, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%11, %12) /* ty=Tensor[(9, 9, 14), bool] */
}

def @func_5226(%var_5223: Tensor[(5, 9, 4), float32]) -> Tensor[(5, 9, 4), float32] {
  %13 = cast(%var_5223, dtype="float32") /* ty=Tensor[(5, 9, 4), float32] */;
  asinh(%13) /* ty=Tensor[(5, 9, 4), float32] */
}

def @func_1075(%var_1052: bool, %var_1064: Tensor[(1134, 1), float32], %var_1065: Tensor[(220), float32]) -> (Tensor[(6, 4, 12), bool], Tensor[(11, 6, 5), float32], Tensor[(10, 3), float32], Tensor[(330), float32], Tensor[(30), float32], Tensor[(1134, 220), float32]) {
  %14 = cast(%var_1052, dtype="bool") /* ty=bool */;
  %15 = cast(meta[relay.Constant][1] /* ty=Tensor[(6, 4, 12), bool] */, dtype="bool") /* ty=Tensor[(6, 4, 12), bool] */;
  %16 = cast(meta[relay.Constant][2] /* ty=Tensor[(10, 3), float32] */, dtype="float32") /* ty=Tensor[(10, 3), float32] */;
  %17 = cast(meta[relay.Constant][3] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
  %18 = reshape(%16, newshape=[1, 6, 5]) /* ty=Tensor[(1, 6, 5), float32] */;
  %19 = reshape(%17, newshape=[11, 6, 5]) /* ty=Tensor[(11, 6, 5), float32] */;
  %20 = @func_264(%18, %19) /* ty=(Tensor[(11, 6, 5), float32],) */;
  %21 = cast(%var_1064, dtype="float32") /* ty=Tensor[(1134, 1), float32] */;
  %22 = cast(meta[relay.Constant][2] /* ty=Tensor[(10, 3), float32] */, dtype="float32") /* ty=Tensor[(10, 3), float32] */;
  %23 = cast(%var_1052, dtype="float32") /* ty=float32 */;
  %24 = cast(%var_1065, dtype="float32") /* ty=Tensor[(220), float32] */;
  %25 = reshape(%21, newshape=[9, 9, 14]) /* ty=Tensor[(9, 9, 14), float32] */;
  %26 = reshape(%22, newshape=[30]) /* ty=Tensor[(30), float32] */;
  %27 = reshape(%23, newshape=[]) /* ty=float32 */;
  %28 = reshape(%24, newshape=[220]) /* ty=Tensor[(220), float32] */;
  %29 = @func_876(%25, %26, %27, %28) /* ty=(Tensor[(9, 9, 14), float64], Tensor[(9, 9, 14), bool], Tensor[(13, 3, 2), float32], Tensor[(30), float32], Tensor[(55, 6), float32], Tensor[(1, 78), float32], Tensor[(5, 4, 11), float32], float32, Tensor[(220), float32], Tensor[(9, 9, 14), bool], Tensor[(9, 2, 15), float64]) */;
  %30 = cast(%var_1065, dtype="float32") /* ty=Tensor[(220), float32] */;
  %31 = cast(%var_1064, dtype="float32") /* ty=Tensor[(1134, 1), float32] */;
  %32 = logical_or(%14, %15) /* ty=Tensor[(6, 4, 12), bool] */;
  %33 = %20.0;
  %34 = %29.3;
  %35 = floor_mod(%30, %31) /* ty=Tensor[(1134, 220), float32] */;
  (%32, %33, meta[relay.Constant][2] /* ty=Tensor[(10, 3), float32] */, meta[relay.Constant][3] /* ty=Tensor[(330), float32] */, %34, %35)
}

def @func_3725() -> (Tensor[(9, 9, 14), float32],) {
  %36 = @func_1770() /* ty=(Tensor[(9, 9, 14), float32],) */;
  %37 = %36.0;
  (%37,)
}

def @func_264(%var_257: Tensor[(1, 6, 5), float32], %var_258: Tensor[(11, 6, 5), float32]) -> (Tensor[(11, 6, 5), float32],) {
  %38 = cast(%var_257, dtype="float32") /* ty=Tensor[(1, 6, 5), float32] */;
  %39 = cast(%var_258, dtype="float32") /* ty=Tensor[(11, 6, 5), float32] */;
  %40 = floor_mod(%38, %39) /* ty=Tensor[(11, 6, 5), float32] */;
  (%40,)
}

def @func_4229(%var_4205: Tensor[(12, 11), float32], %var_4214: Tensor[(30), float32], %var_4225: bool) -> (Tensor[(12, 11), float32], Tensor[(11, 6, 5), float32], Tensor[(30), float32], Tensor[(5, 66), float32], Tensor[(220), float32], bool) {
  %41 = cast(%var_4205, dtype="float32") /* ty=Tensor[(12, 11), float32] */;
  %42 = cast(%var_4214, dtype="float32") /* ty=Tensor[(30), float32] */;
  %43 = cast(meta[relay.Constant][4] /* ty=Tensor[(5, 66), float32] */, dtype="float32") /* ty=Tensor[(5, 66), float32] */;
  %44 = reshape(%42, newshape=[1, 6, 5]) /* ty=Tensor[(1, 6, 5), float32] */;
  %45 = reshape(%43, newshape=[11, 6, 5]) /* ty=Tensor[(11, 6, 5), float32] */;
  %46 = @func_264(%44, %45) /* ty=(Tensor[(11, 6, 5), float32],) */;
  %47 = cast(%var_4225, dtype="bool") /* ty=bool */;
  %48 = reshape(%47, newshape=[]) /* ty=bool */;
  %49 = @func_2797(%48) /* ty=(Tensor[(9, 9, 14), bool], Tensor[(30), float32], bool, Tensor[(220), float32], Tensor[(9, 9, 14), float32]) */;
  %50 = exp(%41) /* ty=Tensor[(12, 11), float32] */;
  %51 = %46.0;
  %52 = %49.3;
  (%50, %51, %var_4214, meta[relay.Constant][4] /* ty=Tensor[(5, 66), float32] */, %52, %var_4225)
}

def @func_3592() -> (Tensor[(9, 9, 14), bool], Tensor[(9, 2, 15), float32], Tensor[(42, 4), uint8], Tensor[(42, 4), bool]) {
  %53 = @func_1326() /* ty=(Tensor[(9, 9, 14), bool],) */;
  %54 = @func_1596() /* ty=Tensor[(9, 2, 15), float64] */;
  %55 = cast(meta[relay.Constant][5] /* ty=Tensor[(9, 2, 15), float64] */, dtype="float32") /* ty=Tensor[(9, 2, 15), float32] */;
  %56 = shape_of(%54, dtype="int32") /* ty=Tensor[(3), int32] */;
  %57 = cast(%54, dtype="float32") /* ty=Tensor[(9, 2, 15), float32] */;
  %58 = dyn.reshape(%55, %56, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %59 = cast(meta[relay.Constant][6] /* ty=Tensor[(42, 4), bool] */, dtype="bool") /* ty=Tensor[(42, 4), bool] */;
  %60 = cast(meta[relay.Constant][6] /* ty=Tensor[(42, 4), bool] */, dtype="bool") /* ty=Tensor[(42, 4), bool] */;
  %61 = reshape(%59, newshape=[7, 12, 2]) /* ty=Tensor[(7, 12, 2), bool] */;
  %62 = reshape(%60, newshape=[7, 12, 2]) /* ty=Tensor[(7, 12, 2), bool] */;
  %63 = @func_1011(%61, %62) /* ty=Tensor[(7, 12, 2), bool] */;
  %64 = cast(%63, dtype="bool") /* ty=Tensor[(7, 12, 2), bool] */;
  %65 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(42, 4), bool] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %66 = cast(meta[relay.Constant][6] /* ty=Tensor[(42, 4), bool] */, dtype="bool") /* ty=Tensor[(42, 4), bool] */;
  %67 = dyn.reshape(%64, %65, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %68 = logical_and(%66, %67) /* ty=Tensor[(42, 4), bool] */;
  %69 = cast(%68, dtype="float32") /* ty=Tensor[(42, 4), float32] */;
  %70 = log(%69) /* ty=Tensor[(42, 4), float32] */;
  %71 = cast(%68, dtype="uint8") /* ty=Tensor[(42, 4), uint8] */;
  %72 = shape_of(%70, dtype="int32") /* ty=Tensor[(2), int32] */;
  %73 = cast(%70, dtype="uint8") /* ty=Tensor[(42, 4), uint8] */;
  %74 = dyn.reshape(%71, %72, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %75 = cast(%70, dtype="bool") /* ty=Tensor[(42, 4), bool] */;
  %76 = shape_of(%68, dtype="int32") /* ty=Tensor[(2), int32] */;
  %77 = cast(%68, dtype="bool") /* ty=Tensor[(42, 4), bool] */;
  %78 = dyn.reshape(%75, %76, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %79 = %53.0;
  %80 = mod(%57, %58) /* ty=Tensor[(9, 2, 15), float32] */;
  %81 = bitwise_xor(%73, %74) /* ty=Tensor[(42, 4), uint8] */;
  %82 = greater(%77, %78) /* ty=Tensor[(42, 4), bool] */;
  (%79, %80, %81, %82)
}

def @func_4513(%var_4507: Tensor[(4, 2, 4), uint64]) -> Tensor[(4, 2, 4), uint64] {
  %83 = cast(%var_4507, dtype="uint64") /* ty=Tensor[(4, 2, 4), uint64] */;
  %84 = shape_of(meta[relay.Constant][7] /* ty=Tensor[(4, 2, 4), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %85 = cast(meta[relay.Constant][7] /* ty=Tensor[(4, 2, 4), uint64] */, dtype="uint64") /* ty=Tensor[(4, 2, 4), uint64] */;
  %86 = dyn.reshape(%83, %84, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  right_shift(%85, %86) /* ty=Tensor[(4, 2, 4), uint64] */
}

def @func_4665(%var_4632: Tensor[(1134), bool], %var_4635: Tensor[(1134), bool]) -> (Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), float32], Tensor[(1134), uint8]) {
  %87 = @func_3701() /* ty=(Tensor[(9, 2, 15), float64],) */;
  %88 = cast(%var_4632, dtype="bool") /* ty=Tensor[(1134), bool] */;
  %89 = reshape(%88, newshape=[9, 9, 14]) /* ty=Tensor[(9, 9, 14), bool] */;
  %90 = @func_3008(%89) /* ty=(Tensor[(9, 9, 14), float32],) */;
  %91 = cast(%var_4635, dtype="uint8") /* ty=Tensor[(1134), uint8] */;
  %92 = shape_of(%var_4632, dtype="int32") /* ty=Tensor[(1), int32] */;
  %93 = cast(%var_4632, dtype="uint8") /* ty=Tensor[(1134), uint8] */;
  %94 = dyn.reshape(%91, %92, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %95 = %87.0;
  %96 = %90.0;
  %97 = maximum(%93, %94) /* ty=Tensor[(1134), uint8] */;
  (%95, %96, %97)
}

def @func_75(%var_68: Tensor[(13, 3, 2), float32]) -> (Tensor[(13, 3, 2), float32],) {
  %98 = cast(%var_68, dtype="float32") /* ty=Tensor[(13, 3, 2), float32] */;
  %99 = cos(%98) /* ty=Tensor[(13, 3, 2), float32] */;
  (%99,)
}

def @func_4456() -> (Tensor[(9, 9, 14), bool], Tensor[(9, 9, 14), float32]) {
  %100 = @func_1770() /* ty=(Tensor[(9, 9, 14), float32],) */;
  %101 = @func_4354() /* ty=Tensor[(9, 9, 14), bool] */;
  %102 = %100.0;
  (%101, %102)
}

def @func_4941() -> Tensor[(9, 2, 15), float64] {
  %103 = @func_3701() /* ty=(Tensor[(9, 2, 15), float64],) */;
  %103.0
}

def @func_5369(%var_5355: Tensor[(2, 13, 1), int16], %var_5356: Tensor[(2, 13, 3), int16]) -> (Tensor[(2, 13, 3), bool], Tensor[(9, 2, 15), float64], Tensor[(768), int64]) {
  %104 = cast(%var_5355, dtype="bool") /* ty=Tensor[(2, 13, 1), bool] */;
  %105 = cast(%var_5356, dtype="bool") /* ty=Tensor[(2, 13, 3), bool] */;
  %106 = cast(meta[relay.Constant][8] /* ty=Tensor[(768), int64] */, dtype="int64") /* ty=Tensor[(768), int64] */;
  %107 = cast(meta[relay.Constant][8] /* ty=Tensor[(768), int64] */, dtype="float64") /* ty=Tensor[(768), float64] */;
  %108 = cast(meta[relay.Constant][8] /* ty=Tensor[(768), int64] */, dtype="float32") /* ty=Tensor[(768), float32] */;
  %109 = reshape(%106, newshape=[2, 384]) /* ty=Tensor[(2, 384), int64] */;
  %110 = reshape(%107, newshape=[2, 384]) /* ty=Tensor[(2, 384), float64] */;
  %111 = reshape(%108, newshape=[2, 384]) /* ty=Tensor[(2, 384), float32] */;
  %112 = @func_5024(%109, %110, %111) /* ty=(Tensor[(9, 9, 14), bool], Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), bool], Tensor[(2, 384), float64], Tensor[(9, 2, 15), float64], Tensor[(9, 2, 15), float64], Tensor[(2, 384), uint64], Tensor[(9, 9, 14), float32]) */;
  %113 = less(%104, %105) /* ty=Tensor[(2, 13, 3), bool] */;
  %114 = %112.1;
  (%113, %114, meta[relay.Constant][8] /* ty=Tensor[(768), int64] */)
}

def @func_5024(%var_4980: Tensor[(2, 384), int64], %var_4989: Tensor[(2, 384), float64], %var_5012: Tensor[(2, 384), float32]) -> (Tensor[(9, 9, 14), bool], Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), bool], Tensor[(2, 384), float64], Tensor[(9, 2, 15), float64], Tensor[(9, 2, 15), float64], Tensor[(2, 384), uint64], Tensor[(9, 9, 14), float32]) {
  %115 = cast(%var_4980, dtype="int64") /* ty=Tensor[(2, 384), int64] */;
  %116 = reshape(%115, newshape=[12, 4, 16]) /* ty=Tensor[(12, 4, 16), int64] */;
  %117 = @func_1116(%116) /* ty=(Tensor[(12, 4, 16), bool], Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), bool]) */;
  %118 = @func_4144() /* ty=(Tensor[(9, 9, 14), bool], Tensor[(9, 2, 15), float64]) */;
  %119 = cast(%var_4980, dtype="float64") /* ty=Tensor[(2, 384), float64] */;
  %120 = cos(%119) /* ty=Tensor[(2, 384), float64] */;
  %121 = cast(%var_4989, dtype="float64") /* ty=Tensor[(2, 384), float64] */;
  %122 = shape_of(%120, dtype="int32") /* ty=Tensor[(2), int32] */;
  %123 = cast(%120, dtype="float64") /* ty=Tensor[(2, 384), float64] */;
  %124 = dyn.reshape(%121, %122, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %125 = @func_4588() /* ty=(Tensor[(9, 2, 15), float64], Tensor[(9, 2, 15), float64]) */;
  %126 = @func_3112() /* ty=(Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), float32]) */;
  %127 = cast(%120, dtype="float32") /* ty=Tensor[(2, 384), float32] */;
  %128 = erf(%127) /* ty=Tensor[(2, 384), float32] */;
  %129 = cast(%var_5012, dtype="uint64") /* ty=Tensor[(2, 384), uint64] */;
  %130 = shape_of(%128, dtype="int32") /* ty=Tensor[(2), int32] */;
  %131 = cast(%128, dtype="uint64") /* ty=Tensor[(2, 384), uint64] */;
  %132 = dyn.reshape(%129, %130, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %133 = @func_4354() /* ty=Tensor[(9, 9, 14), bool] */;
  %134 = %117.1;
  %135 = %118.0;
  %136 = mod(%123, %124) /* ty=Tensor[(2, 384), float64] */;
  %137 = %125.1;
  %138 = %126.0;
  %139 = right_shift(%131, %132) /* ty=Tensor[(2, 384), uint64] */;
  %140 = @func_3977() /* ty=Tensor[(9, 9, 14), float32] */;
  (%133, %134, %135, %136, %137, %138, %139, %140)
}

def @func_1303(%var_1212: Tensor[(9, 12, 1), int8], %var_1213: Tensor[(9, 12, 12), int8], %var_1226: Tensor[(27, 42), float32], %var_1245: Tensor[(768), int64], %var_1277: Tensor[(27, 42), float64]) -> (Tensor[(9, 12, 12), int8], bool, Tensor[(220), float32], Tensor[(9, 9, 14), bool], Tensor[(9, 12, 330), bool], Tensor[(9, 9, 14), bool], Tensor[(768), int64], Tensor[(9, 9, 14), bool], Tensor[(12, 4, 16), bool], Tensor[(27, 42), uint32], Tensor[(9, 9, 14), float32]) {
  %141 = cast(%var_1212, dtype="int8") /* ty=Tensor[(9, 12, 1), int8] */;
  %142 = cast(%var_1213, dtype="int8") /* ty=Tensor[(9, 12, 12), int8] */;
  %143 = cast(%var_1226, dtype="float32") /* ty=Tensor[(27, 42), float32] */;
  %144 = reshape(%143, newshape=[9, 9, 14]) /* ty=Tensor[(9, 9, 14), float32] */;
  %145 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %146 = cast(%var_1226, dtype="float32") /* ty=Tensor[(27, 42), float32] */;
  %147 = cast(meta[relay.Constant][9] /* ty=Tensor[(220), float32] */, dtype="float32") /* ty=Tensor[(220), float32] */;
  %148 = reshape(%145, newshape=[]) /* ty=bool */;
  %149 = reshape(%146, newshape=[1134, 1]) /* ty=Tensor[(1134, 1), float32] */;
  %150 = reshape(%147, newshape=[220]) /* ty=Tensor[(220), float32] */;
  %151 = @func_1075(%148, %149, %150) /* ty=(Tensor[(6, 4, 12), bool], Tensor[(11, 6, 5), float32], Tensor[(10, 3), float32], Tensor[(330), float32], Tensor[(30), float32], Tensor[(1134, 220), float32]) */;
  %152 = %151.3;
  %153 = cast(%152, dtype="bool") /* ty=Tensor[(330), bool] */;
  %154 = cast(%var_1212, dtype="bool") /* ty=Tensor[(9, 12, 1), bool] */;
  %155 = cast(%var_1245, dtype="int64") /* ty=Tensor[(768), int64] */;
  %156 = reshape(%155, newshape=[12, 4, 16]) /* ty=Tensor[(12, 4, 16), int64] */;
  %157 = @func_1116(%156) /* ty=(Tensor[(12, 4, 16), bool], Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), bool]) */;
  %158 = @func_353() /* ty=(Tensor[(9, 9, 14), bool],) */;
  %159 = cast(%var_1245, dtype="int64") /* ty=Tensor[(768), int64] */;
  %160 = reshape(%159, newshape=[12, 4, 16]) /* ty=Tensor[(12, 4, 16), int64] */;
  %161 = @func_1116(%160) /* ty=(Tensor[(12, 4, 16), bool], Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), bool]) */;
  %162 = cast(%var_1226, dtype="float64") /* ty=Tensor[(27, 42), float64] */;
  %163 = sigmoid(%162) /* ty=Tensor[(27, 42), float64] */;
  %164 = cast(%var_1277, dtype="float32") /* ty=Tensor[(27, 42), float32] */;
  %165 = shape_of(%163, dtype="int32") /* ty=Tensor[(2), int32] */;
  %166 = cast(%163, dtype="float32") /* ty=Tensor[(27, 42), float32] */;
  %167 = dyn.reshape(%164, %165, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %168 = mod(%166, %167) /* ty=Tensor[(27, 42), float32] */;
  %169 = cast(%163, dtype="uint32") /* ty=Tensor[(27, 42), uint32] */;
  %170 = shape_of(%168, dtype="int32") /* ty=Tensor[(2), int32] */;
  %171 = cast(%168, dtype="uint32") /* ty=Tensor[(27, 42), uint32] */;
  %172 = dyn.reshape(%169, %170, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %173 = subtract(%141, %142) /* ty=Tensor[(9, 12, 12), int8] */;
  %174 = @func_625(%144) /* ty=Tensor[(9, 9, 14), bool] */;
  %175 = not_equal(%153, %154) /* ty=Tensor[(9, 12, 330), bool] */;
  %176 = %157.2;
  %177 = %158.0;
  %178 = %161.0;
  %179 = subtract(%171, %172) /* ty=Tensor[(27, 42), uint32] */;
  %180 = @func_277() /* ty=Tensor[(9, 9, 14), float32] */;
  (%173, True /* ty=bool */, meta[relay.Constant][9] /* ty=Tensor[(220), float32] */, %174, %175, %176, %var_1245, %177, %178, %179, %180)
}

def @func_4039(%var_4003: Tensor[(9, 2, 15), float64]) -> (Tensor[(13, 3, 2), float32], Tensor[(9, 2, 15), float32], Tensor[(1936), float32], Tensor[(9, 9, 14), bool]) {
  %181 = @func_2860() /* ty=(Tensor[(13, 3, 2), float32],) */;
  %182 = cast(meta[relay.Constant][10] /* ty=Tensor[(1936), int32] */, dtype="int32") /* ty=Tensor[(1936), int32] */;
  %183 = cast(meta[relay.Constant][10] /* ty=Tensor[(1936), int32] */, dtype="int32") /* ty=Tensor[(1936), int32] */;
  %184 = reshape(%182, newshape=[11, 16, 11]) /* ty=Tensor[(11, 16, 11), int32] */;
  %185 = reshape(%183, newshape=[11, 16, 11]) /* ty=Tensor[(11, 16, 11), int32] */;
  %186 = @func_1525(%184, %185) /* ty=(Tensor[(11, 16, 11), int32], Tensor[(5, 4, 11), float32], Tensor[(1092), int32], Tensor[(30), float32], Tensor[(330, 1), float32], float32, Tensor[(9, 2, 15), float64]) */;
  %187 = %186.6;
  %188 = cast(%var_4003, dtype="float32") /* ty=Tensor[(9, 2, 15), float32] */;
  %189 = shape_of(%187, dtype="int32") /* ty=Tensor[(3), int32] */;
  %190 = cast(%187, dtype="float32") /* ty=Tensor[(9, 2, 15), float32] */;
  %191 = dyn.reshape(%188, %189, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %192 = cast(meta[relay.Constant][10] /* ty=Tensor[(1936), int32] */, dtype="float32") /* ty=Tensor[(1936), float32] */;
  %193 = acos(%192) /* ty=Tensor[(1936), float32] */;
  %194 = cast(meta[relay.Constant][10] /* ty=Tensor[(1936), int32] */, dtype="float32") /* ty=Tensor[(1936), float32] */;
  %195 = shape_of(%193, dtype="int32") /* ty=Tensor[(1), int32] */;
  %196 = cast(%193, dtype="float32") /* ty=Tensor[(1936), float32] */;
  %197 = dyn.reshape(%194, %195, newshape=[]) /* ty=Tensor[(?), float32] */;
  %198 = %181.0;
  %199 = floor_divide(%190, %191) /* ty=Tensor[(9, 2, 15), float32] */;
  %200 = multiply(%196, %197) /* ty=Tensor[(1936), float32] */;
  %201 = @func_3779() /* ty=Tensor[(9, 9, 14), bool] */;
  (%198, %199, %200, %201)
}

def @func_1387(%var_1373: Tensor[(78), float32]) -> (Tensor[(9, 9, 14), bool], Tensor[(13, 3, 2), bool]) {
  %202 = @func_353() /* ty=(Tensor[(9, 9, 14), bool],) */;
  %203 = cast(%var_1373, dtype="float32") /* ty=Tensor[(78), float32] */;
  %204 = reshape(%203, newshape=[13, 3, 2]) /* ty=Tensor[(13, 3, 2), float32] */;
  %205 = @func_75(%204) /* ty=(Tensor[(13, 3, 2), float32],) */;
  %206 = %205.0;
  %207 = cast(%var_1373, dtype="bool") /* ty=Tensor[(78), bool] */;
  %208 = shape_of(%206, dtype="int32") /* ty=Tensor[(3), int32] */;
  %209 = cast(%206, dtype="bool") /* ty=Tensor[(13, 3, 2), bool] */;
  %210 = dyn.reshape(%207, %208, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %211 = %202.0;
  %212 = logical_and(%209, %210) /* ty=Tensor[(13, 3, 2), bool] */;
  (%211, %212)
}

def @func_5745() -> Tensor[(9, 9, 14), bool] {
  @func_4354() /* ty=Tensor[(9, 9, 14), bool] */
}

def @func_876(%var_828: Tensor[(9, 9, 14), float32], %var_849: Tensor[(30), float32], %var_859: float32, %var_860: Tensor[(220), float32]) -> (Tensor[(9, 9, 14), float64], Tensor[(9, 9, 14), bool], Tensor[(13, 3, 2), float32], Tensor[(30), float32], Tensor[(55, 6), float32], Tensor[(1, 78), float32], Tensor[(5, 4, 11), float32], float32, Tensor[(220), float32], Tensor[(9, 9, 14), bool], Tensor[(9, 2, 15), float64]) {
  %213 = @func_277() /* ty=Tensor[(9, 9, 14), float32] */;
  %214 = cast(%var_828, dtype="float64") /* ty=Tensor[(9, 9, 14), float64] */;
  %215 = shape_of(%213, dtype="int32") /* ty=Tensor[(3), int32] */;
  %216 = cast(%213, dtype="float64") /* ty=Tensor[(9, 9, 14), float64] */;
  %217 = dyn.reshape(%214, %215, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %218 = cast(%var_828, dtype="float32") /* ty=Tensor[(9, 9, 14), float32] */;
  %219 = reshape(%218, newshape=[9, 9, 14]) /* ty=Tensor[(9, 9, 14), float32] */;
  %220 = cast(%var_849, dtype="float32") /* ty=Tensor[(30), float32] */;
  %221 = cast(meta[relay.Constant][11] /* ty=Tensor[(55, 6), float32] */, dtype="float32") /* ty=Tensor[(55, 6), float32] */;
  %222 = cast(meta[relay.Constant][12] /* ty=Tensor[(1, 78), float32] */, dtype="float32") /* ty=Tensor[(1, 78), float32] */;
  %223 = reshape(%220, newshape=[30]) /* ty=Tensor[(30), float32] */;
  %224 = reshape(%221, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %225 = reshape(%222, newshape=[13, 6]) /* ty=Tensor[(13, 6), float32] */;
  %226 = @func_427(%223, %224, %225) /* ty=(Tensor[(7, 5, 12), float64], Tensor[(7, 5, 12), float32], Tensor[(11, 6, 5), float32], Tensor[(30), float32], Tensor[(330), float32], Tensor[(13, 3, 2), float32], Tensor[(13, 3, 2), float32], Tensor[(11, 6, 5), float32]) */;
  %227 = cast(%var_859, dtype="float32") /* ty=float32 */;
  %228 = cast(%var_860, dtype="float32") /* ty=Tensor[(220), float32] */;
  %229 = reshape(%227, newshape=[]) /* ty=float32 */;
  %230 = reshape(%228, newshape=[5, 4, 11]) /* ty=Tensor[(5, 4, 11), float32] */;
  %231 = @func_353() /* ty=(Tensor[(9, 9, 14), bool],) */;
  %232 = @func_722() /* ty=(Tensor[(9, 2, 15), float64],) */;
  %233 = divide(%216, %217) /* ty=Tensor[(9, 9, 14), float64] */;
  %234 = @func_625(%219) /* ty=Tensor[(9, 9, 14), bool] */;
  %235 = %226.6;
  %236 = @func_578(%229, %230) /* ty=Tensor[(5, 4, 11), float32] */;
  %237 = %231.0;
  %238 = %232.0;
  (%233, %234, %235, %var_849, meta[relay.Constant][11] /* ty=Tensor[(55, 6), float32] */, meta[relay.Constant][12] /* ty=Tensor[(1, 78), float32] */, %236, %var_859, %var_860, %237, %238)
}

def @func_4200() -> (Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), bool]) {
  %239 = @func_3121() /* ty=(Tensor[(9, 2, 15), float64],) */;
  %240 = @func_1326() /* ty=(Tensor[(9, 9, 14), bool],) */;
  %241 = %239.0;
  %242 = %240.0;
  (%241, %242)
}

def @func_5299() -> Tensor[(9, 9, 14), bool] {
  @func_2135() /* ty=Tensor[(9, 9, 14), bool] */
}

def @func_1948(%var_1855: Tensor[(18, 6), int8], %var_1856: Tensor[(1296), int8], %var_1857: Tensor[(1134), float32], %var_1858: Tensor[(768), int64], %var_1883: Tensor[(1296), int8], %var_1910: Tensor[(18, 6), int8]) -> (Tensor[(9, 2, 15), float64], Tensor[(9, 2, 15), float64], Tensor[(1134), float32], Tensor[(768), int64], Tensor[(9, 9, 14), bool], Tensor[(18, 6), float64], Tensor[(9, 9, 14), float64], Tensor[(1296), bool], Tensor[(9, 9, 14), bool]) {
  %243 = @func_1152() /* ty=(Tensor[(9, 2, 15), float64],) */;
  %244 = @func_1152() /* ty=(Tensor[(9, 2, 15), float64],) */;
  %245 = cast(%var_1855, dtype="int8") /* ty=Tensor[(18, 6), int8] */;
  %246 = cast(%var_1856, dtype="int8") /* ty=Tensor[(1296), int8] */;
  %247 = cast(%var_1857, dtype="float32") /* ty=Tensor[(1134), float32] */;
  %248 = cast(%var_1858, dtype="int64") /* ty=Tensor[(768), int64] */;
  %249 = cast(%var_1857, dtype="float64") /* ty=Tensor[(1134), float64] */;
  %250 = reshape(%245, newshape=[9, 12, 1]) /* ty=Tensor[(9, 12, 1), int8] */;
  %251 = reshape(%246, newshape=[9, 12, 12]) /* ty=Tensor[(9, 12, 12), int8] */;
  %252 = reshape(%247, newshape=[27, 42]) /* ty=Tensor[(27, 42), float32] */;
  %253 = reshape(%248, newshape=[768]) /* ty=Tensor[(768), int64] */;
  %254 = reshape(%249, newshape=[27, 42]) /* ty=Tensor[(27, 42), float64] */;
  %255 = @func_1303(%250, %251, %252, %253, %254) /* ty=(Tensor[(9, 12, 12), int8], bool, Tensor[(220), float32], Tensor[(9, 9, 14), bool], Tensor[(9, 12, 330), bool], Tensor[(9, 9, 14), bool], Tensor[(768), int64], Tensor[(9, 9, 14), bool], Tensor[(12, 4, 16), bool], Tensor[(27, 42), uint32], Tensor[(9, 9, 14), float32]) */;
  %256 = %255.5;
  %257 = cast(%256, dtype="bool") /* ty=Tensor[(9, 9, 14), bool] */;
  %258 = reshape(%257, newshape=[27, 42]) /* ty=Tensor[(27, 42), bool] */;
  %259 = @func_1710(%258) /* ty=(Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), bool], Tensor[(27, 42), bool]) */;
  %260 = cast(%var_1910, dtype="float64") /* ty=Tensor[(18, 6), float64] */;
  %261 = shape_of(%var_1855, dtype="int32") /* ty=Tensor[(2), int32] */;
  %262 = cast(%var_1855, dtype="float64") /* ty=Tensor[(18, 6), float64] */;
  %263 = dyn.reshape(%260, %261, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %264 = cast(%256, dtype="float64") /* ty=Tensor[(9, 9, 14), float64] */;
  %265 = cast(%var_1883, dtype="uint32") /* ty=Tensor[(1296), uint32] */;
  %266 = shape_of(%var_1856, dtype="int32") /* ty=Tensor[(1), int32] */;
  %267 = cast(%var_1856, dtype="uint32") /* ty=Tensor[(1296), uint32] */;
  %268 = dyn.reshape(%265, %266, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %269 = right_shift(%267, %268) /* ty=Tensor[(1296), uint32] */;
  %270 = cast(%269, dtype="bool") /* ty=Tensor[(1296), bool] */;
  %271 = shape_of(%var_1856, dtype="int32") /* ty=Tensor[(1), int32] */;
  %272 = cast(%var_1856, dtype="bool") /* ty=Tensor[(1296), bool] */;
  %273 = dyn.reshape(%270, %271, newshape=[]) /* ty=Tensor[(?), bool] */;
  %274 = @func_1326() /* ty=(Tensor[(9, 9, 14), bool],) */;
  %275 = %243.0;
  %276 = %244.0;
  %277 = %259.1;
  %278 = divide(%262, %263) /* ty=Tensor[(18, 6), float64] */;
  %279 = acosh(%264) /* ty=Tensor[(9, 9, 14), float64] */;
  %280 = logical_and(%272, %273) /* ty=Tensor[(1296), bool] */;
  %281 = %274.0;
  (%275, %276, %var_1857, %var_1858, %277, %278, %279, %280, %281)
}

def @func_2421(%var_2405: bool, %var_2406: Tensor[(220), float32]) -> (Tensor[(9, 9, 14), float32], Tensor[(30), float32], bool, Tensor[(220), float32], Tensor[(9, 9, 14), bool]) {
  %282 = @func_2158() /* ty=Tensor[(9, 9, 14), bool] */;
  %283 = cast(%282, dtype="float32") /* ty=Tensor[(9, 9, 14), float32] */;
  %284 = cast(%var_2405, dtype="bool") /* ty=bool */;
  %285 = cast(%282, dtype="float32") /* ty=Tensor[(9, 9, 14), float32] */;
  %286 = cast(%var_2406, dtype="float32") /* ty=Tensor[(220), float32] */;
  %287 = reshape(%284, newshape=[]) /* ty=bool */;
  %288 = reshape(%285, newshape=[1134, 1]) /* ty=Tensor[(1134, 1), float32] */;
  %289 = reshape(%286, newshape=[220]) /* ty=Tensor[(220), float32] */;
  %290 = @func_1075(%287, %288, %289) /* ty=(Tensor[(6, 4, 12), bool], Tensor[(11, 6, 5), float32], Tensor[(10, 3), float32], Tensor[(330), float32], Tensor[(30), float32], Tensor[(1134, 220), float32]) */;
  %291 = @func_511() /* ty=(Tensor[(9, 9, 14), bool],) */;
  %292 = erf(%283) /* ty=Tensor[(9, 9, 14), float32] */;
  %293 = %290.4;
  %294 = %291.0;
  (%292, %293, %var_2405, %var_2406, %294)
}

def @func_2825() -> Tensor[(9, 2, 15), float64] {
  @func_1133() /* ty=Tensor[(9, 2, 15), float64] */
}

def @func_1654(%var_1616: Tensor[(30), float32], %var_1617: Tensor[(330), float32]) -> (Tensor[(9, 9, 14), bool], Tensor[(11, 6, 5), float32], Tensor[(330), float32], Tensor[(30), float32]) {
  %295 = @func_511() /* ty=(Tensor[(9, 9, 14), bool],) */;
  %296 = cast(%var_1616, dtype="float32") /* ty=Tensor[(30), float32] */;
  %297 = cast(%var_1617, dtype="float32") /* ty=Tensor[(330), float32] */;
  %298 = reshape(%296, newshape=[1, 6, 5]) /* ty=Tensor[(1, 6, 5), float32] */;
  %299 = reshape(%297, newshape=[11, 6, 5]) /* ty=Tensor[(11, 6, 5), float32] */;
  %300 = @func_264(%298, %299) /* ty=(Tensor[(11, 6, 5), float32],) */;
  %301 = cast(%var_1616, dtype="float32") /* ty=Tensor[(30), float32] */;
  %302 = %295.0;
  %303 = %300.0;
  %304 = log10(%301) /* ty=Tensor[(30), float32] */;
  (%302, %303, %var_1617, %304)
}

def @func_4896(%var_4893: Tensor[(3, 16, 3), float32]) -> Tensor[(3, 16, 3), float32] {
  %305 = cast(%var_4893, dtype="float32") /* ty=Tensor[(3, 16, 3), float32] */;
  asin(%305) /* ty=Tensor[(3, 16, 3), float32] */
}

def @func_4552() -> Tensor[(9, 9, 14), bool] {
  @func_3779() /* ty=Tensor[(9, 9, 14), bool] */
}

def @func_3508(%var_3491: Tensor[(1, 1, 1), float32]) -> (Tensor[(16, 11, 12), float32], Tensor[(9, 9, 14), bool], Tensor[(78), float32]) {
  %306 = cast(%var_3491, dtype="float32") /* ty=Tensor[(1, 1, 1), float32] */;
  %307 = cast(meta[relay.Constant][13] /* ty=Tensor[(16, 11, 12), float32] */, dtype="float32") /* ty=Tensor[(16, 11, 12), float32] */;
  %308 = cast(meta[relay.Constant][14] /* ty=Tensor[(78), float32] */, dtype="float32") /* ty=Tensor[(78), float32] */;
  %309 = reshape(%308, newshape=[78]) /* ty=Tensor[(78), float32] */;
  %310 = @func_1387(%309) /* ty=(Tensor[(9, 9, 14), bool], Tensor[(13, 3, 2), bool]) */;
  %311 = power(%306, %307) /* ty=Tensor[(16, 11, 12), float32] */;
  %312 = %310.0;
  (%311, %312, meta[relay.Constant][14] /* ty=Tensor[(78), float32] */)
}

def @func_5804(%var_5785: Tensor[(9, 2, 15), float64]) -> (Tensor[(9, 2, 15), bool], Tensor[(9, 9, 14), bool]) {
  %313 = @func_3121() /* ty=(Tensor[(9, 2, 15), float64],) */;
  %314 = %313.0;
  %315 = cast(%var_5785, dtype="bool") /* ty=Tensor[(9, 2, 15), bool] */;
  %316 = shape_of(%314, dtype="int32") /* ty=Tensor[(3), int32] */;
  %317 = cast(%314, dtype="bool") /* ty=Tensor[(9, 2, 15), bool] */;
  %318 = dyn.reshape(%315, %316, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %319 = equal(%317, %318) /* ty=Tensor[(9, 2, 15), bool] */;
  %320 = @func_3779() /* ty=Tensor[(9, 9, 14), bool] */;
  (%319, %320)
}

def @func_4437() -> (Tensor[(9, 9, 14), float32], Tensor[(7, 12, 2), bool], Tensor[(168), bool], Tensor[(11, 10, 16), float32], Tensor[(11, 10, 16), float32]) {
  %321 = @func_3725() /* ty=(Tensor[(9, 9, 14), float32],) */;
  %322 = cast(meta[relay.Constant][15] /* ty=Tensor[(168), bool] */, dtype="bool") /* ty=Tensor[(168), bool] */;
  %323 = cast(meta[relay.Constant][15] /* ty=Tensor[(168), bool] */, dtype="bool") /* ty=Tensor[(168), bool] */;
  %324 = reshape(%322, newshape=[7, 12, 2]) /* ty=Tensor[(7, 12, 2), bool] */;
  %325 = reshape(%323, newshape=[7, 12, 2]) /* ty=Tensor[(7, 12, 2), bool] */;
  %326 = cast(meta[relay.Constant][16] /* ty=Tensor[(11, 10, 16), float32] */, dtype="float32") /* ty=Tensor[(11, 10, 16), float32] */;
  %327 = cosh(%326) /* ty=Tensor[(11, 10, 16), float32] */;
  %328 = cast(%327, dtype="float32") /* ty=Tensor[(11, 10, 16), float32] */;
  %329 = rsqrt(%328) /* ty=Tensor[(11, 10, 16), float32] */;
  %330 = cast(%329, dtype="float32") /* ty=Tensor[(11, 10, 16), float32] */;
  %331 = cast(%329, dtype="float32") /* ty=Tensor[(11, 10, 16), float32] */;
  %332 = %321.0;
  %333 = @func_1011(%324, %325) /* ty=Tensor[(7, 12, 2), bool] */;
  %334 = acosh(%330) /* ty=Tensor[(11, 10, 16), float32] */;
  %335 = sin(%331) /* ty=Tensor[(11, 10, 16), float32] */;
  (%332, %333, meta[relay.Constant][15] /* ty=Tensor[(168), bool] */, %334, %335)
}

def @main() -> (Tensor[(9, 9, 14), bool], Tensor[(9, 9, 14), bool], Tensor[(9, 9, 14), float64]) {
  %336 = @func_2158() /* ty=Tensor[(9, 9, 14), bool] */;
  %337 = cast(%336, dtype="bool") /* ty=Tensor[(9, 9, 14), bool] */;
  %338 = reshape(%337, newshape=[9, 9, 14]) /* ty=Tensor[(9, 9, 14), bool] */;
  %339 = @func_2076(%338) /* ty=(Tensor[(9, 9, 14), float32], Tensor[(9, 2, 15), float64]) */;
  %340 = %339.0;
  %341 = cast(%340, dtype="float64") /* ty=Tensor[(9, 9, 14), float64] */;
  %342 = @func_2135() /* ty=Tensor[(9, 9, 14), bool] */;
  %343 = rsqrt(%341) /* ty=Tensor[(9, 9, 14), float64] */;
  (%336, %342, %343)
}

def @func_2648() -> (Tensor[(9, 9, 14), float32],) {
  %344 = @func_277() /* ty=Tensor[(9, 9, 14), float32] */;
  %345 = cast(%344, dtype="float32") /* ty=Tensor[(9, 9, 14), float32] */;
  %346 = atan(%345) /* ty=Tensor[(9, 9, 14), float32] */;
  (%346,)
}

def @func_2115(%var_2108: Tensor[(9, 9, 14), bool]) -> (Tensor[(9, 9, 14), float64],) {
  %347 = @func_353() /* ty=(Tensor[(9, 9, 14), bool],) */;
  %348 = %347.0;
  %349 = cast(%var_2108, dtype="float64") /* ty=Tensor[(9, 9, 14), float64] */;
  %350 = shape_of(%348, dtype="int32") /* ty=Tensor[(3), int32] */;
  %351 = cast(%348, dtype="float64") /* ty=Tensor[(9, 9, 14), float64] */;
  %352 = dyn.reshape(%349, %350, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %353 = subtract(%351, %352) /* ty=Tensor[(9, 9, 14), float64] */;
  (%353,)
}

def @func_3779() -> Tensor[(9, 9, 14), bool] {
  %354 = @func_511() /* ty=(Tensor[(9, 9, 14), bool],) */;
  %354.0
}

def @func_5860() -> Tensor[(9, 9, 14), bool] {
  %355 = @func_4456() /* ty=(Tensor[(9, 9, 14), bool], Tensor[(9, 9, 14), float32]) */;
  %355.0
}

def @func_3701() -> (Tensor[(9, 2, 15), float64],) {
  %356 = @func_722() /* ty=(Tensor[(9, 2, 15), float64],) */;
  %357 = %356.0;
  %358 = cast(%357, dtype="float64") /* ty=Tensor[(9, 2, 15), float64] */;
  %359 = sqrt(%358) /* ty=Tensor[(9, 2, 15), float64] */;
  (%359,)
}

def @func_5492() -> (Tensor[(9, 9, 14), bool],) {
  %360 = @func_3592() /* ty=(Tensor[(9, 9, 14), bool], Tensor[(9, 2, 15), float32], Tensor[(42, 4), uint8], Tensor[(42, 4), bool]) */;
  %361 = %360.0;
  (%361,)
}

def @func_4144() -> (Tensor[(9, 9, 14), bool], Tensor[(9, 2, 15), float64]) {
  %362 = @func_1480() /* ty=(Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), bool], Tensor[(3, 378), bool]) */;
  %363 = @func_3701() /* ty=(Tensor[(9, 2, 15), float64],) */;
  %364 = %362.1;
  %365 = %363.0;
  (%364, %365)
}

def @func_5060(%var_5038: Tensor[(14, 1, 10), uint8], %var_5039: Tensor[(14, 9, 10), uint8]) -> (Tensor[(14, 9, 10), uint8],) {
  %366 = cast(%var_5038, dtype="uint8") /* ty=Tensor[(14, 1, 10), uint8] */;
  %367 = cast(%var_5039, dtype="uint8") /* ty=Tensor[(14, 9, 10), uint8] */;
  %368 = minimum(%366, %367) /* ty=Tensor[(14, 9, 10), uint8] */;
  (%368,)
}

def @func_427(%var_392: Tensor[(30), float32], %var_393: Tensor[(330), float32], %var_396: Tensor[(13, 6), float32]) -> (Tensor[(7, 5, 12), float64], Tensor[(7, 5, 12), float32], Tensor[(11, 6, 5), float32], Tensor[(30), float32], Tensor[(330), float32], Tensor[(13, 3, 2), float32], Tensor[(13, 3, 2), float32], Tensor[(11, 6, 5), float32]) {
  %369 = cast(meta[relay.Constant][17] /* ty=Tensor[(7, 5, 12), float64] */, dtype="float64") /* ty=Tensor[(7, 5, 12), float64] */;
  %370 = cast(meta[relay.Constant][17] /* ty=Tensor[(7, 5, 12), float64] */, dtype="float32") /* ty=Tensor[(7, 5, 12), float32] */;
  %371 = cast(%var_392, dtype="float32") /* ty=Tensor[(30), float32] */;
  %372 = cast(%var_393, dtype="float32") /* ty=Tensor[(330), float32] */;
  %373 = reshape(%371, newshape=[1, 6, 5]) /* ty=Tensor[(1, 6, 5), float32] */;
  %374 = reshape(%372, newshape=[11, 6, 5]) /* ty=Tensor[(11, 6, 5), float32] */;
  %375 = @func_264(%373, %374) /* ty=(Tensor[(11, 6, 5), float32],) */;
  %376 = cast(%var_396, dtype="float32") /* ty=Tensor[(13, 6), float32] */;
  %377 = reshape(%376, newshape=[13, 3, 2]) /* ty=Tensor[(13, 3, 2), float32] */;
  %378 = @func_75(%377) /* ty=(Tensor[(13, 3, 2), float32],) */;
  %379 = %378.0;
  %380 = cast(%var_396, dtype="float32") /* ty=Tensor[(13, 6), float32] */;
  %381 = shape_of(%379, dtype="int32") /* ty=Tensor[(3), int32] */;
  %382 = cast(%379, dtype="float32") /* ty=Tensor[(13, 3, 2), float32] */;
  %383 = dyn.reshape(%380, %381, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %384 = mod(%382, %383) /* ty=Tensor[(13, 3, 2), float32] */;
  %385 = cast(%384, dtype="float32") /* ty=Tensor[(13, 3, 2), float32] */;
  %386 = reshape(%385, newshape=[13, 3, 2]) /* ty=Tensor[(13, 3, 2), float32] */;
  %387 = @func_75(%386) /* ty=(Tensor[(13, 3, 2), float32],) */;
  %388 = cast(%var_392, dtype="float32") /* ty=Tensor[(30), float32] */;
  %389 = %375.0;
  %390 = cast(%389, dtype="float32") /* ty=Tensor[(11, 6, 5), float32] */;
  %391 = reshape(%388, newshape=[1, 6, 5]) /* ty=Tensor[(1, 6, 5), float32] */;
  %392 = reshape(%390, newshape=[11, 6, 5]) /* ty=Tensor[(11, 6, 5), float32] */;
  %393 = @func_264(%391, %392) /* ty=(Tensor[(11, 6, 5), float32],) */;
  %394 = cosh(%369) /* ty=Tensor[(7, 5, 12), float64] */;
  %395 = log10(%370) /* ty=Tensor[(7, 5, 12), float32] */;
  %396 = %387.0;
  %397 = %393.0;
  (%394, %395, %389, %var_392, %var_393, %384, %396, %397)
}

def @func_511() -> (Tensor[(9, 9, 14), bool],) {
  %398 = @func_353() /* ty=(Tensor[(9, 9, 14), bool],) */;
  %399 = %398.0;
  (%399,)
}

def @func_2135() -> Tensor[(9, 9, 14), bool] {
  %400 = @func_353() /* ty=(Tensor[(9, 9, 14), bool],) */;
  %400.0
}

def @func_3254(%var_3239: Tensor[(9, 2, 15), float64]) -> (Tensor[(9, 2, 15), int16], Tensor[(9, 9, 14), bool]) {
  %401 = @func_3121() /* ty=(Tensor[(9, 2, 15), float64],) */;
  %402 = %401.0;
  %403 = cast(%var_3239, dtype="int16") /* ty=Tensor[(9, 2, 15), int16] */;
  %404 = shape_of(%402, dtype="int32") /* ty=Tensor[(3), int32] */;
  %405 = cast(%402, dtype="int16") /* ty=Tensor[(9, 2, 15), int16] */;
  %406 = dyn.reshape(%403, %404, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %407 = @func_1480() /* ty=(Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), bool], Tensor[(3, 378), bool]) */;
  %408 = multiply(%405, %406) /* ty=Tensor[(9, 2, 15), int16] */;
  %409 = %407.1;
  (%408, %409)
}

def @func_277() -> Tensor[(9, 9, 14), float32] {
  %410 = cast(meta[relay.Constant][18] /* ty=Tensor[(9, 9, 14), float32] */, dtype="float32") /* ty=Tensor[(9, 9, 14), float32] */;
  sigmoid(%410) /* ty=Tensor[(9, 9, 14), float32] */
}

def @func_1460(%var_1413: Tensor[(7, 12, 13), int32], %var_1414: Tensor[(7, 12, 13), int32], %var_1429: Tensor[(5, 6), float32], %var_1430: Tensor[(1, 330), float32], %var_1446: float32) -> (Tensor[(7, 12, 13), int32], Tensor[(11, 6, 5), float32], Tensor[(5, 6), float32], Tensor[(1, 330), float64], Tensor[(9, 9, 14), bool], Tensor[(5, 4, 11), float32], float32, Tensor[(220), float32]) {
  %411 = cast(%var_1414, dtype="int32") /* ty=Tensor[(7, 12, 13), int32] */;
  %412 = shape_of(%var_1413, dtype="int32") /* ty=Tensor[(3), int32] */;
  %413 = cast(%var_1413, dtype="int32") /* ty=Tensor[(7, 12, 13), int32] */;
  %414 = dyn.reshape(%411, %412, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %415 = cast(%var_1429, dtype="float32") /* ty=Tensor[(5, 6), float32] */;
  %416 = cast(%var_1430, dtype="float32") /* ty=Tensor[(1, 330), float32] */;
  %417 = reshape(%415, newshape=[1, 6, 5]) /* ty=Tensor[(1, 6, 5), float32] */;
  %418 = reshape(%416, newshape=[11, 6, 5]) /* ty=Tensor[(11, 6, 5), float32] */;
  %419 = @func_264(%417, %418) /* ty=(Tensor[(11, 6, 5), float32],) */;
  %420 = cast(%var_1430, dtype="float64") /* ty=Tensor[(1, 330), float64] */;
  %421 = @func_511() /* ty=(Tensor[(9, 9, 14), bool],) */;
  %422 = cast(%var_1446, dtype="float32") /* ty=float32 */;
  %423 = cast(meta[relay.Constant][19] /* ty=Tensor[(220), float32] */, dtype="float32") /* ty=Tensor[(220), float32] */;
  %424 = reshape(%422, newshape=[]) /* ty=float32 */;
  %425 = reshape(%423, newshape=[5, 4, 11]) /* ty=Tensor[(5, 4, 11), float32] */;
  %426 = bitwise_xor(%413, %414) /* ty=Tensor[(7, 12, 13), int32] */;
  %427 = %419.0;
  %428 = sigmoid(%420) /* ty=Tensor[(1, 330), float64] */;
  %429 = %421.0;
  %430 = @func_578(%424, %425) /* ty=Tensor[(5, 4, 11), float32] */;
  (%426, %427, %var_1429, %428, %429, %430, %var_1446, meta[relay.Constant][19] /* ty=Tensor[(220), float32] */)
}

def @func_2320() -> Tensor[(9, 2, 15), uint8] {
  %431 = @func_1152() /* ty=(Tensor[(9, 2, 15), float64],) */;
  %432 = %431.0;
  %433 = cast(meta[relay.Constant][20] /* ty=Tensor[(9, 2, 15), float64] */, dtype="uint8") /* ty=Tensor[(9, 2, 15), uint8] */;
  %434 = shape_of(%432, dtype="int32") /* ty=Tensor[(3), int32] */;
  %435 = cast(%432, dtype="uint8") /* ty=Tensor[(9, 2, 15), uint8] */;
  %436 = dyn.reshape(%433, %434, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  minimum(%435, %436) /* ty=Tensor[(9, 2, 15), uint8] */
}

def @func_4617(%var_4596: Tensor[(7, 16, 15), float32], %var_4605: Tensor[(7, 16, 15), float32], %var_4611: Tensor[(1134), bool]) -> (Tensor[(7, 16, 15), float32], Tensor[(7, 16, 15), int32], Tensor[(9, 2, 15), float64], Tensor[(1134), bool]) {
  %437 = cast(%var_4596, dtype="float32") /* ty=Tensor[(7, 16, 15), float32] */;
  %438 = acos(%437) /* ty=Tensor[(7, 16, 15), float32] */;
  %439 = cast(%438, dtype="float32") /* ty=Tensor[(7, 16, 15), float32] */;
  %440 = cast(%var_4605, dtype="int32") /* ty=Tensor[(7, 16, 15), int32] */;
  %441 = shape_of(%438, dtype="int32") /* ty=Tensor[(3), int32] */;
  %442 = cast(%438, dtype="int32") /* ty=Tensor[(7, 16, 15), int32] */;
  %443 = dyn.reshape(%440, %441, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %444 = cast(%var_4611, dtype="bool") /* ty=Tensor[(1134), bool] */;
  %445 = reshape(%444, newshape=[9, 9, 14]) /* ty=Tensor[(9, 9, 14), bool] */;
  %446 = @func_2076(%445) /* ty=(Tensor[(9, 9, 14), float32], Tensor[(9, 2, 15), float64]) */;
  %447 = tan(%439) /* ty=Tensor[(7, 16, 15), float32] */;
  %448 = logical_xor(%442, %443) /* ty=Tensor[(7, 16, 15), int32] */;
  %449 = %446.1;
  (%447, %448, %449, %var_4611)
}

def @func_3112() -> (Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), float32]) {
  %450 = @func_1152() /* ty=(Tensor[(9, 2, 15), float64],) */;
  %451 = @func_2612() /* ty=Tensor[(9, 9, 14), bool] */;
  %452 = cast(%451, dtype="float32") /* ty=Tensor[(9, 9, 14), float32] */;
  %453 = %450.0;
  %454 = sqrt(%452) /* ty=Tensor[(9, 9, 14), float32] */;
  (%453, %454)
}

def @func_1133() -> Tensor[(9, 2, 15), float64] {
  %455 = @func_722() /* ty=(Tensor[(9, 2, 15), float64],) */;
  %455.0
}

def @func_3485(%var_3481: Tensor[(30), float32], %var_3482: float32, %var_3483: Tensor[(55, 4), float32]) -> (Tensor[(9, 9, 14), bool], Tensor[(9, 9, 14), float64], Tensor[(30), float32], float32, Tensor[(55, 4), float32]) {
  %456 = @func_353() /* ty=(Tensor[(9, 9, 14), bool],) */;
  %457 = %456.0;
  %458 = cast(%457, dtype="float32") /* ty=Tensor[(9, 9, 14), float32] */;
  %459 = cast(%var_3481, dtype="float32") /* ty=Tensor[(30), float32] */;
  %460 = cast(%var_3482, dtype="float32") /* ty=float32 */;
  %461 = cast(%var_3483, dtype="float32") /* ty=Tensor[(55, 4), float32] */;
  %462 = reshape(%458, newshape=[9, 9, 14]) /* ty=Tensor[(9, 9, 14), float32] */;
  %463 = reshape(%459, newshape=[30]) /* ty=Tensor[(30), float32] */;
  %464 = reshape(%460, newshape=[]) /* ty=float32 */;
  %465 = reshape(%461, newshape=[220]) /* ty=Tensor[(220), float32] */;
  %466 = @func_876(%462, %463, %464, %465) /* ty=(Tensor[(9, 9, 14), float64], Tensor[(9, 9, 14), bool], Tensor[(13, 3, 2), float32], Tensor[(30), float32], Tensor[(55, 6), float32], Tensor[(1, 78), float32], Tensor[(5, 4, 11), float32], float32, Tensor[(220), float32], Tensor[(9, 9, 14), bool], Tensor[(9, 2, 15), float64]) */;
  %467 = %466.0;
  (%457, %467, %var_3481, %var_3482, %var_3483)
}

def @func_2076(%var_2038: Tensor[(9, 9, 14), bool]) -> (Tensor[(9, 9, 14), float32], Tensor[(9, 2, 15), float64]) {
  %468 = @func_1326() /* ty=(Tensor[(9, 9, 14), bool],) */;
  %469 = %468.0;
  %470 = cast(%var_2038, dtype="float32") /* ty=Tensor[(9, 9, 14), float32] */;
  %471 = shape_of(%469, dtype="int32") /* ty=Tensor[(3), int32] */;
  %472 = cast(%469, dtype="float32") /* ty=Tensor[(9, 9, 14), float32] */;
  %473 = dyn.reshape(%470, %471, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %474 = @func_1152() /* ty=(Tensor[(9, 2, 15), float64],) */;
  %475 = mod(%472, %473) /* ty=Tensor[(9, 9, 14), float32] */;
  %476 = %474.0;
  (%475, %476)
}

def @func_4588() -> (Tensor[(9, 2, 15), float64], Tensor[(9, 2, 15), float64]) {
  %477 = @func_3121() /* ty=(Tensor[(9, 2, 15), float64],) */;
  %478 = @func_3121() /* ty=(Tensor[(9, 2, 15), float64],) */;
  %479 = %477.0;
  %480 = %478.0;
  (%479, %480)
}

def @func_5737(%var_5671: Tensor[(1134), float32], %var_5680: Tensor[(30), float32], %var_5681: Tensor[(330), float32]) -> (Tensor[(3, 16, 3), float32], Tensor[(8, 18), float32], Tensor[(9, 9, 14), bool], Tensor[(1134), float32], Tensor[(11, 6, 5), float32], Tensor[(30), float32], Tensor[(330), float32], Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), bool], Tensor[(26, 3), float32]) {
  %481 = cast(meta[relay.Constant][21] /* ty=Tensor[(8, 18), float32] */, dtype="float32") /* ty=Tensor[(8, 18), float32] */;
  %482 = reshape(%481, newshape=[3, 16, 3]) /* ty=Tensor[(3, 16, 3), float32] */;
  %483 = cast(%var_5671, dtype="float32") /* ty=Tensor[(1134), float32] */;
  %484 = reshape(%483, newshape=[9, 9, 14]) /* ty=Tensor[(9, 9, 14), float32] */;
  %485 = cast(%var_5680, dtype="float32") /* ty=Tensor[(30), float32] */;
  %486 = cast(%var_5681, dtype="float32") /* ty=Tensor[(330), float32] */;
  %487 = reshape(%485, newshape=[1, 6, 5]) /* ty=Tensor[(1, 6, 5), float32] */;
  %488 = reshape(%486, newshape=[11, 6, 5]) /* ty=Tensor[(11, 6, 5), float32] */;
  %489 = @func_264(%487, %488) /* ty=(Tensor[(11, 6, 5), float32],) */;
  %490 = @func_4941() /* ty=Tensor[(9, 2, 15), float64] */;
  %491 = cast(%490, dtype="float32") /* ty=Tensor[(9, 2, 15), float32] */;
  %492 = exp(%491) /* ty=Tensor[(9, 2, 15), float32] */;
  %493 = cast(%490, dtype="uint32") /* ty=Tensor[(9, 2, 15), uint32] */;
  %494 = shape_of(%492, dtype="int32") /* ty=Tensor[(3), int32] */;
  %495 = cast(%492, dtype="uint32") /* ty=Tensor[(9, 2, 15), uint32] */;
  %496 = dyn.reshape(%493, %494, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %497 = add(%495, %496) /* ty=Tensor[(9, 2, 15), uint32] */;
  %498 = cast(%497, dtype="float64") /* ty=Tensor[(9, 2, 15), float64] */;
  %499 = shape_of(%492, dtype="int32") /* ty=Tensor[(3), int32] */;
  %500 = cast(%492, dtype="float64") /* ty=Tensor[(9, 2, 15), float64] */;
  %501 = dyn.reshape(%498, %499, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %502 = @func_353() /* ty=(Tensor[(9, 9, 14), bool],) */;
  %503 = @func_4896(%482) /* ty=Tensor[(3, 16, 3), float32] */;
  %504 = @func_625(%484) /* ty=Tensor[(9, 9, 14), bool] */;
  %505 = %489.0;
  %506 = power(%500, %501) /* ty=Tensor[(9, 2, 15), float64] */;
  %507 = %502.0;
  %508 = @func_3819() /* ty=Tensor[(26, 3), float32] */;
  (%503, meta[relay.Constant][21] /* ty=Tensor[(8, 18), float32] */, %504, %var_5671, %505, %var_5680, %var_5681, %506, %507, %508)
}

def @func_3080(%var_3068: Tensor[(1092), int32], %var_3069: Tensor[(30), float32], %var_3070: float32) -> (Tensor[(11, 2, 15), float32], Tensor[(5, 6), float32], Tensor[(1092), int32], Tensor[(30), float32], float32) {
  %509 = cast(meta[relay.Constant][22] /* ty=Tensor[(11, 2, 15), float32] */, dtype="float32") /* ty=Tensor[(11, 2, 15), float32] */;
  %510 = cosh(%509) /* ty=Tensor[(11, 2, 15), float32] */;
  %511 = cast(%510, dtype="float32") /* ty=Tensor[(11, 2, 15), float32] */;
  %512 = cast(%var_3068, dtype="int32") /* ty=Tensor[(1092), int32] */;
  %513 = cast(%var_3068, dtype="int32") /* ty=Tensor[(1092), int32] */;
  %514 = cast(%var_3069, dtype="float32") /* ty=Tensor[(30), float32] */;
  %515 = cast(%510, dtype="float32") /* ty=Tensor[(11, 2, 15), float32] */;
  %516 = cast(%var_3070, dtype="float32") /* ty=float32 */;
  %517 = reshape(%512, newshape=[7, 12, 13]) /* ty=Tensor[(7, 12, 13), int32] */;
  %518 = reshape(%513, newshape=[7, 12, 13]) /* ty=Tensor[(7, 12, 13), int32] */;
  %519 = reshape(%514, newshape=[5, 6]) /* ty=Tensor[(5, 6), float32] */;
  %520 = reshape(%515, newshape=[1, 330]) /* ty=Tensor[(1, 330), float32] */;
  %521 = reshape(%516, newshape=[]) /* ty=float32 */;
  %522 = @func_1460(%517, %518, %519, %520, %521) /* ty=(Tensor[(7, 12, 13), int32], Tensor[(11, 6, 5), float32], Tensor[(5, 6), float32], Tensor[(1, 330), float64], Tensor[(9, 9, 14), bool], Tensor[(5, 4, 11), float32], float32, Tensor[(220), float32]) */;
  %523 = acos(%511) /* ty=Tensor[(11, 2, 15), float32] */;
  %524 = %522.2;
  (%523, %524, %var_3068, %var_3069, %var_3070)
}

def @func_930(%var_920: Tensor[(9, 9, 14), bool]) -> (Tensor[(9, 9, 14), uint16], Tensor[(9, 9, 14), bool]) {
  %525 = @func_511() /* ty=(Tensor[(9, 9, 14), bool],) */;
  %526 = %525.0;
  %527 = cast(%var_920, dtype="uint16") /* ty=Tensor[(9, 9, 14), uint16] */;
  %528 = shape_of(%526, dtype="int32") /* ty=Tensor[(3), int32] */;
  %529 = cast(%526, dtype="uint16") /* ty=Tensor[(9, 9, 14), uint16] */;
  %530 = dyn.reshape(%527, %528, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %531 = @func_511() /* ty=(Tensor[(9, 9, 14), bool],) */;
  %532 = minimum(%529, %530) /* ty=Tensor[(9, 9, 14), uint16] */;
  %533 = %531.0;
  (%532, %533)
}

def @func_3008(%var_2994: Tensor[(9, 9, 14), bool]) -> (Tensor[(9, 9, 14), float32],) {
  %534 = @func_2612() /* ty=Tensor[(9, 9, 14), bool] */;
  %535 = cast(%var_2994, dtype="int32") /* ty=Tensor[(9, 9, 14), int32] */;
  %536 = shape_of(%534, dtype="int32") /* ty=Tensor[(3), int32] */;
  %537 = cast(%534, dtype="int32") /* ty=Tensor[(9, 9, 14), int32] */;
  %538 = dyn.reshape(%535, %536, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %539 = logical_xor(%537, %538) /* ty=Tensor[(9, 9, 14), int32] */;
  %540 = cast(%539, dtype="float32") /* ty=Tensor[(9, 9, 14), float32] */;
  %541 = asinh(%540) /* ty=Tensor[(9, 9, 14), float32] */;
  (%541,)
}

def @func_1480() -> (Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), bool], Tensor[(3, 378), bool]) {
  %542 = cast(meta[relay.Constant][23] /* ty=Tensor[(3, 378), bool] */, dtype="bool") /* ty=Tensor[(3, 378), bool] */;
  %543 = reshape(%542, newshape=[1134]) /* ty=Tensor[(1134), bool] */;
  %544 = @func_986(%543) /* ty=(Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), bool]) */;
  %545 = @func_1133() /* ty=Tensor[(9, 2, 15), float64] */;
  %546 = %544.1;
  (%545, %546, meta[relay.Constant][23] /* ty=Tensor[(3, 378), bool] */)
}

def @func_3656(%var_3633: Tensor[(768), int64]) -> (Tensor[(9, 9, 14), bool], Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), bool], Tensor[(1, 108), int8], Tensor[(1296), int8], Tensor[(768), int64]) {
  %547 = @func_1480() /* ty=(Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), bool], Tensor[(3, 378), bool]) */;
  %548 = cast(meta[relay.Constant][24] /* ty=Tensor[(1, 108), int8] */, dtype="int8") /* ty=Tensor[(1, 108), int8] */;
  %549 = cast(meta[relay.Constant][25] /* ty=Tensor[(1296), int8] */, dtype="int8") /* ty=Tensor[(1296), int8] */;
  %550 = %547.1;
  %551 = cast(%550, dtype="float32") /* ty=Tensor[(9, 9, 14), float32] */;
  %552 = cast(%var_3633, dtype="int64") /* ty=Tensor[(768), int64] */;
  %553 = cast(meta[relay.Constant][25] /* ty=Tensor[(1296), int8] */, dtype="int8") /* ty=Tensor[(1296), int8] */;
  %554 = cast(meta[relay.Constant][24] /* ty=Tensor[(1, 108), int8] */, dtype="int8") /* ty=Tensor[(1, 108), int8] */;
  %555 = reshape(%548, newshape=[18, 6]) /* ty=Tensor[(18, 6), int8] */;
  %556 = reshape(%549, newshape=[1296]) /* ty=Tensor[(1296), int8] */;
  %557 = reshape(%551, newshape=[1134]) /* ty=Tensor[(1134), float32] */;
  %558 = reshape(%552, newshape=[768]) /* ty=Tensor[(768), int64] */;
  %559 = reshape(%553, newshape=[1296]) /* ty=Tensor[(1296), int8] */;
  %560 = reshape(%554, newshape=[18, 6]) /* ty=Tensor[(18, 6), int8] */;
  %561 = @func_1948(%555, %556, %557, %558, %559, %560) /* ty=(Tensor[(9, 2, 15), float64], Tensor[(9, 2, 15), float64], Tensor[(1134), float32], Tensor[(768), int64], Tensor[(9, 9, 14), bool], Tensor[(18, 6), float64], Tensor[(9, 9, 14), float64], Tensor[(1296), bool], Tensor[(9, 9, 14), bool]) */;
  %562 = @func_1596() /* ty=Tensor[(9, 2, 15), float64] */;
  %563 = %561.8;
  (%550, %562, %563, meta[relay.Constant][24] /* ty=Tensor[(1, 108), int8] */, meta[relay.Constant][25] /* ty=Tensor[(1296), int8] */, %var_3633)
}

def @func_722() -> (Tensor[(9, 2, 15), float64],) {
  %564 = cast(meta[relay.Constant][26] /* ty=Tensor[(9, 2, 15), float64] */, dtype="float64") /* ty=Tensor[(9, 2, 15), float64] */;
  %565 = log10(%564) /* ty=Tensor[(9, 2, 15), float64] */;
  (%565,)
}

def @func_1770() -> (Tensor[(9, 9, 14), float32],) {
  %566 = @func_277() /* ty=Tensor[(9, 9, 14), float32] */;
  (%566,)
}

def @func_2511(%var_2482: Tensor[(7, 9, 3), float64], %var_2487: Tensor[(224), uint8]) -> (Tensor[(30, 1), float32], Tensor[(224), uint8], Tensor[(14, 78), int32], Tensor[(330), float32], float32, Tensor[(7, 9, 3), float64]) {
  %567 = cast(%var_2487, dtype="uint8") /* ty=Tensor[(224), uint8] */;
  %568 = cast(%var_2487, dtype="uint8") /* ty=Tensor[(224), uint8] */;
  %569 = cast(meta[relay.Constant][27] /* ty=Tensor[(14, 78), int32] */, dtype="int32") /* ty=Tensor[(14, 78), int32] */;
  %570 = cast(meta[relay.Constant][28] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
  %571 = cast(-4.28304f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %572 = reshape(%567, newshape=[7, 2, 16]) /* ty=Tensor[(7, 2, 16), uint8] */;
  %573 = reshape(%568, newshape=[7, 2, 16]) /* ty=Tensor[(7, 2, 16), uint8] */;
  %574 = reshape(%569, newshape=[546, 2]) /* ty=Tensor[(546, 2), int32] */;
  %575 = reshape(%570, newshape=[330, 1]) /* ty=Tensor[(330, 1), float32] */;
  %576 = reshape(%571, newshape=[]) /* ty=float32 */;
  %577 = @func_2222(%572, %573, %574, %575, %576) /* ty=(Tensor[(7, 2, 16), uint8], Tensor[(5, 6), float32], Tensor[(546, 2), int32], Tensor[(30, 1), float32], Tensor[(330, 1), float32], float32, Tensor[(5, 4, 11), float32], Tensor[(220, 1), float32]) */;
  %578 = cast(%var_2482, dtype="float64") /* ty=Tensor[(7, 9, 3), float64] */;
  %579 = rsqrt(%578) /* ty=Tensor[(7, 9, 3), float64] */;
  %580 = cast(%579, dtype="float64") /* ty=Tensor[(7, 9, 3), float64] */;
  %581 = %577.3;
  %582 = sqrt(%580) /* ty=Tensor[(7, 9, 3), float64] */;
  (%581, %var_2487, meta[relay.Constant][27] /* ty=Tensor[(14, 78), int32] */, meta[relay.Constant][28] /* ty=Tensor[(330), float32] */, -4.28304f /* ty=float32 */, %582)
}

def @func_4354() -> Tensor[(9, 9, 14), bool] {
  %583 = @func_2856() /* ty=(Tensor[(9, 9, 14), bool], Tensor[(26, 3), float32], Tensor[(13, 3, 2), float32]) */;
  %583.0
}

def @func_2005(%var_1982: Tensor[(1, 15, 5), float64], %var_1983: Tensor[(3, 15, 5), float64]) -> (Tensor[(3, 15, 5), float64], Tensor[(13, 3, 2), float32], Tensor[(13, 6), float32]) {
  %584 = cast(%var_1982, dtype="float64") /* ty=Tensor[(1, 15, 5), float64] */;
  %585 = cast(%var_1983, dtype="float64") /* ty=Tensor[(3, 15, 5), float64] */;
  %586 = cast(meta[relay.Constant][29] /* ty=Tensor[(13, 6), float32] */, dtype="float32") /* ty=Tensor[(13, 6), float32] */;
  %587 = reshape(%586, newshape=[13, 3, 2]) /* ty=Tensor[(13, 3, 2), float32] */;
  %588 = @func_75(%587) /* ty=(Tensor[(13, 3, 2), float32],) */;
  %589 = minimum(%584, %585) /* ty=Tensor[(3, 15, 5), float64] */;
  %590 = %588.0;
  (%589, %590, meta[relay.Constant][29] /* ty=Tensor[(13, 6), float32] */)
}

def @func_1811(%var_1785: Tensor[(9, 2, 15), float64], %var_1806: Tensor[(9, 2, 15), bool]) -> (Tensor[(9, 2, 15), uint8],) {
  %591 = @func_1133() /* ty=Tensor[(9, 2, 15), float64] */;
  %592 = cast(%var_1785, dtype="bool") /* ty=Tensor[(9, 2, 15), bool] */;
  %593 = shape_of(%591, dtype="int32") /* ty=Tensor[(3), int32] */;
  %594 = cast(%591, dtype="bool") /* ty=Tensor[(9, 2, 15), bool] */;
  %595 = dyn.reshape(%592, %593, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %596 = less_equal(%594, %595) /* ty=Tensor[(9, 2, 15), bool] */;
  %597 = cast(%var_1806, dtype="uint8") /* ty=Tensor[(9, 2, 15), uint8] */;
  %598 = shape_of(%596, dtype="int32") /* ty=Tensor[(3), int32] */;
  %599 = cast(%596, dtype="uint8") /* ty=Tensor[(9, 2, 15), uint8] */;
  %600 = dyn.reshape(%597, %598, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %601 = logical_xor(%599, %600) /* ty=Tensor[(9, 2, 15), uint8] */;
  (%601,)
}

def @func_986(%var_956: Tensor[(1134), bool]) -> (Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), bool]) {
  %602 = @func_722() /* ty=(Tensor[(9, 2, 15), float64],) */;
  %603 = cast(%var_956, dtype="bool") /* ty=Tensor[(1134), bool] */;
  %604 = reshape(%603, newshape=[9, 9, 14]) /* ty=Tensor[(9, 9, 14), bool] */;
  %605 = @func_930(%604) /* ty=(Tensor[(9, 9, 14), uint16], Tensor[(9, 9, 14), bool]) */;
  %606 = %605.0;
  %607 = cast(%var_956, dtype="bool") /* ty=Tensor[(1134), bool] */;
  %608 = shape_of(%606, dtype="int32") /* ty=Tensor[(3), int32] */;
  %609 = cast(%606, dtype="bool") /* ty=Tensor[(9, 9, 14), bool] */;
  %610 = dyn.reshape(%607, %608, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %611 = %602.0;
  %612 = greater(%609, %610) /* ty=Tensor[(9, 9, 14), bool] */;
  (%611, %612)
}

def @func_3515() -> Tensor[(13, 3, 2), float32] {
  %613 = @func_2860() /* ty=(Tensor[(13, 3, 2), float32],) */;
  %613.0
}

def @func_1710(%var_1697: Tensor[(27, 42), bool]) -> (Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), bool], Tensor[(27, 42), bool]) {
  %614 = @func_722() /* ty=(Tensor[(9, 2, 15), float64],) */;
  %615 = cast(%var_1697, dtype="bool") /* ty=Tensor[(27, 42), bool] */;
  %616 = reshape(%615, newshape=[9, 9, 14]) /* ty=Tensor[(9, 9, 14), bool] */;
  %617 = @func_930(%616) /* ty=(Tensor[(9, 9, 14), uint16], Tensor[(9, 9, 14), bool]) */;
  %618 = %614.0;
  %619 = %617.1;
  (%618, %619, %var_1697)
}

def @func_1011(%var_1001: Tensor[(7, 12, 2), bool], %var_1002: Tensor[(7, 12, 2), bool]) -> Tensor[(7, 12, 2), bool] {
  %620 = cast(%var_1002, dtype="bool") /* ty=Tensor[(7, 12, 2), bool] */;
  %621 = shape_of(%var_1001, dtype="int32") /* ty=Tensor[(3), int32] */;
  %622 = cast(%var_1001, dtype="bool") /* ty=Tensor[(7, 12, 2), bool] */;
  %623 = dyn.reshape(%620, %621, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%622, %623) /* ty=Tensor[(7, 12, 2), bool] */
}

def @func_2888(%var_2883: Tensor[(5, 6), float32], %var_2884: Tensor[(1, 330), float32]) -> (Tensor[(9, 2, 15), float64], Tensor[(13, 3, 2), float32], Tensor[(5, 6), float32], Tensor[(1, 330), float32], Tensor[(78), float32]) {
  %624 = @func_722() /* ty=(Tensor[(9, 2, 15), float64],) */;
  %625 = cast(%var_2883, dtype="float32") /* ty=Tensor[(5, 6), float32] */;
  %626 = cast(%var_2884, dtype="float32") /* ty=Tensor[(1, 330), float32] */;
  %627 = cast(meta[relay.Constant][30] /* ty=Tensor[(78), float32] */, dtype="float32") /* ty=Tensor[(78), float32] */;
  %628 = reshape(%625, newshape=[30]) /* ty=Tensor[(30), float32] */;
  %629 = reshape(%626, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %630 = reshape(%627, newshape=[13, 6]) /* ty=Tensor[(13, 6), float32] */;
  %631 = @func_427(%628, %629, %630) /* ty=(Tensor[(7, 5, 12), float64], Tensor[(7, 5, 12), float32], Tensor[(11, 6, 5), float32], Tensor[(30), float32], Tensor[(330), float32], Tensor[(13, 3, 2), float32], Tensor[(13, 3, 2), float32], Tensor[(11, 6, 5), float32]) */;
  %632 = %624.0;
  %633 = %631.5;
  (%632, %633, %var_2883, %var_2884, meta[relay.Constant][30] /* ty=Tensor[(78), float32] */)
}

def @func_2612() -> Tensor[(9, 9, 14), bool] {
  %634 = @func_1480() /* ty=(Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), bool], Tensor[(3, 378), bool]) */;
  %634.1
}

def @func_3977() -> Tensor[(9, 9, 14), float32] {
  %635 = @func_1770() /* ty=(Tensor[(9, 9, 14), float32],) */;
  %635.0
}

def @func_2860() -> (Tensor[(13, 3, 2), float32],) {
  %636 = @func_2856() /* ty=(Tensor[(9, 9, 14), bool], Tensor[(26, 3), float32], Tensor[(13, 3, 2), float32]) */;
  %637 = %636.2;
  (%637,)
}

def @func_4293(%var_4286: Tensor[(8, 14, 16), float32]) -> Tensor[(8, 14, 16), float32] {
  %638 = cast(%var_4286, dtype="float32") /* ty=Tensor[(8, 14, 16), float32] */;
  %639 = shape_of(meta[relay.Constant][31] /* ty=Tensor[(8, 14, 16), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %640 = cast(meta[relay.Constant][31] /* ty=Tensor[(8, 14, 16), float32] */, dtype="float32") /* ty=Tensor[(8, 14, 16), float32] */;
  %641 = dyn.reshape(%638, %639, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_mod(%640, %641) /* ty=Tensor[(8, 14, 16), float32] */
}

def @func_5608(%var_5541: Tensor[(1936), int32], %var_5577: float32, %var_5578: Tensor[(110, 2), float32]) -> (Tensor[(9, 9, 14), float32], Tensor[(9, 2, 15), float64], Tensor[(1936), int32], Tensor[(5, 4, 11), float32], float32, Tensor[(110, 2), float64], Tensor[(110, 2), float64]) {
  %642 = @func_3725() /* ty=(Tensor[(9, 9, 14), float32],) */;
  %643 = cast(%var_5541, dtype="int32") /* ty=Tensor[(1936), int32] */;
  %644 = cast(%var_5541, dtype="int32") /* ty=Tensor[(1936), int32] */;
  %645 = reshape(%643, newshape=[11, 16, 11]) /* ty=Tensor[(11, 16, 11), int32] */;
  %646 = reshape(%644, newshape=[11, 16, 11]) /* ty=Tensor[(11, 16, 11), int32] */;
  %647 = @func_1525(%645, %646) /* ty=(Tensor[(11, 16, 11), int32], Tensor[(5, 4, 11), float32], Tensor[(1092), int32], Tensor[(30), float32], Tensor[(330, 1), float32], float32, Tensor[(9, 2, 15), float64]) */;
  %648 = cast(%var_5577, dtype="float32") /* ty=float32 */;
  %649 = cast(%var_5578, dtype="float32") /* ty=Tensor[(110, 2), float32] */;
  %650 = reshape(%648, newshape=[]) /* ty=float32 */;
  %651 = reshape(%649, newshape=[5, 4, 11]) /* ty=Tensor[(5, 4, 11), float32] */;
  %652 = cast(%var_5578, dtype="float64") /* ty=Tensor[(110, 2), float64] */;
  %653 = asin(%652) /* ty=Tensor[(110, 2), float64] */;
  %654 = cast(%653, dtype="float64") /* ty=Tensor[(110, 2), float64] */;
  %655 = cast(%653, dtype="float64") /* ty=Tensor[(110, 2), float64] */;
  %656 = %642.0;
  %657 = %647.6;
  %658 = @func_578(%650, %651) /* ty=Tensor[(5, 4, 11), float32] */;
  %659 = atanh(%654) /* ty=Tensor[(110, 2), float64] */;
  %660 = atan(%655) /* ty=Tensor[(110, 2), float64] */;
  (%656, %657, %var_5541, %658, %var_5577, %659, %660)
}

def @func_4479() -> (Tensor[(26, 3), int32],) {
  %661 = @func_3819() /* ty=Tensor[(26, 3), float32] */;
  %662 = cast(meta[relay.Constant][32] /* ty=Tensor[(26, 3), float32] */, dtype="int32") /* ty=Tensor[(26, 3), int32] */;
  %663 = shape_of(%661, dtype="int32") /* ty=Tensor[(2), int32] */;
  %664 = cast(%661, dtype="int32") /* ty=Tensor[(26, 3), int32] */;
  %665 = dyn.reshape(%662, %663, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %666 = minimum(%664, %665) /* ty=Tensor[(26, 3), int32] */;
  (%666,)
}

def @func_2222(%var_2194: Tensor[(7, 2, 16), uint8], %var_2195: Tensor[(7, 2, 16), uint8], %var_2208: Tensor[(546, 2), int32], %var_2210: Tensor[(330, 1), float32], %var_2211: float32) -> (Tensor[(7, 2, 16), uint8], Tensor[(5, 6), float32], Tensor[(546, 2), int32], Tensor[(30, 1), float32], Tensor[(330, 1), float32], float32, Tensor[(5, 4, 11), float32], Tensor[(220, 1), float32]) {
  %667 = cast(%var_2195, dtype="uint8") /* ty=Tensor[(7, 2, 16), uint8] */;
  %668 = shape_of(%var_2194, dtype="int32") /* ty=Tensor[(3), int32] */;
  %669 = cast(%var_2194, dtype="uint8") /* ty=Tensor[(7, 2, 16), uint8] */;
  %670 = dyn.reshape(%667, %668, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %671 = cast(%var_2208, dtype="int32") /* ty=Tensor[(546, 2), int32] */;
  %672 = cast(%var_2208, dtype="int32") /* ty=Tensor[(546, 2), int32] */;
  %673 = cast(meta[relay.Constant][33] /* ty=Tensor[(30, 1), float32] */, dtype="float32") /* ty=Tensor[(30, 1), float32] */;
  %674 = cast(%var_2210, dtype="float32") /* ty=Tensor[(330, 1), float32] */;
  %675 = cast(%var_2211, dtype="float32") /* ty=float32 */;
  %676 = reshape(%671, newshape=[7, 12, 13]) /* ty=Tensor[(7, 12, 13), int32] */;
  %677 = reshape(%672, newshape=[7, 12, 13]) /* ty=Tensor[(7, 12, 13), int32] */;
  %678 = reshape(%673, newshape=[5, 6]) /* ty=Tensor[(5, 6), float32] */;
  %679 = reshape(%674, newshape=[1, 330]) /* ty=Tensor[(1, 330), float32] */;
  %680 = reshape(%675, newshape=[]) /* ty=float32 */;
  %681 = @func_1460(%676, %677, %678, %679, %680) /* ty=(Tensor[(7, 12, 13), int32], Tensor[(11, 6, 5), float32], Tensor[(5, 6), float32], Tensor[(1, 330), float64], Tensor[(9, 9, 14), bool], Tensor[(5, 4, 11), float32], float32, Tensor[(220), float32]) */;
  %682 = cast(%var_2211, dtype="float32") /* ty=float32 */;
  %683 = cast(meta[relay.Constant][34] /* ty=Tensor[(220, 1), float32] */, dtype="float32") /* ty=Tensor[(220, 1), float32] */;
  %684 = reshape(%682, newshape=[]) /* ty=float32 */;
  %685 = reshape(%683, newshape=[5, 4, 11]) /* ty=Tensor[(5, 4, 11), float32] */;
  %686 = bitwise_or(%669, %670) /* ty=Tensor[(7, 2, 16), uint8] */;
  %687 = %681.2;
  %688 = @func_578(%684, %685) /* ty=Tensor[(5, 4, 11), float32] */;
  (%686, %687, %var_2208, meta[relay.Constant][33] /* ty=Tensor[(30, 1), float32] */, %var_2210, %var_2211, %688, meta[relay.Constant][34] /* ty=Tensor[(220, 1), float32] */)
}

def @func_4781(%var_4762: Tensor[(224), uint8], %var_4776: float32, %var_4777: Tensor[(220), float32]) -> (Tensor[(9, 9, 14), float32], Tensor[(224), uint8], Tensor[(189), float64], Tensor[(224), uint8], Tensor[(9, 9, 14), bool], Tensor[(1, 30), float32], float32, Tensor[(220), float32]) {
  %689 = cast(meta[relay.Constant][35] /* ty=Tensor[(189), float64] */, dtype="float64") /* ty=Tensor[(189), float64] */;
  %690 = cast(%var_4762, dtype="uint8") /* ty=Tensor[(224), uint8] */;
  %691 = reshape(%689, newshape=[7, 9, 3]) /* ty=Tensor[(7, 9, 3), float64] */;
  %692 = reshape(%690, newshape=[224]) /* ty=Tensor[(224), uint8] */;
  %693 = @func_2511(%691, %692) /* ty=(Tensor[(30, 1), float32], Tensor[(224), uint8], Tensor[(14, 78), int32], Tensor[(330), float32], float32, Tensor[(7, 9, 3), float64]) */;
  %694 = cast(meta[relay.Constant][36] /* ty=Tensor[(1, 30), float32] */, dtype="float32") /* ty=Tensor[(1, 30), float32] */;
  %695 = cast(%var_4776, dtype="float32") /* ty=float32 */;
  %696 = cast(%var_4777, dtype="float32") /* ty=Tensor[(220), float32] */;
  %697 = reshape(%694, newshape=[30]) /* ty=Tensor[(30), float32] */;
  %698 = reshape(%695, newshape=[]) /* ty=float32 */;
  %699 = reshape(%696, newshape=[55, 4]) /* ty=Tensor[(55, 4), float32] */;
  %700 = @func_3485(%697, %698, %699) /* ty=(Tensor[(9, 9, 14), bool], Tensor[(9, 9, 14), float64], Tensor[(30), float32], float32, Tensor[(55, 4), float32]) */;
  %701 = @func_277() /* ty=Tensor[(9, 9, 14), float32] */;
  %702 = %693.1;
  %703 = %700.0;
  (%701, %702, meta[relay.Constant][35] /* ty=Tensor[(189), float64] */, %var_4762, %703, meta[relay.Constant][36] /* ty=Tensor[(1, 30), float32] */, %var_4776, %var_4777)
}

def @func_2586(%var_2584: Tensor[(330), float32]) -> (Tensor[(9, 9, 14), bool], Tensor[(11, 6, 5), float32], Tensor[(30, 1), float32], Tensor[(330), float32]) {
  %704 = @func_353() /* ty=(Tensor[(9, 9, 14), bool],) */;
  %705 = cast(meta[relay.Constant][37] /* ty=Tensor[(30, 1), float32] */, dtype="float32") /* ty=Tensor[(30, 1), float32] */;
  %706 = cast(%var_2584, dtype="float32") /* ty=Tensor[(330), float32] */;
  %707 = reshape(%705, newshape=[1, 6, 5]) /* ty=Tensor[(1, 6, 5), float32] */;
  %708 = reshape(%706, newshape=[11, 6, 5]) /* ty=Tensor[(11, 6, 5), float32] */;
  %709 = @func_264(%707, %708) /* ty=(Tensor[(11, 6, 5), float32],) */;
  %710 = %704.0;
  %711 = %709.0;
  (%710, %711, meta[relay.Constant][37] /* ty=Tensor[(30, 1), float32] */, %var_2584)
}

def @func_1326() -> (Tensor[(9, 9, 14), bool],) {
  %712 = @func_511() /* ty=(Tensor[(9, 9, 14), bool],) */;
  %713 = %712.0;
  (%713,)
}

def @func_3454(%var_3412: Tensor[(768), int64]) -> (Tensor[(9, 9, 14), float32], Tensor[(9, 9, 14), bool], Tensor[(768), int64], Tensor[(9, 9, 14), float32], Tensor[(9, 9, 14), float32]) {
  %714 = @func_1326() /* ty=(Tensor[(9, 9, 14), bool],) */;
  %715 = %714.0;
  %716 = cast(%715, dtype="float32") /* ty=Tensor[(9, 9, 14), float32] */;
  %717 = cast(%var_3412, dtype="int64") /* ty=Tensor[(768), int64] */;
  %718 = reshape(%717, newshape=[12, 4, 16]) /* ty=Tensor[(12, 4, 16), int64] */;
  %719 = @func_1116(%718) /* ty=(Tensor[(12, 4, 16), bool], Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), bool]) */;
  %720 = @func_1770() /* ty=(Tensor[(9, 9, 14), float32],) */;
  %721 = log(%716) /* ty=Tensor[(9, 9, 14), float32] */;
  %722 = %719.2;
  %723 = %720.0;
  %724 = @func_3098() /* ty=Tensor[(9, 9, 14), float32] */;
  (%721, %722, %var_3412, %723, %724)
}

def @func_3605(%var_3598: Tensor[(12, 9, 16), float32]) -> (Tensor[(12, 9, 16), float32],) {
  %725 = cast(%var_3598, dtype="float32") /* ty=Tensor[(12, 9, 16), float32] */;
  %726 = atan(%725) /* ty=Tensor[(12, 9, 16), float32] */;
  (%726,)
}

def @func_1525(%var_1498: Tensor[(11, 16, 11), int32], %var_1499: Tensor[(11, 16, 11), int32]) -> (Tensor[(11, 16, 11), int32], Tensor[(5, 4, 11), float32], Tensor[(1092), int32], Tensor[(30), float32], Tensor[(330, 1), float32], float32, Tensor[(9, 2, 15), float64]) {
  %727 = cast(%var_1499, dtype="int32") /* ty=Tensor[(11, 16, 11), int32] */;
  %728 = shape_of(%var_1498, dtype="int32") /* ty=Tensor[(3), int32] */;
  %729 = cast(%var_1498, dtype="int32") /* ty=Tensor[(11, 16, 11), int32] */;
  %730 = dyn.reshape(%727, %728, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %731 = cast(meta[relay.Constant][38] /* ty=Tensor[(1092), int32] */, dtype="int32") /* ty=Tensor[(1092), int32] */;
  %732 = cast(meta[relay.Constant][38] /* ty=Tensor[(1092), int32] */, dtype="int32") /* ty=Tensor[(1092), int32] */;
  %733 = cast(meta[relay.Constant][39] /* ty=Tensor[(30), float32] */, dtype="float32") /* ty=Tensor[(30), float32] */;
  %734 = cast(meta[relay.Constant][40] /* ty=Tensor[(330, 1), float32] */, dtype="float32") /* ty=Tensor[(330, 1), float32] */;
  %735 = cast(-5.08427f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %736 = reshape(%731, newshape=[7, 12, 13]) /* ty=Tensor[(7, 12, 13), int32] */;
  %737 = reshape(%732, newshape=[7, 12, 13]) /* ty=Tensor[(7, 12, 13), int32] */;
  %738 = reshape(%733, newshape=[5, 6]) /* ty=Tensor[(5, 6), float32] */;
  %739 = reshape(%734, newshape=[1, 330]) /* ty=Tensor[(1, 330), float32] */;
  %740 = reshape(%735, newshape=[]) /* ty=float32 */;
  %741 = @func_1460(%736, %737, %738, %739, %740) /* ty=(Tensor[(7, 12, 13), int32], Tensor[(11, 6, 5), float32], Tensor[(5, 6), float32], Tensor[(1, 330), float64], Tensor[(9, 9, 14), bool], Tensor[(5, 4, 11), float32], float32, Tensor[(220), float32]) */;
  %742 = @func_722() /* ty=(Tensor[(9, 2, 15), float64],) */;
  %743 = %742.0;
  %744 = cast(%743, dtype="float64") /* ty=Tensor[(9, 2, 15), float64] */;
  %745 = minimum(%729, %730) /* ty=Tensor[(11, 16, 11), int32] */;
  %746 = %741.5;
  %747 = acos(%744) /* ty=Tensor[(9, 2, 15), float64] */;
  (%745, %746, meta[relay.Constant][38] /* ty=Tensor[(1092), int32] */, meta[relay.Constant][39] /* ty=Tensor[(30), float32] */, meta[relay.Constant][40] /* ty=Tensor[(330, 1), float32] */, -5.08427f /* ty=float32 */, %747)
}

def @func_5901() -> (Tensor[(9, 9, 14), bool],) {
  %748 = @func_1480() /* ty=(Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), bool], Tensor[(3, 378), bool]) */;
  %749 = %748.1;
  (%749,)
}

def @func_5463(%var_5453: Tensor[(3, 8, 1), float64]) -> (Tensor[(3, 8, 1), float64], Tensor[(8, 14, 16), float32], Tensor[(1792), float32]) {
  %750 = cast(%var_5453, dtype="float64") /* ty=Tensor[(3, 8, 1), float64] */;
  %751 = cast(meta[relay.Constant][41] /* ty=Tensor[(1792), float32] */, dtype="float32") /* ty=Tensor[(1792), float32] */;
  %752 = reshape(%751, newshape=[8, 14, 16]) /* ty=Tensor[(8, 14, 16), float32] */;
  %753 = acos(%750) /* ty=Tensor[(3, 8, 1), float64] */;
  %754 = @func_4293(%752) /* ty=Tensor[(8, 14, 16), float32] */;
  (%753, %754, meta[relay.Constant][41] /* ty=Tensor[(1792), float32] */)
}

def @func_5208(%var_5141: Tensor[(220), float32], %var_5162: Tensor[(30), float32]) -> (Tensor[(9, 9, 14), bool], Tensor[(9, 9, 14), float32], Tensor[(220), float32], Tensor[(9, 9, 14), float32], Tensor[(30), int64]) {
  %755 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %756 = cast(%var_5141, dtype="float32") /* ty=Tensor[(220), float32] */;
  %757 = reshape(%755, newshape=[]) /* ty=bool */;
  %758 = reshape(%756, newshape=[220]) /* ty=Tensor[(220), float32] */;
  %759 = @func_2421(%757, %758) /* ty=(Tensor[(9, 9, 14), float32], Tensor[(30), float32], bool, Tensor[(220), float32], Tensor[(9, 9, 14), bool]) */;
  %760 = @func_3725() /* ty=(Tensor[(9, 9, 14), float32],) */;
  %761 = %760.0;
  %762 = cast(%761, dtype="float32") /* ty=Tensor[(9, 9, 14), float32] */;
  %763 = acos(%762) /* ty=Tensor[(9, 9, 14), float32] */;
  %764 = cast(%763, dtype="float32") /* ty=Tensor[(9, 9, 14), float32] */;
  %765 = atanh(%764) /* ty=Tensor[(9, 9, 14), float32] */;
  %766 = cast(%var_5162, dtype="float32") /* ty=Tensor[(30), float32] */;
  %767 = cast(False /* ty=bool */, dtype="float32") /* ty=float32 */;
  %768 = cast(%var_5141, dtype="float32") /* ty=Tensor[(220), float32] */;
  %769 = reshape(%766, newshape=[30]) /* ty=Tensor[(30), float32] */;
  %770 = reshape(%767, newshape=[]) /* ty=float32 */;
  %771 = reshape(%768, newshape=[55, 4]) /* ty=Tensor[(55, 4), float32] */;
  %772 = @func_3485(%769, %770, %771) /* ty=(Tensor[(9, 9, 14), bool], Tensor[(9, 9, 14), float64], Tensor[(30), float32], float32, Tensor[(55, 4), float32]) */;
  %773 = %772.0;
  %774 = cast(%773, dtype="float32") /* ty=Tensor[(9, 9, 14), float32] */;
  %775 = shape_of(%765, dtype="int32") /* ty=Tensor[(3), int32] */;
  %776 = cast(%765, dtype="float32") /* ty=Tensor[(9, 9, 14), float32] */;
  %777 = dyn.reshape(%774, %775, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %778 = cast(%var_5162, dtype="int64") /* ty=Tensor[(30), int64] */;
  %779 = cast(False /* ty=bool */, dtype="int64") /* ty=int64 */;
  %780 = @func_3779() /* ty=Tensor[(9, 9, 14), bool] */;
  %781 = %759.0;
  %782 = power(%776, %777) /* ty=Tensor[(9, 9, 14), float32] */;
  %783 = bitwise_and(%778, %779) /* ty=Tensor[(30), int64] */;
  (%780, %781, %var_5141, %782, %783)
}

def @func_2158() -> Tensor[(9, 9, 14), bool] {
  %784 = @func_353() /* ty=(Tensor[(9, 9, 14), bool],) */;
  %784.0
}

def @func_1152() -> (Tensor[(9, 2, 15), float64],) {
  %785 = @func_1133() /* ty=Tensor[(9, 2, 15), float64] */;
  (%785,)
}

def @func_578(%var_557: float32, %var_568: Tensor[(5, 4, 11), float32]) -> Tensor[(5, 4, 11), float32] {
  %786 = cast(%var_557, dtype="float32") /* ty=float32 */;
  %787 = cast(meta[relay.Constant][42] /* ty=Tensor[(5, 4, 11), float32] */, dtype="float32") /* ty=Tensor[(5, 4, 11), float32] */;
  %788 = minimum(%786, %787) /* ty=Tensor[(5, 4, 11), float32] */;
  %789 = cast(%var_568, dtype="int64") /* ty=Tensor[(5, 4, 11), int64] */;
  %790 = shape_of(%788, dtype="int32") /* ty=Tensor[(3), int32] */;
  %791 = cast(%788, dtype="int64") /* ty=Tensor[(5, 4, 11), int64] */;
  %792 = dyn.reshape(%789, %790, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %793 = bitwise_xor(%791, %792) /* ty=Tensor[(5, 4, 11), int64] */;
  %794 = cast(%793, dtype="float32") /* ty=Tensor[(5, 4, 11), float32] */;
  tan(%794) /* ty=Tensor[(5, 4, 11), float32] */
}

def @func_353() -> (Tensor[(9, 9, 14), bool],) {
  %795 = @func_277() /* ty=Tensor[(9, 9, 14), float32] */;
  %796 = cast(%795, dtype="float64") /* ty=Tensor[(9, 9, 14), float64] */;
  %797 = sin(%796) /* ty=Tensor[(9, 9, 14), float64] */;
  %798 = cast(%795, dtype="bool") /* ty=Tensor[(9, 9, 14), bool] */;
  %799 = shape_of(%797, dtype="int32") /* ty=Tensor[(3), int32] */;
  %800 = cast(%797, dtype="bool") /* ty=Tensor[(9, 9, 14), bool] */;
  %801 = dyn.reshape(%798, %799, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %802 = not_equal(%800, %801) /* ty=Tensor[(9, 9, 14), bool] */;
  (%802,)
}

def @func_3121() -> (Tensor[(9, 2, 15), float64],) {
  %803 = @func_1596() /* ty=Tensor[(9, 2, 15), float64] */;
  (%803,)
}

def @func_2797(%var_2789: bool) -> (Tensor[(9, 9, 14), bool], Tensor[(30), float32], bool, Tensor[(220), float32], Tensor[(9, 9, 14), float32]) {
  %804 = @func_2158() /* ty=Tensor[(9, 9, 14), bool] */;
  %805 = cast(meta[relay.Constant][43] /* ty=Tensor[(9, 9, 14), bool] */, dtype="bool") /* ty=Tensor[(9, 9, 14), bool] */;
  %806 = shape_of(%804, dtype="int32") /* ty=Tensor[(3), int32] */;
  %807 = cast(%804, dtype="bool") /* ty=Tensor[(9, 9, 14), bool] */;
  %808 = dyn.reshape(%805, %806, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %809 = cast(%var_2789, dtype="bool") /* ty=bool */;
  %810 = cast(meta[relay.Constant][43] /* ty=Tensor[(9, 9, 14), bool] */, dtype="float32") /* ty=Tensor[(9, 9, 14), float32] */;
  %811 = cast(meta[relay.Constant][44] /* ty=Tensor[(220), float32] */, dtype="float32") /* ty=Tensor[(220), float32] */;
  %812 = reshape(%809, newshape=[]) /* ty=bool */;
  %813 = reshape(%810, newshape=[1134, 1]) /* ty=Tensor[(1134, 1), float32] */;
  %814 = reshape(%811, newshape=[220]) /* ty=Tensor[(220), float32] */;
  %815 = @func_1075(%812, %813, %814) /* ty=(Tensor[(6, 4, 12), bool], Tensor[(11, 6, 5), float32], Tensor[(10, 3), float32], Tensor[(330), float32], Tensor[(30), float32], Tensor[(1134, 220), float32]) */;
  %816 = @func_2648() /* ty=(Tensor[(9, 9, 14), float32],) */;
  %817 = logical_and(%807, %808) /* ty=Tensor[(9, 9, 14), bool] */;
  %818 = %815.4;
  %819 = %816.0;
  (%817, %818, %var_2789, meta[relay.Constant][44] /* ty=Tensor[(220), float32] */, %819)
}

def @func_3819() -> Tensor[(26, 3), float32] {
  %820 = @func_2856() /* ty=(Tensor[(9, 9, 14), bool], Tensor[(26, 3), float32], Tensor[(13, 3, 2), float32]) */;
  %820.1
}

def @func_1116(%var_1102: Tensor[(12, 4, 16), int64]) -> (Tensor[(12, 4, 16), bool], Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), bool]) {
  %821 = cast(%var_1102, dtype="bool") /* ty=Tensor[(12, 4, 16), bool] */;
  %822 = shape_of(meta[relay.Constant][45] /* ty=Tensor[(12, 4, 16), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %823 = cast(meta[relay.Constant][45] /* ty=Tensor[(12, 4, 16), int64] */, dtype="bool") /* ty=Tensor[(12, 4, 16), bool] */;
  %824 = dyn.reshape(%821, %822, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %825 = @func_722() /* ty=(Tensor[(9, 2, 15), float64],) */;
  %826 = @func_511() /* ty=(Tensor[(9, 9, 14), bool],) */;
  %827 = not_equal(%823, %824) /* ty=Tensor[(12, 4, 16), bool] */;
  %828 = %825.0;
  %829 = %826.0;
  (%827, %828, %829)
}

def @func_3098() -> Tensor[(9, 9, 14), float32] {
  @func_277() /* ty=Tensor[(9, 9, 14), float32] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_1310(%var_1305: Tensor[(9, 12, 1), int8], %var_1306: Tensor[(9, 12, 12), int8], %var_1307: Tensor[(27, 42), float32], %var_1308: Tensor[(768), int64], %var_1309: Tensor[(27, 42), float64]) -> (Tensor[(9, 12, 12), int8], bool, Tensor[(220), float32], Tensor[(9, 9, 14), bool], Tensor[(9, 12, 330), bool], Tensor[(9, 9, 14), bool], Tensor[(768), int64], Tensor[(9, 9, 14), bool], Tensor[(12, 4, 16), bool], Tensor[(27, 42), uint32], Tensor[(9, 9, 14), float32]) {
  @func_1303(%var_1305, %var_1306, %var_1307, %var_1308, %var_1309) /* ty=(Tensor[(9, 12, 12), int8], bool, Tensor[(220), float32], Tensor[(9, 9, 14), bool], Tensor[(9, 12, 330), bool], Tensor[(9, 9, 14), bool], Tensor[(768), int64], Tensor[(9, 9, 14), bool], Tensor[(12, 4, 16), bool], Tensor[(27, 42), uint32], Tensor[(9, 9, 14), float32]) */
}

def @func_1119(%var_1117: Tensor[(12, 4, 16), int64]) -> (Tensor[(12, 4, 16), bool], Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), bool]) {
  @func_1116(%var_1117) /* ty=(Tensor[(12, 4, 16), bool], Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), bool]) */
}

def @func_1712(%var_1711: Tensor[(27, 42), bool]) -> (Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), bool], Tensor[(27, 42), bool]) {
  %6 = fn (%var_1697: Tensor[(27, 42), bool]) -> (Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), bool], Tensor[(27, 42), bool]) {
    %0 = @func_722() /* ty=(Tensor[(9, 2, 15), float64],) */;
    %1 = cast(%var_1697, dtype="bool") /* ty=Tensor[(27, 42), bool] */;
    %2 = reshape(%1, newshape=[9, 9, 14]) /* ty=Tensor[(9, 9, 14), bool] */;
    %3 = @func_930(%2) /* ty=(Tensor[(9, 9, 14), uint16], Tensor[(9, 9, 14), bool]) */;
    %4 = %0.0;
    %5 = %3.1;
    (%4, %5, %var_1697)
  };
  %6(%var_1711) /* ty=(Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), bool], Tensor[(27, 42), bool]) */
}

def @func_2005(%var_1982: Tensor[(1, 15, 5), float64], %var_1983: Tensor[(3, 15, 5), float64]) -> (Tensor[(3, 15, 5), float64], Tensor[(13, 3, 2), float32], Tensor[(13, 6), float32]) {
  %7 = cast(%var_1982, dtype="float64") /* ty=Tensor[(1, 15, 5), float64] */;
  %8 = cast(%var_1983, dtype="float64") /* ty=Tensor[(3, 15, 5), float64] */;
  %9 = cast(meta[relay.Constant][0] /* ty=Tensor[(13, 6), float32] */, dtype="float32") /* ty=Tensor[(13, 6), float32] */;
  %10 = reshape(%9, newshape=[13, 3, 2]) /* ty=Tensor[(13, 3, 2), float32] */;
  %11 = @func_75(%10) /* ty=(Tensor[(13, 3, 2), float32],) */;
  %12 = minimum(%7, %8) /* ty=Tensor[(3, 15, 5), float64] */;
  %13 = %11.0;
  (%12, %13, meta[relay.Constant][0] /* ty=Tensor[(13, 6), float32] */)
}

def @func_3726() -> (Tensor[(9, 9, 14), float32],) {
  %16 = fn () -> (Tensor[(9, 9, 14), float32],) {
    %14 = @func_1770() /* ty=(Tensor[(9, 9, 14), float32],) */;
    %15 = %14.0;
    (%15,)
  };
  %16() /* ty=(Tensor[(9, 9, 14), float32],) */
}

def @func_1014(%var_1012: Tensor[(7, 12, 2), bool], %var_1013: Tensor[(7, 12, 2), bool]) -> Tensor[(7, 12, 2), bool] {
  %21 = fn (%var_1001: Tensor[(7, 12, 2), bool], %var_1002: Tensor[(7, 12, 2), bool]) -> Tensor[(7, 12, 2), bool] {
    %17 = cast(%var_1002, dtype="bool") /* ty=Tensor[(7, 12, 2), bool] */;
    %18 = shape_of(%var_1001, dtype="int32") /* ty=Tensor[(3), int32] */;
    %19 = cast(%var_1001, dtype="bool") /* ty=Tensor[(7, 12, 2), bool] */;
    %20 = dyn.reshape(%17, %18, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    logical_or(%19, %20) /* ty=Tensor[(7, 12, 2), bool] */
  };
  %21(%var_1012, %var_1013) /* ty=Tensor[(7, 12, 2), bool] */
}

def @func_2888(%var_2883: Tensor[(5, 6), float32], %var_2884: Tensor[(1, 330), float32]) -> (Tensor[(9, 2, 15), float64], Tensor[(13, 3, 2), float32], Tensor[(5, 6), float32], Tensor[(1, 330), float32], Tensor[(78), float32]) {
  %22 = @func_722() /* ty=(Tensor[(9, 2, 15), float64],) */;
  %23 = cast(%var_2883, dtype="float32") /* ty=Tensor[(5, 6), float32] */;
  %24 = cast(%var_2884, dtype="float32") /* ty=Tensor[(1, 330), float32] */;
  %25 = cast(meta[relay.Constant][1] /* ty=Tensor[(78), float32] */, dtype="float32") /* ty=Tensor[(78), float32] */;
  %26 = reshape(%23, newshape=[30]) /* ty=Tensor[(30), float32] */;
  %27 = reshape(%24, newshape=[330]) /* ty=Tensor[(330), float32] */;
  %28 = reshape(%25, newshape=[13, 6]) /* ty=Tensor[(13, 6), float32] */;
  %29 = @func_427(%26, %27, %28) /* ty=(Tensor[(7, 5, 12), float64], Tensor[(7, 5, 12), float32], Tensor[(11, 6, 5), float32], Tensor[(30), float32], Tensor[(330), float32], Tensor[(13, 3, 2), float32], Tensor[(13, 3, 2), float32], Tensor[(11, 6, 5), float32]) */;
  %30 = %22.0;
  %31 = %29.5;
  (%30, %31, %var_2883, %var_2884, meta[relay.Constant][1] /* ty=Tensor[(78), float32] */)
}

def @func_1525(%var_1498: Tensor[(11, 16, 11), int32], %var_1499: Tensor[(11, 16, 11), int32]) -> (Tensor[(11, 16, 11), int32], Tensor[(5, 4, 11), float32], Tensor[(1092), int32], Tensor[(30), float32], Tensor[(330, 1), float32], float32, Tensor[(9, 2, 15), float64]) {
  %32 = cast(%var_1499, dtype="int32") /* ty=Tensor[(11, 16, 11), int32] */;
  %33 = shape_of(%var_1498, dtype="int32") /* ty=Tensor[(3), int32] */;
  %34 = cast(%var_1498, dtype="int32") /* ty=Tensor[(11, 16, 11), int32] */;
  %35 = dyn.reshape(%32, %33, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %36 = cast(meta[relay.Constant][2] /* ty=Tensor[(1092), int32] */, dtype="int32") /* ty=Tensor[(1092), int32] */;
  %37 = cast(meta[relay.Constant][2] /* ty=Tensor[(1092), int32] */, dtype="int32") /* ty=Tensor[(1092), int32] */;
  %38 = cast(meta[relay.Constant][3] /* ty=Tensor[(30), float32] */, dtype="float32") /* ty=Tensor[(30), float32] */;
  %39 = cast(meta[relay.Constant][4] /* ty=Tensor[(330, 1), float32] */, dtype="float32") /* ty=Tensor[(330, 1), float32] */;
  %40 = cast(-5.08427f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %41 = reshape(%36, newshape=[7, 12, 13]) /* ty=Tensor[(7, 12, 13), int32] */;
  %42 = reshape(%37, newshape=[7, 12, 13]) /* ty=Tensor[(7, 12, 13), int32] */;
  %43 = reshape(%38, newshape=[5, 6]) /* ty=Tensor[(5, 6), float32] */;
  %44 = reshape(%39, newshape=[1, 330]) /* ty=Tensor[(1, 330), float32] */;
  %45 = reshape(%40, newshape=[]) /* ty=float32 */;
  %46 = @func_1460(%41, %42, %43, %44, %45) /* ty=(Tensor[(7, 12, 13), int32], Tensor[(11, 6, 5), float32], Tensor[(5, 6), float32], Tensor[(1, 330), float64], Tensor[(9, 9, 14), bool], Tensor[(5, 4, 11), float32], float32, Tensor[(220), float32]) */;
  %47 = @func_722() /* ty=(Tensor[(9, 2, 15), float64],) */;
  %48 = %47.0;
  %49 = cast(%48, dtype="float64") /* ty=Tensor[(9, 2, 15), float64] */;
  %50 = minimum(%34, %35) /* ty=Tensor[(11, 16, 11), int32] */;
  %51 = %46.5;
  %52 = acos(%49) /* ty=Tensor[(9, 2, 15), float64] */;
  (%50, %51, meta[relay.Constant][2] /* ty=Tensor[(1092), int32] */, meta[relay.Constant][3] /* ty=Tensor[(30), float32] */, meta[relay.Constant][4] /* ty=Tensor[(330, 1), float32] */, -5.08427f /* ty=float32 */, %52)
}

def @func_4589() -> (Tensor[(9, 2, 15), float64], Tensor[(9, 2, 15), float64]) {
  %57 = fn () -> (Tensor[(9, 2, 15), float64], Tensor[(9, 2, 15), float64]) {
    %53 = @func_3121() /* ty=(Tensor[(9, 2, 15), float64],) */;
    %54 = @func_3121() /* ty=(Tensor[(9, 2, 15), float64],) */;
    %55 = %53.0;
    %56 = %54.0;
    (%55, %56)
  };
  %57() /* ty=(Tensor[(9, 2, 15), float64], Tensor[(9, 2, 15), float64]) */
}

def @func_4896(%var_4893: Tensor[(3, 16, 3), float32]) -> Tensor[(3, 16, 3), float32] {
  %58 = cast(%var_4893, dtype="float32") /* ty=Tensor[(3, 16, 3), float32] */;
  asin(%58) /* ty=Tensor[(3, 16, 3), float32] */
}

def @func_4781(%var_4762: Tensor[(224), uint8], %var_4776: float32, %var_4777: Tensor[(220), float32]) -> (Tensor[(9, 9, 14), float32], Tensor[(224), uint8], Tensor[(189), float64], Tensor[(224), uint8], Tensor[(9, 9, 14), bool], Tensor[(1, 30), float32], float32, Tensor[(220), float32]) {
  %59 = cast(meta[relay.Constant][5] /* ty=Tensor[(189), float64] */, dtype="float64") /* ty=Tensor[(189), float64] */;
  %60 = cast(%var_4762, dtype="uint8") /* ty=Tensor[(224), uint8] */;
  %61 = reshape(%59, newshape=[7, 9, 3]) /* ty=Tensor[(7, 9, 3), float64] */;
  %62 = reshape(%60, newshape=[224]) /* ty=Tensor[(224), uint8] */;
  %63 = @func_2511(%61, %62) /* ty=(Tensor[(30, 1), float32], Tensor[(224), uint8], Tensor[(14, 78), int32], Tensor[(330), float32], float32, Tensor[(7, 9, 3), float64]) */;
  %64 = cast(meta[relay.Constant][6] /* ty=Tensor[(1, 30), float32] */, dtype="float32") /* ty=Tensor[(1, 30), float32] */;
  %65 = cast(%var_4776, dtype="float32") /* ty=float32 */;
  %66 = cast(%var_4777, dtype="float32") /* ty=Tensor[(220), float32] */;
  %67 = reshape(%64, newshape=[30]) /* ty=Tensor[(30), float32] */;
  %68 = reshape(%65, newshape=[]) /* ty=float32 */;
  %69 = reshape(%66, newshape=[55, 4]) /* ty=Tensor[(55, 4), float32] */;
  %70 = @func_3485(%67, %68, %69) /* ty=(Tensor[(9, 9, 14), bool], Tensor[(9, 9, 14), float64], Tensor[(30), float32], float32, Tensor[(55, 4), float32]) */;
  %71 = @func_277() /* ty=Tensor[(9, 9, 14), float32] */;
  %72 = %63.1;
  %73 = %70.0;
  (%71, %72, meta[relay.Constant][5] /* ty=Tensor[(189), float64] */, %var_4762, %73, meta[relay.Constant][6] /* ty=Tensor[(1, 30), float32] */, %var_4776, %var_4777)
}

def @func_5741(%var_5738: Tensor[(1134), float32], %var_5739: Tensor[(30), float32], %var_5740: Tensor[(330), float32]) -> (Tensor[(3, 16, 3), float32], Tensor[(8, 18), float32], Tensor[(9, 9, 14), bool], Tensor[(1134), float32], Tensor[(11, 6, 5), float32], Tensor[(30), float32], Tensor[(330), float32], Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), bool], Tensor[(26, 3), float32]) {
  %102 = fn (%var_5671: Tensor[(1134), float32], %var_5680: Tensor[(30), float32], %var_5681: Tensor[(330), float32]) -> (Tensor[(3, 16, 3), float32], Tensor[(8, 18), float32], Tensor[(9, 9, 14), bool], Tensor[(1134), float32], Tensor[(11, 6, 5), float32], Tensor[(30), float32], Tensor[(330), float32], Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), bool], Tensor[(26, 3), float32]) {
    %74 = cast(meta[relay.Constant][7] /* ty=Tensor[(8, 18), float32] */, dtype="float32") /* ty=Tensor[(8, 18), float32] */;
    %75 = reshape(%74, newshape=[3, 16, 3]) /* ty=Tensor[(3, 16, 3), float32] */;
    %76 = cast(%var_5671, dtype="float32") /* ty=Tensor[(1134), float32] */;
    %77 = reshape(%76, newshape=[9, 9, 14]) /* ty=Tensor[(9, 9, 14), float32] */;
    %78 = cast(%var_5680, dtype="float32") /* ty=Tensor[(30), float32] */;
    %79 = cast(%var_5681, dtype="float32") /* ty=Tensor[(330), float32] */;
    %80 = reshape(%78, newshape=[1, 6, 5]) /* ty=Tensor[(1, 6, 5), float32] */;
    %81 = reshape(%79, newshape=[11, 6, 5]) /* ty=Tensor[(11, 6, 5), float32] */;
    %82 = @func_264(%80, %81) /* ty=(Tensor[(11, 6, 5), float32],) */;
    %83 = @func_4941() /* ty=Tensor[(9, 2, 15), float64] */;
    %84 = cast(%83, dtype="float32") /* ty=Tensor[(9, 2, 15), float32] */;
    %85 = exp(%84) /* ty=Tensor[(9, 2, 15), float32] */;
    %86 = cast(%83, dtype="uint32") /* ty=Tensor[(9, 2, 15), uint32] */;
    %87 = shape_of(%85, dtype="int32") /* ty=Tensor[(3), int32] */;
    %88 = cast(%85, dtype="uint32") /* ty=Tensor[(9, 2, 15), uint32] */;
    %89 = dyn.reshape(%86, %87, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %90 = add(%88, %89) /* ty=Tensor[(9, 2, 15), uint32] */;
    %91 = cast(%90, dtype="float64") /* ty=Tensor[(9, 2, 15), float64] */;
    %92 = shape_of(%85, dtype="int32") /* ty=Tensor[(3), int32] */;
    %93 = cast(%85, dtype="float64") /* ty=Tensor[(9, 2, 15), float64] */;
    %94 = dyn.reshape(%91, %92, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %95 = @func_353() /* ty=(Tensor[(9, 9, 14), bool],) */;
    %96 = @func_4896(%75) /* ty=Tensor[(3, 16, 3), float32] */;
    %97 = @func_625(%77) /* ty=Tensor[(9, 9, 14), bool] */;
    %98 = %82.0;
    %99 = power(%93, %94) /* ty=Tensor[(9, 2, 15), float64] */;
    %100 = %95.0;
    %101 = @func_3819() /* ty=Tensor[(26, 3), float32] */;
    (%96, meta[relay.Constant][7] /* ty=Tensor[(8, 18), float32] */, %97, %var_5671, %98, %var_5680, %var_5681, %99, %100, %101)
  };
  %102(%var_5738, %var_5739, %var_5740) /* ty=(Tensor[(3, 16, 3), float32], Tensor[(8, 18), float32], Tensor[(9, 9, 14), bool], Tensor[(1134), float32], Tensor[(11, 6, 5), float32], Tensor[(30), float32], Tensor[(330), float32], Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), bool], Tensor[(26, 3), float32]) */
}

def @func_5229(%var_5227: Tensor[(5, 9, 4), float32]) -> Tensor[(5, 9, 4), float32] {
  @func_5226(%var_5227) /* ty=Tensor[(5, 9, 4), float32] */
}

def @func_2076(%var_2038: Tensor[(9, 9, 14), bool]) -> (Tensor[(9, 9, 14), float32], Tensor[(9, 2, 15), float64]) {
  %103 = @func_1326() /* ty=(Tensor[(9, 9, 14), bool],) */;
  %104 = %103.0;
  %105 = cast(%var_2038, dtype="float32") /* ty=Tensor[(9, 9, 14), float32] */;
  %106 = shape_of(%104, dtype="int32") /* ty=Tensor[(3), int32] */;
  %107 = cast(%104, dtype="float32") /* ty=Tensor[(9, 9, 14), float32] */;
  %108 = dyn.reshape(%105, %106, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %109 = @func_1152() /* ty=(Tensor[(9, 2, 15), float64],) */;
  %110 = mod(%107, %108) /* ty=Tensor[(9, 9, 14), float32] */;
  %111 = %109.0;
  (%110, %111)
}

def @func_3608(%var_3606: Tensor[(12, 9, 16), float32]) -> (Tensor[(12, 9, 16), float32],) {
  @func_3605(%var_3606) /* ty=(Tensor[(12, 9, 16), float32],) */
}

def @func_2827() -> Tensor[(9, 2, 15), float64] {
  @func_2825() /* ty=Tensor[(9, 2, 15), float64] */
}

def @func_5063(%var_5061: Tensor[(14, 1, 10), uint8], %var_5062: Tensor[(14, 9, 10), uint8]) -> (Tensor[(14, 9, 10), uint8],) {
  %115 = fn (%var_5038: Tensor[(14, 1, 10), uint8], %var_5039: Tensor[(14, 9, 10), uint8]) -> (Tensor[(14, 9, 10), uint8],) {
    %112 = cast(%var_5038, dtype="uint8") /* ty=Tensor[(14, 1, 10), uint8] */;
    %113 = cast(%var_5039, dtype="uint8") /* ty=Tensor[(14, 9, 10), uint8] */;
    %114 = minimum(%112, %113) /* ty=Tensor[(14, 9, 10), uint8] */;
    (%114,)
  };
  %115(%var_5061, %var_5062) /* ty=(Tensor[(14, 9, 10), uint8],) */
}

def @func_2135() -> Tensor[(9, 9, 14), bool] {
  %116 = @func_353() /* ty=(Tensor[(9, 9, 14), bool],) */;
  %116.0
}

def @func_5745() -> Tensor[(9, 9, 14), bool] {
  @func_4354() /* ty=Tensor[(9, 9, 14), bool] */
}

def @func_4145() -> (Tensor[(9, 9, 14), bool], Tensor[(9, 2, 15), float64]) {
  %121 = fn () -> (Tensor[(9, 9, 14), bool], Tensor[(9, 2, 15), float64]) {
    %117 = @func_1480() /* ty=(Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), bool], Tensor[(3, 378), bool]) */;
    %118 = @func_3701() /* ty=(Tensor[(9, 2, 15), float64],) */;
    %119 = %117.1;
    %120 = %118.0;
    (%119, %120)
  };
  %121() /* ty=(Tensor[(9, 9, 14), bool], Tensor[(9, 2, 15), float64]) */
}

def @func_5747() -> Tensor[(9, 9, 14), bool] {
  @func_5745() /* ty=Tensor[(9, 9, 14), bool] */
}

def @func_3511(%var_3509: Tensor[(1, 1, 1), float32]) -> (Tensor[(16, 11, 12), float32], Tensor[(9, 9, 14), bool], Tensor[(78), float32]) {
  @func_3508(%var_3509) /* ty=(Tensor[(16, 11, 12), float32], Tensor[(9, 9, 14), bool], Tensor[(78), float32]) */
}

def @func_4665(%var_4632: Tensor[(1134), bool], %var_4635: Tensor[(1134), bool]) -> (Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), float32], Tensor[(1134), uint8]) {
  %122 = @func_3701() /* ty=(Tensor[(9, 2, 15), float64],) */;
  %123 = cast(%var_4632, dtype="bool") /* ty=Tensor[(1134), bool] */;
  %124 = reshape(%123, newshape=[9, 9, 14]) /* ty=Tensor[(9, 9, 14), bool] */;
  %125 = @func_3008(%124) /* ty=(Tensor[(9, 9, 14), float32],) */;
  %126 = cast(%var_4635, dtype="uint8") /* ty=Tensor[(1134), uint8] */;
  %127 = shape_of(%var_4632, dtype="int32") /* ty=Tensor[(1), int32] */;
  %128 = cast(%var_4632, dtype="uint8") /* ty=Tensor[(1134), uint8] */;
  %129 = dyn.reshape(%126, %127, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %130 = %122.0;
  %131 = %125.0;
  %132 = maximum(%128, %129) /* ty=Tensor[(1134), uint8] */;
  (%130, %131, %132)
}

def @func_1771() -> (Tensor[(9, 9, 14), float32],) {
  %134 = fn () -> (Tensor[(9, 9, 14), float32],) {
    %133 = @func_277() /* ty=Tensor[(9, 9, 14), float32] */;
    (%133,)
  };
  %134() /* ty=(Tensor[(9, 9, 14), float32],) */
}

def @func_3011(%var_3009: Tensor[(9, 9, 14), bool]) -> (Tensor[(9, 9, 14), float32],) {
  @func_3008(%var_3009) /* ty=(Tensor[(9, 9, 14), float32],) */
}

def @func_5493() -> (Tensor[(9, 9, 14), bool],) {
  %137 = fn () -> (Tensor[(9, 9, 14), bool],) {
    %135 = @func_3592() /* ty=(Tensor[(9, 9, 14), bool], Tensor[(9, 2, 15), float32], Tensor[(42, 4), uint8], Tensor[(42, 4), bool]) */;
    %136 = %135.0;
    (%136,)
  };
  %137() /* ty=(Tensor[(9, 9, 14), bool],) */
}

def @func_2322() -> Tensor[(9, 2, 15), uint8] {
  @func_2320() /* ty=Tensor[(9, 2, 15), uint8] */
}

def @func_2799(%var_2798: bool) -> (Tensor[(9, 9, 14), bool], Tensor[(30), float32], bool, Tensor[(220), float32], Tensor[(9, 9, 14), float32]) {
  %154 = fn (%var_2789: bool) -> (Tensor[(9, 9, 14), bool], Tensor[(30), float32], bool, Tensor[(220), float32], Tensor[(9, 9, 14), float32]) {
    %138 = @func_2158() /* ty=Tensor[(9, 9, 14), bool] */;
    %139 = cast(meta[relay.Constant][8] /* ty=Tensor[(9, 9, 14), bool] */, dtype="bool") /* ty=Tensor[(9, 9, 14), bool] */;
    %140 = shape_of(%138, dtype="int32") /* ty=Tensor[(3), int32] */;
    %141 = cast(%138, dtype="bool") /* ty=Tensor[(9, 9, 14), bool] */;
    %142 = dyn.reshape(%139, %140, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %143 = cast(%var_2789, dtype="bool") /* ty=bool */;
    %144 = cast(meta[relay.Constant][8] /* ty=Tensor[(9, 9, 14), bool] */, dtype="float32") /* ty=Tensor[(9, 9, 14), float32] */;
    %145 = cast(meta[relay.Constant][9] /* ty=Tensor[(220), float32] */, dtype="float32") /* ty=Tensor[(220), float32] */;
    %146 = reshape(%143, newshape=[]) /* ty=bool */;
    %147 = reshape(%144, newshape=[1134, 1]) /* ty=Tensor[(1134, 1), float32] */;
    %148 = reshape(%145, newshape=[220]) /* ty=Tensor[(220), float32] */;
    %149 = @func_1075(%146, %147, %148) /* ty=(Tensor[(6, 4, 12), bool], Tensor[(11, 6, 5), float32], Tensor[(10, 3), float32], Tensor[(330), float32], Tensor[(30), float32], Tensor[(1134, 220), float32]) */;
    %150 = @func_2648() /* ty=(Tensor[(9, 9, 14), float32],) */;
    %151 = logical_and(%141, %142) /* ty=Tensor[(9, 9, 14), bool] */;
    %152 = %149.4;
    %153 = %150.0;
    (%151, %152, %var_2789, meta[relay.Constant][9] /* ty=Tensor[(220), float32] */, %153)
  };
  %154(%var_2798) /* ty=(Tensor[(9, 9, 14), bool], Tensor[(30), float32], bool, Tensor[(220), float32], Tensor[(9, 9, 14), float32]) */
}

def @func_2875(%var_2872: Tensor[(3, 14), float32]) -> Tensor[(3, 14), float32] {
  %155 = cast(%var_2872, dtype="float32") /* ty=Tensor[(3, 14), float32] */;
  acosh(%155) /* ty=Tensor[(3, 14), float32] */
}

def @func_2862() -> (Tensor[(13, 3, 2), float32],) {
  @func_2860() /* ty=(Tensor[(13, 3, 2), float32],) */
}

def @func_2588(%var_2587: Tensor[(330), float32]) -> (Tensor[(9, 9, 14), bool], Tensor[(11, 6, 5), float32], Tensor[(30, 1), float32], Tensor[(330), float32]) {
  %164 = fn (%var_2584: Tensor[(330), float32]) -> (Tensor[(9, 9, 14), bool], Tensor[(11, 6, 5), float32], Tensor[(30, 1), float32], Tensor[(330), float32]) {
    %156 = @func_353() /* ty=(Tensor[(9, 9, 14), bool],) */;
    %157 = cast(meta[relay.Constant][10] /* ty=Tensor[(30, 1), float32] */, dtype="float32") /* ty=Tensor[(30, 1), float32] */;
    %158 = cast(%var_2584, dtype="float32") /* ty=Tensor[(330), float32] */;
    %159 = reshape(%157, newshape=[1, 6, 5]) /* ty=Tensor[(1, 6, 5), float32] */;
    %160 = reshape(%158, newshape=[11, 6, 5]) /* ty=Tensor[(11, 6, 5), float32] */;
    %161 = @func_264(%159, %160) /* ty=(Tensor[(11, 6, 5), float32],) */;
    %162 = %156.0;
    %163 = %161.0;
    (%162, %163, meta[relay.Constant][10] /* ty=Tensor[(30, 1), float32] */, %var_2584)
  };
  %164(%var_2587) /* ty=(Tensor[(9, 9, 14), bool], Tensor[(11, 6, 5), float32], Tensor[(30, 1), float32], Tensor[(330), float32]) */
}

def @func_4516(%var_4514: Tensor[(4, 2, 4), uint64]) -> Tensor[(4, 2, 4), uint64] {
  @func_4513(%var_4514) /* ty=Tensor[(4, 2, 4), uint64] */
}

def @func_4669(%var_4667: Tensor[(1134), bool], %var_4668: Tensor[(1134), bool]) -> (Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), float32], Tensor[(1134), uint8]) {
  @func_4665(%var_4667, %var_4668) /* ty=(Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), float32], Tensor[(1134), uint8]) */
}

def @func_5226(%var_5223: Tensor[(5, 9, 4), float32]) -> Tensor[(5, 9, 4), float32] {
  %165 = cast(%var_5223, dtype="float32") /* ty=Tensor[(5, 9, 4), float32] */;
  asinh(%165) /* ty=Tensor[(5, 9, 4), float32] */
}

def @func_1481() -> (Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), bool], Tensor[(3, 378), bool]) {
  %171 = fn () -> (Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), bool], Tensor[(3, 378), bool]) {
    %166 = cast(meta[relay.Constant][11] /* ty=Tensor[(3, 378), bool] */, dtype="bool") /* ty=Tensor[(3, 378), bool] */;
    %167 = reshape(%166, newshape=[1134]) /* ty=Tensor[(1134), bool] */;
    %168 = @func_986(%167) /* ty=(Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), bool]) */;
    %169 = @func_1133() /* ty=Tensor[(9, 2, 15), float64] */;
    %170 = %168.1;
    (%169, %170, meta[relay.Constant][11] /* ty=Tensor[(3, 378), bool] */)
  };
  %171() /* ty=(Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), bool], Tensor[(3, 378), bool]) */
}

def @func_1328() -> (Tensor[(9, 9, 14), bool],) {
  @func_1326() /* ty=(Tensor[(9, 9, 14), bool],) */
}

def @func_4234(%var_4231: Tensor[(12, 11), float32], %var_4232: Tensor[(30), float32], %var_4233: bool) -> (Tensor[(12, 11), float32], Tensor[(11, 6, 5), float32], Tensor[(30), float32], Tensor[(5, 66), float32], Tensor[(220), float32], bool) {
  @func_4229(%var_4231, %var_4232, %var_4233) /* ty=(Tensor[(12, 11), float32], Tensor[(11, 6, 5), float32], Tensor[(30), float32], Tensor[(5, 66), float32], Tensor[(220), float32], bool) */
}

def @func_4355() -> Tensor[(9, 9, 14), bool] {
  %173 = fn () -> Tensor[(9, 9, 14), bool] {
    %172 = @func_2856() /* ty=(Tensor[(9, 9, 14), bool], Tensor[(26, 3), float32], Tensor[(13, 3, 2), float32]) */;
    %172.0
  };
  %173() /* ty=Tensor[(9, 9, 14), bool] */
}

def @func_989(%var_987: Tensor[(1134), bool]) -> (Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), bool]) {
  @func_986(%var_987) /* ty=(Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), bool]) */
}

def @func_3085(%var_3082: Tensor[(1092), int32], %var_3083: Tensor[(30), float32], %var_3084: float32) -> (Tensor[(11, 2, 15), float32], Tensor[(5, 6), float32], Tensor[(1092), int32], Tensor[(30), float32], float32) {
  @func_3080(%var_3082, %var_3083, %var_3084) /* ty=(Tensor[(11, 2, 15), float32], Tensor[(5, 6), float32], Tensor[(1092), int32], Tensor[(30), float32], float32) */
}

def @func_78(%var_76: Tensor[(13, 3, 2), float32]) -> (Tensor[(13, 3, 2), float32],) {
  @func_75(%var_76) /* ty=(Tensor[(13, 3, 2), float32],) */
}

def @func_4479() -> (Tensor[(26, 3), int32],) {
  %174 = @func_3819() /* ty=Tensor[(26, 3), float32] */;
  %175 = cast(meta[relay.Constant][12] /* ty=Tensor[(26, 3), float32] */, dtype="int32") /* ty=Tensor[(26, 3), int32] */;
  %176 = shape_of(%174, dtype="int32") /* ty=Tensor[(2), int32] */;
  %177 = cast(%174, dtype="int32") /* ty=Tensor[(26, 3), int32] */;
  %178 = dyn.reshape(%175, %176, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %179 = minimum(%177, %178) /* ty=Tensor[(26, 3), int32] */;
  (%179,)
}

def @func_2229(%var_2224: Tensor[(7, 2, 16), uint8], %var_2225: Tensor[(7, 2, 16), uint8], %var_2226: Tensor[(546, 2), int32], %var_2227: Tensor[(330, 1), float32], %var_2228: float32) -> (Tensor[(7, 2, 16), uint8], Tensor[(5, 6), float32], Tensor[(546, 2), int32], Tensor[(30, 1), float32], Tensor[(330, 1), float32], float32, Tensor[(5, 4, 11), float32], Tensor[(220, 1), float32]) {
  @func_2222(%var_2224, %var_2225, %var_2226, %var_2227, %var_2228) /* ty=(Tensor[(7, 2, 16), uint8], Tensor[(5, 6), float32], Tensor[(546, 2), int32], Tensor[(30, 1), float32], Tensor[(330, 1), float32], float32, Tensor[(5, 4, 11), float32], Tensor[(220, 1), float32]) */
}

def @func_1955(%var_1949: Tensor[(18, 6), int8], %var_1950: Tensor[(1296), int8], %var_1951: Tensor[(1134), float32], %var_1952: Tensor[(768), int64], %var_1953: Tensor[(1296), int8], %var_1954: Tensor[(18, 6), int8]) -> (Tensor[(9, 2, 15), float64], Tensor[(9, 2, 15), float64], Tensor[(1134), float32], Tensor[(768), int64], Tensor[(9, 9, 14), bool], Tensor[(18, 6), float64], Tensor[(9, 9, 14), float64], Tensor[(1296), bool], Tensor[(9, 9, 14), bool]) {
  %219 = fn (%var_1855: Tensor[(18, 6), int8], %var_1856: Tensor[(1296), int8], %var_1857: Tensor[(1134), float32], %var_1858: Tensor[(768), int64], %var_1883: Tensor[(1296), int8], %var_1910: Tensor[(18, 6), int8]) -> (Tensor[(9, 2, 15), float64], Tensor[(9, 2, 15), float64], Tensor[(1134), float32], Tensor[(768), int64], Tensor[(9, 9, 14), bool], Tensor[(18, 6), float64], Tensor[(9, 9, 14), float64], Tensor[(1296), bool], Tensor[(9, 9, 14), bool]) {
    %180 = @func_1152() /* ty=(Tensor[(9, 2, 15), float64],) */;
    %181 = @func_1152() /* ty=(Tensor[(9, 2, 15), float64],) */;
    %182 = cast(%var_1855, dtype="int8") /* ty=Tensor[(18, 6), int8] */;
    %183 = cast(%var_1856, dtype="int8") /* ty=Tensor[(1296), int8] */;
    %184 = cast(%var_1857, dtype="float32") /* ty=Tensor[(1134), float32] */;
    %185 = cast(%var_1858, dtype="int64") /* ty=Tensor[(768), int64] */;
    %186 = cast(%var_1857, dtype="float64") /* ty=Tensor[(1134), float64] */;
    %187 = reshape(%182, newshape=[9, 12, 1]) /* ty=Tensor[(9, 12, 1), int8] */;
    %188 = reshape(%183, newshape=[9, 12, 12]) /* ty=Tensor[(9, 12, 12), int8] */;
    %189 = reshape(%184, newshape=[27, 42]) /* ty=Tensor[(27, 42), float32] */;
    %190 = reshape(%185, newshape=[768]) /* ty=Tensor[(768), int64] */;
    %191 = reshape(%186, newshape=[27, 42]) /* ty=Tensor[(27, 42), float64] */;
    %192 = @func_1303(%187, %188, %189, %190, %191) /* ty=(Tensor[(9, 12, 12), int8], bool, Tensor[(220), float32], Tensor[(9, 9, 14), bool], Tensor[(9, 12, 330), bool], Tensor[(9, 9, 14), bool], Tensor[(768), int64], Tensor[(9, 9, 14), bool], Tensor[(12, 4, 16), bool], Tensor[(27, 42), uint32], Tensor[(9, 9, 14), float32]) */;
    %193 = %192.5;
    %194 = cast(%193, dtype="bool") /* ty=Tensor[(9, 9, 14), bool] */;
    %195 = reshape(%194, newshape=[27, 42]) /* ty=Tensor[(27, 42), bool] */;
    %196 = @func_1710(%195) /* ty=(Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), bool], Tensor[(27, 42), bool]) */;
    %197 = cast(%var_1910, dtype="float64") /* ty=Tensor[(18, 6), float64] */;
    %198 = shape_of(%var_1855, dtype="int32") /* ty=Tensor[(2), int32] */;
    %199 = cast(%var_1855, dtype="float64") /* ty=Tensor[(18, 6), float64] */;
    %200 = dyn.reshape(%197, %198, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %201 = cast(%193, dtype="float64") /* ty=Tensor[(9, 9, 14), float64] */;
    %202 = cast(%var_1883, dtype="uint32") /* ty=Tensor[(1296), uint32] */;
    %203 = shape_of(%var_1856, dtype="int32") /* ty=Tensor[(1), int32] */;
    %204 = cast(%var_1856, dtype="uint32") /* ty=Tensor[(1296), uint32] */;
    %205 = dyn.reshape(%202, %203, newshape=[]) /* ty=Tensor[(?), uint32] */;
    %206 = right_shift(%204, %205) /* ty=Tensor[(1296), uint32] */;
    %207 = cast(%206, dtype="bool") /* ty=Tensor[(1296), bool] */;
    %208 = shape_of(%var_1856, dtype="int32") /* ty=Tensor[(1), int32] */;
    %209 = cast(%var_1856, dtype="bool") /* ty=Tensor[(1296), bool] */;
    %210 = dyn.reshape(%207, %208, newshape=[]) /* ty=Tensor[(?), bool] */;
    %211 = @func_1326() /* ty=(Tensor[(9, 9, 14), bool],) */;
    %212 = %180.0;
    %213 = %181.0;
    %214 = %196.1;
    %215 = divide(%199, %200) /* ty=Tensor[(18, 6), float64] */;
    %216 = acosh(%201) /* ty=Tensor[(9, 9, 14), float64] */;
    %217 = logical_and(%209, %210) /* ty=Tensor[(1296), bool] */;
    %218 = %211.0;
    (%212, %213, %var_1857, %var_1858, %214, %215, %216, %217, %218)
  };
  %219(%var_1949, %var_1950, %var_1951, %var_1952, %var_1953, %var_1954) /* ty=(Tensor[(9, 2, 15), float64], Tensor[(9, 2, 15), float64], Tensor[(1134), float32], Tensor[(768), int64], Tensor[(9, 9, 14), bool], Tensor[(18, 6), float64], Tensor[(9, 9, 14), float64], Tensor[(1296), bool], Tensor[(9, 9, 14), bool]) */
}

def @func_2421(%var_2405: bool, %var_2406: Tensor[(220), float32]) -> (Tensor[(9, 9, 14), float32], Tensor[(30), float32], bool, Tensor[(220), float32], Tensor[(9, 9, 14), bool]) {
  %220 = @func_2158() /* ty=Tensor[(9, 9, 14), bool] */;
  %221 = cast(%220, dtype="float32") /* ty=Tensor[(9, 9, 14), float32] */;
  %222 = cast(%var_2405, dtype="bool") /* ty=bool */;
  %223 = cast(%220, dtype="float32") /* ty=Tensor[(9, 9, 14), float32] */;
  %224 = cast(%var_2406, dtype="float32") /* ty=Tensor[(220), float32] */;
  %225 = reshape(%222, newshape=[]) /* ty=bool */;
  %226 = reshape(%223, newshape=[1134, 1]) /* ty=Tensor[(1134, 1), float32] */;
  %227 = reshape(%224, newshape=[220]) /* ty=Tensor[(220), float32] */;
  %228 = @func_1075(%225, %226, %227) /* ty=(Tensor[(6, 4, 12), bool], Tensor[(11, 6, 5), float32], Tensor[(10, 3), float32], Tensor[(330), float32], Tensor[(30), float32], Tensor[(1134, 220), float32]) */;
  %229 = @func_511() /* ty=(Tensor[(9, 9, 14), bool],) */;
  %230 = erf(%221) /* ty=Tensor[(9, 9, 14), float32] */;
  %231 = %228.4;
  %232 = %229.0;
  (%230, %231, %var_2405, %var_2406, %232)
}

def @func_3008(%var_2994: Tensor[(9, 9, 14), bool]) -> (Tensor[(9, 9, 14), float32],) {
  %233 = @func_2612() /* ty=Tensor[(9, 9, 14), bool] */;
  %234 = cast(%var_2994, dtype="int32") /* ty=Tensor[(9, 9, 14), int32] */;
  %235 = shape_of(%233, dtype="int32") /* ty=Tensor[(3), int32] */;
  %236 = cast(%233, dtype="int32") /* ty=Tensor[(9, 9, 14), int32] */;
  %237 = dyn.reshape(%234, %235, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %238 = logical_xor(%236, %237) /* ty=Tensor[(9, 9, 14), int32] */;
  %239 = cast(%238, dtype="float32") /* ty=Tensor[(9, 9, 14), float32] */;
  %240 = asinh(%239) /* ty=Tensor[(9, 9, 14), float32] */;
  (%240,)
}

def @func_1596() -> Tensor[(9, 2, 15), float64] {
  @func_1133() /* ty=Tensor[(9, 2, 15), float64] */
}

def @func_2320() -> Tensor[(9, 2, 15), uint8] {
  %241 = @func_1152() /* ty=(Tensor[(9, 2, 15), float64],) */;
  %242 = %241.0;
  %243 = cast(meta[relay.Constant][13] /* ty=Tensor[(9, 2, 15), float64] */, dtype="uint8") /* ty=Tensor[(9, 2, 15), uint8] */;
  %244 = shape_of(%242, dtype="int32") /* ty=Tensor[(3), int32] */;
  %245 = cast(%242, dtype="uint8") /* ty=Tensor[(9, 2, 15), uint8] */;
  %246 = dyn.reshape(%243, %244, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  minimum(%245, %246) /* ty=Tensor[(9, 2, 15), uint8] */
}

def @func_2614() -> Tensor[(9, 9, 14), bool] {
  @func_2612() /* ty=Tensor[(9, 9, 14), bool] */
}

def @func_5613(%var_5610: Tensor[(1936), int32], %var_5611: float32, %var_5612: Tensor[(110, 2), float32]) -> (Tensor[(9, 9, 14), float32], Tensor[(9, 2, 15), float64], Tensor[(1936), int32], Tensor[(5, 4, 11), float32], float32, Tensor[(110, 2), float64], Tensor[(110, 2), float64]) {
  @func_5608(%var_5610, %var_5611, %var_5612) /* ty=(Tensor[(9, 9, 14), float32], Tensor[(9, 2, 15), float64], Tensor[(1936), int32], Tensor[(5, 4, 11), float32], float32, Tensor[(110, 2), float64], Tensor[(110, 2), float64]) */
}

def @func_2650() -> (Tensor[(9, 9, 14), float32],) {
  @func_2648() /* ty=(Tensor[(9, 9, 14), float32],) */
}

def @func_3489(%var_3486: Tensor[(30), float32], %var_3487: float32, %var_3488: Tensor[(55, 4), float32]) -> (Tensor[(9, 9, 14), bool], Tensor[(9, 9, 14), float64], Tensor[(30), float32], float32, Tensor[(55, 4), float32]) {
  %259 = fn (%var_3481: Tensor[(30), float32], %var_3482: float32, %var_3483: Tensor[(55, 4), float32]) -> (Tensor[(9, 9, 14), bool], Tensor[(9, 9, 14), float64], Tensor[(30), float32], float32, Tensor[(55, 4), float32]) {
    %247 = @func_353() /* ty=(Tensor[(9, 9, 14), bool],) */;
    %248 = %247.0;
    %249 = cast(%248, dtype="float32") /* ty=Tensor[(9, 9, 14), float32] */;
    %250 = cast(%var_3481, dtype="float32") /* ty=Tensor[(30), float32] */;
    %251 = cast(%var_3482, dtype="float32") /* ty=float32 */;
    %252 = cast(%var_3483, dtype="float32") /* ty=Tensor[(55, 4), float32] */;
    %253 = reshape(%249, newshape=[9, 9, 14]) /* ty=Tensor[(9, 9, 14), float32] */;
    %254 = reshape(%250, newshape=[30]) /* ty=Tensor[(30), float32] */;
    %255 = reshape(%251, newshape=[]) /* ty=float32 */;
    %256 = reshape(%252, newshape=[220]) /* ty=Tensor[(220), float32] */;
    %257 = @func_876(%253, %254, %255, %256) /* ty=(Tensor[(9, 9, 14), float64], Tensor[(9, 9, 14), bool], Tensor[(13, 3, 2), float32], Tensor[(30), float32], Tensor[(55, 6), float32], Tensor[(1, 78), float32], Tensor[(5, 4, 11), float32], float32, Tensor[(220), float32], Tensor[(9, 9, 14), bool], Tensor[(9, 2, 15), float64]) */;
    %258 = %257.0;
    (%248, %258, %var_3481, %var_3482, %var_3483)
  };
  %259(%var_3486, %var_3487, %var_3488) /* ty=(Tensor[(9, 9, 14), bool], Tensor[(9, 9, 14), float64], Tensor[(30), float32], float32, Tensor[(55, 4), float32]) */
}

def @main() -> (Tensor[(9, 9, 14), bool], Tensor[(9, 9, 14), bool], Tensor[(9, 9, 14), float64]) {
  %260 = @func_2158() /* ty=Tensor[(9, 9, 14), bool] */;
  %261 = cast(%260, dtype="bool") /* ty=Tensor[(9, 9, 14), bool] */;
  %262 = reshape(%261, newshape=[9, 9, 14]) /* ty=Tensor[(9, 9, 14), bool] */;
  %263 = @func_2079(%262) /* ty=(Tensor[(9, 9, 14), float32], Tensor[(9, 2, 15), float64]) */;
  %264 = %263.0;
  %265 = cast(%264, dtype="float64") /* ty=Tensor[(9, 9, 14), float64] */;
  %266 = @func_2158() /* ty=Tensor[(9, 9, 14), bool] */;
  %267 = @func_2135() /* ty=Tensor[(9, 9, 14), bool] */;
  %268 = rsqrt(%265) /* ty=Tensor[(9, 9, 14), float64] */;
  (%266, %267, %268)
}

def @func_2648() -> (Tensor[(9, 9, 14), float32],) {
  %269 = @func_277() /* ty=Tensor[(9, 9, 14), float32] */;
  %270 = cast(%269, dtype="float32") /* ty=Tensor[(9, 9, 14), float32] */;
  %271 = atan(%270) /* ty=Tensor[(9, 9, 14), float32] */;
  (%271,)
}

def @func_722() -> (Tensor[(9, 2, 15), float64],) {
  %272 = cast(meta[relay.Constant][14] /* ty=Tensor[(9, 2, 15), float64] */, dtype="float64") /* ty=Tensor[(9, 2, 15), float64] */;
  %273 = log10(%272) /* ty=Tensor[(9, 2, 15), float64] */;
  (%273,)
}

def @func_3113() -> (Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), float32]) {
  %279 = fn () -> (Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), float32]) {
    %274 = @func_1152() /* ty=(Tensor[(9, 2, 15), float64],) */;
    %275 = @func_2612() /* ty=Tensor[(9, 9, 14), bool] */;
    %276 = cast(%275, dtype="float32") /* ty=Tensor[(9, 9, 14), float32] */;
    %277 = %274.0;
    %278 = sqrt(%276) /* ty=Tensor[(9, 9, 14), float32] */;
    (%277, %278)
  };
  %279() /* ty=(Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), float32]) */
}

def @func_1657(%var_1655: Tensor[(30), float32], %var_1656: Tensor[(330), float32]) -> (Tensor[(9, 9, 14), bool], Tensor[(11, 6, 5), float32], Tensor[(330), float32], Tensor[(30), float32]) {
  %290 = fn (%var_1616: Tensor[(30), float32], %var_1617: Tensor[(330), float32]) -> (Tensor[(9, 9, 14), bool], Tensor[(11, 6, 5), float32], Tensor[(330), float32], Tensor[(30), float32]) {
    %280 = @func_511() /* ty=(Tensor[(9, 9, 14), bool],) */;
    %281 = cast(%var_1616, dtype="float32") /* ty=Tensor[(30), float32] */;
    %282 = cast(%var_1617, dtype="float32") /* ty=Tensor[(330), float32] */;
    %283 = reshape(%281, newshape=[1, 6, 5]) /* ty=Tensor[(1, 6, 5), float32] */;
    %284 = reshape(%282, newshape=[11, 6, 5]) /* ty=Tensor[(11, 6, 5), float32] */;
    %285 = @func_264(%283, %284) /* ty=(Tensor[(11, 6, 5), float32],) */;
    %286 = cast(%var_1616, dtype="float32") /* ty=Tensor[(30), float32] */;
    %287 = %280.0;
    %288 = %285.0;
    %289 = log10(%286) /* ty=Tensor[(30), float32] */;
    (%287, %288, %var_1617, %289)
  };
  %290(%var_1655, %var_1656) /* ty=(Tensor[(9, 9, 14), bool], Tensor[(11, 6, 5), float32], Tensor[(330), float32], Tensor[(30), float32]) */
}

def @func_5369(%var_5355: Tensor[(2, 13, 1), int16], %var_5356: Tensor[(2, 13, 3), int16]) -> (Tensor[(2, 13, 3), bool], Tensor[(9, 2, 15), float64], Tensor[(768), int64]) {
  %291 = cast(%var_5355, dtype="bool") /* ty=Tensor[(2, 13, 1), bool] */;
  %292 = cast(%var_5356, dtype="bool") /* ty=Tensor[(2, 13, 3), bool] */;
  %293 = cast(meta[relay.Constant][15] /* ty=Tensor[(768), int64] */, dtype="int64") /* ty=Tensor[(768), int64] */;
  %294 = cast(meta[relay.Constant][15] /* ty=Tensor[(768), int64] */, dtype="float64") /* ty=Tensor[(768), float64] */;
  %295 = cast(meta[relay.Constant][15] /* ty=Tensor[(768), int64] */, dtype="float32") /* ty=Tensor[(768), float32] */;
  %296 = reshape(%293, newshape=[2, 384]) /* ty=Tensor[(2, 384), int64] */;
  %297 = reshape(%294, newshape=[2, 384]) /* ty=Tensor[(2, 384), float64] */;
  %298 = reshape(%295, newshape=[2, 384]) /* ty=Tensor[(2, 384), float32] */;
  %299 = @func_5024(%296, %297, %298) /* ty=(Tensor[(9, 9, 14), bool], Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), bool], Tensor[(2, 384), float64], Tensor[(9, 2, 15), float64], Tensor[(9, 2, 15), float64], Tensor[(2, 384), uint64], Tensor[(9, 9, 14), float32]) */;
  %300 = less(%291, %292) /* ty=Tensor[(2, 13, 3), bool] */;
  %301 = %299.1;
  (%300, %301, meta[relay.Constant][15] /* ty=Tensor[(768), int64] */)
}

def @func_2137() -> Tensor[(9, 9, 14), bool] {
  @func_2135() /* ty=Tensor[(9, 9, 14), bool] */
}

def @func_4513(%var_4507: Tensor[(4, 2, 4), uint64]) -> Tensor[(4, 2, 4), uint64] {
  %302 = cast(%var_4507, dtype="uint64") /* ty=Tensor[(4, 2, 4), uint64] */;
  %303 = shape_of(meta[relay.Constant][16] /* ty=Tensor[(4, 2, 4), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %304 = cast(meta[relay.Constant][16] /* ty=Tensor[(4, 2, 4), uint64] */, dtype="uint64") /* ty=Tensor[(4, 2, 4), uint64] */;
  %305 = dyn.reshape(%302, %303, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  right_shift(%304, %305) /* ty=Tensor[(4, 2, 4), uint64] */
}

def @func_1529(%var_1527: Tensor[(11, 16, 11), int32], %var_1528: Tensor[(11, 16, 11), int32]) -> (Tensor[(11, 16, 11), int32], Tensor[(5, 4, 11), float32], Tensor[(1092), int32], Tensor[(30), float32], Tensor[(330, 1), float32], float32, Tensor[(9, 2, 15), float64]) {
  @func_1525(%var_1527, %var_1528) /* ty=(Tensor[(11, 16, 11), int32], Tensor[(5, 4, 11), float32], Tensor[(1092), int32], Tensor[(30), float32], Tensor[(330, 1), float32], float32, Tensor[(9, 2, 15), float64]) */
}

def @func_4481() -> (Tensor[(26, 3), int32],) {
  @func_4479() /* ty=(Tensor[(26, 3), int32],) */
}

def @func_354() -> (Tensor[(9, 9, 14), bool],) {
  %314 = fn () -> (Tensor[(9, 9, 14), bool],) {
    %306 = @func_277() /* ty=Tensor[(9, 9, 14), float32] */;
    %307 = cast(%306, dtype="float64") /* ty=Tensor[(9, 9, 14), float64] */;
    %308 = sin(%307) /* ty=Tensor[(9, 9, 14), float64] */;
    %309 = cast(%306, dtype="bool") /* ty=Tensor[(9, 9, 14), bool] */;
    %310 = shape_of(%308, dtype="int32") /* ty=Tensor[(3), int32] */;
    %311 = cast(%308, dtype="bool") /* ty=Tensor[(9, 9, 14), bool] */;
    %312 = dyn.reshape(%309, %310, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %313 = not_equal(%311, %312) /* ty=Tensor[(9, 9, 14), bool] */;
    (%313,)
  };
  %314() /* ty=(Tensor[(9, 9, 14), bool],) */
}

def @func_1134() -> Tensor[(9, 2, 15), float64] {
  %316 = fn () -> Tensor[(9, 2, 15), float64] {
    %315 = @func_722() /* ty=(Tensor[(9, 2, 15), float64],) */;
    %315.0
  };
  %316() /* ty=Tensor[(9, 2, 15), float64] */
}

def @func_278() -> Tensor[(9, 9, 14), float32] {
  %318 = fn () -> Tensor[(9, 9, 14), float32] {
    %317 = cast(meta[relay.Constant][17] /* ty=Tensor[(9, 9, 14), float32] */, dtype="float32") /* ty=Tensor[(9, 9, 14), float32] */;
    sigmoid(%317) /* ty=Tensor[(9, 9, 14), float32] */
  };
  %318() /* ty=Tensor[(9, 9, 14), float32] */
}

def @func_4229(%var_4205: Tensor[(12, 11), float32], %var_4214: Tensor[(30), float32], %var_4225: bool) -> (Tensor[(12, 11), float32], Tensor[(11, 6, 5), float32], Tensor[(30), float32], Tensor[(5, 66), float32], Tensor[(220), float32], bool) {
  %319 = cast(%var_4205, dtype="float32") /* ty=Tensor[(12, 11), float32] */;
  %320 = cast(%var_4214, dtype="float32") /* ty=Tensor[(30), float32] */;
  %321 = cast(meta[relay.Constant][18] /* ty=Tensor[(5, 66), float32] */, dtype="float32") /* ty=Tensor[(5, 66), float32] */;
  %322 = reshape(%320, newshape=[1, 6, 5]) /* ty=Tensor[(1, 6, 5), float32] */;
  %323 = reshape(%321, newshape=[11, 6, 5]) /* ty=Tensor[(11, 6, 5), float32] */;
  %324 = @func_264(%322, %323) /* ty=(Tensor[(11, 6, 5), float32],) */;
  %325 = cast(%var_4225, dtype="bool") /* ty=bool */;
  %326 = reshape(%325, newshape=[]) /* ty=bool */;
  %327 = @func_2797(%326) /* ty=(Tensor[(9, 9, 14), bool], Tensor[(30), float32], bool, Tensor[(220), float32], Tensor[(9, 9, 14), float32]) */;
  %328 = exp(%319) /* ty=Tensor[(12, 11), float32] */;
  %329 = %324.0;
  %330 = %327.3;
  (%328, %329, %var_4214, meta[relay.Constant][18] /* ty=Tensor[(5, 66), float32] */, %330, %var_4225)
}

def @func_2612() -> Tensor[(9, 9, 14), bool] {
  %331 = @func_1480() /* ty=(Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), bool], Tensor[(3, 378), bool]) */;
  %331.1
}

def @func_2009(%var_2007: Tensor[(1, 15, 5), float64], %var_2008: Tensor[(3, 15, 5), float64]) -> (Tensor[(3, 15, 5), float64], Tensor[(13, 3, 2), float32], Tensor[(13, 6), float32]) {
  @func_2005(%var_2007, %var_2008) /* ty=(Tensor[(3, 15, 5), float64], Tensor[(13, 3, 2), float32], Tensor[(13, 6), float32]) */
}

def @func_4041(%var_4040: Tensor[(9, 2, 15), float64]) -> (Tensor[(13, 3, 2), float32], Tensor[(9, 2, 15), float32], Tensor[(1936), float32], Tensor[(9, 9, 14), bool]) {
  %353 = fn (%var_4003: Tensor[(9, 2, 15), float64]) -> (Tensor[(13, 3, 2), float32], Tensor[(9, 2, 15), float32], Tensor[(1936), float32], Tensor[(9, 9, 14), bool]) {
    %332 = @func_2860() /* ty=(Tensor[(13, 3, 2), float32],) */;
    %333 = cast(meta[relay.Constant][19] /* ty=Tensor[(1936), int32] */, dtype="int32") /* ty=Tensor[(1936), int32] */;
    %334 = cast(meta[relay.Constant][19] /* ty=Tensor[(1936), int32] */, dtype="int32") /* ty=Tensor[(1936), int32] */;
    %335 = reshape(%333, newshape=[11, 16, 11]) /* ty=Tensor[(11, 16, 11), int32] */;
    %336 = reshape(%334, newshape=[11, 16, 11]) /* ty=Tensor[(11, 16, 11), int32] */;
    %337 = @func_1525(%335, %336) /* ty=(Tensor[(11, 16, 11), int32], Tensor[(5, 4, 11), float32], Tensor[(1092), int32], Tensor[(30), float32], Tensor[(330, 1), float32], float32, Tensor[(9, 2, 15), float64]) */;
    %338 = %337.6;
    %339 = cast(%var_4003, dtype="float32") /* ty=Tensor[(9, 2, 15), float32] */;
    %340 = shape_of(%338, dtype="int32") /* ty=Tensor[(3), int32] */;
    %341 = cast(%338, dtype="float32") /* ty=Tensor[(9, 2, 15), float32] */;
    %342 = dyn.reshape(%339, %340, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %343 = cast(meta[relay.Constant][19] /* ty=Tensor[(1936), int32] */, dtype="float32") /* ty=Tensor[(1936), float32] */;
    %344 = acos(%343) /* ty=Tensor[(1936), float32] */;
    %345 = cast(meta[relay.Constant][19] /* ty=Tensor[(1936), int32] */, dtype="float32") /* ty=Tensor[(1936), float32] */;
    %346 = shape_of(%344, dtype="int32") /* ty=Tensor[(1), int32] */;
    %347 = cast(%344, dtype="float32") /* ty=Tensor[(1936), float32] */;
    %348 = dyn.reshape(%345, %346, newshape=[]) /* ty=Tensor[(?), float32] */;
    %349 = %332.0;
    %350 = floor_divide(%341, %342) /* ty=Tensor[(9, 2, 15), float32] */;
    %351 = multiply(%347, %348) /* ty=Tensor[(1936), float32] */;
    %352 = @func_3779() /* ty=Tensor[(9, 9, 14), bool] */;
    (%349, %350, %351, %352)
  };
  %353(%var_4040) /* ty=(Tensor[(13, 3, 2), float32], Tensor[(9, 2, 15), float32], Tensor[(1936), float32], Tensor[(9, 9, 14), bool]) */
}

def @func_5465(%var_5464: Tensor[(3, 8, 1), float64]) -> (Tensor[(3, 8, 1), float64], Tensor[(8, 14, 16), float32], Tensor[(1792), float32]) {
  %359 = fn (%var_5453: Tensor[(3, 8, 1), float64]) -> (Tensor[(3, 8, 1), float64], Tensor[(8, 14, 16), float32], Tensor[(1792), float32]) {
    %354 = cast(%var_5453, dtype="float64") /* ty=Tensor[(3, 8, 1), float64] */;
    %355 = cast(meta[relay.Constant][20] /* ty=Tensor[(1792), float32] */, dtype="float32") /* ty=Tensor[(1792), float32] */;
    %356 = reshape(%355, newshape=[8, 14, 16]) /* ty=Tensor[(8, 14, 16), float32] */;
    %357 = acos(%354) /* ty=Tensor[(3, 8, 1), float64] */;
    %358 = @func_4293(%356) /* ty=Tensor[(8, 14, 16), float32] */;
    (%357, %358, meta[relay.Constant][20] /* ty=Tensor[(1792), float32] */)
  };
  %359(%var_5464) /* ty=(Tensor[(3, 8, 1), float64], Tensor[(8, 14, 16), float32], Tensor[(1792), float32]) */
}

def @func_5862() -> Tensor[(9, 9, 14), bool] {
  @func_5860() /* ty=Tensor[(9, 9, 14), bool] */
}

def @func_582(%var_580: float32, %var_581: Tensor[(5, 4, 11), float32]) -> Tensor[(5, 4, 11), float32] {
  @func_578(%var_580, %var_581) /* ty=Tensor[(5, 4, 11), float32] */
}

def @func_1389(%var_1388: Tensor[(78), float32]) -> (Tensor[(9, 9, 14), bool], Tensor[(13, 3, 2), bool]) {
  %371 = fn (%var_1373: Tensor[(78), float32]) -> (Tensor[(9, 9, 14), bool], Tensor[(13, 3, 2), bool]) {
    %360 = @func_353() /* ty=(Tensor[(9, 9, 14), bool],) */;
    %361 = cast(%var_1373, dtype="float32") /* ty=Tensor[(78), float32] */;
    %362 = reshape(%361, newshape=[13, 3, 2]) /* ty=Tensor[(13, 3, 2), float32] */;
    %363 = @func_75(%362) /* ty=(Tensor[(13, 3, 2), float32],) */;
    %364 = %363.0;
    %365 = cast(%var_1373, dtype="bool") /* ty=Tensor[(78), bool] */;
    %366 = shape_of(%364, dtype="int32") /* ty=Tensor[(3), int32] */;
    %367 = cast(%364, dtype="bool") /* ty=Tensor[(13, 3, 2), bool] */;
    %368 = dyn.reshape(%365, %366, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %369 = %360.0;
    %370 = logical_and(%367, %368) /* ty=Tensor[(13, 3, 2), bool] */;
    (%369, %370)
  };
  %371(%var_1388) /* ty=(Tensor[(9, 9, 14), bool], Tensor[(13, 3, 2), bool]) */
}

def @func_1153() -> (Tensor[(9, 2, 15), float64],) {
  %373 = fn () -> (Tensor[(9, 2, 15), float64],) {
    %372 = @func_1133() /* ty=Tensor[(9, 2, 15), float64] */;
    (%372,)
  };
  %373() /* ty=(Tensor[(9, 2, 15), float64],) */
}

def @func_3456(%var_3455: Tensor[(768), int64]) -> (Tensor[(9, 9, 14), float32], Tensor[(9, 9, 14), bool], Tensor[(768), int64], Tensor[(9, 9, 14), float32], Tensor[(9, 9, 14), float32]) {
  %385 = fn (%var_3412: Tensor[(768), int64]) -> (Tensor[(9, 9, 14), float32], Tensor[(9, 9, 14), bool], Tensor[(768), int64], Tensor[(9, 9, 14), float32], Tensor[(9, 9, 14), float32]) {
    %374 = @func_1326() /* ty=(Tensor[(9, 9, 14), bool],) */;
    %375 = %374.0;
    %376 = cast(%375, dtype="float32") /* ty=Tensor[(9, 9, 14), float32] */;
    %377 = cast(%var_3412, dtype="int64") /* ty=Tensor[(768), int64] */;
    %378 = reshape(%377, newshape=[12, 4, 16]) /* ty=Tensor[(12, 4, 16), int64] */;
    %379 = @func_1116(%378) /* ty=(Tensor[(12, 4, 16), bool], Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), bool]) */;
    %380 = @func_1770() /* ty=(Tensor[(9, 9, 14), float32],) */;
    %381 = log(%376) /* ty=Tensor[(9, 9, 14), float32] */;
    %382 = %379.2;
    %383 = %380.0;
    %384 = @func_3098() /* ty=Tensor[(9, 9, 14), float32] */;
    (%381, %382, %var_3412, %383, %384)
  };
  %385(%var_3455) /* ty=(Tensor[(9, 9, 14), float32], Tensor[(9, 9, 14), bool], Tensor[(768), int64], Tensor[(9, 9, 14), float32], Tensor[(9, 9, 14), float32]) */
}

def @func_5860() -> Tensor[(9, 9, 14), bool] {
  %386 = @func_4456() /* ty=(Tensor[(9, 9, 14), bool], Tensor[(9, 9, 14), float32]) */;
  %386.0
}

def @func_4458() -> (Tensor[(9, 9, 14), bool], Tensor[(9, 9, 14), float32]) {
  @func_4456() /* ty=(Tensor[(9, 9, 14), bool], Tensor[(9, 9, 14), float32]) */
}

def @func_5608(%var_5541: Tensor[(1936), int32], %var_5577: float32, %var_5578: Tensor[(110, 2), float32]) -> (Tensor[(9, 9, 14), float32], Tensor[(9, 2, 15), float64], Tensor[(1936), int32], Tensor[(5, 4, 11), float32], float32, Tensor[(110, 2), float64], Tensor[(110, 2), float64]) {
  %387 = @func_3725() /* ty=(Tensor[(9, 9, 14), float32],) */;
  %388 = cast(%var_5541, dtype="int32") /* ty=Tensor[(1936), int32] */;
  %389 = cast(%var_5541, dtype="int32") /* ty=Tensor[(1936), int32] */;
  %390 = reshape(%388, newshape=[11, 16, 11]) /* ty=Tensor[(11, 16, 11), int32] */;
  %391 = reshape(%389, newshape=[11, 16, 11]) /* ty=Tensor[(11, 16, 11), int32] */;
  %392 = @func_1525(%390, %391) /* ty=(Tensor[(11, 16, 11), int32], Tensor[(5, 4, 11), float32], Tensor[(1092), int32], Tensor[(30), float32], Tensor[(330, 1), float32], float32, Tensor[(9, 2, 15), float64]) */;
  %393 = cast(%var_5577, dtype="float32") /* ty=float32 */;
  %394 = cast(%var_5578, dtype="float32") /* ty=Tensor[(110, 2), float32] */;
  %395 = reshape(%393, newshape=[]) /* ty=float32 */;
  %396 = reshape(%394, newshape=[5, 4, 11]) /* ty=Tensor[(5, 4, 11), float32] */;
  %397 = cast(%var_5578, dtype="float64") /* ty=Tensor[(110, 2), float64] */;
  %398 = asin(%397) /* ty=Tensor[(110, 2), float64] */;
  %399 = cast(%398, dtype="float64") /* ty=Tensor[(110, 2), float64] */;
  %400 = cast(%398, dtype="float64") /* ty=Tensor[(110, 2), float64] */;
  %401 = %387.0;
  %402 = %392.6;
  %403 = @func_578(%395, %396) /* ty=Tensor[(5, 4, 11), float32] */;
  %404 = atanh(%399) /* ty=Tensor[(110, 2), float64] */;
  %405 = atan(%400) /* ty=Tensor[(110, 2), float64] */;
  (%401, %402, %var_5541, %403, %var_5577, %404, %405)
}

def @func_625(%var_617: Tensor[(9, 9, 14), float32]) -> Tensor[(9, 9, 14), bool] {
  %406 = @func_277() /* ty=Tensor[(9, 9, 14), float32] */;
  %407 = cast(%var_617, dtype="bool") /* ty=Tensor[(9, 9, 14), bool] */;
  %408 = shape_of(%406, dtype="int32") /* ty=Tensor[(3), int32] */;
  %409 = cast(%406, dtype="bool") /* ty=Tensor[(9, 9, 14), bool] */;
  %410 = dyn.reshape(%407, %408, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%409, %410) /* ty=Tensor[(9, 9, 14), bool] */
}

def @func_3656(%var_3633: Tensor[(768), int64]) -> (Tensor[(9, 9, 14), bool], Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), bool], Tensor[(1, 108), int8], Tensor[(1296), int8], Tensor[(768), int64]) {
  %411 = @func_1480() /* ty=(Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), bool], Tensor[(3, 378), bool]) */;
  %412 = cast(meta[relay.Constant][21] /* ty=Tensor[(1, 108), int8] */, dtype="int8") /* ty=Tensor[(1, 108), int8] */;
  %413 = cast(meta[relay.Constant][22] /* ty=Tensor[(1296), int8] */, dtype="int8") /* ty=Tensor[(1296), int8] */;
  %414 = %411.1;
  %415 = cast(%414, dtype="float32") /* ty=Tensor[(9, 9, 14), float32] */;
  %416 = cast(%var_3633, dtype="int64") /* ty=Tensor[(768), int64] */;
  %417 = cast(meta[relay.Constant][22] /* ty=Tensor[(1296), int8] */, dtype="int8") /* ty=Tensor[(1296), int8] */;
  %418 = cast(meta[relay.Constant][21] /* ty=Tensor[(1, 108), int8] */, dtype="int8") /* ty=Tensor[(1, 108), int8] */;
  %419 = reshape(%412, newshape=[18, 6]) /* ty=Tensor[(18, 6), int8] */;
  %420 = reshape(%413, newshape=[1296]) /* ty=Tensor[(1296), int8] */;
  %421 = reshape(%415, newshape=[1134]) /* ty=Tensor[(1134), float32] */;
  %422 = reshape(%416, newshape=[768]) /* ty=Tensor[(768), int64] */;
  %423 = reshape(%417, newshape=[1296]) /* ty=Tensor[(1296), int8] */;
  %424 = reshape(%418, newshape=[18, 6]) /* ty=Tensor[(18, 6), int8] */;
  %425 = @func_1948(%419, %420, %421, %422, %423, %424) /* ty=(Tensor[(9, 2, 15), float64], Tensor[(9, 2, 15), float64], Tensor[(1134), float32], Tensor[(768), int64], Tensor[(9, 9, 14), bool], Tensor[(18, 6), float64], Tensor[(9, 9, 14), float64], Tensor[(1296), bool], Tensor[(9, 9, 14), bool]) */;
  %426 = @func_1596() /* ty=Tensor[(9, 2, 15), float64] */;
  %427 = %425.8;
  (%414, %426, %427, meta[relay.Constant][21] /* ty=Tensor[(1, 108), int8] */, meta[relay.Constant][22] /* ty=Tensor[(1296), int8] */, %var_3633)
}

def @func_2079(%var_2077: Tensor[(9, 9, 14), bool]) -> (Tensor[(9, 9, 14), float32], Tensor[(9, 2, 15), float64]) {
  @func_2076(%var_2077) /* ty=(Tensor[(9, 9, 14), float32], Tensor[(9, 2, 15), float64]) */
}

def @func_3659(%var_3657: Tensor[(768), int64]) -> (Tensor[(9, 9, 14), bool], Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), bool], Tensor[(1, 108), int8], Tensor[(1296), int8], Tensor[(768), int64]) {
  @func_3656(%var_3657) /* ty=(Tensor[(9, 9, 14), bool], Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), bool], Tensor[(1, 108), int8], Tensor[(1296), int8], Tensor[(768), int64]) */
}

def @func_4293(%var_4286: Tensor[(8, 14, 16), float32]) -> Tensor[(8, 14, 16), float32] {
  %428 = cast(%var_4286, dtype="float32") /* ty=Tensor[(8, 14, 16), float32] */;
  %429 = shape_of(meta[relay.Constant][23] /* ty=Tensor[(8, 14, 16), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %430 = cast(meta[relay.Constant][23] /* ty=Tensor[(8, 14, 16), float32] */, dtype="float32") /* ty=Tensor[(8, 14, 16), float32] */;
  %431 = dyn.reshape(%428, %429, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_mod(%430, %431) /* ty=Tensor[(8, 14, 16), float32] */
}

def @func_3593() -> (Tensor[(9, 9, 14), bool], Tensor[(9, 2, 15), float32], Tensor[(42, 4), uint8], Tensor[(42, 4), bool]) {
  %462 = fn () -> (Tensor[(9, 9, 14), bool], Tensor[(9, 2, 15), float32], Tensor[(42, 4), uint8], Tensor[(42, 4), bool]) {
    %432 = @func_1326() /* ty=(Tensor[(9, 9, 14), bool],) */;
    %433 = @func_1596() /* ty=Tensor[(9, 2, 15), float64] */;
    %434 = cast(meta[relay.Constant][24] /* ty=Tensor[(9, 2, 15), float64] */, dtype="float32") /* ty=Tensor[(9, 2, 15), float32] */;
    %435 = shape_of(%433, dtype="int32") /* ty=Tensor[(3), int32] */;
    %436 = cast(%433, dtype="float32") /* ty=Tensor[(9, 2, 15), float32] */;
    %437 = dyn.reshape(%434, %435, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %438 = cast(meta[relay.Constant][25] /* ty=Tensor[(42, 4), bool] */, dtype="bool") /* ty=Tensor[(42, 4), bool] */;
    %439 = cast(meta[relay.Constant][25] /* ty=Tensor[(42, 4), bool] */, dtype="bool") /* ty=Tensor[(42, 4), bool] */;
    %440 = reshape(%438, newshape=[7, 12, 2]) /* ty=Tensor[(7, 12, 2), bool] */;
    %441 = reshape(%439, newshape=[7, 12, 2]) /* ty=Tensor[(7, 12, 2), bool] */;
    %442 = @func_1011(%440, %441) /* ty=Tensor[(7, 12, 2), bool] */;
    %443 = cast(%442, dtype="bool") /* ty=Tensor[(7, 12, 2), bool] */;
    %444 = shape_of(meta[relay.Constant][25] /* ty=Tensor[(42, 4), bool] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %445 = cast(meta[relay.Constant][25] /* ty=Tensor[(42, 4), bool] */, dtype="bool") /* ty=Tensor[(42, 4), bool] */;
    %446 = dyn.reshape(%443, %444, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %447 = logical_and(%445, %446) /* ty=Tensor[(42, 4), bool] */;
    %448 = cast(%447, dtype="float32") /* ty=Tensor[(42, 4), float32] */;
    %449 = log(%448) /* ty=Tensor[(42, 4), float32] */;
    %450 = cast(%447, dtype="uint8") /* ty=Tensor[(42, 4), uint8] */;
    %451 = shape_of(%449, dtype="int32") /* ty=Tensor[(2), int32] */;
    %452 = cast(%449, dtype="uint8") /* ty=Tensor[(42, 4), uint8] */;
    %453 = dyn.reshape(%450, %451, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
    %454 = cast(%449, dtype="bool") /* ty=Tensor[(42, 4), bool] */;
    %455 = shape_of(%447, dtype="int32") /* ty=Tensor[(2), int32] */;
    %456 = cast(%447, dtype="bool") /* ty=Tensor[(42, 4), bool] */;
    %457 = dyn.reshape(%454, %455, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %458 = %432.0;
    %459 = mod(%436, %437) /* ty=Tensor[(9, 2, 15), float32] */;
    %460 = bitwise_xor(%452, %453) /* ty=Tensor[(42, 4), uint8] */;
    %461 = greater(%456, %457) /* ty=Tensor[(42, 4), bool] */;
    (%458, %459, %460, %461)
  };
  %462() /* ty=(Tensor[(9, 9, 14), bool], Tensor[(9, 2, 15), float32], Tensor[(42, 4), uint8], Tensor[(42, 4), bool]) */
}

def @func_4552() -> Tensor[(9, 9, 14), bool] {
  @func_3779() /* ty=Tensor[(9, 9, 14), bool] */
}

def @func_932(%var_931: Tensor[(9, 9, 14), bool]) -> (Tensor[(9, 9, 14), uint16], Tensor[(9, 9, 14), bool]) {
  %472 = fn (%var_920: Tensor[(9, 9, 14), bool]) -> (Tensor[(9, 9, 14), uint16], Tensor[(9, 9, 14), bool]) {
    %463 = @func_511() /* ty=(Tensor[(9, 9, 14), bool],) */;
    %464 = %463.0;
    %465 = cast(%var_920, dtype="uint16") /* ty=Tensor[(9, 9, 14), uint16] */;
    %466 = shape_of(%464, dtype="int32") /* ty=Tensor[(3), int32] */;
    %467 = cast(%464, dtype="uint16") /* ty=Tensor[(9, 9, 14), uint16] */;
    %468 = dyn.reshape(%465, %466, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %469 = @func_511() /* ty=(Tensor[(9, 9, 14), bool],) */;
    %470 = minimum(%467, %468) /* ty=Tensor[(9, 9, 14), uint16] */;
    %471 = %469.0;
    (%470, %471)
  };
  %472(%var_931) /* ty=(Tensor[(9, 9, 14), uint16], Tensor[(9, 9, 14), bool]) */
}

def @func_1466(%var_1461: Tensor[(7, 12, 13), int32], %var_1462: Tensor[(7, 12, 13), int32], %var_1463: Tensor[(5, 6), float32], %var_1464: Tensor[(1, 330), float32], %var_1465: float32) -> (Tensor[(7, 12, 13), int32], Tensor[(11, 6, 5), float32], Tensor[(5, 6), float32], Tensor[(1, 330), float64], Tensor[(9, 9, 14), bool], Tensor[(5, 4, 11), float32], float32, Tensor[(220), float32]) {
  %493 = fn (%var_1413: Tensor[(7, 12, 13), int32], %var_1414: Tensor[(7, 12, 13), int32], %var_1429: Tensor[(5, 6), float32], %var_1430: Tensor[(1, 330), float32], %var_1446: float32) -> (Tensor[(7, 12, 13), int32], Tensor[(11, 6, 5), float32], Tensor[(5, 6), float32], Tensor[(1, 330), float64], Tensor[(9, 9, 14), bool], Tensor[(5, 4, 11), float32], float32, Tensor[(220), float32]) {
    %473 = cast(%var_1414, dtype="int32") /* ty=Tensor[(7, 12, 13), int32] */;
    %474 = shape_of(%var_1413, dtype="int32") /* ty=Tensor[(3), int32] */;
    %475 = cast(%var_1413, dtype="int32") /* ty=Tensor[(7, 12, 13), int32] */;
    %476 = dyn.reshape(%473, %474, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %477 = cast(%var_1429, dtype="float32") /* ty=Tensor[(5, 6), float32] */;
    %478 = cast(%var_1430, dtype="float32") /* ty=Tensor[(1, 330), float32] */;
    %479 = reshape(%477, newshape=[1, 6, 5]) /* ty=Tensor[(1, 6, 5), float32] */;
    %480 = reshape(%478, newshape=[11, 6, 5]) /* ty=Tensor[(11, 6, 5), float32] */;
    %481 = @func_264(%479, %480) /* ty=(Tensor[(11, 6, 5), float32],) */;
    %482 = cast(%var_1430, dtype="float64") /* ty=Tensor[(1, 330), float64] */;
    %483 = @func_511() /* ty=(Tensor[(9, 9, 14), bool],) */;
    %484 = cast(%var_1446, dtype="float32") /* ty=float32 */;
    %485 = cast(meta[relay.Constant][26] /* ty=Tensor[(220), float32] */, dtype="float32") /* ty=Tensor[(220), float32] */;
    %486 = reshape(%484, newshape=[]) /* ty=float32 */;
    %487 = reshape(%485, newshape=[5, 4, 11]) /* ty=Tensor[(5, 4, 11), float32] */;
    %488 = bitwise_xor(%475, %476) /* ty=Tensor[(7, 12, 13), int32] */;
    %489 = %481.0;
    %490 = sigmoid(%482) /* ty=Tensor[(1, 330), float64] */;
    %491 = %483.0;
    %492 = @func_578(%486, %487) /* ty=Tensor[(5, 4, 11), float32] */;
    (%488, %489, %var_1429, %490, %491, %492, %var_1446, meta[relay.Constant][26] /* ty=Tensor[(220), float32] */)
  };
  %493(%var_1461, %var_1462, %var_1463, %var_1464, %var_1465) /* ty=(Tensor[(7, 12, 13), int32], Tensor[(11, 6, 5), float32], Tensor[(5, 6), float32], Tensor[(1, 330), float64], Tensor[(9, 9, 14), bool], Tensor[(5, 4, 11), float32], float32, Tensor[(220), float32]) */
}

def @func_2159() -> Tensor[(9, 9, 14), bool] {
  %495 = fn () -> Tensor[(9, 9, 14), bool] {
    %494 = @func_353() /* ty=(Tensor[(9, 9, 14), bool],) */;
    %494.0
  };
  %495() /* ty=Tensor[(9, 9, 14), bool] */
}

def @func_2514(%var_2512: Tensor[(7, 9, 3), float64], %var_2513: Tensor[(224), uint8]) -> (Tensor[(30, 1), float32], Tensor[(224), uint8], Tensor[(14, 78), int32], Tensor[(330), float32], float32, Tensor[(7, 9, 3), float64]) {
  %512 = fn (%var_2482: Tensor[(7, 9, 3), float64], %var_2487: Tensor[(224), uint8]) -> (Tensor[(30, 1), float32], Tensor[(224), uint8], Tensor[(14, 78), int32], Tensor[(330), float32], float32, Tensor[(7, 9, 3), float64]) {
    %496 = cast(%var_2487, dtype="uint8") /* ty=Tensor[(224), uint8] */;
    %497 = cast(%var_2487, dtype="uint8") /* ty=Tensor[(224), uint8] */;
    %498 = cast(meta[relay.Constant][27] /* ty=Tensor[(14, 78), int32] */, dtype="int32") /* ty=Tensor[(14, 78), int32] */;
    %499 = cast(meta[relay.Constant][28] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
    %500 = cast(-4.28304f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %501 = reshape(%496, newshape=[7, 2, 16]) /* ty=Tensor[(7, 2, 16), uint8] */;
    %502 = reshape(%497, newshape=[7, 2, 16]) /* ty=Tensor[(7, 2, 16), uint8] */;
    %503 = reshape(%498, newshape=[546, 2]) /* ty=Tensor[(546, 2), int32] */;
    %504 = reshape(%499, newshape=[330, 1]) /* ty=Tensor[(330, 1), float32] */;
    %505 = reshape(%500, newshape=[]) /* ty=float32 */;
    %506 = @func_2222(%501, %502, %503, %504, %505) /* ty=(Tensor[(7, 2, 16), uint8], Tensor[(5, 6), float32], Tensor[(546, 2), int32], Tensor[(30, 1), float32], Tensor[(330, 1), float32], float32, Tensor[(5, 4, 11), float32], Tensor[(220, 1), float32]) */;
    %507 = cast(%var_2482, dtype="float64") /* ty=Tensor[(7, 9, 3), float64] */;
    %508 = rsqrt(%507) /* ty=Tensor[(7, 9, 3), float64] */;
    %509 = cast(%508, dtype="float64") /* ty=Tensor[(7, 9, 3), float64] */;
    %510 = %506.3;
    %511 = sqrt(%509) /* ty=Tensor[(7, 9, 3), float64] */;
    (%510, %var_2487, meta[relay.Constant][27] /* ty=Tensor[(14, 78), int32] */, meta[relay.Constant][28] /* ty=Tensor[(330), float32] */, -4.28304f /* ty=float32 */, %511)
  };
  %512(%var_2512, %var_2513) /* ty=(Tensor[(30, 1), float32], Tensor[(224), uint8], Tensor[(14, 78), int32], Tensor[(330), float32], float32, Tensor[(7, 9, 3), float64]) */
}

def @func_2857() -> (Tensor[(9, 9, 14), bool], Tensor[(26, 3), float32], Tensor[(13, 3, 2), float32]) {
  %520 = fn () -> (Tensor[(9, 9, 14), bool], Tensor[(26, 3), float32], Tensor[(13, 3, 2), float32]) {
    %513 = cast(meta[relay.Constant][29] /* ty=Tensor[(26, 3), float32] */, dtype="float32") /* ty=Tensor[(26, 3), float32] */;
    %514 = reshape(%513, newshape=[78]) /* ty=Tensor[(78), float32] */;
    %515 = @func_1387(%514) /* ty=(Tensor[(9, 9, 14), bool], Tensor[(13, 3, 2), bool]) */;
    %516 = %515.1;
    %517 = cast(%516, dtype="float32") /* ty=Tensor[(13, 3, 2), float32] */;
    %518 = @func_2135() /* ty=Tensor[(9, 9, 14), bool] */;
    %519 = log10(%517) /* ty=Tensor[(13, 3, 2), float32] */;
    (%518, meta[relay.Constant][29] /* ty=Tensor[(26, 3), float32] */, %519)
  };
  %520() /* ty=(Tensor[(9, 9, 14), bool], Tensor[(26, 3), float32], Tensor[(13, 3, 2), float32]) */
}

def @func_3080(%var_3068: Tensor[(1092), int32], %var_3069: Tensor[(30), float32], %var_3070: float32) -> (Tensor[(11, 2, 15), float32], Tensor[(5, 6), float32], Tensor[(1092), int32], Tensor[(30), float32], float32) {
  %521 = cast(meta[relay.Constant][30] /* ty=Tensor[(11, 2, 15), float32] */, dtype="float32") /* ty=Tensor[(11, 2, 15), float32] */;
  %522 = cosh(%521) /* ty=Tensor[(11, 2, 15), float32] */;
  %523 = cast(%522, dtype="float32") /* ty=Tensor[(11, 2, 15), float32] */;
  %524 = cast(%var_3068, dtype="int32") /* ty=Tensor[(1092), int32] */;
  %525 = cast(%var_3068, dtype="int32") /* ty=Tensor[(1092), int32] */;
  %526 = cast(%var_3069, dtype="float32") /* ty=Tensor[(30), float32] */;
  %527 = cast(%522, dtype="float32") /* ty=Tensor[(11, 2, 15), float32] */;
  %528 = cast(%var_3070, dtype="float32") /* ty=float32 */;
  %529 = reshape(%524, newshape=[7, 12, 13]) /* ty=Tensor[(7, 12, 13), int32] */;
  %530 = reshape(%525, newshape=[7, 12, 13]) /* ty=Tensor[(7, 12, 13), int32] */;
  %531 = reshape(%526, newshape=[5, 6]) /* ty=Tensor[(5, 6), float32] */;
  %532 = reshape(%527, newshape=[1, 330]) /* ty=Tensor[(1, 330), float32] */;
  %533 = reshape(%528, newshape=[]) /* ty=float32 */;
  %534 = @func_1460(%529, %530, %531, %532, %533) /* ty=(Tensor[(7, 12, 13), int32], Tensor[(11, 6, 5), float32], Tensor[(5, 6), float32], Tensor[(1, 330), float64], Tensor[(9, 9, 14), bool], Tensor[(5, 4, 11), float32], float32, Tensor[(220), float32]) */;
  %535 = acos(%523) /* ty=Tensor[(11, 2, 15), float32] */;
  %536 = %534.2;
  (%535, %536, %var_3068, %var_3069, %var_3070)
}

def @func_5807(%var_5805: Tensor[(9, 2, 15), float64]) -> (Tensor[(9, 2, 15), bool], Tensor[(9, 9, 14), bool]) {
  @func_5804(%var_5805) /* ty=(Tensor[(9, 2, 15), bool], Tensor[(9, 9, 14), bool]) */
}

def @func_267(%var_265: Tensor[(1, 6, 5), float32], %var_266: Tensor[(11, 6, 5), float32]) -> (Tensor[(11, 6, 5), float32],) {
  %540 = fn (%var_257: Tensor[(1, 6, 5), float32], %var_258: Tensor[(11, 6, 5), float32]) -> (Tensor[(11, 6, 5), float32],) {
    %537 = cast(%var_257, dtype="float32") /* ty=Tensor[(1, 6, 5), float32] */;
    %538 = cast(%var_258, dtype="float32") /* ty=Tensor[(11, 6, 5), float32] */;
    %539 = floor_mod(%537, %538) /* ty=Tensor[(11, 6, 5), float32] */;
    (%539,)
  };
  %540(%var_265, %var_266) /* ty=(Tensor[(11, 6, 5), float32],) */
}

def @func_75(%var_68: Tensor[(13, 3, 2), float32]) -> (Tensor[(13, 3, 2), float32],) {
  %541 = cast(%var_68, dtype="float32") /* ty=Tensor[(13, 3, 2), float32] */;
  %542 = cos(%541) /* ty=Tensor[(13, 3, 2), float32] */;
  (%542,)
}

def @func_2825() -> Tensor[(9, 2, 15), float64] {
  @func_1133() /* ty=Tensor[(9, 2, 15), float64] */
}

def @func_1326() -> (Tensor[(9, 9, 14), bool],) {
  %543 = @func_511() /* ty=(Tensor[(9, 9, 14), bool],) */;
  %544 = %543.0;
  (%544,)
}

def @func_3978() -> Tensor[(9, 9, 14), float32] {
  %546 = fn () -> Tensor[(9, 9, 14), float32] {
    %545 = @func_1770() /* ty=(Tensor[(9, 9, 14), float32],) */;
    %545.0
  };
  %546() /* ty=Tensor[(9, 9, 14), float32] */
}

def @func_3820() -> Tensor[(26, 3), float32] {
  %548 = fn () -> Tensor[(26, 3), float32] {
    %547 = @func_2856() /* ty=(Tensor[(9, 9, 14), bool], Tensor[(26, 3), float32], Tensor[(13, 3, 2), float32]) */;
    %547.1
  };
  %548() /* ty=Tensor[(26, 3), float32] */
}

def @func_5903() -> (Tensor[(9, 9, 14), bool],) {
  @func_5901() /* ty=(Tensor[(9, 9, 14), bool],) */
}

def @func_431(%var_428: Tensor[(30), float32], %var_429: Tensor[(330), float32], %var_430: Tensor[(13, 6), float32]) -> (Tensor[(7, 5, 12), float64], Tensor[(7, 5, 12), float32], Tensor[(11, 6, 5), float32], Tensor[(30), float32], Tensor[(330), float32], Tensor[(13, 3, 2), float32], Tensor[(13, 3, 2), float32], Tensor[(11, 6, 5), float32]) {
  %578 = fn (%var_392: Tensor[(30), float32], %var_393: Tensor[(330), float32], %var_396: Tensor[(13, 6), float32]) -> (Tensor[(7, 5, 12), float64], Tensor[(7, 5, 12), float32], Tensor[(11, 6, 5), float32], Tensor[(30), float32], Tensor[(330), float32], Tensor[(13, 3, 2), float32], Tensor[(13, 3, 2), float32], Tensor[(11, 6, 5), float32]) {
    %549 = cast(meta[relay.Constant][31] /* ty=Tensor[(7, 5, 12), float64] */, dtype="float64") /* ty=Tensor[(7, 5, 12), float64] */;
    %550 = cast(meta[relay.Constant][31] /* ty=Tensor[(7, 5, 12), float64] */, dtype="float32") /* ty=Tensor[(7, 5, 12), float32] */;
    %551 = cast(%var_392, dtype="float32") /* ty=Tensor[(30), float32] */;
    %552 = cast(%var_393, dtype="float32") /* ty=Tensor[(330), float32] */;
    %553 = reshape(%551, newshape=[1, 6, 5]) /* ty=Tensor[(1, 6, 5), float32] */;
    %554 = reshape(%552, newshape=[11, 6, 5]) /* ty=Tensor[(11, 6, 5), float32] */;
    %555 = @func_264(%553, %554) /* ty=(Tensor[(11, 6, 5), float32],) */;
    %556 = cast(%var_396, dtype="float32") /* ty=Tensor[(13, 6), float32] */;
    %557 = reshape(%556, newshape=[13, 3, 2]) /* ty=Tensor[(13, 3, 2), float32] */;
    %558 = @func_75(%557) /* ty=(Tensor[(13, 3, 2), float32],) */;
    %559 = %558.0;
    %560 = cast(%var_396, dtype="float32") /* ty=Tensor[(13, 6), float32] */;
    %561 = shape_of(%559, dtype="int32") /* ty=Tensor[(3), int32] */;
    %562 = cast(%559, dtype="float32") /* ty=Tensor[(13, 3, 2), float32] */;
    %563 = dyn.reshape(%560, %561, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %564 = mod(%562, %563) /* ty=Tensor[(13, 3, 2), float32] */;
    %565 = cast(%564, dtype="float32") /* ty=Tensor[(13, 3, 2), float32] */;
    %566 = reshape(%565, newshape=[13, 3, 2]) /* ty=Tensor[(13, 3, 2), float32] */;
    %567 = @func_75(%566) /* ty=(Tensor[(13, 3, 2), float32],) */;
    %568 = cast(%var_392, dtype="float32") /* ty=Tensor[(30), float32] */;
    %569 = %555.0;
    %570 = cast(%569, dtype="float32") /* ty=Tensor[(11, 6, 5), float32] */;
    %571 = reshape(%568, newshape=[1, 6, 5]) /* ty=Tensor[(1, 6, 5), float32] */;
    %572 = reshape(%570, newshape=[11, 6, 5]) /* ty=Tensor[(11, 6, 5), float32] */;
    %573 = @func_264(%571, %572) /* ty=(Tensor[(11, 6, 5), float32],) */;
    %574 = cosh(%549) /* ty=Tensor[(7, 5, 12), float64] */;
    %575 = log10(%550) /* ty=Tensor[(7, 5, 12), float32] */;
    %576 = %567.0;
    %577 = %573.0;
    (%574, %575, %569, %var_392, %var_393, %564, %576, %577)
  };
  %578(%var_428, %var_429, %var_430) /* ty=(Tensor[(7, 5, 12), float64], Tensor[(7, 5, 12), float32], Tensor[(11, 6, 5), float32], Tensor[(30), float32], Tensor[(330), float32], Tensor[(13, 3, 2), float32], Tensor[(13, 3, 2), float32], Tensor[(11, 6, 5), float32]) */
}

def @func_5373(%var_5371: Tensor[(2, 13, 1), int16], %var_5372: Tensor[(2, 13, 3), int16]) -> (Tensor[(2, 13, 3), bool], Tensor[(9, 2, 15), float64], Tensor[(768), int64]) {
  @func_5369(%var_5371, %var_5372) /* ty=(Tensor[(2, 13, 3), bool], Tensor[(9, 2, 15), float64], Tensor[(768), int64]) */
}

def @func_3256(%var_3255: Tensor[(9, 2, 15), float64]) -> (Tensor[(9, 2, 15), int16], Tensor[(9, 9, 14), bool]) {
  %588 = fn (%var_3239: Tensor[(9, 2, 15), float64]) -> (Tensor[(9, 2, 15), int16], Tensor[(9, 9, 14), bool]) {
    %579 = @func_3121() /* ty=(Tensor[(9, 2, 15), float64],) */;
    %580 = %579.0;
    %581 = cast(%var_3239, dtype="int16") /* ty=Tensor[(9, 2, 15), int16] */;
    %582 = shape_of(%580, dtype="int32") /* ty=Tensor[(3), int32] */;
    %583 = cast(%580, dtype="int16") /* ty=Tensor[(9, 2, 15), int16] */;
    %584 = dyn.reshape(%581, %582, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %585 = @func_1480() /* ty=(Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), bool], Tensor[(3, 378), bool]) */;
    %586 = multiply(%583, %584) /* ty=Tensor[(9, 2, 15), int16] */;
    %587 = %585.1;
    (%586, %587)
  };
  %588(%var_3255) /* ty=(Tensor[(9, 2, 15), int16], Tensor[(9, 9, 14), bool]) */
}

def @func_578(%var_557: float32, %var_568: Tensor[(5, 4, 11), float32]) -> Tensor[(5, 4, 11), float32] {
  %589 = cast(%var_557, dtype="float32") /* ty=float32 */;
  %590 = cast(meta[relay.Constant][32] /* ty=Tensor[(5, 4, 11), float32] */, dtype="float32") /* ty=Tensor[(5, 4, 11), float32] */;
  %591 = minimum(%589, %590) /* ty=Tensor[(5, 4, 11), float32] */;
  %592 = cast(%var_568, dtype="int64") /* ty=Tensor[(5, 4, 11), int64] */;
  %593 = shape_of(%591, dtype="int32") /* ty=Tensor[(3), int32] */;
  %594 = cast(%591, dtype="int64") /* ty=Tensor[(5, 4, 11), int64] */;
  %595 = dyn.reshape(%592, %593, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %596 = bitwise_xor(%594, %595) /* ty=Tensor[(5, 4, 11), int64] */;
  %597 = cast(%596, dtype="float32") /* ty=Tensor[(5, 4, 11), float32] */;
  tan(%597) /* ty=Tensor[(5, 4, 11), float32] */
}

def @func_3605(%var_3598: Tensor[(12, 9, 16), float32]) -> (Tensor[(12, 9, 16), float32],) {
  %598 = cast(%var_3598, dtype="float32") /* ty=Tensor[(12, 9, 16), float32] */;
  %599 = atan(%598) /* ty=Tensor[(12, 9, 16), float32] */;
  (%599,)
}

def @func_1116(%var_1102: Tensor[(12, 4, 16), int64]) -> (Tensor[(12, 4, 16), bool], Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), bool]) {
  %600 = cast(%var_1102, dtype="bool") /* ty=Tensor[(12, 4, 16), bool] */;
  %601 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(12, 4, 16), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %602 = cast(meta[relay.Constant][33] /* ty=Tensor[(12, 4, 16), int64] */, dtype="bool") /* ty=Tensor[(12, 4, 16), bool] */;
  %603 = dyn.reshape(%600, %601, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %604 = @func_722() /* ty=(Tensor[(9, 2, 15), float64],) */;
  %605 = @func_511() /* ty=(Tensor[(9, 9, 14), bool],) */;
  %606 = not_equal(%602, %603) /* ty=Tensor[(12, 4, 16), bool] */;
  %607 = %604.0;
  %608 = %605.0;
  (%606, %607, %608)
}

def @func_5804(%var_5785: Tensor[(9, 2, 15), float64]) -> (Tensor[(9, 2, 15), bool], Tensor[(9, 9, 14), bool]) {
  %609 = @func_3121() /* ty=(Tensor[(9, 2, 15), float64],) */;
  %610 = %609.0;
  %611 = cast(%var_5785, dtype="bool") /* ty=Tensor[(9, 2, 15), bool] */;
  %612 = shape_of(%610, dtype="int32") /* ty=Tensor[(3), int32] */;
  %613 = cast(%610, dtype="bool") /* ty=Tensor[(9, 2, 15), bool] */;
  %614 = dyn.reshape(%611, %612, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %615 = equal(%613, %614) /* ty=Tensor[(9, 2, 15), bool] */;
  %616 = @func_3779() /* ty=Tensor[(9, 9, 14), bool] */;
  (%615, %616)
}

def @func_2425(%var_2423: bool, %var_2424: Tensor[(220), float32]) -> (Tensor[(9, 9, 14), float32], Tensor[(30), float32], bool, Tensor[(220), float32], Tensor[(9, 9, 14), bool]) {
  @func_2421(%var_2423, %var_2424) /* ty=(Tensor[(9, 9, 14), float32], Tensor[(30), float32], bool, Tensor[(220), float32], Tensor[(9, 9, 14), bool]) */
}

def @func_2118(%var_2116: Tensor[(9, 9, 14), bool]) -> (Tensor[(9, 9, 14), float64],) {
  @func_2115(%var_2116) /* ty=(Tensor[(9, 9, 14), float64],) */
}

def @func_2860() -> (Tensor[(13, 3, 2), float32],) {
  %617 = @func_2856() /* ty=(Tensor[(9, 9, 14), bool], Tensor[(26, 3), float32], Tensor[(13, 3, 2), float32]) */;
  %618 = %617.2;
  (%618,)
}

def @func_3702() -> (Tensor[(9, 2, 15), float64],) {
  %623 = fn () -> (Tensor[(9, 2, 15), float64],) {
    %619 = @func_722() /* ty=(Tensor[(9, 2, 15), float64],) */;
    %620 = %619.0;
    %621 = cast(%620, dtype="float64") /* ty=Tensor[(9, 2, 15), float64] */;
    %622 = sqrt(%621) /* ty=Tensor[(9, 2, 15), float64] */;
    (%622,)
  };
  %623() /* ty=(Tensor[(9, 2, 15), float64],) */
}

def @func_2878(%var_2876: Tensor[(3, 14), float32]) -> Tensor[(3, 14), float32] {
  @func_2875(%var_2876) /* ty=Tensor[(3, 14), float32] */
}

def @func_3516() -> Tensor[(13, 3, 2), float32] {
  %625 = fn () -> Tensor[(13, 3, 2), float32] {
    %624 = @func_2860() /* ty=(Tensor[(13, 3, 2), float32],) */;
    %624.0
  };
  %625() /* ty=Tensor[(13, 3, 2), float32] */
}

def @func_2892(%var_2890: Tensor[(5, 6), float32], %var_2891: Tensor[(1, 330), float32]) -> (Tensor[(9, 2, 15), float64], Tensor[(13, 3, 2), float32], Tensor[(5, 6), float32], Tensor[(1, 330), float32], Tensor[(78), float32]) {
  @func_2888(%var_2890, %var_2891) /* ty=(Tensor[(9, 2, 15), float64], Tensor[(13, 3, 2), float32], Tensor[(5, 6), float32], Tensor[(1, 330), float32], Tensor[(78), float32]) */
}

def @func_986(%var_956: Tensor[(1134), bool]) -> (Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), bool]) {
  %626 = @func_722() /* ty=(Tensor[(9, 2, 15), float64],) */;
  %627 = cast(%var_956, dtype="bool") /* ty=Tensor[(1134), bool] */;
  %628 = reshape(%627, newshape=[9, 9, 14]) /* ty=Tensor[(9, 9, 14), bool] */;
  %629 = @func_930(%628) /* ty=(Tensor[(9, 9, 14), uint16], Tensor[(9, 9, 14), bool]) */;
  %630 = %629.0;
  %631 = cast(%var_956, dtype="bool") /* ty=Tensor[(1134), bool] */;
  %632 = shape_of(%630, dtype="int32") /* ty=Tensor[(3), int32] */;
  %633 = cast(%630, dtype="bool") /* ty=Tensor[(9, 9, 14), bool] */;
  %634 = dyn.reshape(%631, %632, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %635 = %626.0;
  %636 = greater(%633, %634) /* ty=Tensor[(9, 9, 14), bool] */;
  (%635, %636)
}

def @func_1079(%var_1076: bool, %var_1077: Tensor[(1134, 1), float32], %var_1078: Tensor[(220), float32]) -> (Tensor[(6, 4, 12), bool], Tensor[(11, 6, 5), float32], Tensor[(10, 3), float32], Tensor[(330), float32], Tensor[(30), float32], Tensor[(1134, 220), float32]) {
  %659 = fn (%var_1052: bool, %var_1064: Tensor[(1134, 1), float32], %var_1065: Tensor[(220), float32]) -> (Tensor[(6, 4, 12), bool], Tensor[(11, 6, 5), float32], Tensor[(10, 3), float32], Tensor[(330), float32], Tensor[(30), float32], Tensor[(1134, 220), float32]) {
    %637 = cast(%var_1052, dtype="bool") /* ty=bool */;
    %638 = cast(meta[relay.Constant][34] /* ty=Tensor[(6, 4, 12), bool] */, dtype="bool") /* ty=Tensor[(6, 4, 12), bool] */;
    %639 = cast(meta[relay.Constant][35] /* ty=Tensor[(10, 3), float32] */, dtype="float32") /* ty=Tensor[(10, 3), float32] */;
    %640 = cast(meta[relay.Constant][36] /* ty=Tensor[(330), float32] */, dtype="float32") /* ty=Tensor[(330), float32] */;
    %641 = reshape(%639, newshape=[1, 6, 5]) /* ty=Tensor[(1, 6, 5), float32] */;
    %642 = reshape(%640, newshape=[11, 6, 5]) /* ty=Tensor[(11, 6, 5), float32] */;
    %643 = @func_264(%641, %642) /* ty=(Tensor[(11, 6, 5), float32],) */;
    %644 = cast(%var_1064, dtype="float32") /* ty=Tensor[(1134, 1), float32] */;
    %645 = cast(meta[relay.Constant][35] /* ty=Tensor[(10, 3), float32] */, dtype="float32") /* ty=Tensor[(10, 3), float32] */;
    %646 = cast(%var_1052, dtype="float32") /* ty=float32 */;
    %647 = cast(%var_1065, dtype="float32") /* ty=Tensor[(220), float32] */;
    %648 = reshape(%644, newshape=[9, 9, 14]) /* ty=Tensor[(9, 9, 14), float32] */;
    %649 = reshape(%645, newshape=[30]) /* ty=Tensor[(30), float32] */;
    %650 = reshape(%646, newshape=[]) /* ty=float32 */;
    %651 = reshape(%647, newshape=[220]) /* ty=Tensor[(220), float32] */;
    %652 = @func_876(%648, %649, %650, %651) /* ty=(Tensor[(9, 9, 14), float64], Tensor[(9, 9, 14), bool], Tensor[(13, 3, 2), float32], Tensor[(30), float32], Tensor[(55, 6), float32], Tensor[(1, 78), float32], Tensor[(5, 4, 11), float32], float32, Tensor[(220), float32], Tensor[(9, 9, 14), bool], Tensor[(9, 2, 15), float64]) */;
    %653 = cast(%var_1065, dtype="float32") /* ty=Tensor[(220), float32] */;
    %654 = cast(%var_1064, dtype="float32") /* ty=Tensor[(1134, 1), float32] */;
    %655 = logical_or(%637, %638) /* ty=Tensor[(6, 4, 12), bool] */;
    %656 = %643.0;
    %657 = %652.3;
    %658 = floor_mod(%653, %654) /* ty=Tensor[(1134, 220), float32] */;
    (%655, %656, meta[relay.Constant][35] /* ty=Tensor[(10, 3), float32] */, meta[relay.Constant][36] /* ty=Tensor[(330), float32] */, %657, %658)
  };
  %659(%var_1076, %var_1077, %var_1078) /* ty=(Tensor[(6, 4, 12), bool], Tensor[(11, 6, 5), float32], Tensor[(10, 3), float32], Tensor[(330), float32], Tensor[(30), float32], Tensor[(1134, 220), float32]) */
}

def @func_4296(%var_4294: Tensor[(8, 14, 16), float32]) -> Tensor[(8, 14, 16), float32] {
  @func_4293(%var_4294) /* ty=Tensor[(8, 14, 16), float32] */
}

def @func_5212(%var_5210: Tensor[(220), float32], %var_5211: Tensor[(30), float32]) -> (Tensor[(9, 9, 14), bool], Tensor[(9, 9, 14), float32], Tensor[(220), float32], Tensor[(9, 9, 14), float32], Tensor[(30), int64]) {
  @func_5208(%var_5210, %var_5211) /* ty=(Tensor[(9, 9, 14), bool], Tensor[(9, 9, 14), float32], Tensor[(220), float32], Tensor[(9, 9, 14), float32], Tensor[(30), int64]) */
}

def @func_5208(%var_5141: Tensor[(220), float32], %var_5162: Tensor[(30), float32]) -> (Tensor[(9, 9, 14), bool], Tensor[(9, 9, 14), float32], Tensor[(220), float32], Tensor[(9, 9, 14), float32], Tensor[(30), int64]) {
  %660 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %661 = cast(%var_5141, dtype="float32") /* ty=Tensor[(220), float32] */;
  %662 = reshape(%660, newshape=[]) /* ty=bool */;
  %663 = reshape(%661, newshape=[220]) /* ty=Tensor[(220), float32] */;
  %664 = @func_2421(%662, %663) /* ty=(Tensor[(9, 9, 14), float32], Tensor[(30), float32], bool, Tensor[(220), float32], Tensor[(9, 9, 14), bool]) */;
  %665 = @func_3725() /* ty=(Tensor[(9, 9, 14), float32],) */;
  %666 = %665.0;
  %667 = cast(%666, dtype="float32") /* ty=Tensor[(9, 9, 14), float32] */;
  %668 = acos(%667) /* ty=Tensor[(9, 9, 14), float32] */;
  %669 = cast(%668, dtype="float32") /* ty=Tensor[(9, 9, 14), float32] */;
  %670 = atanh(%669) /* ty=Tensor[(9, 9, 14), float32] */;
  %671 = cast(%var_5162, dtype="float32") /* ty=Tensor[(30), float32] */;
  %672 = cast(False /* ty=bool */, dtype="float32") /* ty=float32 */;
  %673 = cast(%var_5141, dtype="float32") /* ty=Tensor[(220), float32] */;
  %674 = reshape(%671, newshape=[30]) /* ty=Tensor[(30), float32] */;
  %675 = reshape(%672, newshape=[]) /* ty=float32 */;
  %676 = reshape(%673, newshape=[55, 4]) /* ty=Tensor[(55, 4), float32] */;
  %677 = @func_3485(%674, %675, %676) /* ty=(Tensor[(9, 9, 14), bool], Tensor[(9, 9, 14), float64], Tensor[(30), float32], float32, Tensor[(55, 4), float32]) */;
  %678 = %677.0;
  %679 = cast(%678, dtype="float32") /* ty=Tensor[(9, 9, 14), float32] */;
  %680 = shape_of(%670, dtype="int32") /* ty=Tensor[(3), int32] */;
  %681 = cast(%670, dtype="float32") /* ty=Tensor[(9, 9, 14), float32] */;
  %682 = dyn.reshape(%679, %680, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %683 = cast(%var_5162, dtype="int64") /* ty=Tensor[(30), int64] */;
  %684 = cast(False /* ty=bool */, dtype="int64") /* ty=int64 */;
  %685 = @func_3779() /* ty=Tensor[(9, 9, 14), bool] */;
  %686 = %664.0;
  %687 = power(%681, %682) /* ty=Tensor[(9, 9, 14), float32] */;
  %688 = bitwise_and(%683, %684) /* ty=Tensor[(30), int64] */;
  (%685, %686, %var_5141, %687, %688)
}

def @func_2115(%var_2108: Tensor[(9, 9, 14), bool]) -> (Tensor[(9, 9, 14), float64],) {
  %689 = @func_353() /* ty=(Tensor[(9, 9, 14), bool],) */;
  %690 = %689.0;
  %691 = cast(%var_2108, dtype="float64") /* ty=Tensor[(9, 9, 14), float64] */;
  %692 = shape_of(%690, dtype="int32") /* ty=Tensor[(3), int32] */;
  %693 = cast(%690, dtype="float64") /* ty=Tensor[(9, 9, 14), float64] */;
  %694 = dyn.reshape(%691, %692, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %695 = subtract(%693, %694) /* ty=Tensor[(9, 9, 14), float64] */;
  (%695,)
}

def @func_3099() -> Tensor[(9, 9, 14), float32] {
  %696 = fn () -> Tensor[(9, 9, 14), float32] {
    @func_277() /* ty=Tensor[(9, 9, 14), float32] */
  };
  %696() /* ty=Tensor[(9, 9, 14), float32] */
}

def @func_512() -> (Tensor[(9, 9, 14), bool],) {
  %699 = fn () -> (Tensor[(9, 9, 14), bool],) {
    %697 = @func_353() /* ty=(Tensor[(9, 9, 14), bool],) */;
    %698 = %697.0;
    (%698,)
  };
  %699() /* ty=(Tensor[(9, 9, 14), bool],) */
}

def @func_724() -> (Tensor[(9, 2, 15), float64],) {
  @func_722() /* ty=(Tensor[(9, 2, 15), float64],) */
}

def @func_4899(%var_4897: Tensor[(3, 16, 3), float32]) -> Tensor[(3, 16, 3), float32] {
  @func_4896(%var_4897) /* ty=Tensor[(3, 16, 3), float32] */
}

def @func_4438() -> (Tensor[(9, 9, 14), float32], Tensor[(7, 12, 2), bool], Tensor[(168), bool], Tensor[(11, 10, 16), float32], Tensor[(11, 10, 16), float32]) {
  %715 = fn () -> (Tensor[(9, 9, 14), float32], Tensor[(7, 12, 2), bool], Tensor[(168), bool], Tensor[(11, 10, 16), float32], Tensor[(11, 10, 16), float32]) {
    %700 = @func_3725() /* ty=(Tensor[(9, 9, 14), float32],) */;
    %701 = cast(meta[relay.Constant][37] /* ty=Tensor[(168), bool] */, dtype="bool") /* ty=Tensor[(168), bool] */;
    %702 = cast(meta[relay.Constant][37] /* ty=Tensor[(168), bool] */, dtype="bool") /* ty=Tensor[(168), bool] */;
    %703 = reshape(%701, newshape=[7, 12, 2]) /* ty=Tensor[(7, 12, 2), bool] */;
    %704 = reshape(%702, newshape=[7, 12, 2]) /* ty=Tensor[(7, 12, 2), bool] */;
    %705 = cast(meta[relay.Constant][38] /* ty=Tensor[(11, 10, 16), float32] */, dtype="float32") /* ty=Tensor[(11, 10, 16), float32] */;
    %706 = cosh(%705) /* ty=Tensor[(11, 10, 16), float32] */;
    %707 = cast(%706, dtype="float32") /* ty=Tensor[(11, 10, 16), float32] */;
    %708 = rsqrt(%707) /* ty=Tensor[(11, 10, 16), float32] */;
    %709 = cast(%708, dtype="float32") /* ty=Tensor[(11, 10, 16), float32] */;
    %710 = cast(%708, dtype="float32") /* ty=Tensor[(11, 10, 16), float32] */;
    %711 = %700.0;
    %712 = @func_1011(%703, %704) /* ty=Tensor[(7, 12, 2), bool] */;
    %713 = acosh(%709) /* ty=Tensor[(11, 10, 16), float32] */;
    %714 = sin(%710) /* ty=Tensor[(11, 10, 16), float32] */;
    (%711, %712, meta[relay.Constant][37] /* ty=Tensor[(168), bool] */, %713, %714)
  };
  %715() /* ty=(Tensor[(9, 9, 14), float32], Tensor[(7, 12, 2), bool], Tensor[(168), bool], Tensor[(11, 10, 16), float32], Tensor[(11, 10, 16), float32]) */
}

def @func_881(%var_877: Tensor[(9, 9, 14), float32], %var_878: Tensor[(30), float32], %var_879: float32, %var_880: Tensor[(220), float32]) -> (Tensor[(9, 9, 14), float64], Tensor[(9, 9, 14), bool], Tensor[(13, 3, 2), float32], Tensor[(30), float32], Tensor[(55, 6), float32], Tensor[(1, 78), float32], Tensor[(5, 4, 11), float32], float32, Tensor[(220), float32], Tensor[(9, 9, 14), bool], Tensor[(9, 2, 15), float64]) {
  %742 = fn (%var_828: Tensor[(9, 9, 14), float32], %var_849: Tensor[(30), float32], %var_859: float32, %var_860: Tensor[(220), float32]) -> (Tensor[(9, 9, 14), float64], Tensor[(9, 9, 14), bool], Tensor[(13, 3, 2), float32], Tensor[(30), float32], Tensor[(55, 6), float32], Tensor[(1, 78), float32], Tensor[(5, 4, 11), float32], float32, Tensor[(220), float32], Tensor[(9, 9, 14), bool], Tensor[(9, 2, 15), float64]) {
    %716 = @func_277() /* ty=Tensor[(9, 9, 14), float32] */;
    %717 = cast(%var_828, dtype="float64") /* ty=Tensor[(9, 9, 14), float64] */;
    %718 = shape_of(%716, dtype="int32") /* ty=Tensor[(3), int32] */;
    %719 = cast(%716, dtype="float64") /* ty=Tensor[(9, 9, 14), float64] */;
    %720 = dyn.reshape(%717, %718, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %721 = cast(%var_828, dtype="float32") /* ty=Tensor[(9, 9, 14), float32] */;
    %722 = reshape(%721, newshape=[9, 9, 14]) /* ty=Tensor[(9, 9, 14), float32] */;
    %723 = cast(%var_849, dtype="float32") /* ty=Tensor[(30), float32] */;
    %724 = cast(meta[relay.Constant][39] /* ty=Tensor[(55, 6), float32] */, dtype="float32") /* ty=Tensor[(55, 6), float32] */;
    %725 = cast(meta[relay.Constant][40] /* ty=Tensor[(1, 78), float32] */, dtype="float32") /* ty=Tensor[(1, 78), float32] */;
    %726 = reshape(%723, newshape=[30]) /* ty=Tensor[(30), float32] */;
    %727 = reshape(%724, newshape=[330]) /* ty=Tensor[(330), float32] */;
    %728 = reshape(%725, newshape=[13, 6]) /* ty=Tensor[(13, 6), float32] */;
    %729 = @func_427(%726, %727, %728) /* ty=(Tensor[(7, 5, 12), float64], Tensor[(7, 5, 12), float32], Tensor[(11, 6, 5), float32], Tensor[(30), float32], Tensor[(330), float32], Tensor[(13, 3, 2), float32], Tensor[(13, 3, 2), float32], Tensor[(11, 6, 5), float32]) */;
    %730 = cast(%var_859, dtype="float32") /* ty=float32 */;
    %731 = cast(%var_860, dtype="float32") /* ty=Tensor[(220), float32] */;
    %732 = reshape(%730, newshape=[]) /* ty=float32 */;
    %733 = reshape(%731, newshape=[5, 4, 11]) /* ty=Tensor[(5, 4, 11), float32] */;
    %734 = @func_353() /* ty=(Tensor[(9, 9, 14), bool],) */;
    %735 = @func_722() /* ty=(Tensor[(9, 2, 15), float64],) */;
    %736 = divide(%719, %720) /* ty=Tensor[(9, 9, 14), float64] */;
    %737 = @func_625(%722) /* ty=Tensor[(9, 9, 14), bool] */;
    %738 = %729.6;
    %739 = @func_578(%732, %733) /* ty=Tensor[(5, 4, 11), float32] */;
    %740 = %734.0;
    %741 = %735.0;
    (%736, %737, %738, %var_849, meta[relay.Constant][39] /* ty=Tensor[(55, 6), float32] */, meta[relay.Constant][40] /* ty=Tensor[(1, 78), float32] */, %739, %var_859, %var_860, %740, %741)
  };
  %742(%var_877, %var_878, %var_879, %var_880) /* ty=(Tensor[(9, 9, 14), float64], Tensor[(9, 9, 14), bool], Tensor[(13, 3, 2), float32], Tensor[(30), float32], Tensor[(55, 6), float32], Tensor[(1, 78), float32], Tensor[(5, 4, 11), float32], float32, Tensor[(220), float32], Tensor[(9, 9, 14), bool], Tensor[(9, 2, 15), float64]) */
}

def @func_4942() -> Tensor[(9, 2, 15), float64] {
  %744 = fn () -> Tensor[(9, 2, 15), float64] {
    %743 = @func_3701() /* ty=(Tensor[(9, 2, 15), float64],) */;
    %743.0
  };
  %744() /* ty=Tensor[(9, 2, 15), float64] */
}

def @func_4202() -> (Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), bool]) {
  @func_4200() /* ty=(Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), bool]) */
}

def @func_1811(%var_1785: Tensor[(9, 2, 15), float64], %var_1806: Tensor[(9, 2, 15), bool]) -> (Tensor[(9, 2, 15), uint8],) {
  %745 = @func_1133() /* ty=Tensor[(9, 2, 15), float64] */;
  %746 = cast(%var_1785, dtype="bool") /* ty=Tensor[(9, 2, 15), bool] */;
  %747 = shape_of(%745, dtype="int32") /* ty=Tensor[(3), int32] */;
  %748 = cast(%745, dtype="bool") /* ty=Tensor[(9, 2, 15), bool] */;
  %749 = dyn.reshape(%746, %747, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %750 = less_equal(%748, %749) /* ty=Tensor[(9, 2, 15), bool] */;
  %751 = cast(%var_1806, dtype="uint8") /* ty=Tensor[(9, 2, 15), uint8] */;
  %752 = shape_of(%750, dtype="int32") /* ty=Tensor[(3), int32] */;
  %753 = cast(%750, dtype="uint8") /* ty=Tensor[(9, 2, 15), uint8] */;
  %754 = dyn.reshape(%751, %752, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %755 = logical_xor(%753, %754) /* ty=Tensor[(9, 2, 15), uint8] */;
  (%755,)
}

def @func_1815(%var_1813: Tensor[(9, 2, 15), float64], %var_1814: Tensor[(9, 2, 15), bool]) -> (Tensor[(9, 2, 15), uint8],) {
  @func_1811(%var_1813, %var_1814) /* ty=(Tensor[(9, 2, 15), uint8],) */
}

def @func_5901() -> (Tensor[(9, 9, 14), bool],) {
  %756 = @func_1480() /* ty=(Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), bool], Tensor[(3, 378), bool]) */;
  %757 = %756.1;
  (%757,)
}

def @func_1598() -> Tensor[(9, 2, 15), float64] {
  @func_1596() /* ty=Tensor[(9, 2, 15), float64] */
}

def @func_2222(%var_2194: Tensor[(7, 2, 16), uint8], %var_2195: Tensor[(7, 2, 16), uint8], %var_2208: Tensor[(546, 2), int32], %var_2210: Tensor[(330, 1), float32], %var_2211: float32) -> (Tensor[(7, 2, 16), uint8], Tensor[(5, 6), float32], Tensor[(546, 2), int32], Tensor[(30, 1), float32], Tensor[(330, 1), float32], float32, Tensor[(5, 4, 11), float32], Tensor[(220, 1), float32]) {
  %758 = cast(%var_2195, dtype="uint8") /* ty=Tensor[(7, 2, 16), uint8] */;
  %759 = shape_of(%var_2194, dtype="int32") /* ty=Tensor[(3), int32] */;
  %760 = cast(%var_2194, dtype="uint8") /* ty=Tensor[(7, 2, 16), uint8] */;
  %761 = dyn.reshape(%758, %759, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %762 = cast(%var_2208, dtype="int32") /* ty=Tensor[(546, 2), int32] */;
  %763 = cast(%var_2208, dtype="int32") /* ty=Tensor[(546, 2), int32] */;
  %764 = cast(meta[relay.Constant][41] /* ty=Tensor[(30, 1), float32] */, dtype="float32") /* ty=Tensor[(30, 1), float32] */;
  %765 = cast(%var_2210, dtype="float32") /* ty=Tensor[(330, 1), float32] */;
  %766 = cast(%var_2211, dtype="float32") /* ty=float32 */;
  %767 = reshape(%762, newshape=[7, 12, 13]) /* ty=Tensor[(7, 12, 13), int32] */;
  %768 = reshape(%763, newshape=[7, 12, 13]) /* ty=Tensor[(7, 12, 13), int32] */;
  %769 = reshape(%764, newshape=[5, 6]) /* ty=Tensor[(5, 6), float32] */;
  %770 = reshape(%765, newshape=[1, 330]) /* ty=Tensor[(1, 330), float32] */;
  %771 = reshape(%766, newshape=[]) /* ty=float32 */;
  %772 = @func_1460(%767, %768, %769, %770, %771) /* ty=(Tensor[(7, 12, 13), int32], Tensor[(11, 6, 5), float32], Tensor[(5, 6), float32], Tensor[(1, 330), float64], Tensor[(9, 9, 14), bool], Tensor[(5, 4, 11), float32], float32, Tensor[(220), float32]) */;
  %773 = cast(%var_2211, dtype="float32") /* ty=float32 */;
  %774 = cast(meta[relay.Constant][42] /* ty=Tensor[(220, 1), float32] */, dtype="float32") /* ty=Tensor[(220, 1), float32] */;
  %775 = reshape(%773, newshape=[]) /* ty=float32 */;
  %776 = reshape(%774, newshape=[5, 4, 11]) /* ty=Tensor[(5, 4, 11), float32] */;
  %777 = bitwise_or(%760, %761) /* ty=Tensor[(7, 2, 16), uint8] */;
  %778 = %772.2;
  %779 = @func_578(%775, %776) /* ty=Tensor[(5, 4, 11), float32] */;
  (%777, %778, %var_2208, meta[relay.Constant][41] /* ty=Tensor[(30, 1), float32] */, %var_2210, %var_2211, %779, meta[relay.Constant][42] /* ty=Tensor[(220, 1), float32] */)
}

def @func_3121() -> (Tensor[(9, 2, 15), float64],) {
  %780 = @func_1596() /* ty=Tensor[(9, 2, 15), float64] */;
  (%780,)
}

def @func_628(%var_626: Tensor[(9, 9, 14), float32]) -> Tensor[(9, 9, 14), bool] {
  @func_625(%var_626) /* ty=Tensor[(9, 9, 14), bool] */
}

def @func_3508(%var_3491: Tensor[(1, 1, 1), float32]) -> (Tensor[(16, 11, 12), float32], Tensor[(9, 9, 14), bool], Tensor[(78), float32]) {
  %781 = cast(%var_3491, dtype="float32") /* ty=Tensor[(1, 1, 1), float32] */;
  %782 = cast(meta[relay.Constant][43] /* ty=Tensor[(16, 11, 12), float32] */, dtype="float32") /* ty=Tensor[(16, 11, 12), float32] */;
  %783 = cast(meta[relay.Constant][44] /* ty=Tensor[(78), float32] */, dtype="float32") /* ty=Tensor[(78), float32] */;
  %784 = reshape(%783, newshape=[78]) /* ty=Tensor[(78), float32] */;
  %785 = @func_1387(%784) /* ty=(Tensor[(9, 9, 14), bool], Tensor[(13, 3, 2), bool]) */;
  %786 = power(%781, %782) /* ty=Tensor[(16, 11, 12), float32] */;
  %787 = %785.0;
  (%786, %787, meta[relay.Constant][44] /* ty=Tensor[(78), float32] */)
}

def @func_1303(%var_1212: Tensor[(9, 12, 1), int8], %var_1213: Tensor[(9, 12, 12), int8], %var_1226: Tensor[(27, 42), float32], %var_1245: Tensor[(768), int64], %var_1277: Tensor[(27, 42), float64]) -> (Tensor[(9, 12, 12), int8], bool, Tensor[(220), float32], Tensor[(9, 9, 14), bool], Tensor[(9, 12, 330), bool], Tensor[(9, 9, 14), bool], Tensor[(768), int64], Tensor[(9, 9, 14), bool], Tensor[(12, 4, 16), bool], Tensor[(27, 42), uint32], Tensor[(9, 9, 14), float32]) {
  %788 = cast(%var_1212, dtype="int8") /* ty=Tensor[(9, 12, 1), int8] */;
  %789 = cast(%var_1213, dtype="int8") /* ty=Tensor[(9, 12, 12), int8] */;
  %790 = cast(%var_1226, dtype="float32") /* ty=Tensor[(27, 42), float32] */;
  %791 = reshape(%790, newshape=[9, 9, 14]) /* ty=Tensor[(9, 9, 14), float32] */;
  %792 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %793 = cast(%var_1226, dtype="float32") /* ty=Tensor[(27, 42), float32] */;
  %794 = cast(meta[relay.Constant][45] /* ty=Tensor[(220), float32] */, dtype="float32") /* ty=Tensor[(220), float32] */;
  %795 = reshape(%792, newshape=[]) /* ty=bool */;
  %796 = reshape(%793, newshape=[1134, 1]) /* ty=Tensor[(1134, 1), float32] */;
  %797 = reshape(%794, newshape=[220]) /* ty=Tensor[(220), float32] */;
  %798 = @func_1075(%795, %796, %797) /* ty=(Tensor[(6, 4, 12), bool], Tensor[(11, 6, 5), float32], Tensor[(10, 3), float32], Tensor[(330), float32], Tensor[(30), float32], Tensor[(1134, 220), float32]) */;
  %799 = %798.3;
  %800 = cast(%799, dtype="bool") /* ty=Tensor[(330), bool] */;
  %801 = cast(%var_1212, dtype="bool") /* ty=Tensor[(9, 12, 1), bool] */;
  %802 = cast(%var_1245, dtype="int64") /* ty=Tensor[(768), int64] */;
  %803 = reshape(%802, newshape=[12, 4, 16]) /* ty=Tensor[(12, 4, 16), int64] */;
  %804 = @func_1116(%803) /* ty=(Tensor[(12, 4, 16), bool], Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), bool]) */;
  %805 = @func_353() /* ty=(Tensor[(9, 9, 14), bool],) */;
  %806 = cast(%var_1245, dtype="int64") /* ty=Tensor[(768), int64] */;
  %807 = reshape(%806, newshape=[12, 4, 16]) /* ty=Tensor[(12, 4, 16), int64] */;
  %808 = @func_1116(%807) /* ty=(Tensor[(12, 4, 16), bool], Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), bool]) */;
  %809 = cast(%var_1226, dtype="float64") /* ty=Tensor[(27, 42), float64] */;
  %810 = sigmoid(%809) /* ty=Tensor[(27, 42), float64] */;
  %811 = cast(%var_1277, dtype="float32") /* ty=Tensor[(27, 42), float32] */;
  %812 = shape_of(%810, dtype="int32") /* ty=Tensor[(2), int32] */;
  %813 = cast(%810, dtype="float32") /* ty=Tensor[(27, 42), float32] */;
  %814 = dyn.reshape(%811, %812, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %815 = mod(%813, %814) /* ty=Tensor[(27, 42), float32] */;
  %816 = cast(%810, dtype="uint32") /* ty=Tensor[(27, 42), uint32] */;
  %817 = shape_of(%815, dtype="int32") /* ty=Tensor[(2), int32] */;
  %818 = cast(%815, dtype="uint32") /* ty=Tensor[(27, 42), uint32] */;
  %819 = dyn.reshape(%816, %817, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %820 = subtract(%788, %789) /* ty=Tensor[(9, 12, 12), int8] */;
  %821 = @func_625(%791) /* ty=Tensor[(9, 9, 14), bool] */;
  %822 = not_equal(%800, %801) /* ty=Tensor[(9, 12, 330), bool] */;
  %823 = %804.2;
  %824 = %805.0;
  %825 = %808.0;
  %826 = subtract(%818, %819) /* ty=Tensor[(27, 42), uint32] */;
  %827 = @func_277() /* ty=Tensor[(9, 9, 14), float32] */;
  (%820, True /* ty=bool */, meta[relay.Constant][45] /* ty=Tensor[(220), float32] */, %821, %822, %823, %var_1245, %824, %825, %826, %827)
}

def @func_3123() -> (Tensor[(9, 2, 15), float64],) {
  @func_3121() /* ty=(Tensor[(9, 2, 15), float64],) */
}

def @func_3780() -> Tensor[(9, 9, 14), bool] {
  %829 = fn () -> Tensor[(9, 9, 14), bool] {
    %828 = @func_511() /* ty=(Tensor[(9, 9, 14), bool],) */;
    %828.0
  };
  %829() /* ty=Tensor[(9, 9, 14), bool] */
}

def @func_4554() -> Tensor[(9, 9, 14), bool] {
  @func_4552() /* ty=Tensor[(9, 9, 14), bool] */
}

def @func_5300() -> Tensor[(9, 9, 14), bool] {
  %830 = fn () -> Tensor[(9, 9, 14), bool] {
    @func_2135() /* ty=Tensor[(9, 9, 14), bool] */
  };
  %830() /* ty=Tensor[(9, 9, 14), bool] */
}

def @func_4786(%var_4783: Tensor[(224), uint8], %var_4784: float32, %var_4785: Tensor[(220), float32]) -> (Tensor[(9, 9, 14), float32], Tensor[(224), uint8], Tensor[(189), float64], Tensor[(224), uint8], Tensor[(9, 9, 14), bool], Tensor[(1, 30), float32], float32, Tensor[(220), float32]) {
  @func_4781(%var_4783, %var_4784, %var_4785) /* ty=(Tensor[(9, 9, 14), float32], Tensor[(224), uint8], Tensor[(189), float64], Tensor[(224), uint8], Tensor[(9, 9, 14), bool], Tensor[(1, 30), float32], float32, Tensor[(220), float32]) */
}

def @func_4621(%var_4618: Tensor[(7, 16, 15), float32], %var_4619: Tensor[(7, 16, 15), float32], %var_4620: Tensor[(1134), bool]) -> (Tensor[(7, 16, 15), float32], Tensor[(7, 16, 15), int32], Tensor[(9, 2, 15), float64], Tensor[(1134), bool]) {
  %844 = fn (%var_4596: Tensor[(7, 16, 15), float32], %var_4605: Tensor[(7, 16, 15), float32], %var_4611: Tensor[(1134), bool]) -> (Tensor[(7, 16, 15), float32], Tensor[(7, 16, 15), int32], Tensor[(9, 2, 15), float64], Tensor[(1134), bool]) {
    %831 = cast(%var_4596, dtype="float32") /* ty=Tensor[(7, 16, 15), float32] */;
    %832 = acos(%831) /* ty=Tensor[(7, 16, 15), float32] */;
    %833 = cast(%832, dtype="float32") /* ty=Tensor[(7, 16, 15), float32] */;
    %834 = cast(%var_4605, dtype="int32") /* ty=Tensor[(7, 16, 15), int32] */;
    %835 = shape_of(%832, dtype="int32") /* ty=Tensor[(3), int32] */;
    %836 = cast(%832, dtype="int32") /* ty=Tensor[(7, 16, 15), int32] */;
    %837 = dyn.reshape(%834, %835, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %838 = cast(%var_4611, dtype="bool") /* ty=Tensor[(1134), bool] */;
    %839 = reshape(%838, newshape=[9, 9, 14]) /* ty=Tensor[(9, 9, 14), bool] */;
    %840 = @func_2076(%839) /* ty=(Tensor[(9, 9, 14), float32], Tensor[(9, 2, 15), float64]) */;
    %841 = tan(%833) /* ty=Tensor[(7, 16, 15), float32] */;
    %842 = logical_xor(%836, %837) /* ty=Tensor[(7, 16, 15), int32] */;
    %843 = %840.1;
    (%841, %842, %843, %var_4611)
  };
  %844(%var_4618, %var_4619, %var_4620) /* ty=(Tensor[(7, 16, 15), float32], Tensor[(7, 16, 15), int32], Tensor[(9, 2, 15), float64], Tensor[(1134), bool]) */
}

def @func_4200() -> (Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), bool]) {
  %845 = @func_3121() /* ty=(Tensor[(9, 2, 15), float64],) */;
  %846 = @func_1326() /* ty=(Tensor[(9, 9, 14), bool],) */;
  %847 = %845.0;
  %848 = %846.0;
  (%847, %848)
}

def @func_4456() -> (Tensor[(9, 9, 14), bool], Tensor[(9, 9, 14), float32]) {
  %849 = @func_1770() /* ty=(Tensor[(9, 9, 14), float32],) */;
  %850 = @func_4354() /* ty=Tensor[(9, 9, 14), bool] */;
  %851 = %849.0;
  (%850, %851)
}

def @func_5028(%var_5025: Tensor[(2, 384), int64], %var_5026: Tensor[(2, 384), float64], %var_5027: Tensor[(2, 384), float32]) -> (Tensor[(9, 9, 14), bool], Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), bool], Tensor[(2, 384), float64], Tensor[(9, 2, 15), float64], Tensor[(9, 2, 15), float64], Tensor[(2, 384), uint64], Tensor[(9, 9, 14), float32]) {
  %878 = fn (%var_4980: Tensor[(2, 384), int64], %var_4989: Tensor[(2, 384), float64], %var_5012: Tensor[(2, 384), float32]) -> (Tensor[(9, 9, 14), bool], Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), bool], Tensor[(2, 384), float64], Tensor[(9, 2, 15), float64], Tensor[(9, 2, 15), float64], Tensor[(2, 384), uint64], Tensor[(9, 9, 14), float32]) {
    %852 = cast(%var_4980, dtype="int64") /* ty=Tensor[(2, 384), int64] */;
    %853 = reshape(%852, newshape=[12, 4, 16]) /* ty=Tensor[(12, 4, 16), int64] */;
    %854 = @func_1116(%853) /* ty=(Tensor[(12, 4, 16), bool], Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), bool]) */;
    %855 = @func_4144() /* ty=(Tensor[(9, 9, 14), bool], Tensor[(9, 2, 15), float64]) */;
    %856 = cast(%var_4980, dtype="float64") /* ty=Tensor[(2, 384), float64] */;
    %857 = cos(%856) /* ty=Tensor[(2, 384), float64] */;
    %858 = cast(%var_4989, dtype="float64") /* ty=Tensor[(2, 384), float64] */;
    %859 = shape_of(%857, dtype="int32") /* ty=Tensor[(2), int32] */;
    %860 = cast(%857, dtype="float64") /* ty=Tensor[(2, 384), float64] */;
    %861 = dyn.reshape(%858, %859, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %862 = @func_4588() /* ty=(Tensor[(9, 2, 15), float64], Tensor[(9, 2, 15), float64]) */;
    %863 = @func_3112() /* ty=(Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), float32]) */;
    %864 = cast(%857, dtype="float32") /* ty=Tensor[(2, 384), float32] */;
    %865 = erf(%864) /* ty=Tensor[(2, 384), float32] */;
    %866 = cast(%var_5012, dtype="uint64") /* ty=Tensor[(2, 384), uint64] */;
    %867 = shape_of(%865, dtype="int32") /* ty=Tensor[(2), int32] */;
    %868 = cast(%865, dtype="uint64") /* ty=Tensor[(2, 384), uint64] */;
    %869 = dyn.reshape(%866, %867, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
    %870 = @func_4354() /* ty=Tensor[(9, 9, 14), bool] */;
    %871 = %854.1;
    %872 = %855.0;
    %873 = mod(%860, %861) /* ty=Tensor[(2, 384), float64] */;
    %874 = %862.1;
    %875 = %863.0;
    %876 = right_shift(%868, %869) /* ty=Tensor[(2, 384), uint64] */;
    %877 = @func_3977() /* ty=Tensor[(9, 9, 14), float32] */;
    (%870, %871, %872, %873, %874, %875, %876, %877)
  };
  %878(%var_5025, %var_5026, %var_5027) /* ty=(Tensor[(9, 9, 14), bool], Tensor[(9, 2, 15), float64], Tensor[(9, 9, 14), bool], Tensor[(2, 384), float64], Tensor[(9, 2, 15), float64], Tensor[(9, 2, 15), float64], Tensor[(2, 384), uint64], Tensor[(9, 9, 14), float32]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

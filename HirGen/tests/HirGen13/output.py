import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_68 = relay.var("var_68", dtype = "float32", shape = (13, 3, 2))#candidate|68|(13, 3, 2)|var|float32
uop_69 = relay.cos(var_68.astype('float32')) # shape=(13, 3, 2)
output = relay.Tuple([uop_69,])
output2 = relay.Tuple([uop_69,])
func_75 = relay.Function([var_68,], output)
mod['func_75'] = func_75
mod = relay.transform.InferType()(mod)
mutated_mod['func_75'] = func_75
mutated_mod = relay.transform.InferType()(mutated_mod)
var_76 = relay.var("var_76", dtype = "float32", shape = (13, 3, 2))#candidate|76|(13, 3, 2)|var|float32
func_75_call = mutated_mod.get_global_var('func_75')
call_77 = func_75_call(var_76)
output = call_77
func_78 = relay.Function([var_76], output)
mutated_mod['func_78'] = func_78
mutated_mod = relay.transform.InferType()(mutated_mod)
var_257 = relay.var("var_257", dtype = "float32", shape = (1, 6, 5))#candidate|257|(1, 6, 5)|var|float32
var_258 = relay.var("var_258", dtype = "float32", shape = (11, 6, 5))#candidate|258|(11, 6, 5)|var|float32
bop_259 = relay.floor_mod(var_257.astype('float32'), var_258.astype('float32')) # shape=(11, 6, 5)
output = relay.Tuple([bop_259,])
output2 = relay.Tuple([bop_259,])
func_264 = relay.Function([var_257,var_258,], output)
mod['func_264'] = func_264
mod = relay.transform.InferType()(mod)
var_265 = relay.var("var_265", dtype = "float32", shape = (1, 6, 5))#candidate|265|(1, 6, 5)|var|float32
var_266 = relay.var("var_266", dtype = "float32", shape = (11, 6, 5))#candidate|266|(11, 6, 5)|var|float32
output = func_264(var_265,var_266,)
func_267 = relay.Function([var_265,var_266,], output)
mutated_mod['func_267'] = func_267
mutated_mod = relay.transform.InferType()(mutated_mod)
const_274 = relay.const([[[4.913185,2.824767,-9.407963,8.016992,5.191749,-5.388859,-5.386150,-3.324971,-5.211992,-1.288691,9.263613,6.832730,-9.532148,-3.996448],[-6.410532,-4.475302,5.690096,0.043157,-4.971794,-5.718263,6.253929,9.267117,0.207828,0.393691,4.993684,-2.267286,-1.444840,5.601739],[-9.325754,9.733064,5.133267,4.140478,4.578536,-3.982117,0.681543,-3.948561,0.570042,-3.723808,4.869055,-4.548164,4.734678,-7.430232],[5.766071,-7.351042,1.185471,-2.223501,6.963825,7.162352,-1.385588,-4.000543,-7.161778,6.709613,8.757366,-9.686786,1.960780,1.836628],[-4.601409,-3.098311,8.272044,3.087959,-2.083001,2.511998,1.193347,7.592311,-2.119231,1.966738,-0.922882,-4.609452,-0.507108,-8.776477],[-5.323523,8.098582,1.982409,-4.248639,-3.969654,0.508391,3.795723,5.161227,-6.867964,-0.300996,-5.140000,3.609224,-1.540811,-0.250282],[5.745755,-3.869060,-8.849899,-4.714788,4.008104,-5.993575,-7.299273,0.157596,-6.757427,1.069780,0.415968,4.351274,0.261147,-1.366375],[3.875187,5.659861,4.821510,-6.027075,8.700521,-5.786014,6.638717,-6.113526,-7.443830,3.084647,-7.531712,8.423440,-4.242933,-7.724867],[-6.687295,-2.064971,2.660320,-8.313426,2.991335,6.763379,2.195053,-3.856611,-7.510130,-9.936155,-4.032878,-5.947973,-4.143670,-8.385677]],[[-4.354542,5.773878,3.603431,-0.191034,8.667915,8.504876,2.320630,1.579672,-9.676197,6.033282,-4.752193,-7.441155,0.301114,-5.435005],[-2.746617,9.001754,3.115495,3.478342,-5.368311,6.592365,-3.190307,-3.894621,4.274150,-5.424684,8.250126,9.703316,-9.444148,-1.525691],[-2.600011,5.820834,7.408547,1.492141,6.099379,8.141110,4.303844,4.162037,-0.819389,0.368183,6.903367,6.716821,-4.043333,5.672415],[-8.827805,-0.184266,-9.914760,-5.778578,-5.208897,-8.144242,-1.999042,4.351152,-7.347036,-6.489523,2.833034,3.697283,7.317806,2.291326],[9.610114,-4.218392,4.233342,-1.330086,0.279831,1.811100,-9.743665,6.767175,-7.509717,-0.708542,-5.489988,2.270689,2.788495,-0.076463],[3.880112,-0.628287,-8.219881,5.444668,2.168735,2.744849,-8.656255,0.447577,-3.696215,4.329735,6.688284,-8.509098,-2.700457,3.791507],[-8.568985,8.264544,-0.987163,-4.116703,-1.331570,-5.561232,8.114583,-5.316089,-4.850209,-2.078066,2.175592,4.886336,-2.106864,-2.385231],[6.054456,-1.069213,7.872668,-0.381246,9.117565,2.939336,-9.049746,3.535865,5.355886,0.406358,7.191151,9.584842,0.664302,-8.932350],[-3.533852,3.929666,-5.882576,7.259615,2.896020,6.913723,-7.498041,-7.921484,-2.120252,-3.932072,-6.848692,-0.104401,8.977714,-4.147408]],[[-5.159186,-4.030487,8.832514,3.749304,8.205940,6.493645,-0.052760,5.423547,6.840353,7.639329,-4.562522,-5.703518,4.444159,-2.755006],[-7.589936,9.867955,7.622996,4.353419,6.916135,7.477775,1.040726,0.047069,1.545146,-4.218477,1.861150,1.198318,9.998824,-7.018296],[-3.912468,7.843319,4.144365,3.269518,0.894320,4.368254,3.421202,7.766155,2.563727,-8.704946,-1.609085,-0.264982,-6.880247,2.331790],[2.420338,-6.064085,-8.372784,-5.569923,7.781851,3.664343,-8.116248,6.831175,2.865670,-6.944588,-8.943541,3.167653,9.261729,-1.027089],[6.728461,9.904958,4.512636,-8.786415,6.356686,5.453636,7.324673,2.017338,6.496064,2.053877,-8.521827,7.180525,6.340379,7.642560],[-7.501575,-3.817271,0.150278,-3.064477,-2.354346,-4.644904,3.512334,-1.245039,-5.614518,-5.997611,-4.843565,-2.456795,0.491790,2.476235],[9.153919,1.692297,-5.916292,8.513234,7.998021,-9.466702,2.646694,-3.646473,-5.852339,8.042470,-1.306816,-7.253050,7.056797,0.702684],[5.191876,7.493281,5.396262,-0.933162,9.860215,4.461470,-4.790316,-1.395892,2.800404,-3.628969,5.725020,-1.084177,-1.049500,-1.766464],[-2.914141,-4.541335,1.795048,-7.169975,4.855361,-6.404254,-4.912779,2.585330,-7.767751,-1.915413,-9.937526,1.870761,-8.413788,-5.486780]],[[8.400844,9.816975,-4.637016,8.956889,7.517292,4.275975,-0.762385,9.683870,3.026869,5.393314,-8.607133,2.830932,3.757702,-0.660786],[2.229959,-4.997940,-8.096184,-1.666559,6.317230,-4.352341,7.189019,7.836031,7.032533,-8.573206,-1.590052,-3.166324,-6.154483,2.707328],[9.063277,0.353438,-6.880741,6.193800,4.607860,-4.111438,7.553363,-5.798350,-2.446613,-8.618994,-0.126662,-3.711764,8.776452,-7.179759],[4.884334,1.329031,1.350316,0.157253,-9.333071,-7.256128,-8.703694,-5.747838,8.787681,-6.645316,0.645368,-8.284555,8.322170,-1.686670],[0.607383,-4.106833,-4.834985,8.483230,7.240078,-6.026418,5.581652,9.938173,4.330148,8.888555,-8.729593,-0.480488,9.108947,-0.474381],[9.811345,3.177342,5.163884,8.341553,7.241905,1.786859,2.627177,-6.176838,8.406732,-7.729275,5.053985,2.569802,6.438430,4.740056],[-9.385532,-7.335456,-0.628630,2.536179,8.164884,-8.110526,8.171140,0.423516,6.546115,-7.675728,-1.113173,7.432521,-3.254965,8.745919],[-7.711052,-7.428862,-7.632475,-6.651324,-7.371886,-2.205203,3.277063,-9.614282,0.121123,3.395314,6.899875,2.390129,5.138872,-5.793189],[0.945259,7.713665,-9.940788,6.398381,-0.352198,-4.698616,4.108962,3.629813,3.923397,2.385481,5.812899,7.215468,-5.929799,-0.992346]],[[8.925395,-5.692076,2.288930,-2.683815,1.156895,-5.226312,9.403470,9.630137,-6.952989,1.037651,-6.575840,-2.522750,-8.983081,0.944799],[-1.940246,-4.853247,-3.604350,-2.238558,-4.801877,0.505161,-8.588295,-6.536862,-9.933206,-3.437856,-0.058439,-9.369343,9.939624,-0.668536],[-0.943182,-0.594713,-0.687599,-3.022974,0.537589,-9.761473,9.512594,-4.308805,2.689142,-7.886908,-2.063361,-6.718799,-7.117994,8.998369],[4.443610,7.527875,6.623352,-5.463241,-5.869816,-1.257291,-5.696860,-3.282095,1.122332,9.574832,6.685629,-9.144826,4.162770,-4.651138],[-3.249158,0.752016,2.213247,3.988813,-3.611240,-2.371217,8.248859,3.003505,2.757719,4.646173,-0.114939,-7.922259,-7.484910,4.466537],[7.259978,-6.341112,2.912641,-2.046349,-6.528071,-6.018615,8.499469,-4.574421,0.833966,-0.318478,2.402831,8.865701,9.348154,9.811059],[3.777826,3.524447,-9.767760,-8.062962,4.247694,-8.062532,-6.142548,-3.527733,-2.616885,-0.281817,-3.398626,-4.518371,0.005973,6.174355],[3.306847,-9.258892,6.653105,-6.800492,2.276062,-2.936901,9.189062,6.478320,2.324714,1.864040,-3.465120,0.821128,2.156821,-1.748422],[-3.275624,0.437111,-5.531003,-5.828919,1.422283,4.331655,0.529691,8.200281,-5.139753,-2.909164,-7.099420,2.527225,-2.787673,-7.619181]],[[9.796281,-6.943187,-9.710610,7.094296,2.220949,6.694993,-0.245803,-3.716362,-9.354402,-1.371857,-6.733583,-4.481758,9.946020,2.997537],[-9.058061,7.377818,-2.132392,5.608124,8.990511,4.949040,-1.671032,6.606144,9.001381,-8.495207,8.607626,-0.194100,-7.200796,-4.203512],[8.594622,1.411947,9.210482,8.116464,-4.178076,4.071816,9.293706,-0.272486,7.128667,6.767682,2.948552,-8.531902,-5.194907,-3.261884],[9.461941,-5.931483,-9.992706,-8.013810,-3.260168,8.664128,1.363755,-0.110266,8.933076,-3.483459,-9.409472,0.332687,-7.023346,-8.872247],[0.460627,2.426729,-7.920551,1.078402,8.364011,-7.426256,8.078180,-2.899141,-2.130829,9.522198,1.241403,-0.624004,5.077797,-4.245394],[8.652695,9.895916,3.805472,0.500504,-7.633118,8.124975,2.320530,-2.927019,9.040229,7.977495,6.046149,-0.757478,-6.013115,6.452538],[-8.903948,5.140384,-9.258250,-3.957416,2.683669,2.307358,-2.562258,4.234283,7.792423,-2.948395,-9.306561,-5.222764,9.421630,0.286558],[-0.842922,5.948490,-5.750858,-5.532020,1.918748,-9.516346,9.578590,3.220883,-5.575226,9.465926,-1.924699,3.869005,0.571132,-8.092298],[-0.125346,-5.795103,-0.720306,0.981317,9.976207,-4.915146,6.689490,6.833458,-7.877365,-8.717014,-9.341225,-6.239342,-5.045939,1.926608]],[[-8.095524,-1.587673,5.960187,9.646668,-0.671079,-7.916273,-8.220781,4.674326,-2.171903,-9.152904,9.620252,2.367377,-5.360697,-1.774802],[7.985874,-7.608618,0.698216,-9.222672,-4.052919,0.040784,2.419209,-9.581028,-8.412209,4.948497,-4.713390,7.151425,-0.482629,3.931085],[8.218591,9.206621,-0.899852,-8.484505,-7.772019,-3.070859,-2.716593,-0.608034,-3.269774,6.346870,-7.158340,5.725490,1.210941,-3.491631],[2.940372,-5.757704,0.913807,-3.394391,-8.601608,0.094586,5.071865,0.815094,4.774547,0.410037,-5.284357,-0.566498,4.012327,1.813922],[0.674798,4.316352,-0.539298,0.725478,0.424181,8.831510,-0.876837,7.130410,-3.872065,9.459650,-3.406410,5.273289,9.371157,7.363256],[7.019272,6.876971,-8.927548,-6.391837,2.659147,-4.756196,3.779221,-1.893753,-8.929070,1.044033,-5.203837,0.364479,-2.802216,2.811793],[-6.462410,-8.056462,7.334186,-4.715037,-9.108875,-3.178680,-2.878188,7.597835,-4.802601,0.543253,0.778964,-6.024612,0.974987,-1.201050],[-9.431392,-3.095494,-7.550944,0.751456,-3.124587,5.287269,-0.147135,-5.248065,-3.146551,-7.513236,8.787514,6.856945,-1.818730,-8.164676],[4.728240,4.981551,-7.957934,3.574135,9.331967,0.647666,-4.643438,-6.295331,-9.496581,-4.778092,-8.821150,-9.960487,-0.850644,-6.675379]],[[3.257812,1.383216,2.014423,-9.980886,-4.913196,-9.595466,-3.631334,9.228652,-9.126599,8.535547,9.546731,0.969853,-3.827019,3.627932],[-3.294979,-6.422801,9.612545,-2.715828,-2.583790,-2.763317,-6.080475,-9.984732,-4.990118,-9.244051,-7.294564,-6.095923,9.645126,6.417753],[0.804368,-5.187008,4.423388,2.074288,-3.922933,4.485207,-2.772854,3.254878,7.965669,-4.995296,-5.116778,-2.408030,-2.506032,-3.617881],[7.551786,-4.104154,-8.395712,-1.511457,1.960056,-7.348229,9.391331,-5.485894,-0.305246,6.967404,-9.193609,9.871842,-8.172789,0.264894],[-0.634950,-8.647607,4.200824,-3.284372,3.823308,4.590749,-2.647300,5.728454,-3.414554,-6.416416,7.772363,-3.483401,0.793587,-7.026842],[0.470005,-4.031959,8.953671,9.026840,2.273060,3.758768,-6.689708,1.630808,-9.299604,5.052209,8.123404,3.747398,4.220108,-6.729381],[-1.943232,-1.044272,-7.355361,9.787132,8.213707,-7.498536,5.360752,0.018221,6.017667,-5.937275,7.921438,-0.505542,2.483358,-8.346496],[3.994788,4.643343,2.581498,2.471646,3.114611,-7.039510,-6.027092,4.434133,-2.721520,7.075843,-6.550834,9.702906,0.151414,-7.223773],[-8.166468,7.820829,1.893943,1.543667,-4.206972,-8.477047,6.970365,-5.359776,3.070477,2.694569,1.758377,0.020590,8.887306,5.993482]],[[-2.079083,3.859042,-2.217212,-3.385606,-6.560249,4.718545,2.792451,-7.138646,-9.341870,-8.377273,-5.346985,2.603842,-1.429769,4.665568],[9.649321,5.610897,-6.355496,-9.126129,9.371767,-2.549129,-4.760532,4.836458,9.556020,2.709723,-1.695205,-0.868204,2.415868,-3.692337],[-4.538527,1.153768,2.137518,-5.993610,-5.306845,-7.858123,6.112793,7.258061,-8.050613,8.268365,-1.725467,2.857813,-7.868254,5.097233],[8.480448,-5.910250,-0.282530,-7.919319,-8.289622,2.376328,0.037492,-1.462409,6.826538,1.165476,-7.343890,8.557347,3.124113,-0.018677],[-6.478898,1.734657,2.228856,-5.533885,-0.724736,7.744603,8.589880,9.710766,0.497113,3.117220,8.729459,-1.492391,-2.669132,-2.079408],[0.407310,4.888465,-3.820286,2.194826,-5.814660,6.700882,-5.800634,5.331566,-9.654397,3.747250,6.726925,-1.635230,9.961951,-2.666839],[-0.670684,3.968110,4.513756,-2.048418,6.706905,-2.266815,1.208047,-5.588899,-7.730197,8.790006,-7.449612,-7.647890,0.683731,-0.005896],[-1.902052,-5.686141,4.193859,-8.390717,9.470761,1.956157,-5.530478,-2.917150,9.462917,-0.556247,8.403122,-9.197565,-0.334287,3.406547],[0.089718,-5.956212,-7.584043,6.739666,-4.245144,9.013142,-4.488849,-3.867098,-7.819072,-1.333631,-8.952470,5.337010,-4.094216,8.122267]]], dtype = "float32")#candidate|274|(9, 9, 14)|const|float32
uop_275 = relay.sigmoid(const_274.astype('float32')) # shape=(9, 9, 14)
output = uop_275
output2 = uop_275
func_277 = relay.Function([], output)
mod['func_277'] = func_277
mod = relay.transform.InferType()(mod)
output = func_277()
func_278 = relay.Function([], output)
mutated_mod['func_278'] = func_278
mutated_mod = relay.transform.InferType()(mutated_mod)
func_277_call = mod.get_global_var('func_277')
func_278_call = mutated_mod.get_global_var('func_278')
call_317 = func_277_call()
call_318 = func_277_call()
uop_322 = relay.sin(call_317.astype('float64')) # shape=(9, 9, 14)
uop_324 = relay.sin(call_318.astype('float64')) # shape=(9, 9, 14)
bop_328 = relay.not_equal(uop_322.astype('bool'), relay.reshape(call_317.astype('bool'), relay.shape_of(uop_322))) # shape=(9, 9, 14)
bop_331 = relay.not_equal(uop_324.astype('bool'), relay.reshape(call_318.astype('bool'), relay.shape_of(uop_324))) # shape=(9, 9, 14)
output = relay.Tuple([bop_328,])
output2 = relay.Tuple([bop_331,])
func_353 = relay.Function([], output)
mod['func_353'] = func_353
mod = relay.transform.InferType()(mod)
output = func_353()
func_354 = relay.Function([], output)
mutated_mod['func_354'] = func_354
mutated_mod = relay.transform.InferType()(mutated_mod)
const_381 = relay.const([[[-8.178608,-0.719237,-0.180916,1.987198,-3.256727,6.543674,7.267339,-7.148913,1.381086,-8.353496,-1.709868,0.109790],[2.662301,-8.114546,-0.721569,-9.847300,-1.544370,-6.965728,-8.819070,-4.213879,-8.646707,-8.760319,-0.688894,-3.375922],[-1.636059,-2.157962,7.707545,-6.424160,-0.984821,-5.502936,-0.092992,4.155906,4.226175,0.081000,-5.814471,8.201129],[4.794893,-4.496499,-7.537562,1.389609,4.631029,8.899921,1.525333,-7.240404,-8.350023,9.425876,4.532789,2.635326],[-2.151875,-8.251086,7.157399,-8.264570,-4.090071,-1.972750,8.892042,8.580124,6.078308,7.345504,-2.850918,-0.267874]],[[-5.643062,7.555667,2.176875,-9.603966,2.351727,-0.131918,-7.452358,-2.226348,3.494036,7.631879,-1.133770,5.051721],[-7.526352,3.731866,-3.000202,7.787669,0.612714,4.477908,-4.993651,-1.671924,-6.254204,-7.423458,1.673750,1.030149],[2.999512,9.519951,4.438852,2.356776,6.790117,-6.869588,-0.804323,-3.604746,-1.454478,-6.493131,-8.697058,7.578465],[4.613582,9.436821,-1.873278,9.823233,-4.640358,3.573195,-8.711327,3.138671,1.949300,0.230321,7.268211,9.096007],[5.251756,-9.565159,9.518971,3.936248,3.240671,8.840447,6.538330,2.420193,-0.543347,-8.059093,7.223674,-2.108504]],[[4.743658,0.897428,-3.983709,5.102485,-2.212788,6.980587,6.670969,7.660873,5.624819,-4.354807,9.011742,-1.349564],[-2.018993,-3.845389,-3.226218,6.267940,2.061843,7.766081,6.421883,1.743941,-3.847783,3.129639,2.478359,1.329889],[-4.432236,-9.390417,9.265568,1.523661,1.221895,-9.953547,-8.475490,0.586086,-8.373381,1.749171,5.362505,5.959962],[8.132083,5.012185,5.777290,-9.876674,-9.792658,-1.944420,5.171199,-1.453233,2.003913,9.388140,-9.309254,1.926399],[7.846803,-1.623623,-7.968118,-1.809887,4.371418,-1.316858,-1.765973,-2.487455,9.664886,1.852766,-9.708006,5.746297]],[[-3.994711,3.664271,-3.266279,6.271982,-3.077993,-8.781275,8.341968,-8.881860,4.990164,-6.854553,0.393055,-1.353525],[2.718500,-4.736794,7.977190,8.522530,-2.606830,-0.465255,-0.706602,-3.854921,-9.590474,2.410724,4.307459,-7.313279],[-8.354942,0.464388,9.723272,8.167525,2.356212,-8.547706,2.495684,-6.921969,-2.814764,-7.423315,-4.290406,6.818586],[-3.954624,-3.109499,4.117973,-9.430145,8.646163,4.300219,8.201652,4.107352,-3.181481,-8.427127,-1.123041,0.887907],[0.251498,3.012771,-0.384829,-7.467696,2.325078,1.685168,9.917890,-8.692680,6.652256,4.564564,-5.458743,5.001558]],[[-4.663646,0.211974,-3.808911,-5.758231,-1.165007,9.009414,-0.940896,5.342443,-8.823455,-0.406513,-9.669741,3.590917],[2.575414,7.822169,7.262524,-1.594979,-2.352890,-7.151043,4.066208,-1.587791,-6.318686,-4.031115,-9.982718,-4.629344],[-2.482438,-4.473537,-8.088507,-2.369562,9.651496,6.196765,-5.746163,-4.111045,2.593948,2.508871,4.322076,3.052415],[5.535666,7.779113,1.810439,1.072453,-2.409485,4.986319,7.623360,-3.956245,3.950264,3.467107,-6.433416,-9.755829],[9.784229,-1.697252,6.590963,-4.708864,7.312300,-8.837781,-1.600017,9.459717,-3.273854,9.678499,-1.343778,-9.308104]],[[0.533285,-4.019088,9.394617,-8.624024,-0.690160,-8.355571,-4.152697,0.929700,-1.347266,-2.199666,1.524318,7.139572],[-1.125888,6.320773,2.153959,-1.100871,9.565741,-2.769369,4.748311,6.611719,1.036062,-9.624248,7.255483,5.550933],[9.665754,-1.764732,9.321755,-5.810117,-5.042300,9.212073,1.306089,-2.276718,-5.440493,-9.081831,5.290432,0.265222],[4.624436,-1.505546,2.981568,-1.721374,-8.611850,2.072868,-4.762898,5.571611,0.823089,-4.724298,9.416034,-3.922522],[6.884575,0.858362,-8.515745,3.081373,-0.002485,-8.729017,-4.692391,5.358161,6.815692,-9.361658,-1.464395,-8.971094]],[[-9.997990,0.114865,-8.829049,1.217748,-1.024097,-8.062546,-8.879687,-8.714833,-9.284198,-1.328505,6.014400,5.928367],[3.284405,-1.107355,9.658970,2.904700,-4.660682,3.142151,-8.449912,-0.032584,-8.350219,-3.028900,7.876008,8.027663],[1.542013,-0.500578,9.258649,-4.779931,1.930367,4.137595,4.320480,0.125787,2.136777,-5.024746,0.323546,-5.637508],[-1.500411,-8.574384,7.831179,5.269813,-0.189329,8.608184,6.439561,-6.740984,-3.994155,9.204623,-7.858862,7.126988],[-2.893711,-9.853195,2.744530,2.734606,0.646125,2.285873,1.092329,4.936481,-8.963279,-6.426359,-2.508726,-9.510405]]], dtype = "float64")#candidate|381|(7, 5, 12)|const|float64
uop_382 = relay.cosh(const_381.astype('float64')) # shape=(7, 5, 12)
uop_386 = relay.log10(const_381.astype('float32')) # shape=(7, 5, 12)
func_264_call = mod.get_global_var('func_264')
func_267_call = mutated_mod.get_global_var('func_267')
var_392 = relay.var("var_392", dtype = "float32", shape = (30,))#candidate|392|(30,)|var|float32
var_393 = relay.var("var_393", dtype = "float32", shape = (330,))#candidate|393|(330,)|var|float32
call_391 = relay.TupleGetItem(func_264_call(relay.reshape(var_392.astype('float32'), [1, 6, 5]), relay.reshape(var_393.astype('float32'), [11, 6, 5]), ), 0)
call_394 = relay.TupleGetItem(func_267_call(relay.reshape(var_392.astype('float32'), [1, 6, 5]), relay.reshape(var_393.astype('float32'), [11, 6, 5]), ), 0)
func_75_call = mod.get_global_var('func_75')
func_78_call = mutated_mod.get_global_var('func_78')
var_396 = relay.var("var_396", dtype = "float32", shape = (13, 6))#candidate|396|(13, 6)|var|float32
call_395 = relay.TupleGetItem(func_75_call(relay.reshape(var_396.astype('float32'), [13, 3, 2])), 0)
call_397 = relay.TupleGetItem(func_78_call(relay.reshape(var_396.astype('float32'), [13, 3, 2])), 0)
bop_404 = relay.mod(call_395.astype('float32'), relay.reshape(var_396.astype('float32'), relay.shape_of(call_395))) # shape=(13, 3, 2)
bop_407 = relay.mod(call_397.astype('float32'), relay.reshape(var_396.astype('float32'), relay.shape_of(call_397))) # shape=(13, 3, 2)
func_75_call = mod.get_global_var('func_75')
func_78_call = mutated_mod.get_global_var('func_78')
call_412 = relay.TupleGetItem(func_75_call(relay.reshape(bop_404.astype('float32'), [13, 3, 2])), 0)
call_413 = relay.TupleGetItem(func_78_call(relay.reshape(bop_404.astype('float32'), [13, 3, 2])), 0)
func_264_call = mod.get_global_var('func_264')
func_267_call = mutated_mod.get_global_var('func_267')
call_420 = relay.TupleGetItem(func_264_call(relay.reshape(var_392.astype('float32'), [1, 6, 5]), relay.reshape(call_391.astype('float32'), [11, 6, 5]), ), 0)
call_421 = relay.TupleGetItem(func_267_call(relay.reshape(var_392.astype('float32'), [1, 6, 5]), relay.reshape(call_391.astype('float32'), [11, 6, 5]), ), 0)
output = relay.Tuple([uop_382,uop_386,call_391,var_392,var_393,bop_404,call_412,call_420,])
output2 = relay.Tuple([uop_382,uop_386,call_394,var_392,var_393,bop_407,call_413,call_421,])
func_427 = relay.Function([var_392,var_393,var_396,], output)
mod['func_427'] = func_427
mod = relay.transform.InferType()(mod)
var_428 = relay.var("var_428", dtype = "float32", shape = (30,))#candidate|428|(30,)|var|float32
var_429 = relay.var("var_429", dtype = "float32", shape = (330,))#candidate|429|(330,)|var|float32
var_430 = relay.var("var_430", dtype = "float32", shape = (13, 6))#candidate|430|(13, 6)|var|float32
output = func_427(var_428,var_429,var_430,)
func_431 = relay.Function([var_428,var_429,var_430,], output)
mutated_mod['func_431'] = func_431
mutated_mod = relay.transform.InferType()(mutated_mod)
func_353_call = mod.get_global_var('func_353')
func_354_call = mutated_mod.get_global_var('func_354')
call_509 = relay.TupleGetItem(func_353_call(), 0)
call_510 = relay.TupleGetItem(func_354_call(), 0)
output = relay.Tuple([call_509,])
output2 = relay.Tuple([call_510,])
func_511 = relay.Function([], output)
mod['func_511'] = func_511
mod = relay.transform.InferType()(mod)
output = func_511()
func_512 = relay.Function([], output)
mutated_mod['func_512'] = func_512
mutated_mod = relay.transform.InferType()(mutated_mod)
var_557 = relay.var("var_557", dtype = "float32", shape = ())#candidate|557|()|var|float32
const_558 = relay.const([[[-2.056698,6.985030,-7.620107,7.319658,7.706542,-9.847544,-4.230268,-1.152119,2.895658,-3.531975,1.358735],[4.151345,6.414403,9.044314,-8.419567,-4.232020,6.083288,-0.252166,6.955986,-2.023173,3.191941,1.358916],[-5.774519,-2.422995,0.104621,-2.596673,5.040681,-4.793537,0.843698,5.593127,-5.111134,-3.258511,-9.527612],[7.753625,6.450219,-9.293927,-6.221120,-8.991490,2.874532,-5.991444,9.071470,0.097570,-8.235269,-7.881605]],[[9.743807,-0.607100,4.203988,-9.146015,0.053413,5.006378,2.828760,-7.900316,1.054570,-5.218097,8.706853],[6.631773,9.612885,-8.522461,-7.350419,-8.273159,-2.023402,1.338132,0.988817,5.117403,0.740660,8.068932],[-4.429873,-9.521029,-9.525845,-3.970918,-9.954025,2.144132,-6.739968,1.330683,-0.281503,1.737306,-2.398607],[-7.945882,-9.526374,7.772704,-0.843987,-8.094636,-1.931420,-6.079287,-5.456061,-5.903687,-3.744087,-9.681743]],[[5.939527,-5.608550,7.724624,3.972018,-1.417490,-2.614579,2.451499,3.763914,-2.043935,3.838008,-6.878674],[-9.958918,-2.331681,7.277396,-9.655152,-5.943610,-6.730023,0.157294,-7.314620,1.356259,-6.604066,1.863558],[0.536424,7.816513,-7.954657,-9.159015,-8.767912,7.664121,-0.442507,1.396997,9.136595,-6.457319,-7.038143],[3.598995,-1.371370,-9.427672,-2.820252,7.983765,-7.703461,-1.862654,7.075202,0.211423,5.891912,-1.526119]],[[-3.348530,-8.328677,6.808723,5.459950,-6.604805,-2.637795,6.209158,3.818756,-1.138786,-4.981471,0.118347],[-1.406313,0.942786,-3.707857,-6.247047,-3.253921,-1.080648,-8.758428,-2.038130,-5.872418,6.956610,5.944899],[8.917583,-4.854117,3.713311,-6.394113,8.194366,8.814746,-0.198271,5.877884,6.712956,2.661737,-9.148185],[2.123738,7.560645,1.279081,5.150857,-8.635911,6.251688,-2.105501,3.143132,2.751688,6.229247,9.715848]],[[-9.605886,6.249978,6.441373,-4.957060,-1.907953,-4.811725,6.836158,-7.209786,-4.315008,2.878721,-1.450818],[0.537868,-0.147028,-6.916840,4.613508,1.184682,7.204824,1.883161,-9.692955,-3.725415,-7.594370,-7.132404],[3.503590,-8.661509,7.415879,3.329170,7.373669,6.740509,-2.208058,-4.405390,-7.249662,4.046461,-2.373182],[-9.987225,-0.299762,8.796932,8.483390,-7.383547,3.485220,-6.116986,-5.520923,-6.465066,-1.235980,4.046415]]], dtype = "float32")#candidate|558|(5, 4, 11)|const|float32
bop_559 = relay.minimum(var_557.astype('float32'), const_558.astype('float32')) # shape=(5, 4, 11)
var_568 = relay.var("var_568", dtype = "float32", shape = (5, 4, 11))#candidate|568|(5, 4, 11)|var|float32
bop_569 = relay.bitwise_xor(bop_559.astype('int64'), relay.reshape(var_568.astype('int64'), relay.shape_of(bop_559))) # shape=(5, 4, 11)
uop_575 = relay.tan(bop_569.astype('float32')) # shape=(5, 4, 11)
output = uop_575
output2 = uop_575
func_578 = relay.Function([var_557,var_568,], output)
mod['func_578'] = func_578
mod = relay.transform.InferType()(mod)
mutated_mod['func_578'] = func_578
mutated_mod = relay.transform.InferType()(mutated_mod)
func_578_call = mutated_mod.get_global_var('func_578')
var_580 = relay.var("var_580", dtype = "float32", shape = ())#candidate|580|()|var|float32
var_581 = relay.var("var_581", dtype = "float32", shape = (5, 4, 11))#candidate|581|(5, 4, 11)|var|float32
call_579 = func_578_call(var_580,var_581,)
output = call_579
func_582 = relay.Function([var_580,var_581,], output)
mutated_mod['func_582'] = func_582
mutated_mod = relay.transform.InferType()(mutated_mod)
func_277_call = mod.get_global_var('func_277')
func_278_call = mutated_mod.get_global_var('func_278')
call_603 = func_277_call()
call_604 = func_277_call()
var_617 = relay.var("var_617", dtype = "float32", shape = (9, 9, 14))#candidate|617|(9, 9, 14)|var|float32
bop_618 = relay.less_equal(call_603.astype('bool'), relay.reshape(var_617.astype('bool'), relay.shape_of(call_603))) # shape=(9, 9, 14)
bop_621 = relay.less_equal(call_604.astype('bool'), relay.reshape(var_617.astype('bool'), relay.shape_of(call_604))) # shape=(9, 9, 14)
output = bop_618
output2 = bop_621
func_625 = relay.Function([var_617,], output)
mod['func_625'] = func_625
mod = relay.transform.InferType()(mod)
mutated_mod['func_625'] = func_625
mutated_mod = relay.transform.InferType()(mutated_mod)
var_626 = relay.var("var_626", dtype = "float32", shape = (9, 9, 14))#candidate|626|(9, 9, 14)|var|float32
func_625_call = mutated_mod.get_global_var('func_625')
call_627 = func_625_call(var_626)
output = call_627
func_628 = relay.Function([var_626], output)
mutated_mod['func_628'] = func_628
mutated_mod = relay.transform.InferType()(mutated_mod)
const_717 = relay.const([[[-6.053720,-8.239666,-1.391013,-9.075734,1.946560,4.590379,2.930607,5.582731,0.290699,-2.988251,-5.629378,-8.835939,9.173155,9.519327,-8.149647],[4.071740,6.737606,-7.914520,-9.440349,-0.031086,-6.912002,6.179342,-0.591997,-7.546283,-9.784082,7.658158,-5.818043,6.667422,-8.723357,-8.731642]],[[1.313195,5.114307,2.072980,-2.697176,5.299107,2.921579,6.904640,7.651851,6.163633,1.667330,-7.225728,-4.404489,-7.212802,6.756651,-2.785728],[-0.212190,3.199421,-1.311678,3.905758,-8.786710,8.213321,-9.142819,-2.142611,7.409049,-2.219499,-3.236529,6.462043,4.302483,-7.899761,-2.723977]],[[-1.784520,-8.875929,-0.307634,-8.724950,3.943660,-1.657508,-8.847700,5.336065,2.745145,-1.617011,-6.376911,-2.622097,-7.643990,9.170442,-3.619590],[6.060489,-8.991164,0.919095,5.384199,1.328466,-8.757522,1.189928,-0.290380,-2.522396,3.030433,0.520810,7.869733,5.008678,6.091022,-1.221203]],[[-3.872492,-6.664893,9.865110,-7.246202,3.135925,5.023620,4.923174,-5.066343,-0.662086,8.162087,-1.929178,8.649730,6.336244,7.721268,0.693919],[-6.204272,5.422244,1.720238,-5.668347,9.563225,2.365435,-6.354047,-6.372161,-7.631579,1.401104,-0.521035,5.799546,5.335911,8.956284,7.918770]],[[-0.122339,-9.280647,2.451776,-6.118523,3.483443,4.650777,-5.710012,-7.459160,9.512153,8.010248,-8.931701,-5.678901,1.743069,-3.488783,-0.764240],[-8.342634,-2.718262,-4.354605,-9.983109,4.356637,6.700728,-1.910200,-2.584884,-2.025682,3.377435,-9.134919,6.837757,9.035527,-9.435350,3.881682]],[[-7.877262,3.963245,2.233703,-2.188527,-3.696203,4.277458,-5.006208,-5.150775,-3.128434,-3.414621,-9.995662,-0.745526,8.356158,6.887851,0.106805],[-5.798722,-2.194003,-2.977559,-3.047932,1.323856,2.532914,-6.552992,-4.899536,-0.004741,0.385149,-8.599412,-6.931194,2.591527,8.473800,7.709460]],[[-8.151078,-3.651786,-0.744954,-9.078614,6.324770,1.113996,-9.604215,-3.799484,-1.823506,-1.017842,-5.460732,-4.541620,6.796357,-6.186581,-4.176167],[2.547784,-3.552134,5.436645,8.466726,6.159377,6.004045,5.671942,-2.398818,-1.407829,-1.293167,-6.170098,9.933725,7.949821,-2.929810,4.491403]],[[-6.124054,0.114220,-1.676272,5.391918,-5.928823,-7.979955,5.588259,-9.158010,-4.568997,4.594120,7.120771,3.057356,-1.827437,4.715420,-8.975844],[1.458475,1.982016,1.841273,9.337847,0.968946,6.691348,4.431794,0.911849,-9.307887,-5.160250,6.519027,8.080772,-7.171627,6.688616,1.087849]],[[6.825575,-7.131454,3.080179,-1.910509,-0.878290,1.946777,-0.019161,1.302112,-4.725546,4.746242,1.516229,-1.033174,0.540088,-5.601194,-4.807589],[-2.046800,-4.955555,-5.709253,2.218569,-4.464768,0.995215,1.452255,-3.113159,9.828813,1.926190,3.793660,1.744543,4.840055,-6.687927,-3.858202]]], dtype = "float64")#candidate|717|(9, 2, 15)|const|float64
uop_718 = relay.log10(const_717.astype('float64')) # shape=(9, 2, 15)
output = relay.Tuple([uop_718,])
output2 = relay.Tuple([uop_718,])
func_722 = relay.Function([], output)
mod['func_722'] = func_722
mod = relay.transform.InferType()(mod)
mutated_mod['func_722'] = func_722
mutated_mod = relay.transform.InferType()(mutated_mod)
func_722_call = mutated_mod.get_global_var('func_722')
call_723 = func_722_call()
output = call_723
func_724 = relay.Function([], output)
mutated_mod['func_724'] = func_724
mutated_mod = relay.transform.InferType()(mutated_mod)
func_277_call = mod.get_global_var('func_277')
func_278_call = mutated_mod.get_global_var('func_278')
call_813 = func_277_call()
call_814 = func_277_call()
var_828 = relay.var("var_828", dtype = "float32", shape = (9, 9, 14))#candidate|828|(9, 9, 14)|var|float32
bop_829 = relay.divide(call_813.astype('float64'), relay.reshape(var_828.astype('float64'), relay.shape_of(call_813))) # shape=(9, 9, 14)
bop_832 = relay.divide(call_814.astype('float64'), relay.reshape(var_828.astype('float64'), relay.shape_of(call_814))) # shape=(9, 9, 14)
func_625_call = mod.get_global_var('func_625')
func_628_call = mutated_mod.get_global_var('func_628')
call_838 = func_625_call(relay.reshape(var_828.astype('float32'), [9, 9, 14]))
call_839 = func_625_call(relay.reshape(var_828.astype('float32'), [9, 9, 14]))
func_427_call = mod.get_global_var('func_427')
func_431_call = mutated_mod.get_global_var('func_431')
var_849 = relay.var("var_849", dtype = "float32", shape = (30,))#candidate|849|(30,)|var|float32
const_850 = relay.const([[6.450029,5.137835,-5.489207,3.927947,4.317202,-6.643949],[-9.591366,4.792024,-5.930454,1.556222,-3.379878,9.147133],[2.252508,-2.587052,-0.785173,-3.904814,-5.749159,7.403036],[-3.993322,4.290600,-7.353953,8.868564,4.840241,0.479301],[6.165056,6.557781,-0.848941,2.643013,1.031338,3.447924],[-8.856153,-1.908797,0.586587,0.036193,-2.149875,-2.450597],[6.191182,2.587872,-1.995656,-1.764991,3.140003,-7.216338],[-3.086251,0.594002,2.976227,1.708257,6.234268,-2.899185],[-3.788308,-2.721513,3.060164,0.775100,-3.184391,9.778563],[-8.319748,1.430103,-2.013244,2.590117,5.140998,-3.754873],[-2.646522,1.569231,6.485859,-7.232434,6.091799,7.622178],[7.160204,3.162985,5.219539,5.958599,-8.042467,-3.948360],[-6.929425,-0.658504,-1.536683,-1.766263,-9.616846,-8.273435],[5.288714,0.697046,-9.542216,5.431381,-8.245247,3.928587],[-0.493026,5.355223,7.057780,7.005921,6.433057,-0.909660],[-8.846593,-4.224235,-3.035977,8.129386,-5.984414,-5.050441],[5.490329,-1.547281,6.217140,5.787991,-5.228576,-4.815523],[-1.625818,8.627543,5.582044,-2.245642,-5.673441,6.647501],[9.098767,5.666268,2.741710,-5.726077,7.605665,-3.173871],[3.820293,-2.998164,-3.100259,3.894859,-4.795143,5.892345],[-0.271415,-3.154490,-2.916590,7.703511,-3.620971,2.822210],[1.955909,-9.569919,2.128560,8.393931,-3.446563,-5.676128],[-6.128383,-8.419975,2.824682,2.284355,8.976721,-7.289195],[1.635593,0.842464,-8.741149,6.421888,2.476857,7.571860],[6.305096,5.278280,-2.812750,-1.459038,7.527234,-7.120081],[-6.272712,6.098093,4.814360,-2.642677,5.471058,-4.768935],[-4.219450,8.137401,3.746162,-5.328098,9.135591,-1.991652],[-3.541473,8.908748,5.971877,-3.956654,7.438862,8.603291],[6.747924,2.155558,-5.604947,4.511634,4.497963,-7.527941],[9.860732,9.648366,-7.719443,-2.362827,2.140675,-2.023548],[8.320930,-9.899631,-2.934746,7.291133,7.976008,0.562060],[-2.213814,8.343410,9.082799,-5.290657,-7.375455,-1.375727],[-9.743729,0.089912,-0.498933,-8.980486,-9.340910,-9.861917],[0.943868,1.281022,-0.699394,-6.950132,1.033956,-7.618928],[4.354594,4.268260,0.462476,-3.073206,-9.332404,8.877574],[4.022660,1.701399,-5.568315,9.398607,4.326871,2.533720],[8.293357,8.564746,1.109540,2.923255,-1.826041,-0.720849],[-1.856670,5.421636,8.677323,4.652423,2.675683,-3.671728],[-1.318048,5.513025,-8.763197,6.336228,-6.555325,-0.972856],[4.308388,-4.991810,-0.174753,6.800011,6.422762,-2.097374],[3.679192,7.907730,-6.177762,-2.104459,9.030554,-8.460098],[-9.572452,4.967646,-7.601618,-2.853962,-7.793591,-9.392105],[-8.816876,7.576133,-5.706257,-7.720256,-4.695842,-2.095953],[1.644237,7.788261,-7.386491,6.958538,-7.219075,1.813578],[-0.645301,-3.404303,-3.734460,-6.133587,-4.048670,-4.623240],[8.295084,-6.098294,3.899320,-8.629849,8.413833,9.322496],[4.625008,5.464715,-5.641587,8.881434,-6.508182,6.854357],[-1.262295,2.242278,1.300011,1.007215,-2.314839,-7.202127],[1.713745,4.946863,5.241799,-6.962116,6.999199,-9.594146],[7.896304,-8.864599,3.132545,-9.516067,9.442092,-7.601677],[-5.989030,3.319999,3.984240,-5.388598,-8.781793,9.943677],[-2.439171,2.837814,3.215445,6.489545,3.588959,8.379462],[9.735618,-7.876094,7.575354,-6.064729,-4.985726,7.285519],[3.323969,-3.136808,5.961446,4.435553,-6.497245,5.788886],[-0.170934,-1.419019,-4.335362,-5.148040,1.444229,6.357298]], dtype = "float32")#candidate|850|(55, 6)|const|float32
const_851 = relay.const([[3.496430,2.324792,8.264040,-9.675594,5.325653,6.156889,-0.132329,4.086230,4.773181,-0.405229,-7.222243,-5.151039,7.853739,6.948506,0.049124,5.889465,4.322540,8.788202,5.465443,-5.835892,-7.149445,0.632643,3.323391,6.771911,-6.511351,0.627583,6.456166,-9.563116,5.596926,5.281481,6.836404,-7.552189,8.636232,4.748401,9.025026,9.251255,2.540734,-9.851768,-7.623362,1.940031,-1.022335,4.517500,-5.463987,-1.999504,1.940903,-6.857515,-6.093563,4.109614,-5.181421,-2.253776,-4.305152,5.445082,-2.157030,0.863826,8.397131,5.528237,0.393487,-6.762078,3.247642,0.845274,-0.642899,5.415965,-0.049499,-7.610221,6.813883,-4.562462,2.650735,1.694422,-8.389638,-2.554284,6.751055,6.132601,-3.139364,-5.542259,-9.936551,-8.613426,6.080678,3.732682]], dtype = "float32")#candidate|851|(1, 78)|const|float32
call_848 = relay.TupleGetItem(func_427_call(relay.reshape(var_849.astype('float32'), [30,]), relay.reshape(const_850.astype('float32'), [330,]), relay.reshape(const_851.astype('float32'), [13, 6]), ), 6)
call_852 = relay.TupleGetItem(func_431_call(relay.reshape(var_849.astype('float32'), [30,]), relay.reshape(const_850.astype('float32'), [330,]), relay.reshape(const_851.astype('float32'), [13, 6]), ), 6)
func_578_call = mod.get_global_var('func_578')
func_582_call = mutated_mod.get_global_var('func_582')
var_859 = relay.var("var_859", dtype = "float32", shape = ())#candidate|859|()|var|float32
var_860 = relay.var("var_860", dtype = "float32", shape = (220,))#candidate|860|(220,)|var|float32
call_858 = func_578_call(relay.reshape(var_859.astype('float32'), []), relay.reshape(var_860.astype('float32'), [5, 4, 11]), )
call_861 = func_578_call(relay.reshape(var_859.astype('float32'), []), relay.reshape(var_860.astype('float32'), [5, 4, 11]), )
func_353_call = mod.get_global_var('func_353')
func_354_call = mutated_mod.get_global_var('func_354')
call_865 = relay.TupleGetItem(func_353_call(), 0)
call_866 = relay.TupleGetItem(func_354_call(), 0)
func_722_call = mod.get_global_var('func_722')
func_724_call = mutated_mod.get_global_var('func_724')
call_871 = relay.TupleGetItem(func_722_call(), 0)
call_872 = relay.TupleGetItem(func_724_call(), 0)
output = relay.Tuple([bop_829,call_838,call_848,var_849,const_850,const_851,call_858,var_859,var_860,call_865,call_871,])
output2 = relay.Tuple([bop_832,call_839,call_852,var_849,const_850,const_851,call_861,var_859,var_860,call_866,call_872,])
func_876 = relay.Function([var_828,var_849,var_859,var_860,], output)
mod['func_876'] = func_876
mod = relay.transform.InferType()(mod)
var_877 = relay.var("var_877", dtype = "float32", shape = (9, 9, 14))#candidate|877|(9, 9, 14)|var|float32
var_878 = relay.var("var_878", dtype = "float32", shape = (30,))#candidate|878|(30,)|var|float32
var_879 = relay.var("var_879", dtype = "float32", shape = ())#candidate|879|()|var|float32
var_880 = relay.var("var_880", dtype = "float32", shape = (220,))#candidate|880|(220,)|var|float32
output = func_876(var_877,var_878,var_879,var_880,)
func_881 = relay.Function([var_877,var_878,var_879,var_880,], output)
mutated_mod['func_881'] = func_881
mutated_mod = relay.transform.InferType()(mutated_mod)
func_511_call = mod.get_global_var('func_511')
func_512_call = mutated_mod.get_global_var('func_512')
call_915 = relay.TupleGetItem(func_511_call(), 0)
call_916 = relay.TupleGetItem(func_512_call(), 0)
var_920 = relay.var("var_920", dtype = "bool", shape = (9, 9, 14))#candidate|920|(9, 9, 14)|var|bool
bop_921 = relay.minimum(call_915.astype('uint16'), relay.reshape(var_920.astype('uint16'), relay.shape_of(call_915))) # shape=(9, 9, 14)
bop_924 = relay.minimum(call_916.astype('uint16'), relay.reshape(var_920.astype('uint16'), relay.shape_of(call_916))) # shape=(9, 9, 14)
func_511_call = mod.get_global_var('func_511')
func_512_call = mutated_mod.get_global_var('func_512')
call_928 = relay.TupleGetItem(func_511_call(), 0)
call_929 = relay.TupleGetItem(func_512_call(), 0)
output = relay.Tuple([bop_921,call_928,])
output2 = relay.Tuple([bop_924,call_929,])
func_930 = relay.Function([var_920,], output)
mod['func_930'] = func_930
mod = relay.transform.InferType()(mod)
var_931 = relay.var("var_931", dtype = "bool", shape = (9, 9, 14))#candidate|931|(9, 9, 14)|var|bool
output = func_930(var_931)
func_932 = relay.Function([var_931], output)
mutated_mod['func_932'] = func_932
mutated_mod = relay.transform.InferType()(mutated_mod)
func_722_call = mod.get_global_var('func_722')
func_724_call = mutated_mod.get_global_var('func_724')
call_945 = relay.TupleGetItem(func_722_call(), 0)
call_946 = relay.TupleGetItem(func_724_call(), 0)
func_930_call = mod.get_global_var('func_930')
func_932_call = mutated_mod.get_global_var('func_932')
var_956 = relay.var("var_956", dtype = "bool", shape = (1134,))#candidate|956|(1134,)|var|bool
call_955 = relay.TupleGetItem(func_930_call(relay.reshape(var_956.astype('bool'), [9, 9, 14])), 0)
call_957 = relay.TupleGetItem(func_932_call(relay.reshape(var_956.astype('bool'), [9, 9, 14])), 0)
bop_970 = relay.greater(call_955.astype('bool'), relay.reshape(var_956.astype('bool'), relay.shape_of(call_955))) # shape=(9, 9, 14)
bop_973 = relay.greater(call_957.astype('bool'), relay.reshape(var_956.astype('bool'), relay.shape_of(call_957))) # shape=(9, 9, 14)
output = relay.Tuple([call_945,bop_970,])
output2 = relay.Tuple([call_946,bop_973,])
func_986 = relay.Function([var_956,], output)
mod['func_986'] = func_986
mod = relay.transform.InferType()(mod)
mutated_mod['func_986'] = func_986
mutated_mod = relay.transform.InferType()(mutated_mod)
var_987 = relay.var("var_987", dtype = "bool", shape = (1134,))#candidate|987|(1134,)|var|bool
func_986_call = mutated_mod.get_global_var('func_986')
call_988 = func_986_call(var_987)
output = call_988
func_989 = relay.Function([var_987], output)
mutated_mod['func_989'] = func_989
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1001 = relay.var("var_1001", dtype = "bool", shape = (7, 12, 2))#candidate|1001|(7, 12, 2)|var|bool
var_1002 = relay.var("var_1002", dtype = "bool", shape = (7, 12, 2))#candidate|1002|(7, 12, 2)|var|bool
bop_1003 = relay.logical_or(var_1001.astype('bool'), relay.reshape(var_1002.astype('bool'), relay.shape_of(var_1001))) # shape=(7, 12, 2)
output = bop_1003
output2 = bop_1003
func_1011 = relay.Function([var_1001,var_1002,], output)
mod['func_1011'] = func_1011
mod = relay.transform.InferType()(mod)
var_1012 = relay.var("var_1012", dtype = "bool", shape = (7, 12, 2))#candidate|1012|(7, 12, 2)|var|bool
var_1013 = relay.var("var_1013", dtype = "bool", shape = (7, 12, 2))#candidate|1013|(7, 12, 2)|var|bool
output = func_1011(var_1012,var_1013,)
func_1014 = relay.Function([var_1012,var_1013,], output)
mutated_mod['func_1014'] = func_1014
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1052 = relay.var("var_1052", dtype = "bool", shape = ())#candidate|1052|()|var|bool
const_1053 = relay.const([[[True,False,True,True,True,True,True,False,False,False,False,False],[False,True,True,True,True,False,False,False,False,True,True,True],[False,True,False,True,False,False,True,True,False,False,True,True],[True,False,True,False,False,True,False,False,True,True,False,False]],[[True,False,False,True,True,False,True,True,True,True,False,True],[True,True,True,True,False,False,True,True,False,False,True,False],[False,True,False,True,False,False,True,False,False,True,True,False],[True,False,True,False,False,False,False,True,True,True,True,True]],[[True,False,True,True,False,False,True,False,False,True,True,False],[False,False,False,False,False,False,False,True,False,False,False,False],[False,False,False,True,True,True,True,False,True,False,True,True],[False,False,False,False,True,True,True,True,False,True,False,False]],[[True,False,True,False,False,True,False,False,True,False,False,False],[True,True,False,False,True,True,False,True,True,False,False,True],[True,True,False,True,False,False,True,False,True,True,False,True],[False,False,False,False,True,False,False,False,True,True,True,False]],[[False,True,True,False,True,True,True,False,False,True,False,True],[False,True,True,True,False,True,False,True,True,False,True,False],[False,True,True,True,False,False,True,True,True,True,True,False],[False,False,False,True,True,False,False,True,False,True,False,False]],[[False,True,True,True,True,False,False,False,False,True,True,False],[True,True,True,False,False,False,False,False,False,False,True,False],[True,True,True,True,False,False,True,False,True,True,False,False],[True,False,False,True,True,False,False,False,True,True,False,True]]], dtype = "bool")#candidate|1053|(6, 4, 12)|const|bool
bop_1054 = relay.logical_or(var_1052.astype('bool'), const_1053.astype('bool')) # shape=(6, 4, 12)
func_264_call = mod.get_global_var('func_264')
func_267_call = mutated_mod.get_global_var('func_267')
const_1058 = relay.const([[-5.674919,1.667639,0.683506],[0.285223,-9.910057,3.138353],[8.063077,-3.461465,-8.440404],[-4.218810,-1.386180,-6.705787],[8.161487,-5.431228,7.242568],[8.116237,8.206808,8.376501],[5.185805,3.368960,-3.458863],[-6.313689,6.755000,9.064264],[-5.668281,0.933799,-7.374187],[8.604807,-4.134947,3.828863]], dtype = "float32")#candidate|1058|(10, 3)|const|float32
const_1059 = relay.const([-5.571828,1.055991,-4.787860,6.954211,9.740885,-0.116247,-1.201463,-2.467750,1.950107,-6.149951,-9.528697,0.646011,2.040906,-3.861799,3.379047,-7.281968,-8.863389,6.854224,-1.370538,3.838563,6.450923,3.467252,6.731152,-2.553410,9.178800,-5.112503,-5.260457,-6.888855,3.446723,3.625762,8.737009,-8.544860,4.632483,-8.026696,-1.801606,-9.624304,5.494864,4.584028,3.683542,5.060082,-4.267332,-3.830253,8.422803,5.232506,1.915279,-7.374044,-3.387557,-7.838556,-1.485700,4.646488,-5.306193,-7.863019,6.923206,-6.523297,-8.291638,-7.980165,-3.327316,7.933885,2.812357,-5.291102,6.755826,0.639020,1.253067,-6.555287,-6.202813,-0.420329,0.850323,-9.175610,-6.480089,6.207417,-7.582097,-3.202177,5.679570,1.403958,-4.631398,4.016780,-4.276416,5.882062,3.728525,4.297398,2.109266,-1.121947,4.889288,-9.730138,-1.921810,-5.741156,0.827301,5.865793,-9.587806,9.706718,-3.489969,8.095308,-3.310116,-7.267829,-2.989032,6.970008,5.745721,-5.248121,1.109613,-9.153210,-5.594810,-4.273098,5.543037,-8.738138,-2.202702,-9.938723,7.583818,0.078759,-6.000455,8.766851,-5.395279,8.232350,-8.900285,-5.365103,-8.888556,3.047641,3.383943,-4.466227,6.963008,-6.576378,-9.095600,-3.228111,-3.744852,2.050219,7.039327,5.328111,-9.860354,9.220705,-0.635658,-1.256551,6.989697,-4.609805,1.378725,7.585991,8.157469,9.513792,9.572209,8.907401,8.976361,-2.880378,4.388963,-7.785409,-9.024568,2.259184,9.082625,3.132455,4.362385,8.331921,-4.400482,-8.809070,7.924443,-5.934278,8.891217,-9.411914,-4.933035,-2.509285,2.352745,2.342176,-9.988914,-5.658212,-2.798219,-8.717117,1.871963,8.917889,1.751624,-9.104264,6.265996,6.299187,-9.458384,7.057015,-5.594886,3.598968,9.817274,-4.415239,1.755072,4.836755,-1.576299,1.752459,-7.666919,-2.287131,-8.340342,-8.862654,0.369952,3.610906,3.974262,-4.380580,-3.169126,1.476653,5.957657,1.534101,8.903011,-6.740954,8.986516,4.975431,-8.585236,4.780446,-8.851344,-5.131571,3.688258,-4.203617,4.315785,-6.996746,-9.079294,1.813620,6.854949,-5.337198,5.489624,9.245499,-1.717001,-1.313191,-8.971921,-2.843082,4.595968,-8.638525,-9.942768,-5.068032,6.906195,2.701503,-6.299638,3.697472,6.033551,-9.244939,9.807223,8.411043,5.572444,-5.885628,4.579368,-1.546660,-8.496431,6.512044,0.625042,-6.882971,7.315254,-9.040732,-4.613042,6.054048,8.119447,-8.911969,9.332584,3.048585,-8.961398,-3.454216,-1.071867,-3.440287,1.373812,5.889826,8.500798,-4.192265,0.275228,4.290869,-6.468498,6.189899,-5.539519,-3.512756,-6.868894,-9.710164,-4.791094,-9.765727,-4.192492,6.914448,1.644149,-6.055441,-6.182075,2.663748,-1.785468,1.855173,5.263296,-2.772305,-3.791206,-8.816379,-9.452859,3.077193,2.705560,1.776990,1.663111,-9.734289,2.152071,4.418808,4.151820,1.335792,3.857881,-1.728997,-4.596450,3.791106,-9.893783,5.168047,-1.822724,2.745868,-5.823469,7.092467,5.663161,-2.530194,0.884393,-6.831988,-1.150325,-8.511958,-5.602084,6.216557,1.012712,5.798975,-0.627269,0.979884,-8.154528,-9.096958,5.900075,-1.552623,8.137940,-6.185886,-1.768780,8.418957,-3.237636,6.665064,2.802616,2.723629,3.279383,-6.876669,3.946958,-7.168257,-2.011509,3.565241,0.922149,-8.995274,-2.334468,0.129666,1.431430,-7.331166,-6.921220,-6.280976,-8.772869,-3.132559], dtype = "float32")#candidate|1059|(330,)|const|float32
call_1057 = relay.TupleGetItem(func_264_call(relay.reshape(const_1058.astype('float32'), [1, 6, 5]), relay.reshape(const_1059.astype('float32'), [11, 6, 5]), ), 0)
call_1060 = relay.TupleGetItem(func_267_call(relay.reshape(const_1058.astype('float32'), [1, 6, 5]), relay.reshape(const_1059.astype('float32'), [11, 6, 5]), ), 0)
func_876_call = mod.get_global_var('func_876')
func_881_call = mutated_mod.get_global_var('func_881')
var_1064 = relay.var("var_1064", dtype = "float32", shape = (1134, 1))#candidate|1064|(1134, 1)|var|float32
var_1065 = relay.var("var_1065", dtype = "float32", shape = (220,))#candidate|1065|(220,)|var|float32
call_1063 = relay.TupleGetItem(func_876_call(relay.reshape(var_1064.astype('float32'), [9, 9, 14]), relay.reshape(const_1058.astype('float32'), [30,]), relay.reshape(var_1052.astype('float32'), []), relay.reshape(var_1065.astype('float32'), [220,]), ), 3)
call_1066 = relay.TupleGetItem(func_881_call(relay.reshape(var_1064.astype('float32'), [9, 9, 14]), relay.reshape(const_1058.astype('float32'), [30,]), relay.reshape(var_1052.astype('float32'), []), relay.reshape(var_1065.astype('float32'), [220,]), ), 3)
bop_1070 = relay.floor_mod(var_1065.astype('float32'), var_1064.astype('float32')) # shape=(1134, 220)
output = relay.Tuple([bop_1054,call_1057,const_1058,const_1059,call_1063,bop_1070,])
output2 = relay.Tuple([bop_1054,call_1060,const_1058,const_1059,call_1066,bop_1070,])
func_1075 = relay.Function([var_1052,var_1064,var_1065,], output)
mod['func_1075'] = func_1075
mod = relay.transform.InferType()(mod)
var_1076 = relay.var("var_1076", dtype = "bool", shape = ())#candidate|1076|()|var|bool
var_1077 = relay.var("var_1077", dtype = "float32", shape = (1134, 1))#candidate|1077|(1134, 1)|var|float32
var_1078 = relay.var("var_1078", dtype = "float32", shape = (220,))#candidate|1078|(220,)|var|float32
output = func_1075(var_1076,var_1077,var_1078,)
func_1079 = relay.Function([var_1076,var_1077,var_1078,], output)
mutated_mod['func_1079'] = func_1079
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1101 = relay.const([[[-9,4,7,3,10,4,3,-7,6,10,-2,-1,-3,-5,-3,1],[-1,-3,6,4,7,10,-1,5,-10,-1,-10,-5,7,10,-7,4],[-9,-6,5,10,7,-4,-7,-6,-7,-1,1,2,6,-8,4,-10],[-10,-5,-6,1,-7,2,3,2,6,9,-7,-7,-2,5,8,-6]],[[-2,5,7,3,-10,-9,4,-5,3,10,-2,7,4,9,-7,-4],[7,9,7,10,-9,-10,-8,-5,-8,5,6,5,1,-3,10,-9],[9,1,-2,-3,7,5,-10,-8,-7,-10,4,2,9,6,-5,6],[-3,-9,-7,-5,6,2,10,4,-5,-2,-10,-4,2,-10,-5,2]],[[-3,-2,-5,-5,-6,-7,-10,-6,7,-4,2,8,10,-4,4,2],[9,8,-10,7,1,-4,6,6,8,2,9,-6,8,3,-8,-9],[-10,2,-9,8,4,-1,-10,6,6,-9,-10,4,-7,-1,-2,3],[-7,-2,4,8,-9,-10,7,-8,4,8,2,-3,8,3,6,2]],[[1,-2,3,4,-1,3,-8,3,-8,-7,2,1,-6,10,10,-7],[-5,7,1,9,6,1,3,-8,-6,3,-9,-10,9,-6,3,2],[-4,-7,10,8,10,-8,3,5,-4,-9,-3,5,10,-2,7,-2],[-1,-6,5,-5,-3,-7,2,8,-10,-7,6,6,-7,9,-2,-5]],[[-10,-4,-4,1,5,-4,1,2,-8,6,-3,10,-3,-4,-9,-8],[9,-5,4,-2,5,-5,-9,8,6,-3,-8,-6,3,-6,8,-3],[-7,-4,6,9,2,-8,10,10,3,4,-6,4,10,-4,-3,9],[-5,2,-7,-5,-2,-1,10,-8,-7,-6,-1,-4,8,3,-5,5]],[[5,3,6,-2,10,1,-7,5,-9,6,-1,5,6,-5,2,1],[5,9,2,10,-5,4,-1,-5,-1,-2,-1,6,-7,-10,-8,4],[7,-7,-5,10,1,5,4,2,-10,2,3,1,-6,9,-2,-1],[8,-7,-6,-4,-3,-7,-8,-4,3,-10,-1,-6,-1,-3,8,1]],[[2,9,-7,3,4,6,-10,2,6,2,4,6,-3,-8,3,-8],[-1,2,-4,5,6,-1,2,10,3,5,9,3,-10,-4,-4,9],[3,-1,-8,-4,8,1,-7,5,-2,-9,2,3,-5,-7,3,-4],[1,3,2,6,-5,7,9,-5,-2,1,8,-8,-3,4,4,2]],[[3,-7,-5,4,-9,3,3,-6,-2,-1,-1,3,-7,-1,5,6],[-1,3,-5,7,6,-1,-7,5,6,-10,-6,-2,-10,-6,6,-2],[-5,2,-2,4,-10,8,-2,7,-1,-4,1,-2,6,-7,9,7],[6,4,10,-7,-2,8,-8,-9,-3,9,-8,-7,8,7,5,3]],[[-5,1,-6,-8,3,-2,2,-1,-6,-10,-1,9,3,1,1,-1],[-3,-6,3,7,1,-9,3,-9,-2,3,8,-7,1,-10,9,1],[-6,-1,2,-4,-7,5,5,-9,2,2,-8,-10,-4,1,2,7],[10,6,6,-4,-7,5,2,-10,-7,-4,-3,2,-5,-3,7,-6]],[[8,9,-3,6,-2,3,6,8,-8,-8,9,8,-3,2,3,-6],[-9,4,8,4,-3,-3,2,2,-4,-1,-10,-6,4,-2,-5,7],[-5,-7,-2,-2,10,4,9,-4,-8,-5,-5,-1,2,-3,6,-2],[-2,-4,2,9,-3,5,-1,-4,-3,-7,-3,-7,-6,1,-2,-10]],[[4,7,2,-1,1,9,-7,2,4,-8,8,4,-8,5,-10,4],[-3,-1,9,9,7,3,-1,-2,4,5,-7,-7,6,7,-1,1],[4,-6,-1,4,-5,10,1,2,-5,-7,-8,9,8,-1,5,-2],[3,3,-5,1,-3,7,-6,1,-9,-4,-5,-10,-7,2,4,-2]],[[-4,-8,1,10,-2,-9,-7,8,1,3,-6,-8,6,6,6,5],[-4,-8,4,-10,4,-3,-2,-6,-6,6,4,5,-6,9,1,-9],[-1,-10,4,9,1,-10,6,3,-9,-2,-5,-2,-7,2,-9,5],[-9,-2,6,4,7,10,1,5,-4,-2,3,-1,-9,2,-5,5]]], dtype = "int64")#candidate|1101|(12, 4, 16)|const|int64
var_1102 = relay.var("var_1102", dtype = "int64", shape = (12, 4, 16))#candidate|1102|(12, 4, 16)|var|int64
bop_1103 = relay.not_equal(const_1101.astype('bool'), relay.reshape(var_1102.astype('bool'), relay.shape_of(const_1101))) # shape=(12, 4, 16)
func_722_call = mod.get_global_var('func_722')
func_724_call = mutated_mod.get_global_var('func_724')
call_1110 = relay.TupleGetItem(func_722_call(), 0)
call_1111 = relay.TupleGetItem(func_724_call(), 0)
func_511_call = mod.get_global_var('func_511')
func_512_call = mutated_mod.get_global_var('func_512')
call_1114 = relay.TupleGetItem(func_511_call(), 0)
call_1115 = relay.TupleGetItem(func_512_call(), 0)
output = relay.Tuple([bop_1103,call_1110,call_1114,])
output2 = relay.Tuple([bop_1103,call_1111,call_1115,])
func_1116 = relay.Function([var_1102,], output)
mod['func_1116'] = func_1116
mod = relay.transform.InferType()(mod)
mutated_mod['func_1116'] = func_1116
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1117 = relay.var("var_1117", dtype = "int64", shape = (12, 4, 16))#candidate|1117|(12, 4, 16)|var|int64
func_1116_call = mutated_mod.get_global_var('func_1116')
call_1118 = func_1116_call(var_1117)
output = call_1118
func_1119 = relay.Function([var_1117], output)
mutated_mod['func_1119'] = func_1119
mutated_mod = relay.transform.InferType()(mutated_mod)
func_722_call = mod.get_global_var('func_722')
func_724_call = mutated_mod.get_global_var('func_724')
call_1123 = relay.TupleGetItem(func_722_call(), 0)
call_1124 = relay.TupleGetItem(func_724_call(), 0)
output = call_1123
output2 = call_1124
func_1133 = relay.Function([], output)
mod['func_1133'] = func_1133
mod = relay.transform.InferType()(mod)
output = func_1133()
func_1134 = relay.Function([], output)
mutated_mod['func_1134'] = func_1134
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1133_call = mod.get_global_var('func_1133')
func_1134_call = mutated_mod.get_global_var('func_1134')
call_1149 = func_1133_call()
call_1150 = func_1133_call()
output = relay.Tuple([call_1149,])
output2 = relay.Tuple([call_1150,])
func_1152 = relay.Function([], output)
mod['func_1152'] = func_1152
mod = relay.transform.InferType()(mod)
output = func_1152()
func_1153 = relay.Function([], output)
mutated_mod['func_1153'] = func_1153
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1212 = relay.var("var_1212", dtype = "int8", shape = (9, 12, 1))#candidate|1212|(9, 12, 1)|var|int8
var_1213 = relay.var("var_1213", dtype = "int8", shape = (9, 12, 12))#candidate|1213|(9, 12, 12)|var|int8
bop_1214 = relay.subtract(var_1212.astype('int8'), var_1213.astype('int8')) # shape=(9, 12, 12)
func_1075_call = mod.get_global_var('func_1075')
func_1079_call = mutated_mod.get_global_var('func_1079')
const_1225 = relay.const(True, dtype = "bool")#candidate|1225|()|const|bool
var_1226 = relay.var("var_1226", dtype = "float32", shape = (27, 42))#candidate|1226|(27, 42)|var|float32
const_1227 = relay.const([4.163258,0.266954,2.934764,9.814827,4.763909,2.853959,5.366035,-8.185317,1.802009,-7.735308,8.359836,-8.331794,-0.684524,7.841893,-0.030159,7.367998,6.473010,-8.845979,6.462968,4.146830,-1.328183,-1.761729,3.267194,-3.816065,-7.723464,-0.845003,0.441604,-8.115373,3.177566,7.225845,-9.279999,6.344299,8.499640,-9.144140,6.055648,1.699347,-3.948008,4.281122,-0.727290,-1.636416,3.411028,-2.926618,-6.268907,-2.975207,0.675190,4.128732,2.583346,0.230791,1.445091,3.927096,-5.287592,-8.842319,-3.837426,-8.482352,4.125901,9.761560,4.357482,0.003479,-7.783950,0.008067,-7.067342,-4.386141,0.537311,-1.741668,6.311784,-9.090574,4.801573,6.768937,-5.807020,-6.223418,-4.120824,-5.433120,-9.602745,8.287699,-4.851584,-3.004508,-3.935399,-6.047149,-5.919935,-5.619818,-6.060873,1.534516,6.214776,9.298463,-0.484107,-4.059727,2.043509,1.911552,-8.997035,0.761834,9.465726,8.906345,-9.895611,-9.026670,4.841799,-9.837784,6.749575,7.252795,-5.842924,-3.945510,-2.439353,-6.457968,-6.051105,4.281655,-7.485363,1.594175,-6.220063,1.081884,-2.035885,-2.083604,-5.088280,6.172557,-2.993325,1.809753,5.537239,-3.146687,-4.458131,2.117344,-3.235491,1.951238,6.061068,-0.298095,-4.927910,-9.920638,5.565981,-6.348030,-3.152023,6.323854,-5.889672,0.115534,1.824627,6.009373,-8.788622,-5.186895,-6.055105,-4.238316,-9.741787,9.983206,-5.591933,4.395969,-7.492054,-0.494082,1.288669,-9.313209,-3.456888,2.221652,0.068091,8.380729,0.746384,-6.575423,9.615574,-8.525900,9.912789,-8.061696,8.285354,-3.274504,0.954363,-2.475911,-9.816544,-9.829453,2.140265,-9.738184,7.523121,-9.732209,1.237557,-9.414153,6.941124,-8.718072,-5.164424,6.615922,-5.464411,-0.591547,-3.176180,-4.153331,0.858404,3.022534,-2.614355,0.905468,8.713905,9.586229,-5.030789,0.365783,-2.801960,-1.226510,2.487713,-6.506284,7.445021,6.344445,-5.166863,0.705561,2.120819,-2.890421,-5.193989,4.639846,8.186136,9.768120,-5.810351,-3.132946,-6.564320,2.294619,-0.341183,-8.353871,-3.427011,3.114091,7.994567,-1.095141,9.451494,2.309942,-0.525828,8.039894,2.129038,1.295054,1.925150,-7.805236,1.402648,1.679501,0.888340,7.599911,-8.672115,-8.371769], dtype = "float32")#candidate|1227|(220,)|const|float32
call_1224 = relay.TupleGetItem(func_1075_call(relay.reshape(const_1225.astype('bool'), []), relay.reshape(var_1226.astype('float32'), [1134, 1]), relay.reshape(const_1227.astype('float32'), [220,]), ), 3)
call_1228 = relay.TupleGetItem(func_1079_call(relay.reshape(const_1225.astype('bool'), []), relay.reshape(var_1226.astype('float32'), [1134, 1]), relay.reshape(const_1227.astype('float32'), [220,]), ), 3)
func_625_call = mod.get_global_var('func_625')
func_628_call = mutated_mod.get_global_var('func_628')
call_1230 = func_625_call(relay.reshape(var_1226.astype('float32'), [9, 9, 14]))
call_1231 = func_625_call(relay.reshape(var_1226.astype('float32'), [9, 9, 14]))
bop_1236 = relay.not_equal(call_1224.astype('bool'), var_1212.astype('bool')) # shape=(9, 12, 330)
bop_1239 = relay.not_equal(call_1228.astype('bool'), var_1212.astype('bool')) # shape=(9, 12, 330)
func_1116_call = mod.get_global_var('func_1116')
func_1119_call = mutated_mod.get_global_var('func_1119')
var_1245 = relay.var("var_1245", dtype = "int64", shape = (768,))#candidate|1245|(768,)|var|int64
call_1244 = relay.TupleGetItem(func_1116_call(relay.reshape(var_1245.astype('int64'), [12, 4, 16])), 2)
call_1246 = relay.TupleGetItem(func_1119_call(relay.reshape(var_1245.astype('int64'), [12, 4, 16])), 2)
func_353_call = mod.get_global_var('func_353')
func_354_call = mutated_mod.get_global_var('func_354')
call_1249 = relay.TupleGetItem(func_353_call(), 0)
call_1250 = relay.TupleGetItem(func_354_call(), 0)
uop_1259 = relay.sigmoid(var_1226.astype('float64')) # shape=(27, 42)
var_1277 = relay.var("var_1277", dtype = "float64", shape = (27, 42))#candidate|1277|(27, 42)|var|float64
bop_1278 = relay.mod(uop_1259.astype('float32'), relay.reshape(var_1277.astype('float32'), relay.shape_of(uop_1259))) # shape=(27, 42)
func_1116_call = mod.get_global_var('func_1116')
func_1119_call = mutated_mod.get_global_var('func_1119')
call_1282 = relay.TupleGetItem(func_1116_call(relay.reshape(var_1245.astype('int64'), [12, 4, 16])), 0)
call_1283 = relay.TupleGetItem(func_1119_call(relay.reshape(var_1245.astype('int64'), [12, 4, 16])), 0)
bop_1288 = relay.subtract(bop_1278.astype('uint32'), relay.reshape(uop_1259.astype('uint32'), relay.shape_of(bop_1278))) # shape=(27, 42)
func_277_call = mod.get_global_var('func_277')
func_278_call = mutated_mod.get_global_var('func_278')
call_1298 = func_277_call()
call_1299 = func_277_call()
output = relay.Tuple([bop_1214,const_1225,const_1227,call_1230,bop_1236,call_1244,var_1245,call_1249,call_1282,bop_1288,call_1298,])
output2 = relay.Tuple([bop_1214,const_1225,const_1227,call_1231,bop_1239,call_1246,var_1245,call_1250,call_1283,bop_1288,call_1299,])
func_1303 = relay.Function([var_1212,var_1213,var_1226,var_1245,var_1277,], output)
mod['func_1303'] = func_1303
mod = relay.transform.InferType()(mod)
mutated_mod['func_1303'] = func_1303
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1303_call = mutated_mod.get_global_var('func_1303')
var_1305 = relay.var("var_1305", dtype = "int8", shape = (9, 12, 1))#candidate|1305|(9, 12, 1)|var|int8
var_1306 = relay.var("var_1306", dtype = "int8", shape = (9, 12, 12))#candidate|1306|(9, 12, 12)|var|int8
var_1307 = relay.var("var_1307", dtype = "float32", shape = (27, 42))#candidate|1307|(27, 42)|var|float32
var_1308 = relay.var("var_1308", dtype = "int64", shape = (768,))#candidate|1308|(768,)|var|int64
var_1309 = relay.var("var_1309", dtype = "float64", shape = (27, 42))#candidate|1309|(27, 42)|var|float64
call_1304 = func_1303_call(var_1305,var_1306,var_1307,var_1308,var_1309,)
output = call_1304
func_1310 = relay.Function([var_1305,var_1306,var_1307,var_1308,var_1309,], output)
mutated_mod['func_1310'] = func_1310
mutated_mod = relay.transform.InferType()(mutated_mod)
func_511_call = mod.get_global_var('func_511')
func_512_call = mutated_mod.get_global_var('func_512')
call_1322 = relay.TupleGetItem(func_511_call(), 0)
call_1323 = relay.TupleGetItem(func_512_call(), 0)
output = relay.Tuple([call_1322,])
output2 = relay.Tuple([call_1323,])
func_1326 = relay.Function([], output)
mod['func_1326'] = func_1326
mod = relay.transform.InferType()(mod)
mutated_mod['func_1326'] = func_1326
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1326_call = mutated_mod.get_global_var('func_1326')
call_1327 = func_1326_call()
output = call_1327
func_1328 = relay.Function([], output)
mutated_mod['func_1328'] = func_1328
mutated_mod = relay.transform.InferType()(mutated_mod)
func_353_call = mod.get_global_var('func_353')
func_354_call = mutated_mod.get_global_var('func_354')
call_1347 = relay.TupleGetItem(func_353_call(), 0)
call_1348 = relay.TupleGetItem(func_354_call(), 0)
func_75_call = mod.get_global_var('func_75')
func_78_call = mutated_mod.get_global_var('func_78')
var_1373 = relay.var("var_1373", dtype = "float32", shape = (78,))#candidate|1373|(78,)|var|float32
call_1372 = relay.TupleGetItem(func_75_call(relay.reshape(var_1373.astype('float32'), [13, 3, 2])), 0)
call_1374 = relay.TupleGetItem(func_78_call(relay.reshape(var_1373.astype('float32'), [13, 3, 2])), 0)
bop_1378 = relay.logical_and(call_1372.astype('bool'), relay.reshape(var_1373.astype('bool'), relay.shape_of(call_1372))) # shape=(13, 3, 2)
bop_1381 = relay.logical_and(call_1374.astype('bool'), relay.reshape(var_1373.astype('bool'), relay.shape_of(call_1374))) # shape=(13, 3, 2)
output = relay.Tuple([call_1347,bop_1378,])
output2 = relay.Tuple([call_1348,bop_1381,])
func_1387 = relay.Function([var_1373,], output)
mod['func_1387'] = func_1387
mod = relay.transform.InferType()(mod)
var_1388 = relay.var("var_1388", dtype = "float32", shape = (78,))#candidate|1388|(78,)|var|float32
output = func_1387(var_1388)
func_1389 = relay.Function([var_1388], output)
mutated_mod['func_1389'] = func_1389
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1413 = relay.var("var_1413", dtype = "int32", shape = (7, 12, 13))#candidate|1413|(7, 12, 13)|var|int32
var_1414 = relay.var("var_1414", dtype = "int32", shape = (7, 12, 13))#candidate|1414|(7, 12, 13)|var|int32
bop_1415 = relay.bitwise_xor(var_1413.astype('int32'), relay.reshape(var_1414.astype('int32'), relay.shape_of(var_1413))) # shape=(7, 12, 13)
func_264_call = mod.get_global_var('func_264')
func_267_call = mutated_mod.get_global_var('func_267')
var_1429 = relay.var("var_1429", dtype = "float32", shape = (5, 6))#candidate|1429|(5, 6)|var|float32
var_1430 = relay.var("var_1430", dtype = "float32", shape = (1, 330))#candidate|1430|(1, 330)|var|float32
call_1428 = relay.TupleGetItem(func_264_call(relay.reshape(var_1429.astype('float32'), [1, 6, 5]), relay.reshape(var_1430.astype('float32'), [11, 6, 5]), ), 0)
call_1431 = relay.TupleGetItem(func_267_call(relay.reshape(var_1429.astype('float32'), [1, 6, 5]), relay.reshape(var_1430.astype('float32'), [11, 6, 5]), ), 0)
uop_1437 = relay.sigmoid(var_1430.astype('float64')) # shape=(1, 330)
func_511_call = mod.get_global_var('func_511')
func_512_call = mutated_mod.get_global_var('func_512')
call_1442 = relay.TupleGetItem(func_511_call(), 0)
call_1443 = relay.TupleGetItem(func_512_call(), 0)
func_578_call = mod.get_global_var('func_578')
func_582_call = mutated_mod.get_global_var('func_582')
var_1446 = relay.var("var_1446", dtype = "float32", shape = ())#candidate|1446|()|var|float32
const_1447 = relay.const([-9.275214,-6.167927,9.887483,9.857805,-3.700397,5.237477,1.826478,-6.488620,9.383258,-3.149984,-2.110495,-0.304780,2.607673,0.388202,-2.839880,-4.389672,-9.643294,1.322471,5.300069,-2.126007,-5.609944,0.749222,-8.775443,-5.889054,-0.459052,2.203616,-2.157730,-3.554202,-1.468149,8.514957,-6.312986,1.795783,-6.530926,-5.978830,5.487168,8.538710,-8.772071,0.231314,-4.751443,-1.274160,2.100081,6.565959,-5.888169,9.059101,0.962267,0.391495,-7.827305,3.082702,5.182856,-1.119610,-6.238549,-4.091194,6.679376,5.976045,1.912869,-7.229477,4.868835,1.312155,-1.904441,-1.255380,6.863492,8.248089,-4.532219,-7.978923,-3.609734,-1.446273,-0.576648,1.449252,8.071809,2.930823,-4.965400,3.454730,8.959404,6.464038,9.164423,5.565079,6.964429,9.200641,6.803672,-1.068830,-8.696548,9.414808,0.631982,-3.649418,2.148097,-7.338591,-7.931835,-4.970359,-3.398606,2.415593,4.403854,-6.806191,0.746850,1.712037,3.844031,-4.842842,-3.033413,-1.707609,-6.776816,-1.080256,-6.244814,2.377221,-1.444397,-0.457752,-4.406678,6.211168,-4.455728,-3.821294,3.886063,2.120450,4.995351,-4.987501,5.626867,-9.360057,-1.946678,4.123313,2.112799,8.990112,-1.198720,-4.245950,9.828918,7.995967,8.483396,4.570055,7.002339,3.921434,-5.481719,-2.514148,-2.917714,0.761609,-2.860737,1.070240,8.709185,6.715924,-4.593250,-4.900316,1.859598,7.182773,-9.719534,3.790167,1.019493,-0.940586,9.947392,8.444461,6.458702,-3.215001,-9.039823,4.100987,-1.117537,1.882905,-3.511391,-0.757707,1.598275,-1.217922,-0.588893,6.036888,-5.101414,3.497170,0.861929,8.665801,2.027937,-8.422841,0.923869,7.927037,-1.268954,-8.372102,5.723958,3.994308,0.923537,-6.468093,7.849344,8.749225,6.610674,3.757933,-2.670685,-3.532871,-5.247229,8.583891,-0.740826,6.450359,9.302039,-2.918482,-9.153212,-0.104911,1.486353,6.979248,-4.863811,8.025072,2.100928,-8.439156,0.014789,2.019233,5.658176,-4.362247,-2.201816,7.535715,4.611031,-2.756529,0.139144,6.604502,7.032996,0.560003,-0.858753,0.429765,-9.473423,1.544824,-2.327504,0.200933,8.425400,-1.494735,-1.347584,2.665456,3.754911,5.872191,-5.649617,7.404034,-9.765902,-7.603527,9.680801,-8.765826], dtype = "float32")#candidate|1447|(220,)|const|float32
call_1445 = func_578_call(relay.reshape(var_1446.astype('float32'), []), relay.reshape(const_1447.astype('float32'), [5, 4, 11]), )
call_1448 = func_578_call(relay.reshape(var_1446.astype('float32'), []), relay.reshape(const_1447.astype('float32'), [5, 4, 11]), )
output = relay.Tuple([bop_1415,call_1428,var_1429,uop_1437,call_1442,call_1445,var_1446,const_1447,])
output2 = relay.Tuple([bop_1415,call_1431,var_1429,uop_1437,call_1443,call_1448,var_1446,const_1447,])
func_1460 = relay.Function([var_1413,var_1414,var_1429,var_1430,var_1446,], output)
mod['func_1460'] = func_1460
mod = relay.transform.InferType()(mod)
var_1461 = relay.var("var_1461", dtype = "int32", shape = (7, 12, 13))#candidate|1461|(7, 12, 13)|var|int32
var_1462 = relay.var("var_1462", dtype = "int32", shape = (7, 12, 13))#candidate|1462|(7, 12, 13)|var|int32
var_1463 = relay.var("var_1463", dtype = "float32", shape = (5, 6))#candidate|1463|(5, 6)|var|float32
var_1464 = relay.var("var_1464", dtype = "float32", shape = (1, 330))#candidate|1464|(1, 330)|var|float32
var_1465 = relay.var("var_1465", dtype = "float32", shape = ())#candidate|1465|()|var|float32
output = func_1460(var_1461,var_1462,var_1463,var_1464,var_1465,)
func_1466 = relay.Function([var_1461,var_1462,var_1463,var_1464,var_1465,], output)
mutated_mod['func_1466'] = func_1466
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1133_call = mod.get_global_var('func_1133')
func_1134_call = mutated_mod.get_global_var('func_1134')
call_1470 = func_1133_call()
call_1471 = func_1133_call()
func_986_call = mod.get_global_var('func_986')
func_989_call = mutated_mod.get_global_var('func_989')
const_1473 = relay.const([[True,True,True,False,True,False,False,False,False,True,False,True,False,False,False,True,False,True,False,False,True,True,False,True,False,True,True,True,True,False,True,True,True,False,True,False,False,True,False,False,False,True,True,True,True,True,False,True,False,False,True,True,False,True,False,False,True,False,True,False,False,False,True,False,False,False,False,False,False,True,False,False,False,True,True,True,True,True,False,True,False,True,True,False,True,True,False,False,True,True,False,False,True,False,False,True,False,False,True,False,True,True,True,True,False,False,False,True,False,False,True,False,False,False,False,True,True,False,True,True,True,True,True,False,True,True,True,False,True,False,False,True,True,True,False,True,False,True,True,False,True,False,False,True,False,False,False,True,False,True,False,True,True,True,True,False,False,False,False,False,False,True,True,True,False,True,False,False,False,True,False,False,True,False,True,True,False,False,True,False,True,True,True,False,True,False,True,True,False,True,True,False,False,False,True,True,False,False,True,False,True,False,False,True,False,False,False,True,False,True,True,True,True,True,False,False,True,True,True,False,False,True,False,True,True,False,False,True,False,True,False,True,True,False,False,False,False,True,True,False,False,False,False,True,True,False,True,True,True,True,True,True,False,True,False,True,True,False,True,True,False,True,True,True,True,True,True,False,False,False,False,True,True,False,False,False,False,False,True,True,True,False,True,True,False,True,False,True,False,True,True,False,False,False,True,False,True,True,False,False,True,False,True,False,True,True,True,True,True,False,True,False,True,False,True,True,True,False,False,True,True,True,True,False,True,True,False,True,False,False,True,True,False,False,False,True,True,True,True,True,True,False,True,False,False,True,True,True,True,False,True,False,True,False,False,True,True,False,False,True,False,True,True,True,True,True,False,False,False,True,True,True,True,True,False,True,False,True],[True,True,True,False,True,True,False,False,False,False,False,False,True,True,True,False,False,False,True,False,False,True,False,False,True,True,True,True,True,True,False,False,False,False,False,True,True,False,True,True,False,False,True,False,True,False,False,True,False,False,True,False,True,True,False,False,True,True,True,False,False,False,False,False,False,False,False,True,False,True,False,True,True,True,True,False,True,True,True,True,True,True,True,True,False,False,True,True,True,True,True,False,True,True,False,True,True,False,False,False,False,False,True,True,True,False,False,False,True,True,True,True,False,False,False,True,False,True,False,False,False,False,False,True,True,False,False,True,True,False,True,True,False,False,False,True,False,False,True,True,False,False,False,False,True,False,True,True,False,False,True,False,False,True,False,True,False,False,False,True,True,True,False,True,True,False,True,True,True,False,True,True,True,True,True,False,False,True,True,False,True,True,False,True,False,False,False,False,True,True,True,False,False,True,True,False,False,False,True,True,True,False,False,False,False,True,False,False,False,True,False,True,False,False,False,True,True,True,True,False,False,True,False,False,False,True,False,False,False,False,True,True,False,True,True,False,True,True,False,True,False,False,True,True,True,True,False,False,False,True,False,False,False,False,True,True,True,True,True,True,True,True,False,False,False,True,False,True,False,True,True,True,True,False,False,False,True,False,False,False,True,False,False,False,False,True,True,False,True,False,True,False,True,False,False,False,True,True,True,False,False,False,True,True,False,True,False,False,True,False,False,False,True,False,False,True,False,True,True,True,False,True,True,True,True,False,True,False,True,True,False,True,True,True,False,False,False,False,False,True,True,False,False,False,False,False,True,False,False,True,True,False,False,True,True,True,True,True,True,False,False,False,True,True,True,True,True,False,False,True,True,True,True,True,True,False,False,False],[False,False,True,False,False,True,True,True,False,False,False,False,False,False,False,True,False,True,False,True,True,False,True,True,True,False,False,False,False,False,True,True,False,False,True,False,False,False,False,False,False,False,False,False,True,False,True,True,False,True,False,True,False,True,False,True,False,True,False,False,True,True,True,False,True,False,False,True,False,False,False,False,True,False,False,False,True,True,True,True,True,True,False,True,True,True,False,True,False,False,True,True,True,True,True,True,True,False,False,False,False,False,False,True,True,True,True,False,False,False,True,True,False,True,False,True,False,True,False,False,True,True,False,True,False,True,False,False,True,False,False,False,True,False,True,False,True,True,False,False,True,True,True,True,False,False,False,True,True,False,True,False,False,True,True,False,True,True,False,False,False,False,False,True,True,False,True,False,True,True,False,False,False,False,False,False,False,False,True,True,True,True,True,True,False,True,True,True,False,False,False,False,False,False,True,True,False,False,False,True,True,False,False,True,False,False,False,False,False,True,True,True,False,True,False,True,False,False,False,False,False,False,True,False,True,False,False,True,True,False,True,False,False,True,False,True,True,False,True,True,True,True,True,False,False,True,True,False,True,True,False,True,False,True,False,True,False,False,False,True,False,True,True,False,False,True,True,True,True,True,True,True,False,False,True,False,True,False,False,True,True,False,False,True,False,False,False,False,False,True,True,False,False,False,True,True,False,False,False,True,True,True,False,True,True,True,True,True,True,True,False,True,False,False,False,False,True,True,False,True,False,True,False,False,True,True,True,True,True,False,True,True,True,True,False,True,True,False,False,False,True,False,True,True,False,False,True,True,True,True,True,True,False,True,True,False,False,True,True,True,True,False,False,False,False,True,True,True,True,True,True,False,True,True,False,False,True,True]], dtype = "bool")#candidate|1473|(3, 378)|const|bool
call_1472 = relay.TupleGetItem(func_986_call(relay.reshape(const_1473.astype('bool'), [1134,])), 1)
call_1474 = relay.TupleGetItem(func_989_call(relay.reshape(const_1473.astype('bool'), [1134,])), 1)
output = relay.Tuple([call_1470,call_1472,const_1473,])
output2 = relay.Tuple([call_1471,call_1474,const_1473,])
func_1480 = relay.Function([], output)
mod['func_1480'] = func_1480
mod = relay.transform.InferType()(mod)
output = func_1480()
func_1481 = relay.Function([], output)
mutated_mod['func_1481'] = func_1481
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1498 = relay.var("var_1498", dtype = "int32", shape = (11, 16, 11))#candidate|1498|(11, 16, 11)|var|int32
var_1499 = relay.var("var_1499", dtype = "int32", shape = (11, 16, 11))#candidate|1499|(11, 16, 11)|var|int32
bop_1500 = relay.minimum(var_1498.astype('int32'), relay.reshape(var_1499.astype('int32'), relay.shape_of(var_1498))) # shape=(11, 16, 11)
func_722_call = mod.get_global_var('func_722')
func_724_call = mutated_mod.get_global_var('func_724')
call_1506 = relay.TupleGetItem(func_722_call(), 0)
call_1507 = relay.TupleGetItem(func_724_call(), 0)
func_1460_call = mod.get_global_var('func_1460')
func_1466_call = mutated_mod.get_global_var('func_1466')
const_1512 = relay.const([6,-8,-4,-10,2,-9,-5,-8,-7,-6,8,9,1,-10,-10,6,8,-6,2,5,9,-2,8,9,-3,-8,-7,10,10,8,9,-6,7,-9,-8,-4,-6,-3,-8,-10,7,3,5,-4,7,5,-6,-3,4,2,6,-3,2,-7,-8,3,-4,-3,-4,-4,-1,-5,3,-1,-9,1,9,-6,-9,5,-9,-7,5,-2,9,9,8,-10,-1,-7,4,-4,1,-7,-4,-10,-9,7,-8,-4,-6,8,7,4,9,-8,9,-5,3,-1,-2,-3,-7,-8,1,2,5,1,10,-1,7,9,3,-4,-7,5,-7,2,-9,1,-2,-5,-4,2,4,-10,-5,6,-4,4,9,-3,-8,-2,-5,4,5,8,-10,5,6,-6,6,-10,-4,4,-6,10,1,-10,5,6,5,-1,-6,8,2,6,-6,10,3,-3,-8,2,5,6,7,-9,-7,7,7,-9,1,-6,-10,-9,10,-1,-5,8,8,-9,9,7,-8,-3,-2,-3,6,10,-8,10,-10,-6,7,-6,-1,7,-3,-8,-9,-8,-1,-3,-4,4,9,10,6,-4,-10,-5,-5,1,-9,3,-9,-10,-3,9,4,-9,-7,4,-5,-8,9,7,8,-4,-8,6,7,10,-8,9,-2,7,-7,5,-9,8,8,10,5,4,10,-1,-5,6,9,5,4,-1,3,5,-10,-10,8,6,-5,-7,2,1,-10,-3,2,10,-2,-9,10,-8,8,-1,-7,10,-9,4,-6,9,2,6,-1,-2,-9,7,8,2,-1,-10,1,-10,-8,2,-1,-9,4,-9,-2,-8,-5,-10,10,6,-4,2,10,-6,8,10,10,2,-5,-8,3,7,1,-10,-1,6,7,-3,-10,5,6,7,7,9,-10,10,-5,3,6,8,-2,-5,10,5,-6,10,-6,-7,8,-6,4,-4,-4,-4,-2,10,-5,-2,2,9,-8,9,7,8,3,-6,1,-6,10,-5,-10,-4,-9,-4,-4,10,-1,7,-4,-7,-10,-4,4,-3,-7,7,-3,-4,9,-3,10,-6,-2,-1,9,-3,-1,-9,-6,1,1,3,-1,6,7,-3,-5,-10,-4,-5,-8,-4,-7,8,-5,7,1,2,6,-1,1,10,7,-5,10,5,-10,9,-2,-9,9,5,-5,-1,-6,2,8,-3,1,-5,-8,8,-7,-5,7,-8,-1,4,1,-7,-8,6,2,-1,9,-1,-4,5,8,-2,8,-1,2,-5,1,-2,10,6,-7,-4,-1,-3,5,-8,-10,8,-10,-6,-4,-5,-2,5,3,3,-8,-6,3,-6,9,-1,-6,-8,-10,9,7,1,1,3,-7,5,5,-4,5,7,6,5,-7,-6,-9,-10,-1,8,-9,7,9,-3,5,5,9,-4,-7,5,-1,-2,-8,-7,-5,10,-5,-2,-8,1,2,5,-5,4,-7,-10,2,9,6,8,8,-5,-6,7,10,1,-3,3,5,-4,6,9,5,7,-3,-3,6,3,-5,-8,-2,8,5,-5,-7,-3,2,1,9,9,3,-2,-9,1,-9,8,-9,-9,8,-5,5,-7,9,4,-4,-1,-6,5,1,-9,6,4,-6,10,-4,-8,-2,-6,1,-8,-7,-3,3,6,6,4,5,-9,-8,-4,5,-3,-4,-7,-1,1,3,10,-2,10,4,-1,-2,9,-1,-4,4,3,-6,-5,5,-6,-10,6,3,-1,10,5,4,1,8,2,-3,-1,5,-8,4,1,-2,-7,5,-1,7,8,-1,-7,-4,-10,5,-8,9,-1,1,6,-10,-10,8,9,-7,-9,6,7,6,-9,-9,1,2,-1,-5,8,-10,10,10,-7,6,7,-3,-2,-2,-2,-7,-8,-9,3,4,1,2,5,-1,-10,8,9,-4,4,3,6,1,8,-1,-5,-4,10,-8,-7,7,7,5,-1,-6,-4,1,8,1,3,1,-8,4,1,5,2,7,9,5,2,5,2,-5,-9,8,-10,-9,4,-8,-9,6,5,3,7,6,-3,5,-8,-8,9,-10,-7,-7,6,9,-8,-7,8,9,-9,-5,9,-10,2,-5,-5,10,-5,4,-4,-5,10,5,3,3,2,-6,10,9,3,-3,-8,2,-1,5,1,-6,-3,1,9,-9,4,2,-1,-5,5,-3,-10,8,-1,-5,-4,-5,5,4,10,3,-1,9,5,6,-2,5,-4,-5,6,9,-2,9,-10,1,10,-5,8,3,-8,5,8,3,-3,-6,10,-8,-2,2,-4,4,-7,-3,3,-10,6,10,-5,5,3,6,-1,-8,5,-4,2,-1,9,6,1,-2,3,-3,6,8,-1,7,-1,4,-4,3,8,-7,-9,8,8,8,-1,10,9,1,4,-2,2,3,6,-3,1,1,2,-1,-9,-10,10,-2,-9,8,10,10,-6,9,8,-8,2,8,-1,4,8,2,5,-6,6,2,6,9,5,-5,10,4,1,7,1,-3,5,-6,1,7,-7,-5,-10,-4,10,10,1,3,-3,5,2,-4,3,-9,1,-2,-6,-9,1,1,-3,3,-4,5,9,-3,7,-9,-7,-5,-6,-9,5,-9,3,10,-3,-7,1,6,1,-2,7,9,2,6,-2,-8,-3,5,-9,2,-10,-8,-1,1,-4,-10,-4,6,-4,4,7,5,1,8,5,-1,-10,-5,1,-5,-1,-7,6,3,-6,-8,-10,-3,-4,-10,-10,3,-10,-3,6,-6,-2,2,-6,2,1,-5,4,10,10,7,3,-1,10,-3,-1,1,-2,3,-7,2,-4,7,-6,6,-8,-7,2,-1,-2,-9,3,-6,5,5,-4,-10,-3,-8,5,-4,-8,-4,-8,5,1,-3,-5,1,8,-2,4,-5,-8,-7,-9,-5,-3,7,6,-3,5,-1,-5,-8,10,-9,1,-1,-7,1,-9,-10,5,-4,-9,-8,-5,5,-3,4,5], dtype = "int32")#candidate|1512|(1092,)|const|int32
const_1513 = relay.const([-8.286659,4.002851,3.232448,3.423354,8.360614,1.124172,-0.386758,-1.895159,4.615123,7.710945,7.981548,2.294912,-1.304828,-3.796935,8.853522,4.762274,4.185561,-6.283545,7.857381,3.399084,-4.983791,6.916133,6.358827,-7.778512,4.592383,0.799545,-7.020171,9.437480,-2.278458,-9.084290], dtype = "float32")#candidate|1513|(30,)|const|float32
const_1514 = relay.const([[-0.031887],[-2.320414],[1.266469],[-0.681031],[0.242933],[-6.692421],[-9.090483],[9.649084],[-6.907761],[-0.455541],[-7.149275],[-8.008389],[5.845862],[6.479481],[-3.198578],[-3.593077],[7.807724],[-1.230762],[-6.906509],[-4.310434],[1.009071],[1.779807],[-5.529209],[7.305847],[-6.148880],[-1.506893],[5.797947],[4.005918],[-8.195269],[-7.028448],[4.515025],[6.381787],[7.916143],[7.802063],[5.098549],[-8.566533],[-0.804298],[-4.228663],[-6.936939],[-3.609518],[-8.683296],[-5.551975],[5.222704],[-7.772776],[-0.474615],[-3.446163],[1.309728],[-3.856341],[-5.534100],[-5.221553],[4.029630],[-0.197759],[-1.278092],[-0.213922],[-2.728643],[1.428497],[8.309794],[-4.271772],[-7.225627],[7.134754],[5.028709],[-8.047970],[0.760542],[-6.390393],[-1.557809],[2.149823],[5.641175],[1.849558],[5.639006],[-3.147249],[-3.014498],[-5.927757],[0.508257],[-2.259128],[7.650517],[-0.999959],[-5.712233],[6.099813],[-4.459682],[6.701132],[2.185212],[-9.264042],[-0.109767],[-0.453584],[-1.425055],[9.465869],[6.166562],[-3.385550],[6.892635],[-6.755876],[-6.396994],[0.985573],[4.948636],[5.370825],[-2.318433],[-2.973199],[0.323022],[-1.832403],[-1.636892],[9.593266],[-7.534041],[-6.935112],[-5.248384],[-0.700356],[5.623823],[-9.188037],[-4.182861],[-4.963705],[1.076378],[1.588005],[-2.686851],[9.082377],[-9.815950],[2.514510],[-8.438283],[4.720264],[-0.873283],[-8.878781],[0.816968],[-9.293687],[7.455077],[-2.547714],[-1.167566],[4.554130],[-9.324541],[-5.631149],[-5.569816],[6.153124],[8.756551],[-1.778399],[2.332223],[-9.111228],[9.094362],[0.677337],[-7.302679],[5.331470],[-4.981494],[6.738981],[0.048532],[-1.024515],[1.910742],[-1.482566],[-2.739060],[-1.633902],[9.314180],[-4.992632],[7.302198],[-5.335354],[3.345077],[2.946147],[2.996383],[-5.401202],[-2.924410],[-5.734103],[-8.938917],[-2.590272],[2.325629],[-9.567690],[-6.308883],[-4.772309],[2.405535],[-5.906704],[3.227694],[2.291251],[-2.595167],[-7.050174],[2.247253],[-2.341258],[-9.908960],[9.553664],[5.580248],[-9.619406],[3.261755],[7.782285],[-4.094475],[7.996464],[-0.837528],[-8.036803],[-3.009306],[-4.674887],[-4.744393],[-4.995768],[3.943699],[2.279702],[3.384364],[0.839791],[-4.021966],[-4.329124],[-7.048837],[9.457584],[4.695744],[-5.025133],[0.950163],[6.497148],[-1.257168],[-8.760193],[2.621534],[-7.666779],[0.738326],[-4.751115],[4.639711],[-8.035473],[-6.951499],[2.590199],[-0.742428],[9.444306],[6.797512],[4.036862],[-1.027468],[-2.442368],[-0.060917],[5.094686],[9.278016],[4.572007],[6.122130],[7.113179],[1.492286],[1.367452],[-0.570054],[-5.233992],[4.482551],[-3.427521],[0.729196],[6.010268],[1.222674],[-3.848871],[8.931325],[3.517410],[3.630662],[2.798607],[-9.091799],[6.792524],[-6.882886],[6.690467],[4.569959],[4.156948],[2.197054],[3.854904],[2.328950],[-5.165120],[-9.054728],[5.871108],[-6.311285],[-9.404909],[3.613825],[8.980604],[5.461188],[5.487978],[5.748995],[-2.608774],[-8.325028],[2.254823],[-6.510181],[-0.718997],[-3.735616],[-8.020649],[2.224715],[-3.456378],[-0.588817],[9.204957],[-1.388901],[4.287906],[-8.763371],[-0.375143],[-1.960198],[-1.239983],[-5.477982],[-7.100783],[5.748495],[4.290639],[-2.258552],[-7.715286],[4.788686],[1.063459],[-7.800732],[9.867107],[7.045295],[-6.052046],[5.869436],[3.131991],[2.024464],[-6.291416],[-4.915057],[-9.473635],[5.272491],[9.814011],[2.220549],[5.611457],[-2.167350],[-1.831313],[7.271868],[1.575368],[7.041505],[-6.282307],[-6.602219],[-3.990618],[-3.736583],[-3.859317],[4.041890],[-7.340278],[-0.825257],[-1.489895],[4.257108],[-9.891446],[8.801416],[-9.273460],[-8.481170],[9.105807],[7.454563],[-2.548546],[-3.513603],[-9.579031],[8.200783],[9.134698],[5.896653],[5.914796],[5.824692],[-6.853723],[4.830514],[-3.319905],[1.952803],[7.185725],[-5.726017],[8.911205],[2.844374],[-4.871137],[-1.376308],[-7.790351],[2.714122],[5.886558]], dtype = "float32")#candidate|1514|(330, 1)|const|float32
const_1515 = relay.const(-5.084265, dtype = "float32")#candidate|1515|()|const|float32
call_1511 = relay.TupleGetItem(func_1460_call(relay.reshape(const_1512.astype('int32'), [7, 12, 13]), relay.reshape(const_1512.astype('int32'), [7, 12, 13]), relay.reshape(const_1513.astype('float32'), [5, 6]), relay.reshape(const_1514.astype('float32'), [1, 330]), relay.reshape(const_1515.astype('float32'), []), ), 5)
call_1516 = relay.TupleGetItem(func_1466_call(relay.reshape(const_1512.astype('int32'), [7, 12, 13]), relay.reshape(const_1512.astype('int32'), [7, 12, 13]), relay.reshape(const_1513.astype('float32'), [5, 6]), relay.reshape(const_1514.astype('float32'), [1, 330]), relay.reshape(const_1515.astype('float32'), []), ), 5)
uop_1517 = relay.acos(call_1506.astype('float64')) # shape=(9, 2, 15)
uop_1519 = relay.acos(call_1507.astype('float64')) # shape=(9, 2, 15)
output = relay.Tuple([bop_1500,call_1511,const_1512,const_1513,const_1514,const_1515,uop_1517,])
output2 = relay.Tuple([bop_1500,call_1516,const_1512,const_1513,const_1514,const_1515,uop_1519,])
func_1525 = relay.Function([var_1498,var_1499,], output)
mod['func_1525'] = func_1525
mod = relay.transform.InferType()(mod)
mutated_mod['func_1525'] = func_1525
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1525_call = mutated_mod.get_global_var('func_1525')
var_1527 = relay.var("var_1527", dtype = "int32", shape = (11, 16, 11))#candidate|1527|(11, 16, 11)|var|int32
var_1528 = relay.var("var_1528", dtype = "int32", shape = (11, 16, 11))#candidate|1528|(11, 16, 11)|var|int32
call_1526 = func_1525_call(var_1527,var_1528,)
output = call_1526
func_1529 = relay.Function([var_1527,var_1528,], output)
mutated_mod['func_1529'] = func_1529
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1133_call = mod.get_global_var('func_1133')
func_1134_call = mutated_mod.get_global_var('func_1134')
call_1590 = func_1133_call()
call_1591 = func_1133_call()
output = call_1590
output2 = call_1591
func_1596 = relay.Function([], output)
mod['func_1596'] = func_1596
mod = relay.transform.InferType()(mod)
mutated_mod['func_1596'] = func_1596
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1596_call = mutated_mod.get_global_var('func_1596')
call_1597 = func_1596_call()
output = call_1597
func_1598 = relay.Function([], output)
mutated_mod['func_1598'] = func_1598
mutated_mod = relay.transform.InferType()(mutated_mod)
func_511_call = mod.get_global_var('func_511')
func_512_call = mutated_mod.get_global_var('func_512')
call_1612 = relay.TupleGetItem(func_511_call(), 0)
call_1613 = relay.TupleGetItem(func_512_call(), 0)
func_264_call = mod.get_global_var('func_264')
func_267_call = mutated_mod.get_global_var('func_267')
var_1616 = relay.var("var_1616", dtype = "float32", shape = (30,))#candidate|1616|(30,)|var|float32
var_1617 = relay.var("var_1617", dtype = "float32", shape = (330,))#candidate|1617|(330,)|var|float32
call_1615 = relay.TupleGetItem(func_264_call(relay.reshape(var_1616.astype('float32'), [1, 6, 5]), relay.reshape(var_1617.astype('float32'), [11, 6, 5]), ), 0)
call_1618 = relay.TupleGetItem(func_267_call(relay.reshape(var_1616.astype('float32'), [1, 6, 5]), relay.reshape(var_1617.astype('float32'), [11, 6, 5]), ), 0)
uop_1623 = relay.log10(var_1616.astype('float32')) # shape=(30,)
output = relay.Tuple([call_1612,call_1615,var_1617,uop_1623,])
output2 = relay.Tuple([call_1613,call_1618,var_1617,uop_1623,])
func_1654 = relay.Function([var_1616,var_1617,], output)
mod['func_1654'] = func_1654
mod = relay.transform.InferType()(mod)
var_1655 = relay.var("var_1655", dtype = "float32", shape = (30,))#candidate|1655|(30,)|var|float32
var_1656 = relay.var("var_1656", dtype = "float32", shape = (330,))#candidate|1656|(330,)|var|float32
output = func_1654(var_1655,var_1656,)
func_1657 = relay.Function([var_1655,var_1656,], output)
mutated_mod['func_1657'] = func_1657
mutated_mod = relay.transform.InferType()(mutated_mod)
func_722_call = mod.get_global_var('func_722')
func_724_call = mutated_mod.get_global_var('func_724')
call_1694 = relay.TupleGetItem(func_722_call(), 0)
call_1695 = relay.TupleGetItem(func_724_call(), 0)
func_930_call = mod.get_global_var('func_930')
func_932_call = mutated_mod.get_global_var('func_932')
var_1697 = relay.var("var_1697", dtype = "bool", shape = (27, 42))#candidate|1697|(27, 42)|var|bool
call_1696 = relay.TupleGetItem(func_930_call(relay.reshape(var_1697.astype('bool'), [9, 9, 14])), 1)
call_1698 = relay.TupleGetItem(func_932_call(relay.reshape(var_1697.astype('bool'), [9, 9, 14])), 1)
output = relay.Tuple([call_1694,call_1696,var_1697,])
output2 = relay.Tuple([call_1695,call_1698,var_1697,])
func_1710 = relay.Function([var_1697,], output)
mod['func_1710'] = func_1710
mod = relay.transform.InferType()(mod)
var_1711 = relay.var("var_1711", dtype = "bool", shape = (27, 42))#candidate|1711|(27, 42)|var|bool
output = func_1710(var_1711)
func_1712 = relay.Function([var_1711], output)
mutated_mod['func_1712'] = func_1712
mutated_mod = relay.transform.InferType()(mutated_mod)
func_277_call = mod.get_global_var('func_277')
func_278_call = mutated_mod.get_global_var('func_278')
call_1757 = func_277_call()
call_1758 = func_277_call()
output = relay.Tuple([call_1757,])
output2 = relay.Tuple([call_1758,])
func_1770 = relay.Function([], output)
mod['func_1770'] = func_1770
mod = relay.transform.InferType()(mod)
output = func_1770()
func_1771 = relay.Function([], output)
mutated_mod['func_1771'] = func_1771
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1133_call = mod.get_global_var('func_1133')
func_1134_call = mutated_mod.get_global_var('func_1134')
call_1781 = func_1133_call()
call_1782 = func_1133_call()
var_1785 = relay.var("var_1785", dtype = "float64", shape = (9, 2, 15))#candidate|1785|(9, 2, 15)|var|float64
bop_1786 = relay.less_equal(call_1781.astype('bool'), relay.reshape(var_1785.astype('bool'), relay.shape_of(call_1781))) # shape=(9, 2, 15)
bop_1789 = relay.less_equal(call_1782.astype('bool'), relay.reshape(var_1785.astype('bool'), relay.shape_of(call_1782))) # shape=(9, 2, 15)
var_1806 = relay.var("var_1806", dtype = "bool", shape = (9, 2, 15))#candidate|1806|(9, 2, 15)|var|bool
bop_1807 = relay.logical_xor(bop_1786.astype('uint8'), relay.reshape(var_1806.astype('uint8'), relay.shape_of(bop_1786))) # shape=(9, 2, 15)
bop_1810 = relay.logical_xor(bop_1789.astype('uint8'), relay.reshape(var_1806.astype('uint8'), relay.shape_of(bop_1789))) # shape=(9, 2, 15)
output = relay.Tuple([bop_1807,])
output2 = relay.Tuple([bop_1810,])
func_1811 = relay.Function([var_1785,var_1806,], output)
mod['func_1811'] = func_1811
mod = relay.transform.InferType()(mod)
mutated_mod['func_1811'] = func_1811
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1811_call = mutated_mod.get_global_var('func_1811')
var_1813 = relay.var("var_1813", dtype = "float64", shape = (9, 2, 15))#candidate|1813|(9, 2, 15)|var|float64
var_1814 = relay.var("var_1814", dtype = "bool", shape = (9, 2, 15))#candidate|1814|(9, 2, 15)|var|bool
call_1812 = func_1811_call(var_1813,var_1814,)
output = call_1812
func_1815 = relay.Function([var_1813,var_1814,], output)
mutated_mod['func_1815'] = func_1815
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1152_call = mod.get_global_var('func_1152')
func_1153_call = mutated_mod.get_global_var('func_1153')
call_1849 = relay.TupleGetItem(func_1152_call(), 0)
call_1850 = relay.TupleGetItem(func_1153_call(), 0)
func_1152_call = mod.get_global_var('func_1152')
func_1153_call = mutated_mod.get_global_var('func_1153')
call_1851 = relay.TupleGetItem(func_1152_call(), 0)
call_1852 = relay.TupleGetItem(func_1153_call(), 0)
func_1303_call = mod.get_global_var('func_1303')
func_1310_call = mutated_mod.get_global_var('func_1310')
var_1855 = relay.var("var_1855", dtype = "int8", shape = (18, 6))#candidate|1855|(18, 6)|var|int8
var_1856 = relay.var("var_1856", dtype = "int8", shape = (1296,))#candidate|1856|(1296,)|var|int8
var_1857 = relay.var("var_1857", dtype = "float32", shape = (1134,))#candidate|1857|(1134,)|var|float32
var_1858 = relay.var("var_1858", dtype = "int64", shape = (768,))#candidate|1858|(768,)|var|int64
call_1854 = relay.TupleGetItem(func_1303_call(relay.reshape(var_1855.astype('int8'), [9, 12, 1]), relay.reshape(var_1856.astype('int8'), [9, 12, 12]), relay.reshape(var_1857.astype('float32'), [27, 42]), relay.reshape(var_1858.astype('int64'), [768,]), relay.reshape(var_1857.astype('float64'), [27, 42]), ), 5)
call_1859 = relay.TupleGetItem(func_1310_call(relay.reshape(var_1855.astype('int8'), [9, 12, 1]), relay.reshape(var_1856.astype('int8'), [9, 12, 12]), relay.reshape(var_1857.astype('float32'), [27, 42]), relay.reshape(var_1858.astype('int64'), [768,]), relay.reshape(var_1857.astype('float64'), [27, 42]), ), 5)
func_1710_call = mod.get_global_var('func_1710')
func_1712_call = mutated_mod.get_global_var('func_1712')
call_1872 = relay.TupleGetItem(func_1710_call(relay.reshape(call_1854.astype('bool'), [27, 42])), 1)
call_1873 = relay.TupleGetItem(func_1712_call(relay.reshape(call_1854.astype('bool'), [27, 42])), 1)
var_1883 = relay.var("var_1883", dtype = "int8", shape = (1296,))#candidate|1883|(1296,)|var|int8
bop_1884 = relay.right_shift(var_1856.astype('uint32'), relay.reshape(var_1883.astype('uint32'), relay.shape_of(var_1856))) # shape=(1296,)
var_1910 = relay.var("var_1910", dtype = "int8", shape = (18, 6))#candidate|1910|(18, 6)|var|int8
bop_1911 = relay.divide(var_1855.astype('float64'), relay.reshape(var_1910.astype('float64'), relay.shape_of(var_1855))) # shape=(18, 6)
uop_1914 = relay.acosh(call_1854.astype('float64')) # shape=(9, 9, 14)
uop_1916 = relay.acosh(call_1859.astype('float64')) # shape=(9, 9, 14)
bop_1932 = relay.logical_and(var_1856.astype('bool'), relay.reshape(bop_1884.astype('bool'), relay.shape_of(var_1856))) # shape=(1296,)
func_1326_call = mod.get_global_var('func_1326')
func_1328_call = mutated_mod.get_global_var('func_1328')
call_1940 = relay.TupleGetItem(func_1326_call(), 0)
call_1941 = relay.TupleGetItem(func_1328_call(), 0)
output = relay.Tuple([call_1849,call_1851,var_1857,var_1858,call_1872,bop_1911,uop_1914,bop_1932,call_1940,])
output2 = relay.Tuple([call_1850,call_1852,var_1857,var_1858,call_1873,bop_1911,uop_1916,bop_1932,call_1941,])
func_1948 = relay.Function([var_1855,var_1856,var_1857,var_1858,var_1883,var_1910,], output)
mod['func_1948'] = func_1948
mod = relay.transform.InferType()(mod)
var_1949 = relay.var("var_1949", dtype = "int8", shape = (18, 6))#candidate|1949|(18, 6)|var|int8
var_1950 = relay.var("var_1950", dtype = "int8", shape = (1296,))#candidate|1950|(1296,)|var|int8
var_1951 = relay.var("var_1951", dtype = "float32", shape = (1134,))#candidate|1951|(1134,)|var|float32
var_1952 = relay.var("var_1952", dtype = "int64", shape = (768,))#candidate|1952|(768,)|var|int64
var_1953 = relay.var("var_1953", dtype = "int8", shape = (1296,))#candidate|1953|(1296,)|var|int8
var_1954 = relay.var("var_1954", dtype = "int8", shape = (18, 6))#candidate|1954|(18, 6)|var|int8
output = func_1948(var_1949,var_1950,var_1951,var_1952,var_1953,var_1954,)
func_1955 = relay.Function([var_1949,var_1950,var_1951,var_1952,var_1953,var_1954,], output)
mutated_mod['func_1955'] = func_1955
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1982 = relay.var("var_1982", dtype = "float64", shape = (1, 15, 5))#candidate|1982|(1, 15, 5)|var|float64
var_1983 = relay.var("var_1983", dtype = "float64", shape = (3, 15, 5))#candidate|1983|(3, 15, 5)|var|float64
bop_1984 = relay.minimum(var_1982.astype('float64'), var_1983.astype('float64')) # shape=(3, 15, 5)
func_75_call = mod.get_global_var('func_75')
func_78_call = mutated_mod.get_global_var('func_78')
const_1999 = relay.const([[-8.371202,-4.480190,7.207022,9.215323,-1.881021,4.575098],[-5.307632,3.846656,-9.902250,-4.661543,-6.614104,-2.532870],[-3.116428,-7.085418,3.114535,7.961356,4.086181,-3.184707],[6.022563,-3.840299,5.840318,-9.669848,3.446912,6.830926],[9.620523,-6.271263,-2.632930,-8.766220,6.361248,0.670530],[4.019862,-5.237142,-7.274858,-7.107330,-7.815581,7.737169],[-1.047159,4.747351,4.492469,4.758416,-6.076168,-6.800328],[6.488188,6.127231,-0.083240,0.479543,0.551394,-9.383877],[-2.790327,-2.492698,1.307143,-1.818577,3.690590,-2.926862],[-4.579940,9.579912,4.444380,0.314309,-0.134852,6.050679],[7.335923,8.068847,-4.241460,-0.486089,-7.242470,4.890823],[-0.994560,6.063487,1.899080,-8.140054,4.458142,5.735463],[-3.310837,7.999287,7.788589,9.716498,3.818137,-9.070612]], dtype = "float32")#candidate|1999|(13, 6)|const|float32
call_1998 = relay.TupleGetItem(func_75_call(relay.reshape(const_1999.astype('float32'), [13, 3, 2])), 0)
call_2000 = relay.TupleGetItem(func_78_call(relay.reshape(const_1999.astype('float32'), [13, 3, 2])), 0)
output = relay.Tuple([bop_1984,call_1998,const_1999,])
output2 = relay.Tuple([bop_1984,call_2000,const_1999,])
func_2005 = relay.Function([var_1982,var_1983,], output)
mod['func_2005'] = func_2005
mod = relay.transform.InferType()(mod)
mutated_mod['func_2005'] = func_2005
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2005_call = mutated_mod.get_global_var('func_2005')
var_2007 = relay.var("var_2007", dtype = "float64", shape = (1, 15, 5))#candidate|2007|(1, 15, 5)|var|float64
var_2008 = relay.var("var_2008", dtype = "float64", shape = (3, 15, 5))#candidate|2008|(3, 15, 5)|var|float64
call_2006 = func_2005_call(var_2007,var_2008,)
output = call_2006
func_2009 = relay.Function([var_2007,var_2008,], output)
mutated_mod['func_2009'] = func_2009
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1326_call = mod.get_global_var('func_1326')
func_1328_call = mutated_mod.get_global_var('func_1328')
call_2031 = relay.TupleGetItem(func_1326_call(), 0)
call_2032 = relay.TupleGetItem(func_1328_call(), 0)
var_2038 = relay.var("var_2038", dtype = "bool", shape = (9, 9, 14))#candidate|2038|(9, 9, 14)|var|bool
bop_2039 = relay.mod(call_2031.astype('float32'), relay.reshape(var_2038.astype('float32'), relay.shape_of(call_2031))) # shape=(9, 9, 14)
bop_2042 = relay.mod(call_2032.astype('float32'), relay.reshape(var_2038.astype('float32'), relay.shape_of(call_2032))) # shape=(9, 9, 14)
func_1152_call = mod.get_global_var('func_1152')
func_1153_call = mutated_mod.get_global_var('func_1153')
call_2053 = relay.TupleGetItem(func_1152_call(), 0)
call_2054 = relay.TupleGetItem(func_1153_call(), 0)
output = relay.Tuple([bop_2039,call_2053,])
output2 = relay.Tuple([bop_2042,call_2054,])
func_2076 = relay.Function([var_2038,], output)
mod['func_2076'] = func_2076
mod = relay.transform.InferType()(mod)
mutated_mod['func_2076'] = func_2076
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2077 = relay.var("var_2077", dtype = "bool", shape = (9, 9, 14))#candidate|2077|(9, 9, 14)|var|bool
func_2076_call = mutated_mod.get_global_var('func_2076')
call_2078 = func_2076_call(var_2077)
output = call_2078
func_2079 = relay.Function([var_2077], output)
mutated_mod['func_2079'] = func_2079
mutated_mod = relay.transform.InferType()(mutated_mod)
func_353_call = mod.get_global_var('func_353')
func_354_call = mutated_mod.get_global_var('func_354')
call_2101 = relay.TupleGetItem(func_353_call(), 0)
call_2102 = relay.TupleGetItem(func_354_call(), 0)
var_2108 = relay.var("var_2108", dtype = "bool", shape = (9, 9, 14))#candidate|2108|(9, 9, 14)|var|bool
bop_2109 = relay.subtract(call_2101.astype('float64'), relay.reshape(var_2108.astype('float64'), relay.shape_of(call_2101))) # shape=(9, 9, 14)
bop_2112 = relay.subtract(call_2102.astype('float64'), relay.reshape(var_2108.astype('float64'), relay.shape_of(call_2102))) # shape=(9, 9, 14)
output = relay.Tuple([bop_2109,])
output2 = relay.Tuple([bop_2112,])
func_2115 = relay.Function([var_2108,], output)
mod['func_2115'] = func_2115
mod = relay.transform.InferType()(mod)
mutated_mod['func_2115'] = func_2115
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2116 = relay.var("var_2116", dtype = "bool", shape = (9, 9, 14))#candidate|2116|(9, 9, 14)|var|bool
func_2115_call = mutated_mod.get_global_var('func_2115')
call_2117 = func_2115_call(var_2116)
output = call_2117
func_2118 = relay.Function([var_2116], output)
mutated_mod['func_2118'] = func_2118
mutated_mod = relay.transform.InferType()(mutated_mod)
func_353_call = mod.get_global_var('func_353')
func_354_call = mutated_mod.get_global_var('func_354')
call_2130 = relay.TupleGetItem(func_353_call(), 0)
call_2131 = relay.TupleGetItem(func_354_call(), 0)
output = call_2130
output2 = call_2131
func_2135 = relay.Function([], output)
mod['func_2135'] = func_2135
mod = relay.transform.InferType()(mod)
mutated_mod['func_2135'] = func_2135
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2135_call = mutated_mod.get_global_var('func_2135')
call_2136 = func_2135_call()
output = call_2136
func_2137 = relay.Function([], output)
mutated_mod['func_2137'] = func_2137
mutated_mod = relay.transform.InferType()(mutated_mod)
func_353_call = mod.get_global_var('func_353')
func_354_call = mutated_mod.get_global_var('func_354')
call_2141 = relay.TupleGetItem(func_353_call(), 0)
call_2142 = relay.TupleGetItem(func_354_call(), 0)
output = call_2141
output2 = call_2142
func_2158 = relay.Function([], output)
mod['func_2158'] = func_2158
mod = relay.transform.InferType()(mod)
output = func_2158()
func_2159 = relay.Function([], output)
mutated_mod['func_2159'] = func_2159
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2194 = relay.var("var_2194", dtype = "uint8", shape = (7, 2, 16))#candidate|2194|(7, 2, 16)|var|uint8
var_2195 = relay.var("var_2195", dtype = "uint8", shape = (7, 2, 16))#candidate|2195|(7, 2, 16)|var|uint8
bop_2196 = relay.bitwise_or(var_2194.astype('uint8'), relay.reshape(var_2195.astype('uint8'), relay.shape_of(var_2194))) # shape=(7, 2, 16)
func_1460_call = mod.get_global_var('func_1460')
func_1466_call = mutated_mod.get_global_var('func_1466')
var_2208 = relay.var("var_2208", dtype = "int32", shape = (546, 2))#candidate|2208|(546, 2)|var|int32
const_2209 = relay.const([[-9.480679],[-6.526078],[-9.239895],[1.864405],[6.039901],[-8.540833],[9.168636],[-0.255089],[-6.810891],[1.843636],[4.765176],[8.385884],[0.698136],[-1.730477],[8.576916],[3.594353],[-3.262125],[0.573875],[8.712014],[-9.932879],[-6.079146],[-9.461146],[-3.376983],[-2.591407],[5.660919],[7.016249],[5.242910],[1.357293],[0.149133],[-3.926373]], dtype = "float32")#candidate|2209|(30, 1)|const|float32
var_2210 = relay.var("var_2210", dtype = "float32", shape = (330, 1))#candidate|2210|(330, 1)|var|float32
var_2211 = relay.var("var_2211", dtype = "float32", shape = ())#candidate|2211|()|var|float32
call_2207 = relay.TupleGetItem(func_1460_call(relay.reshape(var_2208.astype('int32'), [7, 12, 13]), relay.reshape(var_2208.astype('int32'), [7, 12, 13]), relay.reshape(const_2209.astype('float32'), [5, 6]), relay.reshape(var_2210.astype('float32'), [1, 330]), relay.reshape(var_2211.astype('float32'), []), ), 2)
call_2212 = relay.TupleGetItem(func_1466_call(relay.reshape(var_2208.astype('int32'), [7, 12, 13]), relay.reshape(var_2208.astype('int32'), [7, 12, 13]), relay.reshape(const_2209.astype('float32'), [5, 6]), relay.reshape(var_2210.astype('float32'), [1, 330]), relay.reshape(var_2211.astype('float32'), []), ), 2)
func_578_call = mod.get_global_var('func_578')
func_582_call = mutated_mod.get_global_var('func_582')
const_2219 = relay.const([[1.363744],[6.642167],[-3.672202],[5.137860],[-3.450492],[-6.345782],[-2.548238],[-1.039578],[-4.421481],[-3.201060],[-6.122482],[-7.311065],[5.137273],[-9.527502],[7.929791],[9.051604],[-7.963479],[5.725752],[-8.671027],[0.370651],[-8.730612],[0.081698],[-0.717774],[-8.528141],[8.514619],[-1.872861],[-1.087364],[2.722733],[-5.222075],[-9.719885],[0.245883],[-6.385312],[-3.436281],[-2.018967],[6.630740],[2.389382],[6.037395],[-3.595790],[-4.737908],[-3.841501],[7.021311],[4.895943],[7.651058],[-9.450897],[6.878101],[9.767334],[-1.035605],[-4.453528],[-9.584827],[7.143642],[-2.099804],[3.101096],[1.742716],[0.196108],[-1.846351],[-8.274115],[5.620132],[3.675873],[-2.078215],[-5.399736],[-0.743780],[-5.550588],[-2.065261],[1.561127],[8.817114],[-8.060742],[9.419286],[-9.750476],[9.484902],[4.422995],[2.512412],[8.226499],[6.000414],[-0.072923],[-4.025820],[7.150437],[-6.826142],[-6.100608],[0.012981],[1.106391],[-4.936560],[-9.204667],[1.928540],[4.883402],[7.957164],[-3.306949],[-9.299306],[3.456933],[0.276312],[3.681351],[-0.214129],[-6.133421],[-6.994956],[1.807702],[6.896436],[-8.548083],[-0.169851],[2.265346],[4.803961],[-5.614547],[5.284575],[-7.985004],[2.298933],[-9.607205],[1.209957],[-9.293014],[-3.324326],[-1.860812],[5.777869],[-9.176441],[6.051812],[7.557275],[-7.711266],[8.950999],[4.860758],[-7.558870],[5.998321],[-0.218752],[-3.844885],[1.480838],[-1.884200],[3.555257],[-3.301685],[1.170132],[-6.502855],[-1.824131],[-2.458940],[5.065886],[2.843833],[6.577832],[2.182383],[8.430929],[-0.634702],[0.819422],[-5.836453],[-9.787232],[-4.625439],[-8.238585],[8.038151],[2.170119],[4.608789],[8.077533],[4.556950],[-0.549522],[-8.994662],[7.737483],[8.879908],[-5.290154],[-9.474461],[-0.387849],[-5.986204],[5.739121],[7.467877],[7.048345],[7.828912],[-1.132856],[4.618260],[-3.504023],[-3.768510],[5.853668],[-7.121716],[-0.270596],[7.288897],[7.671462],[-5.115845],[5.333199],[-2.617608],[-5.916331],[-8.575313],[8.659253],[-2.559317],[-3.820558],[5.471395],[-8.708671],[-2.721914],[-6.864539],[-7.353128],[-0.718962],[7.109573],[4.173076],[-7.844917],[-6.566181],[9.669634],[-6.407674],[8.233980],[2.618926],[0.126428],[6.327830],[-6.205389],[-1.652691],[4.995106],[-4.942880],[-0.371142],[5.630622],[-0.937594],[9.467502],[8.009618],[-8.917568],[-0.628571],[-9.243920],[-0.320110],[0.557515],[-0.225119],[-9.069457],[-0.034909],[7.226693],[-3.822751],[5.291784],[-2.662002],[-4.404668],[6.064949],[5.146997],[-7.498478],[6.047618],[-1.384021],[-2.920121],[2.150213],[-6.909226],[-4.973822],[8.051960]], dtype = "float32")#candidate|2219|(220, 1)|const|float32
call_2218 = func_578_call(relay.reshape(var_2211.astype('float32'), []), relay.reshape(const_2219.astype('float32'), [5, 4, 11]), )
call_2220 = func_578_call(relay.reshape(var_2211.astype('float32'), []), relay.reshape(const_2219.astype('float32'), [5, 4, 11]), )
output = relay.Tuple([bop_2196,call_2207,var_2208,const_2209,var_2210,var_2211,call_2218,const_2219,])
output2 = relay.Tuple([bop_2196,call_2212,var_2208,const_2209,var_2210,var_2211,call_2220,const_2219,])
func_2222 = relay.Function([var_2194,var_2195,var_2208,var_2210,var_2211,], output)
mod['func_2222'] = func_2222
mod = relay.transform.InferType()(mod)
mutated_mod['func_2222'] = func_2222
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2222_call = mutated_mod.get_global_var('func_2222')
var_2224 = relay.var("var_2224", dtype = "uint8", shape = (7, 2, 16))#candidate|2224|(7, 2, 16)|var|uint8
var_2225 = relay.var("var_2225", dtype = "uint8", shape = (7, 2, 16))#candidate|2225|(7, 2, 16)|var|uint8
var_2226 = relay.var("var_2226", dtype = "int32", shape = (546, 2))#candidate|2226|(546, 2)|var|int32
var_2227 = relay.var("var_2227", dtype = "float32", shape = (330, 1))#candidate|2227|(330, 1)|var|float32
var_2228 = relay.var("var_2228", dtype = "float32", shape = ())#candidate|2228|()|var|float32
call_2223 = func_2222_call(var_2224,var_2225,var_2226,var_2227,var_2228,)
output = call_2223
func_2229 = relay.Function([var_2224,var_2225,var_2226,var_2227,var_2228,], output)
mutated_mod['func_2229'] = func_2229
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1152_call = mod.get_global_var('func_1152')
func_1153_call = mutated_mod.get_global_var('func_1153')
call_2305 = relay.TupleGetItem(func_1152_call(), 0)
call_2306 = relay.TupleGetItem(func_1153_call(), 0)
const_2315 = relay.const([[[-7.928373,0.326519,-2.649589,8.408114,2.548698,2.914642,-3.883706,-8.774037,-9.593115,4.790386,6.704768,-3.638923,-0.939308,4.675200,9.311299],[-1.772744,-8.074697,4.752554,-0.184784,7.768346,-4.744873,8.337279,3.183643,-9.978895,-1.631890,-0.699274,0.354943,3.741402,-0.625937,0.628595]],[[4.369818,-0.180307,0.481409,-1.387057,-7.298503,7.757221,-4.716658,9.169256,0.391147,-3.359733,4.361039,4.647566,4.402773,-2.561404,7.439513],[-2.542239,9.320349,0.434957,-3.515605,9.496181,9.425176,2.994476,7.190328,7.951074,-7.245201,-2.505152,7.392179,-4.538640,-5.560115,-2.798176]],[[-0.496946,8.058083,5.021275,9.923576,-4.931733,-5.023081,3.497901,-8.985512,-5.748227,6.774773,8.569137,-4.965318,4.499327,1.780393,4.756163],[-0.410000,-1.110820,-3.346630,-6.656363,-1.241554,-9.732803,-0.789814,-6.128576,-8.895055,6.951614,-7.869529,4.788959,8.935614,2.511901,9.310490]],[[-6.187736,7.296626,0.082438,9.545024,8.609194,-3.674040,-8.618489,8.489328,5.820796,-4.204264,-4.726086,3.176049,2.847755,-3.434425,-7.803770],[-1.469830,6.046371,1.004850,5.115651,-3.630852,-7.405173,-1.229799,-3.987679,-5.344309,4.197901,-0.613457,3.994744,1.084240,-1.589668,1.419440]],[[8.462179,3.265352,7.495019,9.679063,9.943492,7.435555,1.393218,1.933902,-9.896507,2.328479,-9.028667,6.221204,-3.638723,-8.526929,-2.052883],[2.621181,6.834891,0.143920,6.801520,7.659386,-1.836199,9.726523,-6.520295,1.501509,-7.758656,-8.404114,-7.492621,-5.094574,6.795156,6.398627]],[[-5.018534,0.013937,-1.903766,4.322652,-3.087302,-5.108374,3.708537,-4.716164,-6.043969,-5.288383,-9.011082,6.531212,-3.869285,1.641316,9.095568],[-5.137854,5.468486,3.437892,-2.673572,-1.875592,-6.095799,3.141447,-8.790049,8.935695,-8.588287,1.774896,7.935960,6.096904,-4.042571,3.736024]],[[-6.937475,1.152343,5.805314,5.423414,6.352068,-3.431397,-5.639305,-6.361782,4.739445,-9.452711,4.133064,8.499008,-2.502728,4.862612,1.967289],[-9.872042,-0.898249,-8.153669,8.909574,8.904384,4.861188,-3.430359,7.422911,-7.718179,-3.949152,-7.584726,-3.047428,-4.793169,1.452395,9.684569]],[[-6.846591,-8.651300,9.549664,4.624599,-9.981287,-5.449113,-9.340920,4.705697,8.053961,0.411104,-6.182338,0.343493,1.335048,-0.413576,8.311031],[1.981935,2.325725,-2.288186,-8.198680,9.562835,-4.746218,-6.309596,-8.483507,4.416618,9.125545,-3.945012,-3.737482,-0.687545,8.049294,-6.997095]],[[-1.353256,6.524667,7.810942,9.775804,2.655933,-6.845389,-3.271515,-8.043125,1.917184,-1.338481,-0.456761,-7.574205,-3.608371,-1.976717,5.362118],[6.564647,5.328427,-2.515819,-2.503733,-7.435323,-1.403333,-3.711598,-4.651584,-5.173645,-6.998867,-9.590592,8.455977,4.865860,-1.540946,4.159230]]], dtype = "float64")#candidate|2315|(9, 2, 15)|const|float64
bop_2316 = relay.minimum(call_2305.astype('uint8'), relay.reshape(const_2315.astype('uint8'), relay.shape_of(call_2305))) # shape=(9, 2, 15)
bop_2319 = relay.minimum(call_2306.astype('uint8'), relay.reshape(const_2315.astype('uint8'), relay.shape_of(call_2306))) # shape=(9, 2, 15)
output = bop_2316
output2 = bop_2319
func_2320 = relay.Function([], output)
mod['func_2320'] = func_2320
mod = relay.transform.InferType()(mod)
mutated_mod['func_2320'] = func_2320
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2320_call = mutated_mod.get_global_var('func_2320')
call_2321 = func_2320_call()
output = call_2321
func_2322 = relay.Function([], output)
mutated_mod['func_2322'] = func_2322
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2158_call = mod.get_global_var('func_2158')
func_2159_call = mutated_mod.get_global_var('func_2159')
call_2375 = func_2158_call()
call_2376 = func_2158_call()
uop_2394 = relay.erf(call_2375.astype('float32')) # shape=(9, 9, 14)
uop_2396 = relay.erf(call_2376.astype('float32')) # shape=(9, 9, 14)
func_1075_call = mod.get_global_var('func_1075')
func_1079_call = mutated_mod.get_global_var('func_1079')
var_2405 = relay.var("var_2405", dtype = "bool", shape = ())#candidate|2405|()|var|bool
var_2406 = relay.var("var_2406", dtype = "float32", shape = (220,))#candidate|2406|(220,)|var|float32
call_2404 = relay.TupleGetItem(func_1075_call(relay.reshape(var_2405.astype('bool'), []), relay.reshape(call_2375.astype('float32'), [1134, 1]), relay.reshape(var_2406.astype('float32'), [220,]), ), 4)
call_2407 = relay.TupleGetItem(func_1079_call(relay.reshape(var_2405.astype('bool'), []), relay.reshape(call_2375.astype('float32'), [1134, 1]), relay.reshape(var_2406.astype('float32'), [220,]), ), 4)
func_511_call = mod.get_global_var('func_511')
func_512_call = mutated_mod.get_global_var('func_512')
call_2416 = relay.TupleGetItem(func_511_call(), 0)
call_2417 = relay.TupleGetItem(func_512_call(), 0)
output = relay.Tuple([uop_2394,call_2404,var_2405,var_2406,call_2416,])
output2 = relay.Tuple([uop_2396,call_2407,var_2405,var_2406,call_2417,])
func_2421 = relay.Function([var_2405,var_2406,], output)
mod['func_2421'] = func_2421
mod = relay.transform.InferType()(mod)
mutated_mod['func_2421'] = func_2421
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2421_call = mutated_mod.get_global_var('func_2421')
var_2423 = relay.var("var_2423", dtype = "bool", shape = ())#candidate|2423|()|var|bool
var_2424 = relay.var("var_2424", dtype = "float32", shape = (220,))#candidate|2424|(220,)|var|float32
call_2422 = func_2421_call(var_2423,var_2424,)
output = call_2422
func_2425 = relay.Function([var_2423,var_2424,], output)
mutated_mod['func_2425'] = func_2425
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2482 = relay.var("var_2482", dtype = "float64", shape = (7, 9, 3))#candidate|2482|(7, 9, 3)|var|float64
uop_2483 = relay.rsqrt(var_2482.astype('float64')) # shape=(7, 9, 3)
func_2222_call = mod.get_global_var('func_2222')
func_2229_call = mutated_mod.get_global_var('func_2229')
var_2487 = relay.var("var_2487", dtype = "uint8", shape = (224,))#candidate|2487|(224,)|var|uint8
const_2488 = relay.const([[10,-1,-5,-6,8,-4,5,-3,-7,-8,-8,-9,-9,-9,-10,-8,-6,-1,-3,9,8,-8,-7,2,3,-1,6,-9,6,9,4,8,6,3,6,-1,-7,9,-2,-10,-4,6,-2,5,5,-3,9,9,3,-5,3,-3,-4,4,7,1,-6,9,3,5,-10,-7,4,-4,-7,3,-6,-10,-1,6,-10,-9,-5,-4,4,6,-2,3],[-8,-10,-10,7,-3,4,-3,4,-9,-10,3,1,-7,-1,10,4,5,-5,9,10,-10,6,7,7,-2,8,-2,1,8,8,-10,-7,6,-9,-5,5,-3,7,10,6,2,7,5,-3,2,2,-2,8,-1,3,5,-1,10,10,3,-3,-2,-7,8,9,-1,-3,-9,5,7,-8,-7,-1,-7,8,-7,-3,1,5,1,-1,-6,-9],[5,-7,-9,5,1,2,8,-8,-1,5,2,-1,-7,-7,-7,10,-8,4,-1,5,6,-2,9,3,-10,6,-10,4,1,2,8,10,10,-7,-5,-5,-2,-7,-6,5,-9,-9,-7,-6,-4,6,10,-8,-2,-1,7,-9,-2,4,-7,5,9,4,-5,-6,-1,-1,-10,1,-5,-8,8,-3,-6,-6,7,8,5,4,6,-1,4,-8],[-2,-4,-1,9,-2,8,1,-10,7,-6,3,4,-2,6,8,10,-3,9,9,-1,-2,10,5,6,9,6,-4,1,7,3,1,7,8,-6,-4,9,-8,-1,-8,-8,-9,-8,5,10,-9,7,-6,4,8,10,-8,8,-5,-2,-8,-9,3,9,-9,1,-1,9,-3,-1,4,-3,-2,10,-3,-2,3,5,1,5,4,9,4,-3],[3,-8,-7,1,5,7,-4,-9,10,-4,-10,2,-4,-9,1,3,-8,-10,3,6,-3,-8,-4,5,-10,5,-5,-2,-10,-7,-3,-4,3,-7,5,8,8,6,-10,-6,-9,10,9,-5,5,7,-4,10,-5,8,2,-10,2,10,9,2,-8,4,-6,-6,2,-10,6,-8,9,-3,-1,-1,10,-5,-7,7,-1,3,-1,-10,-2,-1],[-10,-9,4,10,-6,-10,-2,3,4,-7,2,-4,-10,-8,-3,-3,10,2,6,3,2,-6,10,8,-3,1,-6,10,9,8,-9,-7,-5,-4,2,10,-3,-2,10,-7,2,8,-4,4,8,-5,7,7,10,10,1,8,8,6,-8,9,-2,-10,5,10,-9,10,7,-7,-1,1,-7,-5,-10,3,6,10,10,4,7,9,-9,4],[-8,-4,-6,-10,-5,9,6,3,-3,9,6,-9,9,1,-10,-5,5,-7,8,5,-10,9,6,9,-9,-3,4,-8,-3,-3,5,1,-1,1,4,3,10,-2,-5,6,-9,-9,-4,-8,-7,9,-2,9,9,-3,8,10,7,4,5,6,-10,9,-1,10,9,-9,2,-4,-2,5,-10,-7,7,9,-3,7,1,9,2,-1,1,-4],[9,-3,5,-10,2,-4,-1,2,9,7,-5,1,8,-10,3,9,2,-5,-1,-5,-2,-4,3,7,5,-3,2,10,7,6,-4,2,-8,-6,-1,4,10,-8,-3,-9,1,-1,-10,-3,-10,7,-6,3,-7,5,-8,3,6,-4,-8,-1,7,-4,-4,-3,5,-2,2,-7,2,7,2,1,3,10,8,-2,3,3,-2,4,8,-10],[-1,9,2,5,-6,-3,2,2,-5,7,2,-9,-8,-4,9,7,5,-5,-2,3,7,-8,-1,10,-7,-8,-9,-3,-10,-5,3,10,10,4,-4,-1,-5,9,-1,4,6,-7,6,3,-7,4,-10,5,-10,1,8,-4,-3,6,3,-2,-9,5,-8,-1,7,-2,-10,9,10,3,-4,-8,3,8,4,-5,8,-2,10,-1,9,-6],[-4,10,-4,9,-3,4,-1,-1,4,-1,8,9,7,5,-5,6,5,-1,-2,-7,-7,10,-3,6,9,-10,-3,4,-10,5,-9,5,10,3,6,6,2,5,8,-5,-9,3,5,-1,8,10,-8,1,9,-9,-7,10,2,7,7,1,6,-9,3,5,5,-9,10,-10,-6,-6,3,-4,-3,8,-2,7,3,8,3,7,1,-10],[8,10,6,-8,-5,-7,3,8,4,-3,9,-5,7,10,-10,6,10,-1,-5,-7,-1,-7,-10,2,-10,1,8,-4,7,-2,-4,-4,-8,1,6,-2,-2,3,-3,6,-10,5,-4,-3,-2,-10,5,3,9,-5,-1,3,-5,7,-9,-5,9,-7,6,-4,6,7,7,5,3,2,6,-9,-10,-2,7,-2,-7,9,-10,4,-8,7],[8,-3,1,-4,1,-1,10,-3,-3,5,-3,-5,-9,9,9,-5,8,-7,5,10,-7,-8,6,-3,-4,1,3,10,-5,1,5,-1,4,-3,-3,5,-4,6,4,-1,8,-6,5,2,7,6,-9,-4,-6,2,-10,7,9,5,3,-2,5,-1,-5,4,4,3,-6,-6,6,2,-6,1,4,-9,-2,-7,10,-9,9,-5,3,8],[-5,-10,4,-6,-2,-6,-2,1,-7,-1,6,-9,5,-2,4,-6,8,-1,-9,-3,-5,-5,-5,1,7,-8,-3,-2,3,-7,-5,9,10,-6,-8,-9,-9,9,5,7,-3,-8,1,7,3,-2,-6,4,2,6,-10,-2,3,4,-3,-9,3,5,7,-10,7,-1,-5,-10,4,9,-10,4,2,1,-8,-2,-10,-6,10,-7,8,-9],[-10,1,4,7,-1,-9,-8,8,1,-8,-8,7,-8,6,-10,-8,3,-6,9,1,4,-3,-10,-8,-1,-3,-1,-9,-3,-7,-10,-5,6,10,-5,-5,2,-3,7,5,-10,-8,-7,1,2,6,1,-6,3,2,8,-10,5,5,7,-1,8,-7,10,8,-4,-5,6,-3,7,10,5,8,-3,4,-4,-6,-8,-1,3,-10,2,5]], dtype = "int32")#candidate|2488|(14, 78)|const|int32
const_2489 = relay.const([-2.478805,7.673277,5.213997,4.607344,6.381995,7.263340,0.635829,-8.485693,-7.203630,-8.750728,3.838053,0.521074,-9.899229,3.026571,-4.720715,-1.804435,-0.827224,-0.231394,0.419053,-8.960737,6.734636,6.760583,-1.236011,-5.195463,-7.932924,0.668637,-5.036981,-8.511529,6.163203,-9.090859,8.412790,-0.763730,3.072518,4.848543,-1.228741,5.375100,-6.764992,1.146080,9.550294,5.652282,-1.919595,7.752326,4.094489,6.655548,8.714439,-4.859239,-8.296256,-0.085098,8.777329,7.702689,-1.972858,9.494419,3.844561,5.997957,8.460525,9.566035,-9.980928,-0.872945,-5.541731,-4.183216,-8.649452,-9.075208,-5.042505,-0.284267,6.511497,4.012411,-7.785745,-9.813458,3.532300,-0.244171,-5.120638,-9.906357,3.804994,-5.443812,1.017341,0.479875,9.371226,-9.535289,1.354814,-5.267250,-8.603517,-3.915693,-9.707013,4.205216,-8.064760,-8.078346,3.086094,1.027377,-4.395487,-9.757963,3.981471,0.789004,-9.339458,-6.778139,-6.816014,-9.825536,-3.160189,9.642909,1.420833,5.869602,0.124173,-5.303518,-1.190921,1.722843,3.403434,-3.226596,6.144680,3.464084,-3.791963,9.565991,-8.959346,3.024233,-4.878334,-8.909575,3.705376,-9.030563,6.993766,9.665254,-3.012933,-3.560422,0.709521,-4.089916,-8.652831,-3.912415,6.426852,8.613892,6.800805,3.427723,-8.148478,4.766650,0.484128,-0.435611,-2.733826,-0.664232,-6.398771,-6.935459,-6.463285,-5.413473,-8.227154,8.917470,0.096913,-2.226280,1.391627,-6.715059,2.450868,-3.457081,3.851798,9.350113,-9.548100,9.102504,4.939985,-1.502997,-7.447807,-1.683814,9.809332,0.579711,8.908684,9.604091,3.528134,-7.034211,2.521513,0.647557,5.248725,-6.934127,-7.313827,-0.518392,8.303306,1.489927,6.771247,7.908194,2.770984,5.186734,-4.871641,-7.225056,0.304505,-8.746690,6.484537,0.619696,-8.270076,-4.437278,4.161983,-6.601825,-5.783707,1.588074,-2.070450,-3.755841,8.624388,-9.874252,4.602858,0.780891,1.596479,9.462392,2.204440,0.776218,2.846170,-0.129314,-7.507406,3.039282,3.808455,-9.473303,1.437980,9.124315,2.690278,-1.710594,-0.841106,4.698314,2.081716,-5.702527,4.144741,3.975779,-5.580919,-3.004135,-8.422423,0.732062,-5.518626,0.191437,-5.527793,-4.809721,-6.828328,-5.222545,-5.746795,-0.486922,4.108008,-8.113568,-0.621965,0.386727,9.668371,6.607169,7.070430,8.673120,6.949836,-6.927818,-6.692226,7.268440,9.367795,4.945042,0.431261,-4.388662,8.680243,7.384390,-4.988613,-9.991915,-6.663166,7.586960,-7.212748,2.219745,-3.145899,0.346489,-5.556697,1.435405,4.177022,6.171493,7.877656,7.579169,-2.861439,-6.391456,9.092666,4.720555,3.367053,0.077380,3.747901,1.456377,-1.516167,-5.477981,4.406089,5.285316,2.689586,4.081511,-2.053212,2.803001,6.432432,0.251758,-6.083626,0.822095,7.935583,4.648788,3.868187,-6.103103,6.503650,3.880879,7.180379,4.936300,0.933024,5.498406,3.702314,3.066193,-5.534035,4.991750,9.654557,-3.442611,-8.828959,5.143681,-3.968885,7.528545,5.167557,-8.150138,2.680608,0.318522,-3.305217,-9.864283,0.134817,5.088166,-4.667387,-7.537223,2.223156,3.178951,-6.406312,3.093766,-8.908750,-7.174479,3.854157,-7.823933,6.465832,-1.799371,-9.175089,2.620264,-8.976090,-3.598132,-7.398832,-9.574881,0.737035,8.278286,-6.159850,0.806039,7.096615,-6.598998,-7.724757,-5.345014,-4.455883,-7.161809], dtype = "float32")#candidate|2489|(330,)|const|float32
const_2490 = relay.const(-4.283041, dtype = "float32")#candidate|2490|()|const|float32
call_2486 = relay.TupleGetItem(func_2222_call(relay.reshape(var_2487.astype('uint8'), [7, 2, 16]), relay.reshape(var_2487.astype('uint8'), [7, 2, 16]), relay.reshape(const_2488.astype('int32'), [546, 2]), relay.reshape(const_2489.astype('float32'), [330, 1]), relay.reshape(const_2490.astype('float32'), []), ), 3)
call_2491 = relay.TupleGetItem(func_2229_call(relay.reshape(var_2487.astype('uint8'), [7, 2, 16]), relay.reshape(var_2487.astype('uint8'), [7, 2, 16]), relay.reshape(const_2488.astype('int32'), [546, 2]), relay.reshape(const_2489.astype('float32'), [330, 1]), relay.reshape(const_2490.astype('float32'), []), ), 3)
uop_2496 = relay.sqrt(uop_2483.astype('float64')) # shape=(7, 9, 3)
output = relay.Tuple([call_2486,var_2487,const_2488,const_2489,const_2490,uop_2496,])
output2 = relay.Tuple([call_2491,var_2487,const_2488,const_2489,const_2490,uop_2496,])
func_2511 = relay.Function([var_2482,var_2487,], output)
mod['func_2511'] = func_2511
mod = relay.transform.InferType()(mod)
var_2512 = relay.var("var_2512", dtype = "float64", shape = (7, 9, 3))#candidate|2512|(7, 9, 3)|var|float64
var_2513 = relay.var("var_2513", dtype = "uint8", shape = (224,))#candidate|2513|(224,)|var|uint8
output = func_2511(var_2512,var_2513,)
func_2514 = relay.Function([var_2512,var_2513,], output)
mutated_mod['func_2514'] = func_2514
mutated_mod = relay.transform.InferType()(mutated_mod)
func_353_call = mod.get_global_var('func_353')
func_354_call = mutated_mod.get_global_var('func_354')
call_2572 = relay.TupleGetItem(func_353_call(), 0)
call_2573 = relay.TupleGetItem(func_354_call(), 0)
func_264_call = mod.get_global_var('func_264')
func_267_call = mutated_mod.get_global_var('func_267')
const_2583 = relay.const([[-2.346741],[8.658135],[2.656704],[-0.718898],[1.274227],[8.630242],[-9.008545],[-9.966823],[-9.746361],[-7.296516],[-4.663637],[8.227797],[-9.503590],[0.590783],[-5.576816],[-7.540807],[1.018137],[-3.552452],[6.238795],[3.234703],[0.481338],[-3.862164],[-7.390617],[-9.435115],[2.765287],[5.811224],[7.270055],[0.952651],[2.747080],[-7.651480]], dtype = "float32")#candidate|2583|(30, 1)|const|float32
var_2584 = relay.var("var_2584", dtype = "float32", shape = (330,))#candidate|2584|(330,)|var|float32
call_2582 = relay.TupleGetItem(func_264_call(relay.reshape(const_2583.astype('float32'), [1, 6, 5]), relay.reshape(var_2584.astype('float32'), [11, 6, 5]), ), 0)
call_2585 = relay.TupleGetItem(func_267_call(relay.reshape(const_2583.astype('float32'), [1, 6, 5]), relay.reshape(var_2584.astype('float32'), [11, 6, 5]), ), 0)
output = relay.Tuple([call_2572,call_2582,const_2583,var_2584,])
output2 = relay.Tuple([call_2573,call_2585,const_2583,var_2584,])
func_2586 = relay.Function([var_2584,], output)
mod['func_2586'] = func_2586
mod = relay.transform.InferType()(mod)
var_2587 = relay.var("var_2587", dtype = "float32", shape = (330,))#candidate|2587|(330,)|var|float32
output = func_2586(var_2587)
func_2588 = relay.Function([var_2587], output)
mutated_mod['func_2588'] = func_2588
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1480_call = mod.get_global_var('func_1480')
func_1481_call = mutated_mod.get_global_var('func_1481')
call_2594 = relay.TupleGetItem(func_1480_call(), 1)
call_2595 = relay.TupleGetItem(func_1481_call(), 1)
output = call_2594
output2 = call_2595
func_2612 = relay.Function([], output)
mod['func_2612'] = func_2612
mod = relay.transform.InferType()(mod)
mutated_mod['func_2612'] = func_2612
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2612_call = mutated_mod.get_global_var('func_2612')
call_2613 = func_2612_call()
output = call_2613
func_2614 = relay.Function([], output)
mutated_mod['func_2614'] = func_2614
mutated_mod = relay.transform.InferType()(mutated_mod)
func_277_call = mod.get_global_var('func_277')
func_278_call = mutated_mod.get_global_var('func_278')
call_2635 = func_277_call()
call_2636 = func_277_call()
uop_2637 = relay.atan(call_2635.astype('float32')) # shape=(9, 9, 14)
uop_2639 = relay.atan(call_2636.astype('float32')) # shape=(9, 9, 14)
output = relay.Tuple([uop_2637,])
output2 = relay.Tuple([uop_2639,])
func_2648 = relay.Function([], output)
mod['func_2648'] = func_2648
mod = relay.transform.InferType()(mod)
mutated_mod['func_2648'] = func_2648
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2648_call = mutated_mod.get_global_var('func_2648')
call_2649 = func_2648_call()
output = call_2649
func_2650 = relay.Function([], output)
mutated_mod['func_2650'] = func_2650
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2158_call = mod.get_global_var('func_2158')
func_2159_call = mutated_mod.get_global_var('func_2159')
call_2757 = func_2158_call()
call_2758 = func_2158_call()
const_2781 = relay.const([[[True,True,False,True,False,False,False,False,True,False,False,False,True,False],[True,True,False,True,True,True,False,False,True,False,False,True,False,False],[True,True,False,False,False,True,False,False,True,False,True,True,True,True],[True,False,True,False,False,True,False,True,True,False,True,False,False,True],[True,False,True,False,False,False,True,False,True,True,True,False,True,False],[True,False,True,True,True,False,True,True,True,True,False,False,True,False],[True,True,True,False,False,True,True,False,True,False,False,False,True,True],[False,False,True,False,True,False,True,False,False,False,True,False,False,True],[False,True,True,True,True,True,False,True,False,True,True,True,True,True]],[[True,False,True,True,False,False,True,True,True,False,True,True,True,False],[True,True,False,False,False,True,True,True,False,True,False,False,False,True],[True,True,True,False,True,False,False,False,False,True,True,True,False,True],[True,True,True,False,False,True,False,False,True,False,False,True,True,False],[False,False,False,True,True,True,False,True,True,False,True,True,True,False],[True,True,True,False,False,True,False,False,False,True,True,True,True,True],[True,False,True,True,False,True,False,False,False,False,True,True,False,False],[True,False,False,False,True,False,False,False,True,False,False,True,True,True],[True,False,False,False,True,False,True,True,True,True,True,False,False,False]],[[True,False,False,False,False,True,False,False,True,False,False,False,True,False],[True,False,False,False,True,False,False,False,False,True,True,False,True,True],[False,True,True,True,True,False,False,False,True,False,False,False,True,False],[False,False,False,True,False,False,False,True,True,False,True,True,False,True],[True,True,False,True,False,True,True,True,True,True,True,False,True,True],[False,False,True,False,False,False,False,True,False,False,False,True,False,False],[True,False,True,False,True,True,False,True,False,True,True,False,False,False],[False,True,False,True,False,True,True,False,True,True,True,False,True,False],[True,False,False,False,False,True,True,False,False,True,True,False,False,False]],[[False,False,True,True,True,True,False,True,False,True,False,False,True,True],[False,False,True,True,False,True,False,True,False,True,True,False,False,False],[True,False,True,True,False,False,False,True,True,False,True,True,False,True],[True,True,False,True,True,False,True,False,True,True,True,False,False,False],[False,False,False,True,False,True,True,False,True,True,True,False,False,False],[False,False,True,True,True,False,True,False,False,False,False,True,True,True],[True,True,True,False,True,False,True,True,True,False,True,True,False,False],[True,False,True,True,False,False,True,True,False,False,True,False,False,False],[False,True,True,True,False,True,True,True,True,True,False,False,True,True]],[[True,True,True,True,True,False,False,True,True,True,False,True,True,False],[False,True,False,False,False,True,True,False,False,True,True,True,False,True],[False,True,False,True,True,False,False,False,False,True,False,True,False,False],[True,False,False,True,True,False,True,False,False,False,False,False,True,False],[False,True,True,False,True,False,True,False,False,False,False,False,True,False],[False,True,True,True,True,True,False,True,False,True,True,False,True,True],[False,True,True,False,False,True,False,True,True,False,True,True,False,False],[True,True,False,True,False,True,False,False,True,False,True,True,True,False],[True,True,True,True,False,True,False,False,False,False,False,True,False,True]],[[False,False,True,True,True,False,True,False,True,True,False,False,False,True],[True,True,True,False,False,False,False,False,True,False,True,True,False,True],[False,True,False,False,True,False,False,True,False,True,True,True,False,True],[False,False,False,True,False,True,False,False,True,False,True,True,False,False],[False,False,True,True,True,True,True,True,True,True,False,True,False,True],[True,True,False,True,True,False,False,True,True,False,False,False,False,True],[True,False,True,False,True,False,True,False,True,False,True,True,False,True],[False,False,False,True,True,False,False,True,False,True,False,True,True,False],[False,False,True,True,False,False,True,True,False,False,False,False,True,True]],[[True,True,True,True,True,True,True,True,False,True,False,False,False,False],[False,False,True,False,False,False,True,False,True,True,False,True,True,False],[True,False,True,False,True,False,False,True,False,True,False,False,False,False],[False,True,False,False,True,True,False,True,False,False,True,True,True,True],[False,False,True,False,True,True,False,False,True,False,True,True,True,True],[True,False,True,False,True,False,False,False,True,True,True,True,True,False],[False,False,False,True,False,True,True,True,False,True,False,False,False,True],[True,True,True,True,True,False,True,False,False,True,False,False,False,True],[True,True,False,False,True,False,True,False,True,False,True,False,True,True]],[[False,True,True,True,True,False,False,False,False,True,True,True,True,True],[True,True,True,False,True,True,False,False,True,True,False,False,True,False],[False,True,True,False,False,False,False,True,False,False,False,True,False,True],[False,True,False,True,False,True,True,True,False,False,False,True,True,False],[False,True,False,False,False,False,True,False,False,True,False,True,True,False],[False,True,True,False,False,True,True,True,True,False,False,True,False,False],[True,False,True,True,True,True,True,True,True,False,True,False,True,True],[True,True,True,True,False,False,True,True,False,False,False,True,False,False],[False,True,True,True,True,False,False,False,True,False,True,True,False,False]],[[True,False,False,False,True,True,True,True,False,False,False,False,False,False],[True,False,True,True,True,False,True,False,False,True,False,True,True,True],[False,False,False,True,False,False,True,True,True,False,False,True,False,True],[True,False,True,False,True,False,False,False,False,True,True,False,False,True],[False,False,True,False,False,True,False,False,True,True,True,False,False,True],[False,False,False,True,True,False,False,False,False,False,False,True,True,True],[True,True,True,True,True,False,False,True,True,False,True,False,True,False],[False,True,False,False,False,False,False,True,False,False,True,True,False,True],[False,True,True,True,False,False,True,False,False,True,True,True,True,True]]], dtype = "bool")#candidate|2781|(9, 9, 14)|const|bool
bop_2782 = relay.logical_and(call_2757.astype('bool'), relay.reshape(const_2781.astype('bool'), relay.shape_of(call_2757))) # shape=(9, 9, 14)
bop_2785 = relay.logical_and(call_2758.astype('bool'), relay.reshape(const_2781.astype('bool'), relay.shape_of(call_2758))) # shape=(9, 9, 14)
func_1075_call = mod.get_global_var('func_1075')
func_1079_call = mutated_mod.get_global_var('func_1079')
var_2789 = relay.var("var_2789", dtype = "bool", shape = ())#candidate|2789|()|var|bool
const_2790 = relay.const([-9.126880,7.541706,-9.492828,-5.775405,-7.267822,1.548236,-7.564516,-6.277281,3.755702,6.316513,-1.678171,5.046682,-3.542759,-5.613637,-0.694251,8.720382,4.328392,3.995020,3.695469,-3.685215,1.554937,4.327366,-0.972600,1.244607,6.433586,-0.125994,6.452127,-1.016300,-3.267664,5.933701,-2.903926,-5.590605,5.212734,-2.246702,7.501784,-6.390643,-9.964907,-2.119174,0.847998,8.425677,-5.353353,8.665798,9.351342,8.640499,-7.301558,2.859683,2.072975,-1.788832,7.975052,-7.032654,3.787205,3.036478,-6.852038,-6.218640,7.373718,3.907659,9.480806,6.479702,-1.948202,9.622215,7.283211,-1.463533,-8.173824,5.128461,4.783961,-7.461444,-5.142298,-2.639796,-6.833466,0.075424,-9.159672,6.522399,4.072587,3.987758,-9.953515,-3.574873,1.065011,-6.040038,5.855390,1.185180,5.459353,9.840844,-8.381248,9.250059,8.942556,-7.635137,3.648554,2.097863,3.026478,-1.766422,8.810713,7.634168,7.323156,-1.087268,-3.071345,0.533933,-2.311809,7.014572,3.400687,0.278331,8.164909,-4.453111,3.869282,4.010880,-5.531248,-9.950880,-3.493538,-2.941060,-6.074248,-2.753356,7.939298,-9.517356,4.976414,-1.249993,-1.889043,8.242006,1.728048,-9.111997,4.757025,8.595622,-8.897156,-2.145933,-5.759155,-1.034560,3.303716,7.755284,8.568468,-8.780305,6.259357,3.492875,-1.337949,-1.345041,-8.678615,3.634769,-5.461033,-0.967399,-4.106084,-3.432472,6.581755,0.002322,1.596574,8.797709,6.190036,8.314387,-4.467371,-8.001401,2.880921,3.064221,-8.146095,-9.263901,2.287124,3.632772,7.840193,-9.765162,-5.787913,7.279912,-4.974130,-6.452145,0.571715,6.366826,-6.260837,-8.279077,-7.691262,-7.330053,-9.021353,1.292851,9.936167,-4.685960,-4.541163,4.350602,-0.483818,7.715101,-4.670033,-1.848492,7.626342,3.090576,-1.061473,-0.295946,3.043073,6.555162,6.032048,-3.239927,8.657295,7.993989,0.940688,-1.393103,7.557283,4.810468,-9.344741,2.038298,9.839164,9.250152,8.612873,-8.371661,-2.324521,-0.948193,-6.763045,-5.675595,1.390379,-8.794369,2.358681,0.371851,-5.305816,-2.809082,-1.980048,-8.044131,-3.961664,8.841628,3.769946,6.383961,1.848610,9.145951,-0.180892,6.673234,5.755583,-2.657260,2.941071,-8.266555,-2.441617,-4.021033], dtype = "float32")#candidate|2790|(220,)|const|float32
call_2788 = relay.TupleGetItem(func_1075_call(relay.reshape(var_2789.astype('bool'), []), relay.reshape(const_2781.astype('float32'), [1134, 1]), relay.reshape(const_2790.astype('float32'), [220,]), ), 4)
call_2791 = relay.TupleGetItem(func_1079_call(relay.reshape(var_2789.astype('bool'), []), relay.reshape(const_2781.astype('float32'), [1134, 1]), relay.reshape(const_2790.astype('float32'), [220,]), ), 4)
func_2648_call = mod.get_global_var('func_2648')
func_2650_call = mutated_mod.get_global_var('func_2650')
call_2793 = relay.TupleGetItem(func_2648_call(), 0)
call_2794 = relay.TupleGetItem(func_2650_call(), 0)
output = relay.Tuple([bop_2782,call_2788,var_2789,const_2790,call_2793,])
output2 = relay.Tuple([bop_2785,call_2791,var_2789,const_2790,call_2794,])
func_2797 = relay.Function([var_2789,], output)
mod['func_2797'] = func_2797
mod = relay.transform.InferType()(mod)
var_2798 = relay.var("var_2798", dtype = "bool", shape = ())#candidate|2798|()|var|bool
output = func_2797(var_2798)
func_2799 = relay.Function([var_2798], output)
mutated_mod['func_2799'] = func_2799
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1133_call = mod.get_global_var('func_1133')
func_1134_call = mutated_mod.get_global_var('func_1134')
call_2818 = func_1133_call()
call_2819 = func_1133_call()
output = call_2818
output2 = call_2819
func_2825 = relay.Function([], output)
mod['func_2825'] = func_2825
mod = relay.transform.InferType()(mod)
mutated_mod['func_2825'] = func_2825
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2825_call = mutated_mod.get_global_var('func_2825')
call_2826 = func_2825_call()
output = call_2826
func_2827 = relay.Function([], output)
mutated_mod['func_2827'] = func_2827
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2135_call = mod.get_global_var('func_2135')
func_2137_call = mutated_mod.get_global_var('func_2137')
call_2831 = func_2135_call()
call_2832 = func_2135_call()
func_1387_call = mod.get_global_var('func_1387')
func_1389_call = mutated_mod.get_global_var('func_1389')
const_2836 = relay.const([[2.701557,2.662088,-9.704912],[5.552901,-4.730698,7.225845],[-5.937303,7.190173,-8.514377],[1.760451,1.930907,-5.714501],[-2.382120,-5.012368,5.911193],[8.050100,2.302386,3.181757],[-4.011178,-1.165960,-2.930281],[-3.113914,-1.714940,6.502821],[4.388695,-1.477992,-0.331575],[2.468145,-7.810545,-0.993048],[7.088908,6.541963,-9.763095],[7.797698,1.502057,-2.780132],[8.722225,-3.390700,-4.487828],[5.002451,2.489074,-4.325214],[-2.282941,-4.535089,-8.375971],[5.194378,4.144369,-5.621334],[8.282137,-5.187072,2.792410],[-6.062615,3.113914,3.596198],[0.274145,-0.839286,-4.420263],[-3.898009,-8.383935,-0.226819],[2.460442,-9.827643,-9.963873],[2.097525,-5.490337,-8.079693],[-9.047220,4.932487,5.586661],[0.310631,6.332469,1.516746],[-7.721243,-4.082194,4.605872],[2.784643,-5.468939,6.745689]], dtype = "float32")#candidate|2836|(26, 3)|const|float32
call_2835 = relay.TupleGetItem(func_1387_call(relay.reshape(const_2836.astype('float32'), [78,])), 1)
call_2837 = relay.TupleGetItem(func_1389_call(relay.reshape(const_2836.astype('float32'), [78,])), 1)
uop_2845 = relay.log10(call_2835.astype('float32')) # shape=(13, 3, 2)
uop_2847 = relay.log10(call_2837.astype('float32')) # shape=(13, 3, 2)
output = relay.Tuple([call_2831,const_2836,uop_2845,])
output2 = relay.Tuple([call_2832,const_2836,uop_2847,])
func_2856 = relay.Function([], output)
mod['func_2856'] = func_2856
mod = relay.transform.InferType()(mod)
output = func_2856()
func_2857 = relay.Function([], output)
mutated_mod['func_2857'] = func_2857
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2856_call = mod.get_global_var('func_2856')
func_2857_call = mutated_mod.get_global_var('func_2857')
call_2858 = relay.TupleGetItem(func_2856_call(), 2)
call_2859 = relay.TupleGetItem(func_2857_call(), 2)
output = relay.Tuple([call_2858,])
output2 = relay.Tuple([call_2859,])
func_2860 = relay.Function([], output)
mod['func_2860'] = func_2860
mod = relay.transform.InferType()(mod)
mutated_mod['func_2860'] = func_2860
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2860_call = mutated_mod.get_global_var('func_2860')
call_2861 = func_2860_call()
output = call_2861
func_2862 = relay.Function([], output)
mutated_mod['func_2862'] = func_2862
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2872 = relay.var("var_2872", dtype = "float32", shape = (3, 14))#candidate|2872|(3, 14)|var|float32
uop_2873 = relay.acosh(var_2872.astype('float32')) # shape=(3, 14)
output = uop_2873
output2 = uop_2873
func_2875 = relay.Function([var_2872,], output)
mod['func_2875'] = func_2875
mod = relay.transform.InferType()(mod)
mutated_mod['func_2875'] = func_2875
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2876 = relay.var("var_2876", dtype = "float32", shape = (3, 14))#candidate|2876|(3, 14)|var|float32
func_2875_call = mutated_mod.get_global_var('func_2875')
call_2877 = func_2875_call(var_2876)
output = call_2877
func_2878 = relay.Function([var_2876], output)
mutated_mod['func_2878'] = func_2878
mutated_mod = relay.transform.InferType()(mutated_mod)
func_722_call = mod.get_global_var('func_722')
func_724_call = mutated_mod.get_global_var('func_724')
call_2880 = relay.TupleGetItem(func_722_call(), 0)
call_2881 = relay.TupleGetItem(func_724_call(), 0)
func_427_call = mod.get_global_var('func_427')
func_431_call = mutated_mod.get_global_var('func_431')
var_2883 = relay.var("var_2883", dtype = "float32", shape = (5, 6))#candidate|2883|(5, 6)|var|float32
var_2884 = relay.var("var_2884", dtype = "float32", shape = (1, 330))#candidate|2884|(1, 330)|var|float32
const_2885 = relay.const([1.252198,-6.578898,6.508791,6.329753,5.483359,-3.208373,5.528044,-7.341528,2.981726,-1.652359,6.668221,6.628888,7.375492,-8.409389,8.475524,0.297463,-8.644681,-0.744468,-2.785984,-9.066379,-4.409017,6.764030,6.565312,-9.959705,-3.365635,7.170728,1.089462,4.180763,-8.844501,8.896607,-7.427084,-2.263086,-5.508967,5.740764,-3.266928,7.962795,-0.998912,3.016364,-7.715366,-9.402155,-9.628259,-4.641936,-8.567406,-3.621017,7.628996,-5.918091,5.171320,9.603931,8.132760,-3.867465,-7.953398,2.836669,-9.477175,6.705692,-4.330049,9.387235,8.801126,-1.509656,1.431702,-0.330332,-7.512162,7.010235,-7.420816,-1.545382,5.959641,7.926947,-6.452353,-4.755293,1.864670,7.586887,0.764563,-4.865780,3.994328,2.519474,-1.664262,5.015844,-8.624104,-3.310116], dtype = "float32")#candidate|2885|(78,)|const|float32
call_2882 = relay.TupleGetItem(func_427_call(relay.reshape(var_2883.astype('float32'), [30,]), relay.reshape(var_2884.astype('float32'), [330,]), relay.reshape(const_2885.astype('float32'), [13, 6]), ), 5)
call_2886 = relay.TupleGetItem(func_431_call(relay.reshape(var_2883.astype('float32'), [30,]), relay.reshape(var_2884.astype('float32'), [330,]), relay.reshape(const_2885.astype('float32'), [13, 6]), ), 5)
output = relay.Tuple([call_2880,call_2882,var_2883,var_2884,const_2885,])
output2 = relay.Tuple([call_2881,call_2886,var_2883,var_2884,const_2885,])
func_2888 = relay.Function([var_2883,var_2884,], output)
mod['func_2888'] = func_2888
mod = relay.transform.InferType()(mod)
mutated_mod['func_2888'] = func_2888
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2888_call = mutated_mod.get_global_var('func_2888')
var_2890 = relay.var("var_2890", dtype = "float32", shape = (5, 6))#candidate|2890|(5, 6)|var|float32
var_2891 = relay.var("var_2891", dtype = "float32", shape = (1, 330))#candidate|2891|(1, 330)|var|float32
call_2889 = func_2888_call(var_2890,var_2891,)
output = call_2889
func_2892 = relay.Function([var_2890,var_2891,], output)
mutated_mod['func_2892'] = func_2892
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2612_call = mod.get_global_var('func_2612')
func_2614_call = mutated_mod.get_global_var('func_2614')
call_2974 = func_2612_call()
call_2975 = func_2612_call()
var_2994 = relay.var("var_2994", dtype = "bool", shape = (9, 9, 14))#candidate|2994|(9, 9, 14)|var|bool
bop_2995 = relay.logical_xor(call_2974.astype('int32'), relay.reshape(var_2994.astype('int32'), relay.shape_of(call_2974))) # shape=(9, 9, 14)
bop_2998 = relay.logical_xor(call_2975.astype('int32'), relay.reshape(var_2994.astype('int32'), relay.shape_of(call_2975))) # shape=(9, 9, 14)
uop_3003 = relay.asinh(bop_2995.astype('float32')) # shape=(9, 9, 14)
uop_3005 = relay.asinh(bop_2998.astype('float32')) # shape=(9, 9, 14)
output = relay.Tuple([uop_3003,])
output2 = relay.Tuple([uop_3005,])
func_3008 = relay.Function([var_2994,], output)
mod['func_3008'] = func_3008
mod = relay.transform.InferType()(mod)
mutated_mod['func_3008'] = func_3008
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3009 = relay.var("var_3009", dtype = "bool", shape = (9, 9, 14))#candidate|3009|(9, 9, 14)|var|bool
func_3008_call = mutated_mod.get_global_var('func_3008')
call_3010 = func_3008_call(var_3009)
output = call_3010
func_3011 = relay.Function([var_3009], output)
mutated_mod['func_3011'] = func_3011
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3058 = relay.const([[[-9.462226,7.582566,-5.441462,-3.451354,-7.141099,-9.454352,-4.943300,-6.388603,-2.054241,-2.746303,7.362608,0.538810,-1.329568,-8.336335,0.888374],[-1.064257,-7.602861,-0.024894,-0.012653,2.920520,6.509199,-6.043024,9.243725,-1.016569,-6.488944,-6.086775,-1.752665,-0.124109,5.774158,-2.301112]],[[-3.264823,3.342095,5.847469,3.172033,-2.029638,-4.804395,-8.373051,-1.725617,8.340562,8.366335,6.295685,3.562392,6.257460,-7.355907,-0.093489],[-4.681294,-9.383302,6.710456,5.523880,4.179148,0.236969,7.713228,-3.654193,4.526884,-2.595958,4.441079,4.152725,4.453107,-0.732041,1.001746]],[[4.090444,4.552496,3.117366,6.620872,8.062827,2.180566,-5.735449,-0.117061,-1.129001,-8.176200,-0.537607,-4.420653,3.187679,3.416591,-0.355297],[-1.124728,-0.399214,0.921611,2.458933,-8.637365,8.398463,8.383885,-3.099887,-6.053790,-5.224598,1.368627,-1.519719,-3.835022,-0.018197,7.439257]],[[-3.734134,-9.783692,3.724817,2.724616,-7.948357,8.548713,4.936295,5.187944,-2.671843,-7.759675,-6.005432,4.558274,6.614461,-3.400104,7.866290],[-2.206786,-5.668645,-7.190629,-8.913862,-1.036625,5.104501,-3.631880,-9.592591,-5.774805,5.885385,4.985169,0.967356,-2.933733,-6.652677,-0.339394]],[[-1.027155,-8.545808,8.207929,-2.896086,-8.246493,-6.853930,-3.870484,-8.198150,-7.179552,6.933157,1.040261,9.951154,-2.767040,3.538959,2.906233],[-1.232998,0.725203,-3.095596,-6.934104,-2.145232,8.932840,-4.603855,-5.114210,-5.501405,-4.389428,-8.627859,2.830720,-3.552769,-8.936719,-2.248953]],[[8.415281,8.742807,1.471672,5.370921,3.420149,-7.554388,-7.133818,-6.070124,1.822949,8.716395,5.220535,1.816483,9.643911,-9.604583,-4.449470],[4.752692,8.942455,-8.681715,-0.532648,-2.215174,2.502077,-7.823638,-3.770121,-0.736244,-8.441641,6.434026,-3.478804,-1.114813,-5.952160,1.849514]],[[2.484822,-3.517516,4.754991,-8.937300,-5.220591,8.971381,8.003472,9.228222,2.085465,-2.168139,9.647307,8.827983,-6.877583,8.149359,-6.046293],[9.026500,-6.217555,-8.394724,-8.713066,7.911501,-3.216432,1.636016,1.711501,1.497113,-3.142545,-2.224976,6.221437,5.927375,6.062864,-1.309761]],[[7.476087,7.176617,9.151995,-7.024157,-7.975584,-0.508402,-6.971252,0.532351,-6.866085,-8.039488,-7.425075,-8.796308,-1.876771,0.234503,-9.836284],[1.205315,-2.337485,9.994268,0.746251,9.714472,-9.907837,-4.287665,5.122891,-6.338315,-3.033587,6.666669,8.946778,-2.257883,8.673323,8.648859]],[[0.658733,-7.403980,5.117257,1.849105,4.052981,2.353391,-8.841240,-0.347747,0.380448,0.392448,-1.704716,-7.026054,-7.401054,5.222341,-6.784351],[4.741968,-0.358613,7.739687,-2.586483,-4.198590,-7.067650,5.826701,3.126256,-3.779669,-2.724087,-8.882150,-4.197617,-8.072889,3.234249,9.729814]],[[-5.944186,3.576523,-6.098527,-4.884034,4.898958,-6.081240,-0.424860,-2.806989,8.524150,-2.698072,-5.473313,-7.168016,8.203084,9.664741,8.628392],[6.902755,3.805953,-9.071299,4.193995,-1.220297,7.946716,-6.219191,-4.230958,8.746684,-0.060284,2.384673,-0.886152,5.241569,-1.693828,-2.451340]],[[3.433120,4.569406,-9.116237,-7.267460,8.281546,-7.206774,3.046326,-4.831286,0.025485,-7.349375,-9.827114,-9.266274,2.939430,-4.300235,-9.628422],[6.323799,-8.719366,-2.307661,-0.524335,7.737523,-2.914234,-9.904320,-8.685134,1.600400,-7.757456,0.937631,-5.890646,3.101028,-7.591987,1.001827]]], dtype = "float32")#candidate|3058|(11, 2, 15)|const|float32
uop_3059 = relay.cosh(const_3058.astype('float32')) # shape=(11, 2, 15)
uop_3061 = relay.acos(uop_3059.astype('float32')) # shape=(11, 2, 15)
func_1460_call = mod.get_global_var('func_1460')
func_1466_call = mutated_mod.get_global_var('func_1466')
var_3068 = relay.var("var_3068", dtype = "int32", shape = (1092,))#candidate|3068|(1092,)|var|int32
var_3069 = relay.var("var_3069", dtype = "float32", shape = (30,))#candidate|3069|(30,)|var|float32
var_3070 = relay.var("var_3070", dtype = "float32", shape = ())#candidate|3070|()|var|float32
call_3067 = relay.TupleGetItem(func_1460_call(relay.reshape(var_3068.astype('int32'), [7, 12, 13]), relay.reshape(var_3068.astype('int32'), [7, 12, 13]), relay.reshape(var_3069.astype('float32'), [5, 6]), relay.reshape(uop_3059.astype('float32'), [1, 330]), relay.reshape(var_3070.astype('float32'), []), ), 2)
call_3071 = relay.TupleGetItem(func_1466_call(relay.reshape(var_3068.astype('int32'), [7, 12, 13]), relay.reshape(var_3068.astype('int32'), [7, 12, 13]), relay.reshape(var_3069.astype('float32'), [5, 6]), relay.reshape(uop_3059.astype('float32'), [1, 330]), relay.reshape(var_3070.astype('float32'), []), ), 2)
output = relay.Tuple([uop_3061,call_3067,var_3068,var_3069,var_3070,])
output2 = relay.Tuple([uop_3061,call_3071,var_3068,var_3069,var_3070,])
func_3080 = relay.Function([var_3068,var_3069,var_3070,], output)
mod['func_3080'] = func_3080
mod = relay.transform.InferType()(mod)
mutated_mod['func_3080'] = func_3080
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3080_call = mutated_mod.get_global_var('func_3080')
var_3082 = relay.var("var_3082", dtype = "int32", shape = (1092,))#candidate|3082|(1092,)|var|int32
var_3083 = relay.var("var_3083", dtype = "float32", shape = (30,))#candidate|3083|(30,)|var|float32
var_3084 = relay.var("var_3084", dtype = "float32", shape = ())#candidate|3084|()|var|float32
call_3081 = func_3080_call(var_3082,var_3083,var_3084,)
output = call_3081
func_3085 = relay.Function([var_3082,var_3083,var_3084,], output)
mutated_mod['func_3085'] = func_3085
mutated_mod = relay.transform.InferType()(mutated_mod)
func_277_call = mod.get_global_var('func_277')
func_278_call = mutated_mod.get_global_var('func_278')
call_3094 = func_277_call()
call_3095 = func_277_call()
output = call_3094
output2 = call_3095
func_3098 = relay.Function([], output)
mod['func_3098'] = func_3098
mod = relay.transform.InferType()(mod)
output = func_3098()
func_3099 = relay.Function([], output)
mutated_mod['func_3099'] = func_3099
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2612_call = mod.get_global_var('func_2612')
func_2614_call = mutated_mod.get_global_var('func_2614')
call_3100 = func_2612_call()
call_3101 = func_2612_call()
func_1152_call = mod.get_global_var('func_1152')
func_1153_call = mutated_mod.get_global_var('func_1153')
call_3104 = relay.TupleGetItem(func_1152_call(), 0)
call_3105 = relay.TupleGetItem(func_1153_call(), 0)
uop_3106 = relay.sqrt(call_3100.astype('float32')) # shape=(9, 9, 14)
uop_3108 = relay.sqrt(call_3101.astype('float32')) # shape=(9, 9, 14)
output = relay.Tuple([call_3104,uop_3106,])
output2 = relay.Tuple([call_3105,uop_3108,])
func_3112 = relay.Function([], output)
mod['func_3112'] = func_3112
mod = relay.transform.InferType()(mod)
output = func_3112()
func_3113 = relay.Function([], output)
mutated_mod['func_3113'] = func_3113
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1596_call = mod.get_global_var('func_1596')
func_1598_call = mutated_mod.get_global_var('func_1598')
call_3119 = func_1596_call()
call_3120 = func_1596_call()
output = relay.Tuple([call_3119,])
output2 = relay.Tuple([call_3120,])
func_3121 = relay.Function([], output)
mod['func_3121'] = func_3121
mod = relay.transform.InferType()(mod)
mutated_mod['func_3121'] = func_3121
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3121_call = mutated_mod.get_global_var('func_3121')
call_3122 = func_3121_call()
output = call_3122
func_3123 = relay.Function([], output)
mutated_mod['func_3123'] = func_3123
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3121_call = mod.get_global_var('func_3121')
func_3123_call = mutated_mod.get_global_var('func_3123')
call_3231 = relay.TupleGetItem(func_3121_call(), 0)
call_3232 = relay.TupleGetItem(func_3123_call(), 0)
var_3239 = relay.var("var_3239", dtype = "float64", shape = (9, 2, 15))#candidate|3239|(9, 2, 15)|var|float64
bop_3240 = relay.multiply(call_3231.astype('int16'), relay.reshape(var_3239.astype('int16'), relay.shape_of(call_3231))) # shape=(9, 2, 15)
bop_3243 = relay.multiply(call_3232.astype('int16'), relay.reshape(var_3239.astype('int16'), relay.shape_of(call_3232))) # shape=(9, 2, 15)
func_1480_call = mod.get_global_var('func_1480')
func_1481_call = mutated_mod.get_global_var('func_1481')
call_3244 = relay.TupleGetItem(func_1480_call(), 1)
call_3245 = relay.TupleGetItem(func_1481_call(), 1)
output = relay.Tuple([bop_3240,call_3244,])
output2 = relay.Tuple([bop_3243,call_3245,])
func_3254 = relay.Function([var_3239,], output)
mod['func_3254'] = func_3254
mod = relay.transform.InferType()(mod)
var_3255 = relay.var("var_3255", dtype = "float64", shape = (9, 2, 15))#candidate|3255|(9, 2, 15)|var|float64
output = func_3254(var_3255)
func_3256 = relay.Function([var_3255], output)
mutated_mod['func_3256'] = func_3256
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1326_call = mod.get_global_var('func_1326')
func_1328_call = mutated_mod.get_global_var('func_1328')
call_3364 = relay.TupleGetItem(func_1326_call(), 0)
call_3365 = relay.TupleGetItem(func_1328_call(), 0)
uop_3407 = relay.log(call_3364.astype('float32')) # shape=(9, 9, 14)
uop_3409 = relay.log(call_3365.astype('float32')) # shape=(9, 9, 14)
func_1116_call = mod.get_global_var('func_1116')
func_1119_call = mutated_mod.get_global_var('func_1119')
var_3412 = relay.var("var_3412", dtype = "int64", shape = (768,))#candidate|3412|(768,)|var|int64
call_3411 = relay.TupleGetItem(func_1116_call(relay.reshape(var_3412.astype('int64'), [12, 4, 16])), 2)
call_3413 = relay.TupleGetItem(func_1119_call(relay.reshape(var_3412.astype('int64'), [12, 4, 16])), 2)
func_1770_call = mod.get_global_var('func_1770')
func_1771_call = mutated_mod.get_global_var('func_1771')
call_3425 = relay.TupleGetItem(func_1770_call(), 0)
call_3426 = relay.TupleGetItem(func_1771_call(), 0)
func_3098_call = mod.get_global_var('func_3098')
func_3099_call = mutated_mod.get_global_var('func_3099')
call_3447 = func_3098_call()
call_3448 = func_3098_call()
output = relay.Tuple([uop_3407,call_3411,var_3412,call_3425,call_3447,])
output2 = relay.Tuple([uop_3409,call_3413,var_3412,call_3426,call_3448,])
func_3454 = relay.Function([var_3412,], output)
mod['func_3454'] = func_3454
mod = relay.transform.InferType()(mod)
var_3455 = relay.var("var_3455", dtype = "int64", shape = (768,))#candidate|3455|(768,)|var|int64
output = func_3454(var_3455)
func_3456 = relay.Function([var_3455], output)
mutated_mod['func_3456'] = func_3456
mutated_mod = relay.transform.InferType()(mutated_mod)
func_353_call = mod.get_global_var('func_353')
func_354_call = mutated_mod.get_global_var('func_354')
call_3473 = relay.TupleGetItem(func_353_call(), 0)
call_3474 = relay.TupleGetItem(func_354_call(), 0)
func_876_call = mod.get_global_var('func_876')
func_881_call = mutated_mod.get_global_var('func_881')
var_3481 = relay.var("var_3481", dtype = "float32", shape = (30,))#candidate|3481|(30,)|var|float32
var_3482 = relay.var("var_3482", dtype = "float32", shape = ())#candidate|3482|()|var|float32
var_3483 = relay.var("var_3483", dtype = "float32", shape = (55, 4))#candidate|3483|(55, 4)|var|float32
call_3480 = relay.TupleGetItem(func_876_call(relay.reshape(call_3473.astype('float32'), [9, 9, 14]), relay.reshape(var_3481.astype('float32'), [30,]), relay.reshape(var_3482.astype('float32'), []), relay.reshape(var_3483.astype('float32'), [220,]), ), 0)
call_3484 = relay.TupleGetItem(func_881_call(relay.reshape(call_3473.astype('float32'), [9, 9, 14]), relay.reshape(var_3481.astype('float32'), [30,]), relay.reshape(var_3482.astype('float32'), []), relay.reshape(var_3483.astype('float32'), [220,]), ), 0)
output = relay.Tuple([call_3473,call_3480,var_3481,var_3482,var_3483,])
output2 = relay.Tuple([call_3474,call_3484,var_3481,var_3482,var_3483,])
func_3485 = relay.Function([var_3481,var_3482,var_3483,], output)
mod['func_3485'] = func_3485
mod = relay.transform.InferType()(mod)
var_3486 = relay.var("var_3486", dtype = "float32", shape = (30,))#candidate|3486|(30,)|var|float32
var_3487 = relay.var("var_3487", dtype = "float32", shape = ())#candidate|3487|()|var|float32
var_3488 = relay.var("var_3488", dtype = "float32", shape = (55, 4))#candidate|3488|(55, 4)|var|float32
output = func_3485(var_3486,var_3487,var_3488,)
func_3489 = relay.Function([var_3486,var_3487,var_3488,], output)
mutated_mod['func_3489'] = func_3489
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3491 = relay.var("var_3491", dtype = "float32", shape = (1, 1, 1))#candidate|3491|(1, 1, 1)|var|float32
const_3492 = relay.constdtype = "float32")#candidate|3492|(16, 11, 12)|const|float32
bop_3493 = relay.power(var_3491.astype('float32'), const_3492.astype('float32')) # shape=(16, 11, 12)
func_1387_call = mod.get_global_var('func_1387')
func_1389_call = mutated_mod.get_global_var('func_1389')
const_3503 = relay.const([-3.676755,-1.213557,-2.071971,4.229476,-4.469212,-0.063329,-3.493705,-1.097482,-1.365441,-5.958516,2.468200,-8.030465,-1.942398,-6.424289,5.430900,7.867312,7.731862,8.691187,-9.372908,7.281638,9.810656,0.495129,9.135641,-8.878259,-6.422914,3.341384,-4.581634,9.483027,-2.375404,-9.237097,9.894710,4.295083,-9.364545,5.441590,0.587734,8.954319,-3.142780,-7.259101,-4.212113,9.697313,7.276828,4.926470,-6.627143,8.593100,-2.445391,-7.634638,4.321755,-3.626742,-0.314457,-7.601066,-4.953612,-8.979230,-2.965365,1.717287,1.648529,-8.114886,8.369296,7.138078,-4.355170,-3.185680,-4.655297,-0.007042,-2.877131,8.839440,-1.606875,-8.511129,1.930060,0.501843,-8.241287,7.321260,3.337483,-8.787798,8.612890,-4.591612,-2.527548,-4.301665,6.572953,-7.539780], dtype = "float32")#candidate|3503|(78,)|const|float32
call_3502 = relay.TupleGetItem(func_1387_call(relay.reshape(const_3503.astype('float32'), [78,])), 0)
call_3504 = relay.TupleGetItem(func_1389_call(relay.reshape(const_3503.astype('float32'), [78,])), 0)
output = relay.Tuple([bop_3493,call_3502,const_3503,])
output2 = relay.Tuple([bop_3493,call_3504,const_3503,])
func_3508 = relay.Function([var_3491,], output)
mod['func_3508'] = func_3508
mod = relay.transform.InferType()(mod)
mutated_mod['func_3508'] = func_3508
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3509 = relay.var("var_3509", dtype = "float32", shape = (1, 1, 1))#candidate|3509|(1, 1, 1)|var|float32
func_3508_call = mutated_mod.get_global_var('func_3508')
call_3510 = func_3508_call(var_3509)
output = call_3510
func_3511 = relay.Function([var_3509], output)
mutated_mod['func_3511'] = func_3511
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2860_call = mod.get_global_var('func_2860')
func_2862_call = mutated_mod.get_global_var('func_2862')
call_3513 = relay.TupleGetItem(func_2860_call(), 0)
call_3514 = relay.TupleGetItem(func_2862_call(), 0)
output = call_3513
output2 = call_3514
func_3515 = relay.Function([], output)
mod['func_3515'] = func_3515
mod = relay.transform.InferType()(mod)
output = func_3515()
func_3516 = relay.Function([], output)
mutated_mod['func_3516'] = func_3516
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1596_call = mod.get_global_var('func_1596')
func_1598_call = mutated_mod.get_global_var('func_1598')
call_3533 = func_1596_call()
call_3534 = func_1596_call()
func_1011_call = mod.get_global_var('func_1011')
func_1014_call = mutated_mod.get_global_var('func_1014')
const_3537 = relay.const([[True,False,True,False],[False,True,False,True],[False,True,False,False],[False,True,True,False],[True,True,False,False],[False,True,False,False],[True,False,True,False],[False,False,False,False],[True,True,False,True],[True,False,False,True],[False,False,True,False],[True,True,True,False],[False,True,True,False],[False,True,False,False],[True,False,False,False],[False,False,False,True],[False,False,True,True],[True,True,False,True],[False,True,True,True],[False,False,False,False],[False,True,True,False],[False,True,False,True],[True,True,True,False],[True,True,True,True],[False,False,False,True],[False,False,False,False],[False,True,True,False],[False,True,True,False],[False,False,False,False],[True,True,False,True],[False,True,True,True],[True,False,True,True],[True,True,False,True],[False,False,True,False],[True,False,False,True],[False,True,True,False],[True,False,True,True],[True,True,False,True],[False,True,False,True],[True,True,False,False],[True,False,True,True],[False,False,True,False]], dtype = "bool")#candidate|3537|(42, 4)|const|bool
call_3536 = func_1011_call(relay.reshape(const_3537.astype('bool'), [7, 12, 2]), relay.reshape(const_3537.astype('bool'), [7, 12, 2]), )
call_3538 = func_1011_call(relay.reshape(const_3537.astype('bool'), [7, 12, 2]), relay.reshape(const_3537.astype('bool'), [7, 12, 2]), )
func_1326_call = mod.get_global_var('func_1326')
func_1328_call = mutated_mod.get_global_var('func_1328')
call_3539 = relay.TupleGetItem(func_1326_call(), 0)
call_3540 = relay.TupleGetItem(func_1328_call(), 0)
const_3541 = relay.const([[[-8.129550,2.263286,-0.020054,-1.964171,-5.654382,8.632466,4.133366,-6.227474,-9.977877,1.076203,-9.489423,3.459225,4.442058,8.198907,9.950163],[9.796409,-2.006249,-5.695715,6.521791,2.644948,-2.397170,-4.791395,-6.826816,8.893623,7.410704,3.066463,-5.851817,5.303391,-1.793941,5.452995]],[[4.676387,8.301728,9.818413,7.287080,8.599627,-0.480691,0.964294,5.060336,-1.864143,-3.249488,6.737311,4.105277,-8.941112,-1.154231,4.848019],[7.651321,-9.177797,-7.921813,-8.674947,-9.862025,-6.123826,0.238678,-2.585756,3.790327,9.136579,-8.182760,-2.518077,5.190782,-1.855173,3.256622]],[[4.948601,7.401387,4.796772,-2.768340,2.034168,2.908188,8.501739,0.907816,-1.752534,-1.198554,-7.788012,-4.688176,-1.241042,-1.839120,5.761061],[-5.675995,-9.473204,-9.882008,7.378030,1.261880,-1.263623,-2.686291,1.452902,4.889482,2.115443,7.815643,-0.772533,-2.503361,0.877035,-5.895198]],[[-8.718046,-5.848048,-1.191333,-5.829790,3.982461,-6.692376,1.586203,2.350781,-8.418406,-3.434246,5.195620,7.328014,3.533788,-9.128198,-3.406760],[-0.579628,-3.670105,1.120029,8.873124,-5.521468,3.710796,-0.987967,-1.663275,5.633712,-6.509435,-4.145266,-9.794868,-1.543426,0.376671,-9.142613]],[[5.257179,-1.308099,4.003406,-1.961160,2.245310,5.319904,3.179351,2.869202,-6.405827,-7.426421,-0.738834,-2.323123,-8.245445,0.438776,4.100017],[-1.966002,-6.558834,-5.143463,-2.963175,-1.166604,-7.361150,9.799292,-8.667085,6.360436,3.989038,5.531624,-6.446862,-4.964330,-1.232450,-9.938246]],[[-4.755396,-9.241040,3.276884,-2.819499,3.106273,7.655428,2.201049,3.922380,-0.215548,-6.330324,-9.038725,7.893747,3.541073,-1.998876,5.908781],[3.344903,8.203263,-9.408350,6.295305,-4.241341,-3.791495,-2.452366,-2.646997,9.488128,-3.863451,0.799282,7.987931,9.136265,-7.426505,2.271464]],[[-7.178949,0.955549,-9.736101,-3.072106,9.094257,4.997108,-7.918807,4.439379,7.816701,4.751131,-7.760556,2.740282,-4.689004,-7.311137,-7.162611],[-4.030692,-4.316321,-3.702059,-9.049983,-4.556693,7.951536,7.283986,1.763359,6.315640,6.558945,-6.866411,5.158577,9.172017,-5.668691,-8.879201]],[[6.614972,7.705000,9.244172,8.104976,-0.458344,1.911977,0.814330,-9.539451,2.585346,7.534406,-9.404075,-2.178585,7.774107,9.694924,0.695786],[-2.459817,0.892767,-2.289469,7.255682,-8.063568,-1.861558,-6.073907,-2.683056,-2.472647,-7.385085,-9.795062,-3.598363,-0.005799,-1.464119,7.361239]],[[7.294231,5.366692,-7.794892,8.851302,6.991893,7.290974,6.600495,3.681379,-2.252218,3.010017,2.319826,-0.637808,-8.796750,-7.237574,-3.158914],[-6.508598,6.091012,-2.692355,-3.363804,-1.846715,6.228353,7.467728,3.002475,-7.025249,-3.667801,-9.948795,0.279482,7.543376,3.162527,1.179018]]], dtype = "float64")#candidate|3541|(9, 2, 15)|const|float64
bop_3542 = relay.mod(call_3533.astype('float32'), relay.reshape(const_3541.astype('float32'), relay.shape_of(call_3533))) # shape=(9, 2, 15)
bop_3545 = relay.mod(call_3534.astype('float32'), relay.reshape(const_3541.astype('float32'), relay.shape_of(call_3534))) # shape=(9, 2, 15)
bop_3558 = relay.logical_and(const_3537.astype('bool'), relay.reshape(call_3536.astype('bool'), relay.shape_of(const_3537))) # shape=(42, 4)
bop_3561 = relay.logical_and(const_3537.astype('bool'), relay.reshape(call_3538.astype('bool'), relay.shape_of(const_3537))) # shape=(42, 4)
uop_3563 = relay.log(bop_3558.astype('float32')) # shape=(42, 4)
uop_3565 = relay.log(bop_3561.astype('float32')) # shape=(42, 4)
bop_3573 = relay.bitwise_xor(uop_3563.astype('uint8'), relay.reshape(bop_3558.astype('uint8'), relay.shape_of(uop_3563))) # shape=(42, 4)
bop_3576 = relay.bitwise_xor(uop_3565.astype('uint8'), relay.reshape(bop_3561.astype('uint8'), relay.shape_of(uop_3565))) # shape=(42, 4)
bop_3583 = relay.greater(bop_3558.astype('bool'), relay.reshape(uop_3563.astype('bool'), relay.shape_of(bop_3558))) # shape=(42, 4)
bop_3586 = relay.greater(bop_3561.astype('bool'), relay.reshape(uop_3565.astype('bool'), relay.shape_of(bop_3561))) # shape=(42, 4)
output = relay.Tuple([call_3539,bop_3542,bop_3573,bop_3583,])
output2 = relay.Tuple([call_3540,bop_3545,bop_3576,bop_3586,])
func_3592 = relay.Function([], output)
mod['func_3592'] = func_3592
mod = relay.transform.InferType()(mod)
output = func_3592()
func_3593 = relay.Function([], output)
mutated_mod['func_3593'] = func_3593
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3598 = relay.var("var_3598", dtype = "float32", shape = (12, 9, 16))#candidate|3598|(12, 9, 16)|var|float32
uop_3599 = relay.atan(var_3598.astype('float32')) # shape=(12, 9, 16)
output = relay.Tuple([uop_3599,])
output2 = relay.Tuple([uop_3599,])
func_3605 = relay.Function([var_3598,], output)
mod['func_3605'] = func_3605
mod = relay.transform.InferType()(mod)
mutated_mod['func_3605'] = func_3605
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3606 = relay.var("var_3606", dtype = "float32", shape = (12, 9, 16))#candidate|3606|(12, 9, 16)|var|float32
func_3605_call = mutated_mod.get_global_var('func_3605')
call_3607 = func_3605_call(var_3606)
output = call_3607
func_3608 = relay.Function([var_3606], output)
mutated_mod['func_3608'] = func_3608
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1480_call = mod.get_global_var('func_1480')
func_1481_call = mutated_mod.get_global_var('func_1481')
call_3616 = relay.TupleGetItem(func_1480_call(), 1)
call_3617 = relay.TupleGetItem(func_1481_call(), 1)
func_1596_call = mod.get_global_var('func_1596')
func_1598_call = mutated_mod.get_global_var('func_1598')
call_3622 = func_1596_call()
call_3623 = func_1596_call()
func_1948_call = mod.get_global_var('func_1948')
func_1955_call = mutated_mod.get_global_var('func_1955')
const_3631 = relay.const([[10,-6,7,3,-7,-4,-5,8,8,6,-2,9,8,7,7,1,-1,-8,-2,-8,-5,10,7,-7,-3,-4,9,-6,3,-4,-5,8,3,-8,-6,-6,9,2,-5,10,-3,3,-6,-9,-10,-9,-8,-5,-4,8,7,10,1,1,10,-1,6,5,1,-2,6,10,-10,-9,-7,-4,-2,-10,6,-6,-3,-1,1,10,1,6,3,3,10,8,10,2,6,-2,5,1,7,6,8,-1,-10,-6,5,-6,3,2,6,3,8,-6,-3,3,-7,-9,7,-3,9,7]], dtype = "int8")#candidate|3631|(1, 108)|const|int8
const_3632 = relay.const([6,-7,-7,-4,7,-8,-7,10,-3,8,-3,2,-9,-7,4,2,-6,-10,-6,-5,-8,-5,-4,-4,-1,6,9,-10,-8,7,-7,-4,1,-5,-10,-7,-1,-5,7,-9,4,-10,5,1,9,7,-10,8,-5,-6,3,-5,-6,-9,-10,1,8,-6,1,6,9,5,-4,-9,-6,-6,-10,3,-9,-9,3,-4,-1,-3,2,-4,5,-10,-4,2,6,9,8,2,-6,-8,-2,1,-5,-8,4,-7,3,9,-8,7,8,-10,10,4,4,5,6,-9,-10,7,-1,6,10,1,-8,-2,4,3,-5,-10,-10,-4,2,-7,-2,-8,-7,-7,10,6,8,-4,-9,6,5,2,-2,-4,-10,7,-3,7,1,-10,-3,1,-4,4,4,-7,6,6,6,2,-9,9,6,-6,1,-10,-10,-8,5,-8,-1,-10,4,7,-4,-7,-10,6,4,2,6,4,2,10,1,8,3,-1,4,9,8,10,6,-1,10,8,7,3,3,7,-3,7,5,-7,7,4,3,1,-3,-2,8,-8,1,4,-7,9,8,-8,-4,-1,-10,-6,2,-2,4,6,5,6,-5,1,3,-4,4,3,4,2,-10,6,-8,5,-4,3,-6,5,-9,-5,-6,3,-8,1,2,-5,2,4,-4,3,9,7,-4,9,1,-6,-1,-9,7,3,1,-2,3,-4,-5,5,10,-1,8,-10,4,-8,-6,5,6,3,-8,-2,-10,-8,-3,1,6,-10,2,5,-7,-10,-1,8,-3,-7,-7,3,-5,-2,-3,4,5,-6,-5,2,6,-8,-4,-4,-7,-9,-10,-4,3,-7,-1,10,6,-4,8,4,-5,-3,-9,10,-8,2,3,-6,2,-5,-4,-10,2,1,7,6,-8,-2,5,-4,-1,2,-2,10,-2,8,1,-6,1,3,-5,-1,7,1,-7,3,-3,2,5,-1,9,5,-9,-3,10,-10,4,-9,7,2,-7,2,2,-5,-9,6,-8,-8,-1,9,6,8,3,10,1,5,-7,-10,-2,7,-3,-9,-1,-2,-7,-6,2,-10,3,-6,4,-4,10,-1,9,6,-9,7,-2,-4,9,10,6,-8,-2,5,8,6,-3,10,4,-6,-1,-5,-1,1,-1,-1,1,-5,-6,10,2,-1,2,7,-7,7,7,10,10,-7,-2,-7,-10,9,-5,-9,4,9,1,-10,-10,-8,-10,4,2,3,2,9,4,-9,7,-5,-9,-5,-2,-3,-3,-1,9,-4,-7,-7,9,-4,-3,2,-4,-1,1,5,2,-6,-9,1,-2,-1,4,-1,-3,5,-7,-8,-2,-4,-6,6,9,6,-1,-7,9,-4,-5,7,-8,-4,7,-6,2,4,10,-7,-6,-6,7,7,-1,-1,6,4,10,10,1,-8,7,10,-6,8,-7,6,-10,-10,-6,9,10,-9,-3,-8,7,7,10,3,4,7,-8,5,-9,-8,7,8,-1,8,6,-10,1,-8,5,-8,-5,-10,9,-10,2,5,5,9,-2,10,2,-4,-7,4,6,-1,-9,5,-6,-8,2,8,-9,-1,-3,-3,-3,7,-9,-2,-3,7,3,1,6,-10,5,4,-6,-6,-8,-3,6,-8,1,2,-2,7,1,-9,-9,3,-6,9,4,10,-6,10,4,-7,-10,2,-7,1,9,3,6,2,-5,-5,-6,-10,9,4,-9,-10,-9,-3,3,4,-4,10,5,4,-2,-10,4,-1,-9,8,-6,-7,3,1,5,-8,2,-1,-9,-10,5,-7,7,4,3,-4,-4,-1,-2,-3,-8,6,-10,-9,-3,7,-9,9,-4,-2,6,-3,-8,7,9,-6,2,6,-10,-10,6,-3,4,10,6,5,9,-2,4,-6,-1,9,4,-5,2,9,3,-4,-5,-6,-8,5,-9,-6,-8,6,-3,-3,10,-3,-3,4,-6,4,-3,-4,-1,2,-6,5,-9,3,7,10,4,-2,6,5,-4,-3,9,-2,6,4,-10,-8,-3,-2,-5,-8,6,5,7,3,-1,2,6,4,-6,6,7,-5,-4,-1,-9,-9,-10,-8,6,-2,-10,9,-6,7,-9,-8,-6,-9,3,-1,-8,9,5,-8,-1,-10,-5,-4,-9,-3,-4,7,7,10,5,-2,2,-4,1,9,-2,-10,5,-8,-4,3,5,8,7,1,9,-6,5,7,-1,7,-5,-2,2,7,2,-6,1,8,1,-9,-3,3,-4,-5,9,2,-8,6,-6,-5,-4,-7,6,4,-5,10,-7,-7,3,10,3,-6,6,-10,-5,-1,8,6,3,1,-3,7,6,-3,-5,3,-2,-8,10,-1,7,-6,1,-8,9,4,4,2,-5,-1,7,-6,-2,9,4,-1,-3,-5,8,-1,-7,-9,-6,1,7,2,5,-4,2,-8,-3,-7,-5,-3,8,-10,-10,-5,1,10,7,3,-7,8,-10,8,-7,-2,-7,-5,-10,9,-5,8,10,5,9,-9,7,-10,4,-2,2,3,-10,4,5,-4,6,8,2,-5,-3,1,-2,7,-6,-6,3,-8,10,-5,-3,-7,2,7,1,7,6,4,-7,-3,9,3,-1,-7,3,5,-2,9,8,-8,-9,2,10,-3,-6,2,-8,-9,8,-9,7,-8,-6,3,-4,2,-3,-9,10,-2,8,4,-10,4,-7,10,-7,-3,7,9,-6,-5,5,3,-5,4,10,-1,10,-10,-8,-3,1,10,-3,-1,1,-9,1,-4,9,-2,-9,-1,8,-8,-2,-3,-10,-2,3,-1,1,-1,-1,9,-6,-1,1,5,-3,-8,-5,-1,4,-7,9,1,9,-10,-10,2,-9,-2,7,2,10,9,8,2,3,1,9,-10,8,1,-1,6,10,-8,3,6,-9,9,-3,3,2,8,8,2,-9,3,-7,-8,5,1,8,-1,2,-6,3,-3,-3,-6,10,-6,10,1,-6,-4,6,1,7,-3,-4,-6,-10,3,3,-6,-7,3,10,7,-4,-9,10,-6,-3,-6,2,7,-2,-7,10,-7,4,6,-6,1,6,10,-3,-3,-7,-5,-10,1,1,-6,-1,-9,4,10,8,2,5,-2,-10,5,3,-6,-10,-4,7,3,-2,5,-8,10,10,2,5,2,-8,-3,-6,-5,-8,-9,-8,6,-5,-7,-8,8,8,3,-3,-9,1,5,2,4,-8,6,-7,5,-3,-4,-1,1,4,5,7,10,5,-5,-5,7,-6,-7,-5,-5,-9,3,5,1,6,-7,-9,2,2,1,8,1,10,7,2,-6,-2,3,3,-7,2,-1,-10,-5,8,-10,-3,-2,-8,-8,10,-3,5,2,-4,4,-10,6,-5,2,6,-4,2,-2,3,-5,6,-7,-6,8,5,-5,-8,-7,-4,10,3,-9,-10,-9,2,5,-2,10,1,-7,1,-5,2,4,3,6,-6,4,7,-8,-5,-9,-7,-4,-7,7,4,-9,-6,-2,4,4,4,-7,-1,-2,-10,-3,9,7,10,-6,-8,1], dtype = "int8")#candidate|3632|(1296,)|const|int8
var_3633 = relay.var("var_3633", dtype = "int64", shape = (768,))#candidate|3633|(768,)|var|int64
call_3630 = relay.TupleGetItem(func_1948_call(relay.reshape(const_3631.astype('int8'), [18, 6]), relay.reshape(const_3632.astype('int8'), [1296,]), relay.reshape(call_3616.astype('float32'), [1134,]), relay.reshape(var_3633.astype('int64'), [768,]), relay.reshape(const_3632.astype('int8'), [1296,]), relay.reshape(const_3631.astype('int8'), [18, 6]), ), 8)
call_3634 = relay.TupleGetItem(func_1955_call(relay.reshape(const_3631.astype('int8'), [18, 6]), relay.reshape(const_3632.astype('int8'), [1296,]), relay.reshape(call_3616.astype('float32'), [1134,]), relay.reshape(var_3633.astype('int64'), [768,]), relay.reshape(const_3632.astype('int8'), [1296,]), relay.reshape(const_3631.astype('int8'), [18, 6]), ), 8)
output = relay.Tuple([call_3616,call_3622,call_3630,const_3631,const_3632,var_3633,])
output2 = relay.Tuple([call_3617,call_3623,call_3634,const_3631,const_3632,var_3633,])
func_3656 = relay.Function([var_3633,], output)
mod['func_3656'] = func_3656
mod = relay.transform.InferType()(mod)
mutated_mod['func_3656'] = func_3656
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3657 = relay.var("var_3657", dtype = "int64", shape = (768,))#candidate|3657|(768,)|var|int64
func_3656_call = mutated_mod.get_global_var('func_3656')
call_3658 = func_3656_call(var_3657)
output = call_3658
func_3659 = relay.Function([var_3657], output)
mutated_mod['func_3659'] = func_3659
mutated_mod = relay.transform.InferType()(mutated_mod)
func_722_call = mod.get_global_var('func_722')
func_724_call = mutated_mod.get_global_var('func_724')
call_3689 = relay.TupleGetItem(func_722_call(), 0)
call_3690 = relay.TupleGetItem(func_724_call(), 0)
uop_3698 = relay.sqrt(call_3689.astype('float64')) # shape=(9, 2, 15)
uop_3700 = relay.sqrt(call_3690.astype('float64')) # shape=(9, 2, 15)
output = relay.Tuple([uop_3698,])
output2 = relay.Tuple([uop_3700,])
func_3701 = relay.Function([], output)
mod['func_3701'] = func_3701
mod = relay.transform.InferType()(mod)
output = func_3701()
func_3702 = relay.Function([], output)
mutated_mod['func_3702'] = func_3702
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1770_call = mod.get_global_var('func_1770')
func_1771_call = mutated_mod.get_global_var('func_1771')
call_3721 = relay.TupleGetItem(func_1770_call(), 0)
call_3722 = relay.TupleGetItem(func_1771_call(), 0)
output = relay.Tuple([call_3721,])
output2 = relay.Tuple([call_3722,])
func_3725 = relay.Function([], output)
mod['func_3725'] = func_3725
mod = relay.transform.InferType()(mod)
output = func_3725()
func_3726 = relay.Function([], output)
mutated_mod['func_3726'] = func_3726
mutated_mod = relay.transform.InferType()(mutated_mod)
func_511_call = mod.get_global_var('func_511')
func_512_call = mutated_mod.get_global_var('func_512')
call_3774 = relay.TupleGetItem(func_511_call(), 0)
call_3775 = relay.TupleGetItem(func_512_call(), 0)
output = call_3774
output2 = call_3775
func_3779 = relay.Function([], output)
mod['func_3779'] = func_3779
mod = relay.transform.InferType()(mod)
output = func_3779()
func_3780 = relay.Function([], output)
mutated_mod['func_3780'] = func_3780
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2856_call = mod.get_global_var('func_2856')
func_2857_call = mutated_mod.get_global_var('func_2857')
call_3804 = relay.TupleGetItem(func_2856_call(), 1)
call_3805 = relay.TupleGetItem(func_2857_call(), 1)
output = call_3804
output2 = call_3805
func_3819 = relay.Function([], output)
mod['func_3819'] = func_3819
mod = relay.transform.InferType()(mod)
output = func_3819()
func_3820 = relay.Function([], output)
mutated_mod['func_3820'] = func_3820
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1770_call = mod.get_global_var('func_1770')
func_1771_call = mutated_mod.get_global_var('func_1771')
call_3918 = relay.TupleGetItem(func_1770_call(), 0)
call_3919 = relay.TupleGetItem(func_1771_call(), 0)
output = call_3918
output2 = call_3919
func_3977 = relay.Function([], output)
mod['func_3977'] = func_3977
mod = relay.transform.InferType()(mod)
output = func_3977()
func_3978 = relay.Function([], output)
mutated_mod['func_3978'] = func_3978
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2860_call = mod.get_global_var('func_2860')
func_2862_call = mutated_mod.get_global_var('func_2862')
call_3985 = relay.TupleGetItem(func_2860_call(), 0)
call_3986 = relay.TupleGetItem(func_2862_call(), 0)
func_1525_call = mod.get_global_var('func_1525')
func_1529_call = mutated_mod.get_global_var('func_1529')
const_3999 = relay.const([-1,-3,-6,-6,-9,-10,1,6,-6,-4,3,-9,-1,6,-4,9,3,-6,8,1,-8,-6,4,-8,5,7,8,-2,8,-2,6,-8,1,1,7,-7,-3,-3,7,7,5,-9,-1,4,1,-4,5,-8,-5,8,-3,8,-9,4,2,7,7,-10,7,10,10,-4,5,3,-5,3,-5,-3,-1,10,8,3,-1,6,7,-7,9,1,-5,3,5,-7,6,-5,-7,-2,-2,2,8,-3,-5,3,4,-7,10,9,7,-6,-6,-4,5,7,1,-3,1,-7,8,2,5,1,3,-9,-5,-7,-5,1,-7,9,2,-10,-10,9,6,-10,-5,4,-2,-10,7,6,-6,-6,-9,-2,1,-2,-8,8,6,-3,-10,9,-10,-9,-4,-3,-5,-5,7,3,-9,8,-8,9,6,-5,1,-10,-10,-1,7,-5,4,7,7,-9,5,-2,-4,8,-5,8,-4,-6,-1,-9,3,-1,3,-8,7,7,-5,-6,-1,10,-7,1,-9,8,-6,-8,-2,-5,6,7,3,5,2,6,8,-9,-4,-8,9,-5,-4,5,-2,3,4,-9,-2,4,6,7,-5,10,-7,4,-6,-3,2,6,-8,1,-9,-8,5,-6,1,-6,10,-10,4,-6,-5,-1,-7,-2,-6,-9,-5,5,-9,4,4,10,8,2,-4,-4,-7,5,-2,1,1,-2,-6,-8,-9,9,-2,9,9,-2,10,-1,1,-3,4,-10,3,-3,2,-8,-4,4,5,4,5,-6,-3,3,2,4,9,3,9,-3,-9,-10,7,7,-9,6,8,-8,9,-5,-7,-9,5,10,-9,-3,-3,9,8,4,8,1,3,9,1,3,2,-4,-3,3,7,-10,10,4,7,5,-9,-3,6,-6,-7,4,-10,-8,-3,7,-6,2,-6,2,-4,9,3,-8,4,-5,3,-10,-8,-8,-9,2,-9,9,-3,-7,8,-2,7,-10,-6,-4,2,1,-4,2,-1,-9,1,8,-9,-10,-2,-9,-4,2,6,6,1,10,6,1,8,-2,7,10,-4,6,5,-4,6,9,-3,-10,4,-2,-3,2,4,-8,-1,-9,-3,8,10,-8,-8,-10,4,7,-9,-10,3,-4,7,8,-4,-2,1,6,-2,2,1,-2,10,-3,-10,3,-9,10,1,-2,6,4,4,3,-2,9,-4,8,-10,-5,6,-4,7,8,4,4,6,9,8,7,6,-5,6,-4,-4,7,-9,6,-2,3,-8,6,-7,-3,9,-4,7,3,5,-2,-8,-1,-7,-2,-5,7,-4,-5,-9,5,-2,3,10,-5,-3,4,-3,8,-5,-10,-5,-2,-1,-7,7,8,-1,-1,7,6,2,-3,6,-6,10,-9,-3,4,-10,-6,-5,8,-5,8,4,4,-5,-10,8,2,-2,-5,-6,10,-1,2,-1,1,9,10,5,-9,10,-1,-5,-6,-8,3,9,-7,-8,-6,9,-6,7,4,-7,2,6,6,8,10,3,7,5,-2,-5,3,-6,-6,5,6,-5,-1,-2,2,-9,6,-4,-3,9,5,4,9,6,-4,5,5,10,1,-3,2,7,-5,10,-1,5,-4,5,10,9,2,-6,6,-3,8,3,-9,7,-1,-1,-6,10,9,3,7,-5,-8,8,-7,-4,-6,-4,-7,-8,-7,-1,-9,-3,6,-8,-10,2,2,-5,-10,3,-7,-2,7,1,2,7,4,-8,7,-1,-8,6,-2,10,-9,-9,-1,1,2,-10,-5,-6,8,-7,-1,-2,1,9,-1,5,-4,-6,-5,1,-10,-2,9,-2,-1,1,-9,-8,-3,6,-8,5,5,-4,-10,-10,9,3,-9,6,6,-9,-2,-5,-8,10,2,-7,-9,-1,-8,-7,-2,-5,-7,-10,-10,-6,-10,1,2,1,9,2,10,4,4,-5,4,-7,4,-2,8,7,10,3,9,7,3,5,5,-1,1,-7,-9,5,-6,6,-6,-2,-2,10,3,9,-1,9,-4,-6,8,9,2,3,-3,-9,-3,-5,8,-6,7,6,10,3,-6,8,-6,5,2,-3,-6,-2,-5,-4,4,-3,5,-8,-5,-6,4,8,2,-6,-1,7,-3,-8,8,5,-2,-3,-10,-2,4,7,-2,7,-8,8,4,-9,-4,9,-7,-6,-3,-7,-1,-7,7,-4,8,-2,-6,10,-6,1,3,6,4,-10,2,-9,6,-10,9,1,7,6,6,5,4,-5,-6,9,-2,7,8,-9,-10,-7,-4,8,6,7,1,-5,8,4,-3,-1,3,1,4,8,-8,4,-7,-3,6,4,-2,4,1,1,8,8,-2,5,-6,9,-1,-8,-5,9,1,-1,-4,-2,-1,-8,-8,4,-5,5,3,-7,-9,3,6,-5,7,1,-1,4,-9,-2,-9,7,5,-5,-8,-3,9,-10,9,-1,1,6,6,-3,2,-4,-2,-5,4,5,6,8,-5,-8,4,-9,-3,7,4,-6,5,-9,10,-4,-6,6,-7,7,3,-6,-7,1,1,1,10,-6,-7,2,9,-4,4,-8,4,-5,-1,7,-10,-7,-8,8,8,-1,-9,4,8,4,8,5,5,3,2,3,-8,-3,-1,-4,-5,5,9,-1,-7,-1,6,9,5,-7,-9,1,5,4,6,-4,-3,4,-10,1,9,2,-7,7,2,10,-8,-1,-6,-8,2,-1,3,-9,2,10,-1,7,3,1,-7,7,4,8,-2,10,8,-1,9,-2,1,2,-4,9,2,1,10,7,-5,-4,9,10,-7,8,4,-9,-2,8,-10,3,6,-1,3,2,3,6,-10,-1,9,5,1,-10,-4,9,5,6,-10,-10,5,3,-6,1,-5,-2,-4,-10,8,-8,-8,6,10,7,-1,3,8,5,4,1,10,4,8,-7,-5,1,-1,-1,1,3,4,7,1,-8,-9,4,2,-3,5,-9,4,-6,-8,-10,-4,8,-8,-1,-8,5,10,7,9,-4,-10,7,-4,-1,-1,-9,3,-4,-6,-9,8,2,-5,-1,6,1,8,-10,-2,-3,3,7,-3,4,-5,-4,6,10,2,6,-7,-6,4,5,8,-8,-2,-4,3,4,10,3,-3,-9,-4,-5,-1,-6,-6,2,1,-2,2,-9,5,-7,1,-2,2,-9,6,7,-4,4,-4,-1,-6,-7,2,-5,1,-9,1,7,3,-10,-2,6,-10,4,-9,-6,-2,5,-10,9,4,4,-1,9,-10,3,-5,-8,1,6,8,7,6,-4,-6,-8,4,6,-6,9,5,8,3,5,-7,-6,-7,-7,-8,-1,-5,-3,-2,4,5,4,7,1,7,6,9,8,-8,8,7,8,-10,-3,-3,10,2,7,-7,1,-4,-5,2,8,-10,6,8,9,9,10,-9,-10,-8,2,5,7,-4,-4,-8,8,1,-5,-10,-6,-6,-10,9,-8,5,2,5,1,4,6,8,-9,-10,7,-9,-8,1,10,8,-9,-5,-4,2,2,3,-9,-3,-1,3,2,2,6,10,7,1,-2,9,-9,-3,7,10,-8,-4,-6,6,-10,-10,4,-2,7,-7,4,-4,6,-5,-5,1,-7,-2,-4,1,-9,-2,-2,-3,10,7,-5,6,-2,6,-5,1,-10,5,1,9,8,2,8,8,-5,-3,-9,4,1,9,5,-7,2,2,-9,-5,4,8,3,1,2,2,2,-1,6,-8,9,-7,-7,-8,1,5,1,7,-1,5,2,-5,3,-9,5,9,5,8,-6,10,8,-3,1,4,-10,-5,6,1,5,8,9,5,5,6,10,1,3,8,7,6,-4,-2,-1,10,2,8,-5,-5,-8,6,-7,7,-4,-4,8,-8,10,-3,-10,-9,-2,6,-1,2,2,-5,-4,8,7,8,-1,2,-4,-4,-9,-9,-1,-10,5,-2,-7,-5,1,-10,-5,-8,3,-8,4,-3,9,3,6,4,5,-8,3,7,7,2,4,-8,7,-3,-2,-3,-8,-2,-4,-8,10,-3,-1,7,-8,2,9,6,-10,9,5,2,10,10,8,-3,5,-1,8,8,9,7,-4,3,4,-5,-6,2,10,-2,-1,-9,2,-7,-2,-8,7,-6,-8,6,-3,-1,-7,-6,7,9,2,-4,-2,9,-8,-2,2,-7,-8,-2,-3,1,8,-6,5,10,-5,-4,-7,-8,9,9,7,2,8,-8,9,-10,-9,1,-4,-3,-5,-4,1,-7,-2,-2,4,-4,-1,5,4,-8,-2,8,10,-2,2,7,-8,6,3,-6,-5,1,-5,-6,10,3,-3,-7,-6,-7,-7,-4,1,4,9,2,4,-9,-2,9,9,5,5,-4,-2,-9,-7,5,-4,-3,1,-6,3,-4,-10,-4,-5,2,2,2,9,5,6,-4,-1,3,6,-6,5,-1,-3,6,5,-9,-8,-3,4,-2,9,9,7,-1,1,10,-7,1,-6,-1,6,10,-1,-10,-8,-5,2,-7,8,-10,7,-7,10,6,6,9,-7,8,9,-5,2,-7,6,1,-4,-4,-2,-5,10,10,-1,8,7,8,-3,6,4,10,-7,-3,4,10,-10,-6,-8,-6,7,-7,-1,-2,-9,-2,2,-1,2,10,5,10,6,-4,4,3,6,-6,6,-1,-8,6,-4,-9,-4,2,8,3,-2,10,8,9,-5,1,3,-8,7,-1,2,-7,8,6,-5,-1,9,-3,5,3,7,3,7,2,-5,5,2,6,3,-7,-2,-5,10,-7,10,-6,5,-10,1,6,-5,-3,-3,9,10,4,6,2,7,-4,-1,-7,-10,-9,-7,6,6,-10,-8,-6,-7,-2,-10,-1,-6,-8,-5,-3,10,-5,7,-10,1,-3,-1,1,7,-2,-10,6,10,-2,6,10,-7,6,6,-6,-8,-8,-6,-8,2,4,3,-9,1,-7,-9,7,-2,10,1,-7,-5,-1,-5,7,-6,-3,-8,-3,-6,-10,-7,-10,1,9,6,-4,-4,-1,1,8,7,-10,4,8,2,-4,6,-10,-4,9,-6,10,-8,-10,-10,-8,-10,6,10,5,-1,-2,4,1,10,9,-5,-5,1,3,6,2,8,1,9,3,-6,6,7,-8,-9,3,8,-8,7,-2,-1,-6,-10,10,-4,1,7,8,5,3,2,10,7,-9,-9,5,5,2,10,-9,4,2,7,7,7,8,5,-9,7,-7,1,6,-5,5,10,-10,4,-8,-4,-7], dtype = "int32")#candidate|3999|(1936,)|const|int32
call_3998 = relay.TupleGetItem(func_1525_call(relay.reshape(const_3999.astype('int32'), [11, 16, 11]), relay.reshape(const_3999.astype('int32'), [11, 16, 11]), ), 6)
call_4000 = relay.TupleGetItem(func_1529_call(relay.reshape(const_3999.astype('int32'), [11, 16, 11]), relay.reshape(const_3999.astype('int32'), [11, 16, 11]), ), 6)
var_4003 = relay.var("var_4003", dtype = "float64", shape = (9, 2, 15))#candidate|4003|(9, 2, 15)|var|float64
bop_4004 = relay.floor_divide(call_3998.astype('float32'), relay.reshape(var_4003.astype('float32'), relay.shape_of(call_3998))) # shape=(9, 2, 15)
bop_4007 = relay.floor_divide(call_4000.astype('float32'), relay.reshape(var_4003.astype('float32'), relay.shape_of(call_4000))) # shape=(9, 2, 15)
uop_4008 = relay.acos(const_3999.astype('float32')) # shape=(1936,)
bop_4010 = relay.multiply(uop_4008.astype('float32'), relay.reshape(const_3999.astype('float32'), relay.shape_of(uop_4008))) # shape=(1936,)
func_3779_call = mod.get_global_var('func_3779')
func_3780_call = mutated_mod.get_global_var('func_3780')
call_4031 = func_3779_call()
call_4032 = func_3779_call()
output = relay.Tuple([call_3985,bop_4004,bop_4010,call_4031,])
output2 = relay.Tuple([call_3986,bop_4007,bop_4010,call_4032,])
func_4039 = relay.Function([var_4003,], output)
mod['func_4039'] = func_4039
mod = relay.transform.InferType()(mod)
var_4040 = relay.var("var_4040", dtype = "float64", shape = (9, 2, 15))#candidate|4040|(9, 2, 15)|var|float64
output = func_4039(var_4040)
func_4041 = relay.Function([var_4040], output)
mutated_mod['func_4041'] = func_4041
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1480_call = mod.get_global_var('func_1480')
func_1481_call = mutated_mod.get_global_var('func_1481')
call_4063 = relay.TupleGetItem(func_1480_call(), 1)
call_4064 = relay.TupleGetItem(func_1481_call(), 1)
func_3701_call = mod.get_global_var('func_3701')
func_3702_call = mutated_mod.get_global_var('func_3702')
call_4068 = relay.TupleGetItem(func_3701_call(), 0)
call_4069 = relay.TupleGetItem(func_3702_call(), 0)
output = relay.Tuple([call_4063,call_4068,])
output2 = relay.Tuple([call_4064,call_4069,])
func_4144 = relay.Function([], output)
mod['func_4144'] = func_4144
mod = relay.transform.InferType()(mod)
output = func_4144()
func_4145 = relay.Function([], output)
mutated_mod['func_4145'] = func_4145
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3121_call = mod.get_global_var('func_3121')
func_3123_call = mutated_mod.get_global_var('func_3123')
call_4169 = relay.TupleGetItem(func_3121_call(), 0)
call_4170 = relay.TupleGetItem(func_3123_call(), 0)
func_1326_call = mod.get_global_var('func_1326')
func_1328_call = mutated_mod.get_global_var('func_1328')
call_4184 = relay.TupleGetItem(func_1326_call(), 0)
call_4185 = relay.TupleGetItem(func_1328_call(), 0)
output = relay.Tuple([call_4169,call_4184,])
output2 = relay.Tuple([call_4170,call_4185,])
func_4200 = relay.Function([], output)
mod['func_4200'] = func_4200
mod = relay.transform.InferType()(mod)
mutated_mod['func_4200'] = func_4200
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4200_call = mutated_mod.get_global_var('func_4200')
call_4201 = func_4200_call()
output = call_4201
func_4202 = relay.Function([], output)
mutated_mod['func_4202'] = func_4202
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4205 = relay.var("var_4205", dtype = "float32", shape = (12, 11))#candidate|4205|(12, 11)|var|float32
uop_4206 = relay.exp(var_4205.astype('float32')) # shape=(12, 11)
func_264_call = mod.get_global_var('func_264')
func_267_call = mutated_mod.get_global_var('func_267')
var_4214 = relay.var("var_4214", dtype = "float32", shape = (30,))#candidate|4214|(30,)|var|float32
const_4215 = relay.const([[3.375430,-5.030219,4.830986,3.833000,6.437704,-4.201614,-4.079429,6.912378,-0.161150,8.705699,-1.484482,-5.234510,9.215545,-9.822396,-1.080819,1.411273,-6.246821,2.749964,2.306181,0.665846,-7.944965,-8.324046,-0.082463,1.142450,2.677839,6.522390,-0.501895,2.765482,3.643068,-2.921545,-8.967945,2.016808,5.765844,-9.365284,-9.811698,7.702773,3.255000,4.534690,1.479681,5.742755,1.092068,8.578934,-4.773070,-0.967152,-1.218654,4.137775,-7.870554,9.630070,2.170543,-5.680330,3.339823,-5.103067,0.280480,-4.971714,8.774168,-3.731641,-4.797942,-6.405894,-3.646315,-3.397127,3.479451,-8.789306,3.799168,0.123477,9.906932,-5.657337],[1.855054,-8.398897,-5.395332,-5.131738,-0.308048,-0.164882,-9.628807,1.428929,2.339833,5.004067,-8.661502,-3.125075,3.042424,-7.447717,-0.872617,-4.898304,-6.466319,-0.174841,7.864596,-5.791901,5.019764,6.846105,8.772253,7.839118,-4.436462,-6.143851,-1.793078,-4.304126,-4.384483,-4.554279,9.314174,8.956727,9.998636,-0.053079,-6.884378,-9.819432,-3.697655,4.933884,9.167658,-9.174199,1.285536,-1.116303,-9.579491,8.141100,2.611756,4.242116,-5.157353,-3.088567,-9.339173,6.431507,1.532854,9.095187,8.247986,-3.732055,0.950942,-4.675217,8.406241,-3.671731,-8.224852,-4.929409,2.226302,-3.995849,-8.925825,-3.102708,-3.273673,5.003404],[0.889543,6.605776,7.318013,3.013587,-2.032422,3.946465,-9.514019,0.345784,-5.178230,7.347020,2.179412,8.748090,-9.942385,6.729402,1.691422,5.819215,1.016341,3.109727,-1.274525,2.980551,1.879837,-2.352384,-7.690388,-5.934084,5.029265,-3.011497,6.081024,2.325753,9.211627,-0.885281,0.742428,-4.792596,-0.972038,-1.724254,-7.608312,-8.290402,-9.823569,-9.470903,-0.355320,1.238071,-4.179656,2.289650,-2.626144,3.949502,7.096915,-6.756199,2.673107,5.987735,0.011320,-0.813410,6.412625,8.256547,2.740766,-0.341374,-0.296123,-2.730743,0.003665,-1.626683,-9.656672,-5.536856,-2.800386,-4.661306,7.364647,7.892726,1.941321,-4.091590],[-0.229897,3.641934,3.422285,-7.260597,6.993744,-2.139751,-3.979940,-5.417107,6.821694,-2.994353,-7.272785,8.023745,-8.750266,-0.735804,5.159912,-2.761616,-9.385790,4.836779,4.655191,4.319397,-4.805780,1.886985,-7.120337,2.744851,-3.850824,8.361913,8.941251,-1.111520,-8.395683,2.784861,-0.602644,4.474561,5.068470,-6.364419,-6.465565,-1.500007,-7.990386,6.945327,2.865549,-8.757705,-2.131102,-6.826657,-7.766703,8.067020,5.900180,-9.257976,-4.451046,-0.263444,2.139799,-7.475829,-2.720546,-7.095521,2.073619,-3.373752,6.427572,-0.705216,-7.488220,6.512941,-7.924659,6.537420,2.985796,5.599357,-5.309566,-0.517048,-4.733081,3.654649],[1.563157,6.396792,-7.656899,7.502515,-2.971347,5.774211,7.510197,-2.886305,-6.980770,5.128113,3.412936,2.693682,6.262823,2.107674,3.643728,-7.081479,1.890842,0.814243,7.200695,9.198263,-2.161333,2.330250,4.741998,4.601036,8.030384,5.010327,1.146445,-5.547093,-5.786769,1.084491,4.030165,-2.767815,6.803962,-4.598885,2.118175,1.286627,-7.875891,9.430755,-6.756379,0.562344,5.016774,-0.379420,-3.200164,3.819864,3.962441,-4.693937,7.197788,5.244542,-0.751977,4.622441,9.372753,3.898536,3.373830,6.700662,-3.139708,-5.323086,5.167985,-6.349626,2.296841,8.227015,-7.453658,1.867756,-8.187457,5.663213,-1.917547,-3.535799]], dtype = "float32")#candidate|4215|(5, 66)|const|float32
call_4213 = relay.TupleGetItem(func_264_call(relay.reshape(var_4214.astype('float32'), [1, 6, 5]), relay.reshape(const_4215.astype('float32'), [11, 6, 5]), ), 0)
call_4216 = relay.TupleGetItem(func_267_call(relay.reshape(var_4214.astype('float32'), [1, 6, 5]), relay.reshape(const_4215.astype('float32'), [11, 6, 5]), ), 0)
func_2797_call = mod.get_global_var('func_2797')
func_2799_call = mutated_mod.get_global_var('func_2799')
var_4225 = relay.var("var_4225", dtype = "bool", shape = ())#candidate|4225|()|var|bool
call_4224 = relay.TupleGetItem(func_2797_call(relay.reshape(var_4225.astype('bool'), [])), 3)
call_4226 = relay.TupleGetItem(func_2799_call(relay.reshape(var_4225.astype('bool'), [])), 3)
output = relay.Tuple([uop_4206,call_4213,var_4214,const_4215,call_4224,var_4225,])
output2 = relay.Tuple([uop_4206,call_4216,var_4214,const_4215,call_4226,var_4225,])
func_4229 = relay.Function([var_4205,var_4214,var_4225,], output)
mod['func_4229'] = func_4229
mod = relay.transform.InferType()(mod)
mutated_mod['func_4229'] = func_4229
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4229_call = mutated_mod.get_global_var('func_4229')
var_4231 = relay.var("var_4231", dtype = "float32", shape = (12, 11))#candidate|4231|(12, 11)|var|float32
var_4232 = relay.var("var_4232", dtype = "float32", shape = (30,))#candidate|4232|(30,)|var|float32
var_4233 = relay.var("var_4233", dtype = "bool", shape = ())#candidate|4233|()|var|bool
call_4230 = func_4229_call(var_4231,var_4232,var_4233,)
output = call_4230
func_4234 = relay.Function([var_4231,var_4232,var_4233,], output)
mutated_mod['func_4234'] = func_4234
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4285 = relay.constdtype = "float32")#candidate|4285|(8, 14, 16)|const|float32
var_4286 = relay.var("var_4286", dtype = "float32", shape = (8, 14, 16))#candidate|4286|(8, 14, 16)|var|float32
bop_4287 = relay.floor_mod(const_4285.astype('float32'), relay.reshape(var_4286.astype('float32'), relay.shape_of(const_4285))) # shape=(8, 14, 16)
output = bop_4287
output2 = bop_4287
func_4293 = relay.Function([var_4286,], output)
mod['func_4293'] = func_4293
mod = relay.transform.InferType()(mod)
mutated_mod['func_4293'] = func_4293
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4294 = relay.var("var_4294", dtype = "float32", shape = (8, 14, 16))#candidate|4294|(8, 14, 16)|var|float32
func_4293_call = mutated_mod.get_global_var('func_4293')
call_4295 = func_4293_call(var_4294)
output = call_4295
func_4296 = relay.Function([var_4294], output)
mutated_mod['func_4296'] = func_4296
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2856_call = mod.get_global_var('func_2856')
func_2857_call = mutated_mod.get_global_var('func_2857')
call_4332 = relay.TupleGetItem(func_2856_call(), 0)
call_4333 = relay.TupleGetItem(func_2857_call(), 0)
output = call_4332
output2 = call_4333
func_4354 = relay.Function([], output)
mod['func_4354'] = func_4354
mod = relay.transform.InferType()(mod)
output = func_4354()
func_4355 = relay.Function([], output)
mutated_mod['func_4355'] = func_4355
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4410 = relay.constdtype = "float32")#candidate|4410|(11, 10, 16)|const|float32
uop_4411 = relay.cosh(const_4410.astype('float32')) # shape=(11, 10, 16)
func_3725_call = mod.get_global_var('func_3725')
func_3726_call = mutated_mod.get_global_var('func_3726')
call_4420 = relay.TupleGetItem(func_3725_call(), 0)
call_4421 = relay.TupleGetItem(func_3726_call(), 0)
func_1011_call = mod.get_global_var('func_1011')
func_1014_call = mutated_mod.get_global_var('func_1014')
const_4423 = relay.const([True,True,True,False,True,False,True,False,False,True,True,True,False,True,False,False,True,False,False,True,False,True,False,True,False,False,True,True,False,True,False,False,False,True,False,True,True,True,True,True,True,False,True,True,False,True,True,True,False,True,False,False,False,False,True,True,True,False,False,True,True,False,True,False,True,True,True,False,True,True,False,False,True,True,True,True,False,True,False,False,False,True,False,True,True,False,False,False,False,False,False,False,True,True,False,False,True,True,True,False,False,True,False,False,False,True,True,False,False,False,True,True,True,True,False,False,True,False,True,False,False,True,False,True,False,False,False,True,True,True,True,False,False,True,False,False,True,True,False,True,True,True,False,False,True,False,True,False,False,False,False,True,True,False,False,True,False,False,True,False,True,False,False,True,False,False,True,True], dtype = "bool")#candidate|4423|(168,)|const|bool
call_4422 = func_1011_call(relay.reshape(const_4423.astype('bool'), [7, 12, 2]), relay.reshape(const_4423.astype('bool'), [7, 12, 2]), )
call_4424 = func_1011_call(relay.reshape(const_4423.astype('bool'), [7, 12, 2]), relay.reshape(const_4423.astype('bool'), [7, 12, 2]), )
uop_4429 = relay.rsqrt(uop_4411.astype('float32')) # shape=(11, 10, 16)
uop_4433 = relay.acosh(uop_4429.astype('float32')) # shape=(11, 10, 16)
uop_4435 = relay.sin(uop_4429.astype('float32')) # shape=(11, 10, 16)
output = relay.Tuple([call_4420,call_4422,const_4423,uop_4433,uop_4435,])
output2 = relay.Tuple([call_4421,call_4424,const_4423,uop_4433,uop_4435,])
func_4437 = relay.Function([], output)
mod['func_4437'] = func_4437
mod = relay.transform.InferType()(mod)
output = func_4437()
func_4438 = relay.Function([], output)
mutated_mod['func_4438'] = func_4438
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4354_call = mod.get_global_var('func_4354')
func_4355_call = mutated_mod.get_global_var('func_4355')
call_4446 = func_4354_call()
call_4447 = func_4354_call()
func_1770_call = mod.get_global_var('func_1770')
func_1771_call = mutated_mod.get_global_var('func_1771')
call_4450 = relay.TupleGetItem(func_1770_call(), 0)
call_4451 = relay.TupleGetItem(func_1771_call(), 0)
output = relay.Tuple([call_4446,call_4450,])
output2 = relay.Tuple([call_4447,call_4451,])
func_4456 = relay.Function([], output)
mod['func_4456'] = func_4456
mod = relay.transform.InferType()(mod)
mutated_mod['func_4456'] = func_4456
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4456_call = mutated_mod.get_global_var('func_4456')
call_4457 = func_4456_call()
output = call_4457
func_4458 = relay.Function([], output)
mutated_mod['func_4458'] = func_4458
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3819_call = mod.get_global_var('func_3819')
func_3820_call = mutated_mod.get_global_var('func_3820')
call_4470 = func_3819_call()
call_4471 = func_3819_call()
const_4472 = relay.const([[-1.232050,7.973763,2.829952],[-2.915215,-1.784285,-6.557688],[-8.262987,-5.620146,9.207336],[4.605158,-1.255693,9.329664],[7.215279,-6.546612,-4.264501],[-9.491677,-5.199375,-2.955904],[-9.466423,-0.018993,3.833032],[-2.519274,9.428033,0.676920],[-9.583310,0.119850,-8.447639],[7.983621,4.063502,-9.508059],[-2.430735,2.555669,-2.393283],[-2.159756,-2.810001,1.278843],[5.004303,6.836956,9.887442],[-9.467125,6.927971,-9.755394],[-9.851903,4.171324,-9.592166],[-8.500208,2.262530,8.563585],[9.088039,-6.065117,2.179041],[7.100322,-3.116961,3.958900],[0.630786,6.631492,1.182975],[0.163995,6.182390,-0.861153],[-7.565699,-2.773434,-8.588075],[9.222831,7.651475,8.108413],[5.585027,-0.273294,9.794209],[3.793740,1.727798,3.206808],[0.802583,-7.828887,6.287218],[-6.122721,1.518520,2.635286]], dtype = "float32")#candidate|4472|(26, 3)|const|float32
bop_4473 = relay.minimum(call_4470.astype('int32'), relay.reshape(const_4472.astype('int32'), relay.shape_of(call_4470))) # shape=(26, 3)
bop_4476 = relay.minimum(call_4471.astype('int32'), relay.reshape(const_4472.astype('int32'), relay.shape_of(call_4471))) # shape=(26, 3)
output = relay.Tuple([bop_4473,])
output2 = relay.Tuple([bop_4476,])
func_4479 = relay.Function([], output)
mod['func_4479'] = func_4479
mod = relay.transform.InferType()(mod)
mutated_mod['func_4479'] = func_4479
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4479_call = mutated_mod.get_global_var('func_4479')
call_4480 = func_4479_call()
output = call_4480
func_4481 = relay.Function([], output)
mutated_mod['func_4481'] = func_4481
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4506 = relay.const([[[9,-7,10,-4],[-6,6,-6,-6]],[[6,9,1,6],[-7,-8,-7,5]],[[8,5,-9,-4],[-9,-3,-5,-8]],[[-8,-1,-2,-4],[5,-6,-10,6]]], dtype = "uint64")#candidate|4506|(4, 2, 4)|const|uint64
var_4507 = relay.var("var_4507", dtype = "uint64", shape = (4, 2, 4))#candidate|4507|(4, 2, 4)|var|uint64
bop_4508 = relay.right_shift(const_4506.astype('uint64'), relay.reshape(var_4507.astype('uint64'), relay.shape_of(const_4506))) # shape=(4, 2, 4)
output = bop_4508
output2 = bop_4508
func_4513 = relay.Function([var_4507,], output)
mod['func_4513'] = func_4513
mod = relay.transform.InferType()(mod)
mutated_mod['func_4513'] = func_4513
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4514 = relay.var("var_4514", dtype = "uint64", shape = (4, 2, 4))#candidate|4514|(4, 2, 4)|var|uint64
func_4513_call = mutated_mod.get_global_var('func_4513')
call_4515 = func_4513_call(var_4514)
output = call_4515
func_4516 = relay.Function([var_4514], output)
mutated_mod['func_4516'] = func_4516
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3779_call = mod.get_global_var('func_3779')
func_3780_call = mutated_mod.get_global_var('func_3780')
call_4550 = func_3779_call()
call_4551 = func_3779_call()
output = call_4550
output2 = call_4551
func_4552 = relay.Function([], output)
mod['func_4552'] = func_4552
mod = relay.transform.InferType()(mod)
mutated_mod['func_4552'] = func_4552
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4552_call = mutated_mod.get_global_var('func_4552')
call_4553 = func_4552_call()
output = call_4553
func_4554 = relay.Function([], output)
mutated_mod['func_4554'] = func_4554
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3121_call = mod.get_global_var('func_3121')
func_3123_call = mutated_mod.get_global_var('func_3123')
call_4557 = relay.TupleGetItem(func_3121_call(), 0)
call_4558 = relay.TupleGetItem(func_3123_call(), 0)
func_3121_call = mod.get_global_var('func_3121')
func_3123_call = mutated_mod.get_global_var('func_3123')
call_4573 = relay.TupleGetItem(func_3121_call(), 0)
call_4574 = relay.TupleGetItem(func_3123_call(), 0)
output = relay.Tuple([call_4557,call_4573,])
output2 = relay.Tuple([call_4558,call_4574,])
func_4588 = relay.Function([], output)
mod['func_4588'] = func_4588
mod = relay.transform.InferType()(mod)
output = func_4588()
func_4589 = relay.Function([], output)
mutated_mod['func_4589'] = func_4589
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4596 = relay.var("var_4596", dtype = "float32", shape = (7, 16, 15))#candidate|4596|(7, 16, 15)|var|float32
uop_4597 = relay.acos(var_4596.astype('float32')) # shape=(7, 16, 15)
uop_4602 = relay.tan(uop_4597.astype('float32')) # shape=(7, 16, 15)
var_4605 = relay.var("var_4605", dtype = "float32", shape = (7, 16, 15))#candidate|4605|(7, 16, 15)|var|float32
bop_4606 = relay.logical_xor(uop_4597.astype('int32'), relay.reshape(var_4605.astype('int32'), relay.shape_of(uop_4597))) # shape=(7, 16, 15)
func_2076_call = mod.get_global_var('func_2076')
func_2079_call = mutated_mod.get_global_var('func_2079')
var_4611 = relay.var("var_4611", dtype = "bool", shape = (1134,))#candidate|4611|(1134,)|var|bool
call_4610 = relay.TupleGetItem(func_2076_call(relay.reshape(var_4611.astype('bool'), [9, 9, 14])), 1)
call_4612 = relay.TupleGetItem(func_2079_call(relay.reshape(var_4611.astype('bool'), [9, 9, 14])), 1)
output = relay.Tuple([uop_4602,bop_4606,call_4610,var_4611,])
output2 = relay.Tuple([uop_4602,bop_4606,call_4612,var_4611,])
func_4617 = relay.Function([var_4596,var_4605,var_4611,], output)
mod['func_4617'] = func_4617
mod = relay.transform.InferType()(mod)
var_4618 = relay.var("var_4618", dtype = "float32", shape = (7, 16, 15))#candidate|4618|(7, 16, 15)|var|float32
var_4619 = relay.var("var_4619", dtype = "float32", shape = (7, 16, 15))#candidate|4619|(7, 16, 15)|var|float32
var_4620 = relay.var("var_4620", dtype = "bool", shape = (1134,))#candidate|4620|(1134,)|var|bool
output = func_4617(var_4618,var_4619,var_4620,)
func_4621 = relay.Function([var_4618,var_4619,var_4620,], output)
mutated_mod['func_4621'] = func_4621
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3701_call = mod.get_global_var('func_3701')
func_3702_call = mutated_mod.get_global_var('func_3702')
call_4628 = relay.TupleGetItem(func_3701_call(), 0)
call_4629 = relay.TupleGetItem(func_3702_call(), 0)
func_3008_call = mod.get_global_var('func_3008')
func_3011_call = mutated_mod.get_global_var('func_3011')
var_4632 = relay.var("var_4632", dtype = "bool", shape = (1134,))#candidate|4632|(1134,)|var|bool
call_4631 = relay.TupleGetItem(func_3008_call(relay.reshape(var_4632.astype('bool'), [9, 9, 14])), 0)
call_4633 = relay.TupleGetItem(func_3011_call(relay.reshape(var_4632.astype('bool'), [9, 9, 14])), 0)
var_4635 = relay.var("var_4635", dtype = "bool", shape = (1134,))#candidate|4635|(1134,)|var|bool
bop_4636 = relay.maximum(var_4632.astype('uint8'), relay.reshape(var_4635.astype('uint8'), relay.shape_of(var_4632))) # shape=(1134,)
output = relay.Tuple([call_4628,call_4631,bop_4636,])
output2 = relay.Tuple([call_4629,call_4633,bop_4636,])
func_4665 = relay.Function([var_4632,var_4635,], output)
mod['func_4665'] = func_4665
mod = relay.transform.InferType()(mod)
mutated_mod['func_4665'] = func_4665
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4665_call = mutated_mod.get_global_var('func_4665')
var_4667 = relay.var("var_4667", dtype = "bool", shape = (1134,))#candidate|4667|(1134,)|var|bool
var_4668 = relay.var("var_4668", dtype = "bool", shape = (1134,))#candidate|4668|(1134,)|var|bool
call_4666 = func_4665_call(var_4667,var_4668,)
output = call_4666
func_4669 = relay.Function([var_4667,var_4668,], output)
mutated_mod['func_4669'] = func_4669
mutated_mod = relay.transform.InferType()(mutated_mod)
func_277_call = mod.get_global_var('func_277')
func_278_call = mutated_mod.get_global_var('func_278')
call_4727 = func_277_call()
call_4728 = func_277_call()
func_2511_call = mod.get_global_var('func_2511')
func_2514_call = mutated_mod.get_global_var('func_2514')
const_4761 = relay.const([7.408424,-2.559610,-8.624812,6.105041,8.216765,6.202731,-5.094561,-1.374886,5.505294,-5.786989,1.812908,-2.564748,-3.854397,5.512838,7.702023,6.457338,8.564934,0.444387,-4.220379,4.675306,5.780799,8.474530,4.761889,6.423538,8.713039,2.307238,7.214067,9.072679,-5.779426,-5.570509,2.962497,-7.218001,8.414239,-7.745016,-7.086928,0.619870,-8.871564,7.636509,-3.661696,2.469058,5.113628,3.883101,-8.076969,-7.771023,7.089704,-7.811113,-5.837647,-0.076420,-9.626639,4.636446,-1.253836,-5.047078,3.720573,-5.288836,6.252363,5.569512,-8.032731,8.639679,-2.789380,5.453639,-3.939887,-6.724626,0.089823,1.006678,-4.584503,-5.234969,6.300397,1.015901,3.180124,5.673415,1.559102,5.260272,8.262475,8.757196,-9.081296,8.252706,-7.281356,4.815584,-1.063805,-9.792694,3.772828,6.639819,1.090748,-0.209243,6.615708,4.034772,-3.939784,-4.676261,-8.883449,7.496558,6.389098,9.384260,0.727053,8.046254,2.021340,-1.642162,-2.037220,-4.607736,-4.434061,-8.713428,-5.485252,7.807749,-8.732852,-2.807181,5.206462,4.727143,-3.434790,-2.328948,6.552141,-6.117421,1.628441,-4.436319,-5.371164,-0.920484,7.577676,-8.136358,-0.181102,-5.578780,-2.699528,6.206086,8.559682,-7.710691,-4.011470,5.135664,-3.431619,-3.531051,-7.078555,1.265621,7.296446,3.390621,4.793065,-6.790960,1.084864,-8.513180,4.608021,0.765306,2.602114,6.090420,7.666738,2.983895,-4.943580,2.840702,-1.354562,2.804085,-5.782390,-2.689644,0.181266,-8.702555,-4.893729,-8.194440,-9.958062,-6.424956,5.340548,1.816570,-0.471468,-2.468849,0.422408,3.962567,-6.671357,1.066246,3.570313,-7.243871,0.978157,-3.023057,-9.950383,7.772739,-3.490580,-4.434687,7.114493,-0.667718,-2.136203,-3.407355,8.981079,-1.864415,7.500657,-1.828918,7.993500,8.610765,8.753460,-6.356622,-1.499118,1.437316,2.910022,-8.177666,6.756058,-3.874069,1.621705,2.444572,-2.863149], dtype = "float64")#candidate|4761|(189,)|const|float64
var_4762 = relay.var("var_4762", dtype = "uint8", shape = (224,))#candidate|4762|(224,)|var|uint8
call_4760 = relay.TupleGetItem(func_2511_call(relay.reshape(const_4761.astype('float64'), [7, 9, 3]), relay.reshape(var_4762.astype('uint8'), [224,]), ), 1)
call_4763 = relay.TupleGetItem(func_2514_call(relay.reshape(const_4761.astype('float64'), [7, 9, 3]), relay.reshape(var_4762.astype('uint8'), [224,]), ), 1)
func_3485_call = mod.get_global_var('func_3485')
func_3489_call = mutated_mod.get_global_var('func_3489')
const_4775 = relay.const([[3.580048,-7.038894,-3.126247,2.357665,-8.190173,-1.490024,1.965530,1.025242,-2.701822,1.861057,6.739807,-2.010059,9.823371,8.066897,9.413519,-6.214491,-4.590088,-5.897143,-2.979376,3.532822,-3.759825,6.981621,0.449381,-5.190490,-8.732891,4.717511,1.735076,-4.558320,-8.779806,8.143930]], dtype = "float32")#candidate|4775|(1, 30)|const|float32
var_4776 = relay.var("var_4776", dtype = "float32", shape = ())#candidate|4776|()|var|float32
var_4777 = relay.var("var_4777", dtype = "float32", shape = (220,))#candidate|4777|(220,)|var|float32
call_4774 = relay.TupleGetItem(func_3485_call(relay.reshape(const_4775.astype('float32'), [30,]), relay.reshape(var_4776.astype('float32'), []), relay.reshape(var_4777.astype('float32'), [55, 4]), ), 0)
call_4778 = relay.TupleGetItem(func_3489_call(relay.reshape(const_4775.astype('float32'), [30,]), relay.reshape(var_4776.astype('float32'), []), relay.reshape(var_4777.astype('float32'), [55, 4]), ), 0)
output = relay.Tuple([call_4727,call_4760,const_4761,var_4762,call_4774,const_4775,var_4776,var_4777,])
output2 = relay.Tuple([call_4728,call_4763,const_4761,var_4762,call_4778,const_4775,var_4776,var_4777,])
func_4781 = relay.Function([var_4762,var_4776,var_4777,], output)
mod['func_4781'] = func_4781
mod = relay.transform.InferType()(mod)
mutated_mod['func_4781'] = func_4781
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4781_call = mutated_mod.get_global_var('func_4781')
var_4783 = relay.var("var_4783", dtype = "uint8", shape = (224,))#candidate|4783|(224,)|var|uint8
var_4784 = relay.var("var_4784", dtype = "float32", shape = ())#candidate|4784|()|var|float32
var_4785 = relay.var("var_4785", dtype = "float32", shape = (220,))#candidate|4785|(220,)|var|float32
call_4782 = func_4781_call(var_4783,var_4784,var_4785,)
output = call_4782
func_4786 = relay.Function([var_4783,var_4784,var_4785,], output)
mutated_mod['func_4786'] = func_4786
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4893 = relay.var("var_4893", dtype = "float32", shape = (3, 16, 3))#candidate|4893|(3, 16, 3)|var|float32
uop_4894 = relay.asin(var_4893.astype('float32')) # shape=(3, 16, 3)
output = uop_4894
output2 = uop_4894
func_4896 = relay.Function([var_4893,], output)
mod['func_4896'] = func_4896
mod = relay.transform.InferType()(mod)
mutated_mod['func_4896'] = func_4896
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4897 = relay.var("var_4897", dtype = "float32", shape = (3, 16, 3))#candidate|4897|(3, 16, 3)|var|float32
func_4896_call = mutated_mod.get_global_var('func_4896')
call_4898 = func_4896_call(var_4897)
output = call_4898
func_4899 = relay.Function([var_4897], output)
mutated_mod['func_4899'] = func_4899
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3701_call = mod.get_global_var('func_3701')
func_3702_call = mutated_mod.get_global_var('func_3702')
call_4913 = relay.TupleGetItem(func_3701_call(), 0)
call_4914 = relay.TupleGetItem(func_3702_call(), 0)
output = call_4913
output2 = call_4914
func_4941 = relay.Function([], output)
mod['func_4941'] = func_4941
mod = relay.transform.InferType()(mod)
output = func_4941()
func_4942 = relay.Function([], output)
mutated_mod['func_4942'] = func_4942
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4354_call = mod.get_global_var('func_4354')
func_4355_call = mutated_mod.get_global_var('func_4355')
call_4971 = func_4354_call()
call_4972 = func_4354_call()
func_1116_call = mod.get_global_var('func_1116')
func_1119_call = mutated_mod.get_global_var('func_1119')
var_4980 = relay.var("var_4980", dtype = "int64", shape = (2, 384))#candidate|4980|(2, 384)|var|int64
call_4979 = relay.TupleGetItem(func_1116_call(relay.reshape(var_4980.astype('int64'), [12, 4, 16])), 1)
call_4981 = relay.TupleGetItem(func_1119_call(relay.reshape(var_4980.astype('int64'), [12, 4, 16])), 1)
uop_4984 = relay.cos(var_4980.astype('float64')) # shape=(2, 384)
func_4144_call = mod.get_global_var('func_4144')
func_4145_call = mutated_mod.get_global_var('func_4145')
call_4986 = relay.TupleGetItem(func_4144_call(), 0)
call_4987 = relay.TupleGetItem(func_4145_call(), 0)
var_4989 = relay.var("var_4989", dtype = "float64", shape = (2, 384))#candidate|4989|(2, 384)|var|float64
bop_4990 = relay.mod(uop_4984.astype('float64'), relay.reshape(var_4989.astype('float64'), relay.shape_of(uop_4984))) # shape=(2, 384)
func_4588_call = mod.get_global_var('func_4588')
func_4589_call = mutated_mod.get_global_var('func_4589')
call_5000 = relay.TupleGetItem(func_4588_call(), 1)
call_5001 = relay.TupleGetItem(func_4589_call(), 1)
uop_5003 = relay.erf(uop_4984.astype('float32')) # shape=(2, 384)
func_3112_call = mod.get_global_var('func_3112')
func_3113_call = mutated_mod.get_global_var('func_3113')
call_5009 = relay.TupleGetItem(func_3112_call(), 0)
call_5010 = relay.TupleGetItem(func_3113_call(), 0)
var_5012 = relay.var("var_5012", dtype = "float32", shape = (2, 384))#candidate|5012|(2, 384)|var|float32
bop_5013 = relay.right_shift(uop_5003.astype('uint64'), relay.reshape(var_5012.astype('uint64'), relay.shape_of(uop_5003))) # shape=(2, 384)
func_3977_call = mod.get_global_var('func_3977')
func_3978_call = mutated_mod.get_global_var('func_3978')
call_5018 = func_3977_call()
call_5019 = func_3977_call()
output = relay.Tuple([call_4971,call_4979,call_4986,bop_4990,call_5000,call_5009,bop_5013,call_5018,])
output2 = relay.Tuple([call_4972,call_4981,call_4987,bop_4990,call_5001,call_5010,bop_5013,call_5019,])
func_5024 = relay.Function([var_4980,var_4989,var_5012,], output)
mod['func_5024'] = func_5024
mod = relay.transform.InferType()(mod)
var_5025 = relay.var("var_5025", dtype = "int64", shape = (2, 384))#candidate|5025|(2, 384)|var|int64
var_5026 = relay.var("var_5026", dtype = "float64", shape = (2, 384))#candidate|5026|(2, 384)|var|float64
var_5027 = relay.var("var_5027", dtype = "float32", shape = (2, 384))#candidate|5027|(2, 384)|var|float32
output = func_5024(var_5025,var_5026,var_5027,)
func_5028 = relay.Function([var_5025,var_5026,var_5027,], output)
mutated_mod['func_5028'] = func_5028
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5038 = relay.var("var_5038", dtype = "uint8", shape = (14, 1, 10))#candidate|5038|(14, 1, 10)|var|uint8
var_5039 = relay.var("var_5039", dtype = "uint8", shape = (14, 9, 10))#candidate|5039|(14, 9, 10)|var|uint8
bop_5040 = relay.minimum(var_5038.astype('uint8'), var_5039.astype('uint8')) # shape=(14, 9, 10)
output = relay.Tuple([bop_5040,])
output2 = relay.Tuple([bop_5040,])
func_5060 = relay.Function([var_5038,var_5039,], output)
mod['func_5060'] = func_5060
mod = relay.transform.InferType()(mod)
var_5061 = relay.var("var_5061", dtype = "uint8", shape = (14, 1, 10))#candidate|5061|(14, 1, 10)|var|uint8
var_5062 = relay.var("var_5062", dtype = "uint8", shape = (14, 9, 10))#candidate|5062|(14, 9, 10)|var|uint8
output = func_5060(var_5061,var_5062,)
func_5063 = relay.Function([var_5061,var_5062,], output)
mutated_mod['func_5063'] = func_5063
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3725_call = mod.get_global_var('func_3725')
func_3726_call = mutated_mod.get_global_var('func_3726')
call_5087 = relay.TupleGetItem(func_3725_call(), 0)
call_5088 = relay.TupleGetItem(func_3726_call(), 0)
uop_5115 = relay.acos(call_5087.astype('float32')) # shape=(9, 9, 14)
uop_5117 = relay.acos(call_5088.astype('float32')) # shape=(9, 9, 14)
func_3779_call = mod.get_global_var('func_3779')
func_3780_call = mutated_mod.get_global_var('func_3780')
call_5120 = func_3779_call()
call_5121 = func_3779_call()
func_2421_call = mod.get_global_var('func_2421')
func_2425_call = mutated_mod.get_global_var('func_2425')
const_5140 = relay.const(False, dtype = "bool")#candidate|5140|()|const|bool
var_5141 = relay.var("var_5141", dtype = "float32", shape = (220,))#candidate|5141|(220,)|var|float32
call_5139 = relay.TupleGetItem(func_2421_call(relay.reshape(const_5140.astype('bool'), []), relay.reshape(var_5141.astype('float32'), [220,]), ), 0)
call_5142 = relay.TupleGetItem(func_2425_call(relay.reshape(const_5140.astype('bool'), []), relay.reshape(var_5141.astype('float32'), [220,]), ), 0)
func_3485_call = mod.get_global_var('func_3485')
func_3489_call = mutated_mod.get_global_var('func_3489')
var_5162 = relay.var("var_5162", dtype = "float32", shape = (30,))#candidate|5162|(30,)|var|float32
call_5161 = relay.TupleGetItem(func_3485_call(relay.reshape(var_5162.astype('float32'), [30,]), relay.reshape(const_5140.astype('float32'), []), relay.reshape(var_5141.astype('float32'), [55, 4]), ), 0)
call_5163 = relay.TupleGetItem(func_3489_call(relay.reshape(var_5162.astype('float32'), [30,]), relay.reshape(const_5140.astype('float32'), []), relay.reshape(var_5141.astype('float32'), [55, 4]), ), 0)
uop_5173 = relay.atanh(uop_5115.astype('float32')) # shape=(9, 9, 14)
uop_5175 = relay.atanh(uop_5117.astype('float32')) # shape=(9, 9, 14)
bop_5177 = relay.power(uop_5173.astype('float32'), relay.reshape(call_5161.astype('float32'), relay.shape_of(uop_5173))) # shape=(9, 9, 14)
bop_5180 = relay.power(uop_5175.astype('float32'), relay.reshape(call_5163.astype('float32'), relay.shape_of(uop_5175))) # shape=(9, 9, 14)
bop_5195 = relay.bitwise_and(var_5162.astype('int64'), const_5140.astype('int64')) # shape=(30,)
output = relay.Tuple([call_5120,call_5139,var_5141,bop_5177,bop_5195,])
output2 = relay.Tuple([call_5121,call_5142,var_5141,bop_5180,bop_5195,])
func_5208 = relay.Function([var_5141,var_5162,], output)
mod['func_5208'] = func_5208
mod = relay.transform.InferType()(mod)
mutated_mod['func_5208'] = func_5208
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5208_call = mutated_mod.get_global_var('func_5208')
var_5210 = relay.var("var_5210", dtype = "float32", shape = (220,))#candidate|5210|(220,)|var|float32
var_5211 = relay.var("var_5211", dtype = "float32", shape = (30,))#candidate|5211|(30,)|var|float32
call_5209 = func_5208_call(var_5210,var_5211,)
output = call_5209
func_5212 = relay.Function([var_5210,var_5211,], output)
mutated_mod['func_5212'] = func_5212
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5223 = relay.var("var_5223", dtype = "float32", shape = (5, 9, 4))#candidate|5223|(5, 9, 4)|var|float32
uop_5224 = relay.asinh(var_5223.astype('float32')) # shape=(5, 9, 4)
output = uop_5224
output2 = uop_5224
func_5226 = relay.Function([var_5223,], output)
mod['func_5226'] = func_5226
mod = relay.transform.InferType()(mod)
mutated_mod['func_5226'] = func_5226
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5227 = relay.var("var_5227", dtype = "float32", shape = (5, 9, 4))#candidate|5227|(5, 9, 4)|var|float32
func_5226_call = mutated_mod.get_global_var('func_5226')
call_5228 = func_5226_call(var_5227)
output = call_5228
func_5229 = relay.Function([var_5227], output)
mutated_mod['func_5229'] = func_5229
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2135_call = mod.get_global_var('func_2135')
func_2137_call = mutated_mod.get_global_var('func_2137')
call_5285 = func_2135_call()
call_5286 = func_2135_call()
output = call_5285
output2 = call_5286
func_5299 = relay.Function([], output)
mod['func_5299'] = func_5299
mod = relay.transform.InferType()(mod)
output = func_5299()
func_5300 = relay.Function([], output)
mutated_mod['func_5300'] = func_5300
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5355 = relay.var("var_5355", dtype = "int16", shape = (2, 13, 1))#candidate|5355|(2, 13, 1)|var|int16
var_5356 = relay.var("var_5356", dtype = "int16", shape = (2, 13, 3))#candidate|5356|(2, 13, 3)|var|int16
bop_5357 = relay.less(var_5355.astype('bool'), var_5356.astype('bool')) # shape=(2, 13, 3)
func_5024_call = mod.get_global_var('func_5024')
func_5028_call = mutated_mod.get_global_var('func_5028')
const_5365 = relay.const([-9,8,-1,-10,6,2,7,4,8,-4,5,-9,-5,7,3,-4,10,-4,-2,2,2,-6,9,4,-7,4,-8,-7,4,-10,-1,-9,6,-3,-2,6,8,3,-2,-3,-7,-3,3,-7,5,4,-2,8,-10,6,-8,4,-6,3,5,-9,4,7,-5,6,4,7,-3,-1,9,-3,-2,3,7,8,-2,4,2,-5,8,6,-1,7,9,9,7,-3,2,-9,-1,-10,-7,-1,6,5,-7,-5,3,6,-1,-7,6,9,7,-6,-6,-1,1,-3,8,-10,-6,-7,8,-8,8,-7,-7,-4,-6,-1,5,7,-6,2,8,-10,10,3,1,-8,9,3,4,10,-8,-2,5,-10,2,4,5,-4,3,6,1,3,1,-7,3,-5,-8,-3,-8,3,-4,-10,3,5,-9,8,-7,1,-6,3,4,10,6,-7,4,-4,9,9,-6,-7,-9,7,7,2,-4,3,-4,2,-4,-4,-10,-1,4,2,8,7,4,1,-3,5,9,-7,-10,-3,-9,7,7,2,-7,1,2,3,3,-7,7,4,-1,1,2,-6,-10,4,-10,-7,9,-4,-8,-8,9,7,-9,-5,4,2,9,8,-2,7,9,10,-3,-8,9,2,-5,-5,-2,7,-6,3,-8,7,5,1,-9,9,-5,-5,-7,2,5,-6,-10,4,-9,-3,10,-6,-3,7,10,-4,-5,9,5,3,3,-1,-10,10,2,8,-5,-6,-5,-10,1,10,-4,-9,4,-3,9,9,6,1,-5,1,7,-8,-8,-9,-4,-4,-10,9,5,1,3,5,9,9,-7,4,8,8,10,-7,-6,3,6,-10,-4,-4,10,8,5,5,-10,8,1,-5,1,7,5,-3,-2,1,-5,2,-2,5,8,1,-9,7,5,4,4,-3,-1,-7,3,-8,-2,-2,-1,-4,-8,-10,-4,-8,-6,4,4,-6,-6,-8,2,-7,-8,-9,-7,1,-7,-4,-5,7,5,-1,1,-1,-4,-7,-7,-1,3,-6,-2,-8,6,-8,-4,-4,10,-7,-5,-7,-9,7,9,1,-5,-6,1,-6,6,10,10,-1,9,1,-8,5,5,3,10,-9,10,4,9,-10,3,-7,2,-3,-7,9,5,1,7,-5,10,2,9,-1,5,5,9,-2,1,-6,-2,-4,-8,-6,-10,2,4,8,-3,4,-8,7,-3,2,4,4,2,4,2,-5,-2,-10,4,-2,7,-4,-4,-4,-7,3,-4,-9,7,-6,-3,1,9,-2,1,9,-9,-5,-3,-2,-7,4,-3,8,8,9,5,9,-3,-9,6,-4,-3,7,-2,-4,5,-2,3,-10,-4,-2,-9,6,-3,-8,-5,3,-5,-1,1,-6,5,7,-10,1,-4,-4,6,-8,-7,6,-1,7,9,-3,-7,-9,10,2,-10,3,-8,10,-9,10,5,7,5,3,3,-4,-8,-5,-8,-8,10,2,-10,-1,-1,4,-5,3,6,3,6,2,-2,-4,-3,-7,-4,10,-3,3,-10,-1,10,8,-2,7,-10,-3,5,-3,10,1,10,7,2,9,-1,-10,2,10,9,-3,-8,1,4,2,-5,7,6,-1,8,-4,-8,-1,-2,-6,8,-2,-8,10,9,7,6,-1,1,-1,-10,7,1,8,-1,-6,8,5,-3,9,6,-7,-1,5,8,1,2,6,8,-7,-2,7,-3,3,9,9,7,10,-6,-10,-10,4,8,5,8,4,5,8,-8,-5,5,4,1,2,8,4,10,2,-10,6,1,7,-5,-5,8,-10,3,4,8,1,-7,-6,5,-7,-4,-4,-4,10,-6,2,4,-6,6,1,8,-9,-9,4,-2,-2,3,-3,6,6,-8,-7,-10,9,3,-7,-2,-5,-1,6,9,2,-3,-1,-8,-3,7,9,3,1,-8,6,-7,2,10,-3,-5,1,8,10,-10,4,-5,5,3,-5,-6,-2,3,-5,1,2,-3,-5,-6,8,-10,-3,5,2,-4,8,7,5,3,3,-7,9,9,-2,-1,-10,3,5,-9,-6,3,3,6,-9,7,3,8,-6,10,-9], dtype = "int64")#candidate|5365|(768,)|const|int64
call_5364 = relay.TupleGetItem(func_5024_call(relay.reshape(const_5365.astype('int64'), [2, 384]), relay.reshape(const_5365.astype('float64'), [2, 384]), relay.reshape(const_5365.astype('float32'), [2, 384]), ), 1)
call_5366 = relay.TupleGetItem(func_5028_call(relay.reshape(const_5365.astype('int64'), [2, 384]), relay.reshape(const_5365.astype('float64'), [2, 384]), relay.reshape(const_5365.astype('float32'), [2, 384]), ), 1)
output = relay.Tuple([bop_5357,call_5364,const_5365,])
output2 = relay.Tuple([bop_5357,call_5366,const_5365,])
func_5369 = relay.Function([var_5355,var_5356,], output)
mod['func_5369'] = func_5369
mod = relay.transform.InferType()(mod)
mutated_mod['func_5369'] = func_5369
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5369_call = mutated_mod.get_global_var('func_5369')
var_5371 = relay.var("var_5371", dtype = "int16", shape = (2, 13, 1))#candidate|5371|(2, 13, 1)|var|int16
var_5372 = relay.var("var_5372", dtype = "int16", shape = (2, 13, 3))#candidate|5372|(2, 13, 3)|var|int16
call_5370 = func_5369_call(var_5371,var_5372,)
output = call_5370
func_5373 = relay.Function([var_5371,var_5372,], output)
mutated_mod['func_5373'] = func_5373
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5453 = relay.var("var_5453", dtype = "float64", shape = (3, 8, 1))#candidate|5453|(3, 8, 1)|var|float64
uop_5454 = relay.acos(var_5453.astype('float64')) # shape=(3, 8, 1)
func_4293_call = mod.get_global_var('func_4293')
func_4296_call = mutated_mod.get_global_var('func_4296')
const_5457 = relay.const([-8.536182,-8.920596,-2.812707,8.861446,0.332914,-8.087685,-9.773555,0.683438,0.415380,9.957647,7.305364,7.820501,-8.947777,-8.698064,-3.550793,-4.020299,7.030388,-6.017417,-8.851069,-9.491752,-8.896802,3.075692,-6.902617,-7.504506,0.705048,6.751795,-7.374640,-4.464549,-0.691519,-8.092728,-9.375192,0.123744,-0.355741,3.560323,1.668530,-0.485780,-0.817268,-1.240025,3.095298,-7.134740,5.531595,9.092023,-9.212306,-9.085344,4.504760,-0.262495,-8.010677,5.053564,1.652880,4.025670,-8.001754,-7.228397,5.006905,4.425512,2.183051,5.546166,7.449976,-4.980518,-9.267112,-6.944030,-1.277643,5.009119,-7.960693,5.282653,-0.608397,-0.970015,-6.235489,4.983117,-8.728123,-3.655704,4.264510,-2.358476,3.624866,-1.196683,9.918271,0.330983,3.978942,-9.358935,4.202679,4.452402,-0.016075,5.930568,4.172556,-2.610064,2.267951,7.770797,-6.922488,-2.757400,4.263573,-3.760534,9.204763,-1.742161,-0.117796,1.402386,-6.839050,7.708197,-1.932541,3.946062,-2.739995,0.783075,9.998743,-4.698432,-0.801990,7.224500,9.507976,4.511902,1.858214,-0.549799,-9.821580,0.442594,-5.662723,-7.230427,6.055168,-5.925977,7.942703,-3.713758,2.356940,3.240323,6.714160,2.029253,-5.340488,7.192561,-4.383951,4.193459,4.246229,7.345199,-7.840543,2.393820,7.620379,4.249150,7.848626,8.431097,-5.491655,9.607254,5.785212,-1.986965,8.911914,4.742596,7.821211,-0.850298,-8.308654,9.669287,2.718202,-9.946482,-4.640972,-4.639686,3.246773,-7.195630,-7.887914,2.960884,-0.083117,9.971220,-2.941252,4.919487,4.153084,-9.067114,5.170232,-5.858191,-7.082565,-1.342007,-6.061414,7.813223,-3.785082,6.411328,0.253125,7.157841,9.520885,2.890101,9.208229,8.110283,-4.070501,-0.867247,5.294618,0.291115,-4.398577,7.145020,-4.636692,-4.788698,-0.719037,3.584745,1.941273,-4.131145,2.320727,-5.591508,-7.137600,7.528361,0.066671,0.521370,0.189627,8.922373,-9.707457,-3.243242,8.511047,9.767937,4.403726,4.912531,7.905576,2.098511,3.021998,-8.180522,6.692889,-2.991579,9.096830,-6.107315,-6.147926,-7.071679,-8.975292,2.016816,-5.046495,2.493412,4.753916,-4.526830,-7.839090,8.343444,8.446066,-4.023453,-1.735849,0.998364,-3.404214,-0.188934,0.403088,7.222797,7.182680,7.467057,0.569266,7.719780,6.323474,-8.517507,0.427670,2.219169,9.032456,-0.155738,3.373377,0.996591,4.395135,-3.837743,8.540732,-5.815738,0.803338,-3.034840,-8.128255,3.956784,8.705713,-8.756271,-9.244782,0.215422,9.264270,0.335737,7.552974,-6.178337,-4.723236,-9.182314,-9.702458,-1.850142,-3.621836,-2.573105,4.398287,3.621089,3.082908,8.073680,8.003417,4.465298,-5.326081,4.610616,-8.815054,-2.364704,1.876907,-6.496400,4.076606,5.567043,2.499611,4.819265,0.474884,1.297057,-4.883693,-8.084265,4.734471,-6.346112,-8.782562,1.480134,1.431805,1.571014,-4.811494,-0.145656,0.816239,-8.151335,4.097897,4.995459,-3.816898,-2.940682,0.776984,-9.225318,-1.013501,6.273546,5.585375,1.841416,-9.917864,2.677722,-5.558038,8.892370,1.320976,-6.413126,3.300428,1.907367,-6.184917,-4.914854,8.501445,-0.149820,1.928535,-8.193448,2.494085,7.533186,5.881999,-2.648486,-2.356753,2.686612,1.251674,-9.767704,5.274877,-5.466859,4.145170,6.868572,-2.678601,6.699790,4.199851,-0.182364,2.667183,9.892981,-8.197826,9.651145,8.961328,-9.575185,-8.947012,8.073829,-1.919314,-7.442687,-1.277221,-6.708770,6.563141,-5.522512,-0.966925,9.749301,-8.331230,-6.837050,5.545512,5.950143,-5.283193,4.655299,-9.071821,-2.897174,1.102247,7.369033,-1.196427,-0.961269,2.317689,8.223277,3.911235,5.430771,8.252306,-3.231842,7.519681,1.130883,6.085984,7.589322,0.556617,-4.247724,-0.218938,-7.140738,-8.521436,-8.118101,1.512919,5.809805,4.686929,-1.985780,-7.330548,0.668322,-1.625007,1.305943,3.108394,6.632293,-6.295766,8.570610,5.270314,0.835679,-3.806656,5.777228,2.826573,-8.339003,-9.764238,3.339707,4.467854,-8.924554,0.397691,2.229394,-5.872455,5.302469,6.514922,9.028868,-3.214976,-8.203547,4.105824,-1.945039,-5.112706,0.928020,9.747546,2.916261,7.604277,-3.480816,6.041762,9.300577,8.060948,-7.192395,-3.670624,6.686939,-2.745465,3.013469,-5.228140,3.531852,7.236274,8.462842,3.870736,4.263565,-0.781929,-4.287180,-9.479649,-7.707856,-9.595353,-1.679572,-5.185938,-4.721440,4.928841,-5.498582,8.538044,-5.463933,-0.043851,-1.826220,-2.621959,-5.290117,1.535253,-2.198383,7.416966,8.057882,3.208935,-9.258882,-8.090181,-6.023246,-4.214373,5.279118,-3.040307,-9.545952,6.454807,7.324711,9.389952,-3.094914,-9.852415,-5.919970,9.950724,8.813413,8.912021,3.821586,-5.049678,6.207875,-5.269995,1.479955,-0.750539,-4.275668,-1.336944,4.189017,5.364110,-9.420512,-6.639699,6.494086,6.416185,-2.155536,-2.207345,-4.280620,2.187355,-0.129319,-9.175349,6.208994,8.843990,-0.694483,0.273031,4.256529,3.286201,-7.375132,-3.642937,-1.140069,-9.512583,-8.608102,-1.970565,-2.597690,-3.539286,7.490154,-9.121361,4.055266,-1.619548,9.945696,5.300079,0.593674,-3.667525,-7.582416,7.928772,-4.197071,7.616702,7.894251,7.712655,-4.036519,-2.785140,-1.429741,-3.572148,-8.934107,8.907568,-3.587874,6.442237,-7.525730,2.869009,-6.487423,8.354644,-0.089375,-7.946369,-2.044773,5.083543,1.165700,-3.768568,-1.330090,-5.436317,-5.665495,-2.967938,-3.472505,-4.096233,-6.343919,-7.066288,-4.487693,1.974353,-0.753639,-1.005961,-2.393477,9.525946,8.117126,3.609505,-4.345186,5.936157,-9.754615,9.105445,9.578634,9.485593,9.839249,-3.832737,9.639177,8.521371,9.039526,-0.874298,1.057289,-9.055167,2.047783,3.176251,6.879237,-3.334971,-6.152332,-0.040654,9.661943,4.230477,8.419026,3.137320,-1.348435,9.572364,-6.921446,8.698466,9.067712,1.768075,8.132391,9.883446,3.259379,-1.330309,2.913838,7.245254,-3.171694,-7.254478,-4.883599,-5.139037,-8.524059,9.107339,2.325663,-7.179538,-4.804415,-3.427948,-9.355320,-3.963214,8.803841,-5.642248,7.802224,-7.191506,-8.987664,-9.880278,-1.271771,8.171190,-0.868861,1.909712,4.639043,-2.781546,4.164125,-5.454604,-4.267170,1.109566,7.678691,5.457121,1.696005,6.794007,-5.390464,4.340422,-7.604602,1.987395,7.525458,2.765043,-3.902266,-2.626865,-8.649995,-4.910120,8.330882,-0.604290,5.694796,9.704020,2.139122,-7.920044,-8.863033,-8.150841,7.983945,6.448384,5.585276,1.429025,9.706912,7.183193,-6.929624,-9.485140,-3.385030,5.558769,-2.941289,-0.254839,8.348369,0.775578,-6.275771,-3.213462,1.259671,-4.196222,-5.609196,4.793181,8.656174,4.033025,-1.644506,7.930105,5.156000,-9.618492,-7.595178,5.719985,5.088016,1.286350,0.853505,4.635779,-4.052414,7.420432,-1.131392,-0.834649,5.305300,8.533305,5.430062,-3.749049,5.057631,6.628693,-8.534075,0.806405,3.073701,6.319232,3.917124,-9.979030,7.173252,-8.699476,-8.867253,8.809706,4.778310,9.903364,-0.152051,2.244650,-0.878956,9.542799,9.022050,-6.702905,0.438972,3.343950,2.127030,-5.023283,2.534566,-2.540040,3.544736,-7.954832,-4.732100,-6.212987,9.723513,4.929334,-1.930658,-1.602285,2.167402,-3.396333,1.469144,1.607483,1.619938,3.238825,5.848725,-4.666725,3.079746,8.188491,-6.684101,-1.174711,4.409973,1.593578,-6.738053,3.525842,5.178150,6.299195,-1.402958,4.307446,-5.652700,-1.218004,-2.663483,9.526448,4.782647,3.588825,-5.355720,-3.843297,6.105279,7.319538,0.993403,-2.947004,-6.631281,3.690899,-8.513076,7.896820,4.937342,-6.051808,-3.821219,-5.294321,-3.515092,-0.056128,4.275683,-7.475518,-8.502978,5.841542,8.654026,-4.678771,7.385276,-2.029943,-4.314798,-9.230234,3.047168,1.525562,-4.273039,-3.663434,-4.542203,0.055196,1.493263,-8.563571,0.069246,9.009997,6.491043,4.286546,-2.052561,1.930755,0.068591,-0.135053,-0.510547,-0.235495,7.638296,-5.307195,0.739064,-0.554058,8.063499,1.650193,-9.732922,2.314765,-8.602803,-2.067079,-0.559433,-4.138320,3.004682,5.142408,-8.373126,5.254628,-4.160410,0.797547,4.062451,-6.847429,3.332944,-1.236542,-1.485958,7.410439,-2.502475,6.152378,5.395320,-3.997550,8.787197,3.118449,0.082649,3.710079,-2.657192,-3.237620,-1.062276,-0.913940,-5.043086,1.176947,0.792022,6.098874,-1.857029,-7.380894,-3.834014,1.038143,-8.016558,-5.965768,3.558190,5.377143,-1.575304,2.795090,-1.031656,-9.573681,-8.410946,-0.470488,4.498814,4.686685,-9.525415,3.190593,-9.603465,-1.649810,7.121338,3.750120,5.693984,-7.742198,-0.986534,-2.907428,-9.677403,3.871741,2.586190,-8.470423,0.249778,-8.312030,4.696036,2.605734,-1.887175,8.607512,-5.425329,-6.565846,4.223480,5.720477,3.761011,3.224209,6.672916,-1.227744,-3.227946,6.747259,4.064915,5.564537,5.339875,-6.108202,0.531386,-8.658181,-8.598927,2.543252,5.386231,7.965683,-2.068684,-6.604309,4.153926,-8.410605,5.675947,-7.767877,-0.600531,-0.082569,-2.082681,9.581668,-8.524901,0.970446,4.155777,-9.257057,1.074477,8.997189,-8.813843,6.453212,-7.998982,3.954895,1.670093,-7.757719,-2.105783,-4.046582,-8.139400,-3.622500,8.416064,0.202536,-8.250258,7.540483,-4.359744,3.381332,4.650574,-9.666204,8.816645,3.815421,4.441541,-4.362536,-9.282109,-7.236975,-8.382433,9.092775,-2.873672,-5.363277,4.031747,0.148432,-3.361088,-0.697469,4.048802,-7.422199,8.421192,-7.118239,5.986635,-9.743935,6.542575,-9.764021,9.136387,1.047176,1.964591,-2.049052,1.971731,-7.322147,-4.314423,1.597545,2.389825,-3.877505,-3.700117,-0.345328,0.271077,3.366904,4.835022,1.542282,-3.570544,8.051135,-9.656100,-5.482698,2.536294,-6.832902,2.455476,6.728315,1.723393,1.899518,-7.153595,8.808447,-2.388204,-6.744066,9.783074,-5.679838,-8.594382,5.364357,4.982007,1.507146,-4.762689,2.426630,8.519907,-7.680398,-9.307275,-6.189858,5.160805,4.805869,6.597323,-1.963079,4.395519,-5.420349,-6.906896,-0.804271,1.647113,-6.172508,5.570049,0.719997,-7.461143,8.598018,-2.009281,-0.689304,-7.584379,6.608606,8.433527,-4.671639,3.580282,5.100846,-1.519002,8.388041,6.554078,4.348186,6.562515,6.129996,-2.865046,0.628486,1.988450,8.499455,8.697888,0.813810,-2.089406,1.730804,-0.703817,0.765138,-6.665357,-6.288319,-4.801123,0.262085,-7.049832,4.771227,9.364740,1.486988,-3.902359,-6.600544,-2.527141,6.427487,4.107399,-0.436369,7.100392,-1.469251,-7.179907,5.075480,-4.199347,1.861850,7.075026,-5.042862,4.884106,6.902275,-1.815120,7.982125,7.377965,0.224330,5.540800,-1.624679,6.937841,-1.293953,8.462297,-8.457274,-7.350003,3.065047,-5.191329,5.335706,1.057939,-5.526768,-1.770721,-8.700453,-2.551366,2.202378,4.734274,-6.565265,-9.744938,8.982905,-5.218591,-8.005450,6.716735,-5.389126,9.552981,7.834940,0.974011,-2.490053,9.261144,6.259784,-2.177317,2.580404,6.944666,-2.161311,-2.517899,7.680282,8.940869,-4.482002,7.209007,-0.589818,-1.671769,-0.899878,3.383696,4.044812,9.541183,-5.377818,1.458916,-5.190097,9.889744,4.451719,-8.208134,-4.263343,-9.454542,-1.416012,-9.860731,-0.813254,-3.467929,-1.505857,6.232449,-4.750022,-3.321762,-5.556248,-6.559475,-2.046031,9.372153,0.192575,1.195734,1.603604,-3.580376,7.632982,-3.754123,6.220083,-1.064869,5.757352,-1.290574,7.513035,-7.855142,-5.215199,-8.918489,8.466819,-1.028747,5.453922,-4.256038,0.515537,-4.086912,8.089400,-9.065214,4.476815,-8.703251,-7.160976,-9.490358,-1.045630,6.926638,5.296218,3.984520,4.681608,0.141187,7.620355,2.228127,6.879466,-9.232719,6.736284,1.777271,3.725039,5.887127,-9.085113,0.800293,-2.752910,-9.017465,-8.835981,-3.478861,6.818654,-1.906761,-3.277719,-3.916237,7.852905,-9.220802,9.401034,5.420518,-4.093806,1.706982,-4.653678,7.466889,6.780746,-2.883835,1.170504,-4.374094,9.576466,-1.377273,-4.237619,2.723530,6.771433,-5.484937,1.999341,0.581103,-7.563718,2.161501,-6.147939,-5.740896,-8.625105,7.989286,6.386419,-5.641561,4.621451,-3.910857,5.212127,6.804974,-8.510057,-5.494925,-7.931016,2.668616,-4.792075,2.850240,6.902799,-1.861336,1.044375,9.479151,7.745272,0.841739,-0.461243,3.416314,2.163609,-0.399580,-9.288731,9.961124,1.504645,-8.245248,7.261423,-0.213788,4.144884,-2.919468,-2.505486,8.097971,-8.215285,-5.277607,6.954387,-1.483272,0.190583,-2.306548,7.608990,-4.136732,-1.894171,-8.303803,-2.114382,-5.475237,-0.448360,-3.853139,-4.117743,-5.151710,-1.790246,-6.951988,-6.295594,-9.457916,6.753356,-2.358638,6.550951,1.217170,1.935722,0.416239,-1.856022,6.589324,5.519778,-8.321892,2.773459,-5.638906,0.280511,5.269888,0.086665,3.633371,-3.122241,-0.841054,-4.300377,2.033886,9.552379,-1.279015,-8.527750,-7.716242,1.355134,-4.781902,-0.152391,3.950059,0.476881,0.550514,-7.308088,6.562597,-0.136915,-2.034772,-1.734924,-0.568076,3.903768,1.115978,-4.402947,5.891916,-7.855268,1.525186,-7.311895,8.143897,0.553632,-7.462655,4.092200,2.085800,8.126063,1.640716,7.099544,-3.754734,-0.723679,0.194877,2.879094,-1.692270,-0.827779,-4.539738,-6.715228,-8.659733,2.842879,-3.025819,-7.213486,-6.579347,1.056962,4.140079,-7.514118,5.806044,-3.435531,2.067499,0.606113,8.214715,0.867646,-7.830483,8.967379,-1.930163,-2.410492,-5.977325,-2.887684,-5.124358,-3.432246,-3.272030,0.544994,2.689056,-9.388182,-1.438556,-0.338111,5.077294,2.736657,-5.197157,-1.057460,7.689525,5.722193,-6.349827,2.914057,2.289182,-5.296743,-6.951474,-3.248208,0.365576,-7.772432,-6.626254,-9.092140,4.176995,-2.958076,-1.493298,-1.102292,2.037788,1.403061,3.682497,-5.775109,-3.249079,-6.831219,4.896526,-6.445724,-8.960899,-4.467114,-2.245390,-1.771053,-6.247855,7.259619,-1.873570,3.695442,6.201912,7.542429,6.185366,3.908893,-3.487526,-5.682001,-7.714096,2.934907,3.927419,-8.631236,-8.329389,6.509234,1.223452,0.696788,-6.422091,8.809679,-3.642858,-2.272180,-0.004685,0.976426,-1.839169,-2.548755,7.226238,1.208681,3.201770,-4.704920,-9.432544,4.422733,-2.162430,0.101648,5.935410,-9.499107,5.677193,5.690956,-0.077350,5.036650,-9.237997,-4.654266,6.019761,-6.591474,2.093175,-9.369731,7.552891,3.748528,-8.014203,-5.821711,3.137114,9.972736,-9.913565,-9.692211,-3.758851,0.331936,-1.476755,-6.632589,9.980045,-1.217199,8.562012,-8.671435,-7.138338,-5.500724,0.698630,-7.685013,2.421615,6.262363,-8.680426,-8.349100,4.326214,4.636988,4.609407,8.051437,4.254903,8.995161,-9.755778,7.178087,2.558324,-7.326560,-1.632728,1.990157,-3.410469,1.692272,0.657528,9.770464,3.653300,-9.007617,-2.904284,3.744485,1.633873,-1.349939,9.812996,0.184950,2.417278,3.665539,-6.832195,1.573794,0.382761,-6.035140,6.901470,-9.854126,-7.544570,8.730951,-3.344162,-9.550145,-9.248064,-5.965191,-2.321919,-0.658782,3.709793,-0.627324,4.715856,-4.985216,-9.768724,8.174292,1.005956,0.838843,-8.579850,-7.904770,2.331366,-5.682118,-1.995986,1.011940,-9.093920,-1.405531,3.988326,-0.716950,1.898168,-8.650634,0.521502,8.958080,4.088951,-0.031879,7.256177,-9.012493,-0.433677,-9.964209,6.657288,5.418483,-4.492001,1.405831,-0.528703,-0.115105,1.480422,-5.917657,-5.066423,2.096995,-2.150446,0.428168,-9.239252,-0.723400,-1.498781,7.676872,5.407440,-0.848726,4.726106,6.572487,3.578839,2.100714,-5.409223,7.196539,7.766253,-0.790689,-3.847384,6.448529,-1.799083,6.538050,5.203608,-4.366424,-3.718349,-4.219234,9.820925,3.405965,1.365607,9.703321,-5.917766,-9.798492,6.266750,6.038084,-8.763995,-4.798367,5.372268,9.493131,8.688838,7.355255,-8.293081,8.233561,3.635531,-4.219378,1.945838,6.698545,-0.514036,7.270452,-9.176390,-4.805239,8.124311,9.151601,-7.097789,3.175731,6.367463,8.421526,-3.751787,3.437602,-0.184046,-7.524276,1.733075,7.656851,8.790631,5.611053,-7.602644,-3.119009,-7.375725,-5.804139,5.291339,-4.541542,-7.645192,-1.175020,-8.205331,-0.101366,-2.880043,-6.192819,-1.984835,2.959068,-1.959567,-8.134263,-8.061844,7.055775,-6.942789,-9.238129,7.566998,-7.124341,-3.808759,1.821711,-6.708961,4.271015,-6.129527,-4.265763,-4.581465,9.706104,-7.603526,2.857792,-8.565253,-9.802754,-1.733291,-8.104229,2.199520,1.050540,-6.545353,0.127711,-0.564157,3.064518,-1.370876,-6.473562,7.460411,-9.998817,8.654708,5.115194,-8.368042,-5.276689,-7.273054,-3.448975,-7.147624,2.898410,-3.220688,3.407512,-2.882113,-7.025835,2.258075,9.644545,-8.561193,-9.431617,1.950435,9.781239,6.736545,-8.008920,6.176829,-2.443891,-0.584987,-0.814330,-2.442111,4.209641,-2.934234,7.641748,-8.075008,-5.282398,-0.684863,-6.669624,-7.360889,8.777816,-6.557172,2.598654,5.218028,2.465901,-4.641549,-8.637014,8.815653,6.229976,3.973126,4.244933,7.255162,-9.763486,1.217630,7.569802,0.618195,2.887982,-8.559952,8.189546,-5.186829,6.274006,-0.341357,3.090458,1.901151,7.307593,-4.452015,7.703271,-0.541142,3.736745,-4.227792,-6.059285,-6.578295,3.072807,-1.457058,-4.390095,0.358552,3.177692,8.509174,-8.203711,9.914810,-1.924584,-3.200027,1.272119,2.110858,-4.862832,8.774508,7.544938,8.957153,-5.447335,0.882167,-0.501962,-4.657539,-0.934674,5.481900,5.135720,-5.673930,-4.976075,4.685729,-1.026426,-3.992896,-8.944071,3.378477,9.369033,5.814944,-0.893111,-2.862238,3.865861,9.538573,7.551847,-0.285028,1.115762,-9.030912,-0.953196,-1.115149,-3.298264,4.323801,-5.237814,7.465339,5.261906,-2.340839,0.032678,2.103624,6.405098,5.645472,8.227367,1.069801,-2.477572,-0.350785,2.748807,0.623980,6.784410,7.630212,4.819680,-8.018909,7.862984,8.829831,6.573774,9.404819,4.755017,8.261914,8.000899,5.213427,-8.032386,-6.988593,-2.494392,-7.034162,-7.611057,-8.532854,-1.196436,9.520006,2.282802,-6.819275,9.483758,9.982168,-3.906799,6.722733,-0.542457,-8.298751,-4.946060,-4.074326,-9.856197,-5.705263,-7.122715,8.231355,2.684351,-6.235225,5.733009,-1.479870,0.328209,7.263093,-9.810339,5.976109,6.063609,-5.893850,-2.672660,4.629013,5.488248,5.705217,-5.341056,-1.666129,2.968359,-8.896199,9.032067,7.598769,-2.712433,2.947240,4.119301,3.239730,-7.061481,-9.796391,9.421354,7.066789,-4.909900,-9.273576,1.919172,-9.989850,-1.124903,3.741910,8.009246,-3.507076], dtype = "float32")#candidate|5457|(1792,)|const|float32
call_5456 = func_4293_call(relay.reshape(const_5457.astype('float32'), [8, 14, 16]))
call_5458 = func_4293_call(relay.reshape(const_5457.astype('float32'), [8, 14, 16]))
output = relay.Tuple([uop_5454,call_5456,const_5457,])
output2 = relay.Tuple([uop_5454,call_5458,const_5457,])
func_5463 = relay.Function([var_5453,], output)
mod['func_5463'] = func_5463
mod = relay.transform.InferType()(mod)
var_5464 = relay.var("var_5464", dtype = "float64", shape = (3, 8, 1))#candidate|5464|(3, 8, 1)|var|float64
output = func_5463(var_5464)
func_5465 = relay.Function([var_5464], output)
mutated_mod['func_5465'] = func_5465
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3592_call = mod.get_global_var('func_3592')
func_3593_call = mutated_mod.get_global_var('func_3593')
call_5473 = relay.TupleGetItem(func_3592_call(), 0)
call_5474 = relay.TupleGetItem(func_3593_call(), 0)
output = relay.Tuple([call_5473,])
output2 = relay.Tuple([call_5474,])
func_5492 = relay.Function([], output)
mod['func_5492'] = func_5492
mod = relay.transform.InferType()(mod)
output = func_5492()
func_5493 = relay.Function([], output)
mutated_mod['func_5493'] = func_5493
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3725_call = mod.get_global_var('func_3725')
func_3726_call = mutated_mod.get_global_var('func_3726')
call_5503 = relay.TupleGetItem(func_3725_call(), 0)
call_5504 = relay.TupleGetItem(func_3726_call(), 0)
func_1525_call = mod.get_global_var('func_1525')
func_1529_call = mutated_mod.get_global_var('func_1529')
var_5541 = relay.var("var_5541", dtype = "int32", shape = (1936,))#candidate|5541|(1936,)|var|int32
call_5540 = relay.TupleGetItem(func_1525_call(relay.reshape(var_5541.astype('int32'), [11, 16, 11]), relay.reshape(var_5541.astype('int32'), [11, 16, 11]), ), 6)
call_5542 = relay.TupleGetItem(func_1529_call(relay.reshape(var_5541.astype('int32'), [11, 16, 11]), relay.reshape(var_5541.astype('int32'), [11, 16, 11]), ), 6)
func_578_call = mod.get_global_var('func_578')
func_582_call = mutated_mod.get_global_var('func_582')
var_5577 = relay.var("var_5577", dtype = "float32", shape = ())#candidate|5577|()|var|float32
var_5578 = relay.var("var_5578", dtype = "float32", shape = (110, 2))#candidate|5578|(110, 2)|var|float32
call_5576 = func_578_call(relay.reshape(var_5577.astype('float32'), []), relay.reshape(var_5578.astype('float32'), [5, 4, 11]), )
call_5579 = func_578_call(relay.reshape(var_5577.astype('float32'), []), relay.reshape(var_5578.astype('float32'), [5, 4, 11]), )
uop_5587 = relay.asin(var_5578.astype('float64')) # shape=(110, 2)
uop_5590 = relay.atanh(uop_5587.astype('float64')) # shape=(110, 2)
uop_5598 = relay.atan(uop_5587.astype('float64')) # shape=(110, 2)
output = relay.Tuple([call_5503,call_5540,var_5541,call_5576,var_5577,uop_5590,uop_5598,])
output2 = relay.Tuple([call_5504,call_5542,var_5541,call_5579,var_5577,uop_5590,uop_5598,])
func_5608 = relay.Function([var_5541,var_5577,var_5578,], output)
mod['func_5608'] = func_5608
mod = relay.transform.InferType()(mod)
mutated_mod['func_5608'] = func_5608
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5608_call = mutated_mod.get_global_var('func_5608')
var_5610 = relay.var("var_5610", dtype = "int32", shape = (1936,))#candidate|5610|(1936,)|var|int32
var_5611 = relay.var("var_5611", dtype = "float32", shape = ())#candidate|5611|()|var|float32
var_5612 = relay.var("var_5612", dtype = "float32", shape = (110, 2))#candidate|5612|(110, 2)|var|float32
call_5609 = func_5608_call(var_5610,var_5611,var_5612,)
output = call_5609
func_5613 = relay.Function([var_5610,var_5611,var_5612,], output)
mutated_mod['func_5613'] = func_5613
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4941_call = mod.get_global_var('func_4941')
func_4942_call = mutated_mod.get_global_var('func_4942')
call_5652 = func_4941_call()
call_5653 = func_4941_call()
func_4896_call = mod.get_global_var('func_4896')
func_4899_call = mutated_mod.get_global_var('func_4899')
const_5655 = relay.const([[7.979008,5.835162,-3.916732,6.310879,-2.198083,-4.057682,6.534408,-9.097858,-5.047540,3.910902,0.716290,7.400636,-4.154552,-6.168305,2.098825,-3.363442,-1.199227,2.855129],[1.108045,-0.534422,-4.811101,0.379785,-7.173270,6.446963,8.070379,0.054613,3.690324,-1.409410,9.418259,-9.365788,-2.062352,-6.516485,5.695997,2.146459,-2.455624,-8.672176],[-5.960635,-2.739387,7.433131,1.432111,-6.966904,-9.252172,3.897073,8.672664,7.641495,-2.617834,2.707977,-0.205422,-2.306006,5.156311,8.843529,3.405423,-7.789799,-3.699513],[-1.370724,-8.667869,-6.141517,-6.610003,9.552889,8.216507,-8.797086,-7.988579,-7.019649,-6.934408,-3.192084,3.660557,8.075415,1.243042,-8.389408,2.855982,-3.636957,-4.656397],[-0.534345,-2.867912,-9.962362,-2.174824,1.700254,-7.183655,-6.279509,-7.876014,0.166291,-3.381947,4.024878,-7.766743,-1.553348,-5.175665,7.994681,8.958507,2.420198,1.300268],[9.749398,-9.972635,7.111047,-5.032696,5.877777,-4.805257,-5.317776,0.382514,6.708500,-8.310931,-3.175143,-3.122903,4.482604,0.012249,8.745545,-5.603207,1.214271,-1.299532],[-2.223661,-3.980235,5.791687,-1.213566,5.285781,5.283164,3.843487,-2.286975,-6.785580,4.860952,0.128718,9.616492,1.717306,9.407392,-5.945944,5.553416,5.122226,5.175770],[3.052786,-7.502543,2.681985,1.537306,3.829477,-3.128437,-6.844881,3.073481,8.704126,-9.108241,1.193342,6.565833,6.935240,-7.021611,-0.070599,-5.606855,6.045820,-6.184363]], dtype = "float32")#candidate|5655|(8, 18)|const|float32
call_5654 = func_4896_call(relay.reshape(const_5655.astype('float32'), [3, 16, 3]))
call_5656 = func_4896_call(relay.reshape(const_5655.astype('float32'), [3, 16, 3]))
uop_5661 = relay.exp(call_5652.astype('float32')) # shape=(9, 2, 15)
uop_5663 = relay.exp(call_5653.astype('float32')) # shape=(9, 2, 15)
func_625_call = mod.get_global_var('func_625')
func_628_call = mutated_mod.get_global_var('func_628')
var_5671 = relay.var("var_5671", dtype = "float32", shape = (1134,))#candidate|5671|(1134,)|var|float32
call_5670 = func_625_call(relay.reshape(var_5671.astype('float32'), [9, 9, 14]))
call_5672 = func_625_call(relay.reshape(var_5671.astype('float32'), [9, 9, 14]))
func_264_call = mod.get_global_var('func_264')
func_267_call = mutated_mod.get_global_var('func_267')
var_5680 = relay.var("var_5680", dtype = "float32", shape = (30,))#candidate|5680|(30,)|var|float32
var_5681 = relay.var("var_5681", dtype = "float32", shape = (330,))#candidate|5681|(330,)|var|float32
call_5679 = relay.TupleGetItem(func_264_call(relay.reshape(var_5680.astype('float32'), [1, 6, 5]), relay.reshape(var_5681.astype('float32'), [11, 6, 5]), ), 0)
call_5682 = relay.TupleGetItem(func_267_call(relay.reshape(var_5680.astype('float32'), [1, 6, 5]), relay.reshape(var_5681.astype('float32'), [11, 6, 5]), ), 0)
bop_5699 = relay.add(uop_5661.astype('uint32'), relay.reshape(call_5652.astype('uint32'), relay.shape_of(uop_5661))) # shape=(9, 2, 15)
bop_5702 = relay.add(uop_5663.astype('uint32'), relay.reshape(call_5653.astype('uint32'), relay.shape_of(uop_5663))) # shape=(9, 2, 15)
bop_5714 = relay.power(uop_5661.astype('float64'), relay.reshape(bop_5699.astype('float64'), relay.shape_of(uop_5661))) # shape=(9, 2, 15)
bop_5717 = relay.power(uop_5663.astype('float64'), relay.reshape(bop_5702.astype('float64'), relay.shape_of(uop_5663))) # shape=(9, 2, 15)
func_353_call = mod.get_global_var('func_353')
func_354_call = mutated_mod.get_global_var('func_354')
call_5721 = relay.TupleGetItem(func_353_call(), 0)
call_5722 = relay.TupleGetItem(func_354_call(), 0)
func_3819_call = mod.get_global_var('func_3819')
func_3820_call = mutated_mod.get_global_var('func_3820')
call_5734 = func_3819_call()
call_5735 = func_3819_call()
output = relay.Tuple([call_5654,const_5655,call_5670,var_5671,call_5679,var_5680,var_5681,bop_5714,call_5721,call_5734,])
output2 = relay.Tuple([call_5656,const_5655,call_5672,var_5671,call_5682,var_5680,var_5681,bop_5717,call_5722,call_5735,])
func_5737 = relay.Function([var_5671,var_5680,var_5681,], output)
mod['func_5737'] = func_5737
mod = relay.transform.InferType()(mod)
var_5738 = relay.var("var_5738", dtype = "float32", shape = (1134,))#candidate|5738|(1134,)|var|float32
var_5739 = relay.var("var_5739", dtype = "float32", shape = (30,))#candidate|5739|(30,)|var|float32
var_5740 = relay.var("var_5740", dtype = "float32", shape = (330,))#candidate|5740|(330,)|var|float32
output = func_5737(var_5738,var_5739,var_5740,)
func_5741 = relay.Function([var_5738,var_5739,var_5740,], output)
mutated_mod['func_5741'] = func_5741
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4354_call = mod.get_global_var('func_4354')
func_4355_call = mutated_mod.get_global_var('func_4355')
call_5743 = func_4354_call()
call_5744 = func_4354_call()
output = call_5743
output2 = call_5744
func_5745 = relay.Function([], output)
mod['func_5745'] = func_5745
mod = relay.transform.InferType()(mod)
mutated_mod['func_5745'] = func_5745
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5745_call = mutated_mod.get_global_var('func_5745')
call_5746 = func_5745_call()
output = call_5746
func_5747 = relay.Function([], output)
mutated_mod['func_5747'] = func_5747
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3121_call = mod.get_global_var('func_3121')
func_3123_call = mutated_mod.get_global_var('func_3123')
call_5782 = relay.TupleGetItem(func_3121_call(), 0)
call_5783 = relay.TupleGetItem(func_3123_call(), 0)
var_5785 = relay.var("var_5785", dtype = "float64", shape = (9, 2, 15))#candidate|5785|(9, 2, 15)|var|float64
bop_5786 = relay.equal(call_5782.astype('bool'), relay.reshape(var_5785.astype('bool'), relay.shape_of(call_5782))) # shape=(9, 2, 15)
bop_5789 = relay.equal(call_5783.astype('bool'), relay.reshape(var_5785.astype('bool'), relay.shape_of(call_5783))) # shape=(9, 2, 15)
func_3779_call = mod.get_global_var('func_3779')
func_3780_call = mutated_mod.get_global_var('func_3780')
call_5790 = func_3779_call()
call_5791 = func_3779_call()
output = relay.Tuple([bop_5786,call_5790,])
output2 = relay.Tuple([bop_5789,call_5791,])
func_5804 = relay.Function([var_5785,], output)
mod['func_5804'] = func_5804
mod = relay.transform.InferType()(mod)
mutated_mod['func_5804'] = func_5804
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5805 = relay.var("var_5805", dtype = "float64", shape = (9, 2, 15))#candidate|5805|(9, 2, 15)|var|float64
func_5804_call = mutated_mod.get_global_var('func_5804')
call_5806 = func_5804_call(var_5805)
output = call_5806
func_5807 = relay.Function([var_5805], output)
mutated_mod['func_5807'] = func_5807
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4456_call = mod.get_global_var('func_4456')
func_4458_call = mutated_mod.get_global_var('func_4458')
call_5844 = relay.TupleGetItem(func_4456_call(), 0)
call_5845 = relay.TupleGetItem(func_4458_call(), 0)
output = call_5844
output2 = call_5845
func_5860 = relay.Function([], output)
mod['func_5860'] = func_5860
mod = relay.transform.InferType()(mod)
mutated_mod['func_5860'] = func_5860
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5860_call = mutated_mod.get_global_var('func_5860')
call_5861 = func_5860_call()
output = call_5861
func_5862 = relay.Function([], output)
mutated_mod['func_5862'] = func_5862
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1480_call = mod.get_global_var('func_1480')
func_1481_call = mutated_mod.get_global_var('func_1481')
call_5897 = relay.TupleGetItem(func_1480_call(), 1)
call_5898 = relay.TupleGetItem(func_1481_call(), 1)
output = relay.Tuple([call_5897,])
output2 = relay.Tuple([call_5898,])
func_5901 = relay.Function([], output)
mod['func_5901'] = func_5901
mod = relay.transform.InferType()(mod)
mutated_mod['func_5901'] = func_5901
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5901_call = mutated_mod.get_global_var('func_5901')
call_5902 = func_5901_call()
output = call_5902
func_5903 = relay.Function([], output)
mutated_mod['func_5903'] = func_5903
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2158_call = mod.get_global_var('func_2158')
func_2159_call = mutated_mod.get_global_var('func_2159')
call_5912 = func_2158_call()
call_5913 = func_2158_call()
func_2076_call = mod.get_global_var('func_2076')
func_2079_call = mutated_mod.get_global_var('func_2079')
call_5937 = relay.TupleGetItem(func_2076_call(relay.reshape(call_5912.astype('bool'), [9, 9, 14])), 0)
call_5938 = relay.TupleGetItem(func_2079_call(relay.reshape(call_5912.astype('bool'), [9, 9, 14])), 0)
func_2135_call = mod.get_global_var('func_2135')
func_2137_call = mutated_mod.get_global_var('func_2137')
call_5940 = func_2135_call()
call_5941 = func_2135_call()
uop_5944 = relay.rsqrt(call_5937.astype('float64')) # shape=(9, 9, 14)
uop_5946 = relay.rsqrt(call_5938.astype('float64')) # shape=(9, 9, 14)
output = relay.Tuple([call_5912,call_5940,uop_5944,])
output2 = relay.Tuple([call_5913,call_5941,uop_5946,])
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

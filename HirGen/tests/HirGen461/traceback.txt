==========mod==========
#[version = "0.0.5"]
def @func_3961() -> (Tensor[(4, 3, 5), float32],) {
  %0 = @func_3207() /* ty=(Tensor[(4, 3, 5), float32],) */;
  %1 = %0.0;
  (%1,)
}

def @func_7987(%var_7960: Tensor[(900), int32]) -> (Tensor[(4, 3, 5), float64], Tensor[(900), int32], Tensor[(10, 6, 15), float64]) {
  %2 = cast(%var_7960, dtype="int32") /* ty=Tensor[(900), int32] */;
  %3 = cast(%var_7960, dtype="int32") /* ty=Tensor[(900), int32] */;
  %4 = reshape(%2, newshape=[10, 6, 15]) /* ty=Tensor[(10, 6, 15), int32] */;
  %5 = reshape(%3, newshape=[10, 6, 15]) /* ty=Tensor[(10, 6, 15), int32] */;
  %6 = @func_1504(%4, %5) /* ty=(Tensor[(10, 6, 15), int32],) */;
  %7 = %6.0;
  %8 = cast(%7, dtype="float64") /* ty=Tensor[(10, 6, 15), float64] */;
  %9 = @func_6886() /* ty=Tensor[(4, 3, 5), float64] */;
  %10 = atan(%8) /* ty=Tensor[(10, 6, 15), float64] */;
  (%9, %var_7960, %10)
}

def @func_3755(%var_3749: Tensor[(640), uint8]) -> (Tensor[(4, 3, 5), float64], Tensor[(4, 3, 5), float32], Tensor[(640), uint8]) {
  %11 = @func_3316() /* ty=(Tensor[(4, 3, 5), float64],) */;
  %12 = cast(%var_3749, dtype="uint8") /* ty=Tensor[(640), uint8] */;
  %13 = reshape(%12, newshape=[40, 16]) /* ty=Tensor[(40, 16), uint8] */;
  %14 = @func_3151(%13) /* ty=(Tensor[(15, 9, 1), float64], Tensor[(4, 3, 5), float64], Tensor[(8, 8, 10), uint8], Tensor[(40, 16), uint8], Tensor[(4, 3, 5), float32]) */;
  %15 = %11.0;
  %16 = %14.4;
  (%15, %16, %var_3749)
}

def @func_7603() -> (Tensor[(15, 9, 1), float32], Tensor[(15, 9, 1), float32], Tensor[(45), int8], Tensor[(4, 3, 5), float64], Tensor[(15, 9, 1), float32]) {
  %17 = @func_6951() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float32], Tensor[(15, 9, 1), float32]) */;
  %18 = @func_4547() /* ty=(Tensor[(15, 9, 1), float32],) */;
  %19 = @func_6982() /* ty=(Tensor[(4, 3, 5), float32], Tensor[(60), float64], Tensor[(45), int8]) */;
  %20 = @func_6543() /* ty=(Tensor[(4, 3, 5), float32], Tensor[(15, 9, 1), float32]) */;
  %21 = %17.0;
  %22 = %18.0;
  %23 = %19.2;
  %24 = @func_2536() /* ty=Tensor[(4, 3, 5), float64] */;
  %25 = %20.1;
  (%21, %22, %23, %24, %25)
}

def @func_5106(%var_5088: Tensor[(10, 4, 9), float64]) -> (Tensor[(10, 4, 9), bool],) {
  %26 = cast(%var_5088, dtype="float64") /* ty=Tensor[(10, 4, 9), float64] */;
  %27 = log(%26) /* ty=Tensor[(10, 4, 9), float64] */;
  %28 = cast(%27, dtype="bool") /* ty=Tensor[(10, 4, 9), bool] */;
  %29 = shape_of(%var_5088, dtype="int32") /* ty=Tensor[(3), int32] */;
  %30 = cast(%var_5088, dtype="bool") /* ty=Tensor[(10, 4, 9), bool] */;
  %31 = dyn.reshape(%28, %29, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %32 = less(%30, %31) /* ty=Tensor[(10, 4, 9), bool] */;
  (%32,)
}

def @func_3586(%var_3572: Tensor[(6, 14, 8), float32]) -> (Tensor[(6, 14, 8), float32],) {
  %33 = cast(%var_3572, dtype="float32") /* ty=Tensor[(6, 14, 8), float32] */;
  %34 = log(%33) /* ty=Tensor[(6, 14, 8), float32] */;
  (%34,)
}

def @func_1922() -> (Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64], Tensor[(4, 1), uint64]) {
  %35 = cast(meta[relay.Constant][0] /* ty=Tensor[(15, 9, 1), float32] */, dtype="float32") /* ty=Tensor[(15, 9, 1), float32] */;
  %36 = cast(meta[relay.Constant][1] /* ty=Tensor[(4, 1), uint64] */, dtype="uint64") /* ty=Tensor[(4, 1), uint64] */;
  %37 = reshape(%36, newshape=[4]) /* ty=Tensor[(4), uint64] */;
  %38 = @func_885(%37) /* ty=(Tensor[(2, 4, 14), float32], Tensor[(4, 3, 5), float64], Tensor[(4), uint64], Tensor[(32), uint64], Tensor[(4, 3, 5), float64]) */;
  %39 = sqrt(%35) /* ty=Tensor[(15, 9, 1), float32] */;
  %40 = %38.1;
  (%39, %40, meta[relay.Constant][1] /* ty=Tensor[(4, 1), uint64] */)
}

def @func_2130() -> (Tensor[(15, 9, 1), float32],) {
  %41 = @func_1922() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64], Tensor[(4, 1), uint64]) */;
  %42 = %41.0;
  (%42,)
}

def @func_6526() -> Tensor[(15, 9, 1), float32] {
  %43 = @func_4547() /* ty=(Tensor[(15, 9, 1), float32],) */;
  %43.0
}

def @func_3384() -> (Tensor[(15, 9, 1), float32], Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64]) {
  %44 = @func_2551() /* ty=(Tensor[(15, 9, 1), float32],) */;
  %45 = @func_3316() /* ty=(Tensor[(4, 3, 5), float64],) */;
  %46 = @func_2200() /* ty=Tensor[(15, 9, 1), float32] */;
  %47 = %44.0;
  %48 = %45.0;
  (%46, %47, %48)
}

def @func_3796() -> (Tensor[(15, 9, 1), float32], Tensor[(8, 8, 10), float32]) {
  %49 = @func_3384() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64]) */;
  %50 = @func_2870() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(640), uint8], Tensor[(8, 8, 10), float32]) */;
  %51 = %49.1;
  %52 = %50.2;
  (%51, %52)
}

def @func_4653(%var_4649: Tensor[(2730), uint32]) -> (Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64], Tensor[(2730), uint32], Tensor[(60), float64]) {
  %53 = @func_3384() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64]) */;
  %54 = cast(%var_4649, dtype="uint32") /* ty=Tensor[(2730), uint32] */;
  %55 = cast(%var_4649, dtype="uint32") /* ty=Tensor[(2730), uint32] */;
  %56 = cast(meta[relay.Constant][2] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %57 = reshape(%54, newshape=[14, 15, 13]) /* ty=Tensor[(14, 15, 13), uint32] */;
  %58 = reshape(%55, newshape=[14, 15, 13]) /* ty=Tensor[(14, 15, 13), uint32] */;
  %59 = reshape(%56, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %60 = @func_607(%57, %58, %59) /* ty=(Tensor[(14, 15, 13), uint32], Tensor[(14, 15, 13), float64], Tensor[(4, 3, 5), float64], Tensor[(60), float64]) */;
  %61 = %53.1;
  %62 = %60.2;
  (%61, %62, %var_4649, meta[relay.Constant][2] /* ty=Tensor[(60), float64] */)
}

def @func_6886() -> Tensor[(4, 3, 5), float64] {
  @func_2536() /* ty=Tensor[(4, 3, 5), float64] */
}

def @func_3605() -> Tensor[(4, 3, 5), float32] {
  %63 = @func_2731() /* ty=(Tensor[(4, 3, 5), float32],) */;
  %63.0
}

def @func_8655() -> (Tensor[(640), uint8], Tensor[(10, 6, 15), int32], Tensor[(900), int32], Tensor[(14, 7, 6), float64], Tensor[(14, 42), int16], Tensor[(4, 3, 5), float32]) {
  %64 = cast(meta[relay.Constant][3] /* ty=Tensor[(900), int32] */, dtype="int32") /* ty=Tensor[(900), int32] */;
  %65 = cast(meta[relay.Constant][3] /* ty=Tensor[(900), int32] */, dtype="int32") /* ty=Tensor[(900), int32] */;
  %66 = reshape(%64, newshape=[10, 6, 15]) /* ty=Tensor[(10, 6, 15), int32] */;
  %67 = reshape(%65, newshape=[10, 6, 15]) /* ty=Tensor[(10, 6, 15), int32] */;
  %68 = @func_1504(%66, %67) /* ty=(Tensor[(10, 6, 15), int32],) */;
  %69 = cast(meta[relay.Constant][4] /* ty=Tensor[(14, 42), int16] */, dtype="int16") /* ty=Tensor[(14, 42), int16] */;
  %70 = reshape(%69, newshape=[14, 7, 6]) /* ty=Tensor[(14, 7, 6), int16] */;
  %71 = @func_3015(%70) /* ty=(Tensor[(14, 7, 6), float64], Tensor[(14, 7, 6), float64]) */;
  %72 = @func_4949() /* ty=(Tensor[(4, 3, 5), float32],) */;
  %73 = @func_4668() /* ty=Tensor[(640), uint8] */;
  %74 = %68.0;
  %75 = %71.0;
  %76 = %72.0;
  (%73, %74, meta[relay.Constant][3] /* ty=Tensor[(900), int32] */, %75, meta[relay.Constant][4] /* ty=Tensor[(14, 42), int16] */, %76)
}

def @func_8944(%var_8923: Tensor[(7, 390), uint32]) -> (Tensor[(4, 3, 5), float32], Tensor[(15, 9, 1), float32], Tensor[(7, 390), bool], Tensor[(4, 3, 5), float32], Tensor[(1, 48), float64]) {
  %77 = @func_3961() /* ty=(Tensor[(4, 3, 5), float32],) */;
  %78 = cast(meta[relay.Constant][5] /* ty=Tensor[(7, 390), uint32] */, dtype="uint32") /* ty=Tensor[(7, 390), uint32] */;
  %79 = reshape(%78, newshape=[2730]) /* ty=Tensor[(2730), uint32] */;
  %80 = @func_4653(%79) /* ty=(Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64], Tensor[(2730), uint32], Tensor[(60), float64]) */;
  %81 = cast(%var_8923, dtype="bool") /* ty=Tensor[(7, 390), bool] */;
  %82 = shape_of(meta[relay.Constant][5] /* ty=Tensor[(7, 390), uint32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %83 = cast(meta[relay.Constant][5] /* ty=Tensor[(7, 390), uint32] */, dtype="bool") /* ty=Tensor[(7, 390), bool] */;
  %84 = dyn.reshape(%81, %82, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %85 = cast(meta[relay.Constant][6] /* ty=Tensor[(1, 48), float64] */, dtype="float64") /* ty=Tensor[(1, 48), float64] */;
  %86 = cast(meta[relay.Constant][6] /* ty=Tensor[(1, 48), float64] */, dtype="float64") /* ty=Tensor[(1, 48), float64] */;
  %87 = reshape(%85, newshape=[12, 2, 2]) /* ty=Tensor[(12, 2, 2), float64] */;
  %88 = reshape(%86, newshape=[12, 2, 2]) /* ty=Tensor[(12, 2, 2), float64] */;
  %89 = @func_4786(%87, %88) /* ty=(Tensor[(12, 2, 2), bool], Tensor[(4, 3, 5), float32], Tensor[(4, 3, 5), float32], Tensor[(4, 3, 5), float32], Tensor[(15, 9, 1), float32]) */;
  %90 = %77.0;
  %91 = %80.0;
  %92 = logical_and(%83, %84) /* ty=Tensor[(7, 390), bool] */;
  %93 = %89.1;
  (%90, %91, %92, %93, meta[relay.Constant][6] /* ty=Tensor[(1, 48), float64] */)
}

def @func_9178() -> Tensor[(4, 3, 5), float32] {
  %94 = @func_8416() /* ty=(Tensor[(4, 3, 5), float32], Tensor[(640), uint8]) */;
  %94.0
}

def @func_4515() -> Tensor[(4, 3, 5), float32] {
  %95 = @func_2731() /* ty=(Tensor[(4, 3, 5), float32],) */;
  %95.0
}

def @func_4113() -> (Tensor[(4, 3, 5), float32], Tensor[(60), float64], Tensor[(1620), float32]) {
  %96 = @func_3207() /* ty=(Tensor[(4, 3, 5), float32],) */;
  %97 = cast(meta[relay.Constant][7] /* ty=Tensor[(1620), float32] */, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %98 = reshape(%97, newshape=[15, 9, 12]) /* ty=Tensor[(15, 9, 12), float32] */;
  %99 = @func_2623(%98) /* ty=(Tensor[(15, 9, 12), float32], Tensor[(14, 15, 13), uint32], Tensor[(2730), uint32], Tensor[(60), float64]) */;
  %100 = %96.0;
  %101 = %99.3;
  (%100, %101, meta[relay.Constant][7] /* ty=Tensor[(1620), float32] */)
}

def @func_6543() -> (Tensor[(4, 3, 5), float32], Tensor[(15, 9, 1), float32]) {
  %102 = @func_4042() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float32]) */;
  %103 = %102.1;
  %104 = @func_6526() /* ty=Tensor[(15, 9, 1), float32] */;
  (%103, %104)
}

def @func_8598() -> (Tensor[(4, 3, 5), float64], Tensor[(14, 7, 6), float64], Tensor[(14, 42), int16], Tensor[(15, 9, 1), float32], Tensor[(5, 4, 16), int8], int8) {
  %105 = @func_7224() /* ty=(Tensor[(4, 3, 5), float64], Tensor[(640), uint8]) */;
  %106 = cast(meta[relay.Constant][8] /* ty=Tensor[(14, 42), int16] */, dtype="int16") /* ty=Tensor[(14, 42), int16] */;
  %107 = reshape(%106, newshape=[14, 7, 6]) /* ty=Tensor[(14, 7, 6), int16] */;
  %108 = @func_3015(%107) /* ty=(Tensor[(14, 7, 6), float64], Tensor[(14, 7, 6), float64]) */;
  %109 = @func_6543() /* ty=(Tensor[(4, 3, 5), float32], Tensor[(15, 9, 1), float32]) */;
  %110 = cast(meta[relay.Constant][9] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %111 = reshape(%110, newshape=[]) /* ty=int8 */;
  %112 = @func_5755(%111) /* ty=(Tensor[(5, 4, 16), int8], Tensor[(4, 3, 5), float32]) */;
  %113 = %105.0;
  %114 = %108.0;
  %115 = %109.1;
  %116 = %112.0;
  (%113, %114, meta[relay.Constant][8] /* ty=Tensor[(14, 42), int16] */, %115, %116, meta[relay.Constant][9] /* ty=int8 */)
}

def @func_9214(%var_9191: Tensor[(15, 13, 3), int64], %var_9204: Tensor[(15, 13, 3), int64]) -> (Tensor[(15, 13, 3), int64], Tensor[(45), int8], Tensor[(15, 13, 3), int8], Tensor[(4, 3, 5), float32]) {
  %117 = cast(%var_9191, dtype="int64") /* ty=Tensor[(15, 13, 3), int64] */;
  %118 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(15, 13, 3), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %119 = cast(meta[relay.Constant][10] /* ty=Tensor[(15, 13, 3), int64] */, dtype="int64") /* ty=Tensor[(15, 13, 3), int64] */;
  %120 = dyn.reshape(%117, %118, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %121 = @func_6982() /* ty=(Tensor[(4, 3, 5), float32], Tensor[(60), float64], Tensor[(45), int8]) */;
  %122 = cast(%var_9204, dtype="int8") /* ty=Tensor[(15, 13, 3), int8] */;
  %123 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(15, 13, 3), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %124 = cast(meta[relay.Constant][10] /* ty=Tensor[(15, 13, 3), int64] */, dtype="int8") /* ty=Tensor[(15, 13, 3), int8] */;
  %125 = dyn.reshape(%122, %123, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %126 = logical_xor(%119, %120) /* ty=Tensor[(15, 13, 3), int64] */;
  %127 = %121.2;
  %128 = bitwise_or(%124, %125) /* ty=Tensor[(15, 13, 3), int8] */;
  %129 = @func_7898() /* ty=Tensor[(4, 3, 5), float32] */;
  (%126, %127, %128, %129)
}

def @func_7075() -> (Tensor[(4, 3, 5), bool], Tensor[(15, 9, 1), float32]) {
  %130 = @func_6185() /* ty=(Tensor[(4, 3, 5), float32], Tensor[(4, 3, 5), bool], Tensor[(4, 3, 5), bool], Tensor[(4, 3, 5), uint32]) */;
  %131 = %130.2;
  %132 = @func_2200() /* ty=Tensor[(15, 9, 1), float32] */;
  (%131, %132)
}

def @func_3448() -> (Tensor[(4, 3, 5), float64],) {
  %133 = @func_1922() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64], Tensor[(4, 1), uint64]) */;
  %134 = %133.1;
  (%134,)
}

def @func_2200() -> Tensor[(15, 9, 1), float32] {
  %135 = @func_2130() /* ty=(Tensor[(15, 9, 1), float32],) */;
  %135.0
}

def @func_7653() -> (Tensor[(4, 3, 5), float32], Tensor[(4, 3, 5), float32]) {
  %136 = @func_6426() /* ty=(Tensor[(4, 3, 5), float32], Tensor[(15, 9, 640), uint16], Tensor[(15, 9, 1), float32]) */;
  %137 = @func_5155() /* ty=(Tensor[(4, 3, 5), float32],) */;
  %138 = %136.0;
  %139 = %137.0;
  (%138, %139)
}

def @func_5636(%var_5633: Tensor[(32), uint64], %var_5634: Tensor[(2730), uint32]) -> (Tensor[(15, 9, 1), float32], Tensor[(4), uint64], Tensor[(32), uint64], Tensor[(2730), uint32]) {
  %140 = @func_4710() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(640), uint8]) */;
  %141 = cast(%var_5633, dtype="uint64") /* ty=Tensor[(32), uint64] */;
  %142 = cast(%var_5634, dtype="uint32") /* ty=Tensor[(2730), uint32] */;
  %143 = reshape(%141, newshape=[32]) /* ty=Tensor[(32), uint64] */;
  %144 = reshape(%142, newshape=[2730]) /* ty=Tensor[(2730), uint32] */;
  %145 = @func_3632(%143, %144) /* ty=(Tensor[(4, 3, 5), float64], Tensor[(60, 1), float64], Tensor[(4), uint64], Tensor[(32), uint64], Tensor[(14, 15, 13), float64], Tensor[(2730), uint32]) */;
  %146 = %140.0;
  %147 = %145.2;
  (%146, %147, %var_5633, %var_5634)
}

def @func_2870() -> (Tensor[(15, 9, 1), float32], Tensor[(640), uint8], Tensor[(8, 8, 10), float32]) {
  %148 = cast(meta[relay.Constant][11] /* ty=Tensor[(640), uint8] */, dtype="uint8") /* ty=Tensor[(640), uint8] */;
  %149 = reshape(%148, newshape=[8, 8, 10]) /* ty=Tensor[(8, 8, 10), uint8] */;
  %150 = @func_1609(%149) /* ty=(Tensor[(8, 8, 10), uint8],) */;
  %151 = %150.0;
  %152 = cast(%151, dtype="float32") /* ty=Tensor[(8, 8, 10), float32] */;
  %153 = @func_2507() /* ty=Tensor[(15, 9, 1), float32] */;
  %154 = acosh(%152) /* ty=Tensor[(8, 8, 10), float32] */;
  (%153, meta[relay.Constant][11] /* ty=Tensor[(640), uint8] */, %154)
}

def @func_6050(%var_6031: Tensor[(15, 9, 4), float32]) -> (Tensor[(4, 3, 5), float32], Tensor[(15, 9, 4), float64]) {
  %155 = @func_5199() /* ty=(Tensor[(4, 3, 5), float32], Tensor[(15, 9, 1), float64]) */;
  %156 = @func_4710() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(640), uint8]) */;
  %157 = %156.0;
  %158 = cast(%157, dtype="float64") /* ty=Tensor[(15, 9, 1), float64] */;
  %159 = cast(%var_6031, dtype="float64") /* ty=Tensor[(15, 9, 4), float64] */;
  %160 = %155.0;
  %161 = divide(%158, %159) /* ty=Tensor[(15, 9, 4), float64] */;
  (%160, %161)
}

def @func_8219(%var_8173: Tensor[(540), float32], %var_8174: Tensor[(84, 16), int16], %var_8195: Tensor[(15, 9, 6), bool]) -> (Tensor[(15, 9, 1), float32], Tensor[(540), float32], Tensor[(4, 3, 5), float64], Tensor[(10, 4, 9), bool], Tensor[(360), float64], Tensor[(2, 320), uint8], Tensor[(84, 16), float64], Tensor[(15, 9, 6), bool], Tensor[(60), float64], Tensor[(1620), float32]) {
  %162 = @func_2130() /* ty=(Tensor[(15, 9, 1), float32],) */;
  %163 = @func_4062() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64]) */;
  %164 = cast(meta[relay.Constant][12] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %165 = reshape(%164, newshape=[10, 4, 9]) /* ty=Tensor[(10, 4, 9), float64] */;
  %166 = @func_5106(%165) /* ty=(Tensor[(10, 4, 9), bool],) */;
  %167 = %163.1;
  %168 = cast(%167, dtype="float32") /* ty=Tensor[(4, 3, 5), float32] */;
  %169 = reshape(%168, newshape=[4, 3, 5]) /* ty=Tensor[(4, 3, 5), float32] */;
  %170 = @func_5708(%169) /* ty=(Tensor[(4, 3, 5), float32], Tensor[(8, 8, 10), uint8], Tensor[(2, 320), uint8]) */;
  %171 = cast(%var_8173, dtype="float32") /* ty=Tensor[(540), float32] */;
  %172 = cast(%var_8174, dtype="int16") /* ty=Tensor[(84, 16), int16] */;
  %173 = reshape(%171, newshape=[1, 540]) /* ty=Tensor[(1, 540), float32] */;
  %174 = reshape(%172, newshape=[1344]) /* ty=Tensor[(1344), int16] */;
  %175 = @func_7736(%173, %174) /* ty=(Tensor[(15, 9, 4), float64], Tensor[(15, 9, 540), float32], Tensor[(6, 16, 14), bool], Tensor[(1344), int16], Tensor[(4, 3, 5), float32]) */;
  %176 = %175.3;
  %177 = cast(%176, dtype="float64") /* ty=Tensor[(1344), float64] */;
  %178 = shape_of(%var_8174, dtype="int32") /* ty=Tensor[(2), int32] */;
  %179 = cast(%var_8174, dtype="float64") /* ty=Tensor[(84, 16), float64] */;
  %180 = dyn.reshape(%177, %178, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %181 = @func_7603() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(15, 9, 1), float32], Tensor[(45), int8], Tensor[(4, 3, 5), float64], Tensor[(15, 9, 1), float32]) */;
  %182 = %181.1;
  %183 = @func_5489() /* ty=Tensor[(15, 9, 1), float32] */;
  %184 = cast(%183, dtype="bool") /* ty=Tensor[(15, 9, 1), bool] */;
  %185 = shape_of(%182, dtype="int32") /* ty=Tensor[(3), int32] */;
  %186 = cast(%182, dtype="bool") /* ty=Tensor[(15, 9, 1), bool] */;
  %187 = dyn.reshape(%184, %185, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %188 = logical_or(%186, %187) /* ty=Tensor[(15, 9, ?), bool] */;
  %189 = cast(%188, dtype="bool") /* ty=Tensor[(15, 9, ?), bool] */;
  %190 = cast(%var_8195, dtype="bool") /* ty=Tensor[(15, 9, 6), bool] */;
  %191 = cast(meta[relay.Constant][13] /* ty=Tensor[(1620), float32] */, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %192 = reshape(%191, newshape=[15, 9, 12]) /* ty=Tensor[(15, 9, 12), float32] */;
  %193 = @func_2623(%192) /* ty=(Tensor[(15, 9, 12), float32], Tensor[(14, 15, 13), uint32], Tensor[(2730), uint32], Tensor[(60), float64]) */;
  %194 = %162.0;
  %195 = %166.0;
  %196 = %170.2;
  %197 = floor_mod(%179, %180) /* ty=Tensor[(84, 16), float64] */;
  %198 = logical_or(%189, %190) /* ty=Tensor[(15, 9, 6), bool] */;
  %199 = %193.3;
  (%194, %var_8173, %167, %195, meta[relay.Constant][12] /* ty=Tensor[(360), float64] */, %196, %197, %198, %199, meta[relay.Constant][13] /* ty=Tensor[(1620), float32] */)
}

def @func_7277(%var_7256: Tensor[(5, 7, 6), float32]) -> (Tensor[(4, 3, 5), float32], int8, Tensor[(5, 7, 6), float32], Tensor[(5, 7, 6), float32]) {
  %200 = cast(meta[relay.Constant][14] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %201 = reshape(%200, newshape=[]) /* ty=int8 */;
  %202 = @func_5755(%201) /* ty=(Tensor[(5, 4, 16), int8], Tensor[(4, 3, 5), float32]) */;
  %203 = cast(meta[relay.Constant][15] /* ty=Tensor[(5, 7, 6), float32] */, dtype="float32") /* ty=Tensor[(5, 7, 6), float32] */;
  %204 = exp(%203) /* ty=Tensor[(5, 7, 6), float32] */;
  %205 = cast(%var_7256, dtype="float32") /* ty=Tensor[(5, 7, 6), float32] */;
  %206 = shape_of(%204, dtype="int32") /* ty=Tensor[(3), int32] */;
  %207 = cast(%204, dtype="float32") /* ty=Tensor[(5, 7, 6), float32] */;
  %208 = dyn.reshape(%205, %206, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %209 = cast(%204, dtype="float32") /* ty=Tensor[(5, 7, 6), float32] */;
  %210 = %202.1;
  %211 = mod(%207, %208) /* ty=Tensor[(5, 7, 6), float32] */;
  %212 = sin(%209) /* ty=Tensor[(5, 7, 6), float32] */;
  (%210, meta[relay.Constant][14] /* ty=int8 */, %211, %212)
}

def @func_2507() -> Tensor[(15, 9, 1), float32] {
  %213 = @func_2431() /* ty=(Tensor[(15, 9, 1), float32],) */;
  %213.0
}

def @func_4062() -> (Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64]) {
  %214 = @func_3796() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(8, 8, 10), float32]) */;
  %215 = %214.0;
  %216 = cast(%215, dtype="float32") /* ty=Tensor[(15, 9, 1), float32] */;
  %217 = @func_3384() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64]) */;
  %218 = tan(%216) /* ty=Tensor[(15, 9, 1), float32] */;
  %219 = %217.2;
  (%218, %219)
}

def @func_885(%var_876: Tensor[(4), uint64]) -> (Tensor[(2, 4, 14), float32], Tensor[(4, 3, 5), float64], Tensor[(4), uint64], Tensor[(32), uint64], Tensor[(4, 3, 5), float64]) {
  %220 = cast(meta[relay.Constant][16] /* ty=Tensor[(2, 4, 14), float32] */, dtype="float32") /* ty=Tensor[(2, 4, 14), float32] */;
  %221 = cast(%var_876, dtype="uint64") /* ty=Tensor[(4), uint64] */;
  %222 = cast(meta[relay.Constant][17] /* ty=Tensor[(32), uint64] */, dtype="uint64") /* ty=Tensor[(32), uint64] */;
  %223 = reshape(%221, newshape=[2, 2, 1]) /* ty=Tensor[(2, 2, 1), uint64] */;
  %224 = reshape(%222, newshape=[2, 2, 8]) /* ty=Tensor[(2, 2, 8), uint64] */;
  %225 = @func_665(%223, %224) /* ty=(Tensor[(2, 2, 8), bool], Tensor[(60), float64], Tensor[(2730), uint32], Tensor[(60, 1), float64], Tensor[(4, 3, 5), float64]) */;
  %226 = %225.4;
  %227 = cast(%226, dtype="float64") /* ty=Tensor[(4, 3, 5), float64] */;
  %228 = cast(%226, dtype="float64") /* ty=Tensor[(4, 3, 5), float64] */;
  %229 = reshape(%227, newshape=[4, 3, 5]) /* ty=Tensor[(4, 3, 5), float64] */;
  %230 = reshape(%228, newshape=[4, 3, 5]) /* ty=Tensor[(4, 3, 5), float64] */;
  %231 = @func_382(%229, %230) /* ty=(Tensor[(4, 3, 5), float64],) */;
  %232 = sqrt(%220) /* ty=Tensor[(2, 4, 14), float32] */;
  %233 = %231.0;
  (%232, %226, %var_876, meta[relay.Constant][17] /* ty=Tensor[(32), uint64] */, %233)
}

def @func_2667(%var_2629: Tensor[(8, 6, 14), float64]) -> (Tensor[(15, 9, 1), float32], Tensor[(8, 6, 14), float32], Tensor[(768), float64], Tensor[(1, 768), float64], Tensor[(32), uint64], Tensor[(3, 5, 14), float32], Tensor[(210), float32]) {
  %234 = @func_2551() /* ty=(Tensor[(15, 9, 1), float32],) */;
  %235 = cast(%var_2629, dtype="float64") /* ty=Tensor[(8, 6, 14), float64] */;
  %236 = log2(%235) /* ty=Tensor[(8, 6, 14), float64] */;
  %237 = cast(%236, dtype="float64") /* ty=Tensor[(8, 6, 14), float64] */;
  %238 = sqrt(%237) /* ty=Tensor[(8, 6, 14), float64] */;
  %239 = cast(%236, dtype="float32") /* ty=Tensor[(8, 6, 14), float32] */;
  %240 = shape_of(%238, dtype="int32") /* ty=Tensor[(3), int32] */;
  %241 = cast(%238, dtype="float32") /* ty=Tensor[(8, 6, 14), float32] */;
  %242 = dyn.reshape(%239, %240, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %243 = cast(meta[relay.Constant][18] /* ty=Tensor[(1, 768), float64] */, dtype="float64") /* ty=Tensor[(1, 768), float64] */;
  %244 = cast(meta[relay.Constant][19] /* ty=Tensor[(32), uint64] */, dtype="uint64") /* ty=Tensor[(32), uint64] */;
  %245 = reshape(%243, newshape=[768]) /* ty=Tensor[(768), float64] */;
  %246 = reshape(%244, newshape=[32]) /* ty=Tensor[(32), uint64] */;
  %247 = @func_2337(%245, %246) /* ty=(Tensor[(6, 8, 16), float64], Tensor[(768), float64], Tensor[(15, 9, 32), bool], Tensor[(32, 24), bool]) */;
  %248 = cast(meta[relay.Constant][20] /* ty=Tensor[(210), float32] */, dtype="float32") /* ty=Tensor[(210), float32] */;
  %249 = reshape(%248, newshape=[3, 5, 14]) /* ty=Tensor[(3, 5, 14), float32] */;
  %250 = @func_2020(%249) /* ty=(Tensor[(3, 5, 14), float32], Tensor[(4, 3, 5), float64], Tensor[(4), uint64]) */;
  %251 = %234.0;
  %252 = power(%241, %242) /* ty=Tensor[(8, 6, 14), float32] */;
  %253 = %247.1;
  %254 = %250.0;
  (%251, %252, %253, meta[relay.Constant][18] /* ty=Tensor[(1, 768), float64] */, meta[relay.Constant][19] /* ty=Tensor[(32), uint64] */, %254, meta[relay.Constant][20] /* ty=Tensor[(210), float32] */)
}

def @func_4383() -> (Tensor[(640), uint8],) {
  %255 = @func_2870() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(640), uint8], Tensor[(8, 8, 10), float32]) */;
  %256 = %255.1;
  (%256,)
}

def @func_6565(%var_6563: Tensor[(768), float64]) -> (Tensor[(5, 15, 9), float32], Tensor[(6, 8, 16), float64], Tensor[(32), uint64], Tensor[(768), float64]) {
  %257 = cast(meta[relay.Constant][21] /* ty=Tensor[(5, 15, 9), float32] */, dtype="float32") /* ty=Tensor[(5, 15, 9), float32] */;
  %258 = cast(meta[relay.Constant][22] /* ty=Tensor[(32), uint64] */, dtype="uint64") /* ty=Tensor[(32), uint64] */;
  %259 = cast(%var_6563, dtype="float64") /* ty=Tensor[(768), float64] */;
  %260 = reshape(%258, newshape=[32]) /* ty=Tensor[(32), uint64] */;
  %261 = reshape(%259, newshape=[32, 24]) /* ty=Tensor[(32, 24), float64] */;
  %262 = @func_2259(%260, %261) /* ty=(Tensor[(15, 9, 1), float32], Tensor[(2, 2, 8), bool], Tensor[(1, 4), uint64], Tensor[(32), uint64], Tensor[(6, 8, 16), float64], Tensor[(32, 24), float64]) */;
  %263 = exp(%257) /* ty=Tensor[(5, 15, 9), float32] */;
  %264 = %262.4;
  (%263, %264, meta[relay.Constant][22] /* ty=Tensor[(32), uint64] */, %var_6563)
}

def @func_6982() -> (Tensor[(4, 3, 5), float32], Tensor[(60), float64], Tensor[(45), int8]) {
  %265 = @func_4346() /* ty=(Tensor[(4, 3, 5), float32],) */;
  %266 = cast(meta[relay.Constant][23] /* ty=Tensor[(45), int8] */, dtype="int8") /* ty=Tensor[(45), int8] */;
  %267 = %265.0;
  %268 = cast(%267, dtype="float64") /* ty=Tensor[(4, 3, 5), float64] */;
  %269 = reshape(%266, newshape=[45]) /* ty=Tensor[(45), int8] */;
  %270 = reshape(%268, newshape=[4, 3, 5]) /* ty=Tensor[(4, 3, 5), float64] */;
  %271 = @func_4304(%269, %270) /* ty=(Tensor[(4, 3, 5), float64], Tensor[(10, 6, 15), int32], Tensor[(900), int32], Tensor[(10, 6, 15), int32], Tensor[(1, 15, 3), int8], Tensor[(45), int8], Tensor[(60), float64], Tensor[(4, 3, 5), bool]) */;
  %272 = %271.6;
  (%267, %272, meta[relay.Constant][23] /* ty=Tensor[(45), int8] */)
}

def @func_5489() -> Tensor[(15, 9, 1), float32] {
  %273 = @func_2431() /* ty=(Tensor[(15, 9, 1), float32],) */;
  %273.0
}

def @func_9026() -> (Tensor[(4, 3, 5), float32], Tensor[(60), float64], Tensor[(1, 2730), float64]) {
  %274 = @func_6231() /* ty=(Tensor[(4, 3, 5), float32], Tensor[(15, 9, 1), float32]) */;
  %275 = cast(meta[relay.Constant][24] /* ty=Tensor[(1, 2730), uint32] */, dtype="uint32") /* ty=Tensor[(1, 2730), uint32] */;
  %276 = cast(meta[relay.Constant][24] /* ty=Tensor[(1, 2730), uint32] */, dtype="uint32") /* ty=Tensor[(1, 2730), uint32] */;
  %277 = %274.0;
  %278 = cast(%277, dtype="float64") /* ty=Tensor[(4, 3, 5), float64] */;
  %279 = reshape(%275, newshape=[14, 15, 13]) /* ty=Tensor[(14, 15, 13), uint32] */;
  %280 = reshape(%276, newshape=[14, 15, 13]) /* ty=Tensor[(14, 15, 13), uint32] */;
  %281 = reshape(%278, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %282 = @func_607(%279, %280, %281) /* ty=(Tensor[(14, 15, 13), uint32], Tensor[(14, 15, 13), float64], Tensor[(4, 3, 5), float64], Tensor[(60), float64]) */;
  %283 = cast(meta[relay.Constant][24] /* ty=Tensor[(1, 2730), uint32] */, dtype="float64") /* ty=Tensor[(1, 2730), float64] */;
  %284 = acos(%283) /* ty=Tensor[(1, 2730), float64] */;
  %285 = cast(%284, dtype="float64") /* ty=Tensor[(1, 2730), float64] */;
  %286 = %282.3;
  %287 = log(%285) /* ty=Tensor[(1, 2730), float64] */;
  (%277, %286, %287)
}

def @func_8416() -> (Tensor[(4, 3, 5), float32], Tensor[(640), uint8]) {
  %288 = @func_4042() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float32]) */;
  %289 = @func_4383() /* ty=(Tensor[(640), uint8],) */;
  %290 = %288.1;
  %291 = %289.0;
  (%290, %291)
}

def @func_5058(%var_5040: Tensor[(8, 8, 10), float32], %var_5056: Tensor[(210), float32]) -> (Tensor[(4, 3, 5), float32], Tensor[(8, 8, 10), int8], Tensor[(4, 3, 5), float64], Tensor[(210), float32]) {
  %292 = @func_3207() /* ty=(Tensor[(4, 3, 5), float32],) */;
  %293 = @func_3796() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(8, 8, 10), float32]) */;
  %294 = %293.1;
  %295 = cast(%var_5040, dtype="int8") /* ty=Tensor[(8, 8, 10), int8] */;
  %296 = shape_of(%294, dtype="int32") /* ty=Tensor[(3), int32] */;
  %297 = cast(%294, dtype="int8") /* ty=Tensor[(8, 8, 10), int8] */;
  %298 = dyn.reshape(%295, %296, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %299 = cast(%var_5056, dtype="float32") /* ty=Tensor[(210), float32] */;
  %300 = reshape(%299, newshape=[3, 5, 14]) /* ty=Tensor[(3, 5, 14), float32] */;
  %301 = @func_2020(%300) /* ty=(Tensor[(3, 5, 14), float32], Tensor[(4, 3, 5), float64], Tensor[(4), uint64]) */;
  %302 = %292.0;
  %303 = multiply(%297, %298) /* ty=Tensor[(8, 8, 10), int8] */;
  %304 = %301.1;
  (%302, %303, %304, %var_5056)
}

def @func_4413() -> Tensor[(4, 3, 5), float32] {
  @func_3605() /* ty=Tensor[(4, 3, 5), float32] */
}

def @func_5904(%var_5887: Tensor[(15, 9, 8), float32]) -> (Tensor[(15, 9, 1), float32], Tensor[(15, 9, 8), float32]) {
  %305 = @func_3384() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64]) */;
  %306 = %305.1;
  %307 = cast(%306, dtype="float32") /* ty=Tensor[(15, 9, 1), float32] */;
  %308 = cast(%var_5887, dtype="float32") /* ty=Tensor[(15, 9, 8), float32] */;
  %309 = @func_4177() /* ty=Tensor[(15, 9, 1), float32] */;
  %310 = divide(%307, %308) /* ty=Tensor[(15, 9, 8), float32] */;
  (%309, %310)
}

def @func_1585(%var_1582: Tensor[(6, 8, 16), float64]) -> (Tensor[(6, 8, 16), float64],) {
  %311 = cast(%var_1582, dtype="float64") /* ty=Tensor[(6, 8, 16), float64] */;
  %312 = sqrt(%311) /* ty=Tensor[(6, 8, 16), float64] */;
  (%312,)
}

def @func_2259(%var_2211: Tensor[(32), uint64], %var_2219: Tensor[(32, 24), float64]) -> (Tensor[(15, 9, 1), float32], Tensor[(2, 2, 8), bool], Tensor[(1, 4), uint64], Tensor[(32), uint64], Tensor[(6, 8, 16), float64], Tensor[(32, 24), float64]) {
  %313 = cast(meta[relay.Constant][25] /* ty=Tensor[(1, 4), uint64] */, dtype="uint64") /* ty=Tensor[(1, 4), uint64] */;
  %314 = cast(%var_2211, dtype="uint64") /* ty=Tensor[(32), uint64] */;
  %315 = reshape(%313, newshape=[2, 2, 1]) /* ty=Tensor[(2, 2, 1), uint64] */;
  %316 = reshape(%314, newshape=[2, 2, 8]) /* ty=Tensor[(2, 2, 8), uint64] */;
  %317 = @func_665(%315, %316) /* ty=(Tensor[(2, 2, 8), bool], Tensor[(60), float64], Tensor[(2730), uint32], Tensor[(60, 1), float64], Tensor[(4, 3, 5), float64]) */;
  %318 = cast(%var_2219, dtype="float64") /* ty=Tensor[(32, 24), float64] */;
  %319 = reshape(%318, newshape=[6, 8, 16]) /* ty=Tensor[(6, 8, 16), float64] */;
  %320 = @func_1585(%319) /* ty=(Tensor[(6, 8, 16), float64],) */;
  %321 = @func_2200() /* ty=Tensor[(15, 9, 1), float32] */;
  %322 = %317.0;
  %323 = %320.0;
  (%321, %322, meta[relay.Constant][25] /* ty=Tensor[(1, 4), uint64] */, %var_2211, %323, %var_2219)
}

def @func_8687() -> (Tensor[(4, 3, 5), float32],) {
  %324 = @func_3961() /* ty=(Tensor[(4, 3, 5), float32],) */;
  %325 = %324.0;
  (%325,)
}

def @func_6826() -> Tensor[(15, 9, 1), float32] {
  %326 = @func_4062() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64]) */;
  %326.0
}

def @func_607(%var_570: Tensor[(14, 15, 13), uint32], %var_579: Tensor[(14, 15, 13), uint32], %var_600: Tensor[(60), float64]) -> (Tensor[(14, 15, 13), uint32], Tensor[(14, 15, 13), float64], Tensor[(4, 3, 5), float64], Tensor[(60), float64]) {
  %327 = cast(meta[relay.Constant][26] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %328 = cast(%var_570, dtype="uint32") /* ty=Tensor[(14, 15, 13), uint32] */;
  %329 = cast(%var_579, dtype="float64") /* ty=Tensor[(14, 15, 13), float64] */;
  %330 = shape_of(%var_570, dtype="int32") /* ty=Tensor[(3), int32] */;
  %331 = cast(%var_570, dtype="float64") /* ty=Tensor[(14, 15, 13), float64] */;
  %332 = dyn.reshape(%329, %330, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %333 = cast(%var_600, dtype="float64") /* ty=Tensor[(60), float64] */;
  %334 = cast(%var_600, dtype="float64") /* ty=Tensor[(60), float64] */;
  %335 = reshape(%333, newshape=[4, 3, 5]) /* ty=Tensor[(4, 3, 5), float64] */;
  %336 = reshape(%334, newshape=[4, 3, 5]) /* ty=Tensor[(4, 3, 5), float64] */;
  %337 = @func_382(%335, %336) /* ty=(Tensor[(4, 3, 5), float64],) */;
  %338 = bitwise_and(%327, %328) /* ty=Tensor[(14, 15, 13), uint32] */;
  %339 = divide(%331, %332) /* ty=Tensor[(14, 15, 13), float64] */;
  %340 = %337.0;
  (%338, %339, %340, %var_600)
}

def @func_5155() -> (Tensor[(4, 3, 5), float32],) {
  %341 = @func_3605() /* ty=Tensor[(4, 3, 5), float32] */;
  (%341,)
}

def @func_8875() -> (Tensor[(15, 9, 1), float32],) {
  %342 = @func_5489() /* ty=Tensor[(15, 9, 1), float32] */;
  (%342,)
}

def @func_1504(%var_1491: Tensor[(10, 6, 15), int32], %var_1492: Tensor[(10, 6, 15), int32]) -> (Tensor[(10, 6, 15), int32],) {
  %343 = cast(%var_1492, dtype="int32") /* ty=Tensor[(10, 6, 15), int32] */;
  %344 = shape_of(%var_1491, dtype="int32") /* ty=Tensor[(3), int32] */;
  %345 = cast(%var_1491, dtype="int32") /* ty=Tensor[(10, 6, 15), int32] */;
  %346 = dyn.reshape(%343, %344, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %347 = left_shift(%345, %346) /* ty=Tensor[(10, 6, 15), int32] */;
  (%347,)
}

def @func_665(%var_632: Tensor[(2, 2, 1), uint64], %var_633: Tensor[(2, 2, 8), uint64]) -> (Tensor[(2, 2, 8), bool], Tensor[(60), float64], Tensor[(2730), uint32], Tensor[(60, 1), float64], Tensor[(4, 3, 5), float64]) {
  %348 = cast(%var_632, dtype="bool") /* ty=Tensor[(2, 2, 1), bool] */;
  %349 = cast(%var_633, dtype="bool") /* ty=Tensor[(2, 2, 8), bool] */;
  %350 = cast(meta[relay.Constant][27] /* ty=Tensor[(2730), uint32] */, dtype="uint32") /* ty=Tensor[(2730), uint32] */;
  %351 = cast(meta[relay.Constant][27] /* ty=Tensor[(2730), uint32] */, dtype="uint32") /* ty=Tensor[(2730), uint32] */;
  %352 = cast(meta[relay.Constant][28] /* ty=Tensor[(60, 1), float64] */, dtype="float64") /* ty=Tensor[(60, 1), float64] */;
  %353 = reshape(%350, newshape=[14, 15, 13]) /* ty=Tensor[(14, 15, 13), uint32] */;
  %354 = reshape(%351, newshape=[14, 15, 13]) /* ty=Tensor[(14, 15, 13), uint32] */;
  %355 = reshape(%352, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %356 = @func_607(%353, %354, %355) /* ty=(Tensor[(14, 15, 13), uint32], Tensor[(14, 15, 13), float64], Tensor[(4, 3, 5), float64], Tensor[(60), float64]) */;
  %357 = %356.3;
  %358 = cast(%357, dtype="float64") /* ty=Tensor[(60), float64] */;
  %359 = cast(meta[relay.Constant][28] /* ty=Tensor[(60, 1), float64] */, dtype="float64") /* ty=Tensor[(60, 1), float64] */;
  %360 = reshape(%358, newshape=[4, 3, 5]) /* ty=Tensor[(4, 3, 5), float64] */;
  %361 = reshape(%359, newshape=[4, 3, 5]) /* ty=Tensor[(4, 3, 5), float64] */;
  %362 = @func_382(%360, %361) /* ty=(Tensor[(4, 3, 5), float64],) */;
  %363 = not_equal(%348, %349) /* ty=Tensor[(2, 2, 8), bool] */;
  %364 = %362.0;
  (%363, %357, meta[relay.Constant][27] /* ty=Tensor[(2730), uint32] */, meta[relay.Constant][28] /* ty=Tensor[(60, 1), float64] */, %364)
}

def @func_5872() -> (Tensor[(4, 3, 5), float64],) {
  %365 = @func_2536() /* ty=Tensor[(4, 3, 5), float64] */;
  (%365,)
}

def @func_7898() -> Tensor[(4, 3, 5), float32] {
  %366 = @func_5155() /* ty=(Tensor[(4, 3, 5), float32],) */;
  %366.0
}

def @func_3207() -> (Tensor[(4, 3, 5), float32],) {
  %367 = @func_2959() /* ty=(Tensor[(4, 3, 5), float32], Tensor[(4, 3, 5), bool]) */;
  %368 = %367.0;
  (%368,)
}

def @func_2020(%var_2009: Tensor[(3, 5, 14), float32]) -> (Tensor[(3, 5, 14), float32], Tensor[(4, 3, 5), float64], Tensor[(4), uint64]) {
  %369 = cast(%var_2009, dtype="float32") /* ty=Tensor[(3, 5, 14), float32] */;
  %370 = cast(meta[relay.Constant][29] /* ty=Tensor[(4), uint64] */, dtype="uint64") /* ty=Tensor[(4), uint64] */;
  %371 = reshape(%370, newshape=[4]) /* ty=Tensor[(4), uint64] */;
  %372 = @func_885(%371) /* ty=(Tensor[(2, 4, 14), float32], Tensor[(4, 3, 5), float64], Tensor[(4), uint64], Tensor[(32), uint64], Tensor[(4, 3, 5), float64]) */;
  %373 = tan(%369) /* ty=Tensor[(3, 5, 14), float32] */;
  %374 = %372.4;
  (%373, %374, meta[relay.Constant][29] /* ty=Tensor[(4), uint64] */)
}

def @func_6097() -> (Tensor[(4, 3, 5), float32], Tensor[(4, 3, 5), float32], Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float32]) {
  %375 = @func_5926() /* ty=Tensor[(4, 3, 5), bool] */;
  %376 = cast(%375, dtype="float32") /* ty=Tensor[(4, 3, 5), float32] */;
  %377 = @func_4346() /* ty=(Tensor[(4, 3, 5), float32],) */;
  %378 = asin(%376) /* ty=Tensor[(4, 3, 5), float32] */;
  %379 = @func_3605() /* ty=Tensor[(4, 3, 5), float32] */;
  %380 = @func_4177() /* ty=Tensor[(15, 9, 1), float32] */;
  %381 = %377.0;
  (%378, %379, %380, %381)
}

def @func_3546(%var_3535: Tensor[(15, 9, 6), float32]) -> (Tensor[(15, 9, 6), int64],) {
  %382 = @func_3384() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64]) */;
  %383 = %382.0;
  %384 = cast(%383, dtype="int64") /* ty=Tensor[(15, 9, 1), int64] */;
  %385 = cast(%var_3535, dtype="int64") /* ty=Tensor[(15, 9, 6), int64] */;
  %386 = right_shift(%384, %385) /* ty=Tensor[(15, 9, 6), int64] */;
  (%386,)
}

def @func_3067(%var_3048: Tensor[(640), uint8]) -> (Tensor[(4, 3, 5), float64], Tensor[(8, 8, 10), uint8], Tensor[(640), uint8]) {
  %387 = cast(%var_3048, dtype="uint8") /* ty=Tensor[(640), uint8] */;
  %388 = reshape(%387, newshape=[8, 8, 10]) /* ty=Tensor[(8, 8, 10), uint8] */;
  %389 = @func_1609(%388) /* ty=(Tensor[(8, 8, 10), uint8],) */;
  %390 = @func_2536() /* ty=Tensor[(4, 3, 5), float64] */;
  %391 = %389.0;
  (%390, %391, %var_3048)
}

def @func_7736(%var_7709: Tensor[(1, 540), float32], %var_7728: Tensor[(1344), int16]) -> (Tensor[(15, 9, 4), float64], Tensor[(15, 9, 540), float32], Tensor[(6, 16, 14), bool], Tensor[(1344), int16], Tensor[(4, 3, 5), float32]) {
  %392 = cast(%var_7709, dtype="float32") /* ty=Tensor[(1, 540), float32] */;
  %393 = reshape(%392, newshape=[15, 9, 4]) /* ty=Tensor[(15, 9, 4), float32] */;
  %394 = @func_6050(%393) /* ty=(Tensor[(4, 3, 5), float32], Tensor[(15, 9, 4), float64]) */;
  %395 = @func_2431() /* ty=(Tensor[(15, 9, 1), float32],) */;
  %396 = %395.0;
  %397 = cast(%396, dtype="float32") /* ty=Tensor[(15, 9, 1), float32] */;
  %398 = cast(%var_7709, dtype="float32") /* ty=Tensor[(1, 540), float32] */;
  %399 = cast(%var_7728, dtype="int16") /* ty=Tensor[(1344), int16] */;
  %400 = reshape(%399, newshape=[6, 16, 14]) /* ty=Tensor[(6, 16, 14), int16] */;
  %401 = %394.1;
  %402 = floor_mod(%397, %398) /* ty=Tensor[(15, 9, 540), float32] */;
  %403 = @func_1008(%400) /* ty=Tensor[(6, 16, 14), bool] */;
  %404 = @func_6917() /* ty=Tensor[(4, 3, 5), float32] */;
  (%401, %402, %403, %var_7728, %404)
}

def @func_1992(%var_1977: Tensor[(1344), int16]) -> (Tensor[(4, 1), uint64], Tensor[(1344), int16], Tensor[(6, 16, 14), float64], Tensor[(4, 3, 5), float64], Tensor[(60), float64]) {
  %405 = @func_1922() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64], Tensor[(4, 1), uint64]) */;
  %406 = cast(%var_1977, dtype="int16") /* ty=Tensor[(1344), int16] */;
  %407 = reshape(%406, newshape=[6, 16, 14]) /* ty=Tensor[(6, 16, 14), int16] */;
  %408 = @func_1008(%407) /* ty=Tensor[(6, 16, 14), bool] */;
  %409 = cast(%408, dtype="float64") /* ty=Tensor[(6, 16, 14), float64] */;
  %410 = cast(meta[relay.Constant][30] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %411 = cast(meta[relay.Constant][30] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %412 = reshape(%410, newshape=[4, 3, 5]) /* ty=Tensor[(4, 3, 5), float64] */;
  %413 = reshape(%411, newshape=[4, 3, 5]) /* ty=Tensor[(4, 3, 5), float64] */;
  %414 = @func_382(%412, %413) /* ty=(Tensor[(4, 3, 5), float64],) */;
  %415 = %405.2;
  %416 = asin(%409) /* ty=Tensor[(6, 16, 14), float64] */;
  %417 = %414.0;
  (%415, %var_1977, %416, %417, meta[relay.Constant][30] /* ty=Tensor[(60), float64] */)
}

def @func_8378(%var_8375: Tensor[(1620), float64]) -> (Tensor[(15, 9, ?), float32], Tensor[(15, 9, 12), bool], Tensor[(1620), float64]) {
  %418 = @func_5438() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(15, 9, ?), float32]) */;
  %419 = cast(%var_8375, dtype="float64") /* ty=Tensor[(1620), float64] */;
  %420 = reshape(%419, newshape=[15, 9, 12]) /* ty=Tensor[(15, 9, 12), float64] */;
  %421 = %418.1;
  %422 = @func_3274(%420) /* ty=Tensor[(15, 9, 12), bool] */;
  (%421, %422, %var_8375)
}

def @func_2431() -> (Tensor[(15, 9, 1), float32],) {
  %423 = @func_2200() /* ty=Tensor[(15, 9, 1), float32] */;
  (%423,)
}

def @func_7224() -> (Tensor[(4, 3, 5), float64], Tensor[(640), uint8]) {
  %424 = @func_5872() /* ty=(Tensor[(4, 3, 5), float64],) */;
  %425 = @func_4710() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(640), uint8]) */;
  %426 = %424.0;
  %427 = %425.1;
  (%426, %427)
}

def @func_6426() -> (Tensor[(4, 3, 5), float32], Tensor[(15, 9, 640), uint16], Tensor[(15, 9, 1), float32]) {
  %428 = cast(meta[relay.Constant][31] /* ty=Tensor[(640), uint8] */, dtype="uint8") /* ty=Tensor[(640), uint8] */;
  %429 = reshape(%428, newshape=[640]) /* ty=Tensor[(640), uint8] */;
  %430 = @func_3755(%429) /* ty=(Tensor[(4, 3, 5), float64], Tensor[(4, 3, 5), float32], Tensor[(640), uint8]) */;
  %431 = @func_2431() /* ty=(Tensor[(15, 9, 1), float32],) */;
  %432 = %431.0;
  %433 = cast(%432, dtype="uint64") /* ty=Tensor[(15, 9, 1), uint64] */;
  %434 = cast(meta[relay.Constant][31] /* ty=Tensor[(640), uint8] */, dtype="uint64") /* ty=Tensor[(640), uint64] */;
  %435 = bitwise_and(%433, %434) /* ty=Tensor[(15, 9, 640), uint64] */;
  %436 = cast(%435, dtype="uint16") /* ty=Tensor[(15, 9, 640), uint16] */;
  %437 = cast(%432, dtype="uint16") /* ty=Tensor[(15, 9, 1), uint16] */;
  %438 = %430.1;
  %439 = minimum(%436, %437) /* ty=Tensor[(15, 9, 640), uint16] */;
  %440 = @func_2507() /* ty=Tensor[(15, 9, 1), float32] */;
  (%438, %439, %440)
}

def @func_4618(%var_4605: Tensor[(15, 9, 2), float32]) -> (Tensor[(4, 3, 5), float32], Tensor[(15, 9, 1), float64], Tensor[(15, 9, 2), uint8], Tensor[(4, 3, 5), float64], Tensor[(640), uint8]) {
  %441 = @func_4062() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64]) */;
  %442 = %441.0;
  %443 = cast(%442, dtype="float32") /* ty=Tensor[(15, 9, 1), float32] */;
  %444 = acos(%443) /* ty=Tensor[(15, 9, 1), float32] */;
  %445 = cast(%444, dtype="float64") /* ty=Tensor[(15, 9, 1), float64] */;
  %446 = cast(%444, dtype="uint8") /* ty=Tensor[(15, 9, 1), uint8] */;
  %447 = cast(%var_4605, dtype="uint8") /* ty=Tensor[(15, 9, 2), uint8] */;
  %448 = cast(meta[relay.Constant][32] /* ty=Tensor[(640), uint8] */, dtype="uint8") /* ty=Tensor[(640), uint8] */;
  %449 = reshape(%448, newshape=[640]) /* ty=Tensor[(640), uint8] */;
  %450 = @func_3067(%449) /* ty=(Tensor[(4, 3, 5), float64], Tensor[(8, 8, 10), uint8], Tensor[(640), uint8]) */;
  %451 = @func_4515() /* ty=Tensor[(4, 3, 5), float32] */;
  %452 = cosh(%445) /* ty=Tensor[(15, 9, 1), float64] */;
  %453 = bitwise_and(%446, %447) /* ty=Tensor[(15, 9, 2), uint8] */;
  %454 = %450.0;
  (%451, %452, %453, %454, meta[relay.Constant][32] /* ty=Tensor[(640), uint8] */)
}

def @func_2731() -> (Tensor[(4, 3, 5), float32],) {
  %455 = @func_2536() /* ty=Tensor[(4, 3, 5), float64] */;
  %456 = cast(%455, dtype="float64") /* ty=Tensor[(4, 3, 5), float64] */;
  %457 = asinh(%456) /* ty=Tensor[(4, 3, 5), float64] */;
  %458 = cast(%457, dtype="float32") /* ty=Tensor[(4, 3, 5), float32] */;
  %459 = rsqrt(%458) /* ty=Tensor[(4, 3, 5), float32] */;
  (%459,)
}

def @func_5589(%var_5531: Tensor[(4, 3, 5), float32]) -> (Tensor[(4, 3, 5), bool], Tensor[(15, 9, 1), float32], Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64]) {
  %460 = @func_2731() /* ty=(Tensor[(4, 3, 5), float32],) */;
  %461 = %460.0;
  %462 = cast(%var_5531, dtype="bool") /* ty=Tensor[(4, 3, 5), bool] */;
  %463 = shape_of(%461, dtype="int32") /* ty=Tensor[(3), int32] */;
  %464 = cast(%461, dtype="bool") /* ty=Tensor[(4, 3, 5), bool] */;
  %465 = dyn.reshape(%462, %463, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %466 = @func_2551() /* ty=(Tensor[(15, 9, 1), float32],) */;
  %467 = @func_3384() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64]) */;
  %468 = cast(%461, dtype="float64") /* ty=Tensor[(4, 3, 5), float64] */;
  %469 = less(%464, %465) /* ty=Tensor[(4, 3, 5), bool] */;
  %470 = %466.0;
  %471 = %467.0;
  %472 = sqrt(%468) /* ty=Tensor[(4, 3, 5), float64] */;
  (%469, %470, %471, %472)
}

def @func_6154() -> Tensor[(4, 3, 5), bool] {
  @func_5926() /* ty=Tensor[(4, 3, 5), bool] */
}

def @func_5755(%var_5730: int8) -> (Tensor[(5, 4, 16), int8], Tensor[(4, 3, 5), float32]) {
  %473 = cast(%var_5730, dtype="int8") /* ty=int8 */;
  %474 = cast(meta[relay.Constant][33] /* ty=Tensor[(5, 4, 16), int8] */, dtype="int8") /* ty=Tensor[(5, 4, 16), int8] */;
  %475 = logical_xor(%473, %474) /* ty=Tensor[(5, 4, 16), int8] */;
  %476 = @func_4515() /* ty=Tensor[(4, 3, 5), float32] */;
  (%475, %476)
}

def @func_5926() -> Tensor[(4, 3, 5), bool] {
  @func_3434() /* ty=Tensor[(4, 3, 5), bool] */
}

def @func_3434() -> Tensor[(4, 3, 5), bool] {
  %477 = @func_2959() /* ty=(Tensor[(4, 3, 5), float32], Tensor[(4, 3, 5), bool]) */;
  %477.1
}

def @func_3015(%var_2978: Tensor[(14, 7, 6), int16]) -> (Tensor[(14, 7, 6), float64], Tensor[(14, 7, 6), float64]) {
  %478 = cast(%var_2978, dtype="int16") /* ty=Tensor[(14, 7, 6), int16] */;
  %479 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(14, 7, 6), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %480 = cast(meta[relay.Constant][34] /* ty=Tensor[(14, 7, 6), int16] */, dtype="int16") /* ty=Tensor[(14, 7, 6), int16] */;
  %481 = dyn.reshape(%478, %479, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %482 = bitwise_xor(%480, %481) /* ty=Tensor[(14, 7, 6), int16] */;
  %483 = cast(%482, dtype="bool") /* ty=Tensor[(14, 7, 6), bool] */;
  %484 = shape_of(%var_2978, dtype="int32") /* ty=Tensor[(3), int32] */;
  %485 = cast(%var_2978, dtype="bool") /* ty=Tensor[(14, 7, 6), bool] */;
  %486 = dyn.reshape(%483, %484, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %487 = logical_and(%485, %486) /* ty=Tensor[(14, 7, 6), bool] */;
  %488 = cast(%487, dtype="int8") /* ty=Tensor[(14, 7, 6), int8] */;
  %489 = shape_of(%482, dtype="int32") /* ty=Tensor[(3), int32] */;
  %490 = cast(%482, dtype="int8") /* ty=Tensor[(14, 7, 6), int8] */;
  %491 = dyn.reshape(%488, %489, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %492 = maximum(%490, %491) /* ty=Tensor[(14, 7, 6), int8] */;
  %493 = cast(%492, dtype="float64") /* ty=Tensor[(14, 7, 6), float64] */;
  %494 = shape_of(%487, dtype="int32") /* ty=Tensor[(3), int32] */;
  %495 = cast(%487, dtype="float64") /* ty=Tensor[(14, 7, 6), float64] */;
  %496 = dyn.reshape(%493, %494, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %497 = cast(meta[relay.Constant][34] /* ty=Tensor[(14, 7, 6), int16] */, dtype="float64") /* ty=Tensor[(14, 7, 6), float64] */;
  %498 = mod(%495, %496) /* ty=Tensor[(14, 7, 6), float64] */;
  %499 = acos(%497) /* ty=Tensor[(14, 7, 6), float64] */;
  (%498, %499)
}

def @func_4177() -> Tensor[(15, 9, 1), float32] {
  @func_2507() /* ty=Tensor[(15, 9, 1), float32] */
}

def @func_8335(%var_8330: Tensor[(32), uint64], %var_8331: Tensor[(2730), uint32]) -> (Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), bool], Tensor[(4, 3, 5), float64], Tensor[(32), uint64], Tensor[(2730), uint32]) {
  %500 = @func_2431() /* ty=(Tensor[(15, 9, 1), float32],) */;
  %501 = @func_7653() /* ty=(Tensor[(4, 3, 5), float32], Tensor[(4, 3, 5), float32]) */;
  %502 = %501.1;
  %503 = cast(%502, dtype="float64") /* ty=Tensor[(4, 3, 5), float64] */;
  %504 = tan(%503) /* ty=Tensor[(4, 3, 5), float64] */;
  %505 = cast(%502, dtype="bool") /* ty=Tensor[(4, 3, 5), bool] */;
  %506 = shape_of(%504, dtype="int32") /* ty=Tensor[(3), int32] */;
  %507 = cast(%504, dtype="bool") /* ty=Tensor[(4, 3, 5), bool] */;
  %508 = dyn.reshape(%505, %506, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %509 = cast(%var_8330, dtype="uint64") /* ty=Tensor[(32), uint64] */;
  %510 = cast(%var_8331, dtype="uint32") /* ty=Tensor[(2730), uint32] */;
  %511 = reshape(%509, newshape=[32]) /* ty=Tensor[(32), uint64] */;
  %512 = reshape(%510, newshape=[2730]) /* ty=Tensor[(2730), uint32] */;
  %513 = @func_3632(%511, %512) /* ty=(Tensor[(4, 3, 5), float64], Tensor[(60, 1), float64], Tensor[(4), uint64], Tensor[(32), uint64], Tensor[(14, 15, 13), float64], Tensor[(2730), uint32]) */;
  %514 = %500.0;
  %515 = logical_and(%507, %508) /* ty=Tensor[(4, 3, 5), bool] */;
  %516 = %513.0;
  (%514, %515, %516, %var_8330, %var_8331)
}

def @func_6679(%var_6649: Tensor[(11, 4, 5), int64], %var_6650: Tensor[(11, 4, 5), int64], %var_6658: Tensor[(6, 45), float32]) -> (Tensor[(11, 4, 5), int64], Tensor[(15, 9, 2), bool], Tensor[(6, 45), float32]) {
  %517 = cast(%var_6650, dtype="int64") /* ty=Tensor[(11, 4, 5), int64] */;
  %518 = shape_of(%var_6649, dtype="int32") /* ty=Tensor[(3), int32] */;
  %519 = cast(%var_6649, dtype="int64") /* ty=Tensor[(11, 4, 5), int64] */;
  %520 = dyn.reshape(%517, %518, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %521 = cast(%var_6658, dtype="float32") /* ty=Tensor[(6, 45), float32] */;
  %522 = reshape(%521, newshape=[15, 9, 2]) /* ty=Tensor[(15, 9, 2), float32] */;
  %523 = @func_6500(%522) /* ty=(Tensor[(15, 9, 2), bool], Tensor[(15, 9, 2), float32]) */;
  %524 = bitwise_and(%519, %520) /* ty=Tensor[(11, 4, 5), int64] */;
  %525 = %523.0;
  (%524, %525, %var_6658)
}

def @func_3316() -> (Tensor[(4, 3, 5), float64],) {
  %526 = @func_2536() /* ty=Tensor[(4, 3, 5), float64] */;
  (%526,)
}

def @func_3082() -> (Tensor[(15, 9, 1), float64],) {
  %527 = @func_2130() /* ty=(Tensor[(15, 9, 1), float32],) */;
  %528 = %527.0;
  %529 = cast(%528, dtype="float64") /* ty=Tensor[(15, 9, 1), float64] */;
  %530 = sigmoid(%529) /* ty=Tensor[(15, 9, 1), float64] */;
  (%530,)
}

def @func_3524(%var_3518: Tensor[(640), uint8]) -> (Tensor[(4, 3, 5), float32], Tensor[(4, 3, 5), float32], Tensor[(8, 8, 10), uint8], Tensor[(640), uint8]) {
  %531 = @func_2959() /* ty=(Tensor[(4, 3, 5), float32], Tensor[(4, 3, 5), bool]) */;
  %532 = @func_2731() /* ty=(Tensor[(4, 3, 5), float32],) */;
  %533 = %532.0;
  %534 = cast(%533, dtype="float32") /* ty=Tensor[(4, 3, 5), float32] */;
  %535 = cast(%var_3518, dtype="uint8") /* ty=Tensor[(640), uint8] */;
  %536 = reshape(%535, newshape=[8, 8, 10]) /* ty=Tensor[(8, 8, 10), uint8] */;
  %537 = @func_1609(%536) /* ty=(Tensor[(8, 8, 10), uint8],) */;
  %538 = %531.0;
  %539 = atan(%534) /* ty=Tensor[(4, 3, 5), float32] */;
  %540 = %537.0;
  (%538, %539, %540, %var_3518)
}

def @func_6284(%var_6262: Tensor[(15, 9, 9), float32]) -> (Tensor[(15, 9, 9), float32],) {
  %541 = @func_2431() /* ty=(Tensor[(15, 9, 1), float32],) */;
  %542 = %541.0;
  %543 = cast(%542, dtype="float32") /* ty=Tensor[(15, 9, 1), float32] */;
  %544 = cast(%var_6262, dtype="float32") /* ty=Tensor[(15, 9, 9), float32] */;
  %545 = power(%543, %544) /* ty=Tensor[(15, 9, 9), float32] */;
  (%545,)
}

def @func_6500(%var_6493: Tensor[(15, 9, 2), float32]) -> (Tensor[(15, 9, 2), bool], Tensor[(15, 9, 2), float32]) {
  %546 = @func_2200() /* ty=Tensor[(15, 9, 1), float32] */;
  %547 = cast(%546, dtype="bool") /* ty=Tensor[(15, 9, 1), bool] */;
  %548 = cast(%var_6493, dtype="bool") /* ty=Tensor[(15, 9, 2), bool] */;
  %549 = cast(%var_6493, dtype="float32") /* ty=Tensor[(15, 9, 2), float32] */;
  %550 = greater(%547, %548) /* ty=Tensor[(15, 9, 2), bool] */;
  %551 = cosh(%549) /* ty=Tensor[(15, 9, 2), float32] */;
  (%550, %551)
}

def @func_4687() -> (Tensor[(4, 3, 5), float32], Tensor[(4, 3, 5), float32], Tensor[(640), uint8], Tensor[(4, 3, 5), float64]) {
  %552 = @func_4042() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float32]) */;
  %553 = cast(meta[relay.Constant][35] /* ty=Tensor[(640), uint8] */, dtype="uint8") /* ty=Tensor[(640), uint8] */;
  %554 = reshape(%553, newshape=[640]) /* ty=Tensor[(640), uint8] */;
  %555 = @func_3524(%554) /* ty=(Tensor[(4, 3, 5), float32], Tensor[(4, 3, 5), float32], Tensor[(8, 8, 10), uint8], Tensor[(640), uint8]) */;
  %556 = @func_3448() /* ty=(Tensor[(4, 3, 5), float64],) */;
  %557 = %552.1;
  %558 = %555.1;
  %559 = %556.0;
  (%557, %558, meta[relay.Constant][35] /* ty=Tensor[(640), uint8] */, %559)
}

def @func_8471() -> (Tensor[(4, 3, 5), float64], Tensor[(4, 3, 5), float64], Tensor[(4), uint64], Tensor[(32, 1), uint64]) {
  %560 = @func_5872() /* ty=(Tensor[(4, 3, 5), float64],) */;
  %561 = cast(meta[relay.Constant][36] /* ty=Tensor[(4), uint64] */, dtype="uint64") /* ty=Tensor[(4), uint64] */;
  %562 = cast(meta[relay.Constant][37] /* ty=Tensor[(32, 1), uint64] */, dtype="uint64") /* ty=Tensor[(32, 1), uint64] */;
  %563 = reshape(%561, newshape=[2, 2, 1]) /* ty=Tensor[(2, 2, 1), uint64] */;
  %564 = reshape(%562, newshape=[2, 2, 8]) /* ty=Tensor[(2, 2, 8), uint64] */;
  %565 = @func_665(%563, %564) /* ty=(Tensor[(2, 2, 8), bool], Tensor[(60), float64], Tensor[(2730), uint32], Tensor[(60, 1), float64], Tensor[(4, 3, 5), float64]) */;
  %566 = %560.0;
  %567 = %565.4;
  (%566, %567, meta[relay.Constant][36] /* ty=Tensor[(4), uint64] */, meta[relay.Constant][37] /* ty=Tensor[(32, 1), uint64] */)
}

def @func_4346() -> (Tensor[(4, 3, 5), float32],) {
  %568 = @func_3207() /* ty=(Tensor[(4, 3, 5), float32],) */;
  %569 = %568.0;
  (%569,)
}

def @func_4995(%var_4990: Tensor[(15, 9, 1), float32]) -> Tensor[(15, 9, ?), int64] {
  %570 = @func_2130() /* ty=(Tensor[(15, 9, 1), float32],) */;
  %571 = %570.0;
  %572 = cast(%var_4990, dtype="int64") /* ty=Tensor[(15, 9, 1), int64] */;
  %573 = shape_of(%571, dtype="int32") /* ty=Tensor[(3), int32] */;
  %574 = cast(%571, dtype="int64") /* ty=Tensor[(15, 9, 1), int64] */;
  %575 = dyn.reshape(%572, %573, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  left_shift(%574, %575) /* ty=Tensor[(15, 9, ?), int64] */
}

def @func_4128(%var_4115: Tensor[(12, 10, 14), float64], %var_4119: Tensor[(1344), int16]) -> (Tensor[(12, 10, 14), float64], Tensor[(60), float64], Tensor[(1344), int16]) {
  %576 = cast(%var_4115, dtype="float64") /* ty=Tensor[(12, 10, 14), float64] */;
  %577 = cast(%var_4119, dtype="int16") /* ty=Tensor[(1344), int16] */;
  %578 = reshape(%577, newshape=[1344]) /* ty=Tensor[(1344), int16] */;
  %579 = @func_1992(%578) /* ty=(Tensor[(4, 1), uint64], Tensor[(1344), int16], Tensor[(6, 16, 14), float64], Tensor[(4, 3, 5), float64], Tensor[(60), float64]) */;
  %580 = atan(%576) /* ty=Tensor[(12, 10, 14), float64] */;
  %581 = %579.4;
  (%580, %581, %var_4119)
}

def @func_4042() -> (Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float32]) {
  %582 = @func_3207() /* ty=(Tensor[(4, 3, 5), float32],) */;
  %583 = @func_2507() /* ty=Tensor[(15, 9, 1), float32] */;
  %584 = %582.0;
  (%583, %584)
}

def @func_7201() -> (Tensor[(60), float64], Tensor[(640), uint8], Tensor[(4, 3, 5), float64], Tensor[(1, 4), uint64], Tensor[(4, 3, 5), float64]) {
  %585 = @func_4113() /* ty=(Tensor[(4, 3, 5), float32], Tensor[(60), float64], Tensor[(1620), float32]) */;
  %586 = cast(meta[relay.Constant][38] /* ty=Tensor[(1, 4), uint64] */, dtype="uint64") /* ty=Tensor[(1, 4), uint64] */;
  %587 = reshape(%586, newshape=[4]) /* ty=Tensor[(4), uint64] */;
  %588 = @func_885(%587) /* ty=(Tensor[(2, 4, 14), float32], Tensor[(4, 3, 5), float64], Tensor[(4), uint64], Tensor[(32), uint64], Tensor[(4, 3, 5), float64]) */;
  %589 = %588.1;
  %590 = cast(%589, dtype="float64") /* ty=Tensor[(4, 3, 5), float64] */;
  %591 = reshape(%590, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %592 = @func_2467(%591) /* ty=(Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64], Tensor[(60), float64]) */;
  %593 = %585.1;
  %594 = @func_4668() /* ty=Tensor[(640), uint8] */;
  %595 = %592.1;
  (%593, %594, %589, meta[relay.Constant][38] /* ty=Tensor[(1, 4), uint64] */, %595)
}

def @func_8493() -> (Tensor[(15, 9, 1), float32],) {
  %596 = @func_4177() /* ty=Tensor[(15, 9, 1), float32] */;
  (%596,)
}

def @func_4888() -> (Tensor[(4, 3, 5), float64], Tensor[(4, 3, 5), float64]) {
  %597 = @func_3384() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64]) */;
  %598 = %597.2;
  %599 = cast(%598, dtype="float64") /* ty=Tensor[(4, 3, 5), float64] */;
  %600 = cast(%598, dtype="float64") /* ty=Tensor[(4, 3, 5), float64] */;
  %601 = reshape(%599, newshape=[4, 3, 5]) /* ty=Tensor[(4, 3, 5), float64] */;
  %602 = reshape(%600, newshape=[4, 3, 5]) /* ty=Tensor[(4, 3, 5), float64] */;
  %603 = @func_382(%601, %602) /* ty=(Tensor[(4, 3, 5), float64],) */;
  %604 = %603.0;
  (%598, %604)
}

def @func_3151(%var_3131: Tensor[(40, 16), uint8]) -> (Tensor[(15, 9, 1), float64], Tensor[(4, 3, 5), float64], Tensor[(8, 8, 10), uint8], Tensor[(40, 16), uint8], Tensor[(4, 3, 5), float32]) {
  %605 = @func_2200() /* ty=Tensor[(15, 9, 1), float32] */;
  %606 = cast(%605, dtype="float64") /* ty=Tensor[(15, 9, 1), float64] */;
  %607 = @func_1922() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64], Tensor[(4, 1), uint64]) */;
  %608 = cast(%var_3131, dtype="uint8") /* ty=Tensor[(40, 16), uint8] */;
  %609 = reshape(%608, newshape=[8, 8, 10]) /* ty=Tensor[(8, 8, 10), uint8] */;
  %610 = @func_1609(%609) /* ty=(Tensor[(8, 8, 10), uint8],) */;
  %611 = @func_1922() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64], Tensor[(4, 1), uint64]) */;
  %612 = %611.1;
  %613 = cast(%612, dtype="float32") /* ty=Tensor[(4, 3, 5), float32] */;
  %614 = atanh(%606) /* ty=Tensor[(15, 9, 1), float64] */;
  %615 = %607.1;
  %616 = %610.0;
  %617 = log(%613) /* ty=Tensor[(4, 3, 5), float32] */;
  (%614, %615, %616, %var_3131, %617)
}

def @func_3632(%var_3611: Tensor[(32), uint64], %var_3619: Tensor[(2730), uint32]) -> (Tensor[(4, 3, 5), float64], Tensor[(60, 1), float64], Tensor[(4), uint64], Tensor[(32), uint64], Tensor[(14, 15, 13), float64], Tensor[(2730), uint32]) {
  %618 = @func_1922() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64], Tensor[(4, 1), uint64]) */;
  %619 = cast(meta[relay.Constant][39] /* ty=Tensor[(4), uint64] */, dtype="uint64") /* ty=Tensor[(4), uint64] */;
  %620 = cast(%var_3611, dtype="uint64") /* ty=Tensor[(32), uint64] */;
  %621 = reshape(%619, newshape=[2, 2, 1]) /* ty=Tensor[(2, 2, 1), uint64] */;
  %622 = reshape(%620, newshape=[2, 2, 8]) /* ty=Tensor[(2, 2, 8), uint64] */;
  %623 = @func_665(%621, %622) /* ty=(Tensor[(2, 2, 8), bool], Tensor[(60), float64], Tensor[(2730), uint32], Tensor[(60, 1), float64], Tensor[(4, 3, 5), float64]) */;
  %624 = cast(%var_3619, dtype="uint32") /* ty=Tensor[(2730), uint32] */;
  %625 = cast(%var_3619, dtype="uint32") /* ty=Tensor[(2730), uint32] */;
  %626 = %623.3;
  %627 = cast(%626, dtype="float64") /* ty=Tensor[(60, 1), float64] */;
  %628 = reshape(%624, newshape=[14, 15, 13]) /* ty=Tensor[(14, 15, 13), uint32] */;
  %629 = reshape(%625, newshape=[14, 15, 13]) /* ty=Tensor[(14, 15, 13), uint32] */;
  %630 = reshape(%627, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %631 = @func_607(%628, %629, %630) /* ty=(Tensor[(14, 15, 13), uint32], Tensor[(14, 15, 13), float64], Tensor[(4, 3, 5), float64], Tensor[(60), float64]) */;
  %632 = %618.1;
  %633 = %631.1;
  (%632, %626, meta[relay.Constant][39] /* ty=Tensor[(4), uint64] */, %var_3611, %633, %var_3619)
}

def @func_6951() -> (Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float32], Tensor[(15, 9, 1), float32]) {
  %634 = @func_2731() /* ty=(Tensor[(4, 3, 5), float32],) */;
  %635 = @func_2551() /* ty=(Tensor[(15, 9, 1), float32],) */;
  %636 = @func_5489() /* ty=Tensor[(15, 9, 1), float32] */;
  %637 = %634.0;
  %638 = %635.0;
  (%636, %637, %638)
}

def @func_4949() -> (Tensor[(4, 3, 5), float32],) {
  %639 = @func_2731() /* ty=(Tensor[(4, 3, 5), float32],) */;
  %640 = %639.0;
  (%640,)
}

def @func_3912(%var_3874: Tensor[(12, 3, 9), float64]) -> (Tensor[(12, 3, 9), float64], Tensor[(12, 3, 9), float64]) {
  %641 = cast(%var_3874, dtype="float64") /* ty=Tensor[(12, 3, 9), float64] */;
  %642 = cast(%var_3874, dtype="float64") /* ty=Tensor[(12, 3, 9), float64] */;
  %643 = rsqrt(%641) /* ty=Tensor[(12, 3, 9), float64] */;
  %644 = asinh(%642) /* ty=Tensor[(12, 3, 9), float64] */;
  (%643, %644)
}

def @func_7487(%var_7430: Tensor[(1, 12, 10), float64], %var_7436: int8, %var_7459: Tensor[(5, 4, 16), float32], %var_7485: Tensor[(60), float64]) -> (Tensor[(1, 12, 10), float64], int8, Tensor[(5, 4, 16), uint64], Tensor[(5, 4, 16), float64], Tensor[(60), float64], Tensor[(2730), uint32], Tensor[(60), float64]) {
  %645 = cast(%var_7430, dtype="float64") /* ty=Tensor[(1, 12, 10), float64] */;
  %646 = cast(%var_7436, dtype="int8") /* ty=int8 */;
  %647 = reshape(%646, newshape=[]) /* ty=int8 */;
  %648 = @func_5755(%647) /* ty=(Tensor[(5, 4, 16), int8], Tensor[(4, 3, 5), float32]) */;
  %649 = %648.0;
  %650 = cast(%649, dtype="float32") /* ty=Tensor[(5, 4, 16), float32] */;
  %651 = atan(%650) /* ty=Tensor[(5, 4, 16), float32] */;
  %652 = cast(%var_7459, dtype="uint64") /* ty=Tensor[(5, 4, 16), uint64] */;
  %653 = shape_of(%651, dtype="int32") /* ty=Tensor[(3), int32] */;
  %654 = cast(%651, dtype="uint64") /* ty=Tensor[(5, 4, 16), uint64] */;
  %655 = dyn.reshape(%652, %653, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %656 = cast(%651, dtype="float64") /* ty=Tensor[(5, 4, 16), float64] */;
  %657 = cast(meta[relay.Constant][40] /* ty=Tensor[(2730), uint32] */, dtype="uint32") /* ty=Tensor[(2730), uint32] */;
  %658 = cast(meta[relay.Constant][40] /* ty=Tensor[(2730), uint32] */, dtype="uint32") /* ty=Tensor[(2730), uint32] */;
  %659 = cast(%var_7485, dtype="float64") /* ty=Tensor[(60), float64] */;
  %660 = reshape(%657, newshape=[14, 15, 13]) /* ty=Tensor[(14, 15, 13), uint32] */;
  %661 = reshape(%658, newshape=[14, 15, 13]) /* ty=Tensor[(14, 15, 13), uint32] */;
  %662 = reshape(%659, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %663 = @func_607(%660, %661, %662) /* ty=(Tensor[(14, 15, 13), uint32], Tensor[(14, 15, 13), float64], Tensor[(4, 3, 5), float64], Tensor[(60), float64]) */;
  %664 = cos(%645) /* ty=Tensor[(1, 12, 10), float64] */;
  %665 = bitwise_or(%654, %655) /* ty=Tensor[(5, 4, 16), uint64] */;
  %666 = acos(%656) /* ty=Tensor[(5, 4, 16), float64] */;
  %667 = %663.3;
  (%664, %var_7436, %665, %666, %667, meta[relay.Constant][40] /* ty=Tensor[(2730), uint32] */, %var_7485)
}

def @func_4668() -> Tensor[(640), uint8] {
  %668 = @func_4383() /* ty=(Tensor[(640), uint8],) */;
  %668.0
}

def @func_9276() -> (Tensor[(4, 3, 5), float64],) {
  %669 = @func_4062() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64]) */;
  %670 = %669.1;
  (%670,)
}

def @func_2536() -> Tensor[(4, 3, 5), float64] {
  %671 = @func_1922() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64], Tensor[(4, 1), uint64]) */;
  %671.1
}

def @func_6917() -> Tensor[(4, 3, 5), float32] {
  @func_4413() /* ty=Tensor[(4, 3, 5), float32] */
}

def @func_4304(%var_4286: Tensor[(45), int8], %var_4295: Tensor[(4, 3, 5), float64]) -> (Tensor[(4, 3, 5), float64], Tensor[(10, 6, 15), int32], Tensor[(900), int32], Tensor[(10, 6, 15), int32], Tensor[(1, 15, 3), int8], Tensor[(45), int8], Tensor[(60), float64], Tensor[(4, 3, 5), bool]) {
  %672 = @func_3448() /* ty=(Tensor[(4, 3, 5), float64],) */;
  %673 = cast(meta[relay.Constant][41] /* ty=Tensor[(900), int32] */, dtype="int32") /* ty=Tensor[(900), int32] */;
  %674 = cast(meta[relay.Constant][41] /* ty=Tensor[(900), int32] */, dtype="int32") /* ty=Tensor[(900), int32] */;
  %675 = reshape(%673, newshape=[10, 6, 15]) /* ty=Tensor[(10, 6, 15), int32] */;
  %676 = reshape(%674, newshape=[10, 6, 15]) /* ty=Tensor[(10, 6, 15), int32] */;
  %677 = @func_1504(%675, %676) /* ty=(Tensor[(10, 6, 15), int32],) */;
  %678 = cast(meta[relay.Constant][41] /* ty=Tensor[(900), int32] */, dtype="int32") /* ty=Tensor[(900), int32] */;
  %679 = %677.0;
  %680 = cast(%679, dtype="int32") /* ty=Tensor[(10, 6, 15), int32] */;
  %681 = reshape(%678, newshape=[10, 6, 15]) /* ty=Tensor[(10, 6, 15), int32] */;
  %682 = reshape(%680, newshape=[10, 6, 15]) /* ty=Tensor[(10, 6, 15), int32] */;
  %683 = @func_1504(%681, %682) /* ty=(Tensor[(10, 6, 15), int32],) */;
  %684 = cast(%var_4286, dtype="int8") /* ty=Tensor[(45), int8] */;
  %685 = reshape(%684, newshape=[1, 15, 3]) /* ty=Tensor[(1, 15, 3), int8] */;
  %686 = @func_4198(%685) /* ty=(Tensor[(1, 15, 3), int8],) */;
  %687 = %672.0;
  %688 = cast(%687, dtype="float64") /* ty=Tensor[(4, 3, 5), float64] */;
  %689 = reshape(%688, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %690 = @func_2467(%689) /* ty=(Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64], Tensor[(60), float64]) */;
  %691 = @func_4062() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64]) */;
  %692 = %691.1;
  %693 = cast(%var_4295, dtype="bool") /* ty=Tensor[(4, 3, 5), bool] */;
  %694 = shape_of(%692, dtype="int32") /* ty=Tensor[(3), int32] */;
  %695 = cast(%692, dtype="bool") /* ty=Tensor[(4, 3, 5), bool] */;
  %696 = dyn.reshape(%693, %694, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %697 = %683.0;
  %698 = %686.0;
  %699 = %690.2;
  %700 = less_equal(%695, %696) /* ty=Tensor[(4, 3, 5), bool] */;
  (%687, %679, meta[relay.Constant][41] /* ty=Tensor[(900), int32] */, %697, %698, %var_4286, %699, %700)
}

def @func_4786(%var_4715: Tensor[(12, 2, 2), float64], %var_4716: Tensor[(12, 2, 2), float64]) -> (Tensor[(12, 2, 2), bool], Tensor[(4, 3, 5), float32], Tensor[(4, 3, 5), float32], Tensor[(4, 3, 5), float32], Tensor[(15, 9, 1), float32]) {
  %701 = cast(%var_4716, dtype="bool") /* ty=Tensor[(12, 2, 2), bool] */;
  %702 = shape_of(%var_4715, dtype="int32") /* ty=Tensor[(3), int32] */;
  %703 = cast(%var_4715, dtype="bool") /* ty=Tensor[(12, 2, 2), bool] */;
  %704 = dyn.reshape(%701, %702, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %705 = @func_3207() /* ty=(Tensor[(4, 3, 5), float32],) */;
  %706 = @func_4042() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float32]) */;
  %707 = @func_2731() /* ty=(Tensor[(4, 3, 5), float32],) */;
  %708 = @func_2551() /* ty=(Tensor[(15, 9, 1), float32],) */;
  %709 = greater(%703, %704) /* ty=Tensor[(12, 2, 2), bool] */;
  %710 = %705.0;
  %711 = %706.1;
  %712 = %707.0;
  %713 = %708.0;
  (%709, %710, %711, %712, %713)
}

def @func_2384(%var_2377: Tensor[(16, 15, 8), float32]) -> (Tensor[(16, 15, 8), float32],) {
  %714 = cast(%var_2377, dtype="float32") /* ty=Tensor[(16, 15, 8), float32] */;
  %715 = exp(%714) /* ty=Tensor[(16, 15, 8), float32] */;
  (%715,)
}

def @func_2959() -> (Tensor[(4, 3, 5), float32], Tensor[(4, 3, 5), bool]) {
  %716 = @func_2731() /* ty=(Tensor[(4, 3, 5), float32],) */;
  %717 = %716.0;
  %718 = cast(meta[relay.Constant][42] /* ty=Tensor[(4, 3, 5), float32] */, dtype="float32") /* ty=Tensor[(4, 3, 5), float32] */;
  %719 = shape_of(%717, dtype="int32") /* ty=Tensor[(3), int32] */;
  %720 = cast(%717, dtype="float32") /* ty=Tensor[(4, 3, 5), float32] */;
  %721 = dyn.reshape(%718, %719, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %722 = maximum(%720, %721) /* ty=Tensor[(4, 3, 5), float32] */;
  %723 = cast(%722, dtype="uint64") /* ty=Tensor[(4, 3, 5), uint64] */;
  %724 = shape_of(%717, dtype="int32") /* ty=Tensor[(3), int32] */;
  %725 = cast(%717, dtype="uint64") /* ty=Tensor[(4, 3, 5), uint64] */;
  %726 = dyn.reshape(%723, %724, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %727 = minimum(%725, %726) /* ty=Tensor[(4, 3, 5), uint64] */;
  %728 = cast(%727, dtype="float32") /* ty=Tensor[(4, 3, 5), float32] */;
  %729 = cosh(%728) /* ty=Tensor[(4, 3, 5), float32] */;
  %730 = cast(%729, dtype="float32") /* ty=Tensor[(4, 3, 5), float32] */;
  %731 = cast(%722, dtype="bool") /* ty=Tensor[(4, 3, 5), bool] */;
  %732 = shape_of(%729, dtype="int32") /* ty=Tensor[(3), int32] */;
  %733 = cast(%729, dtype="bool") /* ty=Tensor[(4, 3, 5), bool] */;
  %734 = dyn.reshape(%731, %732, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %735 = log10(%730) /* ty=Tensor[(4, 3, 5), float32] */;
  %736 = greater(%733, %734) /* ty=Tensor[(4, 3, 5), bool] */;
  (%735, %736)
}

def @func_8559(%var_8545: Tensor[(15, 9, 9), float32]) -> Tensor[(15, 9, 9), uint16] {
  %737 = @func_2507() /* ty=Tensor[(15, 9, 1), float32] */;
  %738 = cast(%737, dtype="uint16") /* ty=Tensor[(15, 9, 1), uint16] */;
  %739 = cast(%var_8545, dtype="uint16") /* ty=Tensor[(15, 9, 9), uint16] */;
  multiply(%738, %739) /* ty=Tensor[(15, 9, 9), uint16] */
}

def @func_1008(%var_1000: Tensor[(6, 16, 14), int16]) -> Tensor[(6, 16, 14), bool] {
  %740 = cast(meta[relay.Constant][43] /* ty=Tensor[(6, 16, 14), int16] */, dtype="bool") /* ty=Tensor[(6, 16, 14), bool] */;
  %741 = shape_of(%var_1000, dtype="int32") /* ty=Tensor[(3), int32] */;
  %742 = cast(%var_1000, dtype="bool") /* ty=Tensor[(6, 16, 14), bool] */;
  %743 = dyn.reshape(%740, %741, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%742, %743) /* ty=Tensor[(6, 16, 14), bool] */
}

def @func_8049() -> (Tensor[(15, 9, 1), float32], Tensor[(210), float32], Tensor[(4, 3, 5), float32], Tensor[(3, 5, 14), bool]) {
  %744 = @func_7653() /* ty=(Tensor[(4, 3, 5), float32], Tensor[(4, 3, 5), float32]) */;
  %745 = cast(meta[relay.Constant][44] /* ty=Tensor[(210), float32] */, dtype="float32") /* ty=Tensor[(210), float32] */;
  %746 = reshape(%745, newshape=[3, 5, 14]) /* ty=Tensor[(3, 5, 14), float32] */;
  %747 = @func_2020(%746) /* ty=(Tensor[(3, 5, 14), float32], Tensor[(4, 3, 5), float64], Tensor[(4), uint64]) */;
  %748 = %747.0;
  %749 = cast(%748, dtype="float32") /* ty=Tensor[(3, 5, 14), float32] */;
  %750 = reshape(%749, newshape=[5, 7, 6]) /* ty=Tensor[(5, 7, 6), float32] */;
  %751 = @func_7277(%750) /* ty=(Tensor[(4, 3, 5), float32], int8, Tensor[(5, 7, 6), float32], Tensor[(5, 7, 6), float32]) */;
  %752 = %751.2;
  %753 = cast(%752, dtype="bool") /* ty=Tensor[(5, 7, 6), bool] */;
  %754 = shape_of(%748, dtype="int32") /* ty=Tensor[(3), int32] */;
  %755 = cast(%748, dtype="bool") /* ty=Tensor[(3, 5, 14), bool] */;
  %756 = dyn.reshape(%753, %754, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %757 = @func_4177() /* ty=Tensor[(15, 9, 1), float32] */;
  %758 = %744.0;
  %759 = less_equal(%755, %756) /* ty=Tensor[(3, 5, 14), bool] */;
  (%757, meta[relay.Constant][44] /* ty=Tensor[(210), float32] */, %758, %759)
}

def @func_4710() -> (Tensor[(15, 9, 1), float32], Tensor[(640), uint8]) {
  %760 = @func_2200() /* ty=Tensor[(15, 9, 1), float32] */;
  %761 = @func_4668() /* ty=Tensor[(640), uint8] */;
  (%760, %761)
}

def @func_9155() -> (Tensor[(4, 3, 5), float32],) {
  %762 = @func_7898() /* ty=Tensor[(4, 3, 5), float32] */;
  (%762,)
}

def @func_5708(%var_5693: Tensor[(4, 3, 5), float32]) -> (Tensor[(4, 3, 5), float32], Tensor[(8, 8, 10), uint8], Tensor[(2, 320), uint8]) {
  %763 = @func_3207() /* ty=(Tensor[(4, 3, 5), float32],) */;
  %764 = %763.0;
  %765 = cast(%var_5693, dtype="int16") /* ty=Tensor[(4, 3, 5), int16] */;
  %766 = shape_of(%764, dtype="int32") /* ty=Tensor[(3), int32] */;
  %767 = cast(%764, dtype="int16") /* ty=Tensor[(4, 3, 5), int16] */;
  %768 = dyn.reshape(%765, %766, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %769 = multiply(%767, %768) /* ty=Tensor[(4, 3, 5), int16] */;
  %770 = cast(%769, dtype="float32") /* ty=Tensor[(4, 3, 5), float32] */;
  %771 = cast(meta[relay.Constant][45] /* ty=Tensor[(2, 320), uint8] */, dtype="uint8") /* ty=Tensor[(2, 320), uint8] */;
  %772 = reshape(%771, newshape=[8, 8, 10]) /* ty=Tensor[(8, 8, 10), uint8] */;
  %773 = @func_1609(%772) /* ty=(Tensor[(8, 8, 10), uint8],) */;
  %774 = sin(%770) /* ty=Tensor[(4, 3, 5), float32] */;
  %775 = %773.0;
  (%774, %775, meta[relay.Constant][45] /* ty=Tensor[(2, 320), uint8] */)
}

def @func_5326(%var_5256: Tensor[(210, 1), float32]) -> (Tensor[(4, 3, 5), bool], Tensor[(4, 3, 5), bool], Tensor[(4, 3, 5), float32], Tensor[(210, 4), uint8], Tensor[(4, 3, 5), float64]) {
  %776 = @func_2959() /* ty=(Tensor[(4, 3, 5), float32], Tensor[(4, 3, 5), bool]) */;
  %777 = @func_2731() /* ty=(Tensor[(4, 3, 5), float32],) */;
  %778 = cast(%var_5256, dtype="float32") /* ty=Tensor[(210, 1), float32] */;
  %779 = reshape(%778, newshape=[3, 5, 14]) /* ty=Tensor[(3, 5, 14), float32] */;
  %780 = @func_2020(%779) /* ty=(Tensor[(3, 5, 14), float32], Tensor[(4, 3, 5), float64], Tensor[(4), uint64]) */;
  %781 = %780.2;
  %782 = cast(%781, dtype="uint8") /* ty=Tensor[(4), uint8] */;
  %783 = cast(%var_5256, dtype="uint8") /* ty=Tensor[(210, 1), uint8] */;
  %784 = @func_1922() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64], Tensor[(4, 1), uint64]) */;
  %785 = %776.1;
  %786 = @func_3434() /* ty=Tensor[(4, 3, 5), bool] */;
  %787 = %777.0;
  %788 = bitwise_and(%782, %783) /* ty=Tensor[(210, 4), uint8] */;
  %789 = %784.1;
  (%785, %786, %787, %788, %789)
}

def @func_382(%var_357: Tensor[(4, 3, 5), float64], %var_358: Tensor[(4, 3, 5), float64]) -> (Tensor[(4, 3, 5), float64],) {
  %790 = cast(%var_358, dtype="float64") /* ty=Tensor[(4, 3, 5), float64] */;
  %791 = shape_of(%var_357, dtype="int32") /* ty=Tensor[(3), int32] */;
  %792 = cast(%var_357, dtype="float64") /* ty=Tensor[(4, 3, 5), float64] */;
  %793 = dyn.reshape(%790, %791, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %794 = mod(%792, %793) /* ty=Tensor[(4, 3, 5), float64] */;
  (%794,)
}

def @func_9331() -> Tensor[(4, 3, 5), float32] {
  %795 = @func_4113() /* ty=(Tensor[(4, 3, 5), float32], Tensor[(60), float64], Tensor[(1620), float32]) */;
  %795.0
}

def @func_8114() -> Tensor[(640), uint8] {
  %796 = @func_4383() /* ty=(Tensor[(640), uint8],) */;
  %796.0
}

def @func_4198(%var_4188: Tensor[(1, 15, 3), int8]) -> (Tensor[(1, 15, 3), int8],) {
  %797 = cast(meta[relay.Constant][46] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %798 = cast(%var_4188, dtype="int8") /* ty=Tensor[(1, 15, 3), int8] */;
  %799 = maximum(%797, %798) /* ty=Tensor[(1, 15, 3), int8] */;
  (%799,)
}

def @func_2337(%var_2295: Tensor[(768), float64], %var_2303: Tensor[(32), uint64]) -> (Tensor[(6, 8, 16), float64], Tensor[(768), float64], Tensor[(15, 9, 32), bool], Tensor[(32, 24), bool]) {
  %800 = cast(%var_2295, dtype="float64") /* ty=Tensor[(768), float64] */;
  %801 = reshape(%800, newshape=[6, 8, 16]) /* ty=Tensor[(6, 8, 16), float64] */;
  %802 = @func_1585(%801) /* ty=(Tensor[(6, 8, 16), float64],) */;
  %803 = @func_2130() /* ty=(Tensor[(15, 9, 1), float32],) */;
  %804 = %803.0;
  %805 = cast(%var_2303, dtype="bool") /* ty=Tensor[(32), bool] */;
  %806 = cast(%804, dtype="bool") /* ty=Tensor[(15, 9, 1), bool] */;
  %807 = cast(%var_2303, dtype="uint64") /* ty=Tensor[(32), uint64] */;
  %808 = %802.0;
  %809 = cast(%808, dtype="float64") /* ty=Tensor[(6, 8, 16), float64] */;
  %810 = reshape(%807, newshape=[32]) /* ty=Tensor[(32), uint64] */;
  %811 = reshape(%809, newshape=[32, 24]) /* ty=Tensor[(32, 24), float64] */;
  %812 = @func_2259(%810, %811) /* ty=(Tensor[(15, 9, 1), float32], Tensor[(2, 2, 8), bool], Tensor[(1, 4), uint64], Tensor[(32), uint64], Tensor[(6, 8, 16), float64], Tensor[(32, 24), float64]) */;
  %813 = %812.5;
  %814 = cast(meta[relay.Constant][47] /* ty=Tensor[(32, 24), float64] */, dtype="bool") /* ty=Tensor[(32, 24), bool] */;
  %815 = shape_of(%813, dtype="int32") /* ty=Tensor[(2), int32] */;
  %816 = cast(%813, dtype="bool") /* ty=Tensor[(32, 24), bool] */;
  %817 = dyn.reshape(%814, %815, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %818 = logical_or(%805, %806) /* ty=Tensor[(15, 9, 32), bool] */;
  %819 = greater_equal(%816, %817) /* ty=Tensor[(32, 24), bool] */;
  (%808, %var_2295, %818, %819)
}

def @func_6812() -> (Tensor[(15, 9, 1), float32], Tensor[(15, 9, 1), float32], Tensor[(15, 9, 1), float32]) {
  %820 = @func_2130() /* ty=(Tensor[(15, 9, 1), float32],) */;
  %821 = @func_6231() /* ty=(Tensor[(4, 3, 5), float32], Tensor[(15, 9, 1), float32]) */;
  %822 = @func_2200() /* ty=Tensor[(15, 9, 1), float32] */;
  %823 = %820.0;
  %824 = %821.1;
  (%822, %823, %824)
}

def @func_7801() -> (Tensor[(15, 9, 1), float32],) {
  %825 = @func_6826() /* ty=Tensor[(15, 9, 1), float32] */;
  (%825,)
}

def @func_5438() -> (Tensor[(15, 9, 1), float32], Tensor[(15, 9, ?), float32]) {
  %826 = @func_2130() /* ty=(Tensor[(15, 9, 1), float32],) */;
  %827 = @func_3384() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64]) */;
  %828 = %827.0;
  %829 = cast(%828, dtype="float64") /* ty=Tensor[(15, 9, 1), float64] */;
  %830 = sinh(%829) /* ty=Tensor[(15, 9, 1), float64] */;
  %831 = cast(%830, dtype="bool") /* ty=Tensor[(15, 9, 1), bool] */;
  %832 = shape_of(%828, dtype="int32") /* ty=Tensor[(3), int32] */;
  %833 = cast(%828, dtype="bool") /* ty=Tensor[(15, 9, 1), bool] */;
  %834 = dyn.reshape(%831, %832, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %835 = not_equal(%833, %834) /* ty=Tensor[(15, 9, ?), bool] */;
  %836 = cast(%828, dtype="float32") /* ty=Tensor[(15, 9, 1), float32] */;
  %837 = shape_of(%835, dtype="int32") /* ty=Tensor[(3), int32] */;
  %838 = cast(%835, dtype="float32") /* ty=Tensor[(15, 9, ?), float32] */;
  %839 = dyn.reshape(%836, %837, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %840 = %826.0;
  %841 = mod(%838, %839) /* ty=Tensor[(15, 9, ?), float32] */;
  (%840, %841)
}

def @func_2467(%var_2450: Tensor[(60), float64]) -> (Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64], Tensor[(60), float64]) {
  %842 = @func_2130() /* ty=(Tensor[(15, 9, 1), float32],) */;
  %843 = cast(%var_2450, dtype="float64") /* ty=Tensor[(60), float64] */;
  %844 = cast(%var_2450, dtype="float64") /* ty=Tensor[(60), float64] */;
  %845 = reshape(%843, newshape=[4, 3, 5]) /* ty=Tensor[(4, 3, 5), float64] */;
  %846 = reshape(%844, newshape=[4, 3, 5]) /* ty=Tensor[(4, 3, 5), float64] */;
  %847 = @func_382(%845, %846) /* ty=(Tensor[(4, 3, 5), float64],) */;
  %848 = %842.0;
  %849 = %847.0;
  (%848, %849, %var_2450)
}

def @func_2816(%var_2811: Tensor[(4, 3, 5), float32]) -> (Tensor[(4, 3, 5), uint32],) {
  %850 = @func_2731() /* ty=(Tensor[(4, 3, 5), float32],) */;
  %851 = %850.0;
  %852 = cast(%var_2811, dtype="uint32") /* ty=Tensor[(4, 3, 5), uint32] */;
  %853 = shape_of(%851, dtype="int32") /* ty=Tensor[(3), int32] */;
  %854 = cast(%851, dtype="uint32") /* ty=Tensor[(4, 3, 5), uint32] */;
  %855 = dyn.reshape(%852, %853, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %856 = logical_xor(%854, %855) /* ty=Tensor[(4, 3, 5), uint32] */;
  (%856,)
}

def @func_6733(%var_6713: Tensor[(768), float64], %var_6725: Tensor[(15, 9, 4), float32]) -> (Tensor[(15, 9, 1), float32], Tensor[(6, 8, 16), float64], Tensor[(768), float64], Tensor[(15, 9, 6), int64], Tensor[(810), float32], Tensor[(15, 9, 4), bool]) {
  %857 = @func_6543() /* ty=(Tensor[(4, 3, 5), float32], Tensor[(15, 9, 1), float32]) */;
  %858 = cast(%var_6713, dtype="float64") /* ty=Tensor[(768), float64] */;
  %859 = reshape(%858, newshape=[6, 8, 16]) /* ty=Tensor[(6, 8, 16), float64] */;
  %860 = @func_1585(%859) /* ty=(Tensor[(6, 8, 16), float64],) */;
  %861 = cast(meta[relay.Constant][48] /* ty=Tensor[(810), float32] */, dtype="float32") /* ty=Tensor[(810), float32] */;
  %862 = reshape(%861, newshape=[15, 9, 6]) /* ty=Tensor[(15, 9, 6), float32] */;
  %863 = @func_3546(%862) /* ty=(Tensor[(15, 9, 6), int64],) */;
  %864 = @func_3384() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64]) */;
  %865 = %864.1;
  %866 = cast(%865, dtype="bool") /* ty=Tensor[(15, 9, 1), bool] */;
  %867 = cast(%var_6725, dtype="bool") /* ty=Tensor[(15, 9, 4), bool] */;
  %868 = %857.1;
  %869 = %860.0;
  %870 = %863.0;
  %871 = not_equal(%866, %867) /* ty=Tensor[(15, 9, 4), bool] */;
  (%868, %869, %var_6713, %870, meta[relay.Constant][48] /* ty=Tensor[(810), float32] */, %871)
}

def @func_7137() -> Tensor[(15, 9, 1), float32] {
  %872 = @func_6231() /* ty=(Tensor[(4, 3, 5), float32], Tensor[(15, 9, 1), float32]) */;
  %872.1
}

def @func_1609(%var_1603: Tensor[(8, 8, 10), uint8]) -> (Tensor[(8, 8, 10), uint8],) {
  %873 = cast(%var_1603, dtype="uint8") /* ty=Tensor[(8, 8, 10), uint8] */;
  %874 = shape_of(meta[relay.Constant][49] /* ty=Tensor[(8, 8, 10), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %875 = cast(meta[relay.Constant][49] /* ty=Tensor[(8, 8, 10), uint8] */, dtype="uint8") /* ty=Tensor[(8, 8, 10), uint8] */;
  %876 = dyn.reshape(%873, %874, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %877 = right_shift(%875, %876) /* ty=Tensor[(8, 8, 10), uint8] */;
  (%877,)
}

def @func_4547() -> (Tensor[(15, 9, 1), float32],) {
  %878 = @func_1922() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64], Tensor[(4, 1), uint64]) */;
  %879 = %878.0;
  (%879,)
}

def @func_2623(%var_2600: Tensor[(15, 9, 12), float32]) -> (Tensor[(15, 9, 12), float32], Tensor[(14, 15, 13), uint32], Tensor[(2730), uint32], Tensor[(60), float64]) {
  %880 = @func_2130() /* ty=(Tensor[(15, 9, 1), float32],) */;
  %881 = %880.0;
  %882 = cast(%881, dtype="float32") /* ty=Tensor[(15, 9, 1), float32] */;
  %883 = cast(%var_2600, dtype="float32") /* ty=Tensor[(15, 9, 12), float32] */;
  %884 = cast(meta[relay.Constant][50] /* ty=Tensor[(2730), uint32] */, dtype="uint32") /* ty=Tensor[(2730), uint32] */;
  %885 = cast(meta[relay.Constant][50] /* ty=Tensor[(2730), uint32] */, dtype="uint32") /* ty=Tensor[(2730), uint32] */;
  %886 = cast(meta[relay.Constant][51] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %887 = reshape(%884, newshape=[14, 15, 13]) /* ty=Tensor[(14, 15, 13), uint32] */;
  %888 = reshape(%885, newshape=[14, 15, 13]) /* ty=Tensor[(14, 15, 13), uint32] */;
  %889 = reshape(%886, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %890 = @func_607(%887, %888, %889) /* ty=(Tensor[(14, 15, 13), uint32], Tensor[(14, 15, 13), float64], Tensor[(4, 3, 5), float64], Tensor[(60), float64]) */;
  %891 = add(%882, %883) /* ty=Tensor[(15, 9, 12), float32] */;
  %892 = %890.0;
  (%891, %892, meta[relay.Constant][50] /* ty=Tensor[(2730), uint32] */, meta[relay.Constant][51] /* ty=Tensor[(60), float64] */)
}

def @func_5199() -> (Tensor[(4, 3, 5), float32], Tensor[(15, 9, 1), float64]) {
  %893 = @func_4042() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float32]) */;
  %894 = @func_2507() /* ty=Tensor[(15, 9, 1), float32] */;
  %895 = cast(%894, dtype="float64") /* ty=Tensor[(15, 9, 1), float64] */;
  %896 = %893.1;
  %897 = sin(%895) /* ty=Tensor[(15, 9, 1), float64] */;
  (%896, %897)
}

def @main(%var_9349: Tensor[(15, 9, 3), float64]) -> Tensor[(15, 9, 3), float32] {
  %898 = @func_3082() /* ty=(Tensor[(15, 9, 1), float64],) */;
  %899 = %898.0;
  %900 = cast(%899, dtype="float32") /* ty=Tensor[(15, 9, 1), float32] */;
  %901 = cast(%var_9349, dtype="float32") /* ty=Tensor[(15, 9, 3), float32] */;
  floor_mod(%900, %901) /* ty=Tensor[(15, 9, 3), float32] */
}

def @func_6185() -> (Tensor[(4, 3, 5), float32], Tensor[(4, 3, 5), bool], Tensor[(4, 3, 5), bool], Tensor[(4, 3, 5), uint32]) {
  %902 = @func_2731() /* ty=(Tensor[(4, 3, 5), float32],) */;
  %903 = @func_5926() /* ty=Tensor[(4, 3, 5), bool] */;
  %904 = cast(%903, dtype="float32") /* ty=Tensor[(4, 3, 5), float32] */;
  %905 = reshape(%904, newshape=[4, 3, 5]) /* ty=Tensor[(4, 3, 5), float32] */;
  %906 = @func_2816(%905) /* ty=(Tensor[(4, 3, 5), uint32],) */;
  %907 = %902.0;
  %908 = @func_5926() /* ty=Tensor[(4, 3, 5), bool] */;
  %909 = %906.0;
  (%907, %903, %908, %909)
}

def @func_6628(%var_6572: Tensor[(672), float32]) -> (Tensor[(8, 8, 10), float32], Tensor[(6, 14, 8), float32], Tensor[(672), float32], Tensor[(8, 8, 10), float32], Tensor[(4, 3, 5), uint32], Tensor[(60), float32], Tensor[(4, 3, 5), float32], Tensor[(4, 3, 5), float64], Tensor[(4, 3, 5), float32], Tensor[(15, 9, 1), float32], Tensor[(640), uint8], Tensor[(2, 320), uint8]) {
  %910 = @func_3796() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(8, 8, 10), float32]) */;
  %911 = cast(%var_6572, dtype="float32") /* ty=Tensor[(672), float32] */;
  %912 = reshape(%911, newshape=[6, 14, 8]) /* ty=Tensor[(6, 14, 8), float32] */;
  %913 = @func_3586(%912) /* ty=(Tensor[(6, 14, 8), float32],) */;
  %914 = @func_2870() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(640), uint8], Tensor[(8, 8, 10), float32]) */;
  %915 = cast(meta[relay.Constant][52] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
  %916 = reshape(%915, newshape=[4, 3, 5]) /* ty=Tensor[(4, 3, 5), float32] */;
  %917 = @func_2816(%916) /* ty=(Tensor[(4, 3, 5), uint32],) */;
  %918 = %910.1;
  %919 = cast(%918, dtype="uint8") /* ty=Tensor[(8, 8, 10), uint8] */;
  %920 = reshape(%919, newshape=[40, 16]) /* ty=Tensor[(40, 16), uint8] */;
  %921 = @func_3151(%920) /* ty=(Tensor[(15, 9, 1), float64], Tensor[(4, 3, 5), float64], Tensor[(8, 8, 10), uint8], Tensor[(40, 16), uint8], Tensor[(4, 3, 5), float32]) */;
  %922 = @func_3316() /* ty=(Tensor[(4, 3, 5), float64],) */;
  %923 = @func_3207() /* ty=(Tensor[(4, 3, 5), float32],) */;
  %924 = @func_6231() /* ty=(Tensor[(4, 3, 5), float32], Tensor[(15, 9, 1), float32]) */;
  %925 = %914.2;
  %926 = cast(%925, dtype="uint8") /* ty=Tensor[(8, 8, 10), uint8] */;
  %927 = reshape(%926, newshape=[640]) /* ty=Tensor[(640), uint8] */;
  %928 = @func_3755(%927) /* ty=(Tensor[(4, 3, 5), float64], Tensor[(4, 3, 5), float32], Tensor[(640), uint8]) */;
  %929 = cast(meta[relay.Constant][52] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
  %930 = reshape(%929, newshape=[4, 3, 5]) /* ty=Tensor[(4, 3, 5), float32] */;
  %931 = @func_5708(%930) /* ty=(Tensor[(4, 3, 5), float32], Tensor[(8, 8, 10), uint8], Tensor[(2, 320), uint8]) */;
  %932 = %913.0;
  %933 = %917.0;
  %934 = %921.4;
  %935 = %922.0;
  %936 = %923.0;
  %937 = %924.1;
  %938 = %928.2;
  %939 = %931.2;
  (%918, %932, %var_6572, %925, %933, meta[relay.Constant][52] /* ty=Tensor[(60), float32] */, %934, %935, %936, %937, %938, %939)
}

def @func_7537(%var_7530: Tensor[(10, 12, 4), int32], %var_7531: Tensor[(10, 12, 4), int32]) -> (Tensor[(10, 12, 4), bool],) {
  %940 = cast(%var_7531, dtype="bool") /* ty=Tensor[(10, 12, 4), bool] */;
  %941 = shape_of(%var_7530, dtype="int32") /* ty=Tensor[(3), int32] */;
  %942 = cast(%var_7530, dtype="bool") /* ty=Tensor[(10, 12, 4), bool] */;
  %943 = dyn.reshape(%940, %941, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %944 = less(%942, %943) /* ty=Tensor[(10, 12, 4), bool] */;
  (%944,)
}

def @func_4500(%var_4471: Tensor[(324), float64]) -> (Tensor[(4, 3, 5), float32], Tensor[(12, 3, 9), float32], Tensor[(640), uint8], Tensor[(12, 3, 9), bool]) {
  %945 = @func_3207() /* ty=(Tensor[(4, 3, 5), float32],) */;
  %946 = cast(%var_4471, dtype="float64") /* ty=Tensor[(324), float64] */;
  %947 = reshape(%946, newshape=[12, 3, 9]) /* ty=Tensor[(12, 3, 9), float64] */;
  %948 = @func_3912(%947) /* ty=(Tensor[(12, 3, 9), float64], Tensor[(12, 3, 9), float64]) */;
  %949 = %948.0;
  %950 = cast(%949, dtype="float32") /* ty=Tensor[(12, 3, 9), float32] */;
  %951 = @func_2870() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(640), uint8], Tensor[(8, 8, 10), float32]) */;
  %952 = cast(%var_4471, dtype="bool") /* ty=Tensor[(324), bool] */;
  %953 = shape_of(%949, dtype="int32") /* ty=Tensor[(3), int32] */;
  %954 = cast(%949, dtype="bool") /* ty=Tensor[(12, 3, 9), bool] */;
  %955 = dyn.reshape(%952, %953, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %956 = %945.0;
  %957 = acos(%950) /* ty=Tensor[(12, 3, 9), float32] */;
  %958 = %951.1;
  %959 = less(%954, %955) /* ty=Tensor[(12, 3, 9), bool] */;
  (%956, %957, %958, %959)
}

def @func_3274(%var_3259: Tensor[(15, 9, 12), float64]) -> Tensor[(15, 9, 12), bool] {
  %960 = @func_3082() /* ty=(Tensor[(15, 9, 1), float64],) */;
  %961 = %960.0;
  %962 = cast(%961, dtype="bool") /* ty=Tensor[(15, 9, 1), bool] */;
  %963 = cast(%var_3259, dtype="bool") /* ty=Tensor[(15, 9, 12), bool] */;
  greater(%962, %963) /* ty=Tensor[(15, 9, 12), bool] */
}

def @func_6231() -> (Tensor[(4, 3, 5), float32], Tensor[(15, 9, 1), float32]) {
  %964 = @func_2731() /* ty=(Tensor[(4, 3, 5), float32],) */;
  %965 = @func_3384() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64]) */;
  %966 = %964.0;
  %967 = %965.1;
  (%966, %967)
}

def @func_2551() -> (Tensor[(15, 9, 1), float32],) {
  %968 = @func_2507() /* ty=Tensor[(15, 9, 1), float32] */;
  (%968,)
}

def @func_5995() -> (Tensor[(15, 9, 1), float32], Tensor[(15, 9, 1), float64]) {
  %969 = @func_5199() /* ty=(Tensor[(4, 3, 5), float32], Tensor[(15, 9, 1), float64]) */;
  %970 = @func_2507() /* ty=Tensor[(15, 9, 1), float32] */;
  %971 = %969.1;
  (%970, %971)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_8493() -> (Tensor[(15, 9, 1), float32],) {
  %0 = @func_4177() /* ty=Tensor[(15, 9, 1), float32] */;
  (%0,)
}

def @func_3083() -> (Tensor[(15, 9, 1), float64],) {
  %5 = fn () -> (Tensor[(15, 9, 1), float64],) {
    %1 = @func_2130() /* ty=(Tensor[(15, 9, 1), float32],) */;
    %2 = %1.0;
    %3 = cast(%2, dtype="float64") /* ty=Tensor[(15, 9, 1), float64] */;
    %4 = sigmoid(%3) /* ty=Tensor[(15, 9, 1), float64] */;
    (%4,)
  };
  %5() /* ty=(Tensor[(15, 9, 1), float64],) */
}

def @func_669(%var_667: Tensor[(2, 2, 1), uint64], %var_668: Tensor[(2, 2, 8), uint64]) -> (Tensor[(2, 2, 8), bool], Tensor[(60), float64], Tensor[(2730), uint32], Tensor[(60, 1), float64], Tensor[(4, 3, 5), float64]) {
  @func_665(%var_667, %var_668) /* ty=(Tensor[(2, 2, 8), bool], Tensor[(60), float64], Tensor[(2730), uint32], Tensor[(60, 1), float64], Tensor[(4, 3, 5), float64]) */
}

def @func_2507() -> Tensor[(15, 9, 1), float32] {
  %6 = @func_2431() /* ty=(Tensor[(15, 9, 1), float32],) */;
  %6.0
}

def @func_3606() -> Tensor[(4, 3, 5), float32] {
  %8 = fn () -> Tensor[(4, 3, 5), float32] {
    %7 = @func_2731() /* ty=(Tensor[(4, 3, 5), float32],) */;
    %7.0
  };
  %8() /* ty=Tensor[(4, 3, 5), float32] */
}

def @func_7739(%var_7737: Tensor[(1, 540), float32], %var_7738: Tensor[(1344), int16]) -> (Tensor[(15, 9, 4), float64], Tensor[(15, 9, 540), float32], Tensor[(6, 16, 14), bool], Tensor[(1344), int16], Tensor[(4, 3, 5), float32]) {
  %22 = fn (%var_7709: Tensor[(1, 540), float32], %var_7728: Tensor[(1344), int16]) -> (Tensor[(15, 9, 4), float64], Tensor[(15, 9, 540), float32], Tensor[(6, 16, 14), bool], Tensor[(1344), int16], Tensor[(4, 3, 5), float32]) {
    %9 = cast(%var_7709, dtype="float32") /* ty=Tensor[(1, 540), float32] */;
    %10 = reshape(%9, newshape=[15, 9, 4]) /* ty=Tensor[(15, 9, 4), float32] */;
    %11 = @func_6050(%10) /* ty=(Tensor[(4, 3, 5), float32], Tensor[(15, 9, 4), float64]) */;
    %12 = @func_2431() /* ty=(Tensor[(15, 9, 1), float32],) */;
    %13 = %12.0;
    %14 = cast(%13, dtype="float32") /* ty=Tensor[(15, 9, 1), float32] */;
    %15 = cast(%var_7709, dtype="float32") /* ty=Tensor[(1, 540), float32] */;
    %16 = cast(%var_7728, dtype="int16") /* ty=Tensor[(1344), int16] */;
    %17 = reshape(%16, newshape=[6, 16, 14]) /* ty=Tensor[(6, 16, 14), int16] */;
    %18 = %11.1;
    %19 = floor_mod(%14, %15) /* ty=Tensor[(15, 9, 540), float32] */;
    %20 = @func_1008(%17) /* ty=Tensor[(6, 16, 14), bool] */;
    %21 = @func_6917() /* ty=Tensor[(4, 3, 5), float32] */;
    (%18, %19, %20, %var_7728, %21)
  };
  %22(%var_7737, %var_7738) /* ty=(Tensor[(15, 9, 4), float64], Tensor[(15, 9, 540), float32], Tensor[(6, 16, 14), bool], Tensor[(1344), int16], Tensor[(4, 3, 5), float32]) */
}

def @func_6982() -> (Tensor[(4, 3, 5), float32], Tensor[(60), float64], Tensor[(45), int8]) {
  %23 = @func_4346() /* ty=(Tensor[(4, 3, 5), float32],) */;
  %24 = cast(meta[relay.Constant][0] /* ty=Tensor[(45), int8] */, dtype="int8") /* ty=Tensor[(45), int8] */;
  %25 = %23.0;
  %26 = cast(%25, dtype="float64") /* ty=Tensor[(4, 3, 5), float64] */;
  %27 = reshape(%24, newshape=[45]) /* ty=Tensor[(45), int8] */;
  %28 = reshape(%26, newshape=[4, 3, 5]) /* ty=Tensor[(4, 3, 5), float64] */;
  %29 = @func_4304(%27, %28) /* ty=(Tensor[(4, 3, 5), float64], Tensor[(10, 6, 15), int32], Tensor[(900), int32], Tensor[(10, 6, 15), int32], Tensor[(1, 15, 3), int8], Tensor[(45), int8], Tensor[(60), float64], Tensor[(4, 3, 5), bool]) */;
  %30 = %29.6;
  (%25, %30, meta[relay.Constant][0] /* ty=Tensor[(45), int8] */)
}

def @func_9277() -> (Tensor[(4, 3, 5), float64],) {
  %33 = fn () -> (Tensor[(4, 3, 5), float64],) {
    %31 = @func_4062() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64]) */;
    %32 = %31.1;
    (%32,)
  };
  %33() /* ty=(Tensor[(4, 3, 5), float64],) */
}

def @func_3436() -> Tensor[(4, 3, 5), bool] {
  @func_3434() /* ty=Tensor[(4, 3, 5), bool] */
}

def @func_2536() -> Tensor[(4, 3, 5), float64] {
  %34 = @func_1922() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64], Tensor[(4, 1), uint64]) */;
  %34.1
}

def @func_6052(%var_6051: Tensor[(15, 9, 4), float32]) -> (Tensor[(4, 3, 5), float32], Tensor[(15, 9, 4), float64]) {
  %42 = fn (%var_6031: Tensor[(15, 9, 4), float32]) -> (Tensor[(4, 3, 5), float32], Tensor[(15, 9, 4), float64]) {
    %35 = @func_5199() /* ty=(Tensor[(4, 3, 5), float32], Tensor[(15, 9, 1), float64]) */;
    %36 = @func_4710() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(640), uint8]) */;
    %37 = %36.0;
    %38 = cast(%37, dtype="float64") /* ty=Tensor[(15, 9, 1), float64] */;
    %39 = cast(%var_6031, dtype="float64") /* ty=Tensor[(15, 9, 4), float64] */;
    %40 = %35.0;
    %41 = divide(%38, %39) /* ty=Tensor[(15, 9, 4), float64] */;
    (%40, %41)
  };
  %42(%var_6051) /* ty=(Tensor[(4, 3, 5), float32], Tensor[(15, 9, 4), float64]) */
}

def @func_6684(%var_6681: Tensor[(11, 4, 5), int64], %var_6682: Tensor[(11, 4, 5), int64], %var_6683: Tensor[(6, 45), float32]) -> (Tensor[(11, 4, 5), int64], Tensor[(15, 9, 2), bool], Tensor[(6, 45), float32]) {
  @func_6679(%var_6681, %var_6682, %var_6683) /* ty=(Tensor[(11, 4, 5), int64], Tensor[(15, 9, 2), bool], Tensor[(6, 45), float32]) */
}

def @func_385(%var_383: Tensor[(4, 3, 5), float64], %var_384: Tensor[(4, 3, 5), float64]) -> (Tensor[(4, 3, 5), float64],) {
  %48 = fn (%var_357: Tensor[(4, 3, 5), float64], %var_358: Tensor[(4, 3, 5), float64]) -> (Tensor[(4, 3, 5), float64],) {
    %43 = cast(%var_358, dtype="float64") /* ty=Tensor[(4, 3, 5), float64] */;
    %44 = shape_of(%var_357, dtype="int32") /* ty=Tensor[(3), int32] */;
    %45 = cast(%var_357, dtype="float64") /* ty=Tensor[(4, 3, 5), float64] */;
    %46 = dyn.reshape(%43, %44, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %47 = mod(%45, %46) /* ty=Tensor[(4, 3, 5), float64] */;
    (%47,)
  };
  %48(%var_383, %var_384) /* ty=(Tensor[(4, 3, 5), float64],) */
}

def @func_5438() -> (Tensor[(15, 9, 1), float32], Tensor[(15, 9, ?), float32]) {
  %49 = @func_2130() /* ty=(Tensor[(15, 9, 1), float32],) */;
  %50 = @func_3384() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64]) */;
  %51 = %50.0;
  %52 = cast(%51, dtype="float64") /* ty=Tensor[(15, 9, 1), float64] */;
  %53 = sinh(%52) /* ty=Tensor[(15, 9, 1), float64] */;
  %54 = cast(%53, dtype="bool") /* ty=Tensor[(15, 9, 1), bool] */;
  %55 = shape_of(%51, dtype="int32") /* ty=Tensor[(3), int32] */;
  %56 = cast(%51, dtype="bool") /* ty=Tensor[(15, 9, 1), bool] */;
  %57 = dyn.reshape(%54, %55, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %58 = not_equal(%56, %57) /* ty=Tensor[(15, 9, ?), bool] */;
  %59 = cast(%51, dtype="float32") /* ty=Tensor[(15, 9, 1), float32] */;
  %60 = shape_of(%58, dtype="int32") /* ty=Tensor[(3), int32] */;
  %61 = cast(%58, dtype="float32") /* ty=Tensor[(15, 9, ?), float32] */;
  %62 = dyn.reshape(%59, %60, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %63 = %49.0;
  %64 = mod(%61, %62) /* ty=Tensor[(15, 9, ?), float32] */;
  (%63, %64)
}

def @func_2132() -> (Tensor[(15, 9, 1), float32],) {
  @func_2130() /* ty=(Tensor[(15, 9, 1), float32],) */
}

def @func_2667(%var_2629: Tensor[(8, 6, 14), float64]) -> (Tensor[(15, 9, 1), float32], Tensor[(8, 6, 14), float32], Tensor[(768), float64], Tensor[(1, 768), float64], Tensor[(32), uint64], Tensor[(3, 5, 14), float32], Tensor[(210), float32]) {
  %65 = @func_2551() /* ty=(Tensor[(15, 9, 1), float32],) */;
  %66 = cast(%var_2629, dtype="float64") /* ty=Tensor[(8, 6, 14), float64] */;
  %67 = log2(%66) /* ty=Tensor[(8, 6, 14), float64] */;
  %68 = cast(%67, dtype="float64") /* ty=Tensor[(8, 6, 14), float64] */;
  %69 = sqrt(%68) /* ty=Tensor[(8, 6, 14), float64] */;
  %70 = cast(%67, dtype="float32") /* ty=Tensor[(8, 6, 14), float32] */;
  %71 = shape_of(%69, dtype="int32") /* ty=Tensor[(3), int32] */;
  %72 = cast(%69, dtype="float32") /* ty=Tensor[(8, 6, 14), float32] */;
  %73 = dyn.reshape(%70, %71, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %74 = cast(meta[relay.Constant][1] /* ty=Tensor[(1, 768), float64] */, dtype="float64") /* ty=Tensor[(1, 768), float64] */;
  %75 = cast(meta[relay.Constant][2] /* ty=Tensor[(32), uint64] */, dtype="uint64") /* ty=Tensor[(32), uint64] */;
  %76 = reshape(%74, newshape=[768]) /* ty=Tensor[(768), float64] */;
  %77 = reshape(%75, newshape=[32]) /* ty=Tensor[(32), uint64] */;
  %78 = @func_2337(%76, %77) /* ty=(Tensor[(6, 8, 16), float64], Tensor[(768), float64], Tensor[(15, 9, 32), bool], Tensor[(32, 24), bool]) */;
  %79 = cast(meta[relay.Constant][3] /* ty=Tensor[(210), float32] */, dtype="float32") /* ty=Tensor[(210), float32] */;
  %80 = reshape(%79, newshape=[3, 5, 14]) /* ty=Tensor[(3, 5, 14), float32] */;
  %81 = @func_2020(%80) /* ty=(Tensor[(3, 5, 14), float32], Tensor[(4, 3, 5), float64], Tensor[(4), uint64]) */;
  %82 = %65.0;
  %83 = power(%72, %73) /* ty=Tensor[(8, 6, 14), float32] */;
  %84 = %78.1;
  %85 = %81.0;
  (%82, %83, %84, meta[relay.Constant][1] /* ty=Tensor[(1, 768), float64] */, meta[relay.Constant][2] /* ty=Tensor[(32), uint64] */, %85, meta[relay.Constant][3] /* ty=Tensor[(210), float32] */)
}

def @func_4516() -> Tensor[(4, 3, 5), float32] {
  %87 = fn () -> Tensor[(4, 3, 5), float32] {
    %86 = @func_2731() /* ty=(Tensor[(4, 3, 5), float32],) */;
    %86.0
  };
  %87() /* ty=Tensor[(4, 3, 5), float32] */
}

def @func_3588(%var_3587: Tensor[(6, 14, 8), float32]) -> (Tensor[(6, 14, 8), float32],) {
  %90 = fn (%var_3572: Tensor[(6, 14, 8), float32]) -> (Tensor[(6, 14, 8), float32],) {
    %88 = cast(%var_3572, dtype="float32") /* ty=Tensor[(6, 14, 8), float32] */;
    %89 = log(%88) /* ty=Tensor[(6, 14, 8), float32] */;
    (%89,)
  };
  %90(%var_3587) /* ty=(Tensor[(6, 14, 8), float32],) */
}

def @func_5326(%var_5256: Tensor[(210, 1), float32]) -> (Tensor[(4, 3, 5), bool], Tensor[(4, 3, 5), bool], Tensor[(4, 3, 5), float32], Tensor[(210, 4), uint8], Tensor[(4, 3, 5), float64]) {
  %91 = @func_2959() /* ty=(Tensor[(4, 3, 5), float32], Tensor[(4, 3, 5), bool]) */;
  %92 = @func_2731() /* ty=(Tensor[(4, 3, 5), float32],) */;
  %93 = cast(%var_5256, dtype="float32") /* ty=Tensor[(210, 1), float32] */;
  %94 = reshape(%93, newshape=[3, 5, 14]) /* ty=Tensor[(3, 5, 14), float32] */;
  %95 = @func_2020(%94) /* ty=(Tensor[(3, 5, 14), float32], Tensor[(4, 3, 5), float64], Tensor[(4), uint64]) */;
  %96 = %95.2;
  %97 = cast(%96, dtype="uint8") /* ty=Tensor[(4), uint8] */;
  %98 = cast(%var_5256, dtype="uint8") /* ty=Tensor[(210, 1), uint8] */;
  %99 = @func_1922() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64], Tensor[(4, 1), uint64]) */;
  %100 = %91.1;
  %101 = @func_3434() /* ty=Tensor[(4, 3, 5), bool] */;
  %102 = %92.0;
  %103 = bitwise_and(%97, %98) /* ty=Tensor[(210, 4), uint8] */;
  %104 = %99.1;
  (%100, %101, %102, %103, %104)
}

def @func_3069(%var_3068: Tensor[(640), uint8]) -> (Tensor[(4, 3, 5), float64], Tensor[(8, 8, 10), uint8], Tensor[(640), uint8]) {
  %110 = fn (%var_3048: Tensor[(640), uint8]) -> (Tensor[(4, 3, 5), float64], Tensor[(8, 8, 10), uint8], Tensor[(640), uint8]) {
    %105 = cast(%var_3048, dtype="uint8") /* ty=Tensor[(640), uint8] */;
    %106 = reshape(%105, newshape=[8, 8, 10]) /* ty=Tensor[(8, 8, 10), uint8] */;
    %107 = @func_1609(%106) /* ty=(Tensor[(8, 8, 10), uint8],) */;
    %108 = @func_2536() /* ty=Tensor[(4, 3, 5), float64] */;
    %109 = %107.0;
    (%108, %109, %var_3048)
  };
  %110(%var_3068) /* ty=(Tensor[(4, 3, 5), float64], Tensor[(8, 8, 10), uint8], Tensor[(640), uint8]) */
}

def @func_3153(%var_3152: Tensor[(40, 16), uint8]) -> (Tensor[(15, 9, 1), float64], Tensor[(4, 3, 5), float64], Tensor[(8, 8, 10), uint8], Tensor[(40, 16), uint8], Tensor[(4, 3, 5), float32]) {
  %124 = fn (%var_3131: Tensor[(40, 16), uint8]) -> (Tensor[(15, 9, 1), float64], Tensor[(4, 3, 5), float64], Tensor[(8, 8, 10), uint8], Tensor[(40, 16), uint8], Tensor[(4, 3, 5), float32]) {
    %111 = @func_2200() /* ty=Tensor[(15, 9, 1), float32] */;
    %112 = cast(%111, dtype="float64") /* ty=Tensor[(15, 9, 1), float64] */;
    %113 = @func_1922() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64], Tensor[(4, 1), uint64]) */;
    %114 = cast(%var_3131, dtype="uint8") /* ty=Tensor[(40, 16), uint8] */;
    %115 = reshape(%114, newshape=[8, 8, 10]) /* ty=Tensor[(8, 8, 10), uint8] */;
    %116 = @func_1609(%115) /* ty=(Tensor[(8, 8, 10), uint8],) */;
    %117 = @func_1922() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64], Tensor[(4, 1), uint64]) */;
    %118 = %117.1;
    %119 = cast(%118, dtype="float32") /* ty=Tensor[(4, 3, 5), float32] */;
    %120 = atanh(%112) /* ty=Tensor[(15, 9, 1), float64] */;
    %121 = %113.1;
    %122 = %116.0;
    %123 = log(%119) /* ty=Tensor[(4, 3, 5), float32] */;
    (%120, %121, %122, %var_3131, %123)
  };
  %124(%var_3152) /* ty=(Tensor[(15, 9, 1), float64], Tensor[(4, 3, 5), float64], Tensor[(8, 8, 10), uint8], Tensor[(40, 16), uint8], Tensor[(4, 3, 5), float32]) */
}

def @func_4620(%var_4619: Tensor[(15, 9, 2), float32]) -> (Tensor[(4, 3, 5), float32], Tensor[(15, 9, 1), float64], Tensor[(15, 9, 2), uint8], Tensor[(4, 3, 5), float64], Tensor[(640), uint8]) {
  %139 = fn (%var_4605: Tensor[(15, 9, 2), float32]) -> (Tensor[(4, 3, 5), float32], Tensor[(15, 9, 1), float64], Tensor[(15, 9, 2), uint8], Tensor[(4, 3, 5), float64], Tensor[(640), uint8]) {
    %125 = @func_4062() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64]) */;
    %126 = %125.0;
    %127 = cast(%126, dtype="float32") /* ty=Tensor[(15, 9, 1), float32] */;
    %128 = acos(%127) /* ty=Tensor[(15, 9, 1), float32] */;
    %129 = cast(%128, dtype="float64") /* ty=Tensor[(15, 9, 1), float64] */;
    %130 = cast(%128, dtype="uint8") /* ty=Tensor[(15, 9, 1), uint8] */;
    %131 = cast(%var_4605, dtype="uint8") /* ty=Tensor[(15, 9, 2), uint8] */;
    %132 = cast(meta[relay.Constant][4] /* ty=Tensor[(640), uint8] */, dtype="uint8") /* ty=Tensor[(640), uint8] */;
    %133 = reshape(%132, newshape=[640]) /* ty=Tensor[(640), uint8] */;
    %134 = @func_3067(%133) /* ty=(Tensor[(4, 3, 5), float64], Tensor[(8, 8, 10), uint8], Tensor[(640), uint8]) */;
    %135 = @func_4515() /* ty=Tensor[(4, 3, 5), float32] */;
    %136 = cosh(%129) /* ty=Tensor[(15, 9, 1), float64] */;
    %137 = bitwise_and(%130, %131) /* ty=Tensor[(15, 9, 2), uint8] */;
    %138 = %134.0;
    (%135, %136, %137, %138, meta[relay.Constant][4] /* ty=Tensor[(640), uint8] */)
  };
  %139(%var_4619) /* ty=(Tensor[(4, 3, 5), float32], Tensor[(15, 9, 1), float64], Tensor[(15, 9, 2), uint8], Tensor[(4, 3, 5), float64], Tensor[(640), uint8]) */
}

def @func_7077() -> (Tensor[(4, 3, 5), bool], Tensor[(15, 9, 1), float32]) {
  @func_7075() /* ty=(Tensor[(4, 3, 5), bool], Tensor[(15, 9, 1), float32]) */
}

def @func_3018(%var_3016: Tensor[(14, 7, 6), int16]) -> (Tensor[(14, 7, 6), float64], Tensor[(14, 7, 6), float64]) {
  @func_3015(%var_3016) /* ty=(Tensor[(14, 7, 6), float64], Tensor[(14, 7, 6), float64]) */
}

def @func_2871() -> (Tensor[(15, 9, 1), float32], Tensor[(640), uint8], Tensor[(8, 8, 10), float32]) {
  %147 = fn () -> (Tensor[(15, 9, 1), float32], Tensor[(640), uint8], Tensor[(8, 8, 10), float32]) {
    %140 = cast(meta[relay.Constant][5] /* ty=Tensor[(640), uint8] */, dtype="uint8") /* ty=Tensor[(640), uint8] */;
    %141 = reshape(%140, newshape=[8, 8, 10]) /* ty=Tensor[(8, 8, 10), uint8] */;
    %142 = @func_1609(%141) /* ty=(Tensor[(8, 8, 10), uint8],) */;
    %143 = %142.0;
    %144 = cast(%143, dtype="float32") /* ty=Tensor[(8, 8, 10), float32] */;
    %145 = @func_2507() /* ty=Tensor[(15, 9, 1), float32] */;
    %146 = acosh(%144) /* ty=Tensor[(8, 8, 10), float32] */;
    (%145, meta[relay.Constant][5] /* ty=Tensor[(640), uint8] */, %146)
  };
  %147() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(640), uint8], Tensor[(8, 8, 10), float32]) */
}

def @func_8561(%var_8560: Tensor[(15, 9, 9), float32]) -> Tensor[(15, 9, 9), uint16] {
  %151 = fn (%var_8545: Tensor[(15, 9, 9), float32]) -> Tensor[(15, 9, 9), uint16] {
    %148 = @func_2507() /* ty=Tensor[(15, 9, 1), float32] */;
    %149 = cast(%148, dtype="uint16") /* ty=Tensor[(15, 9, 1), uint16] */;
    %150 = cast(%var_8545, dtype="uint16") /* ty=Tensor[(15, 9, 9), uint16] */;
    multiply(%149, %150) /* ty=Tensor[(15, 9, 9), uint16] */
  };
  %151(%var_8560) /* ty=Tensor[(15, 9, 9), uint16] */
}

def @func_7990(%var_7988: Tensor[(900), int32]) -> (Tensor[(4, 3, 5), float64], Tensor[(900), int32], Tensor[(10, 6, 15), float64]) {
  @func_7987(%var_7988) /* ty=(Tensor[(4, 3, 5), float64], Tensor[(900), int32], Tensor[(10, 6, 15), float64]) */
}

def @func_6919() -> Tensor[(4, 3, 5), float32] {
  @func_6917() /* ty=Tensor[(4, 3, 5), float32] */
}

def @func_4044() -> (Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float32]) {
  @func_4042() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float32]) */
}

def @func_2022(%var_2021: Tensor[(3, 5, 14), float32]) -> (Tensor[(3, 5, 14), float32], Tensor[(4, 3, 5), float64], Tensor[(4), uint64]) {
  %158 = fn (%var_2009: Tensor[(3, 5, 14), float32]) -> (Tensor[(3, 5, 14), float32], Tensor[(4, 3, 5), float64], Tensor[(4), uint64]) {
    %152 = cast(%var_2009, dtype="float32") /* ty=Tensor[(3, 5, 14), float32] */;
    %153 = cast(meta[relay.Constant][6] /* ty=Tensor[(4), uint64] */, dtype="uint64") /* ty=Tensor[(4), uint64] */;
    %154 = reshape(%153, newshape=[4]) /* ty=Tensor[(4), uint64] */;
    %155 = @func_885(%154) /* ty=(Tensor[(2, 4, 14), float32], Tensor[(4, 3, 5), float64], Tensor[(4), uint64], Tensor[(32), uint64], Tensor[(4, 3, 5), float64]) */;
    %156 = tan(%152) /* ty=Tensor[(3, 5, 14), float32] */;
    %157 = %155.4;
    (%156, %157, meta[relay.Constant][6] /* ty=Tensor[(4), uint64] */)
  };
  %158(%var_2021) /* ty=(Tensor[(3, 5, 14), float32], Tensor[(4, 3, 5), float64], Tensor[(4), uint64]) */
}

def @func_8471() -> (Tensor[(4, 3, 5), float64], Tensor[(4, 3, 5), float64], Tensor[(4), uint64], Tensor[(32, 1), uint64]) {
  %159 = @func_5872() /* ty=(Tensor[(4, 3, 5), float64],) */;
  %160 = cast(meta[relay.Constant][7] /* ty=Tensor[(4), uint64] */, dtype="uint64") /* ty=Tensor[(4), uint64] */;
  %161 = cast(meta[relay.Constant][8] /* ty=Tensor[(32, 1), uint64] */, dtype="uint64") /* ty=Tensor[(32, 1), uint64] */;
  %162 = reshape(%160, newshape=[2, 2, 1]) /* ty=Tensor[(2, 2, 1), uint64] */;
  %163 = reshape(%161, newshape=[2, 2, 8]) /* ty=Tensor[(2, 2, 8), uint64] */;
  %164 = @func_665(%162, %163) /* ty=(Tensor[(2, 2, 8), bool], Tensor[(60), float64], Tensor[(2730), uint32], Tensor[(60, 1), float64], Tensor[(4, 3, 5), float64]) */;
  %165 = %159.0;
  %166 = %164.4;
  (%165, %166, meta[relay.Constant][7] /* ty=Tensor[(4), uint64] */, meta[relay.Constant][8] /* ty=Tensor[(32, 1), uint64] */)
}

def @func_3914(%var_3913: Tensor[(12, 3, 9), float64]) -> (Tensor[(12, 3, 9), float64], Tensor[(12, 3, 9), float64]) {
  %171 = fn (%var_3874: Tensor[(12, 3, 9), float64]) -> (Tensor[(12, 3, 9), float64], Tensor[(12, 3, 9), float64]) {
    %167 = cast(%var_3874, dtype="float64") /* ty=Tensor[(12, 3, 9), float64] */;
    %168 = cast(%var_3874, dtype="float64") /* ty=Tensor[(12, 3, 9), float64] */;
    %169 = rsqrt(%167) /* ty=Tensor[(12, 3, 9), float64] */;
    %170 = asinh(%168) /* ty=Tensor[(12, 3, 9), float64] */;
    (%169, %170)
  };
  %171(%var_3913) /* ty=(Tensor[(12, 3, 9), float64], Tensor[(12, 3, 9), float64]) */
}

def @func_5200() -> (Tensor[(4, 3, 5), float32], Tensor[(15, 9, 1), float64]) {
  %177 = fn () -> (Tensor[(4, 3, 5), float32], Tensor[(15, 9, 1), float64]) {
    %172 = @func_4042() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float32]) */;
    %173 = @func_2507() /* ty=Tensor[(15, 9, 1), float32] */;
    %174 = cast(%173, dtype="float64") /* ty=Tensor[(15, 9, 1), float64] */;
    %175 = %172.1;
    %176 = sin(%174) /* ty=Tensor[(15, 9, 1), float64] */;
    (%175, %176)
  };
  %177() /* ty=(Tensor[(4, 3, 5), float32], Tensor[(15, 9, 1), float64]) */
}

def @func_4304(%var_4286: Tensor[(45), int8], %var_4295: Tensor[(4, 3, 5), float64]) -> (Tensor[(4, 3, 5), float64], Tensor[(10, 6, 15), int32], Tensor[(900), int32], Tensor[(10, 6, 15), int32], Tensor[(1, 15, 3), int8], Tensor[(45), int8], Tensor[(60), float64], Tensor[(4, 3, 5), bool]) {
  %178 = @func_3448() /* ty=(Tensor[(4, 3, 5), float64],) */;
  %179 = cast(meta[relay.Constant][9] /* ty=Tensor[(900), int32] */, dtype="int32") /* ty=Tensor[(900), int32] */;
  %180 = cast(meta[relay.Constant][9] /* ty=Tensor[(900), int32] */, dtype="int32") /* ty=Tensor[(900), int32] */;
  %181 = reshape(%179, newshape=[10, 6, 15]) /* ty=Tensor[(10, 6, 15), int32] */;
  %182 = reshape(%180, newshape=[10, 6, 15]) /* ty=Tensor[(10, 6, 15), int32] */;
  %183 = @func_1504(%181, %182) /* ty=(Tensor[(10, 6, 15), int32],) */;
  %184 = cast(meta[relay.Constant][9] /* ty=Tensor[(900), int32] */, dtype="int32") /* ty=Tensor[(900), int32] */;
  %185 = %183.0;
  %186 = cast(%185, dtype="int32") /* ty=Tensor[(10, 6, 15), int32] */;
  %187 = reshape(%184, newshape=[10, 6, 15]) /* ty=Tensor[(10, 6, 15), int32] */;
  %188 = reshape(%186, newshape=[10, 6, 15]) /* ty=Tensor[(10, 6, 15), int32] */;
  %189 = @func_1504(%187, %188) /* ty=(Tensor[(10, 6, 15), int32],) */;
  %190 = cast(%var_4286, dtype="int8") /* ty=Tensor[(45), int8] */;
  %191 = reshape(%190, newshape=[1, 15, 3]) /* ty=Tensor[(1, 15, 3), int8] */;
  %192 = @func_4198(%191) /* ty=(Tensor[(1, 15, 3), int8],) */;
  %193 = %178.0;
  %194 = cast(%193, dtype="float64") /* ty=Tensor[(4, 3, 5), float64] */;
  %195 = reshape(%194, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %196 = @func_2467(%195) /* ty=(Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64], Tensor[(60), float64]) */;
  %197 = @func_4062() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64]) */;
  %198 = %197.1;
  %199 = cast(%var_4295, dtype="bool") /* ty=Tensor[(4, 3, 5), bool] */;
  %200 = shape_of(%198, dtype="int32") /* ty=Tensor[(3), int32] */;
  %201 = cast(%198, dtype="bool") /* ty=Tensor[(4, 3, 5), bool] */;
  %202 = dyn.reshape(%199, %200, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %203 = %189.0;
  %204 = %192.0;
  %205 = %196.2;
  %206 = less_equal(%201, %202) /* ty=Tensor[(4, 3, 5), bool] */;
  (%193, %185, meta[relay.Constant][9] /* ty=Tensor[(900), int32] */, %203, %204, %var_4286, %205, %206)
}

def @func_3757(%var_3756: Tensor[(640), uint8]) -> (Tensor[(4, 3, 5), float64], Tensor[(4, 3, 5), float32], Tensor[(640), uint8]) {
  %213 = fn (%var_3749: Tensor[(640), uint8]) -> (Tensor[(4, 3, 5), float64], Tensor[(4, 3, 5), float32], Tensor[(640), uint8]) {
    %207 = @func_3316() /* ty=(Tensor[(4, 3, 5), float64],) */;
    %208 = cast(%var_3749, dtype="uint8") /* ty=Tensor[(640), uint8] */;
    %209 = reshape(%208, newshape=[40, 16]) /* ty=Tensor[(40, 16), uint8] */;
    %210 = @func_3151(%209) /* ty=(Tensor[(15, 9, 1), float64], Tensor[(4, 3, 5), float64], Tensor[(8, 8, 10), uint8], Tensor[(40, 16), uint8], Tensor[(4, 3, 5), float32]) */;
    %211 = %207.0;
    %212 = %210.4;
    (%211, %212, %var_3749)
  };
  %213(%var_3756) /* ty=(Tensor[(4, 3, 5), float64], Tensor[(4, 3, 5), float32], Tensor[(640), uint8]) */
}

def @func_2959() -> (Tensor[(4, 3, 5), float32], Tensor[(4, 3, 5), bool]) {
  %214 = @func_2731() /* ty=(Tensor[(4, 3, 5), float32],) */;
  %215 = %214.0;
  %216 = cast(meta[relay.Constant][10] /* ty=Tensor[(4, 3, 5), float32] */, dtype="float32") /* ty=Tensor[(4, 3, 5), float32] */;
  %217 = shape_of(%215, dtype="int32") /* ty=Tensor[(3), int32] */;
  %218 = cast(%215, dtype="float32") /* ty=Tensor[(4, 3, 5), float32] */;
  %219 = dyn.reshape(%216, %217, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %220 = maximum(%218, %219) /* ty=Tensor[(4, 3, 5), float32] */;
  %221 = cast(%220, dtype="uint64") /* ty=Tensor[(4, 3, 5), uint64] */;
  %222 = shape_of(%215, dtype="int32") /* ty=Tensor[(3), int32] */;
  %223 = cast(%215, dtype="uint64") /* ty=Tensor[(4, 3, 5), uint64] */;
  %224 = dyn.reshape(%221, %222, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %225 = minimum(%223, %224) /* ty=Tensor[(4, 3, 5), uint64] */;
  %226 = cast(%225, dtype="float32") /* ty=Tensor[(4, 3, 5), float32] */;
  %227 = cosh(%226) /* ty=Tensor[(4, 3, 5), float32] */;
  %228 = cast(%227, dtype="float32") /* ty=Tensor[(4, 3, 5), float32] */;
  %229 = cast(%220, dtype="bool") /* ty=Tensor[(4, 3, 5), bool] */;
  %230 = shape_of(%227, dtype="int32") /* ty=Tensor[(3), int32] */;
  %231 = cast(%227, dtype="bool") /* ty=Tensor[(4, 3, 5), bool] */;
  %232 = dyn.reshape(%229, %230, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %233 = log10(%228) /* ty=Tensor[(4, 3, 5), float32] */;
  %234 = greater(%231, %232) /* ty=Tensor[(4, 3, 5), bool] */;
  (%233, %234)
}

def @func_3317() -> (Tensor[(4, 3, 5), float64],) {
  %236 = fn () -> (Tensor[(4, 3, 5), float64],) {
    %235 = @func_2536() /* ty=Tensor[(4, 3, 5), float64] */;
    (%235,)
  };
  %236() /* ty=(Tensor[(4, 3, 5), float64],) */
}

def @func_4549() -> (Tensor[(15, 9, 1), float32],) {
  @func_4547() /* ty=(Tensor[(15, 9, 1), float32],) */
}

def @func_7277(%var_7256: Tensor[(5, 7, 6), float32]) -> (Tensor[(4, 3, 5), float32], int8, Tensor[(5, 7, 6), float32], Tensor[(5, 7, 6), float32]) {
  %237 = cast(meta[relay.Constant][11] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %238 = reshape(%237, newshape=[]) /* ty=int8 */;
  %239 = @func_5755(%238) /* ty=(Tensor[(5, 4, 16), int8], Tensor[(4, 3, 5), float32]) */;
  %240 = cast(meta[relay.Constant][12] /* ty=Tensor[(5, 7, 6), float32] */, dtype="float32") /* ty=Tensor[(5, 7, 6), float32] */;
  %241 = exp(%240) /* ty=Tensor[(5, 7, 6), float32] */;
  %242 = cast(%var_7256, dtype="float32") /* ty=Tensor[(5, 7, 6), float32] */;
  %243 = shape_of(%241, dtype="int32") /* ty=Tensor[(3), int32] */;
  %244 = cast(%241, dtype="float32") /* ty=Tensor[(5, 7, 6), float32] */;
  %245 = dyn.reshape(%242, %243, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %246 = cast(%241, dtype="float32") /* ty=Tensor[(5, 7, 6), float32] */;
  %247 = %239.1;
  %248 = mod(%244, %245) /* ty=Tensor[(5, 7, 6), float32] */;
  %249 = sin(%246) /* ty=Tensor[(5, 7, 6), float32] */;
  (%247, meta[relay.Constant][11] /* ty=int8 */, %248, %249)
}

def @func_9331() -> Tensor[(4, 3, 5), float32] {
  %250 = @func_4113() /* ty=(Tensor[(4, 3, 5), float32], Tensor[(60), float64], Tensor[(1620), float32]) */;
  %250.0
}

def @func_2538() -> Tensor[(4, 3, 5), float64] {
  @func_2536() /* ty=Tensor[(4, 3, 5), float64] */
}

def @func_6154() -> Tensor[(4, 3, 5), bool] {
  @func_5926() /* ty=Tensor[(4, 3, 5), bool] */
}

def @func_2469(%var_2468: Tensor[(60), float64]) -> (Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64], Tensor[(60), float64]) {
  %259 = fn (%var_2450: Tensor[(60), float64]) -> (Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64], Tensor[(60), float64]) {
    %251 = @func_2130() /* ty=(Tensor[(15, 9, 1), float32],) */;
    %252 = cast(%var_2450, dtype="float64") /* ty=Tensor[(60), float64] */;
    %253 = cast(%var_2450, dtype="float64") /* ty=Tensor[(60), float64] */;
    %254 = reshape(%252, newshape=[4, 3, 5]) /* ty=Tensor[(4, 3, 5), float64] */;
    %255 = reshape(%253, newshape=[4, 3, 5]) /* ty=Tensor[(4, 3, 5), float64] */;
    %256 = @func_382(%254, %255) /* ty=(Tensor[(4, 3, 5), float64],) */;
    %257 = %251.0;
    %258 = %256.0;
    (%257, %258, %var_2450)
  };
  %259(%var_2468) /* ty=(Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64], Tensor[(60), float64]) */
}

def @func_4414() -> Tensor[(4, 3, 5), float32] {
  %260 = fn () -> Tensor[(4, 3, 5), float32] {
    @func_3605() /* ty=Tensor[(4, 3, 5), float32] */
  };
  %260() /* ty=Tensor[(4, 3, 5), float32] */
}

def @func_4888() -> (Tensor[(4, 3, 5), float64], Tensor[(4, 3, 5), float64]) {
  %261 = @func_3384() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64]) */;
  %262 = %261.2;
  %263 = cast(%262, dtype="float64") /* ty=Tensor[(4, 3, 5), float64] */;
  %264 = cast(%262, dtype="float64") /* ty=Tensor[(4, 3, 5), float64] */;
  %265 = reshape(%263, newshape=[4, 3, 5]) /* ty=Tensor[(4, 3, 5), float64] */;
  %266 = reshape(%264, newshape=[4, 3, 5]) /* ty=Tensor[(4, 3, 5), float64] */;
  %267 = @func_382(%265, %266) /* ty=(Tensor[(4, 3, 5), float64],) */;
  %268 = %267.0;
  (%262, %268)
}

def @func_4384() -> (Tensor[(640), uint8],) {
  %271 = fn () -> (Tensor[(640), uint8],) {
    %269 = @func_2870() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(640), uint8], Tensor[(8, 8, 10), float32]) */;
    %270 = %269.1;
    (%270,)
  };
  %271() /* ty=(Tensor[(640), uint8],) */
}

def @func_7603() -> (Tensor[(15, 9, 1), float32], Tensor[(15, 9, 1), float32], Tensor[(45), int8], Tensor[(4, 3, 5), float64], Tensor[(15, 9, 1), float32]) {
  %272 = @func_6951() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float32], Tensor[(15, 9, 1), float32]) */;
  %273 = @func_4547() /* ty=(Tensor[(15, 9, 1), float32],) */;
  %274 = @func_6982() /* ty=(Tensor[(4, 3, 5), float32], Tensor[(60), float64], Tensor[(45), int8]) */;
  %275 = @func_6543() /* ty=(Tensor[(4, 3, 5), float32], Tensor[(15, 9, 1), float32]) */;
  %276 = %272.0;
  %277 = %273.0;
  %278 = %274.2;
  %279 = @func_2536() /* ty=Tensor[(4, 3, 5), float64] */;
  %280 = %275.1;
  (%276, %277, %278, %279, %280)
}

def @func_4786(%var_4715: Tensor[(12, 2, 2), float64], %var_4716: Tensor[(12, 2, 2), float64]) -> (Tensor[(12, 2, 2), bool], Tensor[(4, 3, 5), float32], Tensor[(4, 3, 5), float32], Tensor[(4, 3, 5), float32], Tensor[(15, 9, 1), float32]) {
  %281 = cast(%var_4716, dtype="bool") /* ty=Tensor[(12, 2, 2), bool] */;
  %282 = shape_of(%var_4715, dtype="int32") /* ty=Tensor[(3), int32] */;
  %283 = cast(%var_4715, dtype="bool") /* ty=Tensor[(12, 2, 2), bool] */;
  %284 = dyn.reshape(%281, %282, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %285 = @func_3207() /* ty=(Tensor[(4, 3, 5), float32],) */;
  %286 = @func_4042() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float32]) */;
  %287 = @func_2731() /* ty=(Tensor[(4, 3, 5), float32],) */;
  %288 = @func_2551() /* ty=(Tensor[(15, 9, 1), float32],) */;
  %289 = greater(%283, %284) /* ty=Tensor[(12, 2, 2), bool] */;
  %290 = %285.0;
  %291 = %286.1;
  %292 = %287.0;
  %293 = %288.0;
  (%289, %290, %291, %292, %293)
}

def @func_9028() -> (Tensor[(4, 3, 5), float32], Tensor[(60), float64], Tensor[(1, 2730), float64]) {
  @func_9026() /* ty=(Tensor[(4, 3, 5), float32], Tensor[(60), float64], Tensor[(1, 2730), float64]) */
}

def @func_6232() -> (Tensor[(4, 3, 5), float32], Tensor[(15, 9, 1), float32]) {
  %298 = fn () -> (Tensor[(4, 3, 5), float32], Tensor[(15, 9, 1), float32]) {
    %294 = @func_2731() /* ty=(Tensor[(4, 3, 5), float32],) */;
    %295 = @func_3384() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64]) */;
    %296 = %294.0;
    %297 = %295.1;
    (%296, %297)
  };
  %298() /* ty=(Tensor[(4, 3, 5), float32], Tensor[(15, 9, 1), float32]) */
}

def @func_6679(%var_6649: Tensor[(11, 4, 5), int64], %var_6650: Tensor[(11, 4, 5), int64], %var_6658: Tensor[(6, 45), float32]) -> (Tensor[(11, 4, 5), int64], Tensor[(15, 9, 2), bool], Tensor[(6, 45), float32]) {
  %299 = cast(%var_6650, dtype="int64") /* ty=Tensor[(11, 4, 5), int64] */;
  %300 = shape_of(%var_6649, dtype="int32") /* ty=Tensor[(3), int32] */;
  %301 = cast(%var_6649, dtype="int64") /* ty=Tensor[(11, 4, 5), int64] */;
  %302 = dyn.reshape(%299, %300, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %303 = cast(%var_6658, dtype="float32") /* ty=Tensor[(6, 45), float32] */;
  %304 = reshape(%303, newshape=[15, 9, 2]) /* ty=Tensor[(15, 9, 2), float32] */;
  %305 = @func_6500(%304) /* ty=(Tensor[(15, 9, 2), bool], Tensor[(15, 9, 2), float32]) */;
  %306 = bitwise_and(%301, %302) /* ty=Tensor[(11, 4, 5), int64] */;
  %307 = %305.0;
  (%306, %307, %var_6658)
}

def @func_8223(%var_8220: Tensor[(540), float32], %var_8221: Tensor[(84, 16), int16], %var_8222: Tensor[(15, 9, 6), bool]) -> (Tensor[(15, 9, 1), float32], Tensor[(540), float32], Tensor[(4, 3, 5), float64], Tensor[(10, 4, 9), bool], Tensor[(360), float64], Tensor[(2, 320), uint8], Tensor[(84, 16), float64], Tensor[(15, 9, 6), bool], Tensor[(60), float64], Tensor[(1620), float32]) {
  %346 = fn (%var_8173: Tensor[(540), float32], %var_8174: Tensor[(84, 16), int16], %var_8195: Tensor[(15, 9, 6), bool]) -> (Tensor[(15, 9, 1), float32], Tensor[(540), float32], Tensor[(4, 3, 5), float64], Tensor[(10, 4, 9), bool], Tensor[(360), float64], Tensor[(2, 320), uint8], Tensor[(84, 16), float64], Tensor[(15, 9, 6), bool], Tensor[(60), float64], Tensor[(1620), float32]) {
    %308 = @func_2130() /* ty=(Tensor[(15, 9, 1), float32],) */;
    %309 = @func_4062() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64]) */;
    %310 = cast(meta[relay.Constant][13] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
    %311 = reshape(%310, newshape=[10, 4, 9]) /* ty=Tensor[(10, 4, 9), float64] */;
    %312 = @func_5106(%311) /* ty=(Tensor[(10, 4, 9), bool],) */;
    %313 = %309.1;
    %314 = cast(%313, dtype="float32") /* ty=Tensor[(4, 3, 5), float32] */;
    %315 = reshape(%314, newshape=[4, 3, 5]) /* ty=Tensor[(4, 3, 5), float32] */;
    %316 = @func_5708(%315) /* ty=(Tensor[(4, 3, 5), float32], Tensor[(8, 8, 10), uint8], Tensor[(2, 320), uint8]) */;
    %317 = cast(%var_8173, dtype="float32") /* ty=Tensor[(540), float32] */;
    %318 = cast(%var_8174, dtype="int16") /* ty=Tensor[(84, 16), int16] */;
    %319 = reshape(%317, newshape=[1, 540]) /* ty=Tensor[(1, 540), float32] */;
    %320 = reshape(%318, newshape=[1344]) /* ty=Tensor[(1344), int16] */;
    %321 = @func_7736(%319, %320) /* ty=(Tensor[(15, 9, 4), float64], Tensor[(15, 9, 540), float32], Tensor[(6, 16, 14), bool], Tensor[(1344), int16], Tensor[(4, 3, 5), float32]) */;
    %322 = %321.3;
    %323 = cast(%322, dtype="float64") /* ty=Tensor[(1344), float64] */;
    %324 = shape_of(%var_8174, dtype="int32") /* ty=Tensor[(2), int32] */;
    %325 = cast(%var_8174, dtype="float64") /* ty=Tensor[(84, 16), float64] */;
    %326 = dyn.reshape(%323, %324, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %327 = @func_7603() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(15, 9, 1), float32], Tensor[(45), int8], Tensor[(4, 3, 5), float64], Tensor[(15, 9, 1), float32]) */;
    %328 = %327.1;
    %329 = @func_5489() /* ty=Tensor[(15, 9, 1), float32] */;
    %330 = cast(%329, dtype="bool") /* ty=Tensor[(15, 9, 1), bool] */;
    %331 = shape_of(%328, dtype="int32") /* ty=Tensor[(3), int32] */;
    %332 = cast(%328, dtype="bool") /* ty=Tensor[(15, 9, 1), bool] */;
    %333 = dyn.reshape(%330, %331, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %334 = logical_or(%332, %333) /* ty=Tensor[(15, 9, ?), bool] */;
    %335 = cast(%334, dtype="bool") /* ty=Tensor[(15, 9, ?), bool] */;
    %336 = cast(%var_8195, dtype="bool") /* ty=Tensor[(15, 9, 6), bool] */;
    %337 = cast(meta[relay.Constant][14] /* ty=Tensor[(1620), float32] */, dtype="float32") /* ty=Tensor[(1620), float32] */;
    %338 = reshape(%337, newshape=[15, 9, 12]) /* ty=Tensor[(15, 9, 12), float32] */;
    %339 = @func_2623(%338) /* ty=(Tensor[(15, 9, 12), float32], Tensor[(14, 15, 13), uint32], Tensor[(2730), uint32], Tensor[(60), float64]) */;
    %340 = %308.0;
    %341 = %312.0;
    %342 = %316.2;
    %343 = floor_mod(%325, %326) /* ty=Tensor[(84, 16), float64] */;
    %344 = logical_or(%335, %336) /* ty=Tensor[(15, 9, 6), bool] */;
    %345 = %339.3;
    (%340, %var_8173, %313, %341, meta[relay.Constant][13] /* ty=Tensor[(360), float64] */, %342, %343, %344, %345, meta[relay.Constant][14] /* ty=Tensor[(1620), float32] */)
  };
  %346(%var_8220, %var_8221, %var_8222) /* ty=(Tensor[(15, 9, 1), float32], Tensor[(540), float32], Tensor[(4, 3, 5), float64], Tensor[(10, 4, 9), bool], Tensor[(360), float64], Tensor[(2, 320), uint8], Tensor[(84, 16), float64], Tensor[(15, 9, 6), bool], Tensor[(60), float64], Tensor[(1620), float32]) */
}

def @func_6186() -> (Tensor[(4, 3, 5), float32], Tensor[(4, 3, 5), bool], Tensor[(4, 3, 5), bool], Tensor[(4, 3, 5), uint32]) {
  %355 = fn () -> (Tensor[(4, 3, 5), float32], Tensor[(4, 3, 5), bool], Tensor[(4, 3, 5), bool], Tensor[(4, 3, 5), uint32]) {
    %347 = @func_2731() /* ty=(Tensor[(4, 3, 5), float32],) */;
    %348 = @func_5926() /* ty=Tensor[(4, 3, 5), bool] */;
    %349 = cast(%348, dtype="float32") /* ty=Tensor[(4, 3, 5), float32] */;
    %350 = reshape(%349, newshape=[4, 3, 5]) /* ty=Tensor[(4, 3, 5), float32] */;
    %351 = @func_2816(%350) /* ty=(Tensor[(4, 3, 5), uint32],) */;
    %352 = %347.0;
    %353 = @func_5926() /* ty=Tensor[(4, 3, 5), bool] */;
    %354 = %351.0;
    (%352, %348, %353, %354)
  };
  %355() /* ty=(Tensor[(4, 3, 5), float32], Tensor[(4, 3, 5), bool], Tensor[(4, 3, 5), bool], Tensor[(4, 3, 5), uint32]) */
}

def @func_8115() -> Tensor[(640), uint8] {
  %357 = fn () -> Tensor[(640), uint8] {
    %356 = @func_4383() /* ty=(Tensor[(640), uint8],) */;
    %356.0
  };
  %357() /* ty=Tensor[(640), uint8] */
}

def @func_8947(%var_8945: Tensor[(7, 390), uint32]) -> (Tensor[(4, 3, 5), float32], Tensor[(15, 9, 1), float32], Tensor[(7, 390), bool], Tensor[(4, 3, 5), float32], Tensor[(1, 48), float64]) {
  @func_8944(%var_8945) /* ty=(Tensor[(4, 3, 5), float32], Tensor[(15, 9, 1), float32], Tensor[(7, 390), bool], Tensor[(4, 3, 5), float32], Tensor[(1, 48), float64]) */
}

def @func_1611(%var_1610: Tensor[(8, 8, 10), uint8]) -> (Tensor[(8, 8, 10), uint8],) {
  %363 = fn (%var_1603: Tensor[(8, 8, 10), uint8]) -> (Tensor[(8, 8, 10), uint8],) {
    %358 = cast(%var_1603, dtype="uint8") /* ty=Tensor[(8, 8, 10), uint8] */;
    %359 = shape_of(meta[relay.Constant][15] /* ty=Tensor[(8, 8, 10), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %360 = cast(meta[relay.Constant][15] /* ty=Tensor[(8, 8, 10), uint8] */, dtype="uint8") /* ty=Tensor[(8, 8, 10), uint8] */;
    %361 = dyn.reshape(%358, %359, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %362 = right_shift(%360, %361) /* ty=Tensor[(8, 8, 10), uint8] */;
    (%362,)
  };
  %363(%var_1610) /* ty=(Tensor[(8, 8, 10), uint8],) */
}

def @func_4114() -> (Tensor[(4, 3, 5), float32], Tensor[(60), float64], Tensor[(1620), float32]) {
  %370 = fn () -> (Tensor[(4, 3, 5), float32], Tensor[(60), float64], Tensor[(1620), float32]) {
    %364 = @func_3207() /* ty=(Tensor[(4, 3, 5), float32],) */;
    %365 = cast(meta[relay.Constant][16] /* ty=Tensor[(1620), float32] */, dtype="float32") /* ty=Tensor[(1620), float32] */;
    %366 = reshape(%365, newshape=[15, 9, 12]) /* ty=Tensor[(15, 9, 12), float32] */;
    %367 = @func_2623(%366) /* ty=(Tensor[(15, 9, 12), float32], Tensor[(14, 15, 13), uint32], Tensor[(2730), uint32], Tensor[(60), float64]) */;
    %368 = %364.0;
    %369 = %367.3;
    (%368, %369, meta[relay.Constant][16] /* ty=Tensor[(1620), float32] */)
  };
  %370() /* ty=(Tensor[(4, 3, 5), float32], Tensor[(60), float64], Tensor[(1620), float32]) */
}

def @func_8380(%var_8379: Tensor[(1620), float64]) -> (Tensor[(15, 9, ?), float32], Tensor[(15, 9, 12), bool], Tensor[(1620), float64]) {
  %376 = fn (%var_8375: Tensor[(1620), float64]) -> (Tensor[(15, 9, ?), float32], Tensor[(15, 9, 12), bool], Tensor[(1620), float64]) {
    %371 = @func_5438() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(15, 9, ?), float32]) */;
    %372 = cast(%var_8375, dtype="float64") /* ty=Tensor[(1620), float64] */;
    %373 = reshape(%372, newshape=[15, 9, 12]) /* ty=Tensor[(15, 9, 12), float64] */;
    %374 = %371.1;
    %375 = @func_3274(%373) /* ty=Tensor[(15, 9, 12), bool] */;
    (%374, %375, %var_8375)
  };
  %376(%var_8379) /* ty=(Tensor[(15, 9, ?), float32], Tensor[(15, 9, 12), bool], Tensor[(1620), float64]) */
}

def @func_7898() -> Tensor[(4, 3, 5), float32] {
  %377 = @func_5155() /* ty=(Tensor[(4, 3, 5), float32],) */;
  %377.0
}

def @func_8335(%var_8330: Tensor[(32), uint64], %var_8331: Tensor[(2730), uint32]) -> (Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), bool], Tensor[(4, 3, 5), float64], Tensor[(32), uint64], Tensor[(2730), uint32]) {
  %378 = @func_2431() /* ty=(Tensor[(15, 9, 1), float32],) */;
  %379 = @func_7653() /* ty=(Tensor[(4, 3, 5), float32], Tensor[(4, 3, 5), float32]) */;
  %380 = %379.1;
  %381 = cast(%380, dtype="float64") /* ty=Tensor[(4, 3, 5), float64] */;
  %382 = tan(%381) /* ty=Tensor[(4, 3, 5), float64] */;
  %383 = cast(%380, dtype="bool") /* ty=Tensor[(4, 3, 5), bool] */;
  %384 = shape_of(%382, dtype="int32") /* ty=Tensor[(3), int32] */;
  %385 = cast(%382, dtype="bool") /* ty=Tensor[(4, 3, 5), bool] */;
  %386 = dyn.reshape(%383, %384, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %387 = cast(%var_8330, dtype="uint64") /* ty=Tensor[(32), uint64] */;
  %388 = cast(%var_8331, dtype="uint32") /* ty=Tensor[(2730), uint32] */;
  %389 = reshape(%387, newshape=[32]) /* ty=Tensor[(32), uint64] */;
  %390 = reshape(%388, newshape=[2730]) /* ty=Tensor[(2730), uint32] */;
  %391 = @func_3632(%389, %390) /* ty=(Tensor[(4, 3, 5), float64], Tensor[(60, 1), float64], Tensor[(4), uint64], Tensor[(32), uint64], Tensor[(14, 15, 13), float64], Tensor[(2730), uint32]) */;
  %392 = %378.0;
  %393 = logical_and(%385, %386) /* ty=Tensor[(4, 3, 5), bool] */;
  %394 = %391.0;
  (%392, %393, %394, %var_8330, %var_8331)
}

def @func_887(%var_886: Tensor[(4), uint64]) -> (Tensor[(2, 4, 14), float32], Tensor[(4, 3, 5), float64], Tensor[(4), uint64], Tensor[(32), uint64], Tensor[(4, 3, 5), float64]) {
  %409 = fn (%var_876: Tensor[(4), uint64]) -> (Tensor[(2, 4, 14), float32], Tensor[(4, 3, 5), float64], Tensor[(4), uint64], Tensor[(32), uint64], Tensor[(4, 3, 5), float64]) {
    %395 = cast(meta[relay.Constant][17] /* ty=Tensor[(2, 4, 14), float32] */, dtype="float32") /* ty=Tensor[(2, 4, 14), float32] */;
    %396 = cast(%var_876, dtype="uint64") /* ty=Tensor[(4), uint64] */;
    %397 = cast(meta[relay.Constant][18] /* ty=Tensor[(32), uint64] */, dtype="uint64") /* ty=Tensor[(32), uint64] */;
    %398 = reshape(%396, newshape=[2, 2, 1]) /* ty=Tensor[(2, 2, 1), uint64] */;
    %399 = reshape(%397, newshape=[2, 2, 8]) /* ty=Tensor[(2, 2, 8), uint64] */;
    %400 = @func_665(%398, %399) /* ty=(Tensor[(2, 2, 8), bool], Tensor[(60), float64], Tensor[(2730), uint32], Tensor[(60, 1), float64], Tensor[(4, 3, 5), float64]) */;
    %401 = %400.4;
    %402 = cast(%401, dtype="float64") /* ty=Tensor[(4, 3, 5), float64] */;
    %403 = cast(%401, dtype="float64") /* ty=Tensor[(4, 3, 5), float64] */;
    %404 = reshape(%402, newshape=[4, 3, 5]) /* ty=Tensor[(4, 3, 5), float64] */;
    %405 = reshape(%403, newshape=[4, 3, 5]) /* ty=Tensor[(4, 3, 5), float64] */;
    %406 = @func_382(%404, %405) /* ty=(Tensor[(4, 3, 5), float64],) */;
    %407 = sqrt(%395) /* ty=Tensor[(2, 4, 14), float32] */;
    %408 = %406.0;
    (%407, %401, %var_876, meta[relay.Constant][18] /* ty=Tensor[(32), uint64] */, %408)
  };
  %409(%var_886) /* ty=(Tensor[(2, 4, 14), float32], Tensor[(4, 3, 5), float64], Tensor[(4), uint64], Tensor[(32), uint64], Tensor[(4, 3, 5), float64]) */
}

def @func_3548(%var_3547: Tensor[(15, 9, 6), float32]) -> (Tensor[(15, 9, 6), int64],) {
  %415 = fn (%var_3535: Tensor[(15, 9, 6), float32]) -> (Tensor[(15, 9, 6), int64],) {
    %410 = @func_3384() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64]) */;
    %411 = %410.0;
    %412 = cast(%411, dtype="int64") /* ty=Tensor[(15, 9, 1), int64] */;
    %413 = cast(%var_3535, dtype="int64") /* ty=Tensor[(15, 9, 6), int64] */;
    %414 = right_shift(%412, %413) /* ty=Tensor[(15, 9, 6), int64] */;
    (%414,)
  };
  %415(%var_3547) /* ty=(Tensor[(15, 9, 6), int64],) */
}

def @func_7654() -> (Tensor[(4, 3, 5), float32], Tensor[(4, 3, 5), float32]) {
  %420 = fn () -> (Tensor[(4, 3, 5), float32], Tensor[(4, 3, 5), float32]) {
    %416 = @func_6426() /* ty=(Tensor[(4, 3, 5), float32], Tensor[(15, 9, 640), uint16], Tensor[(15, 9, 1), float32]) */;
    %417 = @func_5155() /* ty=(Tensor[(4, 3, 5), float32],) */;
    %418 = %416.0;
    %419 = %417.0;
    (%418, %419)
  };
  %420() /* ty=(Tensor[(4, 3, 5), float32], Tensor[(4, 3, 5), float32]) */
}

def @func_6097() -> (Tensor[(4, 3, 5), float32], Tensor[(4, 3, 5), float32], Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float32]) {
  %421 = @func_5926() /* ty=Tensor[(4, 3, 5), bool] */;
  %422 = cast(%421, dtype="float32") /* ty=Tensor[(4, 3, 5), float32] */;
  %423 = @func_4346() /* ty=(Tensor[(4, 3, 5), float32],) */;
  %424 = asin(%422) /* ty=Tensor[(4, 3, 5), float32] */;
  %425 = @func_3605() /* ty=Tensor[(4, 3, 5), float32] */;
  %426 = @func_4177() /* ty=Tensor[(15, 9, 1), float32] */;
  %427 = %423.0;
  (%424, %425, %426, %427)
}

def @func_4711() -> (Tensor[(15, 9, 1), float32], Tensor[(640), uint8]) {
  %430 = fn () -> (Tensor[(15, 9, 1), float32], Tensor[(640), uint8]) {
    %428 = @func_2200() /* ty=Tensor[(15, 9, 1), float32] */;
    %429 = @func_4668() /* ty=Tensor[(640), uint8] */;
    (%428, %429)
  };
  %430() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(640), uint8]) */
}

def @func_3449() -> (Tensor[(4, 3, 5), float64],) {
  %433 = fn () -> (Tensor[(4, 3, 5), float64],) {
    %431 = @func_1922() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64], Tensor[(4, 1), uint64]) */;
    %432 = %431.1;
    (%432,)
  };
  %433() /* ty=(Tensor[(4, 3, 5), float64],) */
}

def @func_7280(%var_7278: Tensor[(5, 7, 6), float32]) -> (Tensor[(4, 3, 5), float32], int8, Tensor[(5, 7, 6), float32], Tensor[(5, 7, 6), float32]) {
  @func_7277(%var_7278) /* ty=(Tensor[(4, 3, 5), float32], int8, Tensor[(5, 7, 6), float32], Tensor[(5, 7, 6), float32]) */
}

def @func_2509() -> Tensor[(15, 9, 1), float32] {
  @func_2507() /* ty=Tensor[(15, 9, 1), float32] */
}

def @func_6156() -> Tensor[(4, 3, 5), bool] {
  @func_6154() /* ty=Tensor[(4, 3, 5), bool] */
}

def @func_4128(%var_4115: Tensor[(12, 10, 14), float64], %var_4119: Tensor[(1344), int16]) -> (Tensor[(12, 10, 14), float64], Tensor[(60), float64], Tensor[(1344), int16]) {
  %434 = cast(%var_4115, dtype="float64") /* ty=Tensor[(12, 10, 14), float64] */;
  %435 = cast(%var_4119, dtype="int16") /* ty=Tensor[(1344), int16] */;
  %436 = reshape(%435, newshape=[1344]) /* ty=Tensor[(1344), int16] */;
  %437 = @func_1992(%436) /* ty=(Tensor[(4, 1), uint64], Tensor[(1344), int16], Tensor[(6, 16, 14), float64], Tensor[(4, 3, 5), float64], Tensor[(60), float64]) */;
  %438 = atan(%434) /* ty=Tensor[(12, 10, 14), float64] */;
  %439 = %437.4;
  (%438, %439, %var_4119)
}

def @func_5928() -> Tensor[(4, 3, 5), bool] {
  @func_5926() /* ty=Tensor[(4, 3, 5), bool] */
}

def @func_6503(%var_6501: Tensor[(15, 9, 2), float32]) -> (Tensor[(15, 9, 2), bool], Tensor[(15, 9, 2), float32]) {
  @func_6500(%var_6501) /* ty=(Tensor[(15, 9, 2), bool], Tensor[(15, 9, 2), float32]) */
}

def @func_8688() -> (Tensor[(4, 3, 5), float32],) {
  %442 = fn () -> (Tensor[(4, 3, 5), float32],) {
    %440 = @func_3961() /* ty=(Tensor[(4, 3, 5), float32],) */;
    %441 = %440.0;
    (%441,)
  };
  %442() /* ty=(Tensor[(4, 3, 5), float32],) */
}

def @func_9178() -> Tensor[(4, 3, 5), float32] {
  %443 = @func_8416() /* ty=(Tensor[(4, 3, 5), float32], Tensor[(640), uint8]) */;
  %443.0
}

def @func_5757(%var_5756: int8) -> (Tensor[(5, 4, 16), int8], Tensor[(4, 3, 5), float32]) {
  %448 = fn (%var_5730: int8) -> (Tensor[(5, 4, 16), int8], Tensor[(4, 3, 5), float32]) {
    %444 = cast(%var_5730, dtype="int8") /* ty=int8 */;
    %445 = cast(meta[relay.Constant][19] /* ty=Tensor[(5, 4, 16), int8] */, dtype="int8") /* ty=Tensor[(5, 4, 16), int8] */;
    %446 = logical_xor(%444, %445) /* ty=Tensor[(5, 4, 16), int8] */;
    %447 = @func_4515() /* ty=Tensor[(4, 3, 5), float32] */;
    (%446, %447)
  };
  %448(%var_5756) /* ty=(Tensor[(5, 4, 16), int8], Tensor[(4, 3, 5), float32]) */
}

def @func_3524(%var_3518: Tensor[(640), uint8]) -> (Tensor[(4, 3, 5), float32], Tensor[(4, 3, 5), float32], Tensor[(8, 8, 10), uint8], Tensor[(640), uint8]) {
  %449 = @func_2959() /* ty=(Tensor[(4, 3, 5), float32], Tensor[(4, 3, 5), bool]) */;
  %450 = @func_2731() /* ty=(Tensor[(4, 3, 5), float32],) */;
  %451 = %450.0;
  %452 = cast(%451, dtype="float32") /* ty=Tensor[(4, 3, 5), float32] */;
  %453 = cast(%var_3518, dtype="uint8") /* ty=Tensor[(640), uint8] */;
  %454 = reshape(%453, newshape=[8, 8, 10]) /* ty=Tensor[(8, 8, 10), uint8] */;
  %455 = @func_1609(%454) /* ty=(Tensor[(8, 8, 10), uint8],) */;
  %456 = %449.0;
  %457 = atan(%452) /* ty=Tensor[(4, 3, 5), float32] */;
  %458 = %455.0;
  (%456, %457, %458, %var_3518)
}

def @func_665(%var_632: Tensor[(2, 2, 1), uint64], %var_633: Tensor[(2, 2, 8), uint64]) -> (Tensor[(2, 2, 8), bool], Tensor[(60), float64], Tensor[(2730), uint32], Tensor[(60, 1), float64], Tensor[(4, 3, 5), float64]) {
  %459 = cast(%var_632, dtype="bool") /* ty=Tensor[(2, 2, 1), bool] */;
  %460 = cast(%var_633, dtype="bool") /* ty=Tensor[(2, 2, 8), bool] */;
  %461 = cast(meta[relay.Constant][20] /* ty=Tensor[(2730), uint32] */, dtype="uint32") /* ty=Tensor[(2730), uint32] */;
  %462 = cast(meta[relay.Constant][20] /* ty=Tensor[(2730), uint32] */, dtype="uint32") /* ty=Tensor[(2730), uint32] */;
  %463 = cast(meta[relay.Constant][21] /* ty=Tensor[(60, 1), float64] */, dtype="float64") /* ty=Tensor[(60, 1), float64] */;
  %464 = reshape(%461, newshape=[14, 15, 13]) /* ty=Tensor[(14, 15, 13), uint32] */;
  %465 = reshape(%462, newshape=[14, 15, 13]) /* ty=Tensor[(14, 15, 13), uint32] */;
  %466 = reshape(%463, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %467 = @func_607(%464, %465, %466) /* ty=(Tensor[(14, 15, 13), uint32], Tensor[(14, 15, 13), float64], Tensor[(4, 3, 5), float64], Tensor[(60), float64]) */;
  %468 = %467.3;
  %469 = cast(%468, dtype="float64") /* ty=Tensor[(60), float64] */;
  %470 = cast(meta[relay.Constant][21] /* ty=Tensor[(60, 1), float64] */, dtype="float64") /* ty=Tensor[(60, 1), float64] */;
  %471 = reshape(%469, newshape=[4, 3, 5]) /* ty=Tensor[(4, 3, 5), float64] */;
  %472 = reshape(%470, newshape=[4, 3, 5]) /* ty=Tensor[(4, 3, 5), float64] */;
  %473 = @func_382(%471, %472) /* ty=(Tensor[(4, 3, 5), float64],) */;
  %474 = not_equal(%459, %460) /* ty=Tensor[(2, 2, 8), bool] */;
  %475 = %473.0;
  (%474, %468, meta[relay.Constant][20] /* ty=Tensor[(2730), uint32] */, meta[relay.Constant][21] /* ty=Tensor[(60, 1), float64] */, %475)
}

def @func_7540(%var_7538: Tensor[(10, 12, 4), int32], %var_7539: Tensor[(10, 12, 4), int32]) -> (Tensor[(10, 12, 4), bool],) {
  %481 = fn (%var_7530: Tensor[(10, 12, 4), int32], %var_7531: Tensor[(10, 12, 4), int32]) -> (Tensor[(10, 12, 4), bool],) {
    %476 = cast(%var_7531, dtype="bool") /* ty=Tensor[(10, 12, 4), bool] */;
    %477 = shape_of(%var_7530, dtype="int32") /* ty=Tensor[(3), int32] */;
    %478 = cast(%var_7530, dtype="bool") /* ty=Tensor[(10, 12, 4), bool] */;
    %479 = dyn.reshape(%476, %477, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %480 = less(%478, %479) /* ty=Tensor[(10, 12, 4), bool] */;
    (%480,)
  };
  %481(%var_7538, %var_7539) /* ty=(Tensor[(10, 12, 4), bool],) */
}

def @func_6813() -> (Tensor[(15, 9, 1), float32], Tensor[(15, 9, 1), float32], Tensor[(15, 9, 1), float32]) {
  %487 = fn () -> (Tensor[(15, 9, 1), float32], Tensor[(15, 9, 1), float32], Tensor[(15, 9, 1), float32]) {
    %482 = @func_2130() /* ty=(Tensor[(15, 9, 1), float32],) */;
    %483 = @func_6231() /* ty=(Tensor[(4, 3, 5), float32], Tensor[(15, 9, 1), float32]) */;
    %484 = @func_2200() /* ty=Tensor[(15, 9, 1), float32] */;
    %485 = %482.0;
    %486 = %483.1;
    (%484, %485, %486)
  };
  %487() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(15, 9, 1), float32], Tensor[(15, 9, 1), float32]) */
}

def @func_3635(%var_3633: Tensor[(32), uint64], %var_3634: Tensor[(2730), uint32]) -> (Tensor[(4, 3, 5), float64], Tensor[(60, 1), float64], Tensor[(4), uint64], Tensor[(32), uint64], Tensor[(14, 15, 13), float64], Tensor[(2730), uint32]) {
  %504 = fn (%var_3611: Tensor[(32), uint64], %var_3619: Tensor[(2730), uint32]) -> (Tensor[(4, 3, 5), float64], Tensor[(60, 1), float64], Tensor[(4), uint64], Tensor[(32), uint64], Tensor[(14, 15, 13), float64], Tensor[(2730), uint32]) {
    %488 = @func_1922() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64], Tensor[(4, 1), uint64]) */;
    %489 = cast(meta[relay.Constant][22] /* ty=Tensor[(4), uint64] */, dtype="uint64") /* ty=Tensor[(4), uint64] */;
    %490 = cast(%var_3611, dtype="uint64") /* ty=Tensor[(32), uint64] */;
    %491 = reshape(%489, newshape=[2, 2, 1]) /* ty=Tensor[(2, 2, 1), uint64] */;
    %492 = reshape(%490, newshape=[2, 2, 8]) /* ty=Tensor[(2, 2, 8), uint64] */;
    %493 = @func_665(%491, %492) /* ty=(Tensor[(2, 2, 8), bool], Tensor[(60), float64], Tensor[(2730), uint32], Tensor[(60, 1), float64], Tensor[(4, 3, 5), float64]) */;
    %494 = cast(%var_3619, dtype="uint32") /* ty=Tensor[(2730), uint32] */;
    %495 = cast(%var_3619, dtype="uint32") /* ty=Tensor[(2730), uint32] */;
    %496 = %493.3;
    %497 = cast(%496, dtype="float64") /* ty=Tensor[(60, 1), float64] */;
    %498 = reshape(%494, newshape=[14, 15, 13]) /* ty=Tensor[(14, 15, 13), uint32] */;
    %499 = reshape(%495, newshape=[14, 15, 13]) /* ty=Tensor[(14, 15, 13), uint32] */;
    %500 = reshape(%497, newshape=[60]) /* ty=Tensor[(60), float64] */;
    %501 = @func_607(%498, %499, %500) /* ty=(Tensor[(14, 15, 13), uint32], Tensor[(14, 15, 13), float64], Tensor[(4, 3, 5), float64], Tensor[(60), float64]) */;
    %502 = %488.1;
    %503 = %501.1;
    (%502, %496, meta[relay.Constant][22] /* ty=Tensor[(4), uint64] */, %var_3611, %503, %var_3619)
  };
  %504(%var_3633, %var_3634) /* ty=(Tensor[(4, 3, 5), float64], Tensor[(60, 1), float64], Tensor[(4), uint64], Tensor[(32), uint64], Tensor[(14, 15, 13), float64], Tensor[(2730), uint32]) */
}

def @func_2818(%var_2817: Tensor[(4, 3, 5), float32]) -> (Tensor[(4, 3, 5), uint32],) {
  %512 = fn (%var_2811: Tensor[(4, 3, 5), float32]) -> (Tensor[(4, 3, 5), uint32],) {
    %505 = @func_2731() /* ty=(Tensor[(4, 3, 5), float32],) */;
    %506 = %505.0;
    %507 = cast(%var_2811, dtype="uint32") /* ty=Tensor[(4, 3, 5), uint32] */;
    %508 = shape_of(%506, dtype="int32") /* ty=Tensor[(3), int32] */;
    %509 = cast(%506, dtype="uint32") /* ty=Tensor[(4, 3, 5), uint32] */;
    %510 = dyn.reshape(%507, %508, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %511 = logical_xor(%509, %510) /* ty=Tensor[(4, 3, 5), uint32] */;
    (%511,)
  };
  %512(%var_2817) /* ty=(Tensor[(4, 3, 5), uint32],) */
}

def @func_6286(%var_6285: Tensor[(15, 9, 9), float32]) -> (Tensor[(15, 9, 9), float32],) {
  %518 = fn (%var_6262: Tensor[(15, 9, 9), float32]) -> (Tensor[(15, 9, 9), float32],) {
    %513 = @func_2431() /* ty=(Tensor[(15, 9, 1), float32],) */;
    %514 = %513.0;
    %515 = cast(%514, dtype="float32") /* ty=Tensor[(15, 9, 1), float32] */;
    %516 = cast(%var_6262, dtype="float32") /* ty=Tensor[(15, 9, 9), float32] */;
    %517 = power(%515, %516) /* ty=Tensor[(15, 9, 9), float32] */;
    (%517,)
  };
  %518(%var_6285) /* ty=(Tensor[(15, 9, 9), float32],) */
}

def @func_5062(%var_5060: Tensor[(8, 8, 10), float32], %var_5061: Tensor[(210), float32]) -> (Tensor[(4, 3, 5), float32], Tensor[(8, 8, 10), int8], Tensor[(4, 3, 5), float64], Tensor[(210), float32]) {
  @func_5058(%var_5060, %var_5061) /* ty=(Tensor[(4, 3, 5), float32], Tensor[(8, 8, 10), int8], Tensor[(4, 3, 5), float64], Tensor[(210), float32]) */
}

def @func_612(%var_609: Tensor[(14, 15, 13), uint32], %var_610: Tensor[(14, 15, 13), uint32], %var_611: Tensor[(60), float64]) -> (Tensor[(14, 15, 13), uint32], Tensor[(14, 15, 13), float64], Tensor[(4, 3, 5), float64], Tensor[(60), float64]) {
  @func_607(%var_609, %var_610, %var_611) /* ty=(Tensor[(14, 15, 13), uint32], Tensor[(14, 15, 13), float64], Tensor[(4, 3, 5), float64], Tensor[(60), float64]) */
}

def @func_5329(%var_5327: Tensor[(210, 1), float32]) -> (Tensor[(4, 3, 5), bool], Tensor[(4, 3, 5), bool], Tensor[(4, 3, 5), float32], Tensor[(210, 4), uint8], Tensor[(4, 3, 5), float64]) {
  @func_5326(%var_5327) /* ty=(Tensor[(4, 3, 5), bool], Tensor[(4, 3, 5), bool], Tensor[(4, 3, 5), float32], Tensor[(210, 4), uint8], Tensor[(4, 3, 5), float64]) */
}

def @func_6733(%var_6713: Tensor[(768), float64], %var_6725: Tensor[(15, 9, 4), float32]) -> (Tensor[(15, 9, 1), float32], Tensor[(6, 8, 16), float64], Tensor[(768), float64], Tensor[(15, 9, 6), int64], Tensor[(810), float32], Tensor[(15, 9, 4), bool]) {
  %519 = @func_6543() /* ty=(Tensor[(4, 3, 5), float32], Tensor[(15, 9, 1), float32]) */;
  %520 = cast(%var_6713, dtype="float64") /* ty=Tensor[(768), float64] */;
  %521 = reshape(%520, newshape=[6, 8, 16]) /* ty=Tensor[(6, 8, 16), float64] */;
  %522 = @func_1585(%521) /* ty=(Tensor[(6, 8, 16), float64],) */;
  %523 = cast(meta[relay.Constant][23] /* ty=Tensor[(810), float32] */, dtype="float32") /* ty=Tensor[(810), float32] */;
  %524 = reshape(%523, newshape=[15, 9, 6]) /* ty=Tensor[(15, 9, 6), float32] */;
  %525 = @func_3546(%524) /* ty=(Tensor[(15, 9, 6), int64],) */;
  %526 = @func_3384() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64]) */;
  %527 = %526.1;
  %528 = cast(%527, dtype="bool") /* ty=Tensor[(15, 9, 1), bool] */;
  %529 = cast(%var_6725, dtype="bool") /* ty=Tensor[(15, 9, 4), bool] */;
  %530 = %519.1;
  %531 = %522.0;
  %532 = %525.0;
  %533 = not_equal(%528, %529) /* ty=Tensor[(15, 9, 4), bool] */;
  (%530, %531, %var_6713, %532, meta[relay.Constant][23] /* ty=Tensor[(810), float32] */, %533)
}

def @func_6737(%var_6735: Tensor[(768), float64], %var_6736: Tensor[(15, 9, 4), float32]) -> (Tensor[(15, 9, 1), float32], Tensor[(6, 8, 16), float64], Tensor[(768), float64], Tensor[(15, 9, 6), int64], Tensor[(810), float32], Tensor[(15, 9, 4), bool]) {
  @func_6733(%var_6735, %var_6736) /* ty=(Tensor[(15, 9, 1), float32], Tensor[(6, 8, 16), float64], Tensor[(768), float64], Tensor[(15, 9, 6), int64], Tensor[(810), float32], Tensor[(15, 9, 4), bool]) */
}

def @func_4790(%var_4788: Tensor[(12, 2, 2), float64], %var_4789: Tensor[(12, 2, 2), float64]) -> (Tensor[(12, 2, 2), bool], Tensor[(4, 3, 5), float32], Tensor[(4, 3, 5), float32], Tensor[(4, 3, 5), float32], Tensor[(15, 9, 1), float32]) {
  @func_4786(%var_4788, %var_4789) /* ty=(Tensor[(12, 2, 2), bool], Tensor[(4, 3, 5), float32], Tensor[(4, 3, 5), float32], Tensor[(4, 3, 5), float32], Tensor[(15, 9, 1), float32]) */
}

def @func_9156() -> (Tensor[(4, 3, 5), float32],) {
  %535 = fn () -> (Tensor[(4, 3, 5), float32],) {
    %534 = @func_7898() /* ty=Tensor[(4, 3, 5), float32] */;
    (%534,)
  };
  %535() /* ty=(Tensor[(4, 3, 5), float32],) */
}

def @main(%var_9349: Tensor[(15, 9, 3), float64]) -> Tensor[(15, 9, 3), float32] {
  %536 = @func_3083() /* ty=(Tensor[(15, 9, 1), float64],) */;
  %537 = %536.0;
  %538 = cast(%537, dtype="float32") /* ty=Tensor[(15, 9, 1), float32] */;
  %539 = cast(%var_9349, dtype="float32") /* ty=Tensor[(15, 9, 3), float32] */;
  floor_mod(%538, %539) /* ty=Tensor[(15, 9, 3), float32] */
}

def @func_4655(%var_4654: Tensor[(2730), uint32]) -> (Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64], Tensor[(2730), uint32], Tensor[(60), float64]) {
  %550 = fn (%var_4649: Tensor[(2730), uint32]) -> (Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64], Tensor[(2730), uint32], Tensor[(60), float64]) {
    %540 = @func_3384() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64]) */;
    %541 = cast(%var_4649, dtype="uint32") /* ty=Tensor[(2730), uint32] */;
    %542 = cast(%var_4649, dtype="uint32") /* ty=Tensor[(2730), uint32] */;
    %543 = cast(meta[relay.Constant][24] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
    %544 = reshape(%541, newshape=[14, 15, 13]) /* ty=Tensor[(14, 15, 13), uint32] */;
    %545 = reshape(%542, newshape=[14, 15, 13]) /* ty=Tensor[(14, 15, 13), uint32] */;
    %546 = reshape(%543, newshape=[60]) /* ty=Tensor[(60), float64] */;
    %547 = @func_607(%544, %545, %546) /* ty=(Tensor[(14, 15, 13), uint32], Tensor[(14, 15, 13), float64], Tensor[(4, 3, 5), float64], Tensor[(60), float64]) */;
    %548 = %540.1;
    %549 = %547.2;
    (%548, %549, %var_4649, meta[relay.Constant][24] /* ty=Tensor[(60), float64] */)
  };
  %550(%var_4654) /* ty=(Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64], Tensor[(2730), uint32], Tensor[(60), float64]) */
}

def @func_7802() -> (Tensor[(15, 9, 1), float32],) {
  %552 = fn () -> (Tensor[(15, 9, 1), float32],) {
    %551 = @func_6826() /* ty=Tensor[(15, 9, 1), float32] */;
    (%551,)
  };
  %552() /* ty=(Tensor[(15, 9, 1), float32],) */
}

def @func_5489() -> Tensor[(15, 9, 1), float32] {
  %553 = @func_2431() /* ty=(Tensor[(15, 9, 1), float32],) */;
  %553.0
}

def @func_1587(%var_1586: Tensor[(6, 8, 16), float64]) -> (Tensor[(6, 8, 16), float64],) {
  %556 = fn (%var_1582: Tensor[(6, 8, 16), float64]) -> (Tensor[(6, 8, 16), float64],) {
    %554 = cast(%var_1582, dtype="float64") /* ty=Tensor[(6, 8, 16), float64] */;
    %555 = sqrt(%554) /* ty=Tensor[(6, 8, 16), float64] */;
    (%555,)
  };
  %556(%var_1586) /* ty=(Tensor[(6, 8, 16), float64],) */
}

def @func_8050() -> (Tensor[(15, 9, 1), float32], Tensor[(210), float32], Tensor[(4, 3, 5), float32], Tensor[(3, 5, 14), bool]) {
  %573 = fn () -> (Tensor[(15, 9, 1), float32], Tensor[(210), float32], Tensor[(4, 3, 5), float32], Tensor[(3, 5, 14), bool]) {
    %557 = @func_7653() /* ty=(Tensor[(4, 3, 5), float32], Tensor[(4, 3, 5), float32]) */;
    %558 = cast(meta[relay.Constant][25] /* ty=Tensor[(210), float32] */, dtype="float32") /* ty=Tensor[(210), float32] */;
    %559 = reshape(%558, newshape=[3, 5, 14]) /* ty=Tensor[(3, 5, 14), float32] */;
    %560 = @func_2020(%559) /* ty=(Tensor[(3, 5, 14), float32], Tensor[(4, 3, 5), float64], Tensor[(4), uint64]) */;
    %561 = %560.0;
    %562 = cast(%561, dtype="float32") /* ty=Tensor[(3, 5, 14), float32] */;
    %563 = reshape(%562, newshape=[5, 7, 6]) /* ty=Tensor[(5, 7, 6), float32] */;
    %564 = @func_7277(%563) /* ty=(Tensor[(4, 3, 5), float32], int8, Tensor[(5, 7, 6), float32], Tensor[(5, 7, 6), float32]) */;
    %565 = %564.2;
    %566 = cast(%565, dtype="bool") /* ty=Tensor[(5, 7, 6), bool] */;
    %567 = shape_of(%561, dtype="int32") /* ty=Tensor[(3), int32] */;
    %568 = cast(%561, dtype="bool") /* ty=Tensor[(3, 5, 14), bool] */;
    %569 = dyn.reshape(%566, %567, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %570 = @func_4177() /* ty=Tensor[(15, 9, 1), float32] */;
    %571 = %557.0;
    %572 = less_equal(%568, %569) /* ty=Tensor[(3, 5, 14), bool] */;
    (%570, meta[relay.Constant][25] /* ty=Tensor[(210), float32] */, %571, %572)
  };
  %573() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(210), float32], Tensor[(4, 3, 5), float32], Tensor[(3, 5, 14), bool]) */
}

def @func_3209() -> (Tensor[(4, 3, 5), float32],) {
  @func_3207() /* ty=(Tensor[(4, 3, 5), float32],) */
}

def @func_4997(%var_4996: Tensor[(15, 9, 1), float32]) -> Tensor[(15, 9, ?), int64] {
  %580 = fn (%var_4990: Tensor[(15, 9, 1), float32]) -> Tensor[(15, 9, ?), int64] {
    %574 = @func_2130() /* ty=(Tensor[(15, 9, 1), float32],) */;
    %575 = %574.0;
    %576 = cast(%var_4990, dtype="int64") /* ty=Tensor[(15, 9, 1), int64] */;
    %577 = shape_of(%575, dtype="int32") /* ty=Tensor[(3), int32] */;
    %578 = cast(%575, dtype="int64") /* ty=Tensor[(15, 9, 1), int64] */;
    %579 = dyn.reshape(%576, %577, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    left_shift(%578, %579) /* ty=Tensor[(15, 9, ?), int64] */
  };
  %580(%var_4996) /* ty=Tensor[(15, 9, ?), int64] */
}

def @func_4950() -> (Tensor[(4, 3, 5), float32],) {
  %583 = fn () -> (Tensor[(4, 3, 5), float32],) {
    %581 = @func_2731() /* ty=(Tensor[(4, 3, 5), float32],) */;
    %582 = %581.0;
    (%582,)
  };
  %583() /* ty=(Tensor[(4, 3, 5), float32],) */
}

def @func_2386(%var_2385: Tensor[(16, 15, 8), float32]) -> (Tensor[(16, 15, 8), float32],) {
  %586 = fn (%var_2377: Tensor[(16, 15, 8), float32]) -> (Tensor[(16, 15, 8), float32],) {
    %584 = cast(%var_2377, dtype="float32") /* ty=Tensor[(16, 15, 8), float32] */;
    %585 = exp(%584) /* ty=Tensor[(16, 15, 8), float32] */;
    (%585,)
  };
  %586(%var_2385) /* ty=(Tensor[(16, 15, 8), float32],) */
}

def @func_3207() -> (Tensor[(4, 3, 5), float32],) {
  %587 = @func_2959() /* ty=(Tensor[(4, 3, 5), float32], Tensor[(4, 3, 5), bool]) */;
  %588 = %587.0;
  (%588,)
}

def @func_7224() -> (Tensor[(4, 3, 5), float64], Tensor[(640), uint8]) {
  %589 = @func_5872() /* ty=(Tensor[(4, 3, 5), float64],) */;
  %590 = @func_4710() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(640), uint8]) */;
  %591 = %589.0;
  %592 = %590.1;
  (%591, %592)
}

def @func_5108(%var_5107: Tensor[(10, 4, 9), float64]) -> (Tensor[(10, 4, 9), bool],) {
  %600 = fn (%var_5088: Tensor[(10, 4, 9), float64]) -> (Tensor[(10, 4, 9), bool],) {
    %593 = cast(%var_5088, dtype="float64") /* ty=Tensor[(10, 4, 9), float64] */;
    %594 = log(%593) /* ty=Tensor[(10, 4, 9), float64] */;
    %595 = cast(%594, dtype="bool") /* ty=Tensor[(10, 4, 9), bool] */;
    %596 = shape_of(%var_5088, dtype="int32") /* ty=Tensor[(3), int32] */;
    %597 = cast(%var_5088, dtype="bool") /* ty=Tensor[(10, 4, 9), bool] */;
    %598 = dyn.reshape(%595, %596, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %599 = less(%597, %598) /* ty=Tensor[(10, 4, 9), bool] */;
    (%599,)
  };
  %600(%var_5107) /* ty=(Tensor[(10, 4, 9), bool],) */
}

def @func_7493(%var_7489: Tensor[(1, 12, 10), float64], %var_7490: int8, %var_7491: Tensor[(5, 4, 16), float32], %var_7492: Tensor[(60), float64]) -> (Tensor[(1, 12, 10), float64], int8, Tensor[(5, 4, 16), uint64], Tensor[(5, 4, 16), float64], Tensor[(60), float64], Tensor[(2730), uint32], Tensor[(60), float64]) {
  @func_7487(%var_7489, %var_7490, %var_7491, %var_7492) /* ty=(Tensor[(1, 12, 10), float64], int8, Tensor[(5, 4, 16), uint64], Tensor[(5, 4, 16), float64], Tensor[(60), float64], Tensor[(2730), uint32], Tensor[(60), float64]) */
}

def @func_8599() -> (Tensor[(4, 3, 5), float64], Tensor[(14, 7, 6), float64], Tensor[(14, 42), int16], Tensor[(15, 9, 1), float32], Tensor[(5, 4, 16), int8], int8) {
  %613 = fn () -> (Tensor[(4, 3, 5), float64], Tensor[(14, 7, 6), float64], Tensor[(14, 42), int16], Tensor[(15, 9, 1), float32], Tensor[(5, 4, 16), int8], int8) {
    %601 = @func_7224() /* ty=(Tensor[(4, 3, 5), float64], Tensor[(640), uint8]) */;
    %602 = cast(meta[relay.Constant][26] /* ty=Tensor[(14, 42), int16] */, dtype="int16") /* ty=Tensor[(14, 42), int16] */;
    %603 = reshape(%602, newshape=[14, 7, 6]) /* ty=Tensor[(14, 7, 6), int16] */;
    %604 = @func_3015(%603) /* ty=(Tensor[(14, 7, 6), float64], Tensor[(14, 7, 6), float64]) */;
    %605 = @func_6543() /* ty=(Tensor[(4, 3, 5), float32], Tensor[(15, 9, 1), float32]) */;
    %606 = cast(meta[relay.Constant][27] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %607 = reshape(%606, newshape=[]) /* ty=int8 */;
    %608 = @func_5755(%607) /* ty=(Tensor[(5, 4, 16), int8], Tensor[(4, 3, 5), float32]) */;
    %609 = %601.0;
    %610 = %604.0;
    %611 = %605.1;
    %612 = %608.0;
    (%609, %610, meta[relay.Constant][26] /* ty=Tensor[(14, 42), int16] */, %611, %612, meta[relay.Constant][27] /* ty=int8 */)
  };
  %613() /* ty=(Tensor[(4, 3, 5), float64], Tensor[(14, 7, 6), float64], Tensor[(14, 42), int16], Tensor[(15, 9, 1), float32], Tensor[(5, 4, 16), int8], int8) */
}

def @func_5711(%var_5709: Tensor[(4, 3, 5), float32]) -> (Tensor[(4, 3, 5), float32], Tensor[(8, 8, 10), uint8], Tensor[(2, 320), uint8]) {
  @func_5708(%var_5709) /* ty=(Tensor[(4, 3, 5), float32], Tensor[(8, 8, 10), uint8], Tensor[(2, 320), uint8]) */
}

def @func_9026() -> (Tensor[(4, 3, 5), float32], Tensor[(60), float64], Tensor[(1, 2730), float64]) {
  %614 = @func_6231() /* ty=(Tensor[(4, 3, 5), float32], Tensor[(15, 9, 1), float32]) */;
  %615 = cast(meta[relay.Constant][28] /* ty=Tensor[(1, 2730), uint32] */, dtype="uint32") /* ty=Tensor[(1, 2730), uint32] */;
  %616 = cast(meta[relay.Constant][28] /* ty=Tensor[(1, 2730), uint32] */, dtype="uint32") /* ty=Tensor[(1, 2730), uint32] */;
  %617 = %614.0;
  %618 = cast(%617, dtype="float64") /* ty=Tensor[(4, 3, 5), float64] */;
  %619 = reshape(%615, newshape=[14, 15, 13]) /* ty=Tensor[(14, 15, 13), uint32] */;
  %620 = reshape(%616, newshape=[14, 15, 13]) /* ty=Tensor[(14, 15, 13), uint32] */;
  %621 = reshape(%618, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %622 = @func_607(%619, %620, %621) /* ty=(Tensor[(14, 15, 13), uint32], Tensor[(14, 15, 13), float64], Tensor[(4, 3, 5), float64], Tensor[(60), float64]) */;
  %623 = cast(meta[relay.Constant][28] /* ty=Tensor[(1, 2730), uint32] */, dtype="float64") /* ty=Tensor[(1, 2730), float64] */;
  %624 = acos(%623) /* ty=Tensor[(1, 2730), float64] */;
  %625 = cast(%624, dtype="float64") /* ty=Tensor[(1, 2730), float64] */;
  %626 = %622.3;
  %627 = log(%625) /* ty=Tensor[(1, 2730), float64] */;
  (%617, %626, %627)
}

def @func_8418() -> (Tensor[(4, 3, 5), float32], Tensor[(640), uint8]) {
  @func_8416() /* ty=(Tensor[(4, 3, 5), float32], Tensor[(640), uint8]) */
}

def @func_1992(%var_1977: Tensor[(1344), int16]) -> (Tensor[(4, 1), uint64], Tensor[(1344), int16], Tensor[(6, 16, 14), float64], Tensor[(4, 3, 5), float64], Tensor[(60), float64]) {
  %628 = @func_1922() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64], Tensor[(4, 1), uint64]) */;
  %629 = cast(%var_1977, dtype="int16") /* ty=Tensor[(1344), int16] */;
  %630 = reshape(%629, newshape=[6, 16, 14]) /* ty=Tensor[(6, 16, 14), int16] */;
  %631 = @func_1008(%630) /* ty=Tensor[(6, 16, 14), bool] */;
  %632 = cast(%631, dtype="float64") /* ty=Tensor[(6, 16, 14), float64] */;
  %633 = cast(meta[relay.Constant][29] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %634 = cast(meta[relay.Constant][29] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %635 = reshape(%633, newshape=[4, 3, 5]) /* ty=Tensor[(4, 3, 5), float64] */;
  %636 = reshape(%634, newshape=[4, 3, 5]) /* ty=Tensor[(4, 3, 5), float64] */;
  %637 = @func_382(%635, %636) /* ty=(Tensor[(4, 3, 5), float64],) */;
  %638 = %628.2;
  %639 = asin(%632) /* ty=Tensor[(6, 16, 14), float64] */;
  %640 = %637.0;
  (%638, %var_1977, %639, %640, meta[relay.Constant][29] /* ty=Tensor[(60), float64] */)
}

def @func_3274(%var_3259: Tensor[(15, 9, 12), float64]) -> Tensor[(15, 9, 12), bool] {
  %641 = @func_3082() /* ty=(Tensor[(15, 9, 1), float64],) */;
  %642 = %641.0;
  %643 = cast(%642, dtype="bool") /* ty=Tensor[(15, 9, 1), bool] */;
  %644 = cast(%var_3259, dtype="bool") /* ty=Tensor[(15, 9, 12), bool] */;
  greater(%643, %644) /* ty=Tensor[(15, 9, 12), bool] */
}

def @func_3277(%var_3275: Tensor[(15, 9, 12), float64]) -> Tensor[(15, 9, 12), bool] {
  @func_3274(%var_3275) /* ty=Tensor[(15, 9, 12), bool] */
}

def @func_8944(%var_8923: Tensor[(7, 390), uint32]) -> (Tensor[(4, 3, 5), float32], Tensor[(15, 9, 1), float32], Tensor[(7, 390), bool], Tensor[(4, 3, 5), float32], Tensor[(1, 48), float64]) {
  %645 = @func_3961() /* ty=(Tensor[(4, 3, 5), float32],) */;
  %646 = cast(meta[relay.Constant][30] /* ty=Tensor[(7, 390), uint32] */, dtype="uint32") /* ty=Tensor[(7, 390), uint32] */;
  %647 = reshape(%646, newshape=[2730]) /* ty=Tensor[(2730), uint32] */;
  %648 = @func_4653(%647) /* ty=(Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64], Tensor[(2730), uint32], Tensor[(60), float64]) */;
  %649 = cast(%var_8923, dtype="bool") /* ty=Tensor[(7, 390), bool] */;
  %650 = shape_of(meta[relay.Constant][30] /* ty=Tensor[(7, 390), uint32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %651 = cast(meta[relay.Constant][30] /* ty=Tensor[(7, 390), uint32] */, dtype="bool") /* ty=Tensor[(7, 390), bool] */;
  %652 = dyn.reshape(%649, %650, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %653 = cast(meta[relay.Constant][31] /* ty=Tensor[(1, 48), float64] */, dtype="float64") /* ty=Tensor[(1, 48), float64] */;
  %654 = cast(meta[relay.Constant][31] /* ty=Tensor[(1, 48), float64] */, dtype="float64") /* ty=Tensor[(1, 48), float64] */;
  %655 = reshape(%653, newshape=[12, 2, 2]) /* ty=Tensor[(12, 2, 2), float64] */;
  %656 = reshape(%654, newshape=[12, 2, 2]) /* ty=Tensor[(12, 2, 2), float64] */;
  %657 = @func_4786(%655, %656) /* ty=(Tensor[(12, 2, 2), bool], Tensor[(4, 3, 5), float32], Tensor[(4, 3, 5), float32], Tensor[(4, 3, 5), float32], Tensor[(15, 9, 1), float32]) */;
  %658 = %645.0;
  %659 = %648.0;
  %660 = logical_and(%651, %652) /* ty=Tensor[(7, 390), bool] */;
  %661 = %657.1;
  (%658, %659, %660, %661, meta[relay.Constant][31] /* ty=Tensor[(1, 48), float64] */)
}

def @func_6984() -> (Tensor[(4, 3, 5), float32], Tensor[(60), float64], Tensor[(45), int8]) {
  @func_6982() /* ty=(Tensor[(4, 3, 5), float32], Tensor[(60), float64], Tensor[(45), int8]) */
}

def @func_6888() -> Tensor[(4, 3, 5), float64] {
  @func_6886() /* ty=Tensor[(4, 3, 5), float64] */
}

def @func_8416() -> (Tensor[(4, 3, 5), float32], Tensor[(640), uint8]) {
  %662 = @func_4042() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float32]) */;
  %663 = @func_4383() /* ty=(Tensor[(640), uint8],) */;
  %664 = %662.1;
  %665 = %663.0;
  (%664, %665)
}

def @func_3384() -> (Tensor[(15, 9, 1), float32], Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64]) {
  %666 = @func_2551() /* ty=(Tensor[(15, 9, 1), float32],) */;
  %667 = @func_3316() /* ty=(Tensor[(4, 3, 5), float64],) */;
  %668 = @func_2200() /* ty=Tensor[(15, 9, 1), float32] */;
  %669 = %666.0;
  %670 = %667.0;
  (%668, %669, %670)
}

def @func_2552() -> (Tensor[(15, 9, 1), float32],) {
  %672 = fn () -> (Tensor[(15, 9, 1), float32],) {
    %671 = @func_2507() /* ty=Tensor[(15, 9, 1), float32] */;
    (%671,)
  };
  %672() /* ty=(Tensor[(15, 9, 1), float32],) */
}

def @func_4890() -> (Tensor[(4, 3, 5), float64], Tensor[(4, 3, 5), float64]) {
  @func_4888() /* ty=(Tensor[(4, 3, 5), float64], Tensor[(4, 3, 5), float64]) */
}

def @func_5708(%var_5693: Tensor[(4, 3, 5), float32]) -> (Tensor[(4, 3, 5), float32], Tensor[(8, 8, 10), uint8], Tensor[(2, 320), uint8]) {
  %673 = @func_3207() /* ty=(Tensor[(4, 3, 5), float32],) */;
  %674 = %673.0;
  %675 = cast(%var_5693, dtype="int16") /* ty=Tensor[(4, 3, 5), int16] */;
  %676 = shape_of(%674, dtype="int32") /* ty=Tensor[(3), int32] */;
  %677 = cast(%674, dtype="int16") /* ty=Tensor[(4, 3, 5), int16] */;
  %678 = dyn.reshape(%675, %676, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %679 = multiply(%677, %678) /* ty=Tensor[(4, 3, 5), int16] */;
  %680 = cast(%679, dtype="float32") /* ty=Tensor[(4, 3, 5), float32] */;
  %681 = cast(meta[relay.Constant][32] /* ty=Tensor[(2, 320), uint8] */, dtype="uint8") /* ty=Tensor[(2, 320), uint8] */;
  %682 = reshape(%681, newshape=[8, 8, 10]) /* ty=Tensor[(8, 8, 10), uint8] */;
  %683 = @func_1609(%682) /* ty=(Tensor[(8, 8, 10), uint8],) */;
  %684 = sin(%680) /* ty=Tensor[(4, 3, 5), float32] */;
  %685 = %683.0;
  (%684, %685, meta[relay.Constant][32] /* ty=Tensor[(2, 320), uint8] */)
}

def @func_6952() -> (Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float32], Tensor[(15, 9, 1), float32]) {
  %691 = fn () -> (Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float32], Tensor[(15, 9, 1), float32]) {
    %686 = @func_2731() /* ty=(Tensor[(4, 3, 5), float32],) */;
    %687 = @func_2551() /* ty=(Tensor[(15, 9, 1), float32],) */;
    %688 = @func_5489() /* ty=Tensor[(15, 9, 1), float32] */;
    %689 = %686.0;
    %690 = %687.0;
    (%688, %689, %690)
  };
  %691() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float32], Tensor[(15, 9, 1), float32]) */
}

def @func_4346() -> (Tensor[(4, 3, 5), float32],) {
  %692 = @func_3207() /* ty=(Tensor[(4, 3, 5), float32],) */;
  %693 = %692.0;
  (%693,)
}

def @func_5491() -> Tensor[(15, 9, 1), float32] {
  @func_5489() /* ty=Tensor[(15, 9, 1), float32] */
}

def @func_1008(%var_1000: Tensor[(6, 16, 14), int16]) -> Tensor[(6, 16, 14), bool] {
  %694 = cast(meta[relay.Constant][33] /* ty=Tensor[(6, 16, 14), int16] */, dtype="bool") /* ty=Tensor[(6, 16, 14), bool] */;
  %695 = shape_of(%var_1000, dtype="int32") /* ty=Tensor[(3), int32] */;
  %696 = cast(%var_1000, dtype="bool") /* ty=Tensor[(6, 16, 14), bool] */;
  %697 = dyn.reshape(%694, %695, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%696, %697) /* ty=Tensor[(6, 16, 14), bool] */
}

def @func_5157() -> (Tensor[(4, 3, 5), float32],) {
  @func_5155() /* ty=(Tensor[(4, 3, 5), float32],) */
}

def @func_7137() -> Tensor[(15, 9, 1), float32] {
  %698 = @func_6231() /* ty=(Tensor[(4, 3, 5), float32], Tensor[(15, 9, 1), float32]) */;
  %698.1
}

def @func_3527(%var_3525: Tensor[(640), uint8]) -> (Tensor[(4, 3, 5), float32], Tensor[(4, 3, 5), float32], Tensor[(8, 8, 10), uint8], Tensor[(640), uint8]) {
  @func_3524(%var_3525) /* ty=(Tensor[(4, 3, 5), float32], Tensor[(4, 3, 5), float32], Tensor[(8, 8, 10), uint8], Tensor[(640), uint8]) */
}

def @func_6500(%var_6493: Tensor[(15, 9, 2), float32]) -> (Tensor[(15, 9, 2), bool], Tensor[(15, 9, 2), float32]) {
  %699 = @func_2200() /* ty=Tensor[(15, 9, 1), float32] */;
  %700 = cast(%699, dtype="bool") /* ty=Tensor[(15, 9, 1), bool] */;
  %701 = cast(%var_6493, dtype="bool") /* ty=Tensor[(15, 9, 2), bool] */;
  %702 = cast(%var_6493, dtype="float32") /* ty=Tensor[(15, 9, 2), float32] */;
  %703 = greater(%700, %701) /* ty=Tensor[(15, 9, 2), bool] */;
  %704 = cosh(%702) /* ty=Tensor[(15, 9, 2), float32] */;
  (%703, %704)
}

def @func_6917() -> Tensor[(4, 3, 5), float32] {
  @func_4413() /* ty=Tensor[(4, 3, 5), float32] */
}

def @func_1508(%var_1506: Tensor[(10, 6, 15), int32], %var_1507: Tensor[(10, 6, 15), int32]) -> (Tensor[(10, 6, 15), int32],) {
  @func_1504(%var_1506, %var_1507) /* ty=(Tensor[(10, 6, 15), int32],) */
}

def @func_1995(%var_1993: Tensor[(1344), int16]) -> (Tensor[(4, 1), uint64], Tensor[(1344), int16], Tensor[(6, 16, 14), float64], Tensor[(4, 3, 5), float64], Tensor[(60), float64]) {
  @func_1992(%var_1993) /* ty=(Tensor[(4, 1), uint64], Tensor[(1344), int16], Tensor[(6, 16, 14), float64], Tensor[(4, 3, 5), float64], Tensor[(60), float64]) */
}

def @func_8339(%var_8337: Tensor[(32), uint64], %var_8338: Tensor[(2730), uint32]) -> (Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), bool], Tensor[(4, 3, 5), float64], Tensor[(32), uint64], Tensor[(2730), uint32]) {
  @func_8335(%var_8337, %var_8338) /* ty=(Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), bool], Tensor[(4, 3, 5), float64], Tensor[(32), uint64], Tensor[(2730), uint32]) */
}

def @func_8657() -> (Tensor[(640), uint8], Tensor[(10, 6, 15), int32], Tensor[(900), int32], Tensor[(14, 7, 6), float64], Tensor[(14, 42), int16], Tensor[(4, 3, 5), float32]) {
  @func_8655() /* ty=(Tensor[(640), uint8], Tensor[(10, 6, 15), int32], Tensor[(900), int32], Tensor[(14, 7, 6), float64], Tensor[(14, 42), int16], Tensor[(4, 3, 5), float32]) */
}

def @func_2337(%var_2295: Tensor[(768), float64], %var_2303: Tensor[(32), uint64]) -> (Tensor[(6, 8, 16), float64], Tensor[(768), float64], Tensor[(15, 9, 32), bool], Tensor[(32, 24), bool]) {
  %705 = cast(%var_2295, dtype="float64") /* ty=Tensor[(768), float64] */;
  %706 = reshape(%705, newshape=[6, 8, 16]) /* ty=Tensor[(6, 8, 16), float64] */;
  %707 = @func_1585(%706) /* ty=(Tensor[(6, 8, 16), float64],) */;
  %708 = @func_2130() /* ty=(Tensor[(15, 9, 1), float32],) */;
  %709 = %708.0;
  %710 = cast(%var_2303, dtype="bool") /* ty=Tensor[(32), bool] */;
  %711 = cast(%709, dtype="bool") /* ty=Tensor[(15, 9, 1), bool] */;
  %712 = cast(%var_2303, dtype="uint64") /* ty=Tensor[(32), uint64] */;
  %713 = %707.0;
  %714 = cast(%713, dtype="float64") /* ty=Tensor[(6, 8, 16), float64] */;
  %715 = reshape(%712, newshape=[32]) /* ty=Tensor[(32), uint64] */;
  %716 = reshape(%714, newshape=[32, 24]) /* ty=Tensor[(32, 24), float64] */;
  %717 = @func_2259(%715, %716) /* ty=(Tensor[(15, 9, 1), float32], Tensor[(2, 2, 8), bool], Tensor[(1, 4), uint64], Tensor[(32), uint64], Tensor[(6, 8, 16), float64], Tensor[(32, 24), float64]) */;
  %718 = %717.5;
  %719 = cast(meta[relay.Constant][34] /* ty=Tensor[(32, 24), float64] */, dtype="bool") /* ty=Tensor[(32, 24), bool] */;
  %720 = shape_of(%718, dtype="int32") /* ty=Tensor[(2), int32] */;
  %721 = cast(%718, dtype="bool") /* ty=Tensor[(32, 24), bool] */;
  %722 = dyn.reshape(%719, %720, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %723 = logical_or(%710, %711) /* ty=Tensor[(15, 9, 32), bool] */;
  %724 = greater_equal(%721, %722) /* ty=Tensor[(32, 24), bool] */;
  (%713, %var_2295, %723, %724)
}

def @func_7075() -> (Tensor[(4, 3, 5), bool], Tensor[(15, 9, 1), float32]) {
  %725 = @func_6185() /* ty=(Tensor[(4, 3, 5), float32], Tensor[(4, 3, 5), bool], Tensor[(4, 3, 5), bool], Tensor[(4, 3, 5), uint32]) */;
  %726 = %725.2;
  %727 = @func_2200() /* ty=Tensor[(15, 9, 1), float32] */;
  (%726, %727)
}

def @func_9217(%var_9215: Tensor[(15, 13, 3), int64], %var_9216: Tensor[(15, 13, 3), int64]) -> (Tensor[(15, 13, 3), int64], Tensor[(45), int8], Tensor[(15, 13, 3), int8], Tensor[(4, 3, 5), float32]) {
  %741 = fn (%var_9191: Tensor[(15, 13, 3), int64], %var_9204: Tensor[(15, 13, 3), int64]) -> (Tensor[(15, 13, 3), int64], Tensor[(45), int8], Tensor[(15, 13, 3), int8], Tensor[(4, 3, 5), float32]) {
    %728 = cast(%var_9191, dtype="int64") /* ty=Tensor[(15, 13, 3), int64] */;
    %729 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(15, 13, 3), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %730 = cast(meta[relay.Constant][35] /* ty=Tensor[(15, 13, 3), int64] */, dtype="int64") /* ty=Tensor[(15, 13, 3), int64] */;
    %731 = dyn.reshape(%728, %729, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %732 = @func_6982() /* ty=(Tensor[(4, 3, 5), float32], Tensor[(60), float64], Tensor[(45), int8]) */;
    %733 = cast(%var_9204, dtype="int8") /* ty=Tensor[(15, 13, 3), int8] */;
    %734 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(15, 13, 3), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %735 = cast(meta[relay.Constant][35] /* ty=Tensor[(15, 13, 3), int64] */, dtype="int8") /* ty=Tensor[(15, 13, 3), int8] */;
    %736 = dyn.reshape(%733, %734, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %737 = logical_xor(%730, %731) /* ty=Tensor[(15, 13, 3), int64] */;
    %738 = %732.2;
    %739 = bitwise_or(%735, %736) /* ty=Tensor[(15, 13, 3), int8] */;
    %740 = @func_7898() /* ty=Tensor[(4, 3, 5), float32] */;
    (%737, %738, %739, %740)
  };
  %741(%var_9215, %var_9216) /* ty=(Tensor[(15, 13, 3), int64], Tensor[(45), int8], Tensor[(15, 13, 3), int8], Tensor[(4, 3, 5), float32]) */
}

def @func_6544() -> (Tensor[(4, 3, 5), float32], Tensor[(15, 9, 1), float32]) {
  %745 = fn () -> (Tensor[(4, 3, 5), float32], Tensor[(15, 9, 1), float32]) {
    %742 = @func_4042() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float32]) */;
    %743 = %742.1;
    %744 = @func_6526() /* ty=Tensor[(15, 9, 1), float32] */;
    (%743, %744)
  };
  %745() /* ty=(Tensor[(4, 3, 5), float32], Tensor[(15, 9, 1), float32]) */
}

def @func_7226() -> (Tensor[(4, 3, 5), float64], Tensor[(640), uint8]) {
  @func_7224() /* ty=(Tensor[(4, 3, 5), float64], Tensor[(640), uint8]) */
}

def @func_6427() -> (Tensor[(4, 3, 5), float32], Tensor[(15, 9, 640), uint16], Tensor[(15, 9, 1), float32]) {
  %759 = fn () -> (Tensor[(4, 3, 5), float32], Tensor[(15, 9, 640), uint16], Tensor[(15, 9, 1), float32]) {
    %746 = cast(meta[relay.Constant][36] /* ty=Tensor[(640), uint8] */, dtype="uint8") /* ty=Tensor[(640), uint8] */;
    %747 = reshape(%746, newshape=[640]) /* ty=Tensor[(640), uint8] */;
    %748 = @func_3755(%747) /* ty=(Tensor[(4, 3, 5), float64], Tensor[(4, 3, 5), float32], Tensor[(640), uint8]) */;
    %749 = @func_2431() /* ty=(Tensor[(15, 9, 1), float32],) */;
    %750 = %749.0;
    %751 = cast(%750, dtype="uint64") /* ty=Tensor[(15, 9, 1), uint64] */;
    %752 = cast(meta[relay.Constant][36] /* ty=Tensor[(640), uint8] */, dtype="uint64") /* ty=Tensor[(640), uint64] */;
    %753 = bitwise_and(%751, %752) /* ty=Tensor[(15, 9, 640), uint64] */;
    %754 = cast(%753, dtype="uint16") /* ty=Tensor[(15, 9, 640), uint16] */;
    %755 = cast(%750, dtype="uint16") /* ty=Tensor[(15, 9, 1), uint16] */;
    %756 = %748.1;
    %757 = minimum(%754, %755) /* ty=Tensor[(15, 9, 640), uint16] */;
    %758 = @func_2507() /* ty=Tensor[(15, 9, 1), float32] */;
    (%756, %757, %758)
  };
  %759() /* ty=(Tensor[(4, 3, 5), float32], Tensor[(15, 9, 640), uint16], Tensor[(15, 9, 1), float32]) */
}

def @func_1504(%var_1491: Tensor[(10, 6, 15), int32], %var_1492: Tensor[(10, 6, 15), int32]) -> (Tensor[(10, 6, 15), int32],) {
  %760 = cast(%var_1492, dtype="int32") /* ty=Tensor[(10, 6, 15), int32] */;
  %761 = shape_of(%var_1491, dtype="int32") /* ty=Tensor[(3), int32] */;
  %762 = cast(%var_1491, dtype="int32") /* ty=Tensor[(10, 6, 15), int32] */;
  %763 = dyn.reshape(%760, %761, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %764 = left_shift(%762, %763) /* ty=Tensor[(10, 6, 15), int32] */;
  (%764,)
}

def @func_4200(%var_4199: Tensor[(1, 15, 3), int8]) -> (Tensor[(1, 15, 3), int8],) {
  %768 = fn (%var_4188: Tensor[(1, 15, 3), int8]) -> (Tensor[(1, 15, 3), int8],) {
    %765 = cast(meta[relay.Constant][37] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %766 = cast(%var_4188, dtype="int8") /* ty=Tensor[(1, 15, 3), int8] */;
    %767 = maximum(%765, %766) /* ty=Tensor[(1, 15, 3), int8] */;
    (%767,)
  };
  %768(%var_4199) /* ty=(Tensor[(1, 15, 3), int8],) */
}

def @func_6827() -> Tensor[(15, 9, 1), float32] {
  %770 = fn () -> Tensor[(15, 9, 1), float32] {
    %769 = @func_4062() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64]) */;
    %769.0
  };
  %770() /* ty=Tensor[(15, 9, 1), float32] */
}

def @func_4132(%var_4130: Tensor[(12, 10, 14), float64], %var_4131: Tensor[(1344), int16]) -> (Tensor[(12, 10, 14), float64], Tensor[(60), float64], Tensor[(1344), int16]) {
  @func_4128(%var_4130, %var_4131) /* ty=(Tensor[(12, 10, 14), float64], Tensor[(60), float64], Tensor[(1344), int16]) */
}

def @func_5440() -> (Tensor[(15, 9, 1), float32], Tensor[(15, 9, ?), float32]) {
  @func_5438() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(15, 9, ?), float32]) */
}

def @func_4178() -> Tensor[(15, 9, 1), float32] {
  %771 = fn () -> Tensor[(15, 9, 1), float32] {
    @func_2507() /* ty=Tensor[(15, 9, 1), float32] */
  };
  %771() /* ty=Tensor[(15, 9, 1), float32] */
}

def @func_4668() -> Tensor[(640), uint8] {
  %772 = @func_4383() /* ty=(Tensor[(640), uint8],) */;
  %772.0
}

def @func_5591(%var_5590: Tensor[(4, 3, 5), float32]) -> (Tensor[(4, 3, 5), bool], Tensor[(15, 9, 1), float32], Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64]) {
  %786 = fn (%var_5531: Tensor[(4, 3, 5), float32]) -> (Tensor[(4, 3, 5), bool], Tensor[(15, 9, 1), float32], Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64]) {
    %773 = @func_2731() /* ty=(Tensor[(4, 3, 5), float32],) */;
    %774 = %773.0;
    %775 = cast(%var_5531, dtype="bool") /* ty=Tensor[(4, 3, 5), bool] */;
    %776 = shape_of(%774, dtype="int32") /* ty=Tensor[(3), int32] */;
    %777 = cast(%774, dtype="bool") /* ty=Tensor[(4, 3, 5), bool] */;
    %778 = dyn.reshape(%775, %776, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %779 = @func_2551() /* ty=(Tensor[(15, 9, 1), float32],) */;
    %780 = @func_3384() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64]) */;
    %781 = cast(%774, dtype="float64") /* ty=Tensor[(4, 3, 5), float64] */;
    %782 = less(%777, %778) /* ty=Tensor[(4, 3, 5), bool] */;
    %783 = %779.0;
    %784 = %780.0;
    %785 = sqrt(%781) /* ty=Tensor[(4, 3, 5), float64] */;
    (%782, %783, %784, %785)
  };
  %786(%var_5590) /* ty=(Tensor[(4, 3, 5), bool], Tensor[(15, 9, 1), float32], Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64]) */
}

def @func_8495() -> (Tensor[(15, 9, 1), float32],) {
  @func_8493() /* ty=(Tensor[(15, 9, 1), float32],) */
}

def @func_607(%var_570: Tensor[(14, 15, 13), uint32], %var_579: Tensor[(14, 15, 13), uint32], %var_600: Tensor[(60), float64]) -> (Tensor[(14, 15, 13), uint32], Tensor[(14, 15, 13), float64], Tensor[(4, 3, 5), float64], Tensor[(60), float64]) {
  %787 = cast(meta[relay.Constant][38] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %788 = cast(%var_570, dtype="uint32") /* ty=Tensor[(14, 15, 13), uint32] */;
  %789 = cast(%var_579, dtype="float64") /* ty=Tensor[(14, 15, 13), float64] */;
  %790 = shape_of(%var_570, dtype="int32") /* ty=Tensor[(3), int32] */;
  %791 = cast(%var_570, dtype="float64") /* ty=Tensor[(14, 15, 13), float64] */;
  %792 = dyn.reshape(%789, %790, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %793 = cast(%var_600, dtype="float64") /* ty=Tensor[(60), float64] */;
  %794 = cast(%var_600, dtype="float64") /* ty=Tensor[(60), float64] */;
  %795 = reshape(%793, newshape=[4, 3, 5]) /* ty=Tensor[(4, 3, 5), float64] */;
  %796 = reshape(%794, newshape=[4, 3, 5]) /* ty=Tensor[(4, 3, 5), float64] */;
  %797 = @func_382(%795, %796) /* ty=(Tensor[(4, 3, 5), float64],) */;
  %798 = bitwise_and(%787, %788) /* ty=Tensor[(14, 15, 13), uint32] */;
  %799 = divide(%791, %792) /* ty=Tensor[(14, 15, 13), float64] */;
  %800 = %797.0;
  (%798, %799, %800, %var_600)
}

def @func_6628(%var_6572: Tensor[(672), float32]) -> (Tensor[(8, 8, 10), float32], Tensor[(6, 14, 8), float32], Tensor[(672), float32], Tensor[(8, 8, 10), float32], Tensor[(4, 3, 5), uint32], Tensor[(60), float32], Tensor[(4, 3, 5), float32], Tensor[(4, 3, 5), float64], Tensor[(4, 3, 5), float32], Tensor[(15, 9, 1), float32], Tensor[(640), uint8], Tensor[(2, 320), uint8]) {
  %801 = @func_3796() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(8, 8, 10), float32]) */;
  %802 = cast(%var_6572, dtype="float32") /* ty=Tensor[(672), float32] */;
  %803 = reshape(%802, newshape=[6, 14, 8]) /* ty=Tensor[(6, 14, 8), float32] */;
  %804 = @func_3586(%803) /* ty=(Tensor[(6, 14, 8), float32],) */;
  %805 = @func_2870() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(640), uint8], Tensor[(8, 8, 10), float32]) */;
  %806 = cast(meta[relay.Constant][39] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
  %807 = reshape(%806, newshape=[4, 3, 5]) /* ty=Tensor[(4, 3, 5), float32] */;
  %808 = @func_2816(%807) /* ty=(Tensor[(4, 3, 5), uint32],) */;
  %809 = %801.1;
  %810 = cast(%809, dtype="uint8") /* ty=Tensor[(8, 8, 10), uint8] */;
  %811 = reshape(%810, newshape=[40, 16]) /* ty=Tensor[(40, 16), uint8] */;
  %812 = @func_3151(%811) /* ty=(Tensor[(15, 9, 1), float64], Tensor[(4, 3, 5), float64], Tensor[(8, 8, 10), uint8], Tensor[(40, 16), uint8], Tensor[(4, 3, 5), float32]) */;
  %813 = @func_3316() /* ty=(Tensor[(4, 3, 5), float64],) */;
  %814 = @func_3207() /* ty=(Tensor[(4, 3, 5), float32],) */;
  %815 = @func_6231() /* ty=(Tensor[(4, 3, 5), float32], Tensor[(15, 9, 1), float32]) */;
  %816 = %805.2;
  %817 = cast(%816, dtype="uint8") /* ty=Tensor[(8, 8, 10), uint8] */;
  %818 = reshape(%817, newshape=[640]) /* ty=Tensor[(640), uint8] */;
  %819 = @func_3755(%818) /* ty=(Tensor[(4, 3, 5), float64], Tensor[(4, 3, 5), float32], Tensor[(640), uint8]) */;
  %820 = cast(meta[relay.Constant][39] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
  %821 = reshape(%820, newshape=[4, 3, 5]) /* ty=Tensor[(4, 3, 5), float32] */;
  %822 = @func_5708(%821) /* ty=(Tensor[(4, 3, 5), float32], Tensor[(8, 8, 10), uint8], Tensor[(2, 320), uint8]) */;
  %823 = %804.0;
  %824 = %808.0;
  %825 = %812.4;
  %826 = %813.0;
  %827 = %814.0;
  %828 = %815.1;
  %829 = %819.2;
  %830 = %822.2;
  (%809, %823, %var_6572, %816, %824, meta[relay.Constant][39] /* ty=Tensor[(60), float32] */, %825, %826, %827, %828, %829, %830)
}

def @func_6567(%var_6566: Tensor[(768), float64]) -> (Tensor[(5, 15, 9), float32], Tensor[(6, 8, 16), float64], Tensor[(32), uint64], Tensor[(768), float64]) {
  %839 = fn (%var_6563: Tensor[(768), float64]) -> (Tensor[(5, 15, 9), float32], Tensor[(6, 8, 16), float64], Tensor[(32), uint64], Tensor[(768), float64]) {
    %831 = cast(meta[relay.Constant][40] /* ty=Tensor[(5, 15, 9), float32] */, dtype="float32") /* ty=Tensor[(5, 15, 9), float32] */;
    %832 = cast(meta[relay.Constant][41] /* ty=Tensor[(32), uint64] */, dtype="uint64") /* ty=Tensor[(32), uint64] */;
    %833 = cast(%var_6563, dtype="float64") /* ty=Tensor[(768), float64] */;
    %834 = reshape(%832, newshape=[32]) /* ty=Tensor[(32), uint64] */;
    %835 = reshape(%833, newshape=[32, 24]) /* ty=Tensor[(32, 24), float64] */;
    %836 = @func_2259(%834, %835) /* ty=(Tensor[(15, 9, 1), float32], Tensor[(2, 2, 8), bool], Tensor[(1, 4), uint64], Tensor[(32), uint64], Tensor[(6, 8, 16), float64], Tensor[(32, 24), float64]) */;
    %837 = exp(%831) /* ty=Tensor[(5, 15, 9), float32] */;
    %838 = %836.4;
    (%837, %838, meta[relay.Constant][41] /* ty=Tensor[(32), uint64] */, %var_6563)
  };
  %839(%var_6566) /* ty=(Tensor[(5, 15, 9), float32], Tensor[(6, 8, 16), float64], Tensor[(32), uint64], Tensor[(768), float64]) */
}

def @func_4688() -> (Tensor[(4, 3, 5), float32], Tensor[(4, 3, 5), float32], Tensor[(640), uint8], Tensor[(4, 3, 5), float64]) {
  %848 = fn () -> (Tensor[(4, 3, 5), float32], Tensor[(4, 3, 5), float32], Tensor[(640), uint8], Tensor[(4, 3, 5), float64]) {
    %840 = @func_4042() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float32]) */;
    %841 = cast(meta[relay.Constant][42] /* ty=Tensor[(640), uint8] */, dtype="uint8") /* ty=Tensor[(640), uint8] */;
    %842 = reshape(%841, newshape=[640]) /* ty=Tensor[(640), uint8] */;
    %843 = @func_3524(%842) /* ty=(Tensor[(4, 3, 5), float32], Tensor[(4, 3, 5), float32], Tensor[(8, 8, 10), uint8], Tensor[(640), uint8]) */;
    %844 = @func_3448() /* ty=(Tensor[(4, 3, 5), float64],) */;
    %845 = %840.1;
    %846 = %843.1;
    %847 = %844.0;
    (%845, %846, meta[relay.Constant][42] /* ty=Tensor[(640), uint8] */, %847)
  };
  %848() /* ty=(Tensor[(4, 3, 5), float32], Tensor[(4, 3, 5), float32], Tensor[(640), uint8], Tensor[(4, 3, 5), float64]) */
}

def @func_5996() -> (Tensor[(15, 9, 1), float32], Tensor[(15, 9, 1), float64]) {
  %852 = fn () -> (Tensor[(15, 9, 1), float32], Tensor[(15, 9, 1), float64]) {
    %849 = @func_5199() /* ty=(Tensor[(4, 3, 5), float32], Tensor[(15, 9, 1), float64]) */;
    %850 = @func_2507() /* ty=Tensor[(15, 9, 1), float32] */;
    %851 = %849.1;
    (%850, %851)
  };
  %852() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(15, 9, 1), float64]) */
}

def @func_5906(%var_5905: Tensor[(15, 9, 8), float32]) -> (Tensor[(15, 9, 1), float32], Tensor[(15, 9, 8), float32]) {
  %859 = fn (%var_5887: Tensor[(15, 9, 8), float32]) -> (Tensor[(15, 9, 1), float32], Tensor[(15, 9, 8), float32]) {
    %853 = @func_3384() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64]) */;
    %854 = %853.1;
    %855 = cast(%854, dtype="float32") /* ty=Tensor[(15, 9, 1), float32] */;
    %856 = cast(%var_5887, dtype="float32") /* ty=Tensor[(15, 9, 8), float32] */;
    %857 = @func_4177() /* ty=Tensor[(15, 9, 1), float32] */;
    %858 = divide(%855, %856) /* ty=Tensor[(15, 9, 8), float32] */;
    (%857, %858)
  };
  %859(%var_5905) /* ty=(Tensor[(15, 9, 1), float32], Tensor[(15, 9, 8), float32]) */
}

def @func_3797() -> (Tensor[(15, 9, 1), float32], Tensor[(8, 8, 10), float32]) {
  %864 = fn () -> (Tensor[(15, 9, 1), float32], Tensor[(8, 8, 10), float32]) {
    %860 = @func_3384() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64]) */;
    %861 = @func_2870() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(640), uint8], Tensor[(8, 8, 10), float32]) */;
    %862 = %860.1;
    %863 = %861.2;
    (%862, %863)
  };
  %864() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(8, 8, 10), float32]) */
}

def @func_6099() -> (Tensor[(4, 3, 5), float32], Tensor[(4, 3, 5), float32], Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float32]) {
  @func_6097() /* ty=(Tensor[(4, 3, 5), float32], Tensor[(4, 3, 5), float32], Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float32]) */
}

def @func_5639(%var_5637: Tensor[(32), uint64], %var_5638: Tensor[(2730), uint32]) -> (Tensor[(15, 9, 1), float32], Tensor[(4), uint64], Tensor[(32), uint64], Tensor[(2730), uint32]) {
  %873 = fn (%var_5633: Tensor[(32), uint64], %var_5634: Tensor[(2730), uint32]) -> (Tensor[(15, 9, 1), float32], Tensor[(4), uint64], Tensor[(32), uint64], Tensor[(2730), uint32]) {
    %865 = @func_4710() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(640), uint8]) */;
    %866 = cast(%var_5633, dtype="uint64") /* ty=Tensor[(32), uint64] */;
    %867 = cast(%var_5634, dtype="uint32") /* ty=Tensor[(2730), uint32] */;
    %868 = reshape(%866, newshape=[32]) /* ty=Tensor[(32), uint64] */;
    %869 = reshape(%867, newshape=[2730]) /* ty=Tensor[(2730), uint32] */;
    %870 = @func_3632(%868, %869) /* ty=(Tensor[(4, 3, 5), float64], Tensor[(60, 1), float64], Tensor[(4), uint64], Tensor[(32), uint64], Tensor[(14, 15, 13), float64], Tensor[(2730), uint32]) */;
    %871 = %865.0;
    %872 = %870.2;
    (%871, %872, %var_5633, %var_5634)
  };
  %873(%var_5637, %var_5638) /* ty=(Tensor[(15, 9, 1), float32], Tensor[(4), uint64], Tensor[(32), uint64], Tensor[(2730), uint32]) */
}

def @func_7139() -> Tensor[(15, 9, 1), float32] {
  @func_7137() /* ty=Tensor[(15, 9, 1), float32] */
}

def @func_7605() -> (Tensor[(15, 9, 1), float32], Tensor[(15, 9, 1), float32], Tensor[(45), int8], Tensor[(4, 3, 5), float64], Tensor[(15, 9, 1), float32]) {
  @func_7603() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(15, 9, 1), float32], Tensor[(45), int8], Tensor[(4, 3, 5), float64], Tensor[(15, 9, 1), float32]) */
}

def @func_1011(%var_1009: Tensor[(6, 16, 14), int16]) -> Tensor[(6, 16, 14), bool] {
  @func_1008(%var_1009) /* ty=Tensor[(6, 16, 14), bool] */
}

def @func_8877() -> (Tensor[(15, 9, 1), float32],) {
  @func_8875() /* ty=(Tensor[(15, 9, 1), float32],) */
}

def @func_3386() -> (Tensor[(15, 9, 1), float32], Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64]) {
  @func_3384() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64]) */
}

def @func_2961() -> (Tensor[(4, 3, 5), float32], Tensor[(4, 3, 5), bool]) {
  @func_2959() /* ty=(Tensor[(4, 3, 5), float32], Tensor[(4, 3, 5), bool]) */
}

def @func_4502(%var_4501: Tensor[(324), float64]) -> (Tensor[(4, 3, 5), float32], Tensor[(12, 3, 9), float32], Tensor[(640), uint8], Tensor[(12, 3, 9), bool]) {
  %889 = fn (%var_4471: Tensor[(324), float64]) -> (Tensor[(4, 3, 5), float32], Tensor[(12, 3, 9), float32], Tensor[(640), uint8], Tensor[(12, 3, 9), bool]) {
    %874 = @func_3207() /* ty=(Tensor[(4, 3, 5), float32],) */;
    %875 = cast(%var_4471, dtype="float64") /* ty=Tensor[(324), float64] */;
    %876 = reshape(%875, newshape=[12, 3, 9]) /* ty=Tensor[(12, 3, 9), float64] */;
    %877 = @func_3912(%876) /* ty=(Tensor[(12, 3, 9), float64], Tensor[(12, 3, 9), float64]) */;
    %878 = %877.0;
    %879 = cast(%878, dtype="float32") /* ty=Tensor[(12, 3, 9), float32] */;
    %880 = @func_2870() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(640), uint8], Tensor[(8, 8, 10), float32]) */;
    %881 = cast(%var_4471, dtype="bool") /* ty=Tensor[(324), bool] */;
    %882 = shape_of(%878, dtype="int32") /* ty=Tensor[(3), int32] */;
    %883 = cast(%878, dtype="bool") /* ty=Tensor[(12, 3, 9), bool] */;
    %884 = dyn.reshape(%881, %882, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %885 = %874.0;
    %886 = acos(%879) /* ty=Tensor[(12, 3, 9), float32] */;
    %887 = %880.1;
    %888 = less(%883, %884) /* ty=Tensor[(12, 3, 9), bool] */;
    (%885, %886, %887, %888)
  };
  %889(%var_4501) /* ty=(Tensor[(4, 3, 5), float32], Tensor[(12, 3, 9), float32], Tensor[(640), uint8], Tensor[(12, 3, 9), bool]) */
}

def @func_5873() -> (Tensor[(4, 3, 5), float64],) {
  %891 = fn () -> (Tensor[(4, 3, 5), float64],) {
    %890 = @func_2536() /* ty=Tensor[(4, 3, 5), float64] */;
    (%890,)
  };
  %891() /* ty=(Tensor[(4, 3, 5), float64],) */
}

def @func_8473() -> (Tensor[(4, 3, 5), float64], Tensor[(4, 3, 5), float64], Tensor[(4), uint64], Tensor[(32, 1), uint64]) {
  @func_8471() /* ty=(Tensor[(4, 3, 5), float64], Tensor[(4, 3, 5), float64], Tensor[(4), uint64], Tensor[(32, 1), uint64]) */
}

def @func_4308(%var_4306: Tensor[(45), int8], %var_4307: Tensor[(4, 3, 5), float64]) -> (Tensor[(4, 3, 5), float64], Tensor[(10, 6, 15), int32], Tensor[(900), int32], Tensor[(10, 6, 15), int32], Tensor[(1, 15, 3), int8], Tensor[(45), int8], Tensor[(60), float64], Tensor[(4, 3, 5), bool]) {
  @func_4304(%var_4306, %var_4307) /* ty=(Tensor[(4, 3, 5), float64], Tensor[(10, 6, 15), int32], Tensor[(900), int32], Tensor[(10, 6, 15), int32], Tensor[(1, 15, 3), int8], Tensor[(45), int8], Tensor[(60), float64], Tensor[(4, 3, 5), bool]) */
}

def @func_4042() -> (Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float32]) {
  %892 = @func_3207() /* ty=(Tensor[(4, 3, 5), float32],) */;
  %893 = @func_2507() /* ty=Tensor[(15, 9, 1), float32] */;
  %894 = %892.0;
  (%893, %894)
}

def @func_9333() -> Tensor[(4, 3, 5), float32] {
  @func_9331() /* ty=Tensor[(4, 3, 5), float32] */
}

def @func_5926() -> Tensor[(4, 3, 5), bool] {
  @func_3434() /* ty=Tensor[(4, 3, 5), bool] */
}

def @func_5155() -> (Tensor[(4, 3, 5), float32],) {
  %895 = @func_3605() /* ty=Tensor[(4, 3, 5), float32] */;
  (%895,)
}

def @func_3015(%var_2978: Tensor[(14, 7, 6), int16]) -> (Tensor[(14, 7, 6), float64], Tensor[(14, 7, 6), float64]) {
  %896 = cast(%var_2978, dtype="int16") /* ty=Tensor[(14, 7, 6), int16] */;
  %897 = shape_of(meta[relay.Constant][43] /* ty=Tensor[(14, 7, 6), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %898 = cast(meta[relay.Constant][43] /* ty=Tensor[(14, 7, 6), int16] */, dtype="int16") /* ty=Tensor[(14, 7, 6), int16] */;
  %899 = dyn.reshape(%896, %897, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %900 = bitwise_xor(%898, %899) /* ty=Tensor[(14, 7, 6), int16] */;
  %901 = cast(%900, dtype="bool") /* ty=Tensor[(14, 7, 6), bool] */;
  %902 = shape_of(%var_2978, dtype="int32") /* ty=Tensor[(3), int32] */;
  %903 = cast(%var_2978, dtype="bool") /* ty=Tensor[(14, 7, 6), bool] */;
  %904 = dyn.reshape(%901, %902, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %905 = logical_and(%903, %904) /* ty=Tensor[(14, 7, 6), bool] */;
  %906 = cast(%905, dtype="int8") /* ty=Tensor[(14, 7, 6), int8] */;
  %907 = shape_of(%900, dtype="int32") /* ty=Tensor[(3), int32] */;
  %908 = cast(%900, dtype="int8") /* ty=Tensor[(14, 7, 6), int8] */;
  %909 = dyn.reshape(%906, %907, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %910 = maximum(%908, %909) /* ty=Tensor[(14, 7, 6), int8] */;
  %911 = cast(%910, dtype="float64") /* ty=Tensor[(14, 7, 6), float64] */;
  %912 = shape_of(%905, dtype="int32") /* ty=Tensor[(3), int32] */;
  %913 = cast(%905, dtype="float64") /* ty=Tensor[(14, 7, 6), float64] */;
  %914 = dyn.reshape(%911, %912, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %915 = cast(meta[relay.Constant][43] /* ty=Tensor[(14, 7, 6), int16] */, dtype="float64") /* ty=Tensor[(14, 7, 6), float64] */;
  %916 = mod(%913, %914) /* ty=Tensor[(14, 7, 6), float64] */;
  %917 = acos(%915) /* ty=Tensor[(14, 7, 6), float64] */;
  (%916, %917)
}

def @func_2732() -> (Tensor[(4, 3, 5), float32],) {
  %923 = fn () -> (Tensor[(4, 3, 5), float32],) {
    %918 = @func_2536() /* ty=Tensor[(4, 3, 5), float64] */;
    %919 = cast(%918, dtype="float64") /* ty=Tensor[(4, 3, 5), float64] */;
    %920 = asinh(%919) /* ty=Tensor[(4, 3, 5), float64] */;
    %921 = cast(%920, dtype="float32") /* ty=Tensor[(4, 3, 5), float32] */;
    %922 = rsqrt(%921) /* ty=Tensor[(4, 3, 5), float32] */;
    (%922,)
  };
  %923() /* ty=(Tensor[(4, 3, 5), float32],) */
}

def @func_2130() -> (Tensor[(15, 9, 1), float32],) {
  %924 = @func_1922() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64], Tensor[(4, 1), uint64]) */;
  %925 = %924.0;
  (%925,)
}

def @func_2341(%var_2339: Tensor[(768), float64], %var_2340: Tensor[(32), uint64]) -> (Tensor[(6, 8, 16), float64], Tensor[(768), float64], Tensor[(15, 9, 32), bool], Tensor[(32, 24), bool]) {
  @func_2337(%var_2339, %var_2340) /* ty=(Tensor[(6, 8, 16), float64], Tensor[(768), float64], Tensor[(15, 9, 32), bool], Tensor[(32, 24), bool]) */
}

def @func_2625(%var_2624: Tensor[(15, 9, 12), float32]) -> (Tensor[(15, 9, 12), float32], Tensor[(14, 15, 13), uint32], Tensor[(2730), uint32], Tensor[(60), float64]) {
  %939 = fn (%var_2600: Tensor[(15, 9, 12), float32]) -> (Tensor[(15, 9, 12), float32], Tensor[(14, 15, 13), uint32], Tensor[(2730), uint32], Tensor[(60), float64]) {
    %926 = @func_2130() /* ty=(Tensor[(15, 9, 1), float32],) */;
    %927 = %926.0;
    %928 = cast(%927, dtype="float32") /* ty=Tensor[(15, 9, 1), float32] */;
    %929 = cast(%var_2600, dtype="float32") /* ty=Tensor[(15, 9, 12), float32] */;
    %930 = cast(meta[relay.Constant][44] /* ty=Tensor[(2730), uint32] */, dtype="uint32") /* ty=Tensor[(2730), uint32] */;
    %931 = cast(meta[relay.Constant][44] /* ty=Tensor[(2730), uint32] */, dtype="uint32") /* ty=Tensor[(2730), uint32] */;
    %932 = cast(meta[relay.Constant][45] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
    %933 = reshape(%930, newshape=[14, 15, 13]) /* ty=Tensor[(14, 15, 13), uint32] */;
    %934 = reshape(%931, newshape=[14, 15, 13]) /* ty=Tensor[(14, 15, 13), uint32] */;
    %935 = reshape(%932, newshape=[60]) /* ty=Tensor[(60), float64] */;
    %936 = @func_607(%933, %934, %935) /* ty=(Tensor[(14, 15, 13), uint32], Tensor[(14, 15, 13), float64], Tensor[(4, 3, 5), float64], Tensor[(60), float64]) */;
    %937 = add(%928, %929) /* ty=Tensor[(15, 9, 12), float32] */;
    %938 = %936.0;
    (%937, %938, meta[relay.Constant][44] /* ty=Tensor[(2730), uint32] */, meta[relay.Constant][45] /* ty=Tensor[(60), float64] */)
  };
  %939(%var_2624) /* ty=(Tensor[(15, 9, 12), float32], Tensor[(14, 15, 13), uint32], Tensor[(2730), uint32], Tensor[(60), float64]) */
}

def @func_4063() -> (Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64]) {
  %946 = fn () -> (Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64]) {
    %940 = @func_3796() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(8, 8, 10), float32]) */;
    %941 = %940.0;
    %942 = cast(%941, dtype="float32") /* ty=Tensor[(15, 9, 1), float32] */;
    %943 = @func_3384() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64]) */;
    %944 = tan(%942) /* ty=Tensor[(15, 9, 1), float32] */;
    %945 = %943.2;
    (%944, %945)
  };
  %946() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64]) */
}

def @func_2201() -> Tensor[(15, 9, 1), float32] {
  %948 = fn () -> Tensor[(15, 9, 1), float32] {
    %947 = @func_2130() /* ty=(Tensor[(15, 9, 1), float32],) */;
    %947.0
  };
  %948() /* ty=Tensor[(15, 9, 1), float32] */
}

def @func_4547() -> (Tensor[(15, 9, 1), float32],) {
  %949 = @func_1922() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64], Tensor[(4, 1), uint64]) */;
  %950 = %949.0;
  (%950,)
}

def @func_8655() -> (Tensor[(640), uint8], Tensor[(10, 6, 15), int32], Tensor[(900), int32], Tensor[(14, 7, 6), float64], Tensor[(14, 42), int16], Tensor[(4, 3, 5), float32]) {
  %951 = cast(meta[relay.Constant][46] /* ty=Tensor[(900), int32] */, dtype="int32") /* ty=Tensor[(900), int32] */;
  %952 = cast(meta[relay.Constant][46] /* ty=Tensor[(900), int32] */, dtype="int32") /* ty=Tensor[(900), int32] */;
  %953 = reshape(%951, newshape=[10, 6, 15]) /* ty=Tensor[(10, 6, 15), int32] */;
  %954 = reshape(%952, newshape=[10, 6, 15]) /* ty=Tensor[(10, 6, 15), int32] */;
  %955 = @func_1504(%953, %954) /* ty=(Tensor[(10, 6, 15), int32],) */;
  %956 = cast(meta[relay.Constant][47] /* ty=Tensor[(14, 42), int16] */, dtype="int16") /* ty=Tensor[(14, 42), int16] */;
  %957 = reshape(%956, newshape=[14, 7, 6]) /* ty=Tensor[(14, 7, 6), int16] */;
  %958 = @func_3015(%957) /* ty=(Tensor[(14, 7, 6), float64], Tensor[(14, 7, 6), float64]) */;
  %959 = @func_4949() /* ty=(Tensor[(4, 3, 5), float32],) */;
  %960 = @func_4668() /* ty=Tensor[(640), uint8] */;
  %961 = %955.0;
  %962 = %958.0;
  %963 = %959.0;
  (%960, %961, meta[relay.Constant][46] /* ty=Tensor[(900), int32] */, %962, meta[relay.Constant][47] /* ty=Tensor[(14, 42), int16] */, %963)
}

def @func_7900() -> Tensor[(4, 3, 5), float32] {
  @func_7898() /* ty=Tensor[(4, 3, 5), float32] */
}

def @func_7203() -> (Tensor[(60), float64], Tensor[(640), uint8], Tensor[(4, 3, 5), float64], Tensor[(1, 4), uint64], Tensor[(4, 3, 5), float64]) {
  @func_7201() /* ty=(Tensor[(60), float64], Tensor[(640), uint8], Tensor[(4, 3, 5), float64], Tensor[(1, 4), uint64], Tensor[(4, 3, 5), float64]) */
}

def @func_6631(%var_6629: Tensor[(672), float32]) -> (Tensor[(8, 8, 10), float32], Tensor[(6, 14, 8), float32], Tensor[(672), float32], Tensor[(8, 8, 10), float32], Tensor[(4, 3, 5), uint32], Tensor[(60), float32], Tensor[(4, 3, 5), float32], Tensor[(4, 3, 5), float64], Tensor[(4, 3, 5), float32], Tensor[(15, 9, 1), float32], Tensor[(640), uint8], Tensor[(2, 320), uint8]) {
  @func_6628(%var_6629) /* ty=(Tensor[(8, 8, 10), float32], Tensor[(6, 14, 8), float32], Tensor[(672), float32], Tensor[(8, 8, 10), float32], Tensor[(4, 3, 5), uint32], Tensor[(60), float32], Tensor[(4, 3, 5), float32], Tensor[(4, 3, 5), float64], Tensor[(4, 3, 5), float32], Tensor[(15, 9, 1), float32], Tensor[(640), uint8], Tensor[(2, 320), uint8]) */
}

def @func_7201() -> (Tensor[(60), float64], Tensor[(640), uint8], Tensor[(4, 3, 5), float64], Tensor[(1, 4), uint64], Tensor[(4, 3, 5), float64]) {
  %964 = @func_4113() /* ty=(Tensor[(4, 3, 5), float32], Tensor[(60), float64], Tensor[(1620), float32]) */;
  %965 = cast(meta[relay.Constant][48] /* ty=Tensor[(1, 4), uint64] */, dtype="uint64") /* ty=Tensor[(1, 4), uint64] */;
  %966 = reshape(%965, newshape=[4]) /* ty=Tensor[(4), uint64] */;
  %967 = @func_885(%966) /* ty=(Tensor[(2, 4, 14), float32], Tensor[(4, 3, 5), float64], Tensor[(4), uint64], Tensor[(32), uint64], Tensor[(4, 3, 5), float64]) */;
  %968 = %967.1;
  %969 = cast(%968, dtype="float64") /* ty=Tensor[(4, 3, 5), float64] */;
  %970 = reshape(%969, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %971 = @func_2467(%970) /* ty=(Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64], Tensor[(60), float64]) */;
  %972 = %964.1;
  %973 = @func_4668() /* ty=Tensor[(640), uint8] */;
  %974 = %971.1;
  (%972, %973, %968, meta[relay.Constant][48] /* ty=Tensor[(1, 4), uint64] */, %974)
}

def @func_9180() -> Tensor[(4, 3, 5), float32] {
  @func_9178() /* ty=Tensor[(4, 3, 5), float32] */
}

def @func_3962() -> (Tensor[(4, 3, 5), float32],) {
  %977 = fn () -> (Tensor[(4, 3, 5), float32],) {
    %975 = @func_3207() /* ty=(Tensor[(4, 3, 5), float32],) */;
    %976 = %975.0;
    (%976,)
  };
  %977() /* ty=(Tensor[(4, 3, 5), float32],) */
}

def @func_2262(%var_2260: Tensor[(32), uint64], %var_2261: Tensor[(32, 24), float64]) -> (Tensor[(15, 9, 1), float32], Tensor[(2, 2, 8), bool], Tensor[(1, 4), uint64], Tensor[(32), uint64], Tensor[(6, 8, 16), float64], Tensor[(32, 24), float64]) {
  %989 = fn (%var_2211: Tensor[(32), uint64], %var_2219: Tensor[(32, 24), float64]) -> (Tensor[(15, 9, 1), float32], Tensor[(2, 2, 8), bool], Tensor[(1, 4), uint64], Tensor[(32), uint64], Tensor[(6, 8, 16), float64], Tensor[(32, 24), float64]) {
    %978 = cast(meta[relay.Constant][49] /* ty=Tensor[(1, 4), uint64] */, dtype="uint64") /* ty=Tensor[(1, 4), uint64] */;
    %979 = cast(%var_2211, dtype="uint64") /* ty=Tensor[(32), uint64] */;
    %980 = reshape(%978, newshape=[2, 2, 1]) /* ty=Tensor[(2, 2, 1), uint64] */;
    %981 = reshape(%979, newshape=[2, 2, 8]) /* ty=Tensor[(2, 2, 8), uint64] */;
    %982 = @func_665(%980, %981) /* ty=(Tensor[(2, 2, 8), bool], Tensor[(60), float64], Tensor[(2730), uint32], Tensor[(60, 1), float64], Tensor[(4, 3, 5), float64]) */;
    %983 = cast(%var_2219, dtype="float64") /* ty=Tensor[(32, 24), float64] */;
    %984 = reshape(%983, newshape=[6, 8, 16]) /* ty=Tensor[(6, 8, 16), float64] */;
    %985 = @func_1585(%984) /* ty=(Tensor[(6, 8, 16), float64],) */;
    %986 = @func_2200() /* ty=Tensor[(15, 9, 1), float32] */;
    %987 = %982.0;
    %988 = %985.0;
    (%986, %987, meta[relay.Constant][49] /* ty=Tensor[(1, 4), uint64] */, %var_2211, %988, %var_2219)
  };
  %989(%var_2260, %var_2261) /* ty=(Tensor[(15, 9, 1), float32], Tensor[(2, 2, 8), bool], Tensor[(1, 4), uint64], Tensor[(32), uint64], Tensor[(6, 8, 16), float64], Tensor[(32, 24), float64]) */
}

def @func_1923() -> (Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64], Tensor[(4, 1), uint64]) {
  %996 = fn () -> (Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64], Tensor[(4, 1), uint64]) {
    %990 = cast(meta[relay.Constant][50] /* ty=Tensor[(15, 9, 1), float32] */, dtype="float32") /* ty=Tensor[(15, 9, 1), float32] */;
    %991 = cast(meta[relay.Constant][51] /* ty=Tensor[(4, 1), uint64] */, dtype="uint64") /* ty=Tensor[(4, 1), uint64] */;
    %992 = reshape(%991, newshape=[4]) /* ty=Tensor[(4), uint64] */;
    %993 = @func_885(%992) /* ty=(Tensor[(2, 4, 14), float32], Tensor[(4, 3, 5), float64], Tensor[(4), uint64], Tensor[(32), uint64], Tensor[(4, 3, 5), float64]) */;
    %994 = sqrt(%990) /* ty=Tensor[(15, 9, 1), float32] */;
    %995 = %993.1;
    (%994, %995, meta[relay.Constant][51] /* ty=Tensor[(4, 1), uint64] */)
  };
  %996() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(4, 3, 5), float64], Tensor[(4, 1), uint64]) */
}

def @func_4670() -> Tensor[(640), uint8] {
  @func_4668() /* ty=Tensor[(640), uint8] */
}

def @func_5058(%var_5040: Tensor[(8, 8, 10), float32], %var_5056: Tensor[(210), float32]) -> (Tensor[(4, 3, 5), float32], Tensor[(8, 8, 10), int8], Tensor[(4, 3, 5), float64], Tensor[(210), float32]) {
  %997 = @func_3207() /* ty=(Tensor[(4, 3, 5), float32],) */;
  %998 = @func_3796() /* ty=(Tensor[(15, 9, 1), float32], Tensor[(8, 8, 10), float32]) */;
  %999 = %998.1;
  %1000 = cast(%var_5040, dtype="int8") /* ty=Tensor[(8, 8, 10), int8] */;
  %1001 = shape_of(%999, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1002 = cast(%999, dtype="int8") /* ty=Tensor[(8, 8, 10), int8] */;
  %1003 = dyn.reshape(%1000, %1001, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1004 = cast(%var_5056, dtype="float32") /* ty=Tensor[(210), float32] */;
  %1005 = reshape(%1004, newshape=[3, 5, 14]) /* ty=Tensor[(3, 5, 14), float32] */;
  %1006 = @func_2020(%1005) /* ty=(Tensor[(3, 5, 14), float32], Tensor[(4, 3, 5), float64], Tensor[(4), uint64]) */;
  %1007 = %997.0;
  %1008 = multiply(%1002, %1003) /* ty=Tensor[(8, 8, 10), int8] */;
  %1009 = %1006.1;
  (%1007, %1008, %1009, %var_5056)
}

def @func_2670(%var_2668: Tensor[(8, 6, 14), float64]) -> (Tensor[(15, 9, 1), float32], Tensor[(8, 6, 14), float32], Tensor[(768), float64], Tensor[(1, 768), float64], Tensor[(32), uint64], Tensor[(3, 5, 14), float32], Tensor[(210), float32]) {
  @func_2667(%var_2668) /* ty=(Tensor[(15, 9, 1), float32], Tensor[(8, 6, 14), float32], Tensor[(768), float64], Tensor[(1, 768), float64], Tensor[(32), uint64], Tensor[(3, 5, 14), float32], Tensor[(210), float32]) */
}

def @func_3434() -> Tensor[(4, 3, 5), bool] {
  %1010 = @func_2959() /* ty=(Tensor[(4, 3, 5), float32], Tensor[(4, 3, 5), bool]) */;
  %1010.1
}

def @func_2432() -> (Tensor[(15, 9, 1), float32],) {
  %1012 = fn () -> (Tensor[(15, 9, 1), float32],) {
    %1011 = @func_2200() /* ty=Tensor[(15, 9, 1), float32] */;
    (%1011,)
  };
  %1012() /* ty=(Tensor[(15, 9, 1), float32],) */
}

def @func_6886() -> Tensor[(4, 3, 5), float64] {
  @func_2536() /* ty=Tensor[(4, 3, 5), float64] */
}

def @func_7487(%var_7430: Tensor[(1, 12, 10), float64], %var_7436: int8, %var_7459: Tensor[(5, 4, 16), float32], %var_7485: Tensor[(60), float64]) -> (Tensor[(1, 12, 10), float64], int8, Tensor[(5, 4, 16), uint64], Tensor[(5, 4, 16), float64], Tensor[(60), float64], Tensor[(2730), uint32], Tensor[(60), float64]) {
  %1013 = cast(%var_7430, dtype="float64") /* ty=Tensor[(1, 12, 10), float64] */;
  %1014 = cast(%var_7436, dtype="int8") /* ty=int8 */;
  %1015 = reshape(%1014, newshape=[]) /* ty=int8 */;
  %1016 = @func_5755(%1015) /* ty=(Tensor[(5, 4, 16), int8], Tensor[(4, 3, 5), float32]) */;
  %1017 = %1016.0;
  %1018 = cast(%1017, dtype="float32") /* ty=Tensor[(5, 4, 16), float32] */;
  %1019 = atan(%1018) /* ty=Tensor[(5, 4, 16), float32] */;
  %1020 = cast(%var_7459, dtype="uint64") /* ty=Tensor[(5, 4, 16), uint64] */;
  %1021 = shape_of(%1019, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1022 = cast(%1019, dtype="uint64") /* ty=Tensor[(5, 4, 16), uint64] */;
  %1023 = dyn.reshape(%1020, %1021, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1024 = cast(%1019, dtype="float64") /* ty=Tensor[(5, 4, 16), float64] */;
  %1025 = cast(meta[relay.Constant][52] /* ty=Tensor[(2730), uint32] */, dtype="uint32") /* ty=Tensor[(2730), uint32] */;
  %1026 = cast(meta[relay.Constant][52] /* ty=Tensor[(2730), uint32] */, dtype="uint32") /* ty=Tensor[(2730), uint32] */;
  %1027 = cast(%var_7485, dtype="float64") /* ty=Tensor[(60), float64] */;
  %1028 = reshape(%1025, newshape=[14, 15, 13]) /* ty=Tensor[(14, 15, 13), uint32] */;
  %1029 = reshape(%1026, newshape=[14, 15, 13]) /* ty=Tensor[(14, 15, 13), uint32] */;
  %1030 = reshape(%1027, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %1031 = @func_607(%1028, %1029, %1030) /* ty=(Tensor[(14, 15, 13), uint32], Tensor[(14, 15, 13), float64], Tensor[(4, 3, 5), float64], Tensor[(60), float64]) */;
  %1032 = cos(%1013) /* ty=Tensor[(1, 12, 10), float64] */;
  %1033 = bitwise_or(%1022, %1023) /* ty=Tensor[(5, 4, 16), uint64] */;
  %1034 = acos(%1024) /* ty=Tensor[(5, 4, 16), float64] */;
  %1035 = %1031.3;
  (%1032, %var_7436, %1033, %1034, %1035, meta[relay.Constant][52] /* ty=Tensor[(2730), uint32] */, %var_7485)
}

def @func_7987(%var_7960: Tensor[(900), int32]) -> (Tensor[(4, 3, 5), float64], Tensor[(900), int32], Tensor[(10, 6, 15), float64]) {
  %1036 = cast(%var_7960, dtype="int32") /* ty=Tensor[(900), int32] */;
  %1037 = cast(%var_7960, dtype="int32") /* ty=Tensor[(900), int32] */;
  %1038 = reshape(%1036, newshape=[10, 6, 15]) /* ty=Tensor[(10, 6, 15), int32] */;
  %1039 = reshape(%1037, newshape=[10, 6, 15]) /* ty=Tensor[(10, 6, 15), int32] */;
  %1040 = @func_1504(%1038, %1039) /* ty=(Tensor[(10, 6, 15), int32],) */;
  %1041 = %1040.0;
  %1042 = cast(%1041, dtype="float64") /* ty=Tensor[(10, 6, 15), float64] */;
  %1043 = @func_6886() /* ty=Tensor[(4, 3, 5), float64] */;
  %1044 = atan(%1042) /* ty=Tensor[(10, 6, 15), float64] */;
  (%1043, %var_7960, %1044)
}

def @func_8875() -> (Tensor[(15, 9, 1), float32],) {
  %1045 = @func_5489() /* ty=Tensor[(15, 9, 1), float32] */;
  (%1045,)
}

def @func_4348() -> (Tensor[(4, 3, 5), float32],) {
  @func_4346() /* ty=(Tensor[(4, 3, 5), float32],) */
}

def @func_6527() -> Tensor[(15, 9, 1), float32] {
  %1047 = fn () -> Tensor[(15, 9, 1), float32] {
    %1046 = @func_4547() /* ty=(Tensor[(15, 9, 1), float32],) */;
    %1046.0
  };
  %1047() /* ty=Tensor[(15, 9, 1), float32] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

==========mod==========
#[version = "0.0.5"]
def @func_25222() -> Tensor[(13, 4, 13), float32] {
  @func_11072() /* ty=Tensor[(13, 4, 13), float32] */
}

def @func_25286() -> (Tensor[(15, 11, 11), float32],) {
  %0 = @func_18951() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) */;
  %1 = %0.3;
  (%1,)
}

def @func_5931() -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) {
  %2 = @func_5691() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %3 = %2.0;
  %4 = @func_2995() /* ty=Tensor[(15, 11, 11), float32] */;
  (%3, %4)
}

def @func_25842() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float32]) {
  %5 = @func_15176() /* ty=Tensor[(15, 11, 11), float32] */;
  %6 = @func_22400() /* ty=Tensor[(15, 11, 11), float32] */;
  %7 = @func_21955() /* ty=Tensor[(7, 3, 16), float32] */;
  (%5, %6, %7)
}

def @func_8668(%var_8602: Tensor[(320), float32], %var_8650: Tensor[(15, 6), uint64]) -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(320), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float64], Tensor[(792), float64], Tensor[(15, 6), uint64], Tensor[(3, 42), float64]) {
  %8 = @func_6635() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %9 = @func_3322() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %10 = cast(meta[relay.Constant][0] /* ty=Tensor[(3, 42), float64] */, dtype="float64") /* ty=Tensor[(3, 42), float64] */;
  %11 = cast(%var_8602, dtype="float32") /* ty=Tensor[(320), float32] */;
  %12 = reshape(%10, newshape=[21, 6]) /* ty=Tensor[(21, 6), float64] */;
  %13 = reshape(%11, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %14 = @func_4072(%12, %13) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(8, 11, 9), int8], Tensor[(792), float64], Tensor[(15, 11, 11), float32], Tensor[(792), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(35), float64], Tensor[(16, 5, 4), float32], Tensor[(320), float32], Tensor[(21, 6), float32], Tensor[(15, 11, 11), float32], Tensor[(792), float64], Tensor[(16, 5, 4), float32]) */;
  %15 = @func_5438() /* ty=(Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), float64]) */;
  %16 = cast(%var_8650, dtype="uint64") /* ty=Tensor[(15, 6), uint64] */;
  %17 = reshape(%16, newshape=[90]) /* ty=Tensor[(90), uint64] */;
  %18 = @func_6317(%17) /* ty=(Tensor[(792), float64], Tensor[(15, 11, 11), float32], Tensor[(90), uint64]) */;
  %19 = cast(meta[relay.Constant][0] /* ty=Tensor[(3, 42), float64] */, dtype="float64") /* ty=Tensor[(3, 42), float64] */;
  %20 = acos(%19) /* ty=Tensor[(3, 42), float64] */;
  %21 = cast(%20, dtype="float64") /* ty=Tensor[(3, 42), float64] */;
  %22 = log(%21) /* ty=Tensor[(3, 42), float64] */;
  %23 = cast(%22, dtype="float32") /* ty=Tensor[(3, 42), float32] */;
  %24 = sin(%23) /* ty=Tensor[(3, 42), float32] */;
  %25 = cast(meta[relay.Constant][0] /* ty=Tensor[(3, 42), float64] */, dtype="float64") /* ty=Tensor[(3, 42), float64] */;
  %26 = shape_of(%24, dtype="int32") /* ty=Tensor[(2), int32] */;
  %27 = cast(%24, dtype="float64") /* ty=Tensor[(3, 42), float64] */;
  %28 = dyn.reshape(%25, %26, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %29 = %8.0;
  %30 = %9.0;
  %31 = %14.11;
  %32 = @func_4906() /* ty=Tensor[(15, 11, 11), float32] */;
  %33 = %15.1;
  %34 = %18.0;
  %35 = mod(%27, %28) /* ty=Tensor[(3, 42), float64] */;
  (%29, %30, %31, %var_8602, %32, %33, %34, %var_8650, %35)
}

def @func_18039() -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) {
  %36 = @func_17966() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %37 = @func_14620() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %38 = %36.0;
  %39 = %37.0;
  (%38, %39)
}

def @func_19280() -> (Tensor[(15, 11, 11), bool],) {
  %40 = @func_15932() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool]) */;
  %41 = %40.0;
  (%41,)
}

def @func_19438() -> Tensor[(6, 5, 3), float64] {
  @func_8752() /* ty=Tensor[(6, 5, 3), float64] */
}

def @func_22477() -> Tensor[(15, 11, 11), float32] {
  @func_21132() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_21337() -> (Tensor[(15, 11, 11), bool],) {
  %42 = @func_21037() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %43 = %42.0;
  (%43,)
}

def @func_24034() -> (Tensor[(15, 11, 11), bool],) {
  %44 = @func_5967() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(7, 3, 16), float32], Tensor[(15, 11, 11), bool]) */;
  %45 = %44.0;
  (%45,)
}

def @func_5752() -> Tensor[(15, 11, 11), float32] {
  %46 = @func_4240() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %46.1
}

def @func_22464() -> (Tensor[(15, 11, 11), float32],) {
  %47 = @func_12750() /* ty=Tensor[(15, 11, 11), float32] */;
  (%47,)
}

def @func_20682() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(6, 5, 3), bool], Tensor[(15, 11, 11), float32]) {
  %48 = @func_12594() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) */;
  %49 = @func_15241() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool]) */;
  %50 = @func_19438() /* ty=Tensor[(6, 5, 3), float64] */;
  %51 = cast(meta[relay.Constant][1] /* ty=Tensor[(6, 5, 3), float64] */, dtype="bool") /* ty=Tensor[(6, 5, 3), bool] */;
  %52 = shape_of(%50, dtype="int32") /* ty=Tensor[(3), int32] */;
  %53 = cast(%50, dtype="bool") /* ty=Tensor[(6, 5, 3), bool] */;
  %54 = dyn.reshape(%51, %52, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %55 = @func_19829() /* ty=(Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %56 = %48.0;
  %57 = %49.0;
  %58 = equal(%53, %54) /* ty=Tensor[(6, 5, 3), bool] */;
  %59 = %55.3;
  (%56, %57, %58, %59)
}

def @func_24889() -> (Tensor[(15, 11, 11), float32],) {
  %60 = @func_10639() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) */;
  %61 = %60.1;
  (%61,)
}

def @func_14196() -> (Tensor[(7, 3, 16), float32],) {
  %62 = @func_7881() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float32]) */;
  %63 = %62.1;
  (%63,)
}

def @func_22243() -> Tensor[(15, 11, 11), float32] {
  %64 = @func_20682() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(6, 5, 3), bool], Tensor[(15, 11, 11), float32]) */;
  %64.3
}

def @func_8427() -> (Tensor[(15, 11, 11), float32], Tensor[(320), float32]) {
  %65 = @func_7089() /* ty=(Tensor[(7, 3, 16), int8], Tensor[(6, 5, 3), float64], Tensor[(1815), bool], Tensor[(126), float64], Tensor[(320), float32], Tensor[(7, 3, 16), int8]) */;
  %66 = @func_7426() /* ty=Tensor[(15, 11, 11), float32] */;
  %67 = %65.4;
  (%66, %67)
}

def @func_15033() -> (Tensor[(15, 11, 11), float32],) {
  %68 = @func_7614() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %69 = %68.0;
  (%69,)
}

def @func_7727() -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) {
  %70 = @func_5896() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %71 = @func_4949() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), uint64], Tensor[(792), float64]) */;
  %72 = %70.0;
  %73 = %71.0;
  (%72, %73)
}

def @func_11212() -> (Tensor[(15, 11, 11), float32], Tensor[(7, 5, ?), bool], Tensor[(35), float64]) {
  %74 = cast(meta[relay.Constant][2] /* ty=Tensor[(35), float64] */, dtype="float64") /* ty=Tensor[(35), float64] */;
  %75 = cast(meta[relay.Constant][2] /* ty=Tensor[(35), float64] */, dtype="float64") /* ty=Tensor[(35), float64] */;
  %76 = reshape(%74, newshape=[7, 5, 1]) /* ty=Tensor[(7, 5, 1), float64] */;
  %77 = reshape(%75, newshape=[7, 5, 1]) /* ty=Tensor[(7, 5, 1), float64] */;
  %78 = @func_2694(%76, %77) /* ty=(Tensor[(7, 5, ?), bool],) */;
  %79 = @func_7426() /* ty=Tensor[(15, 11, 11), float32] */;
  %80 = %78.0;
  (%79, %80, meta[relay.Constant][2] /* ty=Tensor[(35), float64] */)
}

def @func_5073() -> Tensor[(1, 126), float64] {
  %81 = @func_4607() /* ty=(Tensor[(7, 3, 16), int8], Tensor[(15, 11, 11), float32], Tensor[(1, 126), float64], Tensor[(7, 3, 16), int8], Tensor[(16, 5, 4), float32], Tensor[(320), float32]) */;
  %81.2
}

def @func_7426() -> Tensor[(15, 11, 11), float32] {
  %82 = @func_3160() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %82.0
}

def @func_11408() -> Tensor[(15, 11, 11), bool] {
  %83 = @func_3322() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %83.0
}

def @func_16381() -> Tensor[(15, 11, 11), float32] {
  %84 = @func_12029() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %84.0
}

def @func_15023() -> Tensor[(15, 11, 11), float32] {
  %85 = @func_8816() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %85.0
}

def @func_20387() -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float64], Tensor[(126), float64], Tensor[(15, 11, 11), float32]) {
  %86 = @func_14001() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(90), uint64], Tensor[(15, 11, 11), float64]) */;
  %87 = @func_12969() /* ty=(Tensor[(126), float64], Tensor[(15, 11, 11), float32]) */;
  %88 = %87.0;
  %89 = cast(%88, dtype="float64") /* ty=Tensor[(126), float64] */;
  %90 = reshape(%89, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %91 = @func_16188(%90) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(126), float64], Tensor[(15, 11, 11), bool]) */;
  %92 = @func_17213() /* ty=Tensor[(15, 11, 11), bool] */;
  %93 = %86.2;
  %94 = %91.2;
  (%92, %93, %88, %94)
}

def @func_9844() -> (Tensor[(15, 11, 11), float32],) {
  %95 = @func_9629() /* ty=Tensor[(15, 11, 11), float32] */;
  (%95,)
}

def @func_4240() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %96 = @func_2995() /* ty=Tensor[(15, 11, 11), float32] */;
  %97 = cast(%96, dtype="float32") /* ty=Tensor[(15, 11, 11), float32] */;
  %98 = atanh(%97) /* ty=Tensor[(15, 11, 11), float32] */;
  %99 = @func_2978() /* ty=Tensor[(15, 11, 11), float32] */;
  (%98, %99)
}

def @func_7331() -> Tensor[(15, 11, 11), float32] {
  %100 = @func_5803() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %100.0
}

def @func_10284() -> (Tensor[(6, 5, 3), float64], Tensor[(15, 11, 11), float32]) {
  %101 = @func_4741() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), int8]) */;
  %102 = @func_8752() /* ty=Tensor[(6, 5, 3), float64] */;
  %103 = %101.0;
  (%102, %103)
}

def @func_15241() -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool]) {
  %104 = @func_10639() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) */;
  %105 = @func_7570() /* ty=Tensor[(15, 11, 11), bool] */;
  %106 = %104.2;
  (%105, %106)
}

def @func_5967() -> (Tensor[(15, 11, 11), bool], Tensor[(7, 3, 16), float32], Tensor[(15, 11, 11), bool]) {
  %107 = @func_5103() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %108 = @func_5026() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float64], Tensor[(7, 3, 16), int8]) */;
  %109 = %108.2;
  %110 = cast(%109, dtype="float32") /* ty=Tensor[(7, 3, 16), float32] */;
  %111 = @func_5691() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %112 = %107.0;
  %113 = sinh(%110) /* ty=Tensor[(7, 3, 16), float32] */;
  %114 = %111.0;
  (%112, %113, %114)
}

def @func_21405() -> (Tensor[(15, 11, 11), bool],) {
  %115 = @func_15834() /* ty=Tensor[(15, 11, 11), bool] */;
  (%115,)
}

def @func_10729() -> Tensor[(15, 11, 11), float32] {
  @func_8380() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_24271() -> (Tensor[(320), float32], Tensor[(15, 11, 11), float32]) {
  %116 = @func_23207() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(320), float32]) */;
  %117 = %116.2;
  %118 = @func_15176() /* ty=Tensor[(15, 11, 11), float32] */;
  (%117, %118)
}

def @func_24810() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) {
  %119 = @func_7447() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(792), float64]) */;
  %120 = @func_16993() /* ty=Tensor[(15, 11, 11), float32] */;
  %121 = %119.0;
  (%120, %121)
}

def @main() -> (Tensor[(90), uint64], Tensor[(15, 11, 11), float32], Tensor[(7, 126), float32]) {
  %122 = @func_23011() /* ty=(Tensor[(90), uint64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float64]) */;
  %123 = @func_20425() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %124 = @func_5073() /* ty=Tensor[(1, 126), float64] */;
  %125 = cast(%124, dtype="bool") /* ty=Tensor[(1, 126), bool] */;
  %126 = cast(meta[relay.Constant][3] /* ty=Tensor[(7, 126), float64] */, dtype="bool") /* ty=Tensor[(7, 126), bool] */;
  %127 = greater_equal(%125, %126) /* ty=Tensor[(7, 126), bool] */;
  %128 = cast(meta[relay.Constant][3] /* ty=Tensor[(7, 126), float64] */, dtype="int8") /* ty=Tensor[(7, 126), int8] */;
  %129 = shape_of(%127, dtype="int32") /* ty=Tensor[(2), int32] */;
  %130 = cast(%127, dtype="int8") /* ty=Tensor[(7, 126), int8] */;
  %131 = dyn.reshape(%128, %129, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %132 = right_shift(%130, %131) /* ty=Tensor[(7, 126), int8] */;
  %133 = cast(meta[relay.Constant][3] /* ty=Tensor[(7, 126), float64] */, dtype="bool") /* ty=Tensor[(7, 126), bool] */;
  %134 = cast(%124, dtype="bool") /* ty=Tensor[(1, 126), bool] */;
  %135 = equal(%133, %134) /* ty=Tensor[(7, 126), bool] */;
  %136 = cast(%135, dtype="float32") /* ty=Tensor[(7, 126), float32] */;
  %137 = shape_of(%132, dtype="int32") /* ty=Tensor[(2), int32] */;
  %138 = cast(%132, dtype="float32") /* ty=Tensor[(7, 126), float32] */;
  %139 = dyn.reshape(%136, %137, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %140 = %122.0;
  %141 = %123.2;
  %142 = floor_mod(%138, %139) /* ty=Tensor[(7, 126), float32] */;
  (%140, %141, %142)
}

def @func_24518() -> Tensor[(320), float32] {
  %143 = @func_4607() /* ty=(Tensor[(7, 3, 16), int8], Tensor[(15, 11, 11), float32], Tensor[(1, 126), float64], Tensor[(7, 3, 16), int8], Tensor[(16, 5, 4), float32], Tensor[(320), float32]) */;
  %143.5
}

def @func_12594() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) {
  %144 = @func_7642() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %145 = %144.1;
  %146 = cast(%145, dtype="float32") /* ty=Tensor[(15, 11, 11), float32] */;
  %147 = reshape(%146, newshape=[15, 11, 11]) /* ty=Tensor[(15, 11, 11), float32] */;
  %148 = @func_3379(%147) /* ty=Tensor[(15, 11, 11), bool] */;
  (%145, %148)
}

def @func_5555(%var_5528: Tensor[(126), float64]) -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(126), float64], Tensor[(320), float32], Tensor[(80, 4), float64]) {
  %149 = @func_2900() /* ty=Tensor[(15, 11, 11), float32] */;
  %150 = cast(%149, dtype="bool") /* ty=Tensor[(15, 11, 11), bool] */;
  %151 = cast(%var_5528, dtype="float64") /* ty=Tensor[(126), float64] */;
  %152 = cast(meta[relay.Constant][4] /* ty=Tensor[(320), float32] */, dtype="float32") /* ty=Tensor[(320), float32] */;
  %153 = reshape(%150, newshape=[15, 11, 11]) /* ty=Tensor[(15, 11, 11), bool] */;
  %154 = reshape(%151, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %155 = reshape(%152, newshape=[80, 4]) /* ty=Tensor[(80, 4), float32] */;
  %156 = @func_4196(%153, %154, %155) /* ty=(Tensor[(126), float64], Tensor[(80, 4), float32], Tensor[(15, 11, 11), float64], Tensor[(6, 5, 3), float64]) */;
  %157 = %156.1;
  %158 = cast(%157, dtype="float64") /* ty=Tensor[(80, 4), float64] */;
  %159 = @func_2995() /* ty=Tensor[(15, 11, 11), float32] */;
  %160 = sin(%158) /* ty=Tensor[(80, 4), float64] */;
  (%159, %149, %var_5528, meta[relay.Constant][4] /* ty=Tensor[(320), float32] */, %160)
}

def @func_4607() -> (Tensor[(7, 3, 16), int8], Tensor[(15, 11, 11), float32], Tensor[(1, 126), float64], Tensor[(7, 3, 16), int8], Tensor[(16, 5, 4), float32], Tensor[(320), float32]) {
  %161 = @func_4371() /* ty=(Tensor[(7, 3, 16), int8],) */;
  %162 = cast(meta[relay.Constant][5] /* ty=Tensor[(1, 126), float64] */, dtype="float64") /* ty=Tensor[(1, 126), float64] */;
  %163 = reshape(%162, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %164 = @func_4266(%163) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(1, 14, 9), float64], Tensor[(126), float64], Tensor[(792), float64]) */;
  %165 = @func_4371() /* ty=(Tensor[(7, 3, 16), int8],) */;
  %166 = cast(meta[relay.Constant][6] /* ty=Tensor[(320), float32] */, dtype="float32") /* ty=Tensor[(320), float32] */;
  %167 = cast(meta[relay.Constant][6] /* ty=Tensor[(320), float32] */, dtype="float32") /* ty=Tensor[(320), float32] */;
  %168 = reshape(%166, newshape=[16, 5, 4]) /* ty=Tensor[(16, 5, 4), float32] */;
  %169 = reshape(%167, newshape=[16, 5, 4]) /* ty=Tensor[(16, 5, 4), float32] */;
  %170 = %161.0;
  %171 = %164.0;
  %172 = %165.0;
  %173 = @func_3257(%168, %169) /* ty=Tensor[(16, 5, 4), float32] */;
  (%170, %171, meta[relay.Constant][5] /* ty=Tensor[(1, 126), float64] */, %172, %173, meta[relay.Constant][6] /* ty=Tensor[(320), float32] */)
}

def @func_3074() -> Tensor[(15, 11, 11), float32] {
  @func_2978() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_7501() -> (Tensor[(7, 3, 16), float64], Tensor[(7, 3, 16), int8], Tensor[(15, 11, 11), float32], Tensor[(8, 126), int8], Tensor[(504, 2), float64]) {
  %174 = @func_7386() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float64]) */;
  %175 = @func_4741() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), int8]) */;
  %176 = @func_3160() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %177 = cast(meta[relay.Constant][7] /* ty=Tensor[(504, 2), float64] */, dtype="float64") /* ty=Tensor[(504, 2), float64] */;
  %178 = reshape(%177, newshape=[8, 126]) /* ty=Tensor[(8, 126), float64] */;
  %179 = @func_7128(%178) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(8, 126), int8]) */;
  %180 = %174.1;
  %181 = %175.1;
  %182 = %176.0;
  %183 = %179.1;
  (%180, %181, %182, %183, meta[relay.Constant][7] /* ty=Tensor[(504, 2), float64] */)
}

def @func_15563() -> (Tensor[(15, 11, 11), bool],) {
  %184 = @func_8857() /* ty=Tensor[(15, 11, 11), bool] */;
  (%184,)
}

def @func_15416(%var_15389: Tensor[(624), float32]) -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], float32, Tensor[(624), float32], Tensor[(13, 4, 13), float32], Tensor[(8, 13, 6), float64]) {
  %185 = @func_12017() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) */;
  %186 = @func_9743() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %187 = cast(-4.87014f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %188 = cast(%var_15389, dtype="float32") /* ty=Tensor[(624), float32] */;
  %189 = reshape(%187, newshape=[]) /* ty=float32 */;
  %190 = reshape(%188, newshape=[8, 13, 6]) /* ty=Tensor[(8, 13, 6), float32] */;
  %191 = @func_12233(%189, %190) /* ty=(Tensor[(8, 13, 6), float32], Tensor[(15, 11, 11), bool]) */;
  %192 = %191.0;
  %193 = cast(%192, dtype="float64") /* ty=Tensor[(8, 13, 6), float64] */;
  %194 = %185.0;
  %195 = %186.0;
  %196 = @func_11072() /* ty=Tensor[(13, 4, 13), float32] */;
  %197 = acosh(%193) /* ty=Tensor[(8, 13, 6), float64] */;
  (%194, %195, -4.87014f /* ty=float32 */, %var_15389, %196, %197)
}

def @func_21769() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %198 = @func_13529() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(1, 126), float64]) */;
  %199 = @func_20735() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %200 = %198.3;
  %201 = %199.0;
  (%200, %201)
}

def @func_26477() -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %202 = @func_5198() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %203 = @func_16565() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float32]) */;
  %204 = %202.0;
  %205 = @func_7331() /* ty=Tensor[(15, 11, 11), float32] */;
  %206 = %203.0;
  (%204, %205, %206)
}

def @func_5670(%var_5666: Tensor[(2, 1, 15), float32]) -> Tensor[(2, 1, 15), float32] {
  %207 = cast(%var_5666, dtype="float32") /* ty=Tensor[(2, 1, 15), float32] */;
  atanh(%207) /* ty=Tensor[(2, 1, 15), float32] */
}

def @func_13787() -> (Tensor[(15, 11, 11), float32],) {
  %208 = @func_13393() /* ty=Tensor[(15, 11, 11), float32] */;
  (%208,)
}

def @func_3322() -> (Tensor[(15, 11, 11), bool],) {
  %209 = @func_2900() /* ty=Tensor[(15, 11, 11), float32] */;
  %210 = cast(meta[relay.Constant][8] /* ty=Tensor[(15, 11, 11), float32] */, dtype="bool") /* ty=Tensor[(15, 11, 11), bool] */;
  %211 = shape_of(%209, dtype="int32") /* ty=Tensor[(3), int32] */;
  %212 = cast(%209, dtype="bool") /* ty=Tensor[(15, 11, 11), bool] */;
  %213 = dyn.reshape(%210, %211, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %214 = logical_and(%212, %213) /* ty=Tensor[(15, 11, 11), bool] */;
  (%214,)
}

def @func_8687() -> (Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), uint64], Tensor[(792), float64]) {
  %215 = @func_6635() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %216 = cast(meta[relay.Constant][9] /* ty=Tensor[(792), float64] */, dtype="float64") /* ty=Tensor[(792), float64] */;
  %217 = reshape(%216, newshape=[8, 11, 9]) /* ty=Tensor[(8, 11, 9), float64] */;
  %218 = @func_643(%217) /* ty=(Tensor[(8, 11, 9), int8], Tensor[(6, 5, 3), float64], Tensor[(90), uint64], Tensor[(6, 5, 3), uint64]) */;
  %219 = %215.0;
  %220 = %218.3;
  (%219, %220, meta[relay.Constant][9] /* ty=Tensor[(792), float64] */)
}

def @func_14620() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %221 = @func_9213() /* ty=(Tensor[(90), uint64], Tensor[(15, 11, 11), float32]) */;
  %222 = %221.1;
  %223 = @func_11173() /* ty=Tensor[(15, 11, 11), float32] */;
  (%222, %223)
}

def @func_4196(%var_4136: Tensor[(15, 11, 11), bool], %var_4146: Tensor[(126), float64], %var_4147: Tensor[(80, 4), float32]) -> (Tensor[(126), float64], Tensor[(80, 4), float32], Tensor[(15, 11, 11), float64], Tensor[(6, 5, 3), float64]) {
  %224 = cast(%var_4146, dtype="float64") /* ty=Tensor[(126), float64] */;
  %225 = cast(%var_4147, dtype="float32") /* ty=Tensor[(80, 4), float32] */;
  %226 = reshape(%224, newshape=[21, 6]) /* ty=Tensor[(21, 6), float64] */;
  %227 = reshape(%225, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %228 = @func_4072(%226, %227) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(8, 11, 9), int8], Tensor[(792), float64], Tensor[(15, 11, 11), float32], Tensor[(792), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(35), float64], Tensor[(16, 5, 4), float32], Tensor[(320), float32], Tensor[(21, 6), float32], Tensor[(15, 11, 11), float32], Tensor[(792), float64], Tensor[(16, 5, 4), float32]) */;
  %229 = %228.11;
  %230 = @func_3461() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) */;
  %231 = %230.1;
  %232 = cast(%var_4136, dtype="float64") /* ty=Tensor[(15, 11, 11), float64] */;
  %233 = shape_of(%231, dtype="int32") /* ty=Tensor[(3), int32] */;
  %234 = cast(%231, dtype="float64") /* ty=Tensor[(15, 11, 11), float64] */;
  %235 = dyn.reshape(%232, %233, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %236 = subtract(%234, %235) /* ty=Tensor[(15, 11, 11), float64] */;
  %237 = cast(%236, dtype="float64") /* ty=Tensor[(15, 11, 11), float64] */;
  %238 = shape_of(%229, dtype="int32") /* ty=Tensor[(3), int32] */;
  %239 = cast(%229, dtype="float64") /* ty=Tensor[(15, 11, 11), float64] */;
  %240 = dyn.reshape(%237, %238, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %241 = @func_3748() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(792), float64], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(90), uint64]) */;
  %242 = power(%239, %240) /* ty=Tensor[(15, 11, 11), float64] */;
  %243 = %241.1;
  (%var_4146, %var_4147, %242, %243)
}

def @func_15438(%var_15421: Tensor[(8, 15, 15), float64]) -> Tensor[(8, 15, 15), float64] {
  %244 = cast(%var_15421, dtype="float64") /* ty=Tensor[(8, 15, 15), float64] */;
  log2(%244) /* ty=Tensor[(8, 15, 15), float64] */
}

def @func_12932() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float64]) {
  %245 = @func_6265() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %246 = @func_5026() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float64], Tensor[(7, 3, 16), int8]) */;
  %247 = %245.0;
  %248 = %246.1;
  (%247, %248)
}

def @func_24386() -> (Tensor[(15, 11, 11), bool],) {
  %249 = @func_6148() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %250 = %249.0;
  (%250,)
}

def @func_25734() -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool]) {
  %251 = @func_24686() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(792), float64]) */;
  %252 = @func_22101() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), bool]) */;
  %253 = %251.0;
  %254 = %252.2;
  (%253, %254)
}

def @func_4824(%var_4805: Tensor[(15, 11, 11), float32]) -> Tensor[(15, 11, 11), float32] {
  %255 = @func_3160() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %256 = %255.0;
  %257 = cast(%var_4805, dtype="float32") /* ty=Tensor[(15, 11, 11), float32] */;
  %258 = shape_of(%256, dtype="int32") /* ty=Tensor[(3), int32] */;
  %259 = cast(%256, dtype="float32") /* ty=Tensor[(15, 11, 11), float32] */;
  %260 = dyn.reshape(%257, %258, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_mod(%259, %260) /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_23011() -> (Tensor[(90), uint64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float64]) {
  %261 = @func_15033() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %262 = @func_14001() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(90), uint64], Tensor[(15, 11, 11), float64]) */;
  %263 = @func_17894() /* ty=Tensor[(90), uint64] */;
  %264 = %261.0;
  %265 = %262.2;
  (%263, %264, %265)
}

def @func_8171() -> (Tensor[(15, 11, 11), float32],) {
  %266 = @func_7898() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %267 = %266.0;
  (%267,)
}

def @func_13476(%var_13456: Tensor[(30), float32], %var_13465: Tensor[(792), float64]) -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(30), float32], Tensor[(6, 5, 3), uint64], Tensor[(792), float64]) {
  %268 = @func_10446() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %269 = @func_12594() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) */;
  %270 = @func_6394() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %271 = cast(%var_13456, dtype="float32") /* ty=Tensor[(30), float32] */;
  %272 = reshape(%271, newshape=[30]) /* ty=Tensor[(30), float32] */;
  %273 = @func_12664(%272) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(1, 14, 9), float64], Tensor[(126), float64], Tensor[(2, 1, 15), float32], Tensor[(30), float32], Tensor[(792), float64]) */;
  %274 = cast(%var_13465, dtype="float64") /* ty=Tensor[(792), float64] */;
  %275 = reshape(%274, newshape=[8, 11, 9]) /* ty=Tensor[(8, 11, 9), float64] */;
  %276 = @func_643(%275) /* ty=(Tensor[(8, 11, 9), int8], Tensor[(6, 5, 3), float64], Tensor[(90), uint64], Tensor[(6, 5, 3), uint64]) */;
  %277 = %268.0;
  %278 = %269.1;
  %279 = %270.1;
  %280 = %273.0;
  %281 = %276.3;
  (%277, %278, %279, %280, %var_13456, %281, %var_13465)
}

def @func_16883() -> (Tensor[(15, 11, 11), float64],) {
  %282 = @func_15894() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %283 = %282.0;
  %284 = cast(%283, dtype="float64") /* ty=Tensor[(15, 11, 11), float64] */;
  %285 = asinh(%284) /* ty=Tensor[(15, 11, 11), float64] */;
  (%285,)
}

def @func_8380() -> Tensor[(15, 11, 11), float32] {
  @func_8070() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_25326() -> Tensor[(15, 11, 11), bool] {
  %286 = @func_24544() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) */;
  %286.1
}

def @func_14811() -> (Tensor[(792), float64], Tensor[(15, 11, 11), float32]) {
  %287 = @func_7447() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(792), float64]) */;
  %288 = @func_9352() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %289 = %287.1;
  %290 = %288.0;
  (%289, %290)
}

def @func_6765() -> Tensor[(15, 11, 11), float32] {
  %291 = @func_5349() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %291.0
}

def @func_26094() -> (Tensor[(15, 11, 11), float32],) {
  %292 = @func_20188() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %293 = %292.0;
  (%293,)
}

def @func_22432(%var_22420: Tensor[(126), float64]) -> (Tensor[(15, 11, 11), float32], Tensor[(126), float64], Tensor[(126), float64]) {
  %294 = @func_3160() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %295 = %294.0;
  %296 = cast(%295, dtype="float32") /* ty=Tensor[(15, 11, 11), float32] */;
  %297 = cast(%var_22420, dtype="float64") /* ty=Tensor[(126), float64] */;
  %298 = reshape(%296, newshape=[15, 11, 11]) /* ty=Tensor[(15, 11, 11), float32] */;
  %299 = reshape(%297, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %300 = @func_4461(%298, %299) /* ty=(Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(126), float64], Tensor[(7, 3, 16), int8]) */;
  %301 = %300.5;
  (%295, %301, %var_22420)
}

def @func_8268() -> (Tensor[(15, 11, 11), float32],) {
  %302 = @func_6349() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %303 = %302.0;
  (%303,)
}

def @func_6349() -> (Tensor[(15, 11, 11), float32],) {
  %304 = @func_2995() /* ty=Tensor[(15, 11, 11), float32] */;
  (%304,)
}

def @func_20020() -> Tensor[(15, 11, 11), float32] {
  %305 = @func_11467() /* ty=(Tensor[(320), float32], Tensor[(15, 11, 11), float32]) */;
  %305.1
}

def @func_11306() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %306 = @func_6394() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %307 = %306.1;
  %308 = @func_10729() /* ty=Tensor[(15, 11, 11), float32] */;
  (%307, %308)
}

def @func_23508(%var_23502: Tensor[(3, 15, 3), int64]) -> (Tensor[(3, 15, 3), int64],) {
  %309 = cast(-1 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %310 = cast(%var_23502, dtype="int64") /* ty=Tensor[(3, 15, 3), int64] */;
  %311 = bitwise_or(%309, %310) /* ty=Tensor[(3, 15, 3), int64] */;
  (%311,)
}

def @func_12910(%var_12903: Tensor[(8, 8, 3), float32]) -> (Tensor[(8, 8, 3), float32],) {
  %312 = cast(%var_12903, dtype="float32") /* ty=Tensor[(8, 8, 3), float32] */;
  %313 = sigmoid(%312) /* ty=Tensor[(8, 8, 3), float32] */;
  (%313,)
}

def @func_25309() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %314 = @func_18677() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) */;
  %315 = %314.2;
  %316 = @func_15023() /* ty=Tensor[(15, 11, 11), float32] */;
  (%315, %316)
}

def @func_21226() -> (Tensor[(16, 5, 4), float32], Tensor[(7, 3, 16), float64]) {
  %317 = @func_17189() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(16, 5, 4), float64]) */;
  %318 = %317.1;
  %319 = cast(%318, dtype="float32") /* ty=Tensor[(16, 5, 4), float32] */;
  %320 = @func_7501() /* ty=(Tensor[(7, 3, 16), float64], Tensor[(7, 3, 16), int8], Tensor[(15, 11, 11), float32], Tensor[(8, 126), int8], Tensor[(504, 2), float64]) */;
  %321 = asinh(%319) /* ty=Tensor[(16, 5, 4), float32] */;
  %322 = %320.0;
  (%321, %322)
}

def @func_10692() -> (Tensor[(15, 11, 11), bool],) {
  %323 = @func_10085() /* ty=Tensor[(15, 11, 11), bool] */;
  (%323,)
}

def @func_14517() -> (Tensor[(15, 11, 11), float32],) {
  %324 = @func_5803() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %325 = %324.0;
  (%325,)
}

def @func_25201() -> Tensor[(15, 11, 11), float32] {
  @func_13045() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_8157() -> (Tensor[(7, 3, 16), float32], Tensor[(1, 14, 9), float64], Tensor[(126), float64]) {
  %326 = @func_6987() /* ty=(Tensor[(7, 3, 16), float32],) */;
  %327 = cast(meta[relay.Constant][10] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
  %328 = reshape(%327, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %329 = @func_4266(%328) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(1, 14, 9), float64], Tensor[(126), float64], Tensor[(792), float64]) */;
  %330 = %326.0;
  %331 = %329.1;
  (%330, %331, meta[relay.Constant][10] /* ty=Tensor[(126), float64] */)
}

def @func_2995() -> Tensor[(15, 11, 11), float32] {
  @func_2900() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_19423() -> (Tensor[(15, 11, 11), float32],) {
  %332 = @func_18326() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %333 = %332.0;
  (%333,)
}

def @func_26259(%var_26210: Tensor[(90), uint64]) -> (Tensor[(15, 11, 11), float32], Tensor[(90), uint64], Tensor[(90), uint64], Tensor[(624), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) {
  %334 = @func_19118() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %335 = cast(%var_26210, dtype="uint64") /* ty=Tensor[(90), uint64] */;
  %336 = cast(meta[relay.Constant][11] /* ty=Tensor[(624), float32] */, dtype="float32") /* ty=Tensor[(624), float32] */;
  %337 = reshape(%335, newshape=[90]) /* ty=Tensor[(90), uint64] */;
  %338 = reshape(%336, newshape=[8, 78]) /* ty=Tensor[(8, 78), float32] */;
  %339 = @func_17394(%337, %338) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(90), uint64], Tensor[(90), uint64], Tensor[(792), float64], Tensor[(8, 78), int8], Tensor[(8, 78), uint8]) */;
  %340 = @func_15563() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %341 = @func_14324() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %342 = %334.1;
  %343 = %339.3;
  %344 = @func_21160() /* ty=Tensor[(15, 11, 11), float32] */;
  %345 = %340.0;
  %346 = %341.0;
  (%342, %343, %var_26210, meta[relay.Constant][11] /* ty=Tensor[(624), float32] */, %344, %345, %346)
}

def @func_20255() -> (Tensor[(15, 11, 11), bool], Tensor[(7, 3, 16), float64]) {
  %347 = @func_10692() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %348 = @func_6987() /* ty=(Tensor[(7, 3, 16), float32],) */;
  %349 = %348.0;
  %350 = cast(%349, dtype="float64") /* ty=Tensor[(7, 3, 16), float64] */;
  %351 = %347.0;
  %352 = cos(%350) /* ty=Tensor[(7, 3, 16), float64] */;
  (%351, %352)
}

def @func_11763() -> (Tensor[(15, 11, 11), float32],) {
  %353 = @func_5803() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %354 = %353.0;
  (%354,)
}

def @func_14879() -> (Tensor[(15, 11, 11), bool], Tensor[(6, 5, 3), uint64]) {
  %355 = @func_6148() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %356 = @func_8687() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), uint64], Tensor[(792), float64]) */;
  %357 = %355.0;
  %358 = %356.1;
  (%357, %358)
}

def @func_7089() -> (Tensor[(7, 3, 16), int8], Tensor[(6, 5, 3), float64], Tensor[(1815), bool], Tensor[(126), float64], Tensor[(320), float32], Tensor[(7, 3, 16), int8]) {
  %359 = @func_4741() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), int8]) */;
  %360 = cast(meta[relay.Constant][12] /* ty=Tensor[(1815), bool] */, dtype="bool") /* ty=Tensor[(1815), bool] */;
  %361 = cast(meta[relay.Constant][13] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
  %362 = cast(meta[relay.Constant][14] /* ty=Tensor[(320), float32] */, dtype="float32") /* ty=Tensor[(320), float32] */;
  %363 = reshape(%360, newshape=[15, 11, 11]) /* ty=Tensor[(15, 11, 11), bool] */;
  %364 = reshape(%361, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %365 = reshape(%362, newshape=[80, 4]) /* ty=Tensor[(80, 4), float32] */;
  %366 = @func_4196(%363, %364, %365) /* ty=(Tensor[(126), float64], Tensor[(80, 4), float32], Tensor[(15, 11, 11), float64], Tensor[(6, 5, 3), float64]) */;
  %367 = @func_4371() /* ty=(Tensor[(7, 3, 16), int8],) */;
  %368 = %359.1;
  %369 = %366.3;
  %370 = %367.0;
  (%368, %369, meta[relay.Constant][12] /* ty=Tensor[(1815), bool] */, meta[relay.Constant][13] /* ty=Tensor[(126), float64] */, meta[relay.Constant][14] /* ty=Tensor[(320), float32] */, %370)
}

def @func_16279(%var_16276: Tensor[(24, 26), float32]) -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(624), float32], Tensor[(24, 26), float32]) {
  %371 = cast(%var_16276, dtype="float32") /* ty=Tensor[(24, 26), float32] */;
  %372 = reshape(%371, newshape=[624]) /* ty=Tensor[(624), float32] */;
  %373 = @func_15416(%372) /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], float32, Tensor[(624), float32], Tensor[(13, 4, 13), float32], Tensor[(8, 13, 6), float64]) */;
  %374 = @func_4906() /* ty=Tensor[(15, 11, 11), float32] */;
  %375 = @func_13173() /* ty=Tensor[(15, 11, 11), float32] */;
  %376 = %373.3;
  (%374, %375, %376, %var_16276)
}

def @func_5198() -> (Tensor[(15, 11, 11), bool],) {
  %377 = @func_5103() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %378 = %377.0;
  (%378,)
}

def @func_11342() -> Tensor[(15, 11, 11), float32] {
  %379 = @func_4741() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), int8]) */;
  %379.0
}

def @func_7642() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %380 = @func_4240() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %381 = @func_6819() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %382 = %380.1;
  %383 = %381.0;
  (%382, %383)
}

def @func_10639() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) {
  %384 = @func_9375() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float32]) */;
  %385 = @func_3461() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) */;
  %386 = @func_6889() /* ty=Tensor[(15, 11, 11), float32] */;
  %387 = %384.0;
  %388 = %385.1;
  (%386, %387, %388)
}

def @func_22664() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %389 = @func_8380() /* ty=Tensor[(15, 11, 11), float32] */;
  %390 = @func_21650() /* ty=Tensor[(15, 11, 11), float32] */;
  (%389, %390)
}

def @func_24478() -> (Tensor[(15, 11, 11), float32], Tensor[(2, 14, 1), bool], int16) {
  %391 = @func_22363() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %392 = cast(meta[relay.Constant][15] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %393 = reshape(%392, newshape=[]) /* ty=int16 */;
  %394 = @func_10765(%393) /* ty=(Tensor[(2, 14, 1), bool],) */;
  %395 = %391.0;
  %396 = %394.0;
  (%395, %396, meta[relay.Constant][15] /* ty=int16 */)
}

def @func_643(%var_602: Tensor[(8, 11, 9), float64]) -> (Tensor[(8, 11, 9), int8], Tensor[(6, 5, 3), float64], Tensor[(90), uint64], Tensor[(6, 5, 3), uint64]) {
  %397 = cast(-4.29771f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %398 = cast(%var_602, dtype="float64") /* ty=Tensor[(8, 11, 9), float64] */;
  %399 = power(%397, %398) /* ty=Tensor[(8, 11, 9), float64] */;
  %400 = cast(-4.29771f64 /* ty=float64 */, dtype="int8") /* ty=int8 */;
  %401 = cast(%399, dtype="int8") /* ty=Tensor[(8, 11, 9), int8] */;
  %402 = cast(meta[relay.Constant][16] /* ty=Tensor[(90), uint64] */, dtype="uint64") /* ty=Tensor[(90), uint64] */;
  %403 = cast(meta[relay.Constant][16] /* ty=Tensor[(90), uint64] */, dtype="uint64") /* ty=Tensor[(90), uint64] */;
  %404 = reshape(%402, newshape=[6, 5, 3]) /* ty=Tensor[(6, 5, 3), uint64] */;
  %405 = reshape(%403, newshape=[6, 5, 3]) /* ty=Tensor[(6, 5, 3), uint64] */;
  %406 = @func_237(%404, %405) /* ty=(Tensor[(6, 5, 3), uint64], Tensor[(6, 5, 3), float64], Tensor[(6, 5, 3), float64]) */;
  %407 = cast(meta[relay.Constant][16] /* ty=Tensor[(90), uint64] */, dtype="uint64") /* ty=Tensor[(90), uint64] */;
  %408 = %406.2;
  %409 = cast(%408, dtype="uint64") /* ty=Tensor[(6, 5, 3), uint64] */;
  %410 = reshape(%407, newshape=[6, 5, 3]) /* ty=Tensor[(6, 5, 3), uint64] */;
  %411 = reshape(%409, newshape=[6, 5, 3]) /* ty=Tensor[(6, 5, 3), uint64] */;
  %412 = @func_237(%410, %411) /* ty=(Tensor[(6, 5, 3), uint64], Tensor[(6, 5, 3), float64], Tensor[(6, 5, 3), float64]) */;
  %413 = bitwise_or(%400, %401) /* ty=Tensor[(8, 11, 9), int8] */;
  %414 = %412.0;
  (%413, %408, meta[relay.Constant][16] /* ty=Tensor[(90), uint64] */, %414)
}

def @func_10765(%var_10759: int16) -> (Tensor[(2, 14, 1), bool],) {
  %415 = cast(%var_10759, dtype="bool") /* ty=bool */;
  %416 = cast(meta[relay.Constant][17] /* ty=Tensor[(2, 14, 1), int16] */, dtype="bool") /* ty=Tensor[(2, 14, 1), bool] */;
  %417 = less(%415, %416) /* ty=Tensor[(2, 14, 1), bool] */;
  (%417,)
}

def @func_19054() -> Tensor[(15, 11, 11), float64] {
  %418 = @func_14791() /* ty=(Tensor[(126), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float64]) */;
  %418.2
}

def @func_4461(%var_4411: Tensor[(15, 11, 11), float32], %var_4448: Tensor[(126), float64]) -> (Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(126), float64], Tensor[(7, 3, 16), int8]) {
  %419 = @func_2995() /* ty=Tensor[(15, 11, 11), float32] */;
  %420 = cast(%var_4411, dtype="float64") /* ty=Tensor[(15, 11, 11), float64] */;
  %421 = shape_of(%419, dtype="int32") /* ty=Tensor[(3), int32] */;
  %422 = cast(%419, dtype="float64") /* ty=Tensor[(15, 11, 11), float64] */;
  %423 = dyn.reshape(%420, %421, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %424 = @func_3461() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) */;
  %425 = cast(%var_4411, dtype="float32") /* ty=Tensor[(15, 11, 11), float32] */;
  %426 = cast(%var_4448, dtype="float64") /* ty=Tensor[(126), float64] */;
  %427 = reshape(%426, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %428 = @func_3564(%427) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(8, 11, 9), int8], Tensor[(126), float64], Tensor[(792), float64]) */;
  %429 = @func_4371() /* ty=(Tensor[(7, 3, 16), int8],) */;
  %430 = divide(%422, %423) /* ty=Tensor[(15, 11, 11), float64] */;
  %431 = @func_2978() /* ty=Tensor[(15, 11, 11), float32] */;
  %432 = %424.1;
  %433 = acos(%425) /* ty=Tensor[(15, 11, 11), float32] */;
  %434 = %428.0;
  %435 = %429.0;
  (%430, %431, %432, %433, %434, %var_4448, %435)
}

def @func_12969() -> (Tensor[(126), float64], Tensor[(15, 11, 11), float32]) {
  %436 = @func_7089() /* ty=(Tensor[(7, 3, 16), int8], Tensor[(6, 5, 3), float64], Tensor[(1815), bool], Tensor[(126), float64], Tensor[(320), float32], Tensor[(7, 3, 16), int8]) */;
  %437 = %436.3;
  %438 = @func_4906() /* ty=Tensor[(15, 11, 11), float32] */;
  (%437, %438)
}

def @func_21936(%var_21909: Tensor[(90), uint64], %var_21910: Tensor[(312, 2), float32]) -> (Tensor[(15, 11, 11), bool], Tensor[(792), float64], Tensor[(8, 78), uint8], Tensor[(90), uint64], Tensor[(312, 2), float32]) {
  %439 = @func_11777() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %440 = @func_12064() /* ty=(Tensor[(792), float64],) */;
  %441 = cast(%var_21909, dtype="uint64") /* ty=Tensor[(90), uint64] */;
  %442 = cast(%var_21910, dtype="float32") /* ty=Tensor[(312, 2), float32] */;
  %443 = reshape(%441, newshape=[90]) /* ty=Tensor[(90), uint64] */;
  %444 = reshape(%442, newshape=[8, 78]) /* ty=Tensor[(8, 78), float32] */;
  %445 = @func_17394(%443, %444) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(90), uint64], Tensor[(90), uint64], Tensor[(792), float64], Tensor[(8, 78), int8], Tensor[(8, 78), uint8]) */;
  %446 = %439.0;
  %447 = %440.0;
  %448 = %445.7;
  (%446, %447, %448, %var_21909, %var_21910)
}

def @func_20304() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %449 = @func_9487() /* ty=Tensor[(15, 11, 11), float32] */;
  %450 = @func_13616() /* ty=Tensor[(15, 11, 11), float32] */;
  (%449, %450)
}

def @func_15697() -> Tensor[(15, 11, 11), float32] {
  @func_2900() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_5148(%var_5132: Tensor[(15, 11, 11), float32]) -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) {
  %451 = @func_2978() /* ty=Tensor[(15, 11, 11), float32] */;
  %452 = cast(%var_5132, dtype="bool") /* ty=Tensor[(15, 11, 11), bool] */;
  %453 = shape_of(%451, dtype="int32") /* ty=Tensor[(3), int32] */;
  %454 = cast(%451, dtype="bool") /* ty=Tensor[(15, 11, 11), bool] */;
  %455 = dyn.reshape(%452, %453, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %456 = equal(%454, %455) /* ty=Tensor[(15, 11, 11), bool] */;
  %457 = @func_3074() /* ty=Tensor[(15, 11, 11), float32] */;
  (%456, %457)
}

def @func_18178() -> (Tensor[(15, 11, 11), float64], Tensor[(7, 3, 16), float32]) {
  %458 = @func_14791() /* ty=(Tensor[(126), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float64]) */;
  %459 = @func_8157() /* ty=(Tensor[(7, 3, 16), float32], Tensor[(1, 14, 9), float64], Tensor[(126), float64]) */;
  %460 = %458.2;
  %461 = %459.0;
  (%460, %461)
}

def @func_6442(%var_6439: Tensor[(126), float64]) -> (Tensor[(7, 3, 16), float32], Tensor[(792), float64], Tensor[(126), float64]) {
  %462 = @func_5967() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(7, 3, 16), float32], Tensor[(15, 11, 11), bool]) */;
  %463 = cast(%var_6439, dtype="float64") /* ty=Tensor[(126), float64] */;
  %464 = reshape(%463, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %465 = @func_3564(%464) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(8, 11, 9), int8], Tensor[(126), float64], Tensor[(792), float64]) */;
  %466 = %462.1;
  %467 = %465.3;
  (%466, %467, %var_6439)
}

def @func_16433() -> Tensor[(6, 5, 3), float64] {
  %468 = @func_10284() /* ty=(Tensor[(6, 5, 3), float64], Tensor[(15, 11, 11), float32]) */;
  %468.0
}

def @func_19749(%var_19737: Tensor[(8, 2, 12), float32]) -> (Tensor[(8, 2, 12), float32], Tensor[(1, 126), float64]) {
  %469 = cast(%var_19737, dtype="float32") /* ty=Tensor[(8, 2, 12), float32] */;
  %470 = log2(%469) /* ty=Tensor[(8, 2, 12), float32] */;
  %471 = @func_5073() /* ty=Tensor[(1, 126), float64] */;
  (%470, %471)
}

def @func_19881() -> Tensor[(6, 5, 3), float64] {
  %472 = @func_13210() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64]) */;
  %473 = %472.1;
  %474 = cast(%473, dtype="float64") /* ty=Tensor[(6, 5, 3), float64] */;
  cosh(%474) /* ty=Tensor[(6, 5, 3), float64] */
}

def @func_26175(%var_26136: Tensor[(182), uint8]) -> (Tensor[(15, 11, 11), float32], Tensor[(320), float32], Tensor[(182), uint8], Tensor[(1820), uint8], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %475 = cast(%var_26136, dtype="uint8") /* ty=Tensor[(182), uint8] */;
  %476 = cast(meta[relay.Constant][18] /* ty=Tensor[(1820), uint8] */, dtype="uint8") /* ty=Tensor[(1820), uint8] */;
  %477 = reshape(%475, newshape=[13, 1, 14]) /* ty=Tensor[(13, 1, 14), uint8] */;
  %478 = reshape(%476, newshape=[13, 10, 14]) /* ty=Tensor[(13, 10, 14), uint8] */;
  %479 = @func_20976(%477, %478) /* ty=(Tensor[(13, 10, 14), uint8], Tensor[(320), float32]) */;
  %480 = @func_11839() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %481 = @func_15176() /* ty=Tensor[(15, 11, 11), float32] */;
  %482 = %479.1;
  %483 = @func_25129() /* ty=Tensor[(15, 11, 11), float32] */;
  %484 = %480.0;
  (%481, %482, %var_26136, meta[relay.Constant][18] /* ty=Tensor[(1820), uint8] */, %483, %484)
}

def @func_10054(%var_10043: Tensor[(126), float64]) -> (Tensor[(15, 11, 11), bool], Tensor[(6, 5, 3), float64], Tensor[(90), uint64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(1, 14, 9), float64], Tensor[(126), float64]) {
  %485 = cast(meta[relay.Constant][19] /* ty=Tensor[(90), uint64] */, dtype="uint64") /* ty=Tensor[(90), uint64] */;
  %486 = cast(meta[relay.Constant][19] /* ty=Tensor[(90), uint64] */, dtype="uint64") /* ty=Tensor[(90), uint64] */;
  %487 = reshape(%485, newshape=[6, 5, 3]) /* ty=Tensor[(6, 5, 3), uint64] */;
  %488 = reshape(%486, newshape=[6, 5, 3]) /* ty=Tensor[(6, 5, 3), uint64] */;
  %489 = @func_237(%487, %488) /* ty=(Tensor[(6, 5, 3), uint64], Tensor[(6, 5, 3), float64], Tensor[(6, 5, 3), float64]) */;
  %490 = @func_4124() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %491 = cast(meta[relay.Constant][19] /* ty=Tensor[(90), uint64] */, dtype="uint64") /* ty=Tensor[(90), uint64] */;
  %492 = %489.1;
  %493 = cast(%492, dtype="uint64") /* ty=Tensor[(6, 5, 3), uint64] */;
  %494 = reshape(%491, newshape=[6, 5, 3]) /* ty=Tensor[(6, 5, 3), uint64] */;
  %495 = reshape(%493, newshape=[6, 5, 3]) /* ty=Tensor[(6, 5, 3), uint64] */;
  %496 = @func_237(%494, %495) /* ty=(Tensor[(6, 5, 3), uint64], Tensor[(6, 5, 3), float64], Tensor[(6, 5, 3), float64]) */;
  %497 = cast(%var_10043, dtype="float64") /* ty=Tensor[(126), float64] */;
  %498 = reshape(%497, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %499 = @func_4266(%498) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(1, 14, 9), float64], Tensor[(126), float64], Tensor[(792), float64]) */;
  %500 = @func_7570() /* ty=Tensor[(15, 11, 11), bool] */;
  %501 = %490.0;
  %502 = @func_2995() /* ty=Tensor[(15, 11, 11), float32] */;
  %503 = %496.1;
  %504 = %499.1;
  (%500, %492, meta[relay.Constant][19] /* ty=Tensor[(90), uint64] */, %501, %502, %503, %504, %var_10043)
}

def @func_9213() -> (Tensor[(90), uint64], Tensor[(15, 11, 11), float32]) {
  %505 = @func_3748() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(792), float64], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(90), uint64]) */;
  %506 = %505.5;
  %507 = @func_5860() /* ty=Tensor[(15, 11, 11), float32] */;
  (%506, %507)
}

def @func_22607() -> Tensor[(15, 11, 11), float32] {
  %508 = @func_14974() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float32]) */;
  %508.2
}

def @func_17189() -> (Tensor[(15, 11, 11), bool], Tensor[(16, 5, 4), float64]) {
  %509 = @func_5691() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %510 = @func_4607() /* ty=(Tensor[(7, 3, 16), int8], Tensor[(15, 11, 11), float32], Tensor[(1, 126), float64], Tensor[(7, 3, 16), int8], Tensor[(16, 5, 4), float32], Tensor[(320), float32]) */;
  %511 = %510.4;
  %512 = cast(%511, dtype="float64") /* ty=Tensor[(16, 5, 4), float64] */;
  %513 = %509.0;
  %514 = acosh(%512) /* ty=Tensor[(16, 5, 4), float64] */;
  (%513, %514)
}

def @func_10360() -> (Tensor[(15, 11, 11), float32],) {
  %515 = @func_9487() /* ty=Tensor[(15, 11, 11), float32] */;
  (%515,)
}

def @func_24245() -> (Tensor[(15, 11, 11), float32],) {
  %516 = @func_21160() /* ty=Tensor[(15, 11, 11), float32] */;
  (%516,)
}

def @func_17934() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) {
  %517 = @func_5931() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) */;
  %518 = @func_13173() /* ty=Tensor[(15, 11, 11), float32] */;
  %519 = %517.0;
  (%518, %519)
}

def @func_13880() -> (Tensor[(15, 11, 11), float32],) {
  %520 = @func_13592() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(7, 3, 16), float64], Tensor[(6, 5, 3), float32], Tensor[(792), float64]) */;
  %521 = %520.0;
  (%521,)
}

def @func_16188(%var_16183: Tensor[(126), float64]) -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(126), float64], Tensor[(15, 11, 11), bool]) {
  %522 = @func_11256() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %523 = @func_7756() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %524 = cast(%var_16183, dtype="float64") /* ty=Tensor[(126), float64] */;
  %525 = reshape(%524, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %526 = @func_10875(%525) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(90), uint64], Tensor[(15, 11, 11), bool], Tensor[(126), float64]) */;
  %527 = @func_15264() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool]) */;
  %528 = %522.1;
  %529 = %523.0;
  %530 = %526.0;
  %531 = %527.1;
  (%528, %529, %530, %var_16183, %531)
}

def @func_5349() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %532 = @func_4741() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), int8]) */;
  %533 = %532.0;
  %534 = cast(%533, dtype="float32") /* ty=Tensor[(15, 11, 11), float32] */;
  %535 = atan(%534) /* ty=Tensor[(15, 11, 11), float32] */;
  %536 = cast(%535, dtype="float32") /* ty=Tensor[(15, 11, 11), float32] */;
  %537 = reshape(%536, newshape=[15, 11, 11]) /* ty=Tensor[(15, 11, 11), float32] */;
  %538 = @func_5148(%537) /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) */;
  %539 = %538.1;
  %540 = @func_4906() /* ty=Tensor[(15, 11, 11), float32] */;
  %541 = @func_3074() /* ty=Tensor[(15, 11, 11), float32] */;
  (%535, %539, %540, %541)
}

def @func_6889() -> Tensor[(15, 11, 11), float32] {
  @func_5860() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_18715(%var_18694: int16) -> (Tensor[(15, 11, 11), float32], Tensor[(2, 14, 1), bool], int16, Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) {
  %542 = @func_15502() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) */;
  %543 = cast(%var_18694, dtype="int16") /* ty=int16 */;
  %544 = reshape(%543, newshape=[]) /* ty=int16 */;
  %545 = @func_10765(%544) /* ty=(Tensor[(2, 14, 1), bool],) */;
  %546 = @func_14324() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %547 = @func_5198() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %548 = %542.1;
  %549 = %545.0;
  %550 = %546.0;
  %551 = %547.0;
  (%548, %549, %var_18694, %550, %551)
}

def @func_6635() -> (Tensor[(15, 11, 11), float32],) {
  %552 = @func_5349() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %553 = %552.3;
  (%553,)
}

def @func_5483(%var_5464: Tensor[(6, 5, 3), bool], %var_5475: Tensor[(126), float64]) -> (Tensor[(6, 5, 3), bool], Tensor[(15, 11, 11), float32], Tensor[(80, 4), float32], Tensor[(126), float64], Tensor[(320), float32], Tensor[(15, 11, 11), float32]) {
  %554 = @func_3748() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(792), float64], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(90), uint64]) */;
  %555 = %554.1;
  %556 = cast(meta[relay.Constant][20] /* ty=Tensor[(6, 5, 3), float64] */, dtype="bool") /* ty=Tensor[(6, 5, 3), bool] */;
  %557 = shape_of(%555, dtype="int32") /* ty=Tensor[(3), int32] */;
  %558 = cast(%555, dtype="bool") /* ty=Tensor[(6, 5, 3), bool] */;
  %559 = dyn.reshape(%556, %557, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %560 = greater(%558, %559) /* ty=Tensor[(6, 5, 3), bool] */;
  %561 = cast(%var_5464, dtype="bool") /* ty=Tensor[(6, 5, 3), bool] */;
  %562 = shape_of(%560, dtype="int32") /* ty=Tensor[(3), int32] */;
  %563 = cast(%560, dtype="bool") /* ty=Tensor[(6, 5, 3), bool] */;
  %564 = dyn.reshape(%561, %562, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %565 = @func_2995() /* ty=Tensor[(15, 11, 11), float32] */;
  %566 = cast(%565, dtype="bool") /* ty=Tensor[(15, 11, 11), bool] */;
  %567 = cast(%var_5475, dtype="float64") /* ty=Tensor[(126), float64] */;
  %568 = cast(meta[relay.Constant][21] /* ty=Tensor[(320), float32] */, dtype="float32") /* ty=Tensor[(320), float32] */;
  %569 = reshape(%566, newshape=[15, 11, 11]) /* ty=Tensor[(15, 11, 11), bool] */;
  %570 = reshape(%567, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %571 = reshape(%568, newshape=[80, 4]) /* ty=Tensor[(80, 4), float32] */;
  %572 = @func_4196(%569, %570, %571) /* ty=(Tensor[(126), float64], Tensor[(80, 4), float32], Tensor[(15, 11, 11), float64], Tensor[(6, 5, 3), float64]) */;
  %573 = not_equal(%563, %564) /* ty=Tensor[(6, 5, 3), bool] */;
  %574 = %572.1;
  %575 = @func_3074() /* ty=Tensor[(15, 11, 11), float32] */;
  (%573, %565, %574, %var_5475, meta[relay.Constant][21] /* ty=Tensor[(320), float32] */, %575)
}

def @func_20138() -> Tensor[(15, 11, 11), float32] {
  @func_8380() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_3780() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %576 = @func_2900() /* ty=Tensor[(15, 11, 11), float32] */;
  %577 = @func_2978() /* ty=Tensor[(15, 11, 11), float32] */;
  (%576, %577)
}

def @func_16246() -> (Tensor[(15, 11, 11), float32],) {
  %578 = @func_15176() /* ty=Tensor[(15, 11, 11), float32] */;
  (%578,)
}

def @func_18262() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %579 = @func_3780() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %580 = @func_13045() /* ty=Tensor[(15, 11, 11), float32] */;
  %581 = %579.0;
  (%580, %581)
}

def @func_24913() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) {
  %582 = @func_9143() /* ty=(Tensor[(7, 3, 16), float32], Tensor[(792), float64], Tensor[(126), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %583 = @func_15894() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %584 = %582.5;
  %585 = %583.0;
  (%584, %585)
}

def @func_4949() -> (Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), uint64], Tensor[(792), float64]) {
  %586 = @func_4607() /* ty=(Tensor[(7, 3, 16), int8], Tensor[(15, 11, 11), float32], Tensor[(1, 126), float64], Tensor[(7, 3, 16), int8], Tensor[(16, 5, 4), float32], Tensor[(320), float32]) */;
  %587 = cast(meta[relay.Constant][22] /* ty=Tensor[(792), float64] */, dtype="float64") /* ty=Tensor[(792), float64] */;
  %588 = reshape(%587, newshape=[8, 11, 9]) /* ty=Tensor[(8, 11, 9), float64] */;
  %589 = @func_643(%588) /* ty=(Tensor[(8, 11, 9), int8], Tensor[(6, 5, 3), float64], Tensor[(90), uint64], Tensor[(6, 5, 3), uint64]) */;
  %590 = %586.1;
  %591 = %589.3;
  (%590, %591, meta[relay.Constant][22] /* ty=Tensor[(792), float64] */)
}

def @func_26019(%var_26012: Tensor[(8, 126), int8]) -> (Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(8, 126), uint16], Tensor[(8, 126), bool]) {
  %592 = @func_11763() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %593 = @func_18951() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) */;
  %594 = @func_18326() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %595 = cast(meta[relay.Constant][23] /* ty=Tensor[(1008), float64] */, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %596 = reshape(%595, newshape=[8, 126]) /* ty=Tensor[(8, 126), float64] */;
  %597 = @func_7128(%596) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(8, 126), int8]) */;
  %598 = %597.1;
  %599 = cast(meta[relay.Constant][23] /* ty=Tensor[(1008), float64] */, dtype="uint16") /* ty=Tensor[(1008), uint16] */;
  %600 = shape_of(%598, dtype="int32") /* ty=Tensor[(2), int32] */;
  %601 = cast(%598, dtype="uint16") /* ty=Tensor[(8, 126), uint16] */;
  %602 = dyn.reshape(%599, %600, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %603 = cast(%var_26012, dtype="bool") /* ty=Tensor[(8, 126), bool] */;
  %604 = shape_of(%598, dtype="int32") /* ty=Tensor[(2), int32] */;
  %605 = cast(%598, dtype="bool") /* ty=Tensor[(8, 126), bool] */;
  %606 = dyn.reshape(%603, %604, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %607 = %592.0;
  %608 = @func_19881() /* ty=Tensor[(6, 5, 3), float64] */;
  %609 = %593.3;
  %610 = %594.0;
  %611 = minimum(%601, %602) /* ty=Tensor[(8, 126), uint16] */;
  %612 = greater(%605, %606) /* ty=Tensor[(8, 126), bool] */;
  (%607, %608, %609, %610, %611, %612)
}

def @func_17213() -> Tensor[(15, 11, 11), bool] {
  %613 = @func_10692() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %613.0
}

def @func_2900() -> Tensor[(15, 11, 11), float32] {
  %614 = cast(meta[relay.Constant][24] /* ty=Tensor[(15, 11, 11), float32] */, dtype="float32") /* ty=Tensor[(15, 11, 11), float32] */;
  acosh(%614) /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_22311() -> Tensor[(7, 3, 16), float32] {
  %615 = @func_14196() /* ty=(Tensor[(7, 3, 16), float32],) */;
  %615.0
}

def @func_24223() -> Tensor[(126), float64] {
  @func_24186() /* ty=Tensor[(126), float64] */
}

def @func_7386() -> (Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float64]) {
  %616 = @func_3074() /* ty=Tensor[(15, 11, 11), float32] */;
  %617 = @func_6128() /* ty=Tensor[(7, 3, 16), float64] */;
  (%616, %617)
}

def @func_2694(%var_2682: Tensor[(7, 5, 1), float64], %var_2683: Tensor[(7, 5, 1), float64]) -> (Tensor[(7, 5, ?), bool],) {
  %618 = cast(%var_2683, dtype="bool") /* ty=Tensor[(7, 5, 1), bool] */;
  %619 = shape_of(%var_2682, dtype="int32") /* ty=Tensor[(3), int32] */;
  %620 = cast(%var_2682, dtype="bool") /* ty=Tensor[(7, 5, 1), bool] */;
  %621 = dyn.reshape(%618, %619, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %622 = not_equal(%620, %621) /* ty=Tensor[(7, 5, ?), bool] */;
  (%622,)
}

def @func_13294(%var_13267: Tensor[(126), float64]) -> (Tensor[(15, 11, 11), bool], Tensor[(126), float64], Tensor[(126), float64], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool]) {
  %623 = @func_6148() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %624 = cast(%var_13267, dtype="float64") /* ty=Tensor[(126), float64] */;
  %625 = reshape(%624, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %626 = @func_5555(%625) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(126), float64], Tensor[(320), float32], Tensor[(80, 4), float64]) */;
  %627 = @func_9874() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) */;
  %628 = %623.0;
  %629 = %626.2;
  %630 = %627.1;
  %631 = @func_10085() /* ty=Tensor[(15, 11, 11), bool] */;
  (%628, %629, %var_13267, %630, %631)
}

def @func_12895() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(30), float32]) {
  %632 = @func_7642() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %633 = cast(meta[relay.Constant][25] /* ty=Tensor[(30), float32] */, dtype="float32") /* ty=Tensor[(30), float32] */;
  %634 = reshape(%633, newshape=[30]) /* ty=Tensor[(30), float32] */;
  %635 = @func_9250(%634) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(2, ?, 15), bool]) */;
  %636 = %632.1;
  %637 = %635.0;
  (%636, %637, meta[relay.Constant][25] /* ty=Tensor[(30), float32] */)
}

def @func_25878() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %638 = @func_22464() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %639 = @func_16246() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %640 = %638.0;
  %641 = %639.0;
  (%640, %641)
}

def @func_12398() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %642 = @func_11306() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %643 = @func_11342() /* ty=Tensor[(15, 11, 11), float32] */;
  %644 = %642.0;
  (%643, %644)
}

def @func_13592() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(7, 3, 16), float64], Tensor[(6, 5, 3), float32], Tensor[(792), float64]) {
  %645 = @func_10360() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %646 = @func_3322() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %647 = @func_7386() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float64]) */;
  %648 = @func_10284() /* ty=(Tensor[(6, 5, 3), float64], Tensor[(15, 11, 11), float32]) */;
  %649 = %648.0;
  %650 = cast(%649, dtype="float32") /* ty=Tensor[(6, 5, 3), float32] */;
  %651 = asin(%650) /* ty=Tensor[(6, 5, 3), float32] */;
  %652 = cast(%651, dtype="float32") /* ty=Tensor[(6, 5, 3), float32] */;
  %653 = @func_6090() /* ty=(Tensor[(792), float64],) */;
  %654 = %645.0;
  %655 = %646.0;
  %656 = %647.1;
  %657 = exp(%652) /* ty=Tensor[(6, 5, 3), float32] */;
  %658 = %653.0;
  (%654, %655, %656, %657, %658)
}

def @func_20188() -> (Tensor[(15, 11, 11), float32],) {
  %659 = @func_16689() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(90), uint64], Tensor[(15, 11, 11), float32]) */;
  %660 = %659.2;
  (%660,)
}

def @func_21037() -> (Tensor[(15, 11, 11), bool],) {
  %661 = @func_12522() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %662 = %661.0;
  (%662,)
}

def @func_25191() -> Tensor[(15, 11, 11), bool] {
  %663 = @func_5103() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %663.0
}

def @func_16515() -> (Tensor[(15, 11, 11), bool], Tensor[(2, 1, 15), float32], Tensor[(30), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float64], Tensor[(15, 11, 11), bool]) {
  %664 = @func_5967() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(7, 3, 16), float32], Tensor[(15, 11, 11), bool]) */;
  %665 = cast(meta[relay.Constant][26] /* ty=Tensor[(30), float32] */, dtype="float32") /* ty=Tensor[(30), float32] */;
  %666 = reshape(%665, newshape=[2, 1, 15]) /* ty=Tensor[(2, 1, 15), float32] */;
  %667 = @func_5803() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %668 = @func_7501() /* ty=(Tensor[(7, 3, 16), float64], Tensor[(7, 3, 16), int8], Tensor[(15, 11, 11), float32], Tensor[(8, 126), int8], Tensor[(504, 2), float64]) */;
  %669 = @func_15880() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %670 = %664.0;
  %671 = @func_5670(%666) /* ty=Tensor[(2, 1, 15), float32] */;
  %672 = @func_7214() /* ty=Tensor[(15, 11, 11), float32] */;
  %673 = %667.0;
  %674 = %668.0;
  %675 = %669.0;
  (%670, %671, meta[relay.Constant][26] /* ty=Tensor[(30), float32] */, %672, %673, %674, %675)
}

def @func_13173() -> Tensor[(15, 11, 11), float32] {
  %676 = @func_8268() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %676.0
}

def @func_10486() -> Tensor[(15, 11, 11), float32] {
  %677 = @func_9375() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float32]) */;
  %677.0
}

def @func_18229() -> (Tensor[(15, 11, 11), float32],) {
  %678 = @func_17531() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %679 = %678.0;
  (%679,)
}

def @func_16993() -> Tensor[(15, 11, 11), float32] {
  %680 = @func_14187() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(1008), float64], Tensor[(7, 3, 16), float32]) */;
  %680.1
}

def @func_13210() -> (Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64]) {
  %681 = @func_11256() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %682 = %681.1;
  %683 = @func_8752() /* ty=Tensor[(6, 5, 3), float64] */;
  (%682, %683)
}

def @func_7683(%var_7675: Tensor[(1, 126), float64], %var_7676: Tensor[(792), float64]) -> (Tensor[(7, 3, 16), float64], Tensor[(1, 14, 9), float64], Tensor[(1, 126), float64], Tensor[(792), float64]) {
  %684 = @func_7501() /* ty=(Tensor[(7, 3, 16), float64], Tensor[(7, 3, 16), int8], Tensor[(15, 11, 11), float32], Tensor[(8, 126), int8], Tensor[(504, 2), float64]) */;
  %685 = %684.1;
  %686 = cast(%685, dtype="float64") /* ty=Tensor[(7, 3, 16), float64] */;
  %687 = cast(%var_7675, dtype="float64") /* ty=Tensor[(1, 126), float64] */;
  %688 = cast(%var_7676, dtype="float64") /* ty=Tensor[(792), float64] */;
  %689 = reshape(%687, newshape=[1, 14, 9]) /* ty=Tensor[(1, 14, 9), float64] */;
  %690 = reshape(%688, newshape=[792]) /* ty=Tensor[(792), float64] */;
  %691 = @func_1060(%689, %690) /* ty=(Tensor[(1, 14, 9), float64], Tensor[(8, 11, 9), int8], Tensor[(792), float64]) */;
  %692 = cosh(%686) /* ty=Tensor[(7, 3, 16), float64] */;
  %693 = %691.0;
  (%692, %693, %var_7675, %var_7676)
}

def @func_13721() -> (Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(15, 11, 11), bool], Tensor[(792), float64]) {
  %694 = @func_11306() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %695 = @func_6800() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool]) */;
  %696 = @func_6210() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(8, 11, 9), int8], Tensor[(126), float64], Tensor[(792), float64]) */;
  %697 = %694.1;
  %698 = @func_8752() /* ty=Tensor[(6, 5, 3), float64] */;
  %699 = %695.1;
  %700 = %696.3;
  (%697, %698, %699, %700)
}

def @func_3564(%var_3549: Tensor[(126), float64]) -> (Tensor[(15, 11, 11), float32], Tensor[(8, 11, 9), int8], Tensor[(126), float64], Tensor[(792), float64]) {
  %701 = @func_3160() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %702 = cast(%var_3549, dtype="float64") /* ty=Tensor[(126), float64] */;
  %703 = cast(meta[relay.Constant][27] /* ty=Tensor[(792), float64] */, dtype="float64") /* ty=Tensor[(792), float64] */;
  %704 = reshape(%702, newshape=[1, 14, 9]) /* ty=Tensor[(1, 14, 9), float64] */;
  %705 = reshape(%703, newshape=[792]) /* ty=Tensor[(792), float64] */;
  %706 = @func_1060(%704, %705) /* ty=(Tensor[(1, 14, 9), float64], Tensor[(8, 11, 9), int8], Tensor[(792), float64]) */;
  %707 = %701.0;
  %708 = %706.1;
  (%707, %708, %var_3549, meta[relay.Constant][27] /* ty=Tensor[(792), float64] */)
}

def @func_5026() -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float64], Tensor[(7, 3, 16), int8]) {
  %709 = @func_3322() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %710 = @func_4328() /* ty=(Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), float32]) */;
  %711 = @func_4371() /* ty=(Tensor[(7, 3, 16), int8],) */;
  %712 = %709.0;
  %713 = %710.0;
  %714 = %711.0;
  (%712, %713, %714)
}

def @func_14324() -> (Tensor[(15, 11, 11), float32],) {
  %715 = @func_6265() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %716 = %715.0;
  (%716,)
}

def @func_9809(%var_9773: Tensor[(504, 2), float64]) -> (Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(7, 3, 16), float64], Tensor[(15, 11, 11), float32], Tensor[(504, 2), float64], Tensor[(320), float32]) {
  %717 = @func_8023() /* ty=(Tensor[(7, 3, 16), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(1, 126), float64], Tensor[(11, 14, 13), float32], Tensor[(2002), float32]) */;
  %718 = cast(%var_9773, dtype="float64") /* ty=Tensor[(504, 2), float64] */;
  %719 = reshape(%718, newshape=[8, 126]) /* ty=Tensor[(8, 126), float64] */;
  %720 = @func_7128(%719) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(8, 126), int8]) */;
  %721 = @func_8427() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(320), float32]) */;
  %722 = %717.1;
  %723 = @func_8752() /* ty=Tensor[(6, 5, 3), float64] */;
  %724 = @func_6128() /* ty=Tensor[(7, 3, 16), float64] */;
  %725 = %720.0;
  %726 = %721.1;
  (%722, %723, %724, %725, %var_9773, %726)
}

def @func_6090() -> (Tensor[(792), float64],) {
  %727 = @func_4949() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), uint64], Tensor[(792), float64]) */;
  %728 = %727.2;
  (%728,)
}

def @func_7655() -> Tensor[(15, 11, 11), float32] {
  @func_7214() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_13393() -> Tensor[(15, 11, 11), float32] {
  %729 = @func_9352() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %729.0
}

def @func_3748() -> (Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(792), float64], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(90), uint64]) {
  %730 = cast(meta[relay.Constant][28] /* ty=Tensor[(792), float64] */, dtype="float64") /* ty=Tensor[(792), float64] */;
  %731 = reshape(%730, newshape=[8, 11, 9]) /* ty=Tensor[(8, 11, 9), float64] */;
  %732 = @func_643(%731) /* ty=(Tensor[(8, 11, 9), int8], Tensor[(6, 5, 3), float64], Tensor[(90), uint64], Tensor[(6, 5, 3), uint64]) */;
  %733 = @func_3322() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %734 = cast(meta[relay.Constant][28] /* ty=Tensor[(792), float64] */, dtype="float64") /* ty=Tensor[(792), float64] */;
  %735 = reshape(%734, newshape=[8, 11, 9]) /* ty=Tensor[(8, 11, 9), float64] */;
  %736 = @func_643(%735) /* ty=(Tensor[(8, 11, 9), int8], Tensor[(6, 5, 3), float64], Tensor[(90), uint64], Tensor[(6, 5, 3), uint64]) */;
  %737 = @func_2978() /* ty=Tensor[(15, 11, 11), float32] */;
  %738 = %732.1;
  %739 = %733.0;
  %740 = @func_2978() /* ty=Tensor[(15, 11, 11), float32] */;
  %741 = %736.2;
  (%737, %738, meta[relay.Constant][28] /* ty=Tensor[(792), float64] */, %739, %740, %741)
}

def @func_24686() -> (Tensor[(15, 11, 11), bool], Tensor[(792), float64]) {
  %742 = @func_20229() /* ty=(Tensor[(792), float64],) */;
  %743 = @func_7570() /* ty=Tensor[(15, 11, 11), bool] */;
  %744 = %742.0;
  (%743, %744)
}

def @func_7756() -> (Tensor[(15, 11, 11), float32],) {
  %745 = @func_6265() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %746 = %745.0;
  (%746,)
}

def @func_14720() -> Tensor[(15, 11, 11), float32] {
  %747 = @func_10446() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %747.1
}

def @func_14791() -> (Tensor[(126), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float64]) {
  %748 = @func_12969() /* ty=(Tensor[(126), float64], Tensor[(15, 11, 11), float32]) */;
  %749 = @func_5438() /* ty=(Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), float64]) */;
  %750 = %748.0;
  %751 = @func_8070() /* ty=Tensor[(15, 11, 11), float32] */;
  %752 = %749.1;
  (%750, %751, %752)
}

def @func_21732() -> (Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), uint64]) {
  %753 = @func_13787() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %754 = @func_14879() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(6, 5, 3), uint64]) */;
  %755 = %753.0;
  %756 = %754.1;
  (%755, %756)
}

def @func_24349() -> (Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), int8], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %757 = @func_4607() /* ty=(Tensor[(7, 3, 16), int8], Tensor[(15, 11, 11), float32], Tensor[(1, 126), float64], Tensor[(7, 3, 16), int8], Tensor[(16, 5, 4), float32], Tensor[(320), float32]) */;
  %758 = @func_7614() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %759 = @func_13616() /* ty=Tensor[(15, 11, 11), float32] */;
  %760 = %757.3;
  %761 = @func_9593() /* ty=Tensor[(15, 11, 11), bool] */;
  %762 = %758.0;
  %763 = @func_20138() /* ty=Tensor[(15, 11, 11), float32] */;
  (%759, %760, %761, %762, %763)
}

def @func_7898() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %764 = @func_7744() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %765 = @func_4240() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %766 = %764.1;
  %767 = @func_5860() /* ty=Tensor[(15, 11, 11), float32] */;
  %768 = %765.0;
  (%766, %767, %768)
}

def @func_11558() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) {
  %769 = @func_11256() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %770 = @func_10692() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %771 = @func_3665() /* ty=Tensor[(15, 11, 11), float32] */;
  %772 = %769.1;
  %773 = %770.0;
  (%771, %772, %773)
}

def @func_25392() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(792), float64], Tensor[(15, 11, 11), bool]) {
  %774 = @func_25091() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %775 = @func_18262() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %776 = @func_12064() /* ty=(Tensor[(792), float64],) */;
  %777 = @func_10692() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %778 = %774.0;
  %779 = %775.0;
  %780 = %776.0;
  %781 = %777.0;
  (%778, %779, %780, %781)
}

def @func_16689() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(90), uint64], Tensor[(15, 11, 11), float32]) {
  %782 = @func_11467() /* ty=(Tensor[(320), float32], Tensor[(15, 11, 11), float32]) */;
  %783 = @func_11839() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %784 = @func_12594() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) */;
  %785 = @func_7642() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %786 = @func_14001() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(90), uint64], Tensor[(15, 11, 11), float64]) */;
  %787 = @func_12895() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(30), float32]) */;
  %788 = %782.1;
  %789 = %783.0;
  %790 = %784.0;
  %791 = %785.0;
  %792 = %786.1;
  %793 = %787.0;
  (%788, %789, %790, %791, %792, %793)
}

def @func_15054() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float64]) {
  %794 = @func_8171() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %795 = %794.0;
  %796 = @func_2995() /* ty=Tensor[(15, 11, 11), float32] */;
  %797 = @func_6128() /* ty=Tensor[(7, 3, 16), float64] */;
  (%795, %796, %797)
}

def @func_21294() -> Tensor[(7, 3, 16), float32] {
  %798 = @func_9375() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float32]) */;
  %798.1
}

def @func_13832() -> (Tensor[(15, 11, 11), float32],) {
  %799 = @func_4906() /* ty=Tensor[(15, 11, 11), float32] */;
  (%799,)
}

def @func_3379(%var_3370: Tensor[(15, 11, 11), float32]) -> Tensor[(15, 11, 11), bool] {
  %800 = @func_2900() /* ty=Tensor[(15, 11, 11), float32] */;
  %801 = cast(%var_3370, dtype="bool") /* ty=Tensor[(15, 11, 11), bool] */;
  %802 = shape_of(%800, dtype="int32") /* ty=Tensor[(3), int32] */;
  %803 = cast(%800, dtype="bool") /* ty=Tensor[(15, 11, 11), bool] */;
  %804 = dyn.reshape(%801, %802, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%803, %804) /* ty=Tensor[(15, 11, 11), bool] */
}

def @func_15264() -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool]) {
  %805 = @func_7917() /* ty=Tensor[(15, 11, 11), bool] */;
  %806 = @func_10085() /* ty=Tensor[(15, 11, 11), bool] */;
  (%805, %806)
}

def @func_4906() -> Tensor[(15, 11, 11), float32] {
  %807 = @func_3748() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(792), float64], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(90), uint64]) */;
  %807.4
}

def @func_14119(%var_14110: Tensor[(5, 13, 7), int16]) -> (Tensor[(5, 13, 7), int16],) {
  %808 = cast(%var_14110, dtype="int16") /* ty=Tensor[(5, 13, 7), int16] */;
  %809 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(5, 13, 7), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %810 = cast(meta[relay.Constant][29] /* ty=Tensor[(5, 13, 7), int16] */, dtype="int16") /* ty=Tensor[(5, 13, 7), int16] */;
  %811 = dyn.reshape(%808, %809, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %812 = add(%810, %811) /* ty=Tensor[(5, 13, 7), int16] */;
  (%812,)
}

def @func_15880() -> (Tensor[(15, 11, 11), bool],) {
  %813 = @func_8305() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) */;
  %814 = %813.0;
  (%814,)
}

def @func_25805() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %815 = @func_15986() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %816 = %815.0;
  %817 = @func_8070() /* ty=Tensor[(15, 11, 11), float32] */;
  (%816, %817)
}

def @func_15894() -> (Tensor[(15, 11, 11), bool],) {
  %818 = @func_3322() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %819 = %818.0;
  (%819,)
}

def @func_22631() -> (Tensor[(15, 11, 11), float64],) {
  %820 = @func_16050() /* ty=(Tensor[(15, 11, 11), float64], Tensor[(2, 7, 14), uint8], uint8, Tensor[(196, 1), uint8]) */;
  %821 = %820.0;
  (%821,)
}

def @func_6589() -> (Tensor[(1, 126), float64],) {
  %822 = @func_4607() /* ty=(Tensor[(7, 3, 16), int8], Tensor[(15, 11, 11), float32], Tensor[(1, 126), float64], Tensor[(7, 3, 16), int8], Tensor[(16, 5, 4), float32], Tensor[(320), float32]) */;
  %823 = %822.2;
  (%823,)
}

def @func_23891() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %824 = @func_14811() /* ty=(Tensor[(792), float64], Tensor[(15, 11, 11), float32]) */;
  %825 = @func_3665() /* ty=Tensor[(15, 11, 11), float32] */;
  %826 = @func_2995() /* ty=Tensor[(15, 11, 11), float32] */;
  %827 = %824.1;
  (%825, %826, %827)
}

def @func_7128(%var_7113: Tensor[(8, 126), float64]) -> (Tensor[(15, 11, 11), float32], Tensor[(8, 126), int8]) {
  %828 = @func_6819() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %829 = @func_5073() /* ty=Tensor[(1, 126), float64] */;
  %830 = cast(%829, dtype="uint32") /* ty=Tensor[(1, 126), uint32] */;
  %831 = cast(%var_7113, dtype="uint32") /* ty=Tensor[(8, 126), uint32] */;
  %832 = left_shift(%830, %831) /* ty=Tensor[(8, 126), uint32] */;
  %833 = cast(%832, dtype="int8") /* ty=Tensor[(8, 126), int8] */;
  %834 = cast(%829, dtype="int8") /* ty=Tensor[(1, 126), int8] */;
  %835 = %828.0;
  %836 = maximum(%833, %834) /* ty=Tensor[(8, 126), int8] */;
  (%835, %836)
}

def @func_22363() -> (Tensor[(15, 11, 11), float32],) {
  %837 = @func_18478() /* ty=Tensor[(15, 11, 11), float32] */;
  (%837,)
}

def @func_7544(%var_7531: float32, %var_7532: Tensor[(8, 1), float32]) -> (Tensor[(8, 1), bool],) {
  %838 = cast(%var_7531, dtype="bool") /* ty=bool */;
  %839 = cast(%var_7532, dtype="bool") /* ty=Tensor[(8, 1), bool] */;
  %840 = less_equal(%838, %839) /* ty=Tensor[(8, 1), bool] */;
  (%840,)
}

def @func_22400() -> Tensor[(15, 11, 11), float32] {
  @func_22243() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_1060(%var_1048: Tensor[(1, 14, 9), float64], %var_1052: Tensor[(792), float64]) -> (Tensor[(1, 14, 9), float64], Tensor[(8, 11, 9), int8], Tensor[(792), float64]) {
  %841 = cast(%var_1048, dtype="float64") /* ty=Tensor[(1, 14, 9), float64] */;
  %842 = cast(%var_1052, dtype="float64") /* ty=Tensor[(792), float64] */;
  %843 = reshape(%842, newshape=[8, 11, 9]) /* ty=Tensor[(8, 11, 9), float64] */;
  %844 = @func_643(%843) /* ty=(Tensor[(8, 11, 9), int8], Tensor[(6, 5, 3), float64], Tensor[(90), uint64], Tensor[(6, 5, 3), uint64]) */;
  %845 = asin(%841) /* ty=Tensor[(1, 14, 9), float64] */;
  %846 = %844.0;
  (%845, %846, %var_1052)
}

def @func_3257(%var_3251: Tensor[(16, 5, 4), float32], %var_3252: Tensor[(16, 5, 4), float32]) -> Tensor[(16, 5, 4), float32] {
  %847 = cast(%var_3252, dtype="float32") /* ty=Tensor[(16, 5, 4), float32] */;
  %848 = shape_of(%var_3251, dtype="int32") /* ty=Tensor[(3), int32] */;
  %849 = cast(%var_3251, dtype="float32") /* ty=Tensor[(16, 5, 4), float32] */;
  %850 = dyn.reshape(%847, %848, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  multiply(%849, %850) /* ty=Tensor[(16, 5, 4), float32] */
}

def @func_17623() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool]) {
  %851 = @func_4124() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %852 = @func_12142() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), int8]) */;
  %853 = %851.1;
  %854 = %852.0;
  %855 = @func_15834() /* ty=Tensor[(15, 11, 11), bool] */;
  %856 = @func_10085() /* ty=Tensor[(15, 11, 11), bool] */;
  (%853, %854, %855, %856)
}

def @func_5896() -> (Tensor[(15, 11, 11), bool],) {
  %857 = @func_5103() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %858 = %857.0;
  (%858,)
}

def @func_26376(%var_26365: Tensor[(8, 6, 8), int64], %var_26366: Tensor[(8, 6, 8), int64]) -> (Tensor[(8, 6, 8), int64], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool]) {
  %859 = cast(%var_26366, dtype="int64") /* ty=Tensor[(8, 6, 8), int64] */;
  %860 = shape_of(%var_26365, dtype="int32") /* ty=Tensor[(3), int32] */;
  %861 = cast(%var_26365, dtype="int64") /* ty=Tensor[(8, 6, 8), int64] */;
  %862 = dyn.reshape(%859, %860, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %863 = @func_22101() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), bool]) */;
  %864 = bitwise_and(%861, %862) /* ty=Tensor[(8, 6, 8), int64] */;
  %865 = @func_10085() /* ty=Tensor[(15, 11, 11), bool] */;
  %866 = %863.2;
  (%864, %865, %866)
}

def @func_4124() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %867 = @func_2995() /* ty=Tensor[(15, 11, 11), float32] */;
  %868 = @func_2978() /* ty=Tensor[(15, 11, 11), float32] */;
  (%867, %868)
}

def @func_21809() -> Tensor[(15, 11, 11), bool] {
  %869 = @func_14879() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(6, 5, 3), uint64]) */;
  %869.0
}

def @func_19917() -> (Tensor[(15, 11, 11), float32],) {
  %870 = @func_13832() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %871 = %870.0;
  (%871,)
}

def @func_22101() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), bool]) {
  %872 = @func_14324() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %873 = @func_5438() /* ty=(Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), float64]) */;
  %874 = %872.0;
  %875 = %873.1;
  %876 = @func_8857() /* ty=Tensor[(15, 11, 11), bool] */;
  (%874, %875, %876)
}

def @func_17966() -> (Tensor[(15, 11, 11), bool],) {
  %877 = @func_8857() /* ty=Tensor[(15, 11, 11), bool] */;
  (%877,)
}

def @func_21132() -> Tensor[(15, 11, 11), float32] {
  %878 = @func_11839() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %878.0
}

def @func_12029() -> (Tensor[(15, 11, 11), float32],) {
  %879 = @func_9487() /* ty=Tensor[(15, 11, 11), float32] */;
  (%879,)
}

def @func_15176() -> Tensor[(15, 11, 11), float32] {
  %880 = @func_7642() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %880.0
}

def @func_19118() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %881 = @func_11467() /* ty=(Tensor[(320), float32], Tensor[(15, 11, 11), float32]) */;
  %882 = %881.1;
  %883 = @func_13616() /* ty=Tensor[(15, 11, 11), float32] */;
  (%882, %883)
}

def @func_8510() -> (Tensor[(15, 11, 11), float32],) {
  %884 = @func_6394() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %885 = %884.1;
  (%885,)
}

def @func_13616() -> Tensor[(15, 11, 11), float32] {
  %886 = @func_6394() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %886.0
}

def @func_14187() -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(1008), float64], Tensor[(7, 3, 16), float32]) {
  %887 = @func_9296() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %888 = cast(meta[relay.Constant][30] /* ty=Tensor[(1008), float64] */, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %889 = reshape(%888, newshape=[8, 126]) /* ty=Tensor[(8, 126), float64] */;
  %890 = @func_7128(%889) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(8, 126), int8]) */;
  %891 = @func_6128() /* ty=Tensor[(7, 3, 16), float64] */;
  %892 = cast(%891, dtype="float32") /* ty=Tensor[(7, 3, 16), float32] */;
  %893 = %887.0;
  %894 = %890.0;
  %895 = atanh(%892) /* ty=Tensor[(7, 3, 16), float32] */;
  (%893, %894, meta[relay.Constant][30] /* ty=Tensor[(1008), float64] */, %895)
}

def @func_15932() -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool]) {
  %896 = @func_12017() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) */;
  %897 = %896.0;
  %898 = @func_7917() /* ty=Tensor[(15, 11, 11), bool] */;
  (%897, %898)
}

def @func_14056() -> Tensor[(15, 11, 11), float32] {
  %899 = @func_11256() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %899.1
}

def @func_21376() -> (Tensor[(15, 11, 11), float32],) {
  %900 = @func_13393() /* ty=Tensor[(15, 11, 11), float32] */;
  (%900,)
}

def @func_237(%var_192: Tensor[(6, 5, 3), uint64], %var_220: Tensor[(6, 5, 3), uint64]) -> (Tensor[(6, 5, 3), uint64], Tensor[(6, 5, 3), float64], Tensor[(6, 5, 3), float64]) {
  %901 = cast(meta[relay.Constant][31] /* ty=Tensor[(6, 5, 3), uint64] */, dtype="uint64") /* ty=Tensor[(6, 5, 3), uint64] */;
  %902 = shape_of(%var_192, dtype="int32") /* ty=Tensor[(3), int32] */;
  %903 = cast(%var_192, dtype="uint64") /* ty=Tensor[(6, 5, 3), uint64] */;
  %904 = dyn.reshape(%901, %902, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %905 = cast(%var_220, dtype="float64") /* ty=Tensor[(6, 5, 3), float64] */;
  %906 = shape_of(meta[relay.Constant][31] /* ty=Tensor[(6, 5, 3), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %907 = cast(meta[relay.Constant][31] /* ty=Tensor[(6, 5, 3), uint64] */, dtype="float64") /* ty=Tensor[(6, 5, 3), float64] */;
  %908 = dyn.reshape(%905, %906, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %909 = cast(meta[relay.Constant][31] /* ty=Tensor[(6, 5, 3), uint64] */, dtype="float64") /* ty=Tensor[(6, 5, 3), float64] */;
  %910 = bitwise_xor(%903, %904) /* ty=Tensor[(6, 5, 3), uint64] */;
  %911 = divide(%907, %908) /* ty=Tensor[(6, 5, 3), float64] */;
  %912 = log2(%909) /* ty=Tensor[(6, 5, 3), float64] */;
  (%910, %911, %912)
}

def @func_5103() -> (Tensor[(15, 11, 11), bool],) {
  %913 = @func_3748() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(792), float64], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(90), uint64]) */;
  %914 = %913.3;
  (%914,)
}

def @func_12017() -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) {
  %915 = @func_9296() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %916 = @func_6394() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %917 = %915.0;
  %918 = %916.1;
  (%917, %918)
}

def @func_24419() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %919 = @func_12932() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float64]) */;
  %920 = @func_15033() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %921 = %919.0;
  %922 = %920.0;
  (%921, %922)
}

def @func_14001() -> (Tensor[(15, 11, 11), float32], Tensor[(90), uint64], Tensor[(15, 11, 11), float64]) {
  %923 = @func_9213() /* ty=(Tensor[(90), uint64], Tensor[(15, 11, 11), float32]) */;
  %924 = @func_12932() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float64]) */;
  %925 = @func_11342() /* ty=Tensor[(15, 11, 11), float32] */;
  %926 = %923.0;
  %927 = %924.1;
  (%925, %926, %927)
}

def @func_4266(%var_4261: Tensor[(126), float64]) -> (Tensor[(15, 11, 11), float32], Tensor[(1, 14, 9), float64], Tensor[(126), float64], Tensor[(792), float64]) {
  %928 = @func_3461() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) */;
  %929 = cast(%var_4261, dtype="float64") /* ty=Tensor[(126), float64] */;
  %930 = cast(meta[relay.Constant][32] /* ty=Tensor[(792), float64] */, dtype="float64") /* ty=Tensor[(792), float64] */;
  %931 = reshape(%929, newshape=[1, 14, 9]) /* ty=Tensor[(1, 14, 9), float64] */;
  %932 = reshape(%930, newshape=[792]) /* ty=Tensor[(792), float64] */;
  %933 = @func_1060(%931, %932) /* ty=(Tensor[(1, 14, 9), float64], Tensor[(8, 11, 9), int8], Tensor[(792), float64]) */;
  %934 = %928.0;
  %935 = %933.0;
  (%934, %935, %var_4261, meta[relay.Constant][32] /* ty=Tensor[(792), float64] */)
}

def @func_8192() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %936 = @func_4124() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %937 = %936.1;
  %938 = cast(%937, dtype="float32") /* ty=Tensor[(15, 11, 11), float32] */;
  %939 = reshape(%938, newshape=[15, 11, 11]) /* ty=Tensor[(15, 11, 11), float32] */;
  %940 = @func_4824(%939) /* ty=Tensor[(15, 11, 11), float32] */;
  (%937, %940)
}

def @func_7570() -> Tensor[(15, 11, 11), bool] {
  %941 = @func_5198() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %941.0
}

def @func_25422() -> Tensor[(6, 5, 3), float64] {
  %942 = @func_7089() /* ty=(Tensor[(7, 3, 16), int8], Tensor[(6, 5, 3), float64], Tensor[(1815), bool], Tensor[(126), float64], Tensor[(320), float32], Tensor[(7, 3, 16), int8]) */;
  %942.1
}

def @func_23566() -> (Tensor[(1, 126), float64], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) {
  %943 = @func_15264() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool]) */;
  %944 = @func_5073() /* ty=Tensor[(1, 126), float64] */;
  %945 = %943.0;
  %946 = @func_17201() /* ty=Tensor[(15, 11, 11), float32] */;
  (%944, %945, %946)
}

def @func_15986() -> (Tensor[(15, 11, 11), float32],) {
  %947 = @func_10199() /* ty=Tensor[(15, 11, 11), float32] */;
  (%947,)
}

def @func_16128(%var_16125: Tensor[(196), uint8]) -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(1, 126), float64], uint8, Tensor[(196), uint8]) {
  %948 = @func_12484() /* ty=(Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), bool]) */;
  %949 = @func_8192() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %950 = @func_10446() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %951 = cast(meta[relay.Constant][33] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %952 = cast(%var_16125, dtype="uint8") /* ty=Tensor[(196), uint8] */;
  %953 = reshape(%951, newshape=[]) /* ty=uint8 */;
  %954 = reshape(%952, newshape=[2, 7, 14]) /* ty=Tensor[(2, 7, 14), uint8] */;
  %955 = @func_15288(%953, %954) /* ty=(Tensor[(2, 7, 14), uint8], Tensor[(1, 126), float64]) */;
  %956 = @func_12750() /* ty=Tensor[(15, 11, 11), float32] */;
  %957 = %948.0;
  %958 = %949.1;
  %959 = %950.1;
  %960 = %955.1;
  (%956, %957, %958, %959, %960, meta[relay.Constant][33] /* ty=uint8 */, %var_16125)
}

def @func_19900() -> (Tensor[(7, 3, 16), float32], Tensor[(2, 14, 1), bool], int16) {
  %961 = @func_6987() /* ty=(Tensor[(7, 3, 16), float32],) */;
  %962 = cast(meta[relay.Constant][34] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %963 = reshape(%962, newshape=[]) /* ty=int16 */;
  %964 = @func_10765(%963) /* ty=(Tensor[(2, 14, 1), bool],) */;
  %965 = %961.0;
  %966 = %964.0;
  (%965, %966, meta[relay.Constant][34] /* ty=int16 */)
}

def @func_12233(%var_12204: float32, %var_12205: Tensor[(8, 13, 6), float32]) -> (Tensor[(8, 13, 6), float32], Tensor[(15, 11, 11), bool]) {
  %967 = cast(%var_12204, dtype="float32") /* ty=float32 */;
  %968 = cast(%var_12205, dtype="float32") /* ty=Tensor[(8, 13, 6), float32] */;
  %969 = power(%967, %968) /* ty=Tensor[(8, 13, 6), float32] */;
  %970 = @func_10085() /* ty=Tensor[(15, 11, 11), bool] */;
  (%969, %970)
}

def @func_15748() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %971 = @func_14324() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %972 = @func_12142() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), int8]) */;
  %973 = %971.0;
  %974 = %972.0;
  (%973, %974)
}

def @func_2978() -> Tensor[(15, 11, 11), float32] {
  @func_2900() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_18216() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) {
  %975 = @func_12398() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %976 = @func_5967() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(7, 3, 16), float32], Tensor[(15, 11, 11), bool]) */;
  %977 = %975.0;
  %978 = %976.0;
  (%977, %978)
}

def @func_21955() -> Tensor[(7, 3, 16), float32] {
  %979 = @func_19900() /* ty=(Tensor[(7, 3, 16), float32], Tensor[(2, 14, 1), bool], int16) */;
  %979.0
}

def @func_9375() -> (Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float32]) {
  %980 = @func_8157() /* ty=(Tensor[(7, 3, 16), float32], Tensor[(1, 14, 9), float64], Tensor[(126), float64]) */;
  %981 = @func_5752() /* ty=Tensor[(15, 11, 11), float32] */;
  %982 = %980.0;
  (%981, %982)
}

def @func_14739() -> (Tensor[(15, 11, 11), float32],) {
  %983 = @func_14670() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %984 = %983.2;
  (%984,)
}

def @func_4328() -> (Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), float32]) {
  %985 = @func_2978() /* ty=Tensor[(15, 11, 11), float32] */;
  %986 = cast(%985, dtype="float64") /* ty=Tensor[(15, 11, 11), float64] */;
  %987 = @func_3160() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %988 = rsqrt(%986) /* ty=Tensor[(15, 11, 11), float64] */;
  %989 = %987.0;
  (%988, %989)
}

def @func_17258(%var_17253: Tensor[(21, 6), float64]) -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(1, 14, 9), float64], Tensor[(792), float64], Tensor[(15, 11, 11), float32], Tensor[(21, 6), float32]) {
  %990 = @func_7881() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float32]) */;
  %991 = @func_14517() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %992 = cast(meta[relay.Constant][35] /* ty=Tensor[(21, 6), float64] */, dtype="float64") /* ty=Tensor[(21, 6), float64] */;
  %993 = cast(meta[relay.Constant][36] /* ty=Tensor[(792), float64] */, dtype="float64") /* ty=Tensor[(792), float64] */;
  %994 = reshape(%992, newshape=[1, 14, 9]) /* ty=Tensor[(1, 14, 9), float64] */;
  %995 = reshape(%993, newshape=[792]) /* ty=Tensor[(792), float64] */;
  %996 = @func_1060(%994, %995) /* ty=(Tensor[(1, 14, 9), float64], Tensor[(8, 11, 9), int8], Tensor[(792), float64]) */;
  %997 = @func_14324() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %998 = cast(%var_17253, dtype="float32") /* ty=Tensor[(21, 6), float32] */;
  %999 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(21, 6), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1000 = cast(meta[relay.Constant][35] /* ty=Tensor[(21, 6), float64] */, dtype="float32") /* ty=Tensor[(21, 6), float32] */;
  %1001 = dyn.reshape(%998, %999, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1002 = %990.0;
  %1003 = %991.0;
  %1004 = %996.0;
  %1005 = %997.0;
  %1006 = power(%1000, %1001) /* ty=Tensor[(21, 6), float32] */;
  (%1002, %1003, %1004, meta[relay.Constant][36] /* ty=Tensor[(792), float64] */, %1005, %1006)
}

def @func_8816() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %1007 = @func_8268() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1008 = @func_3780() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %1009 = %1007.0;
  %1010 = %1008.1;
  (%1009, %1010)
}

def @func_15502() -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) {
  %1011 = @func_12594() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) */;
  %1012 = %1011.1;
  %1013 = @func_8380() /* ty=Tensor[(15, 11, 11), float32] */;
  (%1012, %1013)
}

def @func_8857() -> Tensor[(15, 11, 11), bool] {
  %1014 = @func_5691() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %1014.0
}

def @func_19770() -> Tensor[(126), float64] {
  %1015 = @func_6210() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(8, 11, 9), int8], Tensor[(126), float64], Tensor[(792), float64]) */;
  %1015.2
}

def @func_20644() -> (Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float32], Tensor[(15, 11, 11), float32]) {
  %1016 = @func_14196() /* ty=(Tensor[(7, 3, 16), float32],) */;
  %1017 = @func_9743() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1018 = @func_6765() /* ty=Tensor[(15, 11, 11), float32] */;
  %1019 = %1016.0;
  %1020 = %1017.0;
  (%1018, %1019, %1020)
}

def @func_13062(%var_13051: Tensor[(12, 3, 16), int64], %var_13052: Tensor[(12, 3, 16), int64]) -> Tensor[(12, 3, 16), bool] {
  %1021 = cast(%var_13052, dtype="bool") /* ty=Tensor[(12, 3, 16), bool] */;
  %1022 = shape_of(%var_13051, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1023 = cast(%var_13051, dtype="bool") /* ty=Tensor[(12, 3, 16), bool] */;
  %1024 = dyn.reshape(%1021, %1022, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1025 = greater(%1023, %1024) /* ty=Tensor[(12, 3, 16), bool] */;
  %1026 = cast(%var_13051, dtype="bool") /* ty=Tensor[(12, 3, 16), bool] */;
  %1027 = shape_of(%1025, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1028 = cast(%1025, dtype="bool") /* ty=Tensor[(12, 3, 16), bool] */;
  %1029 = dyn.reshape(%1026, %1027, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%1028, %1029) /* ty=Tensor[(12, 3, 16), bool] */
}

def @func_5803() -> (Tensor[(15, 11, 11), float32],) {
  %1030 = @func_2995() /* ty=Tensor[(15, 11, 11), float32] */;
  (%1030,)
}

def @func_18951() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) {
  %1031 = @func_16883() /* ty=(Tensor[(15, 11, 11), float64],) */;
  %1032 = @func_9629() /* ty=Tensor[(15, 11, 11), float32] */;
  %1033 = %1031.0;
  %1034 = @func_17213() /* ty=Tensor[(15, 11, 11), bool] */;
  %1035 = @func_6889() /* ty=Tensor[(15, 11, 11), float32] */;
  (%1032, %1033, %1034, %1035)
}

def @func_20481() -> Tensor[(15, 11, 11), float32] {
  @func_3074() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_26322() -> (Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(1008), int8], Tensor[(8, 126), float32]) {
  %1036 = @func_10284() /* ty=(Tensor[(6, 5, 3), float64], Tensor[(15, 11, 11), float32]) */;
  %1037 = cast(meta[relay.Constant][37] /* ty=Tensor[(1008), int8] */, dtype="int8") /* ty=Tensor[(1008), int8] */;
  %1038 = reshape(%1037, newshape=[8, 126]) /* ty=Tensor[(8, 126), int8] */;
  %1039 = @func_26019(%1038) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(8, 126), uint16], Tensor[(8, 126), bool]) */;
  %1040 = %1039.4;
  %1041 = cast(%1040, dtype="float32") /* ty=Tensor[(8, 126), float32] */;
  %1042 = %1036.1;
  %1043 = @func_19881() /* ty=Tensor[(6, 5, 3), float64] */;
  %1044 = cosh(%1041) /* ty=Tensor[(8, 126), float32] */;
  (%1042, %1043, meta[relay.Constant][37] /* ty=Tensor[(1008), int8] */, %1044)
}

def @func_15288(%var_15267: uint8, %var_15268: Tensor[(2, 7, 14), uint8]) -> (Tensor[(2, 7, 14), uint8], Tensor[(1, 126), float64]) {
  %1045 = cast(%var_15267, dtype="uint8") /* ty=uint8 */;
  %1046 = cast(%var_15268, dtype="uint8") /* ty=Tensor[(2, 7, 14), uint8] */;
  %1047 = @func_6589() /* ty=(Tensor[(1, 126), float64],) */;
  %1048 = subtract(%1045, %1046) /* ty=Tensor[(2, 7, 14), uint8] */;
  %1049 = %1047.0;
  (%1048, %1049)
}

def @func_23498() -> (Tensor[(15, 11, 11), float32],) {
  %1050 = @func_15176() /* ty=Tensor[(15, 11, 11), float32] */;
  (%1050,)
}

def @func_9743() -> (Tensor[(15, 11, 11), float32],) {
  %1051 = @func_8171() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1052 = %1051.0;
  (%1052,)
}

def @func_9874() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) {
  %1053 = @func_5896() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %1054 = @func_7655() /* ty=Tensor[(15, 11, 11), float32] */;
  %1055 = %1053.0;
  (%1054, %1055)
}

def @func_25707() -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %1056 = @func_11763() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1057 = @func_24419() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %1058 = @func_12142() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), int8]) */;
  %1059 = @func_8023() /* ty=(Tensor[(7, 3, 16), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(1, 126), float64], Tensor[(11, 14, 13), float32], Tensor[(2002), float32]) */;
  %1060 = @func_8268() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1061 = @func_21809() /* ty=Tensor[(15, 11, 11), bool] */;
  %1062 = %1056.0;
  %1063 = @func_6765() /* ty=Tensor[(15, 11, 11), float32] */;
  %1064 = %1057.0;
  %1065 = %1058.1;
  %1066 = %1059.3;
  %1067 = %1060.0;
  (%1061, %1062, %1063, %1064, %1065, %1066, %1067)
}

def @func_7214() -> Tensor[(15, 11, 11), float32] {
  @func_2900() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_7917() -> Tensor[(15, 11, 11), bool] {
  %1068 = @func_6148() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %1068.0
}

def @func_9143() -> (Tensor[(7, 3, 16), float32], Tensor[(792), float64], Tensor[(126), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %1069 = @func_7881() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float32]) */;
  %1070 = cast(meta[relay.Constant][38] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
  %1071 = reshape(%1070, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %1072 = @func_3564(%1071) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(8, 11, 9), int8], Tensor[(126), float64], Tensor[(792), float64]) */;
  %1073 = @func_6819() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1074 = @func_3461() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) */;
  %1075 = @func_6265() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1076 = %1069.1;
  %1077 = %1072.3;
  %1078 = %1073.0;
  %1079 = %1074.0;
  %1080 = %1075.0;
  (%1076, %1077, meta[relay.Constant][38] /* ty=Tensor[(126), float64] */, %1078, %1079, %1080)
}

def @func_3461() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) {
  %1081 = @func_3322() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %1082 = @func_3074() /* ty=Tensor[(15, 11, 11), float32] */;
  %1083 = %1081.0;
  (%1082, %1083)
}

def @func_13045() -> Tensor[(15, 11, 11), float32] {
  %1084 = @func_11763() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1084.0
}

def @func_9593() -> Tensor[(15, 11, 11), bool] {
  @func_8857() /* ty=Tensor[(15, 11, 11), bool] */
}

def @func_15149() -> Tensor[(792), float64] {
  %1085 = @func_7447() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(792), float64]) */;
  %1085.1
}

def @func_18078() -> (Tensor[(90), uint64], Tensor[(15, 11, 11), float32]) {
  %1086 = @func_3748() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(792), float64], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(90), uint64]) */;
  %1087 = @func_17894() /* ty=Tensor[(90), uint64] */;
  %1088 = %1086.4;
  (%1087, %1088)
}

def @func_6148() -> (Tensor[(15, 11, 11), bool],) {
  %1089 = @func_5198() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %1090 = %1089.0;
  (%1090,)
}

def @func_26329() -> (Tensor[(18, 100), float64], Tensor[(15, 11, 11), float32]) {
  %1091 = @func_23672() /* ty=(Tensor[(15, 11, 11), float64], Tensor[(8, 15, 15), float64], Tensor[(18, 100), float64]) */;
  %1092 = @func_3780() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %1093 = %1091.2;
  %1094 = %1092.0;
  (%1093, %1094)
}

def @func_21703() -> Tensor[(15, 11, 11), float32] {
  %1095 = @func_6265() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1095.0
}

def @func_17531() -> (Tensor[(15, 11, 11), float32],) {
  %1096 = @func_8023() /* ty=(Tensor[(7, 3, 16), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(1, 126), float64], Tensor[(11, 14, 13), float32], Tensor[(2002), float32]) */;
  %1097 = %1096.1;
  (%1097,)
}

def @func_17708(%var_17638: int64, %var_17639: Tensor[(3, 14, 14), int64], %var_17659: Tensor[(126), float64], %var_17660: Tensor[(792), float64]) -> (Tensor[(3, 14, 14), int64], Tensor[(792), float64], Tensor[(126), float64], Tensor[(792), float64], Tensor[(16, 5, 4), float32], Tensor[(320), float32]) {
  %1098 = cast(%var_17638, dtype="int64") /* ty=int64 */;
  %1099 = cast(%var_17639, dtype="int64") /* ty=Tensor[(3, 14, 14), int64] */;
  %1100 = cast(%var_17659, dtype="float64") /* ty=Tensor[(126), float64] */;
  %1101 = cast(%var_17660, dtype="float64") /* ty=Tensor[(792), float64] */;
  %1102 = reshape(%1100, newshape=[1, 126]) /* ty=Tensor[(1, 126), float64] */;
  %1103 = reshape(%1101, newshape=[792]) /* ty=Tensor[(792), float64] */;
  %1104 = @func_7683(%1102, %1103) /* ty=(Tensor[(7, 3, 16), float64], Tensor[(1, 14, 9), float64], Tensor[(1, 126), float64], Tensor[(792), float64]) */;
  %1105 = cast(meta[relay.Constant][39] /* ty=Tensor[(320), float32] */, dtype="float32") /* ty=Tensor[(320), float32] */;
  %1106 = cast(meta[relay.Constant][39] /* ty=Tensor[(320), float32] */, dtype="float32") /* ty=Tensor[(320), float32] */;
  %1107 = reshape(%1105, newshape=[16, 5, 4]) /* ty=Tensor[(16, 5, 4), float32] */;
  %1108 = reshape(%1106, newshape=[16, 5, 4]) /* ty=Tensor[(16, 5, 4), float32] */;
  %1109 = logical_xor(%1098, %1099) /* ty=Tensor[(3, 14, 14), int64] */;
  %1110 = %1104.3;
  %1111 = @func_3257(%1107, %1108) /* ty=Tensor[(16, 5, 4), float32] */;
  (%1109, %1110, %var_17659, %var_17660, %1111, meta[relay.Constant][39] /* ty=Tensor[(320), float32] */)
}

def @func_7881() -> (Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float32]) {
  %1112 = @func_6635() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1113 = @func_5967() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(7, 3, 16), float32], Tensor[(15, 11, 11), bool]) */;
  %1114 = %1112.0;
  %1115 = %1113.1;
  (%1114, %1115)
}

def @func_4072(%var_4003: Tensor[(21, 6), float64], %var_4040: Tensor[(320), float32]) -> (Tensor[(15, 11, 11), float32], Tensor[(8, 11, 9), int8], Tensor[(792), float64], Tensor[(15, 11, 11), float32], Tensor[(792), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(35), float64], Tensor[(16, 5, 4), float32], Tensor[(320), float32], Tensor[(21, 6), float32], Tensor[(15, 11, 11), float32], Tensor[(792), float64], Tensor[(16, 5, 4), float32]) {
  %1116 = @func_3780() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %1117 = cast(meta[relay.Constant][40] /* ty=Tensor[(792), float64] */, dtype="float64") /* ty=Tensor[(792), float64] */;
  %1118 = reshape(%1117, newshape=[8, 11, 9]) /* ty=Tensor[(8, 11, 9), float64] */;
  %1119 = @func_643(%1118) /* ty=(Tensor[(8, 11, 9), int8], Tensor[(6, 5, 3), float64], Tensor[(90), uint64], Tensor[(6, 5, 3), uint64]) */;
  %1120 = cast(%var_4003, dtype="float64") /* ty=Tensor[(21, 6), float64] */;
  %1121 = cast(meta[relay.Constant][40] /* ty=Tensor[(792), float64] */, dtype="float64") /* ty=Tensor[(792), float64] */;
  %1122 = reshape(%1120, newshape=[1, 14, 9]) /* ty=Tensor[(1, 14, 9), float64] */;
  %1123 = reshape(%1121, newshape=[792]) /* ty=Tensor[(792), float64] */;
  %1124 = @func_1060(%1122, %1123) /* ty=(Tensor[(1, 14, 9), float64], Tensor[(8, 11, 9), int8], Tensor[(792), float64]) */;
  %1125 = cast(%var_4003, dtype="float64") /* ty=Tensor[(21, 6), float64] */;
  %1126 = %1124.2;
  %1127 = cast(%1126, dtype="float64") /* ty=Tensor[(792), float64] */;
  %1128 = cast(meta[relay.Constant][41] /* ty=Tensor[(35), float64] */, dtype="float64") /* ty=Tensor[(35), float64] */;
  %1129 = reshape(%1125, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %1130 = reshape(%1127, newshape=[1, 792]) /* ty=Tensor[(1, 792), float64] */;
  %1131 = reshape(%1128, newshape=[35]) /* ty=Tensor[(35), float64] */;
  %1132 = @func_3955(%1129, %1130, %1131) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(1, 14, 9), float64], Tensor[(126), float64], Tensor[(?, 792), bool], Tensor[(7, 5, ?), bool], Tensor[(35), float64], Tensor[(?, 792), float32]) */;
  %1133 = cast(%var_4040, dtype="float32") /* ty=Tensor[(320), float32] */;
  %1134 = cast(%var_4040, dtype="float32") /* ty=Tensor[(320), float32] */;
  %1135 = reshape(%1133, newshape=[16, 5, 4]) /* ty=Tensor[(16, 5, 4), float32] */;
  %1136 = reshape(%1134, newshape=[16, 5, 4]) /* ty=Tensor[(16, 5, 4), float32] */;
  %1137 = cast(%var_4003, dtype="float32") /* ty=Tensor[(21, 6), float32] */;
  %1138 = log(%1137) /* ty=Tensor[(21, 6), float32] */;
  %1139 = cast(%1138, dtype="float32") /* ty=Tensor[(21, 6), float32] */;
  %1140 = @func_3160() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1141 = cast(%var_4003, dtype="float64") /* ty=Tensor[(21, 6), float64] */;
  %1142 = reshape(%1141, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %1143 = @func_3564(%1142) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(8, 11, 9), int8], Tensor[(126), float64], Tensor[(792), float64]) */;
  %1144 = @func_3257(%1135, %1136) /* ty=Tensor[(16, 5, 4), float32] */;
  %1145 = cast(%1144, dtype="float32") /* ty=Tensor[(16, 5, 4), float32] */;
  %1146 = cast(%1144, dtype="float32") /* ty=Tensor[(16, 5, 4), float32] */;
  %1147 = reshape(%1145, newshape=[16, 5, 4]) /* ty=Tensor[(16, 5, 4), float32] */;
  %1148 = reshape(%1146, newshape=[16, 5, 4]) /* ty=Tensor[(16, 5, 4), float32] */;
  %1149 = %1116.0;
  %1150 = %1119.0;
  %1151 = @func_2900() /* ty=Tensor[(15, 11, 11), float32] */;
  %1152 = @func_2900() /* ty=Tensor[(15, 11, 11), float32] */;
  %1153 = %1132.0;
  %1154 = atanh(%1139) /* ty=Tensor[(21, 6), float32] */;
  %1155 = %1140.0;
  %1156 = %1143.3;
  %1157 = @func_3257(%1147, %1148) /* ty=Tensor[(16, 5, 4), float32] */;
  (%1149, %1150, meta[relay.Constant][40] /* ty=Tensor[(792), float64] */, %1151, %1126, %1152, %1153, meta[relay.Constant][41] /* ty=Tensor[(35), float64] */, %1144, %var_4040, %1154, %1155, %1156, %1157)
}

def @func_18677() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) {
  %1158 = @func_15124() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %1159 = %1158.1;
  %1160 = @func_11408() /* ty=Tensor[(15, 11, 11), bool] */;
  %1161 = @func_15176() /* ty=Tensor[(15, 11, 11), float32] */;
  (%1159, %1160, %1161)
}

def @func_18499(%var_18483: Tensor[(6, 14, 12), int8]) -> (Tensor[(6, 14, 12), int8], Tensor[(320), float32], Tensor[(6, 14, 12), float64], Tensor[(15, 11, 11), float32]) {
  %1162 = cast(meta[relay.Constant][42] /* ty=Tensor[(6, 14, 12), int8] */, dtype="int8") /* ty=Tensor[(6, 14, 12), int8] */;
  %1163 = shape_of(%var_18483, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1164 = cast(%var_18483, dtype="int8") /* ty=Tensor[(6, 14, 12), int8] */;
  %1165 = dyn.reshape(%1162, %1163, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1166 = @func_8334() /* ty=(Tensor[(320), float32],) */;
  %1167 = cast(%var_18483, dtype="float64") /* ty=Tensor[(6, 14, 12), float64] */;
  %1168 = @func_18262() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %1169 = subtract(%1164, %1165) /* ty=Tensor[(6, 14, 12), int8] */;
  %1170 = %1166.0;
  %1171 = asinh(%1167) /* ty=Tensor[(6, 14, 12), float64] */;
  %1172 = %1168.0;
  (%1169, %1170, %1171, %1172)
}

def @func_21650() -> Tensor[(15, 11, 11), float32] {
  %1173 = @func_18677() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) */;
  %1173.2
}

def @func_25776() -> (Tensor[(15, 11, 11), float32],) {
  %1174 = @func_17623() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool]) */;
  %1175 = %1174.1;
  (%1175,)
}

def @func_25091() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %1176 = @func_14739() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1177 = %1176.0;
  %1178 = @func_22400() /* ty=Tensor[(15, 11, 11), float32] */;
  (%1177, %1178)
}

def @func_16925(%var_16896: Tensor[(15, 126), float64]) -> (Tensor[(15, 126), float32], Tensor[(15, 126), bool], Tensor[(15, 126), bool]) {
  %1179 = cast(%var_16896, dtype="float32") /* ty=Tensor[(15, 126), float32] */;
  %1180 = @func_5073() /* ty=Tensor[(1, 126), float64] */;
  %1181 = cast(%1180, dtype="bool") /* ty=Tensor[(1, 126), bool] */;
  %1182 = cast(%var_16896, dtype="bool") /* ty=Tensor[(15, 126), bool] */;
  %1183 = cast(%1180, dtype="uint16") /* ty=Tensor[(1, 126), uint16] */;
  %1184 = cast(%var_16896, dtype="uint16") /* ty=Tensor[(15, 126), uint16] */;
  %1185 = add(%1183, %1184) /* ty=Tensor[(15, 126), uint16] */;
  %1186 = cast(%var_16896, dtype="bool") /* ty=Tensor[(15, 126), bool] */;
  %1187 = shape_of(%1185, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1188 = cast(%1185, dtype="bool") /* ty=Tensor[(15, 126), bool] */;
  %1189 = dyn.reshape(%1186, %1187, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1190 = exp(%1179) /* ty=Tensor[(15, 126), float32] */;
  %1191 = greater_equal(%1181, %1182) /* ty=Tensor[(15, 126), bool] */;
  %1192 = not_equal(%1188, %1189) /* ty=Tensor[(15, 126), bool] */;
  (%1190, %1191, %1192)
}

def @func_16050() -> (Tensor[(15, 11, 11), float64], Tensor[(2, 7, 14), uint8], uint8, Tensor[(196, 1), uint8]) {
  %1193 = @func_4328() /* ty=(Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), float32]) */;
  %1194 = cast(meta[relay.Constant][43] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %1195 = cast(meta[relay.Constant][44] /* ty=Tensor[(196, 1), uint8] */, dtype="uint8") /* ty=Tensor[(196, 1), uint8] */;
  %1196 = reshape(%1194, newshape=[]) /* ty=uint8 */;
  %1197 = reshape(%1195, newshape=[2, 7, 14]) /* ty=Tensor[(2, 7, 14), uint8] */;
  %1198 = @func_15288(%1196, %1197) /* ty=(Tensor[(2, 7, 14), uint8], Tensor[(1, 126), float64]) */;
  %1199 = %1193.0;
  %1200 = %1198.0;
  (%1199, %1200, meta[relay.Constant][43] /* ty=uint8 */, meta[relay.Constant][44] /* ty=Tensor[(196, 1), uint8] */)
}

def @func_6394() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %1201 = @func_6265() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1202 = %1201.0;
  %1203 = @func_4906() /* ty=Tensor[(15, 11, 11), float32] */;
  (%1202, %1203)
}

def @func_11839() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %1204 = @func_6349() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1205 = %1204.0;
  %1206 = @func_7426() /* ty=Tensor[(15, 11, 11), float32] */;
  (%1205, %1206)
}

def @func_10199() -> Tensor[(15, 11, 11), float32] {
  @func_3665() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_13500() -> (Tensor[(15, 11, 11), float32],) {
  %1207 = @func_6635() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1208 = %1207.0;
  (%1208,)
}

def @func_4741() -> (Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), int8]) {
  %1209 = @func_3461() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) */;
  %1210 = @func_4371() /* ty=(Tensor[(7, 3, 16), int8],) */;
  %1211 = %1209.0;
  %1212 = %1210.0;
  (%1211, %1212)
}

def @func_25595() -> (Tensor[(15, 11, 11), bool], Tensor[(1, 126), float64]) {
  %1213 = @func_18216() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) */;
  %1214 = %1213.1;
  %1215 = @func_5073() /* ty=Tensor[(1, 126), float64] */;
  (%1214, %1215)
}

def @func_8548() -> Tensor[(11, 14, 13), float32] {
  %1216 = @func_8023() /* ty=(Tensor[(7, 3, 16), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(1, 126), float64], Tensor[(11, 14, 13), float32], Tensor[(2002), float32]) */;
  %1216.5
}

def @func_20425() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %1217 = @func_20387() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float64], Tensor[(126), float64], Tensor[(15, 11, 11), float32]) */;
  %1218 = @func_11558() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) */;
  %1219 = @func_5931() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) */;
  %1220 = %1217.3;
  %1221 = %1218.0;
  %1222 = %1219.1;
  (%1220, %1221, %1222)
}

def @func_6564(%var_6561: Tensor[(11, 14, 13), float32]) -> (Tensor[(11, 14, 13), float32],) {
  %1223 = cast(%var_6561, dtype="float32") /* ty=Tensor[(11, 14, 13), float32] */;
  %1224 = tan(%1223) /* ty=Tensor[(11, 14, 13), float32] */;
  (%1224,)
}

def @func_9487() -> Tensor[(15, 11, 11), float32] {
  %1225 = @func_4124() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %1225.1
}

def @func_11072() -> Tensor[(13, 4, 13), float32] {
  %1226 = cast(meta[relay.Constant][45] /* ty=Tensor[(13, 4, 13), float32] */, dtype="float32") /* ty=Tensor[(13, 4, 13), float32] */;
  cosh(%1226) /* ty=Tensor[(13, 4, 13), float32] */
}

def @func_9352() -> (Tensor[(15, 11, 11), float32],) {
  %1227 = @func_6349() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1228 = %1227.0;
  (%1228,)
}

def @func_12157(%var_12151: Tensor[(2, 504), float64]) -> (Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(2, 504), float64]) {
  %1229 = @func_9352() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1230 = cast(%var_12151, dtype="float64") /* ty=Tensor[(2, 504), float64] */;
  %1231 = reshape(%1230, newshape=[504, 2]) /* ty=Tensor[(504, 2), float64] */;
  %1232 = @func_9809(%1231) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(7, 3, 16), float64], Tensor[(15, 11, 11), float32], Tensor[(504, 2), float64], Tensor[(320), float32]) */;
  %1233 = %1229.0;
  %1234 = %1232.1;
  (%1233, %1234, %var_12151)
}

def @func_23364() -> (Tensor[(320), float32],) {
  %1235 = @func_23207() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(320), float32]) */;
  %1236 = %1235.2;
  (%1236,)
}

def @func_15968() -> Tensor[(15, 11, 11), float32] {
  @func_7655() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_10085() -> Tensor[(15, 11, 11), bool] {
  %1237 = @func_5026() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float64], Tensor[(7, 3, 16), int8]) */;
  %1237.0
}

def @func_18113() -> (Tensor[(15, 11, 11), float32],) {
  %1238 = @func_7426() /* ty=Tensor[(15, 11, 11), float32] */;
  (%1238,)
}

def @func_16978() -> (Tensor[(7, 3, 16), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) {
  %1239 = @func_14974() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float32]) */;
  %1240 = @func_5931() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) */;
  %1241 = %1240.1;
  %1242 = cast(%1241, dtype="float32") /* ty=Tensor[(15, 11, 11), float32] */;
  %1243 = reshape(%1242, newshape=[15, 11, 11]) /* ty=Tensor[(15, 11, 11), float32] */;
  %1244 = @func_5148(%1243) /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) */;
  %1245 = %1239.3;
  %1246 = %1244.0;
  (%1245, %1241, %1246)
}

def @func_8023() -> (Tensor[(7, 3, 16), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(1, 126), float64], Tensor[(11, 14, 13), float32], Tensor[(2002), float32]) {
  %1247 = @func_7386() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float64]) */;
  %1248 = @func_6589() /* ty=(Tensor[(1, 126), float64],) */;
  %1249 = cast(meta[relay.Constant][46] /* ty=Tensor[(2002), float32] */, dtype="float32") /* ty=Tensor[(2002), float32] */;
  %1250 = reshape(%1249, newshape=[11, 14, 13]) /* ty=Tensor[(11, 14, 13), float32] */;
  %1251 = @func_6564(%1250) /* ty=(Tensor[(11, 14, 13), float32],) */;
  %1252 = %1247.1;
  %1253 = @func_7426() /* ty=Tensor[(15, 11, 11), float32] */;
  %1254 = @func_7426() /* ty=Tensor[(15, 11, 11), float32] */;
  %1255 = @func_7214() /* ty=Tensor[(15, 11, 11), float32] */;
  %1256 = %1248.0;
  %1257 = %1251.0;
  (%1252, %1253, %1254, %1255, %1256, %1257, meta[relay.Constant][46] /* ty=Tensor[(2002), float32] */)
}

def @func_24001() -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(2002), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %1258 = @func_15894() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %1259 = %1258.0;
  %1260 = cast(%1259, dtype="float32") /* ty=Tensor[(15, 11, 11), float32] */;
  %1261 = cast(meta[relay.Constant][47] /* ty=Tensor[(2002), float32] */, dtype="float32") /* ty=Tensor[(2002), float32] */;
  %1262 = reshape(%1260, newshape=[1815]) /* ty=Tensor[(1815), float32] */;
  %1263 = reshape(%1261, newshape=[2002]) /* ty=Tensor[(2002), float32] */;
  %1264 = @func_8972(%1262, %1263) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(1815), float32], Tensor[(11, 14, 13), float32], Tensor[(2002), float32], Tensor[(?, 14, 8), uint64], Tensor[(?, 14, 8), float64]) */;
  %1265 = @func_13787() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1266 = @func_18229() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1267 = @func_14791() /* ty=(Tensor[(126), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float64]) */;
  %1268 = @func_18078() /* ty=(Tensor[(90), uint64], Tensor[(15, 11, 11), float32]) */;
  %1269 = %1264.0;
  %1270 = %1265.0;
  %1271 = %1266.0;
  %1272 = %1267.1;
  %1273 = %1268.1;
  (%1259, %1269, meta[relay.Constant][47] /* ty=Tensor[(2002), float32] */, %1270, %1271, %1272, %1273)
}

def @func_12142() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), int8]) {
  %1274 = @func_6819() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1275 = @func_8305() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) */;
  %1276 = @func_7756() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1277 = @func_5026() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float64], Tensor[(7, 3, 16), int8]) */;
  %1278 = %1274.0;
  %1279 = %1275.0;
  %1280 = %1276.0;
  %1281 = %1277.2;
  (%1278, %1279, %1280, %1281)
}

def @func_21282() -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) {
  %1282 = @func_14187() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(1008), float64], Tensor[(7, 3, 16), float32]) */;
  %1283 = @func_14620() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %1284 = %1282.0;
  %1285 = %1283.0;
  (%1284, %1285)
}

def @func_6210() -> (Tensor[(15, 11, 11), bool], Tensor[(8, 11, 9), int8], Tensor[(126), float64], Tensor[(792), float64]) {
  %1286 = @func_5896() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %1287 = cast(meta[relay.Constant][48] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
  %1288 = cast(meta[relay.Constant][49] /* ty=Tensor[(792), float64] */, dtype="float64") /* ty=Tensor[(792), float64] */;
  %1289 = reshape(%1287, newshape=[1, 14, 9]) /* ty=Tensor[(1, 14, 9), float64] */;
  %1290 = reshape(%1288, newshape=[792]) /* ty=Tensor[(792), float64] */;
  %1291 = @func_1060(%1289, %1290) /* ty=(Tensor[(1, 14, 9), float64], Tensor[(8, 11, 9), int8], Tensor[(792), float64]) */;
  %1292 = %1286.0;
  %1293 = %1291.1;
  (%1292, %1293, meta[relay.Constant][48] /* ty=Tensor[(126), float64] */, meta[relay.Constant][49] /* ty=Tensor[(792), float64] */)
}

def @func_10446() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %1294 = @func_7727() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) */;
  %1295 = %1294.1;
  %1296 = @func_7331() /* ty=Tensor[(15, 11, 11), float32] */;
  (%1295, %1296)
}

def @func_8752() -> Tensor[(6, 5, 3), float64] {
  %1297 = @func_4949() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), uint64], Tensor[(792), float64]) */;
  %1298 = %1297.1;
  %1299 = cast(%1298, dtype="float64") /* ty=Tensor[(6, 5, 3), float64] */;
  cos(%1299) /* ty=Tensor[(6, 5, 3), float64] */
}

def @func_6800() -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool]) {
  %1300 = @func_3322() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %1301 = %1300.0;
  %1302 = cast(%1301, dtype="float32") /* ty=Tensor[(15, 11, 11), float32] */;
  %1303 = reshape(%1302, newshape=[15, 11, 11]) /* ty=Tensor[(15, 11, 11), float32] */;
  %1304 = @func_3379(%1303) /* ty=Tensor[(15, 11, 11), bool] */;
  (%1301, %1304)
}

def @func_17762() -> Tensor[(7, 3, 16), float32] {
  %1305 = @func_8157() /* ty=(Tensor[(7, 3, 16), float32], Tensor[(1, 14, 9), float64], Tensor[(126), float64]) */;
  %1305.0
}

def @func_22815() -> (Tensor[(1, 14, 9), float64],) {
  %1306 = @func_8157() /* ty=(Tensor[(7, 3, 16), float32], Tensor[(1, 14, 9), float64], Tensor[(126), float64]) */;
  %1307 = %1306.1;
  (%1307,)
}

def @func_22951() -> Tensor[(15, 11, 11), float32] {
  @func_5860() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_25640(%var_25617: Tensor[(1, 1, 4), float64]) -> (Tensor[(15, 11, 11), float32], Tensor[(?, ?, 4), bool]) {
  %1308 = @func_13500() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1309 = cast(%var_25617, dtype="float64") /* ty=Tensor[(1, 1, 4), float64] */;
  %1310 = atan(%1309) /* ty=Tensor[(1, 1, 4), float64] */;
  %1311 = cast(%var_25617, dtype="bool") /* ty=Tensor[(1, 1, 4), bool] */;
  %1312 = shape_of(%1310, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1313 = cast(%1310, dtype="bool") /* ty=Tensor[(1, 1, 4), bool] */;
  %1314 = dyn.reshape(%1311, %1312, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1315 = %1308.0;
  %1316 = not_equal(%1313, %1314) /* ty=Tensor[(?, ?, 4), bool] */;
  (%1315, %1316)
}

def @func_9085() -> (Tensor[(7, 3, 16), float64], Tensor[(15, 11, 11), float32], Tensor[(126), float64]) {
  %1317 = cast(meta[relay.Constant][50] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
  %1318 = reshape(%1317, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %1319 = @func_5555(%1318) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(126), float64], Tensor[(320), float32], Tensor[(80, 4), float64]) */;
  %1320 = @func_6128() /* ty=Tensor[(7, 3, 16), float64] */;
  %1321 = %1319.0;
  (%1320, %1321, meta[relay.Constant][50] /* ty=Tensor[(126), float64] */)
}

def @func_11777() -> (Tensor[(15, 11, 11), bool],) {
  %1322 = @func_7917() /* ty=Tensor[(15, 11, 11), bool] */;
  (%1322,)
}

def @func_14670() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %1323 = @func_8023() /* ty=(Tensor[(7, 3, 16), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(1, 126), float64], Tensor[(11, 14, 13), float32], Tensor[(2002), float32]) */;
  %1324 = @func_13500() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1325 = @func_13616() /* ty=Tensor[(15, 11, 11), float32] */;
  %1326 = %1323.1;
  %1327 = %1324.0;
  (%1325, %1326, %1327)
}

def @func_3215(%var_3205: Tensor[(90), uint64]) -> (Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), uint64], Tensor[(90), uint64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %1328 = cast(%var_3205, dtype="uint64") /* ty=Tensor[(90), uint64] */;
  %1329 = cast(%var_3205, dtype="uint64") /* ty=Tensor[(90), uint64] */;
  %1330 = reshape(%1328, newshape=[6, 5, 3]) /* ty=Tensor[(6, 5, 3), uint64] */;
  %1331 = reshape(%1329, newshape=[6, 5, 3]) /* ty=Tensor[(6, 5, 3), uint64] */;
  %1332 = @func_237(%1330, %1331) /* ty=(Tensor[(6, 5, 3), uint64], Tensor[(6, 5, 3), float64], Tensor[(6, 5, 3), float64]) */;
  %1333 = @func_2978() /* ty=Tensor[(15, 11, 11), float32] */;
  %1334 = %1332.0;
  %1335 = @func_2900() /* ty=Tensor[(15, 11, 11), float32] */;
  %1336 = @func_2978() /* ty=Tensor[(15, 11, 11), float32] */;
  (%1333, %1334, %var_3205, %1335, %1336)
}

def @func_24651() -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(90), uint64], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %1337 = @func_14285() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %1338 = cast(meta[relay.Constant][51] /* ty=Tensor[(90), uint64] */, dtype="uint64") /* ty=Tensor[(90), uint64] */;
  %1339 = reshape(%1338, newshape=[90]) /* ty=Tensor[(90), uint64] */;
  %1340 = @func_3215(%1339) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), uint64], Tensor[(90), uint64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %1341 = @func_15264() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool]) */;
  %1342 = @func_14791() /* ty=(Tensor[(126), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float64]) */;
  %1343 = @func_15834() /* ty=Tensor[(15, 11, 11), bool] */;
  %1344 = %1337.0;
  %1345 = %1340.3;
  %1346 = %1341.1;
  %1347 = %1342.2;
  %1348 = @func_10486() /* ty=Tensor[(15, 11, 11), float32] */;
  %1349 = @func_16993() /* ty=Tensor[(15, 11, 11), float32] */;
  (%1343, %1344, %1345, meta[relay.Constant][51] /* ty=Tensor[(90), uint64] */, %1346, %1347, %1348, %1349)
}

def @func_5438() -> (Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), float64]) {
  %1350 = @func_4328() /* ty=(Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), float32]) */;
  %1351 = @func_4328() /* ty=(Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), float32]) */;
  %1352 = %1351.1;
  %1353 = cast(%1352, dtype="float64") /* ty=Tensor[(15, 11, 11), float64] */;
  %1354 = %1350.0;
  %1355 = sigmoid(%1353) /* ty=Tensor[(15, 11, 11), float64] */;
  (%1354, %1355)
}

def @func_11066() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) {
  %1356 = @func_6349() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1357 = @func_9678() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %1358 = @func_10446() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %1359 = @func_8380() /* ty=Tensor[(15, 11, 11), float32] */;
  %1360 = %1356.0;
  %1361 = %1357.0;
  %1362 = %1358.0;
  (%1359, %1360, %1361, %1362)
}

def @func_9629() -> Tensor[(15, 11, 11), float32] {
  %1363 = @func_3780() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %1363.1
}

def @func_24102() -> (Tensor[(15, 11, 11), bool],) {
  %1364 = @func_14187() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(1008), float64], Tensor[(7, 3, 16), float32]) */;
  %1365 = %1364.0;
  (%1365,)
}

def @func_4371() -> (Tensor[(7, 3, 16), int8],) {
  %1366 = cast(meta[relay.Constant][53] /* ty=Tensor[(7, 3, 16), int8] */, dtype="int8") /* ty=Tensor[(7, 3, 16), int8] */;
  %1367 = shape_of(meta[relay.Constant][52] /* ty=Tensor[(7, 3, 16), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1368 = cast(meta[relay.Constant][52] /* ty=Tensor[(7, 3, 16), int8] */, dtype="int8") /* ty=Tensor[(7, 3, 16), int8] */;
  %1369 = dyn.reshape(%1366, %1367, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1370 = bitwise_or(%1368, %1369) /* ty=Tensor[(7, 3, 16), int8] */;
  (%1370,)
}

def @func_25050() -> Tensor[(90), uint64] {
  %1371 = @func_18078() /* ty=(Tensor[(90), uint64], Tensor[(15, 11, 11), float32]) */;
  %1371.0
}

def @func_11629(%var_11595: Tensor[(4, 126), float64], %var_11607: Tensor[(15, 126), float64]) -> (Tensor[(15, 11, 11), float32], Tensor[(4, 126), bool], Tensor[(1, 14, 9), float64], Tensor[(15, 126), bool], Tensor[(15, 126), float32]) {
  %1372 = @func_5073() /* ty=Tensor[(1, 126), float64] */;
  %1373 = cast(%1372, dtype="bool") /* ty=Tensor[(1, 126), bool] */;
  %1374 = cast(%var_11595, dtype="bool") /* ty=Tensor[(4, 126), bool] */;
  %1375 = @func_8157() /* ty=(Tensor[(7, 3, 16), float32], Tensor[(1, 14, 9), float64], Tensor[(126), float64]) */;
  %1376 = cast(%1372, dtype="bool") /* ty=Tensor[(1, 126), bool] */;
  %1377 = cast(%var_11607, dtype="bool") /* ty=Tensor[(15, 126), bool] */;
  %1378 = cast(%var_11607, dtype="float32") /* ty=Tensor[(15, 126), float32] */;
  %1379 = @func_2995() /* ty=Tensor[(15, 11, 11), float32] */;
  %1380 = greater(%1373, %1374) /* ty=Tensor[(4, 126), bool] */;
  %1381 = %1375.1;
  %1382 = equal(%1376, %1377) /* ty=Tensor[(15, 126), bool] */;
  %1383 = sigmoid(%1378) /* ty=Tensor[(15, 126), float32] */;
  (%1379, %1380, %1381, %1382, %1383)
}

def @func_16819() -> Tensor[(15, 11, 11), float32] {
  %1384 = @func_8023() /* ty=(Tensor[(7, 3, 16), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(1, 126), float64], Tensor[(11, 14, 13), float32], Tensor[(2002), float32]) */;
  %1384.1
}

def @func_21501(%var_21494: Tensor[(14, 12, 16), uint32], %var_21495: Tensor[(14, 12, 16), uint32]) -> (Tensor[(14, 12, 16), bool],) {
  %1385 = cast(%var_21495, dtype="bool") /* ty=Tensor[(14, 12, 16), bool] */;
  %1386 = shape_of(%var_21494, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1387 = cast(%var_21494, dtype="bool") /* ty=Tensor[(14, 12, 16), bool] */;
  %1388 = dyn.reshape(%1385, %1386, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1389 = less_equal(%1387, %1388) /* ty=Tensor[(14, 12, 16), bool] */;
  (%1389,)
}

def @func_25361() -> (Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool]) {
  %1390 = @func_5438() /* ty=(Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), float64]) */;
  %1391 = @func_24913() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) */;
  %1392 = @func_17934() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) */;
  %1393 = %1390.1;
  %1394 = %1391.1;
  %1395 = %1392.1;
  (%1393, %1394, %1395)
}

def @func_11467() -> (Tensor[(320), float32], Tensor[(15, 11, 11), float32]) {
  %1396 = @func_8427() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(320), float32]) */;
  %1397 = %1396.1;
  %1398 = @func_10199() /* ty=Tensor[(15, 11, 11), float32] */;
  (%1397, %1398)
}

def @func_21073(%var_21062: Tensor[(21, 6), float64]) -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(21, 6), float64], Tensor[(7, 3, 16), int8]) {
  %1399 = cast(%var_21062, dtype="float64") /* ty=Tensor[(21, 6), float64] */;
  %1400 = reshape(%1399, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %1401 = @func_16188(%1400) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(126), float64], Tensor[(15, 11, 11), bool]) */;
  %1402 = @func_4741() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), int8]) */;
  %1403 = @func_4906() /* ty=Tensor[(15, 11, 11), float32] */;
  %1404 = %1401.0;
  %1405 = %1402.1;
  (%1403, %1404, %var_21062, %1405)
}

def @func_7744() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %1406 = @func_7614() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1407 = @func_7655() /* ty=Tensor[(15, 11, 11), float32] */;
  %1408 = %1406.0;
  (%1407, %1408)
}

def @func_14974() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float32]) {
  %1409 = @func_4240() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %1410 = @func_14791() /* ty=(Tensor[(126), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float64]) */;
  %1411 = @func_6987() /* ty=(Tensor[(7, 3, 16), float32],) */;
  %1412 = %1409.1;
  %1413 = @func_3074() /* ty=Tensor[(15, 11, 11), float32] */;
  %1414 = %1410.1;
  %1415 = %1411.0;
  (%1412, %1413, %1414, %1415)
}

def @func_17859() -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) {
  %1416 = @func_14879() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(6, 5, 3), uint64]) */;
  %1417 = @func_8305() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) */;
  %1418 = @func_14324() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1419 = %1416.0;
  %1420 = %1417.0;
  %1421 = %1418.0;
  (%1419, %1420, %1421)
}

def @func_3955(%var_3903: Tensor[(126), float64], %var_3904: Tensor[(1, 792), float64], %var_3919: Tensor[(35), float64]) -> (Tensor[(15, 11, 11), float32], Tensor[(1, 14, 9), float64], Tensor[(126), float64], Tensor[(?, 792), bool], Tensor[(7, 5, ?), bool], Tensor[(35), float64], Tensor[(?, 792), float32]) {
  %1422 = @func_3748() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(792), float64], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(90), uint64]) */;
  %1423 = cast(%var_3903, dtype="float64") /* ty=Tensor[(126), float64] */;
  %1424 = cast(%var_3904, dtype="float64") /* ty=Tensor[(1, 792), float64] */;
  %1425 = reshape(%1423, newshape=[1, 14, 9]) /* ty=Tensor[(1, 14, 9), float64] */;
  %1426 = reshape(%1424, newshape=[792]) /* ty=Tensor[(792), float64] */;
  %1427 = @func_1060(%1425, %1426) /* ty=(Tensor[(1, 14, 9), float64], Tensor[(8, 11, 9), int8], Tensor[(792), float64]) */;
  %1428 = cast(%var_3904, dtype="float64") /* ty=Tensor[(1, 792), float64] */;
  %1429 = acos(%1428) /* ty=Tensor[(1, 792), float64] */;
  %1430 = cast(%1429, dtype="bool") /* ty=Tensor[(1, 792), bool] */;
  %1431 = shape_of(%var_3904, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1432 = cast(%var_3904, dtype="bool") /* ty=Tensor[(1, 792), bool] */;
  %1433 = dyn.reshape(%1430, %1431, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1434 = cast(%var_3919, dtype="float64") /* ty=Tensor[(35), float64] */;
  %1435 = cast(%var_3919, dtype="float64") /* ty=Tensor[(35), float64] */;
  %1436 = reshape(%1434, newshape=[7, 5, 1]) /* ty=Tensor[(7, 5, 1), float64] */;
  %1437 = reshape(%1435, newshape=[7, 5, 1]) /* ty=Tensor[(7, 5, 1), float64] */;
  %1438 = @func_2694(%1436, %1437) /* ty=(Tensor[(7, 5, ?), bool],) */;
  %1439 = cast(%var_3904, dtype="int32") /* ty=Tensor[(1, 792), int32] */;
  %1440 = shape_of(%1429, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1441 = cast(%1429, dtype="int32") /* ty=Tensor[(1, 792), int32] */;
  %1442 = dyn.reshape(%1439, %1440, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %1443 = bitwise_or(%1441, %1442) /* ty=Tensor[(?, 792), int32] */;
  %1444 = cast(%1443, dtype="float32") /* ty=Tensor[(?, 792), float32] */;
  %1445 = %1422.4;
  %1446 = %1427.0;
  %1447 = less(%1432, %1433) /* ty=Tensor[(?, 792), bool] */;
  %1448 = %1438.0;
  %1449 = cosh(%1444) /* ty=Tensor[(?, 792), float32] */;
  (%1445, %1446, %var_3903, %1447, %1448, %var_3919, %1449)
}

def @func_20976(%var_20951: Tensor[(13, 1, 14), uint8], %var_20952: Tensor[(13, 10, 14), uint8]) -> (Tensor[(13, 10, 14), uint8], Tensor[(320), float32]) {
  %1450 = cast(%var_20951, dtype="uint8") /* ty=Tensor[(13, 1, 14), uint8] */;
  %1451 = cast(%var_20952, dtype="uint8") /* ty=Tensor[(13, 10, 14), uint8] */;
  %1452 = @func_4607() /* ty=(Tensor[(7, 3, 16), int8], Tensor[(15, 11, 11), float32], Tensor[(1, 126), float64], Tensor[(7, 3, 16), int8], Tensor[(16, 5, 4), float32], Tensor[(320), float32]) */;
  %1453 = multiply(%1450, %1451) /* ty=Tensor[(13, 10, 14), uint8] */;
  %1454 = %1452.5;
  (%1453, %1454)
}

def @func_17894() -> Tensor[(90), uint64] {
  %1455 = @func_9213() /* ty=(Tensor[(90), uint64], Tensor[(15, 11, 11), float32]) */;
  %1455.0
}

def @func_5691() -> (Tensor[(15, 11, 11), bool],) {
  %1456 = @func_5103() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %1457 = %1456.0;
  (%1457,)
}

def @func_23735() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %1458 = @func_15054() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float64]) */;
  %1459 = @func_6349() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1460 = %1458.1;
  %1461 = %1459.0;
  (%1460, %1461)
}

def @func_12267() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(1008), float64]) {
  %1462 = cast(meta[relay.Constant][54] /* ty=Tensor[(1008), float64] */, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %1463 = reshape(%1462, newshape=[8, 126]) /* ty=Tensor[(8, 126), float64] */;
  %1464 = @func_7128(%1463) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(8, 126), int8]) */;
  %1465 = @func_6889() /* ty=Tensor[(15, 11, 11), float32] */;
  %1466 = %1464.0;
  (%1465, %1466, meta[relay.Constant][54] /* ty=Tensor[(1008), float64] */)
}

def @func_13219() -> (Tensor[(15, 11, 11), float32],) {
  %1467 = @func_7642() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %1468 = %1467.0;
  (%1468,)
}

def @func_5860() -> Tensor[(15, 11, 11), float32] {
  @func_3074() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_11173() -> Tensor[(15, 11, 11), float32] {
  %1469 = @func_7642() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %1469.1
}

def @func_3665() -> Tensor[(15, 11, 11), float32] {
  %1470 = @func_3160() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1470.0
}

def @func_19310() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %1471 = @func_4328() /* ty=(Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), float32]) */;
  %1472 = %1471.1;
  %1473 = @func_13393() /* ty=Tensor[(15, 11, 11), float32] */;
  (%1472, %1473)
}

def @func_12449() -> (Tensor[(15, 11, 11), float32], Tensor[(792), float64]) {
  %1474 = @func_8427() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(320), float32]) */;
  %1475 = @func_7447() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(792), float64]) */;
  %1476 = %1474.0;
  %1477 = %1475.1;
  (%1476, %1477)
}

def @func_21160() -> Tensor[(15, 11, 11), float32] {
  %1478 = @func_13832() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1478.0
}

def @func_18629() -> Tensor[(792), float64] {
  %1479 = @func_8687() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), uint64], Tensor[(792), float64]) */;
  %1479.2
}

def @func_12664(%var_12638: Tensor[(30), float32]) -> (Tensor[(15, 11, 11), float32], Tensor[(1, 14, 9), float64], Tensor[(126), float64], Tensor[(2, 1, 15), float32], Tensor[(30), float32], Tensor[(792), float64]) {
  %1480 = @func_12398() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %1481 = cast(meta[relay.Constant][55] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
  %1482 = reshape(%1481, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %1483 = @func_10054(%1482) /* ty=(Tensor[(15, 11, 11), bool], Tensor[(6, 5, 3), float64], Tensor[(90), uint64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(1, 14, 9), float64], Tensor[(126), float64]) */;
  %1484 = cast(%var_12638, dtype="float32") /* ty=Tensor[(30), float32] */;
  %1485 = reshape(%1484, newshape=[2, 1, 15]) /* ty=Tensor[(2, 1, 15), float32] */;
  %1486 = @func_7447() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(792), float64]) */;
  %1487 = %1480.0;
  %1488 = %1483.6;
  %1489 = @func_5670(%1485) /* ty=Tensor[(2, 1, 15), float32] */;
  %1490 = %1486.1;
  (%1487, %1488, meta[relay.Constant][55] /* ty=Tensor[(126), float64] */, %1489, %var_12638, %1490)
}

def @func_25129() -> Tensor[(15, 11, 11), float32] {
  %1491 = @func_18326() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1491.0
}

def @func_26521(%var_26486: Tensor[(16, 10, 15), int32]) -> (Tensor[(15, 11, 11), float32], Tensor[(16, 10, 15), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool]) {
  %1492 = cast(meta[relay.Constant][56] /* ty=Tensor[(16, 10, 15), int32] */, dtype="int32") /* ty=Tensor[(16, 10, 15), int32] */;
  %1493 = shape_of(%var_26486, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1494 = cast(%var_26486, dtype="int32") /* ty=Tensor[(16, 10, 15), int32] */;
  %1495 = dyn.reshape(%1492, %1493, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1496 = maximum(%1494, %1495) /* ty=Tensor[(16, 10, 15), int32] */;
  %1497 = cast(%1496, dtype="float32") /* ty=Tensor[(16, 10, 15), float32] */;
  %1498 = @func_11558() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) */;
  %1499 = @func_15264() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool]) */;
  %1500 = @func_10729() /* ty=Tensor[(15, 11, 11), float32] */;
  %1501 = log2(%1497) /* ty=Tensor[(16, 10, 15), float32] */;
  %1502 = %1498.2;
  %1503 = %1499.0;
  (%1500, %1501, %1502, %1503)
}

def @func_8334() -> (Tensor[(320), float32],) {
  %1504 = @func_7089() /* ty=(Tensor[(7, 3, 16), int8], Tensor[(6, 5, 3), float64], Tensor[(1815), bool], Tensor[(126), float64], Tensor[(320), float32], Tensor[(7, 3, 16), int8]) */;
  %1505 = %1504.4;
  (%1505,)
}

def @func_11256() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %1506 = @func_8268() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1507 = @func_10729() /* ty=Tensor[(15, 11, 11), float32] */;
  %1508 = %1506.0;
  (%1507, %1508)
}

def @func_17804() -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) {
  %1509 = @func_5896() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %1510 = @func_16689() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(90), uint64], Tensor[(15, 11, 11), float32]) */;
  %1511 = %1509.0;
  %1512 = %1510.2;
  (%1511, %1512)
}

def @func_15834() -> Tensor[(15, 11, 11), bool] {
  %1513 = @func_12017() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) */;
  %1513.0
}

def @func_18447() -> (Tensor[(15, 11, 11), float32], Tensor[(126), float64], Tensor[(6, 5, 3), float64], Tensor[(15, 11, 11), float32]) {
  %1514 = @func_14791() /* ty=(Tensor[(126), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float64]) */;
  %1515 = @func_13210() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64]) */;
  %1516 = @func_15748() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %1517 = @func_6889() /* ty=Tensor[(15, 11, 11), float32] */;
  %1518 = %1514.0;
  %1519 = %1515.1;
  %1520 = %1516.0;
  (%1517, %1518, %1519, %1520)
}

def @func_20532() -> (Tensor[(15, 11, 11), float32],) {
  %1521 = @func_15176() /* ty=Tensor[(15, 11, 11), float32] */;
  (%1521,)
}

def @func_9250(%var_9220: Tensor[(30), float32]) -> (Tensor[(15, 11, 11), float32], Tensor[(2, ?, 15), bool]) {
  %1522 = @func_6819() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1523 = cast(%var_9220, dtype="float32") /* ty=Tensor[(30), float32] */;
  %1524 = reshape(%1523, newshape=[2, 1, 15]) /* ty=Tensor[(2, 1, 15), float32] */;
  %1525 = @func_5670(%1524) /* ty=Tensor[(2, 1, 15), float32] */;
  %1526 = cast(%var_9220, dtype="bool") /* ty=Tensor[(30), bool] */;
  %1527 = shape_of(%1525, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1528 = cast(%1525, dtype="bool") /* ty=Tensor[(2, 1, 15), bool] */;
  %1529 = dyn.reshape(%1526, %1527, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1530 = %1522.0;
  %1531 = less(%1528, %1529) /* ty=Tensor[(2, ?, 15), bool] */;
  (%1530, %1531)
}

def @func_8972(%var_8913: Tensor[(1815), float32], %var_8928: Tensor[(2002), float32]) -> (Tensor[(15, 11, 11), float32], Tensor[(1815), float32], Tensor[(11, 14, 13), float32], Tensor[(2002), float32], Tensor[(?, 14, 8), uint64], Tensor[(?, 14, 8), float64]) {
  %1532 = cast(%var_8913, dtype="float32") /* ty=Tensor[(1815), float32] */;
  %1533 = reshape(%1532, newshape=[15, 11, 11]) /* ty=Tensor[(15, 11, 11), float32] */;
  %1534 = @func_5148(%1533) /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) */;
  %1535 = cast(%var_8928, dtype="float32") /* ty=Tensor[(2002), float32] */;
  %1536 = reshape(%1535, newshape=[11, 14, 13]) /* ty=Tensor[(11, 14, 13), float32] */;
  %1537 = @func_6564(%1536) /* ty=(Tensor[(11, 14, 13), float32],) */;
  %1538 = cast(meta[relay.Constant][57] /* ty=Tensor[(1, 14, 8), float64] */, dtype="float64") /* ty=Tensor[(1, 14, 8), float64] */;
  %1539 = sqrt(%1538) /* ty=Tensor[(1, 14, 8), float64] */;
  %1540 = cast(meta[relay.Constant][57] /* ty=Tensor[(1, 14, 8), float64] */, dtype="uint32") /* ty=Tensor[(1, 14, 8), uint32] */;
  %1541 = shape_of(%1539, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1542 = cast(%1539, dtype="uint32") /* ty=Tensor[(1, 14, 8), uint32] */;
  %1543 = dyn.reshape(%1540, %1541, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1544 = bitwise_or(%1542, %1543) /* ty=Tensor[(?, 14, 8), uint32] */;
  %1545 = cast(%1544, dtype="uint64") /* ty=Tensor[(?, 14, 8), uint64] */;
  %1546 = shape_of(%1539, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1547 = cast(%1539, dtype="uint64") /* ty=Tensor[(1, 14, 8), uint64] */;
  %1548 = dyn.reshape(%1545, %1546, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1549 = cast(%1544, dtype="float64") /* ty=Tensor[(?, 14, 8), float64] */;
  %1550 = asinh(%1549) /* ty=Tensor[(?, 14, 8), float64] */;
  %1551 = cast(%1550, dtype="float64") /* ty=Tensor[(?, 14, 8), float64] */;
  %1552 = %1534.1;
  %1553 = %1537.0;
  %1554 = right_shift(%1547, %1548) /* ty=Tensor[(?, 14, 8), uint64] */;
  %1555 = sigmoid(%1551) /* ty=Tensor[(?, 14, 8), float64] */;
  (%1552, %var_8913, %1553, %var_8928, %1554, %1555)
}

def @func_15124() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %1556 = @func_8816() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %1557 = @func_6765() /* ty=Tensor[(15, 11, 11), float32] */;
  %1558 = %1556.0;
  (%1557, %1558)
}

def @func_19202() -> (Tensor[(792), float64], Tensor[(15, 11, 11), float32]) {
  %1559 = @func_12449() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(792), float64]) */;
  %1560 = @func_11306() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %1561 = %1559.1;
  %1562 = %1560.0;
  (%1561, %1562)
}

def @func_21621() -> Tensor[(15, 11, 11), float32] {
  @func_7655() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_24450() -> (Tensor[(7, 3, 16), float32],) {
  %1563 = @func_15817() /* ty=(Tensor[(7, 3, 16), float64],) */;
  %1564 = %1563.0;
  %1565 = cast(%1564, dtype="float32") /* ty=Tensor[(7, 3, 16), float32] */;
  %1566 = asinh(%1565) /* ty=Tensor[(7, 3, 16), float32] */;
  (%1566,)
}

def @func_9296() -> (Tensor[(15, 11, 11), bool],) {
  %1567 = @func_5691() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %1568 = %1567.0;
  (%1568,)
}

def @func_12064() -> (Tensor[(792), float64],) {
  %1569 = @func_6090() /* ty=(Tensor[(792), float64],) */;
  %1570 = %1569.0;
  (%1570,)
}

def @func_17201() -> Tensor[(15, 11, 11), float32] {
  %1571 = @func_12932() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float64]) */;
  %1571.0
}

def @func_7614() -> (Tensor[(15, 11, 11), float32],) {
  %1572 = @func_4906() /* ty=Tensor[(15, 11, 11), float32] */;
  (%1572,)
}

def @func_10875(%var_10865: Tensor[(126), float64]) -> (Tensor[(15, 11, 11), float32], Tensor[(90), uint64], Tensor[(15, 11, 11), bool], Tensor[(126), float64]) {
  %1573 = @func_7744() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %1574 = @func_3748() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(792), float64], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(90), uint64]) */;
  %1575 = %1573.1;
  %1576 = cast(%1575, dtype="float32") /* ty=Tensor[(15, 11, 11), float32] */;
  %1577 = cast(%var_10865, dtype="float64") /* ty=Tensor[(126), float64] */;
  %1578 = reshape(%1576, newshape=[15, 11, 11]) /* ty=Tensor[(15, 11, 11), float32] */;
  %1579 = reshape(%1577, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %1580 = @func_4461(%1578, %1579) /* ty=(Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(126), float64], Tensor[(7, 3, 16), int8]) */;
  %1581 = %1574.5;
  %1582 = %1580.2;
  (%1575, %1581, %1582, %var_10865)
}

def @func_13529() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(1, 126), float64]) {
  %1583 = @func_3780() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %1584 = @func_4607() /* ty=(Tensor[(7, 3, 16), int8], Tensor[(15, 11, 11), float32], Tensor[(1, 126), float64], Tensor[(7, 3, 16), int8], Tensor[(16, 5, 4), float32], Tensor[(320), float32]) */;
  %1585 = @func_7214() /* ty=Tensor[(15, 11, 11), float32] */;
  %1586 = @func_13045() /* ty=Tensor[(15, 11, 11), float32] */;
  %1587 = %1583.0;
  %1588 = @func_2900() /* ty=Tensor[(15, 11, 11), float32] */;
  %1589 = %1584.2;
  (%1585, %1586, %1587, %1588, %1589)
}

def @func_17394(%var_17349: Tensor[(90), uint64], %var_17383: Tensor[(8, 78), float32]) -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(90), uint64], Tensor[(90), uint64], Tensor[(792), float64], Tensor[(8, 78), int8], Tensor[(8, 78), uint8]) {
  %1590 = @func_9085() /* ty=(Tensor[(7, 3, 16), float64], Tensor[(15, 11, 11), float32], Tensor[(126), float64]) */;
  %1591 = @func_5803() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1592 = cast(%var_17349, dtype="uint64") /* ty=Tensor[(90), uint64] */;
  %1593 = reshape(%1592, newshape=[90]) /* ty=Tensor[(90), uint64] */;
  %1594 = @func_3215(%1593) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), uint64], Tensor[(90), uint64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %1595 = cast(%var_17383, dtype="float32") /* ty=Tensor[(8, 78), float32] */;
  %1596 = reshape(%1595, newshape=[624]) /* ty=Tensor[(624), float32] */;
  %1597 = @func_15416(%1596) /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], float32, Tensor[(624), float32], Tensor[(13, 4, 13), float32], Tensor[(8, 13, 6), float64]) */;
  %1598 = %1597.2;
  %1599 = cast(%var_17383, dtype="int8") /* ty=Tensor[(8, 78), int8] */;
  %1600 = cast(%1598, dtype="int8") /* ty=int8 */;
  %1601 = cast(%var_17383, dtype="uint8") /* ty=Tensor[(8, 78), uint8] */;
  %1602 = cast(%1598, dtype="uint8") /* ty=uint8 */;
  %1603 = @func_15023() /* ty=Tensor[(15, 11, 11), float32] */;
  %1604 = %1590.1;
  %1605 = %1591.0;
  %1606 = %1594.2;
  %1607 = @func_15149() /* ty=Tensor[(792), float64] */;
  %1608 = subtract(%1599, %1600) /* ty=Tensor[(8, 78), int8] */;
  %1609 = logical_xor(%1601, %1602) /* ty=Tensor[(8, 78), uint8] */;
  (%1603, %1604, %1605, %1606, %var_17349, %1607, %1608, %1609)
}

def @func_12750() -> Tensor[(15, 11, 11), float32] {
  @func_10486() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_18326() -> (Tensor[(15, 11, 11), float32],) {
  %1610 = @func_9844() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1611 = %1610.0;
  (%1611,)
}

def @func_9678() -> (Tensor[(15, 11, 11), bool],) {
  %1612 = @func_7570() /* ty=Tensor[(15, 11, 11), bool] */;
  (%1612,)
}

def @func_24770() -> Tensor[(15, 11, 11), bool] {
  %1613 = @func_12731() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %1613.0
}

def @func_18478() -> Tensor[(15, 11, 11), float32] {
  %1614 = @func_14324() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1614.0
}

def @func_22218() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %1615 = @func_7898() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %1616 = @func_2978() /* ty=Tensor[(15, 11, 11), float32] */;
  %1617 = %1615.1;
  %1618 = @func_12750() /* ty=Tensor[(15, 11, 11), float32] */;
  (%1616, %1617, %1618)
}

def @func_16355() -> (Tensor[(15, 11, 11), float32],) {
  %1619 = @func_12267() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(1008), float64]) */;
  %1620 = %1619.0;
  (%1620,)
}

def @func_12484() -> (Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), bool]) {
  %1621 = @func_5438() /* ty=(Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), float64]) */;
  %1622 = %1621.0;
  %1623 = @func_10085() /* ty=Tensor[(15, 11, 11), bool] */;
  (%1622, %1623)
}

def @func_23207() -> (Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(320), float32]) {
  %1624 = @func_20319() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1625 = @func_8334() /* ty=(Tensor[(320), float32],) */;
  %1626 = %1624.0;
  %1627 = @func_8752() /* ty=Tensor[(6, 5, 3), float64] */;
  %1628 = %1625.0;
  (%1626, %1627, %1628)
}

def @func_26085() -> (Tensor[(7, 3, 16), float32], Tensor[(15, 11, 11), float32], Tensor[(320), float32]) {
  %1629 = @func_8157() /* ty=(Tensor[(7, 3, 16), float32], Tensor[(1, 14, 9), float64], Tensor[(126), float64]) */;
  %1630 = @func_8816() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %1631 = @func_7089() /* ty=(Tensor[(7, 3, 16), int8], Tensor[(6, 5, 3), float64], Tensor[(1815), bool], Tensor[(126), float64], Tensor[(320), float32], Tensor[(7, 3, 16), int8]) */;
  %1632 = %1629.0;
  %1633 = %1630.1;
  %1634 = %1631.4;
  (%1632, %1633, %1634)
}

def @func_16565() -> (Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float32]) {
  %1635 = @func_6987() /* ty=(Tensor[(7, 3, 16), float32],) */;
  %1636 = @func_2995() /* ty=Tensor[(15, 11, 11), float32] */;
  %1637 = %1635.0;
  (%1636, %1637)
}

def @func_18740(%var_18736: Tensor[(192), float32]) -> (Tensor[(15, 11, 11), float32], Tensor[(8, 8, 3), float32], Tensor[(192), float32]) {
  %1638 = @func_3461() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) */;
  %1639 = cast(%var_18736, dtype="float32") /* ty=Tensor[(192), float32] */;
  %1640 = reshape(%1639, newshape=[8, 8, 3]) /* ty=Tensor[(8, 8, 3), float32] */;
  %1641 = @func_12910(%1640) /* ty=(Tensor[(8, 8, 3), float32],) */;
  %1642 = %1638.0;
  %1643 = %1641.0;
  (%1642, %1643, %var_18736)
}

def @func_18394(%var_18369: Tensor[(2002), float32], %var_18373: Tensor[(5, 6), float32]) -> (Tensor[(15, 11, 11), float32], Tensor[(?, 14, 8), uint64], Tensor[(2002), float32], Tensor[(2, ?, 15), uint32]) {
  %1644 = @func_10199() /* ty=Tensor[(15, 11, 11), float32] */;
  %1645 = cast(%1644, dtype="float32") /* ty=Tensor[(15, 11, 11), float32] */;
  %1646 = cast(%var_18369, dtype="float32") /* ty=Tensor[(2002), float32] */;
  %1647 = reshape(%1645, newshape=[1815]) /* ty=Tensor[(1815), float32] */;
  %1648 = reshape(%1646, newshape=[2002]) /* ty=Tensor[(2002), float32] */;
  %1649 = @func_8972(%1647, %1648) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(1815), float32], Tensor[(11, 14, 13), float32], Tensor[(2002), float32], Tensor[(?, 14, 8), uint64], Tensor[(?, 14, 8), float64]) */;
  %1650 = cast(%var_18373, dtype="float32") /* ty=Tensor[(5, 6), float32] */;
  %1651 = reshape(%1650, newshape=[2, 1, 15]) /* ty=Tensor[(2, 1, 15), float32] */;
  %1652 = @func_5670(%1651) /* ty=Tensor[(2, 1, 15), float32] */;
  %1653 = cast(%var_18373, dtype="uint32") /* ty=Tensor[(5, 6), uint32] */;
  %1654 = shape_of(%1652, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1655 = cast(%1652, dtype="uint32") /* ty=Tensor[(2, 1, 15), uint32] */;
  %1656 = dyn.reshape(%1653, %1654, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1657 = %1649.4;
  %1658 = subtract(%1655, %1656) /* ty=Tensor[(2, ?, 15), uint32] */;
  (%1644, %1657, %var_18369, %1658)
}

def @func_9937(%var_9920: Tensor[(90, 1), uint64]) -> (Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(90, 1), uint64], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) {
  %1659 = cast(%var_9920, dtype="uint64") /* ty=Tensor[(90, 1), uint64] */;
  %1660 = cast(%var_9920, dtype="uint64") /* ty=Tensor[(90, 1), uint64] */;
  %1661 = reshape(%1659, newshape=[6, 5, 3]) /* ty=Tensor[(6, 5, 3), uint64] */;
  %1662 = reshape(%1660, newshape=[6, 5, 3]) /* ty=Tensor[(6, 5, 3), uint64] */;
  %1663 = @func_237(%1661, %1662) /* ty=(Tensor[(6, 5, 3), uint64], Tensor[(6, 5, 3), float64], Tensor[(6, 5, 3), float64]) */;
  %1664 = @func_5691() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %1665 = @func_4328() /* ty=(Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), float32]) */;
  %1666 = @func_8380() /* ty=Tensor[(15, 11, 11), float32] */;
  %1667 = %1663.1;
  %1668 = %1664.0;
  %1669 = %1665.1;
  (%1666, %1667, %var_9920, %1668, %1669)
}

def @func_22857() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %1670 = @func_13787() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1671 = @func_7756() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1672 = %1670.0;
  %1673 = %1671.0;
  (%1672, %1673)
}

def @func_6987() -> (Tensor[(7, 3, 16), float32],) {
  %1674 = @func_5967() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(7, 3, 16), float32], Tensor[(15, 11, 11), bool]) */;
  %1675 = %1674.1;
  (%1675,)
}

def @func_6317(%var_6314: Tensor[(90), uint64]) -> (Tensor[(792), float64], Tensor[(15, 11, 11), float32], Tensor[(90), uint64]) {
  %1676 = @func_6090() /* ty=(Tensor[(792), float64],) */;
  %1677 = cast(%var_6314, dtype="uint64") /* ty=Tensor[(90), uint64] */;
  %1678 = reshape(%1677, newshape=[90]) /* ty=Tensor[(90), uint64] */;
  %1679 = @func_3215(%1678) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), uint64], Tensor[(90), uint64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %1680 = %1676.0;
  %1681 = %1679.3;
  (%1680, %1681, %var_6314)
}

def @func_20319() -> (Tensor[(15, 11, 11), float32],) {
  %1682 = @func_13529() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(1, 126), float64]) */;
  %1683 = %1682.1;
  (%1683,)
}

def @func_6128() -> Tensor[(7, 3, 16), float64] {
  %1684 = @func_5967() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(7, 3, 16), float32], Tensor[(15, 11, 11), bool]) */;
  %1685 = %1684.1;
  %1686 = cast(%1685, dtype="float64") /* ty=Tensor[(7, 3, 16), float64] */;
  atan(%1686) /* ty=Tensor[(7, 3, 16), float64] */
}

def @func_23601(%var_23593: Tensor[(30, 1), float32]) -> (Tensor[(15, 11, 11), float32], Tensor[(2, ?, 15), bool], Tensor[(30, 1), float32]) {
  %1687 = @func_14811() /* ty=(Tensor[(792), float64], Tensor[(15, 11, 11), float32]) */;
  %1688 = cast(%var_23593, dtype="float32") /* ty=Tensor[(30, 1), float32] */;
  %1689 = reshape(%1688, newshape=[30]) /* ty=Tensor[(30), float32] */;
  %1690 = @func_9250(%1689) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(2, ?, 15), bool]) */;
  %1691 = %1687.1;
  %1692 = %1690.1;
  (%1691, %1692, %var_23593)
}

def @func_18893(%var_18871: Tensor[(126), float64]) -> (Tensor[(90), uint64], Tensor[(126), float64], Tensor[(1815), float32], Tensor[(126), float64], Tensor[(15, 11, 11), float32]) {
  %1693 = @func_3748() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(792), float64], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(90), uint64]) */;
  %1694 = cast(meta[relay.Constant][58] /* ty=Tensor[(1815), float32] */, dtype="float32") /* ty=Tensor[(1815), float32] */;
  %1695 = cast(%var_18871, dtype="float64") /* ty=Tensor[(126), float64] */;
  %1696 = reshape(%1694, newshape=[15, 11, 11]) /* ty=Tensor[(15, 11, 11), float32] */;
  %1697 = reshape(%1695, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %1698 = @func_4461(%1696, %1697) /* ty=(Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(126), float64], Tensor[(7, 3, 16), int8]) */;
  %1699 = @func_18326() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1700 = %1693.5;
  %1701 = %1698.5;
  %1702 = %1699.0;
  (%1700, %1701, meta[relay.Constant][58] /* ty=Tensor[(1815), float32] */, %var_18871, %1702)
}

def @func_15817() -> (Tensor[(7, 3, 16), float64],) {
  %1703 = @func_15054() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float64]) */;
  %1704 = %1703.2;
  (%1704,)
}

def @func_17085() -> (Tensor[(792), float64], Tensor[(15, 11, 11), float32]) {
  %1705 = @func_11467() /* ty=(Tensor[(320), float32], Tensor[(15, 11, 11), float32]) */;
  %1706 = @func_15149() /* ty=Tensor[(792), float64] */;
  %1707 = %1705.1;
  (%1706, %1707)
}

def @func_20229() -> (Tensor[(792), float64],) {
  %1708 = @func_15149() /* ty=Tensor[(792), float64] */;
  (%1708,)
}

def @func_22727() -> (Tensor[(15, 11, 11), float32],) {
  %1709 = @func_21621() /* ty=Tensor[(15, 11, 11), float32] */;
  (%1709,)
}

def @func_6265() -> (Tensor[(15, 11, 11), float32],) {
  %1710 = @func_5349() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %1711 = %1710.0;
  (%1711,)
}

def @func_12731() -> (Tensor[(15, 11, 11), bool],) {
  %1712 = @func_12522() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %1713 = %1712.0;
  (%1713,)
}

def @func_14285() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %1714 = @func_13832() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1715 = @func_12398() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %1716 = %1714.0;
  %1717 = %1715.0;
  (%1716, %1717)
}

def @func_20735() -> (Tensor[(15, 11, 11), float32],) {
  %1718 = @func_17859() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) */;
  %1719 = %1718.2;
  (%1719,)
}

def @func_24186() -> Tensor[(126), float64] {
  @func_19770() /* ty=Tensor[(126), float64] */
}

def @func_24544() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) {
  %1720 = @func_5349() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %1721 = @func_6800() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool]) */;
  %1722 = %1720.2;
  %1723 = %1721.1;
  (%1722, %1723)
}

def @func_3438(%var_3417: Tensor[(792), float64], %var_3431: Tensor[(3, 30), uint64]) -> (Tensor[(15, 11, 11), float32], Tensor[(792), float64], Tensor[(126), float64], Tensor[(792), float64], Tensor[(6, 5, 3), uint64], Tensor[(3, 30), uint64]) {
  %1724 = @func_3160() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1725 = cast(meta[relay.Constant][59] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
  %1726 = cast(%var_3417, dtype="float64") /* ty=Tensor[(792), float64] */;
  %1727 = reshape(%1725, newshape=[1, 14, 9]) /* ty=Tensor[(1, 14, 9), float64] */;
  %1728 = reshape(%1726, newshape=[792]) /* ty=Tensor[(792), float64] */;
  %1729 = @func_1060(%1727, %1728) /* ty=(Tensor[(1, 14, 9), float64], Tensor[(8, 11, 9), int8], Tensor[(792), float64]) */;
  %1730 = cast(%var_3431, dtype="uint64") /* ty=Tensor[(3, 30), uint64] */;
  %1731 = reshape(%1730, newshape=[90]) /* ty=Tensor[(90), uint64] */;
  %1732 = @func_3215(%1731) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), uint64], Tensor[(90), uint64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %1733 = %1724.0;
  %1734 = %1729.2;
  %1735 = %1732.1;
  (%1733, %1734, meta[relay.Constant][59] /* ty=Tensor[(126), float64] */, %var_3417, %1735, %var_3431)
}

def @func_12522() -> (Tensor[(15, 11, 11), bool],) {
  %1736 = @func_5896() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %1737 = %1736.0;
  (%1737,)
}

def @func_3160() -> (Tensor[(15, 11, 11), float32],) {
  %1738 = @func_3074() /* ty=Tensor[(15, 11, 11), float32] */;
  (%1738,)
}

def @func_19829() -> (Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %1739 = @func_5438() /* ty=(Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), float64]) */;
  %1740 = @func_17623() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool]) */;
  %1741 = @func_9844() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1742 = @func_6394() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %1743 = %1739.0;
  %1744 = @func_15023() /* ty=Tensor[(15, 11, 11), float32] */;
  %1745 = %1740.3;
  %1746 = %1741.0;
  %1747 = %1742.0;
  (%1743, %1744, %1745, %1746, %1747)
}

def @func_25544() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(3, 15, 3), int64], Tensor[(135), int64]) {
  %1748 = @func_17934() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) */;
  %1749 = @func_14670() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %1750 = cast(meta[relay.Constant][60] /* ty=Tensor[(135), int64] */, dtype="int64") /* ty=Tensor[(135), int64] */;
  %1751 = reshape(%1750, newshape=[3, 15, 3]) /* ty=Tensor[(3, 15, 3), int64] */;
  %1752 = @func_23508(%1751) /* ty=(Tensor[(3, 15, 3), int64],) */;
  %1753 = @func_10486() /* ty=Tensor[(15, 11, 11), float32] */;
  %1754 = %1748.0;
  %1755 = %1749.0;
  %1756 = %1752.0;
  (%1753, %1754, %1755, %1756, meta[relay.Constant][60] /* ty=Tensor[(135), int64] */)
}

def @func_8070() -> Tensor[(15, 11, 11), float32] {
  @func_4906() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_6819() -> (Tensor[(15, 11, 11), float32],) {
  %1757 = @func_3780() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %1758 = %1757.1;
  (%1758,)
}

def @func_17128() -> Tensor[(15, 11, 11), float32] {
  %1759 = @func_13832() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1759.0
}

def @func_23441() -> (Tensor[(15, 11, 11), float32],) {
  %1760 = @func_8427() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(320), float32]) */;
  %1761 = %1760.0;
  (%1761,)
}

def @func_7447() -> (Tensor[(15, 11, 11), bool], Tensor[(792), float64]) {
  %1762 = @func_5896() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %1763 = @func_4949() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), uint64], Tensor[(792), float64]) */;
  %1764 = %1762.0;
  %1765 = %1763.2;
  (%1764, %1765)
}

def @func_19039() -> (Tensor[(15, 11, 11), float32],) {
  %1766 = @func_9844() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1767 = %1766.0;
  (%1767,)
}

def @func_8305() -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) {
  %1768 = @func_5103() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %1769 = @func_6635() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1770 = %1768.0;
  %1771 = %1769.0;
  (%1770, %1771)
}

def @func_20052() -> Tensor[(6, 5, 3), float64] {
  @func_19438() /* ty=Tensor[(6, 5, 3), float64] */
}

def @func_23672() -> (Tensor[(15, 11, 11), float64], Tensor[(8, 15, 15), float64], Tensor[(18, 100), float64]) {
  %1772 = @func_22631() /* ty=(Tensor[(15, 11, 11), float64],) */;
  %1773 = cast(meta[relay.Constant][61] /* ty=Tensor[(18, 100), float64] */, dtype="float64") /* ty=Tensor[(18, 100), float64] */;
  %1774 = reshape(%1773, newshape=[8, 15, 15]) /* ty=Tensor[(8, 15, 15), float64] */;
  %1775 = %1772.0;
  %1776 = @func_15438(%1774) /* ty=Tensor[(8, 15, 15), float64] */;
  (%1775, %1776, meta[relay.Constant][61] /* ty=Tensor[(18, 100), float64] */)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_24770() -> Tensor[(15, 11, 11), bool] {
  %0 = @func_12731() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %0.0
}

def @func_24421() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  @func_24419() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */
}

def @func_7616() -> (Tensor[(15, 11, 11), float32],) {
  @func_7614() /* ty=(Tensor[(15, 11, 11), float32],) */
}

def @func_11175() -> Tensor[(15, 11, 11), float32] {
  @func_11173() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_5349() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %1 = @func_4741() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), int8]) */;
  %2 = %1.0;
  %3 = cast(%2, dtype="float32") /* ty=Tensor[(15, 11, 11), float32] */;
  %4 = atan(%3) /* ty=Tensor[(15, 11, 11), float32] */;
  %5 = cast(%4, dtype="float32") /* ty=Tensor[(15, 11, 11), float32] */;
  %6 = reshape(%5, newshape=[15, 11, 11]) /* ty=Tensor[(15, 11, 11), float32] */;
  %7 = @func_5148(%6) /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) */;
  %8 = %7.1;
  %9 = @func_4906() /* ty=Tensor[(15, 11, 11), float32] */;
  %10 = @func_3074() /* ty=Tensor[(15, 11, 11), float32] */;
  (%4, %8, %9, %10)
}

def @func_4908() -> Tensor[(15, 11, 11), float32] {
  @func_4906() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_11560() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) {
  @func_11558() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) */
}

def @func_20020() -> Tensor[(15, 11, 11), float32] {
  %11 = @func_11467() /* ty=(Tensor[(320), float32], Tensor[(15, 11, 11), float32]) */;
  %11.1
}

def @func_22478() -> Tensor[(15, 11, 11), float32] {
  %12 = fn () -> Tensor[(15, 11, 11), float32] {
    @func_21132() /* ty=Tensor[(15, 11, 11), float32] */
  };
  %12() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_12269() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(1008), float64]) {
  @func_12267() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(1008), float64]) */
}

def @func_21377() -> (Tensor[(15, 11, 11), float32],) {
  %14 = fn () -> (Tensor[(15, 11, 11), float32],) {
    %13 = @func_13393() /* ty=Tensor[(15, 11, 11), float32] */;
    (%13,)
  };
  %14() /* ty=(Tensor[(15, 11, 11), float32],) */
}

def @func_24246() -> (Tensor[(15, 11, 11), float32],) {
  %16 = fn () -> (Tensor[(15, 11, 11), float32],) {
    %15 = @func_21160() /* ty=Tensor[(15, 11, 11), float32] */;
    (%15,)
  };
  %16() /* ty=(Tensor[(15, 11, 11), float32],) */
}

def @func_24811() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) {
  %20 = fn () -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) {
    %17 = @func_7447() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(792), float64]) */;
    %18 = @func_16993() /* ty=Tensor[(15, 11, 11), float32] */;
    %19 = %17.0;
    (%18, %19)
  };
  %20() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) */
}

def @func_22363() -> (Tensor[(15, 11, 11), float32],) {
  %21 = @func_18478() /* ty=Tensor[(15, 11, 11), float32] */;
  (%21,)
}

def @func_23365() -> (Tensor[(320), float32],) {
  %24 = fn () -> (Tensor[(320), float32],) {
    %22 = @func_23207() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(320), float32]) */;
    %23 = %22.2;
    (%23,)
  };
  %24() /* ty=(Tensor[(320), float32],) */
}

def @func_7898() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %25 = @func_7744() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %26 = @func_4240() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %27 = %25.1;
  %28 = @func_5860() /* ty=Tensor[(15, 11, 11), float32] */;
  %29 = %26.0;
  (%27, %28, %29)
}

def @func_19749(%var_19737: Tensor[(8, 2, 12), float32]) -> (Tensor[(8, 2, 12), float32], Tensor[(1, 126), float64]) {
  %30 = cast(%var_19737, dtype="float32") /* ty=Tensor[(8, 2, 12), float32] */;
  %31 = log2(%30) /* ty=Tensor[(8, 2, 12), float32] */;
  %32 = @func_5073() /* ty=Tensor[(1, 126), float64] */;
  (%31, %32)
}

def @func_24187() -> Tensor[(126), float64] {
  %33 = fn () -> Tensor[(126), float64] {
    @func_19770() /* ty=Tensor[(126), float64] */
  };
  %33() /* ty=Tensor[(126), float64] */
}

def @func_5198() -> (Tensor[(15, 11, 11), bool],) {
  %34 = @func_5103() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %35 = %34.0;
  (%35,)
}

def @func_20231() -> (Tensor[(792), float64],) {
  @func_20229() /* ty=(Tensor[(792), float64],) */
}

def @func_7089() -> (Tensor[(7, 3, 16), int8], Tensor[(6, 5, 3), float64], Tensor[(1815), bool], Tensor[(126), float64], Tensor[(320), float32], Tensor[(7, 3, 16), int8]) {
  %36 = @func_4741() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), int8]) */;
  %37 = cast(meta[relay.Constant][0] /* ty=Tensor[(1815), bool] */, dtype="bool") /* ty=Tensor[(1815), bool] */;
  %38 = cast(meta[relay.Constant][1] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
  %39 = cast(meta[relay.Constant][2] /* ty=Tensor[(320), float32] */, dtype="float32") /* ty=Tensor[(320), float32] */;
  %40 = reshape(%37, newshape=[15, 11, 11]) /* ty=Tensor[(15, 11, 11), bool] */;
  %41 = reshape(%38, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %42 = reshape(%39, newshape=[80, 4]) /* ty=Tensor[(80, 4), float32] */;
  %43 = @func_4196(%40, %41, %42) /* ty=(Tensor[(126), float64], Tensor[(80, 4), float32], Tensor[(15, 11, 11), float64], Tensor[(6, 5, 3), float64]) */;
  %44 = @func_4371() /* ty=(Tensor[(7, 3, 16), int8],) */;
  %45 = %36.1;
  %46 = %43.3;
  %47 = %44.0;
  (%45, %46, meta[relay.Constant][0] /* ty=Tensor[(1815), bool] */, meta[relay.Constant][1] /* ty=Tensor[(126), float64] */, meta[relay.Constant][2] /* ty=Tensor[(320), float32] */, %47)
}

def @func_26085() -> (Tensor[(7, 3, 16), float32], Tensor[(15, 11, 11), float32], Tensor[(320), float32]) {
  %48 = @func_8157() /* ty=(Tensor[(7, 3, 16), float32], Tensor[(1, 14, 9), float64], Tensor[(126), float64]) */;
  %49 = @func_8816() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %50 = @func_7089() /* ty=(Tensor[(7, 3, 16), int8], Tensor[(6, 5, 3), float64], Tensor[(1815), bool], Tensor[(126), float64], Tensor[(320), float32], Tensor[(7, 3, 16), int8]) */;
  %51 = %48.0;
  %52 = %49.1;
  %53 = %50.4;
  (%51, %52, %53)
}

def @func_9214() -> (Tensor[(90), uint64], Tensor[(15, 11, 11), float32]) {
  %57 = fn () -> (Tensor[(90), uint64], Tensor[(15, 11, 11), float32]) {
    %54 = @func_3748() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(792), float64], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(90), uint64]) */;
    %55 = %54.5;
    %56 = @func_5860() /* ty=Tensor[(15, 11, 11), float32] */;
    (%55, %56)
  };
  %57() /* ty=(Tensor[(90), uint64], Tensor[(15, 11, 11), float32]) */
}

def @func_5969() -> (Tensor[(15, 11, 11), bool], Tensor[(7, 3, 16), float32], Tensor[(15, 11, 11), bool]) {
  @func_5967() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(7, 3, 16), float32], Tensor[(15, 11, 11), bool]) */
}

def @func_25842() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float32]) {
  %58 = @func_15176() /* ty=Tensor[(15, 11, 11), float32] */;
  %59 = @func_22400() /* ty=Tensor[(15, 11, 11), float32] */;
  %60 = @func_21955() /* ty=Tensor[(7, 3, 16), float32] */;
  (%58, %59, %60)
}

def @func_6590() -> (Tensor[(1, 126), float64],) {
  %63 = fn () -> (Tensor[(1, 126), float64],) {
    %61 = @func_4607() /* ty=(Tensor[(7, 3, 16), int8], Tensor[(15, 11, 11), float32], Tensor[(1, 126), float64], Tensor[(7, 3, 16), int8], Tensor[(16, 5, 4), float32], Tensor[(320), float32]) */;
    %62 = %61.2;
    (%62,)
  };
  %63() /* ty=(Tensor[(1, 126), float64],) */
}

def @func_12160(%var_12158: Tensor[(2, 504), float64]) -> (Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(2, 504), float64]) {
  @func_12157(%var_12158) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(2, 504), float64]) */
}

def @func_2697(%var_2695: Tensor[(7, 5, 1), float64], %var_2696: Tensor[(7, 5, 1), float64]) -> (Tensor[(7, 5, ?), bool],) {
  %69 = fn (%var_2682: Tensor[(7, 5, 1), float64], %var_2683: Tensor[(7, 5, 1), float64]) -> (Tensor[(7, 5, ?), bool],) {
    %64 = cast(%var_2683, dtype="bool") /* ty=Tensor[(7, 5, 1), bool] */;
    %65 = shape_of(%var_2682, dtype="int32") /* ty=Tensor[(3), int32] */;
    %66 = cast(%var_2682, dtype="bool") /* ty=Tensor[(7, 5, 1), bool] */;
    %67 = dyn.reshape(%64, %65, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %68 = not_equal(%66, %67) /* ty=Tensor[(7, 5, ?), bool] */;
    (%68,)
  };
  %69(%var_2695, %var_2696) /* ty=(Tensor[(7, 5, ?), bool],) */
}

def @func_19830() -> (Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %79 = fn () -> (Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
    %70 = @func_5438() /* ty=(Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), float64]) */;
    %71 = @func_17623() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool]) */;
    %72 = @func_9844() /* ty=(Tensor[(15, 11, 11), float32],) */;
    %73 = @func_6394() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
    %74 = %70.0;
    %75 = @func_15023() /* ty=Tensor[(15, 11, 11), float32] */;
    %76 = %71.3;
    %77 = %72.0;
    %78 = %73.0;
    (%74, %75, %76, %77, %78)
  };
  %79() /* ty=(Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */
}

def @func_15697() -> Tensor[(15, 11, 11), float32] {
  @func_2900() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_19056() -> Tensor[(15, 11, 11), float64] {
  @func_19054() /* ty=Tensor[(15, 11, 11), float64] */
}

def @func_15565() -> (Tensor[(15, 11, 11), bool],) {
  @func_15563() /* ty=(Tensor[(15, 11, 11), bool],) */
}

def @func_21407() -> (Tensor[(15, 11, 11), bool],) {
  @func_21405() /* ty=(Tensor[(15, 11, 11), bool],) */
}

def @func_14121(%var_14120: Tensor[(5, 13, 7), int16]) -> (Tensor[(5, 13, 7), int16],) {
  %85 = fn (%var_14110: Tensor[(5, 13, 7), int16]) -> (Tensor[(5, 13, 7), int16],) {
    %80 = cast(%var_14110, dtype="int16") /* ty=Tensor[(5, 13, 7), int16] */;
    %81 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(5, 13, 7), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %82 = cast(meta[relay.Constant][3] /* ty=Tensor[(5, 13, 7), int16] */, dtype="int16") /* ty=Tensor[(5, 13, 7), int16] */;
    %83 = dyn.reshape(%80, %81, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %84 = add(%82, %83) /* ty=Tensor[(5, 13, 7), int16] */;
    (%84,)
  };
  %85(%var_14120) /* ty=(Tensor[(5, 13, 7), int16],) */
}

def @func_21733() -> (Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), uint64]) {
  %90 = fn () -> (Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), uint64]) {
    %86 = @func_13787() /* ty=(Tensor[(15, 11, 11), float32],) */;
    %87 = @func_14879() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(6, 5, 3), uint64]) */;
    %88 = %86.0;
    %89 = %87.1;
    (%88, %89)
  };
  %90() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), uint64]) */
}

def @func_20534() -> (Tensor[(15, 11, 11), float32],) {
  @func_20532() /* ty=(Tensor[(15, 11, 11), float32],) */
}

def @func_21651() -> Tensor[(15, 11, 11), float32] {
  %92 = fn () -> Tensor[(15, 11, 11), float32] {
    %91 = @func_18677() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) */;
    %91.2
  };
  %92() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_11409() -> Tensor[(15, 11, 11), bool] {
  %94 = fn () -> Tensor[(15, 11, 11), bool] {
    %93 = @func_3322() /* ty=(Tensor[(15, 11, 11), bool],) */;
    %93.0
  };
  %94() /* ty=Tensor[(15, 11, 11), bool] */
}

def @func_25424() -> Tensor[(6, 5, 3), float64] {
  @func_25422() /* ty=Tensor[(6, 5, 3), float64] */
}

def @func_11066() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) {
  %95 = @func_6349() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %96 = @func_9678() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %97 = @func_10446() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %98 = @func_8380() /* ty=Tensor[(15, 11, 11), float32] */;
  %99 = %95.0;
  %100 = %96.0;
  %101 = %97.0;
  (%98, %99, %100, %101)
}

def @func_18328() -> (Tensor[(15, 11, 11), float32],) {
  @func_18326() /* ty=(Tensor[(15, 11, 11), float32],) */
}

def @func_8158() -> (Tensor[(7, 3, 16), float32], Tensor[(1, 14, 9), float64], Tensor[(126), float64]) {
  %108 = fn () -> (Tensor[(7, 3, 16), float32], Tensor[(1, 14, 9), float64], Tensor[(126), float64]) {
    %102 = @func_6987() /* ty=(Tensor[(7, 3, 16), float32],) */;
    %103 = cast(meta[relay.Constant][4] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
    %104 = reshape(%103, newshape=[126]) /* ty=Tensor[(126), float64] */;
    %105 = @func_4266(%104) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(1, 14, 9), float64], Tensor[(126), float64], Tensor[(792), float64]) */;
    %106 = %102.0;
    %107 = %105.1;
    (%106, %107, meta[relay.Constant][4] /* ty=Tensor[(126), float64] */)
  };
  %108() /* ty=(Tensor[(7, 3, 16), float32], Tensor[(1, 14, 9), float64], Tensor[(126), float64]) */
}

def @func_12524() -> (Tensor[(15, 11, 11), bool],) {
  @func_12522() /* ty=(Tensor[(15, 11, 11), bool],) */
}

def @func_6130() -> Tensor[(7, 3, 16), float64] {
  @func_6128() /* ty=Tensor[(7, 3, 16), float64] */
}

def @func_18114() -> (Tensor[(15, 11, 11), float32],) {
  %110 = fn () -> (Tensor[(15, 11, 11), float32],) {
    %109 = @func_7426() /* ty=Tensor[(15, 11, 11), float32] */;
    (%109,)
  };
  %110() /* ty=(Tensor[(15, 11, 11), float32],) */
}

def @func_21769() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %111 = @func_13529() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(1, 126), float64]) */;
  %112 = @func_20735() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %113 = %111.3;
  %114 = %112.0;
  (%113, %114)
}

def @func_24034() -> (Tensor[(15, 11, 11), bool],) {
  %115 = @func_5967() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(7, 3, 16), float32], Tensor[(15, 11, 11), bool]) */;
  %116 = %115.0;
  (%116,)
}

def @func_2979() -> Tensor[(15, 11, 11), float32] {
  %117 = fn () -> Tensor[(15, 11, 11), float32] {
    @func_2900() /* ty=Tensor[(15, 11, 11), float32] */
  };
  %117() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_12157(%var_12151: Tensor[(2, 504), float64]) -> (Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(2, 504), float64]) {
  %118 = @func_9352() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %119 = cast(%var_12151, dtype="float64") /* ty=Tensor[(2, 504), float64] */;
  %120 = reshape(%119, newshape=[504, 2]) /* ty=Tensor[(504, 2), float64] */;
  %121 = @func_9809(%120) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(7, 3, 16), float64], Tensor[(15, 11, 11), float32], Tensor[(504, 2), float64], Tensor[(320), float32]) */;
  %122 = %118.0;
  %123 = %121.1;
  (%122, %123, %var_12151)
}

def @func_23601(%var_23593: Tensor[(30, 1), float32]) -> (Tensor[(15, 11, 11), float32], Tensor[(2, ?, 15), bool], Tensor[(30, 1), float32]) {
  %124 = @func_14811() /* ty=(Tensor[(792), float64], Tensor[(15, 11, 11), float32]) */;
  %125 = cast(%var_23593, dtype="float32") /* ty=Tensor[(30, 1), float32] */;
  %126 = reshape(%125, newshape=[30]) /* ty=Tensor[(30), float32] */;
  %127 = @func_9250(%126) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(2, ?, 15), bool]) */;
  %128 = %124.1;
  %129 = %127.1;
  (%128, %129, %var_23593)
}

def @func_15241() -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool]) {
  %130 = @func_10639() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) */;
  %131 = @func_7570() /* ty=Tensor[(15, 11, 11), bool] */;
  %132 = %130.2;
  (%131, %132)
}

def @func_19438() -> Tensor[(6, 5, 3), float64] {
  @func_8752() /* ty=Tensor[(6, 5, 3), float64] */
}

def @func_9595() -> Tensor[(15, 11, 11), bool] {
  @func_9593() /* ty=Tensor[(15, 11, 11), bool] */
}

def @func_19424() -> (Tensor[(15, 11, 11), float32],) {
  %135 = fn () -> (Tensor[(15, 11, 11), float32],) {
    %133 = @func_18326() /* ty=(Tensor[(15, 11, 11), float32],) */;
    %134 = %133.0;
    (%134,)
  };
  %135() /* ty=(Tensor[(15, 11, 11), float32],) */
}

def @func_25051() -> Tensor[(90), uint64] {
  %137 = fn () -> Tensor[(90), uint64] {
    %136 = @func_18078() /* ty=(Tensor[(90), uint64], Tensor[(15, 11, 11), float32]) */;
    %136.0
  };
  %137() /* ty=Tensor[(90), uint64] */
}

def @func_5105() -> (Tensor[(15, 11, 11), bool],) {
  @func_5103() /* ty=(Tensor[(15, 11, 11), bool],) */
}

def @func_4269(%var_4267: Tensor[(126), float64]) -> (Tensor[(15, 11, 11), float32], Tensor[(1, 14, 9), float64], Tensor[(126), float64], Tensor[(792), float64]) {
  @func_4266(%var_4267) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(1, 14, 9), float64], Tensor[(126), float64], Tensor[(792), float64]) */
}

def @func_13593() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(7, 3, 16), float64], Tensor[(6, 5, 3), float32], Tensor[(792), float64]) {
  %152 = fn () -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(7, 3, 16), float64], Tensor[(6, 5, 3), float32], Tensor[(792), float64]) {
    %138 = @func_10360() /* ty=(Tensor[(15, 11, 11), float32],) */;
    %139 = @func_3322() /* ty=(Tensor[(15, 11, 11), bool],) */;
    %140 = @func_7386() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float64]) */;
    %141 = @func_10284() /* ty=(Tensor[(6, 5, 3), float64], Tensor[(15, 11, 11), float32]) */;
    %142 = %141.0;
    %143 = cast(%142, dtype="float32") /* ty=Tensor[(6, 5, 3), float32] */;
    %144 = asin(%143) /* ty=Tensor[(6, 5, 3), float32] */;
    %145 = cast(%144, dtype="float32") /* ty=Tensor[(6, 5, 3), float32] */;
    %146 = @func_6090() /* ty=(Tensor[(792), float64],) */;
    %147 = %138.0;
    %148 = %139.0;
    %149 = %140.1;
    %150 = exp(%145) /* ty=Tensor[(6, 5, 3), float32] */;
    %151 = %146.0;
    (%147, %148, %149, %150, %151)
  };
  %152() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(7, 3, 16), float64], Tensor[(6, 5, 3), float32], Tensor[(792), float64]) */
}

def @func_11469() -> (Tensor[(320), float32], Tensor[(15, 11, 11), float32]) {
  @func_11467() /* ty=(Tensor[(320), float32], Tensor[(15, 11, 11), float32]) */
}

def @func_10641() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) {
  @func_10639() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) */
}

def @func_15563() -> (Tensor[(15, 11, 11), bool],) {
  %153 = @func_8857() /* ty=Tensor[(15, 11, 11), bool] */;
  (%153,)
}

def @func_16883() -> (Tensor[(15, 11, 11), float64],) {
  %154 = @func_15894() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %155 = %154.0;
  %156 = cast(%155, dtype="float64") /* ty=Tensor[(15, 11, 11), float64] */;
  %157 = asinh(%156) /* ty=Tensor[(15, 11, 11), float64] */;
  (%157,)
}

def @func_25735() -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool]) {
  %162 = fn () -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool]) {
    %158 = @func_24686() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(792), float64]) */;
    %159 = @func_22101() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), bool]) */;
    %160 = %158.0;
    %161 = %159.2;
    (%160, %161)
  };
  %162() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool]) */
}

def @func_7917() -> Tensor[(15, 11, 11), bool] {
  %163 = @func_6148() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %163.0
}

def @func_9377() -> (Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float32]) {
  @func_9375() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float32]) */
}

def @func_8071() -> Tensor[(15, 11, 11), float32] {
  %164 = fn () -> Tensor[(15, 11, 11), float32] {
    @func_4906() /* ty=Tensor[(15, 11, 11), float32] */
  };
  %164() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_11068() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) {
  @func_11066() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) */
}

def @func_8668(%var_8602: Tensor[(320), float32], %var_8650: Tensor[(15, 6), uint64]) -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(320), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float64], Tensor[(792), float64], Tensor[(15, 6), uint64], Tensor[(3, 42), float64]) {
  %165 = @func_6635() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %166 = @func_3322() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %167 = cast(meta[relay.Constant][5] /* ty=Tensor[(3, 42), float64] */, dtype="float64") /* ty=Tensor[(3, 42), float64] */;
  %168 = cast(%var_8602, dtype="float32") /* ty=Tensor[(320), float32] */;
  %169 = reshape(%167, newshape=[21, 6]) /* ty=Tensor[(21, 6), float64] */;
  %170 = reshape(%168, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %171 = @func_4072(%169, %170) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(8, 11, 9), int8], Tensor[(792), float64], Tensor[(15, 11, 11), float32], Tensor[(792), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(35), float64], Tensor[(16, 5, 4), float32], Tensor[(320), float32], Tensor[(21, 6), float32], Tensor[(15, 11, 11), float32], Tensor[(792), float64], Tensor[(16, 5, 4), float32]) */;
  %172 = @func_5438() /* ty=(Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), float64]) */;
  %173 = cast(%var_8650, dtype="uint64") /* ty=Tensor[(15, 6), uint64] */;
  %174 = reshape(%173, newshape=[90]) /* ty=Tensor[(90), uint64] */;
  %175 = @func_6317(%174) /* ty=(Tensor[(792), float64], Tensor[(15, 11, 11), float32], Tensor[(90), uint64]) */;
  %176 = cast(meta[relay.Constant][5] /* ty=Tensor[(3, 42), float64] */, dtype="float64") /* ty=Tensor[(3, 42), float64] */;
  %177 = acos(%176) /* ty=Tensor[(3, 42), float64] */;
  %178 = cast(%177, dtype="float64") /* ty=Tensor[(3, 42), float64] */;
  %179 = log(%178) /* ty=Tensor[(3, 42), float64] */;
  %180 = cast(%179, dtype="float32") /* ty=Tensor[(3, 42), float32] */;
  %181 = sin(%180) /* ty=Tensor[(3, 42), float32] */;
  %182 = cast(meta[relay.Constant][5] /* ty=Tensor[(3, 42), float64] */, dtype="float64") /* ty=Tensor[(3, 42), float64] */;
  %183 = shape_of(%181, dtype="int32") /* ty=Tensor[(2), int32] */;
  %184 = cast(%181, dtype="float64") /* ty=Tensor[(3, 42), float64] */;
  %185 = dyn.reshape(%182, %183, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %186 = %165.0;
  %187 = %166.0;
  %188 = %171.11;
  %189 = @func_4906() /* ty=Tensor[(15, 11, 11), float32] */;
  %190 = %172.1;
  %191 = %175.0;
  %192 = mod(%184, %185) /* ty=Tensor[(3, 42), float64] */;
  (%186, %187, %188, %var_8602, %189, %190, %191, %var_8650, %192)
}

def @func_12667(%var_12665: Tensor[(30), float32]) -> (Tensor[(15, 11, 11), float32], Tensor[(1, 14, 9), float64], Tensor[(126), float64], Tensor[(2, 1, 15), float32], Tensor[(30), float32], Tensor[(792), float64]) {
  @func_12664(%var_12665) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(1, 14, 9), float64], Tensor[(126), float64], Tensor[(2, 1, 15), float32], Tensor[(30), float32], Tensor[(792), float64]) */
}

def @func_5896() -> (Tensor[(15, 11, 11), bool],) {
  %193 = @func_5103() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %194 = %193.0;
  (%194,)
}

def @func_4240() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %195 = @func_2995() /* ty=Tensor[(15, 11, 11), float32] */;
  %196 = cast(%195, dtype="float32") /* ty=Tensor[(15, 11, 11), float32] */;
  %197 = atanh(%196) /* ty=Tensor[(15, 11, 11), float32] */;
  %198 = @func_2978() /* ty=Tensor[(15, 11, 11), float32] */;
  (%197, %198)
}

def @func_11839() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %199 = @func_6349() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %200 = %199.0;
  %201 = @func_7426() /* ty=Tensor[(15, 11, 11), float32] */;
  (%200, %201)
}

def @func_15988() -> (Tensor[(15, 11, 11), float32],) {
  @func_15986() /* ty=(Tensor[(15, 11, 11), float32],) */
}

def @func_5693() -> (Tensor[(15, 11, 11), bool],) {
  @func_5691() /* ty=(Tensor[(15, 11, 11), bool],) */
}

def @func_6989() -> (Tensor[(7, 3, 16), float32],) {
  @func_6987() /* ty=(Tensor[(7, 3, 16), float32],) */
}

def @func_6442(%var_6439: Tensor[(126), float64]) -> (Tensor[(7, 3, 16), float32], Tensor[(792), float64], Tensor[(126), float64]) {
  %202 = @func_5967() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(7, 3, 16), float32], Tensor[(15, 11, 11), bool]) */;
  %203 = cast(%var_6439, dtype="float64") /* ty=Tensor[(126), float64] */;
  %204 = reshape(%203, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %205 = @func_3564(%204) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(8, 11, 9), int8], Tensor[(126), float64], Tensor[(792), float64]) */;
  %206 = %202.1;
  %207 = %205.3;
  (%206, %207, %var_6439)
}

def @func_11258() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  @func_11256() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */
}

def @func_17805() -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) {
  %212 = fn () -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) {
    %208 = @func_5896() /* ty=(Tensor[(15, 11, 11), bool],) */;
    %209 = @func_16689() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(90), uint64], Tensor[(15, 11, 11), float32]) */;
    %210 = %208.0;
    %211 = %209.2;
    (%210, %211)
  };
  %212() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) */
}

def @func_17624() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool]) {
  %219 = fn () -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool]) {
    %213 = @func_4124() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
    %214 = @func_12142() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), int8]) */;
    %215 = %213.1;
    %216 = %214.0;
    %217 = @func_15834() /* ty=Tensor[(15, 11, 11), bool] */;
    %218 = @func_10085() /* ty=Tensor[(15, 11, 11), bool] */;
    (%215, %216, %217, %218)
  };
  %219() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool]) */
}

def @func_22244() -> Tensor[(15, 11, 11), float32] {
  %221 = fn () -> Tensor[(15, 11, 11), float32] {
    %220 = @func_20682() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(6, 5, 3), bool], Tensor[(15, 11, 11), float32]) */;
    %220.3
  };
  %221() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_23443() -> (Tensor[(15, 11, 11), float32],) {
  @func_23441() /* ty=(Tensor[(15, 11, 11), float32],) */
}

def @func_25328() -> Tensor[(15, 11, 11), bool] {
  @func_25326() /* ty=Tensor[(15, 11, 11), bool] */
}

def @func_16130(%var_16129: Tensor[(196), uint8]) -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(1, 126), float64], uint8, Tensor[(196), uint8]) {
  %235 = fn (%var_16125: Tensor[(196), uint8]) -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(1, 126), float64], uint8, Tensor[(196), uint8]) {
    %222 = @func_12484() /* ty=(Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), bool]) */;
    %223 = @func_8192() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
    %224 = @func_10446() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
    %225 = cast(meta[relay.Constant][6] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %226 = cast(%var_16125, dtype="uint8") /* ty=Tensor[(196), uint8] */;
    %227 = reshape(%225, newshape=[]) /* ty=uint8 */;
    %228 = reshape(%226, newshape=[2, 7, 14]) /* ty=Tensor[(2, 7, 14), uint8] */;
    %229 = @func_15288(%227, %228) /* ty=(Tensor[(2, 7, 14), uint8], Tensor[(1, 126), float64]) */;
    %230 = @func_12750() /* ty=Tensor[(15, 11, 11), float32] */;
    %231 = %222.0;
    %232 = %223.1;
    %233 = %224.1;
    %234 = %229.1;
    (%230, %231, %232, %233, %234, meta[relay.Constant][6] /* ty=uint8 */, %var_16125)
  };
  %235(%var_16129) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(1, 126), float64], uint8, Tensor[(196), uint8]) */
}

def @func_5103() -> (Tensor[(15, 11, 11), bool],) {
  %236 = @func_3748() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(792), float64], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(90), uint64]) */;
  %237 = %236.3;
  (%237,)
}

def @func_25643(%var_25641: Tensor[(1, 1, 4), float64]) -> (Tensor[(15, 11, 11), float32], Tensor[(?, ?, 4), bool]) {
  @func_25640(%var_25641) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(?, ?, 4), bool]) */
}

def @func_24273() -> (Tensor[(320), float32], Tensor[(15, 11, 11), float32]) {
  @func_24271() /* ty=(Tensor[(320), float32], Tensor[(15, 11, 11), float32]) */
}

def @func_24103() -> (Tensor[(15, 11, 11), bool],) {
  %240 = fn () -> (Tensor[(15, 11, 11), bool],) {
    %238 = @func_14187() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(1008), float64], Tensor[(7, 3, 16), float32]) */;
    %239 = %238.0;
    (%239,)
  };
  %240() /* ty=(Tensor[(15, 11, 11), bool],) */
}

def @func_12910(%var_12903: Tensor[(8, 8, 3), float32]) -> (Tensor[(8, 8, 3), float32],) {
  %241 = cast(%var_12903, dtype="float32") /* ty=Tensor[(8, 8, 3), float32] */;
  %242 = sigmoid(%241) /* ty=Tensor[(8, 8, 3), float32] */;
  (%242,)
}

def @func_18717(%var_18716: int16) -> (Tensor[(15, 11, 11), float32], Tensor[(2, 14, 1), bool], int16, Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) {
  %253 = fn (%var_18694: int16) -> (Tensor[(15, 11, 11), float32], Tensor[(2, 14, 1), bool], int16, Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) {
    %243 = @func_15502() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) */;
    %244 = cast(%var_18694, dtype="int16") /* ty=int16 */;
    %245 = reshape(%244, newshape=[]) /* ty=int16 */;
    %246 = @func_10765(%245) /* ty=(Tensor[(2, 14, 1), bool],) */;
    %247 = @func_14324() /* ty=(Tensor[(15, 11, 11), float32],) */;
    %248 = @func_5198() /* ty=(Tensor[(15, 11, 11), bool],) */;
    %249 = %243.1;
    %250 = %246.0;
    %251 = %247.0;
    %252 = %248.0;
    (%249, %250, %var_18694, %251, %252)
  };
  %253(%var_18716) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(2, 14, 1), bool], int16, Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) */
}

def @func_22313() -> Tensor[(7, 3, 16), float32] {
  @func_22311() /* ty=Tensor[(7, 3, 16), float32] */
}

def @func_8172() -> (Tensor[(15, 11, 11), float32],) {
  %256 = fn () -> (Tensor[(15, 11, 11), float32],) {
    %254 = @func_7898() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
    %255 = %254.0;
    (%255,)
  };
  %256() /* ty=(Tensor[(15, 11, 11), float32],) */
}

def @func_12913(%var_12911: Tensor[(8, 8, 3), float32]) -> (Tensor[(8, 8, 3), float32],) {
  @func_12910(%var_12911) /* ty=(Tensor[(8, 8, 3), float32],) */
}

def @func_21939(%var_21937: Tensor[(90), uint64], %var_21938: Tensor[(312, 2), float32]) -> (Tensor[(15, 11, 11), bool], Tensor[(792), float64], Tensor[(8, 78), uint8], Tensor[(90), uint64], Tensor[(312, 2), float32]) {
  %267 = fn (%var_21909: Tensor[(90), uint64], %var_21910: Tensor[(312, 2), float32]) -> (Tensor[(15, 11, 11), bool], Tensor[(792), float64], Tensor[(8, 78), uint8], Tensor[(90), uint64], Tensor[(312, 2), float32]) {
    %257 = @func_11777() /* ty=(Tensor[(15, 11, 11), bool],) */;
    %258 = @func_12064() /* ty=(Tensor[(792), float64],) */;
    %259 = cast(%var_21909, dtype="uint64") /* ty=Tensor[(90), uint64] */;
    %260 = cast(%var_21910, dtype="float32") /* ty=Tensor[(312, 2), float32] */;
    %261 = reshape(%259, newshape=[90]) /* ty=Tensor[(90), uint64] */;
    %262 = reshape(%260, newshape=[8, 78]) /* ty=Tensor[(8, 78), float32] */;
    %263 = @func_17394(%261, %262) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(90), uint64], Tensor[(90), uint64], Tensor[(792), float64], Tensor[(8, 78), int8], Tensor[(8, 78), uint8]) */;
    %264 = %257.0;
    %265 = %258.0;
    %266 = %263.7;
    (%264, %265, %266, %var_21909, %var_21910)
  };
  %267(%var_21937, %var_21938) /* ty=(Tensor[(15, 11, 11), bool], Tensor[(792), float64], Tensor[(8, 78), uint8], Tensor[(90), uint64], Tensor[(312, 2), float32]) */
}

def @func_15150() -> Tensor[(792), float64] {
  %269 = fn () -> Tensor[(792), float64] {
    %268 = @func_7447() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(792), float64]) */;
    %268.1
  };
  %269() /* ty=Tensor[(792), float64] */
}

def @func_22311() -> Tensor[(7, 3, 16), float32] {
  %270 = @func_14196() /* ty=(Tensor[(7, 3, 16), float32],) */;
  %270.0
}

def @func_4826(%var_4825: Tensor[(15, 11, 11), float32]) -> Tensor[(15, 11, 11), float32] {
  %277 = fn (%var_4805: Tensor[(15, 11, 11), float32]) -> Tensor[(15, 11, 11), float32] {
    %271 = @func_3160() /* ty=(Tensor[(15, 11, 11), float32],) */;
    %272 = %271.0;
    %273 = cast(%var_4805, dtype="float32") /* ty=Tensor[(15, 11, 11), float32] */;
    %274 = shape_of(%272, dtype="int32") /* ty=Tensor[(3), int32] */;
    %275 = cast(%272, dtype="float32") /* ty=Tensor[(15, 11, 11), float32] */;
    %276 = dyn.reshape(%273, %274, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    floor_mod(%275, %276) /* ty=Tensor[(15, 11, 11), float32] */
  };
  %277(%var_4825) /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_25392() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(792), float64], Tensor[(15, 11, 11), bool]) {
  %278 = @func_25091() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %279 = @func_18262() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %280 = @func_12064() /* ty=(Tensor[(792), float64],) */;
  %281 = @func_10692() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %282 = %278.0;
  %283 = %279.0;
  %284 = %280.0;
  %285 = %281.0;
  (%282, %283, %284, %285)
}

def @func_17129() -> Tensor[(15, 11, 11), float32] {
  %287 = fn () -> Tensor[(15, 11, 11), float32] {
    %286 = @func_13832() /* ty=(Tensor[(15, 11, 11), float32],) */;
    %286.0
  };
  %287() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_7744() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %288 = @func_7614() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %289 = @func_7655() /* ty=Tensor[(15, 11, 11), float32] */;
  %290 = %288.0;
  (%289, %290)
}

def @func_16433() -> Tensor[(6, 5, 3), float64] {
  %291 = @func_10284() /* ty=(Tensor[(6, 5, 3), float64], Tensor[(15, 11, 11), float32]) */;
  %291.0
}

def @func_10362() -> (Tensor[(15, 11, 11), float32],) {
  @func_10360() /* ty=(Tensor[(15, 11, 11), float32],) */
}

def @func_15969() -> Tensor[(15, 11, 11), float32] {
  %292 = fn () -> Tensor[(15, 11, 11), float32] {
    @func_7655() /* ty=Tensor[(15, 11, 11), float32] */
  };
  %292() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_8336() -> (Tensor[(320), float32],) {
  @func_8334() /* ty=(Tensor[(320), float32],) */
}

def @func_10448() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  @func_10446() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */
}

def @func_9630() -> Tensor[(15, 11, 11), float32] {
  %294 = fn () -> Tensor[(15, 11, 11), float32] {
    %293 = @func_3780() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
    %293.1
  };
  %294() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_18743(%var_18741: Tensor[(192), float32]) -> (Tensor[(15, 11, 11), float32], Tensor[(8, 8, 3), float32], Tensor[(192), float32]) {
  @func_18740(%var_18741) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(8, 8, 3), float32], Tensor[(192), float32]) */
}

def @func_15504() -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) {
  @func_15502() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) */
}

def @func_7215() -> Tensor[(15, 11, 11), float32] {
  %295 = fn () -> Tensor[(15, 11, 11), float32] {
    @func_2900() /* ty=Tensor[(15, 11, 11), float32] */
  };
  %295() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_14720() -> Tensor[(15, 11, 11), float32] {
  %296 = @func_10446() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %296.1
}

def @func_12731() -> (Tensor[(15, 11, 11), bool],) {
  %297 = @func_12522() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %298 = %297.0;
  (%298,)
}

def @func_5150(%var_5149: Tensor[(15, 11, 11), float32]) -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) {
  %306 = fn (%var_5132: Tensor[(15, 11, 11), float32]) -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) {
    %299 = @func_2978() /* ty=Tensor[(15, 11, 11), float32] */;
    %300 = cast(%var_5132, dtype="bool") /* ty=Tensor[(15, 11, 11), bool] */;
    %301 = shape_of(%299, dtype="int32") /* ty=Tensor[(3), int32] */;
    %302 = cast(%299, dtype="bool") /* ty=Tensor[(15, 11, 11), bool] */;
    %303 = dyn.reshape(%300, %301, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %304 = equal(%302, %303) /* ty=Tensor[(15, 11, 11), bool] */;
    %305 = @func_3074() /* ty=Tensor[(15, 11, 11), float32] */;
    (%304, %305)
  };
  %306(%var_5149) /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) */
}

def @func_3780() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %307 = @func_2900() /* ty=Tensor[(15, 11, 11), float32] */;
  %308 = @func_2978() /* ty=Tensor[(15, 11, 11), float32] */;
  (%307, %308)
}

def @func_4242() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  @func_4240() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */
}

def @func_12751() -> Tensor[(15, 11, 11), float32] {
  %309 = fn () -> Tensor[(15, 11, 11), float32] {
    @func_10486() /* ty=Tensor[(15, 11, 11), float32] */
  };
  %309() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_18893(%var_18871: Tensor[(126), float64]) -> (Tensor[(90), uint64], Tensor[(126), float64], Tensor[(1815), float32], Tensor[(126), float64], Tensor[(15, 11, 11), float32]) {
  %310 = @func_3748() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(792), float64], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(90), uint64]) */;
  %311 = cast(meta[relay.Constant][7] /* ty=Tensor[(1815), float32] */, dtype="float32") /* ty=Tensor[(1815), float32] */;
  %312 = cast(%var_18871, dtype="float64") /* ty=Tensor[(126), float64] */;
  %313 = reshape(%311, newshape=[15, 11, 11]) /* ty=Tensor[(15, 11, 11), float32] */;
  %314 = reshape(%312, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %315 = @func_4461(%313, %314) /* ty=(Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(126), float64], Tensor[(7, 3, 16), int8]) */;
  %316 = @func_18326() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %317 = %310.5;
  %318 = %315.5;
  %319 = %316.0;
  (%317, %318, meta[relay.Constant][7] /* ty=Tensor[(1815), float32] */, %var_18871, %319)
}

def @func_240(%var_238: Tensor[(6, 5, 3), uint64], %var_239: Tensor[(6, 5, 3), uint64]) -> (Tensor[(6, 5, 3), uint64], Tensor[(6, 5, 3), float64], Tensor[(6, 5, 3), float64]) {
  %332 = fn (%var_192: Tensor[(6, 5, 3), uint64], %var_220: Tensor[(6, 5, 3), uint64]) -> (Tensor[(6, 5, 3), uint64], Tensor[(6, 5, 3), float64], Tensor[(6, 5, 3), float64]) {
    %320 = cast(meta[relay.Constant][8] /* ty=Tensor[(6, 5, 3), uint64] */, dtype="uint64") /* ty=Tensor[(6, 5, 3), uint64] */;
    %321 = shape_of(%var_192, dtype="int32") /* ty=Tensor[(3), int32] */;
    %322 = cast(%var_192, dtype="uint64") /* ty=Tensor[(6, 5, 3), uint64] */;
    %323 = dyn.reshape(%320, %321, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %324 = cast(%var_220, dtype="float64") /* ty=Tensor[(6, 5, 3), float64] */;
    %325 = shape_of(meta[relay.Constant][8] /* ty=Tensor[(6, 5, 3), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %326 = cast(meta[relay.Constant][8] /* ty=Tensor[(6, 5, 3), uint64] */, dtype="float64") /* ty=Tensor[(6, 5, 3), float64] */;
    %327 = dyn.reshape(%324, %325, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %328 = cast(meta[relay.Constant][8] /* ty=Tensor[(6, 5, 3), uint64] */, dtype="float64") /* ty=Tensor[(6, 5, 3), float64] */;
    %329 = bitwise_xor(%322, %323) /* ty=Tensor[(6, 5, 3), uint64] */;
    %330 = divide(%326, %327) /* ty=Tensor[(6, 5, 3), float64] */;
    %331 = log2(%328) /* ty=Tensor[(6, 5, 3), float64] */;
    (%329, %330, %331)
  };
  %332(%var_238, %var_239) /* ty=(Tensor[(6, 5, 3), uint64], Tensor[(6, 5, 3), float64], Tensor[(6, 5, 3), float64]) */
}

def @func_23441() -> (Tensor[(15, 11, 11), float32],) {
  %333 = @func_8427() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(320), float32]) */;
  %334 = %333.0;
  (%334,)
}

def @func_26477() -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %335 = @func_5198() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %336 = @func_16565() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float32]) */;
  %337 = %335.0;
  %338 = @func_7331() /* ty=Tensor[(15, 11, 11), float32] */;
  %339 = %336.0;
  (%337, %338, %339)
}

def @func_10200() -> Tensor[(15, 11, 11), float32] {
  %340 = fn () -> Tensor[(15, 11, 11), float32] {
    @func_3665() /* ty=Tensor[(15, 11, 11), float32] */
  };
  %340() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_23511(%var_23509: Tensor[(3, 15, 3), int64]) -> (Tensor[(3, 15, 3), int64],) {
  @func_23508(%var_23509) /* ty=(Tensor[(3, 15, 3), int64],) */
}

def @func_6802() -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool]) {
  @func_6800() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool]) */
}

def @func_18679() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) {
  @func_18677() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) */
}

def @func_25363() -> (Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool]) {
  @func_25361() /* ty=(Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool]) */
}

def @func_15933() -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool]) {
  %344 = fn () -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool]) {
    %341 = @func_12017() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) */;
    %342 = %341.0;
    %343 = @func_7917() /* ty=Tensor[(15, 11, 11), bool] */;
    (%342, %343)
  };
  %344() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool]) */
}

def @func_26022(%var_26020: Tensor[(8, 126), int8]) -> (Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(8, 126), uint16], Tensor[(8, 126), bool]) {
  @func_26019(%var_26020) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(8, 126), uint16], Tensor[(8, 126), bool]) */
}

def @func_10730() -> Tensor[(15, 11, 11), float32] {
  %345 = fn () -> Tensor[(15, 11, 11), float32] {
    @func_8380() /* ty=Tensor[(15, 11, 11), float32] */
  };
  %345() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_10639() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) {
  %346 = @func_9375() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float32]) */;
  %347 = @func_3461() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) */;
  %348 = @func_6889() /* ty=Tensor[(15, 11, 11), float32] */;
  %349 = %346.0;
  %350 = %347.1;
  (%348, %349, %350)
}

def @func_15056() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float64]) {
  @func_15054() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float64]) */
}

def @func_4329() -> (Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), float32]) {
  %356 = fn () -> (Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), float32]) {
    %351 = @func_2978() /* ty=Tensor[(15, 11, 11), float32] */;
    %352 = cast(%351, dtype="float64") /* ty=Tensor[(15, 11, 11), float64] */;
    %353 = @func_3160() /* ty=(Tensor[(15, 11, 11), float32],) */;
    %354 = rsqrt(%352) /* ty=Tensor[(15, 11, 11), float64] */;
    %355 = %353.0;
    (%354, %355)
  };
  %356() /* ty=(Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), float32]) */
}

def @func_6128() -> Tensor[(7, 3, 16), float64] {
  %357 = @func_5967() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(7, 3, 16), float32], Tensor[(15, 11, 11), bool]) */;
  %358 = %357.1;
  %359 = cast(%358, dtype="float64") /* ty=Tensor[(7, 3, 16), float64] */;
  atan(%359) /* ty=Tensor[(7, 3, 16), float64] */
}

def @func_11072() -> Tensor[(13, 4, 13), float32] {
  %360 = cast(meta[relay.Constant][9] /* ty=Tensor[(13, 4, 13), float32] */, dtype="float32") /* ty=Tensor[(13, 4, 13), float32] */;
  cosh(%360) /* ty=Tensor[(13, 4, 13), float32] */
}

def @func_18230() -> (Tensor[(15, 11, 11), float32],) {
  %363 = fn () -> (Tensor[(15, 11, 11), float32],) {
    %361 = @func_17531() /* ty=(Tensor[(15, 11, 11), float32],) */;
    %362 = %361.0;
    (%362,)
  };
  %363() /* ty=(Tensor[(15, 11, 11), float32],) */
}

def @func_11629(%var_11595: Tensor[(4, 126), float64], %var_11607: Tensor[(15, 126), float64]) -> (Tensor[(15, 11, 11), float32], Tensor[(4, 126), bool], Tensor[(1, 14, 9), float64], Tensor[(15, 126), bool], Tensor[(15, 126), float32]) {
  %364 = @func_5073() /* ty=Tensor[(1, 126), float64] */;
  %365 = cast(%364, dtype="bool") /* ty=Tensor[(1, 126), bool] */;
  %366 = cast(%var_11595, dtype="bool") /* ty=Tensor[(4, 126), bool] */;
  %367 = @func_8157() /* ty=(Tensor[(7, 3, 16), float32], Tensor[(1, 14, 9), float64], Tensor[(126), float64]) */;
  %368 = cast(%364, dtype="bool") /* ty=Tensor[(1, 126), bool] */;
  %369 = cast(%var_11607, dtype="bool") /* ty=Tensor[(15, 126), bool] */;
  %370 = cast(%var_11607, dtype="float32") /* ty=Tensor[(15, 126), float32] */;
  %371 = @func_2995() /* ty=Tensor[(15, 11, 11), float32] */;
  %372 = greater(%365, %366) /* ty=Tensor[(4, 126), bool] */;
  %373 = %367.1;
  %374 = equal(%368, %369) /* ty=Tensor[(15, 126), bool] */;
  %375 = sigmoid(%370) /* ty=Tensor[(15, 126), float32] */;
  (%371, %372, %373, %374, %375)
}

def @func_14620() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %376 = @func_9213() /* ty=(Tensor[(90), uint64], Tensor[(15, 11, 11), float32]) */;
  %377 = %376.1;
  %378 = @func_11173() /* ty=Tensor[(15, 11, 11), float32] */;
  (%377, %378)
}

def @func_24036() -> (Tensor[(15, 11, 11), bool],) {
  @func_24034() /* ty=(Tensor[(15, 11, 11), bool],) */
}

def @func_18039() -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) {
  %379 = @func_17966() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %380 = @func_14620() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %381 = %379.0;
  %382 = %380.0;
  (%381, %382)
}

def @func_6445(%var_6443: Tensor[(126), float64]) -> (Tensor[(7, 3, 16), float32], Tensor[(792), float64], Tensor[(126), float64]) {
  @func_6442(%var_6443) /* ty=(Tensor[(7, 3, 16), float32], Tensor[(792), float64], Tensor[(126), float64]) */
}

def @func_15835() -> Tensor[(15, 11, 11), bool] {
  %384 = fn () -> Tensor[(15, 11, 11), bool] {
    %383 = @func_12017() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) */;
    %383.0
  };
  %384() /* ty=Tensor[(15, 11, 11), bool] */
}

def @func_3162() -> (Tensor[(15, 11, 11), float32],) {
  @func_3160() /* ty=(Tensor[(15, 11, 11), float32],) */
}

def @func_20980(%var_20978: Tensor[(13, 1, 14), uint8], %var_20979: Tensor[(13, 10, 14), uint8]) -> (Tensor[(13, 10, 14), uint8], Tensor[(320), float32]) {
  @func_20976(%var_20978, %var_20979) /* ty=(Tensor[(13, 10, 14), uint8], Tensor[(320), float32]) */
}

def @func_22952() -> Tensor[(15, 11, 11), float32] {
  %385 = fn () -> Tensor[(15, 11, 11), float32] {
    @func_5860() /* ty=Tensor[(15, 11, 11), float32] */
  };
  %385() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_8688() -> (Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), uint64], Tensor[(792), float64]) {
  %392 = fn () -> (Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), uint64], Tensor[(792), float64]) {
    %386 = @func_6635() /* ty=(Tensor[(15, 11, 11), float32],) */;
    %387 = cast(meta[relay.Constant][10] /* ty=Tensor[(792), float64] */, dtype="float64") /* ty=Tensor[(792), float64] */;
    %388 = reshape(%387, newshape=[8, 11, 9]) /* ty=Tensor[(8, 11, 9), float64] */;
    %389 = @func_643(%388) /* ty=(Tensor[(8, 11, 9), int8], Tensor[(6, 5, 3), float64], Tensor[(90), uint64], Tensor[(6, 5, 3), uint64]) */;
    %390 = %386.0;
    %391 = %389.3;
    (%390, %391, meta[relay.Constant][10] /* ty=Tensor[(792), float64] */)
  };
  %392() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), uint64], Tensor[(792), float64]) */
}

def @func_5804() -> (Tensor[(15, 11, 11), float32],) {
  %394 = fn () -> (Tensor[(15, 11, 11), float32],) {
    %393 = @func_2995() /* ty=Tensor[(15, 11, 11), float32] */;
    (%393,)
  };
  %394() /* ty=(Tensor[(15, 11, 11), float32],) */
}

def @func_7746() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  @func_7744() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */
}

def @func_13833() -> (Tensor[(15, 11, 11), float32],) {
  %396 = fn () -> (Tensor[(15, 11, 11), float32],) {
    %395 = @func_4906() /* ty=Tensor[(15, 11, 11), float32] */;
    (%395,)
  };
  %396() /* ty=(Tensor[(15, 11, 11), float32],) */
}

def @func_24450() -> (Tensor[(7, 3, 16), float32],) {
  %397 = @func_15817() /* ty=(Tensor[(7, 3, 16), float64],) */;
  %398 = %397.0;
  %399 = cast(%398, dtype="float32") /* ty=Tensor[(7, 3, 16), float32] */;
  %400 = asinh(%399) /* ty=Tensor[(7, 3, 16), float32] */;
  (%400,)
}

def @func_5483(%var_5464: Tensor[(6, 5, 3), bool], %var_5475: Tensor[(126), float64]) -> (Tensor[(6, 5, 3), bool], Tensor[(15, 11, 11), float32], Tensor[(80, 4), float32], Tensor[(126), float64], Tensor[(320), float32], Tensor[(15, 11, 11), float32]) {
  %401 = @func_3748() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(792), float64], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(90), uint64]) */;
  %402 = %401.1;
  %403 = cast(meta[relay.Constant][11] /* ty=Tensor[(6, 5, 3), float64] */, dtype="bool") /* ty=Tensor[(6, 5, 3), bool] */;
  %404 = shape_of(%402, dtype="int32") /* ty=Tensor[(3), int32] */;
  %405 = cast(%402, dtype="bool") /* ty=Tensor[(6, 5, 3), bool] */;
  %406 = dyn.reshape(%403, %404, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %407 = greater(%405, %406) /* ty=Tensor[(6, 5, 3), bool] */;
  %408 = cast(%var_5464, dtype="bool") /* ty=Tensor[(6, 5, 3), bool] */;
  %409 = shape_of(%407, dtype="int32") /* ty=Tensor[(3), int32] */;
  %410 = cast(%407, dtype="bool") /* ty=Tensor[(6, 5, 3), bool] */;
  %411 = dyn.reshape(%408, %409, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %412 = @func_2995() /* ty=Tensor[(15, 11, 11), float32] */;
  %413 = cast(%412, dtype="bool") /* ty=Tensor[(15, 11, 11), bool] */;
  %414 = cast(%var_5475, dtype="float64") /* ty=Tensor[(126), float64] */;
  %415 = cast(meta[relay.Constant][12] /* ty=Tensor[(320), float32] */, dtype="float32") /* ty=Tensor[(320), float32] */;
  %416 = reshape(%413, newshape=[15, 11, 11]) /* ty=Tensor[(15, 11, 11), bool] */;
  %417 = reshape(%414, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %418 = reshape(%415, newshape=[80, 4]) /* ty=Tensor[(80, 4), float32] */;
  %419 = @func_4196(%416, %417, %418) /* ty=(Tensor[(126), float64], Tensor[(80, 4), float32], Tensor[(15, 11, 11), float64], Tensor[(6, 5, 3), float64]) */;
  %420 = not_equal(%410, %411) /* ty=Tensor[(6, 5, 3), bool] */;
  %421 = %419.1;
  %422 = @func_3074() /* ty=Tensor[(15, 11, 11), float32] */;
  (%420, %412, %421, %var_5475, meta[relay.Constant][12] /* ty=Tensor[(320), float32] */, %422)
}

def @func_6564(%var_6561: Tensor[(11, 14, 13), float32]) -> (Tensor[(11, 14, 13), float32],) {
  %423 = cast(%var_6561, dtype="float32") /* ty=Tensor[(11, 14, 13), float32] */;
  %424 = tan(%423) /* ty=Tensor[(11, 14, 13), float32] */;
  (%424,)
}

def @func_7447() -> (Tensor[(15, 11, 11), bool], Tensor[(792), float64]) {
  %425 = @func_5896() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %426 = @func_4949() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), uint64], Tensor[(792), float64]) */;
  %427 = %425.0;
  %428 = %426.2;
  (%427, %428)
}

def @func_7427() -> Tensor[(15, 11, 11), float32] {
  %430 = fn () -> Tensor[(15, 11, 11), float32] {
    %429 = @func_3160() /* ty=(Tensor[(15, 11, 11), float32],) */;
    %429.0
  };
  %430() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_18178() -> (Tensor[(15, 11, 11), float64], Tensor[(7, 3, 16), float32]) {
  %431 = @func_14791() /* ty=(Tensor[(126), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float64]) */;
  %432 = @func_8157() /* ty=(Tensor[(7, 3, 16), float32], Tensor[(1, 14, 9), float64], Tensor[(126), float64]) */;
  %433 = %431.2;
  %434 = %432.0;
  (%433, %434)
}

def @func_25596() -> (Tensor[(15, 11, 11), bool], Tensor[(1, 126), float64]) {
  %438 = fn () -> (Tensor[(15, 11, 11), bool], Tensor[(1, 126), float64]) {
    %435 = @func_18216() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) */;
    %436 = %435.1;
    %437 = @func_5073() /* ty=Tensor[(1, 126), float64] */;
    (%436, %437)
  };
  %438() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(1, 126), float64]) */
}

def @func_11467() -> (Tensor[(320), float32], Tensor[(15, 11, 11), float32]) {
  %439 = @func_8427() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(320), float32]) */;
  %440 = %439.1;
  %441 = @func_10199() /* ty=Tensor[(15, 11, 11), float32] */;
  (%440, %441)
}

def @func_9375() -> (Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float32]) {
  %442 = @func_8157() /* ty=(Tensor[(7, 3, 16), float32], Tensor[(1, 14, 9), float64], Tensor[(126), float64]) */;
  %443 = @func_5752() /* ty=Tensor[(15, 11, 11), float32] */;
  %444 = %442.0;
  (%443, %444)
}

def @func_24480() -> (Tensor[(15, 11, 11), float32], Tensor[(2, 14, 1), bool], int16) {
  @func_24478() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(2, 14, 1), bool], int16) */
}

def @func_9844() -> (Tensor[(15, 11, 11), float32],) {
  %445 = @func_9629() /* ty=Tensor[(15, 11, 11), float32] */;
  (%445,)
}

def @func_9144() -> (Tensor[(7, 3, 16), float32], Tensor[(792), float64], Tensor[(126), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %458 = fn () -> (Tensor[(7, 3, 16), float32], Tensor[(792), float64], Tensor[(126), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
    %446 = @func_7881() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float32]) */;
    %447 = cast(meta[relay.Constant][13] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
    %448 = reshape(%447, newshape=[126]) /* ty=Tensor[(126), float64] */;
    %449 = @func_3564(%448) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(8, 11, 9), int8], Tensor[(126), float64], Tensor[(792), float64]) */;
    %450 = @func_6819() /* ty=(Tensor[(15, 11, 11), float32],) */;
    %451 = @func_3461() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) */;
    %452 = @func_6265() /* ty=(Tensor[(15, 11, 11), float32],) */;
    %453 = %446.1;
    %454 = %449.3;
    %455 = %450.0;
    %456 = %451.0;
    %457 = %452.0;
    (%453, %454, meta[relay.Constant][13] /* ty=Tensor[(126), float64] */, %455, %456, %457)
  };
  %458() /* ty=(Tensor[(7, 3, 16), float32], Tensor[(792), float64], Tensor[(126), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */
}

def @func_18080() -> (Tensor[(90), uint64], Tensor[(15, 11, 11), float32]) {
  @func_18078() /* ty=(Tensor[(90), uint64], Tensor[(15, 11, 11), float32]) */
}

def @func_5862() -> Tensor[(15, 11, 11), float32] {
  @func_5860() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_13880() -> (Tensor[(15, 11, 11), float32],) {
  %459 = @func_13592() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(7, 3, 16), float64], Tensor[(6, 5, 3), float32], Tensor[(792), float64]) */;
  %460 = %459.0;
  (%460,)
}

def @func_14722() -> Tensor[(15, 11, 11), float32] {
  @func_14720() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_18262() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %461 = @func_3780() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %462 = @func_13045() /* ty=Tensor[(15, 11, 11), float32] */;
  %463 = %461.0;
  (%462, %463)
}

def @func_15880() -> (Tensor[(15, 11, 11), bool],) {
  %464 = @func_8305() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) */;
  %465 = %464.0;
  (%465,)
}

def @func_6148() -> (Tensor[(15, 11, 11), bool],) {
  %466 = @func_5198() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %467 = %466.0;
  (%467,)
}

def @func_20976(%var_20951: Tensor[(13, 1, 14), uint8], %var_20952: Tensor[(13, 10, 14), uint8]) -> (Tensor[(13, 10, 14), uint8], Tensor[(320), float32]) {
  %468 = cast(%var_20951, dtype="uint8") /* ty=Tensor[(13, 1, 14), uint8] */;
  %469 = cast(%var_20952, dtype="uint8") /* ty=Tensor[(13, 10, 14), uint8] */;
  %470 = @func_4607() /* ty=(Tensor[(7, 3, 16), int8], Tensor[(15, 11, 11), float32], Tensor[(1, 126), float64], Tensor[(7, 3, 16), int8], Tensor[(16, 5, 4), float32], Tensor[(320), float32]) */;
  %471 = multiply(%468, %469) /* ty=Tensor[(13, 10, 14), uint8] */;
  %472 = %470.5;
  (%471, %472)
}

def @func_15125() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %476 = fn () -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
    %473 = @func_8816() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
    %474 = @func_6765() /* ty=Tensor[(15, 11, 11), float32] */;
    %475 = %473.0;
    (%474, %475)
  };
  %476() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */
}

def @func_14188() -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(1008), float64], Tensor[(7, 3, 16), float32]) {
  %486 = fn () -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(1008), float64], Tensor[(7, 3, 16), float32]) {
    %477 = @func_9296() /* ty=(Tensor[(15, 11, 11), bool],) */;
    %478 = cast(meta[relay.Constant][14] /* ty=Tensor[(1008), float64] */, dtype="float64") /* ty=Tensor[(1008), float64] */;
    %479 = reshape(%478, newshape=[8, 126]) /* ty=Tensor[(8, 126), float64] */;
    %480 = @func_7128(%479) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(8, 126), int8]) */;
    %481 = @func_6128() /* ty=Tensor[(7, 3, 16), float64] */;
    %482 = cast(%481, dtype="float32") /* ty=Tensor[(7, 3, 16), float32] */;
    %483 = %477.0;
    %484 = %480.0;
    %485 = atanh(%482) /* ty=Tensor[(7, 3, 16), float32] */;
    (%483, %484, meta[relay.Constant][14] /* ty=Tensor[(1008), float64] */, %485)
  };
  %486() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(1008), float64], Tensor[(7, 3, 16), float32]) */
}

def @func_4200(%var_4197: Tensor[(15, 11, 11), bool], %var_4198: Tensor[(126), float64], %var_4199: Tensor[(80, 4), float32]) -> (Tensor[(126), float64], Tensor[(80, 4), float32], Tensor[(15, 11, 11), float64], Tensor[(6, 5, 3), float64]) {
  %507 = fn (%var_4136: Tensor[(15, 11, 11), bool], %var_4146: Tensor[(126), float64], %var_4147: Tensor[(80, 4), float32]) -> (Tensor[(126), float64], Tensor[(80, 4), float32], Tensor[(15, 11, 11), float64], Tensor[(6, 5, 3), float64]) {
    %487 = cast(%var_4146, dtype="float64") /* ty=Tensor[(126), float64] */;
    %488 = cast(%var_4147, dtype="float32") /* ty=Tensor[(80, 4), float32] */;
    %489 = reshape(%487, newshape=[21, 6]) /* ty=Tensor[(21, 6), float64] */;
    %490 = reshape(%488, newshape=[320]) /* ty=Tensor[(320), float32] */;
    %491 = @func_4072(%489, %490) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(8, 11, 9), int8], Tensor[(792), float64], Tensor[(15, 11, 11), float32], Tensor[(792), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(35), float64], Tensor[(16, 5, 4), float32], Tensor[(320), float32], Tensor[(21, 6), float32], Tensor[(15, 11, 11), float32], Tensor[(792), float64], Tensor[(16, 5, 4), float32]) */;
    %492 = %491.11;
    %493 = @func_3461() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) */;
    %494 = %493.1;
    %495 = cast(%var_4136, dtype="float64") /* ty=Tensor[(15, 11, 11), float64] */;
    %496 = shape_of(%494, dtype="int32") /* ty=Tensor[(3), int32] */;
    %497 = cast(%494, dtype="float64") /* ty=Tensor[(15, 11, 11), float64] */;
    %498 = dyn.reshape(%495, %496, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %499 = subtract(%497, %498) /* ty=Tensor[(15, 11, 11), float64] */;
    %500 = cast(%499, dtype="float64") /* ty=Tensor[(15, 11, 11), float64] */;
    %501 = shape_of(%492, dtype="int32") /* ty=Tensor[(3), int32] */;
    %502 = cast(%492, dtype="float64") /* ty=Tensor[(15, 11, 11), float64] */;
    %503 = dyn.reshape(%500, %501, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %504 = @func_3748() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(792), float64], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(90), uint64]) */;
    %505 = power(%502, %503) /* ty=Tensor[(15, 11, 11), float64] */;
    %506 = %504.1;
    (%var_4146, %var_4147, %505, %506)
  };
  %507(%var_4197, %var_4198, %var_4199) /* ty=(Tensor[(126), float64], Tensor[(80, 4), float32], Tensor[(15, 11, 11), float64], Tensor[(6, 5, 3), float64]) */
}

def @func_18501(%var_18500: Tensor[(6, 14, 12), int8]) -> (Tensor[(6, 14, 12), int8], Tensor[(320), float32], Tensor[(6, 14, 12), float64], Tensor[(15, 11, 11), float32]) {
  %519 = fn (%var_18483: Tensor[(6, 14, 12), int8]) -> (Tensor[(6, 14, 12), int8], Tensor[(320), float32], Tensor[(6, 14, 12), float64], Tensor[(15, 11, 11), float32]) {
    %508 = cast(meta[relay.Constant][15] /* ty=Tensor[(6, 14, 12), int8] */, dtype="int8") /* ty=Tensor[(6, 14, 12), int8] */;
    %509 = shape_of(%var_18483, dtype="int32") /* ty=Tensor[(3), int32] */;
    %510 = cast(%var_18483, dtype="int8") /* ty=Tensor[(6, 14, 12), int8] */;
    %511 = dyn.reshape(%508, %509, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %512 = @func_8334() /* ty=(Tensor[(320), float32],) */;
    %513 = cast(%var_18483, dtype="float64") /* ty=Tensor[(6, 14, 12), float64] */;
    %514 = @func_18262() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
    %515 = subtract(%510, %511) /* ty=Tensor[(6, 14, 12), int8] */;
    %516 = %512.0;
    %517 = asinh(%513) /* ty=Tensor[(6, 14, 12), float64] */;
    %518 = %514.0;
    (%515, %516, %517, %518)
  };
  %519(%var_18500) /* ty=(Tensor[(6, 14, 12), int8], Tensor[(320), float32], Tensor[(6, 14, 12), float64], Tensor[(15, 11, 11), float32]) */
}

def @func_7900() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  @func_7898() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */
}

def @func_21073(%var_21062: Tensor[(21, 6), float64]) -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(21, 6), float64], Tensor[(7, 3, 16), int8]) {
  %520 = cast(%var_21062, dtype="float64") /* ty=Tensor[(21, 6), float64] */;
  %521 = reshape(%520, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %522 = @func_16188(%521) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(126), float64], Tensor[(15, 11, 11), bool]) */;
  %523 = @func_4741() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), int8]) */;
  %524 = @func_4906() /* ty=Tensor[(15, 11, 11), float32] */;
  %525 = %522.0;
  %526 = %523.1;
  (%524, %525, %var_21062, %526)
}

def @func_21039() -> (Tensor[(15, 11, 11), bool],) {
  @func_21037() /* ty=(Tensor[(15, 11, 11), bool],) */
}

def @func_645(%var_644: Tensor[(8, 11, 9), float64]) -> (Tensor[(8, 11, 9), int8], Tensor[(6, 5, 3), float64], Tensor[(90), uint64], Tensor[(6, 5, 3), uint64]) {
  %545 = fn (%var_602: Tensor[(8, 11, 9), float64]) -> (Tensor[(8, 11, 9), int8], Tensor[(6, 5, 3), float64], Tensor[(90), uint64], Tensor[(6, 5, 3), uint64]) {
    %527 = cast(-4.29771f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %528 = cast(%var_602, dtype="float64") /* ty=Tensor[(8, 11, 9), float64] */;
    %529 = power(%527, %528) /* ty=Tensor[(8, 11, 9), float64] */;
    %530 = cast(-4.29771f64 /* ty=float64 */, dtype="int8") /* ty=int8 */;
    %531 = cast(%529, dtype="int8") /* ty=Tensor[(8, 11, 9), int8] */;
    %532 = cast(meta[relay.Constant][16] /* ty=Tensor[(90), uint64] */, dtype="uint64") /* ty=Tensor[(90), uint64] */;
    %533 = cast(meta[relay.Constant][16] /* ty=Tensor[(90), uint64] */, dtype="uint64") /* ty=Tensor[(90), uint64] */;
    %534 = reshape(%532, newshape=[6, 5, 3]) /* ty=Tensor[(6, 5, 3), uint64] */;
    %535 = reshape(%533, newshape=[6, 5, 3]) /* ty=Tensor[(6, 5, 3), uint64] */;
    %536 = @func_237(%534, %535) /* ty=(Tensor[(6, 5, 3), uint64], Tensor[(6, 5, 3), float64], Tensor[(6, 5, 3), float64]) */;
    %537 = cast(meta[relay.Constant][16] /* ty=Tensor[(90), uint64] */, dtype="uint64") /* ty=Tensor[(90), uint64] */;
    %538 = %536.2;
    %539 = cast(%538, dtype="uint64") /* ty=Tensor[(6, 5, 3), uint64] */;
    %540 = reshape(%537, newshape=[6, 5, 3]) /* ty=Tensor[(6, 5, 3), uint64] */;
    %541 = reshape(%539, newshape=[6, 5, 3]) /* ty=Tensor[(6, 5, 3), uint64] */;
    %542 = @func_237(%540, %541) /* ty=(Tensor[(6, 5, 3), uint64], Tensor[(6, 5, 3), float64], Tensor[(6, 5, 3), float64]) */;
    %543 = bitwise_or(%530, %531) /* ty=Tensor[(8, 11, 9), int8] */;
    %544 = %542.0;
    (%543, %538, meta[relay.Constant][16] /* ty=Tensor[(90), uint64] */, %544)
  };
  %545(%var_644) /* ty=(Tensor[(8, 11, 9), int8], Tensor[(6, 5, 3), float64], Tensor[(90), uint64], Tensor[(6, 5, 3), uint64]) */
}

def @func_22727() -> (Tensor[(15, 11, 11), float32],) {
  %546 = @func_21621() /* ty=Tensor[(15, 11, 11), float32] */;
  (%546,)
}

def @func_4072(%var_4003: Tensor[(21, 6), float64], %var_4040: Tensor[(320), float32]) -> (Tensor[(15, 11, 11), float32], Tensor[(8, 11, 9), int8], Tensor[(792), float64], Tensor[(15, 11, 11), float32], Tensor[(792), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(35), float64], Tensor[(16, 5, 4), float32], Tensor[(320), float32], Tensor[(21, 6), float32], Tensor[(15, 11, 11), float32], Tensor[(792), float64], Tensor[(16, 5, 4), float32]) {
  %547 = @func_3780() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %548 = cast(meta[relay.Constant][17] /* ty=Tensor[(792), float64] */, dtype="float64") /* ty=Tensor[(792), float64] */;
  %549 = reshape(%548, newshape=[8, 11, 9]) /* ty=Tensor[(8, 11, 9), float64] */;
  %550 = @func_643(%549) /* ty=(Tensor[(8, 11, 9), int8], Tensor[(6, 5, 3), float64], Tensor[(90), uint64], Tensor[(6, 5, 3), uint64]) */;
  %551 = cast(%var_4003, dtype="float64") /* ty=Tensor[(21, 6), float64] */;
  %552 = cast(meta[relay.Constant][17] /* ty=Tensor[(792), float64] */, dtype="float64") /* ty=Tensor[(792), float64] */;
  %553 = reshape(%551, newshape=[1, 14, 9]) /* ty=Tensor[(1, 14, 9), float64] */;
  %554 = reshape(%552, newshape=[792]) /* ty=Tensor[(792), float64] */;
  %555 = @func_1060(%553, %554) /* ty=(Tensor[(1, 14, 9), float64], Tensor[(8, 11, 9), int8], Tensor[(792), float64]) */;
  %556 = cast(%var_4003, dtype="float64") /* ty=Tensor[(21, 6), float64] */;
  %557 = %555.2;
  %558 = cast(%557, dtype="float64") /* ty=Tensor[(792), float64] */;
  %559 = cast(meta[relay.Constant][18] /* ty=Tensor[(35), float64] */, dtype="float64") /* ty=Tensor[(35), float64] */;
  %560 = reshape(%556, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %561 = reshape(%558, newshape=[1, 792]) /* ty=Tensor[(1, 792), float64] */;
  %562 = reshape(%559, newshape=[35]) /* ty=Tensor[(35), float64] */;
  %563 = @func_3955(%560, %561, %562) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(1, 14, 9), float64], Tensor[(126), float64], Tensor[(?, 792), bool], Tensor[(7, 5, ?), bool], Tensor[(35), float64], Tensor[(?, 792), float32]) */;
  %564 = cast(%var_4040, dtype="float32") /* ty=Tensor[(320), float32] */;
  %565 = cast(%var_4040, dtype="float32") /* ty=Tensor[(320), float32] */;
  %566 = reshape(%564, newshape=[16, 5, 4]) /* ty=Tensor[(16, 5, 4), float32] */;
  %567 = reshape(%565, newshape=[16, 5, 4]) /* ty=Tensor[(16, 5, 4), float32] */;
  %568 = cast(%var_4003, dtype="float32") /* ty=Tensor[(21, 6), float32] */;
  %569 = log(%568) /* ty=Tensor[(21, 6), float32] */;
  %570 = cast(%569, dtype="float32") /* ty=Tensor[(21, 6), float32] */;
  %571 = @func_3160() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %572 = cast(%var_4003, dtype="float64") /* ty=Tensor[(21, 6), float64] */;
  %573 = reshape(%572, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %574 = @func_3564(%573) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(8, 11, 9), int8], Tensor[(126), float64], Tensor[(792), float64]) */;
  %575 = @func_3257(%566, %567) /* ty=Tensor[(16, 5, 4), float32] */;
  %576 = cast(%575, dtype="float32") /* ty=Tensor[(16, 5, 4), float32] */;
  %577 = cast(%575, dtype="float32") /* ty=Tensor[(16, 5, 4), float32] */;
  %578 = reshape(%576, newshape=[16, 5, 4]) /* ty=Tensor[(16, 5, 4), float32] */;
  %579 = reshape(%577, newshape=[16, 5, 4]) /* ty=Tensor[(16, 5, 4), float32] */;
  %580 = %547.0;
  %581 = %550.0;
  %582 = @func_2900() /* ty=Tensor[(15, 11, 11), float32] */;
  %583 = @func_2900() /* ty=Tensor[(15, 11, 11), float32] */;
  %584 = %563.0;
  %585 = atanh(%570) /* ty=Tensor[(21, 6), float32] */;
  %586 = %571.0;
  %587 = %574.3;
  %588 = @func_3257(%578, %579) /* ty=Tensor[(16, 5, 4), float32] */;
  (%580, %581, meta[relay.Constant][17] /* ty=Tensor[(792), float64] */, %582, %557, %583, %584, meta[relay.Constant][18] /* ty=Tensor[(35), float64] */, %575, %var_4040, %585, %586, %587, %588)
}

def @func_17935() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) {
  %592 = fn () -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) {
    %589 = @func_5931() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) */;
    %590 = @func_13173() /* ty=Tensor[(15, 11, 11), float32] */;
    %591 = %589.0;
    (%590, %591)
  };
  %592() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) */
}

def @func_16993() -> Tensor[(15, 11, 11), float32] {
  %593 = @func_14187() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(1008), float64], Tensor[(7, 3, 16), float32]) */;
  %593.1
}

def @func_3749() -> (Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(792), float64], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(90), uint64]) {
  %606 = fn () -> (Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(792), float64], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(90), uint64]) {
    %594 = cast(meta[relay.Constant][19] /* ty=Tensor[(792), float64] */, dtype="float64") /* ty=Tensor[(792), float64] */;
    %595 = reshape(%594, newshape=[8, 11, 9]) /* ty=Tensor[(8, 11, 9), float64] */;
    %596 = @func_643(%595) /* ty=(Tensor[(8, 11, 9), int8], Tensor[(6, 5, 3), float64], Tensor[(90), uint64], Tensor[(6, 5, 3), uint64]) */;
    %597 = @func_3322() /* ty=(Tensor[(15, 11, 11), bool],) */;
    %598 = cast(meta[relay.Constant][19] /* ty=Tensor[(792), float64] */, dtype="float64") /* ty=Tensor[(792), float64] */;
    %599 = reshape(%598, newshape=[8, 11, 9]) /* ty=Tensor[(8, 11, 9), float64] */;
    %600 = @func_643(%599) /* ty=(Tensor[(8, 11, 9), int8], Tensor[(6, 5, 3), float64], Tensor[(90), uint64], Tensor[(6, 5, 3), uint64]) */;
    %601 = @func_2978() /* ty=Tensor[(15, 11, 11), float32] */;
    %602 = %596.1;
    %603 = %597.0;
    %604 = @func_2978() /* ty=Tensor[(15, 11, 11), float32] */;
    %605 = %600.2;
    (%601, %602, meta[relay.Constant][19] /* ty=Tensor[(792), float64] */, %603, %604, %605)
  };
  %606() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(792), float64], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(90), uint64]) */
}

def @func_22465() -> (Tensor[(15, 11, 11), float32],) {
  %608 = fn () -> (Tensor[(15, 11, 11), float32],) {
    %607 = @func_12750() /* ty=Tensor[(15, 11, 11), float32] */;
    (%607,)
  };
  %608() /* ty=(Tensor[(15, 11, 11), float32],) */
}

def @func_9876() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) {
  @func_9874() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) */
}

def @func_25708() -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %621 = fn () -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
    %609 = @func_11763() /* ty=(Tensor[(15, 11, 11), float32],) */;
    %610 = @func_24419() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
    %611 = @func_12142() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), int8]) */;
    %612 = @func_8023() /* ty=(Tensor[(7, 3, 16), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(1, 126), float64], Tensor[(11, 14, 13), float32], Tensor[(2002), float32]) */;
    %613 = @func_8268() /* ty=(Tensor[(15, 11, 11), float32],) */;
    %614 = @func_21809() /* ty=Tensor[(15, 11, 11), bool] */;
    %615 = %609.0;
    %616 = @func_6765() /* ty=Tensor[(15, 11, 11), float32] */;
    %617 = %610.0;
    %618 = %611.1;
    %619 = %612.3;
    %620 = %613.0;
    (%614, %615, %616, %617, %618, %619, %620)
  };
  %621() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */
}

def @func_9593() -> Tensor[(15, 11, 11), bool] {
  @func_8857() /* ty=Tensor[(15, 11, 11), bool] */
}

def @func_26323() -> (Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(1008), int8], Tensor[(8, 126), float32]) {
  %631 = fn () -> (Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(1008), int8], Tensor[(8, 126), float32]) {
    %622 = @func_10284() /* ty=(Tensor[(6, 5, 3), float64], Tensor[(15, 11, 11), float32]) */;
    %623 = cast(meta[relay.Constant][20] /* ty=Tensor[(1008), int8] */, dtype="int8") /* ty=Tensor[(1008), int8] */;
    %624 = reshape(%623, newshape=[8, 126]) /* ty=Tensor[(8, 126), int8] */;
    %625 = @func_26019(%624) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(8, 126), uint16], Tensor[(8, 126), bool]) */;
    %626 = %625.4;
    %627 = cast(%626, dtype="float32") /* ty=Tensor[(8, 126), float32] */;
    %628 = %622.1;
    %629 = @func_19881() /* ty=Tensor[(6, 5, 3), float64] */;
    %630 = cosh(%627) /* ty=Tensor[(8, 126), float32] */;
    (%628, %629, meta[relay.Constant][20] /* ty=Tensor[(1008), int8] */, %630)
  };
  %631() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(1008), int8], Tensor[(8, 126), float32]) */
}

def @func_6637() -> (Tensor[(15, 11, 11), float32],) {
  @func_6635() /* ty=(Tensor[(15, 11, 11), float32],) */
}

def @func_13529() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(1, 126), float64]) {
  %632 = @func_3780() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %633 = @func_4607() /* ty=(Tensor[(7, 3, 16), int8], Tensor[(15, 11, 11), float32], Tensor[(1, 126), float64], Tensor[(7, 3, 16), int8], Tensor[(16, 5, 4), float32], Tensor[(320), float32]) */;
  %634 = @func_7214() /* ty=Tensor[(15, 11, 11), float32] */;
  %635 = @func_13045() /* ty=Tensor[(15, 11, 11), float32] */;
  %636 = %632.0;
  %637 = @func_2900() /* ty=Tensor[(15, 11, 11), float32] */;
  %638 = %633.2;
  (%634, %635, %636, %637, %638)
}

def @func_10765(%var_10759: int16) -> (Tensor[(2, 14, 1), bool],) {
  %639 = cast(%var_10759, dtype="bool") /* ty=bool */;
  %640 = cast(meta[relay.Constant][21] /* ty=Tensor[(2, 14, 1), int16] */, dtype="bool") /* ty=Tensor[(2, 14, 1), bool] */;
  %641 = less(%639, %640) /* ty=Tensor[(2, 14, 1), bool] */;
  (%641,)
}

def @func_23208() -> (Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(320), float32]) {
  %647 = fn () -> (Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(320), float32]) {
    %642 = @func_20319() /* ty=(Tensor[(15, 11, 11), float32],) */;
    %643 = @func_8334() /* ty=(Tensor[(320), float32],) */;
    %644 = %642.0;
    %645 = @func_8752() /* ty=Tensor[(6, 5, 3), float64] */;
    %646 = %643.0;
    (%644, %645, %646)
  };
  %647() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(320), float32]) */
}

def @func_8550() -> Tensor[(11, 14, 13), float32] {
  @func_8548() /* ty=Tensor[(11, 14, 13), float32] */
}

def @func_24891() -> (Tensor[(15, 11, 11), float32],) {
  @func_24889() /* ty=(Tensor[(15, 11, 11), float32],) */
}

def @func_19120() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  @func_19118() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */
}

def @func_13046() -> Tensor[(15, 11, 11), float32] {
  %649 = fn () -> Tensor[(15, 11, 11), float32] {
    %648 = @func_11763() /* ty=(Tensor[(15, 11, 11), float32],) */;
    %648.0
  };
  %649() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_8672(%var_8670: Tensor[(320), float32], %var_8671: Tensor[(15, 6), uint64]) -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(320), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float64], Tensor[(792), float64], Tensor[(15, 6), uint64], Tensor[(3, 42), float64]) {
  @func_8668(%var_8670, %var_8671) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(320), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float64], Tensor[(792), float64], Tensor[(15, 6), uint64], Tensor[(3, 42), float64]) */
}

def @func_23736() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %654 = fn () -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
    %650 = @func_15054() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float64]) */;
    %651 = @func_6349() /* ty=(Tensor[(15, 11, 11), float32],) */;
    %652 = %650.1;
    %653 = %651.0;
    (%652, %653)
  };
  %654() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */
}

def @func_16928(%var_16926: Tensor[(15, 126), float64]) -> (Tensor[(15, 126), float32], Tensor[(15, 126), bool], Tensor[(15, 126), bool]) {
  @func_16925(%var_16926) /* ty=(Tensor[(15, 126), float32], Tensor[(15, 126), bool], Tensor[(15, 126), bool]) */
}

def @func_20321() -> (Tensor[(15, 11, 11), float32],) {
  @func_20319() /* ty=(Tensor[(15, 11, 11), float32],) */
}

def @func_11763() -> (Tensor[(15, 11, 11), float32],) {
  %655 = @func_5803() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %656 = %655.0;
  (%656,)
}

def @func_13297(%var_13295: Tensor[(126), float64]) -> (Tensor[(15, 11, 11), bool], Tensor[(126), float64], Tensor[(126), float64], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool]) {
  @func_13294(%var_13295) /* ty=(Tensor[(15, 11, 11), bool], Tensor[(126), float64], Tensor[(126), float64], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool]) */
}

def @func_20304() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %657 = @func_9487() /* ty=Tensor[(15, 11, 11), float32] */;
  %658 = @func_13616() /* ty=Tensor[(15, 11, 11), float32] */;
  (%657, %658)
}

def @func_26094() -> (Tensor[(15, 11, 11), float32],) {
  %659 = @func_20188() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %660 = %659.0;
  (%660,)
}

def @func_18180() -> (Tensor[(15, 11, 11), float64], Tensor[(7, 3, 16), float32]) {
  @func_18178() /* ty=(Tensor[(15, 11, 11), float64], Tensor[(7, 3, 16), float32]) */
}

def @func_17859() -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) {
  %661 = @func_14879() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(6, 5, 3), uint64]) */;
  %662 = @func_8305() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) */;
  %663 = @func_14324() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %664 = %661.0;
  %665 = %662.0;
  %666 = %663.0;
  (%664, %665, %666)
}

def @func_6091() -> (Tensor[(792), float64],) {
  %669 = fn () -> (Tensor[(792), float64],) {
    %667 = @func_4949() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), uint64], Tensor[(792), float64]) */;
    %668 = %667.2;
    (%668,)
  };
  %669() /* ty=(Tensor[(792), float64],) */
}

def @func_26261(%var_26260: Tensor[(90), uint64]) -> (Tensor[(15, 11, 11), float32], Tensor[(90), uint64], Tensor[(90), uint64], Tensor[(624), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) {
  %683 = fn (%var_26210: Tensor[(90), uint64]) -> (Tensor[(15, 11, 11), float32], Tensor[(90), uint64], Tensor[(90), uint64], Tensor[(624), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) {
    %670 = @func_19118() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
    %671 = cast(%var_26210, dtype="uint64") /* ty=Tensor[(90), uint64] */;
    %672 = cast(meta[relay.Constant][22] /* ty=Tensor[(624), float32] */, dtype="float32") /* ty=Tensor[(624), float32] */;
    %673 = reshape(%671, newshape=[90]) /* ty=Tensor[(90), uint64] */;
    %674 = reshape(%672, newshape=[8, 78]) /* ty=Tensor[(8, 78), float32] */;
    %675 = @func_17394(%673, %674) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(90), uint64], Tensor[(90), uint64], Tensor[(792), float64], Tensor[(8, 78), int8], Tensor[(8, 78), uint8]) */;
    %676 = @func_15563() /* ty=(Tensor[(15, 11, 11), bool],) */;
    %677 = @func_14324() /* ty=(Tensor[(15, 11, 11), float32],) */;
    %678 = %670.1;
    %679 = %675.3;
    %680 = @func_21160() /* ty=Tensor[(15, 11, 11), float32] */;
    %681 = %676.0;
    %682 = %677.0;
    (%678, %679, %var_26210, meta[relay.Constant][22] /* ty=Tensor[(624), float32] */, %680, %681, %682)
  };
  %683(%var_26260) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(90), uint64], Tensor[(90), uint64], Tensor[(624), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) */
}

def @func_12399() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %687 = fn () -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
    %684 = @func_11306() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
    %685 = @func_11342() /* ty=Tensor[(15, 11, 11), float32] */;
    %686 = %684.0;
    (%685, %686)
  };
  %687() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */
}

def @func_6211() -> (Tensor[(15, 11, 11), bool], Tensor[(8, 11, 9), int8], Tensor[(126), float64], Tensor[(792), float64]) {
  %696 = fn () -> (Tensor[(15, 11, 11), bool], Tensor[(8, 11, 9), int8], Tensor[(126), float64], Tensor[(792), float64]) {
    %688 = @func_5896() /* ty=(Tensor[(15, 11, 11), bool],) */;
    %689 = cast(meta[relay.Constant][23] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
    %690 = cast(meta[relay.Constant][24] /* ty=Tensor[(792), float64] */, dtype="float64") /* ty=Tensor[(792), float64] */;
    %691 = reshape(%689, newshape=[1, 14, 9]) /* ty=Tensor[(1, 14, 9), float64] */;
    %692 = reshape(%690, newshape=[792]) /* ty=Tensor[(792), float64] */;
    %693 = @func_1060(%691, %692) /* ty=(Tensor[(1, 14, 9), float64], Tensor[(8, 11, 9), int8], Tensor[(792), float64]) */;
    %694 = %688.0;
    %695 = %693.1;
    (%694, %695, meta[relay.Constant][23] /* ty=Tensor[(126), float64] */, meta[relay.Constant][24] /* ty=Tensor[(792), float64] */)
  };
  %696() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(8, 11, 9), int8], Tensor[(126), float64], Tensor[(792), float64]) */
}

def @func_20140() -> Tensor[(15, 11, 11), float32] {
  @func_20138() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_3463() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) {
  @func_3461() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) */
}

def @func_20229() -> (Tensor[(792), float64],) {
  %697 = @func_15149() /* ty=Tensor[(792), float64] */;
  (%697,)
}

def @func_24224() -> Tensor[(126), float64] {
  %698 = fn () -> Tensor[(126), float64] {
    @func_24186() /* ty=Tensor[(126), float64] */
  };
  %698() /* ty=Tensor[(126), float64] */
}

def @func_20736() -> (Tensor[(15, 11, 11), float32],) {
  %701 = fn () -> (Tensor[(15, 11, 11), float32],) {
    %699 = @func_17859() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) */;
    %700 = %699.2;
    (%700,)
  };
  %701() /* ty=(Tensor[(15, 11, 11), float32],) */
}

def @func_13617() -> Tensor[(15, 11, 11), float32] {
  %703 = fn () -> Tensor[(15, 11, 11), float32] {
    %702 = @func_6394() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
    %702.0
  };
  %703() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_8548() -> Tensor[(11, 14, 13), float32] {
  %704 = @func_8023() /* ty=(Tensor[(7, 3, 16), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(1, 126), float64], Tensor[(11, 14, 13), float32], Tensor[(2002), float32]) */;
  %704.5
}

def @func_13882() -> (Tensor[(15, 11, 11), float32],) {
  @func_13880() /* ty=(Tensor[(15, 11, 11), float32],) */
}

def @func_19040() -> (Tensor[(15, 11, 11), float32],) {
  %707 = fn () -> (Tensor[(15, 11, 11), float32],) {
    %705 = @func_9844() /* ty=(Tensor[(15, 11, 11), float32],) */;
    %706 = %705.0;
    (%706,)
  };
  %707() /* ty=(Tensor[(15, 11, 11), float32],) */
}

def @func_24520() -> Tensor[(320), float32] {
  @func_24518() /* ty=Tensor[(320), float32] */
}

def @func_19771() -> Tensor[(126), float64] {
  %709 = fn () -> Tensor[(126), float64] {
    %708 = @func_6210() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(8, 11, 9), int8], Tensor[(126), float64], Tensor[(792), float64]) */;
    %708.2
  };
  %709() /* ty=Tensor[(126), float64] */
}

def @func_18896(%var_18894: Tensor[(126), float64]) -> (Tensor[(90), uint64], Tensor[(126), float64], Tensor[(1815), float32], Tensor[(126), float64], Tensor[(15, 11, 11), float32]) {
  @func_18893(%var_18894) /* ty=(Tensor[(90), uint64], Tensor[(126), float64], Tensor[(1815), float32], Tensor[(126), float64], Tensor[(15, 11, 11), float32]) */
}

def @func_14518() -> (Tensor[(15, 11, 11), float32],) {
  %712 = fn () -> (Tensor[(15, 11, 11), float32],) {
    %710 = @func_5803() /* ty=(Tensor[(15, 11, 11), float32],) */;
    %711 = %710.0;
    (%711,)
  };
  %712() /* ty=(Tensor[(15, 11, 11), float32],) */
}

def @func_23891() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %713 = @func_14811() /* ty=(Tensor[(792), float64], Tensor[(15, 11, 11), float32]) */;
  %714 = @func_3665() /* ty=Tensor[(15, 11, 11), float32] */;
  %715 = @func_2995() /* ty=Tensor[(15, 11, 11), float32] */;
  %716 = %713.1;
  (%714, %715, %716)
}

def @func_14057() -> Tensor[(15, 11, 11), float32] {
  %718 = fn () -> Tensor[(15, 11, 11), float32] {
    %717 = @func_11256() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
    %717.1
  };
  %718() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_26087() -> (Tensor[(7, 3, 16), float32], Tensor[(15, 11, 11), float32], Tensor[(320), float32]) {
  @func_26085() /* ty=(Tensor[(7, 3, 16), float32], Tensor[(15, 11, 11), float32], Tensor[(320), float32]) */
}

def @func_8972(%var_8913: Tensor[(1815), float32], %var_8928: Tensor[(2002), float32]) -> (Tensor[(15, 11, 11), float32], Tensor[(1815), float32], Tensor[(11, 14, 13), float32], Tensor[(2002), float32], Tensor[(?, 14, 8), uint64], Tensor[(?, 14, 8), float64]) {
  %719 = cast(%var_8913, dtype="float32") /* ty=Tensor[(1815), float32] */;
  %720 = reshape(%719, newshape=[15, 11, 11]) /* ty=Tensor[(15, 11, 11), float32] */;
  %721 = @func_5148(%720) /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) */;
  %722 = cast(%var_8928, dtype="float32") /* ty=Tensor[(2002), float32] */;
  %723 = reshape(%722, newshape=[11, 14, 13]) /* ty=Tensor[(11, 14, 13), float32] */;
  %724 = @func_6564(%723) /* ty=(Tensor[(11, 14, 13), float32],) */;
  %725 = cast(meta[relay.Constant][25] /* ty=Tensor[(1, 14, 8), float64] */, dtype="float64") /* ty=Tensor[(1, 14, 8), float64] */;
  %726 = sqrt(%725) /* ty=Tensor[(1, 14, 8), float64] */;
  %727 = cast(meta[relay.Constant][25] /* ty=Tensor[(1, 14, 8), float64] */, dtype="uint32") /* ty=Tensor[(1, 14, 8), uint32] */;
  %728 = shape_of(%726, dtype="int32") /* ty=Tensor[(3), int32] */;
  %729 = cast(%726, dtype="uint32") /* ty=Tensor[(1, 14, 8), uint32] */;
  %730 = dyn.reshape(%727, %728, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %731 = bitwise_or(%729, %730) /* ty=Tensor[(?, 14, 8), uint32] */;
  %732 = cast(%731, dtype="uint64") /* ty=Tensor[(?, 14, 8), uint64] */;
  %733 = shape_of(%726, dtype="int32") /* ty=Tensor[(3), int32] */;
  %734 = cast(%726, dtype="uint64") /* ty=Tensor[(1, 14, 8), uint64] */;
  %735 = dyn.reshape(%732, %733, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %736 = cast(%731, dtype="float64") /* ty=Tensor[(?, 14, 8), float64] */;
  %737 = asinh(%736) /* ty=Tensor[(?, 14, 8), float64] */;
  %738 = cast(%737, dtype="float64") /* ty=Tensor[(?, 14, 8), float64] */;
  %739 = %721.1;
  %740 = %724.0;
  %741 = right_shift(%734, %735) /* ty=Tensor[(?, 14, 8), uint64] */;
  %742 = sigmoid(%738) /* ty=Tensor[(?, 14, 8), float64] */;
  (%739, %var_8913, %740, %var_8928, %741, %742)
}

def @func_14740() -> (Tensor[(15, 11, 11), float32],) {
  %745 = fn () -> (Tensor[(15, 11, 11), float32],) {
    %743 = @func_14670() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
    %744 = %743.2;
    (%744,)
  };
  %745() /* ty=(Tensor[(15, 11, 11), float32],) */
}

def @func_15749() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %750 = fn () -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
    %746 = @func_14324() /* ty=(Tensor[(15, 11, 11), float32],) */;
    %747 = @func_12142() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), int8]) */;
    %748 = %746.0;
    %749 = %747.0;
    (%748, %749)
  };
  %750() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */
}

def @func_24001() -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(2002), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %751 = @func_15894() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %752 = %751.0;
  %753 = cast(%752, dtype="float32") /* ty=Tensor[(15, 11, 11), float32] */;
  %754 = cast(meta[relay.Constant][26] /* ty=Tensor[(2002), float32] */, dtype="float32") /* ty=Tensor[(2002), float32] */;
  %755 = reshape(%753, newshape=[1815]) /* ty=Tensor[(1815), float32] */;
  %756 = reshape(%754, newshape=[2002]) /* ty=Tensor[(2002), float32] */;
  %757 = @func_8972(%755, %756) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(1815), float32], Tensor[(11, 14, 13), float32], Tensor[(2002), float32], Tensor[(?, 14, 8), uint64], Tensor[(?, 14, 8), float64]) */;
  %758 = @func_13787() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %759 = @func_18229() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %760 = @func_14791() /* ty=(Tensor[(126), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float64]) */;
  %761 = @func_18078() /* ty=(Tensor[(90), uint64], Tensor[(15, 11, 11), float32]) */;
  %762 = %757.0;
  %763 = %758.0;
  %764 = %759.0;
  %765 = %760.1;
  %766 = %761.1;
  (%752, %762, meta[relay.Constant][26] /* ty=Tensor[(2002), float32] */, %763, %764, %765, %766)
}

def @func_25640(%var_25617: Tensor[(1, 1, 4), float64]) -> (Tensor[(15, 11, 11), float32], Tensor[(?, ?, 4), bool]) {
  %767 = @func_13500() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %768 = cast(%var_25617, dtype="float64") /* ty=Tensor[(1, 1, 4), float64] */;
  %769 = atan(%768) /* ty=Tensor[(1, 1, 4), float64] */;
  %770 = cast(%var_25617, dtype="bool") /* ty=Tensor[(1, 1, 4), bool] */;
  %771 = shape_of(%769, dtype="int32") /* ty=Tensor[(3), int32] */;
  %772 = cast(%769, dtype="bool") /* ty=Tensor[(1, 1, 4), bool] */;
  %773 = dyn.reshape(%770, %771, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %774 = %767.0;
  %775 = not_equal(%772, %773) /* ty=Tensor[(?, ?, 4), bool] */;
  (%774, %775)
}

def @func_8858() -> Tensor[(15, 11, 11), bool] {
  %777 = fn () -> Tensor[(15, 11, 11), bool] {
    %776 = @func_5691() /* ty=(Tensor[(15, 11, 11), bool],) */;
    %776.0
  };
  %777() /* ty=Tensor[(15, 11, 11), bool] */
}

def @func_15291(%var_15289: uint8, %var_15290: Tensor[(2, 7, 14), uint8]) -> (Tensor[(2, 7, 14), uint8], Tensor[(1, 126), float64]) {
  %783 = fn (%var_15267: uint8, %var_15268: Tensor[(2, 7, 14), uint8]) -> (Tensor[(2, 7, 14), uint8], Tensor[(1, 126), float64]) {
    %778 = cast(%var_15267, dtype="uint8") /* ty=uint8 */;
    %779 = cast(%var_15268, dtype="uint8") /* ty=Tensor[(2, 7, 14), uint8] */;
    %780 = @func_6589() /* ty=(Tensor[(1, 126), float64],) */;
    %781 = subtract(%778, %779) /* ty=Tensor[(2, 7, 14), uint8] */;
    %782 = %780.0;
    (%781, %782)
  };
  %783(%var_15289, %var_15290) /* ty=(Tensor[(2, 7, 14), uint8], Tensor[(1, 126), float64]) */
}

def @func_8306() -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) {
  %788 = fn () -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) {
    %784 = @func_5103() /* ty=(Tensor[(15, 11, 11), bool],) */;
    %785 = @func_6635() /* ty=(Tensor[(15, 11, 11), float32],) */;
    %786 = %784.0;
    %787 = %785.0;
    (%786, %787)
  };
  %788() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) */
}

def @func_4465(%var_4463: Tensor[(15, 11, 11), float32], %var_4464: Tensor[(126), float64]) -> (Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(126), float64], Tensor[(7, 3, 16), int8]) {
  @func_4461(%var_4463, %var_4464) /* ty=(Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(126), float64], Tensor[(7, 3, 16), int8]) */
}

def @func_14287() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  @func_14285() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */
}

def @func_22666() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  @func_22664() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */
}

def @func_26521(%var_26486: Tensor[(16, 10, 15), int32]) -> (Tensor[(15, 11, 11), float32], Tensor[(16, 10, 15), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool]) {
  %789 = cast(meta[relay.Constant][27] /* ty=Tensor[(16, 10, 15), int32] */, dtype="int32") /* ty=Tensor[(16, 10, 15), int32] */;
  %790 = shape_of(%var_26486, dtype="int32") /* ty=Tensor[(3), int32] */;
  %791 = cast(%var_26486, dtype="int32") /* ty=Tensor[(16, 10, 15), int32] */;
  %792 = dyn.reshape(%789, %790, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %793 = maximum(%791, %792) /* ty=Tensor[(16, 10, 15), int32] */;
  %794 = cast(%793, dtype="float32") /* ty=Tensor[(16, 10, 15), float32] */;
  %795 = @func_11558() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) */;
  %796 = @func_15264() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool]) */;
  %797 = @func_10729() /* ty=Tensor[(15, 11, 11), float32] */;
  %798 = log2(%794) /* ty=Tensor[(16, 10, 15), float32] */;
  %799 = %795.2;
  %800 = %796.0;
  (%797, %798, %799, %800)
}

def @func_4608() -> (Tensor[(7, 3, 16), int8], Tensor[(15, 11, 11), float32], Tensor[(1, 126), float64], Tensor[(7, 3, 16), int8], Tensor[(16, 5, 4), float32], Tensor[(320), float32]) {
  %814 = fn () -> (Tensor[(7, 3, 16), int8], Tensor[(15, 11, 11), float32], Tensor[(1, 126), float64], Tensor[(7, 3, 16), int8], Tensor[(16, 5, 4), float32], Tensor[(320), float32]) {
    %801 = @func_4371() /* ty=(Tensor[(7, 3, 16), int8],) */;
    %802 = cast(meta[relay.Constant][28] /* ty=Tensor[(1, 126), float64] */, dtype="float64") /* ty=Tensor[(1, 126), float64] */;
    %803 = reshape(%802, newshape=[126]) /* ty=Tensor[(126), float64] */;
    %804 = @func_4266(%803) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(1, 14, 9), float64], Tensor[(126), float64], Tensor[(792), float64]) */;
    %805 = @func_4371() /* ty=(Tensor[(7, 3, 16), int8],) */;
    %806 = cast(meta[relay.Constant][29] /* ty=Tensor[(320), float32] */, dtype="float32") /* ty=Tensor[(320), float32] */;
    %807 = cast(meta[relay.Constant][29] /* ty=Tensor[(320), float32] */, dtype="float32") /* ty=Tensor[(320), float32] */;
    %808 = reshape(%806, newshape=[16, 5, 4]) /* ty=Tensor[(16, 5, 4), float32] */;
    %809 = reshape(%807, newshape=[16, 5, 4]) /* ty=Tensor[(16, 5, 4), float32] */;
    %810 = %801.0;
    %811 = %804.0;
    %812 = %805.0;
    %813 = @func_3257(%808, %809) /* ty=Tensor[(16, 5, 4), float32] */;
    (%810, %811, meta[relay.Constant][28] /* ty=Tensor[(1, 126), float64] */, %812, %813, meta[relay.Constant][29] /* ty=Tensor[(320), float32] */)
  };
  %814() /* ty=(Tensor[(7, 3, 16), int8], Tensor[(15, 11, 11), float32], Tensor[(1, 126), float64], Tensor[(7, 3, 16), int8], Tensor[(16, 5, 4), float32], Tensor[(320), float32]) */
}

def @func_25545() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(3, 15, 3), int64], Tensor[(135), int64]) {
  %824 = fn () -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(3, 15, 3), int64], Tensor[(135), int64]) {
    %815 = @func_17934() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) */;
    %816 = @func_14670() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
    %817 = cast(meta[relay.Constant][30] /* ty=Tensor[(135), int64] */, dtype="int64") /* ty=Tensor[(135), int64] */;
    %818 = reshape(%817, newshape=[3, 15, 3]) /* ty=Tensor[(3, 15, 3), int64] */;
    %819 = @func_23508(%818) /* ty=(Tensor[(3, 15, 3), int64],) */;
    %820 = @func_10486() /* ty=Tensor[(15, 11, 11), float32] */;
    %821 = %815.0;
    %822 = %816.0;
    %823 = %819.0;
    (%820, %821, %822, %823, meta[relay.Constant][30] /* ty=Tensor[(135), int64] */)
  };
  %824() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(3, 15, 3), int64], Tensor[(135), int64]) */
}

def @func_8753() -> Tensor[(6, 5, 3), float64] {
  %828 = fn () -> Tensor[(6, 5, 3), float64] {
    %825 = @func_4949() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), uint64], Tensor[(792), float64]) */;
    %826 = %825.1;
    %827 = cast(%826, dtype="float64") /* ty=Tensor[(6, 5, 3), float64] */;
    cos(%827) /* ty=Tensor[(6, 5, 3), float64] */
  };
  %828() /* ty=Tensor[(6, 5, 3), float64] */
}

def @func_13062(%var_13051: Tensor[(12, 3, 16), int64], %var_13052: Tensor[(12, 3, 16), int64]) -> Tensor[(12, 3, 16), bool] {
  %829 = cast(%var_13052, dtype="bool") /* ty=Tensor[(12, 3, 16), bool] */;
  %830 = shape_of(%var_13051, dtype="int32") /* ty=Tensor[(3), int32] */;
  %831 = cast(%var_13051, dtype="bool") /* ty=Tensor[(12, 3, 16), bool] */;
  %832 = dyn.reshape(%829, %830, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %833 = greater(%831, %832) /* ty=Tensor[(12, 3, 16), bool] */;
  %834 = cast(%var_13051, dtype="bool") /* ty=Tensor[(12, 3, 16), bool] */;
  %835 = shape_of(%833, dtype="int32") /* ty=Tensor[(3), int32] */;
  %836 = cast(%833, dtype="bool") /* ty=Tensor[(12, 3, 16), bool] */;
  %837 = dyn.reshape(%834, %835, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%836, %837) /* ty=Tensor[(12, 3, 16), bool] */
}

def @func_21162() -> Tensor[(15, 11, 11), float32] {
  @func_21160() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_19881() -> Tensor[(6, 5, 3), float64] {
  %838 = @func_13210() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64]) */;
  %839 = %838.1;
  %840 = cast(%839, dtype="float64") /* ty=Tensor[(6, 5, 3), float64] */;
  cosh(%840) /* ty=Tensor[(6, 5, 3), float64] */
}

def @func_22432(%var_22420: Tensor[(126), float64]) -> (Tensor[(15, 11, 11), float32], Tensor[(126), float64], Tensor[(126), float64]) {
  %841 = @func_3160() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %842 = %841.0;
  %843 = cast(%842, dtype="float32") /* ty=Tensor[(15, 11, 11), float32] */;
  %844 = cast(%var_22420, dtype="float64") /* ty=Tensor[(126), float64] */;
  %845 = reshape(%843, newshape=[15, 11, 11]) /* ty=Tensor[(15, 11, 11), float32] */;
  %846 = reshape(%844, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %847 = @func_4461(%845, %846) /* ty=(Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(126), float64], Tensor[(7, 3, 16), int8]) */;
  %848 = %847.5;
  (%842, %848, %var_22420)
}

def @func_24652() -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(90), uint64], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %862 = fn () -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(90), uint64], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
    %849 = @func_14285() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
    %850 = cast(meta[relay.Constant][31] /* ty=Tensor[(90), uint64] */, dtype="uint64") /* ty=Tensor[(90), uint64] */;
    %851 = reshape(%850, newshape=[90]) /* ty=Tensor[(90), uint64] */;
    %852 = @func_3215(%851) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), uint64], Tensor[(90), uint64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
    %853 = @func_15264() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool]) */;
    %854 = @func_14791() /* ty=(Tensor[(126), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float64]) */;
    %855 = @func_15834() /* ty=Tensor[(15, 11, 11), bool] */;
    %856 = %849.0;
    %857 = %852.3;
    %858 = %853.1;
    %859 = %854.2;
    %860 = @func_10486() /* ty=Tensor[(15, 11, 11), float32] */;
    %861 = @func_16993() /* ty=Tensor[(15, 11, 11), float32] */;
    (%855, %856, %857, meta[relay.Constant][31] /* ty=Tensor[(90), uint64] */, %858, %859, %860, %861)
  };
  %862() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(90), uint64], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */
}

def @func_26330() -> (Tensor[(18, 100), float64], Tensor[(15, 11, 11), float32]) {
  %867 = fn () -> (Tensor[(18, 100), float64], Tensor[(15, 11, 11), float32]) {
    %863 = @func_23672() /* ty=(Tensor[(15, 11, 11), float64], Tensor[(8, 15, 15), float64], Tensor[(18, 100), float64]) */;
    %864 = @func_3780() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
    %865 = %863.2;
    %866 = %864.0;
    (%865, %866)
  };
  %867() /* ty=(Tensor[(18, 100), float64], Tensor[(15, 11, 11), float32]) */
}

def @func_12031() -> (Tensor[(15, 11, 11), float32],) {
  @func_12029() /* ty=(Tensor[(15, 11, 11), float32],) */
}

def @func_13531() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(1, 126), float64]) {
  @func_13529() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(1, 126), float64]) */
}

def @func_20482() -> Tensor[(15, 11, 11), float32] {
  %868 = fn () -> Tensor[(15, 11, 11), float32] {
    @func_3074() /* ty=Tensor[(15, 11, 11), float32] */
  };
  %868() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_5691() -> (Tensor[(15, 11, 11), bool],) {
  %869 = @func_5103() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %870 = %869.0;
  (%870,)
}

def @func_7686(%var_7684: Tensor[(1, 126), float64], %var_7685: Tensor[(792), float64]) -> (Tensor[(7, 3, 16), float64], Tensor[(1, 14, 9), float64], Tensor[(1, 126), float64], Tensor[(792), float64]) {
  %881 = fn (%var_7675: Tensor[(1, 126), float64], %var_7676: Tensor[(792), float64]) -> (Tensor[(7, 3, 16), float64], Tensor[(1, 14, 9), float64], Tensor[(1, 126), float64], Tensor[(792), float64]) {
    %871 = @func_7501() /* ty=(Tensor[(7, 3, 16), float64], Tensor[(7, 3, 16), int8], Tensor[(15, 11, 11), float32], Tensor[(8, 126), int8], Tensor[(504, 2), float64]) */;
    %872 = %871.1;
    %873 = cast(%872, dtype="float64") /* ty=Tensor[(7, 3, 16), float64] */;
    %874 = cast(%var_7675, dtype="float64") /* ty=Tensor[(1, 126), float64] */;
    %875 = cast(%var_7676, dtype="float64") /* ty=Tensor[(792), float64] */;
    %876 = reshape(%874, newshape=[1, 14, 9]) /* ty=Tensor[(1, 14, 9), float64] */;
    %877 = reshape(%875, newshape=[792]) /* ty=Tensor[(792), float64] */;
    %878 = @func_1060(%876, %877) /* ty=(Tensor[(1, 14, 9), float64], Tensor[(8, 11, 9), int8], Tensor[(792), float64]) */;
    %879 = cosh(%873) /* ty=Tensor[(7, 3, 16), float64] */;
    %880 = %878.0;
    (%879, %880, %var_7675, %var_7676)
  };
  %881(%var_7684, %var_7685) /* ty=(Tensor[(7, 3, 16), float64], Tensor[(1, 14, 9), float64], Tensor[(1, 126), float64], Tensor[(792), float64]) */
}

def @func_18677() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) {
  %882 = @func_15124() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %883 = %882.1;
  %884 = @func_11408() /* ty=Tensor[(15, 11, 11), bool] */;
  %885 = @func_15176() /* ty=Tensor[(15, 11, 11), float32] */;
  (%883, %884, %885)
}

def @func_23893() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  @func_23891() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */
}

def @func_12143() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), int8]) {
  %894 = fn () -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), int8]) {
    %886 = @func_6819() /* ty=(Tensor[(15, 11, 11), float32],) */;
    %887 = @func_8305() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) */;
    %888 = @func_7756() /* ty=(Tensor[(15, 11, 11), float32],) */;
    %889 = @func_5026() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float64], Tensor[(7, 3, 16), int8]) */;
    %890 = %886.0;
    %891 = %887.0;
    %892 = %888.0;
    %893 = %889.2;
    (%890, %891, %892, %893)
  };
  %894() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), int8]) */
}

def @func_22815() -> (Tensor[(1, 14, 9), float64],) {
  %895 = @func_8157() /* ty=(Tensor[(7, 3, 16), float32], Tensor[(1, 14, 9), float64], Tensor[(126), float64]) */;
  %896 = %895.1;
  (%896,)
}

def @func_11344() -> Tensor[(15, 11, 11), float32] {
  @func_11342() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_18041() -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) {
  @func_18039() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) */
}

def @func_20053() -> Tensor[(6, 5, 3), float64] {
  %897 = fn () -> Tensor[(6, 5, 3), float64] {
    @func_19438() /* ty=Tensor[(6, 5, 3), float64] */
  };
  %897() /* ty=Tensor[(6, 5, 3), float64] */
}

def @func_17861() -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) {
  @func_17859() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) */
}

def @func_21405() -> (Tensor[(15, 11, 11), bool],) {
  %898 = @func_15834() /* ty=Tensor[(15, 11, 11), bool] */;
  (%898,)
}

def @func_17968() -> (Tensor[(15, 11, 11), bool],) {
  @func_17966() /* ty=(Tensor[(15, 11, 11), bool],) */
}

def @func_14002() -> (Tensor[(15, 11, 11), float32], Tensor[(90), uint64], Tensor[(15, 11, 11), float64]) {
  %904 = fn () -> (Tensor[(15, 11, 11), float32], Tensor[(90), uint64], Tensor[(15, 11, 11), float64]) {
    %899 = @func_9213() /* ty=(Tensor[(90), uint64], Tensor[(15, 11, 11), float32]) */;
    %900 = @func_12932() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float64]) */;
    %901 = @func_11342() /* ty=Tensor[(15, 11, 11), float32] */;
    %902 = %899.0;
    %903 = %900.1;
    (%901, %902, %903)
  };
  %904() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(90), uint64], Tensor[(15, 11, 11), float64]) */
}

def @func_20189() -> (Tensor[(15, 11, 11), float32],) {
  %907 = fn () -> (Tensor[(15, 11, 11), float32],) {
    %905 = @func_16689() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(90), uint64], Tensor[(15, 11, 11), float32]) */;
    %906 = %905.2;
    (%906,)
  };
  %907() /* ty=(Tensor[(15, 11, 11), float32],) */
}

def @func_21134() -> Tensor[(15, 11, 11), float32] {
  @func_21132() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_7091() -> (Tensor[(7, 3, 16), int8], Tensor[(6, 5, 3), float64], Tensor[(1815), bool], Tensor[(126), float64], Tensor[(320), float32], Tensor[(7, 3, 16), int8]) {
  @func_7089() /* ty=(Tensor[(7, 3, 16), int8], Tensor[(6, 5, 3), float64], Tensor[(1815), bool], Tensor[(126), float64], Tensor[(320), float32], Tensor[(7, 3, 16), int8]) */
}

def @func_25222() -> Tensor[(13, 4, 13), float32] {
  @func_11072() /* ty=Tensor[(13, 4, 13), float32] */
}

def @func_25224() -> Tensor[(13, 4, 13), float32] {
  @func_25222() /* ty=Tensor[(13, 4, 13), float32] */
}

def @func_9087() -> (Tensor[(7, 3, 16), float64], Tensor[(15, 11, 11), float32], Tensor[(126), float64]) {
  @func_9085() /* ty=(Tensor[(7, 3, 16), float64], Tensor[(15, 11, 11), float32], Tensor[(126), float64]) */
}

def @func_12522() -> (Tensor[(15, 11, 11), bool],) {
  %908 = @func_5896() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %909 = %908.0;
  (%909,)
}

def @func_17763() -> Tensor[(7, 3, 16), float32] {
  %911 = fn () -> Tensor[(7, 3, 16), float32] {
    %910 = @func_8157() /* ty=(Tensor[(7, 3, 16), float32], Tensor[(1, 14, 9), float64], Tensor[(126), float64]) */;
    %910.0
  };
  %911() /* ty=Tensor[(7, 3, 16), float32] */
}

def @func_15023() -> Tensor[(15, 11, 11), float32] {
  %912 = @func_8816() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %912.0
}

def @func_12484() -> (Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), bool]) {
  %913 = @func_5438() /* ty=(Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), float64]) */;
  %914 = %913.0;
  %915 = @func_10085() /* ty=Tensor[(15, 11, 11), bool] */;
  (%914, %915)
}

def @func_3379(%var_3370: Tensor[(15, 11, 11), float32]) -> Tensor[(15, 11, 11), bool] {
  %916 = @func_2900() /* ty=Tensor[(15, 11, 11), float32] */;
  %917 = cast(%var_3370, dtype="bool") /* ty=Tensor[(15, 11, 11), bool] */;
  %918 = shape_of(%916, dtype="int32") /* ty=Tensor[(3), int32] */;
  %919 = cast(%916, dtype="bool") /* ty=Tensor[(15, 11, 11), bool] */;
  %920 = dyn.reshape(%917, %918, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%919, %920) /* ty=Tensor[(15, 11, 11), bool] */
}

def @func_7919() -> Tensor[(15, 11, 11), bool] {
  @func_7917() /* ty=Tensor[(15, 11, 11), bool] */
}

def @func_21037() -> (Tensor[(15, 11, 11), bool],) {
  %921 = @func_12522() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %922 = %921.0;
  (%922,)
}

def @func_21703() -> Tensor[(15, 11, 11), float32] {
  %923 = @func_6265() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %923.0
}

def @func_7729() -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) {
  @func_7727() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) */
}

def @main() -> (Tensor[(90), uint64], Tensor[(15, 11, 11), float32], Tensor[(7, 126), float32]) {
  %924 = @func_23012() /* ty=(Tensor[(90), uint64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float64]) */;
  %925 = @func_20427() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %926 = @func_5073() /* ty=Tensor[(1, 126), float64] */;
  %927 = cast(%926, dtype="bool") /* ty=Tensor[(1, 126), bool] */;
  %928 = cast(meta[relay.Constant][32] /* ty=Tensor[(7, 126), float64] */, dtype="bool") /* ty=Tensor[(7, 126), bool] */;
  %929 = greater_equal(%927, %928) /* ty=Tensor[(7, 126), bool] */;
  %930 = cast(meta[relay.Constant][32] /* ty=Tensor[(7, 126), float64] */, dtype="int8") /* ty=Tensor[(7, 126), int8] */;
  %931 = shape_of(%929, dtype="int32") /* ty=Tensor[(2), int32] */;
  %932 = cast(%929, dtype="int8") /* ty=Tensor[(7, 126), int8] */;
  %933 = dyn.reshape(%930, %931, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %934 = right_shift(%932, %933) /* ty=Tensor[(7, 126), int8] */;
  %935 = cast(meta[relay.Constant][32] /* ty=Tensor[(7, 126), float64] */, dtype="bool") /* ty=Tensor[(7, 126), bool] */;
  %936 = cast(%926, dtype="bool") /* ty=Tensor[(1, 126), bool] */;
  %937 = equal(%935, %936) /* ty=Tensor[(7, 126), bool] */;
  %938 = cast(%937, dtype="float32") /* ty=Tensor[(7, 126), float32] */;
  %939 = shape_of(%934, dtype="int32") /* ty=Tensor[(2), int32] */;
  %940 = cast(%934, dtype="float32") /* ty=Tensor[(7, 126), float32] */;
  %941 = dyn.reshape(%938, %939, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %942 = %924.0;
  %943 = %925.2;
  %944 = floor_mod(%940, %941) /* ty=Tensor[(7, 126), float32] */;
  (%942, %943, %944)
}

def @func_8270() -> (Tensor[(15, 11, 11), float32],) {
  @func_8268() /* ty=(Tensor[(15, 11, 11), float32],) */
}

def @func_11074() -> Tensor[(13, 4, 13), float32] {
  @func_11072() /* ty=Tensor[(13, 4, 13), float32] */
}

def @func_4076(%var_4074: Tensor[(21, 6), float64], %var_4075: Tensor[(320), float32]) -> (Tensor[(15, 11, 11), float32], Tensor[(8, 11, 9), int8], Tensor[(792), float64], Tensor[(15, 11, 11), float32], Tensor[(792), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(35), float64], Tensor[(16, 5, 4), float32], Tensor[(320), float32], Tensor[(21, 6), float32], Tensor[(15, 11, 11), float32], Tensor[(792), float64], Tensor[(16, 5, 4), float32]) {
  @func_4072(%var_4074, %var_4075) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(8, 11, 9), int8], Tensor[(792), float64], Tensor[(15, 11, 11), float32], Tensor[(792), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(35), float64], Tensor[(16, 5, 4), float32], Tensor[(320), float32], Tensor[(21, 6), float32], Tensor[(15, 11, 11), float32], Tensor[(792), float64], Tensor[(16, 5, 4), float32]) */
}

def @func_5026() -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float64], Tensor[(7, 3, 16), int8]) {
  %945 = @func_3322() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %946 = @func_4328() /* ty=(Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), float32]) */;
  %947 = @func_4371() /* ty=(Tensor[(7, 3, 16), int8],) */;
  %948 = %945.0;
  %949 = %946.0;
  %950 = %947.0;
  (%948, %949, %950)
}

def @func_22609() -> Tensor[(15, 11, 11), float32] {
  @func_22607() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_14325() -> (Tensor[(15, 11, 11), float32],) {
  %953 = fn () -> (Tensor[(15, 11, 11), float32],) {
    %951 = @func_6265() /* ty=(Tensor[(15, 11, 11), float32],) */;
    %952 = %951.0;
    (%952,)
  };
  %953() /* ty=(Tensor[(15, 11, 11), float32],) */
}

def @func_7572() -> Tensor[(15, 11, 11), bool] {
  @func_7570() /* ty=Tensor[(15, 11, 11), bool] */
}

def @func_26096() -> (Tensor[(15, 11, 11), float32],) {
  @func_26094() /* ty=(Tensor[(15, 11, 11), float32],) */
}

def @func_16821() -> Tensor[(15, 11, 11), float32] {
  @func_16819() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_16279(%var_16276: Tensor[(24, 26), float32]) -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(624), float32], Tensor[(24, 26), float32]) {
  %954 = cast(%var_16276, dtype="float32") /* ty=Tensor[(24, 26), float32] */;
  %955 = reshape(%954, newshape=[624]) /* ty=Tensor[(624), float32] */;
  %956 = @func_15416(%955) /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], float32, Tensor[(624), float32], Tensor[(13, 4, 13), float32], Tensor[(8, 13, 6), float64]) */;
  %957 = @func_4906() /* ty=Tensor[(15, 11, 11), float32] */;
  %958 = @func_13173() /* ty=Tensor[(15, 11, 11), float32] */;
  %959 = %956.3;
  (%957, %958, %959, %var_16276)
}

def @func_23567() -> (Tensor[(1, 126), float64], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) {
  %964 = fn () -> (Tensor[(1, 126), float64], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) {
    %960 = @func_15264() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool]) */;
    %961 = @func_5073() /* ty=Tensor[(1, 126), float64] */;
    %962 = %960.0;
    %963 = @func_17201() /* ty=Tensor[(15, 11, 11), float32] */;
    (%961, %962, %963)
  };
  %964() /* ty=(Tensor[(1, 126), float64], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) */
}

def @func_17966() -> (Tensor[(15, 11, 11), bool],) {
  %965 = @func_8857() /* ty=Tensor[(15, 11, 11), bool] */;
  (%965,)
}

def @func_15699() -> Tensor[(15, 11, 11), float32] {
  @func_15697() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_18480() -> Tensor[(15, 11, 11), float32] {
  @func_18478() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_16516() -> (Tensor[(15, 11, 11), bool], Tensor[(2, 1, 15), float32], Tensor[(30), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float64], Tensor[(15, 11, 11), bool]) {
  %978 = fn () -> (Tensor[(15, 11, 11), bool], Tensor[(2, 1, 15), float32], Tensor[(30), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float64], Tensor[(15, 11, 11), bool]) {
    %966 = @func_5967() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(7, 3, 16), float32], Tensor[(15, 11, 11), bool]) */;
    %967 = cast(meta[relay.Constant][33] /* ty=Tensor[(30), float32] */, dtype="float32") /* ty=Tensor[(30), float32] */;
    %968 = reshape(%967, newshape=[2, 1, 15]) /* ty=Tensor[(2, 1, 15), float32] */;
    %969 = @func_5803() /* ty=(Tensor[(15, 11, 11), float32],) */;
    %970 = @func_7501() /* ty=(Tensor[(7, 3, 16), float64], Tensor[(7, 3, 16), int8], Tensor[(15, 11, 11), float32], Tensor[(8, 126), int8], Tensor[(504, 2), float64]) */;
    %971 = @func_15880() /* ty=(Tensor[(15, 11, 11), bool],) */;
    %972 = %966.0;
    %973 = @func_5670(%968) /* ty=Tensor[(2, 1, 15), float32] */;
    %974 = @func_7214() /* ty=Tensor[(15, 11, 11), float32] */;
    %975 = %969.0;
    %976 = %970.0;
    %977 = %971.0;
    (%972, %973, meta[relay.Constant][33] /* ty=Tensor[(30), float32] */, %974, %975, %976, %977)
  };
  %978() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(2, 1, 15), float32], Tensor[(30), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float64], Tensor[(15, 11, 11), bool]) */
}

def @func_5073() -> Tensor[(1, 126), float64] {
  %979 = @func_4607() /* ty=(Tensor[(7, 3, 16), int8], Tensor[(15, 11, 11), float32], Tensor[(1, 126), float64], Tensor[(7, 3, 16), int8], Tensor[(16, 5, 4), float32], Tensor[(320), float32]) */;
  %979.2
}

def @func_9296() -> (Tensor[(15, 11, 11), bool],) {
  %980 = @func_5691() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %981 = %980.0;
  (%981,)
}

def @func_10487() -> Tensor[(15, 11, 11), float32] {
  %983 = fn () -> Tensor[(15, 11, 11), float32] {
    %982 = @func_9375() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float32]) */;
    %982.0
  };
  %983() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_16381() -> Tensor[(15, 11, 11), float32] {
  %984 = @func_12029() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %984.0
}

def @func_5860() -> Tensor[(15, 11, 11), float32] {
  @func_3074() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_13788() -> (Tensor[(15, 11, 11), float32],) {
  %986 = fn () -> (Tensor[(15, 11, 11), float32],) {
    %985 = @func_13393() /* ty=Tensor[(15, 11, 11), float32] */;
    (%985,)
  };
  %986() /* ty=(Tensor[(15, 11, 11), float32],) */
}

def @func_4372() -> (Tensor[(7, 3, 16), int8],) {
  %992 = fn () -> (Tensor[(7, 3, 16), int8],) {
    %987 = cast(meta[relay.Constant][35] /* ty=Tensor[(7, 3, 16), int8] */, dtype="int8") /* ty=Tensor[(7, 3, 16), int8] */;
    %988 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(7, 3, 16), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %989 = cast(meta[relay.Constant][34] /* ty=Tensor[(7, 3, 16), int8] */, dtype="int8") /* ty=Tensor[(7, 3, 16), int8] */;
    %990 = dyn.reshape(%987, %988, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %991 = bitwise_or(%989, %990) /* ty=Tensor[(7, 3, 16), int8] */;
    (%991,)
  };
  %992() /* ty=(Tensor[(7, 3, 16), int8],) */
}

def @func_20255() -> (Tensor[(15, 11, 11), bool], Tensor[(7, 3, 16), float64]) {
  %993 = @func_10692() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %994 = @func_6987() /* ty=(Tensor[(7, 3, 16), float32],) */;
  %995 = %994.0;
  %996 = cast(%995, dtype="float64") /* ty=Tensor[(7, 3, 16), float64] */;
  %997 = %993.0;
  %998 = cos(%996) /* ty=Tensor[(7, 3, 16), float64] */;
  (%997, %998)
}

def @func_25776() -> (Tensor[(15, 11, 11), float32],) {
  %999 = @func_17623() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool]) */;
  %1000 = %999.1;
  (%1000,)
}

def @func_17397(%var_17395: Tensor[(90), uint64], %var_17396: Tensor[(8, 78), float32]) -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(90), uint64], Tensor[(90), uint64], Tensor[(792), float64], Tensor[(8, 78), int8], Tensor[(8, 78), uint8]) {
  %1021 = fn (%var_17349: Tensor[(90), uint64], %var_17383: Tensor[(8, 78), float32]) -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(90), uint64], Tensor[(90), uint64], Tensor[(792), float64], Tensor[(8, 78), int8], Tensor[(8, 78), uint8]) {
    %1001 = @func_9085() /* ty=(Tensor[(7, 3, 16), float64], Tensor[(15, 11, 11), float32], Tensor[(126), float64]) */;
    %1002 = @func_5803() /* ty=(Tensor[(15, 11, 11), float32],) */;
    %1003 = cast(%var_17349, dtype="uint64") /* ty=Tensor[(90), uint64] */;
    %1004 = reshape(%1003, newshape=[90]) /* ty=Tensor[(90), uint64] */;
    %1005 = @func_3215(%1004) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), uint64], Tensor[(90), uint64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
    %1006 = cast(%var_17383, dtype="float32") /* ty=Tensor[(8, 78), float32] */;
    %1007 = reshape(%1006, newshape=[624]) /* ty=Tensor[(624), float32] */;
    %1008 = @func_15416(%1007) /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], float32, Tensor[(624), float32], Tensor[(13, 4, 13), float32], Tensor[(8, 13, 6), float64]) */;
    %1009 = %1008.2;
    %1010 = cast(%var_17383, dtype="int8") /* ty=Tensor[(8, 78), int8] */;
    %1011 = cast(%1009, dtype="int8") /* ty=int8 */;
    %1012 = cast(%var_17383, dtype="uint8") /* ty=Tensor[(8, 78), uint8] */;
    %1013 = cast(%1009, dtype="uint8") /* ty=uint8 */;
    %1014 = @func_15023() /* ty=Tensor[(15, 11, 11), float32] */;
    %1015 = %1001.1;
    %1016 = %1002.0;
    %1017 = %1005.2;
    %1018 = @func_15149() /* ty=Tensor[(792), float64] */;
    %1019 = subtract(%1010, %1011) /* ty=Tensor[(8, 78), int8] */;
    %1020 = logical_xor(%1012, %1013) /* ty=Tensor[(8, 78), uint8] */;
    (%1014, %1015, %1016, %1017, %var_17349, %1018, %1019, %1020)
  };
  %1021(%var_17395, %var_17396) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(90), uint64], Tensor[(90), uint64], Tensor[(792), float64], Tensor[(8, 78), int8], Tensor[(8, 78), uint8]) */
}

def @func_11256() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %1022 = @func_8268() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1023 = @func_10729() /* ty=Tensor[(15, 11, 11), float32] */;
  %1024 = %1022.0;
  (%1023, %1024)
}

def @func_3324() -> (Tensor[(15, 11, 11), bool],) {
  @func_3322() /* ty=(Tensor[(15, 11, 11), bool],) */
}

def @func_11307() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %1028 = fn () -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
    %1025 = @func_6394() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
    %1026 = %1025.1;
    %1027 = @func_10729() /* ty=Tensor[(15, 11, 11), float32] */;
    (%1026, %1027)
  };
  %1028() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */
}

def @func_22607() -> Tensor[(15, 11, 11), float32] {
  %1029 = @func_14974() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float32]) */;
  %1029.2
}

def @func_7614() -> (Tensor[(15, 11, 11), float32],) {
  %1030 = @func_4906() /* ty=Tensor[(15, 11, 11), float32] */;
  (%1030,)
}

def @func_13174() -> Tensor[(15, 11, 11), float32] {
  %1032 = fn () -> Tensor[(15, 11, 11), float32] {
    %1031 = @func_8268() /* ty=(Tensor[(15, 11, 11), float32],) */;
    %1031.0
  };
  %1032() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_4125() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %1035 = fn () -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
    %1033 = @func_2995() /* ty=Tensor[(15, 11, 11), float32] */;
    %1034 = @func_2978() /* ty=Tensor[(15, 11, 11), float32] */;
    (%1033, %1034)
  };
  %1035() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */
}

def @func_9744() -> (Tensor[(15, 11, 11), float32],) {
  %1038 = fn () -> (Tensor[(15, 11, 11), float32],) {
    %1036 = @func_8171() /* ty=(Tensor[(15, 11, 11), float32],) */;
    %1037 = %1036.0;
    (%1037,)
  };
  %1038() /* ty=(Tensor[(15, 11, 11), float32],) */
}

def @func_19917() -> (Tensor[(15, 11, 11), float32],) {
  %1039 = @func_13832() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1040 = %1039.0;
  (%1040,)
}

def @func_8429() -> (Tensor[(15, 11, 11), float32], Tensor[(320), float32]) {
  @func_8427() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(320), float32]) */
}

def @func_21705() -> Tensor[(15, 11, 11), float32] {
  @func_21703() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_16978() -> (Tensor[(7, 3, 16), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) {
  %1041 = @func_14974() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float32]) */;
  %1042 = @func_5931() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) */;
  %1043 = %1042.1;
  %1044 = cast(%1043, dtype="float32") /* ty=Tensor[(15, 11, 11), float32] */;
  %1045 = reshape(%1044, newshape=[15, 11, 11]) /* ty=Tensor[(15, 11, 11), float32] */;
  %1046 = @func_5148(%1045) /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) */;
  %1047 = %1041.3;
  %1048 = %1046.0;
  (%1047, %1043, %1048)
}

def @func_13294(%var_13267: Tensor[(126), float64]) -> (Tensor[(15, 11, 11), bool], Tensor[(126), float64], Tensor[(126), float64], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool]) {
  %1049 = @func_6148() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %1050 = cast(%var_13267, dtype="float64") /* ty=Tensor[(126), float64] */;
  %1051 = reshape(%1050, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %1052 = @func_5555(%1051) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(126), float64], Tensor[(320), float32], Tensor[(80, 4), float64]) */;
  %1053 = @func_9874() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) */;
  %1054 = %1049.0;
  %1055 = %1052.2;
  %1056 = %1053.1;
  %1057 = @func_10085() /* ty=Tensor[(15, 11, 11), bool] */;
  (%1054, %1055, %var_13267, %1056, %1057)
}

def @func_12664(%var_12638: Tensor[(30), float32]) -> (Tensor[(15, 11, 11), float32], Tensor[(1, 14, 9), float64], Tensor[(126), float64], Tensor[(2, 1, 15), float32], Tensor[(30), float32], Tensor[(792), float64]) {
  %1058 = @func_12398() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %1059 = cast(meta[relay.Constant][36] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
  %1060 = reshape(%1059, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %1061 = @func_10054(%1060) /* ty=(Tensor[(15, 11, 11), bool], Tensor[(6, 5, 3), float64], Tensor[(90), uint64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(1, 14, 9), float64], Tensor[(126), float64]) */;
  %1062 = cast(%var_12638, dtype="float32") /* ty=Tensor[(30), float32] */;
  %1063 = reshape(%1062, newshape=[2, 1, 15]) /* ty=Tensor[(2, 1, 15), float32] */;
  %1064 = @func_7447() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(792), float64]) */;
  %1065 = %1058.0;
  %1066 = %1061.6;
  %1067 = @func_5670(%1063) /* ty=Tensor[(2, 1, 15), float32] */;
  %1068 = %1064.1;
  (%1065, %1066, meta[relay.Constant][36] /* ty=Tensor[(126), float64] */, %1067, %var_12638, %1068)
}

def @func_18447() -> (Tensor[(15, 11, 11), float32], Tensor[(126), float64], Tensor[(6, 5, 3), float64], Tensor[(15, 11, 11), float32]) {
  %1069 = @func_14791() /* ty=(Tensor[(126), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float64]) */;
  %1070 = @func_13210() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64]) */;
  %1071 = @func_15748() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %1072 = @func_6889() /* ty=Tensor[(15, 11, 11), float32] */;
  %1073 = %1069.0;
  %1074 = %1070.1;
  %1075 = %1071.0;
  (%1072, %1073, %1074, %1075)
}

def @func_4906() -> Tensor[(15, 11, 11), float32] {
  %1076 = @func_3748() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(792), float64], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(90), uint64]) */;
  %1076.4
}

def @func_19901() -> (Tensor[(7, 3, 16), float32], Tensor[(2, 14, 1), bool], int16) {
  %1083 = fn () -> (Tensor[(7, 3, 16), float32], Tensor[(2, 14, 1), bool], int16) {
    %1077 = @func_6987() /* ty=(Tensor[(7, 3, 16), float32],) */;
    %1078 = cast(meta[relay.Constant][37] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %1079 = reshape(%1078, newshape=[]) /* ty=int16 */;
    %1080 = @func_10765(%1079) /* ty=(Tensor[(2, 14, 1), bool],) */;
    %1081 = %1077.0;
    %1082 = %1080.0;
    (%1081, %1082, meta[relay.Constant][37] /* ty=int16 */)
  };
  %1083() /* ty=(Tensor[(7, 3, 16), float32], Tensor[(2, 14, 1), bool], int16) */
}

def @func_22729() -> (Tensor[(15, 11, 11), float32],) {
  @func_22727() /* ty=(Tensor[(15, 11, 11), float32],) */
}

def @func_6395() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %1087 = fn () -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
    %1084 = @func_6265() /* ty=(Tensor[(15, 11, 11), float32],) */;
    %1085 = %1084.0;
    %1086 = @func_4906() /* ty=Tensor[(15, 11, 11), float32] */;
    (%1085, %1086)
  };
  %1087() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */
}

def @func_26376(%var_26365: Tensor[(8, 6, 8), int64], %var_26366: Tensor[(8, 6, 8), int64]) -> (Tensor[(8, 6, 8), int64], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool]) {
  %1088 = cast(%var_26366, dtype="int64") /* ty=Tensor[(8, 6, 8), int64] */;
  %1089 = shape_of(%var_26365, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1090 = cast(%var_26365, dtype="int64") /* ty=Tensor[(8, 6, 8), int64] */;
  %1091 = dyn.reshape(%1088, %1089, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1092 = @func_22101() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), bool]) */;
  %1093 = bitwise_and(%1090, %1091) /* ty=Tensor[(8, 6, 8), int64] */;
  %1094 = @func_10085() /* ty=Tensor[(15, 11, 11), bool] */;
  %1095 = %1092.2;
  (%1093, %1094, %1095)
}

def @func_5898() -> (Tensor[(15, 11, 11), bool],) {
  @func_5896() /* ty=(Tensor[(15, 11, 11), bool],) */
}

def @func_11765() -> (Tensor[(15, 11, 11), float32],) {
  @func_11763() /* ty=(Tensor[(15, 11, 11), float32],) */
}

def @func_13502() -> (Tensor[(15, 11, 11), float32],) {
  @func_13500() /* ty=(Tensor[(15, 11, 11), float32],) */
}

def @func_20138() -> Tensor[(15, 11, 11), float32] {
  @func_8380() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_25131() -> Tensor[(15, 11, 11), float32] {
  @func_25129() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_8976(%var_8974: Tensor[(1815), float32], %var_8975: Tensor[(2002), float32]) -> (Tensor[(15, 11, 11), float32], Tensor[(1815), float32], Tensor[(11, 14, 13), float32], Tensor[(2002), float32], Tensor[(?, 14, 8), uint64], Tensor[(?, 14, 8), float64]) {
  @func_8972(%var_8974, %var_8975) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(1815), float32], Tensor[(11, 14, 13), float32], Tensor[(2002), float32], Tensor[(?, 14, 8), uint64], Tensor[(?, 14, 8), float64]) */
}

def @func_12595() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) {
  %1101 = fn () -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) {
    %1096 = @func_7642() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
    %1097 = %1096.1;
    %1098 = cast(%1097, dtype="float32") /* ty=Tensor[(15, 11, 11), float32] */;
    %1099 = reshape(%1098, newshape=[15, 11, 11]) /* ty=Tensor[(15, 11, 11), float32] */;
    %1100 = @func_3379(%1099) /* ty=Tensor[(15, 11, 11), bool] */;
    (%1097, %1100)
  };
  %1101() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) */
}

def @func_14622() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  @func_14620() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */
}

def @func_21132() -> Tensor[(15, 11, 11), float32] {
  %1102 = @func_11839() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %1102.0
}

def @func_9678() -> (Tensor[(15, 11, 11), bool],) {
  %1103 = @func_7570() /* ty=Tensor[(15, 11, 11), bool] */;
  (%1103,)
}

def @func_16995() -> Tensor[(15, 11, 11), float32] {
  @func_16993() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_17713(%var_17709: int64, %var_17710: Tensor[(3, 14, 14), int64], %var_17711: Tensor[(126), float64], %var_17712: Tensor[(792), float64]) -> (Tensor[(3, 14, 14), int64], Tensor[(792), float64], Tensor[(126), float64], Tensor[(792), float64], Tensor[(16, 5, 4), float32], Tensor[(320), float32]) {
  %1118 = fn (%var_17638: int64, %var_17639: Tensor[(3, 14, 14), int64], %var_17659: Tensor[(126), float64], %var_17660: Tensor[(792), float64]) -> (Tensor[(3, 14, 14), int64], Tensor[(792), float64], Tensor[(126), float64], Tensor[(792), float64], Tensor[(16, 5, 4), float32], Tensor[(320), float32]) {
    %1104 = cast(%var_17638, dtype="int64") /* ty=int64 */;
    %1105 = cast(%var_17639, dtype="int64") /* ty=Tensor[(3, 14, 14), int64] */;
    %1106 = cast(%var_17659, dtype="float64") /* ty=Tensor[(126), float64] */;
    %1107 = cast(%var_17660, dtype="float64") /* ty=Tensor[(792), float64] */;
    %1108 = reshape(%1106, newshape=[1, 126]) /* ty=Tensor[(1, 126), float64] */;
    %1109 = reshape(%1107, newshape=[792]) /* ty=Tensor[(792), float64] */;
    %1110 = @func_7683(%1108, %1109) /* ty=(Tensor[(7, 3, 16), float64], Tensor[(1, 14, 9), float64], Tensor[(1, 126), float64], Tensor[(792), float64]) */;
    %1111 = cast(meta[relay.Constant][38] /* ty=Tensor[(320), float32] */, dtype="float32") /* ty=Tensor[(320), float32] */;
    %1112 = cast(meta[relay.Constant][38] /* ty=Tensor[(320), float32] */, dtype="float32") /* ty=Tensor[(320), float32] */;
    %1113 = reshape(%1111, newshape=[16, 5, 4]) /* ty=Tensor[(16, 5, 4), float32] */;
    %1114 = reshape(%1112, newshape=[16, 5, 4]) /* ty=Tensor[(16, 5, 4), float32] */;
    %1115 = logical_xor(%1104, %1105) /* ty=Tensor[(3, 14, 14), int64] */;
    %1116 = %1110.3;
    %1117 = @func_3257(%1113, %1114) /* ty=Tensor[(16, 5, 4), float32] */;
    (%1115, %1116, %var_17659, %var_17660, %1117, meta[relay.Constant][38] /* ty=Tensor[(320), float32] */)
  };
  %1118(%var_17709, %var_17710, %var_17711, %var_17712) /* ty=(Tensor[(3, 14, 14), int64], Tensor[(792), float64], Tensor[(126), float64], Tensor[(792), float64], Tensor[(16, 5, 4), float32], Tensor[(320), float32]) */
}

def @func_3959(%var_3956: Tensor[(126), float64], %var_3957: Tensor[(1, 792), float64], %var_3958: Tensor[(35), float64]) -> (Tensor[(15, 11, 11), float32], Tensor[(1, 14, 9), float64], Tensor[(126), float64], Tensor[(?, 792), bool], Tensor[(7, 5, ?), bool], Tensor[(35), float64], Tensor[(?, 792), float32]) {
  %1147 = fn (%var_3903: Tensor[(126), float64], %var_3904: Tensor[(1, 792), float64], %var_3919: Tensor[(35), float64]) -> (Tensor[(15, 11, 11), float32], Tensor[(1, 14, 9), float64], Tensor[(126), float64], Tensor[(?, 792), bool], Tensor[(7, 5, ?), bool], Tensor[(35), float64], Tensor[(?, 792), float32]) {
    %1119 = @func_3748() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(792), float64], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(90), uint64]) */;
    %1120 = cast(%var_3903, dtype="float64") /* ty=Tensor[(126), float64] */;
    %1121 = cast(%var_3904, dtype="float64") /* ty=Tensor[(1, 792), float64] */;
    %1122 = reshape(%1120, newshape=[1, 14, 9]) /* ty=Tensor[(1, 14, 9), float64] */;
    %1123 = reshape(%1121, newshape=[792]) /* ty=Tensor[(792), float64] */;
    %1124 = @func_1060(%1122, %1123) /* ty=(Tensor[(1, 14, 9), float64], Tensor[(8, 11, 9), int8], Tensor[(792), float64]) */;
    %1125 = cast(%var_3904, dtype="float64") /* ty=Tensor[(1, 792), float64] */;
    %1126 = acos(%1125) /* ty=Tensor[(1, 792), float64] */;
    %1127 = cast(%1126, dtype="bool") /* ty=Tensor[(1, 792), bool] */;
    %1128 = shape_of(%var_3904, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1129 = cast(%var_3904, dtype="bool") /* ty=Tensor[(1, 792), bool] */;
    %1130 = dyn.reshape(%1127, %1128, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1131 = cast(%var_3919, dtype="float64") /* ty=Tensor[(35), float64] */;
    %1132 = cast(%var_3919, dtype="float64") /* ty=Tensor[(35), float64] */;
    %1133 = reshape(%1131, newshape=[7, 5, 1]) /* ty=Tensor[(7, 5, 1), float64] */;
    %1134 = reshape(%1132, newshape=[7, 5, 1]) /* ty=Tensor[(7, 5, 1), float64] */;
    %1135 = @func_2694(%1133, %1134) /* ty=(Tensor[(7, 5, ?), bool],) */;
    %1136 = cast(%var_3904, dtype="int32") /* ty=Tensor[(1, 792), int32] */;
    %1137 = shape_of(%1126, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1138 = cast(%1126, dtype="int32") /* ty=Tensor[(1, 792), int32] */;
    %1139 = dyn.reshape(%1136, %1137, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
    %1140 = bitwise_or(%1138, %1139) /* ty=Tensor[(?, 792), int32] */;
    %1141 = cast(%1140, dtype="float32") /* ty=Tensor[(?, 792), float32] */;
    %1142 = %1119.4;
    %1143 = %1124.0;
    %1144 = less(%1129, %1130) /* ty=Tensor[(?, 792), bool] */;
    %1145 = %1135.0;
    %1146 = cosh(%1141) /* ty=Tensor[(?, 792), float32] */;
    (%1142, %1143, %var_3903, %1144, %1145, %var_3919, %1146)
  };
  %1147(%var_3956, %var_3957, %var_3958) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(1, 14, 9), float64], Tensor[(126), float64], Tensor[(?, 792), bool], Tensor[(7, 5, ?), bool], Tensor[(35), float64], Tensor[(?, 792), float32]) */
}

def @func_21226() -> (Tensor[(16, 5, 4), float32], Tensor[(7, 3, 16), float64]) {
  %1148 = @func_17189() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(16, 5, 4), float64]) */;
  %1149 = %1148.1;
  %1150 = cast(%1149, dtype="float32") /* ty=Tensor[(16, 5, 4), float32] */;
  %1151 = @func_7501() /* ty=(Tensor[(7, 3, 16), float64], Tensor[(7, 3, 16), int8], Tensor[(15, 11, 11), float32], Tensor[(8, 126), int8], Tensor[(504, 2), float64]) */;
  %1152 = asinh(%1150) /* ty=Tensor[(16, 5, 4), float32] */;
  %1153 = %1151.0;
  (%1152, %1153)
}

def @func_8025() -> (Tensor[(7, 3, 16), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(1, 126), float64], Tensor[(11, 14, 13), float32], Tensor[(2002), float32]) {
  @func_8023() /* ty=(Tensor[(7, 3, 16), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(1, 126), float64], Tensor[(11, 14, 13), float32], Tensor[(2002), float32]) */
}

def @func_20306() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  @func_20304() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */
}

def @func_7727() -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) {
  %1154 = @func_5896() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %1155 = @func_4949() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), uint64], Tensor[(792), float64]) */;
  %1156 = %1154.0;
  %1157 = %1155.0;
  (%1156, %1157)
}

def @func_6766() -> Tensor[(15, 11, 11), float32] {
  %1159 = fn () -> Tensor[(15, 11, 11), float32] {
    %1158 = @func_5349() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
    %1158.0
  };
  %1159() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_17085() -> (Tensor[(792), float64], Tensor[(15, 11, 11), float32]) {
  %1160 = @func_11467() /* ty=(Tensor[(320), float32], Tensor[(15, 11, 11), float32]) */;
  %1161 = @func_15149() /* ty=Tensor[(792), float64] */;
  %1162 = %1160.1;
  (%1161, %1162)
}

def @func_18478() -> Tensor[(15, 11, 11), float32] {
  %1163 = @func_14324() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1163.0
}

def @func_3160() -> (Tensor[(15, 11, 11), float32],) {
  %1164 = @func_3074() /* ty=Tensor[(15, 11, 11), float32] */;
  (%1164,)
}

def @func_15986() -> (Tensor[(15, 11, 11), float32],) {
  %1165 = @func_10199() /* ty=Tensor[(15, 11, 11), float32] */;
  (%1165,)
}

def @func_12449() -> (Tensor[(15, 11, 11), float32], Tensor[(792), float64]) {
  %1166 = @func_8427() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(320), float32]) */;
  %1167 = @func_7447() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(792), float64]) */;
  %1168 = %1166.0;
  %1169 = %1167.1;
  (%1168, %1169)
}

def @func_8817() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %1174 = fn () -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
    %1170 = @func_8268() /* ty=(Tensor[(15, 11, 11), float32],) */;
    %1171 = @func_3780() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
    %1172 = %1170.0;
    %1173 = %1171.1;
    (%1172, %1173)
  };
  %1174() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */
}

def @func_5673(%var_5671: Tensor[(2, 1, 15), float32]) -> Tensor[(2, 1, 15), float32] {
  @func_5670(%var_5671) /* ty=Tensor[(2, 1, 15), float32] */
}

def @func_16051() -> (Tensor[(15, 11, 11), float64], Tensor[(2, 7, 14), uint8], uint8, Tensor[(196, 1), uint8]) {
  %1183 = fn () -> (Tensor[(15, 11, 11), float64], Tensor[(2, 7, 14), uint8], uint8, Tensor[(196, 1), uint8]) {
    %1175 = @func_4328() /* ty=(Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), float32]) */;
    %1176 = cast(meta[relay.Constant][39] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %1177 = cast(meta[relay.Constant][40] /* ty=Tensor[(196, 1), uint8] */, dtype="uint8") /* ty=Tensor[(196, 1), uint8] */;
    %1178 = reshape(%1176, newshape=[]) /* ty=uint8 */;
    %1179 = reshape(%1177, newshape=[2, 7, 14]) /* ty=Tensor[(2, 7, 14), uint8] */;
    %1180 = @func_15288(%1178, %1179) /* ty=(Tensor[(2, 7, 14), uint8], Tensor[(1, 126), float64]) */;
    %1181 = %1175.0;
    %1182 = %1180.0;
    (%1181, %1182, meta[relay.Constant][39] /* ty=uint8 */, meta[relay.Constant][40] /* ty=Tensor[(196, 1), uint8] */)
  };
  %1183() /* ty=(Tensor[(15, 11, 11), float64], Tensor[(2, 7, 14), uint8], uint8, Tensor[(196, 1), uint8]) */
}

def @func_10360() -> (Tensor[(15, 11, 11), float32],) {
  %1184 = @func_9487() /* ty=Tensor[(15, 11, 11), float32] */;
  (%1184,)
}

def @func_19440() -> Tensor[(6, 5, 3), float64] {
  @func_19438() /* ty=Tensor[(6, 5, 3), float64] */
}

def @func_20427() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  @func_20425() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */
}

def @func_3382(%var_3380: Tensor[(15, 11, 11), float32]) -> Tensor[(15, 11, 11), bool] {
  @func_3379(%var_3380) /* ty=Tensor[(15, 11, 11), bool] */
}

def @func_7388() -> (Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float64]) {
  @func_7386() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float64]) */
}

def @func_18264() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  @func_18262() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */
}

def @func_18397(%var_18395: Tensor[(2002), float32], %var_18396: Tensor[(5, 6), float32]) -> (Tensor[(15, 11, 11), float32], Tensor[(?, 14, 8), uint64], Tensor[(2002), float32], Tensor[(2, ?, 15), uint32]) {
  %1200 = fn (%var_18369: Tensor[(2002), float32], %var_18373: Tensor[(5, 6), float32]) -> (Tensor[(15, 11, 11), float32], Tensor[(?, 14, 8), uint64], Tensor[(2002), float32], Tensor[(2, ?, 15), uint32]) {
    %1185 = @func_10199() /* ty=Tensor[(15, 11, 11), float32] */;
    %1186 = cast(%1185, dtype="float32") /* ty=Tensor[(15, 11, 11), float32] */;
    %1187 = cast(%var_18369, dtype="float32") /* ty=Tensor[(2002), float32] */;
    %1188 = reshape(%1186, newshape=[1815]) /* ty=Tensor[(1815), float32] */;
    %1189 = reshape(%1187, newshape=[2002]) /* ty=Tensor[(2002), float32] */;
    %1190 = @func_8972(%1188, %1189) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(1815), float32], Tensor[(11, 14, 13), float32], Tensor[(2002), float32], Tensor[(?, 14, 8), uint64], Tensor[(?, 14, 8), float64]) */;
    %1191 = cast(%var_18373, dtype="float32") /* ty=Tensor[(5, 6), float32] */;
    %1192 = reshape(%1191, newshape=[2, 1, 15]) /* ty=Tensor[(2, 1, 15), float32] */;
    %1193 = @func_5670(%1192) /* ty=Tensor[(2, 1, 15), float32] */;
    %1194 = cast(%var_18373, dtype="uint32") /* ty=Tensor[(5, 6), uint32] */;
    %1195 = shape_of(%1193, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1196 = cast(%1193, dtype="uint32") /* ty=Tensor[(2, 1, 15), uint32] */;
    %1197 = dyn.reshape(%1194, %1195, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %1198 = %1190.4;
    %1199 = subtract(%1196, %1197) /* ty=Tensor[(2, ?, 15), uint32] */;
    (%1185, %1198, %var_18369, %1199)
  };
  %1200(%var_18395, %var_18396) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(?, 14, 8), uint64], Tensor[(2002), float32], Tensor[(2, ?, 15), uint32]) */
}

def @func_19752(%var_19750: Tensor[(8, 2, 12), float32]) -> (Tensor[(8, 2, 12), float32], Tensor[(1, 126), float64]) {
  @func_19749(%var_19750) /* ty=(Tensor[(8, 2, 12), float32], Tensor[(1, 126), float64]) */
}

def @func_6567(%var_6565: Tensor[(11, 14, 13), float32]) -> (Tensor[(11, 14, 13), float32],) {
  @func_6564(%var_6565) /* ty=(Tensor[(11, 14, 13), float32],) */
}

def @func_18952() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) {
  %1206 = fn () -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) {
    %1201 = @func_16883() /* ty=(Tensor[(15, 11, 11), float64],) */;
    %1202 = @func_9629() /* ty=Tensor[(15, 11, 11), float32] */;
    %1203 = %1201.0;
    %1204 = @func_17213() /* ty=Tensor[(15, 11, 11), bool] */;
    %1205 = @func_6889() /* ty=Tensor[(15, 11, 11), float32] */;
    (%1202, %1203, %1204, %1205)
  };
  %1206() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) */
}

def @func_25193() -> Tensor[(15, 11, 11), bool] {
  @func_25191() /* ty=Tensor[(15, 11, 11), bool] */
}

def @func_26479() -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  @func_26477() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */
}

def @func_24271() -> (Tensor[(320), float32], Tensor[(15, 11, 11), float32]) {
  %1207 = @func_23207() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(320), float32]) */;
  %1208 = %1207.2;
  %1209 = @func_15176() /* ty=Tensor[(15, 11, 11), float32] */;
  (%1208, %1209)
}

def @func_24545() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) {
  %1214 = fn () -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) {
    %1210 = @func_5349() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
    %1211 = @func_6800() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool]) */;
    %1212 = %1210.2;
    %1213 = %1211.1;
    (%1212, %1213)
  };
  %1214() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) */
}

def @func_10694() -> (Tensor[(15, 11, 11), bool],) {
  @func_10692() /* ty=(Tensor[(15, 11, 11), bool],) */
}

def @func_16355() -> (Tensor[(15, 11, 11), float32],) {
  %1215 = @func_12267() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(1008), float64]) */;
  %1216 = %1215.0;
  (%1216,)
}

def @func_5351() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  @func_5349() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */
}

def @func_12267() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(1008), float64]) {
  %1217 = cast(meta[relay.Constant][41] /* ty=Tensor[(1008), float64] */, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %1218 = reshape(%1217, newshape=[8, 126]) /* ty=Tensor[(8, 126), float64] */;
  %1219 = @func_7128(%1218) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(8, 126), int8]) */;
  %1220 = @func_6889() /* ty=Tensor[(15, 11, 11), float32] */;
  %1221 = %1219.0;
  (%1220, %1221, meta[relay.Constant][41] /* ty=Tensor[(1008), float64] */)
}

def @func_19203() -> (Tensor[(792), float64], Tensor[(15, 11, 11), float32]) {
  %1226 = fn () -> (Tensor[(792), float64], Tensor[(15, 11, 11), float32]) {
    %1222 = @func_12449() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(792), float64]) */;
    %1223 = @func_11306() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
    %1224 = %1222.1;
    %1225 = %1223.0;
    (%1224, %1225)
  };
  %1226() /* ty=(Tensor[(792), float64], Tensor[(15, 11, 11), float32]) */
}

def @func_19919() -> (Tensor[(15, 11, 11), float32],) {
  @func_19917() /* ty=(Tensor[(15, 11, 11), float32],) */
}

def @func_4949() -> (Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), uint64], Tensor[(792), float64]) {
  %1227 = @func_4607() /* ty=(Tensor[(7, 3, 16), int8], Tensor[(15, 11, 11), float32], Tensor[(1, 126), float64], Tensor[(7, 3, 16), int8], Tensor[(16, 5, 4), float32], Tensor[(320), float32]) */;
  %1228 = cast(meta[relay.Constant][42] /* ty=Tensor[(792), float64] */, dtype="float64") /* ty=Tensor[(792), float64] */;
  %1229 = reshape(%1228, newshape=[8, 11, 9]) /* ty=Tensor[(8, 11, 9), float64] */;
  %1230 = @func_643(%1229) /* ty=(Tensor[(8, 11, 9), int8], Tensor[(6, 5, 3), float64], Tensor[(90), uint64], Tensor[(6, 5, 3), uint64]) */;
  %1231 = %1227.1;
  %1232 = %1230.3;
  (%1231, %1232, meta[relay.Constant][42] /* ty=Tensor[(792), float64] */)
}

def @func_5967() -> (Tensor[(15, 11, 11), bool], Tensor[(7, 3, 16), float32], Tensor[(15, 11, 11), bool]) {
  %1233 = @func_5103() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %1234 = @func_5026() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float64], Tensor[(7, 3, 16), int8]) */;
  %1235 = %1234.2;
  %1236 = cast(%1235, dtype="float32") /* ty=Tensor[(7, 3, 16), float32] */;
  %1237 = @func_5691() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %1238 = %1233.0;
  %1239 = sinh(%1236) /* ty=Tensor[(7, 3, 16), float32] */;
  %1240 = %1237.0;
  (%1238, %1239, %1240)
}

def @func_15882() -> (Tensor[(15, 11, 11), bool],) {
  @func_15880() /* ty=(Tensor[(15, 11, 11), bool],) */
}

def @func_16435() -> Tensor[(6, 5, 3), float64] {
  @func_16433() /* ty=Tensor[(6, 5, 3), float64] */
}

def @func_12451() -> (Tensor[(15, 11, 11), float32], Tensor[(792), float64]) {
  @func_12449() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(792), float64]) */
}

def @func_8334() -> (Tensor[(320), float32],) {
  %1241 = @func_7089() /* ty=(Tensor[(7, 3, 16), int8], Tensor[(6, 5, 3), float64], Tensor[(1815), bool], Tensor[(126), float64], Tensor[(320), float32], Tensor[(7, 3, 16), int8]) */;
  %1242 = %1241.4;
  (%1242,)
}

def @func_21622() -> Tensor[(15, 11, 11), float32] {
  %1243 = fn () -> Tensor[(15, 11, 11), float32] {
    @func_7655() /* ty=Tensor[(15, 11, 11), float32] */
  };
  %1243() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_11777() -> (Tensor[(15, 11, 11), bool],) {
  %1244 = @func_7917() /* ty=Tensor[(15, 11, 11), bool] */;
  (%1244,)
}

def @func_4951() -> (Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), uint64], Tensor[(792), float64]) {
  @func_4949() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), uint64], Tensor[(792), float64]) */
}

def @func_6820() -> (Tensor[(15, 11, 11), float32],) {
  %1247 = fn () -> (Tensor[(15, 11, 11), float32],) {
    %1245 = @func_3780() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
    %1246 = %1245.1;
    (%1246,)
  };
  %1247() /* ty=(Tensor[(15, 11, 11), float32],) */
}

def @func_8268() -> (Tensor[(15, 11, 11), float32],) {
  %1248 = @func_6349() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1249 = %1248.0;
  (%1249,)
}

def @func_7130(%var_7129: Tensor[(8, 126), float64]) -> (Tensor[(15, 11, 11), float32], Tensor[(8, 126), int8]) {
  %1259 = fn (%var_7113: Tensor[(8, 126), float64]) -> (Tensor[(15, 11, 11), float32], Tensor[(8, 126), int8]) {
    %1250 = @func_6819() /* ty=(Tensor[(15, 11, 11), float32],) */;
    %1251 = @func_5073() /* ty=Tensor[(1, 126), float64] */;
    %1252 = cast(%1251, dtype="uint32") /* ty=Tensor[(1, 126), uint32] */;
    %1253 = cast(%var_7113, dtype="uint32") /* ty=Tensor[(8, 126), uint32] */;
    %1254 = left_shift(%1252, %1253) /* ty=Tensor[(8, 126), uint32] */;
    %1255 = cast(%1254, dtype="int8") /* ty=Tensor[(8, 126), int8] */;
    %1256 = cast(%1251, dtype="int8") /* ty=Tensor[(1, 126), int8] */;
    %1257 = %1250.0;
    %1258 = maximum(%1255, %1256) /* ty=Tensor[(8, 126), int8] */;
    (%1257, %1258)
  };
  %1259(%var_7129) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(8, 126), int8]) */
}

def @func_5931() -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) {
  %1260 = @func_5691() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %1261 = %1260.0;
  %1262 = @func_2995() /* ty=Tensor[(15, 11, 11), float32] */;
  (%1261, %1262)
}

def @func_16980() -> (Tensor[(7, 3, 16), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) {
  @func_16978() /* ty=(Tensor[(7, 3, 16), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) */
}

def @func_3567(%var_3565: Tensor[(126), float64]) -> (Tensor[(15, 11, 11), float32], Tensor[(8, 11, 9), int8], Tensor[(126), float64], Tensor[(792), float64]) {
  @func_3564(%var_3565) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(8, 11, 9), int8], Tensor[(126), float64], Tensor[(792), float64]) */
}

def @func_14671() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %1268 = fn () -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
    %1263 = @func_8023() /* ty=(Tensor[(7, 3, 16), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(1, 126), float64], Tensor[(11, 14, 13), float32], Tensor[(2002), float32]) */;
    %1264 = @func_13500() /* ty=(Tensor[(15, 11, 11), float32],) */;
    %1265 = @func_13616() /* ty=Tensor[(15, 11, 11), float32] */;
    %1266 = %1263.1;
    %1267 = %1264.0;
    (%1265, %1266, %1267)
  };
  %1268() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */
}

def @func_12733() -> (Tensor[(15, 11, 11), bool],) {
  @func_12731() /* ty=(Tensor[(15, 11, 11), bool],) */
}

def @func_14791() -> (Tensor[(126), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float64]) {
  %1269 = @func_12969() /* ty=(Tensor[(126), float64], Tensor[(15, 11, 11), float32]) */;
  %1270 = @func_5438() /* ty=(Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), float64]) */;
  %1271 = %1269.0;
  %1272 = @func_8070() /* ty=Tensor[(15, 11, 11), float32] */;
  %1273 = %1270.1;
  (%1271, %1272, %1273)
}

def @func_21338() -> (Tensor[(15, 11, 11), bool],) {
  %1276 = fn () -> (Tensor[(15, 11, 11), bool],) {
    %1274 = @func_21037() /* ty=(Tensor[(15, 11, 11), bool],) */;
    %1275 = %1274.0;
    (%1275,)
  };
  %1276() /* ty=(Tensor[(15, 11, 11), bool],) */
}

def @func_5487(%var_5485: Tensor[(6, 5, 3), bool], %var_5486: Tensor[(126), float64]) -> (Tensor[(6, 5, 3), bool], Tensor[(15, 11, 11), float32], Tensor[(80, 4), float32], Tensor[(126), float64], Tensor[(320), float32], Tensor[(15, 11, 11), float32]) {
  @func_5483(%var_5485, %var_5486) /* ty=(Tensor[(6, 5, 3), bool], Tensor[(15, 11, 11), float32], Tensor[(80, 4), float32], Tensor[(126), float64], Tensor[(320), float32], Tensor[(15, 11, 11), float32]) */
}

def @func_10446() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %1277 = @func_7727() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) */;
  %1278 = %1277.1;
  %1279 = @func_7331() /* ty=Tensor[(15, 11, 11), float32] */;
  (%1278, %1279)
}

def @func_10087() -> Tensor[(15, 11, 11), bool] {
  @func_10085() /* ty=Tensor[(15, 11, 11), bool] */
}

def @func_2996() -> Tensor[(15, 11, 11), float32] {
  %1280 = fn () -> Tensor[(15, 11, 11), float32] {
    @func_2900() /* ty=Tensor[(15, 11, 11), float32] */
  };
  %1280() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_6319(%var_6318: Tensor[(90), uint64]) -> (Tensor[(792), float64], Tensor[(15, 11, 11), float32], Tensor[(90), uint64]) {
  %1287 = fn (%var_6314: Tensor[(90), uint64]) -> (Tensor[(792), float64], Tensor[(15, 11, 11), float32], Tensor[(90), uint64]) {
    %1281 = @func_6090() /* ty=(Tensor[(792), float64],) */;
    %1282 = cast(%var_6314, dtype="uint64") /* ty=Tensor[(90), uint64] */;
    %1283 = reshape(%1282, newshape=[90]) /* ty=Tensor[(90), uint64] */;
    %1284 = @func_3215(%1283) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), uint64], Tensor[(90), uint64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
    %1285 = %1281.0;
    %1286 = %1284.3;
    (%1285, %1286, %var_6314)
  };
  %1287(%var_6318) /* ty=(Tensor[(792), float64], Tensor[(15, 11, 11), float32], Tensor[(90), uint64]) */
}

def @func_16885() -> (Tensor[(15, 11, 11), float64],) {
  @func_16883() /* ty=(Tensor[(15, 11, 11), float64],) */
}

def @func_11779() -> (Tensor[(15, 11, 11), bool],) {
  @func_11777() /* ty=(Tensor[(15, 11, 11), bool],) */
}

def @func_16357() -> (Tensor[(15, 11, 11), float32],) {
  @func_16355() /* ty=(Tensor[(15, 11, 11), float32],) */
}

def @func_15264() -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool]) {
  %1288 = @func_7917() /* ty=Tensor[(15, 11, 11), bool] */;
  %1289 = @func_10085() /* ty=Tensor[(15, 11, 11), bool] */;
  (%1288, %1289)
}

def @func_8510() -> (Tensor[(15, 11, 11), float32],) {
  %1290 = @func_6394() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %1291 = %1290.1;
  (%1291,)
}

def @func_16383() -> Tensor[(15, 11, 11), float32] {
  @func_16381() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_14197() -> (Tensor[(7, 3, 16), float32],) {
  %1294 = fn () -> (Tensor[(7, 3, 16), float32],) {
    %1292 = @func_7881() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float32]) */;
    %1293 = %1292.1;
    (%1293,)
  };
  %1294() /* ty=(Tensor[(7, 3, 16), float32],) */
}

def @func_11213() -> (Tensor[(15, 11, 11), float32], Tensor[(7, 5, ?), bool], Tensor[(35), float64]) {
  %1302 = fn () -> (Tensor[(15, 11, 11), float32], Tensor[(7, 5, ?), bool], Tensor[(35), float64]) {
    %1295 = cast(meta[relay.Constant][43] /* ty=Tensor[(35), float64] */, dtype="float64") /* ty=Tensor[(35), float64] */;
    %1296 = cast(meta[relay.Constant][43] /* ty=Tensor[(35), float64] */, dtype="float64") /* ty=Tensor[(35), float64] */;
    %1297 = reshape(%1295, newshape=[7, 5, 1]) /* ty=Tensor[(7, 5, 1), float64] */;
    %1298 = reshape(%1296, newshape=[7, 5, 1]) /* ty=Tensor[(7, 5, 1), float64] */;
    %1299 = @func_2694(%1297, %1298) /* ty=(Tensor[(7, 5, ?), bool],) */;
    %1300 = @func_7426() /* ty=Tensor[(15, 11, 11), float32] */;
    %1301 = %1299.0;
    (%1300, %1301, meta[relay.Constant][43] /* ty=Tensor[(35), float64] */)
  };
  %1302() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(7, 5, ?), bool], Tensor[(35), float64]) */
}

def @func_25806() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %1306 = fn () -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
    %1303 = @func_15986() /* ty=(Tensor[(15, 11, 11), float32],) */;
    %1304 = %1303.0;
    %1305 = @func_8070() /* ty=Tensor[(15, 11, 11), float32] */;
    (%1304, %1305)
  };
  %1306() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */
}

def @func_5028() -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float64], Tensor[(7, 3, 16), int8]) {
  @func_5026() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float64], Tensor[(7, 3, 16), int8]) */
}

def @func_26019(%var_26012: Tensor[(8, 126), int8]) -> (Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(8, 126), uint16], Tensor[(8, 126), bool]) {
  %1307 = @func_11763() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1308 = @func_18951() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) */;
  %1309 = @func_18326() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1310 = cast(meta[relay.Constant][44] /* ty=Tensor[(1008), float64] */, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %1311 = reshape(%1310, newshape=[8, 126]) /* ty=Tensor[(8, 126), float64] */;
  %1312 = @func_7128(%1311) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(8, 126), int8]) */;
  %1313 = %1312.1;
  %1314 = cast(meta[relay.Constant][44] /* ty=Tensor[(1008), float64] */, dtype="uint16") /* ty=Tensor[(1008), uint16] */;
  %1315 = shape_of(%1313, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1316 = cast(%1313, dtype="uint16") /* ty=Tensor[(8, 126), uint16] */;
  %1317 = dyn.reshape(%1314, %1315, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %1318 = cast(%var_26012, dtype="bool") /* ty=Tensor[(8, 126), bool] */;
  %1319 = shape_of(%1313, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1320 = cast(%1313, dtype="bool") /* ty=Tensor[(8, 126), bool] */;
  %1321 = dyn.reshape(%1318, %1319, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1322 = %1307.0;
  %1323 = @func_19881() /* ty=Tensor[(6, 5, 3), float64] */;
  %1324 = %1308.3;
  %1325 = %1309.0;
  %1326 = minimum(%1316, %1317) /* ty=Tensor[(8, 126), uint16] */;
  %1327 = greater(%1320, %1321) /* ty=Tensor[(8, 126), bool] */;
  (%1322, %1323, %1324, %1325, %1326, %1327)
}

def @func_8023() -> (Tensor[(7, 3, 16), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(1, 126), float64], Tensor[(11, 14, 13), float32], Tensor[(2002), float32]) {
  %1328 = @func_7386() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float64]) */;
  %1329 = @func_6589() /* ty=(Tensor[(1, 126), float64],) */;
  %1330 = cast(meta[relay.Constant][45] /* ty=Tensor[(2002), float32] */, dtype="float32") /* ty=Tensor[(2002), float32] */;
  %1331 = reshape(%1330, newshape=[11, 14, 13]) /* ty=Tensor[(11, 14, 13), float32] */;
  %1332 = @func_6564(%1331) /* ty=(Tensor[(11, 14, 13), float32],) */;
  %1333 = %1328.1;
  %1334 = @func_7426() /* ty=Tensor[(15, 11, 11), float32] */;
  %1335 = @func_7426() /* ty=Tensor[(15, 11, 11), float32] */;
  %1336 = @func_7214() /* ty=Tensor[(15, 11, 11), float32] */;
  %1337 = %1329.0;
  %1338 = %1332.0;
  (%1333, %1334, %1335, %1336, %1337, %1338, meta[relay.Constant][45] /* ty=Tensor[(2002), float32] */)
}

def @func_25287() -> (Tensor[(15, 11, 11), float32],) {
  %1341 = fn () -> (Tensor[(15, 11, 11), float32],) {
    %1339 = @func_18951() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) */;
    %1340 = %1339.3;
    (%1340,)
  };
  %1341() /* ty=(Tensor[(15, 11, 11), float32],) */
}

def @func_19118() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %1342 = @func_11467() /* ty=(Tensor[(320), float32], Tensor[(15, 11, 11), float32]) */;
  %1343 = %1342.1;
  %1344 = @func_13616() /* ty=Tensor[(15, 11, 11), float32] */;
  (%1343, %1344)
}

def @func_24915() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) {
  @func_24913() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) */
}

def @func_15416(%var_15389: Tensor[(624), float32]) -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], float32, Tensor[(624), float32], Tensor[(13, 4, 13), float32], Tensor[(8, 13, 6), float64]) {
  %1345 = @func_12017() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) */;
  %1346 = @func_9743() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1347 = cast(-4.87014f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %1348 = cast(%var_15389, dtype="float32") /* ty=Tensor[(624), float32] */;
  %1349 = reshape(%1347, newshape=[]) /* ty=float32 */;
  %1350 = reshape(%1348, newshape=[8, 13, 6]) /* ty=Tensor[(8, 13, 6), float32] */;
  %1351 = @func_12233(%1349, %1350) /* ty=(Tensor[(8, 13, 6), float32], Tensor[(15, 11, 11), bool]) */;
  %1352 = %1351.0;
  %1353 = cast(%1352, dtype="float64") /* ty=Tensor[(8, 13, 6), float64] */;
  %1354 = %1345.0;
  %1355 = %1346.0;
  %1356 = @func_11072() /* ty=Tensor[(13, 4, 13), float32] */;
  %1357 = acosh(%1353) /* ty=Tensor[(8, 13, 6), float64] */;
  (%1354, %1355, -4.87014f /* ty=float32 */, %var_15389, %1356, %1357)
}

def @func_16566() -> (Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float32]) {
  %1361 = fn () -> (Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float32]) {
    %1358 = @func_6987() /* ty=(Tensor[(7, 3, 16), float32],) */;
    %1359 = @func_2995() /* ty=Tensor[(15, 11, 11), float32] */;
    %1360 = %1358.0;
    (%1359, %1360)
  };
  %1361() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float32]) */
}

def @func_7642() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %1362 = @func_4240() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %1363 = @func_6819() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1364 = %1362.1;
  %1365 = %1363.0;
  (%1364, %1365)
}

def @func_17213() -> Tensor[(15, 11, 11), bool] {
  %1366 = @func_10692() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %1366.0
}

def @func_3218(%var_3216: Tensor[(90), uint64]) -> (Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), uint64], Tensor[(90), uint64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  @func_3215(%var_3216) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), uint64], Tensor[(90), uint64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */
}

def @func_9353() -> (Tensor[(15, 11, 11), float32],) {
  %1369 = fn () -> (Tensor[(15, 11, 11), float32],) {
    %1367 = @func_6349() /* ty=(Tensor[(15, 11, 11), float32],) */;
    %1368 = %1367.0;
    (%1368,)
  };
  %1369() /* ty=(Tensor[(15, 11, 11), float32],) */
}

def @func_17191() -> (Tensor[(15, 11, 11), bool], Tensor[(16, 5, 4), float64]) {
  @func_17189() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(16, 5, 4), float64]) */
}

def @func_17896() -> Tensor[(90), uint64] {
  @func_17894() /* ty=Tensor[(90), uint64] */
}

def @func_7386() -> (Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float64]) {
  %1370 = @func_3074() /* ty=Tensor[(15, 11, 11), float32] */;
  %1371 = @func_6128() /* ty=Tensor[(7, 3, 16), float64] */;
  (%1370, %1371)
}

def @func_25092() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %1375 = fn () -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
    %1372 = @func_14739() /* ty=(Tensor[(15, 11, 11), float32],) */;
    %1373 = %1372.0;
    %1374 = @func_22400() /* ty=Tensor[(15, 11, 11), float32] */;
    (%1373, %1374)
  };
  %1375() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */
}

def @func_4742() -> (Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), int8]) {
  %1380 = fn () -> (Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), int8]) {
    %1376 = @func_3461() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) */;
    %1377 = @func_4371() /* ty=(Tensor[(7, 3, 16), int8],) */;
    %1378 = %1376.0;
    %1379 = %1377.0;
    (%1378, %1379)
  };
  %1380() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), int8]) */
}

def @func_20257() -> (Tensor[(15, 11, 11), bool], Tensor[(7, 3, 16), float64]) {
  @func_20255() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(7, 3, 16), float64]) */
}

def @func_7449() -> (Tensor[(15, 11, 11), bool], Tensor[(792), float64]) {
  @func_7447() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(792), float64]) */
}

def @func_19311() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %1384 = fn () -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
    %1381 = @func_4328() /* ty=(Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), float32]) */;
    %1382 = %1381.1;
    %1383 = @func_13393() /* ty=Tensor[(15, 11, 11), float32] */;
    (%1382, %1383)
  };
  %1384() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */
}

def @func_15177() -> Tensor[(15, 11, 11), float32] {
  %1386 = fn () -> Tensor[(15, 11, 11), float32] {
    %1385 = @func_7642() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
    %1385.0
  };
  %1386() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_1063(%var_1061: Tensor[(1, 14, 9), float64], %var_1062: Tensor[(792), float64]) -> (Tensor[(1, 14, 9), float64], Tensor[(8, 11, 9), int8], Tensor[(792), float64]) {
  %1393 = fn (%var_1048: Tensor[(1, 14, 9), float64], %var_1052: Tensor[(792), float64]) -> (Tensor[(1, 14, 9), float64], Tensor[(8, 11, 9), int8], Tensor[(792), float64]) {
    %1387 = cast(%var_1048, dtype="float64") /* ty=Tensor[(1, 14, 9), float64] */;
    %1388 = cast(%var_1052, dtype="float64") /* ty=Tensor[(792), float64] */;
    %1389 = reshape(%1388, newshape=[8, 11, 9]) /* ty=Tensor[(8, 11, 9), float64] */;
    %1390 = @func_643(%1389) /* ty=(Tensor[(8, 11, 9), int8], Tensor[(6, 5, 3), float64], Tensor[(90), uint64], Tensor[(6, 5, 3), uint64]) */;
    %1391 = asin(%1387) /* ty=Tensor[(1, 14, 9), float64] */;
    %1392 = %1390.0;
    (%1391, %1392, %var_1052)
  };
  %1393(%var_1061, %var_1062) /* ty=(Tensor[(1, 14, 9), float64], Tensor[(8, 11, 9), int8], Tensor[(792), float64]) */
}

def @func_25203() -> Tensor[(15, 11, 11), float32] {
  @func_25201() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_13066(%var_13064: Tensor[(12, 3, 16), int64], %var_13065: Tensor[(12, 3, 16), int64]) -> Tensor[(12, 3, 16), bool] {
  @func_13062(%var_13064, %var_13065) /* ty=Tensor[(12, 3, 16), bool] */
}

def @func_22435(%var_22433: Tensor[(126), float64]) -> (Tensor[(15, 11, 11), float32], Tensor[(126), float64], Tensor[(126), float64]) {
  @func_22432(%var_22433) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(126), float64], Tensor[(126), float64]) */
}

def @func_5438() -> (Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), float64]) {
  %1394 = @func_4328() /* ty=(Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), float32]) */;
  %1395 = @func_4328() /* ty=(Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), float32]) */;
  %1396 = %1395.1;
  %1397 = cast(%1396, dtype="float64") /* ty=Tensor[(15, 11, 11), float64] */;
  %1398 = %1394.0;
  %1399 = sigmoid(%1397) /* ty=Tensor[(15, 11, 11), float64] */;
  (%1398, %1399)
}

def @func_21956() -> Tensor[(7, 3, 16), float32] {
  %1401 = fn () -> Tensor[(7, 3, 16), float32] {
    %1400 = @func_19900() /* ty=(Tensor[(7, 3, 16), float32], Tensor[(2, 14, 1), bool], int16) */;
    %1400.0
  };
  %1401() /* ty=Tensor[(7, 3, 16), float32] */
}

def @func_3564(%var_3549: Tensor[(126), float64]) -> (Tensor[(15, 11, 11), float32], Tensor[(8, 11, 9), int8], Tensor[(126), float64], Tensor[(792), float64]) {
  %1402 = @func_3160() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1403 = cast(%var_3549, dtype="float64") /* ty=Tensor[(126), float64] */;
  %1404 = cast(meta[relay.Constant][46] /* ty=Tensor[(792), float64] */, dtype="float64") /* ty=Tensor[(792), float64] */;
  %1405 = reshape(%1403, newshape=[1, 14, 9]) /* ty=Tensor[(1, 14, 9), float64] */;
  %1406 = reshape(%1404, newshape=[792]) /* ty=Tensor[(792), float64] */;
  %1407 = @func_1060(%1405, %1406) /* ty=(Tensor[(1, 14, 9), float64], Tensor[(8, 11, 9), int8], Tensor[(792), float64]) */;
  %1408 = %1402.0;
  %1409 = %1407.1;
  (%1408, %1409, %var_3549, meta[relay.Constant][46] /* ty=Tensor[(792), float64] */)
}

def @func_23500() -> (Tensor[(15, 11, 11), float32],) {
  @func_23498() /* ty=(Tensor[(15, 11, 11), float32],) */
}

def @func_21160() -> Tensor[(15, 11, 11), float32] {
  %1410 = @func_13832() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1410.0
}

def @func_18217() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) {
  %1415 = fn () -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) {
    %1411 = @func_12398() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
    %1412 = @func_5967() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(7, 3, 16), float32], Tensor[(15, 11, 11), bool]) */;
    %1413 = %1411.0;
    %1414 = %1412.0;
    (%1413, %1414)
  };
  %1415() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) */
}

def @func_9811(%var_9810: Tensor[(504, 2), float64]) -> (Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(7, 3, 16), float64], Tensor[(15, 11, 11), float32], Tensor[(504, 2), float64], Tensor[(320), float32]) {
  %1426 = fn (%var_9773: Tensor[(504, 2), float64]) -> (Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(7, 3, 16), float64], Tensor[(15, 11, 11), float32], Tensor[(504, 2), float64], Tensor[(320), float32]) {
    %1416 = @func_8023() /* ty=(Tensor[(7, 3, 16), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(1, 126), float64], Tensor[(11, 14, 13), float32], Tensor[(2002), float32]) */;
    %1417 = cast(%var_9773, dtype="float64") /* ty=Tensor[(504, 2), float64] */;
    %1418 = reshape(%1417, newshape=[8, 126]) /* ty=Tensor[(8, 126), float64] */;
    %1419 = @func_7128(%1418) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(8, 126), int8]) */;
    %1420 = @func_8427() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(320), float32]) */;
    %1421 = %1416.1;
    %1422 = @func_8752() /* ty=Tensor[(6, 5, 3), float64] */;
    %1423 = @func_6128() /* ty=Tensor[(7, 3, 16), float64] */;
    %1424 = %1419.0;
    %1425 = %1420.1;
    (%1421, %1422, %1423, %1424, %var_9773, %1425)
  };
  %1426(%var_9810) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(7, 3, 16), float64], Tensor[(15, 11, 11), float32], Tensor[(504, 2), float64], Tensor[(320), float32]) */
}

def @func_23604(%var_23602: Tensor[(30, 1), float32]) -> (Tensor[(15, 11, 11), float32], Tensor[(2, ?, 15), bool], Tensor[(30, 1), float32]) {
  @func_23601(%var_23602) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(2, ?, 15), bool], Tensor[(30, 1), float32]) */
}

def @func_23498() -> (Tensor[(15, 11, 11), float32],) {
  %1427 = @func_15176() /* ty=Tensor[(15, 11, 11), float32] */;
  (%1427,)
}

def @func_14793() -> (Tensor[(126), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float64]) {
  @func_14791() /* ty=(Tensor[(126), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float64]) */
}

def @func_17189() -> (Tensor[(15, 11, 11), bool], Tensor[(16, 5, 4), float64]) {
  %1428 = @func_5691() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %1429 = @func_4607() /* ty=(Tensor[(7, 3, 16), int8], Tensor[(15, 11, 11), float32], Tensor[(1, 126), float64], Tensor[(7, 3, 16), int8], Tensor[(16, 5, 4), float32], Tensor[(320), float32]) */;
  %1430 = %1429.4;
  %1431 = cast(%1430, dtype="float64") /* ty=Tensor[(16, 5, 4), float64] */;
  %1432 = %1428.0;
  %1433 = acosh(%1431) /* ty=Tensor[(16, 5, 4), float64] */;
  (%1432, %1433)
}

def @func_12236(%var_12234: float32, %var_12235: Tensor[(8, 13, 6), float32]) -> (Tensor[(8, 13, 6), float32], Tensor[(15, 11, 11), bool]) {
  %1438 = fn (%var_12204: float32, %var_12205: Tensor[(8, 13, 6), float32]) -> (Tensor[(8, 13, 6), float32], Tensor[(15, 11, 11), bool]) {
    %1434 = cast(%var_12204, dtype="float32") /* ty=float32 */;
    %1435 = cast(%var_12205, dtype="float32") /* ty=Tensor[(8, 13, 6), float32] */;
    %1436 = power(%1434, %1435) /* ty=Tensor[(8, 13, 6), float32] */;
    %1437 = @func_10085() /* ty=Tensor[(15, 11, 11), bool] */;
    (%1436, %1437)
  };
  %1438(%var_12234, %var_12235) /* ty=(Tensor[(8, 13, 6), float32], Tensor[(15, 11, 11), bool]) */
}

def @func_16188(%var_16183: Tensor[(126), float64]) -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(126), float64], Tensor[(15, 11, 11), bool]) {
  %1439 = @func_11256() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %1440 = @func_7756() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1441 = cast(%var_16183, dtype="float64") /* ty=Tensor[(126), float64] */;
  %1442 = reshape(%1441, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %1443 = @func_10875(%1442) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(90), uint64], Tensor[(15, 11, 11), bool], Tensor[(126), float64]) */;
  %1444 = @func_15264() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool]) */;
  %1445 = %1439.1;
  %1446 = %1440.0;
  %1447 = %1443.0;
  %1448 = %1444.1;
  (%1445, %1446, %1447, %var_16183, %1448)
}

def @func_25844() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float32]) {
  @func_25842() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float32]) */
}

def @func_2901() -> Tensor[(15, 11, 11), float32] {
  %1450 = fn () -> Tensor[(15, 11, 11), float32] {
    %1449 = cast(meta[relay.Constant][47] /* ty=Tensor[(15, 11, 11), float32] */, dtype="float32") /* ty=Tensor[(15, 11, 11), float32] */;
    acosh(%1449) /* ty=Tensor[(15, 11, 11), float32] */
  };
  %1450() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_19883() -> Tensor[(6, 5, 3), float64] {
  @func_19881() /* ty=Tensor[(6, 5, 3), float64] */
}

def @func_10285() -> (Tensor[(6, 5, 3), float64], Tensor[(15, 11, 11), float32]) {
  %1454 = fn () -> (Tensor[(6, 5, 3), float64], Tensor[(15, 11, 11), float32]) {
    %1451 = @func_4741() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), int8]) */;
    %1452 = @func_8752() /* ty=Tensor[(6, 5, 3), float64] */;
    %1453 = %1451.0;
    (%1452, %1453)
  };
  %1454() /* ty=(Tensor[(6, 5, 3), float64], Tensor[(15, 11, 11), float32]) */
}

def @func_14812() -> (Tensor[(792), float64], Tensor[(15, 11, 11), float32]) {
  %1459 = fn () -> (Tensor[(792), float64], Tensor[(15, 11, 11), float32]) {
    %1455 = @func_7447() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(792), float64]) */;
    %1456 = @func_9352() /* ty=(Tensor[(15, 11, 11), float32],) */;
    %1457 = %1455.1;
    %1458 = %1456.0;
    (%1457, %1458)
  };
  %1459() /* ty=(Tensor[(792), float64], Tensor[(15, 11, 11), float32]) */
}

def @func_16691() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(90), uint64], Tensor[(15, 11, 11), float32]) {
  @func_16689() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(90), uint64], Tensor[(15, 11, 11), float32]) */
}

def @func_5933() -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) {
  @func_5931() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) */
}

def @func_3441(%var_3439: Tensor[(792), float64], %var_3440: Tensor[(3, 30), uint64]) -> (Tensor[(15, 11, 11), float32], Tensor[(792), float64], Tensor[(126), float64], Tensor[(792), float64], Tensor[(6, 5, 3), uint64], Tensor[(3, 30), uint64]) {
  %1472 = fn (%var_3417: Tensor[(792), float64], %var_3431: Tensor[(3, 30), uint64]) -> (Tensor[(15, 11, 11), float32], Tensor[(792), float64], Tensor[(126), float64], Tensor[(792), float64], Tensor[(6, 5, 3), uint64], Tensor[(3, 30), uint64]) {
    %1460 = @func_3160() /* ty=(Tensor[(15, 11, 11), float32],) */;
    %1461 = cast(meta[relay.Constant][48] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
    %1462 = cast(%var_3417, dtype="float64") /* ty=Tensor[(792), float64] */;
    %1463 = reshape(%1461, newshape=[1, 14, 9]) /* ty=Tensor[(1, 14, 9), float64] */;
    %1464 = reshape(%1462, newshape=[792]) /* ty=Tensor[(792), float64] */;
    %1465 = @func_1060(%1463, %1464) /* ty=(Tensor[(1, 14, 9), float64], Tensor[(8, 11, 9), int8], Tensor[(792), float64]) */;
    %1466 = cast(%var_3431, dtype="uint64") /* ty=Tensor[(3, 30), uint64] */;
    %1467 = reshape(%1466, newshape=[90]) /* ty=Tensor[(90), uint64] */;
    %1468 = @func_3215(%1467) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), uint64], Tensor[(90), uint64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
    %1469 = %1460.0;
    %1470 = %1465.2;
    %1471 = %1468.1;
    (%1469, %1470, meta[relay.Constant][48] /* ty=Tensor[(126), float64] */, %var_3417, %1471, %var_3431)
  };
  %1472(%var_3439, %var_3440) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(792), float64], Tensor[(126), float64], Tensor[(792), float64], Tensor[(6, 5, 3), uint64], Tensor[(3, 30), uint64]) */
}

def @func_7544(%var_7531: float32, %var_7532: Tensor[(8, 1), float32]) -> (Tensor[(8, 1), bool],) {
  %1473 = cast(%var_7531, dtype="bool") /* ty=bool */;
  %1474 = cast(%var_7532, dtype="bool") /* ty=Tensor[(8, 1), bool] */;
  %1475 = less_equal(%1473, %1474) /* ty=Tensor[(8, 1), bool] */;
  (%1475,)
}

def @func_17260(%var_17259: Tensor[(21, 6), float64]) -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(1, 14, 9), float64], Tensor[(792), float64], Tensor[(15, 11, 11), float32], Tensor[(21, 6), float32]) {
  %1493 = fn (%var_17253: Tensor[(21, 6), float64]) -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(1, 14, 9), float64], Tensor[(792), float64], Tensor[(15, 11, 11), float32], Tensor[(21, 6), float32]) {
    %1476 = @func_7881() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float32]) */;
    %1477 = @func_14517() /* ty=(Tensor[(15, 11, 11), float32],) */;
    %1478 = cast(meta[relay.Constant][49] /* ty=Tensor[(21, 6), float64] */, dtype="float64") /* ty=Tensor[(21, 6), float64] */;
    %1479 = cast(meta[relay.Constant][50] /* ty=Tensor[(792), float64] */, dtype="float64") /* ty=Tensor[(792), float64] */;
    %1480 = reshape(%1478, newshape=[1, 14, 9]) /* ty=Tensor[(1, 14, 9), float64] */;
    %1481 = reshape(%1479, newshape=[792]) /* ty=Tensor[(792), float64] */;
    %1482 = @func_1060(%1480, %1481) /* ty=(Tensor[(1, 14, 9), float64], Tensor[(8, 11, 9), int8], Tensor[(792), float64]) */;
    %1483 = @func_14324() /* ty=(Tensor[(15, 11, 11), float32],) */;
    %1484 = cast(%var_17253, dtype="float32") /* ty=Tensor[(21, 6), float32] */;
    %1485 = shape_of(meta[relay.Constant][49] /* ty=Tensor[(21, 6), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1486 = cast(meta[relay.Constant][49] /* ty=Tensor[(21, 6), float64] */, dtype="float32") /* ty=Tensor[(21, 6), float32] */;
    %1487 = dyn.reshape(%1484, %1485, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %1488 = %1476.0;
    %1489 = %1477.0;
    %1490 = %1482.0;
    %1491 = %1483.0;
    %1492 = power(%1486, %1487) /* ty=Tensor[(21, 6), float32] */;
    (%1488, %1489, %1490, meta[relay.Constant][50] /* ty=Tensor[(792), float64] */, %1491, %1492)
  };
  %1493(%var_17259) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(1, 14, 9), float64], Tensor[(792), float64], Tensor[(15, 11, 11), float32], Tensor[(21, 6), float32]) */
}

def @func_20645() -> (Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float32], Tensor[(15, 11, 11), float32]) {
  %1499 = fn () -> (Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float32], Tensor[(15, 11, 11), float32]) {
    %1494 = @func_14196() /* ty=(Tensor[(7, 3, 16), float32],) */;
    %1495 = @func_9743() /* ty=(Tensor[(15, 11, 11), float32],) */;
    %1496 = @func_6765() /* ty=Tensor[(15, 11, 11), float32] */;
    %1497 = %1494.0;
    %1498 = %1495.0;
    (%1496, %1497, %1498)
  };
  %1499() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float32], Tensor[(15, 11, 11), float32]) */
}

def @func_21809() -> Tensor[(15, 11, 11), bool] {
  %1500 = @func_14879() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(6, 5, 3), uint64]) */;
  %1500.0
}

def @func_18078() -> (Tensor[(90), uint64], Tensor[(15, 11, 11), float32]) {
  %1501 = @func_3748() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(792), float64], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(90), uint64]) */;
  %1502 = @func_17894() /* ty=Tensor[(90), uint64] */;
  %1503 = %1501.4;
  (%1502, %1503)
}

def @func_11841() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  @func_11839() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */
}

def @func_24687() -> (Tensor[(15, 11, 11), bool], Tensor[(792), float64]) {
  %1507 = fn () -> (Tensor[(15, 11, 11), bool], Tensor[(792), float64]) {
    %1504 = @func_20229() /* ty=(Tensor[(792), float64],) */;
    %1505 = @func_7570() /* ty=Tensor[(15, 11, 11), bool] */;
    %1506 = %1504.0;
    (%1505, %1506)
  };
  %1507() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(792), float64]) */
}

def @func_7882() -> (Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float32]) {
  %1512 = fn () -> (Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float32]) {
    %1508 = @func_6635() /* ty=(Tensor[(15, 11, 11), float32],) */;
    %1509 = @func_5967() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(7, 3, 16), float32], Tensor[(15, 11, 11), bool]) */;
    %1510 = %1508.0;
    %1511 = %1509.1;
    (%1510, %1511)
  };
  %1512() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float32]) */
}

def @func_25422() -> Tensor[(6, 5, 3), float64] {
  %1513 = @func_7089() /* ty=(Tensor[(7, 3, 16), int8], Tensor[(6, 5, 3), float64], Tensor[(1815), bool], Tensor[(126), float64], Tensor[(320), float32], Tensor[(7, 3, 16), int8]) */;
  %1513.1
}

def @func_16689() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(90), uint64], Tensor[(15, 11, 11), float32]) {
  %1514 = @func_11467() /* ty=(Tensor[(320), float32], Tensor[(15, 11, 11), float32]) */;
  %1515 = @func_11839() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %1516 = @func_12594() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) */;
  %1517 = @func_7642() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %1518 = @func_14001() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(90), uint64], Tensor[(15, 11, 11), float64]) */;
  %1519 = @func_12895() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(30), float32]) */;
  %1520 = %1514.1;
  %1521 = %1515.0;
  %1522 = %1516.0;
  %1523 = %1517.0;
  %1524 = %1518.1;
  %1525 = %1519.0;
  (%1520, %1521, %1522, %1523, %1524, %1525)
}

def @func_9939(%var_9938: Tensor[(90, 1), uint64]) -> (Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(90, 1), uint64], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) {
  %1537 = fn (%var_9920: Tensor[(90, 1), uint64]) -> (Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(90, 1), uint64], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) {
    %1526 = cast(%var_9920, dtype="uint64") /* ty=Tensor[(90, 1), uint64] */;
    %1527 = cast(%var_9920, dtype="uint64") /* ty=Tensor[(90, 1), uint64] */;
    %1528 = reshape(%1526, newshape=[6, 5, 3]) /* ty=Tensor[(6, 5, 3), uint64] */;
    %1529 = reshape(%1527, newshape=[6, 5, 3]) /* ty=Tensor[(6, 5, 3), uint64] */;
    %1530 = @func_237(%1528, %1529) /* ty=(Tensor[(6, 5, 3), uint64], Tensor[(6, 5, 3), float64], Tensor[(6, 5, 3), float64]) */;
    %1531 = @func_5691() /* ty=(Tensor[(15, 11, 11), bool],) */;
    %1532 = @func_4328() /* ty=(Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), float32]) */;
    %1533 = @func_8380() /* ty=Tensor[(15, 11, 11), float32] */;
    %1534 = %1530.1;
    %1535 = %1531.0;
    %1536 = %1532.1;
    (%1533, %1534, %var_9920, %1535, %1536)
  };
  %1537(%var_9938) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(90, 1), uint64], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) */
}

def @func_15266() -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool]) {
  @func_15264() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool]) */
}

def @func_15895() -> (Tensor[(15, 11, 11), bool],) {
  %1540 = fn () -> (Tensor[(15, 11, 11), bool],) {
    %1538 = @func_3322() /* ty=(Tensor[(15, 11, 11), bool],) */;
    %1539 = %1538.0;
    (%1539,)
  };
  %1540() /* ty=(Tensor[(15, 11, 11), bool],) */
}

def @func_24003() -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(2002), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  @func_24001() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(2002), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */
}

def @func_11173() -> Tensor[(15, 11, 11), float32] {
  %1541 = @func_7642() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %1541.1
}

def @func_8512() -> (Tensor[(15, 11, 11), float32],) {
  @func_8510() /* ty=(Tensor[(15, 11, 11), float32],) */
}

def @func_13479(%var_13477: Tensor[(30), float32], %var_13478: Tensor[(792), float64]) -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(30), float32], Tensor[(6, 5, 3), uint64], Tensor[(792), float64]) {
  %1556 = fn (%var_13456: Tensor[(30), float32], %var_13465: Tensor[(792), float64]) -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(30), float32], Tensor[(6, 5, 3), uint64], Tensor[(792), float64]) {
    %1542 = @func_10446() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
    %1543 = @func_12594() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) */;
    %1544 = @func_6394() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
    %1545 = cast(%var_13456, dtype="float32") /* ty=Tensor[(30), float32] */;
    %1546 = reshape(%1545, newshape=[30]) /* ty=Tensor[(30), float32] */;
    %1547 = @func_12664(%1546) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(1, 14, 9), float64], Tensor[(126), float64], Tensor[(2, 1, 15), float32], Tensor[(30), float32], Tensor[(792), float64]) */;
    %1548 = cast(%var_13465, dtype="float64") /* ty=Tensor[(792), float64] */;
    %1549 = reshape(%1548, newshape=[8, 11, 9]) /* ty=Tensor[(8, 11, 9), float64] */;
    %1550 = @func_643(%1549) /* ty=(Tensor[(8, 11, 9), int8], Tensor[(6, 5, 3), float64], Tensor[(90), uint64], Tensor[(6, 5, 3), uint64]) */;
    %1551 = %1542.0;
    %1552 = %1543.1;
    %1553 = %1544.1;
    %1554 = %1547.0;
    %1555 = %1550.3;
    (%1551, %1552, %1553, %1554, %var_13456, %1555, %var_13465)
  };
  %1556(%var_13477, %var_13478) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(30), float32], Tensor[(6, 5, 3), uint64], Tensor[(792), float64]) */
}

def @func_26524(%var_26522: Tensor[(16, 10, 15), int32]) -> (Tensor[(15, 11, 11), float32], Tensor[(16, 10, 15), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool]) {
  @func_26521(%var_26522) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(16, 10, 15), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool]) */
}

def @func_6987() -> (Tensor[(7, 3, 16), float32],) {
  %1557 = @func_5967() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(7, 3, 16), float32], Tensor[(15, 11, 11), bool]) */;
  %1558 = %1557.1;
  (%1558,)
}

def @func_24419() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %1559 = @func_12932() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float64]) */;
  %1560 = @func_15033() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1561 = %1559.0;
  %1562 = %1560.0;
  (%1561, %1562)
}

def @func_26380(%var_26378: Tensor[(8, 6, 8), int64], %var_26379: Tensor[(8, 6, 8), int64]) -> (Tensor[(8, 6, 8), int64], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool]) {
  @func_26376(%var_26378, %var_26379) /* ty=(Tensor[(8, 6, 8), int64], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool]) */
}

def @func_12019() -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) {
  @func_12017() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) */
}

def @func_15054() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float64]) {
  %1563 = @func_8171() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1564 = %1563.0;
  %1565 = @func_2995() /* ty=Tensor[(15, 11, 11), float32] */;
  %1566 = @func_6128() /* ty=Tensor[(7, 3, 16), float64] */;
  (%1564, %1565, %1566)
}

def @func_17215() -> Tensor[(15, 11, 11), bool] {
  @func_17213() /* ty=Tensor[(15, 11, 11), bool] */
}

def @func_9488() -> Tensor[(15, 11, 11), float32] {
  %1568 = fn () -> Tensor[(15, 11, 11), float32] {
    %1567 = @func_4124() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
    %1567.1
  };
  %1568() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_22400() -> Tensor[(15, 11, 11), float32] {
  @func_22243() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_13211() -> (Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64]) {
  %1572 = fn () -> (Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64]) {
    %1569 = @func_11256() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
    %1570 = %1569.1;
    %1571 = @func_8752() /* ty=Tensor[(6, 5, 3), float64] */;
    (%1570, %1571)
  };
  %1572() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64]) */
}

def @func_16191(%var_16189: Tensor[(126), float64]) -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(126), float64], Tensor[(15, 11, 11), bool]) {
  @func_16188(%var_16189) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(126), float64], Tensor[(15, 11, 11), bool]) */
}

def @func_23012() -> (Tensor[(90), uint64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float64]) {
  %1578 = fn () -> (Tensor[(90), uint64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float64]) {
    %1573 = @func_15033() /* ty=(Tensor[(15, 11, 11), float32],) */;
    %1574 = @func_14001() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(90), uint64], Tensor[(15, 11, 11), float64]) */;
    %1575 = @func_17894() /* ty=Tensor[(90), uint64] */;
    %1576 = %1573.0;
    %1577 = %1574.2;
    (%1575, %1576, %1577)
  };
  %1578() /* ty=(Tensor[(90), uint64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float64]) */
}

def @func_10056(%var_10055: Tensor[(126), float64]) -> (Tensor[(15, 11, 11), bool], Tensor[(6, 5, 3), float64], Tensor[(90), uint64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(1, 14, 9), float64], Tensor[(126), float64]) {
  %1599 = fn (%var_10043: Tensor[(126), float64]) -> (Tensor[(15, 11, 11), bool], Tensor[(6, 5, 3), float64], Tensor[(90), uint64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(1, 14, 9), float64], Tensor[(126), float64]) {
    %1579 = cast(meta[relay.Constant][51] /* ty=Tensor[(90), uint64] */, dtype="uint64") /* ty=Tensor[(90), uint64] */;
    %1580 = cast(meta[relay.Constant][51] /* ty=Tensor[(90), uint64] */, dtype="uint64") /* ty=Tensor[(90), uint64] */;
    %1581 = reshape(%1579, newshape=[6, 5, 3]) /* ty=Tensor[(6, 5, 3), uint64] */;
    %1582 = reshape(%1580, newshape=[6, 5, 3]) /* ty=Tensor[(6, 5, 3), uint64] */;
    %1583 = @func_237(%1581, %1582) /* ty=(Tensor[(6, 5, 3), uint64], Tensor[(6, 5, 3), float64], Tensor[(6, 5, 3), float64]) */;
    %1584 = @func_4124() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
    %1585 = cast(meta[relay.Constant][51] /* ty=Tensor[(90), uint64] */, dtype="uint64") /* ty=Tensor[(90), uint64] */;
    %1586 = %1583.1;
    %1587 = cast(%1586, dtype="uint64") /* ty=Tensor[(6, 5, 3), uint64] */;
    %1588 = reshape(%1585, newshape=[6, 5, 3]) /* ty=Tensor[(6, 5, 3), uint64] */;
    %1589 = reshape(%1587, newshape=[6, 5, 3]) /* ty=Tensor[(6, 5, 3), uint64] */;
    %1590 = @func_237(%1588, %1589) /* ty=(Tensor[(6, 5, 3), uint64], Tensor[(6, 5, 3), float64], Tensor[(6, 5, 3), float64]) */;
    %1591 = cast(%var_10043, dtype="float64") /* ty=Tensor[(126), float64] */;
    %1592 = reshape(%1591, newshape=[126]) /* ty=Tensor[(126), float64] */;
    %1593 = @func_4266(%1592) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(1, 14, 9), float64], Tensor[(126), float64], Tensor[(792), float64]) */;
    %1594 = @func_7570() /* ty=Tensor[(15, 11, 11), bool] */;
    %1595 = %1584.0;
    %1596 = @func_2995() /* ty=Tensor[(15, 11, 11), float32] */;
    %1597 = %1590.1;
    %1598 = %1593.1;
    (%1594, %1586, meta[relay.Constant][51] /* ty=Tensor[(90), uint64] */, %1595, %1596, %1597, %1598, %var_10043)
  };
  %1599(%var_10055) /* ty=(Tensor[(15, 11, 11), bool], Tensor[(6, 5, 3), float64], Tensor[(90), uint64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(1, 14, 9), float64], Tensor[(126), float64]) */
}

def @func_18630() -> Tensor[(792), float64] {
  %1601 = fn () -> Tensor[(792), float64] {
    %1600 = @func_8687() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), uint64], Tensor[(792), float64]) */;
    %1600.2
  };
  %1601() /* ty=Tensor[(792), float64] */
}

def @func_20319() -> (Tensor[(15, 11, 11), float32],) {
  %1602 = @func_13529() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(1, 126), float64]) */;
  %1603 = %1602.1;
  (%1603,)
}

def @func_20022() -> Tensor[(15, 11, 11), float32] {
  @func_20020() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_15502() -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) {
  %1604 = @func_12594() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) */;
  %1605 = %1604.1;
  %1606 = @func_8380() /* ty=Tensor[(15, 11, 11), float32] */;
  (%1605, %1606)
}

def @func_7548(%var_7546: float32, %var_7547: Tensor[(8, 1), float32]) -> (Tensor[(8, 1), bool],) {
  @func_7544(%var_7546, %var_7547) /* ty=(Tensor[(8, 1), bool],) */
}

def @func_5075() -> Tensor[(1, 126), float64] {
  @func_5073() /* ty=Tensor[(1, 126), float64] */
}

def @func_22632() -> (Tensor[(15, 11, 11), float64],) {
  %1609 = fn () -> (Tensor[(15, 11, 11), float64],) {
    %1607 = @func_16050() /* ty=(Tensor[(15, 11, 11), float64], Tensor[(2, 7, 14), uint8], uint8, Tensor[(196, 1), uint8]) */;
    %1608 = %1607.0;
    (%1608,)
  };
  %1609() /* ty=(Tensor[(15, 11, 11), float64],) */
}

def @func_5557(%var_5556: Tensor[(126), float64]) -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(126), float64], Tensor[(320), float32], Tensor[(80, 4), float64]) {
  %1622 = fn (%var_5528: Tensor[(126), float64]) -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(126), float64], Tensor[(320), float32], Tensor[(80, 4), float64]) {
    %1610 = @func_2900() /* ty=Tensor[(15, 11, 11), float32] */;
    %1611 = cast(%1610, dtype="bool") /* ty=Tensor[(15, 11, 11), bool] */;
    %1612 = cast(%var_5528, dtype="float64") /* ty=Tensor[(126), float64] */;
    %1613 = cast(meta[relay.Constant][52] /* ty=Tensor[(320), float32] */, dtype="float32") /* ty=Tensor[(320), float32] */;
    %1614 = reshape(%1611, newshape=[15, 11, 11]) /* ty=Tensor[(15, 11, 11), bool] */;
    %1615 = reshape(%1612, newshape=[126]) /* ty=Tensor[(126), float64] */;
    %1616 = reshape(%1613, newshape=[80, 4]) /* ty=Tensor[(80, 4), float32] */;
    %1617 = @func_4196(%1614, %1615, %1616) /* ty=(Tensor[(126), float64], Tensor[(80, 4), float32], Tensor[(15, 11, 11), float64], Tensor[(6, 5, 3), float64]) */;
    %1618 = %1617.1;
    %1619 = cast(%1618, dtype="float64") /* ty=Tensor[(80, 4), float64] */;
    %1620 = @func_2995() /* ty=Tensor[(15, 11, 11), float32] */;
    %1621 = sin(%1619) /* ty=Tensor[(80, 4), float64] */;
    (%1620, %1610, %var_5528, meta[relay.Constant][52] /* ty=Tensor[(320), float32] */, %1621)
  };
  %1622(%var_5556) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(126), float64], Tensor[(320), float32], Tensor[(80, 4), float64]) */
}

def @func_22218() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %1623 = @func_7898() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %1624 = @func_2978() /* ty=Tensor[(15, 11, 11), float32] */;
  %1625 = %1623.1;
  %1626 = @func_12750() /* ty=Tensor[(15, 11, 11), float32] */;
  (%1624, %1625, %1626)
}

def @func_5752() -> Tensor[(15, 11, 11), float32] {
  %1627 = @func_4240() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %1627.1
}

def @func_22858() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %1632 = fn () -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
    %1628 = @func_13787() /* ty=(Tensor[(15, 11, 11), float32],) */;
    %1629 = @func_7756() /* ty=(Tensor[(15, 11, 11), float32],) */;
    %1630 = %1628.0;
    %1631 = %1629.0;
    (%1630, %1631)
  };
  %1632() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */
}

def @func_26177(%var_26176: Tensor[(182), uint8]) -> (Tensor[(15, 11, 11), float32], Tensor[(320), float32], Tensor[(182), uint8], Tensor[(1820), uint8], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %1643 = fn (%var_26136: Tensor[(182), uint8]) -> (Tensor[(15, 11, 11), float32], Tensor[(320), float32], Tensor[(182), uint8], Tensor[(1820), uint8], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
    %1633 = cast(%var_26136, dtype="uint8") /* ty=Tensor[(182), uint8] */;
    %1634 = cast(meta[relay.Constant][53] /* ty=Tensor[(1820), uint8] */, dtype="uint8") /* ty=Tensor[(1820), uint8] */;
    %1635 = reshape(%1633, newshape=[13, 1, 14]) /* ty=Tensor[(13, 1, 14), uint8] */;
    %1636 = reshape(%1634, newshape=[13, 10, 14]) /* ty=Tensor[(13, 10, 14), uint8] */;
    %1637 = @func_20976(%1635, %1636) /* ty=(Tensor[(13, 10, 14), uint8], Tensor[(320), float32]) */;
    %1638 = @func_11839() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
    %1639 = @func_15176() /* ty=Tensor[(15, 11, 11), float32] */;
    %1640 = %1637.1;
    %1641 = @func_25129() /* ty=Tensor[(15, 11, 11), float32] */;
    %1642 = %1638.0;
    (%1639, %1640, %var_26136, meta[relay.Constant][53] /* ty=Tensor[(1820), uint8] */, %1641, %1642)
  };
  %1643(%var_26176) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(320), float32], Tensor[(182), uint8], Tensor[(1820), uint8], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */
}

def @func_9252(%var_9251: Tensor[(30), float32]) -> (Tensor[(15, 11, 11), float32], Tensor[(2, ?, 15), bool]) {
  %1654 = fn (%var_9220: Tensor[(30), float32]) -> (Tensor[(15, 11, 11), float32], Tensor[(2, ?, 15), bool]) {
    %1644 = @func_6819() /* ty=(Tensor[(15, 11, 11), float32],) */;
    %1645 = cast(%var_9220, dtype="float32") /* ty=Tensor[(30), float32] */;
    %1646 = reshape(%1645, newshape=[2, 1, 15]) /* ty=Tensor[(2, 1, 15), float32] */;
    %1647 = @func_5670(%1646) /* ty=Tensor[(2, 1, 15), float32] */;
    %1648 = cast(%var_9220, dtype="bool") /* ty=Tensor[(30), bool] */;
    %1649 = shape_of(%1647, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1650 = cast(%1647, dtype="bool") /* ty=Tensor[(2, 1, 15), bool] */;
    %1651 = dyn.reshape(%1648, %1649, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1652 = %1644.0;
    %1653 = less(%1650, %1651) /* ty=Tensor[(2, ?, 15), bool] */;
    (%1652, %1653)
  };
  %1654(%var_9251) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(2, ?, 15), bool]) */
}

def @func_20425() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %1655 = @func_20387() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float64], Tensor[(126), float64], Tensor[(15, 11, 11), float32]) */;
  %1656 = @func_11558() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) */;
  %1657 = @func_5931() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) */;
  %1658 = %1655.3;
  %1659 = %1656.0;
  %1660 = %1657.1;
  (%1658, %1659, %1660)
}

def @func_20532() -> (Tensor[(15, 11, 11), float32],) {
  %1661 = @func_15176() /* ty=Tensor[(15, 11, 11), float32] */;
  (%1661,)
}

def @func_25191() -> Tensor[(15, 11, 11), bool] {
  %1662 = @func_5103() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %1662.0
}

def @func_13721() -> (Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(15, 11, 11), bool], Tensor[(792), float64]) {
  %1663 = @func_11306() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %1664 = @func_6800() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool]) */;
  %1665 = @func_6210() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(8, 11, 9), int8], Tensor[(126), float64], Tensor[(792), float64]) */;
  %1666 = %1663.1;
  %1667 = @func_8752() /* ty=Tensor[(6, 5, 3), float64] */;
  %1668 = %1664.1;
  %1669 = %1665.3;
  (%1666, %1667, %1668, %1669)
}

def @func_5440() -> (Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), float64]) {
  @func_5438() /* ty=(Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), float64]) */
}

def @func_16925(%var_16896: Tensor[(15, 126), float64]) -> (Tensor[(15, 126), float32], Tensor[(15, 126), bool], Tensor[(15, 126), bool]) {
  %1670 = cast(%var_16896, dtype="float32") /* ty=Tensor[(15, 126), float32] */;
  %1671 = @func_5073() /* ty=Tensor[(1, 126), float64] */;
  %1672 = cast(%1671, dtype="bool") /* ty=Tensor[(1, 126), bool] */;
  %1673 = cast(%var_16896, dtype="bool") /* ty=Tensor[(15, 126), bool] */;
  %1674 = cast(%1671, dtype="uint16") /* ty=Tensor[(1, 126), uint16] */;
  %1675 = cast(%var_16896, dtype="uint16") /* ty=Tensor[(15, 126), uint16] */;
  %1676 = add(%1674, %1675) /* ty=Tensor[(15, 126), uint16] */;
  %1677 = cast(%var_16896, dtype="bool") /* ty=Tensor[(15, 126), bool] */;
  %1678 = shape_of(%1676, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1679 = cast(%1676, dtype="bool") /* ty=Tensor[(15, 126), bool] */;
  %1680 = dyn.reshape(%1677, %1678, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1681 = exp(%1670) /* ty=Tensor[(15, 126), float32] */;
  %1682 = greater_equal(%1672, %1673) /* ty=Tensor[(15, 126), bool] */;
  %1683 = not_equal(%1679, %1680) /* ty=Tensor[(15, 126), bool] */;
  (%1681, %1682, %1683)
}

def @func_18326() -> (Tensor[(15, 11, 11), float32],) {
  %1684 = @func_9844() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1685 = %1684.0;
  (%1685,)
}

def @func_5754() -> Tensor[(15, 11, 11), float32] {
  @func_5752() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_18449() -> (Tensor[(15, 11, 11), float32], Tensor[(126), float64], Tensor[(6, 5, 3), float64], Tensor[(15, 11, 11), float32]) {
  @func_18447() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(126), float64], Tensor[(6, 5, 3), float64], Tensor[(15, 11, 11), float32]) */
}

def @func_20388() -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float64], Tensor[(126), float64], Tensor[(15, 11, 11), float32]) {
  %1695 = fn () -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float64], Tensor[(126), float64], Tensor[(15, 11, 11), float32]) {
    %1686 = @func_14001() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(90), uint64], Tensor[(15, 11, 11), float64]) */;
    %1687 = @func_12969() /* ty=(Tensor[(126), float64], Tensor[(15, 11, 11), float32]) */;
    %1688 = %1687.0;
    %1689 = cast(%1688, dtype="float64") /* ty=Tensor[(126), float64] */;
    %1690 = reshape(%1689, newshape=[126]) /* ty=Tensor[(126), float64] */;
    %1691 = @func_16188(%1690) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(126), float64], Tensor[(15, 11, 11), bool]) */;
    %1692 = @func_17213() /* ty=Tensor[(15, 11, 11), bool] */;
    %1693 = %1686.2;
    %1694 = %1691.2;
    (%1692, %1693, %1688, %1694)
  };
  %1695() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float64], Tensor[(126), float64], Tensor[(15, 11, 11), float32]) */
}

def @func_21771() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  @func_21769() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */
}

def @func_25778() -> (Tensor[(15, 11, 11), float32],) {
  @func_25776() /* ty=(Tensor[(15, 11, 11), float32],) */
}

def @func_8427() -> (Tensor[(15, 11, 11), float32], Tensor[(320), float32]) {
  %1696 = @func_7089() /* ty=(Tensor[(7, 3, 16), int8], Tensor[(6, 5, 3), float64], Tensor[(1815), bool], Tensor[(126), float64], Tensor[(320), float32], Tensor[(7, 3, 16), int8]) */;
  %1697 = @func_7426() /* ty=Tensor[(15, 11, 11), float32] */;
  %1698 = %1696.4;
  (%1697, %1698)
}

def @func_25309() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %1699 = @func_18677() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) */;
  %1700 = %1699.2;
  %1701 = @func_15023() /* ty=Tensor[(15, 11, 11), float32] */;
  (%1700, %1701)
}

def @func_25880() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  @func_25878() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */
}

def @func_21283() -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) {
  %1706 = fn () -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) {
    %1702 = @func_14187() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(1008), float64], Tensor[(7, 3, 16), float32]) */;
    %1703 = @func_14620() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
    %1704 = %1702.0;
    %1705 = %1703.0;
    (%1704, %1705)
  };
  %1706() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) */
}

def @func_21811() -> Tensor[(15, 11, 11), bool] {
  @func_21809() /* ty=Tensor[(15, 11, 11), bool] */
}

def @func_25878() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %1707 = @func_22464() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1708 = @func_16246() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1709 = %1707.0;
  %1710 = %1708.0;
  (%1709, %1710)
}

def @func_10692() -> (Tensor[(15, 11, 11), bool],) {
  %1711 = @func_10085() /* ty=Tensor[(15, 11, 11), bool] */;
  (%1711,)
}

def @func_12896() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(30), float32]) {
  %1718 = fn () -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(30), float32]) {
    %1712 = @func_7642() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
    %1713 = cast(meta[relay.Constant][54] /* ty=Tensor[(30), float32] */, dtype="float32") /* ty=Tensor[(30), float32] */;
    %1714 = reshape(%1713, newshape=[30]) /* ty=Tensor[(30), float32] */;
    %1715 = @func_9250(%1714) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(2, ?, 15), bool]) */;
    %1716 = %1712.1;
    %1717 = %1715.0;
    (%1716, %1717, meta[relay.Constant][54] /* ty=Tensor[(30), float32] */)
  };
  %1718() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(30), float32]) */
}

def @func_13394() -> Tensor[(15, 11, 11), float32] {
  %1720 = fn () -> Tensor[(15, 11, 11), float32] {
    %1719 = @func_9352() /* ty=(Tensor[(15, 11, 11), float32],) */;
    %1719.0
  };
  %1720() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_9846() -> (Tensor[(15, 11, 11), float32],) {
  @func_9844() /* ty=(Tensor[(15, 11, 11), float32],) */
}

def @func_12933() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float64]) {
  %1725 = fn () -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float64]) {
    %1721 = @func_6265() /* ty=(Tensor[(15, 11, 11), float32],) */;
    %1722 = @func_5026() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float64], Tensor[(7, 3, 16), int8]) */;
    %1723 = %1721.0;
    %1724 = %1722.1;
    (%1723, %1724)
  };
  %1725() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float64]) */
}

def @func_21504(%var_21502: Tensor[(14, 12, 16), uint32], %var_21503: Tensor[(14, 12, 16), uint32]) -> (Tensor[(14, 12, 16), bool],) {
  %1731 = fn (%var_21494: Tensor[(14, 12, 16), uint32], %var_21495: Tensor[(14, 12, 16), uint32]) -> (Tensor[(14, 12, 16), bool],) {
    %1726 = cast(%var_21495, dtype="bool") /* ty=Tensor[(14, 12, 16), bool] */;
    %1727 = shape_of(%var_21494, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1728 = cast(%var_21494, dtype="bool") /* ty=Tensor[(14, 12, 16), bool] */;
    %1729 = dyn.reshape(%1726, %1727, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1730 = less_equal(%1728, %1729) /* ty=Tensor[(14, 12, 16), bool] */;
    (%1730,)
  };
  %1731(%var_21502, %var_21503) /* ty=(Tensor[(14, 12, 16), bool],) */
}

def @func_12970() -> (Tensor[(126), float64], Tensor[(15, 11, 11), float32]) {
  %1735 = fn () -> (Tensor[(126), float64], Tensor[(15, 11, 11), float32]) {
    %1732 = @func_7089() /* ty=(Tensor[(7, 3, 16), int8], Tensor[(6, 5, 3), float64], Tensor[(1815), bool], Tensor[(126), float64], Tensor[(320), float32], Tensor[(7, 3, 16), int8]) */;
    %1733 = %1732.3;
    %1734 = @func_4906() /* ty=Tensor[(15, 11, 11), float32] */;
    (%1733, %1734)
  };
  %1735() /* ty=(Tensor[(126), float64], Tensor[(15, 11, 11), float32]) */
}

def @func_6266() -> (Tensor[(15, 11, 11), float32],) {
  %1738 = fn () -> (Tensor[(15, 11, 11), float32],) {
    %1736 = @func_5349() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
    %1737 = %1736.0;
    (%1737,)
  };
  %1738() /* ty=(Tensor[(15, 11, 11), float32],) */
}

def @func_24387() -> (Tensor[(15, 11, 11), bool],) {
  %1741 = fn () -> (Tensor[(15, 11, 11), bool],) {
    %1739 = @func_6148() /* ty=(Tensor[(15, 11, 11), bool],) */;
    %1740 = %1739.0;
    (%1740,)
  };
  %1741() /* ty=(Tensor[(15, 11, 11), bool],) */
}

def @func_6890() -> Tensor[(15, 11, 11), float32] {
  %1742 = fn () -> Tensor[(15, 11, 11), float32] {
    @func_5860() /* ty=Tensor[(15, 11, 11), float32] */
  };
  %1742() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_9085() -> (Tensor[(7, 3, 16), float64], Tensor[(15, 11, 11), float32], Tensor[(126), float64]) {
  %1743 = cast(meta[relay.Constant][55] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
  %1744 = reshape(%1743, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %1745 = @func_5555(%1744) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(126), float64], Tensor[(320), float32], Tensor[(80, 4), float64]) */;
  %1746 = @func_6128() /* ty=Tensor[(7, 3, 16), float64] */;
  %1747 = %1745.0;
  (%1746, %1747, meta[relay.Constant][55] /* ty=Tensor[(126), float64] */)
}

def @func_24350() -> (Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), int8], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %1755 = fn () -> (Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), int8], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
    %1748 = @func_4607() /* ty=(Tensor[(7, 3, 16), int8], Tensor[(15, 11, 11), float32], Tensor[(1, 126), float64], Tensor[(7, 3, 16), int8], Tensor[(16, 5, 4), float32], Tensor[(320), float32]) */;
    %1749 = @func_7614() /* ty=(Tensor[(15, 11, 11), float32],) */;
    %1750 = @func_13616() /* ty=Tensor[(15, 11, 11), float32] */;
    %1751 = %1748.3;
    %1752 = @func_9593() /* ty=Tensor[(15, 11, 11), bool] */;
    %1753 = %1749.0;
    %1754 = @func_20138() /* ty=Tensor[(15, 11, 11), float32] */;
    (%1750, %1751, %1752, %1753, %1754)
  };
  %1755() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), int8], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */
}

def @func_4266(%var_4261: Tensor[(126), float64]) -> (Tensor[(15, 11, 11), float32], Tensor[(1, 14, 9), float64], Tensor[(126), float64], Tensor[(792), float64]) {
  %1756 = @func_3461() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) */;
  %1757 = cast(%var_4261, dtype="float64") /* ty=Tensor[(126), float64] */;
  %1758 = cast(meta[relay.Constant][56] /* ty=Tensor[(792), float64] */, dtype="float64") /* ty=Tensor[(792), float64] */;
  %1759 = reshape(%1757, newshape=[1, 14, 9]) /* ty=Tensor[(1, 14, 9), float64] */;
  %1760 = reshape(%1758, newshape=[792]) /* ty=Tensor[(792), float64] */;
  %1761 = @func_1060(%1759, %1760) /* ty=(Tensor[(1, 14, 9), float64], Tensor[(8, 11, 9), int8], Tensor[(792), float64]) */;
  %1762 = %1756.0;
  %1763 = %1761.0;
  (%1762, %1763, %var_4261, meta[relay.Constant][56] /* ty=Tensor[(792), float64] */)
}

def @func_12486() -> (Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), bool]) {
  @func_12484() /* ty=(Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), bool]) */
}

def @func_11558() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) {
  %1764 = @func_11256() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %1765 = @func_10692() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %1766 = @func_3665() /* ty=Tensor[(15, 11, 11), float32] */;
  %1767 = %1764.1;
  %1768 = %1765.0;
  (%1766, %1767, %1768)
}

def @func_11342() -> Tensor[(15, 11, 11), float32] {
  %1769 = @func_4741() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), int8]) */;
  %1769.0
}

def @func_16819() -> Tensor[(15, 11, 11), float32] {
  %1770 = @func_8023() /* ty=(Tensor[(7, 3, 16), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(1, 126), float64], Tensor[(11, 14, 13), float32], Tensor[(2002), float32]) */;
  %1770.1
}

def @func_15025() -> Tensor[(15, 11, 11), float32] {
  @func_15023() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_25129() -> Tensor[(15, 11, 11), float32] {
  %1771 = @func_18326() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1771.0
}

def @func_10877(%var_10876: Tensor[(126), float64]) -> (Tensor[(15, 11, 11), float32], Tensor[(90), uint64], Tensor[(15, 11, 11), bool], Tensor[(126), float64]) {
  %1782 = fn (%var_10865: Tensor[(126), float64]) -> (Tensor[(15, 11, 11), float32], Tensor[(90), uint64], Tensor[(15, 11, 11), bool], Tensor[(126), float64]) {
    %1772 = @func_7744() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
    %1773 = @func_3748() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(792), float64], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(90), uint64]) */;
    %1774 = %1772.1;
    %1775 = cast(%1774, dtype="float32") /* ty=Tensor[(15, 11, 11), float32] */;
    %1776 = cast(%var_10865, dtype="float64") /* ty=Tensor[(126), float64] */;
    %1777 = reshape(%1775, newshape=[15, 11, 11]) /* ty=Tensor[(15, 11, 11), float32] */;
    %1778 = reshape(%1776, newshape=[126]) /* ty=Tensor[(126), float64] */;
    %1779 = @func_4461(%1777, %1778) /* ty=(Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(126), float64], Tensor[(7, 3, 16), int8]) */;
    %1780 = %1773.5;
    %1781 = %1779.2;
    (%1774, %1780, %1781, %var_10865)
  };
  %1782(%var_10876) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(90), uint64], Tensor[(15, 11, 11), bool], Tensor[(126), float64]) */
}

def @func_4461(%var_4411: Tensor[(15, 11, 11), float32], %var_4448: Tensor[(126), float64]) -> (Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(126), float64], Tensor[(7, 3, 16), int8]) {
  %1783 = @func_2995() /* ty=Tensor[(15, 11, 11), float32] */;
  %1784 = cast(%var_4411, dtype="float64") /* ty=Tensor[(15, 11, 11), float64] */;
  %1785 = shape_of(%1783, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1786 = cast(%1783, dtype="float64") /* ty=Tensor[(15, 11, 11), float64] */;
  %1787 = dyn.reshape(%1784, %1785, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1788 = @func_3461() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) */;
  %1789 = cast(%var_4411, dtype="float32") /* ty=Tensor[(15, 11, 11), float32] */;
  %1790 = cast(%var_4448, dtype="float64") /* ty=Tensor[(126), float64] */;
  %1791 = reshape(%1790, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %1792 = @func_3564(%1791) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(8, 11, 9), int8], Tensor[(126), float64], Tensor[(792), float64]) */;
  %1793 = @func_4371() /* ty=(Tensor[(7, 3, 16), int8],) */;
  %1794 = divide(%1786, %1787) /* ty=Tensor[(15, 11, 11), float64] */;
  %1795 = @func_2978() /* ty=Tensor[(15, 11, 11), float32] */;
  %1796 = %1788.1;
  %1797 = acos(%1789) /* ty=Tensor[(15, 11, 11), float32] */;
  %1798 = %1792.0;
  %1799 = %1793.0;
  (%1794, %1795, %1796, %1797, %1798, %var_4448, %1799)
}

def @func_22365() -> (Tensor[(15, 11, 11), float32],) {
  @func_22363() /* ty=(Tensor[(15, 11, 11), float32],) */
}

def @func_25361() -> (Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool]) {
  %1800 = @func_5438() /* ty=(Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), float64]) */;
  %1801 = @func_24913() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) */;
  %1802 = @func_17934() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) */;
  %1803 = %1800.1;
  %1804 = %1801.1;
  %1805 = %1802.1;
  (%1803, %1804, %1805)
}

def @func_19054() -> Tensor[(15, 11, 11), float64] {
  %1806 = @func_14791() /* ty=(Tensor[(126), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float64]) */;
  %1806.2
}

def @func_21295() -> Tensor[(7, 3, 16), float32] {
  %1808 = fn () -> Tensor[(7, 3, 16), float32] {
    %1807 = @func_9375() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float32]) */;
    %1807.1
  };
  %1808() /* ty=Tensor[(7, 3, 16), float32] */
}

def @func_24913() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) {
  %1809 = @func_9143() /* ty=(Tensor[(7, 3, 16), float32], Tensor[(792), float64], Tensor[(126), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %1810 = @func_15894() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %1811 = %1809.5;
  %1812 = %1810.0;
  (%1811, %1812)
}

def @func_24478() -> (Tensor[(15, 11, 11), float32], Tensor[(2, 14, 1), bool], int16) {
  %1813 = @func_22363() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1814 = cast(meta[relay.Constant][57] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %1815 = reshape(%1814, newshape=[]) /* ty=int16 */;
  %1816 = @func_10765(%1815) /* ty=(Tensor[(2, 14, 1), bool],) */;
  %1817 = %1813.0;
  %1818 = %1816.0;
  (%1817, %1818, meta[relay.Constant][57] /* ty=int16 */)
}

def @func_3075() -> Tensor[(15, 11, 11), float32] {
  %1819 = fn () -> Tensor[(15, 11, 11), float32] {
    @func_2978() /* ty=Tensor[(15, 11, 11), float32] */
  };
  %1819() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_7502() -> (Tensor[(7, 3, 16), float64], Tensor[(7, 3, 16), int8], Tensor[(15, 11, 11), float32], Tensor[(8, 126), int8], Tensor[(504, 2), float64]) {
  %1830 = fn () -> (Tensor[(7, 3, 16), float64], Tensor[(7, 3, 16), int8], Tensor[(15, 11, 11), float32], Tensor[(8, 126), int8], Tensor[(504, 2), float64]) {
    %1820 = @func_7386() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float64]) */;
    %1821 = @func_4741() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), int8]) */;
    %1822 = @func_3160() /* ty=(Tensor[(15, 11, 11), float32],) */;
    %1823 = cast(meta[relay.Constant][58] /* ty=Tensor[(504, 2), float64] */, dtype="float64") /* ty=Tensor[(504, 2), float64] */;
    %1824 = reshape(%1823, newshape=[8, 126]) /* ty=Tensor[(8, 126), float64] */;
    %1825 = @func_7128(%1824) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(8, 126), int8]) */;
    %1826 = %1820.1;
    %1827 = %1821.1;
    %1828 = %1822.0;
    %1829 = %1825.1;
    (%1826, %1827, %1828, %1829, meta[relay.Constant][58] /* ty=Tensor[(504, 2), float64] */)
  };
  %1830() /* ty=(Tensor[(7, 3, 16), float64], Tensor[(7, 3, 16), int8], Tensor[(15, 11, 11), float32], Tensor[(8, 126), int8], Tensor[(504, 2), float64]) */
}

def @func_23674() -> (Tensor[(15, 11, 11), float64], Tensor[(8, 15, 15), float64], Tensor[(18, 100), float64]) {
  @func_23672() /* ty=(Tensor[(15, 11, 11), float64], Tensor[(8, 15, 15), float64], Tensor[(18, 100), float64]) */
}

def @func_22402() -> Tensor[(15, 11, 11), float32] {
  @func_22400() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_9298() -> (Tensor[(15, 11, 11), bool],) {
  @func_9296() /* ty=(Tensor[(15, 11, 11), bool],) */
}

def @func_23672() -> (Tensor[(15, 11, 11), float64], Tensor[(8, 15, 15), float64], Tensor[(18, 100), float64]) {
  %1831 = @func_22631() /* ty=(Tensor[(15, 11, 11), float64],) */;
  %1832 = cast(meta[relay.Constant][59] /* ty=Tensor[(18, 100), float64] */, dtype="float64") /* ty=Tensor[(18, 100), float64] */;
  %1833 = reshape(%1832, newshape=[8, 15, 15]) /* ty=Tensor[(8, 15, 15), float64] */;
  %1834 = %1831.0;
  %1835 = @func_15438(%1833) /* ty=Tensor[(8, 15, 15), float64] */;
  (%1834, %1835, meta[relay.Constant][59] /* ty=Tensor[(18, 100), float64] */)
}

def @func_7757() -> (Tensor[(15, 11, 11), float32],) {
  %1838 = fn () -> (Tensor[(15, 11, 11), float32],) {
    %1836 = @func_6265() /* ty=(Tensor[(15, 11, 11), float32],) */;
    %1837 = %1836.0;
    (%1837,)
  };
  %1838() /* ty=(Tensor[(15, 11, 11), float32],) */
}

def @func_3215(%var_3205: Tensor[(90), uint64]) -> (Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), uint64], Tensor[(90), uint64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %1839 = cast(%var_3205, dtype="uint64") /* ty=Tensor[(90), uint64] */;
  %1840 = cast(%var_3205, dtype="uint64") /* ty=Tensor[(90), uint64] */;
  %1841 = reshape(%1839, newshape=[6, 5, 3]) /* ty=Tensor[(6, 5, 3), uint64] */;
  %1842 = reshape(%1840, newshape=[6, 5, 3]) /* ty=Tensor[(6, 5, 3), uint64] */;
  %1843 = @func_237(%1841, %1842) /* ty=(Tensor[(6, 5, 3), uint64], Tensor[(6, 5, 3), float64], Tensor[(6, 5, 3), float64]) */;
  %1844 = @func_2978() /* ty=Tensor[(15, 11, 11), float32] */;
  %1845 = %1843.0;
  %1846 = @func_2900() /* ty=Tensor[(15, 11, 11), float32] */;
  %1847 = @func_2978() /* ty=Tensor[(15, 11, 11), float32] */;
  (%1844, %1845, %var_3205, %1846, %1847)
}

def @func_14975() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float32]) {
  %1855 = fn () -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float32]) {
    %1848 = @func_4240() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
    %1849 = @func_14791() /* ty=(Tensor[(126), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float64]) */;
    %1850 = @func_6987() /* ty=(Tensor[(7, 3, 16), float32],) */;
    %1851 = %1848.1;
    %1852 = @func_3074() /* ty=Tensor[(15, 11, 11), float32] */;
    %1853 = %1849.1;
    %1854 = %1850.0;
    (%1851, %1852, %1853, %1854)
  };
  %1855() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float32]) */
}

def @func_10768(%var_10766: int16) -> (Tensor[(2, 14, 1), bool],) {
  @func_10765(%var_10766) /* ty=(Tensor[(2, 14, 1), bool],) */
}

def @func_23508(%var_23502: Tensor[(3, 15, 3), int64]) -> (Tensor[(3, 15, 3), int64],) {
  %1856 = cast(-1 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %1857 = cast(%var_23502, dtype="int64") /* ty=Tensor[(3, 15, 3), int64] */;
  %1858 = bitwise_or(%1856, %1857) /* ty=Tensor[(3, 15, 3), int64] */;
  (%1858,)
}

def @func_25326() -> Tensor[(15, 11, 11), bool] {
  %1859 = @func_24544() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) */;
  %1859.1
}

def @func_17087() -> (Tensor[(792), float64], Tensor[(15, 11, 11), float32]) {
  @func_17085() /* ty=(Tensor[(792), float64], Tensor[(15, 11, 11), float32]) */
}

def @func_22817() -> (Tensor[(1, 14, 9), float64],) {
  @func_22815() /* ty=(Tensor[(1, 14, 9), float64],) */
}

def @func_22102() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), bool]) {
  %1865 = fn () -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), bool]) {
    %1860 = @func_14324() /* ty=(Tensor[(15, 11, 11), float32],) */;
    %1861 = @func_5438() /* ty=(Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), float64]) */;
    %1862 = %1860.0;
    %1863 = %1861.1;
    %1864 = @func_8857() /* ty=Tensor[(15, 11, 11), bool] */;
    (%1862, %1863, %1864)
  };
  %1865() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), bool]) */
}

def @func_13500() -> (Tensor[(15, 11, 11), float32],) {
  %1866 = @func_6635() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1867 = %1866.0;
  (%1867,)
}

def @func_14880() -> (Tensor[(15, 11, 11), bool], Tensor[(6, 5, 3), uint64]) {
  %1872 = fn () -> (Tensor[(15, 11, 11), bool], Tensor[(6, 5, 3), uint64]) {
    %1868 = @func_6148() /* ty=(Tensor[(15, 11, 11), bool],) */;
    %1869 = @func_8687() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), uint64], Tensor[(792), float64]) */;
    %1870 = %1868.0;
    %1871 = %1869.1;
    (%1870, %1871)
  };
  %1872() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(6, 5, 3), uint64]) */
}

def @func_21228() -> (Tensor[(16, 5, 4), float32], Tensor[(7, 3, 16), float64]) {
  @func_21226() /* ty=(Tensor[(16, 5, 4), float32], Tensor[(7, 3, 16), float64]) */
}

def @func_6800() -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool]) {
  %1873 = @func_3322() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %1874 = %1873.0;
  %1875 = cast(%1874, dtype="float32") /* ty=Tensor[(15, 11, 11), float32] */;
  %1876 = reshape(%1875, newshape=[15, 11, 11]) /* ty=Tensor[(15, 11, 11), float32] */;
  %1877 = @func_3379(%1876) /* ty=Tensor[(15, 11, 11), bool] */;
  (%1874, %1877)
}

def @func_17533() -> (Tensor[(15, 11, 11), float32],) {
  @func_17531() /* ty=(Tensor[(15, 11, 11), float32],) */
}

def @func_7644() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  @func_7642() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */
}

def @func_12065() -> (Tensor[(792), float64],) {
  %1880 = fn () -> (Tensor[(792), float64],) {
    %1878 = @func_6090() /* ty=(Tensor[(792), float64],) */;
    %1879 = %1878.0;
    (%1879,)
  };
  %1880() /* ty=(Tensor[(792), float64],) */
}

def @func_10085() -> Tensor[(15, 11, 11), bool] {
  %1881 = @func_5026() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float64], Tensor[(7, 3, 16), int8]) */;
  %1881.0
}

def @func_3782() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  @func_3780() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */
}

def @func_8381() -> Tensor[(15, 11, 11), float32] {
  %1882 = fn () -> Tensor[(15, 11, 11), float32] {
    @func_8070() /* ty=Tensor[(15, 11, 11), float32] */
  };
  %1882() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_14285() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %1883 = @func_13832() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1884 = @func_12398() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %1885 = %1883.0;
  %1886 = %1884.0;
  (%1885, %1886)
}

def @func_13723() -> (Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(15, 11, 11), bool], Tensor[(792), float64]) {
  @func_13721() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(6, 5, 3), float64], Tensor[(15, 11, 11), bool], Tensor[(792), float64]) */
}

def @func_6635() -> (Tensor[(15, 11, 11), float32],) {
  %1887 = @func_5349() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %1888 = %1887.3;
  (%1888,)
}

def @func_16247() -> (Tensor[(15, 11, 11), float32],) {
  %1890 = fn () -> (Tensor[(15, 11, 11), float32],) {
    %1889 = @func_15176() /* ty=Tensor[(15, 11, 11), float32] */;
    (%1889,)
  };
  %1890() /* ty=(Tensor[(15, 11, 11), float32],) */
}

def @func_16282(%var_16280: Tensor[(24, 26), float32]) -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(624), float32], Tensor[(24, 26), float32]) {
  @func_16279(%var_16280) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(624), float32], Tensor[(24, 26), float32]) */
}

def @func_7331() -> Tensor[(15, 11, 11), float32] {
  %1891 = @func_5803() /* ty=(Tensor[(15, 11, 11), float32],) */;
  %1891.0
}

def @func_8193() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %1897 = fn () -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
    %1892 = @func_4124() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
    %1893 = %1892.1;
    %1894 = cast(%1893, dtype="float32") /* ty=Tensor[(15, 11, 11), float32] */;
    %1895 = reshape(%1894, newshape=[15, 11, 11]) /* ty=Tensor[(15, 11, 11), float32] */;
    %1896 = @func_4824(%1895) /* ty=Tensor[(15, 11, 11), float32] */;
    (%1893, %1896)
  };
  %1897() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */
}

def @func_24452() -> (Tensor[(7, 3, 16), float32],) {
  @func_24450() /* ty=(Tensor[(7, 3, 16), float32],) */
}

def @func_25201() -> Tensor[(15, 11, 11), float32] {
  @func_13045() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_7570() -> Tensor[(15, 11, 11), bool] {
  %1898 = @func_5198() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %1898.0
}

def @func_24772() -> Tensor[(15, 11, 11), bool] {
  @func_24770() /* ty=Tensor[(15, 11, 11), bool] */
}

def @func_7333() -> Tensor[(15, 11, 11), float32] {
  @func_7331() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_17531() -> (Tensor[(15, 11, 11), float32],) {
  %1899 = @func_8023() /* ty=(Tensor[(7, 3, 16), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(1, 126), float64], Tensor[(11, 14, 13), float32], Tensor[(2002), float32]) */;
  %1900 = %1899.1;
  (%1900,)
}

def @func_17203() -> Tensor[(15, 11, 11), float32] {
  @func_17201() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_22664() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  %1901 = @func_8380() /* ty=Tensor[(15, 11, 11), float32] */;
  %1902 = @func_21650() /* ty=Tensor[(15, 11, 11), float32] */;
  (%1901, %1902)
}

def @func_5200() -> (Tensor[(15, 11, 11), bool],) {
  @func_5198() /* ty=(Tensor[(15, 11, 11), bool],) */
}

def @func_24889() -> (Tensor[(15, 11, 11), float32],) {
  %1903 = @func_10639() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) */;
  %1904 = %1903.1;
  (%1904,)
}

def @func_25394() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(792), float64], Tensor[(15, 11, 11), bool]) {
  @func_25392() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(792), float64], Tensor[(15, 11, 11), bool]) */
}

def @func_9680() -> (Tensor[(15, 11, 11), bool],) {
  @func_9678() /* ty=(Tensor[(15, 11, 11), bool],) */
}

def @func_12017() -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32]) {
  %1905 = @func_9296() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %1906 = @func_6394() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
  %1907 = %1905.0;
  %1908 = %1906.1;
  (%1907, %1908)
}

def @func_11633(%var_11631: Tensor[(4, 126), float64], %var_11632: Tensor[(15, 126), float64]) -> (Tensor[(15, 11, 11), float32], Tensor[(4, 126), bool], Tensor[(1, 14, 9), float64], Tensor[(15, 126), bool], Tensor[(15, 126), float32]) {
  @func_11629(%var_11631, %var_11632) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(4, 126), bool], Tensor[(1, 14, 9), float64], Tensor[(15, 126), bool], Tensor[(15, 126), float32]) */
}

def @func_3461() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) {
  %1909 = @func_3322() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %1910 = @func_3074() /* ty=Tensor[(15, 11, 11), float32] */;
  %1911 = %1909.0;
  (%1910, %1911)
}

def @func_3322() -> (Tensor[(15, 11, 11), bool],) {
  %1912 = @func_2900() /* ty=Tensor[(15, 11, 11), float32] */;
  %1913 = cast(meta[relay.Constant][60] /* ty=Tensor[(15, 11, 11), float32] */, dtype="bool") /* ty=Tensor[(15, 11, 11), bool] */;
  %1914 = shape_of(%1912, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1915 = cast(%1912, dtype="bool") /* ty=Tensor[(15, 11, 11), bool] */;
  %1916 = dyn.reshape(%1913, %1914, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1917 = logical_and(%1915, %1916) /* ty=Tensor[(15, 11, 11), bool] */;
  (%1917,)
}

def @func_22220() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  @func_22218() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */
}

def @func_7656() -> Tensor[(15, 11, 11), float32] {
  %1918 = fn () -> Tensor[(15, 11, 11), float32] {
    @func_7214() /* ty=Tensor[(15, 11, 11), float32] */
  };
  %1918() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_21076(%var_21074: Tensor[(21, 6), float64]) -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(21, 6), float64], Tensor[(7, 3, 16), int8]) {
  @func_21073(%var_21074) /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(21, 6), float64], Tensor[(7, 3, 16), int8]) */
}

def @func_6350() -> (Tensor[(15, 11, 11), float32],) {
  %1920 = fn () -> (Tensor[(15, 11, 11), float32],) {
    %1919 = @func_2995() /* ty=Tensor[(15, 11, 11), float32] */;
    (%1919,)
  };
  %1920() /* ty=(Tensor[(15, 11, 11), float32],) */
}

def @func_19281() -> (Tensor[(15, 11, 11), bool],) {
  %1923 = fn () -> (Tensor[(15, 11, 11), bool],) {
    %1921 = @func_15932() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool]) */;
    %1922 = %1921.0;
    (%1922,)
  };
  %1923() /* ty=(Tensor[(15, 11, 11), bool],) */
}

def @func_24518() -> Tensor[(320), float32] {
  %1924 = @func_4607() /* ty=(Tensor[(7, 3, 16), int8], Tensor[(15, 11, 11), float32], Tensor[(1, 126), float64], Tensor[(7, 3, 16), int8], Tensor[(16, 5, 4), float32], Tensor[(320), float32]) */;
  %1924.5
}

def @func_13220() -> (Tensor[(15, 11, 11), float32],) {
  %1927 = fn () -> (Tensor[(15, 11, 11), float32],) {
    %1925 = @func_7642() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
    %1926 = %1925.0;
    (%1926,)
  };
  %1927() /* ty=(Tensor[(15, 11, 11), float32],) */
}

def @func_15243() -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool]) {
  @func_15241() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool]) */
}

def @func_25311() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) {
  @func_25309() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */
}

def @func_20683() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(6, 5, 3), bool], Tensor[(15, 11, 11), float32]) {
  %1940 = fn () -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(6, 5, 3), bool], Tensor[(15, 11, 11), float32]) {
    %1928 = @func_12594() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) */;
    %1929 = @func_15241() /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), bool]) */;
    %1930 = @func_19438() /* ty=Tensor[(6, 5, 3), float64] */;
    %1931 = cast(meta[relay.Constant][61] /* ty=Tensor[(6, 5, 3), float64] */, dtype="bool") /* ty=Tensor[(6, 5, 3), bool] */;
    %1932 = shape_of(%1930, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1933 = cast(%1930, dtype="bool") /* ty=Tensor[(6, 5, 3), bool] */;
    %1934 = dyn.reshape(%1931, %1932, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1935 = @func_19829() /* ty=(Tensor[(15, 11, 11), float64], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32]) */;
    %1936 = %1928.0;
    %1937 = %1929.0;
    %1938 = equal(%1933, %1934) /* ty=Tensor[(6, 5, 3), bool] */;
    %1939 = %1935.3;
    (%1936, %1937, %1938, %1939)
  };
  %1940() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool], Tensor[(6, 5, 3), bool], Tensor[(15, 11, 11), float32]) */
}

def @func_5670(%var_5666: Tensor[(2, 1, 15), float32]) -> Tensor[(2, 1, 15), float32] {
  %1941 = cast(%var_5666, dtype="float32") /* ty=Tensor[(2, 1, 15), float32] */;
  atanh(%1941) /* ty=Tensor[(2, 1, 15), float32] */
}

def @func_15818() -> (Tensor[(7, 3, 16), float64],) {
  %1944 = fn () -> (Tensor[(7, 3, 16), float64],) {
    %1942 = @func_15054() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float32], Tensor[(7, 3, 16), float64]) */;
    %1943 = %1942.2;
    (%1943,)
  };
  %1944() /* ty=(Tensor[(7, 3, 16), float64],) */
}

def @func_15440(%var_15439: Tensor[(8, 15, 15), float64]) -> Tensor[(8, 15, 15), float64] {
  %1946 = fn (%var_15421: Tensor[(8, 15, 15), float64]) -> Tensor[(8, 15, 15), float64] {
    %1945 = cast(%var_15421, dtype="float64") /* ty=Tensor[(8, 15, 15), float64] */;
    log2(%1945) /* ty=Tensor[(8, 15, 15), float64] */
  };
  %1946(%var_15439) /* ty=Tensor[(8, 15, 15), float64] */
}

def @func_15034() -> (Tensor[(15, 11, 11), float32],) {
  %1949 = fn () -> (Tensor[(15, 11, 11), float32],) {
    %1947 = @func_7614() /* ty=(Tensor[(15, 11, 11), float32],) */;
    %1948 = %1947.0;
    (%1948,)
  };
  %1949() /* ty=(Tensor[(15, 11, 11), float32],) */
}

def @func_3260(%var_3258: Tensor[(16, 5, 4), float32], %var_3259: Tensor[(16, 5, 4), float32]) -> Tensor[(16, 5, 4), float32] {
  %1954 = fn (%var_3251: Tensor[(16, 5, 4), float32], %var_3252: Tensor[(16, 5, 4), float32]) -> Tensor[(16, 5, 4), float32] {
    %1950 = cast(%var_3252, dtype="float32") /* ty=Tensor[(16, 5, 4), float32] */;
    %1951 = shape_of(%var_3251, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1952 = cast(%var_3251, dtype="float32") /* ty=Tensor[(16, 5, 4), float32] */;
    %1953 = dyn.reshape(%1950, %1951, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    multiply(%1952, %1953) /* ty=Tensor[(16, 5, 4), float32] */
  };
  %1954(%var_3258, %var_3259) /* ty=Tensor[(16, 5, 4), float32] */
}

def @func_17894() -> Tensor[(90), uint64] {
  %1955 = @func_9213() /* ty=(Tensor[(90), uint64], Tensor[(15, 11, 11), float32]) */;
  %1955.0
}

def @func_17201() -> Tensor[(15, 11, 11), float32] {
  %1956 = @func_12932() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), float64]) */;
  %1956.0
}

def @func_15419(%var_15417: Tensor[(624), float32]) -> (Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], float32, Tensor[(624), float32], Tensor[(13, 4, 13), float32], Tensor[(8, 13, 6), float64]) {
  @func_15416(%var_15417) /* ty=(Tensor[(15, 11, 11), bool], Tensor[(15, 11, 11), float32], float32, Tensor[(624), float32], Tensor[(13, 4, 13), float32], Tensor[(8, 13, 6), float64]) */
}

def @func_12029() -> (Tensor[(15, 11, 11), float32],) {
  %1957 = @func_9487() /* ty=Tensor[(15, 11, 11), float32] */;
  (%1957,)
}

def @func_18740(%var_18736: Tensor[(192), float32]) -> (Tensor[(15, 11, 11), float32], Tensor[(8, 8, 3), float32], Tensor[(192), float32]) {
  %1958 = @func_3461() /* ty=(Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) */;
  %1959 = cast(%var_18736, dtype="float32") /* ty=Tensor[(192), float32] */;
  %1960 = reshape(%1959, newshape=[8, 8, 3]) /* ty=Tensor[(8, 8, 3), float32] */;
  %1961 = @func_12910(%1960) /* ty=(Tensor[(8, 8, 3), float32],) */;
  %1962 = %1958.0;
  %1963 = %1961.0;
  (%1962, %1963, %var_18736)
}

def @func_3666() -> Tensor[(15, 11, 11), float32] {
  %1965 = fn () -> Tensor[(15, 11, 11), float32] {
    %1964 = @func_3160() /* ty=(Tensor[(15, 11, 11), float32],) */;
    %1964.0
  };
  %1965() /* ty=Tensor[(15, 11, 11), float32] */
}

def @func_6150() -> (Tensor[(15, 11, 11), bool],) {
  @func_6148() /* ty=(Tensor[(15, 11, 11), bool],) */
}

def @func_9874() -> (Tensor[(15, 11, 11), float32], Tensor[(15, 11, 11), bool]) {
  %1966 = @func_5896() /* ty=(Tensor[(15, 11, 11), bool],) */;
  %1967 = @func_7655() /* ty=Tensor[(15, 11, 11), float32] */;
  %1968 = %1966.0;
  (%1967, %1968)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen992/build/output.py", line 7825, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  79: TVMFuncCall
  78: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  77: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  76: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  75: tvm::transform::Pass::operator()(tvm::IRModule) const
  74: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  73: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  72: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  71: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  70: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  69: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [15:18:30] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int


import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_172 = relay.var("var_172", dtype = "float32", shape = (11, 14, 10))#candidate|172|(11, 14, 10)|var|float32
var_173 = relay.var("var_173", dtype = "float32", shape = (11, 14, 10))#candidate|173|(11, 14, 10)|var|float32
bop_174 = relay.equal(var_172.astype('bool'), relay.reshape(var_173.astype('bool'), relay.shape_of(var_172))) # shape=(11, 14, 10)
bop_197 = relay.less_equal(var_173.astype('bool'), relay.reshape(bop_174.astype('bool'), relay.shape_of(var_173))) # shape=(11, 14, 10)
output = relay.Tuple([bop_197,])
output2 = relay.Tuple([bop_197,])
func_217 = relay.Function([var_172,var_173,], output)
mod['func_217'] = func_217
mod = relay.transform.InferType()(mod)
mutated_mod['func_217'] = func_217
mutated_mod = relay.transform.InferType()(mutated_mod)
func_217_call = mutated_mod.get_global_var('func_217')
var_219 = relay.var("var_219", dtype = "float32", shape = (11, 14, 10))#candidate|219|(11, 14, 10)|var|float32
var_220 = relay.var("var_220", dtype = "float32", shape = (11, 14, 10))#candidate|220|(11, 14, 10)|var|float32
call_218 = func_217_call(var_219,var_220,)
output = call_218
func_221 = relay.Function([var_219,var_220,], output)
mutated_mod['func_221'] = func_221
mutated_mod = relay.transform.InferType()(mutated_mod)
var_297 = relay.var("var_297", dtype = "uint16", shape = (16, 3, 3))#candidate|297|(16, 3, 3)|var|uint16
var_298 = relay.var("var_298", dtype = "uint16", shape = (16, 3, 3))#candidate|298|(16, 3, 3)|var|uint16
bop_299 = relay.greater(var_297.astype('bool'), relay.reshape(var_298.astype('bool'), relay.shape_of(var_297))) # shape=(16, 3, 3)
func_217_call = mod.get_global_var('func_217')
func_221_call = mutated_mod.get_global_var('func_221')
var_307 = relay.var("var_307", dtype = "float32", shape = (1540,))#candidate|307|(1540,)|var|float32
call_306 = relay.TupleGetItem(func_217_call(relay.reshape(var_307.astype('float32'), [11, 14, 10]), relay.reshape(var_307.astype('float32'), [11, 14, 10]), ), 0)
call_308 = relay.TupleGetItem(func_221_call(relay.reshape(var_307.astype('float32'), [11, 14, 10]), relay.reshape(var_307.astype('float32'), [11, 14, 10]), ), 0)
func_217_call = mod.get_global_var('func_217')
func_221_call = mutated_mod.get_global_var('func_221')
call_312 = relay.TupleGetItem(func_217_call(relay.reshape(call_306.astype('float32'), [11, 14, 10]), relay.reshape(call_306.astype('float32'), [11, 14, 10]), ), 0)
call_313 = relay.TupleGetItem(func_221_call(relay.reshape(call_306.astype('float32'), [11, 14, 10]), relay.reshape(call_306.astype('float32'), [11, 14, 10]), ), 0)
bop_319 = relay.logical_and(call_312.astype('bool'), relay.reshape(var_307.astype('bool'), relay.shape_of(call_312))) # shape=(11, 14, 10)
bop_322 = relay.logical_and(call_313.astype('bool'), relay.reshape(var_307.astype('bool'), relay.shape_of(call_313))) # shape=(11, 14, 10)
var_323 = relay.var("var_323", dtype = "bool", shape = (11, 14, 10))#candidate|323|(11, 14, 10)|var|bool
bop_324 = relay.floor_mod(bop_319.astype('float32'), relay.reshape(var_323.astype('float32'), relay.shape_of(bop_319))) # shape=(11, 14, 10)
bop_327 = relay.floor_mod(bop_322.astype('float32'), relay.reshape(var_323.astype('float32'), relay.shape_of(bop_322))) # shape=(11, 14, 10)
output = relay.Tuple([bop_299,call_306,bop_324,])
output2 = relay.Tuple([bop_299,call_308,bop_327,])
func_328 = relay.Function([var_297,var_298,var_307,var_323,], output)
mod['func_328'] = func_328
mod = relay.transform.InferType()(mod)
var_329 = relay.var("var_329", dtype = "uint16", shape = (16, 3, 3))#candidate|329|(16, 3, 3)|var|uint16
var_330 = relay.var("var_330", dtype = "uint16", shape = (16, 3, 3))#candidate|330|(16, 3, 3)|var|uint16
var_331 = relay.var("var_331", dtype = "float32", shape = (1540,))#candidate|331|(1540,)|var|float32
var_332 = relay.var("var_332", dtype = "bool", shape = (11, 14, 10))#candidate|332|(11, 14, 10)|var|bool
output = func_328(var_329,var_330,var_331,var_332,)
func_333 = relay.Function([var_329,var_330,var_331,var_332,], output)
mutated_mod['func_333'] = func_333
mutated_mod = relay.transform.InferType()(mutated_mod)
var_455 = relay.var("var_455", dtype = "int16", shape = (6, 5, 9))#candidate|455|(6, 5, 9)|var|int16
var_456 = relay.var("var_456", dtype = "int16", shape = (6, 5, 9))#candidate|456|(6, 5, 9)|var|int16
bop_457 = relay.subtract(var_455.astype('int16'), relay.reshape(var_456.astype('int16'), relay.shape_of(var_455))) # shape=(6, 5, 9)
uop_460 = relay.atanh(var_455.astype('float32')) # shape=(6, 5, 9)
bop_467 = relay.left_shift(uop_460.astype('uint16'), relay.reshape(var_456.astype('uint16'), relay.shape_of(uop_460))) # shape=(6, 5, 9)
output = relay.Tuple([bop_457,bop_467,])
output2 = relay.Tuple([bop_457,bop_467,])
func_470 = relay.Function([var_455,var_456,], output)
mod['func_470'] = func_470
mod = relay.transform.InferType()(mod)
mutated_mod['func_470'] = func_470
mutated_mod = relay.transform.InferType()(mutated_mod)
func_470_call = mutated_mod.get_global_var('func_470')
var_472 = relay.var("var_472", dtype = "int16", shape = (6, 5, 9))#candidate|472|(6, 5, 9)|var|int16
var_473 = relay.var("var_473", dtype = "int16", shape = (6, 5, 9))#candidate|473|(6, 5, 9)|var|int16
call_471 = func_470_call(var_472,var_473,)
output = call_471
func_474 = relay.Function([var_472,var_473,], output)
mutated_mod['func_474'] = func_474
mutated_mod = relay.transform.InferType()(mutated_mod)
var_583 = relay.var("var_583", dtype = "float64", shape = (1, 15, 15))#candidate|583|(1, 15, 15)|var|float64
uop_584 = relay.log(var_583.astype('float64')) # shape=(1, 15, 15)
uop_588 = relay.sigmoid(uop_584.astype('float32')) # shape=(1, 15, 15)
func_470_call = mod.get_global_var('func_470')
func_474_call = mutated_mod.get_global_var('func_474')
var_604 = relay.var("var_604", dtype = "int16", shape = (270,))#candidate|604|(270,)|var|int16
call_603 = relay.TupleGetItem(func_470_call(relay.reshape(var_604.astype('int16'), [6, 5, 9]), relay.reshape(var_604.astype('int16'), [6, 5, 9]), ), 1)
call_605 = relay.TupleGetItem(func_474_call(relay.reshape(var_604.astype('int16'), [6, 5, 9]), relay.reshape(var_604.astype('int16'), [6, 5, 9]), ), 1)
func_217_call = mod.get_global_var('func_217')
func_221_call = mutated_mod.get_global_var('func_221')
const_610 = relay.const([-7.486589,-6.604177,7.358726,-4.711034,-9.477241,3.475120,-2.071993,-5.847863,-0.428465,-7.204539,9.342036,0.202641,-3.177608,-4.850761,-6.115882,-4.193128,3.567759,5.790497,2.365795,-3.082677,-3.387147,4.669896,3.652695,0.198407,7.539524,5.373430,-7.216089,7.166617,-1.264056,-8.164256,9.810219,-8.976212,1.257330,7.029962,0.899275,-6.193102,5.013267,-1.131076,9.523192,-4.690832,2.740513,5.079404,-6.775935,-7.018400,2.888851,-5.281304,-0.578326,7.397999,-8.225641,-8.863331,-9.526761,7.730388,9.307550,-6.414464,4.654249,7.822244,-8.366087,-6.023384,2.241652,9.129611,7.310132,4.713272,-3.647400,4.752708,5.173573,-7.682620,-6.350709,9.980321,-7.488510,4.058695,-0.301293,-8.637038,9.455169,-2.845200,-5.750155,9.363875,5.712232,8.267174,2.405175,-5.154755,-4.773675,-0.025467,-7.815031,-3.596833,8.384942,9.427290,-4.874002,-6.517462,-0.495241,-5.443447,3.760836,3.008657,-8.670900,-2.979629,7.643268,-3.332702,-2.610468,3.119554,-6.806247,7.381596,2.158139,-9.578058,-3.985751,5.952674,2.633346,3.677572,-2.718314,6.984854,3.951904,-2.922372,-8.491346,1.765538,-8.877013,6.649579,-6.859744,-2.722839,8.248347,-5.442247,-4.037619,7.667999,0.568820,-2.890829,8.975873,2.711334,1.094641,2.058744,-4.969409,-5.448850,5.800490,-5.120846,-9.283609,2.882486,6.090297,-7.129130,-9.154079,4.021992,-7.213742,0.706585,5.763376,8.261101,-7.913724,-4.730026,2.070361,7.883163,-0.062205,-4.121347,3.725092,8.115749,3.844890,-0.456754,6.984730,-3.421023,0.312394,0.256047,-8.237111,4.781967,3.845656,4.165613,0.786951,-3.299088,-4.920985,-5.272417,-0.542814,-4.726540,9.103833,5.581564,-6.684075,6.923089,1.456816,-4.668747,0.130725,8.456502,0.625714,0.364887,6.039538,0.257762,-7.311602,7.306283,1.812967,1.360377,-5.863860,6.175988,-3.825385,-1.677640,3.051841,4.017973,3.939569,0.480821,9.629388,2.201154,-3.824067,0.337735,-1.963954,-8.093960,-1.931585,5.134163,-5.152493,-0.483677,1.313152,5.901593,8.457491,9.645717,7.790629,-6.539057,0.452169,4.267529,-6.342784,-6.821086,-6.282158,-5.105085,-3.875895,5.748399,-3.706867,9.333429,9.442208,-8.419037,5.903795,5.820110,-3.888977,-6.149815,6.076811,-3.215190,-1.603859,-8.205915,1.528787,2.906239,-1.771350,-0.995797,-0.422042,-8.573152,-1.840161,1.154241,-0.510307,-0.428974,-0.070361,-5.891013,1.159002,0.323526,-3.054378,-8.495875,-7.808920,0.667506,-6.656893,8.779684,-7.057810,-4.972056,-5.501336,-8.208353,-5.699400,5.267547,1.017617,-6.511360,-3.854524,-2.070238,-3.499909,-2.504725,1.258485,5.463626,-1.729914,-8.315908,7.606838,4.877261,-2.291573,-5.553953,7.844844,6.434338,-1.939191,3.886902,8.347238,4.161627,-8.576280,-5.454777,7.958554,9.732402,-7.648328,-3.162968,6.742764,6.163714,-3.064271,-2.625196,-3.671498,-6.068009,-4.586291,9.852980,-5.316324,4.812087,7.988658,-5.427573,5.182179,-2.817274,8.780013,2.120264,-7.904002,2.634639,3.114602,-7.297353,2.706558,-3.099409,-3.234101,-6.273154,-8.117888,3.081425,6.834889,-9.060621,-0.001338,8.986820,-7.316287,-5.852131,6.109250,8.597117,2.787519,-6.423596,-7.023220,-6.166274,2.019215,2.203036,-1.381510,4.495203,-5.167505,7.942144,-2.713086,1.201029,6.842151,4.520696,2.704761,0.032597,9.565911,0.446931,-7.606311,-0.976483,-7.058908,7.573795,7.853834,0.620158,8.400486,-3.170572,1.737386,-8.729242,2.088566,1.911989,-0.557529,2.793823,3.015240,6.116571,9.809215,5.669680,-9.611240,-6.917671,4.225084,9.956437,-9.618149,-9.743074,3.785139,9.723080,-9.850157,2.105577,1.402329,-8.365351,-2.229057,0.320902,-6.126103,9.487563,5.466304,-1.192984,0.217579,1.315975,5.560486,1.903504,-8.578986,8.637584,-6.043347,0.439161,9.411747,-5.801375,-4.476122,8.124833,-1.616130,6.653614,9.048991,-7.804551,4.602582,-5.787485,5.902370,-6.194616,-1.928073,-1.870094,-8.043775,5.095280,-6.767594,0.260763,8.499605,6.437548,-5.280909,4.422293,-8.443949,-9.773984,-6.062449,-3.752248,7.348839,7.421979,-4.486242,-3.521664,-8.261636,-9.833390,0.550140,2.994406,8.288655,-3.601023,2.305927,4.963394,8.557499,3.991193,-5.641603,2.081827,-7.919021,-1.803509,-4.985537,-9.125747,-3.619069,5.698574,-8.645639,-1.791261,1.428348,7.234762,-2.389952,-8.441921,6.529661,3.203531,2.091858,5.309972,-4.805065,-2.185116,-0.554290,5.926842,-2.809255,-6.688343,0.777495,-6.722670,9.900114,6.761927,-9.453887,1.982098,1.933721,5.444281,3.374200,9.988683,-5.840267,-5.693082,-1.798209,7.131234,7.861640,9.309948,-0.044189,3.002053,-7.906305,-8.908219,4.219208,-2.206868,-3.090213,6.212728,-3.079215,2.497642,4.446188,2.681709,9.731570,-2.487667,-7.319834,4.499340,1.034616,-8.699680,5.334004,-5.014316,-0.428723,-0.083424,-2.546296,-4.068447,-8.737122,-3.510168,3.031728,5.810418,-4.599867,5.030852,1.319509,-9.829035,-7.249427,-8.443394,5.073667,-3.316973,3.363766,-8.655199,-9.601054,-8.463855,1.622955,-3.828801,-5.519777,8.387472,8.006494,7.035012,-6.778915,1.084175,-4.606143,-2.848753,-4.356730,5.323716,8.740663,-3.737910,-9.916460,-0.550276,4.865442,8.610589,-2.606840,-9.208650,0.111891,2.303975,1.121203,-4.375251,-4.458917,5.328186,7.980893,0.520050,9.758360,7.395070,-1.718096,5.149149,-1.944090,-0.998878,2.698189,4.338160,-0.330246,-5.642543,6.290842,-8.915361,-8.601557,8.163724,-8.305851,-7.590762,-3.949501,-4.677852,-6.931744,-7.560232,-3.142737,6.186754,9.493398,-2.391578,7.738935,-5.875312,-4.959693,7.955420,-7.789807,-0.088809,7.613574,-2.269917,-7.015043,-3.411895,-9.327962,-2.182021,2.798872,4.255577,-0.941918,1.178783,-0.177105,-7.070950,-1.821574,1.207767,-0.204812,4.774409,3.425273,2.012203,-9.661732,-7.864391,-0.987092,8.143921,-8.474378,4.421792,1.774315,9.755087,-8.377474,-9.385182,6.286603,7.468105,2.494507,0.506780,3.061507,4.369482,-0.128781,-6.659850,-9.703537,0.950078,-9.279598,7.646796,0.793413,-2.277705,-0.180554,-1.359310,-5.118461,-5.783762,-2.777917,-3.257883,-8.741064,-1.005822,1.902773,-9.675677,-4.769291,4.614084,-7.808522,-4.668698,5.272535,4.318885,5.220566,4.027856,7.985919,-6.072401,6.246223,2.026685,-0.663256,-3.048241,0.594214,3.006619,-5.046361,-3.572089,0.397321,-0.139414,3.624734,-8.732696,1.314995,7.049269,0.291065,2.424046,-1.632423,0.417741,-8.652170,6.150207,-2.604516,4.690029,4.667776,4.571846,7.224495,5.880645,5.319779,1.129126,2.137510,5.876477,-5.043607,8.036460,-7.912398,7.676924,-4.644322,-9.985120,3.420902,-3.776384,1.804288,5.743436,7.744362,-5.006497,4.368416,-0.008733,-8.647561,5.128277,-3.706271,8.768616,1.573002,0.677149,4.904488,-0.917005,1.191433,5.987371,-0.065894,3.640160,1.950468,-0.766330,-0.558154,5.525812,0.855132,4.712597,8.006017,-6.593490,-1.582146,8.221789,8.675317,-0.369441,-7.357776,6.370522,4.876467,-3.139176,-6.067420,7.025354,4.499925,0.861168,8.657032,-1.715727,-3.841147,-7.498337,-7.799107,-0.919673,2.326907,3.296028,5.782638,9.793814,9.452998,5.970411,-5.894384,-3.680016,-3.002151,-7.263391,5.830760,-5.115402,0.159907,-7.505940,-5.498955,4.424229,7.455540,7.460118,-1.958419,7.818738,5.646122,1.626689,9.781800,5.535133,-5.543214,-3.512443,8.334179,0.888363,7.400255,-3.611328,-6.101778,5.726519,-2.458351,-0.243787,2.394844,1.052967,1.446606,1.468741,-6.652905,-1.062319,-4.604969,-2.545414,7.092688,3.829313,4.145696,5.440155,9.398000,-0.637929,7.780665,-2.636791,-9.171108,7.698008,5.512280,5.062888,-7.283560,-0.032319,-4.891008,-3.000005,-1.327088,-4.088358,7.541995,0.371822,-8.032290,1.784473,7.866414,5.420450,2.521967,4.309991,0.919819,-7.111184,-2.569706,-7.139240,-2.417224,-8.862064,-2.281783,-4.410366,-0.418928,8.846924,2.972743,5.799954,-6.782313,6.847050,0.889199,-0.516192,0.725845,-8.782697,4.925136,-4.229130,3.191301,-9.121314,6.893445,-9.108387,8.962546,-5.190598,-2.264773,7.156398,-9.941768,-6.226280,9.909292,-2.699694,2.973376,-8.818180,-5.649125,-3.940277,2.449467,4.294492,-1.675827,8.427641,6.334772,-9.429111,0.142393,1.842337,-2.047432,0.111906,-2.273501,-7.954555,8.853667,5.939486,1.142472,5.551463,-5.988141,5.315149,-2.535965,-5.193750,5.086383,1.506372,-0.009664,-9.763506,-3.098397,-2.609172,-4.484838,2.676000,5.670923,4.003529,-8.038719,-8.858886,3.804603,8.902037,-3.205454,-0.565053,8.338592,-8.283873,-8.409382,-3.183015,-1.712118,3.382632,-5.292183,-6.840128,1.993073,-7.033632,3.765510,9.254964,0.956104,-2.694760,-3.325818,1.139105,1.668915,-2.820758,-3.561587,-2.853323,5.593271,7.576657,-5.829143,-2.496538,8.348408,-6.364997,5.331565,-1.110334,-2.490942,-6.858687,3.625091,-7.530127,8.320536,-8.352295,-4.881786,-5.551596,-8.455391,0.536462,-5.994873,1.851059,-1.816831,-9.922081,1.826948,-2.910908,7.142131,-1.172033,-1.801819,5.732638,0.486634,-4.646802,8.810040,-5.654622,-1.364092,-1.781296,8.111264,6.640481,2.641095,1.323241,-6.957254,8.568233,-3.117515,-2.266924,-2.442043,-6.694435,2.228462,3.770376,9.802360,-0.640767,7.808261,-5.497524,-5.918096,9.400888,8.030279,-1.109143,-4.542891,-9.080386,-7.846439,-8.199682,-4.584458,-7.988284,8.642636,-9.734524,3.420706,-0.229400,-8.945835,3.793196,-7.547339,-9.927083,4.367995,5.608514,-0.791235,-2.842281,-5.235484,-0.032720,0.341484,-2.102251,-2.041547,-3.839738,-0.996389,0.463155,0.354936,5.145385,8.925714,-0.435706,2.634364,-1.746161,1.780495,-5.530164,9.214563,-0.960582,1.418888,2.715795,-3.881487,-1.708727,4.167851,0.549584,-8.945869,-7.887207,-7.872872,5.722581,1.954352,-6.707587,-9.446398,-7.047615,7.625850,0.584508,-3.989545,-9.463050,-5.458013,2.098359,-5.287006,-4.461110,2.207863,-3.482486,6.782483,1.010819,-4.567337,8.412267,-4.422656,-8.704884,0.762349,9.710028,7.229353,-2.607177,-7.608229,8.655485,-0.139131,0.629340,-4.568830,1.123436,3.899249,-5.718664,-6.753215,6.627819,-8.385000,-1.806886,7.417367,1.114247,-2.929720,-9.596128,5.175629,4.968375,8.030527,3.157886,7.864477,-7.894446,-1.688179,-5.130568,-6.276963,0.661190,8.874137,-6.963416,3.706776,7.736664,0.219194,-0.781566,0.748423,-0.555437,6.120501,5.854409,8.896959,4.539644,-9.235114,-6.721136,2.303430,5.159846,-5.230303,4.423086,8.974606,4.267622,-3.337202,6.801956,5.750432,0.135012,-0.442560,3.050027,-3.153277,2.961813,-6.240123,2.444201,1.512879,8.243705,8.167341,-6.813247,1.066109,8.206168,4.868662,-8.776218,0.370169,0.088432,-9.550014,3.682470,-7.247330,5.955527,-0.904621,-3.509713,-4.574150,6.773517,4.570556,-0.734517,6.212918,-7.523194,5.451033,-7.668886,-5.694471,-1.203480,-9.321029,0.636869,-7.432182,-2.529904,-8.240185,-3.710894,-4.398158,-7.531961,7.641142,-5.479553,-3.755802,-4.455276,1.079086,-6.649129,-7.543436,-3.411550,-5.607634,1.961228,5.650308,-8.508104,8.472403,-4.937768,-6.977993,6.023696,7.685081,2.750655,-3.507821,4.564525,-3.524310,-2.764895,-6.475645,8.550303,-3.812590,6.944528,-1.462496,7.858320,3.971702,4.185558,-4.676632,2.173694,1.596234,-3.318814,-1.466000,0.199366,0.318724,-3.280184,5.629928,4.844370,-8.585135,4.002903,-2.853607,-8.346228,-8.165238,6.525114,-9.193135,-0.415893,2.446132,-1.483036,9.109261,-7.329630,4.170606,-4.585635,6.569018,-5.207076,4.232516,-2.326258,8.210287,7.571770,6.482128,-3.589304,8.186788,9.086722,8.100879,3.309282,7.050181,-7.604321,-9.945951,9.641186,-5.181981,7.246155,7.524155,4.606420,8.695329,-9.233057,4.032091,-6.631424,-6.638252,-3.656634,7.048272,-5.157312,4.828553,6.894906,8.337961,5.388173,0.858473,9.916621,7.809319,3.884699,5.136762,4.436452,-3.299573,-5.392751,6.492371,8.839325,-5.644518,7.496680,-3.319720,4.030317,-7.790129,8.190150,0.539012,-9.618844,6.639217,8.408681,-1.533192,2.435713,6.136086,9.078454,-6.255952,6.885515,-2.378653,8.900182,-1.747059,-9.787579,8.873293,-9.457186,4.216699,0.825589,-5.188587,5.167840,7.397856,7.653789,-6.507825,8.151194,1.093480,7.887503,-9.665621,-6.826900,2.318083,1.439647,-6.833160,-7.958805,-1.583936,-6.081622,-9.781820,4.281538,5.092041,-0.470731,0.786800,-3.133547,4.615203,-7.198826,-3.043753,-9.967609,-5.755040,4.384942,7.670300,-7.397062,4.845074,-8.435404,-4.347083,-6.414259,-0.405082,-4.132512,-8.940340,9.931227,-0.536492,0.115555,-4.494528,9.167279,2.709861,-0.721328,-0.877495,2.081358,1.479839,3.507244,3.216459,0.730298,8.293068,-4.096886,2.800320,5.101705,2.193476,-2.752370,-4.079044,-8.563860,-2.291716,-0.847306,3.228076,8.790320,4.607715,8.592173,-1.900736,-6.002709,-1.326445,1.081985,-5.263193,6.261503,-8.120986,-4.373967,4.659679,-4.321480,7.956359,-8.607124,-3.124937,9.120916,4.806137,3.081373,-5.237830,7.947347,-1.092186,-5.498171,7.784721,-3.220384,2.853253,-2.088977,-7.613477,7.240894,6.758490,-2.374928,0.208625,4.227956,-9.783582,-5.382199,-7.286781,2.444154,-6.468701,-3.793640,-1.774055,1.856347,1.219288,-0.206920,8.580598,5.790920,-8.146859,-5.178347,4.635392,-5.891553,-6.953982,-2.834176,-3.793574,0.545045,3.824382,-5.722896,4.503454,-7.834931,2.393056,-4.898782,-7.589002,7.516255,8.820498,-6.174141,4.280865,5.856025,1.172891,-5.865702,4.268290,-9.916616,4.746502,-8.381486,7.239730,7.192662,-7.396400,8.323498,3.994216,9.473187,-1.090776,-1.862751,-7.935882,-5.196716,0.419063,9.042598,-6.313565,-5.142131,-9.541008,-9.857021,9.887579,-8.714157,0.046152,-0.783036,-1.312489,-0.903806,5.680981,-0.411478,-6.709758,9.331858,0.447148,-5.356334,-9.027289,-2.640645,-8.611777,-7.636180,-3.145715,0.722762,-7.700595,0.086272,4.250078,-8.039979,-9.932175,-0.789171,2.876009,-1.343585,-8.209236,-9.600296,6.001196,5.679242,-5.716724,2.077206,-0.841608,-6.316771,-2.880796,2.365897,3.832844,-8.918393,-2.169538,-1.725300,-5.530267,-8.025572,-4.479778,-9.943319,3.804423,9.687313,6.930987,8.208295,5.179494,3.727571,7.029150,8.014822,-5.988823,-7.882128,-8.075008,-5.276563,6.323248,9.285967,5.626399,-7.346209,1.264380,-3.876577,-2.466612,-8.604497,-1.673072,-1.576825,-2.443432,-6.162754,9.570500,8.366372,-4.139926,5.070046,-8.200924,7.099441,-5.630421,6.585890,2.334399,-6.185606,1.175757,9.108357,-7.754659,7.566005,4.166497,2.688283,-5.339028,-3.449106,-6.504281,-8.502945,-0.732702,3.495211,0.464460,-3.641416,-9.396398,3.313299,0.645391,2.721357,-0.044977,-4.440053,1.719859,-3.627072,-6.437978,-1.555445,-1.752795,7.683766,-4.801328,5.090742,8.610216,-5.973017,9.984930,8.801203,-9.161469,-8.187613,4.384895,-5.436014,3.631504,-9.834912,1.866630,-6.754607,-5.911931,-8.387225,-2.467061,-6.968338,4.806738,-2.194838,-8.404499,8.660428,-6.750008,3.092745,-9.482622,-2.830065,8.744517,8.170413,7.746655,-2.019298,8.679607,-6.999124,3.421244,-8.773193,3.383875,4.434000,-9.981842,-1.360265,-0.388761,0.230330,3.194035,-5.657611,-9.471359,2.111327,-9.511542,2.198664,-6.757738,6.262957,5.398701,-2.075576,-2.818267,-2.973898,-8.951795,-6.984078,4.678801,4.407105,6.002207,4.672592,1.795430,-6.356828,-1.251557,-6.179809,8.255030,-5.151966,1.147132,-4.648075,-9.393836,-5.430402,0.660093,-1.036767,-7.354101,-2.739951,3.656615,-5.917952,-8.760915,-4.505734,-3.850453,-9.573937,4.435458,-8.102517,3.661676,-4.216722,-3.454102,0.977119,0.357827,-0.267516,8.887607,-5.149823,-4.281315,-5.972868,2.920545,9.558741,0.841955,5.854720,7.034335,9.904223,-9.350668,-9.626285,-5.046848,4.241602], dtype = "float32")#candidate|610|(1540,)|const|float32
call_609 = relay.TupleGetItem(func_217_call(relay.reshape(const_610.astype('float32'), [11, 14, 10]), relay.reshape(const_610.astype('float32'), [11, 14, 10]), ), 0)
call_611 = relay.TupleGetItem(func_221_call(relay.reshape(const_610.astype('float32'), [11, 14, 10]), relay.reshape(const_610.astype('float32'), [11, 14, 10]), ), 0)
output = relay.Tuple([uop_588,call_603,var_604,call_609,const_610,])
output2 = relay.Tuple([uop_588,call_605,var_604,call_611,const_610,])
func_614 = relay.Function([var_583,var_604,], output)
mod['func_614'] = func_614
mod = relay.transform.InferType()(mod)
var_615 = relay.var("var_615", dtype = "float64", shape = (1, 15, 15))#candidate|615|(1, 15, 15)|var|float64
var_616 = relay.var("var_616", dtype = "int16", shape = (270,))#candidate|616|(270,)|var|int16
output = func_614(var_615,var_616,)
func_617 = relay.Function([var_615,var_616,], output)
mutated_mod['func_617'] = func_617
mutated_mod = relay.transform.InferType()(mutated_mod)
var_693 = relay.var("var_693", dtype = "int16", shape = (2, 13, 11))#candidate|693|(2, 13, 11)|var|int16
var_694 = relay.var("var_694", dtype = "int16", shape = (2, 13, 11))#candidate|694|(2, 13, 11)|var|int16
bop_695 = relay.less_equal(var_693.astype('bool'), relay.reshape(var_694.astype('bool'), relay.shape_of(var_693))) # shape=(2, 13, 11)
output = bop_695
output2 = bop_695
func_699 = relay.Function([var_693,var_694,], output)
mod['func_699'] = func_699
mod = relay.transform.InferType()(mod)
mutated_mod['func_699'] = func_699
mutated_mod = relay.transform.InferType()(mutated_mod)
func_699_call = mutated_mod.get_global_var('func_699')
var_701 = relay.var("var_701", dtype = "int16", shape = (2, 13, 11))#candidate|701|(2, 13, 11)|var|int16
var_702 = relay.var("var_702", dtype = "int16", shape = (2, 13, 11))#candidate|702|(2, 13, 11)|var|int16
call_700 = func_699_call(var_701,var_702,)
output = call_700
func_703 = relay.Function([var_701,var_702,], output)
mutated_mod['func_703'] = func_703
mutated_mod = relay.transform.InferType()(mutated_mod)
var_966 = relay.var("var_966", dtype = "float32", shape = (6, 1, 7))#candidate|966|(6, 1, 7)|var|float32
uop_967 = relay.rsqrt(var_966.astype('float32')) # shape=(6, 1, 7)
uop_971 = relay.log(uop_967.astype('float32')) # shape=(6, 1, 7)
func_328_call = mod.get_global_var('func_328')
func_333_call = mutated_mod.get_global_var('func_333')
const_980 = relay.const([[-4],[9],[-6],[8],[6],[10],[-6],[-4],[-3],[-7],[-5],[3],[1],[-6],[1],[-10],[-8],[2],[4],[9],[6],[1],[-4],[-10],[-3],[5],[5],[6],[3],[8],[3],[-10],[9],[-4],[4],[10],[-3],[-1],[5],[-1],[8],[8],[8],[-1],[7],[5],[-7],[10],[-7],[-8],[8],[-10],[-10],[9],[2],[-6],[9],[-6],[-8],[-8],[-6],[7],[-9],[1],[3],[-6],[9],[5],[9],[-5],[-5],[-3],[-4],[9],[-8],[9],[1],[-9],[-4],[6],[-2],[-10],[10],[-8],[-9],[-10],[-5],[9],[4],[1],[5],[7],[-5],[6],[-9],[-7],[-7],[-9],[2],[6],[4],[8],[-10],[9],[4],[-7],[-10],[-5],[-1],[2],[-3],[10],[-8],[7],[-10],[-3],[-10],[2],[-7],[8],[-10],[2],[-9],[5],[-10],[-1],[-8],[5],[2],[5],[-6],[6],[1],[-7],[-10],[-10],[10],[-10],[-9],[-1],[2],[3],[5],[-5]], dtype = "uint16")#candidate|980|(144, 1)|const|uint16
const_981 = relay.const([[-3.258969,-7.500376,-3.568344,0.721869,-9.125477,0.871826,-5.860536,-5.835768,-8.766674,8.632395],[2.540475,3.754067,9.596264,-8.676367,4.508607,3.403468,-1.550622,1.038364,-0.625569,5.844489],[5.104761,2.065570,2.247612,9.718991,4.423610,5.814824,-5.541378,-1.918698,8.943401,-0.224058],[7.789889,0.139546,6.248627,6.451560,2.332757,-6.385559,4.909952,-5.401219,3.696909,-3.506248],[-7.647522,1.458683,2.935735,-8.475457,4.434517,3.543664,6.770070,-6.142579,1.434565,-4.002812],[-3.673649,4.581364,-5.123204,-2.894370,-5.676309,1.603986,-6.473820,2.469108,-8.900639,-4.683998],[-3.484445,-2.780745,-4.092074,-2.011275,-8.992216,-7.104544,-1.866152,-6.494638,8.479457,-8.318159],[-1.928027,-6.234803,5.073669,-9.159481,-7.135565,5.526401,-4.787012,-5.768743,-4.041219,-7.615179],[6.289951,4.128509,-8.764172,3.636854,-7.839857,7.437684,3.723141,5.314590,-7.929118,-5.222851],[-1.425428,7.658720,0.008717,-6.712618,2.614234,0.937017,2.490920,-9.532658,-2.883435,-7.769397],[8.718314,1.712591,9.751287,3.513891,-6.725288,-0.796345,4.383280,6.158149,6.401955,-4.708888],[-2.804507,-4.667766,-1.815778,-4.497993,-1.242615,8.953515,-1.172646,-7.239777,5.954735,8.341270],[9.932684,2.862922,-9.190265,1.158591,-1.773475,-0.192613,4.711622,-3.655206,1.701815,4.952534],[6.727740,3.945345,1.078495,-9.894523,-3.371480,4.613584,9.274096,-1.106172,7.752392,-0.238080],[-2.308670,4.416574,2.267224,5.345108,-4.379755,-2.933503,-6.203597,3.053148,0.220015,-7.963569],[-8.699684,8.160351,-6.960834,4.592131,5.331828,9.818111,-8.729799,-5.245389,1.064765,-0.651227],[-5.781900,4.962570,-3.333036,-5.269362,-1.179220,6.053043,-6.507414,5.216388,8.080818,3.694873],[-3.295561,-1.153081,0.910209,-3.598840,-7.964015,-0.114160,0.672300,0.666600,-5.576330,7.121007],[5.444317,5.251161,2.128821,-6.084300,7.713165,3.136835,6.825475,-6.079264,-9.499341,1.059656],[8.622047,7.201241,2.673242,6.645279,7.869973,3.116410,9.331813,-2.882483,5.985591,0.844214],[-4.107826,-1.831606,-2.995943,-5.161043,5.757698,-3.848600,1.937604,5.150685,-8.890609,0.557548],[5.028790,-1.635774,7.166528,5.043682,-1.181181,-8.461676,2.086476,-2.962701,1.584721,0.603480],[-0.159180,-2.055493,0.406918,-4.245008,-3.829187,3.057777,-0.404002,-8.778214,4.318455,-2.637559],[0.046331,-9.372866,0.558347,-8.130585,-3.177738,2.505987,1.712489,-4.880905,8.341493,7.085224],[-2.187757,3.354870,-8.679602,2.239685,2.373624,8.598751,-5.086295,-3.690432,-6.222961,-7.060914],[-7.608647,8.479065,0.258111,-3.514335,1.990251,-2.445019,4.736443,-8.611423,-3.650956,4.173337],[-1.517926,-0.024907,-0.756712,-5.174126,8.303334,6.758905,1.507063,-9.062901,3.377658,6.862981],[-5.533486,-2.984385,-1.367072,9.831629,-0.723793,-3.367229,-1.004351,9.905903,4.895307,2.959442],[0.068050,-8.126317,-1.388268,0.389875,-4.109084,-2.364514,0.989025,-1.027484,3.002128,-6.631784],[-4.380803,-9.744479,5.805463,2.908520,-3.174761,1.775647,-7.729077,-8.302141,-5.591506,-1.124480],[-8.220678,1.448411,7.693102,9.743496,-4.387435,3.270186,8.022988,5.443504,2.992746,8.430756],[0.806608,2.521878,3.873325,-0.247732,-3.068689,-7.770690,8.950797,-1.440791,1.714072,-0.647430],[7.136630,-2.002180,2.628726,7.391860,-6.562453,-6.188712,5.358602,4.215431,3.598070,5.316970],[-7.519375,7.188586,6.988895,5.304676,5.550666,-1.664539,1.782154,6.070802,-1.307995,0.371517],[-4.190121,8.042358,-0.530482,-0.678724,-4.653017,2.187085,7.576136,9.381984,-8.835788,7.473594],[-5.683672,-0.448304,-8.416831,-1.049473,-3.487057,5.973464,-6.897281,-4.288194,-4.572656,-7.878878],[-7.376153,8.250780,-9.809663,6.414420,6.605620,4.627458,-2.312538,4.079455,8.340910,-9.030801],[-5.634354,-6.402291,-1.167483,2.052446,1.204720,3.909676,3.349471,9.039058,4.756229,-2.199786],[2.616501,-2.238979,0.902631,-4.940167,-5.127520,-2.989193,7.768913,2.463830,5.746792,-7.514581],[-8.433242,4.329585,-4.331937,-3.204533,7.081603,8.435916,-9.812158,-9.806323,8.865125,-0.428589],[3.655995,-1.855937,-4.421846,-6.626538,-7.638749,-9.774770,4.744189,-2.678356,5.038801,2.680878],[6.766487,7.356792,3.777927,9.909437,6.116884,-6.074768,-5.605922,8.635972,-9.869744,7.702149],[-5.976533,6.522033,4.191247,8.924049,-0.954375,3.530258,5.516527,7.156105,-8.318761,-5.735993],[2.263047,2.618906,7.827314,-3.292999,-7.061293,2.466770,7.194739,-1.630367,-2.042077,4.255639],[3.826256,2.950202,-2.429957,8.541662,9.104300,-6.487289,-7.289658,3.535164,-4.915837,9.837364],[4.469127,2.456147,6.484975,0.426450,5.341010,1.934363,7.703050,-9.897685,5.123585,-2.593854],[4.998723,2.100031,-0.632927,7.781121,-7.030090,-7.073286,9.930258,6.822557,0.661061,2.333817],[2.959129,4.585851,3.678313,-8.327756,0.283132,0.619518,6.649395,-9.341438,0.808869,-4.517561],[-2.146654,8.277562,-2.845964,9.557433,2.600033,1.008510,0.347251,5.621970,-3.343995,9.560829],[4.293215,-3.656079,-3.249607,-2.527031,-1.585358,5.585476,9.870141,4.902834,9.334926,-8.987326],[2.375002,-1.274442,-7.887528,3.052878,3.669523,1.437244,3.559439,-9.842498,-8.306592,-4.601184],[2.278744,-4.315781,-2.950476,6.238665,-7.630914,2.200710,0.022925,-9.619241,2.684768,-4.096401],[-6.633113,0.933630,2.229067,5.377252,0.652993,-7.037050,-9.315752,8.720529,-2.166492,-1.024946],[-3.748399,-2.675209,2.575565,-2.861200,-3.788305,-5.086252,-6.686585,8.774790,2.113103,7.758304],[-8.284192,8.523586,-9.622253,0.095872,5.790958,8.730671,4.016607,5.540970,-0.671915,-4.885992],[-0.671525,-1.586062,-7.693803,-4.730311,-3.901731,-4.670846,-0.476496,6.355509,8.044785,1.598414],[6.838892,-6.201819,8.128854,7.913521,3.427735,-2.974085,-6.460792,-4.164539,-3.903134,-7.603283],[0.531100,4.688088,7.837287,-8.048329,-7.746528,4.969660,9.157451,-5.785827,-5.694555,-9.367393],[1.907968,7.687580,9.641486,2.430790,0.181395,3.428356,-6.276463,-1.856711,5.700625,-2.690094],[-2.079779,1.033362,-8.069460,-7.607208,-9.969713,-0.401043,-6.236111,9.078413,-8.075225,8.822037],[5.900092,-7.336608,-6.272402,9.625128,2.114597,4.887314,6.415891,3.095802,-4.096911,-8.671380],[8.090491,2.579217,8.291586,8.993688,6.725349,0.236556,1.165185,-4.601093,-0.251093,-9.095950],[-4.097084,9.176850,-6.141970,8.828889,4.119446,3.531174,-2.583057,-8.936064,-1.657077,7.408532],[-2.475633,-0.685955,-8.870207,8.888360,-8.129946,4.473524,2.608122,-0.487402,0.128769,4.045779],[-5.301406,2.708757,4.274270,-9.160707,-9.044892,4.989248,-1.444812,-4.501898,-7.220543,4.457418],[9.802736,1.924684,0.331425,7.614985,0.908963,6.189272,5.121189,3.926541,-1.654092,-0.807548],[3.702057,-5.430590,0.273423,2.335650,-7.132398,-3.852903,1.313204,7.073605,-5.411976,3.955163],[1.078460,9.434276,-2.514370,2.809678,-6.851774,1.327166,9.511348,8.155009,-0.847144,-1.780903],[8.005295,2.337999,3.696224,3.455093,7.712047,2.039833,-9.356801,2.811933,6.900423,0.895618],[5.860996,-2.429553,-7.607454,0.981141,-2.225535,-9.238944,4.730299,-5.086373,-2.958657,-7.649602],[-4.907997,-1.757368,-8.699246,1.988337,-3.514220,3.575297,4.096243,-9.226604,0.609113,4.824446],[0.546564,1.008229,2.230917,5.391821,9.759562,1.207366,-4.567847,-6.968874,2.465952,-7.020964],[2.520428,7.201475,7.455451,-1.671873,-9.187646,-4.011803,7.283564,-3.082645,9.518266,-1.544010],[3.627356,8.771634,3.135020,-2.978806,8.593099,-4.668749,-4.583575,-9.026177,9.588252,-8.688640],[-7.415496,-1.925379,-3.891179,-6.516365,-4.772611,-9.207114,-7.801237,9.575795,-1.124113,-2.916805],[3.285893,-0.369851,0.790603,1.129098,6.313359,-6.282261,6.815191,-5.541540,7.830208,5.296939],[1.971249,1.037198,8.749694,-1.313248,-1.081708,-1.217426,2.825373,9.534109,9.570260,-5.707188],[-0.272487,-9.064753,7.529489,1.520085,7.674505,-0.718881,-8.274224,-2.486325,3.850291,3.796470],[7.330690,5.873078,-4.381632,5.088495,7.970714,6.254331,-9.829554,3.629581,-1.249282,-5.666124],[-6.660761,-9.187908,-7.016191,-9.389168,9.956085,8.108058,9.917655,-3.538014,9.724482,1.129301],[8.719223,-0.479081,-2.122709,0.082716,-3.791741,-8.348756,-2.639164,-1.193577,5.507654,-6.962839],[-8.880579,-1.995738,-3.140436,-4.475112,-9.251222,4.647202,-3.642780,-2.024718,2.241114,1.507739],[2.816447,-2.628986,-3.362409,2.739063,-5.129268,0.009923,0.827174,-4.866125,-6.453122,-8.641684],[2.371573,-8.684255,6.514579,-3.371326,-9.627766,3.625301,-4.019205,5.946721,-5.477519,-4.863889],[0.782352,0.341560,8.197801,-9.856245,-7.037611,4.872907,-6.843964,3.041600,-6.314417,0.419703],[5.305357,-4.847604,-3.984135,7.417982,-9.395427,0.711213,1.543604,9.084653,1.013107,-0.933836],[-2.003274,0.761868,0.242092,-4.635700,-0.008562,-1.029280,-3.491691,7.053619,-7.062865,8.082020],[6.819756,-7.834880,-5.396370,2.431901,-3.579928,8.290821,1.486844,2.860191,-7.467900,-9.354216],[8.509302,-7.051480,-6.866973,3.011961,-2.858957,5.993384,2.136877,-4.701870,1.606188,2.370351],[7.668537,-8.633156,9.806564,5.181007,-2.630522,6.533102,-4.282422,5.846060,8.985787,-5.853625],[-9.691269,8.205324,6.978397,5.589676,-9.182563,-9.269455,7.175709,-2.673873,9.558065,-9.957854],[-6.954089,4.973498,-1.553296,4.991851,7.852120,4.769237,0.254949,-6.898085,7.624515,-4.344268],[-2.032189,5.105057,2.998850,7.660762,-4.208086,-6.630090,8.393007,8.905585,8.891667,1.206207],[-6.654860,-5.666704,-0.646511,2.948942,-5.528942,5.775186,-8.577238,-0.826862,-2.624073,-6.958299],[-0.069588,8.355022,6.436154,5.688478,7.663759,3.131544,7.546578,-2.153200,-9.682853,0.716060],[2.114981,-0.638252,-8.827499,3.461747,-9.787826,6.834246,9.473165,-8.402043,1.166239,6.243755],[-1.605674,5.973448,-3.993148,3.069715,4.247573,8.406306,4.346065,-8.326380,-0.259176,7.723881],[-8.300140,8.759073,3.837950,-9.262902,2.142489,-4.385488,-4.907655,-8.039863,7.062503,-5.485836],[-0.224474,4.426051,1.599445,0.387792,2.514097,-4.870837,4.102830,6.292209,4.817977,-8.613424],[3.254715,-9.538883,-1.803098,-7.400074,4.229182,-2.264100,-1.819244,3.892621,0.403862,-6.225475],[0.306033,-3.707497,-0.959467,-1.672960,5.477955,7.104720,1.612501,4.534131,-1.960196,1.107718],[-0.117088,9.514209,4.769746,-9.648450,-6.628715,9.011862,8.919613,-1.557444,-4.749752,4.428529],[4.309844,-8.719708,-3.263319,-5.023679,-0.781315,-9.954934,8.283441,9.651069,9.603380,-6.567064],[-3.368811,4.935453,0.114284,-8.148055,-7.457672,-3.455216,-7.326517,-6.732573,-5.360507,6.759433],[-5.610057,5.429539,9.997768,-1.194662,-2.560858,-2.359226,5.136301,-0.499716,-1.444441,-7.821107],[-6.062275,-4.041521,9.287757,8.608363,-6.035648,-9.081893,5.322528,-3.370607,2.121821,1.684842],[6.966100,-9.791019,8.158314,-0.624528,4.774712,3.783694,8.347316,-0.121651,-7.228607,-6.011759],[-0.795895,-5.162727,-6.464779,6.054014,5.291130,9.886408,-9.300134,8.098863,-2.454606,4.924552],[-0.113541,2.372835,8.536056,0.359207,1.421816,-7.186251,-0.116388,1.867568,3.750787,-5.812172],[6.039155,-2.400136,-9.951890,-0.401444,1.846730,-1.906611,-8.444837,4.295229,-2.567709,3.186040],[-9.356142,7.698412,-4.830132,1.466910,5.605255,4.056442,4.018857,1.887544,5.430892,-6.340566],[1.825569,3.377362,-6.630474,8.535119,9.184273,-4.949074,-5.947848,-2.486435,9.790822,2.294267],[-6.805801,1.774848,-0.415748,6.469028,-5.792358,-8.289945,-1.769468,8.804382,-6.493056,8.787390],[-0.314759,2.019841,-0.974720,9.246120,7.373709,-7.848746,6.986789,7.390445,-5.938220,-6.013182],[-3.474553,1.496422,-2.356211,3.667412,9.934145,-8.667125,-9.313441,2.944738,2.658891,-6.738901],[9.021994,-1.638687,6.972386,-5.944093,-3.390319,-9.753192,5.007644,-8.566640,6.312678,-6.304621],[-7.946421,-3.534080,-0.534887,5.949513,-1.839305,-3.728166,0.648283,6.763229,-7.589864,-6.832489],[-9.437300,5.997986,-8.447982,8.031692,0.743663,6.336347,-6.811462,-5.749742,7.040869,-6.840304],[-0.613716,3.191723,-1.839184,-2.968495,-0.767281,0.236817,4.132347,-8.518871,-0.540812,7.833111],[4.211901,-9.885608,-7.032443,-6.163156,-0.032909,-1.291675,3.934352,-7.391073,-3.115139,-5.949602],[-1.572600,9.141774,-1.691203,7.976777,9.881911,-4.137162,6.165625,-4.088793,5.649265,7.528509],[3.929525,-2.077012,4.772285,-4.259083,2.597462,-5.435914,8.720907,-1.092915,1.354621,-4.471921],[-5.214514,9.967304,4.252089,-9.316857,-0.043694,5.518341,7.196539,-4.514870,-0.239067,-3.027699],[1.008234,0.993285,-1.193196,-3.358508,-6.411740,-5.036212,0.794373,-8.442765,2.608355,-0.599081],[8.687212,9.239978,6.074834,9.883175,2.288306,-5.538675,9.100944,4.187303,3.578129,9.098442],[-5.023959,-9.002394,-5.567214,3.189164,3.081430,9.390700,3.870652,7.587167,1.335203,-3.455780],[-8.853250,3.449019,6.686745,0.644462,8.456698,-5.597699,-0.546653,5.652729,6.305334,-9.822910],[-9.807647,1.012206,6.131848,0.491942,-3.914080,0.271433,-5.329436,-6.265393,9.858411,-0.524689],[-6.854856,-3.818373,0.377224,4.656306,-3.951680,-4.994537,-1.258086,-8.918877,-2.830368,-1.443137],[-7.906981,-7.848764,-3.273265,-0.469337,-7.076209,-8.142519,8.834822,-6.711205,9.717228,7.433758],[1.548779,-3.136613,-0.746236,4.721269,-9.752549,6.991114,4.881458,1.362154,-3.118295,4.896867],[-5.804456,5.655733,3.069994,7.554199,-6.007209,-2.739283,-7.634822,4.655298,-3.777179,8.698056],[-8.053261,6.513875,-4.436715,0.928996,-2.010530,-6.817966,3.563271,-6.125945,9.809529,4.710583],[-6.633204,2.381519,-5.788367,1.175727,-3.997258,-4.040306,6.983682,-7.793107,-6.850443,-7.748025],[5.850195,-8.755073,3.442137,7.696156,-6.684903,-9.627980,-7.251080,9.836989,-8.208202,4.385855],[0.424970,3.545507,2.597595,7.175190,3.413080,-7.138220,-6.031821,4.889184,5.751663,-1.871005],[5.625897,0.736204,-0.922821,7.184319,6.380364,9.590011,-6.599181,-5.761406,6.633996,3.575358],[3.567257,4.003920,-3.521767,4.384141,9.461986,0.571751,-8.346133,-4.341400,6.566307,0.015322],[4.533015,-5.596333,2.170175,5.954928,-5.172818,-0.504963,9.632836,6.559411,-9.377035,3.784444],[-1.198058,5.740578,9.079013,7.859095,3.918415,-7.357272,-2.874995,-4.882427,5.937834,-4.505710],[-2.223942,7.606928,-5.801346,-2.102870,-0.721556,-6.885315,-5.759260,5.580066,5.950932,3.967782],[-5.586665,6.573165,-3.926660,-7.214913,-7.868460,4.497517,3.070358,-7.097259,8.994571,6.152761],[-0.787334,-5.843778,0.280380,6.688627,-0.040660,0.703409,-1.317978,5.464093,-7.966712,-9.190343],[-7.860133,3.628787,-2.531878,1.487377,-4.819447,2.686897,-1.850905,-3.105167,-9.496004,6.373428],[-6.647802,4.804685,5.545235,1.247703,-4.766639,-3.934654,2.221199,8.355052,4.081108,3.587087],[0.219827,0.156863,-5.857322,6.020012,9.926752,3.213339,8.376197,-8.389431,-8.841576,-7.445424],[1.242607,5.308255,-3.578748,-0.906069,-6.419941,-3.840248,4.580331,8.383647,0.609676,-0.882618],[0.886677,-8.176334,-6.902147,-5.453327,-1.368420,6.566675,8.282940,-7.971873,0.860775,-3.381468],[-2.227050,8.021377,-0.736394,4.499634,1.812184,-2.584988,2.266750,7.635819,0.885741,-1.513725],[-1.263210,8.899215,0.833015,-6.637137,-0.129324,-2.210363,5.855943,-5.626343,-2.072088,0.897268],[2.420102,4.201530,-2.436403,-9.061329,-3.889870,1.162740,5.169745,-3.568278,-1.373683,2.968040],[6.432645,6.831529,-0.178207,-0.570561,3.090251,-8.029941,6.733394,3.768182,3.078609,2.673944],[3.952655,-4.941093,8.880694,6.020321,8.918148,0.938460,-3.574540,6.287368,-0.577257,1.354149],[8.248992,8.050247,4.058181,-0.448602,-8.457044,-9.128881,-9.191425,-3.086895,-4.281948,0.728226]], dtype = "float32")#candidate|981|(154, 10)|const|float32
call_979 = relay.TupleGetItem(func_328_call(relay.reshape(const_980.astype('uint16'), [16, 3, 3]), relay.reshape(const_980.astype('uint16'), [16, 3, 3]), relay.reshape(const_981.astype('float32'), [1540,]), relay.reshape(const_981.astype('bool'), [11, 14, 10]), ), 1)
call_982 = relay.TupleGetItem(func_333_call(relay.reshape(const_980.astype('uint16'), [16, 3, 3]), relay.reshape(const_980.astype('uint16'), [16, 3, 3]), relay.reshape(const_981.astype('float32'), [1540,]), relay.reshape(const_981.astype('bool'), [11, 14, 10]), ), 1)
bop_986 = relay.add(uop_967.astype('int16'), relay.reshape(var_966.astype('int16'), relay.shape_of(uop_967))) # shape=(6, 1, 7)
output = relay.Tuple([uop_971,call_979,const_980,const_981,bop_986,])
output2 = relay.Tuple([uop_971,call_982,const_980,const_981,bop_986,])
func_994 = relay.Function([var_966,], output)
mod['func_994'] = func_994
mod = relay.transform.InferType()(mod)
var_995 = relay.var("var_995", dtype = "float32", shape = (6, 1, 7))#candidate|995|(6, 1, 7)|var|float32
output = func_994(var_995)
func_996 = relay.Function([var_995], output)
mutated_mod['func_996'] = func_996
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1006 = relay.var("var_1006", dtype = "float64", shape = (3, 5, 7))#candidate|1006|(3, 5, 7)|var|float64
uop_1007 = relay.cos(var_1006.astype('float64')) # shape=(3, 5, 7)
output = uop_1007
output2 = uop_1007
func_1017 = relay.Function([var_1006,], output)
mod['func_1017'] = func_1017
mod = relay.transform.InferType()(mod)
var_1018 = relay.var("var_1018", dtype = "float64", shape = (3, 5, 7))#candidate|1018|(3, 5, 7)|var|float64
output = func_1017(var_1018)
func_1019 = relay.Function([var_1018], output)
mutated_mod['func_1019'] = func_1019
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1667 = relay.var("var_1667", dtype = "int32", shape = (13, 9, 7))#candidate|1667|(13, 9, 7)|var|int32
var_1668 = relay.var("var_1668", dtype = "int32", shape = (13, 9, 7))#candidate|1668|(13, 9, 7)|var|int32
bop_1669 = relay.less_equal(var_1667.astype('bool'), relay.reshape(var_1668.astype('bool'), relay.shape_of(var_1667))) # shape=(13, 9, 7)
output = bop_1669
output2 = bop_1669
func_1697 = relay.Function([var_1667,var_1668,], output)
mod['func_1697'] = func_1697
mod = relay.transform.InferType()(mod)
mutated_mod['func_1697'] = func_1697
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1697_call = mutated_mod.get_global_var('func_1697')
var_1699 = relay.var("var_1699", dtype = "int32", shape = (13, 9, 7))#candidate|1699|(13, 9, 7)|var|int32
var_1700 = relay.var("var_1700", dtype = "int32", shape = (13, 9, 7))#candidate|1700|(13, 9, 7)|var|int32
call_1698 = func_1697_call(var_1699,var_1700,)
output = call_1698
func_1701 = relay.Function([var_1699,var_1700,], output)
mutated_mod['func_1701'] = func_1701
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2033 = relay.var("var_2033", dtype = "float32", shape = (9, 9, 15))#candidate|2033|(9, 9, 15)|var|float32
uop_2034 = relay.tan(var_2033.astype('float32')) # shape=(9, 9, 15)
func_217_call = mod.get_global_var('func_217')
func_221_call = mutated_mod.get_global_var('func_221')
const_2039 = relay.const([-5.856050,6.182319,-1.601182,-8.508763,-4.719497,0.344349,6.546124,7.947136,-9.332964,7.841444,-7.224334,6.473159,6.761177,5.519476,-9.743292,-6.856282,0.297404,2.531319,3.977763,8.318361,7.604810,-1.436996,-1.939842,-7.122646,9.698885,3.131248,2.349921,7.575348,1.197730,7.397395,-6.165744,-6.952452,6.821556,-8.851820,7.078512,-7.557977,-6.424982,3.692339,-2.750283,-1.360279,8.794210,-2.301940,-0.686386,-6.118288,-9.662659,9.117256,0.560363,-2.423967,2.780955,3.230436,-3.169287,6.416388,-8.245083,-8.300143,-1.658077,-6.556503,-4.243740,1.583732,2.437091,-6.079938,1.772729,-9.182842,3.698901,-3.532398,9.399587,1.963028,1.971896,3.591830,-1.218908,9.345520,-0.310980,-5.283864,-9.589958,1.598492,2.703618,3.945292,2.720471,-3.359499,-1.015194,-5.052339,-6.172395,-7.302956,-8.372951,-2.466290,7.329534,-0.102236,2.639191,-5.552762,-8.974077,9.868672,-6.816470,-9.272869,9.391604,-4.930744,3.112546,4.760791,3.577974,-3.465795,3.341158,-3.447138,-5.072393,-1.955408,6.035974,6.304373,-2.864305,-6.544265,9.744690,5.080278,7.124520,-4.765839,-7.236998,-1.093166,0.125428,0.220379,4.853648,3.150037,-7.778637,-1.797894,7.097581,3.289386,-6.868453,-0.466156,6.525728,-9.570710,0.854784,9.125321,6.868707,9.911587,-3.227850,1.425786,-6.317557,6.800673,2.162757,9.313894,2.856395,-2.396950,-8.313950,1.457130,-4.826662,-8.829711,1.366080,7.755579,7.341588,4.276012,-2.570820,-9.270864,-8.344317,3.254199,7.235418,-4.824588,-8.292517,-2.936670,0.086204,-5.654430,-7.360673,6.853909,-2.544108,-1.170408,-5.792609,-5.044558,-6.629170,9.712321,-0.162763,-9.878883,2.150196,2.482281,-7.017371,-5.361983,9.974500,4.267536,1.070015,9.309506,-3.152411,-3.972233,-0.675529,0.130415,0.932101,8.186926,5.715362,9.533657,-4.161914,-6.808711,-9.544948,-8.014818,1.551574,3.559445,-2.009680,1.092735,-5.533067,3.484795,-5.143887,-7.044462,-4.673064,7.672537,3.504261,-0.428156,1.854888,-3.170839,-6.959520,-4.227206,7.695479,-2.778523,-2.917221,-1.642872,7.008940,8.184392,-1.976566,4.926386,3.365342,-1.708957,0.655420,-6.251821,-7.923837,7.147272,8.344018,-0.595838,0.679563,8.778555,-9.936991,6.551053,8.129325,7.295133,-6.708614,-0.998915,-9.498652,-7.427937,-5.281161,-0.057477,-3.586106,8.591268,8.090290,-3.042992,-3.741949,6.469379,3.326819,3.944959,9.121805,-4.704278,2.860312,-3.458158,5.743542,-9.583687,0.330064,-4.581021,-5.348179,-5.680716,-6.288770,-3.372910,-0.415643,5.753561,-7.046851,-6.262380,-4.905892,8.831804,-8.376472,4.780092,9.451017,1.798506,-0.033570,-6.122523,3.564338,1.028002,1.638112,-5.175763,8.611916,0.882405,-5.561705,1.252647,-0.789393,5.359790,-5.469578,-3.898932,-4.136846,9.837513,-0.545521,2.103125,-7.819814,8.914069,-0.285876,4.091555,4.435872,-6.580528,-1.298715,-2.444597,-5.809634,7.080831,-7.055141,-7.476602,2.183482,-0.224100,2.907435,5.202737,-5.073547,8.320762,1.215917,-3.021119,6.726762,-0.880717,-3.019948,-6.464482,-8.110631,-3.966091,-6.982494,5.630782,-0.329931,6.356771,3.781157,9.530709,7.171122,7.970514,2.056912,6.439378,-5.980679,-5.326905,1.083289,7.057210,4.576803,-5.703704,2.907334,0.457330,5.034087,7.625247,-6.078152,-9.027279,-8.858495,-1.471641,3.662498,-4.093042,5.446180,7.724208,-9.985639,7.640482,-6.632753,5.369107,4.692895,0.480439,6.121907,-8.083536,0.112718,1.212229,-3.523594,9.919819,0.191436,1.195903,-2.610937,5.176954,6.566238,-6.324550,2.471043,2.323580,5.377585,1.961596,-6.897488,-0.017455,4.071644,2.511644,1.987368,7.054032,-4.273839,4.904290,8.155255,8.754147,0.902344,-2.259779,6.611488,-8.568173,-8.306880,1.264448,6.460990,-4.768203,2.075675,-8.410281,-0.828065,-4.617196,-1.189122,-2.641602,-3.193257,-4.260052,5.820287,-6.687098,5.562891,2.587969,8.613962,-3.110849,-3.587844,2.463655,-5.730011,-1.728730,3.535902,3.765709,1.980412,-2.330671,-9.727886,5.740355,1.130312,-4.004890,-0.700882,3.124309,0.244674,-4.482623,-8.524547,4.829286,3.142371,-9.058516,-8.263840,-4.626349,7.661196,-2.067928,-3.294638,4.191630,9.249898,-8.933727,-6.768258,2.988046,2.294234,1.443346,8.910185,-4.239170,0.422152,-6.538295,-6.446613,1.471394,7.090097,4.734651,4.885838,7.195453,0.938573,1.226848,6.506626,8.631515,-0.728861,8.561708,9.386626,4.036972,-9.098554,1.475533,-7.307828,-0.551580,-1.490364,1.398407,-0.012672,-9.721606,-1.808113,0.479780,3.959740,-4.110537,-7.142856,8.078015,4.113702,-4.080836,-2.485826,3.638454,-2.978722,-2.493565,8.469160,-3.131150,2.380437,7.734611,-6.097173,0.127516,8.044763,-6.843845,0.858358,-6.220136,-9.722660,-1.738645,-4.366272,1.901997,4.483072,6.414825,-1.483602,0.061756,-7.851734,6.756955,0.407746,-8.205611,0.663824,-5.252506,7.771752,1.699538,3.441580,-7.916886,8.863837,-2.363296,-0.999668,-1.164226,-1.795267,-4.091264,-5.230509,0.918017,-7.492027,4.608245,-6.315045,3.408032,-7.261105,4.285270,-3.403816,8.635758,-1.166543,9.807760,1.115963,7.661005,8.476697,-3.993345,9.492771,6.718730,-1.419330,5.753292,1.432307,-6.791191,-2.572118,2.175261,9.053477,-6.961349,8.388218,-4.656344,5.056713,-5.612093,3.287575,0.247830,-6.011057,6.395711,1.510779,-3.626890,8.190135,-9.100479,-8.782421,-1.570463,-9.681942,2.072388,-3.780610,-6.211941,9.000832,-9.495330,2.690634,-1.055220,9.313164,-2.856372,-7.366615,7.499977,4.476732,6.279668,7.872590,-1.250307,6.545757,8.625156,2.799202,1.472814,-7.475581,-6.983129,8.363211,-4.386484,-6.951446,4.370052,4.957736,-4.946733,-8.160701,-7.754072,9.142847,6.739152,2.208565,8.875042,-4.531091,5.490996,-8.201163,0.890838,-1.154105,-3.538663,-7.431512,-6.390075,-1.756037,8.931031,-7.790086,2.121912,-3.094123,-5.779008,5.434209,-1.447687,8.883687,7.600879,6.031687,6.731941,-8.620192,-3.428071,-1.718333,-1.804223,0.834000,4.973275,9.494575,-7.555037,-4.675771,2.290281,-4.276723,3.751469,-1.974957,7.191649,6.184996,3.288627,1.256283,4.835229,-0.845002,-7.102624,1.810861,-1.278263,-7.940349,-9.372682,0.266392,1.366493,6.203396,9.344825,0.516978,-1.394007,-5.047022,-6.466948,1.622400,5.288281,5.483799,-3.862145,2.638790,7.409984,9.605679,-5.547041,-4.870269,-4.301265,6.728800,3.793718,-1.332070,7.884217,7.395355,-4.893571,8.263143,0.980071,-8.586609,5.787196,-0.958972,2.799825,-4.054397,-0.912907,1.609294,5.228362,0.340286,2.923897,-0.243109,-5.050929,-6.807896,-1.985853,-6.803943,-5.777952,1.201673,-3.845861,9.983359,8.977246,-2.070250,-0.752268,-0.259618,-6.772962,-0.383865,-3.044190,-1.815900,-9.673565,2.028277,8.042563,-8.597313,-9.756975,1.174245,2.050085,0.587942,4.002122,4.188649,4.397052,6.981795,2.123172,-9.617009,-7.476589,-4.922187,0.681746,9.776752,3.054493,2.006313,-3.339790,-4.026809,2.118876,-8.694868,4.916597,-2.997513,-6.713684,-8.149732,3.171539,0.149606,-5.383544,-1.566832,1.501632,-2.548252,-5.033265,5.812454,-0.772843,-9.628611,0.044012,-4.493088,-4.325996,6.901759,-1.750680,-4.434302,-1.912510,8.479377,0.223606,9.118651,-1.640624,7.631494,1.789961,3.423069,2.926979,3.572601,-8.257723,2.900412,-4.566399,2.817457,5.935832,-4.418793,3.019378,-5.093953,0.225895,-3.850840,8.453564,-8.214415,-2.714709,-4.679759,-1.974846,-0.008828,-5.280876,9.026391,-6.658979,4.176180,5.586234,-8.130516,-7.417966,0.816909,-3.256279,4.174078,-7.956668,-5.393110,6.156918,-4.608918,-5.800421,-2.384454,-9.282903,4.700890,9.560244,-9.511427,-0.253852,7.911882,7.597078,-7.435638,-7.064163,0.686753,-5.907458,9.451769,0.087470,1.121139,-8.408914,-6.968001,9.791829,-5.945287,-4.554816,2.367673,2.814466,1.774988,-4.755827,-5.162798,3.227401,2.008128,1.294752,4.272240,-7.278081,-1.223665,5.014703,3.502533,-6.366706,9.531004,2.989271,5.825242,1.286899,8.729014,-2.462010,8.997289,-9.708224,8.994098,9.479800,-1.658720,2.174647,4.489259,3.634372,-6.282756,-9.322472,-8.019281,-3.615317,-4.022484,0.470238,7.151503,5.164220,7.184941,6.161938,0.453166,-7.713003,-1.078044,-8.040502,-1.232908,3.885640,6.094902,-0.595547,2.900950,1.498993,-2.139336,2.240000,-4.825928,-8.848057,-7.418994,0.691679,7.820804,5.389437,3.455263,5.089894,8.624233,-2.006716,-6.370519,7.340915,-1.477257,2.843761,3.359064,-7.331830,4.311458,9.398528,7.997101,0.332112,-9.986774,-1.489555,-5.137582,9.103088,-8.958418,-5.120142,-3.109137,-8.888156,-3.722643,-1.861983,7.121910,4.230641,0.202824,-8.855210,8.069117,6.941858,9.152385,-9.639050,2.120523,4.820325,5.547294,-5.152280,5.286465,-1.986067,-9.930693,3.621010,-4.494431,-9.285778,-0.384835,-8.049910,-3.068604,6.462153,3.662375,6.674886,-4.411194,8.735092,-7.330270,4.263206,-2.999732,5.188955,-2.754571,-6.114238,-9.485958,6.985369,-7.931095,-3.779939,5.002740,-4.120459,6.797904,-4.421598,-1.176419,-2.401577,9.124837,0.838008,8.426742,7.924193,9.680942,-9.753156,-9.932942,-2.479770,7.578633,-9.954791,5.762566,-5.643327,-6.005751,-4.731019,-6.317889,-9.038076,-3.727230,5.622557,-3.343036,-7.087934,9.105626,7.579267,-2.176621,-5.988831,0.307101,-4.474656,3.237939,1.262075,6.806861,-4.156835,-1.982113,-6.157181,-5.494494,5.779262,-5.543043,9.683182,-1.229506,4.191645,-8.448194,4.976625,-1.386610,-1.812067,-3.166559,-3.137785,6.568156,4.939078,0.768647,4.095733,0.486800,-7.761239,-6.815493,2.177110,3.835984,9.120750,-3.719984,0.351620,-9.794772,-0.849839,4.976951,9.332292,-9.180293,8.163035,-6.701963,1.864153,1.127447,3.530438,8.829408,-8.302254,8.090338,5.975867,-0.958790,6.846135,-3.975757,0.970352,-3.474274,6.169527,5.589394,-6.019576,5.470960,-6.403978,8.081044,-9.220304,-0.987057,6.216164,-9.428484,-2.674209,5.186148,5.766945,2.827684,-9.691969,7.070007,-9.351284,-9.828773,-6.600138,6.293449,-9.743830,-6.129636,6.253982,5.435385,6.844257,9.129315,9.810178,1.314232,4.486648,0.048468,-2.180937,9.113106,-1.008219,1.778816,9.482010,0.313464,4.380147,-6.356299,-4.297568,-5.513619,5.159338,5.124310,-4.967599,3.728072,-9.205443,7.962363,-9.868697,5.462156,-9.082411,5.552085,4.369483,8.410818,9.783483,-5.577283,-4.704464,0.600050,-6.398654,-4.252970,6.352083,-3.840031,-8.012037,-9.126904,-9.623140,2.076474,-4.249637,-0.161214,0.240095,-7.878491,9.838705,6.097358,9.587760,3.000088,8.608032,1.100243,-5.117699,-2.686257,6.177107,3.612603,0.007198,9.323022,9.368970,9.282292,2.010631,5.476423,-4.824348,-6.163354,4.162193,-7.851289,8.400320,6.595558,9.347159,9.519538,-3.915273,0.534914,2.614775,2.762831,-3.661340,-7.173869,2.012984,7.864832,-5.207343,3.793508,7.395492,-2.257621,6.195594,-5.052623,-1.961679,-7.936763,-2.148086,-1.154091,-6.027773,7.956508,-7.877464,-0.689923,2.122793,-0.348434,-2.216994,-9.546454,8.489815,-3.537325,-0.417154,6.336375,-0.632704,-1.682892,3.660914,3.621865,-6.816799,8.341116,-5.096603,-3.345109,6.956441,6.638165,3.377981,7.001627,-4.824062,0.464108,2.518404,9.212158,-5.331593,-0.798555,-9.950903,1.855333,-2.409159,-7.876985,3.341312,5.383490,7.196042,-6.294984,-0.954302,0.067279,1.199301,7.405233,6.107789,9.761654,-4.629775,-5.481256,5.775173,-3.150011,-1.432946,-0.060777,0.379517,-8.150922,-0.633238,1.856512,-7.935908,4.301751,-0.358397,-3.737772,-1.831725,7.135903,-1.913756,2.827992,-7.705710,1.930620,-3.876229,-8.022346,1.811891,-1.514129,1.957530,-0.733059,-9.470699,8.624158,5.536576,2.197571,1.023350,-2.907479,-9.075951,6.395651,7.641723,8.257325,-9.355132,-0.333769,-5.579611,3.215817,-8.954095,8.994553,-0.594632,5.628364,7.315095,8.653447,-3.323390,-9.836503,2.676239,6.445854,-0.606185,4.365240,-1.792260,7.654033,-5.135442,-7.840457,-7.008020,-9.807235,-8.886705,-5.601781,-4.701946,4.194161,-1.573168,6.347765,2.097503,-7.470091,6.819565,8.332776,1.639158,-5.507891,1.996892,0.480937,-7.984425,-8.872116,0.138901,-4.103341,-8.650175,-9.867139,8.484688,6.874133,-4.887006,9.305026,3.591188,6.812039,3.746192,-1.025747,-7.502134,-2.176851,3.848956,-6.683256,-8.346321,-8.522853,-8.498839,2.973328,-6.398690,-8.816412,-9.257785,-4.826277,-1.899155,3.404678,4.551629,0.717451,3.232718,0.988315,-8.416068,5.915014,-1.783141,-4.735923,1.495072,8.765431,-7.177704,-4.645835,5.722988,-4.490350,2.839383,7.720223,4.292451,-9.938109,-3.452244,-9.262956,7.033873,5.681204,8.298373,-2.415053,8.602602,7.111277,-0.893542,5.124495,-4.402370,3.584630,4.797284,2.828937,9.133332,5.816003,9.694992,5.981590,5.919280,-6.026525,-1.198011,8.220570,-7.000183,1.974279,9.654561,-0.131825,-7.243616,1.333561,-8.841300,-3.987779,-2.100791,-9.448323,0.504075,0.907329,-7.282644,-4.113057,-8.631285,4.001279,-4.382344,6.200525,5.717121,6.232105,-4.982655,6.738777,3.092714,-0.068639,5.742190,2.679140,-8.641457,7.971530,5.472199,2.348164,-7.583998,-9.358491,2.529081,-3.741501,-2.123890,-6.580726,-7.237799,6.996525,-6.906693,4.172953,-6.568782,-1.425214,9.525213,-8.034861,2.936046,8.274998,-0.539592,-3.921995,8.343010,-2.187140,0.980572,-4.097996,-8.041921,5.807546,-7.509496,-8.641875,-6.749401,2.425469,-1.980994,-3.747564,-9.992073,3.454094,9.923986,-1.528272,-4.414863,-1.388453,-4.422045,3.444678,6.580327,8.152068,-8.694885,-0.537665,-5.161272,-7.400877,1.994532,4.527562,-8.459488,-6.873985,-5.584665,1.524366,9.337766,-4.656375,-6.650955,-1.145296,0.550555,4.219720,4.530632,-0.017123,-3.878271,5.196463,6.511426,0.686769,0.576505,2.434220,-6.508405,1.921276,1.659964,7.439483,7.707716,4.637041,8.779798,-6.093084,-3.920978,9.437035,-6.420407,2.278107,7.210045,4.619327,-2.765552,-5.717339,2.977587,8.715795,-7.936449,7.931371,-1.094767,-4.312604,4.434351,1.159931,3.903371,-2.929513,2.951018,6.941793,-9.576628,8.113929,4.587726,-4.815627,6.796510,4.585093,-4.367962,-2.044897,7.009232,0.675321,5.233037,2.974338,9.518909,-5.561687,7.131602,2.138166,0.867696,-9.252873,-8.254303,0.140749,-5.861623,2.673342,0.108423,-3.200230,-5.019216,-2.222531,-0.034226,-1.201614,8.863546,-9.072221,-3.143693,3.118268,-9.976315,0.284972,-1.974485,0.850165,5.863165,1.972300,-8.953789,-8.218646,8.442226,-1.705450,-9.415573,0.679937,-3.933384,-0.912965,2.719808,-5.826508,1.301297,2.180410,-4.977571,4.203492,8.247947,2.006661,-2.556666,6.899134,-5.537362,8.913370,-0.936834,-3.279647,-9.822018,-6.361652,-4.075282,9.214150,-8.263057,3.935744,1.652597,-5.570169,-5.564317,-2.342645,1.196432,-3.821515,-9.087452,-6.566590,2.002860,3.651314,6.115337,5.041295,-5.055139,-8.128269,6.919623,3.511969,-7.944970,-7.580501,4.171342,9.655113,-5.831132,-7.789254,2.696788,7.241668,-9.336642,-6.529394,-9.492934,0.366918,-1.512453,6.350948,-3.701905,7.863557,7.551637,9.805647,-0.826512,7.831937,-9.316680,7.834882,5.316035,-1.902438,6.438079,8.347878,3.370956,-3.179410,-1.468268,0.510966,9.151476,0.745133,-4.218570,6.851840,6.247712,3.967115,9.964651,9.207751,-0.016959,-9.233164,-3.642427,2.677927,-1.805038,-3.583604,-5.023684,0.053731,-9.671695,-8.866717,5.108725,1.331175,-9.611744,4.516867,-2.701275,-5.555135,-3.026749,-6.168875,0.635604,-2.950543,-1.978845,-8.959381,5.108044,-4.931751,2.005825,-7.409459,-5.055710,3.610868,1.469508,-4.829683,-0.129749,-6.420810,2.901615,2.425329,-1.236861,4.592892,-9.641921,9.326365,7.903178,6.108366,-9.782305,-3.549673,-6.367341], dtype = "float32")#candidate|2039|(1540,)|const|float32
call_2038 = relay.TupleGetItem(func_217_call(relay.reshape(const_2039.astype('float32'), [11, 14, 10]), relay.reshape(const_2039.astype('float32'), [11, 14, 10]), ), 0)
call_2040 = relay.TupleGetItem(func_221_call(relay.reshape(const_2039.astype('float32'), [11, 14, 10]), relay.reshape(const_2039.astype('float32'), [11, 14, 10]), ), 0)
output = relay.Tuple([uop_2034,call_2038,const_2039,])
output2 = relay.Tuple([uop_2034,call_2040,const_2039,])
func_2047 = relay.Function([var_2033,], output)
mod['func_2047'] = func_2047
mod = relay.transform.InferType()(mod)
mutated_mod['func_2047'] = func_2047
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2048 = relay.var("var_2048", dtype = "float32", shape = (9, 9, 15))#candidate|2048|(9, 9, 15)|var|float32
func_2047_call = mutated_mod.get_global_var('func_2047')
call_2049 = func_2047_call(var_2048)
output = call_2049
func_2050 = relay.Function([var_2048], output)
mutated_mod['func_2050'] = func_2050
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2206 = relay.var("var_2206", dtype = "float64", shape = (15, 3, 3))#candidate|2206|(15, 3, 3)|var|float64
uop_2207 = relay.cosh(var_2206.astype('float64')) # shape=(15, 3, 3)
output = uop_2207
output2 = uop_2207
func_2216 = relay.Function([var_2206,], output)
mod['func_2216'] = func_2216
mod = relay.transform.InferType()(mod)
mutated_mod['func_2216'] = func_2216
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2217 = relay.var("var_2217", dtype = "float64", shape = (15, 3, 3))#candidate|2217|(15, 3, 3)|var|float64
func_2216_call = mutated_mod.get_global_var('func_2216')
call_2218 = func_2216_call(var_2217)
output = call_2218
func_2219 = relay.Function([var_2217], output)
mutated_mod['func_2219'] = func_2219
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2228 = relay.var("var_2228", dtype = "int16", shape = (1, 8, 16))#candidate|2228|(1, 8, 16)|var|int16
var_2229 = relay.var("var_2229", dtype = "int16", shape = (6, 8, 16))#candidate|2229|(6, 8, 16)|var|int16
bop_2230 = relay.subtract(var_2228.astype('int16'), var_2229.astype('int16')) # shape=(6, 8, 16)
func_470_call = mod.get_global_var('func_470')
func_474_call = mutated_mod.get_global_var('func_474')
const_2238 = relay.const([8,9,-3,-4,8,3,-2,-7,9,4,-9,6,9,7,1,-5,9,6,-5,-8,-2,-6,-2,-3,-10,10,-6,-3,2,8,-2,-4,-8,-5,-1,-8,4,9,-7,-8,-3,-8,-7,-3,-3,-4,-5,7,9,6,5,-6,10,-6,2,-3,4,-4,-4,-2,8,-3,-4,-6,-4,-4,-6,7,-8,2,7,-4,7,-2,5,-10,-9,7,3,8,-4,6,5,-8,10,-4,5,10,6,-5,-5,3,5,-9,1,-8,10,-9,-1,9,-6,8,10,3,9,4,-2,2,-7,10,8,7,3,-2,-2,8,3,9,-4,-9,2,-9,-2,-2,1,1,9,7,3,-8,10,10,2,9,2,10,-1,8,1,-4,-1,4,-2,-4,10,-7,10,6,-7,-9,-10,4,-10,-5,-2,5,-4,5,-8,9,3,-8,5,6,-8,-4,-5,-2,-1,-6,-7,-8,8,7,2,-5,3,-1,-9,2,-3,-6,5,3,-6,-8,-10,4,-10,5,8,-9,3,-1,9,10,2,-2,5,-4,6,3,-8,5,9,-10,-2,-10,-2,-9,-8,3,-6,-8,2,-1,-2,4,3,-8,1,-9,-10,8,-2,3,8,10,2,-5,8,1,-4,1,-6,8,-8,10,8,10,-7,-7,-10,8,-3,-4,-3,-2,-4,2,2,7,9,-10,7,6,-4,8,-2,-5,1,7,-6,9,-1,-10,-3,5,-6,10], dtype = "int16")#candidate|2238|(270,)|const|int16
call_2237 = relay.TupleGetItem(func_470_call(relay.reshape(const_2238.astype('int16'), [6, 5, 9]), relay.reshape(const_2238.astype('int16'), [6, 5, 9]), ), 0)
call_2239 = relay.TupleGetItem(func_474_call(relay.reshape(const_2238.astype('int16'), [6, 5, 9]), relay.reshape(const_2238.astype('int16'), [6, 5, 9]), ), 0)
func_2216_call = mod.get_global_var('func_2216')
func_2219_call = mutated_mod.get_global_var('func_2219')
const_2248 = relay.const([[-5.671499,-2.380987,-9.065487,-0.301408,3.689989,7.084458,2.921664,9.018327,-8.183198,-9.575988,3.437647,-1.828006,8.737499,-3.876972,5.328718,2.010142,-1.054663,-1.952931,-0.976009,-9.382277,-2.825295,9.567301,-7.544718,-3.405059,-7.708226,-0.341359,0.609338,-4.165826,-6.692888,9.640059,-5.660256,5.650547,-6.801978,4.573253,-0.985970,-7.034169,-5.344355,-1.667040,-9.135115,6.725075,-5.889375,9.686619,-0.915621,-7.313542,-2.183705],[5.003601,-8.513135,0.607892,-5.721641,0.679524,-3.347486,-6.179280,5.733177,-6.875044,1.610946,9.094204,2.489368,7.342546,-0.904472,-6.686806,5.393758,8.743131,-3.857661,-4.846353,5.583543,8.709305,-6.029509,-9.611968,8.116769,8.782904,-7.948959,-4.580408,5.850581,-2.356252,9.667648,-6.400387,-1.171901,-8.741580,-3.234966,7.138596,7.550425,-8.293051,-6.627051,4.829249,1.327923,-3.957391,7.310562,6.233254,5.292633,-9.056708],[-2.388295,9.001579,-8.048178,3.901552,5.299245,6.117883,6.868798,-5.453327,-2.703199,8.885326,-8.510933,-0.184036,-4.378019,7.620669,5.280898,-2.808377,-2.957218,-5.350785,-4.264026,-9.915071,-2.477244,-0.441662,8.324086,-5.586936,-3.038909,2.105747,6.612620,3.411627,6.003147,4.425292,-3.019297,-0.665027,-0.922786,-2.102300,-4.124303,-8.704538,-6.706353,-8.119790,3.814174,4.425748,0.398545,-1.590236,-4.482238,-3.953722,-1.556730]], dtype = "float64")#candidate|2248|(3, 45)|const|float64
call_2247 = func_2216_call(relay.reshape(const_2248.astype('float64'), [15, 3, 3]))
call_2249 = func_2216_call(relay.reshape(const_2248.astype('float64'), [15, 3, 3]))
func_994_call = mod.get_global_var('func_994')
func_996_call = mutated_mod.get_global_var('func_996')
const_2251 = relay.const([2.396602,1.286446,-3.945429,5.714896,-4.482967,1.793658,1.252476,-7.393090,1.412152,6.530918,9.393380,4.392589,-1.059296,-3.460151,-2.304730,9.859858,4.154480,9.129560,-2.578260,3.549248,6.867372,-1.652288,-6.699337,5.408885,-8.189415,-8.536220,-9.177566,2.613479,6.007934,6.756868,6.965189,4.139478,8.785588,-9.971757,6.234885,-6.608725,-1.674104,4.541527,9.742655,8.775609,6.412697,2.244669], dtype = "float32")#candidate|2251|(42,)|const|float32
call_2250 = relay.TupleGetItem(func_994_call(relay.reshape(const_2251.astype('float32'), [6, 1, 7])), 3)
call_2252 = relay.TupleGetItem(func_996_call(relay.reshape(const_2251.astype('float32'), [6, 1, 7])), 3)
output = relay.Tuple([bop_2230,call_2237,const_2238,call_2247,const_2248,call_2250,const_2251,])
output2 = relay.Tuple([bop_2230,call_2239,const_2238,call_2249,const_2248,call_2252,const_2251,])
func_2262 = relay.Function([var_2228,var_2229,], output)
mod['func_2262'] = func_2262
mod = relay.transform.InferType()(mod)
mutated_mod['func_2262'] = func_2262
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2262_call = mutated_mod.get_global_var('func_2262')
var_2264 = relay.var("var_2264", dtype = "int16", shape = (1, 8, 16))#candidate|2264|(1, 8, 16)|var|int16
var_2265 = relay.var("var_2265", dtype = "int16", shape = (6, 8, 16))#candidate|2265|(6, 8, 16)|var|int16
call_2263 = func_2262_call(var_2264,var_2265,)
output = call_2263
func_2266 = relay.Function([var_2264,var_2265,], output)
mutated_mod['func_2266'] = func_2266
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2430 = relay.const([[[4.769552,0.118723,-4.233116,1.221565,-7.893045,1.791899,-8.770458],[-1.252265,-1.765059,-1.435240,3.291866,-4.221443,0.466406,-4.827143],[4.586580,1.842103,-5.746416,8.099704,0.239450,-4.298111,-9.899242],[-1.240639,5.193833,-9.127756,4.821042,-7.247939,2.834132,-4.420128],[-0.807933,8.727506,-6.147746,-1.780820,8.103646,3.614098,4.918053],[2.804489,-5.229669,-4.482764,-2.269044,3.927585,1.917973,8.880996],[-8.196074,5.621398,-6.581723,6.236652,3.978691,1.169372,2.526103],[4.217364,-4.987348,-6.740834,5.155842,-2.890701,6.436906,1.080156],[-4.913134,0.668173,-3.468340,1.368249,3.464422,9.936185,-2.484117],[-3.850714,9.705141,-7.216748,-4.071085,-0.753658,-1.954369,1.690532],[-0.881810,-3.637071,2.286856,-3.762894,7.380806,-9.475931,-7.128292],[9.713484,5.673964,-4.817394,-3.767481,-9.885066,-2.231486,-8.839850],[-0.669873,-9.640187,-0.606809,6.617766,7.055848,8.059224,9.315494],[5.560686,9.223276,-0.774421,-1.139579,2.941546,-2.271770,7.630266],[4.987851,3.933223,-2.648765,-3.212852,-7.527133,-2.511879,7.884165],[-2.982200,-2.416988,-4.486672,4.115159,-5.677891,-2.906557,-9.332695]],[[3.299317,2.561961,2.982870,-3.720434,-3.836587,-8.574182,-5.592048],[-2.945205,-7.521185,-6.817010,8.969782,-8.478265,-2.783936,-9.321962],[-6.793612,1.891806,1.573513,-0.919827,3.045395,-6.802203,-3.746074],[-2.525016,5.790209,-6.612349,-7.925933,-8.857337,-3.622005,-8.178309],[0.397272,1.289822,7.744939,-3.357132,9.907792,8.667150,3.914524],[-2.828335,-3.112041,5.095663,-5.042568,7.631584,-5.538212,-8.535958],[-3.025705,1.246905,7.195105,4.066769,4.516958,6.157780,1.179314],[2.331090,-5.476888,-0.250223,2.928746,9.395906,6.041379,-5.043139],[-9.577817,-6.985839,7.033075,0.865603,-6.389336,0.272112,-6.415189],[-7.532607,4.216449,-2.157989,-0.955363,-7.258710,-0.586168,1.694298],[-3.739687,-0.181769,-4.398841,3.409084,-8.875664,-5.396764,3.994158],[6.152392,2.908879,5.841258,8.816423,-2.685049,-2.728814,5.631061],[-7.482044,6.698544,-7.482945,-7.832112,-2.388630,-0.685548,-4.612866],[-6.241208,-0.936483,9.472623,1.850965,-5.800816,-3.190593,-8.488144],[0.175433,-3.036639,-7.851479,-9.377311,9.205278,6.842063,-5.827945],[-4.109961,2.891327,9.100891,-9.965450,6.475868,4.325051,0.988887]],[[-4.791439,7.465373,7.652341,-9.222874,9.606170,6.671363,7.869266],[-3.008449,-4.566525,-7.068596,7.442745,-4.338121,-7.563624,-1.060041],[1.411346,0.197192,7.027188,-8.335278,-1.792430,1.625176,2.618273],[-3.573893,5.371328,1.035118,-9.649729,5.211092,7.783311,2.891229],[1.728456,7.227394,5.768784,4.955792,6.204522,-2.443671,-7.775201],[7.317029,-8.446529,-6.949243,7.672147,6.049836,3.668889,4.403260],[-5.338635,-7.751316,-7.060307,3.237416,-7.640435,6.526545,-8.593675],[-6.320613,7.422896,-0.337912,2.769217,0.290517,-7.245215,-5.956760],[-8.383973,-2.132209,6.455051,-6.469852,8.466320,1.165548,-8.059327],[1.112567,-6.529698,7.785844,-9.689580,3.055503,-1.740210,-5.279297],[-6.114363,-0.999767,-9.697939,0.273813,0.799486,-5.939827,1.088200],[2.328694,-0.801480,-1.944890,-3.302140,-3.795614,-5.736571,-5.699852],[-7.481760,1.562092,-1.896673,8.714994,2.203819,-4.200880,8.775996],[7.056337,-9.529730,-2.640100,2.595808,-8.908687,0.864781,-0.528883],[-2.173150,-1.543098,1.429594,1.244273,-0.642810,4.296077,-5.388497],[-3.765625,-7.120232,-1.377586,-6.354591,3.433147,-4.710184,4.114519]],[[-3.436489,4.530124,1.763183,8.982630,7.625148,-2.389171,-3.167763],[6.437931,0.713806,-1.604814,6.488512,-2.821199,9.635333,-2.772171],[5.969956,3.667408,9.828215,7.780325,5.722165,-0.280697,1.711460],[-7.777267,-0.763688,-2.546068,6.696568,2.613497,-3.232499,5.397024],[6.257155,4.128782,4.042091,-2.038573,9.336030,8.110234,-3.497374],[3.346829,-6.644753,1.044897,-0.178280,-5.432036,-9.803364,-4.340249],[-7.196900,8.592150,5.014198,-8.617730,1.848410,-2.260293,-3.575904],[9.091551,2.730084,5.775473,-4.783769,-3.746496,-8.348503,2.553747],[-7.062411,3.626965,8.078138,-9.296982,8.795446,3.686755,8.001114],[0.053040,-0.507137,-1.154176,-1.633026,8.740969,6.726623,2.842666],[1.676996,-4.184112,-1.902776,-7.933690,-9.940294,7.524465,4.253953],[0.822932,-7.045370,1.322808,4.118273,-8.991367,2.843683,0.301211],[6.877371,-7.703301,3.094262,-4.142690,4.702906,5.739265,4.402440],[8.933380,7.760445,2.437174,-2.820577,-7.235252,-2.409705,0.975772],[4.709871,-1.397087,5.682823,5.301742,-4.291678,-4.273908,-2.541661],[8.353396,-8.571130,-6.644875,6.319336,2.333513,-3.710638,-5.528772]],[[-3.298002,-7.636246,-4.436919,-7.756051,-1.560405,-9.418777,6.857221],[-1.446799,-2.837268,0.175442,-2.213421,-2.074533,3.473300,2.383548],[-7.689700,1.866750,0.085296,-9.379148,-3.310573,0.856944,-3.461362],[6.243820,3.211946,3.700191,-2.628183,-8.546817,-7.295683,-4.670504],[1.762028,-2.321517,6.581611,-6.214722,4.695924,-9.465113,-3.294694],[-6.461292,1.859446,-6.934979,0.908795,-4.820217,1.802334,8.071236],[-5.253939,6.969375,0.641169,7.290792,8.646715,-0.577441,-4.244044],[1.194542,-7.731499,3.307241,4.718797,-4.809978,6.575655,-1.046068],[-7.761181,-7.031684,-8.684970,-2.478183,4.987634,-7.652312,4.006457],[-3.824249,-7.767096,-6.919356,6.899263,-6.330030,-7.384797,-8.539289],[-7.309758,-2.542269,-3.892488,9.614341,-6.760101,-0.697460,4.126607],[7.551470,4.181836,-8.016490,7.686425,8.864835,-9.273840,0.259442],[-4.582323,-6.789041,8.902943,9.787627,4.816495,-4.841830,-6.426434],[-1.958917,2.756498,8.728907,9.503229,-9.805599,-4.892345,7.939409],[-4.685008,7.212956,-6.452838,7.237282,-3.932847,8.471035,5.152651],[-4.220303,2.526674,7.044655,-1.217137,8.902907,-6.314050,-2.324792]],[[6.712111,7.382576,-6.672237,5.276342,-8.015254,-0.400865,5.870081],[-7.100098,0.906215,7.116976,3.353263,-1.451900,4.785514,9.563228],[5.881128,-2.235737,-6.976824,-6.184549,1.031500,7.923348,-9.865764],[-7.713461,-8.810786,-7.356277,9.508810,-9.533874,-4.843386,-5.825490],[-2.319954,9.249302,2.679614,5.154085,1.283391,6.473635,7.320128],[-9.779735,-5.998489,9.239708,-4.367767,4.797049,1.766320,-9.457462],[-1.757077,0.376499,3.849886,-9.754694,4.174973,-2.996888,-2.046516],[7.186057,-7.525254,4.366456,-6.790466,9.716145,4.311991,0.431369],[-0.395198,-7.214697,-4.310273,-3.508048,3.609518,2.716411,-3.305952],[2.205641,5.794865,-2.047622,6.340980,-1.399903,-2.131826,-6.897916],[-1.331580,7.697023,5.138870,1.907820,1.803391,5.669216,6.141942],[5.702293,-2.988039,-7.170810,0.727795,-9.281339,-7.338460,0.452253],[-3.803288,-5.362932,6.828306,-5.307989,-8.361994,-4.612904,0.588552],[-7.558423,-0.085934,-5.701596,-3.044325,-0.293101,0.785902,-4.833211],[-7.041732,-4.818707,3.423127,9.881588,-2.157283,-7.300909,-6.747447],[4.137773,-9.357432,-4.108686,1.899061,-8.223922,8.029526,-1.497315]],[[0.421956,-5.799890,-8.561234,-5.461701,-1.095027,-3.279421,8.622568],[5.912004,8.442926,8.881339,-9.515554,5.360413,-6.191035,9.513056],[-7.815142,-2.353098,0.730260,2.111461,-1.659687,5.411885,-3.066756],[8.211933,-7.544114,0.760191,2.883161,-5.489753,-8.016501,-2.381831],[8.516592,-8.947959,4.400941,5.396081,6.637028,-2.371403,-7.199239],[-5.347789,1.408417,0.421537,-8.993082,0.793391,9.951457,9.406222],[1.413044,4.469210,-9.687554,7.968789,-1.353444,-6.364380,5.601371],[7.239834,-1.823874,-4.732811,-5.790193,-9.686047,-0.102899,-5.773032],[7.495017,3.030619,9.558285,2.693644,-0.638981,1.134199,4.712580],[7.020063,-3.668866,-3.966679,-8.124545,-4.815981,-5.165405,-3.421325],[8.094453,7.123795,-6.715006,8.542335,8.358510,6.896739,9.903577],[-2.703822,-3.992970,-5.529121,2.803124,-8.824389,6.509566,-6.698289],[2.343868,3.380117,4.071263,3.916312,1.580117,-4.865670,5.396285],[8.665449,-0.801569,9.551255,8.854376,-7.888677,-5.918270,-1.327549],[8.199562,-5.171588,0.013247,1.395776,-0.496188,0.386769,-9.532240],[-0.963007,5.594331,-7.671110,9.349256,4.746512,3.824849,1.383048]],[[-8.239255,-0.639728,-7.002575,-0.464505,-1.837909,9.373695,-9.523343],[-0.616191,-4.921775,-5.328084,-3.994318,4.295522,-3.905861,-5.902410],[-0.325815,3.795162,-6.060857,2.436630,-1.135577,-3.978867,2.805786],[4.773110,-5.053905,-9.297625,-8.872547,1.196523,-4.942312,6.819462],[0.361989,-9.553319,4.660885,-3.091978,3.477599,3.089762,4.405919],[-6.148516,2.618781,-3.392896,-8.964426,-3.320658,5.823535,0.218122],[-1.083411,-1.036374,5.019596,-9.848063,-5.098020,-9.340140,-8.100231],[-0.384908,3.666973,-3.774175,-0.842369,8.577923,-3.761756,-9.936008],[4.060945,1.199668,-2.982379,9.838002,-8.030769,-4.744521,-6.692662],[8.611191,-0.404751,-8.125904,-3.505278,-4.121857,5.763022,5.698070],[1.786283,6.631266,-9.558546,0.882882,-6.196122,-6.795282,-0.176175],[8.912439,7.471983,2.831016,-0.634362,6.447016,-6.094790,-2.397136],[4.758379,3.889192,5.766916,4.544895,4.420335,-5.586635,7.526572],[5.864100,7.661989,-8.964985,7.263212,0.236595,2.675884,-1.778960],[-6.832730,9.979008,7.622648,0.670116,5.744632,-5.384507,1.292628],[-5.476056,1.140453,-0.755778,6.814479,6.963720,-1.976770,-7.557052]],[[4.032589,9.434249,1.065929,-6.174780,-5.071901,6.835289,-3.095623],[-3.437726,-9.400020,9.150626,-0.358667,8.400517,-6.747642,-7.784039],[2.942974,1.107016,-7.201052,-2.503834,0.975939,-0.001428,-9.276566],[-8.342229,9.695341,-6.558079,2.856811,5.482674,0.797266,3.804159],[5.010409,-2.354649,2.506213,9.276065,1.418794,8.229781,-7.032009],[-7.013439,-0.645215,-0.779554,5.641748,3.111656,-3.997995,3.965486],[3.733321,1.440947,-7.739875,5.746984,6.194748,7.696640,7.329386],[-4.476478,-9.029490,-8.349152,3.949278,-1.248667,-0.346810,9.243588],[-7.978410,-3.838498,-2.336569,-6.637796,-5.418259,-0.865828,2.633152],[-8.042764,-2.066598,-0.045545,0.391194,1.851587,4.723063,0.821065],[-3.463256,-1.962758,2.920289,-7.696444,0.037748,6.882012,6.602888],[8.192126,9.264674,7.384410,-2.188874,2.208823,-2.462820,-5.588631],[-3.232880,7.599975,7.577071,-0.652831,3.720653,-7.398827,6.874972],[-3.702830,0.509280,2.337581,2.773966,-9.145466,0.106575,1.216301],[1.598917,4.627960,8.467849,-3.283321,1.482453,-5.098723,2.683317],[0.132056,-1.654898,6.761476,6.201678,-2.316675,2.617799,8.765839]],[[-8.558387,7.126649,-6.514478,-1.562440,2.498421,-9.347884,3.270912],[9.227886,9.262720,4.532739,-9.061366,3.800944,-9.071083,-7.265829],[0.670709,-9.786305,-5.249555,0.974337,-2.566363,1.972166,-1.137656],[-0.565570,-8.790324,-5.492387,-0.005720,1.067833,4.247843,4.169513],[-6.652524,4.945538,6.473540,-5.727922,9.739770,-0.411645,7.105467],[-6.724568,-4.672072,2.893945,-8.296248,-5.471381,4.056693,-6.516088],[9.397847,-0.227179,7.477903,2.546218,6.872504,0.076383,0.642414],[4.902307,6.951184,-8.542556,-0.213602,-2.241484,5.540031,-8.524331],[-0.419769,6.231346,-5.699996,2.221023,-8.103866,-2.270869,-6.367563],[-4.814812,3.051858,-1.901580,9.631764,-1.257395,-6.795556,6.806614],[-5.201590,6.832068,-4.516154,-5.997849,-7.517879,-3.741108,-8.747074],[5.392729,-8.586695,-4.335478,6.181512,-9.390842,4.039206,-5.558244],[3.646106,3.505799,4.237287,-0.786343,-6.331566,-7.317321,9.465575],[6.535420,5.066174,-1.891979,-9.550838,-3.411744,-0.902989,2.554125],[0.518976,3.961386,0.272488,-7.877503,7.584444,-0.500960,5.006407],[4.860779,6.401318,-9.586716,6.773864,8.493667,2.949806,0.145319]]], dtype = "float32")#candidate|2430|(10, 16, 7)|const|float32
uop_2431 = relay.rsqrt(const_2430.astype('float32')) # shape=(10, 16, 7)
bop_2435 = relay.left_shift(uop_2431.astype('int64'), relay.reshape(const_2430.astype('int64'), relay.shape_of(uop_2431))) # shape=(10, 16, 7)
bop_2439 = relay.bitwise_and(bop_2435.astype('int64'), relay.reshape(uop_2431.astype('int64'), relay.shape_of(bop_2435))) # shape=(10, 16, 7)
func_470_call = mod.get_global_var('func_470')
func_474_call = mutated_mod.get_global_var('func_474')
var_2466 = relay.var("var_2466", dtype = "int16", shape = (270,))#candidate|2466|(270,)|var|int16
call_2465 = relay.TupleGetItem(func_470_call(relay.reshape(var_2466.astype('int16'), [6, 5, 9]), relay.reshape(var_2466.astype('int16'), [6, 5, 9]), ), 1)
call_2467 = relay.TupleGetItem(func_474_call(relay.reshape(var_2466.astype('int16'), [6, 5, 9]), relay.reshape(var_2466.astype('int16'), [6, 5, 9]), ), 1)
var_2469 = relay.var("var_2469", dtype = "int64", shape = (10, 16, 7))#candidate|2469|(10, 16, 7)|var|int64
bop_2470 = relay.divide(bop_2435.astype('float64'), relay.reshape(var_2469.astype('float64'), relay.shape_of(bop_2435))) # shape=(10, 16, 7)
bop_2478 = relay.bitwise_or(bop_2470.astype('uint64'), relay.reshape(bop_2439.astype('uint64'), relay.shape_of(bop_2470))) # shape=(10, 16, 7)
output = relay.Tuple([call_2465,var_2466,bop_2478,])
output2 = relay.Tuple([call_2467,var_2466,bop_2478,])
func_2488 = relay.Function([var_2466,var_2469,], output)
mod['func_2488'] = func_2488
mod = relay.transform.InferType()(mod)
mutated_mod['func_2488'] = func_2488
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2488_call = mutated_mod.get_global_var('func_2488')
var_2490 = relay.var("var_2490", dtype = "int16", shape = (270,))#candidate|2490|(270,)|var|int16
var_2491 = relay.var("var_2491", dtype = "int64", shape = (10, 16, 7))#candidate|2491|(10, 16, 7)|var|int64
call_2489 = func_2488_call(var_2490,var_2491,)
output = call_2489
func_2492 = relay.Function([var_2490,var_2491,], output)
mutated_mod['func_2492'] = func_2492
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2608 = relay.var("var_2608", dtype = "float64", shape = (3, 10, 14))#candidate|2608|(3, 10, 14)|var|float64
uop_2609 = relay.log2(var_2608.astype('float64')) # shape=(3, 10, 14)
func_217_call = mod.get_global_var('func_217')
func_221_call = mutated_mod.get_global_var('func_221')
var_2619 = relay.var("var_2619", dtype = "float32", shape = (1540,))#candidate|2619|(1540,)|var|float32
call_2618 = relay.TupleGetItem(func_217_call(relay.reshape(var_2619.astype('float32'), [11, 14, 10]), relay.reshape(var_2619.astype('float32'), [11, 14, 10]), ), 0)
call_2620 = relay.TupleGetItem(func_221_call(relay.reshape(var_2619.astype('float32'), [11, 14, 10]), relay.reshape(var_2619.astype('float32'), [11, 14, 10]), ), 0)
func_328_call = mod.get_global_var('func_328')
func_333_call = mutated_mod.get_global_var('func_333')
const_2625 = relay.const([4,-4,8,6,-2,-7,-6,4,-5,-2,-2,8,-7,7,9,-3,-5,-10,6,-10,-4,-1,-7,10,7,10,2,3,8,-9,1,1,-9,-10,5,-5,4,-9,2,4,1,1,3,-3,6,-7,-3,5,-7,1,3,-3,2,10,1,-7,10,-8,-2,4,-4,-4,-9,-1,2,-2,-7,-3,-5,7,9,-10,10,3,-10,1,-8,-1,2,7,5,10,-2,-3,10,-7,-1,-9,5,-4,-7,-9,10,5,-3,7,-2,9,1,-3,9,-9,6,-3,8,-8,-4,3,6,-5,10,4,-8,6,-5,10,10,4,5,-9,-7,-9,3,-5,8,7,-4,10,5,3,8,2,1,5,5,9,2,-5,10,3,3,-7,-10,1], dtype = "uint16")#candidate|2625|(144,)|const|uint16
call_2624 = relay.TupleGetItem(func_328_call(relay.reshape(const_2625.astype('uint16'), [16, 3, 3]), relay.reshape(const_2625.astype('uint16'), [16, 3, 3]), relay.reshape(var_2619.astype('float32'), [1540,]), relay.reshape(var_2619.astype('bool'), [11, 14, 10]), ), 2)
call_2626 = relay.TupleGetItem(func_333_call(relay.reshape(const_2625.astype('uint16'), [16, 3, 3]), relay.reshape(const_2625.astype('uint16'), [16, 3, 3]), relay.reshape(var_2619.astype('float32'), [1540,]), relay.reshape(var_2619.astype('bool'), [11, 14, 10]), ), 2)
func_1017_call = mod.get_global_var('func_1017')
func_1019_call = mutated_mod.get_global_var('func_1019')
var_2636 = relay.var("var_2636", dtype = "float64", shape = (105,))#candidate|2636|(105,)|var|float64
call_2635 = func_1017_call(relay.reshape(var_2636.astype('float64'), [3, 5, 7]))
call_2637 = func_1017_call(relay.reshape(var_2636.astype('float64'), [3, 5, 7]))
uop_2662 = relay.atan(uop_2609.astype('float32')) # shape=(3, 10, 14)
func_328_call = mod.get_global_var('func_328')
func_333_call = mutated_mod.get_global_var('func_333')
call_2667 = relay.TupleGetItem(func_328_call(relay.reshape(const_2625.astype('uint16'), [16, 3, 3]), relay.reshape(const_2625.astype('uint16'), [16, 3, 3]), relay.reshape(call_2618.astype('float32'), [1540,]), relay.reshape(call_2624.astype('bool'), [11, 14, 10]), ), 1)
call_2668 = relay.TupleGetItem(func_333_call(relay.reshape(const_2625.astype('uint16'), [16, 3, 3]), relay.reshape(const_2625.astype('uint16'), [16, 3, 3]), relay.reshape(call_2618.astype('float32'), [1540,]), relay.reshape(call_2624.astype('bool'), [11, 14, 10]), ), 1)
output = relay.Tuple([call_2618,var_2619,call_2624,const_2625,call_2635,var_2636,uop_2662,call_2667,])
output2 = relay.Tuple([call_2620,var_2619,call_2626,const_2625,call_2637,var_2636,uop_2662,call_2668,])
func_2686 = relay.Function([var_2608,var_2619,var_2636,], output)
mod['func_2686'] = func_2686
mod = relay.transform.InferType()(mod)
mutated_mod['func_2686'] = func_2686
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2686_call = mutated_mod.get_global_var('func_2686')
var_2688 = relay.var("var_2688", dtype = "float64", shape = (3, 10, 14))#candidate|2688|(3, 10, 14)|var|float64
var_2689 = relay.var("var_2689", dtype = "float32", shape = (1540,))#candidate|2689|(1540,)|var|float32
var_2690 = relay.var("var_2690", dtype = "float64", shape = (105,))#candidate|2690|(105,)|var|float64
call_2687 = func_2686_call(var_2688,var_2689,var_2690,)
output = call_2687
func_2691 = relay.Function([var_2688,var_2689,var_2690,], output)
mutated_mod['func_2691'] = func_2691
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2723 = relay.const([[[2.642211,-2.413105,3.964226,4.690716,8.485984,2.986527],[-6.688795,-3.023390,-0.177904,9.450112,8.680830,5.534815],[2.082206,2.519844,-2.723340,-9.242659,-7.089798,1.634740],[3.695271,-1.991139,9.822874,8.523233,8.951566,-1.132783],[6.205197,-1.642282,3.016790,2.594260,-6.776531,-4.668838],[6.409832,-7.436261,-9.702827,0.158982,-6.928722,-0.238922],[9.495668,7.895532,1.710789,-3.596848,3.043041,-0.770437],[1.784596,5.704814,-4.184304,-0.498041,8.724457,-9.521937],[4.844871,8.465505,6.436575,6.724922,1.770077,8.643992],[-7.682628,8.302977,-9.877605,1.333926,5.224476,2.624825],[-7.316799,-2.155704,-8.755884,2.667022,-6.952535,6.284298],[-3.701015,3.754700,-8.549129,4.126243,-3.083418,-5.159403]],[[-6.861435,-8.478149,5.640004,5.016923,-5.762384,1.240826],[-8.236894,-4.549163,7.617908,-0.493120,-5.931620,-9.559997],[-9.667061,-1.221048,-2.688516,-6.695890,-2.276922,0.356282],[-6.807227,7.081638,-9.569420,-5.376836,-5.903547,1.565246],[-1.615438,7.666775,2.912210,6.320591,8.981720,5.423817],[6.125917,-9.721875,-5.078157,6.095383,6.095458,9.877002],[1.461028,-4.667834,-5.418780,3.026670,-0.624988,-4.556423],[-8.237204,2.734769,2.504689,-0.934919,-7.633652,-7.965103],[-9.937782,-9.974137,-0.242859,0.606348,1.614471,2.044600],[7.420348,-6.287906,-5.139986,-4.523082,0.945419,-2.831745],[-2.507344,8.553922,-1.136222,1.895449,2.400177,-6.631556],[-4.120371,4.172108,8.480621,3.035424,4.877248,-4.873382]],[[-8.148692,5.239462,7.962455,-5.021292,-6.959444,-0.337021],[0.349319,7.534498,1.501829,3.217421,3.763031,4.796811],[2.644426,4.883983,7.840811,-7.829127,-1.342820,6.733053],[-7.565612,6.940098,0.189476,2.432753,-5.774039,1.785761],[-4.082347,4.116882,0.299818,-8.675839,2.584968,8.557381],[-3.814470,9.907384,9.013380,-8.286639,-7.592584,-4.973810],[5.511864,9.867354,-8.914874,-7.745624,1.540551,-3.668398],[-1.577590,4.445293,2.800666,-7.555204,3.048158,-4.521718],[-1.203697,-0.187598,3.973172,-2.956799,-6.430173,-1.100410],[-8.079248,6.586757,-3.318485,-2.152559,-7.634391,-2.725118],[9.759489,9.098635,-5.405114,5.331785,-1.538734,-8.898073],[4.379501,0.135640,-2.720587,-1.808853,-0.632293,-4.579956]],[[-1.556153,2.414204,-0.022403,-2.405725,6.063549,-3.457901],[0.998901,-9.501682,4.042803,3.380694,-5.958580,-6.523836],[-4.154825,1.130393,-6.627852,5.737895,8.821858,-9.029694],[2.017760,9.578437,-4.718597,-5.249570,6.390111,-3.046121],[9.947573,4.113206,-5.074164,-9.923770,4.777758,1.764102],[6.405489,-9.240654,9.784012,7.980908,9.749342,7.586602],[-9.277555,4.872649,2.173736,8.345823,-0.216809,-4.616590],[-2.302708,4.502665,-2.243574,-6.567031,-5.664190,-1.531446],[6.023262,-7.538229,-4.098227,-9.992733,2.652152,6.187245],[2.044929,-8.055403,6.168191,-2.784332,3.664195,0.848048],[-1.138515,-6.999629,-7.659752,7.600757,-5.238871,-7.354827],[6.964291,1.263620,2.421182,5.584777,0.595394,-1.249942]],[[-4.408789,6.049088,-9.283792,-9.022030,-5.186353,0.313273],[2.148297,-1.955208,-7.562209,8.235252,4.109255,9.321673],[1.838856,-1.476492,-6.778911,1.113107,4.884209,-2.725497],[-3.979030,7.498273,2.681517,7.814701,9.146866,-0.734418],[2.936360,5.810400,4.679166,2.643296,-7.604571,0.448267],[-0.262439,4.131716,2.937105,7.473566,-2.878251,-6.632511],[-1.439025,5.579345,5.815806,9.602517,0.113700,-7.140398],[8.183360,5.297369,5.760608,-7.601326,8.305643,1.046591],[-4.975089,-1.114258,2.795609,-2.645023,5.220474,8.976944],[-9.012041,1.138737,-5.272442,-9.998643,3.565950,8.446899],[-5.523690,-9.793457,9.882783,1.779387,-7.363403,6.560782],[-9.379529,8.460929,3.656175,6.110900,-0.294643,0.751843]],[[-6.481464,-6.824317,0.328862,-6.440926,-3.332831,7.609387],[-9.033208,8.302606,7.941532,8.682258,-6.647046,7.937336],[5.383441,1.729809,2.991612,-4.485074,-9.412686,2.682501],[-1.653582,-5.847772,-6.557695,6.824060,-4.978123,1.229847],[9.602446,5.572097,-4.412185,8.951744,7.683106,1.755585],[3.515020,-1.957755,-7.911480,0.634218,0.057413,0.863466],[3.561640,0.373506,3.155969,6.857953,8.073386,5.925727],[3.190960,4.229870,5.233830,9.994795,6.253648,7.289426],[7.838432,-0.911123,-7.832585,-0.902122,-3.677611,5.446081],[1.230547,-3.465793,8.923896,-7.832006,-2.843211,-7.739621],[-3.295913,-6.468927,4.830537,4.108964,-7.450385,-4.501046],[-2.777415,6.958298,-9.273327,-4.327689,9.695655,-7.503006]],[[-3.713359,-6.597848,-1.603684,2.039608,-0.544121,-4.403688],[7.573683,0.972260,-4.122274,-3.072376,-5.935317,9.444423],[-1.275995,-8.137202,7.814050,-9.883387,0.399311,-5.860289],[9.163401,-1.878445,-1.617845,-0.783105,0.753110,5.918084],[5.836674,-0.346738,8.019585,-7.141291,6.386648,-6.021530],[3.816687,0.991666,4.346891,-8.372864,3.850859,-9.057262],[-0.918835,6.669872,-5.544364,8.787106,-5.116744,-0.392573],[0.278319,1.794286,2.123445,1.760525,-0.167808,-3.479735],[8.265487,8.304482,7.645033,-1.569704,-8.927564,1.525040],[-7.271400,-1.836072,-4.287887,4.532190,2.008030,6.157283],[-9.039598,2.062568,5.143905,-6.082353,-5.613997,3.665957],[7.142366,2.510401,1.314731,1.220073,0.110597,-6.750323]],[[-9.261173,-5.153892,-0.012191,-1.540958,-8.589411,2.798168],[9.791031,-8.444284,1.837388,-9.125977,4.347165,-1.739722],[-3.505135,2.779431,1.424859,-9.561233,6.040047,0.318448],[-7.455908,-1.424158,0.603357,-7.388581,4.292068,4.722486],[-9.743582,0.323325,6.319523,-6.490341,2.078343,-0.526687],[0.820747,-2.139641,9.689576,-0.159188,-2.472177,-4.498306],[-0.023936,-0.406371,-1.682754,6.212702,3.609711,-5.257979],[-9.213075,3.999361,-9.241077,4.762226,-9.261626,-1.132842],[5.886512,7.468090,4.491711,-6.252109,-6.443394,8.207106],[-4.225062,1.393500,-2.096999,-5.352777,-0.333278,-6.225194],[8.128497,-6.515233,-2.563362,4.651637,4.826633,8.004678],[3.209880,-8.793809,-5.043570,-2.683047,-4.225296,3.810132]],[[3.380919,-4.726206,0.437959,0.600359,-8.607833,-6.011767],[-7.177428,-2.007676,-5.491258,8.752940,8.928100,4.446772],[9.110578,-6.032699,5.822628,-0.459529,-8.825659,-0.157688],[-8.580220,-8.796293,3.502447,0.793864,7.834274,4.177755],[0.706764,9.149531,-2.963629,-5.101970,-7.449073,-9.833459],[-2.688074,-8.675288,5.502649,-3.736194,-7.848491,-0.728902],[4.385161,-7.434513,0.485814,-5.846257,-5.052080,-1.262806],[-4.513731,-5.147623,1.635665,-8.750240,-8.072590,-8.140914],[6.676987,4.457171,-1.306534,8.730119,1.987171,-6.989449],[3.095061,6.412516,-9.173177,2.790742,-5.532401,5.261585],[-4.519680,-3.200453,-6.061546,-0.428729,7.130860,-3.269015],[8.425385,-4.405001,9.648261,8.855910,2.567497,-6.763209]],[[-6.373366,1.454076,1.603237,7.422406,-9.165494,-8.041584],[-7.500811,5.035408,-1.358759,0.674386,4.121949,-2.062274],[-3.627651,-0.370581,-7.847798,5.830484,-0.324852,-0.028006],[4.543004,1.273377,3.225897,9.791601,-5.055422,4.353607],[-7.626512,-1.836385,-7.448876,-4.830984,-7.479018,6.273577],[6.139351,-2.940274,7.912427,3.621002,-3.621276,-8.094917],[3.003105,3.570050,-2.465439,-5.930875,-3.963337,1.549857],[-9.453509,3.890236,-9.162171,6.053983,-9.964254,6.316595],[-3.812528,-2.576398,1.402383,-6.006193,-6.245150,-6.487307],[9.727534,9.531212,0.987097,-7.272117,-7.420619,-6.587324],[-7.234986,-4.236322,9.788893,-5.387176,9.753310,-2.424599],[-7.568412,5.328383,1.267007,3.606144,-1.396056,-1.560833]],[[9.817520,7.624747,-9.682861,-0.717843,-3.143663,2.160420],[-7.344565,4.569701,9.243464,-7.986537,4.732686,-9.787426],[4.482702,2.889540,3.808664,5.758118,-9.951256,-8.390389],[2.370664,-5.296822,-1.455303,4.397931,1.915161,-2.674595],[4.752703,-4.494741,-3.296732,7.109199,6.795677,2.879203],[-9.603007,2.374404,-6.978551,8.398699,4.935129,2.072608],[-2.468277,-9.173856,1.899349,-6.748394,-1.449041,4.854315],[9.237833,-7.028365,2.240890,6.124490,6.593386,3.450578],[6.636649,6.154035,-6.428932,-7.088965,1.805441,-6.644856],[3.037248,8.210491,-6.396675,-7.026912,5.369840,-4.092197],[-9.821662,-3.734206,-4.666736,7.429654,6.810485,-2.237347],[4.465351,-0.508440,-1.722938,-6.973582,2.505521,8.583478]]], dtype = "float32")#candidate|2723|(11, 12, 6)|const|float32
uop_2724 = relay.sqrt(const_2723.astype('float32')) # shape=(11, 12, 6)
func_614_call = mod.get_global_var('func_614')
func_617_call = mutated_mod.get_global_var('func_617')
const_2729 = relay.const([-0.374217,6.840451,-8.154454,3.029941,-8.007203,-8.324941,8.398105,-1.798503,6.522222,8.835934,9.753322,3.200905,-5.740390,-8.827578,1.451424,8.209412,-0.936453,6.252145,-7.527740,-8.631207,-8.127622,-5.286642,8.020652,3.913103,-3.152989,-3.904067,-6.578550,6.718789,1.604861,-0.011048,-2.087757,-3.821938,-8.052861,-7.547028,-8.622269,-2.992711,9.957519,5.406106,8.053420,-8.809255,5.297663,1.908348,-0.706364,-6.607220,5.593176,-8.913214,-5.153111,-8.695412,-3.385667,-1.644935,6.945480,9.370147,1.000132,4.782632,-5.466871,-6.618279,0.018033,1.293579,-8.701989,4.165825,-2.842394,6.003707,-5.952622,-6.785721,-1.574592,1.560118,2.648763,4.831910,5.445487,8.169067,-0.593593,6.690922,9.905556,2.375233,-5.068491,1.532644,-0.076559,-6.263319,-4.701641,4.659725,2.901352,5.809728,9.351733,0.564864,3.561928,-5.604626,-0.231011,3.938218,-1.477778,9.992755,0.038420,-5.041503,1.490838,-9.477634,8.461775,1.601580,0.743095,3.396448,1.526976,8.746539,1.215806,-4.978171,-0.501374,0.227625,-5.351981,7.618170,-0.423937,2.423932,-4.572227,8.387029,2.888844,-0.817845,4.856430,8.794679,-1.372463,-5.787157,5.917880,1.473798,-5.453123,-2.088531,0.499923,3.746683,5.819848,-0.249585,-0.546834,2.022252,-0.005260,-4.230692,2.763226,-5.428470,7.297454,7.908021,0.119690,-2.621847,-7.564332,-1.550369,-6.865410,4.218077,-0.608934,-6.354584,6.165232,-8.525177,0.214293,-4.690740,-0.321642,7.925158,6.028211,-1.842877,1.142327,-1.963589,-3.553705,-5.055713,-6.302696,-6.243574,6.593708,-1.360598,0.502502,-4.877630,9.532942,0.275296,0.360569,0.317177,-9.112063,0.418360,-4.971795,3.086529,-6.936122,-3.448315,6.251237,2.227902,3.454872,9.717633,-8.243534,5.063115,-7.444228,1.192278,2.799024,-8.923489,0.703093,-4.335337,-0.957996,-9.200495,0.085364,1.499463,1.142917,0.721395,-5.288380,7.473047,-8.145479,5.015182,-3.950337,-3.702381,2.225431,0.919137,-3.573189,1.471949,6.735057,9.264687,-8.013953,6.207132,5.084457,-5.914043,3.882588,-7.133501,-5.830363,6.156033,-1.814022,8.298059,-0.381536,-9.513790,-7.565256,9.025077,4.189881,-3.141663,-0.898145,-7.122870,-2.184509,1.466811,-8.276159,6.413248,5.213543,7.404315,-1.377135,-6.156249,9.644196], dtype = "float64")#candidate|2729|(225,)|const|float64
const_2730 = relay.const([[9,5,-8,6,6,7,-3,4,9,-8,-5,-4,8,1,-5,3,-6,3,-3,-9,-7,8,5,-7,9,-1,8,5,9,-5,-8,8,9,7,4,-2,2,10,6,-4,-3,-7,2,6,7],[-10,2,-8,-3,2,1,-8,-7,-10,6,-6,-1,-1,-7,8,10,9,-8,-2,2,-6,-9,-5,3,-9,-9,9,10,-7,-8,-10,-5,-8,-8,1,4,10,-4,-2,-10,7,8,3,7,-4],[7,3,5,-4,-2,2,4,3,-8,-6,-8,10,-2,-5,-5,6,-4,-3,-10,1,-1,2,-4,-5,10,1,-8,-5,5,9,-8,9,4,3,8,8,7,-7,4,3,5,3,6,2,-7],[-9,-4,9,2,-1,-5,2,-8,-3,10,8,4,7,-1,-1,-7,-3,1,-10,3,-5,-2,-10,-5,3,-1,-9,6,2,2,-6,-4,-4,3,9,-7,4,-1,-8,-7,2,-5,2,-8,9],[-8,10,3,8,-10,-2,3,-4,10,3,-6,5,7,-3,2,6,4,-5,-2,5,-1,-8,-6,-9,6,-4,-8,-4,-6,1,-8,9,2,10,-6,7,5,10,-8,8,2,8,10,-4,-10],[6,1,-9,9,9,8,3,-1,-5,-3,-5,-4,4,5,-2,-4,-3,4,-9,5,6,-4,-7,3,6,-4,10,3,3,3,-3,2,3,-9,-8,-2,6,-5,-3,-6,4,-9,9,10,10]], dtype = "int16")#candidate|2730|(6, 45)|const|int16
call_2728 = relay.TupleGetItem(func_614_call(relay.reshape(const_2729.astype('float64'), [1, 15, 15]), relay.reshape(const_2730.astype('int16'), [270,]), ), 3)
call_2731 = relay.TupleGetItem(func_617_call(relay.reshape(const_2729.astype('float64'), [1, 15, 15]), relay.reshape(const_2730.astype('int16'), [270,]), ), 3)
output = relay.Tuple([uop_2724,call_2728,const_2729,const_2730,])
output2 = relay.Tuple([uop_2724,call_2731,const_2729,const_2730,])
func_2738 = relay.Function([], output)
mod['func_2738'] = func_2738
mod = relay.transform.InferType()(mod)
mutated_mod['func_2738'] = func_2738
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2738_call = mutated_mod.get_global_var('func_2738')
call_2739 = func_2738_call()
output = call_2739
func_2740 = relay.Function([], output)
mutated_mod['func_2740'] = func_2740
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2738_call = mod.get_global_var('func_2738')
func_2740_call = mutated_mod.get_global_var('func_2740')
call_2759 = relay.TupleGetItem(func_2738_call(), 1)
call_2760 = relay.TupleGetItem(func_2740_call(), 1)
output = relay.Tuple([call_2759,])
output2 = relay.Tuple([call_2760,])
func_2789 = relay.Function([], output)
mod['func_2789'] = func_2789
mod = relay.transform.InferType()(mod)
mutated_mod['func_2789'] = func_2789
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2789_call = mutated_mod.get_global_var('func_2789')
call_2790 = func_2789_call()
output = call_2790
func_2791 = relay.Function([], output)
mutated_mod['func_2791'] = func_2791
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2804 = relay.var("var_2804", dtype = "uint64", shape = ())#candidate|2804|()|var|uint64
var_2805 = relay.var("var_2805", dtype = "uint64", shape = (4, 11, 3))#candidate|2805|(4, 11, 3)|var|uint64
bop_2806 = relay.add(var_2804.astype('uint64'), var_2805.astype('uint64')) # shape=(4, 11, 3)
output = relay.Tuple([bop_2806,])
output2 = relay.Tuple([bop_2806,])
func_2810 = relay.Function([var_2804,var_2805,], output)
mod['func_2810'] = func_2810
mod = relay.transform.InferType()(mod)
var_2811 = relay.var("var_2811", dtype = "uint64", shape = ())#candidate|2811|()|var|uint64
var_2812 = relay.var("var_2812", dtype = "uint64", shape = (4, 11, 3))#candidate|2812|(4, 11, 3)|var|uint64
output = func_2810(var_2811,var_2812,)
func_2813 = relay.Function([var_2811,var_2812,], output)
mutated_mod['func_2813'] = func_2813
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2789_call = mod.get_global_var('func_2789')
func_2791_call = mutated_mod.get_global_var('func_2791')
call_2867 = relay.TupleGetItem(func_2789_call(), 0)
call_2868 = relay.TupleGetItem(func_2791_call(), 0)
func_470_call = mod.get_global_var('func_470')
func_474_call = mutated_mod.get_global_var('func_474')
var_2870 = relay.var("var_2870", dtype = "int16", shape = (270,))#candidate|2870|(270,)|var|int16
call_2869 = relay.TupleGetItem(func_470_call(relay.reshape(var_2870.astype('int16'), [6, 5, 9]), relay.reshape(var_2870.astype('int16'), [6, 5, 9]), ), 0)
call_2871 = relay.TupleGetItem(func_474_call(relay.reshape(var_2870.astype('int16'), [6, 5, 9]), relay.reshape(var_2870.astype('int16'), [6, 5, 9]), ), 0)
func_1017_call = mod.get_global_var('func_1017')
func_1019_call = mutated_mod.get_global_var('func_1019')
var_2884 = relay.var("var_2884", dtype = "float64", shape = (105,))#candidate|2884|(105,)|var|float64
call_2883 = func_1017_call(relay.reshape(var_2884.astype('float64'), [3, 5, 7]))
call_2885 = func_1017_call(relay.reshape(var_2884.astype('float64'), [3, 5, 7]))
func_1017_call = mod.get_global_var('func_1017')
func_1019_call = mutated_mod.get_global_var('func_1019')
call_2900 = func_1017_call(relay.reshape(call_2883.astype('float64'), [3, 5, 7]))
call_2901 = func_1017_call(relay.reshape(call_2883.astype('float64'), [3, 5, 7]))
output = relay.Tuple([call_2867,call_2869,var_2870,call_2883,var_2884,call_2900,])
output2 = relay.Tuple([call_2868,call_2871,var_2870,call_2885,var_2884,call_2901,])
func_2904 = relay.Function([var_2870,var_2884,], output)
mod['func_2904'] = func_2904
mod = relay.transform.InferType()(mod)
mutated_mod['func_2904'] = func_2904
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2904_call = mutated_mod.get_global_var('func_2904')
var_2906 = relay.var("var_2906", dtype = "int16", shape = (270,))#candidate|2906|(270,)|var|int16
var_2907 = relay.var("var_2907", dtype = "float64", shape = (105,))#candidate|2907|(105,)|var|float64
call_2905 = func_2904_call(var_2906,var_2907,)
output = call_2905
func_2908 = relay.Function([var_2906,var_2907,], output)
mutated_mod['func_2908'] = func_2908
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2738_call = mod.get_global_var('func_2738')
func_2740_call = mutated_mod.get_global_var('func_2740')
call_2952 = relay.TupleGetItem(func_2738_call(), 1)
call_2953 = relay.TupleGetItem(func_2740_call(), 1)
uop_2971 = relay.exp(call_2952.astype('float32')) # shape=(11, 14, 10)
uop_2973 = relay.exp(call_2953.astype('float32')) # shape=(11, 14, 10)
func_1017_call = mod.get_global_var('func_1017')
func_1019_call = mutated_mod.get_global_var('func_1019')
var_2982 = relay.var("var_2982", dtype = "float64", shape = (105,))#candidate|2982|(105,)|var|float64
call_2981 = func_1017_call(relay.reshape(var_2982.astype('float64'), [3, 5, 7]))
call_2983 = func_1017_call(relay.reshape(var_2982.astype('float64'), [3, 5, 7]))
output = relay.Tuple([uop_2971,call_2981,var_2982,])
output2 = relay.Tuple([uop_2973,call_2983,var_2982,])
func_2989 = relay.Function([var_2982,], output)
mod['func_2989'] = func_2989
mod = relay.transform.InferType()(mod)
var_2990 = relay.var("var_2990", dtype = "float64", shape = (105,))#candidate|2990|(105,)|var|float64
output = func_2989(var_2990)
func_2991 = relay.Function([var_2990], output)
mutated_mod['func_2991'] = func_2991
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3000 = relay.const([[[5.835530],[1.623636],[5.981034],[-6.089365],[3.704422],[6.624544],[-1.709140],[-4.888179],[4.562008],[-0.968102],[-8.959119],[8.482495],[-6.026536],[-8.527263],[-0.937058],[-7.673572]],[[-6.740864],[2.728220],[-2.774270],[-7.118007],[-9.135954],[9.736605],[6.449116],[5.448446],[-6.729834],[8.176851],[-6.348636],[-9.309766],[5.772145],[1.156179],[-5.088928],[5.857143]],[[0.217837],[6.561117],[7.285934],[-2.931551],[7.795304],[-5.981508],[3.559454],[6.096357],[-3.728480],[9.692646],[3.191073],[7.425457],[-0.095233],[-9.833563],[-8.819189],[9.850347]],[[7.959487],[9.537983],[-7.839236],[-1.388524],[-3.921475],[2.619329],[-7.981474],[2.246008],[0.919359],[-3.098327],[1.898445],[5.775894],[-9.233610],[-2.101776],[-8.604176],[-6.527292]],[[-5.948129],[-5.971296],[4.847706],[-6.446437],[7.207170],[-3.549495],[2.581167],[-4.323694],[-4.209932],[6.532965],[-2.318581],[4.846437],[2.887601],[-7.082335],[7.978552],[7.775720]],[[-8.745316],[5.782775],[-7.846285],[6.881407],[2.046383],[-2.864440],[-9.237687],[2.911142],[0.969234],[-6.275494],[-6.540463],[-4.393446],[2.213985],[5.163782],[3.042342],[1.203893]],[[-3.312978],[-8.380187],[-5.652916],[-4.935917],[1.215397],[-5.626078],[-4.083841],[-3.822091],[5.481382],[0.335140],[-2.551357],[8.210829],[-8.748113],[-8.070156],[2.174776],[-2.128803]],[[-3.036198],[-2.061341],[-7.373622],[-2.974209],[9.827751],[1.451454],[0.744946],[2.666892],[-5.087610],[-2.054818],[-4.983926],[9.723754],[-1.334329],[2.185830],[4.993184],[4.016565]],[[-8.043650],[-9.996223],[-0.406612],[-4.110706],[-6.698472],[7.436056],[2.162937],[-6.899034],[-4.202137],[-9.963840],[-3.233264],[3.417191],[0.846713],[-8.557044],[-2.672915],[8.029401]],[[7.696278],[-7.023506],[-5.138161],[-3.156708],[-4.172430],[-4.782031],[-7.697701],[-1.558194],[7.324971],[-0.379981],[-1.003055],[-1.215420],[-9.867469],[-1.371378],[-2.373510],[7.814151]],[[5.263336],[-2.560875],[-9.420472],[-5.143600],[-0.759913],[-2.828575],[2.095179],[0.271545],[3.962652],[-5.729411],[-3.257682],[0.737920],[2.732674],[2.335984],[6.686159],[-7.591755]],[[-6.573448],[8.278931],[4.110528],[-8.964241],[-5.012161],[-9.748022],[3.140067],[9.679129],[4.479610],[-7.928785],[-3.088645],[-6.265560],[5.839107],[-5.095576],[-7.979967],[4.075825]],[[6.078120],[5.660211],[3.890603],[-7.182188],[-5.695617],[9.217512],[4.288190],[-0.096046],[0.107694],[-5.698086],[5.145804],[0.659173],[-4.629212],[2.118856],[-3.653649],[-2.230060]]], dtype = "float64")#candidate|3000|(13, 16, 1)|const|float64
var_3001 = relay.var("var_3001", dtype = "float64", shape = (13, 16, 3))#candidate|3001|(13, 16, 3)|var|float64
bop_3002 = relay.power(const_3000.astype('float64'), var_3001.astype('float64')) # shape=(13, 16, 3)
func_2810_call = mod.get_global_var('func_2810')
func_2813_call = mutated_mod.get_global_var('func_2813')
var_3018 = relay.var("var_3018", dtype = "uint64", shape = ())#candidate|3018|()|var|uint64
const_3019 = relay.const([4,7,-8,-7,9,-7,8,3,-4,7,-3,-6,5,9,10,-4,-3,-6,-5,1,9,-4,2,5,10,-4,1,3,7,9,-9,-4,3,5,-2,-4,4,10,-5,4,6,-8,9,-4,5,-4,8,9,7,-9,-2,-10,1,6,4,9,7,-9,-3,5,-8,-4,-8,-6,-9,-3,-8,-9,2,2,3,-6,-3,1,9,5,6,4,2,-6,-4,2,-2,10,-6,2,8,-2,-4,-8,-8,10,2,-5,-3,7,-1,-3,10,9,-8,5,-10,8,1,-8,-8,-4,-2,5,1,-7,1,-5,3,-8,6,10,2,3,3,4,-2,4,-7,-1,2,-1,10,-5,4,6], dtype = "uint64")#candidate|3019|(132,)|const|uint64
call_3017 = relay.TupleGetItem(func_2810_call(relay.reshape(var_3018.astype('uint64'), []), relay.reshape(const_3019.astype('uint64'), [4, 11, 3]), ), 0)
call_3020 = relay.TupleGetItem(func_2813_call(relay.reshape(var_3018.astype('uint64'), []), relay.reshape(const_3019.astype('uint64'), [4, 11, 3]), ), 0)
var_3034 = relay.var("var_3034", dtype = "float64", shape = (13, 16, 3))#candidate|3034|(13, 16, 3)|var|float64
bop_3035 = relay.right_shift(bop_3002.astype('uint64'), relay.reshape(var_3034.astype('uint64'), relay.shape_of(bop_3002))) # shape=(13, 16, 3)
output = relay.Tuple([call_3017,var_3018,const_3019,bop_3035,])
output2 = relay.Tuple([call_3020,var_3018,const_3019,bop_3035,])
func_3045 = relay.Function([var_3001,var_3018,var_3034,], output)
mod['func_3045'] = func_3045
mod = relay.transform.InferType()(mod)
var_3046 = relay.var("var_3046", dtype = "float64", shape = (13, 16, 3))#candidate|3046|(13, 16, 3)|var|float64
var_3047 = relay.var("var_3047", dtype = "uint64", shape = ())#candidate|3047|()|var|uint64
var_3048 = relay.var("var_3048", dtype = "float64", shape = (13, 16, 3))#candidate|3048|(13, 16, 3)|var|float64
output = func_3045(var_3046,var_3047,var_3048,)
func_3049 = relay.Function([var_3046,var_3047,var_3048,], output)
mutated_mod['func_3049'] = func_3049
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3076 = relay.var("var_3076", dtype = "uint8", shape = ())#candidate|3076|()|var|uint8
const_3077 = relay.const([[[-10,6,10,-5,1,8,1,-6,-7,-7,6],[3,1,-8,-3,-8,8,8,-7,8,10,-3],[-7,-7,-3,1,2,5,1,4,6,6,7],[1,-7,-1,7,10,-4,8,3,9,5,-1],[-7,8,-6,-9,-8,-8,-1,2,4,2,2],[7,1,-3,10,-3,-8,2,7,8,2,-10],[6,3,-5,7,-6,5,2,6,-3,-1,-9],[-4,4,10,9,-1,4,-4,-10,8,-7,5],[-2,-3,7,-3,-7,-1,-2,-9,2,5,-7],[-5,-2,-2,8,10,6,5,9,10,-9,-9],[3,-2,-1,3,8,4,2,8,-5,2,-2],[-7,-6,-9,7,6,9,8,-6,7,-8,-1],[8,10,8,5,8,-2,-8,-1,-10,-6,4],[-8,-5,-4,7,3,5,-1,5,4,7,-10],[-1,-9,-8,10,10,-2,-7,6,-2,-1,2]],[[1,-7,3,-4,-8,-5,-4,3,3,-5,8],[1,-8,-3,-1,3,4,-8,-6,1,-5,-3],[7,6,9,7,5,-1,3,4,-9,-8,6],[10,-8,6,-7,-4,-4,6,-2,-3,3,10],[8,-3,-8,9,-7,-8,2,-8,-4,3,1],[-3,2,-9,-10,4,2,4,-6,-6,4,8],[9,-4,8,-2,5,-1,-3,-4,1,10,5],[3,-9,-6,2,-10,2,5,9,9,3,3],[-2,9,-6,5,5,3,-7,-6,5,-4,-9],[-6,-6,-4,-5,-7,7,10,-6,-3,3,4],[6,-10,7,-5,1,-5,-6,-8,-10,-10,10],[10,-3,9,-10,-5,-5,7,-1,8,-6,8],[6,5,-10,2,-4,-8,-5,2,-1,4,-4],[-10,3,-6,3,-3,2,4,2,4,8,3],[-8,-3,-4,5,-7,-4,2,-1,5,-5,-3]],[[-1,-7,-1,6,2,-10,2,-1,-3,-3,1],[6,2,10,-2,-10,-8,-9,-6,4,8,-3],[8,-9,-4,-10,10,1,-9,3,1,-6,2],[7,-10,-4,-7,-1,2,-7,-4,3,3,8],[-4,5,4,-4,7,-2,6,-7,4,-7,-10],[3,9,8,10,6,-6,-9,4,-7,-9,-10],[-7,-6,-5,-7,7,-8,8,10,5,3,-9],[-4,-10,-6,9,1,-4,-9,2,-3,8,5],[1,-7,5,8,4,9,-2,-2,2,9,4],[5,5,-5,1,-10,-7,-1,-7,-6,-2,7],[-1,-4,-6,-9,2,4,-1,-10,-1,7,7],[2,-8,7,5,-1,-2,-7,2,9,-9,-1],[4,-5,4,-2,-1,-5,5,6,-5,-4,5],[-7,9,-9,9,-7,1,-7,-5,6,-5,2],[4,-10,6,-7,-7,-6,-10,-3,6,1,3]]], dtype = "uint8")#candidate|3077|(3, 15, 11)|const|uint8
bop_3078 = relay.less_equal(var_3076.astype('bool'), const_3077.astype('bool')) # shape=(3, 15, 11)
bop_3082 = relay.divide(var_3076.astype('float32'), const_3077.astype('float32')) # shape=(3, 15, 11)
const_3092 = relay.const([[[False,False,True,False,True,False,False,False,True,False,False],[True,True,False,False,True,True,True,True,False,True,False],[False,True,False,False,True,False,False,True,False,False,True],[False,False,True,False,False,True,True,False,True,False,True],[False,True,False,True,False,True,True,True,True,True,False],[False,True,True,False,True,False,False,True,False,False,True],[True,False,True,False,True,True,False,False,False,False,True],[False,True,True,True,False,False,False,True,True,False,False],[False,False,True,True,True,False,True,True,True,False,False],[False,False,True,True,False,True,True,False,False,True,True],[True,False,True,False,False,False,True,True,False,True,True],[True,False,False,True,True,False,False,True,False,False,False],[True,True,False,True,False,True,True,True,False,True,True],[False,True,False,False,False,True,True,True,False,False,False],[True,False,True,True,False,True,True,True,True,False,False]],[[True,True,True,False,True,False,True,False,False,True,True],[False,True,True,True,False,False,True,True,False,False,True],[False,True,True,True,False,False,False,True,True,True,False],[False,False,True,False,True,True,False,False,False,False,True],[True,True,False,False,True,True,False,True,False,False,True],[True,True,True,False,True,False,True,True,True,True,True],[False,True,False,False,False,False,False,False,True,False,False],[True,False,True,False,False,False,False,True,True,False,False],[True,False,False,True,True,True,False,False,False,True,True],[False,True,True,False,True,False,True,True,False,True,True],[True,True,False,True,False,True,True,False,True,False,False],[True,True,True,False,False,True,False,True,False,False,False],[False,False,True,False,False,True,False,True,False,True,False],[False,False,False,True,True,False,True,True,False,False,True],[True,True,True,False,True,False,True,False,False,True,False]],[[True,True,False,False,True,True,True,False,False,True,False],[False,True,False,True,False,True,True,False,False,True,True],[True,True,True,True,False,True,True,True,True,True,False],[False,True,True,True,False,True,True,False,False,False,True],[False,True,True,True,False,True,False,True,True,True,True],[False,True,True,True,False,True,False,True,True,False,True],[True,False,True,False,True,True,False,True,False,False,False],[True,False,True,True,False,False,False,True,True,False,False],[True,True,True,False,True,False,True,False,True,False,False],[True,True,True,False,True,True,True,False,True,False,False],[False,True,False,True,True,True,False,True,False,True,False],[True,True,False,True,True,False,True,True,False,False,False],[True,False,False,False,True,False,False,False,False,False,True],[False,True,True,True,False,False,True,True,True,False,True],[True,False,False,True,True,True,True,True,False,False,True]]], dtype = "bool")#candidate|3092|(3, 15, 11)|const|bool
bop_3093 = relay.add(bop_3078.astype('int16'), relay.reshape(const_3092.astype('int16'), relay.shape_of(bop_3078))) # shape=(3, 15, 11)
output = relay.Tuple([bop_3082,bop_3093,])
output2 = relay.Tuple([bop_3082,bop_3093,])
func_3100 = relay.Function([var_3076,], output)
mod['func_3100'] = func_3100
mod = relay.transform.InferType()(mod)
var_3101 = relay.var("var_3101", dtype = "uint8", shape = ())#candidate|3101|()|var|uint8
output = func_3100(var_3101)
func_3102 = relay.Function([var_3101], output)
mutated_mod['func_3102'] = func_3102
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2738_call = mod.get_global_var('func_2738')
func_2740_call = mutated_mod.get_global_var('func_2740')
call_3163 = relay.TupleGetItem(func_2738_call(), 2)
call_3164 = relay.TupleGetItem(func_2740_call(), 2)
func_2810_call = mod.get_global_var('func_2810')
func_2813_call = mutated_mod.get_global_var('func_2813')
var_3168 = relay.var("var_3168", dtype = "uint64", shape = ())#candidate|3168|()|var|uint64
const_3169 = relay.const([-4,5,-3,-10,4,10,1,-1,5,1,-7,-2,8,-3,-8,2,5,1,-4,8,8,-7,2,-9,3,-2,-6,1,4,4,-10,5,6,3,8,9,9,-6,-3,8,4,-10,-6,6,-5,-3,1,-10,5,-8,-7,8,4,-7,-8,-4,-8,-3,-5,6,1,3,-7,-8,6,-5,6,9,7,6,-4,8,-5,6,-1,-10,-10,-4,-5,1,-2,-4,-4,-8,-8,8,5,4,6,1,-10,2,3,-1,10,-10,2,3,-7,-7,-3,7,-1,-9,-10,-4,1,-4,-2,3,-9,-6,-6,-5,10,-8,-6,-3,7,-4,4,1,4,10,-10,-9,5,-10,-6,2,6,9], dtype = "uint64")#candidate|3169|(132,)|const|uint64
call_3167 = relay.TupleGetItem(func_2810_call(relay.reshape(var_3168.astype('uint64'), []), relay.reshape(const_3169.astype('uint64'), [4, 11, 3]), ), 0)
call_3170 = relay.TupleGetItem(func_2813_call(relay.reshape(var_3168.astype('uint64'), []), relay.reshape(const_3169.astype('uint64'), [4, 11, 3]), ), 0)
func_470_call = mod.get_global_var('func_470')
func_474_call = mutated_mod.get_global_var('func_474')
var_3176 = relay.var("var_3176", dtype = "int16", shape = (270,))#candidate|3176|(270,)|var|int16
call_3175 = relay.TupleGetItem(func_470_call(relay.reshape(var_3176.astype('int16'), [6, 5, 9]), relay.reshape(var_3176.astype('int16'), [6, 5, 9]), ), 1)
call_3177 = relay.TupleGetItem(func_474_call(relay.reshape(var_3176.astype('int16'), [6, 5, 9]), relay.reshape(var_3176.astype('int16'), [6, 5, 9]), ), 1)
var_3182 = relay.var("var_3182", dtype = "float64", shape = (225,))#candidate|3182|(225,)|var|float64
bop_3183 = relay.bitwise_xor(call_3163.astype('int64'), relay.reshape(var_3182.astype('int64'), relay.shape_of(call_3163))) # shape=(225,)
bop_3186 = relay.bitwise_xor(call_3164.astype('int64'), relay.reshape(var_3182.astype('int64'), relay.shape_of(call_3164))) # shape=(225,)
uop_3193 = relay.sqrt(call_3167.astype('float64')) # shape=(4, 11, 3)
uop_3195 = relay.sqrt(call_3170.astype('float64')) # shape=(4, 11, 3)
output = relay.Tuple([var_3168,const_3169,call_3175,var_3176,bop_3183,uop_3193,])
output2 = relay.Tuple([var_3168,const_3169,call_3177,var_3176,bop_3186,uop_3195,])
func_3203 = relay.Function([var_3168,var_3176,var_3182,], output)
mod['func_3203'] = func_3203
mod = relay.transform.InferType()(mod)
var_3204 = relay.var("var_3204", dtype = "uint64", shape = ())#candidate|3204|()|var|uint64
var_3205 = relay.var("var_3205", dtype = "int16", shape = (270,))#candidate|3205|(270,)|var|int16
var_3206 = relay.var("var_3206", dtype = "float64", shape = (225,))#candidate|3206|(225,)|var|float64
output = func_3203(var_3204,var_3205,var_3206,)
func_3207 = relay.Function([var_3204,var_3205,var_3206,], output)
mutated_mod['func_3207'] = func_3207
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2738_call = mod.get_global_var('func_2738')
func_2740_call = mutated_mod.get_global_var('func_2740')
call_3222 = relay.TupleGetItem(func_2738_call(), 1)
call_3223 = relay.TupleGetItem(func_2740_call(), 1)
output = call_3222
output2 = call_3223
func_3231 = relay.Function([], output)
mod['func_3231'] = func_3231
mod = relay.transform.InferType()(mod)
output = func_3231()
func_3232 = relay.Function([], output)
mutated_mod['func_3232'] = func_3232
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3331 = relay.var("var_3331", dtype = "int16", shape = (11, 6, 3))#candidate|3331|(11, 6, 3)|var|int16
const_3332 = relay.const([[[9,1,-6],[5,-4,8],[6,-5,5],[-9,-5,-7],[-1,-6,2],[10,6,3]],[[2,8,10],[8,-2,-2],[6,-5,-10],[-4,3,9],[10,5,3],[-5,-5,2]],[[9,-3,4],[9,-9,-3],[-9,2,-8],[5,4,-3],[-7,-1,3],[10,-7,6]],[[8,-3,2],[-8,2,-10],[2,-10,7],[-3,-4,-9],[-10,-1,-1],[8,2,8]],[[7,2,-5],[2,10,-4],[-5,-3,1],[-8,-2,8],[5,5,-5],[-1,9,2]],[[8,1,-5],[-8,2,-1],[-5,4,5],[-3,7,-8],[-2,-5,-2],[5,2,-1]],[[1,-9,-1],[7,-9,-5],[4,7,-7],[6,-3,2],[-9,-9,-5],[9,-10,-10]],[[-1,6,2],[8,-1,-9],[-9,-2,5],[2,-3,6],[9,-3,-8],[-9,3,-10]],[[-9,3,3],[-10,5,9],[-4,-6,9],[-4,-1,-7],[-3,9,2],[-1,8,-10]],[[-3,5,10],[10,2,2],[1,-10,-4],[-3,-5,-3],[10,9,7],[10,10,2]],[[9,8,1],[5,-6,4],[3,-7,10],[5,-5,9],[-4,5,-6],[7,-10,-9]]], dtype = "int16")#candidate|3332|(11, 6, 3)|const|int16
bop_3333 = relay.bitwise_or(var_3331.astype('int16'), relay.reshape(const_3332.astype('int16'), relay.shape_of(var_3331))) # shape=(11, 6, 3)
uop_3341 = relay.cosh(bop_3333.astype('float32')) # shape=(11, 6, 3)
func_2686_call = mod.get_global_var('func_2686')
func_2691_call = mutated_mod.get_global_var('func_2691')
const_3344 = relay.const([[6.388982],[0.985836],[4.018403],[-0.373189],[7.011298],[4.229851],[-7.789441],[-3.219410],[-2.003185],[9.870168],[-0.732816],[-3.074685],[-7.287317],[2.574114],[-8.358043],[-6.566560],[8.980697],[8.427005],[5.583228],[-2.611964],[4.590151],[-6.055143],[-7.887004],[-2.421877],[-0.447453],[-6.629111],[-2.229532],[8.547320],[-0.130272],[9.750451],[-4.422486],[8.333214],[8.416252],[7.347739],[-4.106934],[-0.434432],[8.760309],[-8.132206],[8.870955],[-8.328409],[-3.618503],[-1.879995],[-2.654705],[-8.435064],[-3.664176],[2.564309],[1.069426],[-8.046764],[4.906573],[3.244795],[-1.146669],[9.871907],[-4.353498],[9.495119],[-7.230448],[9.582419],[-5.996956],[1.557126],[6.672425],[-8.537802],[-2.070958],[3.127174],[-8.836988],[-0.901388],[9.959559],[8.048943],[1.887338],[4.107958],[-1.857258],[2.636509],[-5.013224],[-0.748443],[-6.528786],[6.141254],[2.144266],[-8.788244],[3.555870],[5.685650],[6.068597],[5.851068],[1.775366],[-8.055683],[-3.709528],[-4.641377],[-8.051271],[0.001188],[-4.137784],[-9.080954],[-7.478576],[-3.446419],[3.607289],[9.732947],[-5.903177],[-9.422028],[-0.012067],[-2.385625],[-3.242978],[3.983862],[-8.690809],[-8.470371],[4.694103],[-2.384705],[5.137267],[0.019694],[-9.859163],[5.885706],[-5.538780],[0.090046],[5.420285],[-6.464561],[9.298335],[3.100796],[-0.445859],[-8.131683],[-5.854069],[3.388708],[8.753066],[6.627248],[-2.436664],[-6.405626],[-9.073080],[-6.267302],[-0.296171],[-1.124241],[2.832790],[4.008461],[5.252172],[6.634968],[1.447031],[0.858031],[-8.133059],[-4.793292],[-3.603328],[-6.500427],[-3.312181],[9.281702],[-8.921066],[9.410159],[2.453178],[-8.145879],[-2.105936],[-4.367785],[-2.765214],[7.844299],[0.823394],[5.466069],[-7.136658],[8.387686],[6.585144],[4.979348],[-6.908656],[-7.163310],[7.144349],[1.139350],[8.273926],[1.143409],[-2.059651],[-4.981615],[9.010808],[-8.972945],[-6.956308],[-0.240339],[9.966004],[3.516333],[9.174671],[-2.955156],[3.975421],[-0.703753],[-6.429118],[-1.345822],[8.548399],[-6.337454],[2.043793],[-6.439840],[-0.760881],[7.541011],[-7.879606],[2.980214],[-5.878763],[-6.800016],[-4.098928],[2.282722],[-6.865303],[-7.067011],[-9.916664],[-7.545498],[-8.507685],[1.968855],[5.693546],[4.100071],[-2.734001],[-0.324401],[-1.221425],[1.219686],[-3.915981],[1.619071],[-9.346418],[9.100757],[-2.021881],[-2.428717],[-8.105217],[3.171670],[3.002209],[-3.214560],[-0.181363],[-8.372920],[-1.986416],[-9.796435],[4.252793],[3.059428],[9.556581],[-5.918889],[-0.549733],[-7.707421],[1.179906],[0.954166],[-5.110222],[-5.190129],[3.691072],[-3.930438],[-6.058350],[-7.743675],[-9.999187],[-2.421550],[-1.919361],[6.949994],[-5.884765],[-1.503189],[4.800925],[3.378006],[0.133912],[-7.726433],[6.140658],[3.930005],[3.606000],[1.375929],[-5.843579],[8.447389],[-1.783053],[-7.009961],[5.633051],[-5.548885],[5.614586],[-0.159345],[-8.798888],[9.614493],[-2.848608],[3.829349],[3.865699],[-7.115610],[-6.080214],[-7.461006],[-2.036173],[2.118961],[9.278155],[0.222609],[-8.427905],[-3.563321],[-0.811765],[-8.427024],[1.969777],[-3.926339],[-9.239438],[4.698185],[-7.391473],[-8.557842],[5.600149],[-2.846591],[-3.179160],[-4.283467],[5.933269],[4.951977],[-8.082385],[-4.948110],[-5.518515],[6.655110],[-0.937664],[-5.949865],[4.710822],[-8.710070],[4.150121],[-9.359014],[-1.599742],[-0.215282],[6.006179],[-0.445856],[2.184399],[-5.291999],[-4.522625],[-8.140684],[2.326582],[-8.608129],[-1.060001],[-5.328476],[-1.659907],[9.114447],[-2.177549],[3.062067],[-2.301275],[7.953813],[-5.601373],[3.392568],[7.210422],[2.425890],[-5.620653],[3.260220],[7.761523],[3.158616],[-6.137487],[9.297699],[3.925187],[-5.325481],[7.216027],[-3.230616],[-1.051080],[3.360510],[4.087303],[-4.275536],[-1.456731],[-3.093978],[8.144067],[-7.574452],[5.418957],[-2.172384],[-2.349487],[0.845050],[9.761221],[6.806271],[6.670773],[-6.917119],[2.144169],[-5.545062],[-4.575395],[-8.119111],[8.675636],[6.968297],[-2.196292],[9.017942],[-9.434590],[6.309928],[-2.146483],[-9.760407],[-0.238237],[-8.241509],[5.121360],[3.519014],[-6.957880],[8.600741],[-9.320746],[0.806554],[6.628516],[0.933186],[-1.788186],[5.925105],[-7.450732],[1.575138],[4.168456],[-0.897502],[7.508686],[8.137263],[-9.404516],[-5.747257],[4.975127],[5.234533],[4.589760],[7.704462],[-1.640273],[-8.865828],[4.969999],[7.527895],[-3.305613],[-3.436997],[-7.833837],[1.388580],[6.712056],[-0.785386],[-1.397350],[-1.535368],[-9.905518],[3.010190],[-8.490292],[-2.715557],[7.350021],[-8.050111],[3.157161],[0.244042],[-9.887487],[2.180490],[-5.994688],[6.293240],[-3.761288],[7.192981],[-3.446973],[-6.600906],[-9.643475],[-0.548120],[-9.813381],[5.265398],[4.266096],[-5.358948],[6.343925],[-4.151236],[-2.908266],[-3.914791],[-4.360458],[-5.324322],[8.332459],[8.291249],[-1.846068],[-9.453353],[-2.584808],[7.958733],[-4.260008],[-5.373530],[-9.536363],[-0.183452],[-5.007058],[-5.427598],[-2.436082],[-5.090259]], dtype = "float64")#candidate|3344|(420, 1)|const|float64
var_3345 = relay.var("var_3345", dtype = "float32", shape = (1540,))#candidate|3345|(1540,)|var|float32
var_3346 = relay.var("var_3346", dtype = "float64", shape = (105,))#candidate|3346|(105,)|var|float64
call_3343 = relay.TupleGetItem(func_2686_call(relay.reshape(const_3344.astype('float64'), [3, 10, 14]), relay.reshape(var_3345.astype('float32'), [1540,]), relay.reshape(var_3346.astype('float64'), [105,]), ), 1)
call_3347 = relay.TupleGetItem(func_2691_call(relay.reshape(const_3344.astype('float64'), [3, 10, 14]), relay.reshape(var_3345.astype('float32'), [1540,]), relay.reshape(var_3346.astype('float64'), [105,]), ), 1)
func_1697_call = mod.get_global_var('func_1697')
func_1701_call = mutated_mod.get_global_var('func_1701')
const_3355 = relay.const([-1,-4,10,6,-2,-9,8,1,1,-1,6,-3,-4,7,-6,-4,1,-6,3,10,-4,4,-6,-1,-6,10,-10,-10,9,-4,6,-4,7,-7,-1,10,5,5,-8,6,1,-3,-10,7,-10,4,2,2,-9,-2,7,-6,-3,-2,1,4,-6,5,1,5,5,-9,9,-6,4,1,-9,4,9,-4,5,-2,-6,7,1,3,3,-4,-7,3,10,3,-10,-3,2,-9,7,8,-10,-3,8,10,-7,-6,-7,-6,-2,6,5,-2,7,3,-3,-9,5,6,7,-5,-10,-1,-9,-2,5,6,7,6,-7,10,-8,-5,-1,6,-8,-4,-1,3,-1,4,5,7,-6,-10,2,5,10,-4,-2,1,-1,-8,10,-4,-8,-9,6,7,-9,-7,8,10,3,-9,4,4,-4,10,6,9,2,-9,3,2,-4,2,10,-9,6,7,7,7,-6,7,1,-5,3,-3,1,-10,-4,-8,4,7,-5,-2,-8,6,-8,-7,1,3,-8,-2,-4,6,5,-2,3,-1,-4,3,-3,-5,3,9,-5,-10,3,-2,6,-4,-5,-2,-6,9,7,1,10,-1,9,9,-6,-7,-2,-5,10,-3,-6,3,9,3,3,-6,-3,8,-10,-7,5,-5,-4,9,-10,9,7,-1,4,-2,9,8,6,-5,2,-5,8,5,-10,4,-7,7,4,8,-1,3,-10,-5,8,5,4,8,-9,3,-9,1,-9,10,8,1,2,-1,-8,1,8,7,-7,3,-10,-7,-3,-7,-9,-6,-8,-8,5,-1,8,9,7,8,-1,-1,-7,-1,9,3,-6,-6,-7,3,4,3,5,7,-9,7,6,-10,6,-3,1,4,-4,2,-3,-3,8,-10,-9,-6,-4,8,-10,-4,2,-3,3,10,8,-9,6,9,-8,-6,9,-5,6,-6,-4,7,8,-10,-7,-8,-2,-5,7,-2,-6,3,-4,-10,-4,9,9,-3,-5,-9,5,9,-4,-6,10,-7,-8,-6,9,-5,4,-10,-1,9,-7,-10,6,10,4,3,5,4,8,-8,-6,9,-8,-3,3,-4,-4,1,-4,2,-6,-5,2,-6,9,-7,-6,7,5,-10,-3,9,1,-7,-2,4,-3,10,-8,4,-8,-2,-9,-8,-8,5,7,1,5,-2,9,4,4,-7,-8,-10,4,-3,-1,-9,3,2,-9,7,-5,8,4,-5,-6,3,-5,-2,-4,-4,-8,-4,9,1,1,10,5,-9,2,9,6,9,4,-10,6,1,-7,5,3,3,-3,9,3,-1,1,2,-2,1,-4,-4,7,6,-2,-1,8,8,-9,1,4,8,2,7,10,-1,2,-5,-3,-4,-2,2,1,1,-7,-5,-4,10,-2,9,-6,-8,-8,-7,4,7,-8,-7,-9,2,-3,-8,-1,-3,7,5,-4,4,-6,2,4,-7,8,-5,2,-2,-4,2,-3,8,-6,-3,-8,2,-8,5,6,6,5,1,-9,-2,7,8,-8,-8,-1,-5,-10,4,-5,-3,10,5,1,5,-10,2,-1,-7,-9,1,10,9,-5,9,2,1,1,9,5,-1,1,4,4,-10,6,2,-9,5,6,6,-8,-3,-4,-3,8,-5,7,-10,-1,-5,2,-5,2,5,-8,7,-9,-6,-5,-3,5,2,9,5,2,1,9,5,7,-9,-2,-2,-9,3,9,6,5,-6,-2,8,-8,8,-6,9,4,10,-4,-6,-3,6,-8,-6,2,9,10,6,8,-7,8,10,4,9,-4,-1,-5,-9,-9,5,-6,5,-6,5,-6,8,10,7,10,2,-10,-1,9,-9,-6,10,-3,-7,8,10,-6,-10,-8,8,1,-4,-2,8,-6,10,3,3,6,2,-3,10,5,-6,4,-3,-4,10,1,-7,-6,8,-8,-5,2,-10,4,-2,7,1,2,10,10,-3,-7,5,-9,5,5,-4,9,-10,2,-1,-2,4,-6,-1,6,5,-8,7,7,-7,-1,-7,-2,3,-1,-7,-7,-6,-7,9,-4,-7,9,10,-5,6,5,-8,10,-5,6,-3,-2,7,-7,3,3,4,3,7,10,-5,7,-3,5,-10,-9,5,4,-3,8,-4,3,4,1,-3,3,5,-3,8,8,8,-3,-1,7,-7,9,8,9,-7,1,1,-9,-5,5,-10,-1,2,-5,10,8,-7,-1,8,-8,10,6,5,-8], dtype = "int32")#candidate|3355|(819,)|const|int32
call_3354 = func_1697_call(relay.reshape(const_3355.astype('int32'), [13, 9, 7]), relay.reshape(const_3355.astype('int32'), [13, 9, 7]), )
call_3356 = func_1697_call(relay.reshape(const_3355.astype('int32'), [13, 9, 7]), relay.reshape(const_3355.astype('int32'), [13, 9, 7]), )
output = relay.Tuple([uop_3341,call_3343,const_3344,var_3345,var_3346,call_3354,const_3355,])
output2 = relay.Tuple([uop_3341,call_3347,const_3344,var_3345,var_3346,call_3356,const_3355,])
func_3357 = relay.Function([var_3331,var_3345,var_3346,], output)
mod['func_3357'] = func_3357
mod = relay.transform.InferType()(mod)
var_3358 = relay.var("var_3358", dtype = "int16", shape = (11, 6, 3))#candidate|3358|(11, 6, 3)|var|int16
var_3359 = relay.var("var_3359", dtype = "float32", shape = (1540,))#candidate|3359|(1540,)|var|float32
var_3360 = relay.var("var_3360", dtype = "float64", shape = (105,))#candidate|3360|(105,)|var|float64
output = func_3357(var_3358,var_3359,var_3360,)
func_3361 = relay.Function([var_3358,var_3359,var_3360,], output)
mutated_mod['func_3361'] = func_3361
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3363 = relay.var("var_3363", dtype = "float64", shape = (14, 15, 7))#candidate|3363|(14, 15, 7)|var|float64
uop_3364 = relay.atanh(var_3363.astype('float64')) # shape=(14, 15, 7)
output = relay.Tuple([uop_3364,])
output2 = relay.Tuple([uop_3364,])
func_3377 = relay.Function([var_3363,], output)
mod['func_3377'] = func_3377
mod = relay.transform.InferType()(mod)
mutated_mod['func_3377'] = func_3377
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3378 = relay.var("var_3378", dtype = "float64", shape = (14, 15, 7))#candidate|3378|(14, 15, 7)|var|float64
func_3377_call = mutated_mod.get_global_var('func_3377')
call_3379 = func_3377_call(var_3378)
output = call_3379
func_3380 = relay.Function([var_3378], output)
mutated_mod['func_3380'] = func_3380
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3382 = relay.var("var_3382", dtype = "float64", shape = (14, 5))#candidate|3382|(14, 5)|var|float64
uop_3383 = relay.acos(var_3382.astype('float64')) # shape=(14, 5)
func_614_call = mod.get_global_var('func_614')
func_617_call = mutated_mod.get_global_var('func_617')
const_3413 = relay.const([-9.465056,-1.410660,-4.387038,0.022247,5.524633,-2.250757,-5.853826,5.276983,-6.038394,-0.593907,8.956327,-1.340048,7.795339,9.236075,3.808319,6.199836,3.731682,-4.555147,-6.875971,-6.916556,5.428991,-9.175621,1.389282,1.493919,9.470333,4.782555,9.651668,1.933308,3.034193,3.466648,3.485404,0.239539,0.569404,2.149416,3.600049,4.788382,-0.895914,-8.133455,8.483676,7.260017,-8.272643,9.755443,-6.347123,-2.390352,-7.676980,8.196337,4.895460,-9.273989,-1.159250,-1.844649,0.952447,-2.694644,-9.829440,3.936461,0.961370,-5.040382,-4.666153,1.172212,-0.348047,-7.993858,-5.090697,5.796828,-7.839535,-0.158610,7.648606,-7.006658,-2.251994,-7.524887,-5.025766,-6.347839,-7.762692,6.611873,-7.754211,4.986016,-1.093963,5.628632,2.069137,-4.917832,-9.114078,3.616226,-4.198543,0.383531,-5.166531,2.947375,0.528899,-3.120307,-4.884542,-9.142917,3.708364,-0.139314,-3.569044,-2.696470,-1.929582,9.181922,0.740815,-7.525116,5.656154,-6.925862,7.549673,-5.493636,7.837396,-6.249812,-1.996191,-2.265012,-0.656674,6.055226,9.161015,9.562974,3.998406,-8.352735,3.214422,-7.961816,-1.668004,-2.627708,-1.278970,9.272509,-6.436161,6.939342,-6.255332,-3.135185,-5.054321,1.198018,8.117006,7.859908,-8.777123,3.532987,-3.372498,-7.475216,-2.116229,-3.613937,7.733210,-4.128781,7.111464,-0.147056,2.444859,9.675504,-3.903273,7.148726,7.524300,-6.677349,4.219516,4.090380,8.669485,-3.223057,-5.806059,-9.991753,-9.871519,1.344979,4.525206,-3.160278,-4.970837,-9.069936,-7.879933,-1.949662,3.328715,3.089218,-7.471800,-0.313860,-4.768919,5.996808,-1.198442,-9.871000,-8.062822,-1.330764,7.700949,5.918075,-2.456317,6.417957,6.684280,-8.162546,-8.433672,9.651721,-3.640257,6.881845,0.567383,-7.525391,-5.479516,-4.897538,-8.207840,-1.875707,6.080582,-2.203537,-9.575978,1.743227,0.730136,-2.571770,8.745218,0.742400,6.010930,3.601765,1.183649,-2.926292,-4.138516,5.630593,-5.209094,3.320625,8.065791,5.388722,9.762089,1.113777,0.961547,-4.777340,-2.637586,-2.358864,-2.954336,-7.727835,4.967717,-6.672290,7.877384,3.404560,5.128306,-8.104896,-5.903798,-6.017047,-1.065312,-0.495596,6.444204,-8.962266,-7.553238,-1.756803,-8.683027,7.063852,3.668590,-4.708584,8.772108], dtype = "float64")#candidate|3413|(225,)|const|float64
var_3414 = relay.var("var_3414", dtype = "int16", shape = (270,))#candidate|3414|(270,)|var|int16
call_3412 = relay.TupleGetItem(func_614_call(relay.reshape(const_3413.astype('float64'), [1, 15, 15]), relay.reshape(var_3414.astype('int16'), [270,]), ), 1)
call_3415 = relay.TupleGetItem(func_617_call(relay.reshape(const_3413.astype('float64'), [1, 15, 15]), relay.reshape(var_3414.astype('int16'), [270,]), ), 1)
func_1017_call = mod.get_global_var('func_1017')
func_1019_call = mutated_mod.get_global_var('func_1019')
var_3417 = relay.var("var_3417", dtype = "float64", shape = (105,))#candidate|3417|(105,)|var|float64
call_3416 = func_1017_call(relay.reshape(var_3417.astype('float64'), [3, 5, 7]))
call_3418 = func_1017_call(relay.reshape(var_3417.astype('float64'), [3, 5, 7]))
func_1697_call = mod.get_global_var('func_1697')
func_1701_call = mutated_mod.get_global_var('func_1701')
const_3427 = relay.const([4,9,4,-7,-2,-5,-1,-6,-10,1,4,-9,-6,-1,1,6,-7,1,8,2,10,5,-8,8,-6,1,2,3,4,-1,-3,2,2,3,1,8,-3,-7,-5,-10,-3,-5,4,5,1,4,-2,3,-10,-2,2,-6,-4,-7,-5,4,-7,-7,6,-10,7,-8,-8,1,-9,-3,-4,5,10,-8,8,-7,10,7,-5,10,1,-10,-1,9,5,-1,10,6,-10,7,8,-5,7,6,-9,3,-6,-10,-6,-9,10,-8,7,-2,-2,-5,6,-1,-1,6,-3,1,4,8,-8,-10,6,3,-4,10,-8,8,-4,7,-6,-7,-4,10,-8,7,-7,8,-7,-7,-8,8,-4,9,5,-3,-9,-2,9,-10,-4,4,-3,5,3,-10,-2,6,5,4,-1,3,-9,2,10,-4,-8,6,-1,1,4,7,-10,-10,8,4,-2,9,3,7,3,6,2,-3,2,8,-7,-1,-10,1,4,-9,-4,8,-2,-9,-8,8,-6,4,-7,3,9,-1,5,-1,9,7,-10,1,10,9,-6,8,8,-1,4,8,-9,4,-3,5,7,-7,9,-1,9,-8,6,8,-8,10,-4,9,9,7,10,-2,-6,-4,-9,3,-4,5,-7,-6,4,10,6,1,-3,-5,-2,8,8,-2,-6,4,-6,-1,-2,9,-3,-5,-6,-4,5,-2,8,5,-3,-2,-2,10,-5,-2,-8,-4,9,1,8,-4,7,-9,7,1,-1,-10,9,-2,1,-3,2,-9,1,-8,-7,1,8,7,4,-7,2,9,-7,8,-4,4,-10,-8,-5,9,7,-4,-10,4,2,2,-7,3,-1,-2,4,10,1,7,2,-7,-6,8,5,-1,-3,9,3,4,5,-8,1,2,-7,9,-5,-2,9,-6,-4,-1,7,7,-4,-3,-8,-7,-10,-1,10,-8,-8,5,-2,2,-9,1,5,-7,10,9,2,4,-6,10,-7,-10,-1,-2,7,7,9,1,5,-4,-7,-2,8,2,-5,10,3,8,-5,4,-6,-6,-10,-8,3,1,-4,9,-9,6,3,7,-3,9,5,8,6,-6,-10,-1,-8,-5,3,4,6,7,3,-7,-9,4,2,5,7,2,8,2,-6,-8,-4,-3,10,2,-6,-10,7,-10,6,-7,-9,-2,-4,2,-3,9,1,-8,5,-4,10,5,8,6,-1,8,-4,6,5,8,-6,-3,-10,-10,10,-6,-8,8,6,-3,-7,-8,1,8,10,4,-2,7,-10,7,-10,2,3,5,4,-10,-9,3,-10,8,9,-10,-2,5,3,-4,6,-1,8,2,-4,-4,-9,-6,1,3,-7,1,9,1,-9,-4,-3,-7,1,-4,10,-9,-6,-1,9,7,8,-5,-7,8,-3,2,-7,8,8,4,-1,-8,8,-6,-5,4,2,-2,-8,-6,5,1,-6,-10,1,2,-9,-9,-4,-5,-7,-4,-10,9,-9,1,2,5,-10,-2,-1,3,9,-6,-8,-1,1,7,4,-7,2,6,-7,1,6,-10,-10,-4,6,1,2,-2,-9,-2,4,5,-9,-9,-10,4,8,2,9,-6,-9,-1,-10,3,2,2,7,4,-8,2,5,-5,-2,-10,6,-5,6,-3,-9,-4,4,-8,3,4,-7,1,-2,7,-5,4,7,-4,3,7,-8,4,-9,10,6,-7,-10,-9,5,8,-4,-1,10,-4,-7,-9,-6,-4,7,10,7,8,-4,-2,4,-10,2,1,-7,7,10,8,8,10,3,9,-7,-9,-6,9,3,-10,1,7,10,3,-1,-3,-10,-2,-5,4,10,3,8,-9,3,6,-3,-3,8,-3,4,7,1,8,-2,7,10,1,-4,-7,-2,-3,7,-9,10,5,8,-10,3,6,-2,9,-5,-8,-3,-5,1,1,4,6,-2,9,-4,10,7,-5,8,-1,-6,-9,-7,5,4,7,-8,1,-5,-9,-7,6,-4,5,7,-3,8,-6,-10,-4,-9,-10,5,6,-2,-8,-5,-5,7,10,-9,-1,-7,-3,-7,1,9,2,3,-3,-4,-5,5,-7,1,8,-2,-8,-3,-6,-7,8,-8,-1,10,-7,-3,3,-4,10,-10,7,5,-1,-4,1,-3,9,-1,2,2,-6,-4,3,-1,-3,-1,-3,4,9,10,-1,-10,4,-1,-5,-10,10,-1,-1,-7,-5,7,-7,1,-10,7,-4,4], dtype = "int32")#candidate|3427|(819,)|const|int32
call_3426 = func_1697_call(relay.reshape(const_3427.astype('int32'), [13, 9, 7]), relay.reshape(const_3427.astype('int32'), [13, 9, 7]), )
call_3428 = func_1697_call(relay.reshape(const_3427.astype('int32'), [13, 9, 7]), relay.reshape(const_3427.astype('int32'), [13, 9, 7]), )
output = relay.Tuple([uop_3383,call_3412,const_3413,var_3414,call_3416,var_3417,call_3426,const_3427,])
output2 = relay.Tuple([uop_3383,call_3415,const_3413,var_3414,call_3418,var_3417,call_3428,const_3427,])
func_3442 = relay.Function([var_3382,var_3414,var_3417,], output)
mod['func_3442'] = func_3442
mod = relay.transform.InferType()(mod)
mutated_mod['func_3442'] = func_3442
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3442_call = mutated_mod.get_global_var('func_3442')
var_3444 = relay.var("var_3444", dtype = "float64", shape = (14, 5))#candidate|3444|(14, 5)|var|float64
var_3445 = relay.var("var_3445", dtype = "int16", shape = (270,))#candidate|3445|(270,)|var|int16
var_3446 = relay.var("var_3446", dtype = "float64", shape = (105,))#candidate|3446|(105,)|var|float64
call_3443 = func_3442_call(var_3444,var_3445,var_3446,)
output = call_3443
func_3447 = relay.Function([var_3444,var_3445,var_3446,], output)
mutated_mod['func_3447'] = func_3447
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2738_call = mod.get_global_var('func_2738')
func_2740_call = mutated_mod.get_global_var('func_2740')
call_3558 = relay.TupleGetItem(func_2738_call(), 3)
call_3559 = relay.TupleGetItem(func_2740_call(), 3)
output = relay.Tuple([call_3558,])
output2 = relay.Tuple([call_3559,])
func_3575 = relay.Function([], output)
mod['func_3575'] = func_3575
mod = relay.transform.InferType()(mod)
output = func_3575()
func_3576 = relay.Function([], output)
mutated_mod['func_3576'] = func_3576
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3579 = relay.var("var_3579", dtype = "float32", shape = (10, 3, 5))#candidate|3579|(10, 3, 5)|var|float32
var_3580 = relay.var("var_3580", dtype = "float32", shape = (10, 3, 5))#candidate|3580|(10, 3, 5)|var|float32
bop_3581 = relay.power(var_3579.astype('float32'), relay.reshape(var_3580.astype('float32'), relay.shape_of(var_3579))) # shape=(10, 3, 5)
output = bop_3581
output2 = bop_3581
func_3586 = relay.Function([var_3579,var_3580,], output)
mod['func_3586'] = func_3586
mod = relay.transform.InferType()(mod)
mutated_mod['func_3586'] = func_3586
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3586_call = mutated_mod.get_global_var('func_3586')
var_3588 = relay.var("var_3588", dtype = "float32", shape = (10, 3, 5))#candidate|3588|(10, 3, 5)|var|float32
var_3589 = relay.var("var_3589", dtype = "float32", shape = (10, 3, 5))#candidate|3589|(10, 3, 5)|var|float32
call_3587 = func_3586_call(var_3588,var_3589,)
output = call_3587
func_3590 = relay.Function([var_3588,var_3589,], output)
mutated_mod['func_3590'] = func_3590
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2738_call = mod.get_global_var('func_2738')
func_2740_call = mutated_mod.get_global_var('func_2740')
call_3622 = relay.TupleGetItem(func_2738_call(), 0)
call_3623 = relay.TupleGetItem(func_2740_call(), 0)
uop_3639 = relay.acosh(call_3622.astype('float32')) # shape=(11, 12, 6)
uop_3641 = relay.acosh(call_3623.astype('float32')) # shape=(11, 12, 6)
output = uop_3639
output2 = uop_3641
func_3647 = relay.Function([], output)
mod['func_3647'] = func_3647
mod = relay.transform.InferType()(mod)
mutated_mod['func_3647'] = func_3647
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3647_call = mutated_mod.get_global_var('func_3647')
call_3648 = func_3647_call()
output = call_3648
func_3649 = relay.Function([], output)
mutated_mod['func_3649'] = func_3649
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2789_call = mod.get_global_var('func_2789')
func_2791_call = mutated_mod.get_global_var('func_2791')
call_3670 = relay.TupleGetItem(func_2789_call(), 0)
call_3671 = relay.TupleGetItem(func_2791_call(), 0)
output = call_3670
output2 = call_3671
func_3679 = relay.Function([], output)
mod['func_3679'] = func_3679
mod = relay.transform.InferType()(mod)
mutated_mod['func_3679'] = func_3679
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3679_call = mutated_mod.get_global_var('func_3679')
call_3680 = func_3679_call()
output = call_3680
func_3681 = relay.Function([], output)
mutated_mod['func_3681'] = func_3681
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2738_call = mod.get_global_var('func_2738')
func_2740_call = mutated_mod.get_global_var('func_2740')
call_3682 = relay.TupleGetItem(func_2738_call(), 2)
call_3683 = relay.TupleGetItem(func_2740_call(), 2)
func_2738_call = mod.get_global_var('func_2738')
func_2740_call = mutated_mod.get_global_var('func_2740')
call_3684 = relay.TupleGetItem(func_2738_call(), 3)
call_3685 = relay.TupleGetItem(func_2740_call(), 3)
output = relay.Tuple([call_3682,call_3684,])
output2 = relay.Tuple([call_3683,call_3685,])
func_3694 = relay.Function([], output)
mod['func_3694'] = func_3694
mod = relay.transform.InferType()(mod)
output = func_3694()
func_3695 = relay.Function([], output)
mutated_mod['func_3695'] = func_3695
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3724 = relay.var("var_3724", dtype = "uint64", shape = ())#candidate|3724|()|var|uint64
var_3725 = relay.var("var_3725", dtype = "uint64", shape = (8, 13, 14))#candidate|3725|(8, 13, 14)|var|uint64
bop_3726 = relay.not_equal(var_3724.astype('bool'), var_3725.astype('bool')) # shape=(8, 13, 14)
bop_3731 = relay.maximum(var_3724.astype('uint32'), var_3725.astype('uint32')) # shape=(8, 13, 14)
uop_3737 = relay.cosh(var_3725.astype('float64')) # shape=(8, 13, 14)
func_3586_call = mod.get_global_var('func_3586')
func_3590_call = mutated_mod.get_global_var('func_3590')
var_3740 = relay.var("var_3740", dtype = "float32", shape = (150,))#candidate|3740|(150,)|var|float32
call_3739 = func_3586_call(relay.reshape(var_3740.astype('float32'), [10, 3, 5]), relay.reshape(var_3740.astype('float32'), [10, 3, 5]), )
call_3741 = func_3586_call(relay.reshape(var_3740.astype('float32'), [10, 3, 5]), relay.reshape(var_3740.astype('float32'), [10, 3, 5]), )
func_3586_call = mod.get_global_var('func_3586')
func_3590_call = mutated_mod.get_global_var('func_3590')
call_3751 = func_3586_call(relay.reshape(call_3739.astype('float32'), [10, 3, 5]), relay.reshape(call_3739.astype('float32'), [10, 3, 5]), )
call_3752 = func_3586_call(relay.reshape(call_3739.astype('float32'), [10, 3, 5]), relay.reshape(call_3739.astype('float32'), [10, 3, 5]), )
bop_3760 = relay.greater_equal(uop_3737.astype('bool'), relay.reshape(bop_3731.astype('bool'), relay.shape_of(uop_3737))) # shape=(8, 13, 14)
func_3203_call = mod.get_global_var('func_3203')
func_3207_call = mutated_mod.get_global_var('func_3207')
const_3766 = relay.const([[-4],[-2],[2],[-10],[-2],[-9],[5],[1],[10],[8],[6],[-8],[-2],[-9],[8],[-6],[6],[5],[-1],[-2],[7],[5],[3],[-6],[1],[4],[-9],[-2],[-1],[9],[-10],[-4],[-2],[4],[-5],[6],[10],[-4],[5],[-8],[3],[8],[6],[2],[-10],[-7],[-6],[7],[-1],[1],[9],[-7],[-9],[4],[10],[-2],[5],[6],[9],[7],[1],[-2],[-4],[-6],[9],[-10],[-7],[9],[-10],[9],[4],[5],[-1],[-1],[1],[4],[1],[-10],[4],[-1],[-7],[3],[-9],[-7],[-5],[9],[10],[-1],[6],[-3],[-7],[8],[2],[4],[-8],[-9],[5],[7],[6],[3],[10],[5],[5],[-1],[5],[8],[1],[-1],[-6],[9],[9],[8],[-1],[7],[1],[-3],[1],[1],[1],[7],[-7],[9],[10],[1],[4],[-1],[9],[6],[-6],[-9],[3],[8],[-1],[10],[-2],[-9],[1],[-9],[5],[-9],[9],[1],[-9],[9],[-2],[-2],[2],[8],[10],[5],[-4],[-1],[10],[6],[-9],[6],[6],[7],[6],[3],[-4],[-2],[-7],[-2],[-6],[-7],[9],[5],[-7],[9],[-9],[7],[4],[-1],[1],[8],[-10],[-4],[1],[-2],[-2],[9],[-6],[-3],[7],[-2],[-8],[-2],[-2],[-5],[-6],[10],[5],[3],[-9],[3],[1],[-3],[6],[3],[-9],[-2],[3],[-1],[6],[9],[1],[9],[1],[-10],[-4],[-2],[-4],[-5],[10],[-6],[2],[-7],[-1],[-1],[-6],[-10],[-8],[-3],[-1],[-1],[-5],[-2],[-9],[-7],[-7],[-9],[-10],[-6],[-7],[-7],[-7],[-10],[-4],[-8],[-5],[1],[-4],[-8],[2],[-2],[-10],[-9],[-9],[9],[-4],[-1],[-3],[-10],[3],[3],[-8],[7],[-5],[-5],[-2],[-7],[-9],[-1],[1],[-4],[-8],[6],[5],[8]], dtype = "int16")#candidate|3766|(270, 1)|const|int16
const_3767 = relay.const([8.093567,-8.628833,-8.120505,1.469071,4.174885,-1.045627,8.044624,3.297583,-6.890240,-3.717128,-6.165979,-8.695731,8.439070,-2.800705,4.503595,3.681871,8.645977,-4.488950,-0.730205,3.853295,6.620944,2.248327,-7.442254,-2.365922,6.942294,1.707300,-7.268922,1.964757,9.555452,-9.504731,6.993413,-7.506580,-9.062988,-2.133169,-6.972922,-2.325576,5.455184,-7.246449,-4.291657,-6.560398,-1.755465,2.289334,-6.633989,-8.949811,-3.528821,-4.035953,9.497005,5.777114,1.126987,-5.557663,5.055530,-5.453883,-7.994825,-0.292447,2.951127,3.054940,-1.873209,0.978895,8.270180,7.106215,-5.165995,2.826764,-3.778777,5.213059,-3.872635,7.800992,-1.784293,-7.261214,6.835750,0.106696,-9.250294,-4.970079,9.608464,7.160044,7.194540,3.409625,-9.807794,4.345856,4.536108,8.268368,-6.532115,7.885508,-5.747913,-3.780149,-3.678821,-4.063649,-3.126796,-1.828268,-3.967985,-9.741573,-2.671409,-8.433804,-7.307594,9.483956,-3.638778,0.090680,6.577928,-4.852227,-7.308869,4.200471,-0.030360,5.321181,-1.408797,1.828843,1.789532,7.332942,6.872195,7.935577,4.982394,1.202006,7.107438,8.368239,4.925346,-1.449957,-5.059380,-2.638424,3.470264,2.900705,0.991898,7.113340,-5.906475,-0.218845,-8.810056,2.112520,-5.268843,4.969703,7.365823,2.129904,-6.807318,-7.988004,4.120932,-1.942734,0.370437,0.725022,-4.335644,3.411222,9.008776,-2.409639,5.976311,5.748095,-4.700229,5.146271,5.081856,-5.843869,-8.703260,-4.706041,2.196471,3.168526,-3.840955,-5.184542,7.340707,0.356219,5.313629,-9.097425,7.460082,3.648254,-5.377396,0.473671,5.661520,-3.182850,8.317622,9.032217,1.786281,6.698478,5.184499,-7.825517,2.341828,1.376280,8.398353,-9.253304,-6.307475,-8.269197,-2.272862,-3.244680,0.502031,-7.366893,-5.871385,4.654369,-8.938014,0.874301,-9.138946,-2.071802,-8.425387,2.253418,1.305430,-3.452647,0.904203,-6.941711,5.244820,9.100560,2.726754,9.101396,8.115243,6.916110,5.328628,-7.147158,-1.492189,2.152524,-2.661632,-9.453685,-6.791312,4.815433,0.926953,-7.186494,8.798981,9.866032,7.718534,-7.207618,-9.446684,-1.495240,-7.160315,2.531778,7.909532,0.678401,3.217708,3.254848,5.041191,3.488700,-8.544605,6.799633,1.386061,3.433824,6.617347,-8.644303,4.754863], dtype = "float64")#candidate|3767|(225,)|const|float64
call_3765 = relay.TupleGetItem(func_3203_call(relay.reshape(var_3724.astype('uint64'), []), relay.reshape(const_3766.astype('int16'), [270,]), relay.reshape(const_3767.astype('float64'), [225,]), ), 5)
call_3768 = relay.TupleGetItem(func_3207_call(relay.reshape(var_3724.astype('uint64'), []), relay.reshape(const_3766.astype('int16'), [270,]), relay.reshape(const_3767.astype('float64'), [225,]), ), 5)
func_3100_call = mod.get_global_var('func_3100')
func_3102_call = mutated_mod.get_global_var('func_3102')
call_3775 = relay.TupleGetItem(func_3100_call(relay.reshape(var_3724.astype('uint8'), [])), 1)
call_3776 = relay.TupleGetItem(func_3102_call(relay.reshape(var_3724.astype('uint8'), [])), 1)
func_614_call = mod.get_global_var('func_614')
func_617_call = mutated_mod.get_global_var('func_617')
call_3786 = relay.TupleGetItem(func_614_call(relay.reshape(const_3767.astype('float64'), [1, 15, 15]), relay.reshape(const_3766.astype('int16'), [270,]), ), 2)
call_3787 = relay.TupleGetItem(func_617_call(relay.reshape(const_3767.astype('float64'), [1, 15, 15]), relay.reshape(const_3766.astype('int16'), [270,]), ), 2)
uop_3808 = relay.acosh(uop_3737.astype('float32')) # shape=(8, 13, 14)
output = relay.Tuple([bop_3726,call_3739,var_3740,call_3751,bop_3760,call_3765,const_3766,const_3767,call_3775,call_3786,uop_3808,])
output2 = relay.Tuple([bop_3726,call_3741,var_3740,call_3752,bop_3760,call_3768,const_3766,const_3767,call_3776,call_3787,uop_3808,])
func_3813 = relay.Function([var_3724,var_3725,var_3740,], output)
mod['func_3813'] = func_3813
mod = relay.transform.InferType()(mod)
mutated_mod['func_3813'] = func_3813
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3813_call = mutated_mod.get_global_var('func_3813')
var_3815 = relay.var("var_3815", dtype = "uint64", shape = ())#candidate|3815|()|var|uint64
var_3816 = relay.var("var_3816", dtype = "uint64", shape = (8, 13, 14))#candidate|3816|(8, 13, 14)|var|uint64
var_3817 = relay.var("var_3817", dtype = "float32", shape = (150,))#candidate|3817|(150,)|var|float32
call_3814 = func_3813_call(var_3815,var_3816,var_3817,)
output = call_3814
func_3818 = relay.Function([var_3815,var_3816,var_3817,], output)
mutated_mod['func_3818'] = func_3818
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3231_call = mod.get_global_var('func_3231')
func_3232_call = mutated_mod.get_global_var('func_3232')
call_3829 = func_3231_call()
call_3830 = func_3231_call()
func_3203_call = mod.get_global_var('func_3203')
func_3207_call = mutated_mod.get_global_var('func_3207')
var_3834 = relay.var("var_3834", dtype = "uint64", shape = ())#candidate|3834|()|var|uint64
var_3835 = relay.var("var_3835", dtype = "int16", shape = (30, 9))#candidate|3835|(30, 9)|var|int16
var_3836 = relay.var("var_3836", dtype = "float64", shape = (225,))#candidate|3836|(225,)|var|float64
call_3833 = relay.TupleGetItem(func_3203_call(relay.reshape(var_3834.astype('uint64'), []), relay.reshape(var_3835.astype('int16'), [270,]), relay.reshape(var_3836.astype('float64'), [225,]), ), 3)
call_3837 = relay.TupleGetItem(func_3207_call(relay.reshape(var_3834.astype('uint64'), []), relay.reshape(var_3835.astype('int16'), [270,]), relay.reshape(var_3836.astype('float64'), [225,]), ), 3)
output = relay.Tuple([call_3829,call_3833,var_3834,var_3835,var_3836,])
output2 = relay.Tuple([call_3830,call_3837,var_3834,var_3835,var_3836,])
func_3846 = relay.Function([var_3834,var_3835,var_3836,], output)
mod['func_3846'] = func_3846
mod = relay.transform.InferType()(mod)
var_3847 = relay.var("var_3847", dtype = "uint64", shape = ())#candidate|3847|()|var|uint64
var_3848 = relay.var("var_3848", dtype = "int16", shape = (30, 9))#candidate|3848|(30, 9)|var|int16
var_3849 = relay.var("var_3849", dtype = "float64", shape = (225,))#candidate|3849|(225,)|var|float64
output = func_3846(var_3847,var_3848,var_3849,)
func_3850 = relay.Function([var_3847,var_3848,var_3849,], output)
mutated_mod['func_3850'] = func_3850
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3647_call = mod.get_global_var('func_3647')
func_3649_call = mutated_mod.get_global_var('func_3649')
call_3866 = func_3647_call()
call_3867 = func_3647_call()
output = relay.Tuple([call_3866,])
output2 = relay.Tuple([call_3867,])
func_3868 = relay.Function([], output)
mod['func_3868'] = func_3868
mod = relay.transform.InferType()(mod)
mutated_mod['func_3868'] = func_3868
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3868_call = mutated_mod.get_global_var('func_3868')
call_3869 = func_3868_call()
output = call_3869
func_3870 = relay.Function([], output)
mutated_mod['func_3870'] = func_3870
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3694_call = mod.get_global_var('func_3694')
func_3695_call = mutated_mod.get_global_var('func_3695')
call_3879 = relay.TupleGetItem(func_3694_call(), 0)
call_3880 = relay.TupleGetItem(func_3695_call(), 0)
const_3896 = relay.const([8.106997,1.690757,-3.283303,4.671189,0.383002,-7.742845,-6.294722,0.246949,-2.299244,1.992072,7.144123,3.548644,6.841140,-3.264743,-2.565034,5.806874,2.851570,3.772422,4.171281,2.467674,-8.962756,-9.212662,-6.152763,-0.361350,0.962978,-3.855496,5.205905,9.475271,-9.754275,-6.163601,4.647103,9.902479,-3.647097,-0.316614,5.281874,1.605502,8.948822,-1.818960,4.977717,-8.589361,2.099214,-7.609611,-8.286621,7.645336,0.207877,5.914707,6.713469,-5.839490,6.280876,-6.419464,-0.502961,-1.863453,9.505710,-4.374988,9.790770,-3.103426,0.751573,-6.117794,-5.031566,3.709630,1.598655,-8.410090,4.129657,-2.499931,3.386400,2.627107,-2.251312,6.087965,-0.337696,5.365383,7.365907,-4.284337,-9.029740,-4.817145,0.232879,-2.255464,4.168409,6.450578,2.324794,1.699053,-0.078943,3.996395,0.582291,3.390768,-1.792970,4.003768,-7.012030,-7.782314,-9.953433,2.080649,-1.923106,-5.960212,-8.379572,-3.698782,-7.908964,-7.763118,-3.862796,3.771204,-3.491780,-6.067118,3.882325,-6.739528,6.746593,-3.930966,-6.164113,3.739046,-6.413450,-5.432660,-1.896148,-4.190698,-1.833152,7.852667,-3.358333,-2.725652,1.838024,3.172219,3.416102,-4.107605,1.147075,-6.150205,-4.968523,-3.938752,-3.534167,3.598538,-7.011954,6.075866,-5.743958,4.009649,4.569851,-2.965648,-8.602418,-6.288481,7.254200,9.385717,1.319558,-5.643587,2.300257,-2.189686,1.824260,-4.647358,-1.787173,6.932835,0.275903,5.871584,-2.968610,0.879668,-5.739173,-8.987209,2.704309,-3.671291,-5.932591,-4.386562,8.492538,7.607725,4.668180,-5.244663,5.385683,-2.947197,0.398092,6.334245,3.937618,-0.193674,-6.348057,-7.570847,-6.285969,0.398182,2.342103,8.248544,-1.378862,-1.719489,-3.776149,2.185624,-1.083897,-7.821530,-1.074093,0.441931,6.016963,6.575954,0.348928,6.247769,-1.016350,-2.079122,-0.679052,-7.253257,-3.050647,-6.343372,-5.283145,-2.074085,-1.267876,-2.053442,-5.786689,-5.798802,0.630008,-6.137800,1.552703,9.360863,-5.996097,-8.323357,7.222937,3.906903,4.674520,-7.206988,-0.624188,-2.780151,-9.690664,3.121607,-8.807836,-8.576809,0.628221,-3.783120,-9.954341,-4.322819,1.213781,4.152301,3.645112,-2.545171,6.984907,-2.835520,6.948883,-9.371764,6.989782,9.695372,1.455579,-5.189015,-1.361478], dtype = "float64")#candidate|3896|(225,)|const|float64
bop_3897 = relay.minimum(call_3879.astype('float32'), relay.reshape(const_3896.astype('float32'), relay.shape_of(call_3879))) # shape=(225,)
bop_3900 = relay.minimum(call_3880.astype('float32'), relay.reshape(const_3896.astype('float32'), relay.shape_of(call_3880))) # shape=(225,)
output = bop_3897
output2 = bop_3900
func_3905 = relay.Function([], output)
mod['func_3905'] = func_3905
mod = relay.transform.InferType()(mod)
mutated_mod['func_3905'] = func_3905
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3905_call = mutated_mod.get_global_var('func_3905')
call_3906 = func_3905_call()
output = call_3906
func_3907 = relay.Function([], output)
mutated_mod['func_3907'] = func_3907
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3868_call = mod.get_global_var('func_3868')
func_3870_call = mutated_mod.get_global_var('func_3870')
call_3952 = relay.TupleGetItem(func_3868_call(), 0)
call_3953 = relay.TupleGetItem(func_3870_call(), 0)
func_3868_call = mod.get_global_var('func_3868')
func_3870_call = mutated_mod.get_global_var('func_3870')
call_3957 = relay.TupleGetItem(func_3868_call(), 0)
call_3958 = relay.TupleGetItem(func_3870_call(), 0)
func_1017_call = mod.get_global_var('func_1017')
func_1019_call = mutated_mod.get_global_var('func_1019')
var_3960 = relay.var("var_3960", dtype = "float64", shape = (105,))#candidate|3960|(105,)|var|float64
call_3959 = func_1017_call(relay.reshape(var_3960.astype('float64'), [3, 5, 7]))
call_3961 = func_1017_call(relay.reshape(var_3960.astype('float64'), [3, 5, 7]))
func_1697_call = mod.get_global_var('func_1697')
func_1701_call = mutated_mod.get_global_var('func_1701')
const_3973 = relay.const([5,-8,4,10,9,10,10,-9,-7,9,6,4,-3,4,1,3,-7,-2,10,8,-5,5,-10,-6,-7,-5,-8,-4,-4,-2,10,-9,-10,-8,3,4,-4,-3,-3,-3,3,-3,7,-9,8,5,9,-2,5,1,-6,7,-4,-4,9,-7,-5,1,-8,2,4,-1,-1,3,-3,-7,-9,-8,-5,10,-2,-6,7,-1,-10,2,-2,6,-8,-3,-3,-1,-5,7,-3,-3,6,-4,-9,-2,9,10,7,-7,6,7,8,-6,-6,2,2,6,7,2,2,2,8,-3,1,-1,7,8,5,-10,-7,-2,-2,-8,6,-4,6,10,-1,8,-2,-10,-6,-8,-4,-3,5,-1,-2,5,-1,-8,6,-2,2,10,10,5,-10,-6,-3,5,-4,2,-7,6,7,-8,4,3,-9,-2,-3,-6,1,-9,-1,-10,-3,3,-3,-2,2,5,-10,-4,1,10,6,-9,10,-1,4,-5,8,-1,-6,-1,-2,6,3,3,-9,-8,-10,2,-6,-10,6,9,5,5,2,-2,10,-8,-2,-9,-5,6,5,-5,10,-1,-1,10,-8,-7,-9,-7,-9,-4,-6,-1,-9,6,4,-4,7,3,-6,3,-10,-6,-3,9,-6,2,7,2,-2,-1,10,-3,3,-2,-10,4,-9,-8,3,-4,-4,2,-10,9,-5,-8,-8,-9,-8,-9,-7,-8,-5,-9,-8,1,9,-3,-2,-3,-3,-9,4,1,8,-2,-4,3,9,-2,-7,8,10,7,4,-6,-2,7,2,10,7,-7,4,-2,4,-1,9,-8,-3,-9,-4,-1,2,4,5,6,-6,10,-6,3,6,-2,-3,4,-5,2,-9,-8,2,-5,-4,6,-7,-9,1,-3,-6,-4,5,-7,-10,-2,2,8,-1,-9,-7,6,3,6,-9,-3,-4,-6,-2,1,-9,-10,4,5,2,-10,-10,2,-4,-7,7,-8,6,2,-4,-1,8,4,-9,7,2,10,-6,5,-3,2,4,-1,-1,-10,7,-8,1,7,2,3,3,-5,-8,-8,-5,-10,-10,9,3,-8,9,5,9,-1,-8,-4,8,10,2,-6,10,-5,-7,6,4,-10,10,-4,-9,-10,9,-8,7,-4,9,7,-6,-2,7,-2,-1,-3,-10,-2,1,-6,7,-9,5,5,-1,-3,-5,9,4,4,-6,8,3,2,1,-6,3,5,9,2,-10,-9,4,8,1,-5,8,-10,-3,-7,-2,5,10,-5,-9,9,6,6,-7,-9,-4,-7,10,-3,2,7,5,-3,-3,-4,-9,-2,4,-4,2,-1,-10,9,6,2,4,-5,-3,-5,-9,7,-3,-3,-8,-8,-2,7,7,-3,7,-4,7,9,-8,-4,-3,-6,-1,3,-8,10,-2,-4,-2,-4,4,-10,-7,-3,-3,-3,10,-5,8,2,3,-6,10,3,-10,-1,-5,7,1,-9,7,-3,9,7,7,3,-3,4,2,-7,6,-7,10,3,4,-6,-3,-7,8,-2,-7,-7,-6,6,-8,-10,-5,-5,3,-6,1,-9,2,9,-1,-5,5,-1,-2,-1,-1,7,8,-1,-2,-7,3,-7,3,7,6,4,-3,-4,-1,-7,6,10,-6,4,-10,-2,10,-9,7,6,-7,7,-5,-7,8,1,-10,9,-2,7,-5,-8,-10,7,-3,3,5,-2,-4,9,6,5,2,3,8,-9,-9,-9,2,-8,-9,6,2,-4,-8,-8,4,-10,9,10,1,10,6,9,-5,4,-8,8,10,-8,-5,-5,-2,-5,10,8,-7,-3,10,-1,-9,-9,-7,8,-8,-8,-3,-2,-9,5,4,-3,4,4,-8,-10,-1,-3,-5,8,9,8,10,-6,9,-10,-9,-6,7,-8,4,-9,7,5,-4,5,8,5,5,7,-5,7,-10,-8,2,1,1,4,3,-10,-10,-2,10,8,-1,9,4,1,-8,10,-4,-9,2,-5,-1,-5,1,3,7,7,6,7,2,3,-6,4,-3,-6,-4,-1,-7,-10,-4,-2,-4,-10,-4,2,4,8,8,1,-4,-8,10,-5,-6,3,-10,10,3,6,-4,5,-4,9,4,-5,6,7,5,-3,9,-10,3,4,-7,-3,-7,-8,-3,4,8,6,-5,10,-6,-2,10,-3,9,9,8,-8,2,7,-4,3,-10,-5,-1,-4,1,2,-7,2,-4,3,-3,-8,-10,10,-6,7,-1,1,-1,-1,-3], dtype = "int32")#candidate|3973|(819,)|const|int32
call_3972 = func_1697_call(relay.reshape(const_3973.astype('int32'), [13, 9, 7]), relay.reshape(const_3973.astype('int32'), [13, 9, 7]), )
call_3974 = func_1697_call(relay.reshape(const_3973.astype('int32'), [13, 9, 7]), relay.reshape(const_3973.astype('int32'), [13, 9, 7]), )
func_3586_call = mod.get_global_var('func_3586')
func_3590_call = mutated_mod.get_global_var('func_3590')
var_3983 = relay.var("var_3983", dtype = "float32", shape = (150,))#candidate|3983|(150,)|var|float32
call_3982 = func_3586_call(relay.reshape(var_3983.astype('float32'), [10, 3, 5]), relay.reshape(var_3983.astype('float32'), [10, 3, 5]), )
call_3984 = func_3586_call(relay.reshape(var_3983.astype('float32'), [10, 3, 5]), relay.reshape(var_3983.astype('float32'), [10, 3, 5]), )
uop_3993 = relay.sigmoid(call_3952.astype('float32')) # shape=(11, 12, 6)
uop_3995 = relay.sigmoid(call_3953.astype('float32')) # shape=(11, 12, 6)
output = relay.Tuple([call_3957,call_3959,var_3960,call_3972,const_3973,call_3982,var_3983,uop_3993,])
output2 = relay.Tuple([call_3958,call_3961,var_3960,call_3974,const_3973,call_3984,var_3983,uop_3995,])
func_3996 = relay.Function([var_3960,var_3983,], output)
mod['func_3996'] = func_3996
mod = relay.transform.InferType()(mod)
var_3997 = relay.var("var_3997", dtype = "float64", shape = (105,))#candidate|3997|(105,)|var|float64
var_3998 = relay.var("var_3998", dtype = "float32", shape = (150,))#candidate|3998|(150,)|var|float32
output = func_3996(var_3997,var_3998,)
func_3999 = relay.Function([var_3997,var_3998,], output)
mutated_mod['func_3999'] = func_3999
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4053 = relay.var("var_4053", dtype = "float32", shape = (1, 5, 6))#candidate|4053|(1, 5, 6)|var|float32
var_4054 = relay.var("var_4054", dtype = "float32", shape = (1, 5, 6))#candidate|4054|(1, 5, 6)|var|float32
bop_4055 = relay.divide(var_4053.astype('float32'), relay.reshape(var_4054.astype('float32'), relay.shape_of(var_4053))) # shape=(1, 5, 6)
output = relay.Tuple([bop_4055,])
output2 = relay.Tuple([bop_4055,])
func_4067 = relay.Function([var_4053,var_4054,], output)
mod['func_4067'] = func_4067
mod = relay.transform.InferType()(mod)
var_4068 = relay.var("var_4068", dtype = "float32", shape = (1, 5, 6))#candidate|4068|(1, 5, 6)|var|float32
var_4069 = relay.var("var_4069", dtype = "float32", shape = (1, 5, 6))#candidate|4069|(1, 5, 6)|var|float32
output = func_4067(var_4068,var_4069,)
func_4070 = relay.Function([var_4068,var_4069,], output)
mutated_mod['func_4070'] = func_4070
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4072 = relay.var("var_4072", dtype = "float64", shape = (5, 11, 12))#candidate|4072|(5, 11, 12)|var|float64
uop_4073 = relay.sqrt(var_4072.astype('float64')) # shape=(5, 11, 12)
func_3647_call = mod.get_global_var('func_3647')
func_3649_call = mutated_mod.get_global_var('func_3649')
call_4077 = func_3647_call()
call_4078 = func_3647_call()
output = relay.Tuple([uop_4073,call_4077,])
output2 = relay.Tuple([uop_4073,call_4078,])
func_4096 = relay.Function([var_4072,], output)
mod['func_4096'] = func_4096
mod = relay.transform.InferType()(mod)
var_4097 = relay.var("var_4097", dtype = "float64", shape = (5, 11, 12))#candidate|4097|(5, 11, 12)|var|float64
output = func_4096(var_4097)
func_4098 = relay.Function([var_4097], output)
mutated_mod['func_4098'] = func_4098
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3905_call = mod.get_global_var('func_3905')
func_3907_call = mutated_mod.get_global_var('func_3907')
call_4128 = func_3905_call()
call_4129 = func_3905_call()
output = call_4128
output2 = call_4129
func_4148 = relay.Function([], output)
mod['func_4148'] = func_4148
mod = relay.transform.InferType()(mod)
output = func_4148()
func_4149 = relay.Function([], output)
mutated_mod['func_4149'] = func_4149
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2738_call = mod.get_global_var('func_2738')
func_2740_call = mutated_mod.get_global_var('func_2740')
call_4184 = relay.TupleGetItem(func_2738_call(), 2)
call_4185 = relay.TupleGetItem(func_2740_call(), 2)
output = relay.Tuple([call_4184,])
output2 = relay.Tuple([call_4185,])
func_4192 = relay.Function([], output)
mod['func_4192'] = func_4192
mod = relay.transform.InferType()(mod)
mutated_mod['func_4192'] = func_4192
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4192_call = mutated_mod.get_global_var('func_4192')
call_4193 = func_4192_call()
output = call_4193
func_4194 = relay.Function([], output)
mutated_mod['func_4194'] = func_4194
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4245 = relay.var("var_4245", dtype = "float64", shape = (11, 7, 10))#candidate|4245|(11, 7, 10)|var|float64
uop_4246 = relay.sqrt(var_4245.astype('float64')) # shape=(11, 7, 10)
output = relay.Tuple([uop_4246,])
output2 = relay.Tuple([uop_4246,])
func_4257 = relay.Function([var_4245,], output)
mod['func_4257'] = func_4257
mod = relay.transform.InferType()(mod)
var_4258 = relay.var("var_4258", dtype = "float64", shape = (11, 7, 10))#candidate|4258|(11, 7, 10)|var|float64
output = func_4257(var_4258)
func_4259 = relay.Function([var_4258], output)
mutated_mod['func_4259'] = func_4259
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4290 = relay.const([[[8,4,-10,-9,-2,6,7]],[[-10,7,-10,5,-10,-8,-8]],[[-4,-1,-1,-10,-4,9,-3]],[[1,-9,5,-3,3,-4,-6]],[[7,3,7,4,1,-10,-6]]], dtype = "uint8")#candidate|4290|(5, 1, 7)|const|uint8
var_4291 = relay.var("var_4291", dtype = "uint8", shape = (5, 14, 7))#candidate|4291|(5, 14, 7)|var|uint8
bop_4292 = relay.minimum(const_4290.astype('uint8'), var_4291.astype('uint8')) # shape=(5, 14, 7)
func_3846_call = mod.get_global_var('func_3846')
func_3850_call = mutated_mod.get_global_var('func_3850')
const_4304 = relay.const(8, dtype = "uint64")#candidate|4304|()|const|uint64
var_4305 = relay.var("var_4305", dtype = "int16", shape = (270,))#candidate|4305|(270,)|var|int16
var_4306 = relay.var("var_4306", dtype = "float64", shape = (75, 3))#candidate|4306|(75, 3)|var|float64
call_4303 = relay.TupleGetItem(func_3846_call(relay.reshape(const_4304.astype('uint64'), []), relay.reshape(var_4305.astype('int16'), [30, 9]), relay.reshape(var_4306.astype('float64'), [225,]), ), 3)
call_4307 = relay.TupleGetItem(func_3850_call(relay.reshape(const_4304.astype('uint64'), []), relay.reshape(var_4305.astype('int16'), [30, 9]), relay.reshape(var_4306.astype('float64'), [225,]), ), 3)
func_2738_call = mod.get_global_var('func_2738')
func_2740_call = mutated_mod.get_global_var('func_2740')
call_4309 = relay.TupleGetItem(func_2738_call(), 1)
call_4310 = relay.TupleGetItem(func_2740_call(), 1)
const_4314 = relay.const([[-8,-6,8,10,9,-4,-3,2,-2],[-4,3,-1,-7,-5,-4,-2,-4,1],[-10,-1,-8,-5,4,2,8,7,10],[-10,-6,-5,6,5,8,1,6,10],[-10,2,2,-10,-9,-2,4,6,-7],[-4,-10,2,-6,9,-8,3,-4,2],[10,6,10,8,10,-7,5,-9,-10],[-7,7,-8,7,-2,8,-6,-7,-8],[10,10,8,-6,-9,-9,7,7,4],[-8,-7,-9,-4,3,-7,8,-7,-7],[8,-1,10,5,-8,1,6,-10,-10],[7,-3,-5,3,10,-2,8,-2,-6],[-1,-2,-3,-8,2,3,-8,-6,-5],[3,-2,10,2,3,-9,8,10,-6],[3,-6,-3,-7,-1,3,-1,4,1],[-9,-1,7,-1,-9,-5,8,10,-2],[-10,3,-9,-7,-5,6,-4,7,7],[-7,-8,-1,-3,10,-10,-6,1,-4],[-8,-3,-4,8,-1,-5,-10,-7,1],[3,7,-7,8,-9,-7,-1,6,7],[-10,7,-10,2,-5,8,6,-9,-7],[-2,-4,-3,-4,5,6,-9,6,2],[8,-8,2,10,9,3,-8,10,3],[-2,-8,6,-6,2,1,-10,7,-4],[3,-9,3,-6,-4,-2,10,6,10],[1,9,10,9,-10,7,5,8,-2],[-5,-2,7,-8,8,4,-7,4,10],[9,3,6,-5,-9,5,2,2,-9],[-7,-5,-2,-3,-3,7,2,-1,-7],[-6,-7,3,-8,4,-8,6,-1,-10]], dtype = "int16")#candidate|4314|(30, 9)|const|int16
bop_4315 = relay.subtract(call_4303.astype('int16'), relay.reshape(const_4314.astype('int16'), relay.shape_of(call_4303))) # shape=(30, 9)
bop_4318 = relay.subtract(call_4307.astype('int16'), relay.reshape(const_4314.astype('int16'), relay.shape_of(call_4307))) # shape=(30, 9)
func_2789_call = mod.get_global_var('func_2789')
func_2791_call = mutated_mod.get_global_var('func_2791')
call_4324 = relay.TupleGetItem(func_2789_call(), 0)
call_4325 = relay.TupleGetItem(func_2791_call(), 0)
output = relay.Tuple([bop_4292,const_4304,var_4305,var_4306,call_4309,bop_4315,call_4324,])
output2 = relay.Tuple([bop_4292,const_4304,var_4305,var_4306,call_4310,bop_4318,call_4325,])
func_4331 = relay.Function([var_4291,var_4305,var_4306,], output)
mod['func_4331'] = func_4331
mod = relay.transform.InferType()(mod)
mutated_mod['func_4331'] = func_4331
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4331_call = mutated_mod.get_global_var('func_4331')
var_4333 = relay.var("var_4333", dtype = "uint8", shape = (5, 14, 7))#candidate|4333|(5, 14, 7)|var|uint8
var_4334 = relay.var("var_4334", dtype = "int16", shape = (270,))#candidate|4334|(270,)|var|int16
var_4335 = relay.var("var_4335", dtype = "float64", shape = (75, 3))#candidate|4335|(75, 3)|var|float64
call_4332 = func_4331_call(var_4333,var_4334,var_4335,)
output = call_4332
func_4336 = relay.Function([var_4333,var_4334,var_4335,], output)
mutated_mod['func_4336'] = func_4336
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4192_call = mod.get_global_var('func_4192')
func_4194_call = mutated_mod.get_global_var('func_4194')
call_4355 = relay.TupleGetItem(func_4192_call(), 0)
call_4356 = relay.TupleGetItem(func_4194_call(), 0)
uop_4357 = relay.erf(call_4355.astype('float32')) # shape=(225,)
uop_4359 = relay.erf(call_4356.astype('float32')) # shape=(225,)
func_2904_call = mod.get_global_var('func_2904')
func_2908_call = mutated_mod.get_global_var('func_2908')
const_4363 = relay.const([-7,3,-4,4,-6,7,-5,-8,-4,-7,-6,8,-3,-6,-8,-7,9,-6,9,-10,-9,8,3,8,7,-10,-4,6,9,-6,1,4,3,5,-10,-6,10,-2,-4,-10,-4,3,3,7,3,7,-1,4,-10,6,1,-8,-8,4,3,-10,-8,-6,4,1,1,9,-10,5,-1,-10,3,-5,-10,-2,7,-9,8,-6,-3,8,-6,5,2,-3,-1,9,-1,-6,7,4,-3,-9,-10,-1,-1,-6,-10,2,-3,6,8,-9,-2,-1,-6,-3,2,9,-8,-7,-3,-5,-8,-4,-1,-4,-8,9,-1,-8,-9,-7,4,5,10,10,-6,6,-1,-4,1,-3,-2,-8,5,1,7,-5,8,3,-1,-3,10,-1,-10,-5,-3,-1,-1,10,-6,-9,3,-6,-3,10,3,-1,3,-6,-6,-7,1,4,8,7,-6,-7,-10,9,3,7,3,1,-9,10,-1,-4,4,4,1,5,10,6,6,-5,-5,7,10,3,-6,-7,-7,-1,1,2,-9,-1,1,-2,5,6,-10,7,2,1,2,-6,9,1,-3,1,-9,4,10,-7,-3,-4,-7,-3,10,8,10,-2,-1,8,-3,7,-3,-4,-9,7,-5,5,1,-10,9,-4,1,-9,-8,-8,10,-5,-8,-6,-1,9,6,-9,-1,2,6,-1,2,1,1,-3,7,-1,-8,-4,-2,6,-6,-6,3,-8,-4,7,-1,7,10,-10], dtype = "int16")#candidate|4363|(270,)|const|int16
const_4364 = relay.const([[-6.633198,-5.393322,-3.850246,0.010321,3.596432],[1.711436,-9.753291,0.067504,-2.873862,9.596196],[-3.260480,4.529237,4.308313,6.945069,0.767521],[-3.762743,-7.258567,-1.792511,7.421493,-9.279731],[-3.961098,-1.349829,-3.433979,-5.296776,5.482257],[5.322816,8.613295,-3.020313,9.212990,7.562127],[-9.762513,4.080170,-9.548738,-8.463420,4.928005],[-2.493499,-5.978486,6.471763,-9.584739,-7.320728],[3.961425,2.617766,-0.387895,-0.333205,9.414333],[-5.241471,7.079718,-6.317215,-2.837053,6.344473],[6.952413,8.259871,-3.524328,8.819304,2.092054],[-8.230390,4.886086,1.873822,5.463232,7.025080],[5.192996,4.002095,7.219648,-1.143173,-2.915382],[-1.627432,7.087440,4.788702,-3.143176,-8.097757],[-8.438235,-6.840483,2.884402,-3.498015,6.480151],[4.747331,2.705111,-7.567145,1.499522,-8.645608],[-7.627359,1.454237,8.133519,-9.322768,6.416157],[2.765679,5.068631,2.721766,6.796194,-9.904575],[-3.554242,-0.901686,-1.802079,-0.695113,0.765569],[2.212434,2.373474,-6.861802,7.155494,-0.388314],[3.421690,7.465282,-7.974844,5.752305,-6.372909]], dtype = "float64")#candidate|4364|(21, 5)|const|float64
call_4362 = relay.TupleGetItem(func_2904_call(relay.reshape(const_4363.astype('int16'), [270,]), relay.reshape(const_4364.astype('float64'), [105,]), ), 5)
call_4365 = relay.TupleGetItem(func_2908_call(relay.reshape(const_4363.astype('int16'), [270,]), relay.reshape(const_4364.astype('float64'), [105,]), ), 5)
func_470_call = mod.get_global_var('func_470')
func_474_call = mutated_mod.get_global_var('func_474')
call_4369 = relay.TupleGetItem(func_470_call(relay.reshape(const_4363.astype('int16'), [6, 5, 9]), relay.reshape(const_4363.astype('int16'), [6, 5, 9]), ), 1)
call_4370 = relay.TupleGetItem(func_474_call(relay.reshape(const_4363.astype('int16'), [6, 5, 9]), relay.reshape(const_4363.astype('int16'), [6, 5, 9]), ), 1)
output = relay.Tuple([uop_4357,call_4362,const_4363,const_4364,call_4369,])
output2 = relay.Tuple([uop_4359,call_4365,const_4363,const_4364,call_4370,])
func_4371 = relay.Function([], output)
mod['func_4371'] = func_4371
mod = relay.transform.InferType()(mod)
output = func_4371()
func_4372 = relay.Function([], output)
mutated_mod['func_4372'] = func_4372
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3575_call = mod.get_global_var('func_3575')
func_3576_call = mutated_mod.get_global_var('func_3576')
call_4381 = relay.TupleGetItem(func_3575_call(), 0)
call_4382 = relay.TupleGetItem(func_3576_call(), 0)
func_3905_call = mod.get_global_var('func_3905')
func_3907_call = mutated_mod.get_global_var('func_3907')
call_4385 = func_3905_call()
call_4386 = func_3905_call()
func_470_call = mod.get_global_var('func_470')
func_474_call = mutated_mod.get_global_var('func_474')
call_4391 = relay.TupleGetItem(func_470_call(relay.reshape(call_4381.astype('int16'), [6, 5, 9]), relay.reshape(call_4381.astype('int16'), [6, 5, 9]), ), 1)
call_4392 = relay.TupleGetItem(func_474_call(relay.reshape(call_4381.astype('int16'), [6, 5, 9]), relay.reshape(call_4381.astype('int16'), [6, 5, 9]), ), 1)
output = relay.Tuple([call_4381,call_4385,call_4391,])
output2 = relay.Tuple([call_4382,call_4386,call_4392,])
func_4393 = relay.Function([], output)
mod['func_4393'] = func_4393
mod = relay.transform.InferType()(mod)
output = func_4393()
func_4394 = relay.Function([], output)
mutated_mod['func_4394'] = func_4394
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3679_call = mod.get_global_var('func_3679')
func_3681_call = mutated_mod.get_global_var('func_3681')
call_4397 = func_3679_call()
call_4398 = func_3679_call()
output = relay.Tuple([call_4397,])
output2 = relay.Tuple([call_4398,])
func_4421 = relay.Function([], output)
mod['func_4421'] = func_4421
mod = relay.transform.InferType()(mod)
output = func_4421()
func_4422 = relay.Function([], output)
mutated_mod['func_4422'] = func_4422
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3647_call = mod.get_global_var('func_3647')
func_3649_call = mutated_mod.get_global_var('func_3649')
call_4452 = func_3647_call()
call_4453 = func_3647_call()
output = relay.Tuple([call_4452,])
output2 = relay.Tuple([call_4453,])
func_4480 = relay.Function([], output)
mod['func_4480'] = func_4480
mod = relay.transform.InferType()(mod)
mutated_mod['func_4480'] = func_4480
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4480_call = mutated_mod.get_global_var('func_4480')
call_4481 = func_4480_call()
output = call_4481
func_4482 = relay.Function([], output)
mutated_mod['func_4482'] = func_4482
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3905_call = mod.get_global_var('func_3905')
func_3907_call = mutated_mod.get_global_var('func_3907')
call_4572 = func_3905_call()
call_4573 = func_3905_call()
uop_4577 = relay.atanh(call_4572.astype('float64')) # shape=(225,)
uop_4579 = relay.atanh(call_4573.astype('float64')) # shape=(225,)
output = relay.Tuple([uop_4577,])
output2 = relay.Tuple([uop_4579,])
func_4585 = relay.Function([], output)
mod['func_4585'] = func_4585
mod = relay.transform.InferType()(mod)
mutated_mod['func_4585'] = func_4585
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4585_call = mutated_mod.get_global_var('func_4585')
call_4586 = func_4585_call()
output = call_4586
func_4587 = relay.Function([], output)
mutated_mod['func_4587'] = func_4587
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4192_call = mod.get_global_var('func_4192')
func_4194_call = mutated_mod.get_global_var('func_4194')
call_4621 = relay.TupleGetItem(func_4192_call(), 0)
call_4622 = relay.TupleGetItem(func_4194_call(), 0)
uop_4629 = relay.atan(call_4621.astype('float64')) # shape=(225,)
uop_4631 = relay.atan(call_4622.astype('float64')) # shape=(225,)
func_2810_call = mod.get_global_var('func_2810')
func_2813_call = mutated_mod.get_global_var('func_2813')
var_4646 = relay.var("var_4646", dtype = "uint64", shape = ())#candidate|4646|()|var|uint64
const_4647 = relay.const([3,10,-9,1,-1,6,4,7,-7,-4,3,-1,-5,5,-9,8,6,-7,3,5,-8,-7,1,10,8,-10,-9,3,-9,-9,-9,-2,5,10,-9,1,5,2,4,3,6,-1,6,7,2,-6,1,6,9,-3,10,-8,1,-1,3,-5,9,2,-9,3,-6,-2,8,2,-3,-6,8,6,-7,2,-2,9,-2,7,1,-3,-10,6,3,5,-5,-9,-6,-10,-3,-3,9,4,-4,-3,4,3,-2,-2,-7,3,8,2,-6,-9,7,1,5,-7,10,-5,7,8,7,6,-7,-5,-8,10,-3,2,2,-8,-9,-7,7,3,2,-5,1,4,-10,-4,-9,-2,-3,2], dtype = "uint64")#candidate|4647|(132,)|const|uint64
call_4645 = relay.TupleGetItem(func_2810_call(relay.reshape(var_4646.astype('uint64'), []), relay.reshape(const_4647.astype('uint64'), [4, 11, 3]), ), 0)
call_4648 = relay.TupleGetItem(func_2813_call(relay.reshape(var_4646.astype('uint64'), []), relay.reshape(const_4647.astype('uint64'), [4, 11, 3]), ), 0)
uop_4655 = relay.asin(uop_4629.astype('float32')) # shape=(225,)
uop_4657 = relay.asin(uop_4631.astype('float32')) # shape=(225,)
output = relay.Tuple([call_4645,var_4646,const_4647,uop_4655,])
output2 = relay.Tuple([call_4648,var_4646,const_4647,uop_4657,])
func_4669 = relay.Function([var_4646,], output)
mod['func_4669'] = func_4669
mod = relay.transform.InferType()(mod)
mutated_mod['func_4669'] = func_4669
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4670 = relay.var("var_4670", dtype = "uint64", shape = ())#candidate|4670|()|var|uint64
func_4669_call = mutated_mod.get_global_var('func_4669')
call_4671 = func_4669_call(var_4670)
output = call_4671
func_4672 = relay.Function([var_4670], output)
mutated_mod['func_4672'] = func_4672
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3231_call = mod.get_global_var('func_3231')
func_3232_call = mutated_mod.get_global_var('func_3232')
call_4674 = func_3231_call()
call_4675 = func_3231_call()
output = call_4674
output2 = call_4675
func_4681 = relay.Function([], output)
mod['func_4681'] = func_4681
mod = relay.transform.InferType()(mod)
output = func_4681()
func_4682 = relay.Function([], output)
mutated_mod['func_4682'] = func_4682
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3231_call = mod.get_global_var('func_3231')
func_3232_call = mutated_mod.get_global_var('func_3232')
call_4702 = func_3231_call()
call_4703 = func_3231_call()
output = call_4702
output2 = call_4703
func_4709 = relay.Function([], output)
mod['func_4709'] = func_4709
mod = relay.transform.InferType()(mod)
output = func_4709()
func_4710 = relay.Function([], output)
mutated_mod['func_4710'] = func_4710
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4585_call = mod.get_global_var('func_4585')
func_4587_call = mutated_mod.get_global_var('func_4587')
call_4740 = relay.TupleGetItem(func_4585_call(), 0)
call_4741 = relay.TupleGetItem(func_4587_call(), 0)
var_4742 = relay.var("var_4742", dtype = "float64", shape = (225,))#candidate|4742|(225,)|var|float64
bop_4743 = relay.multiply(call_4740.astype('float32'), relay.reshape(var_4742.astype('float32'), relay.shape_of(call_4740))) # shape=(225,)
bop_4746 = relay.multiply(call_4741.astype('float32'), relay.reshape(var_4742.astype('float32'), relay.shape_of(call_4741))) # shape=(225,)
func_3868_call = mod.get_global_var('func_3868')
func_3870_call = mutated_mod.get_global_var('func_3870')
call_4769 = relay.TupleGetItem(func_3868_call(), 0)
call_4770 = relay.TupleGetItem(func_3870_call(), 0)
output = relay.Tuple([bop_4743,call_4769,])
output2 = relay.Tuple([bop_4746,call_4770,])
func_4772 = relay.Function([var_4742,], output)
mod['func_4772'] = func_4772
mod = relay.transform.InferType()(mod)
var_4773 = relay.var("var_4773", dtype = "float64", shape = (225,))#candidate|4773|(225,)|var|float64
output = func_4772(var_4773)
func_4774 = relay.Function([var_4773], output)
mutated_mod['func_4774'] = func_4774
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4779 = relay.var("var_4779", dtype = "float64", shape = (1, 3, 6))#candidate|4779|(1, 3, 6)|var|float64
uop_4780 = relay.exp(var_4779.astype('float64')) # shape=(1, 3, 6)
bop_4786 = relay.floor_divide(var_4779.astype('float64'), relay.reshape(uop_4780.astype('float64'), relay.shape_of(var_4779))) # shape=(1, 3, 6)
output = relay.Tuple([bop_4786,])
output2 = relay.Tuple([bop_4786,])
func_4789 = relay.Function([var_4779,], output)
mod['func_4789'] = func_4789
mod = relay.transform.InferType()(mod)
mutated_mod['func_4789'] = func_4789
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4790 = relay.var("var_4790", dtype = "float64", shape = (1, 3, 6))#candidate|4790|(1, 3, 6)|var|float64
func_4789_call = mutated_mod.get_global_var('func_4789')
call_4791 = func_4789_call(var_4790)
output = call_4791
func_4792 = relay.Function([var_4790], output)
mutated_mod['func_4792'] = func_4792
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3575_call = mod.get_global_var('func_3575')
func_3576_call = mutated_mod.get_global_var('func_3576')
call_4824 = relay.TupleGetItem(func_3575_call(), 0)
call_4825 = relay.TupleGetItem(func_3576_call(), 0)
func_3586_call = mod.get_global_var('func_3586')
func_3590_call = mutated_mod.get_global_var('func_3590')
const_4829 = relay.const([-4.787323,9.212506,1.735512,1.658280,-4.919771,-8.771221,-9.987994,-2.496821,2.883768,-0.733268,-6.320851,0.408883,7.727420,-3.517713,-9.976354,1.835307,7.562111,1.438878,4.946399,9.113382,-1.801601,-7.385726,-6.403353,-7.752484,5.615233,4.126357,-5.942317,-7.889476,-0.257255,-5.869184,-8.441799,3.760401,8.326067,-2.134088,5.430261,-2.809719,-3.704116,7.728822,-7.566866,-1.774182,-7.357624,9.149642,-7.756877,-9.917890,-4.249278,3.655796,-2.099037,2.479876,-1.992664,-2.736420,8.056650,4.276834,-1.410407,-1.677438,5.065344,-3.388579,-8.639689,-8.176913,3.005523,5.945478,0.307497,-9.835736,-4.233022,1.745378,2.520236,-7.323941,5.865904,-4.914724,-6.788660,-1.138756,8.282955,0.740287,-2.261194,9.360880,8.856483,7.355146,7.429665,-7.735507,1.066065,-9.698634,-3.014259,5.459518,4.006278,0.307417,-2.149999,3.074299,-2.564104,-4.222449,-5.206362,-4.633352,-3.527733,-9.074785,6.539243,2.202323,8.352087,8.500578,4.599931,4.945750,1.048627,-1.057726,-1.699284,6.583070,2.300988,4.009650,6.594160,8.136196,8.662644,-9.077759,-4.253501,-3.709105,1.821846,0.307534,-2.006430,9.555745,1.659476,-8.170363,7.167705,-8.801405,6.701520,-3.510118,2.902176,-2.485028,-3.062105,9.729327,8.483984,-8.581239,-3.840715,0.260002,-8.068172,-3.242973,-0.331061,0.047288,-5.796210,-9.726670,8.195053,8.468232,-2.990712,5.237951,-8.808612,-7.171035,-7.058327,-0.582345,-7.976266,-4.630033,1.087051,2.434070,0.085448,1.304354,-6.156222,0.408709], dtype = "float32")#candidate|4829|(150,)|const|float32
call_4828 = func_3586_call(relay.reshape(const_4829.astype('float32'), [10, 3, 5]), relay.reshape(const_4829.astype('float32'), [10, 3, 5]), )
call_4830 = func_3586_call(relay.reshape(const_4829.astype('float32'), [10, 3, 5]), relay.reshape(const_4829.astype('float32'), [10, 3, 5]), )
output = relay.Tuple([call_4824,call_4828,const_4829,])
output2 = relay.Tuple([call_4825,call_4830,const_4829,])
func_4839 = relay.Function([], output)
mod['func_4839'] = func_4839
mod = relay.transform.InferType()(mod)
output = func_4839()
func_4840 = relay.Function([], output)
mutated_mod['func_4840'] = func_4840
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3231_call = mod.get_global_var('func_3231')
func_3232_call = mutated_mod.get_global_var('func_3232')
call_4841 = func_3231_call()
call_4842 = func_3231_call()
func_3575_call = mod.get_global_var('func_3575')
func_3576_call = mutated_mod.get_global_var('func_3576')
call_4843 = relay.TupleGetItem(func_3575_call(), 0)
call_4844 = relay.TupleGetItem(func_3576_call(), 0)
output = relay.Tuple([call_4841,call_4843,])
output2 = relay.Tuple([call_4842,call_4844,])
func_4845 = relay.Function([], output)
mod['func_4845'] = func_4845
mod = relay.transform.InferType()(mod)
mutated_mod['func_4845'] = func_4845
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4845_call = mutated_mod.get_global_var('func_4845')
call_4846 = func_4845_call()
output = call_4846
func_4847 = relay.Function([], output)
mutated_mod['func_4847'] = func_4847
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3868_call = mod.get_global_var('func_3868')
func_3870_call = mutated_mod.get_global_var('func_3870')
call_4862 = relay.TupleGetItem(func_3868_call(), 0)
call_4863 = relay.TupleGetItem(func_3870_call(), 0)
const_4865 = relay.const([[[-7.490298,-4.799724,-4.185660,6.620293,-6.334875,-4.311377],[-1.333492,6.286394,0.839787,6.789203,0.516205,-5.578040],[-6.683025,8.182948,7.944235,9.344907,8.616260,3.641018],[-0.255084,-6.227590,1.168276,3.891600,7.931289,0.446523],[0.010398,7.130987,-1.325176,-5.991204,-4.699521,-8.426495],[-5.292161,8.497101,3.467089,6.649504,-9.438048,3.279000],[0.308139,4.487284,5.922020,9.156505,6.973260,9.277755],[9.954483,3.593869,9.889841,2.830152,6.488989,-8.151103],[4.591206,-0.116524,5.057466,9.222047,-1.152195,0.316443],[3.561556,-1.242275,-6.040925,-1.212232,7.892587,8.823317],[-2.705871,-6.946763,3.251973,-7.204691,5.749082,-4.925921],[-0.131993,6.946271,-0.930661,5.379555,2.576890,9.909830]],[[9.086117,2.068243,5.697114,-8.946529,-4.729497,1.987714],[8.981974,-1.343479,0.063244,5.274789,6.331198,-1.132283],[-8.699195,0.076209,-9.612446,9.378092,5.310855,-4.627470],[1.903433,-6.967383,-9.200211,3.127706,2.176228,-1.672699],[5.942541,1.835861,-8.858166,-9.460790,3.377319,-9.308986],[-6.886545,1.095503,5.056521,-0.087329,-0.933396,-5.498373],[0.382755,-8.925601,6.193079,8.089288,2.643772,1.047853],[-8.690467,-6.376921,-0.191771,8.729294,-0.304781,-6.310270],[1.449142,-5.235296,3.725170,-9.080181,-2.834681,5.100359],[2.075495,-8.894968,3.031222,-6.309196,-6.684590,6.910341],[3.491097,0.827807,-8.181455,6.077874,5.608695,8.113449],[-9.675247,3.993038,0.494069,2.205928,1.082045,9.572523]],[[9.632327,-4.387041,-2.545070,-3.849408,7.746381,4.333374],[8.938901,8.506512,-8.960544,0.437113,-9.973646,1.574261],[-0.441305,-3.233357,4.350366,-1.024710,7.055807,-2.578548],[5.553685,0.015694,-5.373987,-6.514279,-4.933653,-6.065140],[-1.678598,9.659021,-1.690602,-0.193026,5.668580,-3.144614],[-8.493193,-3.500062,-0.041489,9.934854,6.012141,-8.907528],[4.556060,-9.219940,-9.523697,-0.649803,-0.530095,4.413892],[9.483930,0.150316,-4.281594,0.162980,7.971276,-9.521610],[-7.827011,9.099541,-7.079901,1.642269,-4.071251,1.904144],[2.540701,1.780824,-6.931484,-9.433241,9.384998,-1.359443],[-2.559671,-1.067308,9.181916,7.077591,8.749326,-6.196506],[-5.047119,7.762640,5.571365,6.333470,9.597659,-9.870206]],[[9.882930,2.425407,8.664863,-7.101057,7.083676,5.288630],[3.898627,-9.374912,7.921401,-1.880310,-6.617105,-1.292545],[3.263566,-8.837320,-5.079823,-5.919065,-4.191913,-4.483616],[5.519923,0.727039,-9.118720,-6.112985,7.800847,-5.748684],[6.047202,-9.196051,-3.587644,3.809079,-1.468615,-8.353301],[-9.931316,-8.419452,-3.403162,-3.539962,5.157205,-2.762787],[-9.304222,4.938851,6.264631,-8.855382,-5.297395,4.889075],[4.554831,-7.460151,-8.086969,6.481308,7.615335,1.469232],[-0.480628,-9.342583,1.418750,5.258669,9.510471,2.492993],[-8.364837,1.036788,-6.279439,-8.278066,7.661526,3.966866],[7.787435,-3.258804,-0.014821,8.403869,-8.315242,-8.716983],[-4.416167,2.609137,-7.013113,0.147867,5.600011,-5.475089]],[[2.875150,6.779837,8.538302,-7.279947,4.673867,-5.646771],[7.341948,2.627889,2.643783,6.544104,1.597661,6.785188],[-4.068829,4.496515,4.151116,4.691872,-8.403443,9.883074],[-5.892342,-2.323085,-2.042046,1.572024,-9.318573,0.893241],[7.526050,-7.536417,-5.577417,-9.255119,-7.946181,-6.301215],[4.721471,-5.575836,-9.318371,-2.884045,1.068269,8.054771],[2.208792,8.941177,8.787953,1.279543,-1.651975,2.985985],[6.206787,3.490867,9.843281,5.376150,2.228512,-8.462109],[4.918080,-8.264840,-5.814862,-0.195469,6.242046,8.686919],[1.956377,3.850868,-8.416709,-2.254517,-1.639425,5.488898],[6.600159,8.902245,-9.847576,-0.938357,-7.110642,9.114279],[-5.417227,-2.895765,9.532701,-2.733325,-6.516798,-5.752661]],[[5.623020,-3.508120,-3.127007,2.669231,-6.981885,6.261469],[9.055252,-9.987640,-3.646456,-7.398404,7.844559,-3.894398],[-6.573259,6.207079,-9.546893,-2.519539,-7.856755,-6.457398],[-4.981393,-4.795614,-7.390732,-9.629603,-4.901980,1.899768],[-5.111827,9.167939,-8.814900,-8.317149,8.402390,1.734863],[-4.079991,8.083045,-7.739318,0.862971,0.201624,0.738107],[3.524513,6.278858,-0.306686,9.220692,-6.115702,-3.491110],[-3.259857,-5.775745,0.294012,-6.838183,2.179415,-7.078216],[8.281589,-4.058466,-5.860981,-4.404122,6.869611,7.739273],[-8.834735,-0.946146,7.793809,5.765214,-2.567938,3.040987],[0.656862,3.088834,2.250144,-6.531250,5.643911,-0.879396],[-7.503474,-4.468637,-8.382886,8.546307,-3.388148,-0.075659]],[[-4.850219,2.111667,0.404066,-9.787535,-0.008045,5.395601],[-9.005544,-4.437212,-3.358151,5.841529,7.519063,9.149801],[4.977318,-0.782206,-0.537623,6.280318,-1.451564,3.846774],[-4.038432,-1.687958,0.762050,-8.879502,5.072191,-3.526682],[7.900871,-9.155633,8.152390,8.935848,-1.115320,-8.434015],[-0.618597,-0.315260,-4.606619,-6.535426,2.963923,-1.031679],[-8.526680,-7.922056,9.036355,4.553189,-5.649313,-2.372636],[9.181427,-9.276444,8.980655,7.419675,9.658600,6.417399],[7.241215,-2.262177,-4.933897,-2.833814,5.506743,5.211466],[3.891407,-3.117211,-5.651410,5.097051,-9.157493,-8.669910],[-1.343290,6.591721,4.652650,3.601609,-6.130175,5.945788],[-3.986095,1.451791,4.114983,9.533246,8.855416,-7.444404]],[[-4.450983,-9.396999,-0.757228,-8.898705,-2.219869,-2.179245],[-4.591886,-8.854137,7.250656,-0.921678,5.100683,7.799032],[-2.612514,6.106244,-4.852024,4.859165,6.374818,6.326627],[-2.472514,-3.698953,6.380567,-2.078386,0.419280,-1.767230],[6.623144,-3.144731,-4.581637,9.593167,-2.260598,2.136467],[-2.403315,7.166489,-3.167301,9.799826,1.921974,7.984193],[-2.512489,-0.562739,-5.805759,-1.570244,2.645520,2.051510],[6.284242,-4.876013,2.073758,-2.404640,1.504770,-6.373192],[5.983327,-3.428867,7.218034,8.622343,-6.471868,8.941612],[8.432728,-7.538580,4.789218,-7.966764,-9.291609,-6.878935],[-7.128346,8.726461,6.919005,6.937009,-3.843333,9.836094],[6.556400,2.611971,-9.358967,3.860127,6.120075,3.913331]],[[8.120082,7.040772,-1.075960,0.508145,-7.005487,-7.522715],[-1.406076,-1.737044,-0.319444,0.354006,0.992884,4.228383],[1.974976,8.827509,-2.918408,5.399745,-0.493137,9.283160],[5.995218,-9.746021,8.133303,9.430020,-6.243377,-4.225545],[4.129996,7.805932,9.078863,-4.543932,6.706138,9.789601],[-2.359003,1.737900,9.842622,-4.984645,4.973703,-6.617886],[7.032258,8.084498,-3.589190,-4.063584,4.329010,-0.410892],[-2.668932,7.773073,-0.569775,8.857768,-2.721238,2.350450],[4.369248,-0.136255,-0.433560,-1.511963,-2.558412,-9.382810],[3.628707,-4.009282,-8.388942,9.079237,0.500491,-5.628674],[9.763562,0.282760,-8.995320,1.113237,-6.463075,-5.654560],[3.707234,-4.494070,-8.521887,-7.332963,-1.845761,-6.286582]],[[0.910671,9.124098,5.216358,-2.270169,-9.907680,-1.308264],[-6.720130,-2.279882,9.472234,-8.194166,5.166921,-4.663476],[0.160521,-8.664476,4.980676,-9.203843,-3.002154,9.431492],[1.176381,7.520387,4.591916,-1.229188,0.015687,-0.295161],[9.864751,7.522298,-4.499125,5.389143,-5.569282,4.400174],[-6.731191,-0.125289,0.684276,-3.901255,4.675271,-0.848475],[6.057973,0.336703,-3.892874,1.013541,-6.254940,-3.363313],[-1.276148,-1.965653,9.207734,-9.861883,2.745280,7.093932],[4.222672,4.314006,7.768533,5.773445,-5.665422,8.148081],[5.970057,-7.320746,-0.536255,-2.173310,-7.350530,4.363750],[-9.706533,-4.945218,8.657095,-2.472574,3.587657,3.670591],[-7.268930,-7.479055,8.127203,3.488261,-1.234115,-1.972904]],[[-3.418785,-9.200722,1.634195,9.627987,6.660841,6.251848],[8.394539,7.842601,7.185062,4.959659,-0.415973,-1.767995],[3.732341,-0.734603,-1.576092,-3.018173,5.175258,1.940508],[2.354069,-2.758371,-7.513162,2.740623,9.941648,7.679571],[5.827745,-1.748428,-8.880975,-0.423619,-5.462834,3.274315],[5.380553,-1.818635,-0.391491,-6.466271,-7.090769,4.123301],[-6.056021,-7.001074,6.016670,8.683211,-9.329473,-1.649567],[-0.578167,-6.594821,1.631861,7.786482,-0.710704,1.282505],[-2.360505,-6.133854,-7.176010,4.197487,-7.798711,0.527264],[7.797619,-6.422807,-5.286347,-5.371191,5.007592,-5.199680],[7.972212,-0.362347,5.077498,-9.062100,9.329528,-0.976487],[-9.286584,-3.031999,9.721048,5.503873,-0.660769,-3.028288]]], dtype = "float32")#candidate|4865|(11, 12, 6)|const|float32
bop_4866 = relay.less_equal(call_4862.astype('bool'), relay.reshape(const_4865.astype('bool'), relay.shape_of(call_4862))) # shape=(11, 12, 6)
bop_4869 = relay.less_equal(call_4863.astype('bool'), relay.reshape(const_4865.astype('bool'), relay.shape_of(call_4863))) # shape=(11, 12, 6)
func_3846_call = mod.get_global_var('func_3846')
func_3850_call = mutated_mod.get_global_var('func_3850')
var_4872 = relay.var("var_4872", dtype = "uint64", shape = ())#candidate|4872|()|var|uint64
const_4873 = relay.const([-6,-8,-9,7,5,8,-3,-7,-3,-5,10,7,-9,-9,3,-2,10,4,-10,-3,9,6,-10,2,2,4,-7,7,7,-7,-3,9,-2,3,6,-8,-9,8,1,-3,-9,7,5,-4,-2,-3,1,-8,-9,-6,9,9,-8,7,6,2,-4,3,-5,-4,-9,3,2,-4,2,-3,4,9,10,-1,4,4,-4,-1,-4,-7,-3,5,-4,4,9,-9,1,4,3,-10,9,-7,8,2,-3,5,1,-9,8,-1,3,9,5,7,-1,5,10,-2,1,2,-5,8,-6,-1,10,-1,-1,9,6,-5,5,-6,3,-5,4,-6,4,-6,-3,-5,10,-8,-8,8,4,-10,3,-4,-6,1,-4,-2,3,9,7,-10,1,8,4,-3,9,-7,-1,-9,8,10,8,-2,-10,-8,-4,5,-6,-5,9,1,3,-10,-9,-5,10,-10,-7,-1,1,3,-8,3,3,6,-5,-10,5,5,3,-10,5,-3,-2,9,-6,1,3,9,9,8,4,-4,-1,4,3,7,6,10,4,1,4,-5,-3,2,10,10,9,-5,-7,2,-5,-7,9,-8,9,-5,1,-1,-4,8,5,10,-4,-4,-5,8,-5,10,-4,-9,6,-5,3,1,1,5,-9,-9,9,-5,-10,-4,-8,1,1,-5,3,5,-8,-7,-10,-6,-7,-6,-10,3,-2,5,1,3,5,2,10,7,-6,8,7,6], dtype = "int16")#candidate|4873|(270,)|const|int16
var_4874 = relay.var("var_4874", dtype = "float64", shape = (225,))#candidate|4874|(225,)|var|float64
call_4871 = relay.TupleGetItem(func_3846_call(relay.reshape(var_4872.astype('uint64'), []), relay.reshape(const_4873.astype('int16'), [30, 9]), relay.reshape(var_4874.astype('float64'), [225,]), ), 4)
call_4875 = relay.TupleGetItem(func_3850_call(relay.reshape(var_4872.astype('uint64'), []), relay.reshape(const_4873.astype('int16'), [30, 9]), relay.reshape(var_4874.astype('float64'), [225,]), ), 4)
output = relay.Tuple([bop_4866,call_4871,var_4872,const_4873,var_4874,])
output2 = relay.Tuple([bop_4869,call_4875,var_4872,const_4873,var_4874,])
func_4878 = relay.Function([var_4872,var_4874,], output)
mod['func_4878'] = func_4878
mod = relay.transform.InferType()(mod)
var_4879 = relay.var("var_4879", dtype = "uint64", shape = ())#candidate|4879|()|var|uint64
var_4880 = relay.var("var_4880", dtype = "float64", shape = (225,))#candidate|4880|(225,)|var|float64
output = func_4878(var_4879,var_4880,)
func_4881 = relay.Function([var_4879,var_4880,], output)
mutated_mod['func_4881'] = func_4881
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4709_call = mod.get_global_var('func_4709')
func_4710_call = mutated_mod.get_global_var('func_4710')
call_4892 = func_4709_call()
call_4893 = func_4709_call()
func_2738_call = mod.get_global_var('func_2738')
func_2740_call = mutated_mod.get_global_var('func_2740')
call_4897 = relay.TupleGetItem(func_2738_call(), 1)
call_4898 = relay.TupleGetItem(func_2740_call(), 1)
func_614_call = mod.get_global_var('func_614')
func_617_call = mutated_mod.get_global_var('func_617')
const_4907 = relay.const([8.164940,6.636077,-6.936628,-9.790809,-1.762666,-2.661535,-3.241543,-4.120599,-2.707288,2.122165,-9.195061,-1.912789,-1.222154,4.302920,9.210094,3.836242,-9.609002,8.174651,-2.066815,7.658109,3.299884,-3.600591,-1.614573,5.431678,7.353359,-7.112883,-2.390889,-4.936172,8.023681,-6.322703,6.703841,-9.573276,-5.916102,6.409970,6.859356,3.498820,-9.427758,-5.679965,5.244183,-1.682121,-8.125904,-9.039321,2.760415,0.882446,-8.566666,0.517302,-6.946319,4.517690,5.721059,4.967878,3.941240,9.730903,1.897979,-9.796111,3.828453,7.657085,0.054234,-3.444805,1.793076,-1.823141,2.859401,4.834813,8.575888,4.372885,8.062876,0.891821,4.590865,1.394919,7.028912,3.653932,-9.501289,-7.192059,-9.319200,-3.770909,2.416204,9.849146,-7.172252,-2.261008,-4.539253,-8.365733,-8.922284,-4.948805,1.618186,-2.220031,-4.130764,5.166744,3.612474,-8.015086,7.174332,7.197050,4.799010,9.464971,8.336323,6.821520,5.307961,-6.123987,-3.464196,-6.226952,-3.649338,-1.703830,-2.477588,0.761000,5.035259,-6.311461,-1.741285,0.242065,-3.773080,3.056545,-5.228531,5.838586,-7.805330,-2.157788,5.951647,-4.275111,6.331084,-7.365037,3.296589,7.223075,0.690009,3.427367,1.202369,-1.006093,4.845785,-4.731167,-8.437506,-8.031599,4.229148,3.294930,4.307081,-8.142539,-5.585027,-8.461678,-4.200596,2.402817,2.249378,9.660828,0.385394,9.519571,1.418876,6.970054,8.395933,-7.832029,-5.467539,8.420320,-5.472940,-6.041997,-9.617706,-0.033659,2.033133,3.513281,-6.400241,1.310056,-9.765612,-2.729980,-0.051015,9.243515,1.690865,-4.314443,-6.977595,9.055466,0.883676,2.998987,1.443655,-9.266447,0.238582,3.494123,-3.808928,-4.219239,2.903119,-2.690538,-2.888149,-1.488342,-1.461726,2.445528,-3.521233,6.957708,-8.866126,-6.229604,-6.919207,-6.937723,-7.150108,0.068262,4.669370,3.467791,-3.358311,-8.653903,6.749242,5.529276,-5.846298,-2.112997,0.934250,-7.759236,3.741009,5.860858,-3.547382,4.911211,-6.281404,4.132562,-4.130652,-1.852983,3.319846,3.972836,2.840676,-9.997399,6.355013,3.345768,-7.591268,6.685895,-0.947299,4.893426,-2.281711,1.555794,1.080588,-7.456009,4.859158,-6.816988,-1.466812,0.851930,-3.082462,9.715381,6.079475,9.450026,-0.790534,5.779259,7.948138], dtype = "float64")#candidate|4907|(225,)|const|float64
const_4908 = relay.const([-6,-5,4,6,-10,-4,-9,3,10,9,-4,-3,2,-1,-9,4,-9,-8,5,-6,3,3,10,10,-9,-1,9,-3,-7,-3,1,6,6,-4,9,7,9,-4,6,-2,-10,10,-5,10,7,2,1,-9,-1,-8,-4,-2,7,-3,-7,9,-6,-9,-2,-6,-2,-9,4,8,3,-8,2,-10,-4,-3,-10,2,-9,-8,10,4,-2,-5,-2,-4,2,2,1,-5,8,10,8,5,-1,-2,7,-4,-6,-7,-3,-5,-2,1,2,-10,1,8,10,-9,-6,-3,-7,-4,-6,-3,-2,6,-5,9,2,-8,9,-4,-9,9,6,-10,9,-7,-5,-5,-7,4,9,-9,-3,6,3,3,5,-9,6,-5,5,1,10,-10,-9,1,8,-9,-9,4,-4,-5,-9,-1,8,-1,10,5,-9,9,9,-8,-1,9,3,-3,-10,-8,-5,-5,7,-7,7,-8,-7,6,8,3,10,-1,-7,2,3,8,8,-2,-1,-3,3,7,-10,-7,7,-8,-4,-4,3,8,-3,-3,-4,-8,-6,-5,2,-8,-7,1,-5,-4,9,-9,1,8,6,5,-8,4,3,2,3,10,-5,5,1,8,-5,-2,-4,10,-2,7,9,-4,9,10,6,-2,-2,-10,6,2,-4,-10,3,-6,7,4,3,10,4,5,-3,-10,6,5,7,-5,-2,-7,5,1,-7,1,3,-5,5,-8,9,-1,-7,6], dtype = "int16")#candidate|4908|(270,)|const|int16
call_4906 = relay.TupleGetItem(func_614_call(relay.reshape(const_4907.astype('float64'), [1, 15, 15]), relay.reshape(const_4908.astype('int16'), [270,]), ), 0)
call_4909 = relay.TupleGetItem(func_617_call(relay.reshape(const_4907.astype('float64'), [1, 15, 15]), relay.reshape(const_4908.astype('int16'), [270,]), ), 0)
func_2686_call = mod.get_global_var('func_2686')
func_2691_call = mutated_mod.get_global_var('func_2691')
var_4918 = relay.var("var_4918", dtype = "float64", shape = (420,))#candidate|4918|(420,)|var|float64
var_4919 = relay.var("var_4919", dtype = "float64", shape = (105,))#candidate|4919|(105,)|var|float64
call_4917 = relay.TupleGetItem(func_2686_call(relay.reshape(var_4918.astype('float64'), [3, 10, 14]), relay.reshape(call_4897.astype('float32'), [1540,]), relay.reshape(var_4919.astype('float64'), [105,]), ), 4)
call_4920 = relay.TupleGetItem(func_2691_call(relay.reshape(var_4918.astype('float64'), [3, 10, 14]), relay.reshape(call_4897.astype('float32'), [1540,]), relay.reshape(var_4919.astype('float64'), [105,]), ), 4)
output = relay.Tuple([call_4892,call_4897,call_4906,const_4907,const_4908,call_4917,var_4918,var_4919,])
output2 = relay.Tuple([call_4893,call_4898,call_4909,const_4907,const_4908,call_4920,var_4918,var_4919,])
func_4927 = relay.Function([var_4918,var_4919,], output)
mod['func_4927'] = func_4927
mod = relay.transform.InferType()(mod)
mutated_mod['func_4927'] = func_4927
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4927_call = mutated_mod.get_global_var('func_4927')
var_4929 = relay.var("var_4929", dtype = "float64", shape = (420,))#candidate|4929|(420,)|var|float64
var_4930 = relay.var("var_4930", dtype = "float64", shape = (105,))#candidate|4930|(105,)|var|float64
call_4928 = func_4927_call(var_4929,var_4930,)
output = call_4928
func_4931 = relay.Function([var_4929,var_4930,], output)
mutated_mod['func_4931'] = func_4931
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4953 = relay.var("var_4953", dtype = "float32", shape = (16, 1, 3))#candidate|4953|(16, 1, 3)|var|float32
uop_4954 = relay.log10(var_4953.astype('float32')) # shape=(16, 1, 3)
func_3377_call = mod.get_global_var('func_3377')
func_3380_call = mutated_mod.get_global_var('func_3380')
const_4968 = relay.const([[-5.024720,6.105860,-2.108856],[5.663075,-9.809414,-5.053268],[5.536399,5.187811,-2.653343],[2.191994,8.595884,1.402308],[-0.386904,-1.140800,-6.306384],[2.982989,-1.429166,4.687889],[-3.962524,8.271693,-9.786272],[-4.869833,3.149823,5.294394],[-4.481980,1.400976,-6.540133],[6.572960,9.668024,7.266371],[4.872623,3.898574,7.216826],[-8.385863,4.014317,6.389153],[6.808044,7.770511,5.843856],[4.461365,-5.801550,5.363229],[8.975419,9.409939,-3.942947],[-2.339614,9.411803,-6.420619],[-0.559796,2.636757,-2.283204],[0.071919,-3.587815,-0.424200],[7.910033,8.751599,-2.291399],[2.258782,-2.991008,0.351871],[5.564380,-2.481246,2.435084],[-6.830312,-8.987816,6.437201],[-6.215136,-1.617517,6.845740],[-5.554730,-4.577931,-2.251631],[-1.538425,-1.825112,4.300366],[5.200638,-3.049963,7.559777],[-6.893890,2.863045,7.281537],[2.593638,-8.517561,6.583098],[-7.127690,-1.904966,8.507154],[-1.294728,-0.271852,-2.199169],[-1.534585,0.869053,-3.459282],[-3.839866,-3.974661,0.805160],[-2.521321,2.194416,-2.241538],[-1.090160,-0.622464,-1.788844],[-0.596898,4.944341,3.207677],[-6.048299,8.840010,-7.176310],[-5.620116,9.445894,6.744770],[9.646222,2.459005,-5.192607],[3.038802,4.239533,7.049890],[2.410330,-7.816618,3.705010],[3.870545,9.448229,1.136244],[-7.838709,-5.778937,-4.442697],[-4.495771,8.011999,-5.220605],[6.221847,-5.537089,8.029044],[-8.899015,2.641277,2.327524],[1.761360,-5.571118,7.658907],[-6.479722,-5.550317,9.398487],[-3.648906,-1.799688,-6.112958],[0.900990,-4.897660,-4.176985],[-8.157771,-0.971072,8.094046],[-5.529176,-0.136531,7.162245],[-3.700152,0.589961,-7.178919],[2.051999,-4.352241,-2.920772],[-6.836093,0.924359,3.439074],[-2.308654,-8.165100,-5.408205],[-4.762229,-6.746092,3.137033],[-7.183708,-4.474050,-1.341512],[7.334539,0.569454,8.466861],[-3.579507,-5.727765,-5.248112],[8.903562,2.967662,-9.043027],[9.773887,-7.667370,5.798138],[5.772635,7.997960,-0.604783],[-1.366769,0.679211,4.945812],[9.319857,-9.310374,9.421253],[4.900292,7.790177,3.381367],[-6.284277,-2.307405,-0.686566],[7.756328,1.511130,1.105738],[-4.445710,4.908988,-0.791463],[4.876166,-8.373976,9.330931],[-5.362792,-5.090144,2.156110],[3.910058,-7.294235,-6.240777],[-4.867793,-3.114062,-9.644691],[5.695164,2.603985,-9.517373],[8.400972,6.462387,4.077071],[-9.410618,-7.274459,2.366573],[-5.105228,4.935333,-9.407825],[9.114570,2.718450,-1.778364],[-9.374935,9.130159,5.817653],[5.805706,9.479183,-4.587575],[6.831497,-2.978277,-6.110875],[3.580295,3.595331,4.053852],[-7.771396,-4.088446,5.066589],[0.204494,-1.279997,4.236015],[-6.997769,-8.460785,-8.124785],[-2.716504,6.091423,5.312176],[-4.950976,-4.830939,1.345616],[0.415185,6.161323,-5.034635],[-1.752817,-0.990332,-1.648306],[-4.201698,-0.986837,-5.459681],[-9.382483,-3.608983,6.801069],[2.468076,-1.212619,4.988528],[6.621410,1.301681,-3.509060],[3.385520,9.518675,8.994771],[-6.489701,-5.479228,5.951585],[9.738705,6.727870,7.009686],[0.025872,-8.460463,7.099817],[6.946014,-3.078742,0.803733],[-1.120838,6.994421,-6.871367],[7.282948,0.133190,7.848984],[-3.529234,-2.828010,-5.368863],[5.279009,-9.262218,8.243698],[9.263227,-7.817730,5.437695],[8.027568,2.662616,4.096702],[5.091568,-4.771077,-1.191362],[4.762738,-1.643296,-9.160827],[-0.473242,-8.058454,3.269289],[-3.372243,-6.130536,-6.661887],[-0.505134,-3.268010,-8.378022],[9.542603,-3.541671,-0.678275],[9.713041,-8.477761,6.491530],[-4.824062,-3.960039,-0.342727],[-3.782036,-4.784456,-6.257687],[-1.509378,-3.003943,-0.846594],[-5.405858,5.655504,4.480556],[4.789581,7.809978,-4.897067],[-9.507917,-3.489061,7.135582],[-1.276426,3.611104,-0.839194],[0.632744,-2.140727,0.027061],[-8.234209,-0.515372,7.517962],[-8.197028,-0.715284,-6.863074],[-5.163743,3.625726,4.528597],[-3.791538,-5.800021,-7.233791],[8.694730,8.597537,-0.763232],[-0.759393,-6.107350,-5.525329],[-0.323541,-5.307836,-9.307202],[9.179231,1.320301,-7.325457],[4.998801,-8.347614,-2.924605],[-8.088464,-3.857098,-1.228637],[3.187654,-8.210537,3.689277],[5.862723,0.170391,0.232606],[-4.688645,-5.101957,8.304918],[-3.703251,9.857747,0.596301],[3.546732,1.729045,9.056437],[-1.183211,-3.354370,1.351982],[2.564511,6.964631,-8.248769],[7.737130,4.379921,2.405134],[-6.162471,3.993302,-7.645643],[1.199547,8.048386,-2.078621],[-8.509672,4.960065,4.921979],[6.402275,6.247188,2.815914],[3.385282,-1.653939,-4.283974],[9.791677,8.516899,7.253485],[2.882374,7.559579,5.798671],[-8.394524,3.095574,4.830223],[-5.835372,3.604710,6.789086],[5.685756,7.013002,-1.562564],[5.894550,-1.581573,-8.341895],[2.986781,5.539547,-1.136260],[-6.145968,-6.553043,-1.345708],[-1.305958,-5.056191,-2.692188],[-4.633058,-4.378009,9.746494],[4.824244,3.441593,8.438887],[6.691146,7.440807,-2.381982],[-0.475117,-6.689775,-9.514627],[-7.211124,1.285221,-7.646431],[-7.347911,-8.133318,3.907827],[3.658668,-9.600993,-2.763219],[9.095539,-6.578116,-5.799565],[-0.012648,6.823029,-5.032602],[-3.622457,-7.700411,2.390107],[8.272463,1.120651,2.196852],[-3.848921,-3.730553,5.300628],[-8.143472,-7.685469,4.897257],[3.654371,8.132033,2.841862],[-7.048010,-6.578793,6.480209],[-4.011269,-3.746512,-2.223812],[-9.822980,-1.809541,-0.934553],[7.572566,-8.478465,4.782131],[5.355737,-3.080640,-7.092259],[-7.827018,8.283466,5.055330],[-0.931821,4.437602,-4.716628],[-9.043449,-8.101987,4.156196],[-5.885682,-2.139704,-0.338396],[3.915506,-3.950119,6.229483],[8.889919,-9.396674,-0.660718],[4.783196,7.949872,1.377842],[9.913572,-9.029942,4.394884],[-5.295125,-2.551413,-5.726009],[-9.123984,-7.319634,9.667108],[7.642047,7.214176,7.468586],[-7.425084,1.659095,-5.697410],[9.232009,-1.823028,9.019059],[8.692506,-6.000668,-3.064372],[-2.267059,-2.126641,-1.667440],[-9.262694,-4.611009,7.166935],[-2.539622,-0.902940,2.336802],[-4.948519,-4.582632,-7.487356],[-0.311583,6.062268,7.841537],[-7.173244,4.216446,8.387855],[-7.313516,3.868454,9.721813],[8.476312,-0.078461,0.798650],[-1.575486,-5.678280,6.713864],[-7.756009,-4.531118,-7.670891],[-5.590818,-8.072779,7.876761],[3.219495,3.062471,-4.571032],[5.825283,-7.483753,3.826424],[0.864950,-7.272264,0.206212],[-3.639037,6.207113,8.490737],[-0.028650,-7.018044,4.644268],[-1.892146,-8.419887,-3.274675],[4.992864,-5.887232,5.772946],[1.167358,2.046690,5.107905],[5.299602,-5.290629,-2.567849],[-5.231807,3.011504,5.484466],[-3.217790,6.228970,-9.090336],[8.212376,0.052347,1.140956],[-5.973198,0.261310,-6.661671],[-7.580500,-1.113653,2.989046],[-4.949681,-8.577090,-5.822378],[6.117439,1.802644,1.608868],[-7.979657,8.876462,-3.322425],[-2.993874,-3.026588,-7.623080],[-3.872893,-5.800650,-2.468066],[-6.536115,-6.571240,-3.407958],[-7.257912,6.596396,1.234899],[9.805032,-3.469657,1.588760],[-0.452385,7.226308,-6.029374],[8.773151,-0.078990,5.803229],[7.056739,1.787340,-3.271350],[3.865829,6.651429,1.296649],[0.506199,-8.602454,2.526897],[2.612857,-6.053658,-9.312643],[-8.996800,9.018704,-6.827807],[8.792456,-4.629925,8.432527],[3.026448,-9.070939,0.761939],[2.774840,-1.212661,-1.183135],[6.161843,2.535190,-8.385363],[-6.008302,-6.786741,3.332112],[9.040236,-1.549264,-9.598870],[-8.549196,-1.481877,-6.047310],[-5.005133,2.147884,-2.860459],[6.842164,8.191865,7.394693],[-0.028660,-8.356074,9.818328],[7.532593,4.839743,2.974755],[0.017242,4.938150,-4.911267],[-9.455030,1.805212,9.596785],[2.121104,9.839037,-8.747537],[0.716042,2.254383,4.100728],[5.588338,9.830523,-0.152106],[-4.391867,-3.821030,-9.676611],[-0.151038,-5.005837,-1.848154],[1.298690,-8.012209,-8.638301],[9.159440,6.761918,8.366637],[9.070479,-1.235888,1.841221],[7.825255,-3.464181,2.499023],[-7.042050,0.467448,4.852616],[3.089442,-1.513294,-0.591177],[-9.452433,-3.531743,-4.850685],[-0.971804,-5.915579,-0.911530],[3.362355,-8.264052,4.983299],[-4.614411,9.627280,-0.840681],[3.391081,9.589412,0.449615],[-8.866390,2.329447,-6.061178],[5.222112,1.831444,2.619379],[9.732061,-1.787698,-2.152505],[-9.104674,9.280537,3.548025],[-2.235184,7.667610,-2.875772],[6.971881,-6.572610,0.781839],[-8.535064,2.373150,-6.600342],[6.723136,-9.640058,0.448614],[-4.295660,1.141325,6.871715],[9.415238,-6.191967,7.057924],[-2.926578,6.428125,3.255125],[5.208286,0.088023,-5.520405],[1.421512,-7.818355,7.386347],[-2.179202,8.177484,9.876552],[-4.058598,-7.831712,-0.874069],[0.377449,8.740976,1.345761],[8.548544,-5.288900,-3.786347],[0.616046,2.209698,0.168197],[8.587697,-2.666950,1.813679],[-0.288159,-1.326890,-3.191964],[-3.963183,1.529608,8.999731],[2.512027,9.983197,2.354162],[-7.353956,7.413743,-4.056433],[-9.474089,8.917194,-0.575253],[-3.181822,-4.410870,-8.988183],[1.835522,4.528166,-4.454453],[-4.419398,2.822896,0.658466],[8.592148,0.393663,3.633826],[0.931904,-0.730720,-0.582537],[6.481907,2.252318,-7.172518],[8.022734,-1.017418,-6.905964],[5.914525,-1.760560,9.790594],[4.843929,3.305141,1.012284],[2.420165,-3.457763,3.105049],[-4.184677,-8.768443,5.572088],[6.492649,-4.451907,7.934888],[-8.251638,2.868291,5.297190],[3.271325,2.221386,-4.570162],[5.610714,9.892964,6.046251],[2.911449,-7.885867,7.814091],[-2.556558,-0.329318,-0.727331],[7.730014,-2.677444,-7.112845],[4.785047,-3.319286,-2.454257],[-4.466975,-7.535745,-8.139926],[-3.139720,-2.684369,9.869444],[-0.556095,-6.407244,-2.636009],[-0.997120,-7.713303,3.540797],[9.335424,-1.529890,6.614507],[-8.148921,-9.673698,-1.934612],[-8.173603,-6.308689,3.714125],[-8.562459,4.526196,-1.744888],[6.519401,-6.644972,3.249392],[-3.825237,-8.265956,-9.790809],[-4.022635,4.932253,-2.079990],[7.373145,6.858346,8.719813],[7.701994,-8.510594,-8.903626],[-9.114600,-9.025993,6.985510],[-3.365316,-7.795091,-6.386675],[6.988811,4.974929,-0.759419],[-6.810223,-9.481517,9.834078],[-9.423060,9.745251,-3.407036],[2.061690,6.690474,7.815288],[9.324827,4.506801,-3.565866],[-6.558534,-8.593857,8.472508],[2.156102,-9.620374,9.022038],[9.743253,-6.089423,-3.844786],[5.441541,0.145806,9.262564],[0.120418,2.607331,-1.995362],[6.200554,0.917297,-4.681056],[-0.981683,-1.212431,1.272287],[-3.601977,6.846159,1.305979],[6.190552,3.593066,-8.839707],[1.047089,7.985609,-9.741762],[2.188967,-7.371965,3.411823],[8.695677,0.334998,-4.790844],[1.629644,9.351876,6.317086],[-8.571713,6.401066,8.050121],[1.848793,-1.492848,6.858656],[-1.567882,-3.338875,3.922101],[-9.238001,2.479468,-8.071149],[-9.431181,-5.016391,-1.137579],[6.496649,6.236504,-5.071418],[-1.564267,0.636829,-7.162839],[3.088978,1.507425,-4.755936],[6.578106,9.180186,-5.138296],[-3.083941,2.078871,-7.701690],[-0.719097,2.260675,6.584032],[-9.202670,3.711052,-3.410219],[9.388479,-5.173379,1.227230],[7.640631,5.359973,4.022965],[8.256332,5.058045,-0.037255],[-6.277508,3.133583,-7.624259],[-8.462079,-6.117424,5.663027],[7.506479,-5.766962,7.570744],[-0.235956,-7.307092,-2.250124],[9.343513,5.273065,-9.697526],[5.869594,-8.904658,-2.141183],[3.075660,3.489926,-5.775683],[-6.670720,1.581448,-5.756910],[-7.591219,-9.465364,-4.404777],[-6.240156,-4.904210,-4.185449],[1.929954,3.989844,-6.797242],[2.839375,-9.749904,9.338355],[1.148097,4.235403,-2.226275],[4.989648,-7.164131,8.900848],[-4.589859,6.165157,3.815847],[-1.145300,3.150380,-7.891982],[9.393041,0.721181,2.801338],[9.786435,-4.134457,9.327994],[-1.582672,8.990804,-0.137572],[9.590968,-5.362238,5.651575],[0.632236,-2.100419,-6.405514],[-9.586267,-2.127013,0.484394],[2.785101,-3.185894,7.495654],[-1.603175,8.122831,2.189065],[6.324810,-9.445800,5.211347],[6.151426,6.490033,5.516221],[8.731061,-1.111548,2.139927],[7.206119,-1.334901,-4.470557],[3.033942,2.359191,-5.886131],[4.905347,2.156590,3.343662],[0.427289,7.766309,-5.960329],[-3.253074,2.455687,-9.223297],[2.183778,7.860320,0.313151],[4.330956,-5.729480,5.169339],[6.060073,-4.994329,7.813031],[5.302769,1.375113,7.715449],[0.162742,2.886188,-7.957388],[2.481358,5.662103,5.994707],[-6.809145,1.639132,8.791252],[5.405487,1.658801,-8.524960],[0.243970,-2.605809,-8.746023],[2.819194,2.959301,-8.797391],[-2.482219,4.541097,-8.958915],[-5.246688,-8.294607,-9.271890],[7.641272,-0.709862,1.361467],[6.162161,3.109962,3.818708],[8.006274,6.877365,6.845151],[6.397458,-1.249463,2.429498],[9.292903,7.106429,-9.265041],[-4.250772,-8.047425,-6.686559],[3.640713,-0.968752,4.575768],[-4.572316,-0.988783,-0.817925],[-7.798315,8.028637,-6.552864],[9.303019,2.861828,8.450980],[-5.833841,5.973560,1.195971],[0.675905,7.982422,9.797557],[9.099721,8.907150,0.691293],[-0.068832,7.734486,-1.786121],[-9.275410,-4.696464,1.233697],[5.916166,9.963156,-2.309992],[2.755879,6.707275,8.818645],[4.539172,-5.622560,1.050164],[-8.943497,8.742278,5.333109],[-0.368550,-1.024553,0.779907],[-4.501976,9.431527,0.809195],[-5.829081,7.334775,7.289967],[-6.383003,-4.243143,-4.703051],[0.082318,0.602732,-4.292161],[-0.948266,-1.591106,4.932970],[-2.426002,3.286464,4.395404],[5.488931,8.054451,0.543446],[-5.751315,2.339712,2.844945],[-3.780371,4.952777,3.208036],[-4.688294,-1.903088,-4.759871],[9.868080,1.377681,9.795075],[2.866988,6.058780,1.821186],[-2.190129,-8.667855,-9.563043],[0.712934,-1.599631,-6.426987],[-6.674323,-6.610899,-3.368441],[0.862816,7.752110,-6.283210],[7.842276,-7.524043,-3.093438],[-7.700012,7.182078,-8.018287],[-9.817720,-3.064705,-5.129671],[-1.259932,6.889865,8.022480],[-9.955091,2.773297,-0.861487],[-7.877835,-4.257427,-3.083842],[-0.631497,6.428908,6.857695],[-5.011540,1.714466,8.000211],[8.188321,-3.021562,-2.548893],[-6.443691,-2.737013,-4.304997],[5.686885,7.188164,1.297825],[-0.719390,-5.373203,1.904670],[-0.673242,9.514311,-6.789964],[6.219505,-8.151372,3.460053],[-3.729255,1.223543,5.232798],[5.377918,-7.555766,-0.296942],[-5.998088,-1.566725,-9.941154],[-3.647188,9.669887,-3.897436],[-4.995875,0.773535,-5.232867],[6.797433,1.480963,5.488471],[4.653532,8.653964,6.224468],[4.217965,2.888997,-3.311868],[-8.304028,-2.991910,-3.829312],[1.603197,-7.277163,-4.330226],[8.271409,6.627063,-1.726853],[-2.906451,9.593149,-3.626674],[6.502435,-0.903762,4.023359],[8.800440,-7.417132,7.674186],[-4.176892,2.205736,7.740216],[8.273958,-7.896715,8.161701],[-4.824597,-9.576380,-5.509871],[-7.820059,-3.970448,-0.191730],[-3.889419,6.425844,7.036949],[4.563994,-1.177175,-1.982849],[-8.336231,-6.208375,6.110746],[-0.995259,8.802394,4.538069],[5.769978,-9.226198,9.035766],[5.117766,-1.993810,-6.001715],[5.153949,6.130564,-0.351981],[5.925016,-1.948910,7.419864],[-0.836223,6.105635,-8.289584],[3.545069,-7.416211,-6.581649],[-9.826439,7.996264,-8.426096],[-5.656913,-7.879572,1.217331],[9.229247,9.345848,4.027496],[8.678423,-6.884803,6.755480],[-3.449794,-5.735972,-8.197429],[-0.500125,-6.480792,4.809479],[5.497216,-7.901271,-7.164679],[-6.699560,2.636597,9.558742],[1.346508,-9.920798,6.354179],[-8.519060,-8.726707,-3.625175],[4.816590,1.016582,4.994135],[5.607347,-9.494247,-5.543440],[6.214756,-7.123410,-1.427227],[5.129648,4.533256,-7.284930],[-0.264284,-4.506130,3.328296],[1.625821,1.729635,6.987858],[-8.763718,1.034464,-3.047983],[2.684736,-7.358333,-5.246071],[7.209916,-0.828649,2.143633],[3.573386,-1.380151,-1.716391],[-4.782660,-1.593821,-5.632631],[-6.369520,-3.360000,3.133850],[4.662668,3.290379,3.596796],[5.309862,8.694344,8.639232],[-9.750881,-6.109729,-2.672257]], dtype = "float64")#candidate|4968|(490, 3)|const|float64
call_4967 = relay.TupleGetItem(func_3377_call(relay.reshape(const_4968.astype('float64'), [14, 15, 7])), 0)
call_4969 = relay.TupleGetItem(func_3380_call(relay.reshape(const_4968.astype('float64'), [14, 15, 7])), 0)
func_2488_call = mod.get_global_var('func_2488')
func_2492_call = mutated_mod.get_global_var('func_2492')
const_4984 = relay.const([[-8,6,-6],[-10,-3,3],[5,3,-7],[9,-8,-10],[5,5,-7],[8,5,-3],[2,7,4],[-1,5,-1],[2,10,6],[8,-3,3],[-3,7,-5],[-10,4,2],[-7,-8,-6],[7,-9,-9],[10,-8,4],[4,4,-7],[10,6,5],[3,-3,-4],[-2,-7,1],[-7,5,3],[9,-7,7],[-10,1,4],[-5,8,9],[-5,5,3],[-9,-7,6],[-6,-7,7],[-8,4,2],[5,-6,5],[5,8,3],[-3,2,9],[-10,-4,-9],[-3,-6,6],[3,-7,-2],[-6,-2,6],[4,10,-1],[-5,-7,10],[-7,-2,-7],[5,10,1],[-4,-1,-1],[-2,8,10],[-4,-10,1],[-6,2,3],[8,3,10],[2,-1,10],[9,7,-7],[-7,-2,-1],[-9,-3,-7],[-2,6,3],[-9,10,7],[4,-4,-5],[9,-2,-1],[4,-2,-2],[-5,3,10],[-9,-2,-1],[-1,-9,7],[5,-6,-7],[-10,6,9],[-10,-2,8],[-1,-3,10],[-4,-10,-5],[6,4,-9],[-6,1,-10],[10,7,-2],[-4,-5,-8],[2,3,6],[10,10,-2],[5,7,-2],[6,-6,3],[-9,-3,-5],[-7,-2,8],[10,9,-2],[-10,-3,-2],[-5,-6,-3],[-1,10,-5],[2,2,4],[-3,10,8],[-7,10,7],[-4,2,5],[2,6,-7],[-7,-4,-6],[-2,5,-3],[5,-1,-9],[-9,-3,2],[6,4,-6],[-4,-4,3],[-7,9,9],[4,1,1],[6,-2,2],[-8,9,-8],[-7,-9,1]], dtype = "int16")#candidate|4984|(90, 3)|const|int16
var_4985 = relay.var("var_4985", dtype = "int64", shape = (1120,))#candidate|4985|(1120,)|var|int64
call_4983 = relay.TupleGetItem(func_2488_call(relay.reshape(const_4984.astype('int16'), [270,]), relay.reshape(var_4985.astype('int64'), [10, 16, 7]), ), 1)
call_4986 = relay.TupleGetItem(func_2492_call(relay.reshape(const_4984.astype('int16'), [270,]), relay.reshape(var_4985.astype('int64'), [10, 16, 7]), ), 1)
uop_4996 = relay.asin(uop_4954.astype('float64')) # shape=(16, 1, 3)
func_3100_call = mod.get_global_var('func_3100')
func_3102_call = mutated_mod.get_global_var('func_3102')
const_5002 = relay.const(-9, dtype = "uint8")#candidate|5002|()|const|uint8
call_5001 = relay.TupleGetItem(func_3100_call(relay.reshape(const_5002.astype('uint8'), [])), 0)
call_5003 = relay.TupleGetItem(func_3102_call(relay.reshape(const_5002.astype('uint8'), [])), 0)
output = relay.Tuple([call_4967,const_4968,call_4983,const_4984,var_4985,uop_4996,call_5001,const_5002,])
output2 = relay.Tuple([call_4969,const_4968,call_4986,const_4984,var_4985,uop_4996,call_5003,const_5002,])
func_5029 = relay.Function([var_4953,var_4985,], output)
mod['func_5029'] = func_5029
mod = relay.transform.InferType()(mod)
mutated_mod['func_5029'] = func_5029
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5029_call = mutated_mod.get_global_var('func_5029')
var_5031 = relay.var("var_5031", dtype = "float32", shape = (16, 1, 3))#candidate|5031|(16, 1, 3)|var|float32
var_5032 = relay.var("var_5032", dtype = "int64", shape = (1120,))#candidate|5032|(1120,)|var|int64
call_5030 = func_5029_call(var_5031,var_5032,)
output = call_5030
func_5033 = relay.Function([var_5031,var_5032,], output)
mutated_mod['func_5033'] = func_5033
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3231_call = mod.get_global_var('func_3231')
func_3232_call = mutated_mod.get_global_var('func_3232')
call_5055 = func_3231_call()
call_5056 = func_3231_call()
var_5057 = relay.var("var_5057", dtype = "bool", shape = (11, 14, 10))#candidate|5057|(11, 14, 10)|var|bool
bop_5058 = relay.maximum(call_5055.astype('float32'), relay.reshape(var_5057.astype('float32'), relay.shape_of(call_5055))) # shape=(11, 14, 10)
bop_5061 = relay.maximum(call_5056.astype('float32'), relay.reshape(var_5057.astype('float32'), relay.shape_of(call_5056))) # shape=(11, 14, 10)
func_4839_call = mod.get_global_var('func_4839')
func_4840_call = mutated_mod.get_global_var('func_4840')
call_5062 = relay.TupleGetItem(func_4839_call(), 1)
call_5063 = relay.TupleGetItem(func_4840_call(), 1)
uop_5075 = relay.atanh(var_5057.astype('float64')) # shape=(11, 14, 10)
output = relay.Tuple([bop_5058,call_5062,uop_5075,])
output2 = relay.Tuple([bop_5061,call_5063,uop_5075,])
func_5083 = relay.Function([var_5057,], output)
mod['func_5083'] = func_5083
mod = relay.transform.InferType()(mod)
var_5084 = relay.var("var_5084", dtype = "bool", shape = (11, 14, 10))#candidate|5084|(11, 14, 10)|var|bool
output = func_5083(var_5084)
func_5085 = relay.Function([var_5084], output)
mutated_mod['func_5085'] = func_5085
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5123 = relay.var("var_5123", dtype = "float64", shape = (8, 1, 16))#candidate|5123|(8, 1, 16)|var|float64
uop_5124 = relay.erf(var_5123.astype('float64')) # shape=(8, 1, 16)
bop_5137 = relay.logical_xor(uop_5124.astype('uint16'), relay.reshape(var_5123.astype('uint16'), relay.shape_of(uop_5124))) # shape=(8, 1, 16)
output = bop_5137
output2 = bop_5137
func_5158 = relay.Function([var_5123,], output)
mod['func_5158'] = func_5158
mod = relay.transform.InferType()(mod)
var_5159 = relay.var("var_5159", dtype = "float64", shape = (8, 1, 16))#candidate|5159|(8, 1, 16)|var|float64
output = func_5158(var_5159)
func_5160 = relay.Function([var_5159], output)
mutated_mod['func_5160'] = func_5160
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3231_call = mod.get_global_var('func_3231')
func_3232_call = mutated_mod.get_global_var('func_3232')
call_5269 = func_3231_call()
call_5270 = func_3231_call()
func_699_call = mod.get_global_var('func_699')
func_703_call = mutated_mod.get_global_var('func_703')
var_5272 = relay.var("var_5272", dtype = "int16", shape = (286,))#candidate|5272|(286,)|var|int16
call_5271 = func_699_call(relay.reshape(var_5272.astype('int16'), [2, 13, 11]), relay.reshape(var_5272.astype('int16'), [2, 13, 11]), )
call_5273 = func_699_call(relay.reshape(var_5272.astype('int16'), [2, 13, 11]), relay.reshape(var_5272.astype('int16'), [2, 13, 11]), )
output = relay.Tuple([call_5269,call_5271,var_5272,])
output2 = relay.Tuple([call_5270,call_5273,var_5272,])
func_5277 = relay.Function([var_5272,], output)
mod['func_5277'] = func_5277
mod = relay.transform.InferType()(mod)
mutated_mod['func_5277'] = func_5277
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5278 = relay.var("var_5278", dtype = "int16", shape = (286,))#candidate|5278|(286,)|var|int16
func_5277_call = mutated_mod.get_global_var('func_5277')
call_5279 = func_5277_call(var_5278)
output = call_5279
func_5280 = relay.Function([var_5278], output)
mutated_mod['func_5280'] = func_5280
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4845_call = mod.get_global_var('func_4845')
func_4847_call = mutated_mod.get_global_var('func_4847')
call_5302 = relay.TupleGetItem(func_4845_call(), 1)
call_5303 = relay.TupleGetItem(func_4847_call(), 1)
func_2904_call = mod.get_global_var('func_2904')
func_2908_call = mutated_mod.get_global_var('func_2908')
var_5308 = relay.var("var_5308", dtype = "float64", shape = (105,))#candidate|5308|(105,)|var|float64
call_5307 = relay.TupleGetItem(func_2904_call(relay.reshape(call_5302.astype('int16'), [270,]), relay.reshape(var_5308.astype('float64'), [105,]), ), 2)
call_5309 = relay.TupleGetItem(func_2908_call(relay.reshape(call_5302.astype('int16'), [270,]), relay.reshape(var_5308.astype('float64'), [105,]), ), 2)
func_3231_call = mod.get_global_var('func_3231')
func_3232_call = mutated_mod.get_global_var('func_3232')
call_5316 = func_3231_call()
call_5317 = func_3231_call()
output = relay.Tuple([call_5302,call_5307,var_5308,call_5316,])
output2 = relay.Tuple([call_5303,call_5309,var_5308,call_5317,])
func_5327 = relay.Function([var_5308,], output)
mod['func_5327'] = func_5327
mod = relay.transform.InferType()(mod)
var_5328 = relay.var("var_5328", dtype = "float64", shape = (105,))#candidate|5328|(105,)|var|float64
output = func_5327(var_5328)
func_5329 = relay.Function([var_5328], output)
mutated_mod['func_5329'] = func_5329
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4192_call = mod.get_global_var('func_4192')
func_4194_call = mutated_mod.get_global_var('func_4194')
call_5359 = relay.TupleGetItem(func_4192_call(), 0)
call_5360 = relay.TupleGetItem(func_4194_call(), 0)
output = relay.Tuple([call_5359,])
output2 = relay.Tuple([call_5360,])
func_5370 = relay.Function([], output)
mod['func_5370'] = func_5370
mod = relay.transform.InferType()(mod)
mutated_mod['func_5370'] = func_5370
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5370_call = mutated_mod.get_global_var('func_5370')
call_5371 = func_5370_call()
output = call_5371
func_5372 = relay.Function([], output)
mutated_mod['func_5372'] = func_5372
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4845_call = mod.get_global_var('func_4845')
func_4847_call = mutated_mod.get_global_var('func_4847')
call_5422 = relay.TupleGetItem(func_4845_call(), 1)
call_5423 = relay.TupleGetItem(func_4847_call(), 1)
var_5432 = relay.var("var_5432", dtype = "int16", shape = (6, 45))#candidate|5432|(6, 45)|var|int16
bop_5433 = relay.floor_divide(call_5422.astype('float64'), relay.reshape(var_5432.astype('float64'), relay.shape_of(call_5422))) # shape=(6, 45)
bop_5436 = relay.floor_divide(call_5423.astype('float64'), relay.reshape(var_5432.astype('float64'), relay.shape_of(call_5423))) # shape=(6, 45)
output = relay.Tuple([bop_5433,])
output2 = relay.Tuple([bop_5436,])
func_5447 = relay.Function([var_5432,], output)
mod['func_5447'] = func_5447
mod = relay.transform.InferType()(mod)
mutated_mod['func_5447'] = func_5447
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5448 = relay.var("var_5448", dtype = "int16", shape = (6, 45))#candidate|5448|(6, 45)|var|int16
func_5447_call = mutated_mod.get_global_var('func_5447')
call_5449 = func_5447_call(var_5448)
output = call_5449
func_5450 = relay.Function([var_5448], output)
mutated_mod['func_5450'] = func_5450
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4371_call = mod.get_global_var('func_4371')
func_4372_call = mutated_mod.get_global_var('func_4372')
call_5452 = relay.TupleGetItem(func_4371_call(), 2)
call_5453 = relay.TupleGetItem(func_4372_call(), 2)
output = call_5452
output2 = call_5453
func_5476 = relay.Function([], output)
mod['func_5476'] = func_5476
mod = relay.transform.InferType()(mod)
output = func_5476()
func_5477 = relay.Function([], output)
mutated_mod['func_5477'] = func_5477
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4681_call = mod.get_global_var('func_4681')
func_4682_call = mutated_mod.get_global_var('func_4682')
call_5509 = func_4681_call()
call_5510 = func_4681_call()
func_3231_call = mod.get_global_var('func_3231')
func_3232_call = mutated_mod.get_global_var('func_3232')
call_5514 = func_3231_call()
call_5515 = func_3231_call()
uop_5522 = relay.log2(call_5509.astype('float32')) # shape=(11, 14, 10)
uop_5524 = relay.log2(call_5510.astype('float32')) # shape=(11, 14, 10)
bop_5536 = relay.divide(uop_5522.astype('float64'), relay.reshape(call_5514.astype('float64'), relay.shape_of(uop_5522))) # shape=(11, 14, 10)
bop_5539 = relay.divide(uop_5524.astype('float64'), relay.reshape(call_5515.astype('float64'), relay.shape_of(uop_5524))) # shape=(11, 14, 10)
output = bop_5536
output2 = bop_5539
func_5544 = relay.Function([], output)
mod['func_5544'] = func_5544
mod = relay.transform.InferType()(mod)
mutated_mod['func_5544'] = func_5544
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5544_call = mutated_mod.get_global_var('func_5544')
call_5545 = func_5544_call()
output = call_5545
func_5546 = relay.Function([], output)
mutated_mod['func_5546'] = func_5546
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4393_call = mod.get_global_var('func_4393')
func_4394_call = mutated_mod.get_global_var('func_4394')
call_5649 = relay.TupleGetItem(func_4393_call(), 0)
call_5650 = relay.TupleGetItem(func_4394_call(), 0)
const_5651 = relay.const([[10,9,-3,1,-5,-8,-5,-8,-1,8,-7,1,5,-2,-9,-9,6,-8,5,8,-2,-6,5,4,10,-2,-7,8,-10,-4,-1,-8,1,8,5,-7,-2,-8,8,-1,-3,3,9,3,2],[-6,10,-1,-2,-8,-3,-6,1,10,-5,8,-7,8,-4,3,10,-10,3,-1,8,-2,8,6,1,7,-8,-1,-7,8,4,7,1,4,9,-1,-7,-10,2,-4,-3,-8,-7,-7,-2,4],[-8,-7,8,-7,7,6,4,10,-1,10,7,-6,-8,9,-9,5,-5,8,-4,-4,4,6,3,3,-2,9,-10,-6,-9,-10,9,8,8,1,1,-4,3,-3,9,2,7,-3,-8,7,3],[8,3,-7,-3,4,4,-1,9,3,7,9,9,-5,8,-6,1,4,1,-4,2,8,-5,10,2,2,-3,7,1,-10,-6,-2,4,9,-9,-10,3,4,-9,-2,2,-2,4,-8,1,-6],[6,-4,-5,-6,7,7,7,10,10,7,-7,-6,10,6,1,10,1,8,6,4,3,5,-5,-6,-8,-6,3,6,5,7,-5,3,-9,-5,6,-2,1,9,-4,-10,7,7,-7,3,4],[-5,-7,6,1,2,-1,6,-4,9,-7,10,4,-4,-10,-2,-9,3,7,-1,-9,4,9,-3,5,3,-10,6,2,-4,8,-7,4,2,-7,10,8,-7,3,2,-1,-2,1,4,7,-8]], dtype = "int16")#candidate|5651|(6, 45)|const|int16
bop_5652 = relay.floor_mod(call_5649.astype('float32'), relay.reshape(const_5651.astype('float32'), relay.shape_of(call_5649))) # shape=(6, 45)
bop_5655 = relay.floor_mod(call_5650.astype('float32'), relay.reshape(const_5651.astype('float32'), relay.shape_of(call_5650))) # shape=(6, 45)
output = bop_5652
output2 = bop_5655
func_5657 = relay.Function([], output)
mod['func_5657'] = func_5657
mod = relay.transform.InferType()(mod)
mutated_mod['func_5657'] = func_5657
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5657_call = mutated_mod.get_global_var('func_5657')
call_5658 = func_5657_call()
output = call_5658
func_5659 = relay.Function([], output)
mutated_mod['func_5659'] = func_5659
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4192_call = mod.get_global_var('func_4192')
func_4194_call = mutated_mod.get_global_var('func_4194')
call_5669 = relay.TupleGetItem(func_4192_call(), 0)
call_5670 = relay.TupleGetItem(func_4194_call(), 0)
var_5674 = relay.var("var_5674", dtype = "float64", shape = (225,))#candidate|5674|(225,)|var|float64
bop_5675 = relay.less_equal(call_5669.astype('bool'), relay.reshape(var_5674.astype('bool'), relay.shape_of(call_5669))) # shape=(225,)
bop_5678 = relay.less_equal(call_5670.astype('bool'), relay.reshape(var_5674.astype('bool'), relay.shape_of(call_5670))) # shape=(225,)
func_3813_call = mod.get_global_var('func_3813')
func_3818_call = mutated_mod.get_global_var('func_3818')
var_5683 = relay.var("var_5683", dtype = "uint64", shape = ())#candidate|5683|()|var|uint64
const_5684 = relay.const([-1,-2,-3,-8,-10,-7,2,-8,-1,4,6,-5,-10,6,-9,9,6,-5,-6,6,-7,-6,6,-7,8,8,5,8,-6,-5,-7,-5,4,4,2,-7,-4,7,8,8,-3,-2,10,6,-6,10,-5,-8,4,10,-1,-4,-3,-6,-5,7,-1,-8,2,-8,7,2,3,-1,-2,-5,-10,-10,10,-4,-10,-2,-1,-1,-8,-1,-7,7,5,-8,-10,9,-2,5,-5,-6,1,8,-2,-4,8,-5,8,-8,1,9,-9,-3,7,4,10,-9,-9,2,-5,-2,-2,1,-9,5,3,1,-10,4,4,-1,7,5,4,9,-6,4,10,-9,2,-6,6,10,4,5,-1,2,6,-8,-7,-2,10,10,-3,6,1,-2,-1,-4,8,3,-6,9,-4,-2,4,3,-2,-3,-10,-10,-2,7,-7,-8,-10,4,8,8,2,5,6,9,1,-2,-10,-1,7,8,10,-10,-9,-8,10,10,-8,8,-3,1,-9,-4,-5,3,-6,7,9,8,-2,4,4,3,-7,7,8,-5,-3,7,-7,-2,-3,10,-4,7,-7,-9,-5,5,3,-3,2,-7,-6,-4,5,5,-3,-10,-3,5,10,-1,4,6,-1,-8,6,9,10,-4,-9,4,3,-1,3,-6,-7,5,-6,1,-9,-10,4,6,3,8,-10,-6,-6,-1,2,-1,6,-2,-6,-8,10,9,-9,8,4,6,8,-9,6,5,-7,6,-2,-6,1,-3,-3,-7,-7,4,10,-9,1,-5,6,-4,-4,-6,1,7,7,-5,4,5,-6,7,9,2,-2,9,-7,-2,-5,9,10,10,-8,10,-6,5,5,5,6,6,-6,-7,-9,-6,-7,2,3,-7,-6,2,3,3,-7,-4,10,10,-4,-9,-6,-7,1,10,-3,2,-5,3,-10,-6,7,-2,9,-2,-1,-3,-5,-9,2,-10,-6,4,7,-1,-6,-5,-6,-9,-9,7,-2,-6,-3,-5,4,-9,8,-2,-3,-3,2,1,7,5,10,7,-4,-3,7,5,-5,-2,8,-9,8,7,2,-10,-7,-4,-6,-1,1,1,-3,-1,-1,-1,-8,-9,2,8,5,2,2,-10,-6,-1,8,7,8,-10,-3,-7,3,9,3,1,9,9,9,10,-4,-2,-4,-4,7,3,-4,2,6,3,3,5,-7,-1,-8,2,5,4,3,4,-9,3,-7,1,6,-1,7,-9,2,1,-5,2,8,-9,-4,-2,-2,-8,-10,10,-2,5,9,-6,-5,1,-1,-10,-10,10,6,7,-9,-6,-6,4,-9,9,-2,9,3,9,-4,1,-10,8,-4,-5,-1,-1,9,-5,4,-8,-1,6,-8,8,-6,6,9,-3,8,-6,-8,6,-2,-8,6,-5,-3,-1,-7,-5,-7,10,-4,10,8,-2,5,-4,8,-5,7,3,4,3,2,-4,-8,4,-7,5,-2,-2,5,-4,-7,9,-3,-4,-6,-8,-4,7,7,1,8,9,-2,-7,-8,-10,-1,9,-3,9,-1,-10,-9,4,-10,2,-2,10,-4,9,-7,7,9,-2,-10,-4,7,-5,-2,-6,3,-2,1,-8,-8,-6,-7,-1,-10,1,-3,2,-10,10,-5,4,-4,-2,-10,-1,7,-3,10,-3,8,-4,-8,3,-3,-9,9,6,-2,2,1,2,9,-2,-9,3,8,8,-4,-3,-6,-5,6,10,-2,-1,4,-10,-9,5,-7,5,4,1,-4,4,7,-5,-1,-4,-9,-5,-8,-9,-7,-5,1,-10,-3,2,7,7,5,8,9,10,-7,-3,10,-4,-4,-3,-10,1,-6,-9,1,7,-8,-4,9,6,-9,-4,9,-7,-8,-10,-5,-2,-4,-2,-8,2,5,4,-2,-1,9,1,5,3,-10,2,3,-4,6,5,8,10,5,-9,-6,9,6,-5,10,4,2,5,9,-4,7,9,-9,9,4,-1,8,8,-10,5,-1,-9,-7,8,-4,-3,6,-8,-2,8,-5,-8,9,-9,1,10,-4,-4,-5,-9,9,-2,3,-9,-7,10,-6,-4,-6,-5,-8,-10,-5,-3,9,9,-3,4,-1,10,-9,-9,-3,-1,6,8,2,6,2,-8,-3,-2,10,-4,-10,8,-9,6,9,-2,5,1,-8,7,-8,5,-3,-8,5,-3,-8,-2,-7,-6,-6,-3,10,10,-3,-10,-3,-2,3,9,-2,1,-1,-7,-3,-7,3,2,6,-1,-9,9,5,-6,1,-6,-8,-5,2,-7,6,6,4,3,9,8,-5,10,8,10,-3,-4,-3,-10,-10,-2,3,-6,-5,8,10,-2,4,-7,-9,-2,1,-1,-7,-1,-10,-5,-10,-1,-9,1,-6,6,-4,-2,10,-5,-4,-7,-9,-9,-3,3,5,-10,-4,6,3,-10,7,-10,-8,7,-1,-10,-7,1,-3,-7,8,-5,-8,2,2,-10,6,5,-5,3,-1,8,3,-9,-4,7,4,6,-2,5,4,3,5,1,10,-10,8,10,7,-10,-4,5,-8,9,-3,1,2,-5,-4,9,-10,-7,-6,2,4,6,-6,7,-6,-3,3,-4,10,1,6,7,8,-6,9,-10,9,-3,1,-10,-6,-5,9,-3,-9,-2,-4,-4,-3,9,-10,8,-6,-6,-1,-5,-1,8,-2,-8,3,7,-9,10,-3,7,-7,-5,-4,-4,-9,-3,-9,-10,-2,-1,8,-2,1,10,-2,-9,2,4,7,2,-6,8,-6,6,7,-2,-9,4,8,-6,-1,-9,-1,8,10,-5,6,4,2,-9,1,-5,-8,10,3,6,3,8,10,-5,7,-1,-3,-5,4,5,-5,-6,7,1,-4,-5,-4,-2,-8,-9,6,8,-4,6,8,5,-10,-8,-7,-7,6,7,-5,-6,-5,-10,6,2,-2,8,-10,3,4,-6,-8,9,7,6,4,-4,1,-3,3,-5,-4,3,7,-3,-7,1,2,-3,-9,-10,3,3,-10,-8,-2,8,-9,-1,8,9,-2,3,2,4,5,6,10,9,-6,2,2,-5,10,-7,-7,-2,-9,-5,-2,-4,-1,-4,-8,10,2,3,2,6,3,8,2,-10,-8,-1,4,-5,4,5,-4,9,8,1,1,2,3,-5,-4,5,2,10,3,-8,-7,-10,-1,-5,2,-1,-5,6,-6,2,-6,10,5,1,-5,5,-5,3,6,8,-5,-1,-3,8,-6,7,-9,1,7,2,-4,-6,-5,-6,6,-1,3,1,6,5,-10,-5,1,3,-9,-4,5,1,-6,3,1,4,3,-1,-5,-3,3,3,6,-4,4,-8,-7,-9,8,-6,5,4,-3,8,-3,2,3,-10,3,5,-3,6,-4,2,10,-10,5,-4,-10,8,-5,1,-8,-6,6,-10,-4,6,3,9,-5,-8,-6,-3,-7,2,-3,-2,4,4,9,9,-10,3,-5,7,-5,2,-7,8,6,-8,2,2,7,-6,-9,4,-1,5,1,-6,6,8,3,-9,-7,-1,-6,3,-10,2,5,1,2,4,5,-4,9,8,9,4,4,-2,-8,-6,5,8,-3,-8,4,-2,3,3,7,6,9,-9,3,5,-8,10,10,-3,-8,10,2,-4,-6,-9,-6,-9,4,10,-1,1,-6,3,2,9,-7,-3,-10,6,-3,9,9,-6,7,-10,-1,-8,-3,-2,-6,-4,-1,6,5,-9,6,-10,5,-5,2,-1,-10,9,-9,-8,-4,-10,3,-8,7,-9,-5,-5,6,5,9,10,-4,-3,-10,9,-5,-2,-4,-7,8,-3,4,7,10,-8,9,-8,-9,-7,-4,-4,5,7,6,8,9,-1,9,-5,-2,-10,2,-6,-1,-9,-9,-3,-1,-2,4,5,3,-8,-5,-3,-7,8,3,2,6,8,-6,-10,1,6,-3,-9,-8,-9,10,-10,5,8,-1,-3,-2,6,3,-7,-7,-10], dtype = "uint64")#candidate|5684|(1456,)|const|uint64
const_5685 = relay.const([6.559819,-0.915356,5.120906,7.932264,4.593569,-9.592503,9.120427,-7.639666,-4.307844,9.384364,-3.128894,8.131301,0.882484,-2.113504,-2.843123,3.907836,-2.022367,7.565724,-2.853821,6.562521,-7.919463,2.710721,-3.875619,-7.503925,-6.718143,-5.428656,8.091793,1.062909,2.621951,3.110814,-3.120975,6.562475,-4.818758,-8.428363,9.284140,-7.411136,-5.256914,-7.668946,-2.655345,6.508602,-0.847504,5.129523,6.471119,3.669463,6.847041,5.380326,8.588106,-4.184883,1.371156,0.493228,-6.955962,-3.881614,7.336692,6.044831,6.612694,-5.457308,2.754373,6.234490,-1.536592,0.066277,9.998905,2.839912,-7.752552,-7.789781,-0.754270,-6.837217,-4.345101,0.828447,7.731169,7.935292,1.128272,2.896315,6.765981,-4.782739,9.211691,6.627159,-7.008184,0.241471,-0.807451,-9.230671,9.798566,-6.571037,-1.784496,9.012321,-6.884122,-6.806392,-2.065717,-6.798567,0.457588,5.271273,8.386258,5.760663,6.743931,-9.462326,5.723276,0.374826,3.981944,-5.201309,4.057684,-1.392623,-4.839370,-4.966015,-3.786689,-4.779446,8.058012,-2.298860,7.319343,-8.732955,-2.557176,-7.418794,7.980355,2.964978,7.681808,-3.789540,0.915895,6.346347,-6.230278,8.149781,-7.549340,-8.097999,8.167588,-8.441167,-4.627287,-1.640405,3.490988,-4.777927,-8.779177,-0.165125,2.120523,-6.978914,3.655160,-1.770755,7.079583,-0.062661,-4.963387,4.747825,1.557628,-2.412046,-4.406009,-4.316101,0.266077,4.573963,-1.303037,-7.119857,-2.850553,0.317148,-8.240992,1.959428,2.460922,4.695296], dtype = "float32")#candidate|5685|(150,)|const|float32
call_5682 = relay.TupleGetItem(func_3813_call(relay.reshape(var_5683.astype('uint64'), []), relay.reshape(const_5684.astype('uint64'), [8, 13, 14]), relay.reshape(const_5685.astype('float32'), [150,]), ), 3)
call_5686 = relay.TupleGetItem(func_3818_call(relay.reshape(var_5683.astype('uint64'), []), relay.reshape(const_5684.astype('uint64'), [8, 13, 14]), relay.reshape(const_5685.astype('float32'), [150,]), ), 3)
output = relay.Tuple([bop_5675,call_5682,var_5683,const_5684,const_5685,])
output2 = relay.Tuple([bop_5678,call_5686,var_5683,const_5684,const_5685,])
func_5689 = relay.Function([var_5674,var_5683,], output)
mod['func_5689'] = func_5689
mod = relay.transform.InferType()(mod)
var_5690 = relay.var("var_5690", dtype = "float64", shape = (225,))#candidate|5690|(225,)|var|float64
var_5691 = relay.var("var_5691", dtype = "uint64", shape = ())#candidate|5691|()|var|uint64
output = func_5689(var_5690,var_5691,)
func_5692 = relay.Function([var_5690,var_5691,], output)
mutated_mod['func_5692'] = func_5692
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4192_call = mod.get_global_var('func_4192')
func_4194_call = mutated_mod.get_global_var('func_4194')
call_5696 = relay.TupleGetItem(func_4192_call(), 0)
call_5697 = relay.TupleGetItem(func_4194_call(), 0)
func_4878_call = mod.get_global_var('func_4878')
func_4881_call = mutated_mod.get_global_var('func_4881')
const_5705 = relay.const(-2, dtype = "uint64")#candidate|5705|()|const|uint64
call_5704 = relay.TupleGetItem(func_4878_call(relay.reshape(const_5705.astype('uint64'), []), relay.reshape(call_5696.astype('float64'), [225,]), ), 1)
call_5706 = relay.TupleGetItem(func_4881_call(relay.reshape(const_5705.astype('uint64'), []), relay.reshape(call_5696.astype('float64'), [225,]), ), 1)
output = relay.Tuple([call_5696,call_5704,const_5705,])
output2 = relay.Tuple([call_5697,call_5706,const_5705,])
func_5709 = relay.Function([], output)
mod['func_5709'] = func_5709
mod = relay.transform.InferType()(mod)
output = func_5709()
func_5710 = relay.Function([], output)
mutated_mod['func_5710'] = func_5710
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3905_call = mod.get_global_var('func_3905')
func_3907_call = mutated_mod.get_global_var('func_3907')
call_5725 = func_3905_call()
call_5726 = func_3905_call()
output = relay.Tuple([call_5725,])
output2 = relay.Tuple([call_5726,])
func_5731 = relay.Function([], output)
mod['func_5731'] = func_5731
mod = relay.transform.InferType()(mod)
mutated_mod['func_5731'] = func_5731
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5731_call = mutated_mod.get_global_var('func_5731')
call_5732 = func_5731_call()
output = call_5732
func_5733 = relay.Function([], output)
mutated_mod['func_5733'] = func_5733
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5657_call = mod.get_global_var('func_5657')
func_5659_call = mutated_mod.get_global_var('func_5659')
call_5777 = func_5657_call()
call_5778 = func_5657_call()
uop_5786 = relay.sqrt(call_5777.astype('float32')) # shape=(6, 45)
uop_5788 = relay.sqrt(call_5778.astype('float32')) # shape=(6, 45)
output = relay.Tuple([uop_5786,])
output2 = relay.Tuple([uop_5788,])
func_5792 = relay.Function([], output)
mod['func_5792'] = func_5792
mod = relay.transform.InferType()(mod)
output = func_5792()
func_5793 = relay.Function([], output)
mutated_mod['func_5793'] = func_5793
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4192_call = mod.get_global_var('func_4192')
func_4194_call = mutated_mod.get_global_var('func_4194')
call_5835 = relay.TupleGetItem(func_4192_call(), 0)
call_5836 = relay.TupleGetItem(func_4194_call(), 0)
func_5689_call = mod.get_global_var('func_5689')
func_5692_call = mutated_mod.get_global_var('func_5692')
const_5845 = relay.const(-6, dtype = "uint64")#candidate|5845|()|const|uint64
call_5844 = relay.TupleGetItem(func_5689_call(relay.reshape(call_5835.astype('float64'), [225,]), relay.reshape(const_5845.astype('uint64'), []), ), 2)
call_5846 = relay.TupleGetItem(func_5692_call(relay.reshape(call_5835.astype('float64'), [225,]), relay.reshape(const_5845.astype('uint64'), []), ), 2)
output = relay.Tuple([call_5835,call_5844,const_5845,])
output2 = relay.Tuple([call_5836,call_5846,const_5845,])
func_5854 = relay.Function([], output)
mod['func_5854'] = func_5854
mod = relay.transform.InferType()(mod)
output = func_5854()
func_5855 = relay.Function([], output)
mutated_mod['func_5855'] = func_5855
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4192_call = mod.get_global_var('func_4192')
func_4194_call = mutated_mod.get_global_var('func_4194')
call_5886 = relay.TupleGetItem(func_4192_call(), 0)
call_5887 = relay.TupleGetItem(func_4194_call(), 0)
output = call_5886
output2 = call_5887
func_5895 = relay.Function([], output)
mod['func_5895'] = func_5895
mod = relay.transform.InferType()(mod)
mutated_mod['func_5895'] = func_5895
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5895_call = mutated_mod.get_global_var('func_5895')
call_5896 = func_5895_call()
output = call_5896
func_5897 = relay.Function([], output)
mutated_mod['func_5897'] = func_5897
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5544_call = mod.get_global_var('func_5544')
func_5546_call = mutated_mod.get_global_var('func_5546')
call_5908 = func_5544_call()
call_5909 = func_5544_call()
output = call_5908
output2 = call_5909
func_5918 = relay.Function([], output)
mod['func_5918'] = func_5918
mod = relay.transform.InferType()(mod)
output = func_5918()
func_5919 = relay.Function([], output)
mutated_mod['func_5919'] = func_5919
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5370_call = mod.get_global_var('func_5370')
func_5372_call = mutated_mod.get_global_var('func_5372')
call_5920 = relay.TupleGetItem(func_5370_call(), 0)
call_5921 = relay.TupleGetItem(func_5372_call(), 0)
output = relay.Tuple([call_5920,])
output2 = relay.Tuple([call_5921,])
func_5929 = relay.Function([], output)
mod['func_5929'] = func_5929
mod = relay.transform.InferType()(mod)
mutated_mod['func_5929'] = func_5929
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5929_call = mutated_mod.get_global_var('func_5929')
call_5930 = func_5929_call()
output = call_5930
func_5931 = relay.Function([], output)
mutated_mod['func_5931'] = func_5931
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3694_call = mod.get_global_var('func_3694')
func_3695_call = mutated_mod.get_global_var('func_3695')
call_5943 = relay.TupleGetItem(func_3694_call(), 1)
call_5944 = relay.TupleGetItem(func_3695_call(), 1)
uop_5954 = relay.sigmoid(call_5943.astype('float64')) # shape=(6, 45)
uop_5956 = relay.sigmoid(call_5944.astype('float64')) # shape=(6, 45)
func_3442_call = mod.get_global_var('func_3442')
func_3447_call = mutated_mod.get_global_var('func_3447')
var_5960 = relay.var("var_5960", dtype = "float64", shape = (70,))#candidate|5960|(70,)|var|float64
const_5961 = relay.const([[6.389590,1.246921,-3.803310,0.220372,3.531395,-6.262324,-0.475760,0.272991,-5.589935,-5.067825,-7.257529,-7.910009,-9.838822,-2.134827,8.545380,1.339703,-7.967092,-6.094778,7.555962,0.634419,5.305015,-2.950635,-7.947435,2.581907,7.508661,5.037218,2.744417,7.703272,0.122927,3.700334,-0.657201,3.357973,4.692417,3.171465,9.560110,-6.643834,-3.723190,1.070815,-8.315717,2.348408,-8.861741,-7.920497,-5.019272,4.598112,7.677671,5.866507,-9.289221,-1.972337,-1.682265,-2.345549,-3.066108,1.335675,-2.053862,4.521396,8.086988,-3.250942,4.880082,7.954818,-9.697501,2.535496,4.075897,9.673836,7.252591,-8.660462,1.304412,6.955772,6.993732,9.433516,0.699019,-4.405312,4.664533,4.727299,9.068919,2.678548,6.332106,8.889405,2.828334,-6.832090,-5.699886,-5.588112,-3.272277,8.429107,-4.242783,1.961121,2.960067,-5.670649,-0.957877,9.805035,9.928309,1.607445,0.417953,8.578802,-2.164512,7.795340,-7.373947,-6.666132,-4.699161,-1.546831,-2.749668,-9.872684,-6.858199,0.557206,-4.885421,-6.214256,2.746667]], dtype = "float64")#candidate|5961|(1, 105)|const|float64
call_5959 = relay.TupleGetItem(func_3442_call(relay.reshape(var_5960.astype('float64'), [14, 5]), relay.reshape(call_5943.astype('int16'), [270,]), relay.reshape(const_5961.astype('float64'), [105,]), ), 6)
call_5962 = relay.TupleGetItem(func_3447_call(relay.reshape(var_5960.astype('float64'), [14, 5]), relay.reshape(call_5943.astype('int16'), [270,]), relay.reshape(const_5961.astype('float64'), [105,]), ), 6)
output = relay.Tuple([uop_5954,call_5959,var_5960,const_5961,])
output2 = relay.Tuple([uop_5956,call_5962,var_5960,const_5961,])
func_5969 = relay.Function([var_5960,], output)
mod['func_5969'] = func_5969
mod = relay.transform.InferType()(mod)
mutated_mod['func_5969'] = func_5969
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5970 = relay.var("var_5970", dtype = "float64", shape = (70,))#candidate|5970|(70,)|var|float64
func_5969_call = mutated_mod.get_global_var('func_5969')
call_5971 = func_5969_call(var_5970)
output = call_5971
func_5972 = relay.Function([var_5970], output)
mutated_mod['func_5972'] = func_5972
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3679_call = mod.get_global_var('func_3679')
func_3681_call = mutated_mod.get_global_var('func_3681')
call_5996 = func_3679_call()
call_5997 = func_3679_call()
func_5969_call = mod.get_global_var('func_5969')
func_5972_call = mutated_mod.get_global_var('func_5972')
const_6005 = relay.const([[2.818548,-0.218210,-1.620452,-6.440631,-1.076933,-4.724591,-2.313006,-7.277805,9.497443,-3.323882,5.379721,5.108701,0.766074,1.802101,-6.556495,1.703851,-4.188795,3.114443,-5.354573,8.461946,-5.703747,6.040088,6.343674,-3.808408,-0.789454,-6.909184,7.428877,4.283624,-9.098368,-3.941872,1.590412,3.400722,-0.983158,0.604532,-2.240842,8.215083,-1.705282,-5.878289,-1.977439,-0.930945,9.120974,-8.421056,-8.231507,2.254433,-2.854526,4.633640,-2.214117,-2.286575,6.044129,3.791871,-4.974715,9.075390,2.400574,-0.231948,-2.153416,-6.744425,5.579030,-9.034276,-7.890742,2.761738,-5.055125,-3.010740,0.120955,3.699341,-5.950636,-3.579188,5.217491,-8.315538,9.056251,-8.295463]], dtype = "float64")#candidate|6005|(1, 70)|const|float64
call_6004 = relay.TupleGetItem(func_5969_call(relay.reshape(const_6005.astype('float64'), [70,])), 3)
call_6006 = relay.TupleGetItem(func_5972_call(relay.reshape(const_6005.astype('float64'), [70,])), 3)
var_6007 = relay.var("var_6007", dtype = "float64", shape = (7, 105))#candidate|6007|(7, 105)|var|float64
bop_6008 = relay.greater(call_6004.astype('bool'), var_6007.astype('bool')) # shape=(7, 105)
bop_6011 = relay.greater(call_6006.astype('bool'), var_6007.astype('bool')) # shape=(7, 105)
output = relay.Tuple([call_5996,const_6005,bop_6008,])
output2 = relay.Tuple([call_5997,const_6005,bop_6011,])
func_6018 = relay.Function([var_6007,], output)
mod['func_6018'] = func_6018
mod = relay.transform.InferType()(mod)
var_6019 = relay.var("var_6019", dtype = "float64", shape = (7, 105))#candidate|6019|(7, 105)|var|float64
output = func_6018(var_6019)
func_6020 = relay.Function([var_6019], output)
mutated_mod['func_6020'] = func_6020
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4393_call = mod.get_global_var('func_4393')
func_4394_call = mutated_mod.get_global_var('func_4394')
call_6027 = relay.TupleGetItem(func_4393_call(), 2)
call_6028 = relay.TupleGetItem(func_4394_call(), 2)
func_3996_call = mod.get_global_var('func_3996')
func_3999_call = mutated_mod.get_global_var('func_3999')
const_6050 = relay.const([2.615534,3.128842,-0.380823,-8.145774,-9.409583,7.462534,-9.865442,8.355039,-8.691055,2.571069,5.128260,9.233394,5.169981,-6.726397,-5.523254,-2.461437,-4.476945,1.923238,7.262397,5.650270,-3.225797,6.106465,-2.707656,0.484471,-8.381253,6.227943,6.996170,-3.741192,3.358258,8.716055,8.215361,1.624350,3.320955,3.296904,-3.471180,-3.789197,6.474099,2.473983,-7.875798,6.662912,-7.188463,8.494674,0.033206,-8.114574,-2.885593,-1.612633,4.415522,0.578211,-2.016659,0.183101,-3.110303,7.526901,2.901756,0.810703,2.126819,-8.183702,1.736888,4.771505,0.100817,5.458830,9.541170,-8.764479,2.383520,6.839409,-6.279827,3.205410,-0.317298,-1.506223,1.703721,-8.737921,-5.202011,-6.997005,-0.547013,-9.257853,5.015035,1.640228,2.560346,2.093639,8.251860,-6.534415,0.722769,-3.513358,-3.770131,9.851516,-2.070600,-1.635933,9.035528,7.721157,-9.276164,8.438391,9.787880,-1.043854,-3.287485,-2.150155,-5.504735,2.728178,-4.423177,-0.639584,5.520548,-3.934555,2.080528,-0.702343,-9.598455,-4.174821,-4.714434], dtype = "float64")#candidate|6050|(105,)|const|float64
var_6051 = relay.var("var_6051", dtype = "float32", shape = (150,))#candidate|6051|(150,)|var|float32
call_6049 = relay.TupleGetItem(func_3996_call(relay.reshape(const_6050.astype('float64'), [105,]), relay.reshape(var_6051.astype('float32'), [150,]), ), 5)
call_6052 = relay.TupleGetItem(func_3999_call(relay.reshape(const_6050.astype('float64'), [105,]), relay.reshape(var_6051.astype('float32'), [150,]), ), 5)
var_6061 = relay.var("var_6061", dtype = "uint16", shape = (6, 5, 9))#candidate|6061|(6, 5, 9)|var|uint16
bop_6062 = relay.add(call_6027.astype('float64'), relay.reshape(var_6061.astype('float64'), relay.shape_of(call_6027))) # shape=(6, 5, 9)
bop_6065 = relay.add(call_6028.astype('float64'), relay.reshape(var_6061.astype('float64'), relay.shape_of(call_6028))) # shape=(6, 5, 9)
func_5158_call = mod.get_global_var('func_5158')
func_5160_call = mutated_mod.get_global_var('func_5160')
var_6076 = relay.var("var_6076", dtype = "float64", shape = (128,))#candidate|6076|(128,)|var|float64
call_6075 = func_5158_call(relay.reshape(var_6076.astype('float64'), [8, 1, 16]))
call_6077 = func_5158_call(relay.reshape(var_6076.astype('float64'), [8, 1, 16]))
output = relay.Tuple([call_6049,const_6050,var_6051,bop_6062,call_6075,var_6076,])
output2 = relay.Tuple([call_6052,const_6050,var_6051,bop_6065,call_6077,var_6076,])
func_6080 = relay.Function([var_6051,var_6061,var_6076,], output)
mod['func_6080'] = func_6080
mod = relay.transform.InferType()(mod)
mutated_mod['func_6080'] = func_6080
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6080_call = mutated_mod.get_global_var('func_6080')
var_6082 = relay.var("var_6082", dtype = "float32", shape = (150,))#candidate|6082|(150,)|var|float32
var_6083 = relay.var("var_6083", dtype = "uint16", shape = (6, 5, 9))#candidate|6083|(6, 5, 9)|var|uint16
var_6084 = relay.var("var_6084", dtype = "float64", shape = (128,))#candidate|6084|(128,)|var|float64
call_6081 = func_6080_call(var_6082,var_6083,var_6084,)
output = call_6081
func_6085 = relay.Function([var_6082,var_6083,var_6084,], output)
mutated_mod['func_6085'] = func_6085
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6100 = relay.var("var_6100", dtype = "float32", shape = (5, 9, 4))#candidate|6100|(5, 9, 4)|var|float32
var_6101 = relay.var("var_6101", dtype = "float32", shape = (5, 9, 4))#candidate|6101|(5, 9, 4)|var|float32
bop_6102 = relay.greater_equal(var_6100.astype('bool'), relay.reshape(var_6101.astype('bool'), relay.shape_of(var_6100))) # shape=(5, 9, 4)
output = bop_6102
output2 = bop_6102
func_6105 = relay.Function([var_6100,var_6101,], output)
mod['func_6105'] = func_6105
mod = relay.transform.InferType()(mod)
var_6106 = relay.var("var_6106", dtype = "float32", shape = (5, 9, 4))#candidate|6106|(5, 9, 4)|var|float32
var_6107 = relay.var("var_6107", dtype = "float32", shape = (5, 9, 4))#candidate|6107|(5, 9, 4)|var|float32
output = func_6105(var_6106,var_6107,)
func_6108 = relay.Function([var_6106,var_6107,], output)
mutated_mod['func_6108'] = func_6108
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4839_call = mod.get_global_var('func_4839')
func_4840_call = mutated_mod.get_global_var('func_4840')
call_6126 = relay.TupleGetItem(func_4839_call(), 1)
call_6127 = relay.TupleGetItem(func_4840_call(), 1)
func_4421_call = mod.get_global_var('func_4421')
func_4422_call = mutated_mod.get_global_var('func_4422')
call_6128 = relay.TupleGetItem(func_4421_call(), 0)
call_6129 = relay.TupleGetItem(func_4422_call(), 0)
func_1697_call = mod.get_global_var('func_1697')
func_1701_call = mutated_mod.get_global_var('func_1701')
const_6143 = relay.const([-7,-9,-2,2,-6,3,3,4,-10,4,6,-10,-10,9,5,-7,-4,9,-1,-4,-7,-1,-10,-4,1,-10,-4,9,9,3,-5,8,9,5,-8,5,6,10,2,-8,-2,3,9,3,-9,3,1,1,-9,-9,3,-4,1,-9,-6,7,7,7,1,3,-8,-2,-8,-8,9,-3,1,-3,1,-5,-9,8,-2,2,-5,-3,-1,-2,10,-5,-7,-1,-8,-1,6,-6,8,-3,-9,8,-9,-8,8,9,-2,-4,5,-7,2,9,-4,7,1,6,4,-5,-5,-5,-5,-10,9,7,-1,-6,-4,5,2,-2,1,-4,-4,-9,-3,1,-1,8,6,3,-2,4,-3,-4,10,-7,-7,-7,-1,-9,3,4,-2,-3,8,10,4,-5,-1,-4,-8,4,-4,-4,7,9,3,1,6,6,9,-1,7,4,7,-1,-10,8,-3,-9,6,-10,3,-4,7,-10,-5,-3,-9,2,-4,-8,-9,-8,-9,-5,-9,3,10,9,-1,-6,-2,-1,-8,6,8,-8,-2,-9,7,7,-9,-6,-2,-6,5,-7,3,-7,-1,-4,-9,-5,-1,4,-6,-2,1,-6,2,-4,-6,-4,-1,1,-6,-2,-9,7,-9,8,10,-4,7,-4,4,5,-10,-10,-2,4,9,-4,-1,10,10,9,7,2,3,-4,5,8,2,8,-10,1,-8,-10,6,1,8,-5,-3,-1,-3,5,8,-3,3,4,4,5,-10,1,4,1,3,-9,5,5,6,-5,-5,-7,-2,2,-6,-7,1,-4,1,-9,3,3,7,-5,-9,-9,9,-1,-7,-8,-1,9,3,8,-1,10,-4,-10,-10,6,-5,4,-1,6,9,8,9,1,-5,7,6,7,-2,-1,-2,-2,1,3,-10,-9,1,8,-9,1,7,-7,9,3,3,-4,2,-3,3,-7,5,3,-3,7,7,5,9,-7,8,-8,5,-9,9,1,10,-6,-4,-2,-7,1,10,-9,8,5,-7,8,-6,-2,10,8,1,-4,2,-2,-6,4,8,5,1,-3,-3,-4,-7,6,10,-7,10,4,9,1,-8,3,10,2,-6,-4,6,-1,-4,2,3,-3,-3,2,-4,9,-10,7,-8,5,-4,6,7,-4,-4,-5,8,-7,6,2,4,1,4,6,-5,-10,10,-8,3,7,10,4,9,-6,-3,-2,-2,5,-9,9,-3,-4,7,9,-5,9,6,1,7,10,-10,10,-5,7,5,-1,-7,9,-8,3,-5,-7,6,-6,-7,-4,9,8,-7,2,-3,10,8,3,10,-9,6,5,6,-4,10,-10,2,-4,7,2,-9,-9,4,2,7,8,-7,-7,6,6,1,-6,-7,5,6,-1,2,3,3,-7,-7,6,-9,7,-8,1,10,-6,8,1,9,-1,4,-6,-9,9,-9,10,-2,3,-9,-1,4,7,7,7,10,10,4,-2,10,-1,-10,6,7,2,-6,6,-10,-1,1,-4,10,4,9,-8,-9,7,9,3,-7,-3,-10,2,-4,-7,-4,7,-7,7,8,5,4,9,9,9,-9,-8,3,-8,-6,-3,8,-4,10,-10,-7,-6,-9,2,8,-4,4,-7,4,4,-10,2,-5,-10,-8,-3,-5,5,5,4,1,-2,9,-1,-5,-5,-10,-3,-1,-1,-5,-5,-1,-6,10,-2,7,-3,5,1,9,-7,1,7,6,5,10,4,10,10,2,-10,-7,-5,-9,4,-2,-8,-2,-7,10,-10,1,4,3,-1,7,4,-6,-6,-7,10,1,2,-2,-2,2,5,-3,7,4,-3,-1,4,-7,-10,-1,4,10,-5,-7,-7,6,-2,-4,9,9,8,10,-5,4,-1,-8,7,1,2,-9,-8,-4,8,-9,3,-8,8,-5,-4,8,4,-2,-6,4,-2,-9,-10,1,9,2,8,5,7,-8,-8,8,-4,4,-5,8,-1,-8,-7,8,10,10,-1,5,4,1,-2,8,1,-6,2,6,8,-6,-6,3,-4,6,-7,-5,6,4,7,4,6,8,1,-3,1,-5,4,3,-8,-5,-1,5,8,-5,-3,-7,-6,-9,1,7,-3,-7,8,-7,10,-1,-4,-8,8,-9,2,-4,-3,7,-6,3,7,-8,-3,-3,-9,-4,3,-7,-5,5,-4,-6,-3,10,7,1,-5,-9,6,-1,-6,-9,-7,3,-5,-7,-7,-6,6,-10], dtype = "int32")#candidate|6143|(819,)|const|int32
call_6142 = func_1697_call(relay.reshape(const_6143.astype('int32'), [13, 9, 7]), relay.reshape(const_6143.astype('int32'), [13, 9, 7]), )
call_6144 = func_1697_call(relay.reshape(const_6143.astype('int32'), [13, 9, 7]), relay.reshape(const_6143.astype('int32'), [13, 9, 7]), )
bop_6177 = relay.bitwise_and(call_6142.astype('uint64'), relay.reshape(const_6143.astype('uint64'), relay.shape_of(call_6142))) # shape=(13, 9, 7)
bop_6180 = relay.bitwise_and(call_6144.astype('uint64'), relay.reshape(const_6143.astype('uint64'), relay.shape_of(call_6144))) # shape=(13, 9, 7)
var_6234 = relay.var("var_6234", dtype = "bool", shape = (11, 14, 10))#candidate|6234|(11, 14, 10)|var|bool
bop_6235 = relay.less(call_6128.astype('bool'), relay.reshape(var_6234.astype('bool'), relay.shape_of(call_6128))) # shape=(11, 14, 10)
bop_6238 = relay.less(call_6129.astype('bool'), relay.reshape(var_6234.astype('bool'), relay.shape_of(call_6129))) # shape=(11, 14, 10)
output = relay.Tuple([call_6126,bop_6177,bop_6235,])
output2 = relay.Tuple([call_6127,bop_6180,bop_6238,])
func_6247 = relay.Function([var_6234,], output)
mod['func_6247'] = func_6247
mod = relay.transform.InferType()(mod)
var_6248 = relay.var("var_6248", dtype = "bool", shape = (11, 14, 10))#candidate|6248|(11, 14, 10)|var|bool
output = func_6247(var_6248)
func_6249 = relay.Function([var_6248], output)
mutated_mod['func_6249'] = func_6249
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5731_call = mod.get_global_var('func_5731')
func_5733_call = mutated_mod.get_global_var('func_5733')
call_6275 = relay.TupleGetItem(func_5731_call(), 0)
call_6276 = relay.TupleGetItem(func_5733_call(), 0)
func_3905_call = mod.get_global_var('func_3905')
func_3907_call = mutated_mod.get_global_var('func_3907')
call_6281 = func_3905_call()
call_6282 = func_3905_call()
output = relay.Tuple([call_6275,call_6281,])
output2 = relay.Tuple([call_6276,call_6282,])
func_6285 = relay.Function([], output)
mod['func_6285'] = func_6285
mod = relay.transform.InferType()(mod)
output = func_6285()
func_6286 = relay.Function([], output)
mutated_mod['func_6286'] = func_6286
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5370_call = mod.get_global_var('func_5370')
func_5372_call = mutated_mod.get_global_var('func_5372')
call_6334 = relay.TupleGetItem(func_5370_call(), 0)
call_6335 = relay.TupleGetItem(func_5372_call(), 0)
func_2216_call = mod.get_global_var('func_2216')
func_2219_call = mutated_mod.get_global_var('func_2219')
var_6339 = relay.var("var_6339", dtype = "float64", shape = (135,))#candidate|6339|(135,)|var|float64
call_6338 = func_2216_call(relay.reshape(var_6339.astype('float64'), [15, 3, 3]))
call_6340 = func_2216_call(relay.reshape(var_6339.astype('float64'), [15, 3, 3]))
output = relay.Tuple([call_6334,call_6338,var_6339,])
output2 = relay.Tuple([call_6335,call_6340,var_6339,])
func_6350 = relay.Function([var_6339,], output)
mod['func_6350'] = func_6350
mod = relay.transform.InferType()(mod)
mutated_mod['func_6350'] = func_6350
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6351 = relay.var("var_6351", dtype = "float64", shape = (135,))#candidate|6351|(135,)|var|float64
func_6350_call = mutated_mod.get_global_var('func_6350')
call_6352 = func_6350_call(var_6351)
output = call_6352
func_6353 = relay.Function([var_6351], output)
mutated_mod['func_6353'] = func_6353
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4480_call = mod.get_global_var('func_4480')
func_4482_call = mutated_mod.get_global_var('func_4482')
call_6385 = relay.TupleGetItem(func_4480_call(), 0)
call_6386 = relay.TupleGetItem(func_4482_call(), 0)
output = relay.Tuple([call_6385,])
output2 = relay.Tuple([call_6386,])
func_6398 = relay.Function([], output)
mod['func_6398'] = func_6398
mod = relay.transform.InferType()(mod)
output = func_6398()
func_6399 = relay.Function([], output)
mutated_mod['func_6399'] = func_6399
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4192_call = mod.get_global_var('func_4192')
func_4194_call = mutated_mod.get_global_var('func_4194')
call_6424 = relay.TupleGetItem(func_4192_call(), 0)
call_6425 = relay.TupleGetItem(func_4194_call(), 0)
output = call_6424
output2 = call_6425
func_6476 = relay.Function([], output)
mod['func_6476'] = func_6476
mod = relay.transform.InferType()(mod)
mutated_mod['func_6476'] = func_6476
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6476_call = mutated_mod.get_global_var('func_6476')
call_6477 = func_6476_call()
output = call_6477
func_6478 = relay.Function([], output)
mutated_mod['func_6478'] = func_6478
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6570 = relay.const([[[-9,-4,-9,3,-10,-2,-5,5,-2,7,2],[-10,3,7,-1,-9,5,3,-4,-1,-1,5],[10,1,-4,5,4,-8,1,-2,2,-3,9],[-2,2,-9,6,9,5,7,-2,7,10,-5],[-3,-5,2,-1,-4,6,-4,-1,1,6,1],[5,-6,1,8,-8,5,-5,1,-8,8,-3],[10,-5,-3,7,4,9,-4,5,8,-2,-9],[10,10,-7,3,-3,1,4,-8,-9,-2,-2],[9,-8,-3,2,5,3,1,6,-1,8,8]],[[7,-4,-8,-5,3,-10,-10,9,-8,-5,2],[3,1,10,6,-3,5,9,4,-6,9,7],[-2,3,-5,-2,-4,6,9,-5,5,9,-9],[-3,-4,1,-6,5,7,9,4,-8,4,-4],[-1,9,-10,5,-1,-2,9,10,-2,-7,-1],[-10,6,5,-3,7,9,3,6,-9,-8,2],[4,7,5,4,10,4,3,10,-10,3,2],[-1,4,5,-10,-1,9,2,-2,1,-2,8],[6,-5,-4,8,-4,6,10,10,-8,-6,-1]],[[-10,-5,-4,10,4,1,-4,8,3,-2,10],[10,-2,2,-5,8,-5,10,2,3,-6,5],[-1,4,3,-5,-6,4,3,-7,9,8,8],[5,-8,6,-5,7,-2,-2,-7,-9,-1,-2],[-8,-5,-6,-5,10,6,10,-5,-3,-3,-3],[1,3,2,4,8,-5,-1,7,9,7,7],[-7,2,-7,6,-3,10,8,10,8,-6,-3],[5,-4,-7,-10,-6,-9,9,-7,-5,-4,6],[7,-6,4,-9,8,8,8,10,-2,-7,9]],[[6,-2,6,-8,-8,6,1,3,-10,-3,2],[4,1,10,-4,3,5,-2,1,-1,6,-4],[-1,6,9,-8,3,3,-5,-2,-2,-10,2],[5,-6,4,-8,-1,-9,-8,8,-9,7,5],[-5,-2,3,1,8,9,-6,5,5,-3,-3],[-3,9,4,-4,-8,5,3,4,3,3,5],[7,5,6,-6,-9,1,-1,-3,-3,1,5],[-6,-9,2,-1,3,-8,9,6,-4,6,-4],[10,9,2,-3,-5,7,-8,-8,-5,6,-1]],[[7,2,-4,-7,-5,-8,2,4,7,4,5],[-3,10,6,-1,-1,-2,-10,-1,-5,-5,1],[-2,-5,-6,3,3,-4,3,-9,7,-5,-2],[5,1,2,-4,-5,9,5,3,9,-5,-8],[-3,7,6,-8,6,-2,7,4,8,-8,-3],[2,-5,3,4,-2,-10,-8,10,5,-3,-4],[-2,2,10,-6,-4,-1,9,-1,-7,3,-10],[4,-7,6,5,-10,8,6,1,3,10,6],[-9,-4,8,4,8,-9,-4,-5,-5,-7,-7]],[[3,2,-5,1,2,8,8,3,7,-9,-6],[-1,5,8,-9,2,-4,7,5,-3,-9,2],[9,9,-9,-10,5,-8,7,10,-2,5,7],[7,9,-10,3,8,-9,5,7,-3,-9,3],[-6,2,-7,5,-1,9,-6,-10,1,8,5],[8,-1,6,-3,-7,-4,-8,-8,-7,9,10],[-5,2,-6,-7,-6,-5,-7,8,-10,8,4],[4,-3,10,9,5,8,-1,10,7,5,4],[3,-2,6,6,10,-1,-3,2,1,-5,9]],[[-7,-3,6,8,-2,1,-3,-7,-7,9,7],[9,1,1,10,3,8,2,6,3,3,3],[2,-5,7,7,3,7,5,-1,5,-4,1],[-8,-8,-6,-6,-6,-1,5,2,-3,-7,10],[-8,1,-6,8,-1,-6,-7,9,-3,2,-4],[3,-9,3,-9,-2,-6,10,-5,1,5,6],[-4,-5,-10,3,4,-1,6,-2,9,-2,6],[8,10,-9,1,-5,2,1,9,-7,-2,7],[-2,-1,-3,-7,4,-10,7,9,7,-2,-8]],[[-9,7,-9,4,-6,-4,-9,-1,6,4,-2],[-5,10,9,-1,4,-1,5,9,5,-10,-4],[6,7,-1,-7,-3,-5,6,-4,-10,-8,9],[-2,-5,-6,8,5,-3,7,5,-8,8,-1],[9,3,4,-4,-7,1,-5,-8,-5,6,-5],[-4,7,-7,7,-1,-3,-8,8,-10,-8,8],[10,-4,-8,4,5,4,-2,-7,10,7,-6],[2,7,-10,5,-6,-5,1,-5,9,-5,-2],[-5,-7,-8,-10,-7,10,-4,-9,-2,5,7]],[[3,1,2,4,-2,-2,5,3,-6,-8,4],[-9,-3,8,-8,-2,-9,-2,8,2,8,10],[5,9,-4,10,-10,-3,-9,1,-7,10,-7],[-6,10,-8,3,-2,-1,-10,9,-5,8,-4],[-8,-6,-9,1,-9,-2,5,7,-7,-6,9],[5,7,-7,-5,-2,5,10,-4,-1,-9,2],[-4,-4,8,-1,-8,-7,4,10,6,-4,1],[6,-6,10,9,-1,-1,-5,-7,-7,1,-1],[-7,-4,-4,5,-6,-5,-7,8,-7,10,6]],[[-6,-10,-9,7,5,3,-9,10,4,-5,8],[6,-10,9,-10,7,-7,10,-7,-5,3,4],[5,-7,1,2,6,7,10,7,-10,-7,-1],[-4,6,-3,-9,2,-2,-5,-9,-4,4,10],[-9,3,1,-8,-10,1,6,-4,2,9,3],[8,-2,8,4,-1,6,4,-5,-10,-7,-1],[-6,7,1,3,-3,-9,-3,-2,-6,10,8],[-9,-8,-10,-1,-9,-7,8,-4,5,2,-4],[-10,2,1,10,-5,6,10,-8,6,2,6]]], dtype = "int32")#candidate|6570|(10, 9, 11)|const|int32
var_6571 = relay.var("var_6571", dtype = "int32", shape = (10, 9, 11))#candidate|6571|(10, 9, 11)|var|int32
bop_6572 = relay.greater_equal(const_6570.astype('bool'), relay.reshape(var_6571.astype('bool'), relay.shape_of(const_6570))) # shape=(10, 9, 11)
output = relay.Tuple([bop_6572,])
output2 = relay.Tuple([bop_6572,])
func_6575 = relay.Function([var_6571,], output)
mod['func_6575'] = func_6575
mod = relay.transform.InferType()(mod)
mutated_mod['func_6575'] = func_6575
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6576 = relay.var("var_6576", dtype = "int32", shape = (10, 9, 11))#candidate|6576|(10, 9, 11)|var|int32
func_6575_call = mutated_mod.get_global_var('func_6575')
call_6577 = func_6575_call(var_6576)
output = call_6577
func_6578 = relay.Function([var_6576], output)
mutated_mod['func_6578'] = func_6578
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6605 = relay.const([[[-6.044656,-4.757459,-9.855210,-3.420887,5.207729,-8.284073,8.745032,-5.041843,-3.195264,-2.603346,5.131200,-9.673850,-6.024543,2.378951,-2.414782,9.237449],[0.980779,-0.172053,-8.485405,5.205229,9.678299,4.317000,4.563497,-8.441091,1.916633,7.026983,0.375525,-6.684694,-3.708101,-1.005879,-2.731538,5.770449],[-4.744148,-4.115278,4.285551,-3.295812,8.933182,4.175649,-5.968316,-9.890435,-2.774542,-8.830280,7.767434,5.253179,-2.326572,-6.835571,2.233571,-3.411639],[8.763695,-0.127906,-8.460734,6.216836,-0.752362,-0.764426,-1.232413,-6.595910,5.983858,6.793734,-2.543498,-5.921737,-2.214599,0.252410,7.645383,2.242485],[-4.088663,1.906394,9.406100,-9.793015,2.846889,-1.691493,8.299544,-5.473606,1.893769,3.936822,2.996635,-8.792039,-3.854924,2.634951,-5.511425,-2.998697],[9.851969,6.011796,-3.635671,-8.691928,8.453978,-6.693213,-8.835954,4.241592,-3.059088,7.674911,-8.002174,9.778733,2.819923,-9.646972,-7.020691,0.768183],[-0.151155,-0.835199,-7.765551,-7.657776,2.226168,9.885718,-4.478265,7.017286,3.692079,-0.238708,-1.226257,0.113820,-3.088579,2.743534,-2.834979,-9.279838],[-2.016800,-8.970384,-6.381752,-5.759917,5.542791,6.205225,-9.850088,-3.337695,1.318044,0.446521,-8.674287,1.272739,7.747359,4.448618,3.716091,-2.032126],[-1.083826,3.241805,-8.496936,-7.365574,8.457442,9.091006,-1.445796,2.931518,-1.041578,-9.990399,4.443995,1.118739,-6.090246,2.723216,4.091788,6.532250],[-2.509899,-3.514111,-3.358800,-5.415635,-7.802731,2.161094,0.122490,-1.702946,-8.694725,-9.836678,-7.667848,-2.922399,1.351734,2.951880,3.939394,-6.279390]],[[8.400382,-0.609164,-5.749507,3.272505,-8.038379,3.477980,5.573670,2.267690,-7.751277,-3.313453,-3.764319,-5.764973,-1.707803,-8.749881,-6.949812,3.968116],[4.444870,-6.774168,-3.235118,-2.046910,-4.080695,-1.179432,3.722749,0.848701,7.125329,-4.341533,-3.195791,1.279803,-9.401649,5.906848,9.117349,-0.410838],[-3.054906,-5.708230,-3.512752,-1.501682,-9.347231,4.692457,-1.533529,-4.755323,-3.664042,5.822436,9.288675,1.079435,-4.926904,-2.929255,1.638848,-6.732808],[0.691588,-0.414554,4.890086,4.772527,6.033695,1.473706,3.619128,9.830635,5.481690,9.260561,-5.039716,-1.745293,6.404533,-6.080932,-9.350632,-5.878640],[6.372836,8.321470,9.139127,-2.738505,2.233260,1.803853,9.076748,-5.386045,1.846222,4.733464,-8.976015,4.745352,8.296088,-1.423517,-0.913132,6.014457],[9.725894,6.222390,6.477593,5.139715,8.970901,-6.476454,-6.960658,6.850052,-3.610499,0.281520,8.719808,-0.702146,-5.939194,-8.804812,4.076534,-2.581182],[-8.894619,-5.836570,3.884621,4.547827,-1.633867,-3.849925,-4.297071,-9.854797,-5.880034,-8.394765,-1.758491,-5.904802,2.102495,-8.731211,8.782630,-9.301335],[-2.558016,5.031293,-7.620044,-1.511348,-9.777627,4.732679,7.104034,4.367402,8.496563,8.231565,-1.278929,-0.663970,-1.240279,3.777695,0.231822,8.123133],[-9.635975,-7.724800,3.434164,3.808248,5.341375,3.247698,-8.041478,-8.917964,-6.564394,-5.754149,-4.962979,-4.644826,4.022173,-6.086960,3.321108,-8.029814],[-5.148089,9.631800,3.586233,-8.094510,3.252118,1.710710,-5.574831,-4.678644,5.513947,-0.304430,8.729566,-9.887771,-5.911459,-0.299096,7.884803,9.786441]],[[6.730149,7.367557,5.800869,6.349811,6.406606,-8.768551,-0.035849,-1.864546,2.752448,9.744804,-0.532908,7.602675,-0.723870,-3.094320,-8.683657,-8.845663],[-7.431786,3.270918,5.810569,4.379277,4.359754,-8.714974,-4.723051,-0.634781,7.601286,-0.944597,0.542703,-8.569920,2.167619,6.130264,-8.728059,2.185193],[-8.497642,-6.639956,0.791559,-7.820336,-7.465769,1.022700,-0.814655,-7.782920,7.603514,8.539990,1.918367,8.273764,-1.915693,-1.127696,-3.721988,-6.025992],[-0.910649,-6.827860,-1.006139,9.000725,3.428091,7.533225,-9.570371,-5.682454,-2.622364,-5.952110,5.800264,2.691679,2.183900,1.760764,6.517506,-4.197740],[-8.173284,-0.425612,4.183506,4.458661,-7.457707,-9.133366,9.794645,-5.809241,-9.520621,3.298281,-1.120231,-6.781015,-8.264068,1.914478,5.178695,-6.540877],[-1.080710,-2.851426,-0.416060,4.207430,-1.917137,1.752102,-3.470948,2.327203,-4.528140,-9.130923,2.361298,-2.739782,-9.082040,-1.964395,3.604763,-5.988696],[2.109561,-5.965931,-7.108773,-1.234456,5.739950,-3.940891,5.712296,8.275687,-9.168971,5.170634,-0.007954,-9.983119,8.227145,-5.079656,8.986651,1.793126],[0.701178,-5.137128,5.474095,-7.390930,-4.994469,-0.889064,-8.241005,9.598536,5.529922,6.434569,5.571160,6.282499,-3.786216,8.227886,-6.980890,-8.347163],[-2.912777,3.179963,1.929413,0.775961,5.089207,0.766617,6.799804,-4.520421,0.454038,-3.046009,1.846192,-6.760725,5.114041,5.524695,-7.534560,8.859779],[-5.367328,-6.148049,-0.398691,6.479865,6.099115,5.088234,-4.093121,9.540936,8.565712,-2.237663,5.421549,-1.205178,-6.067643,-6.985869,5.348391,-8.583228]],[[4.625162,5.306773,-4.964789,6.067458,-2.769225,-7.356369,-4.873012,-8.412173,8.173698,7.240047,4.451461,7.557594,9.952143,-2.320276,2.517500,1.195614],[1.838481,-6.699111,2.683287,7.066545,-2.771649,-8.405690,-4.530971,3.607827,5.198223,-3.924827,-0.433059,1.320248,-9.756844,5.632323,-7.207242,-9.667756],[6.853159,0.216401,-2.837707,-0.198291,-5.330359,3.383322,-5.944114,-2.959276,2.646312,-4.278237,-5.008308,-8.015723,-8.553277,-6.772571,-2.023190,-9.146344],[8.723768,-4.297153,2.164851,-9.808452,-6.248626,-4.638888,-4.788072,-0.944650,9.874074,-8.494880,-0.588676,-5.768441,-9.335615,8.846508,6.502627,-4.411098],[3.878147,-9.170842,-3.022566,-7.893167,3.513000,6.229395,8.004561,0.467018,-1.790001,-8.038898,-5.289864,7.430731,2.383732,0.647422,2.057377,1.171041],[7.520739,8.413423,0.933649,-6.342949,-2.357523,-1.746141,5.527572,-1.157795,7.982321,0.201368,-6.484853,-1.002866,3.988235,-6.221434,-3.851886,-4.559248],[-9.684947,3.555879,5.233506,-7.725403,4.723263,-4.811745,-6.530185,-7.983686,3.348947,-0.179209,7.027836,-0.881072,-5.980784,4.495498,-0.135937,-6.369681],[4.477202,-9.744741,1.492446,-5.299210,-4.513682,-9.409995,1.628840,-3.693334,-9.340149,-4.235019,-0.360960,-9.769791,-7.894720,8.727581,9.030121,2.118498],[5.346359,-3.544151,-5.128642,3.163851,6.750933,1.651520,-6.350848,2.325478,-1.988349,-6.609711,-0.924116,-7.246416,-5.180345,-0.794142,0.199986,-6.534520],[2.755407,-2.368533,1.097494,-3.427238,2.301130,-2.718506,-4.379304,-2.629235,7.448261,4.058064,4.097412,-9.890517,5.897737,-6.414435,-6.173182,7.492157]],[[7.556507,7.696375,0.419120,9.963295,-1.305676,-0.314442,9.507274,2.520391,-9.079737,6.359185,-2.088024,2.259059,-5.704273,0.787801,3.124075,-9.148006],[-5.475361,9.585083,-2.235368,-3.842973,-9.672838,7.751059,2.327059,0.489613,0.360662,8.688967,-6.435192,6.598734,-3.670457,-2.250048,2.340241,-0.445953],[-4.253059,8.070277,-6.941096,3.763795,-3.859222,7.292501,-0.512398,6.556987,5.471045,6.611161,-6.694378,-1.061952,1.370015,-9.448375,4.416325,-3.966064],[-0.502260,-1.996297,3.621480,-4.425578,-7.254730,0.867932,-0.618508,-6.010393,-6.555156,1.012356,-6.445044,6.450681,-2.373195,-5.574116,5.561745,-4.110784],[-8.202499,-9.099919,-7.899689,-8.387246,-2.730302,6.597256,-2.382261,-1.077117,-7.285364,3.143126,7.721973,-2.869832,-8.763530,-7.828246,-9.310826,-9.037329],[9.673634,-4.452916,5.251178,2.975251,0.275023,-7.853530,-7.865921,-8.412341,-6.177676,-4.767413,-6.484477,-0.181060,5.581628,-1.459989,3.549262,7.349982],[-0.231156,-4.844427,-6.701652,9.534751,7.937008,1.693791,7.208348,-3.844143,-0.311154,2.906251,5.766713,3.465597,-9.734415,-3.844156,-1.704175,3.071261],[-8.737700,-7.579707,7.219218,-1.728577,9.334055,-9.771304,4.618525,2.608214,2.111667,-1.812531,-1.711525,-5.397577,-9.244856,-3.407535,-9.066707,8.889938],[9.470869,5.793404,6.402395,2.928308,3.528826,7.565160,-6.174386,-0.214560,-3.145100,8.056703,6.718527,8.702717,-0.374656,-0.746107,0.253286,2.419077],[-0.324495,3.758509,-8.867041,-6.032028,5.272809,-8.819604,-2.700372,6.221125,-8.844623,7.599714,-2.094871,3.592910,-0.187230,5.453445,5.706529,1.933083]],[[2.279130,1.761157,9.938623,-2.702346,-9.137462,4.617438,9.582409,4.595859,6.068094,8.658056,1.379058,-8.153976,5.882515,-8.576057,2.719634,-9.791373],[-1.871299,-8.813673,7.120392,-9.176667,-5.800750,8.906622,4.842364,1.019329,9.529848,-5.035293,3.956939,5.070428,4.378255,4.743092,2.274925,6.163827],[5.143430,2.500247,-6.713876,-0.292916,8.895169,4.166401,-6.182651,6.751490,6.662116,1.496775,4.669599,3.019226,-8.101547,4.582684,-5.939295,8.332067],[-0.924392,2.325268,8.601306,9.460926,8.740955,9.228191,0.219673,7.079108,-1.366607,3.301433,2.833504,-4.090826,3.366777,8.169751,6.218539,-7.171589],[-7.326700,-7.337863,1.388311,-2.351097,-3.859402,9.320682,7.868727,5.446618,8.312944,7.887954,0.552172,-8.329737,0.882882,4.939234,-1.644196,-5.555225],[3.956517,-5.694631,1.043743,0.568217,-3.308855,0.833243,0.079841,-9.533678,-1.603029,-8.811521,7.951240,-3.502300,-5.551221,3.444456,0.231852,1.560906],[7.329834,-8.347653,5.848530,-7.736818,-9.339274,7.950215,-2.489041,-3.264778,0.774642,7.490216,5.992026,7.123564,1.854671,-7.011816,-0.673250,0.219284],[-6.827347,-6.521697,0.677742,0.676895,3.829685,6.535649,-3.102467,-0.720381,-6.266826,4.212560,1.449509,-9.231331,1.333052,-0.698236,-7.937433,2.828622],[3.062353,-0.884828,7.456725,-0.625933,-2.027476,-5.562751,7.169269,-8.599568,-3.096958,2.840038,-1.400812,-0.897567,-4.350418,-9.456324,-1.077146,8.236371],[6.999445,-7.763770,-9.919631,3.688030,5.267259,4.287685,-0.378333,-8.149570,2.792649,0.214737,8.386582,-5.688463,-5.537446,0.981026,-1.905391,-1.707374]],[[-9.173845,-9.688078,3.961869,-8.437929,-7.399789,2.315116,1.186882,7.471649,3.806310,8.983890,9.477862,-5.952001,-4.730282,-6.077216,9.287028,-2.486436],[-5.546622,-7.981073,7.751512,-9.307408,-3.832424,-9.558672,7.666097,5.330215,-4.842415,-6.518999,-4.630243,1.854592,-3.701301,9.453739,-9.505679,3.130538],[4.784233,-8.640015,-2.295779,-6.594460,-2.135084,0.791528,-7.761470,-2.899223,2.293185,-9.756476,-5.450610,-5.247507,-1.523917,-9.630745,6.739079,6.658989],[7.138140,3.005361,-6.577402,-9.154631,1.053807,-6.474114,-7.793744,-6.495699,4.429872,4.387635,7.616786,-7.561900,-5.594199,-1.808548,5.540716,-5.363163],[-0.835275,-9.041021,7.196227,3.135820,-5.077478,-7.332300,1.592015,-5.324054,-2.707084,-0.731431,4.847784,6.042224,7.341745,-1.521959,1.450372,2.963776],[-1.727118,-3.676240,-8.275192,-4.323416,5.559665,-1.899899,-7.973022,-8.506603,-8.042410,-8.654604,2.177633,6.548124,5.601435,8.622661,-2.122684,-7.914723],[5.876912,-3.615711,2.891254,-8.720604,-2.803411,6.805165,-5.611283,2.803317,-5.497509,-1.025688,1.129753,-2.498692,9.259544,4.374519,-7.805840,0.372327],[-1.572062,8.997625,-0.806649,-3.645991,-4.407906,3.348868,7.811886,-0.644797,-2.125721,-9.152444,-9.068266,1.264666,-0.223012,-7.801025,-4.356148,-4.869846],[7.518570,-7.814263,-7.117440,-2.876773,-2.678008,3.383771,-3.100652,2.332060,-2.493726,-9.745457,-0.679089,2.466145,-7.113775,3.781323,2.434815,8.871449],[-2.062207,-4.292773,2.687135,1.227105,9.544744,0.119670,-4.780074,-2.709615,-4.116457,-0.112502,-3.123307,-1.208224,5.233330,-7.791512,9.124553,9.283637]],[[5.785381,-9.751529,6.042489,0.874065,-9.919279,-3.079359,7.068275,-3.349465,-9.503169,3.095309,-5.172481,8.210670,9.346779,-8.859996,-8.444971,-2.715343],[3.018838,-7.535637,1.473060,0.668033,-3.474594,-6.321937,4.230219,-5.973225,5.836231,-3.310859,1.493060,9.951152,5.557524,2.980801,-3.964574,-3.199690],[5.344737,-8.436575,-8.844270,-3.795092,5.489410,-0.819878,9.812838,-8.133647,-2.480770,-6.376208,9.610556,2.453062,3.198268,-8.326316,-3.537599,-6.359690],[5.830689,-9.491763,-9.331282,-9.014682,-0.560427,-0.876902,8.351554,-2.974061,-0.332525,8.580836,1.098572,-0.548160,-1.498549,-1.961934,6.198326,-2.481392],[9.093357,-3.429185,4.499344,7.789651,-1.471862,-4.154528,6.896720,3.365307,2.736208,5.362846,6.943540,-0.952374,-8.153656,8.787345,6.151388,-0.440461],[-0.094362,-3.447902,3.386963,1.559186,-8.280961,-9.963161,3.347326,7.733379,-9.650215,7.792394,-0.029751,0.983353,-7.356914,5.341073,-2.224963,-5.764027],[-9.680730,5.069201,-6.698566,0.216612,-9.821620,-2.508251,-8.059394,-8.704263,-1.800098,-1.555507,1.685782,1.676068,-0.431018,1.260129,-5.710182,-6.742662],[4.663516,1.976560,-2.594205,-6.148543,-9.974033,-8.640585,-2.862067,2.004988,-4.346649,5.952568,-0.482938,9.482629,1.080195,0.311702,-4.623510,8.455857],[3.771736,-4.347451,6.198529,-6.054722,5.041860,-3.398943,-0.221626,8.833265,-9.849216,-2.060562,0.599741,2.202980,8.973893,2.337165,-5.882213,8.642472],[1.821900,-6.350132,-9.805261,-4.541824,9.282223,1.924495,-4.523850,7.383641,5.490307,7.892919,0.603828,-2.646813,-0.754398,6.060602,-5.639972,-4.683708]],[[-5.416424,-7.067953,-5.707668,-2.761843,-0.795552,6.288453,-3.628766,8.551319,-6.290109,7.677191,9.734423,-1.104594,1.236787,8.231066,-3.601318,4.931761],[-2.650442,2.535174,-8.796906,-0.060669,2.474792,3.566891,-7.275640,-1.921924,-5.237504,3.535080,7.137493,1.315307,9.789545,-1.850459,-9.027326,-6.655164],[4.560836,2.102393,7.828999,-6.128624,6.514753,8.007645,-2.162852,4.144378,2.691381,2.888314,-0.347779,8.452288,2.812288,-2.278318,8.398559,-5.778569],[-3.913007,-4.337686,0.684091,4.740701,-4.527920,2.089982,-4.760228,5.742049,2.252832,-4.546834,7.444136,1.679237,5.835947,0.099127,-8.832847,9.104615],[5.527912,-2.557892,6.073288,-6.466118,-8.641285,-9.121014,-2.122836,-8.110256,-9.338370,7.471555,-4.534894,-7.367577,-7.654932,-4.122179,8.200690,-3.505765],[8.880718,-5.828989,-1.297167,1.007312,-6.145159,0.839160,4.160217,-3.875760,-1.288031,-9.379576,-9.073235,-1.525427,-0.279489,0.513536,-2.233695,-4.287591],[-7.068234,-4.706723,2.486748,-9.370939,-8.012435,-5.130769,3.181514,9.323759,6.379995,8.229185,7.871738,-0.244941,-3.078442,6.530605,3.327356,4.040635],[-3.139143,-6.408967,3.716289,7.897322,-5.013056,2.995479,-2.768277,2.396166,-6.092824,5.716186,-0.847913,2.244037,3.684201,-4.418739,9.835699,5.574389],[1.850364,8.597717,-8.324669,-8.733187,3.172116,-4.692121,4.402716,6.371236,-6.442893,2.245795,-3.451625,-8.890380,7.815591,2.072234,-8.182332,3.836697],[-6.814947,-7.057271,7.689834,-9.093444,-4.694493,7.497582,-7.856181,-2.116223,3.280427,-7.629027,-2.838538,-5.504008,2.313189,-4.767822,-6.815457,7.131320]],[[3.609162,1.446745,1.705119,6.383495,-7.240868,5.430271,5.218978,-6.882191,6.907739,-9.999186,1.014229,4.400229,-9.045486,-2.343210,6.815187,-6.152005],[5.480330,-5.302652,1.099101,-5.157240,-6.261629,-9.621479,5.974584,-6.162531,9.338597,1.505272,0.811023,3.226094,-3.755813,-6.934115,-4.029553,-8.092845],[-6.571921,-7.360556,-6.430725,-6.365645,-7.722245,-5.291765,0.308180,-2.591364,-1.111311,2.766353,-1.981822,8.245996,-3.960123,8.773393,-7.035721,-4.639015],[-0.949713,-0.235084,1.015889,0.621498,-9.528400,-5.549978,-4.288871,-9.880855,-4.207262,8.660854,7.909656,4.710799,-0.310096,-5.705089,8.681136,-8.351460],[2.783896,-2.910393,4.529517,-4.820797,-1.253556,0.309990,8.817505,1.349981,5.745006,-4.832712,2.209674,-8.134225,-3.824626,3.383716,1.557422,4.258797],[-7.465307,1.955022,4.813995,9.636979,-5.120305,2.467713,3.199007,9.594949,2.698314,0.658540,-3.240345,-8.719194,-4.228312,-9.615319,8.616230,-4.862803],[2.894933,5.379014,9.783433,-4.121622,7.747467,2.995856,-7.911261,5.149440,-6.422256,4.099974,-6.645339,-1.022918,3.170513,-8.841496,-6.148263,-3.189555],[8.406522,7.017154,5.848068,-4.180994,3.582145,9.447267,8.882906,6.807218,4.794197,-3.348270,-8.007438,-1.132614,6.391674,4.954217,8.153017,4.916103],[2.173615,1.289262,9.334352,-8.908444,2.832324,-3.158849,-3.046235,-9.885735,-3.571885,-3.257038,1.124236,-8.155259,8.668251,6.617249,-7.406614,3.675237],[0.313360,-3.438677,8.208662,3.816238,-1.413135,6.220048,5.906302,-3.975031,-7.274535,-6.986755,5.667809,-5.141981,-4.817816,0.148884,-8.732755,1.381298]],[[4.704589,-6.354366,-4.208386,5.875325,-8.066336,7.251394,-4.174691,0.947900,-4.763747,4.603920,8.138607,0.126023,9.120133,-8.675121,3.576710,7.594916],[8.574290,2.164663,5.893203,-6.924206,2.355204,7.050510,2.214641,-7.319971,-3.467824,5.254275,7.068100,-5.876673,5.973986,6.601121,-8.217389,3.429914],[-2.189545,8.014438,9.329967,5.208284,5.959309,-0.855539,-9.352274,1.978717,-7.985240,-1.204882,0.752912,-9.931931,9.871858,8.329826,-6.163115,2.190536],[-5.064020,-9.508309,-7.712882,-5.768301,-6.332792,-1.097564,-6.456433,-0.053110,-8.963680,-4.615975,3.013420,-8.702012,-0.267712,-6.745756,-5.692297,-0.510008],[-6.366977,-7.940957,-1.662625,-9.762507,3.109216,3.390570,-9.802165,2.850579,-8.189590,-2.578306,-0.339887,-1.882710,3.767022,-7.798909,-0.834973,-0.671602],[3.584856,0.689613,1.438715,6.404805,-3.031712,-0.249441,-7.058237,6.976816,-2.424487,-4.214840,-3.755142,1.473926,9.327098,4.734516,-0.704026,-0.972508],[-2.009755,-5.611175,1.980388,4.088152,-7.136147,4.847154,1.651607,-6.840476,-3.838438,-8.108662,4.922924,-8.256611,8.508704,4.031659,8.992284,-4.130813],[6.240361,-4.910039,-4.532791,4.654413,9.726849,0.878511,4.762662,-0.584705,-2.316034,6.095296,4.091457,-1.400889,5.239711,-8.278061,6.916592,1.056179],[9.921060,4.555949,3.896989,8.466486,5.136758,1.385330,-9.018785,4.308308,-9.593962,-4.615098,-0.545448,4.404654,-4.831317,7.477200,-7.101882,1.005210],[-9.694584,8.404705,1.635529,-5.419095,7.329588,9.212855,-4.634992,-0.903420,1.861505,-7.110269,2.721608,-4.128694,8.380238,2.393098,-3.093330,-6.790118]],[[6.720242,-8.071998,-5.500163,-4.710260,-0.947820,5.663035,-3.043412,5.422757,-5.121915,2.627948,7.692651,-4.984712,0.533441,-6.059668,-5.230960,-3.966288],[-1.670073,-8.062609,-7.480178,-9.313206,-3.748686,8.217185,3.689259,0.531331,-8.055915,0.937418,-5.692940,-8.950705,4.017809,8.561372,1.593050,-0.319639],[-8.972023,-9.891161,3.993277,8.317243,-9.845879,-4.989047,2.571066,-3.846351,-1.854371,-8.652064,4.866159,9.727848,6.056646,-7.261468,-0.757117,3.444065],[6.790514,1.739720,-6.872567,-4.620609,6.150786,5.707560,-8.432646,-8.777846,8.749696,1.504906,-8.953543,-9.999900,6.312062,-8.827350,1.613596,-7.569189],[-4.688605,7.802097,-4.054385,4.255648,-9.711254,2.028263,-2.970352,0.851105,-3.095358,-5.390697,1.521671,-0.329277,3.545247,8.592617,-6.837146,3.309614],[1.103079,-0.620592,6.491711,-8.981431,-1.519272,-8.440678,8.053460,-7.326588,0.785753,-5.023266,6.429949,2.030600,-0.087034,7.872355,7.879236,7.190815],[6.265721,-1.767041,3.515591,-7.481168,-8.555068,5.336502,4.353095,2.176722,-6.973466,4.137447,6.582384,4.465524,1.739637,-0.104515,7.401183,-3.605306],[5.803008,0.173132,3.672075,-4.975357,4.500890,7.530522,-6.770142,5.798943,5.610738,-7.564440,6.122374,-9.047804,5.549434,9.740751,-9.626864,8.338026],[0.558844,-6.723613,6.959036,-1.167776,-1.983476,7.731513,3.990489,-1.687853,4.927567,7.568791,-5.453950,-8.977650,-6.807346,-4.292249,8.310789,9.942196],[0.236461,5.710317,-4.514060,0.127683,6.982922,8.315972,0.358593,1.944120,2.441936,7.632422,-9.898872,1.565088,-7.719124,1.771160,3.694200,-6.256019]],[[0.712231,8.370394,5.260456,-1.320018,1.018407,0.129977,6.151039,-1.791034,2.349433,-3.147754,5.407649,0.434664,-5.632657,3.775063,3.217404,-8.178706],[9.262516,-3.475007,-8.079523,3.615032,3.528092,-5.348900,-3.330076,9.858369,-0.915884,8.860595,7.072433,6.818071,-4.451016,1.190443,-9.846446,-4.221953],[-6.769956,3.229377,1.828921,-5.626403,6.303645,-4.944298,3.457574,-7.943264,5.235504,9.924553,-2.254441,-7.431211,6.714432,-4.402222,3.328535,3.197886],[5.100659,-5.051324,-1.573334,7.852179,1.522031,6.894621,4.354295,4.792753,0.702948,2.714042,5.593244,-3.626920,-0.137909,5.060641,2.007464,3.504435],[2.901966,-6.773123,-7.646502,6.080776,8.467597,7.035684,-3.511697,3.177492,7.783017,2.281746,0.484259,-3.096474,-1.877918,4.222896,-6.384336,0.883592],[3.569850,5.199715,2.010413,3.155524,6.171397,-4.303192,1.181954,-5.856603,-7.558507,-3.488789,0.314304,4.664806,-6.637072,-4.385332,7.368288,-2.651470],[8.500785,5.233044,-7.437062,5.932354,7.002023,-9.343748,4.826484,0.016098,-9.469026,8.671681,-4.843323,-6.335177,-3.054477,-2.952016,-7.929785,-2.060903],[-3.514747,-0.727270,-1.224975,6.898438,5.179467,1.242338,-0.650834,3.390501,-7.662350,-9.596016,3.051520,4.290295,9.735977,-8.470554,-8.121971,7.177443],[-0.475584,2.971519,4.674736,-2.528660,-2.402493,-1.483990,-4.041022,-5.336588,-4.862349,-5.874739,0.322865,6.009864,8.994913,-4.196689,-4.085168,-3.017083],[6.883541,-3.546843,-1.720795,-6.996364,-7.455800,9.815676,-9.739419,9.670242,6.454147,-2.500102,3.011440,6.950223,4.775292,-3.263851,-4.145425,-5.045353]],[[-4.518100,-0.719214,1.087499,-7.865574,2.311889,0.396686,8.545548,9.266944,-7.792750,0.248018,5.125859,-3.106987,-0.757170,2.729799,1.825430,-0.801053],[-2.201025,9.293178,8.487968,0.946871,3.705848,-7.671007,2.975271,9.029339,-7.356892,0.383147,-9.309684,-9.069852,-2.112007,7.708282,-6.551843,2.411704],[-2.497787,-8.838029,-9.767344,3.114401,-4.526959,-1.025265,0.041184,5.410863,-4.281337,7.940064,-7.698645,7.628936,5.744296,8.635294,5.543944,-3.837499],[9.948678,1.342139,-4.926823,4.938209,1.352186,-4.333444,-1.776873,-7.538950,-8.314618,8.842972,8.067968,2.385453,4.032009,-9.285600,-8.407564,-0.487074],[-9.987059,4.657327,-8.892629,2.086333,0.040164,-5.364235,-5.711813,-1.919194,8.595447,9.438809,5.179266,9.060451,6.917364,4.114552,9.250600,0.152763],[0.325743,-8.825599,-3.975239,8.421522,-6.528448,0.388814,-4.053901,3.744151,0.166966,7.941904,-8.891011,9.299507,-1.158328,8.723848,-7.770348,1.123130],[6.439714,-3.198954,-4.862435,3.755953,5.308215,6.228506,9.297643,0.149856,6.530429,6.898780,-1.865482,-2.084875,0.802019,-7.599142,-6.002260,1.002954],[7.207409,6.425119,-8.146618,-2.267411,6.602697,3.025264,7.951586,9.282759,2.265189,-5.019617,4.701033,2.766750,-5.790311,8.007173,4.992406,-1.161671],[-7.211250,-9.651481,4.012342,-4.683201,-3.911226,8.069379,5.480674,6.183120,0.206235,-0.583311,-6.388554,4.482160,8.342406,7.213818,4.899828,4.231141],[-7.278392,-0.643024,6.522992,-1.338519,5.980730,8.239012,0.891366,5.859349,-2.073887,2.668267,7.373033,3.807501,6.805547,-9.887010,-6.768246,-7.688179]]], dtype = "float64")#candidate|6605|(14, 10, 16)|const|float64
uop_6606 = relay.sin(const_6605.astype('float64')) # shape=(14, 10, 16)
func_5029_call = mod.get_global_var('func_5029')
func_5033_call = mutated_mod.get_global_var('func_5033')
const_6616 = relay.const([[1.690077,7.543561],[0.576091,-9.210251],[8.535556,-2.026264],[-8.684449,1.859689],[3.846542,-2.471448],[-1.164849,-6.416434],[3.981122,-0.487423],[-5.464772,8.070866],[1.860701,-7.154626],[6.802891,-2.658854],[-0.290446,9.632596],[-9.158673,4.911818],[8.335284,3.990030],[-8.791335,6.622012],[6.420571,8.732344],[6.838331,9.235026],[-1.422715,0.639658],[5.431592,-9.726779],[-1.366040,-9.923207],[6.343924,-8.679526],[1.963130,-9.261677],[4.573550,4.068873],[3.525750,-0.530500],[6.343142,1.841344]], dtype = "float32")#candidate|6616|(24, 2)|const|float32
const_6617 = relay.const([7,-2,-3,-6,-6,-5,-9,8,7,10,-2,6,6,8,3,1,-9,10,1,-5,9,7,-8,-9,-6,-3,-3,-10,2,8,3,7,2,6,-3,2,10,1,4,-2,-8,-3,-4,10,8,3,-7,5,-8,-7,-1,-5,8,-8,-8,5,7,-5,-10,7,4,1,-10,3,7,-1,8,-1,3,-1,2,-5,3,-10,-6,10,6,-3,10,-6,-9,7,-4,6,-8,6,-2,-6,2,9,-4,-2,-2,9,-3,9,2,9,-2,3,1,-9,2,-1,3,4,9,-8,-1,3,1,-7,-5,9,3,-7,-1,9,-2,-10,8,-10,2,-10,-4,8,-2,-8,-3,-4,9,1,6,5,-8,-2,-9,-5,-10,-3,-7,-10,7,-6,5,5,1,-5,-5,6,-3,2,-3,-2,-4,-9,-5,-10,7,3,5,-9,5,3,2,3,-10,-9,2,5,-8,6,3,8,-1,-3,10,-1,6,4,7,-7,-2,7,-10,1,7,3,-5,-2,-1,-1,9,-7,9,-2,1,-1,-6,1,3,5,-1,-1,-9,-1,10,-3,-7,3,-2,-10,6,7,4,-9,-10,-8,-3,7,4,2,1,2,-6,4,1,2,-7,-9,-5,-7,-3,5,-4,5,10,1,-1,-1,-7,6,1,5,-4,-1,3,3,-3,-1,1,-4,-1,6,9,2,4,-5,-3,5,5,8,3,3,2,-4,7,-7,4,-4,-3,-8,4,4,-4,-7,-4,-6,-8,3,-2,-4,7,-9,7,4,2,8,7,-3,10,1,-3,-1,5,-1,-2,-6,-8,-2,2,8,-9,-10,-10,-9,-1,4,-7,-4,-10,-9,-4,3,-2,9,-10,8,5,8,-10,-6,9,-4,-9,-9,5,-1,-3,-1,9,10,10,9,-7,1,-5,-6,-8,-1,9,6,-9,5,3,-8,-9,-4,-8,2,-1,3,-1,2,-1,8,6,6,-3,7,8,-10,6,3,6,-1,10,5,-7,1,-4,8,3,3,-6,3,6,10,-9,7,-2,-4,-4,-4,-8,9,-5,1,-2,5,-5,-3,-4,-2,-9,10,-7,4,5,-2,-6,-4,7,-9,10,-6,-4,3,-3,-3,-3,-4,7,-2,7,-5,3,3,7,-9,-8,9,8,-2,-8,-5,-7,-3,-6,-9,1,9,-7,5,6,8,-1,-8,10,9,-6,-3,3,9,1,6,6,-5,8,7,-4,-10,4,5,1,-4,-8,9,-2,-3,-8,6,-4,7,3,-8,8,3,7,8,1,4,-10,3,3,7,-4,-7,6,-10,7,5,5,7,-5,1,-8,5,10,-10,-3,4,9,-4,5,-3,2,-8,-5,9,10,6,-5,-6,1,7,2,-1,-5,6,-1,-2,7,7,5,-4,6,-2,2,-5,3,-7,7,6,5,4,2,-8,-6,-3,-3,-7,-8,1,7,3,9,-3,-9,8,10,1,-8,3,6,-6,-2,7,1,9,3,6,-3,-8,-9,-8,10,2,-8,1,-8,10,-9,-9,-4,-6,2,9,-4,-10,7,1,9,3,-6,-1,3,-6,10,-1,-8,3,1,-7,-1,6,-7,5,-2,-3,-5,5,-8,10,-10,4,8,-8,-9,3,-2,-10,-8,4,5,10,-2,10,8,7,1,-6,9,9,8,10,3,-10,-4,2,-2,1,-9,-3,9,5,-1,2,-6,8,4,-6,9,-1,10,4,8,-5,4,-4,-6,-6,9,-7,-8,-10,4,-1,-4,5,8,6,-3,-2,7,-2,4,-1,4,7,2,6,5,-8,2,1,-3,7,-5,2,5,-4,2,10,-3,1,6,3,7,-10,-5,10,-7,-3,-5,6,-9,-7,-6,-10,-7,6,8,-5,-3,5,-6,-3,1,-5,10,-4,-2,1,-9,-10,-2,10,-8,-5,9,-6,-5,8,-6,10,-6,5,7,-7,9,-3,-4,10,-7,2,5,3,-6,3,7,7,2,-1,-10,-7,8,9,-4,-3,-4,-9,2,6,-6,-1,4,6,10,7,8,10,-4,9,7,-1,8,7,-3,-9,4,1,5,-6,-5,-8,6,10,-6,10,-10,6,10,-7,8,1,5,10,9,7,-6,8,3,-4,6,6,-4,5,6,6,-9,6,10,4,-9,-5,7,8,1,3,-5,-7,-9,-2,6,1,-6,-7,-10,-8,-3,-5,-8,2,-7,1,4,-1,-8,-2,-3,-10,-7,-9,-10,-7,2,5,8,-1,4,7,10,5,-2,-4,7,6,-3,-2,-4,7,-4,7,-2,5,2,6,-1,-10,5,8,10,-7,-10,3,9,-9,-2,2,-5,-2,10,-9,-10,-2,4,8,-7,-4,-5,1,9,-6,8,-7,-7,-10,-8,6,7,-2,9,5,-6,-2,-8,-4,5,-7,1,6,2,5,-6,-5,-10,-5,8,6,1,-4,5,5,9,-4,8,8,-7,-10,-5,-7,-4,5,-2,-6,3,1,8,-7,-10,7,1,9,-8,1,6,10,8,-1,-10,-5,-5,-8,-4,9,-6,-3,-2,2,-3,-5,9,-8,5,-1,-6,-8,3,-5,-1,-3,1,-1,-10,4,6,-10,-7,5,-8,6,3,9,10,-2,-10,-7,1,-5,2,4,-9,4,3,-1,-8,-8,-3,-4,1,-5,3,2,-1,-6,-6,-3,-3,4,-8,8,4,-6,3,9,8,-6,5,6,7,-10,-10,-10,2,10,1,-8,6,-9,4,6,3,2,2,-5,-9,1,-10,2,-9,5,-4,4,-7,-10,2,-2,8,2,-3,6,-3,-9,2,-6,8,10,4,-2,8,9,-10,4,6,-7,-4,-9,1,-10,3,-5,-9,3,-8,2,8,5,-4,-5,4,9,4,5,-8,-10,4,2,-10,-5,-1,-4,8,-7,8,-3,4,2,-10,3,5,8,9,-1,8,-7,2,-10,-1,-3,10,3,7,-2,-4,4,-10,-9,4,-10,-7,-3,-8,-1,9,8,-1,-3,-10,-5,2,6,-2,3,-6,-2,7,1,-6,4], dtype = "int64")#candidate|6617|(1120,)|const|int64
call_6615 = relay.TupleGetItem(func_5029_call(relay.reshape(const_6616.astype('float32'), [16, 1, 3]), relay.reshape(const_6617.astype('int64'), [1120,]), ), 2)
call_6618 = relay.TupleGetItem(func_5033_call(relay.reshape(const_6616.astype('float32'), [16, 1, 3]), relay.reshape(const_6617.astype('int64'), [1120,]), ), 2)
func_5709_call = mod.get_global_var('func_5709')
func_5710_call = mutated_mod.get_global_var('func_5710')
call_6640 = relay.TupleGetItem(func_5709_call(), 2)
call_6641 = relay.TupleGetItem(func_5710_call(), 2)
uop_6668 = relay.acosh(const_6617.astype('float64')) # shape=(1120,)
func_2738_call = mod.get_global_var('func_2738')
func_2740_call = mutated_mod.get_global_var('func_2740')
call_6670 = relay.TupleGetItem(func_2738_call(), 0)
call_6671 = relay.TupleGetItem(func_2740_call(), 0)
func_4669_call = mod.get_global_var('func_4669')
func_4672_call = mutated_mod.get_global_var('func_4672')
call_6689 = relay.TupleGetItem(func_4669_call(relay.reshape(call_6640.astype('uint64'), [])), 1)
call_6690 = relay.TupleGetItem(func_4672_call(relay.reshape(call_6640.astype('uint64'), [])), 1)
bop_6695 = relay.greater(uop_6606.astype('bool'), call_6689.astype('bool')) # shape=(14, 10, 16)
bop_6698 = relay.greater(uop_6606.astype('bool'), call_6690.astype('bool')) # shape=(14, 10, 16)
func_4331_call = mod.get_global_var('func_4331')
func_4336_call = mutated_mod.get_global_var('func_4336')
var_6707 = relay.var("var_6707", dtype = "uint8", shape = (490,))#candidate|6707|(490,)|var|uint8
const_6708 = relay.const([[8.550436,3.677804,-7.207619,2.402544,-9.059627,-4.618288,-1.319858,8.226024,6.275888,-4.728372,4.713237,3.503237,6.827453,-6.331815,-7.366291,-7.893755,3.244749,-7.438321,7.836991,1.986462,-2.635794,8.982366,2.601987,2.665660,-1.163680,0.333581,5.084380,-8.447200,7.787700,-8.348891,-3.722993,5.454499,-5.122160,-3.227806,-8.476809,9.982406,8.046048,0.439787,7.104125,7.090958,-3.162759,-0.481152,-6.351679,-2.289736,4.156887,8.931852,-8.566766,-0.663936,-0.847987,-3.102691,-6.994585,-4.346644,-2.385974,-7.322490,-7.761889,2.688730,-6.567388,-9.259011,-2.245751,8.059603,6.011679,-7.271196,0.452093,-1.121953,5.000766,-3.515755,-5.674226,9.398471,-2.615673,-2.270481,7.421070,6.552164,2.616165,-7.958589,6.062668,-9.858421,-8.449969,-3.414131,2.851399,-5.646331,6.107377,-6.537155,0.673444,-2.981608,9.433531,-0.971112,-0.226375,7.852906,6.246048,1.136834,1.361741,0.532535,-5.580196,3.567139,-4.515800,-1.278145,8.943056,2.461116,-9.659823,-4.779114,-9.287206,9.090642,7.025487,9.435339,-6.661654,7.348524,-1.365970,-7.272656,-3.974219,-3.362601,1.405751,-7.401493,4.549587,1.188865,9.346690,9.013066,-0.975656,-2.739289,9.162275,-3.455695,-4.761481,3.584252,-5.280342,-3.951455,-9.795813,4.426821,1.582322,-5.189817,6.695707,5.088319,0.310743,-4.604709,5.058920,1.167101,-3.911131,-9.374622,0.850693,1.195431,4.986992,-3.675588,-6.181177,4.337226,8.216439,-0.078718,2.017595,9.141197,8.685458,-3.078262,-1.296486,0.975019,8.103896,-0.320992,-6.027015,-4.508115,3.663255,7.668327,-9.277033,3.985571,-4.442274,-2.238940,4.580762,-8.078736,-3.295870,5.584192,0.878216,4.730113,3.434852,6.947912,-0.574701,0.714000,1.332400,2.876117,-6.975531,8.429932,0.604067,-4.065475,-9.311340,2.886987,-7.901313,7.200188,0.830227,-8.903606,-2.728900,-9.935990,-8.960655,-7.989284,-7.031614,4.902143,3.177608,2.083163,2.285290,6.252615,5.865561,-5.008833,-0.410909,0.842242,-7.411055,-2.689842,4.380853,2.190058,-0.534936,0.544657,-2.240283,6.114389,-2.477335,-7.993311,3.397254,2.797631,-0.596344,-1.244638,8.436080,-0.315025,3.748334,8.342819,-1.709483,-3.238317,-1.951819,9.388375,5.340798,-1.378298,-8.981672,9.593986,9.926060,-3.063678,-0.996544]], dtype = "float64")#candidate|6708|(1, 225)|const|float64
call_6706 = relay.TupleGetItem(func_4331_call(relay.reshape(var_6707.astype('uint8'), [5, 14, 7]), relay.reshape(call_6615.astype('int16'), [270,]), relay.reshape(const_6708.astype('float64'), [75, 3]), ), 5)
call_6709 = relay.TupleGetItem(func_4336_call(relay.reshape(var_6707.astype('uint8'), [5, 14, 7]), relay.reshape(call_6615.astype('int16'), [270,]), relay.reshape(const_6708.astype('float64'), [75, 3]), ), 5)
output = relay.Tuple([call_6615,const_6616,call_6640,uop_6668,call_6670,bop_6695,call_6706,var_6707,const_6708,])
output2 = relay.Tuple([call_6618,const_6616,call_6641,uop_6668,call_6671,bop_6698,call_6709,var_6707,const_6708,])
func_6720 = relay.Function([var_6707,], output)
mod['func_6720'] = func_6720
mod = relay.transform.InferType()(mod)
mutated_mod['func_6720'] = func_6720
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6721 = relay.var("var_6721", dtype = "uint8", shape = (490,))#candidate|6721|(490,)|var|uint8
func_6720_call = mutated_mod.get_global_var('func_6720')
call_6722 = func_6720_call(var_6721)
output = call_6722
func_6723 = relay.Function([var_6721], output)
mutated_mod['func_6723'] = func_6723
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6734 = relay.var("var_6734", dtype = "int16", shape = (11, 10, 15))#candidate|6734|(11, 10, 15)|var|int16
var_6735 = relay.var("var_6735", dtype = "int16", shape = (11, 10, 15))#candidate|6735|(11, 10, 15)|var|int16
bop_6736 = relay.bitwise_or(var_6734.astype('int16'), relay.reshape(var_6735.astype('int16'), relay.shape_of(var_6734))) # shape=(11, 10, 15)
func_4709_call = mod.get_global_var('func_4709')
func_4710_call = mutated_mod.get_global_var('func_4710')
call_6739 = func_4709_call()
call_6740 = func_4709_call()
func_3357_call = mod.get_global_var('func_3357')
func_3361_call = mutated_mod.get_global_var('func_3361')
const_6747 = relay.const([-8,5,1,-2,6,5,9,-2,10,-5,-7,-5,7,-9,6,8,8,4,9,-4,-1,10,-5,-4,-8,-5,-4,-3,10,9,2,2,1,9,3,7,-4,-3,-9,-3,-5,-2,-1,-10,-7,-9,-6,-10,8,-9,7,-6,-2,10,-7,10,1,1,-9,5,9,8,4,6,-1,2,2,-7,-6,-10,9,-4,-4,-4,-5,-10,2,4,7,-7,-7,-6,-6,5,-9,-6,-5,-1,-7,-1,-6,9,-2,-6,-4,-9,4,10,-8,4,8,-8,-10,1,3,-10,-6,9,-3,-8,7,-8,1,-1,-2,8,4,-4,-4,4,8,8,-4,-3,1,-5,-9,9,10,-10,-4,-4,-4,-3,-3,8,10,5,-5,2,-2,-2,10,10,1,4,-8,-4,-5,1,-5,-9,-6,-10,5,-5,-10,7,-10,2,6,-5,-2,-5,5,7,6,6,10,-3,7,-3,6,-7,-4,-8,-2,-3,3,5,5,-9,-6,2,-10,-3,4,-5,4,9,-8,-8,-1,9,10,-3,4,5], dtype = "int16")#candidate|6747|(198,)|const|int16
const_6748 = relay.const([9.838868,-1.792384,5.029417,-7.017221,-6.978003,-3.532962,-5.228563,6.642528,6.368109,5.665495,0.812333,7.888166,-4.448704,-2.411471,5.831812,5.227272,-9.570997,-6.978557,9.063936,-3.187346,-2.880753,-4.304010,-7.615068,9.548930,4.024001,-9.825180,-1.073047,1.278099,1.888053,-1.450632,6.954074,4.808916,7.850295,-0.288498,-8.387706,-9.050294,9.524157,7.605456,-4.120223,7.006839,7.134088,-9.569464,3.226532,9.431251,4.542348,6.697518,4.632676,-0.123194,3.801481,-9.120068,3.941869,-9.630108,8.606908,-3.527107,-6.336195,4.654847,7.416154,7.416371,1.144364,9.051512,-0.719666,7.594046,2.447287,1.273773,-9.515344,-2.177283,-5.259905,-4.810199,1.739528,-5.646287,-5.028283,9.585762,7.932066,2.801392,0.346437,-0.271678,3.810138,-3.328136,6.229334,1.045450,6.681362,-4.112108,-3.373450,3.426539,0.445870,-3.307268,2.973481,-8.780766,-0.529958,6.504812,-6.221914,-4.123930,0.943787,4.874053,-0.923651,1.061048,-2.909857,1.992551,-8.511849,-1.528902,-5.112367,-6.346897,1.178442,2.899253,-7.359924], dtype = "float64")#candidate|6748|(105,)|const|float64
call_6746 = relay.TupleGetItem(func_3357_call(relay.reshape(const_6747.astype('int16'), [11, 6, 3]), relay.reshape(call_6739.astype('float32'), [1540,]), relay.reshape(const_6748.astype('float64'), [105,]), ), 5)
call_6749 = relay.TupleGetItem(func_3361_call(relay.reshape(const_6747.astype('int16'), [11, 6, 3]), relay.reshape(call_6739.astype('float32'), [1540,]), relay.reshape(const_6748.astype('float64'), [105,]), ), 5)
output = relay.Tuple([bop_6736,call_6739,call_6746,const_6747,const_6748,])
output2 = relay.Tuple([bop_6736,call_6740,call_6749,const_6747,const_6748,])
func_6754 = relay.Function([var_6734,var_6735,], output)
mod['func_6754'] = func_6754
mod = relay.transform.InferType()(mod)
var_6755 = relay.var("var_6755", dtype = "int16", shape = (11, 10, 15))#candidate|6755|(11, 10, 15)|var|int16
var_6756 = relay.var("var_6756", dtype = "int16", shape = (11, 10, 15))#candidate|6756|(11, 10, 15)|var|int16
output = func_6754(var_6755,var_6756,)
func_6757 = relay.Function([var_6755,var_6756,], output)
mutated_mod['func_6757'] = func_6757
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6770 = relay.const([[[-6,-8,6,-2,4,-2,9,9,-3,-10,8,10],[3,-4,-5,8,-7,-6,4,5,-5,-6,10,-6],[4,-5,-10,-6,4,1,10,-3,-6,9,9,9]],[[5,-8,1,-8,-2,7,-6,2,-7,-1,6,6],[-3,1,-1,7,6,-10,3,-3,-9,-4,5,6],[3,-9,-1,1,1,9,-4,7,4,-8,5,2]],[[2,-10,-4,-1,6,-3,6,-5,8,9,10,2],[5,-1,-1,-4,-8,2,-3,-6,2,9,5,-4],[-6,5,-9,2,-4,4,-5,-8,5,5,-10,8]],[[-4,1,9,-2,-6,-4,3,1,-8,-3,-5,6],[-1,-7,-3,7,2,-7,-1,9,-8,-4,-7,-10],[-2,-8,6,-9,6,-1,1,-6,-4,-5,6,4]],[[-4,-6,-5,-6,1,-6,-9,-5,-10,-5,6,3],[6,7,-1,7,1,-8,10,-3,-9,10,-3,4],[3,4,1,-1,7,-9,9,4,9,-6,8,-2]],[[10,7,-8,5,-8,-3,8,8,-10,-2,2,10],[-9,-2,6,6,-7,9,1,7,5,-10,3,-6],[4,-3,5,-2,10,3,-10,-1,-9,-2,-6,-2]],[[10,2,2,6,6,-6,3,-7,-10,10,-9,-6],[-1,1,-9,8,8,3,-8,8,10,-6,10,7],[-6,-1,-6,-5,7,-6,-2,-4,-4,2,5,7]],[[4,8,9,-5,10,1,-4,7,-6,-8,9,9],[-8,-7,-1,-8,-8,-10,-4,1,2,2,-10,-9],[-3,-3,8,6,-4,-1,-7,-9,-7,-1,5,-5]],[[-4,5,7,10,-3,-2,6,-9,1,5,-10,3],[5,-8,-6,9,1,3,10,-6,6,-3,6,-3],[1,6,-4,9,-5,-2,-10,-10,-5,-9,-6,-7]],[[4,7,2,-8,-7,6,-7,3,-2,2,3,4],[-7,-2,-7,5,1,-1,1,-7,8,-10,-8,7],[-5,3,1,8,10,10,9,1,9,-2,-3,-9]],[[-4,-6,-1,2,1,5,-5,-9,3,4,-7,3],[-7,4,-5,3,-1,2,9,9,-3,4,-7,3],[-2,-5,2,-5,-4,2,-4,-1,-1,9,10,2]],[[2,9,8,-3,-1,-1,6,-3,-5,-4,-8,-3],[1,-1,-10,4,10,3,-7,10,5,-10,-7,3],[-8,2,3,6,-9,-5,-3,-3,4,3,-4,-1]]], dtype = "uint8")#candidate|6770|(12, 3, 12)|const|uint8
var_6771 = relay.var("var_6771", dtype = "uint8", shape = (12, 3, 12))#candidate|6771|(12, 3, 12)|var|uint8
bop_6772 = relay.bitwise_or(const_6770.astype('uint8'), relay.reshape(var_6771.astype('uint8'), relay.shape_of(const_6770))) # shape=(12, 3, 12)
bop_6778 = relay.logical_and(bop_6772.astype('bool'), relay.reshape(const_6770.astype('bool'), relay.shape_of(bop_6772))) # shape=(12, 3, 12)
output = relay.Tuple([bop_6778,])
output2 = relay.Tuple([bop_6778,])
func_6783 = relay.Function([var_6771,], output)
mod['func_6783'] = func_6783
mod = relay.transform.InferType()(mod)
mutated_mod['func_6783'] = func_6783
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6784 = relay.var("var_6784", dtype = "uint8", shape = (12, 3, 12))#candidate|6784|(12, 3, 12)|var|uint8
func_6783_call = mutated_mod.get_global_var('func_6783')
call_6785 = func_6783_call(var_6784)
output = call_6785
func_6786 = relay.Function([var_6784], output)
mutated_mod['func_6786'] = func_6786
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4480_call = mod.get_global_var('func_4480')
func_4482_call = mutated_mod.get_global_var('func_4482')
call_6825 = relay.TupleGetItem(func_4480_call(), 0)
call_6826 = relay.TupleGetItem(func_4482_call(), 0)
func_5083_call = mod.get_global_var('func_5083')
func_5085_call = mutated_mod.get_global_var('func_5085')
var_6831 = relay.var("var_6831", dtype = "bool", shape = (7, 220))#candidate|6831|(7, 220)|var|bool
call_6830 = relay.TupleGetItem(func_5083_call(relay.reshape(var_6831.astype('bool'), [11, 14, 10])), 1)
call_6832 = relay.TupleGetItem(func_5085_call(relay.reshape(var_6831.astype('bool'), [11, 14, 10])), 1)
uop_6846 = relay.log10(var_6831.astype('float32')) # shape=(7, 220)
bop_6851 = relay.equal(uop_6846.astype('bool'), relay.reshape(var_6831.astype('bool'), relay.shape_of(uop_6846))) # shape=(7, 220)
uop_6854 = relay.log10(call_6825.astype('float64')) # shape=(11, 12, 6)
uop_6856 = relay.log10(call_6826.astype('float64')) # shape=(11, 12, 6)
func_3442_call = mod.get_global_var('func_3442')
func_3447_call = mutated_mod.get_global_var('func_3447')
var_6858 = relay.var("var_6858", dtype = "float64", shape = (70,))#candidate|6858|(70,)|var|float64
var_6859 = relay.var("var_6859", dtype = "int16", shape = (270,))#candidate|6859|(270,)|var|int16
const_6860 = relay.const([-6.092593,-4.951651,-3.200331,7.478824,7.904731,9.000588,0.292773,-4.031825,-1.168282,-1.068989,0.312921,7.658882,4.457594,-4.685865,6.110988,-0.142682,7.816816,0.405435,-3.340197,6.959231,0.678785,-3.421784,6.335399,1.251084,-7.471079,0.844610,-5.330844,-0.535011,-2.152751,-1.712999,7.195233,-8.081995,2.584656,-2.608640,-6.449433,9.846997,-5.357921,9.602360,4.099919,-8.161151,-6.811274,0.162592,-9.892158,2.837182,-9.402947,5.749810,-5.407318,-3.767359,8.683507,-5.329655,-5.514906,-7.453014,6.708072,9.539684,-3.644281,4.932491,5.661603,2.070867,-7.570422,-7.911000,-0.370934,-3.385242,3.411989,-8.529317,6.221536,5.434649,7.023971,-6.424676,6.347041,7.403863,1.818690,-6.052750,1.179032,5.844817,-3.427571,-5.995368,1.225849,-7.977586,1.581302,1.333020,5.446675,4.004840,-8.097394,1.405739,9.560372,-0.901490,5.268748,7.146923,-3.014787,-9.591315,-2.291527,-8.424719,9.845925,9.502538,6.549752,5.789374,6.531421,3.568762,3.428316,9.113753,5.376314,0.348164,-7.684125,8.709865,8.360784], dtype = "float64")#candidate|6860|(105,)|const|float64
call_6857 = relay.TupleGetItem(func_3442_call(relay.reshape(var_6858.astype('float64'), [14, 5]), relay.reshape(var_6859.astype('int16'), [270,]), relay.reshape(const_6860.astype('float64'), [105,]), ), 6)
call_6861 = relay.TupleGetItem(func_3447_call(relay.reshape(var_6858.astype('float64'), [14, 5]), relay.reshape(var_6859.astype('int16'), [270,]), relay.reshape(const_6860.astype('float64'), [105,]), ), 6)
func_3694_call = mod.get_global_var('func_3694')
func_3695_call = mutated_mod.get_global_var('func_3695')
call_6866 = relay.TupleGetItem(func_3694_call(), 1)
call_6867 = relay.TupleGetItem(func_3695_call(), 1)
uop_6882 = relay.rsqrt(call_6866.astype('float64')) # shape=(6, 45)
uop_6884 = relay.rsqrt(call_6867.astype('float64')) # shape=(6, 45)
bop_6886 = relay.less(uop_6854.astype('bool'), relay.reshape(call_6825.astype('bool'), relay.shape_of(uop_6854))) # shape=(11, 12, 6)
bop_6889 = relay.less(uop_6856.astype('bool'), relay.reshape(call_6826.astype('bool'), relay.shape_of(uop_6856))) # shape=(11, 12, 6)
uop_6899 = relay.atanh(uop_6882.astype('float32')) # shape=(6, 45)
uop_6901 = relay.atanh(uop_6884.astype('float32')) # shape=(6, 45)
bop_6902 = relay.multiply(uop_6846.astype('float64'), relay.reshape(bop_6851.astype('float64'), relay.shape_of(uop_6846))) # shape=(7, 220)
uop_6923 = relay.atanh(uop_6854.astype('float32')) # shape=(11, 12, 6)
uop_6925 = relay.atanh(uop_6856.astype('float32')) # shape=(11, 12, 6)
bop_6936 = relay.bitwise_or(bop_6886.astype('int8'), relay.reshape(call_6825.astype('int8'), relay.shape_of(bop_6886))) # shape=(11, 12, 6)
bop_6939 = relay.bitwise_or(bop_6889.astype('int8'), relay.reshape(call_6826.astype('int8'), relay.shape_of(bop_6889))) # shape=(11, 12, 6)
const_6942 = relay.const([[[False,True,False,False,False,False,True],[True,False,False,True,True,False,False],[True,True,False,True,True,True,False],[True,False,True,True,False,True,True],[False,False,True,False,True,False,False],[True,False,False,False,False,False,False],[True,False,False,False,True,True,False],[False,False,False,False,False,True,True],[False,False,False,False,False,False,True]],[[False,False,True,True,False,True,False],[False,True,False,True,True,False,True],[False,True,True,True,True,True,True],[False,False,False,False,True,False,True],[True,False,False,True,False,True,True],[False,True,True,False,False,True,True],[False,True,True,False,True,False,True],[False,False,False,False,False,False,True],[True,True,False,True,True,False,False]],[[False,True,True,False,False,False,True],[True,True,False,True,True,True,True],[False,False,True,False,False,True,True],[False,False,False,False,True,False,True],[False,False,True,False,True,True,True],[False,True,False,True,True,False,False],[False,False,True,False,False,False,False],[False,False,True,False,False,True,False],[True,True,True,True,True,True,False]],[[True,False,True,True,True,True,False],[False,True,False,False,True,True,False],[True,False,True,True,False,False,False],[False,False,False,True,True,False,False],[True,True,False,False,True,True,True],[False,False,True,True,False,True,True],[True,False,False,True,False,True,False],[False,True,False,False,True,True,True],[True,True,False,False,False,False,False]],[[True,False,True,True,False,False,False],[False,True,False,False,True,False,True],[False,True,True,False,False,False,True],[False,True,False,True,False,False,True],[False,True,True,True,True,False,False],[True,False,True,False,True,True,False],[False,True,True,False,False,False,True],[False,False,False,False,True,False,True],[True,True,False,True,False,True,False]],[[True,True,True,False,True,False,False],[False,True,False,True,False,True,True],[False,False,False,False,False,False,True],[False,True,False,True,False,True,True],[False,False,True,True,False,False,True],[True,False,False,False,True,False,True],[True,False,False,True,False,True,False],[False,True,True,False,False,True,False],[False,False,True,False,True,False,True]],[[True,True,True,False,True,True,False],[True,True,True,False,True,False,False],[True,True,False,False,False,True,False],[True,False,False,True,True,True,False],[False,False,True,True,True,False,True],[False,True,False,True,True,True,False],[False,True,False,False,False,False,False],[True,True,False,False,True,True,True],[False,False,True,False,False,True,True]],[[True,True,True,False,True,True,True],[False,False,True,False,False,True,False],[False,True,False,True,False,True,True],[False,False,True,False,False,False,True],[True,True,False,False,True,True,False],[False,False,False,False,True,True,False],[True,True,True,True,False,True,True],[True,False,False,True,False,True,True],[True,False,False,False,True,True,False]],[[False,False,True,False,True,True,False],[False,False,True,True,True,False,False],[False,True,True,True,False,False,False],[False,True,True,True,True,False,True],[True,True,False,True,True,True,False],[False,False,False,False,False,True,True],[False,True,False,False,True,True,True],[True,True,True,True,True,False,True],[False,False,False,True,True,False,True]],[[True,True,True,True,True,True,False],[False,True,True,False,False,True,False],[True,True,True,False,False,False,False],[True,False,True,False,True,True,True],[False,False,False,True,True,True,True],[True,True,True,True,False,False,True],[False,False,True,False,True,False,False],[True,False,False,True,False,True,True],[True,True,False,False,True,True,True]],[[False,False,False,True,True,True,False],[True,False,True,False,False,False,False],[True,False,False,False,False,True,True],[True,False,False,False,True,True,False],[False,False,False,True,False,False,False],[False,False,True,True,False,False,True],[False,True,True,True,True,False,True],[False,True,True,True,True,True,True],[True,False,False,True,False,False,False]],[[True,False,True,True,False,False,False],[False,False,False,False,True,True,True],[True,True,True,True,False,False,False],[False,True,True,True,False,True,False],[False,True,True,True,False,False,False],[False,False,True,True,False,True,True],[False,False,True,True,False,False,False],[False,False,False,False,True,True,True],[True,True,False,False,False,True,True]],[[False,True,False,True,True,True,False],[True,False,True,True,False,False,False],[False,False,False,True,False,False,True],[False,False,True,True,True,True,True],[True,False,True,False,True,True,True],[False,False,True,True,False,False,True],[False,True,True,True,True,False,False],[False,False,True,False,False,False,True],[True,True,True,True,True,False,True]]], dtype = "bool")#candidate|6942|(13, 9, 7)|const|bool
bop_6943 = relay.multiply(call_6857.astype('uint32'), relay.reshape(const_6942.astype('uint32'), relay.shape_of(call_6857))) # shape=(13, 9, 7)
bop_6946 = relay.multiply(call_6861.astype('uint32'), relay.reshape(const_6942.astype('uint32'), relay.shape_of(call_6861))) # shape=(13, 9, 7)
func_994_call = mod.get_global_var('func_994')
func_996_call = mutated_mod.get_global_var('func_996')
var_6949 = relay.var("var_6949", dtype = "float32", shape = (42,))#candidate|6949|(42,)|var|float32
call_6948 = relay.TupleGetItem(func_994_call(relay.reshape(var_6949.astype('float32'), [6, 1, 7])), 2)
call_6950 = relay.TupleGetItem(func_996_call(relay.reshape(var_6949.astype('float32'), [6, 1, 7])), 2)
uop_6975 = relay.log2(uop_6923.astype('float64')) # shape=(11, 12, 6)
uop_6977 = relay.log2(uop_6925.astype('float64')) # shape=(11, 12, 6)
output = relay.Tuple([call_6830,var_6858,var_6859,const_6860,uop_6899,bop_6902,bop_6936,bop_6943,call_6948,var_6949,uop_6975,])
output2 = relay.Tuple([call_6832,var_6858,var_6859,const_6860,uop_6901,bop_6902,bop_6939,bop_6946,call_6950,var_6949,uop_6977,])
func_6979 = relay.Function([var_6831,var_6858,var_6859,var_6949,], output)
mod['func_6979'] = func_6979
mod = relay.transform.InferType()(mod)
mutated_mod['func_6979'] = func_6979
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6979_call = mutated_mod.get_global_var('func_6979')
var_6981 = relay.var("var_6981", dtype = "bool", shape = (7, 220))#candidate|6981|(7, 220)|var|bool
var_6982 = relay.var("var_6982", dtype = "float64", shape = (70,))#candidate|6982|(70,)|var|float64
var_6983 = relay.var("var_6983", dtype = "int16", shape = (270,))#candidate|6983|(270,)|var|int16
var_6984 = relay.var("var_6984", dtype = "float32", shape = (42,))#candidate|6984|(42,)|var|float32
call_6980 = func_6979_call(var_6981,var_6982,var_6983,var_6984,)
output = call_6980
func_6985 = relay.Function([var_6981,var_6982,var_6983,var_6984,], output)
mutated_mod['func_6985'] = func_6985
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2789_call = mod.get_global_var('func_2789')
func_2791_call = mutated_mod.get_global_var('func_2791')
call_7033 = relay.TupleGetItem(func_2789_call(), 0)
call_7034 = relay.TupleGetItem(func_2791_call(), 0)
func_2904_call = mod.get_global_var('func_2904')
func_2908_call = mutated_mod.get_global_var('func_2908')
var_7042 = relay.var("var_7042", dtype = "int16", shape = (270,))#candidate|7042|(270,)|var|int16
var_7043 = relay.var("var_7043", dtype = "float64", shape = (105,))#candidate|7043|(105,)|var|float64
call_7041 = relay.TupleGetItem(func_2904_call(relay.reshape(var_7042.astype('int16'), [270,]), relay.reshape(var_7043.astype('float64'), [105,]), ), 2)
call_7044 = relay.TupleGetItem(func_2908_call(relay.reshape(var_7042.astype('int16'), [270,]), relay.reshape(var_7043.astype('float64'), [105,]), ), 2)
uop_7049 = relay.asin(var_7042.astype('float64')) # shape=(270,)
func_2989_call = mod.get_global_var('func_2989')
func_2991_call = mutated_mod.get_global_var('func_2991')
call_7057 = relay.TupleGetItem(func_2989_call(relay.reshape(var_7043.astype('float64'), [105,])), 1)
call_7058 = relay.TupleGetItem(func_2991_call(relay.reshape(var_7043.astype('float64'), [105,])), 1)
func_4585_call = mod.get_global_var('func_4585')
func_4587_call = mutated_mod.get_global_var('func_4587')
call_7083 = relay.TupleGetItem(func_4585_call(), 0)
call_7084 = relay.TupleGetItem(func_4587_call(), 0)
func_5544_call = mod.get_global_var('func_5544')
func_5546_call = mutated_mod.get_global_var('func_5546')
call_7100 = func_5544_call()
call_7101 = func_5544_call()
bop_7104 = relay.left_shift(call_7057.astype('int32'), relay.reshape(var_7043.astype('int32'), relay.shape_of(call_7057))) # shape=(3, 5, 7)
bop_7107 = relay.left_shift(call_7058.astype('int32'), relay.reshape(var_7043.astype('int32'), relay.shape_of(call_7058))) # shape=(3, 5, 7)
output = relay.Tuple([call_7033,call_7041,uop_7049,call_7083,call_7100,bop_7104,])
output2 = relay.Tuple([call_7034,call_7044,uop_7049,call_7084,call_7101,bop_7107,])
F = relay.Function([var_7042,var_7043,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_7042,var_7043,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

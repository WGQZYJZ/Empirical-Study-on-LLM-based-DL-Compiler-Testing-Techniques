==========mod==========
#[version = "0.0.5"]
def @func_11042() -> (Tensor[(13, 13, ?), bool],) {
  %0 = @func_4528() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %1 = %0.0;
  (%1,)
}

def @func_16684() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %2 = @func_16590() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %3 = @func_7040() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(4, 1, 15), float32]) */;
  %4 = %2.3;
  %5 = %3.0;
  (%4, %5)
}

def @func_6135(%var_6117: Tensor[(7), float32]) -> (Tensor[(13, 13, 2), float64], Tensor[(13, 13, ?), float64], Tensor[(7), float32]) {
  %6 = @func_3103() /* ty=(Tensor[(13, 13, 2), float64],) */;
  %7 = cast(%var_6117, dtype="float32") /* ty=Tensor[(7), float32] */;
  %8 = reshape(%7, newshape=[7]) /* ty=Tensor[(7), float32] */;
  %9 = @func_4199(%8) /* ty=(Tensor[(13, 13, ?), float64], Tensor[(1, 1, 7), float32], Tensor[(7), float32], Tensor[(13, 13, ?), bool]) */;
  %10 = %6.0;
  %11 = %9.0;
  (%10, %11, %var_6117)
}

def @func_13027() -> (Tensor[(13, 13, ?), bool],) {
  %12 = @func_3011() /* ty=Tensor[(13, 13, ?), bool] */;
  (%12,)
}

def @func_16920() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], uint8, Tensor[(64), uint8]) {
  %13 = @func_12025() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %14 = cast(meta[relay.Constant][0] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %15 = cast(meta[relay.Constant][1] /* ty=Tensor[(64), uint8] */, dtype="uint8") /* ty=Tensor[(64), uint8] */;
  %16 = reshape(%14, newshape=[]) /* ty=uint8 */;
  %17 = reshape(%15, newshape=[8, 8, 1]) /* ty=Tensor[(8, 8, 1), uint8] */;
  %18 = @func_6417(%16, %17) /* ty=(Tensor[(8, 8, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(8, 8, 1), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), uint32]) */;
  %19 = %13.0;
  %20 = %18.1;
  (%19, %20, meta[relay.Constant][0] /* ty=uint8 */, meta[relay.Constant][1] /* ty=Tensor[(64), uint8] */)
}

def @func_7716() -> Tensor[(13, 13, ?), bool] {
  %21 = @func_4878() /* ty=(Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %21.3
}

def @func_15626() -> (Tensor[(13, 13, 10), int64], Tensor[(13, 13, ?), bool]) {
  %22 = @func_11487() /* ty=(Tensor[(13, 13, ?), float64], Tensor[(13, 13, 10), int64], Tensor[(13, 13, ?), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 10), int64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %23 = @func_8356() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %24 = %22.4;
  %25 = %23.0;
  (%24, %25)
}

def @main() -> (Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), int8], Tensor[(13, 13, 1690), int16]) {
  %26 = @func_8503() /* ty=(Tensor[(13, 13, ?), float32],) */;
  %27 = @func_2985() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), int8]) */;
  %28 = @func_17295() /* ty=(Tensor[(1690), float32],) */;
  %29 = %28.0;
  %30 = @func_9997() /* ty=Tensor[(13, 13, ?), bool] */;
  %31 = cast(%29, dtype="int16") /* ty=Tensor[(1690), int16] */;
  %32 = cast(%30, dtype="int16") /* ty=Tensor[(13, 13, ?), int16] */;
  %33 = %26.0;
  %34 = %27.1;
  %35 = bitwise_xor(%31, %32) /* ty=Tensor[(13, 13, 1690), int16] */;
  (%33, %34, %35)
}

def @func_12090() -> (Tensor[(13, 13, ?), bool],) {
  %36 = @func_1037() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %37 = %36.0;
  (%37,)
}

def @func_1947() -> (Tensor[(13, 13, ?), bool],) {
  %38 = @func_1247() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), uint32], Tensor[(13, 13, ?), bool]) */;
  %39 = %38.3;
  (%39,)
}

def @func_5735() -> Tensor[(13, 13, ?), bool] {
  %40 = @func_5068() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %41 = %40.0;
  %42 = cast(meta[relay.Constant][2] /* ty=Tensor[(13, 13, 1), bool] */, dtype="bool") /* ty=Tensor[(13, 13, 1), bool] */;
  %43 = shape_of(%41, dtype="int32") /* ty=Tensor[(3), int32] */;
  %44 = cast(%41, dtype="bool") /* ty=Tensor[(13, 13, ?), bool] */;
  %45 = dyn.reshape(%42, %43, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%44, %45) /* ty=Tensor[(13, 13, ?), bool] */
}

def @func_5791() -> (Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool]) {
  %46 = @func_1142() /* ty=(Tensor[(13, 13, ?), float32],) */;
  %47 = @func_3130() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %48 = %46.0;
  %49 = %47.0;
  (%48, %49)
}

def @func_6888(%var_6862: Tensor[(13, 13, 2), int8]) -> Tensor[(13, 13, 2), uint8] {
  %50 = @func_2623() /* ty=Tensor[(13, 13, ?), int8] */;
  %51 = cast(%50, dtype="uint8") /* ty=Tensor[(13, 13, ?), uint8] */;
  %52 = cast(%var_6862, dtype="uint8") /* ty=Tensor[(13, 13, 2), uint8] */;
  subtract(%51, %52) /* ty=Tensor[(13, 13, 2), uint8] */
}

def @func_14993() -> Tensor[(13, 13, ?), bool] {
  @func_9539() /* ty=Tensor[(13, 13, ?), bool] */
}

def @func_4528() -> (Tensor[(13, 13, ?), bool],) {
  %53 = @func_2544() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool]) */;
  %54 = %53.2;
  (%54,)
}

def @func_11099() -> (Tensor[(13, 13, ?), bool],) {
  %55 = @func_2376() /* ty=Tensor[(13, 13, ?), bool] */;
  (%55,)
}

def @func_5958(%var_5947: Tensor[(3, 9, 6), float64], %var_5948: Tensor[(3, 9, 6), float64]) -> (Tensor[(3, 9, 6), float64],) {
  %56 = cast(%var_5948, dtype="float64") /* ty=Tensor[(3, 9, 6), float64] */;
  %57 = shape_of(%var_5947, dtype="int32") /* ty=Tensor[(3), int32] */;
  %58 = cast(%var_5947, dtype="float64") /* ty=Tensor[(3, 9, 6), float64] */;
  %59 = dyn.reshape(%56, %57, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %60 = floor_divide(%58, %59) /* ty=Tensor[(3, 9, 6), float64] */;
  (%60,)
}

def @func_8329(%var_8292: Tensor[(1690), float32], %var_8299: Tensor[(1690), float32]) -> (Tensor[(13, 13, ?), int8], Tensor[(13, 13, ?), bool], Tensor[(1690), float64], Tensor[(1690), bool]) {
  %61 = cast(%var_8292, dtype="float32") /* ty=Tensor[(1690), float32] */;
  %62 = reshape(%61, newshape=[1690]) /* ty=Tensor[(1690), float32] */;
  %63 = @func_7767(%62) /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(1690), float32]) */;
  %64 = cast(%var_8299, dtype="int32") /* ty=Tensor[(1690), int32] */;
  %65 = shape_of(%var_8292, dtype="int32") /* ty=Tensor[(1), int32] */;
  %66 = cast(%var_8292, dtype="int32") /* ty=Tensor[(1690), int32] */;
  %67 = dyn.reshape(%64, %65, newshape=[]) /* ty=Tensor[(?), int32] */;
  %68 = left_shift(%66, %67) /* ty=Tensor[(1690), int32] */;
  %69 = cast(%68, dtype="float64") /* ty=Tensor[(1690), float64] */;
  %70 = atan(%69) /* ty=Tensor[(1690), float64] */;
  %71 = cast(%68, dtype="float64") /* ty=Tensor[(1690), float64] */;
  %72 = shape_of(%70, dtype="int32") /* ty=Tensor[(1), int32] */;
  %73 = cast(%70, dtype="float64") /* ty=Tensor[(1690), float64] */;
  %74 = dyn.reshape(%71, %72, newshape=[]) /* ty=Tensor[(?), float64] */;
  %75 = cast(%var_8292, dtype="int64") /* ty=Tensor[(1690), int64] */;
  %76 = shape_of(%70, dtype="int32") /* ty=Tensor[(1), int32] */;
  %77 = cast(%70, dtype="int64") /* ty=Tensor[(1690), int64] */;
  %78 = dyn.reshape(%75, %76, newshape=[]) /* ty=Tensor[(?), int64] */;
  %79 = maximum(%77, %78) /* ty=Tensor[(1690), int64] */;
  %80 = cast(%79, dtype="bool") /* ty=Tensor[(1690), bool] */;
  %81 = shape_of(%70, dtype="int32") /* ty=Tensor[(1), int32] */;
  %82 = cast(%70, dtype="bool") /* ty=Tensor[(1690), bool] */;
  %83 = dyn.reshape(%80, %81, newshape=[]) /* ty=Tensor[(?), bool] */;
  %84 = @func_2623() /* ty=Tensor[(13, 13, ?), int8] */;
  %85 = %63.0;
  %86 = mod(%73, %74) /* ty=Tensor[(1690), float64] */;
  %87 = greater_equal(%82, %83) /* ty=Tensor[(1690), bool] */;
  (%84, %85, %86, %87)
}

def @func_8894(%var_8889: Tensor[(7, 9, 8), int32]) -> (Tensor[(7, 9, 8), int32],) {
  %88 = cast(%var_8889, dtype="int32") /* ty=Tensor[(7, 9, 8), int32] */;
  %89 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(7, 9, 8), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %90 = cast(meta[relay.Constant][3] /* ty=Tensor[(7, 9, 8), int32] */, dtype="int32") /* ty=Tensor[(7, 9, 8), int32] */;
  %91 = dyn.reshape(%88, %89, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %92 = bitwise_xor(%90, %91) /* ty=Tensor[(7, 9, 8), int32] */;
  (%92,)
}

def @func_4199(%var_4194: Tensor[(7), float32]) -> (Tensor[(13, 13, ?), float64], Tensor[(1, 1, 7), float32], Tensor[(7), float32], Tensor[(13, 13, ?), bool]) {
  %93 = cast(%var_4194, dtype="float32") /* ty=Tensor[(7), float32] */;
  %94 = reshape(%93, newshape=[1, 1, 7]) /* ty=Tensor[(1, 1, 7), float32] */;
  %95 = @func_3073() /* ty=(Tensor[(13, 13, ?), int8], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %96 = @func_3208() /* ty=Tensor[(13, 13, ?), float64] */;
  %97 = @func_3417(%94) /* ty=Tensor[(1, 1, 7), float32] */;
  %98 = %95.2;
  (%96, %97, %var_4194, %98)
}

def @func_4672() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %99 = @func_1464() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %100 = @func_3767() /* ty=Tensor[(13, 13, ?), bool] */;
  %101 = %99.1;
  (%100, %101)
}

def @func_6417(%var_6373: uint8, %var_6374: Tensor[(8, 8, 1), uint8]) -> (Tensor[(8, 8, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(8, 8, 1), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), uint32]) {
  %102 = cast(%var_6373, dtype="bool") /* ty=bool */;
  %103 = cast(%var_6374, dtype="bool") /* ty=Tensor[(8, 8, 1), bool] */;
  %104 = less_equal(%102, %103) /* ty=Tensor[(8, 8, 1), bool] */;
  %105 = cast(%var_6373, dtype="float64") /* ty=float64 */;
  %106 = cast(%104, dtype="float64") /* ty=Tensor[(8, 8, 1), float64] */;
  %107 = @func_5119() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float64]) */;
  %108 = cast(%var_6373, dtype="bool") /* ty=bool */;
  %109 = cast(%var_6374, dtype="bool") /* ty=Tensor[(8, 8, 1), bool] */;
  %110 = %107.1;
  %111 = cast(%110, dtype="bool") /* ty=Tensor[(13, 13, ?), bool] */;
  %112 = reshape(%111, newshape=[13, 13, 1]) /* ty=Tensor[(13, 13, 1), bool] */;
  %113 = @func_985(%112) /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float64]) */;
  %114 = @func_1414() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), uint32]) */;
  %115 = divide(%105, %106) /* ty=Tensor[(8, 8, 1), float64] */;
  %116 = greater_equal(%108, %109) /* ty=Tensor[(8, 8, 1), bool] */;
  %117 = %113.0;
  %118 = %114.1;
  (%115, %110, %116, %117, %118)
}

def @func_9820() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %119 = @func_1888() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %120 = @func_820() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %121 = %119.0;
  %122 = %120.0;
  (%121, %122)
}

def @func_1759() -> (Tensor[(13, 13, ?), float32], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %123 = @func_780() /* ty=(Tensor[(13, 13, ?), float32],) */;
  %124 = @func_725() /* ty=(Tensor[(13, 13, 1), float64],) */;
  %125 = @func_820() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %126 = @func_1167() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %127 = @func_610() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %128 = %123.0;
  %129 = %124.0;
  %130 = %125.0;
  %131 = %126.0;
  %132 = %127.0;
  (%128, %129, %130, %131, %132)
}

def @func_9997() -> Tensor[(13, 13, ?), bool] {
  %133 = @func_1518() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %133.1
}

def @func_12670() -> (Tensor[(11, 15, 8), float64],) {
  %134 = cast(meta[relay.Constant][4] /* ty=Tensor[(11, 15, 8), float64] */, dtype="float64") /* ty=Tensor[(11, 15, 8), float64] */;
  %135 = asin(%134) /* ty=Tensor[(11, 15, 8), float64] */;
  (%135,)
}

def @func_4333() -> Tensor[(13, 13, ?), bool] {
  %136 = @func_2952() /* ty=(Tensor[(13, 13, ?), int8], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %136.1
}

def @func_13489() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool]) {
  %137 = @func_8696() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %138 = @func_10428() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(1690), float32]) */;
  %139 = %137.0;
  %140 = %138.1;
  %141 = @func_6847() /* ty=Tensor[(13, 13, ?), bool] */;
  (%139, %140, %141)
}

def @func_9251() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %142 = @func_5637() /* ty=(Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool]) */;
  %143 = @func_4964() /* ty=(Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), uint8]) */;
  %144 = %142.1;
  %145 = %143.1;
  (%144, %145)
}

def @func_1037() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %146 = @func_531() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %147 = @func_531() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %148 = %146.0;
  %149 = %147.0;
  (%148, %149)
}

def @func_7120() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 10), bool], Tensor[(13, 13, 1), float64]) {
  %150 = @func_1414() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), uint32]) */;
  %151 = @func_4610() /* ty=(Tensor[(13, 13, 2), float64], Tensor[(13, 13, 10), bool], Tensor[(13, 13, 2), float64]) */;
  %152 = @func_468() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64]) */;
  %153 = %150.0;
  %154 = @func_4015() /* ty=Tensor[(13, 13, ?), bool] */;
  %155 = %151.1;
  %156 = %152.1;
  (%153, %154, %155, %156)
}

def @func_3746() -> (Tensor[(13, 13, 2), float64],) {
  %157 = @func_3103() /* ty=(Tensor[(13, 13, 2), float64],) */;
  %158 = %157.0;
  (%158,)
}

def @func_2646() -> (Tensor[(13, 13, ?), bool],) {
  %159 = @func_2376() /* ty=Tensor[(13, 13, ?), bool] */;
  (%159,)
}

def @func_15864() -> (Tensor[(13, 13, ?), float64],) {
  %160 = @func_5119() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float64]) */;
  %161 = %160.2;
  (%161,)
}

def @func_14952() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %162 = @func_5486() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %163 = %162.2;
  %164 = @func_2110() /* ty=Tensor[(13, 13, ?), bool] */;
  (%163, %164)
}

def @func_14857() -> (Tensor[(13, 13, ?), uint32],) {
  %165 = @func_14375() /* ty=Tensor[(13, 13, ?), uint32] */;
  (%165,)
}

def @func_14460() -> (Tensor[(13, 13, ?), float32],) {
  %166 = @func_3712() /* ty=(Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool]) */;
  %167 = %166.1;
  (%167,)
}

def @func_7040() -> (Tensor[(13, 13, ?), bool], Tensor[(4, 1, 15), float32]) {
  %168 = @func_4731() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 15), uint64], Tensor[(4, 1, 15), float32], Tensor[(2535), float32], Tensor[(13, 13, ?), bool]) */;
  %169 = @func_3430() /* ty=Tensor[(13, 13, ?), bool] */;
  %170 = %168.3;
  (%169, %170)
}

def @func_3794() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %171 = @func_547() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %172 = %171.0;
  %173 = @func_3767() /* ty=Tensor[(13, 13, ?), bool] */;
  (%172, %173)
}

def @func_1662() -> (Tensor[(13, 13, 1), float64], Tensor[(13, 13, 1), float64]) {
  %174 = @func_468() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64]) */;
  %175 = @func_468() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64]) */;
  %176 = %174.1;
  %177 = %175.1;
  (%176, %177)
}

def @func_820() -> (Tensor[(13, 13, ?), bool],) {
  %178 = @func_610() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %179 = %178.1;
  (%179,)
}

def @func_10999(%var_10986: Tensor[(13, 13, 11), float32]) -> (Tensor[(13, 13, 11), bool],) {
  %180 = @func_1142() /* ty=(Tensor[(13, 13, ?), float32],) */;
  %181 = %180.0;
  %182 = cast(%181, dtype="bool") /* ty=Tensor[(13, 13, ?), bool] */;
  %183 = cast(%var_10986, dtype="bool") /* ty=Tensor[(13, 13, 11), bool] */;
  %184 = not_equal(%182, %183) /* ty=Tensor[(13, 13, 11), bool] */;
  (%184,)
}

def @func_6595() -> Tensor[(13, 13, ?), bool] {
  %185 = @func_5486() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %185.1
}

def @func_15831() -> (Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %186 = @func_8503() /* ty=(Tensor[(13, 13, ?), float32],) */;
  %187 = @func_15314() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), uint32]) */;
  %188 = @func_6096() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %189 = %186.0;
  %190 = %187.2;
  %191 = %188.1;
  (%189, %190, %191)
}

def @func_16533() -> Tensor[(13, 13, ?), float64] {
  %192 = @func_8882() /* ty=(Tensor[(13, 13, ?), float64], Tensor[(13, 13, ?), bool]) */;
  %192.0
}

def @func_9586(%var_9569: Tensor[(13, 8, 11), float64]) -> (Tensor[(13, 8, 11), bool], Tensor[(13, 13, ?), bool]) {
  %193 = cast(%var_9569, dtype="bool") /* ty=Tensor[(13, 8, 11), bool] */;
  %194 = shape_of(meta[relay.Constant][5] /* ty=Tensor[(13, 8, 11), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %195 = cast(meta[relay.Constant][5] /* ty=Tensor[(13, 8, 11), float64] */, dtype="bool") /* ty=Tensor[(13, 8, 11), bool] */;
  %196 = dyn.reshape(%193, %194, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %197 = @func_531() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %198 = equal(%195, %196) /* ty=Tensor[(13, 8, 11), bool] */;
  %199 = %197.0;
  (%198, %199)
}

def @func_10174() -> (Tensor[(13, 13, ?), bool],) {
  %200 = @func_3858() /* ty=Tensor[(13, 13, ?), bool] */;
  (%200,)
}

def @func_15314() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), uint32]) {
  %201 = @func_1414() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), uint32]) */;
  %202 = @func_4333() /* ty=Tensor[(13, 13, ?), bool] */;
  %203 = @func_9074() /* ty=Tensor[(13, 13, ?), bool] */;
  %204 = @func_7692() /* ty=Tensor[(13, 13, ?), bool] */;
  %205 = %201.1;
  (%202, %203, %204, %205)
}

def @func_15391() -> (Tensor[(13, 13, 1), float64],) {
  %206 = @func_3712() /* ty=(Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool]) */;
  %207 = %206.0;
  (%207,)
}

def @func_16107() -> (Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), float32]) {
  %208 = @func_13489() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool]) */;
  %209 = @func_5688() /* ty=Tensor[(13, 13, ?), float32] */;
  %210 = %208.1;
  (%209, %210)
}

def @func_10915(%var_10894: Tensor[(3, 6, 15), bool], %var_10895: Tensor[(3, 6, 15), bool]) -> (Tensor[(3, 6, 15), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %211 = cast(%var_10895, dtype="bool") /* ty=Tensor[(3, 6, 15), bool] */;
  %212 = shape_of(%var_10894, dtype="int32") /* ty=Tensor[(3), int32] */;
  %213 = cast(%var_10894, dtype="bool") /* ty=Tensor[(3, 6, 15), bool] */;
  %214 = dyn.reshape(%211, %212, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %215 = @func_4672() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %216 = @func_6034() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 10), bool]) */;
  %217 = logical_and(%213, %214) /* ty=Tensor[(3, 6, 15), bool] */;
  %218 = %215.0;
  %219 = %216.1;
  (%217, %218, %219)
}

def @func_10870() -> Tensor[(13, 13, ?), bool] {
  @func_10017() /* ty=Tensor[(13, 13, ?), bool] */
}

def @func_3417(%var_3406: Tensor[(1, 1, 7), float32]) -> Tensor[(1, 1, 7), float32] {
  %220 = cast(%var_3406, dtype="float32") /* ty=Tensor[(1, 1, 7), float32] */;
  sigmoid(%220) /* ty=Tensor[(1, 1, 7), float32] */
}

def @func_8597() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %221 = @func_7040() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(4, 1, 15), float32]) */;
  %222 = @func_7692() /* ty=Tensor[(13, 13, ?), bool] */;
  %223 = %221.0;
  (%222, %223)
}

def @func_9539() -> Tensor[(13, 13, ?), bool] {
  @func_9363() /* ty=Tensor[(13, 13, ?), bool] */
}

def @func_12895(%var_12876: int8) -> (Tensor[(13, 13, ?), float64], Tensor[(4, 10, 1), int8], int8, Tensor[(40), int8], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32]) {
  %224 = cast(%var_12876, dtype="int8") /* ty=int8 */;
  %225 = cast(meta[relay.Constant][6] /* ty=Tensor[(40), int8] */, dtype="int8") /* ty=Tensor[(40), int8] */;
  %226 = reshape(%224, newshape=[]) /* ty=int8 */;
  %227 = reshape(%225, newshape=[4, 10, 1]) /* ty=Tensor[(4, 10, 1), int8] */;
  %228 = @func_10950(%226, %227) /* ty=(Tensor[(4, 10, 1), int8],) */;
  %229 = @func_3208() /* ty=Tensor[(13, 13, ?), float64] */;
  %230 = cast(%229, dtype="bool") /* ty=Tensor[(13, 13, ?), bool] */;
  %231 = reshape(%230, newshape=[13, 13, 1]) /* ty=Tensor[(13, 13, 1), bool] */;
  %232 = @func_8503() /* ty=(Tensor[(13, 13, ?), float32],) */;
  %233 = %228.0;
  %234 = @func_7980(%231) /* ty=Tensor[(13, 13, ?), bool] */;
  %235 = %232.0;
  (%229, %233, %var_12876, meta[relay.Constant][6] /* ty=Tensor[(40), int8] */, %234, %235)
}

def @func_9016() -> (Tensor[(13, 13, 7), bool],) {
  %236 = @func_8503() /* ty=(Tensor[(13, 13, ?), float32],) */;
  %237 = %236.0;
  %238 = @func_4528() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %239 = %238.0;
  %240 = cast(%239, dtype="int64") /* ty=Tensor[(13, 13, ?), int64] */;
  %241 = cast(meta[relay.Constant][7] /* ty=Tensor[(13, 13, 7), bool] */, dtype="int64") /* ty=Tensor[(13, 13, 7), int64] */;
  %242 = right_shift(%240, %241) /* ty=Tensor[(13, 13, 7), int64] */;
  %243 = cast(%237, dtype="bool") /* ty=Tensor[(13, 13, ?), bool] */;
  %244 = cast(%242, dtype="bool") /* ty=Tensor[(13, 13, 7), bool] */;
  %245 = greater(%243, %244) /* ty=Tensor[(13, 13, 7), bool] */;
  (%245,)
}

def @func_3712() -> (Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool]) {
  %246 = @func_510() /* ty=(Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool]) */;
  %247 = @func_780() /* ty=(Tensor[(13, 13, ?), float32],) */;
  %248 = @func_1947() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %249 = %246.0;
  %250 = %247.0;
  %251 = %248.0;
  (%249, %250, %251)
}

def @func_17295() -> (Tensor[(1690), float32],) {
  %252 = @func_10054() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(1690), float32]) */;
  %253 = %252.2;
  (%253,)
}

def @func_15441() -> (Tensor[(13, 13, ?), bool],) {
  %254 = @func_10428() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(1690), float32]) */;
  %255 = %254.4;
  (%255,)
}

def @func_9074() -> Tensor[(13, 13, ?), bool] {
  %256 = @func_1888() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %256.0
}

def @func_3208() -> Tensor[(13, 13, ?), float64] {
  %257 = @func_2478() /* ty=Tensor[(13, 13, ?), bool] */;
  %258 = cast(%257, dtype="float64") /* ty=Tensor[(13, 13, ?), float64] */;
  acos(%258) /* ty=Tensor[(13, 13, ?), float64] */
}

def @func_2363(%var_2358: Tensor[(13, 13, 10), float32]) -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, 10), int64]) {
  %259 = @func_610() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %260 = @func_780() /* ty=(Tensor[(13, 13, ?), float32],) */;
  %261 = %260.0;
  %262 = cast(%261, dtype="int64") /* ty=Tensor[(13, 13, ?), int64] */;
  %263 = cast(%var_2358, dtype="int64") /* ty=Tensor[(13, 13, 10), int64] */;
  %264 = %259.0;
  %265 = right_shift(%262, %263) /* ty=Tensor[(13, 13, 10), int64] */;
  (%264, %265)
}

def @func_14630() -> Tensor[(13, 13, ?), bool] {
  %266 = @func_14587() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %266.0
}

def @func_15186() -> Tensor[(4, 1, 15), float32] {
  %267 = @func_7040() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(4, 1, 15), float32]) */;
  %267.1
}

def @func_13980() -> (Tensor[(13, 13, ?), bool],) {
  %268 = @func_1037() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %269 = %268.1;
  (%269,)
}

def @func_10507() -> (Tensor[(13, 13, ?), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool]) {
  %270 = @func_9856() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float64]) */;
  %271 = @func_1947() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %272 = @func_8838() /* ty=(Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool]) */;
  %273 = %271.0;
  %274 = cast(%273, dtype="bool") /* ty=Tensor[(13, 13, ?), bool] */;
  %275 = reshape(%274, newshape=[13, 13, 1]) /* ty=Tensor[(13, 13, 1), bool] */;
  %276 = %270.1;
  %277 = %272.0;
  %278 = @func_7980(%275) /* ty=Tensor[(13, 13, ?), bool] */;
  (%276, %273, %277, %278)
}

def @func_11792(%var_11774: Tensor[(286, 4), float64]) -> (Tensor[(13, 13, ?), bool], Tensor[(13, 8, 11), bool], Tensor[(286, 4), float64]) {
  %279 = @func_8696() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %280 = cast(%var_11774, dtype="float64") /* ty=Tensor[(286, 4), float64] */;
  %281 = reshape(%280, newshape=[13, 8, 11]) /* ty=Tensor[(13, 8, 11), float64] */;
  %282 = @func_9586(%281) /* ty=(Tensor[(13, 8, 11), bool], Tensor[(13, 13, ?), bool]) */;
  %283 = %279.0;
  %284 = %282.0;
  (%283, %284, %var_11774)
}

def @func_7767(%var_7756: Tensor[(1690), float32]) -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(1690), float32]) {
  %285 = @func_3525() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %286 = @func_4466() /* ty=(Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), float32]) */;
  %287 = cast(%var_7756, dtype="float32") /* ty=Tensor[(1690), float32] */;
  %288 = reshape(%287, newshape=[13, 13, 10]) /* ty=Tensor[(13, 13, 10), float32] */;
  %289 = @func_2363(%288) /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 10), int64]) */;
  %290 = %285.0;
  %291 = %286.0;
  %292 = %289.0;
  (%290, %291, %292, %var_7756)
}

def @func_10301() -> Tensor[(13, 13, 15), bool] {
  %293 = @func_2646() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %294 = %293.0;
  %295 = cast(%294, dtype="bool") /* ty=Tensor[(13, 13, ?), bool] */;
  %296 = cast(meta[relay.Constant][8] /* ty=Tensor[(13, 13, 15), bool] */, dtype="bool") /* ty=Tensor[(13, 13, 15), bool] */;
  logical_and(%295, %296) /* ty=Tensor[(13, 13, 15), bool] */
}

def @func_13301() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 2), float64]) {
  %297 = @func_2169() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %298 = @func_468() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64]) */;
  %299 = %297.0;
  %300 = %298.0;
  %301 = @func_6795() /* ty=Tensor[(13, 13, 2), float64] */;
  (%299, %300, %301)
}

def @func_12199() -> Tensor[(13, 13, ?), bool] {
  @func_9539() /* ty=Tensor[(13, 13, ?), bool] */
}

def @func_17388() -> Tensor[(13, 13, ?), float64] {
  %302 = @func_16387() /* ty=(Tensor[(13, 13, ?), float64],) */;
  %302.0
}

def @func_6578() -> Tensor[(13, 13, ?), float64] {
  @func_3208() /* ty=Tensor[(13, 13, ?), float64] */
}

def @func_8433(%var_8403: Tensor[(10, 8, 1), float64]) -> (Tensor[(10, 8, ?), bool],) {
  %303 = cast(%var_8403, dtype="float64") /* ty=Tensor[(10, 8, 1), float64] */;
  %304 = exp(%303) /* ty=Tensor[(10, 8, 1), float64] */;
  %305 = cast(%var_8403, dtype="bool") /* ty=Tensor[(10, 8, 1), bool] */;
  %306 = shape_of(%304, dtype="int32") /* ty=Tensor[(3), int32] */;
  %307 = cast(%304, dtype="bool") /* ty=Tensor[(10, 8, 1), bool] */;
  %308 = dyn.reshape(%305, %306, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %309 = logical_and(%307, %308) /* ty=Tensor[(10, 8, ?), bool] */;
  (%309,)
}

def @func_2952() -> (Tensor[(13, 13, ?), int8], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %310 = @func_610() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %311 = %310.0;
  %312 = @func_2646() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %313 = %312.0;
  %314 = cast(%313, dtype="int64") /* ty=Tensor[(13, 13, ?), int64] */;
  %315 = shape_of(%311, dtype="int32") /* ty=Tensor[(3), int32] */;
  %316 = cast(%311, dtype="int64") /* ty=Tensor[(13, 13, ?), int64] */;
  %317 = dyn.reshape(%314, %315, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %318 = add(%316, %317) /* ty=Tensor[(13, 13, ?), int64] */;
  %319 = cast(%318, dtype="int8") /* ty=Tensor[(13, 13, ?), int8] */;
  %320 = shape_of(%311, dtype="int32") /* ty=Tensor[(3), int32] */;
  %321 = cast(%311, dtype="int8") /* ty=Tensor[(13, 13, ?), int8] */;
  %322 = dyn.reshape(%319, %320, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %323 = @func_1986() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %324 = subtract(%321, %322) /* ty=Tensor[(13, 13, ?), int8] */;
  %325 = %323.0;
  %326 = @func_2110() /* ty=Tensor[(13, 13, ?), bool] */;
  (%324, %325, %326)
}

def @func_17408() -> Tensor[(13, 13, 1), float64] {
  %327 = @func_14726() /* ty=(Tensor[(8, 16, 12), float64], Tensor[(13, 13, 1), float64]) */;
  %327.1
}

def @func_12715() -> Tensor[(13, 13, ?), uint32] {
  %328 = @func_6002() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), uint32]) */;
  %328.1
}

def @func_16590() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %329 = @func_4878() /* ty=(Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %330 = %329.2;
  %331 = @func_16031() /* ty=Tensor[(13, 13, ?), bool] */;
  %332 = @func_5735() /* ty=Tensor[(13, 13, ?), bool] */;
  %333 = @func_5735() /* ty=Tensor[(13, 13, ?), bool] */;
  (%330, %331, %332, %333)
}

def @func_16959() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(2028), float64], Tensor[(13, 13, 10), bool]) {
  %334 = @func_8087() /* ty=(Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool]) */;
  %335 = cast(meta[relay.Constant][9] /* ty=Tensor[(2028), float64] */, dtype="float64") /* ty=Tensor[(2028), float64] */;
  %336 = reshape(%335, newshape=[2028]) /* ty=Tensor[(2028), float64] */;
  %337 = @func_9933(%336) /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 12), bool], Tensor[(2028), float64], Tensor[(13, 13, ?), bool]) */;
  %338 = @func_4351() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 10), bool], Tensor[(1690), float64]) */;
  %339 = @func_9997() /* ty=Tensor[(13, 13, ?), bool] */;
  %340 = %334.1;
  %341 = %337.0;
  %342 = %338.2;
  (%339, %340, %341, meta[relay.Constant][9] /* ty=Tensor[(2028), float64] */, %342)
}

def @func_12838() -> (Tensor[(13, 13, ?), bool],) {
  %343 = @func_1759() /* ty=(Tensor[(13, 13, ?), float32], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %344 = %343.3;
  (%344,)
}

def @func_16026() -> (Tensor[(13, 13, ?), bool],) {
  %345 = @func_820() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %346 = %345.0;
  (%346,)
}

def @func_15579() -> (Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool]) {
  %347 = @func_1587() /* ty=(Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %348 = @func_3794() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %349 = %347.2;
  %350 = %348.0;
  (%349, %350)
}

def @func_15812(%var_15804: Tensor[(7), float32]) -> (Tensor[(13, 13, ?), float32], Tensor[(7), float32], Tensor[(7), float32]) {
  %351 = cast(%var_15804, dtype="float32") /* ty=Tensor[(7), float32] */;
  %352 = reshape(%351, newshape=[7]) /* ty=Tensor[(7), float32] */;
  %353 = @func_13267(%352) /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float64], Tensor[(7), float32], Tensor[(13, 13, 10), float32]) */;
  %354 = @func_7498() /* ty=Tensor[(13, 13, ?), float32] */;
  %355 = %353.2;
  (%354, %355, %var_15804)
}

def @func_14196() -> (Tensor[(13, 13, ?), bool], Tensor[(7), float32], Tensor[(1, 7), float32], Tensor[(13, 13, ?), bool]) {
  %356 = @func_13005() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %357 = cast(meta[relay.Constant][10] /* ty=Tensor[(1, 7), float32] */, dtype="float32") /* ty=Tensor[(1, 7), float32] */;
  %358 = reshape(%357, newshape=[7]) /* ty=Tensor[(7), float32] */;
  %359 = @func_6135(%358) /* ty=(Tensor[(13, 13, 2), float64], Tensor[(13, 13, ?), float64], Tensor[(7), float32]) */;
  %360 = @func_10054() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(1690), float32]) */;
  %361 = %356.0;
  %362 = %359.2;
  %363 = %360.0;
  (%361, %362, meta[relay.Constant][10] /* ty=Tensor[(1, 7), float32] */, %363)
}

def @func_11956(%var_11943: uint8) -> (Tensor[(13, 13, ?), uint32], uint8, Tensor[(13, 13, ?), float32], Tensor[(13, 13, 64), uint32]) {
  %364 = cast(%var_11943, dtype="uint8") /* ty=uint8 */;
  %365 = cast(meta[relay.Constant][11] /* ty=Tensor[(64), uint8] */, dtype="uint8") /* ty=Tensor[(64), uint8] */;
  %366 = reshape(%364, newshape=[]) /* ty=uint8 */;
  %367 = reshape(%365, newshape=[8, 8, 1]) /* ty=Tensor[(8, 8, 1), uint8] */;
  %368 = @func_6417(%366, %367) /* ty=(Tensor[(8, 8, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(8, 8, 1), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), uint32]) */;
  %369 = @func_1247() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), uint32], Tensor[(13, 13, ?), bool]) */;
  %370 = @func_10530() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %371 = %370.0;
  %372 = cast(%371, dtype="uint32") /* ty=Tensor[(13, 13, ?), uint32] */;
  %373 = cast(meta[relay.Constant][11] /* ty=Tensor[(64), uint8] */, dtype="uint32") /* ty=Tensor[(64), uint32] */;
  %374 = %368.4;
  %375 = %369.1;
  %376 = bitwise_and(%372, %373) /* ty=Tensor[(13, 13, 64), uint32] */;
  (%374, %var_11943, %375, %376)
}

def @func_14726() -> (Tensor[(8, 16, 12), float64], Tensor[(13, 13, 1), float64]) {
  %377 = cast(meta[relay.Constant][12] /* ty=Tensor[(8, 16, 12), float64] */, dtype="float64") /* ty=Tensor[(8, 16, 12), float64] */;
  %378 = @func_1662() /* ty=(Tensor[(13, 13, 1), float64], Tensor[(13, 13, 1), float64]) */;
  %379 = rsqrt(%377) /* ty=Tensor[(8, 16, 12), float64] */;
  %380 = %378.1;
  (%379, %380)
}

def @func_6002() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), uint32]) {
  %381 = @func_4878() /* ty=(Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %382 = %381.3;
  %383 = cast(%382, dtype="bool") /* ty=Tensor[(13, 13, ?), bool] */;
  %384 = reshape(%383, newshape=[13, 13, 1]) /* ty=Tensor[(13, 13, 1), bool] */;
  %385 = @func_904(%384) /* ty=(Tensor[(13, 13, ?), uint32], Tensor[(13, 13, 1), float64], Tensor[(13, 13, 1), float64], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %386 = %385.0;
  (%382, %386)
}

def @func_9761() -> (Tensor[(13, 13, ?), bool],) {
  %387 = @func_6063() /* ty=Tensor[(13, 13, ?), bool] */;
  (%387,)
}

def @func_4610() -> (Tensor[(13, 13, 2), float64], Tensor[(13, 13, 10), bool], Tensor[(13, 13, 2), float64]) {
  %388 = @func_3746() /* ty=(Tensor[(13, 13, 2), float64],) */;
  %389 = @func_4351() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 10), bool], Tensor[(1690), float64]) */;
  %390 = @func_3746() /* ty=(Tensor[(13, 13, 2), float64],) */;
  %391 = %388.0;
  %392 = %389.2;
  %393 = %390.0;
  (%391, %392, %393)
}

def @func_16710() -> (Tensor[(13, 13, ?), bool],) {
  %394 = @func_11334() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %395 = %394.0;
  (%395,)
}

def @func_14587() -> (Tensor[(13, 13, ?), bool],) {
  %396 = @func_2478() /* ty=Tensor[(13, 13, ?), bool] */;
  (%396,)
}

def @func_15362(%var_15351: Tensor[(3, 12, 11), float32]) -> (Tensor[(3, 12, 11), float32], Tensor[(3, 12, 11), float32]) {
  %397 = cast(%var_15351, dtype="float32") /* ty=Tensor[(3, 12, 11), float32] */;
  %398 = cast(%var_15351, dtype="float32") /* ty=Tensor[(3, 12, 11), float32] */;
  %399 = log(%397) /* ty=Tensor[(3, 12, 11), float32] */;
  %400 = exp(%398) /* ty=Tensor[(3, 12, 11), float32] */;
  (%399, %400)
}

def @func_4640() -> Tensor[(13, 13, 1), float64] {
  %401 = @func_2544() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool]) */;
  %401.1
}

def @func_8696() -> (Tensor[(13, 13, ?), bool],) {
  %402 = @func_2376() /* ty=Tensor[(13, 13, ?), bool] */;
  (%402,)
}

def @func_14531(%var_14513: Tensor[(1690), float32]) -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 130), uint8], Tensor[(1690), float32]) {
  %403 = @func_2110() /* ty=Tensor[(13, 13, ?), bool] */;
  %404 = cast(%403, dtype="bool") /* ty=Tensor[(13, 13, ?), bool] */;
  %405 = reshape(%404, newshape=[13, 13, 1]) /* ty=Tensor[(13, 13, 1), bool] */;
  %406 = @func_14035(%405) /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32]) */;
  %407 = @func_13027() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %408 = @func_6096() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %409 = cast(%var_14513, dtype="float32") /* ty=Tensor[(1690), float32] */;
  %410 = reshape(%409, newshape=[13, 130]) /* ty=Tensor[(13, 130), float32] */;
  %411 = %406.1;
  %412 = %407.0;
  %413 = %408.1;
  %414 = @func_11373(%410) /* ty=Tensor[(13, 130), uint8] */;
  (%403, %411, %412, %413, %414, %var_14513)
}

def @func_6250(%var_6200: Tensor[(9, 10, 8), uint16]) -> (Tensor[(9, 10, 8), uint16], Tensor[(9, 10, 8), float32], Tensor[(13, 13, ?), bool]) {
  %415 = cast(%var_6200, dtype="uint16") /* ty=Tensor[(9, 10, 8), uint16] */;
  %416 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(9, 10, 8), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %417 = cast(meta[relay.Constant][13] /* ty=Tensor[(9, 10, 8), uint16] */, dtype="uint16") /* ty=Tensor[(9, 10, 8), uint16] */;
  %418 = dyn.reshape(%415, %416, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %419 = cast(%var_6200, dtype="float32") /* ty=Tensor[(9, 10, 8), float32] */;
  %420 = @func_2544() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool]) */;
  %421 = right_shift(%417, %418) /* ty=Tensor[(9, 10, 8), uint16] */;
  %422 = log10(%419) /* ty=Tensor[(9, 10, 8), float32] */;
  %423 = %420.2;
  (%421, %422, %423)
}

def @func_12362() -> (Tensor[(13, 13, ?), uint32], Tensor[(13, 13, 1), float64]) {
  %424 = @func_4432() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %425 = %424.0;
  %426 = @func_2169() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %427 = %426.0;
  %428 = cast(%427, dtype="uint32") /* ty=Tensor[(13, 13, ?), uint32] */;
  %429 = shape_of(%425, dtype="int32") /* ty=Tensor[(3), int32] */;
  %430 = cast(%425, dtype="uint32") /* ty=Tensor[(13, 13, ?), uint32] */;
  %431 = dyn.reshape(%428, %429, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %432 = cast(%425, dtype="bool") /* ty=Tensor[(13, 13, ?), bool] */;
  %433 = reshape(%432, newshape=[13, 13, 1]) /* ty=Tensor[(13, 13, 1), bool] */;
  %434 = @func_904(%433) /* ty=(Tensor[(13, 13, ?), uint32], Tensor[(13, 13, 1), float64], Tensor[(13, 13, 1), float64], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %435 = right_shift(%430, %431) /* ty=Tensor[(13, 13, ?), uint32] */;
  %436 = %434.2;
  (%435, %436)
}

def @func_510() -> (Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool]) {
  %437 = @func_468() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64]) */;
  %438 = @func_468() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64]) */;
  %439 = %437.1;
  %440 = %438.0;
  (%439, %440)
}

def @func_12645() -> Tensor[(13, 13, ?), bool] {
  %441 = @func_11632() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %441.0
}

def @func_725() -> (Tensor[(13, 13, 1), float64],) {
  %442 = @func_468() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64]) */;
  %443 = %442.1;
  (%443,)
}

def @func_2478() -> Tensor[(13, 13, ?), bool] {
  %444 = @func_610() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %444.0
}

def @func_4912() -> (Tensor[(13, 13, 1), float64],) {
  %445 = @func_4466() /* ty=(Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), float32]) */;
  %446 = %445.0;
  (%446,)
}

def @func_3103() -> (Tensor[(13, 13, 2), float64],) {
  %447 = @func_2695() /* ty=(Tensor[(13, 13, 2), float64],) */;
  %448 = %447.0;
  (%448,)
}

def @func_2682(%var_2662: Tensor[(13, 13, 11), bool]) -> (Tensor[(13, 13, 11), float32], Tensor[(13, 13, 11), float32]) {
  %449 = @func_1247() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), uint32], Tensor[(13, 13, ?), bool]) */;
  %450 = %449.0;
  %451 = cast(%450, dtype="float32") /* ty=Tensor[(13, 13, ?), float32] */;
  %452 = cast(%var_2662, dtype="float32") /* ty=Tensor[(13, 13, 11), float32] */;
  %453 = cast(%var_2662, dtype="float32") /* ty=Tensor[(13, 13, 11), float32] */;
  %454 = maximum(%451, %452) /* ty=Tensor[(13, 13, 11), float32] */;
  %455 = log(%453) /* ty=Tensor[(13, 13, 11), float32] */;
  (%454, %455)
}

def @func_14336() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %456 = @func_13217() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %457 = @func_8051() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), uint32], Tensor[(13, 13, ?), bool]) */;
  %458 = @func_9051() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %459 = @func_3073() /* ty=(Tensor[(13, 13, ?), int8], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %460 = %456.1;
  %461 = %457.0;
  %462 = %458.0;
  %463 = @func_9074() /* ty=Tensor[(13, 13, ?), bool] */;
  %464 = %459.1;
  (%460, %461, %462, %463, %464)
}

def @func_13835() -> (Tensor[(13, 13, ?), bool],) {
  %465 = @func_3794() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %466 = %465.0;
  (%466,)
}

def @func_2623() -> Tensor[(13, 13, ?), int8] {
  %467 = @func_1247() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), uint32], Tensor[(13, 13, ?), bool]) */;
  %468 = %467.3;
  %469 = @func_1167() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %470 = %469.1;
  %471 = cast(%470, dtype="int8") /* ty=Tensor[(13, 13, ?), int8] */;
  %472 = shape_of(%468, dtype="int32") /* ty=Tensor[(3), int32] */;
  %473 = cast(%468, dtype="int8") /* ty=Tensor[(13, 13, ?), int8] */;
  %474 = dyn.reshape(%471, %472, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  left_shift(%473, %474) /* ty=Tensor[(13, 13, ?), int8] */
}

def @func_15208() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), uint32], uint8) {
  %475 = @func_5839() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %476 = @func_11334() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %477 = cast(meta[relay.Constant][14] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %478 = reshape(%477, newshape=[]) /* ty=uint8 */;
  %479 = @func_11956(%478) /* ty=(Tensor[(13, 13, ?), uint32], uint8, Tensor[(13, 13, ?), float32], Tensor[(13, 13, 64), uint32]) */;
  %480 = %475.0;
  %481 = %476.0;
  %482 = %479.0;
  (%480, %481, %482, meta[relay.Constant][14] /* ty=uint8 */)
}

def @func_11632() -> (Tensor[(13, 13, ?), bool],) {
  %483 = @func_1947() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %484 = %483.0;
  (%484,)
}

def @func_985(%var_962: Tensor[(13, 13, 1), bool]) -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float64]) {
  %485 = @func_468() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64]) */;
  %486 = @func_468() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64]) */;
  %487 = %486.0;
  %488 = cast(%487, dtype="float32") /* ty=Tensor[(13, 13, ?), float32] */;
  %489 = exp(%488) /* ty=Tensor[(13, 13, ?), float32] */;
  %490 = cast(%489, dtype="float32") /* ty=Tensor[(13, 13, ?), float32] */;
  %491 = asinh(%490) /* ty=Tensor[(13, 13, ?), float32] */;
  %492 = cast(%var_962, dtype="float32") /* ty=Tensor[(13, 13, 1), float32] */;
  %493 = shape_of(%487, dtype="int32") /* ty=Tensor[(3), int32] */;
  %494 = cast(%487, dtype="float32") /* ty=Tensor[(13, 13, ?), float32] */;
  %495 = dyn.reshape(%492, %493, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %496 = floor_mod(%494, %495) /* ty=Tensor[(13, 13, ?), float32] */;
  %497 = cast(%496, dtype="float64") /* ty=Tensor[(13, 13, ?), float64] */;
  %498 = shape_of(%491, dtype="int32") /* ty=Tensor[(3), int32] */;
  %499 = cast(%491, dtype="float64") /* ty=Tensor[(13, 13, ?), float64] */;
  %500 = dyn.reshape(%497, %498, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %501 = %485.0;
  %502 = power(%499, %500) /* ty=Tensor[(13, 13, ?), float64] */;
  (%501, %502)
}

def @func_5363() -> (Tensor[(13, 13, 15), uint64],) {
  %503 = @func_4731() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 15), uint64], Tensor[(4, 1, 15), float32], Tensor[(2535), float32], Tensor[(13, 13, ?), bool]) */;
  %504 = %503.2;
  (%504,)
}

def @func_9856() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float64]) {
  %505 = @func_9761() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %506 = %505.0;
  %507 = @func_6578() /* ty=Tensor[(13, 13, ?), float64] */;
  (%506, %507)
}

def @func_8394() -> (Tensor[(13, 13, 1), float64],) {
  %508 = @func_2544() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool]) */;
  %509 = %508.1;
  (%509,)
}

def @func_4381() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %510 = @func_610() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %511 = @func_1037() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %512 = %510.1;
  %513 = %511.1;
  (%512, %513)
}

def @func_3858() -> Tensor[(13, 13, ?), bool] {
  %514 = @func_1414() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), uint32]) */;
  %514.0
}

def @func_5637() -> (Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool]) {
  %515 = @func_1662() /* ty=(Tensor[(13, 13, 1), float64], Tensor[(13, 13, 1), float64]) */;
  %516 = @func_1888() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %517 = %515.1;
  %518 = %516.0;
  (%517, %518)
}

def @func_14834(%var_14830: Tensor[(1690), float64]) -> (Tensor[(13, 13, ?), int8], Tensor[(13, 13, 10), bool], Tensor[(1690), float64]) {
  %519 = @func_9663() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 2), float64], Tensor[(13, 13, ?), int8]) */;
  %520 = cast(%var_14830, dtype="float64") /* ty=Tensor[(1690), float64] */;
  %521 = reshape(%520, newshape=[13, 13, 10]) /* ty=Tensor[(13, 13, 10), float64] */;
  %522 = @func_1490(%521) /* ty=(Tensor[(13, 13, 10), bool],) */;
  %523 = %519.2;
  %524 = %522.0;
  (%523, %524, %var_14830)
}

def @func_15503() -> Tensor[(13, 13, ?), uint32] {
  %525 = @func_15208() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), uint32], uint8) */;
  %525.2
}

def @func_6700(%var_6688: Tensor[(13, 13, 12), float64]) -> Tensor[(13, 13, 12), bool] {
  %526 = @func_3208() /* ty=Tensor[(13, 13, ?), float64] */;
  %527 = cast(%526, dtype="bool") /* ty=Tensor[(13, 13, ?), bool] */;
  %528 = cast(%var_6688, dtype="bool") /* ty=Tensor[(13, 13, 12), bool] */;
  less(%527, %528) /* ty=Tensor[(13, 13, 12), bool] */
}

def @func_1464() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %529 = @func_610() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %530 = @func_820() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %531 = %529.0;
  %532 = %530.0;
  (%531, %532)
}

def @func_16933() -> (Tensor[(13, 13, ?), float32],) {
  %533 = @func_15147() /* ty=(Tensor[(13, 13, ?), float32],) */;
  %534 = %533.0;
  (%534,)
}

def @func_3525() -> (Tensor[(13, 13, ?), bool],) {
  %535 = @func_610() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %536 = %535.1;
  (%536,)
}

def @func_10335(%var_10305: bool, %var_10306: Tensor[(14, 3, 8), bool], %var_10320: Tensor[(80), float64]) -> (Tensor[(14, 3, 8), bool], Tensor[(13, 13, ?), float32], Tensor[(10, 8, ?), bool], Tensor[(80), float64], Tensor[(13, 13, ?), bool]) {
  %537 = cast(%var_10305, dtype="bool") /* ty=bool */;
  %538 = cast(%var_10306, dtype="bool") /* ty=Tensor[(14, 3, 8), bool] */;
  %539 = @func_780() /* ty=(Tensor[(13, 13, ?), float32],) */;
  %540 = cast(%var_10320, dtype="float64") /* ty=Tensor[(80), float64] */;
  %541 = reshape(%540, newshape=[10, 8, 1]) /* ty=Tensor[(10, 8, 1), float64] */;
  %542 = @func_8433(%541) /* ty=(Tensor[(10, 8, ?), bool],) */;
  %543 = @func_10174() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %544 = logical_or(%537, %538) /* ty=Tensor[(14, 3, 8), bool] */;
  %545 = %539.0;
  %546 = %542.0;
  %547 = %543.0;
  (%544, %545, %546, %var_10320, %547)
}

def @func_10530() -> (Tensor[(13, 13, ?), bool],) {
  %548 = @func_5119() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float64]) */;
  %549 = %548.0;
  (%549,)
}

def @func_531() -> (Tensor[(13, 13, ?), bool],) {
  %550 = @func_510() /* ty=(Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool]) */;
  %551 = %550.1;
  (%551,)
}

def @func_8013() -> Tensor[(13, 13, 1), float64] {
  @func_4640() /* ty=Tensor[(13, 13, 1), float64] */
}

def @func_6524() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32], Tensor[(13, 13, 1), float64]) {
  %552 = @func_2169() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %553 = @func_780() /* ty=(Tensor[(13, 13, ?), float32],) */;
  %554 = @func_510() /* ty=(Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool]) */;
  %555 = %552.0;
  %556 = @func_5735() /* ty=Tensor[(13, 13, ?), bool] */;
  %557 = %553.0;
  %558 = %554.0;
  (%555, %556, %557, %558)
}

def @func_14097() -> (Tensor[(13, 13, ?), bool],) {
  %559 = @func_11099() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %560 = %559.0;
  (%560,)
}

def @func_1247() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), uint32], Tensor[(13, 13, ?), bool]) {
  %561 = @func_468() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64]) */;
  %562 = %561.0;
  %563 = cast(%562, dtype="bool") /* ty=Tensor[(13, 13, ?), bool] */;
  %564 = reshape(%563, newshape=[13, 13, 1]) /* ty=Tensor[(13, 13, 1), bool] */;
  %565 = @func_904(%564) /* ty=(Tensor[(13, 13, ?), uint32], Tensor[(13, 13, 1), float64], Tensor[(13, 13, 1), float64], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %566 = cast(%562, dtype="float32") /* ty=Tensor[(13, 13, ?), float32] */;
  %567 = cosh(%566) /* ty=Tensor[(13, 13, ?), float32] */;
  %568 = cast(%567, dtype="bool") /* ty=Tensor[(13, 13, ?), bool] */;
  %569 = reshape(%568, newshape=[13, 13, 1]) /* ty=Tensor[(13, 13, 1), bool] */;
  %570 = @func_904(%569) /* ty=(Tensor[(13, 13, ?), uint32], Tensor[(13, 13, 1), float64], Tensor[(13, 13, 1), float64], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %571 = @func_820() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %572 = %565.5;
  %573 = %570.0;
  %574 = %571.0;
  (%572, %567, %573, %574)
}

def @func_11710(%var_11676: Tensor[(4, 6, 1), float32]) -> (Tensor[(4, 6, 1), float32], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64]) {
  %575 = cast(%var_11676, dtype="float32") /* ty=Tensor[(4, 6, 1), float32] */;
  %576 = @func_9177() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %577 = %576.0;
  %578 = cast(%577, dtype="bool") /* ty=Tensor[(13, 13, ?), bool] */;
  %579 = reshape(%578, newshape=[13, 13, 1]) /* ty=Tensor[(13, 13, 1), bool] */;
  %580 = @func_904(%579) /* ty=(Tensor[(13, 13, ?), uint32], Tensor[(13, 13, 1), float64], Tensor[(13, 13, 1), float64], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %581 = rsqrt(%575) /* ty=Tensor[(4, 6, 1), float32] */;
  %582 = %580.1;
  (%581, %577, %582)
}

def @func_2985() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), int8]) {
  %583 = @func_820() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %584 = @func_2952() /* ty=(Tensor[(13, 13, ?), int8], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %585 = %583.0;
  %586 = %584.0;
  (%585, %586)
}

def @func_4731() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 15), uint64], Tensor[(4, 1, 15), float32], Tensor[(2535), float32], Tensor[(13, 13, ?), bool]) {
  %587 = @func_547() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %588 = cast(meta[relay.Constant][15] /* ty=Tensor[(2535), bool] */, dtype="bool") /* ty=Tensor[(2535), bool] */;
  %589 = reshape(%588, newshape=[13, 13, 15]) /* ty=Tensor[(13, 13, 15), bool] */;
  %590 = @func_2035(%589) /* ty=(Tensor[(13, 13, 15), uint64],) */;
  %591 = cast(meta[relay.Constant][16] /* ty=Tensor[(4, 1, 15), float64] */, dtype="float64") /* ty=Tensor[(4, 1, 15), float64] */;
  %592 = acosh(%591) /* ty=Tensor[(4, 1, 15), float64] */;
  %593 = cast(%592, dtype="float32") /* ty=Tensor[(4, 1, 15), float32] */;
  %594 = cast(meta[relay.Constant][15] /* ty=Tensor[(2535), bool] */, dtype="float32") /* ty=Tensor[(2535), float32] */;
  %595 = @func_1986() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %596 = %587.0;
  %597 = @func_3430() /* ty=Tensor[(13, 13, ?), bool] */;
  %598 = %590.0;
  %599 = sin(%593) /* ty=Tensor[(4, 1, 15), float32] */;
  %600 = log2(%594) /* ty=Tensor[(2535), float32] */;
  %601 = %595.0;
  (%596, %597, %598, %599, %600, %601)
}

def @func_13546() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), int8], Tensor[(13, 13, ?), bool]) {
  %602 = @func_2985() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), int8]) */;
  %603 = @func_610() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %604 = @func_7457() /* ty=Tensor[(13, 13, ?), bool] */;
  %605 = %602.1;
  %606 = %603.1;
  (%604, %605, %606)
}

def @func_11334() -> (Tensor[(13, 13, ?), bool],) {
  %607 = @func_9761() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %608 = %607.0;
  (%608,)
}

def @func_6763() -> (Tensor[(13, 13, ?), float32],) {
  %609 = @func_3712() /* ty=(Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool]) */;
  %610 = %609.1;
  (%610,)
}

def @func_16137(%var_16111: Tensor[(13, 5, 6), uint64]) -> (Tensor[(13, 5, 6), uint64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %611 = cast(%var_16111, dtype="uint64") /* ty=Tensor[(13, 5, 6), uint64] */;
  %612 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(13, 5, 6), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %613 = cast(meta[relay.Constant][17] /* ty=Tensor[(13, 5, 6), uint64] */, dtype="uint64") /* ty=Tensor[(13, 5, 6), uint64] */;
  %614 = dyn.reshape(%611, %612, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %615 = @func_14748() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64]) */;
  %616 = left_shift(%613, %614) /* ty=Tensor[(13, 5, 6), uint64] */;
  %617 = %615.0;
  %618 = @func_9363() /* ty=Tensor[(13, 13, ?), bool] */;
  (%616, %617, %618)
}

def @func_15023() -> (Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool]) {
  %619 = @func_7935() /* ty=(Tensor[(13, 13, ?), float32],) */;
  %620 = @func_7659() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %621 = %619.0;
  %622 = %620.0;
  (%621, %622)
}

def @func_5214() -> Tensor[(13, 13, ?), float32] {
  %623 = @func_780() /* ty=(Tensor[(13, 13, ?), float32],) */;
  %623.0
}

def @func_2376() -> Tensor[(13, 13, ?), bool] {
  %624 = @func_1986() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %624.0
}

def @func_11310() -> (Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool]) {
  %625 = @func_10507() /* ty=(Tensor[(13, 13, ?), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool]) */;
  %626 = @func_4878() /* ty=(Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %627 = @func_11190() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 130), float32]) */;
  %628 = %625.2;
  %629 = %626.0;
  %630 = %627.0;
  (%628, %629, %630)
}

def @func_12535() -> (Tensor[(13, 13, ?), bool],) {
  %631 = @func_4381() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %632 = %631.0;
  (%632,)
}

def @func_5068() -> (Tensor[(13, 13, ?), bool],) {
  %633 = @func_1829() /* ty=Tensor[(13, 13, ?), bool] */;
  (%633,)
}

def @func_13704() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 10), float32]) {
  %634 = @func_9727() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %635 = @func_10887() /* ty=(Tensor[(13, 13, 10), int64],) */;
  %636 = %635.0;
  %637 = cast(%636, dtype="float32") /* ty=Tensor[(13, 13, 10), float32] */;
  %638 = @func_3430() /* ty=Tensor[(13, 13, ?), bool] */;
  %639 = %634.0;
  %640 = acos(%637) /* ty=Tensor[(13, 13, 10), float32] */;
  (%638, %639, %640)
}

def @func_3942() -> (Tensor[(13, 13, ?), float64],) {
  %641 = @func_780() /* ty=(Tensor[(13, 13, ?), float32],) */;
  %642 = %641.0;
  %643 = cast(%642, dtype="float64") /* ty=Tensor[(13, 13, ?), float64] */;
  %644 = log10(%643) /* ty=Tensor[(13, 13, ?), float64] */;
  (%644,)
}

def @func_7487() -> (Tensor[(13, 13, ?), bool],) {
  %645 = @func_3130() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %646 = %645.1;
  (%646,)
}

def @func_7659() -> (Tensor[(13, 13, ?), bool],) {
  %647 = @func_5119() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float64]) */;
  %648 = %647.1;
  (%648,)
}

def @func_9424() -> (Tensor[(13, 13, 2), float64],) {
  %649 = @func_8266() /* ty=Tensor[(13, 13, 2), float64] */;
  (%649,)
}

def @func_610() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %650 = @func_547() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %651 = @func_531() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %652 = %650.0;
  %653 = %651.0;
  (%652, %653)
}

def @func_1587() -> (Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %654 = @func_780() /* ty=(Tensor[(13, 13, ?), float32],) */;
  %655 = %654.0;
  %656 = cast(%655, dtype="bool") /* ty=Tensor[(13, 13, ?), bool] */;
  %657 = reshape(%656, newshape=[13, 13, 1]) /* ty=Tensor[(13, 13, 1), bool] */;
  %658 = @func_985(%657) /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float64]) */;
  %659 = %658.0;
  %660 = cast(%659, dtype="bool") /* ty=Tensor[(13, 13, ?), bool] */;
  %661 = reshape(%660, newshape=[13, 13, 1]) /* ty=Tensor[(13, 13, 1), bool] */;
  %662 = @func_904(%661) /* ty=(Tensor[(13, 13, ?), uint32], Tensor[(13, 13, 1), float64], Tensor[(13, 13, 1), float64], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %663 = @func_820() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %664 = @func_820() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %665 = @func_820() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %666 = %662.3;
  %667 = %663.0;
  %668 = %664.0;
  %669 = %665.0;
  (%655, %659, %666, %667, %668, %669)
}

def @func_1142() -> (Tensor[(13, 13, ?), float32],) {
  %670 = @func_780() /* ty=(Tensor[(13, 13, ?), float32],) */;
  %671 = %670.0;
  (%671,)
}

def @func_12799(%var_12783: Tensor[(13, 13, 15), bool]) -> (Tensor[(13, 13, 10), bool], Tensor[(13, 13, ?), float32], Tensor[(13, 13, 10), int64], Tensor[(13, 13, ?), bool], bool, Tensor[(336), bool], Tensor[(80), float64], Tensor[(13, 13, 15), float64]) {
  %672 = @func_4610() /* ty=(Tensor[(13, 13, 2), float64], Tensor[(13, 13, 10), bool], Tensor[(13, 13, 2), float64]) */;
  %673 = @func_10887() /* ty=(Tensor[(13, 13, 10), int64],) */;
  %674 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %675 = cast(meta[relay.Constant][18] /* ty=Tensor[(336), bool] */, dtype="bool") /* ty=Tensor[(336), bool] */;
  %676 = cast(meta[relay.Constant][19] /* ty=Tensor[(80), float64] */, dtype="float64") /* ty=Tensor[(80), float64] */;
  %677 = reshape(%674, newshape=[]) /* ty=bool */;
  %678 = reshape(%675, newshape=[14, 3, 8]) /* ty=Tensor[(14, 3, 8), bool] */;
  %679 = reshape(%676, newshape=[80]) /* ty=Tensor[(80), float64] */;
  %680 = @func_10335(%677, %678, %679) /* ty=(Tensor[(14, 3, 8), bool], Tensor[(13, 13, ?), float32], Tensor[(10, 8, ?), bool], Tensor[(80), float64], Tensor[(13, 13, ?), bool]) */;
  %681 = @func_3763() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %682 = %681.1;
  %683 = cast(%682, dtype="float64") /* ty=Tensor[(13, 13, ?), float64] */;
  %684 = cast(%var_12783, dtype="float64") /* ty=Tensor[(13, 13, 15), float64] */;
  %685 = %672.1;
  %686 = @func_5214() /* ty=Tensor[(13, 13, ?), float32] */;
  %687 = %673.0;
  %688 = %680.4;
  %689 = multiply(%683, %684) /* ty=Tensor[(13, 13, 15), float64] */;
  (%685, %686, %687, %688, False /* ty=bool */, meta[relay.Constant][18] /* ty=Tensor[(336), bool] */, meta[relay.Constant][19] /* ty=Tensor[(80), float64] */, %689)
}

def @func_16625(%var_16617: Tensor[(13, 13, 7), bool]) -> Tensor[(13, 13, 7), bool] {
  %690 = @func_1947() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %691 = %690.0;
  %692 = cast(%691, dtype="bool") /* ty=Tensor[(13, 13, ?), bool] */;
  %693 = cast(%var_16617, dtype="bool") /* ty=Tensor[(13, 13, 7), bool] */;
  greater_equal(%692, %693) /* ty=Tensor[(13, 13, 7), bool] */
}

def @func_17019() -> (Tensor[(13, 13, ?), bool],) {
  %694 = @func_13868() /* ty=Tensor[(13, 13, ?), bool] */;
  (%694,)
}

def @func_17243() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %695 = @func_12535() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %696 = %695.0;
  %697 = @func_12199() /* ty=Tensor[(13, 13, ?), bool] */;
  (%696, %697)
}

def @func_3073() -> (Tensor[(13, 13, ?), int8], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %698 = @func_1037() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %699 = @func_2623() /* ty=Tensor[(13, 13, ?), int8] */;
  %700 = @func_2376() /* ty=Tensor[(13, 13, ?), bool] */;
  %701 = %698.0;
  (%699, %700, %701)
}

def @func_3130() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %702 = @func_2544() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool]) */;
  %703 = @func_610() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %704 = %702.2;
  %705 = %703.1;
  (%704, %705)
}

def @func_7980(%var_7960: Tensor[(13, 13, 1), bool]) -> Tensor[(13, 13, ?), bool] {
  %706 = @func_3130() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %707 = %706.0;
  %708 = cast(%var_7960, dtype="bool") /* ty=Tensor[(13, 13, 1), bool] */;
  %709 = shape_of(%707, dtype="int32") /* ty=Tensor[(3), int32] */;
  %710 = cast(%707, dtype="bool") /* ty=Tensor[(13, 13, ?), bool] */;
  %711 = dyn.reshape(%708, %709, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%710, %711) /* ty=Tensor[(13, 13, ?), bool] */
}

def @func_12326(%var_12298: float32, %var_12299: Tensor[(8, 13, 8), float32]) -> (Tensor[(8, 13, 8), float32], Tensor[(13, 13, ?), bool]) {
  %712 = cast(%var_12298, dtype="float32") /* ty=float32 */;
  %713 = cast(%var_12299, dtype="float32") /* ty=Tensor[(8, 13, 8), float32] */;
  %714 = @func_8597() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %715 = power(%712, %713) /* ty=Tensor[(8, 13, 8), float32] */;
  %716 = %714.1;
  (%715, %716)
}

def @func_5119() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float64]) {
  %717 = @func_1037() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %718 = @func_3767() /* ty=Tensor[(13, 13, ?), bool] */;
  %719 = cast(%718, dtype="bool") /* ty=Tensor[(13, 13, ?), bool] */;
  %720 = reshape(%719, newshape=[13, 13, 1]) /* ty=Tensor[(13, 13, 1), bool] */;
  %721 = @func_985(%720) /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float64]) */;
  %722 = %717.1;
  %723 = %721.1;
  (%722, %718, %723)
}

def @func_8051() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), uint32], Tensor[(13, 13, ?), bool]) {
  %724 = @func_6002() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), uint32]) */;
  %725 = @func_547() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %726 = @func_6847() /* ty=Tensor[(13, 13, ?), bool] */;
  %727 = %724.1;
  %728 = %725.0;
  (%726, %727, %728)
}

def @func_14269(%var_14215: Tensor[(144), float64]) -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, 2), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), uint32], Tensor[(13, 13, 144), uint8]) {
  %729 = cast(%var_14215, dtype="float64") /* ty=Tensor[(144), float64] */;
  %730 = reshape(%729, newshape=[3, 8, 6]) /* ty=Tensor[(3, 8, 6), float64] */;
  %731 = @func_8199(%730) /* ty=(Tensor[(3, 8, 6), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %732 = @func_4610() /* ty=(Tensor[(13, 13, 2), float64], Tensor[(13, 13, 10), bool], Tensor[(13, 13, 2), float64]) */;
  %733 = @func_9291() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %734 = @func_6002() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), uint32]) */;
  %735 = @func_8696() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %736 = %735.0;
  %737 = cast(%736, dtype="bool") /* ty=Tensor[(13, 13, ?), bool] */;
  %738 = cast(%var_14215, dtype="bool") /* ty=Tensor[(144), bool] */;
  %739 = logical_and(%737, %738) /* ty=Tensor[(13, 13, 144), bool] */;
  %740 = cast(meta[relay.Constant][20] /* ty=Tensor[(13, 13, 144), bool] */, dtype="uint8") /* ty=Tensor[(13, 13, 144), uint8] */;
  %741 = shape_of(%739, dtype="int32") /* ty=Tensor[(3), int32] */;
  %742 = cast(%739, dtype="uint8") /* ty=Tensor[(13, 13, 144), uint8] */;
  %743 = dyn.reshape(%740, %741, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %744 = %731.2;
  %745 = %732.0;
  %746 = %733.0;
  %747 = @func_5214() /* ty=Tensor[(13, 13, ?), float32] */;
  %748 = %734.1;
  %749 = multiply(%742, %743) /* ty=Tensor[(13, 13, 144), uint8] */;
  (%744, %745, %746, %747, %748, %749)
}

def @func_780() -> (Tensor[(13, 13, ?), float32],) {
  %750 = @func_610() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %751 = %750.0;
  %752 = cast(%751, dtype="float32") /* ty=Tensor[(13, 13, ?), float32] */;
  %753 = tan(%752) /* ty=Tensor[(13, 13, ?), float32] */;
  (%753,)
}

def @func_17200(%var_17151: Tensor[(1, 6, 6), float64], %var_17152: Tensor[(10, 6, 6), float64]) -> (Tensor[(10, 6, 6), bool], Tensor[(10, 6, 6), float32], Tensor[(13, 13, ?), bool]) {
  %754 = cast(%var_17151, dtype="bool") /* ty=Tensor[(1, 6, 6), bool] */;
  %755 = cast(%var_17152, dtype="bool") /* ty=Tensor[(10, 6, 6), bool] */;
  %756 = cast(%var_17152, dtype="float32") /* ty=Tensor[(10, 6, 6), float32] */;
  %757 = @func_3967() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %758 = not_equal(%754, %755) /* ty=Tensor[(10, 6, 6), bool] */;
  %759 = log10(%756) /* ty=Tensor[(10, 6, 6), float32] */;
  %760 = %757.0;
  (%758, %759, %760)
}

def @func_10887() -> (Tensor[(13, 13, 10), int64],) {
  %761 = @func_4424() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 10), int64], Tensor[(13, 130), float32]) */;
  %762 = %761.1;
  (%762,)
}

def @func_10017() -> Tensor[(13, 13, ?), bool] {
  %763 = @func_9727() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %763.1
}

def @func_14884() -> (Tensor[(13, 13, 2), float64], Tensor[(13, 13, ?), float32]) {
  %764 = @func_3103() /* ty=(Tensor[(13, 13, 2), float64],) */;
  %765 = @func_7935() /* ty=(Tensor[(13, 13, ?), float32],) */;
  %766 = %764.0;
  %767 = %765.0;
  (%766, %767)
}

def @func_4067() -> (Tensor[(13, 13, ?), bool],) {
  %768 = @func_3472() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %769 = %768.1;
  (%769,)
}

def @func_15691() -> (Tensor[(13, 13, ?), bool],) {
  %770 = @func_8882() /* ty=(Tensor[(13, 13, ?), float64], Tensor[(13, 13, ?), bool]) */;
  %771 = %770.1;
  (%771,)
}

def @func_8356() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %772 = @func_5119() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float64]) */;
  %773 = @func_7040() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(4, 1, 15), float32]) */;
  %774 = %772.1;
  %775 = %773.0;
  (%774, %775)
}

def @func_3967() -> (Tensor[(13, 13, ?), bool],) {
  %776 = @func_547() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %777 = %776.0;
  (%777,)
}

def @func_7457() -> Tensor[(13, 13, ?), bool] {
  %778 = @func_1947() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %778.0
}

def @func_7498() -> Tensor[(13, 13, ?), float32] {
  %779 = @func_1142() /* ty=(Tensor[(13, 13, ?), float32],) */;
  %779.0
}

def @func_2544() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool]) {
  %780 = @func_2286() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %781 = @func_1662() /* ty=(Tensor[(13, 13, 1), float64], Tensor[(13, 13, 1), float64]) */;
  %782 = @func_820() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %783 = %780.0;
  %784 = %781.1;
  %785 = %782.0;
  (%783, %784, %785)
}

def @func_10226() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, 15), uint64], Tensor[(1, 2535), bool], Tensor[(13, 13, ?), bool]) {
  %786 = @func_7443() /* ty=(Tensor[(13, 13, 10), bool], Tensor[(13, 13, ?), bool]) */;
  %787 = cast(meta[relay.Constant][21] /* ty=Tensor[(1, 2535), bool] */, dtype="bool") /* ty=Tensor[(1, 2535), bool] */;
  %788 = reshape(%787, newshape=[13, 13, 15]) /* ty=Tensor[(13, 13, 15), bool] */;
  %789 = @func_2035(%788) /* ty=(Tensor[(13, 13, 15), uint64],) */;
  %790 = @func_3472() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %791 = %786.1;
  %792 = %789.0;
  %793 = %790.0;
  (%791, %792, meta[relay.Constant][21] /* ty=Tensor[(1, 2535), bool] */, %793)
}

def @func_13380() -> Tensor[(13, 13, ?), bool] {
  %794 = @func_1947() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %794.0
}

def @func_3763() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %795 = @func_1518() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %796 = @func_3011() /* ty=Tensor[(13, 13, ?), bool] */;
  %797 = %795.0;
  (%796, %797)
}

def @func_13100(%var_13089: uint32, %var_13090: Tensor[(6, 9, 12), uint32]) -> (Tensor[(6, 9, 12), bool], Tensor[(6, 9, 12), int8]) {
  %798 = cast(%var_13089, dtype="bool") /* ty=bool */;
  %799 = cast(%var_13090, dtype="bool") /* ty=Tensor[(6, 9, 12), bool] */;
  %800 = cast(%var_13090, dtype="int8") /* ty=Tensor[(6, 9, 12), int8] */;
  %801 = cast(%var_13089, dtype="int8") /* ty=int8 */;
  %802 = equal(%798, %799) /* ty=Tensor[(6, 9, 12), bool] */;
  %803 = left_shift(%800, %801) /* ty=Tensor[(6, 9, 12), int8] */;
  (%802, %803)
}

def @func_10814() -> Tensor[(13, 13, ?), bool] {
  @func_2478() /* ty=Tensor[(13, 13, ?), bool] */
}

def @func_904(%var_842: Tensor[(13, 13, 1), bool]) -> (Tensor[(13, 13, ?), uint32], Tensor[(13, 13, 1), float64], Tensor[(13, 13, 1), float64], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %804 = @func_547() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %805 = %804.0;
  %806 = cast(%var_842, dtype="uint32") /* ty=Tensor[(13, 13, 1), uint32] */;
  %807 = shape_of(%805, dtype="int32") /* ty=Tensor[(3), int32] */;
  %808 = cast(%805, dtype="uint32") /* ty=Tensor[(13, 13, ?), uint32] */;
  %809 = dyn.reshape(%806, %807, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %810 = @func_468() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64]) */;
  %811 = cast(%var_842, dtype="float64") /* ty=Tensor[(13, 13, 1), float64] */;
  %812 = @func_725() /* ty=(Tensor[(13, 13, 1), float64],) */;
  %813 = @func_468() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64]) */;
  %814 = @func_547() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %815 = bitwise_or(%808, %809) /* ty=Tensor[(13, 13, ?), uint32] */;
  %816 = %810.1;
  %817 = sin(%811) /* ty=Tensor[(13, 13, 1), float64] */;
  %818 = %812.0;
  %819 = %813.0;
  %820 = %814.0;
  (%815, %816, %817, %818, %819, %820)
}

def @func_16882() -> (Tensor[(13, 13, ?), float64], Tensor[(13, 13, ?), bool]) {
  %821 = @func_3942() /* ty=(Tensor[(13, 13, ?), float64],) */;
  %822 = %821.0;
  %823 = @func_2110() /* ty=Tensor[(13, 13, ?), bool] */;
  (%822, %823)
}

def @func_17325() -> (Tensor[(13, 13, ?), bool],) {
  %824 = @func_13835() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %825 = %824.0;
  (%825,)
}

def @func_10428() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(1690), float32]) {
  %826 = @func_1798() /* ty=(Tensor[(13, 13, ?), float32],) */;
  %827 = @func_3942() /* ty=(Tensor[(13, 13, ?), float64],) */;
  %828 = @func_3967() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %829 = cast(meta[relay.Constant][22] /* ty=Tensor[(1690), float32] */, dtype="float32") /* ty=Tensor[(1690), float32] */;
  %830 = reshape(%829, newshape=[1690]) /* ty=Tensor[(1690), float32] */;
  %831 = @func_8768(%830) /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(1690), float32]) */;
  %832 = @func_9997() /* ty=Tensor[(13, 13, ?), bool] */;
  %833 = %826.0;
  %834 = %827.0;
  %835 = %828.0;
  %836 = %831.0;
  (%832, %833, %834, %835, %836, meta[relay.Constant][22] /* ty=Tensor[(1690), float32] */)
}

def @func_14933() -> (Tensor[(13, 13, ?), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %837 = @func_4878() /* ty=(Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %838 = @func_2646() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %839 = @func_1759() /* ty=(Tensor[(13, 13, ?), float32], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %840 = %837.1;
  %841 = %838.0;
  %842 = %839.4;
  (%840, %841, %842)
}

def @func_14555(%var_14547: Tensor[(11, 3, 6), float64]) -> Tensor[(11, 3, 6), bool] {
  %843 = cast(meta[relay.Constant][23] /* ty=Tensor[(11, 3, 6), float64] */, dtype="bool") /* ty=Tensor[(11, 3, 6), bool] */;
  %844 = shape_of(%var_14547, dtype="int32") /* ty=Tensor[(3), int32] */;
  %845 = cast(%var_14547, dtype="bool") /* ty=Tensor[(11, 3, 6), bool] */;
  %846 = dyn.reshape(%843, %844, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%845, %846) /* ty=Tensor[(11, 3, 6), bool] */
}

def @func_8663() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32], Tensor[(13, 13, 2), float64]) {
  %847 = @func_3712() /* ty=(Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool]) */;
  %848 = @func_2110() /* ty=Tensor[(13, 13, ?), bool] */;
  %849 = %847.1;
  %850 = @func_6795() /* ty=Tensor[(13, 13, 2), float64] */;
  (%848, %849, %850)
}

def @func_9051() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %851 = @func_3525() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %852 = @func_6096() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %853 = %851.0;
  %854 = %852.1;
  (%853, %854)
}

def @func_13005() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %855 = @func_4351() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 10), bool], Tensor[(1690), float64]) */;
  %856 = @func_8948() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %857 = %855.0;
  %858 = %856.0;
  (%857, %858)
}

def @func_16387() -> (Tensor[(13, 13, ?), float64],) {
  %859 = @func_14933() /* ty=(Tensor[(13, 13, ?), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %860 = %859.0;
  (%860,)
}

def @func_6063() -> Tensor[(13, 13, ?), bool] {
  %861 = @func_3967() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %861.0
}

def @func_5330() -> Tensor[(13, 13, ?), bool] {
  %862 = @func_3472() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %862.0
}

def @func_4351() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 10), bool], Tensor[(1690), float64]) {
  %863 = @func_531() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %864 = @func_2646() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %865 = cast(meta[relay.Constant][24] /* ty=Tensor[(1690), float64] */, dtype="float64") /* ty=Tensor[(1690), float64] */;
  %866 = reshape(%865, newshape=[13, 13, 10]) /* ty=Tensor[(13, 13, 10), float64] */;
  %867 = @func_1490(%866) /* ty=(Tensor[(13, 13, 10), bool],) */;
  %868 = %863.0;
  %869 = %864.0;
  %870 = %867.0;
  (%868, %869, %870, meta[relay.Constant][24] /* ty=Tensor[(1690), float64] */)
}

def @func_8838() -> (Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool]) {
  %871 = @func_5791() /* ty=(Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool]) */;
  %872 = @func_6763() /* ty=(Tensor[(13, 13, ?), float32],) */;
  %873 = @func_1167() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %874 = %871.0;
  %875 = %872.0;
  %876 = %873.0;
  (%874, %875, %876)
}

def @func_8266() -> Tensor[(13, 13, 2), float64] {
  %877 = @func_3103() /* ty=(Tensor[(13, 13, 2), float64],) */;
  %877.0
}

def @func_10950(%var_10938: int8, %var_10939: Tensor[(4, 10, 1), int8]) -> (Tensor[(4, 10, 1), int8],) {
  %878 = cast(%var_10938, dtype="int8") /* ty=int8 */;
  %879 = cast(%var_10939, dtype="int8") /* ty=Tensor[(4, 10, 1), int8] */;
  %880 = add(%878, %879) /* ty=Tensor[(4, 10, 1), int8] */;
  (%880,)
}

def @func_14035(%var_13993: Tensor[(13, 13, 1), bool]) -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32]) {
  %881 = @func_13217() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %882 = %881.0;
  %883 = cast(%var_13993, dtype="bool") /* ty=Tensor[(13, 13, 1), bool] */;
  %884 = shape_of(%882, dtype="int32") /* ty=Tensor[(3), int32] */;
  %885 = cast(%882, dtype="bool") /* ty=Tensor[(13, 13, ?), bool] */;
  %886 = dyn.reshape(%883, %884, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %887 = @func_780() /* ty=(Tensor[(13, 13, ?), float32],) */;
  %888 = logical_or(%885, %886) /* ty=Tensor[(13, 13, ?), bool] */;
  %889 = %887.0;
  (%888, %889)
}

def @func_13823() -> (Tensor[(13, 13, ?), int8],) {
  %890 = @func_2623() /* ty=Tensor[(13, 13, ?), int8] */;
  (%890,)
}

def @func_2286() -> (Tensor[(13, 13, ?), bool],) {
  %891 = @func_1947() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %892 = %891.0;
  (%892,)
}

def @func_11558() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32]) {
  %893 = @func_1587() /* ty=(Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %894 = @func_10428() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(1690), float32]) */;
  %895 = %893.3;
  %896 = %894.1;
  (%895, %896)
}

def @func_12586() -> (Tensor[(13, 13, ?), bool],) {
  %897 = @func_2985() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), int8]) */;
  %898 = %897.0;
  (%898,)
}

def @func_7262(%var_7232: Tensor[(7), float32]) -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float64], Tensor[(7), float32]) {
  %899 = cast(%var_7232, dtype="float32") /* ty=Tensor[(7), float32] */;
  %900 = reshape(%899, newshape=[7]) /* ty=Tensor[(7), float32] */;
  %901 = @func_6135(%900) /* ty=(Tensor[(13, 13, 2), float64], Tensor[(13, 13, ?), float64], Tensor[(7), float32]) */;
  %902 = @func_5735() /* ty=Tensor[(13, 13, ?), bool] */;
  %903 = @func_3858() /* ty=Tensor[(13, 13, ?), bool] */;
  %904 = @func_1829() /* ty=Tensor[(13, 13, ?), bool] */;
  %905 = %901.1;
  (%902, %903, %904, %905, %var_7232)
}

def @func_13267(%var_13257: Tensor[(7), float32]) -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float64], Tensor[(7), float32], Tensor[(13, 13, 10), float32]) {
  %906 = @func_6002() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), uint32]) */;
  %907 = cast(%var_13257, dtype="float32") /* ty=Tensor[(7), float32] */;
  %908 = reshape(%907, newshape=[7]) /* ty=Tensor[(7), float32] */;
  %909 = @func_4199(%908) /* ty=(Tensor[(13, 13, ?), float64], Tensor[(1, 1, 7), float32], Tensor[(7), float32], Tensor[(13, 13, ?), bool]) */;
  %910 = @func_6034() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 10), bool]) */;
  %911 = %910.0;
  %912 = cast(%911, dtype="float32") /* ty=Tensor[(13, 13, ?), float32] */;
  %913 = cast(meta[relay.Constant][25] /* ty=Tensor[(13, 13, 10), bool] */, dtype="float32") /* ty=Tensor[(13, 13, 10), float32] */;
  %914 = %906.0;
  %915 = %909.0;
  %916 = add(%912, %913) /* ty=Tensor[(13, 13, 10), float32] */;
  (%914, %915, %var_13257, %916)
}

def @func_2035(%var_2021: Tensor[(13, 13, 15), bool]) -> (Tensor[(13, 13, 15), uint64],) {
  %917 = @func_1888() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %918 = %917.0;
  %919 = cast(%918, dtype="uint64") /* ty=Tensor[(13, 13, ?), uint64] */;
  %920 = cast(%var_2021, dtype="uint64") /* ty=Tensor[(13, 13, 15), uint64] */;
  %921 = subtract(%919, %920) /* ty=Tensor[(13, 13, 15), uint64] */;
  (%921,)
}

def @func_13868() -> Tensor[(13, 13, ?), bool] {
  %922 = @func_3525() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %922.0
}

def @func_2169() -> (Tensor[(13, 13, ?), bool],) {
  %923 = @func_468() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64]) */;
  %924 = %923.0;
  (%924,)
}

def @func_16325() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool]) {
  %925 = @func_15579() /* ty=(Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool]) */;
  %926 = @func_12199() /* ty=Tensor[(13, 13, ?), bool] */;
  %927 = %925.0;
  %928 = @func_9074() /* ty=Tensor[(13, 13, ?), bool] */;
  (%926, %927, %928)
}

def @func_5814() -> Tensor[(13, 13, ?), bool] {
  %929 = @func_547() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %929.0
}

def @func_15909(%var_15879: Tensor[(14, 2, 13), float32]) -> (Tensor[(13, 13, ?), bool], Tensor[(14, 2, 13), bool], Tensor[(13, 13, ?), uint32]) {
  %930 = @func_12586() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %931 = cast(%var_15879, dtype="float32") /* ty=Tensor[(14, 2, 13), float32] */;
  %932 = tan(%931) /* ty=Tensor[(14, 2, 13), float32] */;
  %933 = cast(%var_15879, dtype="bool") /* ty=Tensor[(14, 2, 13), bool] */;
  %934 = shape_of(%932, dtype="int32") /* ty=Tensor[(3), int32] */;
  %935 = cast(%932, dtype="bool") /* ty=Tensor[(14, 2, 13), bool] */;
  %936 = dyn.reshape(%933, %934, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %937 = %930.0;
  %938 = greater_equal(%935, %936) /* ty=Tensor[(14, 2, 13), bool] */;
  %939 = @func_15503() /* ty=Tensor[(13, 13, ?), uint32] */;
  (%937, %938, %939)
}

def @func_12958() -> Tensor[(13, 13, ?), bool] {
  %940 = @func_1464() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %940.0
}

def @func_8948() -> (Tensor[(13, 13, ?), bool],) {
  %941 = @func_7040() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(4, 1, 15), float32]) */;
  %942 = %941.0;
  (%942,)
}

def @func_16031() -> Tensor[(13, 13, ?), bool] {
  %943 = @func_15023() /* ty=(Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool]) */;
  %943.1
}

def @func_11373(%var_11365: Tensor[(13, 130), float32]) -> Tensor[(13, 130), uint8] {
  %944 = @func_11190() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 130), float32]) */;
  %945 = %944.1;
  %946 = cast(%var_11365, dtype="uint8") /* ty=Tensor[(13, 130), uint8] */;
  %947 = shape_of(%945, dtype="int32") /* ty=Tensor[(2), int32] */;
  %948 = cast(%945, dtype="uint8") /* ty=Tensor[(13, 130), uint8] */;
  %949 = dyn.reshape(%946, %947, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  bitwise_xor(%948, %949) /* ty=Tensor[(13, 130), uint8] */
}

def @func_9177() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %950 = @func_3794() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %951 = @func_1888() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %952 = %950.1;
  %953 = %951.0;
  (%952, %953)
}

def @func_10054() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(1690), float32]) {
  %954 = cast(meta[relay.Constant][26] /* ty=Tensor[(1690), float32] */, dtype="float32") /* ty=Tensor[(1690), float32] */;
  %955 = cast(meta[relay.Constant][26] /* ty=Tensor[(1690), float32] */, dtype="float32") /* ty=Tensor[(1690), float32] */;
  %956 = reshape(%954, newshape=[1690]) /* ty=Tensor[(1690), float32] */;
  %957 = reshape(%955, newshape=[1690]) /* ty=Tensor[(1690), float32] */;
  %958 = @func_8329(%956, %957) /* ty=(Tensor[(13, 13, ?), int8], Tensor[(13, 13, ?), bool], Tensor[(1690), float64], Tensor[(1690), bool]) */;
  %959 = @func_5330() /* ty=Tensor[(13, 13, ?), bool] */;
  %960 = %958.1;
  (%959, %960, meta[relay.Constant][26] /* ty=Tensor[(1690), float32] */)
}

def @func_17482() -> Tensor[(13, 13, 10), bool] {
  %961 = @func_6034() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 10), bool]) */;
  %961.2
}

def @func_16088(%var_16070: Tensor[(13, 13, 12), bool]) -> (Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 12), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %962 = @func_15147() /* ty=(Tensor[(13, 13, ?), float32],) */;
  %963 = @func_10251() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %964 = @func_5735() /* ty=Tensor[(13, 13, ?), bool] */;
  %965 = cast(%964, dtype="float64") /* ty=Tensor[(13, 13, ?), float64] */;
  %966 = cast(%var_16070, dtype="float64") /* ty=Tensor[(13, 13, 12), float64] */;
  %967 = @func_13980() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %968 = %962.0;
  %969 = %963.0;
  %970 = mod(%965, %966) /* ty=Tensor[(13, 13, 12), float64] */;
  %971 = %967.0;
  %972 = @func_7716() /* ty=Tensor[(13, 13, ?), bool] */;
  (%968, %969, %970, %971, %972)
}

def @func_12230(%var_12207: Tensor[(11, 2, 6), int32], %var_12208: Tensor[(11, 2, 6), int32], %var_12222: Tensor[(7), float32]) -> (Tensor[(11, 2, 6), bool], Tensor[(13, 13, ?), float64], Tensor[(7), float32]) {
  %973 = cast(%var_12208, dtype="bool") /* ty=Tensor[(11, 2, 6), bool] */;
  %974 = shape_of(%var_12207, dtype="int32") /* ty=Tensor[(3), int32] */;
  %975 = cast(%var_12207, dtype="bool") /* ty=Tensor[(11, 2, 6), bool] */;
  %976 = dyn.reshape(%973, %974, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %977 = less(%975, %976) /* ty=Tensor[(11, 2, 6), bool] */;
  %978 = cast(%977, dtype="bool") /* ty=Tensor[(11, 2, 6), bool] */;
  %979 = shape_of(%var_12207, dtype="int32") /* ty=Tensor[(3), int32] */;
  %980 = cast(%var_12207, dtype="bool") /* ty=Tensor[(11, 2, 6), bool] */;
  %981 = dyn.reshape(%978, %979, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %982 = cast(%var_12222, dtype="float32") /* ty=Tensor[(7), float32] */;
  %983 = reshape(%982, newshape=[7]) /* ty=Tensor[(7), float32] */;
  %984 = @func_4199(%983) /* ty=(Tensor[(13, 13, ?), float64], Tensor[(1, 1, 7), float32], Tensor[(7), float32], Tensor[(13, 13, ?), bool]) */;
  %985 = greater_equal(%980, %981) /* ty=Tensor[(11, 2, 6), bool] */;
  %986 = %984.0;
  (%985, %986, %var_12222)
}

def @func_3767() -> Tensor[(13, 13, ?), bool] {
  %987 = @func_1888() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %987.0
}

def @func_5486() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %988 = @func_2169() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %989 = @func_5068() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %990 = @func_531() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %991 = %988.0;
  %992 = %989.0;
  %993 = %990.0;
  (%991, %992, %993)
}

def @func_4432() -> (Tensor[(13, 13, ?), bool],) {
  %994 = @func_820() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %995 = %994.0;
  (%995,)
}

def @func_1414() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), uint32]) {
  %996 = @func_1167() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %997 = @func_1142() /* ty=(Tensor[(13, 13, ?), float32],) */;
  %998 = %997.0;
  %999 = cast(%998, dtype="bool") /* ty=Tensor[(13, 13, ?), bool] */;
  %1000 = reshape(%999, newshape=[13, 13, 1]) /* ty=Tensor[(13, 13, 1), bool] */;
  %1001 = @func_904(%1000) /* ty=(Tensor[(13, 13, ?), uint32], Tensor[(13, 13, 1), float64], Tensor[(13, 13, 1), float64], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %1002 = %1001.1;
  %1003 = cast(%998, dtype="uint32") /* ty=Tensor[(13, 13, ?), uint32] */;
  %1004 = shape_of(%1002, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1005 = cast(%1002, dtype="uint32") /* ty=Tensor[(13, 13, 1), uint32] */;
  %1006 = dyn.reshape(%1003, %1004, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1007 = %996.1;
  %1008 = logical_xor(%1005, %1006) /* ty=Tensor[(13, 13, ?), uint32] */;
  (%1007, %1008)
}

def @func_1490(%var_1482: Tensor[(13, 13, 10), float64]) -> (Tensor[(13, 13, 10), bool],) {
  %1009 = @func_725() /* ty=(Tensor[(13, 13, 1), float64],) */;
  %1010 = %1009.0;
  %1011 = cast(%1010, dtype="bool") /* ty=Tensor[(13, 13, 1), bool] */;
  %1012 = cast(%var_1482, dtype="bool") /* ty=Tensor[(13, 13, 10), bool] */;
  %1013 = less_equal(%1011, %1012) /* ty=Tensor[(13, 13, 10), bool] */;
  (%1013,)
}

def @func_11261(%var_11228: Tensor[(64), uint8], %var_11247: Tensor[(162), float64]) -> (Tensor[(13, 13, 2), float64], Tensor[(13, 13, ?), bool], uint8, Tensor[(64), uint8], Tensor[(3, 9, 6), float64], Tensor[(162), float64]) {
  %1014 = @func_3746() /* ty=(Tensor[(13, 13, 2), float64],) */;
  %1015 = cast(meta[relay.Constant][27] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %1016 = cast(%var_11228, dtype="uint8") /* ty=Tensor[(64), uint8] */;
  %1017 = reshape(%1015, newshape=[]) /* ty=uint8 */;
  %1018 = reshape(%1016, newshape=[8, 8, 1]) /* ty=Tensor[(8, 8, 1), uint8] */;
  %1019 = @func_6417(%1017, %1018) /* ty=(Tensor[(8, 8, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(8, 8, 1), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), uint32]) */;
  %1020 = cast(%var_11247, dtype="float64") /* ty=Tensor[(162), float64] */;
  %1021 = cast(%var_11247, dtype="float64") /* ty=Tensor[(162), float64] */;
  %1022 = reshape(%1020, newshape=[3, 9, 6]) /* ty=Tensor[(3, 9, 6), float64] */;
  %1023 = reshape(%1021, newshape=[3, 9, 6]) /* ty=Tensor[(3, 9, 6), float64] */;
  %1024 = @func_5958(%1022, %1023) /* ty=(Tensor[(3, 9, 6), float64],) */;
  %1025 = cast(%var_11247, dtype="float64") /* ty=Tensor[(162), float64] */;
  %1026 = %1014.0;
  %1027 = %1019.3;
  %1028 = %1024.0;
  %1029 = erf(%1025) /* ty=Tensor[(162), float64] */;
  (%1026, %1027, meta[relay.Constant][27] /* ty=uint8 */, %var_11228, %1028, %1029)
}

def @func_11730() -> (Tensor[(13, 13, ?), float32],) {
  %1030 = @func_8838() /* ty=(Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool]) */;
  %1031 = %1030.0;
  (%1031,)
}

def @func_7443() -> (Tensor[(13, 13, 10), bool], Tensor[(13, 13, ?), bool]) {
  %1032 = @func_4610() /* ty=(Tensor[(13, 13, 2), float64], Tensor[(13, 13, 10), bool], Tensor[(13, 13, 2), float64]) */;
  %1033 = @func_1247() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), uint32], Tensor[(13, 13, ?), bool]) */;
  %1034 = %1032.1;
  %1035 = %1033.0;
  (%1034, %1035)
}

def @func_13217() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %1036 = @func_8696() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %1037 = @func_9997() /* ty=Tensor[(13, 13, ?), bool] */;
  %1038 = %1036.0;
  (%1037, %1038)
}

def @func_4015() -> Tensor[(13, 13, ?), bool] {
  %1039 = @func_3472() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %1039.1
}

def @func_12263(%var_12246: Tensor[(24), float32]) -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(24), float32]) {
  %1040 = @func_1759() /* ty=(Tensor[(13, 13, ?), float32], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %1041 = cast(%var_12246, dtype="float32") /* ty=Tensor[(24), float32] */;
  %1042 = reshape(%1041, newshape=[4, 6, 1]) /* ty=Tensor[(4, 6, 1), float32] */;
  %1043 = @func_11710(%1042) /* ty=(Tensor[(4, 6, 1), float32], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64]) */;
  %1044 = %1040.2;
  %1045 = %1043.1;
  (%1044, %1045, %var_12246)
}

def @func_5839() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %1046 = @func_3073() /* ty=(Tensor[(13, 13, ?), int8], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %1047 = @func_1464() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %1048 = %1046.1;
  %1049 = %1047.0;
  (%1048, %1049)
}

def @func_6847() -> Tensor[(13, 13, ?), bool] {
  %1050 = @func_4351() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 10), bool], Tensor[(1690), float64]) */;
  %1050.1
}

def @func_3430() -> Tensor[(13, 13, ?), bool] {
  %1051 = @func_3130() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %1051.1
}

def @func_9363() -> Tensor[(13, 13, ?), bool] {
  %1052 = @func_5119() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float64]) */;
  %1052.1
}

def @func_15147() -> (Tensor[(13, 13, ?), float32],) {
  %1053 = @func_14884() /* ty=(Tensor[(13, 13, 2), float64], Tensor[(13, 13, ?), float32]) */;
  %1054 = %1053.1;
  (%1054,)
}

def @func_8768(%var_8744: Tensor[(1690), float32]) -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(1690), float32]) {
  %1055 = @func_1888() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %1056 = cast(%var_8744, dtype="float32") /* ty=Tensor[(1690), float32] */;
  %1057 = reshape(%1056, newshape=[1690]) /* ty=Tensor[(1690), float32] */;
  %1058 = @func_7767(%1057) /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(1690), float32]) */;
  %1059 = %1055.0;
  %1060 = %1058.0;
  (%1059, %1060, %var_8744)
}

def @func_8882() -> (Tensor[(13, 13, ?), float64], Tensor[(13, 13, ?), bool]) {
  %1061 = @func_3967() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %1062 = @func_6578() /* ty=Tensor[(13, 13, ?), float64] */;
  %1063 = %1061.0;
  (%1062, %1063)
}

def @func_1167() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %1064 = @func_1037() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %1065 = @func_531() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %1066 = %1064.1;
  %1067 = %1065.0;
  (%1066, %1067)
}

def @func_17578() -> Tensor[(13, 13, 1), float64] {
  @func_15987() /* ty=Tensor[(13, 13, 1), float64] */
}

def @func_6795() -> Tensor[(13, 13, 2), float64] {
  %1068 = @func_2695() /* ty=(Tensor[(13, 13, 2), float64],) */;
  %1068.0
}

def @func_15159() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %1069 = @func_1587() /* ty=(Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %1070 = @func_9074() /* ty=Tensor[(13, 13, ?), bool] */;
  %1071 = %1069.3;
  (%1070, %1071)
}

def @func_4466() -> (Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), float32]) {
  %1072 = @func_510() /* ty=(Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool]) */;
  %1073 = @func_1798() /* ty=(Tensor[(13, 13, ?), float32],) */;
  %1074 = %1072.0;
  %1075 = %1073.0;
  (%1074, %1075)
}

def @func_2110() -> Tensor[(13, 13, ?), bool] {
  %1076 = @func_1947() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %1076.0
}

def @func_7935() -> (Tensor[(13, 13, ?), float32],) {
  %1077 = @func_1142() /* ty=(Tensor[(13, 13, ?), float32],) */;
  %1078 = %1077.0;
  (%1078,)
}

def @func_17343() -> (Tensor[(13, 13, ?), float32],) {
  %1079 = @func_14884() /* ty=(Tensor[(13, 13, 2), float64], Tensor[(13, 13, ?), float32]) */;
  %1080 = %1079.1;
  (%1080,)
}

def @func_1829() -> Tensor[(13, 13, ?), bool] {
  %1081 = @func_610() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %1081.1
}

def @func_468() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64]) {
  %1082 = cast(meta[relay.Constant][28] /* ty=Tensor[(13, 13, 1), float32] */, dtype="float32") /* ty=Tensor[(13, 13, 1), float32] */;
  %1083 = atanh(%1082) /* ty=Tensor[(13, 13, 1), float32] */;
  %1084 = cast(meta[relay.Constant][28] /* ty=Tensor[(13, 13, 1), float32] */, dtype="float64") /* ty=Tensor[(13, 13, 1), float64] */;
  %1085 = shape_of(%1083, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1086 = cast(%1083, dtype="float64") /* ty=Tensor[(13, 13, 1), float64] */;
  %1087 = dyn.reshape(%1084, %1085, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1088 = divide(%1086, %1087) /* ty=Tensor[(13, 13, ?), float64] */;
  %1089 = cast(meta[relay.Constant][28] /* ty=Tensor[(13, 13, 1), float32] */, dtype="bool") /* ty=Tensor[(13, 13, 1), bool] */;
  %1090 = shape_of(%1088, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1091 = cast(%1088, dtype="bool") /* ty=Tensor[(13, 13, ?), bool] */;
  %1092 = dyn.reshape(%1089, %1090, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1093 = cast(%1083, dtype="float64") /* ty=Tensor[(13, 13, 1), float64] */;
  %1094 = greater_equal(%1091, %1092) /* ty=Tensor[(13, 13, ?), bool] */;
  %1095 = erf(%1093) /* ty=Tensor[(13, 13, 1), float64] */;
  (%1094, %1095)
}

def @func_8503() -> (Tensor[(13, 13, ?), float32],) {
  %1096 = @func_5688() /* ty=Tensor[(13, 13, ?), float32] */;
  (%1096,)
}

def @func_3011() -> Tensor[(13, 13, ?), bool] {
  %1097 = @func_2286() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %1097.0
}

def @func_13595(%var_13588: Tensor[(4, 11, 12), uint64], %var_13589: Tensor[(4, 11, 12), uint64]) -> Tensor[(4, 11, 12), bool] {
  %1098 = cast(%var_13589, dtype="bool") /* ty=Tensor[(4, 11, 12), bool] */;
  %1099 = shape_of(%var_13588, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1100 = cast(%var_13588, dtype="bool") /* ty=Tensor[(4, 11, 12), bool] */;
  %1101 = dyn.reshape(%1098, %1099, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%1100, %1101) /* ty=Tensor[(4, 11, 12), bool] */
}

def @func_17104(%var_17068: Tensor[(13, 13, 7), bool]) -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, 7), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 7), float32]) {
  %1102 = @func_9820() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %1103 = @func_16026() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %1104 = %1103.0;
  %1105 = cast(%1104, dtype="bool") /* ty=Tensor[(13, 13, ?), bool] */;
  %1106 = cast(%var_17068, dtype="bool") /* ty=Tensor[(13, 13, 7), bool] */;
  %1107 = @func_1759() /* ty=(Tensor[(13, 13, ?), float32], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %1108 = @func_4381() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %1109 = @func_16920() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], uint8, Tensor[(64), uint8]) */;
  %1110 = cast(%var_17068, dtype="float32") /* ty=Tensor[(13, 13, 7), float32] */;
  %1111 = %1102.1;
  %1112 = not_equal(%1105, %1106) /* ty=Tensor[(13, 13, 7), bool] */;
  %1113 = %1107.3;
  %1114 = %1108.0;
  %1115 = %1109.0;
  %1116 = atan(%1110) /* ty=Tensor[(13, 13, 7), float32] */;
  (%1111, %1112, %1113, %1114, %1115, %1116)
}

def @func_14375() -> Tensor[(13, 13, ?), uint32] {
  %1117 = @func_12362() /* ty=(Tensor[(13, 13, ?), uint32], Tensor[(13, 13, 1), float64]) */;
  %1117.0
}

def @func_1986() -> (Tensor[(13, 13, ?), bool],) {
  %1118 = @func_1464() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %1119 = %1118.1;
  (%1119,)
}

def @func_3472() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %1120 = @func_2646() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %1121 = %1120.0;
  %1122 = @func_1829() /* ty=Tensor[(13, 13, ?), bool] */;
  (%1121, %1122)
}

def @func_10205() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %1123 = @func_2169() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %1124 = @func_5791() /* ty=(Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool]) */;
  %1125 = %1123.0;
  %1126 = %1124.1;
  %1127 = @func_9997() /* ty=Tensor[(13, 13, ?), bool] */;
  (%1125, %1126, %1127)
}

def @func_17368() -> (Tensor[(13, 13, ?), bool],) {
  %1128 = @func_6096() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %1129 = %1128.0;
  (%1129,)
}

def @func_10251() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %1130 = @func_9727() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %1131 = %1130.1;
  %1132 = @func_7716() /* ty=Tensor[(13, 13, ?), bool] */;
  (%1131, %1132)
}

def @func_17270() -> Tensor[(13, 13, 10), float64] {
  %1133 = @func_16959() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(2028), float64], Tensor[(13, 13, 10), bool]) */;
  %1134 = %1133.4;
  %1135 = cast(%1134, dtype="float64") /* ty=Tensor[(13, 13, 10), float64] */;
  rsqrt(%1135) /* ty=Tensor[(13, 13, 10), float64] */
}

def @func_16778() -> (Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %1136 = @func_8503() /* ty=(Tensor[(13, 13, ?), float32],) */;
  %1137 = @func_7487() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %1138 = @func_15831() /* ty=(Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %1139 = %1136.0;
  %1140 = %1137.0;
  %1141 = %1138.1;
  (%1139, %1140, %1141)
}

def @func_13084() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64]) {
  %1142 = @func_10205() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %1143 = @func_6524() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32], Tensor[(13, 13, 1), float64]) */;
  %1144 = %1142.2;
  %1145 = %1143.3;
  (%1144, %1145)
}

def @func_547() -> (Tensor[(13, 13, ?), bool],) {
  %1146 = @func_510() /* ty=(Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool]) */;
  %1147 = %1146.1;
  (%1147,)
}

def @func_14748() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64]) {
  %1148 = @func_2985() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), int8]) */;
  %1149 = @func_3712() /* ty=(Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool]) */;
  %1150 = %1148.0;
  %1151 = %1149.0;
  (%1150, %1151)
}

def @func_11985() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %1152 = @func_11632() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %1153 = @func_6002() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), uint32]) */;
  %1154 = @func_4432() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %1155 = %1152.0;
  %1156 = %1153.0;
  %1157 = %1154.0;
  (%1155, %1156, %1157)
}

def @func_6096() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %1158 = @func_2286() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %1159 = @func_1037() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %1160 = %1158.0;
  %1161 = %1159.1;
  (%1160, %1161)
}

def @func_5007() -> (Tensor[(13, 13, ?), float64], Tensor[(13, 13, ?), bool]) {
  %1162 = @func_3942() /* ty=(Tensor[(13, 13, ?), float64],) */;
  %1163 = %1162.0;
  %1164 = @func_3011() /* ty=Tensor[(13, 13, ?), bool] */;
  (%1163, %1164)
}

def @func_1798() -> (Tensor[(13, 13, ?), float32],) {
  %1165 = @func_610() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %1166 = %1165.0;
  %1167 = cast(%1166, dtype="float32") /* ty=Tensor[(13, 13, ?), float32] */;
  %1168 = rsqrt(%1167) /* ty=Tensor[(13, 13, ?), float32] */;
  (%1168,)
}

def @func_9291() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %1169 = @func_8356() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %1170 = @func_6096() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %1171 = %1169.1;
  %1172 = %1170.1;
  (%1171, %1172)
}

def @func_12025() -> (Tensor[(13, 13, ?), bool],) {
  %1173 = @func_3472() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %1174 = %1173.1;
  (%1174,)
}

def @func_17330() -> Tensor[(13, 13, ?), bool] {
  %1175 = @func_1247() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), uint32], Tensor[(13, 13, ?), bool]) */;
  %1175.0
}

def @func_16416() -> Tensor[(13, 13, ?), bool] {
  @func_7692() /* ty=Tensor[(13, 13, ?), bool] */
}

def @func_8199(%var_8176: Tensor[(3, 8, 6), float64]) -> (Tensor[(3, 8, 6), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %1176 = cast(meta[relay.Constant][29] /* ty=Tensor[(3, 8, 6), float64] */, dtype="float64") /* ty=Tensor[(3, 8, 6), float64] */;
  %1177 = shape_of(%var_8176, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1178 = cast(%var_8176, dtype="float64") /* ty=Tensor[(3, 8, 6), float64] */;
  %1179 = dyn.reshape(%1176, %1177, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1180 = @func_3794() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %1181 = @func_4528() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %1182 = add(%1178, %1179) /* ty=Tensor[(3, 8, 6), float64] */;
  %1183 = %1180.0;
  %1184 = %1181.0;
  (%1182, %1183, %1184)
}

def @func_1888() -> (Tensor[(13, 13, ?), bool],) {
  %1185 = @func_1829() /* ty=Tensor[(13, 13, ?), bool] */;
  (%1185,)
}

def @func_6195(%var_6161: Tensor[(7, 2, 1), float64]) -> Tensor[(7, 2, ?), int8] {
  %1186 = cast(%var_6161, dtype="float64") /* ty=Tensor[(7, 2, 1), float64] */;
  %1187 = sigmoid(%1186) /* ty=Tensor[(7, 2, 1), float64] */;
  %1188 = cast(%1187, dtype="int8") /* ty=Tensor[(7, 2, 1), int8] */;
  %1189 = shape_of(%var_6161, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1190 = cast(%var_6161, dtype="int8") /* ty=Tensor[(7, 2, 1), int8] */;
  %1191 = dyn.reshape(%1188, %1189, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  right_shift(%1190, %1191) /* ty=Tensor[(7, 2, ?), int8] */
}

def @func_4878() -> (Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %1192 = @func_2376() /* ty=Tensor[(13, 13, ?), bool] */;
  %1193 = cast(%1192, dtype="float32") /* ty=Tensor[(13, 13, ?), float32] */;
  %1194 = @func_3942() /* ty=(Tensor[(13, 13, ?), float64],) */;
  %1195 = @func_3967() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %1196 = @func_820() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %1197 = asin(%1193) /* ty=Tensor[(13, 13, ?), float32] */;
  %1198 = %1194.0;
  %1199 = @func_4333() /* ty=Tensor[(13, 13, ?), bool] */;
  %1200 = %1195.0;
  %1201 = %1196.0;
  (%1197, %1198, %1199, %1200, %1201)
}

def @func_9663() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, 2), float64], Tensor[(13, 13, ?), int8]) {
  %1202 = @func_510() /* ty=(Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool]) */;
  %1203 = @func_3746() /* ty=(Tensor[(13, 13, 2), float64],) */;
  %1204 = %1203.0;
  %1205 = cast(%1204, dtype="float64") /* ty=Tensor[(13, 13, 2), float64] */;
  %1206 = @func_2952() /* ty=(Tensor[(13, 13, ?), int8], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %1207 = %1202.1;
  %1208 = asin(%1205) /* ty=Tensor[(13, 13, 2), float64] */;
  %1209 = %1206.0;
  (%1207, %1208, %1209)
}

def @func_8087() -> (Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool]) {
  %1210 = @func_5688() /* ty=Tensor[(13, 13, ?), float32] */;
  %1211 = @func_3858() /* ty=Tensor[(13, 13, ?), bool] */;
  (%1210, %1211)
}

def @func_5262() -> Tensor[(13, 13, ?), bool] {
  %1212 = @func_547() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %1212.0
}

def @func_2695() -> (Tensor[(13, 13, 2), float64],) {
  %1213 = @func_1518() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %1214 = %1213.0;
  %1215 = cast(%1214, dtype="float64") /* ty=Tensor[(13, 13, ?), float64] */;
  %1216 = cast(meta[relay.Constant][30] /* ty=Tensor[(13, 13, 2), bool] */, dtype="float64") /* ty=Tensor[(13, 13, 2), float64] */;
  %1217 = minimum(%1215, %1216) /* ty=Tensor[(13, 13, 2), float64] */;
  (%1217,)
}

def @func_15987() -> Tensor[(13, 13, 1), float64] {
  %1218 = @func_8394() /* ty=(Tensor[(13, 13, 1), float64],) */;
  %1218.0
}

def @func_6034() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 10), bool]) {
  %1219 = @func_1759() /* ty=(Tensor[(13, 13, ?), float32], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %1220 = @func_4610() /* ty=(Tensor[(13, 13, 2), float64], Tensor[(13, 13, 10), bool], Tensor[(13, 13, 2), float64]) */;
  %1221 = @func_2376() /* ty=Tensor[(13, 13, ?), bool] */;
  %1222 = %1219.3;
  %1223 = %1220.1;
  (%1221, %1222, %1223)
}

def @func_9727() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %1224 = @func_6002() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), uint32]) */;
  %1225 = %1224.0;
  %1226 = @func_9074() /* ty=Tensor[(13, 13, ?), bool] */;
  (%1225, %1226)
}

def @func_4424() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, 10), int64], Tensor[(13, 130), float32]) {
  %1227 = @func_1464() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %1228 = cast(meta[relay.Constant][31] /* ty=Tensor[(13, 130), float32] */, dtype="float32") /* ty=Tensor[(13, 130), float32] */;
  %1229 = reshape(%1228, newshape=[13, 13, 10]) /* ty=Tensor[(13, 13, 10), float32] */;
  %1230 = @func_2363(%1229) /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 10), int64]) */;
  %1231 = %1227.1;
  %1232 = %1230.1;
  (%1231, %1232, meta[relay.Constant][31] /* ty=Tensor[(13, 130), float32] */)
}

def @func_4964() -> (Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), uint8]) {
  %1233 = @func_510() /* ty=(Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool]) */;
  %1234 = @func_531() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %1235 = @func_2110() /* ty=Tensor[(13, 13, ?), bool] */;
  %1236 = @func_1662() /* ty=(Tensor[(13, 13, 1), float64], Tensor[(13, 13, 1), float64]) */;
  %1237 = %1236.1;
  %1238 = cast(%1237, dtype="uint8") /* ty=Tensor[(13, 13, 1), uint8] */;
  %1239 = shape_of(%1235, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1240 = cast(%1235, dtype="uint8") /* ty=Tensor[(13, 13, ?), uint8] */;
  %1241 = dyn.reshape(%1238, %1239, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1242 = %1233.0;
  %1243 = %1234.0;
  %1244 = bitwise_and(%1240, %1241) /* ty=Tensor[(13, 13, ?), uint8] */;
  (%1242, %1243, %1244)
}

def @func_5688() -> Tensor[(13, 13, ?), float32] {
  %1245 = @func_4466() /* ty=(Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), float32]) */;
  %1245.1
}

def @func_7826(%var_7781: Tensor[(1014, 2), float64], %var_7796: Tensor[(1014, 2), bool]) -> (Tensor[(13, 13, ?), bool], Tensor[(1014, 2), float32], Tensor[(1014, 2), float32]) {
  %1246 = @func_2646() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %1247 = cast(%var_7781, dtype="float64") /* ty=Tensor[(1014, 2), float64] */;
  %1248 = reshape(%1247, newshape=[13, 13, 12]) /* ty=Tensor[(13, 13, 12), float64] */;
  %1249 = @func_6700(%1248) /* ty=Tensor[(13, 13, 12), bool] */;
  %1250 = cast(%1249, dtype="bool") /* ty=Tensor[(13, 13, 12), bool] */;
  %1251 = shape_of(%var_7781, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1252 = cast(%var_7781, dtype="bool") /* ty=Tensor[(1014, 2), bool] */;
  %1253 = dyn.reshape(%1250, %1251, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1254 = logical_and(%1252, %1253) /* ty=Tensor[(1014, 2), bool] */;
  %1255 = cast(%var_7796, dtype="float32") /* ty=Tensor[(1014, 2), float32] */;
  %1256 = shape_of(%1254, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1257 = cast(%1254, dtype="float32") /* ty=Tensor[(1014, 2), float32] */;
  %1258 = dyn.reshape(%1255, %1256, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1259 = cast(%1254, dtype="float64") /* ty=Tensor[(1014, 2), float64] */;
  %1260 = cosh(%1259) /* ty=Tensor[(1014, 2), float64] */;
  %1261 = cast(%1260, dtype="float32") /* ty=Tensor[(1014, 2), float32] */;
  %1262 = cos(%1261) /* ty=Tensor[(1014, 2), float32] */;
  %1263 = cast(%1262, dtype="float32") /* ty=Tensor[(1014, 2), float32] */;
  %1264 = %1246.0;
  %1265 = mod(%1257, %1258) /* ty=Tensor[(1014, 2), float32] */;
  %1266 = tan(%1263) /* ty=Tensor[(1014, 2), float32] */;
  (%1264, %1265, %1266)
}

def @func_7353() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 15), uint64]) {
  %1267 = @func_1167() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %1268 = @func_5363() /* ty=(Tensor[(13, 13, 15), uint64],) */;
  %1269 = @func_3858() /* ty=Tensor[(13, 13, ?), bool] */;
  %1270 = @func_2376() /* ty=Tensor[(13, 13, ?), bool] */;
  %1271 = %1267.1;
  %1272 = %1268.0;
  (%1269, %1270, %1271, %1272)
}

def @func_7692() -> Tensor[(13, 13, ?), bool] {
  %1273 = @func_2646() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %1273.0
}

def @func_1518() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %1274 = @func_531() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %1275 = @func_531() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %1276 = %1274.0;
  %1277 = %1275.0;
  (%1276, %1277)
}

def @func_11487() -> (Tensor[(13, 13, ?), float64], Tensor[(13, 13, 10), int64], Tensor[(13, 13, ?), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 10), int64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %1278 = @func_3942() /* ty=(Tensor[(13, 13, ?), float64],) */;
  %1279 = @func_10887() /* ty=(Tensor[(13, 13, 10), int64],) */;
  %1280 = @func_8597() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %1281 = %1279.0;
  %1282 = cast(%1281, dtype="float32") /* ty=Tensor[(13, 13, 10), float32] */;
  %1283 = reshape(%1282, newshape=[13, 13, 10]) /* ty=Tensor[(13, 13, 10), float32] */;
  %1284 = @func_2363(%1283) /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 10), int64]) */;
  %1285 = @func_3472() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %1286 = @func_10226() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 15), uint64], Tensor[(1, 2535), bool], Tensor[(13, 13, ?), bool]) */;
  %1287 = %1278.0;
  %1288 = @func_6578() /* ty=Tensor[(13, 13, ?), float64] */;
  %1289 = %1280.0;
  %1290 = %1284.1;
  %1291 = %1285.0;
  %1292 = %1286.0;
  (%1287, %1281, %1288, %1289, %1290, %1291, %1292)
}

def @func_14137(%var_14126: Tensor[(11, 14, 15), float32]) -> (Tensor[(11, 14, 15), float32],) {
  %1293 = cast(%var_14126, dtype="float32") /* ty=Tensor[(11, 14, 15), float32] */;
  %1294 = acosh(%1293) /* ty=Tensor[(11, 14, 15), float32] */;
  (%1294,)
}

def @func_11190() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 130), float32]) {
  %1295 = @func_5486() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %1296 = @func_4424() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 10), int64], Tensor[(13, 130), float32]) */;
  %1297 = %1295.1;
  %1298 = %1296.2;
  (%1297, %1298)
}

def @func_9933(%var_9915: Tensor[(2028), float64]) -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 12), bool], Tensor[(2028), float64], Tensor[(13, 13, ?), bool]) {
  %1299 = @func_4672() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %1300 = cast(%var_9915, dtype="float64") /* ty=Tensor[(2028), float64] */;
  %1301 = reshape(%1300, newshape=[13, 13, 12]) /* ty=Tensor[(13, 13, 12), float64] */;
  %1302 = @func_8087() /* ty=(Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool]) */;
  %1303 = @func_2376() /* ty=Tensor[(13, 13, ?), bool] */;
  %1304 = %1299.1;
  %1305 = @func_6700(%1301) /* ty=Tensor[(13, 13, 12), bool] */;
  %1306 = %1302.1;
  (%1303, %1304, %1305, %var_9915, %1306)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_8199(%var_8176: Tensor[(3, 8, 6), float64]) -> (Tensor[(3, 8, 6), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %0 = cast(meta[relay.Constant][0] /* ty=Tensor[(3, 8, 6), float64] */, dtype="float64") /* ty=Tensor[(3, 8, 6), float64] */;
  %1 = shape_of(%var_8176, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2 = cast(%var_8176, dtype="float64") /* ty=Tensor[(3, 8, 6), float64] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %4 = @func_3794() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %5 = @func_4528() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %6 = add(%2, %3) /* ty=Tensor[(3, 8, 6), float64] */;
  %7 = %4.0;
  %8 = %5.0;
  (%6, %7, %8)
}

def @func_1587() -> (Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %9 = @func_780() /* ty=(Tensor[(13, 13, ?), float32],) */;
  %10 = %9.0;
  %11 = cast(%10, dtype="bool") /* ty=Tensor[(13, 13, ?), bool] */;
  %12 = reshape(%11, newshape=[13, 13, 1]) /* ty=Tensor[(13, 13, 1), bool] */;
  %13 = @func_985(%12) /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float64]) */;
  %14 = %13.0;
  %15 = cast(%14, dtype="bool") /* ty=Tensor[(13, 13, ?), bool] */;
  %16 = reshape(%15, newshape=[13, 13, 1]) /* ty=Tensor[(13, 13, 1), bool] */;
  %17 = @func_904(%16) /* ty=(Tensor[(13, 13, ?), uint32], Tensor[(13, 13, 1), float64], Tensor[(13, 13, 1), float64], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %18 = @func_820() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %19 = @func_820() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %20 = @func_820() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %21 = %17.3;
  %22 = %18.0;
  %23 = %19.0;
  %24 = %20.0;
  (%10, %14, %21, %22, %23, %24)
}

def @func_11261(%var_11228: Tensor[(64), uint8], %var_11247: Tensor[(162), float64]) -> (Tensor[(13, 13, 2), float64], Tensor[(13, 13, ?), bool], uint8, Tensor[(64), uint8], Tensor[(3, 9, 6), float64], Tensor[(162), float64]) {
  %25 = @func_3746() /* ty=(Tensor[(13, 13, 2), float64],) */;
  %26 = cast(meta[relay.Constant][1] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %27 = cast(%var_11228, dtype="uint8") /* ty=Tensor[(64), uint8] */;
  %28 = reshape(%26, newshape=[]) /* ty=uint8 */;
  %29 = reshape(%27, newshape=[8, 8, 1]) /* ty=Tensor[(8, 8, 1), uint8] */;
  %30 = @func_6417(%28, %29) /* ty=(Tensor[(8, 8, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(8, 8, 1), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), uint32]) */;
  %31 = cast(%var_11247, dtype="float64") /* ty=Tensor[(162), float64] */;
  %32 = cast(%var_11247, dtype="float64") /* ty=Tensor[(162), float64] */;
  %33 = reshape(%31, newshape=[3, 9, 6]) /* ty=Tensor[(3, 9, 6), float64] */;
  %34 = reshape(%32, newshape=[3, 9, 6]) /* ty=Tensor[(3, 9, 6), float64] */;
  %35 = @func_5958(%33, %34) /* ty=(Tensor[(3, 9, 6), float64],) */;
  %36 = cast(%var_11247, dtype="float64") /* ty=Tensor[(162), float64] */;
  %37 = %25.0;
  %38 = %30.3;
  %39 = %35.0;
  %40 = erf(%36) /* ty=Tensor[(162), float64] */;
  (%37, %38, meta[relay.Constant][1] /* ty=uint8 */, %var_11228, %39, %40)
}

def @func_11732() -> (Tensor[(13, 13, ?), float32],) {
  @func_11730() /* ty=(Tensor[(13, 13, ?), float32],) */
}

def @func_1038() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %45 = fn () -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
    %41 = @func_531() /* ty=(Tensor[(13, 13, ?), bool],) */;
    %42 = @func_531() /* ty=(Tensor[(13, 13, ?), bool],) */;
    %43 = %41.0;
    %44 = %42.0;
    (%43, %44)
  };
  %45() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */
}

def @func_15866() -> (Tensor[(13, 13, ?), float64],) {
  @func_15864() /* ty=(Tensor[(13, 13, ?), float64],) */
}

def @func_5690() -> Tensor[(13, 13, ?), float32] {
  @func_5688() /* ty=Tensor[(13, 13, ?), float32] */
}

def @func_5331() -> Tensor[(13, 13, ?), bool] {
  %47 = fn () -> Tensor[(13, 13, ?), bool] {
    %46 = @func_3472() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
    %46.0
  };
  %47() /* ty=Tensor[(13, 13, ?), bool] */
}

def @func_7936() -> (Tensor[(13, 13, ?), float32],) {
  %50 = fn () -> (Tensor[(13, 13, ?), float32],) {
    %48 = @func_1142() /* ty=(Tensor[(13, 13, ?), float32],) */;
    %49 = %48.0;
    (%49,)
  };
  %50() /* ty=(Tensor[(13, 13, ?), float32],) */
}

def @func_15987() -> Tensor[(13, 13, 1), float64] {
  %51 = @func_8394() /* ty=(Tensor[(13, 13, 1), float64],) */;
  %51.0
}

def @func_7692() -> Tensor[(13, 13, ?), bool] {
  %52 = @func_2646() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %52.0
}

def @func_11101() -> (Tensor[(13, 13, ?), bool],) {
  @func_11099() /* ty=(Tensor[(13, 13, ?), bool],) */
}

def @func_1589() -> (Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  @func_1587() /* ty=(Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */
}

def @func_8698() -> (Tensor[(13, 13, ?), bool],) {
  @func_8696() /* ty=(Tensor[(13, 13, ?), bool],) */
}

def @func_10019() -> Tensor[(13, 13, ?), bool] {
  @func_10017() /* ty=Tensor[(13, 13, ?), bool] */
}

def @func_10532() -> (Tensor[(13, 13, ?), bool],) {
  @func_10530() /* ty=(Tensor[(13, 13, ?), bool],) */
}

def @func_5363() -> (Tensor[(13, 13, 15), uint64],) {
  %53 = @func_4731() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 15), uint64], Tensor[(4, 1, 15), float32], Tensor[(2535), float32], Tensor[(13, 13, ?), bool]) */;
  %54 = %53.2;
  (%54,)
}

def @func_11795(%var_11793: Tensor[(286, 4), float64]) -> (Tensor[(13, 13, ?), bool], Tensor[(13, 8, 11), bool], Tensor[(286, 4), float64]) {
  @func_11792(%var_11793) /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 8, 11), bool], Tensor[(286, 4), float64]) */
}

def @func_11559() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32]) {
  %59 = fn () -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32]) {
    %55 = @func_1587() /* ty=(Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
    %56 = @func_10428() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(1690), float32]) */;
    %57 = %55.3;
    %58 = %56.1;
    (%57, %58)
  };
  %59() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32]) */
}

def @func_3748() -> (Tensor[(13, 13, 2), float64],) {
  @func_3746() /* ty=(Tensor[(13, 13, 2), float64],) */
}

def @func_2544() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool]) {
  %60 = @func_2286() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %61 = @func_1662() /* ty=(Tensor[(13, 13, 1), float64], Tensor[(13, 13, 1), float64]) */;
  %62 = @func_820() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %63 = %60.0;
  %64 = %61.1;
  %65 = %62.0;
  (%63, %64, %65)
}

def @func_12199() -> Tensor[(13, 13, ?), bool] {
  @func_9539() /* ty=Tensor[(13, 13, ?), bool] */
}

def @func_16960() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(2028), float64], Tensor[(13, 13, 10), bool]) {
  %75 = fn () -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(2028), float64], Tensor[(13, 13, 10), bool]) {
    %66 = @func_8087() /* ty=(Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool]) */;
    %67 = cast(meta[relay.Constant][2] /* ty=Tensor[(2028), float64] */, dtype="float64") /* ty=Tensor[(2028), float64] */;
    %68 = reshape(%67, newshape=[2028]) /* ty=Tensor[(2028), float64] */;
    %69 = @func_9933(%68) /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 12), bool], Tensor[(2028), float64], Tensor[(13, 13, ?), bool]) */;
    %70 = @func_4351() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 10), bool], Tensor[(1690), float64]) */;
    %71 = @func_9997() /* ty=Tensor[(13, 13, ?), bool] */;
    %72 = %66.1;
    %73 = %69.0;
    %74 = %70.2;
    (%71, %72, %73, meta[relay.Constant][2] /* ty=Tensor[(2028), float64] */, %74)
  };
  %75() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(2028), float64], Tensor[(13, 13, 10), bool]) */
}

def @func_6888(%var_6862: Tensor[(13, 13, 2), int8]) -> Tensor[(13, 13, 2), uint8] {
  %76 = @func_2623() /* ty=Tensor[(13, 13, ?), int8] */;
  %77 = cast(%76, dtype="uint8") /* ty=Tensor[(13, 13, ?), uint8] */;
  %78 = cast(%var_6862, dtype="uint8") /* ty=Tensor[(13, 13, 2), uint8] */;
  subtract(%77, %78) /* ty=Tensor[(13, 13, 2), uint8] */
}

def @func_17326() -> (Tensor[(13, 13, ?), bool],) {
  %81 = fn () -> (Tensor[(13, 13, ?), bool],) {
    %79 = @func_13835() /* ty=(Tensor[(13, 13, ?), bool],) */;
    %80 = %79.0;
    (%80,)
  };
  %81() /* ty=(Tensor[(13, 13, ?), bool],) */
}

def @func_17104(%var_17068: Tensor[(13, 13, 7), bool]) -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, 7), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 7), float32]) {
  %82 = @func_9820() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %83 = @func_16026() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %84 = %83.0;
  %85 = cast(%84, dtype="bool") /* ty=Tensor[(13, 13, ?), bool] */;
  %86 = cast(%var_17068, dtype="bool") /* ty=Tensor[(13, 13, 7), bool] */;
  %87 = @func_1759() /* ty=(Tensor[(13, 13, ?), float32], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %88 = @func_4381() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %89 = @func_16920() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], uint8, Tensor[(64), uint8]) */;
  %90 = cast(%var_17068, dtype="float32") /* ty=Tensor[(13, 13, 7), float32] */;
  %91 = %82.1;
  %92 = not_equal(%85, %86) /* ty=Tensor[(13, 13, 7), bool] */;
  %93 = %87.3;
  %94 = %88.0;
  %95 = %89.0;
  %96 = atan(%90) /* ty=Tensor[(13, 13, 7), float32] */;
  (%91, %92, %93, %94, %95, %96)
}

def @func_14859() -> (Tensor[(13, 13, ?), uint32],) {
  @func_14857() /* ty=(Tensor[(13, 13, ?), uint32],) */
}

def @func_7457() -> Tensor[(13, 13, ?), bool] {
  %97 = @func_1947() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %97.0
}

def @func_6004() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), uint32]) {
  @func_6002() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), uint32]) */
}

def @func_8088() -> (Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool]) {
  %100 = fn () -> (Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool]) {
    %98 = @func_5688() /* ty=Tensor[(13, 13, ?), float32] */;
    %99 = @func_3858() /* ty=Tensor[(13, 13, ?), bool] */;
    (%98, %99)
  };
  %100() /* ty=(Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool]) */
}

def @func_2625() -> Tensor[(13, 13, ?), int8] {
  @func_2623() /* ty=Tensor[(13, 13, ?), int8] */
}

def @func_16684() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %101 = @func_16590() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %102 = @func_7040() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(4, 1, 15), float32]) */;
  %103 = %101.3;
  %104 = %102.0;
  (%103, %104)
}

def @func_4731() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 15), uint64], Tensor[(4, 1, 15), float32], Tensor[(2535), float32], Tensor[(13, 13, ?), bool]) {
  %105 = @func_547() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %106 = cast(meta[relay.Constant][3] /* ty=Tensor[(2535), bool] */, dtype="bool") /* ty=Tensor[(2535), bool] */;
  %107 = reshape(%106, newshape=[13, 13, 15]) /* ty=Tensor[(13, 13, 15), bool] */;
  %108 = @func_2035(%107) /* ty=(Tensor[(13, 13, 15), uint64],) */;
  %109 = cast(meta[relay.Constant][4] /* ty=Tensor[(4, 1, 15), float64] */, dtype="float64") /* ty=Tensor[(4, 1, 15), float64] */;
  %110 = acosh(%109) /* ty=Tensor[(4, 1, 15), float64] */;
  %111 = cast(%110, dtype="float32") /* ty=Tensor[(4, 1, 15), float32] */;
  %112 = cast(meta[relay.Constant][3] /* ty=Tensor[(2535), bool] */, dtype="float32") /* ty=Tensor[(2535), float32] */;
  %113 = @func_1986() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %114 = %105.0;
  %115 = @func_3430() /* ty=Tensor[(13, 13, ?), bool] */;
  %116 = %108.0;
  %117 = sin(%111) /* ty=Tensor[(4, 1, 15), float32] */;
  %118 = log2(%112) /* ty=Tensor[(2535), float32] */;
  %119 = %113.0;
  (%114, %115, %116, %117, %118, %119)
}

def @func_7443() -> (Tensor[(13, 13, 10), bool], Tensor[(13, 13, ?), bool]) {
  %120 = @func_4610() /* ty=(Tensor[(13, 13, 2), float64], Tensor[(13, 13, 10), bool], Tensor[(13, 13, 2), float64]) */;
  %121 = @func_1247() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), uint32], Tensor[(13, 13, ?), bool]) */;
  %122 = %120.1;
  %123 = %121.0;
  (%122, %123)
}

def @func_6891(%var_6889: Tensor[(13, 13, 2), int8]) -> Tensor[(13, 13, 2), uint8] {
  @func_6888(%var_6889) /* ty=Tensor[(13, 13, 2), uint8] */
}

def @func_12027() -> (Tensor[(13, 13, ?), bool],) {
  @func_12025() /* ty=(Tensor[(13, 13, ?), bool],) */
}

def @func_6064() -> Tensor[(13, 13, ?), bool] {
  %125 = fn () -> Tensor[(13, 13, ?), bool] {
    %124 = @func_3967() /* ty=(Tensor[(13, 13, ?), bool],) */;
    %124.0
  };
  %125() /* ty=Tensor[(13, 13, ?), bool] */
}

def @func_17389() -> Tensor[(13, 13, ?), float64] {
  %127 = fn () -> Tensor[(13, 13, ?), float64] {
    %126 = @func_16387() /* ty=(Tensor[(13, 13, ?), float64],) */;
    %126.0
  };
  %127() /* ty=Tensor[(13, 13, ?), float64] */
}

def @func_16109() -> (Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), float32]) {
  @func_16107() /* ty=(Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), float32]) */
}

def @func_7767(%var_7756: Tensor[(1690), float32]) -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(1690), float32]) {
  %128 = @func_3525() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %129 = @func_4466() /* ty=(Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), float32]) */;
  %130 = cast(%var_7756, dtype="float32") /* ty=Tensor[(1690), float32] */;
  %131 = reshape(%130, newshape=[13, 13, 10]) /* ty=Tensor[(13, 13, 10), float32] */;
  %132 = @func_2363(%131) /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 10), int64]) */;
  %133 = %128.0;
  %134 = %129.0;
  %135 = %132.0;
  (%133, %134, %135, %var_7756)
}

def @func_3131() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %140 = fn () -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
    %136 = @func_2544() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool]) */;
    %137 = @func_610() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
    %138 = %136.2;
    %139 = %137.1;
    (%138, %139)
  };
  %140() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */
}

def @func_4334() -> Tensor[(13, 13, ?), bool] {
  %142 = fn () -> Tensor[(13, 13, ?), bool] {
    %141 = @func_2952() /* ty=(Tensor[(13, 13, ?), int8], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
    %141.1
  };
  %142() /* ty=Tensor[(13, 13, ?), bool] */
}

def @func_11487() -> (Tensor[(13, 13, ?), float64], Tensor[(13, 13, 10), int64], Tensor[(13, 13, ?), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 10), int64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %143 = @func_3942() /* ty=(Tensor[(13, 13, ?), float64],) */;
  %144 = @func_10887() /* ty=(Tensor[(13, 13, 10), int64],) */;
  %145 = @func_8597() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %146 = %144.0;
  %147 = cast(%146, dtype="float32") /* ty=Tensor[(13, 13, 10), float32] */;
  %148 = reshape(%147, newshape=[13, 13, 10]) /* ty=Tensor[(13, 13, 10), float32] */;
  %149 = @func_2363(%148) /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 10), int64]) */;
  %150 = @func_3472() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %151 = @func_10226() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 15), uint64], Tensor[(1, 2535), bool], Tensor[(13, 13, ?), bool]) */;
  %152 = %143.0;
  %153 = @func_6578() /* ty=Tensor[(13, 13, ?), float64] */;
  %154 = %145.0;
  %155 = %149.1;
  %156 = %150.0;
  %157 = %151.0;
  (%152, %146, %153, %154, %155, %156, %157)
}

def @func_9936(%var_9934: Tensor[(2028), float64]) -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 12), bool], Tensor[(2028), float64], Tensor[(13, 13, ?), bool]) {
  @func_9933(%var_9934) /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 12), bool], Tensor[(2028), float64], Tensor[(13, 13, ?), bool]) */
}

def @func_1143() -> (Tensor[(13, 13, ?), float32],) {
  %160 = fn () -> (Tensor[(13, 13, ?), float32],) {
    %158 = @func_780() /* ty=(Tensor[(13, 13, ?), float32],) */;
    %159 = %158.0;
    (%159,)
  };
  %160() /* ty=(Tensor[(13, 13, ?), float32],) */
}

def @func_11191() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 130), float32]) {
  %165 = fn () -> (Tensor[(13, 13, ?), bool], Tensor[(13, 130), float32]) {
    %161 = @func_5486() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
    %162 = @func_4424() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 10), int64], Tensor[(13, 130), float32]) */;
    %163 = %161.1;
    %164 = %162.2;
    (%163, %164)
  };
  %165() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 130), float32]) */
}

def @func_13007() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  @func_13005() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */
}

def @func_3942() -> (Tensor[(13, 13, ?), float64],) {
  %166 = @func_780() /* ty=(Tensor[(13, 13, ?), float32],) */;
  %167 = %166.0;
  %168 = cast(%167, dtype="float64") /* ty=Tensor[(13, 13, ?), float64] */;
  %169 = log10(%168) /* ty=Tensor[(13, 13, ?), float64] */;
  (%169,)
}

def @func_7500() -> Tensor[(13, 13, ?), float32] {
  @func_7498() /* ty=Tensor[(13, 13, ?), float32] */
}

def @func_6847() -> Tensor[(13, 13, ?), bool] {
  %170 = @func_4351() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 10), bool], Tensor[(1690), float64]) */;
  %170.1
}

def @func_7120() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 10), bool], Tensor[(13, 13, 1), float64]) {
  %171 = @func_1414() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), uint32]) */;
  %172 = @func_4610() /* ty=(Tensor[(13, 13, 2), float64], Tensor[(13, 13, 10), bool], Tensor[(13, 13, 2), float64]) */;
  %173 = @func_468() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64]) */;
  %174 = %171.0;
  %175 = @func_4015() /* ty=Tensor[(13, 13, ?), bool] */;
  %176 = %172.1;
  %177 = %173.1;
  (%174, %175, %176, %177)
}

def @func_15504() -> Tensor[(13, 13, ?), uint32] {
  %179 = fn () -> Tensor[(13, 13, ?), uint32] {
    %178 = @func_15208() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), uint32], uint8) */;
    %178.2
  };
  %179() /* ty=Tensor[(13, 13, ?), uint32] */
}

def @func_5793() -> (Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool]) {
  @func_5791() /* ty=(Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool]) */
}

def @func_12838() -> (Tensor[(13, 13, ?), bool],) {
  %180 = @func_1759() /* ty=(Tensor[(13, 13, ?), float32], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %181 = %180.3;
  (%181,)
}

def @func_16326() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool]) {
  %186 = fn () -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool]) {
    %182 = @func_15579() /* ty=(Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool]) */;
    %183 = @func_12199() /* ty=Tensor[(13, 13, ?), bool] */;
    %184 = %182.0;
    %185 = @func_9074() /* ty=Tensor[(13, 13, ?), bool] */;
    (%183, %184, %185)
  };
  %186() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool]) */
}

def @func_14037(%var_14036: Tensor[(13, 13, 1), bool]) -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32]) {
  %196 = fn (%var_13993: Tensor[(13, 13, 1), bool]) -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32]) {
    %187 = @func_13217() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
    %188 = %187.0;
    %189 = cast(%var_13993, dtype="bool") /* ty=Tensor[(13, 13, 1), bool] */;
    %190 = shape_of(%188, dtype="int32") /* ty=Tensor[(3), int32] */;
    %191 = cast(%188, dtype="bool") /* ty=Tensor[(13, 13, ?), bool] */;
    %192 = dyn.reshape(%189, %190, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %193 = @func_780() /* ty=(Tensor[(13, 13, ?), float32],) */;
    %194 = logical_or(%191, %192) /* ty=Tensor[(13, 13, ?), bool] */;
    %195 = %193.0;
    (%194, %195)
  };
  %196(%var_14036) /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32]) */
}

def @func_13870() -> Tensor[(13, 13, ?), bool] {
  @func_13868() /* ty=Tensor[(13, 13, ?), bool] */
}

def @func_9426() -> (Tensor[(13, 13, 2), float64],) {
  @func_9424() /* ty=(Tensor[(13, 13, 2), float64],) */
}

def @func_7487() -> (Tensor[(13, 13, ?), bool],) {
  %197 = @func_3130() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %198 = %197.1;
  (%198,)
}

def @func_16534() -> Tensor[(13, 13, ?), float64] {
  %200 = fn () -> Tensor[(13, 13, ?), float64] {
    %199 = @func_8882() /* ty=(Tensor[(13, 13, ?), float64], Tensor[(13, 13, ?), bool]) */;
    %199.0
  };
  %200() /* ty=Tensor[(13, 13, ?), float64] */
}

def @func_16387() -> (Tensor[(13, 13, ?), float64],) {
  %201 = @func_14933() /* ty=(Tensor[(13, 13, ?), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %202 = %201.0;
  (%202,)
}

def @func_1890() -> (Tensor[(13, 13, ?), bool],) {
  @func_1888() /* ty=(Tensor[(13, 13, ?), bool],) */
}

def @func_14857() -> (Tensor[(13, 13, ?), uint32],) {
  %203 = @func_14375() /* ty=Tensor[(13, 13, ?), uint32] */;
  (%203,)
}

def @func_5962(%var_5960: Tensor[(3, 9, 6), float64], %var_5961: Tensor[(3, 9, 6), float64]) -> (Tensor[(3, 9, 6), float64],) {
  @func_5958(%var_5960, %var_5961) /* ty=(Tensor[(3, 9, 6), float64],) */
}

def @func_6253(%var_6251: Tensor[(9, 10, 8), uint16]) -> (Tensor[(9, 10, 8), uint16], Tensor[(9, 10, 8), float32], Tensor[(13, 13, ?), bool]) {
  @func_6250(%var_6251) /* ty=(Tensor[(9, 10, 8), uint16], Tensor[(9, 10, 8), float32], Tensor[(13, 13, ?), bool]) */
}

def @func_12235(%var_12232: Tensor[(11, 2, 6), int32], %var_12233: Tensor[(11, 2, 6), int32], %var_12234: Tensor[(7), float32]) -> (Tensor[(11, 2, 6), bool], Tensor[(13, 13, ?), float64], Tensor[(7), float32]) {
  @func_12230(%var_12232, %var_12233, %var_12234) /* ty=(Tensor[(11, 2, 6), bool], Tensor[(13, 13, ?), float64], Tensor[(7), float32]) */
}

def @func_17345() -> (Tensor[(13, 13, ?), float32],) {
  @func_17343() /* ty=(Tensor[(13, 13, ?), float32],) */
}

def @func_6596() -> Tensor[(13, 13, ?), bool] {
  %205 = fn () -> Tensor[(13, 13, ?), bool] {
    %204 = @func_5486() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
    %204.1
  };
  %205() /* ty=Tensor[(13, 13, ?), bool] */
}

def @func_11376(%var_11374: Tensor[(13, 130), float32]) -> Tensor[(13, 130), uint8] {
  @func_11373(%var_11374) /* ty=Tensor[(13, 130), uint8] */
}

def @func_10302() -> Tensor[(13, 13, 15), bool] {
  %210 = fn () -> Tensor[(13, 13, 15), bool] {
    %206 = @func_2646() /* ty=(Tensor[(13, 13, ?), bool],) */;
    %207 = %206.0;
    %208 = cast(%207, dtype="bool") /* ty=Tensor[(13, 13, ?), bool] */;
    %209 = cast(meta[relay.Constant][5] /* ty=Tensor[(13, 13, 15), bool] */, dtype="bool") /* ty=Tensor[(13, 13, 15), bool] */;
    logical_and(%208, %209) /* ty=Tensor[(13, 13, 15), bool] */
  };
  %210() /* ty=Tensor[(13, 13, 15), bool] */
}

def @func_780() -> (Tensor[(13, 13, ?), float32],) {
  %211 = @func_610() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %212 = %211.0;
  %213 = cast(%212, dtype="float32") /* ty=Tensor[(13, 13, ?), float32] */;
  %214 = tan(%213) /* ty=Tensor[(13, 13, ?), float32] */;
  (%214,)
}

def @func_8202(%var_8200: Tensor[(3, 8, 6), float64]) -> (Tensor[(3, 8, 6), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  @func_8199(%var_8200) /* ty=(Tensor[(3, 8, 6), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */
}

def @func_13868() -> Tensor[(13, 13, ?), bool] {
  %215 = @func_3525() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %215.0
}

def @func_5365() -> (Tensor[(13, 13, 15), uint64],) {
  @func_5363() /* ty=(Tensor[(13, 13, 15), uint64],) */
}

def @func_16686() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  @func_16684() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */
}

def @func_14139(%var_14138: Tensor[(11, 14, 15), float32]) -> (Tensor[(11, 14, 15), float32],) {
  %218 = fn (%var_14126: Tensor[(11, 14, 15), float32]) -> (Tensor[(11, 14, 15), float32],) {
    %216 = cast(%var_14126, dtype="float32") /* ty=Tensor[(11, 14, 15), float32] */;
    %217 = acosh(%216) /* ty=Tensor[(11, 14, 15), float32] */;
    (%217,)
  };
  %218(%var_14138) /* ty=(Tensor[(11, 14, 15), float32],) */
}

def @func_1518() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %219 = @func_531() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %220 = @func_531() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %221 = %219.0;
  %222 = %220.0;
  (%221, %222)
}

def @func_985(%var_962: Tensor[(13, 13, 1), bool]) -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float64]) {
  %223 = @func_468() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64]) */;
  %224 = @func_468() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64]) */;
  %225 = %224.0;
  %226 = cast(%225, dtype="float32") /* ty=Tensor[(13, 13, ?), float32] */;
  %227 = exp(%226) /* ty=Tensor[(13, 13, ?), float32] */;
  %228 = cast(%227, dtype="float32") /* ty=Tensor[(13, 13, ?), float32] */;
  %229 = asinh(%228) /* ty=Tensor[(13, 13, ?), float32] */;
  %230 = cast(%var_962, dtype="float32") /* ty=Tensor[(13, 13, 1), float32] */;
  %231 = shape_of(%225, dtype="int32") /* ty=Tensor[(3), int32] */;
  %232 = cast(%225, dtype="float32") /* ty=Tensor[(13, 13, ?), float32] */;
  %233 = dyn.reshape(%230, %231, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %234 = floor_mod(%232, %233) /* ty=Tensor[(13, 13, ?), float32] */;
  %235 = cast(%234, dtype="float64") /* ty=Tensor[(13, 13, ?), float64] */;
  %236 = shape_of(%229, dtype="int32") /* ty=Tensor[(3), int32] */;
  %237 = cast(%229, dtype="float64") /* ty=Tensor[(13, 13, ?), float64] */;
  %238 = dyn.reshape(%235, %236, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %239 = %223.0;
  %240 = power(%237, %238) /* ty=Tensor[(13, 13, ?), float64] */;
  (%239, %240)
}

def @func_5215() -> Tensor[(13, 13, ?), float32] {
  %242 = fn () -> Tensor[(13, 13, ?), float32] {
    %241 = @func_780() /* ty=(Tensor[(13, 13, ?), float32],) */;
    %241.0
  };
  %242() /* ty=Tensor[(13, 13, ?), float32] */
}

def @func_15161() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  @func_15159() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */
}

def @func_13028() -> (Tensor[(13, 13, ?), bool],) {
  %244 = fn () -> (Tensor[(13, 13, ?), bool],) {
    %243 = @func_3011() /* ty=Tensor[(13, 13, ?), bool] */;
    (%243,)
  };
  %244() /* ty=(Tensor[(13, 13, ?), bool],) */
}

def @func_12537() -> (Tensor[(13, 13, ?), bool],) {
  @func_12535() /* ty=(Tensor[(13, 13, ?), bool],) */
}

def @func_4351() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 10), bool], Tensor[(1690), float64]) {
  %245 = @func_531() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %246 = @func_2646() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %247 = cast(meta[relay.Constant][6] /* ty=Tensor[(1690), float64] */, dtype="float64") /* ty=Tensor[(1690), float64] */;
  %248 = reshape(%247, newshape=[13, 13, 10]) /* ty=Tensor[(13, 13, 10), float64] */;
  %249 = @func_1490(%248) /* ty=(Tensor[(13, 13, 10), bool],) */;
  %250 = %245.0;
  %251 = %246.0;
  %252 = %249.0;
  (%250, %251, %252, meta[relay.Constant][6] /* ty=Tensor[(1690), float64] */)
}

def @func_10226() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, 15), uint64], Tensor[(1, 2535), bool], Tensor[(13, 13, ?), bool]) {
  %253 = @func_7443() /* ty=(Tensor[(13, 13, 10), bool], Tensor[(13, 13, ?), bool]) */;
  %254 = cast(meta[relay.Constant][7] /* ty=Tensor[(1, 2535), bool] */, dtype="bool") /* ty=Tensor[(1, 2535), bool] */;
  %255 = reshape(%254, newshape=[13, 13, 15]) /* ty=Tensor[(13, 13, 15), bool] */;
  %256 = @func_2035(%255) /* ty=(Tensor[(13, 13, 15), uint64],) */;
  %257 = @func_3472() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %258 = %253.1;
  %259 = %256.0;
  %260 = %257.0;
  (%258, %259, meta[relay.Constant][7] /* ty=Tensor[(1, 2535), bool] */, %260)
}

def @func_5264() -> Tensor[(13, 13, ?), bool] {
  @func_5262() /* ty=Tensor[(13, 13, ?), bool] */
}

def @func_12646() -> Tensor[(13, 13, ?), bool] {
  %262 = fn () -> Tensor[(13, 13, ?), bool] {
    %261 = @func_11632() /* ty=(Tensor[(13, 13, ?), bool],) */;
    %261.0
  };
  %262() /* ty=Tensor[(13, 13, ?), bool] */
}

def @func_1248() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), uint32], Tensor[(13, 13, ?), bool]) {
  %277 = fn () -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), uint32], Tensor[(13, 13, ?), bool]) {
    %263 = @func_468() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64]) */;
    %264 = %263.0;
    %265 = cast(%264, dtype="bool") /* ty=Tensor[(13, 13, ?), bool] */;
    %266 = reshape(%265, newshape=[13, 13, 1]) /* ty=Tensor[(13, 13, 1), bool] */;
    %267 = @func_904(%266) /* ty=(Tensor[(13, 13, ?), uint32], Tensor[(13, 13, 1), float64], Tensor[(13, 13, 1), float64], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
    %268 = cast(%264, dtype="float32") /* ty=Tensor[(13, 13, ?), float32] */;
    %269 = cosh(%268) /* ty=Tensor[(13, 13, ?), float32] */;
    %270 = cast(%269, dtype="bool") /* ty=Tensor[(13, 13, ?), bool] */;
    %271 = reshape(%270, newshape=[13, 13, 1]) /* ty=Tensor[(13, 13, 1), bool] */;
    %272 = @func_904(%271) /* ty=(Tensor[(13, 13, ?), uint32], Tensor[(13, 13, 1), float64], Tensor[(13, 13, 1), float64], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
    %273 = @func_820() /* ty=(Tensor[(13, 13, ?), bool],) */;
    %274 = %267.5;
    %275 = %272.0;
    %276 = %273.0;
    (%274, %269, %275, %276)
  };
  %277() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), uint32], Tensor[(13, 13, ?), bool]) */
}

def @func_10888() -> (Tensor[(13, 13, 10), int64],) {
  %280 = fn () -> (Tensor[(13, 13, 10), int64],) {
    %278 = @func_4424() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 10), int64], Tensor[(13, 130), float32]) */;
    %279 = %278.1;
    (%279,)
  };
  %280() /* ty=(Tensor[(13, 13, 10), int64],) */
}

def @func_1798() -> (Tensor[(13, 13, ?), float32],) {
  %281 = @func_610() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %282 = %281.0;
  %283 = cast(%282, dtype="float32") /* ty=Tensor[(13, 13, ?), float32] */;
  %284 = rsqrt(%283) /* ty=Tensor[(13, 13, ?), float32] */;
  (%284,)
}

def @func_7459() -> Tensor[(13, 13, ?), bool] {
  @func_7457() /* ty=Tensor[(13, 13, ?), bool] */
}

def @func_13005() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %285 = @func_4351() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 10), bool], Tensor[(1690), float64]) */;
  %286 = @func_8948() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %287 = %285.0;
  %288 = %286.0;
  (%287, %288)
}

def @func_8356() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %289 = @func_5119() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float64]) */;
  %290 = @func_7040() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(4, 1, 15), float32]) */;
  %291 = %289.1;
  %292 = %290.0;
  (%291, %292)
}

def @func_9053() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  @func_9051() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */
}

def @func_10953(%var_10951: int8, %var_10952: Tensor[(4, 10, 1), int8]) -> (Tensor[(4, 10, 1), int8],) {
  %296 = fn (%var_10938: int8, %var_10939: Tensor[(4, 10, 1), int8]) -> (Tensor[(4, 10, 1), int8],) {
    %293 = cast(%var_10938, dtype="int8") /* ty=int8 */;
    %294 = cast(%var_10939, dtype="int8") /* ty=Tensor[(4, 10, 1), int8] */;
    %295 = add(%293, %294) /* ty=Tensor[(4, 10, 1), int8] */;
    (%295,)
  };
  %296(%var_10951, %var_10952) /* ty=(Tensor[(4, 10, 1), int8],) */
}

def @func_16389() -> (Tensor[(13, 13, ?), float64],) {
  @func_16387() /* ty=(Tensor[(13, 13, ?), float64],) */
}

def @func_4434() -> (Tensor[(13, 13, ?), bool],) {
  @func_4432() /* ty=(Tensor[(13, 13, ?), bool],) */
}

def @func_14993() -> Tensor[(13, 13, ?), bool] {
  @func_9539() /* ty=Tensor[(13, 13, ?), bool] */
}

def @func_4201(%var_4200: Tensor[(7), float32]) -> (Tensor[(13, 13, ?), float64], Tensor[(1, 1, 7), float32], Tensor[(7), float32], Tensor[(13, 13, ?), bool]) {
  %303 = fn (%var_4194: Tensor[(7), float32]) -> (Tensor[(13, 13, ?), float64], Tensor[(1, 1, 7), float32], Tensor[(7), float32], Tensor[(13, 13, ?), bool]) {
    %297 = cast(%var_4194, dtype="float32") /* ty=Tensor[(7), float32] */;
    %298 = reshape(%297, newshape=[1, 1, 7]) /* ty=Tensor[(1, 1, 7), float32] */;
    %299 = @func_3073() /* ty=(Tensor[(13, 13, ?), int8], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
    %300 = @func_3208() /* ty=Tensor[(13, 13, ?), float64] */;
    %301 = @func_3417(%298) /* ty=Tensor[(1, 1, 7), float32] */;
    %302 = %299.2;
    (%300, %301, %var_4194, %302)
  };
  %303(%var_4200) /* ty=(Tensor[(13, 13, ?), float64], Tensor[(1, 1, 7), float32], Tensor[(7), float32], Tensor[(13, 13, ?), bool]) */
}

def @func_11373(%var_11365: Tensor[(13, 130), float32]) -> Tensor[(13, 130), uint8] {
  %304 = @func_11190() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 130), float32]) */;
  %305 = %304.1;
  %306 = cast(%var_11365, dtype="uint8") /* ty=Tensor[(13, 130), uint8] */;
  %307 = shape_of(%305, dtype="int32") /* ty=Tensor[(2), int32] */;
  %308 = cast(%305, dtype="uint8") /* ty=Tensor[(13, 130), uint8] */;
  %309 = dyn.reshape(%306, %307, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  bitwise_xor(%308, %309) /* ty=Tensor[(13, 130), uint8] */
}

def @func_11633() -> (Tensor[(13, 13, ?), bool],) {
  %312 = fn () -> (Tensor[(13, 13, ?), bool],) {
    %310 = @func_1947() /* ty=(Tensor[(13, 13, ?), bool],) */;
    %311 = %310.0;
    (%311,)
  };
  %312() /* ty=(Tensor[(13, 13, ?), bool],) */
}

def @func_4612() -> (Tensor[(13, 13, 2), float64], Tensor[(13, 13, 10), bool], Tensor[(13, 13, 2), float64]) {
  @func_4610() /* ty=(Tensor[(13, 13, 2), float64], Tensor[(13, 13, 10), bool], Tensor[(13, 13, 2), float64]) */
}

def @func_12363() -> (Tensor[(13, 13, ?), uint32], Tensor[(13, 13, 1), float64]) {
  %326 = fn () -> (Tensor[(13, 13, ?), uint32], Tensor[(13, 13, 1), float64]) {
    %313 = @func_4432() /* ty=(Tensor[(13, 13, ?), bool],) */;
    %314 = %313.0;
    %315 = @func_2169() /* ty=(Tensor[(13, 13, ?), bool],) */;
    %316 = %315.0;
    %317 = cast(%316, dtype="uint32") /* ty=Tensor[(13, 13, ?), uint32] */;
    %318 = shape_of(%314, dtype="int32") /* ty=Tensor[(3), int32] */;
    %319 = cast(%314, dtype="uint32") /* ty=Tensor[(13, 13, ?), uint32] */;
    %320 = dyn.reshape(%317, %318, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %321 = cast(%314, dtype="bool") /* ty=Tensor[(13, 13, ?), bool] */;
    %322 = reshape(%321, newshape=[13, 13, 1]) /* ty=Tensor[(13, 13, 1), bool] */;
    %323 = @func_904(%322) /* ty=(Tensor[(13, 13, ?), uint32], Tensor[(13, 13, 1), float64], Tensor[(13, 13, 1), float64], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
    %324 = right_shift(%319, %320) /* ty=Tensor[(13, 13, ?), uint32] */;
    %325 = %323.2;
    (%324, %325)
  };
  %326() /* ty=(Tensor[(13, 13, ?), uint32], Tensor[(13, 13, 1), float64]) */
}

def @func_13380() -> Tensor[(13, 13, ?), bool] {
  %327 = @func_1947() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %327.0
}

def @func_821() -> (Tensor[(13, 13, ?), bool],) {
  %330 = fn () -> (Tensor[(13, 13, ?), bool],) {
    %328 = @func_610() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
    %329 = %328.1;
    (%329,)
  };
  %330() /* ty=(Tensor[(13, 13, ?), bool],) */
}

def @func_2110() -> Tensor[(13, 13, ?), bool] {
  %331 = @func_1947() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %331.0
}

def @func_13219() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  @func_13217() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */
}

def @func_11310() -> (Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool]) {
  %332 = @func_10507() /* ty=(Tensor[(13, 13, ?), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool]) */;
  %333 = @func_4878() /* ty=(Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %334 = @func_11190() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 130), float32]) */;
  %335 = %332.2;
  %336 = %333.0;
  %337 = %334.0;
  (%335, %336, %337)
}

def @func_14099() -> (Tensor[(13, 13, ?), bool],) {
  @func_14097() /* ty=(Tensor[(13, 13, ?), bool],) */
}

def @func_9177() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %338 = @func_3794() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %339 = @func_1888() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %340 = %338.1;
  %341 = %339.0;
  (%340, %341)
}

def @func_8882() -> (Tensor[(13, 13, ?), float64], Tensor[(13, 13, ?), bool]) {
  %342 = @func_3967() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %343 = @func_6578() /* ty=Tensor[(13, 13, ?), float64] */;
  %344 = %342.0;
  (%343, %344)
}

def @func_15149() -> (Tensor[(13, 13, ?), float32],) {
  @func_15147() /* ty=(Tensor[(13, 13, ?), float32],) */
}

def @func_14337() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %354 = fn () -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
    %345 = @func_13217() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
    %346 = @func_8051() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), uint32], Tensor[(13, 13, ?), bool]) */;
    %347 = @func_9051() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
    %348 = @func_3073() /* ty=(Tensor[(13, 13, ?), int8], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
    %349 = %345.1;
    %350 = %346.0;
    %351 = %347.0;
    %352 = @func_9074() /* ty=Tensor[(13, 13, ?), bool] */;
    %353 = %348.1;
    (%349, %350, %351, %352, %353)
  };
  %354() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */
}

def @func_9424() -> (Tensor[(13, 13, 2), float64],) {
  %355 = @func_8266() /* ty=Tensor[(13, 13, 2), float64] */;
  (%355,)
}

def @func_17243() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %356 = @func_12535() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %357 = %356.0;
  %358 = @func_12199() /* ty=Tensor[(13, 13, ?), bool] */;
  (%357, %358)
}

def @func_17272() -> Tensor[(13, 13, 10), float64] {
  @func_17270() /* ty=Tensor[(13, 13, 10), float64] */
}

def @func_16627(%var_16626: Tensor[(13, 13, 7), bool]) -> Tensor[(13, 13, 7), bool] {
  %363 = fn (%var_16617: Tensor[(13, 13, 7), bool]) -> Tensor[(13, 13, 7), bool] {
    %359 = @func_1947() /* ty=(Tensor[(13, 13, ?), bool],) */;
    %360 = %359.0;
    %361 = cast(%360, dtype="bool") /* ty=Tensor[(13, 13, ?), bool] */;
    %362 = cast(%var_16617, dtype="bool") /* ty=Tensor[(13, 13, 7), bool] */;
    greater_equal(%361, %362) /* ty=Tensor[(13, 13, 7), bool] */
  };
  %363(%var_16626) /* ty=Tensor[(13, 13, 7), bool] */
}

def @func_725() -> (Tensor[(13, 13, 1), float64],) {
  %364 = @func_468() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64]) */;
  %365 = %364.1;
  (%365,)
}

def @func_4466() -> (Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), float32]) {
  %366 = @func_510() /* ty=(Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool]) */;
  %367 = @func_1798() /* ty=(Tensor[(13, 13, ?), float32],) */;
  %368 = %366.0;
  %369 = %367.0;
  (%368, %369)
}

def @func_10530() -> (Tensor[(13, 13, ?), bool],) {
  %370 = @func_5119() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float64]) */;
  %371 = %370.0;
  (%371,)
}

def @func_16882() -> (Tensor[(13, 13, ?), float64], Tensor[(13, 13, ?), bool]) {
  %372 = @func_3942() /* ty=(Tensor[(13, 13, ?), float64],) */;
  %373 = %372.0;
  %374 = @func_2110() /* ty=Tensor[(13, 13, ?), bool] */;
  (%373, %374)
}

def @func_1415() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), uint32]) {
  %388 = fn () -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), uint32]) {
    %375 = @func_1167() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
    %376 = @func_1142() /* ty=(Tensor[(13, 13, ?), float32],) */;
    %377 = %376.0;
    %378 = cast(%377, dtype="bool") /* ty=Tensor[(13, 13, ?), bool] */;
    %379 = reshape(%378, newshape=[13, 13, 1]) /* ty=Tensor[(13, 13, 1), bool] */;
    %380 = @func_904(%379) /* ty=(Tensor[(13, 13, ?), uint32], Tensor[(13, 13, 1), float64], Tensor[(13, 13, 1), float64], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
    %381 = %380.1;
    %382 = cast(%377, dtype="uint32") /* ty=Tensor[(13, 13, ?), uint32] */;
    %383 = shape_of(%381, dtype="int32") /* ty=Tensor[(3), int32] */;
    %384 = cast(%381, dtype="uint32") /* ty=Tensor[(13, 13, 1), uint32] */;
    %385 = dyn.reshape(%382, %383, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %386 = %375.1;
    %387 = logical_xor(%384, %385) /* ty=Tensor[(13, 13, ?), uint32] */;
    (%386, %387)
  };
  %388() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), uint32]) */
}

def @func_16920() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], uint8, Tensor[(64), uint8]) {
  %389 = @func_12025() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %390 = cast(meta[relay.Constant][8] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %391 = cast(meta[relay.Constant][9] /* ty=Tensor[(64), uint8] */, dtype="uint8") /* ty=Tensor[(64), uint8] */;
  %392 = reshape(%390, newshape=[]) /* ty=uint8 */;
  %393 = reshape(%391, newshape=[8, 8, 1]) /* ty=Tensor[(8, 8, 1), uint8] */;
  %394 = @func_6417(%392, %393) /* ty=(Tensor[(8, 8, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(8, 8, 1), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), uint32]) */;
  %395 = %389.0;
  %396 = %394.1;
  (%395, %396, meta[relay.Constant][8] /* ty=uint8 */, meta[relay.Constant][9] /* ty=Tensor[(64), uint8] */)
}

def @func_6524() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32], Tensor[(13, 13, 1), float64]) {
  %397 = @func_2169() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %398 = @func_780() /* ty=(Tensor[(13, 13, ?), float32],) */;
  %399 = @func_510() /* ty=(Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool]) */;
  %400 = %397.0;
  %401 = @func_5735() /* ty=Tensor[(13, 13, ?), bool] */;
  %402 = %398.0;
  %403 = %399.0;
  (%400, %401, %402, %403)
}

def @func_15362(%var_15351: Tensor[(3, 12, 11), float32]) -> (Tensor[(3, 12, 11), float32], Tensor[(3, 12, 11), float32]) {
  %404 = cast(%var_15351, dtype="float32") /* ty=Tensor[(3, 12, 11), float32] */;
  %405 = cast(%var_15351, dtype="float32") /* ty=Tensor[(3, 12, 11), float32] */;
  %406 = log(%404) /* ty=Tensor[(3, 12, 11), float32] */;
  %407 = exp(%405) /* ty=Tensor[(3, 12, 11), float32] */;
  (%406, %407)
}

def @func_15909(%var_15879: Tensor[(14, 2, 13), float32]) -> (Tensor[(13, 13, ?), bool], Tensor[(14, 2, 13), bool], Tensor[(13, 13, ?), uint32]) {
  %408 = @func_12586() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %409 = cast(%var_15879, dtype="float32") /* ty=Tensor[(14, 2, 13), float32] */;
  %410 = tan(%409) /* ty=Tensor[(14, 2, 13), float32] */;
  %411 = cast(%var_15879, dtype="bool") /* ty=Tensor[(14, 2, 13), bool] */;
  %412 = shape_of(%410, dtype="int32") /* ty=Tensor[(3), int32] */;
  %413 = cast(%410, dtype="bool") /* ty=Tensor[(14, 2, 13), bool] */;
  %414 = dyn.reshape(%411, %412, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %415 = %408.0;
  %416 = greater_equal(%413, %414) /* ty=Tensor[(14, 2, 13), bool] */;
  %417 = @func_15503() /* ty=Tensor[(13, 13, ?), uint32] */;
  (%415, %416, %417)
}

def @func_1663() -> (Tensor[(13, 13, 1), float64], Tensor[(13, 13, 1), float64]) {
  %422 = fn () -> (Tensor[(13, 13, 1), float64], Tensor[(13, 13, 1), float64]) {
    %418 = @func_468() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64]) */;
    %419 = @func_468() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64]) */;
    %420 = %418.1;
    %421 = %419.1;
    (%420, %421)
  };
  %422() /* ty=(Tensor[(13, 13, 1), float64], Tensor[(13, 13, 1), float64]) */
}

def @func_14750() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64]) {
  @func_14748() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64]) */
}

def @func_5688() -> Tensor[(13, 13, ?), float32] {
  %423 = @func_4466() /* ty=(Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), float32]) */;
  %423.1
}

def @func_9179() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  @func_9177() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */
}

def @func_13382() -> Tensor[(13, 13, ?), bool] {
  @func_13380() /* ty=Tensor[(13, 13, ?), bool] */
}

def @func_15832() -> (Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %430 = fn () -> (Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
    %424 = @func_8503() /* ty=(Tensor[(13, 13, ?), float32],) */;
    %425 = @func_15314() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), uint32]) */;
    %426 = @func_6096() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
    %427 = %424.0;
    %428 = %425.2;
    %429 = %426.1;
    (%427, %428, %429)
  };
  %430() /* ty=(Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */
}

def @func_17369() -> (Tensor[(13, 13, ?), bool],) {
  %433 = fn () -> (Tensor[(13, 13, ?), bool],) {
    %431 = @func_6096() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
    %432 = %431.0;
    (%432,)
  };
  %433() /* ty=(Tensor[(13, 13, ?), bool],) */
}

def @func_14933() -> (Tensor[(13, 13, ?), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %434 = @func_4878() /* ty=(Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %435 = @func_2646() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %436 = @func_1759() /* ty=(Tensor[(13, 13, ?), float32], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %437 = %434.1;
  %438 = %435.0;
  %439 = %436.4;
  (%437, %438, %439)
}

def @func_2378() -> Tensor[(13, 13, ?), bool] {
  @func_2376() /* ty=Tensor[(13, 13, ?), bool] */
}

def @func_13104(%var_13102: uint32, %var_13103: Tensor[(6, 9, 12), uint32]) -> (Tensor[(6, 9, 12), bool], Tensor[(6, 9, 12), int8]) {
  @func_13100(%var_13102, %var_13103) /* ty=(Tensor[(6, 9, 12), bool], Tensor[(6, 9, 12), int8]) */
}

def @func_4017() -> Tensor[(13, 13, ?), bool] {
  @func_4015() /* ty=Tensor[(13, 13, ?), bool] */
}

def @func_2623() -> Tensor[(13, 13, ?), int8] {
  %440 = @func_1247() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), uint32], Tensor[(13, 13, ?), bool]) */;
  %441 = %440.3;
  %442 = @func_1167() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %443 = %442.1;
  %444 = cast(%443, dtype="int8") /* ty=Tensor[(13, 13, ?), int8] */;
  %445 = shape_of(%441, dtype="int32") /* ty=Tensor[(3), int32] */;
  %446 = cast(%441, dtype="int8") /* ty=Tensor[(13, 13, ?), int8] */;
  %447 = dyn.reshape(%444, %445, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  left_shift(%446, %447) /* ty=Tensor[(13, 13, ?), int8] */
}

def @func_12587() -> (Tensor[(13, 13, ?), bool],) {
  %450 = fn () -> (Tensor[(13, 13, ?), bool],) {
    %448 = @func_2985() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), int8]) */;
    %449 = %448.0;
    (%449,)
  };
  %450() /* ty=(Tensor[(13, 13, ?), bool],) */
}

def @func_17482() -> Tensor[(13, 13, 10), bool] {
  %451 = @func_6034() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 10), bool]) */;
  %451.2
}

def @func_8839() -> (Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool]) {
  %458 = fn () -> (Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool]) {
    %452 = @func_5791() /* ty=(Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool]) */;
    %453 = @func_6763() /* ty=(Tensor[(13, 13, ?), float32],) */;
    %454 = @func_1167() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
    %455 = %452.0;
    %456 = %453.0;
    %457 = %454.0;
    (%455, %456, %457)
  };
  %458() /* ty=(Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool]) */
}

def @func_8696() -> (Tensor[(13, 13, ?), bool],) {
  %459 = @func_2376() /* ty=Tensor[(13, 13, ?), bool] */;
  (%459,)
}

def @func_13302() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 2), float64]) {
  %465 = fn () -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 2), float64]) {
    %460 = @func_2169() /* ty=(Tensor[(13, 13, ?), bool],) */;
    %461 = @func_468() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64]) */;
    %462 = %460.0;
    %463 = %461.0;
    %464 = @func_6795() /* ty=Tensor[(13, 13, 2), float64] */;
    (%462, %463, %464)
  };
  %465() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 2), float64]) */
}

def @func_470() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64]) {
  @func_468() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64]) */
}

def @func_3859() -> Tensor[(13, 13, ?), bool] {
  %467 = fn () -> Tensor[(13, 13, ?), bool] {
    %466 = @func_1414() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), uint32]) */;
    %466.0
  };
  %467() /* ty=Tensor[(13, 13, ?), bool] */
}

def @func_4432() -> (Tensor[(13, 13, ?), bool],) {
  %468 = @func_820() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %469 = %468.0;
  (%469,)
}

def @func_4069() -> (Tensor[(13, 13, ?), bool],) {
  @func_4067() /* ty=(Tensor[(13, 13, ?), bool],) */
}

def @func_9821() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %474 = fn () -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
    %470 = @func_1888() /* ty=(Tensor[(13, 13, ?), bool],) */;
    %471 = @func_820() /* ty=(Tensor[(13, 13, ?), bool],) */;
    %472 = %470.0;
    %473 = %471.0;
    (%472, %473)
  };
  %474() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */
}

def @func_13835() -> (Tensor[(13, 13, ?), bool],) {
  %475 = @func_3794() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %476 = %475.0;
  (%476,)
}

def @func_17203(%var_17201: Tensor[(1, 6, 6), float64], %var_17202: Tensor[(10, 6, 6), float64]) -> (Tensor[(10, 6, 6), bool], Tensor[(10, 6, 6), float32], Tensor[(13, 13, ?), bool]) {
  %484 = fn (%var_17151: Tensor[(1, 6, 6), float64], %var_17152: Tensor[(10, 6, 6), float64]) -> (Tensor[(10, 6, 6), bool], Tensor[(10, 6, 6), float32], Tensor[(13, 13, ?), bool]) {
    %477 = cast(%var_17151, dtype="bool") /* ty=Tensor[(1, 6, 6), bool] */;
    %478 = cast(%var_17152, dtype="bool") /* ty=Tensor[(10, 6, 6), bool] */;
    %479 = cast(%var_17152, dtype="float32") /* ty=Tensor[(10, 6, 6), float32] */;
    %480 = @func_3967() /* ty=(Tensor[(13, 13, ?), bool],) */;
    %481 = not_equal(%477, %478) /* ty=Tensor[(10, 6, 6), bool] */;
    %482 = log10(%479) /* ty=Tensor[(10, 6, 6), float32] */;
    %483 = %480.0;
    (%481, %482, %483)
  };
  %484(%var_17201, %var_17202) /* ty=(Tensor[(10, 6, 6), bool], Tensor[(10, 6, 6), float32], Tensor[(13, 13, ?), bool]) */
}

def @func_8770(%var_8769: Tensor[(1690), float32]) -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(1690), float32]) {
  %491 = fn (%var_8744: Tensor[(1690), float32]) -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(1690), float32]) {
    %485 = @func_1888() /* ty=(Tensor[(13, 13, ?), bool],) */;
    %486 = cast(%var_8744, dtype="float32") /* ty=Tensor[(1690), float32] */;
    %487 = reshape(%486, newshape=[1690]) /* ty=Tensor[(1690), float32] */;
    %488 = @func_7767(%487) /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(1690), float32]) */;
    %489 = %485.0;
    %490 = %488.0;
    (%489, %490, %var_8744)
  };
  %491(%var_8769) /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(1690), float32]) */
}

def @func_6526() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32], Tensor[(13, 13, 1), float64]) {
  @func_6524() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32], Tensor[(13, 13, 1), float64]) */
}

def @func_4425() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, 10), int64], Tensor[(13, 130), float32]) {
  %498 = fn () -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, 10), int64], Tensor[(13, 130), float32]) {
    %492 = @func_1464() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
    %493 = cast(meta[relay.Constant][10] /* ty=Tensor[(13, 130), float32] */, dtype="float32") /* ty=Tensor[(13, 130), float32] */;
    %494 = reshape(%493, newshape=[13, 13, 10]) /* ty=Tensor[(13, 13, 10), float32] */;
    %495 = @func_2363(%494) /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 10), int64]) */;
    %496 = %492.1;
    %497 = %495.1;
    (%496, %497, meta[relay.Constant][10] /* ty=Tensor[(13, 130), float32] */)
  };
  %498() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 10), int64], Tensor[(13, 130), float32]) */
}

def @func_4468() -> (Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), float32]) {
  @func_4466() /* ty=(Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), float32]) */
}

def @func_2112() -> Tensor[(13, 13, ?), bool] {
  @func_2110() /* ty=Tensor[(13, 13, ?), bool] */
}

def @func_6250(%var_6200: Tensor[(9, 10, 8), uint16]) -> (Tensor[(9, 10, 8), uint16], Tensor[(9, 10, 8), float32], Tensor[(13, 13, ?), bool]) {
  %499 = cast(%var_6200, dtype="uint16") /* ty=Tensor[(9, 10, 8), uint16] */;
  %500 = shape_of(meta[relay.Constant][11] /* ty=Tensor[(9, 10, 8), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %501 = cast(meta[relay.Constant][11] /* ty=Tensor[(9, 10, 8), uint16] */, dtype="uint16") /* ty=Tensor[(9, 10, 8), uint16] */;
  %502 = dyn.reshape(%499, %500, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %503 = cast(%var_6200, dtype="float32") /* ty=Tensor[(9, 10, 8), float32] */;
  %504 = @func_2544() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool]) */;
  %505 = right_shift(%501, %502) /* ty=Tensor[(9, 10, 8), uint16] */;
  %506 = log10(%503) /* ty=Tensor[(9, 10, 8), float32] */;
  %507 = %504.2;
  (%505, %506, %507)
}

def @func_3073() -> (Tensor[(13, 13, ?), int8], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %508 = @func_1037() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %509 = @func_2623() /* ty=Tensor[(13, 13, ?), int8] */;
  %510 = @func_2376() /* ty=Tensor[(13, 13, ?), bool] */;
  %511 = %508.0;
  (%509, %510, %511)
}

def @func_16107() -> (Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), float32]) {
  %512 = @func_13489() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool]) */;
  %513 = @func_5688() /* ty=Tensor[(13, 13, ?), float32] */;
  %514 = %512.1;
  (%513, %514)
}

def @func_11792(%var_11774: Tensor[(286, 4), float64]) -> (Tensor[(13, 13, ?), bool], Tensor[(13, 8, 11), bool], Tensor[(286, 4), float64]) {
  %515 = @func_8696() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %516 = cast(%var_11774, dtype="float64") /* ty=Tensor[(286, 4), float64] */;
  %517 = reshape(%516, newshape=[13, 8, 11]) /* ty=Tensor[(13, 8, 11), float64] */;
  %518 = @func_9586(%517) /* ty=(Tensor[(13, 8, 11), bool], Tensor[(13, 13, ?), bool]) */;
  %519 = %515.0;
  %520 = %518.0;
  (%519, %520, %var_11774)
}

def @func_4642() -> Tensor[(13, 13, 1), float64] {
  @func_4640() /* ty=Tensor[(13, 13, 1), float64] */
}

def @func_16090(%var_16089: Tensor[(13, 13, 12), bool]) -> (Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 12), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %532 = fn (%var_16070: Tensor[(13, 13, 12), bool]) -> (Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 12), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
    %521 = @func_15147() /* ty=(Tensor[(13, 13, ?), float32],) */;
    %522 = @func_10251() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
    %523 = @func_5735() /* ty=Tensor[(13, 13, ?), bool] */;
    %524 = cast(%523, dtype="float64") /* ty=Tensor[(13, 13, ?), float64] */;
    %525 = cast(%var_16070, dtype="float64") /* ty=Tensor[(13, 13, 12), float64] */;
    %526 = @func_13980() /* ty=(Tensor[(13, 13, ?), bool],) */;
    %527 = %521.0;
    %528 = %522.0;
    %529 = mod(%524, %525) /* ty=Tensor[(13, 13, 12), float64] */;
    %530 = %526.0;
    %531 = @func_7716() /* ty=Tensor[(13, 13, ?), bool] */;
    (%527, %528, %529, %530, %531)
  };
  %532(%var_16089) /* ty=(Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 12), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */
}

def @func_1167() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %533 = @func_1037() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %534 = @func_531() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %535 = %533.1;
  %536 = %534.0;
  (%535, %536)
}

def @func_5008() -> (Tensor[(13, 13, ?), float64], Tensor[(13, 13, ?), bool]) {
  %540 = fn () -> (Tensor[(13, 13, ?), float64], Tensor[(13, 13, ?), bool]) {
    %537 = @func_3942() /* ty=(Tensor[(13, 13, ?), float64],) */;
    %538 = %537.0;
    %539 = @func_3011() /* ty=Tensor[(13, 13, ?), bool] */;
    (%538, %539)
  };
  %540() /* ty=(Tensor[(13, 13, ?), float64], Tensor[(13, 13, ?), bool]) */
}

def @func_1800() -> (Tensor[(13, 13, ?), float32],) {
  @func_1798() /* ty=(Tensor[(13, 13, ?), float32],) */
}

def @func_6097() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %545 = fn () -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
    %541 = @func_2286() /* ty=(Tensor[(13, 13, ?), bool],) */;
    %542 = @func_1037() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
    %543 = %541.0;
    %544 = %542.1;
    (%543, %544)
  };
  %545() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */
}

def @func_2985() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), int8]) {
  %546 = @func_820() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %547 = @func_2952() /* ty=(Tensor[(13, 13, ?), int8], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %548 = %546.0;
  %549 = %547.0;
  (%548, %549)
}

def @func_2546() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool]) {
  @func_2544() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool]) */
}

def @func_15187() -> Tensor[(4, 1, 15), float32] {
  %551 = fn () -> Tensor[(4, 1, 15), float32] {
    %550 = @func_7040() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(4, 1, 15), float32]) */;
    %550.1
  };
  %551() /* ty=Tensor[(4, 1, 15), float32] */
}

def @func_5816() -> Tensor[(13, 13, ?), bool] {
  @func_5814() /* ty=Tensor[(13, 13, ?), bool] */
}

def @func_1759() -> (Tensor[(13, 13, ?), float32], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %552 = @func_780() /* ty=(Tensor[(13, 13, ?), float32],) */;
  %553 = @func_725() /* ty=(Tensor[(13, 13, 1), float64],) */;
  %554 = @func_820() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %555 = @func_1167() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %556 = @func_610() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %557 = %552.0;
  %558 = %553.0;
  %559 = %554.0;
  %560 = %555.0;
  %561 = %556.0;
  (%557, %558, %559, %560, %561)
}

def @func_3768() -> Tensor[(13, 13, ?), bool] {
  %563 = fn () -> Tensor[(13, 13, ?), bool] {
    %562 = @func_1888() /* ty=(Tensor[(13, 13, ?), bool],) */;
    %562.0
  };
  %563() /* ty=Tensor[(13, 13, ?), bool] */
}

def @func_11958(%var_11957: uint8) -> (Tensor[(13, 13, ?), uint32], uint8, Tensor[(13, 13, ?), float32], Tensor[(13, 13, 64), uint32]) {
  %577 = fn (%var_11943: uint8) -> (Tensor[(13, 13, ?), uint32], uint8, Tensor[(13, 13, ?), float32], Tensor[(13, 13, 64), uint32]) {
    %564 = cast(%var_11943, dtype="uint8") /* ty=uint8 */;
    %565 = cast(meta[relay.Constant][12] /* ty=Tensor[(64), uint8] */, dtype="uint8") /* ty=Tensor[(64), uint8] */;
    %566 = reshape(%564, newshape=[]) /* ty=uint8 */;
    %567 = reshape(%565, newshape=[8, 8, 1]) /* ty=Tensor[(8, 8, 1), uint8] */;
    %568 = @func_6417(%566, %567) /* ty=(Tensor[(8, 8, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(8, 8, 1), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), uint32]) */;
    %569 = @func_1247() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), uint32], Tensor[(13, 13, ?), bool]) */;
    %570 = @func_10530() /* ty=(Tensor[(13, 13, ?), bool],) */;
    %571 = %570.0;
    %572 = cast(%571, dtype="uint32") /* ty=Tensor[(13, 13, ?), uint32] */;
    %573 = cast(meta[relay.Constant][12] /* ty=Tensor[(64), uint8] */, dtype="uint32") /* ty=Tensor[(64), uint32] */;
    %574 = %568.4;
    %575 = %569.1;
    %576 = bitwise_and(%572, %573) /* ty=Tensor[(13, 13, 64), uint32] */;
    (%574, %var_11943, %575, %576)
  };
  %577(%var_11957) /* ty=(Tensor[(13, 13, ?), uint32], uint8, Tensor[(13, 13, ?), float32], Tensor[(13, 13, 64), uint32]) */
}

def @func_3526() -> (Tensor[(13, 13, ?), bool],) {
  %580 = fn () -> (Tensor[(13, 13, ?), bool],) {
    %578 = @func_610() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
    %579 = %578.1;
    (%579,)
  };
  %580() /* ty=(Tensor[(13, 13, ?), bool],) */
}

def @func_10176() -> (Tensor[(13, 13, ?), bool],) {
  @func_10174() /* ty=(Tensor[(13, 13, ?), bool],) */
}

def @func_9018() -> (Tensor[(13, 13, 7), bool],) {
  @func_9016() /* ty=(Tensor[(13, 13, 7), bool],) */
}

def @func_15314() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), uint32]) {
  %581 = @func_1414() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), uint32]) */;
  %582 = @func_4333() /* ty=Tensor[(13, 13, ?), bool] */;
  %583 = @func_9074() /* ty=Tensor[(13, 13, ?), bool] */;
  %584 = @func_7692() /* ty=Tensor[(13, 13, ?), bool] */;
  %585 = %581.1;
  (%582, %583, %584, %585)
}

def @func_9540() -> Tensor[(13, 13, ?), bool] {
  %586 = fn () -> Tensor[(13, 13, ?), bool] {
    @func_9363() /* ty=Tensor[(13, 13, ?), bool] */
  };
  %586() /* ty=Tensor[(13, 13, ?), bool] */
}

def @func_2171() -> (Tensor[(13, 13, ?), bool],) {
  @func_2169() /* ty=(Tensor[(13, 13, ?), bool],) */
}

def @func_15864() -> (Tensor[(13, 13, ?), float64],) {
  %587 = @func_5119() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float64]) */;
  %588 = %587.2;
  (%588,)
}

def @func_8884() -> (Tensor[(13, 13, ?), float64], Tensor[(13, 13, ?), bool]) {
  @func_8882() /* ty=(Tensor[(13, 13, ?), float64], Tensor[(13, 13, ?), bool]) */
}

def @func_14097() -> (Tensor[(13, 13, ?), bool],) {
  %589 = @func_11099() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %590 = %589.0;
  (%590,)
}

def @func_16140(%var_16138: Tensor[(13, 5, 6), uint64]) -> (Tensor[(13, 5, 6), uint64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  @func_16137(%var_16138) /* ty=(Tensor[(13, 5, 6), uint64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */
}

def @func_10251() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %591 = @func_9727() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %592 = %591.1;
  %593 = @func_7716() /* ty=Tensor[(13, 13, ?), bool] */;
  (%592, %593)
}

def @func_5069() -> (Tensor[(13, 13, ?), bool],) {
  %595 = fn () -> (Tensor[(13, 13, ?), bool],) {
    %594 = @func_1829() /* ty=Tensor[(13, 13, ?), bool] */;
    (%594,)
  };
  %595() /* ty=(Tensor[(13, 13, ?), bool],) */
}

def @func_14935() -> (Tensor[(13, 13, ?), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  @func_14933() /* ty=(Tensor[(13, 13, ?), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */
}

def @func_1169() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  @func_1167() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */
}

def @func_6035() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 10), bool]) {
  %601 = fn () -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 10), bool]) {
    %596 = @func_1759() /* ty=(Tensor[(13, 13, ?), float32], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
    %597 = @func_4610() /* ty=(Tensor[(13, 13, 2), float64], Tensor[(13, 13, 10), bool], Tensor[(13, 13, 2), float64]) */;
    %598 = @func_2376() /* ty=Tensor[(13, 13, ?), bool] */;
    %599 = %596.3;
    %600 = %597.1;
    (%598, %599, %600)
  };
  %601() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 10), bool]) */
}

def @func_16933() -> (Tensor[(13, 13, ?), float32],) {
  %602 = @func_15147() /* ty=(Tensor[(13, 13, ?), float32],) */;
  %603 = %602.0;
  (%603,)
}

def @func_7353() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 15), uint64]) {
  %604 = @func_1167() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %605 = @func_5363() /* ty=(Tensor[(13, 13, 15), uint64],) */;
  %606 = @func_3858() /* ty=Tensor[(13, 13, ?), bool] */;
  %607 = @func_2376() /* ty=Tensor[(13, 13, ?), bool] */;
  %608 = %604.1;
  %609 = %605.0;
  (%606, %607, %608, %609)
}

def @func_7355() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 15), uint64]) {
  @func_7353() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 15), uint64]) */
}

def @func_10017() -> Tensor[(13, 13, ?), bool] {
  %610 = @func_9727() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %610.1
}

def @func_12091() -> (Tensor[(13, 13, ?), bool],) {
  %613 = fn () -> (Tensor[(13, 13, ?), bool],) {
    %611 = @func_1037() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
    %612 = %611.0;
    (%612,)
  };
  %613() /* ty=(Tensor[(13, 13, ?), bool],) */
}

def @func_13705() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 10), float32]) {
  %621 = fn () -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 10), float32]) {
    %614 = @func_9727() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
    %615 = @func_10887() /* ty=(Tensor[(13, 13, 10), int64],) */;
    %616 = %615.0;
    %617 = cast(%616, dtype="float32") /* ty=Tensor[(13, 13, 10), float32] */;
    %618 = @func_3430() /* ty=Tensor[(13, 13, ?), bool] */;
    %619 = %614.0;
    %620 = acos(%617) /* ty=Tensor[(13, 13, 10), float32] */;
    (%618, %619, %620)
  };
  %621() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 10), float32]) */
}

def @func_15691() -> (Tensor[(13, 13, ?), bool],) {
  %622 = @func_8882() /* ty=(Tensor[(13, 13, ?), float64], Tensor[(13, 13, ?), bool]) */;
  %623 = %622.1;
  (%623,)
}

def @func_9074() -> Tensor[(13, 13, ?), bool] {
  %624 = @func_1888() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %624.0
}

def @func_7498() -> Tensor[(13, 13, ?), float32] {
  %625 = @func_1142() /* ty=(Tensor[(13, 13, ?), float32],) */;
  %625.0
}

def @func_15443() -> (Tensor[(13, 13, ?), bool],) {
  @func_15441() /* ty=(Tensor[(13, 13, ?), bool],) */
}

def @func_3795() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %629 = fn () -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
    %626 = @func_547() /* ty=(Tensor[(13, 13, ?), bool],) */;
    %627 = %626.0;
    %628 = @func_3767() /* ty=Tensor[(13, 13, ?), bool] */;
    (%627, %628)
  };
  %629() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */
}

def @func_6578() -> Tensor[(13, 13, ?), float64] {
  @func_3208() /* ty=Tensor[(13, 13, ?), float64] */
}

def @func_8358() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  @func_8356() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */
}

def @func_14952() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %630 = @func_5486() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %631 = %630.2;
  %632 = @func_2110() /* ty=Tensor[(13, 13, ?), bool] */;
  (%631, %632)
}

def @func_13217() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %633 = @func_8696() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %634 = @func_9997() /* ty=Tensor[(13, 13, ?), bool] */;
  %635 = %633.0;
  (%634, %635)
}

def @func_17245() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  @func_17243() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */
}

def @func_12326(%var_12298: float32, %var_12299: Tensor[(8, 13, 8), float32]) -> (Tensor[(8, 13, 8), float32], Tensor[(13, 13, ?), bool]) {
  %636 = cast(%var_12298, dtype="float32") /* ty=float32 */;
  %637 = cast(%var_12299, dtype="float32") /* ty=Tensor[(8, 13, 8), float32] */;
  %638 = @func_8597() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %639 = power(%636, %637) /* ty=Tensor[(8, 13, 8), float32] */;
  %640 = %638.1;
  (%639, %640)
}

def @func_9051() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %641 = @func_3525() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %642 = @func_6096() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %643 = %641.0;
  %644 = %642.1;
  (%643, %644)
}

def @func_17580() -> Tensor[(13, 13, 1), float64] {
  @func_17578() /* ty=Tensor[(13, 13, 1), float64] */
}

def @func_12535() -> (Tensor[(13, 13, ?), bool],) {
  %645 = @func_4381() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %646 = %645.0;
  (%646,)
}

def @func_533() -> (Tensor[(13, 13, ?), bool],) {
  @func_531() /* ty=(Tensor[(13, 13, ?), bool],) */
}

def @func_3472() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %647 = @func_2646() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %648 = %647.0;
  %649 = @func_1829() /* ty=Tensor[(13, 13, ?), bool] */;
  (%648, %649)
}

def @func_2696() -> (Tensor[(13, 13, 2), float64],) {
  %655 = fn () -> (Tensor[(13, 13, 2), float64],) {
    %650 = @func_1518() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
    %651 = %650.0;
    %652 = cast(%651, dtype="float64") /* ty=Tensor[(13, 13, ?), float64] */;
    %653 = cast(meta[relay.Constant][13] /* ty=Tensor[(13, 13, 2), bool] */, dtype="float64") /* ty=Tensor[(13, 13, 2), float64] */;
    %654 = minimum(%652, %653) /* ty=Tensor[(13, 13, 2), float64] */;
    (%654,)
  };
  %655() /* ty=(Tensor[(13, 13, 2), float64],) */
}

def @func_531() -> (Tensor[(13, 13, ?), bool],) {
  %656 = @func_510() /* ty=(Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool]) */;
  %657 = %656.1;
  (%657,)
}

def @func_8332(%var_8330: Tensor[(1690), float32], %var_8331: Tensor[(1690), float32]) -> (Tensor[(13, 13, ?), int8], Tensor[(13, 13, ?), bool], Tensor[(1690), float64], Tensor[(1690), bool]) {
  %685 = fn (%var_8292: Tensor[(1690), float32], %var_8299: Tensor[(1690), float32]) -> (Tensor[(13, 13, ?), int8], Tensor[(13, 13, ?), bool], Tensor[(1690), float64], Tensor[(1690), bool]) {
    %658 = cast(%var_8292, dtype="float32") /* ty=Tensor[(1690), float32] */;
    %659 = reshape(%658, newshape=[1690]) /* ty=Tensor[(1690), float32] */;
    %660 = @func_7767(%659) /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(1690), float32]) */;
    %661 = cast(%var_8299, dtype="int32") /* ty=Tensor[(1690), int32] */;
    %662 = shape_of(%var_8292, dtype="int32") /* ty=Tensor[(1), int32] */;
    %663 = cast(%var_8292, dtype="int32") /* ty=Tensor[(1690), int32] */;
    %664 = dyn.reshape(%661, %662, newshape=[]) /* ty=Tensor[(?), int32] */;
    %665 = left_shift(%663, %664) /* ty=Tensor[(1690), int32] */;
    %666 = cast(%665, dtype="float64") /* ty=Tensor[(1690), float64] */;
    %667 = atan(%666) /* ty=Tensor[(1690), float64] */;
    %668 = cast(%665, dtype="float64") /* ty=Tensor[(1690), float64] */;
    %669 = shape_of(%667, dtype="int32") /* ty=Tensor[(1), int32] */;
    %670 = cast(%667, dtype="float64") /* ty=Tensor[(1690), float64] */;
    %671 = dyn.reshape(%668, %669, newshape=[]) /* ty=Tensor[(?), float64] */;
    %672 = cast(%var_8292, dtype="int64") /* ty=Tensor[(1690), int64] */;
    %673 = shape_of(%667, dtype="int32") /* ty=Tensor[(1), int32] */;
    %674 = cast(%667, dtype="int64") /* ty=Tensor[(1690), int64] */;
    %675 = dyn.reshape(%672, %673, newshape=[]) /* ty=Tensor[(?), int64] */;
    %676 = maximum(%674, %675) /* ty=Tensor[(1690), int64] */;
    %677 = cast(%676, dtype="bool") /* ty=Tensor[(1690), bool] */;
    %678 = shape_of(%667, dtype="int32") /* ty=Tensor[(1), int32] */;
    %679 = cast(%667, dtype="bool") /* ty=Tensor[(1690), bool] */;
    %680 = dyn.reshape(%677, %678, newshape=[]) /* ty=Tensor[(?), bool] */;
    %681 = @func_2623() /* ty=Tensor[(13, 13, ?), int8] */;
    %682 = %660.0;
    %683 = mod(%670, %671) /* ty=Tensor[(1690), float64] */;
    %684 = greater_equal(%679, %680) /* ty=Tensor[(1690), bool] */;
    (%681, %682, %683, %684)
  };
  %685(%var_8330, %var_8331) /* ty=(Tensor[(13, 13, ?), int8], Tensor[(13, 13, ?), bool], Tensor[(1690), float64], Tensor[(1690), bool]) */
}

def @func_12799(%var_12783: Tensor[(13, 13, 15), bool]) -> (Tensor[(13, 13, 10), bool], Tensor[(13, 13, ?), float32], Tensor[(13, 13, 10), int64], Tensor[(13, 13, ?), bool], bool, Tensor[(336), bool], Tensor[(80), float64], Tensor[(13, 13, 15), float64]) {
  %686 = @func_4610() /* ty=(Tensor[(13, 13, 2), float64], Tensor[(13, 13, 10), bool], Tensor[(13, 13, 2), float64]) */;
  %687 = @func_10887() /* ty=(Tensor[(13, 13, 10), int64],) */;
  %688 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %689 = cast(meta[relay.Constant][14] /* ty=Tensor[(336), bool] */, dtype="bool") /* ty=Tensor[(336), bool] */;
  %690 = cast(meta[relay.Constant][15] /* ty=Tensor[(80), float64] */, dtype="float64") /* ty=Tensor[(80), float64] */;
  %691 = reshape(%688, newshape=[]) /* ty=bool */;
  %692 = reshape(%689, newshape=[14, 3, 8]) /* ty=Tensor[(14, 3, 8), bool] */;
  %693 = reshape(%690, newshape=[80]) /* ty=Tensor[(80), float64] */;
  %694 = @func_10335(%691, %692, %693) /* ty=(Tensor[(14, 3, 8), bool], Tensor[(13, 13, ?), float32], Tensor[(10, 8, ?), bool], Tensor[(80), float64], Tensor[(13, 13, ?), bool]) */;
  %695 = @func_3763() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %696 = %695.1;
  %697 = cast(%696, dtype="float64") /* ty=Tensor[(13, 13, ?), float64] */;
  %698 = cast(%var_12783, dtype="float64") /* ty=Tensor[(13, 13, 15), float64] */;
  %699 = %686.1;
  %700 = @func_5214() /* ty=Tensor[(13, 13, ?), float32] */;
  %701 = %687.0;
  %702 = %694.4;
  %703 = multiply(%697, %698) /* ty=Tensor[(13, 13, 15), float64] */;
  (%699, %700, %701, %702, False /* ty=bool */, meta[relay.Constant][14] /* ty=Tensor[(336), bool] */, meta[relay.Constant][15] /* ty=Tensor[(80), float64] */, %703)
}

def @func_2037(%var_2036: Tensor[(13, 13, 15), bool]) -> (Tensor[(13, 13, 15), uint64],) {
  %709 = fn (%var_2021: Tensor[(13, 13, 15), bool]) -> (Tensor[(13, 13, 15), uint64],) {
    %704 = @func_1888() /* ty=(Tensor[(13, 13, ?), bool],) */;
    %705 = %704.0;
    %706 = cast(%705, dtype="uint64") /* ty=Tensor[(13, 13, ?), uint64] */;
    %707 = cast(%var_2021, dtype="uint64") /* ty=Tensor[(13, 13, 15), uint64] */;
    %708 = subtract(%706, %707) /* ty=Tensor[(13, 13, 15), uint64] */;
    (%708,)
  };
  %709(%var_2036) /* ty=(Tensor[(13, 13, 15), uint64],) */
}

def @func_2376() -> Tensor[(13, 13, ?), bool] {
  %710 = @func_1986() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %710.0
}

def @func_14271(%var_14270: Tensor[(144), float64]) -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, 2), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), uint32], Tensor[(13, 13, 144), uint8]) {
  %732 = fn (%var_14215: Tensor[(144), float64]) -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, 2), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), uint32], Tensor[(13, 13, 144), uint8]) {
    %711 = cast(%var_14215, dtype="float64") /* ty=Tensor[(144), float64] */;
    %712 = reshape(%711, newshape=[3, 8, 6]) /* ty=Tensor[(3, 8, 6), float64] */;
    %713 = @func_8199(%712) /* ty=(Tensor[(3, 8, 6), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
    %714 = @func_4610() /* ty=(Tensor[(13, 13, 2), float64], Tensor[(13, 13, 10), bool], Tensor[(13, 13, 2), float64]) */;
    %715 = @func_9291() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
    %716 = @func_6002() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), uint32]) */;
    %717 = @func_8696() /* ty=(Tensor[(13, 13, ?), bool],) */;
    %718 = %717.0;
    %719 = cast(%718, dtype="bool") /* ty=Tensor[(13, 13, ?), bool] */;
    %720 = cast(%var_14215, dtype="bool") /* ty=Tensor[(144), bool] */;
    %721 = logical_and(%719, %720) /* ty=Tensor[(13, 13, 144), bool] */;
    %722 = cast(meta[relay.Constant][16] /* ty=Tensor[(13, 13, 144), bool] */, dtype="uint8") /* ty=Tensor[(13, 13, 144), uint8] */;
    %723 = shape_of(%721, dtype="int32") /* ty=Tensor[(3), int32] */;
    %724 = cast(%721, dtype="uint8") /* ty=Tensor[(13, 13, 144), uint8] */;
    %725 = dyn.reshape(%722, %723, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %726 = %713.2;
    %727 = %714.0;
    %728 = %715.0;
    %729 = @func_5214() /* ty=Tensor[(13, 13, ?), float32] */;
    %730 = %716.1;
    %731 = multiply(%724, %725) /* ty=Tensor[(13, 13, 144), uint8] */;
    (%726, %727, %728, %729, %730, %731)
  };
  %732(%var_14270) /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 2), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), uint32], Tensor[(13, 13, 144), uint8]) */
}

def @func_14555(%var_14547: Tensor[(11, 3, 6), float64]) -> Tensor[(11, 3, 6), bool] {
  %733 = cast(meta[relay.Constant][17] /* ty=Tensor[(11, 3, 6), float64] */, dtype="bool") /* ty=Tensor[(11, 3, 6), bool] */;
  %734 = shape_of(%var_14547, dtype="int32") /* ty=Tensor[(3), int32] */;
  %735 = cast(%var_14547, dtype="bool") /* ty=Tensor[(11, 3, 6), bool] */;
  %736 = dyn.reshape(%733, %734, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%735, %736) /* ty=Tensor[(11, 3, 6), bool] */
}

def @func_10918(%var_10916: Tensor[(3, 6, 15), bool], %var_10917: Tensor[(3, 6, 15), bool]) -> (Tensor[(3, 6, 15), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %746 = fn (%var_10894: Tensor[(3, 6, 15), bool], %var_10895: Tensor[(3, 6, 15), bool]) -> (Tensor[(3, 6, 15), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
    %737 = cast(%var_10895, dtype="bool") /* ty=Tensor[(3, 6, 15), bool] */;
    %738 = shape_of(%var_10894, dtype="int32") /* ty=Tensor[(3), int32] */;
    %739 = cast(%var_10894, dtype="bool") /* ty=Tensor[(3, 6, 15), bool] */;
    %740 = dyn.reshape(%737, %738, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %741 = @func_4672() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
    %742 = @func_6034() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 10), bool]) */;
    %743 = logical_and(%739, %740) /* ty=Tensor[(3, 6, 15), bool] */;
    %744 = %741.0;
    %745 = %742.1;
    (%743, %744, %745)
  };
  %746(%var_10916, %var_10917) /* ty=(Tensor[(3, 6, 15), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */
}

def @func_1831() -> Tensor[(13, 13, ?), bool] {
  @func_1829() /* ty=Tensor[(13, 13, ?), bool] */
}

def @func_12802(%var_12800: Tensor[(13, 13, 15), bool]) -> (Tensor[(13, 13, 10), bool], Tensor[(13, 13, ?), float32], Tensor[(13, 13, 10), int64], Tensor[(13, 13, ?), bool], bool, Tensor[(336), bool], Tensor[(80), float64], Tensor[(13, 13, 15), float64]) {
  @func_12799(%var_12800) /* ty=(Tensor[(13, 13, 10), bool], Tensor[(13, 13, ?), float32], Tensor[(13, 13, 10), int64], Tensor[(13, 13, ?), bool], bool, Tensor[(336), bool], Tensor[(80), float64], Tensor[(13, 13, 15), float64]) */
}

def @func_3714() -> (Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool]) {
  @func_3712() /* ty=(Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool]) */
}

def @func_611() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %751 = fn () -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
    %747 = @func_547() /* ty=(Tensor[(13, 13, ?), bool],) */;
    %748 = @func_531() /* ty=(Tensor[(13, 13, ?), bool],) */;
    %749 = %747.0;
    %750 = %748.0;
    (%749, %750)
  };
  %751() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */
}

def @func_3419(%var_3418: Tensor[(1, 1, 7), float32]) -> Tensor[(1, 1, 7), float32] {
  %753 = fn (%var_3406: Tensor[(1, 1, 7), float32]) -> Tensor[(1, 1, 7), float32] {
    %752 = cast(%var_3406, dtype="float32") /* ty=Tensor[(1, 1, 7), float32] */;
    sigmoid(%752) /* ty=Tensor[(1, 1, 7), float32] */
  };
  %753(%var_3418) /* ty=Tensor[(1, 1, 7), float32] */
}

def @func_14995() -> Tensor[(13, 13, ?), bool] {
  @func_14993() /* ty=Tensor[(13, 13, ?), bool] */
}

def @func_12230(%var_12207: Tensor[(11, 2, 6), int32], %var_12208: Tensor[(11, 2, 6), int32], %var_12222: Tensor[(7), float32]) -> (Tensor[(11, 2, 6), bool], Tensor[(13, 13, ?), float64], Tensor[(7), float32]) {
  %754 = cast(%var_12208, dtype="bool") /* ty=Tensor[(11, 2, 6), bool] */;
  %755 = shape_of(%var_12207, dtype="int32") /* ty=Tensor[(3), int32] */;
  %756 = cast(%var_12207, dtype="bool") /* ty=Tensor[(11, 2, 6), bool] */;
  %757 = dyn.reshape(%754, %755, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %758 = less(%756, %757) /* ty=Tensor[(11, 2, 6), bool] */;
  %759 = cast(%758, dtype="bool") /* ty=Tensor[(11, 2, 6), bool] */;
  %760 = shape_of(%var_12207, dtype="int32") /* ty=Tensor[(3), int32] */;
  %761 = cast(%var_12207, dtype="bool") /* ty=Tensor[(11, 2, 6), bool] */;
  %762 = dyn.reshape(%759, %760, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %763 = cast(%var_12222, dtype="float32") /* ty=Tensor[(7), float32] */;
  %764 = reshape(%763, newshape=[7]) /* ty=Tensor[(7), float32] */;
  %765 = @func_4199(%764) /* ty=(Tensor[(13, 13, ?), float64], Tensor[(1, 1, 7), float32], Tensor[(7), float32], Tensor[(13, 13, ?), bool]) */;
  %766 = greater_equal(%761, %762) /* ty=Tensor[(11, 2, 6), bool] */;
  %767 = %765.0;
  (%766, %767, %var_12222)
}

def @func_16032() -> Tensor[(13, 13, ?), bool] {
  %769 = fn () -> Tensor[(13, 13, ?), bool] {
    %768 = @func_15023() /* ty=(Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool]) */;
    %768.1
  };
  %769() /* ty=Tensor[(13, 13, ?), bool] */
}

def @func_5840() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %774 = fn () -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
    %770 = @func_3073() /* ty=(Tensor[(13, 13, ?), int8], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
    %771 = @func_1464() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
    %772 = %770.1;
    %773 = %771.0;
    (%772, %773)
  };
  %774() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */
}

def @func_12897(%var_12896: int8) -> (Tensor[(13, 13, ?), float64], Tensor[(4, 10, 1), int8], int8, Tensor[(40), int8], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32]) {
  %787 = fn (%var_12876: int8) -> (Tensor[(13, 13, ?), float64], Tensor[(4, 10, 1), int8], int8, Tensor[(40), int8], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32]) {
    %775 = cast(%var_12876, dtype="int8") /* ty=int8 */;
    %776 = cast(meta[relay.Constant][18] /* ty=Tensor[(40), int8] */, dtype="int8") /* ty=Tensor[(40), int8] */;
    %777 = reshape(%775, newshape=[]) /* ty=int8 */;
    %778 = reshape(%776, newshape=[4, 10, 1]) /* ty=Tensor[(4, 10, 1), int8] */;
    %779 = @func_10950(%777, %778) /* ty=(Tensor[(4, 10, 1), int8],) */;
    %780 = @func_3208() /* ty=Tensor[(13, 13, ?), float64] */;
    %781 = cast(%780, dtype="bool") /* ty=Tensor[(13, 13, ?), bool] */;
    %782 = reshape(%781, newshape=[13, 13, 1]) /* ty=Tensor[(13, 13, 1), bool] */;
    %783 = @func_8503() /* ty=(Tensor[(13, 13, ?), float32],) */;
    %784 = %779.0;
    %785 = @func_7980(%782) /* ty=Tensor[(13, 13, ?), bool] */;
    %786 = %783.0;
    (%780, %784, %var_12876, meta[relay.Constant][18] /* ty=Tensor[(40), int8] */, %785, %786)
  };
  %787(%var_12896) /* ty=(Tensor[(13, 13, ?), float64], Tensor[(4, 10, 1), int8], int8, Tensor[(40), int8], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32]) */
}

def @func_12958() -> Tensor[(13, 13, ?), bool] {
  %788 = @func_1464() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %788.0
}

def @func_16592() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  @func_16590() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */
}

def @func_17409() -> Tensor[(13, 13, 1), float64] {
  %790 = fn () -> Tensor[(13, 13, 1), float64] {
    %789 = @func_14726() /* ty=(Tensor[(8, 16, 12), float64], Tensor[(13, 13, 1), float64]) */;
    %789.1
  };
  %790() /* ty=Tensor[(13, 13, 1), float64] */
}

def @func_11710(%var_11676: Tensor[(4, 6, 1), float32]) -> (Tensor[(4, 6, 1), float32], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64]) {
  %791 = cast(%var_11676, dtype="float32") /* ty=Tensor[(4, 6, 1), float32] */;
  %792 = @func_9177() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %793 = %792.0;
  %794 = cast(%793, dtype="bool") /* ty=Tensor[(13, 13, ?), bool] */;
  %795 = reshape(%794, newshape=[13, 13, 1]) /* ty=Tensor[(13, 13, 1), bool] */;
  %796 = @func_904(%795) /* ty=(Tensor[(13, 13, ?), uint32], Tensor[(13, 13, 1), float64], Tensor[(13, 13, 1), float64], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %797 = rsqrt(%791) /* ty=Tensor[(4, 6, 1), float32] */;
  %798 = %796.1;
  (%797, %793, %798)
}

def @func_8503() -> (Tensor[(13, 13, ?), float32],) {
  %799 = @func_5688() /* ty=Tensor[(13, 13, ?), float32] */;
  (%799,)
}

def @func_782() -> (Tensor[(13, 13, ?), float32],) {
  @func_780() /* ty=(Tensor[(13, 13, ?), float32],) */
}

def @func_1987() -> (Tensor[(13, 13, ?), bool],) {
  %802 = fn () -> (Tensor[(13, 13, ?), bool],) {
    %800 = @func_1464() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
    %801 = %800.1;
    (%801,)
  };
  %802() /* ty=(Tensor[(13, 13, ?), bool],) */
}

def @func_8505() -> (Tensor[(13, 13, ?), float32],) {
  @func_8503() /* ty=(Tensor[(13, 13, ?), float32],) */
}

def @func_14461() -> (Tensor[(13, 13, ?), float32],) {
  %805 = fn () -> (Tensor[(13, 13, ?), float32],) {
    %803 = @func_3712() /* ty=(Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool]) */;
    %804 = %803.1;
    (%804,)
  };
  %805() /* ty=(Tensor[(13, 13, ?), float32],) */
}

def @func_9665() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, 2), float64], Tensor[(13, 13, ?), int8]) {
  @func_9663() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 2), float64], Tensor[(13, 13, ?), int8]) */
}

def @func_9364() -> Tensor[(13, 13, ?), bool] {
  %807 = fn () -> Tensor[(13, 13, ?), bool] {
    %806 = @func_5119() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float64]) */;
    %806.1
  };
  %807() /* ty=Tensor[(13, 13, ?), bool] */
}

def @func_8436(%var_8434: Tensor[(10, 8, 1), float64]) -> (Tensor[(10, 8, ?), bool],) {
  @func_8433(%var_8434) /* ty=(Tensor[(10, 8, ?), bool],) */
}

def @func_5791() -> (Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool]) {
  %808 = @func_1142() /* ty=(Tensor[(13, 13, ?), float32],) */;
  %809 = @func_3130() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %810 = %808.0;
  %811 = %809.0;
  (%810, %811)
}

def @main() -> (Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), int8], Tensor[(13, 13, 1690), int16]) {
  %812 = @func_8505() /* ty=(Tensor[(13, 13, ?), float32],) */;
  %813 = @func_2987() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), int8]) */;
  %814 = @func_17296() /* ty=(Tensor[(1690), float32],) */;
  %815 = %814.0;
  %816 = @func_9997() /* ty=Tensor[(13, 13, ?), bool] */;
  %817 = cast(%815, dtype="int16") /* ty=Tensor[(1690), int16] */;
  %818 = cast(%816, dtype="int16") /* ty=Tensor[(13, 13, ?), int16] */;
  %819 = %812.0;
  %820 = %813.1;
  %821 = bitwise_xor(%817, %818) /* ty=Tensor[(13, 13, 1690), int16] */;
  (%819, %820, %821)
}

def @func_4912() -> (Tensor[(13, 13, 1), float64],) {
  %822 = @func_4466() /* ty=(Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), float32]) */;
  %823 = %822.0;
  (%823,)
}

def @func_7718() -> Tensor[(13, 13, ?), bool] {
  @func_7716() /* ty=Tensor[(13, 13, ?), bool] */
}

def @func_1466() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  @func_1464() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */
}

def @func_5736() -> Tensor[(13, 13, ?), bool] {
  %830 = fn () -> Tensor[(13, 13, ?), bool] {
    %824 = @func_5068() /* ty=(Tensor[(13, 13, ?), bool],) */;
    %825 = %824.0;
    %826 = cast(meta[relay.Constant][19] /* ty=Tensor[(13, 13, 1), bool] */, dtype="bool") /* ty=Tensor[(13, 13, 1), bool] */;
    %827 = shape_of(%825, dtype="int32") /* ty=Tensor[(3), int32] */;
    %828 = cast(%825, dtype="bool") /* ty=Tensor[(13, 13, ?), bool] */;
    %829 = dyn.reshape(%826, %827, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    equal(%828, %829) /* ty=Tensor[(13, 13, ?), bool] */
  };
  %830() /* ty=Tensor[(13, 13, ?), bool] */
}

def @func_15159() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %831 = @func_1587() /* ty=(Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %832 = @func_9074() /* ty=Tensor[(13, 13, ?), bool] */;
  %833 = %831.3;
  (%832, %833)
}

def @func_4673() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %837 = fn () -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
    %834 = @func_1464() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
    %835 = @func_3767() /* ty=Tensor[(13, 13, ?), bool] */;
    %836 = %834.1;
    (%835, %836)
  };
  %837() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */
}

def @func_3712() -> (Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool]) {
  %838 = @func_510() /* ty=(Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool]) */;
  %839 = @func_780() /* ty=(Tensor[(13, 13, ?), float32],) */;
  %840 = @func_1947() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %841 = %838.0;
  %842 = %839.0;
  %843 = %840.0;
  (%841, %842, %843)
}

def @func_7445() -> (Tensor[(13, 13, 10), bool], Tensor[(13, 13, ?), bool]) {
  @func_7443() /* ty=(Tensor[(13, 13, 10), bool], Tensor[(13, 13, ?), bool]) */
}

def @func_14376() -> Tensor[(13, 13, ?), uint32] {
  %845 = fn () -> Tensor[(13, 13, ?), uint32] {
    %844 = @func_12362() /* ty=(Tensor[(13, 13, ?), uint32], Tensor[(13, 13, 1), float64]) */;
    %844.0
  };
  %845() /* ty=Tensor[(13, 13, ?), uint32] */
}

def @func_4640() -> Tensor[(13, 13, 1), float64] {
  %846 = @func_2544() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool]) */;
  %846.1
}

def @func_14198() -> (Tensor[(13, 13, ?), bool], Tensor[(7), float32], Tensor[(1, 7), float32], Tensor[(13, 13, ?), bool]) {
  @func_14196() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(7), float32], Tensor[(1, 7), float32], Tensor[(13, 13, ?), bool]) */
}

def @func_4610() -> (Tensor[(13, 13, 2), float64], Tensor[(13, 13, 10), bool], Tensor[(13, 13, 2), float64]) {
  %847 = @func_3746() /* ty=(Tensor[(13, 13, 2), float64],) */;
  %848 = @func_4351() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 10), bool], Tensor[(1690), float64]) */;
  %849 = @func_3746() /* ty=(Tensor[(13, 13, 2), float64],) */;
  %850 = %847.0;
  %851 = %848.2;
  %852 = %849.0;
  (%850, %851, %852)
}

def @func_4733() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 15), uint64], Tensor[(4, 1, 15), float32], Tensor[(2535), float32], Tensor[(13, 13, ?), bool]) {
  @func_4731() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 15), uint64], Tensor[(4, 1, 15), float32], Tensor[(2535), float32], Tensor[(13, 13, ?), bool]) */
}

def @func_11265(%var_11263: Tensor[(64), uint8], %var_11264: Tensor[(162), float64]) -> (Tensor[(13, 13, 2), float64], Tensor[(13, 13, ?), bool], uint8, Tensor[(64), uint8], Tensor[(3, 9, 6), float64], Tensor[(162), float64]) {
  @func_11261(%var_11263, %var_11264) /* ty=(Tensor[(13, 13, 2), float64], Tensor[(13, 13, ?), bool], uint8, Tensor[(64), uint8], Tensor[(3, 9, 6), float64], Tensor[(162), float64]) */
}

def @func_12025() -> (Tensor[(13, 13, ?), bool],) {
  %853 = @func_3472() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %854 = %853.1;
  (%854,)
}

def @func_4914() -> (Tensor[(13, 13, 1), float64],) {
  @func_4912() /* ty=(Tensor[(13, 13, 1), float64],) */
}

def @func_6764() -> (Tensor[(13, 13, ?), float32],) {
  %857 = fn () -> (Tensor[(13, 13, ?), float32],) {
    %855 = @func_3712() /* ty=(Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool]) */;
    %856 = %855.1;
    (%856,)
  };
  %857() /* ty=(Tensor[(13, 13, ?), float32],) */
}

def @func_10253() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  @func_10251() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */
}

def @func_12840() -> (Tensor[(13, 13, ?), bool],) {
  @func_12838() /* ty=(Tensor[(13, 13, ?), bool],) */
}

def @func_9663() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, 2), float64], Tensor[(13, 13, ?), int8]) {
  %858 = @func_510() /* ty=(Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool]) */;
  %859 = @func_3746() /* ty=(Tensor[(13, 13, 2), float64],) */;
  %860 = %859.0;
  %861 = cast(%860, dtype="float64") /* ty=Tensor[(13, 13, 2), float64] */;
  %862 = @func_2952() /* ty=(Tensor[(13, 13, ?), int8], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %863 = %858.1;
  %864 = asin(%861) /* ty=Tensor[(13, 13, 2), float64] */;
  %865 = %862.0;
  (%863, %864, %865)
}

def @func_11043() -> (Tensor[(13, 13, ?), bool],) {
  %868 = fn () -> (Tensor[(13, 13, ?), bool],) {
    %866 = @func_4528() /* ty=(Tensor[(13, 13, ?), bool],) */;
    %867 = %866.0;
    (%867,)
  };
  %868() /* ty=(Tensor[(13, 13, ?), bool],) */
}

def @func_5120() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float64]) {
  %876 = fn () -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float64]) {
    %869 = @func_1037() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
    %870 = @func_3767() /* ty=Tensor[(13, 13, ?), bool] */;
    %871 = cast(%870, dtype="bool") /* ty=Tensor[(13, 13, ?), bool] */;
    %872 = reshape(%871, newshape=[13, 13, 1]) /* ty=Tensor[(13, 13, 1), bool] */;
    %873 = @func_985(%872) /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float64]) */;
    %874 = %869.1;
    %875 = %873.1;
    (%874, %870, %875)
  };
  %876() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float64]) */
}

def @func_6002() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), uint32]) {
  %877 = @func_4878() /* ty=(Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %878 = %877.3;
  %879 = cast(%878, dtype="bool") /* ty=Tensor[(13, 13, ?), bool] */;
  %880 = reshape(%879, newshape=[13, 13, 1]) /* ty=Tensor[(13, 13, 1), bool] */;
  %881 = @func_904(%880) /* ty=(Tensor[(13, 13, ?), uint32], Tensor[(13, 13, 1), float64], Tensor[(13, 13, 1), float64], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %882 = %881.0;
  (%878, %882)
}

def @func_7826(%var_7781: Tensor[(1014, 2), float64], %var_7796: Tensor[(1014, 2), bool]) -> (Tensor[(13, 13, ?), bool], Tensor[(1014, 2), float32], Tensor[(1014, 2), float32]) {
  %883 = @func_2646() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %884 = cast(%var_7781, dtype="float64") /* ty=Tensor[(1014, 2), float64] */;
  %885 = reshape(%884, newshape=[13, 13, 12]) /* ty=Tensor[(13, 13, 12), float64] */;
  %886 = @func_6700(%885) /* ty=Tensor[(13, 13, 12), bool] */;
  %887 = cast(%886, dtype="bool") /* ty=Tensor[(13, 13, 12), bool] */;
  %888 = shape_of(%var_7781, dtype="int32") /* ty=Tensor[(2), int32] */;
  %889 = cast(%var_7781, dtype="bool") /* ty=Tensor[(1014, 2), bool] */;
  %890 = dyn.reshape(%887, %888, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %891 = logical_and(%889, %890) /* ty=Tensor[(1014, 2), bool] */;
  %892 = cast(%var_7796, dtype="float32") /* ty=Tensor[(1014, 2), float32] */;
  %893 = shape_of(%891, dtype="int32") /* ty=Tensor[(2), int32] */;
  %894 = cast(%891, dtype="float32") /* ty=Tensor[(1014, 2), float32] */;
  %895 = dyn.reshape(%892, %893, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %896 = cast(%891, dtype="float64") /* ty=Tensor[(1014, 2), float64] */;
  %897 = cosh(%896) /* ty=Tensor[(1014, 2), float64] */;
  %898 = cast(%897, dtype="float32") /* ty=Tensor[(1014, 2), float32] */;
  %899 = cos(%898) /* ty=Tensor[(1014, 2), float32] */;
  %900 = cast(%899, dtype="float32") /* ty=Tensor[(1014, 2), float32] */;
  %901 = %883.0;
  %902 = mod(%894, %895) /* ty=Tensor[(1014, 2), float32] */;
  %903 = tan(%900) /* ty=Tensor[(1014, 2), float32] */;
  (%901, %902, %903)
}

def @func_13086() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64]) {
  @func_13084() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64]) */
}

def @func_7040() -> (Tensor[(13, 13, ?), bool], Tensor[(4, 1, 15), float32]) {
  %904 = @func_4731() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 15), uint64], Tensor[(4, 1, 15), float32], Tensor[(2535), float32], Tensor[(13, 13, ?), bool]) */;
  %905 = @func_3430() /* ty=Tensor[(13, 13, ?), bool] */;
  %906 = %904.3;
  (%905, %906)
}

def @func_9762() -> (Tensor[(13, 13, ?), bool],) {
  %908 = fn () -> (Tensor[(13, 13, ?), bool],) {
    %907 = @func_6063() /* ty=Tensor[(13, 13, ?), bool] */;
    (%907,)
  };
  %908() /* ty=(Tensor[(13, 13, ?), bool],) */
}

def @func_13490() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool]) {
  %914 = fn () -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool]) {
    %909 = @func_8696() /* ty=(Tensor[(13, 13, ?), bool],) */;
    %910 = @func_10428() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(1690), float32]) */;
    %911 = %909.0;
    %912 = %910.1;
    %913 = @func_6847() /* ty=Tensor[(13, 13, ?), bool] */;
    (%911, %912, %913)
  };
  %914() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool]) */
}

def @func_13981() -> (Tensor[(13, 13, ?), bool],) {
  %917 = fn () -> (Tensor[(13, 13, ?), bool],) {
    %915 = @func_1037() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
    %916 = %915.1;
    (%916,)
  };
  %917() /* ty=(Tensor[(13, 13, ?), bool],) */
}

def @func_8598() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %921 = fn () -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
    %918 = @func_7040() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(4, 1, 15), float32]) */;
    %919 = @func_7692() /* ty=Tensor[(13, 13, ?), bool] */;
    %920 = %918.0;
    (%919, %920)
  };
  %921() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */
}

def @func_4964() -> (Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), uint8]) {
  %922 = @func_510() /* ty=(Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool]) */;
  %923 = @func_531() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %924 = @func_2110() /* ty=Tensor[(13, 13, ?), bool] */;
  %925 = @func_1662() /* ty=(Tensor[(13, 13, 1), float64], Tensor[(13, 13, 1), float64]) */;
  %926 = %925.1;
  %927 = cast(%926, dtype="uint8") /* ty=Tensor[(13, 13, 1), uint8] */;
  %928 = shape_of(%924, dtype="int32") /* ty=Tensor[(3), int32] */;
  %929 = cast(%924, dtype="uint8") /* ty=Tensor[(13, 13, ?), uint8] */;
  %930 = dyn.reshape(%927, %928, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %931 = %922.0;
  %932 = %923.0;
  %933 = bitwise_and(%929, %930) /* ty=Tensor[(13, 13, ?), uint8] */;
  (%931, %932, %933)
}

def @func_15024() -> (Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool]) {
  %938 = fn () -> (Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool]) {
    %934 = @func_7935() /* ty=(Tensor[(13, 13, ?), float32],) */;
    %935 = @func_7659() /* ty=(Tensor[(13, 13, ?), bool],) */;
    %936 = %934.0;
    %937 = %935.0;
    (%936, %937)
  };
  %938() /* ty=(Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool]) */
}

def @func_906(%var_905: Tensor[(13, 13, 1), bool]) -> (Tensor[(13, 13, ?), uint32], Tensor[(13, 13, 1), float64], Tensor[(13, 13, 1), float64], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %956 = fn (%var_842: Tensor[(13, 13, 1), bool]) -> (Tensor[(13, 13, ?), uint32], Tensor[(13, 13, 1), float64], Tensor[(13, 13, 1), float64], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
    %939 = @func_547() /* ty=(Tensor[(13, 13, ?), bool],) */;
    %940 = %939.0;
    %941 = cast(%var_842, dtype="uint32") /* ty=Tensor[(13, 13, 1), uint32] */;
    %942 = shape_of(%940, dtype="int32") /* ty=Tensor[(3), int32] */;
    %943 = cast(%940, dtype="uint32") /* ty=Tensor[(13, 13, ?), uint32] */;
    %944 = dyn.reshape(%941, %942, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %945 = @func_468() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64]) */;
    %946 = cast(%var_842, dtype="float64") /* ty=Tensor[(13, 13, 1), float64] */;
    %947 = @func_725() /* ty=(Tensor[(13, 13, 1), float64],) */;
    %948 = @func_468() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64]) */;
    %949 = @func_547() /* ty=(Tensor[(13, 13, ?), bool],) */;
    %950 = bitwise_or(%943, %944) /* ty=Tensor[(13, 13, ?), uint32] */;
    %951 = %945.1;
    %952 = sin(%946) /* ty=Tensor[(13, 13, 1), float64] */;
    %953 = %947.0;
    %954 = %948.0;
    %955 = %949.0;
    (%950, %951, %952, %953, %954, %955)
  };
  %956(%var_905) /* ty=(Tensor[(13, 13, ?), uint32], Tensor[(13, 13, 1), float64], Tensor[(13, 13, 1), float64], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */
}

def @func_11489() -> (Tensor[(13, 13, ?), float64], Tensor[(13, 13, 10), int64], Tensor[(13, 13, ?), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 10), int64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  @func_11487() /* ty=(Tensor[(13, 13, ?), float64], Tensor[(13, 13, 10), int64], Tensor[(13, 13, ?), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 10), int64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */
}

def @func_7716() -> Tensor[(13, 13, ?), bool] {
  %957 = @func_4878() /* ty=(Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %957.3
}

def @func_12671() -> (Tensor[(11, 15, 8), float64],) {
  %960 = fn () -> (Tensor[(11, 15, 8), float64],) {
    %958 = cast(meta[relay.Constant][20] /* ty=Tensor[(11, 15, 8), float64] */, dtype="float64") /* ty=Tensor[(11, 15, 8), float64] */;
    %959 = asin(%958) /* ty=Tensor[(11, 15, 8), float64] */;
    (%959,)
  };
  %960() /* ty=(Tensor[(11, 15, 8), float64],) */
}

def @func_16922() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], uint8, Tensor[(64), uint8]) {
  @func_16920() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], uint8, Tensor[(64), uint8]) */
}

def @func_10871() -> Tensor[(13, 13, ?), bool] {
  %961 = fn () -> Tensor[(13, 13, ?), bool] {
    @func_10017() /* ty=Tensor[(13, 13, ?), bool] */
  };
  %961() /* ty=Tensor[(13, 13, ?), bool] */
}

def @func_8014() -> Tensor[(13, 13, 1), float64] {
  %962 = fn () -> Tensor[(13, 13, 1), float64] {
    @func_4640() /* ty=Tensor[(13, 13, 1), float64] */
  };
  %962() /* ty=Tensor[(13, 13, 1), float64] */
}

def @func_7489() -> (Tensor[(13, 13, ?), bool],) {
  @func_7487() /* ty=(Tensor[(13, 13, ?), bool],) */
}

def @func_7122() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 10), bool], Tensor[(13, 13, 1), float64]) {
  @func_7120() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 10), bool], Tensor[(13, 13, 1), float64]) */
}

def @func_1761() -> (Tensor[(13, 13, ?), float32], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  @func_1759() /* ty=(Tensor[(13, 13, ?), float32], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */
}

def @func_4067() -> (Tensor[(13, 13, ?), bool],) {
  %963 = @func_3472() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %964 = %963.1;
  (%964,)
}

def @func_9997() -> Tensor[(13, 13, ?), bool] {
  %965 = @func_1518() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %965.1
}

def @func_988(%var_986: Tensor[(13, 13, 1), bool]) -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float64]) {
  @func_985(%var_986) /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float64]) */
}

def @func_15579() -> (Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool]) {
  %966 = @func_1587() /* ty=(Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %967 = @func_3794() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %968 = %966.2;
  %969 = %967.0;
  (%968, %969)
}

def @func_3013() -> Tensor[(13, 13, ?), bool] {
  @func_3011() /* ty=Tensor[(13, 13, ?), bool] */
}

def @func_14631() -> Tensor[(13, 13, ?), bool] {
  %971 = fn () -> Tensor[(13, 13, ?), bool] {
    %970 = @func_14587() /* ty=(Tensor[(13, 13, ?), bool],) */;
    %970.0
  };
  %971() /* ty=Tensor[(13, 13, ?), bool] */
}

def @func_16590() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %972 = @func_4878() /* ty=(Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %973 = %972.2;
  %974 = @func_16031() /* ty=Tensor[(13, 13, ?), bool] */;
  %975 = @func_5735() /* ty=Tensor[(13, 13, ?), bool] */;
  %976 = @func_5735() /* ty=Tensor[(13, 13, ?), bool] */;
  (%973, %974, %975, %976)
}

def @func_12201() -> Tensor[(13, 13, ?), bool] {
  @func_12199() /* ty=Tensor[(13, 13, ?), bool] */
}

def @func_6849() -> Tensor[(13, 13, ?), bool] {
  @func_6847() /* ty=Tensor[(13, 13, ?), bool] */
}

def @func_511() -> (Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool]) {
  %981 = fn () -> (Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool]) {
    %977 = @func_468() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64]) */;
    %978 = @func_468() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64]) */;
    %979 = %977.1;
    %980 = %978.0;
    (%979, %980)
  };
  %981() /* ty=(Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool]) */
}

def @func_12330(%var_12328: float32, %var_12329: Tensor[(8, 13, 8), float32]) -> (Tensor[(8, 13, 8), float32], Tensor[(13, 13, ?), bool]) {
  @func_12326(%var_12328, %var_12329) /* ty=(Tensor[(8, 13, 8), float32], Tensor[(13, 13, ?), bool]) */
}

def @func_11730() -> (Tensor[(13, 13, ?), float32],) {
  %982 = @func_8838() /* ty=(Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool]) */;
  %983 = %982.0;
  (%983,)
}

def @func_2987() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), int8]) {
  @func_2985() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), int8]) */
}

def @func_13824() -> (Tensor[(13, 13, ?), int8],) {
  %985 = fn () -> (Tensor[(13, 13, ?), int8],) {
    %984 = @func_2623() /* ty=Tensor[(13, 13, ?), int8] */;
    (%984,)
  };
  %985() /* ty=(Tensor[(13, 13, ?), int8],) */
}

def @func_548() -> (Tensor[(13, 13, ?), bool],) {
  %988 = fn () -> (Tensor[(13, 13, ?), bool],) {
    %986 = @func_510() /* ty=(Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool]) */;
    %987 = %986.1;
    (%987,)
  };
  %988() /* ty=(Tensor[(13, 13, ?), bool],) */
}

def @func_9729() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  @func_9727() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */
}

def @func_15912(%var_15910: Tensor[(14, 2, 13), float32]) -> (Tensor[(13, 13, ?), bool], Tensor[(14, 2, 13), bool], Tensor[(13, 13, ?), uint32]) {
  @func_15909(%var_15910) /* ty=(Tensor[(13, 13, ?), bool], Tensor[(14, 2, 13), bool], Tensor[(13, 13, ?), uint32]) */
}

def @func_2479() -> Tensor[(13, 13, ?), bool] {
  %990 = fn () -> Tensor[(13, 13, ?), bool] {
    %989 = @func_610() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
    %989.0
  };
  %990() /* ty=Tensor[(13, 13, ?), bool] */
}

def @func_10428() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(1690), float32]) {
  %991 = @func_1798() /* ty=(Tensor[(13, 13, ?), float32],) */;
  %992 = @func_3942() /* ty=(Tensor[(13, 13, ?), float64],) */;
  %993 = @func_3967() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %994 = cast(meta[relay.Constant][21] /* ty=Tensor[(1690), float32] */, dtype="float32") /* ty=Tensor[(1690), float32] */;
  %995 = reshape(%994, newshape=[1690]) /* ty=Tensor[(1690), float32] */;
  %996 = @func_8768(%995) /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(1690), float32]) */;
  %997 = @func_9997() /* ty=Tensor[(13, 13, ?), bool] */;
  %998 = %991.0;
  %999 = %992.0;
  %1000 = %993.0;
  %1001 = %996.0;
  (%997, %998, %999, %1000, %1001, meta[relay.Constant][21] /* ty=Tensor[(1690), float32] */)
}

def @func_2287() -> (Tensor[(13, 13, ?), bool],) {
  %1004 = fn () -> (Tensor[(13, 13, ?), bool],) {
    %1002 = @func_1947() /* ty=(Tensor[(13, 13, ?), bool],) */;
    %1003 = %1002.0;
    (%1003,)
  };
  %1004() /* ty=(Tensor[(13, 13, ?), bool],) */
}

def @func_13269(%var_13268: Tensor[(7), float32]) -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float64], Tensor[(7), float32], Tensor[(13, 13, 10), float32]) {
  %1016 = fn (%var_13257: Tensor[(7), float32]) -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float64], Tensor[(7), float32], Tensor[(13, 13, 10), float32]) {
    %1005 = @func_6002() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), uint32]) */;
    %1006 = cast(%var_13257, dtype="float32") /* ty=Tensor[(7), float32] */;
    %1007 = reshape(%1006, newshape=[7]) /* ty=Tensor[(7), float32] */;
    %1008 = @func_4199(%1007) /* ty=(Tensor[(13, 13, ?), float64], Tensor[(1, 1, 7), float32], Tensor[(7), float32], Tensor[(13, 13, ?), bool]) */;
    %1009 = @func_6034() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 10), bool]) */;
    %1010 = %1009.0;
    %1011 = cast(%1010, dtype="float32") /* ty=Tensor[(13, 13, ?), float32] */;
    %1012 = cast(meta[relay.Constant][22] /* ty=Tensor[(13, 13, 10), bool] */, dtype="float32") /* ty=Tensor[(13, 13, 10), float32] */;
    %1013 = %1005.0;
    %1014 = %1008.0;
    %1015 = add(%1011, %1012) /* ty=Tensor[(13, 13, 10), float32] */;
    (%1013, %1014, %var_13257, %1015)
  };
  %1016(%var_13268) /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float64], Tensor[(7), float32], Tensor[(13, 13, 10), float32]) */
}

def @func_4529() -> (Tensor[(13, 13, ?), bool],) {
  %1019 = fn () -> (Tensor[(13, 13, ?), bool],) {
    %1017 = @func_2544() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool]) */;
    %1018 = %1017.2;
    (%1018,)
  };
  %1019() /* ty=(Tensor[(13, 13, ?), bool],) */
}

def @func_17270() -> Tensor[(13, 13, 10), float64] {
  %1020 = @func_16959() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(2028), float64], Tensor[(13, 13, 10), bool]) */;
  %1021 = %1020.4;
  %1022 = cast(%1021, dtype="float64") /* ty=Tensor[(13, 13, 10), float64] */;
  rsqrt(%1022) /* ty=Tensor[(13, 13, 10), float64] */
}

def @func_10228() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, 15), uint64], Tensor[(1, 2535), bool], Tensor[(13, 13, ?), bool]) {
  @func_10226() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 15), uint64], Tensor[(1, 2535), bool], Tensor[(13, 13, ?), bool]) */
}

def @func_17484() -> Tensor[(13, 13, 10), bool] {
  @func_17482() /* ty=Tensor[(13, 13, 10), bool] */
}

def @func_5814() -> Tensor[(13, 13, ?), bool] {
  %1023 = @func_547() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %1023.0
}

def @func_10339(%var_10336: bool, %var_10337: Tensor[(14, 3, 8), bool], %var_10338: Tensor[(80), float64]) -> (Tensor[(14, 3, 8), bool], Tensor[(13, 13, ?), float32], Tensor[(10, 8, ?), bool], Tensor[(80), float64], Tensor[(13, 13, ?), bool]) {
  %1035 = fn (%var_10305: bool, %var_10306: Tensor[(14, 3, 8), bool], %var_10320: Tensor[(80), float64]) -> (Tensor[(14, 3, 8), bool], Tensor[(13, 13, ?), float32], Tensor[(10, 8, ?), bool], Tensor[(80), float64], Tensor[(13, 13, ?), bool]) {
    %1024 = cast(%var_10305, dtype="bool") /* ty=bool */;
    %1025 = cast(%var_10306, dtype="bool") /* ty=Tensor[(14, 3, 8), bool] */;
    %1026 = @func_780() /* ty=(Tensor[(13, 13, ?), float32],) */;
    %1027 = cast(%var_10320, dtype="float64") /* ty=Tensor[(80), float64] */;
    %1028 = reshape(%1027, newshape=[10, 8, 1]) /* ty=Tensor[(10, 8, 1), float64] */;
    %1029 = @func_8433(%1028) /* ty=(Tensor[(10, 8, ?), bool],) */;
    %1030 = @func_10174() /* ty=(Tensor[(13, 13, ?), bool],) */;
    %1031 = logical_or(%1024, %1025) /* ty=Tensor[(14, 3, 8), bool] */;
    %1032 = %1026.0;
    %1033 = %1029.0;
    %1034 = %1030.0;
    (%1031, %1032, %1033, %var_10320, %1034)
  };
  %1035(%var_10336, %var_10337, %var_10338) /* ty=(Tensor[(14, 3, 8), bool], Tensor[(13, 13, ?), float32], Tensor[(10, 8, ?), bool], Tensor[(80), float64], Tensor[(13, 13, ?), bool]) */
}

def @func_2365(%var_2364: Tensor[(13, 13, 10), float32]) -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, 10), int64]) {
  %1043 = fn (%var_2358: Tensor[(13, 13, 10), float32]) -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, 10), int64]) {
    %1036 = @func_610() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
    %1037 = @func_780() /* ty=(Tensor[(13, 13, ?), float32],) */;
    %1038 = %1037.0;
    %1039 = cast(%1038, dtype="int64") /* ty=Tensor[(13, 13, ?), int64] */;
    %1040 = cast(%var_2358, dtype="int64") /* ty=Tensor[(13, 13, 10), int64] */;
    %1041 = %1036.0;
    %1042 = right_shift(%1039, %1040) /* ty=Tensor[(13, 13, 10), int64] */;
    (%1041, %1042)
  };
  %1043(%var_2364) /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 10), int64]) */
}

def @func_1492(%var_1491: Tensor[(13, 13, 10), float64]) -> (Tensor[(13, 13, 10), bool],) {
  %1049 = fn (%var_1482: Tensor[(13, 13, 10), float64]) -> (Tensor[(13, 13, 10), bool],) {
    %1044 = @func_725() /* ty=(Tensor[(13, 13, 1), float64],) */;
    %1045 = %1044.0;
    %1046 = cast(%1045, dtype="bool") /* ty=Tensor[(13, 13, 1), bool] */;
    %1047 = cast(%var_1482, dtype="bool") /* ty=Tensor[(13, 13, 10), bool] */;
    %1048 = less_equal(%1046, %1047) /* ty=Tensor[(13, 13, 10), bool] */;
    (%1048,)
  };
  %1049(%var_1491) /* ty=(Tensor[(13, 13, 10), bool],) */
}

def @func_8949() -> (Tensor[(13, 13, ?), bool],) {
  %1052 = fn () -> (Tensor[(13, 13, ?), bool],) {
    %1050 = @func_7040() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(4, 1, 15), float32]) */;
    %1051 = %1050.0;
    (%1051,)
  };
  %1052() /* ty=(Tensor[(13, 13, ?), bool],) */
}

def @func_13598(%var_13596: Tensor[(4, 11, 12), uint64], %var_13597: Tensor[(4, 11, 12), uint64]) -> Tensor[(4, 11, 12), bool] {
  %1057 = fn (%var_13588: Tensor[(4, 11, 12), uint64], %var_13589: Tensor[(4, 11, 12), uint64]) -> Tensor[(4, 11, 12), bool] {
    %1053 = cast(%var_13589, dtype="bool") /* ty=Tensor[(4, 11, 12), bool] */;
    %1054 = shape_of(%var_13588, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1055 = cast(%var_13588, dtype="bool") /* ty=Tensor[(4, 11, 12), bool] */;
    %1056 = dyn.reshape(%1053, %1054, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    equal(%1055, %1056) /* ty=Tensor[(4, 11, 12), bool] */
  };
  %1057(%var_13596, %var_13597) /* ty=Tensor[(4, 11, 12), bool] */
}

def @func_15316() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), uint32]) {
  @func_15314() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), uint32]) */
}

def @func_9252() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %1062 = fn () -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
    %1058 = @func_5637() /* ty=(Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool]) */;
    %1059 = @func_4964() /* ty=(Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), uint8]) */;
    %1060 = %1058.1;
    %1061 = %1059.1;
    (%1060, %1061)
  };
  %1062() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */
}

def @func_6137(%var_6136: Tensor[(7), float32]) -> (Tensor[(13, 13, 2), float64], Tensor[(13, 13, ?), float64], Tensor[(7), float32]) {
  %1069 = fn (%var_6117: Tensor[(7), float32]) -> (Tensor[(13, 13, 2), float64], Tensor[(13, 13, ?), float64], Tensor[(7), float32]) {
    %1063 = @func_3103() /* ty=(Tensor[(13, 13, 2), float64],) */;
    %1064 = cast(%var_6117, dtype="float32") /* ty=Tensor[(7), float32] */;
    %1065 = reshape(%1064, newshape=[7]) /* ty=Tensor[(7), float32] */;
    %1066 = @func_4199(%1065) /* ty=(Tensor[(13, 13, ?), float64], Tensor[(1, 1, 7), float32], Tensor[(7), float32], Tensor[(13, 13, ?), bool]) */;
    %1067 = %1063.0;
    %1068 = %1066.0;
    (%1067, %1068, %var_6117)
  };
  %1069(%var_6136) /* ty=(Tensor[(13, 13, 2), float64], Tensor[(13, 13, ?), float64], Tensor[(7), float32]) */
}

def @func_17107(%var_17105: Tensor[(13, 13, 7), bool]) -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, 7), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 7), float32]) {
  @func_17104(%var_17105) /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 7), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 7), float32]) */
}

def @func_17296() -> (Tensor[(1690), float32],) {
  %1072 = fn () -> (Tensor[(1690), float32],) {
    %1070 = @func_10054() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(1690), float32]) */;
    %1071 = %1070.2;
    (%1071,)
  };
  %1072() /* ty=(Tensor[(1690), float32],) */
}

def @func_15209() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), uint32], uint8) {
  %1081 = fn () -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), uint32], uint8) {
    %1073 = @func_5839() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
    %1074 = @func_11334() /* ty=(Tensor[(13, 13, ?), bool],) */;
    %1075 = cast(meta[relay.Constant][23] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %1076 = reshape(%1075, newshape=[]) /* ty=uint8 */;
    %1077 = @func_11956(%1076) /* ty=(Tensor[(13, 13, ?), uint32], uint8, Tensor[(13, 13, ?), float32], Tensor[(13, 13, 64), uint32]) */;
    %1078 = %1073.0;
    %1079 = %1074.0;
    %1080 = %1077.0;
    (%1078, %1079, %1080, meta[relay.Constant][23] /* ty=uint8 */)
  };
  %1081() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), uint32], uint8) */
}

def @func_10430() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(1690), float32]) {
  @func_10428() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(1690), float32]) */
}

def @func_15365(%var_15363: Tensor[(3, 12, 11), float32]) -> (Tensor[(3, 12, 11), float32], Tensor[(3, 12, 11), float32]) {
  @func_15362(%var_15363) /* ty=(Tensor[(3, 12, 11), float32], Tensor[(3, 12, 11), float32]) */
}

def @func_11312() -> (Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool]) {
  @func_11310() /* ty=(Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool]) */
}

def @func_3210() -> Tensor[(13, 13, ?), float64] {
  @func_3208() /* ty=Tensor[(13, 13, ?), float64] */
}

def @func_8896(%var_8895: Tensor[(7, 9, 8), int32]) -> (Tensor[(7, 9, 8), int32],) {
  %1087 = fn (%var_8889: Tensor[(7, 9, 8), int32]) -> (Tensor[(7, 9, 8), int32],) {
    %1082 = cast(%var_8889, dtype="int32") /* ty=Tensor[(7, 9, 8), int32] */;
    %1083 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(7, 9, 8), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1084 = cast(meta[relay.Constant][24] /* ty=Tensor[(7, 9, 8), int32] */, dtype="int32") /* ty=Tensor[(7, 9, 8), int32] */;
    %1085 = dyn.reshape(%1082, %1083, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %1086 = bitwise_xor(%1084, %1085) /* ty=Tensor[(7, 9, 8), int32] */;
    (%1086,)
  };
  %1087(%var_8895) /* ty=(Tensor[(7, 9, 8), int32],) */
}

def @func_16711() -> (Tensor[(13, 13, ?), bool],) {
  %1090 = fn () -> (Tensor[(13, 13, ?), bool],) {
    %1088 = @func_11334() /* ty=(Tensor[(13, 13, ?), bool],) */;
    %1089 = %1088.0;
    (%1089,)
  };
  %1090() /* ty=(Tensor[(13, 13, ?), bool],) */
}

def @func_4383() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  @func_4381() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */
}

def @func_1947() -> (Tensor[(13, 13, ?), bool],) {
  %1091 = @func_1247() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), uint32], Tensor[(13, 13, ?), bool]) */;
  %1092 = %1091.3;
  (%1092,)
}

def @func_13084() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64]) {
  %1093 = @func_10205() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %1094 = @func_6524() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32], Tensor[(13, 13, 1), float64]) */;
  %1095 = %1093.2;
  %1096 = %1094.3;
  (%1095, %1096)
}

def @func_7042() -> (Tensor[(13, 13, ?), bool], Tensor[(4, 1, 15), float32]) {
  @func_7040() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(4, 1, 15), float32]) */
}

def @func_8396() -> (Tensor[(13, 13, 1), float64],) {
  @func_8394() /* ty=(Tensor[(13, 13, 1), float64],) */
}

def @func_9076() -> Tensor[(13, 13, ?), bool] {
  @func_9074() /* ty=Tensor[(13, 13, ?), bool] */
}

def @func_5958(%var_5947: Tensor[(3, 9, 6), float64], %var_5948: Tensor[(3, 9, 6), float64]) -> (Tensor[(3, 9, 6), float64],) {
  %1097 = cast(%var_5948, dtype="float64") /* ty=Tensor[(3, 9, 6), float64] */;
  %1098 = shape_of(%var_5947, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1099 = cast(%var_5947, dtype="float64") /* ty=Tensor[(3, 9, 6), float64] */;
  %1100 = dyn.reshape(%1097, %1098, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1101 = floor_divide(%1099, %1100) /* ty=Tensor[(3, 9, 6), float64] */;
  (%1101,)
}

def @func_17332() -> Tensor[(13, 13, ?), bool] {
  @func_17330() /* ty=Tensor[(13, 13, ?), bool] */
}

def @func_13837() -> (Tensor[(13, 13, ?), bool],) {
  @func_13835() /* ty=(Tensor[(13, 13, ?), bool],) */
}

def @func_3431() -> Tensor[(13, 13, ?), bool] {
  %1103 = fn () -> Tensor[(13, 13, ?), bool] {
    %1102 = @func_3130() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
    %1102.1
  };
  %1103() /* ty=Tensor[(13, 13, ?), bool] */
}

def @func_10056() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(1690), float32]) {
  @func_10054() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(1690), float32]) */
}

def @func_1829() -> Tensor[(13, 13, ?), bool] {
  %1104 = @func_610() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %1104.1
}

def @func_6702(%var_6701: Tensor[(13, 13, 12), float64]) -> Tensor[(13, 13, 12), bool] {
  %1108 = fn (%var_6688: Tensor[(13, 13, 12), float64]) -> Tensor[(13, 13, 12), bool] {
    %1105 = @func_3208() /* ty=Tensor[(13, 13, ?), float64] */;
    %1106 = cast(%1105, dtype="bool") /* ty=Tensor[(13, 13, ?), bool] */;
    %1107 = cast(%var_6688, dtype="bool") /* ty=Tensor[(13, 13, 12), bool] */;
    less(%1106, %1107) /* ty=Tensor[(13, 13, 12), bool] */
  };
  %1108(%var_6701) /* ty=Tensor[(13, 13, 12), bool] */
}

def @func_17343() -> (Tensor[(13, 13, ?), float32],) {
  %1109 = @func_14884() /* ty=(Tensor[(13, 13, 2), float64], Tensor[(13, 13, ?), float32]) */;
  %1110 = %1109.1;
  (%1110,)
}

def @func_7660() -> (Tensor[(13, 13, ?), bool],) {
  %1113 = fn () -> (Tensor[(13, 13, ?), bool],) {
    %1111 = @func_5119() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float64]) */;
    %1112 = %1111.1;
    (%1112,)
  };
  %1113() /* ty=(Tensor[(13, 13, ?), bool],) */
}

def @func_14196() -> (Tensor[(13, 13, ?), bool], Tensor[(7), float32], Tensor[(1, 7), float32], Tensor[(13, 13, ?), bool]) {
  %1114 = @func_13005() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %1115 = cast(meta[relay.Constant][25] /* ty=Tensor[(1, 7), float32] */, dtype="float32") /* ty=Tensor[(1, 7), float32] */;
  %1116 = reshape(%1115, newshape=[7]) /* ty=Tensor[(7), float32] */;
  %1117 = @func_6135(%1116) /* ty=(Tensor[(13, 13, 2), float64], Tensor[(13, 13, ?), float64], Tensor[(7), float32]) */;
  %1118 = @func_10054() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(1690), float32]) */;
  %1119 = %1114.0;
  %1120 = %1117.2;
  %1121 = %1118.0;
  (%1119, %1120, meta[relay.Constant][25] /* ty=Tensor[(1, 7), float32] */, %1121)
}

def @func_9727() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %1122 = @func_6002() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), uint32]) */;
  %1123 = %1122.0;
  %1124 = @func_9074() /* ty=Tensor[(13, 13, ?), bool] */;
  (%1123, %1124)
}

def @func_14558(%var_14556: Tensor[(11, 3, 6), float64]) -> Tensor[(11, 3, 6), bool] {
  @func_14555(%var_14556) /* ty=Tensor[(11, 3, 6), bool] */
}

def @func_6420(%var_6418: uint8, %var_6419: Tensor[(8, 8, 1), uint8]) -> (Tensor[(8, 8, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(8, 8, 1), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), uint32]) {
  %1142 = fn (%var_6373: uint8, %var_6374: Tensor[(8, 8, 1), uint8]) -> (Tensor[(8, 8, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(8, 8, 1), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), uint32]) {
    %1125 = cast(%var_6373, dtype="bool") /* ty=bool */;
    %1126 = cast(%var_6374, dtype="bool") /* ty=Tensor[(8, 8, 1), bool] */;
    %1127 = less_equal(%1125, %1126) /* ty=Tensor[(8, 8, 1), bool] */;
    %1128 = cast(%var_6373, dtype="float64") /* ty=float64 */;
    %1129 = cast(%1127, dtype="float64") /* ty=Tensor[(8, 8, 1), float64] */;
    %1130 = @func_5119() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float64]) */;
    %1131 = cast(%var_6373, dtype="bool") /* ty=bool */;
    %1132 = cast(%var_6374, dtype="bool") /* ty=Tensor[(8, 8, 1), bool] */;
    %1133 = %1130.1;
    %1134 = cast(%1133, dtype="bool") /* ty=Tensor[(13, 13, ?), bool] */;
    %1135 = reshape(%1134, newshape=[13, 13, 1]) /* ty=Tensor[(13, 13, 1), bool] */;
    %1136 = @func_985(%1135) /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float64]) */;
    %1137 = @func_1414() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), uint32]) */;
    %1138 = divide(%1128, %1129) /* ty=Tensor[(8, 8, 1), float64] */;
    %1139 = greater_equal(%1131, %1132) /* ty=Tensor[(8, 8, 1), bool] */;
    %1140 = %1136.0;
    %1141 = %1137.1;
    (%1138, %1133, %1139, %1140, %1141)
  };
  %1142(%var_6418, %var_6419) /* ty=(Tensor[(8, 8, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(8, 8, 1), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), uint32]) */
}

def @func_9293() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  @func_9291() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */
}

def @func_3474() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  @func_3472() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */
}

def @func_3764() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %1146 = fn () -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
    %1143 = @func_1518() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
    %1144 = @func_3011() /* ty=Tensor[(13, 13, ?), bool] */;
    %1145 = %1143.0;
    (%1144, %1145)
  };
  %1146() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */
}

def @func_5638() -> (Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool]) {
  %1151 = fn () -> (Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool]) {
    %1147 = @func_1662() /* ty=(Tensor[(13, 13, 1), float64], Tensor[(13, 13, 1), float64]) */;
    %1148 = @func_1888() /* ty=(Tensor[(13, 13, ?), bool],) */;
    %1149 = %1147.1;
    %1150 = %1148.0;
    (%1149, %1150)
  };
  %1151() /* ty=(Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool]) */
}

def @func_14836(%var_14835: Tensor[(1690), float64]) -> (Tensor[(13, 13, ?), int8], Tensor[(13, 13, 10), bool], Tensor[(1690), float64]) {
  %1158 = fn (%var_14830: Tensor[(1690), float64]) -> (Tensor[(13, 13, ?), int8], Tensor[(13, 13, 10), bool], Tensor[(1690), float64]) {
    %1152 = @func_9663() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 2), float64], Tensor[(13, 13, ?), int8]) */;
    %1153 = cast(%var_14830, dtype="float64") /* ty=Tensor[(1690), float64] */;
    %1154 = reshape(%1153, newshape=[13, 13, 10]) /* ty=Tensor[(13, 13, 10), float64] */;
    %1155 = @func_1490(%1154) /* ty=(Tensor[(13, 13, 10), bool],) */;
    %1156 = %1152.2;
    %1157 = %1155.0;
    (%1156, %1157, %var_14830)
  };
  %1158(%var_14835) /* ty=(Tensor[(13, 13, ?), int8], Tensor[(13, 13, 10), bool], Tensor[(1690), float64]) */
}

def @func_8664() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32], Tensor[(13, 13, 2), float64]) {
  %1163 = fn () -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32], Tensor[(13, 13, 2), float64]) {
    %1159 = @func_3712() /* ty=(Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool]) */;
    %1160 = @func_2110() /* ty=Tensor[(13, 13, ?), bool] */;
    %1161 = %1159.1;
    %1162 = @func_6795() /* ty=Tensor[(13, 13, 2), float64] */;
    (%1160, %1161, %1162)
  };
  %1163() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32], Tensor[(13, 13, 2), float64]) */
}

def @func_9291() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %1164 = @func_8356() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %1165 = @func_6096() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %1166 = %1164.1;
  %1167 = %1165.1;
  (%1166, %1167)
}

def @func_3967() -> (Tensor[(13, 13, ?), bool],) {
  %1168 = @func_547() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %1169 = %1168.0;
  (%1169,)
}

def @func_3969() -> (Tensor[(13, 13, ?), bool],) {
  @func_3967() /* ty=(Tensor[(13, 13, ?), bool],) */
}

def @func_10815() -> Tensor[(13, 13, ?), bool] {
  %1170 = fn () -> Tensor[(13, 13, ?), bool] {
    @func_2478() /* ty=Tensor[(13, 13, ?), bool] */
  };
  %1170() /* ty=Tensor[(13, 13, ?), bool] */
}

def @func_15627() -> (Tensor[(13, 13, 10), int64], Tensor[(13, 13, ?), bool]) {
  %1175 = fn () -> (Tensor[(13, 13, 10), int64], Tensor[(13, 13, ?), bool]) {
    %1171 = @func_11487() /* ty=(Tensor[(13, 13, ?), float64], Tensor[(13, 13, 10), int64], Tensor[(13, 13, ?), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 10), int64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
    %1172 = @func_8356() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
    %1173 = %1171.4;
    %1174 = %1172.0;
    (%1173, %1174)
  };
  %1175() /* ty=(Tensor[(13, 13, 10), int64], Tensor[(13, 13, ?), bool]) */
}

def @func_15815(%var_15813: Tensor[(7), float32]) -> (Tensor[(13, 13, ?), float32], Tensor[(7), float32], Tensor[(7), float32]) {
  @func_15812(%var_15813) /* ty=(Tensor[(13, 13, ?), float32], Tensor[(7), float32], Tensor[(7), float32]) */
}

def @func_3075() -> (Tensor[(13, 13, ?), int8], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  @func_3073() /* ty=(Tensor[(13, 13, ?), int8], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */
}

def @func_2953() -> (Tensor[(13, 13, ?), int8], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %1193 = fn () -> (Tensor[(13, 13, ?), int8], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
    %1176 = @func_610() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
    %1177 = %1176.0;
    %1178 = @func_2646() /* ty=(Tensor[(13, 13, ?), bool],) */;
    %1179 = %1178.0;
    %1180 = cast(%1179, dtype="int64") /* ty=Tensor[(13, 13, ?), int64] */;
    %1181 = shape_of(%1177, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1182 = cast(%1177, dtype="int64") /* ty=Tensor[(13, 13, ?), int64] */;
    %1183 = dyn.reshape(%1180, %1181, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %1184 = add(%1182, %1183) /* ty=Tensor[(13, 13, ?), int64] */;
    %1185 = cast(%1184, dtype="int8") /* ty=Tensor[(13, 13, ?), int8] */;
    %1186 = shape_of(%1177, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1187 = cast(%1177, dtype="int8") /* ty=Tensor[(13, 13, ?), int8] */;
    %1188 = dyn.reshape(%1185, %1186, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %1189 = @func_1986() /* ty=(Tensor[(13, 13, ?), bool],) */;
    %1190 = subtract(%1187, %1188) /* ty=Tensor[(13, 13, ?), int8] */;
    %1191 = %1189.0;
    %1192 = @func_2110() /* ty=Tensor[(13, 13, ?), bool] */;
    (%1190, %1191, %1192)
  };
  %1193() /* ty=(Tensor[(13, 13, ?), int8], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */
}

def @func_11335() -> (Tensor[(13, 13, ?), bool],) {
  %1196 = fn () -> (Tensor[(13, 13, ?), bool],) {
    %1194 = @func_9761() /* ty=(Tensor[(13, 13, ?), bool],) */;
    %1195 = %1194.0;
    (%1195,)
  };
  %1196() /* ty=(Tensor[(13, 13, ?), bool],) */
}

def @func_1520() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  @func_1518() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */
}

def @func_6796() -> Tensor[(13, 13, 2), float64] {
  %1198 = fn () -> Tensor[(13, 13, 2), float64] {
    %1197 = @func_2695() /* ty=(Tensor[(13, 13, 2), float64],) */;
    %1197.0
  };
  %1198() /* ty=Tensor[(13, 13, 2), float64] */
}

def @func_12960() -> Tensor[(13, 13, ?), bool] {
  @func_12958() /* ty=Tensor[(13, 13, ?), bool] */
}

def @func_15989() -> Tensor[(13, 13, 1), float64] {
  @func_15987() /* ty=Tensor[(13, 13, 1), float64] */
}

def @func_16027() -> (Tensor[(13, 13, ?), bool],) {
  %1201 = fn () -> (Tensor[(13, 13, ?), bool],) {
    %1199 = @func_820() /* ty=(Tensor[(13, 13, ?), bool],) */;
    %1200 = %1199.0;
    (%1200,)
  };
  %1201() /* ty=(Tensor[(13, 13, ?), bool],) */
}

def @func_9933(%var_9915: Tensor[(2028), float64]) -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 12), bool], Tensor[(2028), float64], Tensor[(13, 13, ?), bool]) {
  %1202 = @func_4672() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %1203 = cast(%var_9915, dtype="float64") /* ty=Tensor[(2028), float64] */;
  %1204 = reshape(%1203, newshape=[13, 13, 12]) /* ty=Tensor[(13, 13, 12), float64] */;
  %1205 = @func_8087() /* ty=(Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool]) */;
  %1206 = @func_2376() /* ty=Tensor[(13, 13, ?), bool] */;
  %1207 = %1202.1;
  %1208 = @func_6700(%1204) /* ty=Tensor[(13, 13, 12), bool] */;
  %1209 = %1205.1;
  (%1206, %1207, %1208, %var_9915, %1209)
}

def @func_4015() -> Tensor[(13, 13, ?), bool] {
  %1210 = @func_3472() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %1210.1
}

def @func_3746() -> (Tensor[(13, 13, 2), float64],) {
  %1211 = @func_3103() /* ty=(Tensor[(13, 13, 2), float64],) */;
  %1212 = %1211.0;
  (%1212,)
}

def @func_15441() -> (Tensor[(13, 13, ?), bool],) {
  %1213 = @func_10428() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(1690), float32]) */;
  %1214 = %1213.4;
  (%1214,)
}

def @func_5486() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %1215 = @func_2169() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %1216 = @func_5068() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %1217 = @func_531() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %1218 = %1215.0;
  %1219 = %1216.0;
  %1220 = %1217.0;
  (%1218, %1219, %1220)
}

def @func_16779() -> (Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %1227 = fn () -> (Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
    %1221 = @func_8503() /* ty=(Tensor[(13, 13, ?), float32],) */;
    %1222 = @func_7487() /* ty=(Tensor[(13, 13, ?), bool],) */;
    %1223 = @func_15831() /* ty=(Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
    %1224 = %1221.0;
    %1225 = %1222.0;
    %1226 = %1223.1;
    (%1224, %1225, %1226)
  };
  %1227() /* ty=(Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */
}

def @func_2684(%var_2683: Tensor[(13, 13, 11), bool]) -> (Tensor[(13, 13, 11), float32], Tensor[(13, 13, 11), float32]) {
  %1235 = fn (%var_2662: Tensor[(13, 13, 11), bool]) -> (Tensor[(13, 13, 11), float32], Tensor[(13, 13, 11), float32]) {
    %1228 = @func_1247() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), uint32], Tensor[(13, 13, ?), bool]) */;
    %1229 = %1228.0;
    %1230 = cast(%1229, dtype="float32") /* ty=Tensor[(13, 13, ?), float32] */;
    %1231 = cast(%var_2662, dtype="float32") /* ty=Tensor[(13, 13, 11), float32] */;
    %1232 = cast(%var_2662, dtype="float32") /* ty=Tensor[(13, 13, 11), float32] */;
    %1233 = maximum(%1230, %1231) /* ty=Tensor[(13, 13, 11), float32] */;
    %1234 = log(%1232) /* ty=Tensor[(13, 13, 11), float32] */;
    (%1233, %1234)
  };
  %1235(%var_2683) /* ty=(Tensor[(13, 13, 11), float32], Tensor[(13, 13, 11), float32]) */
}

def @func_727() -> (Tensor[(13, 13, 1), float64],) {
  @func_725() /* ty=(Tensor[(13, 13, 1), float64],) */
}

def @func_10999(%var_10986: Tensor[(13, 13, 11), float32]) -> (Tensor[(13, 13, 11), bool],) {
  %1236 = @func_1142() /* ty=(Tensor[(13, 13, ?), float32],) */;
  %1237 = %1236.0;
  %1238 = cast(%1237, dtype="bool") /* ty=Tensor[(13, 13, ?), bool] */;
  %1239 = cast(%var_10986, dtype="bool") /* ty=Tensor[(13, 13, 11), bool] */;
  %1240 = not_equal(%1238, %1239) /* ty=Tensor[(13, 13, 11), bool] */;
  (%1240,)
}

def @func_3011() -> Tensor[(13, 13, ?), bool] {
  %1241 = @func_2286() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %1241.0
}

def @func_15147() -> (Tensor[(13, 13, ?), float32],) {
  %1242 = @func_14884() /* ty=(Tensor[(13, 13, 2), float64], Tensor[(13, 13, ?), float32]) */;
  %1243 = %1242.1;
  (%1243,)
}

def @func_3944() -> (Tensor[(13, 13, ?), float64],) {
  @func_3942() /* ty=(Tensor[(13, 13, ?), float64],) */
}

def @func_10054() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(1690), float32]) {
  %1244 = cast(meta[relay.Constant][26] /* ty=Tensor[(1690), float32] */, dtype="float32") /* ty=Tensor[(1690), float32] */;
  %1245 = cast(meta[relay.Constant][26] /* ty=Tensor[(1690), float32] */, dtype="float32") /* ty=Tensor[(1690), float32] */;
  %1246 = reshape(%1244, newshape=[1690]) /* ty=Tensor[(1690), float32] */;
  %1247 = reshape(%1245, newshape=[1690]) /* ty=Tensor[(1690), float32] */;
  %1248 = @func_8329(%1246, %1247) /* ty=(Tensor[(13, 13, ?), int8], Tensor[(13, 13, ?), bool], Tensor[(1690), float64], Tensor[(1690), bool]) */;
  %1249 = @func_5330() /* ty=Tensor[(13, 13, ?), bool] */;
  %1250 = %1248.1;
  (%1249, %1250, meta[relay.Constant][26] /* ty=Tensor[(1690), float32] */)
}

def @func_13100(%var_13089: uint32, %var_13090: Tensor[(6, 9, 12), uint32]) -> (Tensor[(6, 9, 12), bool], Tensor[(6, 9, 12), int8]) {
  %1251 = cast(%var_13089, dtype="bool") /* ty=bool */;
  %1252 = cast(%var_13090, dtype="bool") /* ty=Tensor[(6, 9, 12), bool] */;
  %1253 = cast(%var_13090, dtype="int8") /* ty=Tensor[(6, 9, 12), int8] */;
  %1254 = cast(%var_13089, dtype="int8") /* ty=int8 */;
  %1255 = equal(%1251, %1252) /* ty=Tensor[(6, 9, 12), bool] */;
  %1256 = left_shift(%1253, %1254) /* ty=Tensor[(6, 9, 12), int8] */;
  (%1255, %1256)
}

def @func_9857() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float64]) {
  %1260 = fn () -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float64]) {
    %1257 = @func_9761() /* ty=(Tensor[(13, 13, ?), bool],) */;
    %1258 = %1257.0;
    %1259 = @func_6578() /* ty=Tensor[(13, 13, ?), float64] */;
    (%1258, %1259)
  };
  %1260() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float64]) */
}

def @func_11002(%var_11000: Tensor[(13, 13, 11), float32]) -> (Tensor[(13, 13, 11), bool],) {
  @func_10999(%var_11000) /* ty=(Tensor[(13, 13, 11), bool],) */
}

def @func_7982(%var_7981: Tensor[(13, 13, 1), bool]) -> Tensor[(13, 13, ?), bool] {
  %1267 = fn (%var_7960: Tensor[(13, 13, 1), bool]) -> Tensor[(13, 13, ?), bool] {
    %1261 = @func_3130() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
    %1262 = %1261.0;
    %1263 = cast(%var_7960, dtype="bool") /* ty=Tensor[(13, 13, 1), bool] */;
    %1264 = shape_of(%1262, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1265 = cast(%1262, dtype="bool") /* ty=Tensor[(13, 13, ?), bool] */;
    %1266 = dyn.reshape(%1263, %1264, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    not_equal(%1265, %1266) /* ty=Tensor[(13, 13, ?), bool] */
  };
  %1267(%var_7981) /* ty=Tensor[(13, 13, ?), bool] */
}

def @func_3208() -> Tensor[(13, 13, ?), float64] {
  %1268 = @func_2478() /* ty=Tensor[(13, 13, ?), bool] */;
  %1269 = cast(%1268, dtype="float64") /* ty=Tensor[(13, 13, ?), float64] */;
  acos(%1269) /* ty=Tensor[(13, 13, ?), float64] */
}

def @func_3105() -> (Tensor[(13, 13, 2), float64],) {
  @func_3103() /* ty=(Tensor[(13, 13, 2), float64],) */
}

def @func_5262() -> Tensor[(13, 13, ?), bool] {
  %1270 = @func_547() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %1270.0
}

def @func_8051() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), uint32], Tensor[(13, 13, ?), bool]) {
  %1271 = @func_6002() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), uint32]) */;
  %1272 = @func_547() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %1273 = @func_6847() /* ty=Tensor[(13, 13, ?), bool] */;
  %1274 = %1271.1;
  %1275 = %1272.0;
  (%1273, %1274, %1275)
}

def @func_15693() -> (Tensor[(13, 13, ?), bool],) {
  @func_15691() /* ty=(Tensor[(13, 13, ?), bool],) */
}

def @func_8433(%var_8403: Tensor[(10, 8, 1), float64]) -> (Tensor[(10, 8, ?), bool],) {
  %1276 = cast(%var_8403, dtype="float64") /* ty=Tensor[(10, 8, 1), float64] */;
  %1277 = exp(%1276) /* ty=Tensor[(10, 8, 1), float64] */;
  %1278 = cast(%var_8403, dtype="bool") /* ty=Tensor[(10, 8, 1), bool] */;
  %1279 = shape_of(%1277, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1280 = cast(%1277, dtype="bool") /* ty=Tensor[(10, 8, 1), bool] */;
  %1281 = dyn.reshape(%1278, %1279, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1282 = logical_and(%1280, %1281) /* ty=Tensor[(10, 8, ?), bool] */;
  (%1282,)
}

def @func_1888() -> (Tensor[(13, 13, ?), bool],) {
  %1283 = @func_1829() /* ty=Tensor[(13, 13, ?), bool] */;
  (%1283,)
}

def @func_3103() -> (Tensor[(13, 13, 2), float64],) {
  %1284 = @func_2695() /* ty=(Tensor[(13, 13, 2), float64],) */;
  %1285 = %1284.0;
  (%1285,)
}

def @func_9999() -> Tensor[(13, 13, ?), bool] {
  @func_9997() /* ty=Tensor[(13, 13, ?), bool] */
}

def @func_16884() -> (Tensor[(13, 13, ?), float64], Tensor[(13, 13, ?), bool]) {
  @func_16882() /* ty=(Tensor[(13, 13, ?), float64], Tensor[(13, 13, ?), bool]) */
}

def @func_16416() -> Tensor[(13, 13, ?), bool] {
  @func_7692() /* ty=Tensor[(13, 13, ?), bool] */
}

def @func_16418() -> Tensor[(13, 13, ?), bool] {
  @func_16416() /* ty=Tensor[(13, 13, ?), bool] */
}

def @func_4381() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %1286 = @func_610() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %1287 = @func_1037() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %1288 = %1286.1;
  %1289 = %1287.1;
  (%1288, %1289)
}

def @func_13548() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), int8], Tensor[(13, 13, ?), bool]) {
  @func_13546() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), int8], Tensor[(13, 13, ?), bool]) */
}

def @func_14727() -> (Tensor[(8, 16, 12), float64], Tensor[(13, 13, 1), float64]) {
  %1294 = fn () -> (Tensor[(8, 16, 12), float64], Tensor[(13, 13, 1), float64]) {
    %1290 = cast(meta[relay.Constant][27] /* ty=Tensor[(8, 16, 12), float64] */, dtype="float64") /* ty=Tensor[(8, 16, 12), float64] */;
    %1291 = @func_1662() /* ty=(Tensor[(13, 13, 1), float64], Tensor[(13, 13, 1), float64]) */;
    %1292 = rsqrt(%1290) /* ty=Tensor[(8, 16, 12), float64] */;
    %1293 = %1291.1;
    (%1292, %1293)
  };
  %1294() /* ty=(Tensor[(8, 16, 12), float64], Tensor[(13, 13, 1), float64]) */
}

def @func_8053() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), uint32], Tensor[(13, 13, ?), bool]) {
  @func_8051() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), uint32], Tensor[(13, 13, ?), bool]) */
}

def @func_4353() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 10), bool], Tensor[(1690), float64]) {
  @func_4351() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 10), bool], Tensor[(1690), float64]) */
}

def @func_14954() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  @func_14952() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */
}

def @func_10508() -> (Tensor[(13, 13, ?), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool]) {
  %1304 = fn () -> (Tensor[(13, 13, ?), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool]) {
    %1295 = @func_9856() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float64]) */;
    %1296 = @func_1947() /* ty=(Tensor[(13, 13, ?), bool],) */;
    %1297 = @func_8838() /* ty=(Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool]) */;
    %1298 = %1296.0;
    %1299 = cast(%1298, dtype="bool") /* ty=Tensor[(13, 13, ?), bool] */;
    %1300 = reshape(%1299, newshape=[13, 13, 1]) /* ty=Tensor[(13, 13, 1), bool] */;
    %1301 = %1295.1;
    %1302 = %1297.0;
    %1303 = @func_7980(%1300) /* ty=Tensor[(13, 13, ?), bool] */;
    (%1301, %1298, %1302, %1303)
  };
  %1304() /* ty=(Tensor[(13, 13, ?), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool]) */
}

def @func_9588(%var_9587: Tensor[(13, 8, 11), float64]) -> (Tensor[(13, 8, 11), bool], Tensor[(13, 13, ?), bool]) {
  %1312 = fn (%var_9569: Tensor[(13, 8, 11), float64]) -> (Tensor[(13, 8, 11), bool], Tensor[(13, 13, ?), bool]) {
    %1305 = cast(%var_9569, dtype="bool") /* ty=Tensor[(13, 8, 11), bool] */;
    %1306 = shape_of(meta[relay.Constant][28] /* ty=Tensor[(13, 8, 11), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1307 = cast(meta[relay.Constant][28] /* ty=Tensor[(13, 8, 11), float64] */, dtype="bool") /* ty=Tensor[(13, 8, 11), bool] */;
    %1308 = dyn.reshape(%1305, %1306, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1309 = @func_531() /* ty=(Tensor[(13, 13, ?), bool],) */;
    %1310 = equal(%1307, %1308) /* ty=Tensor[(13, 8, 11), bool] */;
    %1311 = %1309.0;
    (%1310, %1311)
  };
  %1312(%var_9587) /* ty=(Tensor[(13, 8, 11), bool], Tensor[(13, 13, ?), bool]) */
}

def @func_1949() -> (Tensor[(13, 13, ?), bool],) {
  @func_1947() /* ty=(Tensor[(13, 13, ?), bool],) */
}

def @func_468() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64]) {
  %1313 = cast(meta[relay.Constant][29] /* ty=Tensor[(13, 13, 1), float32] */, dtype="float32") /* ty=Tensor[(13, 13, 1), float32] */;
  %1314 = atanh(%1313) /* ty=Tensor[(13, 13, 1), float32] */;
  %1315 = cast(meta[relay.Constant][29] /* ty=Tensor[(13, 13, 1), float32] */, dtype="float64") /* ty=Tensor[(13, 13, 1), float64] */;
  %1316 = shape_of(%1314, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1317 = cast(%1314, dtype="float64") /* ty=Tensor[(13, 13, 1), float64] */;
  %1318 = dyn.reshape(%1315, %1316, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1319 = divide(%1317, %1318) /* ty=Tensor[(13, 13, ?), float64] */;
  %1320 = cast(meta[relay.Constant][29] /* ty=Tensor[(13, 13, 1), float32] */, dtype="bool") /* ty=Tensor[(13, 13, 1), bool] */;
  %1321 = shape_of(%1319, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1322 = cast(%1319, dtype="bool") /* ty=Tensor[(13, 13, ?), bool] */;
  %1323 = dyn.reshape(%1320, %1321, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1324 = cast(%1314, dtype="float64") /* ty=Tensor[(13, 13, 1), float64] */;
  %1325 = greater_equal(%1322, %1323) /* ty=Tensor[(13, 13, ?), bool] */;
  %1326 = erf(%1324) /* ty=Tensor[(13, 13, 1), float64] */;
  (%1325, %1326)
}

def @func_11713(%var_11711: Tensor[(4, 6, 1), float32]) -> (Tensor[(4, 6, 1), float32], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64]) {
  @func_11710(%var_11711) /* ty=(Tensor[(4, 6, 1), float32], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64]) */
}

def @func_6580() -> Tensor[(13, 13, ?), float64] {
  @func_6578() /* ty=Tensor[(13, 13, ?), float64] */
}

def @func_10174() -> (Tensor[(13, 13, ?), bool],) {
  %1327 = @func_3858() /* ty=Tensor[(13, 13, ?), bool] */;
  (%1327,)
}

def @func_12265(%var_12264: Tensor[(24), float32]) -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(24), float32]) {
  %1334 = fn (%var_12246: Tensor[(24), float32]) -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(24), float32]) {
    %1328 = @func_1759() /* ty=(Tensor[(13, 13, ?), float32], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
    %1329 = cast(%var_12246, dtype="float32") /* ty=Tensor[(24), float32] */;
    %1330 = reshape(%1329, newshape=[4, 6, 1]) /* ty=Tensor[(4, 6, 1), float32] */;
    %1331 = @func_11710(%1330) /* ty=(Tensor[(4, 6, 1), float32], Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64]) */;
    %1332 = %1328.2;
    %1333 = %1331.1;
    (%1332, %1333, %var_12246)
  };
  %1334(%var_12264) /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(24), float32]) */
}

def @func_15812(%var_15804: Tensor[(7), float32]) -> (Tensor[(13, 13, ?), float32], Tensor[(7), float32], Tensor[(7), float32]) {
  %1335 = cast(%var_15804, dtype="float32") /* ty=Tensor[(7), float32] */;
  %1336 = reshape(%1335, newshape=[7]) /* ty=Tensor[(7), float32] */;
  %1337 = @func_13267(%1336) /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float64], Tensor[(7), float32], Tensor[(13, 13, 10), float32]) */;
  %1338 = @func_7498() /* ty=Tensor[(13, 13, ?), float32] */;
  %1339 = %1337.2;
  (%1338, %1339, %var_15804)
}

def @func_16935() -> (Tensor[(13, 13, ?), float32],) {
  @func_16933() /* ty=(Tensor[(13, 13, ?), float32],) */
}

def @func_17578() -> Tensor[(13, 13, 1), float64] {
  @func_15987() /* ty=Tensor[(13, 13, 1), float64] */
}

def @func_12716() -> Tensor[(13, 13, ?), uint32] {
  %1341 = fn () -> Tensor[(13, 13, ?), uint32] {
    %1340 = @func_6002() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), uint32]) */;
    %1340.1
  };
  %1341() /* ty=Tensor[(13, 13, ?), uint32] */
}

def @func_4966() -> (Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), uint8]) {
  @func_4964() /* ty=(Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), uint8]) */
}

def @func_2647() -> (Tensor[(13, 13, ?), bool],) {
  %1343 = fn () -> (Tensor[(13, 13, ?), bool],) {
    %1342 = @func_2376() /* ty=Tensor[(13, 13, ?), bool] */;
    (%1342,)
  };
  %1343() /* ty=(Tensor[(13, 13, ?), bool],) */
}

def @func_5488() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  @func_5486() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */
}

def @func_14748() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64]) {
  %1344 = @func_2985() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), int8]) */;
  %1345 = @func_3712() /* ty=(Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool]) */;
  %1346 = %1344.0;
  %1347 = %1345.0;
  (%1346, %1347)
}

def @func_7694() -> Tensor[(13, 13, ?), bool] {
  @func_7692() /* ty=Tensor[(13, 13, ?), bool] */
}

def @func_10206() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %1353 = fn () -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
    %1348 = @func_2169() /* ty=(Tensor[(13, 13, ?), bool],) */;
    %1349 = @func_5791() /* ty=(Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool]) */;
    %1350 = %1348.0;
    %1351 = %1349.1;
    %1352 = @func_9997() /* ty=Tensor[(13, 13, ?), bool] */;
    (%1350, %1351, %1352)
  };
  %1353() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */
}

def @func_14885() -> (Tensor[(13, 13, 2), float64], Tensor[(13, 13, ?), float32]) {
  %1358 = fn () -> (Tensor[(13, 13, 2), float64], Tensor[(13, 13, ?), float32]) {
    %1354 = @func_3103() /* ty=(Tensor[(13, 13, 2), float64],) */;
    %1355 = @func_7935() /* ty=(Tensor[(13, 13, ?), float32],) */;
    %1356 = %1354.0;
    %1357 = %1355.0;
    (%1356, %1357)
  };
  %1358() /* ty=(Tensor[(13, 13, 2), float64], Tensor[(13, 13, ?), float32]) */
}

def @func_13546() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), int8], Tensor[(13, 13, ?), bool]) {
  %1359 = @func_2985() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), int8]) */;
  %1360 = @func_610() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %1361 = @func_7457() /* ty=Tensor[(13, 13, ?), bool] */;
  %1362 = %1359.1;
  %1363 = %1360.1;
  (%1361, %1362, %1363)
}

def @func_11099() -> (Tensor[(13, 13, ?), bool],) {
  %1364 = @func_2376() /* ty=Tensor[(13, 13, ?), bool] */;
  (%1364,)
}

def @func_14533(%var_14532: Tensor[(1690), float32]) -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 130), uint8], Tensor[(1690), float32]) {
  %1377 = fn (%var_14513: Tensor[(1690), float32]) -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 130), uint8], Tensor[(1690), float32]) {
    %1365 = @func_2110() /* ty=Tensor[(13, 13, ?), bool] */;
    %1366 = cast(%1365, dtype="bool") /* ty=Tensor[(13, 13, ?), bool] */;
    %1367 = reshape(%1366, newshape=[13, 13, 1]) /* ty=Tensor[(13, 13, 1), bool] */;
    %1368 = @func_14035(%1367) /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32]) */;
    %1369 = @func_13027() /* ty=(Tensor[(13, 13, ?), bool],) */;
    %1370 = @func_6096() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
    %1371 = cast(%var_14513, dtype="float32") /* ty=Tensor[(1690), float32] */;
    %1372 = reshape(%1371, newshape=[13, 130]) /* ty=Tensor[(13, 130), float32] */;
    %1373 = %1368.1;
    %1374 = %1369.0;
    %1375 = %1370.1;
    %1376 = @func_11373(%1372) /* ty=Tensor[(13, 130), uint8] */;
    (%1365, %1373, %1374, %1375, %1376, %var_14513)
  };
  %1377(%var_14532) /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 130), uint8], Tensor[(1690), float32]) */
}

def @func_15581() -> (Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool]) {
  @func_15579() /* ty=(Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool]) */
}

def @func_11986() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %1384 = fn () -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
    %1378 = @func_11632() /* ty=(Tensor[(13, 13, ?), bool],) */;
    %1379 = @func_6002() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), uint32]) */;
    %1380 = @func_4432() /* ty=(Tensor[(13, 13, ?), bool],) */;
    %1381 = %1378.0;
    %1382 = %1379.0;
    %1383 = %1380.0;
    (%1381, %1382, %1383)
  };
  %1384() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */
}

def @func_4879() -> (Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %1395 = fn () -> (Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
    %1385 = @func_2376() /* ty=Tensor[(13, 13, ?), bool] */;
    %1386 = cast(%1385, dtype="float32") /* ty=Tensor[(13, 13, ?), float32] */;
    %1387 = @func_3942() /* ty=(Tensor[(13, 13, ?), float64],) */;
    %1388 = @func_3967() /* ty=(Tensor[(13, 13, ?), bool],) */;
    %1389 = @func_820() /* ty=(Tensor[(13, 13, ?), bool],) */;
    %1390 = asin(%1386) /* ty=Tensor[(13, 13, ?), float32] */;
    %1391 = %1387.0;
    %1392 = @func_4333() /* ty=Tensor[(13, 13, ?), bool] */;
    %1393 = %1388.0;
    %1394 = %1389.0;
    (%1390, %1391, %1392, %1393, %1394)
  };
  %1395() /* ty=(Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), float64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */
}

def @func_7830(%var_7828: Tensor[(1014, 2), float64], %var_7829: Tensor[(1014, 2), bool]) -> (Tensor[(13, 13, ?), bool], Tensor[(1014, 2), float32], Tensor[(1014, 2), float32]) {
  @func_7826(%var_7828, %var_7829) /* ty=(Tensor[(13, 13, ?), bool], Tensor[(1014, 2), float32], Tensor[(1014, 2), float32]) */
}

def @func_8394() -> (Tensor[(13, 13, 1), float64],) {
  %1396 = @func_2544() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool]) */;
  %1397 = %1396.1;
  (%1397,)
}

def @func_17020() -> (Tensor[(13, 13, ?), bool],) {
  %1399 = fn () -> (Tensor[(13, 13, ?), bool],) {
    %1398 = @func_13868() /* ty=Tensor[(13, 13, ?), bool] */;
    (%1398,)
  };
  %1399() /* ty=(Tensor[(13, 13, ?), bool],) */
}

def @func_8267() -> Tensor[(13, 13, 2), float64] {
  %1401 = fn () -> Tensor[(13, 13, 2), float64] {
    %1400 = @func_3103() /* ty=(Tensor[(13, 13, 2), float64],) */;
    %1400.0
  };
  %1401() /* ty=Tensor[(13, 13, 2), float64] */
}

def @func_2169() -> (Tensor[(13, 13, ?), bool],) {
  %1402 = @func_468() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64]) */;
  %1403 = %1402.0;
  (%1403,)
}

def @func_1464() -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %1404 = @func_610() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) */;
  %1405 = @func_820() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %1406 = %1404.0;
  %1407 = %1405.0;
  (%1406, %1407)
}

def @func_17330() -> Tensor[(13, 13, ?), bool] {
  %1408 = @func_1247() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), uint32], Tensor[(13, 13, ?), bool]) */;
  %1408.0
}

def @func_7264(%var_7263: Tensor[(7), float32]) -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float64], Tensor[(7), float32]) {
  %1416 = fn (%var_7232: Tensor[(7), float32]) -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float64], Tensor[(7), float32]) {
    %1409 = cast(%var_7232, dtype="float32") /* ty=Tensor[(7), float32] */;
    %1410 = reshape(%1409, newshape=[7]) /* ty=Tensor[(7), float32] */;
    %1411 = @func_6135(%1410) /* ty=(Tensor[(13, 13, 2), float64], Tensor[(13, 13, ?), float64], Tensor[(7), float32]) */;
    %1412 = @func_5735() /* ty=Tensor[(13, 13, ?), bool] */;
    %1413 = @func_3858() /* ty=Tensor[(13, 13, ?), bool] */;
    %1414 = @func_1829() /* ty=Tensor[(13, 13, ?), bool] */;
    %1415 = %1411.1;
    (%1412, %1413, %1414, %1415, %var_7232)
  };
  %1416(%var_7263) /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), float64], Tensor[(7), float32]) */
}

def @func_16137(%var_16111: Tensor[(13, 5, 6), uint64]) -> (Tensor[(13, 5, 6), uint64], Tensor[(13, 13, ?), bool], Tensor[(13, 13, ?), bool]) {
  %1417 = cast(%var_16111, dtype="uint64") /* ty=Tensor[(13, 5, 6), uint64] */;
  %1418 = shape_of(meta[relay.Constant][30] /* ty=Tensor[(13, 5, 6), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1419 = cast(meta[relay.Constant][30] /* ty=Tensor[(13, 5, 6), uint64] */, dtype="uint64") /* ty=Tensor[(13, 5, 6), uint64] */;
  %1420 = dyn.reshape(%1417, %1418, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1421 = @func_14748() /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64]) */;
  %1422 = left_shift(%1419, %1420) /* ty=Tensor[(13, 5, 6), uint64] */;
  %1423 = %1421.0;
  %1424 = @func_9363() /* ty=Tensor[(13, 13, ?), bool] */;
  (%1422, %1423, %1424)
}

def @func_6197(%var_6196: Tensor[(7, 2, 1), float64]) -> Tensor[(7, 2, ?), int8] {
  %1431 = fn (%var_6161: Tensor[(7, 2, 1), float64]) -> Tensor[(7, 2, ?), int8] {
    %1425 = cast(%var_6161, dtype="float64") /* ty=Tensor[(7, 2, 1), float64] */;
    %1426 = sigmoid(%1425) /* ty=Tensor[(7, 2, 1), float64] */;
    %1427 = cast(%1426, dtype="int8") /* ty=Tensor[(7, 2, 1), int8] */;
    %1428 = shape_of(%var_6161, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1429 = cast(%var_6161, dtype="int8") /* ty=Tensor[(7, 2, 1), int8] */;
    %1430 = dyn.reshape(%1427, %1428, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    right_shift(%1429, %1430) /* ty=Tensor[(7, 2, ?), int8] */
  };
  %1431(%var_6196) /* ty=Tensor[(7, 2, ?), int8] */
}

def @func_14588() -> (Tensor[(13, 13, ?), bool],) {
  %1433 = fn () -> (Tensor[(13, 13, ?), bool],) {
    %1432 = @func_2478() /* ty=Tensor[(13, 13, ?), bool] */;
    (%1432,)
  };
  %1433() /* ty=(Tensor[(13, 13, ?), bool],) */
}

def @func_7770(%var_7768: Tensor[(1690), float32]) -> (Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(1690), float32]) {
  @func_7767(%var_7768) /* ty=(Tensor[(13, 13, ?), bool], Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), bool], Tensor[(1690), float32]) */
}

def @func_9016() -> (Tensor[(13, 13, 7), bool],) {
  %1434 = @func_8503() /* ty=(Tensor[(13, 13, ?), float32],) */;
  %1435 = %1434.0;
  %1436 = @func_4528() /* ty=(Tensor[(13, 13, ?), bool],) */;
  %1437 = %1436.0;
  %1438 = cast(%1437, dtype="int64") /* ty=Tensor[(13, 13, ?), int64] */;
  %1439 = cast(meta[relay.Constant][31] /* ty=Tensor[(13, 13, 7), bool] */, dtype="int64") /* ty=Tensor[(13, 13, 7), int64] */;
  %1440 = right_shift(%1438, %1439) /* ty=Tensor[(13, 13, 7), int64] */;
  %1441 = cast(%1435, dtype="bool") /* ty=Tensor[(13, 13, ?), bool] */;
  %1442 = cast(%1440, dtype="bool") /* ty=Tensor[(13, 13, 7), bool] */;
  %1443 = greater(%1441, %1442) /* ty=Tensor[(13, 13, 7), bool] */;
  (%1443,)
}

def @func_15392() -> (Tensor[(13, 13, 1), float64],) {
  %1446 = fn () -> (Tensor[(13, 13, 1), float64],) {
    %1444 = @func_3712() /* ty=(Tensor[(13, 13, 1), float64], Tensor[(13, 13, ?), float32], Tensor[(13, 13, ?), bool]) */;
    %1445 = %1444.0;
    (%1445,)
  };
  %1446() /* ty=(Tensor[(13, 13, 1), float64],) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen840/build/output.py", line 5609, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  79: TVMFuncCall
  78: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  77: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  76: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  75: tvm::transform::Pass::operator()(tvm::IRModule) const
  74: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  73: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  72: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  71: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  70: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  69: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [14:26:08] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int


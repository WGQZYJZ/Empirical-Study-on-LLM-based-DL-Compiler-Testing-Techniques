==========mod==========
#[version = "0.0.5"]
def @func_9475() -> (Tensor[(13, 5, 2), float32],) {
  %0 = @func_1708() /* ty=Tensor[(13, 5, 2), float32] */;
  (%0,)
}

def @func_10257() -> (Tensor[(2464), float32],) {
  %1 = @func_2530() /* ty=(Tensor[(2464), float32],) */;
  %2 = %1.0;
  %3 = cast(%2, dtype="float32") /* ty=Tensor[(2464), float32] */;
  %4 = cosh(%3) /* ty=Tensor[(2464), float32] */;
  (%4,)
}

def @func_13996() -> (Tensor[(13, 5, 2), float32],) {
  %5 = @func_13963() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %6 = %5.0;
  (%6,)
}

def @func_14208(%var_14203: Tensor[(4, 7, 7), float64]) -> Tensor[(4, 7, 7), float64] {
  %7 = cast(%var_14203, dtype="float64") /* ty=Tensor[(4, 7, 7), float64] */;
  acosh(%7) /* ty=Tensor[(4, 7, 7), float64] */
}

def @func_6102() -> Tensor[(13, 5, 2), float32] {
  @func_1708() /* ty=Tensor[(13, 5, 2), float32] */
}

def @func_11563() -> (Tensor[(13, 5, 2), float32],) {
  %8 = @func_11224() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8], Tensor[(11, 16, 14), float64]) */;
  %9 = %8.0;
  (%9,)
}

def @func_9008() -> (Tensor[(13, 5, 2), float32], Tensor[(168), float32]) {
  %10 = @func_8144() /* ty=(Tensor[(168), float32],) */;
  %11 = @func_1354() /* ty=Tensor[(13, 5, 2), float32] */;
  %12 = %10.0;
  (%11, %12)
}

def @func_4396(%var_4388: Tensor[(2464), float32]) -> (Tensor[(13, 5, 2), int8], Tensor[(13, 5, 2), float32], Tensor[(2464), float32]) {
  %13 = @func_3794() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) */;
  %14 = cast(%var_4388, dtype="float32") /* ty=Tensor[(2464), float32] */;
  %15 = reshape(%14, newshape=[2464]) /* ty=Tensor[(2464), float32] */;
  %16 = @func_1500(%15) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(6, 14, 2), float32], Tensor[(42, 4), float32], Tensor[(13, 4, 8), int8], Tensor[(2464), float32], Tensor[(416), float32], Tensor[(13, 5, 2), float32]) */;
  %17 = %13.1;
  %18 = %16.1;
  (%17, %18, %var_4388)
}

def @func_13243() -> Tensor[(13, 5, 2), float32] {
  @func_7514() /* ty=Tensor[(13, 5, 2), float32] */
}

def @func_9565() -> Tensor[(13), float64] {
  %19 = @func_8964() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(1, 1, 13), float64], Tensor[(13), float64], Tensor[(13, 5, 2), int8]) */;
  %19.2
}

def @func_12443() -> Tensor[(13, 5, 2), uint8] {
  @func_2578() /* ty=Tensor[(13, 5, 2), uint8] */
}

def @func_6751(%var_6745: Tensor[(15, 8, 12), int64], %var_6746: Tensor[(15, 8, 12), int64]) -> Tensor[(15, 8, 12), int64] {
  %20 = cast(%var_6746, dtype="int64") /* ty=Tensor[(15, 8, 12), int64] */;
  %21 = shape_of(%var_6745, dtype="int32") /* ty=Tensor[(3), int32] */;
  %22 = cast(%var_6745, dtype="int64") /* ty=Tensor[(15, 8, 12), int64] */;
  %23 = dyn.reshape(%20, %21, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  bitwise_and(%22, %23) /* ty=Tensor[(15, 8, 12), int64] */
}

def @func_4433() -> (Tensor[(13, 5, 2), float32],) {
  %24 = @func_2786() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %25 = %24.0;
  (%25,)
}

def @func_7059() -> (Tensor[(2464), float32],) {
  %26 = @func_2713() /* ty=Tensor[(2464), float32] */;
  (%26,)
}

def @func_3198(%var_3196: Tensor[(4, 616), float32]) -> (Tensor[(13, 5, 2), float32], Tensor[(11, 16, 14), float32], Tensor[(4, 616), float32]) {
  %27 = cast(%var_3196, dtype="float32") /* ty=Tensor[(4, 616), float32] */;
  %28 = reshape(%27, newshape=[2464]) /* ty=Tensor[(2464), float32] */;
  %29 = @func_2605(%28) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(11, 16, 14), float32], Tensor[(2464), float32]) */;
  %30 = @func_1989() /* ty=Tensor[(13, 5, 2), float32] */;
  %31 = %29.1;
  (%30, %31, %var_3196)
}

def @func_14562() -> (Tensor[(9, 6, 15), uint16], Tensor[(2464), float32], Tensor[(9, 6, 15), float32]) {
  %32 = cast(meta[relay.Constant][0] /* ty=Tensor[(9, 1, 15), uint16] */, dtype="uint16") /* ty=Tensor[(9, 1, 15), uint16] */;
  %33 = cast(meta[relay.Constant][1] /* ty=Tensor[(9, 6, 15), uint16] */, dtype="uint16") /* ty=Tensor[(9, 6, 15), uint16] */;
  %34 = @func_2530() /* ty=(Tensor[(2464), float32],) */;
  %35 = cast(meta[relay.Constant][1] /* ty=Tensor[(9, 6, 15), uint16] */, dtype="float64") /* ty=Tensor[(9, 6, 15), float64] */;
  %36 = exp(%35) /* ty=Tensor[(9, 6, 15), float64] */;
  %37 = cast(%36, dtype="float32") /* ty=Tensor[(9, 6, 15), float32] */;
  %38 = left_shift(%32, %33) /* ty=Tensor[(9, 6, 15), uint16] */;
  %39 = %34.0;
  %40 = rsqrt(%37) /* ty=Tensor[(9, 6, 15), float32] */;
  (%38, %39, %40)
}

def @func_5639(%var_5624: Tensor[(1188), float32]) -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(1188), float32], Tensor[(2464), float64]) {
  %41 = @func_2367() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) */;
  %42 = cast(%var_5624, dtype="float32") /* ty=Tensor[(1188), float32] */;
  %43 = reshape(%42, newshape=[1188]) /* ty=Tensor[(1188), float32] */;
  %44 = @func_5390(%43) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(11, 12, 9), bool], float32, Tensor[(1188), float32], Tensor[(13, 5, 2), float32], Tensor[(11, 16, 14), float64], Tensor[(2464), float32], Tensor[(13, 5, 2), int8]) */;
  %45 = cast(meta[relay.Constant][2] /* ty=Tensor[(2464), float32] */, dtype="float32") /* ty=Tensor[(2464), float32] */;
  %46 = reshape(%45, newshape=[11, 16, 14]) /* ty=Tensor[(11, 16, 14), float32] */;
  %47 = @func_66(%46) /* ty=(Tensor[(11, 16, 14), float32],) */;
  %48 = %47.0;
  %49 = cast(%48, dtype="float64") /* ty=Tensor[(11, 16, 14), float64] */;
  %50 = shape_of(meta[relay.Constant][2] /* ty=Tensor[(2464), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %51 = cast(meta[relay.Constant][2] /* ty=Tensor[(2464), float32] */, dtype="float64") /* ty=Tensor[(2464), float64] */;
  %52 = dyn.reshape(%49, %50, newshape=[]) /* ty=Tensor[(?), float64] */;
  %53 = %41.2;
  %54 = %44.0;
  %55 = power(%51, %52) /* ty=Tensor[(2464), float64] */;
  (%53, %54, %var_5624, %55)
}

def @func_8964() -> (Tensor[(13, 5, 2), float32], Tensor[(1, 1, 13), float64], Tensor[(13), float64], Tensor[(13, 5, 2), int8]) {
  %56 = cast(meta[relay.Constant][3] /* ty=Tensor[(13), float64] */, dtype="float64") /* ty=Tensor[(13), float64] */;
  %57 = reshape(%56, newshape=[1, 1, 13]) /* ty=Tensor[(1, 1, 13), float64] */;
  %58 = @func_3127() /* ty=(Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) */;
  %59 = @func_7514() /* ty=Tensor[(13, 5, 2), float32] */;
  %60 = @func_7830(%57) /* ty=Tensor[(1, 1, 13), float64] */;
  %61 = %58.2;
  (%59, %60, meta[relay.Constant][3] /* ty=Tensor[(13), float64] */, %61)
}

def @func_11636() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) {
  %62 = @func_6158() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) */;
  %63 = @func_6323() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %64 = %62.0;
  %65 = %63.0;
  (%64, %65)
}

def @func_14035() -> (Tensor[(13, 5, 2), uint8],) {
  %66 = @func_12443() /* ty=Tensor[(13, 5, 2), uint8] */;
  (%66,)
}

def @func_4686() -> Tensor[(2464), float32] {
  @func_2713() /* ty=Tensor[(2464), float32] */
}

def @func_5596() -> Tensor[(13, 5, 2), float32] {
  @func_3624() /* ty=Tensor[(13, 5, 2), float32] */
}

def @func_4613(%var_4589: Tensor[(1200), bool]) -> (Tensor[(13, 5, 2), float32], Tensor[(15, 5, 16), bool], Tensor[(1200), bool]) {
  %67 = @func_3213() /* ty=(Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) */;
  %68 = cast(%var_4589, dtype="bool") /* ty=Tensor[(1200), bool] */;
  %69 = reshape(%68, newshape=[15, 5, 16]) /* ty=Tensor[(15, 5, 16), bool] */;
  %70 = @func_1220(%69) /* ty=(Tensor[(15, 5, 16), bool],) */;
  %71 = %67.1;
  %72 = %70.0;
  (%71, %72, %var_4589)
}

def @func_13916() -> (Tensor[(13, 5, 2), int8], Tensor[(13, 5, 2), uint8]) {
  %73 = @func_5451() /* ty=(Tensor[(13, 5, 2), uint8],) */;
  %74 = @func_12817() /* ty=Tensor[(13, 5, 2), int8] */;
  %75 = %73.0;
  (%74, %75)
}

def @func_14267(%var_14239: Tensor[(5, 14, 7), float32]) -> (Tensor[(5, 14, 7), float32],) {
  %76 = cast(%var_14239, dtype="float32") /* ty=Tensor[(5, 14, 7), float32] */;
  %77 = sin(%76) /* ty=Tensor[(5, 14, 7), float32] */;
  (%77,)
}

def @func_8249(%var_8184: Tensor[(1, 10, 11), bool], %var_8185: Tensor[(3, 10, 11), bool], %var_8209: Tensor[(3, 10, 11), bool]) -> (Tensor[(3, 10, 11), float64], Tensor[(3, 10, 11), uint32], Tensor[(3, 10, 11), bool]) {
  %78 = cast(%var_8184, dtype="bool") /* ty=Tensor[(1, 10, 11), bool] */;
  %79 = cast(%var_8185, dtype="bool") /* ty=Tensor[(3, 10, 11), bool] */;
  %80 = logical_and(%78, %79) /* ty=Tensor[(3, 10, 11), bool] */;
  %81 = cast(%80, dtype="float64") /* ty=Tensor[(3, 10, 11), float64] */;
  %82 = cast(%var_8209, dtype="uint32") /* ty=Tensor[(3, 10, 11), uint32] */;
  %83 = shape_of(%80, dtype="int32") /* ty=Tensor[(3), int32] */;
  %84 = cast(%80, dtype="uint32") /* ty=Tensor[(3, 10, 11), uint32] */;
  %85 = dyn.reshape(%82, %83, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %86 = cast(%80, dtype="float32") /* ty=Tensor[(3, 10, 11), float32] */;
  %87 = asinh(%86) /* ty=Tensor[(3, 10, 11), float32] */;
  %88 = cast(%87, dtype="float64") /* ty=Tensor[(3, 10, 11), float64] */;
  %89 = rsqrt(%88) /* ty=Tensor[(3, 10, 11), float64] */;
  %90 = cast(%89, dtype="bool") /* ty=Tensor[(3, 10, 11), bool] */;
  %91 = cast(%var_8184, dtype="bool") /* ty=Tensor[(1, 10, 11), bool] */;
  %92 = cos(%81) /* ty=Tensor[(3, 10, 11), float64] */;
  %93 = bitwise_and(%84, %85) /* ty=Tensor[(3, 10, 11), uint32] */;
  %94 = less(%90, %91) /* ty=Tensor[(3, 10, 11), bool] */;
  (%92, %93, %94)
}

def @func_11694() -> (Tensor[(13, 5, 2), float32], Tensor[(14, 7, 5), float32], Tensor[(2464), float32]) {
  %95 = @func_11071() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8]) */;
  %96 = @func_10460() /* ty=(Tensor[(3, 15, 15), float64], Tensor[(14, 7, 5), float32], Tensor[(1, 70), float32]) */;
  %97 = @func_10257() /* ty=(Tensor[(2464), float32],) */;
  %98 = %95.0;
  %99 = %96.1;
  %100 = %97.0;
  (%98, %99, %100)
}

def @func_5219(%var_5184: float32, %var_5185: Tensor[(11, 12, 9), float32]) -> (Tensor[(11, 12, 9), float32], Tensor[(11, 12, 9), bool], Tensor[(13, 5, 2), float32]) {
  %101 = cast(%var_5184, dtype="float32") /* ty=float32 */;
  %102 = cast(%var_5185, dtype="float32") /* ty=Tensor[(11, 12, 9), float32] */;
  %103 = cast(%var_5185, dtype="bool") /* ty=Tensor[(11, 12, 9), bool] */;
  %104 = cast(%var_5184, dtype="bool") /* ty=bool */;
  %105 = @func_1690() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %106 = power(%101, %102) /* ty=Tensor[(11, 12, 9), float32] */;
  %107 = less_equal(%103, %104) /* ty=Tensor[(11, 12, 9), bool] */;
  %108 = %105.0;
  (%106, %107, %108)
}

def @func_11872() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) {
  %109 = @func_7619() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %110 = @func_6240() /* ty=(float32, Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) */;
  %111 = @func_2786() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %112 = %109.0;
  %113 = %110.1;
  %114 = %111.0;
  (%112, %113, %114)
}

def @func_13707() -> (Tensor[(2464), float32], Tensor[(13, 5, 2), float32]) {
  %115 = @func_6811() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %116 = @func_4686() /* ty=Tensor[(2464), float32] */;
  %117 = %115.0;
  (%116, %117)
}

def @func_3945(%var_3931: Tensor[(4, 11, 8), int32]) -> Tensor[(4, 11, 8), int32] {
  %118 = cast(meta[relay.Constant][4] /* ty=Tensor[(4, 11, 8), int32] */, dtype="int32") /* ty=Tensor[(4, 11, 8), int32] */;
  %119 = shape_of(%var_3931, dtype="int32") /* ty=Tensor[(3), int32] */;
  %120 = cast(%var_3931, dtype="int32") /* ty=Tensor[(4, 11, 8), int32] */;
  %121 = dyn.reshape(%118, %119, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  multiply(%120, %121) /* ty=Tensor[(4, 11, 8), int32] */
}

def @func_9386() -> (Tensor[(13, 5, 2), float32],) {
  %122 = @func_6240() /* ty=(float32, Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) */;
  %123 = %122.2;
  (%123,)
}

def @func_12017() -> Tensor[(13, 5, 2), int8] {
  %124 = @func_4365() /* ty=(Tensor[(13, 5, 2), int8],) */;
  %124.0
}

def @func_2459(%var_2397: Tensor[(13, 5, 2), float32], %var_2418: Tensor[(168), float32]) -> (Tensor[(13, 5, 2), int64], Tensor[(14), float32], Tensor[(6, 14, 2), float32], Tensor[(168), float32], Tensor[(2, 7, 12), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), bool], Tensor[(13, 5, 2), float32]) {
  %125 = cast(meta[relay.Constant][5] /* ty=Tensor[(14), float32] */, dtype="float32") /* ty=Tensor[(14), float32] */;
  %126 = reshape(%125, newshape=[14]) /* ty=Tensor[(14), float32] */;
  %127 = @func_1817(%126) /* ty=(Tensor[(1, 14), float32], Tensor[(14), float32], Tensor[(13, 5, 2), int64], Tensor[(13, 5, 2), int8]) */;
  %128 = cast(%var_2418, dtype="float32") /* ty=Tensor[(168), float32] */;
  %129 = reshape(%128, newshape=[6, 14, 2]) /* ty=Tensor[(6, 14, 2), float32] */;
  %130 = @func_1026(%129) /* ty=(Tensor[(6, 14, 2), float32], Tensor[(6, 14, 2), float32]) */;
  %131 = %130.1;
  %132 = cast(%131, dtype="float32") /* ty=Tensor[(6, 14, 2), float32] */;
  %133 = reshape(%132, newshape=[2, 7, 12]) /* ty=Tensor[(2, 7, 12), float32] */;
  %134 = cast(meta[relay.Constant][6] /* ty=Tensor[(13, 5, 2), float32] */, dtype="uint64") /* ty=Tensor[(13, 5, 2), uint64] */;
  %135 = shape_of(%var_2397, dtype="int32") /* ty=Tensor[(3), int32] */;
  %136 = cast(%var_2397, dtype="uint64") /* ty=Tensor[(13, 5, 2), uint64] */;
  %137 = dyn.reshape(%134, %135, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %138 = logical_xor(%136, %137) /* ty=Tensor[(13, 5, 2), uint64] */;
  %139 = cast(%var_2397, dtype="bool") /* ty=Tensor[(13, 5, 2), bool] */;
  %140 = shape_of(%138, dtype="int32") /* ty=Tensor[(3), int32] */;
  %141 = cast(%138, dtype="bool") /* ty=Tensor[(13, 5, 2), bool] */;
  %142 = dyn.reshape(%139, %140, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %143 = @func_1360() /* ty=Tensor[(13, 5, 2), float32] */;
  %144 = cast(%var_2397, dtype="float32") /* ty=Tensor[(13, 5, 2), float32] */;
  %145 = shape_of(%143, dtype="int32") /* ty=Tensor[(3), int32] */;
  %146 = cast(%143, dtype="float32") /* ty=Tensor[(13, 5, 2), float32] */;
  %147 = dyn.reshape(%144, %145, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %148 = divide(%146, %147) /* ty=Tensor[(13, 5, 2), float32] */;
  %149 = cast(%148, dtype="float32") /* ty=Tensor[(13, 5, 2), float32] */;
  %150 = %127.2;
  %151 = @func_2178(%133) /* ty=Tensor[(2, 7, 12), float32] */;
  %152 = @func_1360() /* ty=Tensor[(13, 5, 2), float32] */;
  %153 = logical_or(%141, %142) /* ty=Tensor[(13, 5, 2), bool] */;
  %154 = sqrt(%149) /* ty=Tensor[(13, 5, 2), float32] */;
  (%150, meta[relay.Constant][5] /* ty=Tensor[(14), float32] */, %131, %var_2418, %151, %152, %153, %154)
}

def @func_3873() -> Tensor[(13, 5, 2), float32] {
  @func_2974() /* ty=Tensor[(13, 5, 2), float32] */
}

def @func_12092() -> (Tensor[(13, 5, 2), float32],) {
  %155 = @func_6470() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %156 = %155.0;
  (%156,)
}

def @func_12981() -> Tensor[(13, 5, 2), float32] {
  %157 = @func_11918() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %157.0
}

def @func_12414() -> Tensor[(14, 7, 5), float32] {
  %158 = @func_10460() /* ty=(Tensor[(3, 15, 15), float64], Tensor[(14, 7, 5), float32], Tensor[(1, 70), float32]) */;
  %158.1
}

def @func_4171(%var_4167: Tensor[(2464), float32]) -> (Tensor[(13, 5, 2), float32], Tensor[(11, 16, 14), float32], Tensor[(2464), float32]) {
  %159 = cast(%var_4167, dtype="float32") /* ty=Tensor[(2464), float32] */;
  %160 = reshape(%159, newshape=[1232, 2]) /* ty=Tensor[(1232, 2), float32] */;
  %161 = @func_2653(%160) /* ty=(Tensor[(11, 16, 14), float32], Tensor[(1232, 2), float32], Tensor[(13, 5, 2), float64]) */;
  %162 = @func_3624() /* ty=Tensor[(13, 5, 2), float32] */;
  %163 = %161.0;
  (%162, %163, %var_4167)
}

def @func_5712() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) {
  %164 = @func_3213() /* ty=(Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) */;
  %165 = @func_3794() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) */;
  %166 = %164.1;
  %167 = %165.1;
  (%166, %167)
}

def @func_5390(%var_5361: Tensor[(1188), float32]) -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(11, 12, 9), bool], float32, Tensor[(1188), float32], Tensor[(13, 5, 2), float32], Tensor[(11, 16, 14), float64], Tensor[(2464), float32], Tensor[(13, 5, 2), int8]) {
  %168 = cast(9.59802f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %169 = cast(%var_5361, dtype="float32") /* ty=Tensor[(1188), float32] */;
  %170 = reshape(%168, newshape=[]) /* ty=float32 */;
  %171 = reshape(%169, newshape=[11, 12, 9]) /* ty=Tensor[(11, 12, 9), float32] */;
  %172 = @func_5219(%170, %171) /* ty=(Tensor[(11, 12, 9), float32], Tensor[(11, 12, 9), bool], Tensor[(13, 5, 2), float32]) */;
  %173 = @func_4865() /* ty=(Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) */;
  %174 = @func_1708() /* ty=Tensor[(13, 5, 2), float32] */;
  %175 = cast(%174, dtype="float32") /* ty=Tensor[(13, 5, 2), float32] */;
  %176 = cast(meta[relay.Constant][7] /* ty=Tensor[(2464), float32] */, dtype="float32") /* ty=Tensor[(2464), float32] */;
  %177 = reshape(%175, newshape=[13, 5, 2]) /* ty=Tensor[(13, 5, 2), float32] */;
  %178 = reshape(%176, newshape=[2464]) /* ty=Tensor[(2464), float32] */;
  %179 = @func_1645(%177, %178) /* ty=(Tensor[(13, 5, 2), float64], Tensor[(11, 16, 14), float64]) */;
  %180 = @func_3127() /* ty=(Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) */;
  %181 = @func_1354() /* ty=Tensor[(13, 5, 2), float32] */;
  %182 = %172.1;
  %183 = %173.1;
  %184 = %179.1;
  %185 = %180.2;
  (%174, %181, %182, 9.59802f /* ty=float32 */, %var_5361, %183, %184, meta[relay.Constant][7] /* ty=Tensor[(2464), float32] */, %185)
}

def @func_12694(%var_12662: Tensor[(4, 40), bool], %var_12677: Tensor[(4, 40), float32]) -> (Tensor[(13, 5, 2), float32], Tensor[(16, 5, 2), float32], Tensor[(4, 40), bool]) {
  %186 = cast(%var_12662, dtype="bool") /* ty=Tensor[(4, 40), bool] */;
  %187 = reshape(%186, newshape=[16, 5, 2]) /* ty=Tensor[(16, 5, 2), bool] */;
  %188 = @func_10752(%187) /* ty=(Tensor[(16, 5, 2), float32], Tensor[(16, 5, 2), float32]) */;
  %189 = cast(%var_12662, dtype="float32") /* ty=Tensor[(4, 40), float32] */;
  %190 = acosh(%189) /* ty=Tensor[(4, 40), float32] */;
  %191 = cast(%var_12677, dtype="bool") /* ty=Tensor[(4, 40), bool] */;
  %192 = shape_of(%190, dtype="int32") /* ty=Tensor[(2), int32] */;
  %193 = cast(%190, dtype="bool") /* ty=Tensor[(4, 40), bool] */;
  %194 = dyn.reshape(%191, %192, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %195 = @func_9627() /* ty=Tensor[(13, 5, 2), float32] */;
  %196 = %188.1;
  %197 = less_equal(%193, %194) /* ty=Tensor[(4, 40), bool] */;
  (%195, %196, %197)
}

def @func_9602() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), int8]) {
  %198 = @func_9074() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32], Tensor[(168), float32]) */;
  %199 = @func_6158() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) */;
  %200 = %198.0;
  %201 = @func_9488() /* ty=Tensor[(13, 5, 2), uint8] */;
  %202 = %199.1;
  (%200, %201, %202)
}

def @func_6323() -> (Tensor[(13, 5, 2), float32],) {
  %203 = @func_4546() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %204 = %203.0;
  (%204,)
}

def @func_13355(%var_13333: Tensor[(864), float32]) -> (Tensor[(630), int32], Tensor[(13, 5, 2), float32], Tensor[(864), float32]) {
  %205 = @func_8473() /* ty=(Tensor[(630), int32],) */;
  %206 = cast(%var_13333, dtype="float32") /* ty=Tensor[(864), float32] */;
  %207 = reshape(%206, newshape=[864]) /* ty=Tensor[(864), float32] */;
  %208 = @func_11336(%207) /* ty=(Tensor[(13, 5, 2), int8], Tensor[(13, 5, 2), float32], Tensor[(864), float32]) */;
  %209 = %205.0;
  %210 = %208.1;
  (%209, %210, %var_13333)
}

def @func_9292() -> (Tensor[(13, 5, 2), float32],) {
  %211 = @func_6286() /* ty=(Tensor[(13, 5, 2), int8], Tensor[(13, 5, 2), float32]) */;
  %212 = %211.1;
  (%212,)
}

def @func_10909(%var_10844: Tensor[(600), uint8]) -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8], Tensor[(12, 10, 5), uint8], Tensor[(600), uint8], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(168), float32], Tensor[(13, 5, 2), float32]) {
  %213 = @func_10166() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %214 = @func_1375() /* ty=(Tensor[(13, 5, 2), uint8],) */;
  %215 = cast(%var_10844, dtype="uint8") /* ty=Tensor[(600), uint8] */;
  %216 = reshape(%215, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), uint8] */;
  %217 = @func_6811() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %218 = @func_10009() /* ty=(Tensor[(13, 5, 2), int8], Tensor[(13, 5, 2), uint8], Tensor[(168), float32]) */;
  %219 = %213.0;
  %220 = %214.0;
  %221 = @func_3009(%216) /* ty=Tensor[(12, 10, 5), uint8] */;
  %222 = %217.0;
  %223 = @func_3873() /* ty=Tensor[(13, 5, 2), float32] */;
  %224 = %218.2;
  %225 = @func_3624() /* ty=Tensor[(13, 5, 2), float32] */;
  (%219, %220, %221, %var_10844, %222, %223, %224, %225)
}

def @func_12289() -> (Tensor[(13, 5, 2), int8], Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) {
  %226 = @func_6158() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) */;
  %227 = @func_4865() /* ty=(Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) */;
  %228 = %226.1;
  %229 = %227.0;
  %230 = @func_6778() /* ty=Tensor[(13, 5, 2), float32] */;
  (%228, %229, %230)
}

def @func_11426() -> (Tensor[(13, 5, 2), float32],) {
  %231 = @func_2367() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) */;
  %232 = %231.0;
  (%232,)
}

def @func_8642(%var_8636: Tensor[(864), float32]) -> (Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32], Tensor[(9, 12, 8), float32], Tensor[(864), float32]) {
  %233 = @func_4865() /* ty=(Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) */;
  %234 = cast(%var_8636, dtype="float32") /* ty=Tensor[(864), float32] */;
  %235 = reshape(%234, newshape=[9, 12, 8]) /* ty=Tensor[(9, 12, 8), float32] */;
  %236 = @func_2054(%235) /* ty=(Tensor[(9, 12, 8), float32],) */;
  %237 = %233.0;
  %238 = @func_7585() /* ty=Tensor[(13, 5, 2), float32] */;
  %239 = %236.0;
  (%237, %238, %239, %var_8636)
}

def @func_3739(%var_3704: Tensor[(2464), float32]) -> (Tensor[(13, 5, 2), float32], Tensor[(416), float32], Tensor[(2464), float32]) {
  %240 = @func_2367() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) */;
  %241 = cast(%var_3704, dtype="float32") /* ty=Tensor[(2464), float32] */;
  %242 = reshape(%241, newshape=[2464]) /* ty=Tensor[(2464), float32] */;
  %243 = @func_1500(%242) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(6, 14, 2), float32], Tensor[(42, 4), float32], Tensor[(13, 4, 8), int8], Tensor[(2464), float32], Tensor[(416), float32], Tensor[(13, 5, 2), float32]) */;
  %244 = %240.0;
  %245 = %243.6;
  (%244, %245, %var_3704)
}

def @func_1762() -> Tensor[(13, 5, 2), int8] {
  %246 = @func_1360() /* ty=Tensor[(13, 5, 2), float32] */;
  %247 = @func_1690() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %248 = %247.0;
  %249 = cast(%248, dtype="int8") /* ty=Tensor[(13, 5, 2), int8] */;
  %250 = shape_of(%246, dtype="int32") /* ty=Tensor[(3), int32] */;
  %251 = cast(%246, dtype="int8") /* ty=Tensor[(13, 5, 2), int8] */;
  %252 = dyn.reshape(%249, %250, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  bitwise_or(%251, %252) /* ty=Tensor[(13, 5, 2), int8] */
}

def @func_9367() -> (Tensor[(168), float32], Tensor[(13, 5, 2), float32], float32, Tensor[(2464), float32]) {
  %253 = @func_8179() /* ty=(Tensor[(168), float32],) */;
  %254 = cast(meta[relay.Constant][8] /* ty=Tensor[(2464), float32] */, dtype="float32") /* ty=Tensor[(2464), float32] */;
  %255 = cast(-8.73247f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %256 = reshape(%254, newshape=[8, 308]) /* ty=Tensor[(8, 308), float32] */;
  %257 = reshape(%255, newshape=[]) /* ty=float32 */;
  %258 = @func_5879(%256, %257) /* ty=(Tensor[(13, 5, 2), uint8], Tensor[(2464), bool], Tensor[(8, 308), float32], float32, Tensor[(14), float32], Tensor[(13, 5, 2), float32]) */;
  %259 = cast(meta[relay.Constant][8] /* ty=Tensor[(2464), float32] */, dtype="float32") /* ty=Tensor[(2464), float32] */;
  %260 = %253.0;
  %261 = %258.5;
  %262 = atan(%259) /* ty=Tensor[(2464), float32] */;
  (%260, %261, -8.73247f /* ty=float32 */, %262)
}

def @func_3296(%var_3227: Tensor[(168), float32], %var_3249: Tensor[(2464), float32]) -> (Tensor[(13, 5, 2), float32], Tensor[(2, 7, 12), float32], Tensor[(168), float32], Tensor[(13, 5, 2), float64], Tensor[(6, 14, 2), float32], Tensor[(11, 16, 14), float32], Tensor[(2464), bool]) {
  %263 = cast(%var_3227, dtype="float32") /* ty=Tensor[(168), float32] */;
  %264 = reshape(%263, newshape=[2, 7, 12]) /* ty=Tensor[(2, 7, 12), float32] */;
  %265 = @func_2745() /* ty=(Tensor[(2, 7, 12), float32], Tensor[(168), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float64]) */;
  %266 = @func_1360() /* ty=Tensor[(13, 5, 2), float32] */;
  %267 = cast(%266, dtype="float32") /* ty=Tensor[(13, 5, 2), float32] */;
  %268 = @func_2178(%264) /* ty=Tensor[(2, 7, 12), float32] */;
  %269 = cast(%268, dtype="float32") /* ty=Tensor[(2, 7, 12), float32] */;
  %270 = reshape(%267, newshape=[13, 5, 2]) /* ty=Tensor[(13, 5, 2), float32] */;
  %271 = reshape(%269, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %272 = @func_2119(%270, %271) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), bool], Tensor[(13, 5, 2), float32], Tensor[(6, 14, 2), float32], Tensor[(168), float32]) */;
  %273 = cast(%var_3249, dtype="float32") /* ty=Tensor[(2464), float32] */;
  %274 = reshape(%273, newshape=[4, 616]) /* ty=Tensor[(4, 616), float32] */;
  %275 = @func_3198(%274) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(11, 16, 14), float32], Tensor[(4, 616), float32]) */;
  %276 = cast(%var_3249, dtype="float32") /* ty=Tensor[(2464), float32] */;
  %277 = reshape(%276, newshape=[4, 616]) /* ty=Tensor[(4, 616), float32] */;
  %278 = @func_3198(%277) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(11, 16, 14), float32], Tensor[(4, 616), float32]) */;
  %279 = %278.1;
  %280 = cast(%279, dtype="bool") /* ty=Tensor[(11, 16, 14), bool] */;
  %281 = shape_of(%var_3249, dtype="int32") /* ty=Tensor[(1), int32] */;
  %282 = cast(%var_3249, dtype="bool") /* ty=Tensor[(2464), bool] */;
  %283 = dyn.reshape(%280, %281, newshape=[]) /* ty=Tensor[(?), bool] */;
  %284 = %265.3;
  %285 = %272.3;
  %286 = %275.1;
  %287 = logical_or(%282, %283) /* ty=Tensor[(2464), bool] */;
  (%266, %268, %var_3227, %284, %285, %286, %287)
}

def @func_7390(%var_7356: Tensor[(1950), float32], %var_7357: Tensor[(14), float32]) -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 10, 15), float32], Tensor[(1950), float32], Tensor[(14), float32], Tensor[(168), float32]) {
  %288 = @func_1967() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %289 = cast(%var_7356, dtype="float32") /* ty=Tensor[(1950), float32] */;
  %290 = cast(%var_7357, dtype="float32") /* ty=Tensor[(14), float32] */;
  %291 = reshape(%289, newshape=[13, 10, 15]) /* ty=Tensor[(13, 10, 15), float32] */;
  %292 = reshape(%290, newshape=[14]) /* ty=Tensor[(14), float32] */;
  %293 = @func_2038(%291, %292) /* ty=(Tensor[(13, 10, 15), float32], Tensor[(13, 5, 2), int64], Tensor[(14), float32]) */;
  %294 = @func_6503() /* ty=(Tensor[(168), float32],) */;
  %295 = %288.0;
  %296 = @func_1708() /* ty=Tensor[(13, 5, 2), float32] */;
  %297 = %293.0;
  %298 = %294.0;
  (%295, %296, %297, %var_7356, %var_7357, %298)
}

def @func_6859() -> (Tensor[(13, 5, 2), float32], Tensor[(3, 14, 15), float64], Tensor[(630), int32], Tensor[(13, 5, 2), float32]) {
  %299 = @func_4865() /* ty=(Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) */;
  %300 = %299.0;
  %301 = cast(%300, dtype="float32") /* ty=Tensor[(13, 5, 2), float32] */;
  %302 = cast(meta[relay.Constant][9] /* ty=Tensor[(630), int32] */, dtype="int32") /* ty=Tensor[(630), int32] */;
  %303 = cast(meta[relay.Constant][9] /* ty=Tensor[(630), int32] */, dtype="int32") /* ty=Tensor[(630), int32] */;
  %304 = reshape(%302, newshape=[3, 14, 15]) /* ty=Tensor[(3, 14, 15), int32] */;
  %305 = reshape(%303, newshape=[3, 14, 15]) /* ty=Tensor[(3, 14, 15), int32] */;
  %306 = @func_4235(%304, %305) /* ty=(Tensor[(3, 14, 15), bool], Tensor[(12, 10, 5), uint8], Tensor[(600), uint8], Tensor[(3, 14, 15), float64]) */;
  %307 = @func_3213() /* ty=(Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) */;
  %308 = erf(%301) /* ty=Tensor[(13, 5, 2), float32] */;
  %309 = %306.3;
  %310 = %307.1;
  (%308, %309, meta[relay.Constant][9] /* ty=Tensor[(630), int32] */, %310)
}

def @func_13963() -> (Tensor[(13, 5, 2), float32],) {
  %311 = @func_9475() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %312 = %311.0;
  (%312,)
}

def @func_6298(%var_6295: Tensor[(14, 3, 14), float32]) -> Tensor[(14, 3, 14), float32] {
  %313 = cast(%var_6295, dtype="float32") /* ty=Tensor[(14, 3, 14), float32] */;
  cos(%313) /* ty=Tensor[(14, 3, 14), float32] */
}

def @func_12647(%var_12591: Tensor[(1, 8, 5), float64]) -> (Tensor[(13, 5, 2), float32], Tensor[(?, 8, 5), bool]) {
  %314 = cast(%var_12591, dtype="float64") /* ty=Tensor[(1, 8, 5), float64] */;
  %315 = log2(%314) /* ty=Tensor[(1, 8, 5), float64] */;
  %316 = cast(%315, dtype="uint16") /* ty=Tensor[(1, 8, 5), uint16] */;
  %317 = shape_of(%var_12591, dtype="int32") /* ty=Tensor[(3), int32] */;
  %318 = cast(%var_12591, dtype="uint16") /* ty=Tensor[(1, 8, 5), uint16] */;
  %319 = dyn.reshape(%316, %317, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %320 = minimum(%318, %319) /* ty=Tensor[(?, 8, 5), uint16] */;
  %321 = cast(%315, dtype="float64") /* ty=Tensor[(1, 8, 5), float64] */;
  %322 = shape_of(%320, dtype="int32") /* ty=Tensor[(3), int32] */;
  %323 = cast(%320, dtype="float64") /* ty=Tensor[(?, 8, 5), float64] */;
  %324 = dyn.reshape(%321, %322, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %325 = power(%323, %324) /* ty=Tensor[(?, 8, 5), float64] */;
  %326 = cast(%325, dtype="bool") /* ty=Tensor[(?, 8, 5), bool] */;
  %327 = shape_of(%var_12591, dtype="int32") /* ty=Tensor[(3), int32] */;
  %328 = cast(%var_12591, dtype="bool") /* ty=Tensor[(1, 8, 5), bool] */;
  %329 = dyn.reshape(%326, %327, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %330 = @func_3624() /* ty=Tensor[(13, 5, 2), float32] */;
  %331 = equal(%328, %329) /* ty=Tensor[(?, 8, 5), bool] */;
  (%330, %331)
}

def @func_3009(%var_3005: Tensor[(12, 10, 5), uint8]) -> Tensor[(12, 10, 5), uint8] {
  %332 = cast(meta[relay.Constant][10] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %333 = cast(%var_3005, dtype="uint8") /* ty=Tensor[(12, 10, 5), uint8] */;
  bitwise_xor(%332, %333) /* ty=Tensor[(12, 10, 5), uint8] */
}

def @func_2974() -> Tensor[(13, 5, 2), float32] {
  %334 = @func_1690() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %334.0
}

def @func_4637() -> Tensor[(13, 5, 2), float32] {
  %335 = @func_1690() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %335.0
}

def @func_2674(%var_2660: Tensor[(15, 15, 3), float32]) -> (Tensor[(15, 15, 3), float32],) {
  %336 = cast(%var_2660, dtype="float32") /* ty=Tensor[(15, 15, 3), float32] */;
  %337 = asinh(%336) /* ty=Tensor[(15, 15, 3), float32] */;
  (%337,)
}

def @func_7914() -> (Tensor[(13, 5, 2), float32],) {
  %338 = @func_7514() /* ty=Tensor[(13, 5, 2), float32] */;
  (%338,)
}

def @func_13417() -> (Tensor[(13, 5, 2), float32],) {
  %339 = @func_7585() /* ty=Tensor[(13, 5, 2), float32] */;
  (%339,)
}

def @func_8273() -> (Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) {
  %340 = @func_1375() /* ty=(Tensor[(13, 5, 2), uint8],) */;
  %341 = @func_7619() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %342 = %340.0;
  %343 = %341.0;
  (%342, %343)
}

def @func_10572(%var_10546: Tensor[(12, 12, 12), float32]) -> (Tensor[(12, 12, 12), float32],) {
  %344 = cast(%var_10546, dtype="float32") /* ty=Tensor[(12, 12, 12), float32] */;
  %345 = erf(%344) /* ty=Tensor[(12, 12, 12), float32] */;
  (%345,)
}

def @func_9948() -> (Tensor[(13, 5, 2), int8], Tensor[(13, 5, 2), float32]) {
  %346 = @func_7672() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) */;
  %347 = @func_1762() /* ty=Tensor[(13, 5, 2), int8] */;
  %348 = %346.0;
  (%347, %348)
}

def @func_1989() -> Tensor[(13, 5, 2), float32] {
  @func_1354() /* ty=Tensor[(13, 5, 2), float32] */
}

def @func_2605(%var_2586: Tensor[(2464), float32]) -> (Tensor[(13, 5, 2), float32], Tensor[(11, 16, 14), float32], Tensor[(2464), float32]) {
  %349 = cast(%var_2586, dtype="float32") /* ty=Tensor[(2464), float32] */;
  %350 = reshape(%349, newshape=[11, 16, 14]) /* ty=Tensor[(11, 16, 14), float32] */;
  %351 = @func_66(%350) /* ty=(Tensor[(11, 16, 14), float32],) */;
  %352 = cast(%var_2586, dtype="float32") /* ty=Tensor[(2464), float32] */;
  %353 = @func_1354() /* ty=Tensor[(13, 5, 2), float32] */;
  %354 = %351.0;
  %355 = acos(%352) /* ty=Tensor[(2464), float32] */;
  (%353, %354, %355)
}

def @func_7799(%var_7783: Tensor[(300, 2), uint8]) -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(12, 10, 5), uint8], Tensor[(300, 2), uint8]) {
  %356 = @func_1967() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %357 = @func_6158() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) */;
  %358 = @func_3213() /* ty=(Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) */;
  %359 = @func_7672() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) */;
  %360 = cast(%var_7783, dtype="uint8") /* ty=Tensor[(300, 2), uint8] */;
  %361 = reshape(%360, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), uint8] */;
  %362 = %356.0;
  %363 = %357.1;
  %364 = %358.1;
  %365 = %359.0;
  %366 = @func_3009(%361) /* ty=Tensor[(12, 10, 5), uint8] */;
  (%362, %363, %364, %365, %366, %var_7783)
}

def @func_10190() -> (Tensor[(13, 5, 2), float32],) {
  %367 = @func_10166() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %368 = %367.0;
  %369 = @func_6590() /* ty=Tensor[(13, 5, 2), uint8] */;
  %370 = cast(%369, dtype="float32") /* ty=Tensor[(13, 5, 2), float32] */;
  %371 = shape_of(%368, dtype="int32") /* ty=Tensor[(3), int32] */;
  %372 = cast(%368, dtype="float32") /* ty=Tensor[(13, 5, 2), float32] */;
  %373 = dyn.reshape(%370, %371, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %374 = power(%372, %373) /* ty=Tensor[(13, 5, 2), float32] */;
  (%374,)
}

def @func_9074() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32], Tensor[(168), float32]) {
  %375 = @func_6286() /* ty=(Tensor[(13, 5, 2), int8], Tensor[(13, 5, 2), float32]) */;
  %376 = @func_3213() /* ty=(Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) */;
  %377 = %376.0;
  %378 = cast(%377, dtype="float32") /* ty=Tensor[(13, 5, 2), float32] */;
  %379 = cast(meta[relay.Constant][11] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %380 = reshape(%378, newshape=[13, 5, 2]) /* ty=Tensor[(13, 5, 2), float32] */;
  %381 = reshape(%379, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %382 = @func_2459(%380, %381) /* ty=(Tensor[(13, 5, 2), int64], Tensor[(14), float32], Tensor[(6, 14, 2), float32], Tensor[(168), float32], Tensor[(2, 7, 12), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), bool], Tensor[(13, 5, 2), float32]) */;
  %383 = %375.1;
  %384 = %382.5;
  (%383, %377, %384, meta[relay.Constant][11] /* ty=Tensor[(168), float32] */)
}

def @func_6517() -> (Tensor[(13, 5, 2), uint8],) {
  %385 = @func_4865() /* ty=(Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) */;
  %386 = %385.0;
  (%386,)
}

def @func_1860(%var_1853: Tensor[(1200), bool]) -> (Tensor[(13, 5, 2), float32], Tensor[(1200), bool], Tensor[(15, 5, 16), float32]) {
  %387 = cast(%var_1853, dtype="bool") /* ty=Tensor[(1200), bool] */;
  %388 = reshape(%387, newshape=[15, 5, 16]) /* ty=Tensor[(15, 5, 16), bool] */;
  %389 = @func_1220(%388) /* ty=(Tensor[(15, 5, 16), bool],) */;
  %390 = %389.0;
  %391 = cast(%390, dtype="float32") /* ty=Tensor[(15, 5, 16), float32] */;
  %392 = @func_1708() /* ty=Tensor[(13, 5, 2), float32] */;
  %393 = log(%391) /* ty=Tensor[(15, 5, 16), float32] */;
  (%392, %var_1853, %393)
}

def @func_1375() -> (Tensor[(13, 5, 2), uint8],) {
  %394 = @func_1360() /* ty=Tensor[(13, 5, 2), float32] */;
  %395 = cast(meta[relay.Constant][12] /* ty=Tensor[(13, 5, 2), float32] */, dtype="uint8") /* ty=Tensor[(13, 5, 2), uint8] */;
  %396 = shape_of(%394, dtype="int32") /* ty=Tensor[(3), int32] */;
  %397 = cast(%394, dtype="uint8") /* ty=Tensor[(13, 5, 2), uint8] */;
  %398 = dyn.reshape(%395, %396, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %399 = add(%397, %398) /* ty=Tensor[(13, 5, 2), uint8] */;
  (%399,)
}

def @func_6208() -> (Tensor[(13, 5, 2), float32], float32) {
  %400 = @func_3154() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(1, 14), float32], float32, Tensor[(14, 1), float32], Tensor[(13, 5, 2), float32]) */;
  %401 = @func_5927() /* ty=Tensor[(13, 5, 2), float32] */;
  %402 = %400.2;
  (%401, %402)
}

def @func_6811() -> (Tensor[(13, 5, 2), float32],) {
  %403 = @func_1928() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float64], Tensor[(2464), float32]) */;
  %404 = %403.0;
  (%404,)
}

def @func_9796() -> (Tensor[(13, 5, 2), float32], Tensor[(168), float32]) {
  %405 = @func_8144() /* ty=(Tensor[(168), float32],) */;
  %406 = @func_5421() /* ty=Tensor[(13, 5, 2), float32] */;
  %407 = %405.0;
  (%406, %407)
}

def @func_7830(%var_7827: Tensor[(1, 1, 13), float64]) -> Tensor[(1, 1, 13), float64] {
  %408 = cast(%var_7827, dtype="float64") /* ty=Tensor[(1, 1, 13), float64] */;
  sin(%408) /* ty=Tensor[(1, 1, 13), float64] */
}

def @func_8864() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) {
  %409 = @func_6859() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(3, 14, 15), float64], Tensor[(630), int32], Tensor[(13, 5, 2), float32]) */;
  %410 = @func_1738() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %411 = @func_5596() /* ty=Tensor[(13, 5, 2), float32] */;
  %412 = %409.3;
  %413 = %410.0;
  (%411, %412, %413)
}

def @func_669(%var_634: Tensor[(2464), float32], %var_660: Tensor[(13, 4, 8), float32]) -> (Tensor[(11, 16, 14), bool], Tensor[(13, 4, 8), int8]) {
  %414 = cast(%var_634, dtype="float32") /* ty=Tensor[(2464), float32] */;
  %415 = reshape(%414, newshape=[11, 16, 14]) /* ty=Tensor[(11, 16, 14), float32] */;
  %416 = @func_66(%415) /* ty=(Tensor[(11, 16, 14), float32],) */;
  %417 = %416.0;
  %418 = cast(%var_634, dtype="bool") /* ty=Tensor[(2464), bool] */;
  %419 = shape_of(%417, dtype="int32") /* ty=Tensor[(3), int32] */;
  %420 = cast(%417, dtype="bool") /* ty=Tensor[(11, 16, 14), bool] */;
  %421 = dyn.reshape(%418, %419, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %422 = cast(meta[relay.Constant][13] /* ty=Tensor[(13, 4, 8), float32] */, dtype="float32") /* ty=Tensor[(13, 4, 8), float32] */;
  %423 = tan(%422) /* ty=Tensor[(13, 4, 8), float32] */;
  %424 = cast(%var_660, dtype="int8") /* ty=Tensor[(13, 4, 8), int8] */;
  %425 = shape_of(%423, dtype="int32") /* ty=Tensor[(3), int32] */;
  %426 = cast(%423, dtype="int8") /* ty=Tensor[(13, 4, 8), int8] */;
  %427 = dyn.reshape(%424, %425, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %428 = not_equal(%420, %421) /* ty=Tensor[(11, 16, 14), bool] */;
  %429 = multiply(%426, %427) /* ty=Tensor[(13, 4, 8), int8] */;
  (%428, %429)
}

def @func_10166() -> (Tensor[(13, 5, 2), float32],) {
  %430 = @func_9475() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %431 = %430.0;
  (%431,)
}

def @func_8504() -> Tensor[(13, 5, 2), float32] {
  @func_7585() /* ty=Tensor[(13, 5, 2), float32] */
}

def @func_12934() -> (Tensor[(13, 5, 2), float32],) {
  %432 = @func_10370() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %433 = %432.0;
  (%433,)
}

def @func_3624() -> Tensor[(13, 5, 2), float32] {
  %434 = @func_1708() /* ty=Tensor[(13, 5, 2), float32] */;
  %435 = cast(%434, dtype="float32") /* ty=Tensor[(13, 5, 2), float32] */;
  atanh(%435) /* ty=Tensor[(13, 5, 2), float32] */
}

def @func_10460() -> (Tensor[(3, 15, 15), float64], Tensor[(14, 7, 5), float32], Tensor[(1, 70), float32]) {
  %436 = cast(meta[relay.Constant][14] /* ty=Tensor[(3, 15, 15), float64] */, dtype="float64") /* ty=Tensor[(3, 15, 15), float64] */;
  %437 = cast(meta[relay.Constant][15] /* ty=Tensor[(1, 70), float32] */, dtype="float32") /* ty=Tensor[(1, 70), float32] */;
  %438 = reshape(%437, newshape=[14, 1, 5]) /* ty=Tensor[(14, 1, 5), float32] */;
  %439 = @func_6704(%438) /* ty=(Tensor[(14, 7, 5), float32],) */;
  %440 = erf(%436) /* ty=Tensor[(3, 15, 15), float64] */;
  %441 = %439.0;
  (%440, %441, meta[relay.Constant][15] /* ty=Tensor[(1, 70), float32] */)
}

def @func_6503() -> (Tensor[(168), float32],) {
  %442 = @func_2745() /* ty=(Tensor[(2, 7, 12), float32], Tensor[(168), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float64]) */;
  %443 = %442.1;
  (%443,)
}

def @func_13022(%var_13008: Tensor[(10, 13, 3), float32]) -> (Tensor[(10, 13, 3), float32], Tensor[(10, 13, 3), float32]) {
  %444 = cast(meta[relay.Constant][16] /* ty=Tensor[(10, 13, 3), float32] */, dtype="float32") /* ty=Tensor[(10, 13, 3), float32] */;
  %445 = shape_of(%var_13008, dtype="int32") /* ty=Tensor[(3), int32] */;
  %446 = cast(%var_13008, dtype="float32") /* ty=Tensor[(10, 13, 3), float32] */;
  %447 = dyn.reshape(%444, %445, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %448 = cast(meta[relay.Constant][16] /* ty=Tensor[(10, 13, 3), float32] */, dtype="float32") /* ty=Tensor[(10, 13, 3), float32] */;
  %449 = subtract(%446, %447) /* ty=Tensor[(10, 13, 3), float32] */;
  %450 = asinh(%448) /* ty=Tensor[(10, 13, 3), float32] */;
  (%449, %450)
}

def @func_8900() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) {
  %451 = @func_2763() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %452 = %451.0;
  %453 = @func_1360() /* ty=Tensor[(13, 5, 2), float32] */;
  (%452, %453)
}

def @func_8039(%var_7964: Tensor[(1950), float32], %var_7965: Tensor[(14), float32]) -> (Tensor[(13, 5, 2), float32], Tensor[(1950), float32], Tensor[(1950), float32], Tensor[(14), float32], Tensor[(11, 16, 14), float64], Tensor[(4, 616), float32], Tensor[(13, 5, 2), float32], Tensor[(8, 3, 15), float64], Tensor[(360), float64]) {
  %454 = @func_2786() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %455 = cast(%var_7964, dtype="float32") /* ty=Tensor[(1950), float32] */;
  %456 = cast(%var_7965, dtype="float32") /* ty=Tensor[(14), float32] */;
  %457 = reshape(%455, newshape=[1950]) /* ty=Tensor[(1950), float32] */;
  %458 = reshape(%456, newshape=[14]) /* ty=Tensor[(14), float32] */;
  %459 = @func_7390(%457, %458) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 10, 15), float32], Tensor[(1950), float32], Tensor[(14), float32], Tensor[(168), float32]) */;
  %460 = %454.0;
  %461 = cast(%460, dtype="float32") /* ty=Tensor[(13, 5, 2), float32] */;
  %462 = cast(meta[relay.Constant][17] /* ty=Tensor[(4, 616), float32] */, dtype="float32") /* ty=Tensor[(4, 616), float32] */;
  %463 = reshape(%461, newshape=[13, 5, 2]) /* ty=Tensor[(13, 5, 2), float32] */;
  %464 = reshape(%462, newshape=[2464]) /* ty=Tensor[(2464), float32] */;
  %465 = @func_1645(%463, %464) /* ty=(Tensor[(13, 5, 2), float64], Tensor[(11, 16, 14), float64]) */;
  %466 = @func_7914() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %467 = cast(meta[relay.Constant][18] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %468 = reshape(%467, newshape=[8, 3, 15]) /* ty=Tensor[(8, 3, 15), float64] */;
  %469 = %459.3;
  %470 = %465.1;
  %471 = %466.0;
  %472 = @func_4875(%468) /* ty=Tensor[(8, 3, 15), float64] */;
  (%460, %469, %var_7964, %var_7965, %470, meta[relay.Constant][17] /* ty=Tensor[(4, 616), float32] */, %471, %472, meta[relay.Constant][18] /* ty=Tensor[(360), float64] */)
}

def @func_3992() -> (Tensor[(13, 5, 2), float32],) {
  %473 = @func_3213() /* ty=(Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) */;
  %474 = %473.1;
  (%474,)
}

def @func_2763() -> (Tensor[(13, 5, 2), float32],) {
  %475 = @func_1708() /* ty=Tensor[(13, 5, 2), float32] */;
  (%475,)
}

def @func_6590() -> Tensor[(13, 5, 2), uint8] {
  %476 = @func_4865() /* ty=(Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) */;
  %476.0
}

def @func_11847() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float64], Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) {
  %477 = @func_5927() /* ty=Tensor[(13, 5, 2), float32] */;
  %478 = cast(%477, dtype="int8") /* ty=Tensor[(13, 5, 2), int8] */;
  %479 = reshape(%478, newshape=[13, 5, 2]) /* ty=Tensor[(13, 5, 2), int8] */;
  %480 = @func_4131(%479) /* ty=(Tensor[(13, 5, 2), int32], Tensor[(2464), bool], Tensor[(168), float32], Tensor[(1, 14), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float64], Tensor[(2464), float32]) */;
  %481 = @func_7619() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %482 = %480.5;
  %483 = @func_6590() /* ty=Tensor[(13, 5, 2), uint8] */;
  %484 = %481.0;
  (%477, %482, %483, %484)
}

def @func_11509() -> (Tensor[(13, 5, 2), float32],) {
  %485 = @func_6240() /* ty=(float32, Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) */;
  %486 = %485.2;
  (%486,)
}

def @func_3816(%var_3811: Tensor[(14), float32]) -> (float32, float32, Tensor[(2, 1232), float32], Tensor[(14), float32]) {
  %487 = @func_3549() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8], float32, Tensor[(2464), float32], Tensor[(416), float32]) */;
  %488 = cast(meta[relay.Constant][19] /* ty=Tensor[(2, 1232), float32] */, dtype="float32") /* ty=Tensor[(2, 1232), float32] */;
  %489 = %487.3;
  %490 = cast(%489, dtype="float32") /* ty=float32 */;
  %491 = cast(%var_3811, dtype="float32") /* ty=Tensor[(14), float32] */;
  %492 = reshape(%488, newshape=[2464]) /* ty=Tensor[(2464), float32] */;
  %493 = reshape(%490, newshape=[]) /* ty=float32 */;
  %494 = reshape(%491, newshape=[14]) /* ty=Tensor[(14), float32] */;
  %495 = @func_2888(%492, %493, %494) /* ty=(Tensor[(2464), bool], Tensor[(1, 14), float32], float32, Tensor[(14), float32]) */;
  %496 = %495.2;
  (%489, %496, meta[relay.Constant][19] /* ty=Tensor[(2, 1232), float32] */, %var_3811)
}

def @func_5584() -> (Tensor[(13, 5, 2), float32],) {
  %497 = @func_1967() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %498 = %497.0;
  (%498,)
}

def @func_13318() -> (Tensor[(2464), float32],) {
  %499 = @func_2713() /* ty=Tensor[(2464), float32] */;
  (%499,)
}

def @func_14411(%var_14377: Tensor[(14, 13, 10), float64]) -> (Tensor[(13, 5, 2), float32], Tensor[(14, 13, 10), float32], Tensor[(13, 5, 2), int8]) {
  %500 = @func_10190() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %501 = cast(%var_14377, dtype="float64") /* ty=Tensor[(14, 13, 10), float64] */;
  %502 = log(%501) /* ty=Tensor[(14, 13, 10), float64] */;
  %503 = cast(%var_14377, dtype="float32") /* ty=Tensor[(14, 13, 10), float32] */;
  %504 = shape_of(%502, dtype="int32") /* ty=Tensor[(3), int32] */;
  %505 = cast(%502, dtype="float32") /* ty=Tensor[(14, 13, 10), float32] */;
  %506 = dyn.reshape(%503, %504, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %507 = @func_9247() /* ty=(Tensor[(13, 5, 2), int8], Tensor[(13, 5, 2), float32]) */;
  %508 = %500.0;
  %509 = mod(%505, %506) /* ty=Tensor[(14, 13, 10), float32] */;
  %510 = %507.0;
  (%508, %509, %510)
}

def @func_7328(%var_7264: Tensor[(13, 5, 2), float32], %var_7304: Tensor[(360), float64]) -> (Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8], Tensor[(8, 3, 15), float64], Tensor[(360), float64]) {
  %511 = @func_1928() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float64], Tensor[(2464), float32]) */;
  %512 = %511.0;
  %513 = cast(%var_7264, dtype="uint8") /* ty=Tensor[(13, 5, 2), uint8] */;
  %514 = shape_of(%512, dtype="int32") /* ty=Tensor[(3), int32] */;
  %515 = cast(%512, dtype="uint8") /* ty=Tensor[(13, 5, 2), uint8] */;
  %516 = dyn.reshape(%513, %514, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %517 = @func_1738() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %518 = @func_6158() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) */;
  %519 = cast(%var_7304, dtype="float64") /* ty=Tensor[(360), float64] */;
  %520 = reshape(%519, newshape=[8, 3, 15]) /* ty=Tensor[(8, 3, 15), float64] */;
  %521 = bitwise_and(%515, %516) /* ty=Tensor[(13, 5, 2), uint8] */;
  %522 = %517.0;
  %523 = %518.1;
  %524 = @func_4875(%520) /* ty=Tensor[(8, 3, 15), float64] */;
  (%521, %522, %523, %524, %var_7304)
}

def @func_5442() -> (Tensor[(13, 5, 2), uint8],) {
  %525 = @func_1375() /* ty=(Tensor[(13, 5, 2), uint8],) */;
  %526 = %525.0;
  (%526,)
}

def @func_12921() -> (Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), uint8]) {
  %527 = @func_4865() /* ty=(Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) */;
  %528 = @func_8273() /* ty=(Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) */;
  %529 = %527.0;
  %530 = @func_1354() /* ty=Tensor[(13, 5, 2), float32] */;
  %531 = @func_6778() /* ty=Tensor[(13, 5, 2), float32] */;
  %532 = @func_12461() /* ty=Tensor[(13, 5, 2), uint8] */;
  %533 = %528.0;
  (%529, %530, %531, %532, %533)
}

def @func_3390(%var_3370: Tensor[(168), float32]) -> (Tensor[(13, 5, 2), int8], Tensor[(6, 14, 2), float32], Tensor[(168), float32]) {
  %534 = cast(%var_3370, dtype="float32") /* ty=Tensor[(168), float32] */;
  %535 = reshape(%534, newshape=[6, 14, 2]) /* ty=Tensor[(6, 14, 2), float32] */;
  %536 = @func_1026(%535) /* ty=(Tensor[(6, 14, 2), float32], Tensor[(6, 14, 2), float32]) */;
  %537 = @func_1762() /* ty=Tensor[(13, 5, 2), int8] */;
  %538 = %536.0;
  (%537, %538, %var_3370)
}

def @func_1645(%var_1603: Tensor[(13, 5, 2), float32], %var_1622: Tensor[(2464), float32]) -> (Tensor[(13, 5, 2), float64], Tensor[(11, 16, 14), float64]) {
  %539 = @func_1354() /* ty=Tensor[(13, 5, 2), float32] */;
  %540 = cast(%var_1603, dtype="float64") /* ty=Tensor[(13, 5, 2), float64] */;
  %541 = shape_of(%539, dtype="int32") /* ty=Tensor[(3), int32] */;
  %542 = cast(%539, dtype="float64") /* ty=Tensor[(13, 5, 2), float64] */;
  %543 = dyn.reshape(%540, %541, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %544 = cast(%var_1622, dtype="float32") /* ty=Tensor[(2464), float32] */;
  %545 = reshape(%544, newshape=[11, 16, 14]) /* ty=Tensor[(11, 16, 14), float32] */;
  %546 = @func_66(%545) /* ty=(Tensor[(11, 16, 14), float32],) */;
  %547 = %546.0;
  %548 = cast(%var_1622, dtype="float64") /* ty=Tensor[(2464), float64] */;
  %549 = shape_of(%547, dtype="int32") /* ty=Tensor[(3), int32] */;
  %550 = cast(%547, dtype="float64") /* ty=Tensor[(11, 16, 14), float64] */;
  %551 = dyn.reshape(%548, %549, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %552 = floor_divide(%542, %543) /* ty=Tensor[(13, 5, 2), float64] */;
  %553 = minimum(%550, %551) /* ty=Tensor[(11, 16, 14), float64] */;
  (%552, %553)
}

def @func_2745() -> (Tensor[(2, 7, 12), float32], Tensor[(168), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float64]) {
  %554 = cast(meta[relay.Constant][20] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %555 = reshape(%554, newshape=[2, 7, 12]) /* ty=Tensor[(2, 7, 12), float32] */;
  %556 = @func_1967() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %557 = @func_1708() /* ty=Tensor[(13, 5, 2), float32] */;
  %558 = cast(%557, dtype="float64") /* ty=Tensor[(13, 5, 2), float64] */;
  %559 = @func_2178(%555) /* ty=Tensor[(2, 7, 12), float32] */;
  %560 = %556.0;
  %561 = log2(%558) /* ty=Tensor[(13, 5, 2), float64] */;
  (%559, meta[relay.Constant][20] /* ty=Tensor[(168), float32] */, %560, %561)
}

def @func_5451() -> (Tensor[(13, 5, 2), uint8],) {
  %562 = @func_4324() /* ty=(Tensor[(13, 5, 2), uint8],) */;
  %563 = %562.0;
  (%563,)
}

def @func_66(%var_47: Tensor[(11, 16, 14), float32]) -> (Tensor[(11, 16, 14), float32],) {
  %564 = cast(%var_47, dtype="float32") /* ty=Tensor[(11, 16, 14), float32] */;
  %565 = sqrt(%564) /* ty=Tensor[(11, 16, 14), float32] */;
  (%565,)
}

def @func_2888(%var_2864: Tensor[(2464), float32], %var_2874: float32, %var_2875: Tensor[(14), float32]) -> (Tensor[(2464), bool], Tensor[(1, 14), float32], float32, Tensor[(14), float32]) {
  %566 = @func_2713() /* ty=Tensor[(2464), float32] */;
  %567 = cast(%var_2864, dtype="bool") /* ty=Tensor[(2464), bool] */;
  %568 = shape_of(%566, dtype="int32") /* ty=Tensor[(1), int32] */;
  %569 = cast(%566, dtype="bool") /* ty=Tensor[(2464), bool] */;
  %570 = dyn.reshape(%567, %568, newshape=[]) /* ty=Tensor[(?), bool] */;
  %571 = cast(%var_2874, dtype="float32") /* ty=float32 */;
  %572 = cast(%var_2875, dtype="float32") /* ty=Tensor[(14), float32] */;
  %573 = reshape(%571, newshape=[]) /* ty=float32 */;
  %574 = reshape(%572, newshape=[1, 14]) /* ty=Tensor[(1, 14), float32] */;
  %575 = @func_1174(%573, %574) /* ty=(Tensor[(1, 14), float32],) */;
  %576 = greater(%569, %570) /* ty=Tensor[(2464), bool] */;
  %577 = %575.0;
  (%576, %577, %var_2874, %var_2875)
}

def @func_1500(%var_1486: Tensor[(2464), float32]) -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(6, 14, 2), float32], Tensor[(42, 4), float32], Tensor[(13, 4, 8), int8], Tensor[(2464), float32], Tensor[(416), float32], Tensor[(13, 5, 2), float32]) {
  %578 = cast(meta[relay.Constant][21] /* ty=Tensor[(42, 4), float32] */, dtype="float32") /* ty=Tensor[(42, 4), float32] */;
  %579 = reshape(%578, newshape=[6, 14, 2]) /* ty=Tensor[(6, 14, 2), float32] */;
  %580 = @func_1026(%579) /* ty=(Tensor[(6, 14, 2), float32], Tensor[(6, 14, 2), float32]) */;
  %581 = cast(%var_1486, dtype="float32") /* ty=Tensor[(2464), float32] */;
  %582 = cast(meta[relay.Constant][22] /* ty=Tensor[(416), float32] */, dtype="float32") /* ty=Tensor[(416), float32] */;
  %583 = reshape(%581, newshape=[2464]) /* ty=Tensor[(2464), float32] */;
  %584 = reshape(%582, newshape=[13, 4, 8]) /* ty=Tensor[(13, 4, 8), float32] */;
  %585 = @func_669(%583, %584) /* ty=(Tensor[(11, 16, 14), bool], Tensor[(13, 4, 8), int8]) */;
  %586 = @func_1360() /* ty=Tensor[(13, 5, 2), float32] */;
  %587 = @func_1354() /* ty=Tensor[(13, 5, 2), float32] */;
  %588 = %580.1;
  %589 = %585.1;
  %590 = @func_1354() /* ty=Tensor[(13, 5, 2), float32] */;
  (%586, %587, %588, meta[relay.Constant][21] /* ty=Tensor[(42, 4), float32] */, %589, %var_1486, meta[relay.Constant][22] /* ty=Tensor[(416), float32] */, %590)
}

def @func_13157() -> (Tensor[(13, 5, 2), float32],) {
  %591 = @func_9627() /* ty=Tensor[(13, 5, 2), float32] */;
  (%591,)
}

def @func_2786() -> (Tensor[(13, 5, 2), float32],) {
  %592 = @func_1354() /* ty=Tensor[(13, 5, 2), float32] */;
  (%592,)
}

def @func_2530() -> (Tensor[(2464), float32],) {
  %593 = @func_1928() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float64], Tensor[(2464), float32]) */;
  %594 = %593.2;
  (%594,)
}

def @func_11918() -> (Tensor[(13, 5, 2), float32],) {
  %595 = @func_9211() /* ty=Tensor[(13, 5, 2), float32] */;
  (%595,)
}

def @func_5421() -> Tensor[(13, 5, 2), float32] {
  @func_1360() /* ty=Tensor[(13, 5, 2), float32] */
}

def @main(%var_14590: Tensor[(6, 3, 3), bool]) -> (Tensor[(6, 3, 3), bool],) {
  %596 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %597 = cast(%var_14590, dtype="bool") /* ty=Tensor[(6, 3, 3), bool] */;
  %598 = logical_or(%596, %597) /* ty=Tensor[(6, 3, 3), bool] */;
  (%598,)
}

def @func_2038(%var_2030: Tensor[(13, 10, 15), float32], %var_2034: Tensor[(14), float32]) -> (Tensor[(13, 10, 15), float32], Tensor[(13, 5, 2), int64], Tensor[(14), float32]) {
  %599 = cast(%var_2030, dtype="float32") /* ty=Tensor[(13, 10, 15), float32] */;
  %600 = cast(%var_2034, dtype="float32") /* ty=Tensor[(14), float32] */;
  %601 = reshape(%600, newshape=[14]) /* ty=Tensor[(14), float32] */;
  %602 = @func_1817(%601) /* ty=(Tensor[(1, 14), float32], Tensor[(14), float32], Tensor[(13, 5, 2), int64], Tensor[(13, 5, 2), int8]) */;
  %603 = atanh(%599) /* ty=Tensor[(13, 10, 15), float32] */;
  %604 = %602.2;
  (%603, %604, %var_2034)
}

def @func_4235(%var_4191: Tensor[(3, 14, 15), int32], %var_4192: Tensor[(3, 14, 15), int32]) -> (Tensor[(3, 14, 15), bool], Tensor[(12, 10, 5), uint8], Tensor[(600), uint8], Tensor[(3, 14, 15), float64]) {
  %605 = cast(%var_4192, dtype="bool") /* ty=Tensor[(3, 14, 15), bool] */;
  %606 = shape_of(%var_4191, dtype="int32") /* ty=Tensor[(3), int32] */;
  %607 = cast(%var_4191, dtype="bool") /* ty=Tensor[(3, 14, 15), bool] */;
  %608 = dyn.reshape(%605, %606, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %609 = cast(meta[relay.Constant][23] /* ty=Tensor[(600), uint8] */, dtype="uint8") /* ty=Tensor[(600), uint8] */;
  %610 = reshape(%609, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), uint8] */;
  %611 = cast(%var_4192, dtype="float64") /* ty=Tensor[(3, 14, 15), float64] */;
  %612 = greater_equal(%607, %608) /* ty=Tensor[(3, 14, 15), bool] */;
  %613 = @func_3009(%610) /* ty=Tensor[(12, 10, 5), uint8] */;
  %614 = asin(%611) /* ty=Tensor[(3, 14, 15), float64] */;
  (%612, %613, meta[relay.Constant][23] /* ty=Tensor[(600), uint8] */, %614)
}

def @func_2713() -> Tensor[(2464), float32] {
  %615 = @func_2530() /* ty=(Tensor[(2464), float32],) */;
  %615.0
}

def @func_5927() -> Tensor[(13, 5, 2), float32] {
  @func_5596() /* ty=Tensor[(13, 5, 2), float32] */
}

def @func_4865() -> (Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) {
  %616 = @func_2578() /* ty=Tensor[(13, 5, 2), uint8] */;
  %617 = @func_3624() /* ty=Tensor[(13, 5, 2), float32] */;
  (%616, %617)
}

def @func_8129() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) {
  %618 = @func_6323() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %619 = %618.0;
  %620 = @func_1762() /* ty=Tensor[(13, 5, 2), int8] */;
  (%619, %620)
}

def @func_11336(%var_11297: Tensor[(864), float32]) -> (Tensor[(13, 5, 2), int8], Tensor[(13, 5, 2), float32], Tensor[(864), float32]) {
  %621 = @func_10033() /* ty=(Tensor[(13, 5, 2), int8], Tensor[(416), float32]) */;
  %622 = cast(%var_11297, dtype="float32") /* ty=Tensor[(864), float32] */;
  %623 = reshape(%622, newshape=[864]) /* ty=Tensor[(864), float32] */;
  %624 = @func_8642(%623) /* ty=(Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32], Tensor[(9, 12, 8), float32], Tensor[(864), float32]) */;
  %625 = %621.0;
  %626 = %624.1;
  (%625, %626, %var_11297)
}

def @func_11515() -> (Tensor[(13, 5, 2), float32],) {
  %627 = @func_6102() /* ty=Tensor[(13, 5, 2), float32] */;
  (%627,)
}

def @func_12397() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) {
  %628 = @func_4791() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8], float32, Tensor[(14), float32]) */;
  %629 = @func_3213() /* ty=(Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) */;
  %630 = %628.1;
  %631 = %629.1;
  (%630, %631)
}

def @func_12797(%var_12778: Tensor[(11, 15, 11), float32]) -> (Tensor[(11, 15, 11), float32], Tensor[(13, 5, 2), float32]) {
  %632 = cast(%var_12778, dtype="float32") /* ty=Tensor[(11, 15, 11), float32] */;
  %633 = @func_6990() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(11, 16, 14), float64], Tensor[(2464), float32]) */;
  %634 = tan(%632) /* ty=Tensor[(11, 15, 11), float32] */;
  %635 = %633.0;
  (%634, %635)
}

def @func_2367() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) {
  %636 = @func_1967() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %637 = @func_1690() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %638 = @func_1360() /* ty=Tensor[(13, 5, 2), float32] */;
  %639 = %636.0;
  %640 = %637.0;
  (%638, %639, %640)
}

def @func_9211() -> Tensor[(13, 5, 2), float32] {
  @func_1989() /* ty=Tensor[(13, 5, 2), float32] */
}

def @func_1817(%var_1777: Tensor[(14), float32]) -> (Tensor[(1, 14), float32], Tensor[(14), float32], Tensor[(13, 5, 2), int64], Tensor[(13, 5, 2), int8]) {
  %641 = cast(6.34185f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %642 = cast(%var_1777, dtype="float32") /* ty=Tensor[(14), float32] */;
  %643 = reshape(%641, newshape=[]) /* ty=float32 */;
  %644 = reshape(%642, newshape=[1, 14]) /* ty=Tensor[(1, 14), float32] */;
  %645 = @func_1174(%643, %644) /* ty=(Tensor[(1, 14), float32],) */;
  %646 = @func_1762() /* ty=Tensor[(13, 5, 2), int8] */;
  %647 = cast(%646, dtype="int64") /* ty=Tensor[(13, 5, 2), int64] */;
  %648 = cast(6.34185f /* ty=float32 */, dtype="int64") /* ty=int64 */;
  %649 = %645.0;
  %650 = left_shift(%647, %648) /* ty=Tensor[(13, 5, 2), int64] */;
  %651 = @func_1762() /* ty=Tensor[(13, 5, 2), int8] */;
  (%649, %var_1777, %650, %651)
}

def @func_5146(%var_5096: Tensor[(168), float32]) -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(168), float32], Tensor[(168), float32], Tensor[(13, 5, 2), float64], Tensor[(6, 14, 2), float32], Tensor[(11, 16, 14), float32], Tensor[(2464), float32]) {
  %652 = @func_2786() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %653 = cast(%var_5096, dtype="float32") /* ty=Tensor[(168), float32] */;
  %654 = reshape(%653, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %655 = @func_3390(%654) /* ty=(Tensor[(13, 5, 2), int8], Tensor[(6, 14, 2), float32], Tensor[(168), float32]) */;
  %656 = @func_4967() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float64]) */;
  %657 = @func_1989() /* ty=Tensor[(13, 5, 2), float32] */;
  %658 = cast(%657, dtype="float32") /* ty=Tensor[(13, 5, 2), float32] */;
  %659 = %655.2;
  %660 = cast(%659, dtype="float32") /* ty=Tensor[(168), float32] */;
  %661 = reshape(%658, newshape=[13, 5, 2]) /* ty=Tensor[(13, 5, 2), float32] */;
  %662 = reshape(%660, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %663 = @func_2119(%661, %662) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), bool], Tensor[(13, 5, 2), float32], Tensor[(6, 14, 2), float32], Tensor[(168), float32]) */;
  %664 = cast(meta[relay.Constant][24] /* ty=Tensor[(2464), float32] */, dtype="float32") /* ty=Tensor[(2464), float32] */;
  %665 = reshape(%664, newshape=[4, 616]) /* ty=Tensor[(4, 616), float32] */;
  %666 = @func_3198(%665) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(11, 16, 14), float32], Tensor[(4, 616), float32]) */;
  %667 = %652.0;
  %668 = %656.1;
  %669 = %663.3;
  %670 = %666.1;
  (%667, %657, %659, %var_5096, %668, %669, %670, meta[relay.Constant][24] /* ty=Tensor[(2464), float32] */)
}

def @func_2054(%var_2050: Tensor[(9, 12, 8), float32]) -> (Tensor[(9, 12, 8), float32],) {
  %671 = cast(%var_2050, dtype="float32") /* ty=Tensor[(9, 12, 8), float32] */;
  %672 = cos(%671) /* ty=Tensor[(9, 12, 8), float32] */;
  (%672,)
}

def @func_13613() -> (Tensor[(13, 5, 2), float32],) {
  %673 = @func_1989() /* ty=Tensor[(13, 5, 2), float32] */;
  (%673,)
}

def @func_7736(%var_7716: Tensor[(5, 5, 2), float64], %var_7722: Tensor[(5, 5, 2), bool]) -> Tensor[(5, 5, 2), int64] {
  %674 = cast(meta[relay.Constant][25] /* ty=Tensor[(5, 5, 2), float64] */, dtype="bool") /* ty=Tensor[(5, 5, 2), bool] */;
  %675 = shape_of(%var_7716, dtype="int32") /* ty=Tensor[(3), int32] */;
  %676 = cast(%var_7716, dtype="bool") /* ty=Tensor[(5, 5, 2), bool] */;
  %677 = dyn.reshape(%674, %675, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %678 = greater_equal(%676, %677) /* ty=Tensor[(5, 5, 2), bool] */;
  %679 = cast(%var_7722, dtype="int64") /* ty=Tensor[(5, 5, 2), int64] */;
  %680 = shape_of(%678, dtype="int32") /* ty=Tensor[(3), int32] */;
  %681 = cast(%678, dtype="int64") /* ty=Tensor[(5, 5, 2), int64] */;
  %682 = dyn.reshape(%679, %680, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  subtract(%681, %682) /* ty=Tensor[(5, 5, 2), int64] */
}

def @func_3794() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) {
  %683 = @func_2786() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %684 = %683.0;
  %685 = @func_1762() /* ty=Tensor[(13, 5, 2), int8] */;
  (%684, %685)
}

def @func_5813() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(1, 2464), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) {
  %686 = @func_2367() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) */;
  %687 = cast(meta[relay.Constant][26] /* ty=Tensor[(1, 2464), float32] */, dtype="float32") /* ty=Tensor[(1, 2464), float32] */;
  %688 = reshape(%687, newshape=[2464]) /* ty=Tensor[(2464), float32] */;
  %689 = @func_3739(%688) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(416), float32], Tensor[(2464), float32]) */;
  %690 = @func_1690() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %691 = %686.0;
  %692 = %689.0;
  %693 = @func_3624() /* ty=Tensor[(13, 5, 2), float32] */;
  %694 = @func_2578() /* ty=Tensor[(13, 5, 2), uint8] */;
  %695 = %690.0;
  (%691, %692, meta[relay.Constant][26] /* ty=Tensor[(1, 2464), float32] */, %693, %694, %695)
}

def @func_7514() -> Tensor[(13, 5, 2), float32] {
  %696 = @func_6158() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) */;
  %696.0
}

def @func_5908() -> Tensor[(13, 5, 2), float32] {
  %697 = @func_1690() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %697.0
}

def @func_6470() -> (Tensor[(13, 5, 2), float32],) {
  %698 = @func_6240() /* ty=(float32, Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) */;
  %699 = %698.2;
  (%699,)
}

def @func_13486() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) {
  %700 = @func_3794() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) */;
  %701 = @func_9867() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %702 = %700.0;
  %703 = %701.0;
  (%702, %703)
}

def @func_11656(%var_11646: Tensor[(15, 8, 16), float64]) -> Tensor[(15, 8, 16), bool] {
  %704 = cast(%var_11646, dtype="float64") /* ty=Tensor[(15, 8, 16), float64] */;
  %705 = asin(%704) /* ty=Tensor[(15, 8, 16), float64] */;
  %706 = cast(%var_11646, dtype="bool") /* ty=Tensor[(15, 8, 16), bool] */;
  %707 = shape_of(%705, dtype="int32") /* ty=Tensor[(3), int32] */;
  %708 = cast(%705, dtype="bool") /* ty=Tensor[(15, 8, 16), bool] */;
  %709 = dyn.reshape(%706, %707, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%708, %709) /* ty=Tensor[(15, 8, 16), bool] */
}

def @func_1967() -> (Tensor[(13, 5, 2), float32],) {
  %710 = @func_1928() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float64], Tensor[(2464), float32]) */;
  %711 = %710.0;
  (%711,)
}

def @func_3127() -> (Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) {
  %712 = @func_1375() /* ty=(Tensor[(13, 5, 2), uint8],) */;
  %713 = @func_1690() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %714 = %712.0;
  %715 = %713.0;
  %716 = @func_2569() /* ty=Tensor[(13, 5, 2), int8] */;
  (%714, %715, %716)
}

def @func_7419() -> (Tensor[(11, 16, 14), float64], Tensor[(13, 5, 2), uint8]) {
  %717 = @func_6990() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(11, 16, 14), float64], Tensor[(2464), float32]) */;
  %718 = @func_4324() /* ty=(Tensor[(13, 5, 2), uint8],) */;
  %719 = %717.2;
  %720 = %718.0;
  (%719, %720)
}

def @func_11071() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8]) {
  %721 = @func_9211() /* ty=Tensor[(13, 5, 2), float32] */;
  %722 = @func_2578() /* ty=Tensor[(13, 5, 2), uint8] */;
  (%721, %722)
}

def @func_9129(%var_9119: Tensor[(1950), float32]) -> (Tensor[(13, 5, 2), float32], Tensor[(13, 10, 15), float32], Tensor[(1950), float32], Tensor[(14), float32]) {
  %723 = cast(%var_9119, dtype="float32") /* ty=Tensor[(1950), float32] */;
  %724 = cast(meta[relay.Constant][27] /* ty=Tensor[(14), float32] */, dtype="float32") /* ty=Tensor[(14), float32] */;
  %725 = reshape(%723, newshape=[13, 10, 15]) /* ty=Tensor[(13, 10, 15), float32] */;
  %726 = reshape(%724, newshape=[14]) /* ty=Tensor[(14), float32] */;
  %727 = @func_2038(%725, %726) /* ty=(Tensor[(13, 10, 15), float32], Tensor[(13, 5, 2), int64], Tensor[(14), float32]) */;
  %728 = @func_8504() /* ty=Tensor[(13, 5, 2), float32] */;
  %729 = %727.0;
  (%728, %729, %var_9119, meta[relay.Constant][27] /* ty=Tensor[(14), float32] */)
}

def @func_11976() -> Tensor[(2464), float32] {
  @func_2713() /* ty=Tensor[(2464), float32] */
}

def @func_6158() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) {
  %730 = @func_1690() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %731 = %730.0;
  %732 = @func_1762() /* ty=Tensor[(13, 5, 2), int8] */;
  (%731, %732)
}

def @func_6644() -> Tensor[(13, 5, 2), float32] {
  %733 = @func_1967() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %733.0
}

def @func_9488() -> Tensor[(13, 5, 2), uint8] {
  %734 = @func_5451() /* ty=(Tensor[(13, 5, 2), uint8],) */;
  %734.0
}

def @func_7562() -> (Tensor[(13, 5, 2), int8], Tensor[(13, 5, 2), float32]) {
  %735 = @func_5712() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) */;
  %736 = %735.1;
  %737 = @func_7514() /* ty=Tensor[(13, 5, 2), float32] */;
  (%736, %737)
}

def @func_14190() -> (Tensor[(2464), float32], Tensor[(13, 5, 2), int8], Tensor[(13, 5, 2), float64], Tensor[(13, 5, 2), uint8]) {
  %738 = @func_7059() /* ty=(Tensor[(2464), float32],) */;
  %739 = @func_12289() /* ty=(Tensor[(13, 5, 2), int8], Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) */;
  %740 = @func_4967() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float64]) */;
  %741 = %738.0;
  %742 = %739.0;
  %743 = %740.1;
  %744 = @func_9538() /* ty=Tensor[(13, 5, 2), uint8] */;
  (%741, %742, %743, %744)
}

def @func_4324() -> (Tensor[(13, 5, 2), uint8],) {
  %745 = @func_3213() /* ty=(Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) */;
  %746 = %745.0;
  (%746,)
}

def @func_1360() -> Tensor[(13, 5, 2), float32] {
  @func_1354() /* ty=Tensor[(13, 5, 2), float32] */
}

def @func_3213() -> (Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) {
  %747 = @func_1375() /* ty=(Tensor[(13, 5, 2), uint8],) */;
  %748 = @func_1738() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %749 = %747.0;
  %750 = %748.0;
  (%749, %750)
}

def @func_9867() -> (Tensor[(13, 5, 2), float32],) {
  %751 = @func_7672() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) */;
  %752 = %751.0;
  (%752,)
}

def @func_1556(%var_1539: Tensor[(1232, 2), float32], %var_1540: Tensor[(8, 52), float32]) -> (Tensor[(13, 5, 2), uint8], Tensor[(1, 14), float32], float32, Tensor[(14), float32], Tensor[(13, 4, 8), int8], Tensor[(1232, 2), float32], Tensor[(8, 52), float32], Tensor[(13, 5, 2), float32]) {
  %753 = @func_1375() /* ty=(Tensor[(13, 5, 2), uint8],) */;
  %754 = cast(-8.82264f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %755 = cast(meta[relay.Constant][28] /* ty=Tensor[(14), float32] */, dtype="float32") /* ty=Tensor[(14), float32] */;
  %756 = reshape(%754, newshape=[]) /* ty=float32 */;
  %757 = reshape(%755, newshape=[1, 14]) /* ty=Tensor[(1, 14), float32] */;
  %758 = @func_1174(%756, %757) /* ty=(Tensor[(1, 14), float32],) */;
  %759 = cast(%var_1539, dtype="float32") /* ty=Tensor[(1232, 2), float32] */;
  %760 = cast(%var_1540, dtype="float32") /* ty=Tensor[(8, 52), float32] */;
  %761 = reshape(%759, newshape=[2464]) /* ty=Tensor[(2464), float32] */;
  %762 = reshape(%760, newshape=[13, 4, 8]) /* ty=Tensor[(13, 4, 8), float32] */;
  %763 = @func_669(%761, %762) /* ty=(Tensor[(11, 16, 14), bool], Tensor[(13, 4, 8), int8]) */;
  %764 = %753.0;
  %765 = %758.0;
  %766 = %763.1;
  %767 = @func_1354() /* ty=Tensor[(13, 5, 2), float32] */;
  (%764, %765, -8.82264f /* ty=float32 */, meta[relay.Constant][28] /* ty=Tensor[(14), float32] */, %766, %var_1539, %var_1540, %767)
}

def @func_12581() -> (Tensor[(2464), float32],) {
  %768 = @func_1928() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float64], Tensor[(2464), float32]) */;
  %769 = %768.2;
  (%769,)
}

def @func_2578() -> Tensor[(13, 5, 2), uint8] {
  %770 = @func_1375() /* ty=(Tensor[(13, 5, 2), uint8],) */;
  %770.0
}

def @func_1690() -> (Tensor[(13, 5, 2), float32],) {
  %771 = @func_1354() /* ty=Tensor[(13, 5, 2), float32] */;
  (%771,)
}

def @func_7157(%var_7146: Tensor[(5, 14, 1), float64]) -> Tensor[(5, 14, 1), float64] {
  %772 = cast(%var_7146, dtype="float64") /* ty=Tensor[(5, 14, 1), float64] */;
  sinh(%772) /* ty=Tensor[(5, 14, 1), float64] */
}

def @func_4546() -> (Tensor[(13, 5, 2), float32],) {
  %773 = @func_1690() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %774 = %773.0;
  (%774,)
}

def @func_1928() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float64], Tensor[(2464), float32]) {
  %775 = @func_1354() /* ty=Tensor[(13, 5, 2), float32] */;
  %776 = cast(%775, dtype="float32") /* ty=Tensor[(13, 5, 2), float32] */;
  %777 = cast(meta[relay.Constant][29] /* ty=Tensor[(2464), float32] */, dtype="float32") /* ty=Tensor[(2464), float32] */;
  %778 = reshape(%776, newshape=[13, 5, 2]) /* ty=Tensor[(13, 5, 2), float32] */;
  %779 = reshape(%777, newshape=[2464]) /* ty=Tensor[(2464), float32] */;
  %780 = @func_1645(%778, %779) /* ty=(Tensor[(13, 5, 2), float64], Tensor[(11, 16, 14), float64]) */;
  %781 = %780.0;
  (%775, %781, meta[relay.Constant][29] /* ty=Tensor[(2464), float32] */)
}

def @func_7176(%var_7173: Tensor[(2464), float32]) -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8], Tensor[(2464), float32]) {
  %782 = @func_5813() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(1, 2464), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) */;
  %783 = cast(%var_7173, dtype="float32") /* ty=Tensor[(2464), float32] */;
  %784 = reshape(%783, newshape=[2464]) /* ty=Tensor[(2464), float32] */;
  %785 = @func_4396(%784) /* ty=(Tensor[(13, 5, 2), int8], Tensor[(13, 5, 2), float32], Tensor[(2464), float32]) */;
  %786 = %782.3;
  %787 = %785.0;
  (%786, %787, %var_7173)
}

def @func_10033() -> (Tensor[(13, 5, 2), int8], Tensor[(416), float32]) {
  %788 = @func_3549() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8], float32, Tensor[(2464), float32], Tensor[(416), float32]) */;
  %789 = @func_2569() /* ty=Tensor[(13, 5, 2), int8] */;
  %790 = %788.5;
  (%789, %790)
}

def @func_1174(%var_1166: float32, %var_1167: Tensor[(1, 14), float32]) -> (Tensor[(1, 14), float32],) {
  %791 = cast(%var_1166, dtype="float32") /* ty=float32 */;
  %792 = cast(%var_1167, dtype="float32") /* ty=Tensor[(1, 14), float32] */;
  %793 = floor_divide(%791, %792) /* ty=Tensor[(1, 14), float32] */;
  (%793,)
}

def @func_11153(%var_11142: Tensor[(1950), float32]) -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float64], Tensor[(4, 616), float32], Tensor[(1950), float32], Tensor[(14), float32]) {
  %794 = @func_10190() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %795 = @func_1738() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %796 = @func_1928() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float64], Tensor[(2464), float32]) */;
  %797 = cast(%var_11142, dtype="float32") /* ty=Tensor[(1950), float32] */;
  %798 = cast(meta[relay.Constant][30] /* ty=Tensor[(14), float32] */, dtype="float32") /* ty=Tensor[(14), float32] */;
  %799 = reshape(%797, newshape=[1950]) /* ty=Tensor[(1950), float32] */;
  %800 = reshape(%798, newshape=[14]) /* ty=Tensor[(14), float32] */;
  %801 = @func_8039(%799, %800) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(1950), float32], Tensor[(1950), float32], Tensor[(14), float32], Tensor[(11, 16, 14), float64], Tensor[(4, 616), float32], Tensor[(13, 5, 2), float32], Tensor[(8, 3, 15), float64], Tensor[(360), float64]) */;
  %802 = %794.0;
  %803 = %795.0;
  %804 = %796.1;
  %805 = %801.5;
  (%802, %803, %804, %805, %var_11142, meta[relay.Constant][30] /* ty=Tensor[(14), float32] */)
}

def @func_6990() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(11, 16, 14), float64], Tensor[(2464), float32]) {
  %806 = @func_6366() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %807 = @func_3549() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8], float32, Tensor[(2464), float32], Tensor[(416), float32]) */;
  %808 = %807.1;
  %809 = cast(%808, dtype="float32") /* ty=Tensor[(13, 5, 2), float32] */;
  %810 = cast(meta[relay.Constant][31] /* ty=Tensor[(2464), float32] */, dtype="float32") /* ty=Tensor[(2464), float32] */;
  %811 = reshape(%809, newshape=[13, 5, 2]) /* ty=Tensor[(13, 5, 2), float32] */;
  %812 = reshape(%810, newshape=[2464]) /* ty=Tensor[(2464), float32] */;
  %813 = @func_1645(%811, %812) /* ty=(Tensor[(13, 5, 2), float64], Tensor[(11, 16, 14), float64]) */;
  %814 = %806.0;
  %815 = %813.1;
  (%814, %808, %815, meta[relay.Constant][31] /* ty=Tensor[(2464), float32] */)
}

def @func_9091() -> (Tensor[(13, 5, 2), uint8],) {
  %816 = @func_5442() /* ty=(Tensor[(13, 5, 2), uint8],) */;
  %817 = %816.0;
  (%817,)
}

def @func_8144() -> (Tensor[(168), float32],) {
  %818 = @func_2745() /* ty=(Tensor[(2, 7, 12), float32], Tensor[(168), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float64]) */;
  %819 = %818.1;
  (%819,)
}

def @func_1026(%var_1015: Tensor[(6, 14, 2), float32]) -> (Tensor[(6, 14, 2), float32], Tensor[(6, 14, 2), float32]) {
  %820 = cast(%var_1015, dtype="float32") /* ty=Tensor[(6, 14, 2), float32] */;
  %821 = cast(%var_1015, dtype="float32") /* ty=Tensor[(6, 14, 2), float32] */;
  %822 = log(%820) /* ty=Tensor[(6, 14, 2), float32] */;
  %823 = sinh(%821) /* ty=Tensor[(6, 14, 2), float32] */;
  (%822, %823)
}

def @func_3154() -> (Tensor[(13, 5, 2), float32], Tensor[(1, 14), float32], float32, Tensor[(14, 1), float32], Tensor[(13, 5, 2), float32]) {
  %824 = @func_1690() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %825 = cast(7.05182f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %826 = cast(meta[relay.Constant][32] /* ty=Tensor[(14, 1), float32] */, dtype="float32") /* ty=Tensor[(14, 1), float32] */;
  %827 = reshape(%825, newshape=[]) /* ty=float32 */;
  %828 = reshape(%826, newshape=[1, 14]) /* ty=Tensor[(1, 14), float32] */;
  %829 = @func_1174(%827, %828) /* ty=(Tensor[(1, 14), float32],) */;
  %830 = @func_2763() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %831 = %824.0;
  %832 = %829.0;
  %833 = %830.0;
  (%831, %832, 7.05182f /* ty=float32 */, meta[relay.Constant][32] /* ty=Tensor[(14, 1), float32] */, %833)
}

def @func_8433() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) {
  %834 = @func_5813() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(1, 2464), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) */;
  %835 = %834.3;
  %836 = @func_6778() /* ty=Tensor[(13, 5, 2), float32] */;
  (%835, %836)
}

def @func_9432() -> (Tensor[(3, ?, 8), int32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) {
  %837 = cast(meta[relay.Constant][33] /* ty=Tensor[(3, 1, 8), float32] */, dtype="float32") /* ty=Tensor[(3, 1, 8), float32] */;
  %838 = cosh(%837) /* ty=Tensor[(3, 1, 8), float32] */;
  %839 = cast(meta[relay.Constant][33] /* ty=Tensor[(3, 1, 8), float32] */, dtype="int32") /* ty=Tensor[(3, 1, 8), int32] */;
  %840 = shape_of(%838, dtype="int32") /* ty=Tensor[(3), int32] */;
  %841 = cast(%838, dtype="int32") /* ty=Tensor[(3, 1, 8), int32] */;
  %842 = dyn.reshape(%839, %840, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %843 = @func_7914() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %844 = @func_1738() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %845 = minimum(%841, %842) /* ty=Tensor[(3, ?, 8), int32] */;
  %846 = %843.0;
  %847 = %844.0;
  (%845, %846, %847)
}

def @func_13384() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8]) {
  %848 = @func_9386() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %849 = @func_7672() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) */;
  %850 = %848.0;
  %851 = %849.0;
  %852 = @func_9488() /* ty=Tensor[(13, 5, 2), uint8] */;
  (%850, %851, %852)
}

def @func_12150(%var_12139: Tensor[(1950), float32], %var_12147: float32) -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(1950), float32], Tensor[(1950), float32], Tensor[(13, 5, 2), float32], Tensor[(1, 14), float32], float32, Tensor[(14), float32]) {
  %853 = @func_7619() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %854 = @func_12092() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %855 = @func_9008() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(168), float32]) */;
  %856 = cast(%var_12139, dtype="float32") /* ty=Tensor[(1950), float32] */;
  %857 = reshape(%856, newshape=[1950]) /* ty=Tensor[(1950), float32] */;
  %858 = @func_11153(%857) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float64], Tensor[(4, 616), float32], Tensor[(1950), float32], Tensor[(14), float32]) */;
  %859 = @func_9008() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(168), float32]) */;
  %860 = cast(%var_12147, dtype="float32") /* ty=float32 */;
  %861 = cast(meta[relay.Constant][34] /* ty=Tensor[(14), float32] */, dtype="float32") /* ty=Tensor[(14), float32] */;
  %862 = reshape(%860, newshape=[]) /* ty=float32 */;
  %863 = reshape(%861, newshape=[1, 14]) /* ty=Tensor[(1, 14), float32] */;
  %864 = @func_1174(%862, %863) /* ty=(Tensor[(1, 14), float32],) */;
  %865 = %853.0;
  %866 = %854.0;
  %867 = %855.0;
  %868 = %858.4;
  %869 = %859.0;
  %870 = %864.0;
  (%865, %866, %867, %868, %var_12139, %869, %870, %var_12147, meta[relay.Constant][34] /* ty=Tensor[(14), float32] */)
}

def @func_12962(%var_12939: Tensor[(4, 15, 3), float32], %var_12949: Tensor[(352), int32]) -> (Tensor[(4, 15, 3), float32], Tensor[(4, 11, 8), int32], Tensor[(352), int32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) {
  %871 = cast(%var_12939, dtype="float32") /* ty=Tensor[(4, 15, 3), float32] */;
  %872 = cast(%var_12949, dtype="int32") /* ty=Tensor[(352), int32] */;
  %873 = reshape(%872, newshape=[4, 11, 8]) /* ty=Tensor[(4, 11, 8), int32] */;
  %874 = @func_11636() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) */;
  %875 = @func_4365() /* ty=(Tensor[(13, 5, 2), int8],) */;
  %876 = exp(%871) /* ty=Tensor[(4, 15, 3), float32] */;
  %877 = @func_3945(%873) /* ty=Tensor[(4, 11, 8), int32] */;
  %878 = %874.0;
  %879 = %875.0;
  (%876, %877, %var_12949, %878, %879)
}

def @func_6584() -> Tensor[(13, 5, 2), float32] {
  @func_5421() /* ty=Tensor[(13, 5, 2), float32] */
}

def @func_9719() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) {
  %880 = @func_9627() /* ty=Tensor[(13, 5, 2), float32] */;
  %881 = @func_5421() /* ty=Tensor[(13, 5, 2), float32] */;
  (%880, %881)
}

def @func_13061() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) {
  %882 = @func_5421() /* ty=Tensor[(13, 5, 2), float32] */;
  %883 = @func_3624() /* ty=Tensor[(13, 5, 2), float32] */;
  (%882, %883)
}

def @func_10083(%var_10043: uint8, %var_10044: Tensor[(2, 2, 7), uint8], %var_10052: Tensor[(168), float32]) -> (Tensor[(2, 2, 7), bool], Tensor[(13, 5, 2), float32], Tensor[(168), float32], Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) {
  %884 = cast(%var_10043, dtype="bool") /* ty=bool */;
  %885 = cast(%var_10044, dtype="bool") /* ty=Tensor[(2, 2, 7), bool] */;
  %886 = cast(%var_10052, dtype="float32") /* ty=Tensor[(168), float32] */;
  %887 = reshape(%886, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %888 = @func_5146(%887) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(168), float32], Tensor[(168), float32], Tensor[(13, 5, 2), float64], Tensor[(6, 14, 2), float32], Tensor[(11, 16, 14), float32], Tensor[(2464), float32]) */;
  %889 = @func_1375() /* ty=(Tensor[(13, 5, 2), uint8],) */;
  %890 = equal(%884, %885) /* ty=Tensor[(2, 2, 7), bool] */;
  %891 = %888.0;
  %892 = %889.0;
  %893 = @func_1708() /* ty=Tensor[(13, 5, 2), float32] */;
  (%890, %891, %var_10052, %892, %893)
}

def @func_12461() -> Tensor[(13, 5, 2), uint8] {
  %894 = @func_5442() /* ty=(Tensor[(13, 5, 2), uint8],) */;
  %894.0
}

def @func_4875(%var_4871: Tensor[(8, 3, 15), float64]) -> Tensor[(8, 3, 15), float64] {
  %895 = cast(%var_4871, dtype="float64") /* ty=Tensor[(8, 3, 15), float64] */;
  sqrt(%895) /* ty=Tensor[(8, 3, 15), float64] */
}

def @func_2178(%var_2171: Tensor[(2, 7, 12), float32]) -> Tensor[(2, 7, 12), float32] {
  %896 = cast(1.90848f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %897 = cast(%var_2171, dtype="float32") /* ty=Tensor[(2, 7, 12), float32] */;
  divide(%896, %897) /* ty=Tensor[(2, 7, 12), float32] */
}

def @func_14477(%var_14465: Tensor[(600), uint8]) -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8], Tensor[(600), uint8]) {
  %898 = cast(%var_14465, dtype="uint8") /* ty=Tensor[(600), uint8] */;
  %899 = reshape(%898, newshape=[600]) /* ty=Tensor[(600), uint8] */;
  %900 = @func_10909(%899) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8], Tensor[(12, 10, 5), uint8], Tensor[(600), uint8], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(168), float32], Tensor[(13, 5, 2), float32]) */;
  %901 = @func_5908() /* ty=Tensor[(13, 5, 2), float32] */;
  %902 = %900.1;
  (%901, %902, %var_14465)
}

def @func_6086(%var_6046: Tensor[(12, 16, 13), int32], %var_6047: Tensor[(12, 16, 13), int32]) -> (Tensor[(12, 16, 13), int32], Tensor[(13, 5, 2), float32], Tensor[(4, 11, 8), int32], Tensor[(4, 88), float64]) {
  %903 = cast(%var_6047, dtype="int32") /* ty=Tensor[(12, 16, 13), int32] */;
  %904 = shape_of(%var_6046, dtype="int32") /* ty=Tensor[(3), int32] */;
  %905 = cast(%var_6046, dtype="int32") /* ty=Tensor[(12, 16, 13), int32] */;
  %906 = dyn.reshape(%903, %904, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %907 = cast(meta[relay.Constant][35] /* ty=Tensor[(4, 88), int32] */, dtype="int32") /* ty=Tensor[(4, 88), int32] */;
  %908 = reshape(%907, newshape=[4, 11, 8]) /* ty=Tensor[(4, 11, 8), int32] */;
  %909 = cast(meta[relay.Constant][35] /* ty=Tensor[(4, 88), int32] */, dtype="float64") /* ty=Tensor[(4, 88), float64] */;
  %910 = left_shift(%905, %906) /* ty=Tensor[(12, 16, 13), int32] */;
  %911 = @func_2974() /* ty=Tensor[(13, 5, 2), float32] */;
  %912 = @func_3945(%908) /* ty=Tensor[(4, 11, 8), int32] */;
  %913 = acosh(%909) /* ty=Tensor[(4, 88), float64] */;
  (%910, %911, %912, %913)
}

def @func_4365() -> (Tensor[(13, 5, 2), int8],) {
  %914 = @func_3127() /* ty=(Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) */;
  %915 = %914.2;
  (%915,)
}

def @func_10608(%var_10594: Tensor[(12, 4, 8), float32], %var_10595: Tensor[(12, 4, 8), float32]) -> (Tensor[(12, 4, 8), float32],) {
  %916 = cast(%var_10595, dtype="float32") /* ty=Tensor[(12, 4, 8), float32] */;
  %917 = shape_of(%var_10594, dtype="int32") /* ty=Tensor[(3), int32] */;
  %918 = cast(%var_10594, dtype="float32") /* ty=Tensor[(12, 4, 8), float32] */;
  %919 = dyn.reshape(%916, %917, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %920 = floor_divide(%918, %919) /* ty=Tensor[(12, 4, 8), float32] */;
  (%920,)
}

def @func_8473() -> (Tensor[(630), int32],) {
  %921 = @func_6859() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(3, 14, 15), float64], Tensor[(630), int32], Tensor[(13, 5, 2), float32]) */;
  %922 = %921.2;
  (%922,)
}

def @func_7585() -> Tensor[(13, 5, 2), float32] {
  @func_6584() /* ty=Tensor[(13, 5, 2), float32] */
}

def @func_12817() -> Tensor[(13, 5, 2), int8] {
  @func_12017() /* ty=Tensor[(13, 5, 2), int8] */
}

def @func_4967() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float64]) {
  %923 = @func_1967() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %924 = @func_1762() /* ty=Tensor[(13, 5, 2), int8] */;
  %925 = cast(%924, dtype="float64") /* ty=Tensor[(13, 5, 2), float64] */;
  %926 = %923.0;
  %927 = asin(%925) /* ty=Tensor[(13, 5, 2), float64] */;
  (%926, %927)
}

def @func_10298(%var_10271: Tensor[(2464), float32], %var_10287: Tensor[(1950), float32], %var_10288: Tensor[(14), float32]) -> (Tensor[(13, 5, 2), float32], Tensor[(2464), float32], Tensor[(2464), float32], Tensor[(2464), float32], Tensor[(13, 5, 2), float32], Tensor[(1950), float32], Tensor[(14), float32]) {
  %928 = cast(%var_10271, dtype="float32") /* ty=Tensor[(2464), float32] */;
  %929 = reshape(%928, newshape=[2464]) /* ty=Tensor[(2464), float32] */;
  %930 = @func_4171(%929) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(11, 16, 14), float32], Tensor[(2464), float32]) */;
  %931 = %930.2;
  %932 = cast(%931, dtype="float32") /* ty=Tensor[(2464), float32] */;
  %933 = reshape(%932, newshape=[2464]) /* ty=Tensor[(2464), float32] */;
  %934 = @func_4500(%933) /* ty=(Tensor[(13, 5, 2), float64], Tensor[(13, 5, 2), float64], Tensor[(2464), float32]) */;
  %935 = %934.2;
  %936 = cast(%935, dtype="float32") /* ty=Tensor[(2464), float32] */;
  %937 = cast(%var_10287, dtype="float32") /* ty=Tensor[(1950), float32] */;
  %938 = cast(%var_10288, dtype="float32") /* ty=Tensor[(14), float32] */;
  %939 = reshape(%937, newshape=[1950]) /* ty=Tensor[(1950), float32] */;
  %940 = reshape(%938, newshape=[14]) /* ty=Tensor[(14), float32] */;
  %941 = @func_8039(%939, %940) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(1950), float32], Tensor[(1950), float32], Tensor[(14), float32], Tensor[(11, 16, 14), float64], Tensor[(4, 616), float32], Tensor[(13, 5, 2), float32], Tensor[(8, 3, 15), float64], Tensor[(360), float64]) */;
  %942 = @func_7514() /* ty=Tensor[(13, 5, 2), float32] */;
  %943 = sqrt(%936) /* ty=Tensor[(2464), float32] */;
  %944 = %941.6;
  (%942, %931, %var_10271, %943, %944, %var_10287, %var_10288)
}

def @func_1738() -> (Tensor[(13, 5, 2), float32],) {
  %945 = @func_1708() /* ty=Tensor[(13, 5, 2), float32] */;
  (%945,)
}

def @func_10667() -> Tensor[(13, 5, 2), uint8] {
  %946 = @func_5442() /* ty=(Tensor[(13, 5, 2), uint8],) */;
  %946.0
}

def @func_1220(%var_1211: Tensor[(15, 5, 16), bool]) -> (Tensor[(15, 5, 16), bool],) {
  %947 = cast(%var_1211, dtype="bool") /* ty=Tensor[(15, 5, 16), bool] */;
  %948 = shape_of(meta[relay.Constant][36] /* ty=Tensor[(15, 5, 16), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %949 = cast(meta[relay.Constant][36] /* ty=Tensor[(15, 5, 16), bool] */, dtype="bool") /* ty=Tensor[(15, 5, 16), bool] */;
  %950 = dyn.reshape(%947, %948, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %951 = logical_and(%949, %950) /* ty=Tensor[(15, 5, 16), bool] */;
  (%951,)
}

def @func_2119(%var_2093: Tensor[(13, 5, 2), float32], %var_2103: Tensor[(168), float32]) -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), bool], Tensor[(13, 5, 2), float32], Tensor[(6, 14, 2), float32], Tensor[(168), float32]) {
  %952 = @func_1708() /* ty=Tensor[(13, 5, 2), float32] */;
  %953 = cast(%var_2093, dtype="bool") /* ty=Tensor[(13, 5, 2), bool] */;
  %954 = shape_of(%952, dtype="int32") /* ty=Tensor[(3), int32] */;
  %955 = cast(%952, dtype="bool") /* ty=Tensor[(13, 5, 2), bool] */;
  %956 = dyn.reshape(%953, %954, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %957 = @func_1967() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %958 = cast(%var_2103, dtype="float32") /* ty=Tensor[(168), float32] */;
  %959 = reshape(%958, newshape=[6, 14, 2]) /* ty=Tensor[(6, 14, 2), float32] */;
  %960 = @func_1026(%959) /* ty=(Tensor[(6, 14, 2), float32], Tensor[(6, 14, 2), float32]) */;
  %961 = @func_1360() /* ty=Tensor[(13, 5, 2), float32] */;
  %962 = greater_equal(%955, %956) /* ty=Tensor[(13, 5, 2), bool] */;
  %963 = %957.0;
  %964 = %960.0;
  (%961, %962, %963, %964, %var_2103)
}

def @func_10009() -> (Tensor[(13, 5, 2), int8], Tensor[(13, 5, 2), uint8], Tensor[(168), float32]) {
  %965 = @func_4365() /* ty=(Tensor[(13, 5, 2), int8],) */;
  %966 = @func_9796() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(168), float32]) */;
  %967 = %965.0;
  %968 = @func_2578() /* ty=Tensor[(13, 5, 2), uint8] */;
  %969 = %966.1;
  (%967, %968, %969)
}

def @func_2265(%var_2252: Tensor[(2464), float32], %var_2253: Tensor[(1, 416), float32]) -> (Tensor[(13, 5, 2), float32], float32, Tensor[(2464), float32], Tensor[(1, 416), float64]) {
  %970 = cast(%var_2252, dtype="float32") /* ty=Tensor[(2464), float32] */;
  %971 = cast(%var_2253, dtype="float32") /* ty=Tensor[(1, 416), float32] */;
  %972 = reshape(%970, newshape=[1232, 2]) /* ty=Tensor[(1232, 2), float32] */;
  %973 = reshape(%971, newshape=[8, 52]) /* ty=Tensor[(8, 52), float32] */;
  %974 = @func_1556(%972, %973) /* ty=(Tensor[(13, 5, 2), uint8], Tensor[(1, 14), float32], float32, Tensor[(14), float32], Tensor[(13, 4, 8), int8], Tensor[(1232, 2), float32], Tensor[(8, 52), float32], Tensor[(13, 5, 2), float32]) */;
  %975 = cast(%var_2253, dtype="float64") /* ty=Tensor[(1, 416), float64] */;
  %976 = @func_1989() /* ty=Tensor[(13, 5, 2), float32] */;
  %977 = %974.2;
  %978 = sinh(%975) /* ty=Tensor[(1, 416), float64] */;
  (%976, %977, %var_2252, %978)
}

def @func_13848(%var_13845: Tensor[(2, 1232), float32], %var_13846: Tensor[(416), float32]) -> (Tensor[(13, 5, 2), int8], Tensor[(13, 4, 8), int8], Tensor[(2, 1232), float32], Tensor[(416), float32]) {
  %979 = cast(%var_13845, dtype="float32") /* ty=Tensor[(2, 1232), float32] */;
  %980 = cast(%var_13846, dtype="float32") /* ty=Tensor[(416), float32] */;
  %981 = reshape(%979, newshape=[2464]) /* ty=Tensor[(2464), float32] */;
  %982 = reshape(%980, newshape=[13, 4, 8]) /* ty=Tensor[(13, 4, 8), float32] */;
  %983 = @func_669(%981, %982) /* ty=(Tensor[(11, 16, 14), bool], Tensor[(13, 4, 8), int8]) */;
  %984 = @func_12017() /* ty=Tensor[(13, 5, 2), int8] */;
  %985 = %983.1;
  (%984, %985, %var_13845, %var_13846)
}

def @func_4131(%var_4086: Tensor[(13, 5, 2), int8]) -> (Tensor[(13, 5, 2), int32], Tensor[(2464), bool], Tensor[(168), float32], Tensor[(1, 14), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float64], Tensor[(2464), float32]) {
  %986 = @func_2569() /* ty=Tensor[(13, 5, 2), int8] */;
  %987 = cast(%var_4086, dtype="int32") /* ty=Tensor[(13, 5, 2), int32] */;
  %988 = shape_of(%986, dtype="int32") /* ty=Tensor[(3), int32] */;
  %989 = cast(%986, dtype="int32") /* ty=Tensor[(13, 5, 2), int32] */;
  %990 = dyn.reshape(%987, %988, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %991 = cast(meta[relay.Constant][37] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %992 = cast(meta[relay.Constant][38] /* ty=Tensor[(2464), float32] */, dtype="float32") /* ty=Tensor[(2464), float32] */;
  %993 = reshape(%991, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %994 = reshape(%992, newshape=[2464]) /* ty=Tensor[(2464), float32] */;
  %995 = @func_3296(%993, %994) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(2, 7, 12), float32], Tensor[(168), float32], Tensor[(13, 5, 2), float64], Tensor[(6, 14, 2), float32], Tensor[(11, 16, 14), float32], Tensor[(2464), bool]) */;
  %996 = @func_3154() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(1, 14), float32], float32, Tensor[(14, 1), float32], Tensor[(13, 5, 2), float32]) */;
  %997 = @func_1928() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float64], Tensor[(2464), float32]) */;
  %998 = cast(meta[relay.Constant][38] /* ty=Tensor[(2464), float32] */, dtype="float32") /* ty=Tensor[(2464), float32] */;
  %999 = right_shift(%989, %990) /* ty=Tensor[(13, 5, 2), int32] */;
  %1000 = %995.6;
  %1001 = %996.1;
  %1002 = @func_2974() /* ty=Tensor[(13, 5, 2), float32] */;
  %1003 = %997.1;
  %1004 = asinh(%998) /* ty=Tensor[(2464), float32] */;
  (%999, %1000, meta[relay.Constant][37] /* ty=Tensor[(168), float32] */, %1001, %1002, %1003, %1004)
}

def @func_9538() -> Tensor[(13, 5, 2), uint8] {
  %1005 = @func_4791() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8], float32, Tensor[(14), float32]) */;
  %1005.2
}

def @func_7672() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) {
  %1006 = @func_3127() /* ty=(Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) */;
  %1007 = @func_6158() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) */;
  %1008 = %1006.1;
  %1009 = %1007.1;
  (%1008, %1009)
}

def @func_3549() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8], float32, Tensor[(2464), float32], Tensor[(416), float32]) {
  %1010 = @func_2569() /* ty=Tensor[(13, 5, 2), int8] */;
  %1011 = cast(%1010, dtype="float32") /* ty=Tensor[(13, 5, 2), float32] */;
  %1012 = @func_2763() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %1013 = cast(meta[relay.Constant][39] /* ty=Tensor[(2464), float32] */, dtype="float32") /* ty=Tensor[(2464), float32] */;
  %1014 = cast(meta[relay.Constant][40] /* ty=Tensor[(416), float32] */, dtype="float32") /* ty=Tensor[(416), float32] */;
  %1015 = reshape(%1013, newshape=[2464]) /* ty=Tensor[(2464), float32] */;
  %1016 = reshape(%1014, newshape=[1, 416]) /* ty=Tensor[(1, 416), float32] */;
  %1017 = @func_2265(%1015, %1016) /* ty=(Tensor[(13, 5, 2), float32], float32, Tensor[(2464), float32], Tensor[(1, 416), float64]) */;
  %1018 = log10(%1011) /* ty=Tensor[(13, 5, 2), float32] */;
  %1019 = %1012.0;
  %1020 = @func_2578() /* ty=Tensor[(13, 5, 2), uint8] */;
  %1021 = %1017.1;
  (%1018, %1019, %1020, %1021, meta[relay.Constant][39] /* ty=Tensor[(2464), float32] */, meta[relay.Constant][40] /* ty=Tensor[(416), float32] */)
}

def @func_9247() -> (Tensor[(13, 5, 2), int8], Tensor[(13, 5, 2), float32]) {
  %1022 = @func_4365() /* ty=(Tensor[(13, 5, 2), int8],) */;
  %1023 = %1022.0;
  %1024 = @func_8504() /* ty=Tensor[(13, 5, 2), float32] */;
  (%1023, %1024)
}

def @func_6366() -> (Tensor[(13, 5, 2), float32],) {
  %1025 = @func_3794() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) */;
  %1026 = %1025.0;
  (%1026,)
}

def @func_13869() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) {
  %1027 = @func_4791() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8], float32, Tensor[(14), float32]) */;
  %1028 = @func_6102() /* ty=Tensor[(13, 5, 2), float32] */;
  %1029 = %1027.0;
  (%1028, %1029)
}

def @func_8179() -> (Tensor[(168), float32],) {
  %1030 = @func_5171() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(168), float32], Tensor[(168), float32], Tensor[(13, 5, 2), uint8]) */;
  %1031 = %1030.2;
  (%1031,)
}

def @func_6017(%var_5970: Tensor[(4, 6, 14), uint32], %var_5971: Tensor[(4, 6, 14), uint32], %var_5979: Tensor[(1200), bool]) -> (Tensor[(4, 6, 14), bool], Tensor[(15, 5, 16), float32], Tensor[(1200), bool], Tensor[(4, 6, 14), float32], Tensor[(1188), float32], Tensor[(1188), float32]) {
  %1032 = cast(%var_5971, dtype="bool") /* ty=Tensor[(4, 6, 14), bool] */;
  %1033 = shape_of(%var_5970, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1034 = cast(%var_5970, dtype="bool") /* ty=Tensor[(4, 6, 14), bool] */;
  %1035 = dyn.reshape(%1032, %1033, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1036 = cast(%var_5979, dtype="bool") /* ty=Tensor[(1200), bool] */;
  %1037 = reshape(%1036, newshape=[1200]) /* ty=Tensor[(1200), bool] */;
  %1038 = @func_1860(%1037) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(1200), bool], Tensor[(15, 5, 16), float32]) */;
  %1039 = cast(%var_5970, dtype="float32") /* ty=Tensor[(4, 6, 14), float32] */;
  %1040 = cast(meta[relay.Constant][41] /* ty=Tensor[(1188), float32] */, dtype="float32") /* ty=Tensor[(1188), float32] */;
  %1041 = reshape(%1040, newshape=[1188]) /* ty=Tensor[(1188), float32] */;
  %1042 = @func_5390(%1041) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(11, 12, 9), bool], float32, Tensor[(1188), float32], Tensor[(13, 5, 2), float32], Tensor[(11, 16, 14), float64], Tensor[(2464), float32], Tensor[(13, 5, 2), int8]) */;
  %1043 = less_equal(%1034, %1035) /* ty=Tensor[(4, 6, 14), bool] */;
  %1044 = %1038.2;
  %1045 = sin(%1039) /* ty=Tensor[(4, 6, 14), float32] */;
  %1046 = %1042.4;
  (%1043, %1044, %var_5979, %1045, %1046, meta[relay.Constant][41] /* ty=Tensor[(1188), float32] */)
}

def @func_14365() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float64]) {
  %1047 = @func_8129() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) */;
  %1048 = @func_5813() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(1, 2464), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) */;
  %1049 = @func_2745() /* ty=(Tensor[(2, 7, 12), float32], Tensor[(168), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float64]) */;
  %1050 = %1047.0;
  %1051 = %1048.0;
  %1052 = %1049.3;
  (%1050, %1051, %1052)
}

def @func_10524() -> (Tensor[(168), float32],) {
  %1053 = @func_8179() /* ty=(Tensor[(168), float32],) */;
  %1054 = %1053.0;
  (%1054,)
}

def @func_8159() -> Tensor[(2464), float32] {
  %1055 = @func_2530() /* ty=(Tensor[(2464), float32],) */;
  %1055.0
}

def @func_6624() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) {
  %1056 = @func_5908() /* ty=Tensor[(13, 5, 2), float32] */;
  %1057 = @func_4637() /* ty=Tensor[(13, 5, 2), float32] */;
  (%1056, %1057)
}

def @func_4791() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8], float32, Tensor[(14), float32]) {
  %1058 = @func_2786() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %1059 = @func_2786() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %1060 = @func_3213() /* ty=(Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) */;
  %1061 = cast(meta[relay.Constant][42] /* ty=Tensor[(14), float32] */, dtype="float32") /* ty=Tensor[(14), float32] */;
  %1062 = reshape(%1061, newshape=[14]) /* ty=Tensor[(14), float32] */;
  %1063 = @func_3816(%1062) /* ty=(float32, float32, Tensor[(2, 1232), float32], Tensor[(14), float32]) */;
  %1064 = %1058.0;
  %1065 = %1059.0;
  %1066 = %1060.0;
  %1067 = %1063.1;
  (%1064, %1065, %1066, %1067, meta[relay.Constant][42] /* ty=Tensor[(14), float32] */)
}

def @func_2653(%var_2632: Tensor[(1232, 2), float32]) -> (Tensor[(11, 16, 14), float32], Tensor[(1232, 2), float32], Tensor[(13, 5, 2), float64]) {
  %1068 = cast(%var_2632, dtype="float32") /* ty=Tensor[(1232, 2), float32] */;
  %1069 = reshape(%1068, newshape=[11, 16, 14]) /* ty=Tensor[(11, 16, 14), float32] */;
  %1070 = @func_66(%1069) /* ty=(Tensor[(11, 16, 14), float32],) */;
  %1071 = @func_1738() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %1072 = %1071.0;
  %1073 = cast(%1072, dtype="float64") /* ty=Tensor[(13, 5, 2), float64] */;
  %1074 = %1070.0;
  %1075 = exp(%1073) /* ty=Tensor[(13, 5, 2), float64] */;
  (%1074, %var_2632, %1075)
}

def @func_5879(%var_5867: Tensor[(8, 308), float32], %var_5868: float32) -> (Tensor[(13, 5, 2), uint8], Tensor[(2464), bool], Tensor[(8, 308), float32], float32, Tensor[(14), float32], Tensor[(13, 5, 2), float32]) {
  %1076 = @func_5442() /* ty=(Tensor[(13, 5, 2), uint8],) */;
  %1077 = cast(%var_5867, dtype="float32") /* ty=Tensor[(8, 308), float32] */;
  %1078 = cast(%var_5868, dtype="float32") /* ty=float32 */;
  %1079 = cast(meta[relay.Constant][43] /* ty=Tensor[(14), float32] */, dtype="float32") /* ty=Tensor[(14), float32] */;
  %1080 = reshape(%1077, newshape=[2464]) /* ty=Tensor[(2464), float32] */;
  %1081 = reshape(%1078, newshape=[]) /* ty=float32 */;
  %1082 = reshape(%1079, newshape=[14]) /* ty=Tensor[(14), float32] */;
  %1083 = @func_2888(%1080, %1081, %1082) /* ty=(Tensor[(2464), bool], Tensor[(1, 14), float32], float32, Tensor[(14), float32]) */;
  %1084 = %1076.0;
  %1085 = %1083.0;
  %1086 = @func_1360() /* ty=Tensor[(13, 5, 2), float32] */;
  (%1084, %1085, %var_5867, %var_5868, meta[relay.Constant][43] /* ty=Tensor[(14), float32] */, %1086)
}

def @func_13301() -> (Tensor[(13, 5, 2), float64], Tensor[(13, 5, 2), float32], Tensor[(2464), float32], Tensor[(2464), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) {
  %1087 = @func_4967() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float64]) */;
  %1088 = @func_13157() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %1089 = cast(meta[relay.Constant][44] /* ty=Tensor[(2464), float32] */, dtype="float32") /* ty=Tensor[(2464), float32] */;
  %1090 = reshape(%1089, newshape=[2464]) /* ty=Tensor[(2464), float32] */;
  %1091 = @func_4500(%1090) /* ty=(Tensor[(13, 5, 2), float64], Tensor[(13, 5, 2), float64], Tensor[(2464), float32]) */;
  %1092 = @func_11515() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %1093 = %1087.1;
  %1094 = %1088.0;
  %1095 = %1091.2;
  %1096 = @func_12981() /* ty=Tensor[(13, 5, 2), float32] */;
  %1097 = %1092.0;
  (%1093, %1094, %1095, meta[relay.Constant][44] /* ty=Tensor[(2464), float32] */, %1096, %1097)
}

def @func_14099() -> (Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) {
  %1098 = @func_11071() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8]) */;
  %1099 = @func_12063() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %1100 = %1098.1;
  %1101 = %1099.0;
  (%1100, %1101)
}

def @func_10752(%var_10735: Tensor[(16, 5, 2), bool]) -> (Tensor[(16, 5, 2), float32], Tensor[(16, 5, 2), float32]) {
  %1102 = cast(%var_10735, dtype="bool") /* ty=Tensor[(16, 5, 2), bool] */;
  %1103 = shape_of(meta[relay.Constant][45] /* ty=Tensor[(16, 5, 2), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1104 = cast(meta[relay.Constant][45] /* ty=Tensor[(16, 5, 2), bool] */, dtype="bool") /* ty=Tensor[(16, 5, 2), bool] */;
  %1105 = dyn.reshape(%1102, %1103, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1106 = logical_and(%1104, %1105) /* ty=Tensor[(16, 5, 2), bool] */;
  %1107 = cast(%1106, dtype="float32") /* ty=Tensor[(16, 5, 2), float32] */;
  %1108 = cast(meta[relay.Constant][45] /* ty=Tensor[(16, 5, 2), bool] */, dtype="float32") /* ty=Tensor[(16, 5, 2), float32] */;
  %1109 = cos(%1107) /* ty=Tensor[(16, 5, 2), float32] */;
  %1110 = atan(%1108) /* ty=Tensor[(16, 5, 2), float32] */;
  (%1109, %1110)
}

def @func_1708() -> Tensor[(13, 5, 2), float32] {
  @func_1354() /* ty=Tensor[(13, 5, 2), float32] */
}

def @func_7619() -> (Tensor[(13, 5, 2), float32],) {
  %1111 = @func_1928() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float64], Tensor[(2464), float32]) */;
  %1112 = %1111.0;
  (%1112,)
}

def @func_13898(%var_13896: Tensor[(1188), float32]) -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(1188), float32]) {
  %1113 = @func_2367() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) */;
  %1114 = cast(%var_13896, dtype="float32") /* ty=Tensor[(1188), float32] */;
  %1115 = reshape(%1114, newshape=[1188]) /* ty=Tensor[(1188), float32] */;
  %1116 = @func_5639(%1115) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(1188), float32], Tensor[(2464), float64]) */;
  %1117 = %1113.1;
  %1118 = %1116.0;
  (%1117, %1118, %var_13896)
}

def @func_6386() -> Tensor[(13, 5, 2), float32] {
  %1119 = @func_1967() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %1119.0
}

def @func_7689(%var_7680: uint64, %var_7681: Tensor[(3, 4, 6), uint64]) -> Tensor[(3, 4, 6), uint64] {
  %1120 = cast(%var_7680, dtype="uint64") /* ty=uint64 */;
  %1121 = cast(%var_7681, dtype="uint64") /* ty=Tensor[(3, 4, 6), uint64] */;
  multiply(%1120, %1121) /* ty=Tensor[(3, 4, 6), uint64] */
}

def @func_6704(%var_6699: Tensor[(14, 1, 5), float32]) -> (Tensor[(14, 7, 5), float32],) {
  %1122 = cast(%var_6699, dtype="float32") /* ty=Tensor[(14, 1, 5), float32] */;
  %1123 = cast(meta[relay.Constant][46] /* ty=Tensor[(14, 7, 5), float32] */, dtype="float32") /* ty=Tensor[(14, 7, 5), float32] */;
  %1124 = floor_divide(%1122, %1123) /* ty=Tensor[(14, 7, 5), float32] */;
  (%1124,)
}

def @func_6778() -> Tensor[(13, 5, 2), float32] {
  %1125 = @func_1738() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %1125.0
}

def @func_8557(%var_8541: Tensor[(416), float32]) -> (Tensor[(13, 5, 2), float32], Tensor[(416), float64], Tensor[(13, 5, 2), float32]) {
  %1126 = @func_4791() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8], float32, Tensor[(14), float32]) */;
  %1127 = @func_3549() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8], float32, Tensor[(2464), float32], Tensor[(416), float32]) */;
  %1128 = %1127.5;
  %1129 = cast(%var_8541, dtype="float64") /* ty=Tensor[(416), float64] */;
  %1130 = shape_of(%1128, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1131 = cast(%1128, dtype="float64") /* ty=Tensor[(416), float64] */;
  %1132 = dyn.reshape(%1129, %1130, newshape=[]) /* ty=Tensor[(?), float64] */;
  %1133 = %1126.1;
  %1134 = mod(%1131, %1132) /* ty=Tensor[(416), float64] */;
  %1135 = @func_4637() /* ty=Tensor[(13, 5, 2), float32] */;
  (%1133, %1134, %1135)
}

def @func_10370() -> (Tensor[(13, 5, 2), float32],) {
  %1136 = @func_5584() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %1137 = %1136.0;
  (%1137,)
}

def @func_6240() -> (float32, Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) {
  %1138 = @func_4791() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8], float32, Tensor[(14), float32]) */;
  %1139 = @func_1967() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %1140 = @func_1738() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %1141 = %1138.3;
  %1142 = %1139.0;
  %1143 = %1140.0;
  (%1141, %1142, %1143)
}

def @func_4500(%var_4498: Tensor[(2464), float32]) -> (Tensor[(13, 5, 2), float64], Tensor[(13, 5, 2), float64], Tensor[(2464), float32]) {
  %1144 = @func_2974() /* ty=Tensor[(13, 5, 2), float32] */;
  %1145 = cast(%1144, dtype="float32") /* ty=Tensor[(13, 5, 2), float32] */;
  %1146 = cosh(%1145) /* ty=Tensor[(13, 5, 2), float32] */;
  %1147 = cast(%1146, dtype="float64") /* ty=Tensor[(13, 5, 2), float64] */;
  %1148 = cast(%var_4498, dtype="float32") /* ty=Tensor[(2464), float32] */;
  %1149 = reshape(%1148, newshape=[1232, 2]) /* ty=Tensor[(1232, 2), float32] */;
  %1150 = @func_2653(%1149) /* ty=(Tensor[(11, 16, 14), float32], Tensor[(1232, 2), float32], Tensor[(13, 5, 2), float64]) */;
  %1151 = tan(%1147) /* ty=Tensor[(13, 5, 2), float64] */;
  %1152 = %1150.2;
  (%1151, %1152, %var_4498)
}

def @func_11224() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8], Tensor[(11, 16, 14), float64]) {
  %1153 = @func_7672() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) */;
  %1154 = @func_6990() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(11, 16, 14), float64], Tensor[(2464), float32]) */;
  %1155 = @func_5927() /* ty=Tensor[(13, 5, 2), float32] */;
  %1156 = %1153.1;
  %1157 = %1154.2;
  (%1155, %1156, %1157)
}

def @func_9627() -> Tensor[(13, 5, 2), float32] {
  @func_3873() /* ty=Tensor[(13, 5, 2), float32] */
}

def @func_1354() -> Tensor[(13, 5, 2), float32] {
  %1158 = cast(meta[relay.Constant][47] /* ty=Tensor[(13, 5, 2), float32] */, dtype="float32") /* ty=Tensor[(13, 5, 2), float32] */;
  acosh(%1158) /* ty=Tensor[(13, 5, 2), float32] */
}

def @func_5171() -> (Tensor[(13, 5, 2), float32], Tensor[(168), float32], Tensor[(168), float32], Tensor[(13, 5, 2), uint8]) {
  %1159 = cast(meta[relay.Constant][48] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %1160 = reshape(%1159, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %1161 = @func_5146(%1160) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(168), float32], Tensor[(168), float32], Tensor[(13, 5, 2), float64], Tensor[(6, 14, 2), float32], Tensor[(11, 16, 14), float32], Tensor[(2464), float32]) */;
  %1162 = @func_4324() /* ty=(Tensor[(13, 5, 2), uint8],) */;
  %1163 = @func_4637() /* ty=Tensor[(13, 5, 2), float32] */;
  %1164 = %1161.3;
  %1165 = %1162.0;
  (%1163, %1164, meta[relay.Constant][48] /* ty=Tensor[(168), float32] */, %1165)
}

def @func_12063() -> (Tensor[(13, 5, 2), float32],) {
  %1166 = @func_10190() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %1167 = %1166.0;
  (%1167,)
}

def @func_3599(%var_3592: Tensor[(13, 5, 2), float32]) -> (Tensor[(13, 5, 2), float32],) {
  %1168 = @func_1989() /* ty=Tensor[(13, 5, 2), float32] */;
  %1169 = cast(%var_3592, dtype="float32") /* ty=Tensor[(13, 5, 2), float32] */;
  %1170 = shape_of(%1168, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1171 = cast(%1168, dtype="float32") /* ty=Tensor[(13, 5, 2), float32] */;
  %1172 = dyn.reshape(%1169, %1170, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1173 = mod(%1171, %1172) /* ty=Tensor[(13, 5, 2), float32] */;
  (%1173,)
}

def @func_8060() -> (Tensor[(13, 5, 2), uint8],) {
  %1174 = @func_1375() /* ty=(Tensor[(13, 5, 2), uint8],) */;
  %1175 = %1174.0;
  (%1175,)
}

def @func_13940() -> (Tensor[(13, 5, 2), float32],) {
  %1176 = @func_13613() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %1177 = %1176.0;
  (%1177,)
}

def @func_2569() -> Tensor[(13, 5, 2), int8] {
  @func_1762() /* ty=Tensor[(13, 5, 2), int8] */
}

def @func_6286() -> (Tensor[(13, 5, 2), int8], Tensor[(13, 5, 2), float32]) {
  %1178 = @func_2569() /* ty=Tensor[(13, 5, 2), int8] */;
  %1179 = @func_5596() /* ty=Tensor[(13, 5, 2), float32] */;
  (%1178, %1179)
}

def @func_14318() -> (Tensor[(13, 5, 2), float32],) {
  %1180 = @func_6208() /* ty=(Tensor[(13, 5, 2), float32], float32) */;
  %1181 = %1180.0;
  (%1181,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_8179() -> (Tensor[(168), float32],) {
  %0 = @func_5171() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(168), float32], Tensor[(168), float32], Tensor[(13, 5, 2), uint8]) */;
  %1 = %0.2;
  (%1,)
}

def @func_1710() -> Tensor[(13, 5, 2), float32] {
  @func_1708() /* ty=Tensor[(13, 5, 2), float32] */
}

def @func_2745() -> (Tensor[(2, 7, 12), float32], Tensor[(168), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float64]) {
  %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %3 = reshape(%2, newshape=[2, 7, 12]) /* ty=Tensor[(2, 7, 12), float32] */;
  %4 = @func_1967() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %5 = @func_1708() /* ty=Tensor[(13, 5, 2), float32] */;
  %6 = cast(%5, dtype="float64") /* ty=Tensor[(13, 5, 2), float64] */;
  %7 = @func_2178(%3) /* ty=Tensor[(2, 7, 12), float32] */;
  %8 = %4.0;
  %9 = log2(%6) /* ty=Tensor[(13, 5, 2), float64] */;
  (%7, meta[relay.Constant][0] /* ty=Tensor[(168), float32] */, %8, %9)
}

def @func_7516() -> Tensor[(13, 5, 2), float32] {
  @func_7514() /* ty=Tensor[(13, 5, 2), float32] */
}

def @func_13614() -> (Tensor[(13, 5, 2), float32],) {
  %11 = fn () -> (Tensor[(13, 5, 2), float32],) {
    %10 = @func_1989() /* ty=Tensor[(13, 5, 2), float32] */;
    (%10,)
  };
  %11() /* ty=(Tensor[(13, 5, 2), float32],) */
}

def @func_6861() -> (Tensor[(13, 5, 2), float32], Tensor[(3, 14, 15), float64], Tensor[(630), int32], Tensor[(13, 5, 2), float32]) {
  @func_6859() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(3, 14, 15), float64], Tensor[(630), int32], Tensor[(13, 5, 2), float32]) */
}

def @func_3739(%var_3704: Tensor[(2464), float32]) -> (Tensor[(13, 5, 2), float32], Tensor[(416), float32], Tensor[(2464), float32]) {
  %12 = @func_2367() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) */;
  %13 = cast(%var_3704, dtype="float32") /* ty=Tensor[(2464), float32] */;
  %14 = reshape(%13, newshape=[2464]) /* ty=Tensor[(2464), float32] */;
  %15 = @func_1500(%14) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(6, 14, 2), float32], Tensor[(42, 4), float32], Tensor[(13, 4, 8), int8], Tensor[(2464), float32], Tensor[(416), float32], Tensor[(13, 5, 2), float32]) */;
  %16 = %12.0;
  %17 = %15.6;
  (%16, %17, %var_3704)
}

def @func_9247() -> (Tensor[(13, 5, 2), int8], Tensor[(13, 5, 2), float32]) {
  %18 = @func_4365() /* ty=(Tensor[(13, 5, 2), int8],) */;
  %19 = %18.0;
  %20 = @func_8504() /* ty=Tensor[(13, 5, 2), float32] */;
  (%19, %20)
}

def @func_3200(%var_3199: Tensor[(4, 616), float32]) -> (Tensor[(13, 5, 2), float32], Tensor[(11, 16, 14), float32], Tensor[(4, 616), float32]) {
  %26 = fn (%var_3196: Tensor[(4, 616), float32]) -> (Tensor[(13, 5, 2), float32], Tensor[(11, 16, 14), float32], Tensor[(4, 616), float32]) {
    %21 = cast(%var_3196, dtype="float32") /* ty=Tensor[(4, 616), float32] */;
    %22 = reshape(%21, newshape=[2464]) /* ty=Tensor[(2464), float32] */;
    %23 = @func_2605(%22) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(11, 16, 14), float32], Tensor[(2464), float32]) */;
    %24 = @func_1989() /* ty=Tensor[(13, 5, 2), float32] */;
    %25 = %23.1;
    (%24, %25, %var_3196)
  };
  %26(%var_3199) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(11, 16, 14), float32], Tensor[(4, 616), float32]) */
}

def @func_1377() -> (Tensor[(13, 5, 2), uint8],) {
  @func_1375() /* ty=(Tensor[(13, 5, 2), uint8],) */
}

def @func_13022(%var_13008: Tensor[(10, 13, 3), float32]) -> (Tensor[(10, 13, 3), float32], Tensor[(10, 13, 3), float32]) {
  %27 = cast(meta[relay.Constant][1] /* ty=Tensor[(10, 13, 3), float32] */, dtype="float32") /* ty=Tensor[(10, 13, 3), float32] */;
  %28 = shape_of(%var_13008, dtype="int32") /* ty=Tensor[(3), int32] */;
  %29 = cast(%var_13008, dtype="float32") /* ty=Tensor[(10, 13, 3), float32] */;
  %30 = dyn.reshape(%27, %28, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %31 = cast(meta[relay.Constant][1] /* ty=Tensor[(10, 13, 3), float32] */, dtype="float32") /* ty=Tensor[(10, 13, 3), float32] */;
  %32 = subtract(%29, %30) /* ty=Tensor[(10, 13, 3), float32] */;
  %33 = asinh(%31) /* ty=Tensor[(10, 13, 3), float32] */;
  (%32, %33)
}

def @func_10035() -> (Tensor[(13, 5, 2), int8], Tensor[(416), float32]) {
  @func_10033() /* ty=(Tensor[(13, 5, 2), int8], Tensor[(416), float32]) */
}

def @func_7799(%var_7783: Tensor[(300, 2), uint8]) -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(12, 10, 5), uint8], Tensor[(300, 2), uint8]) {
  %34 = @func_1967() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %35 = @func_6158() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) */;
  %36 = @func_3213() /* ty=(Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) */;
  %37 = @func_7672() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) */;
  %38 = cast(%var_7783, dtype="uint8") /* ty=Tensor[(300, 2), uint8] */;
  %39 = reshape(%38, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), uint8] */;
  %40 = %34.0;
  %41 = %35.1;
  %42 = %36.1;
  %43 = %37.0;
  %44 = @func_3009(%39) /* ty=Tensor[(12, 10, 5), uint8] */;
  (%40, %41, %42, %43, %44, %var_7783)
}

def @func_9386() -> (Tensor[(13, 5, 2), float32],) {
  %45 = @func_6240() /* ty=(float32, Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) */;
  %46 = %45.2;
  (%46,)
}

def @func_9092() -> (Tensor[(13, 5, 2), uint8],) {
  %49 = fn () -> (Tensor[(13, 5, 2), uint8],) {
    %47 = @func_5442() /* ty=(Tensor[(13, 5, 2), uint8],) */;
    %48 = %47.0;
    (%48,)
  };
  %49() /* ty=(Tensor[(13, 5, 2), uint8],) */
}

def @func_2463(%var_2461: Tensor[(13, 5, 2), float32], %var_2462: Tensor[(168), float32]) -> (Tensor[(13, 5, 2), int64], Tensor[(14), float32], Tensor[(6, 14, 2), float32], Tensor[(168), float32], Tensor[(2, 7, 12), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), bool], Tensor[(13, 5, 2), float32]) {
  @func_2459(%var_2461, %var_2462) /* ty=(Tensor[(13, 5, 2), int64], Tensor[(14), float32], Tensor[(6, 14, 2), float32], Tensor[(168), float32], Tensor[(2, 7, 12), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), bool], Tensor[(13, 5, 2), float32]) */
}

def @func_4865() -> (Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) {
  %50 = @func_2578() /* ty=Tensor[(13, 5, 2), uint8] */;
  %51 = @func_3624() /* ty=Tensor[(13, 5, 2), float32] */;
  (%50, %51)
}

def @func_6519() -> (Tensor[(13, 5, 2), uint8],) {
  @func_6517() /* ty=(Tensor[(13, 5, 2), uint8],) */
}

def @func_1929() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float64], Tensor[(2464), float32]) {
  %59 = fn () -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float64], Tensor[(2464), float32]) {
    %52 = @func_1354() /* ty=Tensor[(13, 5, 2), float32] */;
    %53 = cast(%52, dtype="float32") /* ty=Tensor[(13, 5, 2), float32] */;
    %54 = cast(meta[relay.Constant][2] /* ty=Tensor[(2464), float32] */, dtype="float32") /* ty=Tensor[(2464), float32] */;
    %55 = reshape(%53, newshape=[13, 5, 2]) /* ty=Tensor[(13, 5, 2), float32] */;
    %56 = reshape(%54, newshape=[2464]) /* ty=Tensor[(2464), float32] */;
    %57 = @func_1645(%55, %56) /* ty=(Tensor[(13, 5, 2), float64], Tensor[(11, 16, 14), float64]) */;
    %58 = %57.0;
    (%52, %58, meta[relay.Constant][2] /* ty=Tensor[(2464), float32] */)
  };
  %59() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float64], Tensor[(2464), float32]) */
}

def @func_13061() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) {
  %60 = @func_5421() /* ty=Tensor[(13, 5, 2), float32] */;
  %61 = @func_3624() /* ty=Tensor[(13, 5, 2), float32] */;
  (%60, %61)
}

def @func_13244() -> Tensor[(13, 5, 2), float32] {
  %62 = fn () -> Tensor[(13, 5, 2), float32] {
    @func_7514() /* ty=Tensor[(13, 5, 2), float32] */
  };
  %62() /* ty=Tensor[(13, 5, 2), float32] */
}

def @func_6754(%var_6752: Tensor[(15, 8, 12), int64], %var_6753: Tensor[(15, 8, 12), int64]) -> Tensor[(15, 8, 12), int64] {
  %67 = fn (%var_6745: Tensor[(15, 8, 12), int64], %var_6746: Tensor[(15, 8, 12), int64]) -> Tensor[(15, 8, 12), int64] {
    %63 = cast(%var_6746, dtype="int64") /* ty=Tensor[(15, 8, 12), int64] */;
    %64 = shape_of(%var_6745, dtype="int32") /* ty=Tensor[(3), int32] */;
    %65 = cast(%var_6745, dtype="int64") /* ty=Tensor[(15, 8, 12), int64] */;
    %66 = dyn.reshape(%63, %64, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    bitwise_and(%65, %66) /* ty=Tensor[(15, 8, 12), int64] */
  };
  %67(%var_6752, %var_6753) /* ty=Tensor[(15, 8, 12), int64] */
}

def @func_1820(%var_1818: Tensor[(14), float32]) -> (Tensor[(1, 14), float32], Tensor[(14), float32], Tensor[(13, 5, 2), int64], Tensor[(13, 5, 2), int8]) {
  @func_1817(%var_1818) /* ty=(Tensor[(1, 14), float32], Tensor[(14), float32], Tensor[(13, 5, 2), int64], Tensor[(13, 5, 2), int8]) */
}

def @func_4133(%var_4132: Tensor[(13, 5, 2), int8]) -> (Tensor[(13, 5, 2), int32], Tensor[(2464), bool], Tensor[(168), float32], Tensor[(1, 14), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float64], Tensor[(2464), float32]) {
  %87 = fn (%var_4086: Tensor[(13, 5, 2), int8]) -> (Tensor[(13, 5, 2), int32], Tensor[(2464), bool], Tensor[(168), float32], Tensor[(1, 14), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float64], Tensor[(2464), float32]) {
    %68 = @func_2569() /* ty=Tensor[(13, 5, 2), int8] */;
    %69 = cast(%var_4086, dtype="int32") /* ty=Tensor[(13, 5, 2), int32] */;
    %70 = shape_of(%68, dtype="int32") /* ty=Tensor[(3), int32] */;
    %71 = cast(%68, dtype="int32") /* ty=Tensor[(13, 5, 2), int32] */;
    %72 = dyn.reshape(%69, %70, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %73 = cast(meta[relay.Constant][3] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
    %74 = cast(meta[relay.Constant][4] /* ty=Tensor[(2464), float32] */, dtype="float32") /* ty=Tensor[(2464), float32] */;
    %75 = reshape(%73, newshape=[168]) /* ty=Tensor[(168), float32] */;
    %76 = reshape(%74, newshape=[2464]) /* ty=Tensor[(2464), float32] */;
    %77 = @func_3296(%75, %76) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(2, 7, 12), float32], Tensor[(168), float32], Tensor[(13, 5, 2), float64], Tensor[(6, 14, 2), float32], Tensor[(11, 16, 14), float32], Tensor[(2464), bool]) */;
    %78 = @func_3154() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(1, 14), float32], float32, Tensor[(14, 1), float32], Tensor[(13, 5, 2), float32]) */;
    %79 = @func_1928() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float64], Tensor[(2464), float32]) */;
    %80 = cast(meta[relay.Constant][4] /* ty=Tensor[(2464), float32] */, dtype="float32") /* ty=Tensor[(2464), float32] */;
    %81 = right_shift(%71, %72) /* ty=Tensor[(13, 5, 2), int32] */;
    %82 = %77.6;
    %83 = %78.1;
    %84 = @func_2974() /* ty=Tensor[(13, 5, 2), float32] */;
    %85 = %79.1;
    %86 = asinh(%80) /* ty=Tensor[(2464), float32] */;
    (%81, %82, meta[relay.Constant][3] /* ty=Tensor[(168), float32] */, %83, %84, %85, %86)
  };
  %87(%var_4132) /* ty=(Tensor[(13, 5, 2), int32], Tensor[(2464), bool], Tensor[(168), float32], Tensor[(1, 14), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float64], Tensor[(2464), float32]) */
}

def @func_5714() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) {
  @func_5712() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) */
}

def @func_7587() -> Tensor[(13, 5, 2), float32] {
  @func_7585() /* ty=Tensor[(13, 5, 2), float32] */
}

def @func_9798() -> (Tensor[(13, 5, 2), float32], Tensor[(168), float32]) {
  @func_9796() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(168), float32]) */
}

def @func_12291() -> (Tensor[(13, 5, 2), int8], Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) {
  @func_12289() /* ty=(Tensor[(13, 5, 2), int8], Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) */
}

def @func_7672() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) {
  %88 = @func_3127() /* ty=(Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) */;
  %89 = @func_6158() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) */;
  %90 = %88.1;
  %91 = %89.1;
  (%90, %91)
}

def @func_9796() -> (Tensor[(13, 5, 2), float32], Tensor[(168), float32]) {
  %92 = @func_8144() /* ty=(Tensor[(168), float32],) */;
  %93 = @func_5421() /* ty=Tensor[(13, 5, 2), float32] */;
  %94 = %92.0;
  (%93, %94)
}

def @func_11872() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) {
  %95 = @func_7619() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %96 = @func_6240() /* ty=(float32, Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) */;
  %97 = @func_2786() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %98 = %95.0;
  %99 = %96.1;
  %100 = %97.0;
  (%98, %99, %100)
}

def @func_5584() -> (Tensor[(13, 5, 2), float32],) {
  %101 = @func_1967() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %102 = %101.0;
  (%102,)
}

def @func_6208() -> (Tensor[(13, 5, 2), float32], float32) {
  %103 = @func_3154() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(1, 14), float32], float32, Tensor[(14, 1), float32], Tensor[(13, 5, 2), float32]) */;
  %104 = @func_5927() /* ty=Tensor[(13, 5, 2), float32] */;
  %105 = %103.2;
  (%104, %105)
}

def @func_6517() -> (Tensor[(13, 5, 2), uint8],) {
  %106 = @func_4865() /* ty=(Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) */;
  %107 = %106.0;
  (%107,)
}

def @func_6471() -> (Tensor[(13, 5, 2), float32],) {
  %110 = fn () -> (Tensor[(13, 5, 2), float32],) {
    %108 = @func_6240() /* ty=(float32, Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) */;
    %109 = %108.2;
    (%109,)
  };
  %110() /* ty=(Tensor[(13, 5, 2), float32],) */
}

def @func_6504() -> (Tensor[(168), float32],) {
  %113 = fn () -> (Tensor[(168), float32],) {
    %111 = @func_2745() /* ty=(Tensor[(2, 7, 12), float32], Tensor[(168), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float64]) */;
    %112 = %111.1;
    (%112,)
  };
  %113() /* ty=(Tensor[(168), float32],) */
}

def @func_7830(%var_7827: Tensor[(1, 1, 13), float64]) -> Tensor[(1, 1, 13), float64] {
  %114 = cast(%var_7827, dtype="float64") /* ty=Tensor[(1, 1, 13), float64] */;
  sin(%114) /* ty=Tensor[(1, 1, 13), float64] */
}

def @func_10611(%var_10609: Tensor[(12, 4, 8), float32], %var_10610: Tensor[(12, 4, 8), float32]) -> (Tensor[(12, 4, 8), float32],) {
  %120 = fn (%var_10594: Tensor[(12, 4, 8), float32], %var_10595: Tensor[(12, 4, 8), float32]) -> (Tensor[(12, 4, 8), float32],) {
    %115 = cast(%var_10595, dtype="float32") /* ty=Tensor[(12, 4, 8), float32] */;
    %116 = shape_of(%var_10594, dtype="int32") /* ty=Tensor[(3), int32] */;
    %117 = cast(%var_10594, dtype="float32") /* ty=Tensor[(12, 4, 8), float32] */;
    %118 = dyn.reshape(%115, %116, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %119 = floor_divide(%117, %118) /* ty=Tensor[(12, 4, 8), float32] */;
    (%119,)
  };
  %120(%var_10609, %var_10610) /* ty=(Tensor[(12, 4, 8), float32],) */
}

def @func_13918() -> (Tensor[(13, 5, 2), int8], Tensor[(13, 5, 2), uint8]) {
  @func_13916() /* ty=(Tensor[(13, 5, 2), int8], Tensor[(13, 5, 2), uint8]) */
}

def @func_14366() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float64]) {
  %127 = fn () -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float64]) {
    %121 = @func_8129() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) */;
    %122 = @func_5813() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(1, 2464), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) */;
    %123 = @func_2745() /* ty=(Tensor[(2, 7, 12), float32], Tensor[(168), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float64]) */;
    %124 = %121.0;
    %125 = %122.0;
    %126 = %123.3;
    (%124, %125, %126)
  };
  %127() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float64]) */
}

def @func_5909() -> Tensor[(13, 5, 2), float32] {
  %129 = fn () -> Tensor[(13, 5, 2), float32] {
    %128 = @func_1690() /* ty=(Tensor[(13, 5, 2), float32],) */;
    %128.0
  };
  %129() /* ty=Tensor[(13, 5, 2), float32] */
}

def @func_5813() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(1, 2464), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) {
  %130 = @func_2367() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) */;
  %131 = cast(meta[relay.Constant][5] /* ty=Tensor[(1, 2464), float32] */, dtype="float32") /* ty=Tensor[(1, 2464), float32] */;
  %132 = reshape(%131, newshape=[2464]) /* ty=Tensor[(2464), float32] */;
  %133 = @func_3739(%132) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(416), float32], Tensor[(2464), float32]) */;
  %134 = @func_1690() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %135 = %130.0;
  %136 = %133.0;
  %137 = @func_3624() /* ty=Tensor[(13, 5, 2), float32] */;
  %138 = @func_2578() /* ty=Tensor[(13, 5, 2), uint8] */;
  %139 = %134.0;
  (%135, %136, meta[relay.Constant][5] /* ty=Tensor[(1, 2464), float32] */, %137, %138, %139)
}

def @func_7060() -> (Tensor[(2464), float32],) {
  %141 = fn () -> (Tensor[(2464), float32],) {
    %140 = @func_2713() /* ty=Tensor[(2464), float32] */;
    (%140,)
  };
  %141() /* ty=(Tensor[(2464), float32],) */
}

def @func_13901(%var_13899: Tensor[(1188), float32]) -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(1188), float32]) {
  @func_13898(%var_13899) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(1188), float32]) */
}

def @func_8559(%var_8558: Tensor[(416), float32]) -> (Tensor[(13, 5, 2), float32], Tensor[(416), float64], Tensor[(13, 5, 2), float32]) {
  %152 = fn (%var_8541: Tensor[(416), float32]) -> (Tensor[(13, 5, 2), float32], Tensor[(416), float64], Tensor[(13, 5, 2), float32]) {
    %142 = @func_4791() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8], float32, Tensor[(14), float32]) */;
    %143 = @func_3549() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8], float32, Tensor[(2464), float32], Tensor[(416), float32]) */;
    %144 = %143.5;
    %145 = cast(%var_8541, dtype="float64") /* ty=Tensor[(416), float64] */;
    %146 = shape_of(%144, dtype="int32") /* ty=Tensor[(1), int32] */;
    %147 = cast(%144, dtype="float64") /* ty=Tensor[(416), float64] */;
    %148 = dyn.reshape(%145, %146, newshape=[]) /* ty=Tensor[(?), float64] */;
    %149 = %142.1;
    %150 = mod(%147, %148) /* ty=Tensor[(416), float64] */;
    %151 = @func_4637() /* ty=Tensor[(13, 5, 2), float32] */;
    (%149, %150, %151)
  };
  %152(%var_8558) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(416), float64], Tensor[(13, 5, 2), float32]) */
}

def @func_3551() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8], float32, Tensor[(2464), float32], Tensor[(416), float32]) {
  @func_3549() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8], float32, Tensor[(2464), float32], Tensor[(416), float32]) */
}

def @func_2605(%var_2586: Tensor[(2464), float32]) -> (Tensor[(13, 5, 2), float32], Tensor[(11, 16, 14), float32], Tensor[(2464), float32]) {
  %153 = cast(%var_2586, dtype="float32") /* ty=Tensor[(2464), float32] */;
  %154 = reshape(%153, newshape=[11, 16, 14]) /* ty=Tensor[(11, 16, 14), float32] */;
  %155 = @func_66(%154) /* ty=(Tensor[(11, 16, 14), float32],) */;
  %156 = cast(%var_2586, dtype="float32") /* ty=Tensor[(2464), float32] */;
  %157 = @func_1354() /* ty=Tensor[(13, 5, 2), float32] */;
  %158 = %155.0;
  %159 = acos(%156) /* ty=Tensor[(2464), float32] */;
  (%157, %158, %159)
}

def @func_8901() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) {
  %163 = fn () -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) {
    %160 = @func_2763() /* ty=(Tensor[(13, 5, 2), float32],) */;
    %161 = %160.0;
    %162 = @func_1360() /* ty=Tensor[(13, 5, 2), float32] */;
    (%161, %162)
  };
  %163() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) */
}

def @func_3128() -> (Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) {
  %169 = fn () -> (Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) {
    %164 = @func_1375() /* ty=(Tensor[(13, 5, 2), uint8],) */;
    %165 = @func_1690() /* ty=(Tensor[(13, 5, 2), float32],) */;
    %166 = %164.0;
    %167 = %165.0;
    %168 = @func_2569() /* ty=Tensor[(13, 5, 2), int8] */;
    (%166, %167, %168)
  };
  %169() /* ty=(Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) */
}

def @func_6387() -> Tensor[(13, 5, 2), float32] {
  %171 = fn () -> Tensor[(13, 5, 2), float32] {
    %170 = @func_1967() /* ty=(Tensor[(13, 5, 2), float32],) */;
    %170.0
  };
  %171() /* ty=Tensor[(13, 5, 2), float32] */
}

def @func_11978() -> Tensor[(2464), float32] {
  @func_11976() /* ty=Tensor[(2464), float32] */
}

def @main(%var_14590: Tensor[(6, 3, 3), bool]) -> (Tensor[(6, 3, 3), bool],) {
  %172 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %173 = cast(%var_14590, dtype="bool") /* ty=Tensor[(6, 3, 3), bool] */;
  %174 = logical_or(%172, %173) /* ty=Tensor[(6, 3, 3), bool] */;
  (%174,)
}

def @func_12936() -> (Tensor[(13, 5, 2), float32],) {
  @func_12934() /* ty=(Tensor[(13, 5, 2), float32],) */
}

def @func_4235(%var_4191: Tensor[(3, 14, 15), int32], %var_4192: Tensor[(3, 14, 15), int32]) -> (Tensor[(3, 14, 15), bool], Tensor[(12, 10, 5), uint8], Tensor[(600), uint8], Tensor[(3, 14, 15), float64]) {
  %175 = cast(%var_4192, dtype="bool") /* ty=Tensor[(3, 14, 15), bool] */;
  %176 = shape_of(%var_4191, dtype="int32") /* ty=Tensor[(3), int32] */;
  %177 = cast(%var_4191, dtype="bool") /* ty=Tensor[(3, 14, 15), bool] */;
  %178 = dyn.reshape(%175, %176, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %179 = cast(meta[relay.Constant][6] /* ty=Tensor[(600), uint8] */, dtype="uint8") /* ty=Tensor[(600), uint8] */;
  %180 = reshape(%179, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), uint8] */;
  %181 = cast(%var_4192, dtype="float64") /* ty=Tensor[(3, 14, 15), float64] */;
  %182 = greater_equal(%177, %178) /* ty=Tensor[(3, 14, 15), bool] */;
  %183 = @func_3009(%180) /* ty=Tensor[(12, 10, 5), uint8] */;
  %184 = asin(%181) /* ty=Tensor[(3, 14, 15), float64] */;
  (%182, %183, meta[relay.Constant][6] /* ty=Tensor[(600), uint8] */, %184)
}

def @func_8159() -> Tensor[(2464), float32] {
  %185 = @func_2530() /* ty=(Tensor[(2464), float32],) */;
  %185.0
}

def @func_2042(%var_2040: Tensor[(13, 10, 15), float32], %var_2041: Tensor[(14), float32]) -> (Tensor[(13, 10, 15), float32], Tensor[(13, 5, 2), int64], Tensor[(14), float32]) {
  @func_2038(%var_2040, %var_2041) /* ty=(Tensor[(13, 10, 15), float32], Tensor[(13, 5, 2), int64], Tensor[(14), float32]) */
}

def @func_3873() -> Tensor[(13, 5, 2), float32] {
  @func_2974() /* ty=Tensor[(13, 5, 2), float32] */
}

def @func_9566() -> Tensor[(13), float64] {
  %187 = fn () -> Tensor[(13), float64] {
    %186 = @func_8964() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(1, 1, 13), float64], Tensor[(13), float64], Tensor[(13, 5, 2), int8]) */;
    %186.2
  };
  %187() /* ty=Tensor[(13), float64] */
}

def @func_13301() -> (Tensor[(13, 5, 2), float64], Tensor[(13, 5, 2), float32], Tensor[(2464), float32], Tensor[(2464), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) {
  %188 = @func_4967() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float64]) */;
  %189 = @func_13157() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %190 = cast(meta[relay.Constant][7] /* ty=Tensor[(2464), float32] */, dtype="float32") /* ty=Tensor[(2464), float32] */;
  %191 = reshape(%190, newshape=[2464]) /* ty=Tensor[(2464), float32] */;
  %192 = @func_4500(%191) /* ty=(Tensor[(13, 5, 2), float64], Tensor[(13, 5, 2), float64], Tensor[(2464), float32]) */;
  %193 = @func_11515() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %194 = %188.1;
  %195 = %189.0;
  %196 = %192.2;
  %197 = @func_12981() /* ty=Tensor[(13, 5, 2), float32] */;
  %198 = %193.0;
  (%194, %195, %196, meta[relay.Constant][7] /* ty=Tensor[(2464), float32] */, %197, %198)
}

def @func_9212() -> Tensor[(13, 5, 2), float32] {
  %199 = fn () -> Tensor[(13, 5, 2), float32] {
    @func_1989() /* ty=Tensor[(13, 5, 2), float32] */
  };
  %199() /* ty=Tensor[(13, 5, 2), float32] */
}

def @func_2892(%var_2889: Tensor[(2464), float32], %var_2890: float32, %var_2891: Tensor[(14), float32]) -> (Tensor[(2464), bool], Tensor[(1, 14), float32], float32, Tensor[(14), float32]) {
  %212 = fn (%var_2864: Tensor[(2464), float32], %var_2874: float32, %var_2875: Tensor[(14), float32]) -> (Tensor[(2464), bool], Tensor[(1, 14), float32], float32, Tensor[(14), float32]) {
    %200 = @func_2713() /* ty=Tensor[(2464), float32] */;
    %201 = cast(%var_2864, dtype="bool") /* ty=Tensor[(2464), bool] */;
    %202 = shape_of(%200, dtype="int32") /* ty=Tensor[(1), int32] */;
    %203 = cast(%200, dtype="bool") /* ty=Tensor[(2464), bool] */;
    %204 = dyn.reshape(%201, %202, newshape=[]) /* ty=Tensor[(?), bool] */;
    %205 = cast(%var_2874, dtype="float32") /* ty=float32 */;
    %206 = cast(%var_2875, dtype="float32") /* ty=Tensor[(14), float32] */;
    %207 = reshape(%205, newshape=[]) /* ty=float32 */;
    %208 = reshape(%206, newshape=[1, 14]) /* ty=Tensor[(1, 14), float32] */;
    %209 = @func_1174(%207, %208) /* ty=(Tensor[(1, 14), float32],) */;
    %210 = greater(%203, %204) /* ty=Tensor[(2464), bool] */;
    %211 = %209.0;
    (%210, %211, %var_2874, %var_2875)
  };
  %212(%var_2889, %var_2890, %var_2891) /* ty=(Tensor[(2464), bool], Tensor[(1, 14), float32], float32, Tensor[(14), float32]) */
}

def @func_4435() -> (Tensor[(13, 5, 2), float32],) {
  @func_4433() /* ty=(Tensor[(13, 5, 2), float32],) */
}

def @func_14477(%var_14465: Tensor[(600), uint8]) -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8], Tensor[(600), uint8]) {
  %213 = cast(%var_14465, dtype="uint8") /* ty=Tensor[(600), uint8] */;
  %214 = reshape(%213, newshape=[600]) /* ty=Tensor[(600), uint8] */;
  %215 = @func_10909(%214) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8], Tensor[(12, 10, 5), uint8], Tensor[(600), uint8], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(168), float32], Tensor[(13, 5, 2), float32]) */;
  %216 = @func_5908() /* ty=Tensor[(13, 5, 2), float32] */;
  %217 = %215.1;
  (%216, %217, %var_14465)
}

def @func_3816(%var_3811: Tensor[(14), float32]) -> (float32, float32, Tensor[(2, 1232), float32], Tensor[(14), float32]) {
  %218 = @func_3549() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8], float32, Tensor[(2464), float32], Tensor[(416), float32]) */;
  %219 = cast(meta[relay.Constant][8] /* ty=Tensor[(2, 1232), float32] */, dtype="float32") /* ty=Tensor[(2, 1232), float32] */;
  %220 = %218.3;
  %221 = cast(%220, dtype="float32") /* ty=float32 */;
  %222 = cast(%var_3811, dtype="float32") /* ty=Tensor[(14), float32] */;
  %223 = reshape(%219, newshape=[2464]) /* ty=Tensor[(2464), float32] */;
  %224 = reshape(%221, newshape=[]) /* ty=float32 */;
  %225 = reshape(%222, newshape=[14]) /* ty=Tensor[(14), float32] */;
  %226 = @func_2888(%223, %224, %225) /* ty=(Tensor[(2464), bool], Tensor[(1, 14), float32], float32, Tensor[(14), float32]) */;
  %227 = %226.2;
  (%220, %227, meta[relay.Constant][8] /* ty=Tensor[(2, 1232), float32] */, %var_3811)
}

def @func_6210() -> (Tensor[(13, 5, 2), float32], float32) {
  @func_6208() /* ty=(Tensor[(13, 5, 2), float32], float32) */
}

def @func_2038(%var_2030: Tensor[(13, 10, 15), float32], %var_2034: Tensor[(14), float32]) -> (Tensor[(13, 10, 15), float32], Tensor[(13, 5, 2), int64], Tensor[(14), float32]) {
  %228 = cast(%var_2030, dtype="float32") /* ty=Tensor[(13, 10, 15), float32] */;
  %229 = cast(%var_2034, dtype="float32") /* ty=Tensor[(14), float32] */;
  %230 = reshape(%229, newshape=[14]) /* ty=Tensor[(14), float32] */;
  %231 = @func_1817(%230) /* ty=(Tensor[(1, 14), float32], Tensor[(14), float32], Tensor[(13, 5, 2), int64], Tensor[(13, 5, 2), int8]) */;
  %232 = atanh(%228) /* ty=Tensor[(13, 10, 15), float32] */;
  %233 = %231.2;
  (%232, %233, %var_2034)
}

def @func_4616(%var_4614: Tensor[(1200), bool]) -> (Tensor[(13, 5, 2), float32], Tensor[(15, 5, 16), bool], Tensor[(1200), bool]) {
  @func_4613(%var_4614) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(15, 5, 16), bool], Tensor[(1200), bool]) */
}

def @func_13965() -> (Tensor[(13, 5, 2), float32],) {
  @func_13963() /* ty=(Tensor[(13, 5, 2), float32],) */
}

def @func_4433() -> (Tensor[(13, 5, 2), float32],) {
  %234 = @func_2786() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %235 = %234.0;
  (%235,)
}

def @func_13898(%var_13896: Tensor[(1188), float32]) -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(1188), float32]) {
  %236 = @func_2367() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) */;
  %237 = cast(%var_13896, dtype="float32") /* ty=Tensor[(1188), float32] */;
  %238 = reshape(%237, newshape=[1188]) /* ty=Tensor[(1188), float32] */;
  %239 = @func_5639(%238) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(1188), float32], Tensor[(2464), float64]) */;
  %240 = %236.1;
  %241 = %239.0;
  (%240, %241, %var_13896)
}

def @func_12649(%var_12648: Tensor[(1, 8, 5), float64]) -> (Tensor[(13, 5, 2), float32], Tensor[(?, 8, 5), bool]) {
  %260 = fn (%var_12591: Tensor[(1, 8, 5), float64]) -> (Tensor[(13, 5, 2), float32], Tensor[(?, 8, 5), bool]) {
    %242 = cast(%var_12591, dtype="float64") /* ty=Tensor[(1, 8, 5), float64] */;
    %243 = log2(%242) /* ty=Tensor[(1, 8, 5), float64] */;
    %244 = cast(%243, dtype="uint16") /* ty=Tensor[(1, 8, 5), uint16] */;
    %245 = shape_of(%var_12591, dtype="int32") /* ty=Tensor[(3), int32] */;
    %246 = cast(%var_12591, dtype="uint16") /* ty=Tensor[(1, 8, 5), uint16] */;
    %247 = dyn.reshape(%244, %245, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %248 = minimum(%246, %247) /* ty=Tensor[(?, 8, 5), uint16] */;
    %249 = cast(%243, dtype="float64") /* ty=Tensor[(1, 8, 5), float64] */;
    %250 = shape_of(%248, dtype="int32") /* ty=Tensor[(3), int32] */;
    %251 = cast(%248, dtype="float64") /* ty=Tensor[(?, 8, 5), float64] */;
    %252 = dyn.reshape(%249, %250, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %253 = power(%251, %252) /* ty=Tensor[(?, 8, 5), float64] */;
    %254 = cast(%253, dtype="bool") /* ty=Tensor[(?, 8, 5), bool] */;
    %255 = shape_of(%var_12591, dtype="int32") /* ty=Tensor[(3), int32] */;
    %256 = cast(%var_12591, dtype="bool") /* ty=Tensor[(1, 8, 5), bool] */;
    %257 = dyn.reshape(%254, %255, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %258 = @func_3624() /* ty=Tensor[(13, 5, 2), float32] */;
    %259 = equal(%256, %257) /* ty=Tensor[(?, 8, 5), bool] */;
    (%258, %259)
  };
  %260(%var_12648) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(?, 8, 5), bool]) */
}

def @func_3945(%var_3931: Tensor[(4, 11, 8), int32]) -> Tensor[(4, 11, 8), int32] {
  %261 = cast(meta[relay.Constant][9] /* ty=Tensor[(4, 11, 8), int32] */, dtype="int32") /* ty=Tensor[(4, 11, 8), int32] */;
  %262 = shape_of(%var_3931, dtype="int32") /* ty=Tensor[(3), int32] */;
  %263 = cast(%var_3931, dtype="int32") /* ty=Tensor[(4, 11, 8), int32] */;
  %264 = dyn.reshape(%261, %262, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  multiply(%263, %264) /* ty=Tensor[(4, 11, 8), int32] */
}

def @func_1762() -> Tensor[(13, 5, 2), int8] {
  %265 = @func_1360() /* ty=Tensor[(13, 5, 2), float32] */;
  %266 = @func_1690() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %267 = %266.0;
  %268 = cast(%267, dtype="int8") /* ty=Tensor[(13, 5, 2), int8] */;
  %269 = shape_of(%265, dtype="int32") /* ty=Tensor[(3), int32] */;
  %270 = cast(%265, dtype="int8") /* ty=Tensor[(13, 5, 2), int8] */;
  %271 = dyn.reshape(%268, %269, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  bitwise_or(%270, %271) /* ty=Tensor[(13, 5, 2), int8] */
}

def @func_12582() -> (Tensor[(2464), float32],) {
  %274 = fn () -> (Tensor[(2464), float32],) {
    %272 = @func_1928() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float64], Tensor[(2464), float32]) */;
    %273 = %272.2;
    (%273,)
  };
  %274() /* ty=(Tensor[(2464), float32],) */
}

def @func_3390(%var_3370: Tensor[(168), float32]) -> (Tensor[(13, 5, 2), int8], Tensor[(6, 14, 2), float32], Tensor[(168), float32]) {
  %275 = cast(%var_3370, dtype="float32") /* ty=Tensor[(168), float32] */;
  %276 = reshape(%275, newshape=[6, 14, 2]) /* ty=Tensor[(6, 14, 2), float32] */;
  %277 = @func_1026(%276) /* ty=(Tensor[(6, 14, 2), float32], Tensor[(6, 14, 2), float32]) */;
  %278 = @func_1762() /* ty=Tensor[(13, 5, 2), int8] */;
  %279 = %277.0;
  (%278, %279, %var_3370)
}

def @func_672(%var_670: Tensor[(2464), float32], %var_671: Tensor[(13, 4, 8), float32]) -> (Tensor[(11, 16, 14), bool], Tensor[(13, 4, 8), int8]) {
  %296 = fn (%var_634: Tensor[(2464), float32], %var_660: Tensor[(13, 4, 8), float32]) -> (Tensor[(11, 16, 14), bool], Tensor[(13, 4, 8), int8]) {
    %280 = cast(%var_634, dtype="float32") /* ty=Tensor[(2464), float32] */;
    %281 = reshape(%280, newshape=[11, 16, 14]) /* ty=Tensor[(11, 16, 14), float32] */;
    %282 = @func_66(%281) /* ty=(Tensor[(11, 16, 14), float32],) */;
    %283 = %282.0;
    %284 = cast(%var_634, dtype="bool") /* ty=Tensor[(2464), bool] */;
    %285 = shape_of(%283, dtype="int32") /* ty=Tensor[(3), int32] */;
    %286 = cast(%283, dtype="bool") /* ty=Tensor[(11, 16, 14), bool] */;
    %287 = dyn.reshape(%284, %285, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %288 = cast(meta[relay.Constant][10] /* ty=Tensor[(13, 4, 8), float32] */, dtype="float32") /* ty=Tensor[(13, 4, 8), float32] */;
    %289 = tan(%288) /* ty=Tensor[(13, 4, 8), float32] */;
    %290 = cast(%var_660, dtype="int8") /* ty=Tensor[(13, 4, 8), int8] */;
    %291 = shape_of(%289, dtype="int32") /* ty=Tensor[(3), int32] */;
    %292 = cast(%289, dtype="int8") /* ty=Tensor[(13, 4, 8), int8] */;
    %293 = dyn.reshape(%290, %291, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %294 = not_equal(%286, %287) /* ty=Tensor[(11, 16, 14), bool] */;
    %295 = multiply(%292, %293) /* ty=Tensor[(13, 4, 8), int8] */;
    (%294, %295)
  };
  %296(%var_670, %var_671) /* ty=(Tensor[(11, 16, 14), bool], Tensor[(13, 4, 8), int8]) */
}

def @func_10754(%var_10753: Tensor[(16, 5, 2), bool]) -> (Tensor[(16, 5, 2), float32], Tensor[(16, 5, 2), float32]) {
  %306 = fn (%var_10735: Tensor[(16, 5, 2), bool]) -> (Tensor[(16, 5, 2), float32], Tensor[(16, 5, 2), float32]) {
    %297 = cast(%var_10735, dtype="bool") /* ty=Tensor[(16, 5, 2), bool] */;
    %298 = shape_of(meta[relay.Constant][11] /* ty=Tensor[(16, 5, 2), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %299 = cast(meta[relay.Constant][11] /* ty=Tensor[(16, 5, 2), bool] */, dtype="bool") /* ty=Tensor[(16, 5, 2), bool] */;
    %300 = dyn.reshape(%297, %298, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %301 = logical_and(%299, %300) /* ty=Tensor[(16, 5, 2), bool] */;
    %302 = cast(%301, dtype="float32") /* ty=Tensor[(16, 5, 2), float32] */;
    %303 = cast(meta[relay.Constant][11] /* ty=Tensor[(16, 5, 2), bool] */, dtype="float32") /* ty=Tensor[(16, 5, 2), float32] */;
    %304 = cos(%302) /* ty=Tensor[(16, 5, 2), float32] */;
    %305 = atan(%303) /* ty=Tensor[(16, 5, 2), float32] */;
    (%304, %305)
  };
  %306(%var_10753) /* ty=(Tensor[(16, 5, 2), float32], Tensor[(16, 5, 2), float32]) */
}

def @func_1356() -> Tensor[(13, 5, 2), float32] {
  @func_1354() /* ty=Tensor[(13, 5, 2), float32] */
}

def @func_9292() -> (Tensor[(13, 5, 2), float32],) {
  %307 = @func_6286() /* ty=(Tensor[(13, 5, 2), int8], Tensor[(13, 5, 2), float32]) */;
  %308 = %307.1;
  (%308,)
}

def @func_1691() -> (Tensor[(13, 5, 2), float32],) {
  %310 = fn () -> (Tensor[(13, 5, 2), float32],) {
    %309 = @func_1354() /* ty=Tensor[(13, 5, 2), float32] */;
    (%309,)
  };
  %310() /* ty=(Tensor[(13, 5, 2), float32],) */
}

def @func_6778() -> Tensor[(13, 5, 2), float32] {
  %311 = @func_1738() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %311.0
}

def @func_5172() -> (Tensor[(13, 5, 2), float32], Tensor[(168), float32], Tensor[(168), float32], Tensor[(13, 5, 2), uint8]) {
  %319 = fn () -> (Tensor[(13, 5, 2), float32], Tensor[(168), float32], Tensor[(168), float32], Tensor[(13, 5, 2), uint8]) {
    %312 = cast(meta[relay.Constant][12] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
    %313 = reshape(%312, newshape=[168]) /* ty=Tensor[(168), float32] */;
    %314 = @func_5146(%313) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(168), float32], Tensor[(168), float32], Tensor[(13, 5, 2), float64], Tensor[(6, 14, 2), float32], Tensor[(11, 16, 14), float32], Tensor[(2464), float32]) */;
    %315 = @func_4324() /* ty=(Tensor[(13, 5, 2), uint8],) */;
    %316 = @func_4637() /* ty=Tensor[(13, 5, 2), float32] */;
    %317 = %314.3;
    %318 = %315.0;
    (%316, %317, meta[relay.Constant][12] /* ty=Tensor[(168), float32] */, %318)
  };
  %319() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(168), float32], Tensor[(168), float32], Tensor[(13, 5, 2), uint8]) */
}

def @func_4500(%var_4498: Tensor[(2464), float32]) -> (Tensor[(13, 5, 2), float64], Tensor[(13, 5, 2), float64], Tensor[(2464), float32]) {
  %320 = @func_2974() /* ty=Tensor[(13, 5, 2), float32] */;
  %321 = cast(%320, dtype="float32") /* ty=Tensor[(13, 5, 2), float32] */;
  %322 = cosh(%321) /* ty=Tensor[(13, 5, 2), float32] */;
  %323 = cast(%322, dtype="float64") /* ty=Tensor[(13, 5, 2), float64] */;
  %324 = cast(%var_4498, dtype="float32") /* ty=Tensor[(2464), float32] */;
  %325 = reshape(%324, newshape=[1232, 2]) /* ty=Tensor[(1232, 2), float32] */;
  %326 = @func_2653(%325) /* ty=(Tensor[(11, 16, 14), float32], Tensor[(1232, 2), float32], Tensor[(13, 5, 2), float64]) */;
  %327 = tan(%323) /* ty=Tensor[(13, 5, 2), float64] */;
  %328 = %326.2;
  (%327, %328, %var_4498)
}

def @func_68(%var_67: Tensor[(11, 16, 14), float32]) -> (Tensor[(11, 16, 14), float32],) {
  %331 = fn (%var_47: Tensor[(11, 16, 14), float32]) -> (Tensor[(11, 16, 14), float32],) {
    %329 = cast(%var_47, dtype="float32") /* ty=Tensor[(11, 16, 14), float32] */;
    %330 = sqrt(%329) /* ty=Tensor[(11, 16, 14), float32] */;
    (%330,)
  };
  %331(%var_67) /* ty=(Tensor[(11, 16, 14), float32],) */
}

def @func_8146() -> (Tensor[(168), float32],) {
  @func_8144() /* ty=(Tensor[(168), float32],) */
}

def @func_12092() -> (Tensor[(13, 5, 2), float32],) {
  %332 = @func_6470() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %333 = %332.0;
  (%333,)
}

def @func_3156() -> (Tensor[(13, 5, 2), float32], Tensor[(1, 14), float32], float32, Tensor[(14, 1), float32], Tensor[(13, 5, 2), float32]) {
  @func_3154() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(1, 14), float32], float32, Tensor[(14, 1), float32], Tensor[(13, 5, 2), float32]) */
}

def @func_2122(%var_2120: Tensor[(13, 5, 2), float32], %var_2121: Tensor[(168), float32]) -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), bool], Tensor[(13, 5, 2), float32], Tensor[(6, 14, 2), float32], Tensor[(168), float32]) {
  %347 = fn (%var_2093: Tensor[(13, 5, 2), float32], %var_2103: Tensor[(168), float32]) -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), bool], Tensor[(13, 5, 2), float32], Tensor[(6, 14, 2), float32], Tensor[(168), float32]) {
    %334 = @func_1708() /* ty=Tensor[(13, 5, 2), float32] */;
    %335 = cast(%var_2093, dtype="bool") /* ty=Tensor[(13, 5, 2), bool] */;
    %336 = shape_of(%334, dtype="int32") /* ty=Tensor[(3), int32] */;
    %337 = cast(%334, dtype="bool") /* ty=Tensor[(13, 5, 2), bool] */;
    %338 = dyn.reshape(%335, %336, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %339 = @func_1967() /* ty=(Tensor[(13, 5, 2), float32],) */;
    %340 = cast(%var_2103, dtype="float32") /* ty=Tensor[(168), float32] */;
    %341 = reshape(%340, newshape=[6, 14, 2]) /* ty=Tensor[(6, 14, 2), float32] */;
    %342 = @func_1026(%341) /* ty=(Tensor[(6, 14, 2), float32], Tensor[(6, 14, 2), float32]) */;
    %343 = @func_1360() /* ty=Tensor[(13, 5, 2), float32] */;
    %344 = greater_equal(%337, %338) /* ty=Tensor[(13, 5, 2), bool] */;
    %345 = %339.0;
    %346 = %342.0;
    (%343, %344, %345, %346, %var_2103)
  };
  %347(%var_2120, %var_2121) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), bool], Tensor[(13, 5, 2), float32], Tensor[(6, 14, 2), float32], Tensor[(168), float32]) */
}

def @func_13358(%var_13356: Tensor[(864), float32]) -> (Tensor[(630), int32], Tensor[(13, 5, 2), float32], Tensor[(864), float32]) {
  @func_13355(%var_13356) /* ty=(Tensor[(630), int32], Tensor[(13, 5, 2), float32], Tensor[(864), float32]) */
}

def @func_2763() -> (Tensor[(13, 5, 2), float32],) {
  %348 = @func_1708() /* ty=Tensor[(13, 5, 2), float32] */;
  (%348,)
}

def @func_2578() -> Tensor[(13, 5, 2), uint8] {
  %349 = @func_1375() /* ty=(Tensor[(13, 5, 2), uint8],) */;
  %349.0
}

def @func_13318() -> (Tensor[(2464), float32],) {
  %350 = @func_2713() /* ty=Tensor[(2464), float32] */;
  (%350,)
}

def @func_6367() -> (Tensor[(13, 5, 2), float32],) {
  %353 = fn () -> (Tensor[(13, 5, 2), float32],) {
    %351 = @func_3794() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) */;
    %352 = %351.0;
    (%352,)
  };
  %353() /* ty=(Tensor[(13, 5, 2), float32],) */
}

def @func_3794() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) {
  %354 = @func_2786() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %355 = %354.0;
  %356 = @func_1762() /* ty=Tensor[(13, 5, 2), int8] */;
  (%355, %356)
}

def @func_3819(%var_3817: Tensor[(14), float32]) -> (float32, float32, Tensor[(2, 1232), float32], Tensor[(14), float32]) {
  @func_3816(%var_3817) /* ty=(float32, float32, Tensor[(2, 1232), float32], Tensor[(14), float32]) */
}

def @func_6591() -> Tensor[(13, 5, 2), uint8] {
  %358 = fn () -> Tensor[(13, 5, 2), uint8] {
    %357 = @func_4865() /* ty=(Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) */;
    %357.0
  };
  %358() /* ty=Tensor[(13, 5, 2), uint8] */
}

def @func_3549() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8], float32, Tensor[(2464), float32], Tensor[(416), float32]) {
  %359 = @func_2569() /* ty=Tensor[(13, 5, 2), int8] */;
  %360 = cast(%359, dtype="float32") /* ty=Tensor[(13, 5, 2), float32] */;
  %361 = @func_2763() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %362 = cast(meta[relay.Constant][13] /* ty=Tensor[(2464), float32] */, dtype="float32") /* ty=Tensor[(2464), float32] */;
  %363 = cast(meta[relay.Constant][14] /* ty=Tensor[(416), float32] */, dtype="float32") /* ty=Tensor[(416), float32] */;
  %364 = reshape(%362, newshape=[2464]) /* ty=Tensor[(2464), float32] */;
  %365 = reshape(%363, newshape=[1, 416]) /* ty=Tensor[(1, 416), float32] */;
  %366 = @func_2265(%364, %365) /* ty=(Tensor[(13, 5, 2), float32], float32, Tensor[(2464), float32], Tensor[(1, 416), float64]) */;
  %367 = log10(%360) /* ty=Tensor[(13, 5, 2), float32] */;
  %368 = %361.0;
  %369 = @func_2578() /* ty=Tensor[(13, 5, 2), uint8] */;
  %370 = %366.1;
  (%367, %368, %369, %370, meta[relay.Constant][13] /* ty=Tensor[(2464), float32] */, meta[relay.Constant][14] /* ty=Tensor[(416), float32] */)
}

def @func_14210(%var_14209: Tensor[(4, 7, 7), float64]) -> Tensor[(4, 7, 7), float64] {
  %372 = fn (%var_14203: Tensor[(4, 7, 7), float64]) -> Tensor[(4, 7, 7), float64] {
    %371 = cast(%var_14203, dtype="float64") /* ty=Tensor[(4, 7, 7), float64] */;
    acosh(%371) /* ty=Tensor[(4, 7, 7), float64] */
  };
  %372(%var_14209) /* ty=Tensor[(4, 7, 7), float64] */
}

def @func_2181(%var_2179: Tensor[(2, 7, 12), float32]) -> Tensor[(2, 7, 12), float32] {
  @func_2178(%var_2179) /* ty=Tensor[(2, 7, 12), float32] */
}

def @func_8130() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) {
  %376 = fn () -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) {
    %373 = @func_6323() /* ty=(Tensor[(13, 5, 2), float32],) */;
    %374 = %373.0;
    %375 = @func_1762() /* ty=Tensor[(13, 5, 2), int8] */;
    (%374, %375)
  };
  %376() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) */
}

def @func_1502(%var_1501: Tensor[(2464), float32]) -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(6, 14, 2), float32], Tensor[(42, 4), float32], Tensor[(13, 4, 8), int8], Tensor[(2464), float32], Tensor[(416), float32], Tensor[(13, 5, 2), float32]) {
  %390 = fn (%var_1486: Tensor[(2464), float32]) -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(6, 14, 2), float32], Tensor[(42, 4), float32], Tensor[(13, 4, 8), int8], Tensor[(2464), float32], Tensor[(416), float32], Tensor[(13, 5, 2), float32]) {
    %377 = cast(meta[relay.Constant][15] /* ty=Tensor[(42, 4), float32] */, dtype="float32") /* ty=Tensor[(42, 4), float32] */;
    %378 = reshape(%377, newshape=[6, 14, 2]) /* ty=Tensor[(6, 14, 2), float32] */;
    %379 = @func_1026(%378) /* ty=(Tensor[(6, 14, 2), float32], Tensor[(6, 14, 2), float32]) */;
    %380 = cast(%var_1486, dtype="float32") /* ty=Tensor[(2464), float32] */;
    %381 = cast(meta[relay.Constant][16] /* ty=Tensor[(416), float32] */, dtype="float32") /* ty=Tensor[(416), float32] */;
    %382 = reshape(%380, newshape=[2464]) /* ty=Tensor[(2464), float32] */;
    %383 = reshape(%381, newshape=[13, 4, 8]) /* ty=Tensor[(13, 4, 8), float32] */;
    %384 = @func_669(%382, %383) /* ty=(Tensor[(11, 16, 14), bool], Tensor[(13, 4, 8), int8]) */;
    %385 = @func_1360() /* ty=Tensor[(13, 5, 2), float32] */;
    %386 = @func_1354() /* ty=Tensor[(13, 5, 2), float32] */;
    %387 = %379.1;
    %388 = %384.1;
    %389 = @func_1354() /* ty=Tensor[(13, 5, 2), float32] */;
    (%385, %386, %387, meta[relay.Constant][15] /* ty=Tensor[(42, 4), float32] */, %388, %var_1486, meta[relay.Constant][16] /* ty=Tensor[(416), float32] */, %389)
  };
  %390(%var_1501) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(6, 14, 2), float32], Tensor[(42, 4), float32], Tensor[(13, 4, 8), int8], Tensor[(2464), float32], Tensor[(416), float32], Tensor[(13, 5, 2), float32]) */
}

def @func_8060() -> (Tensor[(13, 5, 2), uint8],) {
  %391 = @func_1375() /* ty=(Tensor[(13, 5, 2), uint8],) */;
  %392 = %391.0;
  (%392,)
}

def @func_5586() -> (Tensor[(13, 5, 2), float32],) {
  @func_5584() /* ty=(Tensor[(13, 5, 2), float32],) */
}

def @func_1764() -> Tensor[(13, 5, 2), int8] {
  @func_1762() /* ty=Tensor[(13, 5, 2), int8] */
}

def @func_6812() -> (Tensor[(13, 5, 2), float32],) {
  %395 = fn () -> (Tensor[(13, 5, 2), float32],) {
    %393 = @func_1928() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float64], Tensor[(2464), float32]) */;
    %394 = %393.0;
    (%394,)
  };
  %395() /* ty=(Tensor[(13, 5, 2), float32],) */
}

def @func_9539() -> Tensor[(13, 5, 2), uint8] {
  %397 = fn () -> Tensor[(13, 5, 2), uint8] {
    %396 = @func_4791() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8], float32, Tensor[(14), float32]) */;
    %396.2
  };
  %397() /* ty=Tensor[(13, 5, 2), uint8] */
}

def @func_9009() -> (Tensor[(13, 5, 2), float32], Tensor[(168), float32]) {
  %401 = fn () -> (Tensor[(13, 5, 2), float32], Tensor[(168), float32]) {
    %398 = @func_8144() /* ty=(Tensor[(168), float32],) */;
    %399 = @func_1354() /* ty=Tensor[(13, 5, 2), float32] */;
    %400 = %398.0;
    (%399, %400)
  };
  %401() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(168), float32]) */
}

def @func_11658(%var_11657: Tensor[(15, 8, 16), float64]) -> Tensor[(15, 8, 16), bool] {
  %408 = fn (%var_11646: Tensor[(15, 8, 16), float64]) -> Tensor[(15, 8, 16), bool] {
    %402 = cast(%var_11646, dtype="float64") /* ty=Tensor[(15, 8, 16), float64] */;
    %403 = asin(%402) /* ty=Tensor[(15, 8, 16), float64] */;
    %404 = cast(%var_11646, dtype="bool") /* ty=Tensor[(15, 8, 16), bool] */;
    %405 = shape_of(%403, dtype="int32") /* ty=Tensor[(3), int32] */;
    %406 = cast(%403, dtype="bool") /* ty=Tensor[(15, 8, 16), bool] */;
    %407 = dyn.reshape(%404, %405, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    greater_equal(%406, %407) /* ty=Tensor[(15, 8, 16), bool] */
  };
  %408(%var_11657) /* ty=Tensor[(15, 8, 16), bool] */
}

def @func_6102() -> Tensor[(13, 5, 2), float32] {
  @func_1708() /* ty=Tensor[(13, 5, 2), float32] */
}

def @func_11849() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float64], Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) {
  @func_11847() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float64], Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) */
}

def @func_5392(%var_5391: Tensor[(1188), float32]) -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(11, 12, 9), bool], float32, Tensor[(1188), float32], Tensor[(13, 5, 2), float32], Tensor[(11, 16, 14), float64], Tensor[(2464), float32], Tensor[(13, 5, 2), int8]) {
  %427 = fn (%var_5361: Tensor[(1188), float32]) -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(11, 12, 9), bool], float32, Tensor[(1188), float32], Tensor[(13, 5, 2), float32], Tensor[(11, 16, 14), float64], Tensor[(2464), float32], Tensor[(13, 5, 2), int8]) {
    %409 = cast(9.59802f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %410 = cast(%var_5361, dtype="float32") /* ty=Tensor[(1188), float32] */;
    %411 = reshape(%409, newshape=[]) /* ty=float32 */;
    %412 = reshape(%410, newshape=[11, 12, 9]) /* ty=Tensor[(11, 12, 9), float32] */;
    %413 = @func_5219(%411, %412) /* ty=(Tensor[(11, 12, 9), float32], Tensor[(11, 12, 9), bool], Tensor[(13, 5, 2), float32]) */;
    %414 = @func_4865() /* ty=(Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) */;
    %415 = @func_1708() /* ty=Tensor[(13, 5, 2), float32] */;
    %416 = cast(%415, dtype="float32") /* ty=Tensor[(13, 5, 2), float32] */;
    %417 = cast(meta[relay.Constant][17] /* ty=Tensor[(2464), float32] */, dtype="float32") /* ty=Tensor[(2464), float32] */;
    %418 = reshape(%416, newshape=[13, 5, 2]) /* ty=Tensor[(13, 5, 2), float32] */;
    %419 = reshape(%417, newshape=[2464]) /* ty=Tensor[(2464), float32] */;
    %420 = @func_1645(%418, %419) /* ty=(Tensor[(13, 5, 2), float64], Tensor[(11, 16, 14), float64]) */;
    %421 = @func_3127() /* ty=(Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) */;
    %422 = @func_1354() /* ty=Tensor[(13, 5, 2), float32] */;
    %423 = %413.1;
    %424 = %414.1;
    %425 = %420.1;
    %426 = %421.2;
    (%415, %422, %423, 9.59802f /* ty=float32 */, %var_5361, %424, %425, meta[relay.Constant][17] /* ty=Tensor[(2464), float32] */, %426)
  };
  %427(%var_5391) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(11, 12, 9), bool], float32, Tensor[(1188), float32], Tensor[(13, 5, 2), float32], Tensor[(11, 16, 14), float64], Tensor[(2464), float32], Tensor[(13, 5, 2), int8]) */
}

def @func_7674() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) {
  @func_7672() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) */
}

def @func_12414() -> Tensor[(14, 7, 5), float32] {
  %428 = @func_10460() /* ty=(Tensor[(3, 15, 15), float64], Tensor[(14, 7, 5), float32], Tensor[(1, 70), float32]) */;
  %428.1
}

def @func_2265(%var_2252: Tensor[(2464), float32], %var_2253: Tensor[(1, 416), float32]) -> (Tensor[(13, 5, 2), float32], float32, Tensor[(2464), float32], Tensor[(1, 416), float64]) {
  %429 = cast(%var_2252, dtype="float32") /* ty=Tensor[(2464), float32] */;
  %430 = cast(%var_2253, dtype="float32") /* ty=Tensor[(1, 416), float32] */;
  %431 = reshape(%429, newshape=[1232, 2]) /* ty=Tensor[(1232, 2), float32] */;
  %432 = reshape(%430, newshape=[8, 52]) /* ty=Tensor[(8, 52), float32] */;
  %433 = @func_1556(%431, %432) /* ty=(Tensor[(13, 5, 2), uint8], Tensor[(1, 14), float32], float32, Tensor[(14), float32], Tensor[(13, 4, 8), int8], Tensor[(1232, 2), float32], Tensor[(8, 52), float32], Tensor[(13, 5, 2), float32]) */;
  %434 = cast(%var_2253, dtype="float64") /* ty=Tensor[(1, 416), float64] */;
  %435 = @func_1989() /* ty=Tensor[(13, 5, 2), float32] */;
  %436 = %433.2;
  %437 = sinh(%434) /* ty=Tensor[(1, 416), float64] */;
  (%435, %436, %var_2252, %437)
}

def @func_4687() -> Tensor[(2464), float32] {
  %438 = fn () -> Tensor[(2464), float32] {
    @func_2713() /* ty=Tensor[(2464), float32] */
  };
  %438() /* ty=Tensor[(2464), float32] */
}

def @func_12922() -> (Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), uint8]) {
  %446 = fn () -> (Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), uint8]) {
    %439 = @func_4865() /* ty=(Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) */;
    %440 = @func_8273() /* ty=(Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) */;
    %441 = %439.0;
    %442 = @func_1354() /* ty=Tensor[(13, 5, 2), float32] */;
    %443 = @func_6778() /* ty=Tensor[(13, 5, 2), float32] */;
    %444 = @func_12461() /* ty=Tensor[(13, 5, 2), uint8] */;
    %445 = %440.0;
    (%441, %442, %443, %444, %445)
  };
  %446() /* ty=(Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), uint8]) */
}

def @func_10575(%var_10573: Tensor[(12, 12, 12), float32]) -> (Tensor[(12, 12, 12), float32],) {
  @func_10572(%var_10573) /* ty=(Tensor[(12, 12, 12), float32],) */
}

def @func_11225() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8], Tensor[(11, 16, 14), float64]) {
  %452 = fn () -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8], Tensor[(11, 16, 14), float64]) {
    %447 = @func_7672() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) */;
    %448 = @func_6990() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(11, 16, 14), float64], Tensor[(2464), float32]) */;
    %449 = @func_5927() /* ty=Tensor[(13, 5, 2), float32] */;
    %450 = %447.1;
    %451 = %448.2;
    (%449, %450, %451)
  };
  %452() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8], Tensor[(11, 16, 14), float64]) */
}

def @func_1708() -> Tensor[(13, 5, 2), float32] {
  @func_1354() /* ty=Tensor[(13, 5, 2), float32] */
}

def @func_12981() -> Tensor[(13, 5, 2), float32] {
  %453 = @func_11918() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %453.0
}

def @func_5642(%var_5640: Tensor[(1188), float32]) -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(1188), float32], Tensor[(2464), float64]) {
  @func_5639(%var_5640) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(1188), float32], Tensor[(2464), float64]) */
}

def @func_12445() -> Tensor[(13, 5, 2), uint8] {
  @func_12443() /* ty=Tensor[(13, 5, 2), uint8] */
}

def @func_6585() -> Tensor[(13, 5, 2), float32] {
  %454 = fn () -> Tensor[(13, 5, 2), float32] {
    @func_5421() /* ty=Tensor[(13, 5, 2), float32] */
  };
  %454() /* ty=Tensor[(13, 5, 2), float32] */
}

def @func_7331(%var_7329: Tensor[(13, 5, 2), float32], %var_7330: Tensor[(360), float64]) -> (Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8], Tensor[(8, 3, 15), float64], Tensor[(360), float64]) {
  %469 = fn (%var_7264: Tensor[(13, 5, 2), float32], %var_7304: Tensor[(360), float64]) -> (Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8], Tensor[(8, 3, 15), float64], Tensor[(360), float64]) {
    %455 = @func_1928() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float64], Tensor[(2464), float32]) */;
    %456 = %455.0;
    %457 = cast(%var_7264, dtype="uint8") /* ty=Tensor[(13, 5, 2), uint8] */;
    %458 = shape_of(%456, dtype="int32") /* ty=Tensor[(3), int32] */;
    %459 = cast(%456, dtype="uint8") /* ty=Tensor[(13, 5, 2), uint8] */;
    %460 = dyn.reshape(%457, %458, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %461 = @func_1738() /* ty=(Tensor[(13, 5, 2), float32],) */;
    %462 = @func_6158() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) */;
    %463 = cast(%var_7304, dtype="float64") /* ty=Tensor[(360), float64] */;
    %464 = reshape(%463, newshape=[8, 3, 15]) /* ty=Tensor[(8, 3, 15), float64] */;
    %465 = bitwise_and(%459, %460) /* ty=Tensor[(13, 5, 2), uint8] */;
    %466 = %461.0;
    %467 = %462.1;
    %468 = @func_4875(%464) /* ty=Tensor[(8, 3, 15), float64] */;
    (%465, %466, %467, %468, %var_7304)
  };
  %469(%var_7329, %var_7330) /* ty=(Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8], Tensor[(8, 3, 15), float64], Tensor[(360), float64]) */
}

def @func_2269(%var_2267: Tensor[(2464), float32], %var_2268: Tensor[(1, 416), float32]) -> (Tensor[(13, 5, 2), float32], float32, Tensor[(2464), float32], Tensor[(1, 416), float64]) {
  @func_2265(%var_2267, %var_2268) /* ty=(Tensor[(13, 5, 2), float32], float32, Tensor[(2464), float32], Tensor[(1, 416), float64]) */
}

def @func_9949() -> (Tensor[(13, 5, 2), int8], Tensor[(13, 5, 2), float32]) {
  %473 = fn () -> (Tensor[(13, 5, 2), int8], Tensor[(13, 5, 2), float32]) {
    %470 = @func_7672() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) */;
    %471 = @func_1762() /* ty=Tensor[(13, 5, 2), int8] */;
    %472 = %470.0;
    (%471, %472)
  };
  %473() /* ty=(Tensor[(13, 5, 2), int8], Tensor[(13, 5, 2), float32]) */
}

def @func_5451() -> (Tensor[(13, 5, 2), uint8],) {
  %474 = @func_4324() /* ty=(Tensor[(13, 5, 2), uint8],) */;
  %475 = %474.0;
  (%475,)
}

def @func_8506() -> Tensor[(13, 5, 2), float32] {
  @func_8504() /* ty=Tensor[(13, 5, 2), float32] */
}

def @func_1222(%var_1221: Tensor[(15, 5, 16), bool]) -> (Tensor[(15, 5, 16), bool],) {
  %481 = fn (%var_1211: Tensor[(15, 5, 16), bool]) -> (Tensor[(15, 5, 16), bool],) {
    %476 = cast(%var_1211, dtype="bool") /* ty=Tensor[(15, 5, 16), bool] */;
    %477 = shape_of(meta[relay.Constant][18] /* ty=Tensor[(15, 5, 16), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %478 = cast(meta[relay.Constant][18] /* ty=Tensor[(15, 5, 16), bool] */, dtype="bool") /* ty=Tensor[(15, 5, 16), bool] */;
    %479 = dyn.reshape(%476, %477, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %480 = logical_and(%478, %479) /* ty=Tensor[(15, 5, 16), bool] */;
    (%480,)
  };
  %481(%var_1221) /* ty=(Tensor[(15, 5, 16), bool],) */
}

def @func_11156(%var_11154: Tensor[(1950), float32]) -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float64], Tensor[(4, 616), float32], Tensor[(1950), float32], Tensor[(14), float32]) {
  @func_11153(%var_11154) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float64], Tensor[(4, 616), float32], Tensor[(1950), float32], Tensor[(14), float32]) */
}

def @func_10302(%var_10299: Tensor[(2464), float32], %var_10300: Tensor[(1950), float32], %var_10301: Tensor[(14), float32]) -> (Tensor[(13, 5, 2), float32], Tensor[(2464), float32], Tensor[(2464), float32], Tensor[(2464), float32], Tensor[(13, 5, 2), float32], Tensor[(1950), float32], Tensor[(14), float32]) {
  %499 = fn (%var_10271: Tensor[(2464), float32], %var_10287: Tensor[(1950), float32], %var_10288: Tensor[(14), float32]) -> (Tensor[(13, 5, 2), float32], Tensor[(2464), float32], Tensor[(2464), float32], Tensor[(2464), float32], Tensor[(13, 5, 2), float32], Tensor[(1950), float32], Tensor[(14), float32]) {
    %482 = cast(%var_10271, dtype="float32") /* ty=Tensor[(2464), float32] */;
    %483 = reshape(%482, newshape=[2464]) /* ty=Tensor[(2464), float32] */;
    %484 = @func_4171(%483) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(11, 16, 14), float32], Tensor[(2464), float32]) */;
    %485 = %484.2;
    %486 = cast(%485, dtype="float32") /* ty=Tensor[(2464), float32] */;
    %487 = reshape(%486, newshape=[2464]) /* ty=Tensor[(2464), float32] */;
    %488 = @func_4500(%487) /* ty=(Tensor[(13, 5, 2), float64], Tensor[(13, 5, 2), float64], Tensor[(2464), float32]) */;
    %489 = %488.2;
    %490 = cast(%489, dtype="float32") /* ty=Tensor[(2464), float32] */;
    %491 = cast(%var_10287, dtype="float32") /* ty=Tensor[(1950), float32] */;
    %492 = cast(%var_10288, dtype="float32") /* ty=Tensor[(14), float32] */;
    %493 = reshape(%491, newshape=[1950]) /* ty=Tensor[(1950), float32] */;
    %494 = reshape(%492, newshape=[14]) /* ty=Tensor[(14), float32] */;
    %495 = @func_8039(%493, %494) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(1950), float32], Tensor[(1950), float32], Tensor[(14), float32], Tensor[(11, 16, 14), float64], Tensor[(4, 616), float32], Tensor[(13, 5, 2), float32], Tensor[(8, 3, 15), float64], Tensor[(360), float64]) */;
    %496 = @func_7514() /* ty=Tensor[(13, 5, 2), float32] */;
    %497 = sqrt(%490) /* ty=Tensor[(2464), float32] */;
    %498 = %495.6;
    (%496, %485, %var_10271, %497, %498, %var_10287, %var_10288)
  };
  %499(%var_10299, %var_10300, %var_10301) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(2464), float32], Tensor[(2464), float32], Tensor[(2464), float32], Tensor[(13, 5, 2), float32], Tensor[(1950), float32], Tensor[(14), float32]) */
}

def @func_7179(%var_7177: Tensor[(2464), float32]) -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8], Tensor[(2464), float32]) {
  @func_7176(%var_7177) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8], Tensor[(2464), float32]) */
}

def @func_11339(%var_11337: Tensor[(864), float32]) -> (Tensor[(13, 5, 2), int8], Tensor[(13, 5, 2), float32], Tensor[(864), float32]) {
  @func_11336(%var_11337) /* ty=(Tensor[(13, 5, 2), int8], Tensor[(13, 5, 2), float32], Tensor[(864), float32]) */
}

def @func_9388() -> (Tensor[(13, 5, 2), float32],) {
  @func_9386() /* ty=(Tensor[(13, 5, 2), float32],) */
}

def @func_11847() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float64], Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) {
  %500 = @func_5927() /* ty=Tensor[(13, 5, 2), float32] */;
  %501 = cast(%500, dtype="int8") /* ty=Tensor[(13, 5, 2), int8] */;
  %502 = reshape(%501, newshape=[13, 5, 2]) /* ty=Tensor[(13, 5, 2), int8] */;
  %503 = @func_4131(%502) /* ty=(Tensor[(13, 5, 2), int32], Tensor[(2464), bool], Tensor[(168), float32], Tensor[(1, 14), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float64], Tensor[(2464), float32]) */;
  %504 = @func_7619() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %505 = %503.5;
  %506 = @func_6590() /* ty=Tensor[(13, 5, 2), uint8] */;
  %507 = %504.0;
  (%500, %505, %506, %507)
}

def @func_13159() -> (Tensor[(13, 5, 2), float32],) {
  @func_13157() /* ty=(Tensor[(13, 5, 2), float32],) */
}

def @func_9602() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), int8]) {
  %508 = @func_9074() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32], Tensor[(168), float32]) */;
  %509 = @func_6158() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) */;
  %510 = %508.0;
  %511 = @func_9488() /* ty=Tensor[(13, 5, 2), uint8] */;
  %512 = %509.1;
  (%510, %511, %512)
}

def @func_14411(%var_14377: Tensor[(14, 13, 10), float64]) -> (Tensor[(13, 5, 2), float32], Tensor[(14, 13, 10), float32], Tensor[(13, 5, 2), int8]) {
  %513 = @func_10190() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %514 = cast(%var_14377, dtype="float64") /* ty=Tensor[(14, 13, 10), float64] */;
  %515 = log(%514) /* ty=Tensor[(14, 13, 10), float64] */;
  %516 = cast(%var_14377, dtype="float32") /* ty=Tensor[(14, 13, 10), float32] */;
  %517 = shape_of(%515, dtype="int32") /* ty=Tensor[(3), int32] */;
  %518 = cast(%515, dtype="float32") /* ty=Tensor[(14, 13, 10), float32] */;
  %519 = dyn.reshape(%516, %517, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %520 = @func_9247() /* ty=(Tensor[(13, 5, 2), int8], Tensor[(13, 5, 2), float32]) */;
  %521 = %513.0;
  %522 = mod(%518, %519) /* ty=Tensor[(14, 13, 10), float32] */;
  %523 = %520.0;
  (%521, %522, %523)
}

def @func_14414(%var_14412: Tensor[(14, 13, 10), float64]) -> (Tensor[(13, 5, 2), float32], Tensor[(14, 13, 10), float32], Tensor[(13, 5, 2), int8]) {
  @func_14411(%var_14412) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(14, 13, 10), float32], Tensor[(13, 5, 2), int8]) */
}

def @func_2571() -> Tensor[(13, 5, 2), int8] {
  @func_2569() /* ty=Tensor[(13, 5, 2), int8] */
}

def @func_9628() -> Tensor[(13, 5, 2), float32] {
  %524 = fn () -> Tensor[(13, 5, 2), float32] {
    @func_3873() /* ty=Tensor[(13, 5, 2), float32] */
  };
  %524() /* ty=Tensor[(13, 5, 2), float32] */
}

def @func_12094() -> (Tensor[(13, 5, 2), float32],) {
  @func_12092() /* ty=(Tensor[(13, 5, 2), float32],) */
}

def @func_7619() -> (Tensor[(13, 5, 2), float32],) {
  %525 = @func_1928() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float64], Tensor[(2464), float32]) */;
  %526 = %525.0;
  (%526,)
}

def @func_6089(%var_6087: Tensor[(12, 16, 13), int32], %var_6088: Tensor[(12, 16, 13), int32]) -> (Tensor[(12, 16, 13), int32], Tensor[(13, 5, 2), float32], Tensor[(4, 11, 8), int32], Tensor[(4, 88), float64]) {
  %538 = fn (%var_6046: Tensor[(12, 16, 13), int32], %var_6047: Tensor[(12, 16, 13), int32]) -> (Tensor[(12, 16, 13), int32], Tensor[(13, 5, 2), float32], Tensor[(4, 11, 8), int32], Tensor[(4, 88), float64]) {
    %527 = cast(%var_6047, dtype="int32") /* ty=Tensor[(12, 16, 13), int32] */;
    %528 = shape_of(%var_6046, dtype="int32") /* ty=Tensor[(3), int32] */;
    %529 = cast(%var_6046, dtype="int32") /* ty=Tensor[(12, 16, 13), int32] */;
    %530 = dyn.reshape(%527, %528, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %531 = cast(meta[relay.Constant][19] /* ty=Tensor[(4, 88), int32] */, dtype="int32") /* ty=Tensor[(4, 88), int32] */;
    %532 = reshape(%531, newshape=[4, 11, 8]) /* ty=Tensor[(4, 11, 8), int32] */;
    %533 = cast(meta[relay.Constant][19] /* ty=Tensor[(4, 88), int32] */, dtype="float64") /* ty=Tensor[(4, 88), float64] */;
    %534 = left_shift(%529, %530) /* ty=Tensor[(12, 16, 13), int32] */;
    %535 = @func_2974() /* ty=Tensor[(13, 5, 2), float32] */;
    %536 = @func_3945(%532) /* ty=Tensor[(4, 11, 8), int32] */;
    %537 = acosh(%533) /* ty=Tensor[(4, 88), float64] */;
    (%534, %535, %536, %537)
  };
  %538(%var_6087, %var_6088) /* ty=(Tensor[(12, 16, 13), int32], Tensor[(13, 5, 2), float32], Tensor[(4, 11, 8), int32], Tensor[(4, 88), float64]) */
}

def @func_11071() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8]) {
  %539 = @func_9211() /* ty=Tensor[(13, 5, 2), float32] */;
  %540 = @func_2578() /* ty=Tensor[(13, 5, 2), uint8] */;
  (%539, %540)
}

def @func_4326() -> (Tensor[(13, 5, 2), uint8],) {
  @func_4324() /* ty=(Tensor[(13, 5, 2), uint8],) */
}

def @func_10166() -> (Tensor[(13, 5, 2), float32],) {
  %541 = @func_9475() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %542 = %541.0;
  (%542,)
}

def @func_14099() -> (Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) {
  %543 = @func_11071() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8]) */;
  %544 = @func_12063() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %545 = %543.1;
  %546 = %544.0;
  (%545, %546)
}

def @func_14563() -> (Tensor[(9, 6, 15), uint16], Tensor[(2464), float32], Tensor[(9, 6, 15), float32]) {
  %556 = fn () -> (Tensor[(9, 6, 15), uint16], Tensor[(2464), float32], Tensor[(9, 6, 15), float32]) {
    %547 = cast(meta[relay.Constant][20] /* ty=Tensor[(9, 1, 15), uint16] */, dtype="uint16") /* ty=Tensor[(9, 1, 15), uint16] */;
    %548 = cast(meta[relay.Constant][21] /* ty=Tensor[(9, 6, 15), uint16] */, dtype="uint16") /* ty=Tensor[(9, 6, 15), uint16] */;
    %549 = @func_2530() /* ty=(Tensor[(2464), float32],) */;
    %550 = cast(meta[relay.Constant][21] /* ty=Tensor[(9, 6, 15), uint16] */, dtype="float64") /* ty=Tensor[(9, 6, 15), float64] */;
    %551 = exp(%550) /* ty=Tensor[(9, 6, 15), float64] */;
    %552 = cast(%551, dtype="float32") /* ty=Tensor[(9, 6, 15), float32] */;
    %553 = left_shift(%547, %548) /* ty=Tensor[(9, 6, 15), uint16] */;
    %554 = %549.0;
    %555 = rsqrt(%552) /* ty=Tensor[(9, 6, 15), float32] */;
    (%553, %554, %555)
  };
  %556() /* ty=(Tensor[(9, 6, 15), uint16], Tensor[(2464), float32], Tensor[(9, 6, 15), float32]) */
}

def @func_2057(%var_2055: Tensor[(9, 12, 8), float32]) -> (Tensor[(9, 12, 8), float32],) {
  @func_2054(%var_2055) /* ty=(Tensor[(9, 12, 8), float32],) */
}

def @func_3154() -> (Tensor[(13, 5, 2), float32], Tensor[(1, 14), float32], float32, Tensor[(14, 1), float32], Tensor[(13, 5, 2), float32]) {
  %557 = @func_1690() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %558 = cast(7.05182f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %559 = cast(meta[relay.Constant][22] /* ty=Tensor[(14, 1), float32] */, dtype="float32") /* ty=Tensor[(14, 1), float32] */;
  %560 = reshape(%558, newshape=[]) /* ty=float32 */;
  %561 = reshape(%559, newshape=[1, 14]) /* ty=Tensor[(1, 14), float32] */;
  %562 = @func_1174(%560, %561) /* ty=(Tensor[(1, 14), float32],) */;
  %563 = @func_2763() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %564 = %557.0;
  %565 = %562.0;
  %566 = %563.0;
  (%564, %565, 7.05182f /* ty=float32 */, meta[relay.Constant][22] /* ty=Tensor[(14, 1), float32] */, %566)
}

def @func_11637() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) {
  %571 = fn () -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) {
    %567 = @func_6158() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) */;
    %568 = @func_6323() /* ty=(Tensor[(13, 5, 2), float32],) */;
    %569 = %567.0;
    %570 = %568.0;
    (%569, %570)
  };
  %571() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) */
}

def @func_9294() -> (Tensor[(13, 5, 2), float32],) {
  @func_9292() /* ty=(Tensor[(13, 5, 2), float32],) */
}

def @func_13355(%var_13333: Tensor[(864), float32]) -> (Tensor[(630), int32], Tensor[(13, 5, 2), float32], Tensor[(864), float32]) {
  %572 = @func_8473() /* ty=(Tensor[(630), int32],) */;
  %573 = cast(%var_13333, dtype="float32") /* ty=Tensor[(864), float32] */;
  %574 = reshape(%573, newshape=[864]) /* ty=Tensor[(864), float32] */;
  %575 = @func_11336(%574) /* ty=(Tensor[(13, 5, 2), int8], Tensor[(13, 5, 2), float32], Tensor[(864), float32]) */;
  %576 = %572.0;
  %577 = %575.1;
  (%576, %577, %var_13333)
}

def @func_3993() -> (Tensor[(13, 5, 2), float32],) {
  %580 = fn () -> (Tensor[(13, 5, 2), float32],) {
    %578 = @func_3213() /* ty=(Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) */;
    %579 = %578.1;
    (%579,)
  };
  %580() /* ty=(Tensor[(13, 5, 2), float32],) */
}

def @func_10258() -> (Tensor[(2464), float32],) {
  %585 = fn () -> (Tensor[(2464), float32],) {
    %581 = @func_2530() /* ty=(Tensor[(2464), float32],) */;
    %582 = %581.0;
    %583 = cast(%582, dtype="float32") /* ty=Tensor[(2464), float32] */;
    %584 = cosh(%583) /* ty=Tensor[(2464), float32] */;
    (%584,)
  };
  %585() /* ty=(Tensor[(2464), float32],) */
}

def @func_3601(%var_3600: Tensor[(13, 5, 2), float32]) -> (Tensor[(13, 5, 2), float32],) {
  %592 = fn (%var_3592: Tensor[(13, 5, 2), float32]) -> (Tensor[(13, 5, 2), float32],) {
    %586 = @func_1989() /* ty=Tensor[(13, 5, 2), float32] */;
    %587 = cast(%var_3592, dtype="float32") /* ty=Tensor[(13, 5, 2), float32] */;
    %588 = shape_of(%586, dtype="int32") /* ty=Tensor[(3), int32] */;
    %589 = cast(%586, dtype="float32") /* ty=Tensor[(13, 5, 2), float32] */;
    %590 = dyn.reshape(%587, %588, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %591 = mod(%589, %590) /* ty=Tensor[(13, 5, 2), float32] */;
    (%591,)
  };
  %592(%var_3600) /* ty=(Tensor[(13, 5, 2), float32],) */
}

def @func_2715() -> Tensor[(2464), float32] {
  @func_2713() /* ty=Tensor[(2464), float32] */
}

def @func_6991() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(11, 16, 14), float64], Tensor[(2464), float32]) {
  %603 = fn () -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(11, 16, 14), float64], Tensor[(2464), float32]) {
    %593 = @func_6366() /* ty=(Tensor[(13, 5, 2), float32],) */;
    %594 = @func_3549() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8], float32, Tensor[(2464), float32], Tensor[(416), float32]) */;
    %595 = %594.1;
    %596 = cast(%595, dtype="float32") /* ty=Tensor[(13, 5, 2), float32] */;
    %597 = cast(meta[relay.Constant][23] /* ty=Tensor[(2464), float32] */, dtype="float32") /* ty=Tensor[(2464), float32] */;
    %598 = reshape(%596, newshape=[13, 5, 2]) /* ty=Tensor[(13, 5, 2), float32] */;
    %599 = reshape(%597, newshape=[2464]) /* ty=Tensor[(2464), float32] */;
    %600 = @func_1645(%598, %599) /* ty=(Tensor[(13, 5, 2), float64], Tensor[(11, 16, 14), float64]) */;
    %601 = %593.0;
    %602 = %600.1;
    (%601, %595, %602, meta[relay.Constant][23] /* ty=Tensor[(2464), float32] */)
  };
  %603() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(11, 16, 14), float64], Tensor[(2464), float32]) */
}

def @func_6300(%var_6299: Tensor[(14, 3, 14), float32]) -> Tensor[(14, 3, 14), float32] {
  %605 = fn (%var_6295: Tensor[(14, 3, 14), float32]) -> Tensor[(14, 3, 14), float32] {
    %604 = cast(%var_6295, dtype="float32") /* ty=Tensor[(14, 3, 14), float32] */;
    cos(%604) /* ty=Tensor[(14, 3, 14), float32] */
  };
  %605(%var_6299) /* ty=Tensor[(14, 3, 14), float32] */
}

def @func_4366() -> (Tensor[(13, 5, 2), int8],) {
  %608 = fn () -> (Tensor[(13, 5, 2), int8],) {
    %606 = @func_3127() /* ty=(Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) */;
    %607 = %606.2;
    (%607,)
  };
  %608() /* ty=(Tensor[(13, 5, 2), int8],) */
}

def @func_7419() -> (Tensor[(11, 16, 14), float64], Tensor[(13, 5, 2), uint8]) {
  %609 = @func_6990() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(11, 16, 14), float64], Tensor[(2464), float32]) */;
  %610 = @func_4324() /* ty=(Tensor[(13, 5, 2), uint8],) */;
  %611 = %609.2;
  %612 = %610.0;
  (%611, %612)
}

def @func_7621() -> (Tensor[(13, 5, 2), float32],) {
  @func_7619() /* ty=(Tensor[(13, 5, 2), float32],) */
}

def @func_1354() -> Tensor[(13, 5, 2), float32] {
  %613 = cast(meta[relay.Constant][24] /* ty=Tensor[(13, 5, 2), float32] */, dtype="float32") /* ty=Tensor[(13, 5, 2), float32] */;
  acosh(%613) /* ty=Tensor[(13, 5, 2), float32] */
}

def @func_7689(%var_7680: uint64, %var_7681: Tensor[(3, 4, 6), uint64]) -> Tensor[(3, 4, 6), uint64] {
  %614 = cast(%var_7680, dtype="uint64") /* ty=uint64 */;
  %615 = cast(%var_7681, dtype="uint64") /* ty=Tensor[(3, 4, 6), uint64] */;
  multiply(%614, %615) /* ty=Tensor[(3, 4, 6), uint64] */
}

def @func_7736(%var_7716: Tensor[(5, 5, 2), float64], %var_7722: Tensor[(5, 5, 2), bool]) -> Tensor[(5, 5, 2), int64] {
  %616 = cast(meta[relay.Constant][25] /* ty=Tensor[(5, 5, 2), float64] */, dtype="bool") /* ty=Tensor[(5, 5, 2), bool] */;
  %617 = shape_of(%var_7716, dtype="int32") /* ty=Tensor[(3), int32] */;
  %618 = cast(%var_7716, dtype="bool") /* ty=Tensor[(5, 5, 2), bool] */;
  %619 = dyn.reshape(%616, %617, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %620 = greater_equal(%618, %619) /* ty=Tensor[(5, 5, 2), bool] */;
  %621 = cast(%var_7722, dtype="int64") /* ty=Tensor[(5, 5, 2), int64] */;
  %622 = shape_of(%620, dtype="int32") /* ty=Tensor[(3), int32] */;
  %623 = cast(%620, dtype="int64") /* ty=Tensor[(5, 5, 2), int64] */;
  %624 = dyn.reshape(%621, %622, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  subtract(%623, %624) /* ty=Tensor[(5, 5, 2), int64] */
}

def @func_6859() -> (Tensor[(13, 5, 2), float32], Tensor[(3, 14, 15), float64], Tensor[(630), int32], Tensor[(13, 5, 2), float32]) {
  %625 = @func_4865() /* ty=(Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) */;
  %626 = %625.0;
  %627 = cast(%626, dtype="float32") /* ty=Tensor[(13, 5, 2), float32] */;
  %628 = cast(meta[relay.Constant][26] /* ty=Tensor[(630), int32] */, dtype="int32") /* ty=Tensor[(630), int32] */;
  %629 = cast(meta[relay.Constant][26] /* ty=Tensor[(630), int32] */, dtype="int32") /* ty=Tensor[(630), int32] */;
  %630 = reshape(%628, newshape=[3, 14, 15]) /* ty=Tensor[(3, 14, 15), int32] */;
  %631 = reshape(%629, newshape=[3, 14, 15]) /* ty=Tensor[(3, 14, 15), int32] */;
  %632 = @func_4235(%630, %631) /* ty=(Tensor[(3, 14, 15), bool], Tensor[(12, 10, 5), uint8], Tensor[(600), uint8], Tensor[(3, 14, 15), float64]) */;
  %633 = @func_3213() /* ty=(Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) */;
  %634 = erf(%627) /* ty=Tensor[(13, 5, 2), float32] */;
  %635 = %632.3;
  %636 = %633.1;
  (%634, %635, meta[relay.Constant][26] /* ty=Tensor[(630), int32] */, %636)
}

def @func_9604() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), int8]) {
  @func_9602() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), int8]) */
}

def @func_10370() -> (Tensor[(13, 5, 2), float32],) {
  %637 = @func_5584() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %638 = %637.0;
  (%638,)
}

def @func_7393(%var_7391: Tensor[(1950), float32], %var_7392: Tensor[(14), float32]) -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 10, 15), float32], Tensor[(1950), float32], Tensor[(14), float32], Tensor[(168), float32]) {
  %650 = fn (%var_7356: Tensor[(1950), float32], %var_7357: Tensor[(14), float32]) -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 10, 15), float32], Tensor[(1950), float32], Tensor[(14), float32], Tensor[(168), float32]) {
    %639 = @func_1967() /* ty=(Tensor[(13, 5, 2), float32],) */;
    %640 = cast(%var_7356, dtype="float32") /* ty=Tensor[(1950), float32] */;
    %641 = cast(%var_7357, dtype="float32") /* ty=Tensor[(14), float32] */;
    %642 = reshape(%640, newshape=[13, 10, 15]) /* ty=Tensor[(13, 10, 15), float32] */;
    %643 = reshape(%641, newshape=[14]) /* ty=Tensor[(14), float32] */;
    %644 = @func_2038(%642, %643) /* ty=(Tensor[(13, 10, 15), float32], Tensor[(13, 5, 2), int64], Tensor[(14), float32]) */;
    %645 = @func_6503() /* ty=(Tensor[(168), float32],) */;
    %646 = %639.0;
    %647 = @func_1708() /* ty=Tensor[(13, 5, 2), float32] */;
    %648 = %644.0;
    %649 = %645.0;
    (%646, %647, %648, %var_7356, %var_7357, %649)
  };
  %650(%var_7391, %var_7392) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 10, 15), float32], Tensor[(1950), float32], Tensor[(14), float32], Tensor[(168), float32]) */
}

def @func_11428() -> (Tensor[(13, 5, 2), float32],) {
  @func_11426() /* ty=(Tensor[(13, 5, 2), float32],) */
}

def @func_1360() -> Tensor[(13, 5, 2), float32] {
  @func_1354() /* ty=Tensor[(13, 5, 2), float32] */
}

def @func_13320() -> (Tensor[(2464), float32],) {
  @func_13318() /* ty=(Tensor[(2464), float32],) */
}

def @func_11920() -> (Tensor[(13, 5, 2), float32],) {
  @func_11918() /* ty=(Tensor[(13, 5, 2), float32],) */
}

def @func_12154(%var_12152: Tensor[(1950), float32], %var_12153: float32) -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(1950), float32], Tensor[(1950), float32], Tensor[(13, 5, 2), float32], Tensor[(1, 14), float32], float32, Tensor[(14), float32]) {
  @func_12150(%var_12152, %var_12153) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(1950), float32], Tensor[(1950), float32], Tensor[(13, 5, 2), float32], Tensor[(1, 14), float32], float32, Tensor[(14), float32]) */
}

def @func_8964() -> (Tensor[(13, 5, 2), float32], Tensor[(1, 1, 13), float64], Tensor[(13), float64], Tensor[(13, 5, 2), int8]) {
  %651 = cast(meta[relay.Constant][27] /* ty=Tensor[(13), float64] */, dtype="float64") /* ty=Tensor[(13), float64] */;
  %652 = reshape(%651, newshape=[1, 1, 13]) /* ty=Tensor[(1, 1, 13), float64] */;
  %653 = @func_3127() /* ty=(Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) */;
  %654 = @func_7514() /* ty=Tensor[(13, 5, 2), float32] */;
  %655 = @func_7830(%652) /* ty=Tensor[(1, 1, 13), float64] */;
  %656 = %653.2;
  (%654, %655, meta[relay.Constant][27] /* ty=Tensor[(13), float64] */, %656)
}

def @func_3624() -> Tensor[(13, 5, 2), float32] {
  %657 = @func_1708() /* ty=Tensor[(13, 5, 2), float32] */;
  %658 = cast(%657, dtype="float32") /* ty=Tensor[(13, 5, 2), float32] */;
  atanh(%658) /* ty=Tensor[(13, 5, 2), float32] */
}

def @func_6159() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) {
  %662 = fn () -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) {
    %659 = @func_1690() /* ty=(Tensor[(13, 5, 2), float32],) */;
    %660 = %659.0;
    %661 = @func_1762() /* ty=Tensor[(13, 5, 2), int8] */;
    (%660, %661)
  };
  %662() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) */
}

def @func_8644(%var_8643: Tensor[(864), float32]) -> (Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32], Tensor[(9, 12, 8), float32], Tensor[(864), float32]) {
  %670 = fn (%var_8636: Tensor[(864), float32]) -> (Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32], Tensor[(9, 12, 8), float32], Tensor[(864), float32]) {
    %663 = @func_4865() /* ty=(Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) */;
    %664 = cast(%var_8636, dtype="float32") /* ty=Tensor[(864), float32] */;
    %665 = reshape(%664, newshape=[9, 12, 8]) /* ty=Tensor[(9, 12, 8), float32] */;
    %666 = @func_2054(%665) /* ty=(Tensor[(9, 12, 8), float32],) */;
    %667 = %663.0;
    %668 = @func_7585() /* ty=Tensor[(13, 5, 2), float32] */;
    %669 = %666.0;
    (%667, %668, %669, %var_8636)
  };
  %670(%var_8643) /* ty=(Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32], Tensor[(9, 12, 8), float32], Tensor[(864), float32]) */
}

def @func_11918() -> (Tensor[(13, 5, 2), float32],) {
  %671 = @func_9211() /* ty=Tensor[(13, 5, 2), float32] */;
  (%671,)
}

def @func_2747() -> (Tensor[(2, 7, 12), float32], Tensor[(168), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float64]) {
  @func_2745() /* ty=(Tensor[(2, 7, 12), float32], Tensor[(168), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float64]) */
}

def @func_4174(%var_4172: Tensor[(2464), float32]) -> (Tensor[(13, 5, 2), float32], Tensor[(11, 16, 14), float32], Tensor[(2464), float32]) {
  @func_4171(%var_4172) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(11, 16, 14), float32], Tensor[(2464), float32]) */
}

def @func_2569() -> Tensor[(13, 5, 2), int8] {
  @func_1762() /* ty=Tensor[(13, 5, 2), int8] */
}

def @func_13025(%var_13023: Tensor[(10, 13, 3), float32]) -> (Tensor[(10, 13, 3), float32], Tensor[(10, 13, 3), float32]) {
  @func_13022(%var_13023) /* ty=(Tensor[(10, 13, 3), float32], Tensor[(10, 13, 3), float32]) */
}

def @func_9131(%var_9130: Tensor[(1950), float32]) -> (Tensor[(13, 5, 2), float32], Tensor[(13, 10, 15), float32], Tensor[(1950), float32], Tensor[(14), float32]) {
  %679 = fn (%var_9119: Tensor[(1950), float32]) -> (Tensor[(13, 5, 2), float32], Tensor[(13, 10, 15), float32], Tensor[(1950), float32], Tensor[(14), float32]) {
    %672 = cast(%var_9119, dtype="float32") /* ty=Tensor[(1950), float32] */;
    %673 = cast(meta[relay.Constant][28] /* ty=Tensor[(14), float32] */, dtype="float32") /* ty=Tensor[(14), float32] */;
    %674 = reshape(%672, newshape=[13, 10, 15]) /* ty=Tensor[(13, 10, 15), float32] */;
    %675 = reshape(%673, newshape=[14]) /* ty=Tensor[(14), float32] */;
    %676 = @func_2038(%674, %675) /* ty=(Tensor[(13, 10, 15), float32], Tensor[(13, 5, 2), int64], Tensor[(14), float32]) */;
    %677 = @func_8504() /* ty=Tensor[(13, 5, 2), float32] */;
    %678 = %676.0;
    (%677, %678, %var_9119, meta[relay.Constant][28] /* ty=Tensor[(14), float32] */)
  };
  %679(%var_9130) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 10, 15), float32], Tensor[(1950), float32], Tensor[(14), float32]) */
}

def @func_13940() -> (Tensor[(13, 5, 2), float32],) {
  %680 = @func_13613() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %681 = %680.0;
  (%681,)
}

def @func_13942() -> (Tensor[(13, 5, 2), float32],) {
  @func_13940() /* ty=(Tensor[(13, 5, 2), float32],) */
}

def @func_12462() -> Tensor[(13, 5, 2), uint8] {
  %683 = fn () -> Tensor[(13, 5, 2), uint8] {
    %682 = @func_5442() /* ty=(Tensor[(13, 5, 2), uint8],) */;
    %682.0
  };
  %683() /* ty=Tensor[(13, 5, 2), uint8] */
}

def @func_10525() -> (Tensor[(168), float32],) {
  %686 = fn () -> (Tensor[(168), float32],) {
    %684 = @func_8179() /* ty=(Tensor[(168), float32],) */;
    %685 = %684.0;
    (%685,)
  };
  %686() /* ty=(Tensor[(168), float32],) */
}

def @func_13418() -> (Tensor[(13, 5, 2), float32],) {
  %688 = fn () -> (Tensor[(13, 5, 2), float32],) {
    %687 = @func_7585() /* ty=Tensor[(13, 5, 2), float32] */;
    (%687,)
  };
  %688() /* ty=(Tensor[(13, 5, 2), float32],) */
}

def @func_12289() -> (Tensor[(13, 5, 2), int8], Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) {
  %689 = @func_6158() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) */;
  %690 = @func_4865() /* ty=(Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) */;
  %691 = %689.1;
  %692 = %690.0;
  %693 = @func_6778() /* ty=Tensor[(13, 5, 2), float32] */;
  (%691, %692, %693)
}

def @func_4613(%var_4589: Tensor[(1200), bool]) -> (Tensor[(13, 5, 2), float32], Tensor[(15, 5, 16), bool], Tensor[(1200), bool]) {
  %694 = @func_3213() /* ty=(Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) */;
  %695 = cast(%var_4589, dtype="bool") /* ty=Tensor[(1200), bool] */;
  %696 = reshape(%695, newshape=[15, 5, 16]) /* ty=Tensor[(15, 5, 16), bool] */;
  %697 = @func_1220(%696) /* ty=(Tensor[(15, 5, 16), bool],) */;
  %698 = %694.1;
  %699 = %697.0;
  (%698, %699, %var_4589)
}

def @func_6646() -> Tensor[(13, 5, 2), float32] {
  @func_6644() /* ty=Tensor[(13, 5, 2), float32] */
}

def @func_11565() -> (Tensor[(13, 5, 2), float32],) {
  @func_11563() /* ty=(Tensor[(13, 5, 2), float32],) */
}

def @func_7421() -> (Tensor[(11, 16, 14), float64], Tensor[(13, 5, 2), uint8]) {
  @func_7419() /* ty=(Tensor[(11, 16, 14), float64], Tensor[(13, 5, 2), uint8]) */
}

def @func_7802(%var_7800: Tensor[(300, 2), uint8]) -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(12, 10, 5), uint8], Tensor[(300, 2), uint8]) {
  @func_7799(%var_7800) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(12, 10, 5), uint8], Tensor[(300, 2), uint8]) */
}

def @func_7176(%var_7173: Tensor[(2464), float32]) -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8], Tensor[(2464), float32]) {
  %700 = @func_5813() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(1, 2464), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) */;
  %701 = cast(%var_7173, dtype="float32") /* ty=Tensor[(2464), float32] */;
  %702 = reshape(%701, newshape=[2464]) /* ty=Tensor[(2464), float32] */;
  %703 = @func_4396(%702) /* ty=(Tensor[(13, 5, 2), int8], Tensor[(13, 5, 2), float32], Tensor[(2464), float32]) */;
  %704 = %700.3;
  %705 = %703.0;
  (%704, %705, %var_7173)
}

def @func_9075() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32], Tensor[(168), float32]) {
  %716 = fn () -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32], Tensor[(168), float32]) {
    %706 = @func_6286() /* ty=(Tensor[(13, 5, 2), int8], Tensor[(13, 5, 2), float32]) */;
    %707 = @func_3213() /* ty=(Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) */;
    %708 = %707.0;
    %709 = cast(%708, dtype="float32") /* ty=Tensor[(13, 5, 2), float32] */;
    %710 = cast(meta[relay.Constant][29] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
    %711 = reshape(%709, newshape=[13, 5, 2]) /* ty=Tensor[(13, 5, 2), float32] */;
    %712 = reshape(%710, newshape=[168]) /* ty=Tensor[(168), float32] */;
    %713 = @func_2459(%711, %712) /* ty=(Tensor[(13, 5, 2), int64], Tensor[(14), float32], Tensor[(6, 14, 2), float32], Tensor[(168), float32], Tensor[(2, 7, 12), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), bool], Tensor[(13, 5, 2), float32]) */;
    %714 = %706.1;
    %715 = %713.5;
    (%714, %708, %715, meta[relay.Constant][29] /* ty=Tensor[(168), float32] */)
  };
  %716() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32], Tensor[(168), float32]) */
}

def @func_12018() -> Tensor[(13, 5, 2), int8] {
  %718 = fn () -> Tensor[(13, 5, 2), int8] {
    %717 = @func_4365() /* ty=(Tensor[(13, 5, 2), int8],) */;
    %717.0
  };
  %718() /* ty=Tensor[(13, 5, 2), int8] */
}

def @func_14191() -> (Tensor[(2464), float32], Tensor[(13, 5, 2), int8], Tensor[(13, 5, 2), float64], Tensor[(13, 5, 2), uint8]) {
  %726 = fn () -> (Tensor[(2464), float32], Tensor[(13, 5, 2), int8], Tensor[(13, 5, 2), float64], Tensor[(13, 5, 2), uint8]) {
    %719 = @func_7059() /* ty=(Tensor[(2464), float32],) */;
    %720 = @func_12289() /* ty=(Tensor[(13, 5, 2), int8], Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) */;
    %721 = @func_4967() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float64]) */;
    %722 = %719.0;
    %723 = %720.0;
    %724 = %721.1;
    %725 = @func_9538() /* ty=Tensor[(13, 5, 2), uint8] */;
    (%722, %723, %724, %725)
  };
  %726() /* ty=(Tensor[(2464), float32], Tensor[(13, 5, 2), int8], Tensor[(13, 5, 2), float64], Tensor[(13, 5, 2), uint8]) */
}

def @func_2677(%var_2675: Tensor[(15, 15, 3), float32]) -> (Tensor[(15, 15, 3), float32],) {
  @func_2674(%var_2675) /* ty=(Tensor[(15, 15, 3), float32],) */
}

def @func_13870() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) {
  %730 = fn () -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) {
    %727 = @func_4791() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8], float32, Tensor[(14), float32]) */;
    %728 = @func_6102() /* ty=Tensor[(13, 5, 2), float32] */;
    %729 = %727.0;
    (%728, %729)
  };
  %730() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) */
}

def @func_8042(%var_8040: Tensor[(1950), float32], %var_8041: Tensor[(14), float32]) -> (Tensor[(13, 5, 2), float32], Tensor[(1950), float32], Tensor[(1950), float32], Tensor[(14), float32], Tensor[(11, 16, 14), float64], Tensor[(4, 616), float32], Tensor[(13, 5, 2), float32], Tensor[(8, 3, 15), float64], Tensor[(360), float64]) {
  %750 = fn (%var_7964: Tensor[(1950), float32], %var_7965: Tensor[(14), float32]) -> (Tensor[(13, 5, 2), float32], Tensor[(1950), float32], Tensor[(1950), float32], Tensor[(14), float32], Tensor[(11, 16, 14), float64], Tensor[(4, 616), float32], Tensor[(13, 5, 2), float32], Tensor[(8, 3, 15), float64], Tensor[(360), float64]) {
    %731 = @func_2786() /* ty=(Tensor[(13, 5, 2), float32],) */;
    %732 = cast(%var_7964, dtype="float32") /* ty=Tensor[(1950), float32] */;
    %733 = cast(%var_7965, dtype="float32") /* ty=Tensor[(14), float32] */;
    %734 = reshape(%732, newshape=[1950]) /* ty=Tensor[(1950), float32] */;
    %735 = reshape(%733, newshape=[14]) /* ty=Tensor[(14), float32] */;
    %736 = @func_7390(%734, %735) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 10, 15), float32], Tensor[(1950), float32], Tensor[(14), float32], Tensor[(168), float32]) */;
    %737 = %731.0;
    %738 = cast(%737, dtype="float32") /* ty=Tensor[(13, 5, 2), float32] */;
    %739 = cast(meta[relay.Constant][30] /* ty=Tensor[(4, 616), float32] */, dtype="float32") /* ty=Tensor[(4, 616), float32] */;
    %740 = reshape(%738, newshape=[13, 5, 2]) /* ty=Tensor[(13, 5, 2), float32] */;
    %741 = reshape(%739, newshape=[2464]) /* ty=Tensor[(2464), float32] */;
    %742 = @func_1645(%740, %741) /* ty=(Tensor[(13, 5, 2), float64], Tensor[(11, 16, 14), float64]) */;
    %743 = @func_7914() /* ty=(Tensor[(13, 5, 2), float32],) */;
    %744 = cast(meta[relay.Constant][31] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
    %745 = reshape(%744, newshape=[8, 3, 15]) /* ty=Tensor[(8, 3, 15), float64] */;
    %746 = %736.3;
    %747 = %742.1;
    %748 = %743.0;
    %749 = @func_4875(%745) /* ty=Tensor[(8, 3, 15), float64] */;
    (%737, %746, %var_7964, %var_7965, %747, meta[relay.Constant][30] /* ty=Tensor[(4, 616), float32] */, %748, %749, meta[relay.Constant][31] /* ty=Tensor[(360), float64] */)
  };
  %750(%var_8040, %var_8041) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(1950), float32], Tensor[(1950), float32], Tensor[(14), float32], Tensor[(11, 16, 14), float64], Tensor[(4, 616), float32], Tensor[(13, 5, 2), float32], Tensor[(8, 3, 15), float64], Tensor[(360), float64]) */
}

def @func_14480(%var_14478: Tensor[(600), uint8]) -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8], Tensor[(600), uint8]) {
  @func_14477(%var_14478) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8], Tensor[(600), uint8]) */
}

def @func_13157() -> (Tensor[(13, 5, 2), float32],) {
  %751 = @func_9627() /* ty=Tensor[(13, 5, 2), float32] */;
  (%751,)
}

def @func_12416() -> Tensor[(14, 7, 5), float32] {
  @func_12414() /* ty=Tensor[(14, 7, 5), float32] */
}

def @func_7159(%var_7158: Tensor[(5, 14, 1), float64]) -> Tensor[(5, 14, 1), float64] {
  %753 = fn (%var_7146: Tensor[(5, 14, 1), float64]) -> Tensor[(5, 14, 1), float64] {
    %752 = cast(%var_7146, dtype="float64") /* ty=Tensor[(5, 14, 1), float64] */;
    sinh(%752) /* ty=Tensor[(5, 14, 1), float64] */
  };
  %753(%var_7158) /* ty=Tensor[(5, 14, 1), float64] */
}

def @func_7914() -> (Tensor[(13, 5, 2), float32],) {
  %754 = @func_7514() /* ty=Tensor[(13, 5, 2), float32] */;
  (%754,)
}

def @func_9868() -> (Tensor[(13, 5, 2), float32],) {
  %757 = fn () -> (Tensor[(13, 5, 2), float32],) {
    %755 = @func_7672() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) */;
    %756 = %755.0;
    (%756,)
  };
  %757() /* ty=(Tensor[(13, 5, 2), float32],) */
}

def @func_11510() -> (Tensor[(13, 5, 2), float32],) {
  %760 = fn () -> (Tensor[(13, 5, 2), float32],) {
    %758 = @func_6240() /* ty=(float32, Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) */;
    %759 = %758.2;
    (%759,)
  };
  %760() /* ty=(Tensor[(13, 5, 2), float32],) */
}

def @func_4239(%var_4237: Tensor[(3, 14, 15), int32], %var_4238: Tensor[(3, 14, 15), int32]) -> (Tensor[(3, 14, 15), bool], Tensor[(12, 10, 5), uint8], Tensor[(600), uint8], Tensor[(3, 14, 15), float64]) {
  @func_4235(%var_4237, %var_4238) /* ty=(Tensor[(3, 14, 15), bool], Tensor[(12, 10, 5), uint8], Tensor[(600), uint8], Tensor[(3, 14, 15), float64]) */
}

def @func_5148(%var_5147: Tensor[(168), float32]) -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(168), float32], Tensor[(168), float32], Tensor[(13, 5, 2), float64], Tensor[(6, 14, 2), float32], Tensor[(11, 16, 14), float32], Tensor[(2464), float32]) {
  %780 = fn (%var_5096: Tensor[(168), float32]) -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(168), float32], Tensor[(168), float32], Tensor[(13, 5, 2), float64], Tensor[(6, 14, 2), float32], Tensor[(11, 16, 14), float32], Tensor[(2464), float32]) {
    %761 = @func_2786() /* ty=(Tensor[(13, 5, 2), float32],) */;
    %762 = cast(%var_5096, dtype="float32") /* ty=Tensor[(168), float32] */;
    %763 = reshape(%762, newshape=[168]) /* ty=Tensor[(168), float32] */;
    %764 = @func_3390(%763) /* ty=(Tensor[(13, 5, 2), int8], Tensor[(6, 14, 2), float32], Tensor[(168), float32]) */;
    %765 = @func_4967() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float64]) */;
    %766 = @func_1989() /* ty=Tensor[(13, 5, 2), float32] */;
    %767 = cast(%766, dtype="float32") /* ty=Tensor[(13, 5, 2), float32] */;
    %768 = %764.2;
    %769 = cast(%768, dtype="float32") /* ty=Tensor[(168), float32] */;
    %770 = reshape(%767, newshape=[13, 5, 2]) /* ty=Tensor[(13, 5, 2), float32] */;
    %771 = reshape(%769, newshape=[168]) /* ty=Tensor[(168), float32] */;
    %772 = @func_2119(%770, %771) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), bool], Tensor[(13, 5, 2), float32], Tensor[(6, 14, 2), float32], Tensor[(168), float32]) */;
    %773 = cast(meta[relay.Constant][32] /* ty=Tensor[(2464), float32] */, dtype="float32") /* ty=Tensor[(2464), float32] */;
    %774 = reshape(%773, newshape=[4, 616]) /* ty=Tensor[(4, 616), float32] */;
    %775 = @func_3198(%774) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(11, 16, 14), float32], Tensor[(4, 616), float32]) */;
    %776 = %761.0;
    %777 = %765.1;
    %778 = %772.3;
    %779 = %775.1;
    (%776, %766, %768, %var_5096, %777, %778, %779, meta[relay.Constant][32] /* ty=Tensor[(2464), float32] */)
  };
  %780(%var_5147) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(168), float32], Tensor[(168), float32], Tensor[(13, 5, 2), float64], Tensor[(6, 14, 2), float32], Tensor[(11, 16, 14), float32], Tensor[(2464), float32]) */
}

def @func_13997() -> (Tensor[(13, 5, 2), float32],) {
  %783 = fn () -> (Tensor[(13, 5, 2), float32],) {
    %781 = @func_13963() /* ty=(Tensor[(13, 5, 2), float32],) */;
    %782 = %781.0;
    (%782,)
  };
  %783() /* ty=(Tensor[(13, 5, 2), float32],) */
}

def @func_10909(%var_10844: Tensor[(600), uint8]) -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8], Tensor[(12, 10, 5), uint8], Tensor[(600), uint8], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(168), float32], Tensor[(13, 5, 2), float32]) {
  %784 = @func_10166() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %785 = @func_1375() /* ty=(Tensor[(13, 5, 2), uint8],) */;
  %786 = cast(%var_10844, dtype="uint8") /* ty=Tensor[(600), uint8] */;
  %787 = reshape(%786, newshape=[12, 10, 5]) /* ty=Tensor[(12, 10, 5), uint8] */;
  %788 = @func_6811() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %789 = @func_10009() /* ty=(Tensor[(13, 5, 2), int8], Tensor[(13, 5, 2), uint8], Tensor[(168), float32]) */;
  %790 = %784.0;
  %791 = %785.0;
  %792 = @func_3009(%787) /* ty=Tensor[(12, 10, 5), uint8] */;
  %793 = %788.0;
  %794 = @func_3873() /* ty=Tensor[(13, 5, 2), float32] */;
  %795 = %789.2;
  %796 = @func_3624() /* ty=Tensor[(13, 5, 2), float32] */;
  (%790, %791, %792, %var_10844, %793, %794, %795, %796)
}

def @func_1177(%var_1175: float32, %var_1176: Tensor[(1, 14), float32]) -> (Tensor[(1, 14), float32],) {
  %800 = fn (%var_1166: float32, %var_1167: Tensor[(1, 14), float32]) -> (Tensor[(1, 14), float32],) {
    %797 = cast(%var_1166, dtype="float32") /* ty=float32 */;
    %798 = cast(%var_1167, dtype="float32") /* ty=Tensor[(1, 14), float32] */;
    %799 = floor_divide(%797, %798) /* ty=Tensor[(1, 14), float32] */;
    (%799,)
  };
  %800(%var_1175, %var_1176) /* ty=(Tensor[(1, 14), float32],) */
}

def @func_3626() -> Tensor[(13, 5, 2), float32] {
  @func_3624() /* ty=Tensor[(13, 5, 2), float32] */
}

def @func_3012(%var_3010: Tensor[(12, 10, 5), uint8]) -> Tensor[(12, 10, 5), uint8] {
  @func_3009(%var_3010) /* ty=Tensor[(12, 10, 5), uint8] */
}

def @func_10087(%var_10084: uint8, %var_10085: Tensor[(2, 2, 7), uint8], %var_10086: Tensor[(168), float32]) -> (Tensor[(2, 2, 7), bool], Tensor[(13, 5, 2), float32], Tensor[(168), float32], Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) {
  %811 = fn (%var_10043: uint8, %var_10044: Tensor[(2, 2, 7), uint8], %var_10052: Tensor[(168), float32]) -> (Tensor[(2, 2, 7), bool], Tensor[(13, 5, 2), float32], Tensor[(168), float32], Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) {
    %801 = cast(%var_10043, dtype="bool") /* ty=bool */;
    %802 = cast(%var_10044, dtype="bool") /* ty=Tensor[(2, 2, 7), bool] */;
    %803 = cast(%var_10052, dtype="float32") /* ty=Tensor[(168), float32] */;
    %804 = reshape(%803, newshape=[168]) /* ty=Tensor[(168), float32] */;
    %805 = @func_5146(%804) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(168), float32], Tensor[(168), float32], Tensor[(13, 5, 2), float64], Tensor[(6, 14, 2), float32], Tensor[(11, 16, 14), float32], Tensor[(2464), float32]) */;
    %806 = @func_1375() /* ty=(Tensor[(13, 5, 2), uint8],) */;
    %807 = equal(%801, %802) /* ty=Tensor[(2, 2, 7), bool] */;
    %808 = %805.0;
    %809 = %806.0;
    %810 = @func_1708() /* ty=Tensor[(13, 5, 2), float32] */;
    (%807, %808, %var_10052, %809, %810)
  };
  %811(%var_10084, %var_10085, %var_10086) /* ty=(Tensor[(2, 2, 7), bool], Tensor[(13, 5, 2), float32], Tensor[(168), float32], Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) */
}

def @func_11153(%var_11142: Tensor[(1950), float32]) -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float64], Tensor[(4, 616), float32], Tensor[(1950), float32], Tensor[(14), float32]) {
  %812 = @func_10190() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %813 = @func_1738() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %814 = @func_1928() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float64], Tensor[(2464), float32]) */;
  %815 = cast(%var_11142, dtype="float32") /* ty=Tensor[(1950), float32] */;
  %816 = cast(meta[relay.Constant][33] /* ty=Tensor[(14), float32] */, dtype="float32") /* ty=Tensor[(14), float32] */;
  %817 = reshape(%815, newshape=[1950]) /* ty=Tensor[(1950), float32] */;
  %818 = reshape(%816, newshape=[14]) /* ty=Tensor[(14), float32] */;
  %819 = @func_8039(%817, %818) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(1950), float32], Tensor[(1950), float32], Tensor[(14), float32], Tensor[(11, 16, 14), float64], Tensor[(4, 616), float32], Tensor[(13, 5, 2), float32], Tensor[(8, 3, 15), float64], Tensor[(360), float64]) */;
  %820 = %812.0;
  %821 = %813.0;
  %822 = %814.1;
  %823 = %819.5;
  (%820, %821, %822, %823, %var_11142, meta[relay.Constant][33] /* ty=Tensor[(14), float32] */)
}

def @func_11515() -> (Tensor[(13, 5, 2), float32],) {
  %824 = @func_6102() /* ty=Tensor[(13, 5, 2), float32] */;
  (%824,)
}

def @func_8161() -> Tensor[(2464), float32] {
  @func_8159() /* ty=Tensor[(2464), float32] */
}

def @func_8475() -> (Tensor[(630), int32],) {
  @func_8473() /* ty=(Tensor[(630), int32],) */
}

def @func_1817(%var_1777: Tensor[(14), float32]) -> (Tensor[(1, 14), float32], Tensor[(14), float32], Tensor[(13, 5, 2), int64], Tensor[(13, 5, 2), int8]) {
  %825 = cast(6.34185f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %826 = cast(%var_1777, dtype="float32") /* ty=Tensor[(14), float32] */;
  %827 = reshape(%825, newshape=[]) /* ty=float32 */;
  %828 = reshape(%826, newshape=[1, 14]) /* ty=Tensor[(1, 14), float32] */;
  %829 = @func_1174(%827, %828) /* ty=(Tensor[(1, 14), float32],) */;
  %830 = @func_1762() /* ty=Tensor[(13, 5, 2), int8] */;
  %831 = cast(%830, dtype="int64") /* ty=Tensor[(13, 5, 2), int64] */;
  %832 = cast(6.34185f /* ty=float32 */, dtype="int64") /* ty=int64 */;
  %833 = %829.0;
  %834 = left_shift(%831, %832) /* ty=Tensor[(13, 5, 2), int64] */;
  %835 = @func_1762() /* ty=Tensor[(13, 5, 2), int8] */;
  (%833, %var_1777, %834, %835)
}

def @func_5815() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(1, 2464), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) {
  @func_5813() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(1, 2464), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) */
}

def @func_7693(%var_7691: uint64, %var_7692: Tensor[(3, 4, 6), uint64]) -> Tensor[(3, 4, 6), uint64] {
  @func_7689(%var_7691, %var_7692) /* ty=Tensor[(3, 4, 6), uint64] */
}

def @func_10010() -> (Tensor[(13, 5, 2), int8], Tensor[(13, 5, 2), uint8], Tensor[(168), float32]) {
  %841 = fn () -> (Tensor[(13, 5, 2), int8], Tensor[(13, 5, 2), uint8], Tensor[(168), float32]) {
    %836 = @func_4365() /* ty=(Tensor[(13, 5, 2), int8],) */;
    %837 = @func_9796() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(168), float32]) */;
    %838 = %836.0;
    %839 = @func_2578() /* ty=Tensor[(13, 5, 2), uint8] */;
    %840 = %837.1;
    (%838, %839, %840)
  };
  %841() /* ty=(Tensor[(13, 5, 2), int8], Tensor[(13, 5, 2), uint8], Tensor[(168), float32]) */
}

def @func_8254(%var_8251: Tensor[(1, 10, 11), bool], %var_8252: Tensor[(3, 10, 11), bool], %var_8253: Tensor[(3, 10, 11), bool]) -> (Tensor[(3, 10, 11), float64], Tensor[(3, 10, 11), uint32], Tensor[(3, 10, 11), bool]) {
  @func_8249(%var_8251, %var_8252, %var_8253) /* ty=(Tensor[(3, 10, 11), float64], Tensor[(3, 10, 11), uint32], Tensor[(3, 10, 11), bool]) */
}

def @func_2608(%var_2606: Tensor[(2464), float32]) -> (Tensor[(13, 5, 2), float32], Tensor[(11, 16, 14), float32], Tensor[(2464), float32]) {
  @func_2605(%var_2606) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(11, 16, 14), float32], Tensor[(2464), float32]) */
}

def @func_9720() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) {
  %844 = fn () -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) {
    %842 = @func_9627() /* ty=Tensor[(13, 5, 2), float32] */;
    %843 = @func_5421() /* ty=Tensor[(13, 5, 2), float32] */;
    (%842, %843)
  };
  %844() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) */
}

def @func_3796() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) {
  @func_3794() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) */
}

def @func_11695() -> (Tensor[(13, 5, 2), float32], Tensor[(14, 7, 5), float32], Tensor[(2464), float32]) {
  %851 = fn () -> (Tensor[(13, 5, 2), float32], Tensor[(14, 7, 5), float32], Tensor[(2464), float32]) {
    %845 = @func_11071() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8]) */;
    %846 = @func_10460() /* ty=(Tensor[(3, 15, 15), float64], Tensor[(14, 7, 5), float32], Tensor[(1, 70), float32]) */;
    %847 = @func_10257() /* ty=(Tensor[(2464), float32],) */;
    %848 = %845.0;
    %849 = %846.1;
    %850 = %847.0;
    (%848, %849, %850)
  };
  %851() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(14, 7, 5), float32], Tensor[(2464), float32]) */
}

def @func_5928() -> Tensor[(13, 5, 2), float32] {
  %852 = fn () -> Tensor[(13, 5, 2), float32] {
    @func_5596() /* ty=Tensor[(13, 5, 2), float32] */
  };
  %852() /* ty=Tensor[(13, 5, 2), float32] */
}

def @func_6242() -> (float32, Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) {
  @func_6240() /* ty=(float32, Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) */
}

def @func_11517() -> (Tensor[(13, 5, 2), float32],) {
  @func_11515() /* ty=(Tensor[(13, 5, 2), float32],) */
}

def @func_12818() -> Tensor[(13, 5, 2), int8] {
  %853 = fn () -> Tensor[(13, 5, 2), int8] {
    @func_12017() /* ty=Tensor[(13, 5, 2), int8] */
  };
  %853() /* ty=Tensor[(13, 5, 2), int8] */
}

def @func_14101() -> (Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) {
  @func_14099() /* ty=(Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) */
}

def @func_3009(%var_3005: Tensor[(12, 10, 5), uint8]) -> Tensor[(12, 10, 5), uint8] {
  %854 = cast(meta[relay.Constant][34] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %855 = cast(%var_3005, dtype="uint8") /* ty=Tensor[(12, 10, 5), uint8] */;
  bitwise_xor(%854, %855) /* ty=Tensor[(12, 10, 5), uint8] */
}

def @func_4867() -> (Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) {
  @func_4865() /* ty=(Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) */
}

def @func_2178(%var_2171: Tensor[(2, 7, 12), float32]) -> Tensor[(2, 7, 12), float32] {
  %856 = cast(1.90848f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %857 = cast(%var_2171, dtype="float32") /* ty=Tensor[(2, 7, 12), float32] */;
  divide(%856, %857) /* ty=Tensor[(2, 7, 12), float32] */
}

def @func_8865() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) {
  %863 = fn () -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) {
    %858 = @func_6859() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(3, 14, 15), float64], Tensor[(630), int32], Tensor[(13, 5, 2), float32]) */;
    %859 = @func_1738() /* ty=(Tensor[(13, 5, 2), float32],) */;
    %860 = @func_5596() /* ty=Tensor[(13, 5, 2), float32] */;
    %861 = %858.3;
    %862 = %859.0;
    (%860, %861, %862)
  };
  %863() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) */
}

def @func_11563() -> (Tensor[(13, 5, 2), float32],) {
  %864 = @func_11224() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8], Tensor[(11, 16, 14), float64]) */;
  %865 = %864.0;
  (%865,)
}

def @func_1968() -> (Tensor[(13, 5, 2), float32],) {
  %868 = fn () -> (Tensor[(13, 5, 2), float32],) {
    %866 = @func_1928() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float64], Tensor[(2464), float32]) */;
    %867 = %866.0;
    (%867,)
  };
  %868() /* ty=(Tensor[(13, 5, 2), float32],) */
}

def @func_5453() -> (Tensor[(13, 5, 2), uint8],) {
  @func_5451() /* ty=(Tensor[(13, 5, 2), uint8],) */
}

def @func_5882(%var_5880: Tensor[(8, 308), float32], %var_5881: float32) -> (Tensor[(13, 5, 2), uint8], Tensor[(2464), bool], Tensor[(8, 308), float32], float32, Tensor[(14), float32], Tensor[(13, 5, 2), float32]) {
  %880 = fn (%var_5867: Tensor[(8, 308), float32], %var_5868: float32) -> (Tensor[(13, 5, 2), uint8], Tensor[(2464), bool], Tensor[(8, 308), float32], float32, Tensor[(14), float32], Tensor[(13, 5, 2), float32]) {
    %869 = @func_5442() /* ty=(Tensor[(13, 5, 2), uint8],) */;
    %870 = cast(%var_5867, dtype="float32") /* ty=Tensor[(8, 308), float32] */;
    %871 = cast(%var_5868, dtype="float32") /* ty=float32 */;
    %872 = cast(meta[relay.Constant][35] /* ty=Tensor[(14), float32] */, dtype="float32") /* ty=Tensor[(14), float32] */;
    %873 = reshape(%870, newshape=[2464]) /* ty=Tensor[(2464), float32] */;
    %874 = reshape(%871, newshape=[]) /* ty=float32 */;
    %875 = reshape(%872, newshape=[14]) /* ty=Tensor[(14), float32] */;
    %876 = @func_2888(%873, %874, %875) /* ty=(Tensor[(2464), bool], Tensor[(1, 14), float32], float32, Tensor[(14), float32]) */;
    %877 = %869.0;
    %878 = %876.0;
    %879 = @func_1360() /* ty=Tensor[(13, 5, 2), float32] */;
    (%877, %878, %var_5867, %var_5868, meta[relay.Constant][35] /* ty=Tensor[(14), float32] */, %879)
  };
  %880(%var_5880, %var_5881) /* ty=(Tensor[(13, 5, 2), uint8], Tensor[(2464), bool], Tensor[(8, 308), float32], float32, Tensor[(14), float32], Tensor[(13, 5, 2), float32]) */
}

def @func_1990() -> Tensor[(13, 5, 2), float32] {
  %881 = fn () -> Tensor[(13, 5, 2), float32] {
    @func_1354() /* ty=Tensor[(13, 5, 2), float32] */
  };
  %881() /* ty=Tensor[(13, 5, 2), float32] */
}

def @func_3948(%var_3946: Tensor[(4, 11, 8), int32]) -> Tensor[(4, 11, 8), int32] {
  @func_3945(%var_3946) /* ty=Tensor[(4, 11, 8), int32] */
}

def @func_11426() -> (Tensor[(13, 5, 2), float32],) {
  %882 = @func_2367() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) */;
  %883 = %882.0;
  (%883,)
}

def @func_7916() -> (Tensor[(13, 5, 2), float32],) {
  @func_7914() /* ty=(Tensor[(13, 5, 2), float32],) */
}

def @func_8062() -> (Tensor[(13, 5, 2), uint8],) {
  @func_8060() /* ty=(Tensor[(13, 5, 2), uint8],) */
}

def @func_12983() -> Tensor[(13, 5, 2), float32] {
  @func_12981() /* ty=Tensor[(13, 5, 2), float32] */
}

def @func_2459(%var_2397: Tensor[(13, 5, 2), float32], %var_2418: Tensor[(168), float32]) -> (Tensor[(13, 5, 2), int64], Tensor[(14), float32], Tensor[(6, 14, 2), float32], Tensor[(168), float32], Tensor[(2, 7, 12), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), bool], Tensor[(13, 5, 2), float32]) {
  %884 = cast(meta[relay.Constant][36] /* ty=Tensor[(14), float32] */, dtype="float32") /* ty=Tensor[(14), float32] */;
  %885 = reshape(%884, newshape=[14]) /* ty=Tensor[(14), float32] */;
  %886 = @func_1817(%885) /* ty=(Tensor[(1, 14), float32], Tensor[(14), float32], Tensor[(13, 5, 2), int64], Tensor[(13, 5, 2), int8]) */;
  %887 = cast(%var_2418, dtype="float32") /* ty=Tensor[(168), float32] */;
  %888 = reshape(%887, newshape=[6, 14, 2]) /* ty=Tensor[(6, 14, 2), float32] */;
  %889 = @func_1026(%888) /* ty=(Tensor[(6, 14, 2), float32], Tensor[(6, 14, 2), float32]) */;
  %890 = %889.1;
  %891 = cast(%890, dtype="float32") /* ty=Tensor[(6, 14, 2), float32] */;
  %892 = reshape(%891, newshape=[2, 7, 12]) /* ty=Tensor[(2, 7, 12), float32] */;
  %893 = cast(meta[relay.Constant][37] /* ty=Tensor[(13, 5, 2), float32] */, dtype="uint64") /* ty=Tensor[(13, 5, 2), uint64] */;
  %894 = shape_of(%var_2397, dtype="int32") /* ty=Tensor[(3), int32] */;
  %895 = cast(%var_2397, dtype="uint64") /* ty=Tensor[(13, 5, 2), uint64] */;
  %896 = dyn.reshape(%893, %894, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %897 = logical_xor(%895, %896) /* ty=Tensor[(13, 5, 2), uint64] */;
  %898 = cast(%var_2397, dtype="bool") /* ty=Tensor[(13, 5, 2), bool] */;
  %899 = shape_of(%897, dtype="int32") /* ty=Tensor[(3), int32] */;
  %900 = cast(%897, dtype="bool") /* ty=Tensor[(13, 5, 2), bool] */;
  %901 = dyn.reshape(%898, %899, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %902 = @func_1360() /* ty=Tensor[(13, 5, 2), float32] */;
  %903 = cast(%var_2397, dtype="float32") /* ty=Tensor[(13, 5, 2), float32] */;
  %904 = shape_of(%902, dtype="int32") /* ty=Tensor[(3), int32] */;
  %905 = cast(%902, dtype="float32") /* ty=Tensor[(13, 5, 2), float32] */;
  %906 = dyn.reshape(%903, %904, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %907 = divide(%905, %906) /* ty=Tensor[(13, 5, 2), float32] */;
  %908 = cast(%907, dtype="float32") /* ty=Tensor[(13, 5, 2), float32] */;
  %909 = %886.2;
  %910 = @func_2178(%892) /* ty=Tensor[(2, 7, 12), float32] */;
  %911 = @func_1360() /* ty=Tensor[(13, 5, 2), float32] */;
  %912 = logical_or(%900, %901) /* ty=Tensor[(13, 5, 2), bool] */;
  %913 = sqrt(%908) /* ty=Tensor[(13, 5, 2), float32] */;
  (%909, meta[relay.Constant][36] /* ty=Tensor[(14), float32] */, %890, %var_2418, %910, %911, %912, %913)
}

def @func_7740(%var_7738: Tensor[(5, 5, 2), float64], %var_7739: Tensor[(5, 5, 2), bool]) -> Tensor[(5, 5, 2), int64] {
  @func_7736(%var_7738, %var_7739) /* ty=Tensor[(5, 5, 2), int64] */
}

def @func_1863(%var_1861: Tensor[(1200), bool]) -> (Tensor[(13, 5, 2), float32], Tensor[(1200), bool], Tensor[(15, 5, 16), float32]) {
  @func_1860(%var_1861) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(1200), bool], Tensor[(15, 5, 16), float32]) */
}

def @func_13848(%var_13845: Tensor[(2, 1232), float32], %var_13846: Tensor[(416), float32]) -> (Tensor[(13, 5, 2), int8], Tensor[(13, 4, 8), int8], Tensor[(2, 1232), float32], Tensor[(416), float32]) {
  %914 = cast(%var_13845, dtype="float32") /* ty=Tensor[(2, 1232), float32] */;
  %915 = cast(%var_13846, dtype="float32") /* ty=Tensor[(416), float32] */;
  %916 = reshape(%914, newshape=[2464]) /* ty=Tensor[(2464), float32] */;
  %917 = reshape(%915, newshape=[13, 4, 8]) /* ty=Tensor[(13, 4, 8), float32] */;
  %918 = @func_669(%916, %917) /* ty=(Tensor[(11, 16, 14), bool], Tensor[(13, 4, 8), int8]) */;
  %919 = @func_12017() /* ty=Tensor[(13, 5, 2), int8] */;
  %920 = %918.1;
  (%919, %920, %var_13845, %var_13846)
}

def @func_3215() -> (Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) {
  @func_3213() /* ty=(Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) */
}

def @func_10033() -> (Tensor[(13, 5, 2), int8], Tensor[(416), float32]) {
  %921 = @func_3549() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8], float32, Tensor[(2464), float32], Tensor[(416), float32]) */;
  %922 = @func_2569() /* ty=Tensor[(13, 5, 2), int8] */;
  %923 = %921.5;
  (%922, %923)
}

def @func_1375() -> (Tensor[(13, 5, 2), uint8],) {
  %924 = @func_1360() /* ty=Tensor[(13, 5, 2), float32] */;
  %925 = cast(meta[relay.Constant][38] /* ty=Tensor[(13, 5, 2), float32] */, dtype="uint8") /* ty=Tensor[(13, 5, 2), uint8] */;
  %926 = shape_of(%924, dtype="int32") /* ty=Tensor[(3), int32] */;
  %927 = cast(%924, dtype="uint8") /* ty=Tensor[(13, 5, 2), uint8] */;
  %928 = dyn.reshape(%925, %926, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %929 = add(%927, %928) /* ty=Tensor[(13, 5, 2), uint8] */;
  (%929,)
}

def @func_1648(%var_1646: Tensor[(13, 5, 2), float32], %var_1647: Tensor[(2464), float32]) -> (Tensor[(13, 5, 2), float64], Tensor[(11, 16, 14), float64]) {
  %945 = fn (%var_1603: Tensor[(13, 5, 2), float32], %var_1622: Tensor[(2464), float32]) -> (Tensor[(13, 5, 2), float64], Tensor[(11, 16, 14), float64]) {
    %930 = @func_1354() /* ty=Tensor[(13, 5, 2), float32] */;
    %931 = cast(%var_1603, dtype="float64") /* ty=Tensor[(13, 5, 2), float64] */;
    %932 = shape_of(%930, dtype="int32") /* ty=Tensor[(3), int32] */;
    %933 = cast(%930, dtype="float64") /* ty=Tensor[(13, 5, 2), float64] */;
    %934 = dyn.reshape(%931, %932, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %935 = cast(%var_1622, dtype="float32") /* ty=Tensor[(2464), float32] */;
    %936 = reshape(%935, newshape=[11, 16, 14]) /* ty=Tensor[(11, 16, 14), float32] */;
    %937 = @func_66(%936) /* ty=(Tensor[(11, 16, 14), float32],) */;
    %938 = %937.0;
    %939 = cast(%var_1622, dtype="float64") /* ty=Tensor[(2464), float64] */;
    %940 = shape_of(%938, dtype="int32") /* ty=Tensor[(3), int32] */;
    %941 = cast(%938, dtype="float64") /* ty=Tensor[(11, 16, 14), float64] */;
    %942 = dyn.reshape(%939, %940, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %943 = floor_divide(%933, %934) /* ty=Tensor[(13, 5, 2), float64] */;
    %944 = minimum(%941, %942) /* ty=Tensor[(11, 16, 14), float64] */;
    (%943, %944)
  };
  %945(%var_1646, %var_1647) /* ty=(Tensor[(13, 5, 2), float64], Tensor[(11, 16, 14), float64]) */
}

def @func_8473() -> (Tensor[(630), int32],) {
  %946 = @func_6859() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(3, 14, 15), float64], Tensor[(630), int32], Tensor[(13, 5, 2), float32]) */;
  %947 = %946.2;
  (%947,)
}

def @func_8966() -> (Tensor[(13, 5, 2), float32], Tensor[(1, 1, 13), float64], Tensor[(13), float64], Tensor[(13, 5, 2), int8]) {
  @func_8964() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(1, 1, 13), float64], Tensor[(13), float64], Tensor[(13, 5, 2), int8]) */
}

def @func_2713() -> Tensor[(2464), float32] {
  %948 = @func_2530() /* ty=(Tensor[(2464), float32],) */;
  %948.0
}

def @func_12150(%var_12139: Tensor[(1950), float32], %var_12147: float32) -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(1950), float32], Tensor[(1950), float32], Tensor[(13, 5, 2), float32], Tensor[(1, 14), float32], float32, Tensor[(14), float32]) {
  %949 = @func_7619() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %950 = @func_12092() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %951 = @func_9008() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(168), float32]) */;
  %952 = cast(%var_12139, dtype="float32") /* ty=Tensor[(1950), float32] */;
  %953 = reshape(%952, newshape=[1950]) /* ty=Tensor[(1950), float32] */;
  %954 = @func_11153(%953) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float64], Tensor[(4, 616), float32], Tensor[(1950), float32], Tensor[(14), float32]) */;
  %955 = @func_9008() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(168), float32]) */;
  %956 = cast(%var_12147, dtype="float32") /* ty=float32 */;
  %957 = cast(meta[relay.Constant][39] /* ty=Tensor[(14), float32] */, dtype="float32") /* ty=Tensor[(14), float32] */;
  %958 = reshape(%956, newshape=[]) /* ty=float32 */;
  %959 = reshape(%957, newshape=[1, 14]) /* ty=Tensor[(1, 14), float32] */;
  %960 = @func_1174(%958, %959) /* ty=(Tensor[(1, 14), float32],) */;
  %961 = %949.0;
  %962 = %950.0;
  %963 = %951.0;
  %964 = %954.4;
  %965 = %955.0;
  %966 = %960.0;
  (%961, %962, %963, %964, %var_12139, %965, %966, %var_12147, meta[relay.Constant][39] /* ty=Tensor[(14), float32] */)
}

def @func_5422() -> Tensor[(13, 5, 2), float32] {
  %967 = fn () -> Tensor[(13, 5, 2), float32] {
    @func_1360() /* ty=Tensor[(13, 5, 2), float32] */
  };
  %967() /* ty=Tensor[(13, 5, 2), float32] */
}

def @func_6240() -> (float32, Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) {
  %968 = @func_4791() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8], float32, Tensor[(14), float32]) */;
  %969 = @func_1967() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %970 = @func_1738() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %971 = %968.3;
  %972 = %969.0;
  %973 = %970.0;
  (%971, %972, %973)
}

def @func_2975() -> Tensor[(13, 5, 2), float32] {
  %975 = fn () -> Tensor[(13, 5, 2), float32] {
    %974 = @func_1690() /* ty=(Tensor[(13, 5, 2), float32],) */;
    %974.0
  };
  %975() /* ty=Tensor[(13, 5, 2), float32] */
}

def @func_2580() -> Tensor[(13, 5, 2), uint8] {
  @func_2578() /* ty=Tensor[(13, 5, 2), uint8] */
}

def @func_6780() -> Tensor[(13, 5, 2), float32] {
  @func_6778() /* ty=Tensor[(13, 5, 2), float32] */
}

def @func_6104() -> Tensor[(13, 5, 2), float32] {
  @func_6102() /* ty=Tensor[(13, 5, 2), float32] */
}

def @func_7833(%var_7831: Tensor[(1, 1, 13), float64]) -> Tensor[(1, 1, 13), float64] {
  @func_7830(%var_7831) /* ty=Tensor[(1, 1, 13), float64] */
}

def @func_2530() -> (Tensor[(2464), float32],) {
  %976 = @func_1928() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float64], Tensor[(2464), float32]) */;
  %977 = %976.2;
  (%977,)
}

def @func_10192() -> (Tensor[(13, 5, 2), float32],) {
  @func_10190() /* ty=(Tensor[(13, 5, 2), float32],) */
}

def @func_8144() -> (Tensor[(168), float32],) {
  %978 = @func_2745() /* ty=(Tensor[(2, 7, 12), float32], Tensor[(168), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float64]) */;
  %979 = %978.1;
  (%979,)
}

def @func_13063() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) {
  @func_13061() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) */
}

def @func_12934() -> (Tensor[(13, 5, 2), float32],) {
  %980 = @func_10370() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %981 = %980.0;
  (%981,)
}

def @func_8181() -> (Tensor[(168), float32],) {
  @func_8179() /* ty=(Tensor[(168), float32],) */
}

def @func_10461() -> (Tensor[(3, 15, 15), float64], Tensor[(14, 7, 5), float32], Tensor[(1, 70), float32]) {
  %988 = fn () -> (Tensor[(3, 15, 15), float64], Tensor[(14, 7, 5), float32], Tensor[(1, 70), float32]) {
    %982 = cast(meta[relay.Constant][40] /* ty=Tensor[(3, 15, 15), float64] */, dtype="float64") /* ty=Tensor[(3, 15, 15), float64] */;
    %983 = cast(meta[relay.Constant][41] /* ty=Tensor[(1, 70), float32] */, dtype="float32") /* ty=Tensor[(1, 70), float32] */;
    %984 = reshape(%983, newshape=[14, 1, 5]) /* ty=Tensor[(14, 1, 5), float32] */;
    %985 = @func_6704(%984) /* ty=(Tensor[(14, 7, 5), float32],) */;
    %986 = erf(%982) /* ty=Tensor[(3, 15, 15), float64] */;
    %987 = %985.0;
    (%986, %987, meta[relay.Constant][41] /* ty=Tensor[(1, 70), float32] */)
  };
  %988() /* ty=(Tensor[(3, 15, 15), float64], Tensor[(14, 7, 5), float32], Tensor[(1, 70), float32]) */
}

def @func_4548() -> (Tensor[(13, 5, 2), float32],) {
  @func_4546() /* ty=(Tensor[(13, 5, 2), float32],) */
}

def @func_12797(%var_12778: Tensor[(11, 15, 11), float32]) -> (Tensor[(11, 15, 11), float32], Tensor[(13, 5, 2), float32]) {
  %989 = cast(%var_12778, dtype="float32") /* ty=Tensor[(11, 15, 11), float32] */;
  %990 = @func_6990() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(11, 16, 14), float64], Tensor[(2464), float32]) */;
  %991 = tan(%989) /* ty=Tensor[(11, 15, 11), float32] */;
  %992 = %990.0;
  (%991, %992)
}

def @func_2054(%var_2050: Tensor[(9, 12, 8), float32]) -> (Tensor[(9, 12, 8), float32],) {
  %993 = cast(%var_2050, dtype="float32") /* ty=Tensor[(9, 12, 8), float32] */;
  %994 = cos(%993) /* ty=Tensor[(9, 12, 8), float32] */;
  (%994,)
}

def @func_11976() -> Tensor[(2464), float32] {
  @func_2713() /* ty=Tensor[(2464), float32] */
}

def @func_13385() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8]) {
  %1000 = fn () -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8]) {
    %995 = @func_9386() /* ty=(Tensor[(13, 5, 2), float32],) */;
    %996 = @func_7672() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) */;
    %997 = %995.0;
    %998 = %996.0;
    %999 = @func_9488() /* ty=Tensor[(13, 5, 2), uint8] */;
    (%997, %998, %999)
  };
  %1000() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8]) */
}

def @func_3393(%var_3391: Tensor[(168), float32]) -> (Tensor[(13, 5, 2), int8], Tensor[(6, 14, 2), float32], Tensor[(168), float32]) {
  @func_3390(%var_3391) /* ty=(Tensor[(13, 5, 2), int8], Tensor[(6, 14, 2), float32], Tensor[(168), float32]) */
}

def @func_13963() -> (Tensor[(13, 5, 2), float32],) {
  %1001 = @func_9475() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %1002 = %1001.0;
  (%1002,)
}

def @func_14319() -> (Tensor[(13, 5, 2), float32],) {
  %1005 = fn () -> (Tensor[(13, 5, 2), float32],) {
    %1003 = @func_6208() /* ty=(Tensor[(13, 5, 2), float32], float32) */;
    %1004 = %1003.0;
    (%1004,)
  };
  %1005() /* ty=(Tensor[(13, 5, 2), float32],) */
}

def @func_6022(%var_6019: Tensor[(4, 6, 14), uint32], %var_6020: Tensor[(4, 6, 14), uint32], %var_6021: Tensor[(1200), bool]) -> (Tensor[(4, 6, 14), bool], Tensor[(15, 5, 16), float32], Tensor[(1200), bool], Tensor[(4, 6, 14), float32], Tensor[(1188), float32], Tensor[(1188), float32]) {
  @func_6017(%var_6019, %var_6020, %var_6021) /* ty=(Tensor[(4, 6, 14), bool], Tensor[(15, 5, 16), float32], Tensor[(1200), bool], Tensor[(4, 6, 14), float32], Tensor[(1188), float32], Tensor[(1188), float32]) */
}

def @func_4503(%var_4501: Tensor[(2464), float32]) -> (Tensor[(13, 5, 2), float64], Tensor[(13, 5, 2), float64], Tensor[(2464), float32]) {
  @func_4500(%var_4501) /* ty=(Tensor[(13, 5, 2), float64], Tensor[(13, 5, 2), float64], Tensor[(2464), float32]) */
}

def @func_12065() -> (Tensor[(13, 5, 2), float32],) {
  @func_12063() /* ty=(Tensor[(13, 5, 2), float32],) */
}

def @func_13708() -> (Tensor[(2464), float32], Tensor[(13, 5, 2), float32]) {
  %1009 = fn () -> (Tensor[(2464), float32], Tensor[(13, 5, 2), float32]) {
    %1006 = @func_6811() /* ty=(Tensor[(13, 5, 2), float32],) */;
    %1007 = @func_4686() /* ty=Tensor[(2464), float32] */;
    %1008 = %1006.0;
    (%1007, %1008)
  };
  %1009() /* ty=(Tensor[(2464), float32], Tensor[(13, 5, 2), float32]) */
}

def @func_12398() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) {
  %1014 = fn () -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) {
    %1010 = @func_4791() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8], float32, Tensor[(14), float32]) */;
    %1011 = @func_3213() /* ty=(Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) */;
    %1012 = %1010.1;
    %1013 = %1011.1;
    (%1012, %1013)
  };
  %1014() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) */
}

def @func_6286() -> (Tensor[(13, 5, 2), int8], Tensor[(13, 5, 2), float32]) {
  %1015 = @func_2569() /* ty=Tensor[(13, 5, 2), int8] */;
  %1016 = @func_5596() /* ty=Tensor[(13, 5, 2), float32] */;
  (%1015, %1016)
}

def @func_9490() -> Tensor[(13, 5, 2), uint8] {
  @func_9488() /* ty=Tensor[(13, 5, 2), uint8] */
}

def @func_12443() -> Tensor[(13, 5, 2), uint8] {
  @func_2578() /* ty=Tensor[(13, 5, 2), uint8] */
}

def @func_6288() -> (Tensor[(13, 5, 2), int8], Tensor[(13, 5, 2), float32]) {
  @func_6286() /* ty=(Tensor[(13, 5, 2), int8], Tensor[(13, 5, 2), float32]) */
}

def @func_1362() -> Tensor[(13, 5, 2), float32] {
  @func_1360() /* ty=Tensor[(13, 5, 2), float32] */
}

def @func_2655(%var_2654: Tensor[(1232, 2), float32]) -> (Tensor[(11, 16, 14), float32], Tensor[(1232, 2), float32], Tensor[(13, 5, 2), float64]) {
  %1025 = fn (%var_2632: Tensor[(1232, 2), float32]) -> (Tensor[(11, 16, 14), float32], Tensor[(1232, 2), float32], Tensor[(13, 5, 2), float64]) {
    %1017 = cast(%var_2632, dtype="float32") /* ty=Tensor[(1232, 2), float32] */;
    %1018 = reshape(%1017, newshape=[11, 16, 14]) /* ty=Tensor[(11, 16, 14), float32] */;
    %1019 = @func_66(%1018) /* ty=(Tensor[(11, 16, 14), float32],) */;
    %1020 = @func_1738() /* ty=(Tensor[(13, 5, 2), float32],) */;
    %1021 = %1020.0;
    %1022 = cast(%1021, dtype="float64") /* ty=Tensor[(13, 5, 2), float64] */;
    %1023 = %1019.0;
    %1024 = exp(%1022) /* ty=Tensor[(13, 5, 2), float64] */;
    (%1023, %var_2632, %1024)
  };
  %1025(%var_2654) /* ty=(Tensor[(11, 16, 14), float32], Tensor[(1232, 2), float32], Tensor[(13, 5, 2), float64]) */
}

def @func_2674(%var_2660: Tensor[(15, 15, 3), float32]) -> (Tensor[(15, 15, 3), float32],) {
  %1026 = cast(%var_2660, dtype="float32") /* ty=Tensor[(15, 15, 3), float32] */;
  %1027 = asinh(%1026) /* ty=Tensor[(15, 15, 3), float32] */;
  (%1027,)
}

def @func_3875() -> Tensor[(13, 5, 2), float32] {
  @func_3873() /* ty=Tensor[(13, 5, 2), float32] */
}

def @func_10372() -> (Tensor[(13, 5, 2), float32],) {
  @func_10370() /* ty=(Tensor[(13, 5, 2), float32],) */
}

def @func_4324() -> (Tensor[(13, 5, 2), uint8],) {
  %1028 = @func_3213() /* ty=(Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) */;
  %1029 = %1028.0;
  (%1029,)
}

def @func_8274() -> (Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) {
  %1034 = fn () -> (Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) {
    %1030 = @func_1375() /* ty=(Tensor[(13, 5, 2), uint8],) */;
    %1031 = @func_7619() /* ty=(Tensor[(13, 5, 2), float32],) */;
    %1032 = %1030.0;
    %1033 = %1031.0;
    (%1032, %1033)
  };
  %1034() /* ty=(Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) */
}

def @func_4638() -> Tensor[(13, 5, 2), float32] {
  %1036 = fn () -> Tensor[(13, 5, 2), float32] {
    %1035 = @func_1690() /* ty=(Tensor[(13, 5, 2), float32],) */;
    %1035.0
  };
  %1036() /* ty=Tensor[(13, 5, 2), float32] */
}

def @func_1860(%var_1853: Tensor[(1200), bool]) -> (Tensor[(13, 5, 2), float32], Tensor[(1200), bool], Tensor[(15, 5, 16), float32]) {
  %1037 = cast(%var_1853, dtype="bool") /* ty=Tensor[(1200), bool] */;
  %1038 = reshape(%1037, newshape=[15, 5, 16]) /* ty=Tensor[(15, 5, 16), bool] */;
  %1039 = @func_1220(%1038) /* ty=(Tensor[(15, 5, 16), bool],) */;
  %1040 = %1039.0;
  %1041 = cast(%1040, dtype="float32") /* ty=Tensor[(15, 5, 16), float32] */;
  %1042 = @func_1708() /* ty=Tensor[(13, 5, 2), float32] */;
  %1043 = log(%1041) /* ty=Tensor[(15, 5, 16), float32] */;
  (%1042, %var_1853, %1043)
}

def @func_12694(%var_12662: Tensor[(4, 40), bool], %var_12677: Tensor[(4, 40), float32]) -> (Tensor[(13, 5, 2), float32], Tensor[(16, 5, 2), float32], Tensor[(4, 40), bool]) {
  %1044 = cast(%var_12662, dtype="bool") /* ty=Tensor[(4, 40), bool] */;
  %1045 = reshape(%1044, newshape=[16, 5, 2]) /* ty=Tensor[(16, 5, 2), bool] */;
  %1046 = @func_10752(%1045) /* ty=(Tensor[(16, 5, 2), float32], Tensor[(16, 5, 2), float32]) */;
  %1047 = cast(%var_12662, dtype="float32") /* ty=Tensor[(4, 40), float32] */;
  %1048 = acosh(%1047) /* ty=Tensor[(4, 40), float32] */;
  %1049 = cast(%var_12677, dtype="bool") /* ty=Tensor[(4, 40), bool] */;
  %1050 = shape_of(%1048, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1051 = cast(%1048, dtype="bool") /* ty=Tensor[(4, 40), bool] */;
  %1052 = dyn.reshape(%1049, %1050, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1053 = @func_9627() /* ty=Tensor[(13, 5, 2), float32] */;
  %1054 = %1046.1;
  %1055 = less_equal(%1051, %1052) /* ty=Tensor[(4, 40), bool] */;
  (%1053, %1054, %1055)
}

def @func_1556(%var_1539: Tensor[(1232, 2), float32], %var_1540: Tensor[(8, 52), float32]) -> (Tensor[(13, 5, 2), uint8], Tensor[(1, 14), float32], float32, Tensor[(14), float32], Tensor[(13, 4, 8), int8], Tensor[(1232, 2), float32], Tensor[(8, 52), float32], Tensor[(13, 5, 2), float32]) {
  %1056 = @func_1375() /* ty=(Tensor[(13, 5, 2), uint8],) */;
  %1057 = cast(-8.82264f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %1058 = cast(meta[relay.Constant][42] /* ty=Tensor[(14), float32] */, dtype="float32") /* ty=Tensor[(14), float32] */;
  %1059 = reshape(%1057, newshape=[]) /* ty=float32 */;
  %1060 = reshape(%1058, newshape=[1, 14]) /* ty=Tensor[(1, 14), float32] */;
  %1061 = @func_1174(%1059, %1060) /* ty=(Tensor[(1, 14), float32],) */;
  %1062 = cast(%var_1539, dtype="float32") /* ty=Tensor[(1232, 2), float32] */;
  %1063 = cast(%var_1540, dtype="float32") /* ty=Tensor[(8, 52), float32] */;
  %1064 = reshape(%1062, newshape=[2464]) /* ty=Tensor[(2464), float32] */;
  %1065 = reshape(%1063, newshape=[13, 4, 8]) /* ty=Tensor[(13, 4, 8), float32] */;
  %1066 = @func_669(%1064, %1065) /* ty=(Tensor[(11, 16, 14), bool], Tensor[(13, 4, 8), int8]) */;
  %1067 = %1056.0;
  %1068 = %1061.0;
  %1069 = %1066.1;
  %1070 = @func_1354() /* ty=Tensor[(13, 5, 2), float32] */;
  (%1067, %1068, -8.82264f /* ty=float32 */, meta[relay.Constant][42] /* ty=Tensor[(14), float32] */, %1069, %var_1539, %var_1540, %1070)
}

def @func_2787() -> (Tensor[(13, 5, 2), float32],) {
  %1072 = fn () -> (Tensor[(13, 5, 2), float32],) {
    %1071 = @func_1354() /* ty=Tensor[(13, 5, 2), float32] */;
    (%1071,)
  };
  %1072() /* ty=(Tensor[(13, 5, 2), float32],) */
}

def @func_4969() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float64]) {
  @func_4967() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float64]) */
}

def @func_1739() -> (Tensor[(13, 5, 2), float32],) {
  %1074 = fn () -> (Tensor[(13, 5, 2), float32],) {
    %1073 = @func_1708() /* ty=Tensor[(13, 5, 2), float32] */;
    (%1073,)
  };
  %1074() /* ty=(Tensor[(13, 5, 2), float32],) */
}

def @func_2368() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) {
  %1080 = fn () -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) {
    %1075 = @func_1967() /* ty=(Tensor[(13, 5, 2), float32],) */;
    %1076 = @func_1690() /* ty=(Tensor[(13, 5, 2), float32],) */;
    %1077 = @func_1360() /* ty=Tensor[(13, 5, 2), float32] */;
    %1078 = %1075.0;
    %1079 = %1076.0;
    (%1077, %1078, %1079)
  };
  %1080() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) */
}

def @func_3300(%var_3298: Tensor[(168), float32], %var_3299: Tensor[(2464), float32]) -> (Tensor[(13, 5, 2), float32], Tensor[(2, 7, 12), float32], Tensor[(168), float32], Tensor[(13, 5, 2), float64], Tensor[(6, 14, 2), float32], Tensor[(11, 16, 14), float32], Tensor[(2464), bool]) {
  @func_3296(%var_3298, %var_3299) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(2, 7, 12), float32], Tensor[(168), float32], Tensor[(13, 5, 2), float64], Tensor[(6, 14, 2), float32], Tensor[(11, 16, 14), float32], Tensor[(2464), bool]) */
}

def @func_10572(%var_10546: Tensor[(12, 12, 12), float32]) -> (Tensor[(12, 12, 12), float32],) {
  %1081 = cast(%var_10546, dtype="float32") /* ty=Tensor[(12, 12, 12), float32] */;
  %1082 = erf(%1081) /* ty=Tensor[(12, 12, 12), float32] */;
  (%1082,)
}

def @func_1028(%var_1027: Tensor[(6, 14, 2), float32]) -> (Tensor[(6, 14, 2), float32], Tensor[(6, 14, 2), float32]) {
  %1087 = fn (%var_1015: Tensor[(6, 14, 2), float32]) -> (Tensor[(6, 14, 2), float32], Tensor[(6, 14, 2), float32]) {
    %1083 = cast(%var_1015, dtype="float32") /* ty=Tensor[(6, 14, 2), float32] */;
    %1084 = cast(%var_1015, dtype="float32") /* ty=Tensor[(6, 14, 2), float32] */;
    %1085 = log(%1083) /* ty=Tensor[(6, 14, 2), float32] */;
    %1086 = sinh(%1084) /* ty=Tensor[(6, 14, 2), float32] */;
    (%1085, %1086)
  };
  %1087(%var_1027) /* ty=(Tensor[(6, 14, 2), float32], Tensor[(6, 14, 2), float32]) */
}

def @func_9368() -> (Tensor[(168), float32], Tensor[(13, 5, 2), float32], float32, Tensor[(2464), float32]) {
  %1098 = fn () -> (Tensor[(168), float32], Tensor[(13, 5, 2), float32], float32, Tensor[(2464), float32]) {
    %1088 = @func_8179() /* ty=(Tensor[(168), float32],) */;
    %1089 = cast(meta[relay.Constant][43] /* ty=Tensor[(2464), float32] */, dtype="float32") /* ty=Tensor[(2464), float32] */;
    %1090 = cast(-8.73247f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %1091 = reshape(%1089, newshape=[8, 308]) /* ty=Tensor[(8, 308), float32] */;
    %1092 = reshape(%1090, newshape=[]) /* ty=float32 */;
    %1093 = @func_5879(%1091, %1092) /* ty=(Tensor[(13, 5, 2), uint8], Tensor[(2464), bool], Tensor[(8, 308), float32], float32, Tensor[(14), float32], Tensor[(13, 5, 2), float32]) */;
    %1094 = cast(meta[relay.Constant][43] /* ty=Tensor[(2464), float32] */, dtype="float32") /* ty=Tensor[(2464), float32] */;
    %1095 = %1088.0;
    %1096 = %1093.5;
    %1097 = atan(%1094) /* ty=Tensor[(2464), float32] */;
    (%1095, %1096, -8.73247f /* ty=float32 */, %1097)
  };
  %1098() /* ty=(Tensor[(168), float32], Tensor[(13, 5, 2), float32], float32, Tensor[(2464), float32]) */
}

def @func_1560(%var_1558: Tensor[(1232, 2), float32], %var_1559: Tensor[(8, 52), float32]) -> (Tensor[(13, 5, 2), uint8], Tensor[(1, 14), float32], float32, Tensor[(14), float32], Tensor[(13, 4, 8), int8], Tensor[(1232, 2), float32], Tensor[(8, 52), float32], Tensor[(13, 5, 2), float32]) {
  @func_1556(%var_1558, %var_1559) /* ty=(Tensor[(13, 5, 2), uint8], Tensor[(1, 14), float32], float32, Tensor[(14), float32], Tensor[(13, 4, 8), int8], Tensor[(1232, 2), float32], Tensor[(8, 52), float32], Tensor[(13, 5, 2), float32]) */
}

def @func_12962(%var_12939: Tensor[(4, 15, 3), float32], %var_12949: Tensor[(352), int32]) -> (Tensor[(4, 15, 3), float32], Tensor[(4, 11, 8), int32], Tensor[(352), int32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) {
  %1099 = cast(%var_12939, dtype="float32") /* ty=Tensor[(4, 15, 3), float32] */;
  %1100 = cast(%var_12949, dtype="int32") /* ty=Tensor[(352), int32] */;
  %1101 = reshape(%1100, newshape=[4, 11, 8]) /* ty=Tensor[(4, 11, 8), int32] */;
  %1102 = @func_11636() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) */;
  %1103 = @func_4365() /* ty=(Tensor[(13, 5, 2), int8],) */;
  %1104 = exp(%1099) /* ty=Tensor[(4, 15, 3), float32] */;
  %1105 = @func_3945(%1101) /* ty=Tensor[(4, 11, 8), int32] */;
  %1106 = %1102.0;
  %1107 = %1103.0;
  (%1104, %1105, %var_12949, %1106, %1107)
}

def @func_10668() -> Tensor[(13, 5, 2), uint8] {
  %1109 = fn () -> Tensor[(13, 5, 2), uint8] {
    %1108 = @func_5442() /* ty=(Tensor[(13, 5, 2), uint8],) */;
    %1108.0
  };
  %1109() /* ty=Tensor[(13, 5, 2), uint8] */
}

def @func_4171(%var_4167: Tensor[(2464), float32]) -> (Tensor[(13, 5, 2), float32], Tensor[(11, 16, 14), float32], Tensor[(2464), float32]) {
  %1110 = cast(%var_4167, dtype="float32") /* ty=Tensor[(2464), float32] */;
  %1111 = reshape(%1110, newshape=[1232, 2]) /* ty=Tensor[(1232, 2), float32] */;
  %1112 = @func_2653(%1111) /* ty=(Tensor[(11, 16, 14), float32], Tensor[(1232, 2), float32], Tensor[(13, 5, 2), float64]) */;
  %1113 = @func_3624() /* ty=Tensor[(13, 5, 2), float32] */;
  %1114 = %1112.0;
  (%1113, %1114, %var_4167)
}

def @func_10912(%var_10910: Tensor[(600), uint8]) -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8], Tensor[(12, 10, 5), uint8], Tensor[(600), uint8], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(168), float32], Tensor[(13, 5, 2), float32]) {
  @func_10909(%var_10910) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8], Tensor[(12, 10, 5), uint8], Tensor[(600), uint8], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(168), float32], Tensor[(13, 5, 2), float32]) */
}

def @func_10190() -> (Tensor[(13, 5, 2), float32],) {
  %1115 = @func_10166() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %1116 = %1115.0;
  %1117 = @func_6590() /* ty=Tensor[(13, 5, 2), uint8] */;
  %1118 = cast(%1117, dtype="float32") /* ty=Tensor[(13, 5, 2), float32] */;
  %1119 = shape_of(%1116, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1120 = cast(%1116, dtype="float32") /* ty=Tensor[(13, 5, 2), float32] */;
  %1121 = dyn.reshape(%1118, %1119, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1122 = power(%1120, %1121) /* ty=Tensor[(13, 5, 2), float32] */;
  (%1122,)
}

def @func_13916() -> (Tensor[(13, 5, 2), int8], Tensor[(13, 5, 2), uint8]) {
  %1123 = @func_5451() /* ty=(Tensor[(13, 5, 2), uint8],) */;
  %1124 = @func_12817() /* ty=Tensor[(13, 5, 2), int8] */;
  %1125 = %1123.0;
  (%1124, %1125)
}

def @func_9249() -> (Tensor[(13, 5, 2), int8], Tensor[(13, 5, 2), float32]) {
  @func_9247() /* ty=(Tensor[(13, 5, 2), int8], Tensor[(13, 5, 2), float32]) */
}

def @func_4546() -> (Tensor[(13, 5, 2), float32],) {
  %1126 = @func_1690() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %1127 = %1126.0;
  (%1127,)
}

def @func_12063() -> (Tensor[(13, 5, 2), float32],) {
  %1128 = @func_10190() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %1129 = %1128.0;
  (%1129,)
}

def @func_14269(%var_14268: Tensor[(5, 14, 7), float32]) -> (Tensor[(5, 14, 7), float32],) {
  %1132 = fn (%var_14239: Tensor[(5, 14, 7), float32]) -> (Tensor[(5, 14, 7), float32],) {
    %1130 = cast(%var_14239, dtype="float32") /* ty=Tensor[(5, 14, 7), float32] */;
    %1131 = sin(%1130) /* ty=Tensor[(5, 14, 7), float32] */;
    (%1131,)
  };
  %1132(%var_14268) /* ty=(Tensor[(5, 14, 7), float32],) */
}

def @func_12698(%var_12696: Tensor[(4, 40), bool], %var_12697: Tensor[(4, 40), float32]) -> (Tensor[(13, 5, 2), float32], Tensor[(16, 5, 2), float32], Tensor[(4, 40), bool]) {
  @func_12694(%var_12696, %var_12697) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(16, 5, 2), float32], Tensor[(4, 40), bool]) */
}

def @func_7514() -> Tensor[(13, 5, 2), float32] {
  %1133 = @func_6158() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) */;
  %1133.0
}

def @func_7585() -> Tensor[(13, 5, 2), float32] {
  @func_6584() /* ty=Tensor[(13, 5, 2), float32] */
}

def @func_2532() -> (Tensor[(2464), float32],) {
  @func_2530() /* ty=(Tensor[(2464), float32],) */
}

def @func_10168() -> (Tensor[(13, 5, 2), float32],) {
  @func_10166() /* ty=(Tensor[(13, 5, 2), float32],) */
}

def @func_6644() -> Tensor[(13, 5, 2), float32] {
  %1134 = @func_1967() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %1134.0
}

def @func_9488() -> Tensor[(13, 5, 2), uint8] {
  %1135 = @func_5451() /* ty=(Tensor[(13, 5, 2), uint8],) */;
  %1135.0
}

def @func_5222(%var_5220: float32, %var_5221: Tensor[(11, 12, 9), float32]) -> (Tensor[(11, 12, 9), float32], Tensor[(11, 12, 9), bool], Tensor[(13, 5, 2), float32]) {
  %1144 = fn (%var_5184: float32, %var_5185: Tensor[(11, 12, 9), float32]) -> (Tensor[(11, 12, 9), float32], Tensor[(11, 12, 9), bool], Tensor[(13, 5, 2), float32]) {
    %1136 = cast(%var_5184, dtype="float32") /* ty=float32 */;
    %1137 = cast(%var_5185, dtype="float32") /* ty=Tensor[(11, 12, 9), float32] */;
    %1138 = cast(%var_5185, dtype="bool") /* ty=Tensor[(11, 12, 9), bool] */;
    %1139 = cast(%var_5184, dtype="bool") /* ty=bool */;
    %1140 = @func_1690() /* ty=(Tensor[(13, 5, 2), float32],) */;
    %1141 = power(%1136, %1137) /* ty=Tensor[(11, 12, 9), float32] */;
    %1142 = less_equal(%1138, %1139) /* ty=Tensor[(11, 12, 9), bool] */;
    %1143 = %1140.0;
    (%1141, %1142, %1143)
  };
  %1144(%var_5220, %var_5221) /* ty=(Tensor[(11, 12, 9), float32], Tensor[(11, 12, 9), bool], Tensor[(13, 5, 2), float32]) */
}

def @func_7562() -> (Tensor[(13, 5, 2), int8], Tensor[(13, 5, 2), float32]) {
  %1145 = @func_5712() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) */;
  %1146 = %1145.1;
  %1147 = @func_7514() /* ty=Tensor[(13, 5, 2), float32] */;
  (%1146, %1147)
}

def @func_5443() -> (Tensor[(13, 5, 2), uint8],) {
  %1150 = fn () -> (Tensor[(13, 5, 2), uint8],) {
    %1148 = @func_1375() /* ty=(Tensor[(13, 5, 2), uint8],) */;
    %1149 = %1148.0;
    (%1149,)
  };
  %1150() /* ty=(Tensor[(13, 5, 2), uint8],) */
}

def @func_5597() -> Tensor[(13, 5, 2), float32] {
  %1151 = fn () -> Tensor[(13, 5, 2), float32] {
    @func_3624() /* ty=Tensor[(13, 5, 2), float32] */
  };
  %1151() /* ty=Tensor[(13, 5, 2), float32] */
}

def @func_6625() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) {
  %1154 = fn () -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) {
    %1152 = @func_5908() /* ty=Tensor[(13, 5, 2), float32] */;
    %1153 = @func_4637() /* ty=Tensor[(13, 5, 2), float32] */;
    (%1152, %1153)
  };
  %1154() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) */
}

def @func_9433() -> (Tensor[(3, ?, 8), int32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) {
  %1166 = fn () -> (Tensor[(3, ?, 8), int32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) {
    %1155 = cast(meta[relay.Constant][44] /* ty=Tensor[(3, 1, 8), float32] */, dtype="float32") /* ty=Tensor[(3, 1, 8), float32] */;
    %1156 = cosh(%1155) /* ty=Tensor[(3, 1, 8), float32] */;
    %1157 = cast(meta[relay.Constant][44] /* ty=Tensor[(3, 1, 8), float32] */, dtype="int32") /* ty=Tensor[(3, 1, 8), int32] */;
    %1158 = shape_of(%1156, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1159 = cast(%1156, dtype="int32") /* ty=Tensor[(3, 1, 8), int32] */;
    %1160 = dyn.reshape(%1157, %1158, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %1161 = @func_7914() /* ty=(Tensor[(13, 5, 2), float32],) */;
    %1162 = @func_1738() /* ty=(Tensor[(13, 5, 2), float32],) */;
    %1163 = minimum(%1159, %1160) /* ty=Tensor[(3, ?, 8), int32] */;
    %1164 = %1161.0;
    %1165 = %1162.0;
    (%1163, %1164, %1165)
  };
  %1166() /* ty=(Tensor[(3, ?, 8), int32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) */
}

def @func_4967() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float64]) {
  %1167 = @func_1967() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %1168 = @func_1762() /* ty=Tensor[(13, 5, 2), int8] */;
  %1169 = cast(%1168, dtype="float64") /* ty=Tensor[(13, 5, 2), float64] */;
  %1170 = %1167.0;
  %1171 = asin(%1169) /* ty=Tensor[(13, 5, 2), float64] */;
  (%1170, %1171)
}

def @func_13303() -> (Tensor[(13, 5, 2), float64], Tensor[(13, 5, 2), float32], Tensor[(2464), float32], Tensor[(2464), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) {
  @func_13301() /* ty=(Tensor[(13, 5, 2), float64], Tensor[(13, 5, 2), float32], Tensor[(2464), float32], Tensor[(2464), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) */
}

def @func_12800(%var_12798: Tensor[(11, 15, 11), float32]) -> (Tensor[(11, 15, 11), float32], Tensor[(13, 5, 2), float32]) {
  @func_12797(%var_12798) /* ty=(Tensor[(11, 15, 11), float32], Tensor[(13, 5, 2), float32]) */
}

def @func_3213() -> (Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) {
  %1172 = @func_1375() /* ty=(Tensor[(13, 5, 2), uint8],) */;
  %1173 = @func_1738() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %1174 = %1172.0;
  %1175 = %1173.0;
  (%1174, %1175)
}

def @func_5639(%var_5624: Tensor[(1188), float32]) -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(1188), float32], Tensor[(2464), float64]) {
  %1176 = @func_2367() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) */;
  %1177 = cast(%var_5624, dtype="float32") /* ty=Tensor[(1188), float32] */;
  %1178 = reshape(%1177, newshape=[1188]) /* ty=Tensor[(1188), float32] */;
  %1179 = @func_5390(%1178) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(11, 12, 9), bool], float32, Tensor[(1188), float32], Tensor[(13, 5, 2), float32], Tensor[(11, 16, 14), float64], Tensor[(2464), float32], Tensor[(13, 5, 2), int8]) */;
  %1180 = cast(meta[relay.Constant][45] /* ty=Tensor[(2464), float32] */, dtype="float32") /* ty=Tensor[(2464), float32] */;
  %1181 = reshape(%1180, newshape=[11, 16, 14]) /* ty=Tensor[(11, 16, 14), float32] */;
  %1182 = @func_66(%1181) /* ty=(Tensor[(11, 16, 14), float32],) */;
  %1183 = %1182.0;
  %1184 = cast(%1183, dtype="float64") /* ty=Tensor[(11, 16, 14), float64] */;
  %1185 = shape_of(meta[relay.Constant][45] /* ty=Tensor[(2464), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1186 = cast(meta[relay.Constant][45] /* ty=Tensor[(2464), float32] */, dtype="float64") /* ty=Tensor[(2464), float64] */;
  %1187 = dyn.reshape(%1184, %1185, newshape=[]) /* ty=Tensor[(?), float64] */;
  %1188 = %1176.2;
  %1189 = %1179.0;
  %1190 = power(%1186, %1187) /* ty=Tensor[(2464), float64] */;
  (%1188, %1189, %var_5624, %1190)
}

def @func_3296(%var_3227: Tensor[(168), float32], %var_3249: Tensor[(2464), float32]) -> (Tensor[(13, 5, 2), float32], Tensor[(2, 7, 12), float32], Tensor[(168), float32], Tensor[(13, 5, 2), float64], Tensor[(6, 14, 2), float32], Tensor[(11, 16, 14), float32], Tensor[(2464), bool]) {
  %1191 = cast(%var_3227, dtype="float32") /* ty=Tensor[(168), float32] */;
  %1192 = reshape(%1191, newshape=[2, 7, 12]) /* ty=Tensor[(2, 7, 12), float32] */;
  %1193 = @func_2745() /* ty=(Tensor[(2, 7, 12), float32], Tensor[(168), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float64]) */;
  %1194 = @func_1360() /* ty=Tensor[(13, 5, 2), float32] */;
  %1195 = cast(%1194, dtype="float32") /* ty=Tensor[(13, 5, 2), float32] */;
  %1196 = @func_2178(%1192) /* ty=Tensor[(2, 7, 12), float32] */;
  %1197 = cast(%1196, dtype="float32") /* ty=Tensor[(2, 7, 12), float32] */;
  %1198 = reshape(%1195, newshape=[13, 5, 2]) /* ty=Tensor[(13, 5, 2), float32] */;
  %1199 = reshape(%1197, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %1200 = @func_2119(%1198, %1199) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), bool], Tensor[(13, 5, 2), float32], Tensor[(6, 14, 2), float32], Tensor[(168), float32]) */;
  %1201 = cast(%var_3249, dtype="float32") /* ty=Tensor[(2464), float32] */;
  %1202 = reshape(%1201, newshape=[4, 616]) /* ty=Tensor[(4, 616), float32] */;
  %1203 = @func_3198(%1202) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(11, 16, 14), float32], Tensor[(4, 616), float32]) */;
  %1204 = cast(%var_3249, dtype="float32") /* ty=Tensor[(2464), float32] */;
  %1205 = reshape(%1204, newshape=[4, 616]) /* ty=Tensor[(4, 616), float32] */;
  %1206 = @func_3198(%1205) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(11, 16, 14), float32], Tensor[(4, 616), float32]) */;
  %1207 = %1206.1;
  %1208 = cast(%1207, dtype="bool") /* ty=Tensor[(11, 16, 14), bool] */;
  %1209 = shape_of(%var_3249, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1210 = cast(%var_3249, dtype="bool") /* ty=Tensor[(2464), bool] */;
  %1211 = dyn.reshape(%1208, %1209, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1212 = %1193.3;
  %1213 = %1200.3;
  %1214 = %1203.1;
  %1215 = logical_or(%1210, %1211) /* ty=Tensor[(2464), bool] */;
  (%1194, %1196, %var_3227, %1212, %1213, %1214, %1215)
}

def @func_11874() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) {
  @func_11872() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) */
}

def @func_13852(%var_13850: Tensor[(2, 1232), float32], %var_13851: Tensor[(416), float32]) -> (Tensor[(13, 5, 2), int8], Tensor[(13, 4, 8), int8], Tensor[(2, 1232), float32], Tensor[(416), float32]) {
  @func_13848(%var_13850, %var_13851) /* ty=(Tensor[(13, 5, 2), int8], Tensor[(13, 4, 8), int8], Tensor[(2, 1232), float32], Tensor[(416), float32]) */
}

def @func_2765() -> (Tensor[(13, 5, 2), float32],) {
  @func_2763() /* ty=(Tensor[(13, 5, 2), float32],) */
}

def @func_14036() -> (Tensor[(13, 5, 2), uint8],) {
  %1217 = fn () -> (Tensor[(13, 5, 2), uint8],) {
    %1216 = @func_12443() /* ty=Tensor[(13, 5, 2), uint8] */;
    (%1216,)
  };
  %1217() /* ty=(Tensor[(13, 5, 2), uint8],) */
}

def @func_12966(%var_12964: Tensor[(4, 15, 3), float32], %var_12965: Tensor[(352), int32]) -> (Tensor[(4, 15, 3), float32], Tensor[(4, 11, 8), int32], Tensor[(352), int32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) {
  @func_12962(%var_12964, %var_12965) /* ty=(Tensor[(4, 15, 3), float32], Tensor[(4, 11, 8), int32], Tensor[(352), int32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) */
}

def @func_13487() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) {
  %1222 = fn () -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) {
    %1218 = @func_3794() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) */;
    %1219 = @func_9867() /* ty=(Tensor[(13, 5, 2), float32],) */;
    %1220 = %1218.0;
    %1221 = %1219.0;
    (%1220, %1221)
  };
  %1222() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) */
}

def @func_8504() -> Tensor[(13, 5, 2), float32] {
  @func_7585() /* ty=Tensor[(13, 5, 2), float32] */
}

def @func_6325() -> (Tensor[(13, 5, 2), float32],) {
  @func_6323() /* ty=(Tensor[(13, 5, 2), float32],) */
}

def @func_9476() -> (Tensor[(13, 5, 2), float32],) {
  %1224 = fn () -> (Tensor[(13, 5, 2), float32],) {
    %1223 = @func_1708() /* ty=Tensor[(13, 5, 2), float32] */;
    (%1223,)
  };
  %1224() /* ty=(Tensor[(13, 5, 2), float32],) */
}

def @func_11336(%var_11297: Tensor[(864), float32]) -> (Tensor[(13, 5, 2), int8], Tensor[(13, 5, 2), float32], Tensor[(864), float32]) {
  %1225 = @func_10033() /* ty=(Tensor[(13, 5, 2), int8], Tensor[(416), float32]) */;
  %1226 = cast(%var_11297, dtype="float32") /* ty=Tensor[(864), float32] */;
  %1227 = reshape(%1226, newshape=[864]) /* ty=Tensor[(864), float32] */;
  %1228 = @func_8642(%1227) /* ty=(Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32], Tensor[(9, 12, 8), float32], Tensor[(864), float32]) */;
  %1229 = %1225.0;
  %1230 = %1228.1;
  (%1229, %1230, %var_11297)
}

def @func_3742(%var_3740: Tensor[(2464), float32]) -> (Tensor[(13, 5, 2), float32], Tensor[(416), float32], Tensor[(2464), float32]) {
  @func_3739(%var_3740) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(416), float32], Tensor[(2464), float32]) */
}

def @func_4792() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8], float32, Tensor[(14), float32]) {
  %1241 = fn () -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8], float32, Tensor[(14), float32]) {
    %1231 = @func_2786() /* ty=(Tensor[(13, 5, 2), float32],) */;
    %1232 = @func_2786() /* ty=(Tensor[(13, 5, 2), float32],) */;
    %1233 = @func_3213() /* ty=(Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) */;
    %1234 = cast(meta[relay.Constant][46] /* ty=Tensor[(14), float32] */, dtype="float32") /* ty=Tensor[(14), float32] */;
    %1235 = reshape(%1234, newshape=[14]) /* ty=Tensor[(14), float32] */;
    %1236 = @func_3816(%1235) /* ty=(float32, float32, Tensor[(2, 1232), float32], Tensor[(14), float32]) */;
    %1237 = %1231.0;
    %1238 = %1232.0;
    %1239 = %1233.0;
    %1240 = %1236.1;
    (%1237, %1238, %1239, %1240, meta[relay.Constant][46] /* ty=Tensor[(14), float32] */)
  };
  %1241() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8], float32, Tensor[(14), float32]) */
}

def @func_6323() -> (Tensor[(13, 5, 2), float32],) {
  %1242 = @func_4546() /* ty=(Tensor[(13, 5, 2), float32],) */;
  %1243 = %1242.0;
  (%1243,)
}

def @func_7564() -> (Tensor[(13, 5, 2), int8], Tensor[(13, 5, 2), float32]) {
  @func_7562() /* ty=(Tensor[(13, 5, 2), int8], Tensor[(13, 5, 2), float32]) */
}

def @func_11073() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8]) {
  @func_11071() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8]) */
}

def @func_6017(%var_5970: Tensor[(4, 6, 14), uint32], %var_5971: Tensor[(4, 6, 14), uint32], %var_5979: Tensor[(1200), bool]) -> (Tensor[(4, 6, 14), bool], Tensor[(15, 5, 16), float32], Tensor[(1200), bool], Tensor[(4, 6, 14), float32], Tensor[(1188), float32], Tensor[(1188), float32]) {
  %1244 = cast(%var_5971, dtype="bool") /* ty=Tensor[(4, 6, 14), bool] */;
  %1245 = shape_of(%var_5970, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1246 = cast(%var_5970, dtype="bool") /* ty=Tensor[(4, 6, 14), bool] */;
  %1247 = dyn.reshape(%1244, %1245, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1248 = cast(%var_5979, dtype="bool") /* ty=Tensor[(1200), bool] */;
  %1249 = reshape(%1248, newshape=[1200]) /* ty=Tensor[(1200), bool] */;
  %1250 = @func_1860(%1249) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(1200), bool], Tensor[(15, 5, 16), float32]) */;
  %1251 = cast(%var_5970, dtype="float32") /* ty=Tensor[(4, 6, 14), float32] */;
  %1252 = cast(meta[relay.Constant][47] /* ty=Tensor[(1188), float32] */, dtype="float32") /* ty=Tensor[(1188), float32] */;
  %1253 = reshape(%1252, newshape=[1188]) /* ty=Tensor[(1188), float32] */;
  %1254 = @func_5390(%1253) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(11, 12, 9), bool], float32, Tensor[(1188), float32], Tensor[(13, 5, 2), float32], Tensor[(11, 16, 14), float64], Tensor[(2464), float32], Tensor[(13, 5, 2), int8]) */;
  %1255 = less_equal(%1246, %1247) /* ty=Tensor[(4, 6, 14), bool] */;
  %1256 = %1250.2;
  %1257 = sin(%1251) /* ty=Tensor[(4, 6, 14), float32] */;
  %1258 = %1254.4;
  (%1255, %1256, %var_5979, %1257, %1258, meta[relay.Constant][47] /* ty=Tensor[(1188), float32] */)
}

def @func_4398(%var_4397: Tensor[(2464), float32]) -> (Tensor[(13, 5, 2), int8], Tensor[(13, 5, 2), float32], Tensor[(2464), float32]) {
  %1265 = fn (%var_4388: Tensor[(2464), float32]) -> (Tensor[(13, 5, 2), int8], Tensor[(13, 5, 2), float32], Tensor[(2464), float32]) {
    %1259 = @func_3794() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) */;
    %1260 = cast(%var_4388, dtype="float32") /* ty=Tensor[(2464), float32] */;
    %1261 = reshape(%1260, newshape=[2464]) /* ty=Tensor[(2464), float32] */;
    %1262 = @func_1500(%1261) /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(6, 14, 2), float32], Tensor[(42, 4), float32], Tensor[(13, 4, 8), int8], Tensor[(2464), float32], Tensor[(416), float32], Tensor[(13, 5, 2), float32]) */;
    %1263 = %1259.1;
    %1264 = %1262.1;
    (%1263, %1264, %var_4388)
  };
  %1265(%var_4397) /* ty=(Tensor[(13, 5, 2), int8], Tensor[(13, 5, 2), float32], Tensor[(2464), float32]) */
}

def @func_6706(%var_6705: Tensor[(14, 1, 5), float32]) -> (Tensor[(14, 7, 5), float32],) {
  %1269 = fn (%var_6699: Tensor[(14, 1, 5), float32]) -> (Tensor[(14, 7, 5), float32],) {
    %1266 = cast(%var_6699, dtype="float32") /* ty=Tensor[(14, 1, 5), float32] */;
    %1267 = cast(meta[relay.Constant][48] /* ty=Tensor[(14, 7, 5), float32] */, dtype="float32") /* ty=Tensor[(14, 7, 5), float32] */;
    %1268 = floor_divide(%1266, %1267) /* ty=Tensor[(14, 7, 5), float32] */;
    (%1268,)
  };
  %1269(%var_6705) /* ty=(Tensor[(14, 7, 5), float32],) */
}

def @func_8434() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) {
  %1273 = fn () -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) {
    %1270 = @func_5813() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32], Tensor[(1, 2464), float32], Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) */;
    %1271 = %1270.3;
    %1272 = @func_6778() /* ty=Tensor[(13, 5, 2), float32] */;
    (%1271, %1272)
  };
  %1273() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), float32]) */
}

def @func_5712() -> (Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) {
  %1274 = @func_3213() /* ty=(Tensor[(13, 5, 2), uint8], Tensor[(13, 5, 2), float32]) */;
  %1275 = @func_3794() /* ty=(Tensor[(13, 5, 2), float32], Tensor[(13, 5, 2), int8]) */;
  %1276 = %1274.1;
  %1277 = %1275.1;
  (%1276, %1277)
}

def @func_4877(%var_4876: Tensor[(8, 3, 15), float64]) -> Tensor[(8, 3, 15), float64] {
  %1279 = fn (%var_4871: Tensor[(8, 3, 15), float64]) -> Tensor[(8, 3, 15), float64] {
    %1278 = cast(%var_4871, dtype="float64") /* ty=Tensor[(8, 3, 15), float64] */;
    sqrt(%1278) /* ty=Tensor[(8, 3, 15), float64] */
  };
  %1279(%var_4876) /* ty=Tensor[(8, 3, 15), float64] */
}

def @func_8249(%var_8184: Tensor[(1, 10, 11), bool], %var_8185: Tensor[(3, 10, 11), bool], %var_8209: Tensor[(3, 10, 11), bool]) -> (Tensor[(3, 10, 11), float64], Tensor[(3, 10, 11), uint32], Tensor[(3, 10, 11), bool]) {
  %1280 = cast(%var_8184, dtype="bool") /* ty=Tensor[(1, 10, 11), bool] */;
  %1281 = cast(%var_8185, dtype="bool") /* ty=Tensor[(3, 10, 11), bool] */;
  %1282 = logical_and(%1280, %1281) /* ty=Tensor[(3, 10, 11), bool] */;
  %1283 = cast(%1282, dtype="float64") /* ty=Tensor[(3, 10, 11), float64] */;
  %1284 = cast(%var_8209, dtype="uint32") /* ty=Tensor[(3, 10, 11), uint32] */;
  %1285 = shape_of(%1282, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1286 = cast(%1282, dtype="uint32") /* ty=Tensor[(3, 10, 11), uint32] */;
  %1287 = dyn.reshape(%1284, %1285, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1288 = cast(%1282, dtype="float32") /* ty=Tensor[(3, 10, 11), float32] */;
  %1289 = asinh(%1288) /* ty=Tensor[(3, 10, 11), float32] */;
  %1290 = cast(%1289, dtype="float64") /* ty=Tensor[(3, 10, 11), float64] */;
  %1291 = rsqrt(%1290) /* ty=Tensor[(3, 10, 11), float64] */;
  %1292 = cast(%1291, dtype="bool") /* ty=Tensor[(3, 10, 11), bool] */;
  %1293 = cast(%var_8184, dtype="bool") /* ty=Tensor[(1, 10, 11), bool] */;
  %1294 = cos(%1283) /* ty=Tensor[(3, 10, 11), float64] */;
  %1295 = bitwise_and(%1286, %1287) /* ty=Tensor[(3, 10, 11), uint32] */;
  %1296 = less(%1292, %1293) /* ty=Tensor[(3, 10, 11), bool] */;
  (%1294, %1295, %1296)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen394/build/output.py:4738: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen394/build/output.py", line 4743, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(54) tvmgen_default_fused_logical_or_kernel0(signed char* __restrict__ T_logical_or, signed char* __restrict__ placeholder) {
  T_logical_or[(((int)threadIdx.x))] = ((signed char)((bool)placeholder[(((int)threadIdx.x))]));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


==========mod==========
#[version = "0.0.5"]
def @func_7976() -> (Tensor[(560), float64],) {
  %0 = @func_4728() /* ty=(Tensor[(560), float64], Tensor[(12, 7, 3), float32]) */;
  %1 = %0.0;
  (%1,)
}

def @func_4420(%var_4399: Tensor[(25), float32], %var_4400: Tensor[(585), int32]) -> (Tensor[(12, 7, 3), float32], Tensor[(7, ?, 10), int16], Tensor[(25), float32], Tensor[(585), int32], Tensor[(1260), float32], Tensor[(350, 3), float32], Tensor[(14, 9, 10), float32]) {
  %2 = @func_4295() /* ty=(Tensor[(12, 7, 3), float32],) */;
  %3 = cast(%var_4399, dtype="float32") /* ty=Tensor[(25), float32] */;
  %4 = cast(%var_4400, dtype="int32") /* ty=Tensor[(585), int32] */;
  %5 = cast(meta[relay.Constant][0] /* ty=Tensor[(1260), float32] */, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %6 = cast(meta[relay.Constant][1] /* ty=Tensor[(350, 3), float32] */, dtype="float32") /* ty=Tensor[(350, 3), float32] */;
  %7 = cast(meta[relay.Constant][1] /* ty=Tensor[(350, 3), float32] */, dtype="bool") /* ty=Tensor[(350, 3), bool] */;
  %8 = reshape(%3, newshape=[25]) /* ty=Tensor[(25), float32] */;
  %9 = reshape(%4, newshape=[585]) /* ty=Tensor[(585), int32] */;
  %10 = reshape(%5, newshape=[3, 420]) /* ty=Tensor[(3, 420), float32] */;
  %11 = reshape(%6, newshape=[7, 15, 10]) /* ty=Tensor[(7, 15, 10), float32] */;
  %12 = reshape(%7, newshape=[7, 15, 10]) /* ty=Tensor[(7, 15, 10), bool] */;
  %13 = @func_3372(%8, %9, %10, %11, %12) /* ty=(Tensor[(25), float32], Tensor[(585), int32], Tensor[(585), int32], Tensor[(9, 4, 9), float64], Tensor[(2250), float32], Tensor[(5, ?, 10), uint16], Tensor[(50), float64], Tensor[(3, 420), float64], Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), float32], Tensor[(7, ?, 10), int16], Tensor[(7, 15, 10), int8], Tensor[(7, 15, 10), float32]) */;
  %14 = cast(meta[relay.Constant][0] /* ty=Tensor[(1260), float32] */, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %15 = reshape(%14, newshape=[14, 9, 10]) /* ty=Tensor[(14, 9, 10), float32] */;
  %16 = %2.0;
  %17 = %13.11;
  %18 = @func_540(%15) /* ty=Tensor[(14, 9, 10), float32] */;
  (%16, %17, %var_4399, %var_4400, meta[relay.Constant][0] /* ty=Tensor[(1260), float32] */, meta[relay.Constant][1] /* ty=Tensor[(350, 3), float32] */, %18)
}

def @func_2423() -> (Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), float32]) {
  %19 = cast(meta[relay.Constant][2] /* ty=Tensor[(12, 7, 3), float32] */, dtype="float32") /* ty=Tensor[(12, 7, 3), float32] */;
  %20 = cast(meta[relay.Constant][2] /* ty=Tensor[(12, 7, 3), float32] */, dtype="float32") /* ty=Tensor[(12, 7, 3), float32] */;
  %21 = asin(%20) /* ty=Tensor[(12, 7, 3), float32] */;
  %22 = cast(meta[relay.Constant][3] /* ty=Tensor[(12, 7, 3), float32] */, dtype="float32") /* ty=Tensor[(12, 7, 3), float32] */;
  %23 = shape_of(%21, dtype="int32") /* ty=Tensor[(3), int32] */;
  %24 = cast(%21, dtype="float32") /* ty=Tensor[(12, 7, 3), float32] */;
  %25 = dyn.reshape(%22, %23, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %26 = cos(%19) /* ty=Tensor[(12, 7, 3), float32] */;
  %27 = minimum(%24, %25) /* ty=Tensor[(12, 7, 3), float32] */;
  (%26, %27)
}

def @func_540(%var_529: Tensor[(14, 9, 10), float32]) -> Tensor[(14, 9, 10), float32] {
  %28 = cast(%var_529, dtype="float32") /* ty=Tensor[(14, 9, 10), float32] */;
  sigmoid(%28) /* ty=Tensor[(14, 9, 10), float32] */
}

def @func_3665() -> (Tensor[(9, 4, 9), float64], Tensor[(585, 1), int32], Tensor[(585), int32]) {
  %29 = @func_3065() /* ty=(Tensor[(9, 4, 9), float64], Tensor[(12, 7, 3), float32]) */;
  %30 = cast(meta[relay.Constant][4] /* ty=Tensor[(585), int32] */, dtype="int32") /* ty=Tensor[(585), int32] */;
  %31 = reshape(%30, newshape=[585, 1]) /* ty=Tensor[(585, 1), int32] */;
  %32 = @func_2814(%31) /* ty=(Tensor[(12, 7, 3), int8], Tensor[(13, 15, 3), bool], Tensor[(585, 1), int32]) */;
  %33 = %29.0;
  %34 = %32.2;
  (%33, %34, meta[relay.Constant][4] /* ty=Tensor[(585), int32] */)
}

def @func_6141() -> Tensor[(324), float64] {
  %35 = @func_3948() /* ty=(Tensor[(324), float64],) */;
  %35.0
}

def @func_4020() -> (Tensor[(12, 7, 3), float64],) {
  %36 = @func_2568() /* ty=(Tensor[(12, 7, 3), float64], Tensor[(12, 7, 3), float32]) */;
  %37 = %36.0;
  (%37,)
}

def @func_1960(%var_1944: Tensor[(10, 7, 8), uint64], %var_1954: Tensor[(10, 7, 8), uint64]) -> (Tensor[(10, 7, 8), uint64], Tensor[(10, 7, 8), bool]) {
  %38 = cast(meta[relay.Constant][5] /* ty=Tensor[(10, 7, 8), uint64] */, dtype="uint64") /* ty=Tensor[(10, 7, 8), uint64] */;
  %39 = shape_of(%var_1944, dtype="int32") /* ty=Tensor[(3), int32] */;
  %40 = cast(%var_1944, dtype="uint64") /* ty=Tensor[(10, 7, 8), uint64] */;
  %41 = dyn.reshape(%38, %39, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %42 = cast(%var_1954, dtype="bool") /* ty=Tensor[(10, 7, 8), bool] */;
  %43 = shape_of(%var_1944, dtype="int32") /* ty=Tensor[(3), int32] */;
  %44 = cast(%var_1944, dtype="bool") /* ty=Tensor[(10, 7, 8), bool] */;
  %45 = dyn.reshape(%42, %43, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %46 = right_shift(%40, %41) /* ty=Tensor[(10, 7, 8), uint64] */;
  %47 = less(%44, %45) /* ty=Tensor[(10, 7, 8), bool] */;
  (%46, %47)
}

def @func_6504() -> Tensor[(12, 7, 3), float32] {
  @func_4143() /* ty=Tensor[(12, 7, 3), float32] */
}

def @func_8016() -> (Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), bool]) {
  %48 = @func_5302() /* ty=(Tensor[(12, 7, 3), float32],) */;
  %49 = @func_7583() /* ty=Tensor[(12, 7, 3), float64] */;
  %50 = cast(meta[relay.Constant][6] /* ty=Tensor[(12, 7, 3), float64] */, dtype="bool") /* ty=Tensor[(12, 7, 3), bool] */;
  %51 = shape_of(%49, dtype="int32") /* ty=Tensor[(3), int32] */;
  %52 = cast(%49, dtype="bool") /* ty=Tensor[(12, 7, 3), bool] */;
  %53 = dyn.reshape(%50, %51, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %54 = %48.0;
  %55 = greater(%52, %53) /* ty=Tensor[(12, 7, 3), bool] */;
  (%54, %55)
}

def @func_5603() -> (Tensor[(12, 7, 3), float64],) {
  %56 = @func_4741() /* ty=(Tensor[(12, 7, 3), float64],) */;
  %57 = %56.0;
  (%57,)
}

def @func_7913() -> (Tensor[(12, 7, 3), float32],) {
  %58 = @func_5895() /* ty=(Tensor[(12, 7, 3), float32],) */;
  %59 = %58.0;
  %60 = cast(%59, dtype="float32") /* ty=Tensor[(12, 7, 3), float32] */;
  %61 = erf(%60) /* ty=Tensor[(12, 7, 3), float32] */;
  (%61,)
}

def @func_2703(%var_2676: Tensor[(12, 7, 3), float32]) -> (Tensor[(12, 7, 3), float32], Tensor[(1, 6, 3), float64], Tensor[(3, 6), float64]) {
  %62 = @func_2568() /* ty=(Tensor[(12, 7, 3), float64], Tensor[(12, 7, 3), float32]) */;
  %63 = %62.1;
  %64 = cast(%var_2676, dtype="uint16") /* ty=Tensor[(12, 7, 3), uint16] */;
  %65 = shape_of(%63, dtype="int32") /* ty=Tensor[(3), int32] */;
  %66 = cast(%63, dtype="uint16") /* ty=Tensor[(12, 7, 3), uint16] */;
  %67 = dyn.reshape(%64, %65, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %68 = right_shift(%66, %67) /* ty=Tensor[(12, 7, 3), uint16] */;
  %69 = cast(%68, dtype="float32") /* ty=Tensor[(12, 7, 3), float32] */;
  %70 = cast(meta[relay.Constant][7] /* ty=Tensor[(3, 6), float64] */, dtype="float64") /* ty=Tensor[(3, 6), float64] */;
  %71 = reshape(%70, newshape=[1, 6, 3]) /* ty=Tensor[(1, 6, 3), float64] */;
  %72 = log(%69) /* ty=Tensor[(12, 7, 3), float32] */;
  %73 = @func_1719(%71) /* ty=Tensor[(1, 6, 3), float64] */;
  (%72, %73, meta[relay.Constant][7] /* ty=Tensor[(3, 6), float64] */)
}

def @func_4235(%var_4228: Tensor[(9, 4, 9), float64]) -> Tensor[(9, 4, 9), bool] {
  %74 = @func_2909() /* ty=(Tensor[(9, 4, 9), float64], Tensor[(12, 7, 3), float32]) */;
  %75 = %74.0;
  %76 = cast(%var_4228, dtype="bool") /* ty=Tensor[(9, 4, 9), bool] */;
  %77 = shape_of(%75, dtype="int32") /* ty=Tensor[(3), int32] */;
  %78 = cast(%75, dtype="bool") /* ty=Tensor[(9, 4, 9), bool] */;
  %79 = dyn.reshape(%76, %77, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%78, %79) /* ty=Tensor[(9, 4, 9), bool] */
}

def @func_5918() -> Tensor[(12, 7, 3), float32] {
  %80 = @func_5302() /* ty=(Tensor[(12, 7, 3), float32],) */;
  %80.0
}

def @func_4143() -> Tensor[(12, 7, 3), float32] {
  %81 = @func_2568() /* ty=(Tensor[(12, 7, 3), float64], Tensor[(12, 7, 3), float32]) */;
  %81.1
}

def @func_4523(%var_4515: Tensor[(2250), float32]) -> (Tensor[(12, 7, 3), int8], Tensor[(12, 7, 3), int8], Tensor[(15, 10, 15), bool], Tensor[(2250), float32]) {
  %82 = cast(%var_4515, dtype="float32") /* ty=Tensor[(2250), float32] */;
  %83 = reshape(%82, newshape=[15, 10, 15]) /* ty=Tensor[(15, 10, 15), float32] */;
  %84 = @func_1537(%83) /* ty=(Tensor[(10, 12, 9), float64], Tensor[(50), float64], Tensor[(3, 420), float32], Tensor[(10, 12, 9), float64], Tensor[(15, 10, 15), bool]) */;
  %85 = @func_4007() /* ty=Tensor[(12, 7, 3), int8] */;
  %86 = @func_4007() /* ty=Tensor[(12, 7, 3), int8] */;
  %87 = %84.4;
  (%85, %86, %87, %var_4515)
}

def @func_1537(%var_1470: Tensor[(15, 10, 15), float32]) -> (Tensor[(10, 12, 9), float64], Tensor[(50), float64], Tensor[(3, 420), float32], Tensor[(10, 12, 9), float64], Tensor[(15, 10, 15), bool]) {
  %88 = cast(meta[relay.Constant][8] /* ty=Tensor[(50), float64] */, dtype="float64") /* ty=Tensor[(50), float64] */;
  %89 = cast(meta[relay.Constant][9] /* ty=Tensor[(3, 420), float32] */, dtype="float32") /* ty=Tensor[(3, 420), float32] */;
  %90 = reshape(%88, newshape=[5, 1, 10]) /* ty=Tensor[(5, 1, 10), float64] */;
  %91 = reshape(%89, newshape=[1260]) /* ty=Tensor[(1260), float32] */;
  %92 = @func_649(%90, %91) /* ty=(Tensor[(14, 9, 10), float32], Tensor[(1260), float32], Tensor[(14, 9, 10), float32], Tensor[(14, 9, 10), float32], Tensor[(10, 12, 9), float64], Tensor[(1080), int32], Tensor[(10, 12, 9), int32], Tensor[(5, ?, 10), uint16], Tensor[(5, ?, 10), float32]) */;
  %93 = cast(meta[relay.Constant][8] /* ty=Tensor[(50), float64] */, dtype="float64") /* ty=Tensor[(50), float64] */;
  %94 = cast(meta[relay.Constant][9] /* ty=Tensor[(3, 420), float32] */, dtype="float32") /* ty=Tensor[(3, 420), float32] */;
  %95 = reshape(%93, newshape=[5, 1, 10]) /* ty=Tensor[(5, 1, 10), float64] */;
  %96 = reshape(%94, newshape=[1260]) /* ty=Tensor[(1260), float32] */;
  %97 = @func_649(%95, %96) /* ty=(Tensor[(14, 9, 10), float32], Tensor[(1260), float32], Tensor[(14, 9, 10), float32], Tensor[(14, 9, 10), float32], Tensor[(10, 12, 9), float64], Tensor[(1080), int32], Tensor[(10, 12, 9), int32], Tensor[(5, ?, 10), uint16], Tensor[(5, ?, 10), float32]) */;
  %98 = cast(%var_1470, dtype="float32") /* ty=Tensor[(15, 10, 15), float32] */;
  %99 = cosh(%98) /* ty=Tensor[(15, 10, 15), float32] */;
  %100 = cast(%var_1470, dtype="bool") /* ty=Tensor[(15, 10, 15), bool] */;
  %101 = shape_of(%99, dtype="int32") /* ty=Tensor[(3), int32] */;
  %102 = cast(%99, dtype="bool") /* ty=Tensor[(15, 10, 15), bool] */;
  %103 = dyn.reshape(%100, %101, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %104 = %92.4;
  %105 = %97.4;
  %106 = less_equal(%102, %103) /* ty=Tensor[(15, 10, 15), bool] */;
  (%104, meta[relay.Constant][8] /* ty=Tensor[(50), float64] */, meta[relay.Constant][9] /* ty=Tensor[(3, 420), float32] */, %105, %106)
}

def @func_1564(%var_1560: Tensor[(8, 12, 11), float32]) -> (Tensor[(8, 12, 11), float32],) {
  %107 = cast(%var_1560, dtype="float32") /* ty=Tensor[(8, 12, 11), float32] */;
  %108 = asin(%107) /* ty=Tensor[(8, 12, 11), float32] */;
  (%108,)
}

def @func_5321() -> (Tensor[(324), float64],) {
  %109 = @func_5020() /* ty=(Tensor[(12, 7, 3), float64], Tensor[(324), float64]) */;
  %110 = %109.1;
  (%110,)
}

def @func_7873(%var_7786: Tensor[(2250), int8]) -> (Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), int8], Tensor[(12, 7, 3), int8], Tensor[(1080), int32], Tensor[(12, 7, 3), float32], Tensor[(18), float64], Tensor[(2250), uint8], Tensor[(18), float64], Tensor[(2250), float32], Tensor[(2250), bool], Tensor[(2250), float64], Tensor[(585), int32], Tensor[(65, 9), int32], Tensor[(585), int32]) {
  %111 = cast(meta[relay.Constant][10] /* ty=Tensor[(2250), float32] */, dtype="float32") /* ty=Tensor[(2250), float32] */;
  %112 = reshape(%111, newshape=[15, 150]) /* ty=Tensor[(15, 150), float32] */;
  %113 = @func_7024(%112) /* ty=(Tensor[(12, 7, 3), int8], Tensor[(12, 7, 3), float64], Tensor[(2250), float32], Tensor[(15, 150), float32]) */;
  %114 = @func_3560() /* ty=(Tensor[(12, 7, 3), int8], Tensor[(324), float64]) */;
  %115 = @func_7509() /* ty=(Tensor[(1080), int32], Tensor[(1080), int32]) */;
  %116 = cast(meta[relay.Constant][11] /* ty=Tensor[(18), float64] */, dtype="float64") /* ty=Tensor[(18), float64] */;
  %117 = reshape(%116, newshape=[18]) /* ty=Tensor[(18), float64] */;
  %118 = @func_7229(%117) /* ty=(Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), float32], Tensor[(1, 6, 3), float64], Tensor[(18), float64]) */;
  %119 = cast(meta[relay.Constant][10] /* ty=Tensor[(2250), float32] */, dtype="float32") /* ty=Tensor[(2250), float32] */;
  %120 = sinh(%119) /* ty=Tensor[(2250), float32] */;
  %121 = cast(meta[relay.Constant][12] /* ty=Tensor[(2250), float32] */, dtype="int8") /* ty=Tensor[(2250), int8] */;
  %122 = shape_of(%120, dtype="int32") /* ty=Tensor[(1), int32] */;
  %123 = cast(%120, dtype="int8") /* ty=Tensor[(2250), int8] */;
  %124 = dyn.reshape(%121, %122, newshape=[]) /* ty=Tensor[(?), int8] */;
  %125 = bitwise_and(%123, %124) /* ty=Tensor[(2250), int8] */;
  %126 = cast(%var_7786, dtype="uint8") /* ty=Tensor[(2250), uint8] */;
  %127 = shape_of(%125, dtype="int32") /* ty=Tensor[(1), int32] */;
  %128 = cast(%125, dtype="uint8") /* ty=Tensor[(2250), uint8] */;
  %129 = dyn.reshape(%126, %127, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %130 = right_shift(%128, %129) /* ty=Tensor[(2250), uint8] */;
  %131 = cast(%125, dtype="int32") /* ty=Tensor[(2250), int32] */;
  %132 = shape_of(%130, dtype="int32") /* ty=Tensor[(1), int32] */;
  %133 = cast(%130, dtype="int32") /* ty=Tensor[(2250), int32] */;
  %134 = dyn.reshape(%131, %132, newshape=[]) /* ty=Tensor[(?), int32] */;
  %135 = minimum(%133, %134) /* ty=Tensor[(2250), int32] */;
  %136 = cast(meta[relay.Constant][13] /* ty=Tensor[(2250), int32] */, dtype="uint8") /* ty=Tensor[(2250), uint8] */;
  %137 = shape_of(%135, dtype="int32") /* ty=Tensor[(1), int32] */;
  %138 = cast(%135, dtype="uint8") /* ty=Tensor[(2250), uint8] */;
  %139 = dyn.reshape(%136, %137, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %140 = cast(meta[relay.Constant][11] /* ty=Tensor[(18), float64] */, dtype="float64") /* ty=Tensor[(18), float64] */;
  %141 = reshape(%140, newshape=[18]) /* ty=Tensor[(18), float64] */;
  %142 = @func_7229(%141) /* ty=(Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), float32], Tensor[(1, 6, 3), float64], Tensor[(18), float64]) */;
  %143 = cast(meta[relay.Constant][14] /* ty=Tensor[(2250), float32] */, dtype="float32") /* ty=Tensor[(2250), float32] */;
  %144 = shape_of(%120, dtype="int32") /* ty=Tensor[(1), int32] */;
  %145 = cast(%120, dtype="float32") /* ty=Tensor[(2250), float32] */;
  %146 = dyn.reshape(%143, %144, newshape=[]) /* ty=Tensor[(?), float32] */;
  %147 = cast(%130, dtype="bool") /* ty=Tensor[(2250), bool] */;
  %148 = shape_of(%120, dtype="int32") /* ty=Tensor[(1), int32] */;
  %149 = cast(%120, dtype="bool") /* ty=Tensor[(2250), bool] */;
  %150 = dyn.reshape(%147, %148, newshape=[]) /* ty=Tensor[(?), bool] */;
  %151 = cast(%120, dtype="bool") /* ty=Tensor[(2250), bool] */;
  %152 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(2250), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %153 = cast(meta[relay.Constant][12] /* ty=Tensor[(2250), float32] */, dtype="bool") /* ty=Tensor[(2250), bool] */;
  %154 = dyn.reshape(%151, %152, newshape=[]) /* ty=Tensor[(?), bool] */;
  %155 = logical_or(%153, %154) /* ty=Tensor[(2250), bool] */;
  %156 = cast(%155, dtype="float64") /* ty=Tensor[(2250), float64] */;
  %157 = cast(meta[relay.Constant][15] /* ty=Tensor[(65, 9), int32] */, dtype="int32") /* ty=Tensor[(65, 9), int32] */;
  %158 = reshape(%157, newshape=[585]) /* ty=Tensor[(585), int32] */;
  %159 = @func_7355(%158) /* ty=(Tensor[(324), float64], Tensor[(585), int32], Tensor[(585), int32]) */;
  %160 = @func_5814() /* ty=(Tensor[(9, 4, 9), float64], Tensor[(324), float64], Tensor[(350, 3), float32], Tensor[(25), float32], Tensor[(585), int32]) */;
  %161 = @func_6504() /* ty=Tensor[(12, 7, 3), float32] */;
  %162 = %113.0;
  %163 = %114.0;
  %164 = %115.1;
  %165 = %118.0;
  %166 = subtract(%138, %139) /* ty=Tensor[(2250), uint8] */;
  %167 = %142.3;
  %168 = floor_mod(%145, %146) /* ty=Tensor[(2250), float32] */;
  %169 = less(%149, %150) /* ty=Tensor[(2250), bool] */;
  %170 = atanh(%156) /* ty=Tensor[(2250), float64] */;
  %171 = %159.1;
  %172 = %160.4;
  (%161, %162, %163, %164, %165, meta[relay.Constant][11] /* ty=Tensor[(18), float64] */, %166, %167, %168, %169, %170, %171, meta[relay.Constant][15] /* ty=Tensor[(65, 9), int32] */, %172)
}

def @func_1690(%var_1680: Tensor[(13, 15, 3), int32], %var_1681: Tensor[(13, 15, 3), int32]) -> (Tensor[(13, 15, 3), bool],) {
  %173 = cast(%var_1681, dtype="bool") /* ty=Tensor[(13, 15, 3), bool] */;
  %174 = shape_of(%var_1680, dtype="int32") /* ty=Tensor[(3), int32] */;
  %175 = cast(%var_1680, dtype="bool") /* ty=Tensor[(13, 15, 3), bool] */;
  %176 = dyn.reshape(%173, %174, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %177 = greater_equal(%175, %176) /* ty=Tensor[(13, 15, 3), bool] */;
  (%177,)
}

def @func_7509() -> (Tensor[(1080), int32], Tensor[(1080), int32]) {
  %178 = @func_6054() /* ty=(Tensor[(324), float64], Tensor[(10, 12, 9), int32], Tensor[(1080), int32]) */;
  %179 = @func_6054() /* ty=(Tensor[(324), float64], Tensor[(10, 12, 9), int32], Tensor[(1080), int32]) */;
  %180 = %178.2;
  %181 = %179.2;
  (%180, %181)
}

def @func_2836(%var_2824: Tensor[(3, 1, 7), float64]) -> (Tensor[(3, 1, 7), float64], Tensor[(3, 1, 7), float64]) {
  %182 = cast(%var_2824, dtype="float64") /* ty=Tensor[(3, 1, 7), float64] */;
  %183 = cast(%var_2824, dtype="float64") /* ty=Tensor[(3, 1, 7), float64] */;
  %184 = atan(%182) /* ty=Tensor[(3, 1, 7), float64] */;
  %185 = cos(%183) /* ty=Tensor[(3, 1, 7), float64] */;
  (%184, %185)
}

def @func_7024(%var_7017: Tensor[(15, 150), float32]) -> (Tensor[(12, 7, 3), int8], Tensor[(12, 7, 3), float64], Tensor[(2250), float32], Tensor[(15, 150), float32]) {
  %186 = @func_2586() /* ty=(Tensor[(12, 7, 3), int8],) */;
  %187 = @func_4020() /* ty=(Tensor[(12, 7, 3), float64],) */;
  %188 = cast(%var_7017, dtype="float32") /* ty=Tensor[(15, 150), float32] */;
  %189 = reshape(%188, newshape=[2250]) /* ty=Tensor[(2250), float32] */;
  %190 = @func_5179(%189) /* ty=(Tensor[(12, 7, 3), float32], Tensor[(10, 12, 9), float64], Tensor[(2250), float32], Tensor[(12, 7, 3), float32]) */;
  %191 = %186.0;
  %192 = %187.0;
  %193 = %190.2;
  (%191, %192, %193, %var_7017)
}

def @func_4078(%var_4046: Tensor[(18), float64]) -> (Tensor[(1, 6, 3), float64], Tensor[(18), float64], Tensor[(9, 4, 9), float64], Tensor[(3, 10, 7), float64], Tensor[(210), float64]) {
  %194 = cast(%var_4046, dtype="float64") /* ty=Tensor[(18), float64] */;
  %195 = reshape(%194, newshape=[1, 6, 3]) /* ty=Tensor[(1, 6, 3), float64] */;
  %196 = @func_3665() /* ty=(Tensor[(9, 4, 9), float64], Tensor[(585, 1), int32], Tensor[(585), int32]) */;
  %197 = %196.0;
  %198 = cast(%197, dtype="float64") /* ty=Tensor[(9, 4, 9), float64] */;
  %199 = cast(meta[relay.Constant][16] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %200 = reshape(%199, newshape=[3, 10, 7]) /* ty=Tensor[(3, 10, 7), float64] */;
  %201 = @func_3981(%200) /* ty=(Tensor[(3, 10, 7), float64],) */;
  %202 = @func_1719(%195) /* ty=Tensor[(1, 6, 3), float64] */;
  %203 = log(%198) /* ty=Tensor[(9, 4, 9), float64] */;
  %204 = %201.0;
  (%202, %var_4046, %203, %204, meta[relay.Constant][16] /* ty=Tensor[(210), float64] */)
}

def @func_7113() -> (Tensor[(324), float64], Tensor[(25), bool], Tensor[(25, 1), float32]) {
  %205 = cast(meta[relay.Constant][17] /* ty=Tensor[(25, 1), float32] */, dtype="float32") /* ty=Tensor[(25, 1), float32] */;
  %206 = reshape(%205, newshape=[25]) /* ty=Tensor[(25), float32] */;
  %207 = @func_6017() /* ty=Tensor[(324), float64] */;
  %208 = @func_6934(%206) /* ty=Tensor[(25), bool] */;
  (%207, %208, meta[relay.Constant][17] /* ty=Tensor[(25, 1), float32] */)
}

def @func_4741() -> (Tensor[(12, 7, 3), float64],) {
  %209 = @func_4020() /* ty=(Tensor[(12, 7, 3), float64],) */;
  %210 = %209.0;
  (%210,)
}

def @func_7081(%var_7069: Tensor[(15, 6, 1), float64]) -> Tensor[(15, 6, 1), float64] {
  %211 = cast(%var_7069, dtype="float64") /* ty=Tensor[(15, 6, 1), float64] */;
  rsqrt(%211) /* ty=Tensor[(15, 6, 1), float64] */
}

def @func_5769(%var_5761: Tensor[(2250), float32]) -> (Tensor[(12, 7, 3), int8], Tensor[(9, 4, 9), float64], Tensor[(12, 7, 3), float32], Tensor[(2250), float32], Tensor[(5, 5), float32], Tensor[(10, 7, 8), uint64]) {
  %212 = @func_2586() /* ty=(Tensor[(12, 7, 3), int8],) */;
  %213 = @func_3065() /* ty=(Tensor[(9, 4, 9), float64], Tensor[(12, 7, 3), float32]) */;
  %214 = cast(%var_5761, dtype="float32") /* ty=Tensor[(2250), float32] */;
  %215 = cast(meta[relay.Constant][18] /* ty=Tensor[(5, 5), float32] */, dtype="float32") /* ty=Tensor[(5, 5), float32] */;
  %216 = reshape(%214, newshape=[15, 150]) /* ty=Tensor[(15, 150), float32] */;
  %217 = reshape(%215, newshape=[25]) /* ty=Tensor[(25), float32] */;
  %218 = @func_3022(%216, %217) /* ty=(Tensor[(12, 7, 3), float32], Tensor[(585), int32], Tensor[(15, 150), int32], Tensor[(7, 10), float64], Tensor[(25), float32], Tensor[(15, 150), bool]) */;
  %219 = @func_3737() /* ty=(Tensor[(12, 7, 3), float32], Tensor[(10, 7, 8), uint64], Tensor[(560), uint64]) */;
  %220 = %212.0;
  %221 = %213.0;
  %222 = %218.0;
  %223 = %219.1;
  (%220, %221, %222, %var_5761, meta[relay.Constant][18] /* ty=Tensor[(5, 5), float32] */, %223)
}

def @func_7629() -> (Tensor[(12, 7, 3), float32],) {
  %224 = @func_5895() /* ty=(Tensor[(12, 7, 3), float32],) */;
  %225 = %224.0;
  (%225,)
}

def @func_3457(%var_3406: Tensor[(25), float32], %var_3428: Tensor[(8, 70), uint64]) -> (Tensor[(12, 7, 3), int8], Tensor[(585), int32], Tensor[(2250), float32], Tensor[(25), float32], Tensor[(12, 7, 3), float64], Tensor[(10, 7, 8), uint64], Tensor[(8, 70), uint64], Tensor[(12, 7, 3), float32], Tensor[(9, 4, 9), float64]) {
  %226 = @func_2586() /* ty=(Tensor[(12, 7, 3), int8],) */;
  %227 = cast(meta[relay.Constant][19] /* ty=Tensor[(2250), float32] */, dtype="float32") /* ty=Tensor[(2250), float32] */;
  %228 = cast(%var_3406, dtype="float32") /* ty=Tensor[(25), float32] */;
  %229 = reshape(%227, newshape=[15, 150]) /* ty=Tensor[(15, 150), float32] */;
  %230 = reshape(%228, newshape=[25]) /* ty=Tensor[(25), float32] */;
  %231 = @func_3022(%229, %230) /* ty=(Tensor[(12, 7, 3), float32], Tensor[(585), int32], Tensor[(15, 150), int32], Tensor[(7, 10), float64], Tensor[(25), float32], Tensor[(15, 150), bool]) */;
  %232 = @func_2745() /* ty=(Tensor[(12, 7, 3), float64], Tensor[(9, 4, 9), float64], Tensor[(324), float64]) */;
  %233 = cast(%var_3428, dtype="uint64") /* ty=Tensor[(8, 70), uint64] */;
  %234 = cast(%var_3428, dtype="uint64") /* ty=Tensor[(8, 70), uint64] */;
  %235 = reshape(%233, newshape=[10, 7, 8]) /* ty=Tensor[(10, 7, 8), uint64] */;
  %236 = reshape(%234, newshape=[10, 7, 8]) /* ty=Tensor[(10, 7, 8), uint64] */;
  %237 = @func_1960(%235, %236) /* ty=(Tensor[(10, 7, 8), uint64], Tensor[(10, 7, 8), bool]) */;
  %238 = @func_2423() /* ty=(Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), float32]) */;
  %239 = @func_2745() /* ty=(Tensor[(12, 7, 3), float64], Tensor[(9, 4, 9), float64], Tensor[(324), float64]) */;
  %240 = %226.0;
  %241 = %231.1;
  %242 = %232.0;
  %243 = %237.0;
  %244 = %238.1;
  %245 = %239.1;
  (%240, %241, meta[relay.Constant][19] /* ty=Tensor[(2250), float32] */, %var_3406, %242, %243, %var_3428, %244, %245)
}

def @func_7735(%var_7731: Tensor[(7, 13, 10), uint32]) -> Tensor[(7, 13, 10), uint32] {
  %246 = cast(%var_7731, dtype="uint32") /* ty=Tensor[(7, 13, 10), uint32] */;
  %247 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(7, 13, 10), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %248 = cast(meta[relay.Constant][20] /* ty=Tensor[(7, 13, 10), uint32] */, dtype="uint32") /* ty=Tensor[(7, 13, 10), uint32] */;
  %249 = dyn.reshape(%246, %247, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  minimum(%248, %249) /* ty=Tensor[(7, 13, 10), uint32] */
}

def @func_6900() -> (Tensor[(324), float64], Tensor[(324), uint64]) {
  %250 = @func_6070() /* ty=Tensor[(324), float64] */;
  %251 = cast(%250, dtype="float64") /* ty=Tensor[(324), float64] */;
  %252 = cast(%250, dtype="float64") /* ty=Tensor[(324), float64] */;
  %253 = reshape(%252, newshape=[324]) /* ty=Tensor[(324), float64] */;
  %254 = erf(%251) /* ty=Tensor[(324), float64] */;
  %255 = @func_3905(%253) /* ty=Tensor[(324), uint64] */;
  (%254, %255)
}

def @func_871(%var_863: Tensor[(7, 1, 10), float64]) -> (Tensor[(7, 1, 10), float64],) {
  %256 = cast(%var_863, dtype="float64") /* ty=Tensor[(7, 1, 10), float64] */;
  %257 = log2(%256) /* ty=Tensor[(7, 1, 10), float64] */;
  (%257,)
}

def @func_7335(%var_7313: Tensor[(6, 4, 11), int16]) -> (Tensor[(6, 4, 11), int16], Tensor[(1260), float32], Tensor[(1260), float32]) {
  %258 = cast(meta[relay.Constant][21] /* ty=Tensor[(6, 4, 11), int16] */, dtype="int16") /* ty=Tensor[(6, 4, 11), int16] */;
  %259 = shape_of(%var_7313, dtype="int32") /* ty=Tensor[(3), int32] */;
  %260 = cast(%var_7313, dtype="int16") /* ty=Tensor[(6, 4, 11), int16] */;
  %261 = dyn.reshape(%258, %259, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %262 = cast(meta[relay.Constant][22] /* ty=Tensor[(1260), float32] */, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %263 = reshape(%262, newshape=[1260]) /* ty=Tensor[(1260), float32] */;
  %264 = @func_6699(%263) /* ty=(Tensor[(9, 4, 9), float64], Tensor[(350, 3), float32], Tensor[(12, 7, 3), int8], Tensor[(14, 9, 10), float32], Tensor[(50), float64], Tensor[(1260), float32]) */;
  %265 = logical_xor(%260, %261) /* ty=Tensor[(6, 4, 11), int16] */;
  %266 = %264.5;
  (%265, %266, meta[relay.Constant][22] /* ty=Tensor[(1260), float32] */)
}

def @func_8040() -> (Tensor[(12, 7, 3), float32], Tensor[(9, 4, 9), float64]) {
  %267 = @func_8016() /* ty=(Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), bool]) */;
  %268 = @func_7436() /* ty=(Tensor[(9, 4, 9), float64],) */;
  %269 = %268.0;
  %270 = cast(%269, dtype="float64") /* ty=Tensor[(9, 4, 9), float64] */;
  %271 = %267.0;
  %272 = log2(%270) /* ty=Tensor[(9, 4, 9), float64] */;
  (%271, %272)
}

def @func_6994() -> (Tensor[(12, 7, 3), float32],) {
  %273 = @func_3065() /* ty=(Tensor[(9, 4, 9), float64], Tensor[(12, 7, 3), float32]) */;
  %274 = %273.1;
  (%274,)
}

def @func_7229(%var_7225: Tensor[(18), float64]) -> (Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), float32], Tensor[(1, 6, 3), float64], Tensor[(18), float64]) {
  %275 = @func_6449() /* ty=(Tensor[(12, 7, 3), float32],) */;
  %276 = cast(%var_7225, dtype="float64") /* ty=Tensor[(18), float64] */;
  %277 = reshape(%276, newshape=[1, 6, 3]) /* ty=Tensor[(1, 6, 3), float64] */;
  %278 = @func_3843() /* ty=Tensor[(12, 7, 3), float32] */;
  %279 = %275.0;
  %280 = @func_1719(%277) /* ty=Tensor[(1, 6, 3), float64] */;
  (%278, %279, %280, %var_7225)
}

def @func_7551() -> (Tensor[(324), float64],) {
  %281 = @func_6017() /* ty=Tensor[(324), float64] */;
  (%281,)
}

def @func_5550(%var_5512: Tensor[(560), uint64]) -> (Tensor[(12, 7, 3), float64], Tensor[(15, 10, 15), bool], Tensor[(10, 7, 8), bool], Tensor[(560), uint64], Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), float64], Tensor[(12, 7, 3), float32], Tensor[(8, 12, 11), float32], Tensor[(264, 4), float32]) {
  %282 = cast(meta[relay.Constant][23] /* ty=Tensor[(2250), float32] */, dtype="float32") /* ty=Tensor[(2250), float32] */;
  %283 = reshape(%282, newshape=[15, 10, 15]) /* ty=Tensor[(15, 10, 15), float32] */;
  %284 = @func_1537(%283) /* ty=(Tensor[(10, 12, 9), float64], Tensor[(50), float64], Tensor[(3, 420), float32], Tensor[(10, 12, 9), float64], Tensor[(15, 10, 15), bool]) */;
  %285 = %284.4;
  %286 = cast(meta[relay.Constant][23] /* ty=Tensor[(2250), float32] */, dtype="bool") /* ty=Tensor[(2250), bool] */;
  %287 = shape_of(%285, dtype="int32") /* ty=Tensor[(3), int32] */;
  %288 = cast(%285, dtype="bool") /* ty=Tensor[(15, 10, 15), bool] */;
  %289 = dyn.reshape(%286, %287, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %290 = cast(%var_5512, dtype="uint64") /* ty=Tensor[(560), uint64] */;
  %291 = cast(%var_5512, dtype="uint64") /* ty=Tensor[(560), uint64] */;
  %292 = reshape(%290, newshape=[10, 7, 8]) /* ty=Tensor[(10, 7, 8), uint64] */;
  %293 = reshape(%291, newshape=[10, 7, 8]) /* ty=Tensor[(10, 7, 8), uint64] */;
  %294 = @func_1960(%292, %293) /* ty=(Tensor[(10, 7, 8), uint64], Tensor[(10, 7, 8), bool]) */;
  %295 = @func_3483() /* ty=(Tensor[(12, 7, 3), float32],) */;
  %296 = @func_4741() /* ty=(Tensor[(12, 7, 3), float64],) */;
  %297 = %296.0;
  %298 = cast(%297, dtype="float32") /* ty=Tensor[(12, 7, 3), float32] */;
  %299 = atan(%298) /* ty=Tensor[(12, 7, 3), float32] */;
  %300 = cast(%299, dtype="float64") /* ty=Tensor[(12, 7, 3), float64] */;
  %301 = cast(meta[relay.Constant][23] /* ty=Tensor[(2250), float32] */, dtype="float32") /* ty=Tensor[(2250), float32] */;
  %302 = reshape(%301, newshape=[2250]) /* ty=Tensor[(2250), float32] */;
  %303 = @func_4634(%302) /* ty=(Tensor[(9, 4, 9), float64], Tensor[(12, 7, 3), float32], Tensor[(2250), float32], Tensor[(25), float32]) */;
  %304 = cast(meta[relay.Constant][24] /* ty=Tensor[(264, 4), float32] */, dtype="float32") /* ty=Tensor[(264, 4), float32] */;
  %305 = reshape(%304, newshape=[8, 12, 11]) /* ty=Tensor[(8, 12, 11), float32] */;
  %306 = @func_1564(%305) /* ty=(Tensor[(8, 12, 11), float32],) */;
  %307 = @func_3808() /* ty=Tensor[(12, 7, 3), float64] */;
  %308 = logical_or(%288, %289) /* ty=Tensor[(15, 10, 15), bool] */;
  %309 = %294.1;
  %310 = %295.0;
  %311 = sqrt(%300) /* ty=Tensor[(12, 7, 3), float64] */;
  %312 = %303.1;
  %313 = %306.0;
  (%307, %308, %309, %var_5512, %310, %311, %312, %313, meta[relay.Constant][24] /* ty=Tensor[(264, 4), float32] */)
}

def @func_5833() -> (Tensor[(12, 7, 3), float32],) {
  %314 = @func_3483() /* ty=(Tensor[(12, 7, 3), float32],) */;
  %315 = %314.0;
  (%315,)
}

def @func_5094(%var_5079: Tensor[(10, 5, 11), bool]) -> (Tensor[(10, 5, 11), bool],) {
  %316 = cast(%var_5079, dtype="bool") /* ty=Tensor[(10, 5, 11), bool] */;
  %317 = shape_of(meta[relay.Constant][25] /* ty=Tensor[(10, 5, 11), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %318 = cast(meta[relay.Constant][25] /* ty=Tensor[(10, 5, 11), bool] */, dtype="bool") /* ty=Tensor[(10, 5, 11), bool] */;
  %319 = dyn.reshape(%316, %317, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %320 = logical_and(%318, %319) /* ty=Tensor[(10, 5, 11), bool] */;
  (%320,)
}

def @func_6508() -> (Tensor[(12, 7, 3), float32],) {
  %321 = @func_5895() /* ty=(Tensor[(12, 7, 3), float32],) */;
  %322 = %321.0;
  (%322,)
}

def @func_6699(%var_6688: Tensor[(1260), float32]) -> (Tensor[(9, 4, 9), float64], Tensor[(350, 3), float32], Tensor[(12, 7, 3), int8], Tensor[(14, 9, 10), float32], Tensor[(50), float64], Tensor[(1260), float32]) {
  %323 = @func_3065() /* ty=(Tensor[(9, 4, 9), float64], Tensor[(12, 7, 3), float32]) */;
  %324 = @func_5814() /* ty=(Tensor[(9, 4, 9), float64], Tensor[(324), float64], Tensor[(350, 3), float32], Tensor[(25), float32], Tensor[(585), int32]) */;
  %325 = @func_2586() /* ty=(Tensor[(12, 7, 3), int8],) */;
  %326 = cast(meta[relay.Constant][26] /* ty=Tensor[(50), float64] */, dtype="float64") /* ty=Tensor[(50), float64] */;
  %327 = cast(%var_6688, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %328 = reshape(%326, newshape=[5, 1, 10]) /* ty=Tensor[(5, 1, 10), float64] */;
  %329 = reshape(%327, newshape=[1260]) /* ty=Tensor[(1260), float32] */;
  %330 = @func_649(%328, %329) /* ty=(Tensor[(14, 9, 10), float32], Tensor[(1260), float32], Tensor[(14, 9, 10), float32], Tensor[(14, 9, 10), float32], Tensor[(10, 12, 9), float64], Tensor[(1080), int32], Tensor[(10, 12, 9), int32], Tensor[(5, ?, 10), uint16], Tensor[(5, ?, 10), float32]) */;
  %331 = %323.0;
  %332 = %324.2;
  %333 = %325.0;
  %334 = %330.2;
  (%331, %332, %333, %334, meta[relay.Constant][26] /* ty=Tensor[(50), float64] */, %var_6688)
}

def @func_3981(%var_3975: Tensor[(3, 10, 7), float64]) -> (Tensor[(3, 10, 7), float64],) {
  %335 = cast(%var_3975, dtype="float64") /* ty=Tensor[(3, 10, 7), float64] */;
  %336 = sqrt(%335) /* ty=Tensor[(3, 10, 7), float64] */;
  (%336,)
}

def @func_5041() -> (Tensor[(9, 4, 9), float64],) {
  %337 = @func_3065() /* ty=(Tensor[(9, 4, 9), float64], Tensor[(12, 7, 3), float32]) */;
  %338 = %337.0;
  (%338,)
}

def @func_4007() -> Tensor[(12, 7, 3), int8] {
  %339 = @func_2586() /* ty=(Tensor[(12, 7, 3), int8],) */;
  %339.0
}

def @func_5468(%var_5356: Tensor[(324), float64], %var_5357: Tensor[(195, 3), int32], %var_5406: Tensor[(12, 7, 3), float64]) -> (Tensor[(3, 6), float64], Tensor[(585), int32], Tensor[(324), float64], Tensor[(195, 3), int32], Tensor[(9, 4, 9), float64], Tensor[(210), float64], Tensor[(9, 4, 9), bool], Tensor[(12, 7, 3), bool], Tensor[(12, 7, 3), bool], Tensor[(12, 7, 3), uint8], Tensor[(12, 7, 3), float64]) {
  %340 = @func_5020() /* ty=(Tensor[(12, 7, 3), float64], Tensor[(324), float64]) */;
  %341 = %340.0;
  %342 = cast(%341, dtype="float32") /* ty=Tensor[(12, 7, 3), float32] */;
  %343 = reshape(%342, newshape=[12, 7, 3]) /* ty=Tensor[(12, 7, 3), float32] */;
  %344 = @func_2703(%343) /* ty=(Tensor[(12, 7, 3), float32], Tensor[(1, 6, 3), float64], Tensor[(3, 6), float64]) */;
  %345 = cast(%var_5356, dtype="float64") /* ty=Tensor[(324), float64] */;
  %346 = cast(%var_5357, dtype="int32") /* ty=Tensor[(195, 3), int32] */;
  %347 = reshape(%345, newshape=[9, 4, 9]) /* ty=Tensor[(9, 4, 9), float64] */;
  %348 = reshape(%346, newshape=[585]) /* ty=Tensor[(585), int32] */;
  %349 = @func_4365(%347, %348) /* ty=(Tensor[(9, 4, 9), uint32], Tensor[(585, 1), int32], Tensor[(585), int32]) */;
  %350 = @func_3065() /* ty=(Tensor[(9, 4, 9), float64], Tensor[(12, 7, 3), float32]) */;
  %351 = %344.2;
  %352 = cast(%351, dtype="float64") /* ty=Tensor[(3, 6), float64] */;
  %353 = reshape(%352, newshape=[18]) /* ty=Tensor[(18), float64] */;
  %354 = @func_4078(%353) /* ty=(Tensor[(1, 6, 3), float64], Tensor[(18), float64], Tensor[(9, 4, 9), float64], Tensor[(3, 10, 7), float64], Tensor[(210), float64]) */;
  %355 = %350.0;
  %356 = cast(%355, dtype="float64") /* ty=Tensor[(9, 4, 9), float64] */;
  %357 = reshape(%356, newshape=[9, 4, 9]) /* ty=Tensor[(9, 4, 9), float64] */;
  %358 = cast(%var_5406, dtype="bool") /* ty=Tensor[(12, 7, 3), bool] */;
  %359 = shape_of(%341, dtype="int32") /* ty=Tensor[(3), int32] */;
  %360 = cast(%341, dtype="bool") /* ty=Tensor[(12, 7, 3), bool] */;
  %361 = dyn.reshape(%358, %359, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %362 = @func_2568() /* ty=(Tensor[(12, 7, 3), float64], Tensor[(12, 7, 3), float32]) */;
  %363 = %362.0;
  %364 = cast(%363, dtype="bool") /* ty=Tensor[(12, 7, 3), bool] */;
  %365 = shape_of(%var_5406, dtype="int32") /* ty=Tensor[(3), int32] */;
  %366 = cast(%var_5406, dtype="bool") /* ty=Tensor[(12, 7, 3), bool] */;
  %367 = dyn.reshape(%364, %365, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %368 = cast(meta[relay.Constant][27] /* ty=Tensor[(12, 7, 3), float64] */, dtype="uint8") /* ty=Tensor[(12, 7, 3), uint8] */;
  %369 = shape_of(%var_5406, dtype="int32") /* ty=Tensor[(3), int32] */;
  %370 = cast(%var_5406, dtype="uint8") /* ty=Tensor[(12, 7, 3), uint8] */;
  %371 = dyn.reshape(%368, %369, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %372 = cast(%var_5406, dtype="float64") /* ty=Tensor[(12, 7, 3), float64] */;
  %373 = %349.2;
  %374 = %354.4;
  %375 = @func_4235(%357) /* ty=Tensor[(9, 4, 9), bool] */;
  %376 = not_equal(%360, %361) /* ty=Tensor[(12, 7, 3), bool] */;
  %377 = greater_equal(%366, %367) /* ty=Tensor[(12, 7, 3), bool] */;
  %378 = add(%370, %371) /* ty=Tensor[(12, 7, 3), uint8] */;
  %379 = tan(%372) /* ty=Tensor[(12, 7, 3), float64] */;
  (%351, %373, %var_5356, %var_5357, %355, %374, %375, %376, %377, %378, %379)
}

def @func_649(%var_549: Tensor[(5, 1, 10), float64], %var_562: Tensor[(1260), float32]) -> (Tensor[(14, 9, 10), float32], Tensor[(1260), float32], Tensor[(14, 9, 10), float32], Tensor[(14, 9, 10), float32], Tensor[(10, 12, 9), float64], Tensor[(1080), int32], Tensor[(10, 12, 9), int32], Tensor[(5, ?, 10), uint16], Tensor[(5, ?, 10), float32]) {
  %380 = cast(%var_562, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %381 = reshape(%380, newshape=[14, 9, 10]) /* ty=Tensor[(14, 9, 10), float32] */;
  %382 = cast(%var_562, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %383 = reshape(%382, newshape=[14, 9, 10]) /* ty=Tensor[(14, 9, 10), float32] */;
  %384 = cast(%var_562, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %385 = reshape(%384, newshape=[14, 9, 10]) /* ty=Tensor[(14, 9, 10), float32] */;
  %386 = cast(meta[relay.Constant][28] /* ty=Tensor[(1080), int32] */, dtype="int32") /* ty=Tensor[(1080), int32] */;
  %387 = cast(meta[relay.Constant][28] /* ty=Tensor[(1080), int32] */, dtype="int32") /* ty=Tensor[(1080), int32] */;
  %388 = reshape(%386, newshape=[10, 12, 9]) /* ty=Tensor[(10, 12, 9), int32] */;
  %389 = reshape(%387, newshape=[10, 12, 9]) /* ty=Tensor[(10, 12, 9), int32] */;
  %390 = @func_521(%388, %389) /* ty=(Tensor[(10, 12, 9), int32], Tensor[(10, 12, 9), float64]) */;
  %391 = %390.1;
  %392 = cast(%391, dtype="int32") /* ty=Tensor[(10, 12, 9), int32] */;
  %393 = cast(%391, dtype="int32") /* ty=Tensor[(10, 12, 9), int32] */;
  %394 = reshape(%392, newshape=[10, 12, 9]) /* ty=Tensor[(10, 12, 9), int32] */;
  %395 = reshape(%393, newshape=[10, 12, 9]) /* ty=Tensor[(10, 12, 9), int32] */;
  %396 = @func_521(%394, %395) /* ty=(Tensor[(10, 12, 9), int32], Tensor[(10, 12, 9), float64]) */;
  %397 = cast(%var_549, dtype="float64") /* ty=Tensor[(5, 1, 10), float64] */;
  %398 = erf(%397) /* ty=Tensor[(5, 1, 10), float64] */;
  %399 = cast(%var_549, dtype="bool") /* ty=Tensor[(5, 1, 10), bool] */;
  %400 = shape_of(%398, dtype="int32") /* ty=Tensor[(3), int32] */;
  %401 = cast(%398, dtype="bool") /* ty=Tensor[(5, 1, 10), bool] */;
  %402 = dyn.reshape(%399, %400, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %403 = logical_and(%401, %402) /* ty=Tensor[(5, ?, 10), bool] */;
  %404 = cast(%403, dtype="float32") /* ty=Tensor[(5, ?, 10), float32] */;
  %405 = rsqrt(%404) /* ty=Tensor[(5, ?, 10), float32] */;
  %406 = cast(%var_549, dtype="float64") /* ty=Tensor[(5, 1, 10), float64] */;
  %407 = shape_of(%398, dtype="int32") /* ty=Tensor[(3), int32] */;
  %408 = cast(%398, dtype="float64") /* ty=Tensor[(5, 1, 10), float64] */;
  %409 = dyn.reshape(%406, %407, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %410 = mod(%408, %409) /* ty=Tensor[(5, ?, 10), float64] */;
  %411 = cast(%410, dtype="uint16") /* ty=Tensor[(5, ?, 10), uint16] */;
  %412 = shape_of(%405, dtype="int32") /* ty=Tensor[(3), int32] */;
  %413 = cast(%405, dtype="uint16") /* ty=Tensor[(5, ?, 10), uint16] */;
  %414 = dyn.reshape(%411, %412, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %415 = cast(%403, dtype="float32") /* ty=Tensor[(5, ?, 10), float32] */;
  %416 = shape_of(%410, dtype="int32") /* ty=Tensor[(3), int32] */;
  %417 = cast(%410, dtype="float32") /* ty=Tensor[(5, ?, 10), float32] */;
  %418 = dyn.reshape(%415, %416, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %419 = @func_540(%381) /* ty=Tensor[(14, 9, 10), float32] */;
  %420 = @func_540(%383) /* ty=Tensor[(14, 9, 10), float32] */;
  %421 = @func_540(%385) /* ty=Tensor[(14, 9, 10), float32] */;
  %422 = %396.0;
  %423 = maximum(%413, %414) /* ty=Tensor[(5, ?, 10), uint16] */;
  %424 = floor_mod(%417, %418) /* ty=Tensor[(5, ?, 10), float32] */;
  (%419, %var_562, %420, %421, %391, meta[relay.Constant][28] /* ty=Tensor[(1080), int32] */, %422, %423, %424)
}

def @func_4586(%var_4577: Tensor[(4, 10, 5), float64]) -> (Tensor[(4, 10, 5), float64],) {
  %425 = cast(%var_4577, dtype="float64") /* ty=Tensor[(4, 10, 5), float64] */;
  %426 = log(%425) /* ty=Tensor[(4, 10, 5), float64] */;
  (%426,)
}

def @func_6418(%var_6398: Tensor[(6, 8, 12), uint64]) -> (Tensor[(6, 8, 12), uint64], Tensor[(6, 8, 12), float32]) {
  %427 = cast(meta[relay.Constant][29] /* ty=Tensor[(6, 8, 12), uint64] */, dtype="uint64") /* ty=Tensor[(6, 8, 12), uint64] */;
  %428 = shape_of(%var_6398, dtype="int32") /* ty=Tensor[(3), int32] */;
  %429 = cast(%var_6398, dtype="uint64") /* ty=Tensor[(6, 8, 12), uint64] */;
  %430 = dyn.reshape(%427, %428, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %431 = cast(%var_6398, dtype="float32") /* ty=Tensor[(6, 8, 12), float32] */;
  %432 = logical_xor(%429, %430) /* ty=Tensor[(6, 8, 12), uint64] */;
  %433 = sqrt(%431) /* ty=Tensor[(6, 8, 12), float32] */;
  (%432, %433)
}

def @func_5984() -> (Tensor[(324), float64], Tensor[(12, 7, 3), float32], Tensor[(9, 4, 9), float64], Tensor[(12, 7, 3), float32]) {
  %434 = @func_5321() /* ty=(Tensor[(324), float64],) */;
  %435 = @func_2745() /* ty=(Tensor[(12, 7, 3), float64], Tensor[(9, 4, 9), float64], Tensor[(324), float64]) */;
  %436 = @func_3483() /* ty=(Tensor[(12, 7, 3), float32],) */;
  %437 = %434.0;
  %438 = @func_5918() /* ty=Tensor[(12, 7, 3), float32] */;
  %439 = %435.1;
  %440 = %436.0;
  (%437, %438, %439, %440)
}

def @func_7173(%var_7158: Tensor[(585, 10), float32], %var_7164: Tensor[(585, 10), uint8]) -> (Tensor[(585, 10), int16],) {
  %441 = @func_3665() /* ty=(Tensor[(9, 4, 9), float64], Tensor[(585, 1), int32], Tensor[(585), int32]) */;
  %442 = %441.1;
  %443 = cast(%442, dtype="float64") /* ty=Tensor[(585, 1), float64] */;
  %444 = erf(%443) /* ty=Tensor[(585, 1), float64] */;
  %445 = cast(%444, dtype="float32") /* ty=Tensor[(585, 1), float32] */;
  %446 = tan(%445) /* ty=Tensor[(585, 1), float32] */;
  %447 = cast(%446, dtype="uint8") /* ty=Tensor[(585, 1), uint8] */;
  %448 = cast(%var_7158, dtype="uint8") /* ty=Tensor[(585, 10), uint8] */;
  %449 = bitwise_or(%447, %448) /* ty=Tensor[(585, 10), uint8] */;
  %450 = cast(%var_7164, dtype="int16") /* ty=Tensor[(585, 10), int16] */;
  %451 = shape_of(%449, dtype="int32") /* ty=Tensor[(2), int32] */;
  %452 = cast(%449, dtype="int16") /* ty=Tensor[(585, 10), int16] */;
  %453 = dyn.reshape(%450, %451, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %454 = subtract(%452, %453) /* ty=Tensor[(585, 10), int16] */;
  (%454,)
}

def @func_7583() -> Tensor[(12, 7, 3), float64] {
  @func_3808() /* ty=Tensor[(12, 7, 3), float64] */
}

def @func_5729() -> (Tensor[(12, 7, 3), float64],) {
  %455 = @func_4741() /* ty=(Tensor[(12, 7, 3), float64],) */;
  %456 = %455.0;
  (%456,)
}

def @func_7419() -> (Tensor[(3, 10, 7), float64],) {
  %457 = @func_5244() /* ty=(Tensor[(12, 7, 3), int8], Tensor[(3, 10, 7), float64], Tensor[(210, 1), float64]) */;
  %458 = %457.1;
  (%458,)
}

def @func_2648(%var_2645: Tensor[(2250), float32]) -> (Tensor[(12, 7, 3), float32], Tensor[(13, 15, 3), bool], Tensor[(585), int32], Tensor[(10, 12, 9), float64], Tensor[(2250), float32]) {
  %459 = @func_2423() /* ty=(Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), float32]) */;
  %460 = cast(meta[relay.Constant][30] /* ty=Tensor[(585), int32] */, dtype="int32") /* ty=Tensor[(585), int32] */;
  %461 = cast(meta[relay.Constant][30] /* ty=Tensor[(585), int32] */, dtype="int32") /* ty=Tensor[(585), int32] */;
  %462 = reshape(%460, newshape=[13, 15, 3]) /* ty=Tensor[(13, 15, 3), int32] */;
  %463 = reshape(%461, newshape=[13, 15, 3]) /* ty=Tensor[(13, 15, 3), int32] */;
  %464 = @func_1690(%462, %463) /* ty=(Tensor[(13, 15, 3), bool],) */;
  %465 = cast(%var_2645, dtype="float32") /* ty=Tensor[(2250), float32] */;
  %466 = reshape(%465, newshape=[15, 10, 15]) /* ty=Tensor[(15, 10, 15), float32] */;
  %467 = @func_1537(%466) /* ty=(Tensor[(10, 12, 9), float64], Tensor[(50), float64], Tensor[(3, 420), float32], Tensor[(10, 12, 9), float64], Tensor[(15, 10, 15), bool]) */;
  %468 = %459.1;
  %469 = %464.0;
  %470 = %467.0;
  (%468, %469, meta[relay.Constant][30] /* ty=Tensor[(585), int32] */, %470, %var_2645)
}

def @func_3175(%var_3131: Tensor[(6, 14, 4), uint8], %var_3132: Tensor[(6, 14, 4), uint8], %var_3145: Tensor[(21), float64]) -> (Tensor[(6, 14, 4), uint8], Tensor[(3, 1, 7), float64], Tensor[(3, 1, 7), float64], Tensor[(21), float64]) {
  %471 = cast(%var_3132, dtype="uint8") /* ty=Tensor[(6, 14, 4), uint8] */;
  %472 = shape_of(%var_3131, dtype="int32") /* ty=Tensor[(3), int32] */;
  %473 = cast(%var_3131, dtype="uint8") /* ty=Tensor[(6, 14, 4), uint8] */;
  %474 = dyn.reshape(%471, %472, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %475 = cast(%var_3145, dtype="float64") /* ty=Tensor[(21), float64] */;
  %476 = reshape(%475, newshape=[3, 1, 7]) /* ty=Tensor[(3, 1, 7), float64] */;
  %477 = @func_2836(%476) /* ty=(Tensor[(3, 1, 7), float64], Tensor[(3, 1, 7), float64]) */;
  %478 = %477.1;
  %479 = cast(%478, dtype="float64") /* ty=Tensor[(3, 1, 7), float64] */;
  %480 = reshape(%479, newshape=[3, 1, 7]) /* ty=Tensor[(3, 1, 7), float64] */;
  %481 = @func_2836(%480) /* ty=(Tensor[(3, 1, 7), float64], Tensor[(3, 1, 7), float64]) */;
  %482 = cast(%var_3145, dtype="float64") /* ty=Tensor[(21), float64] */;
  %483 = left_shift(%473, %474) /* ty=Tensor[(6, 14, 4), uint8] */;
  %484 = %481.1;
  %485 = atanh(%482) /* ty=Tensor[(21), float64] */;
  (%483, %478, %484, %485)
}

def @func_3737() -> (Tensor[(12, 7, 3), float32], Tensor[(10, 7, 8), uint64], Tensor[(560), uint64]) {
  %486 = @func_3483() /* ty=(Tensor[(12, 7, 3), float32],) */;
  %487 = cast(meta[relay.Constant][31] /* ty=Tensor[(560), uint64] */, dtype="uint64") /* ty=Tensor[(560), uint64] */;
  %488 = cast(meta[relay.Constant][31] /* ty=Tensor[(560), uint64] */, dtype="uint64") /* ty=Tensor[(560), uint64] */;
  %489 = reshape(%487, newshape=[10, 7, 8]) /* ty=Tensor[(10, 7, 8), uint64] */;
  %490 = reshape(%488, newshape=[10, 7, 8]) /* ty=Tensor[(10, 7, 8), uint64] */;
  %491 = @func_1960(%489, %490) /* ty=(Tensor[(10, 7, 8), uint64], Tensor[(10, 7, 8), bool]) */;
  %492 = %486.0;
  %493 = %491.0;
  (%492, %493, meta[relay.Constant][31] /* ty=Tensor[(560), uint64] */)
}

def @func_5814() -> (Tensor[(9, 4, 9), float64], Tensor[(324), float64], Tensor[(350, 3), float32], Tensor[(25), float32], Tensor[(585), int32]) {
  %494 = @func_5041() /* ty=(Tensor[(9, 4, 9), float64],) */;
  %495 = @func_2745() /* ty=(Tensor[(12, 7, 3), float64], Tensor[(9, 4, 9), float64], Tensor[(324), float64]) */;
  %496 = cast(meta[relay.Constant][32] /* ty=Tensor[(25), float32] */, dtype="float32") /* ty=Tensor[(25), float32] */;
  %497 = cast(meta[relay.Constant][33] /* ty=Tensor[(585), int32] */, dtype="int32") /* ty=Tensor[(585), int32] */;
  %498 = reshape(%496, newshape=[25]) /* ty=Tensor[(25), float32] */;
  %499 = reshape(%497, newshape=[585]) /* ty=Tensor[(585), int32] */;
  %500 = @func_4420(%498, %499) /* ty=(Tensor[(12, 7, 3), float32], Tensor[(7, ?, 10), int16], Tensor[(25), float32], Tensor[(585), int32], Tensor[(1260), float32], Tensor[(350, 3), float32], Tensor[(14, 9, 10), float32]) */;
  %501 = %494.0;
  %502 = %495.2;
  %503 = %500.5;
  (%501, %502, %503, meta[relay.Constant][32] /* ty=Tensor[(25), float32] */, meta[relay.Constant][33] /* ty=Tensor[(585), int32] */)
}

def @func_5933() -> (Tensor[(12, 7, 3), float64], Tensor[(7, 1, 10), float64], Tensor[(70), float64]) {
  %504 = @func_5729() /* ty=(Tensor[(12, 7, 3), float64],) */;
  %505 = cast(meta[relay.Constant][34] /* ty=Tensor[(70), float64] */, dtype="float64") /* ty=Tensor[(70), float64] */;
  %506 = reshape(%505, newshape=[7, 1, 10]) /* ty=Tensor[(7, 1, 10), float64] */;
  %507 = @func_871(%506) /* ty=(Tensor[(7, 1, 10), float64],) */;
  %508 = %504.0;
  %509 = %507.0;
  (%508, %509, meta[relay.Constant][34] /* ty=Tensor[(70), float64] */)
}

def @func_3372(%var_3193: Tensor[(25), float32], %var_3194: Tensor[(585), int32], %var_3278: Tensor[(3, 420), float32], %var_3297: Tensor[(7, 15, 10), float32], %var_3353: Tensor[(7, 15, 10), bool]) -> (Tensor[(25), float32], Tensor[(585), int32], Tensor[(585), int32], Tensor[(9, 4, 9), float64], Tensor[(2250), float32], Tensor[(5, ?, 10), uint16], Tensor[(50), float64], Tensor[(3, 420), float64], Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), float32], Tensor[(7, ?, 10), int16], Tensor[(7, 15, 10), int8], Tensor[(7, 15, 10), float32]) {
  %510 = cast(%var_3194, dtype="int32") /* ty=Tensor[(585), int32] */;
  %511 = reshape(%510, newshape=[585]) /* ty=Tensor[(585), int32] */;
  %512 = @func_2453(%511) /* ty=(Tensor[(12, 7, 3), float32], Tensor[(13, 15, 3), bool], Tensor[(585), int32]) */;
  %513 = @func_3065() /* ty=(Tensor[(9, 4, 9), float64], Tensor[(12, 7, 3), float32]) */;
  %514 = %513.0;
  %515 = cast(meta[relay.Constant][35] /* ty=Tensor[(9, 4, 9), float64] */, dtype="float64") /* ty=Tensor[(9, 4, 9), float64] */;
  %516 = shape_of(%514, dtype="int32") /* ty=Tensor[(3), int32] */;
  %517 = cast(%514, dtype="float64") /* ty=Tensor[(9, 4, 9), float64] */;
  %518 = dyn.reshape(%515, %516, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %519 = cast(meta[relay.Constant][37] /* ty=Tensor[(50), float64] */, dtype="float64") /* ty=Tensor[(50), float64] */;
  %520 = cast(meta[relay.Constant][36] /* ty=Tensor[(2250), float32] */, dtype="float32") /* ty=Tensor[(2250), float32] */;
  %521 = reshape(%520, newshape=[15, 10, 15]) /* ty=Tensor[(15, 10, 15), float32] */;
  %522 = @func_1537(%521) /* ty=(Tensor[(10, 12, 9), float64], Tensor[(50), float64], Tensor[(3, 420), float32], Tensor[(10, 12, 9), float64], Tensor[(15, 10, 15), bool]) */;
  %523 = %522.2;
  %524 = cast(%523, dtype="float32") /* ty=Tensor[(3, 420), float32] */;
  %525 = reshape(%519, newshape=[5, 1, 10]) /* ty=Tensor[(5, 1, 10), float64] */;
  %526 = reshape(%524, newshape=[1260]) /* ty=Tensor[(1260), float32] */;
  %527 = @func_649(%525, %526) /* ty=(Tensor[(14, 9, 10), float32], Tensor[(1260), float32], Tensor[(14, 9, 10), float32], Tensor[(14, 9, 10), float32], Tensor[(10, 12, 9), float64], Tensor[(1080), int32], Tensor[(10, 12, 9), int32], Tensor[(5, ?, 10), uint16], Tensor[(5, ?, 10), float32]) */;
  %528 = cast(%var_3278, dtype="float64") /* ty=Tensor[(3, 420), float64] */;
  %529 = shape_of(%523, dtype="int32") /* ty=Tensor[(2), int32] */;
  %530 = cast(%523, dtype="float64") /* ty=Tensor[(3, 420), float64] */;
  %531 = dyn.reshape(%528, %529, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %532 = @func_2423() /* ty=(Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), float32]) */;
  %533 = cast(%var_3194, dtype="int32") /* ty=Tensor[(585), int32] */;
  %534 = reshape(%533, newshape=[585]) /* ty=Tensor[(585), int32] */;
  %535 = @func_2453(%534) /* ty=(Tensor[(12, 7, 3), float32], Tensor[(13, 15, 3), bool], Tensor[(585), int32]) */;
  %536 = %512.2;
  %537 = cast(%536, dtype="int32") /* ty=Tensor[(585), int32] */;
  %538 = reshape(%537, newshape=[585]) /* ty=Tensor[(585), int32] */;
  %539 = @func_2453(%538) /* ty=(Tensor[(12, 7, 3), float32], Tensor[(13, 15, 3), bool], Tensor[(585), int32]) */;
  %540 = cast(%var_3193, dtype="float32") /* ty=Tensor[(25), float32] */;
  %541 = cast(%var_3194, dtype="int32") /* ty=Tensor[(585), int32] */;
  %542 = reshape(%540, newshape=[5, 5, 1]) /* ty=Tensor[(5, 5, 1), float32] */;
  %543 = reshape(%541, newshape=[65, 9]) /* ty=Tensor[(65, 9), int32] */;
  %544 = @func_1842(%542, %543) /* ty=(Tensor[(7, 1, 10), float64], Tensor[(7, 10), float64], Tensor[(13, 15, 3), bool], Tensor[(65, 9), int32], Tensor[(10, 12, 9), int32], Tensor[(1080), int32], Tensor[(5, 5, ?), float32], Tensor[(7, 1, 10), float64]) */;
  %545 = %544.0;
  %546 = cast(%545, dtype="float64") /* ty=Tensor[(7, 1, 10), float64] */;
  %547 = atan(%546) /* ty=Tensor[(7, 1, 10), float64] */;
  %548 = cast(%545, dtype="uint16") /* ty=Tensor[(7, 1, 10), uint16] */;
  %549 = shape_of(%547, dtype="int32") /* ty=Tensor[(3), int32] */;
  %550 = cast(%547, dtype="uint16") /* ty=Tensor[(7, 1, 10), uint16] */;
  %551 = dyn.reshape(%548, %549, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %552 = bitwise_or(%550, %551) /* ty=Tensor[(7, ?, 10), uint16] */;
  %553 = cast(%552, dtype="float32") /* ty=Tensor[(7, ?, 10), float32] */;
  %554 = acos(%553) /* ty=Tensor[(7, ?, 10), float32] */;
  %555 = cast(%554, dtype="int16") /* ty=Tensor[(7, ?, 10), int16] */;
  %556 = shape_of(%552, dtype="int32") /* ty=Tensor[(3), int32] */;
  %557 = cast(%552, dtype="int16") /* ty=Tensor[(7, ?, 10), int16] */;
  %558 = dyn.reshape(%555, %556, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %559 = cast(%554, dtype="uint64") /* ty=Tensor[(7, ?, 10), uint64] */;
  %560 = cast(%var_3297, dtype="uint64") /* ty=Tensor[(7, 15, 10), uint64] */;
  %561 = left_shift(%559, %560) /* ty=Tensor[(7, 15, 10), uint64] */;
  %562 = cast(%552, dtype="float32") /* ty=Tensor[(7, ?, 10), float32] */;
  %563 = shape_of(%547, dtype="int32") /* ty=Tensor[(3), int32] */;
  %564 = cast(%547, dtype="float32") /* ty=Tensor[(7, 1, 10), float32] */;
  %565 = dyn.reshape(%562, %563, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %566 = minimum(%564, %565) /* ty=Tensor[(7, ?, 10), float32] */;
  %567 = cast(%561, dtype="bool") /* ty=Tensor[(7, 15, 10), bool] */;
  %568 = cast(%566, dtype="bool") /* ty=Tensor[(7, ?, 10), bool] */;
  %569 = logical_or(%567, %568) /* ty=Tensor[(7, 15, 10), bool] */;
  %570 = cast(%var_3353, dtype="int8") /* ty=Tensor[(7, 15, 10), int8] */;
  %571 = shape_of(%569, dtype="int32") /* ty=Tensor[(3), int32] */;
  %572 = cast(%569, dtype="int8") /* ty=Tensor[(7, 15, 10), int8] */;
  %573 = dyn.reshape(%570, %571, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %574 = cast(%var_3297, dtype="float32") /* ty=Tensor[(7, 15, 10), float32] */;
  %575 = floor_mod(%517, %518) /* ty=Tensor[(9, 4, 9), float64] */;
  %576 = %527.7;
  %577 = floor_divide(%530, %531) /* ty=Tensor[(3, 420), float64] */;
  %578 = %532.0;
  %579 = %535.0;
  %580 = %539.0;
  %581 = bitwise_xor(%557, %558) /* ty=Tensor[(7, ?, 10), int16] */;
  %582 = add(%572, %573) /* ty=Tensor[(7, 15, 10), int8] */;
  %583 = sigmoid(%574) /* ty=Tensor[(7, 15, 10), float32] */;
  (%var_3193, %var_3194, %536, %575, meta[relay.Constant][36] /* ty=Tensor[(2250), float32] */, %576, meta[relay.Constant][37] /* ty=Tensor[(50), float64] */, %577, %578, %579, %580, %581, %582, %583)
}

def @func_790(%var_770: Tensor[(9, 4, 9), float64]) -> Tensor[(9, 4, 9), float64] {
  %584 = cast(%var_770, dtype="float64") /* ty=Tensor[(9, 4, 9), float64] */;
  acosh(%584) /* ty=Tensor[(9, 4, 9), float64] */
}

def @func_1719(%var_1711: Tensor[(1, 6, 3), float64]) -> Tensor[(1, 6, 3), float64] {
  %585 = cast(%var_1711, dtype="float64") /* ty=Tensor[(1, 6, 3), float64] */;
  tan(%585) /* ty=Tensor[(1, 6, 3), float64] */
}

def @func_4864(%var_4849: Tensor[(3, 10, 8), float64]) -> Tensor[(3, 10, 8), float64] {
  %586 = cast(%var_4849, dtype="float64") /* ty=Tensor[(3, 10, 8), float64] */;
  rsqrt(%586) /* ty=Tensor[(3, 10, 8), float64] */
}

def @func_4840() -> Tensor[(324), float64] {
  %587 = @func_2745() /* ty=(Tensor[(12, 7, 3), float64], Tensor[(9, 4, 9), float64], Tensor[(324), float64]) */;
  %587.2
}

def @func_521(%var_500: Tensor[(10, 12, 9), int32], %var_501: Tensor[(10, 12, 9), int32]) -> (Tensor[(10, 12, 9), int32], Tensor[(10, 12, 9), float64]) {
  %588 = cast(%var_501, dtype="int32") /* ty=Tensor[(10, 12, 9), int32] */;
  %589 = shape_of(%var_500, dtype="int32") /* ty=Tensor[(3), int32] */;
  %590 = cast(%var_500, dtype="int32") /* ty=Tensor[(10, 12, 9), int32] */;
  %591 = dyn.reshape(%588, %589, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %592 = cast(%var_500, dtype="float64") /* ty=Tensor[(10, 12, 9), float64] */;
  %593 = left_shift(%590, %591) /* ty=Tensor[(10, 12, 9), int32] */;
  %594 = exp(%592) /* ty=Tensor[(10, 12, 9), float64] */;
  (%593, %594)
}

def @func_5302() -> (Tensor[(12, 7, 3), float32],) {
  %595 = @func_2568() /* ty=(Tensor[(12, 7, 3), float64], Tensor[(12, 7, 3), float32]) */;
  %596 = %595.1;
  (%596,)
}

def @func_2586() -> (Tensor[(12, 7, 3), int8],) {
  %597 = @func_2423() /* ty=(Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), float32]) */;
  %598 = %597.0;
  %599 = cast(meta[relay.Constant][38] /* ty=Tensor[(12, 7, 3), float32] */, dtype="int8") /* ty=Tensor[(12, 7, 3), int8] */;
  %600 = shape_of(%598, dtype="int32") /* ty=Tensor[(3), int32] */;
  %601 = cast(%598, dtype="int8") /* ty=Tensor[(12, 7, 3), int8] */;
  %602 = dyn.reshape(%599, %600, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %603 = bitwise_xor(%601, %602) /* ty=Tensor[(12, 7, 3), int8] */;
  (%603,)
}

def @func_5020() -> (Tensor[(12, 7, 3), float64], Tensor[(324), float64]) {
  %604 = @func_4020() /* ty=(Tensor[(12, 7, 3), float64],) */;
  %605 = @func_3560() /* ty=(Tensor[(12, 7, 3), int8], Tensor[(324), float64]) */;
  %606 = %604.0;
  %607 = %605.1;
  (%606, %607)
}

def @func_5179(%var_5155: Tensor[(2250), float32]) -> (Tensor[(12, 7, 3), float32], Tensor[(10, 12, 9), float64], Tensor[(2250), float32], Tensor[(12, 7, 3), float32]) {
  %608 = cast(%var_5155, dtype="float32") /* ty=Tensor[(2250), float32] */;
  %609 = reshape(%608, newshape=[15, 10, 15]) /* ty=Tensor[(15, 10, 15), float32] */;
  %610 = @func_1537(%609) /* ty=(Tensor[(10, 12, 9), float64], Tensor[(50), float64], Tensor[(3, 420), float32], Tensor[(10, 12, 9), float64], Tensor[(15, 10, 15), bool]) */;
  %611 = @func_3843() /* ty=Tensor[(12, 7, 3), float32] */;
  %612 = cast(%611, dtype="float32") /* ty=Tensor[(12, 7, 3), float32] */;
  %613 = reshape(%612, newshape=[12, 7, 3]) /* ty=Tensor[(12, 7, 3), float32] */;
  %614 = @func_2703(%613) /* ty=(Tensor[(12, 7, 3), float32], Tensor[(1, 6, 3), float64], Tensor[(3, 6), float64]) */;
  %615 = %610.3;
  %616 = %614.0;
  (%611, %615, %var_5155, %616)
}

def @func_1842(%var_1807: Tensor[(5, 5, 1), float32], %var_1815: Tensor[(65, 9), int32]) -> (Tensor[(7, 1, 10), float64], Tensor[(7, 10), float64], Tensor[(13, 15, 3), bool], Tensor[(65, 9), int32], Tensor[(10, 12, 9), int32], Tensor[(1080), int32], Tensor[(5, 5, ?), float32], Tensor[(7, 1, 10), float64]) {
  %617 = cast(meta[relay.Constant][39] /* ty=Tensor[(7, 10), float64] */, dtype="float64") /* ty=Tensor[(7, 10), float64] */;
  %618 = reshape(%617, newshape=[7, 1, 10]) /* ty=Tensor[(7, 1, 10), float64] */;
  %619 = @func_871(%618) /* ty=(Tensor[(7, 1, 10), float64],) */;
  %620 = cast(%var_1815, dtype="int32") /* ty=Tensor[(65, 9), int32] */;
  %621 = cast(%var_1815, dtype="int32") /* ty=Tensor[(65, 9), int32] */;
  %622 = reshape(%620, newshape=[13, 15, 3]) /* ty=Tensor[(13, 15, 3), int32] */;
  %623 = reshape(%621, newshape=[13, 15, 3]) /* ty=Tensor[(13, 15, 3), int32] */;
  %624 = @func_1690(%622, %623) /* ty=(Tensor[(13, 15, 3), bool],) */;
  %625 = cast(meta[relay.Constant][40] /* ty=Tensor[(1080), int32] */, dtype="int32") /* ty=Tensor[(1080), int32] */;
  %626 = cast(meta[relay.Constant][40] /* ty=Tensor[(1080), int32] */, dtype="int32") /* ty=Tensor[(1080), int32] */;
  %627 = reshape(%625, newshape=[10, 12, 9]) /* ty=Tensor[(10, 12, 9), int32] */;
  %628 = reshape(%626, newshape=[10, 12, 9]) /* ty=Tensor[(10, 12, 9), int32] */;
  %629 = @func_521(%627, %628) /* ty=(Tensor[(10, 12, 9), int32], Tensor[(10, 12, 9), float64]) */;
  %630 = cast(%var_1807, dtype="float32") /* ty=Tensor[(5, 5, 1), float32] */;
  %631 = log10(%630) /* ty=Tensor[(5, 5, 1), float32] */;
  %632 = cast(%var_1807, dtype="int32") /* ty=Tensor[(5, 5, 1), int32] */;
  %633 = shape_of(%631, dtype="int32") /* ty=Tensor[(3), int32] */;
  %634 = cast(%631, dtype="int32") /* ty=Tensor[(5, 5, 1), int32] */;
  %635 = dyn.reshape(%632, %633, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %636 = add(%634, %635) /* ty=Tensor[(5, 5, ?), int32] */;
  %637 = cast(%636, dtype="float32") /* ty=Tensor[(5, 5, ?), float32] */;
  %638 = cast(meta[relay.Constant][39] /* ty=Tensor[(7, 10), float64] */, dtype="float64") /* ty=Tensor[(7, 10), float64] */;
  %639 = reshape(%638, newshape=[7, 1, 10]) /* ty=Tensor[(7, 1, 10), float64] */;
  %640 = @func_871(%639) /* ty=(Tensor[(7, 1, 10), float64],) */;
  %641 = %619.0;
  %642 = %624.0;
  %643 = %629.0;
  %644 = acosh(%637) /* ty=Tensor[(5, 5, ?), float32] */;
  %645 = %640.0;
  (%641, meta[relay.Constant][39] /* ty=Tensor[(7, 10), float64] */, %642, %var_1815, %643, meta[relay.Constant][40] /* ty=Tensor[(1080), int32] */, %644, %645)
}

def @func_2909() -> (Tensor[(9, 4, 9), float64], Tensor[(12, 7, 3), float32]) {
  %646 = @func_2745() /* ty=(Tensor[(12, 7, 3), float64], Tensor[(9, 4, 9), float64], Tensor[(324), float64]) */;
  %647 = @func_2423() /* ty=(Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), float32]) */;
  %648 = %646.1;
  %649 = %647.1;
  (%648, %649)
}

def @func_3615(%var_3597: Tensor[(324), float64]) -> (Tensor[(324), bool], Tensor[(3, 1, 7), float64], Tensor[(336), uint8], Tensor[(21, 1), float64]) {
  %650 = @func_2745() /* ty=(Tensor[(12, 7, 3), float64], Tensor[(9, 4, 9), float64], Tensor[(324), float64]) */;
  %651 = %650.2;
  %652 = cast(%var_3597, dtype="bool") /* ty=Tensor[(324), bool] */;
  %653 = shape_of(%651, dtype="int32") /* ty=Tensor[(1), int32] */;
  %654 = cast(%651, dtype="bool") /* ty=Tensor[(324), bool] */;
  %655 = dyn.reshape(%652, %653, newshape=[]) /* ty=Tensor[(?), bool] */;
  %656 = cast(meta[relay.Constant][41] /* ty=Tensor[(336), uint8] */, dtype="uint8") /* ty=Tensor[(336), uint8] */;
  %657 = cast(meta[relay.Constant][41] /* ty=Tensor[(336), uint8] */, dtype="uint8") /* ty=Tensor[(336), uint8] */;
  %658 = cast(meta[relay.Constant][42] /* ty=Tensor[(21, 1), float64] */, dtype="float64") /* ty=Tensor[(21, 1), float64] */;
  %659 = reshape(%656, newshape=[6, 14, 4]) /* ty=Tensor[(6, 14, 4), uint8] */;
  %660 = reshape(%657, newshape=[6, 14, 4]) /* ty=Tensor[(6, 14, 4), uint8] */;
  %661 = reshape(%658, newshape=[21]) /* ty=Tensor[(21), float64] */;
  %662 = @func_3175(%659, %660, %661) /* ty=(Tensor[(6, 14, 4), uint8], Tensor[(3, 1, 7), float64], Tensor[(3, 1, 7), float64], Tensor[(21), float64]) */;
  %663 = not_equal(%654, %655) /* ty=Tensor[(324), bool] */;
  %664 = %662.1;
  (%663, %664, meta[relay.Constant][41] /* ty=Tensor[(336), uint8] */, meta[relay.Constant][42] /* ty=Tensor[(21, 1), float64] */)
}

def @func_6054() -> (Tensor[(324), float64], Tensor[(10, 12, 9), int32], Tensor[(1080), int32]) {
  %665 = @func_2745() /* ty=(Tensor[(12, 7, 3), float64], Tensor[(9, 4, 9), float64], Tensor[(324), float64]) */;
  %666 = cast(meta[relay.Constant][43] /* ty=Tensor[(1080), int32] */, dtype="int32") /* ty=Tensor[(1080), int32] */;
  %667 = cast(meta[relay.Constant][43] /* ty=Tensor[(1080), int32] */, dtype="int32") /* ty=Tensor[(1080), int32] */;
  %668 = reshape(%666, newshape=[10, 12, 9]) /* ty=Tensor[(10, 12, 9), int32] */;
  %669 = reshape(%667, newshape=[10, 12, 9]) /* ty=Tensor[(10, 12, 9), int32] */;
  %670 = @func_521(%668, %669) /* ty=(Tensor[(10, 12, 9), int32], Tensor[(10, 12, 9), float64]) */;
  %671 = %665.2;
  %672 = %670.0;
  (%671, %672, meta[relay.Constant][43] /* ty=Tensor[(1080), int32] */)
}

def @func_4728() -> (Tensor[(560), float64], Tensor[(12, 7, 3), float32]) {
  %673 = @func_3737() /* ty=(Tensor[(12, 7, 3), float32], Tensor[(10, 7, 8), uint64], Tensor[(560), uint64]) */;
  %674 = %673.2;
  %675 = cast(meta[relay.Constant][44] /* ty=Tensor[(560), uint64] */, dtype="float64") /* ty=Tensor[(560), float64] */;
  %676 = shape_of(%674, dtype="int32") /* ty=Tensor[(1), int32] */;
  %677 = cast(%674, dtype="float64") /* ty=Tensor[(560), float64] */;
  %678 = dyn.reshape(%675, %676, newshape=[]) /* ty=Tensor[(?), float64] */;
  %679 = mod(%677, %678) /* ty=Tensor[(560), float64] */;
  %680 = @func_4143() /* ty=Tensor[(12, 7, 3), float32] */;
  (%679, %680)
}

def @func_7485() -> (Tensor[(9, 4, 9), float64],) {
  %681 = @func_3665() /* ty=(Tensor[(9, 4, 9), float64], Tensor[(585, 1), int32], Tensor[(585), int32]) */;
  %682 = %681.0;
  (%682,)
}

def @func_6449() -> (Tensor[(12, 7, 3), float32],) {
  %683 = @func_2423() /* ty=(Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), float32]) */;
  %684 = %683.1;
  (%684,)
}

def @func_2453(%var_2446: Tensor[(585), int32]) -> (Tensor[(12, 7, 3), float32], Tensor[(13, 15, 3), bool], Tensor[(585), int32]) {
  %685 = @func_2423() /* ty=(Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), float32]) */;
  %686 = cast(%var_2446, dtype="int32") /* ty=Tensor[(585), int32] */;
  %687 = cast(%var_2446, dtype="int32") /* ty=Tensor[(585), int32] */;
  %688 = reshape(%686, newshape=[13, 15, 3]) /* ty=Tensor[(13, 15, 3), int32] */;
  %689 = reshape(%687, newshape=[13, 15, 3]) /* ty=Tensor[(13, 15, 3), int32] */;
  %690 = @func_1690(%688, %689) /* ty=(Tensor[(13, 15, 3), bool],) */;
  %691 = %685.1;
  %692 = %690.0;
  (%691, %692, %var_2446)
}

def @func_2814(%var_2808: Tensor[(585, 1), int32]) -> (Tensor[(12, 7, 3), int8], Tensor[(13, 15, 3), bool], Tensor[(585, 1), int32]) {
  %693 = @func_2586() /* ty=(Tensor[(12, 7, 3), int8],) */;
  %694 = cast(%var_2808, dtype="int32") /* ty=Tensor[(585, 1), int32] */;
  %695 = cast(%var_2808, dtype="int32") /* ty=Tensor[(585, 1), int32] */;
  %696 = reshape(%694, newshape=[13, 15, 3]) /* ty=Tensor[(13, 15, 3), int32] */;
  %697 = reshape(%695, newshape=[13, 15, 3]) /* ty=Tensor[(13, 15, 3), int32] */;
  %698 = @func_1690(%696, %697) /* ty=(Tensor[(13, 15, 3), bool],) */;
  %699 = %693.0;
  %700 = %698.0;
  (%699, %700, %var_2808)
}

def @func_6540() -> (Tensor[(12, 7, 3), float64],) {
  %701 = @func_4020() /* ty=(Tensor[(12, 7, 3), float64],) */;
  %702 = %701.0;
  (%702,)
}

def @func_4634(%var_4611: Tensor[(2250), float32]) -> (Tensor[(9, 4, 9), float64], Tensor[(12, 7, 3), float32], Tensor[(2250), float32], Tensor[(25), float32]) {
  %703 = @func_3065() /* ty=(Tensor[(9, 4, 9), float64], Tensor[(12, 7, 3), float32]) */;
  %704 = cast(%var_4611, dtype="float32") /* ty=Tensor[(2250), float32] */;
  %705 = cast(meta[relay.Constant][45] /* ty=Tensor[(25), float32] */, dtype="float32") /* ty=Tensor[(25), float32] */;
  %706 = reshape(%704, newshape=[15, 150]) /* ty=Tensor[(15, 150), float32] */;
  %707 = reshape(%705, newshape=[25]) /* ty=Tensor[(25), float32] */;
  %708 = @func_3022(%706, %707) /* ty=(Tensor[(12, 7, 3), float32], Tensor[(585), int32], Tensor[(15, 150), int32], Tensor[(7, 10), float64], Tensor[(25), float32], Tensor[(15, 150), bool]) */;
  %709 = %703.0;
  %710 = %708.0;
  (%709, %710, %var_4611, meta[relay.Constant][45] /* ty=Tensor[(25), float32] */)
}

def @func_3843() -> Tensor[(12, 7, 3), float32] {
  %711 = @func_2423() /* ty=(Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), float32]) */;
  %711.1
}

def @func_2745() -> (Tensor[(12, 7, 3), float64], Tensor[(9, 4, 9), float64], Tensor[(324), float64]) {
  %712 = @func_2568() /* ty=(Tensor[(12, 7, 3), float64], Tensor[(12, 7, 3), float32]) */;
  %713 = cast(meta[relay.Constant][46] /* ty=Tensor[(324), float64] */, dtype="float64") /* ty=Tensor[(324), float64] */;
  %714 = reshape(%713, newshape=[9, 4, 9]) /* ty=Tensor[(9, 4, 9), float64] */;
  %715 = %712.0;
  %716 = @func_790(%714) /* ty=Tensor[(9, 4, 9), float64] */;
  (%715, %716, meta[relay.Constant][46] /* ty=Tensor[(324), float64] */)
}

def @func_3065() -> (Tensor[(9, 4, 9), float64], Tensor[(12, 7, 3), float32]) {
  %717 = @func_2745() /* ty=(Tensor[(12, 7, 3), float64], Tensor[(9, 4, 9), float64], Tensor[(324), float64]) */;
  %718 = @func_2568() /* ty=(Tensor[(12, 7, 3), float64], Tensor[(12, 7, 3), float32]) */;
  %719 = %717.1;
  %720 = %718.1;
  (%719, %720)
}

def @func_6732(%var_6724: int64, %var_6725: Tensor[(5, 4, 3), int64]) -> (Tensor[(5, 4, 3), bool], Tensor[(5, 4, 3), uint64]) {
  %721 = cast(%var_6724, dtype="bool") /* ty=bool */;
  %722 = cast(%var_6725, dtype="bool") /* ty=Tensor[(5, 4, 3), bool] */;
  %723 = cast(%var_6724, dtype="uint64") /* ty=uint64 */;
  %724 = cast(%var_6725, dtype="uint64") /* ty=Tensor[(5, 4, 3), uint64] */;
  %725 = greater(%721, %722) /* ty=Tensor[(5, 4, 3), bool] */;
  %726 = minimum(%723, %724) /* ty=Tensor[(5, 4, 3), uint64] */;
  (%725, %726)
}

def @func_6934(%var_6929: Tensor[(25), float32]) -> Tensor[(25), bool] {
  %727 = @func_5814() /* ty=(Tensor[(9, 4, 9), float64], Tensor[(324), float64], Tensor[(350, 3), float32], Tensor[(25), float32], Tensor[(585), int32]) */;
  %728 = %727.3;
  %729 = cast(%var_6929, dtype="bool") /* ty=Tensor[(25), bool] */;
  %730 = shape_of(%728, dtype="int32") /* ty=Tensor[(1), int32] */;
  %731 = cast(%728, dtype="bool") /* ty=Tensor[(25), bool] */;
  %732 = dyn.reshape(%729, %730, newshape=[]) /* ty=Tensor[(?), bool] */;
  greater(%731, %732) /* ty=Tensor[(25), bool] */
}

def @func_7289(%var_7276: Tensor[(12, 7, 3), float64]) -> (Tensor[(12, 7, 3), int16],) {
  %733 = @func_3808() /* ty=Tensor[(12, 7, 3), float64] */;
  %734 = cast(%var_7276, dtype="int16") /* ty=Tensor[(12, 7, 3), int16] */;
  %735 = shape_of(%733, dtype="int32") /* ty=Tensor[(3), int32] */;
  %736 = cast(%733, dtype="int16") /* ty=Tensor[(12, 7, 3), int16] */;
  %737 = dyn.reshape(%734, %735, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %738 = maximum(%736, %737) /* ty=Tensor[(12, 7, 3), int16] */;
  (%738,)
}

def @func_7355(%var_7348: Tensor[(585), int32]) -> (Tensor[(324), float64], Tensor[(585), int32], Tensor[(585), int32]) {
  %739 = @func_5984() /* ty=(Tensor[(324), float64], Tensor[(12, 7, 3), float32], Tensor[(9, 4, 9), float64], Tensor[(12, 7, 3), float32]) */;
  %740 = cast(%var_7348, dtype="int32") /* ty=Tensor[(585), int32] */;
  %741 = reshape(%740, newshape=[585]) /* ty=Tensor[(585), int32] */;
  %742 = @func_2453(%741) /* ty=(Tensor[(12, 7, 3), float32], Tensor[(13, 15, 3), bool], Tensor[(585), int32]) */;
  %743 = %739.0;
  %744 = %742.2;
  (%743, %744, %var_7348)
}

def @func_3905(%var_3900: Tensor[(324), float64]) -> Tensor[(324), uint64] {
  %745 = @func_3560() /* ty=(Tensor[(12, 7, 3), int8], Tensor[(324), float64]) */;
  %746 = %745.1;
  %747 = cast(%var_3900, dtype="uint64") /* ty=Tensor[(324), uint64] */;
  %748 = shape_of(%746, dtype="int32") /* ty=Tensor[(1), int32] */;
  %749 = cast(%746, dtype="uint64") /* ty=Tensor[(324), uint64] */;
  %750 = dyn.reshape(%747, %748, newshape=[]) /* ty=Tensor[(?), uint64] */;
  bitwise_xor(%749, %750) /* ty=Tensor[(324), uint64] */
}

def @main(%var_8045: Tensor[(1, 12, 1), int8]) -> (Tensor[(1, 12, 1), int8], Tensor[(12, 7, 3), float32], Tensor[(?, 12, ?), bool], Tensor[(?, 12, ?), bool]) {
  %751 = cast(meta[relay.Constant][47] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %752 = cast(%var_8045, dtype="int8") /* ty=Tensor[(1, 12, 1), int8] */;
  %753 = @func_2423() /* ty=(Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), float32]) */;
  %754 = cast(%var_8045, dtype="float32") /* ty=Tensor[(1, 12, 1), float32] */;
  %755 = log2(%754) /* ty=Tensor[(1, 12, 1), float32] */;
  %756 = cast(%755, dtype="bool") /* ty=Tensor[(1, 12, 1), bool] */;
  %757 = shape_of(%var_8045, dtype="int32") /* ty=Tensor[(3), int32] */;
  %758 = cast(%var_8045, dtype="bool") /* ty=Tensor[(1, 12, 1), bool] */;
  %759 = dyn.reshape(%756, %757, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %760 = cast(%755, dtype="bool") /* ty=Tensor[(1, 12, 1), bool] */;
  %761 = shape_of(%var_8045, dtype="int32") /* ty=Tensor[(3), int32] */;
  %762 = cast(%var_8045, dtype="bool") /* ty=Tensor[(1, 12, 1), bool] */;
  %763 = dyn.reshape(%760, %761, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %764 = left_shift(%751, %752) /* ty=Tensor[(1, 12, 1), int8] */;
  %765 = %753.1;
  %766 = greater(%758, %759) /* ty=Tensor[(?, 12, ?), bool] */;
  %767 = greater_equal(%762, %763) /* ty=Tensor[(?, 12, ?), bool] */;
  (%764, %765, %766, %767)
}

def @func_7528() -> Tensor[(324), float64] {
  %768 = @func_5321() /* ty=(Tensor[(324), float64],) */;
  %768.0
}

def @func_4365(%var_4331: Tensor[(9, 4, 9), float64], %var_4362: Tensor[(585), int32]) -> (Tensor[(9, 4, 9), uint32], Tensor[(585, 1), int32], Tensor[(585), int32]) {
  %769 = @func_3665() /* ty=(Tensor[(9, 4, 9), float64], Tensor[(585, 1), int32], Tensor[(585), int32]) */;
  %770 = %769.0;
  %771 = cast(%var_4331, dtype="uint32") /* ty=Tensor[(9, 4, 9), uint32] */;
  %772 = shape_of(%770, dtype="int32") /* ty=Tensor[(3), int32] */;
  %773 = cast(%770, dtype="uint32") /* ty=Tensor[(9, 4, 9), uint32] */;
  %774 = dyn.reshape(%771, %772, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %775 = cast(%var_4362, dtype="int32") /* ty=Tensor[(585), int32] */;
  %776 = reshape(%775, newshape=[585, 1]) /* ty=Tensor[(585, 1), int32] */;
  %777 = @func_2814(%776) /* ty=(Tensor[(12, 7, 3), int8], Tensor[(13, 15, 3), bool], Tensor[(585, 1), int32]) */;
  %778 = maximum(%773, %774) /* ty=Tensor[(9, 4, 9), uint32] */;
  %779 = %777.2;
  (%778, %779, %var_4362)
}

def @func_3808() -> Tensor[(12, 7, 3), float64] {
  %780 = @func_2745() /* ty=(Tensor[(12, 7, 3), float64], Tensor[(9, 4, 9), float64], Tensor[(324), float64]) */;
  %780.0
}

def @func_3483() -> (Tensor[(12, 7, 3), float32],) {
  %781 = @func_2423() /* ty=(Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), float32]) */;
  %782 = %781.1;
  %783 = cast(%782, dtype="float32") /* ty=Tensor[(12, 7, 3), float32] */;
  %784 = sigmoid(%783) /* ty=Tensor[(12, 7, 3), float32] */;
  (%784,)
}

def @func_3560() -> (Tensor[(12, 7, 3), int8], Tensor[(324), float64]) {
  %785 = @func_2586() /* ty=(Tensor[(12, 7, 3), int8],) */;
  %786 = @func_2745() /* ty=(Tensor[(12, 7, 3), float64], Tensor[(9, 4, 9), float64], Tensor[(324), float64]) */;
  %787 = %785.0;
  %788 = %786.2;
  (%787, %788)
}

def @func_6070() -> Tensor[(324), float64] {
  %789 = @func_5321() /* ty=(Tensor[(324), float64],) */;
  %789.0
}

def @func_4806(%var_4785: Tensor[(6, 14, 8), float32]) -> Tensor[(6, 14, 8), float32] {
  %790 = cast(%var_4785, dtype="float32") /* ty=Tensor[(6, 14, 8), float32] */;
  tan(%790) /* ty=Tensor[(6, 14, 8), float32] */
}

def @func_3948() -> (Tensor[(324), float64],) {
  %791 = @func_3560() /* ty=(Tensor[(12, 7, 3), int8], Tensor[(324), float64]) */;
  %792 = %791.1;
  (%792,)
}

def @func_6849() -> (Tensor[(12, 7, 3), float32], Tensor[(1, 550), bool], Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), float32], Tensor[(10, 5, 11), float32], Tensor[(12, 7, 3), float32]) {
  %793 = @func_4295() /* ty=(Tensor[(12, 7, 3), float32],) */;
  %794 = @func_3065() /* ty=(Tensor[(9, 4, 9), float64], Tensor[(12, 7, 3), float32]) */;
  %795 = @func_6449() /* ty=(Tensor[(12, 7, 3), float32],) */;
  %796 = cast(meta[relay.Constant][48] /* ty=Tensor[(1, 550), bool] */, dtype="bool") /* ty=Tensor[(1, 550), bool] */;
  %797 = reshape(%796, newshape=[10, 5, 11]) /* ty=Tensor[(10, 5, 11), bool] */;
  %798 = @func_5094(%797) /* ty=(Tensor[(10, 5, 11), bool],) */;
  %799 = %798.0;
  %800 = cast(%799, dtype="float32") /* ty=Tensor[(10, 5, 11), float32] */;
  %801 = @func_6388() /* ty=(Tensor[(12, 7, 3), float32],) */;
  %802 = %793.0;
  %803 = %794.1;
  %804 = %795.0;
  %805 = cosh(%800) /* ty=Tensor[(10, 5, 11), float32] */;
  %806 = %801.0;
  (%802, meta[relay.Constant][48] /* ty=Tensor[(1, 550), bool] */, %803, %804, %805, %806)
}

def @func_6388() -> (Tensor[(12, 7, 3), float32],) {
  %807 = @func_5020() /* ty=(Tensor[(12, 7, 3), float64], Tensor[(324), float64]) */;
  %808 = %807.0;
  %809 = cast(meta[relay.Constant][49] /* ty=Tensor[(12, 7, 3), float64] */, dtype="float64") /* ty=Tensor[(12, 7, 3), float64] */;
  %810 = shape_of(%808, dtype="int32") /* ty=Tensor[(3), int32] */;
  %811 = cast(%808, dtype="float64") /* ty=Tensor[(12, 7, 3), float64] */;
  %812 = dyn.reshape(%809, %810, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %813 = floor_divide(%811, %812) /* ty=Tensor[(12, 7, 3), float64] */;
  %814 = cast(%813, dtype="float32") /* ty=Tensor[(12, 7, 3), float32] */;
  %815 = log10(%814) /* ty=Tensor[(12, 7, 3), float32] */;
  (%815,)
}

def @func_3875() -> (Tensor[(12, 7, 3), int8], Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), float64]) {
  %816 = @func_2586() /* ty=(Tensor[(12, 7, 3), int8],) */;
  %817 = @func_2568() /* ty=(Tensor[(12, 7, 3), float64], Tensor[(12, 7, 3), float32]) */;
  %818 = %816.0;
  %819 = %817.1;
  %820 = @func_3808() /* ty=Tensor[(12, 7, 3), float64] */;
  (%818, %819, %820)
}

def @func_4295() -> (Tensor[(12, 7, 3), float32],) {
  %821 = @func_4143() /* ty=Tensor[(12, 7, 3), float32] */;
  (%821,)
}

def @func_6017() -> Tensor[(324), float64] {
  %822 = @func_2745() /* ty=(Tensor[(12, 7, 3), float64], Tensor[(9, 4, 9), float64], Tensor[(324), float64]) */;
  %822.2
}

def @func_6764(%var_6755: Tensor[(324), float64]) -> (Tensor[(585, 1), int32], Tensor[(9, 4, 9), uint32], Tensor[(324), float64], Tensor[(12, 7, 3), float32]) {
  %823 = @func_6710() /* ty=(Tensor[(585, 1), int32],) */;
  %824 = cast(%var_6755, dtype="float64") /* ty=Tensor[(324), float64] */;
  %825 = %823.0;
  %826 = cast(%825, dtype="int32") /* ty=Tensor[(585, 1), int32] */;
  %827 = reshape(%824, newshape=[9, 4, 9]) /* ty=Tensor[(9, 4, 9), float64] */;
  %828 = reshape(%826, newshape=[585]) /* ty=Tensor[(585), int32] */;
  %829 = @func_4365(%827, %828) /* ty=(Tensor[(9, 4, 9), uint32], Tensor[(585, 1), int32], Tensor[(585), int32]) */;
  %830 = @func_5302() /* ty=(Tensor[(12, 7, 3), float32],) */;
  %831 = %829.0;
  %832 = %830.0;
  (%825, %831, %var_6755, %832)
}

def @func_5074() -> Tensor[(12, 7, 3), float64] {
  %833 = @func_3483() /* ty=(Tensor[(12, 7, 3), float32],) */;
  %834 = %833.0;
  %835 = cast(%834, dtype="float64") /* ty=Tensor[(12, 7, 3), float64] */;
  log2(%835) /* ty=Tensor[(12, 7, 3), float64] */
}

def @func_6008() -> (Tensor[(12, 7, 3), float32],) {
  %836 = @func_5918() /* ty=Tensor[(12, 7, 3), float32] */;
  (%836,)
}

def @func_5244() -> (Tensor[(12, 7, 3), int8], Tensor[(3, 10, 7), float64], Tensor[(210, 1), float64]) {
  %837 = @func_2586() /* ty=(Tensor[(12, 7, 3), int8],) */;
  %838 = cast(meta[relay.Constant][50] /* ty=Tensor[(210, 1), float64] */, dtype="float64") /* ty=Tensor[(210, 1), float64] */;
  %839 = reshape(%838, newshape=[3, 10, 7]) /* ty=Tensor[(3, 10, 7), float64] */;
  %840 = @func_3981(%839) /* ty=(Tensor[(3, 10, 7), float64],) */;
  %841 = %837.0;
  %842 = %840.0;
  (%841, %842, meta[relay.Constant][50] /* ty=Tensor[(210, 1), float64] */)
}

def @func_5895() -> (Tensor[(12, 7, 3), float32],) {
  %843 = @func_3483() /* ty=(Tensor[(12, 7, 3), float32],) */;
  %844 = %843.0;
  (%844,)
}

def @func_7939() -> (Tensor[(324), float64], Tensor[(12, 7, 3), float32], Tensor[(324), float64]) {
  %845 = @func_5302() /* ty=(Tensor[(12, 7, 3), float32],) */;
  %846 = @func_7551() /* ty=(Tensor[(324), float64],) */;
  %847 = @func_7528() /* ty=Tensor[(324), float64] */;
  %848 = %845.0;
  %849 = %846.0;
  (%847, %848, %849)
}

def @func_2568() -> (Tensor[(12, 7, 3), float64], Tensor[(12, 7, 3), float32]) {
  %850 = @func_2423() /* ty=(Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), float32]) */;
  %851 = %850.0;
  %852 = cast(%851, dtype="float64") /* ty=Tensor[(12, 7, 3), float64] */;
  %853 = cast(%851, dtype="float32") /* ty=Tensor[(12, 7, 3), float32] */;
  %854 = sinh(%852) /* ty=Tensor[(12, 7, 3), float64] */;
  %855 = atanh(%853) /* ty=Tensor[(12, 7, 3), float32] */;
  (%854, %855)
}

def @func_6235(%var_6232: Tensor[(585, 1), int32]) -> (Tensor[(12, 7, 3), float32], Tensor[(65, 9), int32], Tensor[(25), float32], Tensor[(585, 1), int32]) {
  %856 = @func_6008() /* ty=(Tensor[(12, 7, 3), float32],) */;
  %857 = cast(meta[relay.Constant][51] /* ty=Tensor[(25), float32] */, dtype="float32") /* ty=Tensor[(25), float32] */;
  %858 = cast(%var_6232, dtype="int32") /* ty=Tensor[(585, 1), int32] */;
  %859 = reshape(%857, newshape=[5, 5, 1]) /* ty=Tensor[(5, 5, 1), float32] */;
  %860 = reshape(%858, newshape=[65, 9]) /* ty=Tensor[(65, 9), int32] */;
  %861 = @func_1842(%859, %860) /* ty=(Tensor[(7, 1, 10), float64], Tensor[(7, 10), float64], Tensor[(13, 15, 3), bool], Tensor[(65, 9), int32], Tensor[(10, 12, 9), int32], Tensor[(1080), int32], Tensor[(5, 5, ?), float32], Tensor[(7, 1, 10), float64]) */;
  %862 = %856.0;
  %863 = %861.3;
  (%862, %863, meta[relay.Constant][51] /* ty=Tensor[(25), float32] */, %var_6232)
}

def @func_3022(%var_3003: Tensor[(15, 150), float32], %var_3009: Tensor[(25), float32]) -> (Tensor[(12, 7, 3), float32], Tensor[(585), int32], Tensor[(15, 150), int32], Tensor[(7, 10), float64], Tensor[(25), float32], Tensor[(15, 150), bool]) {
  %864 = @func_2568() /* ty=(Tensor[(12, 7, 3), float64], Tensor[(12, 7, 3), float32]) */;
  %865 = cast(meta[relay.Constant][52] /* ty=Tensor[(15, 150), float32] */, dtype="float32") /* ty=Tensor[(15, 150), float32] */;
  %866 = reshape(%865, newshape=[2250]) /* ty=Tensor[(2250), float32] */;
  %867 = @func_2648(%866) /* ty=(Tensor[(12, 7, 3), float32], Tensor[(13, 15, 3), bool], Tensor[(585), int32], Tensor[(10, 12, 9), float64], Tensor[(2250), float32]) */;
  %868 = cast(%var_3003, dtype="int32") /* ty=Tensor[(15, 150), int32] */;
  %869 = shape_of(meta[relay.Constant][52] /* ty=Tensor[(15, 150), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %870 = cast(meta[relay.Constant][52] /* ty=Tensor[(15, 150), float32] */, dtype="int32") /* ty=Tensor[(15, 150), int32] */;
  %871 = dyn.reshape(%868, %869, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %872 = cast(%var_3009, dtype="float32") /* ty=Tensor[(25), float32] */;
  %873 = %867.2;
  %874 = cast(%873, dtype="int32") /* ty=Tensor[(585), int32] */;
  %875 = reshape(%872, newshape=[5, 5, 1]) /* ty=Tensor[(5, 5, 1), float32] */;
  %876 = reshape(%874, newshape=[65, 9]) /* ty=Tensor[(65, 9), int32] */;
  %877 = @func_1842(%875, %876) /* ty=(Tensor[(7, 1, 10), float64], Tensor[(7, 10), float64], Tensor[(13, 15, 3), bool], Tensor[(65, 9), int32], Tensor[(10, 12, 9), int32], Tensor[(1080), int32], Tensor[(5, 5, ?), float32], Tensor[(7, 1, 10), float64]) */;
  %878 = cast(%var_3003, dtype="bool") /* ty=Tensor[(15, 150), bool] */;
  %879 = shape_of(meta[relay.Constant][52] /* ty=Tensor[(15, 150), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %880 = cast(meta[relay.Constant][52] /* ty=Tensor[(15, 150), float32] */, dtype="bool") /* ty=Tensor[(15, 150), bool] */;
  %881 = dyn.reshape(%878, %879, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %882 = %864.1;
  %883 = logical_xor(%870, %871) /* ty=Tensor[(15, 150), int32] */;
  %884 = %877.1;
  %885 = greater_equal(%880, %881) /* ty=Tensor[(15, 150), bool] */;
  (%882, %873, %883, %884, %var_3009, %885)
}

def @func_6107(%var_6105: Tensor[(550), bool]) -> (Tensor[(12, 7, 3), float64], Tensor[(10, 5, 11), bool], Tensor[(550), bool]) {
  %886 = @func_5729() /* ty=(Tensor[(12, 7, 3), float64],) */;
  %887 = cast(%var_6105, dtype="bool") /* ty=Tensor[(550), bool] */;
  %888 = reshape(%887, newshape=[10, 5, 11]) /* ty=Tensor[(10, 5, 11), bool] */;
  %889 = @func_5094(%888) /* ty=(Tensor[(10, 5, 11), bool],) */;
  %890 = %886.0;
  %891 = %889.0;
  (%890, %891, %var_6105)
}

def @func_6710() -> (Tensor[(585, 1), int32],) {
  %892 = @func_3665() /* ty=(Tensor[(9, 4, 9), float64], Tensor[(585, 1), int32], Tensor[(585), int32]) */;
  %893 = %892.1;
  (%893,)
}

def @func_7436() -> (Tensor[(9, 4, 9), float64],) {
  %894 = @func_3065() /* ty=(Tensor[(9, 4, 9), float64], Tensor[(12, 7, 3), float32]) */;
  %895 = %894.0;
  (%895,)
}

def @func_7672(%var_7654: Tensor[(3, 12, 11), float32], %var_7665: Tensor[(18, 1), float64]) -> (Tensor[(3, 12, 11), float32], Tensor[(1, 6, 3), float64], Tensor[(18, 1), float64]) {
  %896 = cast(meta[relay.Constant][53] /* ty=Tensor[(3, 12, 11), float32] */, dtype="float32") /* ty=Tensor[(3, 12, 11), float32] */;
  %897 = shape_of(%var_7654, dtype="int32") /* ty=Tensor[(3), int32] */;
  %898 = cast(%var_7654, dtype="float32") /* ty=Tensor[(3, 12, 11), float32] */;
  %899 = dyn.reshape(%896, %897, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %900 = cast(%var_7665, dtype="float64") /* ty=Tensor[(18, 1), float64] */;
  %901 = reshape(%900, newshape=[1, 6, 3]) /* ty=Tensor[(1, 6, 3), float64] */;
  %902 = mod(%898, %899) /* ty=Tensor[(3, 12, 11), float32] */;
  %903 = @func_1719(%901) /* ty=Tensor[(1, 6, 3), float64] */;
  (%902, %903, %var_7665)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_7631() -> (Tensor[(12, 7, 3), float32],) {
  @func_7629() /* ty=(Tensor[(12, 7, 3), float32],) */
}

def @func_5246() -> (Tensor[(12, 7, 3), int8], Tensor[(3, 10, 7), float64], Tensor[(210, 1), float64]) {
  @func_5244() /* ty=(Tensor[(12, 7, 3), int8], Tensor[(3, 10, 7), float64], Tensor[(210, 1), float64]) */
}

def @func_2706(%var_2704: Tensor[(12, 7, 3), float32]) -> (Tensor[(12, 7, 3), float32], Tensor[(1, 6, 3), float64], Tensor[(3, 6), float64]) {
  @func_2703(%var_2704) /* ty=(Tensor[(12, 7, 3), float32], Tensor[(1, 6, 3), float64], Tensor[(3, 6), float64]) */
}

def @func_5321() -> (Tensor[(324), float64],) {
  %0 = @func_5020() /* ty=(Tensor[(12, 7, 3), float64], Tensor[(324), float64]) */;
  %1 = %0.1;
  (%1,)
}

def @func_7940() -> (Tensor[(324), float64], Tensor[(12, 7, 3), float32], Tensor[(324), float64]) {
  %7 = fn () -> (Tensor[(324), float64], Tensor[(12, 7, 3), float32], Tensor[(324), float64]) {
    %2 = @func_5302() /* ty=(Tensor[(12, 7, 3), float32],) */;
    %3 = @func_7551() /* ty=(Tensor[(324), float64],) */;
    %4 = @func_7528() /* ty=Tensor[(324), float64] */;
    %5 = %2.0;
    %6 = %3.0;
    (%4, %5, %6)
  };
  %7() /* ty=(Tensor[(324), float64], Tensor[(12, 7, 3), float32], Tensor[(324), float64]) */
}

def @func_792(%var_791: Tensor[(9, 4, 9), float64]) -> Tensor[(9, 4, 9), float64] {
  %9 = fn (%var_770: Tensor[(9, 4, 9), float64]) -> Tensor[(9, 4, 9), float64] {
    %8 = cast(%var_770, dtype="float64") /* ty=Tensor[(9, 4, 9), float64] */;
    acosh(%8) /* ty=Tensor[(9, 4, 9), float64] */
  };
  %9(%var_791) /* ty=Tensor[(9, 4, 9), float64] */
}

def @func_6505() -> Tensor[(12, 7, 3), float32] {
  %10 = fn () -> Tensor[(12, 7, 3), float32] {
    @func_4143() /* ty=Tensor[(12, 7, 3), float32] */
  };
  %10() /* ty=Tensor[(12, 7, 3), float32] */
}

def @func_1537(%var_1470: Tensor[(15, 10, 15), float32]) -> (Tensor[(10, 12, 9), float64], Tensor[(50), float64], Tensor[(3, 420), float32], Tensor[(10, 12, 9), float64], Tensor[(15, 10, 15), bool]) {
  %11 = cast(meta[relay.Constant][0] /* ty=Tensor[(50), float64] */, dtype="float64") /* ty=Tensor[(50), float64] */;
  %12 = cast(meta[relay.Constant][1] /* ty=Tensor[(3, 420), float32] */, dtype="float32") /* ty=Tensor[(3, 420), float32] */;
  %13 = reshape(%11, newshape=[5, 1, 10]) /* ty=Tensor[(5, 1, 10), float64] */;
  %14 = reshape(%12, newshape=[1260]) /* ty=Tensor[(1260), float32] */;
  %15 = @func_649(%13, %14) /* ty=(Tensor[(14, 9, 10), float32], Tensor[(1260), float32], Tensor[(14, 9, 10), float32], Tensor[(14, 9, 10), float32], Tensor[(10, 12, 9), float64], Tensor[(1080), int32], Tensor[(10, 12, 9), int32], Tensor[(5, ?, 10), uint16], Tensor[(5, ?, 10), float32]) */;
  %16 = cast(meta[relay.Constant][0] /* ty=Tensor[(50), float64] */, dtype="float64") /* ty=Tensor[(50), float64] */;
  %17 = cast(meta[relay.Constant][1] /* ty=Tensor[(3, 420), float32] */, dtype="float32") /* ty=Tensor[(3, 420), float32] */;
  %18 = reshape(%16, newshape=[5, 1, 10]) /* ty=Tensor[(5, 1, 10), float64] */;
  %19 = reshape(%17, newshape=[1260]) /* ty=Tensor[(1260), float32] */;
  %20 = @func_649(%18, %19) /* ty=(Tensor[(14, 9, 10), float32], Tensor[(1260), float32], Tensor[(14, 9, 10), float32], Tensor[(14, 9, 10), float32], Tensor[(10, 12, 9), float64], Tensor[(1080), int32], Tensor[(10, 12, 9), int32], Tensor[(5, ?, 10), uint16], Tensor[(5, ?, 10), float32]) */;
  %21 = cast(%var_1470, dtype="float32") /* ty=Tensor[(15, 10, 15), float32] */;
  %22 = cosh(%21) /* ty=Tensor[(15, 10, 15), float32] */;
  %23 = cast(%var_1470, dtype="bool") /* ty=Tensor[(15, 10, 15), bool] */;
  %24 = shape_of(%22, dtype="int32") /* ty=Tensor[(3), int32] */;
  %25 = cast(%22, dtype="bool") /* ty=Tensor[(15, 10, 15), bool] */;
  %26 = dyn.reshape(%23, %24, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %27 = %15.4;
  %28 = %20.4;
  %29 = less_equal(%25, %26) /* ty=Tensor[(15, 10, 15), bool] */;
  (%27, meta[relay.Constant][0] /* ty=Tensor[(50), float64] */, meta[relay.Constant][1] /* ty=Tensor[(3, 420), float32] */, %28, %29)
}

def @func_6010() -> (Tensor[(12, 7, 3), float32],) {
  @func_6008() /* ty=(Tensor[(12, 7, 3), float32],) */
}

def @func_4636(%var_4635: Tensor[(2250), float32]) -> (Tensor[(9, 4, 9), float64], Tensor[(12, 7, 3), float32], Tensor[(2250), float32], Tensor[(25), float32]) {
  %38 = fn (%var_4611: Tensor[(2250), float32]) -> (Tensor[(9, 4, 9), float64], Tensor[(12, 7, 3), float32], Tensor[(2250), float32], Tensor[(25), float32]) {
    %30 = @func_3065() /* ty=(Tensor[(9, 4, 9), float64], Tensor[(12, 7, 3), float32]) */;
    %31 = cast(%var_4611, dtype="float32") /* ty=Tensor[(2250), float32] */;
    %32 = cast(meta[relay.Constant][2] /* ty=Tensor[(25), float32] */, dtype="float32") /* ty=Tensor[(25), float32] */;
    %33 = reshape(%31, newshape=[15, 150]) /* ty=Tensor[(15, 150), float32] */;
    %34 = reshape(%32, newshape=[25]) /* ty=Tensor[(25), float32] */;
    %35 = @func_3022(%33, %34) /* ty=(Tensor[(12, 7, 3), float32], Tensor[(585), int32], Tensor[(15, 150), int32], Tensor[(7, 10), float64], Tensor[(25), float32], Tensor[(15, 150), bool]) */;
    %36 = %30.0;
    %37 = %35.0;
    (%36, %37, %var_4611, meta[relay.Constant][2] /* ty=Tensor[(25), float32] */)
  };
  %38(%var_4635) /* ty=(Tensor[(9, 4, 9), float64], Tensor[(12, 7, 3), float32], Tensor[(2250), float32], Tensor[(25), float32]) */
}

def @func_3875() -> (Tensor[(12, 7, 3), int8], Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), float64]) {
  %39 = @func_2586() /* ty=(Tensor[(12, 7, 3), int8],) */;
  %40 = @func_2568() /* ty=(Tensor[(12, 7, 3), float64], Tensor[(12, 7, 3), float32]) */;
  %41 = %39.0;
  %42 = %40.1;
  %43 = @func_3808() /* ty=Tensor[(12, 7, 3), float64] */;
  (%41, %42, %43)
}

def @func_4741() -> (Tensor[(12, 7, 3), float64],) {
  %44 = @func_4020() /* ty=(Tensor[(12, 7, 3), float64],) */;
  %45 = %44.0;
  (%45,)
}

def @func_3484() -> (Tensor[(12, 7, 3), float32],) {
  %50 = fn () -> (Tensor[(12, 7, 3), float32],) {
    %46 = @func_2423() /* ty=(Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), float32]) */;
    %47 = %46.1;
    %48 = cast(%47, dtype="float32") /* ty=Tensor[(12, 7, 3), float32] */;
    %49 = sigmoid(%48) /* ty=Tensor[(12, 7, 3), float32] */;
    (%49,)
  };
  %50() /* ty=(Tensor[(12, 7, 3), float32],) */
}

def @func_7873(%var_7786: Tensor[(2250), int8]) -> (Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), int8], Tensor[(12, 7, 3), int8], Tensor[(1080), int32], Tensor[(12, 7, 3), float32], Tensor[(18), float64], Tensor[(2250), uint8], Tensor[(18), float64], Tensor[(2250), float32], Tensor[(2250), bool], Tensor[(2250), float64], Tensor[(585), int32], Tensor[(65, 9), int32], Tensor[(585), int32]) {
  %51 = cast(meta[relay.Constant][3] /* ty=Tensor[(2250), float32] */, dtype="float32") /* ty=Tensor[(2250), float32] */;
  %52 = reshape(%51, newshape=[15, 150]) /* ty=Tensor[(15, 150), float32] */;
  %53 = @func_7024(%52) /* ty=(Tensor[(12, 7, 3), int8], Tensor[(12, 7, 3), float64], Tensor[(2250), float32], Tensor[(15, 150), float32]) */;
  %54 = @func_3560() /* ty=(Tensor[(12, 7, 3), int8], Tensor[(324), float64]) */;
  %55 = @func_7509() /* ty=(Tensor[(1080), int32], Tensor[(1080), int32]) */;
  %56 = cast(meta[relay.Constant][4] /* ty=Tensor[(18), float64] */, dtype="float64") /* ty=Tensor[(18), float64] */;
  %57 = reshape(%56, newshape=[18]) /* ty=Tensor[(18), float64] */;
  %58 = @func_7229(%57) /* ty=(Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), float32], Tensor[(1, 6, 3), float64], Tensor[(18), float64]) */;
  %59 = cast(meta[relay.Constant][3] /* ty=Tensor[(2250), float32] */, dtype="float32") /* ty=Tensor[(2250), float32] */;
  %60 = sinh(%59) /* ty=Tensor[(2250), float32] */;
  %61 = cast(meta[relay.Constant][5] /* ty=Tensor[(2250), float32] */, dtype="int8") /* ty=Tensor[(2250), int8] */;
  %62 = shape_of(%60, dtype="int32") /* ty=Tensor[(1), int32] */;
  %63 = cast(%60, dtype="int8") /* ty=Tensor[(2250), int8] */;
  %64 = dyn.reshape(%61, %62, newshape=[]) /* ty=Tensor[(?), int8] */;
  %65 = bitwise_and(%63, %64) /* ty=Tensor[(2250), int8] */;
  %66 = cast(%var_7786, dtype="uint8") /* ty=Tensor[(2250), uint8] */;
  %67 = shape_of(%65, dtype="int32") /* ty=Tensor[(1), int32] */;
  %68 = cast(%65, dtype="uint8") /* ty=Tensor[(2250), uint8] */;
  %69 = dyn.reshape(%66, %67, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %70 = right_shift(%68, %69) /* ty=Tensor[(2250), uint8] */;
  %71 = cast(%65, dtype="int32") /* ty=Tensor[(2250), int32] */;
  %72 = shape_of(%70, dtype="int32") /* ty=Tensor[(1), int32] */;
  %73 = cast(%70, dtype="int32") /* ty=Tensor[(2250), int32] */;
  %74 = dyn.reshape(%71, %72, newshape=[]) /* ty=Tensor[(?), int32] */;
  %75 = minimum(%73, %74) /* ty=Tensor[(2250), int32] */;
  %76 = cast(meta[relay.Constant][6] /* ty=Tensor[(2250), int32] */, dtype="uint8") /* ty=Tensor[(2250), uint8] */;
  %77 = shape_of(%75, dtype="int32") /* ty=Tensor[(1), int32] */;
  %78 = cast(%75, dtype="uint8") /* ty=Tensor[(2250), uint8] */;
  %79 = dyn.reshape(%76, %77, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %80 = cast(meta[relay.Constant][4] /* ty=Tensor[(18), float64] */, dtype="float64") /* ty=Tensor[(18), float64] */;
  %81 = reshape(%80, newshape=[18]) /* ty=Tensor[(18), float64] */;
  %82 = @func_7229(%81) /* ty=(Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), float32], Tensor[(1, 6, 3), float64], Tensor[(18), float64]) */;
  %83 = cast(meta[relay.Constant][7] /* ty=Tensor[(2250), float32] */, dtype="float32") /* ty=Tensor[(2250), float32] */;
  %84 = shape_of(%60, dtype="int32") /* ty=Tensor[(1), int32] */;
  %85 = cast(%60, dtype="float32") /* ty=Tensor[(2250), float32] */;
  %86 = dyn.reshape(%83, %84, newshape=[]) /* ty=Tensor[(?), float32] */;
  %87 = cast(%70, dtype="bool") /* ty=Tensor[(2250), bool] */;
  %88 = shape_of(%60, dtype="int32") /* ty=Tensor[(1), int32] */;
  %89 = cast(%60, dtype="bool") /* ty=Tensor[(2250), bool] */;
  %90 = dyn.reshape(%87, %88, newshape=[]) /* ty=Tensor[(?), bool] */;
  %91 = cast(%60, dtype="bool") /* ty=Tensor[(2250), bool] */;
  %92 = shape_of(meta[relay.Constant][5] /* ty=Tensor[(2250), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %93 = cast(meta[relay.Constant][5] /* ty=Tensor[(2250), float32] */, dtype="bool") /* ty=Tensor[(2250), bool] */;
  %94 = dyn.reshape(%91, %92, newshape=[]) /* ty=Tensor[(?), bool] */;
  %95 = logical_or(%93, %94) /* ty=Tensor[(2250), bool] */;
  %96 = cast(%95, dtype="float64") /* ty=Tensor[(2250), float64] */;
  %97 = cast(meta[relay.Constant][8] /* ty=Tensor[(65, 9), int32] */, dtype="int32") /* ty=Tensor[(65, 9), int32] */;
  %98 = reshape(%97, newshape=[585]) /* ty=Tensor[(585), int32] */;
  %99 = @func_7355(%98) /* ty=(Tensor[(324), float64], Tensor[(585), int32], Tensor[(585), int32]) */;
  %100 = @func_5814() /* ty=(Tensor[(9, 4, 9), float64], Tensor[(324), float64], Tensor[(350, 3), float32], Tensor[(25), float32], Tensor[(585), int32]) */;
  %101 = @func_6504() /* ty=Tensor[(12, 7, 3), float32] */;
  %102 = %53.0;
  %103 = %54.0;
  %104 = %55.1;
  %105 = %58.0;
  %106 = subtract(%78, %79) /* ty=Tensor[(2250), uint8] */;
  %107 = %82.3;
  %108 = floor_mod(%85, %86) /* ty=Tensor[(2250), float32] */;
  %109 = less(%89, %90) /* ty=Tensor[(2250), bool] */;
  %110 = atanh(%96) /* ty=Tensor[(2250), float64] */;
  %111 = %99.1;
  %112 = %100.4;
  (%101, %102, %103, %104, %105, meta[relay.Constant][4] /* ty=Tensor[(18), float64] */, %106, %107, %108, %109, %110, %111, meta[relay.Constant][8] /* ty=Tensor[(65, 9), int32] */, %112)
}

def @func_525(%var_523: Tensor[(10, 12, 9), int32], %var_524: Tensor[(10, 12, 9), int32]) -> (Tensor[(10, 12, 9), int32], Tensor[(10, 12, 9), float64]) {
  @func_521(%var_523, %var_524) /* ty=(Tensor[(10, 12, 9), int32], Tensor[(10, 12, 9), float64]) */
}

def @func_2570() -> (Tensor[(12, 7, 3), float64], Tensor[(12, 7, 3), float32]) {
  @func_2568() /* ty=(Tensor[(12, 7, 3), float64], Tensor[(12, 7, 3), float32]) */
}

def @func_874(%var_872: Tensor[(7, 1, 10), float64]) -> (Tensor[(7, 1, 10), float64],) {
  @func_871(%var_872) /* ty=(Tensor[(7, 1, 10), float64],) */
}

def @func_2745() -> (Tensor[(12, 7, 3), float64], Tensor[(9, 4, 9), float64], Tensor[(324), float64]) {
  %113 = @func_2568() /* ty=(Tensor[(12, 7, 3), float64], Tensor[(12, 7, 3), float32]) */;
  %114 = cast(meta[relay.Constant][9] /* ty=Tensor[(324), float64] */, dtype="float64") /* ty=Tensor[(324), float64] */;
  %115 = reshape(%114, newshape=[9, 4, 9]) /* ty=Tensor[(9, 4, 9), float64] */;
  %116 = %113.0;
  %117 = @func_790(%115) /* ty=Tensor[(9, 4, 9), float64] */;
  (%116, %117, meta[relay.Constant][9] /* ty=Tensor[(324), float64] */)
}

def @func_3907(%var_3906: Tensor[(324), float64]) -> Tensor[(324), uint64] {
  %124 = fn (%var_3900: Tensor[(324), float64]) -> Tensor[(324), uint64] {
    %118 = @func_3560() /* ty=(Tensor[(12, 7, 3), int8], Tensor[(324), float64]) */;
    %119 = %118.1;
    %120 = cast(%var_3900, dtype="uint64") /* ty=Tensor[(324), uint64] */;
    %121 = shape_of(%119, dtype="int32") /* ty=Tensor[(1), int32] */;
    %122 = cast(%119, dtype="uint64") /* ty=Tensor[(324), uint64] */;
    %123 = dyn.reshape(%120, %121, newshape=[]) /* ty=Tensor[(?), uint64] */;
    bitwise_xor(%122, %123) /* ty=Tensor[(324), uint64] */
  };
  %124(%var_3906) /* ty=Tensor[(324), uint64] */
}

def @func_5933() -> (Tensor[(12, 7, 3), float64], Tensor[(7, 1, 10), float64], Tensor[(70), float64]) {
  %125 = @func_5729() /* ty=(Tensor[(12, 7, 3), float64],) */;
  %126 = cast(meta[relay.Constant][10] /* ty=Tensor[(70), float64] */, dtype="float64") /* ty=Tensor[(70), float64] */;
  %127 = reshape(%126, newshape=[7, 1, 10]) /* ty=Tensor[(7, 1, 10), float64] */;
  %128 = @func_871(%127) /* ty=(Tensor[(7, 1, 10), float64],) */;
  %129 = %125.0;
  %130 = %128.0;
  (%129, %130, meta[relay.Constant][10] /* ty=Tensor[(70), float64] */)
}

def @func_4237(%var_4236: Tensor[(9, 4, 9), float64]) -> Tensor[(9, 4, 9), bool] {
  %137 = fn (%var_4228: Tensor[(9, 4, 9), float64]) -> Tensor[(9, 4, 9), bool] {
    %131 = @func_2909() /* ty=(Tensor[(9, 4, 9), float64], Tensor[(12, 7, 3), float32]) */;
    %132 = %131.0;
    %133 = cast(%var_4228, dtype="bool") /* ty=Tensor[(9, 4, 9), bool] */;
    %134 = shape_of(%132, dtype="int32") /* ty=Tensor[(3), int32] */;
    %135 = cast(%132, dtype="bool") /* ty=Tensor[(9, 4, 9), bool] */;
    %136 = dyn.reshape(%133, %134, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    greater_equal(%135, %136) /* ty=Tensor[(9, 4, 9), bool] */
  };
  %137(%var_4236) /* ty=Tensor[(9, 4, 9), bool] */
}

def @func_6070() -> Tensor[(324), float64] {
  %138 = @func_5321() /* ty=(Tensor[(324), float64],) */;
  %138.0
}

def @func_6994() -> (Tensor[(12, 7, 3), float32],) {
  %139 = @func_3065() /* ty=(Tensor[(9, 4, 9), float64], Tensor[(12, 7, 3), float32]) */;
  %140 = %139.1;
  (%140,)
}

def @func_7289(%var_7276: Tensor[(12, 7, 3), float64]) -> (Tensor[(12, 7, 3), int16],) {
  %141 = @func_3808() /* ty=Tensor[(12, 7, 3), float64] */;
  %142 = cast(%var_7276, dtype="int16") /* ty=Tensor[(12, 7, 3), int16] */;
  %143 = shape_of(%141, dtype="int32") /* ty=Tensor[(3), int32] */;
  %144 = cast(%141, dtype="int16") /* ty=Tensor[(12, 7, 3), int16] */;
  %145 = dyn.reshape(%142, %143, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %146 = maximum(%144, %145) /* ty=Tensor[(12, 7, 3), int16] */;
  (%146,)
}

def @func_3065() -> (Tensor[(9, 4, 9), float64], Tensor[(12, 7, 3), float32]) {
  %147 = @func_2745() /* ty=(Tensor[(12, 7, 3), float64], Tensor[(9, 4, 9), float64], Tensor[(324), float64]) */;
  %148 = @func_2568() /* ty=(Tensor[(12, 7, 3), float64], Tensor[(12, 7, 3), float32]) */;
  %149 = %147.1;
  %150 = %148.1;
  (%149, %150)
}

def @func_5179(%var_5155: Tensor[(2250), float32]) -> (Tensor[(12, 7, 3), float32], Tensor[(10, 12, 9), float64], Tensor[(2250), float32], Tensor[(12, 7, 3), float32]) {
  %151 = cast(%var_5155, dtype="float32") /* ty=Tensor[(2250), float32] */;
  %152 = reshape(%151, newshape=[15, 10, 15]) /* ty=Tensor[(15, 10, 15), float32] */;
  %153 = @func_1537(%152) /* ty=(Tensor[(10, 12, 9), float64], Tensor[(50), float64], Tensor[(3, 420), float32], Tensor[(10, 12, 9), float64], Tensor[(15, 10, 15), bool]) */;
  %154 = @func_3843() /* ty=Tensor[(12, 7, 3), float32] */;
  %155 = cast(%154, dtype="float32") /* ty=Tensor[(12, 7, 3), float32] */;
  %156 = reshape(%155, newshape=[12, 7, 3]) /* ty=Tensor[(12, 7, 3), float32] */;
  %157 = @func_2703(%156) /* ty=(Tensor[(12, 7, 3), float32], Tensor[(1, 6, 3), float64], Tensor[(3, 6), float64]) */;
  %158 = %153.3;
  %159 = %157.0;
  (%154, %158, %var_5155, %159)
}

def @func_5323() -> (Tensor[(324), float64],) {
  @func_5321() /* ty=(Tensor[(324), float64],) */
}

def @func_7024(%var_7017: Tensor[(15, 150), float32]) -> (Tensor[(12, 7, 3), int8], Tensor[(12, 7, 3), float64], Tensor[(2250), float32], Tensor[(15, 150), float32]) {
  %160 = @func_2586() /* ty=(Tensor[(12, 7, 3), int8],) */;
  %161 = @func_4020() /* ty=(Tensor[(12, 7, 3), float64],) */;
  %162 = cast(%var_7017, dtype="float32") /* ty=Tensor[(15, 150), float32] */;
  %163 = reshape(%162, newshape=[2250]) /* ty=Tensor[(2250), float32] */;
  %164 = @func_5179(%163) /* ty=(Tensor[(12, 7, 3), float32], Tensor[(10, 12, 9), float64], Tensor[(2250), float32], Tensor[(12, 7, 3), float32]) */;
  %165 = %160.0;
  %166 = %161.0;
  %167 = %164.2;
  (%165, %166, %167, %var_7017)
}

def @func_6712() -> (Tensor[(585, 1), int32],) {
  @func_6710() /* ty=(Tensor[(585, 1), int32],) */
}

def @func_7114() -> (Tensor[(324), float64], Tensor[(25), bool], Tensor[(25, 1), float32]) {
  %172 = fn () -> (Tensor[(324), float64], Tensor[(25), bool], Tensor[(25, 1), float32]) {
    %168 = cast(meta[relay.Constant][11] /* ty=Tensor[(25, 1), float32] */, dtype="float32") /* ty=Tensor[(25, 1), float32] */;
    %169 = reshape(%168, newshape=[25]) /* ty=Tensor[(25), float32] */;
    %170 = @func_6017() /* ty=Tensor[(324), float64] */;
    %171 = @func_6934(%169) /* ty=Tensor[(25), bool] */;
    (%170, %171, meta[relay.Constant][11] /* ty=Tensor[(25, 1), float32] */)
  };
  %172() /* ty=(Tensor[(324), float64], Tensor[(25), bool], Tensor[(25, 1), float32]) */
}

def @func_5473(%var_5470: Tensor[(324), float64], %var_5471: Tensor[(195, 3), int32], %var_5472: Tensor[(12, 7, 3), float64]) -> (Tensor[(3, 6), float64], Tensor[(585), int32], Tensor[(324), float64], Tensor[(195, 3), int32], Tensor[(9, 4, 9), float64], Tensor[(210), float64], Tensor[(9, 4, 9), bool], Tensor[(12, 7, 3), bool], Tensor[(12, 7, 3), bool], Tensor[(12, 7, 3), uint8], Tensor[(12, 7, 3), float64]) {
  @func_5468(%var_5470, %var_5471, %var_5472) /* ty=(Tensor[(3, 6), float64], Tensor[(585), int32], Tensor[(324), float64], Tensor[(195, 3), int32], Tensor[(9, 4, 9), float64], Tensor[(210), float64], Tensor[(9, 4, 9), bool], Tensor[(12, 7, 3), bool], Tensor[(12, 7, 3), bool], Tensor[(12, 7, 3), uint8], Tensor[(12, 7, 3), float64]) */
}

def @func_8041() -> (Tensor[(12, 7, 3), float32], Tensor[(9, 4, 9), float64]) {
  %179 = fn () -> (Tensor[(12, 7, 3), float32], Tensor[(9, 4, 9), float64]) {
    %173 = @func_8016() /* ty=(Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), bool]) */;
    %174 = @func_7436() /* ty=(Tensor[(9, 4, 9), float64],) */;
    %175 = %174.0;
    %176 = cast(%175, dtype="float64") /* ty=Tensor[(9, 4, 9), float64] */;
    %177 = %173.0;
    %178 = log2(%176) /* ty=Tensor[(9, 4, 9), float64] */;
    (%177, %178)
  };
  %179() /* ty=(Tensor[(12, 7, 3), float32], Tensor[(9, 4, 9), float64]) */
}

def @func_3026(%var_3024: Tensor[(15, 150), float32], %var_3025: Tensor[(25), float32]) -> (Tensor[(12, 7, 3), float32], Tensor[(585), int32], Tensor[(15, 150), int32], Tensor[(7, 10), float64], Tensor[(25), float32], Tensor[(15, 150), bool]) {
  @func_3022(%var_3024, %var_3025) /* ty=(Tensor[(12, 7, 3), float32], Tensor[(585), int32], Tensor[(15, 150), int32], Tensor[(7, 10), float64], Tensor[(25), float32], Tensor[(15, 150), bool]) */
}

def @func_6109(%var_6108: Tensor[(550), bool]) -> (Tensor[(12, 7, 3), float64], Tensor[(10, 5, 11), bool], Tensor[(550), bool]) {
  %186 = fn (%var_6105: Tensor[(550), bool]) -> (Tensor[(12, 7, 3), float64], Tensor[(10, 5, 11), bool], Tensor[(550), bool]) {
    %180 = @func_5729() /* ty=(Tensor[(12, 7, 3), float64],) */;
    %181 = cast(%var_6105, dtype="bool") /* ty=Tensor[(550), bool] */;
    %182 = reshape(%181, newshape=[10, 5, 11]) /* ty=Tensor[(10, 5, 11), bool] */;
    %183 = @func_5094(%182) /* ty=(Tensor[(10, 5, 11), bool],) */;
    %184 = %180.0;
    %185 = %183.0;
    (%184, %185, %var_6105)
  };
  %186(%var_6108) /* ty=(Tensor[(12, 7, 3), float64], Tensor[(10, 5, 11), bool], Tensor[(550), bool]) */
}

def @func_5986() -> (Tensor[(324), float64], Tensor[(12, 7, 3), float32], Tensor[(9, 4, 9), float64], Tensor[(12, 7, 3), float32]) {
  @func_5984() /* ty=(Tensor[(324), float64], Tensor[(12, 7, 3), float32], Tensor[(9, 4, 9), float64], Tensor[(12, 7, 3), float32]) */
}

def @func_5041() -> (Tensor[(9, 4, 9), float64],) {
  %187 = @func_3065() /* ty=(Tensor[(9, 4, 9), float64], Tensor[(12, 7, 3), float32]) */;
  %188 = %187.0;
  (%188,)
}

def @func_5303() -> (Tensor[(12, 7, 3), float32],) {
  %191 = fn () -> (Tensor[(12, 7, 3), float32],) {
    %189 = @func_2568() /* ty=(Tensor[(12, 7, 3), float64], Tensor[(12, 7, 3), float32]) */;
    %190 = %189.1;
    (%190,)
  };
  %191() /* ty=(Tensor[(12, 7, 3), float32],) */
}

def @func_7335(%var_7313: Tensor[(6, 4, 11), int16]) -> (Tensor[(6, 4, 11), int16], Tensor[(1260), float32], Tensor[(1260), float32]) {
  %192 = cast(meta[relay.Constant][12] /* ty=Tensor[(6, 4, 11), int16] */, dtype="int16") /* ty=Tensor[(6, 4, 11), int16] */;
  %193 = shape_of(%var_7313, dtype="int32") /* ty=Tensor[(3), int32] */;
  %194 = cast(%var_7313, dtype="int16") /* ty=Tensor[(6, 4, 11), int16] */;
  %195 = dyn.reshape(%192, %193, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %196 = cast(meta[relay.Constant][13] /* ty=Tensor[(1260), float32] */, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %197 = reshape(%196, newshape=[1260]) /* ty=Tensor[(1260), float32] */;
  %198 = @func_6699(%197) /* ty=(Tensor[(9, 4, 9), float64], Tensor[(350, 3), float32], Tensor[(12, 7, 3), int8], Tensor[(14, 9, 10), float32], Tensor[(50), float64], Tensor[(1260), float32]) */;
  %199 = logical_xor(%194, %195) /* ty=Tensor[(6, 4, 11), int16] */;
  %200 = %198.5;
  (%199, %200, meta[relay.Constant][13] /* ty=Tensor[(1260), float32] */)
}

def @func_653(%var_651: Tensor[(5, 1, 10), float64], %var_652: Tensor[(1260), float32]) -> (Tensor[(14, 9, 10), float32], Tensor[(1260), float32], Tensor[(14, 9, 10), float32], Tensor[(14, 9, 10), float32], Tensor[(10, 12, 9), float64], Tensor[(1080), int32], Tensor[(10, 12, 9), int32], Tensor[(5, ?, 10), uint16], Tensor[(5, ?, 10), float32]) {
  @func_649(%var_651, %var_652) /* ty=(Tensor[(14, 9, 10), float32], Tensor[(1260), float32], Tensor[(14, 9, 10), float32], Tensor[(14, 9, 10), float32], Tensor[(10, 12, 9), float64], Tensor[(1080), int32], Tensor[(10, 12, 9), int32], Tensor[(5, ?, 10), uint16], Tensor[(5, ?, 10), float32]) */
}

def @func_7231(%var_7230: Tensor[(18), float64]) -> (Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), float32], Tensor[(1, 6, 3), float64], Tensor[(18), float64]) {
  %207 = fn (%var_7225: Tensor[(18), float64]) -> (Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), float32], Tensor[(1, 6, 3), float64], Tensor[(18), float64]) {
    %201 = @func_6449() /* ty=(Tensor[(12, 7, 3), float32],) */;
    %202 = cast(%var_7225, dtype="float64") /* ty=Tensor[(18), float64] */;
    %203 = reshape(%202, newshape=[1, 6, 3]) /* ty=Tensor[(1, 6, 3), float64] */;
    %204 = @func_3843() /* ty=Tensor[(12, 7, 3), float32] */;
    %205 = %201.0;
    %206 = @func_1719(%203) /* ty=Tensor[(1, 6, 3), float64] */;
    (%204, %205, %206, %var_7225)
  };
  %207(%var_7230) /* ty=(Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), float32], Tensor[(1, 6, 3), float64], Tensor[(18), float64]) */
}

def @func_5835() -> (Tensor[(12, 7, 3), float32],) {
  @func_5833() /* ty=(Tensor[(12, 7, 3), float32],) */
}

def @func_7083(%var_7082: Tensor[(15, 6, 1), float64]) -> Tensor[(15, 6, 1), float64] {
  %209 = fn (%var_7069: Tensor[(15, 6, 1), float64]) -> Tensor[(15, 6, 1), float64] {
    %208 = cast(%var_7069, dtype="float64") /* ty=Tensor[(15, 6, 1), float64] */;
    rsqrt(%208) /* ty=Tensor[(15, 6, 1), float64] */
  };
  %209(%var_7082) /* ty=Tensor[(15, 6, 1), float64] */
}

def @func_8016() -> (Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), bool]) {
  %210 = @func_5302() /* ty=(Tensor[(12, 7, 3), float32],) */;
  %211 = @func_7583() /* ty=Tensor[(12, 7, 3), float64] */;
  %212 = cast(meta[relay.Constant][14] /* ty=Tensor[(12, 7, 3), float64] */, dtype="bool") /* ty=Tensor[(12, 7, 3), bool] */;
  %213 = shape_of(%211, dtype="int32") /* ty=Tensor[(3), int32] */;
  %214 = cast(%211, dtype="bool") /* ty=Tensor[(12, 7, 3), bool] */;
  %215 = dyn.reshape(%212, %213, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %216 = %210.0;
  %217 = greater(%214, %215) /* ty=Tensor[(12, 7, 3), bool] */;
  (%216, %217)
}

def @func_4081(%var_4079: Tensor[(18), float64]) -> (Tensor[(1, 6, 3), float64], Tensor[(18), float64], Tensor[(9, 4, 9), float64], Tensor[(3, 10, 7), float64], Tensor[(210), float64]) {
  @func_4078(%var_4079) /* ty=(Tensor[(1, 6, 3), float64], Tensor[(18), float64], Tensor[(9, 4, 9), float64], Tensor[(3, 10, 7), float64], Tensor[(210), float64]) */
}

def @func_6141() -> Tensor[(324), float64] {
  %218 = @func_3948() /* ty=(Tensor[(324), float64],) */;
  %218.0
}

def @func_6449() -> (Tensor[(12, 7, 3), float32],) {
  %219 = @func_2423() /* ty=(Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), float32]) */;
  %220 = %219.1;
  (%220,)
}

def @func_7509() -> (Tensor[(1080), int32], Tensor[(1080), int32]) {
  %221 = @func_6054() /* ty=(Tensor[(324), float64], Tensor[(10, 12, 9), int32], Tensor[(1080), int32]) */;
  %222 = @func_6054() /* ty=(Tensor[(324), float64], Tensor[(10, 12, 9), int32], Tensor[(1080), int32]) */;
  %223 = %221.2;
  %224 = %222.2;
  (%223, %224)
}

def @func_2839(%var_2837: Tensor[(3, 1, 7), float64]) -> (Tensor[(3, 1, 7), float64], Tensor[(3, 1, 7), float64]) {
  @func_2836(%var_2837) /* ty=(Tensor[(3, 1, 7), float64], Tensor[(3, 1, 7), float64]) */
}

def @func_4424(%var_4422: Tensor[(25), float32], %var_4423: Tensor[(585), int32]) -> (Tensor[(12, 7, 3), float32], Tensor[(7, ?, 10), int16], Tensor[(25), float32], Tensor[(585), int32], Tensor[(1260), float32], Tensor[(350, 3), float32], Tensor[(14, 9, 10), float32]) {
  @func_4420(%var_4422, %var_4423) /* ty=(Tensor[(12, 7, 3), float32], Tensor[(7, ?, 10), int16], Tensor[(25), float32], Tensor[(585), int32], Tensor[(1260), float32], Tensor[(350, 3), float32], Tensor[(14, 9, 10), float32]) */
}

def @func_5182(%var_5180: Tensor[(2250), float32]) -> (Tensor[(12, 7, 3), float32], Tensor[(10, 12, 9), float64], Tensor[(2250), float32], Tensor[(12, 7, 3), float32]) {
  @func_5179(%var_5180) /* ty=(Tensor[(12, 7, 3), float32], Tensor[(10, 12, 9), float64], Tensor[(2250), float32], Tensor[(12, 7, 3), float32]) */
}

def @func_4008() -> Tensor[(12, 7, 3), int8] {
  %226 = fn () -> Tensor[(12, 7, 3), int8] {
    %225 = @func_2586() /* ty=(Tensor[(12, 7, 3), int8],) */;
    %225.0
  };
  %226() /* ty=Tensor[(12, 7, 3), int8] */
}

def @func_5833() -> (Tensor[(12, 7, 3), float32],) {
  %227 = @func_3483() /* ty=(Tensor[(12, 7, 3), float32],) */;
  %228 = %227.0;
  (%228,)
}

def @func_5895() -> (Tensor[(12, 7, 3), float32],) {
  %229 = @func_3483() /* ty=(Tensor[(12, 7, 3), float32],) */;
  %230 = %229.0;
  (%230,)
}

def @func_7913() -> (Tensor[(12, 7, 3), float32],) {
  %231 = @func_5895() /* ty=(Tensor[(12, 7, 3), float32],) */;
  %232 = %231.0;
  %233 = cast(%232, dtype="float32") /* ty=Tensor[(12, 7, 3), float32] */;
  %234 = erf(%233) /* ty=Tensor[(12, 7, 3), float32] */;
  (%234,)
}

def @func_5244() -> (Tensor[(12, 7, 3), int8], Tensor[(3, 10, 7), float64], Tensor[(210, 1), float64]) {
  %235 = @func_2586() /* ty=(Tensor[(12, 7, 3), int8],) */;
  %236 = cast(meta[relay.Constant][15] /* ty=Tensor[(210, 1), float64] */, dtype="float64") /* ty=Tensor[(210, 1), float64] */;
  %237 = reshape(%236, newshape=[3, 10, 7]) /* ty=Tensor[(3, 10, 7), float64] */;
  %238 = @func_3981(%237) /* ty=(Tensor[(3, 10, 7), float64],) */;
  %239 = %235.0;
  %240 = %238.0;
  (%239, %240, meta[relay.Constant][15] /* ty=Tensor[(210, 1), float64] */)
}

def @func_5550(%var_5512: Tensor[(560), uint64]) -> (Tensor[(12, 7, 3), float64], Tensor[(15, 10, 15), bool], Tensor[(10, 7, 8), bool], Tensor[(560), uint64], Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), float64], Tensor[(12, 7, 3), float32], Tensor[(8, 12, 11), float32], Tensor[(264, 4), float32]) {
  %241 = cast(meta[relay.Constant][16] /* ty=Tensor[(2250), float32] */, dtype="float32") /* ty=Tensor[(2250), float32] */;
  %242 = reshape(%241, newshape=[15, 10, 15]) /* ty=Tensor[(15, 10, 15), float32] */;
  %243 = @func_1537(%242) /* ty=(Tensor[(10, 12, 9), float64], Tensor[(50), float64], Tensor[(3, 420), float32], Tensor[(10, 12, 9), float64], Tensor[(15, 10, 15), bool]) */;
  %244 = %243.4;
  %245 = cast(meta[relay.Constant][16] /* ty=Tensor[(2250), float32] */, dtype="bool") /* ty=Tensor[(2250), bool] */;
  %246 = shape_of(%244, dtype="int32") /* ty=Tensor[(3), int32] */;
  %247 = cast(%244, dtype="bool") /* ty=Tensor[(15, 10, 15), bool] */;
  %248 = dyn.reshape(%245, %246, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %249 = cast(%var_5512, dtype="uint64") /* ty=Tensor[(560), uint64] */;
  %250 = cast(%var_5512, dtype="uint64") /* ty=Tensor[(560), uint64] */;
  %251 = reshape(%249, newshape=[10, 7, 8]) /* ty=Tensor[(10, 7, 8), uint64] */;
  %252 = reshape(%250, newshape=[10, 7, 8]) /* ty=Tensor[(10, 7, 8), uint64] */;
  %253 = @func_1960(%251, %252) /* ty=(Tensor[(10, 7, 8), uint64], Tensor[(10, 7, 8), bool]) */;
  %254 = @func_3483() /* ty=(Tensor[(12, 7, 3), float32],) */;
  %255 = @func_4741() /* ty=(Tensor[(12, 7, 3), float64],) */;
  %256 = %255.0;
  %257 = cast(%256, dtype="float32") /* ty=Tensor[(12, 7, 3), float32] */;
  %258 = atan(%257) /* ty=Tensor[(12, 7, 3), float32] */;
  %259 = cast(%258, dtype="float64") /* ty=Tensor[(12, 7, 3), float64] */;
  %260 = cast(meta[relay.Constant][16] /* ty=Tensor[(2250), float32] */, dtype="float32") /* ty=Tensor[(2250), float32] */;
  %261 = reshape(%260, newshape=[2250]) /* ty=Tensor[(2250), float32] */;
  %262 = @func_4634(%261) /* ty=(Tensor[(9, 4, 9), float64], Tensor[(12, 7, 3), float32], Tensor[(2250), float32], Tensor[(25), float32]) */;
  %263 = cast(meta[relay.Constant][17] /* ty=Tensor[(264, 4), float32] */, dtype="float32") /* ty=Tensor[(264, 4), float32] */;
  %264 = reshape(%263, newshape=[8, 12, 11]) /* ty=Tensor[(8, 12, 11), float32] */;
  %265 = @func_1564(%264) /* ty=(Tensor[(8, 12, 11), float32],) */;
  %266 = @func_3808() /* ty=Tensor[(12, 7, 3), float64] */;
  %267 = logical_or(%247, %248) /* ty=Tensor[(15, 10, 15), bool] */;
  %268 = %253.1;
  %269 = %254.0;
  %270 = sqrt(%259) /* ty=Tensor[(12, 7, 3), float64] */;
  %271 = %262.1;
  %272 = %265.0;
  (%266, %267, %268, %var_5512, %269, %270, %271, %272, meta[relay.Constant][17] /* ty=Tensor[(264, 4), float32] */)
}

def @func_4729() -> (Tensor[(560), float64], Tensor[(12, 7, 3), float32]) {
  %281 = fn () -> (Tensor[(560), float64], Tensor[(12, 7, 3), float32]) {
    %273 = @func_3737() /* ty=(Tensor[(12, 7, 3), float32], Tensor[(10, 7, 8), uint64], Tensor[(560), uint64]) */;
    %274 = %273.2;
    %275 = cast(meta[relay.Constant][18] /* ty=Tensor[(560), uint64] */, dtype="float64") /* ty=Tensor[(560), float64] */;
    %276 = shape_of(%274, dtype="int32") /* ty=Tensor[(1), int32] */;
    %277 = cast(%274, dtype="float64") /* ty=Tensor[(560), float64] */;
    %278 = dyn.reshape(%275, %276, newshape=[]) /* ty=Tensor[(?), float64] */;
    %279 = mod(%277, %278) /* ty=Tensor[(560), float64] */;
    %280 = @func_4143() /* ty=Tensor[(12, 7, 3), float32] */;
    (%279, %280)
  };
  %281() /* ty=(Tensor[(560), float64], Tensor[(12, 7, 3), float32]) */
}

def @func_3739() -> (Tensor[(12, 7, 3), float32], Tensor[(10, 7, 8), uint64], Tensor[(560), uint64]) {
  @func_3737() /* ty=(Tensor[(12, 7, 3), float32], Tensor[(10, 7, 8), uint64], Tensor[(560), uint64]) */
}

def @func_7511() -> (Tensor[(1080), int32], Tensor[(1080), int32]) {
  @func_7509() /* ty=(Tensor[(1080), int32], Tensor[(1080), int32]) */
}

def @func_5603() -> (Tensor[(12, 7, 3), float64],) {
  %282 = @func_4741() /* ty=(Tensor[(12, 7, 3), float64],) */;
  %283 = %282.0;
  (%283,)
}

def @func_6420(%var_6419: Tensor[(6, 8, 12), uint64]) -> (Tensor[(6, 8, 12), uint64], Tensor[(6, 8, 12), float32]) {
  %291 = fn (%var_6398: Tensor[(6, 8, 12), uint64]) -> (Tensor[(6, 8, 12), uint64], Tensor[(6, 8, 12), float32]) {
    %284 = cast(meta[relay.Constant][19] /* ty=Tensor[(6, 8, 12), uint64] */, dtype="uint64") /* ty=Tensor[(6, 8, 12), uint64] */;
    %285 = shape_of(%var_6398, dtype="int32") /* ty=Tensor[(3), int32] */;
    %286 = cast(%var_6398, dtype="uint64") /* ty=Tensor[(6, 8, 12), uint64] */;
    %287 = dyn.reshape(%284, %285, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %288 = cast(%var_6398, dtype="float32") /* ty=Tensor[(6, 8, 12), float32] */;
    %289 = logical_xor(%286, %287) /* ty=Tensor[(6, 8, 12), uint64] */;
    %290 = sqrt(%288) /* ty=Tensor[(6, 8, 12), float32] */;
    (%289, %290)
  };
  %291(%var_6419) /* ty=(Tensor[(6, 8, 12), uint64], Tensor[(6, 8, 12), float32]) */
}

def @func_7584() -> Tensor[(12, 7, 3), float64] {
  %292 = fn () -> Tensor[(12, 7, 3), float64] {
    @func_3808() /* ty=Tensor[(12, 7, 3), float64] */
  };
  %292() /* ty=Tensor[(12, 7, 3), float64] */
}

def @func_8018() -> (Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), bool]) {
  @func_8016() /* ty=(Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), bool]) */
}

def @func_7027(%var_7025: Tensor[(15, 150), float32]) -> (Tensor[(12, 7, 3), int8], Tensor[(12, 7, 3), float64], Tensor[(2250), float32], Tensor[(15, 150), float32]) {
  @func_7024(%var_7025) /* ty=(Tensor[(12, 7, 3), int8], Tensor[(12, 7, 3), float64], Tensor[(2250), float32], Tensor[(15, 150), float32]) */
}

def @func_3067() -> (Tensor[(9, 4, 9), float64], Tensor[(12, 7, 3), float32]) {
  @func_3065() /* ty=(Tensor[(9, 4, 9), float64], Tensor[(12, 7, 3), float32]) */
}

def @func_7552() -> (Tensor[(324), float64],) {
  %294 = fn () -> (Tensor[(324), float64],) {
    %293 = @func_6017() /* ty=Tensor[(324), float64] */;
    (%293,)
  };
  %294() /* ty=(Tensor[(324), float64],) */
}

def @func_6542() -> (Tensor[(12, 7, 3), float64],) {
  @func_6540() /* ty=(Tensor[(12, 7, 3), float64],) */
}

def @func_1963(%var_1961: Tensor[(10, 7, 8), uint64], %var_1962: Tensor[(10, 7, 8), uint64]) -> (Tensor[(10, 7, 8), uint64], Tensor[(10, 7, 8), bool]) {
  %305 = fn (%var_1944: Tensor[(10, 7, 8), uint64], %var_1954: Tensor[(10, 7, 8), uint64]) -> (Tensor[(10, 7, 8), uint64], Tensor[(10, 7, 8), bool]) {
    %295 = cast(meta[relay.Constant][20] /* ty=Tensor[(10, 7, 8), uint64] */, dtype="uint64") /* ty=Tensor[(10, 7, 8), uint64] */;
    %296 = shape_of(%var_1944, dtype="int32") /* ty=Tensor[(3), int32] */;
    %297 = cast(%var_1944, dtype="uint64") /* ty=Tensor[(10, 7, 8), uint64] */;
    %298 = dyn.reshape(%295, %296, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %299 = cast(%var_1954, dtype="bool") /* ty=Tensor[(10, 7, 8), bool] */;
    %300 = shape_of(%var_1944, dtype="int32") /* ty=Tensor[(3), int32] */;
    %301 = cast(%var_1944, dtype="bool") /* ty=Tensor[(10, 7, 8), bool] */;
    %302 = dyn.reshape(%299, %300, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %303 = right_shift(%297, %298) /* ty=Tensor[(10, 7, 8), uint64] */;
    %304 = less(%301, %302) /* ty=Tensor[(10, 7, 8), bool] */;
    (%303, %304)
  };
  %305(%var_1961, %var_1962) /* ty=(Tensor[(10, 7, 8), uint64], Tensor[(10, 7, 8), bool]) */
}

def @func_5468(%var_5356: Tensor[(324), float64], %var_5357: Tensor[(195, 3), int32], %var_5406: Tensor[(12, 7, 3), float64]) -> (Tensor[(3, 6), float64], Tensor[(585), int32], Tensor[(324), float64], Tensor[(195, 3), int32], Tensor[(9, 4, 9), float64], Tensor[(210), float64], Tensor[(9, 4, 9), bool], Tensor[(12, 7, 3), bool], Tensor[(12, 7, 3), bool], Tensor[(12, 7, 3), uint8], Tensor[(12, 7, 3), float64]) {
  %306 = @func_5020() /* ty=(Tensor[(12, 7, 3), float64], Tensor[(324), float64]) */;
  %307 = %306.0;
  %308 = cast(%307, dtype="float32") /* ty=Tensor[(12, 7, 3), float32] */;
  %309 = reshape(%308, newshape=[12, 7, 3]) /* ty=Tensor[(12, 7, 3), float32] */;
  %310 = @func_2703(%309) /* ty=(Tensor[(12, 7, 3), float32], Tensor[(1, 6, 3), float64], Tensor[(3, 6), float64]) */;
  %311 = cast(%var_5356, dtype="float64") /* ty=Tensor[(324), float64] */;
  %312 = cast(%var_5357, dtype="int32") /* ty=Tensor[(195, 3), int32] */;
  %313 = reshape(%311, newshape=[9, 4, 9]) /* ty=Tensor[(9, 4, 9), float64] */;
  %314 = reshape(%312, newshape=[585]) /* ty=Tensor[(585), int32] */;
  %315 = @func_4365(%313, %314) /* ty=(Tensor[(9, 4, 9), uint32], Tensor[(585, 1), int32], Tensor[(585), int32]) */;
  %316 = @func_3065() /* ty=(Tensor[(9, 4, 9), float64], Tensor[(12, 7, 3), float32]) */;
  %317 = %310.2;
  %318 = cast(%317, dtype="float64") /* ty=Tensor[(3, 6), float64] */;
  %319 = reshape(%318, newshape=[18]) /* ty=Tensor[(18), float64] */;
  %320 = @func_4078(%319) /* ty=(Tensor[(1, 6, 3), float64], Tensor[(18), float64], Tensor[(9, 4, 9), float64], Tensor[(3, 10, 7), float64], Tensor[(210), float64]) */;
  %321 = %316.0;
  %322 = cast(%321, dtype="float64") /* ty=Tensor[(9, 4, 9), float64] */;
  %323 = reshape(%322, newshape=[9, 4, 9]) /* ty=Tensor[(9, 4, 9), float64] */;
  %324 = cast(%var_5406, dtype="bool") /* ty=Tensor[(12, 7, 3), bool] */;
  %325 = shape_of(%307, dtype="int32") /* ty=Tensor[(3), int32] */;
  %326 = cast(%307, dtype="bool") /* ty=Tensor[(12, 7, 3), bool] */;
  %327 = dyn.reshape(%324, %325, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %328 = @func_2568() /* ty=(Tensor[(12, 7, 3), float64], Tensor[(12, 7, 3), float32]) */;
  %329 = %328.0;
  %330 = cast(%329, dtype="bool") /* ty=Tensor[(12, 7, 3), bool] */;
  %331 = shape_of(%var_5406, dtype="int32") /* ty=Tensor[(3), int32] */;
  %332 = cast(%var_5406, dtype="bool") /* ty=Tensor[(12, 7, 3), bool] */;
  %333 = dyn.reshape(%330, %331, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %334 = cast(meta[relay.Constant][21] /* ty=Tensor[(12, 7, 3), float64] */, dtype="uint8") /* ty=Tensor[(12, 7, 3), uint8] */;
  %335 = shape_of(%var_5406, dtype="int32") /* ty=Tensor[(3), int32] */;
  %336 = cast(%var_5406, dtype="uint8") /* ty=Tensor[(12, 7, 3), uint8] */;
  %337 = dyn.reshape(%334, %335, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %338 = cast(%var_5406, dtype="float64") /* ty=Tensor[(12, 7, 3), float64] */;
  %339 = %315.2;
  %340 = %320.4;
  %341 = @func_4235(%323) /* ty=Tensor[(9, 4, 9), bool] */;
  %342 = not_equal(%326, %327) /* ty=Tensor[(12, 7, 3), bool] */;
  %343 = greater_equal(%332, %333) /* ty=Tensor[(12, 7, 3), bool] */;
  %344 = add(%336, %337) /* ty=Tensor[(12, 7, 3), uint8] */;
  %345 = tan(%338) /* ty=Tensor[(12, 7, 3), float64] */;
  (%317, %339, %var_5356, %var_5357, %321, %340, %341, %342, %343, %344, %345)
}

def @func_6054() -> (Tensor[(324), float64], Tensor[(10, 12, 9), int32], Tensor[(1080), int32]) {
  %346 = @func_2745() /* ty=(Tensor[(12, 7, 3), float64], Tensor[(9, 4, 9), float64], Tensor[(324), float64]) */;
  %347 = cast(meta[relay.Constant][22] /* ty=Tensor[(1080), int32] */, dtype="int32") /* ty=Tensor[(1080), int32] */;
  %348 = cast(meta[relay.Constant][22] /* ty=Tensor[(1080), int32] */, dtype="int32") /* ty=Tensor[(1080), int32] */;
  %349 = reshape(%347, newshape=[10, 12, 9]) /* ty=Tensor[(10, 12, 9), int32] */;
  %350 = reshape(%348, newshape=[10, 12, 9]) /* ty=Tensor[(10, 12, 9), int32] */;
  %351 = @func_521(%349, %350) /* ty=(Tensor[(10, 12, 9), int32], Tensor[(10, 12, 9), float64]) */;
  %352 = %346.2;
  %353 = %351.0;
  (%352, %353, meta[relay.Constant][22] /* ty=Tensor[(1080), int32] */)
}

def @func_542(%var_541: Tensor[(14, 9, 10), float32]) -> Tensor[(14, 9, 10), float32] {
  %355 = fn (%var_529: Tensor[(14, 9, 10), float32]) -> Tensor[(14, 9, 10), float32] {
    %354 = cast(%var_529, dtype="float32") /* ty=Tensor[(14, 9, 10), float32] */;
    sigmoid(%354) /* ty=Tensor[(14, 9, 10), float32] */
  };
  %355(%var_541) /* ty=Tensor[(14, 9, 10), float32] */
}

def @func_2425() -> (Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), float32]) {
  @func_2423() /* ty=(Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), float32]) */
}

def @func_5605() -> (Tensor[(12, 7, 3), float64],) {
  @func_5603() /* ty=(Tensor[(12, 7, 3), float64],) */
}

def @func_2814(%var_2808: Tensor[(585, 1), int32]) -> (Tensor[(12, 7, 3), int8], Tensor[(13, 15, 3), bool], Tensor[(585, 1), int32]) {
  %356 = @func_2586() /* ty=(Tensor[(12, 7, 3), int8],) */;
  %357 = cast(%var_2808, dtype="int32") /* ty=Tensor[(585, 1), int32] */;
  %358 = cast(%var_2808, dtype="int32") /* ty=Tensor[(585, 1), int32] */;
  %359 = reshape(%357, newshape=[13, 15, 3]) /* ty=Tensor[(13, 15, 3), int32] */;
  %360 = reshape(%358, newshape=[13, 15, 3]) /* ty=Tensor[(13, 15, 3), int32] */;
  %361 = @func_1690(%359, %360) /* ty=(Tensor[(13, 15, 3), bool],) */;
  %362 = %356.0;
  %363 = %361.0;
  (%362, %363, %var_2808)
}

def @func_3175(%var_3131: Tensor[(6, 14, 4), uint8], %var_3132: Tensor[(6, 14, 4), uint8], %var_3145: Tensor[(21), float64]) -> (Tensor[(6, 14, 4), uint8], Tensor[(3, 1, 7), float64], Tensor[(3, 1, 7), float64], Tensor[(21), float64]) {
  %364 = cast(%var_3132, dtype="uint8") /* ty=Tensor[(6, 14, 4), uint8] */;
  %365 = shape_of(%var_3131, dtype="int32") /* ty=Tensor[(3), int32] */;
  %366 = cast(%var_3131, dtype="uint8") /* ty=Tensor[(6, 14, 4), uint8] */;
  %367 = dyn.reshape(%364, %365, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %368 = cast(%var_3145, dtype="float64") /* ty=Tensor[(21), float64] */;
  %369 = reshape(%368, newshape=[3, 1, 7]) /* ty=Tensor[(3, 1, 7), float64] */;
  %370 = @func_2836(%369) /* ty=(Tensor[(3, 1, 7), float64], Tensor[(3, 1, 7), float64]) */;
  %371 = %370.1;
  %372 = cast(%371, dtype="float64") /* ty=Tensor[(3, 1, 7), float64] */;
  %373 = reshape(%372, newshape=[3, 1, 7]) /* ty=Tensor[(3, 1, 7), float64] */;
  %374 = @func_2836(%373) /* ty=(Tensor[(3, 1, 7), float64], Tensor[(3, 1, 7), float64]) */;
  %375 = cast(%var_3145, dtype="float64") /* ty=Tensor[(21), float64] */;
  %376 = left_shift(%366, %367) /* ty=Tensor[(6, 14, 4), uint8] */;
  %377 = %374.1;
  %378 = atanh(%375) /* ty=Tensor[(21), float64] */;
  (%376, %371, %377, %378)
}

def @func_2651(%var_2649: Tensor[(2250), float32]) -> (Tensor[(12, 7, 3), float32], Tensor[(13, 15, 3), bool], Tensor[(585), int32], Tensor[(10, 12, 9), float64], Tensor[(2250), float32]) {
  @func_2648(%var_2649) /* ty=(Tensor[(12, 7, 3), float32], Tensor[(13, 15, 3), bool], Tensor[(585), int32], Tensor[(10, 12, 9), float64], Tensor[(2250), float32]) */
}

def @func_3948() -> (Tensor[(324), float64],) {
  %379 = @func_3560() /* ty=(Tensor[(12, 7, 3), int8], Tensor[(324), float64]) */;
  %380 = %379.1;
  (%380,)
}

def @func_3984(%var_3982: Tensor[(3, 10, 7), float64]) -> (Tensor[(3, 10, 7), float64],) {
  @func_3981(%var_3982) /* ty=(Tensor[(3, 10, 7), float64],) */
}

def @func_6901() -> (Tensor[(324), float64], Tensor[(324), uint64]) {
  %387 = fn () -> (Tensor[(324), float64], Tensor[(324), uint64]) {
    %381 = @func_6070() /* ty=Tensor[(324), float64] */;
    %382 = cast(%381, dtype="float64") /* ty=Tensor[(324), float64] */;
    %383 = cast(%381, dtype="float64") /* ty=Tensor[(324), float64] */;
    %384 = reshape(%383, newshape=[324]) /* ty=Tensor[(324), float64] */;
    %385 = erf(%382) /* ty=Tensor[(324), float64] */;
    %386 = @func_3905(%384) /* ty=Tensor[(324), uint64] */;
    (%385, %386)
  };
  %387() /* ty=(Tensor[(324), float64], Tensor[(324), uint64]) */
}

def @func_2456(%var_2454: Tensor[(585), int32]) -> (Tensor[(12, 7, 3), float32], Tensor[(13, 15, 3), bool], Tensor[(585), int32]) {
  @func_2453(%var_2454) /* ty=(Tensor[(12, 7, 3), float32], Tensor[(13, 15, 3), bool], Tensor[(585), int32]) */
}

def @func_1694(%var_1692: Tensor[(13, 15, 3), int32], %var_1693: Tensor[(13, 15, 3), int32]) -> (Tensor[(13, 15, 3), bool],) {
  @func_1690(%var_1692, %var_1693) /* ty=(Tensor[(13, 15, 3), bool],) */
}

def @func_5553(%var_5551: Tensor[(560), uint64]) -> (Tensor[(12, 7, 3), float64], Tensor[(15, 10, 15), bool], Tensor[(10, 7, 8), bool], Tensor[(560), uint64], Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), float64], Tensor[(12, 7, 3), float32], Tensor[(8, 12, 11), float32], Tensor[(264, 4), float32]) {
  @func_5550(%var_5551) /* ty=(Tensor[(12, 7, 3), float64], Tensor[(15, 10, 15), bool], Tensor[(10, 7, 8), bool], Tensor[(560), uint64], Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), float64], Tensor[(12, 7, 3), float32], Tensor[(8, 12, 11), float32], Tensor[(264, 4), float32]) */
}

def @func_649(%var_549: Tensor[(5, 1, 10), float64], %var_562: Tensor[(1260), float32]) -> (Tensor[(14, 9, 10), float32], Tensor[(1260), float32], Tensor[(14, 9, 10), float32], Tensor[(14, 9, 10), float32], Tensor[(10, 12, 9), float64], Tensor[(1080), int32], Tensor[(10, 12, 9), int32], Tensor[(5, ?, 10), uint16], Tensor[(5, ?, 10), float32]) {
  %388 = cast(%var_562, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %389 = reshape(%388, newshape=[14, 9, 10]) /* ty=Tensor[(14, 9, 10), float32] */;
  %390 = cast(%var_562, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %391 = reshape(%390, newshape=[14, 9, 10]) /* ty=Tensor[(14, 9, 10), float32] */;
  %392 = cast(%var_562, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %393 = reshape(%392, newshape=[14, 9, 10]) /* ty=Tensor[(14, 9, 10), float32] */;
  %394 = cast(meta[relay.Constant][23] /* ty=Tensor[(1080), int32] */, dtype="int32") /* ty=Tensor[(1080), int32] */;
  %395 = cast(meta[relay.Constant][23] /* ty=Tensor[(1080), int32] */, dtype="int32") /* ty=Tensor[(1080), int32] */;
  %396 = reshape(%394, newshape=[10, 12, 9]) /* ty=Tensor[(10, 12, 9), int32] */;
  %397 = reshape(%395, newshape=[10, 12, 9]) /* ty=Tensor[(10, 12, 9), int32] */;
  %398 = @func_521(%396, %397) /* ty=(Tensor[(10, 12, 9), int32], Tensor[(10, 12, 9), float64]) */;
  %399 = %398.1;
  %400 = cast(%399, dtype="int32") /* ty=Tensor[(10, 12, 9), int32] */;
  %401 = cast(%399, dtype="int32") /* ty=Tensor[(10, 12, 9), int32] */;
  %402 = reshape(%400, newshape=[10, 12, 9]) /* ty=Tensor[(10, 12, 9), int32] */;
  %403 = reshape(%401, newshape=[10, 12, 9]) /* ty=Tensor[(10, 12, 9), int32] */;
  %404 = @func_521(%402, %403) /* ty=(Tensor[(10, 12, 9), int32], Tensor[(10, 12, 9), float64]) */;
  %405 = cast(%var_549, dtype="float64") /* ty=Tensor[(5, 1, 10), float64] */;
  %406 = erf(%405) /* ty=Tensor[(5, 1, 10), float64] */;
  %407 = cast(%var_549, dtype="bool") /* ty=Tensor[(5, 1, 10), bool] */;
  %408 = shape_of(%406, dtype="int32") /* ty=Tensor[(3), int32] */;
  %409 = cast(%406, dtype="bool") /* ty=Tensor[(5, 1, 10), bool] */;
  %410 = dyn.reshape(%407, %408, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %411 = logical_and(%409, %410) /* ty=Tensor[(5, ?, 10), bool] */;
  %412 = cast(%411, dtype="float32") /* ty=Tensor[(5, ?, 10), float32] */;
  %413 = rsqrt(%412) /* ty=Tensor[(5, ?, 10), float32] */;
  %414 = cast(%var_549, dtype="float64") /* ty=Tensor[(5, 1, 10), float64] */;
  %415 = shape_of(%406, dtype="int32") /* ty=Tensor[(3), int32] */;
  %416 = cast(%406, dtype="float64") /* ty=Tensor[(5, 1, 10), float64] */;
  %417 = dyn.reshape(%414, %415, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %418 = mod(%416, %417) /* ty=Tensor[(5, ?, 10), float64] */;
  %419 = cast(%418, dtype="uint16") /* ty=Tensor[(5, ?, 10), uint16] */;
  %420 = shape_of(%413, dtype="int32") /* ty=Tensor[(3), int32] */;
  %421 = cast(%413, dtype="uint16") /* ty=Tensor[(5, ?, 10), uint16] */;
  %422 = dyn.reshape(%419, %420, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %423 = cast(%411, dtype="float32") /* ty=Tensor[(5, ?, 10), float32] */;
  %424 = shape_of(%418, dtype="int32") /* ty=Tensor[(3), int32] */;
  %425 = cast(%418, dtype="float32") /* ty=Tensor[(5, ?, 10), float32] */;
  %426 = dyn.reshape(%423, %424, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %427 = @func_540(%389) /* ty=Tensor[(14, 9, 10), float32] */;
  %428 = @func_540(%391) /* ty=Tensor[(14, 9, 10), float32] */;
  %429 = @func_540(%393) /* ty=Tensor[(14, 9, 10), float32] */;
  %430 = %404.0;
  %431 = maximum(%421, %422) /* ty=Tensor[(5, ?, 10), uint16] */;
  %432 = floor_mod(%425, %426) /* ty=Tensor[(5, ?, 10), float32] */;
  (%427, %var_562, %428, %429, %399, meta[relay.Constant][23] /* ty=Tensor[(1080), int32] */, %430, %431, %432)
}

def @func_2817(%var_2815: Tensor[(585, 1), int32]) -> (Tensor[(12, 7, 3), int8], Tensor[(13, 15, 3), bool], Tensor[(585, 1), int32]) {
  @func_2814(%var_2815) /* ty=(Tensor[(12, 7, 3), int8], Tensor[(13, 15, 3), bool], Tensor[(585, 1), int32]) */
}

def @func_2911() -> (Tensor[(9, 4, 9), float64], Tensor[(12, 7, 3), float32]) {
  @func_2909() /* ty=(Tensor[(9, 4, 9), float64], Tensor[(12, 7, 3), float32]) */
}

def @func_7629() -> (Tensor[(12, 7, 3), float32],) {
  %433 = @func_5895() /* ty=(Tensor[(12, 7, 3), float32],) */;
  %434 = %433.0;
  (%434,)
}

def @func_5021() -> (Tensor[(12, 7, 3), float64], Tensor[(324), float64]) {
  %439 = fn () -> (Tensor[(12, 7, 3), float64], Tensor[(324), float64]) {
    %435 = @func_4020() /* ty=(Tensor[(12, 7, 3), float64],) */;
    %436 = @func_3560() /* ty=(Tensor[(12, 7, 3), int8], Tensor[(324), float64]) */;
    %437 = %435.0;
    %438 = %436.1;
    (%437, %438)
  };
  %439() /* ty=(Tensor[(12, 7, 3), float64], Tensor[(324), float64]) */
}

def @func_6143() -> Tensor[(324), float64] {
  @func_6141() /* ty=Tensor[(324), float64] */
}

def @func_871(%var_863: Tensor[(7, 1, 10), float64]) -> (Tensor[(7, 1, 10), float64],) {
  %440 = cast(%var_863, dtype="float64") /* ty=Tensor[(7, 1, 10), float64] */;
  %441 = log2(%440) /* ty=Tensor[(7, 1, 10), float64] */;
  (%441,)
}

def @func_2648(%var_2645: Tensor[(2250), float32]) -> (Tensor[(12, 7, 3), float32], Tensor[(13, 15, 3), bool], Tensor[(585), int32], Tensor[(10, 12, 9), float64], Tensor[(2250), float32]) {
  %442 = @func_2423() /* ty=(Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), float32]) */;
  %443 = cast(meta[relay.Constant][24] /* ty=Tensor[(585), int32] */, dtype="int32") /* ty=Tensor[(585), int32] */;
  %444 = cast(meta[relay.Constant][24] /* ty=Tensor[(585), int32] */, dtype="int32") /* ty=Tensor[(585), int32] */;
  %445 = reshape(%443, newshape=[13, 15, 3]) /* ty=Tensor[(13, 15, 3), int32] */;
  %446 = reshape(%444, newshape=[13, 15, 3]) /* ty=Tensor[(13, 15, 3), int32] */;
  %447 = @func_1690(%445, %446) /* ty=(Tensor[(13, 15, 3), bool],) */;
  %448 = cast(%var_2645, dtype="float32") /* ty=Tensor[(2250), float32] */;
  %449 = reshape(%448, newshape=[15, 10, 15]) /* ty=Tensor[(15, 10, 15), float32] */;
  %450 = @func_1537(%449) /* ty=(Tensor[(10, 12, 9), float64], Tensor[(50), float64], Tensor[(3, 420), float32], Tensor[(10, 12, 9), float64], Tensor[(15, 10, 15), bool]) */;
  %451 = %442.1;
  %452 = %447.0;
  %453 = %450.0;
  (%451, %452, meta[relay.Constant][24] /* ty=Tensor[(585), int32] */, %453, %var_2645)
}

def @func_7675(%var_7673: Tensor[(3, 12, 11), float32], %var_7674: Tensor[(18, 1), float64]) -> (Tensor[(3, 12, 11), float32], Tensor[(1, 6, 3), float64], Tensor[(18, 1), float64]) {
  %462 = fn (%var_7654: Tensor[(3, 12, 11), float32], %var_7665: Tensor[(18, 1), float64]) -> (Tensor[(3, 12, 11), float32], Tensor[(1, 6, 3), float64], Tensor[(18, 1), float64]) {
    %454 = cast(meta[relay.Constant][25] /* ty=Tensor[(3, 12, 11), float32] */, dtype="float32") /* ty=Tensor[(3, 12, 11), float32] */;
    %455 = shape_of(%var_7654, dtype="int32") /* ty=Tensor[(3), int32] */;
    %456 = cast(%var_7654, dtype="float32") /* ty=Tensor[(3, 12, 11), float32] */;
    %457 = dyn.reshape(%454, %455, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %458 = cast(%var_7665, dtype="float64") /* ty=Tensor[(18, 1), float64] */;
    %459 = reshape(%458, newshape=[1, 6, 3]) /* ty=Tensor[(1, 6, 3), float64] */;
    %460 = mod(%456, %457) /* ty=Tensor[(3, 12, 11), float32] */;
    %461 = @func_1719(%459) /* ty=Tensor[(1, 6, 3), float64] */;
    (%460, %461, %var_7665)
  };
  %462(%var_7673, %var_7674) /* ty=(Tensor[(3, 12, 11), float32], Tensor[(1, 6, 3), float64], Tensor[(18, 1), float64]) */
}

def @func_6508() -> (Tensor[(12, 7, 3), float32],) {
  %463 = @func_5895() /* ty=(Tensor[(12, 7, 3), float32],) */;
  %464 = %463.0;
  (%464,)
}

def @func_6767(%var_6765: Tensor[(324), float64]) -> (Tensor[(585, 1), int32], Tensor[(9, 4, 9), uint32], Tensor[(324), float64], Tensor[(12, 7, 3), float32]) {
  @func_6764(%var_6765) /* ty=(Tensor[(585, 1), int32], Tensor[(9, 4, 9), uint32], Tensor[(324), float64], Tensor[(12, 7, 3), float32]) */
}

def @func_1566(%var_1565: Tensor[(8, 12, 11), float32]) -> (Tensor[(8, 12, 11), float32],) {
  %467 = fn (%var_1560: Tensor[(8, 12, 11), float32]) -> (Tensor[(8, 12, 11), float32],) {
    %465 = cast(%var_1560, dtype="float32") /* ty=Tensor[(8, 12, 11), float32] */;
    %466 = asin(%465) /* ty=Tensor[(8, 12, 11), float32] */;
    (%466,)
  };
  %467(%var_1565) /* ty=(Tensor[(8, 12, 11), float32],) */
}

def @func_6701(%var_6700: Tensor[(1260), float32]) -> (Tensor[(9, 4, 9), float64], Tensor[(350, 3), float32], Tensor[(12, 7, 3), int8], Tensor[(14, 9, 10), float32], Tensor[(50), float64], Tensor[(1260), float32]) {
  %480 = fn (%var_6688: Tensor[(1260), float32]) -> (Tensor[(9, 4, 9), float64], Tensor[(350, 3), float32], Tensor[(12, 7, 3), int8], Tensor[(14, 9, 10), float32], Tensor[(50), float64], Tensor[(1260), float32]) {
    %468 = @func_3065() /* ty=(Tensor[(9, 4, 9), float64], Tensor[(12, 7, 3), float32]) */;
    %469 = @func_5814() /* ty=(Tensor[(9, 4, 9), float64], Tensor[(324), float64], Tensor[(350, 3), float32], Tensor[(25), float32], Tensor[(585), int32]) */;
    %470 = @func_2586() /* ty=(Tensor[(12, 7, 3), int8],) */;
    %471 = cast(meta[relay.Constant][26] /* ty=Tensor[(50), float64] */, dtype="float64") /* ty=Tensor[(50), float64] */;
    %472 = cast(%var_6688, dtype="float32") /* ty=Tensor[(1260), float32] */;
    %473 = reshape(%471, newshape=[5, 1, 10]) /* ty=Tensor[(5, 1, 10), float64] */;
    %474 = reshape(%472, newshape=[1260]) /* ty=Tensor[(1260), float32] */;
    %475 = @func_649(%473, %474) /* ty=(Tensor[(14, 9, 10), float32], Tensor[(1260), float32], Tensor[(14, 9, 10), float32], Tensor[(14, 9, 10), float32], Tensor[(10, 12, 9), float64], Tensor[(1080), int32], Tensor[(10, 12, 9), int32], Tensor[(5, ?, 10), uint16], Tensor[(5, ?, 10), float32]) */;
    %476 = %468.0;
    %477 = %469.2;
    %478 = %470.0;
    %479 = %475.2;
    (%476, %477, %478, %479, meta[relay.Constant][26] /* ty=Tensor[(50), float64] */, %var_6688)
  };
  %480(%var_6700) /* ty=(Tensor[(9, 4, 9), float64], Tensor[(350, 3), float32], Tensor[(12, 7, 3), int8], Tensor[(14, 9, 10), float32], Tensor[(50), float64], Tensor[(1260), float32]) */
}

def @func_2587() -> (Tensor[(12, 7, 3), int8],) {
  %488 = fn () -> (Tensor[(12, 7, 3), int8],) {
    %481 = @func_2423() /* ty=(Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), float32]) */;
    %482 = %481.0;
    %483 = cast(meta[relay.Constant][27] /* ty=Tensor[(12, 7, 3), float32] */, dtype="int8") /* ty=Tensor[(12, 7, 3), int8] */;
    %484 = shape_of(%482, dtype="int32") /* ty=Tensor[(3), int32] */;
    %485 = cast(%482, dtype="int8") /* ty=Tensor[(12, 7, 3), int8] */;
    %486 = dyn.reshape(%483, %484, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %487 = bitwise_xor(%485, %486) /* ty=Tensor[(12, 7, 3), int8] */;
    (%487,)
  };
  %488() /* ty=(Tensor[(12, 7, 3), int8],) */
}

def @func_6017() -> Tensor[(324), float64] {
  %489 = @func_2745() /* ty=(Tensor[(12, 7, 3), float64], Tensor[(9, 4, 9), float64], Tensor[(324), float64]) */;
  %489.2
}

def @func_6072() -> Tensor[(324), float64] {
  @func_6070() /* ty=Tensor[(324), float64] */
}

def @func_6936(%var_6935: Tensor[(25), float32]) -> Tensor[(25), bool] {
  %496 = fn (%var_6929: Tensor[(25), float32]) -> Tensor[(25), bool] {
    %490 = @func_5814() /* ty=(Tensor[(9, 4, 9), float64], Tensor[(324), float64], Tensor[(350, 3), float32], Tensor[(25), float32], Tensor[(585), int32]) */;
    %491 = %490.3;
    %492 = cast(%var_6929, dtype="bool") /* ty=Tensor[(25), bool] */;
    %493 = shape_of(%491, dtype="int32") /* ty=Tensor[(1), int32] */;
    %494 = cast(%491, dtype="bool") /* ty=Tensor[(25), bool] */;
    %495 = dyn.reshape(%492, %493, newshape=[]) /* ty=Tensor[(?), bool] */;
    greater(%494, %495) /* ty=Tensor[(25), bool] */
  };
  %496(%var_6935) /* ty=Tensor[(25), bool] */
}

def @func_4078(%var_4046: Tensor[(18), float64]) -> (Tensor[(1, 6, 3), float64], Tensor[(18), float64], Tensor[(9, 4, 9), float64], Tensor[(3, 10, 7), float64], Tensor[(210), float64]) {
  %497 = cast(%var_4046, dtype="float64") /* ty=Tensor[(18), float64] */;
  %498 = reshape(%497, newshape=[1, 6, 3]) /* ty=Tensor[(1, 6, 3), float64] */;
  %499 = @func_3665() /* ty=(Tensor[(9, 4, 9), float64], Tensor[(585, 1), int32], Tensor[(585), int32]) */;
  %500 = %499.0;
  %501 = cast(%500, dtype="float64") /* ty=Tensor[(9, 4, 9), float64] */;
  %502 = cast(meta[relay.Constant][28] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %503 = reshape(%502, newshape=[3, 10, 7]) /* ty=Tensor[(3, 10, 7), float64] */;
  %504 = @func_3981(%503) /* ty=(Tensor[(3, 10, 7), float64],) */;
  %505 = @func_1719(%498) /* ty=Tensor[(1, 6, 3), float64] */;
  %506 = log(%501) /* ty=Tensor[(9, 4, 9), float64] */;
  %507 = %504.0;
  (%505, %var_4046, %506, %507, meta[relay.Constant][28] /* ty=Tensor[(210), float64] */)
}

def @func_4525(%var_4524: Tensor[(2250), float32]) -> (Tensor[(12, 7, 3), int8], Tensor[(12, 7, 3), int8], Tensor[(15, 10, 15), bool], Tensor[(2250), float32]) {
  %514 = fn (%var_4515: Tensor[(2250), float32]) -> (Tensor[(12, 7, 3), int8], Tensor[(12, 7, 3), int8], Tensor[(15, 10, 15), bool], Tensor[(2250), float32]) {
    %508 = cast(%var_4515, dtype="float32") /* ty=Tensor[(2250), float32] */;
    %509 = reshape(%508, newshape=[15, 10, 15]) /* ty=Tensor[(15, 10, 15), float32] */;
    %510 = @func_1537(%509) /* ty=(Tensor[(10, 12, 9), float64], Tensor[(50), float64], Tensor[(3, 420), float32], Tensor[(10, 12, 9), float64], Tensor[(15, 10, 15), bool]) */;
    %511 = @func_4007() /* ty=Tensor[(12, 7, 3), int8] */;
    %512 = @func_4007() /* ty=Tensor[(12, 7, 3), int8] */;
    %513 = %510.4;
    (%511, %512, %513, %var_4515)
  };
  %514(%var_4524) /* ty=(Tensor[(12, 7, 3), int8], Tensor[(12, 7, 3), int8], Tensor[(15, 10, 15), bool], Tensor[(2250), float32]) */
}

def @func_6237(%var_6236: Tensor[(585, 1), int32]) -> (Tensor[(12, 7, 3), float32], Tensor[(65, 9), int32], Tensor[(25), float32], Tensor[(585, 1), int32]) {
  %523 = fn (%var_6232: Tensor[(585, 1), int32]) -> (Tensor[(12, 7, 3), float32], Tensor[(65, 9), int32], Tensor[(25), float32], Tensor[(585, 1), int32]) {
    %515 = @func_6008() /* ty=(Tensor[(12, 7, 3), float32],) */;
    %516 = cast(meta[relay.Constant][29] /* ty=Tensor[(25), float32] */, dtype="float32") /* ty=Tensor[(25), float32] */;
    %517 = cast(%var_6232, dtype="int32") /* ty=Tensor[(585, 1), int32] */;
    %518 = reshape(%516, newshape=[5, 5, 1]) /* ty=Tensor[(5, 5, 1), float32] */;
    %519 = reshape(%517, newshape=[65, 9]) /* ty=Tensor[(65, 9), int32] */;
    %520 = @func_1842(%518, %519) /* ty=(Tensor[(7, 1, 10), float64], Tensor[(7, 10), float64], Tensor[(13, 15, 3), bool], Tensor[(65, 9), int32], Tensor[(10, 12, 9), int32], Tensor[(1080), int32], Tensor[(5, 5, ?), float32], Tensor[(7, 1, 10), float64]) */;
    %521 = %515.0;
    %522 = %520.3;
    (%521, %522, meta[relay.Constant][29] /* ty=Tensor[(25), float32] */, %var_6232)
  };
  %523(%var_6236) /* ty=(Tensor[(12, 7, 3), float32], Tensor[(65, 9), int32], Tensor[(25), float32], Tensor[(585, 1), int32]) */
}

def @func_2453(%var_2446: Tensor[(585), int32]) -> (Tensor[(12, 7, 3), float32], Tensor[(13, 15, 3), bool], Tensor[(585), int32]) {
  %524 = @func_2423() /* ty=(Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), float32]) */;
  %525 = cast(%var_2446, dtype="int32") /* ty=Tensor[(585), int32] */;
  %526 = cast(%var_2446, dtype="int32") /* ty=Tensor[(585), int32] */;
  %527 = reshape(%525, newshape=[13, 15, 3]) /* ty=Tensor[(13, 15, 3), int32] */;
  %528 = reshape(%526, newshape=[13, 15, 3]) /* ty=Tensor[(13, 15, 3), int32] */;
  %529 = @func_1690(%527, %528) /* ty=(Tensor[(13, 15, 3), bool],) */;
  %530 = %524.1;
  %531 = %529.0;
  (%530, %531, %var_2446)
}

def @func_7437() -> (Tensor[(9, 4, 9), float64],) {
  %534 = fn () -> (Tensor[(9, 4, 9), float64],) {
    %532 = @func_3065() /* ty=(Tensor[(9, 4, 9), float64], Tensor[(12, 7, 3), float32]) */;
    %533 = %532.0;
    (%533,)
  };
  %534() /* ty=(Tensor[(9, 4, 9), float64],) */
}

def @func_7528() -> Tensor[(324), float64] {
  %535 = @func_5321() /* ty=(Tensor[(324), float64],) */;
  %535.0
}

def @func_7530() -> Tensor[(324), float64] {
  @func_7528() /* ty=Tensor[(324), float64] */
}

def @func_3737() -> (Tensor[(12, 7, 3), float32], Tensor[(10, 7, 8), uint64], Tensor[(560), uint64]) {
  %536 = @func_3483() /* ty=(Tensor[(12, 7, 3), float32],) */;
  %537 = cast(meta[relay.Constant][30] /* ty=Tensor[(560), uint64] */, dtype="uint64") /* ty=Tensor[(560), uint64] */;
  %538 = cast(meta[relay.Constant][30] /* ty=Tensor[(560), uint64] */, dtype="uint64") /* ty=Tensor[(560), uint64] */;
  %539 = reshape(%537, newshape=[10, 7, 8]) /* ty=Tensor[(10, 7, 8), uint64] */;
  %540 = reshape(%538, newshape=[10, 7, 8]) /* ty=Tensor[(10, 7, 8), uint64] */;
  %541 = @func_1960(%539, %540) /* ty=(Tensor[(10, 7, 8), uint64], Tensor[(10, 7, 8), bool]) */;
  %542 = %536.0;
  %543 = %541.0;
  (%542, %543, meta[relay.Constant][30] /* ty=Tensor[(560), uint64] */)
}

def @func_4841() -> Tensor[(324), float64] {
  %545 = fn () -> Tensor[(324), float64] {
    %544 = @func_2745() /* ty=(Tensor[(12, 7, 3), float64], Tensor[(9, 4, 9), float64], Tensor[(324), float64]) */;
    %544.2
  };
  %545() /* ty=Tensor[(324), float64] */
}

def @func_3618(%var_3616: Tensor[(324), float64]) -> (Tensor[(324), bool], Tensor[(3, 1, 7), float64], Tensor[(336), uint8], Tensor[(21, 1), float64]) {
  @func_3615(%var_3616) /* ty=(Tensor[(324), bool], Tensor[(3, 1, 7), float64], Tensor[(336), uint8], Tensor[(21, 1), float64]) */
}

def @func_6996() -> (Tensor[(12, 7, 3), float32],) {
  @func_6994() /* ty=(Tensor[(12, 7, 3), float32],) */
}

def @func_4143() -> Tensor[(12, 7, 3), float32] {
  %546 = @func_2568() /* ty=(Tensor[(12, 7, 3), float64], Tensor[(12, 7, 3), float32]) */;
  %546.1
}

def @func_4420(%var_4399: Tensor[(25), float32], %var_4400: Tensor[(585), int32]) -> (Tensor[(12, 7, 3), float32], Tensor[(7, ?, 10), int16], Tensor[(25), float32], Tensor[(585), int32], Tensor[(1260), float32], Tensor[(350, 3), float32], Tensor[(14, 9, 10), float32]) {
  %547 = @func_4295() /* ty=(Tensor[(12, 7, 3), float32],) */;
  %548 = cast(%var_4399, dtype="float32") /* ty=Tensor[(25), float32] */;
  %549 = cast(%var_4400, dtype="int32") /* ty=Tensor[(585), int32] */;
  %550 = cast(meta[relay.Constant][31] /* ty=Tensor[(1260), float32] */, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %551 = cast(meta[relay.Constant][32] /* ty=Tensor[(350, 3), float32] */, dtype="float32") /* ty=Tensor[(350, 3), float32] */;
  %552 = cast(meta[relay.Constant][32] /* ty=Tensor[(350, 3), float32] */, dtype="bool") /* ty=Tensor[(350, 3), bool] */;
  %553 = reshape(%548, newshape=[25]) /* ty=Tensor[(25), float32] */;
  %554 = reshape(%549, newshape=[585]) /* ty=Tensor[(585), int32] */;
  %555 = reshape(%550, newshape=[3, 420]) /* ty=Tensor[(3, 420), float32] */;
  %556 = reshape(%551, newshape=[7, 15, 10]) /* ty=Tensor[(7, 15, 10), float32] */;
  %557 = reshape(%552, newshape=[7, 15, 10]) /* ty=Tensor[(7, 15, 10), bool] */;
  %558 = @func_3372(%553, %554, %555, %556, %557) /* ty=(Tensor[(25), float32], Tensor[(585), int32], Tensor[(585), int32], Tensor[(9, 4, 9), float64], Tensor[(2250), float32], Tensor[(5, ?, 10), uint16], Tensor[(50), float64], Tensor[(3, 420), float64], Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), float32], Tensor[(7, ?, 10), int16], Tensor[(7, 15, 10), int8], Tensor[(7, 15, 10), float32]) */;
  %559 = cast(meta[relay.Constant][31] /* ty=Tensor[(1260), float32] */, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %560 = reshape(%559, newshape=[14, 9, 10]) /* ty=Tensor[(14, 9, 10), float32] */;
  %561 = %547.0;
  %562 = %558.11;
  %563 = @func_540(%560) /* ty=Tensor[(14, 9, 10), float32] */;
  (%561, %562, %var_4399, %var_4400, meta[relay.Constant][31] /* ty=Tensor[(1260), float32] */, meta[relay.Constant][32] /* ty=Tensor[(350, 3), float32] */, %563)
}

def @func_7292(%var_7290: Tensor[(12, 7, 3), float64]) -> (Tensor[(12, 7, 3), int16],) {
  @func_7289(%var_7290) /* ty=(Tensor[(12, 7, 3), int16],) */
}

def @func_3378(%var_3373: Tensor[(25), float32], %var_3374: Tensor[(585), int32], %var_3375: Tensor[(3, 420), float32], %var_3376: Tensor[(7, 15, 10), float32], %var_3377: Tensor[(7, 15, 10), bool]) -> (Tensor[(25), float32], Tensor[(585), int32], Tensor[(585), int32], Tensor[(9, 4, 9), float64], Tensor[(2250), float32], Tensor[(5, ?, 10), uint16], Tensor[(50), float64], Tensor[(3, 420), float64], Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), float32], Tensor[(7, ?, 10), int16], Tensor[(7, 15, 10), int8], Tensor[(7, 15, 10), float32]) {
  %638 = fn (%var_3193: Tensor[(25), float32], %var_3194: Tensor[(585), int32], %var_3278: Tensor[(3, 420), float32], %var_3297: Tensor[(7, 15, 10), float32], %var_3353: Tensor[(7, 15, 10), bool]) -> (Tensor[(25), float32], Tensor[(585), int32], Tensor[(585), int32], Tensor[(9, 4, 9), float64], Tensor[(2250), float32], Tensor[(5, ?, 10), uint16], Tensor[(50), float64], Tensor[(3, 420), float64], Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), float32], Tensor[(7, ?, 10), int16], Tensor[(7, 15, 10), int8], Tensor[(7, 15, 10), float32]) {
    %564 = cast(%var_3194, dtype="int32") /* ty=Tensor[(585), int32] */;
    %565 = reshape(%564, newshape=[585]) /* ty=Tensor[(585), int32] */;
    %566 = @func_2453(%565) /* ty=(Tensor[(12, 7, 3), float32], Tensor[(13, 15, 3), bool], Tensor[(585), int32]) */;
    %567 = @func_3065() /* ty=(Tensor[(9, 4, 9), float64], Tensor[(12, 7, 3), float32]) */;
    %568 = %567.0;
    %569 = cast(meta[relay.Constant][33] /* ty=Tensor[(9, 4, 9), float64] */, dtype="float64") /* ty=Tensor[(9, 4, 9), float64] */;
    %570 = shape_of(%568, dtype="int32") /* ty=Tensor[(3), int32] */;
    %571 = cast(%568, dtype="float64") /* ty=Tensor[(9, 4, 9), float64] */;
    %572 = dyn.reshape(%569, %570, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %573 = cast(meta[relay.Constant][35] /* ty=Tensor[(50), float64] */, dtype="float64") /* ty=Tensor[(50), float64] */;
    %574 = cast(meta[relay.Constant][34] /* ty=Tensor[(2250), float32] */, dtype="float32") /* ty=Tensor[(2250), float32] */;
    %575 = reshape(%574, newshape=[15, 10, 15]) /* ty=Tensor[(15, 10, 15), float32] */;
    %576 = @func_1537(%575) /* ty=(Tensor[(10, 12, 9), float64], Tensor[(50), float64], Tensor[(3, 420), float32], Tensor[(10, 12, 9), float64], Tensor[(15, 10, 15), bool]) */;
    %577 = %576.2;
    %578 = cast(%577, dtype="float32") /* ty=Tensor[(3, 420), float32] */;
    %579 = reshape(%573, newshape=[5, 1, 10]) /* ty=Tensor[(5, 1, 10), float64] */;
    %580 = reshape(%578, newshape=[1260]) /* ty=Tensor[(1260), float32] */;
    %581 = @func_649(%579, %580) /* ty=(Tensor[(14, 9, 10), float32], Tensor[(1260), float32], Tensor[(14, 9, 10), float32], Tensor[(14, 9, 10), float32], Tensor[(10, 12, 9), float64], Tensor[(1080), int32], Tensor[(10, 12, 9), int32], Tensor[(5, ?, 10), uint16], Tensor[(5, ?, 10), float32]) */;
    %582 = cast(%var_3278, dtype="float64") /* ty=Tensor[(3, 420), float64] */;
    %583 = shape_of(%577, dtype="int32") /* ty=Tensor[(2), int32] */;
    %584 = cast(%577, dtype="float64") /* ty=Tensor[(3, 420), float64] */;
    %585 = dyn.reshape(%582, %583, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %586 = @func_2423() /* ty=(Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), float32]) */;
    %587 = cast(%var_3194, dtype="int32") /* ty=Tensor[(585), int32] */;
    %588 = reshape(%587, newshape=[585]) /* ty=Tensor[(585), int32] */;
    %589 = @func_2453(%588) /* ty=(Tensor[(12, 7, 3), float32], Tensor[(13, 15, 3), bool], Tensor[(585), int32]) */;
    %590 = %566.2;
    %591 = cast(%590, dtype="int32") /* ty=Tensor[(585), int32] */;
    %592 = reshape(%591, newshape=[585]) /* ty=Tensor[(585), int32] */;
    %593 = @func_2453(%592) /* ty=(Tensor[(12, 7, 3), float32], Tensor[(13, 15, 3), bool], Tensor[(585), int32]) */;
    %594 = cast(%var_3193, dtype="float32") /* ty=Tensor[(25), float32] */;
    %595 = cast(%var_3194, dtype="int32") /* ty=Tensor[(585), int32] */;
    %596 = reshape(%594, newshape=[5, 5, 1]) /* ty=Tensor[(5, 5, 1), float32] */;
    %597 = reshape(%595, newshape=[65, 9]) /* ty=Tensor[(65, 9), int32] */;
    %598 = @func_1842(%596, %597) /* ty=(Tensor[(7, 1, 10), float64], Tensor[(7, 10), float64], Tensor[(13, 15, 3), bool], Tensor[(65, 9), int32], Tensor[(10, 12, 9), int32], Tensor[(1080), int32], Tensor[(5, 5, ?), float32], Tensor[(7, 1, 10), float64]) */;
    %599 = %598.0;
    %600 = cast(%599, dtype="float64") /* ty=Tensor[(7, 1, 10), float64] */;
    %601 = atan(%600) /* ty=Tensor[(7, 1, 10), float64] */;
    %602 = cast(%599, dtype="uint16") /* ty=Tensor[(7, 1, 10), uint16] */;
    %603 = shape_of(%601, dtype="int32") /* ty=Tensor[(3), int32] */;
    %604 = cast(%601, dtype="uint16") /* ty=Tensor[(7, 1, 10), uint16] */;
    %605 = dyn.reshape(%602, %603, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %606 = bitwise_or(%604, %605) /* ty=Tensor[(7, ?, 10), uint16] */;
    %607 = cast(%606, dtype="float32") /* ty=Tensor[(7, ?, 10), float32] */;
    %608 = acos(%607) /* ty=Tensor[(7, ?, 10), float32] */;
    %609 = cast(%608, dtype="int16") /* ty=Tensor[(7, ?, 10), int16] */;
    %610 = shape_of(%606, dtype="int32") /* ty=Tensor[(3), int32] */;
    %611 = cast(%606, dtype="int16") /* ty=Tensor[(7, ?, 10), int16] */;
    %612 = dyn.reshape(%609, %610, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %613 = cast(%608, dtype="uint64") /* ty=Tensor[(7, ?, 10), uint64] */;
    %614 = cast(%var_3297, dtype="uint64") /* ty=Tensor[(7, 15, 10), uint64] */;
    %615 = left_shift(%613, %614) /* ty=Tensor[(7, 15, 10), uint64] */;
    %616 = cast(%606, dtype="float32") /* ty=Tensor[(7, ?, 10), float32] */;
    %617 = shape_of(%601, dtype="int32") /* ty=Tensor[(3), int32] */;
    %618 = cast(%601, dtype="float32") /* ty=Tensor[(7, 1, 10), float32] */;
    %619 = dyn.reshape(%616, %617, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %620 = minimum(%618, %619) /* ty=Tensor[(7, ?, 10), float32] */;
    %621 = cast(%615, dtype="bool") /* ty=Tensor[(7, 15, 10), bool] */;
    %622 = cast(%620, dtype="bool") /* ty=Tensor[(7, ?, 10), bool] */;
    %623 = logical_or(%621, %622) /* ty=Tensor[(7, 15, 10), bool] */;
    %624 = cast(%var_3353, dtype="int8") /* ty=Tensor[(7, 15, 10), int8] */;
    %625 = shape_of(%623, dtype="int32") /* ty=Tensor[(3), int32] */;
    %626 = cast(%623, dtype="int8") /* ty=Tensor[(7, 15, 10), int8] */;
    %627 = dyn.reshape(%624, %625, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %628 = cast(%var_3297, dtype="float32") /* ty=Tensor[(7, 15, 10), float32] */;
    %629 = floor_mod(%571, %572) /* ty=Tensor[(9, 4, 9), float64] */;
    %630 = %581.7;
    %631 = floor_divide(%584, %585) /* ty=Tensor[(3, 420), float64] */;
    %632 = %586.0;
    %633 = %589.0;
    %634 = %593.0;
    %635 = bitwise_xor(%611, %612) /* ty=Tensor[(7, ?, 10), int16] */;
    %636 = add(%626, %627) /* ty=Tensor[(7, 15, 10), int8] */;
    %637 = sigmoid(%628) /* ty=Tensor[(7, 15, 10), float32] */;
    (%var_3193, %var_3194, %590, %629, meta[relay.Constant][34] /* ty=Tensor[(2250), float32] */, %630, meta[relay.Constant][35] /* ty=Tensor[(50), float64] */, %631, %632, %633, %634, %635, %636, %637)
  };
  %638(%var_3373, %var_3374, %var_3375, %var_3376, %var_3377) /* ty=(Tensor[(25), float32], Tensor[(585), int32], Tensor[(585), int32], Tensor[(9, 4, 9), float64], Tensor[(2250), float32], Tensor[(5, ?, 10), uint16], Tensor[(50), float64], Tensor[(3, 420), float64], Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), float32], Tensor[(7, ?, 10), int16], Tensor[(7, 15, 10), int8], Tensor[(7, 15, 10), float32]) */
}

def @func_6451() -> (Tensor[(12, 7, 3), float32],) {
  @func_6449() /* ty=(Tensor[(12, 7, 3), float32],) */
}

def @func_4368(%var_4366: Tensor[(9, 4, 9), float64], %var_4367: Tensor[(585), int32]) -> (Tensor[(9, 4, 9), uint32], Tensor[(585, 1), int32], Tensor[(585), int32]) {
  %650 = fn (%var_4331: Tensor[(9, 4, 9), float64], %var_4362: Tensor[(585), int32]) -> (Tensor[(9, 4, 9), uint32], Tensor[(585, 1), int32], Tensor[(585), int32]) {
    %639 = @func_3665() /* ty=(Tensor[(9, 4, 9), float64], Tensor[(585, 1), int32], Tensor[(585), int32]) */;
    %640 = %639.0;
    %641 = cast(%var_4331, dtype="uint32") /* ty=Tensor[(9, 4, 9), uint32] */;
    %642 = shape_of(%640, dtype="int32") /* ty=Tensor[(3), int32] */;
    %643 = cast(%640, dtype="uint32") /* ty=Tensor[(9, 4, 9), uint32] */;
    %644 = dyn.reshape(%641, %642, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %645 = cast(%var_4362, dtype="int32") /* ty=Tensor[(585), int32] */;
    %646 = reshape(%645, newshape=[585, 1]) /* ty=Tensor[(585, 1), int32] */;
    %647 = @func_2814(%646) /* ty=(Tensor[(12, 7, 3), int8], Tensor[(13, 15, 3), bool], Tensor[(585, 1), int32]) */;
    %648 = maximum(%643, %644) /* ty=Tensor[(9, 4, 9), uint32] */;
    %649 = %647.2;
    (%648, %649, %var_4362)
  };
  %650(%var_4366, %var_4367) /* ty=(Tensor[(9, 4, 9), uint32], Tensor[(585, 1), int32], Tensor[(585), int32]) */
}

def @func_3844() -> Tensor[(12, 7, 3), float32] {
  %652 = fn () -> Tensor[(12, 7, 3), float32] {
    %651 = @func_2423() /* ty=(Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), float32]) */;
    %651.1
  };
  %652() /* ty=Tensor[(12, 7, 3), float32] */
}

def @func_7420() -> (Tensor[(3, 10, 7), float64],) {
  %655 = fn () -> (Tensor[(3, 10, 7), float64],) {
    %653 = @func_5244() /* ty=(Tensor[(12, 7, 3), int8], Tensor[(3, 10, 7), float64], Tensor[(210, 1), float64]) */;
    %654 = %653.1;
    (%654,)
  };
  %655() /* ty=(Tensor[(3, 10, 7), float64],) */
}

def @func_4295() -> (Tensor[(12, 7, 3), float32],) {
  %656 = @func_4143() /* ty=Tensor[(12, 7, 3), float32] */;
  (%656,)
}

def @func_7357(%var_7356: Tensor[(585), int32]) -> (Tensor[(324), float64], Tensor[(585), int32], Tensor[(585), int32]) {
  %663 = fn (%var_7348: Tensor[(585), int32]) -> (Tensor[(324), float64], Tensor[(585), int32], Tensor[(585), int32]) {
    %657 = @func_5984() /* ty=(Tensor[(324), float64], Tensor[(12, 7, 3), float32], Tensor[(9, 4, 9), float64], Tensor[(12, 7, 3), float32]) */;
    %658 = cast(%var_7348, dtype="int32") /* ty=Tensor[(585), int32] */;
    %659 = reshape(%658, newshape=[585]) /* ty=Tensor[(585), int32] */;
    %660 = @func_2453(%659) /* ty=(Tensor[(12, 7, 3), float32], Tensor[(13, 15, 3), bool], Tensor[(585), int32]) */;
    %661 = %657.0;
    %662 = %660.2;
    (%661, %662, %var_7348)
  };
  %663(%var_7356) /* ty=(Tensor[(324), float64], Tensor[(585), int32], Tensor[(585), int32]) */
}

def @func_6735(%var_6733: int64, %var_6734: Tensor[(5, 4, 3), int64]) -> (Tensor[(5, 4, 3), bool], Tensor[(5, 4, 3), uint64]) {
  %670 = fn (%var_6724: int64, %var_6725: Tensor[(5, 4, 3), int64]) -> (Tensor[(5, 4, 3), bool], Tensor[(5, 4, 3), uint64]) {
    %664 = cast(%var_6724, dtype="bool") /* ty=bool */;
    %665 = cast(%var_6725, dtype="bool") /* ty=Tensor[(5, 4, 3), bool] */;
    %666 = cast(%var_6724, dtype="uint64") /* ty=uint64 */;
    %667 = cast(%var_6725, dtype="uint64") /* ty=Tensor[(5, 4, 3), uint64] */;
    %668 = greater(%664, %665) /* ty=Tensor[(5, 4, 3), bool] */;
    %669 = minimum(%666, %667) /* ty=Tensor[(5, 4, 3), uint64] */;
    (%668, %669)
  };
  %670(%var_6733, %var_6734) /* ty=(Tensor[(5, 4, 3), bool], Tensor[(5, 4, 3), uint64]) */
}

def @func_7176(%var_7174: Tensor[(585, 10), float32], %var_7175: Tensor[(585, 10), uint8]) -> (Tensor[(585, 10), int16],) {
  %685 = fn (%var_7158: Tensor[(585, 10), float32], %var_7164: Tensor[(585, 10), uint8]) -> (Tensor[(585, 10), int16],) {
    %671 = @func_3665() /* ty=(Tensor[(9, 4, 9), float64], Tensor[(585, 1), int32], Tensor[(585), int32]) */;
    %672 = %671.1;
    %673 = cast(%672, dtype="float64") /* ty=Tensor[(585, 1), float64] */;
    %674 = erf(%673) /* ty=Tensor[(585, 1), float64] */;
    %675 = cast(%674, dtype="float32") /* ty=Tensor[(585, 1), float32] */;
    %676 = tan(%675) /* ty=Tensor[(585, 1), float32] */;
    %677 = cast(%676, dtype="uint8") /* ty=Tensor[(585, 1), uint8] */;
    %678 = cast(%var_7158, dtype="uint8") /* ty=Tensor[(585, 10), uint8] */;
    %679 = bitwise_or(%677, %678) /* ty=Tensor[(585, 10), uint8] */;
    %680 = cast(%var_7164, dtype="int16") /* ty=Tensor[(585, 10), int16] */;
    %681 = shape_of(%679, dtype="int32") /* ty=Tensor[(2), int32] */;
    %682 = cast(%679, dtype="int16") /* ty=Tensor[(585, 10), int16] */;
    %683 = dyn.reshape(%680, %681, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
    %684 = subtract(%682, %683) /* ty=Tensor[(585, 10), int16] */;
    (%684,)
  };
  %685(%var_7174, %var_7175) /* ty=(Tensor[(585, 10), int16],) */
}

def @func_5043() -> (Tensor[(9, 4, 9), float64],) {
  @func_5041() /* ty=(Tensor[(9, 4, 9), float64],) */
}

def @func_4297() -> (Tensor[(12, 7, 3), float32],) {
  @func_4295() /* ty=(Tensor[(12, 7, 3), float32],) */
}

def @func_5935() -> (Tensor[(12, 7, 3), float64], Tensor[(7, 1, 10), float64], Tensor[(70), float64]) {
  @func_5933() /* ty=(Tensor[(12, 7, 3), float64], Tensor[(7, 1, 10), float64], Tensor[(70), float64]) */
}

def @func_4586(%var_4577: Tensor[(4, 10, 5), float64]) -> (Tensor[(4, 10, 5), float64],) {
  %686 = cast(%var_4577, dtype="float64") /* ty=Tensor[(4, 10, 5), float64] */;
  %687 = log(%686) /* ty=Tensor[(4, 10, 5), float64] */;
  (%687,)
}

def @func_2703(%var_2676: Tensor[(12, 7, 3), float32]) -> (Tensor[(12, 7, 3), float32], Tensor[(1, 6, 3), float64], Tensor[(3, 6), float64]) {
  %688 = @func_2568() /* ty=(Tensor[(12, 7, 3), float64], Tensor[(12, 7, 3), float32]) */;
  %689 = %688.1;
  %690 = cast(%var_2676, dtype="uint16") /* ty=Tensor[(12, 7, 3), uint16] */;
  %691 = shape_of(%689, dtype="int32") /* ty=Tensor[(3), int32] */;
  %692 = cast(%689, dtype="uint16") /* ty=Tensor[(12, 7, 3), uint16] */;
  %693 = dyn.reshape(%690, %691, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %694 = right_shift(%692, %693) /* ty=Tensor[(12, 7, 3), uint16] */;
  %695 = cast(%694, dtype="float32") /* ty=Tensor[(12, 7, 3), float32] */;
  %696 = cast(meta[relay.Constant][36] /* ty=Tensor[(3, 6), float64] */, dtype="float64") /* ty=Tensor[(3, 6), float64] */;
  %697 = reshape(%696, newshape=[1, 6, 3]) /* ty=Tensor[(1, 6, 3), float64] */;
  %698 = log(%695) /* ty=Tensor[(12, 7, 3), float32] */;
  %699 = @func_1719(%697) /* ty=Tensor[(1, 6, 3), float64] */;
  (%698, %699, meta[relay.Constant][36] /* ty=Tensor[(3, 6), float64] */)
}

def @func_3877() -> (Tensor[(12, 7, 3), int8], Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), float64]) {
  @func_3875() /* ty=(Tensor[(12, 7, 3), int8], Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), float64]) */
}

def @func_5097(%var_5095: Tensor[(10, 5, 11), bool]) -> (Tensor[(10, 5, 11), bool],) {
  @func_5094(%var_5095) /* ty=(Tensor[(10, 5, 11), bool],) */
}

def @func_5094(%var_5079: Tensor[(10, 5, 11), bool]) -> (Tensor[(10, 5, 11), bool],) {
  %700 = cast(%var_5079, dtype="bool") /* ty=Tensor[(10, 5, 11), bool] */;
  %701 = shape_of(meta[relay.Constant][37] /* ty=Tensor[(10, 5, 11), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %702 = cast(meta[relay.Constant][37] /* ty=Tensor[(10, 5, 11), bool] */, dtype="bool") /* ty=Tensor[(10, 5, 11), bool] */;
  %703 = dyn.reshape(%700, %701, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %704 = logical_and(%702, %703) /* ty=Tensor[(10, 5, 11), bool] */;
  (%704,)
}

def @func_6764(%var_6755: Tensor[(324), float64]) -> (Tensor[(585, 1), int32], Tensor[(9, 4, 9), uint32], Tensor[(324), float64], Tensor[(12, 7, 3), float32]) {
  %705 = @func_6710() /* ty=(Tensor[(585, 1), int32],) */;
  %706 = cast(%var_6755, dtype="float64") /* ty=Tensor[(324), float64] */;
  %707 = %705.0;
  %708 = cast(%707, dtype="int32") /* ty=Tensor[(585, 1), int32] */;
  %709 = reshape(%706, newshape=[9, 4, 9]) /* ty=Tensor[(9, 4, 9), float64] */;
  %710 = reshape(%708, newshape=[585]) /* ty=Tensor[(585), int32] */;
  %711 = @func_4365(%709, %710) /* ty=(Tensor[(9, 4, 9), uint32], Tensor[(585, 1), int32], Tensor[(585), int32]) */;
  %712 = @func_5302() /* ty=(Tensor[(12, 7, 3), float32],) */;
  %713 = %711.0;
  %714 = %712.0;
  (%707, %713, %var_6755, %714)
}

def @func_6850() -> (Tensor[(12, 7, 3), float32], Tensor[(1, 550), bool], Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), float32], Tensor[(10, 5, 11), float32], Tensor[(12, 7, 3), float32]) {
  %729 = fn () -> (Tensor[(12, 7, 3), float32], Tensor[(1, 550), bool], Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), float32], Tensor[(10, 5, 11), float32], Tensor[(12, 7, 3), float32]) {
    %715 = @func_4295() /* ty=(Tensor[(12, 7, 3), float32],) */;
    %716 = @func_3065() /* ty=(Tensor[(9, 4, 9), float64], Tensor[(12, 7, 3), float32]) */;
    %717 = @func_6449() /* ty=(Tensor[(12, 7, 3), float32],) */;
    %718 = cast(meta[relay.Constant][38] /* ty=Tensor[(1, 550), bool] */, dtype="bool") /* ty=Tensor[(1, 550), bool] */;
    %719 = reshape(%718, newshape=[10, 5, 11]) /* ty=Tensor[(10, 5, 11), bool] */;
    %720 = @func_5094(%719) /* ty=(Tensor[(10, 5, 11), bool],) */;
    %721 = %720.0;
    %722 = cast(%721, dtype="float32") /* ty=Tensor[(10, 5, 11), float32] */;
    %723 = @func_6388() /* ty=(Tensor[(12, 7, 3), float32],) */;
    %724 = %715.0;
    %725 = %716.1;
    %726 = %717.0;
    %727 = cosh(%722) /* ty=Tensor[(10, 5, 11), float32] */;
    %728 = %723.0;
    (%724, meta[relay.Constant][38] /* ty=Tensor[(1, 550), bool] */, %725, %726, %727, %728)
  };
  %729() /* ty=(Tensor[(12, 7, 3), float32], Tensor[(1, 550), bool], Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), float32], Tensor[(10, 5, 11), float32], Tensor[(12, 7, 3), float32]) */
}

def @func_4809(%var_4807: Tensor[(6, 14, 8), float32]) -> Tensor[(6, 14, 8), float32] {
  @func_4806(%var_4807) /* ty=Tensor[(6, 14, 8), float32] */
}

def @func_2568() -> (Tensor[(12, 7, 3), float64], Tensor[(12, 7, 3), float32]) {
  %730 = @func_2423() /* ty=(Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), float32]) */;
  %731 = %730.0;
  %732 = cast(%731, dtype="float64") /* ty=Tensor[(12, 7, 3), float64] */;
  %733 = cast(%731, dtype="float32") /* ty=Tensor[(12, 7, 3), float32] */;
  %734 = sinh(%732) /* ty=Tensor[(12, 7, 3), float64] */;
  %735 = atanh(%733) /* ty=Tensor[(12, 7, 3), float32] */;
  (%734, %735)
}

def @func_3666() -> (Tensor[(9, 4, 9), float64], Tensor[(585, 1), int32], Tensor[(585), int32]) {
  %742 = fn () -> (Tensor[(9, 4, 9), float64], Tensor[(585, 1), int32], Tensor[(585), int32]) {
    %736 = @func_3065() /* ty=(Tensor[(9, 4, 9), float64], Tensor[(12, 7, 3), float32]) */;
    %737 = cast(meta[relay.Constant][39] /* ty=Tensor[(585), int32] */, dtype="int32") /* ty=Tensor[(585), int32] */;
    %738 = reshape(%737, newshape=[585, 1]) /* ty=Tensor[(585, 1), int32] */;
    %739 = @func_2814(%738) /* ty=(Tensor[(12, 7, 3), int8], Tensor[(13, 15, 3), bool], Tensor[(585, 1), int32]) */;
    %740 = %736.0;
    %741 = %739.2;
    (%740, %741, meta[relay.Constant][39] /* ty=Tensor[(585), int32] */)
  };
  %742() /* ty=(Tensor[(9, 4, 9), float64], Tensor[(585, 1), int32], Tensor[(585), int32]) */
}

def @func_6710() -> (Tensor[(585, 1), int32],) {
  %743 = @func_3665() /* ty=(Tensor[(9, 4, 9), float64], Tensor[(585, 1), int32], Tensor[(585), int32]) */;
  %744 = %743.1;
  (%744,)
}

def @main(%var_8045: Tensor[(1, 12, 1), int8]) -> (Tensor[(1, 12, 1), int8], Tensor[(12, 7, 3), float32], Tensor[(?, 12, ?), bool], Tensor[(?, 12, ?), bool]) {
  %745 = cast(meta[relay.Constant][40] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %746 = cast(%var_8045, dtype="int8") /* ty=Tensor[(1, 12, 1), int8] */;
  %747 = @func_2425() /* ty=(Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), float32]) */;
  %748 = cast(%var_8045, dtype="float32") /* ty=Tensor[(1, 12, 1), float32] */;
  %749 = log2(%748) /* ty=Tensor[(1, 12, 1), float32] */;
  %750 = cast(%749, dtype="bool") /* ty=Tensor[(1, 12, 1), bool] */;
  %751 = shape_of(%var_8045, dtype="int32") /* ty=Tensor[(3), int32] */;
  %752 = cast(%var_8045, dtype="bool") /* ty=Tensor[(1, 12, 1), bool] */;
  %753 = dyn.reshape(%750, %751, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %754 = cast(%749, dtype="bool") /* ty=Tensor[(1, 12, 1), bool] */;
  %755 = shape_of(%var_8045, dtype="int32") /* ty=Tensor[(3), int32] */;
  %756 = cast(%var_8045, dtype="bool") /* ty=Tensor[(1, 12, 1), bool] */;
  %757 = dyn.reshape(%754, %755, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %758 = left_shift(%745, %746) /* ty=Tensor[(1, 12, 1), int8] */;
  %759 = %747.1;
  %760 = greater(%752, %753) /* ty=Tensor[(?, 12, ?), bool] */;
  %761 = greater_equal(%756, %757) /* ty=Tensor[(?, 12, ?), bool] */;
  (%758, %759, %760, %761)
}

def @func_5984() -> (Tensor[(324), float64], Tensor[(12, 7, 3), float32], Tensor[(9, 4, 9), float64], Tensor[(12, 7, 3), float32]) {
  %762 = @func_5321() /* ty=(Tensor[(324), float64],) */;
  %763 = @func_2745() /* ty=(Tensor[(12, 7, 3), float64], Tensor[(9, 4, 9), float64], Tensor[(324), float64]) */;
  %764 = @func_3483() /* ty=(Tensor[(12, 7, 3), float32],) */;
  %765 = %762.0;
  %766 = @func_5918() /* ty=Tensor[(12, 7, 3), float32] */;
  %767 = %763.1;
  %768 = %764.0;
  (%765, %766, %767, %768)
}

def @func_1540(%var_1538: Tensor[(15, 10, 15), float32]) -> (Tensor[(10, 12, 9), float64], Tensor[(50), float64], Tensor[(3, 420), float32], Tensor[(10, 12, 9), float64], Tensor[(15, 10, 15), bool]) {
  @func_1537(%var_1538) /* ty=(Tensor[(10, 12, 9), float64], Tensor[(50), float64], Tensor[(3, 420), float32], Tensor[(10, 12, 9), float64], Tensor[(15, 10, 15), bool]) */
}

def @func_6008() -> (Tensor[(12, 7, 3), float32],) {
  %769 = @func_5918() /* ty=Tensor[(12, 7, 3), float32] */;
  (%769,)
}

def @func_2747() -> (Tensor[(12, 7, 3), float64], Tensor[(9, 4, 9), float64], Tensor[(324), float64]) {
  @func_2745() /* ty=(Tensor[(12, 7, 3), float64], Tensor[(9, 4, 9), float64], Tensor[(324), float64]) */
}

def @func_1721(%var_1720: Tensor[(1, 6, 3), float64]) -> Tensor[(1, 6, 3), float64] {
  %771 = fn (%var_1711: Tensor[(1, 6, 3), float64]) -> Tensor[(1, 6, 3), float64] {
    %770 = cast(%var_1711, dtype="float64") /* ty=Tensor[(1, 6, 3), float64] */;
    tan(%770) /* ty=Tensor[(1, 6, 3), float64] */
  };
  %771(%var_1720) /* ty=Tensor[(1, 6, 3), float64] */
}

def @func_2836(%var_2824: Tensor[(3, 1, 7), float64]) -> (Tensor[(3, 1, 7), float64], Tensor[(3, 1, 7), float64]) {
  %772 = cast(%var_2824, dtype="float64") /* ty=Tensor[(3, 1, 7), float64] */;
  %773 = cast(%var_2824, dtype="float64") /* ty=Tensor[(3, 1, 7), float64] */;
  %774 = atan(%772) /* ty=Tensor[(3, 1, 7), float64] */;
  %775 = cos(%773) /* ty=Tensor[(3, 1, 7), float64] */;
  (%774, %775)
}

def @func_3981(%var_3975: Tensor[(3, 10, 7), float64]) -> (Tensor[(3, 10, 7), float64],) {
  %776 = cast(%var_3975, dtype="float64") /* ty=Tensor[(3, 10, 7), float64] */;
  %777 = sqrt(%776) /* ty=Tensor[(3, 10, 7), float64] */;
  (%777,)
}

def @func_4867(%var_4865: Tensor[(3, 10, 8), float64]) -> Tensor[(3, 10, 8), float64] {
  @func_4864(%var_4865) /* ty=Tensor[(3, 10, 8), float64] */
}

def @func_7737(%var_7736: Tensor[(7, 13, 10), uint32]) -> Tensor[(7, 13, 10), uint32] {
  %782 = fn (%var_7731: Tensor[(7, 13, 10), uint32]) -> Tensor[(7, 13, 10), uint32] {
    %778 = cast(%var_7731, dtype="uint32") /* ty=Tensor[(7, 13, 10), uint32] */;
    %779 = shape_of(meta[relay.Constant][41] /* ty=Tensor[(7, 13, 10), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %780 = cast(meta[relay.Constant][41] /* ty=Tensor[(7, 13, 10), uint32] */, dtype="uint32") /* ty=Tensor[(7, 13, 10), uint32] */;
    %781 = dyn.reshape(%778, %779, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    minimum(%780, %781) /* ty=Tensor[(7, 13, 10), uint32] */
  };
  %782(%var_7736) /* ty=Tensor[(7, 13, 10), uint32] */
}

def @func_4589(%var_4587: Tensor[(4, 10, 5), float64]) -> (Tensor[(4, 10, 5), float64],) {
  @func_4586(%var_4587) /* ty=(Tensor[(4, 10, 5), float64],) */
}

def @func_521(%var_500: Tensor[(10, 12, 9), int32], %var_501: Tensor[(10, 12, 9), int32]) -> (Tensor[(10, 12, 9), int32], Tensor[(10, 12, 9), float64]) {
  %783 = cast(%var_501, dtype="int32") /* ty=Tensor[(10, 12, 9), int32] */;
  %784 = shape_of(%var_500, dtype="int32") /* ty=Tensor[(3), int32] */;
  %785 = cast(%var_500, dtype="int32") /* ty=Tensor[(10, 12, 9), int32] */;
  %786 = dyn.reshape(%783, %784, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %787 = cast(%var_500, dtype="float64") /* ty=Tensor[(10, 12, 9), float64] */;
  %788 = left_shift(%785, %786) /* ty=Tensor[(10, 12, 9), int32] */;
  %789 = exp(%787) /* ty=Tensor[(10, 12, 9), float64] */;
  (%788, %789)
}

def @func_5815() -> (Tensor[(9, 4, 9), float64], Tensor[(324), float64], Tensor[(350, 3), float32], Tensor[(25), float32], Tensor[(585), int32]) {
  %800 = fn () -> (Tensor[(9, 4, 9), float64], Tensor[(324), float64], Tensor[(350, 3), float32], Tensor[(25), float32], Tensor[(585), int32]) {
    %790 = @func_5041() /* ty=(Tensor[(9, 4, 9), float64],) */;
    %791 = @func_2745() /* ty=(Tensor[(12, 7, 3), float64], Tensor[(9, 4, 9), float64], Tensor[(324), float64]) */;
    %792 = cast(meta[relay.Constant][42] /* ty=Tensor[(25), float32] */, dtype="float32") /* ty=Tensor[(25), float32] */;
    %793 = cast(meta[relay.Constant][43] /* ty=Tensor[(585), int32] */, dtype="int32") /* ty=Tensor[(585), int32] */;
    %794 = reshape(%792, newshape=[25]) /* ty=Tensor[(25), float32] */;
    %795 = reshape(%793, newshape=[585]) /* ty=Tensor[(585), int32] */;
    %796 = @func_4420(%794, %795) /* ty=(Tensor[(12, 7, 3), float32], Tensor[(7, ?, 10), int16], Tensor[(25), float32], Tensor[(585), int32], Tensor[(1260), float32], Tensor[(350, 3), float32], Tensor[(14, 9, 10), float32]) */;
    %797 = %790.0;
    %798 = %791.2;
    %799 = %796.5;
    (%797, %798, %799, meta[relay.Constant][42] /* ty=Tensor[(25), float32] */, meta[relay.Constant][43] /* ty=Tensor[(585), int32] */)
  };
  %800() /* ty=(Tensor[(9, 4, 9), float64], Tensor[(324), float64], Tensor[(350, 3), float32], Tensor[(25), float32], Tensor[(585), int32]) */
}

def @func_4864(%var_4849: Tensor[(3, 10, 8), float64]) -> Tensor[(3, 10, 8), float64] {
  %801 = cast(%var_4849, dtype="float64") /* ty=Tensor[(3, 10, 8), float64] */;
  rsqrt(%801) /* ty=Tensor[(3, 10, 8), float64] */
}

def @func_3615(%var_3597: Tensor[(324), float64]) -> (Tensor[(324), bool], Tensor[(3, 1, 7), float64], Tensor[(336), uint8], Tensor[(21, 1), float64]) {
  %802 = @func_2745() /* ty=(Tensor[(12, 7, 3), float64], Tensor[(9, 4, 9), float64], Tensor[(324), float64]) */;
  %803 = %802.2;
  %804 = cast(%var_3597, dtype="bool") /* ty=Tensor[(324), bool] */;
  %805 = shape_of(%803, dtype="int32") /* ty=Tensor[(1), int32] */;
  %806 = cast(%803, dtype="bool") /* ty=Tensor[(324), bool] */;
  %807 = dyn.reshape(%804, %805, newshape=[]) /* ty=Tensor[(?), bool] */;
  %808 = cast(meta[relay.Constant][44] /* ty=Tensor[(336), uint8] */, dtype="uint8") /* ty=Tensor[(336), uint8] */;
  %809 = cast(meta[relay.Constant][44] /* ty=Tensor[(336), uint8] */, dtype="uint8") /* ty=Tensor[(336), uint8] */;
  %810 = cast(meta[relay.Constant][45] /* ty=Tensor[(21, 1), float64] */, dtype="float64") /* ty=Tensor[(21, 1), float64] */;
  %811 = reshape(%808, newshape=[6, 14, 4]) /* ty=Tensor[(6, 14, 4), uint8] */;
  %812 = reshape(%809, newshape=[6, 14, 4]) /* ty=Tensor[(6, 14, 4), uint8] */;
  %813 = reshape(%810, newshape=[21]) /* ty=Tensor[(21), float64] */;
  %814 = @func_3175(%811, %812, %813) /* ty=(Tensor[(6, 14, 4), uint8], Tensor[(3, 1, 7), float64], Tensor[(3, 1, 7), float64], Tensor[(21), float64]) */;
  %815 = not_equal(%806, %807) /* ty=Tensor[(324), bool] */;
  %816 = %814.1;
  (%815, %816, meta[relay.Constant][44] /* ty=Tensor[(336), uint8] */, meta[relay.Constant][45] /* ty=Tensor[(21, 1), float64] */)
}

def @func_3950() -> (Tensor[(324), float64],) {
  @func_3948() /* ty=(Tensor[(324), float64],) */
}

def @func_5897() -> (Tensor[(12, 7, 3), float32],) {
  @func_5895() /* ty=(Tensor[(12, 7, 3), float32],) */
}

def @func_5920() -> Tensor[(12, 7, 3), float32] {
  @func_5918() /* ty=Tensor[(12, 7, 3), float32] */
}

def @func_5772(%var_5770: Tensor[(2250), float32]) -> (Tensor[(12, 7, 3), int8], Tensor[(9, 4, 9), float64], Tensor[(12, 7, 3), float32], Tensor[(2250), float32], Tensor[(5, 5), float32], Tensor[(10, 7, 8), uint64]) {
  @func_5769(%var_5770) /* ty=(Tensor[(12, 7, 3), int8], Tensor[(9, 4, 9), float64], Tensor[(12, 7, 3), float32], Tensor[(2250), float32], Tensor[(5, 5), float32], Tensor[(10, 7, 8), uint64]) */
}

def @func_5918() -> Tensor[(12, 7, 3), float32] {
  %817 = @func_5302() /* ty=(Tensor[(12, 7, 3), float32],) */;
  %817.0
}

def @func_4806(%var_4785: Tensor[(6, 14, 8), float32]) -> Tensor[(6, 14, 8), float32] {
  %818 = cast(%var_4785, dtype="float32") /* ty=Tensor[(6, 14, 8), float32] */;
  tan(%818) /* ty=Tensor[(6, 14, 8), float32] */
}

def @func_1690(%var_1680: Tensor[(13, 15, 3), int32], %var_1681: Tensor[(13, 15, 3), int32]) -> (Tensor[(13, 15, 3), bool],) {
  %819 = cast(%var_1681, dtype="bool") /* ty=Tensor[(13, 15, 3), bool] */;
  %820 = shape_of(%var_1680, dtype="int32") /* ty=Tensor[(3), int32] */;
  %821 = cast(%var_1680, dtype="bool") /* ty=Tensor[(13, 15, 3), bool] */;
  %822 = dyn.reshape(%819, %820, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %823 = greater_equal(%821, %822) /* ty=Tensor[(13, 15, 3), bool] */;
  (%823,)
}

def @func_5769(%var_5761: Tensor[(2250), float32]) -> (Tensor[(12, 7, 3), int8], Tensor[(9, 4, 9), float64], Tensor[(12, 7, 3), float32], Tensor[(2250), float32], Tensor[(5, 5), float32], Tensor[(10, 7, 8), uint64]) {
  %824 = @func_2586() /* ty=(Tensor[(12, 7, 3), int8],) */;
  %825 = @func_3065() /* ty=(Tensor[(9, 4, 9), float64], Tensor[(12, 7, 3), float32]) */;
  %826 = cast(%var_5761, dtype="float32") /* ty=Tensor[(2250), float32] */;
  %827 = cast(meta[relay.Constant][46] /* ty=Tensor[(5, 5), float32] */, dtype="float32") /* ty=Tensor[(5, 5), float32] */;
  %828 = reshape(%826, newshape=[15, 150]) /* ty=Tensor[(15, 150), float32] */;
  %829 = reshape(%827, newshape=[25]) /* ty=Tensor[(25), float32] */;
  %830 = @func_3022(%828, %829) /* ty=(Tensor[(12, 7, 3), float32], Tensor[(585), int32], Tensor[(15, 150), int32], Tensor[(7, 10), float64], Tensor[(25), float32], Tensor[(15, 150), bool]) */;
  %831 = @func_3737() /* ty=(Tensor[(12, 7, 3), float32], Tensor[(10, 7, 8), uint64], Tensor[(560), uint64]) */;
  %832 = %824.0;
  %833 = %825.0;
  %834 = %830.0;
  %835 = %831.1;
  (%832, %833, %834, %var_5761, meta[relay.Constant][46] /* ty=Tensor[(5, 5), float32] */, %835)
}

def @func_7338(%var_7336: Tensor[(6, 4, 11), int16]) -> (Tensor[(6, 4, 11), int16], Tensor[(1260), float32], Tensor[(1260), float32]) {
  @func_7335(%var_7336) /* ty=(Tensor[(6, 4, 11), int16], Tensor[(1260), float32], Tensor[(1260), float32]) */
}

def @func_7486() -> (Tensor[(9, 4, 9), float64],) {
  %838 = fn () -> (Tensor[(9, 4, 9), float64],) {
    %836 = @func_3665() /* ty=(Tensor[(9, 4, 9), float64], Tensor[(585, 1), int32], Tensor[(585), int32]) */;
    %837 = %836.0;
    (%837,)
  };
  %838() /* ty=(Tensor[(9, 4, 9), float64],) */
}

def @func_6019() -> Tensor[(324), float64] {
  @func_6017() /* ty=Tensor[(324), float64] */
}

def @func_3180(%var_3177: Tensor[(6, 14, 4), uint8], %var_3178: Tensor[(6, 14, 4), uint8], %var_3179: Tensor[(21), float64]) -> (Tensor[(6, 14, 4), uint8], Tensor[(3, 1, 7), float64], Tensor[(3, 1, 7), float64], Tensor[(21), float64]) {
  @func_3175(%var_3177, %var_3178, %var_3179) /* ty=(Tensor[(6, 14, 4), uint8], Tensor[(3, 1, 7), float64], Tensor[(3, 1, 7), float64], Tensor[(21), float64]) */
}

def @func_6540() -> (Tensor[(12, 7, 3), float64],) {
  %839 = @func_4020() /* ty=(Tensor[(12, 7, 3), float64],) */;
  %840 = %839.0;
  (%840,)
}

def @func_6510() -> (Tensor[(12, 7, 3), float32],) {
  @func_6508() /* ty=(Tensor[(12, 7, 3), float32],) */
}

def @func_2423() -> (Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), float32]) {
  %841 = cast(meta[relay.Constant][47] /* ty=Tensor[(12, 7, 3), float32] */, dtype="float32") /* ty=Tensor[(12, 7, 3), float32] */;
  %842 = cast(meta[relay.Constant][47] /* ty=Tensor[(12, 7, 3), float32] */, dtype="float32") /* ty=Tensor[(12, 7, 3), float32] */;
  %843 = asin(%842) /* ty=Tensor[(12, 7, 3), float32] */;
  %844 = cast(meta[relay.Constant][48] /* ty=Tensor[(12, 7, 3), float32] */, dtype="float32") /* ty=Tensor[(12, 7, 3), float32] */;
  %845 = shape_of(%843, dtype="int32") /* ty=Tensor[(3), int32] */;
  %846 = cast(%843, dtype="float32") /* ty=Tensor[(12, 7, 3), float32] */;
  %847 = dyn.reshape(%844, %845, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %848 = cos(%841) /* ty=Tensor[(12, 7, 3), float32] */;
  %849 = minimum(%846, %847) /* ty=Tensor[(12, 7, 3), float32] */;
  (%848, %849)
}

def @func_4743() -> (Tensor[(12, 7, 3), float64],) {
  @func_4741() /* ty=(Tensor[(12, 7, 3), float64],) */
}

def @func_4021() -> (Tensor[(12, 7, 3), float64],) {
  %852 = fn () -> (Tensor[(12, 7, 3), float64],) {
    %850 = @func_2568() /* ty=(Tensor[(12, 7, 3), float64], Tensor[(12, 7, 3), float32]) */;
    %851 = %850.0;
    (%851,)
  };
  %852() /* ty=(Tensor[(12, 7, 3), float64],) */
}

def @func_3460(%var_3458: Tensor[(25), float32], %var_3459: Tensor[(8, 70), uint64]) -> (Tensor[(12, 7, 3), int8], Tensor[(585), int32], Tensor[(2250), float32], Tensor[(25), float32], Tensor[(12, 7, 3), float64], Tensor[(10, 7, 8), uint64], Tensor[(8, 70), uint64], Tensor[(12, 7, 3), float32], Tensor[(9, 4, 9), float64]) {
  %873 = fn (%var_3406: Tensor[(25), float32], %var_3428: Tensor[(8, 70), uint64]) -> (Tensor[(12, 7, 3), int8], Tensor[(585), int32], Tensor[(2250), float32], Tensor[(25), float32], Tensor[(12, 7, 3), float64], Tensor[(10, 7, 8), uint64], Tensor[(8, 70), uint64], Tensor[(12, 7, 3), float32], Tensor[(9, 4, 9), float64]) {
    %853 = @func_2586() /* ty=(Tensor[(12, 7, 3), int8],) */;
    %854 = cast(meta[relay.Constant][49] /* ty=Tensor[(2250), float32] */, dtype="float32") /* ty=Tensor[(2250), float32] */;
    %855 = cast(%var_3406, dtype="float32") /* ty=Tensor[(25), float32] */;
    %856 = reshape(%854, newshape=[15, 150]) /* ty=Tensor[(15, 150), float32] */;
    %857 = reshape(%855, newshape=[25]) /* ty=Tensor[(25), float32] */;
    %858 = @func_3022(%856, %857) /* ty=(Tensor[(12, 7, 3), float32], Tensor[(585), int32], Tensor[(15, 150), int32], Tensor[(7, 10), float64], Tensor[(25), float32], Tensor[(15, 150), bool]) */;
    %859 = @func_2745() /* ty=(Tensor[(12, 7, 3), float64], Tensor[(9, 4, 9), float64], Tensor[(324), float64]) */;
    %860 = cast(%var_3428, dtype="uint64") /* ty=Tensor[(8, 70), uint64] */;
    %861 = cast(%var_3428, dtype="uint64") /* ty=Tensor[(8, 70), uint64] */;
    %862 = reshape(%860, newshape=[10, 7, 8]) /* ty=Tensor[(10, 7, 8), uint64] */;
    %863 = reshape(%861, newshape=[10, 7, 8]) /* ty=Tensor[(10, 7, 8), uint64] */;
    %864 = @func_1960(%862, %863) /* ty=(Tensor[(10, 7, 8), uint64], Tensor[(10, 7, 8), bool]) */;
    %865 = @func_2423() /* ty=(Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), float32]) */;
    %866 = @func_2745() /* ty=(Tensor[(12, 7, 3), float64], Tensor[(9, 4, 9), float64], Tensor[(324), float64]) */;
    %867 = %853.0;
    %868 = %858.1;
    %869 = %859.0;
    %870 = %864.0;
    %871 = %865.1;
    %872 = %866.1;
    (%867, %868, meta[relay.Constant][49] /* ty=Tensor[(2250), float32] */, %var_3406, %869, %870, %var_3428, %871, %872)
  };
  %873(%var_3458, %var_3459) /* ty=(Tensor[(12, 7, 3), int8], Tensor[(585), int32], Tensor[(2250), float32], Tensor[(25), float32], Tensor[(12, 7, 3), float64], Tensor[(10, 7, 8), uint64], Tensor[(8, 70), uint64], Tensor[(12, 7, 3), float32], Tensor[(9, 4, 9), float64]) */
}

def @func_6056() -> (Tensor[(324), float64], Tensor[(10, 12, 9), int32], Tensor[(1080), int32]) {
  @func_6054() /* ty=(Tensor[(324), float64], Tensor[(10, 12, 9), int32], Tensor[(1080), int32]) */
}

def @func_4145() -> Tensor[(12, 7, 3), float32] {
  @func_4143() /* ty=Tensor[(12, 7, 3), float32] */
}

def @func_7915() -> (Tensor[(12, 7, 3), float32],) {
  @func_7913() /* ty=(Tensor[(12, 7, 3), float32],) */
}

def @func_1845(%var_1843: Tensor[(5, 5, 1), float32], %var_1844: Tensor[(65, 9), int32]) -> (Tensor[(7, 1, 10), float64], Tensor[(7, 10), float64], Tensor[(13, 15, 3), bool], Tensor[(65, 9), int32], Tensor[(10, 12, 9), int32], Tensor[(1080), int32], Tensor[(5, 5, ?), float32], Tensor[(7, 1, 10), float64]) {
  %903 = fn (%var_1807: Tensor[(5, 5, 1), float32], %var_1815: Tensor[(65, 9), int32]) -> (Tensor[(7, 1, 10), float64], Tensor[(7, 10), float64], Tensor[(13, 15, 3), bool], Tensor[(65, 9), int32], Tensor[(10, 12, 9), int32], Tensor[(1080), int32], Tensor[(5, 5, ?), float32], Tensor[(7, 1, 10), float64]) {
    %874 = cast(meta[relay.Constant][50] /* ty=Tensor[(7, 10), float64] */, dtype="float64") /* ty=Tensor[(7, 10), float64] */;
    %875 = reshape(%874, newshape=[7, 1, 10]) /* ty=Tensor[(7, 1, 10), float64] */;
    %876 = @func_871(%875) /* ty=(Tensor[(7, 1, 10), float64],) */;
    %877 = cast(%var_1815, dtype="int32") /* ty=Tensor[(65, 9), int32] */;
    %878 = cast(%var_1815, dtype="int32") /* ty=Tensor[(65, 9), int32] */;
    %879 = reshape(%877, newshape=[13, 15, 3]) /* ty=Tensor[(13, 15, 3), int32] */;
    %880 = reshape(%878, newshape=[13, 15, 3]) /* ty=Tensor[(13, 15, 3), int32] */;
    %881 = @func_1690(%879, %880) /* ty=(Tensor[(13, 15, 3), bool],) */;
    %882 = cast(meta[relay.Constant][51] /* ty=Tensor[(1080), int32] */, dtype="int32") /* ty=Tensor[(1080), int32] */;
    %883 = cast(meta[relay.Constant][51] /* ty=Tensor[(1080), int32] */, dtype="int32") /* ty=Tensor[(1080), int32] */;
    %884 = reshape(%882, newshape=[10, 12, 9]) /* ty=Tensor[(10, 12, 9), int32] */;
    %885 = reshape(%883, newshape=[10, 12, 9]) /* ty=Tensor[(10, 12, 9), int32] */;
    %886 = @func_521(%884, %885) /* ty=(Tensor[(10, 12, 9), int32], Tensor[(10, 12, 9), float64]) */;
    %887 = cast(%var_1807, dtype="float32") /* ty=Tensor[(5, 5, 1), float32] */;
    %888 = log10(%887) /* ty=Tensor[(5, 5, 1), float32] */;
    %889 = cast(%var_1807, dtype="int32") /* ty=Tensor[(5, 5, 1), int32] */;
    %890 = shape_of(%888, dtype="int32") /* ty=Tensor[(3), int32] */;
    %891 = cast(%888, dtype="int32") /* ty=Tensor[(5, 5, 1), int32] */;
    %892 = dyn.reshape(%889, %890, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %893 = add(%891, %892) /* ty=Tensor[(5, 5, ?), int32] */;
    %894 = cast(%893, dtype="float32") /* ty=Tensor[(5, 5, ?), float32] */;
    %895 = cast(meta[relay.Constant][50] /* ty=Tensor[(7, 10), float64] */, dtype="float64") /* ty=Tensor[(7, 10), float64] */;
    %896 = reshape(%895, newshape=[7, 1, 10]) /* ty=Tensor[(7, 1, 10), float64] */;
    %897 = @func_871(%896) /* ty=(Tensor[(7, 1, 10), float64],) */;
    %898 = %876.0;
    %899 = %881.0;
    %900 = %886.0;
    %901 = acosh(%894) /* ty=Tensor[(5, 5, ?), float32] */;
    %902 = %897.0;
    (%898, meta[relay.Constant][50] /* ty=Tensor[(7, 10), float64] */, %899, %var_1815, %900, meta[relay.Constant][51] /* ty=Tensor[(1080), int32] */, %901, %902)
  };
  %903(%var_1843, %var_1844) /* ty=(Tensor[(7, 1, 10), float64], Tensor[(7, 10), float64], Tensor[(13, 15, 3), bool], Tensor[(65, 9), int32], Tensor[(10, 12, 9), int32], Tensor[(1080), int32], Tensor[(5, 5, ?), float32], Tensor[(7, 1, 10), float64]) */
}

def @func_3022(%var_3003: Tensor[(15, 150), float32], %var_3009: Tensor[(25), float32]) -> (Tensor[(12, 7, 3), float32], Tensor[(585), int32], Tensor[(15, 150), int32], Tensor[(7, 10), float64], Tensor[(25), float32], Tensor[(15, 150), bool]) {
  %904 = @func_2568() /* ty=(Tensor[(12, 7, 3), float64], Tensor[(12, 7, 3), float32]) */;
  %905 = cast(meta[relay.Constant][52] /* ty=Tensor[(15, 150), float32] */, dtype="float32") /* ty=Tensor[(15, 150), float32] */;
  %906 = reshape(%905, newshape=[2250]) /* ty=Tensor[(2250), float32] */;
  %907 = @func_2648(%906) /* ty=(Tensor[(12, 7, 3), float32], Tensor[(13, 15, 3), bool], Tensor[(585), int32], Tensor[(10, 12, 9), float64], Tensor[(2250), float32]) */;
  %908 = cast(%var_3003, dtype="int32") /* ty=Tensor[(15, 150), int32] */;
  %909 = shape_of(meta[relay.Constant][52] /* ty=Tensor[(15, 150), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %910 = cast(meta[relay.Constant][52] /* ty=Tensor[(15, 150), float32] */, dtype="int32") /* ty=Tensor[(15, 150), int32] */;
  %911 = dyn.reshape(%908, %909, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %912 = cast(%var_3009, dtype="float32") /* ty=Tensor[(25), float32] */;
  %913 = %907.2;
  %914 = cast(%913, dtype="int32") /* ty=Tensor[(585), int32] */;
  %915 = reshape(%912, newshape=[5, 5, 1]) /* ty=Tensor[(5, 5, 1), float32] */;
  %916 = reshape(%914, newshape=[65, 9]) /* ty=Tensor[(65, 9), int32] */;
  %917 = @func_1842(%915, %916) /* ty=(Tensor[(7, 1, 10), float64], Tensor[(7, 10), float64], Tensor[(13, 15, 3), bool], Tensor[(65, 9), int32], Tensor[(10, 12, 9), int32], Tensor[(1080), int32], Tensor[(5, 5, ?), float32], Tensor[(7, 1, 10), float64]) */;
  %918 = cast(%var_3003, dtype="bool") /* ty=Tensor[(15, 150), bool] */;
  %919 = shape_of(meta[relay.Constant][52] /* ty=Tensor[(15, 150), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %920 = cast(meta[relay.Constant][52] /* ty=Tensor[(15, 150), float32] */, dtype="bool") /* ty=Tensor[(15, 150), bool] */;
  %921 = dyn.reshape(%918, %919, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %922 = %904.1;
  %923 = logical_xor(%910, %911) /* ty=Tensor[(15, 150), int32] */;
  %924 = %917.1;
  %925 = greater_equal(%920, %921) /* ty=Tensor[(15, 150), bool] */;
  (%922, %913, %923, %924, %var_3009, %925)
}

def @func_3809() -> Tensor[(12, 7, 3), float64] {
  %927 = fn () -> Tensor[(12, 7, 3), float64] {
    %926 = @func_2745() /* ty=(Tensor[(12, 7, 3), float64], Tensor[(9, 4, 9), float64], Tensor[(324), float64]) */;
    %926.0
  };
  %927() /* ty=Tensor[(12, 7, 3), float64] */
}

def @func_5729() -> (Tensor[(12, 7, 3), float64],) {
  %928 = @func_4741() /* ty=(Tensor[(12, 7, 3), float64],) */;
  %929 = %928.0;
  (%929,)
}

def @func_5731() -> (Tensor[(12, 7, 3), float64],) {
  @func_5729() /* ty=(Tensor[(12, 7, 3), float64],) */
}

def @func_2909() -> (Tensor[(9, 4, 9), float64], Tensor[(12, 7, 3), float32]) {
  %930 = @func_2745() /* ty=(Tensor[(12, 7, 3), float64], Tensor[(9, 4, 9), float64], Tensor[(324), float64]) */;
  %931 = @func_2423() /* ty=(Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), float32]) */;
  %932 = %930.1;
  %933 = %931.1;
  (%932, %933)
}

def @func_3561() -> (Tensor[(12, 7, 3), int8], Tensor[(324), float64]) {
  %938 = fn () -> (Tensor[(12, 7, 3), int8], Tensor[(324), float64]) {
    %934 = @func_2586() /* ty=(Tensor[(12, 7, 3), int8],) */;
    %935 = @func_2745() /* ty=(Tensor[(12, 7, 3), float64], Tensor[(9, 4, 9), float64], Tensor[(324), float64]) */;
    %936 = %934.0;
    %937 = %935.2;
    (%936, %937)
  };
  %938() /* ty=(Tensor[(12, 7, 3), int8], Tensor[(324), float64]) */
}

def @func_7876(%var_7874: Tensor[(2250), int8]) -> (Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), int8], Tensor[(12, 7, 3), int8], Tensor[(1080), int32], Tensor[(12, 7, 3), float32], Tensor[(18), float64], Tensor[(2250), uint8], Tensor[(18), float64], Tensor[(2250), float32], Tensor[(2250), bool], Tensor[(2250), float64], Tensor[(585), int32], Tensor[(65, 9), int32], Tensor[(585), int32]) {
  @func_7873(%var_7874) /* ty=(Tensor[(12, 7, 3), float32], Tensor[(12, 7, 3), int8], Tensor[(12, 7, 3), int8], Tensor[(1080), int32], Tensor[(12, 7, 3), float32], Tensor[(18), float64], Tensor[(2250), uint8], Tensor[(18), float64], Tensor[(2250), float32], Tensor[(2250), bool], Tensor[(2250), float64], Tensor[(585), int32], Tensor[(65, 9), int32], Tensor[(585), int32]) */
}

def @func_6389() -> (Tensor[(12, 7, 3), float32],) {
  %948 = fn () -> (Tensor[(12, 7, 3), float32],) {
    %939 = @func_5020() /* ty=(Tensor[(12, 7, 3), float64], Tensor[(324), float64]) */;
    %940 = %939.0;
    %941 = cast(meta[relay.Constant][53] /* ty=Tensor[(12, 7, 3), float64] */, dtype="float64") /* ty=Tensor[(12, 7, 3), float64] */;
    %942 = shape_of(%940, dtype="int32") /* ty=Tensor[(3), int32] */;
    %943 = cast(%940, dtype="float64") /* ty=Tensor[(12, 7, 3), float64] */;
    %944 = dyn.reshape(%941, %942, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %945 = floor_divide(%943, %944) /* ty=Tensor[(12, 7, 3), float64] */;
    %946 = cast(%945, dtype="float32") /* ty=Tensor[(12, 7, 3), float32] */;
    %947 = log10(%946) /* ty=Tensor[(12, 7, 3), float32] */;
    (%947,)
  };
  %948() /* ty=(Tensor[(12, 7, 3), float32],) */
}

def @func_7977() -> (Tensor[(560), float64],) {
  %951 = fn () -> (Tensor[(560), float64],) {
    %949 = @func_4728() /* ty=(Tensor[(560), float64], Tensor[(12, 7, 3), float32]) */;
    %950 = %949.0;
    (%950,)
  };
  %951() /* ty=(Tensor[(560), float64],) */
}

def @func_5075() -> Tensor[(12, 7, 3), float64] {
  %955 = fn () -> Tensor[(12, 7, 3), float64] {
    %952 = @func_3483() /* ty=(Tensor[(12, 7, 3), float32],) */;
    %953 = %952.0;
    %954 = cast(%953, dtype="float64") /* ty=Tensor[(12, 7, 3), float64] */;
    log2(%954) /* ty=Tensor[(12, 7, 3), float64] */
  };
  %955() /* ty=Tensor[(12, 7, 3), float64] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

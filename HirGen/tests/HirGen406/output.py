import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_500 = relay.var("var_500", dtype = "int32", shape = (10, 12, 9))#candidate|500|(10, 12, 9)|var|int32
var_501 = relay.var("var_501", dtype = "int32", shape = (10, 12, 9))#candidate|501|(10, 12, 9)|var|int32
bop_502 = relay.left_shift(var_500.astype('int32'), relay.reshape(var_501.astype('int32'), relay.shape_of(var_500))) # shape=(10, 12, 9)
uop_513 = relay.exp(var_500.astype('float64')) # shape=(10, 12, 9)
output = relay.Tuple([bop_502,uop_513,])
output2 = relay.Tuple([bop_502,uop_513,])
func_521 = relay.Function([var_500,var_501,], output)
mod['func_521'] = func_521
mod = relay.transform.InferType()(mod)
mutated_mod['func_521'] = func_521
mutated_mod = relay.transform.InferType()(mutated_mod)
func_521_call = mutated_mod.get_global_var('func_521')
var_523 = relay.var("var_523", dtype = "int32", shape = (10, 12, 9))#candidate|523|(10, 12, 9)|var|int32
var_524 = relay.var("var_524", dtype = "int32", shape = (10, 12, 9))#candidate|524|(10, 12, 9)|var|int32
call_522 = func_521_call(var_523,var_524,)
output = call_522
func_525 = relay.Function([var_523,var_524,], output)
mutated_mod['func_525'] = func_525
mutated_mod = relay.transform.InferType()(mutated_mod)
var_529 = relay.var("var_529", dtype = "float32", shape = (14, 9, 10))#candidate|529|(14, 9, 10)|var|float32
uop_530 = relay.sigmoid(var_529.astype('float32')) # shape=(14, 9, 10)
output = uop_530
output2 = uop_530
func_540 = relay.Function([var_529,], output)
mod['func_540'] = func_540
mod = relay.transform.InferType()(mod)
var_541 = relay.var("var_541", dtype = "float32", shape = (14, 9, 10))#candidate|541|(14, 9, 10)|var|float32
output = func_540(var_541)
func_542 = relay.Function([var_541], output)
mutated_mod['func_542'] = func_542
mutated_mod = relay.transform.InferType()(mutated_mod)
var_549 = relay.var("var_549", dtype = "float64", shape = (5, 1, 10))#candidate|549|(5, 1, 10)|var|float64
uop_550 = relay.erf(var_549.astype('float64')) # shape=(5, 1, 10)
func_540_call = mod.get_global_var('func_540')
func_542_call = mutated_mod.get_global_var('func_542')
var_562 = relay.var("var_562", dtype = "float32", shape = (1260,))#candidate|562|(1260,)|var|float32
call_561 = func_540_call(relay.reshape(var_562.astype('float32'), [14, 9, 10]))
call_563 = func_540_call(relay.reshape(var_562.astype('float32'), [14, 9, 10]))
func_540_call = mod.get_global_var('func_540')
func_542_call = mutated_mod.get_global_var('func_542')
call_568 = func_540_call(relay.reshape(var_562.astype('float32'), [14, 9, 10]))
call_569 = func_540_call(relay.reshape(var_562.astype('float32'), [14, 9, 10]))
func_540_call = mod.get_global_var('func_540')
func_542_call = mutated_mod.get_global_var('func_542')
call_585 = func_540_call(relay.reshape(var_562.astype('float32'), [14, 9, 10]))
call_586 = func_540_call(relay.reshape(var_562.astype('float32'), [14, 9, 10]))
bop_589 = relay.mod(uop_550.astype('float64'), relay.reshape(var_549.astype('float64'), relay.shape_of(uop_550))) # shape=(5, 1, 10)
func_521_call = mod.get_global_var('func_521')
func_525_call = mutated_mod.get_global_var('func_525')
const_594 = relay.const([-1,6,-8,-5,9,2,-7,4,-4,1,2,-9,3,-8,8,7,-10,-1,9,9,9,1,4,1,-6,8,-4,4,-10,-10,-4,10,-7,10,8,-8,-1,-2,-2,-5,-5,6,-9,-9,-1,-9,-5,8,-1,-1,-10,-3,-6,7,10,-8,-4,-6,-3,4,-5,10,2,-5,-8,2,-5,-8,2,1,-7,8,-1,4,9,-9,-1,-8,9,-7,-8,-3,-6,4,-6,1,-1,-3,-3,-8,5,9,-6,-10,-10,10,-6,3,-5,1,3,5,10,8,-6,-8,-2,4,5,3,-1,-5,9,10,-6,-5,4,3,-1,9,-5,-6,-5,-7,6,-8,-4,-5,-3,-8,7,-8,-5,-5,1,-4,1,5,2,-8,3,-7,-9,1,1,-10,3,9,8,6,8,-8,-10,6,-7,2,8,-9,4,-6,-1,3,-4,-4,6,4,10,2,-6,-1,3,-5,3,-8,7,-1,-2,-4,7,-1,-10,7,-8,9,9,7,3,5,-7,4,6,-2,-2,-7,4,3,4,3,1,3,4,-6,-3,5,-1,-6,6,9,4,-8,5,-4,3,10,1,-8,5,-4,-2,-10,9,1,-6,7,6,10,-9,2,-6,-8,6,-4,9,-3,8,-3,1,-6,4,-7,-9,4,3,-1,-8,6,4,-7,7,-3,5,-5,2,1,3,8,5,1,10,5,-1,-2,-10,-10,-10,5,1,-10,-9,10,-9,5,2,1,8,-10,8,5,-4,6,-10,-9,-9,3,-2,-4,-1,6,-7,-7,-5,-5,10,3,-7,-8,-10,-7,8,8,2,2,3,9,6,-4,-5,-6,-10,-1,-9,-1,7,-7,7,6,1,3,7,3,-9,8,7,1,4,4,2,-2,3,-6,9,2,-2,-2,-8,-4,-2,-3,8,-6,-5,-6,6,-5,-9,3,-3,-6,9,-3,4,8,-2,7,-4,-2,3,-7,6,-10,-3,3,-6,-10,-8,4,2,10,-2,4,7,-8,-4,1,-6,-4,-4,6,5,-6,1,-7,-3,-9,-1,4,8,10,4,-3,2,3,6,7,7,6,-5,-3,7,5,6,8,1,8,-1,10,-8,-1,-2,6,2,-9,5,7,-5,-2,4,-5,-1,-2,3,8,-3,-8,7,-6,7,8,-9,-6,1,-7,9,2,4,4,4,-3,-1,5,6,-9,-7,7,-1,-2,2,-9,-1,2,-3,-5,8,-7,8,7,3,8,-2,-8,9,-7,-9,-9,5,8,-8,8,-10,5,5,5,-9,-10,10,-5,-7,-8,-7,9,-10,2,1,-4,-3,10,-4,-7,-9,-5,4,6,2,-10,-10,-3,-7,8,2,-8,2,6,4,-8,-2,-10,1,-10,7,-4,-8,-7,9,-10,7,10,5,-3,1,1,-4,-2,4,-10,9,-2,-8,-1,-4,9,-10,-3,5,5,9,1,-5,-8,2,-4,1,-9,4,-5,-4,2,-5,8,-2,8,-9,3,-10,4,1,5,3,1,6,6,2,4,4,7,-7,7,2,9,-3,7,3,7,8,1,-6,5,-6,5,-1,4,-7,-3,1,4,8,-9,3,-5,4,6,3,-7,-8,-9,-5,8,-5,1,-4,-1,6,3,6,10,-4,-1,10,7,2,-9,-8,9,10,9,-4,-8,10,10,9,-9,8,1,-10,6,-2,-7,3,-4,-5,-9,-5,9,-8,3,-1,-10,4,7,-8,6,-9,4,10,-5,3,5,-8,-3,-3,4,1,-3,5,-9,-2,-5,-7,-2,-7,3,8,-7,-2,5,-9,9,2,4,-1,-10,-9,5,6,-4,-2,-2,-3,-1,1,10,6,9,1,-5,8,7,-10,5,8,8,6,-4,-1,2,10,2,-1,-4,-6,-5,4,-4,-2,2,-10,-2,2,-3,-1,-7,-9,7,-9,2,-9,2,1,-8,6,-5,-10,-1,2,-7,1,4,-4,9,1,1,-10,-3,-10,4,-1,-2,-7,-7,-1,2,10,-1,6,-8,-3,6,3,-6,10,-8,-10,-6,-7,4,7,9,1,-2,2,-3,-8,-2,-10,-5,-8,-3,-5,-3,-2,-2,4,-6,1,-3,7,-2,7,-7,10,-7,-5,7,9,-4,-1,-10,8,-2,-2,-4,1,4,-9,4,3,8,-4,-9,8,-4,2,4,9,-10,10,-10,1,-8,-6,-10,6,8,4,2,3,-1,-1,-4,10,9,-10,-1,-4,-3,-3,-9,2,8,-7,10,-8,4,5,-8,-3,-2,-8,6,-2,-2,2,6,1,2,4,-7,-2,-2,8,-9,-6,6,6,6,10,4,1,6,4,9,7,-10,8,3,1,7,-4,1,-4,7,5,4,1,-10,-7,5,-7,-2,-9,1,8,7,-2,2,-7,9,-10,10,2,-10,-10,-2,10,-2,-8,8,10,8,6,-7,8,-9,-9,-4,8,2,7,-5,-8,7,-7,-2,4,10,-9,-5,4,-7,-2,4,3,9,9,-8,-10,-3,-3,7,-6,-7,5,1,-7,-10,9,2,3,-1,-5,9,7,-4,8,8,-8,10,9,3,-2,-9,-9,1,2,4,5,5,-7,10,10,-1,3,2,-5,-1,7,5,1,-10,2,-2,-9,-6,-6,4,-6,-6,8,-2,2,9,-5,7,-2,1,-3,8,-2,2,3,-5,3,-8,9,6,-5,-3,9,8,-9,5,4,7,8,-3,5,9,-9,-1,-7,2,-1,-4,-6,-2,-1,-10,10,8,-7,10,9,10,-8,-10,9,9,-8,-10,3,-3,1,-7,1,9,-8,-9,-10,-7,-1,3,9,-8,5,3,-2,-2,10,-3,7,-8,-3,-2,-6,-1,-5,5,-8,-1,4,1,-10,10,2,-10,5,4,5,-3,2,-5,2,-3,4,-1,9,4,-5,-1,8,-6], dtype = "int32")#candidate|594|(1080,)|const|int32
call_593 = relay.TupleGetItem(func_521_call(relay.reshape(const_594.astype('int32'), [10, 12, 9]), relay.reshape(const_594.astype('int32'), [10, 12, 9]), ), 1)
call_595 = relay.TupleGetItem(func_525_call(relay.reshape(const_594.astype('int32'), [10, 12, 9]), relay.reshape(const_594.astype('int32'), [10, 12, 9]), ), 1)
func_521_call = mod.get_global_var('func_521')
func_525_call = mutated_mod.get_global_var('func_525')
call_598 = relay.TupleGetItem(func_521_call(relay.reshape(call_593.astype('int32'), [10, 12, 9]), relay.reshape(call_593.astype('int32'), [10, 12, 9]), ), 0)
call_599 = relay.TupleGetItem(func_525_call(relay.reshape(call_593.astype('int32'), [10, 12, 9]), relay.reshape(call_593.astype('int32'), [10, 12, 9]), ), 0)
bop_623 = relay.logical_and(uop_550.astype('bool'), relay.reshape(var_549.astype('bool'), relay.shape_of(uop_550))) # shape=(5, 1, 10)
uop_638 = relay.rsqrt(bop_623.astype('float32')) # shape=(5, 1, 10)
bop_642 = relay.maximum(uop_638.astype('uint16'), relay.reshape(bop_589.astype('uint16'), relay.shape_of(uop_638))) # shape=(5, 1, 10)
bop_646 = relay.floor_mod(bop_589.astype('float32'), relay.reshape(bop_623.astype('float32'), relay.shape_of(bop_589))) # shape=(5, 1, 10)
output = relay.Tuple([call_561,var_562,call_568,call_585,call_593,const_594,call_598,bop_642,bop_646,])
output2 = relay.Tuple([call_563,var_562,call_569,call_586,call_595,const_594,call_599,bop_642,bop_646,])
func_649 = relay.Function([var_549,var_562,], output)
mod['func_649'] = func_649
mod = relay.transform.InferType()(mod)
mutated_mod['func_649'] = func_649
mutated_mod = relay.transform.InferType()(mutated_mod)
func_649_call = mutated_mod.get_global_var('func_649')
var_651 = relay.var("var_651", dtype = "float64", shape = (5, 1, 10))#candidate|651|(5, 1, 10)|var|float64
var_652 = relay.var("var_652", dtype = "float32", shape = (1260,))#candidate|652|(1260,)|var|float32
call_650 = func_649_call(var_651,var_652,)
output = call_650
func_653 = relay.Function([var_651,var_652,], output)
mutated_mod['func_653'] = func_653
mutated_mod = relay.transform.InferType()(mutated_mod)
var_770 = relay.var("var_770", dtype = "float64", shape = (9, 4, 9))#candidate|770|(9, 4, 9)|var|float64
uop_771 = relay.acosh(var_770.astype('float64')) # shape=(9, 4, 9)
output = uop_771
output2 = uop_771
func_790 = relay.Function([var_770,], output)
mod['func_790'] = func_790
mod = relay.transform.InferType()(mod)
var_791 = relay.var("var_791", dtype = "float64", shape = (9, 4, 9))#candidate|791|(9, 4, 9)|var|float64
output = func_790(var_791)
func_792 = relay.Function([var_791], output)
mutated_mod['func_792'] = func_792
mutated_mod = relay.transform.InferType()(mutated_mod)
var_863 = relay.var("var_863", dtype = "float64", shape = (7, 1, 10))#candidate|863|(7, 1, 10)|var|float64
uop_864 = relay.log2(var_863.astype('float64')) # shape=(7, 1, 10)
output = relay.Tuple([uop_864,])
output2 = relay.Tuple([uop_864,])
func_871 = relay.Function([var_863,], output)
mod['func_871'] = func_871
mod = relay.transform.InferType()(mod)
mutated_mod['func_871'] = func_871
mutated_mod = relay.transform.InferType()(mutated_mod)
var_872 = relay.var("var_872", dtype = "float64", shape = (7, 1, 10))#candidate|872|(7, 1, 10)|var|float64
func_871_call = mutated_mod.get_global_var('func_871')
call_873 = func_871_call(var_872)
output = call_873
func_874 = relay.Function([var_872], output)
mutated_mod['func_874'] = func_874
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1470 = relay.var("var_1470", dtype = "float32", shape = (15, 10, 15))#candidate|1470|(15, 10, 15)|var|float32
uop_1471 = relay.cosh(var_1470.astype('float32')) # shape=(15, 10, 15)
func_649_call = mod.get_global_var('func_649')
func_653_call = mutated_mod.get_global_var('func_653')
const_1495 = relay.const([-1.165658,2.855519,-9.566931,2.909843,8.813951,8.155686,1.269239,2.556774,0.964139,-2.200950,8.534273,-3.102776,2.661878,-0.824577,-5.078905,2.753572,-4.326177,-9.150123,-8.443822,6.164993,7.306430,-9.963335,0.912116,2.828208,1.132216,8.107742,-7.278064,-2.167354,-8.713765,-0.033248,-3.094713,-3.672670,-1.799780,6.169117,-9.968156,6.435440,8.051293,-1.027943,8.370981,-7.424917,4.770828,7.039170,9.568703,-7.092248,3.254336,-3.091355,-9.641701,-7.291547,2.773153,0.286641], dtype = "float64")#candidate|1495|(50,)|const|float64
const_1496 = relay.const([[7.125572,-2.552523,7.062557,4.129371,9.074723,2.144651,-6.944794,-3.172470,-0.648708,8.445585,-3.007033,1.522734,3.868341,-9.852069,8.000233,-2.878744,-3.378072,-7.902971,7.801168,-9.507615,5.778708,-7.091003,-3.778875,-2.665862,7.006241,-1.845574,2.058609,-7.182779,-8.667457,-5.077814,-6.421840,-2.211179,0.758017,-2.247853,-6.529507,6.438794,-7.214292,7.774277,-9.705040,-0.571698,-0.798390,8.971545,-6.554722,-8.555678,-4.434120,-4.870756,4.883534,4.182737,-8.929613,8.647733,8.561351,-2.601591,-8.442130,-3.719319,8.626811,9.961307,9.232862,7.433282,-5.636509,-8.867725,-9.953897,5.470968,9.121278,-3.995779,-7.178969,-2.005608,-3.059295,-7.926351,0.671416,-5.564623,2.810283,-0.590814,-6.929249,-9.640254,7.605346,-0.645850,8.919061,6.655275,-4.983321,-0.695450,-4.591601,-8.826605,1.791581,0.273343,-9.405244,-7.895000,1.670065,-0.438133,-6.062186,-2.528018,-1.682323,-3.592542,-7.592344,-9.107079,6.651321,-8.882751,-2.913246,8.252027,9.267550,-6.623602,-2.230390,3.117241,3.936125,0.513818,-0.765094,1.261153,-8.283963,-9.874732,9.139315,-0.522634,-2.491639,-7.762976,0.170085,-8.857845,0.977742,-1.628642,7.938404,6.989697,-0.013931,6.588756,9.255882,1.995367,-7.468747,-1.642904,-0.665538,-4.869369,3.905650,1.664267,-7.613973,2.257139,-9.483625,0.537803,9.477027,-5.404215,-6.355188,-9.149739,-4.183802,1.697104,-6.976628,8.185925,-0.393411,8.051328,-2.824628,5.065510,-2.563723,-6.145791,-5.986794,3.345677,5.474987,0.139161,0.697225,2.585607,6.192535,-2.009345,-7.666438,0.541667,4.851332,0.319103,4.310286,1.727521,6.885253,6.990049,5.373667,-9.647293,-1.906765,-2.501486,0.681667,-9.701185,6.369572,-9.369120,-3.433468,-8.960884,-3.771012,3.448566,-2.564581,-8.667414,8.106996,-7.982774,-7.663199,5.712287,-5.548885,-4.209019,8.779569,1.801623,5.404074,-5.900668,7.692929,6.458138,-5.404910,1.611094,0.475557,4.751916,3.406327,-1.446546,-9.228739,7.970316,0.439884,-3.676143,-1.388560,7.069242,-4.036346,3.389104,1.546878,0.207238,8.277612,-7.710422,-5.174950,2.827912,4.615161,6.900859,0.061163,8.783616,-6.950356,9.912081,9.991110,-1.340122,6.670356,0.362171,4.485214,-8.917372,4.579774,6.811092,-9.055480,-2.408799,-6.308848,4.445531,-9.083253,5.190079,8.590856,2.904488,0.837793,-4.716127,8.795388,3.296908,-6.691135,3.915476,6.133206,-9.856297,-0.063500,8.433621,-3.610958,-6.880865,0.138077,-6.166895,7.664672,4.865880,9.147690,3.640541,4.246742,7.934326,-6.991885,-7.887098,-3.677473,-8.820369,2.764089,0.224175,-1.802075,-6.859084,3.706518,-0.776755,-7.347652,-7.400572,0.486494,-0.046003,-5.852273,9.883496,-6.928794,-6.289251,-8.326376,0.254311,3.704760,8.193342,6.050439,7.542239,-7.218142,0.885376,-8.523710,9.688742,0.461222,-3.184554,4.157747,-4.124904,1.580238,-6.089027,0.736959,1.601534,7.519164,0.661260,-2.561141,2.770625,-3.226620,2.334852,-0.844145,4.803808,-6.903059,-3.025272,7.877205,-2.131163,1.093656,-7.153997,-2.357744,8.134921,-9.188988,-1.349667,-6.625614,-5.419083,-5.312259,7.398482,-6.406180,-1.045657,-0.281476,-3.934515,-4.206740,2.123121,-1.959436,-5.581193,3.621280,-6.296846,-6.518935,7.571285,-9.594087,-7.655560,9.557849,-6.908347,-9.239013,1.152537,3.556856,-7.330518,-4.001280,2.006053,6.748951,5.183234,-3.438374,-4.559837,7.451817,0.864674,7.321236,-0.626639,5.687782,-6.005135,-1.912716,-9.277091,-2.203001,9.453406,-5.397787,4.862633,-4.433336,8.888799,-1.021107,-0.225938,4.365021,6.772204,0.080757,5.455867,-2.276572,-6.634270,2.048937,-6.639251,8.183958,-1.658066,1.897899,3.398533,3.975581,-3.106918,-0.929847,6.466764,-5.896311,5.697826,-3.156948,-8.428582,-0.289899,0.665296,1.885290,1.078174,4.529194,4.451691,9.614429,7.972088,7.062453,-5.312858,-2.539944,0.588478,9.013962,-2.775531,5.561987,-9.202688,6.594603,-4.216978,-3.064511,9.198192,4.921505,-5.415542,6.359347,6.286313,5.910035,-8.225416,7.188188,-9.505979,-7.822630,5.104752,5.369176,-2.276557,6.709070,9.377714,-7.161478,-9.856473,2.501779,3.086180,-6.350350,2.727438,-7.958488,3.883075,7.406140,-6.296282,-0.542382,-5.660405,-4.965061,-1.598476,6.544054,0.449036],[-5.485976,0.767798,-1.931792,-2.971572,-9.713845,-0.900490,0.920381,-7.333809,9.616285,9.202281,-6.671396,5.691245,-8.169683,9.230322,8.262484,6.661254,-5.171043,-8.230735,7.966076,2.248382,-1.002428,4.298992,2.791778,6.086035,-8.396391,-9.729131,-5.946099,4.257301,8.109696,-9.791173,5.224280,-1.616611,-3.359160,-9.800763,9.023319,2.076518,3.188370,4.616527,9.657481,7.866488,9.299454,-2.518506,6.887370,-9.660324,-7.232003,-2.554326,4.445756,8.931686,3.504820,8.468792,2.676733,-7.086509,4.397572,9.397715,-4.305061,5.477247,-7.195681,6.609496,1.381334,-4.927653,-6.699759,-1.234273,4.244729,-3.447881,6.917951,0.398870,-0.287344,-8.485068,-0.477093,-2.205393,-5.294611,-7.648135,-9.513789,3.353494,-5.084098,9.278387,-6.717979,-3.470886,-8.834792,-9.931519,-8.386319,-8.648593,9.090650,5.050233,5.159476,5.595231,5.873134,-9.628240,1.856940,3.063073,-2.606292,3.856757,-6.572849,-4.639183,-9.377643,1.390502,4.521731,6.740873,-3.263893,-2.876819,3.913735,3.801469,8.403924,-2.096444,6.772638,-8.019637,-9.191569,-1.803637,2.112020,8.022929,4.030115,0.604332,0.315168,-0.535984,5.942373,8.836718,-0.843774,3.996368,-1.567582,-7.936992,6.114430,8.263545,-8.146574,8.583855,1.488328,3.707221,6.318967,5.419266,-2.756797,-8.223669,-8.366979,-3.260023,-4.648124,-9.944300,7.309463,3.012876,-7.512828,-4.507766,-5.208637,-4.134437,0.083622,0.082472,-1.297069,6.144746,-4.156567,-9.505745,3.256701,0.864421,-7.692529,-8.223032,-0.637855,1.284480,6.858623,-5.232394,4.560362,6.566293,-6.230946,0.287467,9.184391,4.407382,-6.791195,-0.187513,-8.075556,1.900744,6.530224,-6.954468,0.508606,-5.212913,-7.574924,8.448092,-3.864848,-2.188058,3.122641,3.394527,-2.258222,-0.909558,6.048746,-1.449770,-4.919292,-4.944545,0.598116,1.442292,-8.244315,7.877097,-3.256734,-3.420329,0.602919,-4.288147,-8.637245,5.509258,-2.095052,7.627455,-1.721731,-2.544959,-9.774826,7.538209,8.868992,-3.824253,-7.889370,-5.743011,-2.123714,7.658976,3.239912,-7.956409,-1.116033,-9.835994,2.620220,-0.551416,3.892424,-6.532520,0.847974,-5.506139,5.585501,6.153051,-5.208108,-9.878833,-6.244654,5.914562,1.819185,-4.572942,6.767232,6.919708,-8.215454,2.942722,-9.574268,8.012050,8.405980,-2.742715,9.063429,-1.412256,-4.491153,-3.776399,7.239803,-8.802382,-7.308942,-7.593035,-1.806443,-6.624189,7.542418,-8.219501,-5.176898,6.162608,3.507083,-2.676218,1.290201,1.630697,5.708440,6.366619,4.181024,-5.513225,-5.435752,2.925178,-5.276548,1.833447,2.239686,5.443433,-6.700138,0.808436,-7.579002,-2.027607,8.260149,5.268911,5.945020,3.168379,5.286220,-4.725268,-0.890535,-5.693263,-1.400248,-6.666643,0.496989,7.139727,-4.596913,-4.486002,-2.179309,1.511535,-3.395612,-6.266169,3.951632,-2.725134,7.531767,-0.976052,-6.022707,-0.983271,-5.147849,0.580157,-0.419374,2.098841,3.435360,-6.884936,-3.441002,5.698143,-9.657096,4.079841,2.118571,-9.076483,-6.101329,-9.320233,0.176907,7.188612,6.364693,-1.984522,6.543041,5.296693,5.920937,-8.680216,5.034646,-7.466588,-8.921007,4.361408,5.317272,-1.774299,-1.706901,-2.671995,-7.792818,4.325513,-1.702357,7.810664,-6.511875,8.232461,-8.051107,3.674769,4.741610,-4.376029,0.928452,-7.857715,0.197845,5.330817,5.741347,-8.677462,7.811269,-0.771844,3.136751,-5.039789,-8.364390,3.660528,9.172295,-3.315044,-1.644662,-7.983249,-0.325487,-5.963908,-3.619316,0.023841,7.668159,2.824417,0.502357,1.918031,0.270810,-1.893622,6.076330,6.953483,3.702253,9.266926,-4.475492,0.096963,-2.031807,-5.859122,2.436767,9.192318,7.078687,-2.502410,-0.108548,6.834991,5.127176,8.377086,2.459097,1.249355,-2.859439,-1.060189,9.971743,0.847421,9.995477,-9.745739,8.276142,-9.343133,-1.528102,9.424668,-9.475750,-6.823922,6.016498,-3.208312,-7.653014,5.438250,-5.119034,6.988770,1.855481,-9.905406,6.556888,-9.808241,-4.989063,2.137601,8.486522,2.487999,-5.262671,3.239489,5.036258,-6.007143,5.550171,-0.455733,-7.842226,6.098950,-8.078545,-1.295252,-1.036585,-0.231369,2.794299,0.222512,-5.137223,-9.578506,7.410188,-3.880200,7.418501,-1.105363,-1.857473,0.514079,5.503693,3.963271,-0.686432,5.312107],[-6.701438,5.806597,8.556565,-1.784614,0.114288,-5.964613,-4.993036,7.777671,-5.720772,-5.229846,-0.767053,9.605819,2.048898,0.096236,-3.489317,-6.996267,-4.157661,5.284180,8.108353,1.182091,-4.283147,8.623627,9.828142,2.257562,-0.718535,-1.629486,8.919264,-1.352675,-5.095125,-3.320377,-7.449830,4.403653,-2.590310,8.202333,-2.887372,-8.251401,-8.258265,3.603523,-0.827817,5.712616,1.350940,5.019438,3.735725,3.887591,6.137162,7.269817,-3.590623,-7.133700,7.693115,-8.031987,-7.850493,-9.248368,-1.505975,-4.589784,-0.468622,-6.302996,-6.805142,-2.213541,4.589078,7.848404,7.576882,6.533673,-9.820685,-1.900064,8.545921,0.693622,2.800345,-4.964686,-4.451085,-6.954791,7.309449,-2.910039,-0.790876,3.995732,-3.621860,-6.056701,6.195891,0.032606,9.438527,1.558050,5.593195,8.607699,3.667664,-3.986950,-9.776062,-5.959160,9.575080,6.296541,-1.173469,-0.735228,-8.398032,-7.521522,-9.798811,8.318805,-2.628349,-5.331588,3.289183,-5.404604,3.860423,-4.243234,-7.579731,7.271189,9.947444,2.255635,-3.752621,-8.100492,5.199698,-4.831300,1.319716,1.789214,9.504565,3.639735,8.583320,8.488098,-8.239745,8.773388,-6.267296,6.137855,1.637351,9.996043,-9.786363,-9.714070,6.371185,0.820430,-1.218283,-4.360940,-3.370700,2.371408,0.547909,-5.762880,-3.929053,-4.551024,9.211644,0.829681,6.423325,-5.434821,-6.910844,8.550258,5.420607,-6.458256,6.862701,5.769393,-3.580086,-4.119998,3.985115,-9.305385,-0.545829,7.815698,-8.747308,-2.276355,3.774100,3.979933,-3.765331,7.290805,8.982890,3.532844,-5.539793,-3.904982,5.655773,0.247122,7.122815,9.698874,-3.312876,8.806126,3.528463,-3.549285,-7.973732,-7.867694,-7.670892,7.429662,-2.506362,2.472775,7.687467,0.508517,-0.398047,-2.496195,-4.380957,4.437181,-7.792868,1.686120,-3.896803,-1.475340,7.731288,9.577358,4.227826,2.918247,-1.077690,-3.525647,-9.060436,-9.893972,-8.906985,2.142013,-1.407338,-1.551788,9.339416,-8.382605,8.503734,1.046087,-8.596403,4.536622,9.035672,7.206640,1.283066,5.460952,6.502621,-9.344141,-0.836095,6.178807,-0.927854,3.945990,0.449950,3.861037,2.232721,-3.357434,-1.578187,6.060947,-6.887274,2.738427,-3.941822,-8.191231,-1.072535,-8.382130,-4.557083,-3.144437,9.406759,-4.522092,8.645137,2.860189,-2.205949,-6.425937,2.128694,-1.153276,-9.565066,8.707402,4.819159,7.272097,-5.349580,-3.557068,6.947392,4.738600,7.189646,2.273475,-4.741730,7.917183,-5.041705,0.197241,4.743452,-4.619267,6.427456,-7.674222,3.152517,-3.939012,6.921192,-8.551766,8.834089,4.131568,1.753089,-9.162444,-2.977206,9.229943,9.696379,-2.217712,-9.080229,6.239948,8.833695,-9.265853,7.988578,-7.016147,-1.633895,5.157434,3.498521,-0.317651,2.321073,-7.381707,-1.875451,7.929853,-6.290555,-9.172794,-7.337806,-0.292934,8.153244,-3.903859,7.724835,-8.556899,1.014152,-5.970481,-7.436240,9.304762,4.554210,5.780334,9.654056,5.790451,8.333747,5.225823,5.122802,2.208750,-7.379723,4.321541,-3.582193,7.294251,7.475559,-4.460342,-4.215325,-3.539325,7.932921,8.974189,-6.516847,-9.281835,-3.337928,3.609053,6.027928,4.110756,-7.174356,-4.007898,-4.845560,-5.253137,1.115931,0.646606,-4.392039,0.132932,-6.169943,9.315171,8.605060,-9.117119,0.579284,-6.739530,-2.844395,-0.786456,-2.790792,7.292538,6.366566,0.681138,9.309293,-2.795336,-2.114020,2.574182,2.671246,1.389407,8.353758,-4.046737,4.443208,2.959523,-4.567859,-6.662653,-4.348475,7.046851,2.198996,-2.279121,-3.461979,-2.324129,-2.680479,0.275879,-8.708807,9.774422,-0.061846,-3.670258,-7.340530,5.805823,-5.331604,4.746377,5.125012,-1.180520,5.894274,9.529413,7.312822,-8.303228,-5.935276,8.311520,-7.391684,-3.176904,3.985973,-6.432701,-5.302117,-9.675150,3.203256,-9.042732,6.127463,3.801793,3.510161,-2.193655,9.660719,8.042392,-3.142178,-6.213918,2.241557,6.814028,-0.709296,-4.853825,0.178550,7.761350,-8.339821,0.953867,-0.844997,2.107519,-1.217055,-3.518803,-5.539229,2.735189,2.775261,-3.576489,-2.303215,5.055763,3.834132,9.101632,-9.331275,-2.647167,-3.571029,-4.021277,-2.288869,0.670009,0.515367,-0.791587,5.526134,-8.376647,-8.514880,7.519141,-2.664985,9.298146,-2.342510,-6.442291]], dtype = "float32")#candidate|1496|(3, 420)|const|float32
call_1494 = relay.TupleGetItem(func_649_call(relay.reshape(const_1495.astype('float64'), [5, 1, 10]), relay.reshape(const_1496.astype('float32'), [1260,]), ), 4)
call_1497 = relay.TupleGetItem(func_653_call(relay.reshape(const_1495.astype('float64'), [5, 1, 10]), relay.reshape(const_1496.astype('float32'), [1260,]), ), 4)
func_649_call = mod.get_global_var('func_649')
func_653_call = mutated_mod.get_global_var('func_653')
call_1498 = relay.TupleGetItem(func_649_call(relay.reshape(const_1495.astype('float64'), [5, 1, 10]), relay.reshape(const_1496.astype('float32'), [1260,]), ), 4)
call_1499 = relay.TupleGetItem(func_653_call(relay.reshape(const_1495.astype('float64'), [5, 1, 10]), relay.reshape(const_1496.astype('float32'), [1260,]), ), 4)
bop_1530 = relay.less_equal(uop_1471.astype('bool'), relay.reshape(var_1470.astype('bool'), relay.shape_of(uop_1471))) # shape=(15, 10, 15)
output = relay.Tuple([call_1494,const_1495,const_1496,call_1498,bop_1530,])
output2 = relay.Tuple([call_1497,const_1495,const_1496,call_1499,bop_1530,])
func_1537 = relay.Function([var_1470,], output)
mod['func_1537'] = func_1537
mod = relay.transform.InferType()(mod)
mutated_mod['func_1537'] = func_1537
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1538 = relay.var("var_1538", dtype = "float32", shape = (15, 10, 15))#candidate|1538|(15, 10, 15)|var|float32
func_1537_call = mutated_mod.get_global_var('func_1537')
call_1539 = func_1537_call(var_1538)
output = call_1539
func_1540 = relay.Function([var_1538], output)
mutated_mod['func_1540'] = func_1540
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1560 = relay.var("var_1560", dtype = "float32", shape = (8, 12, 11))#candidate|1560|(8, 12, 11)|var|float32
uop_1561 = relay.asin(var_1560.astype('float32')) # shape=(8, 12, 11)
output = relay.Tuple([uop_1561,])
output2 = relay.Tuple([uop_1561,])
func_1564 = relay.Function([var_1560,], output)
mod['func_1564'] = func_1564
mod = relay.transform.InferType()(mod)
var_1565 = relay.var("var_1565", dtype = "float32", shape = (8, 12, 11))#candidate|1565|(8, 12, 11)|var|float32
output = func_1564(var_1565)
func_1566 = relay.Function([var_1565], output)
mutated_mod['func_1566'] = func_1566
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1680 = relay.var("var_1680", dtype = "int32", shape = (13, 15, 3))#candidate|1680|(13, 15, 3)|var|int32
var_1681 = relay.var("var_1681", dtype = "int32", shape = (13, 15, 3))#candidate|1681|(13, 15, 3)|var|int32
bop_1682 = relay.greater_equal(var_1680.astype('bool'), relay.reshape(var_1681.astype('bool'), relay.shape_of(var_1680))) # shape=(13, 15, 3)
output = relay.Tuple([bop_1682,])
output2 = relay.Tuple([bop_1682,])
func_1690 = relay.Function([var_1680,var_1681,], output)
mod['func_1690'] = func_1690
mod = relay.transform.InferType()(mod)
mutated_mod['func_1690'] = func_1690
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1690_call = mutated_mod.get_global_var('func_1690')
var_1692 = relay.var("var_1692", dtype = "int32", shape = (13, 15, 3))#candidate|1692|(13, 15, 3)|var|int32
var_1693 = relay.var("var_1693", dtype = "int32", shape = (13, 15, 3))#candidate|1693|(13, 15, 3)|var|int32
call_1691 = func_1690_call(var_1692,var_1693,)
output = call_1691
func_1694 = relay.Function([var_1692,var_1693,], output)
mutated_mod['func_1694'] = func_1694
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1711 = relay.var("var_1711", dtype = "float64", shape = (1, 6, 3))#candidate|1711|(1, 6, 3)|var|float64
uop_1712 = relay.tan(var_1711.astype('float64')) # shape=(1, 6, 3)
output = uop_1712
output2 = uop_1712
func_1719 = relay.Function([var_1711,], output)
mod['func_1719'] = func_1719
mod = relay.transform.InferType()(mod)
var_1720 = relay.var("var_1720", dtype = "float64", shape = (1, 6, 3))#candidate|1720|(1, 6, 3)|var|float64
output = func_1719(var_1720)
func_1721 = relay.Function([var_1720], output)
mutated_mod['func_1721'] = func_1721
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1807 = relay.var("var_1807", dtype = "float32", shape = (5, 5, 1))#candidate|1807|(5, 5, 1)|var|float32
uop_1808 = relay.log10(var_1807.astype('float32')) # shape=(5, 5, 1)
func_871_call = mod.get_global_var('func_871')
func_874_call = mutated_mod.get_global_var('func_874')
const_1812 = relay.const([[-8.141335,6.993349,1.643471,8.793707,-4.678884,-9.006774,-4.203192,0.800067,-6.819725,-8.042594],[7.891712,0.159153,-4.406149,-6.722359,7.168435,-4.961367,-7.659576,2.887736,0.422871,7.931575],[7.575919,5.224600,-0.251775,4.082383,-3.612790,4.745556,5.232479,-3.575240,0.748602,-5.291115],[4.001466,9.832302,5.441344,2.681340,2.198755,-7.085662,6.898823,8.066499,1.437352,-5.435866],[-4.426597,1.489565,-9.294514,2.760162,-2.064899,-4.508616,8.314431,6.305173,-7.095030,0.354172],[8.553438,5.475052,6.573605,-6.597700,2.953277,-9.087759,-8.173484,0.374245,5.276608,-5.949390],[-8.344344,2.377769,-6.723652,-6.905243,-7.901472,9.746938,-7.416322,-3.536005,2.586336,-4.524244]], dtype = "float64")#candidate|1812|(7, 10)|const|float64
call_1811 = relay.TupleGetItem(func_871_call(relay.reshape(const_1812.astype('float64'), [7, 1, 10])), 0)
call_1813 = relay.TupleGetItem(func_874_call(relay.reshape(const_1812.astype('float64'), [7, 1, 10])), 0)
func_1690_call = mod.get_global_var('func_1690')
func_1694_call = mutated_mod.get_global_var('func_1694')
var_1815 = relay.var("var_1815", dtype = "int32", shape = (65, 9))#candidate|1815|(65, 9)|var|int32
call_1814 = relay.TupleGetItem(func_1690_call(relay.reshape(var_1815.astype('int32'), [13, 15, 3]), relay.reshape(var_1815.astype('int32'), [13, 15, 3]), ), 0)
call_1816 = relay.TupleGetItem(func_1694_call(relay.reshape(var_1815.astype('int32'), [13, 15, 3]), relay.reshape(var_1815.astype('int32'), [13, 15, 3]), ), 0)
func_521_call = mod.get_global_var('func_521')
func_525_call = mutated_mod.get_global_var('func_525')
const_1820 = relay.const([-1,-9,-6,-1,-5,-8,8,3,10,-4,1,9,9,-6,-5,-4,-10,3,8,-8,10,8,-9,-9,5,1,-7,4,8,-6,-1,-1,1,-8,1,-4,3,8,10,-10,9,5,-10,3,6,-4,8,-1,-1,-10,6,-5,7,-10,-1,4,-2,9,7,-1,-9,-4,-10,8,4,6,-3,9,-4,-6,9,-8,-10,-2,-9,2,8,7,-10,1,-2,-4,-10,4,1,-3,-2,1,8,-1,-6,4,-10,4,-5,-4,2,3,-10,-7,9,-9,-1,-4,-4,3,-9,-4,8,-9,-2,10,-10,7,-10,-10,4,-1,-10,1,2,-3,-3,-10,-4,-3,-1,-10,6,2,2,6,-9,-3,5,-4,10,-8,6,-5,6,-7,-1,-9,-6,2,2,8,-6,-2,-4,8,6,6,-5,-2,-9,9,8,4,8,6,5,-1,2,3,-2,10,8,-9,7,3,2,5,-9,-6,6,-9,5,-1,5,-10,7,-6,6,-10,-9,-10,-7,3,-3,-7,2,-9,5,-3,-7,9,5,-1,-3,5,-3,4,-1,10,-7,-4,-10,-5,4,-9,-3,5,6,-8,-6,-2,1,1,-3,7,-7,-1,3,-5,-4,-9,3,-2,9,-9,-6,-6,-8,-6,-7,3,3,2,-7,-4,-1,7,-7,4,-2,3,-5,2,5,4,-2,-7,-10,2,5,-10,1,10,-8,-5,7,-10,-4,-6,4,-2,-9,-3,7,-6,-3,9,-4,1,-3,-6,-2,-5,-9,-7,2,-9,-8,10,8,-10,-2,5,7,-2,2,-3,2,-3,8,4,-1,1,-5,-7,-8,-6,-7,8,8,-6,-6,5,4,9,-1,-2,-5,-2,-3,-3,-7,1,9,7,9,-8,-10,-3,4,-6,6,-7,-10,-9,-9,6,-1,-9,-8,10,10,2,-4,4,-10,2,8,-5,10,1,-6,9,-6,10,5,-1,1,-6,-2,-2,3,-6,-5,9,-7,-9,9,-2,4,-9,3,5,5,6,2,-10,2,-5,-7,4,-7,6,-9,-1,10,6,-1,-7,4,4,3,-2,7,6,4,-9,3,6,-6,6,8,1,-3,-6,6,-3,-1,6,2,6,-1,6,-2,5,3,4,-3,1,-3,-5,6,-8,4,-6,7,2,-7,-2,-3,5,-10,7,3,-3,4,7,-5,6,-10,-8,4,-7,-10,-8,-7,1,5,3,8,6,2,-4,10,-8,2,-9,8,7,-4,3,1,9,3,-4,5,-5,-5,8,10,-8,-4,1,5,-9,5,10,-5,-2,10,1,9,-4,4,-2,10,7,8,-3,7,2,4,-8,3,-9,-9,10,-8,-2,8,7,3,9,3,6,6,2,4,-10,3,1,4,7,8,4,-3,-4,-6,-2,9,-1,-8,6,4,-8,-7,-8,-10,3,-6,4,8,8,4,-5,7,-7,-8,8,9,10,5,-9,6,-5,-6,4,8,8,-3,3,8,7,-3,1,-3,9,10,4,-7,8,7,-9,-3,7,1,-8,-9,6,-9,5,-7,-9,10,1,-2,5,1,6,-3,2,2,5,-4,-5,-10,-7,5,-4,-1,4,-5,5,-5,2,4,3,5,-9,-1,-1,5,7,-6,-4,-9,-2,-7,2,10,1,-9,9,-2,-2,3,5,-3,-7,-5,-8,9,-1,-9,-10,9,2,-6,4,7,3,1,-7,10,5,-7,2,-5,6,-3,4,10,2,6,5,1,-5,-6,9,8,-3,-1,1,-5,-1,-3,-2,10,10,1,-1,-3,-7,9,-7,3,10,-3,9,9,-10,-6,7,8,4,-1,4,-9,5,8,-5,-9,5,9,2,6,2,6,-10,5,4,8,3,8,7,7,-6,-8,-10,5,-5,-6,4,6,-4,7,10,5,-5,9,-8,-4,3,-3,1,5,-10,-4,-10,-8,1,4,1,3,2,-7,-8,-3,5,4,-6,5,-9,-10,-9,-7,2,-2,-1,-8,-8,-3,8,-9,-4,2,-3,5,3,-5,4,3,-3,10,3,-7,4,1,-10,6,5,-5,2,4,-7,-10,-1,6,1,8,-5,6,6,3,8,-9,5,3,4,-5,-6,-2,9,9,-6,-3,-1,-2,6,5,3,9,8,7,9,4,8,-2,-6,6,-7,4,-8,7,4,-8,-5,-6,8,8,-7,3,-10,2,-6,-9,7,-1,2,9,-7,4,1,-7,-5,-8,-9,8,6,7,-10,4,-2,4,-2,-9,-7,3,2,9,-6,10,8,5,9,7,-8,9,-8,3,6,-1,6,-1,5,-6,6,6,-5,9,3,-7,7,-9,1,-4,-6,7,10,-10,9,8,3,1,-5,4,-6,-8,-9,7,1,-6,-8,-6,-3,3,-4,1,-5,5,-5,-9,-2,-6,-6,-10,6,-3,-8,-3,7,5,9,9,8,-5,5,-6,4,7,-6,-6,-10,9,10,-9,1,8,-9,3,3,2,5,4,-1,9,5,-2,-6,4,-6,-5,-8,5,2,-9,-8,-2,3,2,4,-1,-9,-7,-7,-1,6,8,-8,5,4,4,7,7,-9,-3,-10,-3,9,-4,-3,-9,-10,4,1,8,5,7,8,-1,-3,-2,-1,4,7,6,10,8,2,9,-3,-9,1,-10,2,-7,-8,-9,-6,-8,-10,2,8,1,-3,-3,7,5,-10,8,10,8,-6,6,-2,6,9,-2,-9,-6,3,-9,1,-2,-10,-2,8,8,-9,-8,9,2,4,-6,7,3,1,-4,-5,3,9,-4,7,2,6,-6,-6,4,2,-2,2,-1,-7,-5,-3,8,6,-10,-3,9,-2,8,-3,9,2,4,-9,7,4,-10,10,1,-1,-9,1,6,2,5,-6,-1,-8,-4,-2,4,-5,-2,-4,1,2,-10,7,-8,1], dtype = "int32")#candidate|1820|(1080,)|const|int32
call_1819 = relay.TupleGetItem(func_521_call(relay.reshape(const_1820.astype('int32'), [10, 12, 9]), relay.reshape(const_1820.astype('int32'), [10, 12, 9]), ), 0)
call_1821 = relay.TupleGetItem(func_525_call(relay.reshape(const_1820.astype('int32'), [10, 12, 9]), relay.reshape(const_1820.astype('int32'), [10, 12, 9]), ), 0)
bop_1823 = relay.add(uop_1808.astype('int32'), relay.reshape(var_1807.astype('int32'), relay.shape_of(uop_1808))) # shape=(5, 5, 1)
uop_1827 = relay.acosh(bop_1823.astype('float32')) # shape=(5, 5, 1)
func_871_call = mod.get_global_var('func_871')
func_874_call = mutated_mod.get_global_var('func_874')
call_1830 = relay.TupleGetItem(func_871_call(relay.reshape(const_1812.astype('float64'), [7, 1, 10])), 0)
call_1831 = relay.TupleGetItem(func_874_call(relay.reshape(const_1812.astype('float64'), [7, 1, 10])), 0)
output = relay.Tuple([call_1811,const_1812,call_1814,var_1815,call_1819,const_1820,uop_1827,call_1830,])
output2 = relay.Tuple([call_1813,const_1812,call_1816,var_1815,call_1821,const_1820,uop_1827,call_1831,])
func_1842 = relay.Function([var_1807,var_1815,], output)
mod['func_1842'] = func_1842
mod = relay.transform.InferType()(mod)
var_1843 = relay.var("var_1843", dtype = "float32", shape = (5, 5, 1))#candidate|1843|(5, 5, 1)|var|float32
var_1844 = relay.var("var_1844", dtype = "int32", shape = (65, 9))#candidate|1844|(65, 9)|var|int32
output = func_1842(var_1843,var_1844,)
func_1845 = relay.Function([var_1843,var_1844,], output)
mutated_mod['func_1845'] = func_1845
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1944 = relay.var("var_1944", dtype = "uint64", shape = (10, 7, 8))#candidate|1944|(10, 7, 8)|var|uint64
const_1945 = relay.const([[[-3,-1,10,-7,-6,-8,5,8],[6,-4,-9,1,1,-2,-2,-6],[7,-5,-9,-6,9,4,1,-1],[-1,6,-10,-3,-6,-9,7,-3],[-5,5,-3,7,-6,-5,4,-4],[1,-9,8,-3,-5,3,8,-10],[6,-4,-6,-10,-3,-1,-3,6]],[[-6,-6,-6,-9,1,-5,-7,1],[8,-2,-8,1,9,2,7,-7],[-2,-7,4,-9,5,-6,-9,-6],[2,-5,2,4,6,-5,-4,5],[-7,-4,6,8,9,6,10,-7],[9,5,-6,3,2,6,-10,2],[3,10,1,-3,-3,10,-10,-8]],[[-9,-10,-1,-8,3,-1,-4,10],[-8,7,10,4,8,9,-1,6],[-1,6,9,6,-9,-5,-9,10],[-9,9,-8,5,6,-5,10,-8],[8,-4,1,1,7,3,-4,3],[2,3,6,-8,-1,-1,4,3],[-5,-1,6,-8,-9,-7,6,6]],[[-4,7,-6,-2,10,9,3,6],[-8,-8,-10,-7,7,-1,6,10],[6,-1,4,9,-7,8,10,-1],[4,3,6,-2,-6,6,2,-1],[5,1,7,5,-10,-5,-10,1],[6,5,-5,-6,2,10,-10,-2],[-5,8,5,-6,-8,-7,9,-10]],[[1,-8,-6,7,8,2,2,-5],[-7,9,-6,-6,7,-3,-1,-3],[2,-9,6,4,5,2,-10,-4],[-1,8,9,-4,-9,-3,1,3],[7,-10,9,-9,-2,4,9,8],[3,9,-1,-10,-9,-1,1,4],[7,3,1,-4,2,-4,6,-2]],[[9,-2,-4,3,5,8,9,6],[-7,3,8,1,-5,-10,7,1],[3,8,-6,-5,-4,-9,-6,-8],[3,-2,-1,10,8,-1,1,-10],[-7,-6,-9,6,-5,-4,-1,5],[-4,-2,8,2,-1,10,5,10],[10,5,-8,-3,-7,3,9,-1]],[[-3,-1,4,-8,6,-8,-9,5],[4,-9,2,-3,-10,6,-4,-4],[1,-1,-1,-1,-4,10,-7,3],[4,4,-5,-4,5,4,-8,-10],[6,-3,8,-5,-2,6,-7,-1],[-2,-8,1,-1,3,-10,6,9],[9,10,-5,2,8,-7,8,10]],[[2,-6,-10,-3,-2,6,-1,1],[-7,9,-6,1,8,2,5,-3],[-10,2,-6,2,8,-6,-3,8],[8,3,-8,-9,-2,10,3,-4],[4,2,3,-6,4,-9,-10,6],[-6,-3,3,1,-5,3,-6,-2],[5,10,9,-10,-9,9,-5,7]],[[-4,-6,-2,-2,-9,6,4,-6],[3,-8,4,-5,-6,-4,9,-4],[2,2,8,3,-1,-1,-9,3],[-6,2,10,5,-2,-10,-10,4],[4,-8,-9,10,-1,4,-9,-10],[1,-7,9,-8,-10,-2,3,-4],[1,1,-4,2,1,5,-5,7]],[[7,7,-5,-1,-3,5,8,-7],[1,2,9,1,10,-4,-1,10],[-6,-7,2,-5,-10,3,10,-8],[-9,8,-4,10,5,8,-6,5],[5,-10,-10,4,-7,-8,8,-10],[8,-5,-7,8,-10,7,7,5],[-3,-9,-3,-3,-9,-7,-10,-3]]], dtype = "uint64")#candidate|1945|(10, 7, 8)|const|uint64
bop_1946 = relay.right_shift(var_1944.astype('uint64'), relay.reshape(const_1945.astype('uint64'), relay.shape_of(var_1944))) # shape=(10, 7, 8)
var_1954 = relay.var("var_1954", dtype = "uint64", shape = (10, 7, 8))#candidate|1954|(10, 7, 8)|var|uint64
bop_1955 = relay.less(var_1944.astype('bool'), relay.reshape(var_1954.astype('bool'), relay.shape_of(var_1944))) # shape=(10, 7, 8)
output = relay.Tuple([bop_1946,bop_1955,])
output2 = relay.Tuple([bop_1946,bop_1955,])
func_1960 = relay.Function([var_1944,var_1954,], output)
mod['func_1960'] = func_1960
mod = relay.transform.InferType()(mod)
var_1961 = relay.var("var_1961", dtype = "uint64", shape = (10, 7, 8))#candidate|1961|(10, 7, 8)|var|uint64
var_1962 = relay.var("var_1962", dtype = "uint64", shape = (10, 7, 8))#candidate|1962|(10, 7, 8)|var|uint64
output = func_1960(var_1961,var_1962,)
func_1963 = relay.Function([var_1961,var_1962,], output)
mutated_mod['func_1963'] = func_1963
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2385 = relay.const([[[-6.144060,9.348683,4.834345],[6.289398,-8.221784,-6.268271],[-9.614884,2.384650,-9.231399],[0.800405,-8.419942,-3.158364],[7.503472,-8.525392,6.503961],[9.925806,-5.625597,1.688631],[7.640497,3.986050,-4.873261]],[[-9.857140,-1.917821,5.195234],[-2.833517,-2.015543,6.286396],[-7.526151,-1.716038,9.424818],[-1.139715,8.849962,1.878532],[-3.430941,-6.208082,-9.326000],[-0.939150,4.411547,2.175368],[9.151766,0.148454,-4.348209]],[[-0.168171,-1.828169,2.967175],[7.697738,-8.186183,5.808822],[1.604454,-3.234203,7.852811],[-0.678428,8.728322,-6.086171],[1.865735,2.741673,9.191080],[1.066847,-2.702111,2.290362],[5.493889,2.162270,8.005576]],[[2.560440,-5.517191,-0.339759],[-7.343091,8.257658,6.219277],[-1.391549,-6.287315,8.519489],[8.596815,3.095611,-3.552353],[-6.978115,2.123428,8.791105],[-5.233681,0.873872,-1.831331],[-2.190528,7.261604,6.543994]],[[2.935528,2.640317,2.052269],[-9.659147,0.831411,-7.165592],[-2.590669,3.580354,-6.822256],[-4.433528,3.420466,5.432542],[-2.457323,-7.044187,-9.005520],[-1.725835,-8.949976,9.740131],[-3.715226,-7.089564,3.873280]],[[-4.679619,8.512406,-9.548747],[-6.789430,-5.475220,-4.677882],[-8.414410,2.891502,-7.751705],[-8.648194,-8.839506,-3.767609],[-2.128641,6.632007,-6.122489],[3.508069,-4.520949,-7.672633],[-6.500976,5.203497,-3.674422]],[[-7.517553,-2.645831,-7.697609],[9.361643,6.663403,2.095023],[7.130064,9.832677,-5.583444],[-9.027244,-3.592153,7.420528],[5.657996,4.914628,-5.173359],[-7.166702,-4.359668,7.262505],[-8.082808,9.528882,-4.647281]],[[3.735932,-9.541040,-9.883136],[8.443329,-7.237642,6.817850],[-6.009235,2.344869,7.949141],[-9.431263,8.914772,3.864757],[7.099067,0.463827,5.067526],[6.624035,-9.399804,4.647308],[-3.916768,0.765764,-1.104315]],[[-0.167633,7.063945,3.200699],[-1.079870,-5.082444,-1.776676],[-1.316528,1.150580,8.420872],[7.518730,-5.480474,-6.452957],[-8.409633,-8.443466,-7.004144],[-9.924096,4.948605,-7.127122],[-0.286299,-9.821210,-7.509936]],[[-5.283782,-0.205024,0.467115],[7.220651,-7.658350,-3.660904],[1.703876,-8.608291,-3.244930],[8.014294,0.881112,-3.627506],[6.446194,-9.843503,7.703698],[-3.778607,2.170612,-8.191534],[-0.612642,2.727540,9.041187]],[[-6.641239,-5.079553,-3.745551],[9.988299,0.414927,-5.373784],[-6.520238,5.127256,-3.767311],[-6.034335,-3.150612,9.294653],[-3.142215,-8.954950,0.709293],[2.720188,1.677815,-3.273799],[-5.073093,8.436906,-5.701551]],[[5.891267,2.047969,-6.477361],[5.484140,-5.034330,-4.593878],[-1.889291,-2.629007,9.810922],[-1.087363,1.678948,-2.177937],[8.006801,9.174951,9.369415],[7.570148,-9.931131,7.502549],[-7.408732,1.727066,-0.951645]]], dtype = "float32")#candidate|2385|(12, 7, 3)|const|float32
uop_2386 = relay.asin(const_2385.astype('float32')) # shape=(12, 7, 3)
uop_2402 = relay.cos(const_2385.astype('float32')) # shape=(12, 7, 3)
const_2407 = relay.const([[[-1.084235,5.233907,7.695862],[-0.012207,8.870019,-9.016249],[-0.218203,7.218779,8.404576],[-4.073776,3.198669,-7.761654],[7.402503,3.238156,-0.847352],[2.338469,-4.999053,2.924661],[-7.768541,-3.225497,-5.964919]],[[-6.419287,-0.509543,5.039741],[4.874695,2.178360,-0.534067],[7.549879,-7.112481,4.951926],[0.935886,5.891963,1.308485],[-3.653585,-4.919955,-7.521564],[9.546309,9.802352,-8.871213],[-0.772184,-4.382018,-5.253241]],[[9.495586,-2.067051,7.017037],[-0.627143,-2.217890,-4.735836],[-0.502868,6.617536,2.767984],[4.298836,2.878538,7.657291],[-6.944951,4.412548,9.579173],[5.561932,5.136556,-6.307269],[-6.407569,2.223958,-2.472312]],[[-5.762923,-1.061293,2.621780],[4.774288,9.687112,7.361855],[-2.555078,-0.960253,2.405325],[-0.959963,-4.754007,-8.279036],[-9.128557,8.257851,-2.950830],[9.641580,-1.890633,-4.158657],[-1.899820,-0.453992,-8.562869]],[[-3.705209,6.564883,-5.077216],[-7.490176,-2.792535,-6.250038],[-6.975564,9.143137,6.099637],[4.341978,-3.893871,-8.658486],[-3.727153,1.550326,-4.080316],[-0.243641,-9.449949,7.185045],[-4.106376,1.845471,-6.783165]],[[-7.753538,-8.582558,-3.977907],[1.226580,8.853223,5.096828],[-1.152412,-8.233713,6.865315],[-3.410710,0.972900,1.402211],[7.978330,-6.826487,-0.487826],[4.982636,4.307609,-2.482321],[5.523251,-2.544644,-2.924581]],[[-7.457099,0.845692,-7.872013],[-3.481462,-8.551796,8.314970],[-8.203713,-5.848796,-8.222376],[-4.782088,3.673021,9.487344],[4.974029,3.045832,7.076232],[-9.180543,-2.869934,-4.806296],[-3.319213,2.997969,-8.701984]],[[-6.507649,-6.719361,-9.934599],[-1.232293,-8.335287,-0.074283],[0.843977,-4.834357,9.105353],[-2.866225,5.800331,2.643694],[1.466095,-3.413608,9.699327],[-1.876725,-7.911876,-8.392404],[6.805535,5.709380,-6.251487]],[[7.657919,5.698532,-6.050004],[-5.405048,-3.613468,5.446510],[0.830898,2.760393,-3.353012],[4.611898,9.389295,0.813195],[-6.495680,-0.043981,-4.424706],[4.670441,-1.256728,3.430901],[-8.354901,-3.611181,7.474540]],[[-6.824446,-2.261814,7.215428],[-8.116709,1.949997,-0.697494],[2.684374,7.685370,-4.765662],[-3.576259,-3.846376,-4.967976],[4.397819,7.356343,-0.915289],[-2.516818,0.990415,-0.118155],[6.346959,2.902175,-5.828964]],[[1.893780,-9.006174,0.481613],[-1.839542,3.805802,6.134939],[-6.614536,-2.474276,-5.517388],[-6.166386,4.392102,7.090875],[-4.495670,8.511448,-4.966410],[3.732034,5.981634,-0.185325],[-7.941506,4.577735,6.195408]],[[-5.776681,5.495795,9.691964],[7.910923,-2.952948,-3.220347],[-7.560127,-7.509503,-0.492321],[-2.560709,-6.500853,-1.752025],[-3.649914,5.610556,-2.848381],[-7.583187,-6.279348,2.362533],[9.609076,-2.705828,4.456946]]], dtype = "float32")#candidate|2407|(12, 7, 3)|const|float32
bop_2408 = relay.minimum(uop_2386.astype('float32'), relay.reshape(const_2407.astype('float32'), relay.shape_of(uop_2386))) # shape=(12, 7, 3)
output = relay.Tuple([uop_2402,bop_2408,])
output2 = relay.Tuple([uop_2402,bop_2408,])
func_2423 = relay.Function([], output)
mod['func_2423'] = func_2423
mod = relay.transform.InferType()(mod)
mutated_mod['func_2423'] = func_2423
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2423_call = mutated_mod.get_global_var('func_2423')
call_2424 = func_2423_call()
output = call_2424
func_2425 = relay.Function([], output)
mutated_mod['func_2425'] = func_2425
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2423_call = mod.get_global_var('func_2423')
func_2425_call = mutated_mod.get_global_var('func_2425')
call_2438 = relay.TupleGetItem(func_2423_call(), 1)
call_2439 = relay.TupleGetItem(func_2425_call(), 1)
func_1690_call = mod.get_global_var('func_1690')
func_1694_call = mutated_mod.get_global_var('func_1694')
var_2446 = relay.var("var_2446", dtype = "int32", shape = (585,))#candidate|2446|(585,)|var|int32
call_2445 = relay.TupleGetItem(func_1690_call(relay.reshape(var_2446.astype('int32'), [13, 15, 3]), relay.reshape(var_2446.astype('int32'), [13, 15, 3]), ), 0)
call_2447 = relay.TupleGetItem(func_1694_call(relay.reshape(var_2446.astype('int32'), [13, 15, 3]), relay.reshape(var_2446.astype('int32'), [13, 15, 3]), ), 0)
output = relay.Tuple([call_2438,call_2445,var_2446,])
output2 = relay.Tuple([call_2439,call_2447,var_2446,])
func_2453 = relay.Function([var_2446,], output)
mod['func_2453'] = func_2453
mod = relay.transform.InferType()(mod)
mutated_mod['func_2453'] = func_2453
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2454 = relay.var("var_2454", dtype = "int32", shape = (585,))#candidate|2454|(585,)|var|int32
func_2453_call = mutated_mod.get_global_var('func_2453')
call_2455 = func_2453_call(var_2454)
output = call_2455
func_2456 = relay.Function([var_2454], output)
mutated_mod['func_2456'] = func_2456
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2423_call = mod.get_global_var('func_2423')
func_2425_call = mutated_mod.get_global_var('func_2425')
call_2546 = relay.TupleGetItem(func_2423_call(), 0)
call_2547 = relay.TupleGetItem(func_2425_call(), 0)
uop_2552 = relay.sinh(call_2546.astype('float64')) # shape=(12, 7, 3)
uop_2554 = relay.sinh(call_2547.astype('float64')) # shape=(12, 7, 3)
uop_2561 = relay.atanh(call_2546.astype('float32')) # shape=(12, 7, 3)
uop_2563 = relay.atanh(call_2547.astype('float32')) # shape=(12, 7, 3)
output = relay.Tuple([uop_2552,uop_2561,])
output2 = relay.Tuple([uop_2554,uop_2563,])
func_2568 = relay.Function([], output)
mod['func_2568'] = func_2568
mod = relay.transform.InferType()(mod)
mutated_mod['func_2568'] = func_2568
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2568_call = mutated_mod.get_global_var('func_2568')
call_2569 = func_2568_call()
output = call_2569
func_2570 = relay.Function([], output)
mutated_mod['func_2570'] = func_2570
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2423_call = mod.get_global_var('func_2423')
func_2425_call = mutated_mod.get_global_var('func_2425')
call_2571 = relay.TupleGetItem(func_2423_call(), 0)
call_2572 = relay.TupleGetItem(func_2425_call(), 0)
const_2575 = relay.const([[[0.696483,8.008521,-3.367390],[-9.652149,-6.801472,2.833149],[3.356161,7.955733,2.947633],[8.828465,-6.491193,3.582424],[-5.910565,9.260489,4.028863],[2.542313,7.155201,4.585552],[0.793882,-4.737093,4.869786]],[[-5.184661,-9.377089,-3.535339],[4.464144,0.999241,-8.440968],[-5.301797,1.946157,-1.060640],[-9.214754,2.458205,7.530123],[9.658095,-1.401752,-5.551489],[3.817395,-0.905402,-5.949210],[4.133858,-5.884635,3.658810]],[[1.107489,6.506197,-1.284854],[5.251008,-2.533365,-8.931188],[4.664576,-7.220185,-9.510870],[7.111529,5.590912,6.767410],[-9.807161,-3.808810,4.211106],[-1.894984,4.766133,1.894661],[3.619704,-1.903317,3.627092]],[[1.703890,-9.213329,-7.595553],[-5.385910,-3.746171,-9.046807],[4.993592,-5.343103,1.277134],[-2.957988,-8.939026,-8.331585],[5.286793,-3.222531,8.593987],[-2.580755,-3.417067,-0.326113],[1.155545,1.968883,5.365136]],[[-5.085739,-8.736135,-7.820058],[-1.492096,8.026920,-3.071633],[4.613079,-0.670745,1.272911],[7.889998,-5.915919,-8.881834],[1.300801,-4.046840,0.752934],[-5.070566,-9.150935,-2.645681],[-6.211194,7.498250,9.795416]],[[2.981190,3.543059,-4.598760],[5.038965,4.098583,4.351572],[1.996147,6.497889,1.737315],[6.949228,-2.261738,1.433438],[-5.795467,-1.147512,7.920152],[1.975083,-2.748044,-9.990824],[3.141664,-1.332150,-2.086499]],[[-2.980425,-3.139339,2.578906],[-2.482894,9.691947,-1.827572],[2.488460,8.429653,7.759818],[2.593310,8.152397,8.225155],[-0.611970,-8.386067,2.472373],[-7.348298,-5.693325,-9.577103],[8.131191,-1.532908,4.796508]],[[2.693358,8.096760,-5.544263],[1.985499,3.291043,8.624926],[1.618712,7.483586,3.581546],[-5.381899,-1.070713,-8.176475],[-7.601595,4.687190,3.731418],[5.462959,7.903066,6.357020],[0.683449,6.998293,2.583604]],[[-3.661346,-2.109452,-6.093178],[-6.525920,5.444269,5.993023],[2.953523,4.390017,-0.711529],[-0.466450,8.019278,-1.048397],[1.325029,-0.828596,-8.295886],[-6.364852,-2.662890,-4.977652],[-6.815210,9.252212,9.648336]],[[6.532053,-7.882632,9.906022],[8.269816,-3.347424,7.485818],[1.682027,3.038313,7.311488],[-4.220947,-4.706359,-8.528239],[0.844169,5.980541,1.389380],[-1.439347,-3.935607,3.868339],[4.309906,3.954241,-5.004965]],[[1.887064,7.391303,6.581843],[-7.790816,-2.408875,-6.764361],[-3.798488,2.821415,-4.711135],[-5.809656,-7.018646,3.958442],[0.869273,-2.389791,-9.755454],[7.629724,5.192332,-3.852505],[-5.849383,-5.351745,5.137491]],[[2.242084,-0.308981,-0.798280],[3.488753,0.274022,4.060754],[-9.466387,-8.216184,8.047824],[2.382122,-1.342301,8.072169],[4.089010,2.633680,2.395101],[-6.566572,-7.498245,0.837560],[5.197068,-9.892088,-7.930296]]], dtype = "float32")#candidate|2575|(12, 7, 3)|const|float32
bop_2576 = relay.bitwise_xor(call_2571.astype('int8'), relay.reshape(const_2575.astype('int8'), relay.shape_of(call_2571))) # shape=(12, 7, 3)
bop_2579 = relay.bitwise_xor(call_2572.astype('int8'), relay.reshape(const_2575.astype('int8'), relay.shape_of(call_2572))) # shape=(12, 7, 3)
output = relay.Tuple([bop_2576,])
output2 = relay.Tuple([bop_2579,])
func_2586 = relay.Function([], output)
mod['func_2586'] = func_2586
mod = relay.transform.InferType()(mod)
output = func_2586()
func_2587 = relay.Function([], output)
mutated_mod['func_2587'] = func_2587
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2423_call = mod.get_global_var('func_2423')
func_2425_call = mutated_mod.get_global_var('func_2425')
call_2624 = relay.TupleGetItem(func_2423_call(), 1)
call_2625 = relay.TupleGetItem(func_2425_call(), 1)
func_1690_call = mod.get_global_var('func_1690')
func_1694_call = mutated_mod.get_global_var('func_1694')
const_2629 = relay.const([5,-7,-5,-6,-3,1,-9,-10,5,-5,-2,-8,10,10,-1,9,8,-3,-3,8,-1,6,5,-10,-5,-9,-6,9,8,-5,4,-5,2,-7,-6,-8,4,-7,-7,1,4,10,7,-5,1,-2,-7,-7,-6,1,9,-10,-3,-4,-4,4,-7,7,6,-6,5,3,-6,9,5,3,1,-7,-10,7,-7,3,9,-5,3,3,-1,8,-7,9,-8,5,8,6,-4,4,-7,-3,-9,1,-2,-8,1,2,4,9,4,3,-6,1,-3,-9,-2,-7,5,-2,4,-9,7,-4,-3,-5,5,-10,-9,10,6,2,-6,-8,7,-7,2,-6,7,2,-3,8,6,-8,1,-5,-1,-4,6,-5,1,-3,-8,-2,1,9,-2,1,-7,1,8,2,4,6,9,2,5,-5,-4,-10,-2,6,-5,9,5,9,-9,5,-10,-3,2,9,1,-2,10,10,10,3,5,9,-6,-5,3,10,1,-2,-9,2,-2,4,6,-3,2,-4,-10,8,5,-2,-5,4,6,-1,-5,-4,7,1,6,2,10,6,2,7,-7,-8,1,-10,-5,1,-4,-9,5,-6,5,-10,3,6,-7,-5,-2,-9,-2,-2,-2,1,8,-8,-1,5,-2,1,-8,-3,10,3,8,8,1,-10,-1,-8,2,-5,10,-1,4,10,-8,8,8,3,3,9,-1,8,10,2,-2,7,6,6,1,-1,8,9,3,5,5,-10,3,-10,-4,6,-9,1,2,-5,-5,2,-10,-1,-4,8,10,-8,8,5,10,9,8,-7,7,-3,-2,6,-5,4,-3,3,-2,6,8,-1,7,-10,-2,-3,-10,-3,-1,-4,-8,-10,-1,-6,-1,-3,6,-9,-6,5,-5,8,7,10,2,6,2,-1,-8,-6,-9,-10,-2,7,-10,-7,5,2,9,-1,6,9,5,1,-8,4,5,-4,5,-7,6,-9,1,4,-3,-9,4,7,9,-5,-4,-6,-3,7,2,2,-8,-10,4,9,8,-8,-7,4,-4,4,-5,6,1,-9,-9,-2,4,8,-5,-7,4,-5,-10,-6,7,-2,-10,-2,6,-5,-4,2,8,-6,-6,8,-8,-8,2,-5,-3,1,7,-4,7,-8,6,-7,-9,-7,-7,2,8,4,-5,8,5,-9,7,7,-3,-4,-2,-3,-5,-5,-7,-6,10,-6,-10,-3,6,-9,-7,6,9,9,1,4,4,8,10,-6,-5,-5,7,-10,-10,-5,-3,-9,10,-6,1,7,-1,5,-1,2,-1,1,-5,-10,-7,-3,7,5,-9,-8,-10,6,-2,-3,-1,-8,-1,2,-7,-10,9,-7,5,-6,2,7,-1,-5,1,5,-2,6,-2,-9,3,5,5,2,5,-8,-2,-1,5,7,4,2,6,9,-8,-7,2,-7,-6,-8,-7,-8,-1,-3,2,6,5,-4,-6,9,5,-7,1,-3,2,-6,10,-9,2,1,5,2,3,-1,10,5,9,10,5,-5,-7,-10,-4,9,-5,9,-8,-10,-6,-2,-10,-2,8,-8,-5,3,-3,-8,2,-4,10,6,6,-8,6,1,-6,6,-4], dtype = "int32")#candidate|2629|(585,)|const|int32
call_2628 = relay.TupleGetItem(func_1690_call(relay.reshape(const_2629.astype('int32'), [13, 15, 3]), relay.reshape(const_2629.astype('int32'), [13, 15, 3]), ), 0)
call_2630 = relay.TupleGetItem(func_1694_call(relay.reshape(const_2629.astype('int32'), [13, 15, 3]), relay.reshape(const_2629.astype('int32'), [13, 15, 3]), ), 0)
func_1537_call = mod.get_global_var('func_1537')
func_1540_call = mutated_mod.get_global_var('func_1540')
var_2645 = relay.var("var_2645", dtype = "float32", shape = (2250,))#candidate|2645|(2250,)|var|float32
call_2644 = relay.TupleGetItem(func_1537_call(relay.reshape(var_2645.astype('float32'), [15, 10, 15])), 0)
call_2646 = relay.TupleGetItem(func_1540_call(relay.reshape(var_2645.astype('float32'), [15, 10, 15])), 0)
output = relay.Tuple([call_2624,call_2628,const_2629,call_2644,var_2645,])
output2 = relay.Tuple([call_2625,call_2630,const_2629,call_2646,var_2645,])
func_2648 = relay.Function([var_2645,], output)
mod['func_2648'] = func_2648
mod = relay.transform.InferType()(mod)
mutated_mod['func_2648'] = func_2648
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2649 = relay.var("var_2649", dtype = "float32", shape = (2250,))#candidate|2649|(2250,)|var|float32
func_2648_call = mutated_mod.get_global_var('func_2648')
call_2650 = func_2648_call(var_2649)
output = call_2650
func_2651 = relay.Function([var_2649], output)
mutated_mod['func_2651'] = func_2651
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2568_call = mod.get_global_var('func_2568')
func_2570_call = mutated_mod.get_global_var('func_2570')
call_2655 = relay.TupleGetItem(func_2568_call(), 1)
call_2656 = relay.TupleGetItem(func_2570_call(), 1)
var_2676 = relay.var("var_2676", dtype = "float32", shape = (12, 7, 3))#candidate|2676|(12, 7, 3)|var|float32
bop_2677 = relay.right_shift(call_2655.astype('uint16'), relay.reshape(var_2676.astype('uint16'), relay.shape_of(call_2655))) # shape=(12, 7, 3)
bop_2680 = relay.right_shift(call_2656.astype('uint16'), relay.reshape(var_2676.astype('uint16'), relay.shape_of(call_2656))) # shape=(12, 7, 3)
uop_2689 = relay.log(bop_2677.astype('float32')) # shape=(12, 7, 3)
uop_2691 = relay.log(bop_2680.astype('float32')) # shape=(12, 7, 3)
func_1719_call = mod.get_global_var('func_1719')
func_1721_call = mutated_mod.get_global_var('func_1721')
const_2700 = relay.const([[-9.761163,6.378484,-8.894489,-8.527408,3.159908,7.383152],[-1.000859,2.190902,-0.385975,1.320849,-2.281342,1.617221],[1.501175,1.825774,-5.190094,-3.692131,8.698867,-8.747727]], dtype = "float64")#candidate|2700|(3, 6)|const|float64
call_2699 = func_1719_call(relay.reshape(const_2700.astype('float64'), [1, 6, 3]))
call_2701 = func_1719_call(relay.reshape(const_2700.astype('float64'), [1, 6, 3]))
output = relay.Tuple([uop_2689,call_2699,const_2700,])
output2 = relay.Tuple([uop_2691,call_2701,const_2700,])
func_2703 = relay.Function([var_2676,], output)
mod['func_2703'] = func_2703
mod = relay.transform.InferType()(mod)
mutated_mod['func_2703'] = func_2703
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2704 = relay.var("var_2704", dtype = "float32", shape = (12, 7, 3))#candidate|2704|(12, 7, 3)|var|float32
func_2703_call = mutated_mod.get_global_var('func_2703')
call_2705 = func_2703_call(var_2704)
output = call_2705
func_2706 = relay.Function([var_2704], output)
mutated_mod['func_2706'] = func_2706
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2568_call = mod.get_global_var('func_2568')
func_2570_call = mutated_mod.get_global_var('func_2570')
call_2722 = relay.TupleGetItem(func_2568_call(), 0)
call_2723 = relay.TupleGetItem(func_2570_call(), 0)
func_790_call = mod.get_global_var('func_790')
func_792_call = mutated_mod.get_global_var('func_792')
const_2733 = relay.const([-4.246781,-5.318651,-2.498963,2.936780,-2.228631,-0.175842,-6.076296,-7.038704,3.610739,1.942012,-8.087674,4.989800,2.383773,-8.954619,-9.618057,-3.322784,3.026410,7.937983,3.791585,-6.986591,7.196567,8.836848,-3.576438,-6.253953,8.498726,5.307606,-2.848394,3.123904,8.911910,-5.334269,7.378744,-2.600422,6.423647,-0.401919,-9.425701,-6.593275,-4.000060,1.130450,6.044823,-9.607294,5.258267,6.119396,-6.119758,4.067777,-7.343018,-7.916961,-9.138792,-1.810491,-9.522642,-8.840335,0.722504,-0.641302,1.214562,6.003595,2.064471,8.746956,6.873039,-5.604380,6.406269,6.755458,-8.326208,8.695312,-6.972861,-2.996790,4.133607,9.938859,-1.938820,-3.106793,4.849223,-8.087362,6.036561,-2.909824,-3.669318,-5.983869,-6.060336,-5.030189,1.812393,-4.631378,3.498803,8.057845,3.738898,-7.909988,-7.148705,5.568184,-7.402086,4.762359,-5.798699,-1.732191,-0.562601,-3.722353,-8.409233,1.687689,8.169385,5.640462,2.966698,4.882530,4.325582,-8.553051,-6.662213,8.896608,0.574149,-7.966168,-6.238211,9.956946,8.512319,-1.138102,-8.884291,-0.871873,1.983487,-3.902068,-0.293626,8.720466,2.821240,3.910273,-4.383653,-2.388904,6.455294,5.987065,5.812612,0.773596,-7.620745,-1.096462,0.986057,-6.962267,-9.470182,0.673370,-5.268048,-3.165777,-0.979223,3.324635,4.083680,2.221931,-2.838691,-2.823967,0.538037,9.450551,3.484418,-9.757250,-9.953488,5.259682,4.207622,1.165357,-8.296008,-2.978840,8.930100,9.756501,5.464189,-5.190454,9.087404,-6.305259,-7.894664,-6.726005,0.642783,-5.542606,-2.030914,0.584046,2.329612,9.940719,-5.387725,-9.942129,-2.290748,-1.948203,-1.893980,0.102486,-3.395162,-3.208708,4.117689,-0.113859,0.763869,-6.966779,8.797434,-4.695504,-6.811878,-6.946601,7.172488,7.940577,-8.006804,8.521914,-6.177089,-1.373144,-8.420379,3.365381,0.283001,8.267587,-8.160547,-6.194129,3.327399,-6.173993,9.294807,-3.623598,-1.233946,-4.635101,-4.890435,0.040486,-3.900863,0.745198,2.104412,0.353411,-0.624450,5.111245,-6.892281,-9.585240,-9.740183,-7.136148,0.169535,-7.520993,-6.608788,-0.705033,5.720737,6.171591,2.535612,-4.232210,8.459614,-0.801199,-4.605675,-9.004061,0.597566,-1.217758,-5.458694,6.854246,-0.161897,0.853603,-6.104727,8.467196,4.585071,-8.074058,8.052730,5.193321,-4.978635,-0.965665,-9.943308,6.783010,-8.923294,4.553821,-1.696873,-5.101465,5.518322,6.841634,-5.774356,6.476308,5.731441,-1.528591,-5.702050,9.992486,2.639885,-6.142155,6.288238,-1.696275,1.669321,-1.273863,-7.689705,-2.876600,-0.901152,-8.116063,-6.447614,-6.386599,5.062594,-7.274111,0.494728,-5.285141,-5.292602,-3.087014,-3.748081,0.514415,-3.686089,-8.013614,-9.034675,-8.156270,-3.763451,1.028630,-4.032899,3.546030,1.956532,-2.974482,3.790529,2.823516,0.110925,4.560707,-1.274833,8.434096,-4.829200,-2.441715,5.713651,1.213897,9.708660,-3.323379,7.864286,3.295135,-0.034963,6.853049,-7.359673,3.479620,-7.635729,9.322995,6.485627,2.513581,-7.262714,-2.796295,6.213181,-2.578126,0.327925,-2.154650,-3.740278,0.662145,6.044493,-9.892348,1.160114,1.745768,9.438942,1.160411,-8.638182,-3.322946,-6.864371,-3.318168,7.227511,-4.016351,7.879219,9.146470,-5.863605,-0.342865,9.869179,4.504402,-2.404511,-5.150524], dtype = "float64")#candidate|2733|(324,)|const|float64
call_2732 = func_790_call(relay.reshape(const_2733.astype('float64'), [9, 4, 9]))
call_2734 = func_790_call(relay.reshape(const_2733.astype('float64'), [9, 4, 9]))
output = relay.Tuple([call_2722,call_2732,const_2733,])
output2 = relay.Tuple([call_2723,call_2734,const_2733,])
func_2745 = relay.Function([], output)
mod['func_2745'] = func_2745
mod = relay.transform.InferType()(mod)
mutated_mod['func_2745'] = func_2745
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2745_call = mutated_mod.get_global_var('func_2745')
call_2746 = func_2745_call()
output = call_2746
func_2747 = relay.Function([], output)
mutated_mod['func_2747'] = func_2747
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2586_call = mod.get_global_var('func_2586')
func_2587_call = mutated_mod.get_global_var('func_2587')
call_2801 = relay.TupleGetItem(func_2586_call(), 0)
call_2802 = relay.TupleGetItem(func_2587_call(), 0)
func_1690_call = mod.get_global_var('func_1690')
func_1694_call = mutated_mod.get_global_var('func_1694')
var_2808 = relay.var("var_2808", dtype = "int32", shape = (585, 1))#candidate|2808|(585, 1)|var|int32
call_2807 = relay.TupleGetItem(func_1690_call(relay.reshape(var_2808.astype('int32'), [13, 15, 3]), relay.reshape(var_2808.astype('int32'), [13, 15, 3]), ), 0)
call_2809 = relay.TupleGetItem(func_1694_call(relay.reshape(var_2808.astype('int32'), [13, 15, 3]), relay.reshape(var_2808.astype('int32'), [13, 15, 3]), ), 0)
output = relay.Tuple([call_2801,call_2807,var_2808,])
output2 = relay.Tuple([call_2802,call_2809,var_2808,])
func_2814 = relay.Function([var_2808,], output)
mod['func_2814'] = func_2814
mod = relay.transform.InferType()(mod)
mutated_mod['func_2814'] = func_2814
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2815 = relay.var("var_2815", dtype = "int32", shape = (585, 1))#candidate|2815|(585, 1)|var|int32
func_2814_call = mutated_mod.get_global_var('func_2814')
call_2816 = func_2814_call(var_2815)
output = call_2816
func_2817 = relay.Function([var_2815], output)
mutated_mod['func_2817'] = func_2817
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2824 = relay.var("var_2824", dtype = "float64", shape = (3, 1, 7))#candidate|2824|(3, 1, 7)|var|float64
uop_2825 = relay.atan(var_2824.astype('float64')) # shape=(3, 1, 7)
uop_2834 = relay.cos(var_2824.astype('float64')) # shape=(3, 1, 7)
output = relay.Tuple([uop_2825,uop_2834,])
output2 = relay.Tuple([uop_2825,uop_2834,])
func_2836 = relay.Function([var_2824,], output)
mod['func_2836'] = func_2836
mod = relay.transform.InferType()(mod)
mutated_mod['func_2836'] = func_2836
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2837 = relay.var("var_2837", dtype = "float64", shape = (3, 1, 7))#candidate|2837|(3, 1, 7)|var|float64
func_2836_call = mutated_mod.get_global_var('func_2836')
call_2838 = func_2836_call(var_2837)
output = call_2838
func_2839 = relay.Function([var_2837], output)
mutated_mod['func_2839'] = func_2839
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2745_call = mod.get_global_var('func_2745')
func_2747_call = mutated_mod.get_global_var('func_2747')
call_2895 = relay.TupleGetItem(func_2745_call(), 1)
call_2896 = relay.TupleGetItem(func_2747_call(), 1)
func_2423_call = mod.get_global_var('func_2423')
func_2425_call = mutated_mod.get_global_var('func_2425')
call_2899 = relay.TupleGetItem(func_2423_call(), 1)
call_2900 = relay.TupleGetItem(func_2425_call(), 1)
output = relay.Tuple([call_2895,call_2899,])
output2 = relay.Tuple([call_2896,call_2900,])
func_2909 = relay.Function([], output)
mod['func_2909'] = func_2909
mod = relay.transform.InferType()(mod)
mutated_mod['func_2909'] = func_2909
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2909_call = mutated_mod.get_global_var('func_2909')
call_2910 = func_2909_call()
output = call_2910
func_2911 = relay.Function([], output)
mutated_mod['func_2911'] = func_2911
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2568_call = mod.get_global_var('func_2568')
func_2570_call = mutated_mod.get_global_var('func_2570')
call_2996 = relay.TupleGetItem(func_2568_call(), 1)
call_2997 = relay.TupleGetItem(func_2570_call(), 1)
func_2648_call = mod.get_global_var('func_2648')
func_2651_call = mutated_mod.get_global_var('func_2651')
const_3001 = relay.const([[-1.010949,-7.139264,0.613682,-3.701897,-5.948727,2.144910,-2.718248,4.801541,1.666702,-3.021059,-2.983527,-4.797488,7.323394,1.444763,0.044884,8.556087,4.472507,-7.382884,-0.940889,0.655104,8.581442,-2.919960,-6.029011,-0.686556,0.613746,-6.034483,-4.373745,-7.826808,0.121069,0.956276,0.296090,-8.185550,-4.284885,8.345258,3.691961,8.257861,0.281802,-9.108809,2.973796,6.942847,4.056505,-5.013254,-8.652370,7.704270,8.660096,3.556954,-0.791428,2.631116,-7.302004,3.537626,1.279518,-6.216605,-1.210189,-6.725839,-1.187681,-6.658143,2.253432,5.648627,-1.729654,9.390241,5.507565,-5.488747,-8.695811,3.682353,-7.886865,-4.656160,6.032796,7.251690,-6.826878,-9.389576,2.204079,-5.044008,2.654167,9.971612,1.325999,5.601978,2.013884,-3.794956,2.175721,-5.920018,-8.271646,6.089839,3.939203,7.150551,-6.757175,-0.868124,0.906903,1.514568,-0.482970,-2.481235,6.140660,9.610096,5.681679,4.894810,3.377550,-5.631478,-5.707701,6.138174,-6.309660,0.124692,-8.721651,1.625468,5.492092,2.528933,5.815436,2.777616,2.134053,2.059597,-0.679817,-2.881025,-6.773908,9.278866,-8.606904,-9.443314,4.526983,-3.974771,-0.348832,9.031169,-7.430820,9.629517,-9.682777,-5.394785,0.522600,-3.915291,-1.609273,1.798865,-6.048192,-3.864889,-7.696498,7.409630,-6.121105,4.796021,9.117204,-0.513474,5.139755,8.116204,-3.729251,-4.284245,1.011274,3.330148,5.656850,-9.260615,4.736190,-8.347889,-4.472915,-2.098081,4.742149,3.614466,-1.611866,-2.616191],[1.415406,-8.385740,-2.074881,-1.511998,6.795788,8.392397,-2.897767,-4.751654,-2.300486,4.085559,8.978892,-9.376877,-2.189571,6.299049,3.578003,-6.701752,-7.257990,9.596681,9.510706,-1.236985,9.466602,0.636152,-8.081066,-2.738376,7.262554,8.722150,2.519549,1.124355,5.818978,-2.481631,3.528954,6.717015,4.595586,-0.329686,-0.563610,-6.028228,-5.517008,-5.823420,3.976629,-8.879632,-4.028178,6.093895,0.310481,3.254361,-5.490791,6.377562,6.038431,8.130249,2.123951,5.215767,-5.210980,-8.533232,-7.842985,9.161287,0.667864,-8.650467,4.265137,5.420254,-7.024428,6.278942,-0.733957,-2.997988,-3.315333,1.772104,6.265208,2.186496,-0.181337,1.226020,-3.119384,-9.879736,-9.548650,-6.671009,1.623806,-6.387585,-6.227495,-7.215519,-7.358234,-9.137995,-4.604690,2.371611,5.437416,1.037400,-5.713926,-5.181176,-1.500872,-3.074311,2.821322,-5.558602,-0.719326,-2.808700,2.548777,9.189339,-1.133252,-4.987123,2.712596,-8.752820,-3.232207,-9.403948,-6.770172,-3.351830,-8.863349,5.570376,1.258222,-4.241154,-0.963111,-8.381971,2.819212,-3.499104,-3.691202,-9.065830,-4.404106,-7.139795,-5.671725,3.007241,7.826463,0.145880,-4.032951,1.645536,3.742026,3.544676,-4.107513,4.375105,9.086604,9.370488,-9.676274,-8.673221,0.124336,5.439173,7.185117,-8.660311,-6.434918,-1.644128,9.918266,-0.178364,2.738059,-7.331960,-0.775011,7.694841,4.623458,8.436680,-4.965903,-1.044651,-7.604084,-4.553248,-2.464491,-9.683542,-8.042174,7.420389,-8.240119,-0.823886],[0.094292,7.034617,-0.563970,-7.872946,-0.915182,6.276106,9.316210,-3.501857,-6.730828,6.251586,9.832145,7.721663,0.595043,3.149917,9.945291,2.654344,8.117489,-1.036356,-2.048217,4.364973,-1.843166,9.639156,0.792897,7.564759,-0.474125,-4.452561,-0.052664,-4.065744,6.507307,3.368254,2.593570,1.458931,5.878537,2.342137,-7.565748,-9.838700,3.770187,-9.665715,5.373827,-0.652853,3.239583,-2.405762,8.468370,4.507576,-7.224023,6.525944,1.056444,-6.746036,-7.937162,-8.202753,7.480928,5.516511,6.185244,3.961212,5.590226,-7.079151,-1.900394,-1.013732,1.005392,-6.820668,-6.019679,-7.895405,0.006235,-6.403048,-2.732140,-3.467283,-3.298465,-9.415504,-2.412391,-6.179311,-0.182711,-5.649451,7.485159,-5.441180,-4.328287,4.012053,-2.692109,-0.345005,-7.447121,0.426310,-1.748601,-5.184141,5.113776,-0.700618,-6.037958,1.325861,8.227732,-5.416605,-4.076236,-9.349424,3.614469,8.672874,9.307557,2.069974,-3.446190,-6.916696,5.575871,3.176256,9.113948,-1.958847,7.788419,-9.939972,4.039278,3.266372,2.671067,-5.502701,3.317639,-5.835681,3.663049,0.752920,-5.864026,-2.859548,-1.553767,-4.324030,5.037092,-1.212888,-2.396825,-3.367079,1.842008,1.524862,2.786140,4.740935,8.923180,5.160068,-8.209395,6.007108,-3.280924,-3.405191,5.123145,-5.781529,0.763777,4.782760,-3.072423,7.448341,-0.838800,-5.044432,-4.608184,-1.639820,-9.584767,-3.733715,-0.097803,8.309673,-5.759788,-4.369380,4.036477,-6.121568,8.001487,-9.053271,0.975055,9.510548],[3.238289,7.962232,7.490393,5.215874,8.583227,-5.621897,5.002734,-6.302220,5.834097,-1.860159,-1.128681,9.656583,-9.154336,1.801366,7.114050,7.558268,-0.176581,-0.073923,9.713526,1.915202,-9.089180,-7.177909,-4.989598,8.595423,5.695736,-8.924586,-0.537743,8.358630,5.737150,4.008705,9.691789,1.052227,6.695264,-6.703694,-7.713791,-9.348764,4.876058,-5.331526,3.751767,-8.827954,2.093026,-4.745617,-4.358486,5.775516,-6.207259,7.685895,3.435362,-3.508570,-2.491274,0.124405,-1.958550,4.438013,1.438296,0.505235,7.201987,3.801740,-8.933268,9.220513,-5.225456,4.632472,9.760825,-4.351301,2.482854,4.568635,7.299103,-7.407498,-0.993988,-0.952034,-7.769631,8.040590,3.170259,-2.999629,-1.908661,-8.597805,-9.549592,-5.080860,-3.643285,9.472023,1.204852,-1.865608,8.254460,-9.474975,-6.578430,9.324972,4.661027,8.701597,-4.241109,-9.121092,4.499886,6.655620,-4.428185,1.610377,-6.481174,9.756599,8.822878,4.082776,-4.361113,2.150622,-7.300733,1.822112,8.044499,-2.970290,0.615814,-5.508256,4.207189,-9.658727,2.006446,0.564921,-5.490854,5.925828,-3.215976,0.185479,2.538811,4.887768,2.249932,9.289954,2.750353,-8.265979,-3.648419,8.312078,-9.996133,-7.737026,4.448006,-2.905253,-3.014802,-0.531267,-9.789282,7.078795,-3.255371,5.128265,-5.924315,-7.753419,-4.053478,-1.966871,7.151913,-8.171100,5.082317,-6.818823,-4.333979,9.537914,-2.762142,2.265644,7.548548,-0.038926,-1.827092,2.833542,-0.513016,-4.643027,6.362276,-8.348729],[5.559198,-7.556506,0.297406,7.044789,9.712109,-6.005495,-7.156836,-1.230412,-0.771169,8.841213,-8.908850,1.036781,-0.975660,2.059680,-6.442024,9.846001,3.262070,9.708507,-8.777229,-3.663105,1.583420,3.544529,7.902385,9.535003,5.708615,-6.705683,1.252563,-8.721353,5.708875,8.388206,3.736928,9.173614,9.422453,8.915511,-3.707866,9.572976,-4.141414,7.594733,2.352839,-2.636908,-7.121510,-8.810182,-1.390533,0.312505,8.041484,-1.918595,0.212664,4.058018,-0.706258,-3.924735,-0.621857,-1.328320,9.028481,-7.398266,-7.163993,5.456241,2.791449,-7.142048,-4.188892,-4.424458,7.443400,2.436794,-6.183380,6.490659,9.178793,1.747696,6.052976,6.199040,-6.441547,8.336841,-2.230238,7.616192,4.791480,4.978658,7.770841,7.418743,-3.816404,-7.291271,8.452629,7.788102,3.602496,-9.187062,-5.081646,2.058792,-8.657692,6.940576,5.188931,-5.031968,4.848883,4.853730,6.932890,0.224784,2.697731,3.725400,3.578311,1.454335,5.501888,8.813399,1.349061,-7.906573,-1.405990,-4.499689,-3.567570,-1.083426,5.310820,8.316308,-3.316176,-6.558028,-0.627417,-0.307308,8.730046,-3.520478,2.942677,-2.492786,9.039653,-0.012505,1.332584,9.993767,-2.367720,5.119928,1.553097,-8.508738,8.370543,8.003275,-6.919175,7.261689,-0.312771,0.068500,0.052893,-2.894221,-7.851122,-1.190711,-2.896309,-6.084337,1.406249,-0.351610,-5.740050,-0.056829,5.995970,9.305813,6.453489,6.191560,-0.057765,-5.933480,1.053274,-1.296432,7.871834,6.107766,7.000684,-5.945874],[2.312204,9.169947,-5.863481,7.699962,-6.158947,3.777875,4.499908,3.313979,6.417679,8.206610,-7.141123,8.898727,3.113235,9.282541,-9.122033,3.753081,-8.513098,6.330770,0.663908,3.917581,8.931427,7.625427,7.076599,-9.170909,-9.242066,9.971964,-0.146697,1.022838,5.127799,-7.746754,-6.335515,9.375663,-6.294240,6.704973,4.312024,0.641220,-3.285290,4.658811,1.132407,-2.712848,-5.107221,5.802355,-3.799869,-5.061304,2.910844,1.284871,-8.928426,1.679135,6.277059,-3.731632,9.146730,2.744798,6.413551,1.580649,0.165546,-5.230671,-9.676462,-4.190953,-5.753532,-7.309506,6.756879,-6.391181,9.500914,-6.301736,-7.039522,3.604007,0.047439,5.457217,-2.637380,6.539351,3.291035,7.945898,0.307648,-9.647205,-0.091935,-8.279110,9.738449,1.380659,-3.407529,9.411305,1.098410,-1.148847,-3.358994,6.746556,-7.640160,-9.077002,-2.736478,9.447395,9.513851,-7.797495,8.574961,5.914694,9.785224,3.798772,-8.746792,-0.863489,4.283706,-1.003082,0.670793,-1.187625,2.394828,4.041048,-8.542950,5.145117,-2.563519,9.531631,-3.101383,-4.196962,-1.552522,3.690271,2.843581,-8.473269,-8.996268,-5.298209,-6.305479,-5.632749,5.718716,7.157895,-2.143869,5.744703,-4.704868,-0.327637,1.174434,-8.544034,-3.043681,-4.838982,-4.492693,7.903819,-0.983075,-4.180545,-3.066170,-7.246340,-5.101539,-3.474817,-0.792514,2.868686,-4.609775,-4.426879,6.986442,2.422937,-2.699606,5.978367,-1.497060,-3.841585,-4.098497,8.590495,8.025491,-4.605479,-7.469881,-3.326913],[-3.948914,0.263693,-2.036903,-0.544276,7.900192,7.607983,8.512708,-1.290092,7.662193,-7.485972,9.146403,9.268958,1.895316,-5.813942,-7.529450,4.491635,-3.428332,8.296515,-8.659645,-9.011192,-4.710793,6.672801,-2.647244,9.789716,-1.198252,1.768772,-0.848350,-9.789442,-1.258452,6.967561,-2.120453,1.603305,2.988777,5.167019,-6.599030,3.130250,6.997882,9.813684,-2.421478,-4.673285,-1.109501,-7.032160,-7.159891,6.157490,4.771255,1.162250,6.031243,6.412050,8.443482,-2.218961,-8.900929,-5.218466,-2.690857,-3.289155,6.383687,-6.854039,-2.785662,-5.895135,9.258466,-8.652738,-1.683428,-7.622327,-8.923456,-4.636056,-9.094402,-8.773404,8.888932,1.703447,-5.549071,-0.671398,-6.747550,4.983817,-5.143693,6.685000,3.095819,-4.078366,2.905945,6.438319,-3.947840,4.079192,-4.731151,-9.866407,2.055257,-3.181023,3.500807,5.921656,9.017281,-0.185016,-7.570398,9.214179,9.374323,5.680698,2.120356,7.562387,-6.408251,-7.313584,-7.933494,-9.526109,-1.355583,9.944428,-7.933655,3.720035,4.760057,6.326564,8.127878,-5.813249,-0.054176,0.566753,-4.779244,-4.164870,-5.223876,-0.116940,5.300550,-6.629172,3.147310,1.200267,-3.425863,6.588482,-7.726724,2.775392,9.047277,7.234961,5.808102,6.988989,2.784525,-7.126980,3.256916,-0.531193,-2.420886,-6.867125,-8.173047,6.910311,0.749923,-7.136070,1.436886,5.246482,4.013548,-5.971846,-1.493160,2.289355,5.880865,3.554403,-1.112058,2.990929,-7.702741,-8.798178,0.091232,0.278792,-0.372071,3.582568],[3.457663,-6.122282,2.695265,8.615205,7.382671,2.183778,-0.400892,2.000841,-5.732234,4.502649,-5.835680,7.808506,1.046055,-7.287096,-0.079901,3.812926,7.544949,8.600075,5.509390,-6.328102,6.988729,2.910221,-6.619251,-7.395616,-2.708766,2.072963,8.589276,-9.052259,6.110960,-3.354380,-5.278908,8.503095,7.725982,-6.793489,9.960180,9.170973,-7.892112,-0.838249,9.172819,0.541341,2.603209,0.230897,8.328634,2.511794,-5.518166,0.532102,-5.301812,-6.226099,5.152919,-1.364105,8.242645,3.183446,-2.542256,-4.684701,-4.340033,0.038376,-0.257311,-2.297376,7.821948,-7.909914,2.227208,-9.129237,-9.249337,0.427172,-4.591766,-1.873029,-6.970743,6.478882,-0.941046,-5.230106,-4.637183,-2.325030,-6.911984,-6.247191,-7.816001,-0.117332,-9.047938,7.602379,4.372442,-2.634095,-4.619655,-3.191210,-4.273864,-7.671828,0.624789,0.997926,-6.832368,5.420847,-0.999164,-7.453287,-7.461169,-4.833879,-0.715873,-6.685788,8.041276,5.111962,5.623609,-2.878227,6.132075,-6.278788,8.031545,-9.350331,8.679309,3.071110,-8.213549,2.635074,-2.275588,8.328491,2.055718,-8.152322,5.579922,5.511954,8.988815,-7.863204,-7.992456,-4.185450,4.629717,2.359132,-7.896745,-5.819841,8.161165,7.510765,-7.596682,-2.215514,-8.516250,-4.392819,-9.561300,8.535462,6.842978,-0.789341,-0.673689,2.381012,-8.884013,6.485917,5.014737,7.013451,7.291370,-8.411915,1.653113,6.300236,-5.477349,9.970992,3.767453,-4.764455,5.560259,-7.148615,8.323707,2.166329,2.393298,-6.063936],[-8.715608,2.923797,6.220596,4.567857,-4.188739,-5.246480,-9.814761,1.871568,-2.868968,-5.071929,-4.700877,-3.612404,8.032259,1.159189,-9.857731,1.648458,0.626485,-1.907508,9.639281,-0.390832,-2.645318,-1.150440,-0.500115,6.943271,2.675806,-7.364935,-3.723315,-8.008266,-2.439300,-7.532929,9.971800,-0.694536,-4.458379,0.389362,-5.091749,6.563065,1.524188,-6.124740,3.187295,-8.907949,7.011660,4.403878,6.233193,3.893939,3.583886,-8.281016,-7.944507,-8.220676,5.786128,-9.447658,7.279505,1.707988,2.940039,-9.743093,0.495816,9.414029,-1.076196,-2.255584,-2.384708,1.182168,-5.136576,2.614508,-6.348973,4.364125,9.033704,-0.067522,-8.548416,5.359617,7.972973,-9.154283,9.872982,4.440657,-8.287690,6.077691,-9.786529,2.874470,0.336871,1.887882,-2.904058,4.759926,-0.053791,-7.824214,0.997026,-3.756937,8.275468,3.585302,-7.049582,-0.173308,0.470817,-6.687446,4.302166,-8.306808,-6.302512,-0.899294,-5.458607,-1.353664,4.215571,7.559847,8.676218,3.250636,6.745841,4.022295,-0.328140,-3.628085,2.209730,6.774055,-6.050732,8.200380,5.975001,2.347167,-4.216522,-6.891828,-7.625868,-1.909931,9.533674,2.490699,5.176884,-8.672978,-0.490820,9.418568,4.174145,-6.097121,-5.231100,-0.846826,-4.919748,5.019178,-0.216010,-0.024698,-1.975107,-0.151419,2.282494,-0.879682,-6.069097,-7.257901,7.213396,-3.506645,-6.725256,4.135506,1.345908,-0.111057,9.363518,-7.071283,6.415249,8.955284,9.653064,8.583538,5.008166,0.363839,-2.209670,-6.206532],[6.789402,6.400184,-6.208960,-1.136140,-9.463111,2.480731,0.457029,3.806707,-8.826877,-0.311580,-2.376391,-7.925424,9.021648,7.318133,1.449621,7.050810,8.492002,-7.599188,3.658144,3.903608,2.288510,-4.035489,-2.144064,8.408143,-6.293597,-4.720103,8.582224,-0.993112,5.072006,8.016384,3.830633,0.232860,8.111220,-6.426101,0.192791,-5.150863,-6.921069,3.045016,4.611797,-4.554380,-3.168035,-5.169200,2.680109,-8.372746,4.461442,-9.279497,-6.899276,9.715176,1.797696,1.315373,4.816252,-6.044786,-0.596705,-8.695959,-5.623781,8.996256,6.769931,4.891956,-1.523111,9.907187,3.532513,-9.042006,-7.127345,4.288282,-6.536685,-1.817887,-9.768152,9.541197,-7.276569,-0.872873,-2.118466,5.355461,-6.125962,7.782173,-2.034968,-1.914727,-1.283321,5.415210,-1.473766,-3.042889,1.729470,-3.986720,4.831765,-5.627780,2.235439,8.675635,-3.461321,5.192177,4.565593,0.222238,-0.134036,2.702061,8.690095,6.002701,6.977743,-9.809576,-6.121654,-2.181757,-0.479938,8.853079,-9.072152,-7.041728,3.040512,7.704950,-5.175907,-3.839242,-0.160798,2.397297,-2.140403,0.389262,-7.623534,6.853869,-4.961531,5.848922,-3.945842,-8.087497,8.071663,-3.441878,-3.228720,5.280971,-5.067880,4.253498,4.495821,-5.847288,2.149863,9.692966,7.038834,-9.663164,-6.537202,3.367506,-2.292199,7.065531,-5.810771,-6.118987,9.148877,1.586376,8.624517,-3.282101,8.575509,1.626639,-9.833948,-7.326750,5.781734,0.194868,-7.035139,-6.580061,-2.824547,-4.699278,2.409958,-3.923010],[-2.993296,6.055849,-8.064399,-0.925328,-3.123155,3.382862,-9.211590,9.218993,-0.470738,-5.542454,9.589240,-0.885832,-0.042528,-1.416271,8.994761,9.908354,-7.004403,-4.232570,-9.247736,-4.222291,-6.397969,-2.035734,2.146853,-7.240888,-6.057297,5.028121,5.332674,-1.604101,-9.639882,-4.431016,0.424652,-5.009953,-4.103300,-1.242012,7.608555,5.499795,-6.316329,8.814515,0.232036,-2.108086,-2.068399,6.256935,6.976606,2.156246,-9.469100,6.151111,9.000857,7.945370,-8.657120,9.490451,-8.828668,4.983817,-8.342090,9.386573,-1.700073,5.739355,1.253228,6.571557,-3.166682,-7.853729,-1.025186,-5.265254,8.392420,5.173472,-0.742182,-9.536439,9.361935,1.678329,-7.446207,-0.478413,-5.959934,5.283596,-9.192859,-6.886467,0.795174,-1.135734,1.107583,-4.452860,-4.271847,-7.877660,-3.102211,-2.506588,3.774758,0.953246,-3.541027,-3.237894,5.654248,-8.912238,-2.041436,4.234316,0.153840,1.926754,-5.750467,-3.017954,1.504959,8.130638,5.265646,-8.622764,-8.158937,-3.706487,7.342324,2.524354,-9.288732,-9.768007,7.120520,-0.624747,5.382760,4.017798,5.199786,9.156150,-2.912460,-4.781404,-3.789279,-5.943702,-0.670990,5.696567,-4.657596,7.911235,-3.798859,6.709193,4.857062,-3.571134,-8.358247,-5.754536,4.057648,-4.465095,2.010896,6.610920,9.943219,-4.466151,-1.160410,0.152363,-7.580080,4.541385,8.012564,-3.725830,4.855422,5.421516,-7.008394,7.693756,9.050180,-6.887841,9.758555,-8.796840,9.132278,-2.688454,-6.178568,-0.232474,-1.586641,0.827863],[1.421219,-2.493243,2.338878,-3.820186,-3.850416,7.994312,1.187418,-2.561009,-8.621751,-3.964752,2.439211,6.656925,-4.464332,-7.213936,-4.479242,-7.570901,-7.435780,-2.633544,6.830746,2.852051,-2.386055,0.876285,-7.013799,-5.206564,0.661435,0.108643,-9.738802,-0.267024,-6.407368,4.893798,5.974477,-4.133159,1.173632,7.951240,5.269381,-2.526897,6.804714,-5.507657,0.679364,-5.428501,8.868441,4.129698,6.448916,-6.034418,-3.390115,-1.899990,-0.817531,2.706673,3.427513,-9.845752,-5.189953,-5.133871,-3.597352,6.423171,-7.215761,-4.385164,2.976245,4.522162,-8.489081,3.479131,4.611400,-4.972630,-4.136677,8.473121,-9.512466,5.271361,-5.936352,-1.208669,-7.135254,-1.586775,-5.752258,-7.443445,-4.222642,-8.106097,3.833228,-8.615702,8.538039,-8.744829,-0.566168,3.959378,8.266452,1.518785,-2.197098,0.143346,-3.960217,8.165245,-5.880397,-1.757859,0.189208,2.633010,-0.195569,-4.900102,-5.376829,-8.160296,-5.118458,0.664012,-7.696025,-8.901012,5.307555,7.874632,6.369496,-5.595804,-8.024071,9.740010,9.366790,-0.732235,-2.267242,5.721879,-6.690062,3.150372,4.698790,-2.798209,-0.566742,-9.275033,-1.321705,8.127305,9.614765,-3.727117,-7.619585,1.721693,-6.428029,-3.379038,-9.305563,-7.619667,1.832826,-1.479948,-0.919275,-4.867002,3.379856,-6.908133,-6.460574,4.152046,4.108729,0.091489,7.757990,8.670417,-5.995449,-1.585092,4.263133,8.392457,2.946691,7.892123,8.738147,-9.868971,3.580586,-5.994045,-9.416307,7.684067,6.562533,8.028807],[8.513462,9.332732,-2.286079,4.420192,-7.114207,-5.706732,-4.514980,7.639459,5.487751,-3.955565,5.664518,-9.446097,-6.464082,2.981934,-2.499280,0.539537,-9.200261,-3.648732,-4.956039,-7.644432,-0.321747,-2.956076,2.423125,-8.619713,0.163643,1.554905,-3.283834,-9.243087,7.315150,-3.136300,5.219050,2.044677,-4.242238,-8.618800,7.399738,7.649641,-8.247764,-2.383782,-2.495929,-3.160542,0.379001,-6.309629,-9.600238,3.012606,-0.272361,9.008915,5.578428,3.686096,-0.932419,-7.470337,2.870395,-6.707467,-7.649012,3.181733,9.563915,-3.264784,6.221563,-0.521677,-2.498571,0.715399,-8.348729,-3.755132,4.953037,8.371616,7.196696,-4.921722,-1.526252,-9.768920,4.901698,0.129446,-7.900119,-5.285264,-9.005364,8.574560,-6.842914,4.510235,3.244906,-2.089127,-5.029713,9.918371,3.433735,-9.749953,-7.004414,-2.697351,-5.647784,-5.314053,-8.121441,-2.941087,-5.012405,8.444998,-9.743849,8.061012,-2.039543,-0.375019,3.458767,-2.407603,6.936655,-3.124454,-6.473109,-6.613522,-0.754720,3.161900,3.006051,5.551111,7.569100,-6.539221,-0.771429,0.518502,7.516728,0.285984,1.538555,5.287865,-8.403590,-8.339714,8.223299,9.422140,-2.626943,-1.044389,-7.566258,7.657004,-2.220566,1.285877,0.342834,4.334642,-3.949391,0.321301,-0.202356,6.746096,5.206250,1.483689,-8.475776,-2.928433,5.215567,-1.058718,2.219105,6.321270,8.022489,-9.596210,-6.423857,1.230240,-3.641434,-8.789395,6.877418,9.768211,-0.531300,2.264432,7.236074,9.150018,-7.969395,-7.857979],[4.833336,1.135562,-2.265493,7.605227,4.568960,3.673675,4.696155,8.654075,4.783285,2.333306,3.854358,-1.858914,5.615808,-5.483646,6.488987,3.168709,-2.344193,7.885194,-8.899667,8.223941,8.427327,0.605602,0.094205,-9.438366,6.704904,-9.641507,-7.611771,6.382531,-8.470781,-6.297885,-5.645550,-9.391011,-5.088458,1.201294,-8.454614,7.284814,1.518520,-9.727646,8.892079,-6.004980,0.388700,4.296475,9.731320,6.369760,-2.526312,-4.944220,2.702438,-1.213107,-0.692947,-3.588768,-1.437818,2.386398,-2.847705,-3.216054,-5.211590,-7.492929,3.001038,7.934195,-5.164135,-6.275832,-4.956115,8.529441,9.721204,-1.394454,3.537612,-1.604774,-3.682416,2.813308,-2.364778,-4.075251,-9.741264,-9.463048,-5.389723,6.296823,-0.410120,-2.264501,-3.986264,-8.052785,3.480046,2.119020,9.162244,-3.666529,1.152555,-6.603959,-3.272129,-3.193330,3.058643,-6.662720,2.466518,-3.978041,-2.170180,-6.118457,-3.668695,-5.685121,3.971423,-7.920700,-9.122466,-4.297950,-2.931252,3.055908,0.002505,-2.391467,-3.846505,5.830513,-2.539439,5.243812,-8.779866,3.100773,-5.967944,-1.949836,2.885517,-1.300067,6.296343,-0.175775,6.276134,-6.252279,3.280046,2.600132,-7.904698,0.664093,-8.570541,9.364866,6.456050,4.646538,-5.057499,5.313813,-8.959181,1.397078,2.687763,2.534695,8.176273,9.295671,-0.089179,-4.571862,4.701820,7.750124,-0.631282,-5.653156,8.604878,4.200887,5.752087,-5.495342,-9.948424,-8.163162,6.214829,-4.139758,0.198478,2.804167,-2.455249,-0.100196],[-1.211703,6.525371,-7.329118,-2.628193,7.684309,-9.998249,-3.379683,-6.847083,-5.236423,-9.307099,6.468102,6.573412,8.684593,-3.337582,-4.525270,0.520768,5.075638,-5.130645,5.154065,5.776167,-0.562522,8.242140,-9.127020,-1.809012,-5.972202,-3.040203,0.785505,9.343946,7.867899,5.940505,-7.272311,-6.978080,6.673759,-1.344369,7.178941,-6.264957,3.876507,-8.894334,9.686592,-3.559823,-1.559045,9.197061,-3.668885,-8.267523,2.409111,-9.197119,-2.056223,4.001378,9.205562,-3.976840,9.478399,-4.447348,5.023553,6.710571,1.609358,-8.502096,-3.748187,-6.329046,-5.488472,-8.039014,-8.142621,-2.756983,0.063464,-9.661135,2.877240,0.175662,7.583939,3.351460,5.972094,-9.236941,-2.288649,-2.818943,-0.330041,-6.626174,1.038638,-1.851210,2.482689,-1.450146,-2.986226,9.745749,-6.643230,0.619852,-5.538106,-3.377484,4.300856,6.754505,8.571220,-9.512687,-0.727212,9.117360,-4.644579,4.228849,-8.367924,-1.568347,-1.383173,-1.953198,0.237469,8.811556,-0.356812,3.193633,-3.337255,2.366866,-8.513532,8.613972,-8.722046,-2.192555,7.451495,-3.241241,0.619030,-0.489084,-8.124947,-6.921773,-6.992731,-1.945754,7.553627,-9.636847,-7.355583,-5.737131,-4.378706,4.880584,-4.915860,7.479237,3.858081,0.611113,-8.337331,-8.698339,-8.023091,-2.795197,-1.493166,2.144969,-2.712507,9.425523,3.335019,0.461493,-5.729796,8.427004,-9.536043,-3.508814,-2.566114,8.238890,0.817316,-4.166502,-7.203550,9.049533,4.677424,0.020033,-4.035138,-3.604599,-2.213882,8.818151]], dtype = "float32")#candidate|3001|(15, 150)|const|float32
call_3000 = relay.TupleGetItem(func_2648_call(relay.reshape(const_3001.astype('float32'), [2250,])), 2)
call_3002 = relay.TupleGetItem(func_2651_call(relay.reshape(const_3001.astype('float32'), [2250,])), 2)
var_3003 = relay.var("var_3003", dtype = "float32", shape = (15, 150))#candidate|3003|(15, 150)|var|float32
bop_3004 = relay.logical_xor(const_3001.astype('int32'), relay.reshape(var_3003.astype('int32'), relay.shape_of(const_3001))) # shape=(15, 150)
func_1842_call = mod.get_global_var('func_1842')
func_1845_call = mutated_mod.get_global_var('func_1845')
var_3009 = relay.var("var_3009", dtype = "float32", shape = (25,))#candidate|3009|(25,)|var|float32
call_3008 = relay.TupleGetItem(func_1842_call(relay.reshape(var_3009.astype('float32'), [5, 5, 1]), relay.reshape(call_3000.astype('int32'), [65, 9]), ), 1)
call_3010 = relay.TupleGetItem(func_1845_call(relay.reshape(var_3009.astype('float32'), [5, 5, 1]), relay.reshape(call_3000.astype('int32'), [65, 9]), ), 1)
bop_3019 = relay.greater_equal(const_3001.astype('bool'), relay.reshape(var_3003.astype('bool'), relay.shape_of(const_3001))) # shape=(15, 150)
output = relay.Tuple([call_2996,call_3000,bop_3004,call_3008,var_3009,bop_3019,])
output2 = relay.Tuple([call_2997,call_3002,bop_3004,call_3010,var_3009,bop_3019,])
func_3022 = relay.Function([var_3003,var_3009,], output)
mod['func_3022'] = func_3022
mod = relay.transform.InferType()(mod)
mutated_mod['func_3022'] = func_3022
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3022_call = mutated_mod.get_global_var('func_3022')
var_3024 = relay.var("var_3024", dtype = "float32", shape = (15, 150))#candidate|3024|(15, 150)|var|float32
var_3025 = relay.var("var_3025", dtype = "float32", shape = (25,))#candidate|3025|(25,)|var|float32
call_3023 = func_3022_call(var_3024,var_3025,)
output = call_3023
func_3026 = relay.Function([var_3024,var_3025,], output)
mutated_mod['func_3026'] = func_3026
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2745_call = mod.get_global_var('func_2745')
func_2747_call = mutated_mod.get_global_var('func_2747')
call_3028 = relay.TupleGetItem(func_2745_call(), 1)
call_3029 = relay.TupleGetItem(func_2747_call(), 1)
func_2568_call = mod.get_global_var('func_2568')
func_2570_call = mutated_mod.get_global_var('func_2570')
call_3059 = relay.TupleGetItem(func_2568_call(), 1)
call_3060 = relay.TupleGetItem(func_2570_call(), 1)
output = relay.Tuple([call_3028,call_3059,])
output2 = relay.Tuple([call_3029,call_3060,])
func_3065 = relay.Function([], output)
mod['func_3065'] = func_3065
mod = relay.transform.InferType()(mod)
mutated_mod['func_3065'] = func_3065
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3065_call = mutated_mod.get_global_var('func_3065')
call_3066 = func_3065_call()
output = call_3066
func_3067 = relay.Function([], output)
mutated_mod['func_3067'] = func_3067
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3131 = relay.var("var_3131", dtype = "uint8", shape = (6, 14, 4))#candidate|3131|(6, 14, 4)|var|uint8
var_3132 = relay.var("var_3132", dtype = "uint8", shape = (6, 14, 4))#candidate|3132|(6, 14, 4)|var|uint8
bop_3133 = relay.left_shift(var_3131.astype('uint8'), relay.reshape(var_3132.astype('uint8'), relay.shape_of(var_3131))) # shape=(6, 14, 4)
func_2836_call = mod.get_global_var('func_2836')
func_2839_call = mutated_mod.get_global_var('func_2839')
var_3145 = relay.var("var_3145", dtype = "float64", shape = (21,))#candidate|3145|(21,)|var|float64
call_3144 = relay.TupleGetItem(func_2836_call(relay.reshape(var_3145.astype('float64'), [3, 1, 7])), 1)
call_3146 = relay.TupleGetItem(func_2839_call(relay.reshape(var_3145.astype('float64'), [3, 1, 7])), 1)
func_2836_call = mod.get_global_var('func_2836')
func_2839_call = mutated_mod.get_global_var('func_2839')
call_3148 = relay.TupleGetItem(func_2836_call(relay.reshape(call_3144.astype('float64'), [3, 1, 7])), 1)
call_3149 = relay.TupleGetItem(func_2839_call(relay.reshape(call_3144.astype('float64'), [3, 1, 7])), 1)
uop_3168 = relay.atanh(var_3145.astype('float64')) # shape=(21,)
output = relay.Tuple([bop_3133,call_3144,call_3148,uop_3168,])
output2 = relay.Tuple([bop_3133,call_3146,call_3149,uop_3168,])
func_3175 = relay.Function([var_3131,var_3132,var_3145,], output)
mod['func_3175'] = func_3175
mod = relay.transform.InferType()(mod)
mutated_mod['func_3175'] = func_3175
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3175_call = mutated_mod.get_global_var('func_3175')
var_3177 = relay.var("var_3177", dtype = "uint8", shape = (6, 14, 4))#candidate|3177|(6, 14, 4)|var|uint8
var_3178 = relay.var("var_3178", dtype = "uint8", shape = (6, 14, 4))#candidate|3178|(6, 14, 4)|var|uint8
var_3179 = relay.var("var_3179", dtype = "float64", shape = (21,))#candidate|3179|(21,)|var|float64
call_3176 = func_3175_call(var_3177,var_3178,var_3179,)
output = call_3176
func_3180 = relay.Function([var_3177,var_3178,var_3179,], output)
mutated_mod['func_3180'] = func_3180
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3065_call = mod.get_global_var('func_3065')
func_3067_call = mutated_mod.get_global_var('func_3067')
call_3189 = relay.TupleGetItem(func_3065_call(), 0)
call_3190 = relay.TupleGetItem(func_3067_call(), 0)
func_1842_call = mod.get_global_var('func_1842')
func_1845_call = mutated_mod.get_global_var('func_1845')
var_3193 = relay.var("var_3193", dtype = "float32", shape = (25,))#candidate|3193|(25,)|var|float32
var_3194 = relay.var("var_3194", dtype = "int32", shape = (585,))#candidate|3194|(585,)|var|int32
call_3192 = relay.TupleGetItem(func_1842_call(relay.reshape(var_3193.astype('float32'), [5, 5, 1]), relay.reshape(var_3194.astype('int32'), [65, 9]), ), 0)
call_3195 = relay.TupleGetItem(func_1845_call(relay.reshape(var_3193.astype('float32'), [5, 5, 1]), relay.reshape(var_3194.astype('int32'), [65, 9]), ), 0)
func_2453_call = mod.get_global_var('func_2453')
func_2456_call = mutated_mod.get_global_var('func_2456')
call_3204 = relay.TupleGetItem(func_2453_call(relay.reshape(var_3194.astype('int32'), [585,])), 2)
call_3205 = relay.TupleGetItem(func_2456_call(relay.reshape(var_3194.astype('int32'), [585,])), 2)
const_3210 = relay.const([[[0.622659,-4.098098,0.525735,0.345212,-3.293839,-5.257795,-8.702712,2.194962,0.299716],[-1.251082,7.828317,3.753587,6.213268,7.378704,-8.112349,3.744979,7.751509,-8.074099],[-3.919746,0.492701,0.618823,4.792832,8.040738,-1.846445,1.486503,3.719205,-2.376879],[-2.588320,-6.079187,3.897202,-7.306677,-7.374843,-5.246220,3.514340,-1.792386,9.940367]],[[-0.357905,9.411143,-4.913581,-9.364436,5.755738,-1.317958,-4.166876,7.471203,-2.589911],[7.145899,-5.633560,-8.977900,-3.618907,8.197229,-6.493985,8.432464,0.655328,-3.508414],[-0.122625,1.658939,5.240941,8.479765,1.052252,-3.932339,7.953486,-6.627571,-5.704724],[-6.187496,-3.657979,0.483824,7.148214,1.568628,-5.942101,-5.771057,5.786083,-8.780982]],[[3.056348,-3.733717,-8.709840,-7.533802,3.262340,8.568940,-4.801425,-3.616663,4.454914],[5.640426,-3.413286,1.437024,7.662980,4.881815,-0.738842,3.607691,3.324130,-5.384173],[-5.606619,3.713158,1.515360,2.862764,0.734851,8.495234,-9.069848,1.500758,4.051181],[3.628804,-9.369041,9.161658,-9.333644,-6.572751,3.500944,9.394943,1.072146,6.510749]],[[-6.597020,-5.905918,-5.520549,-0.006691,8.415831,-2.095784,5.518742,1.128953,-6.727850],[-3.254567,5.957733,0.145618,3.716805,-5.446245,7.653639,4.426947,3.879512,0.228684],[5.210016,-4.769202,2.712589,-8.635617,-5.329876,-9.555879,-5.030859,6.919366,2.629266],[-5.699927,4.742413,-0.562945,-6.160157,-5.548353,4.189390,-1.481929,-2.048466,8.836909]],[[0.558916,-8.548194,0.615611,-6.553835,0.148372,7.842572,-5.243919,9.261227,1.393014],[0.133446,6.843939,8.396611,6.741618,-3.690430,-0.242500,-8.280205,0.536720,8.471680],[2.224680,-3.263861,0.316467,-9.010258,-0.091257,6.333915,8.483518,7.807298,6.670015],[5.704480,-1.476813,-8.377995,-8.042711,-7.178064,7.541545,-3.799796,-6.096708,4.040085]],[[6.834627,4.254927,7.264387,6.010422,7.785960,1.962579,8.660128,-1.801797,-6.083269],[-8.884380,6.971996,-6.053996,-9.510462,6.641596,-8.999849,-8.449137,-4.358561,1.547797],[-7.681036,-6.651858,0.030794,-6.148645,6.664523,3.305262,5.038104,-4.402209,-1.381735],[4.515870,8.792975,7.358585,7.624177,8.451976,-7.884006,5.362224,8.307995,-7.971860]],[[-3.499840,9.031255,1.241313,7.439874,-4.302019,7.619072,8.086127,1.287184,-4.448851],[-0.776819,-3.181927,0.163841,-6.627100,-5.522286,1.483581,-6.921428,4.481403,6.427119],[-8.513649,-2.233139,-4.262155,-1.969525,-6.533129,-0.371736,-5.613384,7.262274,9.061806],[0.124567,9.051783,3.345212,5.555505,-3.816926,-1.350477,6.148985,7.055620,3.866838]],[[-8.713881,3.292401,-5.061195,9.746627,-7.088805,9.320591,1.407930,1.047494,-9.529959],[4.496153,-7.055468,4.268162,6.188401,-3.401044,-5.017797,-4.865299,9.276648,6.748088],[-1.685865,-4.449888,4.409628,-2.208239,0.135682,-8.391430,-1.504614,5.920786,3.186736],[0.276379,3.936160,0.429859,-2.494096,-7.207101,3.165352,4.518386,-5.187899,-7.475696]],[[5.458246,9.008100,-9.408760,1.761864,6.791515,-9.119659,5.450617,-9.664681,8.127979],[-1.267095,0.055625,0.472908,-5.002195,-4.470140,-5.069501,5.230659,2.912348,-4.568236],[-1.234730,2.215519,-8.325654,-5.326772,9.575619,7.476129,8.309308,-3.631222,-9.049868],[3.769846,-2.613406,-1.193103,8.102190,0.602356,-9.800157,-5.645444,3.263096,-3.212214]]], dtype = "float64")#candidate|3210|(9, 4, 9)|const|float64
bop_3211 = relay.floor_mod(call_3189.astype('float64'), relay.reshape(const_3210.astype('float64'), relay.shape_of(call_3189))) # shape=(9, 4, 9)
bop_3214 = relay.floor_mod(call_3190.astype('float64'), relay.reshape(const_3210.astype('float64'), relay.shape_of(call_3190))) # shape=(9, 4, 9)
uop_3240 = relay.atan(call_3192.astype('float64')) # shape=(7, 1, 10)
uop_3242 = relay.atan(call_3195.astype('float64')) # shape=(7, 1, 10)
bop_3243 = relay.bitwise_or(uop_3240.astype('uint16'), relay.reshape(call_3192.astype('uint16'), relay.shape_of(uop_3240))) # shape=(7, 1, 10)
bop_3246 = relay.bitwise_or(uop_3242.astype('uint16'), relay.reshape(call_3195.astype('uint16'), relay.shape_of(uop_3242))) # shape=(7, 1, 10)
func_1537_call = mod.get_global_var('func_1537')
func_1540_call = mutated_mod.get_global_var('func_1540')
const_3258 = relay.const([-0.172267,1.724949,-2.829614,4.680584,7.043682,-4.258577,-7.913452,-6.779608,-8.223690,-6.758207,4.785191,0.679716,4.986623,-7.751401,0.296220,4.963878,5.355107,3.884824,0.784336,8.649745,-0.780475,-0.824037,5.393188,-3.510111,-0.930678,-4.345114,-7.662153,6.156853,7.329359,5.850442,-3.612292,-4.531015,4.206224,5.849611,8.389615,-9.842114,0.467311,-5.436452,5.896013,-4.547994,0.718345,6.653984,-7.054331,2.673959,-2.266037,-0.782440,-3.223076,6.091007,8.859762,-4.308435,1.225597,-3.926091,-8.376732,-2.755407,6.550506,5.420369,3.119425,-5.774768,1.222349,0.096461,-3.248356,-6.076217,4.920048,6.928225,5.565747,1.370531,-0.626433,0.084475,-0.021831,-4.314695,-6.566508,4.909436,-2.621327,0.550033,9.449197,-7.960269,1.084289,-2.456414,-2.892321,3.399320,-8.143269,-8.536227,-7.524505,0.235819,6.363470,-8.507915,6.996027,3.841557,6.235315,4.000162,-2.926055,3.168148,9.134754,-9.928981,6.145383,8.332679,-4.313829,-0.299575,7.633123,5.887240,9.990045,-4.470359,6.322864,-9.332958,-3.789781,-0.796113,7.221169,-8.553435,1.877862,-1.991689,-5.027262,-1.125094,-9.497656,5.431168,-2.847714,-2.047287,-0.665160,-6.666639,8.371192,0.336540,0.074264,-5.750064,2.521575,6.965027,4.512502,0.392689,5.710124,-5.378697,-5.764901,2.634277,-1.264075,-2.912780,-9.703356,7.847253,5.403624,5.241647,-1.780833,-0.678274,8.658266,-5.941168,9.966140,-0.626222,-9.248372,-2.743894,2.410759,9.777250,-6.384055,-9.850988,6.387535,-5.737517,-0.881050,9.846111,2.747243,-8.089452,4.098653,0.606363,-6.167199,6.084529,-9.518194,5.951242,4.811776,9.159008,-2.762460,-0.304602,4.667837,6.635236,-5.966050,-1.871796,-6.767656,-5.427792,-8.750641,-1.087011,-8.867070,5.476970,-2.584917,-2.286295,5.152096,2.477183,0.267780,9.924025,-5.213063,5.903123,6.735204,-6.829469,-5.633703,2.229214,-9.774485,-2.162757,6.625157,1.094865,-7.331341,2.528715,3.375013,-2.904116,-0.448199,-4.821861,-6.941714,-8.885834,8.629214,2.513950,2.916121,-2.918558,-3.145084,-6.606079,-3.752721,9.421124,6.159832,8.948197,8.861376,-9.838379,9.509028,-3.640962,-6.382090,-6.040015,3.356085,1.019637,-4.426076,-4.425251,-9.068008,6.237218,-1.017570,-3.559830,5.584156,1.889160,5.942886,2.422182,-3.278172,-2.943080,-1.708063,-2.249836,-1.033433,-0.331102,-0.665639,0.427856,-5.833333,7.192470,-1.077958,-7.842923,3.805376,-8.945747,9.379902,-9.062568,-0.624524,-2.872818,6.835617,-2.514832,2.351753,-9.260061,-0.903146,-6.114896,-2.604992,1.012538,9.097677,1.653554,5.135565,4.534835,6.220162,-5.687851,-9.540240,-4.330453,-9.610741,5.050191,0.143724,1.658294,-9.794125,-2.155865,3.993248,7.782170,-2.549338,-2.872598,-8.877182,-2.865045,1.638214,1.176357,-2.496669,4.563358,9.421039,-1.356389,-0.137160,-7.475280,8.349607,-0.148341,-6.086971,-9.773132,-3.442726,2.620084,-1.122511,-8.423496,-2.458202,-0.392381,1.949331,6.224989,-2.940974,4.335730,3.264935,0.257708,6.791073,-5.986313,2.705084,-5.810789,4.914424,6.115626,9.185243,5.831625,8.674425,-8.716758,8.255002,1.414618,8.932333,-7.482499,-2.098641,-2.109552,9.217797,-6.441613,9.052621,-1.323472,-1.665739,-5.309929,4.068953,2.430469,7.563413,3.796371,-3.116243,2.481729,-5.672203,-2.801267,6.461332,-3.870870,6.990286,-4.337909,4.146202,8.961807,-8.859769,9.953635,8.142261,-5.308090,6.454201,4.946684,2.032912,2.815149,1.783584,-7.272641,-6.382697,3.677741,8.235986,-3.542945,1.543562,-2.908783,-4.131949,0.300366,9.083218,-5.808708,-9.771115,-2.611069,-9.274071,4.272158,5.129475,1.037214,-9.919384,-6.928497,-4.126058,-3.129396,-1.137120,5.324289,-8.125883,0.386183,-1.982729,-2.394011,6.277641,-2.486299,3.890243,4.350339,-1.013963,-2.490967,-6.978386,-2.758875,-9.941028,-3.460033,-2.183786,4.019232,-1.333326,-7.367338,-4.263883,2.727767,6.305452,-5.014310,4.596230,2.000583,-4.222698,-6.855439,-6.999585,2.286023,3.061155,-1.397809,2.178712,4.338958,-7.631956,-7.996346,-4.944120,-4.938119,-0.075486,-5.674949,3.720242,5.659345,-3.537971,-2.074420,-0.005534,7.607197,0.989717,0.286646,8.020173,-8.909656,-1.414349,-8.992256,8.290324,-6.948678,6.606964,8.124543,2.081330,-0.294891,4.174997,-7.042187,-3.524757,6.399827,7.735788,-9.020999,2.883768,-7.212983,-2.428596,6.175124,-7.651339,4.998930,-8.411248,-5.884842,7.099686,2.039810,4.119803,-6.966567,4.585764,8.151566,1.958810,5.493738,-5.691877,-5.281429,9.577620,-1.268607,-0.520950,5.457053,1.043547,-6.350406,1.175786,8.951070,3.174453,-8.906216,3.909837,-6.307874,-6.116143,-4.771688,2.438158,5.679062,-6.496553,-1.978915,5.326822,9.943601,9.841117,4.323066,-5.206084,7.064342,-8.376813,-0.831235,6.367862,-8.749422,3.176059,2.832194,-2.618630,3.625416,-5.762086,2.313705,9.481643,-5.366641,-2.042881,5.636542,-4.068914,-1.344578,6.216929,3.893380,0.611208,-4.041453,-1.179818,-8.134629,-7.154635,2.334907,5.140080,-0.717401,9.115417,-5.374826,-3.634285,-4.023224,-7.762993,0.774055,-9.508707,5.169839,7.078519,-4.913591,0.015774,-5.832904,-0.562574,-5.822561,-2.038231,-2.075846,-1.350939,3.633553,1.606365,4.970747,-8.412516,0.563074,3.286390,2.104230,-7.984375,-6.625876,-7.077957,7.383368,-9.083074,-8.802341,-8.818882,1.312075,0.858987,7.144253,-3.541643,5.470782,5.780743,1.655749,1.137916,9.860937,-7.664446,8.276403,-2.415506,3.176002,-3.935643,4.959538,0.411022,9.062421,6.027319,7.751621,-4.614261,6.753800,3.810179,-5.699283,0.635307,-5.079466,-7.654237,-5.583022,-6.928600,2.423744,1.488200,1.714439,3.250874,-2.862604,5.298014,1.174943,-3.246113,2.247808,7.460634,-9.756143,-1.315443,2.765148,-2.179229,6.877644,7.514365,7.095536,-3.123802,8.171047,-3.499672,-2.289619,9.632361,1.001352,-4.327741,8.460434,-6.522475,-7.863664,-3.058755,4.759472,7.560293,6.812815,-2.443043,-0.391177,7.609977,-5.495638,3.614259,3.077487,-0.944120,-7.724009,-1.014162,6.994422,9.108792,0.785913,6.253628,-7.669794,4.405897,1.247460,-1.451305,-1.114951,-9.475961,6.301962,-7.289216,-4.039855,9.322473,1.942639,5.344452,8.521414,7.416627,-8.105943,1.582322,0.312261,4.275078,-6.094097,-2.968759,1.453874,-2.726727,-0.934934,-3.931200,4.979979,0.680052,4.379198,6.496854,0.552930,5.284314,3.175914,-0.794940,8.603033,-5.205529,-9.357933,7.418222,1.684864,-0.304670,-0.242574,-0.829833,3.793055,-4.134934,-4.336643,9.099526,-1.176099,-3.705505,1.069817,6.086706,-5.804774,6.094549,-7.646227,-1.676008,-8.297753,-4.860752,5.166409,-0.512701,-0.184288,2.957694,1.497045,6.272020,5.744311,2.875362,-1.114096,-7.133261,-0.666277,3.603947,-3.704965,-3.401972,3.871298,3.549951,-1.112961,9.109013,-3.685043,7.008633,6.610384,-3.200914,-1.195541,0.074818,-5.461693,3.431191,3.821574,8.433087,4.198268,-9.997881,-9.496510,3.953962,-1.389798,-6.066545,-6.597468,-8.251815,-9.657084,-5.228978,-7.626816,3.032036,9.230499,-4.091874,-6.307090,-1.308739,1.070939,-6.251582,-1.124660,-0.501904,-7.447500,-0.399635,1.946501,-3.828677,9.161419,-2.777977,-1.801060,-5.930304,2.820536,8.104594,-7.499520,5.125870,-8.112207,-3.682873,3.009008,9.039149,4.639154,-2.800673,-7.100882,-4.715224,-9.183666,-3.991383,-2.409726,-1.903751,7.147295,1.940271,-9.813687,6.417284,-9.755802,5.763338,2.531734,5.674658,-0.872700,3.306710,-6.406434,-3.576473,-1.133539,-5.558428,1.253443,-2.971093,-7.275645,8.336110,-9.315213,2.500870,-1.535975,4.084492,-3.213583,-0.623193,-2.989249,1.586454,0.950187,6.457772,-1.148063,-6.758687,8.140697,-7.530238,2.128784,-8.408086,6.629314,-7.182605,-3.078939,6.185275,6.357468,-0.936626,3.434889,-3.543234,6.596855,-8.928569,0.253480,-7.289166,-6.303624,-2.659702,-1.836384,7.263974,9.578798,8.541729,4.149755,-3.590904,-2.826429,5.535320,-7.386307,-6.991007,0.949041,-4.943536,1.710351,7.765110,1.217090,3.732122,-1.785157,7.751934,2.581404,-5.331026,0.281920,0.132725,1.216381,2.418806,-7.948743,0.330159,7.497267,3.025708,-7.634456,-5.869773,-2.640211,6.513557,-5.822520,-3.957810,4.982327,5.615004,2.562696,-0.258838,5.761432,8.519539,8.272786,6.049076,-5.980731,-4.825740,-0.543149,-4.571142,-5.963291,0.830278,0.665061,-6.264182,-6.285690,3.395532,-6.830925,-5.314335,-5.779420,-9.603955,4.379365,-7.098170,-9.775082,-8.257802,1.288208,4.892815,4.825717,-8.900243,1.900561,3.682493,-6.868348,3.746252,7.562227,-2.420750,1.462987,1.136544,8.654974,-7.472522,-0.570528,-3.493288,-7.127431,-5.813233,-1.345830,-6.260988,6.315117,-4.257397,-6.988455,8.221908,2.915275,2.469542,-0.637404,0.651703,-0.547507,6.232757,8.358600,-3.258455,5.295289,7.252065,-7.415976,4.014092,9.536504,9.011991,-3.240372,0.169641,8.457207,-7.592382,-7.304189,2.126508,-5.338528,6.915366,-9.910780,7.782491,-8.851981,5.417002,-3.026794,7.233146,-2.018489,5.145597,6.638978,1.634546,-2.723783,-7.901001,6.792237,2.774201,-7.148831,5.680616,7.612728,-7.903605,8.125969,-4.088620,9.146746,-7.228755,-9.635021,-8.395975,-5.869744,-8.084071,1.368626,3.887049,-0.589640,-2.322298,-7.466717,5.038995,-3.514014,7.427620,-9.743391,7.515724,7.705987,4.784549,-9.984768,3.024325,7.248375,7.734753,-5.851171,-9.383251,1.964955,3.332095,-2.169785,0.121103,5.482827,3.627458,-0.504798,1.820488,-5.802586,-6.750156,-3.404323,2.901118,1.682984,-9.166865,-5.840460,2.219939,-7.441664,7.564571,9.505776,9.955694,6.059011,-1.161035,-1.781834,-9.236886,0.327994,4.399192,-2.037048,4.505403,6.597621,-1.279231,-2.468032,2.306428,-0.911389,-4.695147,-8.733155,-8.739382,-8.079379,0.871362,-3.911000,0.590062,-3.012829,0.882314,9.018919,0.467714,7.666288,-4.890583,4.591630,-9.664236,-0.468615,7.978603,-9.204514,9.939330,8.888289,1.653283,-5.122573,0.130552,7.498905,2.190890,6.155121,6.771398,-3.868681,0.672404,-6.354886,-6.376097,-1.685134,6.185356,1.318576,1.372722,6.691889,4.990575,7.098310,0.644919,8.890464,1.655512,8.594286,4.278819,4.314228,7.460825,-3.569672,-6.733488,9.515714,-7.523085,-5.130507,8.766935,-7.353615,1.757842,3.441020,2.982084,-6.908971,-6.928420,6.837602,5.196189,-5.753911,-1.236627,-7.771347,4.936942,-4.429860,7.910345,1.869783,1.075953,2.642677,1.627139,1.451742,7.803074,2.127586,3.763022,-5.541510,8.893515,2.764694,9.743143,5.412345,2.033953,-3.022643,-5.094557,-8.629684,-7.399791,9.550245,-6.297312,-7.178229,-3.590155,7.972640,-2.541004,-4.328541,-1.115334,-6.033487,-8.438164,-2.709854,7.256099,-9.660163,-1.283856,2.431392,-1.713205,-4.783745,4.741192,-9.733777,0.389565,7.776785,3.420480,5.328944,2.945569,-8.176602,9.650869,-2.092449,3.566377,4.839300,3.398548,-0.888835,1.614618,-2.645616,7.173255,-9.445990,7.990353,4.503528,9.638940,-4.608237,-2.963696,-5.421167,-5.225725,-5.771524,0.839975,9.798232,6.211530,-3.882335,6.945186,8.315117,-6.007869,9.370397,-2.133762,-7.285655,2.512775,-3.540142,8.096937,-9.152873,5.597591,-1.243886,-5.325580,6.535652,1.873271,-7.261791,2.058274,-0.053361,3.832776,3.737045,-3.953092,7.582364,-5.438643,4.559707,2.993091,7.684842,-3.885916,3.578486,-5.426161,-5.008037,0.244314,-2.749435,4.907257,-9.937753,-6.085707,-1.397724,7.591098,-7.161537,0.821052,-8.282922,7.686743,-7.006488,6.909038,-7.990183,-1.229474,6.725477,5.949668,-9.875977,-3.161059,4.505402,-2.034248,7.442025,-4.357948,-8.683642,1.626397,-6.538161,-5.655404,7.559560,-3.766870,3.017672,-7.297936,-6.922813,-7.646961,-1.000420,2.236505,7.224374,7.415353,-6.337167,9.572342,-5.865022,8.273923,3.380501,9.090312,9.115928,3.504392,-9.426568,4.777145,0.378541,-7.713568,0.024375,-9.149802,1.504649,8.932530,7.373090,-1.626613,-4.767271,-9.505054,-6.330668,-5.922158,2.962485,-2.199713,4.762596,2.257129,-6.618565,2.962438,7.869533,-1.473231,5.814818,-0.752460,-4.549371,-2.668327,-4.386783,2.689076,-8.368564,-2.286531,3.543158,-5.341415,0.675210,4.808072,5.533676,4.270309,-8.255218,3.138846,6.330840,-5.450582,8.675181,-6.264415,2.667356,-9.736291,1.504442,-4.309695,7.509717,-4.622121,-0.987611,-8.169476,-5.344450,-2.833978,-8.752211,-4.592128,-4.180776,0.335267,-5.906317,6.274489,5.861971,1.502719,8.129384,8.778674,-0.189953,7.956004,-0.427364,-8.046506,6.822675,0.819431,8.886251,7.127455,5.984744,8.866420,8.577604,2.853896,-0.207045,6.834043,-4.105673,-4.521604,-1.209337,4.246851,-6.010299,6.467072,6.639917,5.169764,5.165277,-8.845692,6.024373,-9.155716,-7.418091,-5.848836,-0.734873,-5.127857,-6.073534,-1.404971,-6.456048,7.095577,2.708775,-1.979682,-5.691006,4.704315,9.012871,-8.393686,9.801816,0.591250,-2.429309,-5.432693,0.949860,-5.324423,-2.543318,9.420551,-8.379848,5.333481,3.898413,-6.789768,6.741257,8.159208,6.548683,3.578501,-2.586063,5.008790,-9.390283,-8.225662,-4.573712,-9.006263,2.384874,-0.863418,-9.970573,6.072881,7.189283,1.083173,-3.385102,3.283875,-2.709519,-1.045260,7.339492,-3.029161,-7.997552,-9.073160,2.763057,4.990604,-3.635961,-9.683033,5.636718,-3.060015,-6.080791,4.817379,7.183738,-1.742793,8.929952,-0.009237,-0.809009,4.980108,0.524685,-1.493328,-0.035483,2.892116,7.327006,0.730560,-5.007831,9.480790,-5.182637,5.635979,-3.529048,3.289001,-3.724450,-0.199144,-1.576880,5.251309,9.067831,-6.228671,8.135117,-2.104083,-3.255869,2.806058,-9.612626,6.476209,7.485387,-3.968217,-1.255471,-0.729494,7.560533,-9.535659,-7.492854,-2.888887,8.823438,3.807180,-2.836395,8.451829,5.001166,0.382903,1.646553,-1.877586,0.351308,-2.605471,8.681123,3.833595,-9.738194,-9.715496,4.755138,-3.999336,-7.821965,-5.768664,-6.736064,3.069132,-4.196098,5.034570,8.939355,2.301075,-7.997572,-5.422484,-3.692399,-6.658637,1.700536,8.130169,8.773463,5.212195,3.162538,2.595015,1.432630,3.152043,8.703420,-9.749505,8.029141,-2.665748,1.373733,7.076142,-3.027299,-9.522132,-3.940653,-8.676590,-8.832221,1.114787,2.345800,8.938168,2.945523,5.745495,0.916871,0.959367,6.197727,-7.172268,6.004043,-1.469070,1.843119,0.530886,-3.294999,-6.772302,-7.139208,-9.677220,-3.395661,-1.643864,-5.392051,-9.224784,8.758265,-6.287471,8.870450,-3.141058,-1.983006,-4.981411,7.975588,-9.623276,-2.728714,-7.023557,-4.631890,-2.007230,-8.441866,4.801386,-3.758695,-0.315120,8.254873,-3.204336,5.116291,9.574905,9.421730,-4.990766,-9.972264,-9.212251,4.339251,6.760633,3.873012,-5.552601,-4.964945,6.420462,6.977811,9.665194,-0.927565,-4.939516,-6.013559,-5.478301,4.582090,-3.157635,1.873709,-1.002538,-3.315692,-9.324421,-4.124743,9.957597,-1.927666,2.066609,8.566779,4.170916,6.766268,3.838121,9.862652,5.669621,-3.162834,-9.103141,5.489901,-9.868752,-3.221905,5.351778,7.582739,-6.247815,7.784841,-3.081927,-8.457838,1.378435,3.562929,1.662320,-1.495405,4.574322,-6.611734,-2.020467,5.209983,4.054078,5.186171,-2.877244,-1.300558,3.775817,-9.451599,-6.355190,3.380563,-0.429022,-0.441865,7.994681,7.906167,-3.998077,7.113911,6.501624,8.588723,-7.728548,4.798955,-9.332633,3.821416,-0.788316,4.877498,-8.153705,-1.042927,1.771374,-4.802793,8.269387,9.117735,-5.050428,-1.019031,6.544360,-7.189885,-1.961687,-3.386890,2.637592,-3.162436,-6.221274,-9.290566,-4.582240,2.191830,-2.230901,3.926194,6.345426,2.200263,4.539029,6.959888,1.208947,-5.437218,-5.666119,-1.679700,1.498716,9.899409,-4.649080,-8.323104,-7.756445,-4.965293,-5.570020,-9.274620,1.455053,8.931764,9.601644,7.912710,-7.109125,-6.973369,1.412987,4.054360,-3.597197,-8.447483,-2.985931,3.484774,-3.205099,5.864493,1.376178,8.739905,3.332798,9.481020,5.574791,-8.192636,6.855916,-9.547111,1.172853,6.369027,-1.681782,2.767130,-5.578638,9.441989,-9.245975,7.201936,-0.623195,-2.399243,3.031558,-6.142582,6.944546,3.239589,-1.037801,0.693163,3.474668,1.181829,-8.350802,-2.118934,6.190439,0.521727,4.559754,-0.704487,9.748021,5.825809,-1.875715,-4.669579,-3.308711,-2.496681,8.408286,8.854640,-7.029076,0.963903,8.777547,-7.952153,1.839363,-7.034660,-4.205904,7.361992,-5.324126,0.642820,-5.539234,-4.986853,5.252225,9.392901,-2.655616,6.379301,7.026526,7.679765,-3.244342,-1.648409,3.758669,-0.168924,2.779986,-9.519858,1.445143,-6.147726,3.549498,-6.299745,-0.889957,0.919302,-1.596213,2.975646,8.584520,-7.965734,-1.100540,-3.146176,-4.066802,-4.440196,-7.361543,8.423539,-0.828329,3.437588,-7.445684,-6.852720,-6.563324,1.597331,-7.294476,-9.337807,0.641214,2.980223,3.143525,7.589339,2.565058,2.908956,-6.473474,0.326383,7.368420,-2.857679,-7.821531,-7.649106,9.114896,-7.510988,-2.658044,7.225558,8.360167,-7.224083,-0.095378,-7.762878,7.550855,1.303872,-4.590961,-1.977033,-2.894836,7.119971,4.070895,9.379975,1.498485,-2.641742,-6.421274,1.110002,-1.054670,1.663033,-7.641218,-8.859911,3.051932,2.461740,-9.558480,5.873203,1.288417,-1.016562,-7.648809,8.724560,7.496204,-9.631172,7.215214,3.108105,6.451184,5.286987,0.034200,0.606790,8.602779,-8.757183,-5.735506,-6.864063,1.231249,-6.001494,-5.283136,8.604716,0.336824,-9.603616,-1.517189,-1.090300,-2.371456,9.717067,-0.547311,-1.557609,5.623559,1.073191,7.768876,6.703464,-3.393101,-7.606385,7.315036,-3.566735,9.162830,-8.247838,5.954567,2.494964,-8.542240,4.986504,4.059162,-1.136262,-8.467623,-0.305345,-6.754971,-9.678054,0.756773,7.774058,9.123841,0.457565,-4.132646,-8.590884,4.505707,4.694909,-3.735319,-3.313661,0.490786,-5.868035,-5.989645,0.073675,3.566029,-1.861289,-9.947396,6.426578,4.944081,8.136293,-5.109488,6.149454,4.352872,7.133693,2.298701,-9.204049,0.272100,4.812893,0.840082,-9.475715,-5.153504,-2.526503,-1.796989,-6.426839,-8.655322,-6.395839,3.394384,-8.852173,-8.033722,-4.411201,3.676212,-4.748699,-3.233734,7.772667,-1.947337,-9.847021,-9.515870,-9.908589,-6.575945,-1.199838,-4.722716,-5.753000,9.773767,-2.350933,-7.571897,5.975271,5.317795,-3.352898,5.681266,-4.155635,0.306100,6.027795,7.138666,8.454950,-9.752427,-2.206309,-5.801071,3.000567,-6.037084,6.829258,-1.507085,-2.730126,1.871909,8.623360,-5.072526,-7.218213,-9.279787,9.086685,2.619738,-4.831895,8.961125,-3.916194,6.928056,5.402070,-2.115138,-7.831591,1.590394,-1.882614,-1.551505,-8.640113,8.272577,-2.119719,-7.875347,6.523585,-7.988585,4.040540,7.621076,5.247251,0.876365,-8.995573,-8.870309,8.599518,3.221085,-0.889329,9.920183,8.497349,9.109305,5.071921,3.775028,-1.251076,-2.625158,5.175966,7.438384,-6.938102,0.719094,-3.069160,3.799090,-2.173414,-4.046083,-9.586896,9.790029,-3.865373,-1.118264,-5.283202,7.906905,7.024640,-3.657786,9.531349,-4.593405,3.878263,-7.613333,5.364405,3.678539,-4.476871,-6.569046,4.176749,-6.314599,-2.984312,8.891128,1.045366,1.534801,-6.943783,8.879777,-4.434447,8.927437,-0.605405,5.408305,-5.895301,2.035010,-9.215378,0.874059,0.423461,-2.891448,-3.262380,-9.913157,-1.769414,2.395077,7.627947,-0.706620,-4.612160,8.874980,3.760409,-7.691022,9.538662,-2.170087,2.747370,-6.567864,-2.929411,-2.257210,-3.902149,-1.632192,3.300240,-1.458219,-2.440504,-0.536682,-4.466803,3.176761,-2.681225,3.890507,6.215623,-2.452105,-8.294390,2.037689,1.433128,3.228546,-7.248518,-9.863702,7.255541,1.342374,2.987050,-8.634258,4.681547,1.519179,2.483214,-7.916572,-5.024354,8.883211,8.817817,3.029518,2.875956,-2.423641,-8.191276,4.448423,5.741538,-7.506632,-7.748839,1.290288,-6.662676,9.295596,4.144072,1.231323,-9.348492,-9.583204,8.261979,-6.101182,2.522166,7.944587,8.324793,6.000540,1.658663,9.991152,5.485211,2.457027,5.105913,3.838937,-6.884263,9.950432,-7.721173,-5.163936,0.347546,-4.663507,-0.437535,7.447515,-9.781934,-2.711410,-1.975169,2.662197,-3.962737,8.946315,1.243962,3.724466,2.534418,8.031520,-2.845483,-7.248966,-1.138334,-1.987547,-2.341074,5.658281,1.583979,-6.944497,9.545433,5.357704,-8.821624,-1.789199,5.829574,-5.141626,-0.616479,-2.014338,4.239193,-8.478587,8.837407,-4.554806,-8.809182,-0.645120,-1.015997,9.737119,-5.656860,4.388821,-8.884738,7.030107,5.456761,-2.474167,8.378156,2.405931,1.134352,-7.689628,-5.912971,-9.767617,-1.955576,-2.401361,2.029768,1.088233,-2.748852,4.701486,-1.538419,4.937476,-1.804205,1.037728,-1.741145,-7.730564,-1.056694,9.146337,-9.227780,-3.173337,-3.489800,2.640815,-3.205846,-8.474454,8.048968,3.429690,-5.872944,-4.028558,9.917423,-5.948803,-3.947623,5.615792,2.236603,1.190610,6.449579,5.678690,4.543970,5.247700,0.382244,-3.522894,2.905257,-7.445255,-5.371910,-7.594680,-1.154909,-8.564842,-8.576033,2.072221,-5.671378,7.173917,-0.421399,9.390362,0.943291,-5.410183,-1.300547,4.424699,-7.328954,1.026088,-2.272960,-3.713195,-9.318692,1.076031,7.748225,0.323066,-8.867367,8.959687,7.222292,-0.639137,3.940733,2.060860,3.535491,-9.075570,-0.761219,8.976632,5.790117,4.184118,-5.411147,-6.012453,8.101550,6.620801,-9.727642,1.965882,5.064836,-3.103391,-8.725849,6.901435,7.093669,3.894194,4.562284,-6.067395,3.100734,6.469330,7.745048,2.574289,1.434423,-1.274512,3.909097,3.322686,8.322004,3.436416,9.391811,4.651730,-7.121168,-6.644183,5.837264,9.143011,-8.022996,-8.178612,-0.399988,-1.424282,-3.176354,-3.112546,-9.511885,9.635536,0.441078,8.929023,9.317344,4.863399,-6.283919,5.930248,6.931693,-6.034423,9.652319,1.959134,-0.922420,1.653379,-3.491020,-0.096022,5.691689,-9.752761,-2.074242,0.049979,-2.175217,-7.075722,-0.681227,0.147779,-4.408920,2.080955,-4.942339,6.511516,9.317477,-9.423481,-4.536901,-7.979829,-5.164498,2.229694,0.015289,-9.556254,9.923455,-4.110151,-5.255540,8.265354,1.451103,6.040418,9.231571,-0.827055,2.059188,-4.423415,6.243090,-2.871086,2.462673,-5.402163,-7.391615,9.113213,2.638675,-4.812669,9.828040,-6.746940,-4.218697,-4.899586,4.391878,-7.417838,8.308434,-4.920095,-2.425745,-5.073390,-9.728133,-8.061773,7.038994,4.031729,9.494226,6.208775,8.911436,1.350112,7.502057,-4.727908,-4.422879,0.169898,3.991366,-3.320152,-4.147487,-7.043479,3.057224,-7.537260,-7.755822,-7.832708,0.049182,-5.846301,2.438179,-9.193129,7.327891,4.502041,-5.044742,-1.005313,4.772759,1.082607,2.802435,-8.684138,-2.300270,-5.646496,-2.335118,-8.095136,-0.298535,9.467601,-5.469729,-9.527424,-5.429500,9.914179,-9.573740,-5.604205,-6.693328,-4.711794,9.014128,-0.193930,2.315890,-7.734293,8.369133,4.063482,4.895071,-8.362131,-7.337523,-8.076665,-7.788570,3.508309,2.511725,-2.925370,6.420867,2.741721,-3.364312,-5.534058,-2.767290,7.647131,2.733369,5.216268,4.267784], dtype = "float32")#candidate|3258|(2250,)|const|float32
call_3257 = relay.TupleGetItem(func_1537_call(relay.reshape(const_3258.astype('float32'), [15, 10, 15])), 2)
call_3259 = relay.TupleGetItem(func_1540_call(relay.reshape(const_3258.astype('float32'), [15, 10, 15])), 2)
func_649_call = mod.get_global_var('func_649')
func_653_call = mutated_mod.get_global_var('func_653')
const_3264 = relay.const([-5.550016,3.742458,8.347076,9.397297,1.655648,-0.316092,9.002294,8.089236,6.202607,1.199862,-2.191271,-9.172373,-1.177411,8.635636,-8.334273,0.623367,7.530187,-4.628425,-4.663364,1.072874,-2.322116,-9.879489,8.719738,-4.215951,-2.468809,-5.359232,-8.553506,1.070431,-0.126733,-0.154890,-5.497968,-4.586090,-7.446633,-6.853819,-6.492702,2.147766,7.035574,-6.220892,3.789781,-4.594886,-3.792624,-8.426226,4.138198,6.798611,-5.275800,9.890549,-5.279931,-1.283681,-2.061164,9.702917], dtype = "float64")#candidate|3264|(50,)|const|float64
call_3263 = relay.TupleGetItem(func_649_call(relay.reshape(const_3264.astype('float64'), [5, 1, 10]), relay.reshape(call_3257.astype('float32'), [1260,]), ), 7)
call_3265 = relay.TupleGetItem(func_653_call(relay.reshape(const_3264.astype('float64'), [5, 1, 10]), relay.reshape(call_3257.astype('float32'), [1260,]), ), 7)
bop_3266 = relay.minimum(uop_3240.astype('float32'), relay.reshape(bop_3243.astype('float32'), relay.shape_of(uop_3240))) # shape=(7, 1, 10)
bop_3269 = relay.minimum(uop_3242.astype('float32'), relay.reshape(bop_3246.astype('float32'), relay.shape_of(uop_3242))) # shape=(7, 1, 10)
var_3278 = relay.var("var_3278", dtype = "float32", shape = (3, 420))#candidate|3278|(3, 420)|var|float32
bop_3279 = relay.floor_divide(call_3257.astype('float64'), relay.reshape(var_3278.astype('float64'), relay.shape_of(call_3257))) # shape=(3, 420)
bop_3282 = relay.floor_divide(call_3259.astype('float64'), relay.reshape(var_3278.astype('float64'), relay.shape_of(call_3259))) # shape=(3, 420)
uop_3285 = relay.acos(bop_3243.astype('float32')) # shape=(7, 1, 10)
uop_3287 = relay.acos(bop_3246.astype('float32')) # shape=(7, 1, 10)
var_3297 = relay.var("var_3297", dtype = "float32", shape = (7, 15, 10))#candidate|3297|(7, 15, 10)|var|float32
bop_3298 = relay.left_shift(uop_3285.astype('uint64'), var_3297.astype('uint64')) # shape=(7, 15, 10)
bop_3301 = relay.left_shift(uop_3287.astype('uint64'), var_3297.astype('uint64')) # shape=(7, 15, 10)
func_2423_call = mod.get_global_var('func_2423')
func_2425_call = mutated_mod.get_global_var('func_2425')
call_3308 = relay.TupleGetItem(func_2423_call(), 0)
call_3309 = relay.TupleGetItem(func_2425_call(), 0)
func_2453_call = mod.get_global_var('func_2453')
func_2456_call = mutated_mod.get_global_var('func_2456')
call_3317 = relay.TupleGetItem(func_2453_call(relay.reshape(var_3194.astype('int32'), [585,])), 0)
call_3318 = relay.TupleGetItem(func_2456_call(relay.reshape(var_3194.astype('int32'), [585,])), 0)
bop_3324 = relay.logical_or(bop_3298.astype('bool'), bop_3266.astype('bool')) # shape=(7, 15, 10)
bop_3327 = relay.logical_or(bop_3301.astype('bool'), bop_3269.astype('bool')) # shape=(7, 15, 10)
func_2453_call = mod.get_global_var('func_2453')
func_2456_call = mutated_mod.get_global_var('func_2456')
call_3337 = relay.TupleGetItem(func_2453_call(relay.reshape(call_3204.astype('int32'), [585,])), 0)
call_3338 = relay.TupleGetItem(func_2456_call(relay.reshape(call_3204.astype('int32'), [585,])), 0)
bop_3344 = relay.bitwise_xor(bop_3243.astype('int16'), relay.reshape(uop_3285.astype('int16'), relay.shape_of(bop_3243))) # shape=(7, 1, 10)
bop_3347 = relay.bitwise_xor(bop_3246.astype('int16'), relay.reshape(uop_3287.astype('int16'), relay.shape_of(bop_3246))) # shape=(7, 1, 10)
var_3353 = relay.var("var_3353", dtype = "bool", shape = (7, 15, 10))#candidate|3353|(7, 15, 10)|var|bool
bop_3354 = relay.add(bop_3324.astype('int8'), relay.reshape(var_3353.astype('int8'), relay.shape_of(bop_3324))) # shape=(7, 15, 10)
bop_3357 = relay.add(bop_3327.astype('int8'), relay.reshape(var_3353.astype('int8'), relay.shape_of(bop_3327))) # shape=(7, 15, 10)
uop_3361 = relay.sigmoid(var_3297.astype('float32')) # shape=(7, 15, 10)
output = relay.Tuple([var_3193,var_3194,call_3204,bop_3211,const_3258,call_3263,const_3264,bop_3279,call_3308,call_3317,call_3337,bop_3344,bop_3354,uop_3361,])
output2 = relay.Tuple([var_3193,var_3194,call_3205,bop_3214,const_3258,call_3265,const_3264,bop_3282,call_3309,call_3318,call_3338,bop_3347,bop_3357,uop_3361,])
func_3372 = relay.Function([var_3193,var_3194,var_3278,var_3297,var_3353,], output)
mod['func_3372'] = func_3372
mod = relay.transform.InferType()(mod)
var_3373 = relay.var("var_3373", dtype = "float32", shape = (25,))#candidate|3373|(25,)|var|float32
var_3374 = relay.var("var_3374", dtype = "int32", shape = (585,))#candidate|3374|(585,)|var|int32
var_3375 = relay.var("var_3375", dtype = "float32", shape = (3, 420))#candidate|3375|(3, 420)|var|float32
var_3376 = relay.var("var_3376", dtype = "float32", shape = (7, 15, 10))#candidate|3376|(7, 15, 10)|var|float32
var_3377 = relay.var("var_3377", dtype = "bool", shape = (7, 15, 10))#candidate|3377|(7, 15, 10)|var|bool
output = func_3372(var_3373,var_3374,var_3375,var_3376,var_3377,)
func_3378 = relay.Function([var_3373,var_3374,var_3375,var_3376,var_3377,], output)
mutated_mod['func_3378'] = func_3378
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2586_call = mod.get_global_var('func_2586')
func_2587_call = mutated_mod.get_global_var('func_2587')
call_3402 = relay.TupleGetItem(func_2586_call(), 0)
call_3403 = relay.TupleGetItem(func_2587_call(), 0)
func_3022_call = mod.get_global_var('func_3022')
func_3026_call = mutated_mod.get_global_var('func_3026')
const_3405 = relay.const([2.731917,-1.676222,-5.821901,-3.144498,-5.752322,-5.804555,-5.402462,-9.600344,-9.983328,1.097589,3.976560,9.227297,9.878252,2.320674,1.185830,-0.685983,7.619719,-8.239600,3.140805,-8.283352,-8.593418,3.474172,-1.498826,8.875622,5.619300,-8.411118,4.721138,3.347245,-7.898878,7.431942,1.518942,-9.627557,-1.591510,-9.409499,6.089992,3.844521,-3.778354,-0.253516,-9.421202,6.054026,2.527546,-3.883548,5.399805,7.510059,-6.983682,5.006150,-1.940487,-0.833389,-0.144456,7.483211,-6.772969,4.447337,3.934746,7.748070,6.006073,6.159015,-4.547309,1.278049,3.359465,2.815053,0.887991,-2.455464,-9.293824,-2.853992,3.099062,9.481994,-3.065321,-5.876762,-9.596200,-1.470520,-8.251451,-5.082709,1.854311,-7.186748,-2.430417,1.987468,-8.515008,-3.360445,-8.604217,4.016088,-9.848654,4.815750,-3.214031,-0.054958,0.858167,-2.226260,-7.211893,6.552928,5.592996,5.181363,0.715527,6.532874,-4.323277,5.868841,8.542751,-1.613387,5.564351,-8.314809,-9.178422,-1.798805,5.496346,2.213110,-5.048022,-8.022513,8.233756,5.143230,-0.751328,-9.499823,-1.853232,3.105066,6.481432,9.402570,-0.462645,-4.387581,-3.331889,-7.838856,0.463824,-3.454926,-7.670494,3.345818,-3.352295,7.698874,-9.341404,9.118149,4.578758,-5.653807,-4.228860,5.215325,6.451334,0.398801,-7.305359,-6.483230,-9.852220,7.340068,8.858339,-8.941124,-7.502838,-4.497603,1.799725,5.952805,-6.507976,5.310798,-6.858803,7.073732,-3.879545,6.521226,0.300888,4.937200,-8.558796,-2.098648,1.233882,1.915277,-1.577316,-3.192098,7.269012,-6.129497,7.817229,9.947597,-5.288099,-9.612798,2.429235,-0.459372,7.670169,-3.443728,-7.053725,0.387312,4.032348,9.692008,-0.194172,-9.068551,-5.132371,7.305241,-8.849015,7.607361,-1.114669,-0.408494,6.216913,-9.058446,-4.983171,8.564821,3.470011,-5.118989,5.857600,8.408465,-5.603096,-2.729666,-6.409005,-6.130876,-4.560822,-8.358424,5.012929,-0.465915,5.341653,7.618598,-6.610936,-1.047032,9.137730,-5.921797,5.452319,-6.802750,8.285424,-7.560082,9.557562,6.638201,-4.163710,-8.908733,-8.119918,-9.051748,7.030114,7.102493,-8.391234,0.607194,-1.035769,4.328057,5.066630,6.228454,-2.512073,0.987519,1.694421,3.478678,-6.930559,4.908681,-0.814693,-4.052946,-9.908866,7.333203,0.266084,-7.519532,1.679584,2.069858,-6.346468,8.148589,-7.415787,-0.629913,5.975114,5.898978,5.046563,-4.243701,5.197386,4.838454,-0.636373,-8.753135,4.975584,-1.758481,-2.390545,-1.573989,-2.341793,5.033965,-1.957427,-0.379965,1.651147,2.503498,6.881625,4.710191,-3.206554,-0.367929,7.176083,-2.312078,1.323929,5.253085,9.073795,-8.456632,-9.655044,-2.900210,0.902048,-3.411623,1.595894,6.488831,-5.051691,1.746677,0.960225,7.649268,-0.842753,-4.148088,-7.920699,-1.257635,6.869016,-1.900760,-3.391530,-1.255032,9.310116,2.868824,-2.776513,1.710550,1.152026,5.440965,-8.404913,7.443406,-9.447207,1.641279,-7.708001,-6.817899,-5.740475,2.125758,-1.618851,5.699231,-6.277864,-3.999050,8.373651,4.694297,-9.606986,-8.764525,-2.382869,5.199229,1.987358,7.122355,-5.657983,7.131825,-7.596820,-3.246857,-2.772618,3.564418,-0.826051,5.560906,1.105315,-7.808931,5.323778,9.291496,-0.064940,-9.598330,5.277923,6.652275,-4.132572,-3.466578,8.651405,8.853626,-5.801526,6.874496,-4.043965,7.674354,4.256920,3.118228,-6.682353,-2.110775,0.311516,-4.688754,4.018051,1.436221,-7.339408,-6.973358,-5.427942,5.964481,-1.324287,2.550317,0.117717,4.077511,-7.137521,9.842004,4.906417,1.734641,-5.837444,7.382938,-3.185227,9.249501,-7.641151,-3.810083,3.495952,-1.984082,-8.581262,-7.744306,-3.825305,3.113849,-3.964550,4.590280,-0.923858,3.202222,-1.352032,-8.826173,3.954828,0.191112,-4.740255,-0.777084,7.541320,9.574845,-8.763835,7.221334,9.410158,9.124317,5.964678,5.055292,5.120617,-8.464830,2.681378,-9.880154,0.240117,2.464687,-6.108293,6.064540,-5.465628,1.920860,5.416081,1.145978,0.292357,-3.330941,2.975126,4.299268,-3.163532,-6.337181,-1.097121,-1.944132,-5.547420,5.260189,0.808025,-1.262885,-1.602072,-8.076799,-9.914500,-5.056839,-9.069763,-6.809670,5.037398,0.588965,5.821822,9.526261,-1.744719,8.758687,6.138024,8.345486,-8.286867,-6.452543,-5.958678,-4.876554,-7.750698,-3.201251,4.684439,-3.761506,-7.290675,0.715602,1.581203,-8.732545,-3.005340,-7.641811,-2.040930,1.500291,0.565441,1.734093,-4.246048,-0.593321,2.154549,-6.610388,4.528852,7.544612,-7.731627,-6.791204,1.850189,8.616415,-0.397837,-7.571732,-9.666617,1.279021,8.518382,0.034152,-0.279768,9.280002,-2.183369,3.972455,-1.054026,-6.554560,7.659315,3.831079,4.457797,-9.046169,-5.986055,-4.293873,-3.394769,9.389927,9.175367,-1.601509,-9.285666,1.648883,6.956049,8.939204,1.127771,-9.314425,-7.944733,9.079312,-6.713949,4.871098,-2.544529,0.405982,-1.311593,3.934551,8.969699,5.125171,0.033164,0.932652,1.818537,-2.487643,-4.752904,0.493893,-7.518044,-4.539525,9.932647,-4.335729,5.191404,-7.685143,-6.953437,1.579554,4.774877,3.646731,0.858894,7.940425,4.530022,0.841745,-7.732903,-0.282563,-8.094224,-1.674175,0.378290,1.898021,-9.969181,-6.958503,8.393366,4.649467,-4.063249,2.838039,1.393905,0.892253,5.907489,-6.982471,6.937310,-1.450629,1.210628,9.254044,3.088320,0.816926,8.384007,-5.265719,-8.541615,0.712843,3.329892,-8.518906,-3.800559,8.265867,5.035959,2.014184,0.324007,-2.179263,-0.131247,7.085817,-5.536499,-1.326793,-5.397559,6.191103,-7.942142,4.640182,4.960525,-0.113239,2.271180,7.524123,0.738554,-5.668326,5.337601,2.029084,-8.798129,9.370068,0.174005,-8.406807,1.875275,-7.855871,8.719739,1.462765,-6.508092,-3.492744,4.257046,-9.906484,-1.229653,5.210057,4.498981,-6.188206,0.726277,-5.880679,3.879988,-3.377387,-3.070314,-1.326015,8.233595,7.331486,4.686348,6.762069,9.593437,1.269544,-5.032595,3.473490,2.683484,-5.970920,-8.674861,3.212197,8.722204,-8.470330,0.828252,5.594587,-4.694203,-9.053512,-8.289830,-1.581444,2.401843,-8.647509,1.967239,5.086141,5.387689,6.597445,-9.857970,2.520421,6.866517,-2.651848,-1.682129,4.505333,-8.263710,-8.696305,9.339586,-4.168001,-1.554608,5.007968,2.542437,-9.248190,-3.702375,-1.627043,-7.584490,-6.802910,7.284051,-4.480324,4.256982,-2.497308,1.244668,-3.977967,5.489866,7.111925,4.457950,6.337749,7.605752,9.152471,-2.061971,5.805855,8.781061,-2.541849,-5.724114,-2.141085,-4.404739,4.509774,4.262015,-0.489013,-2.195170,-2.266834,-5.217501,-7.449161,2.211295,1.210938,6.778047,2.565227,8.626410,2.511710,-5.454375,4.296719,-1.096655,4.019363,-7.146566,1.471554,0.735625,4.629776,3.374524,-3.043117,1.433074,-9.798103,-7.777974,-4.612041,3.272386,2.721626,2.377096,-6.554061,5.333968,-0.840091,-9.793591,-0.721355,8.010174,5.432775,-1.305461,-2.229206,-6.707623,-4.962659,-2.636470,-9.133201,0.329923,5.711844,-8.124107,-9.331821,6.585425,6.993895,-4.628074,-6.461518,3.024735,4.050203,4.684199,-8.474575,-3.872610,-7.541959,3.664526,3.927068,-8.121391,4.283269,-4.996254,-9.817101,-5.643537,5.544905,5.603817,6.670047,-5.388237,-4.488696,-8.333416,9.543708,-8.535833,0.163817,-3.688465,-7.224607,9.436069,8.331884,6.791542,-0.038753,6.713328,9.590041,7.552124,-3.104705,9.529900,2.561428,9.411105,-8.921745,-9.052412,6.501370,-3.114273,8.704593,6.162167,-4.471771,-3.891839,0.052492,-4.180211,-4.321532,6.764641,9.988436,-9.621548,-0.947913,4.347980,2.541336,-9.249956,-0.454772,-2.152040,-3.424451,-8.689424,-2.176877,1.587090,9.050664,-2.090781,0.608606,-2.696894,-5.091161,6.000675,-8.224662,-6.244801,-7.539189,-6.134925,2.166673,-3.729651,-7.531502,-2.717976,9.689965,-9.299060,-3.022798,6.758927,-2.373522,-6.775219,-4.602385,2.850921,8.633757,-6.518392,-5.122298,-2.026460,8.032977,-3.051257,-5.698553,-5.519302,-7.568217,-7.148216,-5.713709,1.488635,9.438240,5.980475,0.191976,-3.740761,-5.835771,4.137426,1.469980,1.862936,-5.602007,-3.391158,-8.031592,3.658928,-8.125949,6.451488,5.567215,9.365243,7.509641,-2.355598,-5.065727,5.409358,0.985875,4.860395,-2.613734,8.739143,-2.207802,6.261913,-5.986066,-6.980003,-9.219144,1.525115,-3.202967,-5.085876,-0.860271,-7.535529,0.742666,9.199664,-5.825530,0.863626,5.286481,-4.758807,8.618115,4.512823,-2.899515,-3.831681,9.162993,-4.990026,-0.922147,7.991516,6.745901,9.520895,0.864962,4.878403,-4.592640,9.773836,8.068752,9.868785,0.053083,-3.416647,-4.953870,7.349007,0.860138,9.125368,-3.699395,-4.871239,7.346487,5.926005,-8.836235,-0.105007,7.133073,6.265848,2.166301,9.645484,3.389913,-4.169650,-5.554507,0.104223,7.885025,-8.739234,-5.575736,7.267527,-9.271294,-1.481221,9.681242,9.963712,-7.845612,9.878068,-5.733671,3.856280,4.696106,6.989459,2.438060,4.324602,-2.798510,-6.454318,-9.034869,-7.597535,-2.977036,3.577132,7.530532,2.031972,7.422947,-3.532305,4.700274,3.240759,5.452939,3.148682,-7.132922,-7.583696,-5.827351,5.165867,-2.330205,9.254631,-9.243571,6.920963,-8.012560,-8.175633,3.850259,5.329750,-6.299674,0.116312,5.926273,-8.928315,7.871423,-7.711097,3.209791,-7.152504,0.614755,3.953485,9.544141,-7.091795,9.074329,9.067894,0.689780,4.102821,-8.474324,6.651253,2.468442,9.005591,-8.897859,-4.140897,4.551320,-8.428805,7.786516,-4.159126,-5.148022,-0.786760,8.599051,-4.409811,-3.419829,-4.734299,7.480009,-6.723717,0.693916,1.949261,-9.858710,-0.275397,0.587378,-7.349541,-8.417899,5.419159,7.213375,-2.578891,9.427245,9.996684,-0.378195,-1.623568,-9.825545,7.667354,-5.835480,0.449863,-2.612736,-1.736063,-8.044622,-9.858014,-2.887554,1.011149,4.731339,-6.648748,4.069566,-4.408597,-1.892578,4.921768,-0.277972,-3.670939,1.706706,7.175337,3.389162,7.993239,-0.008273,-7.385589,0.538441,5.456479,8.011069,-6.949577,1.572877,3.720646,7.523975,-4.458808,4.939530,1.997740,6.024918,-0.169504,-2.028085,-4.694988,-1.170786,6.399266,9.586688,-0.756090,5.243121,1.673530,-2.661835,-0.389875,5.594382,4.846112,7.895563,5.565111,5.804306,-8.117987,-9.086095,-5.563646,4.887775,-7.873511,-9.227801,-6.350863,1.240897,4.971118,-2.162636,-1.527259,-7.340701,-5.063247,-0.142668,-4.763967,2.370268,6.708130,-3.879899,-3.147549,-4.578161,-0.822987,-4.672177,-7.734703,-9.749412,6.170813,5.630305,-2.014252,9.141374,6.651977,-2.433446,2.165849,-9.578668,3.362910,-2.465677,0.630397,4.484051,-2.017102,-4.583300,4.748903,-8.278004,0.016436,-2.615293,4.699251,-5.734805,4.113734,6.850136,-4.871225,-8.726132,-0.868863,-6.057813,4.619548,2.300777,6.884190,-3.222789,-7.421399,6.228054,-2.205662,0.527938,3.828546,-1.243324,-8.931081,1.979097,-3.398313,7.655838,-9.431776,-7.755092,2.656589,7.017986,4.020188,4.683377,-0.958499,1.111570,8.379377,5.583624,-4.999073,3.416657,2.749501,2.856226,-7.178773,-9.391720,-7.887992,-5.241707,-3.658042,-2.103181,8.231080,6.671057,-7.926778,-6.847748,4.308742,-8.155827,-3.146034,-5.119722,-8.028345,5.880405,-4.031256,-0.974625,-4.087022,-9.573848,-4.348838,-9.889540,1.730641,-5.673058,-2.306738,1.025789,-2.154541,1.940724,7.380865,-7.200579,1.063445,1.533259,9.288949,3.705311,-8.527265,-4.284152,-1.532005,5.992063,-7.630677,-2.999313,-8.077375,-5.003711,6.047640,4.134243,3.893023,9.630769,8.110839,0.150121,-4.269585,-0.264341,-5.939926,5.641338,6.929768,-2.234462,-3.943489,-5.640040,-5.793013,4.939332,-5.870528,6.581288,-9.211203,9.666092,4.859900,-9.307590,5.036131,-5.515577,9.347518,-8.750188,-0.736853,-8.672566,5.273457,-9.145306,5.432983,-0.326176,-5.822599,-9.115027,-8.835896,1.181961,-0.893912,2.460726,-8.240532,7.438567,5.535457,6.332001,9.360050,5.553363,-1.202692,-0.299736,5.712789,-6.030533,-2.096573,1.953898,-9.080778,-7.349195,-5.276027,-2.690944,-6.110451,1.467412,8.410571,4.330251,-6.356805,-3.245080,-2.366609,9.024041,8.218997,-8.185743,-1.714315,-1.715987,-7.808611,4.718677,-5.147335,9.618797,6.358263,-1.516705,7.451640,0.243078,-1.049610,4.669747,8.016604,0.941317,-7.840650,-6.135356,9.411733,7.615720,-7.876456,-5.118181,-5.319572,6.211201,-4.823603,-4.241237,8.872250,-7.212774,6.966863,5.765432,-0.392793,6.439954,-6.669322,8.420560,-9.119803,2.543495,8.500198,0.395370,5.526448,9.068797,4.356009,-2.713273,-8.695586,-3.800353,-0.956534,-8.180404,-5.712065,2.010215,8.535064,-1.957513,2.171246,-1.091456,-7.936229,-8.324261,-6.889338,7.874594,8.947186,7.103084,-0.856467,-0.230924,5.720550,2.644094,-9.374767,-0.122037,5.475099,-4.707575,-8.795816,6.827220,-1.501027,-7.599002,-8.132882,-7.903824,6.889523,1.264239,-0.887860,-6.794807,-5.044836,0.954366,-7.443796,-1.548991,8.621615,-7.295261,-9.452518,-3.254069,9.720590,2.660344,-1.662685,-6.858349,1.898278,-0.635774,2.926997,1.928839,-6.501462,-6.414189,-7.962576,2.379354,9.234351,1.025673,8.678737,1.763298,9.939005,-8.701941,-8.029220,7.074158,-7.082937,1.663708,8.056716,2.582695,-1.353265,-7.852781,8.110433,-2.453789,-3.951329,-5.541768,2.268164,-5.088783,-0.533638,-8.378046,9.903372,2.605738,0.990403,2.047577,6.497942,3.376845,0.973909,7.900048,6.399381,4.034021,0.313636,1.671274,4.529239,2.790595,3.256859,9.326961,-6.600006,-0.353881,8.938925,-8.021783,6.776429,-4.606492,4.738779,2.411662,3.194265,-1.051413,-6.913193,4.534665,-5.237507,7.299318,7.375967,-8.092683,4.861718,9.768113,4.670628,-5.376645,1.888142,1.992363,-7.679704,6.654727,1.251785,-0.247090,-0.417815,-2.570308,0.094585,-9.541641,-8.080812,-0.303678,7.395363,-1.299729,5.816594,6.338388,-6.932273,5.137088,8.317073,-7.341138,6.786518,-7.635679,4.574071,-4.235533,0.380989,3.437769,1.904011,7.125451,3.201203,8.921959,-3.671765,-7.683714,0.933786,6.650648,-2.518459,-5.750619,1.215847,5.628452,3.733980,7.522182,-9.097499,-7.119143,-6.877354,7.336430,6.393796,-5.809666,4.316827,-7.568484,-8.920028,-4.573709,-0.441682,-8.657673,8.070932,-1.361471,7.806276,6.070960,-5.707597,-4.460406,-5.130068,-5.528664,-4.197903,0.030842,4.355527,3.033605,-4.199088,5.993400,-9.093181,-9.311634,3.802609,-8.872379,-6.192239,2.889903,8.526852,9.895900,3.076259,9.832684,-7.071239,5.786610,6.875601,0.756780,-2.648874,-4.166750,6.033843,2.346628,6.984910,0.260074,5.467227,-5.562763,-8.026818,-7.076899,5.425418,-5.694249,1.471139,-3.867604,-6.670241,-6.558739,-7.985206,1.536824,1.316757,-7.717056,-4.505332,-6.730119,-1.718465,-9.901314,-7.621030,-3.852106,-6.809531,2.197484,7.653069,-7.609924,2.349546,-5.223075,4.383723,7.275716,-2.354907,9.977413,-9.105333,8.528006,-7.820897,7.510831,-1.933899,6.344753,-0.341000,-4.280575,-7.116128,0.012306,6.309544,3.205460,7.815945,0.086233,-2.979170,-0.214763,-2.018123,-9.166230,9.217973,0.953926,0.178622,7.162543,9.383421,9.834748,-5.683207,-9.314708,9.127525,4.928565,-1.593888,-7.321034,7.568050,7.700025,-1.138157,0.323423,-5.430532,-6.940906,5.543119,5.511943,4.637490,-9.887957,-3.635217,-3.045893,-9.637220,-3.903854,-4.539457,3.139645,-9.266508,-1.291171,-6.976125,-6.963439,-4.857966,2.215481,-5.055475,7.328262,9.387485,-7.488919,-6.532700,3.545490,-9.297789,3.593847,0.731329,-6.324861,-8.079541,-4.411713,-5.188446,3.084592,3.434604,-3.261595,9.614715,-1.241816,7.996820,-7.331717,3.212719,-5.176100,-8.907607,-7.720050,2.806207,1.162580,8.323070,-2.516405,-1.000088,1.331752,-3.725127,-4.156756,0.001375,3.545956,8.311906,-7.883461,9.962413,-6.697934,-5.355468,0.307145,2.057599,9.228957,0.201057,4.221417,0.717576,0.675249,-0.718485,-2.868613,-0.464452,5.194325,9.442525,-6.905198,-0.677853,-5.051908,-3.364211,-2.202838,-1.705470,-1.250770,-4.343679,-9.943757,-1.279014,1.559003,0.775765,-5.170632,0.267668,1.916730,3.187172,-2.551698,-2.737093,4.770088,-1.755440,-3.578868,7.220136,-1.919902,-4.831937,-7.052733,3.437479,-2.648762,3.005853,-3.589346,-1.769074,6.608166,-8.254709,5.786409,2.171522,3.102916,9.866781,-4.144419,-0.803667,-9.848197,7.441572,-1.647057,-0.664219,3.235659,7.508720,7.983068,7.868889,-2.482412,-7.265979,-2.169591,-7.407433,4.364479,-6.597561,-4.130737,3.662081,4.669133,7.418869,8.879460,-8.222770,9.068384,-2.773969,6.354303,-5.065838,5.190204,-0.220759,-7.403364,0.235892,-2.071993,3.691566,8.045266,4.447239,-0.947525,-0.377346,-3.938525,-3.250024,-7.005934,-9.911034,4.040753,1.757533,4.978824,-4.246749,-5.849601,-7.661857,7.321663,-3.119111,-6.717953,-6.097576,-6.971099,-4.247852,8.881437,9.349782,0.035762,-0.937089,-8.999332,-4.827810,3.385335,2.203469,-6.707954,-0.335975,1.222407,-9.831533,-3.592307,-7.966501,3.421839,1.188894,-8.337161,4.892390,0.295790,-3.002284,0.040712,7.715321,0.272713,6.158631,-4.819243,-3.543239,-1.139404,9.608485,5.486052,7.026795,-3.987698,2.616485,5.750616,7.850216,-9.897633,-1.477218,-7.942476,-4.654906,-8.065398,2.924635,2.694356,9.668102,4.464270,-0.668355,-8.424487,9.252143,7.381877,7.429332,9.233699,2.362320,-3.932784,-3.632278,7.100518,0.991101,-3.806122,4.435469,-1.650536,6.601798,9.136333,-6.501354,0.470494,5.805511,-3.154049,-6.087874,7.929424,-7.137028,0.517301,-1.614990,1.411061,2.678307,-4.855816,-8.587842,6.389747,-4.153167,8.491040,-3.012432,8.398239,0.998836,7.208833,0.503587,4.408142,-1.791541,-4.237582,-1.267419,-3.207959,4.012328,-9.859869,4.936179,3.420879,-3.047246,-0.600795,-8.660063,-7.025343,-0.363306,3.619071,-8.853896,8.255977,3.706767,1.325628,4.785987,7.894798,9.257869,-3.728765,2.043297,-4.889879,7.477174,6.182637,-9.733567,2.188466,4.974187,9.253326,-6.837782,-9.225813,-0.420034,6.921961,-1.691976,2.241767,-8.691989,-5.351802,1.022763,2.879172,-5.853211,-3.220280,2.556169,6.329182,-8.354621,-6.884770,7.462418,5.737998,5.531453,4.853129,8.739117,6.832273,6.435049,-0.297979,-1.073006,6.207816,-2.565551,-2.246829,3.199249,-0.088205,-8.040913,-4.316263,9.312664,1.427114,-5.558957,-2.086295,4.275935,5.995008,-8.857245,-9.982019,-8.702545,5.235368,4.652177,-1.118615,6.358089,6.239835,3.506716,6.217720,9.913094,1.623766,6.441754,0.139204,7.993048,0.637419,-8.313282,7.577904,1.204765,9.485272,-3.139512,-9.647708,-5.389414,6.620803,1.716649,1.122133,8.368140,3.989282,-7.973322,-9.588499,6.210857,2.023180,0.945707,-4.554912,8.083835,5.516593,6.522986,3.457977,6.435839,-7.314695,2.327381,8.844258,-8.035168,-5.655050,-2.481220,0.896151,-7.101177,1.440398,6.492938,2.842902,-6.601420,-0.313994,-2.037299,7.176235,-6.501722,-2.500640,7.491648,-5.053302,-6.918412,8.727800,5.183456,0.573128,0.221980,3.718117,-0.688254,-9.283392,-9.876258,5.771693,-1.350304,-7.417032,-5.859824,7.737306,4.844060,3.120847,-5.425108,-4.675496,0.797797,6.447999,-0.620441,9.102761,4.398923,4.564185,-2.146302,-5.823106,-3.500928,3.661237,-0.515181,-0.099782,8.941616,6.041509,-5.580335,0.645428,7.484195,5.805734,-5.184641,1.429592,-7.201338,3.062254,6.751337,8.922358,-4.941439,-5.583153,9.035293,-5.428143,-0.912048,-7.643657,9.181524,4.987241,0.528095,2.624387,2.432542,7.777287,2.795959,3.769888,3.371953,-8.892961,8.093690,-5.169909,-4.844641,2.579534,-9.326501,8.803624,-9.733886,8.307557,6.482688,9.637000,9.648236,-2.899840,7.174200,0.786017,3.486622,-0.092901,-7.596567,3.210472,-8.988440,3.798595,5.973557,-8.540050,2.402808,7.046757,-0.213284,-1.805616,1.174368,0.901974,-2.603855,5.615994,-1.667158,-0.465014,-7.494387,8.517302,2.953068,-2.659472,-6.944805,-0.563943,-6.318725,-3.972545,-4.778722,-3.985193,-6.402771,-0.453521,-5.671847,-5.151407,5.370425,5.464131,-3.290910,-6.303254,3.813813,-8.075289,-8.631181,-2.323952,-1.349744,6.426338,4.580899,4.247640,3.127953,-5.714301,6.448639,4.922120,1.120368,2.765375,4.488445,3.881620,-6.537320,-5.674184,-3.456558,4.031847,-0.863583,3.359574,-1.440054,2.215493,-6.526351,8.801757,-9.058381,4.847171,6.951543,4.779363,-3.739444,7.672074,7.612889,6.394769,-3.801673,-2.765398,-9.885462,-3.801853,-4.660299,-1.351653,7.593422,5.331347,-7.480303,-6.733232,7.294623,8.904260,-2.116935,-1.805189,-6.250055,-3.557404,-1.646475,6.263156,-8.275453,3.905865,0.111966,-2.753071,5.354248,-9.672924,-0.787014,7.822118,6.889230,2.281446,8.821507,4.485530,-4.654312,8.530022,-9.104929,7.251510,-9.709918,-8.314797,-9.872674,6.438717,-6.831937,-0.945763,-4.369084,-0.653091,-0.036941,6.989794,6.088056,0.135367,-3.338630,-0.883141,-4.654426,-2.210985,-3.116865,-7.745293,5.235820,-6.510620,-2.423640,-0.682804,-6.665730,-6.245003,-1.353118,-8.581760,-1.892800,2.045534,-7.512652,8.818784,6.722147,-2.183063,-4.473845,8.709352,-6.485099,0.925074,-1.929303,0.289568,-2.790404,4.223665,9.143977,-3.947028,5.741457,9.864209,4.518075,-0.424985,-3.000064,-3.198455,-3.798839,-2.841787,4.292834,7.681479,5.847010,-2.317051,-0.510455,-4.902848,-0.101927,5.023406,1.157539,8.505301,3.298755,6.017184,-7.836882,6.344302,0.739462,6.271592,9.544545,-8.061090,9.318001,1.141942,-4.164388,-2.157457,-3.207695,6.665770,-2.738656,8.430048,-5.935208,1.336721,-6.352392,8.991251,-7.784471,3.337744,6.967318,-4.565119,-4.472766,-7.822705,8.384873,8.260158,-2.041424,2.056625,-3.803459,5.473142,-8.709868,0.755634,8.645424,-0.406142,-8.845572,8.977205,-1.954959,-0.310623,6.900960,6.378200,6.923305,2.095022,5.879956,-1.929546,2.923303,1.483185,-3.278106,-3.450716,8.025455,1.785883,-9.603290,-2.241660,-5.833055,-8.401825,7.021511,4.218558,-7.200051,9.435179,6.063479,1.714005,2.841022,-2.039615,-7.196726,7.802956,-3.677135,7.282022,6.660205,6.684406,-6.416885,-5.721581,0.100443,0.435425,-7.528756,-4.541261,-4.603398,-9.147092,-8.962086,-3.836591,6.361615,-1.238304,-0.109013,4.631048,0.585468,-0.454732,-3.285724,-6.455159,-3.817343,9.729275,-6.026907,-2.221715,-9.541198,-8.075705,-7.829209,1.913821,-9.410842,5.265908,1.328561,-0.247478,9.945907,-9.955308,2.750710,7.086331,-7.738869,-9.031374,-1.843119,-9.037876,1.756162,6.181203,4.316715,-8.245395,8.954376,-1.251208,-4.739057,9.591581,3.935786,4.294996,-7.147230,-7.476522,2.143494,3.157995,-0.511797,-9.101768,-6.041450,4.668905,-0.561686,3.966438,8.031346,-1.668551,8.769282,9.391179,-6.790015,2.823796,7.736634,7.309076,9.106867,2.439036,-5.022622,5.513051,5.491085,-0.316233,-3.207722,8.920324,-5.054088,1.830420,-7.714560,-1.757784,3.917345,1.662523,-7.539910,-1.099229,-6.942369,2.665750,7.861550,1.326144,5.507346,4.446970,-6.074340,7.652355,-2.314278,-5.001382,5.493380,1.276111], dtype = "float32")#candidate|3405|(2250,)|const|float32
var_3406 = relay.var("var_3406", dtype = "float32", shape = (25,))#candidate|3406|(25,)|var|float32
call_3404 = relay.TupleGetItem(func_3022_call(relay.reshape(const_3405.astype('float32'), [15, 150]), relay.reshape(var_3406.astype('float32'), [25,]), ), 1)
call_3407 = relay.TupleGetItem(func_3026_call(relay.reshape(const_3405.astype('float32'), [15, 150]), relay.reshape(var_3406.astype('float32'), [25,]), ), 1)
func_2745_call = mod.get_global_var('func_2745')
func_2747_call = mutated_mod.get_global_var('func_2747')
call_3418 = relay.TupleGetItem(func_2745_call(), 0)
call_3419 = relay.TupleGetItem(func_2747_call(), 0)
func_1960_call = mod.get_global_var('func_1960')
func_1963_call = mutated_mod.get_global_var('func_1963')
var_3428 = relay.var("var_3428", dtype = "uint64", shape = (8, 70))#candidate|3428|(8, 70)|var|uint64
call_3427 = relay.TupleGetItem(func_1960_call(relay.reshape(var_3428.astype('uint64'), [10, 7, 8]), relay.reshape(var_3428.astype('uint64'), [10, 7, 8]), ), 0)
call_3429 = relay.TupleGetItem(func_1963_call(relay.reshape(var_3428.astype('uint64'), [10, 7, 8]), relay.reshape(var_3428.astype('uint64'), [10, 7, 8]), ), 0)
func_2423_call = mod.get_global_var('func_2423')
func_2425_call = mutated_mod.get_global_var('func_2425')
call_3445 = relay.TupleGetItem(func_2423_call(), 1)
call_3446 = relay.TupleGetItem(func_2425_call(), 1)
func_2745_call = mod.get_global_var('func_2745')
func_2747_call = mutated_mod.get_global_var('func_2747')
call_3450 = relay.TupleGetItem(func_2745_call(), 1)
call_3451 = relay.TupleGetItem(func_2747_call(), 1)
output = relay.Tuple([call_3402,call_3404,const_3405,var_3406,call_3418,call_3427,var_3428,call_3445,call_3450,])
output2 = relay.Tuple([call_3403,call_3407,const_3405,var_3406,call_3419,call_3429,var_3428,call_3446,call_3451,])
func_3457 = relay.Function([var_3406,var_3428,], output)
mod['func_3457'] = func_3457
mod = relay.transform.InferType()(mod)
var_3458 = relay.var("var_3458", dtype = "float32", shape = (25,))#candidate|3458|(25,)|var|float32
var_3459 = relay.var("var_3459", dtype = "uint64", shape = (8, 70))#candidate|3459|(8, 70)|var|uint64
output = func_3457(var_3458,var_3459,)
func_3460 = relay.Function([var_3458,var_3459,], output)
mutated_mod['func_3460'] = func_3460
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2423_call = mod.get_global_var('func_2423')
func_2425_call = mutated_mod.get_global_var('func_2425')
call_3462 = relay.TupleGetItem(func_2423_call(), 1)
call_3463 = relay.TupleGetItem(func_2425_call(), 1)
uop_3480 = relay.sigmoid(call_3462.astype('float32')) # shape=(12, 7, 3)
uop_3482 = relay.sigmoid(call_3463.astype('float32')) # shape=(12, 7, 3)
output = relay.Tuple([uop_3480,])
output2 = relay.Tuple([uop_3482,])
func_3483 = relay.Function([], output)
mod['func_3483'] = func_3483
mod = relay.transform.InferType()(mod)
output = func_3483()
func_3484 = relay.Function([], output)
mutated_mod['func_3484'] = func_3484
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2586_call = mod.get_global_var('func_2586')
func_2587_call = mutated_mod.get_global_var('func_2587')
call_3502 = relay.TupleGetItem(func_2586_call(), 0)
call_3503 = relay.TupleGetItem(func_2587_call(), 0)
func_2745_call = mod.get_global_var('func_2745')
func_2747_call = mutated_mod.get_global_var('func_2747')
call_3546 = relay.TupleGetItem(func_2745_call(), 2)
call_3547 = relay.TupleGetItem(func_2747_call(), 2)
output = relay.Tuple([call_3502,call_3546,])
output2 = relay.Tuple([call_3503,call_3547,])
func_3560 = relay.Function([], output)
mod['func_3560'] = func_3560
mod = relay.transform.InferType()(mod)
output = func_3560()
func_3561 = relay.Function([], output)
mutated_mod['func_3561'] = func_3561
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2745_call = mod.get_global_var('func_2745')
func_2747_call = mutated_mod.get_global_var('func_2747')
call_3587 = relay.TupleGetItem(func_2745_call(), 2)
call_3588 = relay.TupleGetItem(func_2747_call(), 2)
var_3597 = relay.var("var_3597", dtype = "float64", shape = (324,))#candidate|3597|(324,)|var|float64
bop_3598 = relay.not_equal(call_3587.astype('bool'), relay.reshape(var_3597.astype('bool'), relay.shape_of(call_3587))) # shape=(324,)
bop_3601 = relay.not_equal(call_3588.astype('bool'), relay.reshape(var_3597.astype('bool'), relay.shape_of(call_3588))) # shape=(324,)
func_3175_call = mod.get_global_var('func_3175')
func_3180_call = mutated_mod.get_global_var('func_3180')
const_3612 = relay.const([5,5,6,-5,1,6,-5,2,-4,-8,6,2,7,1,5,9,-10,4,-2,-2,-8,-2,1,-10,2,3,-1,-8,-5,6,-7,-9,-9,-6,-1,-3,7,3,-9,2,-3,1,-2,-2,8,-8,-3,3,-2,-3,7,4,-9,-3,-4,-2,-2,2,-10,4,4,-4,-10,9,5,-5,-5,-10,7,-5,-8,9,1,-7,-6,10,4,-7,10,4,-7,10,7,-8,-3,7,-1,-5,-8,3,5,5,7,2,9,3,-5,10,4,8,3,9,4,8,8,7,7,3,-6,-1,10,-3,-8,-9,-10,-10,-6,7,-4,-3,8,-6,-2,9,3,-6,-4,10,-1,4,9,4,-4,-7,-8,1,-8,1,5,1,7,-2,6,3,-4,9,-1,-1,6,1,6,-9,8,-8,9,-2,-7,-7,6,-10,-7,4,-2,10,2,-3,3,5,-4,-6,-10,-9,-3,-10,8,-9,-9,-10,-7,10,-2,-8,-6,10,-5,3,5,4,10,-6,4,-3,8,7,-4,5,-1,-4,-7,5,1,9,1,3,-9,-10,-4,-7,6,10,-2,-9,9,8,-8,-9,-4,-6,-4,-6,9,8,-1,-6,9,-9,10,-4,3,-6,-6,9,-5,-4,-3,-4,6,-6,4,-4,-9,-6,2,9,-1,-6,1,-8,10,7,-2,-8,10,-3,-7,1,-3,4,-6,-1,-1,5,-4,-10,5,-10,8,-5,-1,5,7,-3,-3,-6,-3,6,-5,3,4,-8,1,-7,-7,7,1,5,8,-6,6,-9,-10,2,-6,9,-10,-2,-4,-10,-9,10,-9,-6,4,7,8,10,1,-5,8,-10,8,7,-8,4,4,-7,-8,1,9,-5,-3,4,8,-4,1,3,3,3,9,-1,1,5,3,5,-3,6], dtype = "uint8")#candidate|3612|(336,)|const|uint8
const_3613 = relay.const([[1.813951],[1.813203],[-2.420530],[-2.942648],[-1.683025],[-0.788803],[-7.868613],[-4.045364],[-4.135374],[-5.896248],[-4.845235],[-1.059478],[-1.045809],[-2.916946],[8.114629],[8.874424],[8.384556],[5.599164],[1.331889],[7.903845],[8.204130]], dtype = "float64")#candidate|3613|(21, 1)|const|float64
call_3611 = relay.TupleGetItem(func_3175_call(relay.reshape(const_3612.astype('uint8'), [6, 14, 4]), relay.reshape(const_3612.astype('uint8'), [6, 14, 4]), relay.reshape(const_3613.astype('float64'), [21,]), ), 1)
call_3614 = relay.TupleGetItem(func_3180_call(relay.reshape(const_3612.astype('uint8'), [6, 14, 4]), relay.reshape(const_3612.astype('uint8'), [6, 14, 4]), relay.reshape(const_3613.astype('float64'), [21,]), ), 1)
output = relay.Tuple([bop_3598,call_3611,const_3612,const_3613,])
output2 = relay.Tuple([bop_3601,call_3614,const_3612,const_3613,])
func_3615 = relay.Function([var_3597,], output)
mod['func_3615'] = func_3615
mod = relay.transform.InferType()(mod)
mutated_mod['func_3615'] = func_3615
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3616 = relay.var("var_3616", dtype = "float64", shape = (324,))#candidate|3616|(324,)|var|float64
func_3615_call = mutated_mod.get_global_var('func_3615')
call_3617 = func_3615_call(var_3616)
output = call_3617
func_3618 = relay.Function([var_3616], output)
mutated_mod['func_3618'] = func_3618
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3065_call = mod.get_global_var('func_3065')
func_3067_call = mutated_mod.get_global_var('func_3067')
call_3645 = relay.TupleGetItem(func_3065_call(), 0)
call_3646 = relay.TupleGetItem(func_3067_call(), 0)
func_2814_call = mod.get_global_var('func_2814')
func_2817_call = mutated_mod.get_global_var('func_2817')
const_3658 = relay.const([-6,7,1,8,6,4,3,-8,8,4,-9,-6,6,-8,-2,-1,3,-8,1,2,-1,1,-8,-4,-9,6,1,4,7,8,-7,10,9,4,-5,-7,-3,-10,-1,7,-5,5,-2,5,-5,1,-6,-1,10,-6,4,-3,6,-9,-10,-5,9,2,3,5,4,9,6,6,-7,-2,8,1,-9,-8,-9,3,-5,3,4,-5,3,-8,-3,-6,-9,-3,-4,-10,7,1,3,5,-8,-7,6,1,-5,8,-3,10,3,-8,10,-9,8,-2,-3,-2,-7,3,10,-5,-3,2,-7,8,8,4,-4,4,4,-4,6,8,-4,1,7,8,6,5,-4,3,7,-1,-2,-4,4,-3,-3,-6,-4,-10,2,8,-7,1,-6,-3,-4,5,-1,4,6,-6,10,5,-8,2,2,-7,-3,-8,7,-3,8,-10,-6,4,2,2,-1,-6,3,-10,8,-1,10,-1,5,-9,-3,-1,3,-2,5,-7,-4,-9,10,1,9,-10,-5,7,6,-2,4,9,-1,2,-8,4,3,8,-5,1,3,6,-4,-8,8,3,-5,9,5,2,2,5,3,9,4,-3,-3,7,-1,-10,-4,1,5,-5,-3,4,-5,9,2,-6,-7,-5,6,-8,6,-6,-2,10,-10,8,2,-7,8,-2,5,9,7,-2,6,1,-7,2,7,7,-7,-9,4,3,-3,2,-5,9,5,-4,-1,-2,-4,-8,-6,-6,-9,-1,2,-4,-1,2,9,9,-5,4,-9,-4,3,-2,8,-4,-5,-1,1,2,4,-9,9,7,-10,-8,1,2,8,5,-3,5,5,7,-1,-7,6,10,-3,-7,-9,-2,1,-4,-7,4,-9,-10,-5,10,7,-3,-5,-6,9,1,-2,-8,-6,-1,3,-5,-4,-7,-3,5,8,2,-10,-4,-4,4,-8,1,7,9,7,10,-10,-10,-6,2,4,9,-2,10,-8,4,-9,1,6,5,5,-5,-4,7,-2,4,-5,-10,6,5,-8,-1,5,-4,4,-4,-5,-4,-6,9,-2,-7,-7,-3,9,-6,-6,-6,1,-2,1,3,-7,-5,10,4,-8,-6,-8,-8,7,-7,-3,6,5,8,-7,2,-10,8,10,1,-5,-2,5,1,4,-9,-3,10,4,-3,-10,7,-1,-9,9,8,-4,8,-8,5,6,-10,8,6,1,5,2,1,-6,-4,-8,-10,1,-6,-6,-5,-3,-3,9,5,9,-1,-1,-6,-1,-4,3,3,-4,6,-10,-4,8,-5,5,6,1,6,-10,-9,-1,1,-8,9,-5,-2,6,7,-3,10,6,3,3,-7,10,-3,-10,-4,-1,2,7,-9,2,-6,2,-3,10,-4,-3,-6,-9,-3,-3,1,1,-10,-7,-3,6,-4,-3,-7,-10,6,1,6,10,3,8,9,-5,-10,-7,3,-10,2,-3,8,7,9,-7,2,-6,-3,8,6,1,8,-10,-1,-2,-6,9,10,-10,-8,8,6,-4,10,1,5,-5,1,-8,6,5,-4,-5,-2,7,-2,1,-9,-7,9,9,3,9,-7,-4,8,4,6,8,6,8,-8,-8], dtype = "int32")#candidate|3658|(585,)|const|int32
call_3657 = relay.TupleGetItem(func_2814_call(relay.reshape(const_3658.astype('int32'), [585, 1])), 2)
call_3659 = relay.TupleGetItem(func_2817_call(relay.reshape(const_3658.astype('int32'), [585, 1])), 2)
output = relay.Tuple([call_3645,call_3657,const_3658,])
output2 = relay.Tuple([call_3646,call_3659,const_3658,])
func_3665 = relay.Function([], output)
mod['func_3665'] = func_3665
mod = relay.transform.InferType()(mod)
output = func_3665()
func_3666 = relay.Function([], output)
mutated_mod['func_3666'] = func_3666
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3483_call = mod.get_global_var('func_3483')
func_3484_call = mutated_mod.get_global_var('func_3484')
call_3722 = relay.TupleGetItem(func_3483_call(), 0)
call_3723 = relay.TupleGetItem(func_3484_call(), 0)
func_1960_call = mod.get_global_var('func_1960')
func_1963_call = mutated_mod.get_global_var('func_1963')
const_3728 = relay.const([1,3,2,-10,-6,-4,7,2,-10,9,-8,3,7,2,-9,5,2,5,-3,-8,9,10,6,3,6,3,3,9,9,8,-8,-2,-10,-4,-4,-2,6,7,3,-9,-4,-2,-10,8,2,-9,-10,1,-10,1,-9,6,-6,-9,-3,-9,-1,-5,-1,2,1,-4,-4,1,1,-7,6,10,-6,-2,-7,7,1,1,-7,5,-4,-8,-7,-2,10,1,-3,-9,-9,-8,-1,6,-7,4,-10,9,-2,-4,-6,7,8,-4,-10,9,-4,-8,10,-7,-1,-8,-1,-8,-5,-2,-1,-1,-9,-9,7,-8,5,-8,-2,-9,-5,5,-7,9,-7,5,9,8,-10,-7,-7,8,3,-6,-10,-9,3,2,-8,1,1,-5,1,-8,-4,-8,2,-2,3,-9,2,-9,-3,-4,2,-6,3,-5,9,-5,-8,4,8,-4,-4,5,2,-1,-5,-6,2,9,-5,10,-8,9,-8,6,10,1,7,-10,-10,-4,7,1,1,-7,-6,4,-1,-10,5,9,9,9,-5,-5,-7,-9,8,-6,-2,9,7,2,4,1,9,7,1,4,-3,1,9,-6,2,7,-2,-1,-8,1,4,-5,1,1,-6,-7,3,10,-8,8,-6,-3,1,-9,7,-3,1,4,-10,5,-7,6,10,1,-2,-7,3,-9,6,-3,8,-5,-4,1,3,1,-6,-1,10,-4,10,1,5,-8,-7,-5,-5,-2,-3,-4,-8,-8,9,-3,-3,3,2,9,-3,-8,5,5,-8,-10,3,7,6,-8,-7,6,-1,3,3,1,-8,8,4,3,2,1,7,9,-3,10,9,10,-5,3,7,-3,3,-8,7,-9,5,4,-9,-7,9,2,5,2,-7,9,-9,8,-6,-8,-6,-1,8,4,10,8,3,1,-4,-10,-6,-4,3,-8,6,1,-5,-4,-10,8,4,-9,-8,6,3,-2,7,5,-7,9,9,7,4,4,-4,4,-10,6,5,-9,-10,-7,-8,4,-3,9,5,-3,9,-3,-2,10,1,-8,-8,3,10,4,2,5,3,7,-2,-8,-10,4,7,-1,-2,5,10,7,-9,9,-8,-5,8,10,-2,1,-9,-3,-10,7,5,-1,1,6,8,-1,10,1,10,10,-2,-6,-7,-9,5,-9,9,7,8,10,-7,-6,9,-6,1,-10,4,-3,-5,8,-10,2,6,9,-1,2,2,-6,5,9,-6,6,5,3,-4,1,7,-3,-1,7,-3,-1,-6,5,10,7,1,8,-5,-7,3,4,1,4,-10,-5,1,8,-4,-3,5,10,5,3,10,-2,-5,-6,-2,8,3,-6,1,4,-5,2,6,7,2,5,9,7,-2,2,-1,-7,-6,-1,-7,4,1,-3,6,10,1,9,3,-3,9,10,-6,6,-9,10,-9,7,8,9,-1,3,-4,-1,-8,-1,-10,7,-7,-1,-8,-4,3,9,3,-7,-6,-6,1,-9,-2,8,-1,-1,7,-7,-10,6], dtype = "uint64")#candidate|3728|(560,)|const|uint64
call_3727 = relay.TupleGetItem(func_1960_call(relay.reshape(const_3728.astype('uint64'), [10, 7, 8]), relay.reshape(const_3728.astype('uint64'), [10, 7, 8]), ), 0)
call_3729 = relay.TupleGetItem(func_1963_call(relay.reshape(const_3728.astype('uint64'), [10, 7, 8]), relay.reshape(const_3728.astype('uint64'), [10, 7, 8]), ), 0)
output = relay.Tuple([call_3722,call_3727,const_3728,])
output2 = relay.Tuple([call_3723,call_3729,const_3728,])
func_3737 = relay.Function([], output)
mod['func_3737'] = func_3737
mod = relay.transform.InferType()(mod)
mutated_mod['func_3737'] = func_3737
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3737_call = mutated_mod.get_global_var('func_3737')
call_3738 = func_3737_call()
output = call_3738
func_3739 = relay.Function([], output)
mutated_mod['func_3739'] = func_3739
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2745_call = mod.get_global_var('func_2745')
func_2747_call = mutated_mod.get_global_var('func_2747')
call_3806 = relay.TupleGetItem(func_2745_call(), 0)
call_3807 = relay.TupleGetItem(func_2747_call(), 0)
output = call_3806
output2 = call_3807
func_3808 = relay.Function([], output)
mod['func_3808'] = func_3808
mod = relay.transform.InferType()(mod)
output = func_3808()
func_3809 = relay.Function([], output)
mutated_mod['func_3809'] = func_3809
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2423_call = mod.get_global_var('func_2423')
func_2425_call = mutated_mod.get_global_var('func_2425')
call_3841 = relay.TupleGetItem(func_2423_call(), 1)
call_3842 = relay.TupleGetItem(func_2425_call(), 1)
output = call_3841
output2 = call_3842
func_3843 = relay.Function([], output)
mod['func_3843'] = func_3843
mod = relay.transform.InferType()(mod)
output = func_3843()
func_3844 = relay.Function([], output)
mutated_mod['func_3844'] = func_3844
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2586_call = mod.get_global_var('func_2586')
func_2587_call = mutated_mod.get_global_var('func_2587')
call_3860 = relay.TupleGetItem(func_2586_call(), 0)
call_3861 = relay.TupleGetItem(func_2587_call(), 0)
func_2568_call = mod.get_global_var('func_2568')
func_2570_call = mutated_mod.get_global_var('func_2570')
call_3868 = relay.TupleGetItem(func_2568_call(), 1)
call_3869 = relay.TupleGetItem(func_2570_call(), 1)
func_3808_call = mod.get_global_var('func_3808')
func_3809_call = mutated_mod.get_global_var('func_3809')
call_3872 = func_3808_call()
call_3873 = func_3808_call()
output = relay.Tuple([call_3860,call_3868,call_3872,])
output2 = relay.Tuple([call_3861,call_3869,call_3873,])
func_3875 = relay.Function([], output)
mod['func_3875'] = func_3875
mod = relay.transform.InferType()(mod)
mutated_mod['func_3875'] = func_3875
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3875_call = mutated_mod.get_global_var('func_3875')
call_3876 = func_3875_call()
output = call_3876
func_3877 = relay.Function([], output)
mutated_mod['func_3877'] = func_3877
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3560_call = mod.get_global_var('func_3560')
func_3561_call = mutated_mod.get_global_var('func_3561')
call_3897 = relay.TupleGetItem(func_3560_call(), 1)
call_3898 = relay.TupleGetItem(func_3561_call(), 1)
var_3900 = relay.var("var_3900", dtype = "float64", shape = (324,))#candidate|3900|(324,)|var|float64
bop_3901 = relay.bitwise_xor(call_3897.astype('uint64'), relay.reshape(var_3900.astype('uint64'), relay.shape_of(call_3897))) # shape=(324,)
bop_3904 = relay.bitwise_xor(call_3898.astype('uint64'), relay.reshape(var_3900.astype('uint64'), relay.shape_of(call_3898))) # shape=(324,)
output = bop_3901
output2 = bop_3904
func_3905 = relay.Function([var_3900,], output)
mod['func_3905'] = func_3905
mod = relay.transform.InferType()(mod)
var_3906 = relay.var("var_3906", dtype = "float64", shape = (324,))#candidate|3906|(324,)|var|float64
output = func_3905(var_3906)
func_3907 = relay.Function([var_3906], output)
mutated_mod['func_3907'] = func_3907
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3560_call = mod.get_global_var('func_3560')
func_3561_call = mutated_mod.get_global_var('func_3561')
call_3919 = relay.TupleGetItem(func_3560_call(), 1)
call_3920 = relay.TupleGetItem(func_3561_call(), 1)
output = relay.Tuple([call_3919,])
output2 = relay.Tuple([call_3920,])
func_3948 = relay.Function([], output)
mod['func_3948'] = func_3948
mod = relay.transform.InferType()(mod)
mutated_mod['func_3948'] = func_3948
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3948_call = mutated_mod.get_global_var('func_3948')
call_3949 = func_3948_call()
output = call_3949
func_3950 = relay.Function([], output)
mutated_mod['func_3950'] = func_3950
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3975 = relay.var("var_3975", dtype = "float64", shape = (3, 10, 7))#candidate|3975|(3, 10, 7)|var|float64
uop_3976 = relay.sqrt(var_3975.astype('float64')) # shape=(3, 10, 7)
output = relay.Tuple([uop_3976,])
output2 = relay.Tuple([uop_3976,])
func_3981 = relay.Function([var_3975,], output)
mod['func_3981'] = func_3981
mod = relay.transform.InferType()(mod)
mutated_mod['func_3981'] = func_3981
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3982 = relay.var("var_3982", dtype = "float64", shape = (3, 10, 7))#candidate|3982|(3, 10, 7)|var|float64
func_3981_call = mutated_mod.get_global_var('func_3981')
call_3983 = func_3981_call(var_3982)
output = call_3983
func_3984 = relay.Function([var_3982], output)
mutated_mod['func_3984'] = func_3984
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2586_call = mod.get_global_var('func_2586')
func_2587_call = mutated_mod.get_global_var('func_2587')
call_3997 = relay.TupleGetItem(func_2586_call(), 0)
call_3998 = relay.TupleGetItem(func_2587_call(), 0)
output = call_3997
output2 = call_3998
func_4007 = relay.Function([], output)
mod['func_4007'] = func_4007
mod = relay.transform.InferType()(mod)
output = func_4007()
func_4008 = relay.Function([], output)
mutated_mod['func_4008'] = func_4008
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2568_call = mod.get_global_var('func_2568')
func_2570_call = mutated_mod.get_global_var('func_2570')
call_4013 = relay.TupleGetItem(func_2568_call(), 0)
call_4014 = relay.TupleGetItem(func_2570_call(), 0)
output = relay.Tuple([call_4013,])
output2 = relay.Tuple([call_4014,])
func_4020 = relay.Function([], output)
mod['func_4020'] = func_4020
mod = relay.transform.InferType()(mod)
output = func_4020()
func_4021 = relay.Function([], output)
mutated_mod['func_4021'] = func_4021
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3665_call = mod.get_global_var('func_3665')
func_3666_call = mutated_mod.get_global_var('func_3666')
call_4037 = relay.TupleGetItem(func_3665_call(), 0)
call_4038 = relay.TupleGetItem(func_3666_call(), 0)
func_1719_call = mod.get_global_var('func_1719')
func_1721_call = mutated_mod.get_global_var('func_1721')
var_4046 = relay.var("var_4046", dtype = "float64", shape = (18,))#candidate|4046|(18,)|var|float64
call_4045 = func_1719_call(relay.reshape(var_4046.astype('float64'), [1, 6, 3]))
call_4047 = func_1719_call(relay.reshape(var_4046.astype('float64'), [1, 6, 3]))
uop_4060 = relay.log(call_4037.astype('float64')) # shape=(9, 4, 9)
uop_4062 = relay.log(call_4038.astype('float64')) # shape=(9, 4, 9)
func_3981_call = mod.get_global_var('func_3981')
func_3984_call = mutated_mod.get_global_var('func_3984')
const_4069 = relay.const([-1.450376,6.541747,-6.387400,3.357932,5.596506,-3.362118,-8.420078,-5.815200,-6.552510,-9.231687,1.502165,-9.576092,-2.480332,-8.302669,9.047817,-1.476245,-1.871789,-3.934685,-0.767627,-5.352776,-5.365590,4.418714,-0.515150,3.899238,-9.947166,6.531352,3.146149,9.658771,-3.562864,7.298409,-8.901390,8.008125,2.471790,4.874107,8.284329,-9.711213,-7.974881,-8.604254,2.003264,7.190607,1.446553,-4.584386,-5.046725,-5.164370,8.743145,-2.174103,9.979833,-3.429540,-1.356900,-4.399237,-4.101074,6.057700,-9.792760,7.559405,-9.646178,-3.280895,3.014090,-3.714428,-6.653886,7.541718,9.259254,6.234605,5.424528,2.493722,2.808794,-5.434910,-2.118519,-6.758521,7.921681,0.639108,-4.818357,-9.237133,-0.055718,-4.627819,5.138322,-0.440825,7.903024,-7.883197,1.841677,-0.046239,6.001974,-5.978977,3.442441,6.702214,4.360916,-5.084087,-1.425727,1.970932,0.672908,8.971956,0.441165,1.476731,-5.554262,-2.429291,-5.066975,-5.741851,9.978906,5.666666,-8.727909,9.184324,9.855583,2.481869,-8.128520,-8.874862,-1.776879,2.779693,1.089972,5.585024,-0.456417,-2.256482,-7.218408,-1.538393,2.930900,-4.490766,-9.448215,6.785959,6.472418,6.568335,-9.378309,-6.656831,-3.180305,-2.515224,-1.202089,3.911265,7.902210,3.286931,-7.239663,3.755694,-8.866057,7.087131,-6.770902,-2.847324,-5.445944,0.731684,-8.889046,6.545554,2.100999,-9.338966,6.302075,-6.241865,2.019758,9.817390,-1.326539,-3.162008,-2.385349,5.481768,-7.778681,7.330021,-9.479417,6.556334,-2.931952,4.423245,3.548253,2.681395,4.618216,4.200299,-3.734100,-0.778534,-5.390140,1.046896,1.161658,0.386006,-7.126327,-4.216508,7.109440,8.652865,-4.140278,-6.140209,6.673087,5.287427,8.227999,4.334817,1.496534,-5.409625,-9.642560,-7.768944,8.994267,-7.211127,-2.576248,-9.038088,-0.666802,2.733389,-5.448481,-8.266345,-2.658829,-4.932332,7.974031,2.865163,1.614826,-0.666307,5.676597,4.214161,-9.380448,-7.375505,-8.302061,-9.415364,8.281572,-3.749174,9.594636,6.211779,-9.994370,-5.754016,1.749031,-7.043350,1.712846,5.915071,0.447958,0.970487,-7.681104,7.868533], dtype = "float64")#candidate|4069|(210,)|const|float64
call_4068 = relay.TupleGetItem(func_3981_call(relay.reshape(const_4069.astype('float64'), [3, 10, 7])), 0)
call_4070 = relay.TupleGetItem(func_3984_call(relay.reshape(const_4069.astype('float64'), [3, 10, 7])), 0)
output = relay.Tuple([call_4045,var_4046,uop_4060,call_4068,const_4069,])
output2 = relay.Tuple([call_4047,var_4046,uop_4062,call_4070,const_4069,])
func_4078 = relay.Function([var_4046,], output)
mod['func_4078'] = func_4078
mod = relay.transform.InferType()(mod)
mutated_mod['func_4078'] = func_4078
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4079 = relay.var("var_4079", dtype = "float64", shape = (18,))#candidate|4079|(18,)|var|float64
func_4078_call = mutated_mod.get_global_var('func_4078')
call_4080 = func_4078_call(var_4079)
output = call_4080
func_4081 = relay.Function([var_4079], output)
mutated_mod['func_4081'] = func_4081
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2568_call = mod.get_global_var('func_2568')
func_2570_call = mutated_mod.get_global_var('func_2570')
call_4137 = relay.TupleGetItem(func_2568_call(), 1)
call_4138 = relay.TupleGetItem(func_2570_call(), 1)
output = call_4137
output2 = call_4138
func_4143 = relay.Function([], output)
mod['func_4143'] = func_4143
mod = relay.transform.InferType()(mod)
mutated_mod['func_4143'] = func_4143
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4143_call = mutated_mod.get_global_var('func_4143')
call_4144 = func_4143_call()
output = call_4144
func_4145 = relay.Function([], output)
mutated_mod['func_4145'] = func_4145
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2909_call = mod.get_global_var('func_2909')
func_2911_call = mutated_mod.get_global_var('func_2911')
call_4213 = relay.TupleGetItem(func_2909_call(), 0)
call_4214 = relay.TupleGetItem(func_2911_call(), 0)
var_4228 = relay.var("var_4228", dtype = "float64", shape = (9, 4, 9))#candidate|4228|(9, 4, 9)|var|float64
bop_4229 = relay.greater_equal(call_4213.astype('bool'), relay.reshape(var_4228.astype('bool'), relay.shape_of(call_4213))) # shape=(9, 4, 9)
bop_4232 = relay.greater_equal(call_4214.astype('bool'), relay.reshape(var_4228.astype('bool'), relay.shape_of(call_4214))) # shape=(9, 4, 9)
output = bop_4229
output2 = bop_4232
func_4235 = relay.Function([var_4228,], output)
mod['func_4235'] = func_4235
mod = relay.transform.InferType()(mod)
var_4236 = relay.var("var_4236", dtype = "float64", shape = (9, 4, 9))#candidate|4236|(9, 4, 9)|var|float64
output = func_4235(var_4236)
func_4237 = relay.Function([var_4236], output)
mutated_mod['func_4237'] = func_4237
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4143_call = mod.get_global_var('func_4143')
func_4145_call = mutated_mod.get_global_var('func_4145')
call_4275 = func_4143_call()
call_4276 = func_4143_call()
output = relay.Tuple([call_4275,])
output2 = relay.Tuple([call_4276,])
func_4295 = relay.Function([], output)
mod['func_4295'] = func_4295
mod = relay.transform.InferType()(mod)
mutated_mod['func_4295'] = func_4295
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4295_call = mutated_mod.get_global_var('func_4295')
call_4296 = func_4295_call()
output = call_4296
func_4297 = relay.Function([], output)
mutated_mod['func_4297'] = func_4297
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3665_call = mod.get_global_var('func_3665')
func_3666_call = mutated_mod.get_global_var('func_3666')
call_4327 = relay.TupleGetItem(func_3665_call(), 0)
call_4328 = relay.TupleGetItem(func_3666_call(), 0)
var_4331 = relay.var("var_4331", dtype = "float64", shape = (9, 4, 9))#candidate|4331|(9, 4, 9)|var|float64
bop_4332 = relay.maximum(call_4327.astype('uint32'), relay.reshape(var_4331.astype('uint32'), relay.shape_of(call_4327))) # shape=(9, 4, 9)
bop_4335 = relay.maximum(call_4328.astype('uint32'), relay.reshape(var_4331.astype('uint32'), relay.shape_of(call_4328))) # shape=(9, 4, 9)
func_2814_call = mod.get_global_var('func_2814')
func_2817_call = mutated_mod.get_global_var('func_2817')
var_4362 = relay.var("var_4362", dtype = "int32", shape = (585,))#candidate|4362|(585,)|var|int32
call_4361 = relay.TupleGetItem(func_2814_call(relay.reshape(var_4362.astype('int32'), [585, 1])), 2)
call_4363 = relay.TupleGetItem(func_2817_call(relay.reshape(var_4362.astype('int32'), [585, 1])), 2)
output = relay.Tuple([bop_4332,call_4361,var_4362,])
output2 = relay.Tuple([bop_4335,call_4363,var_4362,])
func_4365 = relay.Function([var_4331,var_4362,], output)
mod['func_4365'] = func_4365
mod = relay.transform.InferType()(mod)
var_4366 = relay.var("var_4366", dtype = "float64", shape = (9, 4, 9))#candidate|4366|(9, 4, 9)|var|float64
var_4367 = relay.var("var_4367", dtype = "int32", shape = (585,))#candidate|4367|(585,)|var|int32
output = func_4365(var_4366,var_4367,)
func_4368 = relay.Function([var_4366,var_4367,], output)
mutated_mod['func_4368'] = func_4368
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4295_call = mod.get_global_var('func_4295')
func_4297_call = mutated_mod.get_global_var('func_4297')
call_4389 = relay.TupleGetItem(func_4295_call(), 0)
call_4390 = relay.TupleGetItem(func_4297_call(), 0)
func_3372_call = mod.get_global_var('func_3372')
func_3378_call = mutated_mod.get_global_var('func_3378')
var_4399 = relay.var("var_4399", dtype = "float32", shape = (25,))#candidate|4399|(25,)|var|float32
var_4400 = relay.var("var_4400", dtype = "int32", shape = (585,))#candidate|4400|(585,)|var|int32
const_4401 = relay.const([5.502032,5.394481,-7.407657,8.920587,1.471715,-6.487467,1.146669,-5.059545,7.928522,-7.229908,-3.818898,9.206557,-9.864644,2.929704,7.793309,-6.393299,-5.655833,5.075211,7.752015,-1.305447,-7.762773,-9.956699,3.971426,-6.649127,3.618683,2.502563,-6.165365,-0.302094,9.510339,-3.480194,-2.390157,-5.536934,1.670057,6.817140,-6.928247,5.673678,5.569451,-4.781585,-6.654743,6.493832,8.336011,7.269319,5.976172,-1.215252,5.426735,-0.571601,7.660160,-9.284706,-3.264431,8.415221,4.624640,3.677418,-8.992437,-8.550634,2.883319,-7.856505,-6.854315,-9.815149,9.445637,-1.331317,-9.582489,-5.294673,4.405686,-8.452009,4.180803,-3.209666,-9.231450,5.753773,7.363533,6.387653,0.347835,2.555037,-3.434272,3.254890,-7.042032,-6.201807,-6.313658,-6.582334,-4.148051,8.006372,-0.358673,-0.537907,-0.719767,2.161437,4.766338,-6.313462,-0.876051,-6.700304,9.095158,-0.762365,-0.124462,-3.926556,-3.902031,-5.174343,1.566832,-3.255550,-8.467878,-8.479994,-2.032368,-2.091338,1.823349,-7.207768,3.089545,-7.021718,-3.384658,-4.260941,8.526570,-3.838877,-4.916744,-5.574119,-7.836111,5.798702,-4.540662,6.448156,-7.204786,-2.264789,-3.454638,4.487919,-0.334040,3.851009,9.364906,3.610163,-7.194822,-9.419669,-6.648784,0.223951,2.544260,8.582246,-1.463430,-3.938511,6.582654,-5.674155,8.159011,1.094106,9.617313,-5.659293,-5.598478,-4.320028,9.387327,8.479163,1.427014,2.634971,-0.416453,-9.138446,1.825380,3.807537,-1.179393,6.904318,2.785326,3.508350,9.335668,8.570363,6.496552,-6.938377,-7.049014,-2.577443,-2.750711,-8.375537,6.770062,-1.916400,5.554419,0.077536,2.481639,6.185876,3.014147,-5.028783,0.267648,-4.351320,5.010828,8.307570,2.611351,3.239572,7.821744,-8.789339,1.433106,-5.130904,-4.141845,-8.901465,-8.300554,-7.024297,-4.709652,-8.712999,8.502852,-7.202132,4.674810,-0.198551,0.852803,7.655218,-9.029876,6.521038,-9.032377,-1.569129,4.659844,-0.682324,9.821462,8.195751,5.825641,5.069984,0.107737,9.324512,3.111177,5.336505,-1.815108,-0.737009,-3.152477,-8.746023,7.017482,8.022540,9.759691,-3.509940,-9.201320,-1.754215,0.422467,-4.489485,9.029448,9.640551,-7.559626,7.583450,3.560446,3.598775,-7.389459,-9.607653,-0.345935,-3.562686,-6.398294,-7.333476,2.989301,-2.259796,-7.143657,8.232935,0.570181,1.911317,9.784408,-2.602690,-5.060985,-7.000319,0.641657,-8.282963,-4.488073,7.171158,6.802938,3.494809,-3.382526,3.638605,7.044292,-7.041068,5.443275,-1.498253,-1.023539,-8.522543,-9.261870,3.344919,4.003014,0.701802,2.752937,-2.565257,8.892592,0.364651,-7.455159,-2.243274,9.074434,-8.381826,-3.272095,4.688935,3.142948,8.318447,-0.564012,0.776268,-3.756553,5.902845,4.264336,-7.308442,9.583752,-9.053532,-2.740035,1.441677,7.415789,3.576957,-9.853478,-3.498834,-4.875816,9.321522,8.571843,-5.786793,-7.156147,2.021502,-0.095578,-1.159108,1.984289,0.987530,6.776793,4.915018,-2.226111,5.038460,0.178779,-5.548557,1.121155,-6.883038,-8.973691,7.553370,-0.234932,-7.868815,-0.160643,-9.065738,5.018693,-4.131065,5.140207,0.582322,-3.796402,-5.664115,-0.888177,6.225591,1.089495,-9.700929,-4.040800,-9.086899,-2.271040,2.346294,9.758185,-0.850146,4.815249,5.567809,-8.455661,-6.757687,2.016384,-6.075333,2.146564,-9.214752,4.725882,-3.344137,-7.828930,-2.503180,1.010772,8.590295,-2.528958,2.857841,-9.484822,-4.888352,7.025475,7.364817,9.251762,5.763075,9.106674,7.627237,-3.691533,2.224912,-0.915289,-1.311993,0.975662,-3.091192,7.881992,-7.406895,5.917053,5.206578,4.267672,1.226253,-4.317190,-4.921314,-2.047418,6.859012,2.888511,3.406947,-1.347598,-8.722746,-8.549916,0.369677,-7.808906,2.196683,-9.561923,0.086216,-6.505188,7.221180,6.779129,-6.336652,1.095445,-1.003537,-6.238732,6.174178,4.807038,0.191907,-6.880616,-6.216297,-5.007410,-8.081480,-2.397290,-3.975625,5.618003,9.394353,4.970661,-9.469784,7.638177,-7.357212,2.597532,1.853698,7.395437,-6.091630,1.293271,-1.440219,-0.625474,5.341088,-5.892841,4.487052,9.636493,-5.504167,3.345383,5.479819,-9.805934,-4.019966,2.187016,-9.245221,-7.193086,8.814581,3.712635,3.893597,-0.150475,-0.305586,1.961137,-3.436246,0.039712,9.178171,-5.962898,8.209477,-5.398972,-0.535957,0.967441,-9.171942,7.109130,-5.467025,-7.997156,-0.129243,-2.272176,5.401438,1.613089,-3.396438,8.095018,6.413822,-2.289774,-6.062928,-2.659507,1.573560,3.598952,-4.407695,6.303675,-6.879762,-6.888537,-3.300777,4.524744,-8.035368,-6.251412,3.702817,5.552694,9.254161,-9.585899,-5.465873,-6.631941,-8.271282,-3.661487,-7.506187,0.798481,5.575454,8.106352,-7.823137,1.902552,0.972718,0.055458,7.363852,3.000922,4.609068,-2.598101,7.008153,7.875746,6.233977,-1.270175,5.601587,-8.318221,2.326434,-8.438732,-8.174492,2.053285,2.277030,6.729517,0.269798,0.422023,-0.454839,-2.104357,-5.950077,9.039269,6.860246,2.557854,-8.894517,4.436857,-6.444375,1.244365,-6.571344,-6.512559,-8.098160,-7.501650,9.489149,-1.034100,-6.955314,1.880232,-1.175749,-5.910268,-7.340850,-5.211261,3.639652,-4.287607,7.221140,-2.981195,-3.628603,-9.025778,-7.187220,-0.478070,-6.042618,4.969224,-4.431792,-7.161902,-4.877996,-5.429056,-9.005411,3.508668,1.494436,1.655903,0.079016,-1.248625,4.554742,-7.508907,6.001814,3.032447,3.379957,-4.728691,5.639767,-4.821577,4.350243,-2.651657,4.409517,7.985957,5.977343,-8.992167,7.014672,6.952287,1.703572,-3.968941,-6.454077,-7.599602,4.974536,2.149155,3.715775,-1.935532,4.541609,1.941960,-2.162807,4.683349,0.698223,-4.448431,-2.759586,8.604828,-4.577796,-1.269988,9.069087,-0.294602,-1.122729,2.500853,-6.786291,-2.471172,-7.161267,-9.843407,0.049400,4.669815,4.140049,1.486864,7.418488,2.142713,-8.999402,-9.980565,8.503384,-7.875166,3.432106,7.649979,5.048687,0.850006,4.442571,-1.750983,8.692081,-3.136542,-2.405619,-7.407616,-6.261285,5.079717,4.434571,7.457016,-6.449895,-3.349165,4.553305,8.031287,-4.471210,1.040204,2.364273,-6.787466,0.970852,2.521277,-4.633991,8.707520,-4.565320,2.355323,-3.847261,-7.639643,6.830109,-4.026922,-3.806040,9.104731,-4.507749,7.257638,8.493471,-8.408096,-8.979154,-0.467222,3.675760,8.998878,-2.864556,-3.722930,5.530904,1.757024,1.797685,-6.149372,-8.488736,-0.650693,-1.706918,-2.584478,6.643085,-3.685354,-8.936748,-9.145772,-9.645706,8.421734,3.808321,3.576173,-2.439727,6.970660,1.432829,-0.267732,6.666773,-9.014624,-6.915822,9.261409,-9.655113,2.215253,-7.409435,-2.710343,7.149575,8.508806,0.885975,-7.249330,-1.787825,-5.406509,5.069423,7.014572,3.506512,-5.079210,-2.417587,-2.726404,2.796795,0.605469,0.071579,-8.204731,-8.494099,7.101486,-7.673212,6.234086,9.055510,-0.974204,-9.397334,-2.695137,-1.427747,3.863820,-7.611703,9.765535,7.338217,-4.961265,-8.843891,-4.781029,-5.008068,7.412564,5.194885,6.151157,-2.032421,0.965996,9.777040,-3.945907,-5.144592,-8.837218,2.443832,-3.714015,8.655482,-4.202257,9.411137,-0.471116,-1.015121,-8.256122,-9.161404,2.833815,-6.605083,-6.042475,-5.481207,2.755944,-9.969037,5.791902,9.420896,4.708523,-3.960927,-4.761247,-1.104315,-8.059925,-6.810953,-2.272057,-8.842214,8.877279,-5.502510,6.027375,3.762335,2.548088,-1.171452,5.871678,-8.033846,-5.161848,-9.128241,-5.669089,3.438658,-5.540452,1.194604,2.474986,-8.957527,-3.501639,-8.714534,4.537160,-9.669191,9.960439,1.692952,-0.241302,6.561038,2.644799,-8.893570,-3.030979,-2.984113,5.536515,6.872162,6.142145,-7.170688,-3.811362,9.969877,-4.894350,-2.062453,3.264616,-1.408395,3.004647,-6.368556,-8.541298,-5.465142,4.596752,5.906924,5.595802,0.508026,-1.268370,-5.303783,-7.707583,-0.966718,-2.774840,-7.929708,-0.285820,5.535280,4.535401,-7.968985,-9.573809,-5.526800,3.897061,9.025685,7.328901,-3.795885,-6.134943,-7.265561,-3.409942,5.588472,-3.456434,-0.378584,-1.412114,-8.458812,-3.448257,5.115532,-4.358806,-9.210582,9.681226,-9.185779,-5.300501,-6.898322,7.943335,0.865355,1.499449,-5.029383,-0.505417,5.898728,5.485824,-4.774013,-1.586156,-3.849627,-2.641123,2.098762,-3.943140,-4.848612,-3.778990,6.344888,3.097782,4.088388,4.796687,-9.692865,3.676473,1.508502,-1.614410,-3.110644,9.579831,2.224962,9.419513,-9.652733,-1.533675,-5.447737,5.461384,-7.183867,-4.923813,-7.929497,-2.596113,3.664969,-4.418655,-0.648246,7.230920,3.838433,2.381308,-7.355354,1.200405,5.999888,7.816245,-4.510950,8.901912,9.057866,5.393093,-2.277187,9.507923,3.861739,-9.755315,-0.237576,-6.648506,-5.379881,-5.737626,-8.802603,5.376841,2.430668,0.774734,-1.840149,-7.849932,-5.342713,6.454114,9.058707,-4.726087,-6.787114,-8.860676,-9.327256,-4.978775,5.895394,0.987570,5.499179,0.143112,1.392488,-8.030995,3.869457,-4.420574,-9.845421,-0.055768,-2.658532,-6.287819,0.284912,2.986688,0.962053,3.286156,-8.175226,-3.198318,4.224465,-1.405297,-1.484098,-7.326213,1.443239,5.279344,-2.894657,-5.834027,8.138444,2.430440,5.025380,-5.056853,1.220183,6.145213,0.947514,6.646164,5.876226,5.888833,-3.250846,-8.609794,-1.701665,-7.855549,4.141467,1.123287,5.605767,-4.321958,5.080038,-0.401351,-5.236145,-0.850617,9.888408,-2.598068,0.958474,9.825233,-3.451361,-2.937314,9.285768,2.316938,9.066188,0.369016,-3.917840,3.163065,4.474195,-3.626480,-0.105252,4.714443,-0.249107,-0.204233,8.442754,9.343081,0.957050,9.689908,-6.911818,-2.897700,6.775069,6.429420,3.406796,-2.495566,-6.477895,-5.122801,2.879580,-8.903580,3.016907,-6.440462,-6.609127,-0.185184,6.894306,0.530410,5.032998,9.162662,8.829467,-4.067031,2.100049,6.233642,0.776890,-1.092244,0.736133,-9.424505,-6.487033,-1.974022,-1.890136,-7.851787,-7.031576,-4.494005,8.869910,-6.079551,-8.466155,3.102091,9.135515,0.082576,-5.094635,-8.151671,-9.747153,9.815798,1.981449,-9.037983,-4.273416,6.968793,-5.555369,-9.213465,9.220042,-1.650383,1.088901,1.720414,0.011333,2.079670,3.241229,4.728499,-4.411991,-6.493955,-9.798832,-9.993795,6.908289,6.047328,8.354981,-9.966494,1.451879,-9.186916,-6.531264,5.786779,-7.284877,-8.694768,-4.456721,4.782761,-7.924923,-4.611962,-3.723123,3.069868,-7.880267,4.391936,1.883293,-8.586686,2.498524,7.501347,0.552487,3.235879,-9.673359,7.679741,9.528715,2.557883,-4.072305,9.982050,-2.494147,-5.429454,8.505489,-2.709085,3.823465,7.655311,7.599031,8.839865,-3.806445,-9.323881,-4.009187,9.012513,1.973689,0.851492,7.608823,-3.948905,7.014242,-0.610518,9.634128,6.279828,-3.907506,3.256886,-4.209830,-6.074007,7.680628,0.860968,-1.776048,8.201459,9.568103,0.308712,3.664925,2.433378,-9.901586,-1.746885,-7.462097,4.519316,-2.623536,5.221885,7.865391,6.824880,-8.063490,-9.358073,-7.452551,-9.022097,-6.116796,-5.757424,-7.601546,-6.634235,9.619353,-1.050705,6.843997,-1.966835,-8.235179,-9.774700,9.216332,-1.215322,-3.697139,-0.339303,-4.145157,-6.647473,-9.468747,3.600840,-6.335280,-4.622791,-0.476174,-4.189235,-5.241897,6.278335,-8.868808,-3.230604,-9.925874,3.835835,8.189002,3.589224,3.678031,-7.576523,-7.005618,-7.909858,5.332288,-2.204890,8.698303,3.572912,-1.252947,-2.032967,-9.117204,-2.802097,6.174479,4.190527,-1.088911,-1.424552,0.357532,5.963445,-9.141704,-0.973877,-1.802501,0.805288,2.431687,4.963548,-0.958508,-1.382654,-8.132322,8.027437,0.029263,-7.198362,2.333929,6.947007,0.426980,-8.268938,-6.781492,-8.643380,3.240845,-2.283161,-6.770917,-9.484442,5.647292,-6.956413,-2.508954,5.488627,-3.188323,1.600115,-9.664199,-2.621103,8.733018,-9.253200,-7.698413,4.656924,-6.823917,-0.815032,1.483211,5.403123,-9.033688,2.022539,1.766988,-8.310649,-7.102349,1.161594,-4.612372,3.875046,-5.604897,2.641369,-6.378334,1.291193,-5.609818,0.975981,-8.003348,-9.883719,-2.622926,7.043681,-4.524464,-5.585528,2.911006,9.639119,3.327501,-5.601063,-7.304693,-7.278223,-6.027163,-9.057819,-3.971749,-1.339073,-0.406064,9.650382,-4.876241,7.459293,-3.040850,-8.992296,4.087376,3.853602,-7.676319,1.035263,1.714101,1.622401,2.957613,-4.665580,2.490323,-3.749559,1.440534,5.303619,9.752119,-5.333556,-2.549464,9.416728,-9.194369,-2.123117,-8.216781,-4.249671,-1.142468,2.003102,8.408734,8.007482,6.818973,-7.355547,2.276657,-4.211582,-1.714266,-5.512525,1.983315,5.602379,-3.131750,-2.469397,5.392414,-9.979131,-4.029363,2.655319,0.316864,7.253670,-9.756406,3.744686,7.561875,-8.917565,-9.231035,-7.911831,2.767034,7.795796,9.254205,-0.340972,-8.192622,-2.394344,3.315510,-5.038209,-6.889310,7.194900,-1.200228,-7.777428,-9.243443,8.359706,5.900672,1.925493,9.234361,-6.020231,-2.143214,3.675288,4.696014,-5.608465,3.629873], dtype = "float32")#candidate|4401|(1260,)|const|float32
const_4402 = relay.const([[8.735844,-2.007029,-5.511942],[-9.475274,0.148907,-8.855350],[4.621232,7.421175,-3.152153],[-9.013769,7.204785,-0.981610],[-8.857378,-4.737210,-5.757297],[3.119936,-6.289562,1.424062],[3.507275,-9.156702,3.216315],[-2.359920,-9.995003,1.897143],[-1.870864,-8.121886,-9.605610],[2.502350,4.765313,8.219175],[7.170483,9.659924,-0.914995],[-2.049244,2.838468,-7.599658],[-2.349145,7.646940,-2.265334],[0.719808,-1.794724,-0.879016],[-2.815455,6.222212,-0.463506],[4.372053,4.975962,5.489113],[7.670872,-3.123915,-5.286654],[-2.522550,6.609240,3.596990],[-0.441931,-8.310049,9.318951],[6.249922,-1.409085,2.680656],[1.313767,-4.700237,8.074005],[-2.645809,-9.847876,5.334106],[7.553608,9.460147,1.478049],[-8.104465,4.253528,4.541746],[-4.060952,-3.390122,4.863335],[9.358105,-6.948516,-7.827648],[3.073625,-1.224671,6.457706],[-3.984792,3.963074,8.621318],[2.179242,-5.697591,-7.705626],[1.336097,-8.850944,-3.109631],[1.878843,-8.751701,2.575696],[7.013029,1.983799,-1.285191],[-4.592970,2.162155,-3.515553],[-4.080579,6.358391,-5.302306],[-6.745177,-1.572443,5.366382],[3.752640,-6.751599,-7.426387],[-6.781168,-1.098635,-9.146876],[-7.044590,1.253274,-8.738544],[-9.020667,7.251861,-1.493237],[7.371661,8.201290,0.648413],[-5.887520,0.892880,2.035742],[2.129550,-4.949704,8.500789],[-1.821706,5.681483,-8.935184],[-7.263076,-6.325426,-9.314255],[9.805913,-0.934646,3.865534],[-6.086090,-8.255178,-1.557508],[7.471789,0.012240,5.847203],[-1.245649,-5.148440,1.196139],[-7.621019,0.410486,-3.995115],[2.700030,7.714574,-7.981900],[8.635317,7.149181,2.596502],[2.253390,9.859844,-2.366134],[-2.128053,-3.524611,-7.650404],[0.685238,1.149307,9.796219],[-0.131361,-2.618528,-9.867818],[-4.446344,4.517345,4.065093],[3.199764,7.485607,0.665597],[4.442770,1.786223,-6.558822],[4.617906,-6.724492,-3.816291],[-7.981802,-4.505631,5.062425],[-0.321854,-1.028803,2.365207],[-0.585702,0.433619,0.273576],[0.939951,-1.406114,-1.354653],[-6.509461,-6.715521,8.136973],[-6.725591,3.646632,-7.755017],[-5.545836,-2.985338,-8.707668],[-8.499800,-9.081528,-9.763133],[2.483888,-7.295593,-9.275124],[-7.759286,-7.981259,2.230435],[-9.657797,-3.473875,-6.227035],[-2.566694,6.052252,-8.717850],[-1.081965,-4.189122,-6.496474],[-4.281946,-6.099215,5.952571],[7.040646,8.244861,-9.498269],[6.783615,-2.445001,-6.135444],[-4.484918,7.408333,1.405699],[8.370568,4.142694,-9.234946],[3.627183,4.032150,8.208256],[-6.079358,-4.516079,-0.762404],[2.496811,3.595111,0.244361],[-1.378753,-1.794157,4.277495],[3.844188,0.633608,-7.102353],[-5.900968,-5.115705,0.915619],[-6.853429,4.341742,8.581998],[1.639378,8.090950,6.582820],[-0.015639,2.891952,5.732941],[-7.433172,0.508317,8.185151],[4.501873,5.180680,9.194616],[0.478121,0.571757,2.878549],[7.921146,1.514931,4.500015],[7.277273,-3.013006,8.989291],[-9.144164,3.501100,6.063865],[7.815546,-2.418054,2.213916],[-7.100912,-7.141341,3.595063],[-6.817895,-7.847481,3.411680],[-5.997795,-0.356719,4.668917],[3.546308,5.855223,-4.111132],[7.265650,-8.578081,-4.076037],[-4.470244,-9.741380,-3.829628],[-2.639555,-5.021120,-1.278058],[-7.797702,0.529971,-8.427438],[-8.294490,-1.278135,-0.400957],[2.426541,-4.656140,6.468465],[7.154555,0.764916,-0.818527],[1.796838,1.732569,-9.208513],[4.502147,-5.176586,6.657550],[-4.035954,-9.764098,0.328403],[9.678426,0.208686,-2.243815],[-2.677592,-4.681602,-3.505755],[-4.538428,9.855201,4.489373],[0.651237,-0.296724,2.502153],[-9.793762,-4.455926,-4.343618],[4.018462,-1.591927,-9.747175],[-4.196238,-6.980978,-6.293884],[5.855708,-5.398590,-6.865497],[-2.520507,-3.563656,-6.231129],[-0.604898,7.616094,1.186526],[2.105340,9.558399,5.100954],[-9.888231,0.559670,-2.424471],[9.773731,-1.322711,-6.392223],[-1.596095,-7.649788,-5.872460],[-8.937101,-1.451159,8.277428],[-3.320481,-8.430965,-4.203181],[1.598954,7.953676,4.326845],[-1.065775,-4.256294,-1.800996],[-8.072032,6.788670,6.935055],[0.250652,8.616336,-9.249173],[7.728209,0.709898,-3.143844],[-4.116556,-7.517809,-4.945309],[5.066648,3.811284,0.102244],[6.836244,-8.923366,4.577987],[-4.129811,5.149227,-8.951248],[-3.184212,-7.050297,0.806522],[3.298468,-6.025162,-0.669365],[1.389606,-9.398662,7.430660],[-0.396484,5.745896,7.731605],[-1.056494,4.653697,6.074249],[4.461115,5.723041,5.368329],[2.214335,-1.718520,0.063867],[-9.466021,8.441534,4.341845],[5.564015,6.348372,-9.852998],[2.353901,-8.169712,-5.656142],[-9.902859,9.537288,-6.786152],[-2.883358,2.407799,7.004560],[2.642675,0.821199,-1.439729],[6.818557,-6.833655,-1.218711],[-3.085302,5.764067,-3.884856],[-6.773036,-0.053900,3.370273],[7.668451,-2.693398,-5.304711],[5.374554,5.208843,-3.040512],[1.494592,1.229198,-3.588833],[-0.507862,3.253506,7.221196],[9.756345,-2.586733,1.682858],[-2.134398,-9.110738,9.743410],[1.480388,-4.703891,9.147415],[-6.818939,9.644879,-4.990317],[-5.329583,-1.291143,5.488932],[9.532222,0.367499,-6.543898],[1.226502,9.549512,4.265483],[3.950294,5.122242,2.282663],[-1.911132,3.735394,-0.375000],[-9.525514,-2.076639,-9.018169],[-7.032721,4.959955,-4.818826],[5.410974,-1.057546,1.197303],[6.928744,-6.527940,-3.412147],[-7.515781,-9.407569,-4.705568],[7.302471,8.426797,3.429909],[0.344979,6.381798,-5.578891],[-3.209990,-7.899036,-0.214231],[-4.278755,-5.324848,5.455987],[3.689293,1.019508,7.754463],[-2.586286,-0.660351,6.045861],[8.495666,-5.125198,4.482539],[-3.795720,-5.464677,-5.264443],[-2.509545,-2.942666,-3.753405],[-4.396827,4.801667,8.748407],[1.359263,-1.391219,4.144145],[-2.893357,-7.978520,5.358218],[6.172435,-8.201426,-2.770085],[-2.819178,9.602736,8.322538],[-8.812680,4.115160,-7.339217],[1.646076,-3.437581,6.173394],[2.777233,4.494200,-8.308398],[9.722645,-7.539634,9.376321],[-9.567141,-0.188492,5.848285],[2.442193,5.875124,2.400962],[4.181295,7.080453,-1.997742],[6.385282,-4.407368,-5.636800],[-3.651251,-8.024720,7.323134],[4.303514,-1.453636,0.013765],[-5.087891,8.282906,-0.694532],[1.431104,2.331822,7.092253],[1.419694,8.165026,8.341765],[1.112991,2.448618,7.256078],[1.338282,4.476691,-5.914987],[5.086159,9.639285,-6.125205],[-6.703183,-5.172025,-4.175665],[7.099530,-9.586147,-2.396251],[-3.666895,8.996953,4.968661],[-7.635624,-3.787403,-7.263463],[4.422512,5.687013,7.779710],[-4.269777,4.947213,0.646679],[-0.807402,1.635239,-6.358162],[8.206942,9.945901,-5.268839],[6.764446,-5.658262,-0.080090],[-4.390406,-1.254367,5.399139],[9.547970,5.686560,-1.505049],[-5.646175,-8.407005,4.969733],[8.060923,6.485144,-3.702889],[-3.892759,6.094328,2.423677],[7.783194,3.082307,2.766525],[0.270181,-7.139569,9.324864],[-8.594910,0.764254,2.624496],[7.399946,2.025236,-0.836435],[-8.391292,7.184967,6.804787],[-3.258275,-8.300488,-0.956152],[-8.025565,-0.223204,1.527430],[4.237099,-2.148233,-4.273485],[5.945580,-7.818974,-2.570281],[-8.555414,9.362587,-4.831770],[-1.558162,-1.170043,-0.034544],[-5.916072,-5.127194,6.305184],[-2.882326,0.572242,-8.340389],[6.946389,2.732857,-2.812754],[-9.725450,6.333146,3.489643],[-7.669917,-4.520121,-6.464887],[9.990277,3.252977,-2.979607],[2.442699,2.660920,2.672113],[-7.847333,6.654397,-8.045594],[-4.835134,7.325038,9.580617],[7.703952,-9.003736,-4.021802],[7.471432,-7.582432,1.600647],[7.367106,6.359700,-3.046535],[-7.267759,0.179970,-2.983338],[-5.821874,-3.225838,-9.403962],[-9.640841,1.662590,1.892443],[2.935209,-2.937091,6.378220],[-2.968489,-0.847129,6.395926],[-7.305904,-5.437441,-7.112340],[-8.340252,3.993159,-9.716139],[-3.036378,8.377248,7.538158],[7.255071,7.168838,-2.943366],[6.691326,-2.071921,2.758997],[-6.366382,0.238093,5.828534],[-5.387864,-2.564404,1.556430],[0.680893,6.788212,7.439249],[-4.158054,-3.298261,-7.565189],[-1.257283,0.588897,-7.059346],[2.781810,0.048410,2.827603],[-9.050678,-5.107566,6.251800],[6.825591,6.611338,4.106205],[5.221673,2.196532,-0.961161],[4.671119,7.314231,7.055168],[7.455695,5.511658,1.821273],[3.997811,-8.997839,5.181600],[6.625901,-8.313520,7.475229],[-0.505738,9.788523,-4.533952],[0.284436,2.742304,4.591622],[-6.986308,5.628830,4.722470],[-3.443855,-1.329538,-2.399978],[-9.756273,-0.240136,-2.053462],[7.581513,-3.065546,-5.388458],[-4.858327,-4.690418,-1.800621],[-1.024894,-0.953829,-3.730873],[-8.651764,0.454120,1.784569],[-0.615289,7.204646,8.474222],[9.333686,-7.789857,9.952298],[-3.014009,4.883271,1.081490],[-1.399615,-8.021810,5.675205],[-6.603145,-3.854267,-7.906223],[4.029480,5.886774,8.287877],[-4.925016,4.455641,4.770208],[9.069032,-9.769929,-0.676521],[4.307845,2.379786,-5.017054],[-7.166933,0.405423,-5.648050],[4.949081,-8.176407,-6.824941],[4.278953,-8.161762,-9.062814],[2.416873,-1.552071,-3.789610],[-1.019764,6.748531,8.822469],[-6.979395,1.947548,-5.316397],[-4.288558,1.996447,0.856096],[-4.898910,0.004935,9.998221],[-9.151428,6.945382,7.734368],[-7.584926,6.271035,9.111500],[5.190769,1.776577,6.250607],[-5.725887,0.660946,0.119107],[8.300071,0.796560,-8.055976],[-6.502859,3.768807,5.994037],[6.977771,-5.507426,-9.846572],[-8.055852,-1.604059,-3.753810],[1.527007,9.583553,-4.495592],[1.977140,-7.633073,-5.858913],[-1.095124,-7.278528,9.112755],[-8.917127,0.184679,2.894910],[-3.773152,7.278003,5.338680],[5.042789,-7.404480,6.263295],[2.171226,-0.822429,3.932041],[-0.298114,-8.935681,-7.757889],[5.481782,-7.447237,4.020734],[-3.785571,9.030525,-1.296064],[4.204110,-2.606938,-2.475493],[-2.427178,-7.338629,-5.860948],[-5.286782,2.759421,5.662943],[-8.260543,-6.679361,3.079888],[-0.743381,-1.437665,0.377742],[9.425745,-9.682113,-2.801258],[4.502750,-7.263190,3.735752],[-4.327578,3.253486,-0.690063],[9.316033,6.466078,-0.843830],[4.121408,-3.129674,-7.577863],[2.130591,-5.006440,8.803389],[-0.018748,-7.753420,6.788623],[0.185478,8.821611,1.928382],[4.854984,-2.229311,1.403666],[9.563580,5.183119,-5.735025],[5.378264,7.076809,0.397520],[-6.215874,-7.761432,-4.453578],[0.320119,2.536717,-3.109748],[-5.437645,1.765971,1.061254],[5.384793,8.477892,-5.105947],[6.215526,4.889532,-1.933131],[1.191713,1.654913,2.437434],[2.792026,8.828000,1.683124],[-7.162665,-9.818101,-8.796433],[-5.910894,-6.627584,-6.608321],[7.245724,8.069716,4.202703],[8.477464,-4.611336,-1.513200],[-2.341096,-3.519315,-1.093398],[6.508306,-4.505721,-7.218040],[1.026150,-6.524369,-9.598489],[3.816077,-3.219095,8.843116],[-6.220323,0.606018,3.965743],[-9.328126,7.366019,3.824336],[-0.798425,-0.684411,-2.286873],[8.220246,1.087315,-0.174412],[-8.903013,8.757231,-0.327212],[-1.299309,9.382038,5.434879],[7.795211,-8.955974,5.609244],[-4.311655,5.686788,-6.709875],[9.213915,2.481615,9.396733],[3.022191,8.833666,9.743309],[6.799075,-8.721050,9.505976],[2.587635,1.094633,8.153562],[3.086391,-3.923545,4.032293],[2.252173,-4.171901,1.724744],[-9.933029,-9.489463,-1.465211],[2.478138,1.138687,-3.466576],[2.888080,-0.306142,-3.573017],[3.243415,7.962196,-1.845727],[-8.848254,-2.470926,-5.189096]], dtype = "float32")#candidate|4402|(350, 3)|const|float32
call_4398 = relay.TupleGetItem(func_3372_call(relay.reshape(var_4399.astype('float32'), [25,]), relay.reshape(var_4400.astype('int32'), [585,]), relay.reshape(const_4401.astype('float32'), [3, 420]), relay.reshape(const_4402.astype('float32'), [7, 15, 10]), relay.reshape(const_4402.astype('bool'), [7, 15, 10]), ), 11)
call_4403 = relay.TupleGetItem(func_3378_call(relay.reshape(var_4399.astype('float32'), [25,]), relay.reshape(var_4400.astype('int32'), [585,]), relay.reshape(const_4401.astype('float32'), [3, 420]), relay.reshape(const_4402.astype('float32'), [7, 15, 10]), relay.reshape(const_4402.astype('bool'), [7, 15, 10]), ), 11)
func_540_call = mod.get_global_var('func_540')
func_542_call = mutated_mod.get_global_var('func_542')
call_4408 = func_540_call(relay.reshape(const_4401.astype('float32'), [14, 9, 10]))
call_4409 = func_540_call(relay.reshape(const_4401.astype('float32'), [14, 9, 10]))
output = relay.Tuple([call_4389,call_4398,var_4399,var_4400,const_4401,const_4402,call_4408,])
output2 = relay.Tuple([call_4390,call_4403,var_4399,var_4400,const_4401,const_4402,call_4409,])
func_4420 = relay.Function([var_4399,var_4400,], output)
mod['func_4420'] = func_4420
mod = relay.transform.InferType()(mod)
mutated_mod['func_4420'] = func_4420
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4420_call = mutated_mod.get_global_var('func_4420')
var_4422 = relay.var("var_4422", dtype = "float32", shape = (25,))#candidate|4422|(25,)|var|float32
var_4423 = relay.var("var_4423", dtype = "int32", shape = (585,))#candidate|4423|(585,)|var|int32
call_4421 = func_4420_call(var_4422,var_4423,)
output = call_4421
func_4424 = relay.Function([var_4422,var_4423,], output)
mutated_mod['func_4424'] = func_4424
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4007_call = mod.get_global_var('func_4007')
func_4008_call = mutated_mod.get_global_var('func_4008')
call_4504 = func_4007_call()
call_4505 = func_4007_call()
func_4007_call = mod.get_global_var('func_4007')
func_4008_call = mutated_mod.get_global_var('func_4008')
call_4506 = func_4007_call()
call_4507 = func_4007_call()
func_1537_call = mod.get_global_var('func_1537')
func_1540_call = mutated_mod.get_global_var('func_1540')
var_4515 = relay.var("var_4515", dtype = "float32", shape = (2250,))#candidate|4515|(2250,)|var|float32
call_4514 = relay.TupleGetItem(func_1537_call(relay.reshape(var_4515.astype('float32'), [15, 10, 15])), 4)
call_4516 = relay.TupleGetItem(func_1540_call(relay.reshape(var_4515.astype('float32'), [15, 10, 15])), 4)
output = relay.Tuple([call_4504,call_4506,call_4514,var_4515,])
output2 = relay.Tuple([call_4505,call_4507,call_4516,var_4515,])
func_4523 = relay.Function([var_4515,], output)
mod['func_4523'] = func_4523
mod = relay.transform.InferType()(mod)
var_4524 = relay.var("var_4524", dtype = "float32", shape = (2250,))#candidate|4524|(2250,)|var|float32
output = func_4523(var_4524)
func_4525 = relay.Function([var_4524], output)
mutated_mod['func_4525'] = func_4525
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4577 = relay.var("var_4577", dtype = "float64", shape = (4, 10, 5))#candidate|4577|(4, 10, 5)|var|float64
uop_4578 = relay.log(var_4577.astype('float64')) # shape=(4, 10, 5)
output = relay.Tuple([uop_4578,])
output2 = relay.Tuple([uop_4578,])
func_4586 = relay.Function([var_4577,], output)
mod['func_4586'] = func_4586
mod = relay.transform.InferType()(mod)
mutated_mod['func_4586'] = func_4586
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4587 = relay.var("var_4587", dtype = "float64", shape = (4, 10, 5))#candidate|4587|(4, 10, 5)|var|float64
func_4586_call = mutated_mod.get_global_var('func_4586')
call_4588 = func_4586_call(var_4587)
output = call_4588
func_4589 = relay.Function([var_4587], output)
mutated_mod['func_4589'] = func_4589
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3065_call = mod.get_global_var('func_3065')
func_3067_call = mutated_mod.get_global_var('func_3067')
call_4608 = relay.TupleGetItem(func_3065_call(), 0)
call_4609 = relay.TupleGetItem(func_3067_call(), 0)
func_3022_call = mod.get_global_var('func_3022')
func_3026_call = mutated_mod.get_global_var('func_3026')
var_4611 = relay.var("var_4611", dtype = "float32", shape = (2250,))#candidate|4611|(2250,)|var|float32
const_4612 = relay.const([-0.747184,-1.724865,-7.118081,3.771387,5.050781,-6.352649,-8.523011,6.356854,1.440349,-6.556951,-5.006152,-5.302833,-6.379444,1.969712,0.420289,7.840543,-3.661555,-4.332730,-1.018859,-9.315879,8.066310,-9.386420,-0.276818,-6.191174,-0.821686], dtype = "float32")#candidate|4612|(25,)|const|float32
call_4610 = relay.TupleGetItem(func_3022_call(relay.reshape(var_4611.astype('float32'), [15, 150]), relay.reshape(const_4612.astype('float32'), [25,]), ), 0)
call_4613 = relay.TupleGetItem(func_3026_call(relay.reshape(var_4611.astype('float32'), [15, 150]), relay.reshape(const_4612.astype('float32'), [25,]), ), 0)
output = relay.Tuple([call_4608,call_4610,var_4611,const_4612,])
output2 = relay.Tuple([call_4609,call_4613,var_4611,const_4612,])
func_4634 = relay.Function([var_4611,], output)
mod['func_4634'] = func_4634
mod = relay.transform.InferType()(mod)
var_4635 = relay.var("var_4635", dtype = "float32", shape = (2250,))#candidate|4635|(2250,)|var|float32
output = func_4634(var_4635)
func_4636 = relay.Function([var_4635], output)
mutated_mod['func_4636'] = func_4636
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3737_call = mod.get_global_var('func_3737')
func_3739_call = mutated_mod.get_global_var('func_3739')
call_4693 = relay.TupleGetItem(func_3737_call(), 2)
call_4694 = relay.TupleGetItem(func_3739_call(), 2)
const_4719 = relay.const([-2,-3,-6,10,5,9,-8,-5,10,-1,-3,6,-4,-7,-9,8,3,-6,4,-6,-8,4,-1,8,-10,-10,10,4,9,2,-8,9,4,2,-3,-6,7,-8,10,-2,5,-3,10,-8,1,-6,10,2,-1,9,-7,5,-4,-4,9,5,10,10,5,8,7,7,-7,9,-3,4,-5,4,1,4,-4,5,-6,3,-2,9,2,5,5,9,-4,10,1,-9,-1,-4,1,-10,-2,-10,3,2,-7,9,4,-2,3,8,-5,8,-1,3,-10,10,-8,-6,4,-8,-6,-5,-7,9,-10,-3,5,2,-2,9,-10,3,1,-8,-7,8,-7,6,-1,-3,-3,5,-6,3,2,9,2,9,-1,-10,7,-4,10,-8,4,-9,8,6,-3,-3,10,8,-5,-5,5,-7,-3,9,-2,4,8,4,9,1,8,6,5,-1,-10,7,4,-10,-4,10,-7,1,-8,-3,-4,9,-8,9,9,-4,-6,4,4,5,-6,3,9,-1,10,6,-8,-5,9,10,3,5,-6,9,7,-7,1,6,-7,-9,-1,-2,-9,5,-2,-4,-2,4,1,7,9,9,-5,2,-2,-2,5,1,-2,1,-5,9,-5,-3,-10,4,-6,1,-10,5,3,4,-1,3,-1,-7,1,-4,-3,-5,-9,2,4,7,6,5,-9,-1,-3,-6,-1,1,-1,10,-1,-6,-2,6,-2,1,4,9,-6,-6,7,5,4,-9,10,8,-2,4,1,-3,2,2,9,-3,-2,-6,-2,-6,-5,-1,6,-10,2,-4,5,-7,-1,-7,8,7,-9,-10,2,-7,-3,-5,6,7,1,-10,-1,5,3,4,2,-5,4,3,-1,4,7,-3,5,10,1,2,6,-4,9,-4,9,1,-3,1,5,10,-3,6,2,3,9,-5,-3,5,1,3,7,5,-10,-7,-10,-8,9,2,-1,5,10,-4,1,5,9,3,-1,9,3,-4,-3,9,-6,1,5,7,6,-10,-3,10,-10,7,1,1,-1,8,-9,4,-7,-5,3,-2,5,7,-5,-9,9,-4,-3,-6,-2,-8,3,-6,-9,5,-3,10,-8,-6,-5,8,1,6,-9,-8,-7,3,10,-2,-10,-2,5,1,-10,-6,9,9,-8,-6,7,9,2,-6,1,3,7,6,-7,5,3,-2,-7,-4,4,-3,4,7,-6,-10,10,-10,-9,1,1,-5,9,-7,-8,1,-3,-5,6,4,-4,9,-8,-3,3,-2,9,-1,5,-5,10,-5,10,-1,1,-8,-2,10,-6,-4,4,7,5,2,-5,5,10,-10,1,7,-9,-6,4,8,7,-2,1,-6,7,-8,-2,-8,2,-5,9,4,10,6,6,-5,7,-5,7,5,-9,6,6,8,-4,-1,-6,1,-3,-10,-3,3,2,-8,-9,-5,-6,4,5,-7,2,1,3,3,-9,4,-6,1,4,9,2,6,4,-9,-9,-9,-6,-10,-2,-4,4,4,6,-9,7,-6], dtype = "uint64")#candidate|4719|(560,)|const|uint64
bop_4720 = relay.mod(call_4693.astype('float64'), relay.reshape(const_4719.astype('float64'), relay.shape_of(call_4693))) # shape=(560,)
bop_4723 = relay.mod(call_4694.astype('float64'), relay.reshape(const_4719.astype('float64'), relay.shape_of(call_4694))) # shape=(560,)
func_4143_call = mod.get_global_var('func_4143')
func_4145_call = mutated_mod.get_global_var('func_4145')
call_4724 = func_4143_call()
call_4725 = func_4143_call()
output = relay.Tuple([bop_4720,call_4724,])
output2 = relay.Tuple([bop_4723,call_4725,])
func_4728 = relay.Function([], output)
mod['func_4728'] = func_4728
mod = relay.transform.InferType()(mod)
output = func_4728()
func_4729 = relay.Function([], output)
mutated_mod['func_4729'] = func_4729
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4020_call = mod.get_global_var('func_4020')
func_4021_call = mutated_mod.get_global_var('func_4021')
call_4733 = relay.TupleGetItem(func_4020_call(), 0)
call_4734 = relay.TupleGetItem(func_4021_call(), 0)
output = relay.Tuple([call_4733,])
output2 = relay.Tuple([call_4734,])
func_4741 = relay.Function([], output)
mod['func_4741'] = func_4741
mod = relay.transform.InferType()(mod)
mutated_mod['func_4741'] = func_4741
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4741_call = mutated_mod.get_global_var('func_4741')
call_4742 = func_4741_call()
output = call_4742
func_4743 = relay.Function([], output)
mutated_mod['func_4743'] = func_4743
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4785 = relay.var("var_4785", dtype = "float32", shape = (6, 14, 8))#candidate|4785|(6, 14, 8)|var|float32
uop_4786 = relay.tan(var_4785.astype('float32')) # shape=(6, 14, 8)
output = uop_4786
output2 = uop_4786
func_4806 = relay.Function([var_4785,], output)
mod['func_4806'] = func_4806
mod = relay.transform.InferType()(mod)
mutated_mod['func_4806'] = func_4806
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4807 = relay.var("var_4807", dtype = "float32", shape = (6, 14, 8))#candidate|4807|(6, 14, 8)|var|float32
func_4806_call = mutated_mod.get_global_var('func_4806')
call_4808 = func_4806_call(var_4807)
output = call_4808
func_4809 = relay.Function([var_4807], output)
mutated_mod['func_4809'] = func_4809
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2745_call = mod.get_global_var('func_2745')
func_2747_call = mutated_mod.get_global_var('func_2747')
call_4826 = relay.TupleGetItem(func_2745_call(), 2)
call_4827 = relay.TupleGetItem(func_2747_call(), 2)
output = call_4826
output2 = call_4827
func_4840 = relay.Function([], output)
mod['func_4840'] = func_4840
mod = relay.transform.InferType()(mod)
output = func_4840()
func_4841 = relay.Function([], output)
mutated_mod['func_4841'] = func_4841
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4849 = relay.var("var_4849", dtype = "float64", shape = (3, 10, 8))#candidate|4849|(3, 10, 8)|var|float64
uop_4850 = relay.rsqrt(var_4849.astype('float64')) # shape=(3, 10, 8)
output = uop_4850
output2 = uop_4850
func_4864 = relay.Function([var_4849,], output)
mod['func_4864'] = func_4864
mod = relay.transform.InferType()(mod)
mutated_mod['func_4864'] = func_4864
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4865 = relay.var("var_4865", dtype = "float64", shape = (3, 10, 8))#candidate|4865|(3, 10, 8)|var|float64
func_4864_call = mutated_mod.get_global_var('func_4864')
call_4866 = func_4864_call(var_4865)
output = call_4866
func_4867 = relay.Function([var_4865], output)
mutated_mod['func_4867'] = func_4867
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4020_call = mod.get_global_var('func_4020')
func_4021_call = mutated_mod.get_global_var('func_4021')
call_4985 = relay.TupleGetItem(func_4020_call(), 0)
call_4986 = relay.TupleGetItem(func_4021_call(), 0)
func_3560_call = mod.get_global_var('func_3560')
func_3561_call = mutated_mod.get_global_var('func_3561')
call_4996 = relay.TupleGetItem(func_3560_call(), 1)
call_4997 = relay.TupleGetItem(func_3561_call(), 1)
output = relay.Tuple([call_4985,call_4996,])
output2 = relay.Tuple([call_4986,call_4997,])
func_5020 = relay.Function([], output)
mod['func_5020'] = func_5020
mod = relay.transform.InferType()(mod)
output = func_5020()
func_5021 = relay.Function([], output)
mutated_mod['func_5021'] = func_5021
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3065_call = mod.get_global_var('func_3065')
func_3067_call = mutated_mod.get_global_var('func_3067')
call_5038 = relay.TupleGetItem(func_3065_call(), 0)
call_5039 = relay.TupleGetItem(func_3067_call(), 0)
output = relay.Tuple([call_5038,])
output2 = relay.Tuple([call_5039,])
func_5041 = relay.Function([], output)
mod['func_5041'] = func_5041
mod = relay.transform.InferType()(mod)
mutated_mod['func_5041'] = func_5041
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5041_call = mutated_mod.get_global_var('func_5041')
call_5042 = func_5041_call()
output = call_5042
func_5043 = relay.Function([], output)
mutated_mod['func_5043'] = func_5043
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3483_call = mod.get_global_var('func_3483')
func_3484_call = mutated_mod.get_global_var('func_3484')
call_5057 = relay.TupleGetItem(func_3483_call(), 0)
call_5058 = relay.TupleGetItem(func_3484_call(), 0)
uop_5068 = relay.log2(call_5057.astype('float64')) # shape=(12, 7, 3)
uop_5070 = relay.log2(call_5058.astype('float64')) # shape=(12, 7, 3)
output = uop_5068
output2 = uop_5070
func_5074 = relay.Function([], output)
mod['func_5074'] = func_5074
mod = relay.transform.InferType()(mod)
output = func_5074()
func_5075 = relay.Function([], output)
mutated_mod['func_5075'] = func_5075
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5078 = relay.const([[[False,False,False,True,False,True,False,False,False,False,True],[False,False,True,True,True,False,False,False,True,True,True],[True,True,True,True,False,True,True,False,True,False,False],[True,True,False,False,False,True,True,False,False,True,False],[False,False,False,False,False,False,True,True,True,False,False]],[[True,True,True,False,True,True,True,True,False,False,False],[False,False,False,True,True,False,False,False,True,False,False],[True,False,True,True,True,False,False,True,True,True,False],[False,True,True,True,False,False,True,False,True,False,True],[True,True,False,False,True,True,True,True,True,False,True]],[[False,True,False,True,True,True,False,True,False,False,False],[True,True,True,False,True,True,True,True,False,False,False],[True,False,False,False,True,True,True,True,True,False,False],[True,True,False,True,True,True,True,True,True,False,False],[False,False,True,False,True,False,False,False,True,True,False]],[[True,True,False,False,True,True,True,True,False,True,False],[False,False,True,True,True,False,False,True,False,True,False],[False,True,True,False,True,True,True,True,False,False,False],[False,True,True,True,False,False,True,True,False,True,True],[True,False,False,True,True,False,False,False,False,False,True]],[[True,False,False,True,False,True,True,False,False,True,True],[True,False,False,False,False,True,False,True,True,False,False],[True,True,True,True,True,True,True,True,False,True,False],[False,False,False,False,True,False,False,False,False,True,False],[False,True,False,True,False,False,False,False,False,False,True]],[[True,True,True,False,True,False,False,False,False,False,False],[False,False,True,True,False,True,True,False,True,True,True],[False,False,True,False,True,True,False,True,True,True,False],[False,True,True,False,True,True,True,True,True,True,False],[False,False,False,True,True,False,True,False,False,True,True]],[[True,True,False,True,True,True,False,False,True,False,True],[True,False,False,False,True,True,False,True,True,False,True],[False,False,True,False,True,True,False,False,False,False,True],[False,True,False,True,True,False,True,True,True,False,True],[True,False,True,False,False,False,False,True,True,False,True]],[[False,False,False,False,True,False,False,True,True,True,False],[True,False,True,True,True,False,False,True,True,True,False],[False,True,False,False,True,True,False,True,False,False,False],[False,False,True,False,True,False,True,False,False,False,False],[True,True,False,True,True,True,False,False,True,True,False]],[[False,True,True,True,True,True,False,False,True,False,False],[False,True,True,False,False,True,False,True,False,True,False],[False,False,False,True,False,False,True,True,False,True,True],[False,False,False,True,False,False,False,True,True,False,False],[False,False,False,False,False,True,False,True,False,False,True]],[[False,True,True,False,False,True,True,True,False,True,False],[False,False,False,True,False,True,False,False,True,False,False],[False,False,False,True,False,True,True,False,False,True,False],[True,False,False,False,True,False,False,False,False,True,False],[False,False,False,False,False,False,True,False,False,True,True]]], dtype = "bool")#candidate|5078|(10, 5, 11)|const|bool
var_5079 = relay.var("var_5079", dtype = "bool", shape = (10, 5, 11))#candidate|5079|(10, 5, 11)|var|bool
bop_5080 = relay.logical_and(const_5078.astype('bool'), relay.reshape(var_5079.astype('bool'), relay.shape_of(const_5078))) # shape=(10, 5, 11)
output = relay.Tuple([bop_5080,])
output2 = relay.Tuple([bop_5080,])
func_5094 = relay.Function([var_5079,], output)
mod['func_5094'] = func_5094
mod = relay.transform.InferType()(mod)
mutated_mod['func_5094'] = func_5094
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5095 = relay.var("var_5095", dtype = "bool", shape = (10, 5, 11))#candidate|5095|(10, 5, 11)|var|bool
func_5094_call = mutated_mod.get_global_var('func_5094')
call_5096 = func_5094_call(var_5095)
output = call_5096
func_5097 = relay.Function([var_5095], output)
mutated_mod['func_5097'] = func_5097
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3843_call = mod.get_global_var('func_3843')
func_3844_call = mutated_mod.get_global_var('func_3844')
call_5138 = func_3843_call()
call_5139 = func_3843_call()
func_1537_call = mod.get_global_var('func_1537')
func_1540_call = mutated_mod.get_global_var('func_1540')
var_5155 = relay.var("var_5155", dtype = "float32", shape = (2250,))#candidate|5155|(2250,)|var|float32
call_5154 = relay.TupleGetItem(func_1537_call(relay.reshape(var_5155.astype('float32'), [15, 10, 15])), 3)
call_5156 = relay.TupleGetItem(func_1540_call(relay.reshape(var_5155.astype('float32'), [15, 10, 15])), 3)
func_2703_call = mod.get_global_var('func_2703')
func_2706_call = mutated_mod.get_global_var('func_2706')
call_5170 = relay.TupleGetItem(func_2703_call(relay.reshape(call_5138.astype('float32'), [12, 7, 3])), 0)
call_5171 = relay.TupleGetItem(func_2706_call(relay.reshape(call_5138.astype('float32'), [12, 7, 3])), 0)
output = relay.Tuple([call_5138,call_5154,var_5155,call_5170,])
output2 = relay.Tuple([call_5139,call_5156,var_5155,call_5171,])
func_5179 = relay.Function([var_5155,], output)
mod['func_5179'] = func_5179
mod = relay.transform.InferType()(mod)
mutated_mod['func_5179'] = func_5179
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5180 = relay.var("var_5180", dtype = "float32", shape = (2250,))#candidate|5180|(2250,)|var|float32
func_5179_call = mutated_mod.get_global_var('func_5179')
call_5181 = func_5179_call(var_5180)
output = call_5181
func_5182 = relay.Function([var_5180], output)
mutated_mod['func_5182'] = func_5182
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2586_call = mod.get_global_var('func_2586')
func_2587_call = mutated_mod.get_global_var('func_2587')
call_5238 = relay.TupleGetItem(func_2586_call(), 0)
call_5239 = relay.TupleGetItem(func_2587_call(), 0)
func_3981_call = mod.get_global_var('func_3981')
func_3984_call = mutated_mod.get_global_var('func_3984')
const_5241 = relay.const([[-1.368575],[-7.007100],[4.759596],[-7.768384],[0.366541],[4.160265],[9.521583],[5.833546],[6.159404],[1.254631],[-0.762151],[-4.975941],[7.381393],[-1.749923],[-8.277381],[-1.169935],[6.952750],[2.994667],[8.663328],[-5.491618],[2.914944],[-6.394936],[6.939120],[-3.640644],[8.916384],[0.569561],[-9.232031],[-9.134547],[6.482485],[5.109524],[5.734583],[-5.231691],[-9.557610],[-0.346043],[3.927406],[3.569054],[-8.225202],[9.786745],[3.409675],[9.023634],[9.504676],[5.421631],[-2.085703],[-2.696645],[-7.842508],[-9.001769],[8.163886],[-7.579682],[-4.892287],[4.742347],[-0.704274],[2.611980],[8.502993],[-4.237413],[-9.639208],[0.129647],[-3.226637],[6.381398],[-9.543575],[-5.467851],[6.682302],[3.747318],[8.579864],[-1.727155],[-7.481776],[-9.783787],[-8.549163],[0.466474],[-7.514125],[4.353506],[0.628927],[2.457098],[9.647901],[3.274085],[-6.211540],[-0.042428],[-2.648342],[-0.155480],[9.283202],[1.664665],[8.761066],[-0.367673],[1.296115],[1.605975],[-7.732724],[-5.757213],[4.596551],[5.682054],[-7.622251],[5.154034],[0.006360],[-2.610763],[5.656637],[9.039710],[-0.312712],[-8.191353],[-1.637314],[6.117708],[-9.864804],[-0.956668],[7.388148],[9.159828],[-0.811348],[9.996800],[6.039857],[6.059039],[-0.258311],[-1.043778],[-3.313452],[0.099805],[-6.102742],[-2.417376],[-4.387197],[6.804844],[-5.682800],[8.966698],[-3.474634],[2.182665],[-2.508526],[-4.006878],[6.810234],[-2.621738],[8.635783],[6.078203],[-2.431451],[-4.210676],[-9.145925],[-6.271347],[0.309810],[0.493519],[0.951813],[0.035348],[7.648310],[-4.729317],[-8.196344],[8.891810],[-9.261584],[3.522280],[-9.826984],[6.217430],[3.706174],[-7.210913],[6.612763],[3.648115],[-1.063201],[-3.948590],[6.521386],[8.972112],[-9.571891],[-9.820493],[-6.972384],[-7.361113],[6.091389],[4.296475],[-1.161669],[8.819265],[-6.984889],[9.908000],[-6.304938],[-9.231180],[-0.493316],[-4.040514],[5.728030],[-9.897350],[1.349150],[-8.811408],[1.203456],[-5.116134],[-1.345301],[-6.288878],[-6.755697],[7.743939],[5.266253],[-3.619720],[5.292291],[-8.331041],[-8.351241],[9.735941],[9.430343],[4.819619],[3.960163],[-1.995713],[7.164084],[0.001521],[-1.373244],[-0.104722],[1.140789],[-3.117382],[8.413734],[-9.233437],[0.674248],[-9.748428],[3.796820],[9.438153],[6.190184],[5.550208],[-9.349550],[9.490489],[-6.365729],[-0.276443],[3.711751],[-5.197835],[-0.074219],[1.347424],[9.818772],[-2.202159],[6.680098],[-5.015586],[-4.254073],[7.850292]], dtype = "float64")#candidate|5241|(210, 1)|const|float64
call_5240 = relay.TupleGetItem(func_3981_call(relay.reshape(const_5241.astype('float64'), [3, 10, 7])), 0)
call_5242 = relay.TupleGetItem(func_3984_call(relay.reshape(const_5241.astype('float64'), [3, 10, 7])), 0)
output = relay.Tuple([call_5238,call_5240,const_5241,])
output2 = relay.Tuple([call_5239,call_5242,const_5241,])
func_5244 = relay.Function([], output)
mod['func_5244'] = func_5244
mod = relay.transform.InferType()(mod)
mutated_mod['func_5244'] = func_5244
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5244_call = mutated_mod.get_global_var('func_5244')
call_5245 = func_5244_call()
output = call_5245
func_5246 = relay.Function([], output)
mutated_mod['func_5246'] = func_5246
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2568_call = mod.get_global_var('func_2568')
func_2570_call = mutated_mod.get_global_var('func_2570')
call_5261 = relay.TupleGetItem(func_2568_call(), 1)
call_5262 = relay.TupleGetItem(func_2570_call(), 1)
output = relay.Tuple([call_5261,])
output2 = relay.Tuple([call_5262,])
func_5302 = relay.Function([], output)
mod['func_5302'] = func_5302
mod = relay.transform.InferType()(mod)
output = func_5302()
func_5303 = relay.Function([], output)
mutated_mod['func_5303'] = func_5303
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5020_call = mod.get_global_var('func_5020')
func_5021_call = mutated_mod.get_global_var('func_5021')
call_5304 = relay.TupleGetItem(func_5020_call(), 1)
call_5305 = relay.TupleGetItem(func_5021_call(), 1)
output = relay.Tuple([call_5304,])
output2 = relay.Tuple([call_5305,])
func_5321 = relay.Function([], output)
mod['func_5321'] = func_5321
mod = relay.transform.InferType()(mod)
mutated_mod['func_5321'] = func_5321
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5321_call = mutated_mod.get_global_var('func_5321')
call_5322 = func_5321_call()
output = call_5322
func_5323 = relay.Function([], output)
mutated_mod['func_5323'] = func_5323
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5020_call = mod.get_global_var('func_5020')
func_5021_call = mutated_mod.get_global_var('func_5021')
call_5332 = relay.TupleGetItem(func_5020_call(), 0)
call_5333 = relay.TupleGetItem(func_5021_call(), 0)
func_2703_call = mod.get_global_var('func_2703')
func_2706_call = mutated_mod.get_global_var('func_2706')
call_5353 = relay.TupleGetItem(func_2703_call(relay.reshape(call_5332.astype('float32'), [12, 7, 3])), 2)
call_5354 = relay.TupleGetItem(func_2706_call(relay.reshape(call_5332.astype('float32'), [12, 7, 3])), 2)
func_4365_call = mod.get_global_var('func_4365')
func_4368_call = mutated_mod.get_global_var('func_4368')
var_5356 = relay.var("var_5356", dtype = "float64", shape = (324,))#candidate|5356|(324,)|var|float64
var_5357 = relay.var("var_5357", dtype = "int32", shape = (195, 3))#candidate|5357|(195, 3)|var|int32
call_5355 = relay.TupleGetItem(func_4365_call(relay.reshape(var_5356.astype('float64'), [9, 4, 9]), relay.reshape(var_5357.astype('int32'), [585,]), ), 2)
call_5358 = relay.TupleGetItem(func_4368_call(relay.reshape(var_5356.astype('float64'), [9, 4, 9]), relay.reshape(var_5357.astype('int32'), [585,]), ), 2)
func_3065_call = mod.get_global_var('func_3065')
func_3067_call = mutated_mod.get_global_var('func_3067')
call_5372 = relay.TupleGetItem(func_3065_call(), 0)
call_5373 = relay.TupleGetItem(func_3067_call(), 0)
func_2568_call = mod.get_global_var('func_2568')
func_2570_call = mutated_mod.get_global_var('func_2570')
call_5376 = relay.TupleGetItem(func_2568_call(), 0)
call_5377 = relay.TupleGetItem(func_2570_call(), 0)
func_4078_call = mod.get_global_var('func_4078')
func_4081_call = mutated_mod.get_global_var('func_4081')
call_5385 = relay.TupleGetItem(func_4078_call(relay.reshape(call_5353.astype('float64'), [18,])), 4)
call_5386 = relay.TupleGetItem(func_4081_call(relay.reshape(call_5353.astype('float64'), [18,])), 4)
func_4235_call = mod.get_global_var('func_4235')
func_4237_call = mutated_mod.get_global_var('func_4237')
call_5403 = func_4235_call(relay.reshape(call_5372.astype('float64'), [9, 4, 9]))
call_5404 = func_4235_call(relay.reshape(call_5372.astype('float64'), [9, 4, 9]))
var_5406 = relay.var("var_5406", dtype = "float64", shape = (12, 7, 3))#candidate|5406|(12, 7, 3)|var|float64
bop_5407 = relay.not_equal(call_5332.astype('bool'), relay.reshape(var_5406.astype('bool'), relay.shape_of(call_5332))) # shape=(12, 7, 3)
bop_5410 = relay.not_equal(call_5333.astype('bool'), relay.reshape(var_5406.astype('bool'), relay.shape_of(call_5333))) # shape=(12, 7, 3)
bop_5446 = relay.greater_equal(var_5406.astype('bool'), relay.reshape(call_5376.astype('bool'), relay.shape_of(var_5406))) # shape=(12, 7, 3)
bop_5449 = relay.greater_equal(var_5406.astype('bool'), relay.reshape(call_5377.astype('bool'), relay.shape_of(var_5406))) # shape=(12, 7, 3)
const_5450 = relay.const([[[2.962928,5.676628,-5.251619],[-2.649402,-3.996750,-5.127330],[-3.385727,-3.245864,-9.600671],[-7.048519,2.687800,5.602171],[0.443762,-3.575582,0.081163],[4.625409,-0.587120,-1.627978],[5.638051,5.397762,-2.174293]],[[-6.050059,2.419716,8.896651],[-6.289527,-6.992564,-0.353935],[5.384499,-3.982388,-4.265391],[1.698336,-9.065815,-3.773479],[-8.107355,7.524897,0.256425],[5.450019,4.746658,-9.886377],[4.070390,-3.762048,2.074355]],[[6.891875,-7.854924,-9.476653],[-8.682167,-6.822317,-8.611833],[4.112137,9.975020,-9.105977],[-9.580170,-8.303834,-1.069065],[4.952781,-0.353200,6.272326],[-4.734183,-9.903073,-9.595686],[4.125685,-7.233007,-3.816843]],[[9.843727,-3.380187,-8.389251],[1.599680,-7.468206,-1.368796],[7.684558,-2.584912,5.129697],[7.174903,1.732313,-9.155762],[-8.818463,-9.217962,-2.019754],[5.967857,-3.265775,-5.233832],[-6.516402,-7.479165,0.517467]],[[2.104751,-9.998677,-5.030580],[-3.617370,8.130872,3.884767],[4.564481,-2.542757,6.788277],[-5.060605,-8.635574,-4.867931],[-8.931870,-6.162830,3.384536],[1.507102,-7.784223,4.449575],[-5.447439,-1.541913,6.764413]],[[3.430823,-9.764355,-3.565029],[-0.266556,-9.671666,9.519081],[2.050566,-7.176838,-8.322811],[-6.855346,-9.749636,8.411956],[2.150249,4.116651,-6.092714],[-2.217807,-8.538068,0.917734],[-7.013753,9.194899,-3.852537]],[[6.498403,-9.476852,3.689887],[8.007574,8.681927,3.713830],[2.049205,-5.072165,-9.035950],[0.226872,-9.104440,7.783437],[-5.118933,-5.410106,7.253107],[0.129140,-1.176164,-6.055099],[-3.867915,9.943996,2.840346]],[[8.884161,-1.341855,-4.694964],[-0.921185,4.641697,7.929216],[-3.389398,-0.113662,3.259523],[3.052815,-3.501083,0.185079],[4.387089,-0.480516,7.522486],[6.097817,7.963415,-9.749709],[3.507566,7.982416,6.263261]],[[4.857611,8.721493,-3.282856],[6.649571,3.519697,-1.361764],[-2.143661,-3.004303,-4.363122],[9.944191,-6.358780,9.914875],[-7.646802,1.226575,6.171183],[-4.000417,-7.752626,-7.101979],[-5.617359,-1.848292,0.321942]],[[-4.496143,1.817776,5.165367],[-5.926406,9.853779,4.570301],[5.423627,0.254238,1.552623],[-0.067802,-9.080974,6.791865],[0.015935,-8.272339,6.213844],[-4.832982,-9.890380,5.261903],[-2.034844,-4.940467,-7.206428]],[[-8.651341,4.687725,8.353483],[0.236383,-3.326491,-0.172935],[-3.843414,0.085216,-0.922480],[1.875997,8.225091,-6.907004],[2.338996,-1.553604,-0.847820],[9.236477,7.715845,9.425444],[3.029183,-8.353719,-1.144754]],[[-5.254625,-9.180459,3.047424],[-9.700036,-3.662026,-6.059537],[-6.583928,3.402701,9.556241],[-5.202296,-3.685215,2.903038],[-9.709568,-4.751687,-9.528781],[0.138631,-8.262981,6.986574],[-6.580412,-4.962573,4.264163]]], dtype = "float64")#candidate|5450|(12, 7, 3)|const|float64
bop_5451 = relay.add(var_5406.astype('uint8'), relay.reshape(const_5450.astype('uint8'), relay.shape_of(var_5406))) # shape=(12, 7, 3)
uop_5456 = relay.tan(var_5406.astype('float64')) # shape=(12, 7, 3)
output = relay.Tuple([call_5353,call_5355,var_5356,var_5357,call_5372,call_5385,call_5403,bop_5407,bop_5446,bop_5451,uop_5456,])
output2 = relay.Tuple([call_5354,call_5358,var_5356,var_5357,call_5373,call_5386,call_5404,bop_5410,bop_5449,bop_5451,uop_5456,])
func_5468 = relay.Function([var_5356,var_5357,var_5406,], output)
mod['func_5468'] = func_5468
mod = relay.transform.InferType()(mod)
mutated_mod['func_5468'] = func_5468
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5468_call = mutated_mod.get_global_var('func_5468')
var_5470 = relay.var("var_5470", dtype = "float64", shape = (324,))#candidate|5470|(324,)|var|float64
var_5471 = relay.var("var_5471", dtype = "int32", shape = (195, 3))#candidate|5471|(195, 3)|var|int32
var_5472 = relay.var("var_5472", dtype = "float64", shape = (12, 7, 3))#candidate|5472|(12, 7, 3)|var|float64
call_5469 = func_5468_call(var_5470,var_5471,var_5472,)
output = call_5469
func_5473 = relay.Function([var_5470,var_5471,var_5472,], output)
mutated_mod['func_5473'] = func_5473
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4741_call = mod.get_global_var('func_4741')
func_4743_call = mutated_mod.get_global_var('func_4743')
call_5475 = relay.TupleGetItem(func_4741_call(), 0)
call_5476 = relay.TupleGetItem(func_4743_call(), 0)
func_1537_call = mod.get_global_var('func_1537')
func_1540_call = mutated_mod.get_global_var('func_1540')
const_5497 = relay.const([-8.388977,-6.133594,2.623733,8.602258,7.612348,1.375569,-5.452353,-5.249795,-4.741097,1.356142,-6.300791,1.272048,-8.068791,-5.903355,6.882597,-3.058747,-8.956492,-2.872912,9.786387,-0.980499,-4.238738,7.777139,1.452199,3.992702,-6.163343,9.536013,4.613165,9.065667,-7.935239,3.754395,3.199000,7.221351,-5.656409,5.996665,0.081345,-7.006157,-4.113604,5.389938,-3.838547,9.006265,2.251595,6.275270,2.223877,-9.189990,-0.257722,-0.281133,-2.560347,-5.574144,4.388626,-8.207087,3.353328,8.181356,-9.569871,0.942612,9.622885,-8.696186,5.030472,0.095641,-9.344070,-8.642934,8.462127,-9.750240,-4.435713,3.059407,3.021717,2.468143,-5.589352,-5.781416,3.936982,0.459764,-3.450501,1.349162,-0.218633,4.661549,9.923977,6.350405,-5.629687,-5.793457,-1.728646,-1.115183,3.833988,-2.346037,-4.481012,6.928915,-0.735381,-2.357983,-4.285678,-0.284956,-6.086792,1.062175,1.599312,4.017241,7.897234,4.546580,0.322848,7.205258,3.074751,-5.940867,-8.700033,2.590077,3.846519,7.780368,0.867751,-5.338436,9.189618,0.316824,-3.096384,-7.356040,-8.580359,-7.478379,-5.913950,8.224345,7.670201,2.456909,9.341778,3.043574,6.141242,-9.617619,-3.302886,-4.665356,-9.897791,0.810839,-6.938364,-2.106000,8.700136,-0.458188,-9.412433,8.320476,-2.846398,0.467763,7.662382,-0.090127,-1.108492,6.145470,1.631811,-0.469150,-4.152259,-8.136339,-9.679300,8.099212,0.455527,1.504581,3.303898,-3.940637,7.926462,4.363635,-6.130322,8.045925,-7.607848,6.121446,2.662784,-8.692695,9.836174,-9.544251,1.647774,0.594986,-9.698172,7.563439,9.356566,4.832374,6.308811,3.535202,-6.482341,-4.244303,-0.239303,-8.934728,-9.470444,4.398330,2.832661,1.464033,8.764933,-9.245403,3.792312,-4.862600,6.029234,7.511568,-3.018807,-3.800400,-2.246861,-6.501123,-3.003992,-0.007929,1.952105,7.359282,3.797017,2.625446,3.237605,-1.894291,8.034534,-2.576081,-4.863197,-9.964850,-3.656697,9.340426,6.096069,7.531946,-0.549098,-6.157517,2.493160,0.957841,-6.601183,-4.763536,-2.837048,-7.246609,1.435755,-3.532296,9.758986,-6.577833,0.642336,-1.398687,4.452890,-2.333261,2.133092,9.607602,-0.569175,4.957623,-1.805223,9.520184,6.902465,-2.311337,-2.938585,-2.425791,5.468059,7.125378,4.238844,-2.264746,-4.628813,-7.607326,2.509989,-1.705013,-8.100647,1.684896,0.454747,2.408985,-4.027334,6.872972,-5.337381,-9.604421,9.065904,-3.696360,0.611161,8.347324,-7.548383,1.171755,-2.659125,5.393067,-3.730165,3.220013,3.757673,-6.050644,-8.234267,-3.264811,6.250095,0.775086,1.634469,8.778535,-3.978841,-0.334976,0.787761,-8.960092,0.086014,-9.487036,-5.385857,-4.296215,6.086822,-3.131696,-6.339831,-7.587846,9.755131,-3.671673,-2.407430,-1.721678,9.678337,8.082298,-1.885503,-7.507129,7.664374,2.786779,-5.855615,-1.111039,-4.475421,2.539216,0.844207,9.948567,7.942597,1.136534,2.133665,-3.740524,-7.278631,4.002872,-3.225667,7.345659,5.079409,3.548903,-0.128887,2.107267,-4.556087,0.861291,-6.027178,4.668085,0.607958,5.756665,-9.993444,8.801011,5.249796,0.685936,-8.643791,-8.767955,-5.338896,2.525039,0.509954,0.802074,7.548759,3.886891,7.894580,-2.486224,-4.425263,-1.624303,8.063965,4.221969,-7.147674,-4.763940,1.927870,-5.393939,9.153392,-4.084317,-7.954430,-1.547074,7.572477,-0.027329,-6.917900,1.296013,-8.573949,0.114098,2.248669,9.357595,-9.701323,-5.728831,-7.739125,9.240613,-2.635087,-5.540445,7.631485,-3.748783,-6.163243,-2.287761,5.728734,8.419428,9.509444,-7.075742,-5.578602,-9.821757,4.479962,-8.742173,-8.558875,6.890770,-6.307292,5.893916,7.387957,-0.028617,-9.671598,-9.887771,-4.578943,-1.270108,1.850913,-7.019400,-6.715895,-7.177419,2.546603,4.040084,-5.384906,-9.899428,-9.145745,-3.324258,9.679604,7.756958,8.968077,-3.934940,-7.263438,9.626751,3.429183,9.555102,3.993061,0.736784,-5.136713,-2.351540,-4.035394,5.290132,-2.689850,-3.445884,-4.499412,-8.825598,7.655482,7.019565,7.997576,7.479289,-6.989983,-8.752847,-9.755015,-1.080093,-8.232866,9.416683,2.501815,4.027618,3.354277,-0.879356,3.387169,1.119737,9.316001,-6.986559,-0.765351,4.471488,-8.924894,-9.888277,3.679966,-4.820848,0.913844,-1.786828,-5.884611,-8.186718,9.946651,-3.634142,6.013973,-8.771809,-9.103676,3.201007,-1.492658,-5.752916,-8.231038,-9.544212,3.553971,8.900476,-2.600173,-8.952159,7.561462,-8.774159,5.335587,-8.431121,4.053854,1.770606,1.554253,-7.382068,7.176660,3.709220,6.216039,5.665264,-9.352359,2.953012,5.665430,3.136884,-1.426216,5.048657,-1.076759,7.926683,-8.363547,-7.875954,2.400391,-8.768919,0.401947,0.372001,4.375480,6.032072,0.230067,-9.009194,-0.833096,-2.714463,-6.721389,-1.526421,1.778618,-9.702093,-3.835227,2.745699,0.522179,-3.335153,2.800374,3.510546,6.951082,-2.862827,4.672476,7.052809,7.192716,-7.404502,6.806923,-1.447092,-5.608072,9.482253,4.579184,4.043251,-1.176319,4.128389,9.834378,-7.179152,-5.184176,3.733747,7.451409,0.765530,-7.995718,-5.605781,9.821027,-1.701516,1.025709,-0.993283,2.279503,8.204365,-3.697514,2.288859,0.871779,-7.631375,6.253681,4.412259,-7.572095,9.004707,7.049588,-1.624401,-0.513696,-5.224351,-8.177608,1.578327,-7.573071,9.257007,2.851904,-4.794995,-0.509610,-2.214736,0.562337,3.710452,9.813135,-5.526844,-1.407176,3.232344,-3.364225,3.307250,-8.320192,-5.446802,8.140026,2.547536,-5.524584,-1.556837,-5.357067,-6.275336,-6.298346,5.019002,-0.183311,-4.721192,4.244971,-7.659913,-2.594324,-2.333761,-5.585044,4.846767,6.425980,-6.168711,9.526289,-7.883846,-4.091892,8.020473,-9.725194,-3.299818,-4.729440,-7.709413,-7.257751,2.107250,-8.778876,1.030252,-9.728831,-0.082493,-1.689894,-8.516239,3.091186,9.660040,6.576601,8.712935,-8.747720,7.638073,-6.489075,-1.387150,-5.375757,9.676391,3.264926,3.296698,-9.775061,0.263749,-6.918240,-3.794282,1.085726,8.380022,-0.719345,-7.309119,-4.503440,5.485473,2.519482,2.002668,-1.405033,-0.581820,-4.146219,7.404750,-3.277762,9.467478,-1.014200,-0.286331,3.328846,0.198288,-6.328016,-3.248864,0.008826,-0.078965,8.473691,-9.653675,-6.355202,-1.709042,-2.644751,9.391174,-3.326848,4.189771,-3.046127,-3.336075,-6.990459,2.657401,-8.104907,6.141881,-0.122446,-1.282204,-0.338731,8.190519,-4.046117,3.894718,6.156466,5.914790,2.923453,6.524202,-0.755197,9.487625,5.096400,-6.436131,4.092823,4.619507,3.329280,5.141701,-9.495711,-6.666185,-3.193815,9.041881,9.492467,-2.880105,1.665410,-5.356197,6.533650,-4.531945,4.022110,-7.133203,1.561179,-2.593632,-1.026368,-4.383772,-5.467879,2.613841,-4.471034,-7.847594,6.064864,-9.194916,-0.279136,-6.100483,-9.910960,-3.586721,5.614437,-7.843057,-9.561231,4.280514,0.103523,2.485746,8.847166,-9.340960,0.455805,4.460403,8.355273,-1.246113,-2.357247,-7.149276,8.022425,-9.337962,5.037865,5.760204,1.367372,-1.160120,-9.515601,-0.679895,-5.065224,6.411557,-4.750769,-6.931775,-7.947344,9.919185,-8.104040,-2.123032,7.193840,-8.850105,2.473152,-0.878777,9.236555,4.177514,1.696097,0.011325,7.202173,1.258655,9.837244,0.631424,-4.002066,-8.220448,-0.206405,9.674023,-6.098192,3.128943,6.254646,-1.498335,-8.376883,8.306746,-8.018524,-8.793675,9.061050,3.109889,2.706055,9.591713,5.056309,-0.792185,-1.114875,6.344086,-6.159606,-0.163984,7.503419,-9.210297,4.188941,9.527711,-1.249580,2.721146,3.680888,-1.567663,2.384379,9.439992,9.808097,6.381594,5.252482,-9.833052,4.577821,8.852197,-3.110239,-7.039419,7.984318,0.889208,0.848127,-6.817530,6.785312,-9.940848,-1.915107,9.910773,5.668670,3.408244,-7.086206,-3.561834,-2.843287,-8.518928,9.661182,-8.632953,-1.460177,-4.091563,-6.316016,-6.775292,8.816759,7.311235,-0.508706,-8.459995,7.521427,-4.147378,9.739450,8.850794,9.471786,-3.188514,-1.480456,2.172987,-6.147104,7.568549,-0.921936,-3.946447,-4.240841,6.490212,7.967889,-3.592252,4.407300,-6.515366,-2.716822,7.462899,1.082687,-4.050222,-7.389255,-7.810167,-0.529176,-7.888709,1.228014,-8.392475,-7.786805,1.294180,5.539490,-7.276832,-0.488331,-5.284071,-4.753270,-9.146950,6.081201,9.219410,1.473718,0.284822,2.656592,-0.172891,-4.511288,-6.615875,4.279809,-6.728566,-8.763633,0.519087,0.858057,6.846599,3.698137,8.663590,-3.248546,0.860433,-5.672987,6.998728,-2.192566,7.166443,0.124790,5.952696,3.586780,8.367470,-0.967342,-0.073742,-6.451883,2.132519,-0.821229,0.153703,3.484039,-8.759128,8.290594,-4.493561,8.958263,-0.171761,3.592996,3.726863,-5.590961,-7.553231,-7.881701,-0.226272,-1.681031,-5.375997,2.570173,-4.557037,-5.667106,-7.036345,-0.240710,3.405080,-0.374500,-2.044773,2.858615,-8.630731,0.798949,-3.003310,-7.511139,-2.257582,-0.316030,6.449233,-3.192239,8.663751,-3.914563,-7.359281,-9.874414,-9.527564,-2.839635,-3.148952,7.286584,8.964573,-8.611091,-7.675160,-3.258569,2.828131,0.024727,-5.733639,-8.317503,3.600131,-4.108470,-6.334932,6.939866,9.679684,5.934097,-5.887261,1.428790,3.481890,1.971563,-5.054424,0.100887,1.042254,-6.038512,-3.482132,6.179096,3.927687,-3.786249,-2.588825,-4.266283,5.563933,8.188230,-1.777717,5.564449,-4.178116,0.357074,-0.167047,1.229265,-9.005937,-3.132165,-4.056088,-2.162884,4.375465,7.815520,-8.566862,0.051506,-0.104686,9.736474,4.955602,-1.442776,-4.078415,-4.747979,-1.651432,-0.994190,4.697227,-5.808908,-2.436338,3.887729,6.600544,2.843189,2.175063,5.196156,9.335675,-1.188328,4.015772,2.343558,8.323016,-4.398995,5.308640,-8.553573,5.676450,-0.546618,9.876797,2.706561,8.523839,-1.674176,-9.569509,-5.182780,9.142867,-5.578819,1.269540,-4.056741,-6.960290,0.761556,8.721955,-2.576121,-7.031981,-4.939026,4.989980,-7.179843,-1.957531,7.436821,-5.868985,-8.465045,-9.242744,-9.998356,-2.183585,-1.354488,5.708491,-4.373356,3.972805,-9.539521,-0.184175,3.030663,-4.929914,-4.477622,1.485911,7.863435,8.069489,8.628879,7.201076,7.102757,-8.477959,-7.679236,7.862214,-7.382960,7.388781,-3.680287,0.271220,0.382793,5.231755,-2.501514,0.761182,-5.782126,1.373449,8.071555,8.665216,2.534362,-6.101060,-4.121629,-7.992248,6.182704,9.205866,7.387770,5.115045,-6.286012,-7.592525,2.449598,6.416968,-6.608795,5.906717,8.061206,5.859421,-2.424948,-7.856359,8.244631,0.021536,-1.765841,7.403210,4.155275,7.933394,7.752669,-2.221796,2.367807,6.344440,2.652287,3.699092,6.759485,4.102155,7.827390,-0.339123,-9.334718,9.780468,-5.738106,4.787644,9.767082,-4.367295,-2.484172,-3.921653,-7.638065,-0.128178,-9.565327,-0.305233,-3.857970,-0.932753,7.354301,-1.124604,-5.832420,-0.970210,-3.204245,5.222321,-1.931158,0.486074,-1.103884,4.314478,9.157426,-8.583601,6.264732,0.876010,-3.364860,5.377848,8.538753,-2.038608,2.056870,-6.036452,-1.739601,-2.213352,0.533664,5.113324,8.714472,-1.373467,-0.767807,-0.672109,9.683988,7.684092,2.707790,1.396984,6.018123,0.626622,7.537305,-7.431013,0.870487,-7.344151,-7.400710,-7.529136,-3.944900,-7.971536,-2.137586,4.868885,7.068926,3.495089,7.926314,2.552961,-6.824074,-2.492238,-1.018909,8.198499,9.029738,5.038984,-7.692553,7.616890,-0.059677,3.438214,-1.925757,7.992376,-5.149328,8.525667,8.888208,-0.032675,9.437407,9.282184,8.567134,4.418513,2.189905,8.112116,-7.201232,-0.507167,-8.010064,1.679084,-7.990399,-1.073372,-1.106481,9.357601,-4.043144,6.513079,-0.751156,-2.105157,-8.129612,-9.001053,-8.643656,4.845976,-4.951321,3.901721,6.088172,7.629198,6.945318,-0.903468,2.432578,-9.520117,9.533582,4.830000,-1.475319,-8.331986,4.355900,-1.047026,-5.521278,1.108521,-0.791888,3.925656,2.920795,8.500403,1.988075,-3.020364,8.979181,-4.119601,7.736208,-4.776097,0.970118,-8.670692,6.704740,-2.642538,-1.492988,-3.169769,9.583945,-4.109771,0.273538,4.983895,-1.048201,7.267044,-8.600901,-1.509061,-3.450317,-9.179432,9.150240,-9.691560,7.649306,-6.353460,-9.166845,-2.519628,4.631576,9.543833,0.223407,4.458304,-3.201048,7.220883,-6.745611,-7.059605,0.538254,1.036547,1.540528,3.714973,-9.419410,-6.416222,4.380341,-1.777934,-6.274479,3.960215,1.367051,0.271726,9.606832,-5.578853,-7.491073,-6.450886,4.347690,5.770095,-2.585052,-3.070036,-4.297700,0.427552,0.400410,-4.902026,0.915921,4.310253,-5.849737,3.004646,-5.236884,-9.020679,-1.617918,-1.425516,-8.591930,8.222033,-5.975314,2.855045,-2.224348,-4.537995,9.934317,8.783990,-1.886792,9.150049,4.122445,9.875257,-7.885544,1.653481,-4.623362,8.293576,8.153349,2.850506,-6.819949,-4.679356,-1.677277,-7.039438,-2.620354,-5.307608,7.134697,4.007014,-0.137136,-7.071490,-4.079347,-1.800207,0.775506,6.169825,-0.591333,-4.348124,-5.376917,6.720083,-0.353032,-5.210743,-6.283854,9.799573,-0.815728,-6.931164,0.911325,9.056648,-0.080951,0.103753,0.665151,-4.879048,2.536339,-7.210135,-0.275318,-1.008026,-4.220055,9.025995,-5.444255,-6.119167,3.070690,5.988888,2.981504,4.218871,-6.362447,9.767066,6.566186,8.942585,-3.229876,-7.367260,-3.845292,8.862392,5.435481,4.983237,-1.315283,-9.247630,-4.784212,-1.243313,0.547131,-5.878102,-2.434424,0.544302,1.170722,1.418899,5.693935,-0.002346,-4.812541,-4.335344,-5.006296,8.779936,9.780852,1.100581,-4.746444,5.256823,5.629489,3.363080,1.604929,0.762726,-2.303412,-4.289401,6.209381,9.033760,8.558775,9.860208,8.756241,-9.765963,0.649688,-4.991177,3.634871,6.694928,6.349722,7.188043,3.837565,-8.569656,5.222662,5.237091,0.221939,-9.736996,-2.265350,2.836717,7.316522,-4.960465,2.952795,-4.452695,-3.424891,3.091681,-3.926212,-7.199643,5.979065,2.316439,-0.331244,6.370159,6.755072,-2.553484,-3.179330,5.820301,3.636088,-7.580341,2.697897,2.680223,-5.641707,5.790632,7.688257,-9.954489,-4.167758,5.940471,7.380333,8.235050,6.199890,-0.895180,9.381772,9.563330,-4.654481,9.901938,-4.074849,1.434931,3.365870,1.172206,2.973283,2.978448,-6.540653,-7.416489,-2.271446,-1.227130,7.536149,9.815400,8.243136,6.093670,-3.813855,3.714916,1.784167,9.271457,5.285748,-3.151597,-6.529930,5.278371,-0.501414,-9.519170,6.914321,-7.768013,-6.218504,0.437022,-0.414919,1.707677,8.843645,2.659178,1.368996,4.608692,-3.336256,2.040730,6.117225,4.802751,-9.523408,-5.400622,-0.492802,-0.035517,-3.907308,-1.804930,-0.625326,7.696863,-9.890730,5.949373,9.890039,3.882906,-4.407803,3.263705,0.530210,9.508108,-1.451095,1.972772,8.668528,4.869425,7.133886,-2.255041,2.323196,5.840299,9.977935,-7.392669,6.476318,-3.122485,-3.094855,9.615864,-1.579586,-4.790110,8.975064,3.223109,1.946129,-9.885867,6.011951,3.072375,1.665657,-7.249465,0.797361,2.259983,-5.493512,-5.654189,8.805639,-9.972559,-5.063650,8.785376,-4.996169,-3.928787,0.330288,-5.684646,-7.783776,-1.470163,-3.696610,-2.567688,9.416808,-0.555073,4.775878,-2.845343,7.284440,-0.113989,7.483029,1.243963,-7.930979,-0.733685,-9.488806,-9.476954,-5.877982,-7.546709,-9.508878,-5.958216,0.510952,8.340178,4.275663,3.923125,7.579509,-9.396824,1.401458,-8.035229,-7.697205,-9.554379,-6.269095,5.297994,8.928453,8.057655,-2.868140,7.354855,0.422573,-4.142305,-3.919442,5.275852,3.896388,1.634741,1.230584,-8.140313,-1.332324,-0.564860,-3.239644,2.796603,-7.535183,8.835034,-4.875261,-8.450297,9.830401,-9.279868,-9.450952,4.684396,3.276008,9.924268,8.457357,-3.234762,-9.438127,-8.453108,-8.019288,-0.518992,-6.640197,9.206192,-3.544827,-4.590940,-1.230534,1.840006,-7.254602,-8.425442,7.782045,-3.312309,-1.899024,-6.468669,-2.598201,2.643503,-3.749861,6.293700,0.996061,2.561009,-7.857033,0.303084,-9.443256,7.007475,-9.229395,0.693967,7.282421,-1.408492,-9.371164,-0.829075,6.815028,-1.774907,3.959689,-5.367748,-9.988202,-9.559955,-4.210068,-4.625542,1.665087,6.818354,2.750448,2.521715,2.273040,-5.689238,3.790442,-6.245162,-8.261410,-0.735526,-1.869199,-4.562651,2.374756,3.529489,5.004399,-7.844832,7.852732,-1.095119,-2.022306,-9.452033,7.395796,-7.212445,8.602906,2.225151,2.297444,-3.273783,-2.315810,-6.932351,6.509885,8.619759,0.911638,9.025484,-8.835406,-8.182975,-0.893171,-9.867912,6.809459,-5.549353,8.433649,4.576091,6.651366,-8.281630,-7.425014,3.205312,-1.758140,-4.126356,6.198893,-8.984164,8.184358,-4.152996,3.141875,7.288148,1.440052,-0.055737,3.591078,6.584711,0.577167,0.969457,5.012715,6.901255,6.148258,0.072531,-9.075766,-7.869008,-0.804432,4.893755,4.856662,3.672626,-8.456631,7.426793,3.814200,-8.966417,-8.387495,-6.371029,8.684747,1.162277,-3.015473,9.210614,3.112286,-3.301727,-1.937389,7.237028,3.860440,1.466952,-3.845413,3.371807,2.246086,-6.290436,0.800910,0.755080,8.572189,-5.329399,-4.337948,-9.331748,4.611109,3.132819,-6.347235,-5.878308,3.732140,6.991952,-4.712396,8.192138,-6.555398,-8.912743,8.910543,-9.343231,-7.261988,-5.367865,-4.618811,-3.135647,2.860399,-1.848589,6.181542,4.722702,-7.714654,-1.661278,-1.831781,-7.824173,-4.427497,-7.579275,3.376576,-8.446141,5.431445,-8.127838,0.744030,-9.782596,-9.491170,-0.068813,1.864186,0.502484,-6.165896,-7.169429,1.054452,9.077494,0.897081,6.530190,4.946324,0.289049,-8.846344,-2.600295,-5.499182,9.836328,4.380864,-3.949909,1.649788,-6.603747,-2.185675,-0.693528,-1.540506,6.707844,-6.944468,-6.560857,-2.375638,-3.033072,7.148764,-1.791211,9.069630,-9.878388,3.480281,7.718921,-3.458157,-6.445053,3.919885,7.004008,-2.260824,0.142839,0.706878,-1.582006,7.054877,5.957931,-6.733386,1.071888,7.571479,-9.526774,-3.104818,1.264942,-0.936062,6.351611,9.219036,4.911809,2.564165,-0.016602,-7.098561,-7.158543,1.953719,-5.150488,8.994666,-2.305455,6.592373,6.403835,-7.607416,7.744695,-0.517401,-5.222810,5.791804,-1.343337,5.552488,4.056505,0.287523,1.520522,3.076596,-7.650625,9.754552,5.227795,-1.994338,8.363310,-8.123744,5.733015,6.962872,-5.501613,8.810387,-6.194510,3.746313,-0.917435,7.032587,4.342114,5.559618,-4.610951,-0.470374,9.073558,-6.869904,-9.781895,3.709179,-2.081894,0.641205,1.302987,3.436117,9.791043,-1.512871,4.035919,-2.343940,-0.211538,1.481328,-1.563091,9.895308,-5.342154,-8.718529,-3.208568,-7.657335,8.348085,5.041730,-1.076208,-3.921204,3.170382,8.710644,-4.977105,5.740997,9.046275,6.112200,7.027807,8.965287,3.954079,-6.514233,-8.314016,-4.550529,-5.670257,-6.328718,-5.150630,6.738522,2.791089,-8.467942,-3.149362,1.871033,-9.877710,9.783754,2.130837,8.398231,5.260459,-2.086377,-5.008897,2.747177,-4.167845,1.414089,-3.917160,-0.585392,5.117077,9.641713,-8.921436,9.322528,-6.913447,-5.479240,-0.715560,-0.888716,9.016375,2.476083,2.033063,8.433730,-4.679625,-7.581606,3.484364,7.176361,0.163741,-0.488263,9.689807,4.233422,-4.131856,6.306929,0.059339,-1.534843,-0.324578,4.155173,-6.956760,4.547647,3.406908,4.479102,-4.365209,-8.947057,-2.649385,1.540542,-6.462092,0.494092,7.103671,0.615940,-2.584953,5.754234,1.581024,-4.533963,4.771176,2.052489,1.434797,7.792972,2.221939,2.480188,-5.950727,1.352752,9.032502,-8.420261,6.792400,-9.397431,9.365989,-9.932165,-6.013753,4.909549,-5.784624,-2.091615,6.892868,6.287907,8.214077,-8.356028,1.216976,6.759734,-0.891733,1.511285,4.238112,3.605867,-7.276714,-6.897388,-4.396736,-3.895400,-4.237681,-3.975214,4.604386,-0.686340,1.309158,-3.633895,-0.384079,0.493653,8.792278,-4.598864,-1.074004,-9.911596,2.309890,4.152673,-4.279316,-2.610998,2.443543,-9.493079,-7.541705,0.419669,-9.178981,-2.214072,8.186321,3.227357,4.883387,-1.131987,-2.801840,-8.719750,3.236200,1.865470,0.246625,-4.567855,4.784333,3.319623,6.740287,0.066547,3.113273,-8.370836,8.553437,1.057190,9.957876,5.588471,-7.213771,5.890325,1.221183,4.205317,-0.356198,3.430067,5.052933,6.851977,-9.725696,-4.341305,-7.107837,-3.981019,-4.799313,-2.366906,0.011090,8.002384,5.648166,3.001925,-5.562521,-3.188993,-0.011450,-8.165026,-7.196596,-9.824189,-0.080261,-1.598505,1.399024,-3.680659,5.618686,9.783470,-6.615078,-7.158620,6.928652,3.951433,2.436252,-9.566115,9.877526,2.414764,-9.715217,-5.327747,-6.696548,-5.985844,-6.885848,0.252720,2.050605,-8.071154,-0.695565,-2.914876,9.269308,3.802191,3.668246,-7.695261,-3.916349,-6.089737,-9.568831,5.083394,-9.695095,-5.265360,-4.894598,-7.677718,3.975729,-7.432096,6.188575,0.124116,-1.001819,9.702034,1.498304,-3.306032,1.629739,-9.911908,-4.713164,-9.417524,9.083534,1.867188,2.076176,-4.044703,-8.628819,-5.461576,0.243001,-7.151290,-5.810305,1.035323,-5.032153,1.081241,-6.735608,2.508338,5.591119,6.867706,-1.376111,-8.589172,-6.616182,-2.683826,9.269740,8.383112,8.608308,-8.794689,7.022636,8.843424,-9.085663,-6.471188,-8.375063,2.542538,7.079701,1.452422,0.981991,5.240393,-5.886346,-4.623561,-6.840716,-4.006442,-0.882466,6.972130,-1.728540,9.618183,1.033510,2.918447,9.241931,2.390145,-8.494321,-3.586189,3.233929,5.746382,-9.055404,0.804890,6.040764,-9.372795,2.902427,-7.428123,-8.831379,-8.484747,7.256358,6.104460,-0.070021,6.362245,5.346567,-1.310572,-4.279134,-2.741722,0.979503,9.977870,7.454645,-1.045462,-3.868864,-9.669232,-4.274184,-6.653631,9.990437,-7.290744,4.670110,-4.440544,-9.629278,9.719750,-4.654660,0.223604,1.678041,4.766378,-7.704983,9.387703,-6.249162,6.985782,-6.043647,-2.755405,9.695402,5.497096,-8.239021,-8.673065,-2.615801,0.780865,8.433936,9.188089,-7.164131,-4.691496,-8.537072,8.584287,7.877643,-4.409687,-7.514746,2.058343,3.938739,-3.149453,-9.777951,-2.183222,-3.743912,-9.931174,-0.985685,0.396466,-4.848511,4.630570,5.172518,1.583235,2.415594,8.100783,-2.798068,-8.568927,6.332973,4.811625,1.626589,5.467913,-6.337624,2.099898,8.434591,4.962068,-7.221681,-7.364684,6.683240,0.281176,2.714244,-9.821624,0.084937,-0.346815,-8.637060,7.414291,0.225951,0.940815,-3.578572,9.516238,5.304910,2.808481,5.625785,-9.999260,5.490135,-7.955664,-1.754069,-6.347355,3.559474,-9.384532,-2.345733,1.625540,-3.857970,7.646485,2.258436,-1.476450,5.565833,9.950509,-8.327461,3.294248,7.645763,-0.668133,1.269539,5.383900,2.290719,-3.549201,5.481229,-2.024493,-0.517153,-3.264804,-0.303461,2.091727,-8.803026,-2.445788,-4.558045,-1.357734,2.525734,5.289462,0.479608,7.774288,-1.076986,3.425841,6.302507,-5.954553,6.667384,-9.615188,9.417820,-8.443016,-0.069699,-0.960013,-6.854913,-2.380239,-5.677692,-8.052070,-7.176607,-9.304278,9.729649,4.681593,6.375465,6.493964,-3.685668,-3.473351,8.495019,-4.679007,-3.595155,-9.996023,9.160917,-5.932206,-1.441971,-4.273835,7.775922,3.181215,-9.823969,0.010477,-7.070790,-2.703164,-3.799902,3.251894,7.139647], dtype = "float32")#candidate|5497|(2250,)|const|float32
call_5496 = relay.TupleGetItem(func_1537_call(relay.reshape(const_5497.astype('float32'), [15, 10, 15])), 4)
call_5498 = relay.TupleGetItem(func_1540_call(relay.reshape(const_5497.astype('float32'), [15, 10, 15])), 4)
func_3808_call = mod.get_global_var('func_3808')
func_3809_call = mutated_mod.get_global_var('func_3809')
call_5499 = func_3808_call()
call_5500 = func_3808_call()
uop_5504 = relay.atan(call_5475.astype('float32')) # shape=(12, 7, 3)
uop_5506 = relay.atan(call_5476.astype('float32')) # shape=(12, 7, 3)
bop_5507 = relay.logical_or(call_5496.astype('bool'), relay.reshape(const_5497.astype('bool'), relay.shape_of(call_5496))) # shape=(15, 10, 15)
bop_5510 = relay.logical_or(call_5498.astype('bool'), relay.reshape(const_5497.astype('bool'), relay.shape_of(call_5498))) # shape=(15, 10, 15)
func_1960_call = mod.get_global_var('func_1960')
func_1963_call = mutated_mod.get_global_var('func_1963')
var_5512 = relay.var("var_5512", dtype = "uint64", shape = (560,))#candidate|5512|(560,)|var|uint64
call_5511 = relay.TupleGetItem(func_1960_call(relay.reshape(var_5512.astype('uint64'), [10, 7, 8]), relay.reshape(var_5512.astype('uint64'), [10, 7, 8]), ), 1)
call_5513 = relay.TupleGetItem(func_1963_call(relay.reshape(var_5512.astype('uint64'), [10, 7, 8]), relay.reshape(var_5512.astype('uint64'), [10, 7, 8]), ), 1)
func_3483_call = mod.get_global_var('func_3483')
func_3484_call = mutated_mod.get_global_var('func_3484')
call_5515 = relay.TupleGetItem(func_3483_call(), 0)
call_5516 = relay.TupleGetItem(func_3484_call(), 0)
uop_5528 = relay.sqrt(uop_5504.astype('float64')) # shape=(12, 7, 3)
uop_5530 = relay.sqrt(uop_5506.astype('float64')) # shape=(12, 7, 3)
func_4634_call = mod.get_global_var('func_4634')
func_4636_call = mutated_mod.get_global_var('func_4636')
call_5532 = relay.TupleGetItem(func_4634_call(relay.reshape(const_5497.astype('float32'), [2250,])), 1)
call_5533 = relay.TupleGetItem(func_4636_call(relay.reshape(const_5497.astype('float32'), [2250,])), 1)
func_1564_call = mod.get_global_var('func_1564')
func_1566_call = mutated_mod.get_global_var('func_1566')
const_5535 = relay.const([[-1.910639,-7.713046,-6.210322,9.276956],[-8.743582,1.382920,6.744936,4.979987],[2.248657,-4.032680,-0.553471,-3.558134],[-0.243624,-6.548720,-9.228828,5.425026],[-9.497821,9.055135,0.960582,0.920440],[5.572867,3.221821,-9.980564,-0.700731],[7.357506,-8.727383,-5.537941,-4.423589],[-0.678549,6.777127,7.717777,0.377103],[6.112952,-0.591724,-8.239267,-5.414571],[-0.126621,-6.756788,-6.510958,-7.527222],[8.385609,9.284127,4.755811,-4.391202],[-8.066401,-7.741373,-1.084838,9.599990],[2.216757,-3.067210,2.671178,4.167675],[-7.483215,-0.860435,-0.147567,-2.168103],[-6.497332,3.015687,6.342465,1.575969],[-1.422989,7.354250,-0.897304,-1.797659],[-6.422323,3.934839,6.848579,9.898803],[-2.020614,0.781076,-8.270574,-6.244319],[2.110271,9.551321,4.712488,7.563792],[-8.827886,7.300361,2.030946,-8.531833],[-5.753436,-5.726833,-5.966371,-4.340641],[4.869417,7.552506,2.593844,-6.623668],[-0.107519,-8.777206,0.106532,1.515159],[-7.048320,-6.399637,-2.784517,-2.409290],[-3.821610,-8.731247,-3.554749,9.646945],[-8.856604,-0.717739,-4.932183,0.933757],[-8.962103,-5.429438,4.451364,9.910415],[-3.020752,0.518957,4.442019,-5.208953],[-9.772260,-9.967381,2.464008,7.591946],[0.807218,2.803760,-1.847911,-7.285577],[-6.201595,-3.553653,-3.564755,-2.677823],[5.557942,9.066177,7.940643,-9.361829],[-6.074326,-1.833646,-4.644562,-9.625822],[7.774521,5.884873,-8.990122,-5.788863],[6.922672,-1.521763,7.446244,-3.547103],[-8.812229,1.391548,9.913447,-6.865132],[-6.161821,6.013723,-9.777838,-6.962404],[-5.169871,7.101995,6.678053,1.002363],[2.040741,-1.115960,-3.258431,5.789824],[-3.547062,-6.487997,2.762151,-9.153656],[-3.476023,-3.840230,1.928305,-9.178920],[6.376328,-9.561541,-6.273262,8.975989],[4.944155,-0.916243,-9.010559,-3.994808],[-9.369116,7.137735,8.241396,1.308514],[2.369131,-4.848889,8.753126,-1.707174],[5.063039,9.404564,5.978268,7.267875],[6.266618,-9.069239,7.799992,-3.279953],[-6.247656,9.475734,4.742325,2.271819],[4.638739,8.356209,-7.647377,7.854114],[-8.978473,0.011857,2.158421,-8.597132],[-5.577084,-0.407568,-5.608466,1.049990],[-4.361833,-7.536230,-3.968260,9.820124],[-2.524168,-7.542913,-8.306106,-6.511197],[-1.648563,-9.923564,-6.226334,-3.971090],[-3.861697,-5.346592,-1.283186,3.745929],[2.253770,-7.516338,7.701032,4.243781],[4.463908,-0.159120,9.643132,-7.070971],[4.901382,9.761924,-5.000787,-9.271663],[-5.109839,5.309827,2.037173,-2.760883],[-5.394718,-4.441752,-5.535004,1.539194],[7.192329,4.128681,-6.078242,-4.766863],[3.747849,0.693870,-8.740683,-4.666917],[3.890255,0.530779,-1.674098,5.857830],[-0.904709,-6.308207,9.027897,-4.403303],[4.224835,0.208756,-5.305012,1.551346],[1.820643,4.512262,3.814773,-6.422060],[1.382032,6.635348,6.341504,-3.022632],[-3.338329,-3.082963,4.085770,-9.320827],[4.105082,-4.667196,1.459990,8.940765],[2.613442,-8.382298,-7.600018,9.025633],[-7.968289,0.654007,1.485201,-2.728717],[-4.729589,4.901586,6.810152,-6.338530],[4.929118,-3.938503,3.453540,5.883122],[-5.538775,7.582739,-5.407469,-8.622184],[6.236723,5.790698,-9.190861,-4.366582],[-1.644745,-8.591523,7.569041,-9.802194],[4.654891,5.126429,-7.138776,7.510163],[4.752391,3.048540,5.173839,-9.968250],[5.074298,3.447379,2.931859,-0.237069],[3.891536,-5.076807,-2.696866,1.297485],[8.267495,-2.145446,2.354487,7.506700],[-0.473089,1.334468,-2.662649,-6.167620],[3.455649,2.970139,1.126778,-5.099420],[-9.753097,0.680419,-0.076910,7.857818],[8.613405,3.592923,8.565000,4.828606],[-6.741784,-6.206327,5.847181,-4.333301],[-2.839673,9.643525,-2.695951,2.975420],[-6.141012,9.004575,2.913348,0.823659],[-5.759050,-1.667991,8.969376,2.359308],[-0.574457,-2.592136,-8.019591,-7.212418],[7.852484,-1.729850,2.433334,-0.801983],[-0.833282,-0.523955,-0.110523,-2.410879],[2.097438,8.150635,1.890742,-5.704922],[-6.336830,8.329260,9.726492,6.476158],[4.360101,-0.249874,2.786835,2.050478],[-1.418174,-8.290843,9.213859,7.027201],[0.927720,9.176289,3.804822,-2.393298],[-6.009401,-1.825158,5.789745,-1.989505],[7.547118,0.397976,-7.266276,-9.292227],[4.837964,0.305851,-3.853692,2.915640],[0.762656,-8.803489,-5.881578,-8.190919],[-1.825657,-2.032734,7.108299,-6.827611],[-2.027203,5.189337,-5.535379,2.439387],[-7.267050,-6.606358,-4.066180,-8.184203],[-9.354697,-4.740491,7.965762,-3.937289],[-6.378458,0.249824,7.743926,-8.742912],[-7.176649,-5.113939,-3.736861,-4.749948],[0.922771,3.103090,-2.710545,1.952808],[-0.847764,2.395097,5.504470,7.919800],[-1.864368,2.051886,-0.116560,1.363918],[1.119441,-4.594296,-9.588529,6.977091],[9.139623,6.186941,-8.511960,7.154108],[-4.022955,5.356510,-2.043002,8.550537],[8.372187,-1.550127,7.075175,-2.880689],[-0.768156,-7.452213,7.812362,-4.226068],[-9.309470,-6.239632,-5.944587,5.441453],[-5.568035,-6.569719,2.290727,-9.930935],[-9.320882,-9.277458,-1.276709,6.359984],[7.703141,2.460411,8.883830,-2.014356],[9.759056,-7.393896,-3.876124,7.666813],[-4.572250,6.902978,0.879300,5.543647],[-0.094974,2.626159,-7.823750,9.821440],[-4.926256,3.093239,-1.293238,2.632931],[-0.298209,-8.007918,2.376932,-6.029168],[8.330849,9.888546,0.640924,0.036432],[0.750128,-0.393039,3.896087,9.371461],[2.499779,0.628246,-3.434877,3.748672],[-7.745405,7.324622,5.869185,-1.601585],[2.365949,-1.668010,-3.386987,3.058712],[-0.892945,9.301171,6.715687,-2.800928],[3.873367,4.346764,-6.961748,5.673290],[-1.877982,8.020825,-6.587968,-4.536914],[2.741956,-8.367533,-3.081802,7.655201],[9.503370,-1.666832,-7.847106,8.354942],[-4.651988,7.521934,-6.083767,-4.411884],[-2.919564,-7.681647,4.824545,-1.308307],[0.127204,-5.351711,-1.906712,6.093274],[-4.887671,9.623137,-3.722811,4.264769],[9.096456,8.059801,3.155388,-2.215036],[7.881990,-0.397227,0.815216,-2.059913],[8.984390,5.670933,-9.593950,7.142573],[-1.685040,7.506584,-8.213539,-7.256191],[-2.121657,2.369553,0.125676,7.493563],[-4.661781,6.188126,-7.641267,6.031990],[-6.469617,-9.447892,6.412075,3.497739],[-0.317435,-2.406972,7.378530,-7.145736],[-8.012152,9.648254,0.153775,8.522199],[-8.665944,1.582085,-3.263452,-4.770746],[3.203854,1.668448,5.504716,7.359433],[-4.233893,-8.299498,-0.443782,0.227635],[-8.888883,-8.718170,3.671631,3.346129],[-9.820870,-7.232352,7.233644,3.940090],[5.620484,0.544203,0.842916,-2.556609],[-5.631837,-2.229412,0.613222,-8.421539],[-2.103039,8.994596,-2.020712,-2.297738],[-4.695041,1.565988,0.248870,-5.672782],[7.511775,1.083252,-5.871403,-8.795654],[-6.881372,2.657215,-0.258796,8.088219],[-4.480796,-8.084906,-4.527332,4.505107],[-3.151789,-5.791371,9.663854,-8.743362],[4.722819,-6.562276,-9.502501,-2.849342],[9.073086,-8.086610,9.614464,-4.730888],[4.773221,-3.698808,1.549730,-4.748492],[-1.803952,-6.598086,3.228733,1.539432],[-3.723688,9.146305,-9.096749,-9.830984],[2.027965,-0.338600,-5.716906,8.855582],[0.110847,6.634004,5.874663,-3.777830],[8.263138,-8.665238,-3.911523,1.311539],[3.222210,9.972634,-7.590026,1.564643],[-6.548675,1.373091,-2.412850,-5.285341],[-6.725537,3.011610,0.413875,-1.519529],[-5.957637,-9.168367,-6.206992,0.771602],[-0.068745,7.390714,-7.504011,-3.332339],[-6.487669,-1.164574,-7.380609,0.459293],[-4.654673,9.009408,-4.236801,-4.078028],[-5.360085,6.083698,-3.521514,-5.061609],[7.184371,-0.275505,-1.950747,3.757246],[-7.621687,6.168725,-7.699659,6.124729],[6.097855,1.576500,-8.503622,-9.579080],[-0.612660,9.880390,8.671554,1.927924],[-2.755702,-4.299260,-4.987770,5.045969],[9.832194,-3.678667,5.994432,3.846852],[-5.337157,7.543629,-8.410056,9.666651],[1.496755,-1.740732,-3.498897,-1.154226],[9.912199,2.634757,-0.835450,-0.670035],[2.355687,9.702303,-3.051281,-4.539541],[3.998257,-1.893512,6.634964,-4.554909],[-1.755949,3.879444,-9.487382,3.006230],[6.375609,-3.613379,-7.348768,7.301112],[7.397754,-2.640393,6.454130,-8.726315],[-2.669077,6.716423,-3.383312,0.645849],[-5.471952,4.277228,-6.827546,-2.530023],[9.342303,6.791844,6.849878,3.913580],[2.894947,-4.832703,-3.811602,-8.313655],[5.969241,6.608603,0.621519,2.926221],[9.233270,2.050317,3.124263,8.756931],[-2.929270,-5.093270,-2.626503,-8.088376],[-7.375289,-1.968950,0.306909,6.970279],[-8.789289,-8.801542,3.958692,6.976050],[-1.008932,-5.435274,-6.805411,-5.874542],[-3.329947,-5.513320,-6.611352,9.001665],[-1.003222,-4.106617,-4.353165,-2.012969],[-1.474830,-0.658098,-5.968446,-7.985092],[-2.351875,6.370532,4.171774,6.556338],[-8.291235,-2.182350,-9.495812,6.188032],[9.117786,-7.863535,-3.428367,2.921155],[8.205132,-3.300099,8.539200,-7.730272],[-8.930237,3.590579,0.284671,6.335766],[-3.488727,2.524403,2.349177,8.523709],[-4.363927,-5.257879,0.014983,0.057957],[-3.462203,-4.418527,-2.580124,1.883450],[-8.295615,-8.402050,-5.276907,-6.887955],[4.493127,3.780388,-6.377608,-1.171306],[5.718056,8.272287,-4.762293,9.173262],[1.361472,-2.041490,7.759662,-3.976757],[-8.202914,9.854502,-3.387566,-3.417946],[6.147797,7.881080,-4.581026,-3.288157],[-2.477350,-4.736307,-9.422290,1.329646],[-0.957116,-5.330841,-7.937832,7.428884],[8.069349,8.133427,-7.292529,-6.042758],[5.980196,-6.411339,0.299065,5.587483],[-9.999928,-9.557027,-1.720309,-8.150732],[0.033981,-5.618036,2.412303,5.798523],[-2.685125,3.574428,-9.153473,9.518229],[3.617251,2.593346,-6.340814,-0.655381],[6.812122,-5.062068,9.299792,-1.493563],[7.805601,-1.374650,-1.217978,8.116210],[-9.965868,-6.197888,-3.185556,-9.712861],[4.545356,-8.190589,2.160028,-9.871789],[4.341120,-2.743300,-5.983663,-0.517255],[2.976537,-6.342502,-2.279864,-6.791580],[-1.033780,9.550381,-9.035022,-2.182247],[0.196471,-2.919710,-7.192277,9.482566],[3.430071,-1.129395,-9.156120,9.988035],[5.996622,-6.943162,5.958297,-9.136993],[7.520380,6.274148,8.593574,1.543460],[-0.865645,8.439624,-9.119860,0.067302],[-5.757014,7.903149,-8.903936,-9.797676],[8.890922,5.513525,-1.201275,-0.507874],[2.555412,6.654319,-4.860321,5.426960],[-9.401652,2.335253,-4.134479,-1.560251],[-1.464086,1.975744,-3.098154,-0.340659],[-3.801756,0.913890,7.436275,-6.021888],[5.394220,1.415247,-4.830290,-6.926400],[-5.064708,-6.831381,-1.986487,9.731892],[-8.084701,8.691563,7.775785,-7.367963],[8.426546,-3.088112,-8.959129,6.688436],[-1.879113,7.370187,-3.167575,-7.642669],[0.606543,3.323515,0.090616,-5.696131],[3.131811,4.693305,2.723992,3.268559],[0.374251,2.939132,-7.246816,4.056496],[2.918745,-8.656021,-8.751620,-7.063332],[4.901631,-0.135896,8.816232,-6.877973],[-0.639562,6.948044,-0.061765,0.270373],[-2.380890,9.119955,7.816166,9.942854],[1.887684,-8.410319,-1.729424,6.110062],[-8.350069,9.986889,-5.516403,2.873553],[2.707743,-9.220685,9.887515,5.390977],[-3.650367,-3.871397,2.182459,-3.509321],[9.186250,-7.175173,-1.325606,4.902748],[4.404016,-2.664265,1.566459,1.802405],[-9.041374,-3.492252,3.605073,5.861403],[-5.057218,8.695892,9.385696,-9.661336],[6.300786,1.630877,-2.491052,-9.472033]], dtype = "float32")#candidate|5535|(264, 4)|const|float32
call_5534 = relay.TupleGetItem(func_1564_call(relay.reshape(const_5535.astype('float32'), [8, 12, 11])), 0)
call_5536 = relay.TupleGetItem(func_1566_call(relay.reshape(const_5535.astype('float32'), [8, 12, 11])), 0)
output = relay.Tuple([call_5499,bop_5507,call_5511,var_5512,call_5515,uop_5528,call_5532,call_5534,const_5535,])
output2 = relay.Tuple([call_5500,bop_5510,call_5513,var_5512,call_5516,uop_5530,call_5533,call_5536,const_5535,])
func_5550 = relay.Function([var_5512,], output)
mod['func_5550'] = func_5550
mod = relay.transform.InferType()(mod)
mutated_mod['func_5550'] = func_5550
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5551 = relay.var("var_5551", dtype = "uint64", shape = (560,))#candidate|5551|(560,)|var|uint64
func_5550_call = mutated_mod.get_global_var('func_5550')
call_5552 = func_5550_call(var_5551)
output = call_5552
func_5553 = relay.Function([var_5551], output)
mutated_mod['func_5553'] = func_5553
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4741_call = mod.get_global_var('func_4741')
func_4743_call = mutated_mod.get_global_var('func_4743')
call_5579 = relay.TupleGetItem(func_4741_call(), 0)
call_5580 = relay.TupleGetItem(func_4743_call(), 0)
output = relay.Tuple([call_5579,])
output2 = relay.Tuple([call_5580,])
func_5603 = relay.Function([], output)
mod['func_5603'] = func_5603
mod = relay.transform.InferType()(mod)
mutated_mod['func_5603'] = func_5603
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5603_call = mutated_mod.get_global_var('func_5603')
call_5604 = func_5603_call()
output = call_5604
func_5605 = relay.Function([], output)
mutated_mod['func_5605'] = func_5605
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4741_call = mod.get_global_var('func_4741')
func_4743_call = mutated_mod.get_global_var('func_4743')
call_5689 = relay.TupleGetItem(func_4741_call(), 0)
call_5690 = relay.TupleGetItem(func_4743_call(), 0)
output = relay.Tuple([call_5689,])
output2 = relay.Tuple([call_5690,])
func_5729 = relay.Function([], output)
mod['func_5729'] = func_5729
mod = relay.transform.InferType()(mod)
mutated_mod['func_5729'] = func_5729
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5729_call = mutated_mod.get_global_var('func_5729')
call_5730 = func_5729_call()
output = call_5730
func_5731 = relay.Function([], output)
mutated_mod['func_5731'] = func_5731
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2586_call = mod.get_global_var('func_2586')
func_2587_call = mutated_mod.get_global_var('func_2587')
call_5746 = relay.TupleGetItem(func_2586_call(), 0)
call_5747 = relay.TupleGetItem(func_2587_call(), 0)
func_3065_call = mod.get_global_var('func_3065')
func_3067_call = mutated_mod.get_global_var('func_3067')
call_5758 = relay.TupleGetItem(func_3065_call(), 0)
call_5759 = relay.TupleGetItem(func_3067_call(), 0)
func_3022_call = mod.get_global_var('func_3022')
func_3026_call = mutated_mod.get_global_var('func_3026')
var_5761 = relay.var("var_5761", dtype = "float32", shape = (2250,))#candidate|5761|(2250,)|var|float32
const_5762 = relay.const([[8.031090,-4.688013,-9.515645,-8.853247,-1.488209],[7.965931,2.368214,-7.743424,6.401225,-9.932989],[6.403181,7.758421,-1.718923,6.811904,-3.250553],[8.018586,-3.457605,7.617874,-2.815143,1.559619],[1.748378,-2.558955,5.417946,7.002040,-3.359604]], dtype = "float32")#candidate|5762|(5, 5)|const|float32
call_5760 = relay.TupleGetItem(func_3022_call(relay.reshape(var_5761.astype('float32'), [15, 150]), relay.reshape(const_5762.astype('float32'), [25,]), ), 0)
call_5763 = relay.TupleGetItem(func_3026_call(relay.reshape(var_5761.astype('float32'), [15, 150]), relay.reshape(const_5762.astype('float32'), [25,]), ), 0)
func_3737_call = mod.get_global_var('func_3737')
func_3739_call = mutated_mod.get_global_var('func_3739')
call_5765 = relay.TupleGetItem(func_3737_call(), 1)
call_5766 = relay.TupleGetItem(func_3739_call(), 1)
output = relay.Tuple([call_5746,call_5758,call_5760,var_5761,const_5762,call_5765,])
output2 = relay.Tuple([call_5747,call_5759,call_5763,var_5761,const_5762,call_5766,])
func_5769 = relay.Function([var_5761,], output)
mod['func_5769'] = func_5769
mod = relay.transform.InferType()(mod)
mutated_mod['func_5769'] = func_5769
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5770 = relay.var("var_5770", dtype = "float32", shape = (2250,))#candidate|5770|(2250,)|var|float32
func_5769_call = mutated_mod.get_global_var('func_5769')
call_5771 = func_5769_call(var_5770)
output = call_5771
func_5772 = relay.Function([var_5770], output)
mutated_mod['func_5772'] = func_5772
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5041_call = mod.get_global_var('func_5041')
func_5043_call = mutated_mod.get_global_var('func_5043')
call_5796 = relay.TupleGetItem(func_5041_call(), 0)
call_5797 = relay.TupleGetItem(func_5043_call(), 0)
func_2745_call = mod.get_global_var('func_2745')
func_2747_call = mutated_mod.get_global_var('func_2747')
call_5799 = relay.TupleGetItem(func_2745_call(), 2)
call_5800 = relay.TupleGetItem(func_2747_call(), 2)
func_4420_call = mod.get_global_var('func_4420')
func_4424_call = mutated_mod.get_global_var('func_4424')
const_5802 = relay.const([1.762724,1.863238,0.088429,-8.600198,6.531545,2.944351,-8.600505,-1.785440,9.433239,-3.050469,1.910166,1.739793,8.876171,-9.101221,-4.697919,5.552717,-3.464060,2.394733,3.189295,-4.008552,0.666174,3.875271,-7.294087,-0.125475,-9.975400], dtype = "float32")#candidate|5802|(25,)|const|float32
const_5803 = relay.const([5,8,-9,-1,1,-4,3,10,-8,-3,9,-6,-7,9,2,-8,5,10,-3,7,-10,2,4,5,10,-2,-4,-9,3,-4,4,-1,-2,-5,1,10,4,9,3,2,2,4,4,10,-9,-2,8,6,-6,4,4,1,7,-5,-3,-4,1,-4,-1,-4,-9,-5,-2,7,-3,-7,7,6,9,-2,8,-1,6,-8,10,-7,-10,5,7,-2,-3,7,9,1,5,-10,3,-6,7,-6,-7,7,9,-1,-6,-5,4,-8,-7,10,-6,9,-2,-8,10,-7,9,6,5,-4,-2,9,-3,10,-8,4,-1,-1,9,-3,5,7,3,4,1,-1,7,1,-9,-1,-1,8,9,6,-3,8,10,-4,1,5,7,6,-5,3,-10,-10,-9,-3,-2,-8,-10,2,4,-5,5,-6,5,6,1,-6,4,-1,6,1,7,-2,-6,8,-10,2,2,-10,1,1,-5,-4,4,-2,-3,8,-2,6,-5,-7,-7,2,8,8,-8,-3,5,2,7,10,6,-8,10,-8,8,10,4,-7,-4,4,-4,-4,6,-8,9,3,-8,6,6,-3,-7,2,-4,6,1,-1,6,-6,3,-5,4,10,10,-1,7,-1,-6,-8,1,10,3,-9,-1,1,-10,6,6,-7,-1,-1,4,-5,-6,-3,-8,-8,-8,-9,-3,3,-9,-7,-7,1,5,-8,-5,-1,7,-9,1,-7,-6,6,-9,3,9,2,6,-4,5,-2,-5,3,-9,9,2,6,2,-9,4,8,-2,7,-6,-9,-5,3,-3,3,1,-1,8,4,3,3,-5,-9,3,-5,9,2,-6,-5,3,3,10,8,-3,-9,6,-2,-5,8,-8,-9,-8,2,-5,-4,-5,-4,-3,4,-5,-10,5,1,-2,-9,3,-7,8,6,-6,-2,1,5,-10,-8,2,-7,-2,8,-9,-4,5,-7,3,-6,6,-10,-6,1,-6,3,8,6,10,4,2,-4,-1,8,4,5,-4,9,1,-7,8,6,10,6,7,1,-7,-6,8,4,-10,4,-5,-5,2,5,2,7,-5,-1,-2,4,9,-2,6,9,-5,9,7,-6,5,-10,-5,8,10,4,6,-5,-10,2,-3,1,7,7,5,2,5,9,-10,1,8,4,-3,-9,-6,-10,-3,4,-2,-5,-6,-9,10,2,4,-10,7,4,-2,7,-3,4,8,7,1,-9,8,10,5,-10,3,1,3,-2,-8,3,-5,-9,-7,3,10,-8,1,8,8,-4,7,3,-1,-5,5,2,6,-3,10,4,-9,10,-8,5,-8,7,4,-5,6,-4,7,2,-7,-6,-2,-9,-3,-2,-9,7,6,3,5,-7,-8,-3,-6,8,-10,4,-7,5,-4,-10,-4,2,-2,-1,5,-9,8,-9,9,-10,6,-10,-9,-2,2,7,9,-5,6,-8,-4,5,-1,6,2,8,2,-10,5,-5,3,2,-1,5,-10,10,1,6,8,3,-2,7,-3,6,-10,-4,10,7,2,1,-4,-8,4,9,7,-3,5,2,10,7,-6,-3,8,10,-3,-3,-1,3,6,1,-6], dtype = "int32")#candidate|5803|(585,)|const|int32
call_5801 = relay.TupleGetItem(func_4420_call(relay.reshape(const_5802.astype('float32'), [25,]), relay.reshape(const_5803.astype('int32'), [585,]), ), 5)
call_5804 = relay.TupleGetItem(func_4424_call(relay.reshape(const_5802.astype('float32'), [25,]), relay.reshape(const_5803.astype('int32'), [585,]), ), 5)
output = relay.Tuple([call_5796,call_5799,call_5801,const_5802,const_5803,])
output2 = relay.Tuple([call_5797,call_5800,call_5804,const_5802,const_5803,])
func_5814 = relay.Function([], output)
mod['func_5814'] = func_5814
mod = relay.transform.InferType()(mod)
output = func_5814()
func_5815 = relay.Function([], output)
mutated_mod['func_5815'] = func_5815
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3483_call = mod.get_global_var('func_3483')
func_3484_call = mutated_mod.get_global_var('func_3484')
call_5822 = relay.TupleGetItem(func_3483_call(), 0)
call_5823 = relay.TupleGetItem(func_3484_call(), 0)
output = relay.Tuple([call_5822,])
output2 = relay.Tuple([call_5823,])
func_5833 = relay.Function([], output)
mod['func_5833'] = func_5833
mod = relay.transform.InferType()(mod)
mutated_mod['func_5833'] = func_5833
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5833_call = mutated_mod.get_global_var('func_5833')
call_5834 = func_5833_call()
output = call_5834
func_5835 = relay.Function([], output)
mutated_mod['func_5835'] = func_5835
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3483_call = mod.get_global_var('func_3483')
func_3484_call = mutated_mod.get_global_var('func_3484')
call_5878 = relay.TupleGetItem(func_3483_call(), 0)
call_5879 = relay.TupleGetItem(func_3484_call(), 0)
output = relay.Tuple([call_5878,])
output2 = relay.Tuple([call_5879,])
func_5895 = relay.Function([], output)
mod['func_5895'] = func_5895
mod = relay.transform.InferType()(mod)
mutated_mod['func_5895'] = func_5895
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5895_call = mutated_mod.get_global_var('func_5895')
call_5896 = func_5895_call()
output = call_5896
func_5897 = relay.Function([], output)
mutated_mod['func_5897'] = func_5897
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5302_call = mod.get_global_var('func_5302')
func_5303_call = mutated_mod.get_global_var('func_5303')
call_5916 = relay.TupleGetItem(func_5302_call(), 0)
call_5917 = relay.TupleGetItem(func_5303_call(), 0)
output = call_5916
output2 = call_5917
func_5918 = relay.Function([], output)
mod['func_5918'] = func_5918
mod = relay.transform.InferType()(mod)
mutated_mod['func_5918'] = func_5918
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5918_call = mutated_mod.get_global_var('func_5918')
call_5919 = func_5918_call()
output = call_5919
func_5920 = relay.Function([], output)
mutated_mod['func_5920'] = func_5920
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5729_call = mod.get_global_var('func_5729')
func_5731_call = mutated_mod.get_global_var('func_5731')
call_5924 = relay.TupleGetItem(func_5729_call(), 0)
call_5925 = relay.TupleGetItem(func_5731_call(), 0)
func_871_call = mod.get_global_var('func_871')
func_874_call = mutated_mod.get_global_var('func_874')
const_5929 = relay.const([7.250470,1.764338,-6.571803,-3.491518,-6.563141,-4.231830,8.421191,-3.811347,1.692351,6.121067,-6.714498,-6.544812,-8.970824,8.679802,4.292225,1.868940,3.237752,6.787795,8.956608,9.107909,7.279695,-4.723470,1.550416,9.489465,-6.269959,-4.864711,1.653139,-3.612401,9.009974,1.497265,-8.768991,8.791976,-3.866514,6.422914,-4.613770,9.241093,-5.046421,-7.137184,8.070034,-9.590211,6.024267,-6.571888,-5.147843,-8.575134,4.274723,-4.925546,-8.109726,1.837668,-5.142516,-6.363413,9.112718,-4.925523,4.963002,8.709528,-1.243711,-7.354830,1.886867,6.573559,7.500453,0.801195,2.723354,-3.802592,-7.626656,-1.977606,-8.355085,1.407365,7.704199,-3.030880,5.267577,9.794312], dtype = "float64")#candidate|5929|(70,)|const|float64
call_5928 = relay.TupleGetItem(func_871_call(relay.reshape(const_5929.astype('float64'), [7, 1, 10])), 0)
call_5930 = relay.TupleGetItem(func_874_call(relay.reshape(const_5929.astype('float64'), [7, 1, 10])), 0)
output = relay.Tuple([call_5924,call_5928,const_5929,])
output2 = relay.Tuple([call_5925,call_5930,const_5929,])
func_5933 = relay.Function([], output)
mod['func_5933'] = func_5933
mod = relay.transform.InferType()(mod)
mutated_mod['func_5933'] = func_5933
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5933_call = mutated_mod.get_global_var('func_5933')
call_5934 = func_5933_call()
output = call_5934
func_5935 = relay.Function([], output)
mutated_mod['func_5935'] = func_5935
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5321_call = mod.get_global_var('func_5321')
func_5323_call = mutated_mod.get_global_var('func_5323')
call_5941 = relay.TupleGetItem(func_5321_call(), 0)
call_5942 = relay.TupleGetItem(func_5323_call(), 0)
func_5918_call = mod.get_global_var('func_5918')
func_5920_call = mutated_mod.get_global_var('func_5920')
call_5960 = func_5918_call()
call_5961 = func_5918_call()
func_2745_call = mod.get_global_var('func_2745')
func_2747_call = mutated_mod.get_global_var('func_2747')
call_5968 = relay.TupleGetItem(func_2745_call(), 1)
call_5969 = relay.TupleGetItem(func_2747_call(), 1)
func_3483_call = mod.get_global_var('func_3483')
func_3484_call = mutated_mod.get_global_var('func_3484')
call_5970 = relay.TupleGetItem(func_3483_call(), 0)
call_5971 = relay.TupleGetItem(func_3484_call(), 0)
output = relay.Tuple([call_5941,call_5960,call_5968,call_5970,])
output2 = relay.Tuple([call_5942,call_5961,call_5969,call_5971,])
func_5984 = relay.Function([], output)
mod['func_5984'] = func_5984
mod = relay.transform.InferType()(mod)
mutated_mod['func_5984'] = func_5984
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5984_call = mutated_mod.get_global_var('func_5984')
call_5985 = func_5984_call()
output = call_5985
func_5986 = relay.Function([], output)
mutated_mod['func_5986'] = func_5986
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5918_call = mod.get_global_var('func_5918')
func_5920_call = mutated_mod.get_global_var('func_5920')
call_6002 = func_5918_call()
call_6003 = func_5918_call()
output = relay.Tuple([call_6002,])
output2 = relay.Tuple([call_6003,])
func_6008 = relay.Function([], output)
mod['func_6008'] = func_6008
mod = relay.transform.InferType()(mod)
mutated_mod['func_6008'] = func_6008
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6008_call = mutated_mod.get_global_var('func_6008')
call_6009 = func_6008_call()
output = call_6009
func_6010 = relay.Function([], output)
mutated_mod['func_6010'] = func_6010
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2745_call = mod.get_global_var('func_2745')
func_2747_call = mutated_mod.get_global_var('func_2747')
call_6011 = relay.TupleGetItem(func_2745_call(), 2)
call_6012 = relay.TupleGetItem(func_2747_call(), 2)
output = call_6011
output2 = call_6012
func_6017 = relay.Function([], output)
mod['func_6017'] = func_6017
mod = relay.transform.InferType()(mod)
mutated_mod['func_6017'] = func_6017
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6017_call = mutated_mod.get_global_var('func_6017')
call_6018 = func_6017_call()
output = call_6018
func_6019 = relay.Function([], output)
mutated_mod['func_6019'] = func_6019
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2745_call = mod.get_global_var('func_2745')
func_2747_call = mutated_mod.get_global_var('func_2747')
call_6033 = relay.TupleGetItem(func_2745_call(), 2)
call_6034 = relay.TupleGetItem(func_2747_call(), 2)
func_521_call = mod.get_global_var('func_521')
func_525_call = mutated_mod.get_global_var('func_525')
const_6047 = relay.const([-8,-7,-7,-4,-8,5,-10,7,-6,-4,6,-3,-5,2,-6,4,-8,-6,1,-5,7,-1,2,4,-8,10,-6,-1,-4,2,-7,-6,7,-10,-2,-9,5,-7,-10,7,-7,2,-2,6,-9,7,-5,1,-7,-4,5,7,5,-7,4,3,-10,7,-9,7,-9,3,9,10,6,2,-9,-3,4,-9,3,10,-6,-5,-7,-2,9,4,3,2,8,-3,5,-1,-4,-5,-10,-2,1,-1,2,-7,-3,8,5,-7,4,-1,-4,7,-1,-6,-9,-9,-8,9,8,-2,6,-6,10,5,-3,-4,-9,4,-5,-4,1,-3,6,10,7,-2,1,-6,-3,-4,7,3,1,9,10,-10,-5,-9,-4,-4,10,-6,7,-2,2,9,8,-7,-1,-4,-10,-1,5,7,-10,2,6,-3,-7,5,2,1,6,-8,-6,6,-5,10,-9,-1,7,-9,1,-8,-6,10,-5,-8,8,-5,-6,-10,-10,-3,9,-7,7,-1,-5,-7,-10,-1,-7,-7,4,-1,5,-3,4,-5,10,-9,-8,-3,9,-8,-6,-7,5,-8,-6,-1,-10,9,10,9,7,-7,10,2,2,2,6,-1,-3,-1,-7,1,9,-3,5,-1,10,9,-9,-1,8,9,3,6,8,-3,4,-6,6,-3,1,-3,-3,-3,3,1,7,7,1,-4,-5,-6,4,1,1,-1,10,-5,6,5,-4,-1,10,1,-3,8,5,-6,-8,-9,3,-3,-3,9,-8,7,5,-3,7,-4,-2,-8,-8,5,3,7,5,-2,10,-6,-8,-10,-2,-5,8,9,2,6,4,-8,-9,-5,-4,-3,-8,3,-3,-8,6,3,-3,-6,10,6,5,-8,-8,-9,2,9,2,-6,6,9,7,8,4,4,-7,-5,2,-9,8,5,1,-10,7,-7,9,-5,-7,6,-6,-5,-9,-7,4,3,3,2,3,6,-7,1,10,4,-10,1,1,8,6,2,1,-4,5,-10,-7,8,-9,9,6,7,4,-1,3,6,5,9,-5,-10,-8,-9,-7,6,6,7,1,-8,-1,-9,-8,-4,-4,9,-6,10,-9,9,-5,-4,-2,-3,-5,5,1,2,2,-2,-9,-4,10,-10,-2,-7,-4,8,-9,7,3,2,10,1,10,-6,4,5,-3,-5,4,2,2,-3,10,-7,-2,6,10,1,3,-8,-9,-3,10,9,-3,-1,8,7,4,10,-10,-9,6,-10,-9,-7,3,-1,1,6,-1,-8,3,-9,-7,4,-7,-10,2,1,-10,2,-10,6,-4,-3,3,4,-5,4,3,-1,-10,-3,-3,-8,5,-6,-2,4,9,9,-9,8,7,7,-2,10,1,6,2,-7,-3,-1,7,1,5,8,4,-9,9,-2,-4,3,-8,9,5,6,-9,3,4,-2,5,-2,-7,3,-7,-5,7,-8,8,-6,3,9,1,-10,9,4,3,4,-7,5,9,-6,-9,3,2,-8,-1,9,-2,-7,-2,-2,6,-6,-2,8,-3,10,-7,-9,10,3,6,-3,10,7,8,-10,7,9,7,3,-2,-3,-5,1,10,7,8,2,10,2,3,6,8,-1,5,-6,-6,9,1,-7,3,-5,-5,-9,-10,-5,-2,5,6,-4,2,9,1,1,7,-3,3,-9,8,-5,8,-1,3,-10,-4,2,-8,-7,-9,1,6,4,3,-2,-3,9,-9,4,10,10,10,-1,-3,7,7,-5,3,6,5,7,5,9,-8,-7,-7,-2,1,5,-4,-5,2,5,1,3,9,4,-8,9,6,-6,-3,9,-4,7,1,-10,-1,-10,6,10,5,-9,-9,-1,-4,-9,5,-2,-4,-8,10,10,3,-8,5,-6,4,-5,4,9,3,7,-5,9,-8,6,7,1,-8,-10,-7,-5,-2,5,8,-5,1,9,1,-9,8,-6,3,-6,-6,-8,-3,-3,5,2,-1,4,-9,10,-2,-8,6,5,1,2,8,-10,3,7,-3,-9,5,8,6,-5,-7,-9,5,2,-3,-3,2,-3,9,3,10,6,-7,1,-2,-4,-7,2,6,10,-8,-2,6,-7,7,7,-2,-5,5,2,2,8,10,-3,-6,8,8,8,7,-9,3,-2,-8,6,2,-3,-6,6,-3,-2,4,4,-10,-5,8,-9,-1,8,7,3,1,-4,6,-3,-10,7,5,-5,-4,9,-6,2,3,-7,3,-10,5,-3,7,-8,-3,1,6,10,-10,-9,1,-4,-1,-5,-10,-9,2,-3,-8,-5,6,8,4,2,-10,10,2,8,-4,8,-1,-8,6,1,2,6,4,2,3,1,4,-7,-7,2,7,7,4,10,-5,-8,8,7,-10,-9,-2,8,-4,-4,9,4,5,-5,-7,1,-7,10,-4,7,-3,-9,-7,-1,-4,-3,1,3,9,5,5,7,-6,7,-4,-6,-1,4,-3,-10,-1,4,-10,-10,-6,-4,-2,3,10,7,-4,-10,7,-4,10,9,-5,-5,-9,2,1,-6,-9,-10,9,-10,2,10,6,2,-8,-9,-4,-5,-1,-10,-7,5,5,4,5,-1,-5,-6,6,9,9,-4,4,9,10,-6,-6,-2,6,-9,9,-8,2,7,10,-2,6,5,7,5,-3,-4,-4,2,-2,1,-2,8,-10,1,-3,-2,-1,2,9,7,8,1,-10,2,-5,-3,-1,-2,-8,-3,-8,-3,-10,-6,2,-10,-7,-2,7,10,8,-10,6,10,-7,-6,-7,-3,-4,9,4,-6,-2,9,4,-3,3,-1,-5,3,-5,-6,-8,1,-10,5,10,5,2,3,-1,8,8,-3,2,9,-4,10,-4,3,-1,-7,10,5,6,-7,2,3,9,-7,1,-10,10,9,1,9,-10,5,8,3,-5,5,8,-9,5,9], dtype = "int32")#candidate|6047|(1080,)|const|int32
call_6046 = relay.TupleGetItem(func_521_call(relay.reshape(const_6047.astype('int32'), [10, 12, 9]), relay.reshape(const_6047.astype('int32'), [10, 12, 9]), ), 0)
call_6048 = relay.TupleGetItem(func_525_call(relay.reshape(const_6047.astype('int32'), [10, 12, 9]), relay.reshape(const_6047.astype('int32'), [10, 12, 9]), ), 0)
output = relay.Tuple([call_6033,call_6046,const_6047,])
output2 = relay.Tuple([call_6034,call_6048,const_6047,])
func_6054 = relay.Function([], output)
mod['func_6054'] = func_6054
mod = relay.transform.InferType()(mod)
mutated_mod['func_6054'] = func_6054
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6054_call = mutated_mod.get_global_var('func_6054')
call_6055 = func_6054_call()
output = call_6055
func_6056 = relay.Function([], output)
mutated_mod['func_6056'] = func_6056
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5321_call = mod.get_global_var('func_5321')
func_5323_call = mutated_mod.get_global_var('func_5323')
call_6066 = relay.TupleGetItem(func_5321_call(), 0)
call_6067 = relay.TupleGetItem(func_5323_call(), 0)
output = call_6066
output2 = call_6067
func_6070 = relay.Function([], output)
mod['func_6070'] = func_6070
mod = relay.transform.InferType()(mod)
mutated_mod['func_6070'] = func_6070
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6070_call = mutated_mod.get_global_var('func_6070')
call_6071 = func_6070_call()
output = call_6071
func_6072 = relay.Function([], output)
mutated_mod['func_6072'] = func_6072
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5729_call = mod.get_global_var('func_5729')
func_5731_call = mutated_mod.get_global_var('func_5731')
call_6102 = relay.TupleGetItem(func_5729_call(), 0)
call_6103 = relay.TupleGetItem(func_5731_call(), 0)
func_5094_call = mod.get_global_var('func_5094')
func_5097_call = mutated_mod.get_global_var('func_5097')
var_6105 = relay.var("var_6105", dtype = "bool", shape = (550,))#candidate|6105|(550,)|var|bool
call_6104 = relay.TupleGetItem(func_5094_call(relay.reshape(var_6105.astype('bool'), [10, 5, 11])), 0)
call_6106 = relay.TupleGetItem(func_5097_call(relay.reshape(var_6105.astype('bool'), [10, 5, 11])), 0)
output = relay.Tuple([call_6102,call_6104,var_6105,])
output2 = relay.Tuple([call_6103,call_6106,var_6105,])
func_6107 = relay.Function([var_6105,], output)
mod['func_6107'] = func_6107
mod = relay.transform.InferType()(mod)
var_6108 = relay.var("var_6108", dtype = "bool", shape = (550,))#candidate|6108|(550,)|var|bool
output = func_6107(var_6108)
func_6109 = relay.Function([var_6108], output)
mutated_mod['func_6109'] = func_6109
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3948_call = mod.get_global_var('func_3948')
func_3950_call = mutated_mod.get_global_var('func_3950')
call_6137 = relay.TupleGetItem(func_3948_call(), 0)
call_6138 = relay.TupleGetItem(func_3950_call(), 0)
output = call_6137
output2 = call_6138
func_6141 = relay.Function([], output)
mod['func_6141'] = func_6141
mod = relay.transform.InferType()(mod)
mutated_mod['func_6141'] = func_6141
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6141_call = mutated_mod.get_global_var('func_6141')
call_6142 = func_6141_call()
output = call_6142
func_6143 = relay.Function([], output)
mutated_mod['func_6143'] = func_6143
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6008_call = mod.get_global_var('func_6008')
func_6010_call = mutated_mod.get_global_var('func_6010')
call_6222 = relay.TupleGetItem(func_6008_call(), 0)
call_6223 = relay.TupleGetItem(func_6010_call(), 0)
func_1842_call = mod.get_global_var('func_1842')
func_1845_call = mutated_mod.get_global_var('func_1845')
const_6231 = relay.const([8.782438,-0.218283,1.589734,-2.522505,8.792957,9.529106,-8.695680,7.681800,5.148140,8.952529,-5.679933,2.295368,-6.421430,8.231690,2.415378,-0.672317,3.254350,-4.411736,-7.920574,-3.686663,-3.838312,6.713132,9.688362,-3.561706,2.421229], dtype = "float32")#candidate|6231|(25,)|const|float32
var_6232 = relay.var("var_6232", dtype = "int32", shape = (585, 1))#candidate|6232|(585, 1)|var|int32
call_6230 = relay.TupleGetItem(func_1842_call(relay.reshape(const_6231.astype('float32'), [5, 5, 1]), relay.reshape(var_6232.astype('int32'), [65, 9]), ), 3)
call_6233 = relay.TupleGetItem(func_1845_call(relay.reshape(const_6231.astype('float32'), [5, 5, 1]), relay.reshape(var_6232.astype('int32'), [65, 9]), ), 3)
output = relay.Tuple([call_6222,call_6230,const_6231,var_6232,])
output2 = relay.Tuple([call_6223,call_6233,const_6231,var_6232,])
func_6235 = relay.Function([var_6232,], output)
mod['func_6235'] = func_6235
mod = relay.transform.InferType()(mod)
var_6236 = relay.var("var_6236", dtype = "int32", shape = (585, 1))#candidate|6236|(585, 1)|var|int32
output = func_6235(var_6236)
func_6237 = relay.Function([var_6236], output)
mutated_mod['func_6237'] = func_6237
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5020_call = mod.get_global_var('func_5020')
func_5021_call = mutated_mod.get_global_var('func_5021')
call_6369 = relay.TupleGetItem(func_5020_call(), 0)
call_6370 = relay.TupleGetItem(func_5021_call(), 0)
const_6372 = relay.const([[[-6.526911,-3.324602,-9.966463],[-2.966947,8.615221,-3.763323],[-2.507665,1.844244,-6.304903],[8.560025,1.231176,8.081074],[8.236263,-9.014915,-0.465135],[9.471306,2.403644,2.302025],[-9.784706,4.044544,4.512558]],[[7.322335,-1.991455,-6.120642],[-3.783677,-3.171569,-8.992062],[8.385363,-1.669108,2.467935],[6.566869,6.740985,-9.796942],[-5.763547,-9.750808,1.269789],[6.421715,4.831140,5.640576],[5.736802,7.286332,7.498514]],[[4.661839,-4.268907,1.634920],[6.695787,-6.352743,8.449232],[1.178771,0.189198,4.142900],[8.020408,3.797066,3.889488],[-5.866637,0.408512,-1.025387],[8.377658,7.954482,8.241382],[1.514137,8.190676,6.296282]],[[8.932236,6.109455,-9.268500],[7.184570,5.210311,-7.978675],[4.038711,9.302540,1.025963],[-0.550838,-2.638078,-1.377524],[-3.803746,-0.592663,6.785942],[-1.112104,-5.263267,5.610347],[7.259049,-3.756383,0.431353]],[[0.888115,-8.834238,1.070937],[-9.623295,-1.977353,3.891713],[0.122897,7.618495,-6.102270],[1.218791,0.578351,-7.692254],[4.266171,1.026159,-5.569756],[-6.404379,4.156594,7.145628],[-5.766679,-5.308732,-5.795786]],[[8.095991,6.607574,8.434236],[3.767907,3.996494,-5.340329],[7.399259,9.836619,5.365423],[-1.502829,2.685101,-9.274551],[-0.186302,-7.973008,-7.862405],[6.200842,-7.258167,-3.686594],[-2.228229,0.685870,-5.995625]],[[6.441238,2.652627,-4.842274],[-7.614598,-5.982847,-2.166369],[-1.071765,-4.038028,-9.807872],[3.800374,-5.322320,-8.019390],[2.997369,9.430380,-2.748384],[-7.770045,1.404389,-2.059912],[6.407885,-6.446404,-7.554704]],[[-8.414900,-1.240725,-8.904202],[4.923192,-6.516414,3.470027],[-0.300695,3.423755,9.005822],[0.676101,4.293815,1.380036],[-2.529456,-3.627005,0.134777],[-8.992604,-8.677530,-8.949530],[6.833839,-8.342145,9.163456]],[[-6.787721,6.115264,0.226754],[-9.918594,-2.358025,-6.457987],[4.967079,-1.441037,2.958308],[1.566319,-9.231841,-7.157621],[-5.208856,-1.804975,3.832532],[-4.197525,-2.162933,1.006446],[8.074905,-9.324891,1.158705]],[[9.625188,-2.629914,8.714878],[0.326945,1.231872,-4.163750],[-9.762582,6.437810,0.447243],[9.322856,-5.685020,4.688232],[9.432682,6.520376,6.879509],[-7.537126,-5.864103,-4.582628],[4.410760,-2.400679,1.798926]],[[-7.387364,0.830053,3.524782],[5.395581,-6.076499,-6.576291],[4.221202,-8.063904,7.714853],[-7.268153,5.165932,-1.430032],[-3.390429,3.462834,-9.272635],[2.701945,7.531221,-8.713850],[5.278615,3.579296,-2.028274]],[[-2.591171,4.480919,-8.606017],[-2.481602,6.235624,8.262487],[0.651096,8.462841,-5.870070],[-9.550480,-1.673300,-8.708857],[-9.903672,-5.359452,-8.990222],[3.158306,4.159554,7.827790],[3.408041,-8.099744,7.652455]]], dtype = "float64")#candidate|6372|(12, 7, 3)|const|float64
bop_6373 = relay.floor_divide(call_6369.astype('float64'), relay.reshape(const_6372.astype('float64'), relay.shape_of(call_6369))) # shape=(12, 7, 3)
bop_6376 = relay.floor_divide(call_6370.astype('float64'), relay.reshape(const_6372.astype('float64'), relay.shape_of(call_6370))) # shape=(12, 7, 3)
uop_6382 = relay.log10(bop_6373.astype('float32')) # shape=(12, 7, 3)
uop_6384 = relay.log10(bop_6376.astype('float32')) # shape=(12, 7, 3)
output = relay.Tuple([uop_6382,])
output2 = relay.Tuple([uop_6384,])
func_6388 = relay.Function([], output)
mod['func_6388'] = func_6388
mod = relay.transform.InferType()(mod)
output = func_6388()
func_6389 = relay.Function([], output)
mutated_mod['func_6389'] = func_6389
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6398 = relay.var("var_6398", dtype = "uint64", shape = (6, 8, 12))#candidate|6398|(6, 8, 12)|var|uint64
const_6399 = relay.const([[[-1,4,7,-6,7,1,6,-5,10,-7,2,-5],[6,7,-6,5,4,-9,-7,8,-6,1,4,2],[-9,-5,10,9,3,6,-5,-5,2,-9,-10,5],[8,7,4,-8,-8,-6,-4,4,1,5,3,-6],[-7,-4,-2,2,-4,1,-10,-9,-3,7,-9,3],[3,9,-1,8,10,4,10,-3,6,-10,-5,5],[5,-5,2,-6,9,10,-10,7,-2,-5,10,-7],[-6,-5,8,-10,1,-9,5,-10,3,-4,10,-5]],[[6,-5,10,3,8,6,5,9,1,-10,3,1],[-10,9,10,-2,-5,-1,8,-10,9,10,-2,-1],[-7,1,3,-6,-9,-4,-10,-3,5,2,7,8],[10,1,9,6,5,7,-1,2,9,-9,6,4],[8,-3,-7,-3,2,-8,-8,-8,4,-4,8,5],[3,6,7,-1,5,-2,-6,9,10,9,-4,2],[2,-2,-3,-8,10,6,-4,-2,2,1,-8,-7],[10,6,-5,-3,-4,7,-4,6,7,-1,10,9]],[[-7,9,1,-2,4,-6,-6,-5,-5,-10,7,3],[7,-4,9,-8,-2,-10,4,5,-9,8,9,8],[6,-5,3,7,-1,-6,4,7,-2,10,-10,-6],[5,6,7,-10,-3,8,-10,-5,-7,5,4,9],[8,2,6,9,-1,-5,-3,5,-9,-2,-1,-4],[-10,2,-9,-10,10,-7,1,8,-4,-2,10,-5],[-2,10,7,-2,10,-1,-2,-10,-6,-3,-6,8],[-5,-9,8,6,2,-3,-9,-6,-8,-10,9,-7]],[[8,9,-10,-3,7,-2,5,-7,5,6,5,-4],[8,-5,5,-1,9,-6,6,6,9,-10,-7,3],[-7,9,-2,4,9,6,-1,-9,-8,-9,-4,8],[2,-10,-5,4,-4,3,-6,-6,8,2,-1,-10],[-8,3,-4,5,-1,9,-10,7,6,9,-8,-6],[7,4,1,-6,2,8,10,-6,-10,6,-7,-3],[-4,-4,5,9,-10,-1,6,9,-7,-8,2,-8],[10,-4,9,-2,8,-7,8,9,8,8,-9,6]],[[3,3,-9,-2,8,-7,-1,-2,-5,-4,-5,-10],[4,1,-4,-9,2,-6,4,-1,2,-1,-9,4],[2,-6,2,3,3,-9,-10,7,10,-2,-1,-1],[3,6,5,-5,-7,-5,8,-4,10,9,2,2],[9,-10,-1,3,-1,7,8,-2,-4,5,4,4],[-5,-6,10,10,-5,2,-1,9,6,9,-7,-1],[9,4,7,9,-10,-8,-4,4,1,3,-2,6],[-8,2,-6,-6,-10,8,8,-1,2,-1,-10,-4]],[[-10,4,1,10,5,-5,-6,3,3,5,-9,-2],[-8,7,-9,-10,10,-10,4,-10,-3,-7,6,-5],[3,10,6,5,6,-3,-5,-3,7,-5,5,-9],[10,7,9,-7,-4,6,-1,-6,-3,2,-10,-4],[-8,7,4,-10,-3,4,-9,-2,-10,-4,9,9],[-7,-1,-4,3,4,3,-5,4,-2,-7,1,-5],[-2,-5,-7,5,5,-10,-9,-1,2,-2,-1,-4],[-7,5,4,1,10,-7,8,10,7,4,-2,10]]], dtype = "uint64")#candidate|6399|(6, 8, 12)|const|uint64
bop_6400 = relay.logical_xor(var_6398.astype('uint64'), relay.reshape(const_6399.astype('uint64'), relay.shape_of(var_6398))) # shape=(6, 8, 12)
uop_6411 = relay.sqrt(var_6398.astype('float32')) # shape=(6, 8, 12)
output = relay.Tuple([bop_6400,uop_6411,])
output2 = relay.Tuple([bop_6400,uop_6411,])
func_6418 = relay.Function([var_6398,], output)
mod['func_6418'] = func_6418
mod = relay.transform.InferType()(mod)
var_6419 = relay.var("var_6419", dtype = "uint64", shape = (6, 8, 12))#candidate|6419|(6, 8, 12)|var|uint64
output = func_6418(var_6419)
func_6420 = relay.Function([var_6419], output)
mutated_mod['func_6420'] = func_6420
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2423_call = mod.get_global_var('func_2423')
func_2425_call = mutated_mod.get_global_var('func_2425')
call_6427 = relay.TupleGetItem(func_2423_call(), 1)
call_6428 = relay.TupleGetItem(func_2425_call(), 1)
output = relay.Tuple([call_6427,])
output2 = relay.Tuple([call_6428,])
func_6449 = relay.Function([], output)
mod['func_6449'] = func_6449
mod = relay.transform.InferType()(mod)
mutated_mod['func_6449'] = func_6449
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6449_call = mutated_mod.get_global_var('func_6449')
call_6450 = func_6449_call()
output = call_6450
func_6451 = relay.Function([], output)
mutated_mod['func_6451'] = func_6451
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4143_call = mod.get_global_var('func_4143')
func_4145_call = mutated_mod.get_global_var('func_4145')
call_6494 = func_4143_call()
call_6495 = func_4143_call()
output = call_6494
output2 = call_6495
func_6504 = relay.Function([], output)
mod['func_6504'] = func_6504
mod = relay.transform.InferType()(mod)
output = func_6504()
func_6505 = relay.Function([], output)
mutated_mod['func_6505'] = func_6505
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5895_call = mod.get_global_var('func_5895')
func_5897_call = mutated_mod.get_global_var('func_5897')
call_6506 = relay.TupleGetItem(func_5895_call(), 0)
call_6507 = relay.TupleGetItem(func_5897_call(), 0)
output = relay.Tuple([call_6506,])
output2 = relay.Tuple([call_6507,])
func_6508 = relay.Function([], output)
mod['func_6508'] = func_6508
mod = relay.transform.InferType()(mod)
mutated_mod['func_6508'] = func_6508
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6508_call = mutated_mod.get_global_var('func_6508')
call_6509 = func_6508_call()
output = call_6509
func_6510 = relay.Function([], output)
mutated_mod['func_6510'] = func_6510
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4020_call = mod.get_global_var('func_4020')
func_4021_call = mutated_mod.get_global_var('func_4021')
call_6533 = relay.TupleGetItem(func_4020_call(), 0)
call_6534 = relay.TupleGetItem(func_4021_call(), 0)
output = relay.Tuple([call_6533,])
output2 = relay.Tuple([call_6534,])
func_6540 = relay.Function([], output)
mod['func_6540'] = func_6540
mod = relay.transform.InferType()(mod)
mutated_mod['func_6540'] = func_6540
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6540_call = mutated_mod.get_global_var('func_6540')
call_6541 = func_6540_call()
output = call_6541
func_6542 = relay.Function([], output)
mutated_mod['func_6542'] = func_6542
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3065_call = mod.get_global_var('func_3065')
func_3067_call = mutated_mod.get_global_var('func_3067')
call_6657 = relay.TupleGetItem(func_3065_call(), 0)
call_6658 = relay.TupleGetItem(func_3067_call(), 0)
func_5814_call = mod.get_global_var('func_5814')
func_5815_call = mutated_mod.get_global_var('func_5815')
call_6665 = relay.TupleGetItem(func_5814_call(), 2)
call_6666 = relay.TupleGetItem(func_5815_call(), 2)
func_2586_call = mod.get_global_var('func_2586')
func_2587_call = mutated_mod.get_global_var('func_2587')
call_6675 = relay.TupleGetItem(func_2586_call(), 0)
call_6676 = relay.TupleGetItem(func_2587_call(), 0)
func_649_call = mod.get_global_var('func_649')
func_653_call = mutated_mod.get_global_var('func_653')
const_6687 = relay.const([5.944363,2.580664,5.987889,6.621495,6.070118,5.122820,-2.254083,-9.669520,-0.255293,-7.982784,-3.288952,4.296155,-9.466316,-7.564818,6.649409,1.997113,0.223197,3.994088,5.927488,1.759545,-7.131093,-9.826795,8.126437,9.454901,2.523259,2.682209,6.390852,3.884209,7.918289,1.753482,4.689862,5.073132,5.964060,2.747194,-2.535434,0.002594,5.056530,1.449780,3.317966,-6.168258,-6.288835,-2.321993,6.930016,7.155611,8.857488,7.906492,3.184105,-0.166027,9.413776,-4.912979], dtype = "float64")#candidate|6687|(50,)|const|float64
var_6688 = relay.var("var_6688", dtype = "float32", shape = (1260,))#candidate|6688|(1260,)|var|float32
call_6686 = relay.TupleGetItem(func_649_call(relay.reshape(const_6687.astype('float64'), [5, 1, 10]), relay.reshape(var_6688.astype('float32'), [1260,]), ), 2)
call_6689 = relay.TupleGetItem(func_653_call(relay.reshape(const_6687.astype('float64'), [5, 1, 10]), relay.reshape(var_6688.astype('float32'), [1260,]), ), 2)
output = relay.Tuple([call_6657,call_6665,call_6675,call_6686,const_6687,var_6688,])
output2 = relay.Tuple([call_6658,call_6666,call_6676,call_6689,const_6687,var_6688,])
func_6699 = relay.Function([var_6688,], output)
mod['func_6699'] = func_6699
mod = relay.transform.InferType()(mod)
var_6700 = relay.var("var_6700", dtype = "float32", shape = (1260,))#candidate|6700|(1260,)|var|float32
output = func_6699(var_6700)
func_6701 = relay.Function([var_6700], output)
mutated_mod['func_6701'] = func_6701
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3665_call = mod.get_global_var('func_3665')
func_3666_call = mutated_mod.get_global_var('func_3666')
call_6706 = relay.TupleGetItem(func_3665_call(), 1)
call_6707 = relay.TupleGetItem(func_3666_call(), 1)
output = relay.Tuple([call_6706,])
output2 = relay.Tuple([call_6707,])
func_6710 = relay.Function([], output)
mod['func_6710'] = func_6710
mod = relay.transform.InferType()(mod)
mutated_mod['func_6710'] = func_6710
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6710_call = mutated_mod.get_global_var('func_6710')
call_6711 = func_6710_call()
output = call_6711
func_6712 = relay.Function([], output)
mutated_mod['func_6712'] = func_6712
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6724 = relay.var("var_6724", dtype = "int64", shape = ())#candidate|6724|()|var|int64
var_6725 = relay.var("var_6725", dtype = "int64", shape = (5, 4, 3))#candidate|6725|(5, 4, 3)|var|int64
bop_6726 = relay.greater(var_6724.astype('bool'), var_6725.astype('bool')) # shape=(5, 4, 3)
bop_6729 = relay.minimum(var_6724.astype('uint64'), var_6725.astype('uint64')) # shape=(5, 4, 3)
output = relay.Tuple([bop_6726,bop_6729,])
output2 = relay.Tuple([bop_6726,bop_6729,])
func_6732 = relay.Function([var_6724,var_6725,], output)
mod['func_6732'] = func_6732
mod = relay.transform.InferType()(mod)
var_6733 = relay.var("var_6733", dtype = "int64", shape = ())#candidate|6733|()|var|int64
var_6734 = relay.var("var_6734", dtype = "int64", shape = (5, 4, 3))#candidate|6734|(5, 4, 3)|var|int64
output = func_6732(var_6733,var_6734,)
func_6735 = relay.Function([var_6733,var_6734,], output)
mutated_mod['func_6735'] = func_6735
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6710_call = mod.get_global_var('func_6710')
func_6712_call = mutated_mod.get_global_var('func_6712')
call_6748 = relay.TupleGetItem(func_6710_call(), 0)
call_6749 = relay.TupleGetItem(func_6712_call(), 0)
func_4365_call = mod.get_global_var('func_4365')
func_4368_call = mutated_mod.get_global_var('func_4368')
var_6755 = relay.var("var_6755", dtype = "float64", shape = (324,))#candidate|6755|(324,)|var|float64
call_6754 = relay.TupleGetItem(func_4365_call(relay.reshape(var_6755.astype('float64'), [9, 4, 9]), relay.reshape(call_6748.astype('int32'), [585,]), ), 0)
call_6756 = relay.TupleGetItem(func_4368_call(relay.reshape(var_6755.astype('float64'), [9, 4, 9]), relay.reshape(call_6748.astype('int32'), [585,]), ), 0)
func_5302_call = mod.get_global_var('func_5302')
func_5303_call = mutated_mod.get_global_var('func_5303')
call_6759 = relay.TupleGetItem(func_5302_call(), 0)
call_6760 = relay.TupleGetItem(func_5303_call(), 0)
output = relay.Tuple([call_6748,call_6754,var_6755,call_6759,])
output2 = relay.Tuple([call_6749,call_6756,var_6755,call_6760,])
func_6764 = relay.Function([var_6755,], output)
mod['func_6764'] = func_6764
mod = relay.transform.InferType()(mod)
mutated_mod['func_6764'] = func_6764
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6765 = relay.var("var_6765", dtype = "float64", shape = (324,))#candidate|6765|(324,)|var|float64
func_6764_call = mutated_mod.get_global_var('func_6764')
call_6766 = func_6764_call(var_6765)
output = call_6766
func_6767 = relay.Function([var_6765], output)
mutated_mod['func_6767'] = func_6767
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4295_call = mod.get_global_var('func_4295')
func_4297_call = mutated_mod.get_global_var('func_4297')
call_6781 = relay.TupleGetItem(func_4295_call(), 0)
call_6782 = relay.TupleGetItem(func_4297_call(), 0)
func_5094_call = mod.get_global_var('func_5094')
func_5097_call = mutated_mod.get_global_var('func_5097')
const_6800 = relay.const([[True,True,True,True,False,False,False,True,False,True,True,True,False,False,False,True,False,True,False,False,False,True,False,False,False,False,True,False,False,False,False,True,True,True,False,True,True,True,False,True,False,True,True,False,True,True,True,False,False,False,False,True,True,False,True,False,False,False,False,False,False,False,True,True,True,False,False,True,True,False,False,True,False,True,False,True,False,True,True,True,True,False,False,True,False,True,True,True,False,True,True,False,False,True,False,True,True,False,False,False,True,True,True,True,False,True,False,True,True,False,False,False,False,False,True,False,True,False,True,True,False,True,False,False,False,False,True,True,False,False,True,True,True,False,False,True,False,True,False,True,True,False,True,True,False,True,True,False,True,True,True,True,False,True,True,False,True,True,True,False,True,False,True,False,False,False,True,False,True,False,True,False,False,True,True,True,False,False,True,True,True,False,True,True,False,False,True,True,True,False,True,False,False,True,False,True,True,False,True,False,False,True,False,False,False,True,True,False,True,False,True,True,True,False,False,True,True,False,False,False,False,False,True,True,True,True,False,False,True,True,False,True,False,False,False,False,True,True,False,False,False,False,True,True,False,False,False,True,False,False,False,False,False,True,True,True,False,True,True,False,True,True,True,True,True,True,False,False,True,False,True,True,False,False,False,True,False,False,False,False,False,False,True,True,True,False,False,False,False,False,False,True,True,True,False,True,True,False,True,False,True,False,True,True,True,True,False,True,True,True,False,True,True,True,False,True,True,True,True,True,True,True,False,False,False,True,True,True,True,True,True,False,True,False,False,False,True,False,False,False,True,False,False,True,True,False,False,False,True,True,False,False,False,False,True,False,True,False,False,True,True,True,True,True,False,True,True,True,False,True,False,True,True,False,False,False,False,False,True,False,True,True,False,True,True,True,False,True,False,False,False,True,True,True,False,True,True,False,True,True,True,True,False,True,True,True,True,True,True,False,True,True,True,False,False,True,True,False,False,True,False,False,True,False,True,True,True,False,True,False,True,True,True,False,False,False,True,True,False,False,False,True,True,True,True,False,False,True,False,False,False,True,False,True,True,False,True,False,False,False,True,False,True,False,False,True,True,True,True,True,True,True,False,True,False,False,True,True,True,True,True,True,False,False,True,True,False,False,False,False,False,True,False,False,True,False,True,False,True,False,True,True,True,False,False,False,False,True,True,True,False,False,False,True,False,True,False,False,True,False,True,False,True,True,False,True,False,True,True,True,False,True,False,True,True,False,True,True,True,False,False,False,True,False,True,True,False,True,False,True]], dtype = "bool")#candidate|6800|(1, 550)|const|bool
call_6799 = relay.TupleGetItem(func_5094_call(relay.reshape(const_6800.astype('bool'), [10, 5, 11])), 0)
call_6801 = relay.TupleGetItem(func_5097_call(relay.reshape(const_6800.astype('bool'), [10, 5, 11])), 0)
func_3065_call = mod.get_global_var('func_3065')
func_3067_call = mutated_mod.get_global_var('func_3067')
call_6802 = relay.TupleGetItem(func_3065_call(), 1)
call_6803 = relay.TupleGetItem(func_3067_call(), 1)
func_6449_call = mod.get_global_var('func_6449')
func_6451_call = mutated_mod.get_global_var('func_6451')
call_6811 = relay.TupleGetItem(func_6449_call(), 0)
call_6812 = relay.TupleGetItem(func_6451_call(), 0)
uop_6822 = relay.cosh(call_6799.astype('float32')) # shape=(10, 5, 11)
uop_6824 = relay.cosh(call_6801.astype('float32')) # shape=(10, 5, 11)
func_6388_call = mod.get_global_var('func_6388')
func_6389_call = mutated_mod.get_global_var('func_6389')
call_6832 = relay.TupleGetItem(func_6388_call(), 0)
call_6833 = relay.TupleGetItem(func_6389_call(), 0)
output = relay.Tuple([call_6781,const_6800,call_6802,call_6811,uop_6822,call_6832,])
output2 = relay.Tuple([call_6782,const_6800,call_6803,call_6812,uop_6824,call_6833,])
func_6849 = relay.Function([], output)
mod['func_6849'] = func_6849
mod = relay.transform.InferType()(mod)
output = func_6849()
func_6850 = relay.Function([], output)
mutated_mod['func_6850'] = func_6850
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6070_call = mod.get_global_var('func_6070')
func_6072_call = mutated_mod.get_global_var('func_6072')
call_6874 = func_6070_call()
call_6875 = func_6070_call()
uop_6882 = relay.erf(call_6874.astype('float64')) # shape=(324,)
uop_6884 = relay.erf(call_6875.astype('float64')) # shape=(324,)
func_3905_call = mod.get_global_var('func_3905')
func_3907_call = mutated_mod.get_global_var('func_3907')
call_6887 = func_3905_call(relay.reshape(call_6874.astype('float64'), [324,]))
call_6888 = func_3905_call(relay.reshape(call_6874.astype('float64'), [324,]))
output = relay.Tuple([uop_6882,call_6887,])
output2 = relay.Tuple([uop_6884,call_6888,])
func_6900 = relay.Function([], output)
mod['func_6900'] = func_6900
mod = relay.transform.InferType()(mod)
output = func_6900()
func_6901 = relay.Function([], output)
mutated_mod['func_6901'] = func_6901
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5814_call = mod.get_global_var('func_5814')
func_5815_call = mutated_mod.get_global_var('func_5815')
call_6919 = relay.TupleGetItem(func_5814_call(), 3)
call_6920 = relay.TupleGetItem(func_5815_call(), 3)
var_6929 = relay.var("var_6929", dtype = "float32", shape = (25,))#candidate|6929|(25,)|var|float32
bop_6930 = relay.greater(call_6919.astype('bool'), relay.reshape(var_6929.astype('bool'), relay.shape_of(call_6919))) # shape=(25,)
bop_6933 = relay.greater(call_6920.astype('bool'), relay.reshape(var_6929.astype('bool'), relay.shape_of(call_6920))) # shape=(25,)
output = bop_6930
output2 = bop_6933
func_6934 = relay.Function([var_6929,], output)
mod['func_6934'] = func_6934
mod = relay.transform.InferType()(mod)
var_6935 = relay.var("var_6935", dtype = "float32", shape = (25,))#candidate|6935|(25,)|var|float32
output = func_6934(var_6935)
func_6936 = relay.Function([var_6935], output)
mutated_mod['func_6936'] = func_6936
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3065_call = mod.get_global_var('func_3065')
func_3067_call = mutated_mod.get_global_var('func_3067')
call_6983 = relay.TupleGetItem(func_3065_call(), 1)
call_6984 = relay.TupleGetItem(func_3067_call(), 1)
output = relay.Tuple([call_6983,])
output2 = relay.Tuple([call_6984,])
func_6994 = relay.Function([], output)
mod['func_6994'] = func_6994
mod = relay.transform.InferType()(mod)
mutated_mod['func_6994'] = func_6994
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6994_call = mutated_mod.get_global_var('func_6994')
call_6995 = func_6994_call()
output = call_6995
func_6996 = relay.Function([], output)
mutated_mod['func_6996'] = func_6996
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2586_call = mod.get_global_var('func_2586')
func_2587_call = mutated_mod.get_global_var('func_2587')
call_7006 = relay.TupleGetItem(func_2586_call(), 0)
call_7007 = relay.TupleGetItem(func_2587_call(), 0)
func_4020_call = mod.get_global_var('func_4020')
func_4021_call = mutated_mod.get_global_var('func_4021')
call_7009 = relay.TupleGetItem(func_4020_call(), 0)
call_7010 = relay.TupleGetItem(func_4021_call(), 0)
func_5179_call = mod.get_global_var('func_5179')
func_5182_call = mutated_mod.get_global_var('func_5182')
var_7017 = relay.var("var_7017", dtype = "float32", shape = (15, 150))#candidate|7017|(15, 150)|var|float32
call_7016 = relay.TupleGetItem(func_5179_call(relay.reshape(var_7017.astype('float32'), [2250,])), 2)
call_7018 = relay.TupleGetItem(func_5182_call(relay.reshape(var_7017.astype('float32'), [2250,])), 2)
output = relay.Tuple([call_7006,call_7009,call_7016,var_7017,])
output2 = relay.Tuple([call_7007,call_7010,call_7018,var_7017,])
func_7024 = relay.Function([var_7017,], output)
mod['func_7024'] = func_7024
mod = relay.transform.InferType()(mod)
mutated_mod['func_7024'] = func_7024
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7025 = relay.var("var_7025", dtype = "float32", shape = (15, 150))#candidate|7025|(15, 150)|var|float32
func_7024_call = mutated_mod.get_global_var('func_7024')
call_7026 = func_7024_call(var_7025)
output = call_7026
func_7027 = relay.Function([var_7025], output)
mutated_mod['func_7027'] = func_7027
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7069 = relay.var("var_7069", dtype = "float64", shape = (15, 6, 1))#candidate|7069|(15, 6, 1)|var|float64
uop_7070 = relay.rsqrt(var_7069.astype('float64')) # shape=(15, 6, 1)
output = uop_7070
output2 = uop_7070
func_7081 = relay.Function([var_7069,], output)
mod['func_7081'] = func_7081
mod = relay.transform.InferType()(mod)
var_7082 = relay.var("var_7082", dtype = "float64", shape = (15, 6, 1))#candidate|7082|(15, 6, 1)|var|float64
output = func_7081(var_7082)
func_7083 = relay.Function([var_7082], output)
mutated_mod['func_7083'] = func_7083
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6017_call = mod.get_global_var('func_6017')
func_6019_call = mutated_mod.get_global_var('func_6019')
call_7093 = func_6017_call()
call_7094 = func_6017_call()
func_6934_call = mod.get_global_var('func_6934')
func_6936_call = mutated_mod.get_global_var('func_6936')
const_7111 = relay.const([[5.058017],[-8.986551],[6.246819],[-8.745089],[-9.711020],[6.354816],[-4.205870],[-4.220601],[-9.567106],[8.954142],[-4.670397],[-6.698377],[1.546782],[2.360488],[1.797986],[3.383536],[-3.238062],[-5.864684],[8.539396],[8.788219],[8.726998],[-9.922433],[3.764539],[3.958973],[9.404175]], dtype = "float32")#candidate|7111|(25, 1)|const|float32
call_7110 = func_6934_call(relay.reshape(const_7111.astype('float32'), [25,]))
call_7112 = func_6934_call(relay.reshape(const_7111.astype('float32'), [25,]))
output = relay.Tuple([call_7093,call_7110,const_7111,])
output2 = relay.Tuple([call_7094,call_7112,const_7111,])
func_7113 = relay.Function([], output)
mod['func_7113'] = func_7113
mod = relay.transform.InferType()(mod)
output = func_7113()
func_7114 = relay.Function([], output)
mutated_mod['func_7114'] = func_7114
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3665_call = mod.get_global_var('func_3665')
func_3666_call = mutated_mod.get_global_var('func_3666')
call_7147 = relay.TupleGetItem(func_3665_call(), 1)
call_7148 = relay.TupleGetItem(func_3666_call(), 1)
uop_7151 = relay.erf(call_7147.astype('float64')) # shape=(585, 1)
uop_7153 = relay.erf(call_7148.astype('float64')) # shape=(585, 1)
uop_7155 = relay.tan(uop_7151.astype('float32')) # shape=(585, 1)
uop_7157 = relay.tan(uop_7153.astype('float32')) # shape=(585, 1)
var_7158 = relay.var("var_7158", dtype = "float32", shape = (585, 10))#candidate|7158|(585, 10)|var|float32
bop_7159 = relay.bitwise_or(uop_7155.astype('uint8'), var_7158.astype('uint8')) # shape=(585, 10)
bop_7162 = relay.bitwise_or(uop_7157.astype('uint8'), var_7158.astype('uint8')) # shape=(585, 10)
var_7164 = relay.var("var_7164", dtype = "uint8", shape = (585, 10))#candidate|7164|(585, 10)|var|uint8
bop_7165 = relay.subtract(bop_7159.astype('int16'), relay.reshape(var_7164.astype('int16'), relay.shape_of(bop_7159))) # shape=(585, 10)
bop_7168 = relay.subtract(bop_7162.astype('int16'), relay.reshape(var_7164.astype('int16'), relay.shape_of(bop_7162))) # shape=(585, 10)
output = relay.Tuple([bop_7165,])
output2 = relay.Tuple([bop_7168,])
func_7173 = relay.Function([var_7158,var_7164,], output)
mod['func_7173'] = func_7173
mod = relay.transform.InferType()(mod)
var_7174 = relay.var("var_7174", dtype = "float32", shape = (585, 10))#candidate|7174|(585, 10)|var|float32
var_7175 = relay.var("var_7175", dtype = "uint8", shape = (585, 10))#candidate|7175|(585, 10)|var|uint8
output = func_7173(var_7174,var_7175,)
func_7176 = relay.Function([var_7174,var_7175,], output)
mutated_mod['func_7176'] = func_7176
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3843_call = mod.get_global_var('func_3843')
func_3844_call = mutated_mod.get_global_var('func_3844')
call_7202 = func_3843_call()
call_7203 = func_3843_call()
func_6449_call = mod.get_global_var('func_6449')
func_6451_call = mutated_mod.get_global_var('func_6451')
call_7206 = relay.TupleGetItem(func_6449_call(), 0)
call_7207 = relay.TupleGetItem(func_6451_call(), 0)
func_1719_call = mod.get_global_var('func_1719')
func_1721_call = mutated_mod.get_global_var('func_1721')
var_7225 = relay.var("var_7225", dtype = "float64", shape = (18,))#candidate|7225|(18,)|var|float64
call_7224 = func_1719_call(relay.reshape(var_7225.astype('float64'), [1, 6, 3]))
call_7226 = func_1719_call(relay.reshape(var_7225.astype('float64'), [1, 6, 3]))
output = relay.Tuple([call_7202,call_7206,call_7224,var_7225,])
output2 = relay.Tuple([call_7203,call_7207,call_7226,var_7225,])
func_7229 = relay.Function([var_7225,], output)
mod['func_7229'] = func_7229
mod = relay.transform.InferType()(mod)
var_7230 = relay.var("var_7230", dtype = "float64", shape = (18,))#candidate|7230|(18,)|var|float64
output = func_7229(var_7230)
func_7231 = relay.Function([var_7230], output)
mutated_mod['func_7231'] = func_7231
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3808_call = mod.get_global_var('func_3808')
func_3809_call = mutated_mod.get_global_var('func_3809')
call_7274 = func_3808_call()
call_7275 = func_3808_call()
var_7276 = relay.var("var_7276", dtype = "float64", shape = (12, 7, 3))#candidate|7276|(12, 7, 3)|var|float64
bop_7277 = relay.maximum(call_7274.astype('int16'), relay.reshape(var_7276.astype('int16'), relay.shape_of(call_7274))) # shape=(12, 7, 3)
bop_7280 = relay.maximum(call_7275.astype('int16'), relay.reshape(var_7276.astype('int16'), relay.shape_of(call_7275))) # shape=(12, 7, 3)
output = relay.Tuple([bop_7277,])
output2 = relay.Tuple([bop_7280,])
func_7289 = relay.Function([var_7276,], output)
mod['func_7289'] = func_7289
mod = relay.transform.InferType()(mod)
mutated_mod['func_7289'] = func_7289
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7290 = relay.var("var_7290", dtype = "float64", shape = (12, 7, 3))#candidate|7290|(12, 7, 3)|var|float64
func_7289_call = mutated_mod.get_global_var('func_7289')
call_7291 = func_7289_call(var_7290)
output = call_7291
func_7292 = relay.Function([var_7290], output)
mutated_mod['func_7292'] = func_7292
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7313 = relay.var("var_7313", dtype = "int16", shape = (6, 4, 11))#candidate|7313|(6, 4, 11)|var|int16
const_7314 = relay.const([[[-7,-2,9,-2,1,10,-4,-10,8,-5,7],[5,9,1,-9,3,-5,2,-4,10,8,5],[-9,-2,-10,7,-7,9,4,-3,8,-10,2],[-8,6,2,-10,-4,3,-5,-5,2,5,-9]],[[-3,1,-10,-2,-2,-1,-8,2,9,8,4],[-6,-6,-2,-2,-1,7,4,-2,2,-9,-4],[-5,7,-2,7,-8,4,3,-6,-1,10,10],[5,-2,-8,1,10,-6,-1,1,4,-3,5]],[[6,-3,-10,-5,6,-2,9,1,-10,4,-7],[-4,-5,8,-7,-3,4,-10,-8,-3,-4,-5],[3,-3,-7,8,-3,2,1,5,-1,-10,4],[-7,6,-7,5,3,9,2,4,2,4,-5]],[[-4,-2,-7,-9,-4,-3,8,-1,3,-2,2],[10,6,1,-4,5,-7,2,-9,6,9,2],[-1,-2,-6,9,-2,2,-1,-6,-1,2,7],[-3,6,8,1,5,-2,10,-5,6,10,-5]],[[-2,5,-3,-3,-4,7,-10,-5,6,6,-9],[7,-5,-3,-10,-5,9,-10,-8,1,3,-2],[-4,3,9,7,6,-3,-7,-8,-5,1,-3],[-6,-6,-3,-6,10,-3,7,4,9,-8,-1]],[[-1,3,-1,9,5,-7,2,-10,6,-8,2],[-1,9,-6,-6,-3,-7,-2,1,4,-7,-9],[-4,7,8,1,1,8,-3,1,3,-4,-10],[-1,-8,-9,8,3,-8,2,-6,-9,6,-10]]], dtype = "int16")#candidate|7314|(6, 4, 11)|const|int16
bop_7315 = relay.logical_xor(var_7313.astype('int16'), relay.reshape(const_7314.astype('int16'), relay.shape_of(var_7313))) # shape=(6, 4, 11)
func_6699_call = mod.get_global_var('func_6699')
func_6701_call = mutated_mod.get_global_var('func_6701')
const_7331 = relay.const([-2.975775,-8.060354,8.819818,-4.006800,-4.008417,7.324665,0.925906,-9.161587,6.475198,3.460889,7.861997,-6.843150,-5.720626,1.678305,-8.622883,4.758958,3.323297,2.636406,-7.997386,2.871491,-5.615753,-9.384945,-4.924831,0.078285,-6.147043,5.668500,-7.847176,2.700695,-8.069681,-6.928682,-4.450900,4.037519,5.529856,-3.978133,6.483003,3.593259,-8.417985,2.259282,-7.796118,-6.202327,-3.087385,-5.082340,8.283652,8.094577,1.088265,-4.731470,-1.351637,6.959089,7.914820,2.657142,0.861992,-6.006726,-5.039550,-4.388220,-1.879773,2.745568,-9.375524,2.969100,-1.282117,0.960060,-4.299242,2.218232,-9.937659,4.627089,-5.955275,-5.674225,1.379849,4.515887,-2.467302,-1.248688,-2.980286,6.668107,1.909824,-4.264563,-8.860115,8.034963,1.707657,4.292546,6.485820,8.024593,6.849594,1.619229,-5.153361,2.142489,3.872786,2.973891,4.790019,-1.023925,0.488594,-4.795152,1.162138,7.735616,-8.999518,-6.377723,6.580720,2.387422,0.104573,6.449925,9.204452,-3.538902,-6.136528,-9.102599,7.570522,-2.718220,0.339576,-8.015876,9.697351,-9.786071,-1.272157,2.749557,-1.285337,-6.155678,-8.598785,-3.131595,-5.265773,-9.556374,-3.059414,4.786448,3.361743,6.203313,-7.956998,1.939972,1.547480,-1.620203,-5.002910,7.404572,-0.513260,-2.864423,8.144460,1.898751,-9.956285,-1.768498,-2.202066,-0.793996,3.976101,9.324117,4.910149,4.331041,-2.947157,-8.123742,-7.714893,2.804489,9.748380,3.119140,-8.400467,4.469751,-7.262613,-1.581729,2.386843,-3.855441,-7.883942,-8.319787,7.942761,-7.776673,0.403381,-8.384329,-6.995535,2.605576,-2.512410,-8.373896,7.018485,3.349980,5.667915,-9.253392,-7.777799,7.602086,-4.782983,-7.246961,-1.621276,2.728751,0.050232,8.467063,-0.073133,0.973907,0.614376,1.019816,5.816920,-8.271973,-4.039483,4.781769,5.294271,5.292915,0.157672,8.297361,-3.217573,3.743375,9.501238,2.448215,0.982968,-5.053977,-9.266815,8.761937,-7.094148,-3.543466,9.534450,4.346058,0.904056,-7.427857,-6.276155,-4.155926,7.101594,-1.444656,-1.967737,-7.117069,-9.630130,-6.924411,-9.583124,3.910843,5.696666,-3.246726,3.389545,8.126445,-3.974287,2.305745,-0.985129,-1.407923,-3.707195,-9.481085,-8.723515,-1.559281,7.747196,-2.124704,3.325947,-4.034307,1.671818,7.085319,-2.165978,3.381626,-6.609192,7.434473,-6.015186,-7.858328,-8.929295,3.168731,5.120742,0.488545,-9.899538,5.730956,6.467857,-6.301633,-7.024803,-5.784112,7.873772,4.734878,-1.023636,-9.015109,-4.553641,8.832793,7.690224,-8.669272,5.159768,8.600845,5.625461,9.254007,-2.389226,1.221389,3.188782,8.655351,-0.739246,-9.257139,6.226734,3.340364,-7.094429,-5.040727,-1.492654,-3.678152,-4.765783,7.734710,-2.381869,2.825468,2.179012,5.613930,-6.539875,4.057560,-4.045775,5.558299,-0.711868,5.981944,-5.721309,-3.456447,-3.040803,-1.714078,-2.305778,-5.632710,-0.123970,8.886070,3.199476,-4.022581,4.968346,-7.145195,2.770322,3.885427,-8.055744,-5.374412,-7.356724,1.354453,-6.881104,3.832188,-3.307131,9.470150,0.914901,-7.075460,-1.772133,-2.951086,-1.341613,3.829220,0.308490,5.638219,9.897118,-0.539880,-3.443617,8.727205,4.708458,3.635419,-5.990261,-5.621888,5.982663,-0.409512,9.705307,1.803788,8.944752,5.796862,6.800966,4.202998,8.896823,-1.113240,7.333336,-1.543494,-1.904503,-9.457113,-1.358237,5.004699,1.591115,4.808304,-4.747568,-3.193368,0.054307,-9.077413,-9.591670,-8.684045,9.779427,9.506596,-2.604524,5.262536,7.122585,3.442696,-0.452491,6.812413,4.823870,-4.906875,8.851804,6.561844,1.509697,4.383962,9.965556,9.270209,-0.889093,-3.446574,-8.871073,-3.606171,1.241273,2.215159,-1.149557,-1.552021,-0.287142,3.488886,9.773139,-8.085494,7.540695,7.280330,5.962777,5.353221,5.944395,-9.600611,-7.846443,-8.608489,5.073576,7.198733,-2.768663,2.567327,5.053091,2.470902,0.280607,8.947326,4.661408,-9.414803,6.616737,0.332499,0.151214,-5.071288,-8.505394,4.469185,-1.842858,9.244367,-4.408804,1.546358,1.956158,8.923930,9.144085,9.796662,5.685105,4.907758,-4.420598,2.537953,8.780324,8.726448,-5.202252,0.599724,9.700121,-0.348378,4.749717,6.601539,-4.668441,8.945218,8.944506,-9.417642,-8.296255,9.889257,-3.062712,-2.776410,-7.743515,3.991836,4.023978,-8.645267,0.590053,-5.145885,-7.167122,-8.993443,-4.126146,-6.777566,-3.122008,-6.861774,7.159506,5.052812,7.285322,2.041703,9.802211,-4.580007,1.435226,-4.557655,3.397821,9.707837,-9.936848,-1.044617,9.696488,1.836191,-7.581358,7.300679,5.804500,4.780035,-4.116009,4.143208,-6.093316,-3.218960,-7.356960,-9.758524,-5.012413,2.356156,6.667052,7.706647,9.965001,2.782419,9.220044,5.867543,6.727756,6.319083,2.508182,-6.213018,-2.459530,7.630718,7.499163,8.592803,8.487786,-9.642232,-4.761017,8.079768,-3.986695,9.773015,3.341481,3.116158,-8.960523,0.074284,3.231995,4.325973,-0.687151,-9.983179,-4.833923,4.879304,-0.266453,3.922620,-5.430085,-6.880954,1.791524,-1.185562,-8.359056,2.149302,-5.048913,-3.939140,-7.985766,7.527471,-7.438283,-8.140961,4.988990,-3.591965,-8.081255,5.380654,2.936392,1.770748,3.062987,6.544788,0.568585,-6.402988,2.608876,8.815029,-6.528987,8.256436,-7.776744,-0.759099,3.007169,-7.169280,-0.252468,-2.115414,6.234088,-0.703525,5.505029,2.937234,-4.117534,-1.025799,-5.391837,-8.005106,8.867575,-4.848642,8.337511,8.198660,7.129967,-3.007877,2.444756,4.647836,4.964268,-3.112026,-8.096335,1.228577,2.879143,-7.196229,-8.545114,8.235429,-9.598288,8.091340,-1.658998,8.811739,-1.205017,2.571869,-3.610741,2.936944,-8.276539,8.254100,4.660696,0.398370,-9.313802,-0.020667,-4.374715,-0.411206,7.440527,4.634102,0.480489,-0.160779,-3.417657,6.025176,-3.836775,-8.682416,-8.566117,8.633531,9.657011,6.341089,0.714709,-6.522650,2.549030,-1.798974,-8.921917,-1.849616,-7.131201,-5.013838,-1.568165,-3.439545,-3.229794,5.780791,-6.536561,-7.782593,8.527620,3.201749,1.542838,4.938159,1.583794,-2.448936,9.620558,5.283724,8.556203,-0.157517,1.000452,-1.458696,-7.953623,3.024878,6.101628,-6.872451,1.259582,3.386770,4.823152,4.981526,-7.209049,-9.221773,-8.284304,-8.388000,0.139163,8.135683,3.273513,-4.412581,4.276566,-1.592416,9.569187,4.954175,-7.121439,-1.090540,7.371215,-6.672416,9.169019,1.628199,-2.637196,4.353018,2.426395,1.804407,-2.683474,-2.483244,3.791414,-6.921341,0.119438,6.401895,-3.654370,0.224363,3.266427,-0.717824,-6.729929,-7.515343,4.946241,2.602592,-3.446084,5.375993,-5.165532,-5.733641,-5.392249,8.571008,-6.880495,0.786672,-2.095701,3.651625,4.340738,-9.319690,4.779632,-9.702580,-4.424757,8.703636,-6.709635,4.388167,-3.713325,-7.886440,6.299826,-6.321777,-2.682660,-6.718866,-1.120863,-3.708402,8.748117,-3.504487,6.264268,2.098010,-7.083912,-6.330326,9.262901,0.225154,9.668855,-0.422198,8.025828,0.552470,5.091652,-4.521948,3.197990,6.001611,9.203415,3.772640,-7.219062,-9.437295,-5.332893,-4.993231,6.694140,8.662234,7.440273,0.431539,6.983152,7.202608,-0.703729,-1.258299,-7.098501,2.342819,8.158034,2.749133,1.020766,-9.255651,-2.607997,-6.824372,6.078642,8.352403,0.412949,0.657620,9.632223,3.960505,7.906708,2.644822,5.866219,3.022687,3.245939,1.926396,1.442192,-5.567648,-6.801243,5.043892,1.663503,-5.085232,4.599243,2.203992,-0.680217,-8.340081,-0.575612,-2.990778,-7.867046,9.520751,-2.592671,6.190559,-5.826192,4.860615,-2.925496,-1.005598,2.563833,-9.735809,6.379375,9.199288,1.965459,9.844738,1.815964,2.524513,4.650695,-7.091573,4.633162,5.478676,6.944804,-0.433530,3.189715,8.186666,-5.036010,3.368442,6.730972,3.116302,8.069478,0.176560,-5.565235,-3.082417,0.677687,0.715197,-8.001486,-4.850512,-8.145993,2.135603,-3.260230,-8.067206,3.580852,-6.072290,7.697703,4.663528,-4.081347,1.529568,0.844601,-1.499287,-2.377970,-5.511870,2.843833,8.671777,6.341926,1.816804,3.479676,-6.489269,-6.786020,-9.081585,8.183624,-3.033968,-2.255473,-2.577008,1.754371,-7.255733,1.968787,6.725933,1.402611,-7.051083,7.911743,-5.520635,9.702207,5.029175,9.369428,5.599266,8.324852,-1.780991,-8.228917,-6.384030,-8.466806,6.479667,8.570426,-7.512301,9.246085,0.848974,-1.787111,-1.169799,9.132518,4.333920,7.112160,7.569420,-5.808204,-7.939165,-8.366343,0.912749,1.925272,-0.338362,5.793733,5.488644,7.205692,8.324612,9.719985,-0.733293,-4.655376,6.871416,-5.377040,-1.400052,3.852201,0.011376,2.413940,-1.408144,-2.558307,0.928812,5.832155,-5.267606,-4.741935,-5.533429,5.213954,-9.983628,3.330717,1.186254,-2.078310,-1.249093,-3.814342,1.007109,-1.731142,-7.684819,9.154638,-2.811704,7.508790,1.286482,0.214169,4.188304,-3.991603,-6.963690,6.001469,-2.850653,4.859256,1.592569,-9.000555,-2.827569,-6.120625,0.958807,-9.264342,-4.072103,6.687086,4.443162,-1.348024,0.230068,-5.223959,-6.626037,-1.268806,1.911835,7.753469,7.054486,-3.752686,5.681873,5.322910,-3.863264,-7.618080,8.351277,-3.817679,-3.336961,1.783284,-0.983118,2.382616,8.867543,9.709590,-0.667527,-1.057147,-5.205750,2.877161,9.057073,8.930547,-6.569046,3.356935,2.246662,2.871341,-9.437409,6.425111,-9.370450,6.367356,-9.604077,7.956144,6.922395,7.570538,-2.482915,3.146458,8.942570,0.376754,8.068374,9.101810,-7.421133,-2.137808,5.552767,0.409414,1.396705,1.531868,9.795009,-9.220732,-7.045424,4.194964,-6.879656,7.654032,0.903099,7.367131,3.262515,3.694027,8.179009,-1.379567,1.281276,5.138226,-8.404781,8.661345,9.452281,-8.298340,2.529964,-3.040310,5.317409,0.808385,-5.447336,1.045099,1.924569,5.934219,-4.551760,9.411192,-8.518271,-7.133248,1.901527,-4.618917,3.964072,5.075770,-9.439099,-2.525761,8.354762,-3.727440,9.717481,9.555160,-4.214422,5.523044,-1.740971,9.653578,6.511762,6.360985,5.692080,6.336983,-2.840549,2.956661,-8.790240,-3.070910,7.674179,1.653418,-3.780236,0.145548,-0.959953,-1.123634,9.674371,5.197717,3.014653,5.218754,-1.500680,-6.447897,8.865593,-0.690726,0.502290,5.984340,8.821619,6.896417,3.123441,5.935232,-3.571708,-9.911431,6.904842,-3.242736,-6.344011,4.193856,4.369863,-0.768082,9.646607,-0.045436,4.879146,7.466756,0.338660,0.922886,0.721120,-6.533174,-4.165680,9.000487,-7.815605,-7.814008,7.127430,3.236497,0.691644,-0.941385,-5.163393,-6.441743,-2.694875,8.756374,-8.382730,0.738596,5.889854,8.036069,-1.913052,3.818618,2.457940,-9.129010,5.801295,9.300821,5.812199,4.424779,-6.680339,7.026478,8.748748,-7.790131,7.117299,3.023901,5.909702,-4.354345,0.400942,-7.862033,-2.612548,8.897963,3.111086,-8.040697,-1.478508,-1.105266,4.796630,-1.360993,-7.416897,4.777520,-8.036660,-4.051858,0.782556,4.551821,-8.700684,6.082045,-9.580207,-7.467724,8.565327,-3.875114,-1.312597,1.030442,2.293552,-4.495638,-8.526246,9.834337,-9.526364,3.387025,9.621255,-9.045374,-1.183746,-1.799799,9.457307,-0.433559,7.163487,-9.915239,-1.646757,-4.120850,0.532350,4.105428,-2.867917,-9.085140,4.176603,-7.820341,0.106173,-5.552105,7.000597,-4.775697,-6.467076,0.373356,-7.539365,2.795793,9.658758,-3.473381,9.407031,9.752951,-6.494132,-1.325661,9.691344,-6.519719,-6.029678,-3.405797,9.875394,-3.839086,-5.953163,-3.347198,2.235326,9.712321,4.187728,-9.231122,7.432452,-6.086435,8.406300,5.883439,7.903000,8.727264,9.095392,2.420155,4.311493,-4.855028,-1.860429,-8.046090,-9.784545,-6.694364,5.709440,-7.270438,-5.291813,-3.295424,-4.218589,-4.842088,-6.304735,0.075493,-9.362467,-5.765557,-8.141025,1.366717,7.854316,-0.481427,6.264047,7.462340,1.669024,0.777630,-8.197783,-0.384259,-6.448254,7.440055,-8.771576,-3.560539,3.616950,-9.261572,7.271872,-0.551980,7.945288,-0.762439,-8.681548,5.677849,-4.212777,4.808503,2.980194,4.034810,8.477109,-9.635432,5.688957,-6.650434,8.551738,-0.264885,-4.782388,-8.433732,9.144089,-8.007529,-2.652016,-4.113388,-6.007459,-7.825004,8.574719,7.512101,-6.613456,-6.642149,-8.746405,-3.378363,-5.152151,-3.175121,-6.161723,-5.246645,-0.969828,1.260290,1.495156,9.930036,2.415939,2.482928,1.138363,3.051383,-7.681165,4.286876,-0.588461,-3.927375,-3.518874,5.373803,9.493210,-9.970000,-2.293326,0.666503,1.112692,-9.354874,-2.929944,8.508212,-1.074290,0.961429,9.391461,-6.201623,-8.197681,-0.657599,9.183738,5.806885,0.101828,-8.618518,1.500889,6.857177,-7.128762,-9.448173,5.118886,-0.933191,-9.393153,-3.398506,-0.556391,-4.694841,-0.788124,2.036285,-5.676979,-2.590402,2.821403,-2.273945,-9.890251,3.403397,7.444017,0.830413,-8.510747,-3.085746,2.131270,-6.937170,8.357424,9.002159,6.546201,-3.430563,6.249559,9.648011,3.117671,-4.807318,-2.126891], dtype = "float32")#candidate|7331|(1260,)|const|float32
call_7330 = relay.TupleGetItem(func_6699_call(relay.reshape(const_7331.astype('float32'), [1260,])), 5)
call_7332 = relay.TupleGetItem(func_6701_call(relay.reshape(const_7331.astype('float32'), [1260,])), 5)
output = relay.Tuple([bop_7315,call_7330,const_7331,])
output2 = relay.Tuple([bop_7315,call_7332,const_7331,])
func_7335 = relay.Function([var_7313,], output)
mod['func_7335'] = func_7335
mod = relay.transform.InferType()(mod)
mutated_mod['func_7335'] = func_7335
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7336 = relay.var("var_7336", dtype = "int16", shape = (6, 4, 11))#candidate|7336|(6, 4, 11)|var|int16
func_7335_call = mutated_mod.get_global_var('func_7335')
call_7337 = func_7335_call(var_7336)
output = call_7337
func_7338 = relay.Function([var_7336], output)
mutated_mod['func_7338'] = func_7338
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5984_call = mod.get_global_var('func_5984')
func_5986_call = mutated_mod.get_global_var('func_5986')
call_7344 = relay.TupleGetItem(func_5984_call(), 0)
call_7345 = relay.TupleGetItem(func_5986_call(), 0)
func_2453_call = mod.get_global_var('func_2453')
func_2456_call = mutated_mod.get_global_var('func_2456')
var_7348 = relay.var("var_7348", dtype = "int32", shape = (585,))#candidate|7348|(585,)|var|int32
call_7347 = relay.TupleGetItem(func_2453_call(relay.reshape(var_7348.astype('int32'), [585,])), 2)
call_7349 = relay.TupleGetItem(func_2456_call(relay.reshape(var_7348.astype('int32'), [585,])), 2)
output = relay.Tuple([call_7344,call_7347,var_7348,])
output2 = relay.Tuple([call_7345,call_7349,var_7348,])
func_7355 = relay.Function([var_7348,], output)
mod['func_7355'] = func_7355
mod = relay.transform.InferType()(mod)
var_7356 = relay.var("var_7356", dtype = "int32", shape = (585,))#candidate|7356|(585,)|var|int32
output = func_7355(var_7356)
func_7357 = relay.Function([var_7356], output)
mutated_mod['func_7357'] = func_7357
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5244_call = mod.get_global_var('func_5244')
func_5246_call = mutated_mod.get_global_var('func_5246')
call_7412 = relay.TupleGetItem(func_5244_call(), 1)
call_7413 = relay.TupleGetItem(func_5246_call(), 1)
output = relay.Tuple([call_7412,])
output2 = relay.Tuple([call_7413,])
func_7419 = relay.Function([], output)
mod['func_7419'] = func_7419
mod = relay.transform.InferType()(mod)
output = func_7419()
func_7420 = relay.Function([], output)
mutated_mod['func_7420'] = func_7420
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3065_call = mod.get_global_var('func_3065')
func_3067_call = mutated_mod.get_global_var('func_3067')
call_7430 = relay.TupleGetItem(func_3065_call(), 0)
call_7431 = relay.TupleGetItem(func_3067_call(), 0)
output = relay.Tuple([call_7430,])
output2 = relay.Tuple([call_7431,])
func_7436 = relay.Function([], output)
mod['func_7436'] = func_7436
mod = relay.transform.InferType()(mod)
output = func_7436()
func_7437 = relay.Function([], output)
mutated_mod['func_7437'] = func_7437
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3665_call = mod.get_global_var('func_3665')
func_3666_call = mutated_mod.get_global_var('func_3666')
call_7478 = relay.TupleGetItem(func_3665_call(), 0)
call_7479 = relay.TupleGetItem(func_3666_call(), 0)
output = relay.Tuple([call_7478,])
output2 = relay.Tuple([call_7479,])
func_7485 = relay.Function([], output)
mod['func_7485'] = func_7485
mod = relay.transform.InferType()(mod)
output = func_7485()
func_7486 = relay.Function([], output)
mutated_mod['func_7486'] = func_7486
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6054_call = mod.get_global_var('func_6054')
func_6056_call = mutated_mod.get_global_var('func_6056')
call_7490 = relay.TupleGetItem(func_6054_call(), 2)
call_7491 = relay.TupleGetItem(func_6056_call(), 2)
func_6054_call = mod.get_global_var('func_6054')
func_6056_call = mutated_mod.get_global_var('func_6056')
call_7504 = relay.TupleGetItem(func_6054_call(), 2)
call_7505 = relay.TupleGetItem(func_6056_call(), 2)
output = relay.Tuple([call_7490,call_7504,])
output2 = relay.Tuple([call_7491,call_7505,])
func_7509 = relay.Function([], output)
mod['func_7509'] = func_7509
mod = relay.transform.InferType()(mod)
mutated_mod['func_7509'] = func_7509
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7509_call = mutated_mod.get_global_var('func_7509')
call_7510 = func_7509_call()
output = call_7510
func_7511 = relay.Function([], output)
mutated_mod['func_7511'] = func_7511
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5321_call = mod.get_global_var('func_5321')
func_5323_call = mutated_mod.get_global_var('func_5323')
call_7512 = relay.TupleGetItem(func_5321_call(), 0)
call_7513 = relay.TupleGetItem(func_5323_call(), 0)
output = call_7512
output2 = call_7513
func_7528 = relay.Function([], output)
mod['func_7528'] = func_7528
mod = relay.transform.InferType()(mod)
mutated_mod['func_7528'] = func_7528
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7528_call = mutated_mod.get_global_var('func_7528')
call_7529 = func_7528_call()
output = call_7529
func_7530 = relay.Function([], output)
mutated_mod['func_7530'] = func_7530
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6017_call = mod.get_global_var('func_6017')
func_6019_call = mutated_mod.get_global_var('func_6019')
call_7542 = func_6017_call()
call_7543 = func_6017_call()
output = relay.Tuple([call_7542,])
output2 = relay.Tuple([call_7543,])
func_7551 = relay.Function([], output)
mod['func_7551'] = func_7551
mod = relay.transform.InferType()(mod)
output = func_7551()
func_7552 = relay.Function([], output)
mutated_mod['func_7552'] = func_7552
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3808_call = mod.get_global_var('func_3808')
func_3809_call = mutated_mod.get_global_var('func_3809')
call_7579 = func_3808_call()
call_7580 = func_3808_call()
output = call_7579
output2 = call_7580
func_7583 = relay.Function([], output)
mod['func_7583'] = func_7583
mod = relay.transform.InferType()(mod)
output = func_7583()
func_7584 = relay.Function([], output)
mutated_mod['func_7584'] = func_7584
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5895_call = mod.get_global_var('func_5895')
func_5897_call = mutated_mod.get_global_var('func_5897')
call_7585 = relay.TupleGetItem(func_5895_call(), 0)
call_7586 = relay.TupleGetItem(func_5897_call(), 0)
output = relay.Tuple([call_7585,])
output2 = relay.Tuple([call_7586,])
func_7629 = relay.Function([], output)
mod['func_7629'] = func_7629
mod = relay.transform.InferType()(mod)
mutated_mod['func_7629'] = func_7629
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7629_call = mutated_mod.get_global_var('func_7629')
call_7630 = func_7629_call()
output = call_7630
func_7631 = relay.Function([], output)
mutated_mod['func_7631'] = func_7631
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7654 = relay.var("var_7654", dtype = "float32", shape = (3, 12, 11))#candidate|7654|(3, 12, 11)|var|float32
const_7655 = relay.const([[[4.487743,2.170026,2.856842,-7.928921,5.679305,9.920565,5.613602,-1.315068,-7.116371,0.756520,3.913104],[7.271918,2.346012,7.153274,2.678468,1.764390,-5.437812,-5.593227,-9.572881,-1.074821,0.387098,4.216421],[6.860765,-4.326405,-4.761406,-3.485302,9.389685,0.949957,-6.208712,5.494591,-7.129470,-9.195039,9.592144],[-6.724946,-7.093491,8.832682,6.771198,-7.886406,-6.369393,-5.233146,-2.289296,3.439582,-9.099893,7.568603],[9.274398,-9.466682,8.653571,7.141605,-6.144739,-2.972685,-2.863820,-9.246490,-1.283523,-2.264228,-1.863666],[-3.012740,-1.412738,-1.892944,-4.034720,9.882323,-9.987438,6.563482,9.540169,-2.313566,4.591882,-9.630271],[7.842692,0.922684,9.215913,-6.130708,-0.237376,9.095782,-1.749581,8.438737,9.189622,4.084856,-4.253580],[3.748745,1.737965,1.230844,9.956467,-5.510136,4.730854,-9.023761,7.244327,-5.116407,0.578747,-7.069560],[3.332657,3.918933,8.407177,-4.486856,7.818668,6.018512,6.717670,3.004097,-4.486577,7.381835,0.398965],[-1.420761,8.553551,-8.659393,-9.830523,-7.576069,-8.577317,-0.847834,-7.829158,-6.699488,6.448842,-0.269179],[-3.751247,5.689197,6.359078,-9.513378,-4.924058,-2.220989,8.913208,3.747080,7.193154,6.404780,6.218262],[5.261621,-4.980877,8.986692,4.958392,1.493915,-5.450629,-1.200255,8.714917,-9.631925,-8.344197,3.633855]],[[-8.257692,7.449869,5.334072,3.447949,9.939095,-3.998940,-4.574530,0.795755,-1.360997,-5.075868,4.119917],[-5.722677,4.650221,-6.058218,2.481255,-4.600159,-0.347365,-7.918002,-6.123407,-7.539952,-1.842703,-5.367779],[7.365731,5.560386,-7.355441,-5.753552,-8.977064,-1.092641,0.182328,2.874794,6.273636,-9.966505,-1.272685],[3.756109,5.883099,-5.983211,-9.070306,-5.415475,-8.356848,9.268008,2.342991,-2.640600,9.589823,-3.745749],[1.507825,8.087306,3.327395,0.443134,-7.087487,-8.719861,-7.344291,-0.619735,4.246890,-1.386199,-3.630126],[-8.721817,2.214576,3.990139,-6.985613,-4.093589,-4.682399,-7.969633,5.736277,4.033260,-9.533800,4.998026],[-0.102619,2.839196,0.639481,5.305372,-3.547355,3.469724,-3.768848,-3.026557,-0.141439,-9.492252,-0.727678],[-8.806159,-3.806334,-9.252475,-9.320384,-4.644979,1.335287,-1.453146,4.788656,-0.790487,-4.139396,-2.228446],[-0.092916,1.874910,5.675352,0.086624,-0.361324,4.534758,2.661921,8.667404,-6.664535,-1.400199,6.956810],[-8.133747,-2.114183,-4.448187,-7.469450,5.506203,9.550614,-8.309799,1.888695,7.444480,8.935454,-9.768079],[-0.120437,-2.598914,6.366404,-7.419599,-5.525144,-9.636863,9.600577,0.427712,4.398472,-9.490018,3.696443],[5.212699,3.717642,-8.402047,5.898604,4.566267,-7.997204,-6.867048,2.963812,-0.432732,7.022964,-1.523265]],[[-4.411216,5.715811,9.956624,-4.005711,-7.082104,8.873305,-8.869574,-7.261431,-7.062614,7.998932,-1.771490],[2.559471,-0.610602,7.623468,-6.117782,-2.745181,3.116734,-4.988265,-0.807532,8.307942,-6.077450,-3.367243],[-7.561529,-5.352789,-0.384895,1.774459,-5.188180,-1.153740,-3.319163,-3.120027,-9.198571,0.610506,-2.822069],[-3.097352,7.406923,5.855797,-2.400194,-4.907532,1.036421,9.203602,1.513569,-0.172187,1.005517,-7.382215],[-5.122128,-9.402350,-4.984190,-7.812268,7.835003,1.270736,-4.752423,-3.040953,-8.804703,7.891967,-1.063707],[3.788215,0.862752,8.458227,3.693127,-3.629519,-7.324484,-1.302911,5.297976,-7.308263,3.487040,4.281774],[-6.225476,-6.670057,-5.949081,-1.402820,-2.159664,-9.700558,8.627655,7.717821,-3.795027,-2.507044,-2.599116],[4.051674,3.797134,5.351767,7.226950,-9.770271,-3.341536,-8.385765,-3.641991,3.322286,-7.971397,-9.901451],[2.835044,-8.564392,-5.437622,5.935157,4.734389,-3.451944,-6.002992,6.964603,-8.410986,7.839623,-3.329619],[7.415332,7.363168,-4.926331,2.273897,5.306984,-2.197979,-3.418893,5.881503,5.126454,-2.344124,7.797933],[0.091379,-5.612811,7.923214,3.353451,9.105788,-8.199588,1.505590,-3.197424,-9.642701,-2.426891,-9.131565],[9.747516,-2.477332,-9.646724,-0.362481,7.760928,4.186605,9.826693,9.220449,-6.679132,3.698159,3.675015]]], dtype = "float32")#candidate|7655|(3, 12, 11)|const|float32
bop_7656 = relay.mod(var_7654.astype('float32'), relay.reshape(const_7655.astype('float32'), relay.shape_of(var_7654))) # shape=(3, 12, 11)
func_1719_call = mod.get_global_var('func_1719')
func_1721_call = mutated_mod.get_global_var('func_1721')
var_7665 = relay.var("var_7665", dtype = "float64", shape = (18, 1))#candidate|7665|(18, 1)|var|float64
call_7664 = func_1719_call(relay.reshape(var_7665.astype('float64'), [1, 6, 3]))
call_7666 = func_1719_call(relay.reshape(var_7665.astype('float64'), [1, 6, 3]))
output = relay.Tuple([bop_7656,call_7664,var_7665,])
output2 = relay.Tuple([bop_7656,call_7666,var_7665,])
func_7672 = relay.Function([var_7654,var_7665,], output)
mod['func_7672'] = func_7672
mod = relay.transform.InferType()(mod)
var_7673 = relay.var("var_7673", dtype = "float32", shape = (3, 12, 11))#candidate|7673|(3, 12, 11)|var|float32
var_7674 = relay.var("var_7674", dtype = "float64", shape = (18, 1))#candidate|7674|(18, 1)|var|float64
output = func_7672(var_7673,var_7674,)
func_7675 = relay.Function([var_7673,var_7674,], output)
mutated_mod['func_7675'] = func_7675
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7730 = relay.const([[[-3,6,5,-9,-1,-10,-8,-1,-6,-1],[1,7,8,10,-3,-7,-7,-8,10,-9],[-2,9,3,-9,4,5,-3,9,-6,3],[5,-8,4,-5,5,7,-4,-7,6,-7],[8,-10,-6,-2,-9,-6,6,-5,1,-7],[7,-4,-10,-7,1,-9,-7,9,7,8],[8,-10,-7,5,8,-4,5,5,3,2],[-7,-2,-7,8,2,-1,9,3,6,-5],[1,9,-1,1,-6,7,-1,6,10,3],[-1,10,-6,7,4,-6,1,-1,10,8],[5,7,-6,6,-8,-8,3,-8,-5,-1],[-7,4,-4,2,-8,-8,-6,1,-2,8],[7,-1,-5,1,4,-9,-1,-8,-9,-9]],[[-1,-2,-3,-8,9,7,1,-6,4,6],[-1,8,-7,7,7,3,-2,-4,7,10],[-10,-1,2,7,7,6,8,10,-10,-9],[2,6,6,-6,6,8,2,4,1,2],[7,-7,-1,10,5,-10,-3,8,-10,4],[-2,-9,6,-8,9,6,-7,-10,-10,-10],[2,-2,8,-8,-6,-6,7,-5,-1,9],[-3,5,-7,-6,7,-4,8,8,7,8],[-8,-4,-10,-7,1,10,-2,4,1,-10],[8,9,-1,-3,3,-4,4,6,-6,-6],[1,-3,-4,-4,-8,3,-8,3,-9,10],[8,3,-9,-9,-3,3,2,9,-2,-10],[9,10,8,-9,-2,9,10,-5,2,-7]],[[8,9,6,5,-2,2,-8,9,6,3],[6,7,5,-8,-5,-1,4,2,-9,10],[3,1,4,9,7,-7,5,10,7,8],[2,4,9,-6,6,10,-9,3,2,-5],[-4,-1,-10,1,-8,1,8,5,-3,8],[8,1,8,3,3,-8,-4,-10,-1,-4],[-9,10,-10,9,-6,7,2,1,9,9],[-4,1,-5,10,1,6,9,-1,10,6],[-4,10,-8,-7,5,-1,10,-6,-2,-2],[2,-6,3,2,7,1,-1,-1,-4,-6],[-2,-7,-8,9,9,6,9,-2,1,-8],[-4,-2,-2,3,-1,4,-5,-6,-3,-4],[8,6,10,-2,6,1,-10,2,-6,-5]],[[-6,-10,9,-4,3,-7,-6,10,2,8],[1,7,-2,3,-6,5,-5,-2,3,9],[2,10,-10,5,-2,2,-10,-7,8,2],[-8,5,-4,-10,-3,-4,4,4,-2,-5],[-9,10,-4,4,6,-9,5,-8,2,-5],[-6,9,-2,-1,1,-1,-3,-2,7,-2],[-3,7,-4,4,-2,1,7,7,3,4],[-4,-4,5,5,-3,-4,5,-4,-8,-4],[-9,-10,5,6,3,-3,4,-5,3,-8],[6,-5,-5,1,9,-4,2,-7,-1,-6],[2,3,-7,2,10,-6,-5,-1,-2,-4],[10,3,3,-1,-2,1,6,-7,-4,-3],[-2,3,2,8,6,8,1,10,-1,10]],[[-9,7,-5,-8,-5,5,2,5,-4,1],[-4,-8,10,8,-10,-5,9,4,-6,5],[3,-9,10,10,-4,3,-8,2,2,9],[10,1,-4,5,7,-3,2,5,7,-5],[4,10,1,-2,-4,5,5,-5,-10,10],[4,8,-7,-7,6,-7,2,-6,9,-7],[9,9,9,4,8,-7,-9,-8,7,3],[7,-8,7,-3,-2,-1,4,4,6,5],[3,-6,-8,-1,10,-10,3,-8,-2,9],[3,4,10,1,5,9,7,-10,-10,9],[4,8,7,-2,-9,2,10,9,3,7],[-3,8,2,4,9,-3,-3,2,1,9],[-4,-1,-9,6,10,2,10,3,7,7]],[[9,9,-2,-1,5,-4,5,3,8,7],[-3,-1,-10,6,-2,-3,4,2,-3,9],[-7,6,10,5,1,6,-3,-8,1,-10],[8,3,-7,5,2,-7,9,-10,-5,7],[-6,-9,-9,-4,10,1,-9,-9,1,-6],[2,-9,-7,1,3,7,10,10,2,10],[-8,-1,5,-3,3,-9,-1,5,-9,-1],[6,-4,3,-8,8,8,-8,2,6,-2],[-5,6,-1,-5,9,3,-5,4,10,4],[7,-5,10,8,5,6,1,5,3,10],[-9,9,-9,3,-2,-7,-10,4,2,-5],[-10,-4,-3,2,-2,-9,-7,-6,-1,6],[-7,-2,7,-6,-8,3,-1,10,9,-9]],[[-6,1,-9,10,5,3,10,8,3,-6],[4,2,10,7,-6,8,5,5,-4,3],[-10,-1,6,-10,5,2,9,3,6,7],[-6,-3,-6,-6,3,2,-10,8,4,6],[5,-9,4,4,-1,3,7,2,-4,4],[2,3,-10,-9,-10,-4,-3,-1,-4,-8],[-7,-6,-6,-10,1,-10,-1,-6,-5,-5],[-7,9,-3,-8,7,-4,8,-9,-2,-7],[-2,-5,-1,3,-3,-2,-9,-4,-3,-9],[-10,-3,7,-5,2,10,-10,-6,-6,-8],[9,-1,2,1,8,6,-7,8,-4,10],[4,7,-7,-4,3,-1,-3,1,10,3],[-3,7,1,-1,8,-8,-5,6,-1,4]]], dtype = "uint32")#candidate|7730|(7, 13, 10)|const|uint32
var_7731 = relay.var("var_7731", dtype = "uint32", shape = (7, 13, 10))#candidate|7731|(7, 13, 10)|var|uint32
bop_7732 = relay.minimum(const_7730.astype('uint32'), relay.reshape(var_7731.astype('uint32'), relay.shape_of(const_7730))) # shape=(7, 13, 10)
output = bop_7732
output2 = bop_7732
func_7735 = relay.Function([var_7731,], output)
mod['func_7735'] = func_7735
mod = relay.transform.InferType()(mod)
var_7736 = relay.var("var_7736", dtype = "uint32", shape = (7, 13, 10))#candidate|7736|(7, 13, 10)|var|uint32
output = func_7735(var_7736)
func_7737 = relay.Function([var_7736], output)
mutated_mod['func_7737'] = func_7737
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6504_call = mod.get_global_var('func_6504')
func_6505_call = mutated_mod.get_global_var('func_6505')
call_7739 = func_6504_call()
call_7740 = func_6504_call()
func_7024_call = mod.get_global_var('func_7024')
func_7027_call = mutated_mod.get_global_var('func_7027')
const_7758 = relay.const([4.699325,-2.167601,-8.036014,-2.918078,8.891758,-6.620834,4.145216,1.452718,3.436670,-4.346798,-4.313429,8.867864,8.268913,1.417979,-7.392325,-7.058195,7.638526,9.596658,1.772423,4.271083,-6.373579,-3.157214,8.744854,-7.849864,8.402424,-3.447343,-3.378275,0.835769,-8.193590,-1.107935,6.483445,-4.504611,-2.377347,-9.843463,2.437115,-6.600866,-8.968442,8.163597,2.274651,-0.265056,6.924655,-0.900922,-7.822417,4.812029,3.591907,-9.612591,-1.088708,9.630928,-8.837241,7.345825,-8.229950,5.988804,-1.092814,-8.846516,-1.121978,-9.831876,4.815605,1.910997,-5.931714,3.564123,9.901149,9.358869,-4.272237,-1.480946,-0.017338,9.022479,0.150588,6.299961,1.452339,4.119499,6.317448,5.235264,8.885020,-5.301651,7.604123,1.802571,4.630652,8.316446,1.609832,-1.979747,7.565712,-1.076649,-7.276932,-6.667918,-5.053632,-7.676214,-1.863565,-7.470042,-1.860745,2.963554,-7.192513,-9.022867,7.697891,-8.835712,6.555741,1.671319,-3.407607,-0.803175,0.092603,-7.568516,-7.363951,7.774876,0.354393,-0.611691,2.068318,7.903337,-9.916059,5.513043,9.594079,1.034757,7.536807,4.581471,-7.312337,-1.001427,3.851873,9.109754,3.261647,-3.883837,8.048259,3.187222,-8.379053,-8.780920,-5.829447,7.711884,4.661325,9.100296,8.048789,-2.336832,-1.723877,3.454920,-4.740090,3.701582,-8.865664,-6.934697,4.000175,-2.630857,-0.161002,-5.277182,-3.164842,0.876945,-8.290817,-0.836025,7.608513,-6.643954,-3.784498,8.703852,-1.813133,-1.338189,-7.493355,-7.305360,-8.110516,-4.490195,-7.732671,-3.834909,-6.817100,-3.007022,-5.910803,-9.972150,-0.423079,7.284186,-6.415856,6.486397,5.410732,7.083734,-7.218775,2.210023,-9.415162,1.851937,4.033865,-2.741517,1.093327,-1.879235,6.164646,-0.699265,2.454695,-5.730377,-0.333216,7.052775,-4.495060,-9.919983,-3.003863,9.096062,4.211794,6.427302,-0.353863,-7.503268,8.850141,0.334613,4.978787,-9.787066,8.604350,-0.490113,-1.687134,-2.747289,2.784669,4.219954,-6.437751,-8.361956,2.050583,-8.000228,9.971868,-8.582770,-0.995995,-4.098261,2.529348,-5.501256,7.727369,-2.705854,-4.798220,-2.604172,7.839846,-1.847942,3.373834,1.097121,-1.965982,-5.379786,-0.186525,-6.043813,3.126925,-1.841997,9.238868,0.725375,-7.821200,-5.092639,-5.626280,-1.307450,-9.495137,-0.763453,0.641609,8.707528,9.227975,-0.083467,-2.419973,-1.962896,2.137779,-0.374464,-2.268769,7.613416,8.588584,0.169183,1.389831,-3.638395,-2.888591,0.633775,-0.102880,-8.061284,-5.779621,-7.977203,0.371156,-0.968532,6.639244,-6.791025,8.468404,-8.925435,9.422573,-1.072794,2.480959,8.373785,5.887722,-9.303832,4.259929,-5.286873,9.756672,-5.365121,9.478066,8.470995,3.642687,-2.205887,8.257392,7.463715,4.787812,7.040523,-3.646408,-8.493240,3.091029,-7.765231,1.672291,5.781665,9.263628,-7.627474,-0.373405,0.616107,3.752434,-3.534163,9.779344,2.396950,-2.188092,7.557974,8.611000,-7.892036,-6.203952,8.415341,1.340692,-9.218738,-0.312746,-6.098645,-4.963556,-4.438382,4.555185,8.573267,3.783468,1.071133,6.431520,-3.867220,6.782611,-6.236231,5.219419,8.108407,-8.849677,9.516448,-9.089325,8.748788,-2.634733,-5.815582,3.827188,-2.706990,4.066433,-9.093244,-8.760152,2.900476,6.265335,-0.518425,-5.153866,-1.252610,8.647477,9.587236,9.685074,1.539474,5.638500,8.745297,6.543234,2.962428,-4.836913,1.576502,-4.142582,-0.810663,-9.122152,3.202468,-2.554318,4.897775,1.090195,-2.221002,-5.317252,-7.875884,7.978924,-9.985544,9.845439,7.351719,4.490968,0.573071,-1.104658,6.218074,-9.426225,6.419051,-8.487661,-9.512533,7.532481,-0.995899,-2.998281,1.432184,8.458707,-9.857543,5.837900,-0.905064,2.773482,5.641411,0.002493,-1.325008,8.550009,-5.171881,2.338915,8.198341,9.065208,-8.892399,1.798461,-4.897907,1.281045,5.674087,-3.540065,5.253971,1.571927,1.566620,2.447101,-2.864757,7.332906,0.243581,-2.050500,-7.956380,-0.416788,0.771621,-2.810381,-4.211293,6.144487,1.178696,9.505098,9.780623,6.170463,7.882901,-9.518813,5.953058,1.319061,-4.957536,8.965726,7.395366,8.966579,5.398441,-5.676323,3.460992,-9.588377,-3.881398,5.957660,-5.749928,-1.655248,-8.147652,-3.740899,3.137540,-9.910776,5.926079,-0.248301,9.024688,7.170059,8.828872,0.576577,8.845748,5.671492,8.355631,9.387670,5.635395,-2.614255,4.053335,4.366205,-2.959476,-7.081609,-8.994222,-5.798884,1.785690,-4.175359,-1.936173,8.458858,6.096199,7.613985,-5.598321,3.567713,-1.153453,2.378421,-6.940178,-6.859808,-7.266341,-9.978712,2.102025,-5.096100,-8.039582,-3.481248,-5.215235,8.378183,-9.348820,7.553396,2.108320,3.290036,-6.054192,2.236205,1.946248,4.964484,0.398526,-4.129215,-3.005460,9.166347,-1.182092,5.564006,0.372652,-5.378312,0.689211,-2.798673,-4.222626,9.292986,-2.827976,8.256983,-1.185636,2.504769,-5.670976,6.806729,4.723336,-6.927688,-7.861390,-8.860249,-0.412387,1.741078,-4.974267,-2.402038,6.052375,8.465723,0.104821,-7.740378,3.953197,4.919967,7.683970,3.696905,7.784921,-3.710523,0.920667,7.834666,-3.553428,-0.839013,5.142677,9.779187,-6.523850,-8.114924,-9.574881,2.473387,0.706786,9.932624,8.053831,3.415487,-6.458547,-4.779984,-9.454173,7.902420,5.660373,-4.352599,1.917387,4.001356,-4.283000,5.531481,-4.896051,1.243869,2.929637,6.250602,0.679647,6.795038,-1.025292,6.478481,4.263688,2.758598,-3.672415,3.284086,-8.542253,9.063982,4.415491,3.377852,-5.411905,3.662962,7.845741,-4.740816,4.340602,8.330348,-1.901574,-7.396285,5.065060,-1.412416,0.959015,6.947543,-0.734294,8.435122,0.170110,-4.494683,9.001857,9.101063,-1.658612,2.864534,0.882208,1.592936,4.371469,-7.253618,-5.713664,0.652588,-3.560114,0.744294,2.458987,-9.900089,7.948222,-9.114591,-2.729666,6.423109,-1.173123,-1.570681,8.041494,4.900015,-9.991227,-7.443615,-2.497120,-0.376763,-3.581535,0.598884,-4.692791,8.291821,-7.474822,-9.212298,3.582352,9.793365,-9.556307,-9.328357,-5.642174,3.525810,3.087608,5.427281,6.841748,-0.335436,7.175281,1.985641,-9.101738,2.105281,0.187890,7.359947,8.122811,-5.577384,1.861839,-5.188346,-5.315739,-1.832424,6.972463,0.434878,8.724735,-3.146183,4.683127,7.261878,-6.082773,9.469848,-6.437529,8.296248,6.026104,-6.387434,-7.227533,-5.172524,-6.169715,-1.723327,-0.477157,-9.390074,5.575547,-1.000743,-3.917375,-5.459497,-5.539651,-7.777995,7.944324,7.351322,8.687001,3.715176,-7.128216,-1.677688,-4.805933,-6.079339,-1.143557,-2.499622,2.302334,6.867177,-8.357010,3.506594,0.994125,-2.206219,2.817449,0.362157,3.880478,-8.035139,8.335121,-7.829371,3.692429,-0.974363,3.986852,7.881530,-7.755458,-9.589654,0.609425,3.840126,-8.877586,3.414094,0.664721,-5.930536,8.507913,-0.938587,-0.718282,-2.369076,0.718916,8.440258,6.685786,-4.626356,5.924897,8.771572,-1.446889,6.416584,-8.756743,-6.935812,-3.165205,-9.031029,9.144302,-7.356149,7.646092,1.532882,5.086808,7.315281,3.221223,-6.497388,-9.843631,6.472267,5.031053,3.433284,9.236511,8.451383,5.578189,0.454950,1.982941,-5.339238,-5.158494,8.069357,-8.785774,1.321962,-5.942575,8.430442,8.896766,8.977688,7.494183,-0.474123,-1.313929,-5.851344,6.850810,-0.788071,7.887682,4.238165,-5.113088,-2.084112,6.731528,9.797608,6.980457,-1.826255,4.719117,5.534733,8.545366,-5.741930,-5.518508,8.383091,-5.139394,-4.261455,-3.226091,-3.426878,-2.812977,2.947063,-7.082147,-0.059390,8.041481,-1.223499,-4.607025,-1.129295,3.516594,-2.590207,8.367362,2.131347,4.666527,-3.057247,5.382713,9.525996,1.523584,8.855811,8.222726,2.256700,-2.550324,9.062108,-4.903790,-5.962410,-0.675449,5.351668,-1.919305,-3.871337,-0.964632,7.770395,1.395935,9.023940,-2.699734,-3.005530,-1.247930,-4.431275,7.543050,-0.947610,0.993245,1.139572,0.208144,-6.993264,9.267732,2.863419,2.234729,6.947049,2.098073,1.619972,3.950324,8.472564,1.203065,-1.516198,-5.539344,-1.332430,-1.612461,0.001986,-5.309731,2.178377,-8.806596,1.778941,-5.380447,-8.755842,-9.739824,4.395325,5.803750,8.426040,-0.037082,5.343263,-7.646404,2.365510,6.938209,-1.888958,-3.650218,9.089101,5.970638,-3.357319,6.716910,2.803083,-5.971474,3.745183,-6.862256,-3.618331,7.147919,5.320135,-8.535504,-0.382309,3.438554,2.917329,-8.614309,0.668838,-7.499830,7.523603,-9.982965,3.816084,3.602004,7.299742,0.832996,9.665934,9.396123,6.644069,8.887784,-7.514393,-7.009412,-2.221713,-0.241068,-5.514896,0.778121,9.381649,2.252303,-6.948844,3.135211,-7.729514,3.873752,8.040418,-5.025774,-9.524529,-6.847384,-4.969167,4.908963,-4.736046,-1.820533,-6.250208,-7.055784,-7.403668,-7.143662,4.856377,-9.050953,-6.179782,8.741967,-8.668244,-9.073969,9.418923,1.501728,-1.834000,-2.977806,8.822292,3.342458,-8.633382,6.896041,3.497992,1.767255,3.000762,-5.963626,3.141059,-6.691322,0.639145,8.125862,5.638349,0.561321,4.874384,-8.918426,-4.490361,-1.080018,-5.369093,1.537936,2.508598,-8.762216,-9.264000,-9.940382,-7.668196,-8.750230,-8.319894,-5.357540,-3.090467,7.342261,7.305504,-8.413865,9.102972,-3.547980,-8.578520,-9.424975,-8.783665,1.267984,1.664728,-2.937050,-1.118839,-4.295131,-8.066426,-0.776396,-5.736868,-3.612213,-7.877406,0.743070,3.289466,0.778822,-0.041693,0.815893,-0.099592,0.133827,4.570560,6.568095,-4.391520,-0.307770,-5.596889,-0.147758,-5.744384,-2.498994,7.007666,-0.350948,8.804197,8.316298,0.322355,-9.342654,9.004225,-5.233916,0.254661,-8.090390,7.065864,5.028367,7.104681,-3.074305,-9.570698,-3.663696,-8.079865,7.719783,-2.700892,1.487270,0.872635,3.493856,-9.812948,7.194482,5.261736,7.385557,-0.803321,-7.486096,-2.684005,5.418459,3.841827,0.948856,9.573720,7.890804,3.739619,2.931110,-8.859037,9.980049,-1.427776,6.279889,-3.531318,-3.531068,4.925292,-0.553444,3.528788,-3.690253,-1.724880,7.269802,-0.753516,5.768774,2.433375,5.919665,-7.256075,-3.991628,8.263294,-2.345973,7.048431,4.963490,-3.761367,-3.277497,5.618915,-1.426539,-1.875071,7.416631,9.080034,-1.775538,-0.439131,-6.593511,-0.102300,7.034246,-3.806047,9.290977,9.790081,-5.350812,0.225882,0.779299,-1.148150,-5.072011,2.797783,4.621598,-6.764237,-5.960243,8.553886,4.151531,8.087535,-2.036015,1.490252,1.420376,-6.481780,-9.532580,1.905270,-5.128767,1.818460,-4.638655,3.217889,5.935423,-5.821349,-6.002066,8.445524,9.128888,-7.062816,-0.276985,-9.131597,-4.914034,-9.174434,-7.861787,7.941803,0.961841,3.303960,0.956619,9.163348,-3.874446,-1.896358,-7.331769,8.164437,3.305953,0.533713,5.587329,5.512752,-2.346131,-5.605959,2.220967,6.425363,-8.001973,6.760963,7.829901,1.090864,-5.416564,-0.710839,9.390276,-7.952407,-9.016461,-3.602474,5.901366,0.790930,8.310055,-3.348972,8.863016,8.247160,-8.347190,-4.557039,-0.102790,-1.593897,9.355213,5.039478,-6.736665,8.769060,9.443899,-7.077454,-8.829373,-7.394280,2.582639,-2.028841,-8.781483,-1.819489,-6.677630,4.735320,-3.277599,6.197341,-1.332402,-6.804623,1.046747,9.450395,-5.333969,2.101526,-5.477058,-8.176719,2.132635,-1.532351,2.461427,-3.611821,3.562373,-9.790245,1.827413,-2.407734,-7.510663,-0.340429,-7.432693,-3.175805,0.344150,2.116661,5.139760,3.587932,0.271975,-1.637899,6.796952,-5.250029,-8.979808,-0.582175,5.809874,-7.018874,-5.909012,0.311437,-8.556779,3.965123,2.294429,3.513750,-3.474686,0.540425,3.245536,-2.355424,0.639886,9.645021,9.367860,7.943851,-6.342516,-2.407175,9.302238,-7.593933,8.717614,4.149326,-5.618915,5.882246,-1.947554,-1.094448,1.425829,-1.950963,-7.501710,-4.040251,7.673311,-6.371222,7.227504,-1.836775,-3.090397,8.206683,-6.379529,-3.298243,7.689347,-6.192660,7.441632,6.519274,7.317807,7.652987,-9.593939,-8.934010,1.797722,6.382413,6.572694,8.270597,-4.200100,-4.405862,-5.983146,-1.899441,-9.166989,9.782145,7.391353,-4.491690,-2.947883,-1.967916,-8.992241,-4.230391,3.494468,-1.341477,-2.981327,-8.936607,-5.999516,4.687279,-7.819305,6.228583,-3.876657,-5.745119,2.897075,9.946455,-1.760409,-2.786060,-9.196289,-5.605238,7.543200,-6.152585,3.420955,-6.694438,8.854363,-6.935780,1.562359,0.795689,-0.693517,-6.144790,-3.957101,7.965325,2.147459,0.950387,-8.957383,-4.505618,9.160428,5.626783,2.982169,-4.511604,-0.787802,-1.435491,-7.474585,0.893379,9.213253,9.241124,1.100093,-0.942428,-7.489059,-8.775711,-5.877618,-9.586178,-9.493531,-4.039663,-7.740880,-2.458312,8.095720,-2.515536,-9.497099,-5.472135,1.554487,-0.677440,-9.506696,-6.103930,-4.754201,7.101775,1.125695,-3.924091,-5.286368,0.593227,-0.274317,0.454993,2.340644,5.918130,8.035481,6.903817,7.284638,-8.305607,5.031701,6.995832,1.902798,-1.541896,-5.181374,-1.563529,3.643693,5.458286,-5.501451,9.443016,3.641035,6.014060,-4.812097,2.753562,-9.117188,2.965589,-1.633120,-5.614225,5.845016,-9.164682,7.954427,-0.195623,8.284381,-4.007891,-2.138552,6.305924,3.965092,2.636550,1.792857,7.746979,-4.873012,9.072354,7.944084,-5.694683,-0.556722,6.520720,-0.959148,-3.132943,7.648011,1.082484,-0.437596,7.807911,4.626638,7.986582,-4.900598,4.900143,1.376667,6.529016,-4.778384,-0.802824,8.866269,-8.636234,5.875798,5.954362,-2.754934,2.042883,4.767786,-3.060633,7.595324,9.144854,-9.261622,-0.353838,-2.445769,3.795013,0.259350,0.230670,6.240140,-4.936033,5.391908,8.921736,-4.097145,-0.822997,-2.380829,3.040721,8.813990,3.861404,3.088208,7.626527,6.261924,-9.134596,-6.043270,9.481136,9.223087,7.708270,4.025244,-5.485592,9.489002,8.510124,5.877494,1.265756,-7.379060,0.570820,-6.713177,6.231306,0.238054,-0.953281,1.241327,5.312033,-3.665435,1.369299,7.879733,0.634203,3.987649,-9.144488,1.970466,3.235166,-1.155879,6.269044,8.344960,8.325956,-8.724701,1.208354,4.276733,7.801653,4.429255,-2.704351,-5.887504,2.041493,-0.192190,0.122510,1.592327,3.090291,0.168901,-5.446122,7.089208,3.203604,4.089856,-7.005207,9.656682,-3.750844,-0.982943,0.817224,6.648489,-8.907353,4.397288,6.774573,-9.192720,-5.919917,-4.382526,3.173680,-1.829204,6.084391,4.119113,6.540688,2.542112,1.053751,-4.163637,0.927298,2.245897,3.629442,1.587688,9.059399,-6.250504,8.022024,-8.581916,-1.505856,4.645301,-9.419127,1.094226,8.840675,-1.181310,5.937278,6.852304,-5.306884,-9.498212,0.005796,-0.098164,-2.892189,3.880727,9.852247,-6.964192,-9.284414,-6.102498,-9.990443,-8.207387,-1.703378,-3.260682,2.148072,-8.716970,-5.927810,-6.192288,-4.190637,-2.694539,4.652003,-0.667617,8.323028,-5.993169,-6.604792,-3.725308,0.410270,-3.529336,5.809700,3.050589,0.645995,-5.952877,-8.793048,3.490447,-6.735416,6.695804,2.133945,-1.779767,-7.186485,4.961382,3.097715,8.080770,-4.607327,8.675062,-5.966631,7.524663,-7.136570,5.890511,-4.683514,-7.135963,-7.264840,-8.568044,8.253809,-9.989669,9.180424,3.978257,-6.701836,1.548865,-1.808909,-0.634345,1.603680,-5.931020,-7.761994,1.644827,1.728237,3.956483,8.846417,9.157158,-5.091084,3.821302,5.465316,1.071068,8.484875,4.739727,6.784207,6.358248,0.960324,-7.125402,7.391624,-8.839143,3.064079,6.288269,0.195051,-8.335122,-3.606272,6.463918,-5.393373,3.289656,-6.958539,2.939676,8.643656,-6.498923,9.503082,-4.205311,-6.476279,7.245306,-6.782208,6.069161,1.015376,1.102687,4.721493,-3.457511,6.781160,2.813372,-4.518425,5.761671,7.973382,-8.478766,7.097005,-7.037375,6.465741,7.147808,-7.626787,9.142349,-3.719172,3.308374,5.347571,9.691648,-6.066259,-6.383543,-5.171749,-7.498377,-0.933084,-3.790596,2.831767,8.115490,-8.320612,-8.295624,1.428584,-8.681098,-2.562071,4.633794,5.384732,1.982144,-1.905869,-9.462694,5.546652,-4.675160,8.297122,2.424933,9.813448,8.016249,-4.319652,-0.873366,5.374690,7.365674,8.129649,-0.703692,-4.076540,-9.184360,4.259960,0.089591,6.194809,-8.695046,-2.263369,7.800768,1.221202,4.795422,-2.246935,9.045468,-1.341595,4.984818,-8.593926,8.942080,0.100721,0.987277,-1.488666,-3.749226,-8.313047,3.779385,-3.776159,0.376103,5.388910,0.267837,-2.550241,-9.614722,-9.861682,-3.671755,1.561469,2.281798,3.682289,3.355310,2.218079,3.086938,0.461812,-9.377144,0.211641,1.098085,-3.491022,-1.746580,0.465601,7.150899,7.725121,-3.672364,5.525970,3.818805,-1.653711,5.703495,-7.708615,-5.574210,3.189021,-6.354694,-2.759526,8.113969,-3.703255,7.892579,-0.210638,9.567701,1.255347,-7.073275,1.432368,6.331425,5.653984,5.567083,-5.837297,8.398952,-5.107922,-0.370351,2.630224,9.594594,-7.161410,5.923553,-5.242883,-0.606086,6.318470,-2.371607,-7.520643,-9.377277,-3.883329,-1.874397,2.569993,-9.918942,8.615382,-1.507428,4.035790,-9.444692,6.180422,-1.165965,6.235662,5.412251,-4.867364,3.957288,3.771309,-9.722066,-8.582299,-4.224056,-7.366419,6.221397,-9.477634,-9.294583,-9.759068,4.442494,-0.242432,1.027858,-9.639068,-4.631348,-0.847969,7.388361,-5.270510,-4.671549,-8.913687,-9.334744,9.614141,-2.617276,-4.273986,4.869350,-2.112378,-8.216934,5.335211,-9.725743,-9.813475,-6.390090,-4.474737,-4.899404,0.965431,5.382018,-4.897547,-4.540864,-8.428013,4.935526,8.369174,5.683143,6.598725,-1.294519,9.919687,-8.748329,-4.802698,-4.053498,-6.890205,3.148124,3.716484,-3.808133,-4.774424,-9.597129,2.651173,6.319362,-5.507065,-2.768238,-8.386637,-0.841585,4.776233,1.038125,4.675013,2.668169,7.359757,4.881352,8.641987,-6.815953,-6.376261,-9.272641,-3.555630,-0.558872,-9.503505,-4.460467,-5.700953,-1.408703,8.984125,6.273255,-0.339204,-0.787110,4.546311,-2.591476,6.543185,-7.173275,7.039119,-4.977307,5.549873,5.416792,2.020729,-4.453210,-5.544747,-6.526077,6.611011,1.666859,-6.509767,4.970548,3.609060,-3.282096,-5.014049,2.481068,-0.531249,3.941572,-3.841292,1.635385,-3.981287,6.898623,7.435276,-4.862512,1.940443,-1.358618,0.483315,3.833808,1.105682,-7.952615,6.185399,-9.929733,4.263786,6.304912,-6.255446,1.267410,-5.091656,7.354952,-1.452129,-6.030269,7.630906,1.068190,-8.645646,-8.884919,3.622676,9.812346,-8.791091,-4.048623,5.369421,0.816737,-8.464088,-4.684659,-3.863877,-5.692597,5.817870,-4.429656,8.404064,-5.565798,0.119426,-3.517961,1.531561,0.730001,7.353531,2.785884,7.524392,-0.202902,5.679413,-8.303425,-9.813115,4.381584,-8.608283,2.675151,4.671061,2.526405,-7.313532,4.830953,-8.200232,1.046903,-8.183709,-3.363712,0.617590,-2.767581,-8.181170,-4.455225,5.117874,-3.655201,-5.572601,-6.777451,8.169436,-3.950537,2.685268,3.663125,-9.076847,4.617216,7.420092,-5.060605,-2.370933,-8.038977,8.400788,8.516166,-6.665505,-8.798907,6.146969,-1.247579,7.248037,-6.755523,2.971261,-4.163260,-1.798553,-7.521072,2.374608,9.769552,2.407382,-7.147380,-5.325507,-9.320735,-5.975317,7.468364,5.988745,-7.666771,-9.143861,6.111592,0.792235,9.971047,7.878351,6.518854,-0.348227,-7.671766,-5.873777,1.101236,-2.267749,9.254118,-3.726662,1.886488,0.157181,-2.525845,-1.582902,7.321844,3.875168,-5.925028,-4.430125,-0.339000,-4.923960,2.232465,8.642437,4.712962,-0.067238,-3.135602,-0.580602,-5.155656,-9.241633,3.875318,-1.803995,-4.090487,-2.390377,-2.231802,-6.278373,9.882314,8.897139,-0.975152,8.994933,-0.019106,-9.206511,3.493646,-8.188712,-6.337705,-5.721752,-8.140024,-7.461834,4.196720,1.574770,-3.328191,-0.319141,-5.792994,-2.618661,-9.455982,-2.148480,8.311299,-1.259545,4.264046,-7.657410,4.600032,-2.149367,8.858116,-4.551155,7.363715,-9.221970,3.916398,9.005498,-2.940493,-7.758064,-0.083693,7.285216,-1.091167,-0.782852,1.179954,1.763378,6.969517,-1.093326,3.245672,7.210689,-4.410459,-3.674570,-4.784761,4.804312,9.805826,-5.580848,-4.899498,2.235486,7.846087,4.868375,-5.908595,8.169857,-0.671897,-7.915141,-2.397089,-5.936561,8.837015,-2.629338,-9.483193,-9.927859,-2.943217,5.418100,-7.616709,6.584947,-9.173181,-8.934153,0.238791,3.274295,2.891493,0.467555,5.813596,-2.729953,-2.925758,5.223794,-1.953576,-3.608744,-1.641098,-7.046867,-1.284203,-3.293372,-1.896158,4.639057,-8.806484,2.252680,-4.790539,9.364712,-9.868173,-6.915166,-1.891759,2.568193,2.040602,0.237227,-7.381477,1.970409,3.813390,6.981093,-8.953628,-4.360640,6.284475,5.076185,-4.796271,-6.909589,-8.128646,-4.985653,-2.392035,-0.846652,3.686264,2.340548,8.136594,7.896148,-3.385955,-9.765477,8.123657,8.863924,-7.410767,9.629312,3.431319,5.534335,-2.978246,-1.961804,3.096417,0.071793,0.810660,-3.867767,7.728399,6.224791,2.307473,-3.545615,-2.634312,2.300422,-1.487353,-8.341516,-6.312995,-9.715444,6.556809,0.409604,7.373214,0.931938,9.472496,1.757969,3.652388,-0.062020,-7.439405,-2.605878,-7.913093,1.386574,-7.074980,-6.361168,3.756309,1.572710,-7.043275,4.052503,8.288166,-4.195905,5.767795,2.648065,-9.828800,2.140558,7.403840,-0.515314,4.512763,-0.702328,4.819981,6.625070,7.141410,4.657559,0.799885,3.441283,1.599123,-6.781211,0.336034,-2.097960,0.394101,-3.001647,8.873166,5.263889,-1.037028,-2.753678,-1.506033,-4.827743,-3.063049,9.918289,3.293060,6.025059,-3.192900,6.199455,2.949198,-3.126550,2.476560,4.746255,7.586670,9.657056,5.911584,5.320239,9.782243,5.745272,7.835905,-2.404730,-5.731589,0.151996,0.368702,-9.438970,-9.984529,0.701132,-5.617300,-3.617173,8.031019,8.972085,6.949721,8.700775,7.530833,7.513092,5.839874,1.840974,6.028075,4.131228,4.782469,4.975262,-3.236926,1.339800,-6.618384,-2.856939,8.735274,-7.255357,-1.981875,-0.319578,-5.263969,-2.397130,3.413692,9.723029,-0.758102,4.614670,6.786383,-6.560857,9.151828,-6.666673,9.453231,-7.208412,-5.562615,-8.677255,-7.326820,-7.401843,-6.439389,-1.570732,-1.521962,-1.509178,-0.872242,-2.991681,-4.801747,3.142889,-3.016220,1.008979,-6.301546,1.852466,-6.279793,2.360164,-6.550261,-7.607665,-7.739879,-1.828707,-9.978303,-7.267552,-9.532090,-7.126037,9.623297,-7.795422,0.597977,2.336452,2.626819,1.658843,-3.546468,-9.362774,-1.860492,8.039231,-2.119344,-2.327071,-4.441213,9.633595,5.031992,-1.699492,-2.955836,7.512211,-8.543042,6.766943,8.309244,-8.745524,-8.010598,-6.762122,1.850662,9.163225,2.764945,-6.831752,-1.272038,-5.145991,-5.125683,-7.947290,0.769696,-1.887395,2.972546,-8.493797,-1.837908,-3.492997,6.850813,-0.792824,8.344498,-5.091310,9.094502,-3.384827,9.850418,6.340060,2.080407,-9.744801,9.426898,5.330371,-7.039813,9.578704,-5.907101,8.336058,-4.240845,-9.484556,-7.927954,-4.718402,5.162795,3.051741,2.976149,-0.716652,5.983869,-4.535067,-2.509098,2.055673,3.081531,9.622577,-5.899316,4.660745,-2.782839,-7.211257,2.815196,-0.146144,-8.247247,3.844560,0.454552,-3.549382,-6.204865,3.566492,-1.360174,8.159179,-8.622681], dtype = "float32")#candidate|7758|(2250,)|const|float32
call_7757 = relay.TupleGetItem(func_7024_call(relay.reshape(const_7758.astype('float32'), [15, 150])), 0)
call_7759 = relay.TupleGetItem(func_7027_call(relay.reshape(const_7758.astype('float32'), [15, 150])), 0)
uop_7767 = relay.sinh(const_7758.astype('float32')) # shape=(2250,)
const_7776 = relay.const([8.864865,-1.209006,2.815587,-3.952095,-6.074490,-9.853332,-8.588135,4.965580,6.981047,-1.789327,-7.432059,8.905918,-5.362239,-3.480167,-7.281232,2.298285,-6.304405,-0.019104,5.797024,-7.070823,-4.254418,4.973847,3.938436,0.948515,8.214038,-8.806214,4.078609,-0.204571,-9.470672,3.358033,-4.432752,-5.052356,-8.022049,-6.336713,7.566028,8.315279,-8.056636,-7.837805,-9.398271,-2.684356,7.244203,3.209877,-3.076140,-3.259006,-6.081636,2.635701,-2.119979,-1.099060,-3.684273,1.969502,4.751027,9.619717,2.786666,8.803560,-5.924082,0.006169,-4.688959,-8.427558,-7.013533,-3.881725,-8.294966,6.106249,1.588096,0.740739,4.976072,-4.719815,-9.073721,-6.441412,9.049444,8.493863,5.936417,-3.880098,4.640432,9.428982,4.801068,-8.746031,1.488076,8.522866,7.045633,7.181631,5.471393,-3.192290,2.191187,2.183562,-9.977333,-2.704069,-5.946651,-8.550350,-0.084579,0.713743,8.642386,1.412204,-4.360178,4.219652,-8.589521,-4.667602,-5.891856,9.359519,9.075356,0.500162,2.400711,7.065447,-0.174580,9.826450,4.599892,-8.570577,-4.668667,-5.672405,-6.253530,2.461312,-9.072490,-2.801437,-9.540696,-7.391075,8.960962,8.637770,-2.160317,-0.259729,-2.401055,4.793244,-2.460392,-0.224723,1.870515,7.769936,3.274820,-1.573754,-4.526399,-0.583647,-4.370535,-6.831489,-6.638109,-3.386199,7.512207,1.172767,-2.617750,8.549228,3.011467,-3.971071,-6.990063,-2.932030,-1.377966,9.319773,-0.043996,3.644392,7.572299,-2.738347,2.100207,-1.696010,2.051496,6.761437,-5.998850,-4.122329,-0.698590,-0.956433,7.647076,-4.456127,-9.961330,-3.576298,-9.075602,6.904153,-8.990323,4.792831,2.721720,-8.890008,-8.767248,-6.141993,-3.434218,-9.667629,0.260812,-9.061029,1.542804,-3.782967,-4.350371,-6.120008,-2.668515,-9.165486,1.654185,6.191623,4.317429,1.906710,3.128731,-7.772767,2.951258,-8.586574,-1.895270,2.281457,-7.390773,1.890088,-2.595526,2.027183,8.731052,0.404589,0.528910,8.837182,-2.987151,-9.198887,1.401199,-7.589310,0.087575,6.947840,3.987501,-4.502764,6.501015,-9.452766,8.887930,-8.638550,-5.542088,-6.574437,-6.179661,-3.237395,-9.776946,-3.626148,-1.666097,-0.819807,-1.471956,6.894003,-1.984602,8.329983,7.236494,-9.249931,4.555220,6.719400,-0.009823,5.615278,-6.581252,-0.375311,6.892479,-8.513758,0.157325,8.128559,-7.777067,3.746569,-5.631052,-7.494086,-1.286994,3.532576,-0.178974,9.070658,-1.910780,0.055867,2.751844,5.274982,7.416063,-9.226319,8.207313,-5.163944,-3.420862,-5.763794,-8.925079,-3.109246,0.470065,-2.334913,-8.533934,3.285672,-8.273717,8.547273,-8.901016,-2.108666,-0.799475,-1.315439,3.474579,-6.253036,-9.467507,-8.405144,3.907310,4.034238,-7.682596,-3.131122,-9.899179,4.741487,8.916704,-3.499381,-0.012783,5.842191,8.287966,-2.401382,-5.741267,-7.569175,8.319885,9.080313,4.462978,-9.058288,-6.600161,-6.177348,-3.940314,9.623409,6.953979,0.741144,5.062200,-6.151484,-2.542541,4.611632,3.644210,6.235414,-3.642332,-7.585498,3.155556,-8.978497,3.969400,-5.336064,-4.623261,0.206829,2.242149,9.049664,4.772938,4.486058,-8.074062,-1.051734,-7.269105,8.863112,-2.579510,-6.473543,-2.352116,2.543233,-6.828110,6.222914,-6.965649,-9.413181,7.494065,-9.478435,9.038666,-4.872986,-3.612687,-0.573434,-2.553562,8.031384,1.761480,-6.832389,-0.969026,9.645051,-9.609183,-7.880483,-1.197504,-5.703199,-8.181819,-9.222540,2.429466,-5.127215,-6.627410,-2.656879,-2.064027,0.439718,-1.503266,5.125887,-3.514507,3.754073,9.294218,0.095983,-1.099979,7.438523,-4.044029,-5.110194,-0.818757,8.543312,5.070942,6.151012,6.883818,1.706924,-4.651813,7.447217,-6.591981,1.826543,-7.445462,5.234315,6.561917,2.389433,-5.620848,0.185292,-7.992796,0.918610,-6.535129,6.083301,-3.811577,0.824880,6.092913,2.685487,1.705025,5.596374,3.341045,-4.583538,6.293929,-0.907031,-0.155058,-8.086771,-8.936554,-7.607780,-1.464485,-9.971215,6.262192,-6.411397,-3.547063,-2.617602,-5.319746,4.243840,-0.123994,-7.609924,-2.700796,0.339177,-0.764073,7.489175,-1.891154,-2.710097,-1.689623,4.354582,-8.887794,-0.395151,4.341724,3.093837,4.824132,8.240622,-3.930838,8.935377,-3.301467,0.048707,8.394737,1.367740,1.709093,-6.475912,-5.405404,9.994146,0.894483,-1.461721,-0.943564,4.869094,-9.318513,4.121728,-7.307723,7.449821,6.567978,-0.835929,-5.158629,-5.096267,9.374335,0.590383,-5.083782,-4.243315,-2.804786,-4.552418,-4.171912,-8.311534,-8.619577,-8.869597,1.755002,9.107303,-4.288998,0.326869,7.267719,-3.223684,-1.069834,3.070808,-8.092216,7.234740,-5.947913,6.513472,8.991003,1.133862,7.726314,-3.230136,-6.777176,-1.409376,5.210767,4.880098,9.479131,2.824338,6.985483,5.807398,7.756657,-5.652881,-9.595115,-7.393120,-6.915314,-1.953195,9.197448,-8.076015,-8.691526,3.508142,-8.742857,0.777714,-2.849063,3.229134,2.304929,-7.655001,5.747193,-4.180029,-1.325244,0.941619,-7.649264,2.718199,3.620279,0.316994,-6.844797,9.066264,2.897338,-4.789374,-7.899815,4.134184,-4.761206,-1.016937,3.456635,-1.364884,2.386963,-1.223502,3.453406,-6.226643,6.419791,-5.007876,-5.303269,-3.085327,-8.013851,7.017505,-8.514492,-8.438664,-9.040513,0.343210,5.902942,-1.581978,1.213077,0.255828,-3.177892,8.299052,2.216033,6.339369,-7.783148,-7.309270,-0.108705,6.168594,-2.517367,-1.443635,-4.435121,-2.827528,2.010895,-4.761373,5.645935,3.949853,3.860502,5.773517,-5.059116,-8.581293,-6.042125,-7.262878,5.797806,-1.736169,5.353891,-6.802555,-8.200584,-3.219830,7.137918,-3.303373,-0.189458,-4.697247,7.752257,-0.930551,-5.578640,-4.031023,5.614519,-0.083817,-2.541468,7.233808,8.993578,2.755772,-8.935020,7.932624,-3.492362,4.275709,0.891693,5.405296,2.324478,-0.811686,-8.426976,3.725071,8.030476,-0.029271,-8.634453,-8.188995,-6.408320,8.049892,0.235260,-4.554722,-1.045792,-7.311573,-3.315749,-9.657968,3.529917,1.653870,9.965191,-8.270080,-6.168616,-8.431747,-6.336861,-7.040452,-1.767062,7.522270,-0.794108,-8.087410,9.745214,-8.254973,-0.769967,-6.413059,-8.967661,9.044719,-0.453716,-8.326407,8.819314,6.808870,7.842515,-8.959449,7.061890,4.566211,0.512351,-4.100719,-5.379723,-3.085109,-4.060165,8.064706,5.132436,-8.220816,-8.939163,-7.334998,-3.343100,1.528949,-0.113027,0.696013,7.873081,4.203949,-1.610344,-2.513009,2.007622,2.627803,0.244596,-7.032521,-1.469910,-5.893690,3.211592,-0.136535,-4.028668,-8.547317,7.175722,-7.903036,-3.948911,8.281460,2.430274,-6.809146,1.216505,-2.043143,-9.472672,5.527882,-1.789008,1.005316,-6.716331,6.033971,7.724280,4.802420,1.815138,0.119630,-9.941705,9.914291,-0.379997,-0.344423,2.563566,-7.970706,3.925483,-0.428617,5.580236,7.646577,4.579675,-3.762211,-2.420604,7.403594,9.877329,-0.084272,-0.310885,-0.951938,3.918494,-6.915413,4.556720,-7.305750,-5.262727,-6.136632,-3.424723,2.981222,-7.887947,-6.356297,-9.475018,9.996961,-9.240099,9.862842,8.572834,-2.484831,-3.616172,1.460674,6.964007,-2.248132,4.111410,-1.017346,-3.413160,0.089818,6.426045,-3.561257,-9.257737,-2.111027,1.174963,3.476178,1.382068,2.215114,-3.591370,1.526495,-0.922763,6.826341,9.435416,3.206115,4.306382,-3.916463,-8.118905,-3.065534,-8.644949,2.096775,-6.644319,-6.581601,-0.945196,6.404016,2.834484,2.961642,-0.675506,4.139905,-7.248341,-7.473541,3.934903,-9.082201,4.565231,-5.607916,0.968483,5.603210,-8.526435,5.689773,2.855771,8.196248,-5.704857,-1.334069,1.736956,-9.395070,-7.758729,-7.824665,3.350438,2.301474,1.865927,4.752431,2.336422,0.534782,-2.380283,8.203160,9.312304,-6.832799,1.043660,0.674079,-7.719559,-7.638560,-6.993576,1.043339,0.300866,-4.742237,-8.351569,-5.915045,-4.309725,-4.796938,-0.809477,-9.781815,-6.977010,0.256232,3.965251,4.075111,-1.403800,-4.400077,-7.422724,0.072500,-4.457913,-5.162727,6.682191,-5.877368,-8.473669,-4.194491,-9.199682,8.414107,-7.064809,-4.694593,8.496650,0.563406,6.618466,-1.046199,9.065256,-5.025093,1.304876,0.436302,8.978824,-0.685266,-7.190317,-2.934930,6.182800,9.827362,9.758927,3.952261,2.924259,-8.469075,-3.452685,-4.147730,-4.188319,0.504740,-6.060945,-0.486908,-3.072886,4.905909,-1.484384,-4.396150,2.983305,4.723216,8.661114,2.623174,5.657347,-9.831783,-7.938803,-5.471433,0.257563,-9.679688,-6.714782,7.145763,0.574184,7.099858,-2.134526,0.052272,6.424608,-8.006500,1.692946,-0.199254,-6.345462,-7.711621,0.359998,0.946108,-5.468222,-1.299918,6.431136,-6.525858,1.147313,-1.816164,8.067894,6.468643,-3.331591,9.971888,-9.986946,-1.990049,-0.312790,4.253535,9.578872,-8.735389,9.647927,-9.226997,-0.495523,2.235515,-8.517761,-0.636689,-1.034503,5.183880,9.761899,-6.291185,-5.435235,-0.193946,-9.629698,-0.375758,9.197056,0.005840,-4.814038,2.171453,-0.747438,-1.059485,-6.362248,-9.248317,-2.867476,1.522180,1.089795,9.493426,-6.101666,-1.639508,-9.119211,1.696210,-9.997640,-2.531044,-8.177107,0.218988,-6.011815,-1.562960,-9.755464,7.880224,-3.205869,7.349824,3.857285,6.451084,-5.174077,-9.675949,-7.029298,-8.991693,-8.080582,6.118304,-6.355194,-9.794181,-6.817172,5.668234,8.920938,-5.731823,3.817314,6.291865,-7.519021,1.063343,3.574341,3.753359,0.348521,-2.313806,-6.418668,-2.052997,-8.471286,-2.244233,5.496341,-5.316890,-7.958771,-9.181406,-2.762320,-0.653898,-1.997201,0.624132,1.192993,-5.161830,9.468045,2.466570,-3.428808,-8.180767,-4.479317,-0.166542,3.687278,-8.115586,3.092950,6.984944,5.187153,-3.266751,3.631345,1.733035,4.884145,4.791875,-6.154658,-7.172980,7.673520,4.524688,7.385421,7.205853,-7.096569,0.313207,5.200914,8.999377,-9.401217,-3.742671,-6.888542,2.929818,9.101444,-7.939164,4.242961,0.653452,6.740695,-6.747764,-0.303568,0.712460,2.407056,-6.075141,-9.906512,6.015331,7.416114,-5.232662,0.699415,8.349279,1.624495,-1.682415,9.195227,6.924538,1.894475,7.048283,2.930962,-7.309239,7.073490,1.345237,6.167634,1.613242,8.117434,-4.296781,8.115191,8.256195,1.351627,0.469052,8.114730,8.996473,-9.578457,-3.541697,-4.885156,-0.176167,0.827294,7.432467,8.964252,-9.923210,-0.385419,1.480351,-8.599806,-1.207616,6.110243,-3.711947,-8.545937,4.163685,0.598735,3.873390,-1.961457,5.529041,1.542994,-3.099250,1.555287,1.661805,6.488368,4.582941,-1.775142,1.142106,6.280172,-8.760784,-3.053673,-5.130981,-6.149091,2.592354,-7.667668,-5.495897,3.737347,-8.887148,9.567084,-9.701943,-8.956491,0.832841,-5.519889,-7.901912,-8.650473,1.528305,-9.658592,-9.145663,8.236066,-2.155461,9.823799,-7.377346,6.624085,0.523974,-3.782536,-0.840222,-3.185996,5.375886,-2.229307,-7.760553,4.424110,5.606086,-0.940398,-7.937639,2.807871,5.190110,2.269652,8.073763,-3.738443,-6.908475,3.450446,4.833695,-2.994870,-5.082550,7.656570,4.462696,-1.927979,-7.273501,0.586329,1.702235,4.202741,8.379751,-8.772169,-6.868049,7.289596,3.844526,6.112840,-8.120195,-6.722374,-4.803644,-2.938518,-5.829238,4.440115,2.602885,9.505690,8.298759,1.931709,8.137856,-0.272746,-0.462294,-5.895797,-3.232693,-6.311310,7.591983,5.723915,-6.013469,-6.848165,-4.320711,-3.886925,-0.835032,-1.348821,-9.378019,-2.425331,8.208311,0.927673,-6.564075,-2.390968,6.751737,-2.953972,5.251752,9.855263,2.693837,-9.967012,5.891129,8.534009,-5.248745,8.063995,2.248725,-3.160466,-4.752613,-1.104372,-8.551625,5.512740,4.162644,-3.631207,7.558470,3.909208,0.918751,7.158206,-6.255767,-4.444975,-7.309785,5.195940,7.382117,5.917189,-1.964032,9.227861,-5.214251,-8.896614,-1.815724,-4.068259,-2.292684,-7.068791,9.465599,-5.110516,-7.672274,-7.824336,6.066522,-6.984373,9.448979,-8.732294,4.166201,-1.599884,0.427213,5.821888,-0.403905,3.893857,6.653774,-3.333960,6.784821,-8.622805,-4.435798,6.052079,0.112464,-2.172658,7.364770,-4.891089,-4.040211,-4.011558,6.655910,8.356860,7.900635,4.890503,-0.004426,7.842087,-4.830455,3.525266,-5.492392,-8.971765,-5.826802,-8.051055,-7.817174,-6.378673,-3.670184,-6.875658,4.305781,6.715242,-3.428262,2.960938,-3.113154,3.161225,5.988276,8.410567,5.559017,2.063942,4.916128,6.709433,-5.737416,-1.713779,-3.118853,-2.447275,1.880056,-6.899303,-7.547880,-4.812168,-7.342731,-5.520410,6.604238,2.332782,4.829597,-4.922827,-4.265250,-1.004929,-0.867076,5.014913,0.043536,-5.632682,4.595813,0.475891,-7.535214,3.315148,0.779536,-5.115482,6.372927,0.928968,-5.538861,7.405629,5.778789,1.168651,5.465423,-7.801788,4.160678,1.661470,1.486154,-7.475095,-0.005515,-5.404876,6.276080,-2.666110,-2.686434,-8.198393,-4.500129,4.850289,7.464930,7.503008,-6.757538,-0.492697,-2.628066,-8.108445,-4.955944,8.943713,-7.890543,-8.084998,9.249504,2.177949,-9.960018,-6.192757,8.826235,-7.027343,2.735337,1.891582,4.303027,2.527614,9.665805,1.136413,-2.250849,7.182782,-4.546031,2.263547,-8.177036,7.120211,-1.171821,3.086808,6.248304,-3.722144,7.983550,-4.890011,9.499438,-8.502391,-3.870746,-9.533124,7.605807,0.289054,5.278425,8.021524,7.330368,-0.810014,-1.791784,-6.502390,4.064050,-7.421409,-8.489592,7.979605,-1.413403,7.425234,4.440673,-3.702000,9.028010,-8.853030,-8.774633,-8.566670,-6.278355,3.097013,3.024993,1.097878,-1.304755,2.667594,-9.992047,9.223894,2.261260,3.151654,-0.282558,9.988354,-5.933790,3.177349,5.856114,-8.332581,-7.260947,-5.943860,1.526735,4.248167,-4.372904,5.113719,0.298028,8.489101,1.613524,-3.548850,-9.009458,7.109688,2.074422,9.617216,-6.827155,8.107173,6.151064,-0.784903,3.982099,5.627627,9.370537,-1.508793,3.293890,6.700676,0.118074,-2.841775,8.815297,-2.305286,-2.900604,0.501320,4.140915,-8.367478,-9.452687,-2.494123,-2.099744,2.127718,-0.443496,-1.862488,-5.445904,-7.329999,2.977792,8.547702,-2.011055,-9.365522,-2.677384,3.359508,-4.596675,-5.422783,0.350029,-1.492944,-1.009822,2.094009,0.022626,-6.454538,4.613618,9.999833,-2.856334,8.898302,-2.669778,2.695041,1.266611,6.535967,-5.137138,-0.022277,-8.046226,5.499840,7.102769,2.400730,1.517028,-9.337065,-3.188583,0.751460,-2.527786,0.162526,-9.367414,9.728412,7.351704,8.726263,0.092445,1.671939,-8.978868,-0.219577,7.090389,0.525249,-0.400281,3.935590,7.184931,2.847934,1.517759,9.395253,9.651298,7.164110,7.730979,3.928027,1.472921,-3.032034,4.789529,5.781990,-3.943209,8.939205,-3.838274,2.834031,-5.306315,4.764426,8.228471,1.875641,-6.135765,5.163025,-4.078236,-3.866620,-1.751220,5.293106,6.220619,-6.711735,9.401385,-3.914045,4.328517,-3.841634,-9.425102,8.943407,-6.269751,6.895356,-9.550639,-6.544897,3.932840,-1.027075,4.191330,0.963003,-5.856973,-4.403567,-5.151637,9.970036,-6.775495,6.172910,5.942095,-7.777613,3.217382,-6.635730,-3.058667,-2.956686,6.060179,6.753402,2.248407,-8.220710,8.960468,9.885248,9.832647,0.255682,-3.766899,5.162844,1.371652,1.352348,2.511866,-5.225502,-1.473555,4.541370,0.356871,-9.673975,4.221649,-8.963482,2.892166,-3.184450,-5.986252,-7.576741,-4.594588,8.311365,4.209530,5.691341,-5.266914,5.256092,-2.979345,0.847698,1.183524,-2.002792,-7.570080,5.927527,2.624005,-7.414466,8.360163,-3.307523,-0.780196,-8.097748,1.311710,-3.756646,8.192458,-2.977907,-7.690481,-0.931594,-3.300065,3.634870,1.820239,-1.757648,-1.035264,4.012984,-3.086410,-6.714349,0.417117,-1.851342,-5.599437,-2.251127,-3.298153,3.386587,-5.617922,8.832412,5.562258,8.640070,5.625614,4.859726,1.545996,-5.515650,-1.098088,-3.881810,6.029427,-4.562402,-3.381199,5.855442,-6.187283,0.881882,-8.601561,9.773320,4.237905,2.296228,-4.368038,1.269962,3.007411,5.790238,-6.127028,8.838705,3.185316,8.883017,-2.472258,-7.768123,1.252330,-6.779533,-7.961558,9.278009,-4.174451,4.433344,0.746309,-2.238161,-6.287363,3.266615,-5.030881,-2.216392,-5.582638,9.766471,-2.983474,1.260785,4.617658,-1.072883,7.950121,-2.907862,-0.533498,4.122934,-1.321957,-2.570321,8.797752,4.646351,-0.185129,7.119791,8.291858,9.801428,0.623274,2.753781,-1.982066,-1.333965,-9.948729,-8.625485,-1.680642,-3.802797,1.922509,7.229630,-2.794686,-7.179288,-2.067764,-6.004088,-3.022070,-5.333690,-4.366379,4.403941,1.882209,4.581679,-3.198361,-2.180066,6.312807,7.677615,0.653905,0.863868,0.195834,-2.691456,-0.595829,3.797408,-2.217698,-8.187757,8.882750,-9.388434,1.014957,-4.221535,4.287355,5.375530,-4.435649,6.472181,0.974445,5.575801,9.990018,8.384384,-0.906275,-3.374961,-0.651903,-1.557587,-5.092060,-0.422766,-2.253646,0.978159,2.500272,-4.183065,1.322068,9.071102,-1.790607,4.649332,-5.168776,5.754560,2.322946,9.492873,-1.182571,-0.092721,-1.037771,4.681202,9.621520,-7.512970,3.220218,-2.240997,3.219031,5.455299,2.862267,7.186638,5.553109,-2.553718,-6.095412,-7.997417,7.525201,-1.603686,6.696706,-8.822651,-8.584513,6.157345,3.363405,1.305055,2.334211,7.565571,5.869645,-6.558399,2.366613,-8.570450,8.523059,5.086726,9.841396,-8.571852,1.746724,9.524489,-9.256716,9.210235,0.636704,-9.347554,8.264134,3.078417,-7.176765,-2.278610,-8.261727,6.600968,4.620017,3.407832,-2.187685,-9.403886,-0.436566,-9.455597,-9.111905,5.719981,-6.487249,2.851216,3.653060,-6.481725,-5.941420,7.102591,2.681326,-1.914948,8.806563,2.605332,-2.880008,8.380701,-8.379275,3.887697,2.513116,-6.088757,-0.296524,-4.968600,-6.807078,5.429821,0.431179,2.812345,0.166850,5.633355,3.046501,7.620301,-6.713132,5.613613,-2.414362,-3.755895,9.242040,3.978065,-3.595611,0.737960,-3.452508,0.969414,3.818906,3.428112,8.610364,-7.875348,7.094017,-7.039930,-7.686259,-3.991286,-9.929862,1.193716,6.104997,3.896546,-5.708907,-9.418098,2.404684,-7.110770,7.325812,7.759606,-5.276050,3.871861,0.727234,-0.615918,8.559036,-7.126141,0.914994,4.061756,-9.214264,-7.336545,0.460018,-0.651743,-6.284838,-6.839873,-0.059642,-9.116144,3.558345,-2.696447,2.182844,-0.464758,-8.092750,-4.591891,-5.410884,-4.683548,-6.283377,9.019359,-3.750234,-4.198318,-2.732166,-3.603363,1.507350,-1.398175,-0.039455,8.054547,3.440924,4.705374,3.678324,6.223609,3.784437,-8.397783,-4.410125,-0.282697,5.733113,5.275867,7.099180,-0.586625,0.053358,8.293638,-5.188441,8.410450,-8.272979,6.674558,0.709538,-6.330002,-3.316015,-0.580848,-1.341877,8.308591,-8.610478,-2.410266,-4.276500,-8.122230,0.391595,-3.097903,-7.261852,7.337506,-9.879998,-6.349522,9.469166,-6.417587,-9.007942,-5.469003,5.160678,-7.296366,-3.215267,7.065335,-2.398500,-0.655724,2.126469,2.426789,0.752924,4.883179,4.786717,9.159151,-5.197902,-1.057076,-5.337105,5.830436,7.873066,1.895698,-9.236958,-8.715816,-9.603536,-4.755416,3.662591,-1.292634,-0.510745,-9.821225,2.432310,-5.094492,-6.008609,-4.668792,7.954625,-9.826915,-2.847754,0.027140,7.580708,7.231399,-6.426735,0.431634,4.726621,-3.612613,4.555594,7.284784,-9.701240,-2.794199,-6.537441,-0.981195,6.391762,-2.976073,-6.338903,-5.446737,-5.904845,-9.272936,-8.467818,-8.655452,8.334043,9.831206,-1.506667,9.369011,8.347659,7.430463,6.076786,9.539732,-1.048617,-9.629952,6.554330,-7.698754,-4.094902,4.080428,5.665843,-2.994278,-9.637077,8.937154,-3.633482,-7.205133,0.630940,9.454736,7.631793,3.811914,1.895483,-7.603204,-8.567158,-8.136554,6.848109,4.217989,4.590697,3.368130,-5.648780,-9.178217,-7.835634,-5.712574,-1.789751,-1.819506,-4.079889,-1.754553,0.853438,2.692227,0.835772,-4.591096,9.564057,7.905335,1.682843,-9.024885,-4.075132,-0.439225,0.138734,-5.088260,-9.286608,4.794645,-2.991338,-3.484928,4.454158,0.381370,4.634838,1.652504,-5.530911,-0.585830,-8.834369,5.065038,5.159793,8.770309,-8.009703,4.434585,-2.360813,6.645896,-2.631438,-8.542586,6.872252,-1.123548,3.318260,5.708590,4.775838,8.738363,0.941431,-1.524828,-1.384121,1.786086,4.247195,0.839049,-6.923388,-8.989170,2.513446,-8.408173,-1.002652,1.227889,-5.307642,4.775878,-6.788930,9.801579,1.885151,6.628062,1.184389,-9.414461,7.363752,-9.575188,4.269182,-3.493622,2.014050,4.534512,9.763858,5.365547,-1.389652,2.772055,3.763209,-8.402930,-0.182060,-2.231334,-8.811944,-8.808648,7.368085,4.502325,8.299825,7.641821,-0.951367,8.930431,9.457894,-3.889026,7.134746,8.814521,-9.615875,-8.054963,2.225053,9.620048,8.911012,6.144264,-9.866720,3.222765,-4.090320,3.948365,-7.582205,-1.871504,4.898119,9.909891,1.252093,-4.622015,-6.714393,-8.941634,9.769194,3.986639,-4.840636,8.544920,-5.688782,-3.460675,2.763168,7.179264,-6.269966,-6.582765,-8.201310,5.975127,-9.560088,-9.015217,-3.521781,-6.020510,-4.201705,-3.184364,-8.172067,5.151461,7.904946,9.467063,4.557582,-3.050716,-1.398044,-3.682294,-8.960273,-2.508126,1.670707,0.097391,-2.350218,0.855126,6.350993,6.134389,-4.980840,-1.599747,-0.213567,-4.367483,1.211427,-0.625468,4.688971,-5.905270,-3.638859,-3.233824,5.861326,4.815026,2.778825,-1.350946,-3.768444,-3.801160,6.583520,-8.740992,-4.365827,7.800826,1.639482,-5.212992,-7.174093,-0.233769,7.477167,-9.717067,-8.957749,-6.762518,5.525735,9.483773,-0.536632,-8.824403,-0.344541,-3.613029,5.207105,-5.526973,3.609453,-1.255065,-4.191730,-7.890421,3.427665,-9.518703,-8.485365,-4.892285,-3.810066,2.837744,4.006560,-8.685155,4.804250,7.153602,-5.894577,4.156411,-7.332120,-8.080628,7.539437,-6.275231,8.904897,-5.243147,-6.112068,2.833362,-0.293669,6.397448,-3.386969,-1.679810,-0.253753,0.476910,7.388027,-1.707371,-9.735260,-6.066660,1.775604,-2.910685,-8.601616,-7.235435,8.248494,9.341120,8.588894,-9.814553,-5.367489,5.162651,-0.489319,3.334495,3.742874,1.831247,-3.041118,7.772075,-9.590212,1.213769,6.225235,4.262516,9.581703,-5.891820,-4.098066,8.013317,6.224174,2.312537,3.041784,-9.035513,3.515676,-4.378398,7.451459,3.221325,0.319453,-6.033475,9.229304,-5.631338,-8.015385,6.020135,0.716387,5.612088,7.039240,-8.279100,-6.336563,8.905629,-2.200613,4.045889,-6.578515,6.754328,4.672788,-6.686541,-4.639205,-5.086706,1.202778,9.436319,-7.476046,-5.365850,8.600847,-3.967578,0.033885,8.150744,1.728910,7.056241,-4.888008,2.840614,8.510148,-7.822556,-2.865052,-4.261954,-3.221428,-3.860928,3.077726,-5.982768,8.565602,-3.263361,-5.188481,-7.688636,-3.227427,7.201689,4.127722,1.650210,-8.226780,-2.589774,-7.164400,5.110507,-2.174254,1.563727,-4.855489,-9.611189,-0.029392,-9.568393,7.602673,-5.259706,-7.728722,-1.266831,-9.457977,-9.966690,9.561814,-1.820949,-0.027417,-3.139723,3.709436,-1.325732,2.696851,-4.633837,3.154809,-1.647762,3.322810,-9.099839,0.186728,8.140917,-1.525296,-3.502719,-2.690985,7.056184,-7.719742,7.416531,6.445610,0.919007,1.486959,-6.195296,-8.241014,6.590828,9.951626,-9.898746,-3.733221], dtype = "float32")#candidate|7776|(2250,)|const|float32
bop_7777 = relay.bitwise_and(uop_7767.astype('int8'), relay.reshape(const_7776.astype('int8'), relay.shape_of(uop_7767))) # shape=(2250,)
func_3560_call = mod.get_global_var('func_3560')
func_3561_call = mutated_mod.get_global_var('func_3561')
call_7784 = relay.TupleGetItem(func_3560_call(), 0)
call_7785 = relay.TupleGetItem(func_3561_call(), 0)
var_7786 = relay.var("var_7786", dtype = "int8", shape = (2250,))#candidate|7786|(2250,)|var|int8
bop_7787 = relay.right_shift(bop_7777.astype('uint8'), relay.reshape(var_7786.astype('uint8'), relay.shape_of(bop_7777))) # shape=(2250,)
bop_7791 = relay.minimum(bop_7787.astype('int32'), relay.reshape(bop_7777.astype('int32'), relay.shape_of(bop_7787))) # shape=(2250,)
bop_7799 = relay.logical_or(const_7776.astype('bool'), relay.reshape(uop_7767.astype('bool'), relay.shape_of(const_7776))) # shape=(2250,)
func_7509_call = mod.get_global_var('func_7509')
func_7511_call = mutated_mod.get_global_var('func_7511')
call_7807 = relay.TupleGetItem(func_7509_call(), 1)
call_7808 = relay.TupleGetItem(func_7511_call(), 1)
func_7229_call = mod.get_global_var('func_7229')
func_7231_call = mutated_mod.get_global_var('func_7231')
const_7811 = relay.const([3.202661,0.283365,-3.718633,-9.220689,-4.351680,-8.713343,8.864943,2.334608,8.722573,-8.290366,-4.740368,3.956412,0.965144,-1.829330,9.596309,-6.259628,-8.620630,-1.504541], dtype = "float64")#candidate|7811|(18,)|const|float64
call_7810 = relay.TupleGetItem(func_7229_call(relay.reshape(const_7811.astype('float64'), [18,])), 0)
call_7812 = relay.TupleGetItem(func_7231_call(relay.reshape(const_7811.astype('float64'), [18,])), 0)
const_7816 = relay.const([9,1,3,4,-2,-9,-3,3,7,5,-3,6,2,-6,-1,7,4,-9,1,-8,-2,-1,4,-6,6,-7,-10,6,4,-3,6,8,1,6,1,-4,1,-7,-1,-5,6,5,-4,10,-6,6,-4,-1,-2,-6,1,5,5,-6,-4,-3,-5,-6,3,1,-10,1,-1,-10,1,3,6,-3,-9,9,-2,-2,3,9,6,7,-5,2,3,9,10,6,-2,-6,2,2,10,-2,-4,10,9,5,-8,-1,9,-4,4,4,1,-4,-7,-6,2,9,10,-5,-9,-4,7,7,-7,-4,3,4,-2,-8,7,-6,-5,-5,6,-4,10,3,5,-3,5,1,9,-3,-8,-10,6,-5,4,-5,-10,7,-7,7,-2,-2,10,-4,-1,-8,9,-3,7,-7,-8,1,-9,7,-9,-8,7,-8,3,3,-1,10,-2,-7,9,-8,-8,6,-7,5,-7,7,-1,10,8,-8,8,-9,1,7,-3,8,6,-9,6,9,5,9,2,9,-3,-9,5,1,-5,7,-5,-9,8,4,-10,-7,-10,2,-6,-1,10,-1,-9,2,-3,4,-3,-1,-1,-4,9,-7,-10,10,-3,-8,-3,9,-3,8,1,6,-4,-4,-1,5,4,8,2,3,-10,-10,9,-5,-2,8,4,7,10,-1,2,2,10,1,9,7,4,-4,-7,-7,9,-2,9,1,1,-2,-7,-10,-8,9,6,9,-5,4,10,-3,-9,4,-4,-9,8,-9,-8,2,-1,-3,10,6,-5,-9,2,-7,-9,-8,7,-8,-1,-10,6,-6,4,4,3,1,-8,4,2,-10,-2,4,8,-2,10,9,-5,-5,-4,5,6,-7,4,-8,-3,-9,-9,-6,-6,-5,2,2,-8,-6,-5,2,-5,-10,10,-7,-6,-10,9,1,4,-2,9,2,1,10,9,9,-10,-2,5,-3,-8,-6,-9,-2,1,9,-8,-7,-1,6,8,-3,-4,-9,6,2,5,1,-2,-4,7,-7,6,-5,-3,-4,-6,-1,2,9,-2,-2,-8,-8,7,5,7,8,-6,-10,-4,9,-3,-8,10,5,-10,-6,9,9,8,-10,6,8,-1,-2,-5,4,-3,3,2,3,6,-8,-5,-10,1,-10,10,-2,8,-7,-6,1,3,-1,3,-7,-5,-3,-2,-3,-7,-1,-1,-9,6,2,-8,1,8,-8,-6,-1,10,1,-8,-6,-7,1,1,-7,-9,8,3,-1,-1,-3,6,8,-7,-9,-3,-10,-3,8,-3,10,5,9,9,-10,-3,-7,-8,-8,-6,-2,3,1,4,-9,-4,9,8,7,2,-8,-2,-3,-4,5,-9,10,8,-7,1,-9,4,6,8,9,-3,-4,-4,3,-9,9,-5,7,10,-4,-9,-10,1,-4,1,8,2,9,10,-5,2,4,-1,-1,-6,-4,9,9,-1,-10,8,-6,-1,-6,9,-9,-5,10,-7,-9,-9,-9,8,-2,-3,-1,2,1,2,-6,1,6,8,2,-1,10,5,-10,-9,1,-7,-5,10,4,-5,7,-6,2,8,-1,4,-1,-1,1,5,2,-6,1,-2,8,-5,-5,-7,-7,2,6,-7,6,-7,-6,3,-4,-6,3,-2,-9,-5,10,-3,6,2,5,8,7,-10,-10,2,2,-1,-8,-5,9,-1,-3,-5,4,-3,-7,10,-8,7,-3,-2,-9,-9,3,3,-7,3,1,-1,5,1,4,-6,-2,-2,3,2,-4,-8,7,3,6,-4,-5,-1,6,4,5,-6,-4,4,10,-9,6,-5,9,-7,-5,-3,3,-3,-9,-10,-9,-3,-5,-10,2,-9,-9,1,2,4,-8,-10,-2,-1,1,7,-10,-3,-7,9,-4,-8,-5,-10,9,-6,10,10,-8,5,4,9,10,8,5,-7,-6,-2,3,7,4,9,-9,8,-9,7,2,-7,8,-2,-3,-3,-3,1,7,-6,-3,-6,3,2,-6,-5,-6,3,-10,-8,5,3,8,-1,-3,-9,3,1,-1,10,-3,-6,-9,-7,-3,1,8,-5,9,-3,-5,1,8,-4,6,-4,8,9,8,-6,3,-10,-3,-7,-1,7,3,-3,-9,-9,10,-3,3,6,10,-6,-9,-3,-3,5,1,9,-9,4,-1,2,-6,10,10,3,-9,-4,5,-9,8,-2,7,4,6,-1,-10,-6,9,-6,-3,-9,-7,-1,10,3,-5,8,6,7,9,7,-2,-6,3,7,2,-10,-9,-3,10,-9,-1,-8,-9,9,4,1,-2,-6,10,1,-1,3,2,1,2,-9,-6,-9,4,7,5,4,5,-10,-3,-7,2,6,-5,-5,6,-9,-5,-9,6,8,2,-1,-2,-1,4,9,7,-1,2,-1,-2,-1,9,-7,-4,10,-7,-2,-2,1,-1,3,8,4,1,-6,-6,-1,7,-1,3,8,2,6,-2,-3,9,-5,-1,-7,-4,5,-2,-6,4,-1,-1,-6,8,1,1,5,10,-9,10,-3,-10,6,-5,-10,-10,-8,9,-7,8,-9,10,10,-5,-10,6,-1,2,-8,-8,9,-1,-2,-3,-9,5,-9,-1,4,10,3,7,-2,-1,-7,-9,8,3,10,7,8,-7,-8,8,6,-7,-5,5,5,-10,-5,-1,10,-3,10,2,-3,-7,-9,4,-4,-6,-9,-10,7,9,10,-4,-3,-3,-6,-3,3,-1,-4,10,8,-10,-9,3,10,-7,-9,-1,6,7,6,-5,9,-3,-3,-2,-1,9,-1,-5,2,1,10,8,-5,-10,-5,2,-10,-7,-10,-5,-1,2,-7,-5,8,4,8,-6,5,4,2,3,2,9,7,4,10,-10,-2,8,10,10,4,-1,-3,-10,-2,10,-3,10,3,-9,-10,8,5,4,9,-5,1,3,-2,2,8,-2,9,10,-5,-4,8,-9,-9,-10,10,-3,-1,6,1,-1,-9,7,-2,1,8,4,-9,-10,-9,-9,6,-9,-8,2,4,6,4,-5,-4,6,4,-9,5,3,10,3,2,10,-9,-9,6,8,1,-10,2,7,8,-8,3,-6,-3,-8,-1,7,3,-4,-1,10,-8,7,8,5,-9,-8,-6,7,3,6,-6,-5,9,9,-2,2,-9,7,4,-3,4,-5,-8,-10,8,5,7,2,-9,-5,-9,-10,-7,-10,-8,-2,-4,5,-7,-3,10,-8,9,-2,10,9,6,2,6,-4,4,-9,5,2,-8,9,-4,5,-7,-4,-6,-10,2,-10,5,5,2,-10,9,-8,-7,-4,-4,-8,8,9,5,-10,1,-7,4,6,7,2,7,2,-7,-9,-7,-1,7,1,-9,-10,1,-9,-9,-10,10,-2,-3,3,3,2,-6,-7,5,6,-8,-6,-4,-3,-7,-9,4,4,-6,-7,8,10,-4,-9,-4,-3,-3,-1,-4,-10,-5,10,10,7,10,8,-7,3,5,2,-1,4,-4,3,-7,-8,3,4,-1,-3,8,10,10,-9,-9,6,6,4,-5,7,-1,6,3,7,-4,-7,-2,10,-4,6,-9,-3,-2,-4,-5,9,-6,-8,-9,-4,-7,-5,-2,10,-5,-1,-1,-7,3,-2,-2,2,7,8,-7,9,7,-3,-1,7,9,10,2,5,-9,-4,7,9,-8,-2,-1,-8,-4,-7,2,-3,-4,1,10,-3,-2,-8,-5,-4,5,-7,-4,-5,6,5,8,10,-9,-9,-8,8,1,8,-4,-6,-10,-5,8,5,4,3,-8,-5,4,7,-10,10,2,7,4,-7,8,9,4,9,3,-3,5,-1,-3,8,5,5,8,5,5,6,-6,9,-8,9,2,-4,9,5,6,-5,1,-8,2,-3,-5,-2,6,10,-4,7,2,-3,9,-5,1,-5,2,3,9,4,-7,-5,-8,8,6,7,7,1,10,-10,-7,-3,-10,-4,-4,-5,5,-5,6,6,-9,2,-7,-3,-8,-7,-9,6,9,-10,-10,-6,-4,-9,-6,-2,10,-2,-6,1,7,-1,-10,-8,10,-2,5,-7,-2,-9,1,-3,5,7,2,7,8,6,6,-9,-5,9,10,9,2,10,9,-6,1,-6,-3,-2,1,-1,5,-5,10,10,-8,3,7,5,9,10,5,4,-9,1,6,8,1,-10,5,-2,-9,3,10,-1,9,8,-7,4,-9,-7,6,-6,9,7,-8,-9,7,2,-1,-4,-4,6,7,9,-2,2,-4,-4,-6,8,-3,-10,2,6,5,-6,4,-10,2,8,-4,2,9,-2,9,9,-9,-10,1,6,8,4,-4,3,-2,9,-1,5,-9,5,6,-9,4,-8,5,-2,-4,5,1,-3,10,10,-5,3,1,-9,5,4,7,-4,-5,-7,1,6,-3,4,3,7,8,-1,2,-7,-9,-4,-4,3,5,8,-4,-7,-5,2,-6,7,1,-4,-7,-9,4,5,4,-7,7,-4,-10,-10,3,-7,3,2,2,-8,-6,5,2,10,-7,-2,2,5,-6,-1,9,5,-9,-5,-2,-2,-1,2,9,9,9,-10,7,5,2,-2,3,2,-4,-5,-1,-9,-3,8,-1,6,8,2,-3,9,-2,-8,-8,-7,9,-1,6,-5,-10,-9,-9,2,-2,3,1,1,-2,-8,-9,-5,8,9,7,-3,6,-8,10,2,-4,9,4,-3,-1,7,8,8,-7,2,-2,10,10,3,-10,1,-8,1,10,-10,-7,-1,-10,-10,8,2,-8,8,-10,5,-5,-6,-9,-7,-3,2,-8,4,3,-5,-8,9,-9,2,-7,1,-5,5,6,-5,-10,6,9,6,-7,-3,9,-1,-8,-2,-1,-6,-2,2,-4,-4,5,4,1,8,-4,3,10,4,8,-4,10,7,3,-7,-8,3,10,-7,-9,1,5,-7,-9,-4,8,5,-10,-8,-2,9,-6,3,-10,-9,7,-2,-5,7,1,-8,-1,-7,-5,-3,-1,-7,3,-3,2,3,3,2,-6,1,-2,8,-3,-4,1,-7,8,-9,4,7,5,5,-7,9,8,5,-10,3,10,-6,-5,-3,-5,-7,6,6,3,-3,-10,6,-2,-6,-3,-10,8,-4,-6,-9,1,1,9,-1,1,-5,-6,-7,-1,1,-5,5,-6,8,7,-5,3,-8,-5,7,4,-5,2,-7,8,-4,-10,6,-9,-5,10,-9,-8,-5,7,-7,3,-9,7,-7,5,-7,4,8,6,2,-5,-8,9,4,-7,-6,6,-7,-1,-7,8,1,7,-5,-3,10,-9,3,-6,-3,9,-3,-5,9,5,-4,1,-6,5,3,10,7,6,9,-6,-4,6,-1,8,-8,-5,-7,-10,-5,4,-2,-5,-6,-9,-2,-1,-2,-4,9,3,4,-2,6,-3,6,1,4,8,-7,-8,4,5,-6,10,-8,3,-3,-4,8,10,-7,-1,-8,-10,8,4,-7,1,-6,1,6,-8,10,7,-1,9,1,8,10,4,6,-3,5,-6,-5,-6,10,9,8,-7,7,1,-7,9,7,-7,-9,5,4,-6,-8,-9,6,8,8,-7,1,-4,6,-8,-5,5,-7,10,10,2,8,-6,-1,-10,-10,-5,4,-1,-3,3,-4,-5,-9,-2,-3,-8,-8,-5,1,-10,-4,-3,-6,-1,1,-8,2,-6,8,-9,6,2,-2,-3,-2,-5,1,7,2,6,-1,10,10,4,8,9,-3,-6,-9,9,5,10,-1,3,4,-7,-6,8,-3,-5,8,-2,6,5,10,-7,-7,3,3,-9,5,-1,3,6,2,6,5,10,-10,7,10,-7,2,-4,5,-1,9,1,1,-9,-1,4,5,-9,10,6,-1,-6,-4,7,6,-10,-2,-9,10,-8,5,9,6,6,6,-8,7,-2,-6,10,9,-7,3,-3,-3,6,-3,-7,-4,6,7,9,-8,6,-9,6,-8,-6,8,-6,2,-9,6,3,1,10,-3,-3,-9,5,-7,6,3,-8,3,3,5,-8,10,-3,-1,2,-3,5,5,-9,-2,-2,7,7,6,-5,2,4,-5,4,9,9,10,-3,3,-9,-9,1,1,-7,-6,7,-6,-9,-5,8,-8,5,3,2,2,-3,2,-8,-2], dtype = "int32")#candidate|7816|(2250,)|const|int32
bop_7817 = relay.subtract(bop_7791.astype('uint8'), relay.reshape(const_7816.astype('uint8'), relay.shape_of(bop_7791))) # shape=(2250,)
func_7229_call = mod.get_global_var('func_7229')
func_7231_call = mutated_mod.get_global_var('func_7231')
call_7823 = relay.TupleGetItem(func_7229_call(relay.reshape(const_7811.astype('float64'), [18,])), 3)
call_7824 = relay.TupleGetItem(func_7231_call(relay.reshape(const_7811.astype('float64'), [18,])), 3)
const_7830 = relay.const([-3.811154,0.863089,3.213277,-4.863011,0.614749,7.210381,2.850558,-4.541046,4.907105,9.143175,-4.069474,-5.464616,5.182794,1.927477,5.420278,6.593686,0.954201,-1.600444,8.000100,8.969092,-5.343501,-6.158196,6.361634,0.670152,4.732329,3.508871,7.133327,9.483548,4.873528,-0.075343,1.533870,-6.875614,4.353513,1.226557,1.182606,4.230209,1.708828,0.592718,-4.709053,-1.239226,3.317972,8.265392,9.718615,6.374360,-5.108386,8.940325,8.713000,-9.761836,-3.372282,8.697774,-0.622703,9.412369,-6.551799,-1.421352,-0.902278,-2.494949,-9.691033,-1.295556,-3.768118,-7.119600,0.205640,5.645886,3.572555,3.049619,4.309090,9.172770,3.170471,-9.206762,3.303591,-4.831904,5.472675,2.134208,5.092276,4.684802,3.070408,-4.591005,-1.735744,-2.318696,7.016087,2.276855,-2.626166,6.397919,-9.919611,-7.524255,-1.201022,3.909870,6.328940,-8.945479,-1.153492,9.246508,7.217939,-0.081637,3.234005,-3.587227,5.050208,1.161438,-7.160997,1.378336,-5.519134,0.140656,8.385986,-1.104932,3.913472,6.814661,7.221843,-6.922849,-1.207237,-8.251456,7.427888,-8.619433,-8.720402,-4.206054,-6.943446,9.304421,4.369752,-3.437003,6.416720,-9.539761,2.255647,-5.728648,-2.186149,1.058224,-0.117180,-6.089029,-6.615624,-8.407282,-4.385037,-4.568784,-2.272413,-6.286234,-1.950232,-1.043287,4.367648,-0.390110,-9.269476,9.299061,4.812750,5.862625,-4.133491,2.640851,8.140660,-7.726218,8.062506,-8.542005,-9.615691,6.048574,1.325474,5.089750,-5.285501,8.499925,-2.346816,4.916875,-5.916686,0.797326,-9.441865,5.416498,-7.012077,-6.636381,-1.058699,-9.240882,2.802639,3.373824,7.630728,5.206584,0.967431,7.224927,-6.604562,7.068636,6.008408,5.232165,-6.439294,0.267614,-4.904983,-0.599576,6.889824,-6.201367,-8.821600,2.770757,-0.314193,-3.832867,-1.241762,9.895873,-1.502021,8.698607,-9.193967,-3.308566,7.801101,7.137250,9.380215,8.756763,-7.134933,6.286460,0.880412,9.574399,5.212509,4.685247,8.765700,-6.095582,-7.603887,7.972352,5.021247,2.166086,-7.974215,-3.982681,-0.063802,-3.038705,4.406479,5.978852,-1.275516,-9.890017,-1.606528,3.946083,0.148465,-2.070824,1.286928,-3.220103,1.384685,-4.079363,-0.581197,2.462778,-9.801020,-5.813179,6.055161,-1.753766,-9.286882,4.812002,1.478218,-1.665775,6.316908,-5.159735,-3.162828,1.638091,-9.875676,9.780790,-6.051404,8.210471,-7.015677,0.312423,7.913269,-8.141293,-9.864845,4.465513,-2.927855,-7.053998,-3.615137,8.835546,2.628743,-0.388532,-2.881919,9.817084,-8.835838,4.986768,-3.796197,-2.090693,-4.082963,8.342585,-4.373049,-8.594207,-8.965026,-2.620737,5.768715,7.070903,-1.845547,-7.576400,-1.858045,-4.590802,-8.321006,1.953693,-2.978503,7.160709,-3.598740,8.936245,4.085729,-5.643157,6.426043,-1.293557,-4.445584,5.323168,1.828219,0.626498,0.094333,-9.366403,8.292884,-5.103483,9.394467,-7.437513,-7.767826,-3.193566,-0.551227,2.368660,-9.092960,-7.807574,-5.236179,9.854749,-8.022489,1.859669,-8.929660,0.501234,7.535926,2.555003,9.156433,5.367324,-7.313390,6.443904,-0.491785,-4.979994,-8.429244,2.745503,-2.394546,-7.138575,7.987572,4.814403,1.247425,8.011055,-1.876501,5.470642,-9.532606,-0.084337,1.813569,6.948225,-5.709873,-8.503825,7.995343,9.957614,-6.808388,-6.037647,7.902396,-7.795796,-4.271425,-6.552587,-1.498239,0.261747,-8.561248,7.075956,6.721059,9.486313,-3.088033,7.451741,5.431756,-8.254220,-5.242173,3.255888,-1.165148,6.939438,5.390406,8.694994,5.067853,-4.973124,-9.373378,2.050155,7.561987,-5.279453,-1.832986,7.743651,-9.535697,-2.821804,-4.173368,0.661246,9.763332,2.424080,-0.378712,-1.208472,0.556381,8.602956,6.391934,-2.670349,7.749041,-8.243431,-1.685477,8.525251,0.975565,8.759048,6.029305,-9.682640,5.940141,9.997821,3.314224,-9.598183,-1.680983,-2.266307,-7.870891,-8.529610,7.686892,-2.176576,-3.073939,3.311760,9.282021,7.642203,0.164080,7.551266,-3.045525,-3.052892,-0.547035,-5.350446,-9.753604,-6.861378,1.651518,-0.710100,-4.768380,-8.562869,-8.274556,-7.487452,7.197545,-6.316988,-8.899083,2.168801,-4.915972,-6.137599,-8.342222,0.319094,5.016675,-7.660284,2.217760,-7.648573,5.862470,-9.476443,-8.135147,1.122060,1.506383,-7.688143,7.602185,-7.013171,0.232638,-6.460701,8.453818,-3.432157,-8.859066,-9.074155,8.882498,0.831989,5.733800,-1.948287,-5.369259,7.399619,0.007209,1.385135,-6.138078,-2.519194,-6.254775,6.830980,-1.769624,3.540564,-3.327299,-6.480006,-3.641319,-1.297460,-7.445070,7.646755,-9.043204,-2.116845,-8.946053,-3.431246,4.874877,-1.271162,-1.813104,1.735660,9.783319,5.944191,-5.388365,8.030175,1.399733,2.120653,-2.999523,-2.395179,2.879021,-1.256789,6.662497,-2.192880,4.628308,-1.886664,1.132352,-6.378706,-3.191839,-2.138887,-0.682239,5.975150,-0.645400,9.022827,2.868980,6.299513,-3.345219,-5.933033,7.759018,-7.360465,4.712806,-4.384420,-2.163677,3.096571,-4.567019,-2.518812,5.897575,-2.298931,-3.760077,-3.698652,6.596631,-5.329871,7.800008,3.677526,-2.900949,4.525361,9.289965,-4.544014,0.716205,-5.607195,2.848132,-9.614153,7.852961,-1.199424,-1.794930,5.809434,1.699221,3.020247,8.969394,5.530742,-1.878169,2.518513,-1.633320,5.260795,-0.092203,0.459731,-9.693113,-6.086174,-1.482006,9.530959,-9.064455,-0.470094,9.538124,-4.370580,0.143058,-6.349899,8.761531,8.084412,8.913637,3.189567,-3.626425,0.570708,-9.765121,-5.253797,7.703060,1.611668,5.178516,5.486004,8.327887,0.241508,8.749776,-9.032123,9.089835,-2.078599,-8.951673,-0.103758,-4.944316,-3.436632,-3.896258,2.963575,-1.021058,6.219674,-8.311451,-6.313187,-8.597705,-6.769333,9.405569,-1.483886,-5.656656,6.499567,-0.369880,-0.529332,-3.073232,4.172321,6.208469,-1.053818,0.648639,6.360874,-0.465875,1.786443,8.928654,-2.318878,-0.148022,-7.711770,3.575911,-3.237079,8.019980,-7.229454,3.311166,-7.760042,-4.588107,-7.436940,-5.455840,0.371748,-9.484234,-3.302697,8.206237,-1.055774,4.589287,-1.904040,1.562848,0.386794,0.548226,-9.498682,1.884871,-0.267655,1.411612,-5.329102,-8.312339,-2.448441,-5.819799,1.577164,0.085031,-4.536561,-9.133869,8.258167,4.747929,-9.773747,-1.775442,2.500183,-5.944878,3.344779,-9.459240,3.469152,2.589850,2.882238,-1.363955,3.958748,5.568463,7.514377,2.542435,7.961519,1.471229,8.064818,-2.935006,3.595217,-2.137232,-8.619520,-8.094835,-5.948681,3.024598,-4.687360,-0.998036,8.866675,7.605611,8.680054,7.187606,2.824510,-3.710484,-2.563670,7.116998,4.182878,-0.510391,-2.947837,-3.752399,-8.474279,0.492395,6.910534,4.520866,0.251807,7.455609,4.098197,9.570423,5.555972,6.143578,-6.681505,-2.459827,6.386919,8.489402,7.253511,-5.377221,6.517009,-8.626283,9.274132,7.491744,-6.489853,6.012983,7.302061,-1.865490,-8.779842,-8.254722,-8.156422,7.912228,1.099154,-6.541125,-3.011971,-8.423066,-6.183396,-5.309329,-6.854467,-5.356604,7.195832,-3.935224,-6.646418,7.399220,9.995307,9.994072,-6.385623,6.651711,1.391404,6.909978,-5.783586,1.339105,-8.726460,-2.185775,9.896843,-4.714747,-4.091762,5.550213,3.684869,8.364484,-7.471685,7.669741,9.060529,-3.744779,-6.901008,-3.021288,4.685671,2.350420,-0.450396,4.244727,-0.249623,-8.528321,-8.989157,3.735213,-7.769959,-5.363032,5.611733,-7.419275,-7.895082,2.869848,-0.418179,1.215698,4.917090,0.831297,-0.595245,1.737698,-1.403213,5.108867,1.550591,6.270778,-1.507377,-7.976152,6.068948,-7.944049,4.225357,-4.439371,-0.060884,4.822150,-2.246073,7.987256,4.805500,7.703031,-8.616853,7.421809,3.932502,6.057311,-4.590767,8.410784,-4.912925,-8.613411,0.513593,1.840576,-1.548632,9.697820,-3.605007,-8.982955,0.882793,2.768213,-8.112813,2.328891,9.827517,8.826868,-6.911709,6.371900,4.227056,-3.113523,-2.071838,-7.320531,-7.311010,1.855685,-7.127291,6.998711,5.200658,7.282268,7.547024,4.649275,6.666287,-6.038539,3.614516,6.605731,7.548502,7.178203,7.721342,2.767179,0.631212,-3.301097,-3.148787,1.868007,3.061250,1.986001,5.012090,0.168088,-5.440818,-1.316277,-4.840835,-5.904651,5.548835,4.335358,9.012418,4.022102,-9.973095,-8.990834,7.966401,-9.683254,-2.766347,5.375296,3.383060,-9.354623,-0.704014,1.699605,-9.302228,4.414173,-3.636237,8.299314,1.490715,-9.551310,-3.092034,-0.162327,2.726593,-5.683152,-4.200658,4.414767,3.848293,5.071459,7.714454,-8.798612,-1.757123,3.282338,-3.590691,-9.756527,2.378249,2.962891,7.569523,3.370075,9.314183,-1.221702,3.471322,6.693889,-7.217735,6.771361,9.158332,5.350538,0.338161,-4.367853,1.972172,0.740697,-8.708802,0.063654,-1.429125,-5.480012,-2.830903,6.019152,-8.763606,-4.282990,-3.672818,-7.741552,3.925304,3.202194,1.911535,1.929399,4.919682,5.395736,9.657507,1.202238,-0.260213,4.846381,0.012641,-4.154221,4.912956,-1.218723,-0.931492,-3.619920,-0.430651,-3.870005,9.116196,7.687370,-9.670183,-4.194938,6.256472,9.388611,9.486354,-7.694943,-1.719606,6.819706,-1.719083,6.410570,-1.871989,-0.369342,2.897460,-4.422253,-2.759161,1.607796,8.035503,5.960757,-7.575229,-2.489417,4.429848,-7.126551,8.396009,-6.519825,0.239360,0.167282,1.121389,-4.456276,-4.801108,2.092930,-7.722201,-9.306417,5.629075,-6.244936,-5.519475,3.540682,-9.544102,3.500601,2.046116,6.583755,5.434781,4.168735,-8.707212,-9.771177,-9.632632,-4.874922,-5.584482,-4.899089,-7.894744,8.606518,1.155248,-3.604372,-2.304078,-1.738105,4.853417,-8.099168,-8.277863,5.216418,-6.472178,8.303502,-8.654283,5.323662,-2.540794,-0.775804,9.967354,-7.935767,-6.910716,-6.784815,-9.698952,6.488274,-0.661993,1.242810,4.635733,0.701203,-1.753990,-6.583649,-9.246420,0.229271,-4.966083,1.313105,-0.381774,-5.889603,3.766516,5.671346,8.641799,1.392017,3.683964,-3.735561,-2.201211,-8.120036,9.036374,9.790622,-7.935145,-0.675119,-5.632887,-8.027007,1.632285,7.896574,4.600259,6.613495,0.221199,-8.692673,3.240010,4.538598,1.167968,-9.180349,4.081971,-5.098916,-3.480867,-7.299190,0.746947,5.157031,0.521065,1.819648,-9.840906,-5.981999,8.977493,-5.835339,6.910931,-1.869813,2.728247,1.725892,-3.579725,-2.765300,6.782541,8.176242,-3.999538,8.255207,-3.004065,-9.188843,7.399602,-3.942114,-9.799403,6.946302,3.552516,-5.402313,-5.034551,4.268424,1.392476,-5.389279,-4.653978,8.114976,-8.242259,-1.259989,3.491621,1.029093,8.228284,-3.530435,-1.086399,-9.420030,2.372277,-4.672633,-2.604093,6.052480,-2.478081,-8.342171,8.834926,6.193192,0.268097,-9.668596,-7.616664,0.290670,-5.981892,4.873744,-8.241776,-4.619001,-2.209799,0.930969,-9.050114,1.771491,-4.436575,7.714217,4.203972,-1.593429,-7.975516,-4.851354,-0.974052,7.653480,8.861615,-2.990291,-0.820790,4.792661,3.610512,4.652611,7.712644,-4.760053,2.108648,-7.070098,-1.691451,1.328762,7.426787,-6.113687,0.036449,-4.475804,-9.817712,-7.704422,4.799274,-0.622282,3.592227,-3.283771,-7.451722,-1.585116,-6.631769,-5.499126,5.812837,-6.495623,0.146323,0.237412,-9.705084,0.796376,-1.839677,9.394782,-7.432347,-4.061276,5.229294,-8.595519,-8.109477,1.560131,5.250976,3.338270,1.316893,-5.213715,-8.903132,-7.881440,2.681814,-6.129110,2.841335,-3.034605,7.546854,4.240541,2.217911,-5.219690,8.417802,3.307930,2.879232,2.636136,-6.303591,-3.517870,6.429461,6.619061,-5.783577,-0.991019,5.433691,7.263741,-8.808585,8.400720,2.611576,6.059033,-6.444614,1.978912,5.360393,-8.672025,-1.937995,3.194821,2.872450,6.570069,-1.032101,-7.412515,-1.760890,-1.929963,-1.082111,-2.707548,3.004370,-0.806331,-7.046057,7.003723,5.838446,7.211011,-3.029227,3.198669,2.379199,-1.579763,5.266124,5.526752,-8.913274,-9.957862,-3.340848,-2.745376,-2.174396,9.271531,4.057711,-0.566658,-9.787483,-7.630942,-8.289178,6.952314,-6.938703,7.745745,-8.921090,2.211984,-5.861830,7.524984,4.070352,-1.492205,6.390501,-9.548128,0.710005,4.401272,6.190454,-0.757900,4.104171,5.662871,0.412056,8.843446,-2.955442,2.668114,-8.614074,5.394654,-2.912555,2.186337,6.909334,-7.474564,8.286563,-7.760963,-6.634885,-4.549610,-4.546356,3.691204,9.305114,3.565794,-3.648749,-1.989739,-9.907179,-7.203875,-3.005961,-7.388679,7.997762,-8.285911,-5.476294,0.685506,2.857933,-5.830458,-0.778967,-8.426214,6.125554,2.962223,-7.602885,-7.678023,3.698196,5.881428,6.937921,0.145852,0.258705,2.042245,-4.644628,-2.822091,-4.752875,-6.849256,-4.816259,-6.631884,-3.308311,8.732999,-1.835048,3.834962,-2.546125,8.246054,-0.261496,0.300631,-8.034100,1.207208,7.474900,-4.728653,8.478744,-5.466099,6.517933,1.774145,-1.000272,-9.604659,-0.957724,-9.745340,6.314601,-3.670523,-0.933420,8.943932,-8.972325,-0.064109,-9.682525,-1.916568,5.508752,9.165375,3.407403,-8.904191,-5.333665,-4.938686,4.122662,4.798550,-7.604277,-4.340393,4.242278,3.593970,0.718468,-6.092773,3.228368,6.135253,6.642542,5.165686,2.844674,1.035445,9.643103,-6.424919,-7.480735,0.013013,-4.745265,-8.778019,2.390547,2.967980,4.549830,-6.985483,-9.570026,8.408833,-2.943583,6.981841,-9.934069,2.788933,-6.798734,-1.027895,-9.615873,-7.471540,-3.084937,-5.171063,-6.191636,-1.052357,5.902121,-0.130596,-3.268717,-8.800393,1.719562,-9.150015,-7.778958,8.203240,5.233939,1.775036,3.566362,-2.360271,-7.310778,8.799376,0.449616,-0.150959,-5.541047,-4.657932,-9.443504,8.407077,-2.495721,-5.239830,-2.887317,-2.046322,8.207121,3.494111,0.654846,-0.997950,-2.824413,-2.936556,1.214443,7.556362,-8.444132,-0.271122,-5.937333,-2.529104,7.097673,5.793148,-8.989257,-5.938871,9.748250,-6.850682,0.164742,4.005070,-4.262209,3.848323,-1.224561,3.705986,8.764582,-0.479394,6.294977,-3.121962,9.924534,-8.950925,4.843974,1.212310,-7.011744,3.785390,3.656143,-1.254194,0.522123,3.603890,-3.246490,-7.108662,3.449743,0.854258,9.615626,6.972666,3.340483,-3.040436,-3.600524,0.497508,5.463062,1.158692,4.831450,-3.425056,0.592953,0.728818,-9.003583,3.766502,-5.574593,-7.539931,7.739570,-5.957802,-0.643965,7.968594,-1.061362,9.476512,-2.648010,-3.159447,-7.172227,-6.814438,2.921533,4.792706,6.215843,4.072121,3.612128,2.637613,9.121272,5.241784,-5.864257,3.142081,-3.026778,-2.522965,2.652005,-1.916976,9.929194,7.195050,-0.297221,-5.681950,-2.003975,8.884707,8.087616,-9.935835,-0.630374,-9.226765,-3.626956,-6.762208,1.444058,7.151174,7.669039,-4.640828,-9.551448,4.752352,5.080905,-6.797767,9.080165,6.829027,-8.355052,-3.792315,-5.235916,7.777706,-0.567667,1.882725,-4.482853,-6.913740,-9.879193,-5.977919,-7.778448,-7.513971,4.578105,6.750726,-8.138698,-0.520517,-6.372343,-1.037583,0.602054,-4.659268,3.100113,6.620571,-5.380055,3.793619,8.801933,-4.112132,-6.058911,7.562226,8.534372,-4.739828,3.166073,8.914959,2.751242,-1.781577,6.143388,-7.649213,-5.171190,7.205343,1.423937,-9.092354,-0.525045,7.980993,6.354961,7.214728,3.316602,-5.721668,-2.481592,7.755433,8.041998,-4.844143,-0.575231,5.135160,2.164268,8.459155,-5.161404,9.990539,-7.485162,3.595881,8.587163,4.592048,-4.687972,2.605620,2.649167,1.929853,8.863359,8.847597,-0.280170,-7.112139,9.697224,6.973855,5.874250,5.172821,2.006493,8.854766,8.544751,5.891683,7.195007,-2.328867,0.438954,0.686433,1.767364,-8.533636,-2.778372,4.048612,6.307625,5.590555,8.798687,-2.240651,6.859840,8.692674,-3.912529,-8.412214,-0.415153,-2.623713,-8.313334,-6.299781,5.148712,-5.326854,4.703435,0.003295,-9.333720,-6.629390,6.733615,-0.581987,-7.696742,9.961987,-9.689167,-7.757366,-7.791790,0.580867,2.472561,1.905616,-0.417134,-4.973597,5.620517,-1.150715,-7.172425,-0.314620,-6.535350,-6.086596,-7.795397,4.998824,7.512623,7.614227,5.647837,4.528586,-4.760802,1.117385,-1.704407,5.495182,0.376438,9.147817,-5.116664,-2.100784,-0.114566,2.089557,-9.889190,5.918226,5.156007,-3.692739,7.979589,0.926531,-9.774000,9.786298,-9.225270,-8.138688,-0.675772,7.067346,8.988988,4.167596,-4.670663,2.099097,-4.909720,-7.043492,7.881296,-4.447605,-0.953921,8.689620,-6.310753,3.556368,9.368437,-6.620871,8.959539,-1.607927,2.228265,-3.862653,-8.857008,7.813473,2.913790,-3.449884,-5.340451,7.265364,-2.132427,4.700374,9.448117,6.690508,-8.269773,6.089797,1.611076,2.196828,8.923229,-6.397659,8.761777,-1.170862,-0.191982,5.865950,6.910304,2.226088,7.772804,-9.409351,-9.747469,3.519571,-8.487959,-7.010080,-9.437385,-1.877023,-0.819325,-8.404210,-5.883177,-7.385636,8.549881,4.141711,-5.991957,9.324250,3.153264,6.265627,7.193557,9.611000,4.386159,-0.826777,3.541836,6.339473,0.930588,1.566150,6.351629,-5.016095,6.024174,8.067750,5.813729,-7.603373,1.666243,-6.191697,-6.184647,-9.551987,4.497856,-8.325594,8.406160,-6.847228,4.249427,4.207699,1.473980,7.940261,5.742850,7.119493,4.170006,-3.088020,2.829748,-0.561288,-0.923021,3.085312,6.698816,-5.718629,6.406508,4.882648,-0.691033,1.502723,8.956594,-8.351522,-0.830176,6.738123,5.226542,-8.084420,-5.183275,7.667454,2.397407,-3.485639,-3.648140,7.878661,-4.038364,-1.164888,0.481822,-6.789942,-0.597790,-7.800657,-8.093555,8.859006,0.594604,-7.285592,-2.240757,-1.037545,-7.223000,-7.781392,1.636201,8.478704,-5.587029,-4.101783,4.308992,-9.332806,1.190404,-4.380093,-4.123967,-9.825766,3.668256,8.747563,-5.184594,3.247252,3.607292,5.745281,-3.013886,-4.618251,-7.557491,-4.993744,4.063677,5.485492,9.721771,0.847788,4.025215,8.906981,-7.450104,-2.420934,-6.760351,-6.801079,8.482787,-8.418890,-7.595271,7.314331,8.490112,-2.163981,-7.599819,-4.313824,-0.190932,-8.568809,2.426029,-0.017627,-3.505790,-4.224222,8.572017,-5.560802,-8.102996,-3.671056,6.021262,2.676778,7.456224,-6.928264,3.340042,-4.688587,-6.995905,-7.614657,-0.021589,2.206089,1.339875,-9.127515,-4.049103,-1.149343,0.093034,5.166194,-5.312537,-6.412017,5.973269,5.250080,1.771403,-9.128808,-9.486665,1.875626,5.330260,-8.149879,-6.002997,2.441377,3.101560,2.203287,-0.944532,-1.515433,5.311715,0.561332,8.789918,9.491865,-0.481839,-4.138489,-0.016222,9.744178,-5.506809,0.670491,-6.787999,-1.738767,-2.697388,8.557773,-6.198240,8.503017,-3.693582,-9.618872,3.128502,-9.635299,1.379380,5.457645,-3.690920,-7.252386,-5.482098,1.161576,-6.195139,-5.880175,8.180501,-5.039826,9.649615,0.284293,-0.891525,1.808738,8.659145,1.860481,-9.113530,8.632911,8.341387,-7.269840,3.396900,5.492416,5.531421,-1.123213,8.548700,-4.759984,-5.782001,-5.301436,-2.233178,-1.850263,9.856532,-1.129190,-1.711129,-7.368786,8.202342,8.415266,-8.190162,0.878433,9.287516,-3.448114,-4.819496,8.026150,-9.175624,5.023897,-2.020712,-5.676366,7.638382,1.382304,-1.838272,8.894224,-2.496572,-1.370055,1.742070,-0.223674,7.391098,8.742008,-0.339835,-9.071547,-2.760389,3.229347,-9.322059,-5.075780,-6.005622,6.446139,5.067432,5.869428,-0.275117,-5.080577,7.405947,-3.616638,0.552187,-8.851571,-5.513426,-4.645644,-3.611519,5.417037,-2.119733,-7.599573,-6.216206,4.225425,-1.076590,9.432646,5.627475,8.849786,8.825876,1.243017,8.902320,-5.313667,0.671908,4.134153,-5.418245,-9.152015,-5.947170,8.432485,-2.247657,5.866833,5.978750,8.652869,-2.109484,1.301660,-7.218008,3.133150,-8.340148,-0.387684,-2.962080,3.402802,-7.482810,5.476896,-7.917533,4.710156,-8.520910,-8.776436,-3.139618,-9.431452,-1.887673,-3.251113,-7.804755,-3.736465,6.792641,-1.131595,-1.301812,-7.252259,3.470563,-7.831580,-8.399398,8.452092,-0.565644,8.259135,2.295803,8.519053,2.076532,2.052100,0.954263,8.591820,-3.068553,5.500301,0.792653,1.609220,3.132323,3.446453,-1.384349,-9.437467,-4.471946,4.307685,1.200773,3.296848,-1.764787,0.849781,-0.171105,-0.461071,-2.272198,-8.304096,3.539470,4.439244,4.113466,-3.965903,6.528742,-8.673107,-9.280702,7.070151,-8.920773,2.325842,5.899072,1.961739,4.837305,-2.038086,4.042081,1.561880,4.549232,5.146323,5.599893,-6.768063,3.137350,-3.413655,-0.971486,8.669086,-8.353384,3.980243,9.671604,-1.985590,-0.098537,9.749786,0.860418,-9.005273,3.054073,3.393384,5.663896,4.891276,-4.290700,8.500925,3.919735,8.719662,5.804275,-6.366987,3.292552,0.255622,1.026137,7.307779,9.944216,1.324276,-9.683003,-7.242694,-0.202219,-8.882471,6.974581,2.202237,-0.240158,2.226631,7.732113,4.230593,-1.796136,-8.171659,5.475306,-3.114747,1.602229,6.643929,-3.177342,-0.178407,3.587639,8.777057,-6.408740,0.379987,4.899355,-4.997641,-7.674079,-1.749194,-7.675558,4.457781,-1.771676,-2.123201,3.726634,8.925135,5.785809,4.367097,-6.303853,-9.365715,9.656604,-6.993930,-1.847528,-1.242519,-3.507603,1.629144,2.588286,-2.799015,-5.324077,-4.820371,-6.381526,6.415496,8.531778,-6.731783,2.597958,-1.001824,-1.727563,9.681306,2.139067,-2.904833,-0.194994,-1.047867,-8.896711,-8.586286,2.059421,-7.138189,-6.503761,-4.234619,-8.462091,-9.624330,1.613827,4.449315,4.345207,-8.530883,-3.286415,-4.958825,-1.087635,-8.485828,4.042930,9.785738,7.130229,-2.184048,9.783679,7.572396,9.626679,7.153363,-5.768615,-0.797510,7.713076,-3.478677,4.872669,6.050177,4.509594,-4.207378,-3.198253,-1.363887,-6.679019,3.503956,2.058528,7.699164,-1.472569,5.386173,5.340260,-2.550977,-4.602518,-9.688416,3.550644,4.924530,-4.552960,9.763333,3.094207,-5.074241,-3.999695,1.205993,0.489296,-1.254895,2.873253,-7.890004,-7.300901,9.124224,-4.423400,-6.698694,4.421263,-5.888446,-3.506229,-3.535508,2.632899,8.179453,4.744533,9.598328,1.914065,-8.496853,7.944150,-6.576655,-0.953721,-5.655881,2.868107,-2.578590,-9.165402,-0.252843,2.475406,-5.809564,-5.729949,-9.576188,-9.258523,-6.206918,-1.283324,-8.001561,1.039304,7.789381,4.938985,-7.856792,-2.437026,7.753235,-1.100112,7.159663,8.542773,-1.639428,2.537278,4.849005,5.635363,-5.818231,-0.656255,7.973226,3.810000,9.656609,4.687491,2.307099,6.127998,-7.394888,1.868208,1.426346,-9.830915,-7.317264,-2.742777,3.399710,6.478665,5.867837,6.553606,0.933357,5.890077,0.767704,5.762976,0.347037,9.545779,-3.287741,0.195760,0.456719,0.971974,-6.983508,7.086148,3.199785,8.546602,5.369852,-5.009081,5.402580,1.418061,-4.874957,7.470316,3.180355,3.866057,5.957517,6.272179,-4.146208,-7.120470,6.353907,0.687852,-3.196478,5.197307,5.975009,7.278531,-3.291215,1.979791,9.450116,-2.378288,5.064529,-5.138320,-4.305374,-2.563596,-8.814799,9.164807,-0.479814,0.157141,2.453253,-5.453881,-9.754586,1.681586,7.239540,4.139754,-9.303287,4.786367,9.159053,-3.941206,-0.157174,9.147134,-0.498204,-8.480737,0.742661,9.986016,-5.403238,2.068894,5.684143,0.810667,0.871063,1.843763,-2.345073,3.807350,-2.845545,-9.361642,-1.519261,-4.203100], dtype = "float32")#candidate|7830|(2250,)|const|float32
bop_7831 = relay.floor_mod(uop_7767.astype('float32'), relay.reshape(const_7830.astype('float32'), relay.shape_of(uop_7767))) # shape=(2250,)
bop_7834 = relay.less(uop_7767.astype('bool'), relay.reshape(bop_7787.astype('bool'), relay.shape_of(uop_7767))) # shape=(2250,)
uop_7852 = relay.atanh(bop_7799.astype('float64')) # shape=(2250,)
func_7355_call = mod.get_global_var('func_7355')
func_7357_call = mutated_mod.get_global_var('func_7357')
const_7858 = relay.const([[-10,-6,-6,-10,-3,7,-7,-7,-4],[6,7,5,-5,10,4,-2,7,-9],[-8,3,9,1,8,-2,6,4,-6],[-9,-4,6,9,2,-7,8,-1,1],[10,5,-9,2,-7,-9,7,-3,-7],[1,-8,-1,-6,-2,-9,-7,4,6],[-9,9,5,8,-3,7,1,-5,2],[3,4,-5,10,-9,3,8,-4,-9],[-4,-4,-9,9,10,-8,10,10,-9],[-5,8,3,-1,-5,-7,-5,3,-10],[-2,-2,-4,5,-2,-8,-2,9,-8],[3,-3,-6,7,3,-3,-2,-1,9],[5,-9,-9,-9,1,2,10,1,-8],[-6,-8,-4,-2,-8,-3,10,9,6],[-8,2,4,-1,1,-10,8,-5,4],[7,-8,-9,-2,-8,10,-2,10,8],[-7,-10,10,9,-5,2,6,3,8],[4,3,-4,7,-1,-7,-10,-7,-5],[10,3,-10,5,8,-9,-10,-8,-6],[-5,-6,9,5,-10,-2,9,10,-7],[1,-6,10,5,10,-2,-6,7,-3],[-7,-8,1,3,1,-4,-6,2,3],[-9,1,-4,8,-2,-3,-3,-3,9],[-8,6,8,10,2,-7,-4,-3,-8],[2,8,10,10,2,-2,-9,-3,-2],[4,6,5,-1,2,8,3,-5,-5],[-10,8,-10,3,3,-6,-9,-10,-6],[-10,6,1,1,3,4,-1,-4,-8],[-1,8,7,10,4,-4,-7,-7,6],[6,-3,3,8,6,3,8,5,8],[10,1,-10,-6,7,9,-5,-3,5],[-8,8,-6,-7,4,10,5,10,6],[9,6,-9,-1,9,3,-10,8,6],[-8,2,-7,4,4,8,-5,-4,-4],[7,7,1,-1,-4,8,6,-5,10],[1,-3,-1,7,-7,8,-5,-9,2],[-4,-9,-3,-8,-5,-7,4,8,-3],[10,4,2,-9,8,1,5,2,-6],[3,5,-7,-10,2,-10,-8,6,10],[-5,-7,6,-2,5,-7,2,-5,7],[-9,4,-6,6,-7,-9,2,-5,-8],[7,3,7,-3,1,3,-9,-6,6],[9,7,4,-10,-9,-5,5,-8,-6],[-8,3,-8,-7,1,-1,-5,-8,-4],[-10,1,1,-8,-10,5,-3,-8,2],[3,2,-3,2,1,4,-4,-2,-4],[3,-9,10,10,9,-10,-3,-10,-10],[7,-5,-1,6,1,-10,-4,7,-7],[-9,2,6,-7,-6,5,-4,-5,-3],[-5,-2,10,1,5,7,-7,-9,-2],[-1,-4,-10,3,1,10,-4,4,1],[-8,-8,-2,-6,-1,8,-2,4,3],[6,7,-4,3,2,-6,1,-7,10],[4,-8,3,-8,-4,2,8,5,-7],[-2,9,-10,-1,8,2,7,3,10],[-3,2,1,-5,4,-4,-9,5,-2],[-2,8,1,7,5,-7,-8,3,8],[-4,5,-4,-10,7,2,10,4,-3],[7,5,4,9,4,1,-8,-6,-4],[-3,-7,10,10,3,-8,-1,10,9],[9,3,-1,-5,1,3,-6,-10,7],[-2,1,-2,-4,6,-8,8,-4,-1],[7,-4,-1,-4,3,10,3,8,-9],[-5,-3,9,-7,-1,7,-3,-9,-3],[-4,-9,-10,-5,-3,8,-3,-9,3]], dtype = "int32")#candidate|7858|(65, 9)|const|int32
call_7857 = relay.TupleGetItem(func_7355_call(relay.reshape(const_7858.astype('int32'), [585,])), 1)
call_7859 = relay.TupleGetItem(func_7357_call(relay.reshape(const_7858.astype('int32'), [585,])), 1)
func_5814_call = mod.get_global_var('func_5814')
func_5815_call = mutated_mod.get_global_var('func_5815')
call_7870 = relay.TupleGetItem(func_5814_call(), 4)
call_7871 = relay.TupleGetItem(func_5815_call(), 4)
output = relay.Tuple([call_7739,call_7757,call_7784,call_7807,call_7810,const_7811,bop_7817,call_7823,bop_7831,bop_7834,uop_7852,call_7857,const_7858,call_7870,])
output2 = relay.Tuple([call_7740,call_7759,call_7785,call_7808,call_7812,const_7811,bop_7817,call_7824,bop_7831,bop_7834,uop_7852,call_7859,const_7858,call_7871,])
func_7873 = relay.Function([var_7786,], output)
mod['func_7873'] = func_7873
mod = relay.transform.InferType()(mod)
mutated_mod['func_7873'] = func_7873
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7874 = relay.var("var_7874", dtype = "int8", shape = (2250,))#candidate|7874|(2250,)|var|int8
func_7873_call = mutated_mod.get_global_var('func_7873')
call_7875 = func_7873_call(var_7874)
output = call_7875
func_7876 = relay.Function([var_7874], output)
mutated_mod['func_7876'] = func_7876
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5895_call = mod.get_global_var('func_5895')
func_5897_call = mutated_mod.get_global_var('func_5897')
call_7901 = relay.TupleGetItem(func_5895_call(), 0)
call_7902 = relay.TupleGetItem(func_5897_call(), 0)
uop_7907 = relay.erf(call_7901.astype('float32')) # shape=(12, 7, 3)
uop_7909 = relay.erf(call_7902.astype('float32')) # shape=(12, 7, 3)
output = relay.Tuple([uop_7907,])
output2 = relay.Tuple([uop_7909,])
func_7913 = relay.Function([], output)
mod['func_7913'] = func_7913
mod = relay.transform.InferType()(mod)
mutated_mod['func_7913'] = func_7913
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7913_call = mutated_mod.get_global_var('func_7913')
call_7914 = func_7913_call()
output = call_7914
func_7915 = relay.Function([], output)
mutated_mod['func_7915'] = func_7915
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7528_call = mod.get_global_var('func_7528')
func_7530_call = mutated_mod.get_global_var('func_7530')
call_7921 = func_7528_call()
call_7922 = func_7528_call()
func_5302_call = mod.get_global_var('func_5302')
func_5303_call = mutated_mod.get_global_var('func_5303')
call_7924 = relay.TupleGetItem(func_5302_call(), 0)
call_7925 = relay.TupleGetItem(func_5303_call(), 0)
func_7551_call = mod.get_global_var('func_7551')
func_7552_call = mutated_mod.get_global_var('func_7552')
call_7934 = relay.TupleGetItem(func_7551_call(), 0)
call_7935 = relay.TupleGetItem(func_7552_call(), 0)
output = relay.Tuple([call_7921,call_7924,call_7934,])
output2 = relay.Tuple([call_7922,call_7925,call_7935,])
func_7939 = relay.Function([], output)
mod['func_7939'] = func_7939
mod = relay.transform.InferType()(mod)
output = func_7939()
func_7940 = relay.Function([], output)
mutated_mod['func_7940'] = func_7940
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4728_call = mod.get_global_var('func_4728')
func_4729_call = mutated_mod.get_global_var('func_4729')
call_7959 = relay.TupleGetItem(func_4728_call(), 0)
call_7960 = relay.TupleGetItem(func_4729_call(), 0)
output = relay.Tuple([call_7959,])
output2 = relay.Tuple([call_7960,])
func_7976 = relay.Function([], output)
mod['func_7976'] = func_7976
mod = relay.transform.InferType()(mod)
output = func_7976()
func_7977 = relay.Function([], output)
mutated_mod['func_7977'] = func_7977
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5302_call = mod.get_global_var('func_5302')
func_5303_call = mutated_mod.get_global_var('func_5303')
call_7992 = relay.TupleGetItem(func_5302_call(), 0)
call_7993 = relay.TupleGetItem(func_5303_call(), 0)
func_7583_call = mod.get_global_var('func_7583')
func_7584_call = mutated_mod.get_global_var('func_7584')
call_7998 = func_7583_call()
call_7999 = func_7583_call()
const_8000 = relay.const([[[-1.232772,4.463773,-5.374278],[-0.829255,-6.513926,-8.251921],[-5.433311,-7.408392,-4.018959],[-1.100108,-6.607000,-8.606851],[1.833639,-3.978501,6.981298],[-6.862614,-1.630850,1.073055],[-3.716687,-9.287800,6.519081]],[[-7.315076,6.324571,4.725502],[-5.718793,-2.157946,3.110821],[2.977246,3.786969,-6.570330],[-3.449374,-9.414864,-8.904556],[2.171358,4.044881,9.270256],[-7.882772,-2.044145,-8.962561],[8.296515,-4.646349,-2.532973]],[[9.287992,-0.224485,2.936986],[3.512310,3.200668,6.403670],[6.994639,-9.502701,-2.094309],[-3.671427,-1.332512,1.633580],[-7.069233,3.155671,-2.078662],[8.152631,2.615364,-5.216060],[-1.120966,-6.913033,-0.049325]],[[3.543238,-5.938331,-3.856201],[7.813589,-6.703782,-3.939697],[-4.271346,-0.586587,6.440412],[6.739557,-0.570331,-3.318541],[-6.981755,9.370870,0.549434],[-5.390083,7.598678,-1.565560],[6.114672,-0.002457,3.774919]],[[9.984224,-5.834738,3.006100],[-6.597143,-2.282923,-7.624912],[-4.637355,7.928988,5.774559],[3.322120,7.129659,9.361829],[-0.305303,6.511647,-7.043264],[7.617140,-7.715277,0.987901],[7.268182,2.861325,2.763123]],[[8.966789,-9.290264,5.954575],[5.524543,9.331725,3.789870],[-4.728346,9.241627,5.452916],[9.406395,-8.185831,-5.292051],[1.014408,1.837864,9.158522],[-4.464945,-8.899447,0.572737],[4.077247,-5.606026,1.331156]],[[8.450246,-6.377634,1.238921],[-7.531277,-6.766311,-3.293218],[-2.816214,5.937896,-5.013420],[-7.069850,2.847148,8.688228],[-8.658906,1.529913,3.324823],[3.044281,-5.108468,-9.978381],[0.635603,-1.761048,6.275074]],[[-9.666289,1.078540,0.454016],[-9.080855,-4.325944,5.654989],[-9.989295,-7.039119,-8.124013],[-1.885476,-7.113378,7.638127],[-2.237235,8.202985,8.330117],[7.764668,7.114180,7.379008],[2.958196,-7.713203,3.363475]],[[3.976732,-9.816944,9.308222],[-9.333123,-7.602732,-7.586071],[1.937189,-0.498383,-3.020113],[7.999382,2.210814,-8.425691],[6.040458,-9.217168,8.217793],[2.498157,2.655155,5.919988],[3.736816,-5.946385,-3.760764]],[[6.412544,1.486195,6.743073],[9.156684,3.741886,5.788979],[2.060226,9.468128,-2.432947],[3.975832,-3.471832,3.003007],[4.214398,4.093559,-6.680590],[8.890205,0.285678,1.162111],[-8.320724,1.948762,1.154158]],[[4.702094,2.417991,-3.737005],[3.885929,-9.081872,-4.553099],[0.715767,-9.066032,1.908273],[3.694248,-5.825184,0.145474],[1.406521,2.396025,-1.722162],[0.961602,2.824102,-5.821351],[-3.970546,-5.524958,4.862886]],[[0.878084,-6.622510,0.991721],[-5.159583,-6.617403,4.762382],[4.321539,7.097528,1.834339],[3.281794,8.372823,-5.102426],[7.072126,-4.627371,4.818119],[-4.478348,-8.251421,-0.762441],[7.325691,-9.190006,7.688373]]], dtype = "float64")#candidate|8000|(12, 7, 3)|const|float64
bop_8001 = relay.greater(call_7998.astype('bool'), relay.reshape(const_8000.astype('bool'), relay.shape_of(call_7998))) # shape=(12, 7, 3)
bop_8004 = relay.greater(call_7999.astype('bool'), relay.reshape(const_8000.astype('bool'), relay.shape_of(call_7999))) # shape=(12, 7, 3)
output = relay.Tuple([call_7992,bop_8001,])
output2 = relay.Tuple([call_7993,bop_8004,])
func_8016 = relay.Function([], output)
mod['func_8016'] = func_8016
mod = relay.transform.InferType()(mod)
mutated_mod['func_8016'] = func_8016
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8016_call = mutated_mod.get_global_var('func_8016')
call_8017 = func_8016_call()
output = call_8017
func_8018 = relay.Function([], output)
mutated_mod['func_8018'] = func_8018
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7436_call = mod.get_global_var('func_7436')
func_7437_call = mutated_mod.get_global_var('func_7437')
call_8021 = relay.TupleGetItem(func_7436_call(), 0)
call_8022 = relay.TupleGetItem(func_7437_call(), 0)
func_8016_call = mod.get_global_var('func_8016')
func_8018_call = mutated_mod.get_global_var('func_8018')
call_8023 = relay.TupleGetItem(func_8016_call(), 0)
call_8024 = relay.TupleGetItem(func_8018_call(), 0)
uop_8036 = relay.log2(call_8021.astype('float64')) # shape=(9, 4, 9)
uop_8038 = relay.log2(call_8022.astype('float64')) # shape=(9, 4, 9)
output = relay.Tuple([call_8023,uop_8036,])
output2 = relay.Tuple([call_8024,uop_8038,])
func_8040 = relay.Function([], output)
mod['func_8040'] = func_8040
mod = relay.transform.InferType()(mod)
output = func_8040()
func_8041 = relay.Function([], output)
mutated_mod['func_8041'] = func_8041
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8044 = relay.const(-1, dtype = "int8")#candidate|8044|()|const|int8
var_8045 = relay.var("var_8045", dtype = "int8", shape = (1, 12, 1))#candidate|8045|(1, 12, 1)|var|int8
bop_8046 = relay.left_shift(const_8044.astype('int8'), var_8045.astype('int8')) # shape=(1, 12, 1)
uop_8049 = relay.log2(var_8045.astype('float32')) # shape=(1, 12, 1)
func_2423_call = mod.get_global_var('func_2423')
func_2425_call = mutated_mod.get_global_var('func_2425')
call_8051 = relay.TupleGetItem(func_2423_call(), 1)
call_8052 = relay.TupleGetItem(func_2425_call(), 1)
bop_8063 = relay.greater(var_8045.astype('bool'), relay.reshape(uop_8049.astype('bool'), relay.shape_of(var_8045))) # shape=(1, 12, 1)
bop_8073 = relay.greater_equal(var_8045.astype('bool'), relay.reshape(uop_8049.astype('bool'), relay.shape_of(var_8045))) # shape=(1, 12, 1)
output = relay.Tuple([bop_8046,call_8051,bop_8063,bop_8073,])
output2 = relay.Tuple([bop_8046,call_8052,bop_8063,bop_8073,])
F = relay.Function([var_8045,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_8045,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

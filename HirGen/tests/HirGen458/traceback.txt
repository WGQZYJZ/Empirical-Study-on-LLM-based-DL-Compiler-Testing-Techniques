==========mod==========
#[version = "0.0.5"]
def @func_7115(%var_7101: Tensor[(15, 4, 11), bool], %var_7102: Tensor[(15, 4, 11), bool], %var_7110: Tensor[(126, 3), int16]) -> (Tensor[(15, 4, 11), bool], Tensor[(48), float64], Tensor[(126, 3), int16], Tensor[(24, 2), float64], Tensor[(?, 9, 16), float32]) {
  %0 = cast(%var_7102, dtype="bool") /* ty=Tensor[(15, 4, 11), bool] */;
  %1 = shape_of(%var_7101, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2 = cast(%var_7101, dtype="bool") /* ty=Tensor[(15, 4, 11), bool] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %4 = cast(%var_7110, dtype="int16") /* ty=Tensor[(126, 3), int16] */;
  %5 = cast(%var_7110, dtype="int16") /* ty=Tensor[(126, 3), int16] */;
  %6 = cast(meta[relay.Constant][0] /* ty=Tensor[(24, 2), float64] */, dtype="float64") /* ty=Tensor[(24, 2), float64] */;
  %7 = reshape(%4, newshape=[6, 9, 7]) /* ty=Tensor[(6, 9, 7), int16] */;
  %8 = reshape(%5, newshape=[6, 9, 7]) /* ty=Tensor[(6, 9, 7), int16] */;
  %9 = reshape(%6, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %10 = @func_3035(%7, %8, %9) /* ty=(Tensor[(6, 9, 7), int16], Tensor[(4, 2, 6), float64], Tensor[(48), float64], Tensor[(6, 8, 15), float32], Tensor[(2, 360), float32], Tensor[(16, 9, 4), float64], Tensor[(576), float64]) */;
  %11 = @func_6755() /* ty=(Tensor[(?, 9, 16), float32],) */;
  %12 = logical_and(%2, %3) /* ty=Tensor[(15, 4, 11), bool] */;
  %13 = %10.2;
  %14 = %11.0;
  (%12, %13, %var_7110, meta[relay.Constant][0] /* ty=Tensor[(24, 2), float64] */, %14)
}

def @func_11148() -> (Tensor[(10, 9, 16), float32],) {
  %15 = @func_8286() /* ty=(Tensor[(10, 9, 16), float32],) */;
  %16 = %15.0;
  (%16,)
}

def @func_3470(%var_3450: uint8, %var_3451: Tensor[(11, 5, 3), uint8]) -> (Tensor[(11, 5, 3), uint8], Tensor[(11, 5, 3), float32]) {
  %17 = cast(%var_3450, dtype="uint8") /* ty=uint8 */;
  %18 = cast(%var_3451, dtype="uint8") /* ty=Tensor[(11, 5, 3), uint8] */;
  %19 = cast(%var_3451, dtype="float32") /* ty=Tensor[(11, 5, 3), float32] */;
  %20 = logical_xor(%17, %18) /* ty=Tensor[(11, 5, 3), uint8] */;
  %21 = sqrt(%19) /* ty=Tensor[(11, 5, 3), float32] */;
  (%20, %21)
}

def @func_10661() -> (Tensor[(1, 9, 16), float64],) {
  %22 = @func_9938() /* ty=Tensor[(1, 9, 16), float64] */;
  (%22,)
}

def @func_5344(%var_5329: Tensor[(16, 13, 9), uint64]) -> (Tensor[(16, 13, 9), bool], Tensor[(16, 13, 9), float32]) {
  %23 = cast(%var_5329, dtype="bool") /* ty=Tensor[(16, 13, 9), bool] */;
  %24 = shape_of(meta[relay.Constant][1] /* ty=Tensor[(16, 13, 9), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %25 = cast(meta[relay.Constant][1] /* ty=Tensor[(16, 13, 9), uint64] */, dtype="bool") /* ty=Tensor[(16, 13, 9), bool] */;
  %26 = dyn.reshape(%23, %24, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %27 = cast(meta[relay.Constant][1] /* ty=Tensor[(16, 13, 9), uint64] */, dtype="float32") /* ty=Tensor[(16, 13, 9), float32] */;
  %28 = shape_of(%var_5329, dtype="int32") /* ty=Tensor[(3), int32] */;
  %29 = cast(%var_5329, dtype="float32") /* ty=Tensor[(16, 13, 9), float32] */;
  %30 = dyn.reshape(%27, %28, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %31 = greater(%25, %26) /* ty=Tensor[(16, 13, 9), bool] */;
  %32 = floor_divide(%29, %30) /* ty=Tensor[(16, 13, 9), float32] */;
  (%31, %32)
}

def @func_8340(%var_8322: Tensor[(6, 8, 15), float32], %var_8332: Tensor[(448), int32], %var_8333: Tensor[(819), float64]) -> (Tensor[(6, 8, 15), bool], Tensor[(819), float64], Tensor[(448), int32], Tensor[(819), float64], Tensor[(4, 2, 6), float64], Tensor[(378), int16], Tensor[(48), float64]) {
  %33 = @func_6257() /* ty=(Tensor[(?, 9, 16), int32], Tensor[(6, 8, 15), float32], Tensor[(720), float32]) */;
  %34 = %33.1;
  %35 = cast(%var_8322, dtype="bool") /* ty=Tensor[(6, 8, 15), bool] */;
  %36 = shape_of(%34, dtype="int32") /* ty=Tensor[(3), int32] */;
  %37 = cast(%34, dtype="bool") /* ty=Tensor[(6, 8, 15), bool] */;
  %38 = dyn.reshape(%35, %36, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %39 = cast(%var_8332, dtype="int32") /* ty=Tensor[(448), int32] */;
  %40 = cast(%var_8333, dtype="float64") /* ty=Tensor[(819), float64] */;
  %41 = reshape(%39, newshape=[448]) /* ty=Tensor[(448), int32] */;
  %42 = reshape(%40, newshape=[819]) /* ty=Tensor[(819), float64] */;
  %43 = @func_6638(%41, %42) /* ty=(Tensor[(1, 9, 16), float64], Tensor[(819), float64], int32, Tensor[(448), int32], Tensor[(819), float64], Tensor[(576), float64]) */;
  %44 = cast(meta[relay.Constant][2] /* ty=Tensor[(378), int16] */, dtype="int16") /* ty=Tensor[(378), int16] */;
  %45 = cast(meta[relay.Constant][2] /* ty=Tensor[(378), int16] */, dtype="int16") /* ty=Tensor[(378), int16] */;
  %46 = cast(meta[relay.Constant][3] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %47 = reshape(%44, newshape=[6, 9, 7]) /* ty=Tensor[(6, 9, 7), int16] */;
  %48 = reshape(%45, newshape=[6, 9, 7]) /* ty=Tensor[(6, 9, 7), int16] */;
  %49 = reshape(%46, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %50 = @func_3035(%47, %48, %49) /* ty=(Tensor[(6, 9, 7), int16], Tensor[(4, 2, 6), float64], Tensor[(48), float64], Tensor[(6, 8, 15), float32], Tensor[(2, 360), float32], Tensor[(16, 9, 4), float64], Tensor[(576), float64]) */;
  %51 = equal(%37, %38) /* ty=Tensor[(6, 8, 15), bool] */;
  %52 = %43.4;
  %53 = %50.1;
  (%51, %52, %var_8332, %var_8333, %53, meta[relay.Constant][2] /* ty=Tensor[(378), int16] */, meta[relay.Constant][3] /* ty=Tensor[(48), float64] */)
}

def @func_9443(%var_9421: Tensor[(48), float64]) -> (Tensor[(720), float32], uint8, Tensor[(1584), float32], Tensor[(48), float64]) {
  %54 = cast(meta[relay.Constant][4] /* ty=Tensor[(1584), float32] */, dtype="float32") /* ty=Tensor[(1584), float32] */;
  %55 = cast(%var_9421, dtype="float64") /* ty=Tensor[(48), float64] */;
  %56 = reshape(%54, newshape=[12, 12, 11]) /* ty=Tensor[(12, 12, 11), float32] */;
  %57 = reshape(%55, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %58 = @func_9366(%56, %57) /* ty=(Tensor[(48), float64], Tensor[(15), float64], Tensor[(48), float64], Tensor[(12, 12, 11), bool], Tensor[(1, 9, 16), float64], uint8) */;
  %59 = @func_7177() /* ty=Tensor[(720), float32] */;
  %60 = %58.5;
  (%59, %60, meta[relay.Constant][4] /* ty=Tensor[(1584), float32] */, %var_9421)
}

def @func_8115() -> (Tensor[(1, 9, 16), float64],) {
  %61 = @func_5742() /* ty=Tensor[(1, 9, 16), float64] */;
  (%61,)
}

def @func_2260(%var_2248: Tensor[(4, 3, 3), float32], %var_2252: Tensor[(660, 2), int8]) -> (Tensor[(4, 3, 3), float32], Tensor[(11, 8, 15), int8], Tensor[(660, 2), int8]) {
  %62 = cast(%var_2248, dtype="float32") /* ty=Tensor[(4, 3, 3), float32] */;
  %63 = cast(%var_2252, dtype="int8") /* ty=Tensor[(660, 2), int8] */;
  %64 = reshape(%63, newshape=[11, 8, 15]) /* ty=Tensor[(11, 8, 15), int8] */;
  %65 = rsqrt(%62) /* ty=Tensor[(4, 3, 3), float32] */;
  %66 = @func_1421(%64) /* ty=Tensor[(11, 8, 15), int8] */;
  (%65, %66, %var_2252)
}

def @func_9242(%var_9202: Tensor[(10, 5, 12), float32], %var_9207: uint8, %var_9209: Tensor[(36), float32]) -> (Tensor[(165), uint8], Tensor[(36), float32], Tensor[(10, 5, 12), bool], Tensor[(1, 9, 16), float64]) {
  %67 = cast(%var_9202, dtype="float32") /* ty=Tensor[(10, 5, 12), float32] */;
  %68 = asinh(%67) /* ty=Tensor[(10, 5, 12), float32] */;
  %69 = cast(%68, dtype="bool") /* ty=Tensor[(10, 5, 12), bool] */;
  %70 = cast(%var_9207, dtype="bool") /* ty=bool */;
  %71 = cast(%var_9207, dtype="uint8") /* ty=uint8 */;
  %72 = cast(meta[relay.Constant][5] /* ty=Tensor[(165), uint8] */, dtype="uint8") /* ty=Tensor[(165), uint8] */;
  %73 = cast(%var_9209, dtype="float32") /* ty=Tensor[(36), float32] */;
  %74 = reshape(%71, newshape=[]) /* ty=uint8 */;
  %75 = reshape(%72, newshape=[165]) /* ty=Tensor[(165), uint8] */;
  %76 = reshape(%73, newshape=[36]) /* ty=Tensor[(36), float32] */;
  %77 = @func_8875(%74, %75, %76) /* ty=(Tensor[(1, 9, 16), float64], Tensor[(1, 9, 16), float64], uint8, Tensor[(165), uint8], Tensor[(72), uint32], Tensor[(36, 16), float64], Tensor[(36), float32]) */;
  %78 = %77.1;
  %79 = cast(%78, dtype="float64") /* ty=Tensor[(1, 9, 16), float64] */;
  %80 = greater(%69, %70) /* ty=Tensor[(10, 5, 12), bool] */;
  %81 = acos(%79) /* ty=Tensor[(1, 9, 16), float64] */;
  (meta[relay.Constant][5] /* ty=Tensor[(165), uint8] */, %var_9209, %80, %81)
}

def @func_7441() -> Tensor[(1, 9, 16), float64] {
  %82 = @func_6674() /* ty=(Tensor[(1, 9, 16), float64],) */;
  %82.0
}

def @func_9763() -> Tensor[(?, 9, 16), float32] {
  %83 = @func_6755() /* ty=(Tensor[(?, 9, 16), float32],) */;
  %83.0
}

def @func_5631() -> Tensor[(1, 9, 16), float64] {
  @func_5555() /* ty=Tensor[(1, 9, 16), float64] */
}

def @func_6186() -> Tensor[(1, 9, 16), float64] {
  @func_5742() /* ty=Tensor[(1, 9, 16), float64] */
}

def @func_5742() -> Tensor[(1, 9, 16), float64] {
  @func_5631() /* ty=Tensor[(1, 9, 16), float64] */
}

def @func_5911(%var_5905: Tensor[(210), float32]) -> (Tensor[(1, 9, 16), float64], Tensor[(1, 9, 16), float64], Tensor[(3, 15, 13), bool], Tensor[(585), float32], Tensor[(1, 9, 16), float64], Tensor[(182), uint64], Tensor[(210), float32]) {
  %84 = cast(meta[relay.Constant][6] /* ty=Tensor[(585), float32] */, dtype="float32") /* ty=Tensor[(585), float32] */;
  %85 = reshape(%84, newshape=[3, 15, 13]) /* ty=Tensor[(3, 15, 13), float32] */;
  %86 = cast(%var_5905, dtype="float32") /* ty=Tensor[(210), float32] */;
  %87 = reshape(%86, newshape=[3, 5, 14]) /* ty=Tensor[(3, 5, 14), float32] */;
  %88 = @func_2873(%87) /* ty=(Tensor[(3, 5, 14), float32], Tensor[(16, 9, 4), float64], Tensor[(182), uint64]) */;
  %89 = @func_5555() /* ty=Tensor[(1, 9, 16), float64] */;
  %90 = @func_5555() /* ty=Tensor[(1, 9, 16), float64] */;
  %91 = @func_4677(%85) /* ty=Tensor[(3, 15, 13), bool] */;
  %92 = @func_5843() /* ty=Tensor[(1, 9, 16), float64] */;
  %93 = %88.2;
  (%89, %90, %91, meta[relay.Constant][6] /* ty=Tensor[(585), float32] */, %92, %93, %var_5905)
}

def @func_9603() -> (Tensor[(1, 9, 16), float64],) {
  %94 = @func_7602() /* ty=(Tensor[(1, 9, 16), float64],) */;
  %95 = %94.0;
  (%95,)
}

def @func_1823(%var_1818: Tensor[(4, 2, 6), float64]) -> Tensor[(4, 2, 6), float64] {
  %96 = cast(%var_1818, dtype="float64") /* ty=Tensor[(4, 2, 6), float64] */;
  sinh(%96) /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_6313(%var_6295: Tensor[(1, 3, 5), float64], %var_6310: Tensor[(48), float64]) -> (Tensor[(2, 3, 5), float64], Tensor[(4, 2, 6), float64], Tensor[(48), float64]) {
  %97 = cast(%var_6295, dtype="float64") /* ty=Tensor[(1, 3, 5), float64] */;
  %98 = cast(meta[relay.Constant][7] /* ty=Tensor[(2, 3, 5), float64] */, dtype="float64") /* ty=Tensor[(2, 3, 5), float64] */;
  %99 = cast(%var_6310, dtype="float64") /* ty=Tensor[(48), float64] */;
  %100 = reshape(%99, newshape=[4, 2, 6]) /* ty=Tensor[(4, 2, 6), float64] */;
  %101 = floor_divide(%97, %98) /* ty=Tensor[(2, 3, 5), float64] */;
  %102 = @func_1823(%100) /* ty=Tensor[(4, 2, 6), float64] */;
  (%101, %102, %var_6310)
}

def @func_9907() -> Tensor[(1, 9, 16), float64] {
  @func_6588() /* ty=Tensor[(1, 9, 16), float64] */
}

def @func_8997(%var_8993: float32, %var_8994: Tensor[(350, 3), float32]) -> (Tensor[(1, 9, 16), float64], Tensor[(5, 15, 14), float32], float32, Tensor[(350, 3), float32]) {
  %103 = cast(%var_8993, dtype="float32") /* ty=float32 */;
  %104 = cast(%var_8994, dtype="float32") /* ty=Tensor[(350, 3), float32] */;
  %105 = reshape(%103, newshape=[]) /* ty=float32 */;
  %106 = reshape(%104, newshape=[5, 15, 14]) /* ty=Tensor[(5, 15, 14), float32] */;
  %107 = @func_8417(%105, %106) /* ty=(Tensor[(5, 15, 14), float32],) */;
  %108 = @func_7787() /* ty=Tensor[(1, 9, 16), float64] */;
  %109 = %107.0;
  (%108, %109, %var_8993, %var_8994)
}

def @func_11231(%var_11208: Tensor[(48), float64]) -> (Tensor[(10, 9, 16), float32], Tensor[(6, 9, 7), int16], Tensor[(378, 1), int16], Tensor[(48), float64]) {
  %110 = cast(meta[relay.Constant][8] /* ty=Tensor[(378, 1), int16] */, dtype="int16") /* ty=Tensor[(378, 1), int16] */;
  %111 = cast(meta[relay.Constant][8] /* ty=Tensor[(378, 1), int16] */, dtype="int16") /* ty=Tensor[(378, 1), int16] */;
  %112 = cast(%var_11208, dtype="float64") /* ty=Tensor[(48), float64] */;
  %113 = reshape(%110, newshape=[6, 9, 7]) /* ty=Tensor[(6, 9, 7), int16] */;
  %114 = reshape(%111, newshape=[6, 9, 7]) /* ty=Tensor[(6, 9, 7), int16] */;
  %115 = reshape(%112, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %116 = @func_3035(%113, %114, %115) /* ty=(Tensor[(6, 9, 7), int16], Tensor[(4, 2, 6), float64], Tensor[(48), float64], Tensor[(6, 8, 15), float32], Tensor[(2, 360), float32], Tensor[(16, 9, 4), float64], Tensor[(576), float64]) */;
  %117 = @func_8300() /* ty=Tensor[(10, 9, 16), float32] */;
  %118 = %116.0;
  (%117, %118, meta[relay.Constant][8] /* ty=Tensor[(378, 1), int16] */, %var_11208)
}

def @func_4677(%var_4663: Tensor[(3, 15, 13), float32]) -> Tensor[(3, 15, 13), bool] {
  %119 = cast(%var_4663, dtype="float32") /* ty=Tensor[(3, 15, 13), float32] */;
  %120 = sinh(%119) /* ty=Tensor[(3, 15, 13), float32] */;
  %121 = cast(%120, dtype="bool") /* ty=Tensor[(3, 15, 13), bool] */;
  %122 = shape_of(%var_4663, dtype="int32") /* ty=Tensor[(3), int32] */;
  %123 = cast(%var_4663, dtype="bool") /* ty=Tensor[(3, 15, 13), bool] */;
  %124 = dyn.reshape(%121, %122, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%123, %124) /* ty=Tensor[(3, 15, 13), bool] */
}

def @func_983(%var_952: Tensor[(13, 2, 7), uint64]) -> (Tensor[(13, 2, 7), uint64], Tensor[(16, 9, 4), float64], Tensor[(1, 819), float64], Tensor[(576), float64], Tensor[(16, 9, 4), float64], Tensor[(16, 9, 4), float64]) {
  %125 = cast(meta[relay.Constant][9] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %126 = cast(%var_952, dtype="uint64") /* ty=Tensor[(13, 2, 7), uint64] */;
  %127 = cast(meta[relay.Constant][10] /* ty=Tensor[(1, 819), float64] */, dtype="float64") /* ty=Tensor[(1, 819), float64] */;
  %128 = cast(meta[relay.Constant][10] /* ty=Tensor[(1, 819), float64] */, dtype="float64") /* ty=Tensor[(1, 819), float64] */;
  %129 = cast(meta[relay.Constant][11] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
  %130 = reshape(%127, newshape=[7, 13, 9]) /* ty=Tensor[(7, 13, 9), float64] */;
  %131 = reshape(%128, newshape=[7, 13, 9]) /* ty=Tensor[(7, 13, 9), float64] */;
  %132 = reshape(%129, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %133 = @func_578(%130, %131, %132) /* ty=(Tensor[(16, 9, 4), float64], Tensor[(576), float64], Tensor[(16, 9, 4), float64], Tensor[(7, 13, 9), bool], Tensor[(16, 9, 4), float64], Tensor[(7, 13, 9), float32], Tensor[(16, 9, 4), float64]) */;
  %134 = %133.0;
  %135 = cast(%134, dtype="float64") /* ty=Tensor[(16, 9, 4), float64] */;
  %136 = reshape(%135, newshape=[16, 9, 4]) /* ty=Tensor[(16, 9, 4), float64] */;
  %137 = @func_363(%136) /* ty=(Tensor[(16, 9, 4), float64],) */;
  %138 = cast(meta[relay.Constant][11] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
  %139 = reshape(%138, newshape=[16, 9, 4]) /* ty=Tensor[(16, 9, 4), float64] */;
  %140 = @func_363(%139) /* ty=(Tensor[(16, 9, 4), float64],) */;
  %141 = left_shift(%125, %126) /* ty=Tensor[(13, 2, 7), uint64] */;
  %142 = %137.0;
  %143 = %140.0;
  (%141, %134, meta[relay.Constant][10] /* ty=Tensor[(1, 819), float64] */, meta[relay.Constant][11] /* ty=Tensor[(576), float64] */, %142, %143)
}

def @func_7364() -> (Tensor[(10, 9, 16), float32], Tensor[(1, 9, 16), float64]) {
  %144 = @func_6674() /* ty=(Tensor[(1, 9, 16), float64],) */;
  %145 = %144.0;
  %146 = cast(%145, dtype="float32") /* ty=Tensor[(1, 9, 16), float32] */;
  %147 = cast(meta[relay.Constant][12] /* ty=Tensor[(10, 9, 16), float64] */, dtype="float32") /* ty=Tensor[(10, 9, 16), float32] */;
  %148 = @func_6847() /* ty=(Tensor[(1, 9, 16), float64], Tensor[(1, 9, 16), float64], Tensor[(1, 9, 16), float64]) */;
  %149 = floor_mod(%146, %147) /* ty=Tensor[(10, 9, 16), float32] */;
  %150 = %148.2;
  (%149, %150)
}

def @func_5555() -> Tensor[(1, 9, 16), float64] {
  %151 = cast(meta[relay.Constant][13] /* ty=Tensor[(1, 9, 16), float64] */, dtype="float64") /* ty=Tensor[(1, 9, 16), float64] */;
  %152 = sinh(%151) /* ty=Tensor[(1, 9, 16), float64] */;
  %153 = cast(%152, dtype="float64") /* ty=Tensor[(1, 9, 16), float64] */;
  cosh(%153) /* ty=Tensor[(1, 9, 16), float64] */
}

def @func_7602() -> (Tensor[(1, 9, 16), float64],) {
  %154 = @func_6878() /* ty=(Tensor[(1, 9, 16), float64],) */;
  %155 = %154.0;
  (%155,)
}

def @func_8947(%var_8940: int32) -> (Tensor[(10, 9, 16), bool], Tensor[(448), int32], int32, Tensor[(819), float64]) {
  %156 = @func_8300() /* ty=Tensor[(10, 9, 16), float32] */;
  %157 = cast(%156, dtype="float32") /* ty=Tensor[(10, 9, 16), float32] */;
  %158 = acos(%157) /* ty=Tensor[(10, 9, 16), float32] */;
  %159 = cast(meta[relay.Constant][14] /* ty=Tensor[(10, 9, 16), float32] */, dtype="bool") /* ty=Tensor[(10, 9, 16), bool] */;
  %160 = shape_of(%158, dtype="int32") /* ty=Tensor[(3), int32] */;
  %161 = cast(%158, dtype="bool") /* ty=Tensor[(10, 9, 16), bool] */;
  %162 = dyn.reshape(%159, %160, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %163 = cast(%var_8940, dtype="int32") /* ty=int32 */;
  %164 = cast(meta[relay.Constant][15] /* ty=Tensor[(819), float64] */, dtype="float64") /* ty=Tensor[(819), float64] */;
  %165 = reshape(%163, newshape=[]) /* ty=int32 */;
  %166 = reshape(%164, newshape=[819]) /* ty=Tensor[(819), float64] */;
  %167 = @func_5954(%165, %166) /* ty=(Tensor[(1, 9, 16), float64], Tensor[(819), float64], int32, Tensor[(448), int32], Tensor[(819), float64], Tensor[(12, 48), float64]) */;
  %168 = logical_or(%161, %162) /* ty=Tensor[(10, 9, 16), bool] */;
  %169 = %167.3;
  (%168, %169, %var_8940, meta[relay.Constant][15] /* ty=Tensor[(819), float64] */)
}

def @func_6956() -> (Tensor[(1, 9, 16), float64],) {
  %170 = @func_5631() /* ty=Tensor[(1, 9, 16), float64] */;
  (%170,)
}

def @func_2463(%var_2457: Tensor[(576), float64]) -> (Tensor[(16, 5), float64], Tensor[(576), float64], Tensor[(819), float64], Tensor[(576), float64]) {
  %171 = cast(meta[relay.Constant][16] /* ty=Tensor[(16, 5), float64] */, dtype="float64") /* ty=Tensor[(16, 5), float64] */;
  %172 = cast(meta[relay.Constant][17] /* ty=Tensor[(819), float64] */, dtype="float64") /* ty=Tensor[(819), float64] */;
  %173 = cast(meta[relay.Constant][17] /* ty=Tensor[(819), float64] */, dtype="float64") /* ty=Tensor[(819), float64] */;
  %174 = cast(%var_2457, dtype="float64") /* ty=Tensor[(576), float64] */;
  %175 = reshape(%172, newshape=[7, 13, 9]) /* ty=Tensor[(7, 13, 9), float64] */;
  %176 = reshape(%173, newshape=[7, 13, 9]) /* ty=Tensor[(7, 13, 9), float64] */;
  %177 = reshape(%174, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %178 = @func_578(%175, %176, %177) /* ty=(Tensor[(16, 9, 4), float64], Tensor[(576), float64], Tensor[(16, 9, 4), float64], Tensor[(7, 13, 9), bool], Tensor[(16, 9, 4), float64], Tensor[(7, 13, 9), float32], Tensor[(16, 9, 4), float64]) */;
  %179 = atanh(%171) /* ty=Tensor[(16, 5), float64] */;
  %180 = %178.1;
  (%179, %180, meta[relay.Constant][17] /* ty=Tensor[(819), float64] */, %var_2457)
}

def @func_9542() -> (Tensor[(1, 9, 16), float64],) {
  %181 = @func_6588() /* ty=Tensor[(1, 9, 16), float64] */;
  (%181,)
}

def @func_9366(%var_9330: Tensor[(12, 12, 11), float32], %var_9338: Tensor[(48), float64]) -> (Tensor[(48), float64], Tensor[(15), float64], Tensor[(48), float64], Tensor[(12, 12, 11), bool], Tensor[(1, 9, 16), float64], uint8) {
  %182 = cast(meta[relay.Constant][18] /* ty=Tensor[(15), float64] */, dtype="float64") /* ty=Tensor[(15), float64] */;
  %183 = cast(%var_9338, dtype="float64") /* ty=Tensor[(48), float64] */;
  %184 = reshape(%182, newshape=[1, 3, 5]) /* ty=Tensor[(1, 3, 5), float64] */;
  %185 = reshape(%183, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %186 = @func_6313(%184, %185) /* ty=(Tensor[(2, 3, 5), float64], Tensor[(4, 2, 6), float64], Tensor[(48), float64]) */;
  %187 = cast(%var_9330, dtype="float32") /* ty=Tensor[(12, 12, 11), float32] */;
  %188 = tan(%187) /* ty=Tensor[(12, 12, 11), float32] */;
  %189 = cast(%var_9330, dtype="bool") /* ty=Tensor[(12, 12, 11), bool] */;
  %190 = shape_of(%188, dtype="int32") /* ty=Tensor[(3), int32] */;
  %191 = cast(%188, dtype="bool") /* ty=Tensor[(12, 12, 11), bool] */;
  %192 = dyn.reshape(%189, %190, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %193 = cast(meta[relay.Constant][19] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %194 = reshape(%193, newshape=[]) /* ty=uint8 */;
  %195 = @func_5680(%194) /* ty=(Tensor[(1, 9, 16), float64], Tensor[(11, 5, 3), float32], uint8, Tensor[(165), uint8], Tensor[(1, 9, 16), float64]) */;
  %196 = %186.2;
  %197 = logical_or(%191, %192) /* ty=Tensor[(12, 12, 11), bool] */;
  %198 = %195.0;
  (%196, meta[relay.Constant][18] /* ty=Tensor[(15), float64] */, %var_9338, %197, %198, meta[relay.Constant][19] /* ty=uint8 */)
}

def @func_9915() -> (Tensor[(1, 9, 16), float64],) {
  %199 = @func_6847() /* ty=(Tensor[(1, 9, 16), float64], Tensor[(1, 9, 16), float64], Tensor[(1, 9, 16), float64]) */;
  %200 = %199.1;
  (%200,)
}

def @func_10140(%var_10120: Tensor[(1, 1584), float64]) -> (Tensor[(1, 9, 16), float64], Tensor[(11, 9, 16), int16], Tensor[(1, 1584), float64]) {
  %201 = @func_9667() /* ty=(Tensor[(1, 9, 16), float64],) */;
  %202 = cast(%var_10120, dtype="float64") /* ty=Tensor[(1, 1584), float64] */;
  %203 = reshape(%202, newshape=[11, 9, 16]) /* ty=Tensor[(11, 9, 16), float64] */;
  %204 = @func_8578(%203) /* ty=(Tensor[(?, 9, 16), uint64], Tensor[(11, 9, 16), int16], Tensor[(1, 9, 16), float64], Tensor[(11, 8, 15), int8], Tensor[(1320), int8]) */;
  %205 = %201.0;
  %206 = %204.1;
  (%205, %206, %var_10120)
}

def @func_5843() -> Tensor[(1, 9, 16), float64] {
  @func_5742() /* ty=Tensor[(1, 9, 16), float64] */
}

def @func_10001() -> Tensor[(1, 9, 16), float32] {
  %207 = @func_6055() /* ty=(Tensor[(?, 9, 16), uint32], Tensor[(1, 9, 16), float32]) */;
  %207.1
}

def @func_9938() -> Tensor[(1, 9, 16), float64] {
  %208 = @func_9915() /* ty=(Tensor[(1, 9, 16), float64],) */;
  %208.0
}

def @func_578(%var_530: Tensor[(7, 13, 9), float64], %var_531: Tensor[(7, 13, 9), float64], %var_537: Tensor[(576), float64]) -> (Tensor[(16, 9, 4), float64], Tensor[(576), float64], Tensor[(16, 9, 4), float64], Tensor[(7, 13, 9), bool], Tensor[(16, 9, 4), float64], Tensor[(7, 13, 9), float32], Tensor[(16, 9, 4), float64]) {
  %209 = cast(%var_537, dtype="float64") /* ty=Tensor[(576), float64] */;
  %210 = reshape(%209, newshape=[16, 9, 4]) /* ty=Tensor[(16, 9, 4), float64] */;
  %211 = @func_363(%210) /* ty=(Tensor[(16, 9, 4), float64],) */;
  %212 = cast(%var_537, dtype="float64") /* ty=Tensor[(576), float64] */;
  %213 = reshape(%212, newshape=[16, 9, 4]) /* ty=Tensor[(16, 9, 4), float64] */;
  %214 = @func_363(%213) /* ty=(Tensor[(16, 9, 4), float64],) */;
  %215 = %214.0;
  %216 = cast(%215, dtype="float64") /* ty=Tensor[(16, 9, 4), float64] */;
  %217 = shape_of(%var_537, dtype="int32") /* ty=Tensor[(1), int32] */;
  %218 = cast(%var_537, dtype="float64") /* ty=Tensor[(576), float64] */;
  %219 = dyn.reshape(%216, %217, newshape=[]) /* ty=Tensor[(?), float64] */;
  %220 = cast(%215, dtype="float64") /* ty=Tensor[(16, 9, 4), float64] */;
  %221 = reshape(%220, newshape=[16, 9, 4]) /* ty=Tensor[(16, 9, 4), float64] */;
  %222 = @func_363(%221) /* ty=(Tensor[(16, 9, 4), float64],) */;
  %223 = cast(%var_531, dtype="bool") /* ty=Tensor[(7, 13, 9), bool] */;
  %224 = shape_of(%var_530, dtype="int32") /* ty=Tensor[(3), int32] */;
  %225 = cast(%var_530, dtype="bool") /* ty=Tensor[(7, 13, 9), bool] */;
  %226 = dyn.reshape(%223, %224, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %227 = equal(%225, %226) /* ty=Tensor[(7, 13, 9), bool] */;
  %228 = cast(%227, dtype="bool") /* ty=Tensor[(7, 13, 9), bool] */;
  %229 = shape_of(%var_531, dtype="int32") /* ty=Tensor[(3), int32] */;
  %230 = cast(%var_531, dtype="bool") /* ty=Tensor[(7, 13, 9), bool] */;
  %231 = dyn.reshape(%228, %229, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %232 = cast(%215, dtype="float64") /* ty=Tensor[(16, 9, 4), float64] */;
  %233 = reshape(%232, newshape=[16, 9, 4]) /* ty=Tensor[(16, 9, 4), float64] */;
  %234 = @func_363(%233) /* ty=(Tensor[(16, 9, 4), float64],) */;
  %235 = cast(%227, dtype="float32") /* ty=Tensor[(7, 13, 9), float32] */;
  %236 = minimum(%218, %219) /* ty=Tensor[(576), float64] */;
  %237 = cast(%236, dtype="float64") /* ty=Tensor[(576), float64] */;
  %238 = reshape(%237, newshape=[16, 9, 4]) /* ty=Tensor[(16, 9, 4), float64] */;
  %239 = @func_363(%238) /* ty=(Tensor[(16, 9, 4), float64],) */;
  %240 = %211.0;
  %241 = %222.0;
  %242 = greater_equal(%230, %231) /* ty=Tensor[(7, 13, 9), bool] */;
  %243 = %234.0;
  %244 = acos(%235) /* ty=Tensor[(7, 13, 9), float32] */;
  %245 = %239.0;
  (%240, %236, %241, %242, %243, %244, %245)
}

def @func_10787() -> Tensor[(1, 9, 16), float64] {
  @func_7441() /* ty=Tensor[(1, 9, 16), float64] */
}

def @func_6755() -> (Tensor[(?, 9, 16), float32],) {
  %246 = @func_6674() /* ty=(Tensor[(1, 9, 16), float64],) */;
  %247 = %246.0;
  %248 = @func_6674() /* ty=(Tensor[(1, 9, 16), float64],) */;
  %249 = %248.0;
  %250 = cast(%249, dtype="float32") /* ty=Tensor[(1, 9, 16), float32] */;
  %251 = shape_of(%247, dtype="int32") /* ty=Tensor[(3), int32] */;
  %252 = cast(%247, dtype="float32") /* ty=Tensor[(1, 9, 16), float32] */;
  %253 = dyn.reshape(%250, %251, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %254 = floor_mod(%252, %253) /* ty=Tensor[(?, 9, 16), float32] */;
  (%254,)
}

def @func_8395(%var_8363: Tensor[(3, 3, 13), float64]) -> (Tensor[(3, 3, 13), float64], Tensor[(4, 2, 6), float64], Tensor[(48), float64]) {
  %255 = cast(1.94046f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %256 = cast(%var_8363, dtype="float64") /* ty=Tensor[(3, 3, 13), float64] */;
  %257 = cast(meta[relay.Constant][20] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %258 = reshape(%257, newshape=[4, 2, 6]) /* ty=Tensor[(4, 2, 6), float64] */;
  %259 = power(%255, %256) /* ty=Tensor[(3, 3, 13), float64] */;
  %260 = @func_1823(%258) /* ty=Tensor[(4, 2, 6), float64] */;
  (%259, %260, meta[relay.Constant][20] /* ty=Tensor[(48), float64] */)
}

def @func_1162(%var_1082: int32, %var_1083: Tensor[(8, 4, 14), int32], %var_1100: Tensor[(819), float64], %var_1101: Tensor[(576), float64]) -> (Tensor[(8, 4, 14), bool], Tensor[(8, 4, 14), float64], Tensor[(819), float64], Tensor[(7, 13, 9), bool], Tensor[(576), uint32], Tensor[(16, 9, 4), float32]) {
  %261 = cast(%var_1082, dtype="bool") /* ty=bool */;
  %262 = cast(%var_1083, dtype="bool") /* ty=Tensor[(8, 4, 14), bool] */;
  %263 = cast(%var_1083, dtype="float64") /* ty=Tensor[(8, 4, 14), float64] */;
  %264 = cast(%var_1082, dtype="float64") /* ty=float64 */;
  %265 = cast(%var_1100, dtype="float64") /* ty=Tensor[(819), float64] */;
  %266 = cast(%var_1100, dtype="float64") /* ty=Tensor[(819), float64] */;
  %267 = cast(%var_1100, dtype="float64") /* ty=Tensor[(819), float64] */;
  %268 = cast(%var_1100, dtype="float64") /* ty=Tensor[(819), float64] */;
  %269 = cast(%var_1101, dtype="float64") /* ty=Tensor[(576), float64] */;
  %270 = reshape(%267, newshape=[7, 13, 9]) /* ty=Tensor[(7, 13, 9), float64] */;
  %271 = reshape(%268, newshape=[7, 13, 9]) /* ty=Tensor[(7, 13, 9), float64] */;
  %272 = reshape(%269, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %273 = @func_578(%270, %271, %272) /* ty=(Tensor[(16, 9, 4), float64], Tensor[(576), float64], Tensor[(16, 9, 4), float64], Tensor[(7, 13, 9), bool], Tensor[(16, 9, 4), float64], Tensor[(7, 13, 9), float32], Tensor[(16, 9, 4), float64]) */;
  %274 = %273.0;
  %275 = cast(%274, dtype="float64") /* ty=Tensor[(16, 9, 4), float64] */;
  %276 = shape_of(%var_1101, dtype="int32") /* ty=Tensor[(1), int32] */;
  %277 = cast(%var_1101, dtype="float64") /* ty=Tensor[(576), float64] */;
  %278 = dyn.reshape(%275, %276, newshape=[]) /* ty=Tensor[(?), float64] */;
  %279 = mod(%277, %278) /* ty=Tensor[(576), float64] */;
  %280 = cast(%279, dtype="float64") /* ty=Tensor[(576), float64] */;
  %281 = reshape(%265, newshape=[7, 13, 9]) /* ty=Tensor[(7, 13, 9), float64] */;
  %282 = reshape(%266, newshape=[7, 13, 9]) /* ty=Tensor[(7, 13, 9), float64] */;
  %283 = reshape(%280, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %284 = @func_578(%281, %282, %283) /* ty=(Tensor[(16, 9, 4), float64], Tensor[(576), float64], Tensor[(16, 9, 4), float64], Tensor[(7, 13, 9), bool], Tensor[(16, 9, 4), float64], Tensor[(7, 13, 9), float32], Tensor[(16, 9, 4), float64]) */;
  %285 = cast(%var_1100, dtype="float64") /* ty=Tensor[(819), float64] */;
  %286 = cast(%var_1100, dtype="float64") /* ty=Tensor[(819), float64] */;
  %287 = cast(%274, dtype="float64") /* ty=Tensor[(16, 9, 4), float64] */;
  %288 = reshape(%285, newshape=[7, 13, 9]) /* ty=Tensor[(7, 13, 9), float64] */;
  %289 = reshape(%286, newshape=[7, 13, 9]) /* ty=Tensor[(7, 13, 9), float64] */;
  %290 = reshape(%287, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %291 = @func_578(%288, %289, %290) /* ty=(Tensor[(16, 9, 4), float64], Tensor[(576), float64], Tensor[(16, 9, 4), float64], Tensor[(7, 13, 9), bool], Tensor[(16, 9, 4), float64], Tensor[(7, 13, 9), float32], Tensor[(16, 9, 4), float64]) */;
  %292 = %291.2;
  %293 = cast(%292, dtype="uint32") /* ty=Tensor[(16, 9, 4), uint32] */;
  %294 = shape_of(%279, dtype="int32") /* ty=Tensor[(1), int32] */;
  %295 = cast(%279, dtype="uint32") /* ty=Tensor[(576), uint32] */;
  %296 = dyn.reshape(%293, %294, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %297 = cast(%274, dtype="float32") /* ty=Tensor[(16, 9, 4), float32] */;
  %298 = equal(%261, %262) /* ty=Tensor[(8, 4, 14), bool] */;
  %299 = mod(%263, %264) /* ty=Tensor[(8, 4, 14), float64] */;
  %300 = %284.3;
  %301 = bitwise_or(%295, %296) /* ty=Tensor[(576), uint32] */;
  %302 = erf(%297) /* ty=Tensor[(16, 9, 4), float32] */;
  (%298, %299, %var_1100, %300, %301, %302)
}

def @func_2873(%var_2859: Tensor[(3, 5, 14), float32]) -> (Tensor[(3, 5, 14), float32], Tensor[(16, 9, 4), float64], Tensor[(182), uint64]) {
  %303 = cast(%var_2859, dtype="float32") /* ty=Tensor[(3, 5, 14), float32] */;
  %304 = cast(meta[relay.Constant][21] /* ty=Tensor[(182), uint64] */, dtype="uint64") /* ty=Tensor[(182), uint64] */;
  %305 = reshape(%304, newshape=[13, 2, 7]) /* ty=Tensor[(13, 2, 7), uint64] */;
  %306 = @func_983(%305) /* ty=(Tensor[(13, 2, 7), uint64], Tensor[(16, 9, 4), float64], Tensor[(1, 819), float64], Tensor[(576), float64], Tensor[(16, 9, 4), float64], Tensor[(16, 9, 4), float64]) */;
  %307 = log2(%303) /* ty=Tensor[(3, 5, 14), float32] */;
  %308 = %306.1;
  (%307, %308, meta[relay.Constant][21] /* ty=Tensor[(182), uint64] */)
}

def @func_7078(%var_7020: Tensor[(2, 3, 5), float64]) -> (Tensor[(6, 8, 15), float32], Tensor[(15), float64], Tensor[(48), float64], Tensor[(2, 3, 5), int64], Tensor[(2, 3, 5), float64], Tensor[(1, 9, 16), float64]) {
  %309 = @func_6257() /* ty=(Tensor[(?, 9, 16), int32], Tensor[(6, 8, 15), float32], Tensor[(720), float32]) */;
  %310 = %309.1;
  %311 = cast(%310, dtype="float32") /* ty=Tensor[(6, 8, 15), float32] */;
  %312 = cast(meta[relay.Constant][22] /* ty=Tensor[(15), float64] */, dtype="float64") /* ty=Tensor[(15), float64] */;
  %313 = cast(meta[relay.Constant][23] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %314 = reshape(%312, newshape=[1, 3, 5]) /* ty=Tensor[(1, 3, 5), float64] */;
  %315 = reshape(%313, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %316 = @func_6313(%314, %315) /* ty=(Tensor[(2, 3, 5), float64], Tensor[(4, 2, 6), float64], Tensor[(48), float64]) */;
  %317 = %316.0;
  %318 = cast(%var_7020, dtype="int64") /* ty=Tensor[(2, 3, 5), int64] */;
  %319 = shape_of(%317, dtype="int32") /* ty=Tensor[(3), int32] */;
  %320 = cast(%317, dtype="int64") /* ty=Tensor[(2, 3, 5), int64] */;
  %321 = dyn.reshape(%318, %319, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %322 = cast(%317, dtype="float64") /* ty=Tensor[(2, 3, 5), float64] */;
  %323 = @func_6674() /* ty=(Tensor[(1, 9, 16), float64],) */;
  %324 = cosh(%311) /* ty=Tensor[(6, 8, 15), float32] */;
  %325 = maximum(%320, %321) /* ty=Tensor[(2, 3, 5), int64] */;
  %326 = atanh(%322) /* ty=Tensor[(2, 3, 5), float64] */;
  %327 = %323.0;
  (%324, meta[relay.Constant][22] /* ty=Tensor[(15), float64] */, meta[relay.Constant][23] /* ty=Tensor[(48), float64] */, %325, %326, %327)
}

def @func_8286() -> (Tensor[(10, 9, 16), float32],) {
  %328 = @func_7364() /* ty=(Tensor[(10, 9, 16), float32], Tensor[(1, 9, 16), float64]) */;
  %329 = %328.0;
  (%329,)
}

def @func_7872() -> (Tensor[(1, 9, 16), float64],) {
  %330 = @func_5577() /* ty=(Tensor[(1, 9, 16), float64],) */;
  %331 = %330.0;
  (%331,)
}

def @func_9052(%var_9020: Tensor[(16, 9, 16), float64], %var_9041: Tensor[(210), float32]) -> (Tensor[(16, 9, 16), int16], Tensor[(1, 9, 16), float64], Tensor[(210), float32], Tensor[(16, 9, 16), float32]) {
  %332 = @func_6588() /* ty=Tensor[(1, 9, 16), float64] */;
  %333 = cast(%332, dtype="int16") /* ty=Tensor[(1, 9, 16), int16] */;
  %334 = cast(%var_9020, dtype="int16") /* ty=Tensor[(16, 9, 16), int16] */;
  %335 = cast(%var_9041, dtype="float32") /* ty=Tensor[(210), float32] */;
  %336 = reshape(%335, newshape=[210]) /* ty=Tensor[(210), float32] */;
  %337 = @func_5911(%336) /* ty=(Tensor[(1, 9, 16), float64], Tensor[(1, 9, 16), float64], Tensor[(3, 15, 13), bool], Tensor[(585), float32], Tensor[(1, 9, 16), float64], Tensor[(182), uint64], Tensor[(210), float32]) */;
  %338 = @func_5631() /* ty=Tensor[(1, 9, 16), float64] */;
  %339 = cast(%var_9020, dtype="float32") /* ty=Tensor[(16, 9, 16), float32] */;
  %340 = cast(%338, dtype="float32") /* ty=Tensor[(1, 9, 16), float32] */;
  %341 = bitwise_and(%333, %334) /* ty=Tensor[(16, 9, 16), int16] */;
  %342 = %337.4;
  %343 = floor_divide(%339, %340) /* ty=Tensor[(16, 9, 16), float32] */;
  (%341, %342, %var_9041, %343)
}

def @func_10883(%var_10870: Tensor[(14, 9, 16), float64]) -> (Tensor[(14, 9, 16), float64],) {
  %344 = @func_6878() /* ty=(Tensor[(1, 9, 16), float64],) */;
  %345 = %344.0;
  %346 = cast(%345, dtype="float64") /* ty=Tensor[(1, 9, 16), float64] */;
  %347 = cast(%var_10870, dtype="float64") /* ty=Tensor[(14, 9, 16), float64] */;
  %348 = maximum(%346, %347) /* ty=Tensor[(14, 9, 16), float64] */;
  (%348,)
}

def @func_6588() -> Tensor[(1, 9, 16), float64] {
  @func_6203() /* ty=Tensor[(1, 9, 16), float64] */
}

def @func_6878() -> (Tensor[(1, 9, 16), float64],) {
  %349 = @func_6186() /* ty=Tensor[(1, 9, 16), float64] */;
  (%349,)
}

def @func_7787() -> Tensor[(1, 9, 16), float64] {
  @func_5843() /* ty=Tensor[(1, 9, 16), float64] */
}

def @func_2056(%var_2024: Tensor[(14, 3), float32], %var_2041: Tensor[(1320), int8]) -> (Tensor[(14, 3), float32], Tensor[(16, 9, 4), float64], Tensor[(182, 1), uint64], Tensor[(11, 8, 15), int8], Tensor[(1320), int8], Tensor[(16, 9, 4), float64]) {
  %350 = cast(%var_2024, dtype="float32") /* ty=Tensor[(14, 3), float32] */;
  %351 = cast(meta[relay.Constant][24] /* ty=Tensor[(182, 1), uint64] */, dtype="uint64") /* ty=Tensor[(182, 1), uint64] */;
  %352 = reshape(%351, newshape=[13, 2, 7]) /* ty=Tensor[(13, 2, 7), uint64] */;
  %353 = @func_983(%352) /* ty=(Tensor[(13, 2, 7), uint64], Tensor[(16, 9, 4), float64], Tensor[(1, 819), float64], Tensor[(576), float64], Tensor[(16, 9, 4), float64], Tensor[(16, 9, 4), float64]) */;
  %354 = cast(%var_2041, dtype="int8") /* ty=Tensor[(1320), int8] */;
  %355 = reshape(%354, newshape=[11, 8, 15]) /* ty=Tensor[(11, 8, 15), int8] */;
  %356 = cast(meta[relay.Constant][24] /* ty=Tensor[(182, 1), uint64] */, dtype="uint64") /* ty=Tensor[(182, 1), uint64] */;
  %357 = reshape(%356, newshape=[13, 2, 7]) /* ty=Tensor[(13, 2, 7), uint64] */;
  %358 = @func_983(%357) /* ty=(Tensor[(13, 2, 7), uint64], Tensor[(16, 9, 4), float64], Tensor[(1, 819), float64], Tensor[(576), float64], Tensor[(16, 9, 4), float64], Tensor[(16, 9, 4), float64]) */;
  %359 = sigmoid(%350) /* ty=Tensor[(14, 3), float32] */;
  %360 = %353.4;
  %361 = @func_1421(%355) /* ty=Tensor[(11, 8, 15), int8] */;
  %362 = %358.1;
  (%359, %360, meta[relay.Constant][24] /* ty=Tensor[(182, 1), uint64] */, %361, %var_2041, %362)
}

def @func_5723(%var_5706: Tensor[(182), uint64], %var_5718: uint8, %var_5719: Tensor[(165), uint8]) -> (Tensor[(1, 9, 16), float64], Tensor[(576), float64], Tensor[(182), uint64], Tensor[(11, 5, 3), uint8], uint8, Tensor[(165), uint8]) {
  %363 = cast(%var_5706, dtype="uint64") /* ty=Tensor[(182), uint64] */;
  %364 = reshape(%363, newshape=[13, 2, 7]) /* ty=Tensor[(13, 2, 7), uint64] */;
  %365 = @func_983(%364) /* ty=(Tensor[(13, 2, 7), uint64], Tensor[(16, 9, 4), float64], Tensor[(1, 819), float64], Tensor[(576), float64], Tensor[(16, 9, 4), float64], Tensor[(16, 9, 4), float64]) */;
  %366 = cast(%var_5718, dtype="uint8") /* ty=uint8 */;
  %367 = cast(%var_5719, dtype="uint8") /* ty=Tensor[(165), uint8] */;
  %368 = reshape(%366, newshape=[]) /* ty=uint8 */;
  %369 = reshape(%367, newshape=[11, 5, 3]) /* ty=Tensor[(11, 5, 3), uint8] */;
  %370 = @func_3470(%368, %369) /* ty=(Tensor[(11, 5, 3), uint8], Tensor[(11, 5, 3), float32]) */;
  %371 = @func_5631() /* ty=Tensor[(1, 9, 16), float64] */;
  %372 = %365.3;
  %373 = %370.0;
  (%371, %372, %var_5706, %373, %var_5718, %var_5719)
}

def @func_7899(%var_7887: Tensor[(576), float64]) -> (Tensor[(1, 9, 16), float64], Tensor[(16, 9, 4), float64], Tensor[(576), float64]) {
  %374 = @func_7602() /* ty=(Tensor[(1, 9, 16), float64],) */;
  %375 = cast(%var_7887, dtype="float64") /* ty=Tensor[(576), float64] */;
  %376 = reshape(%375, newshape=[16, 9, 4]) /* ty=Tensor[(16, 9, 4), float64] */;
  %377 = @func_363(%376) /* ty=(Tensor[(16, 9, 4), float64],) */;
  %378 = %374.0;
  %379 = %377.0;
  (%378, %379, %var_7887)
}

def @func_10181() -> (Tensor[(1, 9, 16), float64], Tensor[(11, 8, 15), int8], Tensor[(1, 9, 16), float64], Tensor[(3, 9, 16), float64]) {
  %380 = @func_8441() /* ty=(Tensor[(1, 9, 16), float32], Tensor[(1, 9, 16), float64]) */;
  %381 = @func_9526() /* ty=(Tensor[(1, 9, 16), float64], Tensor[(165), uint8], Tensor[(300), float32], Tensor[(3, 9, 16), float64], Tensor[(11, 8, 15), int8], Tensor[(1320), int8]) */;
  %382 = @func_9542() /* ty=(Tensor[(1, 9, 16), float64],) */;
  %383 = @func_7722() /* ty=(Tensor[(3, 9, 16), float64],) */;
  %384 = %380.1;
  %385 = %381.4;
  %386 = %382.0;
  %387 = %383.0;
  (%384, %385, %386, %387)
}

def @func_8237(%var_8221: Tensor[(182), uint64], %var_8222: uint8) -> (Tensor[(1, 9, 16), float64], Tensor[(11, 5, 3), uint8], Tensor[(182), uint64], uint8, Tensor[(165), uint8]) {
  %388 = cast(%var_8221, dtype="uint64") /* ty=Tensor[(182), uint64] */;
  %389 = cast(%var_8222, dtype="uint8") /* ty=uint8 */;
  %390 = cast(meta[relay.Constant][25] /* ty=Tensor[(165), uint8] */, dtype="uint8") /* ty=Tensor[(165), uint8] */;
  %391 = reshape(%388, newshape=[182]) /* ty=Tensor[(182), uint64] */;
  %392 = reshape(%389, newshape=[]) /* ty=uint8 */;
  %393 = reshape(%390, newshape=[165]) /* ty=Tensor[(165), uint8] */;
  %394 = @func_5723(%391, %392, %393) /* ty=(Tensor[(1, 9, 16), float64], Tensor[(576), float64], Tensor[(182), uint64], Tensor[(11, 5, 3), uint8], uint8, Tensor[(165), uint8]) */;
  %395 = @func_6203() /* ty=Tensor[(1, 9, 16), float64] */;
  %396 = %394.3;
  (%395, %396, %var_8221, %var_8222, meta[relay.Constant][25] /* ty=Tensor[(165), uint8] */)
}

def @func_8626() -> Tensor[(1, 9, 16), float64] {
  %397 = @func_8251() /* ty=(Tensor[(1, 9, 16), float64],) */;
  %397.0
}

def @func_6055() -> (Tensor[(?, 9, 16), uint32], Tensor[(1, 9, 16), float32]) {
  %398 = @func_5742() /* ty=Tensor[(1, 9, 16), float64] */;
  %399 = cast(%398, dtype="float64") /* ty=Tensor[(1, 9, 16), float64] */;
  %400 = tan(%399) /* ty=Tensor[(1, 9, 16), float64] */;
  %401 = @func_5742() /* ty=Tensor[(1, 9, 16), float64] */;
  %402 = cast(%401, dtype="int64") /* ty=Tensor[(1, 9, 16), int64] */;
  %403 = shape_of(%398, dtype="int32") /* ty=Tensor[(3), int32] */;
  %404 = cast(%398, dtype="int64") /* ty=Tensor[(1, 9, 16), int64] */;
  %405 = dyn.reshape(%402, %403, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %406 = add(%404, %405) /* ty=Tensor[(?, 9, 16), int64] */;
  %407 = cast(%406, dtype="uint32") /* ty=Tensor[(?, 9, 16), uint32] */;
  %408 = shape_of(%400, dtype="int32") /* ty=Tensor[(3), int32] */;
  %409 = cast(%400, dtype="uint32") /* ty=Tensor[(1, 9, 16), uint32] */;
  %410 = dyn.reshape(%407, %408, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %411 = @func_5742() /* ty=Tensor[(1, 9, 16), float64] */;
  %412 = cast(%411, dtype="float32") /* ty=Tensor[(1, 9, 16), float32] */;
  %413 = maximum(%409, %410) /* ty=Tensor[(?, 9, 16), uint32] */;
  %414 = erf(%412) /* ty=Tensor[(1, 9, 16), float32] */;
  (%413, %414)
}

def @func_6257() -> (Tensor[(?, 9, 16), int32], Tensor[(6, 8, 15), float32], Tensor[(720), float32]) {
  %415 = @func_5631() /* ty=Tensor[(1, 9, 16), float64] */;
  %416 = @func_5577() /* ty=(Tensor[(1, 9, 16), float64],) */;
  %417 = %416.0;
  %418 = cast(%417, dtype="int32") /* ty=Tensor[(1, 9, 16), int32] */;
  %419 = shape_of(%415, dtype="int32") /* ty=Tensor[(3), int32] */;
  %420 = cast(%415, dtype="int32") /* ty=Tensor[(1, 9, 16), int32] */;
  %421 = dyn.reshape(%418, %419, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %422 = cast(meta[relay.Constant][26] /* ty=Tensor[(720), float32] */, dtype="float32") /* ty=Tensor[(720), float32] */;
  %423 = reshape(%422, newshape=[6, 8, 15]) /* ty=Tensor[(6, 8, 15), float32] */;
  %424 = subtract(%420, %421) /* ty=Tensor[(?, 9, 16), int32] */;
  %425 = @func_2443(%423) /* ty=Tensor[(6, 8, 15), float32] */;
  (%424, %425, meta[relay.Constant][26] /* ty=Tensor[(720), float32] */)
}

def @func_6847() -> (Tensor[(1, 9, 16), float64], Tensor[(1, 9, 16), float64], Tensor[(1, 9, 16), float64]) {
  %426 = @func_6674() /* ty=(Tensor[(1, 9, 16), float64],) */;
  %427 = @func_5767() /* ty=Tensor[(1, 9, 16), float64] */;
  %428 = @func_6588() /* ty=Tensor[(1, 9, 16), float64] */;
  %429 = %426.0;
  (%427, %428, %429)
}

def @func_7539() -> (Tensor[(1, 9, 16), float64],) {
  %430 = @func_6186() /* ty=Tensor[(1, 9, 16), float64] */;
  (%430,)
}

def @func_3515(%var_3503: Tensor[(14, 3, 4), float32], %var_3512: Tensor[(1320), int8]) -> (Tensor[(14, 3, 4), float32], Tensor[(11, 8, 15), int8], Tensor[(36), float32], Tensor[(1320), int8]) {
  %431 = cast(meta[relay.Constant][27] /* ty=Tensor[(14, 3, 4), float32] */, dtype="float32") /* ty=Tensor[(14, 3, 4), float32] */;
  %432 = shape_of(%var_3503, dtype="int32") /* ty=Tensor[(3), int32] */;
  %433 = cast(%var_3503, dtype="float32") /* ty=Tensor[(14, 3, 4), float32] */;
  %434 = dyn.reshape(%431, %432, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %435 = cast(meta[relay.Constant][28] /* ty=Tensor[(36), float32] */, dtype="float32") /* ty=Tensor[(36), float32] */;
  %436 = cast(%var_3512, dtype="int8") /* ty=Tensor[(1320), int8] */;
  %437 = reshape(%435, newshape=[4, 3, 3]) /* ty=Tensor[(4, 3, 3), float32] */;
  %438 = reshape(%436, newshape=[660, 2]) /* ty=Tensor[(660, 2), int8] */;
  %439 = @func_2260(%437, %438) /* ty=(Tensor[(4, 3, 3), float32], Tensor[(11, 8, 15), int8], Tensor[(660, 2), int8]) */;
  %440 = mod(%433, %434) /* ty=Tensor[(14, 3, 4), float32] */;
  %441 = %439.1;
  (%440, %441, meta[relay.Constant][28] /* ty=Tensor[(36), float32] */, %var_3512)
}

def @func_3035(%var_2989: Tensor[(6, 9, 7), int16], %var_2990: Tensor[(6, 9, 7), int16], %var_3014: Tensor[(48), float64]) -> (Tensor[(6, 9, 7), int16], Tensor[(4, 2, 6), float64], Tensor[(48), float64], Tensor[(6, 8, 15), float32], Tensor[(2, 360), float32], Tensor[(16, 9, 4), float64], Tensor[(576), float64]) {
  %442 = cast(%var_2990, dtype="bool") /* ty=Tensor[(6, 9, 7), bool] */;
  %443 = shape_of(%var_2989, dtype="int32") /* ty=Tensor[(3), int32] */;
  %444 = cast(%var_2989, dtype="bool") /* ty=Tensor[(6, 9, 7), bool] */;
  %445 = dyn.reshape(%442, %443, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %446 = equal(%444, %445) /* ty=Tensor[(6, 9, 7), bool] */;
  %447 = cast(%var_2989, dtype="int16") /* ty=Tensor[(6, 9, 7), int16] */;
  %448 = shape_of(%446, dtype="int32") /* ty=Tensor[(3), int32] */;
  %449 = cast(%446, dtype="int16") /* ty=Tensor[(6, 9, 7), int16] */;
  %450 = dyn.reshape(%447, %448, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %451 = cast(%var_3014, dtype="float64") /* ty=Tensor[(48), float64] */;
  %452 = reshape(%451, newshape=[4, 2, 6]) /* ty=Tensor[(4, 2, 6), float64] */;
  %453 = cast(meta[relay.Constant][29] /* ty=Tensor[(2, 360), float32] */, dtype="float32") /* ty=Tensor[(2, 360), float32] */;
  %454 = reshape(%453, newshape=[6, 8, 15]) /* ty=Tensor[(6, 8, 15), float32] */;
  %455 = cast(meta[relay.Constant][30] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
  %456 = reshape(%455, newshape=[16, 9, 4]) /* ty=Tensor[(16, 9, 4), float64] */;
  %457 = @func_363(%456) /* ty=(Tensor[(16, 9, 4), float64],) */;
  %458 = right_shift(%449, %450) /* ty=Tensor[(6, 9, 7), int16] */;
  %459 = @func_1823(%452) /* ty=Tensor[(4, 2, 6), float64] */;
  %460 = @func_2443(%454) /* ty=Tensor[(6, 8, 15), float32] */;
  %461 = %457.0;
  (%458, %459, %var_3014, %460, meta[relay.Constant][29] /* ty=Tensor[(2, 360), float32] */, %461, meta[relay.Constant][30] /* ty=Tensor[(576), float64] */)
}

def @func_6638(%var_6634: Tensor[(448), int32], %var_6635: Tensor[(819), float64]) -> (Tensor[(1, 9, 16), float64], Tensor[(819), float64], int32, Tensor[(448), int32], Tensor[(819), float64], Tensor[(576), float64]) {
  %462 = cast(-5 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %463 = cast(%var_6634, dtype="int32") /* ty=Tensor[(448), int32] */;
  %464 = cast(%var_6635, dtype="float64") /* ty=Tensor[(819), float64] */;
  %465 = cast(meta[relay.Constant][31] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
  %466 = reshape(%462, newshape=[]) /* ty=int32 */;
  %467 = reshape(%463, newshape=[8, 4, 14]) /* ty=Tensor[(8, 4, 14), int32] */;
  %468 = reshape(%464, newshape=[819]) /* ty=Tensor[(819), float64] */;
  %469 = reshape(%465, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %470 = @func_1162(%466, %467, %468, %469) /* ty=(Tensor[(8, 4, 14), bool], Tensor[(8, 4, 14), float64], Tensor[(819), float64], Tensor[(7, 13, 9), bool], Tensor[(576), uint32], Tensor[(16, 9, 4), float32]) */;
  %471 = @func_6203() /* ty=Tensor[(1, 9, 16), float64] */;
  %472 = %470.2;
  (%471, %472, -5 /* ty=int32 */, %var_6634, %var_6635, meta[relay.Constant][31] /* ty=Tensor[(576), float64] */)
}

def @func_9667() -> (Tensor[(1, 9, 16), float64],) {
  %473 = @func_5555() /* ty=Tensor[(1, 9, 16), float64] */;
  (%473,)
}

def @func_9661() -> (Tensor[(6, 9, 16), uint16], Tensor[(1, 9, 16), float32]) {
  %474 = @func_9199() /* ty=Tensor[(1, 9, 16), float32] */;
  %475 = cast(%474, dtype="uint16") /* ty=Tensor[(1, 9, 16), uint16] */;
  %476 = cast(meta[relay.Constant][32] /* ty=Tensor[(6, 9, 16), float32] */, dtype="uint16") /* ty=Tensor[(6, 9, 16), uint16] */;
  %477 = @func_8589() /* ty=(Tensor[(1, 9, 16), float32],) */;
  %478 = bitwise_xor(%475, %476) /* ty=Tensor[(6, 9, 16), uint16] */;
  %479 = %477.0;
  (%478, %479)
}

def @func_8417(%var_8409: float32, %var_8410: Tensor[(5, 15, 14), float32]) -> (Tensor[(5, 15, 14), float32],) {
  %480 = cast(%var_8409, dtype="float32") /* ty=float32 */;
  %481 = cast(%var_8410, dtype="float32") /* ty=Tensor[(5, 15, 14), float32] */;
  %482 = mod(%480, %481) /* ty=Tensor[(5, 15, 14), float32] */;
  (%482,)
}

def @func_10088() -> (Tensor[(3, 9, 16), float32], Tensor[(210), float32], Tensor[(2304), float64], Tensor[(105, 2), float32], Tensor[(5, 15, 14), float32], float32, Tensor[(1050), float32]) {
  %483 = @func_9526() /* ty=(Tensor[(1, 9, 16), float64], Tensor[(165), uint8], Tensor[(300), float32], Tensor[(3, 9, 16), float64], Tensor[(11, 8, 15), int8], Tensor[(1320), int8]) */;
  %484 = %483.3;
  %485 = cast(%484, dtype="float32") /* ty=Tensor[(3, 9, 16), float32] */;
  %486 = cast(meta[relay.Constant][33] /* ty=Tensor[(2304), float64] */, dtype="float64") /* ty=Tensor[(2304), float64] */;
  %487 = cast(meta[relay.Constant][34] /* ty=Tensor[(105, 2), float32] */, dtype="float32") /* ty=Tensor[(105, 2), float32] */;
  %488 = reshape(%486, newshape=[16, 9, 16]) /* ty=Tensor[(16, 9, 16), float64] */;
  %489 = reshape(%487, newshape=[210]) /* ty=Tensor[(210), float32] */;
  %490 = @func_9052(%488, %489) /* ty=(Tensor[(16, 9, 16), int16], Tensor[(1, 9, 16), float64], Tensor[(210), float32], Tensor[(16, 9, 16), float32]) */;
  %491 = cast(-9.5653f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %492 = cast(meta[relay.Constant][35] /* ty=Tensor[(1050), float32] */, dtype="float32") /* ty=Tensor[(1050), float32] */;
  %493 = reshape(%491, newshape=[]) /* ty=float32 */;
  %494 = reshape(%492, newshape=[5, 15, 14]) /* ty=Tensor[(5, 15, 14), float32] */;
  %495 = @func_8417(%493, %494) /* ty=(Tensor[(5, 15, 14), float32],) */;
  %496 = atan(%485) /* ty=Tensor[(3, 9, 16), float32] */;
  %497 = %490.2;
  %498 = %495.0;
  (%496, %497, meta[relay.Constant][33] /* ty=Tensor[(2304), float64] */, meta[relay.Constant][34] /* ty=Tensor[(105, 2), float32] */, %498, -9.5653f /* ty=float32 */, meta[relay.Constant][35] /* ty=Tensor[(1050), float32] */)
}

def @func_8441() -> (Tensor[(1, 9, 16), float32], Tensor[(1, 9, 16), float64]) {
  %499 = @func_7918() /* ty=Tensor[(1, 9, 16), float32] */;
  %500 = @func_5631() /* ty=Tensor[(1, 9, 16), float64] */;
  (%499, %500)
}

def @func_10295(%var_10288: Tensor[(14, 9, 16), float64]) -> Tensor[(14, 9, 16), float32] {
  %501 = @func_5843() /* ty=Tensor[(1, 9, 16), float64] */;
  %502 = cast(%501, dtype="float32") /* ty=Tensor[(1, 9, 16), float32] */;
  %503 = cast(%var_10288, dtype="float32") /* ty=Tensor[(14, 9, 16), float32] */;
  floor_divide(%502, %503) /* ty=Tensor[(14, 9, 16), float32] */
}

def @func_7770(%var_7762: Tensor[(7, 15, 1), float32]) -> Tensor[(7, 15, 1), float32] {
  %504 = cast(%var_7762, dtype="float32") /* ty=Tensor[(7, 15, 1), float32] */;
  sqrt(%504) /* ty=Tensor[(7, 15, 1), float32] */
}

def @func_3837(%var_3822: Tensor[(4, 4, 4), float32]) -> Tensor[(4, 4, 4), float32] {
  %505 = cast(%var_3822, dtype="float32") /* ty=Tensor[(4, 4, 4), float32] */;
  acosh(%505) /* ty=Tensor[(4, 4, 4), float32] */
}

def @func_11421(%var_11405: Tensor[(9, 5, 8), float64], %var_11406: Tensor[(9, 5, 8), float64]) -> (Tensor[(9, 5, 8), float64], Tensor[(9, 5, 8), float64]) {
  %506 = cast(%var_11406, dtype="float64") /* ty=Tensor[(9, 5, 8), float64] */;
  %507 = shape_of(%var_11405, dtype="int32") /* ty=Tensor[(3), int32] */;
  %508 = cast(%var_11405, dtype="float64") /* ty=Tensor[(9, 5, 8), float64] */;
  %509 = dyn.reshape(%506, %507, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %510 = cast(%var_11405, dtype="float64") /* ty=Tensor[(9, 5, 8), float64] */;
  %511 = power(%508, %509) /* ty=Tensor[(9, 5, 8), float64] */;
  %512 = sin(%510) /* ty=Tensor[(9, 5, 8), float64] */;
  (%511, %512)
}

def @func_8746() -> (Tensor[(10, 9, 16), float32],) {
  %513 = @func_8286() /* ty=(Tensor[(10, 9, 16), float32],) */;
  %514 = %513.0;
  (%514,)
}

def @func_9990() -> (Tensor[(10, 9, 16), float32],) {
  %515 = @func_8300() /* ty=Tensor[(10, 9, 16), float32] */;
  (%515,)
}

def @func_10204(%var_10183: Tensor[(13, 6, 8), uint16], %var_10184: Tensor[(13, 6, 8), uint16], %var_10196: Tensor[(1320), int8]) -> (Tensor[(13, 6, 8), uint16], Tensor[(11, 8, 15), int8], Tensor[(1320), int8]) {
  %516 = cast(%var_10184, dtype="uint16") /* ty=Tensor[(13, 6, 8), uint16] */;
  %517 = shape_of(%var_10183, dtype="int32") /* ty=Tensor[(3), int32] */;
  %518 = cast(%var_10183, dtype="uint16") /* ty=Tensor[(13, 6, 8), uint16] */;
  %519 = dyn.reshape(%516, %517, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %520 = cast(%var_10196, dtype="int8") /* ty=Tensor[(1320), int8] */;
  %521 = reshape(%520, newshape=[11, 8, 15]) /* ty=Tensor[(11, 8, 15), int8] */;
  %522 = bitwise_and(%518, %519) /* ty=Tensor[(13, 6, 8), uint16] */;
  %523 = @func_1421(%521) /* ty=Tensor[(11, 8, 15), int8] */;
  (%522, %523, %var_10196)
}

def @func_11058(%var_10966: Tensor[(15, 1), float64], %var_10967: Tensor[(48), float64]) -> (Tensor[(13, 9, 16), int16], Tensor[(819), float64], Tensor[(72, 8), float64], Tensor[(1, 9, 16), float32], Tensor[(1, 9, 16), float32], Tensor[(?, 9, 16), float32], Tensor[(48), float64], Tensor[(15, 1), float64], Tensor[(48), float64], Tensor[(1, 9, 16), float64], Tensor[(?, 9, 16), float32], Tensor[(1, 9, 16), float64]) {
  %524 = cast(meta[relay.Constant][36] /* ty=Tensor[(72, 8), float64] */, dtype="float64") /* ty=Tensor[(72, 8), float64] */;
  %525 = reshape(%524, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %526 = @func_2463(%525) /* ty=(Tensor[(16, 5), float64], Tensor[(576), float64], Tensor[(819), float64], Tensor[(576), float64]) */;
  %527 = @func_6755() /* ty=(Tensor[(?, 9, 16), float32],) */;
  %528 = cast(%var_10966, dtype="float64") /* ty=Tensor[(15, 1), float64] */;
  %529 = cast(%var_10967, dtype="float64") /* ty=Tensor[(48), float64] */;
  %530 = reshape(%528, newshape=[1, 3, 5]) /* ty=Tensor[(1, 3, 5), float64] */;
  %531 = reshape(%529, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %532 = @func_6313(%530, %531) /* ty=(Tensor[(2, 3, 5), float64], Tensor[(4, 2, 6), float64], Tensor[(48), float64]) */;
  %533 = @func_8787() /* ty=(Tensor[(1, 9, 16), float64], Tensor[(1, 9, 16), float64]) */;
  %534 = @func_9763() /* ty=Tensor[(?, 9, 16), float32] */;
  %535 = cast(%534, dtype="float32") /* ty=Tensor[(?, 9, 16), float32] */;
  %536 = @func_10181() /* ty=(Tensor[(1, 9, 16), float64], Tensor[(11, 8, 15), int8], Tensor[(1, 9, 16), float64], Tensor[(3, 9, 16), float64]) */;
  %537 = @func_8157() /* ty=Tensor[(13, 9, 16), int16] */;
  %538 = %526.2;
  %539 = @func_9199() /* ty=Tensor[(1, 9, 16), float32] */;
  %540 = @func_7918() /* ty=Tensor[(1, 9, 16), float32] */;
  %541 = %527.0;
  %542 = %532.2;
  %543 = %533.0;
  %544 = log2(%535) /* ty=Tensor[(?, 9, 16), float32] */;
  %545 = %536.0;
  (%537, %538, meta[relay.Constant][36] /* ty=Tensor[(72, 8), float64] */, %539, %540, %541, %542, %var_10966, %var_10967, %543, %544, %545)
}

def @func_10312(%var_10300: Tensor[(7, 6, 5), float64]) -> (Tensor[(7, 6, 5), float32],) {
  %546 = cast(%var_10300, dtype="float64") /* ty=Tensor[(7, 6, 5), float64] */;
  %547 = log2(%546) /* ty=Tensor[(7, 6, 5), float64] */;
  %548 = cast(%547, dtype="float32") /* ty=Tensor[(7, 6, 5), float32] */;
  %549 = atanh(%548) /* ty=Tensor[(7, 6, 5), float32] */;
  (%549,)
}

def @func_5577() -> (Tensor[(1, 9, 16), float64],) {
  %550 = @func_5555() /* ty=Tensor[(1, 9, 16), float64] */;
  (%550,)
}

def @func_11306() -> (Tensor[(1, 9, 16), float64],) {
  %551 = @func_10575() /* ty=(Tensor[(1, 9, 16), float64], Tensor[(?, 9, 16), float32]) */;
  %552 = %551.0;
  (%552,)
}

def @func_8875(%var_8854: uint8, %var_8855: Tensor[(165), uint8], %var_8858: Tensor[(36), float32]) -> (Tensor[(1, 9, 16), float64], Tensor[(1, 9, 16), float64], uint8, Tensor[(165), uint8], Tensor[(72), uint32], Tensor[(36, 16), float64], Tensor[(36), float32]) {
  %553 = @func_6674() /* ty=(Tensor[(1, 9, 16), float64],) */;
  %554 = cast(%var_8854, dtype="uint8") /* ty=uint8 */;
  %555 = cast(%var_8855, dtype="uint8") /* ty=Tensor[(165), uint8] */;
  %556 = cast(meta[relay.Constant][37] /* ty=Tensor[(72), uint32] */, dtype="uint32") /* ty=Tensor[(72), uint32] */;
  %557 = cast(meta[relay.Constant][38] /* ty=Tensor[(36, 16), float64] */, dtype="float64") /* ty=Tensor[(36, 16), float64] */;
  %558 = cast(%var_8858, dtype="float32") /* ty=Tensor[(36), float32] */;
  %559 = reshape(%554, newshape=[]) /* ty=uint8 */;
  %560 = reshape(%555, newshape=[165]) /* ty=Tensor[(165), uint8] */;
  %561 = reshape(%556, newshape=[72]) /* ty=Tensor[(72), uint32] */;
  %562 = reshape(%557, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %563 = reshape(%558, newshape=[36]) /* ty=Tensor[(36), float32] */;
  %564 = @func_7271(%559, %560, %561, %562, %563) /* ty=(Tensor[(1, 9, 16), float64], uint8, Tensor[(165), uint8], Tensor[(11, 5, 3), float32], int32, Tensor[(72), uint32], Tensor[(576), float64], Tensor[(36), float32], Tensor[(1320), int8]) */;
  %565 = %553.0;
  %566 = %564.0;
  (%565, %566, %var_8854, %var_8855, meta[relay.Constant][37] /* ty=Tensor[(72), uint32] */, meta[relay.Constant][38] /* ty=Tensor[(36, 16), float64] */, %var_8858)
}

def @func_363(%var_358: Tensor[(16, 9, 4), float64]) -> (Tensor[(16, 9, 4), float64],) {
  %567 = cast(%var_358, dtype="float64") /* ty=Tensor[(16, 9, 4), float64] */;
  %568 = tan(%567) /* ty=Tensor[(16, 9, 4), float64] */;
  (%568,)
}

def @func_8157() -> Tensor[(13, 9, 16), int16] {
  %569 = @func_7539() /* ty=(Tensor[(1, 9, 16), float64],) */;
  %570 = %569.0;
  %571 = cast(%570, dtype="int16") /* ty=Tensor[(1, 9, 16), int16] */;
  %572 = cast(meta[relay.Constant][39] /* ty=Tensor[(13, 9, 16), float64] */, dtype="int16") /* ty=Tensor[(13, 9, 16), int16] */;
  bitwise_and(%571, %572) /* ty=Tensor[(13, 9, 16), int16] */
}

def @func_8092(%var_8041: Tensor[(6, 8, 15), float32]) -> (Tensor[(720), float32], Tensor[(1, 9, 16), float64], Tensor[(1, 9, 16), float64], Tensor[(1, 9, 16), float64], Tensor[(6, 8, 15), bool], Tensor[(1, 9, 16), float64], Tensor[(1, 9, 16), float32], Tensor[(16, 13, 9), uint16]) {
  %573 = @func_7602() /* ty=(Tensor[(1, 9, 16), float64],) */;
  %574 = cast(meta[relay.Constant][40] /* ty=Tensor[(720), float32] */, dtype="float32") /* ty=Tensor[(720), float32] */;
  %575 = reshape(%574, newshape=[6, 8, 15]) /* ty=Tensor[(6, 8, 15), float32] */;
  %576 = @func_2443(%575) /* ty=Tensor[(6, 8, 15), float32] */;
  %577 = cast(%var_8041, dtype="bool") /* ty=Tensor[(6, 8, 15), bool] */;
  %578 = shape_of(%576, dtype="int32") /* ty=Tensor[(3), int32] */;
  %579 = cast(%576, dtype="bool") /* ty=Tensor[(6, 8, 15), bool] */;
  %580 = dyn.reshape(%577, %578, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %581 = @func_7441() /* ty=Tensor[(1, 9, 16), float64] */;
  %582 = cast(%581, dtype="float32") /* ty=Tensor[(1, 9, 16), float32] */;
  %583 = cast(meta[relay.Constant][41] /* ty=Tensor[(1872), uint64] */, dtype="uint64") /* ty=Tensor[(1872), uint64] */;
  %584 = reshape(%583, newshape=[16, 13, 9]) /* ty=Tensor[(16, 13, 9), uint64] */;
  %585 = @func_5344(%584) /* ty=(Tensor[(16, 13, 9), bool], Tensor[(16, 13, 9), float32]) */;
  %586 = %585.0;
  %587 = cast(meta[relay.Constant][41] /* ty=Tensor[(1872), uint64] */, dtype="uint16") /* ty=Tensor[(1872), uint16] */;
  %588 = shape_of(%586, dtype="int32") /* ty=Tensor[(3), int32] */;
  %589 = cast(%586, dtype="uint16") /* ty=Tensor[(16, 13, 9), uint16] */;
  %590 = dyn.reshape(%587, %588, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %591 = %573.0;
  %592 = @func_5767() /* ty=Tensor[(1, 9, 16), float64] */;
  %593 = @func_5631() /* ty=Tensor[(1, 9, 16), float64] */;
  %594 = greater_equal(%579, %580) /* ty=Tensor[(6, 8, 15), bool] */;
  %595 = @func_5555() /* ty=Tensor[(1, 9, 16), float64] */;
  %596 = asin(%582) /* ty=Tensor[(1, 9, 16), float32] */;
  %597 = left_shift(%589, %590) /* ty=Tensor[(16, 13, 9), uint16] */;
  (meta[relay.Constant][40] /* ty=Tensor[(720), float32] */, %591, %592, %593, %594, %595, %596, %597)
}

def @main(%var_11786: Tensor[(1, 2, 9), float64]) -> Tensor[(1, 2, 9), float64] {
  %598 = cast(%var_11786, dtype="float64") /* ty=Tensor[(1, 2, 9), float64] */;
  cosh(%598) /* ty=Tensor[(1, 2, 9), float64] */
}

def @func_11373() -> Tensor[(1, 9, 16), float32] {
  @func_10001() /* ty=Tensor[(1, 9, 16), float32] */
}

def @func_6674() -> (Tensor[(1, 9, 16), float64],) {
  %599 = @func_5843() /* ty=Tensor[(1, 9, 16), float64] */;
  (%599,)
}

def @func_7722() -> (Tensor[(3, 9, 16), float64],) {
  %600 = @func_5555() /* ty=Tensor[(1, 9, 16), float64] */;
  %601 = cast(%600, dtype="float64") /* ty=Tensor[(1, 9, 16), float64] */;
  %602 = cast(meta[relay.Constant][42] /* ty=Tensor[(3, 9, 16), float64] */, dtype="float64") /* ty=Tensor[(3, 9, 16), float64] */;
  %603 = floor_divide(%601, %602) /* ty=Tensor[(3, 9, 16), float64] */;
  %604 = cast(%603, dtype="float64") /* ty=Tensor[(3, 9, 16), float64] */;
  %605 = tan(%604) /* ty=Tensor[(3, 9, 16), float64] */;
  (%605,)
}

def @func_3162(%var_3073: Tensor[(3, 4, 6), uint32], %var_3074: Tensor[(3, 4, 6), uint32], %var_3088: Tensor[(288, 2), float64], %var_3098: int32, %var_3103: Tensor[(9, 4), float32], %var_3104: Tensor[(1320), int8]) -> (Tensor[(3, 4, 6), uint32], Tensor[(7, 13, 9), bool], Tensor[(819), float64], Tensor[(576), float64], Tensor[(8, 4, 14), float64], int32, Tensor[(448), int32], Tensor[(660, 2), int8], Tensor[(9, 4), float32], Tensor[(1320), int8], Tensor[(16, 5), float64], Tensor[(288, 2), float64], Tensor[(16, 5), float64], Tensor[(16, 9, 4), float64]) {
  %606 = cast(%var_3074, dtype="uint32") /* ty=Tensor[(3, 4, 6), uint32] */;
  %607 = shape_of(%var_3073, dtype="int32") /* ty=Tensor[(3), int32] */;
  %608 = cast(%var_3073, dtype="uint32") /* ty=Tensor[(3, 4, 6), uint32] */;
  %609 = dyn.reshape(%606, %607, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %610 = cast(meta[relay.Constant][43] /* ty=Tensor[(819), float64] */, dtype="float64") /* ty=Tensor[(819), float64] */;
  %611 = cast(meta[relay.Constant][43] /* ty=Tensor[(819), float64] */, dtype="float64") /* ty=Tensor[(819), float64] */;
  %612 = cast(%var_3088, dtype="float64") /* ty=Tensor[(288, 2), float64] */;
  %613 = reshape(%610, newshape=[7, 13, 9]) /* ty=Tensor[(7, 13, 9), float64] */;
  %614 = reshape(%611, newshape=[7, 13, 9]) /* ty=Tensor[(7, 13, 9), float64] */;
  %615 = reshape(%612, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %616 = @func_578(%613, %614, %615) /* ty=(Tensor[(16, 9, 4), float64], Tensor[(576), float64], Tensor[(16, 9, 4), float64], Tensor[(7, 13, 9), bool], Tensor[(16, 9, 4), float64], Tensor[(7, 13, 9), float32], Tensor[(16, 9, 4), float64]) */;
  %617 = cast(%var_3088, dtype="float64") /* ty=Tensor[(288, 2), float64] */;
  %618 = reshape(%617, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %619 = @func_2463(%618) /* ty=(Tensor[(16, 5), float64], Tensor[(576), float64], Tensor[(819), float64], Tensor[(576), float64]) */;
  %620 = cast(%var_3098, dtype="int32") /* ty=int32 */;
  %621 = cast(meta[relay.Constant][44] /* ty=Tensor[(448), int32] */, dtype="int32") /* ty=Tensor[(448), int32] */;
  %622 = cast(meta[relay.Constant][43] /* ty=Tensor[(819), float64] */, dtype="float64") /* ty=Tensor[(819), float64] */;
  %623 = cast(%var_3088, dtype="float64") /* ty=Tensor[(288, 2), float64] */;
  %624 = reshape(%620, newshape=[]) /* ty=int32 */;
  %625 = reshape(%621, newshape=[8, 4, 14]) /* ty=Tensor[(8, 4, 14), int32] */;
  %626 = reshape(%622, newshape=[819]) /* ty=Tensor[(819), float64] */;
  %627 = reshape(%623, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %628 = @func_1162(%624, %625, %626, %627) /* ty=(Tensor[(8, 4, 14), bool], Tensor[(8, 4, 14), float64], Tensor[(819), float64], Tensor[(7, 13, 9), bool], Tensor[(576), uint32], Tensor[(16, 9, 4), float32]) */;
  %629 = cast(%var_3103, dtype="float32") /* ty=Tensor[(9, 4), float32] */;
  %630 = cast(%var_3104, dtype="int8") /* ty=Tensor[(1320), int8] */;
  %631 = reshape(%629, newshape=[4, 3, 3]) /* ty=Tensor[(4, 3, 3), float32] */;
  %632 = reshape(%630, newshape=[660, 2]) /* ty=Tensor[(660, 2), int8] */;
  %633 = @func_2260(%631, %632) /* ty=(Tensor[(4, 3, 3), float32], Tensor[(11, 8, 15), int8], Tensor[(660, 2), int8]) */;
  %634 = cast(%var_3088, dtype="float64") /* ty=Tensor[(288, 2), float64] */;
  %635 = reshape(%634, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %636 = @func_2463(%635) /* ty=(Tensor[(16, 5), float64], Tensor[(576), float64], Tensor[(819), float64], Tensor[(576), float64]) */;
  %637 = cast(%var_3088, dtype="float64") /* ty=Tensor[(288, 2), float64] */;
  %638 = sin(%637) /* ty=Tensor[(288, 2), float64] */;
  %639 = cast(%638, dtype="float64") /* ty=Tensor[(288, 2), float64] */;
  %640 = cast(%638, dtype="float64") /* ty=Tensor[(288, 2), float64] */;
  %641 = reshape(%640, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %642 = @func_2463(%641) /* ty=(Tensor[(16, 5), float64], Tensor[(576), float64], Tensor[(819), float64], Tensor[(576), float64]) */;
  %643 = cast(meta[relay.Constant][43] /* ty=Tensor[(819), float64] */, dtype="float64") /* ty=Tensor[(819), float64] */;
  %644 = cast(meta[relay.Constant][43] /* ty=Tensor[(819), float64] */, dtype="float64") /* ty=Tensor[(819), float64] */;
  %645 = %619.3;
  %646 = cast(%645, dtype="float64") /* ty=Tensor[(576), float64] */;
  %647 = reshape(%643, newshape=[7, 13, 9]) /* ty=Tensor[(7, 13, 9), float64] */;
  %648 = reshape(%644, newshape=[7, 13, 9]) /* ty=Tensor[(7, 13, 9), float64] */;
  %649 = reshape(%646, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %650 = @func_578(%647, %648, %649) /* ty=(Tensor[(16, 9, 4), float64], Tensor[(576), float64], Tensor[(16, 9, 4), float64], Tensor[(7, 13, 9), bool], Tensor[(16, 9, 4), float64], Tensor[(7, 13, 9), float32], Tensor[(16, 9, 4), float64]) */;
  %651 = logical_xor(%608, %609) /* ty=Tensor[(3, 4, 6), uint32] */;
  %652 = %616.3;
  %653 = %628.1;
  %654 = %633.2;
  %655 = %636.0;
  %656 = log10(%639) /* ty=Tensor[(288, 2), float64] */;
  %657 = %642.0;
  %658 = %650.4;
  (%651, %652, meta[relay.Constant][43] /* ty=Tensor[(819), float64] */, %645, %653, %var_3098, meta[relay.Constant][44] /* ty=Tensor[(448), int32] */, %654, %var_3103, %var_3104, %655, %656, %657, %658)
}

def @func_8251() -> (Tensor[(1, 9, 16), float64],) {
  %659 = @func_7539() /* ty=(Tensor[(1, 9, 16), float64],) */;
  %660 = %659.0;
  (%660,)
}

def @func_9830(%var_9797: Tensor[(9, 15, 1), float64], %var_9813: Tensor[(6, 100), float32]) -> (Tensor[(9, 15, 1), float64], Tensor[(1, 9, 16), float64], Tensor[(36), float32], Tensor[(6, 100), float32], Tensor[(36), float32], Tensor[(1, 9, 16), float64], Tensor[(9, 15, 1), float64]) {
  %661 = cast(8.3619f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %662 = cast(%var_9797, dtype="float64") /* ty=Tensor[(9, 15, 1), float64] */;
  %663 = @func_6847() /* ty=(Tensor[(1, 9, 16), float64], Tensor[(1, 9, 16), float64], Tensor[(1, 9, 16), float64]) */;
  %664 = cast(%var_9813, dtype="float32") /* ty=Tensor[(6, 100), float32] */;
  %665 = cast(8.3619f64 /* ty=float64 */, dtype="uint8") /* ty=uint8 */;
  %666 = cast(meta[relay.Constant][45] /* ty=Tensor[(36), float32] */, dtype="float32") /* ty=Tensor[(36), float32] */;
  %667 = reshape(%664, newshape=[10, 5, 12]) /* ty=Tensor[(10, 5, 12), float32] */;
  %668 = reshape(%665, newshape=[]) /* ty=uint8 */;
  %669 = reshape(%666, newshape=[36]) /* ty=Tensor[(36), float32] */;
  %670 = @func_9242(%667, %668, %669) /* ty=(Tensor[(165), uint8], Tensor[(36), float32], Tensor[(10, 5, 12), bool], Tensor[(1, 9, 16), float64]) */;
  %671 = cast(%var_9797, dtype="float64") /* ty=Tensor[(9, 15, 1), float64] */;
  %672 = floor_mod(%661, %662) /* ty=Tensor[(9, 15, 1), float64] */;
  %673 = %663.0;
  %674 = %670.1;
  %675 = @func_7787() /* ty=Tensor[(1, 9, 16), float64] */;
  %676 = sqrt(%671) /* ty=Tensor[(9, 15, 1), float64] */;
  (%672, %673, %674, %var_9813, meta[relay.Constant][45] /* ty=Tensor[(36), float32] */, %675, %676)
}

def @func_11477(%var_11433: uint32, %var_11434: Tensor[(5, 1, 16), uint32]) -> (Tensor[(5, 1, 16), uint16], Tensor[(5, 1, 16), int64], Tensor[(1, 9, 16), float64]) {
  %677 = cast(%var_11433, dtype="uint16") /* ty=uint16 */;
  %678 = cast(%var_11434, dtype="uint16") /* ty=Tensor[(5, 1, 16), uint16] */;
  %679 = cast(%var_11433, dtype="uint32") /* ty=uint32 */;
  %680 = cast(%var_11434, dtype="uint32") /* ty=Tensor[(5, 1, 16), uint32] */;
  %681 = add(%679, %680) /* ty=Tensor[(5, 1, 16), uint32] */;
  %682 = cast(%681, dtype="int64") /* ty=Tensor[(5, 1, 16), int64] */;
  %683 = cast(%var_11433, dtype="int64") /* ty=int64 */;
  %684 = maximum(%677, %678) /* ty=Tensor[(5, 1, 16), uint16] */;
  %685 = subtract(%682, %683) /* ty=Tensor[(5, 1, 16), int64] */;
  %686 = @func_8626() /* ty=Tensor[(1, 9, 16), float64] */;
  (%684, %685, %686)
}

def @func_9199() -> Tensor[(1, 9, 16), float32] {
  %687 = @func_7602() /* ty=(Tensor[(1, 9, 16), float64],) */;
  %688 = %687.0;
  %689 = cast(%688, dtype="float32") /* ty=Tensor[(1, 9, 16), float32] */;
  asinh(%689) /* ty=Tensor[(1, 9, 16), float32] */
}

def @func_10717() -> (Tensor[(1, 9, 16), float64], Tensor[(1, 9, 16), float64], Tensor[(16, 13, 9), float32], Tensor[(1872), uint64]) {
  %690 = @func_9307() /* ty=(Tensor[(1, 9, 16), float64],) */;
  %691 = @func_9915() /* ty=(Tensor[(1, 9, 16), float64],) */;
  %692 = cast(meta[relay.Constant][46] /* ty=Tensor[(1872), uint64] */, dtype="uint64") /* ty=Tensor[(1872), uint64] */;
  %693 = reshape(%692, newshape=[16, 13, 9]) /* ty=Tensor[(16, 13, 9), uint64] */;
  %694 = @func_5344(%693) /* ty=(Tensor[(16, 13, 9), bool], Tensor[(16, 13, 9), float32]) */;
  %695 = %690.0;
  %696 = %691.0;
  %697 = %694.1;
  (%695, %696, %697, meta[relay.Constant][46] /* ty=Tensor[(1872), uint64] */)
}

def @func_7471() -> (Tensor[(1, 9, 16), float64],) {
  %698 = @func_5631() /* ty=Tensor[(1, 9, 16), float64] */;
  (%698,)
}

def @func_7271(%var_7201: uint8, %var_7220: Tensor[(165), uint8], %var_7261: Tensor[(72), uint32], %var_7262: Tensor[(576), float64], %var_7263: Tensor[(36), float32]) -> (Tensor[(1, 9, 16), float64], uint8, Tensor[(165), uint8], Tensor[(11, 5, 3), float32], int32, Tensor[(72), uint32], Tensor[(576), float64], Tensor[(36), float32], Tensor[(1320), int8]) {
  %699 = cast(%var_7201, dtype="uint8") /* ty=uint8 */;
  %700 = reshape(%699, newshape=[]) /* ty=uint8 */;
  %701 = @func_5680(%700) /* ty=(Tensor[(1, 9, 16), float64], Tensor[(11, 5, 3), float32], uint8, Tensor[(165), uint8], Tensor[(1, 9, 16), float64]) */;
  %702 = %701.2;
  %703 = cast(%var_7201, dtype="uint8") /* ty=uint8 */;
  %704 = cast(%var_7220, dtype="uint8") /* ty=Tensor[(165), uint8] */;
  %705 = reshape(%703, newshape=[]) /* ty=uint8 */;
  %706 = reshape(%704, newshape=[11, 5, 3]) /* ty=Tensor[(11, 5, 3), uint8] */;
  %707 = @func_3470(%705, %706) /* ty=(Tensor[(11, 5, 3), uint8], Tensor[(11, 5, 3), float32]) */;
  %708 = %707.1;
  %709 = cast(%702, dtype="uint8") /* ty=uint8 */;
  %710 = cast(%708, dtype="uint8") /* ty=Tensor[(11, 5, 3), uint8] */;
  %711 = bitwise_xor(%709, %710) /* ty=Tensor[(11, 5, 3), uint8] */;
  %712 = cast(%711, dtype="float32") /* ty=Tensor[(11, 5, 3), float32] */;
  %713 = cast(%var_7261, dtype="uint32") /* ty=Tensor[(72), uint32] */;
  %714 = cast(%var_7261, dtype="uint32") /* ty=Tensor[(72), uint32] */;
  %715 = cast(%var_7262, dtype="float64") /* ty=Tensor[(576), float64] */;
  %716 = cast(%var_7201, dtype="int32") /* ty=int32 */;
  %717 = cast(%var_7263, dtype="float32") /* ty=Tensor[(36), float32] */;
  %718 = cast(meta[relay.Constant][47] /* ty=Tensor[(1320), int8] */, dtype="int8") /* ty=Tensor[(1320), int8] */;
  %719 = reshape(%713, newshape=[3, 4, 6]) /* ty=Tensor[(3, 4, 6), uint32] */;
  %720 = reshape(%714, newshape=[3, 4, 6]) /* ty=Tensor[(3, 4, 6), uint32] */;
  %721 = reshape(%715, newshape=[288, 2]) /* ty=Tensor[(288, 2), float64] */;
  %722 = reshape(%716, newshape=[]) /* ty=int32 */;
  %723 = reshape(%717, newshape=[9, 4]) /* ty=Tensor[(9, 4), float32] */;
  %724 = reshape(%718, newshape=[1320]) /* ty=Tensor[(1320), int8] */;
  %725 = @func_3162(%719, %720, %721, %722, %723, %724) /* ty=(Tensor[(3, 4, 6), uint32], Tensor[(7, 13, 9), bool], Tensor[(819), float64], Tensor[(576), float64], Tensor[(8, 4, 14), float64], int32, Tensor[(448), int32], Tensor[(660, 2), int8], Tensor[(9, 4), float32], Tensor[(1320), int8], Tensor[(16, 5), float64], Tensor[(288, 2), float64], Tensor[(16, 5), float64], Tensor[(16, 9, 4), float64]) */;
  %726 = @func_5631() /* ty=Tensor[(1, 9, 16), float64] */;
  %727 = log10(%712) /* ty=Tensor[(11, 5, 3), float32] */;
  %728 = %725.5;
  (%726, %var_7201, %var_7220, %727, %728, %var_7261, %var_7262, %var_7263, meta[relay.Constant][47] /* ty=Tensor[(1320), int8] */)
}

def @func_11137() -> Tensor[(1, 9, 16), float64] {
  %729 = @func_8787() /* ty=(Tensor[(1, 9, 16), float64], Tensor[(1, 9, 16), float64]) */;
  %729.0
}

def @func_6364(%var_6347: Tensor[(6, 16, 15), float32], %var_6360: Tensor[(2, 660), int8]) -> (Tensor[(6, 16, 15), float32], Tensor[(11, 8, 15), int8], Tensor[(2, 660), int8]) {
  %730 = cast(%var_6347, dtype="float32") /* ty=Tensor[(6, 16, 15), float32] */;
  %731 = cast(%var_6360, dtype="int8") /* ty=Tensor[(2, 660), int8] */;
  %732 = reshape(%731, newshape=[11, 8, 15]) /* ty=Tensor[(11, 8, 15), int8] */;
  %733 = tan(%730) /* ty=Tensor[(6, 16, 15), float32] */;
  %734 = @func_1421(%732) /* ty=Tensor[(11, 8, 15), int8] */;
  (%733, %734, %var_6360)
}

def @func_11361(%var_11342: Tensor[(36), float32]) -> (Tensor[(1, 9, 16), float64], Tensor[(4, 3, 3), float32], Tensor[(36), float32], Tensor[(1320), int8], Tensor[(1, 9, 16), float64]) {
  %735 = cast(%var_11342, dtype="float32") /* ty=Tensor[(36), float32] */;
  %736 = cast(meta[relay.Constant][48] /* ty=Tensor[(1320), int8] */, dtype="int8") /* ty=Tensor[(1320), int8] */;
  %737 = reshape(%735, newshape=[4, 3, 3]) /* ty=Tensor[(4, 3, 3), float32] */;
  %738 = reshape(%736, newshape=[660, 2]) /* ty=Tensor[(660, 2), int8] */;
  %739 = @func_2260(%737, %738) /* ty=(Tensor[(4, 3, 3), float32], Tensor[(11, 8, 15), int8], Tensor[(660, 2), int8]) */;
  %740 = @func_8251() /* ty=(Tensor[(1, 9, 16), float64],) */;
  %741 = @func_5631() /* ty=Tensor[(1, 9, 16), float64] */;
  %742 = %739.0;
  %743 = %740.0;
  (%741, %742, %var_11342, meta[relay.Constant][48] /* ty=Tensor[(1320), int8] */, %743)
}

def @func_7918() -> Tensor[(1, 9, 16), float32] {
  %744 = @func_5843() /* ty=Tensor[(1, 9, 16), float64] */;
  %745 = cast(%744, dtype="float32") /* ty=Tensor[(1, 9, 16), float32] */;
  sin(%745) /* ty=Tensor[(1, 9, 16), float32] */
}

def @func_10476() -> (Tensor[(1, 9, 16), float64],) {
  %746 = @func_9667() /* ty=(Tensor[(1, 9, 16), float64],) */;
  %747 = %746.0;
  (%747,)
}

def @func_2118(%var_2096: Tensor[(8, 11, 12), uint16], %var_2097: Tensor[(8, 11, 12), uint16]) -> (Tensor[(8, 11, 12), uint16], Tensor[(8, 11, 12), float32]) {
  %748 = cast(%var_2097, dtype="uint16") /* ty=Tensor[(8, 11, 12), uint16] */;
  %749 = shape_of(%var_2096, dtype="int32") /* ty=Tensor[(3), int32] */;
  %750 = cast(%var_2096, dtype="uint16") /* ty=Tensor[(8, 11, 12), uint16] */;
  %751 = dyn.reshape(%748, %749, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %752 = cast(%var_2097, dtype="float32") /* ty=Tensor[(8, 11, 12), float32] */;
  %753 = left_shift(%750, %751) /* ty=Tensor[(8, 11, 12), uint16] */;
  %754 = erf(%752) /* ty=Tensor[(8, 11, 12), float32] */;
  (%753, %754)
}

def @func_6203() -> Tensor[(1, 9, 16), float64] {
  @func_5742() /* ty=Tensor[(1, 9, 16), float64] */
}

def @func_8578(%var_8536: Tensor[(11, 9, 16), float64]) -> (Tensor[(?, 9, 16), uint64], Tensor[(11, 9, 16), int16], Tensor[(1, 9, 16), float64], Tensor[(11, 8, 15), int8], Tensor[(1320), int8]) {
  %755 = @func_8251() /* ty=(Tensor[(1, 9, 16), float64],) */;
  %756 = %755.0;
  %757 = @func_7471() /* ty=(Tensor[(1, 9, 16), float64],) */;
  %758 = %757.0;
  %759 = cast(%758, dtype="uint64") /* ty=Tensor[(1, 9, 16), uint64] */;
  %760 = shape_of(%756, dtype="int32") /* ty=Tensor[(3), int32] */;
  %761 = cast(%756, dtype="uint64") /* ty=Tensor[(1, 9, 16), uint64] */;
  %762 = dyn.reshape(%759, %760, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %763 = cast(%756, dtype="int16") /* ty=Tensor[(1, 9, 16), int16] */;
  %764 = cast(%var_8536, dtype="int16") /* ty=Tensor[(11, 9, 16), int16] */;
  %765 = @func_7364() /* ty=(Tensor[(10, 9, 16), float32], Tensor[(1, 9, 16), float64]) */;
  %766 = cast(meta[relay.Constant][49] /* ty=Tensor[(1320), int8] */, dtype="int8") /* ty=Tensor[(1320), int8] */;
  %767 = reshape(%766, newshape=[11, 8, 15]) /* ty=Tensor[(11, 8, 15), int8] */;
  %768 = bitwise_and(%761, %762) /* ty=Tensor[(?, 9, 16), uint64] */;
  %769 = minimum(%763, %764) /* ty=Tensor[(11, 9, 16), int16] */;
  %770 = %765.1;
  %771 = @func_1421(%767) /* ty=Tensor[(11, 8, 15), int8] */;
  (%768, %769, %770, %771, meta[relay.Constant][49] /* ty=Tensor[(1320), int8] */)
}

def @func_10434() -> Tensor[(1, 9, 16), float64] {
  %772 = @func_6847() /* ty=(Tensor[(1, 9, 16), float64], Tensor[(1, 9, 16), float64], Tensor[(1, 9, 16), float64]) */;
  %772.1
}

def @func_5954(%var_5938: int32, %var_5940: Tensor[(819), float64]) -> (Tensor[(1, 9, 16), float64], Tensor[(819), float64], int32, Tensor[(448), int32], Tensor[(819), float64], Tensor[(12, 48), float64]) {
  %773 = cast(%var_5938, dtype="int32") /* ty=int32 */;
  %774 = cast(meta[relay.Constant][50] /* ty=Tensor[(448), int32] */, dtype="int32") /* ty=Tensor[(448), int32] */;
  %775 = cast(%var_5940, dtype="float64") /* ty=Tensor[(819), float64] */;
  %776 = cast(meta[relay.Constant][51] /* ty=Tensor[(12, 48), float64] */, dtype="float64") /* ty=Tensor[(12, 48), float64] */;
  %777 = reshape(%773, newshape=[]) /* ty=int32 */;
  %778 = reshape(%774, newshape=[8, 4, 14]) /* ty=Tensor[(8, 4, 14), int32] */;
  %779 = reshape(%775, newshape=[819]) /* ty=Tensor[(819), float64] */;
  %780 = reshape(%776, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %781 = @func_1162(%777, %778, %779, %780) /* ty=(Tensor[(8, 4, 14), bool], Tensor[(8, 4, 14), float64], Tensor[(819), float64], Tensor[(7, 13, 9), bool], Tensor[(576), uint32], Tensor[(16, 9, 4), float32]) */;
  %782 = @func_5843() /* ty=Tensor[(1, 9, 16), float64] */;
  %783 = %781.2;
  (%782, %783, %var_5938, meta[relay.Constant][50] /* ty=Tensor[(448), int32] */, %var_5940, meta[relay.Constant][51] /* ty=Tensor[(12, 48), float64] */)
}

def @func_6529(%var_6472: Tensor[(64), float32], %var_6504: Tensor[(8, 9, 16), int32]) -> (Tensor[(4, 4, 4), float32], Tensor[(64), float32], Tensor[(182), uint64], Tensor[(210), float32], Tensor[(8, 9, 16), bool]) {
  %784 = cast(%var_6472, dtype="float32") /* ty=Tensor[(64), float32] */;
  %785 = reshape(%784, newshape=[4, 4, 4]) /* ty=Tensor[(4, 4, 4), float32] */;
  %786 = cast(meta[relay.Constant][52] /* ty=Tensor[(210), float32] */, dtype="float32") /* ty=Tensor[(210), float32] */;
  %787 = reshape(%786, newshape=[210]) /* ty=Tensor[(210), float32] */;
  %788 = @func_5911(%787) /* ty=(Tensor[(1, 9, 16), float64], Tensor[(1, 9, 16), float64], Tensor[(3, 15, 13), bool], Tensor[(585), float32], Tensor[(1, 9, 16), float64], Tensor[(182), uint64], Tensor[(210), float32]) */;
  %789 = @func_6257() /* ty=(Tensor[(?, 9, 16), int32], Tensor[(6, 8, 15), float32], Tensor[(720), float32]) */;
  %790 = %789.0;
  %791 = cast(%790, dtype="bool") /* ty=Tensor[(?, 9, 16), bool] */;
  %792 = cast(%var_6504, dtype="bool") /* ty=Tensor[(8, 9, 16), bool] */;
  %793 = @func_3837(%785) /* ty=Tensor[(4, 4, 4), float32] */;
  %794 = %788.5;
  %795 = less_equal(%791, %792) /* ty=Tensor[(8, 9, 16), bool] */;
  (%793, %var_6472, %794, meta[relay.Constant][52] /* ty=Tensor[(210), float32] */, %795)
}

def @func_2443(%var_2438: Tensor[(6, 8, 15), float32]) -> Tensor[(6, 8, 15), float32] {
  %796 = cast(%var_2438, dtype="float32") /* ty=Tensor[(6, 8, 15), float32] */;
  erf(%796) /* ty=Tensor[(6, 8, 15), float32] */
}

def @func_5680(%var_5664: uint8) -> (Tensor[(1, 9, 16), float64], Tensor[(11, 5, 3), float32], uint8, Tensor[(165), uint8], Tensor[(1, 9, 16), float64]) {
  %797 = cast(%var_5664, dtype="uint8") /* ty=uint8 */;
  %798 = cast(meta[relay.Constant][53] /* ty=Tensor[(165), uint8] */, dtype="uint8") /* ty=Tensor[(165), uint8] */;
  %799 = reshape(%797, newshape=[]) /* ty=uint8 */;
  %800 = reshape(%798, newshape=[11, 5, 3]) /* ty=Tensor[(11, 5, 3), uint8] */;
  %801 = @func_3470(%799, %800) /* ty=(Tensor[(11, 5, 3), uint8], Tensor[(11, 5, 3), float32]) */;
  %802 = @func_5555() /* ty=Tensor[(1, 9, 16), float64] */;
  %803 = %801.1;
  %804 = @func_5555() /* ty=Tensor[(1, 9, 16), float64] */;
  (%802, %803, %var_5664, meta[relay.Constant][53] /* ty=Tensor[(165), uint8] */, %804)
}

def @func_9263(%var_9255: Tensor[(11, 8, 6), float32]) -> (Tensor[(11, 8, 6), float32], Tensor[(1, 9, 16), float64]) {
  %805 = cast(%var_9255, dtype="float32") /* ty=Tensor[(11, 8, 6), float32] */;
  %806 = @func_6674() /* ty=(Tensor[(1, 9, 16), float64],) */;
  %807 = log2(%805) /* ty=Tensor[(11, 8, 6), float32] */;
  %808 = %806.0;
  (%807, %808)
}

def @func_11121(%var_11114: Tensor[(6, 9, 16), float32]) -> Tensor[(6, 9, 16), float64] {
  %809 = @func_6755() /* ty=(Tensor[(?, 9, 16), float32],) */;
  %810 = %809.0;
  %811 = cast(%810, dtype="float64") /* ty=Tensor[(?, 9, 16), float64] */;
  %812 = cast(%var_11114, dtype="float64") /* ty=Tensor[(6, 9, 16), float64] */;
  divide(%811, %812) /* ty=Tensor[(6, 9, 16), float64] */
}

def @func_7177() -> Tensor[(720), float32] {
  %813 = @func_6257() /* ty=(Tensor[(?, 9, 16), int32], Tensor[(6, 8, 15), float32], Tensor[(720), float32]) */;
  %813.2
}

def @func_5767() -> Tensor[(1, 9, 16), float64] {
  @func_5742() /* ty=Tensor[(1, 9, 16), float64] */
}

def @func_11611(%var_11590: Tensor[(16, 9, 16), float64], %var_11603: Tensor[(36), float32], %var_11608: Tensor[(576), float64]) -> (Tensor[(16, 9, 16), float32], Tensor[(4, 3, 3), float32], Tensor[(36), float32], Tensor[(7, 13, 9), float32], Tensor[(1, 819), float64], Tensor[(576), float64]) {
  %814 = @func_9667() /* ty=(Tensor[(1, 9, 16), float64],) */;
  %815 = %814.0;
  %816 = cast(%815, dtype="float64") /* ty=Tensor[(1, 9, 16), float64] */;
  %817 = cast(%var_11590, dtype="float64") /* ty=Tensor[(16, 9, 16), float64] */;
  %818 = floor_mod(%816, %817) /* ty=Tensor[(16, 9, 16), float64] */;
  %819 = cast(%818, dtype="float32") /* ty=Tensor[(16, 9, 16), float32] */;
  %820 = cast(%var_11603, dtype="float32") /* ty=Tensor[(36), float32] */;
  %821 = reshape(%820, newshape=[36]) /* ty=Tensor[(36), float32] */;
  %822 = @func_11361(%821) /* ty=(Tensor[(1, 9, 16), float64], Tensor[(4, 3, 3), float32], Tensor[(36), float32], Tensor[(1320), int8], Tensor[(1, 9, 16), float64]) */;
  %823 = cast(meta[relay.Constant][54] /* ty=Tensor[(1, 819), float64] */, dtype="float64") /* ty=Tensor[(1, 819), float64] */;
  %824 = cast(meta[relay.Constant][54] /* ty=Tensor[(1, 819), float64] */, dtype="float64") /* ty=Tensor[(1, 819), float64] */;
  %825 = cast(%var_11608, dtype="float64") /* ty=Tensor[(576), float64] */;
  %826 = reshape(%823, newshape=[7, 13, 9]) /* ty=Tensor[(7, 13, 9), float64] */;
  %827 = reshape(%824, newshape=[7, 13, 9]) /* ty=Tensor[(7, 13, 9), float64] */;
  %828 = reshape(%825, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %829 = @func_578(%826, %827, %828) /* ty=(Tensor[(16, 9, 4), float64], Tensor[(576), float64], Tensor[(16, 9, 4), float64], Tensor[(7, 13, 9), bool], Tensor[(16, 9, 4), float64], Tensor[(7, 13, 9), float32], Tensor[(16, 9, 4), float64]) */;
  %830 = rsqrt(%819) /* ty=Tensor[(16, 9, 16), float32] */;
  %831 = %822.1;
  %832 = %829.5;
  (%830, %831, %var_11603, %832, meta[relay.Constant][54] /* ty=Tensor[(1, 819), float64] */, %var_11608)
}

def @func_9307() -> (Tensor[(1, 9, 16), float64],) {
  %833 = @func_7602() /* ty=(Tensor[(1, 9, 16), float64],) */;
  %834 = %833.0;
  (%834,)
}

def @func_9384(%var_9373: Tensor[(5, 12, 5), float32]) -> (Tensor[(5, 12, 5), float32], Tensor[(11, 5, 3), uint8], uint8, Tensor[(165), uint8]) {
  %835 = cast(%var_9373, dtype="float32") /* ty=Tensor[(5, 12, 5), float32] */;
  %836 = cast(meta[relay.Constant][55] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %837 = cast(meta[relay.Constant][56] /* ty=Tensor[(165), uint8] */, dtype="uint8") /* ty=Tensor[(165), uint8] */;
  %838 = reshape(%836, newshape=[]) /* ty=uint8 */;
  %839 = reshape(%837, newshape=[11, 5, 3]) /* ty=Tensor[(11, 5, 3), uint8] */;
  %840 = @func_3470(%838, %839) /* ty=(Tensor[(11, 5, 3), uint8], Tensor[(11, 5, 3), float32]) */;
  %841 = acos(%835) /* ty=Tensor[(5, 12, 5), float32] */;
  %842 = %840.0;
  (%841, %842, meta[relay.Constant][55] /* ty=uint8 */, meta[relay.Constant][56] /* ty=Tensor[(165), uint8] */)
}

def @func_10347() -> (Tensor[(720), float32], Tensor[(1, 9, 16), float64]) {
  %843 = @func_5577() /* ty=(Tensor[(1, 9, 16), float64],) */;
  %844 = @func_7177() /* ty=Tensor[(720), float32] */;
  %845 = %843.0;
  (%844, %845)
}

def @func_8300() -> Tensor[(10, 9, 16), float32] {
  %846 = @func_8286() /* ty=(Tensor[(10, 9, 16), float32],) */;
  %846.0
}

def @func_8787() -> (Tensor[(1, 9, 16), float64], Tensor[(1, 9, 16), float64]) {
  %847 = @func_7787() /* ty=Tensor[(1, 9, 16), float64] */;
  %848 = @func_5742() /* ty=Tensor[(1, 9, 16), float64] */;
  (%847, %848)
}

def @func_11755(%var_11708: Tensor[(660), bool], %var_11709: Tensor[(378), int16], %var_11749: Tensor[(576), float64], %var_11750: int32, %var_11751: Tensor[(36), float32], %var_11752: Tensor[(660, 2), int8]) -> (Tensor[(1, 9, 16), float64], Tensor[(?, 9, 16), float32], Tensor[(660), bool], Tensor[(378), int16], Tensor[(16, 5), float64], Tensor[(1, 72), uint32], Tensor[(576), float64], int32, Tensor[(36), float32], Tensor[(660, 2), int8]) {
  %849 = @func_8251() /* ty=(Tensor[(1, 9, 16), float64],) */;
  %850 = cast(%var_11708, dtype="bool") /* ty=Tensor[(660), bool] */;
  %851 = cast(%var_11708, dtype="bool") /* ty=Tensor[(660), bool] */;
  %852 = cast(%var_11709, dtype="int16") /* ty=Tensor[(378), int16] */;
  %853 = reshape(%850, newshape=[15, 4, 11]) /* ty=Tensor[(15, 4, 11), bool] */;
  %854 = reshape(%851, newshape=[15, 4, 11]) /* ty=Tensor[(15, 4, 11), bool] */;
  %855 = reshape(%852, newshape=[126, 3]) /* ty=Tensor[(126, 3), int16] */;
  %856 = @func_7115(%853, %854, %855) /* ty=(Tensor[(15, 4, 11), bool], Tensor[(48), float64], Tensor[(126, 3), int16], Tensor[(24, 2), float64], Tensor[(?, 9, 16), float32]) */;
  %857 = cast(meta[relay.Constant][57] /* ty=Tensor[(1, 72), uint32] */, dtype="uint32") /* ty=Tensor[(1, 72), uint32] */;
  %858 = cast(meta[relay.Constant][57] /* ty=Tensor[(1, 72), uint32] */, dtype="uint32") /* ty=Tensor[(1, 72), uint32] */;
  %859 = cast(%var_11749, dtype="float64") /* ty=Tensor[(576), float64] */;
  %860 = cast(%var_11750, dtype="int32") /* ty=int32 */;
  %861 = cast(%var_11751, dtype="float32") /* ty=Tensor[(36), float32] */;
  %862 = cast(%var_11752, dtype="int8") /* ty=Tensor[(660, 2), int8] */;
  %863 = reshape(%857, newshape=[3, 4, 6]) /* ty=Tensor[(3, 4, 6), uint32] */;
  %864 = reshape(%858, newshape=[3, 4, 6]) /* ty=Tensor[(3, 4, 6), uint32] */;
  %865 = reshape(%859, newshape=[288, 2]) /* ty=Tensor[(288, 2), float64] */;
  %866 = reshape(%860, newshape=[]) /* ty=int32 */;
  %867 = reshape(%861, newshape=[9, 4]) /* ty=Tensor[(9, 4), float32] */;
  %868 = reshape(%862, newshape=[1320]) /* ty=Tensor[(1320), int8] */;
  %869 = @func_3162(%863, %864, %865, %866, %867, %868) /* ty=(Tensor[(3, 4, 6), uint32], Tensor[(7, 13, 9), bool], Tensor[(819), float64], Tensor[(576), float64], Tensor[(8, 4, 14), float64], int32, Tensor[(448), int32], Tensor[(660, 2), int8], Tensor[(9, 4), float32], Tensor[(1320), int8], Tensor[(16, 5), float64], Tensor[(288, 2), float64], Tensor[(16, 5), float64], Tensor[(16, 9, 4), float64]) */;
  %870 = %849.0;
  %871 = %856.4;
  %872 = %869.10;
  (%870, %871, %var_11708, %var_11709, %872, meta[relay.Constant][57] /* ty=Tensor[(1, 72), uint32] */, %var_11749, %var_11750, %var_11751, %var_11752)
}

def @func_10575() -> (Tensor[(1, 9, 16), float64], Tensor[(?, 9, 16), float32]) {
  %873 = @func_9526() /* ty=(Tensor[(1, 9, 16), float64], Tensor[(165), uint8], Tensor[(300), float32], Tensor[(3, 9, 16), float64], Tensor[(11, 8, 15), int8], Tensor[(1320), int8]) */;
  %874 = %873.0;
  %875 = @func_9763() /* ty=Tensor[(?, 9, 16), float32] */;
  (%874, %875)
}

def @func_4386(%var_4365: Tensor[(9, 11, 13), int8]) -> (Tensor[(9, 11, 13), bool], Tensor[(9, 11, 13), int8]) {
  %876 = cast(meta[relay.Constant][59] /* ty=Tensor[(9, 11, 13), int8] */, dtype="bool") /* ty=Tensor[(9, 11, 13), bool] */;
  %877 = shape_of(meta[relay.Constant][58] /* ty=Tensor[(9, 11, 13), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %878 = cast(meta[relay.Constant][58] /* ty=Tensor[(9, 11, 13), int8] */, dtype="bool") /* ty=Tensor[(9, 11, 13), bool] */;
  %879 = dyn.reshape(%876, %877, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %880 = cast(%var_4365, dtype="int8") /* ty=Tensor[(9, 11, 13), int8] */;
  %881 = shape_of(meta[relay.Constant][58] /* ty=Tensor[(9, 11, 13), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %882 = cast(meta[relay.Constant][58] /* ty=Tensor[(9, 11, 13), int8] */, dtype="int8") /* ty=Tensor[(9, 11, 13), int8] */;
  %883 = dyn.reshape(%880, %881, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %884 = equal(%878, %879) /* ty=Tensor[(9, 11, 13), bool] */;
  %885 = minimum(%882, %883) /* ty=Tensor[(9, 11, 13), int8] */;
  (%884, %885)
}

def @func_7645(%var_7633: Tensor[(12, 4, 1), float32], %var_7634: Tensor[(12, 4, 11), float32]) -> Tensor[(12, 4, 11), float32] {
  %886 = cast(%var_7633, dtype="float32") /* ty=Tensor[(12, 4, 1), float32] */;
  %887 = cast(%var_7634, dtype="float32") /* ty=Tensor[(12, 4, 11), float32] */;
  divide(%886, %887) /* ty=Tensor[(12, 4, 11), float32] */
}

def @func_9526() -> (Tensor[(1, 9, 16), float64], Tensor[(165), uint8], Tensor[(300), float32], Tensor[(3, 9, 16), float64], Tensor[(11, 8, 15), int8], Tensor[(1320), int8]) {
  %888 = @func_7872() /* ty=(Tensor[(1, 9, 16), float64],) */;
  %889 = cast(meta[relay.Constant][60] /* ty=Tensor[(300), float32] */, dtype="float32") /* ty=Tensor[(300), float32] */;
  %890 = reshape(%889, newshape=[5, 12, 5]) /* ty=Tensor[(5, 12, 5), float32] */;
  %891 = @func_9384(%890) /* ty=(Tensor[(5, 12, 5), float32], Tensor[(11, 5, 3), uint8], uint8, Tensor[(165), uint8]) */;
  %892 = @func_7722() /* ty=(Tensor[(3, 9, 16), float64],) */;
  %893 = cast(meta[relay.Constant][61] /* ty=Tensor[(1320), int8] */, dtype="int8") /* ty=Tensor[(1320), int8] */;
  %894 = reshape(%893, newshape=[11, 8, 15]) /* ty=Tensor[(11, 8, 15), int8] */;
  %895 = %888.0;
  %896 = %891.3;
  %897 = %892.0;
  %898 = @func_1421(%894) /* ty=Tensor[(11, 8, 15), int8] */;
  (%895, %896, meta[relay.Constant][60] /* ty=Tensor[(300), float32] */, %897, %898, meta[relay.Constant][61] /* ty=Tensor[(1320), int8] */)
}

def @func_7426(%var_7384: Tensor[(3, 11, 13), int16], %var_7385: Tensor[(3, 11, 13), int16], %var_7414: uint8) -> (Tensor[(3, 11, 13), float32], Tensor[(1, 9, 16), float64], uint8, uint8) {
  %899 = cast(%var_7385, dtype="int16") /* ty=Tensor[(3, 11, 13), int16] */;
  %900 = shape_of(%var_7384, dtype="int32") /* ty=Tensor[(3), int32] */;
  %901 = cast(%var_7384, dtype="int16") /* ty=Tensor[(3, 11, 13), int16] */;
  %902 = dyn.reshape(%899, %900, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %903 = left_shift(%901, %902) /* ty=Tensor[(3, 11, 13), int16] */;
  %904 = cast(%903, dtype="float32") /* ty=Tensor[(3, 11, 13), float32] */;
  %905 = shape_of(%var_7385, dtype="int32") /* ty=Tensor[(3), int32] */;
  %906 = cast(%var_7385, dtype="float32") /* ty=Tensor[(3, 11, 13), float32] */;
  %907 = dyn.reshape(%904, %905, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %908 = cast(%var_7414, dtype="uint8") /* ty=uint8 */;
  %909 = reshape(%908, newshape=[]) /* ty=uint8 */;
  %910 = @func_5680(%909) /* ty=(Tensor[(1, 9, 16), float64], Tensor[(11, 5, 3), float32], uint8, Tensor[(165), uint8], Tensor[(1, 9, 16), float64]) */;
  %911 = floor_divide(%906, %907) /* ty=Tensor[(3, 11, 13), float32] */;
  %912 = @func_6203() /* ty=Tensor[(1, 9, 16), float64] */;
  %913 = %910.2;
  (%911, %912, %913, %var_7414)
}

def @func_1421(%var_1376: Tensor[(11, 8, 15), int8]) -> Tensor[(11, 8, 15), int8] {
  %914 = cast(meta[relay.Constant][62] /* ty=Tensor[(11, 8, 15), int8] */, dtype="int8") /* ty=Tensor[(11, 8, 15), int8] */;
  %915 = shape_of(%var_1376, dtype="int32") /* ty=Tensor[(3), int32] */;
  %916 = cast(%var_1376, dtype="int8") /* ty=Tensor[(11, 8, 15), int8] */;
  %917 = dyn.reshape(%914, %915, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  multiply(%916, %917) /* ty=Tensor[(11, 8, 15), int8] */
}

def @func_8589() -> (Tensor[(1, 9, 16), float32],) {
  %918 = @func_7918() /* ty=Tensor[(1, 9, 16), float32] */;
  (%918,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_8115() -> (Tensor[(1, 9, 16), float64],) {
  %0 = @func_5742() /* ty=Tensor[(1, 9, 16), float64] */;
  (%0,)
}

def @func_8240(%var_8238: Tensor[(182), uint64], %var_8239: uint8) -> (Tensor[(1, 9, 16), float64], Tensor[(11, 5, 3), uint8], Tensor[(182), uint64], uint8, Tensor[(165), uint8]) {
  %10 = fn (%var_8221: Tensor[(182), uint64], %var_8222: uint8) -> (Tensor[(1, 9, 16), float64], Tensor[(11, 5, 3), uint8], Tensor[(182), uint64], uint8, Tensor[(165), uint8]) {
    %1 = cast(%var_8221, dtype="uint64") /* ty=Tensor[(182), uint64] */;
    %2 = cast(%var_8222, dtype="uint8") /* ty=uint8 */;
    %3 = cast(meta[relay.Constant][0] /* ty=Tensor[(165), uint8] */, dtype="uint8") /* ty=Tensor[(165), uint8] */;
    %4 = reshape(%1, newshape=[182]) /* ty=Tensor[(182), uint64] */;
    %5 = reshape(%2, newshape=[]) /* ty=uint8 */;
    %6 = reshape(%3, newshape=[165]) /* ty=Tensor[(165), uint8] */;
    %7 = @func_5723(%4, %5, %6) /* ty=(Tensor[(1, 9, 16), float64], Tensor[(576), float64], Tensor[(182), uint64], Tensor[(11, 5, 3), uint8], uint8, Tensor[(165), uint8]) */;
    %8 = @func_6203() /* ty=Tensor[(1, 9, 16), float64] */;
    %9 = %7.3;
    (%8, %9, %var_8221, %var_8222, meta[relay.Constant][0] /* ty=Tensor[(165), uint8] */)
  };
  %10(%var_8238, %var_8239) /* ty=(Tensor[(1, 9, 16), float64], Tensor[(11, 5, 3), uint8], Tensor[(182), uint64], uint8, Tensor[(165), uint8]) */
}

def @func_6879() -> (Tensor[(1, 9, 16), float64],) {
  %12 = fn () -> (Tensor[(1, 9, 16), float64],) {
    %11 = @func_6186() /* ty=Tensor[(1, 9, 16), float64] */;
    (%11,)
  };
  %12() /* ty=(Tensor[(1, 9, 16), float64],) */
}

def @func_2873(%var_2859: Tensor[(3, 5, 14), float32]) -> (Tensor[(3, 5, 14), float32], Tensor[(16, 9, 4), float64], Tensor[(182), uint64]) {
  %13 = cast(%var_2859, dtype="float32") /* ty=Tensor[(3, 5, 14), float32] */;
  %14 = cast(meta[relay.Constant][1] /* ty=Tensor[(182), uint64] */, dtype="uint64") /* ty=Tensor[(182), uint64] */;
  %15 = reshape(%14, newshape=[13, 2, 7]) /* ty=Tensor[(13, 2, 7), uint64] */;
  %16 = @func_983(%15) /* ty=(Tensor[(13, 2, 7), uint64], Tensor[(16, 9, 4), float64], Tensor[(1, 819), float64], Tensor[(576), float64], Tensor[(16, 9, 4), float64], Tensor[(16, 9, 4), float64]) */;
  %17 = log2(%13) /* ty=Tensor[(3, 5, 14), float32] */;
  %18 = %16.1;
  (%17, %18, meta[relay.Constant][1] /* ty=Tensor[(182), uint64] */)
}

def @func_578(%var_530: Tensor[(7, 13, 9), float64], %var_531: Tensor[(7, 13, 9), float64], %var_537: Tensor[(576), float64]) -> (Tensor[(16, 9, 4), float64], Tensor[(576), float64], Tensor[(16, 9, 4), float64], Tensor[(7, 13, 9), bool], Tensor[(16, 9, 4), float64], Tensor[(7, 13, 9), float32], Tensor[(16, 9, 4), float64]) {
  %19 = cast(%var_537, dtype="float64") /* ty=Tensor[(576), float64] */;
  %20 = reshape(%19, newshape=[16, 9, 4]) /* ty=Tensor[(16, 9, 4), float64] */;
  %21 = @func_363(%20) /* ty=(Tensor[(16, 9, 4), float64],) */;
  %22 = cast(%var_537, dtype="float64") /* ty=Tensor[(576), float64] */;
  %23 = reshape(%22, newshape=[16, 9, 4]) /* ty=Tensor[(16, 9, 4), float64] */;
  %24 = @func_363(%23) /* ty=(Tensor[(16, 9, 4), float64],) */;
  %25 = %24.0;
  %26 = cast(%25, dtype="float64") /* ty=Tensor[(16, 9, 4), float64] */;
  %27 = shape_of(%var_537, dtype="int32") /* ty=Tensor[(1), int32] */;
  %28 = cast(%var_537, dtype="float64") /* ty=Tensor[(576), float64] */;
  %29 = dyn.reshape(%26, %27, newshape=[]) /* ty=Tensor[(?), float64] */;
  %30 = cast(%25, dtype="float64") /* ty=Tensor[(16, 9, 4), float64] */;
  %31 = reshape(%30, newshape=[16, 9, 4]) /* ty=Tensor[(16, 9, 4), float64] */;
  %32 = @func_363(%31) /* ty=(Tensor[(16, 9, 4), float64],) */;
  %33 = cast(%var_531, dtype="bool") /* ty=Tensor[(7, 13, 9), bool] */;
  %34 = shape_of(%var_530, dtype="int32") /* ty=Tensor[(3), int32] */;
  %35 = cast(%var_530, dtype="bool") /* ty=Tensor[(7, 13, 9), bool] */;
  %36 = dyn.reshape(%33, %34, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %37 = equal(%35, %36) /* ty=Tensor[(7, 13, 9), bool] */;
  %38 = cast(%37, dtype="bool") /* ty=Tensor[(7, 13, 9), bool] */;
  %39 = shape_of(%var_531, dtype="int32") /* ty=Tensor[(3), int32] */;
  %40 = cast(%var_531, dtype="bool") /* ty=Tensor[(7, 13, 9), bool] */;
  %41 = dyn.reshape(%38, %39, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %42 = cast(%25, dtype="float64") /* ty=Tensor[(16, 9, 4), float64] */;
  %43 = reshape(%42, newshape=[16, 9, 4]) /* ty=Tensor[(16, 9, 4), float64] */;
  %44 = @func_363(%43) /* ty=(Tensor[(16, 9, 4), float64],) */;
  %45 = cast(%37, dtype="float32") /* ty=Tensor[(7, 13, 9), float32] */;
  %46 = minimum(%28, %29) /* ty=Tensor[(576), float64] */;
  %47 = cast(%46, dtype="float64") /* ty=Tensor[(576), float64] */;
  %48 = reshape(%47, newshape=[16, 9, 4]) /* ty=Tensor[(16, 9, 4), float64] */;
  %49 = @func_363(%48) /* ty=(Tensor[(16, 9, 4), float64],) */;
  %50 = %21.0;
  %51 = %32.0;
  %52 = greater_equal(%40, %41) /* ty=Tensor[(7, 13, 9), bool] */;
  %53 = %44.0;
  %54 = acos(%45) /* ty=Tensor[(7, 13, 9), float32] */;
  %55 = %49.0;
  (%50, %46, %51, %52, %53, %54, %55)
}

def @func_5768() -> Tensor[(1, 9, 16), float64] {
  %56 = fn () -> Tensor[(1, 9, 16), float64] {
    @func_5742() /* ty=Tensor[(1, 9, 16), float64] */
  };
  %56() /* ty=Tensor[(1, 9, 16), float64] */
}

def @func_3840(%var_3838: Tensor[(4, 4, 4), float32]) -> Tensor[(4, 4, 4), float32] {
  @func_3837(%var_3838) /* ty=Tensor[(4, 4, 4), float32] */
}

def @func_11124(%var_11122: Tensor[(6, 9, 16), float32]) -> Tensor[(6, 9, 16), float64] {
  @func_11121(%var_11122) /* ty=Tensor[(6, 9, 16), float64] */
}

def @func_10001() -> Tensor[(1, 9, 16), float32] {
  %57 = @func_6055() /* ty=(Tensor[(?, 9, 16), uint32], Tensor[(1, 9, 16), float32]) */;
  %57.1
}

def @func_5577() -> (Tensor[(1, 9, 16), float64],) {
  %58 = @func_5555() /* ty=Tensor[(1, 9, 16), float64] */;
  (%58,)
}

def @func_4680(%var_4678: Tensor[(3, 15, 13), float32]) -> Tensor[(3, 15, 13), bool] {
  @func_4677(%var_4678) /* ty=Tensor[(3, 15, 13), bool] */
}

def @func_4677(%var_4663: Tensor[(3, 15, 13), float32]) -> Tensor[(3, 15, 13), bool] {
  %59 = cast(%var_4663, dtype="float32") /* ty=Tensor[(3, 15, 13), float32] */;
  %60 = sinh(%59) /* ty=Tensor[(3, 15, 13), float32] */;
  %61 = cast(%60, dtype="bool") /* ty=Tensor[(3, 15, 13), bool] */;
  %62 = shape_of(%var_4663, dtype="int32") /* ty=Tensor[(3), int32] */;
  %63 = cast(%var_4663, dtype="bool") /* ty=Tensor[(3, 15, 13), bool] */;
  %64 = dyn.reshape(%61, %62, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%63, %64) /* ty=Tensor[(3, 15, 13), bool] */
}

def @func_8252() -> (Tensor[(1, 9, 16), float64],) {
  %67 = fn () -> (Tensor[(1, 9, 16), float64],) {
    %65 = @func_7539() /* ty=(Tensor[(1, 9, 16), float64],) */;
    %66 = %65.0;
    (%66,)
  };
  %67() /* ty=(Tensor[(1, 9, 16), float64],) */
}

def @func_366(%var_364: Tensor[(16, 9, 4), float64]) -> (Tensor[(16, 9, 4), float64],) {
  @func_363(%var_364) /* ty=(Tensor[(16, 9, 4), float64],) */
}

def @func_7723() -> (Tensor[(3, 9, 16), float64],) {
  %74 = fn () -> (Tensor[(3, 9, 16), float64],) {
    %68 = @func_5555() /* ty=Tensor[(1, 9, 16), float64] */;
    %69 = cast(%68, dtype="float64") /* ty=Tensor[(1, 9, 16), float64] */;
    %70 = cast(meta[relay.Constant][2] /* ty=Tensor[(3, 9, 16), float64] */, dtype="float64") /* ty=Tensor[(3, 9, 16), float64] */;
    %71 = floor_divide(%69, %70) /* ty=Tensor[(3, 9, 16), float64] */;
    %72 = cast(%71, dtype="float64") /* ty=Tensor[(3, 9, 16), float64] */;
    %73 = tan(%72) /* ty=Tensor[(3, 9, 16), float64] */;
    (%73,)
  };
  %74() /* ty=(Tensor[(3, 9, 16), float64],) */
}

def @func_1423(%var_1422: Tensor[(11, 8, 15), int8]) -> Tensor[(11, 8, 15), int8] {
  %79 = fn (%var_1376: Tensor[(11, 8, 15), int8]) -> Tensor[(11, 8, 15), int8] {
    %75 = cast(meta[relay.Constant][3] /* ty=Tensor[(11, 8, 15), int8] */, dtype="int8") /* ty=Tensor[(11, 8, 15), int8] */;
    %76 = shape_of(%var_1376, dtype="int32") /* ty=Tensor[(3), int32] */;
    %77 = cast(%var_1376, dtype="int8") /* ty=Tensor[(11, 8, 15), int8] */;
    %78 = dyn.reshape(%75, %76, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    multiply(%77, %78) /* ty=Tensor[(11, 8, 15), int8] */
  };
  %79(%var_1422) /* ty=Tensor[(11, 8, 15), int8] */
}

def @func_10089() -> (Tensor[(3, 9, 16), float32], Tensor[(210), float32], Tensor[(2304), float64], Tensor[(105, 2), float32], Tensor[(5, 15, 14), float32], float32, Tensor[(1050), float32]) {
  %96 = fn () -> (Tensor[(3, 9, 16), float32], Tensor[(210), float32], Tensor[(2304), float64], Tensor[(105, 2), float32], Tensor[(5, 15, 14), float32], float32, Tensor[(1050), float32]) {
    %80 = @func_9526() /* ty=(Tensor[(1, 9, 16), float64], Tensor[(165), uint8], Tensor[(300), float32], Tensor[(3, 9, 16), float64], Tensor[(11, 8, 15), int8], Tensor[(1320), int8]) */;
    %81 = %80.3;
    %82 = cast(%81, dtype="float32") /* ty=Tensor[(3, 9, 16), float32] */;
    %83 = cast(meta[relay.Constant][4] /* ty=Tensor[(2304), float64] */, dtype="float64") /* ty=Tensor[(2304), float64] */;
    %84 = cast(meta[relay.Constant][5] /* ty=Tensor[(105, 2), float32] */, dtype="float32") /* ty=Tensor[(105, 2), float32] */;
    %85 = reshape(%83, newshape=[16, 9, 16]) /* ty=Tensor[(16, 9, 16), float64] */;
    %86 = reshape(%84, newshape=[210]) /* ty=Tensor[(210), float32] */;
    %87 = @func_9052(%85, %86) /* ty=(Tensor[(16, 9, 16), int16], Tensor[(1, 9, 16), float64], Tensor[(210), float32], Tensor[(16, 9, 16), float32]) */;
    %88 = cast(-9.5653f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %89 = cast(meta[relay.Constant][6] /* ty=Tensor[(1050), float32] */, dtype="float32") /* ty=Tensor[(1050), float32] */;
    %90 = reshape(%88, newshape=[]) /* ty=float32 */;
    %91 = reshape(%89, newshape=[5, 15, 14]) /* ty=Tensor[(5, 15, 14), float32] */;
    %92 = @func_8417(%90, %91) /* ty=(Tensor[(5, 15, 14), float32],) */;
    %93 = atan(%82) /* ty=Tensor[(3, 9, 16), float32] */;
    %94 = %87.2;
    %95 = %92.0;
    (%93, %94, meta[relay.Constant][4] /* ty=Tensor[(2304), float64] */, meta[relay.Constant][5] /* ty=Tensor[(105, 2), float32] */, %95, -9.5653f /* ty=float32 */, meta[relay.Constant][6] /* ty=Tensor[(1050), float32] */)
  };
  %96() /* ty=(Tensor[(3, 9, 16), float32], Tensor[(210), float32], Tensor[(2304), float64], Tensor[(105, 2), float32], Tensor[(5, 15, 14), float32], float32, Tensor[(1050), float32]) */
}

def @func_10182() -> (Tensor[(1, 9, 16), float64], Tensor[(11, 8, 15), int8], Tensor[(1, 9, 16), float64], Tensor[(3, 9, 16), float64]) {
  %105 = fn () -> (Tensor[(1, 9, 16), float64], Tensor[(11, 8, 15), int8], Tensor[(1, 9, 16), float64], Tensor[(3, 9, 16), float64]) {
    %97 = @func_8441() /* ty=(Tensor[(1, 9, 16), float32], Tensor[(1, 9, 16), float64]) */;
    %98 = @func_9526() /* ty=(Tensor[(1, 9, 16), float64], Tensor[(165), uint8], Tensor[(300), float32], Tensor[(3, 9, 16), float64], Tensor[(11, 8, 15), int8], Tensor[(1320), int8]) */;
    %99 = @func_9542() /* ty=(Tensor[(1, 9, 16), float64],) */;
    %100 = @func_7722() /* ty=(Tensor[(3, 9, 16), float64],) */;
    %101 = %97.1;
    %102 = %98.4;
    %103 = %99.0;
    %104 = %100.0;
    (%101, %102, %103, %104)
  };
  %105() /* ty=(Tensor[(1, 9, 16), float64], Tensor[(11, 8, 15), int8], Tensor[(1, 9, 16), float64], Tensor[(3, 9, 16), float64]) */
}

def @func_8746() -> (Tensor[(10, 9, 16), float32],) {
  %106 = @func_8286() /* ty=(Tensor[(10, 9, 16), float32],) */;
  %107 = %106.0;
  (%107,)
}

def @func_11137() -> Tensor[(1, 9, 16), float64] {
  %108 = @func_8787() /* ty=(Tensor[(1, 9, 16), float64], Tensor[(1, 9, 16), float64]) */;
  %108.0
}

def @func_2264(%var_2262: Tensor[(4, 3, 3), float32], %var_2263: Tensor[(660, 2), int8]) -> (Tensor[(4, 3, 3), float32], Tensor[(11, 8, 15), int8], Tensor[(660, 2), int8]) {
  @func_2260(%var_2262, %var_2263) /* ty=(Tensor[(4, 3, 3), float32], Tensor[(11, 8, 15), int8], Tensor[(660, 2), int8]) */
}

def @func_10348() -> (Tensor[(720), float32], Tensor[(1, 9, 16), float64]) {
  %112 = fn () -> (Tensor[(720), float32], Tensor[(1, 9, 16), float64]) {
    %109 = @func_5577() /* ty=(Tensor[(1, 9, 16), float64],) */;
    %110 = @func_7177() /* ty=Tensor[(720), float32] */;
    %111 = %109.0;
    (%110, %111)
  };
  %112() /* ty=(Tensor[(720), float32], Tensor[(1, 9, 16), float64]) */
}

def @func_1162(%var_1082: int32, %var_1083: Tensor[(8, 4, 14), int32], %var_1100: Tensor[(819), float64], %var_1101: Tensor[(576), float64]) -> (Tensor[(8, 4, 14), bool], Tensor[(8, 4, 14), float64], Tensor[(819), float64], Tensor[(7, 13, 9), bool], Tensor[(576), uint32], Tensor[(16, 9, 4), float32]) {
  %113 = cast(%var_1082, dtype="bool") /* ty=bool */;
  %114 = cast(%var_1083, dtype="bool") /* ty=Tensor[(8, 4, 14), bool] */;
  %115 = cast(%var_1083, dtype="float64") /* ty=Tensor[(8, 4, 14), float64] */;
  %116 = cast(%var_1082, dtype="float64") /* ty=float64 */;
  %117 = cast(%var_1100, dtype="float64") /* ty=Tensor[(819), float64] */;
  %118 = cast(%var_1100, dtype="float64") /* ty=Tensor[(819), float64] */;
  %119 = cast(%var_1100, dtype="float64") /* ty=Tensor[(819), float64] */;
  %120 = cast(%var_1100, dtype="float64") /* ty=Tensor[(819), float64] */;
  %121 = cast(%var_1101, dtype="float64") /* ty=Tensor[(576), float64] */;
  %122 = reshape(%119, newshape=[7, 13, 9]) /* ty=Tensor[(7, 13, 9), float64] */;
  %123 = reshape(%120, newshape=[7, 13, 9]) /* ty=Tensor[(7, 13, 9), float64] */;
  %124 = reshape(%121, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %125 = @func_578(%122, %123, %124) /* ty=(Tensor[(16, 9, 4), float64], Tensor[(576), float64], Tensor[(16, 9, 4), float64], Tensor[(7, 13, 9), bool], Tensor[(16, 9, 4), float64], Tensor[(7, 13, 9), float32], Tensor[(16, 9, 4), float64]) */;
  %126 = %125.0;
  %127 = cast(%126, dtype="float64") /* ty=Tensor[(16, 9, 4), float64] */;
  %128 = shape_of(%var_1101, dtype="int32") /* ty=Tensor[(1), int32] */;
  %129 = cast(%var_1101, dtype="float64") /* ty=Tensor[(576), float64] */;
  %130 = dyn.reshape(%127, %128, newshape=[]) /* ty=Tensor[(?), float64] */;
  %131 = mod(%129, %130) /* ty=Tensor[(576), float64] */;
  %132 = cast(%131, dtype="float64") /* ty=Tensor[(576), float64] */;
  %133 = reshape(%117, newshape=[7, 13, 9]) /* ty=Tensor[(7, 13, 9), float64] */;
  %134 = reshape(%118, newshape=[7, 13, 9]) /* ty=Tensor[(7, 13, 9), float64] */;
  %135 = reshape(%132, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %136 = @func_578(%133, %134, %135) /* ty=(Tensor[(16, 9, 4), float64], Tensor[(576), float64], Tensor[(16, 9, 4), float64], Tensor[(7, 13, 9), bool], Tensor[(16, 9, 4), float64], Tensor[(7, 13, 9), float32], Tensor[(16, 9, 4), float64]) */;
  %137 = cast(%var_1100, dtype="float64") /* ty=Tensor[(819), float64] */;
  %138 = cast(%var_1100, dtype="float64") /* ty=Tensor[(819), float64] */;
  %139 = cast(%126, dtype="float64") /* ty=Tensor[(16, 9, 4), float64] */;
  %140 = reshape(%137, newshape=[7, 13, 9]) /* ty=Tensor[(7, 13, 9), float64] */;
  %141 = reshape(%138, newshape=[7, 13, 9]) /* ty=Tensor[(7, 13, 9), float64] */;
  %142 = reshape(%139, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %143 = @func_578(%140, %141, %142) /* ty=(Tensor[(16, 9, 4), float64], Tensor[(576), float64], Tensor[(16, 9, 4), float64], Tensor[(7, 13, 9), bool], Tensor[(16, 9, 4), float64], Tensor[(7, 13, 9), float32], Tensor[(16, 9, 4), float64]) */;
  %144 = %143.2;
  %145 = cast(%144, dtype="uint32") /* ty=Tensor[(16, 9, 4), uint32] */;
  %146 = shape_of(%131, dtype="int32") /* ty=Tensor[(1), int32] */;
  %147 = cast(%131, dtype="uint32") /* ty=Tensor[(576), uint32] */;
  %148 = dyn.reshape(%145, %146, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %149 = cast(%126, dtype="float32") /* ty=Tensor[(16, 9, 4), float32] */;
  %150 = equal(%113, %114) /* ty=Tensor[(8, 4, 14), bool] */;
  %151 = mod(%115, %116) /* ty=Tensor[(8, 4, 14), float64] */;
  %152 = %136.3;
  %153 = bitwise_or(%147, %148) /* ty=Tensor[(576), uint32] */;
  %154 = erf(%149) /* ty=Tensor[(16, 9, 4), float32] */;
  (%150, %151, %var_1100, %152, %153, %154)
}

def @func_9830(%var_9797: Tensor[(9, 15, 1), float64], %var_9813: Tensor[(6, 100), float32]) -> (Tensor[(9, 15, 1), float64], Tensor[(1, 9, 16), float64], Tensor[(36), float32], Tensor[(6, 100), float32], Tensor[(36), float32], Tensor[(1, 9, 16), float64], Tensor[(9, 15, 1), float64]) {
  %155 = cast(8.3619f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %156 = cast(%var_9797, dtype="float64") /* ty=Tensor[(9, 15, 1), float64] */;
  %157 = @func_6847() /* ty=(Tensor[(1, 9, 16), float64], Tensor[(1, 9, 16), float64], Tensor[(1, 9, 16), float64]) */;
  %158 = cast(%var_9813, dtype="float32") /* ty=Tensor[(6, 100), float32] */;
  %159 = cast(8.3619f64 /* ty=float64 */, dtype="uint8") /* ty=uint8 */;
  %160 = cast(meta[relay.Constant][7] /* ty=Tensor[(36), float32] */, dtype="float32") /* ty=Tensor[(36), float32] */;
  %161 = reshape(%158, newshape=[10, 5, 12]) /* ty=Tensor[(10, 5, 12), float32] */;
  %162 = reshape(%159, newshape=[]) /* ty=uint8 */;
  %163 = reshape(%160, newshape=[36]) /* ty=Tensor[(36), float32] */;
  %164 = @func_9242(%161, %162, %163) /* ty=(Tensor[(165), uint8], Tensor[(36), float32], Tensor[(10, 5, 12), bool], Tensor[(1, 9, 16), float64]) */;
  %165 = cast(%var_9797, dtype="float64") /* ty=Tensor[(9, 15, 1), float64] */;
  %166 = floor_mod(%155, %156) /* ty=Tensor[(9, 15, 1), float64] */;
  %167 = %157.0;
  %168 = %164.1;
  %169 = @func_7787() /* ty=Tensor[(1, 9, 16), float64] */;
  %170 = sqrt(%165) /* ty=Tensor[(9, 15, 1), float64] */;
  (%166, %167, %168, %var_9813, meta[relay.Constant][7] /* ty=Tensor[(36), float32] */, %169, %170)
}

def @func_7365() -> (Tensor[(10, 9, 16), float32], Tensor[(1, 9, 16), float64]) {
  %178 = fn () -> (Tensor[(10, 9, 16), float32], Tensor[(1, 9, 16), float64]) {
    %171 = @func_6674() /* ty=(Tensor[(1, 9, 16), float64],) */;
    %172 = %171.0;
    %173 = cast(%172, dtype="float32") /* ty=Tensor[(1, 9, 16), float32] */;
    %174 = cast(meta[relay.Constant][8] /* ty=Tensor[(10, 9, 16), float64] */, dtype="float32") /* ty=Tensor[(10, 9, 16), float32] */;
    %175 = @func_6847() /* ty=(Tensor[(1, 9, 16), float64], Tensor[(1, 9, 16), float64], Tensor[(1, 9, 16), float64]) */;
    %176 = floor_mod(%173, %174) /* ty=Tensor[(10, 9, 16), float32] */;
    %177 = %175.2;
    (%176, %177)
  };
  %178() /* ty=(Tensor[(10, 9, 16), float32], Tensor[(1, 9, 16), float64]) */
}

def @func_6757() -> (Tensor[(?, 9, 16), float32],) {
  @func_6755() /* ty=(Tensor[(?, 9, 16), float32],) */
}

def @func_7899(%var_7887: Tensor[(576), float64]) -> (Tensor[(1, 9, 16), float64], Tensor[(16, 9, 4), float64], Tensor[(576), float64]) {
  %179 = @func_7602() /* ty=(Tensor[(1, 9, 16), float64],) */;
  %180 = cast(%var_7887, dtype="float64") /* ty=Tensor[(576), float64] */;
  %181 = reshape(%180, newshape=[16, 9, 4]) /* ty=Tensor[(16, 9, 4), float64] */;
  %182 = @func_363(%181) /* ty=(Tensor[(16, 9, 4), float64],) */;
  %183 = %179.0;
  %184 = %182.0;
  (%183, %184, %var_7887)
}

def @func_8117() -> (Tensor[(1, 9, 16), float64],) {
  @func_8115() /* ty=(Tensor[(1, 9, 16), float64],) */
}

def @func_7178() -> Tensor[(720), float32] {
  %186 = fn () -> Tensor[(720), float32] {
    %185 = @func_6257() /* ty=(Tensor[(?, 9, 16), int32], Tensor[(6, 8, 15), float32], Tensor[(720), float32]) */;
    %185.2
  };
  %186() /* ty=Tensor[(720), float32] */
}

def @func_5845() -> Tensor[(1, 9, 16), float64] {
  @func_5843() /* ty=Tensor[(1, 9, 16), float64] */
}

def @func_11306() -> (Tensor[(1, 9, 16), float64],) {
  %187 = @func_10575() /* ty=(Tensor[(1, 9, 16), float64], Tensor[(?, 9, 16), float32]) */;
  %188 = %187.0;
  (%188,)
}

def @func_8626() -> Tensor[(1, 9, 16), float64] {
  %189 = @func_8251() /* ty=(Tensor[(1, 9, 16), float64],) */;
  %189.0
}

def @func_7873() -> (Tensor[(1, 9, 16), float64],) {
  %192 = fn () -> (Tensor[(1, 9, 16), float64],) {
    %190 = @func_5577() /* ty=(Tensor[(1, 9, 16), float64],) */;
    %191 = %190.0;
    (%191,)
  };
  %192() /* ty=(Tensor[(1, 9, 16), float64],) */
}

def @func_6257() -> (Tensor[(?, 9, 16), int32], Tensor[(6, 8, 15), float32], Tensor[(720), float32]) {
  %193 = @func_5631() /* ty=Tensor[(1, 9, 16), float64] */;
  %194 = @func_5577() /* ty=(Tensor[(1, 9, 16), float64],) */;
  %195 = %194.0;
  %196 = cast(%195, dtype="int32") /* ty=Tensor[(1, 9, 16), int32] */;
  %197 = shape_of(%193, dtype="int32") /* ty=Tensor[(3), int32] */;
  %198 = cast(%193, dtype="int32") /* ty=Tensor[(1, 9, 16), int32] */;
  %199 = dyn.reshape(%196, %197, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %200 = cast(meta[relay.Constant][9] /* ty=Tensor[(720), float32] */, dtype="float32") /* ty=Tensor[(720), float32] */;
  %201 = reshape(%200, newshape=[6, 8, 15]) /* ty=Tensor[(6, 8, 15), float32] */;
  %202 = subtract(%198, %199) /* ty=Tensor[(?, 9, 16), int32] */;
  %203 = @func_2443(%201) /* ty=Tensor[(6, 8, 15), float32] */;
  (%202, %203, meta[relay.Constant][9] /* ty=Tensor[(720), float32] */)
}

def @func_9991() -> (Tensor[(10, 9, 16), float32],) {
  %205 = fn () -> (Tensor[(10, 9, 16), float32],) {
    %204 = @func_8300() /* ty=Tensor[(10, 9, 16), float32] */;
    (%204,)
  };
  %205() /* ty=(Tensor[(10, 9, 16), float32],) */
}

def @func_8340(%var_8322: Tensor[(6, 8, 15), float32], %var_8332: Tensor[(448), int32], %var_8333: Tensor[(819), float64]) -> (Tensor[(6, 8, 15), bool], Tensor[(819), float64], Tensor[(448), int32], Tensor[(819), float64], Tensor[(4, 2, 6), float64], Tensor[(378), int16], Tensor[(48), float64]) {
  %206 = @func_6257() /* ty=(Tensor[(?, 9, 16), int32], Tensor[(6, 8, 15), float32], Tensor[(720), float32]) */;
  %207 = %206.1;
  %208 = cast(%var_8322, dtype="bool") /* ty=Tensor[(6, 8, 15), bool] */;
  %209 = shape_of(%207, dtype="int32") /* ty=Tensor[(3), int32] */;
  %210 = cast(%207, dtype="bool") /* ty=Tensor[(6, 8, 15), bool] */;
  %211 = dyn.reshape(%208, %209, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %212 = cast(%var_8332, dtype="int32") /* ty=Tensor[(448), int32] */;
  %213 = cast(%var_8333, dtype="float64") /* ty=Tensor[(819), float64] */;
  %214 = reshape(%212, newshape=[448]) /* ty=Tensor[(448), int32] */;
  %215 = reshape(%213, newshape=[819]) /* ty=Tensor[(819), float64] */;
  %216 = @func_6638(%214, %215) /* ty=(Tensor[(1, 9, 16), float64], Tensor[(819), float64], int32, Tensor[(448), int32], Tensor[(819), float64], Tensor[(576), float64]) */;
  %217 = cast(meta[relay.Constant][10] /* ty=Tensor[(378), int16] */, dtype="int16") /* ty=Tensor[(378), int16] */;
  %218 = cast(meta[relay.Constant][10] /* ty=Tensor[(378), int16] */, dtype="int16") /* ty=Tensor[(378), int16] */;
  %219 = cast(meta[relay.Constant][11] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %220 = reshape(%217, newshape=[6, 9, 7]) /* ty=Tensor[(6, 9, 7), int16] */;
  %221 = reshape(%218, newshape=[6, 9, 7]) /* ty=Tensor[(6, 9, 7), int16] */;
  %222 = reshape(%219, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %223 = @func_3035(%220, %221, %222) /* ty=(Tensor[(6, 9, 7), int16], Tensor[(4, 2, 6), float64], Tensor[(48), float64], Tensor[(6, 8, 15), float32], Tensor[(2, 360), float32], Tensor[(16, 9, 4), float64], Tensor[(576), float64]) */;
  %224 = equal(%210, %211) /* ty=Tensor[(6, 8, 15), bool] */;
  %225 = %216.4;
  %226 = %223.1;
  (%224, %225, %var_8332, %var_8333, %226, meta[relay.Constant][10] /* ty=Tensor[(378), int16] */, meta[relay.Constant][11] /* ty=Tensor[(48), float64] */)
}

def @func_10003() -> Tensor[(1, 9, 16), float32] {
  @func_10001() /* ty=Tensor[(1, 9, 16), float32] */
}

def @func_4388(%var_4387: Tensor[(9, 11, 13), int8]) -> (Tensor[(9, 11, 13), bool], Tensor[(9, 11, 13), int8]) {
  %237 = fn (%var_4365: Tensor[(9, 11, 13), int8]) -> (Tensor[(9, 11, 13), bool], Tensor[(9, 11, 13), int8]) {
    %227 = cast(meta[relay.Constant][13] /* ty=Tensor[(9, 11, 13), int8] */, dtype="bool") /* ty=Tensor[(9, 11, 13), bool] */;
    %228 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(9, 11, 13), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %229 = cast(meta[relay.Constant][12] /* ty=Tensor[(9, 11, 13), int8] */, dtype="bool") /* ty=Tensor[(9, 11, 13), bool] */;
    %230 = dyn.reshape(%227, %228, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %231 = cast(%var_4365, dtype="int8") /* ty=Tensor[(9, 11, 13), int8] */;
    %232 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(9, 11, 13), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %233 = cast(meta[relay.Constant][12] /* ty=Tensor[(9, 11, 13), int8] */, dtype="int8") /* ty=Tensor[(9, 11, 13), int8] */;
    %234 = dyn.reshape(%231, %232, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %235 = equal(%229, %230) /* ty=Tensor[(9, 11, 13), bool] */;
    %236 = minimum(%233, %234) /* ty=Tensor[(9, 11, 13), int8] */;
    (%235, %236)
  };
  %237(%var_4387) /* ty=(Tensor[(9, 11, 13), bool], Tensor[(9, 11, 13), int8]) */
}

def @func_11308() -> (Tensor[(1, 9, 16), float64],) {
  @func_11306() /* ty=(Tensor[(1, 9, 16), float64],) */
}

def @func_3039(%var_3036: Tensor[(6, 9, 7), int16], %var_3037: Tensor[(6, 9, 7), int16], %var_3038: Tensor[(48), float64]) -> (Tensor[(6, 9, 7), int16], Tensor[(4, 2, 6), float64], Tensor[(48), float64], Tensor[(6, 8, 15), float32], Tensor[(2, 360), float32], Tensor[(16, 9, 4), float64], Tensor[(576), float64]) {
  %258 = fn (%var_2989: Tensor[(6, 9, 7), int16], %var_2990: Tensor[(6, 9, 7), int16], %var_3014: Tensor[(48), float64]) -> (Tensor[(6, 9, 7), int16], Tensor[(4, 2, 6), float64], Tensor[(48), float64], Tensor[(6, 8, 15), float32], Tensor[(2, 360), float32], Tensor[(16, 9, 4), float64], Tensor[(576), float64]) {
    %238 = cast(%var_2990, dtype="bool") /* ty=Tensor[(6, 9, 7), bool] */;
    %239 = shape_of(%var_2989, dtype="int32") /* ty=Tensor[(3), int32] */;
    %240 = cast(%var_2989, dtype="bool") /* ty=Tensor[(6, 9, 7), bool] */;
    %241 = dyn.reshape(%238, %239, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %242 = equal(%240, %241) /* ty=Tensor[(6, 9, 7), bool] */;
    %243 = cast(%var_2989, dtype="int16") /* ty=Tensor[(6, 9, 7), int16] */;
    %244 = shape_of(%242, dtype="int32") /* ty=Tensor[(3), int32] */;
    %245 = cast(%242, dtype="int16") /* ty=Tensor[(6, 9, 7), int16] */;
    %246 = dyn.reshape(%243, %244, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %247 = cast(%var_3014, dtype="float64") /* ty=Tensor[(48), float64] */;
    %248 = reshape(%247, newshape=[4, 2, 6]) /* ty=Tensor[(4, 2, 6), float64] */;
    %249 = cast(meta[relay.Constant][14] /* ty=Tensor[(2, 360), float32] */, dtype="float32") /* ty=Tensor[(2, 360), float32] */;
    %250 = reshape(%249, newshape=[6, 8, 15]) /* ty=Tensor[(6, 8, 15), float32] */;
    %251 = cast(meta[relay.Constant][15] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
    %252 = reshape(%251, newshape=[16, 9, 4]) /* ty=Tensor[(16, 9, 4), float64] */;
    %253 = @func_363(%252) /* ty=(Tensor[(16, 9, 4), float64],) */;
    %254 = right_shift(%245, %246) /* ty=Tensor[(6, 9, 7), int16] */;
    %255 = @func_1823(%248) /* ty=Tensor[(4, 2, 6), float64] */;
    %256 = @func_2443(%250) /* ty=Tensor[(6, 8, 15), float32] */;
    %257 = %253.0;
    (%254, %255, %var_3014, %256, meta[relay.Constant][14] /* ty=Tensor[(2, 360), float32] */, %257, meta[relay.Constant][15] /* ty=Tensor[(576), float64] */)
  };
  %258(%var_3036, %var_3037, %var_3038) /* ty=(Tensor[(6, 9, 7), int16], Tensor[(4, 2, 6), float64], Tensor[(48), float64], Tensor[(6, 8, 15), float32], Tensor[(2, 360), float32], Tensor[(16, 9, 4), float64], Tensor[(576), float64]) */
}

def @func_5346(%var_5345: Tensor[(16, 13, 9), uint64]) -> (Tensor[(16, 13, 9), bool], Tensor[(16, 13, 9), float32]) {
  %269 = fn (%var_5329: Tensor[(16, 13, 9), uint64]) -> (Tensor[(16, 13, 9), bool], Tensor[(16, 13, 9), float32]) {
    %259 = cast(%var_5329, dtype="bool") /* ty=Tensor[(16, 13, 9), bool] */;
    %260 = shape_of(meta[relay.Constant][16] /* ty=Tensor[(16, 13, 9), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %261 = cast(meta[relay.Constant][16] /* ty=Tensor[(16, 13, 9), uint64] */, dtype="bool") /* ty=Tensor[(16, 13, 9), bool] */;
    %262 = dyn.reshape(%259, %260, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %263 = cast(meta[relay.Constant][16] /* ty=Tensor[(16, 13, 9), uint64] */, dtype="float32") /* ty=Tensor[(16, 13, 9), float32] */;
    %264 = shape_of(%var_5329, dtype="int32") /* ty=Tensor[(3), int32] */;
    %265 = cast(%var_5329, dtype="float32") /* ty=Tensor[(16, 13, 9), float32] */;
    %266 = dyn.reshape(%263, %264, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %267 = greater(%261, %262) /* ty=Tensor[(16, 13, 9), bool] */;
    %268 = floor_divide(%265, %266) /* ty=Tensor[(16, 13, 9), float32] */;
    (%267, %268)
  };
  %269(%var_5345) /* ty=(Tensor[(16, 13, 9), bool], Tensor[(16, 13, 9), float32]) */
}

def @func_363(%var_358: Tensor[(16, 9, 4), float64]) -> (Tensor[(16, 9, 4), float64],) {
  %270 = cast(%var_358, dtype="float64") /* ty=Tensor[(16, 9, 4), float64] */;
  %271 = tan(%270) /* ty=Tensor[(16, 9, 4), float64] */;
  (%271,)
}

def @func_9000(%var_8998: float32, %var_8999: Tensor[(350, 3), float32]) -> (Tensor[(1, 9, 16), float64], Tensor[(5, 15, 14), float32], float32, Tensor[(350, 3), float32]) {
  %279 = fn (%var_8993: float32, %var_8994: Tensor[(350, 3), float32]) -> (Tensor[(1, 9, 16), float64], Tensor[(5, 15, 14), float32], float32, Tensor[(350, 3), float32]) {
    %272 = cast(%var_8993, dtype="float32") /* ty=float32 */;
    %273 = cast(%var_8994, dtype="float32") /* ty=Tensor[(350, 3), float32] */;
    %274 = reshape(%272, newshape=[]) /* ty=float32 */;
    %275 = reshape(%273, newshape=[5, 15, 14]) /* ty=Tensor[(5, 15, 14), float32] */;
    %276 = @func_8417(%274, %275) /* ty=(Tensor[(5, 15, 14), float32],) */;
    %277 = @func_7787() /* ty=Tensor[(1, 9, 16), float64] */;
    %278 = %276.0;
    (%277, %278, %var_8993, %var_8994)
  };
  %279(%var_8998, %var_8999) /* ty=(Tensor[(1, 9, 16), float64], Tensor[(5, 15, 14), float32], float32, Tensor[(350, 3), float32]) */
}

def @func_3837(%var_3822: Tensor[(4, 4, 4), float32]) -> Tensor[(4, 4, 4), float32] {
  %280 = cast(%var_3822, dtype="float32") /* ty=Tensor[(4, 4, 4), float32] */;
  acosh(%280) /* ty=Tensor[(4, 4, 4), float32] */
}

def @func_5744() -> Tensor[(1, 9, 16), float64] {
  @func_5742() /* ty=Tensor[(1, 9, 16), float64] */
}

def @func_8949(%var_8948: int32) -> (Tensor[(10, 9, 16), bool], Tensor[(448), int32], int32, Tensor[(819), float64]) {
  %295 = fn (%var_8940: int32) -> (Tensor[(10, 9, 16), bool], Tensor[(448), int32], int32, Tensor[(819), float64]) {
    %281 = @func_8300() /* ty=Tensor[(10, 9, 16), float32] */;
    %282 = cast(%281, dtype="float32") /* ty=Tensor[(10, 9, 16), float32] */;
    %283 = acos(%282) /* ty=Tensor[(10, 9, 16), float32] */;
    %284 = cast(meta[relay.Constant][17] /* ty=Tensor[(10, 9, 16), float32] */, dtype="bool") /* ty=Tensor[(10, 9, 16), bool] */;
    %285 = shape_of(%283, dtype="int32") /* ty=Tensor[(3), int32] */;
    %286 = cast(%283, dtype="bool") /* ty=Tensor[(10, 9, 16), bool] */;
    %287 = dyn.reshape(%284, %285, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %288 = cast(%var_8940, dtype="int32") /* ty=int32 */;
    %289 = cast(meta[relay.Constant][18] /* ty=Tensor[(819), float64] */, dtype="float64") /* ty=Tensor[(819), float64] */;
    %290 = reshape(%288, newshape=[]) /* ty=int32 */;
    %291 = reshape(%289, newshape=[819]) /* ty=Tensor[(819), float64] */;
    %292 = @func_5954(%290, %291) /* ty=(Tensor[(1, 9, 16), float64], Tensor[(819), float64], int32, Tensor[(448), int32], Tensor[(819), float64], Tensor[(12, 48), float64]) */;
    %293 = logical_or(%286, %287) /* ty=Tensor[(10, 9, 16), bool] */;
    %294 = %292.3;
    (%293, %294, %var_8940, meta[relay.Constant][18] /* ty=Tensor[(819), float64] */)
  };
  %295(%var_8948) /* ty=(Tensor[(10, 9, 16), bool], Tensor[(448), int32], int32, Tensor[(819), float64]) */
}

def @func_7902(%var_7900: Tensor[(576), float64]) -> (Tensor[(1, 9, 16), float64], Tensor[(16, 9, 4), float64], Tensor[(576), float64]) {
  @func_7899(%var_7900) /* ty=(Tensor[(1, 9, 16), float64], Tensor[(16, 9, 4), float64], Tensor[(576), float64]) */
}

def @func_2465(%var_2464: Tensor[(576), float64]) -> (Tensor[(16, 5), float64], Tensor[(576), float64], Tensor[(819), float64], Tensor[(576), float64]) {
  %306 = fn (%var_2457: Tensor[(576), float64]) -> (Tensor[(16, 5), float64], Tensor[(576), float64], Tensor[(819), float64], Tensor[(576), float64]) {
    %296 = cast(meta[relay.Constant][19] /* ty=Tensor[(16, 5), float64] */, dtype="float64") /* ty=Tensor[(16, 5), float64] */;
    %297 = cast(meta[relay.Constant][20] /* ty=Tensor[(819), float64] */, dtype="float64") /* ty=Tensor[(819), float64] */;
    %298 = cast(meta[relay.Constant][20] /* ty=Tensor[(819), float64] */, dtype="float64") /* ty=Tensor[(819), float64] */;
    %299 = cast(%var_2457, dtype="float64") /* ty=Tensor[(576), float64] */;
    %300 = reshape(%297, newshape=[7, 13, 9]) /* ty=Tensor[(7, 13, 9), float64] */;
    %301 = reshape(%298, newshape=[7, 13, 9]) /* ty=Tensor[(7, 13, 9), float64] */;
    %302 = reshape(%299, newshape=[576]) /* ty=Tensor[(576), float64] */;
    %303 = @func_578(%300, %301, %302) /* ty=(Tensor[(16, 9, 4), float64], Tensor[(576), float64], Tensor[(16, 9, 4), float64], Tensor[(7, 13, 9), bool], Tensor[(16, 9, 4), float64], Tensor[(7, 13, 9), float32], Tensor[(16, 9, 4), float64]) */;
    %304 = atanh(%296) /* ty=Tensor[(16, 5), float64] */;
    %305 = %303.1;
    (%304, %305, meta[relay.Constant][20] /* ty=Tensor[(819), float64] */, %var_2457)
  };
  %306(%var_2464) /* ty=(Tensor[(16, 5), float64], Tensor[(576), float64], Tensor[(819), float64], Tensor[(576), float64]) */
}

def @func_9604() -> (Tensor[(1, 9, 16), float64],) {
  %309 = fn () -> (Tensor[(1, 9, 16), float64],) {
    %307 = @func_7602() /* ty=(Tensor[(1, 9, 16), float64],) */;
    %308 = %307.0;
    (%308,)
  };
  %309() /* ty=(Tensor[(1, 9, 16), float64],) */
}

def @func_11421(%var_11405: Tensor[(9, 5, 8), float64], %var_11406: Tensor[(9, 5, 8), float64]) -> (Tensor[(9, 5, 8), float64], Tensor[(9, 5, 8), float64]) {
  %310 = cast(%var_11406, dtype="float64") /* ty=Tensor[(9, 5, 8), float64] */;
  %311 = shape_of(%var_11405, dtype="int32") /* ty=Tensor[(3), int32] */;
  %312 = cast(%var_11405, dtype="float64") /* ty=Tensor[(9, 5, 8), float64] */;
  %313 = dyn.reshape(%310, %311, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %314 = cast(%var_11405, dtype="float64") /* ty=Tensor[(9, 5, 8), float64] */;
  %315 = power(%312, %313) /* ty=Tensor[(9, 5, 8), float64] */;
  %316 = sin(%314) /* ty=Tensor[(9, 5, 8), float64] */;
  (%315, %316)
}

def @func_11762(%var_11756: Tensor[(660), bool], %var_11757: Tensor[(378), int16], %var_11758: Tensor[(576), float64], %var_11759: int32, %var_11760: Tensor[(36), float32], %var_11761: Tensor[(660, 2), int8]) -> (Tensor[(1, 9, 16), float64], Tensor[(?, 9, 16), float32], Tensor[(660), bool], Tensor[(378), int16], Tensor[(16, 5), float64], Tensor[(1, 72), uint32], Tensor[(576), float64], int32, Tensor[(36), float32], Tensor[(660, 2), int8]) {
  %341 = fn (%var_11708: Tensor[(660), bool], %var_11709: Tensor[(378), int16], %var_11749: Tensor[(576), float64], %var_11750: int32, %var_11751: Tensor[(36), float32], %var_11752: Tensor[(660, 2), int8]) -> (Tensor[(1, 9, 16), float64], Tensor[(?, 9, 16), float32], Tensor[(660), bool], Tensor[(378), int16], Tensor[(16, 5), float64], Tensor[(1, 72), uint32], Tensor[(576), float64], int32, Tensor[(36), float32], Tensor[(660, 2), int8]) {
    %317 = @func_8251() /* ty=(Tensor[(1, 9, 16), float64],) */;
    %318 = cast(%var_11708, dtype="bool") /* ty=Tensor[(660), bool] */;
    %319 = cast(%var_11708, dtype="bool") /* ty=Tensor[(660), bool] */;
    %320 = cast(%var_11709, dtype="int16") /* ty=Tensor[(378), int16] */;
    %321 = reshape(%318, newshape=[15, 4, 11]) /* ty=Tensor[(15, 4, 11), bool] */;
    %322 = reshape(%319, newshape=[15, 4, 11]) /* ty=Tensor[(15, 4, 11), bool] */;
    %323 = reshape(%320, newshape=[126, 3]) /* ty=Tensor[(126, 3), int16] */;
    %324 = @func_7115(%321, %322, %323) /* ty=(Tensor[(15, 4, 11), bool], Tensor[(48), float64], Tensor[(126, 3), int16], Tensor[(24, 2), float64], Tensor[(?, 9, 16), float32]) */;
    %325 = cast(meta[relay.Constant][21] /* ty=Tensor[(1, 72), uint32] */, dtype="uint32") /* ty=Tensor[(1, 72), uint32] */;
    %326 = cast(meta[relay.Constant][21] /* ty=Tensor[(1, 72), uint32] */, dtype="uint32") /* ty=Tensor[(1, 72), uint32] */;
    %327 = cast(%var_11749, dtype="float64") /* ty=Tensor[(576), float64] */;
    %328 = cast(%var_11750, dtype="int32") /* ty=int32 */;
    %329 = cast(%var_11751, dtype="float32") /* ty=Tensor[(36), float32] */;
    %330 = cast(%var_11752, dtype="int8") /* ty=Tensor[(660, 2), int8] */;
    %331 = reshape(%325, newshape=[3, 4, 6]) /* ty=Tensor[(3, 4, 6), uint32] */;
    %332 = reshape(%326, newshape=[3, 4, 6]) /* ty=Tensor[(3, 4, 6), uint32] */;
    %333 = reshape(%327, newshape=[288, 2]) /* ty=Tensor[(288, 2), float64] */;
    %334 = reshape(%328, newshape=[]) /* ty=int32 */;
    %335 = reshape(%329, newshape=[9, 4]) /* ty=Tensor[(9, 4), float32] */;
    %336 = reshape(%330, newshape=[1320]) /* ty=Tensor[(1320), int8] */;
    %337 = @func_3162(%331, %332, %333, %334, %335, %336) /* ty=(Tensor[(3, 4, 6), uint32], Tensor[(7, 13, 9), bool], Tensor[(819), float64], Tensor[(576), float64], Tensor[(8, 4, 14), float64], int32, Tensor[(448), int32], Tensor[(660, 2), int8], Tensor[(9, 4), float32], Tensor[(1320), int8], Tensor[(16, 5), float64], Tensor[(288, 2), float64], Tensor[(16, 5), float64], Tensor[(16, 9, 4), float64]) */;
    %338 = %317.0;
    %339 = %324.4;
    %340 = %337.10;
    (%338, %339, %var_11708, %var_11709, %340, meta[relay.Constant][21] /* ty=Tensor[(1, 72), uint32] */, %var_11749, %var_11750, %var_11751, %var_11752)
  };
  %341(%var_11756, %var_11757, %var_11758, %var_11759, %var_11760, %var_11761) /* ty=(Tensor[(1, 9, 16), float64], Tensor[(?, 9, 16), float32], Tensor[(660), bool], Tensor[(378), int16], Tensor[(16, 5), float64], Tensor[(1, 72), uint32], Tensor[(576), float64], int32, Tensor[(36), float32], Tensor[(660, 2), int8]) */
}

def @func_2121(%var_2119: Tensor[(8, 11, 12), uint16], %var_2120: Tensor[(8, 11, 12), uint16]) -> (Tensor[(8, 11, 12), uint16], Tensor[(8, 11, 12), float32]) {
  %349 = fn (%var_2096: Tensor[(8, 11, 12), uint16], %var_2097: Tensor[(8, 11, 12), uint16]) -> (Tensor[(8, 11, 12), uint16], Tensor[(8, 11, 12), float32]) {
    %342 = cast(%var_2097, dtype="uint16") /* ty=Tensor[(8, 11, 12), uint16] */;
    %343 = shape_of(%var_2096, dtype="int32") /* ty=Tensor[(3), int32] */;
    %344 = cast(%var_2096, dtype="uint16") /* ty=Tensor[(8, 11, 12), uint16] */;
    %345 = dyn.reshape(%342, %343, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %346 = cast(%var_2097, dtype="float32") /* ty=Tensor[(8, 11, 12), float32] */;
    %347 = left_shift(%344, %345) /* ty=Tensor[(8, 11, 12), uint16] */;
    %348 = erf(%346) /* ty=Tensor[(8, 11, 12), float32] */;
    (%347, %348)
  };
  %349(%var_2119, %var_2120) /* ty=(Tensor[(8, 11, 12), uint16], Tensor[(8, 11, 12), float32]) */
}

def @func_2056(%var_2024: Tensor[(14, 3), float32], %var_2041: Tensor[(1320), int8]) -> (Tensor[(14, 3), float32], Tensor[(16, 9, 4), float64], Tensor[(182, 1), uint64], Tensor[(11, 8, 15), int8], Tensor[(1320), int8], Tensor[(16, 9, 4), float64]) {
  %350 = cast(%var_2024, dtype="float32") /* ty=Tensor[(14, 3), float32] */;
  %351 = cast(meta[relay.Constant][22] /* ty=Tensor[(182, 1), uint64] */, dtype="uint64") /* ty=Tensor[(182, 1), uint64] */;
  %352 = reshape(%351, newshape=[13, 2, 7]) /* ty=Tensor[(13, 2, 7), uint64] */;
  %353 = @func_983(%352) /* ty=(Tensor[(13, 2, 7), uint64], Tensor[(16, 9, 4), float64], Tensor[(1, 819), float64], Tensor[(576), float64], Tensor[(16, 9, 4), float64], Tensor[(16, 9, 4), float64]) */;
  %354 = cast(%var_2041, dtype="int8") /* ty=Tensor[(1320), int8] */;
  %355 = reshape(%354, newshape=[11, 8, 15]) /* ty=Tensor[(11, 8, 15), int8] */;
  %356 = cast(meta[relay.Constant][22] /* ty=Tensor[(182, 1), uint64] */, dtype="uint64") /* ty=Tensor[(182, 1), uint64] */;
  %357 = reshape(%356, newshape=[13, 2, 7]) /* ty=Tensor[(13, 2, 7), uint64] */;
  %358 = @func_983(%357) /* ty=(Tensor[(13, 2, 7), uint64], Tensor[(16, 9, 4), float64], Tensor[(1, 819), float64], Tensor[(576), float64], Tensor[(16, 9, 4), float64], Tensor[(16, 9, 4), float64]) */;
  %359 = sigmoid(%350) /* ty=Tensor[(14, 3), float32] */;
  %360 = %353.4;
  %361 = @func_1421(%355) /* ty=Tensor[(11, 8, 15), int8] */;
  %362 = %358.1;
  (%359, %360, meta[relay.Constant][22] /* ty=Tensor[(182, 1), uint64] */, %361, %var_2041, %362)
}

def @func_2060(%var_2058: Tensor[(14, 3), float32], %var_2059: Tensor[(1320), int8]) -> (Tensor[(14, 3), float32], Tensor[(16, 9, 4), float64], Tensor[(182, 1), uint64], Tensor[(11, 8, 15), int8], Tensor[(1320), int8], Tensor[(16, 9, 4), float64]) {
  @func_2056(%var_2058, %var_2059) /* ty=(Tensor[(14, 3), float32], Tensor[(16, 9, 4), float64], Tensor[(182, 1), uint64], Tensor[(11, 8, 15), int8], Tensor[(1320), int8], Tensor[(16, 9, 4), float64]) */
}

def @func_9668() -> (Tensor[(1, 9, 16), float64],) {
  %364 = fn () -> (Tensor[(1, 9, 16), float64],) {
    %363 = @func_5555() /* ty=Tensor[(1, 9, 16), float64] */;
    (%363,)
  };
  %364() /* ty=(Tensor[(1, 9, 16), float64],) */
}

def @func_7540() -> (Tensor[(1, 9, 16), float64],) {
  %366 = fn () -> (Tensor[(1, 9, 16), float64],) {
    %365 = @func_6186() /* ty=Tensor[(1, 9, 16), float64] */;
    (%365,)
  };
  %366() /* ty=(Tensor[(1, 9, 16), float64],) */
}

def @func_8398(%var_8396: Tensor[(3, 3, 13), float64]) -> (Tensor[(3, 3, 13), float64], Tensor[(4, 2, 6), float64], Tensor[(48), float64]) {
  @func_8395(%var_8396) /* ty=(Tensor[(3, 3, 13), float64], Tensor[(4, 2, 6), float64], Tensor[(48), float64]) */
}

def @func_985(%var_984: Tensor[(13, 2, 7), uint64]) -> (Tensor[(13, 2, 7), uint64], Tensor[(16, 9, 4), float64], Tensor[(1, 819), float64], Tensor[(576), float64], Tensor[(16, 9, 4), float64], Tensor[(16, 9, 4), float64]) {
  %386 = fn (%var_952: Tensor[(13, 2, 7), uint64]) -> (Tensor[(13, 2, 7), uint64], Tensor[(16, 9, 4), float64], Tensor[(1, 819), float64], Tensor[(576), float64], Tensor[(16, 9, 4), float64], Tensor[(16, 9, 4), float64]) {
    %367 = cast(meta[relay.Constant][23] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %368 = cast(%var_952, dtype="uint64") /* ty=Tensor[(13, 2, 7), uint64] */;
    %369 = cast(meta[relay.Constant][24] /* ty=Tensor[(1, 819), float64] */, dtype="float64") /* ty=Tensor[(1, 819), float64] */;
    %370 = cast(meta[relay.Constant][24] /* ty=Tensor[(1, 819), float64] */, dtype="float64") /* ty=Tensor[(1, 819), float64] */;
    %371 = cast(meta[relay.Constant][25] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
    %372 = reshape(%369, newshape=[7, 13, 9]) /* ty=Tensor[(7, 13, 9), float64] */;
    %373 = reshape(%370, newshape=[7, 13, 9]) /* ty=Tensor[(7, 13, 9), float64] */;
    %374 = reshape(%371, newshape=[576]) /* ty=Tensor[(576), float64] */;
    %375 = @func_578(%372, %373, %374) /* ty=(Tensor[(16, 9, 4), float64], Tensor[(576), float64], Tensor[(16, 9, 4), float64], Tensor[(7, 13, 9), bool], Tensor[(16, 9, 4), float64], Tensor[(7, 13, 9), float32], Tensor[(16, 9, 4), float64]) */;
    %376 = %375.0;
    %377 = cast(%376, dtype="float64") /* ty=Tensor[(16, 9, 4), float64] */;
    %378 = reshape(%377, newshape=[16, 9, 4]) /* ty=Tensor[(16, 9, 4), float64] */;
    %379 = @func_363(%378) /* ty=(Tensor[(16, 9, 4), float64],) */;
    %380 = cast(meta[relay.Constant][25] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
    %381 = reshape(%380, newshape=[16, 9, 4]) /* ty=Tensor[(16, 9, 4), float64] */;
    %382 = @func_363(%381) /* ty=(Tensor[(16, 9, 4), float64],) */;
    %383 = left_shift(%367, %368) /* ty=Tensor[(13, 2, 7), uint64] */;
    %384 = %379.0;
    %385 = %382.0;
    (%383, %376, meta[relay.Constant][24] /* ty=Tensor[(1, 819), float64] */, meta[relay.Constant][25] /* ty=Tensor[(576), float64] */, %384, %385)
  };
  %386(%var_984) /* ty=(Tensor[(13, 2, 7), uint64], Tensor[(16, 9, 4), float64], Tensor[(1, 819), float64], Tensor[(576), float64], Tensor[(16, 9, 4), float64], Tensor[(16, 9, 4), float64]) */
}

def @func_8789() -> (Tensor[(1, 9, 16), float64], Tensor[(1, 9, 16), float64]) {
  @func_8787() /* ty=(Tensor[(1, 9, 16), float64], Tensor[(1, 9, 16), float64]) */
}

def @func_6755() -> (Tensor[(?, 9, 16), float32],) {
  %387 = @func_6674() /* ty=(Tensor[(1, 9, 16), float64],) */;
  %388 = %387.0;
  %389 = @func_6674() /* ty=(Tensor[(1, 9, 16), float64],) */;
  %390 = %389.0;
  %391 = cast(%390, dtype="float32") /* ty=Tensor[(1, 9, 16), float32] */;
  %392 = shape_of(%388, dtype="int32") /* ty=Tensor[(3), int32] */;
  %393 = cast(%388, dtype="float32") /* ty=Tensor[(1, 9, 16), float32] */;
  %394 = dyn.reshape(%391, %392, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %395 = floor_mod(%393, %394) /* ty=Tensor[(?, 9, 16), float32] */;
  (%395,)
}

def @func_7773(%var_7771: Tensor[(7, 15, 1), float32]) -> Tensor[(7, 15, 1), float32] {
  @func_7770(%var_7771) /* ty=Tensor[(7, 15, 1), float32] */
}

def @func_7471() -> (Tensor[(1, 9, 16), float64],) {
  %396 = @func_5631() /* ty=Tensor[(1, 9, 16), float64] */;
  (%396,)
}

def @func_9309() -> (Tensor[(1, 9, 16), float64],) {
  @func_9307() /* ty=(Tensor[(1, 9, 16), float64],) */
}

def @func_7430(%var_7427: Tensor[(3, 11, 13), int16], %var_7428: Tensor[(3, 11, 13), int16], %var_7429: uint8) -> (Tensor[(3, 11, 13), float32], Tensor[(1, 9, 16), float64], uint8, uint8) {
  %412 = fn (%var_7384: Tensor[(3, 11, 13), int16], %var_7385: Tensor[(3, 11, 13), int16], %var_7414: uint8) -> (Tensor[(3, 11, 13), float32], Tensor[(1, 9, 16), float64], uint8, uint8) {
    %397 = cast(%var_7385, dtype="int16") /* ty=Tensor[(3, 11, 13), int16] */;
    %398 = shape_of(%var_7384, dtype="int32") /* ty=Tensor[(3), int32] */;
    %399 = cast(%var_7384, dtype="int16") /* ty=Tensor[(3, 11, 13), int16] */;
    %400 = dyn.reshape(%397, %398, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %401 = left_shift(%399, %400) /* ty=Tensor[(3, 11, 13), int16] */;
    %402 = cast(%401, dtype="float32") /* ty=Tensor[(3, 11, 13), float32] */;
    %403 = shape_of(%var_7385, dtype="int32") /* ty=Tensor[(3), int32] */;
    %404 = cast(%var_7385, dtype="float32") /* ty=Tensor[(3, 11, 13), float32] */;
    %405 = dyn.reshape(%402, %403, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %406 = cast(%var_7414, dtype="uint8") /* ty=uint8 */;
    %407 = reshape(%406, newshape=[]) /* ty=uint8 */;
    %408 = @func_5680(%407) /* ty=(Tensor[(1, 9, 16), float64], Tensor[(11, 5, 3), float32], uint8, Tensor[(165), uint8], Tensor[(1, 9, 16), float64]) */;
    %409 = floor_divide(%404, %405) /* ty=Tensor[(3, 11, 13), float32] */;
    %410 = @func_6203() /* ty=Tensor[(1, 9, 16), float64] */;
    %411 = %408.2;
    (%409, %410, %411, %var_7414)
  };
  %412(%var_7427, %var_7428, %var_7429) /* ty=(Tensor[(3, 11, 13), float32], Tensor[(1, 9, 16), float64], uint8, uint8) */
}

def @func_7119(%var_7116: Tensor[(15, 4, 11), bool], %var_7117: Tensor[(15, 4, 11), bool], %var_7118: Tensor[(126, 3), int16]) -> (Tensor[(15, 4, 11), bool], Tensor[(48), float64], Tensor[(126, 3), int16], Tensor[(24, 2), float64], Tensor[(?, 9, 16), float32]) {
  %428 = fn (%var_7101: Tensor[(15, 4, 11), bool], %var_7102: Tensor[(15, 4, 11), bool], %var_7110: Tensor[(126, 3), int16]) -> (Tensor[(15, 4, 11), bool], Tensor[(48), float64], Tensor[(126, 3), int16], Tensor[(24, 2), float64], Tensor[(?, 9, 16), float32]) {
    %413 = cast(%var_7102, dtype="bool") /* ty=Tensor[(15, 4, 11), bool] */;
    %414 = shape_of(%var_7101, dtype="int32") /* ty=Tensor[(3), int32] */;
    %415 = cast(%var_7101, dtype="bool") /* ty=Tensor[(15, 4, 11), bool] */;
    %416 = dyn.reshape(%413, %414, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %417 = cast(%var_7110, dtype="int16") /* ty=Tensor[(126, 3), int16] */;
    %418 = cast(%var_7110, dtype="int16") /* ty=Tensor[(126, 3), int16] */;
    %419 = cast(meta[relay.Constant][26] /* ty=Tensor[(24, 2), float64] */, dtype="float64") /* ty=Tensor[(24, 2), float64] */;
    %420 = reshape(%417, newshape=[6, 9, 7]) /* ty=Tensor[(6, 9, 7), int16] */;
    %421 = reshape(%418, newshape=[6, 9, 7]) /* ty=Tensor[(6, 9, 7), int16] */;
    %422 = reshape(%419, newshape=[48]) /* ty=Tensor[(48), float64] */;
    %423 = @func_3035(%420, %421, %422) /* ty=(Tensor[(6, 9, 7), int16], Tensor[(4, 2, 6), float64], Tensor[(48), float64], Tensor[(6, 8, 15), float32], Tensor[(2, 360), float32], Tensor[(16, 9, 4), float64], Tensor[(576), float64]) */;
    %424 = @func_6755() /* ty=(Tensor[(?, 9, 16), float32],) */;
    %425 = logical_and(%415, %416) /* ty=Tensor[(15, 4, 11), bool] */;
    %426 = %423.2;
    %427 = %424.0;
    (%425, %426, %var_7110, meta[relay.Constant][26] /* ty=Tensor[(24, 2), float64] */, %427)
  };
  %428(%var_7116, %var_7117, %var_7118) /* ty=(Tensor[(15, 4, 11), bool], Tensor[(48), float64], Tensor[(126, 3), int16], Tensor[(24, 2), float64], Tensor[(?, 9, 16), float32]) */
}

def @func_5682(%var_5681: uint8) -> (Tensor[(1, 9, 16), float64], Tensor[(11, 5, 3), float32], uint8, Tensor[(165), uint8], Tensor[(1, 9, 16), float64]) {
  %437 = fn (%var_5664: uint8) -> (Tensor[(1, 9, 16), float64], Tensor[(11, 5, 3), float32], uint8, Tensor[(165), uint8], Tensor[(1, 9, 16), float64]) {
    %429 = cast(%var_5664, dtype="uint8") /* ty=uint8 */;
    %430 = cast(meta[relay.Constant][27] /* ty=Tensor[(165), uint8] */, dtype="uint8") /* ty=Tensor[(165), uint8] */;
    %431 = reshape(%429, newshape=[]) /* ty=uint8 */;
    %432 = reshape(%430, newshape=[11, 5, 3]) /* ty=Tensor[(11, 5, 3), uint8] */;
    %433 = @func_3470(%431, %432) /* ty=(Tensor[(11, 5, 3), uint8], Tensor[(11, 5, 3), float32]) */;
    %434 = @func_5555() /* ty=Tensor[(1, 9, 16), float64] */;
    %435 = %433.1;
    %436 = @func_5555() /* ty=Tensor[(1, 9, 16), float64] */;
    (%434, %435, %var_5664, meta[relay.Constant][27] /* ty=Tensor[(165), uint8] */, %436)
  };
  %437(%var_5681) /* ty=(Tensor[(1, 9, 16), float64], Tensor[(11, 5, 3), float32], uint8, Tensor[(165), uint8], Tensor[(1, 9, 16), float64]) */
}

def @func_8581(%var_8579: Tensor[(11, 9, 16), float64]) -> (Tensor[(?, 9, 16), uint64], Tensor[(11, 9, 16), int16], Tensor[(1, 9, 16), float64], Tensor[(11, 8, 15), int8], Tensor[(1320), int8]) {
  @func_8578(%var_8579) /* ty=(Tensor[(?, 9, 16), uint64], Tensor[(11, 9, 16), int16], Tensor[(1, 9, 16), float64], Tensor[(11, 8, 15), int8], Tensor[(1320), int8]) */
}

def @func_7278(%var_7273: uint8, %var_7274: Tensor[(165), uint8], %var_7275: Tensor[(72), uint32], %var_7276: Tensor[(576), float64], %var_7277: Tensor[(36), float32]) -> (Tensor[(1, 9, 16), float64], uint8, Tensor[(165), uint8], Tensor[(11, 5, 3), float32], int32, Tensor[(72), uint32], Tensor[(576), float64], Tensor[(36), float32], Tensor[(1320), int8]) {
  @func_7271(%var_7273, %var_7274, %var_7275, %var_7276, %var_7277) /* ty=(Tensor[(1, 9, 16), float64], uint8, Tensor[(165), uint8], Tensor[(11, 5, 3), float32], int32, Tensor[(72), uint32], Tensor[(576), float64], Tensor[(36), float32], Tensor[(1320), int8]) */
}

def @func_6187() -> Tensor[(1, 9, 16), float64] {
  %438 = fn () -> Tensor[(1, 9, 16), float64] {
    @func_5742() /* ty=Tensor[(1, 9, 16), float64] */
  };
  %438() /* ty=Tensor[(1, 9, 16), float64] */
}

def @func_9265(%var_9264: Tensor[(11, 8, 6), float32]) -> (Tensor[(11, 8, 6), float32], Tensor[(1, 9, 16), float64]) {
  %443 = fn (%var_9255: Tensor[(11, 8, 6), float32]) -> (Tensor[(11, 8, 6), float32], Tensor[(1, 9, 16), float64]) {
    %439 = cast(%var_9255, dtype="float32") /* ty=Tensor[(11, 8, 6), float32] */;
    %440 = @func_6674() /* ty=(Tensor[(1, 9, 16), float64],) */;
    %441 = log2(%439) /* ty=Tensor[(11, 8, 6), float32] */;
    %442 = %440.0;
    (%441, %442)
  };
  %443(%var_9264) /* ty=(Tensor[(11, 8, 6), float32], Tensor[(1, 9, 16), float64]) */
}

def @func_8395(%var_8363: Tensor[(3, 3, 13), float64]) -> (Tensor[(3, 3, 13), float64], Tensor[(4, 2, 6), float64], Tensor[(48), float64]) {
  %444 = cast(1.94046f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %445 = cast(%var_8363, dtype="float64") /* ty=Tensor[(3, 3, 13), float64] */;
  %446 = cast(meta[relay.Constant][28] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %447 = reshape(%446, newshape=[4, 2, 6]) /* ty=Tensor[(4, 2, 6), float64] */;
  %448 = power(%444, %445) /* ty=Tensor[(3, 3, 13), float64] */;
  %449 = @func_1823(%447) /* ty=Tensor[(4, 2, 6), float64] */;
  (%448, %449, meta[relay.Constant][28] /* ty=Tensor[(48), float64] */)
}

def @func_6205() -> Tensor[(1, 9, 16), float64] {
  @func_6203() /* ty=Tensor[(1, 9, 16), float64] */
}

def @func_11148() -> (Tensor[(10, 9, 16), float32],) {
  %450 = @func_8286() /* ty=(Tensor[(10, 9, 16), float32],) */;
  %451 = %450.0;
  (%451,)
}

def @func_10478() -> (Tensor[(1, 9, 16), float64],) {
  @func_10476() /* ty=(Tensor[(1, 9, 16), float64],) */
}

def @func_10885(%var_10884: Tensor[(14, 9, 16), float64]) -> (Tensor[(14, 9, 16), float64],) {
  %457 = fn (%var_10870: Tensor[(14, 9, 16), float64]) -> (Tensor[(14, 9, 16), float64],) {
    %452 = @func_6878() /* ty=(Tensor[(1, 9, 16), float64],) */;
    %453 = %452.0;
    %454 = cast(%453, dtype="float64") /* ty=Tensor[(1, 9, 16), float64] */;
    %455 = cast(%var_10870, dtype="float64") /* ty=Tensor[(14, 9, 16), float64] */;
    %456 = maximum(%454, %455) /* ty=Tensor[(14, 9, 16), float64] */;
    (%456,)
  };
  %457(%var_10884) /* ty=(Tensor[(14, 9, 16), float64],) */
}

def @func_6532(%var_6530: Tensor[(64), float32], %var_6531: Tensor[(8, 9, 16), int32]) -> (Tensor[(4, 4, 4), float32], Tensor[(64), float32], Tensor[(182), uint64], Tensor[(210), float32], Tensor[(8, 9, 16), bool]) {
  %470 = fn (%var_6472: Tensor[(64), float32], %var_6504: Tensor[(8, 9, 16), int32]) -> (Tensor[(4, 4, 4), float32], Tensor[(64), float32], Tensor[(182), uint64], Tensor[(210), float32], Tensor[(8, 9, 16), bool]) {
    %458 = cast(%var_6472, dtype="float32") /* ty=Tensor[(64), float32] */;
    %459 = reshape(%458, newshape=[4, 4, 4]) /* ty=Tensor[(4, 4, 4), float32] */;
    %460 = cast(meta[relay.Constant][29] /* ty=Tensor[(210), float32] */, dtype="float32") /* ty=Tensor[(210), float32] */;
    %461 = reshape(%460, newshape=[210]) /* ty=Tensor[(210), float32] */;
    %462 = @func_5911(%461) /* ty=(Tensor[(1, 9, 16), float64], Tensor[(1, 9, 16), float64], Tensor[(3, 15, 13), bool], Tensor[(585), float32], Tensor[(1, 9, 16), float64], Tensor[(182), uint64], Tensor[(210), float32]) */;
    %463 = @func_6257() /* ty=(Tensor[(?, 9, 16), int32], Tensor[(6, 8, 15), float32], Tensor[(720), float32]) */;
    %464 = %463.0;
    %465 = cast(%464, dtype="bool") /* ty=Tensor[(?, 9, 16), bool] */;
    %466 = cast(%var_6504, dtype="bool") /* ty=Tensor[(8, 9, 16), bool] */;
    %467 = @func_3837(%459) /* ty=Tensor[(4, 4, 4), float32] */;
    %468 = %462.5;
    %469 = less_equal(%465, %466) /* ty=Tensor[(8, 9, 16), bool] */;
    (%467, %var_6472, %468, meta[relay.Constant][29] /* ty=Tensor[(210), float32] */, %469)
  };
  %470(%var_6530, %var_6531) /* ty=(Tensor[(4, 4, 4), float32], Tensor[(64), float32], Tensor[(182), uint64], Tensor[(210), float32], Tensor[(8, 9, 16), bool]) */
}

def @func_8875(%var_8854: uint8, %var_8855: Tensor[(165), uint8], %var_8858: Tensor[(36), float32]) -> (Tensor[(1, 9, 16), float64], Tensor[(1, 9, 16), float64], uint8, Tensor[(165), uint8], Tensor[(72), uint32], Tensor[(36, 16), float64], Tensor[(36), float32]) {
  %471 = @func_6674() /* ty=(Tensor[(1, 9, 16), float64],) */;
  %472 = cast(%var_8854, dtype="uint8") /* ty=uint8 */;
  %473 = cast(%var_8855, dtype="uint8") /* ty=Tensor[(165), uint8] */;
  %474 = cast(meta[relay.Constant][30] /* ty=Tensor[(72), uint32] */, dtype="uint32") /* ty=Tensor[(72), uint32] */;
  %475 = cast(meta[relay.Constant][31] /* ty=Tensor[(36, 16), float64] */, dtype="float64") /* ty=Tensor[(36, 16), float64] */;
  %476 = cast(%var_8858, dtype="float32") /* ty=Tensor[(36), float32] */;
  %477 = reshape(%472, newshape=[]) /* ty=uint8 */;
  %478 = reshape(%473, newshape=[165]) /* ty=Tensor[(165), uint8] */;
  %479 = reshape(%474, newshape=[72]) /* ty=Tensor[(72), uint32] */;
  %480 = reshape(%475, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %481 = reshape(%476, newshape=[36]) /* ty=Tensor[(36), float32] */;
  %482 = @func_7271(%477, %478, %479, %480, %481) /* ty=(Tensor[(1, 9, 16), float64], uint8, Tensor[(165), uint8], Tensor[(11, 5, 3), float32], int32, Tensor[(72), uint32], Tensor[(576), float64], Tensor[(36), float32], Tensor[(1320), int8]) */;
  %483 = %471.0;
  %484 = %482.0;
  (%483, %484, %var_8854, %var_8855, meta[relay.Constant][30] /* ty=Tensor[(72), uint32] */, meta[relay.Constant][31] /* ty=Tensor[(36, 16), float64] */, %var_8858)
}

def @func_11233(%var_11232: Tensor[(48), float64]) -> (Tensor[(10, 9, 16), float32], Tensor[(6, 9, 7), int16], Tensor[(378, 1), int16], Tensor[(48), float64]) {
  %494 = fn (%var_11208: Tensor[(48), float64]) -> (Tensor[(10, 9, 16), float32], Tensor[(6, 9, 7), int16], Tensor[(378, 1), int16], Tensor[(48), float64]) {
    %485 = cast(meta[relay.Constant][32] /* ty=Tensor[(378, 1), int16] */, dtype="int16") /* ty=Tensor[(378, 1), int16] */;
    %486 = cast(meta[relay.Constant][32] /* ty=Tensor[(378, 1), int16] */, dtype="int16") /* ty=Tensor[(378, 1), int16] */;
    %487 = cast(%var_11208, dtype="float64") /* ty=Tensor[(48), float64] */;
    %488 = reshape(%485, newshape=[6, 9, 7]) /* ty=Tensor[(6, 9, 7), int16] */;
    %489 = reshape(%486, newshape=[6, 9, 7]) /* ty=Tensor[(6, 9, 7), int16] */;
    %490 = reshape(%487, newshape=[48]) /* ty=Tensor[(48), float64] */;
    %491 = @func_3035(%488, %489, %490) /* ty=(Tensor[(6, 9, 7), int16], Tensor[(4, 2, 6), float64], Tensor[(48), float64], Tensor[(6, 8, 15), float32], Tensor[(2, 360), float32], Tensor[(16, 9, 4), float64], Tensor[(576), float64]) */;
    %492 = @func_8300() /* ty=Tensor[(10, 9, 16), float32] */;
    %493 = %491.0;
    (%492, %493, meta[relay.Constant][32] /* ty=Tensor[(378, 1), int16] */, %var_11208)
  };
  %494(%var_11232) /* ty=(Tensor[(10, 9, 16), float32], Tensor[(6, 9, 7), int16], Tensor[(378, 1), int16], Tensor[(48), float64]) */
}

def @func_5556() -> Tensor[(1, 9, 16), float64] {
  %498 = fn () -> Tensor[(1, 9, 16), float64] {
    %495 = cast(meta[relay.Constant][33] /* ty=Tensor[(1, 9, 16), float64] */, dtype="float64") /* ty=Tensor[(1, 9, 16), float64] */;
    %496 = sinh(%495) /* ty=Tensor[(1, 9, 16), float64] */;
    %497 = cast(%496, dtype="float64") /* ty=Tensor[(1, 9, 16), float64] */;
    cosh(%497) /* ty=Tensor[(1, 9, 16), float64] */
  };
  %498() /* ty=Tensor[(1, 9, 16), float64] */
}

def @func_6203() -> Tensor[(1, 9, 16), float64] {
  @func_5742() /* ty=Tensor[(1, 9, 16), float64] */
}

def @func_1168(%var_1164: int32, %var_1165: Tensor[(8, 4, 14), int32], %var_1166: Tensor[(819), float64], %var_1167: Tensor[(576), float64]) -> (Tensor[(8, 4, 14), bool], Tensor[(8, 4, 14), float64], Tensor[(819), float64], Tensor[(7, 13, 9), bool], Tensor[(576), uint32], Tensor[(16, 9, 4), float32]) {
  @func_1162(%var_1164, %var_1165, %var_1166, %var_1167) /* ty=(Tensor[(8, 4, 14), bool], Tensor[(8, 4, 14), float64], Tensor[(819), float64], Tensor[(7, 13, 9), bool], Tensor[(576), uint32], Tensor[(16, 9, 4), float32]) */
}

def @func_11481(%var_11479: uint32, %var_11480: Tensor[(5, 1, 16), uint32]) -> (Tensor[(5, 1, 16), uint16], Tensor[(5, 1, 16), int64], Tensor[(1, 9, 16), float64]) {
  @func_11477(%var_11479, %var_11480) /* ty=(Tensor[(5, 1, 16), uint16], Tensor[(5, 1, 16), int64], Tensor[(1, 9, 16), float64]) */
}

def @func_6259() -> (Tensor[(?, 9, 16), int32], Tensor[(6, 8, 15), float32], Tensor[(720), float32]) {
  @func_6257() /* ty=(Tensor[(?, 9, 16), int32], Tensor[(6, 8, 15), float32], Tensor[(720), float32]) */
}

def @func_6641(%var_6639: Tensor[(448), int32], %var_6640: Tensor[(819), float64]) -> (Tensor[(1, 9, 16), float64], Tensor[(819), float64], int32, Tensor[(448), int32], Tensor[(819), float64], Tensor[(576), float64]) {
  %510 = fn (%var_6634: Tensor[(448), int32], %var_6635: Tensor[(819), float64]) -> (Tensor[(1, 9, 16), float64], Tensor[(819), float64], int32, Tensor[(448), int32], Tensor[(819), float64], Tensor[(576), float64]) {
    %499 = cast(-5 /* ty=int32 */, dtype="int32") /* ty=int32 */;
    %500 = cast(%var_6634, dtype="int32") /* ty=Tensor[(448), int32] */;
    %501 = cast(%var_6635, dtype="float64") /* ty=Tensor[(819), float64] */;
    %502 = cast(meta[relay.Constant][34] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
    %503 = reshape(%499, newshape=[]) /* ty=int32 */;
    %504 = reshape(%500, newshape=[8, 4, 14]) /* ty=Tensor[(8, 4, 14), int32] */;
    %505 = reshape(%501, newshape=[819]) /* ty=Tensor[(819), float64] */;
    %506 = reshape(%502, newshape=[576]) /* ty=Tensor[(576), float64] */;
    %507 = @func_1162(%503, %504, %505, %506) /* ty=(Tensor[(8, 4, 14), bool], Tensor[(8, 4, 14), float64], Tensor[(819), float64], Tensor[(7, 13, 9), bool], Tensor[(576), uint32], Tensor[(16, 9, 4), float32]) */;
    %508 = @func_6203() /* ty=Tensor[(1, 9, 16), float64] */;
    %509 = %507.2;
    (%508, %509, -5 /* ty=int32 */, %var_6634, %var_6635, meta[relay.Constant][34] /* ty=Tensor[(576), float64] */)
  };
  %510(%var_6639, %var_6640) /* ty=(Tensor[(1, 9, 16), float64], Tensor[(819), float64], int32, Tensor[(448), int32], Tensor[(819), float64], Tensor[(576), float64]) */
}

def @func_11361(%var_11342: Tensor[(36), float32]) -> (Tensor[(1, 9, 16), float64], Tensor[(4, 3, 3), float32], Tensor[(36), float32], Tensor[(1320), int8], Tensor[(1, 9, 16), float64]) {
  %511 = cast(%var_11342, dtype="float32") /* ty=Tensor[(36), float32] */;
  %512 = cast(meta[relay.Constant][35] /* ty=Tensor[(1320), int8] */, dtype="int8") /* ty=Tensor[(1320), int8] */;
  %513 = reshape(%511, newshape=[4, 3, 3]) /* ty=Tensor[(4, 3, 3), float32] */;
  %514 = reshape(%512, newshape=[660, 2]) /* ty=Tensor[(660, 2), int8] */;
  %515 = @func_2260(%513, %514) /* ty=(Tensor[(4, 3, 3), float32], Tensor[(11, 8, 15), int8], Tensor[(660, 2), int8]) */;
  %516 = @func_8251() /* ty=(Tensor[(1, 9, 16), float64],) */;
  %517 = @func_5631() /* ty=Tensor[(1, 9, 16), float64] */;
  %518 = %515.0;
  %519 = %516.0;
  (%517, %518, %var_11342, meta[relay.Constant][35] /* ty=Tensor[(1320), int8] */, %519)
}

def @func_9052(%var_9020: Tensor[(16, 9, 16), float64], %var_9041: Tensor[(210), float32]) -> (Tensor[(16, 9, 16), int16], Tensor[(1, 9, 16), float64], Tensor[(210), float32], Tensor[(16, 9, 16), float32]) {
  %520 = @func_6588() /* ty=Tensor[(1, 9, 16), float64] */;
  %521 = cast(%520, dtype="int16") /* ty=Tensor[(1, 9, 16), int16] */;
  %522 = cast(%var_9020, dtype="int16") /* ty=Tensor[(16, 9, 16), int16] */;
  %523 = cast(%var_9041, dtype="float32") /* ty=Tensor[(210), float32] */;
  %524 = reshape(%523, newshape=[210]) /* ty=Tensor[(210), float32] */;
  %525 = @func_5911(%524) /* ty=(Tensor[(1, 9, 16), float64], Tensor[(1, 9, 16), float64], Tensor[(3, 15, 13), bool], Tensor[(585), float32], Tensor[(1, 9, 16), float64], Tensor[(182), uint64], Tensor[(210), float32]) */;
  %526 = @func_5631() /* ty=Tensor[(1, 9, 16), float64] */;
  %527 = cast(%var_9020, dtype="float32") /* ty=Tensor[(16, 9, 16), float32] */;
  %528 = cast(%526, dtype="float32") /* ty=Tensor[(1, 9, 16), float32] */;
  %529 = bitwise_and(%521, %522) /* ty=Tensor[(16, 9, 16), int16] */;
  %530 = %525.4;
  %531 = floor_divide(%527, %528) /* ty=Tensor[(16, 9, 16), float32] */;
  (%529, %530, %var_9041, %531)
}

def @func_6848() -> (Tensor[(1, 9, 16), float64], Tensor[(1, 9, 16), float64], Tensor[(1, 9, 16), float64]) {
  %536 = fn () -> (Tensor[(1, 9, 16), float64], Tensor[(1, 9, 16), float64], Tensor[(1, 9, 16), float64]) {
    %532 = @func_6674() /* ty=(Tensor[(1, 9, 16), float64],) */;
    %533 = @func_5767() /* ty=Tensor[(1, 9, 16), float64] */;
    %534 = @func_6588() /* ty=Tensor[(1, 9, 16), float64] */;
    %535 = %532.0;
    (%533, %534, %535)
  };
  %536() /* ty=(Tensor[(1, 9, 16), float64], Tensor[(1, 9, 16), float64], Tensor[(1, 9, 16), float64]) */
}

def @func_9834(%var_9832: Tensor[(9, 15, 1), float64], %var_9833: Tensor[(6, 100), float32]) -> (Tensor[(9, 15, 1), float64], Tensor[(1, 9, 16), float64], Tensor[(36), float32], Tensor[(6, 100), float32], Tensor[(36), float32], Tensor[(1, 9, 16), float64], Tensor[(9, 15, 1), float64]) {
  @func_9830(%var_9832, %var_9833) /* ty=(Tensor[(9, 15, 1), float64], Tensor[(1, 9, 16), float64], Tensor[(36), float32], Tensor[(6, 100), float32], Tensor[(36), float32], Tensor[(1, 9, 16), float64], Tensor[(9, 15, 1), float64]) */
}

def @func_9662() -> (Tensor[(6, 9, 16), uint16], Tensor[(1, 9, 16), float32]) {
  %543 = fn () -> (Tensor[(6, 9, 16), uint16], Tensor[(1, 9, 16), float32]) {
    %537 = @func_9199() /* ty=Tensor[(1, 9, 16), float32] */;
    %538 = cast(%537, dtype="uint16") /* ty=Tensor[(1, 9, 16), uint16] */;
    %539 = cast(meta[relay.Constant][36] /* ty=Tensor[(6, 9, 16), float32] */, dtype="uint16") /* ty=Tensor[(6, 9, 16), uint16] */;
    %540 = @func_8589() /* ty=(Tensor[(1, 9, 16), float32],) */;
    %541 = bitwise_xor(%538, %539) /* ty=Tensor[(6, 9, 16), uint16] */;
    %542 = %540.0;
    (%541, %542)
  };
  %543() /* ty=(Tensor[(6, 9, 16), uint16], Tensor[(1, 9, 16), float32]) */
}

def @func_10661() -> (Tensor[(1, 9, 16), float64],) {
  %544 = @func_9938() /* ty=Tensor[(1, 9, 16), float64] */;
  (%544,)
}

def @func_8787() -> (Tensor[(1, 9, 16), float64], Tensor[(1, 9, 16), float64]) {
  %545 = @func_7787() /* ty=Tensor[(1, 9, 16), float64] */;
  %546 = @func_5742() /* ty=Tensor[(1, 9, 16), float64] */;
  (%545, %546)
}

def @func_9201() -> Tensor[(1, 9, 16), float32] {
  @func_9199() /* ty=Tensor[(1, 9, 16), float32] */
}

def @func_7271(%var_7201: uint8, %var_7220: Tensor[(165), uint8], %var_7261: Tensor[(72), uint32], %var_7262: Tensor[(576), float64], %var_7263: Tensor[(36), float32]) -> (Tensor[(1, 9, 16), float64], uint8, Tensor[(165), uint8], Tensor[(11, 5, 3), float32], int32, Tensor[(72), uint32], Tensor[(576), float64], Tensor[(36), float32], Tensor[(1320), int8]) {
  %547 = cast(%var_7201, dtype="uint8") /* ty=uint8 */;
  %548 = reshape(%547, newshape=[]) /* ty=uint8 */;
  %549 = @func_5680(%548) /* ty=(Tensor[(1, 9, 16), float64], Tensor[(11, 5, 3), float32], uint8, Tensor[(165), uint8], Tensor[(1, 9, 16), float64]) */;
  %550 = %549.2;
  %551 = cast(%var_7201, dtype="uint8") /* ty=uint8 */;
  %552 = cast(%var_7220, dtype="uint8") /* ty=Tensor[(165), uint8] */;
  %553 = reshape(%551, newshape=[]) /* ty=uint8 */;
  %554 = reshape(%552, newshape=[11, 5, 3]) /* ty=Tensor[(11, 5, 3), uint8] */;
  %555 = @func_3470(%553, %554) /* ty=(Tensor[(11, 5, 3), uint8], Tensor[(11, 5, 3), float32]) */;
  %556 = %555.1;
  %557 = cast(%550, dtype="uint8") /* ty=uint8 */;
  %558 = cast(%556, dtype="uint8") /* ty=Tensor[(11, 5, 3), uint8] */;
  %559 = bitwise_xor(%557, %558) /* ty=Tensor[(11, 5, 3), uint8] */;
  %560 = cast(%559, dtype="float32") /* ty=Tensor[(11, 5, 3), float32] */;
  %561 = cast(%var_7261, dtype="uint32") /* ty=Tensor[(72), uint32] */;
  %562 = cast(%var_7261, dtype="uint32") /* ty=Tensor[(72), uint32] */;
  %563 = cast(%var_7262, dtype="float64") /* ty=Tensor[(576), float64] */;
  %564 = cast(%var_7201, dtype="int32") /* ty=int32 */;
  %565 = cast(%var_7263, dtype="float32") /* ty=Tensor[(36), float32] */;
  %566 = cast(meta[relay.Constant][37] /* ty=Tensor[(1320), int8] */, dtype="int8") /* ty=Tensor[(1320), int8] */;
  %567 = reshape(%561, newshape=[3, 4, 6]) /* ty=Tensor[(3, 4, 6), uint32] */;
  %568 = reshape(%562, newshape=[3, 4, 6]) /* ty=Tensor[(3, 4, 6), uint32] */;
  %569 = reshape(%563, newshape=[288, 2]) /* ty=Tensor[(288, 2), float64] */;
  %570 = reshape(%564, newshape=[]) /* ty=int32 */;
  %571 = reshape(%565, newshape=[9, 4]) /* ty=Tensor[(9, 4), float32] */;
  %572 = reshape(%566, newshape=[1320]) /* ty=Tensor[(1320), int8] */;
  %573 = @func_3162(%567, %568, %569, %570, %571, %572) /* ty=(Tensor[(3, 4, 6), uint32], Tensor[(7, 13, 9), bool], Tensor[(819), float64], Tensor[(576), float64], Tensor[(8, 4, 14), float64], int32, Tensor[(448), int32], Tensor[(660, 2), int8], Tensor[(9, 4), float32], Tensor[(1320), int8], Tensor[(16, 5), float64], Tensor[(288, 2), float64], Tensor[(16, 5), float64], Tensor[(16, 9, 4), float64]) */;
  %574 = @func_5631() /* ty=Tensor[(1, 9, 16), float64] */;
  %575 = log10(%560) /* ty=Tensor[(11, 5, 3), float32] */;
  %576 = %573.5;
  (%574, %var_7201, %var_7220, %575, %576, %var_7261, %var_7262, %var_7263, meta[relay.Constant][37] /* ty=Tensor[(1320), int8] */)
}

def @func_9907() -> Tensor[(1, 9, 16), float64] {
  @func_6588() /* ty=Tensor[(1, 9, 16), float64] */
}

def @func_3473(%var_3471: uint8, %var_3472: Tensor[(11, 5, 3), uint8]) -> (Tensor[(11, 5, 3), uint8], Tensor[(11, 5, 3), float32]) {
  %582 = fn (%var_3450: uint8, %var_3451: Tensor[(11, 5, 3), uint8]) -> (Tensor[(11, 5, 3), uint8], Tensor[(11, 5, 3), float32]) {
    %577 = cast(%var_3450, dtype="uint8") /* ty=uint8 */;
    %578 = cast(%var_3451, dtype="uint8") /* ty=Tensor[(11, 5, 3), uint8] */;
    %579 = cast(%var_3451, dtype="float32") /* ty=Tensor[(11, 5, 3), float32] */;
    %580 = logical_xor(%577, %578) /* ty=Tensor[(11, 5, 3), uint8] */;
    %581 = sqrt(%579) /* ty=Tensor[(11, 5, 3), float32] */;
    (%580, %581)
  };
  %582(%var_3471, %var_3472) /* ty=(Tensor[(11, 5, 3), uint8], Tensor[(11, 5, 3), float32]) */
}

def @func_3518(%var_3516: Tensor[(14, 3, 4), float32], %var_3517: Tensor[(1320), int8]) -> (Tensor[(14, 3, 4), float32], Tensor[(11, 8, 15), int8], Tensor[(36), float32], Tensor[(1320), int8]) {
  %594 = fn (%var_3503: Tensor[(14, 3, 4), float32], %var_3512: Tensor[(1320), int8]) -> (Tensor[(14, 3, 4), float32], Tensor[(11, 8, 15), int8], Tensor[(36), float32], Tensor[(1320), int8]) {
    %583 = cast(meta[relay.Constant][38] /* ty=Tensor[(14, 3, 4), float32] */, dtype="float32") /* ty=Tensor[(14, 3, 4), float32] */;
    %584 = shape_of(%var_3503, dtype="int32") /* ty=Tensor[(3), int32] */;
    %585 = cast(%var_3503, dtype="float32") /* ty=Tensor[(14, 3, 4), float32] */;
    %586 = dyn.reshape(%583, %584, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %587 = cast(meta[relay.Constant][39] /* ty=Tensor[(36), float32] */, dtype="float32") /* ty=Tensor[(36), float32] */;
    %588 = cast(%var_3512, dtype="int8") /* ty=Tensor[(1320), int8] */;
    %589 = reshape(%587, newshape=[4, 3, 3]) /* ty=Tensor[(4, 3, 3), float32] */;
    %590 = reshape(%588, newshape=[660, 2]) /* ty=Tensor[(660, 2), int8] */;
    %591 = @func_2260(%589, %590) /* ty=(Tensor[(4, 3, 3), float32], Tensor[(11, 8, 15), int8], Tensor[(660, 2), int8]) */;
    %592 = mod(%585, %586) /* ty=Tensor[(14, 3, 4), float32] */;
    %593 = %591.1;
    (%592, %593, meta[relay.Constant][39] /* ty=Tensor[(36), float32] */, %var_3512)
  };
  %594(%var_3516, %var_3517) /* ty=(Tensor[(14, 3, 4), float32], Tensor[(11, 8, 15), int8], Tensor[(36), float32], Tensor[(1320), int8]) */
}

def @func_7770(%var_7762: Tensor[(7, 15, 1), float32]) -> Tensor[(7, 15, 1), float32] {
  %595 = cast(%var_7762, dtype="float32") /* ty=Tensor[(7, 15, 1), float32] */;
  sqrt(%595) /* ty=Tensor[(7, 15, 1), float32] */
}

def @func_10717() -> (Tensor[(1, 9, 16), float64], Tensor[(1, 9, 16), float64], Tensor[(16, 13, 9), float32], Tensor[(1872), uint64]) {
  %596 = @func_9307() /* ty=(Tensor[(1, 9, 16), float64],) */;
  %597 = @func_9915() /* ty=(Tensor[(1, 9, 16), float64],) */;
  %598 = cast(meta[relay.Constant][40] /* ty=Tensor[(1872), uint64] */, dtype="uint64") /* ty=Tensor[(1872), uint64] */;
  %599 = reshape(%598, newshape=[16, 13, 9]) /* ty=Tensor[(16, 13, 9), uint64] */;
  %600 = @func_5344(%599) /* ty=(Tensor[(16, 13, 9), bool], Tensor[(16, 13, 9), float32]) */;
  %601 = %596.0;
  %602 = %597.0;
  %603 = %600.1;
  (%601, %602, %603, meta[relay.Constant][40] /* ty=Tensor[(1872), uint64] */)
}

def @func_8421(%var_8419: float32, %var_8420: Tensor[(5, 15, 14), float32]) -> (Tensor[(5, 15, 14), float32],) {
  @func_8417(%var_8419, %var_8420) /* ty=(Tensor[(5, 15, 14), float32],) */
}

def @func_7473() -> (Tensor[(1, 9, 16), float64],) {
  @func_7471() /* ty=(Tensor[(1, 9, 16), float64],) */
}

def @func_9909() -> Tensor[(1, 9, 16), float64] {
  @func_9907() /* ty=Tensor[(1, 9, 16), float64] */
}

def @func_8578(%var_8536: Tensor[(11, 9, 16), float64]) -> (Tensor[(?, 9, 16), uint64], Tensor[(11, 9, 16), int16], Tensor[(1, 9, 16), float64], Tensor[(11, 8, 15), int8], Tensor[(1320), int8]) {
  %604 = @func_8251() /* ty=(Tensor[(1, 9, 16), float64],) */;
  %605 = %604.0;
  %606 = @func_7471() /* ty=(Tensor[(1, 9, 16), float64],) */;
  %607 = %606.0;
  %608 = cast(%607, dtype="uint64") /* ty=Tensor[(1, 9, 16), uint64] */;
  %609 = shape_of(%605, dtype="int32") /* ty=Tensor[(3), int32] */;
  %610 = cast(%605, dtype="uint64") /* ty=Tensor[(1, 9, 16), uint64] */;
  %611 = dyn.reshape(%608, %609, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %612 = cast(%605, dtype="int16") /* ty=Tensor[(1, 9, 16), int16] */;
  %613 = cast(%var_8536, dtype="int16") /* ty=Tensor[(11, 9, 16), int16] */;
  %614 = @func_7364() /* ty=(Tensor[(10, 9, 16), float32], Tensor[(1, 9, 16), float64]) */;
  %615 = cast(meta[relay.Constant][41] /* ty=Tensor[(1320), int8] */, dtype="int8") /* ty=Tensor[(1320), int8] */;
  %616 = reshape(%615, newshape=[11, 8, 15]) /* ty=Tensor[(11, 8, 15), int8] */;
  %617 = bitwise_and(%610, %611) /* ty=Tensor[(?, 9, 16), uint64] */;
  %618 = minimum(%612, %613) /* ty=Tensor[(11, 9, 16), int16] */;
  %619 = %614.1;
  %620 = @func_1421(%616) /* ty=Tensor[(11, 8, 15), int8] */;
  (%617, %618, %619, %620, meta[relay.Constant][41] /* ty=Tensor[(1320), int8] */)
}

def @func_11364(%var_11362: Tensor[(36), float32]) -> (Tensor[(1, 9, 16), float64], Tensor[(4, 3, 3), float32], Tensor[(36), float32], Tensor[(1320), int8], Tensor[(1, 9, 16), float64]) {
  @func_11361(%var_11362) /* ty=(Tensor[(1, 9, 16), float64], Tensor[(4, 3, 3), float32], Tensor[(36), float32], Tensor[(1320), int8], Tensor[(1, 9, 16), float64]) */
}

def @func_9199() -> Tensor[(1, 9, 16), float32] {
  %621 = @func_7602() /* ty=(Tensor[(1, 9, 16), float64],) */;
  %622 = %621.0;
  %623 = cast(%622, dtype="float32") /* ty=Tensor[(1, 9, 16), float32] */;
  asinh(%623) /* ty=Tensor[(1, 9, 16), float32] */
}

def @func_10663() -> (Tensor[(1, 9, 16), float64],) {
  @func_10661() /* ty=(Tensor[(1, 9, 16), float64],) */
}

def @func_10436() -> Tensor[(1, 9, 16), float64] {
  @func_10434() /* ty=Tensor[(1, 9, 16), float64] */
}

def @func_9528() -> (Tensor[(1, 9, 16), float64], Tensor[(165), uint8], Tensor[(300), float32], Tensor[(3, 9, 16), float64], Tensor[(11, 8, 15), int8], Tensor[(1320), int8]) {
  @func_9526() /* ty=(Tensor[(1, 9, 16), float64], Tensor[(165), uint8], Tensor[(300), float32], Tensor[(3, 9, 16), float64], Tensor[(11, 8, 15), int8], Tensor[(1320), int8]) */
}

def @main(%var_11786: Tensor[(1, 2, 9), float64]) -> Tensor[(1, 2, 9), float64] {
  %624 = cast(%var_11786, dtype="float64") /* ty=Tensor[(1, 2, 9), float64] */;
  cosh(%624) /* ty=Tensor[(1, 2, 9), float64] */
}

def @func_6675() -> (Tensor[(1, 9, 16), float64],) {
  %626 = fn () -> (Tensor[(1, 9, 16), float64],) {
    %625 = @func_5843() /* ty=Tensor[(1, 9, 16), float64] */;
    (%625,)
  };
  %626() /* ty=(Tensor[(1, 9, 16), float64],) */
}

def @func_8345(%var_8342: Tensor[(6, 8, 15), float32], %var_8343: Tensor[(448), int32], %var_8344: Tensor[(819), float64]) -> (Tensor[(6, 8, 15), bool], Tensor[(819), float64], Tensor[(448), int32], Tensor[(819), float64], Tensor[(4, 2, 6), float64], Tensor[(378), int16], Tensor[(48), float64]) {
  @func_8340(%var_8342, %var_8343, %var_8344) /* ty=(Tensor[(6, 8, 15), bool], Tensor[(819), float64], Tensor[(448), int32], Tensor[(819), float64], Tensor[(4, 2, 6), float64], Tensor[(378), int16], Tensor[(48), float64]) */
}

def @func_9384(%var_9373: Tensor[(5, 12, 5), float32]) -> (Tensor[(5, 12, 5), float32], Tensor[(11, 5, 3), uint8], uint8, Tensor[(165), uint8]) {
  %627 = cast(%var_9373, dtype="float32") /* ty=Tensor[(5, 12, 5), float32] */;
  %628 = cast(meta[relay.Constant][42] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %629 = cast(meta[relay.Constant][43] /* ty=Tensor[(165), uint8] */, dtype="uint8") /* ty=Tensor[(165), uint8] */;
  %630 = reshape(%628, newshape=[]) /* ty=uint8 */;
  %631 = reshape(%629, newshape=[11, 5, 3]) /* ty=Tensor[(11, 5, 3), uint8] */;
  %632 = @func_3470(%630, %631) /* ty=(Tensor[(11, 5, 3), uint8], Tensor[(11, 5, 3), float32]) */;
  %633 = acos(%627) /* ty=Tensor[(5, 12, 5), float32] */;
  %634 = %632.0;
  (%633, %634, meta[relay.Constant][42] /* ty=uint8 */, meta[relay.Constant][43] /* ty=Tensor[(165), uint8] */)
}

def @func_10476() -> (Tensor[(1, 9, 16), float64],) {
  %635 = @func_9667() /* ty=(Tensor[(1, 9, 16), float64],) */;
  %636 = %635.0;
  (%636,)
}

def @func_8442() -> (Tensor[(1, 9, 16), float32], Tensor[(1, 9, 16), float64]) {
  %639 = fn () -> (Tensor[(1, 9, 16), float32], Tensor[(1, 9, 16), float64]) {
    %637 = @func_7918() /* ty=Tensor[(1, 9, 16), float32] */;
    %638 = @func_5631() /* ty=Tensor[(1, 9, 16), float64] */;
    (%637, %638)
  };
  %639() /* ty=(Tensor[(1, 9, 16), float32], Tensor[(1, 9, 16), float64]) */
}

def @func_8748() -> (Tensor[(10, 9, 16), float32],) {
  @func_8746() /* ty=(Tensor[(10, 9, 16), float32],) */
}

def @func_11150() -> (Tensor[(10, 9, 16), float32],) {
  @func_11148() /* ty=(Tensor[(10, 9, 16), float32],) */
}

def @func_7442() -> Tensor[(1, 9, 16), float64] {
  %641 = fn () -> Tensor[(1, 9, 16), float64] {
    %640 = @func_6674() /* ty=(Tensor[(1, 9, 16), float64],) */;
    %640.0
  };
  %641() /* ty=Tensor[(1, 9, 16), float64] */
}

def @func_8417(%var_8409: float32, %var_8410: Tensor[(5, 15, 14), float32]) -> (Tensor[(5, 15, 14), float32],) {
  %642 = cast(%var_8409, dtype="float32") /* ty=float32 */;
  %643 = cast(%var_8410, dtype="float32") /* ty=Tensor[(5, 15, 14), float32] */;
  %644 = mod(%642, %643) /* ty=Tensor[(5, 15, 14), float32] */;
  (%644,)
}

def @func_10295(%var_10288: Tensor[(14, 9, 16), float64]) -> Tensor[(14, 9, 16), float32] {
  %645 = @func_5843() /* ty=Tensor[(1, 9, 16), float64] */;
  %646 = cast(%645, dtype="float32") /* ty=Tensor[(1, 9, 16), float32] */;
  %647 = cast(%var_10288, dtype="float32") /* ty=Tensor[(14, 9, 16), float32] */;
  floor_divide(%646, %647) /* ty=Tensor[(14, 9, 16), float32] */
}

def @func_8092(%var_8041: Tensor[(6, 8, 15), float32]) -> (Tensor[(720), float32], Tensor[(1, 9, 16), float64], Tensor[(1, 9, 16), float64], Tensor[(1, 9, 16), float64], Tensor[(6, 8, 15), bool], Tensor[(1, 9, 16), float64], Tensor[(1, 9, 16), float32], Tensor[(16, 13, 9), uint16]) {
  %648 = @func_7602() /* ty=(Tensor[(1, 9, 16), float64],) */;
  %649 = cast(meta[relay.Constant][44] /* ty=Tensor[(720), float32] */, dtype="float32") /* ty=Tensor[(720), float32] */;
  %650 = reshape(%649, newshape=[6, 8, 15]) /* ty=Tensor[(6, 8, 15), float32] */;
  %651 = @func_2443(%650) /* ty=Tensor[(6, 8, 15), float32] */;
  %652 = cast(%var_8041, dtype="bool") /* ty=Tensor[(6, 8, 15), bool] */;
  %653 = shape_of(%651, dtype="int32") /* ty=Tensor[(3), int32] */;
  %654 = cast(%651, dtype="bool") /* ty=Tensor[(6, 8, 15), bool] */;
  %655 = dyn.reshape(%652, %653, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %656 = @func_7441() /* ty=Tensor[(1, 9, 16), float64] */;
  %657 = cast(%656, dtype="float32") /* ty=Tensor[(1, 9, 16), float32] */;
  %658 = cast(meta[relay.Constant][45] /* ty=Tensor[(1872), uint64] */, dtype="uint64") /* ty=Tensor[(1872), uint64] */;
  %659 = reshape(%658, newshape=[16, 13, 9]) /* ty=Tensor[(16, 13, 9), uint64] */;
  %660 = @func_5344(%659) /* ty=(Tensor[(16, 13, 9), bool], Tensor[(16, 13, 9), float32]) */;
  %661 = %660.0;
  %662 = cast(meta[relay.Constant][45] /* ty=Tensor[(1872), uint64] */, dtype="uint16") /* ty=Tensor[(1872), uint16] */;
  %663 = shape_of(%661, dtype="int32") /* ty=Tensor[(3), int32] */;
  %664 = cast(%661, dtype="uint16") /* ty=Tensor[(16, 13, 9), uint16] */;
  %665 = dyn.reshape(%662, %663, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %666 = %648.0;
  %667 = @func_5767() /* ty=Tensor[(1, 9, 16), float64] */;
  %668 = @func_5631() /* ty=Tensor[(1, 9, 16), float64] */;
  %669 = greater_equal(%654, %655) /* ty=Tensor[(6, 8, 15), bool] */;
  %670 = @func_5555() /* ty=Tensor[(1, 9, 16), float64] */;
  %671 = asin(%657) /* ty=Tensor[(1, 9, 16), float32] */;
  %672 = left_shift(%664, %665) /* ty=Tensor[(16, 13, 9), uint16] */;
  (meta[relay.Constant][44] /* ty=Tensor[(720), float32] */, %666, %667, %668, %669, %670, %671, %672)
}

def @func_9543() -> (Tensor[(1, 9, 16), float64],) {
  %674 = fn () -> (Tensor[(1, 9, 16), float64],) {
    %673 = @func_6588() /* ty=Tensor[(1, 9, 16), float64] */;
    (%673,)
  };
  %674() /* ty=(Tensor[(1, 9, 16), float64],) */
}

def @func_6057() -> (Tensor[(?, 9, 16), uint32], Tensor[(1, 9, 16), float32]) {
  @func_6055() /* ty=(Tensor[(?, 9, 16), uint32], Tensor[(1, 9, 16), float32]) */
}

def @func_5632() -> Tensor[(1, 9, 16), float64] {
  %675 = fn () -> Tensor[(1, 9, 16), float64] {
    @func_5555() /* ty=Tensor[(1, 9, 16), float64] */
  };
  %675() /* ty=Tensor[(1, 9, 16), float64] */
}

def @func_2876(%var_2874: Tensor[(3, 5, 14), float32]) -> (Tensor[(3, 5, 14), float32], Tensor[(16, 9, 4), float64], Tensor[(182), uint64]) {
  @func_2873(%var_2874) /* ty=(Tensor[(3, 5, 14), float32], Tensor[(16, 9, 4), float64], Tensor[(182), uint64]) */
}

def @func_2260(%var_2248: Tensor[(4, 3, 3), float32], %var_2252: Tensor[(660, 2), int8]) -> (Tensor[(4, 3, 3), float32], Tensor[(11, 8, 15), int8], Tensor[(660, 2), int8]) {
  %676 = cast(%var_2248, dtype="float32") /* ty=Tensor[(4, 3, 3), float32] */;
  %677 = cast(%var_2252, dtype="int8") /* ty=Tensor[(660, 2), int8] */;
  %678 = reshape(%677, newshape=[11, 8, 15]) /* ty=Tensor[(11, 8, 15), int8] */;
  %679 = rsqrt(%676) /* ty=Tensor[(4, 3, 3), float32] */;
  %680 = @func_1421(%678) /* ty=Tensor[(11, 8, 15), int8] */;
  (%679, %680, %var_2252)
}

def @func_9940() -> Tensor[(1, 9, 16), float64] {
  @func_9938() /* ty=Tensor[(1, 9, 16), float64] */
}

def @func_11615(%var_11612: Tensor[(16, 9, 16), float64], %var_11613: Tensor[(36), float32], %var_11614: Tensor[(576), float64]) -> (Tensor[(16, 9, 16), float32], Tensor[(4, 3, 3), float32], Tensor[(36), float32], Tensor[(7, 13, 9), float32], Tensor[(1, 819), float64], Tensor[(576), float64]) {
  %700 = fn (%var_11590: Tensor[(16, 9, 16), float64], %var_11603: Tensor[(36), float32], %var_11608: Tensor[(576), float64]) -> (Tensor[(16, 9, 16), float32], Tensor[(4, 3, 3), float32], Tensor[(36), float32], Tensor[(7, 13, 9), float32], Tensor[(1, 819), float64], Tensor[(576), float64]) {
    %681 = @func_9667() /* ty=(Tensor[(1, 9, 16), float64],) */;
    %682 = %681.0;
    %683 = cast(%682, dtype="float64") /* ty=Tensor[(1, 9, 16), float64] */;
    %684 = cast(%var_11590, dtype="float64") /* ty=Tensor[(16, 9, 16), float64] */;
    %685 = floor_mod(%683, %684) /* ty=Tensor[(16, 9, 16), float64] */;
    %686 = cast(%685, dtype="float32") /* ty=Tensor[(16, 9, 16), float32] */;
    %687 = cast(%var_11603, dtype="float32") /* ty=Tensor[(36), float32] */;
    %688 = reshape(%687, newshape=[36]) /* ty=Tensor[(36), float32] */;
    %689 = @func_11361(%688) /* ty=(Tensor[(1, 9, 16), float64], Tensor[(4, 3, 3), float32], Tensor[(36), float32], Tensor[(1320), int8], Tensor[(1, 9, 16), float64]) */;
    %690 = cast(meta[relay.Constant][46] /* ty=Tensor[(1, 819), float64] */, dtype="float64") /* ty=Tensor[(1, 819), float64] */;
    %691 = cast(meta[relay.Constant][46] /* ty=Tensor[(1, 819), float64] */, dtype="float64") /* ty=Tensor[(1, 819), float64] */;
    %692 = cast(%var_11608, dtype="float64") /* ty=Tensor[(576), float64] */;
    %693 = reshape(%690, newshape=[7, 13, 9]) /* ty=Tensor[(7, 13, 9), float64] */;
    %694 = reshape(%691, newshape=[7, 13, 9]) /* ty=Tensor[(7, 13, 9), float64] */;
    %695 = reshape(%692, newshape=[576]) /* ty=Tensor[(576), float64] */;
    %696 = @func_578(%693, %694, %695) /* ty=(Tensor[(16, 9, 4), float64], Tensor[(576), float64], Tensor[(16, 9, 4), float64], Tensor[(7, 13, 9), bool], Tensor[(16, 9, 4), float64], Tensor[(7, 13, 9), float32], Tensor[(16, 9, 4), float64]) */;
    %697 = rsqrt(%686) /* ty=Tensor[(16, 9, 16), float32] */;
    %698 = %689.1;
    %699 = %696.5;
    (%697, %698, %var_11603, %699, meta[relay.Constant][46] /* ty=Tensor[(1, 819), float64] */, %var_11608)
  };
  %700(%var_11612, %var_11613, %var_11614) /* ty=(Tensor[(16, 9, 16), float32], Tensor[(4, 3, 3), float32], Tensor[(36), float32], Tensor[(7, 13, 9), float32], Tensor[(1, 819), float64], Tensor[(576), float64]) */
}

def @func_10298(%var_10296: Tensor[(14, 9, 16), float64]) -> Tensor[(14, 9, 16), float32] {
  @func_10295(%var_10296) /* ty=Tensor[(14, 9, 16), float32] */
}

def @func_10204(%var_10183: Tensor[(13, 6, 8), uint16], %var_10184: Tensor[(13, 6, 8), uint16], %var_10196: Tensor[(1320), int8]) -> (Tensor[(13, 6, 8), uint16], Tensor[(11, 8, 15), int8], Tensor[(1320), int8]) {
  %701 = cast(%var_10184, dtype="uint16") /* ty=Tensor[(13, 6, 8), uint16] */;
  %702 = shape_of(%var_10183, dtype="int32") /* ty=Tensor[(3), int32] */;
  %703 = cast(%var_10183, dtype="uint16") /* ty=Tensor[(13, 6, 8), uint16] */;
  %704 = dyn.reshape(%701, %702, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %705 = cast(%var_10196, dtype="int8") /* ty=Tensor[(1320), int8] */;
  %706 = reshape(%705, newshape=[11, 8, 15]) /* ty=Tensor[(11, 8, 15), int8] */;
  %707 = bitwise_and(%703, %704) /* ty=Tensor[(13, 6, 8), uint16] */;
  %708 = @func_1421(%706) /* ty=Tensor[(11, 8, 15), int8] */;
  (%707, %708, %var_10196)
}

def @func_5913(%var_5912: Tensor[(210), float32]) -> (Tensor[(1, 9, 16), float64], Tensor[(1, 9, 16), float64], Tensor[(3, 15, 13), bool], Tensor[(585), float32], Tensor[(1, 9, 16), float64], Tensor[(182), uint64], Tensor[(210), float32]) {
  %719 = fn (%var_5905: Tensor[(210), float32]) -> (Tensor[(1, 9, 16), float64], Tensor[(1, 9, 16), float64], Tensor[(3, 15, 13), bool], Tensor[(585), float32], Tensor[(1, 9, 16), float64], Tensor[(182), uint64], Tensor[(210), float32]) {
    %709 = cast(meta[relay.Constant][47] /* ty=Tensor[(585), float32] */, dtype="float32") /* ty=Tensor[(585), float32] */;
    %710 = reshape(%709, newshape=[3, 15, 13]) /* ty=Tensor[(3, 15, 13), float32] */;
    %711 = cast(%var_5905, dtype="float32") /* ty=Tensor[(210), float32] */;
    %712 = reshape(%711, newshape=[3, 5, 14]) /* ty=Tensor[(3, 5, 14), float32] */;
    %713 = @func_2873(%712) /* ty=(Tensor[(3, 5, 14), float32], Tensor[(16, 9, 4), float64], Tensor[(182), uint64]) */;
    %714 = @func_5555() /* ty=Tensor[(1, 9, 16), float64] */;
    %715 = @func_5555() /* ty=Tensor[(1, 9, 16), float64] */;
    %716 = @func_4677(%710) /* ty=Tensor[(3, 15, 13), bool] */;
    %717 = @func_5843() /* ty=Tensor[(1, 9, 16), float64] */;
    %718 = %713.2;
    (%714, %715, %716, meta[relay.Constant][47] /* ty=Tensor[(585), float32] */, %717, %718, %var_5905)
  };
  %719(%var_5912) /* ty=(Tensor[(1, 9, 16), float64], Tensor[(1, 9, 16), float64], Tensor[(3, 15, 13), bool], Tensor[(585), float32], Tensor[(1, 9, 16), float64], Tensor[(182), uint64], Tensor[(210), float32]) */
}

def @func_5742() -> Tensor[(1, 9, 16), float64] {
  @func_5631() /* ty=Tensor[(1, 9, 16), float64] */
}

def @func_5957(%var_5955: int32, %var_5956: Tensor[(819), float64]) -> (Tensor[(1, 9, 16), float64], Tensor[(819), float64], int32, Tensor[(448), int32], Tensor[(819), float64], Tensor[(12, 48), float64]) {
  %731 = fn (%var_5938: int32, %var_5940: Tensor[(819), float64]) -> (Tensor[(1, 9, 16), float64], Tensor[(819), float64], int32, Tensor[(448), int32], Tensor[(819), float64], Tensor[(12, 48), float64]) {
    %720 = cast(%var_5938, dtype="int32") /* ty=int32 */;
    %721 = cast(meta[relay.Constant][48] /* ty=Tensor[(448), int32] */, dtype="int32") /* ty=Tensor[(448), int32] */;
    %722 = cast(%var_5940, dtype="float64") /* ty=Tensor[(819), float64] */;
    %723 = cast(meta[relay.Constant][49] /* ty=Tensor[(12, 48), float64] */, dtype="float64") /* ty=Tensor[(12, 48), float64] */;
    %724 = reshape(%720, newshape=[]) /* ty=int32 */;
    %725 = reshape(%721, newshape=[8, 4, 14]) /* ty=Tensor[(8, 4, 14), int32] */;
    %726 = reshape(%722, newshape=[819]) /* ty=Tensor[(819), float64] */;
    %727 = reshape(%723, newshape=[576]) /* ty=Tensor[(576), float64] */;
    %728 = @func_1162(%724, %725, %726, %727) /* ty=(Tensor[(8, 4, 14), bool], Tensor[(8, 4, 14), float64], Tensor[(819), float64], Tensor[(7, 13, 9), bool], Tensor[(576), uint32], Tensor[(16, 9, 4), float32]) */;
    %729 = @func_5843() /* ty=Tensor[(1, 9, 16), float64] */;
    %730 = %728.2;
    (%729, %730, %var_5938, meta[relay.Constant][48] /* ty=Tensor[(448), int32] */, %var_5940, meta[relay.Constant][49] /* ty=Tensor[(12, 48), float64] */)
  };
  %731(%var_5955, %var_5956) /* ty=(Tensor[(1, 9, 16), float64], Tensor[(819), float64], int32, Tensor[(448), int32], Tensor[(819), float64], Tensor[(12, 48), float64]) */
}

def @func_10314(%var_10313: Tensor[(7, 6, 5), float64]) -> (Tensor[(7, 6, 5), float32],) {
  %736 = fn (%var_10300: Tensor[(7, 6, 5), float64]) -> (Tensor[(7, 6, 5), float32],) {
    %732 = cast(%var_10300, dtype="float64") /* ty=Tensor[(7, 6, 5), float64] */;
    %733 = log2(%732) /* ty=Tensor[(7, 6, 5), float64] */;
    %734 = cast(%733, dtype="float32") /* ty=Tensor[(7, 6, 5), float32] */;
    %735 = atanh(%734) /* ty=Tensor[(7, 6, 5), float32] */;
    (%735,)
  };
  %736(%var_10313) /* ty=(Tensor[(7, 6, 5), float32],) */
}

def @func_7649(%var_7647: Tensor[(12, 4, 1), float32], %var_7648: Tensor[(12, 4, 11), float32]) -> Tensor[(12, 4, 11), float32] {
  @func_7645(%var_7647, %var_7648) /* ty=Tensor[(12, 4, 11), float32] */
}

def @func_11139() -> Tensor[(1, 9, 16), float64] {
  @func_11137() /* ty=Tensor[(1, 9, 16), float64] */
}

def @func_6957() -> (Tensor[(1, 9, 16), float64],) {
  %738 = fn () -> (Tensor[(1, 9, 16), float64],) {
    %737 = @func_5631() /* ty=Tensor[(1, 9, 16), float64] */;
    (%737,)
  };
  %738() /* ty=(Tensor[(1, 9, 16), float64],) */
}

def @func_9526() -> (Tensor[(1, 9, 16), float64], Tensor[(165), uint8], Tensor[(300), float32], Tensor[(3, 9, 16), float64], Tensor[(11, 8, 15), int8], Tensor[(1320), int8]) {
  %739 = @func_7872() /* ty=(Tensor[(1, 9, 16), float64],) */;
  %740 = cast(meta[relay.Constant][50] /* ty=Tensor[(300), float32] */, dtype="float32") /* ty=Tensor[(300), float32] */;
  %741 = reshape(%740, newshape=[5, 12, 5]) /* ty=Tensor[(5, 12, 5), float32] */;
  %742 = @func_9384(%741) /* ty=(Tensor[(5, 12, 5), float32], Tensor[(11, 5, 3), uint8], uint8, Tensor[(165), uint8]) */;
  %743 = @func_7722() /* ty=(Tensor[(3, 9, 16), float64],) */;
  %744 = cast(meta[relay.Constant][51] /* ty=Tensor[(1320), int8] */, dtype="int8") /* ty=Tensor[(1320), int8] */;
  %745 = reshape(%744, newshape=[11, 8, 15]) /* ty=Tensor[(11, 8, 15), int8] */;
  %746 = %739.0;
  %747 = %742.3;
  %748 = %743.0;
  %749 = @func_1421(%745) /* ty=Tensor[(11, 8, 15), int8] */;
  (%746, %747, meta[relay.Constant][50] /* ty=Tensor[(300), float32] */, %748, %749, meta[relay.Constant][51] /* ty=Tensor[(1320), int8] */)
}

def @func_7603() -> (Tensor[(1, 9, 16), float64],) {
  %752 = fn () -> (Tensor[(1, 9, 16), float64],) {
    %750 = @func_6878() /* ty=(Tensor[(1, 9, 16), float64],) */;
    %751 = %750.0;
    (%751,)
  };
  %752() /* ty=(Tensor[(1, 9, 16), float64],) */
}

def @func_11061(%var_11059: Tensor[(15, 1), float64], %var_11060: Tensor[(48), float64]) -> (Tensor[(13, 9, 16), int16], Tensor[(819), float64], Tensor[(72, 8), float64], Tensor[(1, 9, 16), float32], Tensor[(1, 9, 16), float32], Tensor[(?, 9, 16), float32], Tensor[(48), float64], Tensor[(15, 1), float64], Tensor[(48), float64], Tensor[(1, 9, 16), float64], Tensor[(?, 9, 16), float32], Tensor[(1, 9, 16), float64]) {
  %775 = fn (%var_10966: Tensor[(15, 1), float64], %var_10967: Tensor[(48), float64]) -> (Tensor[(13, 9, 16), int16], Tensor[(819), float64], Tensor[(72, 8), float64], Tensor[(1, 9, 16), float32], Tensor[(1, 9, 16), float32], Tensor[(?, 9, 16), float32], Tensor[(48), float64], Tensor[(15, 1), float64], Tensor[(48), float64], Tensor[(1, 9, 16), float64], Tensor[(?, 9, 16), float32], Tensor[(1, 9, 16), float64]) {
    %753 = cast(meta[relay.Constant][52] /* ty=Tensor[(72, 8), float64] */, dtype="float64") /* ty=Tensor[(72, 8), float64] */;
    %754 = reshape(%753, newshape=[576]) /* ty=Tensor[(576), float64] */;
    %755 = @func_2463(%754) /* ty=(Tensor[(16, 5), float64], Tensor[(576), float64], Tensor[(819), float64], Tensor[(576), float64]) */;
    %756 = @func_6755() /* ty=(Tensor[(?, 9, 16), float32],) */;
    %757 = cast(%var_10966, dtype="float64") /* ty=Tensor[(15, 1), float64] */;
    %758 = cast(%var_10967, dtype="float64") /* ty=Tensor[(48), float64] */;
    %759 = reshape(%757, newshape=[1, 3, 5]) /* ty=Tensor[(1, 3, 5), float64] */;
    %760 = reshape(%758, newshape=[48]) /* ty=Tensor[(48), float64] */;
    %761 = @func_6313(%759, %760) /* ty=(Tensor[(2, 3, 5), float64], Tensor[(4, 2, 6), float64], Tensor[(48), float64]) */;
    %762 = @func_8787() /* ty=(Tensor[(1, 9, 16), float64], Tensor[(1, 9, 16), float64]) */;
    %763 = @func_9763() /* ty=Tensor[(?, 9, 16), float32] */;
    %764 = cast(%763, dtype="float32") /* ty=Tensor[(?, 9, 16), float32] */;
    %765 = @func_10181() /* ty=(Tensor[(1, 9, 16), float64], Tensor[(11, 8, 15), int8], Tensor[(1, 9, 16), float64], Tensor[(3, 9, 16), float64]) */;
    %766 = @func_8157() /* ty=Tensor[(13, 9, 16), int16] */;
    %767 = %755.2;
    %768 = @func_9199() /* ty=Tensor[(1, 9, 16), float32] */;
    %769 = @func_7918() /* ty=Tensor[(1, 9, 16), float32] */;
    %770 = %756.0;
    %771 = %761.2;
    %772 = %762.0;
    %773 = log2(%764) /* ty=Tensor[(?, 9, 16), float32] */;
    %774 = %765.0;
    (%766, %767, meta[relay.Constant][52] /* ty=Tensor[(72, 8), float64] */, %768, %769, %770, %771, %var_10966, %var_10967, %772, %773, %774)
  };
  %775(%var_11059, %var_11060) /* ty=(Tensor[(13, 9, 16), int16], Tensor[(819), float64], Tensor[(72, 8), float64], Tensor[(1, 9, 16), float32], Tensor[(1, 9, 16), float32], Tensor[(?, 9, 16), float32], Tensor[(48), float64], Tensor[(15, 1), float64], Tensor[(48), float64], Tensor[(1, 9, 16), float64], Tensor[(?, 9, 16), float32], Tensor[(1, 9, 16), float64]) */
}

def @func_9938() -> Tensor[(1, 9, 16), float64] {
  %776 = @func_9915() /* ty=(Tensor[(1, 9, 16), float64],) */;
  %776.0
}

def @func_10140(%var_10120: Tensor[(1, 1584), float64]) -> (Tensor[(1, 9, 16), float64], Tensor[(11, 9, 16), int16], Tensor[(1, 1584), float64]) {
  %777 = @func_9667() /* ty=(Tensor[(1, 9, 16), float64],) */;
  %778 = cast(%var_10120, dtype="float64") /* ty=Tensor[(1, 1584), float64] */;
  %779 = reshape(%778, newshape=[11, 9, 16]) /* ty=Tensor[(11, 9, 16), float64] */;
  %780 = @func_8578(%779) /* ty=(Tensor[(?, 9, 16), uint64], Tensor[(11, 9, 16), int16], Tensor[(1, 9, 16), float64], Tensor[(11, 8, 15), int8], Tensor[(1320), int8]) */;
  %781 = %777.0;
  %782 = %780.1;
  (%781, %782, %var_10120)
}

def @func_7080(%var_7079: Tensor[(2, 3, 5), float64]) -> (Tensor[(6, 8, 15), float32], Tensor[(15), float64], Tensor[(48), float64], Tensor[(2, 3, 5), int64], Tensor[(2, 3, 5), float64], Tensor[(1, 9, 16), float64]) {
  %802 = fn (%var_7020: Tensor[(2, 3, 5), float64]) -> (Tensor[(6, 8, 15), float32], Tensor[(15), float64], Tensor[(48), float64], Tensor[(2, 3, 5), int64], Tensor[(2, 3, 5), float64], Tensor[(1, 9, 16), float64]) {
    %783 = @func_6257() /* ty=(Tensor[(?, 9, 16), int32], Tensor[(6, 8, 15), float32], Tensor[(720), float32]) */;
    %784 = %783.1;
    %785 = cast(%784, dtype="float32") /* ty=Tensor[(6, 8, 15), float32] */;
    %786 = cast(meta[relay.Constant][53] /* ty=Tensor[(15), float64] */, dtype="float64") /* ty=Tensor[(15), float64] */;
    %787 = cast(meta[relay.Constant][54] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
    %788 = reshape(%786, newshape=[1, 3, 5]) /* ty=Tensor[(1, 3, 5), float64] */;
    %789 = reshape(%787, newshape=[48]) /* ty=Tensor[(48), float64] */;
    %790 = @func_6313(%788, %789) /* ty=(Tensor[(2, 3, 5), float64], Tensor[(4, 2, 6), float64], Tensor[(48), float64]) */;
    %791 = %790.0;
    %792 = cast(%var_7020, dtype="int64") /* ty=Tensor[(2, 3, 5), int64] */;
    %793 = shape_of(%791, dtype="int32") /* ty=Tensor[(3), int32] */;
    %794 = cast(%791, dtype="int64") /* ty=Tensor[(2, 3, 5), int64] */;
    %795 = dyn.reshape(%792, %793, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %796 = cast(%791, dtype="float64") /* ty=Tensor[(2, 3, 5), float64] */;
    %797 = @func_6674() /* ty=(Tensor[(1, 9, 16), float64],) */;
    %798 = cosh(%785) /* ty=Tensor[(6, 8, 15), float32] */;
    %799 = maximum(%794, %795) /* ty=Tensor[(2, 3, 5), int64] */;
    %800 = atanh(%796) /* ty=Tensor[(2, 3, 5), float64] */;
    %801 = %797.0;
    (%798, meta[relay.Constant][53] /* ty=Tensor[(15), float64] */, meta[relay.Constant][54] /* ty=Tensor[(48), float64] */, %799, %800, %801)
  };
  %802(%var_7079) /* ty=(Tensor[(6, 8, 15), float32], Tensor[(15), float64], Tensor[(48), float64], Tensor[(2, 3, 5), int64], Tensor[(2, 3, 5), float64], Tensor[(1, 9, 16), float64]) */
}

def @func_11425(%var_11423: Tensor[(9, 5, 8), float64], %var_11424: Tensor[(9, 5, 8), float64]) -> (Tensor[(9, 5, 8), float64], Tensor[(9, 5, 8), float64]) {
  @func_11421(%var_11423, %var_11424) /* ty=(Tensor[(9, 5, 8), float64], Tensor[(9, 5, 8), float64]) */
}

def @func_1825(%var_1824: Tensor[(4, 2, 6), float64]) -> Tensor[(4, 2, 6), float64] {
  %804 = fn (%var_1818: Tensor[(4, 2, 6), float64]) -> Tensor[(4, 2, 6), float64] {
    %803 = cast(%var_1818, dtype="float64") /* ty=Tensor[(4, 2, 6), float64] */;
    sinh(%803) /* ty=Tensor[(4, 2, 6), float64] */
  };
  %804(%var_1824) /* ty=Tensor[(4, 2, 6), float64] */
}

def @func_8880(%var_8877: uint8, %var_8878: Tensor[(165), uint8], %var_8879: Tensor[(36), float32]) -> (Tensor[(1, 9, 16), float64], Tensor[(1, 9, 16), float64], uint8, Tensor[(165), uint8], Tensor[(72), uint32], Tensor[(36, 16), float64], Tensor[(36), float32]) {
  @func_8875(%var_8877, %var_8878, %var_8879) /* ty=(Tensor[(1, 9, 16), float64], Tensor[(1, 9, 16), float64], uint8, Tensor[(165), uint8], Tensor[(72), uint32], Tensor[(36, 16), float64], Tensor[(36), float32]) */
}

def @func_7919() -> Tensor[(1, 9, 16), float32] {
  %807 = fn () -> Tensor[(1, 9, 16), float32] {
    %805 = @func_5843() /* ty=Tensor[(1, 9, 16), float64] */;
    %806 = cast(%805, dtype="float32") /* ty=Tensor[(1, 9, 16), float32] */;
    sin(%806) /* ty=Tensor[(1, 9, 16), float32] */
  };
  %807() /* ty=Tensor[(1, 9, 16), float32] */
}

def @func_9307() -> (Tensor[(1, 9, 16), float64],) {
  %808 = @func_7602() /* ty=(Tensor[(1, 9, 16), float64],) */;
  %809 = %808.0;
  (%809,)
}

def @func_8095(%var_8093: Tensor[(6, 8, 15), float32]) -> (Tensor[(720), float32], Tensor[(1, 9, 16), float64], Tensor[(1, 9, 16), float64], Tensor[(1, 9, 16), float64], Tensor[(6, 8, 15), bool], Tensor[(1, 9, 16), float64], Tensor[(1, 9, 16), float32], Tensor[(16, 13, 9), uint16]) {
  @func_8092(%var_8093) /* ty=(Tensor[(720), float32], Tensor[(1, 9, 16), float64], Tensor[(1, 9, 16), float64], Tensor[(1, 9, 16), float64], Tensor[(6, 8, 15), bool], Tensor[(1, 9, 16), float64], Tensor[(1, 9, 16), float32], Tensor[(16, 13, 9), uint16]) */
}

def @func_9369(%var_9367: Tensor[(12, 12, 11), float32], %var_9368: Tensor[(48), float64]) -> (Tensor[(48), float64], Tensor[(15), float64], Tensor[(48), float64], Tensor[(12, 12, 11), bool], Tensor[(1, 9, 16), float64], uint8) {
  %827 = fn (%var_9330: Tensor[(12, 12, 11), float32], %var_9338: Tensor[(48), float64]) -> (Tensor[(48), float64], Tensor[(15), float64], Tensor[(48), float64], Tensor[(12, 12, 11), bool], Tensor[(1, 9, 16), float64], uint8) {
    %810 = cast(meta[relay.Constant][55] /* ty=Tensor[(15), float64] */, dtype="float64") /* ty=Tensor[(15), float64] */;
    %811 = cast(%var_9338, dtype="float64") /* ty=Tensor[(48), float64] */;
    %812 = reshape(%810, newshape=[1, 3, 5]) /* ty=Tensor[(1, 3, 5), float64] */;
    %813 = reshape(%811, newshape=[48]) /* ty=Tensor[(48), float64] */;
    %814 = @func_6313(%812, %813) /* ty=(Tensor[(2, 3, 5), float64], Tensor[(4, 2, 6), float64], Tensor[(48), float64]) */;
    %815 = cast(%var_9330, dtype="float32") /* ty=Tensor[(12, 12, 11), float32] */;
    %816 = tan(%815) /* ty=Tensor[(12, 12, 11), float32] */;
    %817 = cast(%var_9330, dtype="bool") /* ty=Tensor[(12, 12, 11), bool] */;
    %818 = shape_of(%816, dtype="int32") /* ty=Tensor[(3), int32] */;
    %819 = cast(%816, dtype="bool") /* ty=Tensor[(12, 12, 11), bool] */;
    %820 = dyn.reshape(%817, %818, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %821 = cast(meta[relay.Constant][56] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %822 = reshape(%821, newshape=[]) /* ty=uint8 */;
    %823 = @func_5680(%822) /* ty=(Tensor[(1, 9, 16), float64], Tensor[(11, 5, 3), float32], uint8, Tensor[(165), uint8], Tensor[(1, 9, 16), float64]) */;
    %824 = %814.2;
    %825 = logical_or(%819, %820) /* ty=Tensor[(12, 12, 11), bool] */;
    %826 = %823.0;
    (%824, meta[relay.Constant][55] /* ty=Tensor[(15), float64] */, %var_9338, %825, %826, meta[relay.Constant][56] /* ty=uint8 */)
  };
  %827(%var_9367, %var_9368) /* ty=(Tensor[(48), float64], Tensor[(15), float64], Tensor[(48), float64], Tensor[(12, 12, 11), bool], Tensor[(1, 9, 16), float64], uint8) */
}

def @func_6367(%var_6365: Tensor[(6, 16, 15), float32], %var_6366: Tensor[(2, 660), int8]) -> (Tensor[(6, 16, 15), float32], Tensor[(11, 8, 15), int8], Tensor[(2, 660), int8]) {
  %833 = fn (%var_6347: Tensor[(6, 16, 15), float32], %var_6360: Tensor[(2, 660), int8]) -> (Tensor[(6, 16, 15), float32], Tensor[(11, 8, 15), int8], Tensor[(2, 660), int8]) {
    %828 = cast(%var_6347, dtype="float32") /* ty=Tensor[(6, 16, 15), float32] */;
    %829 = cast(%var_6360, dtype="int8") /* ty=Tensor[(2, 660), int8] */;
    %830 = reshape(%829, newshape=[11, 8, 15]) /* ty=Tensor[(11, 8, 15), int8] */;
    %831 = tan(%828) /* ty=Tensor[(6, 16, 15), float32] */;
    %832 = @func_1421(%830) /* ty=Tensor[(11, 8, 15), int8] */;
    (%831, %832, %var_6360)
  };
  %833(%var_6365, %var_6366) /* ty=(Tensor[(6, 16, 15), float32], Tensor[(11, 8, 15), int8], Tensor[(2, 660), int8]) */
}

def @func_8589() -> (Tensor[(1, 9, 16), float32],) {
  %834 = @func_7918() /* ty=Tensor[(1, 9, 16), float32] */;
  (%834,)
}

def @func_10577() -> (Tensor[(1, 9, 16), float64], Tensor[(?, 9, 16), float32]) {
  @func_10575() /* ty=(Tensor[(1, 9, 16), float64], Tensor[(?, 9, 16), float32]) */
}

def @func_5727(%var_5724: Tensor[(182), uint64], %var_5725: uint8, %var_5726: Tensor[(165), uint8]) -> (Tensor[(1, 9, 16), float64], Tensor[(576), float64], Tensor[(182), uint64], Tensor[(11, 5, 3), uint8], uint8, Tensor[(165), uint8]) {
  %846 = fn (%var_5706: Tensor[(182), uint64], %var_5718: uint8, %var_5719: Tensor[(165), uint8]) -> (Tensor[(1, 9, 16), float64], Tensor[(576), float64], Tensor[(182), uint64], Tensor[(11, 5, 3), uint8], uint8, Tensor[(165), uint8]) {
    %835 = cast(%var_5706, dtype="uint64") /* ty=Tensor[(182), uint64] */;
    %836 = reshape(%835, newshape=[13, 2, 7]) /* ty=Tensor[(13, 2, 7), uint64] */;
    %837 = @func_983(%836) /* ty=(Tensor[(13, 2, 7), uint64], Tensor[(16, 9, 4), float64], Tensor[(1, 819), float64], Tensor[(576), float64], Tensor[(16, 9, 4), float64], Tensor[(16, 9, 4), float64]) */;
    %838 = cast(%var_5718, dtype="uint8") /* ty=uint8 */;
    %839 = cast(%var_5719, dtype="uint8") /* ty=Tensor[(165), uint8] */;
    %840 = reshape(%838, newshape=[]) /* ty=uint8 */;
    %841 = reshape(%839, newshape=[11, 5, 3]) /* ty=Tensor[(11, 5, 3), uint8] */;
    %842 = @func_3470(%840, %841) /* ty=(Tensor[(11, 5, 3), uint8], Tensor[(11, 5, 3), float32]) */;
    %843 = @func_5631() /* ty=Tensor[(1, 9, 16), float64] */;
    %844 = %837.3;
    %845 = %842.0;
    (%843, %844, %var_5706, %845, %var_5718, %var_5719)
  };
  %846(%var_5724, %var_5725, %var_5726) /* ty=(Tensor[(1, 9, 16), float64], Tensor[(576), float64], Tensor[(182), uint64], Tensor[(11, 5, 3), uint8], uint8, Tensor[(165), uint8]) */
}

def @func_11121(%var_11114: Tensor[(6, 9, 16), float32]) -> Tensor[(6, 9, 16), float64] {
  %847 = @func_6755() /* ty=(Tensor[(?, 9, 16), float32],) */;
  %848 = %847.0;
  %849 = cast(%848, dtype="float64") /* ty=Tensor[(?, 9, 16), float64] */;
  %850 = cast(%var_11114, dtype="float64") /* ty=Tensor[(6, 9, 16), float64] */;
  divide(%849, %850) /* ty=Tensor[(6, 9, 16), float64] */
}

def @func_8591() -> (Tensor[(1, 9, 16), float32],) {
  @func_8589() /* ty=(Tensor[(1, 9, 16), float32],) */
}

def @func_6055() -> (Tensor[(?, 9, 16), uint32], Tensor[(1, 9, 16), float32]) {
  %851 = @func_5742() /* ty=Tensor[(1, 9, 16), float64] */;
  %852 = cast(%851, dtype="float64") /* ty=Tensor[(1, 9, 16), float64] */;
  %853 = tan(%852) /* ty=Tensor[(1, 9, 16), float64] */;
  %854 = @func_5742() /* ty=Tensor[(1, 9, 16), float64] */;
  %855 = cast(%854, dtype="int64") /* ty=Tensor[(1, 9, 16), int64] */;
  %856 = shape_of(%851, dtype="int32") /* ty=Tensor[(3), int32] */;
  %857 = cast(%851, dtype="int64") /* ty=Tensor[(1, 9, 16), int64] */;
  %858 = dyn.reshape(%855, %856, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %859 = add(%857, %858) /* ty=Tensor[(?, 9, 16), int64] */;
  %860 = cast(%859, dtype="uint32") /* ty=Tensor[(?, 9, 16), uint32] */;
  %861 = shape_of(%853, dtype="int32") /* ty=Tensor[(3), int32] */;
  %862 = cast(%853, dtype="uint32") /* ty=Tensor[(1, 9, 16), uint32] */;
  %863 = dyn.reshape(%860, %861, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %864 = @func_5742() /* ty=Tensor[(1, 9, 16), float64] */;
  %865 = cast(%864, dtype="float32") /* ty=Tensor[(1, 9, 16), float32] */;
  %866 = maximum(%862, %863) /* ty=Tensor[(?, 9, 16), uint32] */;
  %867 = erf(%865) /* ty=Tensor[(1, 9, 16), float32] */;
  (%866, %867)
}

def @func_6589() -> Tensor[(1, 9, 16), float64] {
  %868 = fn () -> Tensor[(1, 9, 16), float64] {
    @func_6203() /* ty=Tensor[(1, 9, 16), float64] */
  };
  %868() /* ty=Tensor[(1, 9, 16), float64] */
}

def @func_5843() -> Tensor[(1, 9, 16), float64] {
  @func_5742() /* ty=Tensor[(1, 9, 16), float64] */
}

def @func_10788() -> Tensor[(1, 9, 16), float64] {
  %869 = fn () -> Tensor[(1, 9, 16), float64] {
    @func_7441() /* ty=Tensor[(1, 9, 16), float64] */
  };
  %869() /* ty=Tensor[(1, 9, 16), float64] */
}

def @func_7645(%var_7633: Tensor[(12, 4, 1), float32], %var_7634: Tensor[(12, 4, 11), float32]) -> Tensor[(12, 4, 11), float32] {
  %870 = cast(%var_7633, dtype="float32") /* ty=Tensor[(12, 4, 1), float32] */;
  %871 = cast(%var_7634, dtype="float32") /* ty=Tensor[(12, 4, 11), float32] */;
  divide(%870, %871) /* ty=Tensor[(12, 4, 11), float32] */
}

def @func_2445(%var_2444: Tensor[(6, 8, 15), float32]) -> Tensor[(6, 8, 15), float32] {
  %873 = fn (%var_2438: Tensor[(6, 8, 15), float32]) -> Tensor[(6, 8, 15), float32] {
    %872 = cast(%var_2438, dtype="float32") /* ty=Tensor[(6, 8, 15), float32] */;
    erf(%872) /* ty=Tensor[(6, 8, 15), float32] */
  };
  %873(%var_2444) /* ty=Tensor[(6, 8, 15), float32] */
}

def @func_9917() -> (Tensor[(1, 9, 16), float64],) {
  @func_9915() /* ty=(Tensor[(1, 9, 16), float64],) */
}

def @func_9915() -> (Tensor[(1, 9, 16), float64],) {
  %874 = @func_6847() /* ty=(Tensor[(1, 9, 16), float64], Tensor[(1, 9, 16), float64], Tensor[(1, 9, 16), float64]) */;
  %875 = %874.1;
  (%875,)
}

def @func_10434() -> Tensor[(1, 9, 16), float64] {
  %876 = @func_6847() /* ty=(Tensor[(1, 9, 16), float64], Tensor[(1, 9, 16), float64], Tensor[(1, 9, 16), float64]) */;
  %876.1
}

def @func_5579() -> (Tensor[(1, 9, 16), float64],) {
  @func_5577() /* ty=(Tensor[(1, 9, 16), float64],) */
}

def @func_9764() -> Tensor[(?, 9, 16), float32] {
  %878 = fn () -> Tensor[(?, 9, 16), float32] {
    %877 = @func_6755() /* ty=(Tensor[(?, 9, 16), float32],) */;
    %877.0
  };
  %878() /* ty=Tensor[(?, 9, 16), float32] */
}

def @func_8158() -> Tensor[(13, 9, 16), int16] {
  %883 = fn () -> Tensor[(13, 9, 16), int16] {
    %879 = @func_7539() /* ty=(Tensor[(1, 9, 16), float64],) */;
    %880 = %879.0;
    %881 = cast(%880, dtype="int16") /* ty=Tensor[(1, 9, 16), int16] */;
    %882 = cast(meta[relay.Constant][57] /* ty=Tensor[(13, 9, 16), float64] */, dtype="int16") /* ty=Tensor[(13, 9, 16), int16] */;
    bitwise_and(%881, %882) /* ty=Tensor[(13, 9, 16), int16] */
  };
  %883() /* ty=Tensor[(13, 9, 16), int16] */
}

def @func_10575() -> (Tensor[(1, 9, 16), float64], Tensor[(?, 9, 16), float32]) {
  %884 = @func_9526() /* ty=(Tensor[(1, 9, 16), float64], Tensor[(165), uint8], Tensor[(300), float32], Tensor[(3, 9, 16), float64], Tensor[(11, 8, 15), int8], Tensor[(1320), int8]) */;
  %885 = %884.0;
  %886 = @func_9763() /* ty=Tensor[(?, 9, 16), float32] */;
  (%885, %886)
}

def @func_8628() -> Tensor[(1, 9, 16), float64] {
  @func_8626() /* ty=Tensor[(1, 9, 16), float64] */
}

def @func_9246(%var_9243: Tensor[(10, 5, 12), float32], %var_9244: uint8, %var_9245: Tensor[(36), float32]) -> (Tensor[(165), uint8], Tensor[(36), float32], Tensor[(10, 5, 12), bool], Tensor[(1, 9, 16), float64]) {
  %902 = fn (%var_9202: Tensor[(10, 5, 12), float32], %var_9207: uint8, %var_9209: Tensor[(36), float32]) -> (Tensor[(165), uint8], Tensor[(36), float32], Tensor[(10, 5, 12), bool], Tensor[(1, 9, 16), float64]) {
    %887 = cast(%var_9202, dtype="float32") /* ty=Tensor[(10, 5, 12), float32] */;
    %888 = asinh(%887) /* ty=Tensor[(10, 5, 12), float32] */;
    %889 = cast(%888, dtype="bool") /* ty=Tensor[(10, 5, 12), bool] */;
    %890 = cast(%var_9207, dtype="bool") /* ty=bool */;
    %891 = cast(%var_9207, dtype="uint8") /* ty=uint8 */;
    %892 = cast(meta[relay.Constant][58] /* ty=Tensor[(165), uint8] */, dtype="uint8") /* ty=Tensor[(165), uint8] */;
    %893 = cast(%var_9209, dtype="float32") /* ty=Tensor[(36), float32] */;
    %894 = reshape(%891, newshape=[]) /* ty=uint8 */;
    %895 = reshape(%892, newshape=[165]) /* ty=Tensor[(165), uint8] */;
    %896 = reshape(%893, newshape=[36]) /* ty=Tensor[(36), float32] */;
    %897 = @func_8875(%894, %895, %896) /* ty=(Tensor[(1, 9, 16), float64], Tensor[(1, 9, 16), float64], uint8, Tensor[(165), uint8], Tensor[(72), uint32], Tensor[(36, 16), float64], Tensor[(36), float32]) */;
    %898 = %897.1;
    %899 = cast(%898, dtype="float64") /* ty=Tensor[(1, 9, 16), float64] */;
    %900 = greater(%889, %890) /* ty=Tensor[(10, 5, 12), bool] */;
    %901 = acos(%899) /* ty=Tensor[(1, 9, 16), float64] */;
    (meta[relay.Constant][58] /* ty=Tensor[(165), uint8] */, %var_9209, %900, %901)
  };
  %902(%var_9243, %var_9244, %var_9245) /* ty=(Tensor[(165), uint8], Tensor[(36), float32], Tensor[(10, 5, 12), bool], Tensor[(1, 9, 16), float64]) */
}

def @func_9387(%var_9385: Tensor[(5, 12, 5), float32]) -> (Tensor[(5, 12, 5), float32], Tensor[(11, 5, 3), uint8], uint8, Tensor[(165), uint8]) {
  @func_9384(%var_9385) /* ty=(Tensor[(5, 12, 5), float32], Tensor[(11, 5, 3), uint8], uint8, Tensor[(165), uint8]) */
}

def @func_8301() -> Tensor[(10, 9, 16), float32] {
  %904 = fn () -> Tensor[(10, 9, 16), float32] {
    %903 = @func_8286() /* ty=(Tensor[(10, 9, 16), float32],) */;
    %903.0
  };
  %904() /* ty=Tensor[(10, 9, 16), float32] */
}

def @func_3169(%var_3163: Tensor[(3, 4, 6), uint32], %var_3164: Tensor[(3, 4, 6), uint32], %var_3165: Tensor[(288, 2), float64], %var_3166: int32, %var_3167: Tensor[(9, 4), float32], %var_3168: Tensor[(1320), int8]) -> (Tensor[(3, 4, 6), uint32], Tensor[(7, 13, 9), bool], Tensor[(819), float64], Tensor[(576), float64], Tensor[(8, 4, 14), float64], int32, Tensor[(448), int32], Tensor[(660, 2), int8], Tensor[(9, 4), float32], Tensor[(1320), int8], Tensor[(16, 5), float64], Tensor[(288, 2), float64], Tensor[(16, 5), float64], Tensor[(16, 9, 4), float64]) {
  %958 = fn (%var_3073: Tensor[(3, 4, 6), uint32], %var_3074: Tensor[(3, 4, 6), uint32], %var_3088: Tensor[(288, 2), float64], %var_3098: int32, %var_3103: Tensor[(9, 4), float32], %var_3104: Tensor[(1320), int8]) -> (Tensor[(3, 4, 6), uint32], Tensor[(7, 13, 9), bool], Tensor[(819), float64], Tensor[(576), float64], Tensor[(8, 4, 14), float64], int32, Tensor[(448), int32], Tensor[(660, 2), int8], Tensor[(9, 4), float32], Tensor[(1320), int8], Tensor[(16, 5), float64], Tensor[(288, 2), float64], Tensor[(16, 5), float64], Tensor[(16, 9, 4), float64]) {
    %905 = cast(%var_3074, dtype="uint32") /* ty=Tensor[(3, 4, 6), uint32] */;
    %906 = shape_of(%var_3073, dtype="int32") /* ty=Tensor[(3), int32] */;
    %907 = cast(%var_3073, dtype="uint32") /* ty=Tensor[(3, 4, 6), uint32] */;
    %908 = dyn.reshape(%905, %906, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %909 = cast(meta[relay.Constant][59] /* ty=Tensor[(819), float64] */, dtype="float64") /* ty=Tensor[(819), float64] */;
    %910 = cast(meta[relay.Constant][59] /* ty=Tensor[(819), float64] */, dtype="float64") /* ty=Tensor[(819), float64] */;
    %911 = cast(%var_3088, dtype="float64") /* ty=Tensor[(288, 2), float64] */;
    %912 = reshape(%909, newshape=[7, 13, 9]) /* ty=Tensor[(7, 13, 9), float64] */;
    %913 = reshape(%910, newshape=[7, 13, 9]) /* ty=Tensor[(7, 13, 9), float64] */;
    %914 = reshape(%911, newshape=[576]) /* ty=Tensor[(576), float64] */;
    %915 = @func_578(%912, %913, %914) /* ty=(Tensor[(16, 9, 4), float64], Tensor[(576), float64], Tensor[(16, 9, 4), float64], Tensor[(7, 13, 9), bool], Tensor[(16, 9, 4), float64], Tensor[(7, 13, 9), float32], Tensor[(16, 9, 4), float64]) */;
    %916 = cast(%var_3088, dtype="float64") /* ty=Tensor[(288, 2), float64] */;
    %917 = reshape(%916, newshape=[576]) /* ty=Tensor[(576), float64] */;
    %918 = @func_2463(%917) /* ty=(Tensor[(16, 5), float64], Tensor[(576), float64], Tensor[(819), float64], Tensor[(576), float64]) */;
    %919 = cast(%var_3098, dtype="int32") /* ty=int32 */;
    %920 = cast(meta[relay.Constant][60] /* ty=Tensor[(448), int32] */, dtype="int32") /* ty=Tensor[(448), int32] */;
    %921 = cast(meta[relay.Constant][59] /* ty=Tensor[(819), float64] */, dtype="float64") /* ty=Tensor[(819), float64] */;
    %922 = cast(%var_3088, dtype="float64") /* ty=Tensor[(288, 2), float64] */;
    %923 = reshape(%919, newshape=[]) /* ty=int32 */;
    %924 = reshape(%920, newshape=[8, 4, 14]) /* ty=Tensor[(8, 4, 14), int32] */;
    %925 = reshape(%921, newshape=[819]) /* ty=Tensor[(819), float64] */;
    %926 = reshape(%922, newshape=[576]) /* ty=Tensor[(576), float64] */;
    %927 = @func_1162(%923, %924, %925, %926) /* ty=(Tensor[(8, 4, 14), bool], Tensor[(8, 4, 14), float64], Tensor[(819), float64], Tensor[(7, 13, 9), bool], Tensor[(576), uint32], Tensor[(16, 9, 4), float32]) */;
    %928 = cast(%var_3103, dtype="float32") /* ty=Tensor[(9, 4), float32] */;
    %929 = cast(%var_3104, dtype="int8") /* ty=Tensor[(1320), int8] */;
    %930 = reshape(%928, newshape=[4, 3, 3]) /* ty=Tensor[(4, 3, 3), float32] */;
    %931 = reshape(%929, newshape=[660, 2]) /* ty=Tensor[(660, 2), int8] */;
    %932 = @func_2260(%930, %931) /* ty=(Tensor[(4, 3, 3), float32], Tensor[(11, 8, 15), int8], Tensor[(660, 2), int8]) */;
    %933 = cast(%var_3088, dtype="float64") /* ty=Tensor[(288, 2), float64] */;
    %934 = reshape(%933, newshape=[576]) /* ty=Tensor[(576), float64] */;
    %935 = @func_2463(%934) /* ty=(Tensor[(16, 5), float64], Tensor[(576), float64], Tensor[(819), float64], Tensor[(576), float64]) */;
    %936 = cast(%var_3088, dtype="float64") /* ty=Tensor[(288, 2), float64] */;
    %937 = sin(%936) /* ty=Tensor[(288, 2), float64] */;
    %938 = cast(%937, dtype="float64") /* ty=Tensor[(288, 2), float64] */;
    %939 = cast(%937, dtype="float64") /* ty=Tensor[(288, 2), float64] */;
    %940 = reshape(%939, newshape=[576]) /* ty=Tensor[(576), float64] */;
    %941 = @func_2463(%940) /* ty=(Tensor[(16, 5), float64], Tensor[(576), float64], Tensor[(819), float64], Tensor[(576), float64]) */;
    %942 = cast(meta[relay.Constant][59] /* ty=Tensor[(819), float64] */, dtype="float64") /* ty=Tensor[(819), float64] */;
    %943 = cast(meta[relay.Constant][59] /* ty=Tensor[(819), float64] */, dtype="float64") /* ty=Tensor[(819), float64] */;
    %944 = %918.3;
    %945 = cast(%944, dtype="float64") /* ty=Tensor[(576), float64] */;
    %946 = reshape(%942, newshape=[7, 13, 9]) /* ty=Tensor[(7, 13, 9), float64] */;
    %947 = reshape(%943, newshape=[7, 13, 9]) /* ty=Tensor[(7, 13, 9), float64] */;
    %948 = reshape(%945, newshape=[576]) /* ty=Tensor[(576), float64] */;
    %949 = @func_578(%946, %947, %948) /* ty=(Tensor[(16, 9, 4), float64], Tensor[(576), float64], Tensor[(16, 9, 4), float64], Tensor[(7, 13, 9), bool], Tensor[(16, 9, 4), float64], Tensor[(7, 13, 9), float32], Tensor[(16, 9, 4), float64]) */;
    %950 = logical_xor(%907, %908) /* ty=Tensor[(3, 4, 6), uint32] */;
    %951 = %915.3;
    %952 = %927.1;
    %953 = %932.2;
    %954 = %935.0;
    %955 = log10(%938) /* ty=Tensor[(288, 2), float64] */;
    %956 = %941.0;
    %957 = %949.4;
    (%950, %951, meta[relay.Constant][59] /* ty=Tensor[(819), float64] */, %944, %952, %var_3098, meta[relay.Constant][60] /* ty=Tensor[(448), int32] */, %953, %var_3103, %var_3104, %954, %955, %956, %957)
  };
  %958(%var_3163, %var_3164, %var_3165, %var_3166, %var_3167, %var_3168) /* ty=(Tensor[(3, 4, 6), uint32], Tensor[(7, 13, 9), bool], Tensor[(819), float64], Tensor[(576), float64], Tensor[(8, 4, 14), float64], int32, Tensor[(448), int32], Tensor[(660, 2), int8], Tensor[(9, 4), float32], Tensor[(1320), int8], Tensor[(16, 5), float64], Tensor[(288, 2), float64], Tensor[(16, 5), float64], Tensor[(16, 9, 4), float64]) */
}

def @func_11477(%var_11433: uint32, %var_11434: Tensor[(5, 1, 16), uint32]) -> (Tensor[(5, 1, 16), uint16], Tensor[(5, 1, 16), int64], Tensor[(1, 9, 16), float64]) {
  %959 = cast(%var_11433, dtype="uint16") /* ty=uint16 */;
  %960 = cast(%var_11434, dtype="uint16") /* ty=Tensor[(5, 1, 16), uint16] */;
  %961 = cast(%var_11433, dtype="uint32") /* ty=uint32 */;
  %962 = cast(%var_11434, dtype="uint32") /* ty=Tensor[(5, 1, 16), uint32] */;
  %963 = add(%961, %962) /* ty=Tensor[(5, 1, 16), uint32] */;
  %964 = cast(%963, dtype="int64") /* ty=Tensor[(5, 1, 16), int64] */;
  %965 = cast(%var_11433, dtype="int64") /* ty=int64 */;
  %966 = maximum(%959, %960) /* ty=Tensor[(5, 1, 16), uint16] */;
  %967 = subtract(%964, %965) /* ty=Tensor[(5, 1, 16), int64] */;
  %968 = @func_8626() /* ty=Tensor[(1, 9, 16), float64] */;
  (%966, %967, %968)
}

def @func_10209(%var_10206: Tensor[(13, 6, 8), uint16], %var_10207: Tensor[(13, 6, 8), uint16], %var_10208: Tensor[(1320), int8]) -> (Tensor[(13, 6, 8), uint16], Tensor[(11, 8, 15), int8], Tensor[(1320), int8]) {
  @func_10204(%var_10206, %var_10207, %var_10208) /* ty=(Tensor[(13, 6, 8), uint16], Tensor[(11, 8, 15), int8], Tensor[(1320), int8]) */
}

def @func_8287() -> (Tensor[(10, 9, 16), float32],) {
  %971 = fn () -> (Tensor[(10, 9, 16), float32],) {
    %969 = @func_7364() /* ty=(Tensor[(10, 9, 16), float32], Tensor[(1, 9, 16), float64]) */;
    %970 = %969.0;
    (%970,)
  };
  %971() /* ty=(Tensor[(10, 9, 16), float32],) */
}

def @func_9445(%var_9444: Tensor[(48), float64]) -> (Tensor[(720), float32], uint8, Tensor[(1584), float32], Tensor[(48), float64]) {
  %979 = fn (%var_9421: Tensor[(48), float64]) -> (Tensor[(720), float32], uint8, Tensor[(1584), float32], Tensor[(48), float64]) {
    %972 = cast(meta[relay.Constant][61] /* ty=Tensor[(1584), float32] */, dtype="float32") /* ty=Tensor[(1584), float32] */;
    %973 = cast(%var_9421, dtype="float64") /* ty=Tensor[(48), float64] */;
    %974 = reshape(%972, newshape=[12, 12, 11]) /* ty=Tensor[(12, 12, 11), float32] */;
    %975 = reshape(%973, newshape=[48]) /* ty=Tensor[(48), float64] */;
    %976 = @func_9366(%974, %975) /* ty=(Tensor[(48), float64], Tensor[(15), float64], Tensor[(48), float64], Tensor[(12, 12, 11), bool], Tensor[(1, 9, 16), float64], uint8) */;
    %977 = @func_7177() /* ty=Tensor[(720), float32] */;
    %978 = %976.5;
    (%977, %978, meta[relay.Constant][61] /* ty=Tensor[(1584), float32] */, %var_9421)
  };
  %979(%var_9444) /* ty=(Tensor[(720), float32], uint8, Tensor[(1584), float32], Tensor[(48), float64]) */
}

def @func_7788() -> Tensor[(1, 9, 16), float64] {
  %980 = fn () -> Tensor[(1, 9, 16), float64] {
    @func_5843() /* ty=Tensor[(1, 9, 16), float64] */
  };
  %980() /* ty=Tensor[(1, 9, 16), float64] */
}

def @func_10143(%var_10141: Tensor[(1, 1584), float64]) -> (Tensor[(1, 9, 16), float64], Tensor[(11, 9, 16), int16], Tensor[(1, 1584), float64]) {
  @func_10140(%var_10141) /* ty=(Tensor[(1, 9, 16), float64], Tensor[(11, 9, 16), int16], Tensor[(1, 1584), float64]) */
}

def @func_9056(%var_9054: Tensor[(16, 9, 16), float64], %var_9055: Tensor[(210), float32]) -> (Tensor[(16, 9, 16), int16], Tensor[(1, 9, 16), float64], Tensor[(210), float32], Tensor[(16, 9, 16), float32]) {
  @func_9052(%var_9054, %var_9055) /* ty=(Tensor[(16, 9, 16), int16], Tensor[(1, 9, 16), float64], Tensor[(210), float32], Tensor[(16, 9, 16), float32]) */
}

def @func_6316(%var_6314: Tensor[(1, 3, 5), float64], %var_6315: Tensor[(48), float64]) -> (Tensor[(2, 3, 5), float64], Tensor[(4, 2, 6), float64], Tensor[(48), float64]) {
  %987 = fn (%var_6295: Tensor[(1, 3, 5), float64], %var_6310: Tensor[(48), float64]) -> (Tensor[(2, 3, 5), float64], Tensor[(4, 2, 6), float64], Tensor[(48), float64]) {
    %981 = cast(%var_6295, dtype="float64") /* ty=Tensor[(1, 3, 5), float64] */;
    %982 = cast(meta[relay.Constant][62] /* ty=Tensor[(2, 3, 5), float64] */, dtype="float64") /* ty=Tensor[(2, 3, 5), float64] */;
    %983 = cast(%var_6310, dtype="float64") /* ty=Tensor[(48), float64] */;
    %984 = reshape(%983, newshape=[4, 2, 6]) /* ty=Tensor[(4, 2, 6), float64] */;
    %985 = floor_divide(%981, %982) /* ty=Tensor[(2, 3, 5), float64] */;
    %986 = @func_1823(%984) /* ty=Tensor[(4, 2, 6), float64] */;
    (%985, %986, %var_6310)
  };
  %987(%var_6314, %var_6315) /* ty=(Tensor[(2, 3, 5), float64], Tensor[(4, 2, 6), float64], Tensor[(48), float64]) */
}

def @func_10719() -> (Tensor[(1, 9, 16), float64], Tensor[(1, 9, 16), float64], Tensor[(16, 13, 9), float32], Tensor[(1872), uint64]) {
  @func_10717() /* ty=(Tensor[(1, 9, 16), float64], Tensor[(1, 9, 16), float64], Tensor[(16, 13, 9), float32], Tensor[(1872), uint64]) */
}

def @func_11374() -> Tensor[(1, 9, 16), float32] {
  %988 = fn () -> Tensor[(1, 9, 16), float32] {
    @func_10001() /* ty=Tensor[(1, 9, 16), float32] */
  };
  %988() /* ty=Tensor[(1, 9, 16), float32] */
}

def @func_583(%var_580: Tensor[(7, 13, 9), float64], %var_581: Tensor[(7, 13, 9), float64], %var_582: Tensor[(576), float64]) -> (Tensor[(16, 9, 4), float64], Tensor[(576), float64], Tensor[(16, 9, 4), float64], Tensor[(7, 13, 9), bool], Tensor[(16, 9, 4), float64], Tensor[(7, 13, 9), float32], Tensor[(16, 9, 4), float64]) {
  @func_578(%var_580, %var_581, %var_582) /* ty=(Tensor[(16, 9, 4), float64], Tensor[(576), float64], Tensor[(16, 9, 4), float64], Tensor[(7, 13, 9), bool], Tensor[(16, 9, 4), float64], Tensor[(7, 13, 9), float32], Tensor[(16, 9, 4), float64]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen458/build/output.py:2663: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen458/build/output.py", line 2668, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(18) tvmgen_default_fused_cosh_kernel0(double* __restrict__ T_cosh, double* __restrict__ placeholder) {
  T_cosh[(((int)threadIdx.x))] = cosh(placeholder[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


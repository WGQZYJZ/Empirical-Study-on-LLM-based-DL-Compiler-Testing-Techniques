import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_358 = relay.var("var_358", dtype = "float64", shape = (16, 9, 4))#candidate|358|(16, 9, 4)|var|float64
uop_359 = relay.tan(var_358.astype('float64')) # shape=(16, 9, 4)
output = relay.Tuple([uop_359,])
output2 = relay.Tuple([uop_359,])
func_363 = relay.Function([var_358,], output)
mod['func_363'] = func_363
mod = relay.transform.InferType()(mod)
mutated_mod['func_363'] = func_363
mutated_mod = relay.transform.InferType()(mutated_mod)
var_364 = relay.var("var_364", dtype = "float64", shape = (16, 9, 4))#candidate|364|(16, 9, 4)|var|float64
func_363_call = mutated_mod.get_global_var('func_363')
call_365 = func_363_call(var_364)
output = call_365
func_366 = relay.Function([var_364], output)
mutated_mod['func_366'] = func_366
mutated_mod = relay.transform.InferType()(mutated_mod)
var_530 = relay.var("var_530", dtype = "float64", shape = (7, 13, 9))#candidate|530|(7, 13, 9)|var|float64
var_531 = relay.var("var_531", dtype = "float64", shape = (7, 13, 9))#candidate|531|(7, 13, 9)|var|float64
bop_532 = relay.equal(var_530.astype('bool'), relay.reshape(var_531.astype('bool'), relay.shape_of(var_530))) # shape=(7, 13, 9)
func_363_call = mod.get_global_var('func_363')
func_366_call = mutated_mod.get_global_var('func_366')
var_537 = relay.var("var_537", dtype = "float64", shape = (576,))#candidate|537|(576,)|var|float64
call_536 = relay.TupleGetItem(func_363_call(relay.reshape(var_537.astype('float64'), [16, 9, 4])), 0)
call_538 = relay.TupleGetItem(func_366_call(relay.reshape(var_537.astype('float64'), [16, 9, 4])), 0)
func_363_call = mod.get_global_var('func_363')
func_366_call = mutated_mod.get_global_var('func_366')
call_543 = relay.TupleGetItem(func_363_call(relay.reshape(var_537.astype('float64'), [16, 9, 4])), 0)
call_544 = relay.TupleGetItem(func_366_call(relay.reshape(var_537.astype('float64'), [16, 9, 4])), 0)
bop_554 = relay.minimum(var_537.astype('float64'), relay.reshape(call_543.astype('float64'), relay.shape_of(var_537))) # shape=(576,)
bop_557 = relay.minimum(var_537.astype('float64'), relay.reshape(call_544.astype('float64'), relay.shape_of(var_537))) # shape=(576,)
func_363_call = mod.get_global_var('func_363')
func_366_call = mutated_mod.get_global_var('func_366')
call_560 = relay.TupleGetItem(func_363_call(relay.reshape(call_543.astype('float64'), [16, 9, 4])), 0)
call_561 = relay.TupleGetItem(func_366_call(relay.reshape(call_543.astype('float64'), [16, 9, 4])), 0)
bop_564 = relay.greater_equal(var_531.astype('bool'), relay.reshape(bop_532.astype('bool'), relay.shape_of(var_531))) # shape=(7, 13, 9)
func_363_call = mod.get_global_var('func_363')
func_366_call = mutated_mod.get_global_var('func_366')
call_572 = relay.TupleGetItem(func_363_call(relay.reshape(call_543.astype('float64'), [16, 9, 4])), 0)
call_573 = relay.TupleGetItem(func_366_call(relay.reshape(call_543.astype('float64'), [16, 9, 4])), 0)
uop_574 = relay.acos(bop_532.astype('float32')) # shape=(7, 13, 9)
func_363_call = mod.get_global_var('func_363')
func_366_call = mutated_mod.get_global_var('func_366')
call_576 = relay.TupleGetItem(func_363_call(relay.reshape(bop_554.astype('float64'), [16, 9, 4])), 0)
call_577 = relay.TupleGetItem(func_366_call(relay.reshape(bop_554.astype('float64'), [16, 9, 4])), 0)
output = relay.Tuple([call_536,bop_554,call_560,bop_564,call_572,uop_574,call_576,])
output2 = relay.Tuple([call_538,bop_557,call_561,bop_564,call_573,uop_574,call_577,])
func_578 = relay.Function([var_530,var_531,var_537,], output)
mod['func_578'] = func_578
mod = relay.transform.InferType()(mod)
mutated_mod['func_578'] = func_578
mutated_mod = relay.transform.InferType()(mutated_mod)
func_578_call = mutated_mod.get_global_var('func_578')
var_580 = relay.var("var_580", dtype = "float64", shape = (7, 13, 9))#candidate|580|(7, 13, 9)|var|float64
var_581 = relay.var("var_581", dtype = "float64", shape = (7, 13, 9))#candidate|581|(7, 13, 9)|var|float64
var_582 = relay.var("var_582", dtype = "float64", shape = (576,))#candidate|582|(576,)|var|float64
call_579 = func_578_call(var_580,var_581,var_582,)
output = call_579
func_583 = relay.Function([var_580,var_581,var_582,], output)
mutated_mod['func_583'] = func_583
mutated_mod = relay.transform.InferType()(mutated_mod)
const_951 = relay.const(9, dtype = "uint64")#candidate|951|()|const|uint64
var_952 = relay.var("var_952", dtype = "uint64", shape = (13, 2, 7))#candidate|952|(13, 2, 7)|var|uint64
bop_953 = relay.left_shift(const_951.astype('uint64'), var_952.astype('uint64')) # shape=(13, 2, 7)
func_578_call = mod.get_global_var('func_578')
func_583_call = mutated_mod.get_global_var('func_583')
const_957 = relay.const([[6.782014,3.086548,8.003126,2.134204,5.875773,6.350369,3.962026,7.845267,1.924817,6.806871,-4.812761,-3.812771,-4.238998,7.968370,0.932836,-0.263188,2.774980,-6.879819,-4.986692,3.281907,-1.535550,7.242548,4.842402,0.825024,-8.358525,-4.094025,-9.948219,6.025735,1.649027,6.578172,4.412557,0.325971,-6.310431,7.826646,6.461411,-1.212824,-7.019612,3.769779,-4.221420,-9.491505,9.390336,4.763200,6.880561,-3.786688,5.548357,1.305117,-4.552605,-3.658096,-1.616805,3.078550,-2.047321,-1.813455,-1.394828,-0.961843,-0.428653,1.608726,-7.496673,-5.537728,1.171311,-6.163220,-0.656777,9.412142,-0.904303,0.489205,-1.645697,-3.357928,-7.480323,5.111509,-8.100415,-9.446907,-1.235245,-6.922784,-0.011294,-5.204148,7.375761,4.301125,-2.398435,-7.743893,-4.442426,-0.233563,2.795804,0.156259,4.760966,-8.811191,-6.181338,-7.142917,-6.325204,7.398896,8.667609,-2.456226,-9.388385,2.682186,-1.549155,4.019837,1.799167,3.493371,-2.648960,5.723237,4.605856,0.702781,-0.200993,-6.392542,-0.193080,0.636681,9.530590,3.388542,7.327986,7.609061,-1.356599,-7.330075,-6.239699,-0.534397,-4.986760,-9.605498,2.901231,-3.692877,0.095578,-2.284904,-4.407976,-1.041876,1.412268,-5.024995,-8.839700,4.157967,-6.846198,-2.957106,7.200884,-4.607439,-2.740638,-7.988894,-9.159296,3.798501,7.604282,-1.641435,-1.283353,-8.760017,-5.521207,-3.281534,-9.497649,9.848294,-3.768528,8.544560,1.433894,5.261861,-4.215098,3.466802,-9.680027,-2.468001,5.683813,-9.172787,0.438049,8.266309,0.532103,-8.663160,0.843329,-4.595707,-5.519592,-0.195581,5.832002,1.846710,0.431711,4.012905,-9.248822,8.916200,-3.756541,6.497325,-6.790194,4.111136,-0.627521,7.829686,8.232052,2.295372,0.612370,9.958910,-2.852631,-6.859379,-8.486654,8.942960,-0.618050,-5.460644,-3.456412,-2.558699,-5.727489,-5.073223,-3.056882,2.064396,-1.444060,4.861536,-9.911279,-0.388243,9.802925,-4.214476,-8.172574,-5.647257,-1.759534,7.960293,-2.377662,-2.505338,5.090460,-3.740380,-8.278773,-6.176599,-6.518226,3.592520,-0.386885,2.442052,-1.929229,4.598618,-1.089100,7.378641,-5.682367,1.467014,9.034701,-2.112477,9.017370,-1.014264,-7.412300,-9.513407,-1.584911,8.916355,2.589912,-8.153630,-0.595666,0.537257,-7.039421,0.452875,7.049936,5.961830,-5.213389,-7.970463,-9.799234,-5.496094,9.607670,-4.540152,-1.717719,-8.453511,-0.949438,5.667237,2.016985,2.826406,-6.551324,-1.429514,-7.714152,-8.871441,1.533651,-8.394553,9.472543,-1.159110,2.586430,-0.590531,-6.988458,8.848409,6.798273,7.392543,1.339110,-6.390168,-5.350468,-7.971661,6.902798,3.746630,8.352101,-5.964732,-7.661739,9.130656,0.941515,7.816440,-5.476015,4.022058,-9.524347,-8.780999,2.824539,3.375807,-6.063468,-6.063401,-7.437833,-7.251878,8.652216,-3.692318,-8.221549,6.565908,0.525388,4.054197,-7.920995,2.449168,-0.736409,-9.331054,4.715120,6.338067,5.159418,1.787605,2.101194,9.892510,-3.950515,9.547401,3.950502,3.219917,4.386645,8.108407,2.386459,-2.142787,-0.898987,3.456775,-7.306076,9.839346,1.332758,5.350117,4.242187,7.812230,-2.219754,-4.841646,-3.895992,-1.734447,-8.007793,7.374064,3.458716,1.801458,-9.335418,0.874028,5.987421,8.509619,3.220411,-8.214103,8.527049,-7.532479,-8.108045,-1.361412,-4.295975,-4.880209,-2.205019,-7.378880,-6.457840,6.371405,6.367045,8.331258,-7.683776,0.473116,-0.445888,-0.975482,2.584451,7.093815,5.219927,-0.705397,0.135828,-4.549187,-3.533399,6.738793,0.606100,-8.617069,7.133627,7.676159,-6.812728,1.962197,-6.098016,-3.522335,-4.075895,2.205777,7.473470,-8.865308,0.999032,-4.595681,5.679548,-7.799639,4.556987,9.776727,-3.465153,-2.265033,9.741617,8.782435,9.825282,-9.165783,-8.601564,0.535905,1.713340,-1.604692,-7.672215,3.897142,-3.962058,-8.898149,-0.355728,-0.672909,0.811809,1.754218,-8.277861,-5.341566,-9.372203,4.195336,5.146442,5.442829,-9.819247,6.643811,-5.507209,7.036411,-0.975622,-8.592203,3.099324,4.988392,7.881573,-6.975943,-0.227595,3.904108,3.599802,4.250619,5.305376,7.682739,-3.811120,6.200524,9.025779,9.165594,-7.567433,-2.315039,-1.151893,-6.425232,-4.481339,0.984663,-0.301040,-7.013626,7.180227,-1.056912,-9.996972,9.424297,-2.179035,1.053930,8.346150,1.745351,5.663594,1.462188,4.987804,7.063938,-8.125110,-6.122927,-5.830940,-2.245856,-8.851683,-0.150727,1.479736,4.072419,-3.031126,7.535152,1.169908,-6.735119,1.243165,-3.109631,7.718096,-9.401273,-4.784270,-1.736876,4.585794,0.385555,4.558689,-4.336527,6.908719,-2.031630,1.619805,7.085057,-3.651515,0.246891,0.803190,5.392775,5.371760,7.748065,-7.974261,-9.685185,-0.280855,-4.328331,-8.454282,-2.497768,-7.874691,9.267786,8.254878,5.390319,-8.844717,9.502382,-7.098248,6.555256,-9.827324,-6.091952,-0.208033,8.236446,-6.924511,5.144221,-5.554239,-1.432698,-4.686486,-2.252178,-7.971720,-6.864394,-9.958605,-0.930751,-8.493958,8.104492,-3.794011,0.322993,-1.259412,-1.745869,-1.329068,0.987724,8.719372,-8.390013,-5.783011,6.993261,-2.731456,1.670682,4.375867,7.574645,9.885502,9.731552,-7.359798,5.253602,2.474865,8.946097,6.367580,-2.220009,-5.715819,-3.743938,-2.458275,0.653558,0.522876,5.414289,0.769048,-3.693150,9.738668,-6.083305,9.842395,7.843119,1.932153,-1.144104,5.205640,-5.614380,5.062785,-5.904223,-0.581301,-1.060504,0.063259,4.938700,5.887582,4.758347,7.201133,-0.159369,3.375142,6.763910,6.022921,5.895299,-7.649219,-3.427350,9.916345,2.640708,6.379175,9.603666,-2.219848,1.368720,5.475556,-9.471060,-9.627845,6.350059,-6.492879,1.364985,-3.868331,7.964232,-8.574226,0.310632,-2.653011,5.786322,-6.232152,-3.421712,2.231901,-1.297245,2.214156,0.222371,-3.784058,5.533004,2.557801,-1.327090,-1.124615,6.340926,2.197027,-9.350830,4.309615,7.310053,-9.249578,-9.567651,0.929790,-2.764960,-3.667540,1.058080,-4.726942,5.252062,6.632220,-0.515726,5.249584,-0.241227,-1.193381,6.290885,-6.690672,7.273328,-9.044459,5.374374,2.644855,-5.818714,0.867196,-0.103781,9.658342,-4.551434,3.904612,-5.709446,-2.527998,8.808989,6.969317,-1.868154,-8.959565,-8.341406,-0.016728,-7.782996,-1.064141,9.744464,-5.362741,2.280922,1.854469,-6.917983,-4.648334,-9.238251,2.623880,5.078096,-5.562520,9.810101,-4.270984,1.993255,5.238371,-2.713504,8.000124,5.269636,9.900921,2.596832,-6.376510,3.911772,-4.706389,4.174553,1.442711,-1.953525,9.756676,-0.644506,8.171552,-3.018550,-6.802126,-1.771283,-9.250770,2.546543,8.117383,-1.763264,2.696448,-6.648530,4.371736,3.953544,6.576070,-3.029515,2.379654,-5.952317,1.123367,5.245218,6.181565,9.676593,-2.527168,7.464014,4.585156,8.148874,7.260415,-0.766617,-0.805114,3.091864,9.094783,-9.596437,4.553031,2.825099,5.762281,-4.157337,4.476335,-7.225941,-8.757516,9.639327,0.110976,-5.030608,-2.669947,-4.719432,5.256507,-9.216421,0.713471,9.889124,4.575524,8.480969,-6.423049,1.317847,9.517778,3.605295,9.595675,7.573114,6.666263,4.220149,-2.359030,-6.730094,-9.002189,-4.825715,7.539111,-3.963503,2.876435,3.179684,1.349753,0.021931,-8.006475,-4.893371,7.587855,9.323738,-1.982454,-5.531794,-2.778994,-0.101134,-5.285235,-8.024294,-4.958926,-3.757953,3.512770,8.635555,7.995411,9.251887,9.157546,8.792057,-4.289114,-2.438009,-7.235479,3.394535,9.022788,2.763349,8.306802,-1.568737,-9.310419,3.164083,-2.251498,-1.477020,0.944825,-6.632427,8.331844,6.444343,-9.914645,-5.481859,-9.670405,7.369187,3.187639,2.460542,-4.907457,9.857274,6.394977,-6.945864,2.377957,7.868623,3.376019,-0.778910,4.391935,-7.854169,3.397620,-8.123169,-6.935921,9.444839,-8.274912,-4.147957,-2.101048,3.254483,-6.250291,-5.715858,-5.206015,-5.576440,4.444917,5.201087,-2.646937,-1.111341,-9.256836,-3.598194,-6.151697,2.167739,-2.531332,5.288860,3.769459,-9.823611,1.835732,2.404104,-0.789518,0.150896,-1.569119,4.849044,-4.310975,-3.257693,-8.719383,3.982971,3.254755,-5.827567,6.318736,-2.546213,-7.787082,-4.473293,0.748219,-4.492448,-3.492803,4.874996,-6.957152,1.472591,-0.693363,4.360247,-8.153346,2.768080,0.952479,-1.493499,-5.914184,8.747804,5.996221,-8.972512,-8.871796,1.825736,-3.970047,7.370648,2.787705,4.769575,2.614057]], dtype = "float64")#candidate|957|(1, 819)|const|float64
const_958 = relay.const([6.434962,4.189969,-6.400935,6.839875,5.381041,6.536192,-0.456012,-7.804462,4.755166,7.657564,-6.622925,4.762224,8.381419,-1.756675,3.623948,-4.457282,0.800260,-6.454438,-3.462935,1.914567,8.189996,2.537301,3.400007,-8.335896,-1.429145,7.389978,-3.619667,-7.107906,1.746471,8.331556,-0.502139,3.470119,2.602358,9.027245,4.079647,7.731211,3.366168,-2.556819,-4.097020,-8.482446,-3.708904,-8.875170,-9.756544,7.448919,5.435787,-8.400406,-4.879612,7.776743,-6.018248,7.294414,0.092152,-9.181748,-6.841066,-7.686811,-9.567306,6.986291,-1.911646,9.084365,-4.860430,-2.437094,8.218496,8.317392,0.937634,-7.287265,0.054195,6.729073,-1.590105,-8.012896,3.771819,-1.178926,8.106059,-7.562378,7.952913,-2.376598,-7.173158,7.474064,6.211173,0.885240,4.339035,-7.286229,-8.226529,2.156537,-1.637012,6.376683,-5.578615,1.390135,4.034755,-4.802423,6.235433,-8.787347,2.833101,-6.727658,-1.689984,7.982412,8.977436,-8.406684,-1.532014,-4.139129,4.940295,-7.096156,1.556411,0.797843,8.742738,4.273594,-2.211336,9.820730,2.252316,6.129339,1.802426,8.473769,-3.426694,-8.594771,-0.708763,4.354773,-2.500342,6.800700,6.482518,-6.180354,-2.491056,-3.938668,3.306526,9.073925,0.753644,-4.123393,6.490738,9.220014,-1.939086,-7.327664,-9.786348,-6.110515,5.774345,8.351841,8.869072,-4.534809,5.651933,-5.660876,-3.339619,-1.898304,-3.975920,-0.510271,-8.787875,-0.796663,-6.520783,1.244644,-3.525864,4.236975,-0.089469,7.660415,5.759888,2.834399,-4.686020,4.466527,4.515698,-9.835430,9.766871,-1.436172,-0.616240,-6.810116,4.312024,4.278440,5.938387,-8.753049,7.901386,2.584905,9.017015,-1.941743,9.049504,-5.415977,5.842386,-2.661767,5.432762,-4.785257,0.200444,-9.458366,5.189331,8.410892,9.741039,-8.632986,9.812765,3.776503,-2.978427,-7.873061,9.257526,9.438325,5.790236,8.033169,-7.136693,-5.279896,-2.084071,-5.425565,-7.509435,5.417732,4.017267,3.160061,9.546007,0.913661,-5.725763,7.312257,-5.714469,-3.419488,8.568099,5.670741,5.419937,6.846263,-2.078131,4.882377,6.098882,-0.811625,-6.300827,6.196749,-5.112989,-3.964997,-2.456314,5.526228,-0.971001,-1.249612,9.118976,7.731188,4.078480,0.343469,-8.305148,8.367213,0.266191,4.787185,1.974938,4.739871,7.423023,-2.749017,-1.269982,2.624513,3.070220,-6.720650,9.472284,7.868616,-4.279692,-2.693170,-4.202642,1.589610,-5.369421,4.404611,7.784512,1.202385,-0.306289,4.912167,2.836864,2.309901,-1.997711,-5.420130,0.657181,0.195784,-1.301508,9.903670,0.630110,-8.444063,9.511319,0.225400,-2.059971,2.562471,-9.785650,1.725816,6.250619,-0.182814,-3.438358,2.564451,-7.889471,-8.574911,9.525185,9.832204,-8.871367,-0.887809,-4.385384,-2.192053,-8.542972,7.643622,-4.978066,0.782318,-4.597966,-9.682883,-0.751056,-7.178799,-3.232062,5.318993,-8.143238,-3.803782,-2.929426,-9.893603,-8.241214,9.488148,6.831721,0.765216,-9.540956,8.936399,-0.632180,9.156857,-3.248517,6.104265,-5.175418,-4.900521,-1.410866,2.022342,0.992055,4.360153,6.162327,-5.781602,7.775993,-7.728140,-6.971205,-3.559096,0.674734,2.122964,-1.244693,-1.021700,9.056358,9.091676,1.817108,-6.611758,3.968130,-2.225784,9.934323,2.674473,-7.647873,-8.666484,5.636477,9.098472,-0.034021,-0.881752,-9.854331,-6.139791,5.975209,0.752068,-8.975503,1.525812,8.490607,-1.933713,8.523885,8.796078,-9.507153,-5.735624,0.428586,-5.813019,5.320964,-4.596420,-0.141638,7.295382,-4.552841,-2.943016,3.533568,-3.165623,-3.925525,1.925152,-9.799386,1.444405,-6.024960,5.744642,-2.727484,3.874318,-0.883283,3.930373,-7.248968,5.021577,9.414433,-6.511416,0.453613,6.512124,3.186810,5.515270,7.650170,-5.969516,4.997805,9.726672,-9.827620,7.537706,-2.015119,3.941508,3.883161,-7.332757,-4.689235,5.944207,8.920233,4.733025,3.974091,6.488544,-6.350029,-8.432854,6.963193,5.610002,0.122617,-7.133486,6.733751,-4.059926,-1.827326,9.956659,4.010487,0.229234,0.565786,-4.746783,1.457133,4.645971,9.234335,9.048828,-0.100350,-5.192294,7.528779,2.817668,-2.467657,-4.272407,-8.602044,-0.212269,-1.290127,3.320620,-1.448825,1.034572,2.243022,9.814874,-7.387094,4.394539,0.282221,-1.429586,-8.708548,0.337265,-8.228556,-5.005683,2.475786,-8.523557,-5.310417,9.107352,1.558140,-1.739716,-2.922316,-7.469289,1.994577,6.292712,0.279581,5.738324,5.333865,2.311928,-2.721428,1.291798,-2.892257,-1.987476,6.985975,6.182038,-1.555596,4.205732,-8.863810,5.637710,3.213829,-0.853493,0.882641,-2.658011,1.387484,-9.547190,5.903613,3.473521,1.377633,-5.429531,-7.562507,-1.591725,-6.782047,5.961958,0.286476,-3.409519,9.649955,9.289892,-7.532831,5.180001,6.931635,-1.808873,8.063590,-4.160245,7.762501,1.045902,6.737219,-2.297089,4.852978,-0.300854,-2.589155,8.012267,4.372484,-7.078606,3.389990,9.610521,0.258743,1.662232,-4.464747,-7.082859,7.014875,0.467998,8.987415,-9.609960,1.555985,5.574020,7.545493,2.976622,8.196516,-8.391411,9.705808,-2.688542,9.155497,-2.529015,8.347330,8.463760,-6.885994,6.665970,-2.042313,5.295689,-8.523015,-9.591278,3.834932,0.990263,8.886595,4.688102,3.610836,-0.651357,-7.507271,-6.074691,6.883755,-2.023015,-3.631510,8.605436,8.793091,-2.201702,9.631625,6.624464,-1.223063,7.788758,-2.318172,7.565645,-4.924055,5.229348,-8.768886,4.492684,2.570906,6.510194,4.680797,6.486706,5.436271,5.657652,-2.715266,-1.152316,1.410301,-4.493706,-1.623299,3.981436,1.591392,5.776002,5.534819,7.909817,-3.981421,-1.645236,7.232896,-7.746423,-3.961231,4.993380,-6.531405,9.789275,-9.807934,-2.779530,2.009844,5.037508,-6.276025,-1.683770,4.574477,-1.861578,3.375071,-2.341448,-1.377480,3.174348,-7.432840,5.910769,-2.072334,-5.143061,5.933165,-6.159135,-8.820672,1.961965], dtype = "float64")#candidate|958|(576,)|const|float64
call_956 = relay.TupleGetItem(func_578_call(relay.reshape(const_957.astype('float64'), [7, 13, 9]), relay.reshape(const_957.astype('float64'), [7, 13, 9]), relay.reshape(const_958.astype('float64'), [576,]), ), 0)
call_959 = relay.TupleGetItem(func_583_call(relay.reshape(const_957.astype('float64'), [7, 13, 9]), relay.reshape(const_957.astype('float64'), [7, 13, 9]), relay.reshape(const_958.astype('float64'), [576,]), ), 0)
func_363_call = mod.get_global_var('func_363')
func_366_call = mutated_mod.get_global_var('func_366')
call_964 = relay.TupleGetItem(func_363_call(relay.reshape(call_956.astype('float64'), [16, 9, 4])), 0)
call_965 = relay.TupleGetItem(func_366_call(relay.reshape(call_956.astype('float64'), [16, 9, 4])), 0)
func_363_call = mod.get_global_var('func_363')
func_366_call = mutated_mod.get_global_var('func_366')
call_968 = relay.TupleGetItem(func_363_call(relay.reshape(const_958.astype('float64'), [16, 9, 4])), 0)
call_969 = relay.TupleGetItem(func_366_call(relay.reshape(const_958.astype('float64'), [16, 9, 4])), 0)
output = relay.Tuple([bop_953,call_956,const_957,const_958,call_964,call_968,])
output2 = relay.Tuple([bop_953,call_959,const_957,const_958,call_965,call_969,])
func_983 = relay.Function([var_952,], output)
mod['func_983'] = func_983
mod = relay.transform.InferType()(mod)
var_984 = relay.var("var_984", dtype = "uint64", shape = (13, 2, 7))#candidate|984|(13, 2, 7)|var|uint64
output = func_983(var_984)
func_985 = relay.Function([var_984], output)
mutated_mod['func_985'] = func_985
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1082 = relay.var("var_1082", dtype = "int32", shape = ())#candidate|1082|()|var|int32
var_1083 = relay.var("var_1083", dtype = "int32", shape = (8, 4, 14))#candidate|1083|(8, 4, 14)|var|int32
bop_1084 = relay.equal(var_1082.astype('bool'), var_1083.astype('bool')) # shape=(8, 4, 14)
bop_1089 = relay.mod(var_1083.astype('float64'), var_1082.astype('float64')) # shape=(8, 4, 14)
func_578_call = mod.get_global_var('func_578')
func_583_call = mutated_mod.get_global_var('func_583')
var_1100 = relay.var("var_1100", dtype = "float64", shape = (819,))#candidate|1100|(819,)|var|float64
var_1101 = relay.var("var_1101", dtype = "float64", shape = (576,))#candidate|1101|(576,)|var|float64
call_1099 = relay.TupleGetItem(func_578_call(relay.reshape(var_1100.astype('float64'), [7, 13, 9]), relay.reshape(var_1100.astype('float64'), [7, 13, 9]), relay.reshape(var_1101.astype('float64'), [576,]), ), 0)
call_1102 = relay.TupleGetItem(func_583_call(relay.reshape(var_1100.astype('float64'), [7, 13, 9]), relay.reshape(var_1100.astype('float64'), [7, 13, 9]), relay.reshape(var_1101.astype('float64'), [576,]), ), 0)
bop_1113 = relay.mod(var_1101.astype('float64'), relay.reshape(call_1099.astype('float64'), relay.shape_of(var_1101))) # shape=(576,)
bop_1116 = relay.mod(var_1101.astype('float64'), relay.reshape(call_1102.astype('float64'), relay.shape_of(var_1101))) # shape=(576,)
func_578_call = mod.get_global_var('func_578')
func_583_call = mutated_mod.get_global_var('func_583')
call_1125 = relay.TupleGetItem(func_578_call(relay.reshape(var_1100.astype('float64'), [7, 13, 9]), relay.reshape(var_1100.astype('float64'), [7, 13, 9]), relay.reshape(call_1099.astype('float64'), [576,]), ), 2)
call_1126 = relay.TupleGetItem(func_583_call(relay.reshape(var_1100.astype('float64'), [7, 13, 9]), relay.reshape(var_1100.astype('float64'), [7, 13, 9]), relay.reshape(call_1099.astype('float64'), [576,]), ), 2)
func_578_call = mod.get_global_var('func_578')
func_583_call = mutated_mod.get_global_var('func_583')
call_1129 = relay.TupleGetItem(func_578_call(relay.reshape(var_1100.astype('float64'), [7, 13, 9]), relay.reshape(var_1100.astype('float64'), [7, 13, 9]), relay.reshape(bop_1113.astype('float64'), [576,]), ), 3)
call_1130 = relay.TupleGetItem(func_583_call(relay.reshape(var_1100.astype('float64'), [7, 13, 9]), relay.reshape(var_1100.astype('float64'), [7, 13, 9]), relay.reshape(bop_1113.astype('float64'), [576,]), ), 3)
bop_1137 = relay.bitwise_or(bop_1113.astype('uint32'), relay.reshape(call_1125.astype('uint32'), relay.shape_of(bop_1113))) # shape=(576,)
bop_1140 = relay.bitwise_or(bop_1116.astype('uint32'), relay.reshape(call_1126.astype('uint32'), relay.shape_of(bop_1116))) # shape=(576,)
uop_1151 = relay.erf(call_1099.astype('float32')) # shape=(16, 9, 4)
uop_1153 = relay.erf(call_1102.astype('float32')) # shape=(16, 9, 4)
output = relay.Tuple([bop_1084,bop_1089,var_1100,call_1129,bop_1137,uop_1151,])
output2 = relay.Tuple([bop_1084,bop_1089,var_1100,call_1130,bop_1140,uop_1153,])
func_1162 = relay.Function([var_1082,var_1083,var_1100,var_1101,], output)
mod['func_1162'] = func_1162
mod = relay.transform.InferType()(mod)
mutated_mod['func_1162'] = func_1162
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1162_call = mutated_mod.get_global_var('func_1162')
var_1164 = relay.var("var_1164", dtype = "int32", shape = ())#candidate|1164|()|var|int32
var_1165 = relay.var("var_1165", dtype = "int32", shape = (8, 4, 14))#candidate|1165|(8, 4, 14)|var|int32
var_1166 = relay.var("var_1166", dtype = "float64", shape = (819,))#candidate|1166|(819,)|var|float64
var_1167 = relay.var("var_1167", dtype = "float64", shape = (576,))#candidate|1167|(576,)|var|float64
call_1163 = func_1162_call(var_1164,var_1165,var_1166,var_1167,)
output = call_1163
func_1168 = relay.Function([var_1164,var_1165,var_1166,var_1167,], output)
mutated_mod['func_1168'] = func_1168
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1376 = relay.var("var_1376", dtype = "int8", shape = (11, 8, 15))#candidate|1376|(11, 8, 15)|var|int8
const_1377 = relay.const([[[-5,-5,-1,7,7,6,-1,10,-8,-10,-7,-8,7,-8,-6],[-4,-6,-5,-8,-8,-4,-5,-9,6,3,6,5,8,3,-8],[-9,-10,-1,-1,-1,4,-3,-2,-3,10,6,-6,1,2,-10],[-3,-3,5,1,-3,-4,8,9,2,8,-7,-9,5,9,-5],[10,-9,2,6,-7,-6,9,10,1,9,-1,6,-3,9,-8],[10,-4,-10,-2,-10,9,-2,9,8,2,-1,-6,-5,8,1],[-2,-6,10,3,-4,3,-10,-2,6,8,7,-5,6,2,-7],[2,3,-4,-3,7,1,-1,-4,7,-2,10,-6,-4,6,-8]],[[8,10,7,-4,-10,-8,-10,1,3,-6,5,-8,-10,3,8],[-8,-3,-8,2,-3,-5,-3,-1,3,-4,-10,-6,2,-1,-3],[-8,5,-7,2,-9,4,-5,2,-3,9,-3,-8,7,6,-5],[-5,10,-4,7,8,8,-9,-9,8,-6,-1,6,-2,9,9],[7,-7,-7,3,7,-9,3,8,1,-6,-1,-7,-6,9,7],[1,3,-10,-9,4,4,10,1,1,-4,-8,2,1,6,-5],[-10,-8,4,-1,1,-10,-9,4,8,2,10,6,-9,2,-9],[-10,-3,1,-4,-2,-10,-2,3,-8,9,5,-10,-3,-10,-4]],[[-4,-9,3,-8,-4,4,3,2,-1,-8,-10,2,-6,9,-2],[6,-7,4,-6,-9,-3,4,-8,-5,-7,-1,-8,7,8,7],[-8,5,-9,-7,3,5,10,5,10,-9,3,-5,3,-2,-7],[8,-3,5,3,-6,10,6,5,-8,-9,3,6,-10,10,-9],[-2,-4,-1,-6,-3,-5,-8,-4,10,7,10,-1,7,-7,-5],[4,5,-10,-1,5,1,-8,10,-3,6,2,-1,4,6,5],[-10,-9,-8,-3,9,2,9,10,-4,2,2,-5,8,-1,3],[-8,-6,7,-9,-3,-10,8,-7,-9,-1,10,-4,6,-4,-6]],[[4,9,-2,4,-9,-10,3,8,-8,10,7,-5,-5,-1,-10],[6,-3,-4,1,6,4,-9,-4,7,-6,-3,9,2,-9,-4],[1,4,5,9,-3,-4,-9,-4,-1,-6,1,8,7,7,4],[-8,-1,9,10,10,2,-2,8,-5,10,6,1,5,-7,-6],[4,-7,8,-9,-5,2,2,8,4,10,5,7,-3,5,-5],[-10,9,-1,5,-3,-8,8,3,-1,9,10,9,-1,-10,-2],[-1,1,2,-5,2,7,-7,10,-1,4,4,4,-1,-8,3],[-3,2,4,-8,1,9,9,-5,3,-10,5,-10,9,-4,-10]],[[5,-1,9,-3,4,-4,3,6,-2,1,-5,8,-5,-7,-2],[-6,-2,7,10,-6,-3,-7,6,4,2,2,2,-5,6,8],[8,-6,10,-2,5,-7,10,7,-7,2,6,7,3,-7,-3],[-7,-8,3,-8,10,-3,-4,-1,7,-1,7,4,-5,5,5],[6,1,9,-2,7,2,7,2,-6,5,-9,-5,6,1,-4],[3,2,-4,8,-10,7,6,8,3,-9,1,1,-3,8,2],[4,-1,-9,-9,-2,1,-1,-5,-5,2,7,3,1,-6,-2],[10,4,-4,8,-2,-2,-2,-10,-1,3,10,-9,7,1,-1]],[[-4,2,-6,-2,2,7,-7,-7,3,-5,-1,8,9,10,-1],[-4,-5,4,3,-6,-2,-8,-1,7,1,2,-8,-10,8,-9],[-4,-5,-9,8,6,6,-8,-6,-9,3,-6,10,9,-5,3],[-7,8,5,10,-1,9,4,-2,-6,-5,1,-6,-7,2,-4],[-7,3,3,-3,3,-1,9,-10,6,-4,-7,-2,5,-9,-3],[-3,4,-4,-1,-3,-8,9,-8,2,6,-4,-10,-5,-6,-1],[9,-9,-7,-1,-1,5,9,-1,-2,10,9,-1,10,2,-2],[7,7,4,1,4,-2,-3,2,7,-7,4,-2,-2,2,-8]],[[-9,6,1,9,7,-5,-2,-9,2,-2,4,-6,-2,-9,-4],[-1,-4,-10,8,8,-5,-8,1,5,5,6,-3,8,-1,-4],[-5,-10,3,-3,-1,10,-4,-3,6,-10,-5,-4,7,8,10],[2,8,-4,2,-3,8,9,2,9,-1,-10,-5,7,-6,-9],[6,2,5,-4,-5,8,-10,7,8,-9,7,5,6,4,-8],[8,8,7,-10,-8,8,10,2,10,-5,1,2,4,10,10],[2,-2,-10,2,2,4,-8,9,-6,-4,-10,5,-2,8,6],[2,5,-10,4,6,-4,5,-7,-3,-3,-3,1,3,-6,7]],[[-10,-2,2,-2,6,2,8,-1,2,-5,-1,8,-8,-5,-3],[-8,9,9,-4,8,9,-1,5,-2,-7,4,7,10,-4,-2],[5,-1,10,6,1,5,1,-4,9,5,-3,4,10,7,-8],[10,-9,-6,1,4,-3,9,-4,-2,1,10,6,-5,-9,2],[-3,9,-5,10,8,-5,2,6,-9,10,-6,3,6,2,-10],[3,9,3,8,8,-7,6,9,7,2,5,2,2,5,3],[10,-9,7,-1,-7,-10,5,8,-10,9,4,2,3,-4,-9],[4,-5,8,-6,9,-9,-10,7,-8,2,-10,3,-4,7,-5]],[[-7,6,1,-5,3,2,5,8,-9,2,4,-10,6,-5,2],[-9,-8,-2,-9,8,1,7,2,-9,-2,4,4,4,10,3],[9,2,9,8,8,-1,4,8,-5,-8,-9,4,-6,3,8],[-9,-8,-2,-4,-4,-6,3,6,7,10,10,-8,3,3,-2],[-2,5,2,8,10,10,8,8,-7,-5,10,6,-10,-2,5],[-1,6,8,7,-6,7,-5,-1,8,7,5,-1,-5,-10,-1],[2,-5,-1,-8,8,-5,2,-1,-10,1,4,-5,6,5,9],[-4,-1,-1,1,-1,5,-5,6,2,-7,-5,8,8,-2,-4]],[[1,9,-7,4,-10,-1,1,-4,4,-2,8,3,-9,-1,-6],[-9,-3,2,-1,-1,1,7,-10,8,-6,6,-2,-9,-2,2],[-5,8,1,9,-6,2,2,1,2,-5,-4,2,10,4,2],[-1,-7,5,8,-10,4,-2,-3,10,2,4,6,1,7,-9],[3,6,-8,-10,4,-9,-3,-9,-3,4,6,-3,-5,-10,2],[-3,-7,5,-9,2,-4,-6,-3,5,-5,5,-6,4,3,-4],[-1,-9,6,-6,8,2,10,-1,4,10,5,-9,-4,-2,6],[1,3,-8,4,5,1,-6,-7,1,-4,-9,6,2,10,6]],[[-2,-3,-7,-5,4,-4,9,-3,6,-6,-7,-1,-2,3,-9],[-9,-6,-7,3,5,-3,-10,9,-9,-1,7,-1,-3,3,8],[-6,4,-7,-6,-2,8,10,-8,-5,-5,-3,6,-3,8,6],[-10,2,4,-3,-2,1,-10,9,-1,-6,-1,-9,4,6,1],[-9,2,-5,3,-7,4,-4,-1,2,-7,10,-9,5,-2,5],[-10,-4,-8,-9,8,-5,-3,9,-3,-8,1,-8,-7,-4,-3],[4,-5,-6,-9,3,10,-10,-6,9,-1,-10,4,-3,-3,2],[5,-9,-4,3,-9,-1,-4,-4,-1,10,9,-4,-7,4,1]]], dtype = "int8")#candidate|1377|(11, 8, 15)|const|int8
bop_1378 = relay.multiply(var_1376.astype('int8'), relay.reshape(const_1377.astype('int8'), relay.shape_of(var_1376))) # shape=(11, 8, 15)
output = bop_1378
output2 = bop_1378
func_1421 = relay.Function([var_1376,], output)
mod['func_1421'] = func_1421
mod = relay.transform.InferType()(mod)
var_1422 = relay.var("var_1422", dtype = "int8", shape = (11, 8, 15))#candidate|1422|(11, 8, 15)|var|int8
output = func_1421(var_1422)
func_1423 = relay.Function([var_1422], output)
mutated_mod['func_1423'] = func_1423
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1818 = relay.var("var_1818", dtype = "float64", shape = (4, 2, 6))#candidate|1818|(4, 2, 6)|var|float64
uop_1819 = relay.sinh(var_1818.astype('float64')) # shape=(4, 2, 6)
output = uop_1819
output2 = uop_1819
func_1823 = relay.Function([var_1818,], output)
mod['func_1823'] = func_1823
mod = relay.transform.InferType()(mod)
var_1824 = relay.var("var_1824", dtype = "float64", shape = (4, 2, 6))#candidate|1824|(4, 2, 6)|var|float64
output = func_1823(var_1824)
func_1825 = relay.Function([var_1824], output)
mutated_mod['func_1825'] = func_1825
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2024 = relay.var("var_2024", dtype = "float32", shape = (14, 3))#candidate|2024|(14, 3)|var|float32
uop_2025 = relay.sigmoid(var_2024.astype('float32')) # shape=(14, 3)
func_983_call = mod.get_global_var('func_983')
func_985_call = mutated_mod.get_global_var('func_985')
const_2035 = relay.const([[-8],[3],[5],[-10],[-10],[-4],[2],[1],[-5],[3],[-6],[9],[3],[9],[6],[1],[4],[-5],[-5],[-1],[-3],[-10],[-8],[-3],[2],[10],[-3],[9],[9],[-3],[1],[-10],[-9],[1],[-1],[-1],[-9],[9],[1],[-2],[-2],[-2],[-1],[10],[-1],[4],[7],[7],[8],[2],[-2],[4],[-3],[1],[-9],[-9],[-5],[-5],[-4],[-6],[-9],[6],[-6],[-4],[1],[-6],[8],[-8],[-4],[-6],[-2],[-5],[8],[3],[4],[6],[4],[1],[-7],[6],[10],[2],[-3],[6],[-9],[-2],[7],[-10],[-5],[6],[4],[5],[8],[-8],[9],[-2],[6],[-5],[-6],[6],[-5],[-10],[6],[-9],[5],[-2],[-9],[-9],[-3],[1],[-10],[10],[-9],[-5],[-10],[-4],[-9],[-7],[-6],[-6],[2],[-10],[-5],[10],[-5],[-9],[-4],[-1],[8],[1],[6],[2],[10],[10],[6],[7],[-6],[-10],[3],[10],[-1],[-2],[-9],[-7],[6],[-4],[-3],[-8],[6],[1],[4],[1],[-2],[-2],[3],[4],[10],[-8],[-9],[-8],[4],[7],[-10],[2],[-3],[-1],[8],[8],[5],[6],[9],[-3],[-8],[-9],[-7],[-9],[-3],[-8],[-1],[1],[3],[10]], dtype = "uint64")#candidate|2035|(182, 1)|const|uint64
call_2034 = relay.TupleGetItem(func_983_call(relay.reshape(const_2035.astype('uint64'), [13, 2, 7])), 4)
call_2036 = relay.TupleGetItem(func_985_call(relay.reshape(const_2035.astype('uint64'), [13, 2, 7])), 4)
func_1421_call = mod.get_global_var('func_1421')
func_1423_call = mutated_mod.get_global_var('func_1423')
var_2041 = relay.var("var_2041", dtype = "int8", shape = (1320,))#candidate|2041|(1320,)|var|int8
call_2040 = func_1421_call(relay.reshape(var_2041.astype('int8'), [11, 8, 15]))
call_2042 = func_1421_call(relay.reshape(var_2041.astype('int8'), [11, 8, 15]))
func_983_call = mod.get_global_var('func_983')
func_985_call = mutated_mod.get_global_var('func_985')
call_2049 = relay.TupleGetItem(func_983_call(relay.reshape(const_2035.astype('uint64'), [13, 2, 7])), 1)
call_2050 = relay.TupleGetItem(func_985_call(relay.reshape(const_2035.astype('uint64'), [13, 2, 7])), 1)
output = relay.Tuple([uop_2025,call_2034,const_2035,call_2040,var_2041,call_2049,])
output2 = relay.Tuple([uop_2025,call_2036,const_2035,call_2042,var_2041,call_2050,])
func_2056 = relay.Function([var_2024,var_2041,], output)
mod['func_2056'] = func_2056
mod = relay.transform.InferType()(mod)
mutated_mod['func_2056'] = func_2056
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2056_call = mutated_mod.get_global_var('func_2056')
var_2058 = relay.var("var_2058", dtype = "float32", shape = (14, 3))#candidate|2058|(14, 3)|var|float32
var_2059 = relay.var("var_2059", dtype = "int8", shape = (1320,))#candidate|2059|(1320,)|var|int8
call_2057 = func_2056_call(var_2058,var_2059,)
output = call_2057
func_2060 = relay.Function([var_2058,var_2059,], output)
mutated_mod['func_2060'] = func_2060
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2096 = relay.var("var_2096", dtype = "uint16", shape = (8, 11, 12))#candidate|2096|(8, 11, 12)|var|uint16
var_2097 = relay.var("var_2097", dtype = "uint16", shape = (8, 11, 12))#candidate|2097|(8, 11, 12)|var|uint16
bop_2098 = relay.left_shift(var_2096.astype('uint16'), relay.reshape(var_2097.astype('uint16'), relay.shape_of(var_2096))) # shape=(8, 11, 12)
uop_2105 = relay.erf(var_2097.astype('float32')) # shape=(8, 11, 12)
output = relay.Tuple([bop_2098,uop_2105,])
output2 = relay.Tuple([bop_2098,uop_2105,])
func_2118 = relay.Function([var_2096,var_2097,], output)
mod['func_2118'] = func_2118
mod = relay.transform.InferType()(mod)
var_2119 = relay.var("var_2119", dtype = "uint16", shape = (8, 11, 12))#candidate|2119|(8, 11, 12)|var|uint16
var_2120 = relay.var("var_2120", dtype = "uint16", shape = (8, 11, 12))#candidate|2120|(8, 11, 12)|var|uint16
output = func_2118(var_2119,var_2120,)
func_2121 = relay.Function([var_2119,var_2120,], output)
mutated_mod['func_2121'] = func_2121
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2248 = relay.var("var_2248", dtype = "float32", shape = (4, 3, 3))#candidate|2248|(4, 3, 3)|var|float32
uop_2249 = relay.rsqrt(var_2248.astype('float32')) # shape=(4, 3, 3)
func_1421_call = mod.get_global_var('func_1421')
func_1423_call = mutated_mod.get_global_var('func_1423')
var_2252 = relay.var("var_2252", dtype = "int8", shape = (660, 2))#candidate|2252|(660, 2)|var|int8
call_2251 = func_1421_call(relay.reshape(var_2252.astype('int8'), [11, 8, 15]))
call_2253 = func_1421_call(relay.reshape(var_2252.astype('int8'), [11, 8, 15]))
output = relay.Tuple([uop_2249,call_2251,var_2252,])
output2 = relay.Tuple([uop_2249,call_2253,var_2252,])
func_2260 = relay.Function([var_2248,var_2252,], output)
mod['func_2260'] = func_2260
mod = relay.transform.InferType()(mod)
mutated_mod['func_2260'] = func_2260
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2260_call = mutated_mod.get_global_var('func_2260')
var_2262 = relay.var("var_2262", dtype = "float32", shape = (4, 3, 3))#candidate|2262|(4, 3, 3)|var|float32
var_2263 = relay.var("var_2263", dtype = "int8", shape = (660, 2))#candidate|2263|(660, 2)|var|int8
call_2261 = func_2260_call(var_2262,var_2263,)
output = call_2261
func_2264 = relay.Function([var_2262,var_2263,], output)
mutated_mod['func_2264'] = func_2264
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2438 = relay.var("var_2438", dtype = "float32", shape = (6, 8, 15))#candidate|2438|(6, 8, 15)|var|float32
uop_2439 = relay.erf(var_2438.astype('float32')) # shape=(6, 8, 15)
output = uop_2439
output2 = uop_2439
func_2443 = relay.Function([var_2438,], output)
mod['func_2443'] = func_2443
mod = relay.transform.InferType()(mod)
var_2444 = relay.var("var_2444", dtype = "float32", shape = (6, 8, 15))#candidate|2444|(6, 8, 15)|var|float32
output = func_2443(var_2444)
func_2445 = relay.Function([var_2444], output)
mutated_mod['func_2445'] = func_2445
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2452 = relay.const([[-4.685869,5.836144,-1.606667,1.897801,2.371881],[0.942494,-8.786570,-4.090590,9.740948,5.761566],[3.874097,-0.610962,4.066767,3.957502,4.936192],[2.889349,3.498147,9.095852,-7.314483,-9.003857],[4.370907,-4.334033,-9.569706,-4.646212,-2.620280],[0.104628,-0.340810,-3.993630,-9.860386,-8.680399],[-9.171861,7.410538,-4.296822,-5.278393,5.332919],[-3.941389,-2.673292,-9.850008,5.369592,-7.374226],[6.040822,-7.307017,9.727678,2.525516,-2.566648],[-6.577337,-9.384120,-5.485613,-8.602380,5.901043],[8.220132,-6.275647,-9.679695,-4.968021,3.624297],[2.809304,-7.669245,-9.062932,6.351318,7.095749],[-4.049015,-1.537635,4.092445,1.180663,0.656433],[2.688750,7.496941,6.341611,-6.926827,7.187316],[-0.143440,-4.871642,-0.327203,5.802946,7.693353],[2.674613,-2.341445,-0.443098,-7.473338,5.934155]], dtype = "float64")#candidate|2452|(16, 5)|const|float64
uop_2453 = relay.atanh(const_2452.astype('float64')) # shape=(16, 5)
func_578_call = mod.get_global_var('func_578')
func_583_call = mutated_mod.get_global_var('func_583')
const_2456 = relay.const([-5.448601,-4.605027,9.847950,-7.959704,-9.390143,-0.008130,2.953523,-1.871951,6.618828,-3.629958,-2.541289,9.976468,-0.925572,-2.472466,7.666173,9.494978,3.748808,8.431333,9.702132,6.758811,4.814996,-1.306934,-5.170018,6.074468,-6.530527,5.244735,-1.150026,9.186793,-2.985458,1.816591,-1.424276,8.255504,-8.721599,1.997154,-6.969183,-4.487266,-8.939843,-6.182318,3.942240,-7.460146,0.086540,4.137908,-7.420302,-8.188013,-9.900131,7.931640,5.992488,-3.557610,5.409686,8.918489,0.499225,2.168618,0.209578,-2.934758,7.144395,-3.555403,9.331392,8.864277,3.392975,-7.334513,5.452410,-3.034011,-1.419175,-1.803474,-7.822567,7.130759,5.183570,-9.776435,-0.489816,-1.074074,2.440562,9.595567,-9.212070,7.835425,-1.009795,0.964582,6.936719,-8.363428,-8.040509,9.487009,7.181192,-7.926702,1.008131,9.838331,-8.908374,-8.917904,-9.881965,-8.745226,-5.139608,-1.074008,6.406524,-1.739838,-8.139448,-4.592290,3.729374,6.776019,-1.665862,-4.889422,-7.468204,0.562394,0.815066,0.073778,6.429301,-8.633287,1.821991,2.025253,-1.095769,5.504933,-2.577709,5.593136,3.424402,-9.522969,4.848713,5.895241,-0.527732,-2.773025,-2.018936,-3.122299,1.096561,8.006887,4.985330,0.690803,-8.858229,-8.367888,-6.411632,6.731749,7.407489,3.174353,-1.379271,-4.085136,5.340664,-1.488399,-9.253140,-4.029292,5.793053,-2.925632,-5.392556,-4.543632,-5.074725,1.030922,-4.270987,-9.688633,4.788748,-6.080884,9.942792,-6.624344,4.030525,-1.741367,2.676797,7.757054,8.277915,-1.370110,2.906143,-7.117882,2.755177,-2.408667,-4.572481,2.956996,-8.260225,6.995558,9.602530,0.279558,-6.961277,-6.238277,-8.626638,-7.596832,-8.381364,4.857502,4.563900,9.171021,6.905163,4.520566,4.256663,2.851841,-8.078238,9.771446,7.281878,1.507962,-4.699513,9.681955,3.494797,-1.789753,-4.243362,-0.340473,-6.438760,2.672288,5.008063,4.560900,6.955222,6.480650,-4.477961,2.868329,8.390244,8.349040,7.007380,-7.383623,5.492918,-7.157710,-7.818896,8.159980,-2.024289,-3.358489,6.842655,-7.255570,7.017953,3.671376,-2.699530,7.578087,8.241306,-6.141506,8.135981,9.631031,4.402907,5.673836,-9.556089,-3.325360,4.065366,7.656516,6.772978,1.684543,9.499388,-1.914515,-6.780342,4.650209,-4.541844,-4.801563,-0.919018,-3.727888,7.856929,5.643960,9.688323,-3.413602,-1.625000,4.349948,-2.779699,-7.120858,3.065183,8.312203,-7.069947,5.882344,-2.573029,3.700163,-7.807718,3.024519,8.437812,7.187775,-0.587927,4.625930,6.186567,-8.393506,5.534712,0.979401,7.144353,-6.834792,7.873187,9.752394,4.034552,-3.158096,-9.114666,2.880426,-7.724592,-1.791944,4.930246,-3.253979,0.349215,-6.122038,2.182381,0.098147,-2.744070,9.364549,-4.274035,-7.637700,4.231708,9.768396,-8.909184,1.905289,0.249380,3.426542,9.314713,-5.046524,0.372919,7.841590,-8.006369,2.939989,6.894157,7.779780,6.896021,0.798818,-1.122228,1.996173,-9.119467,-8.729243,-0.508467,-1.788138,3.945215,-0.240580,0.951663,7.445035,7.154775,-5.171249,9.721800,-8.376455,1.545746,4.074354,-4.644519,-9.124739,6.726545,-3.485760,7.761054,6.486224,4.902122,1.448017,-4.326377,1.745584,2.958392,-3.085854,1.155405,-1.946074,-8.488273,-1.958363,-3.077913,0.466150,3.843976,1.530654,-4.900939,9.331265,6.273847,-8.368198,-7.366197,7.517137,-7.867121,-6.351328,-0.643971,-5.893382,0.835204,0.891736,-0.107795,1.871031,-6.167629,-2.011403,-0.441301,8.190766,-0.195218,2.994328,9.299257,-2.841467,-8.291059,9.360590,7.721831,5.705295,-6.978532,-2.889866,-2.952605,8.095395,2.703784,5.136947,8.168668,3.314813,4.316463,-5.520617,4.896216,-7.027180,-5.189484,-9.359445,1.561973,-0.056740,-5.347137,-6.842835,-1.256088,4.639304,4.819131,8.802710,2.862210,-5.446747,2.679325,7.574233,-2.519412,-1.383858,9.868617,-1.022305,2.069699,0.215211,-8.904932,-6.063293,6.303573,-9.164717,-0.819344,5.751789,-2.912788,-4.493397,3.888979,-2.854031,4.775506,-1.705652,6.760456,-9.445068,4.780654,-0.578446,4.008836,-3.381889,-7.170699,-7.509443,2.590557,2.668120,3.402474,6.969664,3.832681,-1.654495,7.034094,-3.743145,-3.272770,2.994887,-3.088209,0.039692,-6.245452,-7.658655,-0.488226,4.220061,-6.909137,1.248674,7.721933,-9.156779,-7.713862,2.340156,4.593856,-2.570734,-2.265460,6.373412,4.928241,4.176973,3.143839,-1.116602,-1.556413,2.268553,-0.956981,-1.718031,3.839852,7.338920,-6.936930,0.536189,-6.824021,6.845395,7.927651,4.579980,9.377634,-3.233761,-3.430477,-8.817437,2.089269,6.078408,-6.950853,1.220232,6.018036,5.724615,1.377139,9.573930,-2.344077,3.200986,-9.284971,-3.688366,4.273731,-9.314002,3.246902,-9.562444,-3.892938,0.908499,0.700866,-6.209987,1.940443,-7.153591,5.903895,-1.877199,-0.273160,6.614518,-5.645416,-1.155080,6.741045,2.099822,9.429127,1.442757,7.819334,-0.441240,2.160722,7.395559,-6.880345,3.875807,-0.719869,9.624245,8.333190,4.435898,-0.992021,9.057995,-4.828229,7.033619,-7.981423,3.572028,0.108195,9.649145,-9.824735,5.497504,-4.063021,-2.641874,-0.383118,-2.478086,6.076945,9.482568,1.420776,4.527862,6.602601,-5.033447,0.624571,6.423206,4.406659,8.414983,-3.215437,1.361453,8.214131,0.728937,4.883177,-5.013311,8.762021,9.043321,-1.880011,-7.642491,6.777987,-8.948887,-2.212037,8.049256,-7.689943,6.565673,2.105832,4.393904,8.166234,-8.734362,-9.965640,7.494465,-1.932701,2.103981,1.500061,-7.756254,-8.004094,8.935042,-8.782019,-9.691813,7.364896,3.067315,-5.472766,9.763704,6.121555,6.858716,-9.149329,1.996234,3.893166,-9.422044,-5.375027,3.288915,3.192222,3.749936,9.901078,-1.298573,-8.256576,7.826327,-1.362998,-0.357146,-2.904879,-2.422527,-3.287652,7.998022,-4.475263,-0.671520,-8.523363,8.477045,-8.431243,3.371585,-7.164255,-9.670241,-7.209575,-8.577669,-2.881808,-2.024077,-0.090754,-1.344723,7.257769,-2.352211,3.259025,-7.583807,-1.126634,8.676014,5.974035,-9.560905,-8.817488,-7.134035,-9.318048,1.099929,2.194637,1.434596,-3.261930,-5.045048,8.361607,5.052634,3.013228,-2.992215,2.317635,-4.283818,-2.008755,5.750625,9.920324,2.654085,-2.160379,-7.280446,0.295663,4.321723,8.685228,3.461626,-9.854833,2.706914,-0.186996,1.921371,6.330069,-0.727660,-9.151278,-4.604982,3.740922,1.793209,4.580154,4.733023,0.968483,-0.828250,-7.614363,7.981604,2.073878,-5.004713,-4.682641,7.655661,3.900069,5.055935,5.773052,9.143988,-2.721191,-0.928084,4.768011,-2.450264,-8.924276,3.278175,-2.219812,0.242801,-9.884284,3.474204,1.233949,-5.092945,6.194756,-2.372911,-1.236521,2.741568,-6.019803,-8.537568,-9.844654,-0.282657,9.464391,6.183785,-4.707845,9.493421,3.668639,9.325211,-5.506696,7.931514,-3.937071,-5.888855,-0.263417,1.447766,-3.632780,-9.919234,-1.764483,5.302524,-2.105973,0.815749,-3.646480,2.344326,9.403326,-1.560757,0.331323,1.762889,-1.874320,-3.568100,-0.025282,8.953983,5.701242,3.011157,8.220287,7.189666,5.238177,-2.998046,-0.211664,0.510687,4.199199,1.371726,-2.827024,-0.780355,-1.443590,0.827402,-5.121422,1.726341,-9.590026,3.265414,-1.885994,8.781472,3.185836,2.487871,-8.089513,8.708556,-7.852251,-4.728949,-3.912664,9.349561,2.449958,9.306464,-2.423124,0.708238,9.718223,-8.703847,4.262438,1.316173,4.753900,-5.434963,-8.905618,2.910954,-8.499701,5.175970,-0.926874,-4.880896,5.766091,7.716181,-0.026076,-7.310331,4.404597,2.558090,-2.477581,2.378500,4.239537,1.324188,-3.528757,9.475985,-0.921712,6.148668,6.965869,-0.515459,7.966260,-4.762645,-1.265031,8.061634,6.654907,3.240131,1.506664,-2.221411,-1.690803,-7.058241,-9.573477,-1.688853,-7.030576,-8.492285,4.347642,-8.399050,-1.291589,-1.716156,4.157479,1.650408,9.755784,9.364527,2.562388,7.569095,9.089070,-8.149081,5.209851,4.067980,-5.890989,-9.252055,-9.500284,-1.652586,9.855040,-4.244895,-2.331489,-6.640496,-0.463661,9.560351,4.146139,9.453336,-8.448320,-7.123785,-9.578608,-7.158466,8.407642,-1.317736,6.034348,0.725797,-0.073339,-1.624215,0.312762,-8.483931,-9.421973,2.138808,-6.760910,-6.409227,1.542819,8.184311,-2.433688,-6.899768,-0.345704,-1.170078,-9.795407,-4.373751,9.674286,0.070672,0.028960,-5.061823,9.672144,3.179903,-8.818025,2.846368,8.505144], dtype = "float64")#candidate|2456|(819,)|const|float64
var_2457 = relay.var("var_2457", dtype = "float64", shape = (576,))#candidate|2457|(576,)|var|float64
call_2455 = relay.TupleGetItem(func_578_call(relay.reshape(const_2456.astype('float64'), [7, 13, 9]), relay.reshape(const_2456.astype('float64'), [7, 13, 9]), relay.reshape(var_2457.astype('float64'), [576,]), ), 1)
call_2458 = relay.TupleGetItem(func_583_call(relay.reshape(const_2456.astype('float64'), [7, 13, 9]), relay.reshape(const_2456.astype('float64'), [7, 13, 9]), relay.reshape(var_2457.astype('float64'), [576,]), ), 1)
output = relay.Tuple([uop_2453,call_2455,const_2456,var_2457,])
output2 = relay.Tuple([uop_2453,call_2458,const_2456,var_2457,])
func_2463 = relay.Function([var_2457,], output)
mod['func_2463'] = func_2463
mod = relay.transform.InferType()(mod)
var_2464 = relay.var("var_2464", dtype = "float64", shape = (576,))#candidate|2464|(576,)|var|float64
output = func_2463(var_2464)
func_2465 = relay.Function([var_2464], output)
mutated_mod['func_2465'] = func_2465
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2859 = relay.var("var_2859", dtype = "float32", shape = (3, 5, 14))#candidate|2859|(3, 5, 14)|var|float32
uop_2860 = relay.log2(var_2859.astype('float32')) # shape=(3, 5, 14)
func_983_call = mod.get_global_var('func_983')
func_985_call = mutated_mod.get_global_var('func_985')
const_2868 = relay.const([-2,-1,3,-2,-8,-2,-5,-3,6,3,-6,1,-6,-3,1,-6,9,3,-9,1,-9,8,-9,-2,2,-7,10,8,-2,-10,-9,5,4,-9,2,-10,3,9,-1,-9,6,3,-5,-3,2,-9,10,2,-3,-8,-1,9,6,-5,9,-10,-1,9,4,2,-5,-10,8,-10,-10,-9,-7,-4,6,-10,7,-10,-2,4,-2,3,-9,4,-4,-10,5,7,8,4,5,9,-5,8,-7,-5,-1,8,-3,9,9,4,-1,-5,-4,-2,-3,9,-9,7,-1,7,-5,4,-7,5,-4,-1,10,3,5,3,6,7,-2,3,1,7,-5,3,-6,2,-9,-7,7,5,7,3,3,-1,6,-10,6,-4,2,6,8,-10,-9,6,-10,9,10,-3,1,9,1,-8,-9,-9,10,1,-1,2,9,-7,10,8,-9,-4,8,2,3,6,2,4,-1,7,5,4,-1,5,-1,3,6,4,1,1], dtype = "uint64")#candidate|2868|(182,)|const|uint64
call_2867 = relay.TupleGetItem(func_983_call(relay.reshape(const_2868.astype('uint64'), [13, 2, 7])), 1)
call_2869 = relay.TupleGetItem(func_985_call(relay.reshape(const_2868.astype('uint64'), [13, 2, 7])), 1)
output = relay.Tuple([uop_2860,call_2867,const_2868,])
output2 = relay.Tuple([uop_2860,call_2869,const_2868,])
func_2873 = relay.Function([var_2859,], output)
mod['func_2873'] = func_2873
mod = relay.transform.InferType()(mod)
mutated_mod['func_2873'] = func_2873
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2874 = relay.var("var_2874", dtype = "float32", shape = (3, 5, 14))#candidate|2874|(3, 5, 14)|var|float32
func_2873_call = mutated_mod.get_global_var('func_2873')
call_2875 = func_2873_call(var_2874)
output = call_2875
func_2876 = relay.Function([var_2874], output)
mutated_mod['func_2876'] = func_2876
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2989 = relay.var("var_2989", dtype = "int16", shape = (6, 9, 7))#candidate|2989|(6, 9, 7)|var|int16
var_2990 = relay.var("var_2990", dtype = "int16", shape = (6, 9, 7))#candidate|2990|(6, 9, 7)|var|int16
bop_2991 = relay.equal(var_2989.astype('bool'), relay.reshape(var_2990.astype('bool'), relay.shape_of(var_2989))) # shape=(6, 9, 7)
bop_3009 = relay.right_shift(bop_2991.astype('int16'), relay.reshape(var_2989.astype('int16'), relay.shape_of(bop_2991))) # shape=(6, 9, 7)
func_1823_call = mod.get_global_var('func_1823')
func_1825_call = mutated_mod.get_global_var('func_1825')
var_3014 = relay.var("var_3014", dtype = "float64", shape = (48,))#candidate|3014|(48,)|var|float64
call_3013 = func_1823_call(relay.reshape(var_3014.astype('float64'), [4, 2, 6]))
call_3015 = func_1823_call(relay.reshape(var_3014.astype('float64'), [4, 2, 6]))
func_2443_call = mod.get_global_var('func_2443')
func_2445_call = mutated_mod.get_global_var('func_2445')
const_3019 = relay.const([[2.342915,2.408361,-1.951806,-7.520671,-2.922035,3.949776,-4.237843,6.103010,-1.732447,5.761144,-9.313055,-8.165946,2.052234,-4.407866,-8.000433,6.279098,-3.160547,2.489466,-9.011708,-8.271244,6.122631,-6.591245,-6.522950,-1.038911,7.784460,7.140575,3.538600,-1.161933,2.746901,-6.853355,0.393836,2.964799,-6.557694,-7.877853,-3.941071,-9.084617,-0.393028,3.320758,-7.838505,-4.705343,0.181978,4.794900,6.761153,5.789372,-9.955289,-1.907721,-6.919806,1.437646,-7.054327,5.473847,-4.061901,9.108611,-4.289883,-6.334161,-5.327529,-7.313433,-5.587605,-0.503714,0.806616,-3.506159,1.861585,9.899599,-9.278051,8.896288,-9.462579,8.266024,-6.526293,-9.910078,8.268986,9.893414,5.645061,7.618882,6.374271,1.639509,-9.824635,-5.075531,-4.986423,4.342799,-3.538259,-2.162944,5.864444,-1.057707,-6.300201,-6.803640,8.095173,4.574375,-6.890711,-4.701280,6.710951,-4.494866,9.721043,5.919497,2.114190,-0.170792,0.148255,-6.626533,-8.519411,-1.170389,3.151606,-1.051836,-6.344418,2.965744,-4.642820,-4.729974,6.465668,0.720011,0.303366,1.146612,1.488640,4.220900,-5.499853,8.530405,-4.140320,7.018067,5.736014,-5.047524,9.325339,-7.232208,4.410736,5.146396,7.846479,3.705666,-7.216556,9.281539,-6.769838,-8.994575,7.955536,8.732827,-0.693965,3.746604,-0.426326,8.832364,-5.352137,7.054999,7.232213,-2.309374,-0.473615,7.621707,-3.525823,-5.504136,5.871882,8.616159,1.178485,-0.497477,1.076294,9.634767,5.942876,-0.801976,-3.204352,7.849108,-7.904104,-4.024802,5.824636,7.945497,0.167967,-6.932989,8.191619,4.761919,-6.747353,-5.199149,7.382574,1.259727,-9.177014,-4.198636,-3.697578,-1.077421,-8.799638,2.356288,7.493220,3.129268,-1.111539,7.311758,-1.848360,-6.652462,8.708826,-6.420148,-0.379579,9.442502,0.365816,5.463323,-1.188475,0.870674,6.384003,-8.342816,0.471696,8.581846,-2.689667,4.323049,2.465312,0.913399,-4.105256,6.407409,-3.298868,-8.827280,4.394838,1.567651,9.764544,-6.967290,7.852935,3.991248,-4.146395,-0.337885,-3.640934,1.298667,-6.239245,-9.011390,0.910154,6.757791,-6.365216,8.427791,-5.801229,1.614482,3.844346,-4.286125,9.313603,-0.947368,-0.376497,-9.711706,-2.861829,-4.303157,-1.243593,-5.225084,-2.967240,0.801778,5.303949,-0.155913,8.612776,3.714610,9.272435,3.267417,-4.602929,2.868929,2.692095,5.921387,6.535724,-2.713451,-9.018439,6.688493,-9.809331,2.837787,-4.771439,0.779252,-5.145895,-5.445276,-0.923680,-3.624354,4.880245,7.873813,5.737683,1.708172,-3.388477,-5.857639,-7.234810,-9.227705,8.236850,-4.005093,5.046931,4.380198,-7.522492,-7.722170,-1.229189,7.331503,-2.938977,-1.915117,9.095026,-1.249813,9.855230,-5.395507,3.115609,-3.842676,2.471789,-9.299543,3.129413,-9.616495,1.327527,-8.752095,2.195416,-2.526125,8.665740,0.118325,-3.666606,-9.366459,-3.033253,1.475402,7.729415,-1.784961,-7.191715,-1.237813,2.986156,6.936286,9.214396,-7.758249,-0.922246,-9.124382,9.897917,-5.203621,6.319305,4.666764,-8.907696,9.971696,-0.450300,-7.629360,-0.340754,-8.192815,8.021108,3.369014,-0.221270,5.161676,-6.467044,-6.675306,3.920077,0.995276,3.525142,-0.413954,9.754354,-7.366780,-7.444484,-5.026508,0.943078,-0.916526,-7.229891,7.200643,0.446125,8.201441,-2.764771,3.357620,7.486049,-0.015066,5.533579,-1.540359,6.892545,-4.413246,8.832925,-4.246696,-9.550702,0.099224,-1.831255,3.157321,5.845336,1.925906,-4.588581,1.957174,7.868195,-0.756599,-3.495907,2.105039,4.731301,8.057846,-2.216747,0.716388,-6.063208,-8.897155,9.429957,-3.438729,-2.177816,-8.206549,-5.851373,-6.551016,-3.741647,-1.739214],[0.020187,-6.231049,-4.645136,1.791755,5.284290,9.088508,8.216101,9.686511,0.789558,1.371369,2.779444,-8.085535,1.324857,-4.212495,9.103572,6.329536,-9.185326,-0.632818,0.911789,-6.249774,-7.348352,1.442451,9.280143,6.807353,-9.868813,-8.164938,-1.458170,-4.962000,-9.978041,9.446397,0.106635,-7.890952,-3.957216,-9.374166,5.061233,9.311117,-6.566511,7.889974,2.910269,-4.380979,-0.994418,8.088075,4.192732,-5.248495,-7.808649,-4.946559,-9.112871,-9.697182,1.808342,8.420021,5.505257,-0.301774,1.750059,4.107904,-1.634403,-3.360342,-7.922298,-7.463258,1.736867,7.715442,-0.617722,-7.521442,6.088727,-0.962711,6.664694,6.333335,-2.988354,9.537965,9.560110,-6.201449,-8.555918,-5.286684,-3.423114,9.161871,-0.744568,-4.746153,-9.700939,3.809765,6.451452,-8.938231,6.431912,5.687519,1.103512,8.585951,1.716242,5.715782,4.338606,-6.027941,-2.627815,1.740049,5.097840,3.222019,-7.614819,1.891636,-0.632988,9.806969,9.862384,1.859633,6.484473,8.812103,-1.201889,-4.748601,0.268387,-0.534604,-7.968265,-7.891966,5.367922,3.755643,-0.716141,2.114176,-1.071457,0.304694,0.023249,6.640225,7.375746,7.783060,8.206110,7.713598,-5.578747,-2.956192,-9.597799,-4.631907,-9.528111,8.180575,-5.426098,-1.726445,3.066715,-5.542710,-3.599615,8.484170,1.067082,-2.038413,7.375891,1.914804,5.240739,-1.349676,-4.152004,3.928747,1.789163,9.783651,6.670821,-7.862277,6.615535,6.309368,-1.966319,-6.564177,8.734442,-3.203147,-9.946025,-7.342961,5.232920,5.057591,-7.229965,7.097165,-8.516164,8.114157,-0.375037,-6.384953,0.130016,1.132583,3.895978,3.215905,-6.334373,1.529495,5.191838,-7.004295,-7.622050,-1.248228,-2.147206,-9.480257,-7.707877,-2.818720,-6.022974,8.822154,-4.172988,9.322286,-6.237202,-7.527574,1.570947,5.088926,-0.678148,5.828263,-9.551962,1.082535,1.052766,5.797636,3.383020,-6.303926,-3.220479,8.429694,5.180743,-0.764111,0.563211,-7.143426,-0.452505,6.216278,-2.514834,-2.912649,-6.582060,8.999928,0.284699,-6.478719,1.695753,-8.414362,-3.737011,-6.640864,2.035657,1.150551,-2.979832,1.216295,9.565150,2.571406,6.328784,-4.927239,9.753133,-5.154325,-9.149016,0.984170,6.036315,-4.128178,-3.464509,3.509959,5.584871,-2.817881,2.779790,1.262604,5.052973,-6.739508,-3.493845,-7.527278,-1.553950,-9.498721,9.278785,-5.201148,-3.004785,-0.382064,-1.092603,-0.296240,-5.118300,5.714208,-0.774703,1.715850,6.127044,-2.801706,-4.831007,5.256652,2.735690,-0.347983,4.921174,-1.128142,5.325486,-8.932843,-1.566033,9.517796,-3.021349,-7.669490,2.093964,-3.928268,6.586475,-3.357581,6.386949,2.850766,-1.174059,-3.157956,-4.018513,8.730764,1.447843,9.547907,-0.992469,2.839292,2.457781,7.172905,4.039422,2.939873,-4.466480,-7.737462,2.657496,7.785968,3.269236,-6.043201,-3.775083,6.023364,5.519057,2.887309,-7.140883,-2.052599,8.994382,-8.164876,7.060216,4.713729,-0.656904,-6.416348,7.714679,8.391605,0.058122,2.142484,8.575813,0.650966,9.025929,-8.765316,1.173798,-2.627453,-5.907377,0.675883,-7.183260,6.897387,8.049284,5.756897,5.406453,9.601038,-3.018464,-4.194654,-3.734864,-1.073280,8.472126,5.251031,-9.405819,6.676285,-8.667112,-6.892775,3.308071,2.496783,2.573487,-0.682047,7.630545,0.648033,-0.090887,4.288890,-1.419048,-2.838837,-1.555271,-4.492297,8.168789,7.198207,7.625583,1.032060,-4.593518,3.327850,2.936965,-0.735907,5.786053,-8.511155,-2.672507,-9.213907,8.720191,-3.675545,-3.669779,-1.231381,-6.058702,-6.364807,-1.355815,-5.611458,-9.172042,-3.011949,4.227023,0.836624,2.982160,-0.791871,7.763228,-7.052184]], dtype = "float32")#candidate|3019|(2, 360)|const|float32
call_3018 = func_2443_call(relay.reshape(const_3019.astype('float32'), [6, 8, 15]))
call_3020 = func_2443_call(relay.reshape(const_3019.astype('float32'), [6, 8, 15]))
func_363_call = mod.get_global_var('func_363')
func_366_call = mutated_mod.get_global_var('func_366')
const_3028 = relay.const([-2.423984,-3.933177,-6.030612,-2.256843,-1.130932,-5.800677,5.222674,6.111253,-3.881224,2.496940,-6.228177,5.571894,-4.171025,-0.044768,-2.180816,-7.977183,8.557304,0.862599,6.595463,2.211750,-3.950060,6.418240,-5.798075,2.936728,2.084236,1.268798,5.259156,4.469860,-1.223806,-2.969176,6.952982,2.308992,4.103683,3.569183,-2.592517,-1.554873,-9.419026,-3.702164,5.388776,8.718824,-0.331047,-1.969455,-5.778149,0.736334,7.087871,7.417184,-5.851124,2.368370,6.707316,5.478025,1.199840,8.980365,9.798541,-1.067118,3.927228,1.928534,-0.004217,-2.563960,-5.659807,7.737002,8.753895,-6.073221,-3.248456,0.880103,-5.424651,7.458341,-1.823007,4.966598,6.786182,-9.219453,-8.924024,-5.655815,7.913458,8.637500,0.483429,6.492721,8.077340,-4.262203,4.894013,5.265031,-7.306755,-2.178603,3.587359,2.140268,2.554976,-8.272615,9.366707,3.369643,0.283273,-6.542682,9.481536,4.848099,-6.283021,-5.466591,0.428220,5.244581,4.801472,-8.564858,-3.617400,9.769627,-6.558630,7.840719,-0.381284,-1.552028,5.408399,-8.563067,3.546315,1.327311,-1.944393,2.932224,8.998161,4.319698,-7.107129,-3.466424,4.300088,6.886903,2.673223,-3.220067,4.519292,8.814525,1.768860,9.113284,6.799769,-2.353010,2.757232,3.292594,1.181778,7.999286,-2.989772,-2.067825,3.938562,4.856326,-2.754757,-4.897695,0.888299,-3.589525,-6.252369,3.033264,-4.308802,2.849385,1.312859,-6.698483,5.839971,8.737874,1.202598,-5.503187,1.218555,8.061336,8.560741,2.578002,1.492295,6.126733,5.151844,1.779086,2.054728,9.384146,7.003406,6.780064,7.452987,8.282988,-8.523535,7.667849,7.298776,4.995391,4.409273,1.347589,-4.468354,-6.774769,6.222787,8.415776,-4.505041,-7.269831,-6.406009,-1.555469,-8.535599,7.930650,0.979831,-4.648413,0.208772,2.193046,-7.240587,-0.770135,-1.650055,-6.366744,-2.915901,-3.280406,1.062066,4.526823,-9.007070,0.295125,2.637853,7.580209,-5.357757,9.345685,1.457382,-1.231366,-1.782435,-4.953180,8.268809,-6.762125,-7.427076,-2.598384,8.002419,7.678801,4.831557,-1.287819,5.322165,-4.933330,7.928705,-9.299945,-4.698724,-8.205377,9.082546,1.941117,-0.325501,-2.221770,-5.560455,-4.589807,-1.900040,8.576840,-1.087258,-1.392306,9.131187,9.605767,1.613265,2.216513,-9.693484,-1.350866,-6.335567,-5.311033,3.479466,5.686605,8.845188,-6.201396,-0.838494,-1.922931,7.857623,-2.955504,4.178287,-4.542208,6.457060,-0.927480,1.690147,9.335588,7.120397,-3.993088,8.226305,-4.971244,2.996823,-3.749752,4.354254,7.510306,-8.221320,3.872268,6.523996,-5.661134,-3.104878,2.208685,4.220184,6.581046,-9.146768,1.031924,-9.439530,2.840401,-8.014239,2.356490,-6.799571,7.506244,-9.843377,-3.542757,-9.790509,0.939306,6.513414,-0.385325,0.766299,6.965368,-5.888615,4.372502,3.501317,-2.113490,0.556190,8.657314,-2.075028,-5.642331,6.679354,6.709922,0.464899,-3.448451,6.267557,1.891562,4.259375,-6.851042,5.476162,-7.580205,-0.796947,2.245948,-1.850881,7.034994,3.425463,1.368559,-3.999258,-0.605333,1.200011,5.247718,7.426304,-7.074970,4.288157,-9.721338,-3.445004,3.324184,-1.876001,-4.106755,1.454529,9.763964,1.282714,-1.568357,4.965960,8.784637,9.350606,8.586580,5.597610,9.803114,0.861564,-8.457190,-8.760913,-0.254545,-4.377624,0.174923,1.767704,-5.507199,-9.727754,-2.427256,2.085278,-9.352646,-0.107555,7.902305,3.282631,7.185490,8.575819,4.854225,5.046382,-1.474296,-0.701820,-6.061409,-2.118956,8.750550,9.631216,2.526257,6.022640,2.245597,2.853516,-6.556350,-4.510632,9.895707,2.164671,6.230120,0.712686,-3.239263,-2.946171,6.888839,3.102139,1.448006,-3.066362,3.358926,-5.394835,-6.473838,2.249597,4.293012,-9.700780,4.257880,3.771464,-5.796599,-9.907469,-6.469674,5.646246,-5.869943,-5.123784,5.358098,-7.154594,5.759691,-5.493762,-4.930787,-3.358710,3.825094,8.786810,-5.941377,5.474686,0.826398,6.346365,-5.347469,4.289807,7.345543,-9.378871,-7.080772,4.102072,-4.915037,2.517205,6.692391,-2.530982,-8.422919,-5.639801,-4.539315,-2.867080,6.309753,9.389337,-3.977064,-5.632451,0.534744,2.854022,5.692374,7.093500,-8.236286,7.729383,-6.250372,-9.566705,5.453388,3.705219,-2.175595,6.870111,4.031927,-1.847209,4.589540,3.367273,1.583067,-0.541876,6.977410,-6.922382,9.492192,7.329355,9.743445,-5.030940,-1.248053,-8.475531,0.593101,6.731146,4.778771,6.689561,-9.498855,7.984668,4.684754,2.812848,1.847284,-7.644167,8.594602,-5.799442,3.013731,8.597299,-4.865790,-2.818433,0.457392,-2.240553,4.509819,2.472567,-1.960287,-7.298740,-3.847830,-8.588675,6.351215,-1.454299,-3.732286,-9.505796,-0.258080,-8.884737,5.309357,-8.873354,-7.457162,1.733701,-0.800549,4.992732,8.427587,-0.899925,7.510756,3.656336,6.570252,0.666555,-8.406131,5.181519,5.200985,9.909715,2.396914,7.732903,-8.781041,7.344664,7.032699,0.478852,-2.097973,1.300607,-9.108420,0.212487,-6.040580,-3.354528,-7.653230,7.741676,0.671409,-0.561342,2.637809,-1.509145,1.452234,-8.657504,-9.976935,9.942764,-5.902053,0.929921,-5.071500,-5.940508,5.762927,2.470092,2.767958,-0.180334,-2.318647,9.897822,-4.281555,2.613356,4.610322,9.846366,-4.380296,3.304252,5.395800,8.184062,3.762629,-6.856285,-7.963836,-7.319749,1.148187,-5.432506,6.317367,7.500722,9.501261,7.547160,-1.794272,8.570543,-8.966161,6.114731,9.117841,7.339301,0.857513,0.180106,9.369696,1.477462,-1.874288,-0.395786,1.467377,-3.524295,0.872448,6.806967,-2.863230,-2.721040,0.335301,-2.147546,-2.154322,7.644412,8.617375,-2.646090,-9.616777,4.254070,3.438985,8.942508,9.400081,-3.302844,0.046443,1.695378,-1.976145,-7.086826,4.223481,-3.467004,-6.560386,5.407111,-0.608513,2.246169,0.419164,-9.826035,-0.289131,8.099786,2.432767,-6.194349,-9.457911], dtype = "float64")#candidate|3028|(576,)|const|float64
call_3027 = relay.TupleGetItem(func_363_call(relay.reshape(const_3028.astype('float64'), [16, 9, 4])), 0)
call_3029 = relay.TupleGetItem(func_366_call(relay.reshape(const_3028.astype('float64'), [16, 9, 4])), 0)
output = relay.Tuple([bop_3009,call_3013,var_3014,call_3018,const_3019,call_3027,const_3028,])
output2 = relay.Tuple([bop_3009,call_3015,var_3014,call_3020,const_3019,call_3029,const_3028,])
func_3035 = relay.Function([var_2989,var_2990,var_3014,], output)
mod['func_3035'] = func_3035
mod = relay.transform.InferType()(mod)
var_3036 = relay.var("var_3036", dtype = "int16", shape = (6, 9, 7))#candidate|3036|(6, 9, 7)|var|int16
var_3037 = relay.var("var_3037", dtype = "int16", shape = (6, 9, 7))#candidate|3037|(6, 9, 7)|var|int16
var_3038 = relay.var("var_3038", dtype = "float64", shape = (48,))#candidate|3038|(48,)|var|float64
output = func_3035(var_3036,var_3037,var_3038,)
func_3039 = relay.Function([var_3036,var_3037,var_3038,], output)
mutated_mod['func_3039'] = func_3039
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3073 = relay.var("var_3073", dtype = "uint32", shape = (3, 4, 6))#candidate|3073|(3, 4, 6)|var|uint32
var_3074 = relay.var("var_3074", dtype = "uint32", shape = (3, 4, 6))#candidate|3074|(3, 4, 6)|var|uint32
bop_3075 = relay.logical_xor(var_3073.astype('uint32'), relay.reshape(var_3074.astype('uint32'), relay.shape_of(var_3073))) # shape=(3, 4, 6)
func_578_call = mod.get_global_var('func_578')
func_583_call = mutated_mod.get_global_var('func_583')
const_3087 = relay.const([3.102137,6.482774,3.261894,3.655134,3.998321,-4.552379,3.102365,-9.636088,5.814823,-0.056535,-6.003860,-0.066730,3.807378,5.426303,9.088711,3.125381,-9.099543,8.763349,4.306892,6.403810,-9.810277,-5.958993,-4.380352,-3.431398,-3.579205,-7.964528,3.657806,1.453420,6.585822,4.516928,0.344035,6.742798,8.502323,0.885613,4.556709,8.437957,9.251909,9.442384,3.818099,1.489633,-9.418417,-4.124155,-8.772000,4.436015,-4.974633,-2.140532,9.730177,6.893261,-8.174437,1.214879,8.845863,-7.269638,-7.213714,5.481796,6.580618,3.024131,-0.182818,6.715673,3.008488,-9.734590,-1.917932,-4.525430,-3.758130,-2.223632,-7.250624,-2.031685,8.485046,-3.465136,-8.695111,9.210727,4.527530,-6.507156,-6.206583,-3.937895,-4.504193,8.043758,-5.163212,-2.824136,7.311841,7.553831,1.933861,7.513965,-3.002420,-5.992482,2.814584,-1.851151,0.714006,9.652139,7.754454,1.709671,-0.217701,-4.099432,-4.214993,-8.805457,3.995726,-5.680668,3.452714,1.828198,6.367149,6.918937,7.097238,3.622679,-4.290711,-1.482830,1.021986,0.479622,-6.906127,-2.492334,-2.156210,-2.849622,-6.656262,-4.957311,2.968600,-5.696203,-6.714224,4.776884,8.841184,-8.054973,8.777389,5.980271,-5.500813,5.834360,-2.283924,-6.209389,-1.756865,0.822446,8.276437,-8.955274,5.192969,0.156898,-5.990000,-7.097344,-5.196641,4.058770,8.642463,-0.415299,0.439385,3.420344,0.692854,4.914622,-6.652345,-3.200615,-5.102123,-1.124521,2.494443,9.074934,2.547396,-1.082607,-2.567578,6.226794,-0.077611,-0.654269,7.344516,-4.194055,3.899995,-2.619111,-5.182579,7.618753,-9.398243,-9.892968,4.481988,0.255239,6.357829,-4.691887,-2.051420,-2.076120,4.965265,-4.660337,-8.909165,4.004365,-8.035472,6.503503,0.175683,-7.273357,2.346514,0.900752,-6.180508,2.741176,-9.573392,-4.882317,8.887514,-4.349843,8.358322,-1.285672,3.264738,5.866436,8.862588,-7.993250,0.805751,-0.866183,4.630467,6.657852,6.584145,-3.314405,2.271884,-6.423023,1.179108,6.286371,2.289665,-1.892166,-3.754582,1.511607,-2.626927,-2.531041,-0.776205,-8.639856,-3.152923,4.126468,-1.300592,-8.534409,-8.593258,7.685991,8.528746,-9.319548,-6.832761,9.438507,-2.229040,-6.912784,-7.023415,-9.503464,-7.700568,-7.618933,1.737968,-8.128806,5.104134,4.815363,5.495161,2.596504,1.497298,5.793395,-9.957631,-9.077969,3.400470,-7.420235,2.924527,-7.129582,2.117606,7.404283,4.381858,6.262050,-7.460708,-8.491941,4.762779,-6.615832,-9.673217,-4.307723,-4.659963,3.296269,9.893718,3.692704,8.770528,-1.883095,-9.150577,7.484372,6.360131,3.222117,9.005448,8.267211,2.837472,8.594946,-1.626012,5.483445,5.003397,-5.104830,-7.646363,6.420250,-9.748123,-4.968205,5.297916,-5.708004,-2.088014,-8.798869,2.072103,-1.260247,0.577468,-5.178136,6.199246,-5.107620,7.446061,-0.134805,-9.285907,2.102824,7.114727,-2.146587,4.918971,-8.914975,-0.572555,9.458741,-2.836146,-9.344044,7.844431,1.543989,-5.996863,6.529565,5.599472,6.820021,-5.891633,-1.569671,3.161470,-4.307199,2.661733,-4.911126,-3.031458,0.048194,-9.992362,-0.667566,1.434769,-7.803917,-9.221749,3.979200,0.237011,8.064725,5.310465,-0.780019,-4.715844,3.929155,4.480390,8.156024,9.383006,-5.725295,4.993697,5.496984,8.775165,-2.255569,-2.469252,5.521378,0.715729,9.467761,-2.263975,3.180450,-2.760331,-8.700870,-0.637630,2.913845,-0.860698,6.629886,9.869101,-4.664448,7.099930,-9.647798,-0.136144,8.369135,-8.223691,-3.616144,-5.611362,-7.406112,-8.142934,-1.421837,-5.957568,-9.470993,-8.230739,-3.042391,9.450935,-6.663597,-6.398640,-2.038820,-1.338204,-7.084153,-1.362579,7.388270,-0.008375,9.063563,-7.851316,7.023903,-8.482637,4.750596,-6.227445,-9.193384,4.307912,-2.577606,4.273127,-7.776906,-6.227699,-8.151632,-0.685516,-0.877016,9.322527,4.755227,6.111522,3.272991,0.480366,-6.793961,-1.999182,5.764690,8.578236,7.742520,-3.166077,-9.527214,-2.930837,6.988168,-9.829670,1.469242,2.481263,1.233549,-9.626500,-9.218888,-6.054408,4.139059,7.756540,-6.800350,-4.783184,2.271293,3.456631,9.124859,1.407711,-0.781903,-1.991116,9.144596,3.986150,1.379889,3.399732,2.528878,-9.578007,7.780600,1.734671,7.858162,4.517285,-2.052650,-8.240511,4.662816,-8.169833,-7.260469,1.470268,-9.870562,-0.745311,-8.120228,-1.020885,5.651237,-9.097879,-7.693906,-9.696568,6.171880,4.478685,3.963003,-7.774444,8.721381,-4.940116,4.322790,4.518104,-6.192800,0.528707,-5.018578,-3.420272,6.462120,-8.503725,-2.146301,9.851579,-4.282784,0.738984,-8.308471,-9.221814,-1.064380,7.408699,9.555814,-7.159089,5.955311,-1.918840,0.098592,7.092169,-8.982664,-6.346874,6.160715,-8.679894,-7.629961,6.889064,0.233785,-9.713895,-4.096179,-1.467377,1.870672,-9.762565,-9.674841,-1.088679,2.854913,-1.837912,8.301677,2.665861,-7.237335,-3.474065,8.017705,-8.164246,-0.269989,0.525503,-9.818873,-3.687806,-3.847614,-7.438566,8.886308,-1.053602,7.907970,-2.799038,3.007463,3.181278,-4.025666,7.833629,7.216122,-6.210686,-5.835448,-2.265577,2.493382,-9.798713,6.182670,1.084402,4.891799,-3.766215,-3.196946,6.723043,-7.012604,-5.667636,5.987680,-8.298277,0.061582,-9.695711,-9.133116,-1.946810,8.443317,1.006005,-2.505253,3.073173,-1.481512,-8.446793,7.020124,6.560185,-7.454014,-3.015072,4.649558,-4.692737,2.422095,-6.580451,9.844488,-2.815504,-7.181264,-6.535441,-9.103141,-4.973015,3.504545,5.985753,3.954740,-0.312976,-6.623076,2.108601,9.795048,-1.104576,-5.913449,2.250687,-5.908468,-4.114799,4.452370,7.504044,-8.597128,3.256866,-4.077670,-4.987981,0.609082,4.263083,1.897396,5.367135,-9.084400,-3.581041,-0.189790,-3.006581,0.866937,6.099134,9.979354,-5.746755,6.020489,8.099049,-4.549411,7.838479,-3.761061,-9.617691,1.861434,9.230329,1.227996,-2.114322,2.710709,-0.561625,6.096622,7.960592,-3.697874,-3.803693,9.900751,6.585099,-0.325598,9.970687,0.569857,-5.269289,9.473647,-0.831965,7.320232,1.761784,-6.311162,5.051673,8.357678,-5.052338,-8.194461,6.511226,7.598818,-9.200951,2.781777,-7.992546,6.210281,8.436181,-1.969704,5.993362,-3.525585,-0.127047,5.274561,-8.556507,4.496049,-5.483173,-2.089690,9.818199,2.733902,8.154819,-6.688958,9.348284,-0.727213,-3.556239,5.028749,5.721856,-8.517123,-0.388605,4.339645,4.591183,8.387080,7.483158,6.588987,2.862217,-6.313738,-8.083349,0.631951,-9.384350,-9.537697,-5.925446,-0.775110,-8.374764,-4.520364,-5.678214,7.357098,-5.136460,-1.770281,-5.657818,-3.726630,-0.584196,-4.292428,3.292216,-5.458082,-1.911070,9.897136,-8.056967,-3.310491,-0.871368,7.849204,-3.598201,-4.759866,-4.944704,-5.270212,1.205414,-7.425506,8.721730,-8.795180,-6.249506,-4.946996,3.280730,-6.978338,-4.854347,-5.935325,3.210847,7.981712,0.698229,-3.267424,-6.511204,-3.709479,8.591471,2.691979,-1.275327,-0.477989,4.724327,4.321061,-6.781069,-8.018255,-7.964916,7.797256,2.907668,9.952124,0.414619,-1.970876,2.532663,0.565362,3.789085,6.600877,-9.128820,9.212295,6.040154,-0.922445,-2.002590,-6.747598,-8.913587,-4.779418,-7.435223,-5.460051,6.792073,-5.332335,9.068364,6.164328,-8.683350,-1.577757,-2.134390,-5.841834,-5.719668,7.760299,-5.189033,3.707723,-7.776735,-7.163262,-2.595785,-8.527208,6.301479,-5.866960,-7.304913,2.079772,-4.550376,7.908600,1.838487,-7.421352,-6.400891,-4.761222,7.498913,1.328946,1.148802,5.112066,-3.527076,3.295157,-2.675914,7.433428,-5.015535,7.000603,-4.697549,0.112575,8.563714,-4.063690,-4.923241,-3.265985,-3.791020,9.192847,7.717187,3.342327,-4.852981,1.471116,-7.686473,8.006758,4.154563,-6.492200,5.957413,-8.468086,1.398813,-8.864839,8.087637,-7.759184,5.227749,-3.315723,-2.356064,-0.174440,-0.591179,8.060218,-8.873973,4.192571,2.311185,-2.578284,-3.976383,1.784808,9.714715,3.554506,-2.232822,-0.419564,9.128485,-1.640640,0.158347,-4.597082,-2.653563,-0.717376,-9.110992,1.323757,9.767566,-7.220991,-7.443136,-5.176465,3.661146,-9.661838,1.974012,8.720540,3.940097,-2.903445,8.217736,6.698789,-8.919111,-8.715991,8.688646,-0.010325,6.377460,-9.340581,0.287636,3.959219,-9.714025,-8.205062,1.409050,-5.306540,-1.082690,4.284958,1.418751,2.507948,-4.130343,-4.170515,5.516941,0.887857,4.421564,-6.279771,-5.523934], dtype = "float64")#candidate|3087|(819,)|const|float64
var_3088 = relay.var("var_3088", dtype = "float64", shape = (288, 2))#candidate|3088|(288, 2)|var|float64
call_3086 = relay.TupleGetItem(func_578_call(relay.reshape(const_3087.astype('float64'), [7, 13, 9]), relay.reshape(const_3087.astype('float64'), [7, 13, 9]), relay.reshape(var_3088.astype('float64'), [576,]), ), 3)
call_3089 = relay.TupleGetItem(func_583_call(relay.reshape(const_3087.astype('float64'), [7, 13, 9]), relay.reshape(const_3087.astype('float64'), [7, 13, 9]), relay.reshape(var_3088.astype('float64'), [576,]), ), 3)
func_2463_call = mod.get_global_var('func_2463')
func_2465_call = mutated_mod.get_global_var('func_2465')
call_3093 = relay.TupleGetItem(func_2463_call(relay.reshape(var_3088.astype('float64'), [576,])), 3)
call_3094 = relay.TupleGetItem(func_2465_call(relay.reshape(var_3088.astype('float64'), [576,])), 3)
func_1162_call = mod.get_global_var('func_1162')
func_1168_call = mutated_mod.get_global_var('func_1168')
var_3098 = relay.var("var_3098", dtype = "int32", shape = ())#candidate|3098|()|var|int32
const_3099 = relay.const([-4,-4,-10,-7,2,-1,10,8,9,-10,-4,7,1,-9,6,-8,-10,-3,7,7,-5,2,8,-9,-6,9,5,3,7,5,-2,6,-5,-2,6,-4,8,10,-8,4,-5,3,9,8,-10,9,-5,-1,3,-3,-5,-2,4,10,1,5,6,-6,4,1,6,-3,7,1,9,1,-2,-6,4,-10,9,1,-5,-8,-2,2,-1,8,9,9,5,2,2,-4,4,-3,1,-6,-4,5,7,3,10,-7,-1,9,-6,-1,-10,9,1,5,-8,8,9,-8,-9,-4,10,-10,-8,5,3,-6,-5,5,7,-7,2,6,9,8,3,-8,3,-6,-8,-7,-8,-4,-8,-8,10,9,-3,5,-9,9,-5,8,5,-9,4,-6,10,7,10,10,-3,3,-6,-7,3,8,4,-6,-8,6,4,6,3,-2,1,2,-3,-1,5,-3,-5,-6,4,10,8,8,7,6,7,10,1,3,6,2,-1,10,3,7,-6,3,-2,-8,5,8,1,2,-1,-6,7,8,3,6,-4,5,-1,-5,-7,3,-6,-4,10,-9,-10,-9,4,-7,-7,-3,7,10,6,2,-8,-7,-7,-1,8,-1,6,-5,9,-7,6,-7,10,10,3,-1,-8,-5,-1,3,6,-8,-4,-7,7,-9,-6,4,2,-1,-8,7,-1,3,9,-1,-10,1,2,-6,2,9,-10,3,1,-10,-6,-6,-9,7,5,-7,7,-8,6,7,9,-5,1,2,9,10,9,2,-3,8,-9,2,2,4,-5,-3,6,-3,5,-8,7,2,4,-6,5,6,8,9,-7,6,-5,-6,9,10,7,8,10,2,2,-10,1,-10,-3,8,3,3,5,10,1,5,2,3,-1,-5,-4,-1,-2,-3,9,6,-7,1,10,-7,-5,-8,6,-8,-8,-4,-9,-7,-6,-5,-4,-1,10,5,5,-1,-4,7,2,-1,-8,5,1,-6,4,4,-2,1,6,2,-7,10,-3,5,2,-10,-2,6,6,-8,3,8,-6,-9,-4,4,5,-5,2,-6,6,5,-10,1,2,8,-3,3,7,2,3,3,1,-6,7,-9,9,-3,2,-7,-3,-2,-3,-6,4,-2,-5,7,-4,-2,7,6,-3,7,2,2,10,2,6,6,7,9,4,9,-10,-8,10,5,4,-1,-9,-4,6,4,3,3,9,-1], dtype = "int32")#candidate|3099|(448,)|const|int32
call_3097 = relay.TupleGetItem(func_1162_call(relay.reshape(var_3098.astype('int32'), []), relay.reshape(const_3099.astype('int32'), [8, 4, 14]), relay.reshape(const_3087.astype('float64'), [819,]), relay.reshape(var_3088.astype('float64'), [576,]), ), 1)
call_3100 = relay.TupleGetItem(func_1168_call(relay.reshape(var_3098.astype('int32'), []), relay.reshape(const_3099.astype('int32'), [8, 4, 14]), relay.reshape(const_3087.astype('float64'), [819,]), relay.reshape(var_3088.astype('float64'), [576,]), ), 1)
func_2260_call = mod.get_global_var('func_2260')
func_2264_call = mutated_mod.get_global_var('func_2264')
var_3103 = relay.var("var_3103", dtype = "float32", shape = (9, 4))#candidate|3103|(9, 4)|var|float32
var_3104 = relay.var("var_3104", dtype = "int8", shape = (1320,))#candidate|3104|(1320,)|var|int8
call_3102 = relay.TupleGetItem(func_2260_call(relay.reshape(var_3103.astype('float32'), [4, 3, 3]), relay.reshape(var_3104.astype('int8'), [660, 2]), ), 2)
call_3105 = relay.TupleGetItem(func_2264_call(relay.reshape(var_3103.astype('float32'), [4, 3, 3]), relay.reshape(var_3104.astype('int8'), [660, 2]), ), 2)
uop_3108 = relay.sin(var_3088.astype('float64')) # shape=(288, 2)
func_2463_call = mod.get_global_var('func_2463')
func_2465_call = mutated_mod.get_global_var('func_2465')
call_3126 = relay.TupleGetItem(func_2463_call(relay.reshape(var_3088.astype('float64'), [576,])), 0)
call_3127 = relay.TupleGetItem(func_2465_call(relay.reshape(var_3088.astype('float64'), [576,])), 0)
uop_3129 = relay.log10(uop_3108.astype('float64')) # shape=(288, 2)
func_2463_call = mod.get_global_var('func_2463')
func_2465_call = mutated_mod.get_global_var('func_2465')
call_3157 = relay.TupleGetItem(func_2463_call(relay.reshape(uop_3108.astype('float64'), [576,])), 0)
call_3158 = relay.TupleGetItem(func_2465_call(relay.reshape(uop_3108.astype('float64'), [576,])), 0)
func_578_call = mod.get_global_var('func_578')
func_583_call = mutated_mod.get_global_var('func_583')
call_3160 = relay.TupleGetItem(func_578_call(relay.reshape(const_3087.astype('float64'), [7, 13, 9]), relay.reshape(const_3087.astype('float64'), [7, 13, 9]), relay.reshape(call_3093.astype('float64'), [576,]), ), 4)
call_3161 = relay.TupleGetItem(func_583_call(relay.reshape(const_3087.astype('float64'), [7, 13, 9]), relay.reshape(const_3087.astype('float64'), [7, 13, 9]), relay.reshape(call_3093.astype('float64'), [576,]), ), 4)
output = relay.Tuple([bop_3075,call_3086,const_3087,call_3093,call_3097,var_3098,const_3099,call_3102,var_3103,var_3104,call_3126,uop_3129,call_3157,call_3160,])
output2 = relay.Tuple([bop_3075,call_3089,const_3087,call_3094,call_3100,var_3098,const_3099,call_3105,var_3103,var_3104,call_3127,uop_3129,call_3158,call_3161,])
func_3162 = relay.Function([var_3073,var_3074,var_3088,var_3098,var_3103,var_3104,], output)
mod['func_3162'] = func_3162
mod = relay.transform.InferType()(mod)
var_3163 = relay.var("var_3163", dtype = "uint32", shape = (3, 4, 6))#candidate|3163|(3, 4, 6)|var|uint32
var_3164 = relay.var("var_3164", dtype = "uint32", shape = (3, 4, 6))#candidate|3164|(3, 4, 6)|var|uint32
var_3165 = relay.var("var_3165", dtype = "float64", shape = (288, 2))#candidate|3165|(288, 2)|var|float64
var_3166 = relay.var("var_3166", dtype = "int32", shape = ())#candidate|3166|()|var|int32
var_3167 = relay.var("var_3167", dtype = "float32", shape = (9, 4))#candidate|3167|(9, 4)|var|float32
var_3168 = relay.var("var_3168", dtype = "int8", shape = (1320,))#candidate|3168|(1320,)|var|int8
output = func_3162(var_3163,var_3164,var_3165,var_3166,var_3167,var_3168,)
func_3169 = relay.Function([var_3163,var_3164,var_3165,var_3166,var_3167,var_3168,], output)
mutated_mod['func_3169'] = func_3169
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3450 = relay.var("var_3450", dtype = "uint8", shape = ())#candidate|3450|()|var|uint8
var_3451 = relay.var("var_3451", dtype = "uint8", shape = (11, 5, 3))#candidate|3451|(11, 5, 3)|var|uint8
bop_3452 = relay.logical_xor(var_3450.astype('uint8'), var_3451.astype('uint8')) # shape=(11, 5, 3)
uop_3465 = relay.sqrt(var_3451.astype('float32')) # shape=(11, 5, 3)
output = relay.Tuple([bop_3452,uop_3465,])
output2 = relay.Tuple([bop_3452,uop_3465,])
func_3470 = relay.Function([var_3450,var_3451,], output)
mod['func_3470'] = func_3470
mod = relay.transform.InferType()(mod)
var_3471 = relay.var("var_3471", dtype = "uint8", shape = ())#candidate|3471|()|var|uint8
var_3472 = relay.var("var_3472", dtype = "uint8", shape = (11, 5, 3))#candidate|3472|(11, 5, 3)|var|uint8
output = func_3470(var_3471,var_3472,)
func_3473 = relay.Function([var_3471,var_3472,], output)
mutated_mod['func_3473'] = func_3473
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3503 = relay.var("var_3503", dtype = "float32", shape = (14, 3, 4))#candidate|3503|(14, 3, 4)|var|float32
const_3504 = relay.const([[[-8.775474,-1.856092,-7.784719,-8.431269],[-8.160064,-9.333460,-7.512644,-0.621181],[-5.468347,0.635029,0.636464,5.603409]],[[-9.352847,-0.829962,-1.795688,-3.315653],[1.996295,-8.083793,5.593667,-9.064572],[8.327519,7.451407,-1.736072,0.165413]],[[-4.914907,1.005846,-8.297534,1.159058],[3.801924,7.897521,6.318255,-9.947577],[-3.790740,5.277494,-2.404573,3.375735]],[[-5.472375,9.568972,-6.417738,-9.077440],[5.390460,-8.937829,-1.888680,5.066999],[-8.358497,3.574175,-5.356230,-6.691815]],[[-1.370065,-6.648842,7.787832,-9.046198],[-8.064281,-5.187787,-3.859649,-2.955544],[6.256821,8.271913,-3.308649,1.633239]],[[-8.900459,-5.301215,-3.600470,3.208003],[-1.575708,0.390213,-5.163378,-1.067946],[7.039830,4.171939,1.812283,-5.747405]],[[4.627828,-0.440522,-2.036243,-8.763780],[7.066318,0.197807,2.567978,-1.248289],[-9.560390,7.108916,-3.487145,-8.831906]],[[-0.355800,8.796709,7.117157,-4.432143],[-1.548503,-3.639490,-4.618709,5.236958],[3.074610,-1.920077,4.867442,4.559847]],[[-5.722555,-1.991963,-0.876480,5.596159],[5.648321,-7.083671,-5.208429,2.384081],[4.142615,9.074397,-7.427877,1.100642]],[[2.739062,-5.788777,6.938147,-5.004425],[-1.585348,-8.074241,2.748230,4.259888],[-7.705506,1.288356,8.159480,8.590485]],[[-6.030009,-5.324019,4.250282,9.684278],[0.158402,-0.577708,5.331460,0.739564],[0.785517,-1.137518,2.273408,0.087642]],[[4.770971,-4.054828,2.188262,9.354897],[-2.366832,-3.509301,-6.538544,-4.751782],[7.693270,-8.544181,4.040163,-7.907056]],[[0.409405,-7.593317,0.643108,-0.878189],[-7.170542,8.587710,2.963642,-3.433286],[-4.720413,4.736284,-6.944530,9.142308]],[[-1.078552,-6.869696,7.467926,6.998787],[7.696992,5.881564,4.700076,5.686571],[-7.400871,-9.757218,8.706652,6.509847]]], dtype = "float32")#candidate|3504|(14, 3, 4)|const|float32
bop_3505 = relay.mod(var_3503.astype('float32'), relay.reshape(const_3504.astype('float32'), relay.shape_of(var_3503))) # shape=(14, 3, 4)
func_2260_call = mod.get_global_var('func_2260')
func_2264_call = mutated_mod.get_global_var('func_2264')
const_3511 = relay.const([9.399893,5.492589,-9.403801,6.100773,1.565641,0.200412,0.506676,7.067730,-2.931472,7.910561,1.097149,-4.201251,7.403315,4.878356,-2.369746,-5.285631,-8.095318,-1.290114,-6.471971,3.684622,-3.583592,9.278239,-2.647398,-4.545715,-4.122779,-8.415478,6.554320,2.066866,8.058226,1.328669,2.448167,3.367044,5.075672,-1.029404,1.633706,6.888312], dtype = "float32")#candidate|3511|(36,)|const|float32
var_3512 = relay.var("var_3512", dtype = "int8", shape = (1320,))#candidate|3512|(1320,)|var|int8
call_3510 = relay.TupleGetItem(func_2260_call(relay.reshape(const_3511.astype('float32'), [4, 3, 3]), relay.reshape(var_3512.astype('int8'), [660, 2]), ), 1)
call_3513 = relay.TupleGetItem(func_2264_call(relay.reshape(const_3511.astype('float32'), [4, 3, 3]), relay.reshape(var_3512.astype('int8'), [660, 2]), ), 1)
output = relay.Tuple([bop_3505,call_3510,const_3511,var_3512,])
output2 = relay.Tuple([bop_3505,call_3513,const_3511,var_3512,])
func_3515 = relay.Function([var_3503,var_3512,], output)
mod['func_3515'] = func_3515
mod = relay.transform.InferType()(mod)
var_3516 = relay.var("var_3516", dtype = "float32", shape = (14, 3, 4))#candidate|3516|(14, 3, 4)|var|float32
var_3517 = relay.var("var_3517", dtype = "int8", shape = (1320,))#candidate|3517|(1320,)|var|int8
output = func_3515(var_3516,var_3517,)
func_3518 = relay.Function([var_3516,var_3517,], output)
mutated_mod['func_3518'] = func_3518
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3822 = relay.var("var_3822", dtype = "float32", shape = (4, 4, 4))#candidate|3822|(4, 4, 4)|var|float32
uop_3823 = relay.acosh(var_3822.astype('float32')) # shape=(4, 4, 4)
output = uop_3823
output2 = uop_3823
func_3837 = relay.Function([var_3822,], output)
mod['func_3837'] = func_3837
mod = relay.transform.InferType()(mod)
mutated_mod['func_3837'] = func_3837
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3838 = relay.var("var_3838", dtype = "float32", shape = (4, 4, 4))#candidate|3838|(4, 4, 4)|var|float32
func_3837_call = mutated_mod.get_global_var('func_3837')
call_3839 = func_3837_call(var_3838)
output = call_3839
func_3840 = relay.Function([var_3838], output)
mutated_mod['func_3840'] = func_3840
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4349 = relay.const([[[3,4,-9,-9,-9,3,2,8,-10,3,-2,-2,4],[-7,9,-7,-1,-10,-3,1,7,-9,-5,-10,-5,4],[-5,-4,-2,-8,-5,1,-7,6,-1,3,-3,6,3],[-5,-8,8,7,-4,4,-8,-6,-5,-2,-4,8,-1],[-4,-10,-5,-5,-4,-8,-6,-8,4,-9,4,5,7],[-1,9,-7,-2,-9,-2,2,9,6,4,-6,-9,9],[3,3,3,4,-7,4,9,-6,8,-6,-8,4,8],[10,-9,5,3,1,-2,-8,7,8,-5,-7,-2,2],[7,4,8,-5,3,8,-7,-3,-3,10,3,7,4],[-3,-9,8,2,1,4,-6,3,-4,-2,-9,-8,-8],[9,-10,-9,9,7,2,-9,-9,9,1,-1,2,2]],[[10,-2,-2,2,-2,-5,9,-8,3,-3,10,10,-6],[6,4,-9,9,-3,-2,3,5,5,-1,-6,2,-7],[-3,-6,9,7,4,-10,-7,4,-7,3,4,-8,5],[-9,3,-3,-4,5,3,-9,-8,-9,-3,6,1,-3],[-1,10,-5,5,5,-6,7,4,-5,-8,-3,10,4],[-5,-7,-10,1,6,-6,-6,1,10,7,-9,-7,5],[-7,-8,-1,6,3,-10,-3,-2,9,10,2,-9,1],[9,-6,10,9,6,10,10,7,10,6,1,-10,7],[-8,-10,4,-1,-6,-6,8,7,-4,-3,-6,-3,5],[-10,-2,8,3,2,-9,-6,3,-2,-5,-9,5,-10],[-7,5,-6,6,4,-9,-3,-2,4,-9,-1,-6,-7]],[[5,-8,-3,9,-6,7,-2,-7,-7,2,3,1,-2],[1,9,4,-2,-3,7,6,-7,-5,-3,-10,1,2],[-7,-5,5,7,-8,10,-1,-6,4,-2,-3,8,9],[6,9,5,-9,4,-8,8,10,-5,-10,1,-3,3],[-8,-1,10,-7,5,4,2,-8,9,-6,5,-1,-4],[-8,-5,-2,3,-10,-3,1,-10,-4,3,5,-9,10],[-4,-10,3,-5,9,1,-3,7,1,5,-3,6,-4],[-9,-1,8,9,-4,-6,-1,8,-8,-3,8,3,5],[-6,-5,1,-3,2,-8,9,-3,4,-9,6,-5,4],[-2,9,-6,-10,3,-4,4,10,-7,7,-4,-4,3],[-4,-8,2,-7,9,5,-4,-3,-7,-4,-10,-7,-1]],[[-9,-8,2,1,-10,1,-5,1,-4,-10,-3,3,-5],[-8,-3,5,-1,-2,-5,-4,7,4,-10,4,2,-8],[-3,2,-5,2,7,-7,10,-5,6,2,7,-7,-1],[-8,5,7,8,-7,10,-2,-9,-9,-10,-6,4,-10],[-3,7,-8,-6,2,10,-5,-4,8,-5,-4,-8,9],[-3,-3,5,1,-2,8,9,-3,1,-8,2,10,3],[-2,-8,-6,-5,5,-4,1,-3,-6,-8,-5,-5,-3],[-9,8,4,-6,2,-7,-10,6,-7,2,3,-4,4],[-9,2,-10,4,-6,8,3,1,-7,-2,-7,-10,-1],[-4,4,-6,-1,-7,-1,10,9,9,-8,-4,3,9],[-7,6,10,4,-2,-10,-3,5,-10,-3,-3,-5,-3]],[[7,6,-4,3,-10,-2,10,9,8,-1,-5,-7,9],[1,2,-2,-9,-5,9,3,-4,8,-2,5,8,-4],[-4,3,3,-9,5,-4,-10,-7,6,10,8,5,6],[9,-6,7,6,-5,-4,-1,-6,3,-3,-4,-4,-8],[-4,-2,3,-4,-6,8,3,-10,10,5,-6,1,-3],[-8,-1,9,1,6,5,-2,-5,5,-8,4,-6,-3],[9,2,6,9,8,5,-9,5,2,-5,2,2,4],[-7,5,3,-1,-8,-6,-6,-2,6,-1,5,2,8],[-1,3,8,-6,-9,9,-5,-9,-3,-5,-6,-8,4],[10,-5,-10,-3,-2,3,6,-8,-10,-3,1,-5,-2],[-9,-8,4,-1,-10,-5,-1,6,6,6,8,-6,6]],[[-8,6,-2,2,10,-1,5,1,4,9,-8,1,-9],[-9,-9,-4,5,-9,-7,-8,9,9,1,-5,3,-5],[1,4,-3,6,-9,-1,10,-3,2,-3,3,4,1],[-6,-5,5,7,5,2,3,10,8,-7,7,4,-2],[-2,-8,-6,-9,-7,7,4,3,-3,-9,-2,3,8],[9,-9,-9,-7,-6,-5,-6,-1,-6,6,5,8,2],[-1,-1,4,2,-1,4,10,-5,-9,9,5,-7,7],[-10,-5,8,5,6,-9,1,-1,-2,-7,8,-7,7],[2,-4,-7,-7,5,10,-5,9,7,6,7,9,-6],[-1,1,6,4,-4,2,-3,7,9,2,-7,-10,-4],[-2,2,-1,-10,2,8,8,7,5,7,3,-7,-3]],[[-3,9,9,-4,1,7,8,9,-5,9,-7,2,-8],[1,2,-10,-7,4,-2,9,2,7,5,-7,5,4],[10,-7,3,-6,3,1,6,-8,-6,4,-4,9,8],[-2,1,4,-4,-2,8,3,5,-1,-3,-9,-7,10],[-3,1,-4,2,-10,9,-7,2,-10,-7,3,3,-9],[7,-7,-7,6,2,4,-9,10,10,-8,5,9,2],[3,10,-10,-10,-5,-7,-9,-3,3,-7,10,2,-2],[-6,2,5,-3,-7,-3,10,-6,-7,4,-7,-1,-1],[4,9,-2,-6,-2,10,-5,10,4,6,-5,-6,-4],[-7,7,-8,-3,8,-3,-2,5,-2,-8,10,10,-3],[-10,5,2,-3,-10,-2,7,10,4,4,-3,4,9]],[[-5,-2,4,-7,-10,-3,-2,1,7,3,5,-1,-1],[-5,8,-8,3,-3,-4,7,1,-6,-2,6,4,-9],[9,9,-6,4,8,-9,2,7,-2,1,-4,-6,-3],[-8,-4,-9,8,-2,2,-2,-7,-3,-3,-6,-7,-10],[-3,9,-9,-4,-5,5,-1,-2,2,-7,-5,8,1],[2,-3,8,9,4,6,8,-3,7,-9,-8,2,-1],[-4,-2,-5,2,7,3,-1,3,-5,9,5,1,-6],[6,-4,3,-8,-4,1,10,-8,-3,10,-6,-8,-2],[-4,8,3,6,-1,-7,5,-1,-9,-4,3,-8,7],[7,-1,-8,-3,-5,-10,-4,-1,1,2,2,-2,8],[8,-8,10,-10,-6,3,5,-4,8,-8,-6,-7,-1]],[[-8,9,-10,-2,2,4,10,-2,-7,-3,-4,8,-2],[-2,-3,-9,-8,8,7,-6,9,-3,-10,-6,-4,10],[1,-3,-2,-3,-10,7,3,5,3,-9,1,-3,-8],[2,9,-1,9,5,-1,-8,3,8,-9,5,4,4],[7,8,8,7,-1,-8,-6,-4,1,5,-5,9,-6],[6,8,7,9,1,7,-7,-10,-1,-9,-1,-6,6],[1,-5,-2,7,3,7,1,-1,8,9,4,4,4],[8,4,-1,-1,-2,-9,5,4,2,-10,6,-3,-7],[4,4,7,-7,-8,-5,-5,4,-7,4,10,7,-2],[-9,-7,-4,8,-8,-2,7,1,8,1,2,2,-9],[5,-4,10,-2,10,7,-5,-2,-10,-4,-10,-1,-6]]], dtype = "int8")#candidate|4349|(9, 11, 13)|const|int8
const_4350 = relay.const([[[-8,7,-2,6,-5,10,-9,9,3,-8,6,4,9],[-9,-2,10,1,-1,2,-3,-6,8,2,-3,5,-3],[-1,2,2,-1,-4,6,10,8,-5,-9,-6,10,6],[-2,-7,5,10,10,-9,-8,-3,8,-2,-5,9,-1],[3,-2,5,4,-9,-1,-6,-2,-3,-10,5,-2,-4],[5,1,10,-5,4,6,-3,-7,-3,7,-10,6,-9],[-7,7,7,7,-7,-3,9,4,5,10,4,-5,-1],[-1,4,-7,8,2,-3,5,-6,-2,-8,-10,-6,5],[6,-8,6,3,9,8,-1,5,9,-5,10,10,6],[1,8,1,-7,-10,-8,2,10,-7,2,6,1,6],[9,-9,4,8,-5,8,7,6,9,-5,10,2,1]],[[3,9,5,-5,-4,4,3,-2,3,8,-7,7,-8],[3,9,7,-7,-1,-4,-7,-5,2,-10,8,-4,-3],[3,-2,-9,2,8,-1,-6,9,1,10,-9,-6,7],[-2,-10,1,-7,6,-7,-5,8,3,-10,-3,10,-9],[-4,-10,6,-1,7,2,6,-1,6,9,3,7,-6],[-4,-2,9,-7,8,-9,2,2,1,1,10,-5,1],[-4,-1,9,-9,10,10,5,1,-8,1,8,-9,-1],[6,9,-5,-8,-3,4,9,-2,-9,8,2,-4,7],[4,-1,-2,-2,-8,3,-5,-4,-10,1,1,-10,4],[4,-4,2,-4,6,3,8,7,7,2,9,4,6],[3,-4,-8,7,-1,4,3,3,6,-7,-7,-4,-6]],[[10,4,5,2,6,-10,-3,-1,6,5,-2,-3,5],[-3,-8,4,9,6,5,3,-7,4,6,7,3,-3],[4,-4,-7,-9,-6,-3,-1,6,6,-9,4,4,-3],[4,-6,9,-5,10,9,-5,2,-7,6,1,5,-6],[5,3,-3,-2,-3,1,-5,10,-10,-9,2,7,1],[1,-8,-7,8,-1,-6,-10,-7,9,-1,5,3,-8],[-10,-2,-5,-7,1,-5,5,-10,2,-3,2,-10,10],[-6,9,-7,-1,10,-3,8,-2,-1,-3,-9,2,2],[4,6,-7,-9,8,-7,-5,4,5,-4,-7,5,7],[-4,8,10,8,-7,10,-3,-10,-9,7,-6,7,9],[-4,-5,10,7,-7,-9,-7,-10,-2,7,-5,-10,-2]],[[-5,4,-7,10,-9,-3,-6,7,5,-4,1,10,-10],[4,7,4,-9,8,9,1,-8,-6,5,2,7,9],[-1,-4,5,-1,-8,-4,5,4,-2,6,9,4,7],[-6,-1,-10,5,3,4,10,-9,8,8,2,4,10],[9,-7,-4,-9,-9,7,-5,-2,6,-10,8,-1,-9],[-10,8,-6,6,3,10,4,3,3,-6,6,9,-7],[3,5,10,6,-7,-6,8,2,-3,7,-2,3,-5],[7,4,-1,1,-10,-3,-8,-9,-3,4,-4,6,5],[10,-5,7,-9,8,-2,7,-10,8,-1,2,3,1],[-5,7,-4,-7,3,1,-7,-3,-5,-10,-1,5,-3],[-5,-5,4,-3,9,7,4,-2,-4,-1,-7,-7,3]],[[5,-9,-3,7,-1,7,9,9,3,-9,-8,3,8],[-6,-9,3,5,2,-6,-7,7,1,1,5,-5,9],[7,-3,-4,-2,-9,4,-6,-3,7,-9,5,2,2],[-2,-2,-2,-4,6,5,-10,-10,10,5,8,5,-6],[-9,-8,8,8,2,-10,5,6,-1,-6,-5,9,-10],[-1,4,5,8,4,5,7,-4,-6,5,10,-2,-9],[3,-8,4,-9,-7,-4,10,-2,-10,2,9,2,4],[10,-10,-5,-8,9,-10,-2,3,-5,-4,7,7,-7],[-1,-10,2,-1,2,9,-8,-2,7,9,-10,4,-1],[-9,2,5,-6,8,-7,-2,6,-9,-10,-5,6,8],[6,1,2,-6,-5,-8,7,1,-7,-5,6,9,6]],[[4,8,10,-1,1,-3,8,9,-1,1,2,-4,-1],[2,8,-4,2,4,5,-4,-9,-5,-7,2,-1,-9],[-1,2,3,1,-2,6,4,5,-3,6,-8,-10,5],[2,-3,1,-3,-5,4,2,9,-7,5,-4,1,-2],[-1,3,-4,-4,-5,2,-7,-8,1,7,5,-6,-8],[-1,-10,-7,5,9,-6,-8,-9,10,-5,6,-8,9],[1,-4,-6,7,7,-7,7,-4,10,-5,-2,4,5],[7,-5,9,-2,4,-7,3,8,-8,7,-7,6,5],[-8,7,-9,7,3,-1,-8,-4,-9,-2,-7,1,4],[1,9,-10,-5,10,-3,9,4,2,6,-10,-3,1],[3,-3,9,9,-2,-6,-9,-8,-5,10,-8,3,6]],[[-8,-4,-8,10,-5,9,-8,6,5,-2,8,1,-7],[8,-2,1,-3,6,3,-5,4,2,-3,8,4,3],[7,9,5,-6,-2,-5,-4,-8,-9,-5,7,7,-6],[9,4,1,8,-9,-7,-7,2,6,7,4,7,8],[-7,-3,9,4,-4,7,6,4,-9,-4,5,8,6],[-7,-1,8,-10,-10,2,2,-10,-9,-5,2,6,-6],[8,4,-5,-6,5,-4,-4,2,10,-6,-5,7,-8],[1,-4,6,2,-5,-10,-3,6,8,4,8,7,4],[-8,9,1,1,-8,9,-4,7,9,9,-9,-7,-8],[-7,-10,-5,6,-4,6,4,2,-2,-10,-10,-10,6],[5,-4,-10,-8,-4,7,-8,6,-8,-8,6,7,-10]],[[6,-6,-1,6,6,8,4,-10,1,4,2,10,2],[-9,-1,-6,10,7,-6,9,-9,-7,-9,6,5,-9],[-1,8,-2,-2,7,-10,-1,10,-2,-9,-6,-5,-5],[4,10,8,2,-7,-2,-7,-9,6,6,9,-5,-10],[-7,5,-8,2,2,-1,4,9,7,5,-5,-7,-8],[-10,5,3,6,3,-7,-2,-5,-1,1,6,-8,-3],[3,3,-6,-6,4,4,7,6,2,-3,10,-7,6],[8,-4,6,-3,-1,-3,-2,6,10,3,7,3,6],[4,6,-7,-1,-5,10,-7,7,-10,8,4,9,-4],[-7,-6,4,-6,-7,3,4,6,-6,-9,-4,1,-4],[10,4,-10,4,-6,4,-9,3,-3,-9,-4,-4,7]],[[9,10,5,-7,-7,-4,2,9,9,9,1,-2,-2],[7,-9,-4,4,-4,-3,10,7,-10,3,5,9,-6],[7,-1,4,5,-4,-2,2,-9,-6,-6,2,-1,7],[-7,-1,9,10,-7,9,10,2,2,-9,-10,10,7],[3,-7,8,-9,8,7,5,4,7,-7,-7,2,8],[10,-9,9,7,-2,-3,-3,6,-1,-5,7,1,10],[1,-4,5,6,-1,6,3,2,-7,-9,7,4,-6],[-6,4,-5,-10,-5,-10,-9,-10,-10,2,-10,-9,2],[6,-9,-8,9,1,-9,4,-5,7,-7,10,-1,-1],[1,-8,7,-10,8,1,10,-5,4,2,-4,-5,7],[10,8,-9,-1,-2,2,-7,10,10,-2,8,4,5]]], dtype = "int8")#candidate|4350|(9, 11, 13)|const|int8
bop_4351 = relay.equal(const_4349.astype('bool'), relay.reshape(const_4350.astype('bool'), relay.shape_of(const_4349))) # shape=(9, 11, 13)
var_4365 = relay.var("var_4365", dtype = "int8", shape = (9, 11, 13))#candidate|4365|(9, 11, 13)|var|int8
bop_4366 = relay.minimum(const_4349.astype('int8'), relay.reshape(var_4365.astype('int8'), relay.shape_of(const_4349))) # shape=(9, 11, 13)
output = relay.Tuple([bop_4351,bop_4366,])
output2 = relay.Tuple([bop_4351,bop_4366,])
func_4386 = relay.Function([var_4365,], output)
mod['func_4386'] = func_4386
mod = relay.transform.InferType()(mod)
var_4387 = relay.var("var_4387", dtype = "int8", shape = (9, 11, 13))#candidate|4387|(9, 11, 13)|var|int8
output = func_4386(var_4387)
func_4388 = relay.Function([var_4387], output)
mutated_mod['func_4388'] = func_4388
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4663 = relay.var("var_4663", dtype = "float32", shape = (3, 15, 13))#candidate|4663|(3, 15, 13)|var|float32
uop_4664 = relay.sinh(var_4663.astype('float32')) # shape=(3, 15, 13)
bop_4674 = relay.not_equal(var_4663.astype('bool'), relay.reshape(uop_4664.astype('bool'), relay.shape_of(var_4663))) # shape=(3, 15, 13)
output = bop_4674
output2 = bop_4674
func_4677 = relay.Function([var_4663,], output)
mod['func_4677'] = func_4677
mod = relay.transform.InferType()(mod)
mutated_mod['func_4677'] = func_4677
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4678 = relay.var("var_4678", dtype = "float32", shape = (3, 15, 13))#candidate|4678|(3, 15, 13)|var|float32
func_4677_call = mutated_mod.get_global_var('func_4677')
call_4679 = func_4677_call(var_4678)
output = call_4679
func_4680 = relay.Function([var_4678], output)
mutated_mod['func_4680'] = func_4680
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5328 = relay.const([[[-4,5,-8,-2,-4,-8,10,1,3],[-10,-8,-5,5,-7,3,-5,2,6],[9,-7,-9,-2,-4,-4,8,-6,-10],[9,10,-4,-9,-9,-7,10,-3,2],[1,10,6,-2,2,3,1,-7,7],[4,-10,-6,8,-4,-3,2,2,-7],[7,-3,9,1,7,9,-9,1,-5],[-6,-10,-1,-1,-7,8,1,5,-6],[-1,2,-5,3,5,-3,10,-1,-4],[-5,9,7,-6,-5,-4,5,8,-5],[-2,6,4,-8,-1,-7,5,-7,2],[2,-2,-8,7,-2,-3,-7,7,2],[5,6,-9,8,-4,8,8,-5,6]],[[7,-9,8,7,-4,-1,6,6,-1],[-4,9,-5,-6,-7,-5,6,-8,-2],[4,-4,-2,7,-2,-9,-10,-1,2],[7,8,9,-9,-5,8,5,-7,-4],[-5,-8,-6,9,1,-6,-7,1,9],[1,4,6,5,8,2,2,5,-4],[10,-8,5,-4,-8,-8,-6,4,-6],[6,4,3,7,1,9,4,1,8],[7,8,10,2,-4,-8,1,-2,-7],[8,2,6,7,9,-4,-3,3,-8],[-7,9,-1,4,10,-4,2,-8,5],[6,-4,1,-3,2,-6,-9,3,6],[6,5,-7,2,4,2,6,3,-2]],[[-9,-9,-1,1,9,1,-9,5,-4],[4,-2,7,-6,-1,-2,-3,7,4],[-8,1,1,3,10,6,2,9,-6],[7,7,1,10,2,8,7,-1,3],[2,-1,-6,4,7,-10,-8,-5,5],[-6,-3,-4,2,-7,2,4,6,6],[-4,-9,-6,4,-8,-10,-8,-7,5],[-2,-3,-2,10,10,-3,9,-9,-8],[7,-10,2,7,-6,-1,-6,-10,1],[-7,-7,-9,5,8,4,10,2,8],[10,6,-2,9,-9,10,-10,-2,-3],[-7,-7,-2,-5,-6,-2,10,2,10],[-10,-1,-7,-8,-7,3,-1,8,-7]],[[1,-5,-8,-1,-1,-2,-6,-7,1],[7,2,-2,-4,7,-3,4,-8,-10],[6,-3,-6,-7,9,-9,-9,-2,2],[5,-10,-10,1,-6,-3,-5,10,7],[5,6,9,6,4,8,-5,2,7],[6,-5,7,9,-10,-4,-2,-10,-4],[-4,6,10,3,-7,9,-6,2,-7],[1,4,2,-8,-8,-5,-9,3,-8],[-9,8,-6,10,2,-5,-4,5,-10],[8,3,10,8,-6,5,6,3,-2],[1,-2,5,-3,6,8,5,7,2],[6,7,1,-4,-7,-2,-5,-10,-7],[-6,7,8,-9,-1,-3,-4,-3,8]],[[4,-2,8,-10,5,10,7,2,-8],[-9,-5,5,-3,6,-9,-9,-6,-4],[3,7,-3,1,5,-6,-6,-1,-7],[-1,-3,-6,3,5,-6,-4,-2,8],[2,-7,-3,-9,10,-1,4,7,1],[2,-9,-3,-6,4,2,3,-1,8],[-5,-6,6,-2,-1,10,2,-6,-10],[6,10,4,-3,-3,-7,-10,-7,-7],[-4,-5,-10,9,-6,-3,-5,-2,10],[-6,-5,7,1,6,4,3,4,4],[-3,-6,-7,-5,9,-9,5,1,-6],[2,6,7,3,9,-6,-1,-6,-7],[-5,9,-2,-10,6,7,-10,9,-8]],[[7,6,9,10,2,7,1,4,4],[10,4,-7,-8,-1,4,-3,3,6],[-1,3,2,-3,-2,5,-2,3,-1],[-7,9,7,-9,4,-10,-5,-9,-6],[-8,6,-5,-7,-7,1,1,8,7],[-3,6,10,10,-8,-6,9,-3,-4],[-7,-3,3,2,-3,-4,-4,9,-6],[7,-4,4,1,-4,10,1,10,10],[2,-7,-2,7,10,7,5,-4,3],[9,-3,8,-2,1,-5,-5,-4,-1],[-5,-4,4,-3,-9,8,-6,6,9],[-3,3,2,6,6,-4,-8,-7,8],[-4,-10,9,-5,-4,-4,-4,-3,2]],[[8,7,-10,1,1,-10,1,9,9],[9,1,-6,8,4,9,-1,4,1],[8,-1,1,-6,-5,4,-3,7,-10],[-10,5,2,-10,10,-10,9,4,6],[3,-10,7,4,10,-5,-6,-9,-9],[-4,-3,-4,-7,10,2,1,-8,-6],[4,6,-1,4,-5,8,-5,4,7],[10,10,-7,6,10,8,8,5,-8],[4,-4,7,5,-4,-10,7,-5,10],[1,-2,7,-6,2,8,8,3,2],[-5,10,8,-10,-9,-1,-1,-2,-3],[10,3,-1,-3,-4,-4,-6,5,-10],[-7,-7,-9,5,3,10,-8,7,6]],[[4,-8,8,5,3,-2,-3,5,-7],[-10,-2,-4,9,7,-3,4,2,6],[-4,-4,2,-9,-8,5,-9,-10,8],[-5,5,-4,7,-8,10,9,-6,2],[-2,5,5,5,-4,5,10,10,-6],[-4,2,9,7,-7,-4,2,-2,-4],[-6,-1,6,4,-9,-1,-9,-5,-8],[-5,4,-9,5,-4,10,-3,9,-7],[-1,-2,7,3,-2,-9,5,-7,-9],[7,10,8,1,6,-7,-6,-6,-9],[6,9,10,-10,3,6,-4,4,4],[3,7,-7,4,1,4,3,1,9],[1,8,7,-5,-7,-6,-5,8,8]],[[-4,-1,-2,-6,6,-8,-1,-6,-2],[5,5,-8,-4,-10,3,-2,-2,-4],[7,-1,7,9,10,-9,10,10,5],[-6,1,5,-4,2,7,2,6,-8],[3,-3,7,-5,-3,10,-5,8,2],[3,-10,4,3,-5,9,3,3,7],[5,6,-9,7,5,-1,3,-3,-8],[-2,2,9,-1,5,8,5,-4,-3],[-9,8,-8,-9,4,5,10,3,5],[3,-6,-3,10,8,-10,8,1,-3],[6,1,-5,-2,-4,-7,10,-8,-10],[-1,-8,8,-9,-9,-4,-3,-4,2],[3,-6,-10,-7,-7,-7,5,-9,8]],[[-2,4,9,-6,8,-7,1,6,-6],[-2,-9,7,6,-5,-6,2,9,-1],[-4,9,7,4,-3,-7,9,1,8],[3,1,-1,-10,-4,1,-7,4,-8],[-3,1,5,4,-9,1,4,-3,3],[-1,7,3,-3,-2,8,10,-4,-7],[2,2,-8,-9,8,-9,-4,-3,-8],[-8,7,-9,-9,6,1,2,-7,-5],[7,7,-5,-6,7,-3,-4,-5,8],[7,3,1,-7,9,5,-8,9,-10],[4,-7,-3,-3,9,1,-1,7,2],[-10,-8,4,5,10,9,-8,5,-1],[6,-7,-3,-2,-5,-10,6,-7,-1]],[[10,2,9,7,2,5,-10,9,-3],[8,-7,-6,-1,7,7,-8,5,6],[-1,3,4,-7,6,4,6,-7,-4],[-10,-7,2,6,-2,9,-4,10,-4],[-5,1,-6,-3,8,7,-6,8,5],[-9,1,1,9,2,5,6,-6,-3],[3,-7,9,4,3,9,5,9,9],[-9,9,8,7,6,-10,-8,-7,5],[-10,-1,4,-1,6,-6,-1,-3,-6],[4,4,9,-1,6,-1,-5,-3,-4],[-6,5,-6,-9,8,9,3,-7,5],[1,-2,-7,-10,-4,1,-10,-4,1],[8,8,3,1,-9,1,6,-2,-10]],[[1,-1,3,-4,9,9,-9,1,4],[3,10,-6,7,-4,10,8,-4,-8],[-1,1,10,3,9,-7,9,-10,1],[1,-6,9,-7,-7,7,7,8,9],[7,9,9,-9,-3,7,-5,-6,-1],[6,1,10,-9,-6,-6,6,1,9],[9,-6,9,10,10,-6,10,-1,-7],[1,-10,2,-3,9,-2,-4,8,-7],[5,-4,3,8,-2,-6,-9,-5,-3],[-5,3,-2,4,-10,-8,-3,2,8],[5,-9,-4,-6,-2,-4,-7,-3,4],[-9,-1,-3,4,2,1,-1,3,-5],[-7,-1,-3,-5,-1,5,2,-4,-1]],[[-4,10,10,3,2,-5,4,-2,-2],[8,-7,6,6,4,-2,6,-1,-9],[2,4,1,-10,3,10,9,5,-10],[-8,8,8,-8,-4,-5,-1,7,10],[7,3,-4,-7,4,8,10,2,-9],[-8,9,7,-6,-10,4,-9,3,-10],[6,1,7,3,7,-7,-6,-5,-8],[-8,9,-5,1,3,-7,-1,8,2],[3,-7,1,-7,1,-1,-2,-3,-8],[-5,4,2,-1,-6,-7,8,-4,-8],[-1,3,5,-2,4,10,-4,10,5],[9,7,4,-4,1,7,4,-4,-1],[2,8,7,-7,-4,-8,10,-4,-5]],[[-10,3,10,1,-10,-2,4,2,-9],[1,-1,4,4,9,3,-8,-6,2],[-1,-1,-10,1,8,-7,4,4,2],[7,3,6,3,-9,-3,4,-6,6],[-9,-9,2,-3,-3,-4,-4,-3,-8],[-3,2,-9,-2,10,9,3,3,-4],[-5,1,-3,-3,5,-3,4,3,9],[1,-4,-1,-7,2,4,6,4,-7],[4,3,-7,-2,6,9,7,9,2],[-4,-2,-2,-2,-8,-6,3,-9,9],[5,-9,9,6,-9,-7,5,-2,10],[5,-2,8,8,-10,-10,-2,-2,-5],[10,-9,8,-2,9,-2,-9,1,-10]],[[1,-2,6,2,6,3,-7,5,-4],[3,-10,3,1,8,5,-1,-9,-9],[-5,-5,5,2,-10,9,4,3,2],[5,-8,-5,3,9,-9,7,9,4],[-7,-7,3,-5,6,8,-2,3,-6],[-4,6,-10,-2,-8,-8,-5,9,6],[-8,9,-6,5,-2,9,9,-8,7],[-10,7,-1,2,-2,10,3,8,3],[8,4,-6,-7,-6,-10,3,3,-9],[6,4,10,-7,-3,4,-1,-4,2],[9,7,-6,-10,6,-10,-10,4,-6],[8,-9,10,-7,-8,5,-10,-1,10],[3,-8,-3,-4,5,-9,-4,4,-7]],[[7,-5,-4,-6,7,-3,-7,-6,7],[-3,6,-9,-1,-1,-6,-9,-4,-9],[7,5,3,2,8,4,9,4,-7],[8,6,3,10,5,10,-2,-7,2],[9,-1,2,-10,-5,6,-7,-2,-6],[5,8,-9,1,-5,10,-2,1,-4],[1,4,10,9,-4,2,-5,7,-6],[4,-8,10,8,7,-5,2,6,-3],[-4,8,3,-10,-7,-6,3,-2,10],[-1,4,-8,8,7,4,10,2,9],[-8,-8,6,-7,3,-2,-1,-1,-8],[6,-9,-9,4,-4,-7,-4,2,9],[-3,8,10,-8,4,8,8,-7,-6]]], dtype = "uint64")#candidate|5328|(16, 13, 9)|const|uint64
var_5329 = relay.var("var_5329", dtype = "uint64", shape = (16, 13, 9))#candidate|5329|(16, 13, 9)|var|uint64
bop_5330 = relay.greater(const_5328.astype('bool'), relay.reshape(var_5329.astype('bool'), relay.shape_of(const_5328))) # shape=(16, 13, 9)
bop_5341 = relay.floor_divide(var_5329.astype('float32'), relay.reshape(const_5328.astype('float32'), relay.shape_of(var_5329))) # shape=(16, 13, 9)
output = relay.Tuple([bop_5330,bop_5341,])
output2 = relay.Tuple([bop_5330,bop_5341,])
func_5344 = relay.Function([var_5329,], output)
mod['func_5344'] = func_5344
mod = relay.transform.InferType()(mod)
var_5345 = relay.var("var_5345", dtype = "uint64", shape = (16, 13, 9))#candidate|5345|(16, 13, 9)|var|uint64
output = func_5344(var_5345)
func_5346 = relay.Function([var_5345], output)
mutated_mod['func_5346'] = func_5346
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5538 = relay.const([[[6.087106,-2.144983,0.487816,1.507873,3.522518,2.183914,6.106080,3.341889,2.999245,-6.070616,-2.157372,-9.571087,6.285532,2.981284,-7.098867,-6.685853],[-5.307698,-7.741248,1.385216,-9.780295,-0.484985,-0.883050,0.066057,-2.082740,-0.753524,2.824364,8.632858,-2.078178,1.696814,2.980326,-8.337212,3.904969],[-0.312260,8.240942,-7.330963,4.631202,1.490189,-6.334949,2.965261,2.427381,9.659571,-9.065325,4.447634,8.989766,-2.629206,-8.648477,-7.898627,2.927721],[5.663975,1.378200,6.545687,6.921986,-4.491242,4.760669,-2.671259,-2.721515,8.277287,-8.889275,3.700579,-6.239499,-6.955274,6.819025,-8.917520,-0.427651],[9.838875,1.577699,-4.125109,7.298520,-5.973839,-9.357765,-5.079034,-0.251699,4.535049,-0.835979,9.386853,6.869286,3.785861,-6.707672,4.016856,-3.507800],[-6.146463,0.807771,-5.995352,-2.379388,3.375452,2.337619,0.774860,-8.069418,-5.896266,0.510517,0.221861,-2.227617,5.344673,-0.670079,5.874194,5.291925],[7.588904,-7.707758,-8.969925,-8.987027,5.195837,2.107565,-0.711071,7.422905,-5.093029,-0.506545,5.709981,-9.658806,0.311245,-5.177650,9.321864,8.354713],[-3.770048,-2.963468,-5.755803,9.651766,-6.336845,-8.398096,-9.181659,-1.691741,-1.472981,-5.731153,8.270353,3.176625,6.226187,4.391014,0.584770,2.610075],[-4.125100,-0.609550,3.195185,-6.588647,-4.169252,-8.596043,-8.803432,7.418728,1.596833,1.609883,3.752976,0.653286,-4.270114,7.690283,3.765355,2.905417]]], dtype = "float64")#candidate|5538|(1, 9, 16)|const|float64
uop_5539 = relay.sinh(const_5538.astype('float64')) # shape=(1, 9, 16)
uop_5550 = relay.cosh(uop_5539.astype('float64')) # shape=(1, 9, 16)
output = uop_5550
output2 = uop_5550
func_5555 = relay.Function([], output)
mod['func_5555'] = func_5555
mod = relay.transform.InferType()(mod)
output = func_5555()
func_5556 = relay.Function([], output)
mutated_mod['func_5556'] = func_5556
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5555_call = mod.get_global_var('func_5555')
func_5556_call = mutated_mod.get_global_var('func_5556')
call_5573 = func_5555_call()
call_5574 = func_5555_call()
output = relay.Tuple([call_5573,])
output2 = relay.Tuple([call_5574,])
func_5577 = relay.Function([], output)
mod['func_5577'] = func_5577
mod = relay.transform.InferType()(mod)
mutated_mod['func_5577'] = func_5577
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5577_call = mutated_mod.get_global_var('func_5577')
call_5578 = func_5577_call()
output = call_5578
func_5579 = relay.Function([], output)
mutated_mod['func_5579'] = func_5579
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5555_call = mod.get_global_var('func_5555')
func_5556_call = mutated_mod.get_global_var('func_5556')
call_5605 = func_5555_call()
call_5606 = func_5555_call()
output = call_5605
output2 = call_5606
func_5631 = relay.Function([], output)
mod['func_5631'] = func_5631
mod = relay.transform.InferType()(mod)
output = func_5631()
func_5632 = relay.Function([], output)
mutated_mod['func_5632'] = func_5632
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5555_call = mod.get_global_var('func_5555')
func_5556_call = mutated_mod.get_global_var('func_5556')
call_5661 = func_5555_call()
call_5662 = func_5555_call()
func_3470_call = mod.get_global_var('func_3470')
func_3473_call = mutated_mod.get_global_var('func_3473')
var_5664 = relay.var("var_5664", dtype = "uint8", shape = ())#candidate|5664|()|var|uint8
const_5665 = relay.const([5,-4,-1,10,6,8,7,6,3,-1,7,4,-1,8,-9,8,8,10,-1,-7,-4,4,2,-5,5,1,-4,-1,-3,-10,-5,6,-2,-5,5,-2,8,-10,6,-5,-1,-5,9,-4,7,5,-4,-5,5,1,-3,1,-9,-2,-6,7,1,-4,8,-5,2,6,10,4,1,-7,8,-6,1,-3,-4,6,-2,8,-10,2,-4,10,10,-1,-9,7,-8,-6,10,-6,10,10,4,-2,2,6,4,1,-10,-7,1,-8,-7,-8,4,9,-7,7,-6,6,3,-5,-10,1,7,10,-9,8,5,-3,3,-4,-3,-2,8,-9,1,-7,8,-2,-3,-6,-5,10,-2,8,5,6,2,6,-9,10,9,-3,-5,-6,9,1,-6,-3,-4,-6,4,-8,1,6,-1,9,4,-10,9,7,8,4,-1,-4,10,5,-3], dtype = "uint8")#candidate|5665|(165,)|const|uint8
call_5663 = relay.TupleGetItem(func_3470_call(relay.reshape(var_5664.astype('uint8'), []), relay.reshape(const_5665.astype('uint8'), [11, 5, 3]), ), 1)
call_5666 = relay.TupleGetItem(func_3473_call(relay.reshape(var_5664.astype('uint8'), []), relay.reshape(const_5665.astype('uint8'), [11, 5, 3]), ), 1)
func_5555_call = mod.get_global_var('func_5555')
func_5556_call = mutated_mod.get_global_var('func_5556')
call_5672 = func_5555_call()
call_5673 = func_5555_call()
output = relay.Tuple([call_5661,call_5663,var_5664,const_5665,call_5672,])
output2 = relay.Tuple([call_5662,call_5666,var_5664,const_5665,call_5673,])
func_5680 = relay.Function([var_5664,], output)
mod['func_5680'] = func_5680
mod = relay.transform.InferType()(mod)
var_5681 = relay.var("var_5681", dtype = "uint8", shape = ())#candidate|5681|()|var|uint8
output = func_5680(var_5681)
func_5682 = relay.Function([var_5681], output)
mutated_mod['func_5682'] = func_5682
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5631_call = mod.get_global_var('func_5631')
func_5632_call = mutated_mod.get_global_var('func_5632')
call_5701 = func_5631_call()
call_5702 = func_5631_call()
func_983_call = mod.get_global_var('func_983')
func_985_call = mutated_mod.get_global_var('func_985')
var_5706 = relay.var("var_5706", dtype = "uint64", shape = (182,))#candidate|5706|(182,)|var|uint64
call_5705 = relay.TupleGetItem(func_983_call(relay.reshape(var_5706.astype('uint64'), [13, 2, 7])), 3)
call_5707 = relay.TupleGetItem(func_985_call(relay.reshape(var_5706.astype('uint64'), [13, 2, 7])), 3)
func_3470_call = mod.get_global_var('func_3470')
func_3473_call = mutated_mod.get_global_var('func_3473')
var_5718 = relay.var("var_5718", dtype = "uint8", shape = ())#candidate|5718|()|var|uint8
var_5719 = relay.var("var_5719", dtype = "uint8", shape = (165,))#candidate|5719|(165,)|var|uint8
call_5717 = relay.TupleGetItem(func_3470_call(relay.reshape(var_5718.astype('uint8'), []), relay.reshape(var_5719.astype('uint8'), [11, 5, 3]), ), 0)
call_5720 = relay.TupleGetItem(func_3473_call(relay.reshape(var_5718.astype('uint8'), []), relay.reshape(var_5719.astype('uint8'), [11, 5, 3]), ), 0)
output = relay.Tuple([call_5701,call_5705,var_5706,call_5717,var_5718,var_5719,])
output2 = relay.Tuple([call_5702,call_5707,var_5706,call_5720,var_5718,var_5719,])
func_5723 = relay.Function([var_5706,var_5718,var_5719,], output)
mod['func_5723'] = func_5723
mod = relay.transform.InferType()(mod)
var_5724 = relay.var("var_5724", dtype = "uint64", shape = (182,))#candidate|5724|(182,)|var|uint64
var_5725 = relay.var("var_5725", dtype = "uint8", shape = ())#candidate|5725|()|var|uint8
var_5726 = relay.var("var_5726", dtype = "uint8", shape = (165,))#candidate|5726|(165,)|var|uint8
output = func_5723(var_5724,var_5725,var_5726,)
func_5727 = relay.Function([var_5724,var_5725,var_5726,], output)
mutated_mod['func_5727'] = func_5727
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5631_call = mod.get_global_var('func_5631')
func_5632_call = mutated_mod.get_global_var('func_5632')
call_5739 = func_5631_call()
call_5740 = func_5631_call()
output = call_5739
output2 = call_5740
func_5742 = relay.Function([], output)
mod['func_5742'] = func_5742
mod = relay.transform.InferType()(mod)
mutated_mod['func_5742'] = func_5742
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5742_call = mutated_mod.get_global_var('func_5742')
call_5743 = func_5742_call()
output = call_5743
func_5744 = relay.Function([], output)
mutated_mod['func_5744'] = func_5744
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5742_call = mod.get_global_var('func_5742')
func_5744_call = mutated_mod.get_global_var('func_5744')
call_5764 = func_5742_call()
call_5765 = func_5742_call()
output = call_5764
output2 = call_5765
func_5767 = relay.Function([], output)
mod['func_5767'] = func_5767
mod = relay.transform.InferType()(mod)
output = func_5767()
func_5768 = relay.Function([], output)
mutated_mod['func_5768'] = func_5768
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5742_call = mod.get_global_var('func_5742')
func_5744_call = mutated_mod.get_global_var('func_5744')
call_5827 = func_5742_call()
call_5828 = func_5742_call()
output = call_5827
output2 = call_5828
func_5843 = relay.Function([], output)
mod['func_5843'] = func_5843
mod = relay.transform.InferType()(mod)
mutated_mod['func_5843'] = func_5843
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5843_call = mutated_mod.get_global_var('func_5843')
call_5844 = func_5843_call()
output = call_5844
func_5845 = relay.Function([], output)
mutated_mod['func_5845'] = func_5845
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5555_call = mod.get_global_var('func_5555')
func_5556_call = mutated_mod.get_global_var('func_5556')
call_5859 = func_5555_call()
call_5860 = func_5555_call()
func_5555_call = mod.get_global_var('func_5555')
func_5556_call = mutated_mod.get_global_var('func_5556')
call_5870 = func_5555_call()
call_5871 = func_5555_call()
func_4677_call = mod.get_global_var('func_4677')
func_4680_call = mutated_mod.get_global_var('func_4680')
const_5875 = relay.const([2.219674,-6.118516,-5.037468,5.301051,1.569285,9.161017,6.687118,3.082223,-8.717158,0.685442,1.071075,8.713504,1.171263,-0.758475,3.545325,3.968830,-9.297382,3.702859,-4.186651,5.086169,8.082261,8.718658,7.079268,-0.725248,2.103800,3.626200,5.917703,0.890774,-3.996602,4.327603,-7.223397,-8.110885,-5.058535,-1.500657,-0.311192,-0.793426,-5.019324,6.095520,-1.843406,1.237747,8.656722,9.205601,-5.167572,3.847111,-8.243699,-7.274908,8.456173,7.500664,-8.156310,3.680233,2.796430,-5.691491,4.220497,-8.702988,-6.101633,6.794669,-4.235054,-0.707131,2.396883,1.185148,-0.857923,8.739906,8.325841,-0.819658,-3.862875,-5.943547,6.262839,4.864069,-7.132493,2.756594,1.726616,-2.555262,6.144311,-6.006851,7.290925,-5.794626,3.487242,6.964876,-3.257723,3.001247,6.082858,6.575738,-9.698932,3.200365,-6.841088,7.302755,6.739013,9.212427,-9.394905,-2.626733,-3.490725,-9.999342,-4.057447,-5.726690,7.817669,6.608617,4.020535,4.636285,5.016867,0.858336,7.681976,8.198724,-4.581754,0.306558,8.487507,-4.601859,-7.791018,0.586042,3.287117,-6.029411,8.523681,0.405135,-1.296087,8.056644,-7.245612,6.201534,4.454512,-8.089308,8.555608,0.859313,4.540584,-2.105556,-9.102420,-9.032698,3.956486,-5.161594,-9.829378,-0.805220,-4.084515,-2.954745,-4.292937,6.269705,5.883637,0.776031,9.256796,3.551144,8.269213,7.870031,5.605195,0.976490,-6.228857,-6.506938,6.200345,5.364235,-4.547456,-3.135378,9.683498,-5.486924,-4.786547,3.602396,-1.107512,-8.678996,9.206348,2.772481,-5.840471,4.736064,-5.716852,7.621263,-4.912469,-2.087514,9.374645,8.127675,-5.890745,2.229281,-9.518245,-9.821747,6.477795,-1.900251,-0.107383,4.528244,-7.221666,0.375656,-8.667599,-7.259096,3.703703,0.850681,-6.691822,3.186406,9.161799,5.959020,-4.228007,-8.077004,-8.599637,-6.294611,1.513518,0.966438,-2.631452,-5.310786,-1.009531,-4.307261,3.125976,-7.145169,-5.130317,-0.955068,-9.359664,4.518395,-5.836648,-8.993892,-5.948485,1.592220,-9.685136,3.477760,-2.130831,-2.326749,5.797543,-4.570495,-7.642795,-3.920329,2.042524,-3.330110,-1.230598,-9.776640,-3.333922,4.864270,2.919361,-4.126082,-5.571079,-0.291211,3.494982,8.034183,7.867044,-7.153558,-4.488211,7.454394,3.594681,1.562316,8.077250,-1.906432,-0.676014,0.447926,6.011354,6.805638,9.001331,-2.844540,-7.010610,8.808071,2.278564,-9.800093,-4.268224,0.973363,4.000606,5.010661,-1.834856,-1.983340,-6.909720,-2.279102,6.823221,9.027777,-3.131823,-5.536393,9.368609,-0.846377,5.435203,-6.560167,-9.095836,8.724287,-8.658078,9.907899,6.696646,7.088510,7.412909,0.709460,4.149729,8.775710,-1.566584,5.563655,-9.348798,-5.108831,-6.998927,9.710237,4.216578,-1.380888,-4.474706,-7.104355,-0.803628,3.225313,-3.321645,-1.437430,1.564722,8.011943,2.530094,7.756964,-4.312189,7.963471,-8.359149,-4.839213,-9.395001,4.713032,-3.142320,-8.045890,0.234401,-3.256043,-8.382245,1.565558,-4.127945,2.871267,6.050129,7.469539,-4.540236,-4.971858,-9.972852,-0.592783,-6.665035,6.219242,-8.318993,2.296422,2.907873,9.218855,-4.412550,9.745621,5.380301,2.462975,2.151971,-4.204468,2.759058,-4.961823,5.102079,-7.176461,-5.025939,-5.674978,7.215130,-1.604744,5.897478,-6.642743,-6.584645,8.123599,-4.543842,0.619504,5.862758,-9.782143,-2.801452,-7.586450,3.892052,7.235273,-1.990714,-7.356419,0.404290,-3.033484,-1.720150,4.098136,-0.707012,-3.593840,2.453648,-8.129926,-3.675827,5.122041,4.785433,-9.501314,5.669676,-7.178866,-0.163059,7.726894,9.741799,-5.271651,4.188840,3.548738,-6.194026,-9.613658,7.525630,4.496085,4.143982,-1.146257,-6.087302,-1.578581,7.200694,-3.538797,7.065011,1.711527,7.052311,0.832151,7.476144,3.598390,-5.533454,2.263322,-7.795059,1.752714,-3.794351,2.809991,1.541204,-1.285699,-0.149989,-3.548911,-4.904472,9.828276,8.845006,-3.809074,1.575554,1.756271,-7.531642,9.349565,6.461356,-2.014813,-1.628600,-6.500721,3.679657,-1.651213,9.715514,-5.478673,2.379596,-3.319251,-1.080012,0.616950,-6.652012,9.541386,-5.772291,7.000143,-5.707647,2.877969,2.398185,-9.166885,-8.174583,2.109776,0.591702,7.499661,6.922872,9.413457,6.539246,5.690789,5.491508,-6.267910,9.103244,4.930103,9.027493,-8.719174,3.029373,-6.985465,-9.071923,6.679553,5.902094,-6.732916,-7.157450,-4.394312,-6.938107,0.782398,-5.070636,8.472314,-0.320278,5.092128,0.286752,-2.378766,-9.759026,-7.498044,-4.139910,-4.766692,3.571230,-0.036690,0.299467,6.678154,-5.175178,3.767951,-3.672412,-7.599591,-1.514633,-2.426617,-2.015472,-4.795582,0.596938,7.917171,-1.191974,8.206518,-4.487670,-6.562570,-5.117263,2.256869,-5.883704,-0.362814,-9.340938,5.767011,-8.091001,-9.019181,5.467737,-0.350899,-2.043925,-5.383391,4.017677,-6.072231,-3.166817,7.293034,-8.053980,3.508501,-1.310951,8.907866,8.717723,6.656702,-9.998947,-5.530912,-2.774131,8.787650,-8.460179,5.459433,7.216246,0.814050,-7.607472,3.475814,0.838950,-8.818504,-2.553725,-3.038070,-0.248432,4.922051,-4.924304,-6.491243,-4.701433,3.123672,-3.836845,5.054196,-6.899399,7.438793,0.548523,2.034363,5.270351,-9.556266,1.639281,5.353719,-9.772673,-0.422293,-3.224523,9.869971,-9.602491,5.915050,-4.697879,4.497419,8.655258,0.408412,9.102210,-3.787820,-5.463650,-5.773916,6.872329,-0.572466,-5.693750,-5.684371,2.834865,-9.036407,-1.009926,-8.266907,-3.990772,9.410061,-8.771860,-7.380102,6.491841,8.400150,-4.869676,2.544455,7.689027,9.296581,6.474059,0.404163,-8.964344,-3.621378,6.529845,6.504927,-0.586118,-1.782061,1.396333,-3.327302,7.222507,0.938058,4.940187,9.278822,-0.999026,8.367447,0.639651,-1.681925,-8.315793,-4.763826,-3.949003,4.001616,8.220801,9.358475,-8.158660,2.508040,6.939715,3.147858,-9.741250,-8.049283,-6.766649,-6.679432,-6.581739,9.366084,2.773373,-8.056272,0.043288,4.558082,6.547108], dtype = "float32")#candidate|5875|(585,)|const|float32
call_5874 = func_4677_call(relay.reshape(const_5875.astype('float32'), [3, 15, 13]))
call_5876 = func_4677_call(relay.reshape(const_5875.astype('float32'), [3, 15, 13]))
func_5843_call = mod.get_global_var('func_5843')
func_5845_call = mutated_mod.get_global_var('func_5845')
call_5878 = func_5843_call()
call_5879 = func_5843_call()
func_2873_call = mod.get_global_var('func_2873')
func_2876_call = mutated_mod.get_global_var('func_2876')
var_5905 = relay.var("var_5905", dtype = "float32", shape = (210,))#candidate|5905|(210,)|var|float32
call_5904 = relay.TupleGetItem(func_2873_call(relay.reshape(var_5905.astype('float32'), [3, 5, 14])), 2)
call_5906 = relay.TupleGetItem(func_2876_call(relay.reshape(var_5905.astype('float32'), [3, 5, 14])), 2)
output = relay.Tuple([call_5859,call_5870,call_5874,const_5875,call_5878,call_5904,var_5905,])
output2 = relay.Tuple([call_5860,call_5871,call_5876,const_5875,call_5879,call_5906,var_5905,])
func_5911 = relay.Function([var_5905,], output)
mod['func_5911'] = func_5911
mod = relay.transform.InferType()(mod)
var_5912 = relay.var("var_5912", dtype = "float32", shape = (210,))#candidate|5912|(210,)|var|float32
output = func_5911(var_5912)
func_5913 = relay.Function([var_5912], output)
mutated_mod['func_5913'] = func_5913
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5843_call = mod.get_global_var('func_5843')
func_5845_call = mutated_mod.get_global_var('func_5845')
call_5923 = func_5843_call()
call_5924 = func_5843_call()
func_1162_call = mod.get_global_var('func_1162')
func_1168_call = mutated_mod.get_global_var('func_1168')
var_5938 = relay.var("var_5938", dtype = "int32", shape = ())#candidate|5938|()|var|int32
const_5939 = relay.const([-7,7,1,-9,-8,3,6,-9,1,-8,-2,5,-9,6,-9,-4,-2,-10,-7,-5,10,8,-6,-10,10,-5,5,10,10,3,-7,-8,9,3,9,-10,4,6,3,-8,4,-7,3,4,-7,5,-3,2,-10,-6,3,-7,-4,-8,9,-1,-9,-3,-10,-6,-3,1,-3,-5,-10,-2,-9,-1,-2,-1,4,3,2,4,2,-9,10,-8,-4,7,-8,-6,-10,1,5,2,-3,3,-2,9,6,6,9,2,-10,9,8,6,-2,9,-8,7,7,-9,6,2,10,-9,-5,-4,9,-5,-9,-6,-8,10,-9,7,6,4,6,5,3,6,-6,3,2,-6,-8,1,9,-2,-8,-4,-5,-10,6,8,1,7,4,5,-9,8,5,-1,-3,-3,-2,-7,7,1,-3,3,2,-1,4,-2,-9,8,10,-8,-4,3,-10,-6,-8,-2,-3,4,9,-10,3,3,2,4,5,-2,5,-7,-8,3,10,-6,2,-8,9,-1,-2,6,8,-4,4,-3,3,-1,3,-6,1,7,6,-2,5,-9,10,1,-5,-2,-4,5,5,8,-4,-2,-8,6,-4,1,4,6,-5,-3,-3,9,-9,3,-4,1,-7,1,-10,1,7,-3,2,-6,-6,7,-3,-5,1,-6,10,3,2,5,10,8,-10,8,-10,-8,3,-4,-10,-3,-10,7,8,-9,3,2,4,3,-1,-5,-5,-5,-6,9,1,-10,10,-1,7,-9,-6,8,-1,1,1,-10,6,-7,6,10,-7,-6,-8,-7,7,-9,-7,10,-5,-9,-6,3,6,-6,-7,10,7,-2,3,1,-5,2,5,-1,4,7,1,-5,1,9,-10,-3,-7,3,4,1,-4,3,-6,10,-4,-3,6,-10,-9,-4,-10,-7,1,6,-6,7,1,-9,-4,-8,-5,-3,-6,9,-4,8,1,-10,7,-10,-4,-1,10,-1,-9,5,9,-7,3,-2,-3,10,6,-6,5,-6,-6,-1,8,-1,2,-3,5,5,7,2,10,2,1,10,8,4,-6,-10,-8,1,8,10,3,-9,5,-8,5,-2,2,2,-10,3,1,10,4,-9,5,-6,-7,9,-6,10,1,-10,3,-2,-8,1,-10,-9,2,9,-9,6,-7,1,-3,9,-2,6,10,-10,-5,-6,-2,9,4,1,-10,3,-1,-5,5,8,-2,5,-4,-10,8,4], dtype = "int32")#candidate|5939|(448,)|const|int32
var_5940 = relay.var("var_5940", dtype = "float64", shape = (819,))#candidate|5940|(819,)|var|float64
const_5941 = relay.const([[-2.002474,-2.303489,-7.673600,2.135491,-3.236665,-7.659431,-4.211727,8.650252,-0.203181,6.705234,-8.462561,-2.342646,-3.015918,-8.474608,1.816783,2.233049,-3.984384,-2.546598,2.658968,0.806387,5.550842,-3.382574,-4.437111,-1.336847,8.886516,-3.757279,9.159803,5.216370,5.762315,-3.297453,7.258103,-7.709629,0.686053,-7.753681,-5.229938,4.057000,-3.728668,6.010407,6.486277,2.465066,1.900523,-9.994149,8.685495,4.742686,7.068616,9.152271,0.867405,-2.511715],[-5.682065,0.140159,0.202599,5.618686,9.345522,-2.806343,-0.153320,9.945003,-7.338207,-8.769340,2.088328,-0.572615,-4.606401,0.786264,8.784433,-4.421133,5.299500,-7.976257,-4.492713,-2.051217,6.653016,9.028656,-9.620848,6.314624,-5.972885,-3.238085,4.946379,5.834902,0.437910,-4.280541,-7.356028,-5.898728,-5.028381,-8.879943,-1.651839,-4.516683,-4.961236,0.510557,2.291674,8.044591,7.088413,8.443964,-8.105110,-2.072190,-9.467363,-1.054262,7.982531,-9.703870],[0.360860,3.309840,3.475423,6.702825,3.348208,-9.092907,-5.687321,-4.190887,-9.885969,-5.772905,-3.017007,-9.002446,2.669300,-4.937553,2.515100,5.244106,7.323936,5.175042,-6.968331,-4.365221,0.521632,-6.922399,-2.181318,3.939235,7.196378,5.343499,-5.948015,-7.692336,-3.431517,6.311269,9.673732,8.037265,6.662420,9.726186,2.524975,1.614324,-8.203875,-2.159666,-9.105122,4.153148,-8.314416,-9.852338,-2.959779,-6.132335,1.155465,5.130122,-8.548230,5.404263],[0.464485,-3.498397,4.423047,0.317424,3.007781,-3.084721,-6.966695,6.660018,4.630817,2.599014,-4.111146,-0.692714,1.765301,-9.393652,-7.192697,2.635224,-9.056852,7.057348,8.513708,-9.633058,-4.109572,6.299736,-1.717495,0.140150,-4.192739,-9.515830,2.996746,-5.070948,-7.591001,-9.278786,-5.726456,-7.372444,8.688836,-0.183986,-7.294303,-4.547587,-8.583595,9.932640,-7.671100,-5.090654,-0.499429,-9.935963,3.749690,-0.960598,3.067948,4.037228,0.102997,1.850910],[0.448757,6.689464,-7.250529,-2.706226,8.887009,1.840925,8.883201,-5.066913,-0.981256,0.035254,7.723336,8.278204,-9.576199,3.759913,-4.903955,6.910561,-1.659860,-5.431994,-4.773321,2.048633,-6.789368,6.740870,-0.536941,1.878763,-5.322011,7.933810,5.844917,6.011434,5.254683,6.075409,2.630806,2.767366,5.831258,-7.209674,-5.229407,-0.492709,-3.212102,-8.335796,5.348078,-8.712199,-5.091497,-3.552015,-8.630357,-4.266120,-8.828924,-9.403168,-0.094236,4.251483],[3.405482,5.506942,-4.101811,-3.128878,7.206706,1.327516,3.675943,3.270586,8.680192,6.462817,4.849341,0.821074,2.049314,3.042342,7.128139,2.854905,-8.653478,8.446125,-1.354345,2.338016,-6.167617,9.617453,-2.562872,-5.084709,-7.475304,-3.135854,8.627671,4.002756,5.608791,-6.643214,7.936721,6.932149,-7.976312,-7.456529,-9.993285,-6.901160,1.237733,-9.683203,-7.666721,8.644865,-7.670039,-0.345255,-0.062427,-4.856201,-9.969867,-8.951955,5.966638,8.477045],[-3.675475,-9.084300,-5.537517,-2.009683,-2.214809,5.681195,3.531748,2.610514,-9.281371,7.836517,1.371263,-8.868453,-7.997168,-4.653681,-7.405441,0.528169,9.033454,-6.535921,-1.422260,8.290181,6.682423,-0.214701,-0.803373,5.310741,6.895953,4.040062,-4.200022,1.865357,-5.778685,-8.871233,4.122713,-0.110259,-7.799807,-4.434915,3.071848,3.404003,1.297001,6.077733,-5.163448,-2.259381,2.623130,-5.933072,-1.750330,-1.972953,1.993517,8.549983,-7.090628,-9.826310],[-3.124846,4.703199,-0.793084,3.625474,-2.217114,6.996899,5.941652,3.922049,6.449701,-0.161352,6.198092,0.586579,-3.071307,8.217039,-8.354600,9.030411,6.298510,-8.446977,8.380677,9.536378,-5.634575,-7.167711,-2.428477,-6.742039,-9.495049,3.147897,3.176415,-6.162064,-4.209970,-3.507399,9.694042,2.505762,-4.469373,2.087177,8.556357,-7.289933,5.456319,6.735297,-0.806811,-4.901735,2.703285,-1.853378,-0.518788,-3.535408,-8.078027,3.523478,-6.166310,-2.520951],[-6.502783,-2.154909,-2.998561,8.006435,-7.246202,-1.016303,-3.195242,6.624629,-6.179145,-4.101804,-2.540249,8.996620,0.890009,8.788161,-7.692488,-3.305715,1.197760,-1.951957,9.538384,1.955133,2.783000,-8.413281,-4.964508,6.365171,3.860100,6.110949,-3.597150,0.263791,1.139635,1.650358,-1.064197,-3.953485,-8.694471,-3.977306,-9.930254,8.516606,8.580082,6.886448,0.899355,-3.136566,-5.903558,5.519678,5.764111,-1.665687,8.628131,-2.662472,-4.755140,3.273598],[1.434132,-0.373271,0.083615,2.214929,-8.059819,9.621926,0.386616,-0.177822,9.674030,-2.978559,-9.716409,-2.473681,-9.377578,-6.780236,0.435127,-1.419554,3.813415,3.066755,-6.967430,4.501635,5.535316,8.959236,-0.107884,3.918278,5.794747,-4.446315,-0.637951,5.704223,6.549870,4.900292,4.364632,-9.395454,1.689615,5.979014,-2.618511,-0.849059,6.569438,0.914178,2.604841,-0.319138,-2.871117,2.818587,2.153795,-9.022376,-7.218845,7.070534,6.226753,-9.532786],[3.496149,-7.617768,-9.537273,-7.263649,-5.900724,0.291640,-0.043534,-9.416076,7.920159,3.051518,-0.930792,0.986709,-4.077020,-3.800238,-4.492631,-7.154315,4.911049,-1.849467,4.882479,7.172726,-5.638646,0.516231,-0.461672,4.927560,5.239378,-2.573387,-9.687433,-1.980338,7.364398,-3.603088,6.397747,8.242930,-6.417827,-0.084014,-0.256095,0.953112,3.622837,3.805158,0.939226,5.626840,-6.617217,-7.347074,1.867367,5.404907,-7.949324,7.241073,-8.639241,-4.017537],[-5.188618,-7.925088,-7.534567,3.535356,-3.023904,-2.715080,3.424890,8.123497,7.449665,1.198196,-4.853204,5.319124,-7.760281,7.812653,-6.694631,4.364909,-8.891807,5.707739,-5.809883,-8.124954,-1.309363,-2.715532,-2.952772,8.064444,5.712384,2.380011,1.005988,-3.587120,0.749406,-4.975136,9.350943,-2.480331,5.319951,6.973629,-0.084771,-3.625763,-1.191465,-9.399148,-6.933253,-6.379281,-8.189059,-9.112788,9.652958,-5.374294,-8.099539,-8.456373,-8.958056,7.268273]], dtype = "float64")#candidate|5941|(12, 48)|const|float64
call_5937 = relay.TupleGetItem(func_1162_call(relay.reshape(var_5938.astype('int32'), []), relay.reshape(const_5939.astype('int32'), [8, 4, 14]), relay.reshape(var_5940.astype('float64'), [819,]), relay.reshape(const_5941.astype('float64'), [576,]), ), 2)
call_5942 = relay.TupleGetItem(func_1168_call(relay.reshape(var_5938.astype('int32'), []), relay.reshape(const_5939.astype('int32'), [8, 4, 14]), relay.reshape(var_5940.astype('float64'), [819,]), relay.reshape(const_5941.astype('float64'), [576,]), ), 2)
output = relay.Tuple([call_5923,call_5937,var_5938,const_5939,var_5940,const_5941,])
output2 = relay.Tuple([call_5924,call_5942,var_5938,const_5939,var_5940,const_5941,])
func_5954 = relay.Function([var_5938,var_5940,], output)
mod['func_5954'] = func_5954
mod = relay.transform.InferType()(mod)
var_5955 = relay.var("var_5955", dtype = "int32", shape = ())#candidate|5955|()|var|int32
var_5956 = relay.var("var_5956", dtype = "float64", shape = (819,))#candidate|5956|(819,)|var|float64
output = func_5954(var_5955,var_5956,)
func_5957 = relay.Function([var_5955,var_5956,], output)
mutated_mod['func_5957'] = func_5957
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5742_call = mod.get_global_var('func_5742')
func_5744_call = mutated_mod.get_global_var('func_5744')
call_6008 = func_5742_call()
call_6009 = func_5742_call()
func_5742_call = mod.get_global_var('func_5742')
func_5744_call = mutated_mod.get_global_var('func_5744')
call_6020 = func_5742_call()
call_6021 = func_5742_call()
uop_6022 = relay.tan(call_6008.astype('float64')) # shape=(1, 9, 16)
uop_6024 = relay.tan(call_6009.astype('float64')) # shape=(1, 9, 16)
bop_6027 = relay.add(call_6008.astype('int64'), relay.reshape(call_6020.astype('int64'), relay.shape_of(call_6008))) # shape=(1, 9, 16)
bop_6030 = relay.add(call_6009.astype('int64'), relay.reshape(call_6021.astype('int64'), relay.shape_of(call_6009))) # shape=(1, 9, 16)
func_5742_call = mod.get_global_var('func_5742')
func_5744_call = mutated_mod.get_global_var('func_5744')
call_6032 = func_5742_call()
call_6033 = func_5742_call()
bop_6037 = relay.maximum(uop_6022.astype('uint32'), relay.reshape(bop_6027.astype('uint32'), relay.shape_of(uop_6022))) # shape=(1, 9, 16)
bop_6040 = relay.maximum(uop_6024.astype('uint32'), relay.reshape(bop_6030.astype('uint32'), relay.shape_of(uop_6024))) # shape=(1, 9, 16)
uop_6047 = relay.erf(call_6032.astype('float32')) # shape=(1, 9, 16)
uop_6049 = relay.erf(call_6033.astype('float32')) # shape=(1, 9, 16)
output = relay.Tuple([bop_6037,uop_6047,])
output2 = relay.Tuple([bop_6040,uop_6049,])
func_6055 = relay.Function([], output)
mod['func_6055'] = func_6055
mod = relay.transform.InferType()(mod)
mutated_mod['func_6055'] = func_6055
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6055_call = mutated_mod.get_global_var('func_6055')
call_6056 = func_6055_call()
output = call_6056
func_6057 = relay.Function([], output)
mutated_mod['func_6057'] = func_6057
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5742_call = mod.get_global_var('func_5742')
func_5744_call = mutated_mod.get_global_var('func_5744')
call_6171 = func_5742_call()
call_6172 = func_5742_call()
output = call_6171
output2 = call_6172
func_6186 = relay.Function([], output)
mod['func_6186'] = func_6186
mod = relay.transform.InferType()(mod)
output = func_6186()
func_6187 = relay.Function([], output)
mutated_mod['func_6187'] = func_6187
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5742_call = mod.get_global_var('func_5742')
func_5744_call = mutated_mod.get_global_var('func_5744')
call_6194 = func_5742_call()
call_6195 = func_5742_call()
output = call_6194
output2 = call_6195
func_6203 = relay.Function([], output)
mod['func_6203'] = func_6203
mod = relay.transform.InferType()(mod)
mutated_mod['func_6203'] = func_6203
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6203_call = mutated_mod.get_global_var('func_6203')
call_6204 = func_6203_call()
output = call_6204
func_6205 = relay.Function([], output)
mutated_mod['func_6205'] = func_6205
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5577_call = mod.get_global_var('func_5577')
func_5579_call = mutated_mod.get_global_var('func_5579')
call_6206 = relay.TupleGetItem(func_5577_call(), 0)
call_6207 = relay.TupleGetItem(func_5579_call(), 0)
func_5631_call = mod.get_global_var('func_5631')
func_5632_call = mutated_mod.get_global_var('func_5632')
call_6208 = func_5631_call()
call_6209 = func_5631_call()
bop_6211 = relay.subtract(call_6208.astype('int32'), relay.reshape(call_6206.astype('int32'), relay.shape_of(call_6208))) # shape=(1, 9, 16)
bop_6214 = relay.subtract(call_6209.astype('int32'), relay.reshape(call_6207.astype('int32'), relay.shape_of(call_6209))) # shape=(1, 9, 16)
func_2443_call = mod.get_global_var('func_2443')
func_2445_call = mutated_mod.get_global_var('func_2445')
const_6233 = relay.const([4.504815,-4.596705,-4.717376,-6.928662,2.184632,-6.043887,8.750384,6.012743,8.844409,-5.010634,-8.226042,-8.907752,-9.734360,-1.356058,-1.939014,3.393323,7.330206,8.100932,-5.839817,2.195528,-1.277933,-7.744568,-2.662837,4.451635,6.197315,3.890851,7.010875,-3.853928,0.212683,4.297817,2.865437,-4.295504,-8.417444,2.560306,3.811335,8.212858,-8.935882,6.988424,3.970151,-0.474922,-9.152264,3.046201,5.878821,1.007403,-2.850655,-8.644917,-5.137151,8.627478,4.774497,8.819007,3.636003,-2.646045,2.517413,-0.325314,-1.882480,8.456497,9.229917,-6.427250,-1.157904,4.752555,-8.672647,1.150067,-9.153005,-7.127447,6.219866,6.595418,-3.759864,-1.087345,4.515912,-2.126879,3.264118,3.778851,-7.096066,9.463303,1.063098,-2.317652,6.946447,-6.392678,-7.346961,5.712586,7.074817,-8.620626,-9.728016,6.706860,-6.501786,-8.082869,4.588866,-0.823610,1.772737,-2.015425,-7.086197,0.652488,-2.753305,-5.434226,-7.516069,-0.889465,-6.010949,8.326401,1.677276,-6.450413,-3.878681,6.262066,-8.757764,-9.812459,-0.921170,6.732436,0.154370,-7.242768,-2.552723,-5.868687,-9.416349,-8.775505,4.436504,9.462444,-4.768672,-0.039181,-2.174876,-4.464938,4.654290,3.340124,-6.650537,6.927073,7.895175,9.543745,-0.761690,-6.589563,9.966593,1.251431,-4.333493,9.311053,-9.908259,8.159556,-2.993539,-1.732838,-2.463140,2.829469,-2.798619,-7.589775,-6.960232,0.208823,9.258730,8.167485,2.137065,-1.993030,9.787582,-8.376768,7.662689,7.591551,-9.718376,-0.365546,4.255431,7.436142,-6.483720,0.874711,8.345047,1.978412,-4.376127,2.832877,0.730815,9.858474,-9.611165,-6.838018,1.484930,1.510383,9.299101,4.359810,4.443759,-5.597797,-8.486792,-5.126831,9.373226,5.073568,-2.302846,1.018657,-3.720633,-7.594799,-5.519966,-9.994776,-8.895830,3.969457,5.147419,-1.112874,6.352344,-2.026019,-0.529574,-7.839996,-2.406377,9.111793,-8.844147,-8.358455,5.360036,5.197956,-6.106548,-8.259362,7.665145,-5.176546,-5.542715,2.554743,-1.048508,4.428290,-5.934405,-8.936892,6.144439,0.713640,-3.300557,-6.079465,9.644398,6.693565,-2.764191,-0.932098,-5.191084,-2.023360,-4.453055,-2.423894,-5.182266,6.515387,9.083492,8.113754,-5.605626,8.095600,5.618520,-3.092404,9.702790,-2.127920,5.324759,-2.369595,4.372676,-1.644153,-4.264057,-6.174366,2.906196,-7.786395,1.450072,3.525984,-0.351145,-7.579687,8.628544,-2.603986,2.045407,-1.342776,-3.041874,-3.105325,7.523988,2.497304,0.371776,-5.496022,4.606477,-8.451545,5.314349,-3.327709,-0.747848,4.200178,-0.671860,-9.566875,-4.363658,-6.759771,7.927076,-4.731614,-2.515380,1.571208,-9.636988,-7.768281,-8.901106,-1.515668,-3.398575,2.252083,-4.754795,-2.702214,9.236564,-8.684759,2.453731,-6.583452,3.608174,-8.517985,-9.928748,3.103982,4.620466,-8.696822,-8.434271,3.945903,-1.065631,7.559441,6.172249,9.930901,8.276530,-2.375050,-4.304692,7.566756,-8.405998,0.557323,3.022671,6.332787,-8.160671,-3.623632,-8.626836,-3.598636,7.362821,5.752851,9.026059,4.601211,-7.969018,-7.586667,-2.831161,-6.882612,1.747646,8.780459,6.300906,0.202013,-7.533832,-8.395684,-0.083653,2.497872,0.553254,-1.579824,5.524209,1.568045,-3.892106,8.645142,4.110576,4.070209,8.669629,-0.117022,8.050578,6.466351,9.320995,-8.899979,-5.448483,2.096403,2.943255,-6.293147,4.056936,-3.605915,7.680292,-7.190165,-3.391257,0.506400,-2.851205,-3.822166,-8.236392,-2.019495,3.946366,3.645448,-1.625398,1.494438,-9.819757,5.976301,5.364356,2.835050,8.945412,-4.091288,9.543335,7.157170,4.172485,0.521124,2.629821,9.764697,9.744685,-3.981261,-7.934887,7.902548,-1.141177,-4.787607,-2.782646,-4.009663,-8.971935,9.363604,0.444679,3.553749,-9.422858,-0.680566,-7.281390,1.550332,-8.688712,-4.691562,0.792618,9.450552,-6.736390,-1.715337,-8.972189,-5.919368,6.063604,-5.918758,-9.814089,4.533845,6.342556,7.403533,6.220249,1.279521,-4.910675,-9.841419,0.218471,6.605117,-4.664537,-7.315505,5.955959,6.044206,7.015868,4.382213,6.610807,-0.697699,-0.176843,4.487409,-9.320426,3.042912,-2.564550,1.567114,9.130406,1.968695,-6.901795,-2.750883,-3.021426,-5.142069,-9.229622,9.202810,-7.819987,-8.392331,6.887540,-2.444458,-1.513103,7.754673,-1.376088,-0.516641,8.789370,1.814247,6.411567,2.188463,6.086558,9.244217,9.950048,2.155574,7.917367,-0.342320,9.515207,-6.644305,-6.615510,-5.766343,-6.851812,7.152222,-0.896981,1.736598,-0.930097,8.008871,-2.882532,8.477638,-0.954723,2.906322,-9.714671,-5.036394,3.371029,0.011691,-7.047672,-6.474591,-4.860470,5.686632,-5.226754,6.671310,0.113185,-2.156138,2.969837,-3.930315,-1.665130,1.333465,2.644113,9.985643,7.326125,7.538004,-5.713719,-6.129509,9.807825,-0.907827,6.627976,-0.413179,-7.400244,-1.129501,5.613716,8.309306,2.945029,-4.490165,8.684829,7.356511,2.773072,-7.762270,-1.990015,-5.226699,-6.727794,9.009331,-9.207831,0.482786,-3.698468,1.974105,-1.046046,7.375150,3.151630,-2.206633,9.720759,4.898396,-4.068869,2.483339,4.860470,-3.720499,-7.427889,7.324816,-4.486328,4.026993,-2.110578,-4.341455,-8.492001,-6.772624,5.797340,-1.052700,-8.633251,7.815034,4.239013,4.457435,3.722195,5.023630,6.836933,-2.779132,2.624357,-0.535474,-5.478613,-9.726028,8.281687,5.479750,9.685572,5.729262,4.886119,7.667133,5.495879,5.429925,-3.191897,-3.092301,8.069236,4.541176,7.175298,6.514281,-6.369324,-1.881569,-4.874920,9.054650,1.658586,-1.157066,8.896044,5.162321,-2.742918,3.381002,1.323069,8.471475,1.623731,3.141687,-7.000136,-2.833840,-0.050861,-3.702303,-6.476007,1.483298,4.591954,7.646631,9.545553,8.335392,7.047651,-1.215937,0.399599,-5.540418,0.484723,7.892426,-0.068914,-9.755357,-7.455427,8.647655,-4.996466,-9.020464,-0.901787,9.761120,-8.043179,-2.078002,3.268776,4.500288,-6.805164,1.708911,2.132340,2.281406,6.252961,2.334991,3.736776,-4.345500,1.380720,8.197420,-3.578455,3.384188,5.247812,0.400539,-1.743146,3.523304,-7.347935,-8.004614,6.494561,9.389314,-6.330202,-9.798741,0.516035,8.906241,0.876300,2.188062,1.464009,6.578215,-4.052394,-3.664942,7.977308,6.502621,-6.008193,7.450104,7.998379,-9.198113,9.522628,9.103670,-3.812813,0.790850,9.962050,7.297298,8.565263,-3.800635,8.710964,2.214516,-2.930036,-2.463279,-6.801704,7.437418,-4.841816,5.371781,-1.921264,2.580591,-8.913179,4.443213,0.149890,-5.242660,1.264991,-2.515681,4.445321,1.021414,-1.624903,7.986020,9.283702,-5.862065,-9.369643,-8.277159,2.279377,1.475293,-3.263382,2.412775,-6.132368,9.354545,-7.916326,-1.186828,0.667308,-3.741075,-1.323415,-3.667089,-5.940566,0.791542,8.890042,2.115097,2.969869,-6.310220,2.524665,6.851446,3.005896,5.282369,-3.312945,-4.192021,0.550965,9.893618,-0.615406,-7.155363,7.427475,1.866987,1.633516,9.396571,-0.869092,-6.551960,8.782440,3.296229,-7.102262,3.678099,-0.793560,-7.521670,-6.963230,4.086535,-5.198054,5.997726,-4.716704,-9.779072,1.241769,-9.426565,5.760272,-4.186546,1.762981,2.429909,-3.602365,-0.748331,-1.125509,1.369912,7.498868,8.711025,-0.074387,7.446869,-5.658403,-7.393652,4.214272,3.837540,8.460960,2.246157,6.589081,2.864327,2.170787,-0.294014,-6.076906,-3.150611,5.295739,0.405638], dtype = "float32")#candidate|6233|(720,)|const|float32
call_6232 = func_2443_call(relay.reshape(const_6233.astype('float32'), [6, 8, 15]))
call_6234 = func_2443_call(relay.reshape(const_6233.astype('float32'), [6, 8, 15]))
output = relay.Tuple([bop_6211,call_6232,const_6233,])
output2 = relay.Tuple([bop_6214,call_6234,const_6233,])
func_6257 = relay.Function([], output)
mod['func_6257'] = func_6257
mod = relay.transform.InferType()(mod)
mutated_mod['func_6257'] = func_6257
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6257_call = mutated_mod.get_global_var('func_6257')
call_6258 = func_6257_call()
output = call_6258
func_6259 = relay.Function([], output)
mutated_mod['func_6259'] = func_6259
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6295 = relay.var("var_6295", dtype = "float64", shape = (1, 3, 5))#candidate|6295|(1, 3, 5)|var|float64
const_6296 = relay.const([[[1.247239,-2.386541,4.398882,8.698303,1.429357],[-8.841350,3.632080,5.940652,-1.357555,-6.016545],[-1.201051,-6.348334,4.147659,-0.263643,-9.551268]],[[-3.550032,-9.295033,0.284945,5.872220,8.838428],[-2.178357,-0.133790,5.055919,-3.343204,3.486943],[3.257023,6.119495,2.787217,-5.940924,-0.435501]]], dtype = "float64")#candidate|6296|(2, 3, 5)|const|float64
bop_6297 = relay.floor_divide(var_6295.astype('float64'), const_6296.astype('float64')) # shape=(2, 3, 5)
func_1823_call = mod.get_global_var('func_1823')
func_1825_call = mutated_mod.get_global_var('func_1825')
var_6310 = relay.var("var_6310", dtype = "float64", shape = (48,))#candidate|6310|(48,)|var|float64
call_6309 = func_1823_call(relay.reshape(var_6310.astype('float64'), [4, 2, 6]))
call_6311 = func_1823_call(relay.reshape(var_6310.astype('float64'), [4, 2, 6]))
output = relay.Tuple([bop_6297,call_6309,var_6310,])
output2 = relay.Tuple([bop_6297,call_6311,var_6310,])
func_6313 = relay.Function([var_6295,var_6310,], output)
mod['func_6313'] = func_6313
mod = relay.transform.InferType()(mod)
var_6314 = relay.var("var_6314", dtype = "float64", shape = (1, 3, 5))#candidate|6314|(1, 3, 5)|var|float64
var_6315 = relay.var("var_6315", dtype = "float64", shape = (48,))#candidate|6315|(48,)|var|float64
output = func_6313(var_6314,var_6315,)
func_6316 = relay.Function([var_6314,var_6315,], output)
mutated_mod['func_6316'] = func_6316
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6347 = relay.var("var_6347", dtype = "float32", shape = (6, 16, 15))#candidate|6347|(6, 16, 15)|var|float32
uop_6348 = relay.tan(var_6347.astype('float32')) # shape=(6, 16, 15)
func_1421_call = mod.get_global_var('func_1421')
func_1423_call = mutated_mod.get_global_var('func_1423')
var_6360 = relay.var("var_6360", dtype = "int8", shape = (2, 660))#candidate|6360|(2, 660)|var|int8
call_6359 = func_1421_call(relay.reshape(var_6360.astype('int8'), [11, 8, 15]))
call_6361 = func_1421_call(relay.reshape(var_6360.astype('int8'), [11, 8, 15]))
output = relay.Tuple([uop_6348,call_6359,var_6360,])
output2 = relay.Tuple([uop_6348,call_6361,var_6360,])
func_6364 = relay.Function([var_6347,var_6360,], output)
mod['func_6364'] = func_6364
mod = relay.transform.InferType()(mod)
var_6365 = relay.var("var_6365", dtype = "float32", shape = (6, 16, 15))#candidate|6365|(6, 16, 15)|var|float32
var_6366 = relay.var("var_6366", dtype = "int8", shape = (2, 660))#candidate|6366|(2, 660)|var|int8
output = func_6364(var_6365,var_6366,)
func_6367 = relay.Function([var_6365,var_6366,], output)
mutated_mod['func_6367'] = func_6367
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6257_call = mod.get_global_var('func_6257')
func_6259_call = mutated_mod.get_global_var('func_6259')
call_6469 = relay.TupleGetItem(func_6257_call(), 0)
call_6470 = relay.TupleGetItem(func_6259_call(), 0)
func_3837_call = mod.get_global_var('func_3837')
func_3840_call = mutated_mod.get_global_var('func_3840')
var_6472 = relay.var("var_6472", dtype = "float32", shape = (64,))#candidate|6472|(64,)|var|float32
call_6471 = func_3837_call(relay.reshape(var_6472.astype('float32'), [4, 4, 4]))
call_6473 = func_3837_call(relay.reshape(var_6472.astype('float32'), [4, 4, 4]))
func_5911_call = mod.get_global_var('func_5911')
func_5913_call = mutated_mod.get_global_var('func_5913')
const_6477 = relay.const([-7.557381,1.339101,9.463702,-3.119722,-8.331009,-9.702306,4.781476,-6.423164,-0.151823,7.183842,-3.933515,2.792633,-5.947676,5.268609,2.770262,8.344150,-1.472059,-9.205799,-8.363010,7.308692,6.095483,3.937835,2.625317,3.991165,1.660557,-6.004579,-4.249093,3.493731,3.819091,-6.950951,-9.450939,1.110843,-6.191579,-6.685023,-2.736400,9.716963,8.929086,-8.053571,1.436482,3.923120,-6.919836,-7.120034,1.749365,-3.953920,-3.969299,-0.525840,-0.034149,-6.041366,8.137892,2.253648,-9.651476,-3.535771,8.934243,-6.465262,-7.567778,7.634955,0.991879,5.790148,2.520722,3.778355,-3.995113,-2.834655,4.034688,7.111500,9.409205,-7.040784,2.367523,-0.314334,0.298300,9.723276,-6.501698,6.246888,5.621208,-9.351967,-3.261626,-6.982474,4.166822,2.441436,6.076844,-5.102264,2.817707,-3.085319,2.475558,-7.110760,7.688783,-5.259335,-8.447223,0.156158,-2.204305,2.546555,-1.544550,5.247562,-7.447340,-5.277972,4.271760,8.584742,-9.551805,2.911026,-8.235721,-7.922264,-4.017147,1.326506,-9.529110,-6.210625,-9.030328,1.412663,8.914906,3.872840,3.278578,-3.073997,-8.171075,-2.469271,3.378299,-2.787776,2.855879,-7.536184,3.486471,-1.641177,-9.540072,-6.887961,-3.428961,8.049699,-0.115468,-0.824005,5.208274,-3.018895,-4.046196,-1.044168,-7.963307,7.615169,5.226542,6.576109,3.556014,1.822158,-2.234908,-7.789117,2.451282,0.629196,-3.734576,-7.098952,-8.438443,9.027961,4.631955,-8.164689,-3.898176,1.666316,9.139350,-8.145778,-5.405915,2.623873,1.490794,-4.408234,9.445293,-1.217111,5.770353,4.384150,3.346754,-0.805877,-6.516811,7.272101,-3.854205,1.552413,9.225789,-3.079744,9.618908,5.316652,6.140088,8.307743,8.536428,5.575630,-0.477031,-8.493819,4.962619,-1.526765,7.652295,6.724393,-7.218793,-2.480697,-7.707248,-2.199315,-0.556072,6.814503,0.241796,-1.222339,-0.649641,6.040553,6.970933,0.815843,-3.231956,-1.277435,6.387052,0.457687,-6.711195,6.158435,-2.336342,-8.328423,6.049308,-3.999418,0.453800,2.238057,-4.511106,-5.342167,-3.713902,5.159422,-0.172799,9.400859,4.738752,2.482533,-1.647684,-0.686484], dtype = "float32")#candidate|6477|(210,)|const|float32
call_6476 = relay.TupleGetItem(func_5911_call(relay.reshape(const_6477.astype('float32'), [210,])), 5)
call_6478 = relay.TupleGetItem(func_5913_call(relay.reshape(const_6477.astype('float32'), [210,])), 5)
var_6504 = relay.var("var_6504", dtype = "int32", shape = (8, 9, 16))#candidate|6504|(8, 9, 16)|var|int32
bop_6505 = relay.less_equal(call_6469.astype('bool'), var_6504.astype('bool')) # shape=(8, 9, 16)
bop_6508 = relay.less_equal(call_6470.astype('bool'), var_6504.astype('bool')) # shape=(8, 9, 16)
output = relay.Tuple([call_6471,var_6472,call_6476,const_6477,bop_6505,])
output2 = relay.Tuple([call_6473,var_6472,call_6478,const_6477,bop_6508,])
func_6529 = relay.Function([var_6472,var_6504,], output)
mod['func_6529'] = func_6529
mod = relay.transform.InferType()(mod)
var_6530 = relay.var("var_6530", dtype = "float32", shape = (64,))#candidate|6530|(64,)|var|float32
var_6531 = relay.var("var_6531", dtype = "int32", shape = (8, 9, 16))#candidate|6531|(8, 9, 16)|var|int32
output = func_6529(var_6530,var_6531,)
func_6532 = relay.Function([var_6530,var_6531,], output)
mutated_mod['func_6532'] = func_6532
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6203_call = mod.get_global_var('func_6203')
func_6205_call = mutated_mod.get_global_var('func_6205')
call_6551 = func_6203_call()
call_6552 = func_6203_call()
output = call_6551
output2 = call_6552
func_6588 = relay.Function([], output)
mod['func_6588'] = func_6588
mod = relay.transform.InferType()(mod)
output = func_6588()
func_6589 = relay.Function([], output)
mutated_mod['func_6589'] = func_6589
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6203_call = mod.get_global_var('func_6203')
func_6205_call = mutated_mod.get_global_var('func_6205')
call_6630 = func_6203_call()
call_6631 = func_6203_call()
func_1162_call = mod.get_global_var('func_1162')
func_1168_call = mutated_mod.get_global_var('func_1168')
const_6633 = relay.const(-5, dtype = "int32")#candidate|6633|()|const|int32
var_6634 = relay.var("var_6634", dtype = "int32", shape = (448,))#candidate|6634|(448,)|var|int32
var_6635 = relay.var("var_6635", dtype = "float64", shape = (819,))#candidate|6635|(819,)|var|float64
const_6636 = relay.const([-0.318879,-7.582101,-5.578411,-2.392612,-3.497774,8.227710,3.465112,-2.216835,4.098138,3.568734,-5.269601,8.936974,6.875198,0.760021,9.941623,-3.875796,-2.505546,7.449653,-0.185227,-9.454422,-3.359686,-6.293586,-6.144814,1.664524,9.153373,5.906228,-3.011826,-1.819896,9.210498,8.400521,-8.967982,-5.375436,-5.865295,1.954988,8.629251,-3.105456,6.759446,4.907499,9.801603,3.074642,-9.311064,-5.923926,0.563520,-3.465544,-9.588012,6.252836,3.499102,-8.744862,4.519988,-5.189331,4.455907,3.977341,0.899493,-7.810596,3.652769,8.075241,-6.339523,-3.614807,8.331930,2.578268,-4.070597,-4.060886,-8.269726,-0.295227,-0.312158,7.493022,7.783433,-2.718567,1.899737,3.410565,-3.973517,-0.159875,-0.325566,-8.434764,4.759248,8.726907,5.761350,-4.308529,-7.502259,6.207588,8.455536,-1.501990,9.490814,-7.139003,4.948269,5.679941,-0.369157,5.759914,9.579194,-9.657421,2.522301,-6.407480,9.179413,-1.134939,3.372901,-0.155329,-9.728679,0.896510,7.791617,1.695999,7.366569,-7.416316,-9.339931,-9.388048,-3.249097,9.808746,0.377082,-9.656149,-6.091372,-7.880734,-2.927284,-2.647689,-0.294372,9.028677,7.907368,-4.891617,5.929456,8.011162,-7.821816,9.145373,-8.675456,-8.446985,4.566829,6.778176,-1.296147,9.503505,-0.344336,8.530950,-2.601720,1.363294,8.387670,-1.918849,-6.432680,3.045852,-4.832183,9.880954,6.928455,-0.671924,-3.910604,-8.705595,0.797634,-4.027329,9.404648,-5.409229,-0.492970,-9.470860,-4.291097,-6.023899,-1.369684,7.778864,3.090498,7.983253,9.543973,4.880286,4.721999,-7.937492,4.689186,0.357360,-5.329576,-9.266036,6.920706,0.646135,-9.806923,-4.922545,8.735845,4.358613,1.761495,9.759848,-0.940029,-1.261528,-6.006693,-4.113245,1.743540,-8.103913,-9.616888,-8.268323,6.778856,4.445568,-0.582078,-0.987797,0.556175,-4.223857,5.791979,7.584304,-3.091143,6.701169,-5.644582,-9.956055,5.043218,-1.873593,-5.528551,8.207795,-9.276514,9.316653,9.170343,-1.195782,0.591737,2.064183,-8.091597,-4.599772,-6.976300,9.022727,9.353930,6.120687,-4.096097,-8.046079,-4.587226,9.004431,-0.429132,3.464530,-7.869797,1.185953,-1.514461,-2.841784,3.214293,6.663615,5.639950,3.955210,6.427029,5.256300,-7.936291,-1.516627,-3.317537,0.583280,-6.630618,-9.411901,-2.802002,-4.137185,-6.832978,5.586049,0.557517,8.317507,1.908795,3.434399,2.300277,-2.137101,6.635600,7.965363,-5.885947,-9.101564,5.902140,-6.122897,-7.935261,1.710810,4.634150,1.148190,6.208518,0.253049,0.764703,8.162239,-6.532149,-3.327943,-3.439901,9.362086,-5.490764,2.648019,-7.648300,4.837862,-3.504439,7.815899,6.043694,-4.411162,4.603120,0.837212,1.655760,-0.106203,-8.364003,3.579188,-5.434237,-6.443255,-9.737164,-2.250757,3.135150,-6.524634,-9.735504,3.802805,-0.376182,8.032847,-5.281253,-9.772248,0.037582,5.114868,0.127032,0.201345,8.784368,-5.458065,1.415573,-0.119266,-8.923410,9.430937,-0.067464,-0.275497,-1.955601,-3.110401,-1.844812,-5.646279,5.412576,3.643546,-0.083475,-8.915896,-4.540146,-5.182355,-7.747479,-1.066228,4.524285,3.201725,3.037283,-8.261649,2.601725,-5.226901,0.328592,-6.420279,-7.359364,4.236155,-1.144179,-6.373401,-8.869879,-0.215653,1.876222,4.395324,-1.878216,-8.508835,-8.956189,-5.707875,2.174613,3.869039,2.889109,-8.677851,7.576407,3.849922,0.792347,4.260832,-4.403341,-1.243262,-6.801846,-2.888802,0.232981,-8.752608,3.330128,7.434143,1.555414,9.420736,-7.523610,-2.279955,0.661574,4.743617,4.835946,-3.361850,7.877439,8.226914,-6.876584,-2.490442,-7.557514,8.546059,3.025876,6.414101,5.409965,-3.247787,-1.670472,2.380511,-8.240115,-4.145615,2.476219,6.567312,-0.529557,6.420898,-2.098820,-8.082472,-9.372055,-4.143174,-3.230052,6.844474,-5.193756,-0.679128,-9.641001,-4.355422,-3.995195,1.456607,4.374455,-5.814716,1.802940,-3.645286,-4.575952,6.701652,-2.743822,-0.224936,9.182078,-7.201018,5.372799,-4.611918,-5.144360,-1.040612,8.164465,6.961990,-5.289951,-0.548969,3.168139,6.907050,3.072724,-2.805595,-9.203192,0.212087,-5.873130,2.185735,-0.011485,-9.718120,-6.903500,7.948791,-0.635761,-3.408084,7.312319,-7.607207,4.009863,-5.378307,-7.035556,-5.165921,7.513063,-7.773867,3.021273,-0.143769,2.750660,9.908058,5.766501,-0.391065,1.138201,9.539707,1.914129,2.536804,3.424364,-6.715197,-6.771782,5.481448,-1.165076,-1.657005,3.532791,1.104607,3.252449,8.103618,8.287655,-2.399337,-4.081774,0.844664,8.019673,3.746750,-5.186997,4.803575,-6.452372,4.955631,-5.148856,6.728682,-4.415472,4.629990,1.955771,-0.478049,-9.052711,1.408511,-7.176686,-0.867904,9.625375,3.958818,3.085228,-1.238662,4.953629,-0.850897,4.980541,0.635449,-9.843415,7.215638,9.006145,0.367147,-3.812083,9.112966,7.278325,9.365134,9.643034,7.841589,7.697611,-4.236344,8.293713,-3.751726,-9.741985,-1.526425,-5.618232,-3.749983,8.819171,9.785454,-0.453482,4.238502,8.570919,-4.933304,0.475636,6.422723,-6.302076,4.483336,3.762257,-0.648023,1.501712,-9.615781,7.008808,-1.848176,-8.211819,-6.099971,-8.845070,3.560972,-7.242313,-3.587237,5.415833,-0.545444,8.735951,4.480266,-3.077436,6.221894,-4.785038,6.001170,-3.412845,-9.993013,-2.116860,-4.365868,-9.915026,-8.784902,1.900739,-4.380555,-6.520695,-3.726330,-8.269219,-3.033511,-1.179739,0.456864,-6.227226,-6.818720,-9.892294,6.625555,9.402477,5.326090,3.580041,4.829712,-1.770689,2.018614,-8.064070,-8.251545,0.885529,6.118062,-9.173632,-4.271531,-3.086603,-0.350994,-3.994085,6.695670,3.412974,1.171719,-6.607327,2.007627,6.046703,1.767254,0.905220,-0.051603,8.649729,-7.712328,-7.611835,-3.995249,6.302600,0.970554,-2.270502,7.388747,9.902123,8.912420,4.258175,-7.331025,6.425327,0.016165,-7.511528,-0.906171,4.975962,9.408666,9.865385,-1.377350], dtype = "float64")#candidate|6636|(576,)|const|float64
call_6632 = relay.TupleGetItem(func_1162_call(relay.reshape(const_6633.astype('int32'), []), relay.reshape(var_6634.astype('int32'), [8, 4, 14]), relay.reshape(var_6635.astype('float64'), [819,]), relay.reshape(const_6636.astype('float64'), [576,]), ), 2)
call_6637 = relay.TupleGetItem(func_1168_call(relay.reshape(const_6633.astype('int32'), []), relay.reshape(var_6634.astype('int32'), [8, 4, 14]), relay.reshape(var_6635.astype('float64'), [819,]), relay.reshape(const_6636.astype('float64'), [576,]), ), 2)
output = relay.Tuple([call_6630,call_6632,const_6633,var_6634,var_6635,const_6636,])
output2 = relay.Tuple([call_6631,call_6637,const_6633,var_6634,var_6635,const_6636,])
func_6638 = relay.Function([var_6634,var_6635,], output)
mod['func_6638'] = func_6638
mod = relay.transform.InferType()(mod)
var_6639 = relay.var("var_6639", dtype = "int32", shape = (448,))#candidate|6639|(448,)|var|int32
var_6640 = relay.var("var_6640", dtype = "float64", shape = (819,))#candidate|6640|(819,)|var|float64
output = func_6638(var_6639,var_6640,)
func_6641 = relay.Function([var_6639,var_6640,], output)
mutated_mod['func_6641'] = func_6641
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5843_call = mod.get_global_var('func_5843')
func_5845_call = mutated_mod.get_global_var('func_5845')
call_6672 = func_5843_call()
call_6673 = func_5843_call()
output = relay.Tuple([call_6672,])
output2 = relay.Tuple([call_6673,])
func_6674 = relay.Function([], output)
mod['func_6674'] = func_6674
mod = relay.transform.InferType()(mod)
output = func_6674()
func_6675 = relay.Function([], output)
mutated_mod['func_6675'] = func_6675
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6674_call = mod.get_global_var('func_6674')
func_6675_call = mutated_mod.get_global_var('func_6675')
call_6715 = relay.TupleGetItem(func_6674_call(), 0)
call_6716 = relay.TupleGetItem(func_6675_call(), 0)
func_6674_call = mod.get_global_var('func_6674')
func_6675_call = mutated_mod.get_global_var('func_6675')
call_6722 = relay.TupleGetItem(func_6674_call(), 0)
call_6723 = relay.TupleGetItem(func_6675_call(), 0)
bop_6751 = relay.floor_mod(call_6715.astype('float32'), relay.reshape(call_6722.astype('float32'), relay.shape_of(call_6715))) # shape=(1, 9, 16)
bop_6754 = relay.floor_mod(call_6716.astype('float32'), relay.reshape(call_6723.astype('float32'), relay.shape_of(call_6716))) # shape=(1, 9, 16)
output = relay.Tuple([bop_6751,])
output2 = relay.Tuple([bop_6754,])
func_6755 = relay.Function([], output)
mod['func_6755'] = func_6755
mod = relay.transform.InferType()(mod)
mutated_mod['func_6755'] = func_6755
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6755_call = mutated_mod.get_global_var('func_6755')
call_6756 = func_6755_call()
output = call_6756
func_6757 = relay.Function([], output)
mutated_mod['func_6757'] = func_6757
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5767_call = mod.get_global_var('func_5767')
func_5768_call = mutated_mod.get_global_var('func_5768')
call_6823 = func_5767_call()
call_6824 = func_5767_call()
func_6588_call = mod.get_global_var('func_6588')
func_6589_call = mutated_mod.get_global_var('func_6589')
call_6827 = func_6588_call()
call_6828 = func_6588_call()
func_6674_call = mod.get_global_var('func_6674')
func_6675_call = mutated_mod.get_global_var('func_6675')
call_6836 = relay.TupleGetItem(func_6674_call(), 0)
call_6837 = relay.TupleGetItem(func_6675_call(), 0)
output = relay.Tuple([call_6823,call_6827,call_6836,])
output2 = relay.Tuple([call_6824,call_6828,call_6837,])
func_6847 = relay.Function([], output)
mod['func_6847'] = func_6847
mod = relay.transform.InferType()(mod)
output = func_6847()
func_6848 = relay.Function([], output)
mutated_mod['func_6848'] = func_6848
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6186_call = mod.get_global_var('func_6186')
func_6187_call = mutated_mod.get_global_var('func_6187')
call_6852 = func_6186_call()
call_6853 = func_6186_call()
output = relay.Tuple([call_6852,])
output2 = relay.Tuple([call_6853,])
func_6878 = relay.Function([], output)
mod['func_6878'] = func_6878
mod = relay.transform.InferType()(mod)
output = func_6878()
func_6879 = relay.Function([], output)
mutated_mod['func_6879'] = func_6879
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5631_call = mod.get_global_var('func_5631')
func_5632_call = mutated_mod.get_global_var('func_5632')
call_6937 = func_5631_call()
call_6938 = func_5631_call()
output = relay.Tuple([call_6937,])
output2 = relay.Tuple([call_6938,])
func_6956 = relay.Function([], output)
mod['func_6956'] = func_6956
mod = relay.transform.InferType()(mod)
output = func_6956()
func_6957 = relay.Function([], output)
mutated_mod['func_6957'] = func_6957
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6257_call = mod.get_global_var('func_6257')
func_6259_call = mutated_mod.get_global_var('func_6259')
call_6975 = relay.TupleGetItem(func_6257_call(), 1)
call_6976 = relay.TupleGetItem(func_6259_call(), 1)
uop_6991 = relay.cosh(call_6975.astype('float32')) # shape=(6, 8, 15)
uop_6993 = relay.cosh(call_6976.astype('float32')) # shape=(6, 8, 15)
func_6313_call = mod.get_global_var('func_6313')
func_6316_call = mutated_mod.get_global_var('func_6316')
const_6998 = relay.const([8.411849,5.463538,9.979240,5.124926,-1.685678,7.949411,8.356553,-9.465304,5.053259,3.893860,9.879096,-3.289530,6.188469,2.717992,-3.659929], dtype = "float64")#candidate|6998|(15,)|const|float64
const_6999 = relay.const([8.412763,2.832848,-7.605508,9.270957,5.274975,-9.683915,-7.274111,-0.843505,-1.061539,4.979456,-8.341894,3.001313,2.180198,-9.154276,2.390087,7.557838,-1.884803,9.276384,-5.767720,0.428686,-2.106994,0.757031,8.230187,-2.102842,-9.344056,-2.065251,-0.534935,-9.176032,-0.902299,-6.851456,7.765820,-3.869515,-4.289785,-0.778817,-9.340991,-9.722559,0.157477,3.520635,2.545597,-1.258092,3.607918,3.758681,3.124687,2.424046,-0.592505,8.816891,1.023542,1.960660], dtype = "float64")#candidate|6999|(48,)|const|float64
call_6997 = relay.TupleGetItem(func_6313_call(relay.reshape(const_6998.astype('float64'), [1, 3, 5]), relay.reshape(const_6999.astype('float64'), [48,]), ), 0)
call_7000 = relay.TupleGetItem(func_6316_call(relay.reshape(const_6998.astype('float64'), [1, 3, 5]), relay.reshape(const_6999.astype('float64'), [48,]), ), 0)
var_7020 = relay.var("var_7020", dtype = "float64", shape = (2, 3, 5))#candidate|7020|(2, 3, 5)|var|float64
bop_7021 = relay.maximum(call_6997.astype('int64'), relay.reshape(var_7020.astype('int64'), relay.shape_of(call_6997))) # shape=(2, 3, 5)
bop_7024 = relay.maximum(call_7000.astype('int64'), relay.reshape(var_7020.astype('int64'), relay.shape_of(call_7000))) # shape=(2, 3, 5)
uop_7067 = relay.atanh(call_6997.astype('float64')) # shape=(2, 3, 5)
uop_7069 = relay.atanh(call_7000.astype('float64')) # shape=(2, 3, 5)
func_6674_call = mod.get_global_var('func_6674')
func_6675_call = mutated_mod.get_global_var('func_6675')
call_7071 = relay.TupleGetItem(func_6674_call(), 0)
call_7072 = relay.TupleGetItem(func_6675_call(), 0)
output = relay.Tuple([uop_6991,const_6998,const_6999,bop_7021,uop_7067,call_7071,])
output2 = relay.Tuple([uop_6993,const_6998,const_6999,bop_7024,uop_7069,call_7072,])
func_7078 = relay.Function([var_7020,], output)
mod['func_7078'] = func_7078
mod = relay.transform.InferType()(mod)
var_7079 = relay.var("var_7079", dtype = "float64", shape = (2, 3, 5))#candidate|7079|(2, 3, 5)|var|float64
output = func_7078(var_7079)
func_7080 = relay.Function([var_7079], output)
mutated_mod['func_7080'] = func_7080
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7101 = relay.var("var_7101", dtype = "bool", shape = (15, 4, 11))#candidate|7101|(15, 4, 11)|var|bool
var_7102 = relay.var("var_7102", dtype = "bool", shape = (15, 4, 11))#candidate|7102|(15, 4, 11)|var|bool
bop_7103 = relay.logical_and(var_7101.astype('bool'), relay.reshape(var_7102.astype('bool'), relay.shape_of(var_7101))) # shape=(15, 4, 11)
func_3035_call = mod.get_global_var('func_3035')
func_3039_call = mutated_mod.get_global_var('func_3039')
var_7110 = relay.var("var_7110", dtype = "int16", shape = (126, 3))#candidate|7110|(126, 3)|var|int16
const_7111 = relay.const([[-4.812762,9.833665],[-0.281402,3.752538],[2.003247,-6.655408],[7.982778,6.893259],[2.303127,8.683677],[1.448258,-3.180753],[2.435918,-0.346301],[-1.463264,6.670578],[1.346606,3.548080],[5.040522,4.761250],[-7.756166,8.988982],[-5.950600,-1.303104],[-5.443022,-0.860815],[-8.247870,-7.613647],[-9.914312,1.742843],[-8.991234,2.205401],[-3.851191,6.087813],[1.266707,-0.095520],[9.678784,6.203614],[-8.305057,4.059842],[6.025702,-3.190069],[0.693357,2.890045],[1.922391,-4.190633],[2.566050,-9.943678]], dtype = "float64")#candidate|7111|(24, 2)|const|float64
call_7109 = relay.TupleGetItem(func_3035_call(relay.reshape(var_7110.astype('int16'), [6, 9, 7]), relay.reshape(var_7110.astype('int16'), [6, 9, 7]), relay.reshape(const_7111.astype('float64'), [48,]), ), 2)
call_7112 = relay.TupleGetItem(func_3039_call(relay.reshape(var_7110.astype('int16'), [6, 9, 7]), relay.reshape(var_7110.astype('int16'), [6, 9, 7]), relay.reshape(const_7111.astype('float64'), [48,]), ), 2)
func_6755_call = mod.get_global_var('func_6755')
func_6757_call = mutated_mod.get_global_var('func_6757')
call_7113 = relay.TupleGetItem(func_6755_call(), 0)
call_7114 = relay.TupleGetItem(func_6757_call(), 0)
output = relay.Tuple([bop_7103,call_7109,var_7110,const_7111,call_7113,])
output2 = relay.Tuple([bop_7103,call_7112,var_7110,const_7111,call_7114,])
func_7115 = relay.Function([var_7101,var_7102,var_7110,], output)
mod['func_7115'] = func_7115
mod = relay.transform.InferType()(mod)
var_7116 = relay.var("var_7116", dtype = "bool", shape = (15, 4, 11))#candidate|7116|(15, 4, 11)|var|bool
var_7117 = relay.var("var_7117", dtype = "bool", shape = (15, 4, 11))#candidate|7117|(15, 4, 11)|var|bool
var_7118 = relay.var("var_7118", dtype = "int16", shape = (126, 3))#candidate|7118|(126, 3)|var|int16
output = func_7115(var_7116,var_7117,var_7118,)
func_7119 = relay.Function([var_7116,var_7117,var_7118,], output)
mutated_mod['func_7119'] = func_7119
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6257_call = mod.get_global_var('func_6257')
func_6259_call = mutated_mod.get_global_var('func_6259')
call_7148 = relay.TupleGetItem(func_6257_call(), 2)
call_7149 = relay.TupleGetItem(func_6259_call(), 2)
output = call_7148
output2 = call_7149
func_7177 = relay.Function([], output)
mod['func_7177'] = func_7177
mod = relay.transform.InferType()(mod)
output = func_7177()
func_7178 = relay.Function([], output)
mutated_mod['func_7178'] = func_7178
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5631_call = mod.get_global_var('func_5631')
func_5632_call = mutated_mod.get_global_var('func_5632')
call_7198 = func_5631_call()
call_7199 = func_5631_call()
func_5680_call = mod.get_global_var('func_5680')
func_5682_call = mutated_mod.get_global_var('func_5682')
var_7201 = relay.var("var_7201", dtype = "uint8", shape = ())#candidate|7201|()|var|uint8
call_7200 = relay.TupleGetItem(func_5680_call(relay.reshape(var_7201.astype('uint8'), [])), 2)
call_7202 = relay.TupleGetItem(func_5682_call(relay.reshape(var_7201.astype('uint8'), [])), 2)
func_3470_call = mod.get_global_var('func_3470')
func_3473_call = mutated_mod.get_global_var('func_3473')
var_7220 = relay.var("var_7220", dtype = "uint8", shape = (165,))#candidate|7220|(165,)|var|uint8
call_7219 = relay.TupleGetItem(func_3470_call(relay.reshape(var_7201.astype('uint8'), []), relay.reshape(var_7220.astype('uint8'), [11, 5, 3]), ), 1)
call_7221 = relay.TupleGetItem(func_3473_call(relay.reshape(var_7201.astype('uint8'), []), relay.reshape(var_7220.astype('uint8'), [11, 5, 3]), ), 1)
bop_7239 = relay.bitwise_xor(call_7200.astype('uint8'), call_7219.astype('uint8')) # shape=(11, 5, 3)
bop_7242 = relay.bitwise_xor(call_7202.astype('uint8'), call_7221.astype('uint8')) # shape=(11, 5, 3)
uop_7248 = relay.log10(bop_7239.astype('float32')) # shape=(11, 5, 3)
uop_7250 = relay.log10(bop_7242.astype('float32')) # shape=(11, 5, 3)
func_3162_call = mod.get_global_var('func_3162')
func_3169_call = mutated_mod.get_global_var('func_3169')
var_7261 = relay.var("var_7261", dtype = "uint32", shape = (72,))#candidate|7261|(72,)|var|uint32
var_7262 = relay.var("var_7262", dtype = "float64", shape = (576,))#candidate|7262|(576,)|var|float64
var_7263 = relay.var("var_7263", dtype = "float32", shape = (36,))#candidate|7263|(36,)|var|float32
const_7264 = relay.const([-10,8,-3,-10,1,-1,-7,8,-2,-1,-9,3,2,8,-6,1,2,-5,-8,-1,-3,6,5,-1,-8,-8,-7,-9,-9,-8,7,-3,9,-7,-5,5,-9,7,-4,1,-3,1,9,9,-6,-5,6,-4,-5,9,-9,9,-5,2,-5,3,1,7,3,-10,-1,-2,2,-2,-8,9,7,-5,-4,-4,-9,6,1,2,9,3,-8,9,-2,6,-1,-5,-5,-1,-9,-2,3,10,3,-8,-7,-2,-5,-2,-9,-6,7,9,4,-5,-6,-1,4,3,-7,-8,3,7,1,4,2,-2,-1,-3,2,8,-4,7,2,5,-2,-2,-5,4,10,7,9,-3,10,-7,-3,-10,-4,4,10,5,-4,-8,8,4,1,-2,-1,-3,10,-3,3,-1,-2,-4,6,-6,-8,7,6,6,3,10,-2,4,10,-8,-3,-1,5,7,7,-2,-8,1,-2,-3,-6,10,-5,1,-4,-10,7,1,-9,5,-2,10,-8,5,-9,-7,-3,-2,-3,-4,3,1,-7,4,-1,-3,8,4,-6,5,1,-2,-1,3,-9,-9,2,4,10,-7,-9,-5,-6,2,-10,-9,9,5,8,-3,8,-9,10,10,-5,3,7,-10,7,-7,9,7,-7,-9,4,-2,-2,1,-8,3,9,-5,4,-1,9,7,4,-5,8,-8,4,5,4,-9,8,-4,-6,7,-6,10,-6,3,-10,-3,-2,3,2,3,3,-6,2,1,-1,-9,-7,-4,5,-3,8,7,6,8,-7,1,3,-2,7,6,-2,-7,-5,1,8,6,7,-6,3,-10,6,-2,-9,7,-8,6,-9,10,-3,5,3,7,-7,5,-6,-10,-6,-3,-7,-3,-3,-8,1,6,8,-5,-3,3,5,9,10,-4,-4,-1,7,-7,-2,-1,-2,7,8,-1,4,10,9,-1,-1,-7,-1,-3,4,-9,6,9,8,-5,10,7,9,1,7,9,6,10,-8,-8,-4,9,10,7,6,4,8,-9,-9,7,2,-3,-3,8,7,-4,-4,2,-2,1,10,5,-5,7,5,-9,1,5,-4,-5,-8,3,-1,5,-3,-3,-10,-3,3,2,-5,4,4,9,-2,-10,-3,-2,9,8,-4,6,-1,2,10,-1,4,10,5,-5,-4,-5,7,1,-7,-7,-2,-6,4,7,1,-1,-3,2,-2,5,1,5,9,5,9,-6,6,5,7,4,-10,-2,9,3,10,-9,7,-10,-2,-2,-6,-3,8,2,8,5,2,2,-3,5,2,6,-10,6,1,4,-4,-10,2,10,-10,9,4,5,6,-1,-4,8,3,-7,-1,10,7,-10,3,-1,6,-7,3,8,-2,10,5,-1,3,1,-8,-1,-2,-3,4,-8,-4,-1,-6,8,7,5,5,8,-1,-2,-1,-3,-8,10,8,10,-2,1,-9,6,-7,6,5,10,5,7,6,1,-6,-4,6,8,-7,5,-8,-4,4,-6,5,8,-9,8,-5,-9,-7,-9,9,2,-8,5,-2,2,-8,4,4,5,-7,9,9,6,1,10,3,-7,3,-7,-9,-10,7,10,5,7,8,7,3,5,7,3,1,10,-2,-8,8,-7,1,-10,-5,-10,2,10,1,7,-5,7,-10,10,6,4,4,-2,-1,3,7,10,-1,5,8,-9,4,-8,4,8,-6,5,4,-4,10,-4,3,6,-4,5,5,-6,-1,-3,2,7,4,7,1,-6,3,6,3,9,5,1,9,6,2,4,-3,-4,-5,6,6,-5,-3,2,-4,-3,-4,-8,-10,2,-6,-7,-7,7,-6,8,-8,-1,-3,-4,4,6,10,3,-10,3,1,-6,-5,-2,7,-2,-2,-3,6,2,5,-9,1,8,-7,9,4,-10,-8,9,4,-8,2,1,-1,7,-10,4,8,-5,2,7,-9,5,9,3,-3,10,-4,-3,-6,4,7,-9,9,-2,-10,-7,5,-6,-5,-10,10,6,-4,1,-7,6,-1,9,-3,-3,9,1,3,10,4,8,3,8,-3,5,-3,4,-8,-6,-5,3,8,-9,1,10,-1,-1,-2,-10,-9,-7,-8,8,5,8,-2,5,4,2,-3,-3,3,-1,-5,2,-7,-6,-9,2,8,-5,8,-4,-3,-10,-1,3,6,-8,4,-3,-10,-6,3,4,-6,4,8,8,6,-8,-10,-10,-4,5,10,-10,9,9,4,3,-2,-5,7,-10,3,10,10,10,-10,-3,-5,1,9,-5,-5,2,-9,6,4,1,-5,-3,-2,-8,-9,5,3,9,-7,-4,7,8,5,-2,-1,6,-5,-10,1,-1,8,-4,1,-1,-10,-1,-1,2,4,-4,-8,-10,9,-2,-5,-1,-7,3,10,6,-1,8,-7,-9,-6,-5,-5,-9,-4,-5,2,-3,-2,-6,-4,-4,-1,-8,-3,-1,-10,-3,-1,9,3,-6,9,5,8,4,6,-7,-10,-9,-2,2,-7,6,9,-3,9,-9,-1,-2,8,10,-5,4,2,8,4,-5,-9,6,6,2,1,4,10,2,1,3,-1,-1,10,8,-3,2,-5,10,2,-7,-7,-6,8,-4,-1,6,4,6,9,8,8,4,2,5,7,-6,4,1,1,-2,2,6,-5,10,10,-8,9,2,-5,5,8,4,5,-3,-3,-1,-2,1,-1,3,-2,-10,2,-4,6,7,-3,5,8,-4,-2,8,-4,-3,-1,-4,7,5,5,-6,-9,6,-6,9,10,7,-10,6,-3,9,-5,-8,-9,4,2,-5,-3,-4,4,2,-9,-6,3,5,2,1,-8,-10,4,9,3,9,-6,2,-6,-4,3,-8,-3,-2,6,10,2,1,5,-2,-5,-4,-3,1,-3,8,4,-2,-8,1,10,8,-3,-8,8,-1,-10,-3,3,4,-10,2,8,-10,10,10,3,2,8,8,-9,-8,4,-3,7,1,-10,1,8,-6,-5,10,6,-5,1,2,-2,10,4,-1,9,-8,6,8,-5,4,-1,-7,8,3,7,1,6,5,5,10,-9,-4,2,-1,-8,-6,-1,8,-6,1,6,3,5,1,4,-3,-4,2,-1,-2,9,-10,10,2,-8,-7,6,8,8,1,-1,-8,3,10,2,5,-9,-2,2,2,8,6,-1,-7,-2,-2,-5,9,-10,-4,-10,-2,1,-7,-1,-4,-2,4,5,-4,-4,-3,9,-6,10,9,-8,-10,-8,-3,9,9,10,-5,-9,-3,7,1,-7,-3,9,-8,7,-8,-6,-6,-2,6,-10,-6,-10,-9,2,-3,7,5,-1,4,4,5,-5,-5,-5,7,-2,2,2,10,-1,5,10,5,7,-9,1,9,4,3,6,3,-4,3,8,4,-6,-9,-10,-8,-4,-6,-1,-3,10,4,-7,-6,-4,1,-2,-1,-1,-7,-5,-6,3,7,8,9,-7,5,-10,9,10,5,-2,-2,-7,5,-5,-4,-4,2,-1,9,-4,6,-7,-9,2,9,-2,-8,-2,-2,4,5,7,10,-10,7,-3,-9,7,-7,4,4,1,-7,-3,-7,-7,4], dtype = "int8")#candidate|7264|(1320,)|const|int8
call_7260 = relay.TupleGetItem(func_3162_call(relay.reshape(var_7261.astype('uint32'), [3, 4, 6]), relay.reshape(var_7261.astype('uint32'), [3, 4, 6]), relay.reshape(var_7262.astype('float64'), [288, 2]), relay.reshape(var_7201.astype('int32'), []), relay.reshape(var_7263.astype('float32'), [9, 4]), relay.reshape(const_7264.astype('int8'), [1320,]), ), 5)
call_7265 = relay.TupleGetItem(func_3169_call(relay.reshape(var_7261.astype('uint32'), [3, 4, 6]), relay.reshape(var_7261.astype('uint32'), [3, 4, 6]), relay.reshape(var_7262.astype('float64'), [288, 2]), relay.reshape(var_7201.astype('int32'), []), relay.reshape(var_7263.astype('float32'), [9, 4]), relay.reshape(const_7264.astype('int8'), [1320,]), ), 5)
output = relay.Tuple([call_7198,var_7201,var_7220,uop_7248,call_7260,var_7261,var_7262,var_7263,const_7264,])
output2 = relay.Tuple([call_7199,var_7201,var_7220,uop_7250,call_7265,var_7261,var_7262,var_7263,const_7264,])
func_7271 = relay.Function([var_7201,var_7220,var_7261,var_7262,var_7263,], output)
mod['func_7271'] = func_7271
mod = relay.transform.InferType()(mod)
mutated_mod['func_7271'] = func_7271
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7271_call = mutated_mod.get_global_var('func_7271')
var_7273 = relay.var("var_7273", dtype = "uint8", shape = ())#candidate|7273|()|var|uint8
var_7274 = relay.var("var_7274", dtype = "uint8", shape = (165,))#candidate|7274|(165,)|var|uint8
var_7275 = relay.var("var_7275", dtype = "uint32", shape = (72,))#candidate|7275|(72,)|var|uint32
var_7276 = relay.var("var_7276", dtype = "float64", shape = (576,))#candidate|7276|(576,)|var|float64
var_7277 = relay.var("var_7277", dtype = "float32", shape = (36,))#candidate|7277|(36,)|var|float32
call_7272 = func_7271_call(var_7273,var_7274,var_7275,var_7276,var_7277,)
output = call_7272
func_7278 = relay.Function([var_7273,var_7274,var_7275,var_7276,var_7277,], output)
mutated_mod['func_7278'] = func_7278
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6674_call = mod.get_global_var('func_6674')
func_6675_call = mutated_mod.get_global_var('func_6675')
call_7342 = relay.TupleGetItem(func_6674_call(), 0)
call_7343 = relay.TupleGetItem(func_6675_call(), 0)
const_7345 = relay.const([[[0.230747,-7.888465,0.725782,3.924387,5.525663,0.058130,-8.825148,2.861293,1.472003,-2.650927,-7.930809,4.693391,-9.570628,4.829819,-4.527163,6.437428],[3.442502,-3.322703,-1.415006,-4.528019,-2.287719,2.552364,3.262090,3.262272,8.847355,9.516376,-6.511778,-4.134988,-4.564564,0.158199,-1.177474,-8.088477],[-7.202729,-7.266945,-4.739424,-6.453631,-1.475668,0.598364,-1.331524,9.241305,1.097119,-1.435875,1.917012,-4.571693,-6.879205,-2.506269,-2.895564,9.070153],[-9.521335,6.736963,-8.365279,5.643515,-7.731755,-5.570031,-9.760249,-9.792670,-3.043088,1.061827,6.377422,4.594859,0.622455,-8.260230,2.506402,3.231596],[-3.614605,-9.922323,-6.511712,7.232119,8.774047,-4.616506,1.660170,3.639009,4.725655,6.726891,-4.301738,-3.513613,2.523522,6.724721,-5.215397,-0.834406],[-0.069835,1.691163,-7.418507,1.115597,2.464258,2.337290,-9.801678,-4.793071,9.167785,-8.445467,2.315798,-0.861802,4.680207,9.478601,-0.790773,-4.245327],[-1.963759,5.551956,6.888209,-8.259433,-0.328715,5.919269,-2.852219,-3.454075,-8.857463,2.513153,-8.331189,-7.501216,-1.659261,0.694891,7.730954,5.749077],[-3.499217,-4.597012,3.368086,-6.616342,8.785374,-6.202823,9.311492,3.284965,6.162037,8.610209,-9.652820,0.584003,1.269738,5.235211,1.243354,0.393206],[-1.962495,2.940701,-4.233591,0.773083,6.218440,-0.740962,0.413861,-6.136232,-1.195097,-0.789947,3.170294,4.912106,-5.945264,6.777486,1.527996,1.750123]],[[2.433108,7.067021,-2.566672,6.105961,-9.839693,5.069481,8.544296,-3.792138,8.579531,3.937706,3.855294,-1.731962,6.271628,0.416136,-8.308143,-6.842752],[2.386768,9.882239,2.878450,3.440433,-5.368357,5.721820,8.152575,-1.552062,-2.217929,5.060685,-9.281324,2.268165,-5.535349,0.586571,-1.786703,-3.150889],[7.564612,7.173721,-1.476310,2.770624,5.787927,-8.635040,-2.725986,-3.243222,-0.618823,-9.235681,9.805461,5.977691,-3.652807,-4.221244,-9.436676,-0.522718],[-6.326853,-6.122370,3.912573,-0.684148,-3.082128,6.835360,2.869494,9.431229,9.526980,-4.407390,-7.074906,-4.792615,-0.052918,6.413354,5.406010,1.225854],[3.093107,-7.834391,0.806307,-9.851447,-2.368774,-3.255098,1.358285,9.667063,-4.908015,0.346280,7.839965,8.769449,-1.607406,6.757318,7.318031,7.405580],[-8.290246,2.411374,-7.685388,-8.724739,1.719195,-7.395212,-1.104053,2.058938,-4.399161,4.223118,7.921801,1.043110,5.725812,8.855679,5.506592,-9.403435],[0.560382,2.101104,1.804696,-5.189600,7.516267,0.484534,-0.148150,-5.816882,0.309525,9.472351,-9.791953,-0.837642,6.740820,-5.876713,-6.428114,-4.256837],[-9.278304,-5.316627,1.229712,-8.719841,9.541296,0.571667,7.233979,-5.820305,0.990221,2.109976,3.277271,-1.050051,3.056803,7.042190,8.267544,7.432394],[-4.623759,8.246799,-5.879325,-8.512194,9.254978,-3.106160,4.101478,9.121454,-2.628722,-1.616815,-0.684781,-8.617760,-1.444866,1.112910,9.972611,1.997124]],[[-6.103702,-7.527123,6.564846,4.697393,-8.497669,9.653521,-3.905636,-4.108080,3.822871,-6.467538,1.125014,0.038152,8.300538,5.424787,-7.040577,-8.876876],[0.649226,9.200390,6.791791,5.453907,-8.139410,6.083664,0.553344,8.457546,-1.649535,-1.664332,-6.336253,4.709093,3.693782,6.773623,-6.915736,-1.847932],[-1.833974,-9.405322,-4.340637,2.584043,-8.182573,-7.996740,-6.113809,-2.539005,5.344230,8.791325,-5.993802,9.287889,2.698789,8.038517,-7.538766,-7.475471],[-1.602737,-9.563403,-1.774389,1.351282,-0.337487,0.524829,-0.661152,-5.059650,-5.973677,3.367657,-0.287802,-7.472759,6.057314,0.091911,-3.818930,-5.695775],[-7.084879,2.927365,-2.054129,6.794097,-1.666375,-2.978936,-4.802417,0.406801,-6.773025,-9.903808,2.410121,-2.732809,-0.914370,7.717686,0.010088,6.556451],[-1.296856,2.996609,-9.431383,-0.446672,5.985488,6.949136,3.155081,-7.540858,3.763517,-6.593255,-6.087613,-6.699925,9.405691,9.124425,0.735789,-4.249261],[4.691069,3.967061,4.828732,8.749227,-7.963472,-5.439647,1.816501,4.331171,4.780831,3.259558,-3.366527,2.880668,7.905915,9.280411,1.945107,0.725845],[3.057266,-7.802002,-4.739513,1.625171,-9.532770,-2.798790,-6.404475,2.729010,9.928392,3.046521,-0.215577,1.869199,1.876904,-8.544533,1.804653,-1.622411],[-1.225419,0.650397,-6.550651,2.014133,-4.153336,-4.544320,6.858509,3.248478,-3.480794,1.689586,4.115121,1.258327,3.826571,6.076133,5.428033,5.370336]],[[5.028879,-0.993485,4.369146,-8.759974,8.747991,-4.969019,-2.106153,8.037551,4.442804,4.210732,-6.070263,4.745053,2.097433,-4.132249,-6.714958,-9.222181],[-3.995098,5.050750,2.541799,3.581349,-4.343718,7.276308,1.244844,-3.487671,7.596553,0.404502,-0.353071,3.423329,-2.776720,-0.897800,1.448096,-9.711889],[6.267810,8.268724,7.244628,1.796411,4.837359,6.931486,8.614397,7.824601,5.428901,-3.456282,1.894057,7.253728,0.978517,8.423937,0.553930,-5.729727],[3.174009,4.476227,3.874659,0.571844,9.171632,0.222329,-4.290679,-5.697173,-2.887257,4.468418,-3.917645,9.708503,-6.603800,1.185317,-6.857317,-9.076881],[9.173320,-0.782007,-1.503109,2.388696,-7.352080,-3.098782,5.044908,8.952610,-2.872572,-1.720149,2.097723,-9.618806,-5.882301,3.865051,-3.946174,-0.480694],[2.206268,-2.010074,-4.479934,-0.181293,-5.440862,9.727127,3.070405,5.167212,6.929255,-3.964344,1.112594,-4.031390,-9.993534,-8.225189,5.555542,5.991264],[-0.849857,-0.049752,6.465437,8.508006,-9.252344,-6.093872,5.636837,5.993805,9.599798,-3.000071,-9.454748,-5.486752,-1.827047,1.742649,4.574184,4.605000],[-8.187532,2.692662,-0.677730,-1.661946,7.172340,-4.891025,-6.034347,-1.532523,3.126725,8.503590,0.212317,5.038785,-1.331025,-2.351769,9.649582,4.475817],[2.709833,9.025004,-8.561092,-1.973831,-5.605389,-3.628548,-2.022262,-7.011423,4.995052,-6.444165,4.168936,1.924550,-0.368299,-0.289596,1.570632,-0.256084]],[[-9.533028,-4.065328,3.015299,-7.353858,2.581687,-4.896611,4.354041,2.073364,-4.743916,-3.388776,3.516351,-9.141164,9.250460,1.664031,-4.036882,5.015625],[-8.996230,3.490918,1.550626,1.413205,6.681685,-3.488331,0.903013,6.955789,4.456525,8.878299,8.398072,3.362623,-5.847462,2.432117,-2.543618,7.733986],[-0.221940,-5.972333,9.504640,-4.093074,0.447950,6.707756,5.260875,9.500568,-1.941211,2.117038,-2.714692,-7.678350,-0.434876,7.794440,2.656303,0.307689],[-7.262083,1.105751,7.943823,-0.656977,-6.305201,2.798453,-2.849803,8.175557,-1.423746,3.193486,8.056926,5.095549,9.359053,-1.429537,-3.145105,5.760865],[0.494677,-7.724581,-4.251962,8.998062,-4.257303,-1.305168,2.564767,-3.482240,4.127797,-0.190622,2.970881,-8.443501,7.117882,0.123820,-2.732967,-6.118003],[3.478332,-8.241589,9.575423,6.558722,5.866888,-0.504032,8.226494,-5.604919,-0.957484,9.063985,-3.954474,7.262837,-9.880242,8.686603,9.273581,-7.762838],[-7.646905,-8.600444,-3.462252,-6.808034,-4.021820,3.101742,5.678659,-9.632028,-8.318326,1.236220,8.872809,-7.010551,-9.668431,-2.483646,5.123393,-6.030503],[4.908046,1.463161,-1.166290,7.197703,4.043554,-2.385627,-7.695612,-4.746669,-1.025466,-7.395276,-7.837689,9.688527,-6.500288,-1.130827,-5.208813,-4.731511],[-4.894061,-2.613661,2.469372,3.109566,-2.022310,1.331699,-9.248066,4.749159,0.553239,-9.243897,5.614539,-4.023510,5.017971,0.947584,-1.245508,0.227967]],[[-3.901106,7.076441,-6.108804,-0.515895,2.723842,5.149647,7.910662,-9.797437,-0.791840,8.460829,9.873534,-4.902943,-6.753852,-7.396886,2.265692,7.499697],[6.739195,3.477892,5.942138,-7.848805,0.083576,-8.864919,6.401039,1.023368,4.369241,0.394655,1.173835,9.906243,6.161493,-5.150936,-0.772652,-4.629755],[-4.557696,3.178230,3.569683,-5.105860,5.813849,-8.298120,-3.617831,6.315350,-4.569891,-9.637168,-8.830320,2.204334,5.286994,-6.161906,-2.129505,-8.831502],[-3.772293,-8.148492,2.463497,-4.009904,-5.315633,2.036804,-1.188757,-1.980307,4.860566,-1.523640,6.079212,-0.876124,3.532795,-6.893664,4.142506,1.075446],[-9.902642,-1.485109,-5.751534,-8.276182,3.756482,1.761586,-3.749963,-8.191121,-3.748936,2.291523,-9.776353,7.707899,-7.514943,4.957633,-9.961342,0.872723],[2.184161,-6.250349,-0.834600,-6.797864,2.275096,-9.630967,9.131176,3.244832,3.045908,9.161097,-7.139944,-5.005032,-3.301348,6.623148,-6.013422,9.796332],[-5.065807,8.871050,6.527919,-6.221303,-4.109849,-2.374591,8.790415,8.212886,4.160410,-6.739944,7.927534,-9.662786,3.720142,-4.534540,4.574843,8.042313],[-3.558311,-0.899382,-6.311459,-4.541988,6.157370,-0.219816,-9.267884,-4.549624,3.108902,-1.684126,8.038757,-3.199355,-4.334525,-5.320334,0.039514,1.387199],[-1.771164,8.205531,-9.179342,9.082183,-6.060486,-7.442573,-0.507897,-1.326143,2.043244,-7.321390,-4.950238,5.053124,-2.722965,-5.575099,0.392429,5.248792]],[[5.486752,-2.025888,-0.600851,-6.812013,-1.920200,9.328766,6.516554,-7.847496,-1.141163,1.928803,4.376362,6.822375,-9.171371,4.824890,5.405839,4.243039],[9.281523,-3.260373,-9.982668,5.488465,5.862758,9.471422,-3.018180,-3.982421,-7.781053,7.800048,-5.321079,0.048490,-3.468635,1.332349,0.619071,7.790623],[-9.553390,-8.948042,-8.369100,4.852881,4.664156,-9.073260,-8.840546,-7.849026,-9.222528,0.495303,7.600158,4.883611,4.445544,1.006292,7.304006,-1.981967],[1.500954,-6.473721,-3.156375,6.495805,-5.999031,0.083962,-4.415336,-2.528296,-2.306903,-9.747669,-4.677318,5.432739,-0.033965,2.784734,5.123864,8.294524],[-5.743430,-0.290362,-3.303997,-0.135804,1.668284,9.554994,-6.201940,-6.491738,8.301110,-4.572451,-1.990166,-1.303963,-4.842138,2.139704,7.420380,-1.596334],[-5.027402,-4.683550,3.184915,-4.901473,-3.021463,-2.033320,3.005686,8.515358,9.788578,-1.231637,-4.692646,-0.608179,-1.986969,-1.379626,8.333713,-1.244507],[-1.485027,-0.462772,1.437283,-9.431295,-0.009548,-0.186961,-1.182907,9.434737,4.811598,0.535558,-9.522981,5.984393,6.451330,-5.756471,-6.770684,0.556994],[4.921613,-5.505357,-3.196169,-1.360202,-8.570330,-1.374292,9.200979,-5.921811,0.083343,-2.944117,-9.850390,6.013623,9.907672,-8.964862,-8.326450,-2.989813],[7.612504,-4.925420,-5.819022,-9.092324,-1.876573,3.875216,-6.026004,-8.743549,8.931951,3.084200,-4.219400,-5.481157,-0.504731,-2.819222,-1.430727,-9.646248]],[[5.306464,1.365505,-3.691970,-8.977773,-3.142580,-5.292243,-5.827611,-5.895172,0.577594,5.982002,-7.474974,2.102840,-5.237638,7.338169,4.263378,-4.388398],[1.643805,-6.521243,2.558627,-1.312998,-6.217087,6.088129,1.527062,-8.721399,2.028776,6.412416,9.318899,6.591963,-9.402291,-0.079962,-5.594781,-1.297750],[-3.512082,2.594300,-0.678472,1.008647,-8.547262,3.915030,3.154818,-2.699782,0.953323,-2.159447,5.307812,-0.357682,2.335953,1.719697,9.479605,5.208699],[-9.831860,3.817683,-6.299668,7.456118,4.213720,-2.100828,-6.359541,-3.710192,-5.764630,0.842634,-2.051916,2.921525,-6.934417,1.217392,3.571022,-8.816517],[-7.484401,-8.192544,-6.051064,9.940745,-1.236159,-2.369702,2.860905,-4.932054,-0.649963,6.574272,0.130793,-4.878627,3.262554,6.676655,-3.841115,-2.862440],[5.506853,9.843752,-4.716168,-3.936529,-5.944043,3.956607,7.165252,-9.326071,0.077341,-1.630649,-4.010835,6.236561,-8.658617,-7.649403,-0.631784,1.792859],[3.884733,6.091249,-7.189175,-7.516755,4.908238,-3.114152,7.605637,-6.863554,-9.778283,0.604380,4.978456,-4.924300,3.240048,-4.296781,4.214757,-0.008149],[-3.774195,-9.144516,4.582967,8.416380,-1.517522,0.288555,-0.007446,2.500829,-9.882059,-6.309249,9.235120,2.502795,0.717780,-7.801332,-9.802264,-3.613075],[-3.661993,7.302336,5.652987,-9.799739,-5.719724,-1.323122,9.464904,4.116928,-6.946341,9.051150,-9.648895,8.754661,-0.467015,-1.158435,-4.753869,5.732570]],[[5.550625,-4.559565,-9.606383,-3.105508,-5.523847,2.906006,-3.776137,9.990936,-4.856917,-9.807774,7.773609,6.458672,8.282976,-4.410445,-0.755152,3.150147],[-1.125673,-9.427664,-4.784160,0.467660,7.562547,8.640203,7.847319,6.627322,3.752366,-3.222644,8.801018,5.697901,5.528158,-4.547231,3.315725,2.775048],[6.733164,-1.440825,7.468085,-5.935763,4.188782,-7.165158,-2.163275,-8.500870,-2.411411,-9.756678,-9.247385,-7.203113,-1.282438,6.423130,-1.228495,9.651297],[7.438175,-9.468860,-0.473400,0.707653,-7.532035,-6.341444,7.799990,-0.813631,-2.573994,0.197535,-5.995191,-3.337148,-9.796038,8.533631,8.261398,-9.759048],[-2.533981,9.339199,7.680960,-9.268497,-0.909790,-1.413983,-8.490375,6.031292,-6.723591,9.577983,6.657100,2.960750,-9.108233,-2.467618,2.714224,-2.523283],[4.220989,-0.331788,-1.104641,-4.954012,-2.581138,1.303001,-5.326857,7.317505,4.108439,8.965665,-7.219304,1.631917,1.481595,-6.217198,-0.515851,9.905820],[-4.844164,6.147401,-3.412209,-2.562997,-8.180031,6.489016,-1.147475,0.281058,-5.588650,-8.237701,8.617373,8.229332,-4.627082,-8.947354,-4.747048,-5.256987],[4.909176,9.025468,-2.816298,-1.815518,9.308623,3.930164,-8.989886,-9.022966,4.952907,-5.555983,-1.099794,-5.692159,0.085984,9.810792,-2.884800,7.293870],[1.338080,4.558725,-2.878019,2.691576,-2.714950,5.533259,0.220245,4.089377,4.069951,-9.312310,4.734980,-0.851314,8.763623,-6.835815,9.327856,6.496933]],[[-0.562979,-4.675720,3.293977,9.656297,-3.592503,-4.599168,-1.459569,3.249776,8.112260,1.232068,-6.729000,-3.884635,4.072199,9.511655,-0.632732,-7.895777],[9.713585,7.931713,-0.076164,-1.049867,4.854120,-0.535055,-8.996713,3.354225,3.144412,-4.580187,-5.177279,9.882081,5.948602,5.423288,-2.505630,4.000701],[-8.185743,-2.830672,5.909011,-1.931803,7.688770,-9.590558,-2.648293,-1.989702,-6.952033,6.107816,7.337436,-5.900407,8.724175,-5.785241,0.732546,6.048207],[-7.525879,-2.129923,0.872136,-3.542956,-6.701179,-7.247281,6.692473,-5.925629,-7.946322,-6.759253,2.717636,-6.695952,-9.013552,-4.468200,-4.858893,-7.914442],[9.997041,-6.442621,1.477288,8.297615,9.511808,-3.847920,-8.440041,-4.389777,-0.423517,-6.624578,-1.772925,-5.745716,7.552626,-8.094813,-2.608034,-9.936972],[-8.530391,-3.256470,-8.449097,9.318575,-9.238590,-3.122772,-7.398702,5.836187,8.546718,-2.624763,-6.964126,5.682465,7.393208,-2.351246,-3.005183,2.638468],[7.906925,-3.780976,-7.507001,-5.445090,3.645490,0.787768,0.447825,-1.241656,6.314369,-2.997641,3.228621,1.397744,-6.274343,-7.513740,5.552553,0.051038],[-8.051136,-5.075651,9.183573,9.988433,9.922935,-8.014062,5.740935,3.219615,-4.119467,-9.155058,0.843798,-6.374589,1.614514,-5.474288,4.987047,-0.877179],[8.224771,-6.825127,1.322360,7.037210,-7.630284,2.375129,-3.035945,-1.927621,3.114026,-9.606155,2.965984,-4.249986,-7.962121,8.745041,-2.770582,2.518596]]], dtype = "float64")#candidate|7345|(10, 9, 16)|const|float64
bop_7346 = relay.floor_mod(call_7342.astype('float32'), const_7345.astype('float32')) # shape=(10, 9, 16)
bop_7349 = relay.floor_mod(call_7343.astype('float32'), const_7345.astype('float32')) # shape=(10, 9, 16)
func_6847_call = mod.get_global_var('func_6847')
func_6848_call = mutated_mod.get_global_var('func_6848')
call_7354 = relay.TupleGetItem(func_6847_call(), 2)
call_7355 = relay.TupleGetItem(func_6848_call(), 2)
output = relay.Tuple([bop_7346,call_7354,])
output2 = relay.Tuple([bop_7349,call_7355,])
func_7364 = relay.Function([], output)
mod['func_7364'] = func_7364
mod = relay.transform.InferType()(mod)
output = func_7364()
func_7365 = relay.Function([], output)
mutated_mod['func_7365'] = func_7365
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7384 = relay.var("var_7384", dtype = "int16", shape = (3, 11, 13))#candidate|7384|(3, 11, 13)|var|int16
var_7385 = relay.var("var_7385", dtype = "int16", shape = (3, 11, 13))#candidate|7385|(3, 11, 13)|var|int16
bop_7386 = relay.left_shift(var_7384.astype('int16'), relay.reshape(var_7385.astype('int16'), relay.shape_of(var_7384))) # shape=(3, 11, 13)
bop_7400 = relay.floor_divide(var_7385.astype('float32'), relay.reshape(bop_7386.astype('float32'), relay.shape_of(var_7385))) # shape=(3, 11, 13)
func_6203_call = mod.get_global_var('func_6203')
func_6205_call = mutated_mod.get_global_var('func_6205')
call_7410 = func_6203_call()
call_7411 = func_6203_call()
func_5680_call = mod.get_global_var('func_5680')
func_5682_call = mutated_mod.get_global_var('func_5682')
var_7414 = relay.var("var_7414", dtype = "uint8", shape = ())#candidate|7414|()|var|uint8
call_7413 = relay.TupleGetItem(func_5680_call(relay.reshape(var_7414.astype('uint8'), [])), 2)
call_7415 = relay.TupleGetItem(func_5682_call(relay.reshape(var_7414.astype('uint8'), [])), 2)
output = relay.Tuple([bop_7400,call_7410,call_7413,var_7414,])
output2 = relay.Tuple([bop_7400,call_7411,call_7415,var_7414,])
func_7426 = relay.Function([var_7384,var_7385,var_7414,], output)
mod['func_7426'] = func_7426
mod = relay.transform.InferType()(mod)
var_7427 = relay.var("var_7427", dtype = "int16", shape = (3, 11, 13))#candidate|7427|(3, 11, 13)|var|int16
var_7428 = relay.var("var_7428", dtype = "int16", shape = (3, 11, 13))#candidate|7428|(3, 11, 13)|var|int16
var_7429 = relay.var("var_7429", dtype = "uint8", shape = ())#candidate|7429|()|var|uint8
output = func_7426(var_7427,var_7428,var_7429,)
func_7430 = relay.Function([var_7427,var_7428,var_7429,], output)
mutated_mod['func_7430'] = func_7430
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6674_call = mod.get_global_var('func_6674')
func_6675_call = mutated_mod.get_global_var('func_6675')
call_7439 = relay.TupleGetItem(func_6674_call(), 0)
call_7440 = relay.TupleGetItem(func_6675_call(), 0)
output = call_7439
output2 = call_7440
func_7441 = relay.Function([], output)
mod['func_7441'] = func_7441
mod = relay.transform.InferType()(mod)
output = func_7441()
func_7442 = relay.Function([], output)
mutated_mod['func_7442'] = func_7442
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5631_call = mod.get_global_var('func_5631')
func_5632_call = mutated_mod.get_global_var('func_5632')
call_7451 = func_5631_call()
call_7452 = func_5631_call()
output = relay.Tuple([call_7451,])
output2 = relay.Tuple([call_7452,])
func_7471 = relay.Function([], output)
mod['func_7471'] = func_7471
mod = relay.transform.InferType()(mod)
mutated_mod['func_7471'] = func_7471
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7471_call = mutated_mod.get_global_var('func_7471')
call_7472 = func_7471_call()
output = call_7472
func_7473 = relay.Function([], output)
mutated_mod['func_7473'] = func_7473
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6186_call = mod.get_global_var('func_6186')
func_6187_call = mutated_mod.get_global_var('func_6187')
call_7517 = func_6186_call()
call_7518 = func_6186_call()
output = relay.Tuple([call_7517,])
output2 = relay.Tuple([call_7518,])
func_7539 = relay.Function([], output)
mod['func_7539'] = func_7539
mod = relay.transform.InferType()(mod)
output = func_7539()
func_7540 = relay.Function([], output)
mutated_mod['func_7540'] = func_7540
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6878_call = mod.get_global_var('func_6878')
func_6879_call = mutated_mod.get_global_var('func_6879')
call_7598 = relay.TupleGetItem(func_6878_call(), 0)
call_7599 = relay.TupleGetItem(func_6879_call(), 0)
output = relay.Tuple([call_7598,])
output2 = relay.Tuple([call_7599,])
func_7602 = relay.Function([], output)
mod['func_7602'] = func_7602
mod = relay.transform.InferType()(mod)
output = func_7602()
func_7603 = relay.Function([], output)
mutated_mod['func_7603'] = func_7603
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7633 = relay.var("var_7633", dtype = "float32", shape = (12, 4, 1))#candidate|7633|(12, 4, 1)|var|float32
var_7634 = relay.var("var_7634", dtype = "float32", shape = (12, 4, 11))#candidate|7634|(12, 4, 11)|var|float32
bop_7635 = relay.divide(var_7633.astype('float32'), var_7634.astype('float32')) # shape=(12, 4, 11)
output = bop_7635
output2 = bop_7635
func_7645 = relay.Function([var_7633,var_7634,], output)
mod['func_7645'] = func_7645
mod = relay.transform.InferType()(mod)
mutated_mod['func_7645'] = func_7645
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7645_call = mutated_mod.get_global_var('func_7645')
var_7647 = relay.var("var_7647", dtype = "float32", shape = (12, 4, 1))#candidate|7647|(12, 4, 1)|var|float32
var_7648 = relay.var("var_7648", dtype = "float32", shape = (12, 4, 11))#candidate|7648|(12, 4, 11)|var|float32
call_7646 = func_7645_call(var_7647,var_7648,)
output = call_7646
func_7649 = relay.Function([var_7647,var_7648,], output)
mutated_mod['func_7649'] = func_7649
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5555_call = mod.get_global_var('func_5555')
func_5556_call = mutated_mod.get_global_var('func_5556')
call_7679 = func_5555_call()
call_7680 = func_5555_call()
const_7702 = relay.const([[[2.483748,9.564655,-8.393455,-1.741918,-8.787927,-8.644407,2.388648,-3.175615,-3.647758,3.506722,-8.488658,-7.079629,-3.461287,8.241911,-7.927905,7.177217],[-9.479377,7.250212,4.176659,5.882462,0.110900,5.270557,0.945619,3.198183,3.802161,7.604048,-5.176713,0.972659,6.461066,6.621757,4.804874,8.196549],[9.195974,-1.931059,3.415885,-3.047681,-4.457433,9.897300,-7.394647,9.227814,1.120659,4.863566,-7.204057,-3.354388,2.683354,4.835144,-9.748188,4.907472],[6.153929,1.727238,4.768010,2.400338,0.654599,0.487499,-6.920861,2.338561,-5.344259,7.876985,9.959699,-6.489042,6.136499,1.024282,9.028629,2.101279],[7.502737,1.430006,8.696482,-9.285783,5.828281,-0.483053,-8.816948,8.946588,-2.777229,8.122783,-2.534858,4.769546,2.537390,3.869622,5.480537,7.743124],[2.927493,0.805543,-0.050946,5.029936,-0.376018,4.261588,-9.132554,1.556421,9.912161,-8.837016,-0.881588,-6.065435,8.330684,-6.398878,-5.687386,1.970662],[-4.764257,-0.342892,-3.545480,-8.509643,2.697151,5.649337,-4.815396,3.794315,8.112181,8.352014,1.004396,4.890162,-4.099394,1.805920,2.398514,-4.708658],[7.938703,-1.034129,1.523021,-4.704156,-7.631067,-3.741097,-3.355886,5.317370,3.529766,-2.474082,-4.285986,5.647977,1.316476,4.866658,5.159371,8.995766],[2.367092,-7.142407,-7.207243,9.432033,-4.673389,-0.592857,2.682085,-4.994014,-7.568138,6.563251,-0.961348,8.864370,1.847655,0.789817,4.817777,-2.138795]],[[-1.529873,1.869299,3.607061,-4.746761,-9.026797,6.857058,-5.671007,-4.158947,-5.258121,7.733524,0.133264,-5.139179,1.542779,0.461207,-7.844068,8.652088],[9.655470,-4.036741,-5.284831,-9.215172,0.024532,-3.292201,-9.221997,-7.194496,6.939939,1.898897,6.352197,5.271566,5.659516,4.238180,-1.690276,4.142765],[7.194637,4.710206,-2.410511,-4.658277,7.021860,3.431732,5.443925,-4.503888,5.896860,8.670065,2.564121,6.575281,-0.327555,2.481030,-4.671598,-8.791083],[-9.134088,7.642425,9.906611,-6.822821,-7.080117,-6.339711,3.039339,-0.363793,7.978168,5.943526,9.789832,7.746518,1.109642,-9.636598,3.882428,6.492807],[-8.181495,-5.329990,-7.295380,-9.462862,-4.523478,5.675071,6.034776,-5.856437,7.048034,-8.662296,2.350847,-4.755747,-5.250394,-3.994958,2.534306,7.313324],[-0.683605,-3.678588,-4.250354,2.430533,7.733634,-4.066922,8.457894,3.079525,7.489215,2.304347,-7.536654,7.441312,-3.373189,-1.003922,-6.393991,-6.093403],[-2.532502,8.969787,3.646686,8.697060,8.610259,-4.922262,6.163404,-7.837249,3.969656,8.073734,4.096119,-3.427776,-7.930799,-5.105252,-8.673561,5.181473],[9.669414,8.486735,8.478264,3.787736,-1.568010,3.207813,-7.012760,-0.596392,6.857082,3.061420,5.109823,3.012294,-7.133281,-7.047595,-1.928101,6.080097],[-7.927741,-6.405909,-5.906381,0.174836,4.079707,-9.263228,-4.896142,4.579890,-4.609556,-6.460560,-1.280336,1.187878,4.730809,4.544532,4.180603,0.210408]],[[6.464889,3.239831,-2.216560,2.167623,-5.435362,1.622496,-9.151816,-6.642032,5.825015,-7.105729,-6.824665,-5.811149,8.938428,0.139848,8.646429,9.713677],[4.129781,-9.451029,8.361545,1.162322,9.446538,-4.144254,-6.013155,-0.958652,7.575407,2.905522,-2.654649,-8.893956,-4.162342,-9.668384,-7.324139,-3.187671],[-1.909773,3.635574,-4.974615,8.305982,5.790086,-7.930483,9.732771,9.143039,3.287810,-2.140294,9.556191,-5.934806,9.466501,1.443424,-7.643977,6.331998],[-2.948982,-1.049296,0.722777,-6.121772,5.220685,-9.020553,7.815368,9.299276,5.836122,-9.191526,-7.777593,-5.930687,7.705062,-6.285694,0.789993,-3.689839],[-8.485002,3.958055,8.044798,0.232380,-8.936595,3.786983,6.142926,-5.579174,-2.259469,8.622354,7.100443,-3.212913,9.439474,-8.760721,-6.185625,-0.446748],[2.440457,3.145329,5.576120,7.669343,-4.455873,7.734327,-0.891115,-6.565900,-9.315079,7.220284,9.597320,-2.613026,-9.027568,-3.340140,-7.971514,-5.678815],[-0.573849,-4.034709,-0.338631,9.700040,-8.082195,-9.811329,-0.195851,4.685090,6.755783,0.097652,5.296419,2.916797,-9.540552,-8.217476,7.001765,5.770171],[-6.626737,7.407287,9.530148,-7.277358,-7.118672,-6.861249,1.261554,3.600859,4.124878,-5.485854,0.747165,-2.350397,0.370523,-7.690323,8.349967,-3.369602],[8.663351,-0.380943,-5.906338,-8.491358,-2.223817,2.473219,-8.209653,-8.647504,9.170466,-8.939697,-8.267768,2.180581,-9.638431,-9.345802,4.417828,5.738321]]], dtype = "float64")#candidate|7702|(3, 9, 16)|const|float64
bop_7703 = relay.floor_divide(call_7679.astype('float64'), const_7702.astype('float64')) # shape=(3, 9, 16)
bop_7706 = relay.floor_divide(call_7680.astype('float64'), const_7702.astype('float64')) # shape=(3, 9, 16)
uop_7717 = relay.tan(bop_7703.astype('float64')) # shape=(3, 9, 16)
uop_7719 = relay.tan(bop_7706.astype('float64')) # shape=(3, 9, 16)
output = relay.Tuple([uop_7717,])
output2 = relay.Tuple([uop_7719,])
func_7722 = relay.Function([], output)
mod['func_7722'] = func_7722
mod = relay.transform.InferType()(mod)
output = func_7722()
func_7723 = relay.Function([], output)
mutated_mod['func_7723'] = func_7723
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7762 = relay.var("var_7762", dtype = "float32", shape = (7, 15, 1))#candidate|7762|(7, 15, 1)|var|float32
uop_7763 = relay.sqrt(var_7762.astype('float32')) # shape=(7, 15, 1)
output = uop_7763
output2 = uop_7763
func_7770 = relay.Function([var_7762,], output)
mod['func_7770'] = func_7770
mod = relay.transform.InferType()(mod)
mutated_mod['func_7770'] = func_7770
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7771 = relay.var("var_7771", dtype = "float32", shape = (7, 15, 1))#candidate|7771|(7, 15, 1)|var|float32
func_7770_call = mutated_mod.get_global_var('func_7770')
call_7772 = func_7770_call(var_7771)
output = call_7772
func_7773 = relay.Function([var_7771], output)
mutated_mod['func_7773'] = func_7773
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5843_call = mod.get_global_var('func_5843')
func_5845_call = mutated_mod.get_global_var('func_5845')
call_7783 = func_5843_call()
call_7784 = func_5843_call()
output = call_7783
output2 = call_7784
func_7787 = relay.Function([], output)
mod['func_7787'] = func_7787
mod = relay.transform.InferType()(mod)
output = func_7787()
func_7788 = relay.Function([], output)
mutated_mod['func_7788'] = func_7788
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5577_call = mod.get_global_var('func_5577')
func_5579_call = mutated_mod.get_global_var('func_5579')
call_7853 = relay.TupleGetItem(func_5577_call(), 0)
call_7854 = relay.TupleGetItem(func_5579_call(), 0)
output = relay.Tuple([call_7853,])
output2 = relay.Tuple([call_7854,])
func_7872 = relay.Function([], output)
mod['func_7872'] = func_7872
mod = relay.transform.InferType()(mod)
output = func_7872()
func_7873 = relay.Function([], output)
mutated_mod['func_7873'] = func_7873
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7602_call = mod.get_global_var('func_7602')
func_7603_call = mutated_mod.get_global_var('func_7603')
call_7884 = relay.TupleGetItem(func_7602_call(), 0)
call_7885 = relay.TupleGetItem(func_7603_call(), 0)
func_363_call = mod.get_global_var('func_363')
func_366_call = mutated_mod.get_global_var('func_366')
var_7887 = relay.var("var_7887", dtype = "float64", shape = (576,))#candidate|7887|(576,)|var|float64
call_7886 = relay.TupleGetItem(func_363_call(relay.reshape(var_7887.astype('float64'), [16, 9, 4])), 0)
call_7888 = relay.TupleGetItem(func_366_call(relay.reshape(var_7887.astype('float64'), [16, 9, 4])), 0)
output = relay.Tuple([call_7884,call_7886,var_7887,])
output2 = relay.Tuple([call_7885,call_7888,var_7887,])
func_7899 = relay.Function([var_7887,], output)
mod['func_7899'] = func_7899
mod = relay.transform.InferType()(mod)
mutated_mod['func_7899'] = func_7899
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7900 = relay.var("var_7900", dtype = "float64", shape = (576,))#candidate|7900|(576,)|var|float64
func_7899_call = mutated_mod.get_global_var('func_7899')
call_7901 = func_7899_call(var_7900)
output = call_7901
func_7902 = relay.Function([var_7900], output)
mutated_mod['func_7902'] = func_7902
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5843_call = mod.get_global_var('func_5843')
func_5845_call = mutated_mod.get_global_var('func_5845')
call_7904 = func_5843_call()
call_7905 = func_5843_call()
uop_7912 = relay.sin(call_7904.astype('float32')) # shape=(1, 9, 16)
uop_7914 = relay.sin(call_7905.astype('float32')) # shape=(1, 9, 16)
output = uop_7912
output2 = uop_7914
func_7918 = relay.Function([], output)
mod['func_7918'] = func_7918
mod = relay.transform.InferType()(mod)
output = func_7918()
func_7919 = relay.Function([], output)
mutated_mod['func_7919'] = func_7919
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7441_call = mod.get_global_var('func_7441')
func_7442_call = mutated_mod.get_global_var('func_7442')
call_7986 = func_7441_call()
call_7987 = func_7441_call()
func_2443_call = mod.get_global_var('func_2443')
func_2445_call = mutated_mod.get_global_var('func_2445')
const_8005 = relay.const([-3.348715,-9.298535,-9.842935,-3.284079,-0.061069,0.051190,2.954256,3.797649,1.549006,-0.638603,-7.565792,2.815559,3.158290,-5.758137,4.131386,0.001779,5.469439,3.972524,9.772958,-7.925894,-0.847231,-5.460961,5.817746,-7.708617,-5.508664,5.043834,2.116736,-0.380657,1.266730,8.012761,1.049860,-9.585456,-4.227664,-7.847027,2.149439,2.764293,-7.442787,-5.064355,0.026172,-0.041673,4.948815,-8.403231,-6.085028,0.564134,0.089668,3.333740,9.770633,1.976994,5.794960,7.458922,8.360433,-5.526398,-0.663352,3.293956,2.893733,-5.929111,5.100787,-9.785915,9.431058,-6.731654,-3.888364,4.018524,5.271794,-2.334954,-4.446388,-0.886171,-8.559533,1.533144,0.086821,9.858807,-0.190821,1.756181,-1.067612,-1.782442,7.196232,8.304052,-1.880459,9.240448,4.868747,-5.745655,-9.736383,2.017162,-7.829227,9.764284,-2.156543,-6.889597,-0.242650,-9.571792,0.761026,0.438781,2.819138,2.398419,8.173254,-3.819612,-2.669002,3.868385,5.410128,1.069891,6.647075,9.782535,8.456513,2.533327,1.895233,9.211293,-5.112318,4.111209,0.686707,0.758851,2.954230,2.822518,-3.474620,-5.125279,-8.051698,6.508546,9.421965,0.065610,3.298299,-2.520859,-9.621652,5.397984,-3.273606,4.274166,4.554372,3.717311,-4.707223,-6.264325,5.145816,-4.968536,8.639824,3.373075,-7.225346,9.403555,2.544600,-5.967287,6.304890,-6.213393,-5.109397,8.842954,-5.227733,-3.693316,-2.926038,-7.553509,-5.711655,9.462669,-0.217934,-0.444207,4.018703,-2.871750,1.987997,-8.892023,6.023538,9.496867,-2.042444,6.386916,6.619476,2.861124,1.250932,3.119768,-0.735216,2.318045,0.253159,5.618427,6.897643,-7.171009,-5.967226,-8.740333,7.425034,0.054976,-8.705873,2.759451,3.796962,5.117139,-4.653793,-3.109348,2.804733,5.675485,3.314200,3.344088,6.473429,2.878289,3.865715,7.830622,3.784805,-3.912232,1.488593,0.918512,6.904373,2.696415,5.572267,-1.824007,9.502882,-7.435774,3.254769,-2.051130,9.323311,-8.646782,0.722864,6.395524,8.271480,-6.901715,8.598959,1.210008,2.162379,-7.761192,-6.624687,6.903294,7.841873,-8.136840,-2.328011,4.469152,-5.591757,-5.350724,2.542758,9.885734,1.581874,7.539055,4.825919,2.899274,-6.044226,-3.452832,9.923773,-8.059746,8.893012,5.032460,7.470919,1.023987,-9.233102,8.459471,0.648195,-9.983254,0.234590,-1.031818,-4.540072,9.274336,0.422153,3.764777,4.633102,2.666942,-7.835769,-9.248659,3.868121,-8.473497,1.116061,2.292481,-5.415381,-5.769891,-4.848674,-8.528608,-5.711833,1.555940,5.152878,-0.680940,-6.123351,5.475088,-9.674967,3.366862,5.929514,-6.766270,0.449471,-6.844838,6.589234,3.502064,3.037962,3.751245,0.167382,8.356347,0.877663,-9.659397,-2.242037,8.711891,5.091399,-2.793342,-9.061455,-4.979176,0.910407,7.020027,6.211017,-1.295620,-3.644095,-4.674451,-3.886099,1.915247,-6.174791,4.508362,0.256793,7.634572,6.760398,-6.612946,-6.093602,-4.579176,7.256795,5.830654,-7.598516,0.950834,4.957161,5.134927,0.575548,6.174182,-6.246185,-1.329811,0.834113,-6.744251,-5.062000,-2.723275,6.561162,-0.544656,-4.046961,4.175886,8.793463,-8.062509,1.355204,-3.253490,-3.805518,-4.745142,-4.488216,-4.513168,-4.165379,2.966650,5.752384,-5.943489,-7.545247,5.126756,-4.740731,0.011753,3.924850,-0.694396,6.828729,-9.801004,-8.327353,-6.628730,7.404936,6.837741,-5.826344,-3.116614,-4.301467,-2.175358,1.598679,-5.547923,9.619002,0.797631,1.961478,3.290758,-0.607056,-9.795089,-6.664731,-3.885747,7.157146,8.084256,-3.355158,-2.617771,-9.860996,1.676304,-9.901181,7.925039,1.095224,2.681863,-9.304795,-0.358784,-7.714730,-0.317626,9.413958,-9.109254,-3.206652,-7.672135,-9.961612,3.018999,-7.555072,-1.639011,-4.168739,-4.774192,0.835075,-8.135756,-8.712294,-5.251199,1.174323,9.723046,2.829566,-4.501572,9.127311,-8.534253,8.243123,5.590530,-1.820712,-7.556309,7.541824,5.077579,-4.490785,4.915311,-2.990170,2.439498,-4.791465,-5.575617,9.318125,3.859357,-9.105609,-6.034694,1.747688,3.458056,3.700999,7.564142,-4.215964,1.479761,-8.415730,3.144904,6.579596,6.722229,8.809465,5.140861,-1.841807,7.521768,4.930051,-5.394779,0.457209,-3.018116,7.043324,-4.412573,-7.378666,9.306886,-9.177160,6.596348,5.023025,0.665863,6.990589,4.309630,1.685230,-1.074253,-5.796983,3.181058,-2.990662,8.140351,0.429956,2.751655,2.710954,6.684600,7.632925,0.926088,6.886050,6.528352,-9.982126,-2.028328,8.810912,-5.719534,9.513984,-3.035790,4.389920,4.846639,8.705072,4.861256,0.904642,-6.391865,7.741028,-2.897843,-3.405936,1.768267,-9.395086,-6.935819,-9.031259,-0.824065,-4.317027,3.466375,-3.318497,1.325279,7.521241,-7.620930,6.947499,2.568720,7.158181,1.771289,7.588597,-2.739335,-9.414470,-5.042450,0.850246,-5.210997,2.988115,7.312105,-1.983037,1.197615,5.812550,5.777981,-7.013981,-0.809471,-6.106776,2.873940,-2.110572,3.634334,-4.850862,-8.615100,-3.785618,2.747180,-0.026397,8.744786,6.269154,2.188611,0.817344,2.493214,2.354038,2.717659,6.554639,-3.601597,-1.919763,-8.678105,7.474720,-6.576142,7.527456,9.966774,-5.471676,7.431146,2.520138,4.395622,0.106188,-4.657859,-1.507458,-6.426127,-4.604558,2.306417,-7.800205,2.425120,-6.911974,-4.230063,4.824195,-1.451309,-2.518242,-4.922505,-4.555482,-0.103120,-7.233273,-0.876373,-2.565639,4.765131,0.121931,6.890620,-4.956921,3.652333,-9.551145,4.521308,4.121742,-5.274605,3.012510,0.994980,-6.570786,9.095885,-8.850184,9.880689,-4.554305,8.369744,3.172910,1.985882,3.736342,4.153592,-9.274120,-1.224429,-4.856627,-7.881215,9.903419,2.552179,4.368496,-0.851532,-6.832120,1.357511,-6.210032,6.498874,2.533706,-3.020659,1.890191,2.632291,-0.253103,-7.225550,-1.115319,-1.018409,-5.125322,6.437923,-2.310533,-7.911110,2.012968,1.872524,-6.988389,4.457412,1.996635,4.016378,7.718352,9.364821,-0.057935,-1.751706,-7.938232,-7.080064,-8.723183,-1.521046,1.612748,-6.331052,-5.965787,5.154390,-9.799272,6.418945,-1.516118,-1.136909,4.179704,4.615790,7.539494,-3.974809,-6.811072,2.571183,-2.590298,3.044351,-0.885663,-4.556822,8.560145,2.552973,-6.410101,4.557434,0.670046,2.611764,4.435247,-2.077296,-8.131336,-8.393252,7.321736,-7.987777,-0.855023,-7.271662,4.384284,3.357128,-2.291082,-1.645711,7.644293,2.197082,7.441555,7.704414,1.924401,-4.766071,-8.578537,-1.046959,-3.215481,8.174257,-2.042220,4.153135,-9.446070,-2.326109,7.823469,-9.186829,-7.787491,-8.828519,-9.650065,1.184679,1.204818,1.213542,-8.736910,-6.702888,-5.033599,6.900863,8.550734,-8.540526,-0.141411,-8.209215,3.869131,-3.954562,-0.562001,-3.055536,5.348530,-8.222012,8.996148,-4.420029,3.018650,-0.374041,9.945628,-4.635396,-2.994557,-0.856013,6.785495,-4.439048,0.602921,-5.828528,1.221555,-3.003089,-8.740789,-6.484556,6.906944,-1.809423,8.886129,-3.859206,-5.287219,2.223642,-5.960462,0.139997,-1.210549,-7.223136,4.363416,7.529966,8.789356,0.722062,-4.735912,0.688721,-0.585938,-1.778455,-6.143103,-2.036550,8.750124,1.957999,-5.903904,4.990864,3.573569,-1.725432,-2.237071,2.179884,-6.245539,-5.576325,-1.030978,-1.117756,7.066384,-7.168998,6.736442,-8.160540,-6.098256,-5.464074,7.060943,9.374058,-1.565921,6.158421,3.473067,-8.487104], dtype = "float32")#candidate|8005|(720,)|const|float32
call_8004 = func_2443_call(relay.reshape(const_8005.astype('float32'), [6, 8, 15]))
call_8006 = func_2443_call(relay.reshape(const_8005.astype('float32'), [6, 8, 15]))
func_7602_call = mod.get_global_var('func_7602')
func_7603_call = mutated_mod.get_global_var('func_7603')
call_8023 = relay.TupleGetItem(func_7602_call(), 0)
call_8024 = relay.TupleGetItem(func_7603_call(), 0)
func_5767_call = mod.get_global_var('func_5767')
func_5768_call = mutated_mod.get_global_var('func_5768')
call_8027 = func_5767_call()
call_8028 = func_5767_call()
func_5631_call = mod.get_global_var('func_5631')
func_5632_call = mutated_mod.get_global_var('func_5632')
call_8036 = func_5631_call()
call_8037 = func_5631_call()
var_8041 = relay.var("var_8041", dtype = "float32", shape = (6, 8, 15))#candidate|8041|(6, 8, 15)|var|float32
bop_8042 = relay.greater_equal(call_8004.astype('bool'), relay.reshape(var_8041.astype('bool'), relay.shape_of(call_8004))) # shape=(6, 8, 15)
bop_8045 = relay.greater_equal(call_8006.astype('bool'), relay.reshape(var_8041.astype('bool'), relay.shape_of(call_8006))) # shape=(6, 8, 15)
func_5555_call = mod.get_global_var('func_5555')
func_5556_call = mutated_mod.get_global_var('func_5556')
call_8060 = func_5555_call()
call_8061 = func_5555_call()
uop_8062 = relay.asin(call_7986.astype('float32')) # shape=(1, 9, 16)
uop_8064 = relay.asin(call_7987.astype('float32')) # shape=(1, 9, 16)
func_5344_call = mod.get_global_var('func_5344')
func_5346_call = mutated_mod.get_global_var('func_5346')
const_8072 = relay.const([10,-10,-4,-7,-4,-8,-7,3,4,10,8,10,-1,5,6,1,8,6,-8,4,-3,4,-9,3,-6,-3,-10,-8,-3,-6,2,4,1,-2,4,-2,-10,6,-5,3,3,-4,8,1,6,10,-7,10,8,-6,9,1,6,9,6,1,-9,-2,10,8,-3,7,-7,-9,-8,7,-4,-7,4,10,-9,1,9,-6,-7,6,-5,1,8,6,4,3,10,6,7,5,-8,-7,10,-7,-8,-6,-4,6,4,9,-3,-5,6,8,9,3,-10,6,2,6,4,4,8,3,-9,-9,9,-7,5,-10,9,-2,2,8,9,5,-5,-5,-8,-4,-1,1,-6,4,-4,-6,8,3,-3,-3,4,-8,-6,9,-1,10,5,-3,10,10,4,8,-3,-1,1,-1,-1,-1,3,-8,4,-8,9,-7,1,-6,5,-4,-4,-5,8,-9,6,-5,-3,-5,2,3,-5,2,-10,-8,2,-5,6,5,-7,-2,-6,4,-1,-6,2,-6,-10,4,7,-6,5,-9,-3,-6,9,-3,-8,-6,-8,4,2,1,-8,-5,-9,6,-4,7,-7,8,-5,-3,-10,4,1,-7,7,6,-3,10,2,7,9,3,-1,4,-2,10,5,-9,1,-1,6,-4,10,2,-10,-8,-3,8,4,9,-8,7,3,4,-5,-4,4,-1,-4,6,10,-4,7,-6,-4,6,-5,9,-2,-4,10,8,-6,8,-2,3,-10,-6,10,9,-8,-10,-9,-3,-2,10,2,5,6,9,8,9,-10,-5,8,6,9,1,5,-1,-10,10,-8,2,-8,2,-5,-2,-8,7,10,-4,-9,9,10,2,2,3,-7,-3,-8,-9,-8,7,-9,-1,-8,-8,-1,-3,-8,10,7,9,10,6,-9,-10,7,2,-4,5,-10,-10,-9,-4,8,-4,-9,8,6,-7,1,1,-7,-4,-8,4,1,2,9,-6,2,-3,-4,2,6,-7,7,5,-1,-6,9,10,5,3,-8,10,-10,2,-5,5,6,-8,-10,-8,5,3,-3,5,4,2,8,3,7,3,-2,5,2,2,8,4,-3,7,-9,5,-2,-7,-9,8,8,9,-10,9,-10,4,10,-1,-5,10,-1,-9,-10,-3,5,-6,-3,-4,-3,-6,1,-1,10,-3,-10,-10,7,-6,-4,-7,-2,-3,-2,-9,7,6,-7,-8,-8,-3,3,9,-5,-7,6,9,9,-3,10,-5,-9,-6,9,5,-6,-6,-4,-8,-2,7,1,7,9,-2,-4,-5,-8,-9,-4,6,3,-8,9,-3,3,2,-5,5,-9,-2,-3,-7,-7,-10,1,10,8,-10,-3,9,-4,-9,7,4,10,2,2,-4,6,-9,-10,2,6,-4,-6,7,1,8,2,8,7,-5,7,-7,3,-1,-6,10,4,2,-4,-9,-5,-7,-8,-8,4,3,5,6,7,-3,-8,-4,-7,-2,5,8,-8,-8,-9,-1,-2,-6,-6,6,-10,8,-2,-2,-1,1,-8,8,3,2,2,9,-10,2,-9,-1,7,-9,-2,-9,-9,-6,9,-1,-10,6,-8,8,2,-4,-8,10,-4,6,3,-6,-6,-7,6,7,3,-2,10,1,-9,1,-9,3,-1,7,4,4,6,5,3,2,5,9,3,7,4,-9,10,-6,3,-5,-9,-9,2,10,5,-1,5,6,-9,-10,-3,-6,3,4,-7,2,-9,4,-4,9,8,10,2,-3,-10,-4,4,-6,3,-10,10,-10,-5,-2,-9,-6,3,-10,3,7,-6,6,2,6,1,-8,10,-10,2,-1,3,8,5,-2,-3,2,10,1,8,-7,-3,-8,3,-7,-9,6,8,-1,-1,-1,-2,4,-9,-5,-10,5,-9,8,2,7,-4,7,-6,-2,1,-9,-6,-8,10,9,-8,-5,9,9,7,-3,8,2,8,10,9,4,-4,8,6,4,-4,-10,-2,-4,-4,1,-9,-5,9,8,-7,-3,7,-5,-1,-8,9,7,5,-2,8,-3,6,-4,5,5,8,-3,1,9,-6,-6,3,6,-5,-8,-2,10,1,5,9,8,-9,-2,8,2,-6,-10,-4,-8,-7,-1,-7,8,-8,4,4,3,-2,4,6,-5,-4,1,1,6,6,-6,-2,-3,-9,6,-10,7,-5,3,4,-4,-10,8,-6,1,4,7,4,-4,10,6,-2,3,1,9,-3,-4,7,6,6,5,7,-6,3,-3,2,2,-10,1,2,-7,-2,8,2,-3,3,10,2,-2,8,8,3,-5,-7,-4,-6,-4,1,10,-7,-6,2,4,-4,7,-10,-3,4,-7,6,-10,4,3,-5,3,-5,-6,-6,9,5,-3,2,1,6,9,-1,4,-2,-3,9,2,-4,9,9,8,-5,-10,-7,-2,-8,4,-9,-7,7,-9,3,-8,-10,-4,4,-4,5,3,6,6,8,5,10,2,9,4,3,-10,-9,-3,-8,-2,-2,8,2,-3,-6,2,10,3,-5,5,1,2,-10,2,1,-3,-9,-10,5,-5,-2,8,1,3,-10,-4,4,10,-3,1,6,-9,-7,8,-4,4,10,-10,-3,6,3,-4,-8,-8,7,-8,-5,8,8,3,-8,8,7,8,-4,3,6,4,-2,-4,-4,-1,-9,-1,4,-9,-1,4,-8,9,-9,-9,2,7,-6,4,-5,-8,-4,3,3,4,-2,3,1,2,-6,2,-2,3,-2,-7,2,5,-4,-3,2,-4,-4,-4,9,-4,5,-5,7,-7,7,-9,-9,2,-1,-4,-4,7,3,4,7,1,6,-1,5,3,9,-8,4,-4,7,-10,-4,9,-6,3,1,-5,1,-9,3,-6,-3,3,-8,-4,4,-6,-9,-10,-7,10,7,6,-3,-4,-8,1,9,-9,-10,10,5,6,2,-2,-9,1,-10,-3,2,1,10,-1,5,-3,-1,3,-10,1,-3,3,7,-9,8,2,-1,-2,-7,9,-3,9,7,9,10,-1,4,6,-7,8,9,7,-5,1,4,-3,4,8,-5,3,10,2,-8,-7,5,2,7,4,-10,3,-6,-10,2,4,-8,5,-10,4,-7,-5,-8,6,8,-1,-4,-4,-3,-1,-4,-2,-3,-2,4,-3,9,-5,8,-6,1,7,-2,-8,-7,9,7,4,10,2,-4,-7,6,-9,3,-9,1,-2,6,9,2,-5,-1,6,8,7,7,-2,8,-5,9,5,-1,4,-8,3,2,6,10,7,4,-8,2,1,-3,8,2,1,-2,-3,9,8,-7,-5,10,2,9,-2,2,-10,-2,9,4,9,7,4,-9,7,1,-2,-7,-3,-6,7,10,5,6,4,-5,3,7,8,-4,-2,1,5,8,-2,5,-2,-7,-5,-10,10,-5,7,-4,8,4,-2,5,10,-7,10,4,-7,1,-3,-4,-8,9,9,-4,1,8,-2,-1,10,7,-10,-4,-3,8,7,2,-10,-5,-6,7,-9,-9,10,5,7,-10,6,-1,-10,-6,2,-4,-3,-3,-2,-4,-5,-1,-2,5,-10,-6,10,5,8,-6,-3,5,1,-3,-8,3,-10,8,-3,-3,9,-9,-7,-6,-8,-7,5,7,10,1,8,1,8,-2,-4,6,-4,-2,-9,-6,-3,10,-7,-5,6,6,10,2,9,-1,-8,-8,-1,-3,-1,7,-4,-3,3,-7,-4,3,-10,-3,10,2,10,2,10,-10,-6,6,-6,-8,-7,-8,-10,6,-7,-9,-3,-4,-2,-4,4,5,5,-10,10,-9,-5,-1,-9,4,-8,-2,-5,5,5,-10,-5,8,6,-10,6,-5,-10,5,-3,-7,4,-3,-8,-6,10,-1,-3,-5,-7,-7,-8,-5,1,10,-10,7,6,3,-8,4,-7,3,4,-10,6,-5,2,-3,-1,-8,-9,5,5,-7,8,-1,6,6,-5,-2,-8,5,8,-4,10,10,-5,3,4,2,-3,7,-10,-1,1,-6,-2,-8,9,-9,-4,-8,-3,-8,3,9,7,-5,-10,2,2,2,-8,-4,4,6,2,6,5,4,-8,-3,-8,-1,-7,-2,10,-2,-6,-5,-10,8,-5,9,10,7,4,-10,2,-5,-6,-7,2,-7,8,9,-3,1,-1,7,2,9,5,2,-3,-6,5,5,3,-8,-4,-8,-3,-4,-9,-6,-4,-1,-6,-6,-2,-8,-6,-6,5,-9,-8,7,-7,-6,1,-9,8,-5,3,-3,-6,1,4,-10,-1,9,9,1,-6,-2,2,3,1,6,3,-10,10,10,1,4,-2,-9,8,5,-8,2,-10,10,7,7,5,9,-1,1,1,-1,-10,-4,-2,-4,-7,2,3,9,8,-10,-3,10,7,5,-9,-1,-9,-7,3,3,8,-5,9,-3,-2,-2,3,1,3,8,-4,-9,5,4,-7,-7,-6,8,-10,2,5,7,4,-5,-5,9,5,10,5,-9,-5,-7,-3,-6,-5,3,10,5,-9,3,7,-3,3,2,1,2,8,-7,-4,3,9,9,-7,5,9,2,-1,6,-10,2,10,7,3,10,-7,1,9,9,-6,-6,2,1,-4,-9,-7,-6,-7,8,9,1,1,5,-2,9,-9,-5,2,-6,2,1,-8,-8,-9,7,6,-5,-10,8,3,9,10,-4,-9,9,8,3,-4,-3,9,3,7,-2,-6,-8,6,2,-1,-10,-7,-2,-6,10,-5,-5,2,10,3,8,-2,10,-4,-6,9,3,-5,-2,1,-3,7,-3,-5,10,-4,-1,3,-6,6,-1,-10,-2,1,-7,5,1,7,1,-6,4,-9,10,-6,10,10,6,8,-6,1,-3,3,-6,-7,-4,8,-5,-3,-9,-1,1,-10,3,7,7,3,2,-2,-8,-7,-2,-2,-4,-1,-4,-1,4,-5,9,6,-10,6,5,-2,8,5,6,8,2,2,2,2,7,4,-9,-4,9,1,-1,-9,4,-1,-1,10,-6,9,6,-5,1,10,10,-1,7,7,4,-7,7,-9,-4,-4,-1,-10,8,-3,7,-1,9,-9,3,-4,-9,-7,8,-7,-5,5], dtype = "uint64")#candidate|8072|(1872,)|const|uint64
call_8071 = relay.TupleGetItem(func_5344_call(relay.reshape(const_8072.astype('uint64'), [16, 13, 9])), 0)
call_8073 = relay.TupleGetItem(func_5346_call(relay.reshape(const_8072.astype('uint64'), [16, 13, 9])), 0)
bop_8084 = relay.left_shift(call_8071.astype('uint16'), relay.reshape(const_8072.astype('uint16'), relay.shape_of(call_8071))) # shape=(16, 13, 9)
bop_8087 = relay.left_shift(call_8073.astype('uint16'), relay.reshape(const_8072.astype('uint16'), relay.shape_of(call_8073))) # shape=(16, 13, 9)
output = relay.Tuple([const_8005,call_8023,call_8027,call_8036,bop_8042,call_8060,uop_8062,bop_8084,])
output2 = relay.Tuple([const_8005,call_8024,call_8028,call_8037,bop_8045,call_8061,uop_8064,bop_8087,])
func_8092 = relay.Function([var_8041,], output)
mod['func_8092'] = func_8092
mod = relay.transform.InferType()(mod)
mutated_mod['func_8092'] = func_8092
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8093 = relay.var("var_8093", dtype = "float32", shape = (6, 8, 15))#candidate|8093|(6, 8, 15)|var|float32
func_8092_call = mutated_mod.get_global_var('func_8092')
call_8094 = func_8092_call(var_8093)
output = call_8094
func_8095 = relay.Function([var_8093], output)
mutated_mod['func_8095'] = func_8095
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5742_call = mod.get_global_var('func_5742')
func_5744_call = mutated_mod.get_global_var('func_5744')
call_8100 = func_5742_call()
call_8101 = func_5742_call()
output = relay.Tuple([call_8100,])
output2 = relay.Tuple([call_8101,])
func_8115 = relay.Function([], output)
mod['func_8115'] = func_8115
mod = relay.transform.InferType()(mod)
mutated_mod['func_8115'] = func_8115
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8115_call = mutated_mod.get_global_var('func_8115')
call_8116 = func_8115_call()
output = call_8116
func_8117 = relay.Function([], output)
mutated_mod['func_8117'] = func_8117
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7539_call = mod.get_global_var('func_7539')
func_7540_call = mutated_mod.get_global_var('func_7540')
call_8148 = relay.TupleGetItem(func_7539_call(), 0)
call_8149 = relay.TupleGetItem(func_7540_call(), 0)
const_8150 = relay.constdtype = "float64")#candidate|8150|(13, 9, 16)|const|float64
bop_8151 = relay.bitwise_and(call_8148.astype('int16'), const_8150.astype('int16')) # shape=(13, 9, 16)
bop_8154 = relay.bitwise_and(call_8149.astype('int16'), const_8150.astype('int16')) # shape=(13, 9, 16)
output = bop_8151
output2 = bop_8154
func_8157 = relay.Function([], output)
mod['func_8157'] = func_8157
mod = relay.transform.InferType()(mod)
output = func_8157()
func_8158 = relay.Function([], output)
mutated_mod['func_8158'] = func_8158
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6203_call = mod.get_global_var('func_6203')
func_6205_call = mutated_mod.get_global_var('func_6205')
call_8217 = func_6203_call()
call_8218 = func_6203_call()
func_5723_call = mod.get_global_var('func_5723')
func_5727_call = mutated_mod.get_global_var('func_5727')
var_8221 = relay.var("var_8221", dtype = "uint64", shape = (182,))#candidate|8221|(182,)|var|uint64
var_8222 = relay.var("var_8222", dtype = "uint8", shape = ())#candidate|8222|()|var|uint8
const_8223 = relay.const([-10,4,-6,-10,6,1,-1,-2,-8,-8,-4,-10,8,1,-8,-8,-3,2,9,-10,5,6,-10,2,-9,8,3,2,-7,7,-1,-4,9,4,7,5,-5,-8,1,-5,-2,4,1,7,8,3,-10,4,4,-9,3,-5,-5,5,2,-8,5,2,-7,5,-4,5,-7,3,-8,-2,-6,-9,-9,9,-8,-8,9,10,10,1,6,-9,-4,4,-3,-3,3,-10,-8,-4,5,9,1,-10,-7,-6,-9,-7,7,7,10,-1,-3,5,-1,8,-10,-2,8,-5,-4,-1,-8,-10,-10,7,8,-2,2,-2,8,-10,9,-1,-5,4,-9,-4,3,-4,-10,2,-10,7,-4,4,1,10,8,-6,10,-2,-7,10,10,-5,-6,8,-3,-9,-8,-7,-8,6,8,9,-4,-1,-9,10,-4,2,4,-7,9,-2,-10,3,-5], dtype = "uint8")#candidate|8223|(165,)|const|uint8
call_8220 = relay.TupleGetItem(func_5723_call(relay.reshape(var_8221.astype('uint64'), [182,]), relay.reshape(var_8222.astype('uint8'), []), relay.reshape(const_8223.astype('uint8'), [165,]), ), 3)
call_8224 = relay.TupleGetItem(func_5727_call(relay.reshape(var_8221.astype('uint64'), [182,]), relay.reshape(var_8222.astype('uint8'), []), relay.reshape(const_8223.astype('uint8'), [165,]), ), 3)
output = relay.Tuple([call_8217,call_8220,var_8221,var_8222,const_8223,])
output2 = relay.Tuple([call_8218,call_8224,var_8221,var_8222,const_8223,])
func_8237 = relay.Function([var_8221,var_8222,], output)
mod['func_8237'] = func_8237
mod = relay.transform.InferType()(mod)
var_8238 = relay.var("var_8238", dtype = "uint64", shape = (182,))#candidate|8238|(182,)|var|uint64
var_8239 = relay.var("var_8239", dtype = "uint8", shape = ())#candidate|8239|()|var|uint8
output = func_8237(var_8238,var_8239,)
func_8240 = relay.Function([var_8238,var_8239,], output)
mutated_mod['func_8240'] = func_8240
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7539_call = mod.get_global_var('func_7539')
func_7540_call = mutated_mod.get_global_var('func_7540')
call_8247 = relay.TupleGetItem(func_7539_call(), 0)
call_8248 = relay.TupleGetItem(func_7540_call(), 0)
output = relay.Tuple([call_8247,])
output2 = relay.Tuple([call_8248,])
func_8251 = relay.Function([], output)
mod['func_8251'] = func_8251
mod = relay.transform.InferType()(mod)
output = func_8251()
func_8252 = relay.Function([], output)
mutated_mod['func_8252'] = func_8252
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7364_call = mod.get_global_var('func_7364')
func_7365_call = mutated_mod.get_global_var('func_7365')
call_8277 = relay.TupleGetItem(func_7364_call(), 0)
call_8278 = relay.TupleGetItem(func_7365_call(), 0)
output = relay.Tuple([call_8277,])
output2 = relay.Tuple([call_8278,])
func_8286 = relay.Function([], output)
mod['func_8286'] = func_8286
mod = relay.transform.InferType()(mod)
output = func_8286()
func_8287 = relay.Function([], output)
mutated_mod['func_8287'] = func_8287
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8286_call = mod.get_global_var('func_8286')
func_8287_call = mutated_mod.get_global_var('func_8287')
call_8288 = relay.TupleGetItem(func_8286_call(), 0)
call_8289 = relay.TupleGetItem(func_8287_call(), 0)
output = call_8288
output2 = call_8289
func_8300 = relay.Function([], output)
mod['func_8300'] = func_8300
mod = relay.transform.InferType()(mod)
output = func_8300()
func_8301 = relay.Function([], output)
mutated_mod['func_8301'] = func_8301
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6257_call = mod.get_global_var('func_6257')
func_6259_call = mutated_mod.get_global_var('func_6259')
call_8309 = relay.TupleGetItem(func_6257_call(), 1)
call_8310 = relay.TupleGetItem(func_6259_call(), 1)
var_8322 = relay.var("var_8322", dtype = "float32", shape = (6, 8, 15))#candidate|8322|(6, 8, 15)|var|float32
bop_8323 = relay.equal(call_8309.astype('bool'), relay.reshape(var_8322.astype('bool'), relay.shape_of(call_8309))) # shape=(6, 8, 15)
bop_8326 = relay.equal(call_8310.astype('bool'), relay.reshape(var_8322.astype('bool'), relay.shape_of(call_8310))) # shape=(6, 8, 15)
func_6638_call = mod.get_global_var('func_6638')
func_6641_call = mutated_mod.get_global_var('func_6641')
var_8332 = relay.var("var_8332", dtype = "int32", shape = (448,))#candidate|8332|(448,)|var|int32
var_8333 = relay.var("var_8333", dtype = "float64", shape = (819,))#candidate|8333|(819,)|var|float64
call_8331 = relay.TupleGetItem(func_6638_call(relay.reshape(var_8332.astype('int32'), [448,]), relay.reshape(var_8333.astype('float64'), [819,]), ), 4)
call_8334 = relay.TupleGetItem(func_6641_call(relay.reshape(var_8332.astype('int32'), [448,]), relay.reshape(var_8333.astype('float64'), [819,]), ), 4)
func_3035_call = mod.get_global_var('func_3035')
func_3039_call = mutated_mod.get_global_var('func_3039')
const_8336 = relay.const([-8,-7,-1,4,1,-5,6,-2,1,9,-5,-10,-9,10,4,5,2,-2,-8,5,6,10,-1,8,-4,-4,5,-5,5,-6,1,-5,-5,6,-3,-3,-2,8,5,-5,-3,2,-3,4,-10,-10,-4,-6,2,-2,-4,2,8,-7,-6,-6,3,8,-4,-5,5,-7,-10,5,4,5,-4,2,-8,7,-5,-4,-10,6,7,10,7,-8,-10,-9,2,-2,2,8,-5,6,5,-8,-2,-1,-6,-10,8,-9,1,-3,-1,-9,7,3,-2,3,10,-4,-6,3,8,4,-1,2,-9,7,8,-3,5,10,-8,5,-2,10,8,9,-9,9,6,-2,-8,4,-6,2,6,9,5,-2,6,7,7,7,-9,-4,10,9,-6,4,4,3,10,-4,9,3,7,-7,-6,-8,3,-1,9,-8,6,9,2,10,6,-6,-1,10,9,-2,-2,-1,6,7,-1,-2,-9,-7,-3,-2,4,-5,8,-2,-3,-1,7,-1,3,8,-4,-3,1,3,-10,6,4,-8,9,9,-4,-8,-4,4,6,3,2,3,9,-7,3,-2,5,9,-10,5,-9,-5,-3,-10,2,-8,-1,-8,-1,1,10,-10,3,-10,-8,-7,9,7,2,10,-3,8,1,6,1,-5,3,6,7,-9,1,1,9,-2,7,6,-10,4,8,-3,-9,2,6,-8,-5,7,4,-6,5,-5,-7,2,3,1,6,-4,4,7,-3,-4,-9,-6,8,7,9,-8,2,6,-6,1,-2,-6,-1,8,-5,4,-5,8,-2,9,-6,-10,6,6,-4,3,3,2,-4,8,7,5,2,-7,10,-8,4,-7,-3,-2,1,2,-7,-8,9,8,9,9,-9,-8,2,-5,3,7,-6,-2,4,-1,-10,-10,6,-4,3,8,10,1,1,10,-8,7,-6,1,5,-9,-2,4,8,4,-3,-3,6,7,-10,1,-4,1,9,9,5,-9,-8,-6,-2,10,-3,-10,-7,-8,4,4,-8,-7,7,1], dtype = "int16")#candidate|8336|(378,)|const|int16
const_8337 = relay.const([5.468894,-9.825821,-4.413646,-2.694901,9.908790,6.687868,9.296427,4.249696,5.942838,3.563778,9.981670,2.312955,8.386278,-4.497020,-9.797962,-7.411071,8.999257,-2.608625,1.754775,8.561467,3.740237,-0.763500,7.407376,2.607052,-3.823248,-2.303932,1.712952,7.749143,4.890807,2.156043,7.761888,2.133901,-0.238493,-7.008767,0.086211,-2.534274,5.180162,4.422013,4.359828,6.563835,0.259029,9.370451,0.878058,2.778925,-4.148314,4.654874,-3.795563,1.036811], dtype = "float64")#candidate|8337|(48,)|const|float64
call_8335 = relay.TupleGetItem(func_3035_call(relay.reshape(const_8336.astype('int16'), [6, 9, 7]), relay.reshape(const_8336.astype('int16'), [6, 9, 7]), relay.reshape(const_8337.astype('float64'), [48,]), ), 1)
call_8338 = relay.TupleGetItem(func_3039_call(relay.reshape(const_8336.astype('int16'), [6, 9, 7]), relay.reshape(const_8336.astype('int16'), [6, 9, 7]), relay.reshape(const_8337.astype('float64'), [48,]), ), 1)
output = relay.Tuple([bop_8323,call_8331,var_8332,var_8333,call_8335,const_8336,const_8337,])
output2 = relay.Tuple([bop_8326,call_8334,var_8332,var_8333,call_8338,const_8336,const_8337,])
func_8340 = relay.Function([var_8322,var_8332,var_8333,], output)
mod['func_8340'] = func_8340
mod = relay.transform.InferType()(mod)
mutated_mod['func_8340'] = func_8340
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8340_call = mutated_mod.get_global_var('func_8340')
var_8342 = relay.var("var_8342", dtype = "float32", shape = (6, 8, 15))#candidate|8342|(6, 8, 15)|var|float32
var_8343 = relay.var("var_8343", dtype = "int32", shape = (448,))#candidate|8343|(448,)|var|int32
var_8344 = relay.var("var_8344", dtype = "float64", shape = (819,))#candidate|8344|(819,)|var|float64
call_8341 = func_8340_call(var_8342,var_8343,var_8344,)
output = call_8341
func_8345 = relay.Function([var_8342,var_8343,var_8344,], output)
mutated_mod['func_8345'] = func_8345
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8362 = relay.const(1.940459, dtype = "float64")#candidate|8362|()|const|float64
var_8363 = relay.var("var_8363", dtype = "float64", shape = (3, 3, 13))#candidate|8363|(3, 3, 13)|var|float64
bop_8364 = relay.power(const_8362.astype('float64'), var_8363.astype('float64')) # shape=(3, 3, 13)
func_1823_call = mod.get_global_var('func_1823')
func_1825_call = mutated_mod.get_global_var('func_1825')
const_8392 = relay.const([0.645719,7.285953,-5.011453,-7.415512,-9.565597,0.443474,-2.129374,-4.875859,-5.200963,-9.331408,9.035388,7.686081,9.641292,-0.759849,-7.739109,7.261272,1.717685,-2.326806,9.234738,-8.866559,-7.772958,9.014670,0.858764,-4.156920,-5.996994,5.137638,-6.674918,-6.205583,-6.436597,8.007171,8.407699,4.315230,4.067804,-4.148760,-7.652600,-4.387221,-7.111016,7.612598,5.974305,1.323193,-8.962971,0.904584,0.603604,-4.356081,-8.814118,-2.285820,-8.329806,-8.706140], dtype = "float64")#candidate|8392|(48,)|const|float64
call_8391 = func_1823_call(relay.reshape(const_8392.astype('float64'), [4, 2, 6]))
call_8393 = func_1823_call(relay.reshape(const_8392.astype('float64'), [4, 2, 6]))
output = relay.Tuple([bop_8364,call_8391,const_8392,])
output2 = relay.Tuple([bop_8364,call_8393,const_8392,])
func_8395 = relay.Function([var_8363,], output)
mod['func_8395'] = func_8395
mod = relay.transform.InferType()(mod)
mutated_mod['func_8395'] = func_8395
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8396 = relay.var("var_8396", dtype = "float64", shape = (3, 3, 13))#candidate|8396|(3, 3, 13)|var|float64
func_8395_call = mutated_mod.get_global_var('func_8395')
call_8397 = func_8395_call(var_8396)
output = call_8397
func_8398 = relay.Function([var_8396], output)
mutated_mod['func_8398'] = func_8398
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8409 = relay.var("var_8409", dtype = "float32", shape = ())#candidate|8409|()|var|float32
var_8410 = relay.var("var_8410", dtype = "float32", shape = (5, 15, 14))#candidate|8410|(5, 15, 14)|var|float32
bop_8411 = relay.mod(var_8409.astype('float32'), var_8410.astype('float32')) # shape=(5, 15, 14)
output = relay.Tuple([bop_8411,])
output2 = relay.Tuple([bop_8411,])
func_8417 = relay.Function([var_8409,var_8410,], output)
mod['func_8417'] = func_8417
mod = relay.transform.InferType()(mod)
mutated_mod['func_8417'] = func_8417
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8417_call = mutated_mod.get_global_var('func_8417')
var_8419 = relay.var("var_8419", dtype = "float32", shape = ())#candidate|8419|()|var|float32
var_8420 = relay.var("var_8420", dtype = "float32", shape = (5, 15, 14))#candidate|8420|(5, 15, 14)|var|float32
call_8418 = func_8417_call(var_8419,var_8420,)
output = call_8418
func_8421 = relay.Function([var_8419,var_8420,], output)
mutated_mod['func_8421'] = func_8421
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7918_call = mod.get_global_var('func_7918')
func_7919_call = mutated_mod.get_global_var('func_7919')
call_8430 = func_7918_call()
call_8431 = func_7918_call()
func_5631_call = mod.get_global_var('func_5631')
func_5632_call = mutated_mod.get_global_var('func_5632')
call_8432 = func_5631_call()
call_8433 = func_5631_call()
output = relay.Tuple([call_8430,call_8432,])
output2 = relay.Tuple([call_8431,call_8433,])
func_8441 = relay.Function([], output)
mod['func_8441'] = func_8441
mod = relay.transform.InferType()(mod)
output = func_8441()
func_8442 = relay.Function([], output)
mutated_mod['func_8442'] = func_8442
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8251_call = mod.get_global_var('func_8251')
func_8252_call = mutated_mod.get_global_var('func_8252')
call_8494 = relay.TupleGetItem(func_8251_call(), 0)
call_8495 = relay.TupleGetItem(func_8252_call(), 0)
func_7471_call = mod.get_global_var('func_7471')
func_7473_call = mutated_mod.get_global_var('func_7473')
call_8524 = relay.TupleGetItem(func_7471_call(), 0)
call_8525 = relay.TupleGetItem(func_7473_call(), 0)
bop_8529 = relay.bitwise_and(call_8494.astype('uint64'), relay.reshape(call_8524.astype('uint64'), relay.shape_of(call_8494))) # shape=(1, 9, 16)
bop_8532 = relay.bitwise_and(call_8495.astype('uint64'), relay.reshape(call_8525.astype('uint64'), relay.shape_of(call_8495))) # shape=(1, 9, 16)
var_8536 = relay.var("var_8536", dtype = "float64", shape = (11, 9, 16))#candidate|8536|(11, 9, 16)|var|float64
bop_8537 = relay.minimum(call_8494.astype('int16'), var_8536.astype('int16')) # shape=(11, 9, 16)
bop_8540 = relay.minimum(call_8495.astype('int16'), var_8536.astype('int16')) # shape=(11, 9, 16)
func_7364_call = mod.get_global_var('func_7364')
func_7365_call = mutated_mod.get_global_var('func_7365')
call_8554 = relay.TupleGetItem(func_7364_call(), 1)
call_8555 = relay.TupleGetItem(func_7365_call(), 1)
func_1421_call = mod.get_global_var('func_1421')
func_1423_call = mutated_mod.get_global_var('func_1423')
const_8559 = relay.const([10,4,8,8,9,-4,-10,8,-5,8,7,-10,3,-6,-8,7,9,-5,-7,4,-9,-1,-3,-8,-1,-10,2,-7,2,5,10,-9,3,7,9,8,-10,-6,9,1,10,8,3,-8,-1,-6,-3,10,-1,6,8,7,-2,-3,6,-2,-9,-8,-8,-7,9,9,-10,-8,8,2,-9,-6,-1,5,-6,2,9,-8,-6,7,-2,-7,-7,-5,2,-1,-8,3,9,-7,-5,10,10,-5,7,-2,-10,1,-8,2,-8,1,1,5,2,-5,-2,-4,-5,1,-3,-10,3,-10,-2,1,5,-3,-3,-6,-2,-3,6,-1,6,-4,6,-2,7,-10,-4,8,10,-6,2,2,-3,-2,-2,-3,-4,9,-4,9,-5,-2,-9,-10,2,3,-10,-9,10,5,2,-4,6,6,-6,-3,1,10,4,8,6,1,8,10,-9,4,2,10,1,9,-1,8,6,4,6,7,7,9,-7,-5,-5,-2,5,6,-9,5,7,-4,9,-4,-1,-8,-10,4,-7,4,8,-8,9,2,1,8,9,1,-1,5,-8,2,4,-5,-7,-3,-4,-7,-7,1,-6,-5,10,-5,5,-2,-6,10,10,-1,4,-1,8,-3,7,-2,2,10,-7,2,-6,4,-9,-2,-10,8,-10,4,7,3,-1,8,6,5,2,3,4,-2,2,3,-10,5,10,-7,7,2,9,-1,-10,6,4,2,9,-10,-9,-4,-6,8,-10,-4,7,3,7,-8,-10,1,-8,-1,-8,-1,-6,5,-5,9,-9,10,-8,-1,9,-6,-6,5,9,-4,-9,-5,9,8,-2,-7,7,-9,2,-3,-9,-2,-5,10,4,-4,-8,-9,-8,1,1,3,7,6,9,-2,10,5,2,-3,9,9,-4,-6,-5,-2,-5,6,-6,1,6,4,-9,3,-4,10,-2,3,-7,-8,-6,-1,-5,2,1,-7,-1,3,1,3,-2,3,2,-10,6,1,8,2,-9,7,2,-9,8,-2,9,6,-8,5,-6,-7,1,-4,-2,-4,-5,-4,-6,7,-6,3,-6,-9,10,2,-7,10,-9,-8,-3,3,-3,4,-10,3,1,5,9,-2,6,-6,-3,10,1,4,-10,1,-3,-5,7,1,8,-7,-10,5,-3,8,7,9,-7,1,9,5,8,-7,9,-5,5,-3,1,10,9,9,9,-2,-10,-6,-9,-4,-2,-4,-10,8,-2,-2,-9,8,-2,1,-6,10,8,-6,-8,3,-1,10,7,9,-9,4,-3,5,9,9,-3,-3,4,9,2,-1,-1,6,-9,9,6,-9,6,-6,-1,2,3,-4,-7,-8,-5,1,10,-5,-2,10,-8,9,-2,-2,-2,-7,-2,-4,4,-5,1,-4,-1,1,-3,-3,9,-6,-7,-1,3,-5,-9,-1,1,3,-1,-2,-7,-8,-5,1,1,2,-6,-8,-3,1,2,-6,-9,2,7,2,10,-4,9,6,5,-9,-2,-9,1,-10,3,3,-6,-1,2,9,-3,6,10,-3,1,5,10,2,-3,2,8,-9,-2,-7,4,-8,-9,-9,8,6,-4,7,-5,3,9,6,-3,-4,-5,-1,9,6,-6,8,6,3,7,2,-9,1,-2,-7,-4,-2,-4,-8,4,10,8,4,-6,-4,9,4,-2,-5,-4,1,-3,-6,10,9,-9,-6,9,-3,-6,-7,-4,2,7,-2,10,-10,-10,10,-2,4,10,-8,-9,-5,7,-2,4,-7,-1,-4,6,-6,2,-6,6,6,1,6,-5,7,-2,3,6,7,-2,-10,6,-3,-3,5,-9,5,4,-2,-2,-3,9,-10,-9,-4,-9,7,10,6,-9,3,1,-9,-9,8,-9,6,8,-5,-3,7,-3,1,-4,-9,9,2,9,-9,-2,10,9,-1,9,3,7,8,-4,-3,8,-3,3,-9,9,-1,-4,-4,4,-9,3,7,-1,10,-3,-6,-5,8,-4,-10,-4,6,1,-10,-7,-8,-2,-10,9,10,3,1,-5,-7,5,-2,10,6,9,-4,6,9,-6,-10,-9,7,6,-9,4,-10,5,7,-1,5,-8,8,-5,-9,-6,-6,-1,4,-10,8,2,4,-9,3,3,-2,8,-4,-7,-6,3,-5,-6,2,5,-9,-8,-4,-3,9,-4,-6,10,-7,-4,-7,4,3,-4,-5,7,-6,8,-3,5,-8,10,-3,-5,-7,-3,8,-8,-7,-8,-3,-6,-1,9,7,4,4,1,-6,8,-7,-8,8,8,10,10,2,-2,-2,6,4,-5,8,8,2,5,-6,-6,1,-2,1,-4,-7,7,7,9,5,-2,1,7,5,-3,-5,7,-3,6,-2,7,7,1,9,-7,-5,7,10,-9,6,-8,-3,8,8,1,4,-1,4,-7,3,7,-5,-4,-10,2,7,8,6,7,10,6,-8,7,9,6,9,10,10,9,-6,-8,2,2,-10,4,7,-3,8,-10,5,-9,-1,-8,-2,3,-1,-9,-6,1,-10,-5,-6,3,-8,1,10,8,10,4,-7,7,9,9,7,-1,-6,3,5,-7,10,8,9,-1,4,-10,6,6,-3,1,6,6,-10,-7,-6,8,2,6,-4,2,-6,-6,8,-6,-9,-3,-10,-9,10,5,-10,-2,1,-6,6,-10,8,3,-9,1,7,-7,2,7,-3,10,5,8,9,-10,3,5,7,-9,8,-8,-3,4,-10,1,-3,-7,-10,-4,-10,-4,-6,6,9,-2,7,-2,3,-8,-6,8,-8,8,3,-7,-8,-6,1,8,9,-7,-7,7,-6,7,-3,-1,-2,-9,1,-8,10,-3,-7,-1,10,1,8,1,2,-5,-3,-6,-5,1,-4,7,2,2,-1,-6,-10,10,6,1,-9,2,1,10,2,4,-8,-7,10,-2,4,-4,6,2,7,-9,-10,-2,-9,-8,2,7,10,-2,5,1,-1,-6,1,8,-1,-8,-8,-1,1,-7,1,4,-8,-4,-10,4,2,-10,-8,-2,-7,-10,-1,1,-2,6,4,7,-4,-7,-5,-8,1,-9,6,7,-4,-8,8,8,10,3,3,6,-10,4,5,2,7,4,7,-7,-8,7,-6,6,-10,-10,1,-2,2,-8,-7,-3,-4,-10,-8,-3,1,2,8,5,-9,2,-2,4,-2,1,3,-6,8,-1,4,-3,-5,-4,5,10,4,-5,-8,-2,-1,10,6,-4,-3,-3,8,-1,2,-5,-5,-10,-9,-9,6,-5,-6,-3,-2,-7,10,9,-7,-1,10,-6,1,5,-5,-6,8,7,10,-4,-5,-5,-2,-4,-9,-8,9,3,1,3,-4,6,2,-6,3,5,3,-4,-6,-4,3,3,5,5,6,2,5,-6,1,-1,3,4,-6,3,-9,7,8,-6,-8,10,7,7,-2,-10,4,9,7,-5,6,-3,4,6,3,-8,-1,8,2,9,-8,-9,2,2,-5,-10,-5,-5,4,5,-3,10,-1,1,4,9,1,-6,8,-2,-5,2,-5,10,-8,9,-8,-7,-7,-4,10,-5,-3,-6,7,4,10,1,-4,-9,4,6,-8], dtype = "int8")#candidate|8559|(1320,)|const|int8
call_8558 = func_1421_call(relay.reshape(const_8559.astype('int8'), [11, 8, 15]))
call_8560 = func_1421_call(relay.reshape(const_8559.astype('int8'), [11, 8, 15]))
output = relay.Tuple([bop_8529,bop_8537,call_8554,call_8558,const_8559,])
output2 = relay.Tuple([bop_8532,bop_8540,call_8555,call_8560,const_8559,])
func_8578 = relay.Function([var_8536,], output)
mod['func_8578'] = func_8578
mod = relay.transform.InferType()(mod)
mutated_mod['func_8578'] = func_8578
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8579 = relay.var("var_8579", dtype = "float64", shape = (11, 9, 16))#candidate|8579|(11, 9, 16)|var|float64
func_8578_call = mutated_mod.get_global_var('func_8578')
call_8580 = func_8578_call(var_8579)
output = call_8580
func_8581 = relay.Function([var_8579], output)
mutated_mod['func_8581'] = func_8581
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7918_call = mod.get_global_var('func_7918')
func_7919_call = mutated_mod.get_global_var('func_7919')
call_8587 = func_7918_call()
call_8588 = func_7918_call()
output = relay.Tuple([call_8587,])
output2 = relay.Tuple([call_8588,])
func_8589 = relay.Function([], output)
mod['func_8589'] = func_8589
mod = relay.transform.InferType()(mod)
mutated_mod['func_8589'] = func_8589
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8589_call = mutated_mod.get_global_var('func_8589')
call_8590 = func_8589_call()
output = call_8590
func_8591 = relay.Function([], output)
mutated_mod['func_8591'] = func_8591
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8251_call = mod.get_global_var('func_8251')
func_8252_call = mutated_mod.get_global_var('func_8252')
call_8607 = relay.TupleGetItem(func_8251_call(), 0)
call_8608 = relay.TupleGetItem(func_8252_call(), 0)
output = call_8607
output2 = call_8608
func_8626 = relay.Function([], output)
mod['func_8626'] = func_8626
mod = relay.transform.InferType()(mod)
mutated_mod['func_8626'] = func_8626
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8626_call = mutated_mod.get_global_var('func_8626')
call_8627 = func_8626_call()
output = call_8627
func_8628 = relay.Function([], output)
mutated_mod['func_8628'] = func_8628
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8286_call = mod.get_global_var('func_8286')
func_8287_call = mutated_mod.get_global_var('func_8287')
call_8741 = relay.TupleGetItem(func_8286_call(), 0)
call_8742 = relay.TupleGetItem(func_8287_call(), 0)
output = relay.Tuple([call_8741,])
output2 = relay.Tuple([call_8742,])
func_8746 = relay.Function([], output)
mod['func_8746'] = func_8746
mod = relay.transform.InferType()(mod)
mutated_mod['func_8746'] = func_8746
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8746_call = mutated_mod.get_global_var('func_8746')
call_8747 = func_8746_call()
output = call_8747
func_8748 = relay.Function([], output)
mutated_mod['func_8748'] = func_8748
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7787_call = mod.get_global_var('func_7787')
func_7788_call = mutated_mod.get_global_var('func_7788')
call_8770 = func_7787_call()
call_8771 = func_7787_call()
func_5742_call = mod.get_global_var('func_5742')
func_5744_call = mutated_mod.get_global_var('func_5744')
call_8785 = func_5742_call()
call_8786 = func_5742_call()
output = relay.Tuple([call_8770,call_8785,])
output2 = relay.Tuple([call_8771,call_8786,])
func_8787 = relay.Function([], output)
mod['func_8787'] = func_8787
mod = relay.transform.InferType()(mod)
mutated_mod['func_8787'] = func_8787
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8787_call = mutated_mod.get_global_var('func_8787')
call_8788 = func_8787_call()
output = call_8788
func_8789 = relay.Function([], output)
mutated_mod['func_8789'] = func_8789
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6674_call = mod.get_global_var('func_6674')
func_6675_call = mutated_mod.get_global_var('func_6675')
call_8848 = relay.TupleGetItem(func_6674_call(), 0)
call_8849 = relay.TupleGetItem(func_6675_call(), 0)
func_7271_call = mod.get_global_var('func_7271')
func_7278_call = mutated_mod.get_global_var('func_7278')
var_8854 = relay.var("var_8854", dtype = "uint8", shape = ())#candidate|8854|()|var|uint8
var_8855 = relay.var("var_8855", dtype = "uint8", shape = (165,))#candidate|8855|(165,)|var|uint8
const_8856 = relay.const([-7,-5,6,2,4,-5,10,9,-7,4,-1,8,-8,8,-4,-6,-4,3,8,-10,-3,7,4,-7,-3,5,-1,-3,5,-8,2,10,-3,-8,10,5,2,-5,6,-7,4,-4,-4,-6,8,-10,8,-6,4,-3,-1,6,-8,8,-4,2,9,-6,3,-6,8,9,7,-8,-1,-5,-9,4,3,-1,10,-8], dtype = "uint32")#candidate|8856|(72,)|const|uint32
const_8857 = relay.const([[2.895453,-0.843975,5.829705,4.872513,2.928206,8.480825,0.213110,3.986271,5.477066,6.771745,-2.225099,-0.046086,-0.615289,-1.637947,3.475302,7.403758],[-2.406149,-0.983230,-7.332142,-6.907190,1.119514,-4.610204,5.322683,-1.988717,5.826544,3.560312,-7.155837,8.373035,0.778719,7.735015,-6.088548,-1.564469],[-0.582562,-5.861032,-5.326931,2.029026,-8.064961,-3.761598,0.635952,-8.489017,6.783874,0.351558,9.932727,-1.815678,-5.074110,9.472993,-9.278873,0.983130],[8.057708,0.050857,7.348565,7.002268,-0.150246,2.831639,-0.288905,-7.467384,3.068413,7.266805,-0.665678,6.249276,0.901487,5.063462,-2.089313,2.490293],[-4.294089,2.173354,8.596463,7.021645,6.569763,3.995624,-2.589206,2.061834,8.761638,9.991792,-9.016359,-7.579671,8.976789,0.539391,9.479958,2.326161],[3.453163,0.336703,0.406190,-5.574803,7.036600,3.491209,0.773750,2.560435,1.921610,8.653959,8.265152,-6.548552,1.190841,6.525713,-8.103407,0.500456],[4.131640,-6.324230,9.362535,6.302666,-6.662099,4.010415,5.761389,5.409463,6.245496,-7.354055,-3.745654,9.301825,-0.467127,-6.562707,-6.712427,-1.677313],[-0.198462,-2.818316,5.852303,-7.929461,-0.305372,-2.792056,-7.389704,0.568874,-1.682496,3.921322,-3.992013,-0.751423,8.556801,9.869430,-4.047093,5.278831],[-7.691259,9.380583,-2.059940,4.511595,1.659663,-2.093684,3.498615,5.714877,-2.159807,6.170586,4.182429,7.419916,-4.132487,-4.754800,0.506022,-0.447725],[-0.245796,1.633022,7.072495,8.560919,-7.671686,5.321991,6.648607,6.542305,7.861911,-6.620018,5.774884,3.209095,-3.550116,-5.553305,6.589178,1.455258],[-9.033215,-0.952301,-7.162925,-8.573504,-6.391030,-2.985094,-7.149349,6.987830,-2.038163,7.441536,0.471798,-2.053465,-7.831889,9.874430,7.324249,6.279637],[-9.560012,1.823698,-7.955239,2.577736,4.087119,-0.238821,-4.339891,6.544080,-7.031050,-8.966568,1.237667,1.681168,8.974549,-4.020803,-3.741398,9.591622],[1.141659,8.367798,-9.693481,-9.424907,-2.454301,-8.688317,-3.364694,-2.674527,-6.062092,2.610794,2.979049,2.262256,4.835678,4.850773,-7.127506,-8.289412],[5.874603,1.071280,0.998522,-5.788337,-1.145995,-7.303936,-8.173716,7.462670,8.354216,8.634439,-8.164502,8.432990,-7.247865,2.527370,9.754645,-7.645338],[1.612671,3.492021,-5.542141,-8.109374,-5.391068,6.128127,8.049411,9.188706,5.239892,4.793202,1.683310,-3.661704,7.774693,-1.491538,3.765356,-9.353135],[-6.743954,3.858501,4.564643,-9.698506,-0.780500,-8.850259,-8.606843,-1.681469,-9.484844,5.844112,1.350867,4.134016,9.885019,1.300525,1.780432,5.430511],[3.950484,-1.646046,7.983883,-1.260105,-0.098473,3.747865,-6.974983,2.250978,-3.441862,3.107146,-1.927003,-0.746360,-5.366628,-7.273843,7.344909,-1.257736],[7.715321,4.252746,7.143782,-3.347743,8.094328,-1.583472,-0.294923,-2.907727,9.335457,-5.562347,9.221626,5.988480,-5.518891,0.910024,-7.360033,7.153497],[-7.797327,-3.528229,-4.451050,2.501778,-1.778706,-8.269645,4.873232,3.344393,-0.540802,-3.576672,3.224759,8.790174,-7.335733,0.728658,-3.086155,-9.654908],[-6.470764,-3.865974,6.787865,-4.418711,-9.759613,-2.010581,9.941915,-8.465265,0.228557,0.618540,-1.196219,1.436317,5.146107,5.784085,0.672581,-1.108255],[-5.052264,-3.563742,3.965160,-0.349642,2.998906,6.863917,-4.611087,-7.241312,0.507296,-9.141441,1.612128,-2.999572,5.832006,-5.359311,5.159042,-1.462740],[-3.724184,7.096851,1.491573,5.934001,8.419347,4.626187,-3.701252,4.215123,-1.725303,1.709975,5.069591,-6.164470,-3.441175,9.728462,-6.911436,8.615922],[4.394690,-7.958916,-1.157094,2.086152,-7.481014,-0.531480,3.326125,-3.172758,3.214990,2.032396,7.868980,9.790406,-7.396448,6.592791,-5.026286,6.187292],[-8.223316,-5.082938,1.730940,-8.755948,7.314794,-0.335882,-4.258909,-8.398934,6.983480,0.642845,8.071485,-4.698767,7.612471,-8.781205,-2.393744,5.611206],[1.270476,-9.072054,-6.963435,8.659433,4.887601,-1.564739,-7.855829,5.305834,-1.353013,0.703535,-0.054656,9.427376,4.800274,9.367625,-5.212345,-5.421626],[1.487192,-9.292028,0.689187,1.684338,-8.630833,5.240171,-0.606734,-9.376247,3.179528,-6.193156,3.634868,5.348305,-8.468575,-6.983521,-0.591762,-1.733201],[9.786306,3.077894,-1.336871,4.978355,-6.517045,-9.970124,-3.420679,4.063143,-7.352652,9.008616,2.064802,-6.811740,0.167515,-9.915665,-0.164000,8.054871],[-8.864075,-2.318731,1.253710,7.520649,-2.854661,-5.743929,-1.601198,-0.878297,-4.963597,-3.081018,9.302353,3.295549,8.806561,-6.362123,-0.216668,-3.717031],[-6.285221,-2.222406,-4.444407,9.793376,6.291283,0.704175,6.886990,-5.178922,1.102755,8.411132,9.259125,-1.032398,7.435725,-7.009242,-8.780842,-0.569581],[-9.199263,1.989898,-8.548783,6.546241,-0.244190,5.380326,4.676099,1.430052,-2.703809,9.627249,8.847675,-1.914519,-1.613146,7.709505,9.948874,7.231077],[-4.620181,3.654131,2.856473,-7.200859,3.798792,4.728702,3.478527,-3.419884,4.153756,7.754544,5.324993,2.596104,0.001544,-9.572729,-8.980718,-9.798343],[-0.187640,6.636934,-2.722708,-4.199729,1.733525,-2.362141,-6.606889,-7.534875,-4.876638,3.454797,-2.623078,0.610981,5.317063,-3.689705,1.114664,-8.272036],[-4.448451,5.773899,6.257076,7.335140,2.882123,3.554265,-9.406273,-9.554849,6.839435,-0.497986,-9.672775,4.224967,0.663686,-6.823217,-9.248414,3.954669],[-0.796247,-4.457692,-3.107318,6.858589,6.400449,9.375580,-7.346632,9.437345,3.165694,7.003529,4.917711,3.885040,7.763047,-0.840127,-7.429727,-8.621346],[-7.439494,-8.423829,-4.352600,7.772258,-6.970879,2.840133,-9.904123,4.437869,-9.549738,2.563922,7.773450,7.035186,-2.674667,1.750688,9.604834,-5.982436],[-4.451897,-9.037627,-5.377336,-8.900869,-6.177290,3.984111,-5.432291,6.301315,-5.902040,2.919528,6.657260,-4.213278,-3.160600,0.761442,8.713638,3.936522]], dtype = "float64")#candidate|8857|(36, 16)|const|float64
var_8858 = relay.var("var_8858", dtype = "float32", shape = (36,))#candidate|8858|(36,)|var|float32
call_8853 = relay.TupleGetItem(func_7271_call(relay.reshape(var_8854.astype('uint8'), []), relay.reshape(var_8855.astype('uint8'), [165,]), relay.reshape(const_8856.astype('uint32'), [72,]), relay.reshape(const_8857.astype('float64'), [576,]), relay.reshape(var_8858.astype('float32'), [36,]), ), 0)
call_8859 = relay.TupleGetItem(func_7278_call(relay.reshape(var_8854.astype('uint8'), []), relay.reshape(var_8855.astype('uint8'), [165,]), relay.reshape(const_8856.astype('uint32'), [72,]), relay.reshape(const_8857.astype('float64'), [576,]), relay.reshape(var_8858.astype('float32'), [36,]), ), 0)
output = relay.Tuple([call_8848,call_8853,var_8854,var_8855,const_8856,const_8857,var_8858,])
output2 = relay.Tuple([call_8849,call_8859,var_8854,var_8855,const_8856,const_8857,var_8858,])
func_8875 = relay.Function([var_8854,var_8855,var_8858,], output)
mod['func_8875'] = func_8875
mod = relay.transform.InferType()(mod)
mutated_mod['func_8875'] = func_8875
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8875_call = mutated_mod.get_global_var('func_8875')
var_8877 = relay.var("var_8877", dtype = "uint8", shape = ())#candidate|8877|()|var|uint8
var_8878 = relay.var("var_8878", dtype = "uint8", shape = (165,))#candidate|8878|(165,)|var|uint8
var_8879 = relay.var("var_8879", dtype = "float32", shape = (36,))#candidate|8879|(36,)|var|float32
call_8876 = func_8875_call(var_8877,var_8878,var_8879,)
output = call_8876
func_8880 = relay.Function([var_8877,var_8878,var_8879,], output)
mutated_mod['func_8880'] = func_8880
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8300_call = mod.get_global_var('func_8300')
func_8301_call = mutated_mod.get_global_var('func_8301')
call_8912 = func_8300_call()
call_8913 = func_8300_call()
uop_8915 = relay.acos(call_8912.astype('float32')) # shape=(10, 9, 16)
uop_8917 = relay.acos(call_8913.astype('float32')) # shape=(10, 9, 16)
const_8919 = relay.const([[[-9.463767,7.454917,-5.305713,7.351160,9.403894,4.190392,5.358553,-0.399211,-6.869406,7.691647,8.694455,-5.302104,-3.752926,-3.259426,2.527371,8.262626],[-4.035044,-7.725352,1.249038,-0.570665,8.450310,-5.679775,-0.970400,-5.394325,-1.048965,5.255112,4.316399,-1.451482,5.447004,4.494443,-6.457280,5.475115],[5.505774,-2.418922,3.465491,4.085499,-5.106466,1.574177,9.764350,8.246395,3.289784,4.407457,-8.166139,5.037241,2.479003,6.088536,2.401559,-6.397859],[-4.373986,5.463115,7.557078,-0.930936,-7.525432,-6.967070,1.051980,1.256620,-7.961541,-5.938343,-4.567057,8.259592,-7.155642,-0.639828,2.720035,-8.177143],[0.782504,4.494993,8.158142,-6.377167,-8.855180,0.581323,6.324459,-5.423913,2.030601,-3.768532,-4.014003,9.462582,-1.546072,3.224331,-2.664744,6.858676],[1.402114,-4.416541,-3.507830,7.299494,-9.121656,1.951128,2.943482,7.303477,-5.368802,0.347339,6.739662,6.347543,-6.590540,5.083237,-2.346515,-0.660050],[-3.909091,-6.559330,0.268090,6.847201,-0.619370,4.579741,-2.639552,9.097000,2.953685,-4.820933,0.865591,-1.374867,-9.397636,1.081075,4.499246,-9.341443],[-6.623464,-4.792640,-2.924261,6.015084,-9.563249,1.898845,-3.572955,3.936541,4.512937,-0.894568,8.582832,-7.286679,5.146570,6.668933,3.962204,-9.168395],[-6.239138,7.263414,-2.710405,-3.074982,-9.075876,1.169344,-0.080069,-4.611374,-4.498966,-8.146310,7.949867,8.020545,-1.288358,6.672907,7.243639,-9.134959]],[[8.489069,-9.001761,-3.960350,-6.170355,-2.250979,2.144461,8.134080,-0.255211,6.964980,7.163705,3.492570,0.069941,5.985012,5.591387,-7.142242,8.967634],[-7.710046,9.804013,-5.457320,5.859204,1.099799,4.576475,-8.492666,7.528972,-2.865757,-7.659507,3.566064,-8.238507,1.899044,3.141248,5.971876,0.252487],[6.535758,-4.359319,-8.180689,-3.916821,9.543374,-1.147820,-0.226880,2.065026,4.878478,-0.962556,0.771688,7.378903,1.696262,-5.652881,1.353237,-6.555425],[-3.954027,-6.792959,-3.974797,-7.630686,-3.679093,7.103047,-6.681786,-5.489046,-8.114757,2.779785,4.564387,-6.235950,7.308619,3.591021,-9.650500,6.941054],[-7.517397,-3.040271,9.099601,-2.039826,8.632085,-8.860487,-4.484089,6.338795,4.111654,-1.563387,-0.214351,2.045682,8.794894,-9.433313,-8.303746,-7.949798],[-5.007745,9.794652,-4.989122,0.794127,8.032740,0.717068,-1.907195,1.234826,9.074014,-3.153111,-0.571700,-6.761171,-7.575563,-8.934452,-0.384959,-4.889171],[0.969088,-1.814258,2.061946,1.272985,4.954189,1.252915,-4.940876,-2.304481,-0.957389,5.218151,-3.271421,8.901698,-3.834538,-1.846114,-4.231981,9.632958],[-8.881562,9.786577,-7.195658,3.224013,-9.323682,0.796539,5.570301,-8.274285,0.363391,-0.956367,0.316707,-1.848069,8.487475,2.597179,5.563604,6.018711],[-0.367164,-6.709850,-8.838125,8.634069,-4.948051,2.019677,-4.695272,8.765243,1.903062,6.526589,1.268986,-4.814211,-6.933510,7.013533,8.541476,-8.496617]],[[1.289166,-9.971329,-0.741742,-9.358633,-2.772653,-2.294730,-6.241312,-5.731742,0.066229,-8.048884,-4.495683,-7.508299,-4.351593,-6.855699,-5.469069,-1.296540],[9.519721,3.034536,-5.379664,-5.001689,1.873323,6.744805,3.586710,5.728151,7.085066,6.698466,9.211947,2.248104,7.948742,0.015424,-4.655812,-0.598724],[-6.981741,4.956881,2.562000,5.262402,-3.983483,-3.065125,8.257806,-7.529386,-7.495153,-2.386258,3.712431,3.621813,8.092038,3.846838,-3.264819,-6.410260],[5.707732,2.973287,5.706308,-9.003652,6.522236,6.703833,-8.308182,-8.114193,-1.262716,-9.891239,-9.188267,-8.372700,-5.096672,8.169091,2.557670,4.497541],[8.382790,-7.814983,-2.972608,-1.871582,3.161591,-4.655718,5.362327,-7.233564,6.468227,-3.856723,2.685723,1.864222,-8.967049,-2.019247,-9.432484,-8.564561],[6.953428,7.098640,4.865736,1.235976,2.302562,8.456346,-7.590937,-7.334455,-6.961783,4.124383,-2.112809,-9.896036,3.466824,-1.428802,-9.581093,1.099047],[2.123823,9.200324,-7.503722,-2.011977,-0.512654,2.891557,2.762404,-8.189638,-3.470983,8.876264,0.973406,6.837526,4.473616,-4.855866,-2.722257,6.541262],[-2.055335,0.377718,0.202512,3.119394,4.968413,2.972024,-6.687010,-3.139795,9.356770,4.756203,2.098760,-4.594605,5.373491,9.078779,-1.303906,6.022318],[7.008167,-1.006088,-8.616543,3.986989,-6.633021,0.300263,-1.493160,8.578715,5.561990,-2.714277,3.606811,9.656649,-7.401430,-3.383896,5.285720,8.997318]],[[-6.733400,-5.324668,6.728164,-7.486632,-9.737446,0.633428,-4.221360,-6.768609,1.989247,-3.130488,8.009755,0.875077,-5.703196,4.942823,-7.572952,5.455109],[-6.616436,1.545861,4.150753,7.058249,0.293451,-6.887815,1.086479,-0.062351,-9.881012,8.588862,-0.795877,5.904885,-5.882355,2.555028,5.256710,-9.774948],[-8.099448,-8.673936,0.688190,3.819935,-1.820133,-3.199800,-6.583874,-3.162616,-5.541987,1.226254,0.163753,8.590364,0.785589,-4.029418,7.946399,-8.777839],[-3.816534,9.406678,-0.620500,9.421005,2.515215,-1.533196,-6.908735,-2.223241,-6.307780,6.021742,-5.603360,0.111360,0.657309,-0.578540,-0.310424,-1.324288],[6.909438,9.623207,-8.480933,-0.127948,-7.696014,-0.546330,-5.493352,5.304570,-1.784357,-2.674470,-6.881707,-2.052268,8.511789,-6.523387,8.242703,-8.685877],[3.807663,-3.532153,-9.351391,3.986612,8.796740,0.670366,-2.060031,-2.306824,-5.438148,9.533894,-8.737449,-4.252839,-9.936279,-7.942677,-8.067779,5.880343],[-5.990823,6.078131,-5.492877,8.379199,-2.504787,2.167933,-8.621257,4.569448,-2.852737,8.002043,-8.957785,-2.317101,-8.649505,-5.535238,-7.652672,-5.186557],[7.879556,0.907305,-8.346794,0.389042,-9.695082,8.752137,-2.208448,2.297290,3.836951,-8.426740,-1.249992,0.760497,4.451530,7.714980,1.936671,-1.434756],[-2.550667,-5.954303,-4.194163,8.695509,0.289037,5.898024,-2.879776,-8.120632,8.010567,5.725167,-5.636147,4.184389,7.991613,5.854188,-6.502405,3.589290]],[[6.540994,-7.455493,-7.786487,-1.938346,-6.638411,8.519634,-5.930496,7.554486,-5.357293,-7.733114,4.404998,-4.760688,-2.773464,7.205976,3.831493,4.376460],[-6.386171,6.753529,-3.013863,-1.407715,8.618350,7.172641,-5.832060,-5.478395,3.433377,5.195272,-2.779254,9.749934,9.225177,0.141248,-0.419925,8.857950],[-0.092749,0.166541,7.617136,-7.101800,5.027358,-3.804699,-1.658552,5.305591,2.584057,-6.004145,-2.080831,0.268760,-6.354220,8.315456,5.944349,3.973019],[1.090736,-5.341345,1.341575,6.240512,-0.444167,-9.487071,-1.586374,0.390556,-9.295539,8.298522,2.381602,-1.658023,-9.684828,-7.630269,-8.720658,4.156955],[-5.498520,-0.572129,-8.670051,3.153689,-5.498304,7.772924,1.294622,-6.670765,-2.407332,-5.757503,-8.858735,9.393452,-9.400003,6.194742,-8.338731,-7.727788],[-1.505087,-0.868871,2.565247,-1.656875,9.327911,-6.986400,-9.602300,-1.748867,2.789017,-1.946196,7.114724,-0.148686,-6.788686,-4.866332,-6.862287,9.397019],[-5.059727,-9.251172,0.017820,5.903607,-1.755637,8.218781,-0.068131,-8.063861,9.948415,-3.271850,-1.737776,-1.588894,-6.431103,9.355555,-1.064517,5.218165],[-0.318949,-9.319147,-9.068023,-6.340275,6.270822,9.331558,7.065977,7.798905,3.850193,4.447210,-4.386024,-2.847208,6.870218,-7.888744,-5.209119,-3.440958],[3.279740,4.833695,-2.682754,-5.030273,1.175274,9.622276,8.748372,0.035177,-1.878856,9.513383,8.005941,2.193195,8.232713,-8.048737,-2.874235,6.632534]],[[8.850591,7.758904,-0.891632,6.964460,-8.308510,9.285148,-6.470817,-9.513489,4.328891,5.637536,0.185875,5.769241,-9.152523,-8.445779,-2.490671,-7.466345],[-0.512245,6.998633,-3.455297,3.929276,-3.501020,-0.364267,8.613773,2.755765,-6.449181,9.907563,-1.277075,6.974109,-4.353184,0.756655,8.114705,-9.299121],[4.261239,-8.430221,3.141734,-7.723827,-1.530063,-3.856929,9.659574,1.550886,-2.241471,1.870798,1.851481,-1.689650,1.966614,0.819949,4.920408,-9.862162],[9.157766,-6.227089,-9.753863,-0.201123,-9.853613,1.454770,5.093087,4.311247,9.499098,-0.482271,2.853335,6.730538,-5.865109,6.067802,-9.758665,-7.199911],[7.110438,-7.369648,-9.840946,-6.483821,8.750255,-2.890858,-7.664394,3.168797,9.056695,1.062348,-0.412406,0.319319,1.118454,-5.961816,-6.717938,6.216934],[-3.490570,-3.561980,9.920212,7.830025,-1.712917,8.220774,9.545424,-6.007344,-0.061845,-8.219725,-9.877510,7.622299,-8.946803,-8.435047,-1.694517,-0.120025],[6.818977,8.458730,-7.685098,-6.507700,9.604178,8.093956,-1.981832,3.917376,1.253658,5.622076,3.460261,7.197433,-5.104646,-0.709552,-1.757066,2.941491],[9.481416,-7.558727,0.301410,-6.010513,-7.417965,-4.538613,-2.103755,1.874900,6.280018,0.003029,7.088617,-2.123811,-8.583876,-1.914818,-0.875781,9.443918],[2.268458,7.120230,-0.816740,0.423123,8.243055,0.161989,7.042449,-6.041768,8.652930,4.385178,-8.913850,-5.012895,-3.083503,2.696888,3.072482,6.264478]],[[-8.273631,9.435259,-9.297538,9.978555,-2.470582,9.088321,7.495745,-8.807508,-8.262861,8.528675,-8.283460,7.150424,4.348355,0.110069,4.892514,6.195309],[9.910154,-9.203359,0.436955,8.732564,-2.053588,3.900215,-4.815271,-9.395223,1.222027,-6.761725,-4.044950,-8.991966,-1.094323,-4.245517,-8.316985,-3.541004],[-7.554092,-8.020523,-3.902137,-3.870394,-4.963532,4.257296,3.509743,4.337349,9.264927,-2.186923,-2.121398,3.748800,-5.641392,-5.770762,1.845894,-6.135019],[-2.922604,8.392810,8.452561,5.409085,2.382832,-0.270959,7.564400,0.253676,7.468956,-5.305882,2.747582,3.497550,8.938979,-3.135949,-7.553070,-7.732417],[9.536037,8.560333,0.308833,4.188081,6.018887,-8.358858,5.742405,-2.346654,0.007018,-8.648535,-3.121611,7.115803,-9.428593,8.979166,-9.514899,1.053273],[9.269477,-8.496841,6.316342,-4.015404,-2.798742,9.946754,-3.854372,-1.698694,-2.261481,-3.872341,-3.031668,-1.772830,-1.942349,6.499402,-4.637424,-5.793370],[-6.952213,-1.821466,-7.766390,-3.602708,8.125362,5.421682,4.417150,-2.204124,-2.483458,7.809691,-3.254140,5.709163,0.221252,2.653489,7.346539,6.110112],[1.121256,-0.436540,-9.233149,-9.845990,-2.985173,-0.728247,4.502929,-1.407968,2.861324,3.449367,3.845591,-5.192575,3.437108,-2.167169,-2.252800,-5.745530],[-7.014873,6.165040,-6.646384,-9.131885,0.494309,-8.505780,6.284232,3.833753,-3.261401,-7.777920,9.912088,-7.310321,6.595969,-4.575705,9.681208,8.439925]],[[4.906429,-4.696713,-9.510952,-1.485091,0.158965,-9.333109,2.311276,-7.596851,-2.424120,-7.432294,6.458514,8.882036,2.335311,-8.491895,-1.688974,-5.859571],[3.612738,3.910702,-4.932704,2.726991,1.486961,-3.768598,4.276179,-9.249264,-9.741965,-4.685824,-9.949394,-0.586044,2.278693,-1.471911,-7.079514,8.547409],[1.305636,6.697409,-7.125921,-8.298324,-7.870965,0.863197,3.872056,-2.165411,-8.242928,8.222469,-3.659856,-0.518276,8.411477,7.746166,-2.457415,5.470773],[-0.706200,8.287284,7.287844,-3.979306,-6.117391,-3.203289,4.862169,2.754770,8.974452,-1.031908,-4.630938,8.244910,1.054141,7.776039,7.616159,-5.136956],[1.719975,-9.941144,9.684498,4.415254,-3.904380,9.038684,-3.774936,4.374907,6.273323,4.923468,7.463651,2.205349,7.866533,-6.305075,7.637958,-3.842998],[-6.622023,-0.118730,5.514680,8.002414,2.206667,-2.946009,-8.529384,6.670503,7.384405,9.623887,3.364480,-5.126802,-8.415418,9.406103,0.624766,-3.558464],[-0.464671,9.323994,-5.214850,-9.267660,9.203200,7.253758,-8.863809,0.839067,6.544473,-8.511517,-7.740346,-2.711111,2.601110,-9.991284,2.947538,-3.978788],[6.905363,-2.788249,5.977180,7.808250,2.043920,-9.089152,1.211156,1.688207,-4.601964,8.158562,-2.236796,1.717046,5.687223,-3.905661,9.477952,2.512821],[-2.168890,-5.494516,-8.818561,-5.980952,2.722420,1.267645,8.680304,1.647277,6.961128,-1.278613,-0.211582,3.485994,8.472447,4.488417,5.706575,-6.500837]],[[-0.270027,4.990022,-6.761672,-3.961065,-3.063035,8.653227,-5.091912,3.157876,2.256732,-1.506087,-8.713181,-9.818287,8.363671,-9.962008,-5.901612,0.343459],[0.344140,1.808872,-8.664728,1.433635,1.678733,-8.380133,-4.022198,7.151438,5.835999,7.258586,-5.424968,-8.737336,2.119269,-2.553352,6.739106,-8.422866],[-0.106766,-8.962047,8.215639,4.689889,-6.156230,7.371613,8.547929,0.116451,-8.312659,-3.434261,-0.440290,-1.163933,4.720747,0.804109,-1.052339,-9.932580],[6.204448,-1.536274,-5.787593,6.341386,5.298126,4.342317,-4.969007,-3.052333,-5.421068,7.859971,9.121636,-3.727548,-4.813572,2.246649,-3.266536,2.582540],[-8.735365,-6.384688,0.612365,-9.080493,-5.007447,8.086324,-0.911158,9.906837,9.335262,2.724515,8.702897,8.148266,6.665170,-2.427163,-6.903912,5.716114],[7.715645,-6.583771,0.626166,-5.310643,-7.152584,-0.114417,8.097190,8.784187,-9.946294,9.681539,7.888646,8.702382,6.480236,-1.643902,2.149940,-1.279323],[7.860153,3.952547,5.228740,9.361579,-9.658234,-4.705137,1.651378,-7.723129,-6.243517,7.333075,-7.024505,-1.542850,2.152464,-2.452194,-6.091493,7.169901],[8.494503,0.178727,-9.756839,-3.191279,-4.830413,-9.180959,6.363463,-7.436009,-7.043899,4.634633,-6.216847,-3.747746,-9.269350,5.573030,-2.190522,-1.082192],[4.120655,-3.852765,-7.682621,-6.696743,-2.668642,5.129002,0.985492,3.967715,3.385109,9.861673,7.548358,6.093117,-2.714763,-9.202944,-1.824196,-7.292182]],[[-5.479649,7.121590,5.965382,-4.135132,4.649167,2.446763,6.233934,-2.129249,4.314780,-3.203418,-0.017768,-9.665694,-3.048890,7.881763,-4.347741,0.798606],[-4.167148,7.110478,-7.730464,7.383797,6.623028,5.952639,-1.778219,-3.112477,4.748000,-0.010621,-1.422596,-8.986087,2.374008,1.160355,4.715335,1.585362],[-9.535956,8.557057,-0.778204,-4.174463,-7.359251,-4.509766,0.869072,-1.453022,6.589139,-8.243304,-0.483031,6.503140,-8.709425,6.834703,8.375214,-4.266518],[1.947076,-4.405535,-1.311593,-2.035252,-4.761997,9.467764,3.763249,-9.026035,-9.774969,-7.675644,7.028583,8.175791,8.494969,8.991501,1.382753,-2.288003],[-8.426803,-4.113507,9.661599,0.409874,7.431005,3.882744,-7.603517,4.105947,7.224699,9.297333,8.388891,-6.567033,6.239213,4.671521,2.809278,-5.441011],[2.892749,1.135627,8.577674,-8.609249,4.673571,8.677119,-9.010224,5.314023,-8.625211,-8.829170,7.004034,-9.308322,6.879728,9.167091,6.739763,-0.434879],[-7.077001,7.894063,-2.448298,-1.660776,-5.722811,7.347329,-8.576392,-4.098284,-0.265566,9.146380,5.486950,-0.249675,9.907553,-3.273121,7.762569,1.951219],[-5.567574,7.687305,3.142793,-2.571749,5.332216,-5.063301,-8.400361,0.560547,1.939869,-4.412529,-0.869257,5.720833,-8.927166,3.206365,-4.323803,8.106380],[8.581646,1.610755,-9.617811,-9.859391,-7.990648,-3.375706,9.041695,2.415552,-8.697327,-6.750958,-7.395646,-9.582601,2.276986,1.015439,7.487397,-8.592629]]], dtype = "float32")#candidate|8919|(10, 9, 16)|const|float32
bop_8920 = relay.logical_or(uop_8915.astype('bool'), relay.reshape(const_8919.astype('bool'), relay.shape_of(uop_8915))) # shape=(10, 9, 16)
bop_8923 = relay.logical_or(uop_8917.astype('bool'), relay.reshape(const_8919.astype('bool'), relay.shape_of(uop_8917))) # shape=(10, 9, 16)
func_5954_call = mod.get_global_var('func_5954')
func_5957_call = mutated_mod.get_global_var('func_5957')
var_8940 = relay.var("var_8940", dtype = "int32", shape = ())#candidate|8940|()|var|int32
const_8941 = relay.const([-0.988701,-3.639561,-9.506722,7.238406,-9.319352,-3.361981,-6.381428,-2.316782,4.949687,5.132082,-7.502512,-9.862935,3.953127,0.652684,-3.162809,-7.682141,7.076268,5.123506,1.625831,7.962331,-8.403063,-6.725565,-1.949295,-2.739619,7.492021,7.834862,-7.549268,-3.005645,-6.428755,-2.741224,-0.103386,0.926314,6.128033,8.831984,5.321554,8.590632,-4.066989,7.942539,-0.073317,-3.299967,8.341832,9.829596,-9.967311,6.225854,-0.046216,5.566611,-0.491241,-4.152435,4.857453,0.672972,-9.970994,-5.609957,-1.453067,7.581401,-4.275922,-1.334549,-0.126971,1.196948,-3.315642,5.573744,-4.476608,3.499175,-7.519647,3.784033,3.436623,-1.661747,5.342796,-6.656801,-8.508458,-3.688388,-4.478631,-6.423025,-6.281230,0.707434,6.897053,2.946762,2.466510,-1.421729,-0.636012,-7.576686,-4.923814,-0.315580,2.578556,-2.145303,-2.988956,-0.121566,3.735969,5.342752,-5.386229,-8.745072,-1.902924,-0.386748,-1.916333,1.565768,-7.568200,-3.403583,-9.402090,-6.261570,-7.170613,-0.033927,1.148337,7.248949,0.743412,-2.266893,8.981054,4.786238,7.658681,3.912793,1.994796,-0.745169,-2.020882,-8.152115,6.224958,8.760642,7.756913,6.219379,-9.079363,-1.416852,2.738596,-8.306410,6.962336,-3.648688,3.927479,0.389593,-6.181743,-3.159721,-8.223566,-8.395908,5.271226,9.979595,4.863204,7.817530,5.667620,2.817215,-0.850076,8.630409,-1.537196,-8.304960,-0.990774,-9.531187,-0.409079,7.301802,4.419665,-2.829531,9.268686,-5.394988,-1.459484,4.645046,3.067374,9.755058,-3.890721,1.053086,-6.721513,-8.446672,0.652195,-3.949193,7.198939,8.589779,4.565794,6.451490,4.561177,8.962830,0.505939,-4.817039,2.889775,-3.385414,-5.015012,-7.749485,-2.077071,1.651866,7.188786,6.523666,-2.353353,-2.070266,-9.346810,-0.493042,5.497410,-0.643419,-9.791257,1.577371,-5.385304,6.152460,5.528557,1.262678,-2.687165,-7.503215,-1.770612,-8.008573,-0.420407,-0.824612,-9.658436,-2.811805,-0.897564,-5.533252,5.102948,7.156333,-3.520825,6.596611,-1.281941,1.157232,4.954073,4.396656,1.556943,-8.171124,-2.197817,-5.961338,-2.017219,-1.873638,1.953037,2.905116,-6.197272,-2.840773,-9.787559,-3.683286,3.682122,8.692490,7.236830,-8.948854,8.836414,-5.220159,-6.862649,-2.058836,-5.716180,2.644263,-2.453391,-3.953499,5.101700,1.985000,-6.372791,6.862322,7.024785,7.219468,3.649313,3.734961,-6.277927,-8.787187,-2.007423,4.457827,6.895881,4.461123,-5.172803,-6.264096,-4.541058,4.610252,6.125107,-5.775005,5.348234,-7.629176,-8.263837,5.579604,1.702123,0.956867,6.593152,-2.508519,1.900191,-6.961373,-9.192765,-9.904646,-4.058030,0.173707,-9.359482,-0.826352,7.506443,-3.460400,-3.153071,6.855825,7.251661,2.829905,5.877212,2.999431,9.761758,-5.214699,-6.629927,1.862238,-4.629710,-2.733954,-2.411396,3.065182,4.023130,0.085076,1.767976,-7.234533,8.219097,8.308982,6.838709,-7.336371,-6.969201,-5.676901,5.936991,9.419895,2.859476,-9.634616,-2.147041,7.165552,5.192437,4.847604,6.628429,3.764861,-7.158680,-0.598478,6.351193,-6.978985,4.472295,-7.906081,-7.079470,6.150489,9.754155,-7.634081,2.146640,-4.404624,-5.141065,1.886614,1.636611,5.748041,-1.550049,1.305477,-8.139353,3.595262,0.246858,-1.919294,-6.877021,6.489708,2.423164,8.210858,5.198946,9.105622,-0.813311,-4.875604,9.367413,3.962230,7.795003,4.768247,-6.720857,0.760274,-7.824261,-5.317298,8.393692,-7.745593,8.377478,1.560260,6.027074,-9.058692,-5.185074,7.814856,-0.672292,9.628465,-3.477913,6.888671,0.652694,-7.050567,-3.737639,-2.986931,-4.260654,-5.419803,8.950228,-3.656781,-4.210043,-6.275652,9.346589,-3.115405,-6.105218,2.662183,-6.149563,4.130347,-3.420536,8.998925,-1.843083,-2.349720,4.333237,-2.644960,3.295234,4.707015,-5.873400,-3.552924,-7.710455,6.963477,-9.834156,8.990640,-0.571239,-7.542973,-9.246278,7.593332,-3.371789,4.099146,2.305708,-7.101335,-2.222646,-0.679234,0.152144,0.299718,-4.821655,-5.036802,1.516448,7.203677,-8.688925,-2.195235,-4.437526,-8.720204,-7.500919,-1.774695,3.196906,-8.784610,-4.749107,-8.949578,5.163663,3.243735,0.110868,-0.536908,0.939467,-6.999219,7.674956,-6.884971,-5.496144,-6.912423,-4.813289,-3.226860,1.317991,-3.504458,-6.462268,8.195049,-6.244288,1.323968,-6.822640,-3.414064,6.651682,-1.411746,-2.719194,-4.677790,6.376048,5.115401,7.153514,4.882133,-5.416974,2.878614,4.586826,-5.228381,0.403854,8.225232,6.085268,-8.614443,-7.906610,0.297961,5.573899,4.959029,4.223680,6.115868,6.600955,6.161060,-6.925528,-1.080071,-1.970837,7.485083,-2.653778,0.895773,-0.320416,-1.322584,-5.190456,6.944858,-1.823580,-7.874808,7.832814,-3.011115,8.916391,-0.016010,-1.043585,6.096741,4.101946,3.951259,1.673262,1.981733,-9.151221,-9.466927,-8.308852,-2.674570,-8.973414,-3.207309,-9.005120,-7.639853,-3.315066,0.846978,4.766409,5.212404,3.732836,-1.790408,-0.241102,9.656240,-5.156675,3.782756,3.781780,6.819857,3.094983,-0.852085,-8.846861,8.594569,5.760826,-6.958190,9.181581,-7.412801,-5.595931,9.622925,-4.630925,5.717508,-2.830073,8.252942,-8.589052,5.209192,-7.591727,-1.524968,1.056337,-3.555237,-7.682730,3.238585,-4.283229,1.897926,6.367217,2.080103,8.167060,-3.228797,-7.354538,1.578654,-3.036954,-7.614983,-7.177539,4.369230,-8.648135,3.271688,-0.167640,-0.106516,-2.806180,5.758346,-1.520251,7.605084,0.289674,8.549174,-4.022176,2.895664,5.221816,3.888410,-1.986094,2.184133,-0.085153,3.981001,-0.272356,-9.661069,3.312265,-0.213766,-7.050641,8.873935,8.615867,7.772298,-9.678758,-7.837184,-4.247339,2.341821,-2.781235,5.115314,6.432677,-7.286099,-0.959356,-6.186661,-4.519229,8.618510,0.956522,5.632954,1.489924,-5.158689,0.679885,-6.256426,-7.035346,-8.510777,-8.598186,-2.500136,-8.921370,1.220898,5.697479,5.969945,-5.290301,-7.888317,8.662583,-7.189871,1.343240,-4.906059,4.025661,-1.901365,3.763934,2.219087,5.710599,1.391196,-3.780143,-6.610320,7.135988,7.890526,7.747274,6.893569,3.661281,3.055191,-8.232696,0.034361,-9.145555,8.425467,-1.264374,-0.793551,-6.209299,-7.359873,-8.086157,-4.857361,-8.549367,-2.306089,-1.993058,-9.365416,1.764006,-5.933512,-7.811930,-7.998867,6.668749,-5.977167,-4.042607,8.496524,-8.454825,5.881841,0.564371,-9.985881,7.871584,8.299952,-6.609470,-0.476605,0.502301,3.723225,-5.897266,5.628391,-4.898781,-0.469878,-7.782747,3.868795,3.724017,1.786980,7.049356,-4.793854,-0.324195,-0.152059,3.162374,0.333122,7.375407,-1.021257,-2.024851,0.899065,7.581932,9.638745,-9.866197,9.236045,5.960289,-4.526811,-6.653038,2.141245,-5.611151,-9.781284,-5.302131,-7.958711,-0.260950,-4.982482,-7.491852,6.607570,8.851380,1.639239,-9.809256,3.405218,-3.571091,-9.734120,-3.209292,4.951042,8.626379,-2.072505,9.816400,5.298139,-6.421617,-5.350328,8.992497,-1.651917,-9.032423,-6.694847,-8.159489,-7.394569,9.184680,-5.530699,6.239822,-5.932972,3.985066,-4.648508,-0.675415,-9.302038,1.015935,1.030513,9.273731,8.980680,-2.620001,-2.534712,6.992789,6.684865,5.473993,-6.397036,1.534878,2.375546,-9.733481,-8.294904,3.218981,7.910262,9.156458,4.241360,-3.145752,6.194276,5.254576,-3.975990,-6.068848,1.592010,9.273330,-7.738000,6.099583,7.818977,-9.798574,-8.193058,-6.677243,-0.502917,-9.610375,-1.010258,5.792382,6.347149,2.501361,4.575558,8.226842,2.075353,9.589632,-8.228368,4.982786,-4.670614,6.733667,0.422809,-9.872915,0.665748,-2.736901,6.720400,2.947254,-6.680298,-7.571438,8.099318,-1.726044,-3.584961,-8.253158,-8.759565,-3.460817,9.311698,8.454219,-4.731938,5.775423,6.861299,4.470381,4.010120,4.233465,-3.436643,9.222998,-1.071630,-8.664329,7.100515,8.814071,1.047610,-8.826655,3.711793,3.292870,3.621154,0.913631,-7.717240,-6.780773,-7.298274,5.861081,9.738188,-2.128606,7.520940,7.037545,2.288048,-0.013422,-6.861425,-0.102936,2.109068,1.032592,-4.007376,0.861503,-5.921582,-9.223953,9.700871,1.150519,-9.789035,-7.771397,-4.285398,5.193443,-5.873025,-1.825859,-9.754382,-5.354033,0.640874,6.421810,2.215806,-1.398226,-8.163792,-0.113196,4.096725,-7.913670,0.230143,3.785223,-8.987092,2.698687,-1.477023,-6.870019,-5.263787,-1.208596,-4.044867,2.207959,-4.518574,2.109633,-7.270410,9.374644], dtype = "float64")#candidate|8941|(819,)|const|float64
call_8939 = relay.TupleGetItem(func_5954_call(relay.reshape(var_8940.astype('int32'), []), relay.reshape(const_8941.astype('float64'), [819,]), ), 3)
call_8942 = relay.TupleGetItem(func_5957_call(relay.reshape(var_8940.astype('int32'), []), relay.reshape(const_8941.astype('float64'), [819,]), ), 3)
output = relay.Tuple([bop_8920,call_8939,var_8940,const_8941,])
output2 = relay.Tuple([bop_8923,call_8942,var_8940,const_8941,])
func_8947 = relay.Function([var_8940,], output)
mod['func_8947'] = func_8947
mod = relay.transform.InferType()(mod)
var_8948 = relay.var("var_8948", dtype = "int32", shape = ())#candidate|8948|()|var|int32
output = func_8947(var_8948)
func_8949 = relay.Function([var_8948], output)
mutated_mod['func_8949'] = func_8949
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7787_call = mod.get_global_var('func_7787')
func_7788_call = mutated_mod.get_global_var('func_7788')
call_8966 = func_7787_call()
call_8967 = func_7787_call()
func_8417_call = mod.get_global_var('func_8417')
func_8421_call = mutated_mod.get_global_var('func_8421')
var_8993 = relay.var("var_8993", dtype = "float32", shape = ())#candidate|8993|()|var|float32
var_8994 = relay.var("var_8994", dtype = "float32", shape = (350, 3))#candidate|8994|(350, 3)|var|float32
call_8992 = relay.TupleGetItem(func_8417_call(relay.reshape(var_8993.astype('float32'), []), relay.reshape(var_8994.astype('float32'), [5, 15, 14]), ), 0)
call_8995 = relay.TupleGetItem(func_8421_call(relay.reshape(var_8993.astype('float32'), []), relay.reshape(var_8994.astype('float32'), [5, 15, 14]), ), 0)
output = relay.Tuple([call_8966,call_8992,var_8993,var_8994,])
output2 = relay.Tuple([call_8967,call_8995,var_8993,var_8994,])
func_8997 = relay.Function([var_8993,var_8994,], output)
mod['func_8997'] = func_8997
mod = relay.transform.InferType()(mod)
var_8998 = relay.var("var_8998", dtype = "float32", shape = ())#candidate|8998|()|var|float32
var_8999 = relay.var("var_8999", dtype = "float32", shape = (350, 3))#candidate|8999|(350, 3)|var|float32
output = func_8997(var_8998,var_8999,)
func_9000 = relay.Function([var_8998,var_8999,], output)
mutated_mod['func_9000'] = func_9000
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6588_call = mod.get_global_var('func_6588')
func_6589_call = mutated_mod.get_global_var('func_6589')
call_9018 = func_6588_call()
call_9019 = func_6588_call()
var_9020 = relay.var("var_9020", dtype = "float64", shape = (16, 9, 16))#candidate|9020|(16, 9, 16)|var|float64
bop_9021 = relay.bitwise_and(call_9018.astype('int16'), var_9020.astype('int16')) # shape=(16, 9, 16)
bop_9024 = relay.bitwise_and(call_9019.astype('int16'), var_9020.astype('int16')) # shape=(16, 9, 16)
func_5631_call = mod.get_global_var('func_5631')
func_5632_call = mutated_mod.get_global_var('func_5632')
call_9029 = func_5631_call()
call_9030 = func_5631_call()
func_5911_call = mod.get_global_var('func_5911')
func_5913_call = mutated_mod.get_global_var('func_5913')
var_9041 = relay.var("var_9041", dtype = "float32", shape = (210,))#candidate|9041|(210,)|var|float32
call_9040 = relay.TupleGetItem(func_5911_call(relay.reshape(var_9041.astype('float32'), [210,])), 4)
call_9042 = relay.TupleGetItem(func_5913_call(relay.reshape(var_9041.astype('float32'), [210,])), 4)
bop_9043 = relay.floor_divide(var_9020.astype('float32'), call_9029.astype('float32')) # shape=(16, 9, 16)
bop_9046 = relay.floor_divide(var_9020.astype('float32'), call_9030.astype('float32')) # shape=(16, 9, 16)
output = relay.Tuple([bop_9021,call_9040,var_9041,bop_9043,])
output2 = relay.Tuple([bop_9024,call_9042,var_9041,bop_9046,])
func_9052 = relay.Function([var_9020,var_9041,], output)
mod['func_9052'] = func_9052
mod = relay.transform.InferType()(mod)
mutated_mod['func_9052'] = func_9052
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9052_call = mutated_mod.get_global_var('func_9052')
var_9054 = relay.var("var_9054", dtype = "float64", shape = (16, 9, 16))#candidate|9054|(16, 9, 16)|var|float64
var_9055 = relay.var("var_9055", dtype = "float32", shape = (210,))#candidate|9055|(210,)|var|float32
call_9053 = func_9052_call(var_9054,var_9055,)
output = call_9053
func_9056 = relay.Function([var_9054,var_9055,], output)
mutated_mod['func_9056'] = func_9056
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7602_call = mod.get_global_var('func_7602')
func_7603_call = mutated_mod.get_global_var('func_7603')
call_9146 = relay.TupleGetItem(func_7602_call(), 0)
call_9147 = relay.TupleGetItem(func_7603_call(), 0)
uop_9190 = relay.asinh(call_9146.astype('float32')) # shape=(1, 9, 16)
uop_9192 = relay.asinh(call_9147.astype('float32')) # shape=(1, 9, 16)
output = uop_9190
output2 = uop_9192
func_9199 = relay.Function([], output)
mod['func_9199'] = func_9199
mod = relay.transform.InferType()(mod)
mutated_mod['func_9199'] = func_9199
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9199_call = mutated_mod.get_global_var('func_9199')
call_9200 = func_9199_call()
output = call_9200
func_9201 = relay.Function([], output)
mutated_mod['func_9201'] = func_9201
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9202 = relay.var("var_9202", dtype = "float32", shape = (10, 5, 12))#candidate|9202|(10, 5, 12)|var|float32
uop_9203 = relay.asinh(var_9202.astype('float32')) # shape=(10, 5, 12)
func_8875_call = mod.get_global_var('func_8875')
func_8880_call = mutated_mod.get_global_var('func_8880')
var_9207 = relay.var("var_9207", dtype = "uint8", shape = ())#candidate|9207|()|var|uint8
const_9208 = relay.const([-7,-3,5,-10,-2,-9,-6,-2,9,10,2,1,4,-1,4,-6,-3,4,8,5,6,4,10,2,-7,9,10,-9,6,5,-8,-5,-7,-6,-4,4,-4,-4,8,6,-8,-9,7,-3,8,4,-9,6,7,-1,-3,-1,-7,3,-2,-3,4,-1,7,-5,-1,2,8,-8,-8,-8,-5,-9,-5,-8,-1,-9,10,-9,3,-4,3,-6,4,7,-4,4,-5,2,5,-9,10,5,-8,-8,10,-7,10,5,-9,7,-9,-1,-3,-4,-2,9,9,-1,-8,-7,-1,-1,-10,-4,-1,2,-1,4,-5,-4,-1,8,-7,-8,8,-5,-2,9,-5,2,-3,7,7,-7,2,-1,4,-5,-10,8,-10,8,-9,7,1,9,-2,-9,-10,3,-10,6,-6,5,-4,6,5,-10,-3,6,6,8,-4,7,5,-5,-4,9,2], dtype = "uint8")#candidate|9208|(165,)|const|uint8
var_9209 = relay.var("var_9209", dtype = "float32", shape = (36,))#candidate|9209|(36,)|var|float32
call_9206 = relay.TupleGetItem(func_8875_call(relay.reshape(var_9207.astype('uint8'), []), relay.reshape(const_9208.astype('uint8'), [165,]), relay.reshape(var_9209.astype('float32'), [36,]), ), 1)
call_9210 = relay.TupleGetItem(func_8880_call(relay.reshape(var_9207.astype('uint8'), []), relay.reshape(const_9208.astype('uint8'), [165,]), relay.reshape(var_9209.astype('float32'), [36,]), ), 1)
bop_9224 = relay.greater(uop_9203.astype('bool'), var_9207.astype('bool')) # shape=(10, 5, 12)
uop_9237 = relay.acos(call_9206.astype('float64')) # shape=(1, 9, 16)
uop_9239 = relay.acos(call_9210.astype('float64')) # shape=(1, 9, 16)
output = relay.Tuple([const_9208,var_9209,bop_9224,uop_9237,])
output2 = relay.Tuple([const_9208,var_9209,bop_9224,uop_9239,])
func_9242 = relay.Function([var_9202,var_9207,var_9209,], output)
mod['func_9242'] = func_9242
mod = relay.transform.InferType()(mod)
var_9243 = relay.var("var_9243", dtype = "float32", shape = (10, 5, 12))#candidate|9243|(10, 5, 12)|var|float32
var_9244 = relay.var("var_9244", dtype = "uint8", shape = ())#candidate|9244|()|var|uint8
var_9245 = relay.var("var_9245", dtype = "float32", shape = (36,))#candidate|9245|(36,)|var|float32
output = func_9242(var_9243,var_9244,var_9245,)
func_9246 = relay.Function([var_9243,var_9244,var_9245,], output)
mutated_mod['func_9246'] = func_9246
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9255 = relay.var("var_9255", dtype = "float32", shape = (11, 8, 6))#candidate|9255|(11, 8, 6)|var|float32
uop_9256 = relay.log2(var_9255.astype('float32')) # shape=(11, 8, 6)
func_6674_call = mod.get_global_var('func_6674')
func_6675_call = mutated_mod.get_global_var('func_6675')
call_9259 = relay.TupleGetItem(func_6674_call(), 0)
call_9260 = relay.TupleGetItem(func_6675_call(), 0)
output = relay.Tuple([uop_9256,call_9259,])
output2 = relay.Tuple([uop_9256,call_9260,])
func_9263 = relay.Function([var_9255,], output)
mod['func_9263'] = func_9263
mod = relay.transform.InferType()(mod)
var_9264 = relay.var("var_9264", dtype = "float32", shape = (11, 8, 6))#candidate|9264|(11, 8, 6)|var|float32
output = func_9263(var_9264)
func_9265 = relay.Function([var_9264], output)
mutated_mod['func_9265'] = func_9265
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7602_call = mod.get_global_var('func_7602')
func_7603_call = mutated_mod.get_global_var('func_7603')
call_9303 = relay.TupleGetItem(func_7602_call(), 0)
call_9304 = relay.TupleGetItem(func_7603_call(), 0)
output = relay.Tuple([call_9303,])
output2 = relay.Tuple([call_9304,])
func_9307 = relay.Function([], output)
mod['func_9307'] = func_9307
mod = relay.transform.InferType()(mod)
mutated_mod['func_9307'] = func_9307
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9307_call = mutated_mod.get_global_var('func_9307')
call_9308 = func_9307_call()
output = call_9308
func_9309 = relay.Function([], output)
mutated_mod['func_9309'] = func_9309
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9330 = relay.var("var_9330", dtype = "float32", shape = (12, 12, 11))#candidate|9330|(12, 12, 11)|var|float32
uop_9331 = relay.tan(var_9330.astype('float32')) # shape=(12, 12, 11)
func_6313_call = mod.get_global_var('func_6313')
func_6316_call = mutated_mod.get_global_var('func_6316')
const_9337 = relay.const([4.395692,8.133459,4.018624,7.481560,-2.073831,5.150411,-9.038509,4.010262,-9.016394,1.072292,2.209302,8.360633,7.397404,3.330520,-7.835053], dtype = "float64")#candidate|9337|(15,)|const|float64
var_9338 = relay.var("var_9338", dtype = "float64", shape = (48,))#candidate|9338|(48,)|var|float64
call_9336 = relay.TupleGetItem(func_6313_call(relay.reshape(const_9337.astype('float64'), [1, 3, 5]), relay.reshape(var_9338.astype('float64'), [48,]), ), 2)
call_9339 = relay.TupleGetItem(func_6316_call(relay.reshape(const_9337.astype('float64'), [1, 3, 5]), relay.reshape(var_9338.astype('float64'), [48,]), ), 2)
bop_9348 = relay.logical_or(uop_9331.astype('bool'), relay.reshape(var_9330.astype('bool'), relay.shape_of(uop_9331))) # shape=(12, 12, 11)
func_5680_call = mod.get_global_var('func_5680')
func_5682_call = mutated_mod.get_global_var('func_5682')
const_9352 = relay.const(-1, dtype = "uint8")#candidate|9352|()|const|uint8
call_9351 = relay.TupleGetItem(func_5680_call(relay.reshape(const_9352.astype('uint8'), [])), 0)
call_9353 = relay.TupleGetItem(func_5682_call(relay.reshape(const_9352.astype('uint8'), [])), 0)
output = relay.Tuple([call_9336,const_9337,var_9338,bop_9348,call_9351,const_9352,])
output2 = relay.Tuple([call_9339,const_9337,var_9338,bop_9348,call_9353,const_9352,])
func_9366 = relay.Function([var_9330,var_9338,], output)
mod['func_9366'] = func_9366
mod = relay.transform.InferType()(mod)
var_9367 = relay.var("var_9367", dtype = "float32", shape = (12, 12, 11))#candidate|9367|(12, 12, 11)|var|float32
var_9368 = relay.var("var_9368", dtype = "float64", shape = (48,))#candidate|9368|(48,)|var|float64
output = func_9366(var_9367,var_9368,)
func_9369 = relay.Function([var_9367,var_9368,], output)
mutated_mod['func_9369'] = func_9369
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9373 = relay.var("var_9373", dtype = "float32", shape = (5, 12, 5))#candidate|9373|(5, 12, 5)|var|float32
uop_9374 = relay.acos(var_9373.astype('float32')) # shape=(5, 12, 5)
func_3470_call = mod.get_global_var('func_3470')
func_3473_call = mutated_mod.get_global_var('func_3473')
const_9380 = relay.const(-9, dtype = "uint8")#candidate|9380|()|const|uint8
const_9381 = relay.const([9,1,6,8,6,7,-2,-4,-1,-6,-9,-4,-1,2,-10,-8,-10,-8,10,10,-1,-7,3,4,6,8,9,8,1,-7,-8,1,7,-4,9,-4,10,-3,-5,-8,9,8,8,-5,5,-1,9,5,-5,-5,-5,-3,10,-10,3,6,6,7,2,-4,-3,4,-8,8,-7,6,-1,7,-4,-6,6,6,-8,5,-4,8,5,1,-8,9,-1,-7,3,-4,4,-4,4,2,5,-3,-10,10,3,-9,10,6,2,-6,1,5,-3,-4,1,8,-7,6,-2,-3,8,5,9,-3,-9,9,10,3,-3,10,-5,9,-1,-1,3,-9,-5,9,8,-6,-1,-4,1,6,-4,-7,5,5,2,1,8,-4,-4,7,-7,8,-2,-10,-2,6,-1,7,8,3,7,-3,6,10,-4,-4,1,-8,-6,5,-3,4,-1], dtype = "uint8")#candidate|9381|(165,)|const|uint8
call_9379 = relay.TupleGetItem(func_3470_call(relay.reshape(const_9380.astype('uint8'), []), relay.reshape(const_9381.astype('uint8'), [11, 5, 3]), ), 0)
call_9382 = relay.TupleGetItem(func_3473_call(relay.reshape(const_9380.astype('uint8'), []), relay.reshape(const_9381.astype('uint8'), [11, 5, 3]), ), 0)
output = relay.Tuple([uop_9374,call_9379,const_9380,const_9381,])
output2 = relay.Tuple([uop_9374,call_9382,const_9380,const_9381,])
func_9384 = relay.Function([var_9373,], output)
mod['func_9384'] = func_9384
mod = relay.transform.InferType()(mod)
mutated_mod['func_9384'] = func_9384
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9385 = relay.var("var_9385", dtype = "float32", shape = (5, 12, 5))#candidate|9385|(5, 12, 5)|var|float32
func_9384_call = mutated_mod.get_global_var('func_9384')
call_9386 = func_9384_call(var_9385)
output = call_9386
func_9387 = relay.Function([var_9385], output)
mutated_mod['func_9387'] = func_9387
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7177_call = mod.get_global_var('func_7177')
func_7178_call = mutated_mod.get_global_var('func_7178')
call_9408 = func_7177_call()
call_9409 = func_7177_call()
func_9366_call = mod.get_global_var('func_9366')
func_9369_call = mutated_mod.get_global_var('func_9369')
const_9420 = relay.const([6.102067,3.762260,-0.968850,-7.399272,-0.400297,-4.454719,6.448488,2.461634,-4.651881,9.461811,-0.195325,5.409870,-7.530671,-9.349711,4.363550,5.302346,0.199629,2.072686,8.225303,-2.947986,5.542364,4.498378,-8.156439,-6.517867,-4.841241,-2.466571,-5.979122,-5.066534,-3.697357,0.917868,-1.813808,-6.764595,3.899091,-3.200494,2.447572,-8.131123,1.084304,3.171018,-1.243590,-0.939786,1.049720,8.237563,-0.055207,7.307372,-9.947502,-6.284576,1.810538,-6.024401,-5.281677,2.052908,4.408401,0.999199,6.810556,-6.303386,-5.616449,-0.226991,-1.528210,-3.054560,-9.383255,9.911180,-9.026704,0.098473,-7.327396,-3.669808,-7.269555,4.982057,4.054978,-5.640125,9.618314,-0.313821,-2.331802,-0.795739,5.075492,9.419375,-0.834804,-9.732953,6.519440,-8.239979,-4.326421,-9.190322,-5.787756,-5.572391,-0.775019,-3.941561,-8.069298,-4.162580,1.351577,3.235147,3.525267,-4.559049,1.180154,-5.473163,3.775808,-6.315232,6.616871,-4.347996,-4.296293,3.608334,-1.632931,9.753439,-1.969419,0.145284,-6.578400,-7.525545,6.911285,1.546954,-2.604525,9.659724,-7.036347,3.740499,7.829354,3.206623,-6.856118,-8.537815,-4.721876,6.628778,3.207300,-1.761039,7.154159,5.060002,-0.718710,1.968882,-9.075889,-6.832722,5.389456,-1.559344,3.929400,-4.488647,-0.813044,-2.222638,-1.118954,-7.603357,-2.337912,8.889505,8.500892,2.909140,7.396342,-2.531018,1.430451,-3.619736,-6.177137,9.018527,-8.911805,-1.239597,2.071944,4.218248,-8.129966,3.254562,1.182056,8.028873,-3.939904,-6.963708,0.884275,9.800430,8.834228,1.551684,4.693196,6.780529,7.708836,-0.527802,4.736028,-4.371794,1.731493,-5.406990,5.821037,-0.398786,-9.000878,6.357921,5.336490,5.321116,1.443344,9.506135,6.680918,-9.335835,-4.363981,2.179360,5.659823,2.787147,-9.625273,6.378461,5.499640,2.685149,-7.331462,-7.298000,4.776629,-7.566395,-4.018376,1.596590,-9.814733,-8.695479,3.220920,-3.606142,-5.852390,1.934761,-0.292340,-1.195884,-1.826777,7.746101,-7.400655,1.152140,1.972043,-3.784967,5.566840,-4.811249,-6.271922,-7.713032,-1.757698,-6.756724,-7.854826,5.121663,-5.243671,7.320345,7.375163,2.720429,-2.452621,-8.991622,-5.316272,2.647845,-3.330283,1.746052,9.840446,-7.114905,2.412008,-9.052671,0.001108,-8.322643,3.007116,-2.097148,-5.385061,-7.034882,-9.860787,0.965072,-8.997767,-8.024402,-8.895474,8.360904,7.049408,4.030009,-1.305780,3.196107,-9.731454,4.684308,1.554544,-6.750517,2.578951,-3.927824,1.617860,-9.098102,-6.210866,6.737559,-2.549208,-9.052673,-0.861063,-9.491950,1.553063,-5.618721,1.765146,0.143069,-2.852249,6.035339,1.606835,2.079856,0.846596,-8.300090,6.221247,-9.789121,-7.003392,0.406026,-3.794886,0.090432,5.700656,6.533270,5.626390,2.956092,7.609295,0.053982,-0.907161,3.949636,-1.142638,-2.836919,6.625925,8.629947,2.915036,4.231685,0.161939,-0.765556,-8.818336,6.403913,-3.457023,5.385108,7.432258,-3.069371,-1.850099,3.109782,4.710381,-5.369026,-5.718993,-7.302232,-2.579037,-5.227785,-3.518719,9.042179,-7.853607,-5.757658,6.912202,-0.143235,-1.657705,4.322348,8.159144,0.312300,-2.472262,7.105332,-6.041479,-3.847922,9.283036,-0.973772,5.014167,4.409038,-1.649948,8.945641,4.614828,5.248333,-5.737074,-2.875033,8.862037,0.434104,9.705983,0.987057,-0.203355,9.457887,-5.634965,-5.633259,8.747497,7.585505,8.178792,1.313465,0.235901,9.499335,7.604103,3.949710,1.281447,-3.005675,6.843517,-7.144347,-1.676813,-7.100732,3.427624,-5.791415,-4.671804,8.320405,-9.217594,-8.160704,1.813127,-7.409097,-9.337952,6.223530,-1.560026,-2.846964,7.389042,1.366751,-9.094806,-1.758256,-7.774824,-8.979745,4.387850,9.035699,4.030038,3.479627,7.360370,3.347920,9.742150,1.044410,6.207651,4.560093,8.046775,-5.921919,-5.759862,4.672349,3.826461,6.660391,6.203653,8.869346,9.072138,3.093688,-0.417986,-9.691188,-1.898934,7.344196,8.131063,-3.575768,6.014740,5.186633,-6.186955,5.954756,-6.474056,-8.806449,9.040530,-2.352495,-9.630968,6.501925,2.263496,-2.095552,2.405070,9.445694,-5.916955,6.813581,-6.870890,-2.439686,-0.272319,-5.047755,-0.494880,-6.150629,-1.732724,-7.499773,0.965253,7.907103,7.127649,-5.666642,3.495205,-6.190081,3.200518,-2.377811,-5.514542,-9.250965,-5.980221,4.324575,1.111485,-8.985640,6.961093,-7.693738,-9.965040,0.024047,1.408226,-7.172390,0.225505,6.045376,9.095697,-9.758301,-9.512773,-5.275799,7.338091,5.234652,3.438970,4.338105,8.967272,6.619088,9.142903,0.796414,-4.396025,-7.509803,-0.454520,8.417680,5.227996,5.255246,-8.163453,-8.537699,-7.372217,8.443612,2.504690,-2.448231,-2.845553,-5.690261,-7.347396,5.396616,6.268179,-7.198531,3.724555,9.944680,4.396808,-9.016330,-7.418716,9.223336,-6.109275,4.283048,9.362906,-9.434030,0.943033,-6.232272,8.870412,7.443721,5.874301,-5.481278,5.114783,2.959429,4.662061,-2.070854,-4.350477,-0.640282,-3.821221,-7.788539,2.280935,-3.062155,0.460560,-1.254953,-1.697126,1.483789,5.662300,-9.412908,-3.271802,1.891580,6.646511,7.353012,2.895491,-6.536907,0.830248,-2.820984,-7.967276,-9.244142,3.572277,-0.553331,-5.089349,4.970787,0.864297,-0.410175,0.267516,0.219828,3.394988,-2.040128,-1.336325,2.309508,3.550138,-6.280840,-3.505814,6.615423,1.874162,1.880230,7.935294,0.796551,-4.245002,-4.587218,4.051958,-7.967740,5.668438,-0.254544,0.097870,6.572923,5.960690,-9.960377,-3.339452,8.688460,2.575103,3.229446,0.038505,-0.085028,-3.215068,8.302476,-9.485336,7.961380,-0.418474,-8.982897,8.408307,-1.584446,2.584058,-3.463301,-8.558080,-5.731169,-9.276150,-7.514885,-5.329357,2.606837,-1.019638,2.308246,-8.903901,-0.733153,-9.015659,-9.800938,-4.785313,-4.709924,-0.311320,-3.911066,-6.276646,-3.577594,-9.166570,-6.976132,5.653375,-7.840308,-8.664274,1.678483,-6.110453,0.338826,-9.754396,-3.798019,-6.250725,-6.245052,7.165115,6.505427,1.910399,-5.109584,-7.547168,2.922026,-9.659520,4.667171,5.890710,9.099461,-0.077640,-8.381543,-2.418867,-3.101615,0.856783,8.941963,5.616174,-8.795962,9.879308,-6.610902,4.017865,0.089400,5.687177,-9.139987,8.125637,-8.690508,-7.196684,-4.277931,2.038707,5.923838,-3.000557,0.989949,0.565923,-1.471293,-8.928532,-3.251842,-6.678987,6.154272,9.960563,-6.424521,5.358330,-5.598328,1.339589,5.470300,8.159887,0.486334,2.605960,1.137825,-0.225356,5.996257,5.631084,-8.443646,-1.153255,0.724180,6.670748,-0.065014,7.095894,-4.730141,-4.713977,9.801970,-8.510553,2.731457,-6.412259,-1.046766,-1.642285,8.997842,-8.850338,-5.722478,-5.740388,-0.631150,2.285324,-7.314846,6.160621,-0.533879,-7.832983,-6.448730,-2.859483,6.290911,-5.760425,-5.461366,8.093482,-9.233598,8.643997,-7.572318,7.585230,-1.090297,-7.074381,7.909190,3.630326,9.755880,7.009846,0.118850,1.485990,-9.248097,-7.060124,-1.997148,4.934102,1.525464,2.530566,-2.153420,-7.344881,-5.256932,8.619179,4.786337,6.351284,7.873817,-2.462038,-9.430983,8.045246,9.306300,4.463086,1.737427,3.615570,-8.817489,3.263328,7.518559,8.296541,-2.903911,7.209369,8.990784,-1.872456,3.046948,3.775637,-6.063804,6.613005,8.584770,2.210187,0.234418,0.151391,-4.608177,-1.685769,4.166570,6.065213,-1.512336,5.133003,3.227834,-7.806257,-2.926040,-8.105554,-8.977683,-5.681812,3.489738,2.747457,-8.239693,-1.534443,4.610507,-4.119492,-4.659118,-0.636722,-3.615773,-0.283171,7.677982,6.274465,0.452370,-9.049500,7.571135,4.521394,-9.344909,5.319665,3.676084,3.098640,-8.735781,9.698793,7.415351,7.769562,9.756494,5.190703,9.674369,-2.471235,4.348339,-7.841353,-6.828036,3.134373,-5.080501,9.420386,-1.015586,-6.606950,0.760488,9.862900,9.834289,-8.716256,-6.999593,3.412977,-0.251669,-1.667498,-8.278577,-3.576623,-4.052277,-6.385337,-0.949602,7.495824,-7.106794,7.186308,8.652177,4.480473,-0.834965,-8.160438,5.010774,-4.084663,0.609897,3.546154,7.578080,-0.237570,2.094529,9.648996,1.963989,-0.034346,-6.061835,5.756867,-6.530542,2.999140,-0.568871,-8.134343,6.560839,-0.695567,9.588710,2.645107,7.250186,5.030459,-0.599648,1.146952,2.845069,8.641740,2.096940,7.283375,2.245196,-5.703069,-0.709652,-5.321177,7.836258,1.120437,-6.155125,-0.348144,-5.960513,9.327820,-0.999078,-2.648326,-7.542315,3.666273,-9.510642,-9.070133,1.651740,-3.461390,8.477993,-8.747310,0.507487,5.501024,-8.453512,0.883457,9.137327,3.527070,2.105011,8.028941,6.868315,-2.758103,-8.111494,-2.129848,7.069453,5.662383,1.355017,-7.486706,2.464703,-9.077955,1.896997,1.676841,-8.583682,-7.404178,-2.622926,-3.532742,-5.122965,-6.255945,2.286353,8.573018,4.140013,2.476760,-8.650063,2.813550,2.757388,3.483235,0.473795,-1.599482,5.247528,-1.878573,-8.980802,4.600483,7.900152,3.246787,-0.172182,2.059166,-3.047366,-4.995515,-7.117178,-8.717088,-1.050153,-7.854957,-6.987903,8.790477,9.456930,-5.208325,-1.599744,6.701587,4.301312,-2.540600,0.087235,9.696102,-1.485042,-6.783704,0.459569,2.304233,-7.925823,7.486131,-2.194867,-3.330696,-6.860078,0.049561,-8.957742,-3.452087,-1.980886,-2.865652,0.168274,0.293567,3.076734,-2.395276,-2.853190,-4.142076,-3.386359,-2.711311,0.192924,-2.372341,8.728148,-5.866445,-2.641413,5.127600,-2.494546,-3.974101,4.483979,9.223383,8.809395,9.686240,7.810913,-4.254177,8.784801,-2.414870,4.048284,7.197664,6.768989,7.264872,-1.699551,-2.629979,-8.229960,-8.760261,-1.066642,-9.467901,-3.465537,4.726102,-6.715467,9.712453,-0.740845,-3.284446,-3.663329,-2.438871,4.927243,-2.367960,-2.572233,-3.857051,6.701908,-3.255697,7.384736,-9.803692,-0.086523,8.253544,1.153889,6.739358,1.721439,-9.460114,7.330569,9.978801,-1.746427,-0.708331,-5.750989,7.815632,-2.454907,3.014125,-7.331288,4.293969,6.865349,0.565282,7.210656,7.202752,-3.959297,-6.974419,-6.201664,5.253445,1.070451,-3.445683,-7.845494,-7.699696,3.306503,-1.336231,1.309857,0.975360,4.601057,3.666986,9.098856,9.258543,-3.012919,6.028289,9.877755,1.734175,-6.094265,-2.261651,5.361970,6.722499,-2.588446,5.784300,0.196462,-2.365056,5.084258,0.380155,-0.109431,2.734861,6.801306,-0.322782,3.698433,8.081883,6.068622,-6.314263,-0.712325,1.292677,-8.583222,-4.949691,5.003795,-3.476383,7.624688,3.285685,-4.635498,-4.774786,0.392596,-6.412778,9.746813,7.667718,2.283421,0.029679,3.300857,-1.075479,8.093278,-8.398283,0.773590,-1.586963,-1.332700,8.546927,-2.425426,-1.298530,-8.452908,-0.331337,8.511524,-0.227294,8.004381,-6.078836,-4.200163,-9.268484,-9.783968,1.531092,7.136767,-3.720089,4.954576,-0.215992,2.609549,-0.298671,0.781515,4.464542,-2.583038,9.300296,-3.404254,-2.191910,-9.136018,-4.890677,5.936723,1.021700,6.688916,4.236080,2.828191,-8.473137,-4.532123,-7.972180,0.153905,-3.226946,4.430707,-1.312149,-1.655916,-9.039731,0.202245,8.905542,-3.927253,-2.164740,-8.123379,8.161394,8.909752,-0.053255,-0.456865,-9.178933,7.549382,5.874232,-1.596143,-4.481152,-5.668798,-6.174441,7.921763,0.065831,-6.452675,-2.120473,8.933871,-6.325428,4.640593,-8.811461,4.766510,-9.290919,-1.325928,6.684698,7.960766,6.237404,-3.548679,9.159108,0.273981,-8.224672,-9.423978,-2.730274,-2.470335,3.431878,6.058903,4.223332,-9.377739,9.184911,0.042588,9.102568,-6.111953,-6.392122,-3.804005,6.110786,-3.168799,2.693977,-2.437644,-1.096867,-1.261802,-4.251439,-2.785299,-3.851482,7.469546,6.256855,-5.994942,0.071402,4.016959,-2.361790,-1.522072,5.214448,1.021316,1.571820,-6.723304,-6.692627,7.398260,-2.121068,-5.234014,-2.487101,6.721720,-9.305200,6.953624,-1.249277,9.966375,-9.549931,-2.643873,9.312513,7.876929,5.098559,-9.679510,-7.341961,3.533414,9.574952,-4.970420,7.735948,3.167052,9.042613,-6.148895,3.736075,-6.905877,6.760190,4.281283,-6.104258,6.334488,-2.136473,2.676533,-1.316465,-1.851134,-0.136528,3.112071,-8.216599,9.405765,0.145656,0.695863,-7.360265,0.075239,6.174702,-9.088708,4.845288,2.988700,2.425962,-7.529796,3.057749,-9.883718,9.081650,-9.155082,-2.955245,-9.636981,4.880624,9.385603,7.052467,6.546040,3.103939,2.930163,7.413516,7.258692,0.676096,-1.455012,-4.652962,3.748314,3.443015,2.480106,8.876861,8.586269,4.721762,-6.560765,8.427642,1.235670,2.480166,8.872312,-2.435004,-7.830729,7.578943,-4.262720,0.548344,4.865555,6.660864,-0.843046,-7.066060,0.252032,-6.343719,9.380405,3.097517,1.977661,4.884417,-1.574087,0.632041,9.980584,8.024524,-2.135075,5.902740,3.930395,-9.126784,-0.012378,-7.666943,-8.645746,9.806729,-9.551650,4.570902,-7.276339,4.385861,-2.804539,6.611037,8.258667,0.819361,9.685579,1.570541,-3.469414,-5.156494,0.216653,-9.663151,-1.975003,9.199522,8.031266,-1.703787,8.945522,-9.786760,-2.329778,4.290909,-3.876609,0.527108,-9.268028,5.474338,-4.779346,0.205666,-4.963205,4.231859,0.693531,8.482925,5.598207,-7.833626,8.894202,-4.999725,-1.918901,0.982501,6.543504,-2.170495,-0.809078,-5.500926,-2.074669,-8.284531,8.981669,9.444391,-8.012237,3.183219,-9.338321,-5.906290,-6.701924,2.547789,-8.822771,-6.129757,5.049133,2.714623,-0.443647,-5.769323,2.192924,2.712791,-9.746339,-7.069787,6.607185,5.446789,4.770290,-4.476432,-9.060323,8.492387,-9.705070,-7.931528,-0.493883,5.820386,3.006125,9.472887,-3.595192,-9.377966,1.614457,1.783221,-8.400394,-4.881948,-8.960674,-5.020760,-8.092361,-9.339194,0.292890,-6.948793,-1.499598,-1.497127,0.933470,3.270046,-5.964043,1.747302,-3.185847,-5.011075,1.838421,-0.764762,2.583052,-8.539970,-7.570995,3.390256,-8.310126,-5.195298,1.519991,-4.248976,-9.058786,7.621990,6.995427,3.064232,3.170133,2.250558,-1.371530,2.410335,-1.162063,-4.719384,-9.567010,-2.320367,8.362271,0.747386,5.123923,-4.168711,8.306918,-8.398812,-7.068540,-3.646525,6.485238,-6.199024,-5.224995,-8.116325,0.491114,6.092035,-7.354675,-9.121383,-5.561161,-1.836849,-1.887621,-4.672227,-9.129890,-3.276632,-3.116371,5.241735,-3.543800,5.013467,8.119075,4.925524,-0.676256,-5.199160,-0.512161,0.728873,-4.051642,-2.297817,-5.629363,0.614914,9.620056,2.250974,-9.038272,-2.871952,-6.401390,4.602104,1.334309,-3.726509,-7.680346,-9.481779,-7.583934,7.839158,3.771634,8.983167,-5.690343,6.711193,-9.643518,0.549783,8.773722,-6.614641,-1.329770,5.671143,-0.693689,0.912155,-2.254069,-1.633719,8.089582,9.664818,0.425274,-6.204768,5.243557,-3.351519,-0.873096,8.831994,9.696102,1.450283,0.574285,7.857159,5.184270,-6.261734,-8.134762,-7.525955,9.240547,-6.279730,-1.578754,-0.768615,-1.546974,6.847246,8.044430,-1.979799,-2.548341,-8.471842,-6.251396,-1.108833,-8.641815,0.384052,7.952407,6.067117,-8.030900,1.537212,-3.401238,-3.041862,-2.761180,-1.992946,-3.489175,-5.188104,-5.915977,9.392116,-7.608940,-1.854936,-3.365938,2.464857,2.257331,-6.474408,4.868951,-6.931241,-9.363776,-7.851383,9.963741,-2.054393,-8.156603,-3.413005,2.116508,8.892344,6.023316,-1.346243,-9.342714,1.751184,-4.172009,4.944456,-3.154326,-6.869843,-2.209132,7.883874,2.910502,-6.126304,7.456043,-1.900968,-1.635912,-7.078089,-8.226352,8.234034,1.064428,-8.584969,3.980450,7.875502,-9.032798,-5.511117,-5.947155,-7.628962,0.779166,5.755434,2.100958,6.682212,-4.897427,-7.736807,-8.666031,8.431622,-3.539675,-7.380668,4.521498,0.908658,3.381135,-0.978664,-8.843934,0.097085,9.023047,-7.016029,-6.171042,-0.158948,2.155823,1.207689,9.544859,1.547771,7.614331,3.247255,7.226646,-8.812607,-5.494124,0.636143,9.949342,-1.694764,8.653641,3.778478,-3.810650,-6.542547,-6.263229,7.734146,-6.722619,-6.403004,-2.537389,-2.077437,-6.601123,-4.078561,-3.729780,4.002741,-6.895290,-9.896266,-6.446255,-8.625059,-9.184186,8.283962,-2.815073,-9.724484,6.259426,-9.675798,-3.591118,-7.681504,0.099120,6.588478,-1.512256,1.424468,-9.898330,-8.429265,-9.062993,5.033004,-5.655166,7.955195,2.898662,9.803776,-2.488395,5.133672,8.904323,-9.218068,-5.881981,-8.954717,-6.956600], dtype = "float32")#candidate|9420|(1584,)|const|float32
var_9421 = relay.var("var_9421", dtype = "float64", shape = (48,))#candidate|9421|(48,)|var|float64
call_9419 = relay.TupleGetItem(func_9366_call(relay.reshape(const_9420.astype('float32'), [12, 12, 11]), relay.reshape(var_9421.astype('float64'), [48,]), ), 5)
call_9422 = relay.TupleGetItem(func_9369_call(relay.reshape(const_9420.astype('float32'), [12, 12, 11]), relay.reshape(var_9421.astype('float64'), [48,]), ), 5)
output = relay.Tuple([call_9408,call_9419,const_9420,var_9421,])
output2 = relay.Tuple([call_9409,call_9422,const_9420,var_9421,])
func_9443 = relay.Function([var_9421,], output)
mod['func_9443'] = func_9443
mod = relay.transform.InferType()(mod)
var_9444 = relay.var("var_9444", dtype = "float64", shape = (48,))#candidate|9444|(48,)|var|float64
output = func_9443(var_9444)
func_9445 = relay.Function([var_9444], output)
mutated_mod['func_9445'] = func_9445
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7872_call = mod.get_global_var('func_7872')
func_7873_call = mutated_mod.get_global_var('func_7873')
call_9471 = relay.TupleGetItem(func_7872_call(), 0)
call_9472 = relay.TupleGetItem(func_7873_call(), 0)
func_9384_call = mod.get_global_var('func_9384')
func_9387_call = mutated_mod.get_global_var('func_9387')
const_9508 = relay.const([1.267306,4.040682,-6.159560,8.652660,3.006602,-5.750065,-4.931610,-2.809020,-9.607273,-4.224772,4.403697,-2.553353,7.219895,4.017741,6.217384,4.951205,0.466525,-8.535458,2.203117,2.978622,5.797946,0.369729,1.738572,8.878718,-9.313671,-1.542838,1.376685,-4.373539,9.850784,-6.726997,-8.318946,0.123478,-6.916681,5.851670,-2.054783,1.587953,0.318682,2.511765,-9.988487,-9.169261,-8.267859,-7.759164,-6.948574,-7.711838,-7.997520,-9.997955,-4.336569,-0.219066,-5.583524,4.124161,-1.218132,-0.983616,3.686833,6.782523,2.189440,-5.760621,-8.586569,7.689128,5.281213,-1.920175,-9.369921,5.881318,-8.053646,-3.090956,4.335109,8.434909,-3.679754,5.108465,-7.565146,9.393537,6.199934,1.450357,0.944443,-7.454858,7.248658,-6.656760,1.873255,-7.014539,-9.337317,-7.589087,-1.368541,8.135943,-5.989285,-4.340726,6.130352,-5.024109,3.399579,-8.282077,-3.451439,-5.915788,6.743265,-2.150189,-5.938094,8.375653,2.229729,-2.027236,0.907150,-1.970423,9.857134,-1.125630,-0.565409,5.924393,8.446462,-5.851434,-3.317776,5.290457,-9.216674,-2.102320,-2.617689,8.841943,-1.323023,-4.789718,4.298645,9.984955,3.481251,-4.128033,-3.958420,-5.790521,9.432922,8.507910,3.420241,-6.106994,-2.322178,-0.714594,-2.232030,-7.721672,1.306878,-1.807884,0.783139,4.103164,-1.932562,1.119952,5.912102,-6.369186,-1.654735,-7.333607,-6.743877,1.113720,-8.792890,9.634483,8.116160,0.454526,-7.814224,-1.444029,1.248719,8.486026,8.859845,-4.469669,-6.564392,7.715369,-1.517100,-3.172781,-4.860688,-7.945520,2.051333,9.445997,0.023704,6.126427,2.727342,-7.865517,-5.114406,-8.682131,-1.998294,-6.001262,0.340155,7.763458,-7.805445,-8.711644,-1.412980,8.191095,-0.461713,-5.370226,6.093972,-9.011515,1.557705,0.610937,-7.541970,1.818000,-4.311267,7.518322,-5.310437,7.275240,-3.479292,8.877934,-3.897899,-9.493333,-1.284079,0.866049,-5.734086,-5.595886,-7.642046,0.119153,2.635944,7.814084,3.126977,6.960426,2.679281,-4.316846,-6.269057,-9.153831,-2.537253,3.066283,-7.381758,-5.414754,-0.352510,-1.529480,-3.308583,2.499830,3.986273,0.352032,7.311351,-4.418979,9.672566,-8.287629,-8.075678,3.287497,5.421313,9.227200,3.214397,2.599465,-1.411805,-5.572377,4.851059,-6.434838,-0.817258,9.264692,-5.074008,-9.711774,-7.390029,3.555294,-5.303528,6.799130,-1.623138,1.610442,-6.094222,4.371202,-6.559574,4.357707,-8.421643,-7.597841,3.175465,-1.271982,7.004392,-5.901259,-2.052621,3.129736,-9.296505,-0.042430,7.510768,-8.001207,-6.816846,5.867302,9.962635,9.979398,-6.253474,-1.674707,8.966735,-0.716645,5.725097,9.252778,-2.096868,-4.397296,1.299996,3.068356,-8.379748,7.817508,-3.268881,-9.184542,3.164998,2.370803,7.923349,-2.206800,-4.236404,-9.218283,5.915280,7.748595,-3.847134,-8.678963,2.563267,-7.027434,0.150175,-8.665318,-2.888298,8.555315,-2.913884,-0.155452,-4.660536,8.800232,5.853011,-9.222998,2.723824,-0.966320,-2.860117,0.606657,3.230909,2.531580,0.897756,-8.638712,-1.435100,-4.008533], dtype = "float32")#candidate|9508|(300,)|const|float32
call_9507 = relay.TupleGetItem(func_9384_call(relay.reshape(const_9508.astype('float32'), [5, 12, 5])), 3)
call_9509 = relay.TupleGetItem(func_9387_call(relay.reshape(const_9508.astype('float32'), [5, 12, 5])), 3)
func_7722_call = mod.get_global_var('func_7722')
func_7723_call = mutated_mod.get_global_var('func_7723')
call_9513 = relay.TupleGetItem(func_7722_call(), 0)
call_9514 = relay.TupleGetItem(func_7723_call(), 0)
func_1421_call = mod.get_global_var('func_1421')
func_1423_call = mutated_mod.get_global_var('func_1423')
const_9519 = relay.const([8,3,2,-2,6,10,3,8,-3,3,3,-8,-8,5,4,-9,10,2,7,-9,-9,2,2,-2,-2,-4,9,-9,10,-2,-6,1,-2,-7,6,-5,-4,8,6,8,7,4,6,4,7,-4,-8,6,7,-10,-9,7,1,-7,7,6,1,-9,-3,-5,-8,3,4,-3,-3,6,-7,5,-10,6,2,-9,-10,-2,-1,3,-9,-3,-6,-6,1,-2,4,-8,-4,2,-4,10,1,-7,2,2,-6,4,3,-10,-9,5,-2,10,7,3,-6,7,7,-10,6,8,-6,4,10,6,-6,7,-5,-5,10,6,-1,5,-9,-4,-8,-6,5,-6,4,6,-2,-10,-9,-9,-3,7,10,-1,-9,-5,-9,3,-1,-1,-8,4,8,-9,1,8,-5,-9,8,-5,8,4,-10,-3,6,5,9,-6,-5,5,-4,-1,9,3,3,4,7,9,7,-8,4,-8,3,1,10,-6,-9,1,-9,5,4,1,1,1,-2,10,-4,-8,-4,-9,-4,-9,1,1,8,-10,-7,-6,-1,-6,-7,8,7,-2,-4,7,3,-9,10,2,7,-2,5,3,-6,8,5,7,-1,-5,10,-2,-2,7,4,1,5,6,-3,5,-7,-3,8,-6,-10,5,7,-3,2,-2,-3,-6,8,6,10,-9,4,-1,3,-5,-10,-3,10,5,-9,-8,10,9,-7,-7,8,-6,-9,7,4,-5,2,1,-7,6,1,-6,-8,-9,4,4,4,-4,-8,-5,3,-9,1,9,-4,1,8,8,-6,3,-3,-10,8,9,5,8,-7,2,-7,-5,-5,8,-6,9,3,2,10,4,7,2,9,-1,7,2,6,6,-4,5,3,3,-10,4,8,6,1,-9,-9,5,-8,1,4,7,4,-9,-10,2,7,9,-4,-3,4,3,4,1,-5,-8,-2,9,7,-2,10,6,-10,3,10,8,7,7,-9,5,-5,-3,8,-4,9,1,-1,-5,1,-6,-5,5,6,-5,-4,-7,5,-7,-3,7,8,9,6,4,-3,8,-5,-10,-7,-3,7,-10,-1,3,-8,6,-10,-7,1,4,2,-4,7,7,10,4,2,-10,-1,-9,-5,6,9,2,7,-4,7,9,1,-7,7,-8,5,4,-3,6,-7,3,-10,-4,10,9,5,3,-1,6,-4,-7,-2,-5,-3,3,5,-3,-1,-3,6,-2,7,6,-8,8,-7,-10,-7,4,-10,-9,2,-2,-3,-4,5,10,1,-2,10,-2,-6,-8,9,-2,-10,4,4,-3,-8,-6,4,7,-3,8,-2,2,1,10,3,-9,-2,3,6,3,-6,9,6,-9,8,6,-6,-7,-10,8,-8,6,-7,-9,6,7,2,4,-5,-9,-8,2,-5,2,-5,-9,-5,-4,-6,5,5,-6,1,7,4,-8,2,8,-6,-5,3,5,-10,2,2,-10,1,-5,9,-8,-9,7,4,-3,10,-5,-3,-8,-7,-1,-10,-7,-8,-3,6,1,-10,1,6,6,1,6,10,-6,-6,10,-7,-7,1,3,-3,-7,3,-7,-1,4,6,7,-7,7,-2,-9,3,-8,-10,-4,-5,6,-8,-8,9,4,-5,-5,7,-8,-8,2,5,-8,10,7,-2,7,9,-2,9,-6,-6,-7,-3,-4,1,4,5,-2,5,-2,4,8,5,4,5,-10,-2,-6,1,-8,5,2,-6,-4,-4,10,4,-1,-10,-4,-6,-8,1,-3,-3,9,-5,-5,-3,-3,-5,-5,5,-9,3,-1,-8,-5,-10,-1,1,10,-1,8,6,-3,6,-2,-5,7,-6,7,5,3,2,10,-6,-1,5,-2,-1,-2,4,2,-6,-9,5,-6,-10,8,5,-5,-6,7,-4,-4,6,5,-9,3,-6,-8,8,3,-3,10,-7,-8,-9,-8,-5,-1,-8,5,5,-5,-10,-4,-6,-6,6,-8,1,9,2,7,10,10,-8,7,3,-6,6,-1,5,-3,5,5,7,10,-1,-7,-6,-1,4,-8,4,7,-4,-4,8,-9,9,1,-9,-7,7,-5,3,-7,-6,3,1,-9,10,3,1,3,9,7,-4,-10,8,-3,-1,-7,9,8,10,6,-1,8,-2,-1,4,9,-2,-8,-6,1,-5,-6,-8,4,-4,-8,1,4,-6,4,-4,-9,-4,7,7,-7,6,-7,-10,2,3,-8,5,-8,8,2,-7,-8,-7,-10,5,-9,3,-7,8,8,9,-6,7,-7,9,8,-2,6,-1,6,-6,-9,10,3,-5,-9,-6,-1,2,9,-1,7,3,-5,-10,2,-5,-6,-9,2,1,-10,-10,-3,1,4,-10,5,2,10,10,-1,-5,9,7,7,7,-6,-10,-7,-2,-3,10,4,10,8,-5,5,6,-5,-7,1,-2,1,8,5,9,-10,7,-4,9,-5,1,-6,5,-1,4,8,-1,-9,9,6,-1,-8,2,5,6,-8,1,-7,5,-1,-10,-8,10,-7,-1,-6,1,3,7,-7,-10,-1,6,7,4,2,-7,-4,-8,-5,-5,-5,4,-2,-8,4,-3,-8,3,-2,-3,2,7,-8,-8,-5,-3,-1,-10,6,3,5,6,-5,-7,7,-3,2,6,4,3,7,2,3,-3,10,-10,10,-8,-7,1,-7,-5,-2,-10,-3,8,9,7,3,-10,4,10,7,8,-5,8,-3,2,1,4,7,5,-5,7,-2,3,-8,-1,-2,-9,-10,-10,9,10,6,-6,-7,10,-3,10,-3,-3,-5,-7,5,-6,4,-10,10,5,-4,-10,3,-3,-6,-4,-5,1,3,-6,6,5,-10,3,5,-7,-2,-9,8,1,-4,-4,-2,-8,-4,3,-8,10,-3,7,4,8,2,10,9,5,-6,2,-5,5,7,-9,-6,3,1,-1,6,10,-5,10,-2,1,6,-10,-6,-10,2,-9,8,2,-2,6,-10,-5,-7,-1,2,8,7,-8,-2,-5,-6,3,-6,3,5,5,-8,-2,-5,-3,-5,4,-1,-5,9,-7,4,-10,4,8,5,-7,-6,-7,2,-10,2,-10,-6,-6,-7,-1,5,-1,5,10,-5,-2,-6,1,-8,8,5,-5,-5,6,-5,2,6,-9,-5,2,8,2,-4,3,-6,-6,-8,-1,-3,4,-4,10,-10,-5,-9,-6,3,-2,-4,3,-5,2,7,8,-2,9,-7,-8,-7,-1,-9,5,8,3,10,2,2,-3,-7,10,-3,5,-10,-6,-5,-5,-7,-8,-6,7,-4,3,2,6,7,1,7,-2,9,3,-7,6,-7,-1,5,10,6,7,1,9,3,10,6,-6,9,6,-10,-4,-9,1,-2,5,-4,5,-10,-5,-4,3,-4,4,-10,3,-5,8,-9,-1,-2,8,3,-3,-8,3,3,4,7,-3,8,-9,-1,10,8,1,-10,-5,-2,5,7,4,6,-7,5,9,6,-8,-9,-8,-2,6,-8,4,-1,2,6,10,-1,4,9,-9,3,3,-6,8,10,9,-7,9,-3,-8,4,-1,-6,-3,10,9,1,-7,3,-4,-1,4,-7,10,2,9,7], dtype = "int8")#candidate|9519|(1320,)|const|int8
call_9518 = func_1421_call(relay.reshape(const_9519.astype('int8'), [11, 8, 15]))
call_9520 = func_1421_call(relay.reshape(const_9519.astype('int8'), [11, 8, 15]))
output = relay.Tuple([call_9471,call_9507,const_9508,call_9513,call_9518,const_9519,])
output2 = relay.Tuple([call_9472,call_9509,const_9508,call_9514,call_9520,const_9519,])
func_9526 = relay.Function([], output)
mod['func_9526'] = func_9526
mod = relay.transform.InferType()(mod)
mutated_mod['func_9526'] = func_9526
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9526_call = mutated_mod.get_global_var('func_9526')
call_9527 = func_9526_call()
output = call_9527
func_9528 = relay.Function([], output)
mutated_mod['func_9528'] = func_9528
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6588_call = mod.get_global_var('func_6588')
func_6589_call = mutated_mod.get_global_var('func_6589')
call_9540 = func_6588_call()
call_9541 = func_6588_call()
output = relay.Tuple([call_9540,])
output2 = relay.Tuple([call_9541,])
func_9542 = relay.Function([], output)
mod['func_9542'] = func_9542
mod = relay.transform.InferType()(mod)
output = func_9542()
func_9543 = relay.Function([], output)
mutated_mod['func_9543'] = func_9543
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7602_call = mod.get_global_var('func_7602')
func_7603_call = mutated_mod.get_global_var('func_7603')
call_9597 = relay.TupleGetItem(func_7602_call(), 0)
call_9598 = relay.TupleGetItem(func_7603_call(), 0)
output = relay.Tuple([call_9597,])
output2 = relay.Tuple([call_9598,])
func_9603 = relay.Function([], output)
mod['func_9603'] = func_9603
mod = relay.transform.InferType()(mod)
output = func_9603()
func_9604 = relay.Function([], output)
mutated_mod['func_9604'] = func_9604
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9199_call = mod.get_global_var('func_9199')
func_9201_call = mutated_mod.get_global_var('func_9201')
call_9622 = func_9199_call()
call_9623 = func_9199_call()
const_9639 = relay.const([[[-7.607405,-8.401151,-1.086187,-3.447741,-3.617018,6.425354,-6.966897,9.065603,-2.120525,-7.841557,-7.693028,-1.355404,0.013290,2.397310,-1.989052,-2.086140],[7.770327,-8.375252,5.177853,-1.027987,-5.961699,-9.096217,0.712716,-4.835176,9.967876,-4.437062,3.362327,0.733843,9.990189,-8.220391,-4.794929,-6.860429],[-6.789930,4.782202,0.149449,6.100703,4.596085,7.234488,3.838223,-7.590401,-6.548675,6.533898,-0.708654,-4.453380,3.236975,2.013461,7.530800,-9.027864],[4.652432,8.541323,9.152954,-1.449760,-0.492764,4.583058,-4.336289,5.861789,8.510712,-7.640127,6.278512,3.966938,-9.987328,-0.070355,-1.401251,4.999133],[9.044865,-6.913564,0.253654,3.535677,-2.877207,-8.357637,8.602601,5.491883,-8.102852,-6.910162,-4.094472,-3.750560,-7.491025,-4.635702,6.548919,-8.330060],[8.945927,-2.109743,-5.716184,-5.404156,-1.152990,7.137030,-5.540880,-1.122012,-7.845682,1.759705,-4.231266,4.738271,-8.298760,3.184934,3.625292,-5.889283],[0.993548,-8.949646,0.563664,-3.595571,8.968236,8.767322,0.629636,-2.434195,-7.915973,-6.941125,9.969092,6.683543,-5.595969,-1.811635,6.259760,-3.629600],[1.577769,-6.004922,7.727379,-5.493937,-6.915863,3.437931,-9.110283,5.374901,4.584878,1.545966,-6.053206,-8.969123,-9.894789,-5.940343,-9.913711,-9.581191],[4.106017,-4.701875,9.577342,8.241764,-3.415757,7.921258,-4.114766,5.987323,4.427971,2.249526,0.586429,-3.416047,-6.808909,2.471665,9.855692,-4.805937]],[[-6.906494,0.266915,2.408878,2.669957,5.409229,-2.354460,-7.561287,9.795326,9.070392,2.202804,0.188182,-1.518934,-2.491057,-2.357755,9.409157,5.297299],[6.355925,6.074447,4.214757,-8.824945,-0.472561,3.913300,-5.156107,-0.515424,1.793917,-4.242862,9.127413,-5.273377,0.062181,9.071642,0.251623,-3.557561],[7.309676,7.838538,2.526030,-8.838611,1.658525,-1.590046,-9.885888,9.298671,-8.659887,-4.176010,-0.382748,0.354120,4.767391,-0.830266,3.048436,8.780620],[-8.670930,-9.759241,-1.607757,7.256667,-7.279109,4.478299,-9.838293,-1.925170,5.089528,-6.545380,4.757415,6.124890,-9.915819,0.816233,-3.860081,0.203478],[3.447065,-8.648492,-0.371543,0.653714,6.978624,5.009124,5.770504,-4.576330,8.211627,-7.641783,7.804540,6.687831,2.964371,6.267661,-2.189044,7.302876],[-5.699895,6.301268,1.604159,2.808607,-3.500484,7.299879,-5.763411,-7.629553,-7.957414,-1.367190,-0.365180,-3.384935,-0.151390,3.901792,-6.010739,1.927478],[2.367244,2.199379,6.051108,6.088337,6.607341,-4.234923,0.897373,9.571491,9.671640,5.051372,-0.817015,-5.595767,2.717118,8.894884,-2.416364,9.623325],[6.114476,-2.670269,3.179058,-1.816088,-3.984220,6.937663,3.423747,-4.498374,-9.973160,-4.616641,9.122496,-9.264299,7.405252,-1.371465,-7.736968,3.662962],[-0.544745,-3.824952,0.658634,-7.784428,1.784497,2.592498,5.234217,-6.952456,7.489594,-9.983411,3.692194,-2.008051,-3.322896,-0.279517,-0.033151,-7.716271]],[[6.889877,-2.439975,-9.864595,1.335782,-3.787988,-2.154308,-8.483830,-7.485843,-7.730963,-0.447626,7.918329,-7.041569,2.692655,-8.177564,-9.639054,-7.672929],[4.216636,-3.207788,6.336917,-6.640019,0.357566,0.999720,8.696273,4.236152,-0.884606,0.318524,-5.568091,5.235204,-4.934088,5.351919,3.267629,-0.464476],[2.561734,-2.897097,-4.972102,-5.197255,9.652042,6.759882,1.970495,-1.541974,-0.483367,5.353980,4.206686,-0.394565,-7.420002,-6.531012,7.638107,4.262335],[-2.288343,-9.527304,-9.636372,-6.592396,-7.750319,-6.648485,-0.179751,-4.876247,-4.604240,-7.476441,-0.212742,8.151695,-4.657512,-4.094333,-8.865804,-8.617133],[1.515649,-4.711015,-4.143176,-6.107631,-6.003801,-9.122026,5.568985,-4.945179,6.551940,-3.214079,3.180097,-7.736328,2.212330,-4.886047,-0.141180,-5.269799],[8.116893,7.365408,7.269942,-4.327295,-4.526684,8.279974,5.664570,6.405839,-3.504032,5.499218,5.753428,2.430958,-5.129611,3.066738,7.539198,9.596780],[-7.594322,-0.466039,-9.899113,0.389259,5.680317,-5.008961,-5.243944,6.525456,5.522977,6.128799,6.123951,-8.134456,-2.097761,-1.047356,6.360795,-8.158844],[4.130911,-2.918581,3.771341,-7.079614,-9.924679,-8.193756,9.467175,9.476499,-1.059693,0.464328,2.737254,8.226486,1.466538,8.520931,5.229595,-2.821311],[-2.427088,-3.014892,5.116196,7.212741,-9.257960,-0.123056,9.886341,-1.195386,-3.979755,8.230012,0.837266,4.034072,6.546603,-8.877019,-6.272737,2.596432]],[[8.523483,6.247700,-0.329729,-9.179561,-9.861872,-8.532085,-0.644732,1.497913,1.558545,-0.593264,5.093492,0.581084,7.108688,-4.189625,2.021877,-0.078097],[8.571049,8.201448,-3.448072,-8.057502,-6.470704,5.476471,-8.050734,-2.259195,0.812630,-8.357120,-2.706739,3.849579,4.801002,-7.644552,4.448066,0.732606],[-9.033077,7.392703,-2.966633,8.860286,-7.494582,3.812145,1.000151,-8.217052,1.105804,1.269370,0.010019,2.761611,-9.055066,4.133946,-8.603586,4.200885],[9.552357,-1.085111,-0.191336,-3.948265,-1.644462,0.456482,0.092208,-4.399848,2.036946,4.655451,6.430832,2.049933,-8.039999,0.363010,-3.953110,1.484673],[3.593015,1.277946,3.314112,0.057467,-4.004889,6.301333,-5.526459,-4.048843,3.098209,-6.003937,-5.212009,8.275463,-7.047474,7.127783,0.786325,-8.332900],[-0.806106,-3.852049,-2.829602,8.167216,9.351922,-1.542727,8.111536,9.814445,-7.571850,3.645829,5.110118,1.810252,3.056105,-1.569307,8.782276,-1.971005],[1.010681,5.020743,-7.433139,-6.087460,5.802628,9.066220,0.388616,-3.463599,9.933026,-2.729604,-3.355658,-9.674177,-9.578493,-1.862258,-0.510137,-6.794327],[5.547791,0.698139,-1.746374,8.691706,-3.896343,-3.147726,5.483536,-1.664163,-2.592858,-2.656867,-6.176327,9.905585,4.717954,6.957550,-5.016394,7.313343],[1.443930,0.522064,-6.798828,-3.443082,2.906917,-4.005652,7.745830,5.404079,1.747715,-0.440725,5.314119,2.802754,4.885937,-1.038616,-8.211802,2.318728]],[[-9.698513,7.277847,-1.717579,6.545911,5.683580,-7.234057,-7.013107,-0.931590,0.028354,-4.492088,-4.034314,-6.091758,-8.202274,8.495405,-8.810393,-8.708416],[1.474049,-2.771316,9.181562,-5.257900,0.814283,0.186792,-2.825242,-1.225175,-9.111417,-7.180047,-0.911581,-7.208616,3.535663,2.316559,0.459399,-3.448637],[6.014975,-7.222628,9.835015,0.958684,1.332635,-5.483227,1.748669,-2.322479,4.981780,-8.394791,4.345582,-4.880011,5.695995,-2.712361,-2.436309,1.019978],[6.313946,-2.970912,-8.223842,-0.097197,3.600438,-1.042149,7.382432,-0.787464,0.892569,-7.994924,-5.077959,-4.843109,-7.123445,-6.703254,9.067491,-2.236118],[7.178379,0.341972,1.704154,3.245793,1.639624,1.841440,-3.929791,3.291255,-6.530252,-0.628943,1.185105,-9.216698,-6.672623,-1.088200,6.092964,-7.347782],[6.074761,-8.241522,7.732108,4.467434,9.413518,3.058678,4.926740,-4.733353,-4.033573,-2.629548,4.983934,0.139571,1.108016,9.318569,3.000061,3.194351],[-1.439788,6.372983,9.301754,-5.801220,6.783854,6.594990,-4.014411,-9.699954,-7.293605,-7.512936,-2.918109,5.006189,1.785117,-3.005210,5.750453,-7.911013],[5.225645,0.231724,-8.782743,-2.819471,-0.930156,-3.482408,3.536795,9.601670,4.763747,9.394758,-4.415339,5.673641,6.195020,-6.891150,2.019951,-9.628272],[-0.716126,-5.435414,9.179449,-6.691457,-1.922226,1.263148,0.382183,8.557846,-1.180700,-7.807285,-9.763639,0.902826,2.511803,-3.054339,-0.276843,-1.888235]],[[-1.579164,7.433715,5.652131,3.320362,2.858428,0.892486,-9.791968,6.567846,9.895838,1.305048,-4.560513,9.592756,-7.458703,-4.144518,3.335914,9.570861],[9.589581,3.280120,-3.752740,-4.955501,8.313935,-1.963002,9.950839,2.273030,-1.364305,-2.101481,0.822351,-4.544968,4.854593,-4.803442,9.237749,-1.067847],[-9.768990,9.011761,2.735517,-2.296148,6.089048,-4.134304,8.965127,2.780166,-6.165318,-7.850886,-7.038511,2.767380,1.418895,-7.627232,1.956549,-4.320951],[-5.753730,-9.508108,1.283068,5.159521,4.627058,5.576352,6.608820,-4.409533,-4.627958,6.146213,-7.272380,-5.413717,-4.179710,-2.446526,-5.481649,6.478374],[2.415833,-5.322828,1.409706,1.593141,7.717423,3.191140,-7.276284,-8.140452,-1.684070,1.776944,-3.329467,-5.848330,-0.721632,-2.138739,1.312892,4.921952],[2.809361,-5.275875,1.917600,0.020976,-2.671666,7.384219,8.372376,-8.935538,5.113193,-3.387989,4.604328,-1.950525,3.168556,-5.014549,2.534422,3.141732],[1.836573,0.066407,-4.781069,5.021742,8.901937,5.183368,-6.941502,-0.785515,3.274196,8.667537,9.192026,-3.781504,-8.775033,-5.109138,-2.312148,-9.384078],[1.506745,1.000152,5.818424,-3.951431,5.286524,8.186937,7.251998,-4.899222,-7.477295,-7.020376,1.557808,-6.743376,3.450764,6.427344,3.510056,-9.585322],[0.046548,-8.080296,-9.630768,0.239684,-2.504313,-7.302962,-1.952716,-8.526639,-1.618298,8.257861,6.480803,-1.129036,-9.187505,-9.494399,9.942177,-4.718768]]], dtype = "float32")#candidate|9639|(6, 9, 16)|const|float32
bop_9640 = relay.bitwise_xor(call_9622.astype('uint16'), const_9639.astype('uint16')) # shape=(6, 9, 16)
bop_9643 = relay.bitwise_xor(call_9623.astype('uint16'), const_9639.astype('uint16')) # shape=(6, 9, 16)
func_8589_call = mod.get_global_var('func_8589')
func_8591_call = mutated_mod.get_global_var('func_8591')
call_9655 = relay.TupleGetItem(func_8589_call(), 0)
call_9656 = relay.TupleGetItem(func_8591_call(), 0)
output = relay.Tuple([bop_9640,call_9655,])
output2 = relay.Tuple([bop_9643,call_9656,])
func_9661 = relay.Function([], output)
mod['func_9661'] = func_9661
mod = relay.transform.InferType()(mod)
output = func_9661()
func_9662 = relay.Function([], output)
mutated_mod['func_9662'] = func_9662
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5555_call = mod.get_global_var('func_5555')
func_5556_call = mutated_mod.get_global_var('func_5556')
call_9663 = func_5555_call()
call_9664 = func_5555_call()
output = relay.Tuple([call_9663,])
output2 = relay.Tuple([call_9664,])
func_9667 = relay.Function([], output)
mod['func_9667'] = func_9667
mod = relay.transform.InferType()(mod)
output = func_9667()
func_9668 = relay.Function([], output)
mutated_mod['func_9668'] = func_9668
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6755_call = mod.get_global_var('func_6755')
func_6757_call = mutated_mod.get_global_var('func_6757')
call_9749 = relay.TupleGetItem(func_6755_call(), 0)
call_9750 = relay.TupleGetItem(func_6757_call(), 0)
output = call_9749
output2 = call_9750
func_9763 = relay.Function([], output)
mod['func_9763'] = func_9763
mod = relay.transform.InferType()(mod)
output = func_9763()
func_9764 = relay.Function([], output)
mutated_mod['func_9764'] = func_9764
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9796 = relay.const(8.361895, dtype = "float64")#candidate|9796|()|const|float64
var_9797 = relay.var("var_9797", dtype = "float64", shape = (9, 15, 1))#candidate|9797|(9, 15, 1)|var|float64
bop_9798 = relay.floor_mod(const_9796.astype('float64'), var_9797.astype('float64')) # shape=(9, 15, 1)
func_6847_call = mod.get_global_var('func_6847')
func_6848_call = mutated_mod.get_global_var('func_6848')
call_9802 = relay.TupleGetItem(func_6847_call(), 0)
call_9803 = relay.TupleGetItem(func_6848_call(), 0)
func_9242_call = mod.get_global_var('func_9242')
func_9246_call = mutated_mod.get_global_var('func_9246')
var_9813 = relay.var("var_9813", dtype = "float32", shape = (6, 100))#candidate|9813|(6, 100)|var|float32
const_9814 = relay.const([9.851273,1.981290,3.692031,-5.599136,9.612808,-9.159983,1.352955,-9.791416,-7.873604,9.202290,-8.600329,0.027032,7.286094,-3.908293,-6.056183,-6.100669,9.839118,-3.725774,8.507970,4.402137,8.211591,-3.191424,8.253562,7.114688,3.188285,-9.763729,-6.362760,4.214514,-8.640973,-9.356962,1.926640,-8.036750,0.620698,3.849811,-4.194970,6.211365], dtype = "float32")#candidate|9814|(36,)|const|float32
call_9812 = relay.TupleGetItem(func_9242_call(relay.reshape(var_9813.astype('float32'), [10, 5, 12]), relay.reshape(const_9796.astype('uint8'), []), relay.reshape(const_9814.astype('float32'), [36,]), ), 1)
call_9815 = relay.TupleGetItem(func_9246_call(relay.reshape(var_9813.astype('float32'), [10, 5, 12]), relay.reshape(const_9796.astype('uint8'), []), relay.reshape(const_9814.astype('float32'), [36,]), ), 1)
func_7787_call = mod.get_global_var('func_7787')
func_7788_call = mutated_mod.get_global_var('func_7788')
call_9817 = func_7787_call()
call_9818 = func_7787_call()
uop_9826 = relay.sqrt(var_9797.astype('float64')) # shape=(9, 15, 1)
output = relay.Tuple([bop_9798,call_9802,call_9812,var_9813,const_9814,call_9817,uop_9826,])
output2 = relay.Tuple([bop_9798,call_9803,call_9815,var_9813,const_9814,call_9818,uop_9826,])
func_9830 = relay.Function([var_9797,var_9813,], output)
mod['func_9830'] = func_9830
mod = relay.transform.InferType()(mod)
mutated_mod['func_9830'] = func_9830
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9830_call = mutated_mod.get_global_var('func_9830')
var_9832 = relay.var("var_9832", dtype = "float64", shape = (9, 15, 1))#candidate|9832|(9, 15, 1)|var|float64
var_9833 = relay.var("var_9833", dtype = "float32", shape = (6, 100))#candidate|9833|(6, 100)|var|float32
call_9831 = func_9830_call(var_9832,var_9833,)
output = call_9831
func_9834 = relay.Function([var_9832,var_9833,], output)
mutated_mod['func_9834'] = func_9834
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6588_call = mod.get_global_var('func_6588')
func_6589_call = mutated_mod.get_global_var('func_6589')
call_9902 = func_6588_call()
call_9903 = func_6588_call()
output = call_9902
output2 = call_9903
func_9907 = relay.Function([], output)
mod['func_9907'] = func_9907
mod = relay.transform.InferType()(mod)
mutated_mod['func_9907'] = func_9907
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9907_call = mutated_mod.get_global_var('func_9907')
call_9908 = func_9907_call()
output = call_9908
func_9909 = relay.Function([], output)
mutated_mod['func_9909'] = func_9909
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6847_call = mod.get_global_var('func_6847')
func_6848_call = mutated_mod.get_global_var('func_6848')
call_9912 = relay.TupleGetItem(func_6847_call(), 1)
call_9913 = relay.TupleGetItem(func_6848_call(), 1)
output = relay.Tuple([call_9912,])
output2 = relay.Tuple([call_9913,])
func_9915 = relay.Function([], output)
mod['func_9915'] = func_9915
mod = relay.transform.InferType()(mod)
mutated_mod['func_9915'] = func_9915
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9915_call = mutated_mod.get_global_var('func_9915')
call_9916 = func_9915_call()
output = call_9916
func_9917 = relay.Function([], output)
mutated_mod['func_9917'] = func_9917
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9915_call = mod.get_global_var('func_9915')
func_9917_call = mutated_mod.get_global_var('func_9917')
call_9921 = relay.TupleGetItem(func_9915_call(), 0)
call_9922 = relay.TupleGetItem(func_9917_call(), 0)
output = call_9921
output2 = call_9922
func_9938 = relay.Function([], output)
mod['func_9938'] = func_9938
mod = relay.transform.InferType()(mod)
mutated_mod['func_9938'] = func_9938
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9938_call = mutated_mod.get_global_var('func_9938')
call_9939 = func_9938_call()
output = call_9939
func_9940 = relay.Function([], output)
mutated_mod['func_9940'] = func_9940
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8300_call = mod.get_global_var('func_8300')
func_8301_call = mutated_mod.get_global_var('func_8301')
call_9983 = func_8300_call()
call_9984 = func_8300_call()
output = relay.Tuple([call_9983,])
output2 = relay.Tuple([call_9984,])
func_9990 = relay.Function([], output)
mod['func_9990'] = func_9990
mod = relay.transform.InferType()(mod)
output = func_9990()
func_9991 = relay.Function([], output)
mutated_mod['func_9991'] = func_9991
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6055_call = mod.get_global_var('func_6055')
func_6057_call = mutated_mod.get_global_var('func_6057')
call_9999 = relay.TupleGetItem(func_6055_call(), 1)
call_10000 = relay.TupleGetItem(func_6057_call(), 1)
output = call_9999
output2 = call_10000
func_10001 = relay.Function([], output)
mod['func_10001'] = func_10001
mod = relay.transform.InferType()(mod)
mutated_mod['func_10001'] = func_10001
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10001_call = mutated_mod.get_global_var('func_10001')
call_10002 = func_10001_call()
output = call_10002
func_10003 = relay.Function([], output)
mutated_mod['func_10003'] = func_10003
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9526_call = mod.get_global_var('func_9526')
func_9528_call = mutated_mod.get_global_var('func_9528')
call_10039 = relay.TupleGetItem(func_9526_call(), 3)
call_10040 = relay.TupleGetItem(func_9528_call(), 3)
uop_10067 = relay.atan(call_10039.astype('float32')) # shape=(3, 9, 16)
uop_10069 = relay.atan(call_10040.astype('float32')) # shape=(3, 9, 16)
func_9052_call = mod.get_global_var('func_9052')
func_9056_call = mutated_mod.get_global_var('func_9056')
const_10072 = relay.const([-3.173904,4.826399,-0.190279,-3.945007,-3.330706,-3.280330,-0.134392,-2.591427,-9.541593,0.963907,7.981755,-4.231877,7.247694,-7.012827,-0.458091,9.379723,9.495732,2.885565,0.691983,-5.603535,-6.663937,5.304012,-5.550936,-1.267553,1.303283,0.103143,4.119635,3.959800,5.390951,-4.819956,9.819377,-5.049336,-7.561823,-7.036675,8.384878,7.842681,-9.425823,6.724099,-3.529376,1.319614,2.464793,4.151271,-2.863885,0.343312,-3.074067,9.091284,7.702219,-3.635337,1.272427,3.395448,7.583575,0.582834,2.790507,3.981173,-1.098564,5.763551,7.728841,-2.731464,0.624778,-7.349524,5.586797,4.511681,5.551489,2.429404,1.855418,-9.037599,7.737504,-4.548165,-2.327696,0.303858,-6.514930,-9.228407,1.711762,4.694149,-4.888771,-2.950178,5.146585,5.073260,7.396945,4.704854,0.122956,3.817745,0.666327,-2.412847,8.332865,-1.262260,-1.443825,-1.329166,-6.752269,8.573603,2.403238,-4.895085,8.961090,9.904685,-8.914845,6.076134,-0.569863,6.045913,-8.841125,0.233058,3.251531,1.490593,-8.508319,4.137277,9.506611,-7.713875,-9.537306,5.418253,-9.238158,-8.438794,-0.066978,-6.199843,-2.680871,-2.497954,5.567969,9.743843,-8.766034,1.777623,-6.895495,4.383616,4.122819,-5.669665,-7.501571,9.311939,-5.935958,-1.660205,-2.581262,-8.722877,-9.896164,8.565774,-5.500109,-9.331188,-4.008496,-6.689048,-8.084467,-9.567913,2.339980,5.879814,4.398292,-7.470068,-5.201548,-0.082704,2.815792,7.038702,7.256085,-4.629861,8.700453,-0.099781,-0.555052,-7.442640,-3.879199,-2.703590,3.121455,-7.927339,-5.417845,8.200466,6.587065,1.716405,-1.217145,-7.101871,-4.607944,1.615212,8.190986,8.965577,-5.009793,-7.923222,-3.477904,-7.441667,-6.917078,-9.583122,3.176668,6.249434,4.102965,-5.029584,7.523289,-2.606782,7.499425,-4.887546,1.109849,-3.523611,9.021781,5.596887,6.484523,-5.326809,-8.948673,-3.754188,-7.425972,-4.680835,0.938419,2.663149,4.662880,-2.375647,8.642186,8.321919,-8.031708,1.091270,-7.303529,7.482267,-6.125641,2.616181,1.171572,4.072145,6.340156,7.904534,-1.597673,2.168831,-2.156393,-7.448884,-8.434433,4.947474,9.450000,9.485366,5.610073,1.834427,-7.203648,-1.025373,-5.434022,7.949448,1.321855,-6.853265,6.629282,3.694952,6.289060,0.489975,8.336691,-6.111674,3.134350,-0.460861,2.500978,1.521921,-9.377600,3.094201,6.535249,-9.493509,8.857575,-3.452960,-2.203973,1.181779,1.009684,-2.334404,6.867777,6.476342,-6.887947,1.569436,2.635346,7.553146,-8.009750,-9.133496,0.647668,-1.302208,-8.005819,2.290323,-3.180378,-5.826058,2.244370,-8.343362,-8.477349,-1.106219,1.215701,-3.729281,-6.637345,-6.839977,-6.813098,-1.945493,9.155050,-6.469552,3.209390,-6.369485,-8.590998,9.549689,8.302254,-9.891317,2.754029,-8.653017,-6.936741,1.947987,-9.468746,2.952208,-3.693362,-9.421277,-0.219666,6.189120,-4.952036,1.889707,4.581043,1.318750,-5.192464,-5.651605,-4.042804,-1.377177,0.217825,1.766835,2.648019,-6.164528,-5.988234,2.637899,7.451393,-6.969986,1.533323,7.813475,-4.530294,9.152136,-5.285694,-6.864949,7.321834,-5.446765,-7.567652,-0.412907,-5.684209,2.458891,-9.195247,-3.275042,-2.003283,8.793400,-8.191901,-7.583357,5.087060,-3.163175,5.142832,-5.448386,6.196927,2.173821,-9.244144,-7.750886,-5.895110,5.802889,-9.663586,-3.560558,-4.478582,-4.164717,-0.383836,8.274028,5.626982,-5.795553,-4.425287,5.425735,0.120297,0.776234,-5.701425,-9.674747,-2.156123,9.154263,6.404541,2.437593,-4.170509,9.328437,-4.874386,-9.046997,-3.996424,-5.660860,-8.191357,-2.864918,-8.551734,2.650480,7.196650,9.396123,-7.965025,4.721589,-2.638789,3.960953,-0.567534,-8.965749,-4.429977,-5.541591,3.821878,4.870202,-3.581903,6.737813,-1.619770,-7.860060,-2.840700,6.532870,-5.537578,8.884461,8.041495,5.635815,1.688813,-0.225671,4.139532,-4.093829,1.869680,-3.228971,6.322540,-8.142739,-8.971166,-5.363555,-3.436234,6.869508,-8.342164,6.246601,-5.480996,1.510786,-2.409678,2.432262,0.125691,-7.912848,1.802798,-6.198762,-7.691221,-3.295981,6.349555,-3.633442,-3.878148,1.667969,-4.440318,-5.098786,6.248847,-9.781451,2.933364,7.202527,5.127325,0.855381,-1.191176,1.577113,-2.765729,-2.874364,-0.157681,1.935531,-9.568359,2.505980,-1.688419,0.250109,-0.515195,5.795535,1.132907,-8.995883,4.351958,-8.576870,8.914991,-6.782510,7.526829,-3.248031,5.206022,9.388580,-9.157342,-2.469237,-1.593413,-0.562006,6.701253,4.007730,1.968059,2.398271,6.859193,-4.803876,-6.737643,9.880475,5.452367,9.881396,0.634826,5.971846,-8.554629,-9.879173,0.319066,6.240735,1.440429,-9.530014,-8.515208,8.978886,5.897255,-1.325637,-4.182146,9.626884,4.538166,3.937119,5.220754,-1.384088,-0.062408,0.485544,-4.676282,9.291296,0.101067,-0.253444,3.110874,7.171964,9.494367,-6.501728,5.694505,-6.195282,3.939917,-6.438245,-9.075275,-0.748257,0.517197,-3.201521,-9.242032,3.055980,3.554146,5.227935,2.068201,2.707054,-5.399680,1.366148,-7.204570,8.569199,5.447730,-8.356265,-4.021513,-9.615951,-6.800309,8.414480,-0.700088,-8.824924,-8.046120,0.487939,6.612877,6.939799,-8.915191,6.143667,-5.800947,-1.022652,-8.459048,1.916659,4.552755,0.451693,-9.334113,-4.768098,7.712124,6.084029,-3.681550,-0.292336,8.151472,-6.422861,-9.165174,-3.823614,-4.603099,-9.524739,-9.526904,9.381427,6.321824,5.460815,-5.233081,5.487080,8.135816,7.779297,6.936321,1.018664,0.039622,-0.907306,8.517799,-7.789855,-6.927418,8.061234,-1.007691,-1.143242,2.269086,-6.930151,-1.275367,4.377689,-8.913421,3.059398,-8.541470,-1.697223,-1.005259,3.681156,-0.060618,1.092898,-3.214913,4.671603,-1.576235,8.024566,4.037669,5.106147,8.462161,6.680389,4.023332,1.364440,5.367413,-0.451071,-7.148112,-9.417617,1.991426,1.165281,-3.522475,8.685744,3.062304,-5.253362,-1.249308,-4.423982,-1.736723,2.261013,-4.444367,-5.722372,-6.328340,-5.652280,-1.234430,7.139635,-7.096509,-3.742945,7.168156,8.762951,-5.121545,-8.056530,0.187374,-5.013045,-1.086810,-6.586340,-9.901650,7.639779,6.814171,7.609772,-8.164398,0.498002,-3.282510,8.394734,1.199410,-8.335672,-8.047021,-1.018590,3.368880,4.860560,-1.145300,-8.745698,-9.071696,-3.665490,3.201899,-0.748060,-4.464699,4.534639,6.606451,7.499721,7.443311,-7.867896,-1.899565,-3.949772,3.484483,7.138234,8.485005,-9.832956,5.565377,8.901204,-9.647894,-0.425945,0.965087,2.051064,-2.620524,-0.354228,-0.983904,6.777949,4.382641,-7.979837,-8.349368,3.448595,-1.058811,0.391868,-9.559776,-0.967643,-0.824454,3.540434,-6.315876,-9.222336,5.850443,1.386217,7.568142,-7.416919,-1.940752,5.043621,6.623949,-3.648366,-2.825251,4.819953,-9.604769,-5.428310,4.413315,-4.649513,-9.247180,-2.805212,9.380614,-7.533487,9.438998,-8.737809,3.573035,-6.949903,-1.559028,-6.271598,-8.212836,3.773490,-4.059404,-3.629503,1.032585,7.170344,7.075056,-0.202107,2.373440,-9.421884,4.988935,-1.528866,-0.321710,5.268245,8.570738,-7.037286,-9.333955,-0.086083,0.377923,-4.469196,-8.034303,-5.827030,3.872939,-2.977590,5.608302,6.105918,3.215014,-7.379419,-2.961105,-2.397293,9.297184,-9.085752,-2.835282,-3.356776,1.884439,3.004409,6.256210,8.141955,-2.619039,7.917043,-6.111901,-6.455246,7.374910,-2.253748,6.099278,4.590525,8.451805,-9.832208,2.788585,1.068344,2.075154,-0.738114,-9.785120,7.444403,4.272249,8.047612,-5.383712,-5.786921,-0.108642,5.609432,1.544473,-3.118360,-1.425471,5.085339,-4.081784,-2.982548,9.394938,-2.293724,4.849805,-7.692815,-3.259344,-6.165680,5.988641,-0.379211,0.389153,3.967419,4.056850,8.829132,-4.520467,7.161512,4.300509,-1.734726,-5.759443,0.588149,6.725089,-2.857888,5.365181,-7.368998,5.917921,-4.261687,-5.692510,-5.440305,3.648104,-2.919476,-7.042144,-5.650368,1.152319,-3.494479,5.550793,3.253699,2.784427,1.278188,7.488501,4.189998,-3.209755,5.422334,-5.648859,-2.851574,-8.187584,2.488031,-6.428155,-1.672591,6.504984,9.325289,-8.574608,9.270391,3.253930,-3.429491,-2.670000,9.373107,1.669970,6.296317,-8.146769,-3.966528,-5.978463,3.259941,7.169262,6.377292,-7.515750,-9.671683,0.662397,-3.409057,-1.609639,8.358478,7.064782,1.681758,-5.363661,-6.927667,8.923909,6.074005,-2.587266,-0.390795,-9.443905,-0.556766,2.414882,-6.028252,-2.217054,8.792808,5.498818,7.117973,6.337274,-1.057500,-0.156864,1.372094,8.405936,1.797436,1.470670,0.575146,1.347988,7.540727,-6.568767,-5.634258,-5.663247,7.431626,-3.212047,-9.591434,-9.190784,0.528083,3.918447,-1.154726,7.190667,6.692624,6.503168,7.208013,-4.647233,2.314450,-9.059956,-1.367629,7.665656,-6.438275,-8.542817,-9.044279,6.499445,6.287203,-5.960873,5.140652,-6.121305,-2.333364,-8.080717,-1.906475,-4.128929,8.491432,1.854387,-4.278195,-1.230097,7.857346,7.841880,3.527026,4.266834,-3.726523,-8.857291,-6.278448,-0.586057,-0.615412,-1.081494,5.747148,6.367378,6.061638,-2.459936,8.485610,-5.981335,-8.978232,-0.574493,5.428032,-2.137599,9.090926,1.334748,1.995019,6.995336,-3.318164,1.775504,-3.656631,5.603236,4.335456,7.797651,-1.415384,9.457666,-9.765936,-0.051144,-0.519658,0.758694,0.209228,9.494956,-3.544549,-3.032447,-8.455029,-2.868490,-1.058941,-1.583205,-3.933141,6.045965,5.587473,5.727860,-7.445085,5.740668,-7.666769,8.419162,-9.612962,8.620888,4.277081,3.272223,0.864831,-7.035504,7.777696,1.666938,8.430425,-8.129736,-3.514709,-5.843674,0.792612,7.452553,-1.387049,1.800918,2.196285,7.850769,8.710074,-5.714369,-5.359971,-8.810741,0.866025,4.099788,-6.432127,0.464881,2.042807,-4.315145,-1.917886,8.869103,-4.913817,2.390938,4.943624,-5.347287,7.642510,1.115610,9.886846,-5.889115,1.959729,3.846279,7.646592,-9.609287,-1.679384,-6.463024,-2.381485,8.727523,-0.312501,-5.587715,9.382869,-0.374440,1.544361,5.190597,-5.458382,7.637013,1.620469,3.069331,-7.807620,-2.415973,-1.268153,2.842008,-0.492697,0.691762,7.876067,-9.660572,-1.198036,7.900249,-3.018444,6.555853,-6.783593,-2.009349,4.776643,7.751932,-1.033732,2.630477,-5.294656,9.410881,7.537333,4.565589,1.427900,-1.421451,2.970025,0.972320,-9.711395,-0.319136,-5.522413,-4.215660,-3.308788,1.685883,3.195335,-7.432445,2.336646,-3.205203,-3.435949,9.409023,4.569829,-3.541759,3.238554,-5.974442,-8.506595,2.342857,-5.309836,-1.509254,9.921813,3.836963,-0.653773,-5.493104,4.410860,1.549582,-0.031222,8.329430,-4.476162,-6.100029,-9.411740,4.627563,1.203694,2.361295,-1.902484,8.762439,6.744488,2.737149,-8.921991,9.710654,-4.601194,9.844548,5.762757,2.593387,-4.204228,6.686284,-8.723304,8.883115,5.468422,7.890101,0.423024,9.879069,0.189375,-0.092045,-1.768783,-2.357671,-3.247680,-7.837973,-4.297068,3.437747,0.019365,3.856085,6.384856,-5.543457,4.610147,0.794682,-3.902766,7.652702,6.835887,7.010905,2.035671,-9.476825,7.743895,6.787192,-1.646291,6.966953,-9.580032,-9.902903,8.636252,-2.679464,-9.330637,5.896724,6.003390,5.885088,9.222461,-8.155836,-4.825094,-0.782883,5.445310,3.160844,4.358612,-9.043854,-7.160330,5.562154,7.497447,-8.240483,1.510447,-0.567771,1.020528,3.682335,-0.667972,2.083727,8.232722,-9.952309,-2.370035,-7.068988,-8.679517,4.014419,0.292384,6.672060,-4.584206,8.590187,7.903054,-8.146399,9.967091,6.357657,-3.588519,-0.775057,4.876069,-2.021249,-4.275219,3.123873,0.718339,5.247244,8.134969,0.970407,5.030329,-2.902840,-5.746207,2.973020,-3.911646,2.325150,9.857039,-2.726397,9.330053,-7.511410,-0.777121,-8.228922,-2.847273,-5.216355,-6.895919,-5.345759,-5.255523,6.876633,6.386405,-8.884240,9.556473,-0.933514,4.955264,2.367912,-1.862039,7.065203,9.156411,-6.699800,9.473552,-8.994825,4.497834,5.469134,1.139384,-5.326143,5.899693,-7.949876,8.508673,-4.364739,-0.234433,3.433550,7.729966,7.479912,-0.992225,9.434496,-7.943788,-0.767141,-6.280971,-0.029674,-1.236408,-3.337588,9.430875,-1.669077,-8.742771,-3.301002,9.515475,4.535461,-2.726997,7.032912,-2.143283,-6.954130,-7.503857,-8.428073,1.099712,-4.766037,-9.877606,1.045325,-5.680051,-7.763255,-5.953089,0.864822,-7.512841,4.004023,3.293820,5.523312,3.377072,-5.725990,-1.159096,-7.390570,3.870019,0.936292,2.680574,-2.695567,1.913477,-2.657745,6.344845,1.302252,-0.749622,-1.049705,1.244214,-6.122053,4.976176,1.486046,9.374699,8.659851,-3.553881,-1.175696,-0.925855,3.989425,5.504718,4.224779,7.683365,-1.573760,7.497121,1.740761,1.615101,4.953684,7.986885,-4.437318,-6.205216,3.815862,8.405656,3.841451,-6.781255,9.206041,-7.056504,-3.588774,3.531661,-2.530806,8.868952,4.166262,5.382372,-2.074336,1.351967,6.377069,-3.461146,3.900613,3.457225,6.297322,7.947717,5.547255,-9.443607,-1.040394,7.878955,-4.186573,-7.075298,6.251486,3.776876,-3.228147,-8.089924,-8.147244,1.460354,-1.804220,-2.721595,-0.698646,-2.061058,-6.021914,-7.612358,-5.890307,2.591302,-4.983602,4.770931,9.056100,3.196529,1.455732,3.670669,0.741100,3.825353,2.908957,0.055619,-0.221831,-8.164010,-8.159055,6.768050,-8.982592,-6.815301,-8.078665,-4.979674,-9.088673,-2.448335,8.199490,3.486731,-9.513479,3.553199,3.964756,0.332790,-8.925593,-6.066650,-7.888570,-8.876769,-0.180885,-3.447804,-9.408513,-4.140974,-6.282764,-9.422304,-0.632814,-8.713278,8.986169,3.888173,5.467109,-2.293373,-7.788884,-7.848247,-7.908341,7.222453,6.780002,8.209496,-9.936813,-9.426136,-4.605160,-1.743624,9.456334,9.725287,-3.678447,1.350203,-4.333291,-5.871273,-9.995228,9.830219,8.065580,0.507232,-5.024870,-9.110046,-6.949217,-2.195099,0.546393,9.994346,4.228051,8.159878,8.947055,0.652152,-8.499335,-3.983289,2.944016,7.977915,-4.930790,0.459716,-7.098010,3.617375,6.580327,1.797470,7.155599,1.061883,-4.437352,-7.316321,3.841801,9.606834,0.175962,-5.053700,2.531452,6.082045,-9.931808,7.112759,-6.512554,3.265028,-4.653466,4.236411,2.124155,-4.265737,5.846911,-6.335926,4.687085,4.654452,9.392994,0.197752,1.654165,5.182345,3.336808,-4.043964,1.965536,7.383669,9.974178,3.940588,7.537695,-7.870257,6.105590,8.939838,-5.175519,3.332468,-6.680792,-4.859693,-7.062409,2.137474,-7.292265,8.493879,7.961673,8.080638,1.111909,-2.375379,8.672183,-0.905888,9.345076,5.373823,-4.034377,7.005328,1.355936,-7.047788,3.372886,4.079440,-9.937487,-8.051726,-7.110371,-7.305627,-3.922568,-1.158544,8.808818,-9.224410,2.464704,-5.867512,5.924429,-2.255261,1.932130,-4.105146,3.617392,0.809767,-5.507272,0.068909,3.143180,0.444726,-4.671368,7.182093,-9.717530,-6.017612,2.955300,4.774223,9.590974,2.482454,-6.482710,0.512130,-9.509576,4.336626,-7.421522,4.968183,-5.842467,-2.391896,-7.149910,-2.269887,2.293720,-1.168155,4.816519,2.651865,-3.621008,-6.714966,-5.251959,-3.242269,-5.851702,-6.125595,-5.902829,-1.633871,-5.504517,-1.594209,2.229583,2.226728,4.264000,1.518705,5.767473,8.539028,-8.064368,-1.390318,-1.778405,8.577854,5.539006,7.914182,2.615520,-8.513933,-8.426550,-0.476515,-7.890734,7.087951,-9.833042,-6.709562,0.260434,3.804666,2.690496,6.321671,-6.282668,-7.135572,-2.711963,2.120627,-9.199715,0.843818,-9.957869,-8.193949,5.401769,7.711947,-3.730359,1.072728,2.472387,6.084669,-7.599278,-4.670679,1.818658,-6.328007,5.173155,8.299476,-9.362996,-2.027076,3.473346,1.274745,-5.949374,-3.166892,-5.619745,9.315912,-1.278757,7.406156,7.015359,5.598034,-1.126269,-3.177837,5.523673,2.748768,-1.164794,0.534748,-8.426294,-5.608137,0.531000,-0.626842,-7.918232,3.143733,-4.496539,5.489048,9.412386,2.365997,7.859597,4.342669,5.444691,-6.210371,-3.164305,3.772447,-6.731956,-4.054563,-4.626378,9.755262,-2.104675,3.063015,1.841186,-7.263663,3.104556,7.075066,9.840203,-2.507896,6.497025,-5.930344,-8.229528,6.241581,5.282280,-4.832841,-6.135753,-9.943912,-8.177965,9.908300,-7.765808,-8.277618,8.989927,-3.150632,-6.535725,-7.023403,7.209079,-1.153241,-5.934103,-6.728924,9.995427,-0.639634,8.096244,-7.579805,-0.127881,6.406873,5.029548,4.123765,9.747399,7.600330,-1.144417,-7.713569,-5.116109,6.794273,-2.528116,-5.211404,-9.506687,9.758345,4.985242,0.574671,4.131956,-1.027211,0.883967,-9.073376,-5.761449,-5.674763,7.994548,-0.913865,5.176151,-3.317633,-5.520971,5.444431,8.193087,-7.955964,-8.177313,0.311493,-6.029016,-2.998336,6.358344,1.961437,-7.628436,-3.421361,-0.869685,2.142675,-6.527573,1.504691,-0.974767,7.507222,1.051184,-7.470305,2.326080,9.327069,-1.866016,7.166505,-8.495457,6.237797,8.585875,-2.537204,-3.023816,5.158726,-7.717122,8.338717,-3.130727,-9.147757,-2.869114,2.170432,-9.080732,-2.123971,4.005298,-8.622118,-1.206028,-4.429706,1.894639,0.525576,7.911500,-0.583749,1.609024,-8.967941,-7.659088,3.674819,-6.030631,4.861449,2.062775,6.353371,0.689018,9.301959,9.741972,9.807172,-6.803035,-8.014474,-7.434632,1.334166,8.255450,4.533226,6.345096,-0.992112,7.898026,-3.684711,1.575232,2.487587,-8.494791,-8.543198,6.100071,-7.784731,-0.379823,7.765037,-9.000240,-4.205504,-5.423068,5.758990,-5.615288,1.961695,0.592830,1.338719,9.927740,-8.259698,6.840801,6.830177,-9.180400,-8.040631,1.255068,3.961141,8.786336,6.029648,1.665156,5.634225,-3.154371,-0.244107,-2.795190,9.898418,-6.960607,0.119746,-6.384611,-3.256399,0.596064,-8.578908,-7.397131,-5.615210,1.233937,-3.363060,-6.975366,7.776063,-7.116816,6.391274,3.406128,7.278242,-4.067552,0.582201,3.630942,3.197550,-7.806405,8.329640,-6.057712,-3.411835,9.534150,-0.105504,-7.563732,9.863034,7.034775,-7.195506,9.700967,9.630975,-1.889818,-8.004340,-3.057125,-8.117604,8.775827,-7.341994,4.227340,-3.570362,7.224323,9.241966,-4.931154,-0.422950,5.210484,-6.411869,-3.591985,-6.151143,-8.147437,8.683380,-4.203874,2.839697,6.986448,9.912124,3.209673,-3.003503,6.730445,-7.950813,-9.807190,1.762695,7.428341,-9.695024,6.699655,0.158485,5.337550,9.033400,-2.375820,-6.081580,-8.835807,2.947916,0.974062,-9.152524,9.482311,-0.195931,2.941255,8.348807,0.490356,4.921183,-5.065403,-4.813628,8.527464,2.138694,-5.541904,7.239484,-6.370473,-3.422859,-1.449604,-4.020250,-0.477922,7.965548,-2.658737,-5.720674,-3.039103,1.105042,-3.089843,6.636346,0.199465,-4.334366,-8.555039,-8.748321,-5.966025,-9.780032,0.734895,-6.356549,6.334696,1.255097,-2.356941,2.989475,5.646636,0.602737,-6.128120,3.929582,5.118840,9.666757,-6.809289,-2.039486,3.571930,3.922687,8.370857,-8.000431,-2.575216,2.670791,8.227429,7.800289,3.067517,5.065448,4.554646,2.662395,-1.586766,-1.823562,-5.902419,8.537021,0.740260,-5.991606,-6.380713,7.834296,-6.780451,4.894944,8.893380,3.043299,1.581596,-5.328464,4.961681,9.205884,3.887936,-5.714511,3.181984,4.145630,8.665232,8.073497,-6.517101,-0.591319,1.483888,-9.755212,-1.217846,9.728667,-4.738737,8.704492,8.327430,0.335970,-0.002769,-0.747097,2.607188,4.462460,9.347240,-0.113421,1.845341,7.567599,-8.087505,-3.535308,8.279370,-3.128079,5.959493,9.484746,3.824595,0.769187,4.406152,8.513642,1.669029,6.234724,6.771997,-0.416345,-9.943452,-0.883952,-1.363410,5.044909,-3.178327,0.102317,3.260197,0.360266,-3.642107,4.701327,-8.678161,-1.058920,8.366044,9.277128,-7.179081,4.220213,3.038591,3.947147,-6.859047,1.749641,7.371576,2.442723,3.002525,4.569351,0.134072,6.932762,0.660906,-8.681413,4.245671,7.066509,9.034492,-0.245597,-7.566432,-7.404914,3.477235,-7.924614,1.820500,9.413064,-3.350785,-7.130425,4.477265,4.222526,7.220533,2.328905,0.156361,-4.764442,-1.839650,9.962701,5.540217,7.506857,8.068845,5.793180,2.580241,-4.248950,6.540204,-8.642077,-5.406069,0.643384,4.919222,9.369865,1.102077,0.855554,-5.812070,7.507276,1.406776,-9.321592,-2.863570,3.971430,0.024129,4.885278,-7.304844,8.321097,7.731257,-5.314805,-4.900143,-7.455510,-8.981923,0.264946,-3.058825,-6.059498,3.639437,6.901784,-2.037545,-6.606477,-5.353473,-9.237159,2.678580,3.723116,-3.434763,2.616931,2.811083,-7.282293,9.707272,3.275960,-8.221099,9.981978,-2.281329,1.054873,1.244682,-0.619627,3.253398,-0.648231,7.011440,-2.041215,-1.782798,-6.197003,5.506953,0.599558,-3.359012,-8.296270,-4.822636,-7.803922,-5.714771,1.283058,9.414406,9.298051,-1.234048,2.219506,-4.811113,7.121310,5.823656,-1.732107,-9.669088,-3.285735,-1.980537,-7.728960,-7.536225,-2.963062,-5.279816,4.050374,2.541776,3.397212,-1.761693,4.536333,-3.590032,2.760025,-1.712260,-7.289067,6.475996,0.135829,1.529086,-3.915394,3.999894,3.694942,-9.089953,0.358096,4.360461,5.504708,-3.626959,-1.756671,4.199487,-5.751555,-5.075934,2.722023,7.958235,4.915227,-8.027739,5.117479,-6.144038,7.592611,5.661160,7.914107,1.958090,-5.002496,2.029410,-0.730065,3.892925,0.114140,6.865321,5.088692,4.795055,-9.747796,5.097519,3.437346,-8.658944,-8.118570,-2.141598,-9.659324,1.634849,6.106183,-4.850189,8.119519,-4.149369,4.618343,3.668461,7.147898,0.556407,-6.571522,0.684383,0.212764,9.492669,3.258956,8.136747,6.455295,-8.283545,3.883763,5.311299,-1.201448,8.527072,3.597076,5.544495,-2.239601,-8.882469,2.783538,-7.095734,3.036325,-9.583133,2.051433,5.910212,-0.469608,5.056660,-2.658692,0.832951,4.707426,-9.296724,2.444966,8.928603,-1.426574,3.653870,0.207733,-4.268265,3.303588,5.014911,-4.865893,8.148173,-9.649089,7.131938,5.830323,-6.353108,2.676712,-4.744613,-6.164582,-8.194267,1.930528,-3.415550,-8.982747,-6.122669,4.295214,-5.345490,-1.418651,7.683547,0.747454,1.409546,7.740811,7.647992,-5.406428,0.676736,6.701569,2.091268,2.901301,4.662926,1.054690,3.370583,5.728962,-8.133090,-6.523041,-7.734399,-0.149845,-5.210012,4.855764,8.348123,3.561825,-4.778949,-6.668412,-2.921696,1.846777,1.041850,4.494069,-6.333415,3.808772,-7.380714,-8.506744,9.031932,-9.061602,-7.296641,0.159501,7.434740,-8.324965,1.295380,4.392552,2.464670,0.281936,0.591967,6.748659,2.703366,9.668649,-1.638970,-9.745450,-8.360529,-2.276159,9.549863,-7.769084,-8.161864,-5.758794,-5.050498,2.942047,1.051821,-7.299344,5.217805,-2.322829,-5.287133,-7.030212,4.959564,-5.664091,0.288846,-0.090652,-1.362526,8.107395,9.921771,-7.116839,-4.022961,4.932620,-6.162143,-6.371049,-9.868026,-1.870840,-0.829072,7.865940,-0.956472,-0.486101,-0.251929,-7.012167,1.427282,-7.650222,4.579413,-6.277028,-9.303763,9.922981,-3.166633,5.255435,-4.945520,6.967599,-9.585616,-4.071247,1.901696,5.822320,0.126495,-7.836355,5.038104,-0.540963,-1.302379,-5.501066,-2.878212,0.438779,-3.535373,7.477603,8.443546,9.391523,-2.684145,-8.501073,-7.675695,9.335621,6.482356,1.519807,-8.406622,7.517007,-4.975978,-5.500199,-4.985943,5.940251,-0.166947,2.794301,-5.416474,2.557841,2.720529,-0.775526,8.894623,4.784155,5.617063,-0.198337,-7.409166,-8.434150,7.371185,-1.306587,0.567680,-0.201511,-4.236226,3.997360,3.639593,4.294078,-9.981194,-7.489801,-9.177357,-0.578181,-8.052405,0.691723,-8.620088,-4.165996,-0.288092,3.097121,-2.671757,8.445752,-0.532941,6.066192,-1.173496,-0.335238,-6.257996,-2.801809,-1.318050,0.702961,2.083490,-0.597438,-2.079737,-9.014474,7.787354,-2.229734,5.890708,-3.858859,-8.290045,1.885449,9.902754,2.102975], dtype = "float64")#candidate|10072|(2304,)|const|float64
const_10073 = relay.const([[-4.340682,-8.438140],[-1.679671,0.823786],[-6.939616,-9.750966],[2.369284,-7.745250],[6.644702,4.204294],[1.547349,-4.860427],[6.220086,7.635570],[-9.673934,4.014030],[1.265647,6.514677],[-2.454475,-8.832320],[0.467480,-0.614643],[6.438169,-7.041160],[6.935000,2.236252],[-6.332119,-6.347028],[8.723225,4.151029],[0.302321,2.040532],[5.814812,-5.659075],[8.650973,-7.793480],[-7.640762,5.739369],[5.612979,-2.570121],[-6.039680,-1.950726],[-1.404246,-2.926141],[-1.685455,1.055509],[-8.465196,-7.824563],[3.148067,0.073076],[-1.476795,1.129413],[-6.345823,-8.271401],[-8.840551,1.154767],[-2.820645,-7.180169],[-0.723661,7.949641],[-3.170565,-0.806758],[9.875983,-0.690111],[-5.511218,1.884864],[5.629102,2.544371],[-9.470891,-2.353042],[-5.083090,0.457209],[1.331107,0.947160],[-3.111280,-5.230389],[2.717577,3.769761],[0.365103,2.968759],[1.360116,-4.014544],[6.711443,0.789717],[9.042337,7.788836],[4.990984,3.695634],[-3.138214,-1.762568],[5.856788,3.907348],[8.840846,6.551516],[2.859896,-4.426458],[6.775472,5.690223],[-5.061862,-1.026603],[-4.787531,-3.331076],[-7.052238,-5.097524],[-1.378124,9.827409],[8.747257,1.068338],[2.657390,-4.628033],[7.882624,-1.400810],[4.174964,-8.613695],[-9.586843,-4.763417],[-2.756784,-1.735462],[-3.973103,8.118196],[6.499966,-6.823946],[9.585519,1.329021],[-3.125477,3.274801],[0.263277,-6.670174],[-8.345722,-1.948776],[-8.947797,7.289838],[7.439839,1.530819],[7.037621,1.124959],[-0.932568,0.020044],[6.225492,-0.457280],[-1.897854,5.897275],[6.235142,4.106317],[-2.706445,-8.235229],[-1.682157,6.063805],[0.456331,8.859010],[8.400720,1.630428],[-1.134643,-4.600448],[-5.604624,0.648210],[-7.301654,-5.443017],[-0.650173,2.938926],[6.019790,5.424954],[-9.192350,-0.764849],[-1.846352,-0.283465],[-7.328559,7.248330],[-3.630034,-2.174660],[-9.107668,-1.244166],[-9.116618,7.131720],[-1.968183,-9.242635],[-2.504823,6.681658],[-8.102369,8.366719],[3.063916,5.884231],[5.199276,-5.372172],[-5.455679,-7.884510],[-3.340325,7.986119],[3.806811,6.299981],[-2.438912,-0.175116],[-5.338018,7.153157],[0.107121,5.627361],[-7.421203,-7.109346],[8.432313,3.515691],[9.624512,-8.026922],[-3.367298,-8.014772],[-4.540492,5.458907],[9.916901,-4.207556],[7.834272,7.881682]], dtype = "float32")#candidate|10073|(105, 2)|const|float32
call_10071 = relay.TupleGetItem(func_9052_call(relay.reshape(const_10072.astype('float64'), [16, 9, 16]), relay.reshape(const_10073.astype('float32'), [210,]), ), 2)
call_10074 = relay.TupleGetItem(func_9056_call(relay.reshape(const_10072.astype('float64'), [16, 9, 16]), relay.reshape(const_10073.astype('float32'), [210,]), ), 2)
func_8417_call = mod.get_global_var('func_8417')
func_8421_call = mutated_mod.get_global_var('func_8421')
const_10085 = relay.const(-9.565305, dtype = "float32")#candidate|10085|()|const|float32
const_10086 = relay.const([5.843332,-8.000905,2.554094,1.547588,-3.946609,-1.208392,3.242002,8.615213,0.226423,1.675837,-3.268833,9.931530,8.544095,-6.731332,-8.661102,-0.350097,0.789351,7.600539,4.467749,-4.334583,-1.216441,-9.853937,-5.291584,1.880102,-3.050067,-9.608705,7.085312,-5.526150,2.706284,4.467444,-4.281120,-4.236376,-2.422686,-8.927280,-0.990366,9.899869,2.118529,-7.964250,6.944813,-7.881794,-0.455354,5.965572,-5.829845,6.282530,-7.079198,-4.692202,-9.541570,-8.831521,-2.124293,-8.793737,8.578697,8.124146,1.135415,-8.313827,-2.729825,-6.928477,-4.016793,-8.455174,7.220800,-3.658616,-2.449588,-7.807102,7.727193,8.552199,9.602996,9.676503,-9.649773,-7.956597,-2.506077,-9.309152,9.990801,-7.364882,-8.968158,-2.561321,-9.818899,6.866408,2.490161,4.160797,0.791425,-0.213347,7.681297,6.039183,7.862065,6.765163,4.401521,-9.948600,7.068076,-1.865849,9.361199,0.844124,9.934622,-8.303072,8.512318,-2.477385,-6.411659,3.399793,-5.379247,6.623131,-9.589813,6.559392,4.487220,-3.929834,-2.542084,-6.100094,-3.878700,5.076427,6.115191,-9.124844,-8.231090,4.080405,-1.752998,-0.294701,3.266738,-0.926413,-8.024232,5.952394,4.507502,-5.184719,-6.048493,6.291880,7.794796,6.972830,-5.269560,8.122700,-9.745356,2.751764,8.737590,7.875551,-2.217927,9.773009,5.241753,-7.073248,-8.697543,7.081127,1.156247,6.644357,0.367957,8.423619,8.353617,-9.407827,4.077699,-4.050575,9.873635,-1.588793,2.568217,3.729737,-8.441377,5.923325,-9.862824,-1.065396,9.264133,-4.784067,-0.219858,-1.445406,-6.810947,9.503766,-3.404695,1.242479,6.717821,5.855372,6.743028,0.846308,-8.701475,-5.917960,7.757763,7.935574,8.742125,-1.573833,3.597829,1.489367,4.011667,-2.186791,-1.628077,-3.001280,9.201400,-1.001366,-6.369250,-6.525550,-1.111653,3.861284,6.408622,-5.263966,4.848985,-4.633825,8.094368,-6.974126,-7.906927,-5.382331,-8.622395,-8.489001,1.173209,-4.666210,8.182911,-3.505551,-9.376998,4.025529,-0.673644,-5.360621,-1.214369,3.099999,-6.816011,2.657305,-2.919975,0.070616,-8.447537,-7.533209,-8.781691,3.264193,5.675623,0.319341,8.728385,-0.523151,-9.792560,4.955832,0.011775,-9.182158,8.805311,7.792187,2.639098,-6.375646,-4.992887,8.468959,-4.380843,-9.419342,0.553655,1.355521,0.664718,-7.501188,-3.649383,-5.312301,-1.663908,8.408740,-2.210853,3.653930,9.881024,4.685917,-8.644206,-6.121076,7.684252,2.556922,-6.123346,-4.069302,-2.943095,7.580311,-5.039096,-9.173011,-6.166061,-5.992605,-6.210254,-7.813238,-5.931935,-1.891457,8.020412,2.253020,3.088076,3.946339,5.143782,8.149553,-0.407291,-7.491589,4.325543,-1.800397,-1.159741,-6.262995,-5.388380,-6.092631,9.580649,-7.232277,7.587614,3.195857,-2.466557,-3.808467,-3.468532,6.663258,-1.756356,-1.315140,-1.868414,9.576444,8.677611,-9.356277,-8.175130,-1.577665,0.719516,-6.764298,-4.886418,3.813426,-1.382888,-0.218848,-9.112591,-0.474235,2.144040,-5.925727,7.050112,-0.609325,1.886312,-1.056532,7.471603,5.943815,5.738592,4.853109,-6.029549,-6.057544,-2.892640,5.042144,-6.742304,6.758411,-3.934073,-8.564384,6.420419,1.528925,8.161575,5.685363,-7.170600,7.935001,-9.043421,-1.725087,6.768363,-9.069732,5.011001,-1.168294,7.067662,-8.483448,3.803059,8.669896,9.656406,-9.074954,-2.284755,-6.476466,-1.132324,7.695178,-4.837279,8.756893,-0.269401,-2.774176,-3.429521,-4.838372,-3.058322,3.165130,1.772866,6.991356,2.472404,3.241828,2.659889,7.088647,6.370876,-0.169432,-6.497779,7.216004,7.456978,-6.289736,6.700443,4.413162,0.459681,1.266649,4.513988,-4.634962,-4.015181,4.448812,6.942554,-0.587925,8.822992,-4.315072,-8.262363,-8.805143,9.645209,2.252672,6.672559,2.464832,-7.322131,2.821804,1.418427,-1.928570,0.167614,5.198968,-6.233230,6.834106,-8.799118,9.891070,-9.858960,4.102499,0.108063,-0.772713,2.490558,1.021536,-8.803396,-7.054725,-1.227097,-9.200354,-5.129430,-6.956329,3.325996,-4.857763,-8.995014,-6.876342,6.274113,-5.757256,5.149428,-0.841267,-5.375179,-5.575667,-4.349581,-5.044995,5.505923,8.959084,-4.506195,8.408187,0.291438,-9.756522,5.690371,-4.994379,-1.926417,0.900713,6.706626,-9.152906,-2.474061,7.942029,7.009448,6.060766,-3.243763,-3.070125,9.484719,-5.040583,5.985996,-3.536301,8.548186,-0.465256,0.365138,9.951758,7.042704,9.483781,-5.462139,-8.738002,-3.505911,2.896591,-3.893432,-1.315350,8.096102,9.740050,0.235264,3.072531,-4.806797,-8.219522,-4.427838,6.961279,9.750755,7.566936,5.403364,-8.598764,1.116019,-3.536019,3.295737,1.298978,7.447177,-3.930495,-5.402637,7.359700,1.946178,4.703546,-7.060896,4.422960,1.461844,2.476561,-3.148276,-9.895991,9.303914,-6.271088,9.996995,0.657339,-0.106007,0.749037,-5.978422,4.426084,-2.181181,6.716882,9.614895,5.399256,9.592298,9.088380,-9.677827,1.394492,-4.742273,-8.109502,-5.274625,-8.748510,3.253623,0.164120,2.995480,6.111838,2.375354,-3.077891,2.000899,2.872065,-6.699760,5.912179,9.547704,1.627399,-2.841739,9.984326,4.537707,3.676241,-4.815137,-2.326680,3.721682,0.125318,-9.381239,-7.249698,3.317360,-5.708833,-8.200634,-7.250067,8.408177,-1.438455,-4.558801,-1.188503,8.816494,-3.698964,-4.702851,5.044915,6.866721,4.992298,-3.792301,4.909331,7.175868,-3.089075,2.439998,1.223135,-5.020506,-7.152203,-2.108692,-8.952673,-3.182536,6.113473,-9.262989,2.847768,0.109211,9.437303,-3.204704,-8.225736,4.258047,4.849005,4.747487,9.306351,-5.328652,-3.498369,-1.289875,3.266244,-6.490685,4.034916,3.426289,-8.138178,9.029799,2.107699,-2.207182,-6.072122,-4.270210,7.614894,-3.879959,6.278318,-9.405955,5.841378,-0.263887,-6.926559,6.892924,1.775925,-5.453376,-1.521207,-7.656907,0.376431,7.021609,-5.651970,4.033166,8.670383,-9.418738,5.556383,3.997346,5.335706,5.380612,-8.885363,0.647463,6.761483,9.822457,-2.796281,1.275661,-2.189874,7.929400,-4.269849,-6.196980,-3.855196,-2.690403,-6.242158,0.521357,-7.982495,5.488334,2.544788,-5.782707,-3.912730,-2.102347,4.627727,-4.501939,-4.586426,-6.663817,-1.864559,4.624744,8.132541,-9.627757,1.916112,1.231166,-2.418608,-0.071509,-2.671028,2.483177,-4.680745,6.639109,9.530733,7.005474,2.369356,6.890504,7.675166,-7.775251,-6.526469,-3.330194,-1.346032,6.567392,-5.217229,8.689157,3.258430,3.648588,-3.907132,3.713252,-1.041104,-0.345093,0.628698,7.231052,-8.870579,6.230755,0.815685,-1.831965,-6.880943,-7.663456,5.978311,7.017205,-8.449069,-1.582693,8.540191,7.600581,-9.353302,8.543980,6.764773,-9.714145,-4.372364,-4.560038,2.026840,-9.871217,7.357559,-6.202704,-0.104650,5.572289,-0.319117,4.566623,1.802595,1.055660,-6.726003,4.427708,-1.780696,9.147105,-2.031741,-4.556111,-3.073681,5.472658,7.352152,-8.280357,1.061486,4.022181,3.940554,7.778752,5.756217,1.736993,6.023123,5.054632,-5.299181,-0.628293,-2.116973,4.536750,4.038516,-7.384875,-3.625781,-2.990864,-7.468409,-9.772537,5.567738,5.174569,-7.289168,-6.809097,6.691934,1.543391,9.180197,-5.617293,-5.141333,-6.091190,-1.740962,0.086553,-7.961900,-8.645670,3.773235,-1.276636,-6.929708,5.551541,-8.591486,-7.514423,7.600465,-7.701769,-5.826630,-2.193808,-5.675212,-3.106220,-7.489759,0.496681,-5.244969,7.863799,-5.108180,-2.968083,6.704335,-9.329048,8.050444,-8.589916,-6.920822,0.782236,6.942405,-1.433948,4.343109,9.879761,-5.657387,-0.704595,-2.600535,-2.632000,1.126696,-1.809530,-9.406396,3.072403,5.412706,-8.679707,-2.949974,-9.634070,9.988753,7.088315,-5.305461,-0.169232,6.325680,6.796526,8.053805,5.477511,-6.574764,5.899565,-1.623854,-8.096214,-8.429475,6.557754,4.661025,6.738368,-7.325160,4.323827,3.186553,1.016706,-7.327131,-3.102877,-0.820226,-4.938159,9.342352,4.727491,-4.948265,-5.277755,-3.410039,1.877087,6.783807,9.509521,2.583075,-1.326479,-4.054843,-6.185976,-1.309454,-9.247670,-1.913274,6.857280,6.565209,8.531134,6.136810,-9.572413,3.386957,1.738003,-8.552829,4.303939,5.059047,-9.716732,1.099652,-4.848168,-6.532633,1.931621,7.167812,-2.321176,8.311571,6.187486,3.856178,9.839114,0.845107,-2.785771,3.349425,-1.331726,7.103481,-5.767552,9.394965,1.818645,-0.409174,-1.090543,9.273974,-9.834048,-2.138188,5.288254,1.552519,-1.963230,5.499113,6.756735,-2.418508,0.007077,-3.739389,4.793683,-9.331984,3.631449,9.452403,1.004316,7.660093,6.127595,5.402522,7.197059,4.140272,3.483584,-0.683586,4.412631,-9.794788,1.783356,7.880954,-7.983997,1.523964,-5.226034,9.214536,5.970802,8.434074,-8.551209,-6.131591,7.694919,-8.345034,-7.440657,2.051286,0.226326,6.781772,6.655967,9.341884,-0.446724,6.957869,3.682302,-8.259675,8.981638,-6.477305,-8.040987,-3.092930,-2.394285,7.615166,6.712549,9.513523,-4.068766,3.722820,3.475674,-1.637770,5.077280,-1.920551,-4.548402,-2.021518,-6.239878,-7.255200,1.909148,-5.110020,3.561425,-0.639538,1.200395,4.823293,-8.150464,9.571419,-8.893843,-8.432649,7.964286,-8.369169,1.772041,-2.600334,5.742808,6.201105,5.182995,3.418517,4.724560,5.280992,9.959851,-2.926197,-4.773870,6.243193,9.943011,-5.368818,-4.022391,2.570762,8.279498,1.933482,-0.574744,4.532612,-0.980380,-0.790530,0.205164,-3.653143,-9.561736,-8.781635,-8.985346,9.187294,8.575549,2.470191,4.539758,-6.209498,-7.867913,6.874298,-3.587309,-2.100541,7.560076,-3.298709,-1.159684,1.127446,2.374657,4.949825,9.558593,-8.033625,7.848821,-1.747143,-1.584553,8.316656,-1.864632,1.275930,-4.904455,-7.240528,-7.490934,-6.247375,5.083149,4.249283,0.662883,7.655348,-9.729892,-0.237575,0.490735,-4.563190,2.315223,-5.934687,-8.084754,-3.989264,3.198818,6.612514,1.687760,-6.416024,9.147242,2.224746,2.989812,-8.080406,-9.005127,7.433585,4.444366,8.317172,2.906236,3.666623,4.981378,-3.984667,-0.060154,-3.990277,7.294844,-4.939467,4.620976,-1.186294,-8.008045,-0.558132,8.120104,-8.834853,5.355149,3.029752,1.844323,-7.184279,-9.274562,1.428791,-2.503420,-4.412834,6.119697,9.528068,-1.523062,2.200081,-4.222696,-3.551688,0.593284,-6.827526,-9.968084,7.609572,-7.512125,9.852940,1.000211,1.217110,-3.250486,7.076697,9.959946,-4.840211,-4.550681,-5.546994,5.785016,-3.146127,-9.549550,7.480419,-9.756857,-2.379536,3.956313,5.204621,7.648219,-3.515331,-1.235843,9.786149,-9.524030,-0.399499,5.707319,1.743439,6.592453,2.492331,8.540182,-3.133889,0.376699,-9.628206,-0.618674,9.983207,3.067172,-9.998461,-3.184549,6.897603,7.527043,2.666048,-0.689940,-6.481065,0.905378,9.987990,-0.888944,-2.418779,1.648588,-2.165944,2.253920,0.406356], dtype = "float32")#candidate|10086|(1050,)|const|float32
call_10084 = relay.TupleGetItem(func_8417_call(relay.reshape(const_10085.astype('float32'), []), relay.reshape(const_10086.astype('float32'), [5, 15, 14]), ), 0)
call_10087 = relay.TupleGetItem(func_8421_call(relay.reshape(const_10085.astype('float32'), []), relay.reshape(const_10086.astype('float32'), [5, 15, 14]), ), 0)
output = relay.Tuple([uop_10067,call_10071,const_10072,const_10073,call_10084,const_10085,const_10086,])
output2 = relay.Tuple([uop_10069,call_10074,const_10072,const_10073,call_10087,const_10085,const_10086,])
func_10088 = relay.Function([], output)
mod['func_10088'] = func_10088
mod = relay.transform.InferType()(mod)
output = func_10088()
func_10089 = relay.Function([], output)
mutated_mod['func_10089'] = func_10089
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9667_call = mod.get_global_var('func_9667')
func_9668_call = mutated_mod.get_global_var('func_9668')
call_10110 = relay.TupleGetItem(func_9667_call(), 0)
call_10111 = relay.TupleGetItem(func_9668_call(), 0)
func_8578_call = mod.get_global_var('func_8578')
func_8581_call = mutated_mod.get_global_var('func_8581')
var_10120 = relay.var("var_10120", dtype = "float64", shape = (1, 1584))#candidate|10120|(1, 1584)|var|float64
call_10119 = relay.TupleGetItem(func_8578_call(relay.reshape(var_10120.astype('float64'), [11, 9, 16])), 1)
call_10121 = relay.TupleGetItem(func_8581_call(relay.reshape(var_10120.astype('float64'), [11, 9, 16])), 1)
output = relay.Tuple([call_10110,call_10119,var_10120,])
output2 = relay.Tuple([call_10111,call_10121,var_10120,])
func_10140 = relay.Function([var_10120,], output)
mod['func_10140'] = func_10140
mod = relay.transform.InferType()(mod)
mutated_mod['func_10140'] = func_10140
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10141 = relay.var("var_10141", dtype = "float64", shape = (1, 1584))#candidate|10141|(1, 1584)|var|float64
func_10140_call = mutated_mod.get_global_var('func_10140')
call_10142 = func_10140_call(var_10141)
output = call_10142
func_10143 = relay.Function([var_10141], output)
mutated_mod['func_10143'] = func_10143
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8441_call = mod.get_global_var('func_8441')
func_8442_call = mutated_mod.get_global_var('func_8442')
call_10157 = relay.TupleGetItem(func_8441_call(), 1)
call_10158 = relay.TupleGetItem(func_8442_call(), 1)
func_9526_call = mod.get_global_var('func_9526')
func_9528_call = mutated_mod.get_global_var('func_9528')
call_10170 = relay.TupleGetItem(func_9526_call(), 4)
call_10171 = relay.TupleGetItem(func_9528_call(), 4)
func_9542_call = mod.get_global_var('func_9542')
func_9543_call = mutated_mod.get_global_var('func_9543')
call_10172 = relay.TupleGetItem(func_9542_call(), 0)
call_10173 = relay.TupleGetItem(func_9543_call(), 0)
func_7722_call = mod.get_global_var('func_7722')
func_7723_call = mutated_mod.get_global_var('func_7723')
call_10177 = relay.TupleGetItem(func_7722_call(), 0)
call_10178 = relay.TupleGetItem(func_7723_call(), 0)
output = relay.Tuple([call_10157,call_10170,call_10172,call_10177,])
output2 = relay.Tuple([call_10158,call_10171,call_10173,call_10178,])
func_10181 = relay.Function([], output)
mod['func_10181'] = func_10181
mod = relay.transform.InferType()(mod)
output = func_10181()
func_10182 = relay.Function([], output)
mutated_mod['func_10182'] = func_10182
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10183 = relay.var("var_10183", dtype = "uint16", shape = (13, 6, 8))#candidate|10183|(13, 6, 8)|var|uint16
var_10184 = relay.var("var_10184", dtype = "uint16", shape = (13, 6, 8))#candidate|10184|(13, 6, 8)|var|uint16
bop_10185 = relay.bitwise_and(var_10183.astype('uint16'), relay.reshape(var_10184.astype('uint16'), relay.shape_of(var_10183))) # shape=(13, 6, 8)
func_1421_call = mod.get_global_var('func_1421')
func_1423_call = mutated_mod.get_global_var('func_1423')
var_10196 = relay.var("var_10196", dtype = "int8", shape = (1320,))#candidate|10196|(1320,)|var|int8
call_10195 = func_1421_call(relay.reshape(var_10196.astype('int8'), [11, 8, 15]))
call_10197 = func_1421_call(relay.reshape(var_10196.astype('int8'), [11, 8, 15]))
output = relay.Tuple([bop_10185,call_10195,var_10196,])
output2 = relay.Tuple([bop_10185,call_10197,var_10196,])
func_10204 = relay.Function([var_10183,var_10184,var_10196,], output)
mod['func_10204'] = func_10204
mod = relay.transform.InferType()(mod)
mutated_mod['func_10204'] = func_10204
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10204_call = mutated_mod.get_global_var('func_10204')
var_10206 = relay.var("var_10206", dtype = "uint16", shape = (13, 6, 8))#candidate|10206|(13, 6, 8)|var|uint16
var_10207 = relay.var("var_10207", dtype = "uint16", shape = (13, 6, 8))#candidate|10207|(13, 6, 8)|var|uint16
var_10208 = relay.var("var_10208", dtype = "int8", shape = (1320,))#candidate|10208|(1320,)|var|int8
call_10205 = func_10204_call(var_10206,var_10207,var_10208,)
output = call_10205
func_10209 = relay.Function([var_10206,var_10207,var_10208,], output)
mutated_mod['func_10209'] = func_10209
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5843_call = mod.get_global_var('func_5843')
func_5845_call = mutated_mod.get_global_var('func_5845')
call_10282 = func_5843_call()
call_10283 = func_5843_call()
var_10288 = relay.var("var_10288", dtype = "float64", shape = (14, 9, 16))#candidate|10288|(14, 9, 16)|var|float64
bop_10289 = relay.floor_divide(call_10282.astype('float32'), var_10288.astype('float32')) # shape=(14, 9, 16)
bop_10292 = relay.floor_divide(call_10283.astype('float32'), var_10288.astype('float32')) # shape=(14, 9, 16)
output = bop_10289
output2 = bop_10292
func_10295 = relay.Function([var_10288,], output)
mod['func_10295'] = func_10295
mod = relay.transform.InferType()(mod)
mutated_mod['func_10295'] = func_10295
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10296 = relay.var("var_10296", dtype = "float64", shape = (14, 9, 16))#candidate|10296|(14, 9, 16)|var|float64
func_10295_call = mutated_mod.get_global_var('func_10295')
call_10297 = func_10295_call(var_10296)
output = call_10297
func_10298 = relay.Function([var_10296], output)
mutated_mod['func_10298'] = func_10298
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10300 = relay.var("var_10300", dtype = "float64", shape = (7, 6, 5))#candidate|10300|(7, 6, 5)|var|float64
uop_10301 = relay.log2(var_10300.astype('float64')) # shape=(7, 6, 5)
uop_10306 = relay.atanh(uop_10301.astype('float32')) # shape=(7, 6, 5)
output = relay.Tuple([uop_10306,])
output2 = relay.Tuple([uop_10306,])
func_10312 = relay.Function([var_10300,], output)
mod['func_10312'] = func_10312
mod = relay.transform.InferType()(mod)
var_10313 = relay.var("var_10313", dtype = "float64", shape = (7, 6, 5))#candidate|10313|(7, 6, 5)|var|float64
output = func_10312(var_10313)
func_10314 = relay.Function([var_10313], output)
mutated_mod['func_10314'] = func_10314
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7177_call = mod.get_global_var('func_7177')
func_7178_call = mutated_mod.get_global_var('func_7178')
call_10326 = func_7177_call()
call_10327 = func_7177_call()
func_5577_call = mod.get_global_var('func_5577')
func_5579_call = mutated_mod.get_global_var('func_5579')
call_10336 = relay.TupleGetItem(func_5577_call(), 0)
call_10337 = relay.TupleGetItem(func_5579_call(), 0)
output = relay.Tuple([call_10326,call_10336,])
output2 = relay.Tuple([call_10327,call_10337,])
func_10347 = relay.Function([], output)
mod['func_10347'] = func_10347
mod = relay.transform.InferType()(mod)
output = func_10347()
func_10348 = relay.Function([], output)
mutated_mod['func_10348'] = func_10348
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6847_call = mod.get_global_var('func_6847')
func_6848_call = mutated_mod.get_global_var('func_6848')
call_10405 = relay.TupleGetItem(func_6847_call(), 1)
call_10406 = relay.TupleGetItem(func_6848_call(), 1)
output = call_10405
output2 = call_10406
func_10434 = relay.Function([], output)
mod['func_10434'] = func_10434
mod = relay.transform.InferType()(mod)
mutated_mod['func_10434'] = func_10434
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10434_call = mutated_mod.get_global_var('func_10434')
call_10435 = func_10434_call()
output = call_10435
func_10436 = relay.Function([], output)
mutated_mod['func_10436'] = func_10436
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9667_call = mod.get_global_var('func_9667')
func_9668_call = mutated_mod.get_global_var('func_9668')
call_10465 = relay.TupleGetItem(func_9667_call(), 0)
call_10466 = relay.TupleGetItem(func_9668_call(), 0)
output = relay.Tuple([call_10465,])
output2 = relay.Tuple([call_10466,])
func_10476 = relay.Function([], output)
mod['func_10476'] = func_10476
mod = relay.transform.InferType()(mod)
mutated_mod['func_10476'] = func_10476
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10476_call = mutated_mod.get_global_var('func_10476')
call_10477 = func_10476_call()
output = call_10477
func_10478 = relay.Function([], output)
mutated_mod['func_10478'] = func_10478
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9526_call = mod.get_global_var('func_9526')
func_9528_call = mutated_mod.get_global_var('func_9528')
call_10570 = relay.TupleGetItem(func_9526_call(), 0)
call_10571 = relay.TupleGetItem(func_9528_call(), 0)
func_9763_call = mod.get_global_var('func_9763')
func_9764_call = mutated_mod.get_global_var('func_9764')
call_10572 = func_9763_call()
call_10573 = func_9763_call()
output = relay.Tuple([call_10570,call_10572,])
output2 = relay.Tuple([call_10571,call_10573,])
func_10575 = relay.Function([], output)
mod['func_10575'] = func_10575
mod = relay.transform.InferType()(mod)
mutated_mod['func_10575'] = func_10575
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10575_call = mutated_mod.get_global_var('func_10575')
call_10576 = func_10575_call()
output = call_10576
func_10577 = relay.Function([], output)
mutated_mod['func_10577'] = func_10577
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9938_call = mod.get_global_var('func_9938')
func_9940_call = mutated_mod.get_global_var('func_9940')
call_10656 = func_9938_call()
call_10657 = func_9938_call()
output = relay.Tuple([call_10656,])
output2 = relay.Tuple([call_10657,])
func_10661 = relay.Function([], output)
mod['func_10661'] = func_10661
mod = relay.transform.InferType()(mod)
mutated_mod['func_10661'] = func_10661
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10661_call = mutated_mod.get_global_var('func_10661')
call_10662 = func_10661_call()
output = call_10662
func_10663 = relay.Function([], output)
mutated_mod['func_10663'] = func_10663
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9307_call = mod.get_global_var('func_9307')
func_9309_call = mutated_mod.get_global_var('func_9309')
call_10692 = relay.TupleGetItem(func_9307_call(), 0)
call_10693 = relay.TupleGetItem(func_9309_call(), 0)
func_9915_call = mod.get_global_var('func_9915')
func_9917_call = mutated_mod.get_global_var('func_9917')
call_10699 = relay.TupleGetItem(func_9915_call(), 0)
call_10700 = relay.TupleGetItem(func_9917_call(), 0)
func_5344_call = mod.get_global_var('func_5344')
func_5346_call = mutated_mod.get_global_var('func_5346')
const_10702 = relay.const([1,-7,8,9,-10,-4,-9,3,8,2,-9,-6,8,-10,-1,3,-7,-8,4,4,6,2,-4,7,-2,8,8,4,2,-10,3,4,-6,6,10,7,-5,-3,-4,9,-1,-5,-10,5,-5,4,-10,1,-1,-7,6,-8,1,-9,4,-8,6,-4,-4,-8,-3,8,-9,9,-5,-2,10,-1,-1,-5,10,-8,7,-3,-2,-10,3,10,9,3,-6,7,5,7,10,-9,-5,7,2,5,-2,8,-6,-7,-8,3,5,9,7,6,-10,-8,-5,-1,8,8,4,5,-6,7,5,7,-9,2,6,3,-4,-3,9,-3,-1,-7,8,-6,-6,-8,2,-1,-4,7,10,6,-5,2,-4,-1,5,-1,-9,9,10,6,-3,-5,1,-8,3,6,4,2,-2,-4,-10,-2,-2,6,-8,-7,9,-9,5,-3,5,8,7,9,2,6,10,3,-9,-5,-1,-10,-4,3,10,8,3,-5,6,10,7,2,-4,-9,-3,-1,-7,-5,2,8,1,-7,6,7,-4,-1,-2,10,7,-10,4,-5,2,1,5,8,-7,-4,-5,-6,9,3,10,9,5,-10,-1,-9,4,-1,-9,-8,-3,1,3,-8,5,-6,-7,4,4,-10,-10,10,-8,4,-9,8,-5,10,8,-10,1,8,1,-7,-8,10,5,2,10,-5,-8,-8,1,1,-6,-2,9,3,6,2,9,1,-1,-9,1,-9,6,4,-7,-9,-7,2,-3,-3,6,-2,-9,-1,8,-3,-6,1,-4,-1,9,-6,1,2,2,10,3,5,6,2,7,-4,10,5,10,6,8,-8,9,-10,7,1,3,-2,3,3,-3,-5,4,-8,-7,-8,6,1,-7,-8,-4,-6,6,-8,-6,-1,9,2,7,10,4,-9,5,8,5,-8,-5,-8,4,10,-6,-7,-6,-10,10,-6,-9,9,-7,8,10,-10,8,-6,3,-2,-6,6,9,8,8,-8,-9,1,-3,-7,-2,-10,5,5,-1,-9,-8,-2,10,8,3,5,2,-9,6,8,3,2,-3,9,6,2,4,-10,-1,4,-6,-6,-6,3,-1,2,10,-3,1,-6,10,10,9,10,-10,-6,3,5,6,-3,-9,-2,-9,2,7,-8,4,-2,-9,5,-7,6,-2,3,-8,-7,-1,8,4,-3,-7,-9,-10,8,-5,9,-5,-4,-7,-6,-5,-4,10,8,3,4,-2,-5,-5,-10,-7,4,7,8,7,10,7,-8,-7,2,8,4,-10,-2,3,7,4,-1,-1,4,-2,-2,10,5,-8,9,-2,6,3,9,2,5,7,-5,-4,-10,5,5,-2,3,9,4,7,3,9,-6,-10,-7,5,-7,4,5,-9,-5,3,9,-1,3,-6,-10,10,8,-6,-7,8,2,-3,-1,9,3,3,-6,-6,4,7,9,-9,7,1,-6,2,-10,5,9,-5,-8,4,-3,-2,4,-1,7,1,5,2,2,-9,10,4,-10,2,1,1,-10,-3,4,-9,-3,-7,-2,-2,-4,7,-9,-5,-3,-8,-5,-8,-3,1,-4,8,-9,-8,5,-5,4,-7,6,3,-1,4,9,-2,3,-10,4,-4,5,5,-5,1,6,-4,9,2,8,9,7,2,5,-5,-9,3,5,4,-2,-1,2,-1,-3,-3,8,-8,3,3,1,-8,-10,-4,9,-5,10,9,9,5,10,3,-9,-3,1,10,-5,-2,-9,10,-2,-1,10,6,-10,3,8,10,-9,8,8,-1,8,9,-10,7,3,6,-8,5,3,7,-6,-7,-9,-4,-4,-9,-8,2,-7,-10,7,-8,-8,2,-2,1,8,-10,2,4,-9,-10,1,-3,-9,3,-8,-10,3,-6,-2,1,-4,7,-5,1,3,-10,-3,7,7,9,-8,-2,2,-3,6,6,-7,5,5,-7,-9,-7,2,-4,1,-4,4,-9,7,-3,-10,-10,-4,-8,-3,1,1,-2,-9,2,4,10,-4,-6,-5,-4,10,1,-1,4,3,3,1,-9,-6,2,-8,7,3,5,-2,2,-4,-5,1,8,5,10,-1,-8,-1,-6,-7,3,6,-8,6,10,3,7,-5,10,10,-9,2,-7,-10,-1,6,6,1,-2,-6,-9,8,-6,2,-4,-7,-1,-10,1,-1,-8,-6,3,-10,4,-7,-8,-8,-7,-10,1,6,6,2,10,10,2,-2,-3,10,-10,-10,-2,-3,-9,2,10,-3,5,-6,9,-3,-3,-8,7,6,6,6,-6,-9,-9,6,10,-10,7,10,-3,8,7,-4,7,2,6,3,4,-9,-4,4,4,-1,-9,8,-5,10,4,4,6,7,3,-5,4,10,7,-4,-10,-4,7,3,-8,-1,8,6,-3,-5,-4,1,-4,-8,9,-4,8,-7,9,4,-4,-4,2,6,4,2,-4,10,8,-9,-1,-5,2,-3,-4,10,3,2,-5,-3,-2,1,-9,-1,8,-3,4,9,2,9,-8,-3,5,10,-4,1,1,-1,10,9,-4,8,-10,6,-8,7,-3,8,-6,10,-5,-7,10,7,9,-9,-6,-3,-3,-10,3,8,8,6,6,5,6,8,-7,5,8,-1,2,-3,-2,-7,-10,2,10,-1,5,-10,7,6,-10,2,-6,2,-6,4,-10,4,7,10,-8,-6,9,4,3,-2,3,-10,-4,9,-1,-9,-8,-3,-2,2,7,3,-5,2,10,-10,-5,-2,-5,10,-5,-9,3,-8,8,-5,8,-9,-8,1,-6,-9,-3,1,-3,6,-1,3,-8,8,-8,8,-2,1,1,-8,-2,9,9,3,-2,-3,3,-6,-4,-6,-7,2,-3,-1,-2,-1,-5,2,-10,-9,-4,-5,8,-10,4,-7,-4,2,2,4,-10,10,5,3,-7,-10,-5,-9,-4,5,9,-1,-3,-10,6,-10,-9,6,-2,-1,-1,1,-6,7,3,10,-6,-3,-5,5,-7,10,5,1,-6,10,5,-1,4,-9,-4,9,9,10,-6,-5,-9,-10,2,-2,8,-6,-3,-2,-7,-6,-1,2,8,5,-6,-9,-7,7,-2,8,3,3,-2,-7,-7,1,-9,-9,2,2,-4,1,10,3,-9,2,-6,9,9,7,8,-5,9,-5,7,9,8,5,1,2,8,3,-10,-1,6,-6,-6,-3,-4,-7,6,4,-9,-4,4,10,1,-7,-4,9,-6,8,5,-8,2,1,3,-3,-4,-3,-4,-2,4,5,6,2,10,-4,3,-7,-9,-2,4,5,4,-6,-10,-3,-8,6,2,-7,-8,-1,-5,6,7,-6,-5,8,-8,-8,-5,-5,-7,8,-7,-6,-8,-7,-3,8,-1,10,-5,5,-5,2,-2,-4,7,2,8,10,3,10,-2,-8,3,1,6,-3,-9,-10,1,-3,7,4,-1,3,4,2,4,-1,7,6,7,4,-4,8,10,6,7,5,6,4,3,-8,-9,5,8,-1,3,-1,-2,6,2,-1,4,9,-4,-2,2,-6,-6,6,6,-8,-5,-8,10,10,6,3,9,-1,-6,2,2,8,10,-1,3,5,-10,6,-5,-2,-10,-2,-6,4,8,9,-7,-8,-2,5,-10,-5,3,8,8,10,6,8,7,-3,9,4,2,-5,3,-2,-10,1,8,1,1,3,3,9,-5,-6,-6,-2,-4,-5,-7,-8,-3,8,10,7,-1,7,2,-6,8,-3,4,-5,2,-3,-6,-4,10,10,3,1,8,8,6,6,7,10,-5,-8,-4,4,2,7,-1,-1,-4,8,2,1,9,-2,7,8,7,-8,6,1,1,-9,-6,-9,-5,-2,3,5,-3,10,10,-3,-3,8,-5,5,-8,2,-7,4,-10,-8,-10,-6,-9,4,-4,6,7,5,4,8,6,-6,1,-4,-8,3,-7,-2,7,8,2,9,10,1,-5,8,9,4,-5,2,-5,3,5,-10,1,4,-2,1,6,-5,-1,2,-8,3,-9,9,3,5,7,-2,1,-10,-8,4,4,-5,-4,-6,-5,10,-7,7,-10,8,8,-6,8,4,6,10,-9,5,-3,-10,4,-4,8,9,-6,7,-8,4,8,2,8,-4,-8,-2,3,-3,9,-6,-9,-7,3,-8,7,-7,-10,9,-10,4,-3,2,6,3,-1,4,-3,4,7,6,-3,-8,-1,-2,-3,10,-3,-4,-8,-6,-3,10,3,3,-5,3,2,-3,-2,6,1,1,-10,5,-9,6,1,-9,9,6,1,-4,-3,-9,-3,-10,5,-10,-4,3,-6,-7,-7,1,10,-2,7,7,-4,-6,-3,3,6,3,8,5,-6,-1,1,-9,-1,4,-6,9,7,-10,10,6,-7,-7,-6,-1,9,5,3,-2,4,2,7,3,7,-4,-5,4,-1,10,-5,10,-10,3,9,-10,1,5,3,6,9,6,2,9,1,3,-8,-10,-7,4,10,7,5,-3,-9,-8,-9,-4,6,-8,-3,-5,-3,-1,-9,4,-8,3,4,4,5,2,6,-6,-1,1,3,-5,2,7,-3,-3,2,6,1,9,-2,9,9,2,10,-4,-7,1,8,-1,9,-2,9,8,10,8,-10,-9,2,9,-3,5,5,-1,4,-4,9,3,-5,-10,8,-4,4,-7,5,8,-2,-1,-1,-10,6,5,9,3,-8,-1,-10,-5,10,-3,-10,4,6,-9,-8,9,2,-1,-3,-8,-9,9,4,8,-8,1,-1,-9,10,1,6,6,-7,2,-3,-5,9,-6,8,9,4,-3,4,-10,-2,6,5,8,9,4,-10,8,10,4,-9,-7,4,-8,4,5,-10,-3,-3,5,-3,-5,7,-4,-9,-9,3,3,-6,6,-8,-3,1,1,9,7,-6,-6,-8,-2,-1,7,-4,3,-9,7,1,-6,-8,-8,5,-8,8,6,4,-2,6,1,10,-10,-7,6,9,-2,-1,3,-8,8,4,-1,-1,-5,4,9,-4,-5,-7,8,-5,4,-3,-1,-7,6,-3,2,-1,5,5,-1,4,-9,-1,9,-5,1,10,-8,2,-10], dtype = "uint64")#candidate|10702|(1872,)|const|uint64
call_10701 = relay.TupleGetItem(func_5344_call(relay.reshape(const_10702.astype('uint64'), [16, 13, 9])), 1)
call_10703 = relay.TupleGetItem(func_5346_call(relay.reshape(const_10702.astype('uint64'), [16, 13, 9])), 1)
output = relay.Tuple([call_10692,call_10699,call_10701,const_10702,])
output2 = relay.Tuple([call_10693,call_10700,call_10703,const_10702,])
func_10717 = relay.Function([], output)
mod['func_10717'] = func_10717
mod = relay.transform.InferType()(mod)
mutated_mod['func_10717'] = func_10717
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10717_call = mutated_mod.get_global_var('func_10717')
call_10718 = func_10717_call()
output = call_10718
func_10719 = relay.Function([], output)
mutated_mod['func_10719'] = func_10719
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7441_call = mod.get_global_var('func_7441')
func_7442_call = mutated_mod.get_global_var('func_7442')
call_10762 = func_7441_call()
call_10763 = func_7441_call()
output = call_10762
output2 = call_10763
func_10787 = relay.Function([], output)
mod['func_10787'] = func_10787
mod = relay.transform.InferType()(mod)
output = func_10787()
func_10788 = relay.Function([], output)
mutated_mod['func_10788'] = func_10788
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6878_call = mod.get_global_var('func_6878')
func_6879_call = mutated_mod.get_global_var('func_6879')
call_10836 = relay.TupleGetItem(func_6878_call(), 0)
call_10837 = relay.TupleGetItem(func_6879_call(), 0)
var_10870 = relay.var("var_10870", dtype = "float64", shape = (14, 9, 16))#candidate|10870|(14, 9, 16)|var|float64
bop_10871 = relay.maximum(call_10836.astype('float64'), var_10870.astype('float64')) # shape=(14, 9, 16)
bop_10874 = relay.maximum(call_10837.astype('float64'), var_10870.astype('float64')) # shape=(14, 9, 16)
output = relay.Tuple([bop_10871,])
output2 = relay.Tuple([bop_10874,])
func_10883 = relay.Function([var_10870,], output)
mod['func_10883'] = func_10883
mod = relay.transform.InferType()(mod)
var_10884 = relay.var("var_10884", dtype = "float64", shape = (14, 9, 16))#candidate|10884|(14, 9, 16)|var|float64
output = func_10883(var_10884)
func_10885 = relay.Function([var_10884], output)
mutated_mod['func_10885'] = func_10885
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8157_call = mod.get_global_var('func_8157')
func_8158_call = mutated_mod.get_global_var('func_8158')
call_10919 = func_8157_call()
call_10920 = func_8157_call()
func_2463_call = mod.get_global_var('func_2463')
func_2465_call = mutated_mod.get_global_var('func_2465')
const_10928 = relay.const([[-4.762509,7.097315,-7.281912,1.263059,-4.905706,7.179282,8.788920,-8.935490],[3.932998,9.920844,9.282610,2.664839,-1.624336,-3.616794,5.736064,-4.121277],[2.333691,5.049497,5.179325,-4.083851,-0.089323,0.015274,-0.593736,4.569120],[-4.855312,-0.632190,4.917562,-3.697500,-6.836540,8.374513,0.171465,7.080712],[8.866599,-6.810557,9.071576,-5.577560,-5.000839,4.516622,2.649403,7.537462],[9.938742,2.102440,7.420008,-8.187686,4.813946,9.807034,-8.262784,6.775077],[3.015515,-6.279621,-0.192386,3.926758,3.023371,-2.147056,1.440954,-1.386332],[5.544942,8.188969,-2.251021,-6.156501,1.743387,-4.648726,-4.424140,8.796090],[9.421659,-0.501898,5.939273,-5.289504,-1.241540,2.808934,-2.439992,7.823218],[-3.704474,-6.309816,-3.960335,-9.676961,8.768084,0.964485,-2.937721,5.172092],[8.028527,5.180705,3.987643,5.741830,-1.585646,8.838947,-8.375824,-7.702682],[-7.129295,2.134849,0.944289,-3.035461,-0.474388,-4.175084,5.507667,-1.015080],[0.187937,7.677336,-9.448621,7.094791,0.106805,9.059619,0.917003,-6.821524],[3.117814,-4.143690,9.656670,1.731504,1.228293,-4.168957,5.773382,5.068313],[5.845733,-5.399125,9.264004,-9.258203,-8.629814,-5.834719,-5.699808,8.449954],[3.615593,-1.165819,8.667858,-2.229803,-4.625310,3.181800,-3.354336,-9.226244],[1.689387,1.534366,-5.877560,0.305192,5.505083,-7.669604,1.980168,8.300188],[-3.176487,6.123322,5.320247,-0.495886,8.731229,-7.212720,-4.413423,4.143273],[7.513339,-8.953633,-6.846784,-7.479305,4.980790,7.647450,3.843365,0.064793],[9.307363,6.002211,7.155852,-4.227648,7.903851,-2.724535,5.886348,9.513053],[-7.759359,7.008151,6.005263,-1.655395,-0.843275,0.806620,4.611066,5.712624],[-9.794966,6.760551,-3.681568,-7.284656,-1.515304,6.683678,-8.663420,-7.838536],[-8.900701,2.156784,-8.901053,9.836564,-8.297796,-3.668380,6.725049,-2.538839],[-3.500240,3.354851,2.412524,-6.822577,-5.144766,0.918453,-9.945945,0.595258],[8.046644,-8.147855,6.456451,5.757917,0.443364,7.645261,6.617543,-6.412788],[3.889298,6.365107,7.361128,4.060977,1.537110,-6.726466,-4.683387,1.099917],[-8.065226,5.913316,7.829565,2.962295,-8.983197,5.790254,-8.131906,8.089087],[-0.951085,-2.313396,-7.392523,4.334715,0.597240,4.245388,-3.402612,5.048852],[0.153173,-2.882298,0.208125,2.739297,-3.499382,-6.391802,-0.056675,-8.009302],[-9.232659,-9.697422,-9.972442,-3.553832,0.937277,-5.455121,-4.605415,-8.624940],[-0.619662,-1.350279,1.043717,-6.133570,4.959171,-6.191281,-6.771196,-1.975421],[-1.617417,-2.429086,-0.595993,-0.126196,-5.183395,1.845725,-0.994153,-4.213725],[-1.879645,3.409445,-5.556490,9.786968,-3.614451,8.105600,5.595040,5.768387],[-2.883364,-3.165725,-9.292143,-0.738967,8.588725,-0.882583,-1.684628,3.795998],[6.591552,-8.868731,-8.901360,4.566328,4.969947,3.091678,-1.509604,-2.363322],[-9.094242,-6.439433,7.649594,-0.170332,-3.009384,6.949148,2.665406,-7.256686],[3.526367,4.368078,-2.800980,-3.872676,5.205514,-5.808532,-4.299708,9.945631],[-4.632474,9.134703,-8.438703,-5.377007,-1.778140,3.978385,-6.903491,9.247925],[-3.200673,5.121496,4.153159,8.991202,-9.939989,4.769033,-6.750874,3.398929],[-5.255414,8.123048,-2.054236,3.310918,5.890308,1.191921,-3.060371,2.182541],[9.106815,-9.907388,-4.517311,2.715708,2.690545,8.444152,6.116984,-8.152145],[6.635961,5.205135,-2.496404,6.485125,5.410016,0.385545,2.288254,7.886670],[-9.981282,1.860428,2.151825,4.000695,7.965022,-5.106759,9.007471,-2.474548],[-8.424329,0.709368,6.070596,-8.851930,9.037520,-0.256741,-4.432986,9.706743],[9.620223,1.543859,7.132984,-9.257445,2.194181,-9.842499,7.745782,-0.316926],[-0.609765,-4.851811,-5.495170,-5.831087,1.780267,-8.003460,-7.506871,-7.751025],[-0.848537,-9.880004,-0.491678,6.887873,-7.943149,-6.157271,-5.632123,2.198336],[-9.191028,-2.633806,0.981563,-6.562248,-8.736799,-8.091879,-3.670333,-8.380392],[4.151047,5.942022,8.996714,5.609883,-6.913076,-4.379218,-0.249519,1.919029],[7.977538,6.227859,-7.081700,7.660836,-9.102979,-3.234799,-3.564591,-6.946559],[1.788405,7.992148,-1.349872,-2.925133,7.986026,7.523083,0.186859,-8.298174],[8.428795,9.400982,-5.842380,-2.915623,-7.755135,5.874907,1.429339,-1.656808],[4.467294,-6.708928,0.821925,-0.111456,1.505834,-8.387502,-9.850469,2.328985],[5.209414,-9.128344,-0.431061,-7.694627,7.346855,6.738294,7.083881,0.177516],[-6.324629,-8.503656,3.411515,-0.964528,3.024759,9.331400,9.377142,9.567042],[3.241199,-4.504274,-0.326303,-7.275644,1.230428,-9.834308,-4.411250,3.923052],[3.392914,-5.333040,1.520039,2.578503,1.100176,-7.761774,-5.797685,9.056563],[3.802001,4.817007,9.991331,7.471496,5.317599,2.578473,-1.896351,-2.658118],[2.170539,-8.626653,2.375624,5.840564,-8.621864,-8.773556,0.923864,-7.225459],[2.961138,-8.840468,5.575750,5.191460,5.493710,-7.112428,-8.506812,-6.732120],[1.718007,-0.208394,-4.572861,-7.113106,1.165293,2.766314,-0.544578,-3.141178],[4.802747,-4.741510,-8.227208,-7.384715,7.404232,1.643041,6.898081,8.972738],[-8.149208,-6.373004,4.787347,8.275931,8.633447,6.692848,-2.869277,3.232429],[-5.630989,5.722091,-4.554998,-3.475366,-8.037888,6.768739,0.374909,4.460192],[-6.563041,6.801981,-7.029113,-5.270156,4.058927,4.230190,9.519330,-3.217968],[0.202312,6.609220,4.252363,8.192432,0.374028,4.494361,5.155722,3.118025],[-7.068896,0.756197,6.127749,-9.384330,6.473473,2.553076,8.031643,-6.453214],[2.712125,-1.580316,4.742532,-0.851006,-9.811155,-1.655268,-1.227944,4.237812],[-4.495539,8.667163,-5.233572,-1.974132,-2.061417,0.311363,2.552741,-8.970331],[8.974194,7.900050,-5.735822,4.022525,-8.858957,-3.892642,2.974469,5.776270],[-2.650866,-6.813701,0.417591,-0.285376,-6.361197,5.218941,8.877457,-1.429309],[-8.259589,5.793400,1.777459,3.682383,-6.558834,1.842247,3.148294,9.435758]], dtype = "float64")#candidate|10928|(72, 8)|const|float64
call_10927 = relay.TupleGetItem(func_2463_call(relay.reshape(const_10928.astype('float64'), [576,])), 2)
call_10929 = relay.TupleGetItem(func_2465_call(relay.reshape(const_10928.astype('float64'), [576,])), 2)
func_9199_call = mod.get_global_var('func_9199')
func_9201_call = mutated_mod.get_global_var('func_9201')
call_10939 = func_9199_call()
call_10940 = func_9199_call()
func_7918_call = mod.get_global_var('func_7918')
func_7919_call = mutated_mod.get_global_var('func_7919')
call_10944 = func_7918_call()
call_10945 = func_7918_call()
func_6755_call = mod.get_global_var('func_6755')
func_6757_call = mutated_mod.get_global_var('func_6757')
call_10950 = relay.TupleGetItem(func_6755_call(), 0)
call_10951 = relay.TupleGetItem(func_6757_call(), 0)
func_6313_call = mod.get_global_var('func_6313')
func_6316_call = mutated_mod.get_global_var('func_6316')
var_10966 = relay.var("var_10966", dtype = "float64", shape = (15, 1))#candidate|10966|(15, 1)|var|float64
var_10967 = relay.var("var_10967", dtype = "float64", shape = (48,))#candidate|10967|(48,)|var|float64
call_10965 = relay.TupleGetItem(func_6313_call(relay.reshape(var_10966.astype('float64'), [1, 3, 5]), relay.reshape(var_10967.astype('float64'), [48,]), ), 2)
call_10968 = relay.TupleGetItem(func_6316_call(relay.reshape(var_10966.astype('float64'), [1, 3, 5]), relay.reshape(var_10967.astype('float64'), [48,]), ), 2)
func_9763_call = mod.get_global_var('func_9763')
func_9764_call = mutated_mod.get_global_var('func_9764')
call_10982 = func_9763_call()
call_10983 = func_9763_call()
func_8787_call = mod.get_global_var('func_8787')
func_8789_call = mutated_mod.get_global_var('func_8789')
call_11009 = relay.TupleGetItem(func_8787_call(), 0)
call_11010 = relay.TupleGetItem(func_8789_call(), 0)
uop_11014 = relay.log2(call_10982.astype('float32')) # shape=(1, 9, 16)
uop_11016 = relay.log2(call_10983.astype('float32')) # shape=(1, 9, 16)
func_10181_call = mod.get_global_var('func_10181')
func_10182_call = mutated_mod.get_global_var('func_10182')
call_11025 = relay.TupleGetItem(func_10181_call(), 0)
call_11026 = relay.TupleGetItem(func_10182_call(), 0)
output = relay.Tuple([call_10919,call_10927,const_10928,call_10939,call_10944,call_10950,call_10965,var_10966,var_10967,call_11009,uop_11014,call_11025,])
output2 = relay.Tuple([call_10920,call_10929,const_10928,call_10940,call_10945,call_10951,call_10968,var_10966,var_10967,call_11010,uop_11016,call_11026,])
func_11058 = relay.Function([var_10966,var_10967,], output)
mod['func_11058'] = func_11058
mod = relay.transform.InferType()(mod)
var_11059 = relay.var("var_11059", dtype = "float64", shape = (15, 1))#candidate|11059|(15, 1)|var|float64
var_11060 = relay.var("var_11060", dtype = "float64", shape = (48,))#candidate|11060|(48,)|var|float64
output = func_11058(var_11059,var_11060,)
func_11061 = relay.Function([var_11059,var_11060,], output)
mutated_mod['func_11061'] = func_11061
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6755_call = mod.get_global_var('func_6755')
func_6757_call = mutated_mod.get_global_var('func_6757')
call_11110 = relay.TupleGetItem(func_6755_call(), 0)
call_11111 = relay.TupleGetItem(func_6757_call(), 0)
var_11114 = relay.var("var_11114", dtype = "float32", shape = (6, 9, 16))#candidate|11114|(6, 9, 16)|var|float32
bop_11115 = relay.divide(call_11110.astype('float64'), var_11114.astype('float64')) # shape=(6, 9, 16)
bop_11118 = relay.divide(call_11111.astype('float64'), var_11114.astype('float64')) # shape=(6, 9, 16)
output = bop_11115
output2 = bop_11118
func_11121 = relay.Function([var_11114,], output)
mod['func_11121'] = func_11121
mod = relay.transform.InferType()(mod)
mutated_mod['func_11121'] = func_11121
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11122 = relay.var("var_11122", dtype = "float32", shape = (6, 9, 16))#candidate|11122|(6, 9, 16)|var|float32
func_11121_call = mutated_mod.get_global_var('func_11121')
call_11123 = func_11121_call(var_11122)
output = call_11123
func_11124 = relay.Function([var_11122], output)
mutated_mod['func_11124'] = func_11124
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8787_call = mod.get_global_var('func_8787')
func_8789_call = mutated_mod.get_global_var('func_8789')
call_11126 = relay.TupleGetItem(func_8787_call(), 0)
call_11127 = relay.TupleGetItem(func_8789_call(), 0)
output = call_11126
output2 = call_11127
func_11137 = relay.Function([], output)
mod['func_11137'] = func_11137
mod = relay.transform.InferType()(mod)
mutated_mod['func_11137'] = func_11137
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11137_call = mutated_mod.get_global_var('func_11137')
call_11138 = func_11137_call()
output = call_11138
func_11139 = relay.Function([], output)
mutated_mod['func_11139'] = func_11139
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8286_call = mod.get_global_var('func_8286')
func_8287_call = mutated_mod.get_global_var('func_8287')
call_11146 = relay.TupleGetItem(func_8286_call(), 0)
call_11147 = relay.TupleGetItem(func_8287_call(), 0)
output = relay.Tuple([call_11146,])
output2 = relay.Tuple([call_11147,])
func_11148 = relay.Function([], output)
mod['func_11148'] = func_11148
mod = relay.transform.InferType()(mod)
mutated_mod['func_11148'] = func_11148
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11148_call = mutated_mod.get_global_var('func_11148')
call_11149 = func_11148_call()
output = call_11149
func_11150 = relay.Function([], output)
mutated_mod['func_11150'] = func_11150
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8300_call = mod.get_global_var('func_8300')
func_8301_call = mutated_mod.get_global_var('func_8301')
call_11195 = func_8300_call()
call_11196 = func_8300_call()
func_3035_call = mod.get_global_var('func_3035')
func_3039_call = mutated_mod.get_global_var('func_3039')
const_11207 = relay.const([[10],[-4],[-6],[4],[1],[-1],[-8],[-7],[-10],[-8],[3],[-10],[-7],[6],[4],[-8],[5],[7],[-8],[-5],[-8],[-7],[5],[-3],[5],[9],[3],[2],[2],[-5],[-1],[3],[5],[-7],[-3],[-4],[-7],[5],[-5],[6],[10],[-7],[-7],[-5],[8],[-7],[3],[2],[2],[-10],[4],[-5],[-5],[4],[1],[-9],[5],[7],[4],[3],[10],[-10],[4],[10],[5],[-2],[-6],[-9],[-9],[10],[-3],[2],[4],[2],[-9],[-1],[-6],[3],[-4],[5],[-5],[-8],[6],[-3],[-2],[-5],[-1],[-5],[-8],[6],[-3],[-8],[7],[-1],[6],[-10],[-5],[-1],[6],[3],[6],[-3],[7],[-3],[-6],[-2],[-5],[9],[4],[3],[-6],[-1],[1],[-9],[4],[5],[4],[-9],[7],[-7],[1],[1],[2],[8],[-10],[7],[7],[-6],[-8],[5],[10],[3],[1],[4],[4],[-10],[-1],[-2],[3],[-10],[-4],[8],[5],[-10],[-10],[6],[-7],[2],[3],[-6],[7],[3],[-9],[2],[9],[-4],[9],[4],[7],[-8],[9],[4],[4],[-5],[-2],[-3],[7],[7],[-3],[1],[-1],[4],[-8],[-5],[-10],[-9],[-8],[6],[9],[-1],[2],[-9],[2],[-6],[-5],[8],[3],[-7],[10],[-5],[6],[1],[9],[7],[9],[-8],[-2],[10],[5],[10],[5],[7],[1],[9],[5],[-4],[-10],[-4],[-2],[-6],[7],[-2],[2],[-4],[9],[6],[-3],[2],[-6],[-5],[-4],[1],[-6],[2],[6],[-1],[-1],[5],[-4],[-10],[-4],[-7],[-1],[10],[9],[-8],[6],[1],[-6],[2],[-1],[6],[-5],[-5],[9],[-3],[2],[-9],[10],[-10],[-7],[-4],[-8],[7],[-7],[6],[1],[10],[-5],[4],[-10],[7],[9],[-7],[-5],[8],[5],[-7],[8],[-9],[-4],[-3],[-8],[-10],[5],[9],[2],[-7],[1],[-10],[1],[10],[-9],[-9],[2],[1],[4],[10],[4],[7],[3],[5],[1],[8],[8],[-8],[-3],[2],[-5],[8],[10],[3],[5],[8],[-3],[-1],[2],[-4],[9],[-4],[-8],[-5],[3],[5],[-10],[-5],[-4],[8],[4],[-9],[2],[3],[-5],[6],[-9],[-3],[5],[9],[5],[7],[-7],[-8],[3],[-10],[-2],[3],[-8],[-6],[1],[9],[4],[-6],[9],[-8],[9],[8],[10],[-9],[-1],[-1],[10],[7],[-8],[3],[6],[-1],[5],[3],[5],[6],[9],[-10],[-1],[-3],[7],[-7],[7],[7],[8],[-7],[3],[7],[7],[1],[3],[6],[3],[-10]], dtype = "int16")#candidate|11207|(378, 1)|const|int16
var_11208 = relay.var("var_11208", dtype = "float64", shape = (48,))#candidate|11208|(48,)|var|float64
call_11206 = relay.TupleGetItem(func_3035_call(relay.reshape(const_11207.astype('int16'), [6, 9, 7]), relay.reshape(const_11207.astype('int16'), [6, 9, 7]), relay.reshape(var_11208.astype('float64'), [48,]), ), 0)
call_11209 = relay.TupleGetItem(func_3039_call(relay.reshape(const_11207.astype('int16'), [6, 9, 7]), relay.reshape(const_11207.astype('int16'), [6, 9, 7]), relay.reshape(var_11208.astype('float64'), [48,]), ), 0)
output = relay.Tuple([call_11195,call_11206,const_11207,var_11208,])
output2 = relay.Tuple([call_11196,call_11209,const_11207,var_11208,])
func_11231 = relay.Function([var_11208,], output)
mod['func_11231'] = func_11231
mod = relay.transform.InferType()(mod)
var_11232 = relay.var("var_11232", dtype = "float64", shape = (48,))#candidate|11232|(48,)|var|float64
output = func_11231(var_11232)
func_11233 = relay.Function([var_11232], output)
mutated_mod['func_11233'] = func_11233
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10575_call = mod.get_global_var('func_10575')
func_10577_call = mutated_mod.get_global_var('func_10577')
call_11303 = relay.TupleGetItem(func_10575_call(), 0)
call_11304 = relay.TupleGetItem(func_10577_call(), 0)
output = relay.Tuple([call_11303,])
output2 = relay.Tuple([call_11304,])
func_11306 = relay.Function([], output)
mod['func_11306'] = func_11306
mod = relay.transform.InferType()(mod)
mutated_mod['func_11306'] = func_11306
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11306_call = mutated_mod.get_global_var('func_11306')
call_11307 = func_11306_call()
output = call_11307
func_11308 = relay.Function([], output)
mutated_mod['func_11308'] = func_11308
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5631_call = mod.get_global_var('func_5631')
func_5632_call = mutated_mod.get_global_var('func_5632')
call_11337 = func_5631_call()
call_11338 = func_5631_call()
func_2260_call = mod.get_global_var('func_2260')
func_2264_call = mutated_mod.get_global_var('func_2264')
var_11342 = relay.var("var_11342", dtype = "float32", shape = (36,))#candidate|11342|(36,)|var|float32
const_11343 = relay.const([-5,-5,4,10,-3,-5,-2,-1,-9,5,-1,7,8,9,8,-5,6,-8,1,-2,-6,-7,4,-5,-2,4,-5,-5,9,-2,3,9,-7,-2,9,-5,8,1,-10,4,-1,5,1,8,3,-8,7,-8,8,-5,1,-10,-9,-3,-9,9,7,-5,-4,-10,-5,5,-6,8,-2,-9,-10,4,-1,-8,-3,-2,5,-7,-2,-7,-5,-3,-7,7,4,4,6,-7,2,7,4,-6,-7,-7,-1,-10,-9,9,3,-7,1,-5,7,4,-7,7,-10,-2,7,8,6,-6,10,-4,1,-2,-1,9,-8,1,6,9,-2,-3,-2,9,-10,4,-8,2,10,-2,-2,-2,6,6,-3,7,5,6,-2,5,8,1,10,7,-7,2,4,10,7,-3,10,-6,10,2,5,-6,-1,-2,2,10,10,1,-5,-3,6,3,-6,2,-10,-1,-6,-9,6,7,-3,-7,10,-7,8,7,8,1,10,-1,10,5,-1,-2,-8,-2,7,-3,7,1,-2,9,-2,-5,4,1,7,9,-2,2,-1,2,8,-4,-7,-2,7,8,-4,10,-8,3,6,-3,4,-10,-4,2,8,-6,-10,4,10,5,-7,-1,5,-10,5,-1,1,-3,-6,6,8,10,10,7,8,-3,8,-9,9,6,-3,2,-10,8,9,-9,5,7,3,-5,-6,5,-4,7,-4,-7,1,2,6,5,-5,2,-6,-5,-5,-10,-1,-4,-1,-10,7,-1,-9,-8,-4,-10,-9,-1,3,4,8,-8,-2,6,7,-6,5,3,-2,-1,-5,-7,5,-9,-6,8,-10,-3,-3,4,6,4,-1,5,9,-4,-7,9,1,-2,-3,-8,-9,5,-3,1,3,1,4,9,-2,-8,-4,-10,-4,-1,-3,4,-2,-3,10,-4,-1,8,1,-9,-10,1,-3,-8,-5,6,10,1,8,6,-8,-4,-3,6,-10,6,-1,6,10,-3,-5,-3,8,4,10,8,10,8,-6,9,7,-6,4,4,-7,7,5,-4,5,-3,-10,4,-6,-7,-5,6,4,2,-5,-2,-5,-2,-2,-7,6,4,4,-8,-8,-1,-3,-5,-1,5,-5,-8,-7,-1,9,-7,-8,1,-7,-2,-3,-6,-10,-3,9,-8,-6,-3,7,3,-3,-10,-9,5,-9,-1,-8,9,9,8,10,2,-2,-3,10,6,-6,4,-9,-1,4,1,2,-9,-1,-9,-4,-9,6,5,9,9,10,-1,2,7,6,9,7,-9,6,-1,8,7,3,-10,-5,-6,-10,-6,-8,10,1,4,-7,6,2,6,-9,-4,6,3,-2,-10,5,-7,-9,1,-4,9,9,-9,-5,8,9,-6,-5,10,-7,10,-6,-9,3,8,6,-1,5,3,-6,-5,5,1,10,9,-2,1,5,-7,-1,-8,-2,-9,8,8,7,8,-5,-3,-10,2,1,-10,-5,-7,-1,3,-3,-2,-6,-6,4,-6,4,-5,4,-6,3,5,4,4,6,-9,-10,3,-1,-1,-6,-5,-10,3,-10,-1,7,-10,-10,4,-4,7,4,-1,3,-10,-3,-7,9,-7,1,1,5,-6,-8,1,5,-5,9,4,10,-1,2,3,10,-8,9,-8,3,-7,8,4,-7,-2,6,10,-3,8,9,-7,-1,-1,-6,-5,6,-1,-2,-8,5,7,8,-7,6,-4,-5,5,8,10,-6,-3,9,-7,-1,1,-2,5,-6,9,-6,-9,6,10,-2,7,5,10,-8,-6,9,2,8,3,2,7,7,-10,2,8,-10,9,9,-1,6,5,-9,-9,8,2,-4,-7,-5,-7,-1,-8,-3,8,8,-8,-1,2,-2,6,2,10,-6,-8,-8,-7,-1,-9,2,6,-9,6,7,-7,-10,-1,-2,10,-9,-9,3,-3,-9,-9,-2,-4,-9,-8,-2,-7,1,-5,-8,10,-3,-4,5,3,2,8,8,4,4,-6,-8,-9,3,-3,-8,8,-4,-8,-2,4,4,9,-5,9,-6,6,-8,-4,-8,1,1,-7,-6,3,-7,-3,10,5,6,5,-1,-5,-7,-1,7,10,3,-3,4,8,-5,-6,-4,10,-7,1,7,8,-8,-10,-10,3,2,4,-1,9,5,1,-6,-3,-8,-2,2,-3,-8,-5,5,-4,3,-3,2,2,-5,1,6,6,-8,-10,-8,-3,8,-5,-8,-10,-8,-7,4,2,-4,3,-4,-7,9,5,2,4,-7,-3,-1,-6,-5,-1,-4,-10,-5,10,2,-4,-5,-8,8,-7,4,-8,2,-4,-8,-7,10,-1,-10,4,10,-5,-6,4,-9,-7,-10,8,10,10,-8,10,-6,-3,-6,10,-3,-3,-2,-3,9,-1,-8,2,2,-5,10,-10,-8,3,-8,-2,-10,1,3,2,-5,-2,4,10,7,-6,-3,-3,7,-7,-3,-7,-3,6,4,7,-10,4,-2,-10,2,-5,-2,7,8,-6,2,-3,-6,8,-4,-1,3,-8,10,3,-2,8,-1,-5,9,-8,-9,-4,10,6,7,8,-3,-5,2,6,8,-2,-6,-8,10,-6,6,7,3,10,9,2,-2,-6,6,-10,3,-3,-9,-6,6,-2,-3,10,2,-6,8,4,4,6,-9,4,10,-3,-10,-2,10,-3,-2,-8,3,-5,1,-10,-9,-7,-5,-2,-10,-6,3,-9,3,-7,2,-1,-9,-5,8,-7,6,-5,5,-7,-10,5,2,-8,3,10,-1,2,7,-2,7,-10,-5,5,2,-7,7,-8,8,-4,1,8,-4,2,2,-4,5,-1,1,-2,-7,7,-3,-3,-3,3,8,8,4,3,5,-6,-3,3,-2,-1,8,-3,5,3,2,3,-9,-3,-2,10,6,-10,-2,5,1,-5,5,9,5,-7,-8,-8,-3,2,7,-3,-6,2,-9,2,-4,-9,6,-9,10,7,-8,6,5,-7,10,7,-6,-5,-7,-4,-5,-2,-1,-9,6,-2,2,6,-8,2,-4,5,10,-2,7,10,9,3,2,2,10,6,3,-9,-4,8,-2,7,-1,10,7,1,1,-5,-6,5,-2,-7,-3,-4,9,-7,5,2,-5,5,2,7,10,10,-10,3,6,-6,6,7,4,-6,-10,-8,-1,-6,-10,10,-6,7,5,-9,-8,9,-7,-9,2,3,-4,-6,3,-9,6,3,10,-9,8,4,-5,1,-1,6,-4,5,7,4,-3,2,-4,1,-5,-9,-10,-10,-7,-6,1,-2,-10,-4,8,8,-5,-3,7,3,6,-6,6,-1,9,1,-9,7,-2,6,-1,3,7,4,-2,6,10,6,2,-9,5,10,-5,-3,8,-8,6,-4,9,-6,7,-1,-6,5,4,-8,5,3,3,-8,-7,-9,-10,-5,2,-2,-3,-8,-1,6,4,-6,-2,-9,-9,7,5,-9,10,4,3,-1,-2,-7,9,-2,-9,-3,9,7,1,4,-1,-1,-6,3,4,6,-2,-10,-6,7,9,8,4,-8,1,-2,-4,5,1,-7,-3,-10,-8,9,1,1,8,9,-7,10,8,10,7,10,-5,-1,-4,3,-9,7,-10,1], dtype = "int8")#candidate|11343|(1320,)|const|int8
call_11341 = relay.TupleGetItem(func_2260_call(relay.reshape(var_11342.astype('float32'), [4, 3, 3]), relay.reshape(const_11343.astype('int8'), [660, 2]), ), 0)
call_11344 = relay.TupleGetItem(func_2264_call(relay.reshape(var_11342.astype('float32'), [4, 3, 3]), relay.reshape(const_11343.astype('int8'), [660, 2]), ), 0)
func_8251_call = mod.get_global_var('func_8251')
func_8252_call = mutated_mod.get_global_var('func_8252')
call_11356 = relay.TupleGetItem(func_8251_call(), 0)
call_11357 = relay.TupleGetItem(func_8252_call(), 0)
output = relay.Tuple([call_11337,call_11341,var_11342,const_11343,call_11356,])
output2 = relay.Tuple([call_11338,call_11344,var_11342,const_11343,call_11357,])
func_11361 = relay.Function([var_11342,], output)
mod['func_11361'] = func_11361
mod = relay.transform.InferType()(mod)
mutated_mod['func_11361'] = func_11361
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11362 = relay.var("var_11362", dtype = "float32", shape = (36,))#candidate|11362|(36,)|var|float32
func_11361_call = mutated_mod.get_global_var('func_11361')
call_11363 = func_11361_call(var_11362)
output = call_11363
func_11364 = relay.Function([var_11362], output)
mutated_mod['func_11364'] = func_11364
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10001_call = mod.get_global_var('func_10001')
func_10003_call = mutated_mod.get_global_var('func_10003')
call_11368 = func_10001_call()
call_11369 = func_10001_call()
output = call_11368
output2 = call_11369
func_11373 = relay.Function([], output)
mod['func_11373'] = func_11373
mod = relay.transform.InferType()(mod)
output = func_11373()
func_11374 = relay.Function([], output)
mutated_mod['func_11374'] = func_11374
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11405 = relay.var("var_11405", dtype = "float64", shape = (9, 5, 8))#candidate|11405|(9, 5, 8)|var|float64
var_11406 = relay.var("var_11406", dtype = "float64", shape = (9, 5, 8))#candidate|11406|(9, 5, 8)|var|float64
bop_11407 = relay.power(var_11405.astype('float64'), relay.reshape(var_11406.astype('float64'), relay.shape_of(var_11405))) # shape=(9, 5, 8)
uop_11414 = relay.sin(var_11405.astype('float64')) # shape=(9, 5, 8)
output = relay.Tuple([bop_11407,uop_11414,])
output2 = relay.Tuple([bop_11407,uop_11414,])
func_11421 = relay.Function([var_11405,var_11406,], output)
mod['func_11421'] = func_11421
mod = relay.transform.InferType()(mod)
mutated_mod['func_11421'] = func_11421
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11421_call = mutated_mod.get_global_var('func_11421')
var_11423 = relay.var("var_11423", dtype = "float64", shape = (9, 5, 8))#candidate|11423|(9, 5, 8)|var|float64
var_11424 = relay.var("var_11424", dtype = "float64", shape = (9, 5, 8))#candidate|11424|(9, 5, 8)|var|float64
call_11422 = func_11421_call(var_11423,var_11424,)
output = call_11422
func_11425 = relay.Function([var_11423,var_11424,], output)
mutated_mod['func_11425'] = func_11425
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11433 = relay.var("var_11433", dtype = "uint32", shape = ())#candidate|11433|()|var|uint32
var_11434 = relay.var("var_11434", dtype = "uint32", shape = (5, 1, 16))#candidate|11434|(5, 1, 16)|var|uint32
bop_11435 = relay.add(var_11433.astype('uint32'), var_11434.astype('uint32')) # shape=(5, 1, 16)
bop_11450 = relay.maximum(var_11433.astype('uint16'), var_11434.astype('uint16')) # shape=(5, 1, 16)
bop_11461 = relay.subtract(bop_11435.astype('int64'), var_11433.astype('int64')) # shape=(5, 1, 16)
func_8626_call = mod.get_global_var('func_8626')
func_8628_call = mutated_mod.get_global_var('func_8628')
call_11475 = func_8626_call()
call_11476 = func_8626_call()
output = relay.Tuple([bop_11450,bop_11461,call_11475,])
output2 = relay.Tuple([bop_11450,bop_11461,call_11476,])
func_11477 = relay.Function([var_11433,var_11434,], output)
mod['func_11477'] = func_11477
mod = relay.transform.InferType()(mod)
mutated_mod['func_11477'] = func_11477
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11477_call = mutated_mod.get_global_var('func_11477')
var_11479 = relay.var("var_11479", dtype = "uint32", shape = ())#candidate|11479|()|var|uint32
var_11480 = relay.var("var_11480", dtype = "uint32", shape = (5, 1, 16))#candidate|11480|(5, 1, 16)|var|uint32
call_11478 = func_11477_call(var_11479,var_11480,)
output = call_11478
func_11481 = relay.Function([var_11479,var_11480,], output)
mutated_mod['func_11481'] = func_11481
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9667_call = mod.get_global_var('func_9667')
func_9668_call = mutated_mod.get_global_var('func_9668')
call_11588 = relay.TupleGetItem(func_9667_call(), 0)
call_11589 = relay.TupleGetItem(func_9668_call(), 0)
var_11590 = relay.var("var_11590", dtype = "float64", shape = (16, 9, 16))#candidate|11590|(16, 9, 16)|var|float64
bop_11591 = relay.floor_mod(call_11588.astype('float64'), var_11590.astype('float64')) # shape=(16, 9, 16)
bop_11594 = relay.floor_mod(call_11589.astype('float64'), var_11590.astype('float64')) # shape=(16, 9, 16)
uop_11597 = relay.rsqrt(bop_11591.astype('float32')) # shape=(16, 9, 16)
uop_11599 = relay.rsqrt(bop_11594.astype('float32')) # shape=(16, 9, 16)
func_11361_call = mod.get_global_var('func_11361')
func_11364_call = mutated_mod.get_global_var('func_11364')
var_11603 = relay.var("var_11603", dtype = "float32", shape = (36,))#candidate|11603|(36,)|var|float32
call_11602 = relay.TupleGetItem(func_11361_call(relay.reshape(var_11603.astype('float32'), [36,])), 1)
call_11604 = relay.TupleGetItem(func_11364_call(relay.reshape(var_11603.astype('float32'), [36,])), 1)
func_578_call = mod.get_global_var('func_578')
func_583_call = mutated_mod.get_global_var('func_583')
const_11607 = relay.const([[0.141708,-1.900571,6.436341,9.756602,-9.140391,-0.867711,2.230195,3.608930,-2.236047,-2.206120,-5.070050,-3.573420,5.322571,-0.383299,-1.105302,6.516198,7.658183,-3.243002,-7.078121,8.469624,-3.287400,-3.042088,-4.184289,-0.691541,2.077010,4.878843,6.253168,2.822443,0.631731,-6.031570,9.241954,5.790276,0.104219,3.895902,-5.881785,3.725066,-5.759179,-6.328903,9.585643,-4.066589,0.052858,5.784253,9.371175,-0.501094,-6.732658,3.240973,-1.090453,4.653359,-1.236428,1.262394,8.760522,2.137156,-3.629186,1.361075,-9.017507,-3.129719,3.773507,-3.910652,-9.890453,9.878616,-3.714716,-3.693358,-3.458092,-1.735732,-0.069180,0.972641,-7.982004,-4.399026,-7.590174,0.097005,7.071070,-6.163432,8.942812,4.322926,3.698297,-4.086765,7.326591,-7.335921,-5.614078,-7.267786,3.485412,8.681271,-2.173239,-1.160346,7.842888,5.458580,-0.803003,3.491255,5.463315,2.081843,0.876851,-4.153689,7.587639,-4.484759,0.800022,-6.698458,-9.643110,4.891097,5.210740,3.827383,7.511288,9.139614,4.356552,8.546513,-2.985072,9.882746,-9.379687,-3.289481,4.205914,-7.470141,-9.262222,2.012402,-2.162053,0.131169,-8.948837,-0.702631,-6.608009,8.318575,-1.742626,-5.261372,-0.534566,-1.468474,3.674448,-3.900348,-9.343871,1.156655,8.010985,3.183154,1.482546,-2.064036,-5.750189,6.408103,-0.761499,-7.195285,2.437414,7.084905,-4.582549,8.546141,4.065996,-7.774449,-5.200599,-4.430749,-4.274083,4.191735,-1.222550,-3.014493,-7.378052,5.260404,-0.902035,0.614457,-7.133989,5.114614,-5.507465,-0.120505,-1.729678,9.066801,9.910834,4.407814,-7.987410,3.751733,-9.448600,0.246243,-3.733451,6.039114,-2.291474,-7.251025,-9.976669,9.979934,-5.035918,-7.641777,4.647114,4.862460,7.558301,-0.408108,6.297224,-1.671863,9.706361,-2.159142,7.556464,4.221379,-5.096277,-9.528810,0.253492,-1.132471,-5.682153,6.320839,-9.662737,-7.332260,1.929244,9.144957,-7.532429,-4.312220,4.851530,3.087361,-3.775023,-4.036298,6.872806,2.976235,3.219218,-1.640430,-3.192000,4.732326,0.653792,-1.646701,-1.878101,6.107836,-0.132162,1.573910,6.921302,-3.682278,7.587193,-5.143444,1.569137,1.112704,1.822966,-7.866788,2.346622,6.078681,4.684135,0.906968,9.201613,2.632803,-4.953845,-6.431070,0.201495,-0.062703,0.161232,0.389659,-8.008817,7.249729,4.492449,-0.890430,6.651245,8.209495,1.698697,0.942240,3.161640,-2.048692,4.925623,2.085262,5.665703,9.129115,1.874046,-2.017832,2.893746,0.069457,7.474305,-3.415220,1.469279,-5.627687,-4.208303,-5.440901,-7.558788,-0.711287,0.557563,-6.412016,7.066545,7.466793,8.009499,-6.863219,-4.163957,5.066455,8.906360,-5.660721,5.540561,-8.483733,-4.788760,5.006954,0.281382,-4.626417,-3.423183,-8.944647,-2.775404,-1.168391,8.552979,4.247482,-6.151121,6.936326,-3.978152,1.460652,-0.532909,7.815453,-8.121615,0.511542,-5.784227,-3.773772,4.338727,-6.883623,-2.628192,4.077930,-5.502956,0.460492,1.667390,-1.751018,5.393631,5.174757,7.739362,-9.847908,5.727454,-1.075791,-4.574818,-5.302801,8.237064,6.665601,4.524414,3.886684,3.030488,2.438472,2.531489,-3.133634,3.509752,1.526694,1.594813,-6.530580,1.907593,-7.300466,0.178107,1.053838,-9.774663,-8.722130,8.702700,9.790803,1.684207,1.988501,-2.793102,5.325767,7.821917,7.931817,-0.844475,-9.548192,-6.653543,0.034742,2.938143,-3.835795,-4.566783,-2.172058,-2.565903,-0.184853,-9.553407,-3.865821,-1.035769,-3.164977,-9.973575,-6.970351,0.252184,8.577091,4.831661,2.722848,5.353129,-6.485807,-4.944783,-1.643570,-8.395213,-4.837813,-9.533029,-4.550345,-6.608483,4.538613,-0.698886,-7.574813,-8.189444,8.631204,-3.749303,-0.167110,-7.619957,2.264954,8.671601,5.157883,1.705720,-3.231836,-8.394899,-3.337802,4.599584,-2.488653,0.745132,3.673929,-6.864711,7.657066,9.823398,-7.036266,1.574826,5.246976,8.337416,-9.964853,-0.120625,5.419679,4.418632,-3.824351,3.292009,-0.037754,5.683906,-6.642267,-4.206979,-8.000736,7.897253,8.946543,9.463441,-9.076175,7.369988,4.787489,6.436663,6.018934,-0.250161,-5.598214,-2.759856,-2.161108,-4.843969,5.345004,-7.650469,9.398654,-1.532944,-4.505102,6.688167,5.768708,-4.455726,-2.614708,9.840458,-8.890854,3.956222,1.008569,-6.610168,0.122949,-2.679331,5.919240,0.690294,-5.384828,-3.497742,3.450005,9.896867,-0.778723,0.902407,-0.525222,-0.414837,-0.572788,3.740160,9.212879,8.979799,-4.204653,6.956369,-2.438201,-6.459762,4.487892,-3.183035,-1.130166,2.705303,8.441561,-8.195670,1.748366,-7.017819,-4.155321,5.841879,1.710632,0.027282,-4.228415,-6.885334,9.713631,6.356791,5.411122,3.849306,-3.036186,-0.812725,1.098721,2.208231,-8.028815,-8.535892,6.718482,-0.602569,-6.484134,-8.351693,2.896275,0.563651,-2.383662,1.537990,-8.460574,1.921744,1.784845,-0.950530,-9.921159,2.679020,-4.981276,-1.307529,3.907104,-5.928135,-9.188163,-0.051396,0.770135,-1.678182,-5.991126,8.677209,-5.961522,5.414311,9.142394,-4.389276,7.520564,-3.322566,2.180962,0.570382,2.967389,-9.114355,3.693417,1.900783,-2.683601,-7.151084,0.588989,-8.794812,-8.261633,5.585014,4.287321,-1.479421,0.558019,-2.834369,1.911817,5.798441,-0.179417,-9.981147,-8.873971,-1.006716,2.039570,-2.331624,3.024883,-2.324040,-7.238618,7.455028,6.859867,3.841215,-5.741423,2.300755,3.138116,-9.781439,-6.687303,9.451038,9.572295,5.955416,-3.814394,0.503344,-3.855704,-2.755274,-8.926670,5.031742,8.756685,-0.027438,-9.215851,6.341457,4.818469,1.761867,-8.874385,-1.861913,9.794669,-5.626617,3.450803,3.965563,9.907887,6.370647,8.703270,3.093710,4.016430,-1.296000,5.679474,9.545808,1.734820,-3.195483,-0.701549,3.055556,-0.841396,6.861750,-3.556446,-6.422031,-6.486515,6.766601,-6.988416,-3.795358,-7.809842,6.882232,-2.623485,-7.090495,-0.317853,5.681928,-7.219071,-1.482095,-5.113974,-9.501852,-1.929667,-8.020525,-3.780051,-9.698001,-1.707818,-2.473236,8.838185,-3.524063,4.683652,4.084243,5.435004,-5.430083,-2.061949,5.291707,-1.222842,3.901795,-4.763883,-6.276607,3.611670,7.074064,9.899132,-3.022517,2.828969,0.360862,-9.761833,-2.271599,2.159968,9.807573,2.615672,9.576998,-7.902476,-8.613616,-2.715569,-2.366777,3.090153,-7.884996,5.874538,5.619974,5.897246,5.073720,-8.205146,-3.066386,-4.730397,2.887306,-2.666196,-4.517975,1.096434,7.140331,2.498028,2.188660,4.321358,9.753653,-6.258164,8.987427,7.201909,5.822600,9.681922,-8.163378,4.756908,2.536131,-2.170609,3.345001,4.541804,4.580570,-2.593664,5.005425,-6.819444,-6.456783,-7.653119,3.036581,9.252127,3.093964,-4.475657,-0.213686,8.715195,1.413887,2.333763,9.998386,4.498364,7.243662,2.139427,1.824983,-9.945629,-1.500800,6.216340,-7.223053,2.745937,8.855242,5.808636,4.677189,-6.556954,-5.535256,7.090756,-1.283151,7.348669,-6.463508,-1.447072,-9.569803,-2.138796,0.500505,-6.746998,-1.253899,4.512982,4.447874,4.440266,2.665047,5.605843,-0.897381,8.098510,1.650285,-3.104615,3.804766,9.050264,9.506632,1.336539,-1.707456,8.713997,2.418512,-9.784967,0.473003,0.088605,4.179515,2.245520,-0.895109,-0.030281,4.946188,0.676654,-7.383759,-3.564806,-7.478098,-1.062629,-0.475429,0.982284,2.588290,-5.082929,-3.826361,6.880775,2.808880,2.074859,-3.751109,5.413622,-6.010427,-8.846446,-8.842821,9.649872,-0.401052,6.567930,2.064825,-1.518052,-5.321310,5.907646,2.461145,2.672237,6.428589,-0.931901,-0.883901,6.210502,-5.128100,1.363528,7.982755,-8.520269,4.762844,-1.592859,-0.895617,5.704910,9.702567,8.072314,8.801985,1.689736,5.259024,-9.914438,-2.929363,5.393985,-9.847204,7.885729,0.532616,6.880415,0.624278,1.251498,2.049399,-1.306051,5.105428,9.707247,-0.639160,-5.333047,-8.302575,-6.428782,-3.850860,0.422964,-5.116578,-7.709551,-7.520753,-4.231016,3.778735,-4.660989,-1.345514,-6.869391,-3.198669,5.077475,-1.466425,4.955147,-6.163955,9.686269,8.057453,0.847014,9.954825,6.583546,-9.825049,2.024201,2.496167,-1.976009,3.659608,0.775343,-5.161060,-6.683730,-1.237430,3.275267,0.903354,-8.785940,0.218424,2.869272,3.608134,3.035039,-8.993797,-9.056838,-8.367442,-2.971902,6.204708,8.034674,-8.439604,-3.697246,0.613523,5.014578,4.940387,8.681643,-6.600103,6.079073,8.536327]], dtype = "float64")#candidate|11607|(1, 819)|const|float64
var_11608 = relay.var("var_11608", dtype = "float64", shape = (576,))#candidate|11608|(576,)|var|float64
call_11606 = relay.TupleGetItem(func_578_call(relay.reshape(const_11607.astype('float64'), [7, 13, 9]), relay.reshape(const_11607.astype('float64'), [7, 13, 9]), relay.reshape(var_11608.astype('float64'), [576,]), ), 5)
call_11609 = relay.TupleGetItem(func_583_call(relay.reshape(const_11607.astype('float64'), [7, 13, 9]), relay.reshape(const_11607.astype('float64'), [7, 13, 9]), relay.reshape(var_11608.astype('float64'), [576,]), ), 5)
output = relay.Tuple([uop_11597,call_11602,var_11603,call_11606,const_11607,var_11608,])
output2 = relay.Tuple([uop_11599,call_11604,var_11603,call_11609,const_11607,var_11608,])
func_11611 = relay.Function([var_11590,var_11603,var_11608,], output)
mod['func_11611'] = func_11611
mod = relay.transform.InferType()(mod)
var_11612 = relay.var("var_11612", dtype = "float64", shape = (16, 9, 16))#candidate|11612|(16, 9, 16)|var|float64
var_11613 = relay.var("var_11613", dtype = "float32", shape = (36,))#candidate|11613|(36,)|var|float32
var_11614 = relay.var("var_11614", dtype = "float64", shape = (576,))#candidate|11614|(576,)|var|float64
output = func_11611(var_11612,var_11613,var_11614,)
func_11615 = relay.Function([var_11612,var_11613,var_11614,], output)
mutated_mod['func_11615'] = func_11615
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8251_call = mod.get_global_var('func_8251')
func_8252_call = mutated_mod.get_global_var('func_8252')
call_11691 = relay.TupleGetItem(func_8251_call(), 0)
call_11692 = relay.TupleGetItem(func_8252_call(), 0)
func_7115_call = mod.get_global_var('func_7115')
func_7119_call = mutated_mod.get_global_var('func_7119')
var_11708 = relay.var("var_11708", dtype = "bool", shape = (660,))#candidate|11708|(660,)|var|bool
var_11709 = relay.var("var_11709", dtype = "int16", shape = (378,))#candidate|11709|(378,)|var|int16
call_11707 = relay.TupleGetItem(func_7115_call(relay.reshape(var_11708.astype('bool'), [15, 4, 11]), relay.reshape(var_11708.astype('bool'), [15, 4, 11]), relay.reshape(var_11709.astype('int16'), [126, 3]), ), 4)
call_11710 = relay.TupleGetItem(func_7119_call(relay.reshape(var_11708.astype('bool'), [15, 4, 11]), relay.reshape(var_11708.astype('bool'), [15, 4, 11]), relay.reshape(var_11709.astype('int16'), [126, 3]), ), 4)
func_3162_call = mod.get_global_var('func_3162')
func_3169_call = mutated_mod.get_global_var('func_3169')
const_11748 = relay.const([[-7,4,-4,-7,6,-3,-2,8,-3,-8,-10,-10,1,9,-3,9,-9,-9,-4,10,-4,10,2,-8,6,5,2,-8,-7,8,3,-2,-2,5,-9,9,-10,9,-7,-4,5,-9,-5,2,6,-3,-1,1,-6,-1,-1,-10,1,2,-8,-1,6,-10,8,2,-5,-3,10,10,-10,10,-5,-4,-2,4,-1,-3]], dtype = "uint32")#candidate|11748|(1, 72)|const|uint32
var_11749 = relay.var("var_11749", dtype = "float64", shape = (576,))#candidate|11749|(576,)|var|float64
var_11750 = relay.var("var_11750", dtype = "int32", shape = ())#candidate|11750|()|var|int32
var_11751 = relay.var("var_11751", dtype = "float32", shape = (36,))#candidate|11751|(36,)|var|float32
var_11752 = relay.var("var_11752", dtype = "int8", shape = (660, 2))#candidate|11752|(660, 2)|var|int8
call_11747 = relay.TupleGetItem(func_3162_call(relay.reshape(const_11748.astype('uint32'), [3, 4, 6]), relay.reshape(const_11748.astype('uint32'), [3, 4, 6]), relay.reshape(var_11749.astype('float64'), [288, 2]), relay.reshape(var_11750.astype('int32'), []), relay.reshape(var_11751.astype('float32'), [9, 4]), relay.reshape(var_11752.astype('int8'), [1320,]), ), 10)
call_11753 = relay.TupleGetItem(func_3169_call(relay.reshape(const_11748.astype('uint32'), [3, 4, 6]), relay.reshape(const_11748.astype('uint32'), [3, 4, 6]), relay.reshape(var_11749.astype('float64'), [288, 2]), relay.reshape(var_11750.astype('int32'), []), relay.reshape(var_11751.astype('float32'), [9, 4]), relay.reshape(var_11752.astype('int8'), [1320,]), ), 10)
output = relay.Tuple([call_11691,call_11707,var_11708,var_11709,call_11747,const_11748,var_11749,var_11750,var_11751,var_11752,])
output2 = relay.Tuple([call_11692,call_11710,var_11708,var_11709,call_11753,const_11748,var_11749,var_11750,var_11751,var_11752,])
func_11755 = relay.Function([var_11708,var_11709,var_11749,var_11750,var_11751,var_11752,], output)
mod['func_11755'] = func_11755
mod = relay.transform.InferType()(mod)
var_11756 = relay.var("var_11756", dtype = "bool", shape = (660,))#candidate|11756|(660,)|var|bool
var_11757 = relay.var("var_11757", dtype = "int16", shape = (378,))#candidate|11757|(378,)|var|int16
var_11758 = relay.var("var_11758", dtype = "float64", shape = (576,))#candidate|11758|(576,)|var|float64
var_11759 = relay.var("var_11759", dtype = "int32", shape = ())#candidate|11759|()|var|int32
var_11760 = relay.var("var_11760", dtype = "float32", shape = (36,))#candidate|11760|(36,)|var|float32
var_11761 = relay.var("var_11761", dtype = "int8", shape = (660, 2))#candidate|11761|(660, 2)|var|int8
output = func_11755(var_11756,var_11757,var_11758,var_11759,var_11760,var_11761,)
func_11762 = relay.Function([var_11756,var_11757,var_11758,var_11759,var_11760,var_11761,], output)
mutated_mod['func_11762'] = func_11762
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11786 = relay.var("var_11786", dtype = "float64", shape = (1, 2, 9))#candidate|11786|(1, 2, 9)|var|float64
uop_11787 = relay.cosh(var_11786.astype('float64')) # shape=(1, 2, 9)
output = uop_11787
output2 = uop_11787
F = relay.Function([var_11786,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_11786,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

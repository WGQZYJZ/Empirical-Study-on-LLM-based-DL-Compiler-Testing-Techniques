import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_8 = relay.var("var_8", dtype = "uint8", shape = (5, 11, 3))#candidate|8|(5, 11, 3)|var|uint8
var_9 = relay.var("var_9", dtype = "uint8", shape = (5, 11, 3))#candidate|9|(5, 11, 3)|var|uint8
bop_10 = relay.less_equal(var_8.astype('bool'), relay.reshape(var_9.astype('bool'), relay.shape_of(var_8))) # shape=(5, 11, 3)
bop_34 = relay.logical_and(var_8.astype('bool'), relay.reshape(bop_10.astype('bool'), relay.shape_of(var_8))) # shape=(5, 11, 3)
output = bop_34
output2 = bop_34
func_38 = relay.Function([var_8,var_9,], output)
mod['func_38'] = func_38
mod = relay.transform.InferType()(mod)
var_39 = relay.var("var_39", dtype = "uint8", shape = (5, 11, 3))#candidate|39|(5, 11, 3)|var|uint8
var_40 = relay.var("var_40", dtype = "uint8", shape = (5, 11, 3))#candidate|40|(5, 11, 3)|var|uint8
output = func_38(var_39,var_40,)
func_41 = relay.Function([var_39,var_40,], output)
mutated_mod['func_41'] = func_41
mutated_mod = relay.transform.InferType()(mutated_mod)
var_157 = relay.var("var_157", dtype = "uint32", shape = (8, 13, 5))#candidate|157|(8, 13, 5)|var|uint32
var_158 = relay.var("var_158", dtype = "uint32", shape = (8, 13, 5))#candidate|158|(8, 13, 5)|var|uint32
bop_159 = relay.less_equal(var_157.astype('bool'), relay.reshape(var_158.astype('bool'), relay.shape_of(var_157))) # shape=(8, 13, 5)
output = bop_159
output2 = bop_159
func_166 = relay.Function([var_157,var_158,], output)
mod['func_166'] = func_166
mod = relay.transform.InferType()(mod)
mutated_mod['func_166'] = func_166
mutated_mod = relay.transform.InferType()(mutated_mod)
func_166_call = mutated_mod.get_global_var('func_166')
var_168 = relay.var("var_168", dtype = "uint32", shape = (8, 13, 5))#candidate|168|(8, 13, 5)|var|uint32
var_169 = relay.var("var_169", dtype = "uint32", shape = (8, 13, 5))#candidate|169|(8, 13, 5)|var|uint32
call_167 = func_166_call(var_168,var_169,)
output = call_167
func_170 = relay.Function([var_168,var_169,], output)
mutated_mod['func_170'] = func_170
mutated_mod = relay.transform.InferType()(mutated_mod)
var_187 = relay.var("var_187", dtype = "float32", shape = (1, 3, 13))#candidate|187|(1, 3, 13)|var|float32
var_188 = relay.var("var_188", dtype = "float32", shape = (5, 3, 13))#candidate|188|(5, 3, 13)|var|float32
bop_189 = relay.power(var_187.astype('float32'), var_188.astype('float32')) # shape=(5, 3, 13)
func_38_call = mod.get_global_var('func_38')
func_41_call = mutated_mod.get_global_var('func_41')
var_195 = relay.var("var_195", dtype = "uint8", shape = (165,))#candidate|195|(165,)|var|uint8
call_194 = func_38_call(relay.reshape(var_195.astype('uint8'), [5, 11, 3]), relay.reshape(var_195.astype('uint8'), [5, 11, 3]), )
call_196 = func_38_call(relay.reshape(var_195.astype('uint8'), [5, 11, 3]), relay.reshape(var_195.astype('uint8'), [5, 11, 3]), )
func_166_call = mod.get_global_var('func_166')
func_170_call = mutated_mod.get_global_var('func_170')
var_208 = relay.var("var_208", dtype = "uint32", shape = (520,))#candidate|208|(520,)|var|uint32
call_207 = func_166_call(relay.reshape(var_208.astype('uint32'), [8, 13, 5]), relay.reshape(var_208.astype('uint32'), [8, 13, 5]), )
call_209 = func_166_call(relay.reshape(var_208.astype('uint32'), [8, 13, 5]), relay.reshape(var_208.astype('uint32'), [8, 13, 5]), )
func_166_call = mod.get_global_var('func_166')
func_170_call = mutated_mod.get_global_var('func_170')
call_212 = func_166_call(relay.reshape(var_208.astype('uint32'), [8, 13, 5]), relay.reshape(call_207.astype('uint32'), [8, 13, 5]), )
call_213 = func_166_call(relay.reshape(var_208.astype('uint32'), [8, 13, 5]), relay.reshape(call_207.astype('uint32'), [8, 13, 5]), )
output = relay.Tuple([bop_189,call_194,var_195,call_207,var_208,call_212,])
output2 = relay.Tuple([bop_189,call_196,var_195,call_209,var_208,call_213,])
func_217 = relay.Function([var_187,var_188,var_195,var_208,], output)
mod['func_217'] = func_217
mod = relay.transform.InferType()(mod)
var_218 = relay.var("var_218", dtype = "float32", shape = (1, 3, 13))#candidate|218|(1, 3, 13)|var|float32
var_219 = relay.var("var_219", dtype = "float32", shape = (5, 3, 13))#candidate|219|(5, 3, 13)|var|float32
var_220 = relay.var("var_220", dtype = "uint8", shape = (165,))#candidate|220|(165,)|var|uint8
var_221 = relay.var("var_221", dtype = "uint32", shape = (520,))#candidate|221|(520,)|var|uint32
output = func_217(var_218,var_219,var_220,var_221,)
func_222 = relay.Function([var_218,var_219,var_220,var_221,], output)
mutated_mod['func_222'] = func_222
mutated_mod = relay.transform.InferType()(mutated_mod)
var_380 = relay.var("var_380", dtype = "float64", shape = (6, 14, 15))#candidate|380|(6, 14, 15)|var|float64
uop_381 = relay.exp(var_380.astype('float64')) # shape=(6, 14, 15)
bop_384 = relay.equal(var_380.astype('bool'), relay.reshape(uop_381.astype('bool'), relay.shape_of(var_380))) # shape=(6, 14, 15)
uop_397 = relay.acosh(uop_381.astype('float64')) # shape=(6, 14, 15)
output = relay.Tuple([bop_384,uop_397,])
output2 = relay.Tuple([bop_384,uop_397,])
func_412 = relay.Function([var_380,], output)
mod['func_412'] = func_412
mod = relay.transform.InferType()(mod)
var_413 = relay.var("var_413", dtype = "float64", shape = (6, 14, 15))#candidate|413|(6, 14, 15)|var|float64
output = func_412(var_413)
func_414 = relay.Function([var_413], output)
mutated_mod['func_414'] = func_414
mutated_mod = relay.transform.InferType()(mutated_mod)
const_503 = relay.const([[[False,True,True,False,True,True,False],[False,False,False,True,True,False,False],[True,True,False,True,True,True,True],[True,False,False,False,True,True,False]],[[False,True,True,False,True,False,True],[False,False,True,False,False,False,False],[True,False,False,True,True,False,False],[False,True,True,True,True,True,False]],[[False,False,False,False,False,True,True],[True,False,False,True,False,True,False],[False,True,False,False,True,False,True],[False,True,True,False,False,False,False]],[[False,False,False,False,False,False,True],[False,False,False,True,False,False,True],[False,True,True,False,True,True,False],[False,True,True,True,False,False,True]],[[True,True,True,True,True,True,True],[True,False,False,False,False,False,True],[False,False,False,False,False,True,False],[True,False,True,True,False,False,False]],[[False,True,False,True,False,True,False],[True,True,False,False,True,False,False],[True,True,False,True,True,False,True],[True,False,True,False,False,False,False]],[[False,True,False,True,False,False,False],[False,False,True,True,True,True,True],[False,True,False,True,False,False,False],[False,False,True,True,False,False,False]],[[True,True,False,True,False,False,False],[False,True,True,False,True,False,True],[False,True,False,False,False,False,True],[True,False,True,True,True,False,False]],[[True,False,False,False,True,False,False],[True,True,False,True,False,True,True],[True,True,False,True,False,True,True],[True,True,False,False,False,True,True]],[[True,True,True,False,True,False,True],[True,False,True,False,True,True,False],[True,True,True,False,False,False,True],[True,True,False,False,False,False,False]],[[False,True,True,True,False,False,False],[False,False,True,True,True,False,True],[False,True,True,False,False,True,False],[True,True,False,False,False,False,False]]], dtype = "bool")#candidate|503|(11, 4, 7)|const|bool
const_504 = relay.const([[[True,False,True,False,True,False,True],[True,False,True,False,True,False,True],[True,True,True,True,True,True,True],[False,False,False,True,False,False,True]],[[False,False,True,True,False,False,False],[True,True,True,True,True,False,True],[True,False,False,False,True,True,True],[False,True,True,False,True,True,True]],[[True,False,False,True,False,False,True],[True,False,True,False,True,False,True],[True,False,False,False,False,False,False],[True,False,False,False,True,True,False]],[[False,False,False,True,False,False,False],[True,False,True,False,True,False,False],[False,False,False,True,False,False,True],[False,True,False,False,True,False,False]],[[False,True,False,False,True,False,True],[False,True,True,True,True,True,True],[False,True,True,True,False,True,False],[False,False,False,True,True,False,True]],[[False,False,True,False,True,True,False],[False,False,True,False,True,False,True],[False,True,False,True,True,False,False],[True,True,False,True,True,False,False]],[[False,False,True,False,False,False,False],[True,False,False,False,False,True,False],[True,False,False,True,True,False,False],[False,False,False,True,False,True,True]],[[True,True,True,False,False,True,False],[False,True,True,False,True,True,False],[True,True,False,False,True,False,False],[False,True,False,True,True,True,False]],[[True,False,True,True,True,True,True],[True,False,True,False,True,False,False],[True,False,False,False,True,False,True],[False,True,True,False,False,True,True]],[[True,False,False,True,False,True,False],[False,False,True,True,False,False,True],[False,True,True,True,True,True,True],[False,False,False,False,True,True,False]],[[True,True,False,False,True,False,True],[False,True,True,False,False,False,True],[False,True,True,False,False,False,True],[True,False,True,True,False,True,True]]], dtype = "bool")#candidate|504|(11, 4, 7)|const|bool
bop_505 = relay.logical_or(const_503.astype('bool'), relay.reshape(const_504.astype('bool'), relay.shape_of(const_503))) # shape=(11, 4, 7)
uop_519 = relay.log10(const_503.astype('float32')) # shape=(11, 4, 7)
func_38_call = mod.get_global_var('func_38')
func_41_call = mutated_mod.get_global_var('func_41')
var_530 = relay.var("var_530", dtype = "uint8", shape = (165,))#candidate|530|(165,)|var|uint8
call_529 = func_38_call(relay.reshape(var_530.astype('uint8'), [5, 11, 3]), relay.reshape(var_530.astype('uint8'), [5, 11, 3]), )
call_531 = func_38_call(relay.reshape(var_530.astype('uint8'), [5, 11, 3]), relay.reshape(var_530.astype('uint8'), [5, 11, 3]), )
bop_537 = relay.left_shift(uop_519.astype('uint16'), relay.reshape(const_503.astype('uint16'), relay.shape_of(uop_519))) # shape=(11, 4, 7)
output = relay.Tuple([bop_505,call_529,var_530,bop_537,])
output2 = relay.Tuple([bop_505,call_531,var_530,bop_537,])
func_541 = relay.Function([var_530,], output)
mod['func_541'] = func_541
mod = relay.transform.InferType()(mod)
var_542 = relay.var("var_542", dtype = "uint8", shape = (165,))#candidate|542|(165,)|var|uint8
output = func_541(var_542)
func_543 = relay.Function([var_542], output)
mutated_mod['func_543'] = func_543
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1427 = relay.const([[[3.449729,-8.606547,-4.511623],[-7.030269,4.404217,3.260183],[8.010415,4.309716,9.868859],[8.280597,-6.500134,2.921264],[2.058333,9.395593,-7.837876],[8.315015,-6.751009,7.585591],[-6.595717,-3.034195,6.326002],[-2.013818,7.943194,-6.099124],[-2.973546,-4.291513,2.331400],[3.441998,9.127491,1.630877]],[[-5.569541,6.418561,-1.717878],[1.051608,-9.492299,9.541734],[5.298106,9.430112,1.699755],[9.516034,7.019170,-1.013856],[1.544327,8.688150,7.062919],[-7.206544,-1.979199,-9.739924],[-3.109631,2.583880,6.002803],[-2.540099,-1.432216,3.584854],[9.609168,-5.002110,-9.184333],[-1.107699,-5.330036,-8.216867]],[[-2.802140,0.578088,-0.128144],[-3.804919,4.481347,4.258971],[-4.623269,-0.662136,8.492048],[-1.328467,-9.373481,-7.778722],[-5.669500,1.757645,-0.681980],[-8.609754,-5.493359,8.706054],[6.907639,-5.038889,6.684975],[4.465295,5.123247,1.708076],[4.315801,-6.676130,-6.951313],[-0.986043,8.593019,6.023122]],[[6.212831,-9.023555,-4.097359],[-4.293433,1.250962,-9.889945],[-9.280388,-1.797896,2.196288],[3.753058,-0.475519,6.724522],[-6.811990,1.356139,3.142273],[6.787432,-7.338786,-0.666727],[-9.704600,-4.958424,7.526149],[-7.051633,-7.140219,-5.609867],[-2.166276,-5.246891,2.079882],[5.432810,9.149221,9.982977]],[[-3.986810,2.989156,-1.880740],[8.550004,-9.458789,5.273285],[-3.141157,1.294653,-9.440738],[7.691543,2.113127,1.584212],[5.609744,-3.479148,3.659785],[9.935281,0.426944,-6.321141],[-7.122655,-0.052083,0.748577],[9.404335,1.996460,-8.745606],[-1.761784,4.165438,9.742879],[-4.512716,7.951152,5.497491]],[[-4.920755,-4.925459,5.691368],[8.909788,-9.025813,-1.246974],[7.731511,-6.087298,4.981912],[0.971280,-3.159270,2.511748],[3.979953,-5.811997,3.627407],[-4.962775,-5.062839,5.374366],[4.417740,0.398288,-9.351021],[-4.841518,4.890194,-9.124940],[9.450766,-1.584388,-6.958142],[-3.866929,1.498156,0.808197]],[[-0.057081,-7.132001,-4.732425],[4.983389,7.983698,-6.779405],[-7.552826,4.395633,1.618527],[-0.804839,4.719330,-0.051035],[4.680071,-2.779099,1.191301],[6.264954,3.929989,-3.936746],[1.368510,1.761679,-8.207705],[-3.695262,-8.123703,8.908200],[1.116648,9.211312,-5.538036],[6.019708,-1.991077,3.750788]],[[3.094907,5.520300,-3.543700],[-0.277009,3.309395,-3.761115],[5.067221,2.842952,3.758245],[0.599513,-5.920935,6.382507],[-9.392425,-9.350243,-3.643189],[-9.045072,-9.851774,-1.860046],[1.356613,-7.841955,8.518047],[0.023630,6.653489,-3.788186],[7.616280,-5.689233,-4.768670],[-1.303708,-8.038499,0.208126]],[[-8.478275,-6.377635,-1.937940],[-2.902216,6.902774,-6.255161],[0.421076,-6.046106,-4.707033],[4.195847,-8.082269,-8.260344],[-7.559641,-2.536613,5.749593],[8.971549,7.971100,2.585975],[6.209036,-2.718624,-2.988776],[2.225419,-6.563294,1.725448],[-0.914359,-0.317666,-2.747076],[-8.330830,3.199483,6.811483]],[[-7.724740,1.204883,-7.448062],[0.276217,-9.481222,-6.753721],[8.770266,-0.553844,2.819331],[-3.241866,7.502347,2.149719],[6.248256,-6.668516,-4.267570],[-0.408994,-8.294748,-2.744825],[-4.542558,-1.721947,2.012592],[2.106911,-8.291591,-7.752809],[1.349743,-5.026825,4.343426],[-2.348237,0.918170,-6.325861]],[[-4.061894,-2.389365,-3.858127],[7.952480,1.436262,4.748274],[7.299136,1.971250,-1.164613],[4.073747,-1.444944,-8.054645],[2.375257,6.121021,7.662433],[-1.070329,-0.791977,3.773614],[-8.574415,6.689329,-5.263772],[-9.737003,2.084335,-1.213299],[-6.098707,-9.899931,7.183125],[-3.511394,2.205428,6.742788]],[[0.597456,6.043966,-9.892019],[-2.620566,5.106691,-6.260710],[-1.492901,2.479270,-6.752074],[-0.779406,-2.941657,-1.603616],[7.666396,-1.385879,-5.792625],[-1.123495,-0.318485,8.202005],[-6.182920,3.265750,2.297591],[8.123823,-0.793131,2.243586],[-9.798171,4.946285,-1.168084],[-6.549114,5.864707,3.494367]],[[-6.376594,4.511597,4.161761],[-2.219760,5.929979,4.437625],[3.931607,-2.556355,-7.665629],[7.005926,3.362725,7.163117],[-8.896132,-9.682145,-0.352099],[2.026730,3.378416,7.227730],[3.501137,-4.299454,2.302481],[2.773474,-9.690160,0.713750],[0.219627,-6.279122,9.283191],[0.832422,6.297653,5.777266]],[[0.917607,5.280026,-4.369787],[2.766271,-8.172399,-7.730181],[6.153059,-3.673407,4.659659],[-2.400825,-0.559737,-5.968358],[-9.502172,1.944844,3.935396],[-3.893039,8.816782,5.484668],[-1.999449,9.334349,-4.425473],[1.792757,8.302538,8.746359],[0.328524,-1.645730,-9.933110],[5.652391,-7.991439,4.022313]]], dtype = "float32")#candidate|1427|(14, 10, 3)|const|float32
var_1428 = relay.var("var_1428", dtype = "float32", shape = (14, 10, 3))#candidate|1428|(14, 10, 3)|var|float32
bop_1429 = relay.mod(const_1427.astype('float32'), relay.reshape(var_1428.astype('float32'), relay.shape_of(const_1427))) # shape=(14, 10, 3)
func_217_call = mod.get_global_var('func_217')
func_222_call = mutated_mod.get_global_var('func_222')
const_1445 = relay.const([7.491907,5.257948,1.283583,9.833195,2.758020,-1.328644,-8.746477,-4.249258,-7.449076,-0.028541,-4.540975,-4.924816,1.762492,1.037527,5.510469,0.224742,-6.115023,-5.657073,-3.167790,9.506426,5.641152,1.464267,-1.220411,3.242926,-7.790574,9.475956,7.024342,-4.913964,-6.354883,3.552089,-1.790604,-3.218932,7.868086,-2.608598,-8.162050,4.414002,-3.332498,6.786498,5.187585], dtype = "float32")#candidate|1445|(39,)|const|float32
const_1446 = relay.const([[-1.813704,-3.920656,-7.426249,-0.367963,-3.706119,8.768085,-6.283341,6.251576,7.176879,-8.118583,5.308598,-6.038013,-4.609646,-9.619261,5.089683],[-4.444185,-1.470323,-1.140671,2.870222,4.325055,3.889850,0.353646,-6.003342,-7.424861,-8.569732,0.167361,-0.558426,-0.329560,6.934535,7.780606],[7.994505,7.037419,-1.687308,-5.499095,-6.753291,3.069895,7.093978,2.001529,2.067843,4.170137,2.250218,-9.691176,1.596037,-0.868847,6.425546],[8.690872,-6.399667,-6.490078,-7.082102,-8.855188,-0.613347,-9.386834,-0.506809,-7.921971,8.411200,3.760539,-0.879039,-8.618446,-2.337622,8.778583],[-2.190083,-3.724054,5.010743,2.471243,-7.121968,-2.471905,8.386442,-2.148156,5.777866,0.829213,-9.987579,0.836746,-7.739532,-2.277418,-5.322995],[7.218065,-1.047836,4.174465,-8.077042,4.952167,-2.345644,-6.810926,-8.341381,-9.251575,4.580461,-2.729657,-8.127094,-8.797863,9.314769,-0.891250],[-4.551372,-7.077698,7.854219,-1.009691,-5.517186,-4.327401,-1.972067,-3.971820,6.062306,-0.176440,2.193570,2.465188,-1.694110,-6.140641,-2.371729],[8.922480,-0.004539,-7.405922,-4.655417,-6.579096,-3.921805,3.304966,3.670525,-3.216892,-9.482106,9.484602,3.700481,-1.279584,-9.405118,-7.958475],[5.213059,-0.224850,7.812353,7.668922,5.374081,6.816489,9.197405,-7.271056,-3.767506,2.776355,5.249828,-2.236931,4.905571,-8.006540,-1.958786],[3.509091,9.245546,8.659781,-4.964359,-6.755002,-9.835724,1.702455,-0.331892,-2.641014,-6.198535,-7.332321,-2.095368,7.262157,2.467441,-7.859767],[-8.046950,0.932342,7.000573,-4.872410,1.576020,4.432025,-3.076342,9.059327,6.480586,-9.643838,-3.710947,9.232930,7.463929,-5.017307,8.018147],[-1.400475,-5.501549,4.244538,8.033977,9.012048,-9.828285,-4.475913,-8.305122,1.986339,-2.494527,8.932997,-2.392318,5.938259,7.266531,-9.029389],[-6.694800,-0.999990,-0.581769,-1.611181,-6.748109,2.245081,1.305097,7.185930,4.010149,0.054259,-6.978997,-9.335745,9.769781,2.368601,-4.200137]], dtype = "float32")#candidate|1446|(13, 15)|const|float32
const_1447 = relay.const([[-7,-10,4,9,-1,-7,4,3,-10,-3,-9,-10,9,-6,-9,-1,-7,-9,8,-4,1,-5,-1,-4,9,2,10,-9,-1,-2,-3,-1,5,-1,8,-3,-9,5,-9,4,8,6,-8,-7,-9,-1,3,1,2,10,-7,8,-3,9,3,8,9,-1,8,-8,-8,-9,1,-8,2,-2,3,9,4,-6,1,-10,9,-7,-9,3,-6,-8,-2,9,-4,-5,10,3,-1,-10,-4,-3,2,-1,7,-8,-6,-9,3,-4,-6,4,-4,1,-5,-8,-1,-3,10,-6,7,9,10,-4,3,-10,9,-8,-10,-8,8,-3,6,-4,1,3,-3,1,-10,8,5,4,-1,-8,-9,-5,4,-10,5,9,3,4,-4,-1,2,-8,7,-2,2,9,-6,-10,2,3,3,3,-3,4,-4,2,4,4,3,10,-5,9,-3,4,-9]], dtype = "uint8")#candidate|1447|(1, 165)|const|uint8
const_1448 = relay.const([6,-10,5,-6,8,-4,9,-4,3,10,-4,1,-7,3,9,-10,1,6,5,-4,2,-5,-5,5,-4,-8,-3,-6,-2,-8,4,-8,9,1,-5,-5,5,10,-1,-10,10,-5,-4,1,7,-9,-7,-6,-2,-8,-3,6,7,8,10,4,3,-1,8,5,3,-6,2,7,-2,10,2,-3,-1,6,8,-9,9,10,-4,-5,-10,7,7,-5,-3,-4,3,5,-10,-3,-2,1,-2,1,7,-3,8,-8,-8,-4,10,-7,5,4,2,2,-10,7,4,-10,-3,8,6,8,9,-6,-8,-1,-4,6,2,2,-3,-8,7,7,-10,3,1,10,1,-10,-9,-2,5,3,-8,-3,-3,7,6,4,-3,4,8,5,-9,10,5,5,2,9,-2,-2,-3,7,-6,-7,-7,2,-4,7,-5,5,1,-2,-7,-6,5,-6,-6,8,-5,1,-6,9,4,-7,-5,9,-2,10,3,-8,3,-5,-6,-2,-7,-3,10,3,8,-2,-2,-8,3,-6,5,3,8,8,10,-5,5,-10,-9,-10,2,-7,-3,1,-4,-2,-10,8,4,2,-10,-3,-4,-1,-5,-8,-10,-3,2,1,-2,-7,-10,8,5,-10,-6,9,5,3,-8,8,5,-5,7,5,10,2,10,-6,10,7,8,-8,-5,-2,1,3,1,-5,3,-8,3,-7,-9,-8,-10,9,-3,2,5,9,3,-3,9,5,-9,6,-2,-7,-7,-2,-1,4,7,10,-9,-9,2,-7,10,-4,4,3,5,8,4,-7,-2,-9,-9,10,-9,-10,-1,-1,-10,1,4,-1,3,-9,1,4,-10,-2,-3,7,-3,2,-6,6,7,-10,-3,-10,-2,5,-6,9,-3,5,5,-7,-8,4,-9,8,2,-7,-10,-1,-5,-8,-7,-8,-1,-6,2,-7,-10,4,5,-7,1,10,-10,-6,7,-7,2,-5,-6,-9,4,-1,-9,8,-7,1,-9,-9,-1,-6,-8,5,6,-3,4,-3,8,-5,-6,-2,-9,1,1,-9,-5,-5,9,3,1,-10,-7,-3,6,3,4,7,8,3,9,4,-8,7,10,-3,-7,7,-5,-3,10,-4,-3,8,-10,1,-5,-3,5,-10,-1,5,5,6,-2,-2,-6,9,-1,9,9,1,6,-5,-6,-3,8,-7,-9,5,-1,-4,-7,-4,-1,8,-4,2,-4,10,-3,-5,2,4,-4,-3,-7,-1,1,1,-10,-9,-9,-6,-9,-3,1,3,-1,-5,7,-1,4,-1,7,4,-2,-4,6,-5,8,9,-5,5,9,-2,-7,-3,3,5,-5,-9,-3,-1,5,-6,-4,-4,-7,-7,-10,-5,10,-5,1,4,8,4,-8,-2,10,8,5,5,3,-10,-10,8,-4,-4,-5,-10,4,6], dtype = "uint32")#candidate|1448|(520,)|const|uint32
call_1444 = relay.TupleGetItem(func_217_call(relay.reshape(const_1445.astype('float32'), [1, 3, 13]), relay.reshape(const_1446.astype('float32'), [5, 3, 13]), relay.reshape(const_1447.astype('uint8'), [165,]), relay.reshape(const_1448.astype('uint32'), [520,]), ), 2)
call_1449 = relay.TupleGetItem(func_222_call(relay.reshape(const_1445.astype('float32'), [1, 3, 13]), relay.reshape(const_1446.astype('float32'), [5, 3, 13]), relay.reshape(const_1447.astype('uint8'), [165,]), relay.reshape(const_1448.astype('uint32'), [520,]), ), 2)
output = relay.Tuple([bop_1429,call_1444,const_1445,const_1446,const_1447,const_1448,])
output2 = relay.Tuple([bop_1429,call_1449,const_1445,const_1446,const_1447,const_1448,])
func_1475 = relay.Function([var_1428,], output)
mod['func_1475'] = func_1475
mod = relay.transform.InferType()(mod)
var_1476 = relay.var("var_1476", dtype = "float32", shape = (14, 10, 3))#candidate|1476|(14, 10, 3)|var|float32
output = func_1475(var_1476)
func_1477 = relay.Function([var_1476], output)
mutated_mod['func_1477'] = func_1477
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1737 = relay.var("var_1737", dtype = "float32", shape = (13, 4, 8))#candidate|1737|(13, 4, 8)|var|float32
uop_1738 = relay.rsqrt(var_1737.astype('float32')) # shape=(13, 4, 8)
output = relay.Tuple([uop_1738,])
output2 = relay.Tuple([uop_1738,])
func_1741 = relay.Function([var_1737,], output)
mod['func_1741'] = func_1741
mod = relay.transform.InferType()(mod)
var_1742 = relay.var("var_1742", dtype = "float32", shape = (13, 4, 8))#candidate|1742|(13, 4, 8)|var|float32
output = func_1741(var_1742)
func_1743 = relay.Function([var_1742], output)
mutated_mod['func_1743'] = func_1743
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1757 = relay.var("var_1757", dtype = "uint16", shape = (5, 10, 9))#candidate|1757|(5, 10, 9)|var|uint16
var_1758 = relay.var("var_1758", dtype = "uint16", shape = (5, 10, 9))#candidate|1758|(5, 10, 9)|var|uint16
bop_1759 = relay.bitwise_xor(var_1757.astype('uint16'), relay.reshape(var_1758.astype('uint16'), relay.shape_of(var_1757))) # shape=(5, 10, 9)
func_1741_call = mod.get_global_var('func_1741')
func_1743_call = mutated_mod.get_global_var('func_1743')
const_1772 = relay.const([4.435943,7.820122,-8.223103,-4.847645,-8.186453,-6.119806,3.683424,-0.499402,-2.511050,-2.303996,9.223021,-9.009918,8.939550,5.564987,-5.217559,-1.459296,4.458670,-8.919892,6.709506,-4.846314,8.049960,-6.500770,-9.642610,-0.976667,3.676957,-5.954119,-5.745869,0.607367,8.463031,-0.169242,0.740709,-3.059251,-9.579046,-4.894239,8.472169,0.434693,-4.722979,3.632523,-0.400958,1.306082,-0.557826,-3.238245,-6.883851,-2.421348,-0.506128,5.970145,-7.466783,2.399070,4.721817,-5.112649,-2.706171,1.082598,5.377939,4.255387,-8.640885,-0.692706,-9.137067,1.980045,-3.641299,-0.434636,-0.229675,-9.723373,5.835383,-0.010233,6.756758,-9.975452,-9.666353,-5.060737,-0.300966,-9.973122,-4.861817,-1.092138,6.541636,9.998066,8.531448,6.156053,-6.014695,-6.480652,4.281845,-8.518691,-0.237399,-6.641574,-2.315584,-3.659768,-1.947224,5.045452,2.363415,4.802439,7.779185,-9.909226,-9.688931,-4.866784,5.424786,3.063629,5.715075,-7.703090,-9.096493,0.601250,8.429625,2.701698,-0.109400,1.141584,-7.656075,-8.736527,7.251229,8.425145,-1.821986,-2.577836,-5.155882,-7.281612,8.671598,8.066600,3.715199,-8.473542,1.912060,-2.109745,-9.648955,0.325699,-8.990966,-1.920302,7.020629,-8.273484,-3.053909,9.265264,-3.419725,-1.440161,-0.250114,3.028751,-8.086788,4.075635,0.747978,3.072638,1.540365,1.209384,6.183372,3.982837,8.463826,-2.608489,8.615508,-7.057503,-6.960204,1.343306,9.273771,-1.421446,4.802279,9.237113,-4.979529,-8.195977,9.765564,8.163701,-1.927383,5.509056,-8.547735,0.977265,-9.080369,4.033279,-3.719577,6.784986,4.973133,-6.648753,1.522652,-9.528336,-9.904860,4.162684,-8.894816,-7.383417,-0.574234,-6.241559,-2.860736,-2.763958,0.521704,3.427539,-0.120905,9.214898,-4.091099,-8.631142,9.695730,5.115239,-0.736849,-2.440570,-3.731737,8.005197,-3.884019,3.091584,9.857286,7.442499,-7.500554,-8.316498,-6.120526,-8.802111,5.671154,-2.031898,7.036679,6.251628,7.087774,-0.191532,-2.296137,-3.199467,6.229187,6.980902,1.414630,-7.635003,9.357378,-7.070471,-6.746874,4.644183,-4.348117,8.391697,2.607351,1.771128,-5.920091,-3.309894,3.123457,5.149906,9.357075,8.073815,-4.882081,-5.552401,-4.292359,1.126628,8.219809,5.098818,-4.715430,-8.488121,1.926565,-0.479624,6.542768,-6.979359,7.134527,-7.926350,0.441184,3.777333,1.712540,0.601914,7.551984,-5.719219,9.540771,-8.212096,-0.758087,-8.429133,-8.334416,1.156078,3.852255,-9.083227,-5.198850,0.936568,-7.749288,7.903118,-1.586049,9.177823,5.944626,8.875473,0.219336,-9.763790,-1.838476,5.668504,-8.109018,-4.800208,8.988622,-2.379438,6.542427,2.944255,4.475022,6.470930,9.886276,1.204254,2.555603,-9.807589,-4.443607,-4.221202,3.410051,5.767295,7.057174,2.007753,-1.782085,-3.087322,-8.221859,8.516159,-7.499782,9.481145,8.774714,-7.608121,1.014902,-6.960490,6.523472,-8.489019,-8.440676,-9.602538,-9.230115,-9.941449,-1.850681,-3.162809,-7.009923,-0.712769,5.992465,0.572234,-6.015128,9.916916,-7.047845,9.619460,-1.427034,-2.140546,6.903894,-1.982243,-9.103623,-9.088850,6.351418,9.204929,-1.340540,-9.056843,-6.442058,-8.360485,3.746396,-2.582844,4.875647,-9.031782,-8.780905,8.922221,4.714044,8.440602,-4.143767,-7.812819,-3.936432,-6.649391,1.336744,-9.411534,-1.656930,-0.328454,-9.696380,0.703441,-8.680377,-9.747366,-5.969663,-0.748317,8.273112,4.177780,0.153137,-9.634807,-4.210088,-7.678869,2.741002,0.332523,-6.708029,-4.215674,-8.937013,-5.025933,3.667070,9.767328,-1.811175,8.428897,0.022000,-7.112472,6.062673,6.863416,9.949107,1.443638,-0.587569,-9.208570,2.342062,-5.936139,-4.071931,-8.214980,5.745312,8.259522,-6.318633,7.787915,4.957971,-4.396411,-5.184699,-1.497956,-5.477820,5.405700,-6.942713,8.532440,-7.084688,-2.316451,-8.919644,-3.990336,-7.303167,-0.554537,-0.157634,3.869781,7.106306,-0.167969,1.639689,1.623676,5.594057,-4.055140,-9.918874,5.034507,8.621359,1.724851,-7.629578,0.042188,9.039626,7.508775,-6.754563,7.939048,4.045109,1.266833,3.930331,-5.806421,7.194902,-8.891086,-7.019707,-4.694889,0.951131,3.096086,6.419761,4.151916,-5.637269,0.888334,5.440868,-9.455775,-3.575308,3.977192], dtype = "float32")#candidate|1772|(416,)|const|float32
call_1771 = relay.TupleGetItem(func_1741_call(relay.reshape(const_1772.astype('float32'), [13, 4, 8])), 0)
call_1773 = relay.TupleGetItem(func_1743_call(relay.reshape(const_1772.astype('float32'), [13, 4, 8])), 0)
uop_1777 = relay.asin(bop_1759.astype('float32')) # shape=(5, 10, 9)
func_412_call = mod.get_global_var('func_412')
func_414_call = mutated_mod.get_global_var('func_414')
const_1780 = relay.const([[0.537426,-2.348483,-8.656973,8.323483,-9.689225,-4.772360,5.903966,-5.256481,4.152610,-1.058085,2.400300,-0.633988,-3.463815,4.338975,-6.657177,0.033747,-0.136883,7.601712,-5.047445,4.342553,-0.466081,-7.633924,9.223825,2.260297,-9.304062,-9.686956,1.382056,-7.920136,-1.087443,-5.051823,-4.119404,-4.028322,4.708588,8.883582,5.981299,-1.054708,-8.057068,0.745230,4.931044,0.522049,-0.422501,-8.699969,-9.109633,1.275311,-1.443686,5.165475,3.347932,9.750128,7.208051,7.820701,-3.805125,-2.016736,-5.397041,-1.531526,-1.918371,8.334654,6.192661,9.851726,-6.786043,-3.213871,-2.909232,2.318231,-8.180550,3.665269,-1.958538,-3.088804,-3.293803,4.961471,-4.913292,8.009916,1.764003,6.318324,-3.189774,-6.238130,-0.758853,8.506843,5.990593,-7.588009,-4.393925,4.522347,-5.568963,7.639461,3.689954,3.083545,-1.676496,-7.303023,-9.232980,3.802184,-3.546717,2.515589,-9.655213,-3.626040,-8.285819,5.978462,-9.623789,3.172611,-8.023189,3.158050,7.048295,9.121759,9.837614,-8.566252,-7.247798,-3.165191,3.516447,5.629608,4.628469,3.520232,-5.546865,-6.000909,-1.225916,-8.660472,-7.054822,-6.200862,-5.623297,8.906742,5.325077,4.334984,2.927161,3.995444,-9.323984,3.715197,-8.460743,0.269368,3.556409,7.922627,4.979680,6.118549,2.052424,6.030875,9.713967,-1.869937,-0.977532,-3.891093,4.183862,8.975352,-8.696448,7.922188,0.093730,-7.011054,-5.355717,-5.345970,9.953405,0.712932,7.662512,-8.319700,-3.520071,-7.077043,6.514409,-7.759439,-2.134332,-8.044705,-7.463972,2.536599,-2.979117,2.713370,2.181262,-2.997252,8.025691,2.979911,-0.134769,2.579376,-0.403357,-6.888698,6.806842,1.206043,-1.294986,-3.008847,3.926478,-4.269334,0.908606,0.994208,-8.757192,4.215287,6.739157,-5.335684,6.520147,-4.902323,3.697487,9.984404,-0.072991,-1.891767,-6.527355,3.224020,-5.176540,9.437793,8.784551,-3.331216,-9.205856,5.841926,1.438540,7.369548,-7.527900,-3.016910,-8.274068,-8.407958,-0.835501,9.920804,8.400521,0.479493,1.627744,-1.352296,5.793860,-6.346076,-8.034595,4.092160,8.324332,-1.376545,5.687296,-8.578691,-8.789049,-2.417255,3.446907,5.831924,-9.142914,2.571229,7.762560,5.880186,-3.697394,-1.695338,5.213013,-9.344314,0.653604,-0.649144,-3.941532,-4.847116,4.335098,5.590095,6.643350,-7.266595,7.193458,7.409162,5.440477,7.056205,-5.320513,-2.520277,-7.961988,-8.894025,-3.326307,-8.102947,7.495568,9.719917,0.801010,-2.687491,-9.269011,-5.954688,-7.149223,-7.387166,-5.611677,5.259849,-2.681864,7.221778,4.027120,-8.403773,-9.914624,-8.565463,2.822621,2.199431,-0.961136,6.327713,-0.320141,8.922403,8.924316,-1.921753,8.318821,-6.494503,6.821166,-8.764045,-2.124592,-8.469993,2.976495,-8.295639,5.026781,1.760381,8.573669,-1.763035,2.064074,-6.296886,4.766318,-3.273563,5.227140,-0.805850,-4.352206,9.767124,8.403390,-7.947810,-3.427467,-8.051252,-9.809617,2.145385,-7.843293,1.792507,9.588460,1.325312,-8.624239,-7.863355,-5.822194,-1.301900,9.461041,4.634208,-2.289428,-8.519229,9.745265,-8.517604,-6.595829,9.226378,5.635100,-6.936919,4.018979,0.138415,-5.796988,2.390030,4.743748,9.809439,3.058723,6.100247,-2.376064,-0.198683,-1.967954,0.923269,-5.997161,-7.319582,6.893354,3.893904,-3.768476,-1.326383,-0.098351,0.331880,-6.624814,-1.223694,-0.414668,0.178740,4.895604,-3.281660,-3.898528,2.709568,-8.737662,-7.056039,-3.625117,-0.923956,-6.605389,7.232995,-9.027483,-7.268232,-7.120513,-9.893589,4.800423,6.617987,1.157186,-2.678285,-7.396020,6.276555,6.098189,-5.573040,5.488694,-7.578080,-6.654823,-0.595714,5.630013,6.191631,2.786253,-5.891611,4.882865,-5.804983,6.596724,-3.186081,-0.585604,-2.599450,4.325142,7.223301,-3.930054,-2.105221,-4.459234,2.651351,-1.412657,1.964520,2.955858,-0.579042,4.206598,9.313622,2.969214,-3.244688,9.529791,-4.486098,-5.000245,2.364599,6.016683,4.265955,-7.087073,2.054897,4.816660,9.764736,-5.638561,0.331222,-0.822923,-9.279054,-9.258201,8.012295,-8.289916,-4.452079,6.245043,8.313061,8.146769,-0.190588,7.459585,-2.861009,-8.383377,9.369217,7.382490,7.896327,-1.497833,-2.552832,-7.746380,-4.035751,2.697379,8.247551,3.250385,2.364811,3.912897,-3.070197],[-1.515116,4.025316,-6.427725,7.828253,2.615212,7.705458,7.104579,-0.096671,4.362867,-1.191168,2.982495,-2.674661,-9.562840,-5.702469,1.611117,-7.226225,5.442981,9.108976,4.955078,-7.385870,7.045296,-3.814716,4.122365,-5.952628,6.401191,0.061168,0.277972,0.592526,3.065244,1.516316,0.685475,-6.515101,-9.162685,-4.201696,6.162448,-5.017684,3.060995,4.328987,-6.663726,9.521276,-8.952268,-9.845347,-1.537216,8.167773,3.749445,2.301813,-5.037798,-9.684797,6.944254,-0.295737,6.531439,6.289477,7.813366,7.047622,-8.877037,-0.556291,2.975163,-8.673462,-1.261968,1.486243,5.251295,-8.408213,2.199205,-6.292417,-1.588938,7.239387,0.783264,-3.214430,8.132526,-6.897876,-9.467123,-6.051576,-9.973972,-7.714292,-2.639083,-7.204054,-4.059646,3.708243,5.019472,-3.903212,7.239282,9.107637,-9.654103,9.761848,5.239728,2.462706,-0.746096,2.602237,1.224463,-4.744989,-2.241891,3.205170,6.555617,-4.686952,-9.823476,-6.205656,-6.706410,-8.844405,2.219425,-6.055671,-7.542090,3.404610,7.203063,5.295635,-7.522949,-5.706128,-6.325520,9.823812,-4.743957,6.725422,-1.914026,-6.898357,9.334988,0.460303,3.839196,-9.624377,7.506142,-8.176851,-6.826251,5.988999,1.948325,7.681112,3.199347,-3.267614,-0.524026,-6.359275,2.343394,0.677546,-8.804529,-1.089519,-8.553277,9.284489,-8.346102,-7.802022,7.404527,0.330745,6.388291,-4.862449,8.731899,1.591255,-0.170034,-9.203221,-6.385796,9.856471,-1.644537,-4.440944,-0.314848,-7.605204,-0.860875,3.170445,0.883117,-8.365174,-6.098219,8.627371,2.721689,8.591273,5.107311,-0.749623,-4.151222,-0.905602,4.625024,8.954657,-0.039844,-3.316859,5.077662,-1.902516,-6.171919,8.276095,2.678338,-5.729637,1.682400,5.429524,0.836121,1.975915,7.630617,-8.354384,-7.447589,-2.376539,5.872072,0.780189,-5.359708,1.992242,0.929749,7.045872,-3.131748,5.692341,-6.607319,-7.352049,-8.817434,4.970260,0.872040,-9.449919,6.022924,-3.226325,1.961666,1.333953,6.593120,-1.998484,-9.005318,1.298221,9.173494,-5.450532,9.930171,1.288235,-4.052385,4.500347,-0.515595,-6.894520,-4.119578,6.859763,-3.698278,-1.767984,1.782065,-2.299490,-8.808223,-4.002492,6.426575,3.886206,1.198102,-6.962849,0.513664,2.554448,-3.536188,-4.959600,-9.862617,-2.098444,-7.518378,-6.983747,-6.662013,4.183998,3.656755,-7.327805,9.336149,2.701381,3.409644,-6.737823,-0.029566,-4.709796,8.491324,9.301349,-6.403357,5.175749,-7.881376,2.493187,-2.636324,-2.564359,-1.281308,-6.024501,-2.840094,7.143611,-4.457379,2.253174,1.359179,2.956283,-5.086914,6.639275,-4.567123,7.934742,-1.945532,3.591324,-2.989042,-2.050389,3.536967,-2.803569,8.890456,1.821535,1.059000,-8.832353,-9.742967,-6.342885,-6.263740,-1.926145,-1.040102,-3.718926,-0.631588,4.731402,6.576286,2.580410,1.972219,-4.384145,7.721637,-3.076478,-5.154489,-4.121972,-8.468342,3.040083,-9.558081,3.696390,-0.169656,8.363476,-2.188895,2.104559,1.842847,-9.388536,-5.607523,2.462624,-8.443877,-1.489874,-0.554210,6.706657,2.739324,7.605937,-9.542145,-0.109574,-9.066747,1.665335,0.513750,-9.239732,-7.366583,0.179981,-8.004882,-1.897518,-6.158447,9.837541,3.635988,4.261181,-4.164807,-1.345349,2.032488,0.467549,3.783481,-0.212606,1.750351,7.378381,6.145459,-6.687639,3.521698,-2.073589,1.906161,-8.500255,7.175222,-3.681277,-3.883321,-6.256118,1.215513,-2.707023,1.110653,8.773182,7.850196,-3.629470,6.952980,-0.640869,2.304610,-4.463588,6.324526,-4.947450,-5.787350,-0.719678,0.636435,4.477474,-5.616827,5.146916,-8.274194,-0.249253,2.381414,9.736048,4.739422,1.863401,-3.899077,5.965028,-2.839357,-2.778168,-4.864647,-7.870345,-6.601427,2.152245,8.140263,-7.609670,2.508356,2.325608,2.819352,-2.319162,2.907315,5.126860,6.819448,1.195579,-1.122374,9.383332,-8.589182,0.683281,6.100713,3.809276,6.010150,-1.462127,-7.232185,-2.273631,-4.126404,-3.259139,-2.654039,-7.394869,-5.655368,-2.922350,0.040367,-0.684520,8.832433,-4.950747,-0.796729,3.917928,0.559311,-2.216397,5.903040,1.038817,1.465053,4.352623,-4.959254,-4.029007,1.966711,3.677236,-5.206229,-5.797487,1.114592,-3.977130,-9.737644,-3.385266,1.354546,0.395716,4.611311,7.648288,-7.926722,-7.461737],[-2.678402,-6.621752,8.542981,-4.512610,0.745932,2.605338,-9.413852,-0.484072,2.764381,-5.678249,6.151972,-5.479471,7.432265,-4.628947,-5.482993,-7.129272,0.100307,7.293924,-1.498350,-6.151155,-1.181132,5.604619,3.091108,-8.094014,-9.609082,9.035045,-2.816097,-0.416750,7.779457,-9.952041,6.697938,-1.166347,7.326590,-5.928527,-3.865941,0.730866,-3.167657,7.536294,-8.476347,7.495087,-0.880638,-1.721580,-3.504099,-7.605788,3.152940,4.860212,2.018960,7.341047,5.235274,0.440928,-2.763785,1.847084,6.196570,-5.591625,-4.584093,-8.657174,9.809316,3.714093,9.822194,2.894667,-5.832806,4.983322,4.133118,-1.810153,-2.024755,-4.662018,-8.289256,-3.522127,-1.500704,4.540631,-1.339916,5.496500,4.577445,8.670954,9.309277,1.525850,9.945727,2.457959,-1.979999,-7.014464,9.608787,7.606818,-8.739366,6.180982,3.816733,6.395274,-2.460275,9.804765,3.841527,-5.045469,5.590582,4.084173,4.171135,1.381120,-9.766292,-7.051711,-8.355241,-2.291423,3.630348,4.358933,-0.551450,-4.951491,-5.508612,-3.246360,-3.853913,-0.452509,1.893514,7.430859,-5.993171,-3.800133,-9.300929,0.305075,-7.244123,9.741967,5.476551,-2.635169,1.647898,0.392112,-9.036615,9.497156,-1.787961,5.536240,1.583183,-4.564140,4.436742,6.078002,-0.088355,6.596674,-7.052303,-8.984982,8.921013,6.707050,-5.501195,-2.568961,2.184239,5.534199,1.279202,1.398914,1.084961,1.531281,-6.770415,-3.595317,6.389434,8.717024,-0.311099,3.536006,9.151844,-8.916908,9.173628,-1.233962,1.952595,2.172958,-1.288964,0.386894,-3.413012,9.952775,7.455011,0.378920,2.883652,-4.442154,7.642391,1.167239,7.827542,-0.464916,5.088024,7.164221,-7.527166,3.160746,4.064467,7.170857,3.075542,-7.620249,-2.765754,9.324097,-6.629843,-9.596498,-6.023537,-4.586764,3.987698,-2.389199,-7.921956,7.355868,-9.254353,8.059456,-2.340170,-4.536795,3.776311,-2.197332,-2.711217,3.452510,-5.196207,-7.381294,-1.769635,-4.245834,8.785242,-9.390885,-7.239056,9.839269,-8.588106,-8.698150,6.588297,0.250722,0.837225,-5.392258,5.003710,-2.486963,6.034349,-5.941337,-8.122408,-6.365433,-2.763669,3.876339,-2.743288,6.112103,7.151264,8.420421,-5.197057,-7.030599,7.807769,-2.366010,-8.053052,-4.884283,5.748376,7.379271,8.300524,-2.342000,-8.544355,-9.095987,-2.169856,-2.634371,5.487286,-3.432941,-2.348093,6.440007,9.664971,-6.389857,-7.858848,-1.067269,-6.849950,5.524771,9.533832,7.194879,8.839530,-6.541007,0.434608,-9.947388,7.219462,8.107249,2.626090,2.332129,-7.458819,-5.731698,-2.648400,-9.496344,3.182231,-9.257918,0.611135,-4.434586,1.003123,-1.757663,4.330477,8.141030,2.303804,-0.209669,2.658261,-2.227820,-4.783565,-6.444095,2.012908,0.992940,0.315600,6.128208,6.605433,0.821510,-4.858340,3.756888,-6.887919,-1.024623,7.201890,-9.209491,-5.306259,-0.533755,-3.037925,8.077452,-1.197834,-6.179771,-6.516409,-9.935323,1.746393,-2.764860,-3.177254,-7.459156,-7.923651,-4.574427,5.640004,-9.643450,1.781398,-1.963874,-7.362020,8.717790,-0.546757,-6.236207,4.383744,-4.755104,-5.079776,3.498576,7.378929,-0.481599,-0.505138,8.010653,2.511640,-2.610148,8.238125,-6.023744,-3.463214,-9.004903,6.741889,-5.780528,2.900137,-6.164283,6.178929,-6.888963,8.918279,9.846902,-4.865507,1.955296,-1.599298,-2.901683,0.649144,0.593285,4.304349,-1.990428,-0.598316,5.790865,-2.021827,-0.777158,8.495300,-6.531628,0.840861,9.149705,-8.725177,8.250744,-0.656220,-9.860054,6.964442,3.974319,0.301241,5.896760,-8.882460,-4.392764,-6.482847,0.422392,5.584953,-9.434999,4.974919,-1.191167,5.301474,-6.348690,-7.165381,3.907605,7.237281,-0.746719,-2.761590,-9.357420,-3.353127,1.323533,1.496669,8.453582,-7.744115,6.125475,6.733954,-1.712917,-2.654315,-5.181753,2.437182,-5.726320,-0.954836,-2.599662,-2.146232,-1.491074,5.543597,-4.268431,-4.339192,8.255302,7.781951,-0.537551,4.769997,9.598048,0.250944,-5.811955,3.425821,9.427100,5.778038,7.305186,4.202203,-3.139405,6.741427,7.696653,-4.459016,5.084995,-4.356447,-7.205261,-1.109077,4.225718,4.695901,-0.022823,-7.171381,4.070448,2.055665,4.573539,-9.509286,3.574522,-1.787458,6.862970,-8.997664,8.884960,-7.328564,-6.775240,6.707607,-5.142778]], dtype = "float64")#candidate|1780|(3, 420)|const|float64
call_1779 = relay.TupleGetItem(func_412_call(relay.reshape(const_1780.astype('float64'), [6, 14, 15])), 1)
call_1781 = relay.TupleGetItem(func_414_call(relay.reshape(const_1780.astype('float64'), [6, 14, 15])), 1)
output = relay.Tuple([call_1771,const_1772,uop_1777,call_1779,const_1780,])
output2 = relay.Tuple([call_1773,const_1772,uop_1777,call_1781,const_1780,])
func_1794 = relay.Function([var_1757,var_1758,], output)
mod['func_1794'] = func_1794
mod = relay.transform.InferType()(mod)
mutated_mod['func_1794'] = func_1794
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1794_call = mutated_mod.get_global_var('func_1794')
var_1796 = relay.var("var_1796", dtype = "uint16", shape = (5, 10, 9))#candidate|1796|(5, 10, 9)|var|uint16
var_1797 = relay.var("var_1797", dtype = "uint16", shape = (5, 10, 9))#candidate|1797|(5, 10, 9)|var|uint16
call_1795 = func_1794_call(var_1796,var_1797,)
output = call_1795
func_1798 = relay.Function([var_1796,var_1797,], output)
mutated_mod['func_1798'] = func_1798
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2171 = relay.const([[[9.875813,1.970725,0.299409,5.435125,-7.212283,5.580388,-1.010214,5.676572,5.717892,2.799642],[-0.078955,4.543777,-4.333915,1.243231,1.383399,9.866317,4.153627,8.084715,-6.132787,-6.313570],[2.900906,9.722135,6.983662,2.747576,-1.253150,1.660091,-6.301389,8.975892,7.599058,-2.941010],[3.529353,1.778213,-2.656862,3.203509,0.055698,2.813135,-5.706887,2.243449,5.739869,-6.793236],[7.005366,-5.574010,-1.486458,-4.245183,1.705687,5.494628,-3.274882,7.399634,6.051475,2.781298],[-1.277683,2.218128,-8.993537,-3.059276,6.396246,3.214118,-6.214736,9.098858,6.854545,-2.417363],[-5.272575,-8.516541,-3.318796,4.388759,-5.226295,8.594843,8.716244,4.905273,5.898796,-8.962918],[9.670661,2.955192,8.386068,-1.593953,4.285671,7.053862,-0.523292,-2.766959,-1.904084,-4.690138],[5.229864,9.051381,-3.521602,-8.467280,9.851386,2.664921,-9.695333,-0.259400,5.571826,-3.279995],[-8.496202,-7.431038,9.466939,3.824650,-0.712753,9.275116,6.114356,-0.159358,6.443208,0.729950],[9.236965,5.711931,-8.346148,-3.247414,0.470045,-6.079407,-8.766123,-0.088231,1.538206,9.227541],[-7.228243,1.057991,-5.271405,5.471573,-7.967719,-0.574604,6.714632,8.743686,4.377077,9.032071],[6.338550,-7.698937,-2.457387,5.726614,3.807327,6.228788,5.548223,3.295747,0.072882,-1.994879]],[[-6.773205,6.702009,-9.356565,5.423060,-9.116895,-3.800056,-3.912690,-7.378299,-0.903693,-0.169943],[-8.066557,7.315764,0.660188,5.854478,6.449053,-0.192000,-9.008448,-1.396127,7.359788,7.206632],[-2.802271,7.158868,-4.285045,-6.975385,7.466675,-7.807901,-7.566680,-5.424404,8.133384,-2.264205],[3.034279,-3.910376,6.235125,-1.116570,-7.600138,-4.027001,-9.933131,2.333101,8.654468,1.078883],[-4.198155,4.427897,4.955352,-7.245652,4.391445,6.965531,-2.598129,6.425792,-5.812885,-6.829771],[5.916471,-7.206522,-1.000892,-3.191910,6.937167,-3.419304,-9.857186,-6.064628,6.349174,-6.487604],[-8.874728,7.724619,1.754605,-7.476583,8.851306,-1.542211,8.867332,-2.715950,-4.270779,-4.919556],[-8.038053,6.268765,-1.760442,-9.014421,8.297791,-0.734673,-8.866134,-9.718241,-9.615601,-4.709451],[9.798577,-7.336815,1.188149,-3.262844,-5.255980,5.451749,2.303509,9.991781,-0.292165,-1.051519],[-1.072263,0.588364,-2.260306,-0.087940,-5.765347,-3.121528,2.572357,6.260819,7.013299,-7.592144],[-9.353185,-9.164288,-8.813419,2.514018,6.379896,-9.059020,-8.116216,9.356077,6.250646,-4.996011],[-7.284633,5.299837,8.000951,-8.058221,-1.804481,-2.820670,-3.582219,0.015121,-4.110485,7.255079],[-1.277609,8.680326,-2.499360,1.422123,-2.143925,6.869248,6.629619,-8.025165,0.424895,3.500267]]], dtype = "float64")#candidate|2171|(2, 13, 10)|const|float64
const_2172 = relay.const([[[-1.949996,3.117303,9.817692,-8.400280,2.982060,-1.280138,-1.106447,5.343400,5.616657,2.562251],[-1.163244,1.036174,6.826449,5.023617,5.322116,8.691268,-0.447844,3.914771,-6.754199,8.575013],[-6.268710,6.404517,-5.854922,-9.212457,-1.984317,-1.791591,-3.830656,-7.461686,7.588354,9.720033],[-8.139653,-7.513719,1.527022,-0.557523,-9.866444,2.581070,-4.989769,7.957781,-5.598947,-3.146977],[3.087617,3.548199,-7.312107,5.876059,-0.981712,-7.509277,2.896868,8.148157,-5.669194,4.872553],[5.332772,6.693520,9.814186,-9.134827,2.640001,-4.715298,-2.243621,-1.938396,3.450232,-5.781543],[-8.368974,9.407609,3.869867,-9.939581,-0.313680,-0.846215,0.541212,2.965652,-7.590021,-6.167059],[-1.347726,-3.658991,-3.581400,-1.419872,5.472426,0.417889,1.237642,0.280334,-2.023059,5.881270],[3.234202,-5.601450,4.362284,5.671381,-8.014152,6.928555,9.127911,0.779231,5.161547,5.364672],[-3.005908,-2.911652,0.243681,-0.377684,-3.788542,0.496408,-9.638939,-6.916545,9.827481,8.556869],[2.962490,0.643690,6.321044,-1.582823,-3.012699,2.944489,6.158740,-7.840901,6.688140,-1.313523],[-4.580281,-3.161615,2.005405,2.482318,-0.254120,-2.297957,2.791868,-2.263124,-3.043687,1.573655],[9.469480,1.595413,0.782789,0.101821,8.244557,-6.405460,8.193656,-2.215689,6.963511,-8.417966]],[[-4.012153,3.184791,-5.488528,-1.257431,-0.146354,7.111680,-4.798095,-9.367276,-3.023664,5.688961],[3.097075,-9.534979,-1.724634,-8.577661,-9.248382,2.135096,3.639558,-9.117726,2.106243,5.312078],[6.443100,3.144560,7.110149,1.514708,3.603059,8.586717,-5.778278,-9.394425,-4.545522,-8.671080],[6.236147,-0.421135,-0.757936,-4.621297,2.534204,6.182642,-6.692204,7.749269,3.586223,8.870240],[2.583587,2.845448,-2.490728,-6.347403,-1.537206,9.333283,-9.346430,3.316571,8.704691,-5.155656],[7.027472,9.891843,-8.053640,9.624677,1.915681,4.964730,-8.558992,-8.433433,-3.036462,1.627985],[9.823670,-0.764109,-2.938091,-4.547711,5.511626,9.030646,-6.154198,-4.652289,6.013765,-7.552078],[-6.183753,7.008561,2.136839,-2.339427,-3.282738,-1.788189,-2.228720,2.647604,-9.051230,-6.147027],[1.059385,-2.115413,-8.615205,-2.308969,9.266935,-8.143537,-4.477469,-1.851919,2.381053,3.095311],[-7.278722,0.621512,-9.038416,-0.625173,-9.282968,-0.794871,-9.560486,-4.283792,8.191081,-9.748133],[5.534938,3.958308,-8.914166,3.603894,-1.167127,9.509047,8.446069,0.885358,1.405125,-3.063733],[9.064276,0.179230,-0.332278,-8.906312,7.189580,-4.274387,-7.101993,-1.200567,4.173723,-5.160669],[3.643690,-1.499010,8.556728,-3.825359,3.330429,-4.966057,-3.868352,-3.411770,9.879722,-6.380447]]], dtype = "float64")#candidate|2172|(2, 13, 10)|const|float64
bop_2173 = relay.not_equal(const_2171.astype('bool'), relay.reshape(const_2172.astype('bool'), relay.shape_of(const_2171))) # shape=(2, 13, 10)
func_1741_call = mod.get_global_var('func_1741')
func_1743_call = mutated_mod.get_global_var('func_1743')
var_2181 = relay.var("var_2181", dtype = "float32", shape = (16, 26))#candidate|2181|(16, 26)|var|float32
call_2180 = relay.TupleGetItem(func_1741_call(relay.reshape(var_2181.astype('float32'), [13, 4, 8])), 0)
call_2182 = relay.TupleGetItem(func_1743_call(relay.reshape(var_2181.astype('float32'), [13, 4, 8])), 0)
bop_2186 = relay.left_shift(call_2180.astype('int32'), relay.reshape(var_2181.astype('int32'), relay.shape_of(call_2180))) # shape=(13, 4, 8)
bop_2189 = relay.left_shift(call_2182.astype('int32'), relay.reshape(var_2181.astype('int32'), relay.shape_of(call_2182))) # shape=(13, 4, 8)
func_217_call = mod.get_global_var('func_217')
func_222_call = mutated_mod.get_global_var('func_222')
const_2192 = relay.const([6.048737,-4.625061,5.151104,-5.520729,-4.647783,-7.582976,-6.302298,1.451092,-5.323035,-1.665228,4.447926,-2.859358,0.026647,-1.090226,-3.452220,2.840057,-9.822914,5.010093,5.046174,6.168463,-0.588893,-5.594291,0.879644,5.260287,-2.140294,-7.995806,-8.508676,-9.402888,-7.620341,-2.898938,-9.972788,-4.630803,0.047484,-0.465946,-5.010624,-1.957269,8.105150,7.541463,1.077906], dtype = "float32")#candidate|2192|(39,)|const|float32
var_2193 = relay.var("var_2193", dtype = "float32", shape = (195,))#candidate|2193|(195,)|var|float32
const_2194 = relay.const([[7,-8,-1,-2,-7,-2,5,-8,3,2,2,-5,7,5,-1],[4,-3,3,-7,-1,-10,-1,-1,4,2,7,1,4,5,-7],[10,-6,-6,-7,6,7,-2,-10,7,8,1,5,7,-8,-9],[-1,-6,4,-10,5,10,3,-2,5,-7,1,8,8,5,10],[-10,-7,-1,-10,-1,-6,-1,-2,-2,-2,-2,6,7,7,-1],[10,-9,-2,7,1,1,10,6,2,-9,-6,-7,10,8,10],[4,5,-6,-4,-8,-2,2,-10,-3,4,-7,4,-3,-8,2],[2,-9,-1,-1,9,-10,10,-4,-10,-3,1,-7,3,-9,-10],[-10,-7,7,-3,3,-2,4,4,-2,-7,1,4,10,7,-10],[-10,-1,-9,-5,9,-6,-10,10,-10,-10,-7,2,-8,-9,-4],[4,-9,-1,3,5,-3,-2,-3,8,-7,10,-1,5,7,-6]], dtype = "uint8")#candidate|2194|(11, 15)|const|uint8
const_2195 = relay.const([2,-7,2,-10,-4,8,-7,2,-4,-8,-3,7,8,-4,-4,6,-8,-1,-7,-9,-6,-8,-10,10,9,10,-7,-4,2,1,2,2,-2,-4,5,-9,2,4,10,-8,4,-3,-7,-5,-4,5,-4,7,1,5,7,-5,-3,-3,-4,2,-2,-8,1,-8,-8,10,-9,7,2,-5,6,-10,-10,-10,5,-2,-6,-6,4,1,-8,-3,9,6,-2,10,1,-6,2,-5,9,-6,10,1,7,-5,4,3,-7,-5,-9,6,-5,-3,2,6,7,-6,5,10,-3,8,-2,1,9,10,-10,-2,-1,-2,2,6,-9,8,-4,-5,-3,2,-3,9,-8,-3,-5,3,-7,1,-4,-1,-1,-6,-7,-10,3,8,-7,-9,-3,-7,-5,-8,-7,6,-8,-4,-5,-2,9,-1,-7,10,5,1,2,-8,-8,1,-7,-9,-3,-4,1,-9,9,5,-10,-10,-4,4,-10,-5,1,6,-5,3,-5,-6,-2,-7,6,6,6,-2,-6,-8,-3,5,-9,3,5,1,2,8,-2,-4,-8,-4,-6,-7,-7,1,8,-3,8,-10,-2,4,-8,-10,7,7,-6,-10,-9,9,3,-5,7,-7,-6,9,-10,3,-5,-8,-1,-10,8,-1,8,-5,1,2,-10,4,-6,3,6,-3,3,5,-6,10,6,3,3,-5,-9,-2,-3,-4,-9,-4,5,8,-9,-9,-10,9,2,8,-1,2,9,9,-10,1,-10,-6,4,-2,-9,-8,-1,2,8,-1,-4,-8,-6,-5,8,8,2,-4,10,-9,-6,-7,-3,-2,-1,-9,5,8,-2,8,8,9,-1,-8,6,9,4,1,-7,8,8,-2,3,-2,2,7,7,-2,9,-1,-7,1,8,-1,-6,2,-4,-5,-2,-4,-1,4,8,-8,6,-4,-10,8,-8,1,-6,8,-7,9,-3,6,5,-2,8,10,9,-10,-10,5,5,-1,-10,3,5,-9,-4,-10,4,9,-2,-7,4,10,-6,-1,-4,2,-5,-1,6,9,-4,-8,-3,-2,8,7,-7,-6,-3,-1,-1,-1,9,-7,4,4,6,-8,-9,-3,-8,-8,9,-7,3,9,5,2,-4,9,-6,-7,7,9,-4,2,7,8,-6,-8,4,-4,-7,-1,7,10,4,-6,-1,-6,1,8,10,2,10,6,7,-3,6,7,5,-9,-5,10,1,-4,6,10,7,-3,-4,-2,-8,-7,-6,-2,-4,-10,5,6,7,-8,-1,10,-2,6,3,7,1,-10,8,10,2,-2,1,2,-9,3,-1,-9,-8,-9,3,4,1,2,5,-3,3,3,3,-4,-8,-2,9,-1,6,-10,5,-2,-10,-6,-4,2,-4,1,-10,8,1,-6,1,9,-7,-6,-7,-9,-1,-3,-5,4,10,5], dtype = "uint32")#candidate|2195|(520,)|const|uint32
call_2191 = relay.TupleGetItem(func_217_call(relay.reshape(const_2192.astype('float32'), [1, 3, 13]), relay.reshape(var_2193.astype('float32'), [5, 3, 13]), relay.reshape(const_2194.astype('uint8'), [165,]), relay.reshape(const_2195.astype('uint32'), [520,]), ), 2)
call_2196 = relay.TupleGetItem(func_222_call(relay.reshape(const_2192.astype('float32'), [1, 3, 13]), relay.reshape(var_2193.astype('float32'), [5, 3, 13]), relay.reshape(const_2194.astype('uint8'), [165,]), relay.reshape(const_2195.astype('uint32'), [520,]), ), 2)
uop_2205 = relay.acos(const_2192.astype('float32')) # shape=(39,)
output = relay.Tuple([bop_2173,bop_2186,call_2191,var_2193,const_2194,const_2195,uop_2205,])
output2 = relay.Tuple([bop_2173,bop_2189,call_2196,var_2193,const_2194,const_2195,uop_2205,])
func_2208 = relay.Function([var_2181,var_2193,], output)
mod['func_2208'] = func_2208
mod = relay.transform.InferType()(mod)
var_2209 = relay.var("var_2209", dtype = "float32", shape = (16, 26))#candidate|2209|(16, 26)|var|float32
var_2210 = relay.var("var_2210", dtype = "float32", shape = (195,))#candidate|2210|(195,)|var|float32
output = func_2208(var_2209,var_2210,)
func_2211 = relay.Function([var_2209,var_2210,], output)
mutated_mod['func_2211'] = func_2211
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2337 = relay.var("var_2337", dtype = "int8", shape = (9, 14, 10))#candidate|2337|(9, 14, 10)|var|int8
var_2338 = relay.var("var_2338", dtype = "int8", shape = (9, 14, 10))#candidate|2338|(9, 14, 10)|var|int8
bop_2339 = relay.left_shift(var_2337.astype('int8'), relay.reshape(var_2338.astype('int8'), relay.shape_of(var_2337))) # shape=(9, 14, 10)
bop_2345 = relay.bitwise_and(var_2338.astype('int8'), relay.reshape(bop_2339.astype('int8'), relay.shape_of(var_2338))) # shape=(9, 14, 10)
func_1794_call = mod.get_global_var('func_1794')
func_1798_call = mutated_mod.get_global_var('func_1798')
const_2354 = relay.const([[-5,3,10,-7,-9,5,10,-5,6,-3,-4,-10,-6,2,-2,9,1,-7,1,-8,-4,-4,-10,-5,5,-7,-8,-7,-5,-2,3,6,3,-7,-9,7,-9,-8,-9,7,3,-6,-2,-9,4],[-4,3,3,5,-2,-6,-8,1,-5,-8,-6,-6,-4,-7,-5,-4,-10,-3,5,-4,2,8,-4,-5,9,1,6,8,-6,-5,-8,2,-8,-10,2,-1,-1,-6,6,-5,-7,-10,4,7,5],[-10,10,10,6,-2,1,3,-10,10,-10,-3,-1,-4,-3,6,-10,2,10,-10,1,5,3,5,-6,-1,7,-5,-7,7,7,-9,-2,9,-4,-8,-10,6,-8,-7,3,3,2,-2,7,10],[-3,-5,1,-4,-4,7,-5,5,1,2,-2,5,2,-2,5,5,2,-2,5,-5,10,10,2,-1,-9,-8,-7,-4,10,-8,-1,-2,4,-3,2,7,-9,-7,4,5,-2,-6,-8,8,10],[3,-10,2,1,-4,-3,-4,9,5,-1,9,-5,-2,7,1,5,-9,-10,-10,10,5,4,8,-1,7,3,-7,10,1,1,-7,3,3,10,-6,7,4,1,7,2,3,-9,-6,-2,-10],[-7,9,-4,-5,6,-5,-3,8,-8,5,8,-9,-10,8,10,-3,7,-6,4,7,5,7,-8,9,10,10,-3,7,-2,3,4,-10,10,4,-9,8,-1,-1,9,-7,-5,-7,5,-10,-8],[10,1,-5,-6,-8,7,9,10,7,10,-10,-2,-1,-2,8,4,-4,-8,9,-5,10,-3,-2,-9,-4,-4,3,-1,6,7,-5,-2,9,7,5,-3,6,6,-10,-8,5,7,9,-6,5],[-7,-6,9,-8,-3,8,9,-3,5,-3,6,-4,-8,4,10,-9,8,-5,-1,3,9,10,-9,-5,6,5,6,6,-4,9,-10,2,-6,-6,1,10,3,8,-5,-6,10,5,-5,-9,-1],[-5,-9,-2,-4,-1,-10,-7,-3,6,-9,-8,-6,-5,4,-9,4,-8,1,-7,8,1,9,10,-2,-9,-1,-8,-10,9,8,-8,4,-7,-4,9,2,-10,6,4,-6,-9,-8,5,1,-1],[-2,1,-3,-10,-5,-10,8,10,10,2,-7,-5,9,4,-6,6,1,5,-8,-4,-5,-1,-4,9,-5,2,-3,6,10,9,-4,-5,6,1,-6,-8,9,6,-2,-7,-5,10,7,1,5]], dtype = "uint16")#candidate|2354|(10, 45)|const|uint16
call_2353 = relay.TupleGetItem(func_1794_call(relay.reshape(const_2354.astype('uint16'), [5, 10, 9]), relay.reshape(const_2354.astype('uint16'), [5, 10, 9]), ), 4)
call_2355 = relay.TupleGetItem(func_1798_call(relay.reshape(const_2354.astype('uint16'), [5, 10, 9]), relay.reshape(const_2354.astype('uint16'), [5, 10, 9]), ), 4)
func_412_call = mod.get_global_var('func_412')
func_414_call = mutated_mod.get_global_var('func_414')
call_2359 = relay.TupleGetItem(func_412_call(relay.reshape(var_2337.astype('float64'), [6, 14, 15])), 0)
call_2360 = relay.TupleGetItem(func_414_call(relay.reshape(var_2337.astype('float64'), [6, 14, 15])), 0)
func_38_call = mod.get_global_var('func_38')
func_41_call = mutated_mod.get_global_var('func_41')
const_2371 = relay.const([8,-8,-5,9,5,-1,-4,9,3,10,-2,5,-8,3,5,-3,-8,-1,-7,-10,6,5,6,-3,6,6,-4,-4,-9,-8,-3,-7,-3,-3,-9,-5,8,-5,6,1,1,1,-8,10,4,-2,-9,7,9,4,-6,-3,1,-7,5,-10,-5,4,8,3,-1,8,-5,-6,6,2,-1,4,-4,8,9,8,8,9,7,7,-8,10,9,-10,7,5,-9,-9,-10,-2,4,-4,1,8,7,8,10,1,-5,4,-4,-10,-8,6,4,6,8,-10,-7,-9,-4,2,-4,-5,3,-8,6,10,5,-3,-3,-6,-1,10,-7,-2,3,-6,6,-5,-9,-8,3,1,3,8,3,7,-2,-1,5,9,7,6,-5,2,5,2,-7,5,-7,6,-1,-5,7,2,-9,-1,-8,-10,7,8,-2,-10,-3,9,-2,-3,5], dtype = "uint8")#candidate|2371|(165,)|const|uint8
call_2370 = func_38_call(relay.reshape(const_2371.astype('uint8'), [5, 11, 3]), relay.reshape(const_2371.astype('uint8'), [5, 11, 3]), )
call_2372 = func_38_call(relay.reshape(const_2371.astype('uint8'), [5, 11, 3]), relay.reshape(const_2371.astype('uint8'), [5, 11, 3]), )
output = relay.Tuple([bop_2345,call_2353,const_2354,call_2359,call_2370,const_2371,])
output2 = relay.Tuple([bop_2345,call_2355,const_2354,call_2360,call_2372,const_2371,])
func_2384 = relay.Function([var_2337,var_2338,], output)
mod['func_2384'] = func_2384
mod = relay.transform.InferType()(mod)
var_2385 = relay.var("var_2385", dtype = "int8", shape = (9, 14, 10))#candidate|2385|(9, 14, 10)|var|int8
var_2386 = relay.var("var_2386", dtype = "int8", shape = (9, 14, 10))#candidate|2386|(9, 14, 10)|var|int8
output = func_2384(var_2385,var_2386,)
func_2387 = relay.Function([var_2385,var_2386,], output)
mutated_mod['func_2387'] = func_2387
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2537 = relay.var("var_2537", dtype = "int64", shape = (10, 10, 12))#candidate|2537|(10, 10, 12)|var|int64
var_2538 = relay.var("var_2538", dtype = "int64", shape = (10, 10, 12))#candidate|2538|(10, 10, 12)|var|int64
bop_2539 = relay.greater_equal(var_2537.astype('bool'), relay.reshape(var_2538.astype('bool'), relay.shape_of(var_2537))) # shape=(10, 10, 12)
func_217_call = mod.get_global_var('func_217')
func_222_call = mutated_mod.get_global_var('func_222')
const_2543 = relay.const([-7.851774,-9.379510,-9.882891,4.086057,0.191576,1.085536,-4.918574,8.778157,-9.219888,-7.501031,-2.020649,-4.761722,-6.332689,-6.027186,1.781605,0.409040,3.541016,-1.623585,4.613018,-6.243876,4.779388,-1.680275,5.311595,-3.001143,-8.964015,0.707543,-5.791892,-0.430112,7.916331,-3.359587,4.229454,-1.615343,-4.610113,-1.094802,-2.509855,-8.748812,3.638938,3.766555,1.004853], dtype = "float32")#candidate|2543|(39,)|const|float32
var_2544 = relay.var("var_2544", dtype = "float32", shape = (195,))#candidate|2544|(195,)|var|float32
var_2545 = relay.var("var_2545", dtype = "uint8", shape = (165,))#candidate|2545|(165,)|var|uint8
var_2546 = relay.var("var_2546", dtype = "uint32", shape = (520,))#candidate|2546|(520,)|var|uint32
call_2542 = relay.TupleGetItem(func_217_call(relay.reshape(const_2543.astype('float32'), [1, 3, 13]), relay.reshape(var_2544.astype('float32'), [5, 3, 13]), relay.reshape(var_2545.astype('uint8'), [165,]), relay.reshape(var_2546.astype('uint32'), [520,]), ), 4)
call_2547 = relay.TupleGetItem(func_222_call(relay.reshape(const_2543.astype('float32'), [1, 3, 13]), relay.reshape(var_2544.astype('float32'), [5, 3, 13]), relay.reshape(var_2545.astype('uint8'), [165,]), relay.reshape(var_2546.astype('uint32'), [520,]), ), 4)
output = relay.Tuple([bop_2539,call_2542,const_2543,var_2544,var_2545,var_2546,])
output2 = relay.Tuple([bop_2539,call_2547,const_2543,var_2544,var_2545,var_2546,])
func_2553 = relay.Function([var_2537,var_2538,var_2544,var_2545,var_2546,], output)
mod['func_2553'] = func_2553
mod = relay.transform.InferType()(mod)
mutated_mod['func_2553'] = func_2553
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2553_call = mutated_mod.get_global_var('func_2553')
var_2555 = relay.var("var_2555", dtype = "int64", shape = (10, 10, 12))#candidate|2555|(10, 10, 12)|var|int64
var_2556 = relay.var("var_2556", dtype = "int64", shape = (10, 10, 12))#candidate|2556|(10, 10, 12)|var|int64
var_2557 = relay.var("var_2557", dtype = "float32", shape = (195,))#candidate|2557|(195,)|var|float32
var_2558 = relay.var("var_2558", dtype = "uint8", shape = (165,))#candidate|2558|(165,)|var|uint8
var_2559 = relay.var("var_2559", dtype = "uint32", shape = (520,))#candidate|2559|(520,)|var|uint32
call_2554 = func_2553_call(var_2555,var_2556,var_2557,var_2558,var_2559,)
output = call_2554
func_2560 = relay.Function([var_2555,var_2556,var_2557,var_2558,var_2559,], output)
mutated_mod['func_2560'] = func_2560
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2719 = relay.const([[[1.877675,5.292720,1.118598,6.492469,5.580859,-5.629418,-5.601044,-2.661867,5.778245,2.956514,7.485547],[-9.047091,8.771584,-3.098692,-6.135300,6.640009,0.092458,-9.411191,-9.460561,-0.294181,8.548556,-3.448157],[2.292674,-9.618084,-2.011673,-0.223223,5.579850,-1.793728,-0.696117,4.783608,3.188553,9.830633,-0.569322],[5.292737,5.291286,-8.422414,-0.070353,-6.067167,3.271064,-2.651385,-5.054871,6.537203,-5.202955,-1.802744],[-6.864573,7.373761,-2.704490,-6.396197,-3.010796,-7.929951,0.344468,-3.264783,5.002193,-4.520669,5.883800],[-3.247542,4.810601,5.294183,-6.086850,-4.790972,-1.954544,-3.722646,-8.114346,8.168888,-8.009293,-3.971172],[-4.475140,-0.512760,-5.684015,3.718376,3.969731,0.512029,3.170891,-9.146232,5.353715,4.273608,2.118297]]], dtype = "float64")#candidate|2719|(1, 7, 11)|const|float64
uop_2720 = relay.log10(const_2719.astype('float64')) # shape=(1, 7, 11)
output = uop_2720
output2 = uop_2720
func_2723 = relay.Function([], output)
mod['func_2723'] = func_2723
mod = relay.transform.InferType()(mod)
output = func_2723()
func_2724 = relay.Function([], output)
mutated_mod['func_2724'] = func_2724
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2723_call = mod.get_global_var('func_2723')
func_2724_call = mutated_mod.get_global_var('func_2724')
call_2760 = func_2723_call()
call_2761 = func_2723_call()
output = call_2760
output2 = call_2761
func_2775 = relay.Function([], output)
mod['func_2775'] = func_2775
mod = relay.transform.InferType()(mod)
output = func_2775()
func_2776 = relay.Function([], output)
mutated_mod['func_2776'] = func_2776
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2723_call = mod.get_global_var('func_2723')
func_2724_call = mutated_mod.get_global_var('func_2724')
call_2784 = func_2723_call()
call_2785 = func_2723_call()
output = call_2784
output2 = call_2785
func_2786 = relay.Function([], output)
mod['func_2786'] = func_2786
mod = relay.transform.InferType()(mod)
output = func_2786()
func_2787 = relay.Function([], output)
mutated_mod['func_2787'] = func_2787
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2723_call = mod.get_global_var('func_2723')
func_2724_call = mutated_mod.get_global_var('func_2724')
call_2853 = func_2723_call()
call_2854 = func_2723_call()
func_2553_call = mod.get_global_var('func_2553')
func_2560_call = mutated_mod.get_global_var('func_2560')
var_2869 = relay.var("var_2869", dtype = "int64", shape = (1200,))#candidate|2869|(1200,)|var|int64
var_2870 = relay.var("var_2870", dtype = "float32", shape = (195,))#candidate|2870|(195,)|var|float32
const_2871 = relay.const([-2,-10,-7,-7,1,7,-9,3,-7,3,7,-3,5,-3,-5,1,-1,-2,5,3,7,3,-6,10,-5,1,7,10,7,-4,-6,-8,7,7,-1,7,-10,-4,7,10,-8,-5,4,-6,-1,-1,-5,-5,-3,6,3,-2,6,-1,-1,-6,-3,-4,6,-8,-2,3,-2,-2,3,6,1,-10,5,9,-4,5,-6,4,10,-1,3,-10,4,-9,-7,-4,-5,5,-8,4,-1,-9,9,-1,7,1,-5,6,-2,6,-10,-10,-5,-2,3,-4,6,-1,9,4,-1,-6,8,4,5,-1,-10,-1,-8,-9,1,-5,-9,4,8,1,-6,4,9,4,-9,2,-6,6,7,6,9,7,-8,3,10,5,-5,10,8,9,-6,9,-3,7,8,-8,-5,-4,-7,-8,5,4,2,-3,5,10,-2,-5,-3,4,4,-8,-6], dtype = "uint8")#candidate|2871|(165,)|const|uint8
const_2872 = relay.const([-1,1,2,-3,9,-7,-7,-8,-5,3,5,-1,9,1,4,-10,1,-1,7,9,10,-2,2,-6,-5,7,8,3,9,-5,-6,-8,-8,-1,-2,1,-6,-9,-3,5,5,9,2,-1,6,2,2,-8,-8,3,9,2,-9,4,-7,1,3,-5,2,5,-3,9,-6,4,-5,-4,5,10,8,-5,4,-6,3,-3,-1,-4,-5,10,9,-5,-4,-1,-6,10,-4,8,-8,7,8,-10,-6,3,-7,-3,6,-3,1,-7,4,9,-2,-7,1,-6,4,8,-10,1,4,6,-6,-10,2,1,9,-3,9,3,-6,3,-5,-9,-1,-2,8,7,-6,8,8,-3,3,8,-6,4,-10,-1,7,1,2,-5,3,4,-10,-9,-6,-3,-8,1,-2,7,3,8,-8,1,2,10,-9,7,9,-8,-8,-3,4,2,2,-1,-5,-6,7,5,-5,-7,1,6,9,6,8,4,5,9,5,-4,-8,5,10,-5,7,1,-5,10,2,-1,-5,-4,3,10,5,10,4,9,7,9,7,2,9,-7,-7,-3,7,5,-1,10,6,-1,7,-4,-7,8,5,7,-9,-4,5,1,5,4,10,3,-3,-8,-6,5,-7,7,-3,5,1,10,-9,9,-6,1,4,6,10,-10,-6,10,-9,5,-3,4,4,-1,-5,-8,-3,1,-4,-9,-10,-3,-5,10,-9,-8,9,-10,5,5,-4,-5,1,6,-4,10,-5,10,5,6,9,8,-5,9,10,2,-7,2,-4,3,-5,-1,7,10,3,6,9,8,-4,4,2,-1,4,9,4,-7,7,9,9,-4,7,-4,7,10,10,-9,-1,-3,4,6,-4,-4,1,2,5,4,-9,-10,-2,-10,-4,7,7,-2,-2,8,-1,6,8,-4,6,-6,-8,-3,-7,-3,10,-8,-9,-10,9,8,10,2,4,10,-3,6,5,2,-10,4,-4,-1,-5,6,6,-1,-10,4,-8,5,-3,5,-10,-1,-1,-4,-9,9,-3,7,-1,-8,1,6,-10,-1,1,2,-2,-6,8,-7,5,3,3,9,-8,6,1,-7,2,-4,3,-8,9,-7,6,-5,1,8,10,1,-4,-7,10,8,3,9,-7,2,-1,-4,4,7,-9,-1,-10,-9,1,1,-2,-5,2,3,-1,7,6,10,-1,5,-9,1,1,6,-5,-5,-8,2,-2,-9,-9,-4,6,-5,10,8,-8,-9,-8,3,3,-10,6,-9,4,1,4,10,-1,8,-5,-9,7,4,-4,-1,-4,-6,-1,-3,6,-10,-1,-2,-7,4,-9,7,-2,3,9,-2,5,5,6,-2,-2,-1,-5,7,-3,4,-3,-8,-1,2,-7,2,2,-7,-7,-1,3,4,-4,10,2,-1], dtype = "uint32")#candidate|2872|(520,)|const|uint32
call_2868 = relay.TupleGetItem(func_2553_call(relay.reshape(var_2869.astype('int64'), [10, 10, 12]), relay.reshape(var_2869.astype('int64'), [10, 10, 12]), relay.reshape(var_2870.astype('float32'), [195,]), relay.reshape(const_2871.astype('uint8'), [165,]), relay.reshape(const_2872.astype('uint32'), [520,]), ), 4)
call_2873 = relay.TupleGetItem(func_2560_call(relay.reshape(var_2869.astype('int64'), [10, 10, 12]), relay.reshape(var_2869.astype('int64'), [10, 10, 12]), relay.reshape(var_2870.astype('float32'), [195,]), relay.reshape(const_2871.astype('uint8'), [165,]), relay.reshape(const_2872.astype('uint32'), [520,]), ), 4)
output = relay.Tuple([call_2853,call_2868,var_2869,var_2870,const_2871,const_2872,])
output2 = relay.Tuple([call_2854,call_2873,var_2869,var_2870,const_2871,const_2872,])
func_2884 = relay.Function([var_2869,var_2870,], output)
mod['func_2884'] = func_2884
mod = relay.transform.InferType()(mod)
mutated_mod['func_2884'] = func_2884
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2884_call = mutated_mod.get_global_var('func_2884')
var_2886 = relay.var("var_2886", dtype = "int64", shape = (1200,))#candidate|2886|(1200,)|var|int64
var_2887 = relay.var("var_2887", dtype = "float32", shape = (195,))#candidate|2887|(195,)|var|float32
call_2885 = func_2884_call(var_2886,var_2887,)
output = call_2885
func_2888 = relay.Function([var_2886,var_2887,], output)
mutated_mod['func_2888'] = func_2888
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2775_call = mod.get_global_var('func_2775')
func_2776_call = mutated_mod.get_global_var('func_2776')
call_2904 = func_2775_call()
call_2905 = func_2775_call()
output = call_2904
output2 = call_2905
func_2908 = relay.Function([], output)
mod['func_2908'] = func_2908
mod = relay.transform.InferType()(mod)
output = func_2908()
func_2909 = relay.Function([], output)
mutated_mod['func_2909'] = func_2909
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2945 = relay.var("var_2945", dtype = "float32", shape = (3, 16, 10))#candidate|2945|(3, 16, 10)|var|float32
var_2946 = relay.var("var_2946", dtype = "float32", shape = (3, 16, 10))#candidate|2946|(3, 16, 10)|var|float32
bop_2947 = relay.mod(var_2945.astype('float32'), relay.reshape(var_2946.astype('float32'), relay.shape_of(var_2945))) # shape=(3, 16, 10)
output = bop_2947
output2 = bop_2947
func_2959 = relay.Function([var_2945,var_2946,], output)
mod['func_2959'] = func_2959
mod = relay.transform.InferType()(mod)
mutated_mod['func_2959'] = func_2959
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2959_call = mutated_mod.get_global_var('func_2959')
var_2961 = relay.var("var_2961", dtype = "float32", shape = (3, 16, 10))#candidate|2961|(3, 16, 10)|var|float32
var_2962 = relay.var("var_2962", dtype = "float32", shape = (3, 16, 10))#candidate|2962|(3, 16, 10)|var|float32
call_2960 = func_2959_call(var_2961,var_2962,)
output = call_2960
func_2963 = relay.Function([var_2961,var_2962,], output)
mutated_mod['func_2963'] = func_2963
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2979 = relay.var("var_2979", dtype = "uint16", shape = ())#candidate|2979|()|var|uint16
var_2980 = relay.var("var_2980", dtype = "uint16", shape = (11, 1, 15))#candidate|2980|(11, 1, 15)|var|uint16
bop_2981 = relay.logical_xor(var_2979.astype('uint16'), var_2980.astype('uint16')) # shape=(11, 1, 15)
uop_2990 = relay.acosh(var_2980.astype('float32')) # shape=(11, 1, 15)
uop_2995 = relay.log2(uop_2990.astype('float32')) # shape=(11, 1, 15)
uop_2997 = relay.atanh(uop_2995.astype('float32')) # shape=(11, 1, 15)
output = relay.Tuple([bop_2981,uop_2997,])
output2 = relay.Tuple([bop_2981,uop_2997,])
func_3003 = relay.Function([var_2979,var_2980,], output)
mod['func_3003'] = func_3003
mod = relay.transform.InferType()(mod)
mutated_mod['func_3003'] = func_3003
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3003_call = mutated_mod.get_global_var('func_3003')
var_3005 = relay.var("var_3005", dtype = "uint16", shape = ())#candidate|3005|()|var|uint16
var_3006 = relay.var("var_3006", dtype = "uint16", shape = (11, 1, 15))#candidate|3006|(11, 1, 15)|var|uint16
call_3004 = func_3003_call(var_3005,var_3006,)
output = call_3004
func_3007 = relay.Function([var_3005,var_3006,], output)
mutated_mod['func_3007'] = func_3007
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2786_call = mod.get_global_var('func_2786')
func_2787_call = mutated_mod.get_global_var('func_2787')
call_3035 = func_2786_call()
call_3036 = func_2786_call()
func_2384_call = mod.get_global_var('func_2384')
func_2387_call = mutated_mod.get_global_var('func_2387')
var_3047 = relay.var("var_3047", dtype = "int8", shape = (1260,))#candidate|3047|(1260,)|var|int8
call_3046 = relay.TupleGetItem(func_2384_call(relay.reshape(var_3047.astype('int8'), [9, 14, 10]), relay.reshape(var_3047.astype('int8'), [9, 14, 10]), ), 1)
call_3048 = relay.TupleGetItem(func_2387_call(relay.reshape(var_3047.astype('int8'), [9, 14, 10]), relay.reshape(var_3047.astype('int8'), [9, 14, 10]), ), 1)
output = relay.Tuple([call_3035,call_3046,var_3047,])
output2 = relay.Tuple([call_3036,call_3048,var_3047,])
func_3052 = relay.Function([var_3047,], output)
mod['func_3052'] = func_3052
mod = relay.transform.InferType()(mod)
var_3053 = relay.var("var_3053", dtype = "int8", shape = (1260,))#candidate|3053|(1260,)|var|int8
output = func_3052(var_3053)
func_3054 = relay.Function([var_3053], output)
mutated_mod['func_3054'] = func_3054
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3088 = relay.var("var_3088", dtype = "uint64", shape = (13, 4, 11))#candidate|3088|(13, 4, 11)|var|uint64
var_3089 = relay.var("var_3089", dtype = "uint64", shape = (13, 4, 11))#candidate|3089|(13, 4, 11)|var|uint64
bop_3090 = relay.bitwise_and(var_3088.astype('uint64'), relay.reshape(var_3089.astype('uint64'), relay.shape_of(var_3088))) # shape=(13, 4, 11)
output = bop_3090
output2 = bop_3090
func_3109 = relay.Function([var_3088,var_3089,], output)
mod['func_3109'] = func_3109
mod = relay.transform.InferType()(mod)
mutated_mod['func_3109'] = func_3109
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3109_call = mutated_mod.get_global_var('func_3109')
var_3111 = relay.var("var_3111", dtype = "uint64", shape = (13, 4, 11))#candidate|3111|(13, 4, 11)|var|uint64
var_3112 = relay.var("var_3112", dtype = "uint64", shape = (13, 4, 11))#candidate|3112|(13, 4, 11)|var|uint64
call_3110 = func_3109_call(var_3111,var_3112,)
output = call_3110
func_3113 = relay.Function([var_3111,var_3112,], output)
mutated_mod['func_3113'] = func_3113
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2775_call = mod.get_global_var('func_2775')
func_2776_call = mutated_mod.get_global_var('func_2776')
call_3145 = func_2775_call()
call_3146 = func_2775_call()
func_2908_call = mod.get_global_var('func_2908')
func_2909_call = mutated_mod.get_global_var('func_2909')
call_3150 = func_2908_call()
call_3151 = func_2908_call()
output = relay.Tuple([call_3145,call_3150,])
output2 = relay.Tuple([call_3146,call_3151,])
func_3185 = relay.Function([], output)
mod['func_3185'] = func_3185
mod = relay.transform.InferType()(mod)
mutated_mod['func_3185'] = func_3185
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3185_call = mutated_mod.get_global_var('func_3185')
call_3186 = func_3185_call()
output = call_3186
func_3187 = relay.Function([], output)
mutated_mod['func_3187'] = func_3187
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2786_call = mod.get_global_var('func_2786')
func_2787_call = mutated_mod.get_global_var('func_2787')
call_3391 = func_2786_call()
call_3392 = func_2786_call()
func_1475_call = mod.get_global_var('func_1475')
func_1477_call = mutated_mod.get_global_var('func_1477')
const_3394 = relay.const([-4.551252,3.023436,-7.078342,-5.057180,0.541805,-2.369236,-0.282529,-3.680130,8.596554,-4.490466,3.674784,9.588816,6.169525,-0.817513,2.055491,-9.254723,-2.442499,-3.752335,-0.966290,5.499632,-2.098877,5.559944,3.739419,-0.441512,-4.203317,4.693279,3.555741,8.273793,4.374383,7.404491,-9.483143,1.581228,-2.584768,5.557064,-9.537047,-6.223642,-5.568529,1.062876,5.560448,-2.980315,-6.776179,7.961621,-9.094263,5.051417,3.972815,-3.641578,-4.485990,-3.411936,9.764605,-6.598122,8.677880,2.282106,-1.077101,1.211606,-7.654425,-4.181866,9.711036,-9.639992,-4.100097,-1.757815,-5.592744,3.144112,-2.962152,6.783210,4.888897,5.117312,-1.344108,5.714404,-6.590540,6.858697,-0.468754,6.919063,9.053418,-7.946105,8.152610,6.546054,3.494383,5.392323,8.952015,-3.157137,-6.813531,7.281803,-0.443700,7.805390,9.238835,2.176339,-6.473210,-0.441384,-7.986964,-4.796147,9.903147,4.537592,-8.244677,-0.109966,-4.997623,7.041468,-5.581480,0.482729,8.170288,9.994944,1.869151,-3.183519,-6.737611,-1.039798,0.371085,-9.738754,-3.831835,-2.736908,-9.194520,-5.074905,1.924436,7.714735,-0.728777,-8.388676,-1.536997,8.618599,-7.234143,4.105448,-0.003800,3.082803,-5.676088,-0.065331,0.845763,-1.495461,4.416337,-1.766600,-9.281371,-6.017698,0.119123,-5.932524,6.304458,7.929168,6.661748,-3.821935,-8.036751,-3.808782,3.835598,-2.310802,9.367219,4.642167,4.920239,2.921895,2.356352,9.288793,-0.890226,-4.612359,1.090514,0.282784,1.804864,-2.167501,6.700407,-4.393576,3.148519,6.526483,5.824381,2.985105,1.206111,-7.414433,-8.781524,5.506904,4.905546,-7.909421,1.968630,-0.839173,5.476071,9.457817,9.569644,-2.637626,-1.264508,9.651110,-5.605592,-3.585213,7.073790,-4.297415,-7.807659,-7.823215,-5.818680,-9.276298,-1.767604,-7.581150,5.107164,-6.446621,9.198828,0.842355,-5.256852,-6.544349,4.543614,-2.051052,2.993841,3.480770,-9.789668,-8.294312,-4.383659,3.100175,5.087842,9.309300,6.252797,2.773355,-5.614671,-6.529845,6.576036,3.517762,3.959326,0.973846,-3.468958,8.174716,-6.208631,0.126110,-8.040621,3.987118,-8.976800,0.218433,-9.568902,8.583694,0.921030,2.516790,-0.342982,-5.650753,7.178949,-9.740359,-5.645169,-7.558067,3.296632,6.025619,-1.527310,8.053735,2.266659,-9.654587,7.649743,-9.600390,0.274443,0.507243,-6.493813,-9.848510,6.472154,-1.663232,-7.734267,-7.125520,-3.694298,7.968562,-5.403115,-7.136223,0.965475,4.409365,-6.557178,-5.586160,-5.663898,9.353999,6.790234,-7.558917,-4.236838,-7.136503,4.605019,5.857624,-6.355786,9.126205,7.913046,3.779293,-7.010102,-1.913577,-8.863992,1.014080,-2.750435,-3.065039,-5.484029,2.658887,1.646675,7.236269,-7.076715,-0.826316,6.390782,-2.081376,2.510115,-0.302909,-1.745460,-7.597430,0.542358,4.231107,-3.625693,5.872488,-6.633441,-7.506430,-4.313283,9.260171,-0.955240,5.781036,4.156841,-7.217054,6.005397,-7.724712,4.216043,5.795535,-1.377670,0.835765,-0.840528,2.045635,5.566194,-1.543594,2.252357,-6.727052,5.447736,-2.505324,4.902746,-1.699257,8.298176,0.248484,7.846026,1.440444,2.593253,9.058624,4.321353,6.044663,-4.433038,-0.856540,9.828761,3.705729,-2.479418,4.838934,-3.843702,5.613895,-8.143592,6.936194,6.096645,-8.783356,5.093179,-0.909391,-0.956238,0.536989,6.060898,3.428339,-3.338914,0.283807,-5.053449,7.486485,-4.223523,-5.726427,4.964492,8.476685,-1.734783,3.168843,4.969067,-2.398611,4.950213,-3.852647,3.518072,1.712918,-9.568808,-0.337173,7.743332,4.738635,-0.510195,4.735453,2.708666,-6.300767,-0.523015,8.398812,1.196218,9.631608,3.892300,5.914681,8.390733,1.848859,-8.528039,-2.547937,1.845753,3.201739,7.716834,5.674006,0.797348,-6.932052,3.508314,6.813728,9.749526,-4.548466,-1.791930,0.196417,-8.528166,6.684206,5.587936,4.999757,-5.215942,-7.083966,3.249278,-7.621482,-0.899861,-8.245736,2.893739,-1.001268,-2.766143,9.198321,6.963593,3.045867,5.642245,-1.257995,-1.072817,9.045721,-1.960477,2.567740,7.169420,0.709475,-0.946465,-4.228457,0.104775,0.434437,7.858950,6.605388,2.393402,-1.084136,8.284262,0.560805,-3.000497,-9.880268,8.638216,-8.451679,-6.350137,-5.435344,2.315835,-6.684641,6.780844,9.835405], dtype = "float32")#candidate|3394|(420,)|const|float32
call_3393 = relay.TupleGetItem(func_1475_call(relay.reshape(const_3394.astype('float32'), [14, 10, 3])), 2)
call_3395 = relay.TupleGetItem(func_1477_call(relay.reshape(const_3394.astype('float32'), [14, 10, 3])), 2)
output = relay.Tuple([call_3391,call_3393,const_3394,])
output2 = relay.Tuple([call_3392,call_3395,const_3394,])
func_3406 = relay.Function([], output)
mod['func_3406'] = func_3406
mod = relay.transform.InferType()(mod)
mutated_mod['func_3406'] = func_3406
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3406_call = mutated_mod.get_global_var('func_3406')
call_3407 = func_3406_call()
output = call_3407
func_3408 = relay.Function([], output)
mutated_mod['func_3408'] = func_3408
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3185_call = mod.get_global_var('func_3185')
func_3187_call = mutated_mod.get_global_var('func_3187')
call_3449 = relay.TupleGetItem(func_3185_call(), 1)
call_3450 = relay.TupleGetItem(func_3187_call(), 1)
func_2208_call = mod.get_global_var('func_2208')
func_2211_call = mutated_mod.get_global_var('func_2211')
const_3458 = relay.const([1.863274,8.359120,5.486739,-7.636963,5.753221,-9.233024,-2.163752,9.582215,8.485086,0.064252,5.789625,3.229518,2.786828,2.405060,7.580892,-3.449418,-0.232871,-6.133695,-7.497701,7.236441,0.423320,8.842150,-5.123727,-4.452840,-1.030678,0.103737,-5.261195,-6.462733,-1.816248,-8.406236,-5.280502,-3.923500,-6.619761,-8.606354,5.556201,4.367801,1.452163,3.985213,2.351266,-8.676640,1.710779,-3.260969,-0.557089,8.290192,-6.850374,-0.615312,6.095427,-0.974445,9.582044,-6.885573,-1.236850,-7.305580,-7.669524,5.213517,9.711191,-5.230996,-6.936456,-5.241968,8.351100,2.103806,-7.508031,-3.753617,-6.304659,0.372454,-6.766483,8.248086,8.910143,-4.800475,2.230445,-2.013912,9.355883,5.301255,0.066167,7.095184,0.045961,-9.798775,-0.050841,6.602112,9.322519,3.048647,-4.496750,1.840980,-6.691525,-2.681861,2.852433,-8.607864,9.238175,-1.823444,-9.530427,7.056807,-3.074953,0.969077,7.912095,-2.805058,9.979297,-9.738921,-7.226695,-0.555432,3.541381,-8.039556,2.106489,-4.448817,-7.283830,3.593827,-1.679849,-5.107077,-0.494028,1.911076,1.431039,0.342854,2.485833,-3.825695,1.651862,-6.601844,9.620918,3.399676,-6.707020,8.954146,9.835348,9.241746,-6.419994,-2.222119,8.683949,-4.972106,0.998010,9.737953,2.144753,-3.219417,-9.699709,5.094635,0.815395,-7.129054,-2.168197,-2.939344,-5.775767,5.755217,-8.766921,-8.824222,-7.801765,-4.695297,-5.335939,-0.536000,2.370702,-9.826539,-8.234460,-1.146716,-4.644572,2.129138,-6.258646,-9.447675,8.039240,8.826593,-2.516028,2.271648,-6.739135,-3.622525,2.138886,-7.327802,-5.272183,9.400841,6.637782,-4.138803,-2.082925,-3.053377,-9.608413,-8.380703,7.070310,2.749777,5.403982,-0.100615,-9.643897,-2.239804,3.123495,-1.160172,0.359439,-4.587973,5.420008,-7.631153,-2.791115,8.728097,-4.758180,-0.140449,9.533236,0.370861,-2.941903,2.619989,-7.700835,5.295971,-1.204242,1.171442,0.477373,-9.196796,2.085618,-5.329629,-7.646202,-0.891998,7.025737,-9.729953,-4.250524,2.218964,2.410386,1.397749,-3.413497,4.694982,-1.471126,-4.178029,4.515107,8.162555,-2.453323,-5.252013,3.551169,0.469887,-7.625550,4.242283,6.803042,2.989802,6.604713,-6.710560,7.077281,0.403644,7.617016,9.353906,-8.461607,4.751181,7.191510,7.604345,-7.423105,5.957682,-2.248670,7.674546,-7.895195,-1.726857,3.454704,3.655966,7.226676,-4.863771,0.749106,9.549026,-3.077464,-2.413449,-6.073266,-5.946426,-6.457286,7.173292,2.128304,-1.600371,-9.132159,2.089961,0.101248,-1.665370,7.900746,7.927613,6.947582,8.850681,1.929654,0.004871,5.168985,-9.958087,1.786053,9.731699,-9.909063,-5.967178,-3.764761,-6.756745,2.463948,-0.790068,-2.556902,3.061362,-3.511018,5.029480,-1.927604,-5.051389,2.108297,4.315875,-9.213439,1.584314,-5.798716,5.624378,7.125791,-4.331535,4.506614,-0.835460,4.969229,7.111774,-5.838593,6.635347,8.133186,-7.458585,5.472858,3.023274,-5.228175,-2.805219,6.220609,-1.028056,-3.301164,0.421761,3.324274,6.004059,4.493901,9.550265,3.238130,-7.502485,-5.805807,5.700417,-6.939498,3.648695,1.598977,9.799399,-4.737618,-3.634396,-5.888921,-6.052217,4.241062,-1.904325,-1.438865,-1.242544,1.087915,-2.410223,4.376443,2.605146,-2.183337,8.521587,-9.755443,-9.173709,-3.189636,2.577201,-6.603577,-9.936751,0.126193,-1.016150,-5.649898,-8.835253,0.882201,7.193462,-5.745160,-7.568188,-3.161754,5.585353,-7.707331,1.692219,-0.354628,-0.742584,-8.989755,-0.471244,6.287230,6.941661,3.848081,3.511093,-5.042302,7.975107,0.328279,2.878776,2.200414,4.668253,4.239544,-7.739200,9.277222,-3.624530,-5.444518,-3.569589,-5.026419,1.501225,1.074350,-4.632400,-2.487793,-6.122934,-4.146002,6.343145,-6.906747,2.342837,9.558201,6.344532,-1.589117,-4.584896,-8.505788,3.085070,-3.695061,-7.600822,6.217099,1.719487,4.351283,-4.198147,0.485849,4.399874,-8.141485,1.001346,2.804162,-0.279151,1.242844,-6.117632,0.440900,-1.109270,-5.235194,0.800892,4.259222,4.126445,8.949496,-0.042968,6.419236,-1.689979,9.339077,3.903322,3.226320,-1.285715,-4.224084,-5.103199,-8.018410,7.228022,-5.419080,5.239173,1.729170,-0.253924,-7.752733,-5.597154,-9.370679,7.219156], dtype = "float32")#candidate|3458|(416,)|const|float32
var_3459 = relay.var("var_3459", dtype = "float32", shape = (13, 15))#candidate|3459|(13, 15)|var|float32
call_3457 = relay.TupleGetItem(func_2208_call(relay.reshape(const_3458.astype('float32'), [16, 26]), relay.reshape(var_3459.astype('float32'), [195,]), ), 2)
call_3460 = relay.TupleGetItem(func_2211_call(relay.reshape(const_3458.astype('float32'), [16, 26]), relay.reshape(var_3459.astype('float32'), [195,]), ), 2)
func_217_call = mod.get_global_var('func_217')
func_222_call = mutated_mod.get_global_var('func_222')
const_3462 = relay.const([5.573910,-6.361699,0.589773,2.953741,4.844206,-9.107420,4.018649,3.706105,-5.866131,3.060093,6.738351,-1.904750,-3.718292,-3.362295,-6.132785,2.814504,-1.206476,6.700383,-9.068432,2.196759,-8.886438,-7.426354,5.525599,5.929716,7.537496,5.963721,3.937196,-5.567767,3.459185,3.577270,-8.351660,1.312640,-6.521233,-5.913630,-9.029068,8.109618,1.854788,-8.295310,2.106613], dtype = "float32")#candidate|3462|(39,)|const|float32
const_3463 = relay.const([9,-5,10,9,-2,7,5,-5,1,-9,-9,3,-7,1,-9,2,-6,2,1,-9,-2,-10,-8,7,7,6,-7,9,5,3,-4,3,3,6,-7,-9,-1,6,-2,-9,-1,6,-5,3,2,-7,2,-8,7,1,9,1,-6,9,9,8,6,-7,8,-2,-5,-9,-9,2,-1,10,-2,1,-7,8,10,-6,-2,7,3,10,-8,-5,-8,-3,-1,-10,-5,2,1,7,-10,10,-6,-9,8,-8,-10,3,1,6,10,-6,-7,6,2,3,-8,1,-2,2,-2,6,5,-2,7,10,-4,-4,-7,-10,4,1,4,6,6,6,10,2,3,-2,1,-10,10,-5,2,8,-9,-10,2,-1,-3,6,10,1,-1,-4,4,-7,-5,1,-10,-5,-7,1,10,10,10,-9,6,-4,10,9,-1,10,3,-5,-2,3,5,3,-8,9,10,10,7,-3,1,2,-10,-10,-8,7,5,-1,4,8,-6,-1,6,-10,-5,-9,-5,-10,5,-10,-3,1,7,-2,6,2,-8,6,-2,4,-1,4,4,-3,-4,-10,-9,6,-4,6,8,-2,1,-8,-8,2,5,-5,10,8,2,10,2,7,6,-10,3,1,-1,9,-5,-9,5,-1,-4,8,8,7,-7,10,2,-8,-1,9,1,-3,6,-7,8,7,-7,-7,-6,7,-3,-5,-6,-7,5,2,1,2,-7,-10,5,6,4,-8,-10,-2,-3,-7,3,7,10,-3,5,10,-4,-7,-8,2,-8,10,5,-10,-10,-9,-1,-10,8,-3,9,-6,-4,2,8,3,4,4,7,10,-1,10,-9,-2,-2,-9,8,3,-10,5,-7,-2,2,-2,9,6,-3,1,-5,-9,6,9,5,8,-5,1,-9,-4,-10,2,8,-9,-4,-1,3,-7,9,-5,-8,-8,-5,-8,4,7,-8,-5,-7,-7,5,2,-9,-7,7,-1,-4,-9,-1,-3,-8,-1,9,3,10,-9,-8,-1,1,5,9,-2,-6,1,-7,4,-5,2,-1,-2,-6,4,-3,3,4,-2,4,7,7,9,2,-9,-8,-1,-9,10,5,1,10,3,-10,8,-1,5,-2,-1,-8,1,5,-5,-4,-10,-8,8,3,-3,-6,-8,-7,-6,5,-5,-10,-7,8,-1,-6,1,2,-9,1,-9,-4,-6,9,-1,-9,-7,3,-8,-7,-3,-10,4,-6,-10,-4,5,-5,8,5,8,8,-5,-9,-1,-3,-7,3,-6,6,-7,4,-10,-5,5,-10,5,10,8,-4,6,-5,10,-6,-6,-4,-3,-7,9,1,-3,9,-10,8,8,7,9,9,-10,8,7,1,10,5,1,5,9,-1,-1,-7,5,3,5,-5,-8,3,7,-7,3,8,8,-9,7,5,1,7,5], dtype = "uint32")#candidate|3463|(520,)|const|uint32
call_3461 = relay.TupleGetItem(func_217_call(relay.reshape(const_3462.astype('float32'), [1, 3, 13]), relay.reshape(var_3459.astype('float32'), [5, 3, 13]), relay.reshape(call_3457.astype('uint8'), [165,]), relay.reshape(const_3463.astype('uint32'), [520,]), ), 4)
call_3464 = relay.TupleGetItem(func_222_call(relay.reshape(const_3462.astype('float32'), [1, 3, 13]), relay.reshape(var_3459.astype('float32'), [5, 3, 13]), relay.reshape(call_3457.astype('uint8'), [165,]), relay.reshape(const_3463.astype('uint32'), [520,]), ), 4)
var_3485 = relay.var("var_3485", dtype = "float32", shape = (39,))#candidate|3485|(39,)|var|float32
bop_3486 = relay.logical_or(const_3462.astype('bool'), relay.reshape(var_3485.astype('bool'), relay.shape_of(const_3462))) # shape=(39,)
func_2908_call = mod.get_global_var('func_2908')
func_2909_call = mutated_mod.get_global_var('func_2909')
call_3492 = func_2908_call()
call_3493 = func_2908_call()
func_2908_call = mod.get_global_var('func_2908')
func_2909_call = mutated_mod.get_global_var('func_2909')
call_3505 = func_2908_call()
call_3506 = func_2908_call()
func_3052_call = mod.get_global_var('func_3052')
func_3054_call = mutated_mod.get_global_var('func_3054')
var_3519 = relay.var("var_3519", dtype = "int8", shape = (1260,))#candidate|3519|(1260,)|var|int8
call_3518 = relay.TupleGetItem(func_3052_call(relay.reshape(var_3519.astype('int8'), [1260,])), 2)
call_3520 = relay.TupleGetItem(func_3054_call(relay.reshape(var_3519.astype('int8'), [1260,])), 2)
func_2723_call = mod.get_global_var('func_2723')
func_2724_call = mutated_mod.get_global_var('func_2724')
call_3524 = func_2723_call()
call_3525 = func_2723_call()
bop_3535 = relay.equal(var_3485.astype('bool'), relay.reshape(const_3462.astype('bool'), relay.shape_of(var_3485))) # shape=(39,)
func_3052_call = mod.get_global_var('func_3052')
func_3054_call = mutated_mod.get_global_var('func_3054')
call_3543 = relay.TupleGetItem(func_3052_call(relay.reshape(var_3519.astype('int8'), [1260,])), 0)
call_3544 = relay.TupleGetItem(func_3054_call(relay.reshape(var_3519.astype('int8'), [1260,])), 0)
bop_3556 = relay.not_equal(bop_3486.astype('bool'), relay.reshape(bop_3535.astype('bool'), relay.shape_of(bop_3486))) # shape=(39,)
bop_3559 = relay.floor_divide(bop_3535.astype('float32'), relay.reshape(bop_3486.astype('float32'), relay.shape_of(bop_3535))) # shape=(39,)
uop_3566 = relay.sqrt(call_3449.astype('float32')) # shape=(1, 7, 11)
uop_3568 = relay.sqrt(call_3450.astype('float32')) # shape=(1, 7, 11)
func_2553_call = mod.get_global_var('func_2553')
func_2560_call = mutated_mod.get_global_var('func_2560')
const_3579 = relay.const([[-6,-1,9,3,8,8,5,-9,-9,5,-7,-7,-9,8,10,-10,-4,3,4,-9,9,-2,-3,3,8,-3,10,-5,-4,-8,-4,1,1,3,-4,-8,10,-7,-3,-6,-8,-7,10,9,4,8,-8,-7,-5,-6,3,-1,-8,-7,-9,-1,1,-7,-9,-4,-6,10,-1,2,-7,6,6,4,-6,-2,-5,5,-2,-8,-9,-3,-3,8,10,-2,2,-9,-5,-10,-8,-9,-7,1,-5,10,1,10,4,10,1,3,9,-10,8,9,-4,1,1,1,-10,3,-4,-5,-4,-4,-8,8,2,-4,-8,6,-9,5,8,-9,7,-2,-6,9,4,3,-4,-9,-9,-7,-4,-10,2,7,1,2,6,1,1,-10,-7,6,5,6,-6,2,-9,-7,10,-3,-7,-3,9,5,-5,-4,1,2,3,2,2,-3,8,4,-3,-3,1,5,9,1,-6,-4,5,3,-5,-9,-8,-10,4,8,-10,-8,-6,-3,3,-9,-9,6,-9,1,-7,-3,-5,-3,6,6,2,-6,-7,3,5,8,5,7,6,-7,10,-8,-2,6,2,-3,8,-3,10,-4,8,-8,-8,6,-5,-7,-5,-4,5,5,3,-4,-9,5,-4,6,-9,-4,1,10,-5,5,-1,-8,-8,-8,5,2,-2,3,4,-10,4,-3,-6,-3,2,-2,6,1,-7,6,2,3,-5,-10,8,5,3,-8,-2,1,-8,7,5,9,9,-5,5,5,-6,2,-4,-5,6,-6,-6,-10,-2,-10,7,10,-7,6,-2,-4,5,-2,3,-4,5,-5,8,7,2,-6,9,4,-10,-9,-9,-1,-7,1,-4,-8,6,-10,-9,-2,-4,-10,4,-10,2,7,10,-8,-4,-6,-6,5,-6,-8,-2,5,-1,-9,-1,-1,6,-6,7,3,3,-8,-2,2,-10,4,-5,7,6,-2,3,-9,1,-5,-9,10,8,2,-2,9,-7,3,-3,-9,-6,-7,-4,10,-2,-4,3,-5,-3,-10,-1,9,1,-1,4,-5,-9,-9,-9,-8,6,-3,9,2,3,7,3,4,-9,10,5,2,-8,-8,-4,7,2,10,6,-1,6,-4,5,-4,-5,6,2,3,-2,6,-9,5,10,1,7,-8,-2,-1,2,-1,-2,4,-6,-3,-10,-6,9,-8,-7,9,-1,-9,9,9,-7,-6,-7,4,-1,-2,5,10,9,7,7,2,-10,2,-10,1,-1,-8,-1,-2,9,-3,-3,-8,-1,10,10,-7,-4,-2,-1,-4,1,-1,-4,7,10,-6,3,9,1,-1,3,3,-8,-4,9,-1,1,7,6,9,-1,3,2,-7,1,-6,-7,-6,6,-4,-9,9,7,-7,7,-1,2,-2,5,-7,-9,-5,-4,3,-10,-6,10,-10,1,-9,3,9,-5,-10,-2,1,2,10,-6,9,-8,8,2,4,-5,-2,-5,6,1,2,-4,7,-10,5,9,-3,-9,-6,9,4,7,4,6,3,7,3,10,-1,-6,-6,10,-2,2,-10,2,-7,-2,10,-3,9,10,-3,-1,-9,-1,-2,8,-10,3,-3,5,-3,-1,7,6,3,-8,-6,-1,6,2,10,1,10,1,-1,3,3,5,-9],[-8,8,-1,6,9,-3,-9,3,-5,8,-6,2,10,-5,-7,-9,7,2,-10,-9,10,2,-6,-3,-7,7,-9,3,6,6,2,-10,-3,-6,-9,-3,-6,-10,9,-3,4,2,-9,-5,-2,-10,-8,-3,3,3,-2,-2,-5,-1,6,3,-4,-7,9,-9,3,-5,-10,-10,-8,4,3,-8,-8,3,5,-8,-10,-1,5,9,-3,-8,3,-7,-5,10,-7,-6,-1,3,-4,2,-5,10,7,9,6,-3,7,9,-1,10,1,-6,-5,-6,-9,-3,-5,6,4,4,-5,8,-6,-6,8,-8,-3,1,1,-9,10,-5,-6,-9,-6,-2,-9,-5,-1,-4,8,-10,-6,9,10,8,-9,-5,3,7,4,-10,-4,-9,-7,-4,7,-4,-4,-10,10,-2,-2,5,-10,5,-6,6,2,-2,8,-2,9,10,10,6,10,2,-7,-5,1,-1,-7,-4,-2,-7,-4,7,-6,5,-7,-9,-2,-6,8,-4,-3,6,1,8,8,-6,-4,-6,-10,-10,3,-3,-2,4,4,7,-2,-7,2,-10,3,-3,-9,-1,9,7,3,-8,10,-3,9,-2,-4,8,6,-8,-2,-8,-9,1,10,-3,7,-6,-3,-1,-2,5,-2,3,9,-9,-2,5,5,3,-5,8,8,-10,4,5,-2,1,-3,4,-6,6,-7,1,-6,-7,1,-4,-9,1,-4,1,-7,10,7,-4,6,-10,9,-4,4,-8,7,5,4,9,-2,-4,3,1,-9,-2,2,-7,-1,-10,4,-1,9,7,2,1,-6,-5,10,-10,8,5,2,-5,-5,-10,-10,-8,-5,-2,10,-2,-8,-9,2,1,-9,-4,-8,-6,1,-10,4,-9,4,7,5,-4,8,-5,-1,2,3,-3,-4,-2,4,5,-3,-9,8,-2,-7,7,-10,-8,1,2,-8,2,3,-5,9,5,6,8,-9,-6,1,-2,8,-3,-1,-10,10,-9,8,-4,-5,7,-2,-5,9,9,-7,-10,-2,3,-8,10,-6,4,6,9,6,5,4,3,1,5,3,-2,-10,8,-7,9,1,7,1,9,3,9,3,-3,2,-4,-5,3,1,-5,-2,-4,-8,-10,-9,8,2,1,7,-4,4,-7,-4,6,2,8,6,6,-2,-4,-7,3,10,-7,-10,8,-8,-6,-5,-10,6,8,-9,-7,-3,4,-5,-9,2,4,8,-7,8,9,-8,10,-6,-7,5,7,-4,9,-7,4,6,-3,-1,1,6,3,-8,7,3,8,-7,-7,-6,-2,-5,-6,6,7,2,7,9,-3,4,10,3,7,-3,-2,-1,3,1,-8,9,-2,-5,-2,-2,-1,4,-6,-9,8,7,4,4,-5,9,10,1,10,5,-10,6,5,-3,10,4,-8,9,9,9,8,7,5,-4,-4,8,5,-9,5,-1,-6,2,6,-7,-5,-6,6,1,-1,-8,-3,1,2,10,2,2,-6,5,8,-6,-8,-5,4,-8,10,-10,-4,-1,-2,4,4,-5,4,4,-2,4,1,-6,5,1,-2,8,-3,4,2,3,-6,6,-8,2,1,2,5,-6,-4,6,8,-3,5,-8,7,-2,-2,5,-1,2,4,3,-3]], dtype = "int64")#candidate|3579|(2, 600)|const|int64
call_3578 = relay.TupleGetItem(func_2553_call(relay.reshape(const_3579.astype('int64'), [10, 10, 12]), relay.reshape(const_3579.astype('int64'), [10, 10, 12]), relay.reshape(var_3459.astype('float32'), [195,]), relay.reshape(call_3457.astype('uint8'), [165,]), relay.reshape(const_3463.astype('uint32'), [520,]), ), 0)
call_3580 = relay.TupleGetItem(func_2560_call(relay.reshape(const_3579.astype('int64'), [10, 10, 12]), relay.reshape(const_3579.astype('int64'), [10, 10, 12]), relay.reshape(var_3459.astype('float32'), [195,]), relay.reshape(call_3457.astype('uint8'), [165,]), relay.reshape(const_3463.astype('uint32'), [520,]), ), 0)
output = relay.Tuple([call_3457,const_3458,var_3459,call_3461,const_3463,call_3492,call_3505,call_3518,var_3519,call_3524,call_3543,bop_3556,bop_3559,uop_3566,call_3578,const_3579,])
output2 = relay.Tuple([call_3460,const_3458,var_3459,call_3464,const_3463,call_3493,call_3506,call_3520,var_3519,call_3525,call_3544,bop_3556,bop_3559,uop_3568,call_3580,const_3579,])
func_3589 = relay.Function([var_3459,var_3485,var_3519,], output)
mod['func_3589'] = func_3589
mod = relay.transform.InferType()(mod)
var_3590 = relay.var("var_3590", dtype = "float32", shape = (13, 15))#candidate|3590|(13, 15)|var|float32
var_3591 = relay.var("var_3591", dtype = "float32", shape = (39,))#candidate|3591|(39,)|var|float32
var_3592 = relay.var("var_3592", dtype = "int8", shape = (1260,))#candidate|3592|(1260,)|var|int8
output = func_3589(var_3590,var_3591,var_3592,)
func_3593 = relay.Function([var_3590,var_3591,var_3592,], output)
mutated_mod['func_3593'] = func_3593
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3406_call = mod.get_global_var('func_3406')
func_3408_call = mutated_mod.get_global_var('func_3408')
call_3610 = relay.TupleGetItem(func_3406_call(), 0)
call_3611 = relay.TupleGetItem(func_3408_call(), 0)
func_2384_call = mod.get_global_var('func_2384')
func_2387_call = mutated_mod.get_global_var('func_2387')
const_3615 = relay.const([-7,7,7,-5,-5,-8,-1,-2,1,7,-6,-1,6,4,-5,-2,-7,-10,-8,3,-7,6,-5,4,-6,10,-5,-1,-6,1,-6,-4,1,9,-10,-3,-1,-4,7,4,8,5,4,-4,-3,-4,7,-3,-1,-10,-5,9,-3,-4,-8,4,-4,-3,7,9,-2,8,-10,-10,3,3,4,-4,2,7,-8,-9,-2,-1,10,8,2,5,-6,2,-6,9,-4,9,3,-7,9,-3,8,9,-3,-2,-10,4,2,9,-10,10,-1,1,4,-5,8,3,4,-6,6,2,6,6,-4,8,3,-10,-6,8,-1,-3,1,-4,8,1,-9,4,1,-1,-4,8,6,10,9,4,-1,8,2,8,-4,-6,4,-6,9,-9,-8,-8,5,8,6,-3,-6,-10,6,2,6,3,-7,6,-6,-9,-4,-1,-5,-4,-9,-9,-9,-5,4,5,5,-4,6,-10,-7,-7,8,-9,-6,-5,9,10,-2,4,-2,7,-6,-4,1,5,5,-8,-1,-5,1,10,5,-9,-4,-2,-4,8,8,-4,-5,6,2,-4,-10,-10,10,-10,-1,-1,-3,-3,-10,9,-2,10,2,9,9,-7,-2,-9,-10,-7,-9,5,-1,-9,1,2,10,3,5,4,-3,2,-1,-8,-9,9,3,-2,-6,7,10,1,9,-10,3,-10,-8,-4,3,-7,6,2,1,6,-4,5,2,4,9,8,1,-10,2,7,5,8,9,5,-4,7,5,4,7,1,-3,8,8,-2,-2,-6,2,-10,-5,-2,5,-1,-3,-10,-2,-6,1,-10,4,1,-2,4,-2,6,9,-8,-9,-7,-3,-3,-9,3,-5,-10,6,6,10,-1,-4,10,7,10,-9,10,-3,9,4,-1,-5,-9,-4,-9,4,-7,-9,2,6,-3,8,-9,6,2,-9,8,-5,7,1,4,-7,6,9,-3,-9,-2,-10,9,-6,-4,5,1,1,9,-5,9,-5,10,-2,-1,-1,-7,1,-5,-6,-3,2,-3,3,7,7,2,1,-6,-4,4,-7,6,-9,-6,-1,8,-5,8,-2,-8,3,1,-1,-6,3,2,-5,1,-9,-10,5,4,10,-10,9,1,7,7,-10,-4,-5,6,-3,5,-1,-2,5,-8,10,-7,-5,10,-2,-9,9,7,10,-5,10,4,-7,2,2,6,8,-8,4,7,6,10,1,-1,-3,-3,8,-6,4,6,-8,6,8,2,-4,7,7,5,-5,1,7,-10,-1,-10,4,9,-10,9,8,1,-10,-4,-6,-7,7,8,1,-9,-4,-7,6,-2,2,-6,5,-6,6,4,-9,2,8,-2,-9,3,-9,-4,10,-3,7,5,-9,-7,-9,6,1,-5,-9,9,-7,1,-5,-5,1,7,9,2,-3,4,9,1,9,10,-7,8,-3,2,-6,-5,6,4,6,-5,4,-2,-9,-4,2,-8,5,3,-7,-8,-3,-9,-6,4,9,-10,9,8,6,-8,-6,-7,4,-8,4,-3,10,-4,5,8,-9,8,4,-8,8,9,4,-6,6,9,-2,5,-4,-8,-8,2,-9,-7,-8,3,3,-1,-10,5,-1,-3,9,-6,-8,-2,3,8,-6,-4,2,-10,9,-3,-8,-4,7,5,7,8,6,-6,6,2,8,6,-3,-8,10,3,2,-9,7,4,3,-1,-4,9,-10,-3,9,10,-8,6,10,5,9,10,6,-1,-7,-8,-9,2,10,-8,7,-10,-6,2,-6,-9,-9,-2,-6,1,-5,-6,-10,4,4,-8,1,3,-4,7,-1,6,5,2,1,5,-4,10,9,-3,-5,-3,9,-8,-2,5,-9,-1,1,8,-9,-7,5,-9,9,-7,-5,3,-8,-8,-3,-4,-6,-9,-10,-10,-1,4,-2,10,8,-10,-8,8,-3,6,1,-2,-5,-3,-9,4,10,6,4,5,-5,-7,-9,9,-1,-10,5,9,-5,2,7,-6,7,-9,9,-5,1,7,6,2,1,10,-5,3,-3,-4,5,7,3,5,10,-6,1,-10,9,4,3,-5,7,8,7,2,3,5,5,-10,9,7,1,-7,-7,-2,9,9,-9,7,1,9,-9,10,4,9,5,-5,3,-9,-7,3,10,3,10,-7,-9,3,-9,-2,-2,-8,10,3,7,4,-5,-9,8,4,10,-9,8,-9,-6,1,5,-6,3,6,3,2,-6,3,-3,-4,-10,3,6,4,4,-1,-5,2,8,7,-10,9,2,-4,9,-7,2,7,-10,3,6,-3,-2,-8,4,2,-6,2,3,10,-5,-4,-7,-8,-2,2,-6,1,-9,10,6,-9,-5,10,-8,-3,-9,3,-6,2,-1,-7,9,-7,-9,-4,-9,9,4,3,2,-9,10,9,-3,5,-7,-3,4,-7,-6,-10,-3,-10,-10,3,8,-5,1,6,6,8,-8,10,-2,5,-7,7,-5,9,2,9,3,8,-9,8,6,7,-10,3,5,1,4,3,5,-3,5,4,-8,-4,7,-2,-1,-6,-7,2,-1,-5,-1,2,-4,2,9,-7,-2,-3,4,-3,-6,5,-2,-5,-2,-5,3,-10,6,-4,9,3,-4,-10,4,5,-2,3,-7,-6,1,1,-1,-8,-2,2,-8,5,-1,-2,8,-5,8,-6,-6,-4,-4,-10,-6,9,-3,-9,6,-4,-9,-2,-4,9,4,-6,8,7,5,-4,-8,-8,4,3,-3,6,5,-1,6,-10,-7,-3,8,-6,9,-5,3,-1,3,8,3,10,-4,7,-2,4,-7,4,-7,10,10,-7,9,3,-4,-7,-5,-6,-9,2,-2,-1,-1,4,-7,8,-10,-2,2,10,-6,-4,-4,-1,5,-6,-8,-6,4,-1,-4,10,-3,-2,8,3,-9,-7,9,-7,9,-1,-10,8,-9,-7,-7,9,-1,-4,-3,5,8,-6,-7,-3,-6,-5,-3,2,-1,9,8,-5,10,-8,-10,4,2,-7,3,-5,-6,7,3,-5,8,2,1,5,-9,-4,-3,-9,10,-3,-5,2,-1,3,8,-8,-10,-4,-8,-4,-9,7,9,-6,1,-10,2,-10,-10,-8,-10,7,-9,-5,-10,-7,7,1,-10,-3,-10,9,-4,6,-3,4,-3,5,2,10,-7,10,-8,10,-2,3,5,-6,3,6,-6,-1,-3,-10,6,-6,-4,-7,-1,-4,-9,5,-1,4,2,-9,-2,7,7,-10,-9,6,-5,8,1,9,1,5,-6,5,10,-8,6,-8,5,6,4,-9,-6,-7,1,8,-1,-3,3,-6,-3,7,-2,-4,1,-2,3,-6,-10,-5,-8,-4,-5,7,-6,3,9,-1,-5,9,7,2,3,-7,10,4,5,8,-5,-10,-2,-2,-4,-4,-10,-8,-6,-4,-8,-2,5,8,-5,1], dtype = "int8")#candidate|3615|(1260,)|const|int8
call_3614 = relay.TupleGetItem(func_2384_call(relay.reshape(const_3615.astype('int8'), [9, 14, 10]), relay.reshape(const_3615.astype('int8'), [9, 14, 10]), ), 4)
call_3616 = relay.TupleGetItem(func_2387_call(relay.reshape(const_3615.astype('int8'), [9, 14, 10]), relay.reshape(const_3615.astype('int8'), [9, 14, 10]), ), 4)
uop_3626 = relay.atanh(call_3614.astype('float64')) # shape=(5, 11, 3)
uop_3628 = relay.atanh(call_3616.astype('float64')) # shape=(5, 11, 3)
output = relay.Tuple([call_3610,const_3615,uop_3626,])
output2 = relay.Tuple([call_3611,const_3615,uop_3628,])
func_3644 = relay.Function([], output)
mod['func_3644'] = func_3644
mod = relay.transform.InferType()(mod)
mutated_mod['func_3644'] = func_3644
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3644_call = mutated_mod.get_global_var('func_3644')
call_3645 = func_3644_call()
output = call_3645
func_3646 = relay.Function([], output)
mutated_mod['func_3646'] = func_3646
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3651 = relay.const([[[1,3,6],[6,-10,-4],[-2,6,10],[6,6,-6],[3,-4,-10],[-2,8,7],[-7,-10,3],[-8,2,3],[-2,6,10],[10,5,2],[1,-8,-1],[-3,-7,3],[-8,7,7],[-1,-8,-6]],[[9,4,10],[-9,9,-9],[2,7,6],[1,3,3],[-7,8,9],[6,9,-2],[-3,7,-10],[-2,-10,-4],[-3,10,3],[7,-8,-5],[-10,-5,-8],[-8,-7,7],[-1,10,10],[-8,8,-8]],[[-1,-9,1],[-6,-5,-9],[-7,8,-2],[-1,-3,-4],[4,-5,-2],[-3,9,4],[8,-10,10],[-7,-4,10],[9,-1,-2],[-7,-9,-1],[9,-7,-8],[8,-10,8],[-8,10,-10],[-10,-4,3]],[[-5,4,-5],[6,9,-2],[-6,-2,1],[-8,-4,2],[9,-5,4],[8,-8,-5],[7,5,-7],[-4,7,9],[5,6,-6],[-5,2,-9],[-8,6,-1],[-9,4,-6],[-2,2,-6],[9,10,1]],[[6,2,-6],[6,10,-9],[5,-1,5],[8,10,9],[2,-7,3],[-8,-4,9],[-3,-1,9],[6,-2,-2],[6,6,-1],[4,-3,8],[9,-7,8],[2,-2,-4],[6,4,-9],[-5,-6,1]],[[-8,-3,-7],[6,-6,-8],[10,-8,2],[-3,4,-6],[-4,7,6],[7,4,2],[2,-7,3],[-5,-5,7],[-4,8,8],[10,9,-1],[-5,6,10],[-1,7,3],[3,-7,10],[8,2,4]],[[1,3,-1],[-2,5,-8],[-7,-9,6],[8,-1,-10],[7,-7,-5],[3,4,8],[10,-4,8],[-10,-2,1],[3,1,-2],[-3,10,-2],[-10,3,-8],[-1,-10,3],[-8,5,2],[-10,-3,6]]], dtype = "uint32")#candidate|3651|(7, 14, 3)|const|uint32
var_3652 = relay.var("var_3652", dtype = "uint32", shape = (7, 14, 3))#candidate|3652|(7, 14, 3)|var|uint32
bop_3653 = relay.maximum(const_3651.astype('uint32'), relay.reshape(var_3652.astype('uint32'), relay.shape_of(const_3651))) # shape=(7, 14, 3)
output = relay.Tuple([bop_3653,])
output2 = relay.Tuple([bop_3653,])
func_3675 = relay.Function([var_3652,], output)
mod['func_3675'] = func_3675
mod = relay.transform.InferType()(mod)
var_3676 = relay.var("var_3676", dtype = "uint32", shape = (7, 14, 3))#candidate|3676|(7, 14, 3)|var|uint32
output = func_3675(var_3676)
func_3677 = relay.Function([var_3676], output)
mutated_mod['func_3677'] = func_3677
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3705 = relay.var("var_3705", dtype = "float32", shape = (12, 5, 7))#candidate|3705|(12, 5, 7)|var|float32
uop_3706 = relay.sqrt(var_3705.astype('float32')) # shape=(12, 5, 7)
output = uop_3706
output2 = uop_3706
func_3712 = relay.Function([var_3705,], output)
mod['func_3712'] = func_3712
mod = relay.transform.InferType()(mod)
var_3713 = relay.var("var_3713", dtype = "float32", shape = (12, 5, 7))#candidate|3713|(12, 5, 7)|var|float32
output = func_3712(var_3713)
func_3714 = relay.Function([var_3713], output)
mutated_mod['func_3714'] = func_3714
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3406_call = mod.get_global_var('func_3406')
func_3408_call = mutated_mod.get_global_var('func_3408')
call_3721 = relay.TupleGetItem(func_3406_call(), 0)
call_3722 = relay.TupleGetItem(func_3408_call(), 0)
output = call_3721
output2 = call_3722
func_3723 = relay.Function([], output)
mod['func_3723'] = func_3723
mod = relay.transform.InferType()(mod)
mutated_mod['func_3723'] = func_3723
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3723_call = mutated_mod.get_global_var('func_3723')
call_3724 = func_3723_call()
output = call_3724
func_3725 = relay.Function([], output)
mutated_mod['func_3725'] = func_3725
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3406_call = mod.get_global_var('func_3406')
func_3408_call = mutated_mod.get_global_var('func_3408')
call_3726 = relay.TupleGetItem(func_3406_call(), 2)
call_3727 = relay.TupleGetItem(func_3408_call(), 2)
func_2959_call = mod.get_global_var('func_2959')
func_2963_call = mutated_mod.get_global_var('func_2963')
var_3737 = relay.var("var_3737", dtype = "float32", shape = (480,))#candidate|3737|(480,)|var|float32
call_3736 = func_2959_call(relay.reshape(var_3737.astype('float32'), [3, 16, 10]), relay.reshape(var_3737.astype('float32'), [3, 16, 10]), )
call_3738 = func_2959_call(relay.reshape(var_3737.astype('float32'), [3, 16, 10]), relay.reshape(var_3737.astype('float32'), [3, 16, 10]), )
output = relay.Tuple([call_3726,call_3736,var_3737,])
output2 = relay.Tuple([call_3727,call_3738,var_3737,])
func_3744 = relay.Function([var_3737,], output)
mod['func_3744'] = func_3744
mod = relay.transform.InferType()(mod)
mutated_mod['func_3744'] = func_3744
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3745 = relay.var("var_3745", dtype = "float32", shape = (480,))#candidate|3745|(480,)|var|float32
func_3744_call = mutated_mod.get_global_var('func_3744')
call_3746 = func_3744_call(var_3745)
output = call_3746
func_3747 = relay.Function([var_3745], output)
mutated_mod['func_3747'] = func_3747
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2775_call = mod.get_global_var('func_2775')
func_2776_call = mutated_mod.get_global_var('func_2776')
call_3768 = func_2775_call()
call_3769 = func_2775_call()
output = relay.Tuple([call_3768,])
output2 = relay.Tuple([call_3769,])
func_3776 = relay.Function([], output)
mod['func_3776'] = func_3776
mod = relay.transform.InferType()(mod)
output = func_3776()
func_3777 = relay.Function([], output)
mutated_mod['func_3777'] = func_3777
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3723_call = mod.get_global_var('func_3723')
func_3725_call = mutated_mod.get_global_var('func_3725')
call_3782 = func_3723_call()
call_3783 = func_3723_call()
output = call_3782
output2 = call_3783
func_3786 = relay.Function([], output)
mod['func_3786'] = func_3786
mod = relay.transform.InferType()(mod)
output = func_3786()
func_3787 = relay.Function([], output)
mutated_mod['func_3787'] = func_3787
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3817 = relay.var("var_3817", dtype = "float64", shape = (8, 15, 4))#candidate|3817|(8, 15, 4)|var|float64
var_3818 = relay.var("var_3818", dtype = "float64", shape = (8, 15, 4))#candidate|3818|(8, 15, 4)|var|float64
bop_3819 = relay.floor_mod(var_3817.astype('float64'), relay.reshape(var_3818.astype('float64'), relay.shape_of(var_3817))) # shape=(8, 15, 4)
output = relay.Tuple([bop_3819,])
output2 = relay.Tuple([bop_3819,])
func_3832 = relay.Function([var_3817,var_3818,], output)
mod['func_3832'] = func_3832
mod = relay.transform.InferType()(mod)
var_3833 = relay.var("var_3833", dtype = "float64", shape = (8, 15, 4))#candidate|3833|(8, 15, 4)|var|float64
var_3834 = relay.var("var_3834", dtype = "float64", shape = (8, 15, 4))#candidate|3834|(8, 15, 4)|var|float64
output = func_3832(var_3833,var_3834,)
func_3835 = relay.Function([var_3833,var_3834,], output)
mutated_mod['func_3835'] = func_3835
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2786_call = mod.get_global_var('func_2786')
func_2787_call = mutated_mod.get_global_var('func_2787')
call_3862 = func_2786_call()
call_3863 = func_2786_call()
var_3866 = relay.var("var_3866", dtype = "float64", shape = (8, 7, 11))#candidate|3866|(8, 7, 11)|var|float64
bop_3867 = relay.add(call_3862.astype('uint16'), var_3866.astype('uint16')) # shape=(8, 7, 11)
bop_3870 = relay.add(call_3863.astype('uint16'), var_3866.astype('uint16')) # shape=(8, 7, 11)
output = bop_3867
output2 = bop_3870
func_3871 = relay.Function([var_3866,], output)
mod['func_3871'] = func_3871
mod = relay.transform.InferType()(mod)
mutated_mod['func_3871'] = func_3871
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3872 = relay.var("var_3872", dtype = "float64", shape = (8, 7, 11))#candidate|3872|(8, 7, 11)|var|float64
func_3871_call = mutated_mod.get_global_var('func_3871')
call_3873 = func_3871_call(var_3872)
output = call_3873
func_3874 = relay.Function([var_3872], output)
mutated_mod['func_3874'] = func_3874
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2775_call = mod.get_global_var('func_2775')
func_2776_call = mutated_mod.get_global_var('func_2776')
call_3947 = func_2775_call()
call_3948 = func_2775_call()
output = call_3947
output2 = call_3948
func_3986 = relay.Function([], output)
mod['func_3986'] = func_3986
mod = relay.transform.InferType()(mod)
mutated_mod['func_3986'] = func_3986
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3986_call = mutated_mod.get_global_var('func_3986')
call_3987 = func_3986_call()
output = call_3987
func_3988 = relay.Function([], output)
mutated_mod['func_3988'] = func_3988
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3185_call = mod.get_global_var('func_3185')
func_3187_call = mutated_mod.get_global_var('func_3187')
call_4037 = relay.TupleGetItem(func_3185_call(), 1)
call_4038 = relay.TupleGetItem(func_3187_call(), 1)
func_3052_call = mod.get_global_var('func_3052')
func_3054_call = mutated_mod.get_global_var('func_3054')
const_4049 = relay.const([[-9,-1,-4,-10,5,2,-9,6,4,-4,1,-7,7,5,-8,-3,-10,9,-9,4,5,8,4,8,5,7,8,-2,8,6,2,2,-4,-5,-9,9,-7,-2,2,-1,9,-6,-1,-2,8,4,7,-4,-6,6,-8,-1,-3,-7,2,5,-5,-10,9,-5,2,-9,-5,2,1,-7,2,-5,-3,-1,10,8,-4,2,-2,2,-8,5,-5,-5,4,7,-1,10,-3,-9,-6,8,5,5,1,-1,2,2,-2,6,-10,1,-3,5,1,-3,-3,9,3,5,-5,10,-2,-7,-9,2,5,-1,6,6,-2,-6,-10,-10,3,6,2,7,10,10,-4,1,8,10,7,-3,5,-3,6,-1,-1,-9,4,-6,-8,6,-1,-3,-8,-4,9,6,-9,-2,-4,-6,-9,-7,10,7,-2,-2,-7,-5,-10,-2,6,-4,8,-10,8,-9,-10,9,-10,8,7,-6,-8,3,-9,6,4,-2,7,-7,7,-3,-10,7,-7,3,-8,2,1,-2,10,-8,10,-9,10,-2,-1,6,-7,3,-1,-10,7,-2,7,9,-4,6,-6,10,10,-5,-7,2,5,10,2,-2,1,-7,2,10,2,-9,-8,4,-3,8,-1,5,-6,1,-2,4,9,-6,7,6,-1,-10,5,8,5,7,-6,2,-5,7,4,-5,-5,5,-6,-3,-5,7,-7,8,-2,-7,-7,-8,10,4,-1,8,-9,-9,-3,3,7,9,-6,7,-4,-4,-3,-7,-2,-8,9,10,-10,-2,-3,-2,6,8,10,8,2,-7,6,8,5,8,4,2,7,7,-1,-4,-10,-7,-8,4,-6,-4,3,8,-10,1,-6,-7,9,5,-5,-6,-1,-3,7,8,-8,-6,4,10,2,-7,-6,-1,10,-4,-5,8,-3,-5,-10,-6,5,1,7,5,-3,-8,-9,-4,5,4,8,5,4,-6,5,5,5,3,-9,1,-1,1,-8,-8,2,-2,-3,6,9,6,-3,5,-8,9,-5,9,9,-7,-6,-9,-7,1,-8,-9,-8,-10,-5,8,-1,1,7,-5,2,5,-7,8,-7,-3,-7,-3,-7,-5,-8,-8,-10,-9,10,5,-4,-2,7,4,-9,9,3,-1,5,-5,-9,-3,3,-5,-6,5,-3,2,6,-3,4,3,4,-8,-9,1,5,6,6,10,-4,-1,-3,6,-8,4,-1,-1,-2,3,5,1,7,-7,1,-4,-4,1,-9,-7,-7,3,10,4,-5,5,-2,10,-6,-4,-8,-1,5,-10,-2,-1,9,-1,-8,-3,4,4,4,5,5,-8,-8,-5,-2,7,-3,-5,2,1,10,6,-2,10,-8,-8,6,6,-5,-9,8,-1,4,-3,-1,-10,-8,7,-9,-8,5,10,9,7,8,1,4,7,9,8,-6,-2,-5,6,5,-10,9,-4,-7,4,-9,-1,8,-10,-10,8,-7,4,-9,-7,-6,7,-9,4,1,9,-5,-10,-8,2,1,6,10,9,10,-6,-2,-10,5,5,3,6,4,-1,-8,-10,2,-6,-6,4,10,-10,6,-1,5,-6,4,8,-8,2,-3,7,-10,10,10,10,5,-2,2,-1,-1,-7,7,-3,-6,4,-7,5,-8,3,-10,-7,3,-5,3,1,-2,-9,4,7,8,7,4,3,8,7,-9,2,-2,-8,-6,-8,-7,-7,-2,-3,6,4,-4,10,-4,-2,3,-4,3,-1,3,7,-8,-3,1,-9,-5,-6,3,-3,-5,10,8,-5,8,-2,-5,10,-3,4,-8,10,-9,2,-4,-8,9,9,2,10,9,-8,9,10,1,-8,10,-2,-4,-10,1,-9,6,8,1,-5,-10,-9,-2,-4,6,10,10,4,6,4,1,-8,1,-4,-5,-5,3,5,4,8,1,-5,-10,7,-2,-5,-4,2,8,10,-3,10,10,1,7,5,7,-1,8,7,10,-6,5,-2,2,-8,-8,2,6,-3,5,10,-7,-3,10,-8,1,7,-10,1,-2,8,9,-7,7,5,7,8,-6,-8,10,-7,9,-9,6,2,10,7,4,-4,3,5,-7,-3,-3,-1,8,-5,3,-6,5,6,-2,5,-8,-8,-10,-10,-7,2,-5,-4,1,10,5,-5,-5,-8,-4,4,-3,3,-5,-10,8,-2,-3,6,8,-9,1,3,-3,-3,-5,-10,-9,-10,8,7,-2,-10,7,-10,-1,6,-1,10,-2,-2,1,-3,-5,-5,5,-10,2,3,-8,-2,9,3,-1,-3,-7,9,-9,8,-9,6,8,-2,-7,-10,5,-6,-2,-6,1,5,6,-5,8,8,8,-1,1,-7,-8,5,-10,10,9,6,-5,9,-7,-6,-10,2,8,4,-7,-2,-9,8,8,-5,4,-9,4,-10,-10,6,1,-8,1,2,7,3,-1,-7,-9,-5,6,1,2,9,-8,-2,4,1,5,3,5,10,-7,4,9,-8,-5,-5,10,9,-10,10,4,-9,-3,3,-8,-6,7,-2,3,-3,1,-5,3,-3,-6,5,4,-9,6,-7,-2,-1,4,9,-7,4,-2,3,3,-8,-8,-9,9,-1,1,-9,-10,-5,-8,-2,1,-5,6,-8,-3,-10,-9,5,-10,-3,4,-5,6,9,-6,-9,6,10,9,1,-4,4,1,-3,6,9,10,4,-5,10,-3,-8,10,-1,6,10,4,-5,-3,-3,6,9,-7,4,6,-5,2,10,-1,-2,4,9,7,-2,-4,-9,8,-8,1,-8,5,-7,-7,10,7,-7,7,-10,9,5,6,6,4,-10,-6,-3,4,-10,9,2,-6,-7,-4,7,9,-1,-8,1,-10,8,-3,-7,-4,-9,10,7,10,-9,2,-2,-8,8,-7,-7,-3,-3,7,-3,-8,2,-6,6,-4,2,8,9,-6,-9,7,2,-2,-6,4,10,4,1,-2,7,1,3,5,3,-8,-6,10,-5,-2,1,-2,9,-4,5,-9,-3,-4,-8,-10,-10,-7,5,6,-2,-3,-4,6,1,8,-8,-8,5,-7,1,-8,-8,-9,4,5,4,9,-4,-5,-6,1,-8,-5,1,8,1,-4,10,-4,-9,-10,-8,2,5,7,8,5,6,-9,-4,-10,-4,6,8,-8,-10,9,-7,-9,8,-4,-1,4,-1,-6,-1,-1,-3,-1,-8,7,7,-3,-8,-9,-8,5,-1,9,-2,-8,3,10,-6,-6,-9,-2,8,-1,10,5,2,-7,8,7,-1,5,-4,-2,5,5,-9,-8,-4,5,10,10,-9,7,5,9,8,-1,-8,-3,1,7,-6,-8,6,4,3,-10,-3,2,-10,3,5,-2,-9,6,-4,-9,-9,-1,-10,3,-9,8,9,-9,10,-8,-9,10,7,7,10,-2,-3,-4,-9,6,9,9,5,8,3]], dtype = "int8")#candidate|4049|(1, 1260)|const|int8
call_4048 = relay.TupleGetItem(func_3052_call(relay.reshape(const_4049.astype('int8'), [1260,])), 1)
call_4050 = relay.TupleGetItem(func_3054_call(relay.reshape(const_4049.astype('int8'), [1260,])), 1)
output = relay.Tuple([call_4037,call_4048,const_4049,])
output2 = relay.Tuple([call_4038,call_4050,const_4049,])
func_4060 = relay.Function([], output)
mod['func_4060'] = func_4060
mod = relay.transform.InferType()(mod)
output = func_4060()
func_4061 = relay.Function([], output)
mutated_mod['func_4061'] = func_4061
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2786_call = mod.get_global_var('func_2786')
func_2787_call = mutated_mod.get_global_var('func_2787')
call_4113 = func_2786_call()
call_4114 = func_2786_call()
func_38_call = mod.get_global_var('func_38')
func_41_call = mutated_mod.get_global_var('func_41')
const_4134 = relay.const([6,-2,1,-4,1,7,-10,-9,-1,6,8,6,8,1,-1,10,2,10,-4,-2,-2,-6,-10,-1,-8,8,10,-1,-1,-8,5,-10,10,2,4,-10,3,-9,1,-7,-10,8,-8,8,-1,2,6,5,-3,9,-1,4,-5,6,-4,4,7,-3,10,4,2,7,1,-4,-7,4,2,-1,-2,2,1,9,7,-2,-7,-8,4,7,-7,10,5,-1,1,-5,-10,-10,-2,-8,-4,8,7,-10,-1,-4,1,-2,9,5,-9,4,7,2,-2,-2,1,8,8,-6,-7,7,6,4,7,7,2,-5,3,2,-8,-2,4,6,9,1,2,-4,1,6,-9,-6,-2,2,10,3,-8,-6,8,-4,-4,1,-7,6,4,8,5,-6,4,-4,-2,2,-5,-2,-10,8,-5,10,7,-10,8,-4,-1,-1,8,9,6], dtype = "uint8")#candidate|4134|(165,)|const|uint8
call_4133 = func_38_call(relay.reshape(const_4134.astype('uint8'), [5, 11, 3]), relay.reshape(const_4134.astype('uint8'), [5, 11, 3]), )
call_4135 = func_38_call(relay.reshape(const_4134.astype('uint8'), [5, 11, 3]), relay.reshape(const_4134.astype('uint8'), [5, 11, 3]), )
func_217_call = mod.get_global_var('func_217')
func_222_call = mutated_mod.get_global_var('func_222')
const_4138 = relay.const([[0.424027],[-1.862305],[5.066151],[-5.275531],[-4.690365],[-9.189682],[-6.307157],[8.943269],[3.277660],[-7.005784],[-9.891263],[-1.073576],[-6.926628],[-0.209282],[-6.015766],[-0.212571],[-1.260313],[8.422912],[-3.486357],[1.468239],[3.040439],[6.950683],[-6.390666],[4.187897],[-1.683670],[4.665510],[1.998751],[5.630855],[9.599509],[3.759849],[1.598684],[-3.646623],[-7.266788],[8.636853],[6.722168],[2.447340],[8.440384],[9.173802],[-9.076846]], dtype = "float32")#candidate|4138|(39, 1)|const|float32
const_4139 = relay.const([[-5.870791,3.046226,-7.463531,7.429581,5.732242],[-9.305486,-5.719851,-2.458080,-5.113558,-7.980648],[3.732404,5.281608,-0.482176,-4.221743,-5.724005],[7.311370,-3.615440,-6.357289,8.053996,-7.222504],[5.696552,-5.584804,-3.173156,-1.905752,6.678417],[-9.779874,-9.620186,-7.460555,6.662397,4.005752],[-2.496744,-7.552679,-3.887187,-8.792794,2.397907],[-6.252560,0.196248,-9.647340,9.958731,-1.069052],[6.255181,2.160503,7.812144,0.658239,-1.494611],[-7.271185,5.789520,9.435709,5.463823,3.708139],[-0.897715,-2.907526,-7.973112,-8.894732,8.816576],[-6.927186,3.897285,-3.235591,7.220006,0.058124],[-3.906238,1.379778,5.749336,3.287189,-2.739879],[3.852550,-8.685286,-9.876574,-0.237628,8.161504],[7.169988,-5.534867,5.874291,4.522532,-3.174538],[9.214410,-0.605132,-2.460272,8.308868,0.864718],[-5.364091,7.407449,-5.037038,-8.834463,-0.425593],[-9.724971,1.320941,-9.270866,6.023814,-6.181437],[0.756246,-1.008491,-2.095079,6.847072,1.037836],[7.916040,6.339485,-6.901612,-7.553760,-5.920587],[-7.439294,-3.020321,1.743152,5.341302,4.349840],[2.334862,1.739241,-1.453263,-6.620527,8.100702],[-2.683691,-0.587968,0.518878,1.144603,7.874012],[-3.996913,-5.523922,2.872786,-3.254049,-8.982757],[-3.017662,-9.152496,-2.677725,3.147179,-8.169586],[-5.073980,6.198842,-8.686264,3.737724,-4.133736],[9.593428,2.505252,-8.326741,5.924757,1.149679],[-5.468019,4.789253,0.294460,2.792559,1.402123],[3.765048,7.014884,-5.982190,-0.984604,2.584890],[-0.395201,3.748329,9.783509,-5.168030,-6.194979],[-4.713100,-8.471976,4.760407,6.933329,-9.989945],[-4.798448,-1.052216,2.713755,5.629409,1.177451],[-4.964837,1.481339,0.475783,0.249983,-1.579398],[1.502142,-5.187755,-6.381445,9.433738,4.353837],[-5.405688,6.498068,8.091205,2.244865,-6.678954],[4.061162,-2.613424,7.350778,5.267543,-8.588964],[-3.419782,2.680565,0.342706,7.724376,0.436806],[-4.348108,-7.415565,2.764197,-5.688697,4.366538],[0.145828,-6.462953,4.750173,1.856262,-3.720508]], dtype = "float32")#candidate|4139|(39, 5)|const|float32
const_4140 = relay.const([[-3,9,-8,-9],[3,-1,4,-10],[-5,4,-3,-9],[6,-8,7,3],[8,2,-2,10],[-4,6,-10,7],[-7,1,-5,-7],[-10,3,4,9],[-10,9,-1,-7],[10,5,2,-9],[-2,-8,-1,-9],[-1,-8,8,6],[-8,10,-4,8],[-10,5,-4,8],[-5,4,3,-6],[-6,1,4,4],[2,3,10,-1],[-2,-2,-3,4],[-9,5,-4,8],[7,-5,-7,-5],[4,-7,9,7],[-8,-10,1,10],[-2,4,8,-5],[-1,8,-1,9],[10,10,-5,3],[-5,-4,-6,-8],[1,-6,6,-6],[4,-5,8,8],[1,9,4,9],[6,-8,2,-3],[-8,4,2,10],[-5,-3,-10,-4],[1,-7,7,4],[1,-6,-8,6],[9,1,-9,9],[8,8,3,9],[7,-8,-1,-8],[4,5,-2,-1],[8,-2,5,-2],[3,2,-2,-9],[6,3,-10,2],[-4,8,-6,7],[-3,3,-2,10],[5,-1,-5,-7],[-8,2,3,3],[-9,-1,10,-2],[-7,-10,2,-4],[3,5,8,3],[-6,3,9,5],[7,-4,6,-1],[-3,-3,10,-1],[3,-5,1,8],[-4,-7,6,-10],[9,-1,2,-9],[-10,7,10,-7],[3,5,-9,-1],[3,-6,9,-2],[-2,3,-5,-6],[-5,-7,10,-7],[7,8,4,-10],[7,-3,-2,5],[10,-7,-2,-9],[7,-1,1,1],[-9,-3,10,7],[-7,-2,-9,-2],[-4,-1,-1,3],[-6,4,-10,3],[-8,2,10,-3],[-4,-8,3,2],[-1,4,-1,10],[1,5,3,-5],[-6,8,10,7],[-10,7,-8,-1],[-1,-1,-3,-2],[-8,-10,-8,-3],[1,2,-5,-5],[5,6,-10,2],[-5,-4,7,5],[-4,8,9,6],[-5,1,-9,-2],[-8,-8,9,-10],[5,3,3,-7],[4,-8,-9,2],[5,1,-10,10],[5,-6,10,-9],[3,8,1,-2],[-3,5,-7,5],[2,7,10,10],[7,-2,-4,-3],[2,-5,-9,5],[9,5,10,-9],[-5,-2,4,-2],[10,8,-4,2],[-2,-8,-6,-4],[-6,-5,6,-9],[-2,10,3,-9],[-8,8,7,10],[9,-4,-3,-1],[5,7,2,6],[7,10,-8,4],[5,7,-1,3],[7,6,6,-10],[5,-4,-3,1],[-4,9,-9,7],[-4,5,-3,7],[8,9,3,4],[-7,5,9,-10],[-6,-7,2,6],[-2,1,-1,-5],[-2,-2,-6,-2],[-5,4,2,8],[-3,-2,3,-10],[1,10,2,3],[-4,10,1,4],[1,-3,6,-1],[-8,-5,-3,6],[8,5,5,-7],[-3,8,9,4],[-4,2,-10,-8],[-8,-9,-7,4],[-5,7,-7,9],[-1,7,-3,-9],[10,6,6,8],[6,-4,6,-8],[7,3,2,-7],[10,-3,7,-9],[-5,8,-8,7],[6,7,-9,5],[2,9,9,-5],[10,-10,-1,-5]], dtype = "uint32")#candidate|4140|(130, 4)|const|uint32
call_4137 = relay.TupleGetItem(func_217_call(relay.reshape(const_4138.astype('float32'), [1, 3, 13]), relay.reshape(const_4139.astype('float32'), [5, 3, 13]), relay.reshape(call_4133.astype('uint8'), [165,]), relay.reshape(const_4140.astype('uint32'), [520,]), ), 3)
call_4141 = relay.TupleGetItem(func_222_call(relay.reshape(const_4138.astype('float32'), [1, 3, 13]), relay.reshape(const_4139.astype('float32'), [5, 3, 13]), relay.reshape(call_4133.astype('uint8'), [165,]), relay.reshape(const_4140.astype('uint32'), [520,]), ), 3)
const_4146 = relay.const([[-6,-9,-5,-6],[-2,7,4,-8],[1,10,-7,4],[-4,8,-10,-2],[-3,7,-1,-10],[10,1,-5,8],[6,-7,10,3],[-2,5,-7,-8],[7,10,-10,1],[10,-3,-10,-8],[-10,9,6,3],[-2,10,7,-2],[5,10,-2,5],[-4,-4,3,3],[9,-3,-4,5],[-9,7,-4,8],[-1,-5,1,5],[-10,10,-5,7],[4,10,-10,-6],[-3,3,-4,-9],[1,-9,3,10],[5,9,4,3],[-5,10,10,-4],[-10,10,-10,-2],[2,7,-5,1],[8,9,3,2],[5,-5,9,-5],[8,5,-4,-1],[8,2,-5,-5],[-10,-7,-6,-4],[2,-5,-1,-9],[8,7,3,-8],[7,6,10,7],[10,6,-6,7],[10,-8,-4,7],[3,4,3,-6],[-2,4,-8,4],[6,3,10,9],[-4,8,6,-2],[3,-4,9,-9],[-4,3,-4,7],[-8,-2,-10,8],[-10,4,4,-6],[3,5,9,3],[7,-5,-4,2],[5,-2,-7,-1],[-7,-6,10,-9],[-1,6,-8,-5],[-4,7,5,2],[3,4,-4,-10],[9,-1,-7,3],[5,-10,-8,-8],[-5,2,2,7],[8,9,6,3],[5,-6,6,-10],[9,-4,5,9],[6,-8,-5,-8],[-8,-7,4,8],[7,2,3,4],[2,-1,1,6],[3,-8,1,-3],[2,-1,-3,-8],[5,4,1,-2],[-10,-9,4,10],[9,6,-5,9],[1,4,1,6],[1,5,-10,7],[1,10,-1,-3],[-10,2,-7,3],[-1,4,8,-9],[2,2,-1,1],[-5,9,3,8],[-10,1,1,7],[-10,5,3,-8],[8,-6,-9,2],[1,-9,3,10],[-8,-1,2,3],[3,1,-2,10],[6,-8,4,-8],[1,-9,-3,-8],[-9,-1,8,-4],[-10,6,1,1],[-5,-4,-8,6],[-10,-4,6,-5],[10,8,8,9],[-5,1,5,5],[10,9,-4,7],[-9,-4,-10,10],[4,10,-9,1],[5,2,-3,-10],[-8,1,5,3],[-9,-1,-7,9],[-8,-3,-9,1],[-6,4,9,4],[-4,-9,-5,2],[-9,-2,-3,-10],[-1,8,-7,4],[3,5,-3,-9],[-6,-3,-1,4],[8,-8,1,2],[1,4,10,-3],[5,4,7,-4],[-4,-3,-3,-6],[-4,-2,4,-9],[-5,-5,10,-7],[-6,-6,6,5],[8,-4,-6,2],[9,-7,7,10],[-10,6,-2,8],[3,2,-1,-9],[6,9,-8,-2],[-4,-9,-6,4],[5,5,-2,7],[4,-5,6,-5],[1,-4,7,-5],[-4,4,3,-5],[8,8,-2,7],[4,-4,-10,-5],[-5,8,-5,-2],[7,-1,4,3],[-6,5,-5,8],[6,2,-1,7],[-5,5,-9,-1],[3,-9,9,-10],[-2,-5,-7,6],[4,-9,2,10],[-2,9,2,-8],[-3,-1,-8,7],[5,-6,-6,-8],[-8,-7,5,-10]], dtype = "uint32")#candidate|4146|(130, 4)|const|uint32
bop_4147 = relay.logical_xor(const_4140.astype('int16'), relay.reshape(const_4146.astype('int16'), relay.shape_of(const_4140))) # shape=(130, 4)
bop_4163 = relay.greater_equal(const_4140.astype('bool'), relay.reshape(call_4137.astype('bool'), relay.shape_of(const_4140))) # shape=(130, 4)
bop_4166 = relay.greater_equal(const_4140.astype('bool'), relay.reshape(call_4141.astype('bool'), relay.shape_of(const_4140))) # shape=(130, 4)
output = relay.Tuple([call_4113,call_4133,const_4134,const_4138,const_4139,bop_4147,bop_4163,])
output2 = relay.Tuple([call_4114,call_4135,const_4134,const_4138,const_4139,bop_4147,bop_4166,])
func_4167 = relay.Function([], output)
mod['func_4167'] = func_4167
mod = relay.transform.InferType()(mod)
mutated_mod['func_4167'] = func_4167
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4167_call = mutated_mod.get_global_var('func_4167')
call_4168 = func_4167_call()
output = call_4168
func_4169 = relay.Function([], output)
mutated_mod['func_4169'] = func_4169
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3776_call = mod.get_global_var('func_3776')
func_3777_call = mutated_mod.get_global_var('func_3777')
call_4273 = relay.TupleGetItem(func_3776_call(), 0)
call_4274 = relay.TupleGetItem(func_3777_call(), 0)
output = relay.Tuple([call_4273,])
output2 = relay.Tuple([call_4274,])
func_4276 = relay.Function([], output)
mod['func_4276'] = func_4276
mod = relay.transform.InferType()(mod)
output = func_4276()
func_4277 = relay.Function([], output)
mutated_mod['func_4277'] = func_4277
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2908_call = mod.get_global_var('func_2908')
func_2909_call = mutated_mod.get_global_var('func_2909')
call_4281 = func_2908_call()
call_4282 = func_2908_call()
output = call_4281
output2 = call_4282
func_4299 = relay.Function([], output)
mod['func_4299'] = func_4299
mod = relay.transform.InferType()(mod)
mutated_mod['func_4299'] = func_4299
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4299_call = mutated_mod.get_global_var('func_4299')
call_4300 = func_4299_call()
output = call_4300
func_4301 = relay.Function([], output)
mutated_mod['func_4301'] = func_4301
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3986_call = mod.get_global_var('func_3986')
func_3988_call = mutated_mod.get_global_var('func_3988')
call_4317 = func_3986_call()
call_4318 = func_3986_call()
output = call_4317
output2 = call_4318
func_4323 = relay.Function([], output)
mod['func_4323'] = func_4323
mod = relay.transform.InferType()(mod)
mutated_mod['func_4323'] = func_4323
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4323_call = mutated_mod.get_global_var('func_4323')
call_4324 = func_4323_call()
output = call_4324
func_4325 = relay.Function([], output)
mutated_mod['func_4325'] = func_4325
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4276_call = mod.get_global_var('func_4276')
func_4277_call = mutated_mod.get_global_var('func_4277')
call_4337 = relay.TupleGetItem(func_4276_call(), 0)
call_4338 = relay.TupleGetItem(func_4277_call(), 0)
output = call_4337
output2 = call_4338
func_4341 = relay.Function([], output)
mod['func_4341'] = func_4341
mod = relay.transform.InferType()(mod)
output = func_4341()
func_4342 = relay.Function([], output)
mutated_mod['func_4342'] = func_4342
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4060_call = mod.get_global_var('func_4060')
func_4061_call = mutated_mod.get_global_var('func_4061')
call_4388 = relay.TupleGetItem(func_4060_call(), 1)
call_4389 = relay.TupleGetItem(func_4061_call(), 1)
func_38_call = mod.get_global_var('func_38')
func_41_call = mutated_mod.get_global_var('func_41')
const_4391 = relay.const([4,7,2,-10,7,7,-9,-6,-9,-3,-5,10,-7,8,10,6,-1,-9,-2,-10,-8,5,-5,8,-9,8,7,-7,9,-10,1,6,7,-6,2,-2,-10,-10,1,9,-10,4,-7,4,6,-6,10,-10,-5,9,-10,-10,9,7,1,-8,5,10,4,-7,-10,7,2,8,-4,7,-10,-6,10,-7,-9,1,10,5,7,-4,2,-8,9,-6,-7,-8,-1,-3,8,-1,8,1,5,-10,8,1,5,6,9,10,-4,-10,3,-5,7,9,8,-1,-6,3,-7,3,6,-8,3,1,-6,-2,6,1,-3,-9,10,2,-3,9,-1,-3,-6,-4,-1,-6,-5,8,-6,-5,9,10,3,7,-8,7,-1,-8,3,5,6,9,-10,3,7,-6,1,8,-7,2,-1,7,-9,-10,9,-4,-7,-6,-1,-4,8,-5,-6], dtype = "uint8")#candidate|4391|(165,)|const|uint8
call_4390 = func_38_call(relay.reshape(const_4391.astype('uint8'), [5, 11, 3]), relay.reshape(const_4391.astype('uint8'), [5, 11, 3]), )
call_4392 = func_38_call(relay.reshape(const_4391.astype('uint8'), [5, 11, 3]), relay.reshape(const_4391.astype('uint8'), [5, 11, 3]), )
var_4396 = relay.var("var_4396", dtype = "float64", shape = (3, 420))#candidate|4396|(3, 420)|var|float64
bop_4397 = relay.subtract(call_4388.astype('uint32'), relay.reshape(var_4396.astype('uint32'), relay.shape_of(call_4388))) # shape=(3, 420)
bop_4400 = relay.subtract(call_4389.astype('uint32'), relay.reshape(var_4396.astype('uint32'), relay.shape_of(call_4389))) # shape=(3, 420)
output = relay.Tuple([call_4390,const_4391,bop_4397,])
output2 = relay.Tuple([call_4392,const_4391,bop_4400,])
func_4409 = relay.Function([var_4396,], output)
mod['func_4409'] = func_4409
mod = relay.transform.InferType()(mod)
mutated_mod['func_4409'] = func_4409
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4410 = relay.var("var_4410", dtype = "float64", shape = (3, 420))#candidate|4410|(3, 420)|var|float64
func_4409_call = mutated_mod.get_global_var('func_4409')
call_4411 = func_4409_call(var_4410)
output = call_4411
func_4412 = relay.Function([var_4410], output)
mutated_mod['func_4412'] = func_4412
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4439 = relay.var("var_4439", dtype = "float64", shape = (4, 3, 14))#candidate|4439|(4, 3, 14)|var|float64
uop_4440 = relay.rsqrt(var_4439.astype('float64')) # shape=(4, 3, 14)
uop_4451 = relay.atan(var_4439.astype('float32')) # shape=(4, 3, 14)
output = relay.Tuple([uop_4440,uop_4451,])
output2 = relay.Tuple([uop_4440,uop_4451,])
func_4458 = relay.Function([var_4439,], output)
mod['func_4458'] = func_4458
mod = relay.transform.InferType()(mod)
mutated_mod['func_4458'] = func_4458
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4459 = relay.var("var_4459", dtype = "float64", shape = (4, 3, 14))#candidate|4459|(4, 3, 14)|var|float64
func_4458_call = mutated_mod.get_global_var('func_4458')
call_4460 = func_4458_call(var_4459)
output = call_4460
func_4461 = relay.Function([var_4459], output)
mutated_mod['func_4461'] = func_4461
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3723_call = mod.get_global_var('func_3723')
func_3725_call = mutated_mod.get_global_var('func_3725')
call_4494 = func_3723_call()
call_4495 = func_3723_call()
func_3003_call = mod.get_global_var('func_3003')
func_3007_call = mutated_mod.get_global_var('func_3007')
const_4508 = relay.const(-6, dtype = "uint16")#candidate|4508|()|const|uint16
var_4509 = relay.var("var_4509", dtype = "uint16", shape = (165,))#candidate|4509|(165,)|var|uint16
call_4507 = relay.TupleGetItem(func_3003_call(relay.reshape(const_4508.astype('uint16'), []), relay.reshape(var_4509.astype('uint16'), [11, 1, 15]), ), 0)
call_4510 = relay.TupleGetItem(func_3007_call(relay.reshape(const_4508.astype('uint16'), []), relay.reshape(var_4509.astype('uint16'), [11, 1, 15]), ), 0)
var_4519 = relay.var("var_4519", dtype = "float64", shape = (16, 7, 11))#candidate|4519|(16, 7, 11)|var|float64
bop_4520 = relay.greater_equal(call_4494.astype('bool'), var_4519.astype('bool')) # shape=(16, 7, 11)
bop_4523 = relay.greater_equal(call_4495.astype('bool'), var_4519.astype('bool')) # shape=(16, 7, 11)
var_4543 = relay.var("var_4543", dtype = "float64", shape = (10, 7, 11))#candidate|4543|(10, 7, 11)|var|float64
bop_4544 = relay.logical_or(call_4494.astype('bool'), var_4543.astype('bool')) # shape=(10, 7, 11)
bop_4547 = relay.logical_or(call_4495.astype('bool'), var_4543.astype('bool')) # shape=(10, 7, 11)
func_3776_call = mod.get_global_var('func_3776')
func_3777_call = mutated_mod.get_global_var('func_3777')
call_4548 = relay.TupleGetItem(func_3776_call(), 0)
call_4549 = relay.TupleGetItem(func_3777_call(), 0)
output = relay.Tuple([call_4507,const_4508,var_4509,bop_4520,bop_4544,call_4548,])
output2 = relay.Tuple([call_4510,const_4508,var_4509,bop_4523,bop_4547,call_4549,])
func_4564 = relay.Function([var_4509,var_4519,var_4543,], output)
mod['func_4564'] = func_4564
mod = relay.transform.InferType()(mod)
mutated_mod['func_4564'] = func_4564
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4564_call = mutated_mod.get_global_var('func_4564')
var_4566 = relay.var("var_4566", dtype = "uint16", shape = (165,))#candidate|4566|(165,)|var|uint16
var_4567 = relay.var("var_4567", dtype = "float64", shape = (16, 7, 11))#candidate|4567|(16, 7, 11)|var|float64
var_4568 = relay.var("var_4568", dtype = "float64", shape = (10, 7, 11))#candidate|4568|(10, 7, 11)|var|float64
call_4565 = func_4564_call(var_4566,var_4567,var_4568,)
output = call_4565
func_4569 = relay.Function([var_4566,var_4567,var_4568,], output)
mutated_mod['func_4569'] = func_4569
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2786_call = mod.get_global_var('func_2786')
func_2787_call = mutated_mod.get_global_var('func_2787')
call_4645 = func_2786_call()
call_4646 = func_2786_call()
output = call_4645
output2 = call_4646
func_4656 = relay.Function([], output)
mod['func_4656'] = func_4656
mod = relay.transform.InferType()(mod)
mutated_mod['func_4656'] = func_4656
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4656_call = mutated_mod.get_global_var('func_4656')
call_4657 = func_4656_call()
output = call_4657
func_4658 = relay.Function([], output)
mutated_mod['func_4658'] = func_4658
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4323_call = mod.get_global_var('func_4323')
func_4325_call = mutated_mod.get_global_var('func_4325')
call_4670 = func_4323_call()
call_4671 = func_4323_call()
output = call_4670
output2 = call_4671
func_4672 = relay.Function([], output)
mod['func_4672'] = func_4672
mod = relay.transform.InferType()(mod)
mutated_mod['func_4672'] = func_4672
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4672_call = mutated_mod.get_global_var('func_4672')
call_4673 = func_4672_call()
output = call_4673
func_4674 = relay.Function([], output)
mutated_mod['func_4674'] = func_4674
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4276_call = mod.get_global_var('func_4276')
func_4277_call = mutated_mod.get_global_var('func_4277')
call_4703 = relay.TupleGetItem(func_4276_call(), 0)
call_4704 = relay.TupleGetItem(func_4277_call(), 0)
var_4722 = relay.var("var_4722", dtype = "float64", shape = (11, 7, 11))#candidate|4722|(11, 7, 11)|var|float64
bop_4723 = relay.bitwise_xor(call_4703.astype('uint32'), var_4722.astype('uint32')) # shape=(11, 7, 11)
bop_4726 = relay.bitwise_xor(call_4704.astype('uint32'), var_4722.astype('uint32')) # shape=(11, 7, 11)
func_2775_call = mod.get_global_var('func_2775')
func_2776_call = mutated_mod.get_global_var('func_2776')
call_4732 = func_2775_call()
call_4733 = func_2775_call()
func_3832_call = mod.get_global_var('func_3832')
func_3835_call = mutated_mod.get_global_var('func_3835')
var_4741 = relay.var("var_4741", dtype = "float64", shape = (480,))#candidate|4741|(480,)|var|float64
call_4740 = relay.TupleGetItem(func_3832_call(relay.reshape(var_4741.astype('float64'), [8, 15, 4]), relay.reshape(var_4741.astype('float64'), [8, 15, 4]), ), 0)
call_4742 = relay.TupleGetItem(func_3835_call(relay.reshape(var_4741.astype('float64'), [8, 15, 4]), relay.reshape(var_4741.astype('float64'), [8, 15, 4]), ), 0)
func_3406_call = mod.get_global_var('func_3406')
func_3408_call = mutated_mod.get_global_var('func_3408')
call_4768 = relay.TupleGetItem(func_3406_call(), 0)
call_4769 = relay.TupleGetItem(func_3408_call(), 0)
output = relay.Tuple([bop_4723,call_4732,call_4740,var_4741,call_4768,])
output2 = relay.Tuple([bop_4726,call_4733,call_4742,var_4741,call_4769,])
func_4770 = relay.Function([var_4722,var_4741,], output)
mod['func_4770'] = func_4770
mod = relay.transform.InferType()(mod)
var_4771 = relay.var("var_4771", dtype = "float64", shape = (11, 7, 11))#candidate|4771|(11, 7, 11)|var|float64
var_4772 = relay.var("var_4772", dtype = "float64", shape = (480,))#candidate|4772|(480,)|var|float64
output = func_4770(var_4771,var_4772,)
func_4773 = relay.Function([var_4771,var_4772,], output)
mutated_mod['func_4773'] = func_4773
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4299_call = mod.get_global_var('func_4299')
func_4301_call = mutated_mod.get_global_var('func_4301')
call_4781 = func_4299_call()
call_4782 = func_4299_call()
func_3052_call = mod.get_global_var('func_3052')
func_3054_call = mutated_mod.get_global_var('func_3054')
const_4812 = relay.const([5,-9,6,5,4,-1,7,9,10,-4,10,8,2,-6,-10,-6,-9,-10,-8,-4,-9,5,8,9,1,-3,-3,-10,-9,-9,5,6,4,-8,2,-3,8,-7,2,-6,-9,4,10,-5,10,9,-3,9,10,-8,-9,3,10,4,6,-3,-9,-7,10,-9,9,-6,-3,-8,2,3,-8,9,-6,10,-4,-7,1,-1,9,1,-8,-8,4,3,-1,-7,3,-9,-10,-1,3,7,-5,2,10,9,2,10,3,-2,-10,-5,7,-1,4,-1,-3,8,-9,-9,-6,7,-8,-6,10,7,-10,-4,8,-6,-9,-9,7,10,10,5,10,5,-10,-8,10,-2,-10,9,-4,-2,2,-7,9,-5,9,-4,-5,-6,2,5,1,-4,4,1,-6,2,4,-7,7,1,-5,4,6,4,3,-9,7,-5,7,-10,9,-1,1,8,-3,1,-6,7,-4,7,8,-2,-1,9,-5,1,1,8,1,10,-7,-9,6,2,-6,-7,-8,1,-10,-7,9,10,9,2,8,-1,10,5,-7,8,-9,-8,-6,6,9,-10,1,-6,1,-8,9,1,1,-7,-6,-2,10,2,10,1,-3,-6,2,-5,-2,-4,-4,2,3,-6,6,2,9,-1,3,-6,2,9,8,1,-6,-2,-9,8,6,9,-1,8,-8,-8,-1,-5,8,1,9,7,4,-8,4,5,1,1,-8,1,-8,-6,5,3,7,-1,-5,-6,8,4,-1,3,6,3,3,-9,-4,1,6,5,10,-2,4,6,1,3,2,3,10,-9,1,-5,2,-6,-9,-2,7,-6,1,1,5,-3,8,4,-1,10,-10,6,-10,-2,3,10,9,9,1,1,3,-2,9,8,8,3,4,1,4,-3,-9,-5,10,-8,3,8,5,-7,-5,-6,7,-2,-1,-3,8,9,10,6,9,2,3,-8,-9,5,-1,6,2,-9,10,-7,-9,-6,2,10,5,-3,-1,1,5,-3,-6,-6,-6,1,-8,-4,7,-5,-3,-10,8,-1,4,10,-5,-10,1,-9,-3,-5,-1,8,-1,8,-8,4,-4,5,-6,-1,-8,-4,-9,10,-7,2,3,7,3,-10,6,8,-1,-1,-10,8,3,8,6,5,2,3,-9,1,-6,6,-5,5,9,-2,6,6,-3,5,-2,-5,10,-2,-8,5,-4,-7,5,-6,8,1,8,-7,-4,2,-1,-2,5,-1,9,-9,7,3,-10,6,6,1,-9,-9,-1,8,-8,-4,-6,-7,3,7,2,1,10,-9,9,2,-10,-10,2,2,10,-6,-3,3,-9,-5,2,-4,-5,1,-4,-3,-4,3,3,-7,-1,1,-5,9,5,-6,10,-9,2,-3,3,-1,1,4,-9,-6,5,6,2,-6,7,-3,-4,4,-4,-2,-2,-7,-7,8,-3,8,-4,10,10,-2,-1,-6,9,1,-6,2,8,-5,-10,10,-7,-3,-3,-6,10,9,-3,6,-6,7,4,4,-7,-4,1,-2,4,-9,8,-9,-5,2,5,2,-9,-3,-8,-2,5,-4,1,5,1,2,3,-10,10,-8,3,6,9,-2,8,6,3,-2,-7,-2,2,10,5,-2,3,10,10,-8,7,9,-6,-1,-4,5,-9,-10,9,6,9,9,-10,1,-8,10,-1,-3,4,7,-8,-9,-7,9,8,-10,-3,-2,1,-2,10,-4,-3,-7,-2,4,7,8,2,-10,1,7,2,-5,-1,-9,1,4,-10,-8,7,4,-5,8,8,-6,-9,-2,-4,-3,6,-8,5,8,4,2,7,-7,-6,10,4,-4,-2,-3,5,-1,-10,-7,-2,-2,2,2,-10,4,4,2,1,-3,2,9,-4,6,1,8,-10,-2,6,2,2,4,1,4,-1,4,4,9,-6,-9,10,-10,8,3,-5,10,2,-5,-9,6,7,1,5,-7,-7,-6,4,7,10,-5,-4,4,10,-10,8,9,6,-5,2,-10,8,5,-3,-3,-2,-8,7,2,-9,8,-8,3,9,-3,-9,9,10,-9,-4,-6,3,3,-5,-9,9,2,-4,-9,2,-5,6,10,6,1,-2,-8,-10,-6,10,-9,-3,-6,9,-2,-9,4,9,-3,3,-8,-2,1,9,-7,5,8,1,6,1,-1,-5,8,-8,10,7,-6,6,1,7,4,7,1,-8,-8,-5,7,-3,-3,-8,-2,-2,-3,6,-6,3,-6,-4,8,5,10,6,-9,2,2,8,-4,2,1,-3,-2,8,7,-6,5,3,-3,-3,-8,6,-7,-3,7,10,3,6,8,-5,8,-9,3,10,-1,-8,-10,-10,-1,9,10,5,-3,-1,6,7,7,1,-10,-8,4,9,-2,-2,-3,10,-2,-9,7,5,7,-1,10,6,3,-10,-2,2,1,7,-4,-9,4,-1,-9,-6,10,1,-1,1,-3,-10,3,8,-5,8,-10,6,-5,4,-5,8,-10,-7,-8,-5,-1,-5,-9,8,6,5,-5,1,-10,-3,7,-10,2,10,-6,-10,-3,1,8,8,-9,1,6,1,-6,10,-6,2,8,8,8,10,5,-5,-3,4,-8,4,-6,1,-1,-7,1,-7,-3,2,-6,-5,4,-1,-3,-8,1,-4,-1,9,5,-1,7,-7,4,6,-2,1,2,-4,9,5,-6,-7,3,-8,-3,-7,6,5,-1,-2,-3,-10,4,-10,-6,5,4,-8,9,7,7,-4,-8,-5,-9,4,9,-7,-6,8,-1,-5,-4,-6,-10,-6,-9,-10,-9,-5,-3,2,-5,-6,7,-4,-6,5,-1,-4,-6,-6,1,1,4,-10,-9,8,3,-4,8,9,4,-8,7,-3,-2,-9,8,5,-9,8,9,-9,-2,1,10,5,-3,10,5,-4,-4,-2,-4,6,-3,-9,-10,3,3,3,-5,9,1,10,3,-5,-7,-3,5,2,4,10,-2,-8,-8,-8,9,-3,-7,8,-6,-8,1,4,1,-4,9,-8,9,-6,7,10,-3,6,-5,-1,9,-4,3,8,3,-6,8,-1,-10,-5,-1,2,-9,6,-3,3,-6,-6,-4,-2,8,7,-2,4,5,10,6,2,10,-7,4,-9,-8,9,9,9,9,-5,4,6,1,-7,-10,2,8,-7,1,3,10,3,5,-7,6,7,5,1,-1,-3,-9,3,4,8,-7,-5,4,6,-8,4,-9,5,-4,8,-7,8,-5,1,-10,-5,1,4,7,-5,-5,2,9,5,-6,-1,-5,-6,10,10,-10,7,-4,-9,10,-10,4,-8,9,-10,-8,7,10,6,5,-9,10,6,-6,-6,10,1,8,-9,-5,-6,-10,6,8,-9,9,-6,6,4,-9,-10,8,3,1,7,-8,8,-5,7,8,4,6,8,-4], dtype = "int8")#candidate|4812|(1260,)|const|int8
call_4811 = relay.TupleGetItem(func_3052_call(relay.reshape(const_4812.astype('int8'), [1260,])), 1)
call_4813 = relay.TupleGetItem(func_3054_call(relay.reshape(const_4812.astype('int8'), [1260,])), 1)
output = relay.Tuple([call_4781,call_4811,const_4812,])
output2 = relay.Tuple([call_4782,call_4813,const_4812,])
func_4815 = relay.Function([], output)
mod['func_4815'] = func_4815
mod = relay.transform.InferType()(mod)
mutated_mod['func_4815'] = func_4815
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4815_call = mutated_mod.get_global_var('func_4815')
call_4816 = func_4815_call()
output = call_4816
func_4817 = relay.Function([], output)
mutated_mod['func_4817'] = func_4817
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4276_call = mod.get_global_var('func_4276')
func_4277_call = mutated_mod.get_global_var('func_4277')
call_4855 = relay.TupleGetItem(func_4276_call(), 0)
call_4856 = relay.TupleGetItem(func_4277_call(), 0)
output = call_4855
output2 = call_4856
func_4871 = relay.Function([], output)
mod['func_4871'] = func_4871
mod = relay.transform.InferType()(mod)
mutated_mod['func_4871'] = func_4871
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4871_call = mutated_mod.get_global_var('func_4871')
call_4872 = func_4871_call()
output = call_4872
func_4873 = relay.Function([], output)
mutated_mod['func_4873'] = func_4873
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4060_call = mod.get_global_var('func_4060')
func_4061_call = mutated_mod.get_global_var('func_4061')
call_4920 = relay.TupleGetItem(func_4060_call(), 0)
call_4921 = relay.TupleGetItem(func_4061_call(), 0)
func_3675_call = mod.get_global_var('func_3675')
func_3677_call = mutated_mod.get_global_var('func_3677')
const_4929 = relay.const([-7,3,9,-6,-5,10,-5,-7,-4,9,4,6,4,-9,4,1,-7,7,-8,-10,8,-10,2,5,6,4,9,-1,-3,-9,-6,-6,5,-10,8,5,-10,6,-4,8,7,2,-3,1,3,2,-8,-2,-4,5,4,8,7,-6,7,3,-7,3,5,-9,-4,10,1,-5,6,-9,-2,-4,2,-1,5,4,8,3,1,-4,3,7,5,3,3,-4,8,7,-8,-1,-2,-7,2,6,2,-8,-3,2,-6,1,-6,8,3,-6,-4,5,1,8,4,7,-3,2,10,4,-9,-5,10,-9,-9,-3,1,10,-2,7,2,1,-9,-1,-8,-4,10,2,-5,2,-9,8,6,3,-8,-3,4,-10,-8,-3,6,5,-9,7,-1,9,-7,-9,-6,-3,3,-9,-10,4,-9,-8,6,-4,-2,10,-3,5,-7,5,7,2,-1,-8,9,3,-9,-5,-4,-10,2,-4,-9,5,3,1,-5,9,3,1,9,2,-4,-1,-7,-7,-10,-6,-1,-5,10,-2,7,4,-1,4,6,-6,-6,-9,7,-4,10,-6,-10,3,6,-4,9,5,-3,-9,-8,9,3,6,7,-9,-9,-6,-7,-6,6,-8,-10,-6,3,-1,-2,2,8,7,10,-2,10,-6,9,-10,6,4,10,-8,-7,3,-7,5,4,3,-8,3,-7,5,-2,2,2,1,-8,-4,-6,-4,-3,-2,-3,-3,2,-10,-4,4,1,-2,-4,4,2,6,-6,-4,-1,8,-1,-6,-8,3,-1,-5,-7,-7,2,2,9,3], dtype = "uint32")#candidate|4929|(294,)|const|uint32
call_4928 = relay.TupleGetItem(func_3675_call(relay.reshape(const_4929.astype('uint32'), [7, 14, 3])), 0)
call_4930 = relay.TupleGetItem(func_3677_call(relay.reshape(const_4929.astype('uint32'), [7, 14, 3])), 0)
output = relay.Tuple([call_4920,call_4928,const_4929,])
output2 = relay.Tuple([call_4921,call_4930,const_4929,])
func_4933 = relay.Function([], output)
mod['func_4933'] = func_4933
mod = relay.transform.InferType()(mod)
output = func_4933()
func_4934 = relay.Function([], output)
mutated_mod['func_4934'] = func_4934
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4323_call = mod.get_global_var('func_4323')
func_4325_call = mutated_mod.get_global_var('func_4325')
call_4949 = func_4323_call()
call_4950 = func_4323_call()
var_4952 = relay.var("var_4952", dtype = "float64", shape = (6, 7, 11))#candidate|4952|(6, 7, 11)|var|float64
bop_4953 = relay.maximum(call_4949.astype('int16'), var_4952.astype('int16')) # shape=(6, 7, 11)
bop_4956 = relay.maximum(call_4950.astype('int16'), var_4952.astype('int16')) # shape=(6, 7, 11)
output = relay.Tuple([bop_4953,])
output2 = relay.Tuple([bop_4956,])
func_4959 = relay.Function([var_4952,], output)
mod['func_4959'] = func_4959
mod = relay.transform.InferType()(mod)
var_4960 = relay.var("var_4960", dtype = "float64", shape = (6, 7, 11))#candidate|4960|(6, 7, 11)|var|float64
output = func_4959(var_4960)
func_4961 = relay.Function([var_4960], output)
mutated_mod['func_4961'] = func_4961
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3986_call = mod.get_global_var('func_3986')
func_3988_call = mutated_mod.get_global_var('func_3988')
call_4966 = func_3986_call()
call_4967 = func_3986_call()
output = relay.Tuple([call_4966,])
output2 = relay.Tuple([call_4967,])
func_4968 = relay.Function([], output)
mod['func_4968'] = func_4968
mod = relay.transform.InferType()(mod)
output = func_4968()
func_4969 = relay.Function([], output)
mutated_mod['func_4969'] = func_4969
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4988 = relay.var("var_4988", dtype = "float64", shape = (6, 3, 3))#candidate|4988|(6, 3, 3)|var|float64
var_4989 = relay.var("var_4989", dtype = "float64", shape = (6, 3, 3))#candidate|4989|(6, 3, 3)|var|float64
bop_4990 = relay.mod(var_4988.astype('float64'), relay.reshape(var_4989.astype('float64'), relay.shape_of(var_4988))) # shape=(6, 3, 3)
output = bop_4990
output2 = bop_4990
func_4993 = relay.Function([var_4988,var_4989,], output)
mod['func_4993'] = func_4993
mod = relay.transform.InferType()(mod)
var_4994 = relay.var("var_4994", dtype = "float64", shape = (6, 3, 3))#candidate|4994|(6, 3, 3)|var|float64
var_4995 = relay.var("var_4995", dtype = "float64", shape = (6, 3, 3))#candidate|4995|(6, 3, 3)|var|float64
output = func_4993(var_4994,var_4995,)
func_4996 = relay.Function([var_4994,var_4995,], output)
mutated_mod['func_4996'] = func_4996
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3185_call = mod.get_global_var('func_3185')
func_3187_call = mutated_mod.get_global_var('func_3187')
call_5003 = relay.TupleGetItem(func_3185_call(), 1)
call_5004 = relay.TupleGetItem(func_3187_call(), 1)
output = relay.Tuple([call_5003,])
output2 = relay.Tuple([call_5004,])
func_5005 = relay.Function([], output)
mod['func_5005'] = func_5005
mod = relay.transform.InferType()(mod)
mutated_mod['func_5005'] = func_5005
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5005_call = mutated_mod.get_global_var('func_5005')
call_5006 = func_5005_call()
output = call_5006
func_5007 = relay.Function([], output)
mutated_mod['func_5007'] = func_5007
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4933_call = mod.get_global_var('func_4933')
func_4934_call = mutated_mod.get_global_var('func_4934')
call_5008 = relay.TupleGetItem(func_4933_call(), 2)
call_5009 = relay.TupleGetItem(func_4934_call(), 2)
output = relay.Tuple([call_5008,])
output2 = relay.Tuple([call_5009,])
func_5014 = relay.Function([], output)
mod['func_5014'] = func_5014
mod = relay.transform.InferType()(mod)
mutated_mod['func_5014'] = func_5014
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5014_call = mutated_mod.get_global_var('func_5014')
call_5015 = func_5014_call()
output = call_5015
func_5016 = relay.Function([], output)
mutated_mod['func_5016'] = func_5016
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4871_call = mod.get_global_var('func_4871')
func_4873_call = mutated_mod.get_global_var('func_4873')
call_5023 = func_4871_call()
call_5024 = func_4871_call()
func_3744_call = mod.get_global_var('func_3744')
func_3747_call = mutated_mod.get_global_var('func_3747')
const_5028 = relay.const([-4.272611,-3.534627,-3.250546,-6.915457,4.815768,-3.708967,-3.466709,-1.297634,-4.146684,6.795180,5.097356,2.790153,1.017428,-3.156987,3.474780,5.798440,-4.304870,6.196996,3.586538,7.789997,5.020084,4.266561,9.044484,-7.704065,1.059327,8.722763,-5.212701,-0.509305,3.243089,-4.842972,6.055900,7.164534,-0.837005,8.755295,-7.063957,-7.733193,-2.926231,4.947793,6.456718,-6.567924,3.045004,6.385822,-7.652188,0.722960,3.188387,9.259421,5.911003,-7.815617,5.572594,-7.101274,1.205890,2.649141,-1.342810,5.690824,1.203112,9.422888,8.957333,-8.786761,-8.377527,2.781408,-5.497087,-3.111813,6.837683,2.492554,-6.856008,-0.097337,-3.006616,-4.322494,-2.791273,-1.799354,1.011200,-3.764787,1.033330,-9.064237,6.917247,3.185017,-5.558750,6.860108,-3.037912,3.587066,-0.103529,-1.370066,3.049119,-3.054507,-2.897960,3.870891,-4.582139,-2.772790,2.897378,4.047988,7.907405,-9.066796,-0.723891,8.922387,-2.442751,-9.420244,5.855762,6.723917,5.835679,-8.178712,-1.163082,8.046469,-5.571880,-1.395687,-6.902495,-0.546413,-3.616412,-9.345910,-0.443649,-9.771225,-6.255385,-4.357813,3.908994,-2.759594,6.273079,2.430033,6.789256,-9.839332,-3.516638,5.149705,-8.063570,-6.338858,-3.539127,0.565755,0.241511,6.144266,-1.277980,6.668006,0.487377,-6.564405,-3.859755,-0.077179,-5.770799,9.038708,-9.144041,-2.257297,-0.037847,2.057465,6.544745,-0.876676,-0.594370,-8.767604,0.544816,9.505515,0.845347,8.146851,1.230313,5.716195,-4.710226,-9.082843,9.235921,0.280028,-1.626406,-3.523560,3.347065,-4.631238,-3.923395,3.289463,-4.799703,-5.512274,-3.024938,6.300475,-7.502019,-4.400842,-3.642090,7.928228,5.944335,4.611788,9.315168,1.495173,-4.384235,3.420644,-8.554967,-2.080554,9.278751,-0.542193,-9.988222,2.197050,0.457943,6.231431,-1.518945,1.267051,9.414383,4.583042,1.176778,-1.941578,-7.008889,-1.798631,-6.195874,0.447828,-6.495201,2.831372,-1.705686,6.243939,-0.256571,6.082152,8.396208,-9.364939,4.946403,0.557634,-5.782453,2.072470,6.881262,5.804665,-8.348020,2.254810,4.312264,-1.893415,6.948634,6.046816,-5.725916,7.909066,1.497824,8.953122,5.408128,0.231806,-8.666178,2.248120,9.389948,2.696174,8.121090,-5.933884,9.283776,-1.983774,-1.367084,4.419098,-4.356679,-5.040016,-6.374006,8.376272,-0.983643,-1.141257,5.488254,2.479155,-9.777819,-5.901585,5.201979,-8.409133,2.978309,-6.813362,-5.916779,1.392526,-1.045956,4.122985,9.877986,-4.495602,2.658439,-7.215321,-4.309413,1.498739,-9.254537,3.165561,-9.990680,-5.333776,-3.468349,2.400043,-8.296623,-5.309643,-6.285857,-7.602438,-0.628175,-8.181632,5.292768,-5.403574,-4.571812,-0.537442,5.527480,-7.366532,-0.809517,-0.520694,0.617535,9.381863,-0.704904,-9.051347,9.113612,-7.330956,-7.151714,-3.358981,2.555703,6.203208,-5.858594,-4.126015,3.899581,-8.509677,7.775332,4.288059,-4.711399,0.535225,-7.295743,-2.663716,-4.972402,6.491739,2.321011,-6.737215,-1.139390,-8.731012,8.425286,-1.725508,1.937248,-9.290990,4.408703,-5.600626,6.625483,-1.492681,5.220412,7.601645,8.938548,-5.358398,-6.493133,1.931112,7.021518,-6.606899,-2.127968,1.449707,0.121174,4.186851,8.214146,-8.685531,1.477992,-7.611020,0.230862,-8.501649,-0.206583,4.798337,3.053167,4.441964,-9.491315,9.601083,1.606062,2.286699,9.598249,2.613357,-6.956344,1.647070,7.621628,-1.738662,7.379224,1.431346,-0.398499,8.535677,-0.305194,-6.936573,-7.623683,2.571544,-3.261789,-6.314028,5.784917,9.394329,6.057855,1.470421,-2.659844,-0.716710,-9.945882,-9.204415,-6.682482,-7.795372,-6.718507,-4.651707,0.353837,-9.504358,-6.771906,2.048506,7.354729,3.265370,8.233955,5.341628,-8.616496,4.081313,4.274121,0.270295,8.166277,-0.746421,-0.820377,-5.690935,4.181984,-1.751164,2.395807,1.629176,-7.021599,-0.274026,-4.895086,4.504957,8.657976,1.847108,-0.576732,-2.357144,5.792804,-9.340989,3.116987,5.554271,8.838687,-2.092496,6.777564,6.985215,-9.805697,8.837005,6.227460,-0.676872,8.552499,-8.409831,-2.120733,-8.463430,9.262114,-5.701935,0.452621,6.880380,7.689936,-6.572072,-5.062467,-4.110780,6.443209,9.573665,-8.202217,0.850211,3.165766,-7.028909,-3.522476,5.894251,4.320158,2.015812,0.114722,4.874826,-8.663564,2.662523,-0.896989,-0.727034,0.552170,-2.271698,4.608365,-8.341232,5.069271,-5.889871,0.671374,-9.475606,0.981165,8.734537,-8.616159,2.651476,-0.637338,0.811255,-1.106776,-6.126467,0.635243,-6.177342,-9.214690,-0.330093,9.961864,-8.414763,-2.637264,7.916071,-0.879963,4.047889,0.496158,5.073848,4.316719,-0.753091,-5.649717,-1.792798,-2.897268,-1.011473,3.466156,-7.855254,-3.576757,6.523465,6.024535,-2.784532,8.205889,9.725659,4.538505,0.172135,5.533094,-9.137935,-7.370386,-6.466516,7.224631,-0.211697,9.683759,7.810546,3.712666,-9.256351], dtype = "float32")#candidate|5028|(480,)|const|float32
call_5027 = relay.TupleGetItem(func_3744_call(relay.reshape(const_5028.astype('float32'), [480,])), 2)
call_5029 = relay.TupleGetItem(func_3747_call(relay.reshape(const_5028.astype('float32'), [480,])), 2)
output = relay.Tuple([call_5023,call_5027,const_5028,])
output2 = relay.Tuple([call_5024,call_5029,const_5028,])
func_5037 = relay.Function([], output)
mod['func_5037'] = func_5037
mod = relay.transform.InferType()(mod)
mutated_mod['func_5037'] = func_5037
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5037_call = mutated_mod.get_global_var('func_5037')
call_5038 = func_5037_call()
output = call_5038
func_5039 = relay.Function([], output)
mutated_mod['func_5039'] = func_5039
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4656_call = mod.get_global_var('func_4656')
func_4658_call = mutated_mod.get_global_var('func_4658')
call_5070 = func_4656_call()
call_5071 = func_4656_call()
func_4993_call = mod.get_global_var('func_4993')
func_4996_call = mutated_mod.get_global_var('func_4996')
var_5076 = relay.var("var_5076", dtype = "float64", shape = (54,))#candidate|5076|(54,)|var|float64
call_5075 = func_4993_call(relay.reshape(var_5076.astype('float64'), [6, 3, 3]), relay.reshape(var_5076.astype('float64'), [6, 3, 3]), )
call_5077 = func_4993_call(relay.reshape(var_5076.astype('float64'), [6, 3, 3]), relay.reshape(var_5076.astype('float64'), [6, 3, 3]), )
output = relay.Tuple([call_5070,call_5075,var_5076,])
output2 = relay.Tuple([call_5071,call_5077,var_5076,])
func_5090 = relay.Function([var_5076,], output)
mod['func_5090'] = func_5090
mod = relay.transform.InferType()(mod)
var_5091 = relay.var("var_5091", dtype = "float64", shape = (54,))#candidate|5091|(54,)|var|float64
output = func_5090(var_5091)
func_5092 = relay.Function([var_5091], output)
mutated_mod['func_5092'] = func_5092
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4656_call = mod.get_global_var('func_4656')
func_4658_call = mutated_mod.get_global_var('func_4658')
call_5145 = func_4656_call()
call_5146 = func_4656_call()
output = relay.Tuple([call_5145,])
output2 = relay.Tuple([call_5146,])
func_5155 = relay.Function([], output)
mod['func_5155'] = func_5155
mod = relay.transform.InferType()(mod)
mutated_mod['func_5155'] = func_5155
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5155_call = mutated_mod.get_global_var('func_5155')
call_5156 = func_5155_call()
output = call_5156
func_5157 = relay.Function([], output)
mutated_mod['func_5157'] = func_5157
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5294 = relay.var("var_5294", dtype = "float64", shape = (8, 7, 13))#candidate|5294|(8, 7, 13)|var|float64
uop_5295 = relay.log(var_5294.astype('float64')) # shape=(8, 7, 13)
output = uop_5295
output2 = uop_5295
func_5301 = relay.Function([var_5294,], output)
mod['func_5301'] = func_5301
mod = relay.transform.InferType()(mod)
var_5302 = relay.var("var_5302", dtype = "float64", shape = (8, 7, 13))#candidate|5302|(8, 7, 13)|var|float64
output = func_5301(var_5302)
func_5303 = relay.Function([var_5302], output)
mutated_mod['func_5303'] = func_5303
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3723_call = mod.get_global_var('func_3723')
func_3725_call = mutated_mod.get_global_var('func_3725')
call_5319 = func_3723_call()
call_5320 = func_3723_call()
output = call_5319
output2 = call_5320
func_5321 = relay.Function([], output)
mod['func_5321'] = func_5321
mod = relay.transform.InferType()(mod)
mutated_mod['func_5321'] = func_5321
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5321_call = mutated_mod.get_global_var('func_5321')
call_5322 = func_5321_call()
output = call_5322
func_5323 = relay.Function([], output)
mutated_mod['func_5323'] = func_5323
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4341_call = mod.get_global_var('func_4341')
func_4342_call = mutated_mod.get_global_var('func_4342')
call_5426 = func_4341_call()
call_5427 = func_4341_call()
func_217_call = mod.get_global_var('func_217')
func_222_call = mutated_mod.get_global_var('func_222')
const_5430 = relay.const([[-8.782117,7.103013,-5.591973,6.755778,5.302474,9.030392,2.115732,4.133150,9.276956,5.126596,0.598926,4.929308,-7.472859,-3.419004,-0.471937,2.554181,1.431049,-5.048076,-9.602958,-7.765130,-4.279183,3.992064,-5.487762,-3.630141,7.105862,-2.550939,2.336640,6.441302,-8.488084,-9.076730,2.772903,-3.702013,-4.756337,-0.643140,-6.929258,1.749180,-9.451060,3.235053,0.361984]], dtype = "float32")#candidate|5430|(1, 39)|const|float32
var_5431 = relay.var("var_5431", dtype = "float32", shape = (195,))#candidate|5431|(195,)|var|float32
const_5432 = relay.const([-5,7,-2,8,-10,4,4,-5,-3,-8,4,-7,8,-10,-2,-1,-7,-2,7,-8,-4,3,6,-4,-3,-5,-6,-1,-2,5,1,10,8,8,1,-2,-6,-6,-7,1,-1,-6,-3,-3,7,9,-6,7,-3,9,10,-1,-10,-1,5,8,8,-5,10,-6,-8,8,-5,9,-1,2,-4,10,-7,-1,-2,-10,-3,-3,-5,-2,5,-10,-5,10,9,-9,-4,7,9,6,8,-6,-1,6,10,-8,9,7,6,2,-9,8,-10,-5,-4,-2,4,-5,-7,-10,10,3,-5,3,-10,-7,-6,2,-4,4,-7,2,4,-8,-10,-7,-6,10,-5,-5,10,3,8,1,-4,2,3,3,-1,8,9,2,8,-9,4,7,5,-9,7,7,-7,1,2,5,6,5,-9,-3,8,9,5,6,-5,-4,-7,4,-9,3,-10], dtype = "uint8")#candidate|5432|(165,)|const|uint8
const_5433 = relay.const([4,-1,8,9,3,9,-5,9,10,-4,6,10,-2,9,3,-6,-7,-7,1,2,-7,4,-4,2,8,-2,4,2,-6,8,6,-4,2,-7,-1,-7,-9,-10,3,8,10,6,3,9,-10,9,-2,-10,-8,7,7,10,4,7,-4,1,-7,9,4,1,5,-1,-5,-1,-7,4,10,-9,4,4,-3,3,3,-1,-9,2,-2,-1,3,2,10,-5,10,7,-10,-1,7,2,-5,8,5,10,-2,-8,4,-6,-8,7,2,1,6,-6,7,4,1,9,-9,-5,1,5,-5,-10,-1,-10,-10,7,-4,-10,1,6,5,9,-2,6,-10,-9,-3,8,5,-8,-9,-2,10,-8,5,4,-7,5,-1,-5,1,6,4,-9,-3,5,-4,7,-8,-6,6,4,-6,5,7,8,3,-3,9,-7,8,4,-8,5,-7,10,4,-9,2,-6,3,8,-8,-4,-10,9,2,8,-6,9,-8,7,4,10,1,6,10,1,-2,8,5,-7,-3,-10,-2,4,-9,-1,8,-10,9,-2,-7,-8,-7,10,-6,-2,4,9,2,-5,6,-5,-9,-5,2,-9,10,7,-6,3,4,10,-9,3,2,-4,7,-7,6,-5,9,7,-1,-1,1,-8,9,-2,-7,-10,4,9,5,8,-8,-10,-8,8,-9,-8,-3,5,4,-2,4,-10,-8,-2,7,-4,4,9,9,1,6,-10,6,1,-5,-1,-7,-9,-1,7,10,10,5,4,-9,-4,4,4,-9,10,-9,3,3,10,3,-2,9,7,-3,6,7,7,-3,-3,-5,10,-5,8,7,2,5,2,-7,-8,9,-2,-5,10,-9,4,-6,-8,7,9,-5,-3,4,-6,2,9,9,10,2,4,2,5,-2,9,10,5,-8,8,4,10,10,-9,-3,-3,-6,-6,4,-6,-6,-6,-2,4,9,-9,7,-9,9,4,-5,-6,-3,-9,6,5,-10,-10,4,-2,5,-6,-1,9,-2,-3,-1,8,-3,-5,2,-3,-1,-7,-7,7,-2,-6,7,4,-10,6,8,-7,3,-2,-10,-9,7,7,7,-8,9,2,1,5,5,-5,7,3,-4,7,9,-8,-4,-10,8,-7,-6,-3,5,10,-1,-2,-9,-8,-10,-8,3,-5,10,5,5,-7,1,8,7,-7,-5,9,-5,-8,4,-4,-1,-1,2,10,-9,10,6,7,8,-4,-2,8,9,-2,1,9,3,-4,5,-4,-3,-4,2,6,5,4,2,7,-7,4,5,9,-3,-4,-1,5,-3,-4,-2,7,-10,-7,3,6,2,-8,-3,-4,-2,-9,5,8,4,-4,-2,-4,-2,-7,-6,6,2,5,-3,-4,-5,9,-6,9,8,-6,6,5,10,4,-4,4,-6,-3], dtype = "uint32")#candidate|5433|(520,)|const|uint32
call_5429 = relay.TupleGetItem(func_217_call(relay.reshape(const_5430.astype('float32'), [1, 3, 13]), relay.reshape(var_5431.astype('float32'), [5, 3, 13]), relay.reshape(const_5432.astype('uint8'), [165,]), relay.reshape(const_5433.astype('uint32'), [520,]), ), 2)
call_5434 = relay.TupleGetItem(func_222_call(relay.reshape(const_5430.astype('float32'), [1, 3, 13]), relay.reshape(var_5431.astype('float32'), [5, 3, 13]), relay.reshape(const_5432.astype('uint8'), [165,]), relay.reshape(const_5433.astype('uint32'), [520,]), ), 2)
output = relay.Tuple([call_5426,call_5429,const_5430,var_5431,const_5432,const_5433,])
output2 = relay.Tuple([call_5427,call_5434,const_5430,var_5431,const_5432,const_5433,])
func_5435 = relay.Function([var_5431,], output)
mod['func_5435'] = func_5435
mod = relay.transform.InferType()(mod)
var_5436 = relay.var("var_5436", dtype = "float32", shape = (195,))#candidate|5436|(195,)|var|float32
output = func_5435(var_5436)
func_5437 = relay.Function([var_5436], output)
mutated_mod['func_5437'] = func_5437
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5321_call = mod.get_global_var('func_5321')
func_5323_call = mutated_mod.get_global_var('func_5323')
call_5445 = func_5321_call()
call_5446 = func_5321_call()
var_5451 = relay.var("var_5451", dtype = "float64", shape = (2, 7, 11))#candidate|5451|(2, 7, 11)|var|float64
bop_5452 = relay.less_equal(call_5445.astype('bool'), var_5451.astype('bool')) # shape=(2, 7, 11)
bop_5455 = relay.less_equal(call_5446.astype('bool'), var_5451.astype('bool')) # shape=(2, 7, 11)
uop_5478 = relay.rsqrt(var_5451.astype('float32')) # shape=(2, 7, 11)
func_4323_call = mod.get_global_var('func_4323')
func_4325_call = mutated_mod.get_global_var('func_4325')
call_5485 = func_4323_call()
call_5486 = func_4323_call()
uop_5489 = relay.tan(uop_5478.astype('float64')) # shape=(2, 7, 11)
output = relay.Tuple([bop_5452,call_5485,uop_5489,])
output2 = relay.Tuple([bop_5455,call_5486,uop_5489,])
func_5491 = relay.Function([var_5451,], output)
mod['func_5491'] = func_5491
mod = relay.transform.InferType()(mod)
var_5492 = relay.var("var_5492", dtype = "float64", shape = (2, 7, 11))#candidate|5492|(2, 7, 11)|var|float64
output = func_5491(var_5492)
func_5493 = relay.Function([var_5492], output)
mutated_mod['func_5493'] = func_5493
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3786_call = mod.get_global_var('func_3786')
func_3787_call = mutated_mod.get_global_var('func_3787')
call_5533 = func_3786_call()
call_5534 = func_3786_call()
func_412_call = mod.get_global_var('func_412')
func_414_call = mutated_mod.get_global_var('func_414')
const_5536 = relay.const([[-4.321169,0.375695,-8.229823,-5.410317,5.681344,-7.792339,-1.229989,0.463704,-7.105551,-2.572700,5.617172,5.434985,4.308314,2.924148,3.194060,-8.439341,6.251112,-3.387750,-8.130210,-6.563281,4.829680,2.130976,6.990201,-1.928131,-6.416262,-1.460773,5.828604,6.597742,-4.661392,6.630071,4.247835,8.106197,5.710332,5.039298,-2.015474,9.629924,-6.832992,-5.038312,6.105486,2.252888,5.261650,4.207442,-1.426076,3.723993,-5.201918,-9.498065,2.459607,-6.514979,9.902567,-9.389948,-7.145099,-4.836829,-6.068172,-7.428002,6.386368,-5.457679,8.329218,8.096295,-9.861006,8.850725,8.989060,5.454837,9.365912,6.556728,7.968665,5.804372,-2.498091,-2.204485,-9.958612,-7.676918,-7.870974,-4.387495,6.789027,7.715026,-2.526989,-0.764920,2.124774,-3.855516,8.662567,3.196699,-6.156773,-2.325279,-0.278340,6.843224,9.596667,-0.709316,-8.318691,-0.261992,1.713563,-6.477320,-8.036842,6.845797,-7.811625,-8.645860,-2.178119,-2.065935,-2.329144,7.227688,7.408757,8.348943,-8.307439,-8.281153,-2.776514,-9.055830,5.850715,-1.143162,0.419917,7.582182,6.984732,-4.632162,4.959568,-0.845791,4.060738,0.952890,2.270451,-5.802700,-9.699646,-7.411974,4.512176,-1.886651,9.413529,-1.542439,5.141391,-8.891119,9.641679,-3.732387,1.834846,2.357009,-9.406433,8.027824,2.243443,5.334568,1.408298,1.867714,7.085515,1.660419,-9.787890,4.431813,7.827171,-6.023255,-1.356426,7.547710,-9.081136,1.800255,1.604332,-5.848956,-0.654475,2.216812,9.703070,-7.542778,-6.717760,-2.352616,4.529788,-3.012689,0.494251,4.174480,3.804161,-4.803481,1.174930,-4.936100,-0.849825,-6.132800,3.260271,-2.047842,-1.955010,4.740406,-0.310747,4.193968,9.262390,-5.421578,-7.653984,9.941705,6.030981,1.661789,7.111719,2.401936,-0.692243,-2.619580,9.060853,3.119301,3.912271,8.824531,-9.676114,7.911484,-8.226217,-4.048432,9.754727,9.988945,2.480586,-1.587846,-0.125516,5.165872,3.245972,-3.909515,-9.318568,-3.729476,-3.578194,-9.377461,-7.393002,2.607390,8.934797,1.785343,9.837875,2.938732,-2.910722,5.587557,-5.322402,8.656811,-8.105394,-5.196310,7.607588,-7.286312,-3.597036,-4.492080,-2.468378,-1.494157,-7.480503,-5.560905,-3.125531,-1.021415,3.894169,5.978380,-0.988076,5.084287,3.179060,-0.963721,-6.492050,-9.047783,8.741044,0.166028,-7.627162,7.682530,-1.685517,-8.816859,-2.989257,0.487072,-9.812570,3.115692,4.363543,6.939024,-7.291864,-8.333273,-9.562870,-7.462141,0.696464,2.159656,6.162136,-9.357858,9.649802,-9.988373,-6.412401,2.644976,-4.671856,4.019616,-4.477425,-1.943191,-7.607095,9.128615,-1.401206,-7.757901,-3.093819,8.346564,3.822795,4.223640,7.968388,-2.945451,4.991113,-5.952862,-3.003319,3.499558,9.862744,3.857567,-6.079000,-8.033370,-2.356300,3.141007,7.490000,-7.025720,-9.297826,9.498778,8.995597,9.711399,5.846988,9.173519,-5.285729,-9.765132,-5.440134,6.511857,5.339952,0.328679,7.566320,-2.201856,-9.275819,6.257841,-9.329289,-9.742240,-8.848472,-5.804609,0.972950,6.974162,-7.657989,9.479881,2.563777,-0.186539,0.929041,6.624682,-8.078640,0.187666,-0.669697,5.279781,5.062543,3.564453,-4.316586,7.182952,0.967718,3.866555,9.247907,-3.173520,0.753163,5.989247,3.307476,5.404687,-3.100485,-1.639892,6.357191,8.202288,4.088612,-5.160278,-8.125611,1.079503,-1.854540,9.464448,-5.332368,7.523358,-1.600246,-2.894715,4.582213,7.915182,-9.727383,-8.205714,-0.731303,-2.464621,-0.987770,2.289496,-5.959447,-9.682184,7.752906,-8.427237,-4.144499,5.616291,-2.826534,-1.466243,-8.620629,1.283837,3.888393,-0.915218,6.511803,2.057664,-9.337473,-2.249156,5.284493,7.457642,3.457475,-1.579867,7.530366,-0.958984,5.464641,5.628213,4.500767,-8.542708,2.744660,-8.300049,2.920375,-8.256415,-0.096699,4.466436,-4.277282,-5.547516,-1.654270,6.318667,-9.649845,-1.580269,-9.323801,0.826767,-3.788443,-1.459677,4.142589,0.110917,-3.332303,-2.270539,-5.749409,-5.729487,-5.949840,-9.547574,-4.313431,1.102762,-4.291297,-4.449768,0.467424,-9.172022,-7.216771,3.873630,0.312532,-9.165253,9.183719,-2.944526,-1.738207,-7.108797,7.872047,-7.674436,-4.767161,-2.948104,2.371312,8.861042,9.044428,-0.765649,-8.847632,6.758399,-1.979145,3.031721,-0.435416,-4.918455,-4.137373,3.943255,5.173281,1.974201,4.336246,-4.271442,9.986171,-4.638909,0.802001,-5.215153,-4.332222,6.074512,6.920096,-7.468935,-6.146158,4.801322,2.274938,-3.362944,-6.364516,-9.691306,-0.667660,-4.498768,-2.179658,-6.016821,3.856529,8.236499,-4.195120,6.823620,4.802753,7.406058,-8.706697,2.716185,6.903742,-7.112863,8.332908,-4.413671,-4.577929,3.146456,3.391655,-7.080108,-6.288281,-0.995261,4.650098,9.634625,-8.708913,-3.881744,3.777712,-0.586917,-2.815835,-1.420006,-2.866625,9.972746,4.527704,6.596801,-8.131385,2.253140,-4.526618,3.673604,4.388559,-5.015056,8.860042,-1.707631,-1.073569,5.192554,-2.373112,0.680851,-4.635585,1.735538,5.094761,-9.149775,-2.186003,6.477627,-8.185571,-7.149152,5.682572,0.173620,-3.415835,6.095717,-7.179258,5.103445,-4.109532,7.672491,6.839975,-0.709778,-5.161120,-6.921105,-0.180519,6.047408,-0.802158,5.109200,-8.307423,-6.709379,-7.050058,-9.473626,-4.916327,9.211132,-1.745630,-9.704324,4.378136,-4.263308,0.635945,4.930401,-1.396408,-8.489686,-1.516417,-4.218731,-5.584635,8.379275,-3.228159,-8.072613,3.924725,7.199559,-5.729890,1.364528,-6.545257,5.040961,-7.555153,-8.316724,3.801867,5.960318,-1.106401,9.116313,-3.568129,6.746084,-0.526997,-7.498065,-9.400348,2.734157,5.545210,-7.652135,-6.869264,7.459926,-3.511901,-6.588539,8.355049,-7.910171,2.662033,-8.694829,-7.065909,3.267991,5.932344,0.600135,8.976435,7.196269,3.194676,1.857042,3.962509,7.977622,-6.542804,-3.464224,1.751648,4.038965,-0.069092,4.691420,0.296741,2.830501,-4.836909,-3.633383,2.219943,-7.598580,-1.207444,-5.291215,-8.630848,8.054525,7.630570,-2.488036,-5.478697,-1.698984,-8.664775,-8.068448,-9.076776,-9.325544,-5.129568,-6.897858,-0.743548,-7.945472,-6.139994,6.095992,-4.205308,0.929483,-9.813938,4.494084,7.469593,3.839799,6.135849,-1.479132,2.079647,-6.622780,3.481948,2.214694,8.942387,-0.308565,-1.249936,-5.672580,3.088045,7.824001,-2.645310,-3.402252,-5.824705,0.548136,4.772991,9.670428,-5.275908,-3.649272,-0.739844,-0.944478,-4.609732,-5.079808,-6.703089,6.280097,-2.662163,4.252541,5.064311,8.470445,1.188008,6.357543,-6.202331,7.877520,-1.975892,-4.642810,8.511633,-5.068445,-4.502453,-0.284618,-2.962588,-5.140110,-1.367361,4.208144,6.028860,7.190025,7.212724,-7.500603,9.090543,-0.452623,1.378624,8.173955,2.893369,-2.854677,-2.345342,-2.968057,3.200900,1.528101,-5.879819,3.647422,1.683962,-3.406020,-1.620097,-3.108880,-7.582569,9.519333,-8.256432,-6.566906,5.593000,1.721909,-5.419235,-5.522426,-5.396330,8.602885,-9.778139,-5.824089,-6.891151,-7.503242,2.451611,-2.062274,2.041517,-3.214574,-9.173922,-6.454585,2.895701,2.782043,1.180874,8.449986,-0.286644,2.762980,-1.117142,-2.127640,-4.129663,9.135663,-4.430913,-3.669012,5.150579,0.378631,1.800020,8.414317,9.742487,-0.276303,-9.940990,-2.716115,2.721560,6.393031,0.596207,-7.443160,-3.854669,-1.525941,1.992866,1.305576,0.059950,7.302795,-6.957515,1.200323,9.302613,-1.168651,-2.833061,-9.322478,-4.163502,6.223072,-7.534039,-3.914135,3.344671,8.380981,4.239775,8.937232,0.806485,2.005380,-1.537854,9.679869,9.040007,9.262712,-1.840154,9.514737,-5.695425,-0.568701,-3.119730,2.070902,1.028051,-0.560762,7.596135,4.300000,-9.241255,-6.539801,-7.999689,3.330378,-0.943399,9.103863,-0.929544,6.013471,7.948807,7.678116,-7.278126,2.533800,8.090350,-8.160065,8.407174,5.671402,1.126623,-1.937902,9.452481,8.968976,8.292910,-6.691435,3.605316,-4.139190,-6.834629,-7.770979,-0.475088,-2.744991,9.900571,4.798749,4.045770,0.175732,-5.554580,-6.462739,4.770999,9.847344,-2.888242,-1.837336,-1.021103,-8.407421,4.649337,8.268498,-6.829853,9.732719,5.092577,-5.974069,-9.438539,1.409633,-0.766136,-5.695736,5.043544,-1.003285,-5.611856,9.522301,6.868401,9.354801,-1.565676,-4.293323,-1.839937,-7.990302,-8.846141,-8.411550,-1.767707,-8.139315,0.517777,-0.351699,-6.742883,-0.346773,-5.145723,1.520910,6.747474,-1.159350,-2.531561,-7.782369,-0.939643,-7.248327,-6.201660,3.635171,-5.463690,1.216674,6.181521,-4.859295,-5.792885,-3.367229,-9.305633,-9.124655,-5.408687,7.781914,2.043481,4.468225,-7.131802,8.510735,4.303054,-3.854865,-0.204725,1.699521,4.200014,0.693249,7.450234,-9.495142,-8.905752,5.213370,5.735749,9.021780,9.438390,5.260236,-6.034437,-7.751257,4.613241,5.547862,-2.217763,0.129067,-0.205031,5.764552,-1.839463,4.552384,-2.643472,7.825798,3.987474,-0.727677,-6.304088,-0.654659,-2.110051,-6.518149,2.432697,0.471848,-3.660825,-8.108911,-2.676403,-6.870284,4.453064,5.040954,3.394689,-7.078265,3.495830,4.658613,-7.126552,-3.379434,-8.612772,-6.337036,-5.346956,7.761065,4.779061,4.691972,2.398308,-4.247371,1.957497,-2.875285,8.819062,1.606572,5.578524,-5.971235,-1.823817,0.279939,9.108901,2.673228,2.788983,-0.669246,-3.728592,-1.994726,-3.408247,-0.552656,-0.989885,-8.697151,2.746185,-7.454363,-2.077223,-0.743625,4.048672,4.024621,-8.278258,-1.132634,3.524899,-8.779389,-6.682374,1.590910,2.127146,-4.850688,-9.734761,0.624051,-1.473988,-2.638711,-5.981277,-3.438960,-9.184245,-6.207332,-3.913193,8.738829,-0.005363,5.983790,-9.877311,9.302115,-2.856924,-3.923738,-2.594484,8.012201,9.879188,0.647695,-4.075583,-2.323797,8.754747,6.601300,6.865201,2.633245,-5.032053,7.441455,6.712414,0.373927,-7.142384,-6.656895,1.314984,-2.731621,6.902110,1.266232,6.865427,6.549240,-3.831901,-0.237610,7.551597,5.985034,-9.918224,-1.422899,0.395190,2.256992,4.918853,-5.523932,1.197665,-0.667302,-5.917532,2.251998,9.247837,-8.134486,8.219419,8.275325,-1.660345,6.157407,1.700789,-7.920006,0.458977,1.035646,8.839472,0.184132,-3.473094,-8.174892,6.605095,-1.728580,-2.435582,6.594178,5.793473,-4.745016,1.445065,-8.797551,7.345814,-8.225832,-9.318659,-4.808419,2.235751,8.006436,2.734521,4.816260,7.267833,5.438741,-9.154318,3.976073,1.894882,-7.779495,3.186455,-1.841157,3.545134,1.766937,-9.114521,-8.984414,-3.653406,4.389038,5.741436,-0.865791,-2.782896,-4.921867,-7.042307,-8.399179,3.696748,5.667702,6.033078,2.363954,-9.178284,-6.583690,-3.685377,-4.141672,-8.250399,-0.007609,-7.138701,-9.746739,-7.008059,-8.041851,7.307021,7.660886,5.416082,2.336030,-3.215085,9.364879,-6.656957,8.396262,-6.142067,5.415263,7.073732,-0.681413,-0.661952,-8.054629,6.188214,-4.377571,5.405282,4.267377,-0.790375,1.981235,-1.566176,9.851141,-6.726031,2.314555,-0.011573,-9.106035,6.825844,-3.084244,1.107657,-9.209921,1.027854,3.508805,-3.359433,3.704886,-3.952793,1.150545,2.402722,2.690651,2.159213,4.318761,4.118480,3.996612,-3.531467,-1.732730,-3.262176,1.454988,5.473825,-3.894625,1.948669,-5.766535,-6.729863,-0.721503,-3.787579,-2.456747,2.174811,-1.560261,5.514546,7.328426,6.621880,0.965288,-8.864593,2.845688,-4.780481,-1.984518,9.950214,1.618756,-7.854235,0.979806,5.619750,2.777300,5.054414,3.431343,8.142808,9.898838,-9.121873,3.273869,3.899288,2.240807,-1.355128,2.784988,-9.846358,-9.086790,2.176642,-0.140284,5.500063,4.327788,0.074377,4.102444,9.631093,9.785876,0.435340,-1.660242,9.992107,-0.135643,3.934214,6.288063,-4.972298,4.361144,3.155185,-9.164014,8.240971,-8.055285,-6.567422,5.750511,-6.239601,-3.934534,7.229405,-4.812211,-0.400503,3.695676,-1.389182,6.107647,-8.959311,-9.475472,-0.024567,-1.011505,-7.731960,-8.958859,-0.735292,-0.127537,-4.506291,-1.579965,-7.321317,-6.210894,-2.415190,-7.931973,-7.629976,1.565389,-2.454786,6.659252,9.886610,-4.529717,-1.357624,-3.907075,3.512360,2.665967,4.900637,2.335105,-5.904202,-6.183215,5.192126,1.550750,9.245646,-1.923192,0.772863,-7.965142,9.209496,-1.510144,-7.101500,-0.739051,-4.480879,4.116398,-5.691077,6.252434,9.365194,6.419545,-1.872104,-7.066507,6.699227,-9.723593,-4.429019,0.785176,3.478073,4.169333,9.169952,5.901760,4.967193,0.105684,-7.566409,-3.228625,7.262236,-3.553502,9.091650,8.025326,-1.997875,7.974178,-1.792303,-8.823545,-3.908450,0.403450,-8.788252,1.384282,-8.714974,0.788827,6.543735,-9.690554,0.631768,4.410183,6.227528,2.647034,-0.022261,1.606288,-5.761135,-5.656120,5.018272,-4.183285,1.472650,-3.224897,-9.589116,-2.045752,4.810320,-3.875065,7.266241,5.052251,-1.895605,-8.902599,2.858786,-4.662568,-5.417276,2.216643,-0.024670,3.158805,4.111438,2.114691,3.252310,-5.746199]], dtype = "float64")#candidate|5536|(1, 1260)|const|float64
call_5535 = relay.TupleGetItem(func_412_call(relay.reshape(const_5536.astype('float64'), [6, 14, 15])), 1)
call_5537 = relay.TupleGetItem(func_414_call(relay.reshape(const_5536.astype('float64'), [6, 14, 15])), 1)
uop_5542 = relay.sin(call_5535.astype('float32')) # shape=(6, 14, 15)
uop_5544 = relay.sin(call_5537.astype('float32')) # shape=(6, 14, 15)
bop_5547 = relay.logical_xor(uop_5542.astype('int64'), relay.reshape(call_5535.astype('int64'), relay.shape_of(uop_5542))) # shape=(6, 14, 15)
bop_5550 = relay.logical_xor(uop_5544.astype('int64'), relay.reshape(call_5537.astype('int64'), relay.shape_of(uop_5544))) # shape=(6, 14, 15)
func_5435_call = mod.get_global_var('func_5435')
func_5437_call = mutated_mod.get_global_var('func_5437')
const_5552 = relay.const([6.971801,7.992378,2.036006,8.406178,-7.804247,-9.935165,6.093484,-4.256440,2.692647,-9.672980,2.529881,-5.170962,-6.132970,4.396839,-5.507108,7.268809,4.844743,7.406858,3.657024,3.185248,1.393677,7.654141,1.581817,-6.425038,-2.179489,-9.756315,-3.671855,-5.427817,8.313724,8.159914,4.620187,0.237582,7.345115,4.042313,8.896586,-5.831640,2.939867,9.898743,2.792682,3.325290,5.201325,-1.321070,-4.671643,-0.713664,-4.481251,8.877044,-2.587645,-5.873589,0.685706,7.905927,-9.338275,-0.201368,2.125080,-3.823933,4.552534,-8.649606,-8.502213,0.900035,-0.076796,-6.896384,7.303806,-6.347385,-7.065399,0.937976,0.261929,9.342499,-7.908417,3.507745,9.901393,1.062207,4.766649,2.474299,-0.641015,-2.118412,-4.872913,0.286454,8.395761,-2.351088,9.700094,6.526024,-2.132107,-4.293448,-5.720443,-6.022901,-7.462540,2.622017,1.006262,9.380333,9.190524,-3.947598,-2.919773,3.271461,-1.592064,3.822750,0.054473,-2.252734,9.172631,-3.446147,-3.721937,-7.885664,-9.128769,-4.326794,-0.863675,8.350983,6.806786,-3.554187,-0.813890,5.110970,5.600884,-9.555441,-2.896069,-2.009338,7.376621,3.313199,8.328635,-3.672451,7.337684,2.883202,-8.154442,3.403161,7.788991,8.112865,1.570849,-8.436331,-3.821050,5.080342,7.112767,-5.020160,5.087354,-6.775548,4.468961,-6.352453,1.718329,7.406296,7.706625,1.105747,-2.336998,-7.863628,-7.927010,-8.473412,9.164294,7.956613,5.247094,9.210595,9.139548,3.916286,3.257519,-3.064525,4.059783,-7.603329,-5.169239,7.912988,4.592772,8.550554,-5.538548,-8.669900,2.085455,-5.349729,0.369795,9.830124,0.013402,-6.952927,2.594796,9.361878,-9.330400,0.979105,-2.449717,6.456723,-5.191173,8.188572,-5.540045,-0.426190,5.665513,-1.022457,-4.530228,8.411658,-6.520018,-9.765025,-1.735318,-5.579579,-5.847822,-6.751841,8.396795,-5.644425,-5.167475,-6.117193,7.960719,-2.994213,-9.815077,0.123293,2.395973,-7.506043,-0.620938,1.044294,4.248951], dtype = "float32")#candidate|5552|(195,)|const|float32
call_5551 = relay.TupleGetItem(func_5435_call(relay.reshape(const_5552.astype('float32'), [195,])), 0)
call_5553 = relay.TupleGetItem(func_5437_call(relay.reshape(const_5552.astype('float32'), [195,])), 0)
uop_5564 = relay.asin(uop_5542.astype('float32')) # shape=(6, 14, 15)
uop_5566 = relay.asin(uop_5544.astype('float32')) # shape=(6, 14, 15)
bop_5570 = relay.left_shift(bop_5547.astype('uint16'), relay.reshape(uop_5564.astype('uint16'), relay.shape_of(bop_5547))) # shape=(6, 14, 15)
bop_5573 = relay.left_shift(bop_5550.astype('uint16'), relay.reshape(uop_5566.astype('uint16'), relay.shape_of(bop_5550))) # shape=(6, 14, 15)
output = relay.Tuple([call_5533,const_5536,call_5551,const_5552,bop_5570,])
output2 = relay.Tuple([call_5534,const_5536,call_5553,const_5552,bop_5573,])
func_5578 = relay.Function([], output)
mod['func_5578'] = func_5578
mod = relay.transform.InferType()(mod)
output = func_5578()
func_5579 = relay.Function([], output)
mutated_mod['func_5579'] = func_5579
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4341_call = mod.get_global_var('func_4341')
func_4342_call = mutated_mod.get_global_var('func_4342')
call_5591 = func_4341_call()
call_5592 = func_4341_call()
func_2384_call = mod.get_global_var('func_2384')
func_2387_call = mutated_mod.get_global_var('func_2387')
var_5598 = relay.var("var_5598", dtype = "int8", shape = (1260,))#candidate|5598|(1260,)|var|int8
call_5597 = relay.TupleGetItem(func_2384_call(relay.reshape(var_5598.astype('int8'), [9, 14, 10]), relay.reshape(var_5598.astype('int8'), [9, 14, 10]), ), 2)
call_5599 = relay.TupleGetItem(func_2387_call(relay.reshape(var_5598.astype('int8'), [9, 14, 10]), relay.reshape(var_5598.astype('int8'), [9, 14, 10]), ), 2)
uop_5606 = relay.sigmoid(call_5591.astype('float64')) # shape=(1, 7, 11)
uop_5608 = relay.sigmoid(call_5592.astype('float64')) # shape=(1, 7, 11)
func_412_call = mod.get_global_var('func_412')
func_414_call = mutated_mod.get_global_var('func_414')
call_5614 = relay.TupleGetItem(func_412_call(relay.reshape(var_5598.astype('float64'), [6, 14, 15])), 0)
call_5615 = relay.TupleGetItem(func_414_call(relay.reshape(var_5598.astype('float64'), [6, 14, 15])), 0)
bop_5620 = relay.floor_divide(call_5591.astype('float64'), relay.reshape(uop_5606.astype('float64'), relay.shape_of(call_5591))) # shape=(1, 7, 11)
bop_5623 = relay.floor_divide(call_5592.astype('float64'), relay.reshape(uop_5608.astype('float64'), relay.shape_of(call_5592))) # shape=(1, 7, 11)
func_4409_call = mod.get_global_var('func_4409')
func_4412_call = mutated_mod.get_global_var('func_4412')
call_5624 = relay.TupleGetItem(func_4409_call(relay.reshape(call_5614.astype('float64'), [3, 420])), 1)
call_5625 = relay.TupleGetItem(func_4412_call(relay.reshape(call_5614.astype('float64'), [3, 420])), 1)
func_4959_call = mod.get_global_var('func_4959')
func_4961_call = mutated_mod.get_global_var('func_4961')
var_5637 = relay.var("var_5637", dtype = "float64", shape = (462,))#candidate|5637|(462,)|var|float64
call_5636 = relay.TupleGetItem(func_4959_call(relay.reshape(var_5637.astype('float64'), [6, 7, 11])), 0)
call_5638 = relay.TupleGetItem(func_4961_call(relay.reshape(var_5637.astype('float64'), [6, 7, 11])), 0)
bop_5642 = relay.equal(call_5591.astype('bool'), call_5636.astype('bool')) # shape=(6, 7, 11)
bop_5645 = relay.equal(call_5592.astype('bool'), call_5638.astype('bool')) # shape=(6, 7, 11)
uop_5656 = relay.asin(uop_5606.astype('float32')) # shape=(1, 7, 11)
uop_5658 = relay.asin(uop_5608.astype('float32')) # shape=(1, 7, 11)
func_3786_call = mod.get_global_var('func_3786')
func_3787_call = mutated_mod.get_global_var('func_3787')
call_5661 = func_3786_call()
call_5662 = func_3786_call()
func_5301_call = mod.get_global_var('func_5301')
func_5303_call = mutated_mod.get_global_var('func_5303')
const_5683 = relay.const([2.520273,2.570902,6.695062,-6.015499,-5.903373,1.752711,7.177512,8.093546,0.617410,-0.893507,7.312291,4.368702,0.147357,-3.289951,3.175629,0.918672,7.184428,4.079884,1.263651,-8.657407,-9.540610,-7.783551,2.125032,8.477321,-5.380709,7.832778,3.157054,-0.549488,2.823371,8.220888,-2.798453,2.261638,-3.813597,-1.441958,-9.793811,6.462251,1.210946,0.504302,1.529328,4.224924,-4.335511,-2.544935,5.727731,8.061799,9.859041,9.625848,9.155202,4.832684,4.026474,-7.028803,-9.925085,-2.966479,6.644210,-0.858014,4.047969,5.341846,6.357910,6.992553,-5.863880,0.927235,-6.381407,3.569195,7.824344,5.620947,0.978703,9.331227,6.395392,4.756187,2.270588,-6.766362,1.482284,-5.859490,1.152636,4.565462,-2.343973,5.130414,-9.647844,0.162516,7.829222,-1.223672,-8.195011,-7.966687,-5.301630,-1.971686,7.858778,-4.182573,-6.759205,8.716033,-3.769144,9.989066,9.179555,2.324271,-2.339680,-7.731045,5.655436,-8.939802,-8.285379,-9.636109,-1.473795,-9.228257,5.993947,-3.364952,6.304957,2.505949,-6.216434,9.381673,0.684220,0.292160,0.057764,4.911599,7.077884,-8.501874,-2.919002,-8.330545,7.946909,-6.811550,9.841136,4.958482,8.901291,-8.903858,2.610417,3.833944,8.933662,-6.543258,-7.645822,1.674409,5.967374,8.999697,-4.235000,-7.770632,-2.078221,-5.324120,5.943739,9.486024,-3.312235,0.259628,2.362446,-4.455223,1.177455,5.743239,-3.421816,4.388395,-7.539074,4.407797,-1.808044,-7.646196,2.692427,-2.239899,-4.817190,6.165755,-8.292409,1.726267,4.260266,-8.754834,-1.006518,3.598345,-6.665962,0.005644,2.165496,-5.507124,-3.392521,4.917798,4.861384,0.749427,6.947350,3.260131,7.053570,9.060823,-3.406706,7.660026,4.291591,-1.016059,-9.520774,-3.582378,-7.605634,1.242075,4.129453,-4.335470,4.657208,4.197994,-9.698180,-3.515286,6.603685,2.812065,4.923973,-8.225485,6.930703,-1.864203,-6.661600,8.140340,5.529932,-6.427784,6.422156,-3.201998,-5.579966,5.137335,-9.892474,-8.140911,8.906569,3.726327,-6.717370,2.797789,-1.710287,2.449045,-5.197380,-6.570231,-7.290192,5.823376,9.625688,-2.274031,1.361510,5.577645,1.113043,3.540888,7.480871,2.053428,-4.916842,1.505879,-7.007555,-3.863143,2.880254,3.029133,6.955467,-8.458961,-2.816934,-8.832603,-9.561876,8.980086,9.629162,2.763774,9.604348,-5.072458,5.435701,2.014174,4.668008,9.619659,-4.836904,-5.423970,4.367195,-1.146279,8.767616,3.351968,-8.390902,4.316785,6.728567,-7.217236,9.042911,-4.379414,-8.899267,-7.737722,1.065983,3.896069,-6.330493,1.293811,-2.891905,5.372752,-8.441375,3.925783,5.404215,-8.502078,3.412794,-7.708861,-7.792225,-0.827483,-7.805143,-2.220903,-6.643536,7.593097,4.737971,-9.779596,-9.261483,9.802600,-3.349539,-6.489465,2.373703,-9.539113,1.192435,6.108593,3.209455,8.369101,-4.283755,-7.558730,8.636684,-2.967133,-2.327150,-0.859108,-5.080340,-3.664272,-7.622413,6.004418,1.724704,0.180706,-5.421521,-3.218433,-2.323850,1.321007,3.058572,4.259754,3.660876,6.976724,-7.928026,-5.484303,4.086888,5.027695,6.271455,7.756488,-1.059425,-6.972072,8.804490,-7.001291,-9.085319,2.195718,3.010078,-3.924606,-2.566900,3.488988,7.036498,0.433407,-4.376492,-7.099013,6.813458,-3.503232,-4.642110,-5.554123,-9.861448,4.987860,-3.174948,-8.939994,7.237077,-7.122346,2.142844,-4.166789,-0.680556,1.434588,-4.380172,-6.179141,-9.389628,7.356849,4.674136,-0.509686,2.012452,-2.541585,-8.174715,5.300264,6.647817,3.046573,2.355682,0.394354,-6.901629,-1.427286,6.694023,-5.602137,-5.970236,-7.282159,-7.786051,4.611797,1.762083,0.957760,-3.298332,2.445097,1.954810,-2.239654,5.158336,-5.463973,1.956894,-5.284542,2.895439,-7.006544,4.093368,-6.230243,8.095764,8.934381,1.048333,6.319331,7.827208,-4.035907,6.105450,-8.533227,-0.166221,-5.639791,9.540118,-0.107712,-5.761795,-3.623325,-6.265043,8.775084,-6.575406,-9.691601,0.361095,-5.977046,-4.819088,3.542702,2.661665,-4.598051,-5.989238,2.544897,-9.939373,0.887999,-6.046132,-7.010711,-1.671500,1.217009,-2.230241,-8.610883,5.065874,-0.448406,1.897161,3.056383,7.180752,4.538570,6.955738,-0.236032,-4.353724,-8.829866,0.698666,2.978075,-3.666946,2.079715,-1.019685,-3.540342,-9.114926,-0.473850,3.889124,-5.772833,3.700789,-7.064264,8.343617,-3.479613,-2.701873,-8.727062,8.585126,9.428480,-9.767392,-3.720570,6.678555,-0.272853,-1.995596,7.948995,8.964356,-0.397982,6.441185,7.341127,8.892948,2.667725,-0.026978,-3.280407,5.497475,7.688913,-7.052629,0.415080,-0.991668,1.805273,-2.139280,-0.388558,-3.144047,-5.957387,-6.130750,-4.081621,-3.956800,8.941982,-2.818365,-4.696643,-9.117038,3.723941,-6.559386,-0.009832,1.966144,5.579417,-4.027392,0.586578,-0.445569,6.619542,7.275697,9.579738,4.201338,-6.401959,-2.328228,1.576293,-8.907344,6.548467,6.627081,6.333228,9.732275,-9.327528,5.673931,-0.305459,-9.643235,-2.180164,-3.757391,4.591157,-4.384465,2.841862,-1.441779,1.642367,0.235668,1.089550,-2.045885,1.234697,8.533014,-2.787965,0.931705,4.230856,-4.349010,1.517570,7.625447,-1.442338,-4.243735,-9.370829,-7.062101,4.512636,-6.194045,1.173460,-5.384092,-6.569394,-0.108598,-0.094174,0.467336,9.823502,8.452183,-4.182238,5.809025,-1.425066,-8.159440,1.944868,1.478774,5.182911,8.204351,-4.744358,4.892905,-5.731493,2.022677,-8.890527,-2.149771,-0.489085,-2.095545,-3.169194,4.325156,-3.864773,5.859018,5.854260,-0.546367,-6.257108,7.915647,2.407480,6.650469,-9.124204,-6.312848,7.286345,9.877006,-0.780453,8.119044,6.360577,-8.644523,-6.782622,4.447121,-4.535624,-6.433085,-6.423588,8.013229,0.380588,7.050318,-7.179044,-9.434803,-3.530149,5.729346,3.010866,1.757708,-3.587929,-4.740478,2.551453,-9.129146,-1.738174,-8.276600,-1.856437,-0.704846,-6.231886,8.486939,-5.918259,-3.437956,4.803887,6.557711,-7.461082,-4.348183,-2.971659,-5.462377,-2.207597,5.074753,2.652256,0.894957,-6.935539,4.819925,3.821858,0.930394,-8.892060,-8.660135,3.992210,0.144458,-6.086493,-4.518482,-6.766142,-7.440085,2.039722,1.056621,7.132864,-7.987018,6.572471,-6.420301,8.664475,-1.417129,-8.608629,1.421718,-0.509676,3.524181,-3.129587,-4.143683,-0.417261,-1.849697,-4.469005,6.293526,-2.435950,7.128750,2.242384,1.812892,7.132780,2.970850,-5.885186,-7.001759,1.722222,-9.635606,9.658249,-1.063405,6.896340,-7.037578,3.950798,-3.098483,0.823911,3.755425,9.984295,9.309118,-7.569174,-1.144244,-0.262099,4.147875,7.151196,0.143599,-0.137737,-6.107591,-0.118654,-1.812260,-1.033026,-7.804497,-2.379325,0.513100,-6.297919,8.403706,7.650744,5.926980,-8.724521,6.623613,-4.807868,-2.447580,-7.914057,8.236646,3.962216,-9.047731,-2.050318,-0.300340,-1.752977,-1.877182,-9.274981,0.378815,-7.971203,7.161103,-6.053741,-2.606562,-7.936872,0.102293,5.170356,0.185461,-6.711971,2.790817,-3.738116,-6.580521,0.462142,4.624277,-5.332952,4.228480,-2.441694,3.267603,4.783313,5.063941,-8.995656,-7.941995,1.941187,3.668899,-1.060071,-7.510291,-8.288666,7.445538,-9.844885,6.597877,-3.506304,0.293841,-4.217837,9.927701,-2.257599,7.238372,8.679335,-8.550990,5.323774,1.337250,-5.122281,7.805967,-2.865143,-1.715153,8.628073,6.197455,-5.690984,-6.234331,6.869277,-0.034762,8.341660,-1.901000,-8.119526,7.343350,-7.738454,9.321628,6.519767], dtype = "float64")#candidate|5683|(728,)|const|float64
call_5682 = func_5301_call(relay.reshape(const_5683.astype('float64'), [8, 7, 13]))
call_5684 = func_5301_call(relay.reshape(const_5683.astype('float64'), [8, 7, 13]))
output = relay.Tuple([call_5597,var_5598,call_5614,bop_5620,call_5624,var_5637,bop_5642,uop_5656,call_5661,call_5682,const_5683,])
output2 = relay.Tuple([call_5599,var_5598,call_5615,bop_5623,call_5625,var_5637,bop_5645,uop_5658,call_5662,call_5684,const_5683,])
func_5686 = relay.Function([var_5598,var_5637,], output)
mod['func_5686'] = func_5686
mod = relay.transform.InferType()(mod)
var_5687 = relay.var("var_5687", dtype = "int8", shape = (1260,))#candidate|5687|(1260,)|var|int8
var_5688 = relay.var("var_5688", dtype = "float64", shape = (462,))#candidate|5688|(462,)|var|float64
output = func_5686(var_5687,var_5688,)
func_5689 = relay.Function([var_5687,var_5688,], output)
mutated_mod['func_5689'] = func_5689
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5742 = relay.var("var_5742", dtype = "float32", shape = (5, 5, 7))#candidate|5742|(5, 5, 7)|var|float32
uop_5743 = relay.sinh(var_5742.astype('float32')) # shape=(5, 5, 7)
output = relay.Tuple([uop_5743,])
output2 = relay.Tuple([uop_5743,])
func_5754 = relay.Function([var_5742,], output)
mod['func_5754'] = func_5754
mod = relay.transform.InferType()(mod)
mutated_mod['func_5754'] = func_5754
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5755 = relay.var("var_5755", dtype = "float32", shape = (5, 5, 7))#candidate|5755|(5, 5, 7)|var|float32
func_5754_call = mutated_mod.get_global_var('func_5754')
call_5756 = func_5754_call(var_5755)
output = call_5756
func_5757 = relay.Function([var_5755], output)
mutated_mod['func_5757'] = func_5757
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2908_call = mod.get_global_var('func_2908')
func_2909_call = mutated_mod.get_global_var('func_2909')
call_5797 = func_2908_call()
call_5798 = func_2908_call()
func_3744_call = mod.get_global_var('func_3744')
func_3747_call = mutated_mod.get_global_var('func_3747')
var_5823 = relay.var("var_5823", dtype = "float32", shape = (480, 1))#candidate|5823|(480, 1)|var|float32
call_5822 = relay.TupleGetItem(func_3744_call(relay.reshape(var_5823.astype('float32'), [480,])), 0)
call_5824 = relay.TupleGetItem(func_3747_call(relay.reshape(var_5823.astype('float32'), [480,])), 0)
func_4564_call = mod.get_global_var('func_4564')
func_4569_call = mutated_mod.get_global_var('func_4569')
var_5829 = relay.var("var_5829", dtype = "uint16", shape = (165,))#candidate|5829|(165,)|var|uint16
const_5830 = relay.const([1.305793,-7.578344,5.035793,7.578308,-6.126508,-8.380269,-4.108724,5.147730,7.979257,5.723456,-0.774955,-9.995866,-4.388153,8.793325,-6.389630,8.808520,9.295680,-6.561984,6.042098,-3.269209,7.738491,3.585057,-4.436221,5.193932,2.174280,-4.136935,8.758604,-6.831985,0.989715,2.427872,9.853822,4.345998,-8.343618,7.830555,6.309908,9.048692,-8.770781,4.209109,-4.602615,-3.738646,4.090455,3.974103,-4.738747,-0.165918,9.772365,0.526438,-0.162010,2.475067,2.346660,4.327185,9.659427,8.972095,0.676506,-0.108518,0.606836,7.105556,5.341440,3.180699,-6.857233,1.646443,9.071455,-1.988840,8.758680,-5.880660,3.664137,-3.916453,8.976396,-9.889048,-4.910636,-5.888832,-3.386600,-2.101650,-3.040486,1.618800,3.618280,5.928576,4.749018,-7.451378,0.382432,1.155065,-9.592417,7.311155,-7.967377,-8.148325,-3.468552,-3.436734,-7.794507,-8.694409,4.203315,3.422844,-3.880236,3.124549,9.791986,6.406739,5.953670,2.851828,-6.741503,2.581914,-5.674127,0.053724,-8.893329,6.037169,-8.334833,2.541285,8.989557,-2.411326,5.755932,-1.570592,9.775739,-4.950175,-1.099174,6.661926,-7.976176,2.717073,-7.996105,-6.664345,5.739690,-8.437852,2.522517,5.130647,-2.595630,1.122483,1.505143,-9.255378,1.619171,7.105488,-2.090213,-5.478703,7.101636,-4.290675,-6.710261,-4.065351,-5.301790,3.372798,0.813226,6.154186,-2.115508,0.287078,-5.824208,-2.196294,-8.983155,5.248147,-7.175427,-9.380339,-0.489716,-3.734634,1.852890,-9.070533,2.385997,4.481044,-4.903648,-2.524024,1.328797,-8.849045,-2.674346,2.233917,8.529726,1.464770,-5.744564,0.312748,-5.865451,0.176479,9.226257,-4.027135,5.596356,1.388887,-2.275507,-9.076040,7.859507,1.435857,-0.178382,6.721278,5.961444,6.441055,-1.683629,-5.586702,-9.550540,-9.867198,9.660611,-7.505913,-6.630536,-4.798235,-1.193666,6.416075,-6.888002,8.577539,6.011762,-1.007165,9.608386,5.041208,-1.119658,2.835195,5.277387,-9.474096,-5.282744,-8.460820,-1.544310,5.928421,6.825937,6.435375,2.049528,-2.092442,5.003785,2.656736,6.617566,-1.814957,3.486256,-1.925802,0.260846,4.469144,-4.398869,-3.823822,6.100971,8.367608,-1.010684,-4.905150,4.097866,8.021773,7.961220,8.744565,7.326112,-1.860448,5.286007,7.207823,-5.777564,-7.844670,-8.107234,3.139101,-0.100309,4.708249,4.300989,-7.795029,-2.014496,0.229323,4.551681,-1.755986,-7.319657,7.513328,-7.184220,-5.462297,1.375360,3.409947,-4.040572,0.348520,6.416843,6.123003,-5.074619,7.976777,2.044550,-7.516192,0.729327,2.666142,-9.197107,-3.122154,-0.776402,5.299796,1.579977,3.261599,1.563088,9.290840,5.627235,-3.127575,-1.243703,0.151501,-4.328343,-3.568070,-8.773011,-4.062619,-8.500648,6.146995,1.782678,5.628336,2.290326,-1.157368,1.490215,1.550366,7.806392,1.705838,6.914743,9.545830,-1.384350,-2.080610,-6.222169,6.057010,2.656390,6.242952,7.338090,3.263980,4.446593,-4.080177,3.864031,-3.489640,9.224987,5.766669,-6.192910,-5.535219,-2.951339,6.176506,5.466461,-0.795295,-6.829362,-9.841526,-1.021211,-4.614468,2.877057,-6.421549,4.765870,0.092705,-2.166988,4.470088,-7.515969,-1.092477,-4.662946,6.963181,-6.773228,-5.206263,6.189002,9.109238,6.102503,2.049197,-1.792854,2.926711,-7.532003,-8.344876,7.621382,7.754997,5.997568,4.897831,-1.798380,-0.824068,-8.398001,4.103154,9.406119,2.724741,-9.223653,5.712087,-4.616405,-6.235672,-9.766474,-7.076419,4.205746,2.922673,1.310651,-7.782256,7.718811,-2.876289,-9.770537,5.182854,-4.881035,-1.551481,0.387257,2.324812,-1.656257,4.980636,-6.632332,7.633343,4.906383,3.795733,6.634061,-0.429889,-0.298917,-3.510513,-8.080205,-8.995947,-9.407787,-3.726368,-0.729430,8.681201,5.186162,9.692633,-0.388376,0.482695,2.144524,-3.107860,0.884654,0.015457,-1.273852,-3.508677,9.987200,7.329904,2.983380,-1.014372,-6.743255,-5.638712,-2.080735,8.331817,-1.854887,-0.509128,3.204390,-8.220428,-3.212272,-2.787730,1.878689,0.180350,5.805277,-0.055425,-7.022987,9.492277,1.195334,2.708060,9.814798,-7.268688,8.633446,-7.320085,-0.791935,9.869738,-4.350860,5.604155,-4.527499,3.033714,5.473493,-9.076928,-8.393692,-5.967766,-1.459207,0.689664,9.585000,2.205055,-4.281071,7.783604,8.513340,9.277516,8.627170,0.243001,-0.842694,3.600682,9.188339,1.575863,7.711610,9.929020,5.669227,-5.161110,-9.293838,-0.963250,9.007688,3.221064,-6.442787,-9.239510,9.973723,-3.570576,-6.489710,-2.315211,4.461990,5.234732,6.229804,-3.229181,9.080377,7.556589,1.533458,1.855825,-5.564394,5.107422,5.844019,-0.500033,1.946203,-0.422652,-7.502362,0.743324,8.335468,8.932797,0.270697,1.196546,-5.015794,0.042887,-9.726640,-1.902291,8.739233,-5.574439,3.003605,-4.345483,4.361756,5.525102,8.063599,4.992670,7.470136,7.488819,2.183264,-5.340725,-1.807810,5.526845,-5.367160,8.517435,6.187931,-1.157921,-2.168921,9.665238,-7.623527,8.004825,-5.210512,-4.905858,4.563831,-7.777232,-2.181341,-0.772904,-9.855208,-5.142247,4.475486,8.127646,4.914136,-2.286513,-7.434800,2.965628,-1.767357,-9.789552,4.902807,-6.133459,-2.882704,7.167226,3.652327,0.466732,8.801861,-3.237379,0.752406,8.936559,-9.073118,-3.384685,-2.866948,4.757332,7.239744,4.844993,-1.828850,4.605737,-7.004937,9.261914,1.831735,-8.270710,-8.032872,0.478788,-1.812412,-4.479758,-3.031871,1.990254,-1.589384,0.074837,-4.205240,4.541143,0.442745,9.518553,6.194446,6.534080,-7.767321,-2.525018,9.901508,-9.654296,-7.853782,-6.633432,-4.313660,7.719929,-4.893589,-7.571900,9.497389,8.777994,-2.206869,3.319081,1.677887,-2.101179,-4.742330,9.556416,9.352945,9.276346,-9.697290,-4.621029,4.191898,-6.455549,3.396722,-0.099429,-4.446114,9.803572,-2.059186,-9.759740,9.503893,8.780200,2.892204,2.150230,3.011621,9.336907,-4.372396,-6.989291,0.681550,8.343968,9.243357,-6.587829,9.119312,-8.170406,-3.552283,-8.580294,-4.504180,6.866096,-3.206639,-9.986223,2.546971,5.089908,3.962501,9.417134,-7.877179,0.330360,-3.998895,2.559022,3.919838,3.023342,3.078997,-6.384708,-1.281754,1.361631,-5.470023,-3.266780,1.511712,-2.764688,5.451228,-8.816330,-7.663865,1.927586,5.491139,4.439283,-1.657414,-7.623966,-4.752040,0.092434,-9.739699,4.875266,-6.445623,-3.181843,9.904408,4.103570,-8.069597,1.608501,2.751135,0.551259,8.503693,-0.738752,7.081281,7.731883,1.303636,-0.819220,-7.583959,-4.788910,3.481076,-2.081927,7.445380,3.601474,9.773599,6.216835,2.513414,9.982609,2.989777,3.077169,-1.009997,-9.423793,4.025849,2.993182,-6.204498,1.198423,-6.668736,-5.121285,4.672713,2.477511,-8.978579,1.685034,3.142965,8.303702,-6.488392,-1.709541,0.037459,-1.003483,7.961374,-7.923894,-1.747844,-9.680918,-3.402178,-4.999400,-5.709252,-0.947347,-5.971148,3.441706,5.751161,-6.787617,3.852857,-8.551390,4.017378,0.822173,8.140773,-4.160900,3.150535,-0.085609,-2.763162,4.727189,6.822176,4.591486,-2.626390,2.956860,4.340413,9.479214,-3.237842,-5.207908,5.943388,9.603609,0.114543,-7.802734,-6.151016,-6.618172,4.952412,5.130271,-2.034094,9.011260,7.441056,-9.097355,-0.779039,5.503991,0.805498,6.648011,-5.184528,6.474197,-9.172681,-6.328727,7.771425,6.771583,9.441725,3.054768,-2.795712,-0.894038,5.944455,-7.028348,-6.946392,4.000494,4.768473,-5.852058,0.921068,-7.230815,9.886403,-8.843401,8.639630,-2.995686,-1.190935,-5.673856,-9.522949,0.904832,7.488394,3.859665,9.322385,-7.834719,1.230139,-0.625363,-1.234745,5.460568,-6.267497,-2.967459,5.177009,-0.514611,-8.030865,-3.608102,6.986066,4.191412,-9.259946,-0.141953,7.328862,-5.829345,-6.468257,0.541513,2.055205,-0.933246,-5.343855,-5.520307,5.013532,4.367153,6.222127,-6.232809,4.722501,-7.889440,8.301267,-6.813792,7.362828,8.351656,3.277598,-7.775255,2.142053,-7.633184,-1.625580,-7.734739,5.346551,2.891629,6.946135,5.111371,5.605270,-4.147526,4.386361,5.923855,-4.574977,-6.767592,7.408929,-0.438443,8.581071,-9.842202,5.701559,-6.275937,2.479748,-1.404022,3.884326,5.405985,0.696220,2.641683,-5.007779,9.852159,-2.531137,5.307936,-1.710105,-9.823355,-6.965523,9.110263,4.685786,1.622484,-3.875979,-6.546238,8.782052,-0.214771,5.519435,8.398182,8.318808,-5.177911,-1.621716,6.775724,-7.503081,1.106318,0.230043,-9.120871,-4.001320,4.334824,5.415619,-1.949944,1.672492,8.743821,7.679548,2.737885,2.254372,-3.238501,3.990332,8.721298,4.643109,-9.900975,8.206170,-5.141007,-4.141619,-7.289815,5.674655,7.813307,-2.686481,8.750304,9.299855,-7.590897,9.988245,8.759461,-4.079030,-6.826257,8.307464,-0.003384,5.415410,-4.078202,-8.125491,-3.893171,6.748379,5.148892,-3.525061,7.309797,8.994504,2.698447,-7.264117,9.946029,8.602303,7.325901,-4.760921,9.619594,-8.636875,-2.404391,4.989072,-5.919817,-1.096899,-8.082934,-6.761949,-5.934088,5.649101,-4.732561,-9.267414,-0.615019,2.879747,-3.708549,-1.531988,-7.652938,3.745883,0.828414,1.647828,-2.240982,8.820208,-5.308307,-0.045607,1.919673,-7.896607,-2.442413,9.736172,-8.366654,-8.483359,8.290561,3.061589,5.687881,-8.820911,6.825840,-5.597339,1.642331,-8.835615,2.621077,-4.812476,-7.919571,1.321176,-8.834942,2.229516,2.807102,9.669870,-6.200908,-3.155607,-0.971288,3.624004,-2.576783,2.994682,2.952627,-9.715797,-4.504112,-6.534509,1.404473,6.809489,-2.612591,4.706650,-8.234866,-0.109097,4.989529,-4.093955,6.892916,6.496013,5.151185,3.992481,-3.953174,-7.851301,2.824913,5.628860,-3.040763,-5.055810,1.575266,-0.602908,-0.191381,9.522212,-8.344015,1.489682,6.588377,6.317770,7.494606,9.031111,-9.590936,8.845265,-5.427169,5.221477,4.835545,-4.504406,7.445794,0.212603,3.932858,1.128654,-4.318331,-8.319580,6.999174,7.213528,-3.795378,-0.876319,-7.623949,-3.662300,-1.926863,0.057512,0.864438,-0.826861,-8.709314,2.711173,-9.159988,6.349694,7.461820,-9.340432,-8.161504,-9.752152,5.228270,2.438670,-1.788922,-3.138762,6.044445,-4.207712,7.568282,5.086258,-5.323084,-0.798167,1.132039,-2.157928,5.709059,8.901116,-5.654508,-0.088374,-0.408666,4.530861,-5.267534,2.586907,7.982747,-8.567933,2.267880,-5.026094,-5.353150,-9.350124,1.443202,7.715941,-9.991065,-8.137067,-5.172636,-1.736719,-4.597668,2.908549,9.140156,3.813676,-6.749399,-2.499967,8.575502,-5.196094,4.537986,-5.276138,0.022018,5.253675,-3.104724,-6.175755,-0.454779,-4.405891,-7.141456,4.600928,-3.377605,-2.117156,1.814700,-7.339229,3.201682,-6.988206,-1.687282,5.723001,-0.158571,5.484701,-5.113901,7.541293,-1.356700,-8.601591,7.362302,-7.794246,-5.401476,5.786821,8.769010,-9.784236,-0.107650,0.770759,9.352913,-0.673701,9.745037,1.343676,2.156340,6.821375,-6.747195,-0.600017,9.794258,3.292555,2.455625,3.395173,2.784331,3.033887,6.989598,-0.488267,-5.292794,-5.840532,-1.781151,4.144316,1.704931,5.398088,-3.073635,0.743288,-7.110565,8.745114,6.131829,2.131527,7.048239,-1.945276,4.055325,4.171015,4.067830,-4.984315,1.087371,6.963732,-7.250983,-2.908360,-6.617774,-2.056552,9.288457,-2.637604,5.917513,5.600281,6.262946,0.979047,-2.494793,-7.349913,-8.665608,2.392472,-4.906021,-5.633521,3.533271,-9.269702,8.460293,-1.992944,-2.180046,4.532181,-3.981619,-9.625497,2.905276,3.419792,9.761093,1.568476,-7.816987,0.247595,-3.634878,9.824209,7.283754,5.533210,-9.076231,1.010847,5.864425,-0.990581,5.238938,4.534883,-5.570646,-5.739212,-0.940757,-8.733937,-0.764509,0.458678,0.993428,-8.086172,-4.402067,8.850539,9.244353,-7.572785,-6.913266,6.742526,2.811324,-6.123353,4.739011,0.840415,-4.202133,-3.901187,-4.122828,6.971126,-8.125909,-9.041789,-1.253909,5.557208,-1.453036,-5.000972,7.372246,-8.053703,-1.545354,-1.974505,9.461448,9.438698,7.455279,-4.616794,7.139499,-8.081194,8.896415,3.497103,-3.830788,2.866865,-6.186969,4.407824,7.260021,-6.252172,-5.464345,1.837350,9.700048,-8.096709,-8.960270,-0.137287,-1.471173,8.244641,8.200129,2.441577,-3.129290,-3.664381,-1.729478,-8.065135,1.115005,9.247025,3.418657,3.573857,6.785172,-6.425951,-1.398726,-1.776188,9.138526,-7.135250,-7.566778,-2.795656,-8.622686,1.525245,8.045527,0.394862,-6.032352,-6.545430,2.652560,-2.404166,9.533659,5.570533,5.976580,8.937280,3.626742,0.737706,3.564001,-5.434177,-0.700565,6.578647,4.518600,-5.801111,7.537539,-5.401390,-1.932399,-2.826785,9.520894,1.073961,5.636336,9.038526,-8.707541], dtype = "float64")#candidate|5830|(1232,)|const|float64
var_5831 = relay.var("var_5831", dtype = "float64", shape = (770,))#candidate|5831|(770,)|var|float64
call_5828 = relay.TupleGetItem(func_4564_call(relay.reshape(var_5829.astype('uint16'), [165,]), relay.reshape(const_5830.astype('float64'), [16, 7, 11]), relay.reshape(var_5831.astype('float64'), [10, 7, 11]), ), 4)
call_5832 = relay.TupleGetItem(func_4569_call(relay.reshape(var_5829.astype('uint16'), [165,]), relay.reshape(const_5830.astype('float64'), [16, 7, 11]), relay.reshape(var_5831.astype('float64'), [10, 7, 11]), ), 4)
func_5435_call = mod.get_global_var('func_5435')
func_5437_call = mutated_mod.get_global_var('func_5437')
var_5845 = relay.var("var_5845", dtype = "float32", shape = (195,))#candidate|5845|(195,)|var|float32
call_5844 = relay.TupleGetItem(func_5435_call(relay.reshape(var_5845.astype('float32'), [195,])), 0)
call_5846 = relay.TupleGetItem(func_5437_call(relay.reshape(var_5845.astype('float32'), [195,])), 0)
output = relay.Tuple([call_5797,call_5822,var_5823,call_5828,var_5829,const_5830,var_5831,call_5844,var_5845,])
output2 = relay.Tuple([call_5798,call_5824,var_5823,call_5832,var_5829,const_5830,var_5831,call_5846,var_5845,])
func_5848 = relay.Function([var_5823,var_5829,var_5831,var_5845,], output)
mod['func_5848'] = func_5848
mod = relay.transform.InferType()(mod)
var_5849 = relay.var("var_5849", dtype = "float32", shape = (480, 1))#candidate|5849|(480, 1)|var|float32
var_5850 = relay.var("var_5850", dtype = "uint16", shape = (165,))#candidate|5850|(165,)|var|uint16
var_5851 = relay.var("var_5851", dtype = "float64", shape = (770,))#candidate|5851|(770,)|var|float64
var_5852 = relay.var("var_5852", dtype = "float32", shape = (195,))#candidate|5852|(195,)|var|float32
output = func_5848(var_5849,var_5850,var_5851,var_5852,)
func_5853 = relay.Function([var_5849,var_5850,var_5851,var_5852,], output)
mutated_mod['func_5853'] = func_5853
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5155_call = mod.get_global_var('func_5155')
func_5157_call = mutated_mod.get_global_var('func_5157')
call_5857 = relay.TupleGetItem(func_5155_call(), 0)
call_5858 = relay.TupleGetItem(func_5157_call(), 0)
output = call_5857
output2 = call_5858
func_5870 = relay.Function([], output)
mod['func_5870'] = func_5870
mod = relay.transform.InferType()(mod)
mutated_mod['func_5870'] = func_5870
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5870_call = mutated_mod.get_global_var('func_5870')
call_5871 = func_5870_call()
output = call_5871
func_5872 = relay.Function([], output)
mutated_mod['func_5872'] = func_5872
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5037_call = mod.get_global_var('func_5037')
func_5039_call = mutated_mod.get_global_var('func_5039')
call_5892 = relay.TupleGetItem(func_5037_call(), 1)
call_5893 = relay.TupleGetItem(func_5039_call(), 1)
func_5321_call = mod.get_global_var('func_5321')
func_5323_call = mutated_mod.get_global_var('func_5323')
call_5902 = func_5321_call()
call_5903 = func_5321_call()
output = relay.Tuple([call_5892,call_5902,])
output2 = relay.Tuple([call_5893,call_5903,])
func_5906 = relay.Function([], output)
mod['func_5906'] = func_5906
mod = relay.transform.InferType()(mod)
output = func_5906()
func_5907 = relay.Function([], output)
mutated_mod['func_5907'] = func_5907
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4060_call = mod.get_global_var('func_4060')
func_4061_call = mutated_mod.get_global_var('func_4061')
call_5924 = relay.TupleGetItem(func_4060_call(), 1)
call_5925 = relay.TupleGetItem(func_4061_call(), 1)
func_4959_call = mod.get_global_var('func_4959')
func_4961_call = mutated_mod.get_global_var('func_4961')
const_5927 = relay.const([-8.034347,8.329588,3.512372,3.179270,6.092557,0.352594,9.517169,6.210990,0.250405,3.529826,5.856690,1.358791,-5.911531,1.513667,-4.488396,-3.224722,8.232008,4.831804,-0.268768,2.640616,4.731855,0.346813,-3.978689,9.000733,0.652277,6.822081,4.395684,5.981312,8.938087,-5.212056,-3.985235,-9.006577,-2.167560,-2.074709,-1.047912,-4.096346,-8.265927,6.037564,-7.136675,-9.515826,2.795774,-1.471535,-9.408091,3.980852,8.483880,-9.533885,-5.690468,4.281244,-6.666478,2.697488,6.703718,-1.737513,3.879917,-9.208318,-2.295934,9.591578,-8.403319,8.536596,-4.448942,-7.108177,-2.507069,6.188336,-0.240702,9.074554,-3.046317,6.325968,-4.216560,2.739806,1.103959,-7.432241,-9.139056,-8.998307,5.992159,-1.464778,-7.728783,6.602742,3.998382,1.185046,5.164994,-0.866942,-9.152574,5.911945,5.995872,-3.307772,-0.464835,-1.098253,6.261954,-8.730619,-8.489772,-8.639658,1.826122,4.734803,-1.557926,-8.300732,2.218703,5.810721,9.934358,9.181687,3.154998,2.858256,-3.620850,-7.883255,-7.372071,-0.734846,6.177191,8.028941,0.025494,5.998062,-8.313145,2.383075,-2.995832,0.926066,-5.160850,-9.911495,-1.577361,8.806735,-8.299359,-4.677838,-3.615433,1.899304,3.292748,7.790182,-3.503006,-9.586200,-3.098868,-4.277344,-3.460316,-7.163222,-6.457971,-5.835232,1.041101,7.604326,-4.733756,-9.619849,5.479757,-7.581168,9.202701,9.446319,5.050900,-9.432032,4.919775,-2.870848,-6.474968,-4.652500,-0.479644,8.731577,1.870279,5.586544,9.947667,-7.303886,9.297531,5.475672,-7.064886,-5.034406,3.312315,-6.838396,-7.140041,-7.984692,3.667770,0.430532,-2.012494,0.194117,-2.537901,5.854142,3.593753,-3.505900,-0.914525,8.849923,-9.524389,-9.574086,-6.252111,-8.837719,-1.468885,0.647529,-3.880474,9.836763,3.235660,-4.397280,5.750140,1.659375,3.978982,4.579215,-9.799119,7.005566,2.890522,-1.613114,-6.327717,-9.510497,6.288359,-8.179607,-0.079029,-4.487002,0.522174,7.125583,-2.942920,6.819596,-1.874476,-4.486886,1.986016,5.816125,3.962928,-5.982037,3.330465,-3.393649,-2.264928,-1.598138,-2.398600,-3.810188,3.671956,-8.202200,6.598197,9.007904,4.967629,-4.197169,0.429240,8.196588,0.702324,-5.044104,-1.389262,1.764742,-8.277026,6.543603,4.889362,-4.447972,-0.131761,-1.946742,-9.057784,2.251656,9.614069,-4.639960,-8.402449,-2.714848,2.406400,-9.162477,6.515176,-9.411656,4.971956,9.035427,0.182356,3.767820,-0.863470,0.257581,5.786019,-9.260435,-8.903992,-7.644328,-1.469855,-9.278801,0.296503,4.748245,9.179154,-9.296226,-0.666556,2.427338,0.554358,8.000589,-2.193247,-5.619184,4.505224,8.294856,1.457616,-8.186719,-2.892206,1.435615,5.271604,-1.579051,-8.229650,7.598188,-0.264211,4.778255,5.491797,-2.381582,9.609988,-5.596118,1.906970,0.750003,3.906763,1.062479,-8.844670,5.127220,3.393152,-9.701680,2.474658,-0.992849,-2.932316,2.320533,-1.710394,-4.351665,6.626685,8.716675,-3.857360,3.789684,-1.960126,7.359528,-7.355174,9.372343,-8.310040,9.961600,2.504673,-8.096976,0.788917,-0.847097,6.946585,-1.937557,9.607474,2.083504,-1.228575,9.574474,1.154565,4.246792,1.840815,-6.255371,2.445649,8.527702,5.238323,-5.159268,-4.860869,0.964269,2.769840,-7.920260,9.825648,-3.308652,-0.968743,-4.309246,-9.703780,5.254940,-0.882023,-6.098914,-0.982275,9.792359,8.690502,-0.549270,-5.846630,2.117675,1.486862,-2.045921,7.671106,-3.433840,-2.534474,-1.180225,0.986914,-7.694649,9.542737,1.606121,8.845179,8.567875,-9.853094,-0.847288,1.532042,4.784449,4.763264,4.350770,-8.154139,-9.323995,9.579600,-3.885946,3.277418,-4.639830,6.946058,-1.300359,-7.022207,6.898174,4.151179,7.612243,3.018446,-2.286037,-4.467640,2.680085,1.146623,3.283821,-2.469225,0.460595,2.578017,-5.929196,4.867159,5.403020,6.017267,7.297398,-9.278115,9.163319,0.726691,-5.902043,-4.304407,-6.449705,7.380522,-6.365230,2.054773,5.095243,2.423196,2.950410,-2.687738,2.054542,9.235375,3.767783,8.958552,7.752484,-9.275015,5.073325,-3.357458,-7.466261,0.623438,1.735186,5.202712,9.926220,0.839675,6.994602,1.705229,5.620590,3.249178,-0.193433,5.736672,6.279050,6.038561,-2.114262,1.214471,-4.088885,4.961066,5.179132,-5.874654,-7.862360,-2.577439,-2.811198,-3.950315,-3.866660,-5.642391,-8.152555,3.942955,8.583489,-7.715713,-4.872158,-4.483174,4.067097,-9.353322,-0.316814,5.778939,-8.231610,2.067393,-3.080807,-7.380709,0.601061,2.618707,7.258566,-7.413707,-7.187703,-4.920597,-2.204175,2.887828,2.481170,-9.722892,-0.944774,-7.241087,5.330003,5.923306,0.898572,1.771369,-5.389503,-7.418857,9.609499,-1.318213,-7.712277,-7.565668,-4.847057], dtype = "float64")#candidate|5927|(462,)|const|float64
call_5926 = relay.TupleGetItem(func_4959_call(relay.reshape(const_5927.astype('float64'), [6, 7, 11])), 0)
call_5928 = relay.TupleGetItem(func_4961_call(relay.reshape(const_5927.astype('float64'), [6, 7, 11])), 0)
var_5943 = relay.var("var_5943", dtype = "float64", shape = (3, 420))#candidate|5943|(3, 420)|var|float64
bop_5944 = relay.not_equal(call_5924.astype('bool'), relay.reshape(var_5943.astype('bool'), relay.shape_of(call_5924))) # shape=(3, 420)
bop_5947 = relay.not_equal(call_5925.astype('bool'), relay.reshape(var_5943.astype('bool'), relay.shape_of(call_5925))) # shape=(3, 420)
output = relay.Tuple([call_5926,const_5927,bop_5944,])
output2 = relay.Tuple([call_5928,const_5927,bop_5947,])
func_5949 = relay.Function([var_5943,], output)
mod['func_5949'] = func_5949
mod = relay.transform.InferType()(mod)
var_5950 = relay.var("var_5950", dtype = "float64", shape = (3, 420))#candidate|5950|(3, 420)|var|float64
output = func_5949(var_5950)
func_5951 = relay.Function([var_5950], output)
mutated_mod['func_5951'] = func_5951
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4968_call = mod.get_global_var('func_4968')
func_4969_call = mutated_mod.get_global_var('func_4969')
call_6008 = relay.TupleGetItem(func_4968_call(), 0)
call_6009 = relay.TupleGetItem(func_4969_call(), 0)
func_3986_call = mod.get_global_var('func_3986')
func_3988_call = mutated_mod.get_global_var('func_3988')
call_6013 = func_3986_call()
call_6014 = func_3986_call()
output = relay.Tuple([call_6008,call_6013,])
output2 = relay.Tuple([call_6009,call_6014,])
func_6017 = relay.Function([], output)
mod['func_6017'] = func_6017
mod = relay.transform.InferType()(mod)
mutated_mod['func_6017'] = func_6017
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6017_call = mutated_mod.get_global_var('func_6017')
call_6018 = func_6017_call()
output = call_6018
func_6019 = relay.Function([], output)
mutated_mod['func_6019'] = func_6019
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4871_call = mod.get_global_var('func_4871')
func_4873_call = mutated_mod.get_global_var('func_4873')
call_6020 = func_4871_call()
call_6021 = func_4871_call()
func_4815_call = mod.get_global_var('func_4815')
func_4817_call = mutated_mod.get_global_var('func_4817')
call_6023 = relay.TupleGetItem(func_4815_call(), 2)
call_6024 = relay.TupleGetItem(func_4817_call(), 2)
func_412_call = mod.get_global_var('func_412')
func_414_call = mutated_mod.get_global_var('func_414')
call_6036 = relay.TupleGetItem(func_412_call(relay.reshape(call_6023.astype('float64'), [6, 14, 15])), 0)
call_6037 = relay.TupleGetItem(func_414_call(relay.reshape(call_6023.astype('float64'), [6, 14, 15])), 0)
func_2786_call = mod.get_global_var('func_2786')
func_2787_call = mutated_mod.get_global_var('func_2787')
call_6039 = func_2786_call()
call_6040 = func_2786_call()
uop_6042 = relay.sin(call_6020.astype('float64')) # shape=(1, 7, 11)
uop_6044 = relay.sin(call_6021.astype('float64')) # shape=(1, 7, 11)
func_5870_call = mod.get_global_var('func_5870')
func_5872_call = mutated_mod.get_global_var('func_5872')
call_6064 = func_5870_call()
call_6065 = func_5870_call()
bop_6066 = relay.mod(call_6039.astype('float64'), relay.reshape(call_6020.astype('float64'), relay.shape_of(call_6039))) # shape=(1, 7, 11)
bop_6069 = relay.mod(call_6040.astype('float64'), relay.reshape(call_6021.astype('float64'), relay.shape_of(call_6040))) # shape=(1, 7, 11)
func_1475_call = mod.get_global_var('func_1475')
func_1477_call = mutated_mod.get_global_var('func_1477')
var_6073 = relay.var("var_6073", dtype = "float32", shape = (420,))#candidate|6073|(420,)|var|float32
call_6072 = relay.TupleGetItem(func_1475_call(relay.reshape(var_6073.astype('float32'), [14, 10, 3])), 2)
call_6074 = relay.TupleGetItem(func_1477_call(relay.reshape(var_6073.astype('float32'), [14, 10, 3])), 2)
func_5870_call = mod.get_global_var('func_5870')
func_5872_call = mutated_mod.get_global_var('func_5872')
call_6084 = func_5870_call()
call_6085 = func_5870_call()
func_5014_call = mod.get_global_var('func_5014')
func_5016_call = mutated_mod.get_global_var('func_5016')
call_6093 = relay.TupleGetItem(func_5014_call(), 0)
call_6094 = relay.TupleGetItem(func_5016_call(), 0)
func_5949_call = mod.get_global_var('func_5949')
func_5951_call = mutated_mod.get_global_var('func_5951')
call_6096 = relay.TupleGetItem(func_5949_call(relay.reshape(call_6036.astype('float64'), [3, 420])), 0)
call_6097 = relay.TupleGetItem(func_5951_call(relay.reshape(call_6036.astype('float64'), [3, 420])), 0)
output = relay.Tuple([call_6023,call_6036,uop_6042,call_6064,bop_6066,call_6072,var_6073,call_6084,call_6093,call_6096,])
output2 = relay.Tuple([call_6024,call_6037,uop_6044,call_6065,bop_6069,call_6074,var_6073,call_6085,call_6094,call_6097,])
func_6102 = relay.Function([var_6073,], output)
mod['func_6102'] = func_6102
mod = relay.transform.InferType()(mod)
mutated_mod['func_6102'] = func_6102
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6103 = relay.var("var_6103", dtype = "float32", shape = (420,))#candidate|6103|(420,)|var|float32
func_6102_call = mutated_mod.get_global_var('func_6102')
call_6104 = func_6102_call(var_6103)
output = call_6104
func_6105 = relay.Function([var_6103], output)
mutated_mod['func_6105'] = func_6105
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6107 = relay.const([[[7.814499,0.300013,-8.572958,2.552777,0.392919,-7.435503,-0.514116,-4.253375,-7.757439,-8.467665,9.096734,4.155003,9.425429,-7.411611,6.830086,-5.428862],[-9.982291,7.749733,-3.209598,-2.170284,-4.877674,6.259154,3.106254,-7.365530,3.479922,6.930021,4.061755,3.028990,-7.211053,-4.051749,-4.462308,-1.480643],[9.616262,9.162974,-7.017446,3.662621,-4.913401,-4.788404,-4.528734,0.587239,7.855641,-4.675273,-0.682401,-4.218397,-0.487621,-7.909169,7.490408,4.875403],[0.449791,-3.870372,8.993236,-2.902363,-4.420656,2.635699,6.381481,-6.461135,-0.089047,9.724821,2.905049,7.987681,-4.052632,-8.006092,-2.829087,-9.922477],[-4.280699,-8.430382,-4.566585,0.959178,2.511080,5.971736,-2.348727,9.245925,5.330932,5.329185,-9.829352,-6.767732,-5.256623,-7.170664,-3.476527,-3.872925]]], dtype = "float64")#candidate|6107|(1, 5, 16)|const|float64
var_6108 = relay.var("var_6108", dtype = "float64", shape = (3, 5, 16))#candidate|6108|(3, 5, 16)|var|float64
bop_6109 = relay.floor_divide(const_6107.astype('float64'), var_6108.astype('float64')) # shape=(3, 5, 16)
output = bop_6109
output2 = bop_6109
func_6115 = relay.Function([var_6108,], output)
mod['func_6115'] = func_6115
mod = relay.transform.InferType()(mod)
mutated_mod['func_6115'] = func_6115
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6116 = relay.var("var_6116", dtype = "float64", shape = (3, 5, 16))#candidate|6116|(3, 5, 16)|var|float64
func_6115_call = mutated_mod.get_global_var('func_6115')
call_6117 = func_6115_call(var_6116)
output = call_6117
func_6118 = relay.Function([var_6116], output)
mutated_mod['func_6118'] = func_6118
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4060_call = mod.get_global_var('func_4060')
func_4061_call = mutated_mod.get_global_var('func_4061')
call_6132 = relay.TupleGetItem(func_4060_call(), 2)
call_6133 = relay.TupleGetItem(func_4061_call(), 2)
output = call_6132
output2 = call_6133
func_6138 = relay.Function([], output)
mod['func_6138'] = func_6138
mod = relay.transform.InferType()(mod)
mutated_mod['func_6138'] = func_6138
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6138_call = mutated_mod.get_global_var('func_6138')
call_6139 = func_6138_call()
output = call_6139
func_6140 = relay.Function([], output)
mutated_mod['func_6140'] = func_6140
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4276_call = mod.get_global_var('func_4276')
func_4277_call = mutated_mod.get_global_var('func_4277')
call_6141 = relay.TupleGetItem(func_4276_call(), 0)
call_6142 = relay.TupleGetItem(func_4277_call(), 0)
func_4656_call = mod.get_global_var('func_4656')
func_4658_call = mutated_mod.get_global_var('func_4658')
call_6143 = func_4656_call()
call_6144 = func_4656_call()
output = relay.Tuple([call_6141,call_6143,])
output2 = relay.Tuple([call_6142,call_6144,])
func_6152 = relay.Function([], output)
mod['func_6152'] = func_6152
mod = relay.transform.InferType()(mod)
output = func_6152()
func_6153 = relay.Function([], output)
mutated_mod['func_6153'] = func_6153
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6167 = relay.var("var_6167", dtype = "float64", shape = (15, 2, 8))#candidate|6167|(15, 2, 8)|var|float64
uop_6168 = relay.sigmoid(var_6167.astype('float64')) # shape=(15, 2, 8)
output = uop_6168
output2 = uop_6168
func_6172 = relay.Function([var_6167,], output)
mod['func_6172'] = func_6172
mod = relay.transform.InferType()(mod)
var_6173 = relay.var("var_6173", dtype = "float64", shape = (15, 2, 8))#candidate|6173|(15, 2, 8)|var|float64
output = func_6172(var_6173)
func_6174 = relay.Function([var_6173], output)
mutated_mod['func_6174'] = func_6174
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5014_call = mod.get_global_var('func_5014')
func_5016_call = mutated_mod.get_global_var('func_5016')
call_6346 = relay.TupleGetItem(func_5014_call(), 0)
call_6347 = relay.TupleGetItem(func_5016_call(), 0)
output = relay.Tuple([call_6346,])
output2 = relay.Tuple([call_6347,])
func_6353 = relay.Function([], output)
mod['func_6353'] = func_6353
mod = relay.transform.InferType()(mod)
output = func_6353()
func_6354 = relay.Function([], output)
mutated_mod['func_6354'] = func_6354
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5578_call = mod.get_global_var('func_5578')
func_5579_call = mutated_mod.get_global_var('func_5579')
call_6374 = relay.TupleGetItem(func_5578_call(), 1)
call_6375 = relay.TupleGetItem(func_5579_call(), 1)
func_412_call = mod.get_global_var('func_412')
func_414_call = mutated_mod.get_global_var('func_414')
call_6381 = relay.TupleGetItem(func_412_call(relay.reshape(call_6374.astype('float64'), [6, 14, 15])), 1)
call_6382 = relay.TupleGetItem(func_414_call(relay.reshape(call_6374.astype('float64'), [6, 14, 15])), 1)
func_2553_call = mod.get_global_var('func_2553')
func_2560_call = mutated_mod.get_global_var('func_2560')
var_6390 = relay.var("var_6390", dtype = "int64", shape = (1200,))#candidate|6390|(1200,)|var|int64
var_6391 = relay.var("var_6391", dtype = "float32", shape = (195, 1))#candidate|6391|(195, 1)|var|float32
const_6392 = relay.const([-1,6,10,-5,1,-2,6,4,4,2,3,-2,-5,6,-7,3,6,7,5,2,2,6,6,7,3,7,9,3,-2,-9,-1,-6,4,-4,-7,-4,2,7,2,-7,-3,5,6,6,-6,-8,9,-6,9,-9,-8,-7,5,-8,8,-3,10,3,-5,-7,-3,-2,8,5,-9,6,-9,8,9,-10,9,-7,1,-8,-8,9,-7,4,-8,7,-5,-5,-7,6,-6,4,2,-8,-1,9,-1,-3,-1,8,-5,-7,9,5,-4,4,9,-9,9,-4,-4,-2,-3,-5,-1,4,-7,6,-4,2,4,-9,-3,-4,6,3,-4,6,7,4,6,3,10,9,-2,3,8,9,-10,2,-2,7,9,5,-5,-1,6,4,5,9,8,-3,6,8,4,4,-6,-4,-2,-8,-6,8,4,8,-7,7,3,-10,2,6,9], dtype = "uint8")#candidate|6392|(165,)|const|uint8
var_6393 = relay.var("var_6393", dtype = "uint32", shape = (1, 520))#candidate|6393|(1, 520)|var|uint32
call_6389 = relay.TupleGetItem(func_2553_call(relay.reshape(var_6390.astype('int64'), [10, 10, 12]), relay.reshape(var_6390.astype('int64'), [10, 10, 12]), relay.reshape(var_6391.astype('float32'), [195,]), relay.reshape(const_6392.astype('uint8'), [165,]), relay.reshape(var_6393.astype('uint32'), [520,]), ), 1)
call_6394 = relay.TupleGetItem(func_2560_call(relay.reshape(var_6390.astype('int64'), [10, 10, 12]), relay.reshape(var_6390.astype('int64'), [10, 10, 12]), relay.reshape(var_6391.astype('float32'), [195,]), relay.reshape(const_6392.astype('uint8'), [165,]), relay.reshape(var_6393.astype('uint32'), [520,]), ), 1)
func_3675_call = mod.get_global_var('func_3675')
func_3677_call = mutated_mod.get_global_var('func_3677')
var_6401 = relay.var("var_6401", dtype = "uint32", shape = (294,))#candidate|6401|(294,)|var|uint32
call_6400 = relay.TupleGetItem(func_3675_call(relay.reshape(var_6401.astype('uint32'), [7, 14, 3])), 0)
call_6402 = relay.TupleGetItem(func_3677_call(relay.reshape(var_6401.astype('uint32'), [7, 14, 3])), 0)
bop_6404 = relay.bitwise_or(var_6391.astype('uint16'), const_6392.astype('uint16')) # shape=(195, 165)
output = relay.Tuple([call_6374,call_6381,call_6389,var_6390,var_6393,call_6400,var_6401,bop_6404,])
output2 = relay.Tuple([call_6375,call_6382,call_6394,var_6390,var_6393,call_6402,var_6401,bop_6404,])
func_6410 = relay.Function([var_6390,var_6391,var_6393,var_6401,], output)
mod['func_6410'] = func_6410
mod = relay.transform.InferType()(mod)
mutated_mod['func_6410'] = func_6410
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6410_call = mutated_mod.get_global_var('func_6410')
var_6412 = relay.var("var_6412", dtype = "int64", shape = (1200,))#candidate|6412|(1200,)|var|int64
var_6413 = relay.var("var_6413", dtype = "float32", shape = (195, 1))#candidate|6413|(195, 1)|var|float32
var_6414 = relay.var("var_6414", dtype = "uint32", shape = (1, 520))#candidate|6414|(1, 520)|var|uint32
var_6415 = relay.var("var_6415", dtype = "uint32", shape = (294,))#candidate|6415|(294,)|var|uint32
call_6411 = func_6410_call(var_6412,var_6413,var_6414,var_6415,)
output = call_6411
func_6416 = relay.Function([var_6412,var_6413,var_6414,var_6415,], output)
mutated_mod['func_6416'] = func_6416
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4656_call = mod.get_global_var('func_4656')
func_4658_call = mutated_mod.get_global_var('func_4658')
call_6469 = func_4656_call()
call_6470 = func_4656_call()
func_5435_call = mod.get_global_var('func_5435')
func_5437_call = mutated_mod.get_global_var('func_5437')
var_6496 = relay.var("var_6496", dtype = "float32", shape = (195,))#candidate|6496|(195,)|var|float32
call_6495 = relay.TupleGetItem(func_5435_call(relay.reshape(var_6496.astype('float32'), [195,])), 3)
call_6497 = relay.TupleGetItem(func_5437_call(relay.reshape(var_6496.astype('float32'), [195,])), 3)
func_5037_call = mod.get_global_var('func_5037')
func_5039_call = mutated_mod.get_global_var('func_5039')
call_6501 = relay.TupleGetItem(func_5037_call(), 2)
call_6502 = relay.TupleGetItem(func_5039_call(), 2)
output = relay.Tuple([call_6469,call_6495,var_6496,call_6501,])
output2 = relay.Tuple([call_6470,call_6497,var_6496,call_6502,])
func_6520 = relay.Function([var_6496,], output)
mod['func_6520'] = func_6520
mod = relay.transform.InferType()(mod)
mutated_mod['func_6520'] = func_6520
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6521 = relay.var("var_6521", dtype = "float32", shape = (195,))#candidate|6521|(195,)|var|float32
func_6520_call = mutated_mod.get_global_var('func_6520')
call_6522 = func_6520_call(var_6521)
output = call_6522
func_6523 = relay.Function([var_6521], output)
mutated_mod['func_6523'] = func_6523
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5906_call = mod.get_global_var('func_5906')
func_5907_call = mutated_mod.get_global_var('func_5907')
call_6607 = relay.TupleGetItem(func_5906_call(), 1)
call_6608 = relay.TupleGetItem(func_5907_call(), 1)
output = call_6607
output2 = call_6608
func_6609 = relay.Function([], output)
mod['func_6609'] = func_6609
mod = relay.transform.InferType()(mod)
mutated_mod['func_6609'] = func_6609
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6609_call = mutated_mod.get_global_var('func_6609')
call_6610 = func_6609_call()
output = call_6610
func_6611 = relay.Function([], output)
mutated_mod['func_6611'] = func_6611
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4341_call = mod.get_global_var('func_4341')
func_4342_call = mutated_mod.get_global_var('func_4342')
call_6656 = func_4341_call()
call_6657 = func_4341_call()
output = call_6656
output2 = call_6657
func_6663 = relay.Function([], output)
mod['func_6663'] = func_6663
mod = relay.transform.InferType()(mod)
output = func_6663()
func_6664 = relay.Function([], output)
mutated_mod['func_6664'] = func_6664
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4815_call = mod.get_global_var('func_4815')
func_4817_call = mutated_mod.get_global_var('func_4817')
call_6729 = relay.TupleGetItem(func_4815_call(), 1)
call_6730 = relay.TupleGetItem(func_4817_call(), 1)
output = call_6729
output2 = call_6730
func_6739 = relay.Function([], output)
mod['func_6739'] = func_6739
mod = relay.transform.InferType()(mod)
output = func_6739()
func_6740 = relay.Function([], output)
mutated_mod['func_6740'] = func_6740
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6741 = relay.var("var_6741", dtype = "int16", shape = (13, 8, 11))#candidate|6741|(13, 8, 11)|var|int16
var_6742 = relay.var("var_6742", dtype = "int16", shape = (13, 8, 11))#candidate|6742|(13, 8, 11)|var|int16
bop_6743 = relay.right_shift(var_6741.astype('int16'), relay.reshape(var_6742.astype('int16'), relay.shape_of(var_6741))) # shape=(13, 8, 11)
output = bop_6743
output2 = bop_6743
func_6752 = relay.Function([var_6741,var_6742,], output)
mod['func_6752'] = func_6752
mod = relay.transform.InferType()(mod)
mutated_mod['func_6752'] = func_6752
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6752_call = mutated_mod.get_global_var('func_6752')
var_6754 = relay.var("var_6754", dtype = "int16", shape = (13, 8, 11))#candidate|6754|(13, 8, 11)|var|int16
var_6755 = relay.var("var_6755", dtype = "int16", shape = (13, 8, 11))#candidate|6755|(13, 8, 11)|var|int16
call_6753 = func_6752_call(var_6754,var_6755,)
output = call_6753
func_6756 = relay.Function([var_6754,var_6755,], output)
mutated_mod['func_6756'] = func_6756
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3986_call = mod.get_global_var('func_3986')
func_3988_call = mutated_mod.get_global_var('func_3988')
call_6820 = func_3986_call()
call_6821 = func_3986_call()
output = relay.Tuple([call_6820,])
output2 = relay.Tuple([call_6821,])
func_6822 = relay.Function([], output)
mod['func_6822'] = func_6822
mod = relay.transform.InferType()(mod)
mutated_mod['func_6822'] = func_6822
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6822_call = mutated_mod.get_global_var('func_6822')
call_6823 = func_6822_call()
output = call_6823
func_6824 = relay.Function([], output)
mutated_mod['func_6824'] = func_6824
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5870_call = mod.get_global_var('func_5870')
func_5872_call = mutated_mod.get_global_var('func_5872')
call_6835 = func_5870_call()
call_6836 = func_5870_call()
output = call_6835
output2 = call_6836
func_6839 = relay.Function([], output)
mod['func_6839'] = func_6839
mod = relay.transform.InferType()(mod)
output = func_6839()
func_6840 = relay.Function([], output)
mutated_mod['func_6840'] = func_6840
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3644_call = mod.get_global_var('func_3644')
func_3646_call = mutated_mod.get_global_var('func_3646')
call_6844 = relay.TupleGetItem(func_3644_call(), 2)
call_6845 = relay.TupleGetItem(func_3646_call(), 2)
output = relay.Tuple([call_6844,])
output2 = relay.Tuple([call_6845,])
func_6851 = relay.Function([], output)
mod['func_6851'] = func_6851
mod = relay.transform.InferType()(mod)
mutated_mod['func_6851'] = func_6851
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6851_call = mutated_mod.get_global_var('func_6851')
call_6852 = func_6851_call()
output = call_6852
func_6853 = relay.Function([], output)
mutated_mod['func_6853'] = func_6853
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6138_call = mod.get_global_var('func_6138')
func_6140_call = mutated_mod.get_global_var('func_6140')
call_6890 = func_6138_call()
call_6891 = func_6138_call()
uop_6894 = relay.acosh(call_6890.astype('float64')) # shape=(1, 1260)
uop_6896 = relay.acosh(call_6891.astype('float64')) # shape=(1, 1260)
uop_6898 = relay.tan(call_6890.astype('float32')) # shape=(1, 1260)
uop_6900 = relay.tan(call_6891.astype('float32')) # shape=(1, 1260)
bop_6909 = relay.bitwise_or(uop_6898.astype('int8'), relay.reshape(uop_6894.astype('int8'), relay.shape_of(uop_6898))) # shape=(1, 1260)
bop_6912 = relay.bitwise_or(uop_6900.astype('int8'), relay.reshape(uop_6896.astype('int8'), relay.shape_of(uop_6900))) # shape=(1, 1260)
bop_6916 = relay.floor_mod(bop_6909.astype('float32'), relay.reshape(uop_6898.astype('float32'), relay.shape_of(bop_6909))) # shape=(1, 1260)
bop_6919 = relay.floor_mod(bop_6912.astype('float32'), relay.reshape(uop_6900.astype('float32'), relay.shape_of(bop_6912))) # shape=(1, 1260)
func_2553_call = mod.get_global_var('func_2553')
func_2560_call = mutated_mod.get_global_var('func_2560')
const_6923 = relay.const([-7,5,4,-7,-9,8,-7,8,5,10,-1,-1,-9,-6,-10,-9,8,6,3,-2,8,-10,10,-5,-5,-6,-9,-7,-5,-9,-9,-1,2,6,-3,-8,8,-6,-5,-5,7,7,8,6,8,-8,6,2,7,5,-6,-2,2,7,10,-10,-3,3,-2,5,-6,6,10,-2,-8,10,-4,10,-10,-5,-9,7,1,-1,9,-4,-9,-1,-10,8,1,-4,8,-1,3,1,1,3,-6,-7,-2,-1,5,8,4,5,-3,2,-5,4,-1,9,10,3,8,-2,5,9,-7,5,-6,1,-9,3,-8,-3,9,-8,-6,7,-3,2,6,7,-2,-7,3,8,-10,6,-5,4,1,-4,-3,10,-4,5,6,1,2,-6,5,9,-4,-1,5,4,-7,2,-1,-9,7,-5,4,2,-6,-5,4,-6,8,-7,5,9,-2,-4,-5,10,-7,-8,-2,10,-1,-9,-6,5,-2,-7,6,9,-8,2,7,9,8,-8,-10,-6,-1,7,-10,3,7,-1,7,10,4,-3,6,7,-9,-2,-3,-9,-5,-4,-9,9,9,8,9,-1,9,-5,6,-9,-9,2,-1,-6,7,1,7,1,-9,1,-6,10,8,2,-9,7,-2,-10,1,-9,-6,-6,10,10,-6,-9,5,10,7,7,5,-4,4,9,-9,-4,9,-9,-7,10,10,-8,1,8,3,3,-1,4,10,1,-2,-2,6,1,10,9,-3,7,-8,-1,2,9,-1,-9,8,10,-6,2,6,3,5,8,-10,1,1,9,5,7,10,-7,-5,-8,-9,-10,4,-1,-7,6,-3,5,6,-7,1,7,7,2,10,2,-10,4,-8,-2,5,4,4,2,-5,-3,1,10,5,-2,1,6,-6,5,7,-9,-5,10,4,1,1,6,5,9,-7,5,-5,-9,-3,-5,2,-5,-8,-8,9,2,5,-1,5,2,-1,1,-10,-8,-7,-5,8,-7,7,9,-7,3,10,-4,-3,8,-3,-3,1,8,-4,-6,3,7,1,3,8,1,1,4,2,-10,-2,10,4,-3,8,-9,5,10,-3,-3,10,-10,1,-7,-5,-8,1,2,3,-2,-5,4,10,-5,7,-5,-5,-2,-6,-9,-5,9,4,-1,-7,10,7,-3,7,9,7,3,-6,8,1,2,4,-5,-3,7,-1,-3,10,5,-3,1,8,-3,8,-6,-9,-8,2,-1,-10,-6,-7,9,-4,-7,9,-10,-4,1,4,-3,-8,6,-2,6,9,-3,10,6,-6,-2,2,4,-4,-8,-4,1,-9,3,-6,-5,10,1,-10,3,-1,3,-6,-9,-3,9,7,-3,-9,-2,-7,1,-3,-7,-1,-10,-5,8,-1,-4,-6,-4,-6,-1,-5,-1,-10,-10,-7,7,-7,-2,2,-6,7,-7,-6,7,-10,-7,1,-7,-8,-5,4,-5,-1,-5,-7,5,-4,8,-5,-2,-3,-10,-4,-7,-6,9,8,-2,1,1,-2,-1,-9,6,3,-7,-6,-3,5,-5,4,-2,-8,-1,-6,4,-9,4,-5,9,8,-4,-6,5,7,-4,-3,-3,-5,-9,-5,8,-7,1,5,-10,10,7,1,7,3,-6,8,-9,-2,-3,-9,-2,-5,2,6,3,6,-2,-6,-2,10,7,-7,-2,-3,9,-8,-10,-7,5,4,9,-9,-6,2,4,-8,-2,5,8,-3,-10,10,-5,4,-8,5,-10,-10,9,-6,6,2,-1,-3,5,-5,-6,8,-2,1,-5,-7,3,3,1,-3,-5,4,3,6,3,6,-8,1,9,10,-10,-8,6,3,1,4,-4,-6,6,-7,-5,10,-7,3,-5,-9,2,6,-9,7,8,7,-10,8,-5,4,-8,-5,-5,3,3,-5,-1,3,3,-1,-1,-10,3,6,-3,-10,-5,7,5,-2,-2,-3,9,5,8,-10,4,10,7,7,-4,-2,4,-1,-9,-9,-9,6,-10,9,-4,-7,-10,-8,-2,-9,-4,7,10,8,10,-10,10,6,-4,-10,-5,-9,-7,-2,-1,-5,-3,2,-10,-3,-8,9,9,-9,-2,1,9,2,6,5,6,2,-2,-3,5,-5,8,-10,-1,10,-2,-3,-3,-7,1,-10,-1,6,-9,8,-6,-6,6,3,-6,5,8,-9,4,-1,9,2,4,-3,-1,-6,1,3,-9,-9,3,-5,1,-3,-3,10,6,1,-3,4,5,-1,5,6,-2,10,-8,-6,8,-3,-4,2,6,3,-6,-3,10,-9,-8,8,1,-7,1,-9,-5,-10,7,10,-5,-5,1,-4,-2,5,-10,-3,-8,-2,-6,-10,3,-9,-1,-6,-3,9,-8,6,-6,3,-3,-10,7,-10,1,1,9,6,8,-8,2,-6,10,4,2,-5,4,-5,-5,3,6,-4,3,-7,-10,3,-2,-4,-2,10,6,10,-1,2,-4,6,6,-3,7,-1,4,-1,-4,1,-5,-1,-10,-4,9,-9,-8,1,4,-2,-5,-10,-8,9,7,-7,5,-7,2,6,-5,4,-9,-7,2,-5,-4,-10,-7,-2,9,9,1,8,7,-7,-6,-6,-8,9,-2,-9,-9,-9,-7,3,2,1,9,-7,1,9,-6,4,9,4,-8,-8,-1,7,7,4,-1,-3,4,9,5,-3,-4,-5,-2,4,3,1,8,3,-6,-7,4,9,9,3,7,-4,-5,-6,9,9,4,7,-5,-9,9,-10,-3,1,9,9,2,-1,-4,3,6,7,-1,-2,-7,9,-5,1,10,-2,-5,-8,-6,-3,-5,4,-10,9,-7,10,-2,-10,-10,6,2,-2,1,-6,-9,5,-9,3,-10,-3,-5,-1,-1,-5,3,-2,1,3,-4,-7,2,-4,3,-10,-4,-9,5,-8,-2,-1,4,9,-7,-5,5,-3,6,-10,7,-1,5,9,-2,8,10,9,3,9,-10,1,10,4,3,2,-4,-10,5,-8,-6,10,-8,-10,-5,-2,-7,4,-9,3,2,10,10,-4,-9,1,1,-1,-8,-1,-4,-2,8,-10,4,-6,1,-2,-8,-6,-1,4,8,-2,-8,1,-7,-3,-9,-9,6,-7,5,-8,6,-2,10,-8,9,7,4,-9,1,4,-5,-2,10,8,9,-8,1,-3,-4,-1,2,2,6,-6,3,8,5,-9,-9,10,-4,-4,-8,5,-7,-9,-4,4,-10,8,2,-9,6,-2,8,5,-4,-6,8,-6,-10,6,4,4,2,-7,-10,9,-8], dtype = "int64")#candidate|6923|(1200,)|const|int64
var_6924 = relay.var("var_6924", dtype = "float32", shape = (195,))#candidate|6924|(195,)|var|float32
var_6925 = relay.var("var_6925", dtype = "uint8", shape = (165,))#candidate|6925|(165,)|var|uint8
var_6926 = relay.var("var_6926", dtype = "uint32", shape = (520,))#candidate|6926|(520,)|var|uint32
call_6922 = relay.TupleGetItem(func_2553_call(relay.reshape(const_6923.astype('int64'), [10, 10, 12]), relay.reshape(const_6923.astype('int64'), [10, 10, 12]), relay.reshape(var_6924.astype('float32'), [195,]), relay.reshape(var_6925.astype('uint8'), [165,]), relay.reshape(var_6926.astype('uint32'), [520,]), ), 0)
call_6927 = relay.TupleGetItem(func_2560_call(relay.reshape(const_6923.astype('int64'), [10, 10, 12]), relay.reshape(const_6923.astype('int64'), [10, 10, 12]), relay.reshape(var_6924.astype('float32'), [195,]), relay.reshape(var_6925.astype('uint8'), [165,]), relay.reshape(var_6926.astype('uint32'), [520,]), ), 0)
uop_6931 = relay.erf(uop_6898.astype('float64')) # shape=(1, 1260)
uop_6933 = relay.erf(uop_6900.astype('float64')) # shape=(1, 1260)
output = relay.Tuple([bop_6916,call_6922,const_6923,var_6924,var_6925,var_6926,uop_6931,])
output2 = relay.Tuple([bop_6919,call_6927,const_6923,var_6924,var_6925,var_6926,uop_6933,])
func_6935 = relay.Function([var_6924,var_6925,var_6926,], output)
mod['func_6935'] = func_6935
mod = relay.transform.InferType()(mod)
mutated_mod['func_6935'] = func_6935
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6935_call = mutated_mod.get_global_var('func_6935')
var_6937 = relay.var("var_6937", dtype = "float32", shape = (195,))#candidate|6937|(195,)|var|float32
var_6938 = relay.var("var_6938", dtype = "uint8", shape = (165,))#candidate|6938|(165,)|var|uint8
var_6939 = relay.var("var_6939", dtype = "uint32", shape = (520,))#candidate|6939|(520,)|var|uint32
call_6936 = func_6935_call(var_6937,var_6938,var_6939,)
output = call_6936
func_6940 = relay.Function([var_6937,var_6938,var_6939,], output)
mutated_mod['func_6940'] = func_6940
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2723_call = mod.get_global_var('func_2723')
func_2724_call = mutated_mod.get_global_var('func_2724')
call_6944 = func_2723_call()
call_6945 = func_2723_call()
output = relay.Tuple([call_6944,])
output2 = relay.Tuple([call_6945,])
func_6951 = relay.Function([], output)
mod['func_6951'] = func_6951
mod = relay.transform.InferType()(mod)
mutated_mod['func_6951'] = func_6951
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6951_call = mutated_mod.get_global_var('func_6951')
call_6952 = func_6951_call()
output = call_6952
func_6953 = relay.Function([], output)
mutated_mod['func_6953'] = func_6953
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6739_call = mod.get_global_var('func_6739')
func_6740_call = mutated_mod.get_global_var('func_6740')
call_6957 = func_6739_call()
call_6958 = func_6739_call()
func_2384_call = mod.get_global_var('func_2384')
func_2387_call = mutated_mod.get_global_var('func_2387')
call_6982 = relay.TupleGetItem(func_2384_call(relay.reshape(call_6957.astype('int8'), [9, 14, 10]), relay.reshape(call_6957.astype('int8'), [9, 14, 10]), ), 4)
call_6983 = relay.TupleGetItem(func_2387_call(relay.reshape(call_6957.astype('int8'), [9, 14, 10]), relay.reshape(call_6957.astype('int8'), [9, 14, 10]), ), 4)
uop_6986 = relay.sinh(call_6957.astype('float32')) # shape=(3, 420)
uop_6988 = relay.sinh(call_6958.astype('float32')) # shape=(3, 420)
output = relay.Tuple([call_6982,uop_6986,])
output2 = relay.Tuple([call_6983,uop_6988,])
func_6996 = relay.Function([], output)
mod['func_6996'] = func_6996
mod = relay.transform.InferType()(mod)
output = func_6996()
func_6997 = relay.Function([], output)
mutated_mod['func_6997'] = func_6997
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4060_call = mod.get_global_var('func_4060')
func_4061_call = mutated_mod.get_global_var('func_4061')
call_7006 = relay.TupleGetItem(func_4060_call(), 0)
call_7007 = relay.TupleGetItem(func_4061_call(), 0)
output = relay.Tuple([call_7006,])
output2 = relay.Tuple([call_7007,])
func_7014 = relay.Function([], output)
mod['func_7014'] = func_7014
mod = relay.transform.InferType()(mod)
output = func_7014()
func_7015 = relay.Function([], output)
mutated_mod['func_7015'] = func_7015
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7024 = relay.const(True, dtype = "bool")#candidate|7024|()|const|bool
const_7025 = relay.const([[[False,False,False,True,True,False,True,True,False],[True,True,True,False,True,True,False,True,False],[True,True,True,False,False,False,False,True,True],[True,True,True,False,True,True,False,True,True],[True,False,False,True,True,False,False,False,True],[True,False,False,True,False,True,True,False,True],[True,False,True,False,True,False,True,True,False],[False,False,True,True,True,True,False,False,False],[False,True,False,True,False,True,True,False,True],[False,True,True,False,False,True,True,False,False],[True,True,False,True,True,False,False,True,True],[True,True,True,False,True,False,False,False,True],[True,True,True,False,True,False,True,True,False],[False,False,False,True,False,True,True,True,False],[True,False,True,False,True,False,True,True,True]],[[False,False,True,True,True,False,False,False,False],[False,True,True,False,False,False,False,True,False],[True,False,True,True,True,True,True,True,True],[True,False,False,True,False,False,False,True,False],[True,True,False,True,True,True,False,True,True],[False,True,False,False,False,False,False,False,True],[True,True,False,False,False,True,True,True,True],[True,False,True,True,True,False,True,False,False],[True,False,True,False,True,True,True,True,True],[True,True,True,True,True,False,True,True,True],[False,False,False,False,False,False,True,True,True],[True,True,True,True,False,False,True,False,True],[False,True,False,True,True,False,True,False,True],[True,True,False,False,False,True,True,False,True],[True,True,False,True,False,True,False,False,True]],[[False,True,False,True,True,True,False,False,False],[False,True,False,True,True,False,True,True,False],[False,False,False,True,False,True,False,True,True],[True,True,True,True,False,False,True,True,True],[False,True,False,True,True,True,True,False,False],[True,False,False,True,False,False,True,False,False],[False,False,True,False,True,True,True,False,True],[False,True,False,True,False,False,True,True,True],[True,False,False,True,False,False,True,True,False],[False,True,False,False,True,False,False,True,False],[True,True,False,False,True,False,False,False,False],[False,False,True,False,True,True,False,False,True],[False,False,True,False,False,False,True,False,True],[True,False,True,True,True,False,False,True,True],[False,False,True,False,False,True,True,False,False]],[[False,False,True,False,False,True,True,True,True],[True,False,True,False,True,False,True,True,True],[True,True,True,False,True,True,False,True,True],[True,False,False,False,False,False,True,False,True],[False,True,False,True,False,False,False,True,True],[False,False,False,False,False,True,True,False,False],[False,False,True,True,False,True,True,False,False],[False,True,False,True,True,False,True,False,False],[True,False,True,False,True,False,True,True,False],[False,False,False,True,False,True,False,True,True],[False,True,True,False,True,False,False,False,True],[False,True,True,True,False,True,False,False,False],[False,True,True,False,False,True,True,True,True],[False,True,True,True,True,False,False,True,True],[False,False,True,True,False,False,False,True,False]],[[True,False,False,False,False,False,True,True,False],[True,False,True,False,False,False,True,True,False],[True,True,True,False,True,True,True,False,False],[True,False,True,True,True,True,False,True,False],[False,True,True,False,False,True,True,False,True],[True,False,False,True,True,True,True,False,False],[False,True,False,False,True,False,False,False,True],[True,False,True,True,False,False,False,False,False],[True,True,False,False,True,False,False,False,False],[True,True,False,True,False,True,True,False,False],[True,False,True,True,False,True,False,True,False],[False,False,False,False,True,False,False,False,True],[True,False,True,True,False,True,True,True,True],[False,True,True,True,False,False,False,True,False],[True,True,True,True,True,True,False,True,True]],[[False,False,True,True,True,True,False,False,True],[True,True,True,False,True,False,False,False,False],[False,False,False,False,False,True,True,True,True],[True,True,False,False,True,False,True,False,True],[False,True,True,False,False,False,True,True,False],[True,True,False,True,True,True,True,True,True],[True,False,False,False,True,False,False,True,True],[True,False,False,False,True,True,False,True,True],[False,False,False,False,True,True,True,False,False],[False,False,True,True,True,False,True,True,True],[True,True,True,True,False,True,True,True,False],[False,True,True,True,True,True,False,False,False],[True,True,True,False,True,True,True,False,False],[True,True,True,True,True,False,False,False,True],[True,True,False,False,True,True,True,False,False]],[[True,False,False,True,False,True,False,False,False],[True,True,False,True,True,False,False,False,True],[True,False,True,False,True,False,False,True,True],[True,True,True,True,False,False,False,True,False],[True,False,False,False,True,True,False,True,False],[False,True,False,True,False,False,False,False,False],[False,False,True,True,True,False,True,True,False],[True,True,False,True,False,False,True,False,True],[False,True,False,True,True,False,True,True,False],[False,True,True,False,False,True,True,True,True],[False,False,False,False,True,True,False,False,True],[False,True,False,False,False,True,False,True,False],[False,False,True,True,False,True,False,False,True],[True,False,False,False,False,True,False,False,False],[True,True,True,True,True,False,True,True,False]],[[False,False,True,False,False,False,False,True,False],[True,True,True,False,True,True,False,True,True],[True,False,True,False,True,False,True,False,False],[True,True,True,False,True,True,True,False,False],[True,False,True,False,True,True,True,True,False],[False,True,True,True,True,True,False,True,True],[True,False,True,True,True,True,False,True,False],[False,True,False,False,False,False,True,False,True],[False,True,False,False,True,False,False,False,True],[True,True,False,False,False,False,False,True,True],[True,True,True,True,True,False,False,True,False],[False,True,True,False,True,False,False,False,False],[False,False,False,True,True,True,True,False,True],[True,False,False,True,True,False,False,False,True],[False,False,True,False,True,False,True,True,True]],[[False,True,True,False,False,True,False,True,True],[False,True,True,True,False,True,False,True,False],[False,True,False,True,True,True,False,False,False],[False,True,True,False,True,False,True,True,False],[True,False,False,False,False,True,True,True,True],[False,True,True,False,True,False,False,True,False],[True,True,False,True,False,True,False,False,True],[True,True,False,True,False,False,True,False,False],[False,True,False,False,True,True,True,True,True],[True,False,False,True,True,True,True,True,True],[True,True,True,False,False,True,False,False,True],[True,True,False,True,False,True,True,False,True],[True,True,False,False,False,False,False,False,False],[True,True,True,True,False,False,False,False,True],[True,True,True,True,False,False,True,True,False]],[[False,True,False,True,False,True,False,False,False],[False,False,False,False,True,True,True,False,False],[False,True,False,True,False,True,False,True,True],[False,False,True,True,True,False,True,False,False],[True,False,False,True,True,False,True,True,True],[False,True,False,False,True,True,True,False,True],[False,False,True,False,False,True,True,True,False],[True,True,True,True,False,True,True,True,False],[True,False,False,False,False,True,False,True,False],[True,False,False,True,False,False,False,False,False],[True,True,False,False,False,True,True,True,True],[False,False,False,True,True,False,True,False,False],[False,False,True,False,False,True,False,True,False],[False,True,False,False,False,False,False,False,False],[True,True,False,False,False,False,False,True,False]],[[False,False,False,True,False,False,False,False,False],[False,False,True,False,False,False,False,False,True],[False,True,True,True,False,True,True,True,True],[True,True,False,True,False,False,True,True,False],[False,True,False,False,True,False,False,True,False],[False,False,False,True,False,True,True,True,False],[False,False,True,True,False,False,True,True,False],[True,True,True,True,True,True,True,True,False],[True,True,False,True,False,False,True,True,False],[True,False,False,True,False,False,False,True,False],[False,False,False,True,True,True,False,False,False],[True,True,True,False,False,True,False,True,True],[False,True,False,False,False,True,False,True,True],[True,True,True,True,True,True,True,False,True],[False,True,True,False,False,True,False,False,True]],[[True,False,True,False,False,False,False,True,False],[True,True,True,True,False,False,False,False,True],[True,True,False,False,False,True,False,False,True],[True,False,False,False,True,False,True,True,True],[True,False,False,True,True,True,False,False,False],[False,False,False,False,False,True,False,False,True],[True,False,False,False,True,False,False,False,False],[True,True,True,False,True,True,False,False,True],[True,True,True,True,True,False,True,True,False],[True,True,False,False,False,True,False,True,False],[True,True,False,True,False,False,False,False,True],[False,False,True,True,False,False,False,True,False],[False,True,True,False,False,True,True,False,True],[False,True,False,False,False,False,True,True,False],[True,True,True,False,True,True,True,False,True]]], dtype = "bool")#candidate|7025|(12, 15, 9)|const|bool
bop_7026 = relay.logical_and(const_7024.astype('bool'), const_7025.astype('bool')) # shape=(12, 15, 9)
output = relay.Tuple([bop_7026,])
output2 = relay.Tuple([bop_7026,])
func_7049 = relay.Function([], output)
mod['func_7049'] = func_7049
mod = relay.transform.InferType()(mod)
output = func_7049()
func_7050 = relay.Function([], output)
mutated_mod['func_7050'] = func_7050
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7053 = relay.var("var_7053", dtype = "uint16", shape = (2, 5, 13))#candidate|7053|(2, 5, 13)|var|uint16
const_7054 = relay.const([[[10,6,-4,5,-8,-6,8,5,-7,1,2,-6,-1],[3,8,3,9,-9,6,-6,6,-3,3,10,-5,-8],[5,7,-6,-5,-6,-4,8,7,-1,10,-8,-4,3],[3,-5,8,-2,-7,5,-5,-10,7,6,4,8,5],[-9,9,10,-1,-10,6,-1,-2,-5,-9,-8,5,-10]],[[-1,4,-6,-2,-6,-4,1,3,-8,10,-3,1,-2],[-8,-4,5,-9,-1,4,10,10,-7,8,6,-6,-9],[3,-3,-10,-1,1,10,-5,-5,-8,10,-8,7,-9],[-5,-1,-6,-6,-7,-1,-1,-4,-2,-5,1,3,9],[8,-9,-9,4,9,-2,8,-9,10,1,2,5,4]]], dtype = "uint16")#candidate|7054|(2, 5, 13)|const|uint16
bop_7055 = relay.logical_xor(var_7053.astype('uint16'), relay.reshape(const_7054.astype('uint16'), relay.shape_of(var_7053))) # shape=(2, 5, 13)
uop_7059 = relay.rsqrt(const_7054.astype('float32')) # shape=(2, 5, 13)
output = relay.Tuple([bop_7055,uop_7059,])
output2 = relay.Tuple([bop_7055,uop_7059,])
func_7061 = relay.Function([var_7053,], output)
mod['func_7061'] = func_7061
mod = relay.transform.InferType()(mod)
var_7062 = relay.var("var_7062", dtype = "uint16", shape = (2, 5, 13))#candidate|7062|(2, 5, 13)|var|uint16
output = func_7061(var_7062)
func_7063 = relay.Function([var_7062], output)
mutated_mod['func_7063'] = func_7063
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6996_call = mod.get_global_var('func_6996')
func_6997_call = mutated_mod.get_global_var('func_6997')
call_7150 = relay.TupleGetItem(func_6996_call(), 1)
call_7151 = relay.TupleGetItem(func_6997_call(), 1)
func_5906_call = mod.get_global_var('func_5906')
func_5907_call = mutated_mod.get_global_var('func_5907')
call_7153 = relay.TupleGetItem(func_5906_call(), 1)
call_7154 = relay.TupleGetItem(func_5907_call(), 1)
output = relay.Tuple([call_7150,call_7153,])
output2 = relay.Tuple([call_7151,call_7154,])
func_7159 = relay.Function([], output)
mod['func_7159'] = func_7159
mod = relay.transform.InferType()(mod)
mutated_mod['func_7159'] = func_7159
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7159_call = mutated_mod.get_global_var('func_7159')
call_7160 = func_7159_call()
output = call_7160
func_7161 = relay.Function([], output)
mutated_mod['func_7161'] = func_7161
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7199 = relay.const([[[-0.557634,3.508940,-5.015412,7.983786,-5.963281,9.375803,-8.326598],[1.762961,1.225252,-6.956870,6.699435,-3.550357,5.953813,-9.318262],[-6.110074,-8.712507,8.017021,-2.433070,1.051770,2.337690,1.046674],[6.654382,3.321740,0.037496,-8.678702,7.662554,-5.106635,-0.667029],[-6.339998,-3.125942,-4.628004,4.002698,6.264313,9.549565,-0.108354],[-1.842051,-8.664849,3.437323,-2.750319,-4.986900,-6.431357,-4.773989],[9.588229,2.121463,4.214016,3.815406,-0.367914,3.389657,-2.326609],[-1.560932,-7.819855,4.652472,0.866441,-7.634366,1.185621,-4.108884]],[[-3.457248,-5.793429,1.768854,8.608509,4.909210,-2.853075,-2.783938],[9.379633,-9.894928,9.001397,0.583714,4.593117,4.209115,-7.642247],[-3.601718,9.188345,-8.546848,6.672295,9.626587,-6.409736,2.384627],[-8.118918,5.138031,-2.554205,7.440648,-4.423478,-2.845987,5.831592],[2.237598,-2.273477,-0.498654,-4.075483,8.086197,-3.205087,-8.198991],[-2.669063,2.099988,4.823301,-7.080811,5.220963,2.449811,-1.678055],[8.075710,-0.535218,-5.680652,2.135219,-3.756773,7.885188,3.685500],[-3.476285,-1.923167,7.450592,0.392254,-2.325434,-9.558394,2.154476]],[[7.544724,-0.579752,-3.454400,8.440180,0.504360,7.325054,-4.627281],[-5.854922,7.736467,-2.754896,5.465598,7.072472,-1.187316,-3.426079],[6.798760,3.674850,-6.364594,-6.983158,-2.285983,2.755888,-4.518301],[9.483198,0.713840,-5.631814,-3.286569,-1.874450,-9.160730,-7.508016],[-5.060927,0.915207,-3.240672,-4.679334,-1.814264,1.843113,3.040397],[4.719370,-5.518183,-6.557193,-6.279635,-5.630549,3.679394,-3.118601],[-0.394053,3.915671,5.872435,6.530388,9.518789,-3.879692,-1.215998],[-8.977782,-6.406932,2.592978,-1.395726,-2.816476,-0.498400,8.834663]],[[-2.375422,0.051195,-2.927907,4.027606,2.289597,4.519750,-7.950108],[1.733597,-5.718969,-6.542381,8.510109,8.470103,-7.898104,-2.476391],[-0.389572,-4.452606,0.529408,9.493522,-4.095787,0.469279,2.087766],[-5.895978,1.451884,-6.458555,9.397561,-0.362551,-7.204590,-1.636810],[-5.433182,5.808776,-3.917448,6.831817,7.663621,5.226412,1.574406],[-7.899307,-4.793097,-3.100635,-9.603559,8.345097,-9.927926,-1.989984],[8.320135,5.507475,4.253506,-1.948700,-6.382907,2.491252,-3.662839],[-2.835311,9.284151,7.969754,7.230174,9.569935,-4.545318,-1.586189]],[[0.511217,-0.575983,4.142151,-2.074798,-5.131270,1.338579,-2.985046],[1.061149,5.442746,-3.578056,-6.851286,-1.525519,4.689392,9.816757],[-6.320100,-4.807049,-8.121409,-1.021354,-1.045982,-1.071026,3.768444],[-9.849331,-2.401617,0.822793,1.938023,-7.225027,0.540355,7.985078],[1.196142,-8.510381,-4.419317,7.025069,0.018789,2.549074,-0.160811],[5.441432,4.149074,8.639025,7.713320,3.020638,-1.925384,-7.916860],[9.077465,-8.635587,-6.320866,-8.130121,-5.207767,3.553263,-9.098787],[7.719645,-2.158868,-9.009860,-7.918419,5.530583,-2.737246,-7.879665]],[[-4.808515,-6.855710,8.454218,-6.964786,-1.586602,-3.229119,-5.425127],[-6.172173,-8.212956,8.748943,-4.026922,-1.007662,2.861732,-9.930021],[8.250745,-8.866809,5.658027,6.776291,-1.123537,-0.149414,-0.744398],[4.016839,-9.778845,7.337512,8.110188,4.438346,4.207837,2.487577],[3.312602,-8.611762,-6.824453,8.421413,-0.561459,-2.138393,-6.145686],[6.400599,-9.059659,-1.027112,-4.334164,8.501688,-9.254217,-2.244365],[4.906193,3.214360,7.637187,5.428292,-1.082408,-4.889102,1.005947],[0.022126,1.187992,-1.597514,2.587558,6.825836,8.983491,-1.637588]],[[1.578374,5.700397,-6.038035,-6.545145,-4.855363,0.555997,-6.127880],[7.816121,7.670267,0.922875,7.332540,-9.210801,-0.006479,9.984679],[-2.427673,-9.361363,-4.553675,-5.872103,-2.646470,-1.642777,-6.793724],[2.740053,4.556226,-3.226629,-1.395597,-5.648035,-4.698526,-7.160621],[-9.033866,-1.259683,4.272200,-8.072247,-4.292111,-1.393947,0.420787],[2.928690,9.959165,-6.155933,-3.248274,7.301504,3.713683,-4.406119],[-9.746912,-0.952542,-3.588417,5.593031,0.453836,7.689271,0.633772],[-4.353095,1.094342,-4.490805,8.257647,0.768173,-7.423042,-2.833301]],[[-0.675234,9.937794,5.411478,3.536753,-4.343571,-0.740578,7.652714],[9.481309,3.683525,2.577802,7.017292,8.180730,5.018490,-7.542405],[2.907263,2.102828,-8.838212,-2.548177,-7.156434,3.808885,0.547033],[0.265153,-7.408690,3.824526,-3.795263,-6.101772,-3.273259,-9.055792],[-3.444411,9.426723,1.547241,-2.460977,8.358195,-4.393548,-8.917682],[-9.233832,8.748520,-0.154396,-5.946267,6.603449,6.698068,4.284003],[-8.740144,2.316915,-4.835025,-6.250849,8.122222,1.538917,-3.337696],[-0.442633,-8.682475,-5.915270,-8.102937,5.474216,-6.975388,-8.422188]],[[-8.371391,1.673283,2.776435,2.917081,-6.201021,-0.446475,-6.653067],[-2.725885,7.755510,-9.529191,-1.807183,6.602218,3.461068,6.792077],[2.610446,4.169857,9.084003,-7.550680,3.316235,4.239140,-9.621345],[3.027175,7.400522,1.349089,4.952664,-2.074426,-7.047829,-4.388511],[-4.905389,3.636185,3.943443,7.950423,6.295785,-5.879888,-0.838201],[-8.269256,0.582450,4.618525,-6.794075,2.758399,-7.521518,5.673456],[3.976568,0.713379,6.703259,3.543010,4.053923,-9.008656,4.813253],[-6.861044,-3.558381,-5.149756,-5.640983,-2.931850,-1.332636,-9.801061]],[[-2.660345,9.305672,-1.197957,7.667017,8.870128,-2.830417,-7.555173],[0.344012,5.964298,3.792299,1.692349,9.268051,8.519912,-1.067076],[7.650387,4.750596,-6.736874,5.697672,4.313626,-5.981888,-7.736566],[7.628533,2.975624,-5.983738,-6.204049,-7.882468,4.333438,-1.042184],[-5.424100,-0.913521,7.290175,3.013814,-6.039367,-1.362899,9.974022],[-8.566090,-6.924599,-3.268032,-3.682062,-4.889933,-3.102202,-4.599418],[3.493759,0.154124,7.670669,4.023479,4.766634,-7.613175,-8.357260],[2.037074,-5.886799,9.614121,5.004608,-7.712928,-6.596986,8.698103]],[[-9.839188,-0.810086,-4.633769,2.317362,1.572732,-4.580815,5.700537],[-6.882873,-0.047344,0.424963,0.273073,3.017768,7.557285,-9.878212],[-3.396006,-0.636674,-4.150288,-6.650069,-1.756616,-5.389527,6.964555],[-3.381307,-9.960566,-2.918460,-0.313535,6.760985,-9.215205,6.683833],[-0.654634,6.941735,4.358692,4.596446,-7.340523,-7.210513,6.815414],[-3.247035,9.744061,3.169929,8.396064,-7.387817,-6.471609,3.612018],[-9.149536,-4.910248,-5.647492,-0.283712,1.376615,6.521403,7.604984],[7.228655,9.009432,3.291170,-9.642914,-8.272478,-1.133531,-6.256348]]], dtype = "float64")#candidate|7199|(11, 8, 7)|const|float64
uop_7200 = relay.cos(const_7199.astype('float64')) # shape=(11, 8, 7)
func_412_call = mod.get_global_var('func_412')
func_414_call = mutated_mod.get_global_var('func_414')
const_7206 = relay.const([6.460488,3.124851,-7.471067,4.225206,0.100014,-9.259475,9.511591,-6.895490,-4.268980,-3.043190,9.582510,-5.733573,1.499067,-5.228521,5.863935,-0.160930,3.126287,-2.561699,-5.100631,-8.910851,6.515418,-0.019685,-6.416704,7.633436,-7.195229,9.945443,-0.126557,-9.951205,3.613960,-2.179114,-4.520925,-1.193505,-8.445831,2.310170,-0.547761,0.175781,2.229884,-5.493759,-8.486018,-8.376679,2.794970,0.741653,7.156020,4.742844,-4.109028,2.071535,-5.640225,-7.483878,0.650064,0.356124,5.861493,1.065486,9.886641,2.243963,1.159565,-5.482420,9.560605,-9.889138,6.132357,-2.397541,5.845616,8.641803,4.491977,8.978213,6.438150,-1.111102,2.407070,4.132133,-6.463273,-4.424201,-3.860358,-9.116354,-8.890794,4.122467,3.095927,8.932455,2.674965,-5.022206,-5.786322,3.390209,3.250403,8.729161,3.888746,7.281654,8.017891,-9.164032,-0.196222,9.123666,2.203820,9.063053,-5.612497,-1.245644,0.783772,-6.769663,-9.924044,9.012578,-6.009553,-6.108481,-6.553140,5.848134,2.994535,2.034613,-6.138726,1.985554,8.801841,-6.013708,7.483256,-8.702800,-1.116932,8.704944,-6.622620,-6.530683,5.140471,3.675046,-7.000025,1.043667,-0.961552,5.117864,6.338286,-8.599693,8.417454,0.420220,7.904132,1.808376,-5.098624,-3.153404,-1.515204,6.803165,5.660407,8.224889,1.992438,-9.374816,4.377476,0.949475,-7.513694,-1.106356,-5.077560,-6.819256,0.515031,5.394720,-1.761414,-1.104718,-7.382935,-9.674587,-9.923951,6.966804,-5.253342,4.801635,-7.048118,4.537759,5.894309,-4.213012,3.327886,3.431677,7.298908,-1.778153,5.093759,-2.698267,5.526058,8.905796,-6.709642,0.912184,-9.628001,-9.029975,3.832646,3.700948,5.381578,9.926843,6.750972,2.418794,1.514230,-5.992158,3.727980,9.455752,-7.119726,-4.659584,9.994650,1.926449,8.400565,-8.487388,3.766531,8.139039,-7.050695,2.728833,8.868405,-1.515133,8.697960,2.380103,9.007673,1.165860,-9.601633,-6.211394,2.997514,8.441575,4.100808,-1.190374,-5.217368,-8.875195,-6.152259,-0.390806,-0.723641,-9.467025,9.548289,-4.819629,-6.034092,-4.854050,-6.970101,9.084402,9.089883,-1.253900,-0.376294,5.946860,-0.938169,7.474951,-9.296886,-6.581286,-5.801186,-9.758196,5.920200,-1.356289,-4.658120,-9.648783,6.759413,-5.423017,-3.681063,-4.597910,0.307720,0.055945,9.842026,-8.755572,-1.429563,-1.606885,-2.299020,6.239743,-9.465524,9.962516,-0.763860,7.881838,3.040362,-6.003469,-4.869342,4.949174,3.746176,8.180960,9.477712,-0.052493,-3.464781,9.916819,5.821950,-3.348560,-3.633820,-5.356218,0.181304,9.179591,3.358724,0.524295,-2.975315,-7.555528,9.790172,-1.995338,4.981450,7.876474,0.644093,-6.826071,8.176590,-5.360823,9.638926,-8.676172,-1.453878,2.212498,-2.476039,5.138003,8.330971,-2.926878,9.852402,-9.269948,5.115602,0.308998,-6.048344,6.610616,-0.811204,0.739094,-6.181812,3.071852,0.715470,-8.573074,4.796348,-7.888193,1.728096,9.514742,5.881987,-1.835865,6.783451,-7.832701,8.379130,6.172614,8.849210,9.827167,1.858904,8.432657,-7.024109,-8.390814,8.067031,-5.721110,1.129877,-2.630047,6.130015,6.678377,-1.060984,-3.052175,8.983209,1.146899,5.852043,-7.352828,1.054981,5.525357,6.427256,2.896258,9.376067,-1.191728,-9.573867,8.264561,9.373355,-2.454213,-3.514411,4.136504,2.900571,3.330279,-3.883137,6.198651,9.101482,0.361594,-1.848773,8.339255,-4.849081,-3.647563,-8.508387,5.450724,-6.472806,5.332712,-5.129389,-6.502659,-4.205492,-1.813553,1.944621,-2.601066,3.138356,9.086594,1.803822,3.261786,-5.658726,-6.361748,5.497137,-0.376787,0.803250,0.012266,5.904214,7.985664,7.266771,-4.589104,9.132237,9.655446,-0.775656,-8.851959,1.868848,5.651457,1.880152,7.144010,2.917921,-6.970410,2.637540,6.223900,6.517462,-1.217852,-5.367652,9.725357,-0.456477,-2.534653,-5.608382,-3.487386,-3.589857,7.458191,6.747399,8.152260,4.080457,0.493204,9.483239,2.332094,-7.751555,3.365476,-5.807049,-7.407368,7.010697,8.654076,-2.539188,5.250628,9.716723,-7.416753,0.472246,-5.232500,-6.834630,-1.764855,-1.356815,-6.674429,5.385355,3.263545,6.010590,-9.542742,3.219557,-4.191800,9.741376,-0.929234,-1.209832,2.552109,-7.086555,-4.929518,-4.368631,-1.488103,-3.930145,2.245197,-4.671764,6.927186,-0.226936,-1.316542,3.869198,8.904688,9.495953,-6.748700,7.479509,5.747627,7.849669,-8.934973,-5.349338,-8.514249,2.855658,8.691134,-8.569837,9.959570,-3.533491,-4.872407,-5.495614,6.875301,-9.726917,-7.934871,6.102697,6.961505,0.990116,-8.848739,9.140449,8.276177,-6.143502,-0.957115,7.241217,-6.370611,-3.845498,-1.485466,-5.033878,-5.570827,3.960692,-8.889027,-0.404719,2.324077,2.477600,-1.782707,-3.046151,-7.456256,-8.031343,5.487053,-7.845763,3.833863,7.543271,-8.790916,2.730986,-2.079945,6.419396,-3.781895,-3.690693,3.921349,9.104890,-5.313253,2.964943,8.191860,-8.820505,-8.302153,-9.054823,0.502956,1.745771,4.430831,-3.538887,6.985916,6.205107,7.260953,9.794312,5.850346,-9.968456,-8.390189,-0.379103,3.571858,-1.479918,-6.672700,-9.639652,-9.186045,4.815322,-4.261559,9.254806,2.579754,2.468298,7.380262,0.020481,-4.671743,-5.660452,-9.519984,-9.085861,3.823944,0.360532,9.973233,0.806862,9.116343,1.605482,-0.160044,9.521732,7.377735,4.024664,6.664510,-1.099563,-1.324275,-9.779992,4.615746,2.802850,4.588527,-0.809283,-9.165455,3.624654,-4.178921,6.721188,0.240455,-2.680422,-7.005666,0.359490,9.106109,6.601370,0.241953,-5.981340,-4.707046,9.859591,-3.042338,-7.292266,-1.448749,-8.815464,-1.137060,1.991544,-2.379142,4.638984,1.870616,-4.430356,-1.099753,0.482178,7.930635,-7.475307,3.213261,8.850145,-0.859611,-3.129700,6.821242,8.338959,-5.445553,-7.936863,9.244831,8.295229,-7.616135,1.692308,6.833314,-3.931615,-5.229770,-1.023766,9.027536,7.296153,6.632462,-3.825217,-9.901787,8.772427,-9.795041,2.755995,9.178842,3.065156,-9.915889,-0.183381,8.178559,-3.259691,4.174604,8.104693,-9.010603,-4.519562,-9.033561,0.604493,8.050202,0.091111,-4.216760,7.207612,-1.561233,5.323792,6.268787,-5.932997,6.882951,-8.452694,-8.913217,0.537515,-6.925598,-6.546141,-1.675453,1.881791,-0.943976,8.966164,7.866702,-9.537249,1.279349,-5.358673,4.628366,2.133396,1.263753,-8.351906,2.954372,-3.078205,1.140206,-9.683453,-0.214829,1.301310,7.726613,1.559399,0.337944,-7.085272,-9.612198,7.760037,1.670727,-2.794691,-5.551478,-2.606271,-0.675307,7.964056,-1.467718,4.022646,0.972425,8.302933,1.274652,7.722381,3.242044,-1.072569,-2.490122,0.362007,-4.853224,-9.687009,-0.005190,1.393352,-5.749464,2.258336,-0.463481,8.210805,1.408013,-6.998214,-9.397828,-2.097130,3.673048,5.702421,-6.765462,-0.601989,-5.449118,-7.336890,4.485026,1.120389,-2.456326,-5.113402,5.799584,5.906884,3.720144,0.595978,6.804787,3.626016,-6.958952,9.982090,2.602858,-4.619315,-3.466010,0.548712,-7.060419,0.565651,7.865987,2.553972,-0.765605,9.151735,8.645602,8.624266,-0.972339,5.186890,0.791831,-1.822951,-6.400446,-3.705019,7.256769,0.603280,-7.224067,-6.318508,-4.148889,-4.122875,-2.981315,-6.009802,-5.770914,3.173422,-4.250967,-7.006248,0.551189,4.370230,1.954184,-3.893900,8.407043,-7.496367,8.968469,0.280150,-4.465178,-8.769079,1.575647,-0.889070,-6.559126,9.714919,1.310059,-7.307439,-0.120739,-8.191686,1.202637,-3.142360,-8.027762,-0.370399,4.647124,-6.933777,9.486201,6.567720,2.371710,-4.789821,8.213962,5.914031,7.085052,7.100972,0.106026,3.738205,-3.476849,4.615990,-3.514618,-7.664950,1.670422,-8.084715,3.746020,2.961643,9.180497,-0.862799,0.061933,4.602016,0.233075,-1.519545,6.592421,8.696898,1.178783,-6.688126,-7.399953,-0.184922,1.136378,-6.557241,-2.847902,-0.974531,-2.010564,-7.268190,-0.260702,-5.984208,-7.510036,-7.106133,0.711834,3.110878,-4.714166,-0.935762,2.878098,-4.336120,3.354890,3.997127,-0.806388,-0.725892,3.542319,9.255292,-8.057493,2.602972,-6.725069,-5.978262,-4.819955,7.443375,-7.988550,4.128608,-9.878948,-9.867065,4.512378,8.937923,7.913825,-3.777618,-9.835990,-4.916728,6.414865,8.560340,0.037649,5.337549,0.318023,-6.072992,5.387937,2.984239,2.079363,8.703137,-5.369909,5.184994,-0.755322,-7.302689,0.547606,-1.852534,-2.786744,-1.432803,4.210572,1.451151,-2.427127,-9.088934,-0.660307,6.910386,-5.467984,-7.818899,3.506294,-0.137655,7.549508,-2.511288,-6.296886,0.328197,-7.674032,-3.683432,-1.246480,7.815536,-3.119713,-3.848621,8.496420,-2.280255,-4.551432,-7.726985,-9.281224,-1.482151,7.122597,-5.875691,6.893946,7.622423,-0.108946,3.144917,6.196990,0.427783,6.525061,-4.297974,-8.935850,-6.253491,8.869828,-2.802754,0.418644,9.098893,-7.899290,-2.745214,-3.868387,6.989552,-7.612661,5.586722,1.127431,0.536018,-4.708988,-4.863048,-2.311965,7.004548,7.960375,-9.549453,-5.955956,-3.579520,9.215620,-7.661807,-5.906364,-5.661975,3.810211,-0.038349,3.403957,2.044451,-2.430660,-5.823969,-4.870298,-6.328573,9.393011,-4.730114,5.900349,-7.083812,-3.787569,-0.772312,3.950120,0.180954,-4.445404,1.995575,5.064597,9.974971,-2.965132,-5.935233,8.157305,5.422834,2.267168,8.404871,-3.651842,-3.155618,-9.351637,7.625940,5.752192,-6.150870,-6.999843,8.071327,-4.697730,0.436180,-7.905574,0.738406,1.142282,9.648859,6.976612,2.359854,-6.364687,-0.704997,-0.520411,-4.926361,-6.411138,7.042394,3.583054,-4.312460,6.560189,-3.668207,7.090183,1.728216,-5.857144,-0.202723,9.021277,8.327853,2.405722,3.760350,8.553202,8.733234,-3.403378,5.119539,-4.577886,-8.172134,8.068223,2.467483,-5.016654,7.961788,1.995620,-9.262175,2.121695,9.602040,3.761100,-4.426498,-1.918197,-0.923445,-1.076700,-9.114943,6.374620,-3.405319,-3.032159,-9.379442,5.086507,2.758652,0.719566,6.871374,-9.053446,0.469085,8.759465,-4.606635,5.983042,8.483660,-2.143167,-4.502023,-4.880267,7.989351,5.744277,9.821343,0.607890,2.852488,8.763199,-7.103719,4.596199,4.392621,0.311595,4.283341,6.548900,8.396474,-1.497473,6.308203,-5.774960,2.342416,-4.085743,-9.931199,-1.812979,-1.885539,2.984644,5.501446,-7.434477,8.573370,-0.264387,8.546519,9.846452,-2.492623,-2.105677,-7.629621,-0.351400,-3.337886,3.390958,-7.870638,7.435513,5.736602,8.908414,9.388596,4.556323,-9.150201,4.156657,3.350231,-4.159007,0.357498,-6.109061,8.701838,3.553916,7.599202,4.120712,-2.252642,6.082179,2.570634,-6.975248,-6.933544,6.243457,-2.852371,-3.784214,-5.071042,6.963275,-5.949465,7.310144,-5.496407,6.198703,0.356285,1.247794,4.048313,3.333355,-8.795457,-7.554580,-5.229416,6.434218,-0.285813,-6.238609,-2.628218,-5.324855,8.231507,-8.274510,0.672726,-1.857902,-7.831853,-0.079837,-1.832526,-6.580506,-8.788103,4.649112,8.464747,6.108144,1.609848,-7.074428,5.100862,-2.997820,-9.545273,-2.790875,-7.037365,3.927176,-2.883819,5.713839,9.737177,6.578947,-0.755382,-8.685204,1.389079,7.845526,-8.313518,-3.069157,2.788138,-3.522955,-9.416873,7.409370,7.502973,8.578490,-2.340834,-5.403713,1.533466,0.008319,9.975452,6.819322,6.335794,6.150798,-7.373712,1.451991,-7.815060,5.198392,-6.499418,4.275286,0.114449,-3.256949,3.955385,-5.321551,-9.093277,-4.054384,2.275955,6.002509,1.504302,-3.396482,-4.505600,4.666297,-1.333666,7.727240,2.742943,-3.914041,-7.030825,-3.673256,-9.749324,-3.585870,9.114956,-6.412287,-2.468065,6.920811,-6.415419,6.126859,-8.584634,7.185895,9.200082,7.437676,9.471853,-1.744930,-0.699050,-5.635192,9.863406,-9.722429,0.481171,4.096274,-7.641181,6.516782,2.261748,5.436837,9.383612,-4.590253,-6.312842,7.828347,1.747389,2.572586,2.541710,-3.670913,-7.663025,6.006605,8.470081,0.455197,5.867037,-9.752546,8.647692,-9.948762,-3.940065,4.922003,0.195966,4.418140,-3.063892,-2.775707,-8.968876,-3.375947,9.022168,-6.738860,1.994761,-4.405166,6.492317,1.498873,8.941565,7.453206,-8.941503,-5.142343,-6.199443,-1.073192,-0.619735,-3.983226,-0.582959,4.852714,-7.966420,-4.550441,7.763612,-0.299385,-9.213431,2.443153,-9.795450,6.561837,1.664886,-5.540601,3.720886,1.054653,4.910857,-9.812656,-1.101033,-8.703297,-6.989903,-8.462114,2.797681,-3.617579,-2.021824,8.217295,-1.916986,5.941362,-0.762272,6.727240,9.103989,8.181696,-0.649378,-7.728513,6.355477,6.545797,6.916248,8.468052,7.114988,-6.808379,9.033490,-7.189052,6.103130,-7.965758,0.206757,1.099723,-4.505736,3.756812,3.068486,6.048987,-1.763848,-5.555198,2.278497,6.166561,8.769246,-4.720134,9.366104,-7.016768,7.499800,5.818716,4.852959,2.901478,4.333156,-4.833657,-8.068719,-7.952269,1.989392,-4.634746,-9.258406,2.078275,-0.654947,9.165389,-8.279766,-8.719096,-5.781503,-6.102676,-7.815709,2.263328], dtype = "float64")#candidate|7206|(1260,)|const|float64
call_7205 = relay.TupleGetItem(func_412_call(relay.reshape(const_7206.astype('float64'), [6, 14, 15])), 0)
call_7207 = relay.TupleGetItem(func_414_call(relay.reshape(const_7206.astype('float64'), [6, 14, 15])), 0)
output = relay.Tuple([uop_7200,call_7205,const_7206,])
output2 = relay.Tuple([uop_7200,call_7207,const_7206,])
func_7210 = relay.Function([], output)
mod['func_7210'] = func_7210
mod = relay.transform.InferType()(mod)
mutated_mod['func_7210'] = func_7210
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7210_call = mutated_mod.get_global_var('func_7210')
call_7211 = func_7210_call()
output = call_7211
func_7212 = relay.Function([], output)
mutated_mod['func_7212'] = func_7212
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2723_call = mod.get_global_var('func_2723')
func_2724_call = mutated_mod.get_global_var('func_2724')
call_7267 = func_2723_call()
call_7268 = func_2723_call()
func_5005_call = mod.get_global_var('func_5005')
func_5007_call = mutated_mod.get_global_var('func_5007')
call_7275 = relay.TupleGetItem(func_5005_call(), 0)
call_7276 = relay.TupleGetItem(func_5007_call(), 0)
output = relay.Tuple([call_7267,call_7275,])
output2 = relay.Tuple([call_7268,call_7276,])
func_7280 = relay.Function([], output)
mod['func_7280'] = func_7280
mod = relay.transform.InferType()(mod)
mutated_mod['func_7280'] = func_7280
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7280_call = mutated_mod.get_global_var('func_7280')
call_7281 = func_7280_call()
output = call_7281
func_7282 = relay.Function([], output)
mutated_mod['func_7282'] = func_7282
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4656_call = mod.get_global_var('func_4656')
func_4658_call = mutated_mod.get_global_var('func_4658')
call_7308 = func_4656_call()
call_7309 = func_4656_call()
uop_7321 = relay.exp(call_7308.astype('float64')) # shape=(1, 7, 11)
uop_7323 = relay.exp(call_7309.astype('float64')) # shape=(1, 7, 11)
output = relay.Tuple([uop_7321,])
output2 = relay.Tuple([uop_7323,])
func_7336 = relay.Function([], output)
mod['func_7336'] = func_7336
mod = relay.transform.InferType()(mod)
mutated_mod['func_7336'] = func_7336
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7336_call = mutated_mod.get_global_var('func_7336')
call_7337 = func_7336_call()
output = call_7337
func_7338 = relay.Function([], output)
mutated_mod['func_7338'] = func_7338
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7366 = relay.var("var_7366", dtype = "float64", shape = (7, 3, 11))#candidate|7366|(7, 3, 11)|var|float64
const_7367 = relay.const([[[0.295309,0.856682,-9.122776,2.172428,-4.436909,8.365490,5.161865,0.263273,-5.416977,-0.351326,9.122347],[-0.571226,-2.999645,5.235430,-6.986068,7.552439,3.812246,6.362725,0.241306,-4.019824,-9.661047,4.691229],[7.244140,-2.631865,5.660676,-9.977507,-8.889586,-0.112382,2.190658,-5.751556,-6.309325,6.608914,-2.957649]],[[0.234665,3.584637,8.796671,6.657905,-4.436743,-6.149008,0.479023,1.661396,-5.908132,-5.524499,-1.898851],[9.157348,9.683634,-8.919397,0.149272,3.140082,2.475142,5.850557,2.104043,2.380827,3.706794,-9.273470],[1.053498,3.235684,-4.781776,-4.710291,0.801894,2.705271,-6.701129,9.484249,-2.920752,-7.055109,-6.307670]],[[3.334068,4.520733,9.924680,-0.037225,2.142187,0.555228,0.869186,-4.228771,9.888747,0.161960,-2.824456],[-6.976949,-6.748049,-6.886509,-8.052614,-9.216157,-6.459530,-3.667266,-4.653449,-6.926286,9.680698,-0.641274],[7.591079,-9.245346,-4.193170,9.158520,4.543056,7.049840,-7.621931,5.429974,-1.296543,-6.322803,7.455845]],[[-5.863097,2.328507,0.987243,-2.050881,-7.472977,-0.689382,-8.080705,-3.762502,1.929833,-1.189130,0.298133],[-1.647776,5.939432,-1.064296,-1.076440,9.341640,-0.051578,9.806413,5.063207,1.450867,5.631849,-2.994328],[6.002085,9.625740,5.456124,6.421090,-6.164274,2.529393,-7.892339,-7.699340,1.313836,8.898133,-9.250278]],[[5.414298,-2.281122,8.306907,-2.629035,-3.748905,5.081763,-0.915221,4.088885,5.802955,7.143195,0.236116],[9.800203,-9.126080,6.306153,-8.213097,-7.546205,3.726706,-8.432222,-9.960781,4.302262,-0.334087,-8.216223],[4.876992,-7.264506,-5.004428,4.026561,6.830084,3.057459,1.442571,7.278301,-1.675670,9.970287,2.293306]],[[4.278223,-7.682997,-1.582010,4.802808,7.811967,-3.243324,6.892239,2.858355,-0.203006,4.630859,4.335071],[0.331851,-5.341427,-5.843621,4.382417,-3.931527,-1.264368,6.895218,5.288980,0.510919,2.199576,2.026793],[-0.134868,6.443696,6.940342,-6.706101,6.877336,-7.843148,-0.855440,4.485410,-8.258835,-7.130254,-3.633112]],[[1.111427,-7.776317,-8.733021,-6.801855,-0.899089,1.017717,3.230627,2.857728,0.564738,2.567270,-5.710378],[-0.873611,-6.321352,8.226406,1.990268,-8.444061,-0.764278,-7.457334,6.049412,-6.824754,2.820940,3.312785],[-4.829043,1.617322,-4.074552,9.626980,-7.070085,-3.755371,-2.872227,1.953040,-6.401352,-3.866473,-3.443775]]], dtype = "float64")#candidate|7367|(7, 3, 11)|const|float64
bop_7368 = relay.power(var_7366.astype('float64'), relay.reshape(const_7367.astype('float64'), relay.shape_of(var_7366))) # shape=(7, 3, 11)
bop_7372 = relay.logical_and(bop_7368.astype('bool'), relay.reshape(var_7366.astype('bool'), relay.shape_of(bop_7368))) # shape=(7, 3, 11)
bop_7377 = relay.bitwise_and(bop_7368.astype('int64'), relay.reshape(bop_7372.astype('int64'), relay.shape_of(bop_7368))) # shape=(7, 3, 11)
func_7336_call = mod.get_global_var('func_7336')
func_7338_call = mutated_mod.get_global_var('func_7338')
call_7380 = relay.TupleGetItem(func_7336_call(), 0)
call_7381 = relay.TupleGetItem(func_7338_call(), 0)
output = relay.Tuple([bop_7377,call_7380,])
output2 = relay.Tuple([bop_7377,call_7381,])
func_7385 = relay.Function([var_7366,], output)
mod['func_7385'] = func_7385
mod = relay.transform.InferType()(mod)
var_7386 = relay.var("var_7386", dtype = "float64", shape = (7, 3, 11))#candidate|7386|(7, 3, 11)|var|float64
output = func_7385(var_7386)
func_7387 = relay.Function([var_7386], output)
mutated_mod['func_7387'] = func_7387
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6951_call = mod.get_global_var('func_6951')
func_6953_call = mutated_mod.get_global_var('func_6953')
call_7391 = relay.TupleGetItem(func_6951_call(), 0)
call_7392 = relay.TupleGetItem(func_6953_call(), 0)
output = relay.Tuple([call_7391,])
output2 = relay.Tuple([call_7392,])
func_7406 = relay.Function([], output)
mod['func_7406'] = func_7406
mod = relay.transform.InferType()(mod)
output = func_7406()
func_7407 = relay.Function([], output)
mutated_mod['func_7407'] = func_7407
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4299_call = mod.get_global_var('func_4299')
func_4301_call = mutated_mod.get_global_var('func_4301')
call_7528 = func_4299_call()
call_7529 = func_4299_call()
func_6520_call = mod.get_global_var('func_6520')
func_6523_call = mutated_mod.get_global_var('func_6523')
var_7533 = relay.var("var_7533", dtype = "float32", shape = (13, 15))#candidate|7533|(13, 15)|var|float32
call_7532 = relay.TupleGetItem(func_6520_call(relay.reshape(var_7533.astype('float32'), [195,])), 1)
call_7534 = relay.TupleGetItem(func_6523_call(relay.reshape(var_7533.astype('float32'), [195,])), 1)
output = relay.Tuple([call_7528,call_7532,var_7533,])
output2 = relay.Tuple([call_7529,call_7534,var_7533,])
func_7555 = relay.Function([var_7533,], output)
mod['func_7555'] = func_7555
mod = relay.transform.InferType()(mod)
var_7556 = relay.var("var_7556", dtype = "float32", shape = (13, 15))#candidate|7556|(13, 15)|var|float32
output = func_7555(var_7556)
func_7557 = relay.Function([var_7556], output)
mutated_mod['func_7557'] = func_7557
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7617 = relay.var("var_7617", dtype = "uint8", shape = (8, 12, 5))#candidate|7617|(8, 12, 5)|var|uint8
var_7618 = relay.var("var_7618", dtype = "uint8", shape = (8, 12, 5))#candidate|7618|(8, 12, 5)|var|uint8
bop_7619 = relay.add(var_7617.astype('uint8'), relay.reshape(var_7618.astype('uint8'), relay.shape_of(var_7617))) # shape=(8, 12, 5)
func_6822_call = mod.get_global_var('func_6822')
func_6824_call = mutated_mod.get_global_var('func_6824')
call_7631 = relay.TupleGetItem(func_6822_call(), 0)
call_7632 = relay.TupleGetItem(func_6824_call(), 0)
output = relay.Tuple([bop_7619,call_7631,])
output2 = relay.Tuple([bop_7619,call_7632,])
func_7637 = relay.Function([var_7617,var_7618,], output)
mod['func_7637'] = func_7637
mod = relay.transform.InferType()(mod)
mutated_mod['func_7637'] = func_7637
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7637_call = mutated_mod.get_global_var('func_7637')
var_7639 = relay.var("var_7639", dtype = "uint8", shape = (8, 12, 5))#candidate|7639|(8, 12, 5)|var|uint8
var_7640 = relay.var("var_7640", dtype = "uint8", shape = (8, 12, 5))#candidate|7640|(8, 12, 5)|var|uint8
call_7638 = func_7637_call(var_7639,var_7640,)
output = call_7638
func_7641 = relay.Function([var_7639,var_7640,], output)
mutated_mod['func_7641'] = func_7641
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6822_call = mod.get_global_var('func_6822')
func_6824_call = mutated_mod.get_global_var('func_6824')
call_7645 = relay.TupleGetItem(func_6822_call(), 0)
call_7646 = relay.TupleGetItem(func_6824_call(), 0)
output = relay.Tuple([call_7645,])
output2 = relay.Tuple([call_7646,])
func_7651 = relay.Function([], output)
mod['func_7651'] = func_7651
mod = relay.transform.InferType()(mod)
mutated_mod['func_7651'] = func_7651
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7651_call = mutated_mod.get_global_var('func_7651')
call_7652 = func_7651_call()
output = call_7652
func_7653 = relay.Function([], output)
mutated_mod['func_7653'] = func_7653
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7676 = relay.const([[[4,-10,-3],[-9,7,-5],[-7,-10,-3],[-6,6,10],[5,5,1]],[[-7,-9,1],[8,-7,4],[-7,7,9],[-8,2,10],[-10,-9,-10]],[[4,5,-6],[7,6,8],[6,-2,-3],[-4,5,-6],[7,1,2]],[[-6,1,-10],[-6,1,-1],[-4,4,-9],[-9,9,8],[-1,3,10]],[[-5,2,8],[5,8,-7],[-6,-5,7],[9,-6,1],[4,-6,-6]],[[-4,3,-9],[7,6,-1],[-4,2,-7],[-3,4,-7],[-1,7,-9]],[[6,-3,7],[-3,-5,2],[9,-3,7],[-1,-8,-10],[-10,-5,-10]],[[9,8,-8],[-4,-9,-7],[-5,9,9],[-7,4,5],[-8,5,-1]],[[8,3,-10],[10,4,-2],[-2,-9,-4],[5,-9,5],[-5,9,8]]], dtype = "uint16")#candidate|7676|(9, 5, 3)|const|uint16
var_7677 = relay.var("var_7677", dtype = "uint16", shape = (9, 5, 3))#candidate|7677|(9, 5, 3)|var|uint16
bop_7678 = relay.minimum(const_7676.astype('uint16'), relay.reshape(var_7677.astype('uint16'), relay.shape_of(const_7676))) # shape=(9, 5, 3)
func_3185_call = mod.get_global_var('func_3185')
func_3187_call = mutated_mod.get_global_var('func_3187')
call_7682 = relay.TupleGetItem(func_3185_call(), 0)
call_7683 = relay.TupleGetItem(func_3187_call(), 0)
func_4167_call = mod.get_global_var('func_4167')
func_4169_call = mutated_mod.get_global_var('func_4169')
call_7685 = relay.TupleGetItem(func_4167_call(), 6)
call_7686 = relay.TupleGetItem(func_4169_call(), 6)
func_5578_call = mod.get_global_var('func_5578')
func_5579_call = mutated_mod.get_global_var('func_5579')
call_7692 = relay.TupleGetItem(func_5578_call(), 4)
call_7693 = relay.TupleGetItem(func_5579_call(), 4)
func_3832_call = mod.get_global_var('func_3832')
func_3835_call = mutated_mod.get_global_var('func_3835')
const_7695 = relay.const([9.352236,4.224856,1.424309,5.309228,-5.231471,-7.780033,-4.083451,-4.029086,-6.859974,-8.880537,2.122066,-5.669132,-2.106970,2.774579,3.167135,-3.936564,-2.821425,-1.425910,-5.054481,-9.559653,9.660300,2.848480,3.649908,2.466627,1.813757,2.208562,1.036865,1.920657,-3.928431,3.196515,-4.117275,-5.376239,9.474676,-9.966670,-3.237356,-8.735328,2.343330,9.600436,4.320385,-6.071129,2.934488,-7.914038,0.800173,-2.396982,-7.401960,2.523280,8.950540,8.407378,-1.783029,6.363515,8.641221,-6.916261,1.900705,8.115334,7.225847,6.175233,7.061549,4.911783,3.923977,-6.010178,8.372065,-3.177464,5.901121,6.306906,1.954477,-1.335461,3.622958,0.943007,8.785746,8.606431,0.666365,1.663590,-2.900747,4.684647,-8.911414,-0.372687,-8.270700,1.085683,-6.386947,0.261462,5.623498,-4.236714,6.446088,6.168991,-1.569549,3.707983,8.696340,-0.603691,6.134658,9.977867,7.411148,3.653259,-4.082052,6.819431,5.685213,-1.160654,8.784866,3.223556,-5.317678,6.363582,-1.923649,-6.920023,3.526233,7.576286,8.515691,-8.144745,-0.558426,-2.359117,-0.409254,-3.383903,-1.411373,-5.401721,1.667871,-3.376895,-0.801256,9.387990,-0.552102,-6.246589,-5.848630,-7.351059,-5.343003,1.692475,-8.827695,8.790805,9.330996,4.400045,-5.427767,8.653653,0.250463,-9.934561,1.903696,-2.089902,1.347672,2.786896,6.806514,5.358825,6.075048,-4.476073,-8.312124,-2.004172,0.480061,-8.609056,-0.723180,-1.612762,6.702414,5.603048,-2.548553,1.235816,5.519266,2.013298,-6.511585,-5.884729,7.271735,-9.025972,1.335501,-3.917199,-0.148827,-1.045344,-5.312959,-7.917335,4.792240,9.635737,-1.753963,-8.135818,2.583120,-9.498268,-1.592941,7.815138,5.828324,-4.203849,5.569003,-0.632102,6.649213,-7.005468,4.853873,4.873430,-2.152208,-2.843869,5.583053,-6.233979,-9.138617,0.608850,-7.403040,7.848458,-8.278935,-3.620762,-7.942129,8.408311,3.650989,6.647162,-1.635590,-1.183817,1.020333,7.173325,5.490720,-3.560637,-7.274890,-8.456109,-5.621432,0.096949,7.300824,-8.577073,-8.375897,8.075576,4.654572,-9.999109,-2.647005,2.214943,1.602927,-7.667685,-5.848229,-2.462426,-9.996991,7.697914,-6.019039,8.812450,-3.387371,9.616568,1.865090,9.795145,-5.191599,2.463910,-8.956362,-7.945269,3.126753,-9.031103,2.468210,3.561232,1.141134,0.573655,2.352496,-2.925971,-2.426647,-6.761992,-3.026545,1.608111,5.540149,5.081435,1.956577,5.445744,0.148850,-4.929971,-7.994467,-5.106783,1.968907,-7.449083,7.093678,-0.931568,-1.286757,6.502933,-5.259063,8.135440,5.250582,2.421702,4.320048,-6.695758,-7.138572,9.216576,-7.099796,7.971119,3.904480,-4.615403,-2.366986,5.482240,3.622008,1.652499,8.411247,3.594162,-8.983103,0.364076,1.671067,-8.201461,-5.845320,-9.345321,8.421050,-1.475356,4.628637,4.840063,-7.549111,9.513978,-4.081656,2.449043,5.187677,-9.040634,-5.054401,0.479300,6.261314,7.991452,-6.731728,-9.333265,8.367387,-9.142745,0.716404,-2.569964,-8.647447,0.718740,7.601997,-8.521875,8.862488,-1.874789,-5.181399,7.002462,8.277892,-9.733635,1.013562,3.415642,6.426995,6.685863,-7.830917,-1.443331,5.016207,3.581956,7.820896,-6.525909,-5.757895,-6.449148,-6.164433,7.235499,-8.412673,8.447915,-8.873453,3.969576,5.896669,4.685236,-7.033280,-9.776408,8.225519,-4.077315,-7.292120,-6.854625,3.004470,3.244873,-4.696862,8.081999,-1.495090,-9.752420,-2.274915,8.776497,3.489981,0.066330,-1.488166,0.893194,7.952908,-2.274511,-7.785277,-2.453336,3.332191,-4.819531,-3.392860,2.423211,-8.528111,-5.118036,4.957652,-5.485823,-8.225044,-0.905786,-7.216310,-2.246677,-3.121644,3.605833,6.549889,-3.927953,0.467778,2.291271,5.754953,5.228619,-2.983082,-5.671699,0.469499,-6.416002,-9.117268,-9.345982,2.142393,-5.031301,-6.578837,-7.155126,6.273517,-3.072990,0.914953,3.238609,-1.865179,4.363253,-7.000585,-9.845893,-5.222870,9.602420,-6.785104,4.052696,-1.094404,2.608582,7.173518,4.947325,-9.806814,-9.938906,6.077518,-1.926213,-9.326184,-7.108367,3.100013,-7.766710,-5.037137,-7.787658,2.362768,-3.302444,3.238520,-3.196823,0.273310,-8.474859,-9.476003,-6.437676,-3.393961,6.153353,-9.198048,2.459885,5.376864,3.971515,2.776816,-6.536177,-8.264344,-2.111885,-2.972316,-9.884714,-6.990901,3.608524,8.768848,-3.372045,0.163724,-0.797774,-9.026380,5.252965,1.028589,4.594036,2.483118,-6.734126,-5.874650,9.059697,1.851635,-2.831621,-9.212317,-6.467525,9.154713,4.934084,1.657837,-2.457760,0.824948,3.186038,3.153905,3.326784,-4.680370,-8.228223,1.750258,6.942678,8.044580,-0.232899,0.385026,-1.871189,-4.496643,0.051827,5.194069,1.460453,-0.430356,-2.577162,7.669406,-7.252604,3.933284,-9.595994,-6.748788,2.363847,3.371537,-2.289529,7.391041,-9.929435,-5.418516,5.484079,6.820097,4.127349,2.128751,5.280447,5.598623,-1.703886], dtype = "float64")#candidate|7695|(480,)|const|float64
call_7694 = relay.TupleGetItem(func_3832_call(relay.reshape(const_7695.astype('float64'), [8, 15, 4]), relay.reshape(const_7695.astype('float64'), [8, 15, 4]), ), 0)
call_7696 = relay.TupleGetItem(func_3835_call(relay.reshape(const_7695.astype('float64'), [8, 15, 4]), relay.reshape(const_7695.astype('float64'), [8, 15, 4]), ), 0)
func_4968_call = mod.get_global_var('func_4968')
func_4969_call = mutated_mod.get_global_var('func_4969')
call_7698 = relay.TupleGetItem(func_4968_call(), 0)
call_7699 = relay.TupleGetItem(func_4969_call(), 0)
output = relay.Tuple([bop_7678,call_7682,call_7685,call_7692,call_7694,const_7695,call_7698,])
output2 = relay.Tuple([bop_7678,call_7683,call_7686,call_7693,call_7696,const_7695,call_7699,])
func_7705 = relay.Function([var_7677,], output)
mod['func_7705'] = func_7705
mod = relay.transform.InferType()(mod)
mutated_mod['func_7705'] = func_7705
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7706 = relay.var("var_7706", dtype = "uint16", shape = (9, 5, 3))#candidate|7706|(9, 5, 3)|var|uint16
func_7705_call = mutated_mod.get_global_var('func_7705')
call_7707 = func_7705_call(var_7706)
output = call_7707
func_7708 = relay.Function([var_7706], output)
mutated_mod['func_7708'] = func_7708
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4871_call = mod.get_global_var('func_4871')
func_4873_call = mutated_mod.get_global_var('func_4873')
call_7759 = func_4871_call()
call_7760 = func_4871_call()
uop_7788 = relay.cos(call_7759.astype('float32')) # shape=(1, 7, 11)
uop_7790 = relay.cos(call_7760.astype('float32')) # shape=(1, 7, 11)
func_2553_call = mod.get_global_var('func_2553')
func_2560_call = mutated_mod.get_global_var('func_2560')
var_7793 = relay.var("var_7793", dtype = "int64", shape = (600, 2))#candidate|7793|(600, 2)|var|int64
const_7794 = relay.const([[0.455928,-8.912221,-5.073906,-0.281565,-6.768819],[-6.908305,6.996961,4.242609,0.977921,-0.724014],[-5.686658,-3.736729,-0.076532,7.642555,2.349196],[3.980486,-9.412023,5.785686,5.494500,8.035335],[7.080670,8.095694,1.385336,-1.194827,-4.374227],[-7.844048,-2.319338,8.838208,8.163706,0.356626],[-5.284753,1.651527,-5.073871,9.840050,-2.180707],[-9.312894,6.747292,-2.382283,-9.767701,0.970124],[1.735526,-2.619113,2.202971,-9.778562,-2.389700],[8.839157,-5.180500,-6.401616,4.802147,0.493051],[-4.119627,5.193307,0.938601,-9.469338,-9.746229],[-8.024424,-7.619772,-8.691039,-5.752564,-7.116096],[-3.367041,3.518311,-8.884632,-9.031241,-6.887942],[-4.696046,1.555007,-9.115415,4.891825,-5.659916],[-6.189746,-1.400933,8.691096,-8.870868,0.750782],[4.936238,-9.111707,8.858155,-5.550761,-2.803066],[6.537830,7.173106,-1.746300,9.612477,4.592102],[-5.580800,-5.210556,-6.985154,6.708132,3.565700],[3.063777,-8.898806,-4.809373,-9.889857,1.227777],[8.175677,1.988345,8.089528,-0.194997,-2.723791],[1.559196,6.400829,2.149301,1.943125,5.724133],[8.449965,0.494895,-2.127494,2.315249,-6.027100],[-5.339661,9.038732,9.327005,7.085975,8.356020],[4.853626,-7.812347,-4.086607,-8.795057,-8.683386],[9.398358,-9.585898,-7.118314,-9.090554,2.006907],[-3.024211,-4.792212,-6.455412,5.288415,0.282909],[8.862345,0.688038,1.636152,2.743311,7.037173],[6.274194,9.411826,-6.443105,9.307451,-3.746566],[5.594123,-6.519132,-0.023753,7.165032,-1.406065],[2.893386,5.547828,-8.522146,-3.804611,-7.990537],[0.672483,-2.581465,5.759732,-7.042393,2.476249],[-1.411810,-7.025103,-2.886927,2.511303,-4.127932],[-2.832783,6.722982,-8.327162,0.180810,2.722815],[-8.659363,8.933144,2.469667,6.412226,3.602953],[-1.817260,-6.221160,-6.792278,-5.200949,-0.902777],[-7.339240,-4.940478,9.093268,3.894380,8.533498],[-5.749265,2.008333,1.161312,2.883861,9.632221],[8.116789,-0.918859,-4.661526,4.167856,-2.448678],[2.562719,-0.719029,-7.672238,-8.935739,-1.654142]], dtype = "float32")#candidate|7794|(39, 5)|const|float32
var_7795 = relay.var("var_7795", dtype = "uint8", shape = (165,))#candidate|7795|(165,)|var|uint8
const_7796 = relay.const([2,8,1,-4,-4,-6,-10,-10,2,3,-9,-9,-5,-8,-7,-1,-6,-8,6,5,-3,-3,-8,3,6,-4,-10,-4,2,-3,6,1,-5,-9,2,-3,5,-7,10,-4,9,-1,-3,-1,4,7,8,-4,-6,3,8,-5,1,7,6,-8,-1,2,-4,2,-9,-2,8,1,10,4,-2,-1,2,6,1,-1,-5,-10,-7,8,3,4,-5,-5,-1,-5,7,7,5,-5,9,1,-10,2,-3,-3,2,8,-4,-4,-2,-9,-6,6,4,-10,-9,7,-3,-7,1,3,-9,1,-3,-10,6,4,10,5,-3,-6,-9,-10,-4,-9,6,8,-4,-9,-6,2,10,5,-5,-3,9,-1,-2,9,9,-1,-1,-10,-10,1,-10,9,10,2,-6,4,-4,-4,-7,2,-2,-10,-2,5,3,-7,1,-5,-9,6,3,1,-8,-6,9,-10,-3,-1,3,6,-1,9,8,-3,-2,-2,-3,-6,9,6,2,-6,-4,-9,-2,1,7,-5,3,-1,1,1,8,4,9,-5,6,7,8,-7,10,-4,-9,1,-1,8,-10,7,-8,5,-3,-10,4,8,-3,2,4,-10,7,4,8,9,3,-5,-8,-10,-3,-7,8,-8,-10,-4,-6,-7,8,10,-5,1,4,-9,-6,-3,-9,-5,8,8,6,2,6,5,-3,9,6,6,-6,4,5,-3,10,1,-5,-5,1,-3,9,3,4,9,-2,2,1,-1,3,-1,6,-8,3,10,-3,2,-2,3,7,-8,5,8,-5,-2,-7,-1,7,3,-5,3,-7,-9,10,-5,-1,7,-2,-4,5,5,-1,4,8,-7,10,10,-4,6,-10,-2,-5,-1,-3,-4,-2,-2,-5,-2,-2,5,-8,-9,3,-6,-8,6,-7,-10,1,-1,-3,8,9,-3,1,-3,3,1,9,9,-6,-1,-1,5,5,6,1,7,6,-1,8,-5,-7,-6,-4,4,-3,2,3,5,3,7,-5,-4,-6,7,-2,-6,-9,-5,-1,-10,3,-8,1,-6,5,10,2,5,10,4,6,-1,4,7,-5,10,1,4,-1,6,-6,10,-10,-7,-6,-2,-3,-7,-9,4,1,3,2,-4,10,3,-6,-5,7,-9,-3,5,-4,-2,-7,8,-2,10,10,1,5,5,4,-8,-2,-3,-7,-8,1,5,-10,-5,-4,6,-10,4,-10,5,-9,-6,9,5,-10,-5,6,-8,-3,-9,-8,2,4,3,5,8,10,-6,-3,-3,5,-3,-9,7,6,10,-1,-3,-8,-6,4,-10,10,-3,8,-8,-7,-6,-4,10,-9,3,3,-6,2,-6,8,9,4,2,2,-9,-1,-5,9,4,-4,-1,-4,-9,-9,-1,5,-6,5,-2,-6,-4,-7,-3,-2,6,5,-6], dtype = "uint32")#candidate|7796|(520,)|const|uint32
call_7792 = relay.TupleGetItem(func_2553_call(relay.reshape(var_7793.astype('int64'), [10, 10, 12]), relay.reshape(var_7793.astype('int64'), [10, 10, 12]), relay.reshape(const_7794.astype('float32'), [195,]), relay.reshape(var_7795.astype('uint8'), [165,]), relay.reshape(const_7796.astype('uint32'), [520,]), ), 5)
call_7797 = relay.TupleGetItem(func_2560_call(relay.reshape(var_7793.astype('int64'), [10, 10, 12]), relay.reshape(var_7793.astype('int64'), [10, 10, 12]), relay.reshape(const_7794.astype('float32'), [195,]), relay.reshape(var_7795.astype('uint8'), [165,]), relay.reshape(const_7796.astype('uint32'), [520,]), ), 5)
output = relay.Tuple([uop_7788,call_7792,var_7793,const_7794,var_7795,const_7796,])
output2 = relay.Tuple([uop_7790,call_7797,var_7793,const_7794,var_7795,const_7796,])
func_7800 = relay.Function([var_7793,var_7795,], output)
mod['func_7800'] = func_7800
mod = relay.transform.InferType()(mod)
var_7801 = relay.var("var_7801", dtype = "int64", shape = (600, 2))#candidate|7801|(600, 2)|var|int64
var_7802 = relay.var("var_7802", dtype = "uint8", shape = (165,))#candidate|7802|(165,)|var|uint8
output = func_7800(var_7801,var_7802,)
func_7803 = relay.Function([var_7801,var_7802,], output)
mutated_mod['func_7803'] = func_7803
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6996_call = mod.get_global_var('func_6996')
func_6997_call = mutated_mod.get_global_var('func_6997')
call_7860 = relay.TupleGetItem(func_6996_call(), 0)
call_7861 = relay.TupleGetItem(func_6997_call(), 0)
output = call_7860
output2 = call_7861
func_7870 = relay.Function([], output)
mod['func_7870'] = func_7870
mod = relay.transform.InferType()(mod)
output = func_7870()
func_7871 = relay.Function([], output)
mutated_mod['func_7871'] = func_7871
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5578_call = mod.get_global_var('func_5578')
func_5579_call = mutated_mod.get_global_var('func_5579')
call_7924 = relay.TupleGetItem(func_5578_call(), 0)
call_7925 = relay.TupleGetItem(func_5579_call(), 0)
func_4458_call = mod.get_global_var('func_4458')
func_4461_call = mutated_mod.get_global_var('func_4461')
const_7930 = relay.const([-2.991733,9.324642,5.301832,3.009819,-6.526065,9.411137,1.894091,0.755832,-6.463112,1.109732,1.225294,9.753784,-0.914065,-0.154961,4.915670,-6.812449,7.155569,-7.729704,-5.725378,5.983425,-3.596433,5.549797,-7.577582,-0.502056,-6.780416,-7.913340,0.656316,-7.041551,-7.040372,4.790483,7.552394,5.347697,-0.744412,9.903007,-0.704619,4.918250,3.565729,-9.542164,4.255420,-0.879801,-5.467770,4.942848,-4.926680,8.033011,2.673054,8.884878,6.078333,0.536461,-5.721548,-8.166411,4.895533,2.959274,8.533909,-5.494457,6.993543,-8.469270,5.210855,5.488913,-4.216674,-5.657079,0.521290,-4.113287,3.322070,-8.095697,-3.273719,-7.430076,8.086282,-7.343203,3.034593,2.973852,-1.521538,2.719070,-8.091082,6.562611,5.770521,-2.180021,9.201012,6.031288,-1.729481,5.041270,6.144728,0.480342,8.735818,0.422543,-6.891087,1.161280,-7.004064,8.858211,1.194251,8.622213,-8.052607,-2.828505,-6.288126,-9.873980,9.784543,6.367842,2.842744,4.831162,4.288968,-3.783213,-8.045588,-4.802197,-0.564826,4.035004,-9.659580,-1.663232,-6.610916,0.080678,4.692347,5.272675,2.358904,8.340995,6.666792,6.233084,9.932440,9.135677,-2.528342,-8.255952,0.062047,-5.683611,7.961018,-5.971504,2.435980,-7.425792,-0.385761,-2.187758,2.515981,-9.504932,-4.603658,9.569981,6.618842,7.289513,-9.908109,-5.930644,1.272563,2.360033,-0.638406,-2.329385,6.287472,-1.239877,0.631793,9.774424,-8.815448,9.075861,-3.842395,-8.284188,4.032120,4.993948,8.967756,0.315355,-8.770147,8.066988,1.541697,7.307956,5.238399,-4.220143,-9.403984,0.546810,9.646982,3.724465,4.578931,-1.856801,-5.206857,-6.289666,5.433990,-7.061505,-4.992488,-9.229712], dtype = "float64")#candidate|7930|(168,)|const|float64
call_7929 = relay.TupleGetItem(func_4458_call(relay.reshape(const_7930.astype('float64'), [4, 3, 14])), 0)
call_7931 = relay.TupleGetItem(func_4461_call(relay.reshape(const_7930.astype('float64'), [4, 3, 14])), 0)
func_4564_call = mod.get_global_var('func_4564')
func_4569_call = mutated_mod.get_global_var('func_4569')
const_7946 = relay.const([-5,-8,-9,7,6,-2,4,6,-1,-10,-4,-2,3,-7,2,-7,-7,3,-7,-6,2,5,3,-9,-8,1,-7,-10,8,7,1,6,8,-6,2,7,-9,-9,4,1,9,3,5,-8,3,1,-1,4,8,6,1,5,8,6,-6,-3,9,10,-3,4,-6,-8,4,8,-1,4,-2,5,7,-1,8,-5,-3,-10,-5,-2,9,-10,3,5,-6,7,-1,7,6,10,-5,-3,-2,-7,-5,-10,1,5,9,8,-10,3,-9,-1,8,9,8,4,-2,9,-9,2,-8,-2,9,-2,6,2,6,8,-7,-7,-8,-7,1,-10,4,8,10,-10,-1,2,10,1,-9,1,-8,1,1,-10,3,-3,-3,2,3,6,8,1,2,-5,-3,-7,7,10,-7,10,-2,8,4,-3,-3,10,7,-1,-5,9,3,10,-5], dtype = "uint16")#candidate|7946|(165,)|const|uint16
const_7947 = relay.const([8.434196,0.227340,6.531266,-5.157448,-9.776143,-8.984762,-1.369204,3.643403,-7.129717,-4.850479,-9.450268,2.174451,-6.361859,-8.620308,0.154417,-8.701742,-0.067938,2.683058,7.100912,-7.513357,-3.790966,3.149907,5.857450,-8.789926,-1.565759,-7.346428,-4.616593,-7.275814,8.024193,9.297683,1.967640,4.738467,7.508513,1.596823,4.992186,-0.626066,8.340162,-4.796573,0.268256,-3.467921,-6.347063,-5.485005,-9.786946,3.269403,3.592734,-8.667823,-0.924872,-6.665862,5.756751,-6.866283,-3.090522,-5.220493,-2.595490,-0.529628,-9.762639,4.562111,9.862646,7.948245,9.037150,-3.470526,6.596504,5.128118,-4.899964,9.432939,9.018135,-1.774835,0.237878,5.361603,-2.104441,4.477881,1.989530,4.347645,-6.612973,-0.548587,9.941626,1.703948,-6.874276,-7.463937,-8.920156,-5.304181,1.915762,9.520115,9.031844,-8.723135,-5.890071,-7.733846,5.318693,7.491752,1.290313,2.864298,-7.912449,5.503582,4.638217,1.249069,-8.959788,2.421569,5.947676,-5.999070,-4.924764,-8.723629,-0.855825,-5.360151,-6.518110,1.262419,0.793877,-0.971245,6.046807,-1.411101,3.080597,9.451769,9.427417,4.314441,8.281502,-7.071889,-4.771128,9.214951,7.079120,-0.634818,4.579765,9.520580,-9.245869,-2.797260,-0.472294,-9.159022,-0.444197,9.386565,5.790143,-1.331200,-1.571373,-5.526941,8.230464,5.325973,4.891422,-9.742487,3.011728,5.705788,0.085074,-2.996128,3.239266,2.694201,-8.343988,9.609231,6.644475,-2.694053,-5.352155,6.863268,-9.292029,5.678090,-8.431217,-6.802538,3.403943,-1.589797,5.481593,-8.078496,0.588665,2.890604,-8.612333,8.261991,-9.379559,2.002728,-7.075484,5.535207,9.158741,-8.213989,-4.350240,-0.634885,7.965944,6.199508,3.241962,2.179772,5.710912,-6.977065,2.424806,-7.407232,9.566442,8.516031,-6.012278,9.403073,0.755435,1.106387,-1.756347,2.492599,-7.112545,9.964080,4.271284,1.670987,4.735180,-4.624981,0.806619,-6.844016,0.745617,0.933853,-2.804214,0.110411,-2.113006,-7.049606,-9.672443,-9.942180,-1.469950,-0.164968,-9.094281,-3.372028,8.580402,8.310496,2.180818,-4.531245,0.782780,-5.466453,-7.556577,3.819112,0.578422,7.885964,9.792084,-8.860743,0.301468,1.133193,-0.432813,1.799967,3.990290,4.499525,0.854836,7.715637,6.866542,-0.756487,2.353592,-7.938813,3.954942,0.587856,-5.791272,-7.443939,-3.388865,3.743123,-3.791981,6.748731,0.906058,-0.580012,-5.518004,6.727752,-2.587942,1.872169,0.235984,-1.668110,4.848845,-6.943847,6.518195,-5.197835,-2.342143,9.892975,-9.500190,-4.981256,4.450561,-0.742582,-4.497251,5.870655,-8.048048,8.682609,-6.097417,-4.980368,8.319018,5.865403,-5.589494,-5.195046,-7.695926,5.757183,-7.663124,-6.276338,-3.140362,5.084215,4.391170,0.570144,1.386112,4.428916,-3.772602,-4.609365,-7.751705,2.412605,7.299727,-6.300511,7.395383,-0.902482,6.326031,0.748885,-4.179879,1.519293,3.120225,7.676523,6.595984,-3.966583,-5.299006,1.407846,1.903927,4.567080,-5.144033,-9.605528,8.061224,-9.150522,6.310098,9.363181,-6.153384,7.768770,2.466568,7.445468,-0.076370,0.876560,-3.139232,1.401933,9.680350,-0.139226,-3.857410,4.854538,9.543101,5.935655,0.719109,-3.244876,3.447076,5.267392,-0.810034,4.594412,-1.771623,-1.862925,3.032137,-3.640487,-8.899256,-2.718915,6.035149,5.831623,9.843124,-5.705697,8.726561,2.408949,-1.799395,7.561331,9.526539,2.783323,2.761384,-0.896048,-1.916275,9.361297,8.887221,9.062418,9.853621,2.033424,1.637349,2.571386,6.871755,2.985138,2.466230,-9.415817,2.608785,7.942865,2.788172,1.630860,-8.890947,4.894324,5.996458,3.767503,1.068955,1.214139,-6.538365,1.816059,5.931902,6.946107,9.325368,0.755979,-8.634827,-9.058792,-9.477415,8.457675,-7.986226,-1.712968,3.724444,6.614686,4.978665,-0.866510,8.088710,4.890662,-3.914912,-8.524118,-3.837454,0.655918,-0.805214,9.199051,1.178544,7.189379,9.918943,7.595311,0.296161,4.983426,-6.534880,-2.014728,7.733296,-3.148605,3.084996,3.887769,3.887084,-0.107878,-6.417663,-4.171465,-2.145839,-5.834911,-4.121628,-1.631090,-5.237156,-6.316243,2.905547,-0.155872,-6.454720,8.359258,5.590022,5.655989,1.747186,-7.958523,9.444967,4.861098,6.797361,1.349074,-0.397904,2.767821,0.683719,4.630075,3.928197,8.029151,-2.729120,4.692395,-2.677928,-8.673245,-8.916555,3.437058,-6.374757,7.938056,-4.886542,7.896136,-0.538159,7.589651,-8.476190,7.676901,5.166539,2.596380,4.547355,8.963118,8.733243,2.376046,9.605618,-7.768597,5.208826,8.440972,-7.139713,-5.410813,5.366972,2.860180,-0.528751,8.795796,0.307312,-8.969578,2.231454,-7.820265,8.170897,-2.747646,6.078267,-2.690428,-7.482055,-6.768703,-8.396281,-6.962423,5.241186,6.166730,-4.893623,7.531229,1.580447,-3.825359,5.138007,-8.243697,-0.429760,8.355196,0.904913,-6.242241,3.684315,-3.109852,-0.531202,-7.525885,-2.607983,3.429382,-1.485148,0.822919,-3.929109,2.590027,-2.714278,0.746307,-6.247991,-2.063436,-6.682631,-1.578256,-8.606740,-4.768590,5.361826,-5.143037,-7.081157,-5.619469,-0.975658,4.966681,0.124624,-0.285736,-1.378840,-9.860231,9.500434,-7.193825,1.768641,0.706154,3.667335,-7.831649,-5.383223,8.788927,1.543093,-0.390715,1.952992,-5.195282,-3.283654,-3.971380,-6.654885,8.394511,-8.990602,-0.528640,-5.352706,9.212508,4.432913,-5.019610,-3.071499,-7.714493,8.066783,5.296272,-9.465009,3.754519,-4.044987,8.503342,-0.218016,-4.184464,-4.365368,6.780361,0.551903,5.097659,-9.349250,-7.766271,1.296615,-8.933215,0.860809,1.951958,-3.273902,-4.810245,-7.105841,5.339187,1.605204,3.272248,-9.943190,-9.287066,7.841812,-7.361881,-1.468095,-1.491427,-1.159224,-7.046636,-9.338818,1.833864,0.357346,-9.165207,-5.416776,-8.800683,4.642874,7.836092,-5.252307,3.415555,1.937323,-6.453989,8.525295,2.028840,6.679127,0.055432,2.670067,-5.203058,4.384310,0.161273,3.943934,8.536657,2.714398,-9.313251,-4.669917,-8.979573,-8.460551,5.123941,4.826101,2.441185,2.147070,4.420983,7.187554,1.768535,-7.524070,-4.864741,-8.952575,-9.965140,8.465718,-8.049134,8.811203,2.171829,3.268757,1.065058,-0.745224,4.545708,3.515504,-1.463588,2.837356,6.913966,-4.743368,4.369076,7.068074,0.145918,-8.642895,3.333692,-2.732664,9.194968,0.550179,-2.586526,4.023124,5.881616,-8.822360,-4.722085,8.823984,5.466547,6.119674,1.763786,8.126173,6.856667,-5.264731,8.162601,-8.332422,-0.182609,0.858084,5.391899,-9.214469,1.404657,-3.259968,-8.961149,-6.024940,-2.645708,-8.311219,-0.292209,-2.682660,-9.051708,-2.246618,6.597326,-0.715162,9.473324,-8.873175,1.277664,7.589111,-4.982699,-4.705268,-8.994032,-6.122401,-8.446114,-0.185294,-9.186856,2.478912,2.569773,-4.470749,-6.354389,-8.953168,-9.428582,-0.188900,2.838689,1.135094,5.705309,1.996031,-4.669274,-4.944230,-4.547802,8.303572,3.522175,6.361485,0.916731,8.102475,4.837824,4.883193,4.433234,9.490771,7.151354,-3.359137,-8.301329,-0.383232,6.175628,2.532079,5.716739,0.238529,5.925232,7.698904,-7.470861,-7.488823,-5.376672,-0.103183,9.989797,1.749662,-5.047240,-9.814796,7.712296,6.061104,3.764289,-3.939958,4.214715,-8.968887,8.570097,1.881413,-2.085272,9.542849,9.680593,-4.192912,3.709301,-7.726999,6.684193,-2.215580,4.499522,-0.591225,-5.639337,-0.003547,-7.751752,5.758184,-1.730484,2.666425,-1.477631,-3.502872,-5.122197,2.798577,-9.867335,0.350725,-0.755259,-7.342929,6.927307,-4.959355,6.786569,-2.676397,9.570657,6.582347,-8.093204,5.292827,7.172413,7.629145,-5.938861,7.861887,-3.296824,2.128817,-9.611151,-5.521580,-8.726921,-6.695666,8.734023,1.710694,-9.105669,1.961585,8.395115,5.687098,-9.302596,9.353994,5.919285,8.101582,5.510920,-1.315362,-3.494137,-5.209160,-3.962692,-0.921604,7.991157,-8.341480,9.520053,-7.688425,-7.125883,4.357733,-8.869247,-5.303876,-9.424516,2.453394,-9.763969,6.696027,9.745982,9.356252,-7.966891,6.816015,9.451176,6.220561,6.016318,9.391047,-4.997657,-2.090784,4.089928,-3.130250,-1.821283,-3.342599,-7.357377,5.564213,5.790508,8.336688,2.392812,0.155106,-7.380339,9.375109,-6.936452,-5.586839,1.968095,-1.813615,1.352694,-7.138351,-7.023711,-7.684534,2.833564,-9.072934,-1.874533,-5.603449,3.500283,-7.940638,6.804708,6.733143,-0.585715,-7.877059,7.141787,7.726294,9.318804,-5.097354,-4.620594,-0.869236,6.601075,-7.463000,-2.108560,4.085627,-9.334703,-2.817098,1.387931,4.823198,2.130739,5.549530,-5.924642,0.118593,5.447039,-5.680362,-9.978121,2.612997,3.518539,6.001993,-9.782350,1.783649,-8.967027,-4.900898,-2.481793,9.811273,6.954053,-6.438141,5.932391,-9.920528,3.538914,-0.227357,0.311023,5.240624,7.248679,1.522765,6.613152,-4.771047,-4.233706,3.712395,7.546854,-3.524205,-0.698935,-3.019074,-7.671533,-7.506527,1.214513,7.148106,-9.074742,-3.614110,7.915965,5.481721,-8.900832,-3.582703,8.685732,8.027454,-1.373466,8.344773,-2.079713,0.486120,-6.863672,8.620527,-1.359715,9.318456,4.402693,9.352450,9.302316,-1.309156,-4.279724,-3.675730,-5.984212,-5.309385,7.224729,3.800766,-9.467171,-0.011787,-9.527034,-3.442804,-8.493856,4.427783,7.766055,-6.008908,-8.922988,5.661128,7.840201,-3.724135,0.898449,-0.866090,-4.258015,1.698853,-1.439397,-2.078532,9.941325,-2.405921,-3.784693,5.587232,-8.609233,-8.603581,-3.836068,2.524817,5.885863,-5.785658,9.104912,0.058690,-1.612057,-0.071134,-7.243073,-5.078233,5.250718,3.239620,-1.071012,-8.379048,-8.639250,1.465146,-8.608438,-8.296814,-5.237747,-3.669285,0.212892,-7.654445,-9.431326,7.957136,7.763249,-0.191537,-9.026133,-4.000694,7.070190,6.181907,2.213764,-9.791988,4.550235,8.679232,8.089471,7.434050,1.731014,8.746055,-3.179960,-1.073770,-5.479846,5.721015,-2.348420,3.393973,-0.845548,9.111210,-3.808329,1.966252,-6.368890,7.010651,-3.855122,-2.306220,-6.029230,-5.325622,-6.576873,-5.852161,6.132919,3.057646,3.302021,3.248532,1.471918,1.177088,9.523779,-5.623762,9.282293,3.825258,-8.984793,7.563677,3.686782,-9.300656,-1.065597,-6.096908,-7.036619,9.623289,9.248963,8.661682,4.960492,-9.154495,7.024189,-3.712510,-3.716897,-8.317646,-5.375229,-5.823487,7.412911,3.328725,1.845991,-7.855916,-8.200522,-5.372395,-1.352303,-0.635876,-4.196028,-5.367537,0.765523,6.618613,1.624638,0.299209,2.214492,9.789097,-2.333785,4.565449,9.647376,2.040562,7.095414,3.988608,1.137606,-2.826236,-3.275706,3.139440,8.434261,0.426385,-7.540059,-2.340303,-1.437089,3.325636,2.782521,7.940628,-3.068057,-9.415166,-6.890223,8.607049,5.719846,8.117330,9.455317,-3.226617,4.582564,4.097259,-9.635432,-7.625088,2.448554,7.619845,-6.122389,7.060885,0.498410,-6.441420,6.058890,1.090866,7.974976,-4.032654,4.205336,-9.041370,7.675287,-9.182281,5.757000,-2.835975,-1.591229,5.732966,-0.473789,1.912281,-4.769411,8.045427,-9.522740,7.176411,-4.351909,-4.670911,-5.157395,-4.637096,-4.630344,5.019626,1.224400,-5.443433,9.274564,-6.995103,1.940348,2.742151,-6.008431,1.818805,1.601524,-3.086164,4.204233,6.317701,3.137194,7.527001,-0.380858,-6.511835,-5.848228,-2.994387,-3.489333,-3.752855,-5.699985,-6.237555,-2.853938,6.934952,-1.156285,6.264669,-1.549936,1.577904,0.106297,9.761206,3.935282,9.389873,2.591951,0.760077,0.283121,8.515453,5.975752,-8.350688,3.812787,8.059925,2.210120,5.717548,8.535490,-6.770751,8.668356,-4.213352,2.454554,5.434663,5.119945,-1.243652,-9.434079,8.356202,9.791688,5.850824,7.124865,-9.456275,-5.609795,0.253962,-5.743426,-8.980343,3.918357,-7.353819,-1.072554,4.521231,-5.676430,-9.641485,1.967090,-4.886206,7.499339,-5.114130,-3.837777,-0.334071,-8.197447,-3.674600,2.113870,4.233560,-5.951990,6.746195,8.281987,-4.333657,-4.604047,-9.615934,-7.951646,4.312859,-5.957804,4.206761,-7.402202,3.531013,5.398809,-3.008572,-8.765812,1.932396,0.851091,-7.770822,-6.706538,2.054541,0.540385,-5.994867,-0.851286,-5.109912,2.558214,-1.998468,6.198567,9.895634,7.888686,1.436918,3.659620,-6.153055,7.712383,9.649759,-6.306499,-2.059540,-0.616138,3.971683,-5.340162,5.305870,0.581630,-5.037772,-0.675260,9.566069,8.411018,1.928936,-0.453093,7.402235,-2.760867,5.139946,6.746126,6.916006,-7.351091,9.674058,-7.414961,4.574527,-6.648206,-5.458579,0.940389,-3.326863,-2.953585,2.803884,-8.649620,-5.800037,2.644431,8.375850,6.675895,-6.224162,0.787243,2.930230,-6.312356,-9.559476,-7.402938,2.082094,-6.515053], dtype = "float64")#candidate|7947|(1232,)|const|float64
var_7948 = relay.var("var_7948", dtype = "float64", shape = (77, 10))#candidate|7948|(77, 10)|var|float64
call_7945 = relay.TupleGetItem(func_4564_call(relay.reshape(const_7946.astype('uint16'), [165,]), relay.reshape(const_7947.astype('float64'), [16, 7, 11]), relay.reshape(var_7948.astype('float64'), [10, 7, 11]), ), 3)
call_7949 = relay.TupleGetItem(func_4569_call(relay.reshape(const_7946.astype('uint16'), [165,]), relay.reshape(const_7947.astype('float64'), [16, 7, 11]), relay.reshape(var_7948.astype('float64'), [10, 7, 11]), ), 3)
output = relay.Tuple([call_7924,call_7929,const_7930,call_7945,const_7946,const_7947,var_7948,])
output2 = relay.Tuple([call_7925,call_7931,const_7930,call_7949,const_7946,const_7947,var_7948,])
func_7960 = relay.Function([var_7948,], output)
mod['func_7960'] = func_7960
mod = relay.transform.InferType()(mod)
var_7961 = relay.var("var_7961", dtype = "float64", shape = (77, 10))#candidate|7961|(77, 10)|var|float64
output = func_7960(var_7961)
func_7962 = relay.Function([var_7961], output)
mutated_mod['func_7962'] = func_7962
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5005_call = mod.get_global_var('func_5005')
func_5007_call = mutated_mod.get_global_var('func_5007')
call_7966 = relay.TupleGetItem(func_5005_call(), 0)
call_7967 = relay.TupleGetItem(func_5007_call(), 0)
output = relay.Tuple([call_7966,])
output2 = relay.Tuple([call_7967,])
func_7968 = relay.Function([], output)
mod['func_7968'] = func_7968
mod = relay.transform.InferType()(mod)
output = func_7968()
func_7969 = relay.Function([], output)
mutated_mod['func_7969'] = func_7969
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7049_call = mod.get_global_var('func_7049')
func_7050_call = mutated_mod.get_global_var('func_7050')
call_7985 = relay.TupleGetItem(func_7049_call(), 0)
call_7986 = relay.TupleGetItem(func_7050_call(), 0)
uop_7987 = relay.log(call_7985.astype('float32')) # shape=(12, 15, 9)
uop_7989 = relay.log(call_7986.astype('float32')) # shape=(12, 15, 9)
var_7990 = relay.var("var_7990", dtype = "float32", shape = (12, 15, 9))#candidate|7990|(12, 15, 9)|var|float32
bop_7991 = relay.not_equal(uop_7987.astype('bool'), relay.reshape(var_7990.astype('bool'), relay.shape_of(uop_7987))) # shape=(12, 15, 9)
bop_7994 = relay.not_equal(uop_7989.astype('bool'), relay.reshape(var_7990.astype('bool'), relay.shape_of(uop_7989))) # shape=(12, 15, 9)
uop_7998 = relay.acos(bop_7991.astype('float64')) # shape=(12, 15, 9)
uop_8000 = relay.acos(bop_7994.astype('float64')) # shape=(12, 15, 9)
output = relay.Tuple([uop_7998,])
output2 = relay.Tuple([uop_8000,])
func_8005 = relay.Function([var_7990,], output)
mod['func_8005'] = func_8005
mod = relay.transform.InferType()(mod)
mutated_mod['func_8005'] = func_8005
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8006 = relay.var("var_8006", dtype = "float32", shape = (12, 15, 9))#candidate|8006|(12, 15, 9)|var|float32
func_8005_call = mutated_mod.get_global_var('func_8005')
call_8007 = func_8005_call(var_8006)
output = call_8007
func_8008 = relay.Function([var_8006], output)
mutated_mod['func_8008'] = func_8008
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5906_call = mod.get_global_var('func_5906')
func_5907_call = mutated_mod.get_global_var('func_5907')
call_8015 = relay.TupleGetItem(func_5906_call(), 1)
call_8016 = relay.TupleGetItem(func_5907_call(), 1)
output = call_8015
output2 = call_8016
func_8018 = relay.Function([], output)
mod['func_8018'] = func_8018
mod = relay.transform.InferType()(mod)
output = func_8018()
func_8019 = relay.Function([], output)
mutated_mod['func_8019'] = func_8019
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8025 = relay.var("var_8025", dtype = "float64", shape = (8, 4, 9))#candidate|8025|(8, 4, 9)|var|float64
uop_8026 = relay.sinh(var_8025.astype('float64')) # shape=(8, 4, 9)
func_5014_call = mod.get_global_var('func_5014')
func_5016_call = mutated_mod.get_global_var('func_5016')
call_8030 = relay.TupleGetItem(func_5014_call(), 0)
call_8031 = relay.TupleGetItem(func_5016_call(), 0)
output = relay.Tuple([uop_8026,call_8030,])
output2 = relay.Tuple([uop_8026,call_8031,])
func_8034 = relay.Function([var_8025,], output)
mod['func_8034'] = func_8034
mod = relay.transform.InferType()(mod)
mutated_mod['func_8034'] = func_8034
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8035 = relay.var("var_8035", dtype = "float64", shape = (8, 4, 9))#candidate|8035|(8, 4, 9)|var|float64
func_8034_call = mutated_mod.get_global_var('func_8034')
call_8036 = func_8034_call(var_8035)
output = call_8036
func_8037 = relay.Function([var_8035], output)
mutated_mod['func_8037'] = func_8037
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8039 = relay.var("var_8039", dtype = "float32", shape = (16, 11, 10))#candidate|8039|(16, 11, 10)|var|float32
uop_8040 = relay.sinh(var_8039.astype('float32')) # shape=(16, 11, 10)
func_3871_call = mod.get_global_var('func_3871')
func_3874_call = mutated_mod.get_global_var('func_3874')
const_8046 = relay.const([[4.618250,7.368095],[1.357548,-3.377947],[5.318466,-5.126545],[9.060932,4.262336],[3.005484,-1.005477],[-0.374936,2.771849],[5.921516,-7.397842],[9.068075,-2.698097],[6.028800,-3.540620],[-4.353817,2.154325],[-6.139380,2.518995],[-4.067289,3.809590],[-0.662013,5.657306],[1.637126,0.110547],[6.716615,-8.897001],[-6.863579,5.065665],[-6.486392,-0.202048],[5.573035,-6.605369],[7.833941,0.620913],[-7.150107,0.979336],[-8.979542,-3.855205],[-2.137447,-1.049131],[0.469270,-5.480572],[-9.020013,3.685062],[4.851916,3.267829],[2.116581,-0.855418],[-8.690549,-8.253071],[-5.262498,5.084681],[-2.758522,-5.811829],[6.771923,2.064662],[6.350853,-2.560647],[5.926018,-2.509479],[-6.602011,6.250366],[1.352323,-0.184093],[8.288872,8.244970],[1.478823,-5.809279],[-3.884553,-6.918837],[-5.188084,-7.241238],[4.697295,4.187744],[-8.335847,-8.730285],[7.568502,-2.213982],[8.687026,-8.019327],[-5.656498,8.132922],[-7.866762,9.006779],[-5.866209,2.461505],[1.929081,1.044653],[-5.906084,-8.383031],[-3.580905,4.370157],[-3.567980,5.181547],[4.795158,3.823346],[1.046906,6.174565],[-8.290918,-3.562118],[-3.555346,2.599878],[9.762835,-9.910815],[8.080232,-3.069695],[0.413618,-2.491358],[6.796809,-0.237525],[8.174625,-5.620044],[-4.337299,5.045221],[2.510207,9.212956],[2.031819,5.125129],[5.450161,-5.869750],[-9.471799,3.862895],[6.360575,-8.957182],[9.770602,2.712031],[-3.108062,3.661759],[6.399765,4.695990],[-4.634771,-5.486641],[-7.035482,-7.115096],[0.942636,-2.073489],[0.159842,-8.556779],[9.340956,3.765231],[7.946859,-3.031607],[5.374954,-4.344480],[-7.014497,2.698188],[-6.815764,-7.492927],[0.633483,4.105891],[2.410209,7.339048],[2.974661,4.421353],[-6.611690,0.750570],[9.245694,4.742515],[5.992181,6.753590],[9.928022,-7.962204],[-2.536990,-5.945264],[2.469109,9.018239],[-4.009612,7.894680],[-6.557887,-1.930365],[0.882166,-3.235778],[4.650580,5.584117],[9.651861,-7.430913],[3.920688,-3.529931],[8.299420,-4.186399],[-6.396125,-1.474366],[-0.648291,-2.606851],[-7.433566,3.316338],[-6.909244,9.709244],[6.914513,-6.598931],[1.807878,9.195536],[7.204506,3.168563],[2.502850,9.316396],[7.535338,-1.237590],[8.066393,-1.286266],[1.625498,-7.649138],[4.611990,-1.226739],[-4.344012,2.654961],[0.111523,4.406245],[-8.794934,-3.119114],[-9.435679,-5.255793],[6.962098,8.576707],[1.777424,-7.727056],[1.722883,4.209130],[-9.024220,3.702388],[-9.204483,9.837092],[4.859341,0.990579],[2.503082,9.177211],[3.682899,2.374409],[-2.848730,-5.597657],[-1.407895,3.232781],[5.819001,-6.646656],[-2.100525,-2.022129],[-1.857645,-3.824586],[-7.379599,3.777541],[6.333821,1.848105],[-9.776185,2.811020],[9.787142,1.123650],[1.682838,3.909759],[7.562992,-6.203009],[2.098651,-3.009427],[-3.441430,-4.305071],[-9.848903,-7.312037],[-0.715295,9.777075],[-8.981270,-9.507255],[-4.726854,4.215638],[-7.798293,-0.936806],[-3.139135,6.983791],[6.450432,4.655719],[-4.359779,9.401739],[-7.066816,8.446224],[4.634266,7.371461],[9.319631,-9.099793],[8.299662,7.643588],[-4.690654,9.983334],[4.325058,9.663952],[0.265979,-0.854982],[-9.243984,-8.879603],[-7.075270,2.213516],[-9.473696,6.372648],[-4.314355,1.715620],[-5.757348,6.583096],[-7.719673,7.818891],[9.662548,1.998947],[-4.571695,8.816626],[0.653452,4.883990],[6.692047,0.483269],[8.697415,0.245339],[-3.940280,-0.308068],[-2.269152,-8.156419],[-4.836172,-4.032692],[-7.701764,-0.548062],[6.663027,2.224460],[-0.221423,-9.191026],[9.815814,2.368417],[8.702898,6.380310],[-6.039828,-4.284579],[6.151461,2.563072],[-4.719621,-1.143152],[7.174367,9.439022],[-7.505427,4.686898],[0.932724,-1.270110],[-9.123896,-8.930349],[-2.748578,7.910354],[8.411097,5.815029],[-0.418983,-5.083642],[-2.262400,3.315806],[-7.791910,7.223432],[9.359673,3.291221],[-2.572496,-6.797122],[4.469123,-5.262026],[-7.306051,-6.560255],[2.524843,-3.415133],[6.159237,2.128282],[6.572759,3.529076],[0.230804,-5.188861],[-3.262735,-2.359691],[2.659079,2.186197],[3.112053,5.119652],[7.821848,8.044539],[2.743075,8.239316],[-7.915870,4.103403],[6.281350,1.130765],[2.667570,-4.168263],[4.155419,-3.110895],[6.691036,-3.955770],[-4.414356,-0.379579],[8.122198,-8.865659],[7.355773,0.187600],[-6.249727,-1.772803],[-5.968837,1.026531],[3.870103,6.696436],[-0.806225,-3.181894],[2.099982,-7.979813],[-8.611413,5.205259],[-9.960468,-4.330822],[1.504691,9.249895],[-7.957737,-7.229159],[-3.121326,-8.200651],[8.369864,-6.501309],[-1.205151,3.358753],[1.676414,4.746788],[-5.338852,-5.928297],[-2.313323,-0.593237],[-8.170084,-4.943440],[7.271182,7.754374],[-8.652781,-8.648058],[6.366361,3.385661],[2.048911,1.021485],[-3.886728,-3.376279],[-2.732220,6.203516],[5.616382,-2.675365],[2.663533,8.958619],[1.212830,-4.613233],[-5.982584,4.167178],[-9.179035,1.992177],[2.277855,-5.021872],[5.552949,-4.650105],[3.362688,9.516676],[-8.749609,0.077433],[-6.521557,-1.848021],[1.488729,9.253822],[4.653671,-9.492194],[7.507712,8.110235],[-7.450788,-3.894438],[-8.257354,3.933330],[-8.981474,1.511417],[6.612991,-1.881391],[1.210434,7.393967],[-3.698410,-1.747078],[-4.655565,1.969887],[9.869501,-7.088862],[-8.944689,6.487200],[-2.445848,3.759495],[7.382463,3.183838],[7.407013,-5.803208],[-2.943479,3.211959],[-6.537541,8.173007],[-2.404308,-2.329100],[8.105117,-1.772519],[9.591971,9.891424],[-5.642181,-8.704530],[7.296214,-4.029468],[-8.062833,5.124621],[2.355186,9.375731],[-6.777843,-6.919758],[4.984422,-5.540688],[2.467365,-1.124829],[6.472489,-4.473714],[-8.227849,2.283809],[-6.045243,-5.295210],[7.715580,-3.787790],[7.854742,-4.140200],[-9.947587,-9.393377],[-7.362841,-9.525635],[2.952156,-8.431603],[-0.230052,7.514875],[-1.290881,-3.970808],[-2.094626,2.483292],[-7.828811,-7.860289],[7.947509,-9.597827],[3.399290,5.014695],[0.436136,-3.657192],[-3.927048,9.914008],[7.192677,-3.793106],[-6.192857,6.851674],[5.869850,-7.219062],[-9.752309,6.742990],[7.041086,9.813313],[0.156789,-1.464757],[-6.587169,2.501057],[-6.938370,-2.152563],[7.036867,7.461814],[6.297271,9.315753],[9.362144,5.614847],[-7.800375,5.768078],[-5.124724,7.314045],[1.181312,-8.956665],[-0.114068,-0.223409],[0.962220,-5.415028],[4.199643,-6.022042],[-3.387556,-4.770549],[6.692338,1.161439],[-9.079066,1.865503],[5.431113,-4.110781],[4.076891,5.824468],[8.389931,-6.551978],[-2.348254,7.487124],[-9.984790,-3.372540],[0.112224,-4.051718],[-7.810171,4.711342],[-7.151489,6.049075],[4.838800,-7.992436],[2.248542,-5.084969],[0.474329,2.662047],[3.742641,-2.086840],[-1.800372,1.149475],[7.738917,-2.276408],[7.791513,-6.236698],[-0.365178,-8.270005],[-3.786750,-7.602965]], dtype = "float64")#candidate|8046|(308, 2)|const|float64
call_8045 = func_3871_call(relay.reshape(const_8046.astype('float64'), [8, 7, 11]))
call_8047 = func_3871_call(relay.reshape(const_8046.astype('float64'), [8, 7, 11]))
uop_8050 = relay.cosh(uop_8040.astype('float64')) # shape=(16, 11, 10)
uop_8060 = relay.asinh(uop_8040.astype('float32')) # shape=(16, 11, 10)
uop_8085 = relay.acosh(uop_8060.astype('float32')) # shape=(16, 11, 10)
output = relay.Tuple([call_8045,const_8046,uop_8050,uop_8085,])
output2 = relay.Tuple([call_8047,const_8046,uop_8050,uop_8085,])
func_8091 = relay.Function([var_8039,], output)
mod['func_8091'] = func_8091
mod = relay.transform.InferType()(mod)
mutated_mod['func_8091'] = func_8091
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8092 = relay.var("var_8092", dtype = "float32", shape = (16, 11, 10))#candidate|8092|(16, 11, 10)|var|float32
func_8091_call = mutated_mod.get_global_var('func_8091')
call_8093 = func_8091_call(var_8092)
output = call_8093
func_8094 = relay.Function([var_8092], output)
mutated_mod['func_8094'] = func_8094
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2723_call = mod.get_global_var('func_2723')
func_2724_call = mutated_mod.get_global_var('func_2724')
call_8106 = func_2723_call()
call_8107 = func_2723_call()
output = relay.Tuple([call_8106,])
output2 = relay.Tuple([call_8107,])
func_8165 = relay.Function([], output)
mod['func_8165'] = func_8165
mod = relay.transform.InferType()(mod)
mutated_mod['func_8165'] = func_8165
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8165_call = mutated_mod.get_global_var('func_8165')
call_8166 = func_8165_call()
output = call_8166
func_8167 = relay.Function([], output)
mutated_mod['func_8167'] = func_8167
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8255 = relay.var("var_8255", dtype = "float64", shape = (10, 13, 12))#candidate|8255|(10, 13, 12)|var|float64
var_8256 = relay.var("var_8256", dtype = "float64", shape = (10, 13, 12))#candidate|8256|(10, 13, 12)|var|float64
bop_8257 = relay.power(var_8255.astype('float64'), relay.reshape(var_8256.astype('float64'), relay.shape_of(var_8255))) # shape=(10, 13, 12)
func_7406_call = mod.get_global_var('func_7406')
func_7407_call = mutated_mod.get_global_var('func_7407')
call_8264 = relay.TupleGetItem(func_7406_call(), 0)
call_8265 = relay.TupleGetItem(func_7407_call(), 0)
func_4458_call = mod.get_global_var('func_4458')
func_4461_call = mutated_mod.get_global_var('func_4461')
const_8268 = relay.const([3.562211,-0.908996,0.602518,-4.445670,5.307961,2.805797,-7.449082,0.588053,-0.574517,-8.118466,-5.297709,-7.694480,7.676544,6.936922,-1.981853,-3.112525,-7.853341,-6.211873,5.820453,4.079201,9.730339,-5.422999,5.234550,0.163660,5.755148,-3.993879,-7.980383,-9.864018,5.843723,1.363390,3.054509,5.373106,-4.370327,2.298313,-2.407691,-0.749840,7.248486,-3.077963,-2.722681,-4.898239,1.098870,4.200233,-7.695330,-5.441996,9.035155,7.578178,7.282095,6.337778,-4.894975,8.064373,1.952229,-1.913348,-1.637640,1.096560,-2.922747,-8.156884,-9.176011,-3.812209,0.107975,-5.157023,-3.907772,2.984937,-8.047110,7.562213,0.159505,-0.236238,-4.853533,-0.929892,1.583771,2.455040,7.021589,4.343316,-4.699287,-2.662062,-2.459399,-5.417832,-0.470643,-1.798550,-8.702203,6.455382,-3.987925,-2.426331,-0.911645,1.174427,-1.694817,-6.248135,4.761104,-4.152865,9.085531,4.509909,4.534623,-1.119343,-0.052560,0.162026,-1.465612,-8.997006,-1.322737,4.006658,8.649762,-4.019948,7.746521,-7.037561,-3.579959,-1.271149,5.327612,-2.994248,-5.323603,3.900678,2.646834,3.403331,4.109620,2.609150,4.243235,5.669094,4.657077,-8.100361,-3.620045,7.780327,6.715439,-3.930437,-5.736666,-0.749168,9.807351,8.681277,-1.663512,-6.026557,-4.810114,2.714983,-7.105239,2.844701,-5.235292,-3.611764,-1.311742,5.433294,-0.008989,-9.175253,-7.969270,2.038544,-4.546574,0.327244,7.537032,9.984958,4.223185,0.498610,4.019392,7.606765,0.784871,-9.264747,-6.896274,2.711675,3.277106,0.567490,-1.785553,4.071190,1.363559,5.428905,-5.598316,-0.386679,8.432951,1.872526,-7.608169,-0.390875,-8.024785,9.672164,0.108733,9.361925,5.870467,-7.983628], dtype = "float64")#candidate|8268|(168,)|const|float64
call_8267 = relay.TupleGetItem(func_4458_call(relay.reshape(const_8268.astype('float64'), [4, 3, 14])), 0)
call_8269 = relay.TupleGetItem(func_4461_call(relay.reshape(const_8268.astype('float64'), [4, 3, 14])), 0)
func_4341_call = mod.get_global_var('func_4341')
func_4342_call = mutated_mod.get_global_var('func_4342')
call_8277 = func_4341_call()
call_8278 = func_4341_call()
output = relay.Tuple([bop_8257,call_8264,call_8267,const_8268,call_8277,])
output2 = relay.Tuple([bop_8257,call_8265,call_8269,const_8268,call_8278,])
func_8280 = relay.Function([var_8255,var_8256,], output)
mod['func_8280'] = func_8280
mod = relay.transform.InferType()(mod)
mutated_mod['func_8280'] = func_8280
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8280_call = mutated_mod.get_global_var('func_8280')
var_8282 = relay.var("var_8282", dtype = "float64", shape = (10, 13, 12))#candidate|8282|(10, 13, 12)|var|float64
var_8283 = relay.var("var_8283", dtype = "float64", shape = (10, 13, 12))#candidate|8283|(10, 13, 12)|var|float64
call_8281 = func_8280_call(var_8282,var_8283,)
output = call_8281
func_8284 = relay.Function([var_8282,var_8283,], output)
mutated_mod['func_8284'] = func_8284
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3786_call = mod.get_global_var('func_3786')
func_3787_call = mutated_mod.get_global_var('func_3787')
call_8292 = func_3786_call()
call_8293 = func_3786_call()
func_7637_call = mod.get_global_var('func_7637')
func_7641_call = mutated_mod.get_global_var('func_7641')
const_8297 = relay.const([-1,7,5,2,-6,-8,5,3,-5,5,-4,2,7,-2,-7,4,-5,2,2,1,8,-6,-3,-1,7,2,6,1,-4,-4,10,-6,8,5,2,1,7,-5,8,9,-3,9,7,-3,-5,-1,-6,9,7,-5,2,-10,-5,9,2,9,9,3,7,6,-4,8,5,5,3,-10,-7,-4,-5,6,-3,3,2,-9,-3,-3,-3,10,-10,10,4,-8,10,3,-7,5,1,-1,3,4,-4,-6,9,4,10,3,-4,4,3,9,4,9,1,10,9,-3,-2,9,-4,3,7,-7,8,-4,9,-2,-9,-2,-10,-6,8,-9,8,-4,-3,8,4,2,7,5,-1,-10,-8,1,-5,-5,4,-3,-4,-7,-3,-10,10,-1,9,-4,-2,1,7,6,-8,-4,6,7,4,8,8,-4,-1,-7,10,-3,8,-10,7,-6,8,-9,9,4,-1,1,-2,10,-10,6,-2,10,-2,-4,8,-3,-4,-1,-8,4,-9,9,-10,7,-9,9,1,-1,4,9,9,-10,-4,-6,8,-2,-5,-10,-1,6,-9,1,-6,2,-10,-4,3,-2,5,-7,-7,9,1,6,8,4,-9,-9,7,-7,-2,-6,4,-10,-5,1,-8,-2,10,3,-4,-7,-1,-7,6,5,-4,-1,-8,-7,-1,-3,-1,-10,-6,10,9,2,2,8,3,5,4,-8,-10,3,5,2,2,-8,-4,-8,-6,5,-10,-7,4,-2,2,9,7,3,10,8,7,2,-2,6,-1,-5,4,7,6,6,-1,7,-9,-8,6,-2,-1,6,-7,3,-5,-10,-10,5,-8,1,-6,-5,-1,-5,-10,9,3,7,10,-7,-8,-2,-6,4,7,-1,-6,-9,1,3,3,3,9,-6,-9,4,2,6,4,-1,-5,-8,-1,9,1,3,6,-9,-7,-6,8,4,9,-7,9,-5,-10,-9,-8,-3,8,6,-4,-1,-10,9,-8,-9,4,9,3,2,-7,-4,-7,7,-3,-1,5,-9,-10,4,-3,6,-8,3,-9,7,-3,-2,-8,-6,-9,7,9,-1,-6,7,-10,7,8,-1,2,-4,7,-5,-4,-5,8,-8,-9,5,8,5,5,-7,-9,-1,-4,-7,-2,7,1,-10,7,-5,-9,-2,-2,-4,-8,-9,9,9,6,6,8,5,-7,-10,5,1,-6,2,9,-7,8,7,8,1,-3,4,-10,1,-6,-10,-6,6,3,2,-5,-2,-4,10,-4,-8,8,6,-2,5,-8,10,7,6,3,3,-6,1,-1,-4,2,2,7,-1], dtype = "uint8")#candidate|8297|(480,)|const|uint8
call_8296 = relay.TupleGetItem(func_7637_call(relay.reshape(const_8297.astype('uint8'), [8, 12, 5]), relay.reshape(const_8297.astype('uint8'), [8, 12, 5]), ), 1)
call_8298 = relay.TupleGetItem(func_7641_call(relay.reshape(const_8297.astype('uint8'), [8, 12, 5]), relay.reshape(const_8297.astype('uint8'), [8, 12, 5]), ), 1)
func_4815_call = mod.get_global_var('func_4815')
func_4817_call = mutated_mod.get_global_var('func_4817')
call_8329 = relay.TupleGetItem(func_4815_call(), 0)
call_8330 = relay.TupleGetItem(func_4817_call(), 0)
var_8338 = relay.var("var_8338", dtype = "float64", shape = (14, 7, 11))#candidate|8338|(14, 7, 11)|var|float64
bop_8339 = relay.left_shift(call_8296.astype('uint32'), var_8338.astype('uint32')) # shape=(14, 7, 11)
bop_8342 = relay.left_shift(call_8298.astype('uint32'), var_8338.astype('uint32')) # shape=(14, 7, 11)
func_7385_call = mod.get_global_var('func_7385')
func_7387_call = mutated_mod.get_global_var('func_7387')
const_8352 = relay.const([0.127972,0.915352,7.798611,-5.692449,5.467020,-8.004489,-6.060955,1.020517,-6.238206,-8.858304,6.090086,5.854469,-9.309069,6.551937,-1.640851,9.858269,1.349204,-4.522102,0.620736,-7.520656,2.381035,6.958139,-4.727836,-6.618665,7.512964,7.772094,-2.624943,1.845602,-5.144258,1.115773,9.951520,-6.436812,1.942495,1.662113,-3.292211,8.493195,-0.863458,1.753563,2.286434,-4.973716,-6.179333,2.662252,-6.506831,-7.538637,3.854760,1.405529,-2.414002,-6.655258,4.987217,-9.336903,8.363620,2.446083,-0.411354,-8.775672,8.924713,-6.231369,3.378964,-7.376404,7.584863,-2.257774,-9.517086,8.737457,-7.655378,-1.611717,-0.784496,4.183065,2.628272,5.010078,5.444052,7.510868,-5.625543,-5.379443,-8.398480,-2.098900,1.836814,-7.296883,-7.793841,6.711023,7.921162,-7.908641,-6.881121,9.796451,7.401539,-1.496048,7.638055,2.743770,9.973136,8.875538,-7.375912,8.679813,-6.500187,-1.236465,-7.362314,4.591497,2.900354,8.525299,1.641884,0.152757,5.348181,9.935678,-6.252781,7.604010,3.766730,0.101195,-0.243382,1.075459,-6.702150,6.688367,9.526394,5.467576,5.637085,5.258268,6.524477,3.320717,-3.160702,8.236994,6.560305,-1.692727,7.073357,-1.758661,2.132423,4.381840,0.159387,-7.404041,4.712193,-2.997636,-4.875251,-5.743810,-0.356811,-8.122060,-4.339409,4.854987,-7.620968,-7.112888,3.534834,1.676510,8.923188,9.121882,-9.260723,6.642498,5.222628,-5.171818,0.478868,5.811698,-3.989183,-5.628762,-6.618877,-5.760687,-4.295658,-2.100407,8.392269,-1.763183,-0.170176,-1.448057,5.693273,9.499905,2.450469,-9.426883,-8.455170,-1.347435,7.257025,9.489469,6.298341,7.414378,2.476976,6.260053,6.427317,9.613561,9.158532,-3.809480,5.532488,4.642456,9.495421,-1.205499,-8.560284,-3.380067,8.147228,9.544556,1.219935,-3.076673,-2.494270,-1.807926,0.088075,-4.759678,8.644154,0.608937,-1.009580,5.897398,-1.356331,9.125696,-0.013105,9.033176,4.455474,-7.890422,4.080785,1.409497,1.847894,6.200360,0.516941,2.995916,3.009172,-5.716207,-6.059465,6.845098,7.122996,8.428322,9.820318,5.064044,0.980722,7.744008,8.545923,-5.595808,-7.458193,0.958966,6.087599,-5.766264,-9.654384,-4.061371,-4.844636,8.975376,-9.946029,-4.658733,4.971730,9.055723,7.627285,9.144464,1.171851,6.686955,-6.790124,-4.267293,-9.530361], dtype = "float64")#candidate|8352|(231,)|const|float64
call_8351 = relay.TupleGetItem(func_7385_call(relay.reshape(const_8352.astype('float64'), [7, 3, 11])), 1)
call_8353 = relay.TupleGetItem(func_7387_call(relay.reshape(const_8352.astype('float64'), [7, 3, 11])), 1)
func_7800_call = mod.get_global_var('func_7800')
func_7803_call = mutated_mod.get_global_var('func_7803')
var_8358 = relay.var("var_8358", dtype = "int64", shape = (1200,))#candidate|8358|(1200,)|var|int64
var_8359 = relay.var("var_8359", dtype = "uint8", shape = (165,))#candidate|8359|(165,)|var|uint8
call_8357 = relay.TupleGetItem(func_7800_call(relay.reshape(var_8358.astype('int64'), [600, 2]), relay.reshape(var_8359.astype('uint8'), [165,]), ), 2)
call_8360 = relay.TupleGetItem(func_7803_call(relay.reshape(var_8358.astype('int64'), [600, 2]), relay.reshape(var_8359.astype('uint8'), [165,]), ), 2)
const_8370 = relay.const([[[1,-6,-3,-10,7,-3,-5,-7,-5,1,3],[6,-8,-2,2,-2,4,-5,-10,-5,9,1],[2,-8,-3,8,-10,5,7,3,-9,-4,3],[-9,-6,-10,-2,-10,1,1,7,-1,-6,-7],[6,-4,-4,-10,-10,10,5,1,-10,-4,-9],[6,4,2,-6,5,-8,-8,9,-1,-9,5],[8,-1,-6,-1,10,8,-7,-6,-9,4,1]],[[-4,-2,-9,6,4,7,4,2,6,-5,8],[7,4,4,-3,-3,-5,-2,7,6,3,9],[-7,-3,3,-9,9,-2,2,-2,-2,4,10],[-10,3,8,-9,3,8,-3,7,9,-8,10],[8,4,9,-7,-3,7,5,4,-4,2,-7],[2,-6,10,3,-3,2,-3,7,-1,9,8],[3,7,-3,9,3,3,-4,3,-3,-2,-6]],[[-9,7,5,5,-9,7,6,-5,1,-8,-7],[-7,2,9,-8,-9,7,-6,1,8,-10,3],[7,4,-8,-2,5,-7,3,8,-2,8,-2],[-4,8,10,6,-5,-3,-1,-1,6,-2,10],[-1,-7,-7,4,3,-4,-9,8,-10,-10,-2],[-6,4,9,-6,-1,9,-2,7,8,6,-9],[-6,10,-10,1,-1,-6,-8,1,6,-3,-2]],[[-3,-2,8,-5,-3,-4,9,5,-9,-6,1],[2,9,4,2,8,-6,10,-6,-3,-8,-4],[-4,-8,5,-7,-9,8,4,-2,9,-6,8],[-1,3,-5,-2,9,-8,-6,-10,-1,2,8],[3,-6,8,9,10,-2,3,-5,8,10,10],[1,3,-10,1,-2,-6,7,2,1,6,-6],[-1,-8,6,7,8,-5,-9,-5,-3,-5,7]],[[4,-9,-1,8,-6,2,-10,-1,-4,6,-9],[4,-5,1,7,-3,-5,-6,7,-8,5,-8],[8,-3,-8,4,3,-9,7,10,8,-7,-8],[-3,-6,-10,3,-7,7,5,-8,5,9,10],[6,1,5,-8,8,-10,2,-7,-9,-8,-4],[-6,-4,-4,4,8,-5,-3,7,-5,-3,-1],[-6,4,5,-4,4,3,-10,10,2,4,-9]],[[8,-10,-10,8,2,4,-1,-7,-9,-4,1],[-1,8,9,1,-8,-3,-3,-3,-6,7,10],[-8,3,-10,-2,-3,-9,8,-2,7,9,-10],[3,-1,10,-9,-6,-7,-6,7,5,-1,-10],[4,8,-2,9,7,-5,1,8,6,-8,-2],[10,-10,-9,1,10,9,-7,6,5,10,-4],[5,-2,6,6,2,-9,-10,5,-8,-9,4]],[[-10,-3,-4,4,7,-1,-4,9,-9,5,3],[-6,9,5,5,-5,10,9,-5,5,4,-9],[5,8,8,9,9,2,-3,7,4,2,-9],[9,4,4,-10,-8,-2,6,-10,-1,-4,6],[-8,3,4,-8,-6,7,-3,-10,7,-9,-6],[6,1,2,10,1,10,2,1,7,10,-9],[-8,-9,1,-1,-10,1,-6,-7,3,-6,5]],[[-9,1,6,-1,-6,8,-3,1,3,2,-5],[9,7,-1,6,-5,2,10,-7,5,-1,1],[9,7,5,8,-10,-1,8,3,6,7,-4],[-8,-2,-6,-5,7,9,9,-5,-4,-3,-5],[-7,-5,4,4,10,9,-4,-5,4,-6,7],[-6,2,1,-5,6,-3,-6,2,-5,2,6],[-10,7,-2,6,-8,-4,-2,-4,9,10,1]],[[-9,6,7,9,-5,4,-3,-5,-6,1,3],[-4,10,-9,5,6,4,9,1,-5,-7,8],[-5,-10,8,-2,-7,-10,-10,-9,10,1,9],[-7,6,-7,-1,6,10,1,-9,8,1,-3],[8,6,-7,-4,-6,9,3,6,10,1,10],[-7,7,5,5,9,-9,-3,-1,-5,6,-1],[-9,-4,-9,-9,9,7,1,-3,1,-10,-8]],[[-9,10,8,-7,6,3,6,-6,-2,3,2],[5,-2,9,7,5,-6,9,2,10,3,-7],[-9,6,-10,5,2,-9,-4,-6,-6,8,-7],[-6,6,-6,-3,-8,10,4,-2,3,-6,-8],[-1,-5,7,-10,10,-5,6,-5,-8,9,-8],[7,-1,6,3,2,-10,2,8,-4,-2,7],[4,-6,9,-8,10,9,-6,-1,-10,-4,9]],[[8,9,-8,-4,-10,-8,-9,-4,6,-4,5],[1,-8,10,1,-7,-9,-2,-1,3,-5,8],[10,2,-5,-4,-8,-10,-5,-8,2,-7,6],[-5,8,-8,10,6,7,-5,-6,-5,-3,-3],[-5,-7,8,7,3,-1,-9,3,-5,9,-9],[-4,-5,-1,4,-9,5,-8,-9,-9,7,1],[-8,-7,-3,5,-3,1,8,8,-6,-4,2]],[[7,9,4,-7,3,-1,-8,-9,8,-2,9],[1,-3,-4,-9,1,8,4,-5,6,6,-10],[-4,7,-10,1,10,-7,-10,-2,-9,-6,4],[-8,-1,-8,-4,9,-7,9,7,9,3,-10],[8,3,6,4,-9,8,-9,-5,5,10,-2],[1,1,7,-7,7,1,-5,-9,-7,-1,8],[-1,2,7,-10,-3,10,-3,7,6,-9,6]],[[-3,3,3,7,6,4,-4,2,-2,6,-8],[-1,-1,1,-1,4,-3,-6,-4,8,10,10],[3,-9,6,8,-4,-2,-5,7,-1,-2,1],[-9,-10,5,-8,-4,-6,7,8,-7,-6,1],[2,-9,-10,-7,8,6,-4,-8,5,-3,-4],[-4,-8,9,9,-5,-8,6,-5,9,-1,-1],[-5,7,-2,-10,3,-3,4,-2,1,-8,2]],[[-9,8,-8,4,-4,-2,-8,3,3,1,-4],[-5,9,-6,7,10,-2,-5,-7,-4,9,-4],[-10,-6,-1,-6,-3,5,-9,1,-8,-3,1],[-3,-8,-9,-2,-5,-10,-5,9,7,-6,-7],[5,2,-9,4,-6,8,5,-10,-10,1,-7],[10,2,9,-4,-3,-2,-10,2,3,-4,-2],[8,-8,-9,10,-7,-2,-10,7,5,2,-4]]], dtype = "uint32")#candidate|8370|(14, 7, 11)|const|uint32
bop_8371 = relay.floor_mod(bop_8339.astype('float32'), relay.reshape(const_8370.astype('float32'), relay.shape_of(bop_8339))) # shape=(14, 7, 11)
bop_8374 = relay.floor_mod(bop_8342.astype('float32'), relay.reshape(const_8370.astype('float32'), relay.shape_of(bop_8342))) # shape=(14, 7, 11)
const_8379 = relay.const([-6.018062,2.203103,6.956891,8.500008,-2.233359,-0.309241,-2.061149,-1.624426,-1.630894,6.346107,6.221164,0.164396,2.712235,6.391288,5.832687,5.953958,7.709721,6.974421,-3.456659,-5.955380,-2.732137,5.989087,3.678954,-1.121167,7.761941,-8.391939,4.730831,-6.448941,2.417101,-6.593220,-8.173592,-7.624084,-7.827417,-8.340972,9.362039,-8.510282,-6.478761,-7.584794,5.675330,8.385865,-3.926040,0.216208,1.843430,-6.806578,0.617938,5.386168,-9.258193,8.105127,2.771363,0.021047,-9.399813,-1.838247,1.007958,4.707266,8.842820,4.870921,-7.246468,1.883614,5.951718,6.807885,-4.847610,-3.326614,-7.504572,-6.060584,-4.955536,-4.825421,1.374568,3.658173,7.503491,3.305363,4.985904,-3.486451,9.217009,6.147935,7.921003,7.536069,0.399480,4.955376,-3.379503,-7.855128,8.344727,2.126182,4.080120,-5.647794,4.244660,-6.026092,-1.396104,5.750396,-0.136618,-2.004749,5.453895,-2.082323,-7.419014,-5.153162,3.887703,0.270286,-2.708535,2.032830,0.088950,-6.426947,6.154533,1.766170,-5.711285,1.169700,4.086160,-9.831076,8.022700,0.371093,-5.051145,-4.030552,-2.844127,4.397029,4.900120,9.081108,-3.161750,7.420874,-3.211172,2.088751,2.108199,4.387499,2.276981,7.867001,-2.988788,-5.356871,1.295354,-6.464313,-3.984119,-7.722890,-4.384055,-2.323653,0.656001,-7.590176,-5.319788,-2.763315,-3.118945,-1.291493,-4.427091,1.681530,-5.822351,4.620346,-9.665514,-2.068054,6.320428,-3.178443,-5.457486,-8.453133,1.539435,2.056649,8.281624,0.178794,7.747509,4.584252,-0.055486,2.384245,-2.093412,-7.903621,-9.506370,5.827298,5.428086,-8.934593,-9.423790,8.824315,5.357323,4.319227,3.342072,5.671863,-4.062876,-0.334547,5.124678,3.245866,-6.629622,-9.803183,-8.057300,6.668443,-2.685160,0.294122,-0.857113,-9.154882,9.343777,-7.449593,-3.053665,-6.304603,-1.926154,7.356308,-2.469891,1.951877,-6.890463,0.383243,3.093183,-9.007006,-3.634010,-5.863682,8.224619,3.464206,-8.472096,9.540914,6.398066,7.439731,-8.208295,9.540213,-3.915699,9.791985,-7.116524,3.336492,1.581717,9.010583,-4.681316,1.214984,-0.308097,-9.208593,-4.851579,-1.063643,1.034048,-3.683607,-0.624876,-9.825082,-7.841898,-4.498021,2.432644,0.063138,2.931115,-2.078038,-2.506069,9.790885,-9.372719,-5.450268,4.584947,-7.304140,-4.533637,-5.028346,-5.415237], dtype = "float64")#candidate|8379|(231,)|const|float64
bop_8380 = relay.floor_mod(const_8352.astype('float32'), relay.reshape(const_8379.astype('float32'), relay.shape_of(const_8352))) # shape=(231,)
bop_8390 = relay.divide(call_8296.astype('float32'), bop_8339.astype('float32')) # shape=(14, 7, 11)
bop_8393 = relay.divide(call_8298.astype('float32'), bop_8342.astype('float32')) # shape=(14, 7, 11)
func_5686_call = mod.get_global_var('func_5686')
func_5689_call = mutated_mod.get_global_var('func_5689')
var_8416 = relay.var("var_8416", dtype = "int8", shape = (1260,))#candidate|8416|(1260,)|var|int8
var_8417 = relay.var("var_8417", dtype = "float64", shape = (231, 2))#candidate|8417|(231, 2)|var|float64
call_8415 = relay.TupleGetItem(func_5686_call(relay.reshape(var_8416.astype('int8'), [1260,]), relay.reshape(var_8417.astype('float64'), [462,]), ), 3)
call_8418 = relay.TupleGetItem(func_5689_call(relay.reshape(var_8416.astype('int8'), [1260,]), relay.reshape(var_8417.astype('float64'), [462,]), ), 3)
uop_8424 = relay.asinh(call_8357.astype('float64')) # shape=(600, 2)
uop_8426 = relay.asinh(call_8360.astype('float64')) # shape=(600, 2)
uop_8428 = relay.asin(uop_8424.astype('float32')) # shape=(600, 2)
uop_8430 = relay.asin(uop_8426.astype('float32')) # shape=(600, 2)
func_8091_call = mod.get_global_var('func_8091')
func_8094_call = mutated_mod.get_global_var('func_8094')
const_8439 = relay.const([3.220658,7.395769,1.234878,4.147783,-9.858911,9.354553,-0.143181,-9.946981,5.549160,5.741114,6.165485,-6.294263,5.584688,7.408188,-2.264333,-1.829184,0.986370,-6.803581,3.333062,0.905366,1.663598,-3.807055,1.344190,-6.309288,-5.332335,-9.565119,-6.348713,8.545954,-4.314629,0.189290,9.209390,2.839193,3.573014,3.558836,8.290192,4.655796,9.554978,3.875513,-5.028292,3.788800,2.043513,6.182513,8.443964,7.642873,2.251555,-1.744756,2.004638,2.985658,-3.622724,1.937451,7.902203,-6.275208,-1.219320,6.517405,7.526238,8.928294,-4.472158,1.128806,-2.644209,8.642634,1.012913,-3.196843,4.318227,0.045808,-2.745121,-5.982453,2.849745,-2.625088,-8.036255,7.637051,-4.657808,-9.309218,5.476491,-2.896670,5.105705,4.482789,-2.275441,3.522086,3.029864,2.387186,6.120801,3.561146,-7.973363,4.413781,3.718127,0.216146,2.962223,-0.110545,2.682066,-0.826534,-1.985777,3.073839,8.375874,4.905671,3.954345,-7.957088,-2.091772,-9.742804,3.095111,5.820714,-8.083298,2.379483,-9.965783,-6.157232,-9.790963,-5.456254,-0.451596,2.866308,-8.050460,-7.942979,6.850307,8.591864,-8.059984,2.877513,7.819448,-0.721631,9.494845,1.282154,7.563552,1.153232,3.832522,-7.676538,9.626011,6.473802,-8.149815,5.199221,1.866920,4.433665,-0.710461,2.908238,3.748187,0.402802,9.422937,2.553163,-4.038595,9.419756,-5.902767,0.689713,3.654156,-4.606062,-4.732921,-5.124237,-4.130301,0.334629,-9.447153,-5.107436,-3.332668,-3.355978,-1.409773,-1.994898,-3.030855,-1.862420,-7.692575,-6.686983,7.734712,4.830578,-6.611377,2.843102,-0.505854,-7.286011,5.647187,-0.486616,-3.548142,-9.957747,-0.545125,-8.689763,-8.795894,-2.985548,-2.319633,-9.458353,2.822455,-2.081419,6.888907,-7.157846,-5.895652,-9.533693,0.951489,-9.850257,4.373486,-7.833985,1.660360,-0.750937,-3.116349,-3.585254,5.270978,-4.420719,3.204896,2.657534,-4.130418,-9.970080,-4.533193,-7.065148,6.508583,2.523489,4.084610,1.328982,-9.039125,-4.389849,-2.019561,-2.569706,-4.234392,-6.224939,5.893077,-7.489765,6.350221,-2.218419,-1.872460,5.855132,2.441967,-8.006386,-0.853332,-4.164087,-8.039035,2.418130,2.425812,-8.250461,-5.488085,2.033168,-6.295609,0.422874,-2.189115,8.364769,9.015404,4.785930,-1.529881,5.535520,2.633766,4.873474,5.143101,-5.528335,-1.958978,-7.395442,4.293533,-1.067677,5.013701,1.324790,-6.543998,-0.903454,5.283331,-9.145739,-8.197135,-7.312108,4.686204,3.088615,9.159702,-0.343734,-2.143069,-6.773750,-2.819902,-1.326360,9.719331,-3.041727,-6.530339,0.561745,-4.975995,1.201916,0.852233,-1.161191,-9.665602,2.470241,3.156326,7.263712,-6.344220,9.761254,9.901254,4.027541,9.877421,-0.854406,-9.047020,9.218368,4.819301,6.252869,-9.797667,-1.619308,2.957873,-1.886904,0.531290,5.421558,-4.433069,-8.435770,-1.237639,-9.774589,6.928460,5.809811,-6.473760,-4.436683,-6.744491,-0.354442,7.995905,3.653750,3.604606,8.128831,1.649200,-8.318540,6.838370,1.131639,-8.699246,5.540097,-1.981742,-6.572950,6.760624,3.749582,-3.301498,2.221549,-5.227590,7.044023,-4.937708,-9.975945,6.549074,7.319077,9.934266,-3.802017,-6.644219,-7.003483,-8.470998,2.770799,8.776482,8.390653,7.792918,-3.896435,7.369271,8.525034,-7.830374,-6.635560,-7.837006,9.400658,-2.534554,-1.227163,9.920031,-7.657097,5.487202,-9.805301,-7.629877,-5.867907,-8.344355,7.125585,-3.130908,1.804075,-1.110360,-4.528669,-2.580960,-9.610938,2.481970,7.628954,0.831971,4.658387,-5.904333,-0.966909,1.794664,-3.923187,4.380674,-3.623878,-6.953685,-6.160205,7.367186,1.640934,-6.352671,-5.764196,-4.063966,3.575216,5.555215,-6.178020,-1.726662,-3.616499,-4.669623,3.662627,-2.997562,9.407199,4.469093,1.650018,2.932415,-5.148414,7.902615,3.232854,3.833126,1.617118,6.625808,-5.602027,-6.854273,-9.258051,8.185762,-9.547234,6.485687,-1.751357,-5.457112,1.458173,-9.528720,1.460786,-1.896153,-9.753141,5.933724,3.011027,4.627968,-8.117256,-2.806024,-0.210794,-3.149029,-4.368042,7.922893,9.095833,-5.158533,4.944798,-0.812534,-3.473512,1.498251,-0.765557,2.289702,-3.346206,1.681292,-0.281397,7.631616,1.917258,-5.962876,9.846806,-5.196671,2.937236,2.353370,-7.475501,2.585055,-9.885265,4.212090,-1.754511,-3.274352,9.818209,0.561151,-5.550906,5.765334,7.098076,7.428279,1.178217,6.890003,-5.077598,8.720305,-8.433572,-3.456344,5.832255,-4.932852,-4.734095,-3.967875,-5.124854,4.887574,-4.194242,6.772534,-6.113376,-3.959573,-1.308387,-5.780181,-9.707241,4.241147,3.447946,-6.405386,9.266249,-1.453317,4.196323,-1.315460,-0.523479,-0.877786,-5.977131,-5.725140,-4.512829,-9.765229,-6.189587,-6.938631,-9.364566,-5.838207,3.232855,-8.187222,6.235412,-9.477039,-8.108443,-0.186062,-2.533448,6.112766,-3.940053,-3.540267,7.168427,-0.371157,6.693682,-0.309779,-6.801304,3.133666,5.199431,1.771067,-9.261400,-5.118678,-3.689007,-5.156915,5.102171,5.738801,8.720068,4.101216,-6.177578,7.561372,-6.021313,8.987511,-0.944708,-8.736806,-9.611832,-1.492872,5.721243,9.801066,2.005064,-7.829229,-0.401840,7.963774,5.762729,-8.770722,-6.444425,-3.834591,0.188341,8.758001,-0.712192,-7.793521,2.533310,-7.045252,8.200861,-6.826820,3.117098,5.693441,-1.294272,8.005293,1.555570,6.561259,5.269365,-4.533563,2.132749,-1.401141,1.730113,8.784877,0.852956,5.746720,3.776573,-4.757601,4.826169,-7.100515,-9.415905,0.212720,2.232423,4.724775,-7.978183,-8.977043,0.692376,-2.798880,3.227501,-1.975010,0.549222,5.983607,8.628548,5.254799,0.804107,6.180790,6.755503,-2.272140,3.646470,-8.705560,0.506926,-6.813687,8.745599,-8.048058,-7.553669,-0.935841,-2.697454,-6.625122,1.613142,-3.349845,-3.093910,-7.623566,0.874124,-2.569606,-8.031198,-3.369617,4.181911,-1.568867,9.310927,2.502325,1.966131,0.008399,6.910501,-4.190934,3.006787,-6.131252,-8.918460,-1.434943,9.319916,-5.441513,1.351951,7.853975,1.646586,5.764244,-1.769576,-9.987301,-8.187274,-4.735804,-0.659507,-7.886349,8.177657,6.376295,1.860893,8.936487,-6.174015,-5.505954,6.537074,5.836933,-1.062323,2.069993,8.552888,-9.033551,-1.179650,-7.826235,9.179195,-4.811971,2.465647,-3.373254,2.313850,6.886209,-1.192485,6.766040,6.400308,-3.275801,-0.952549,0.645481,-4.028253,9.799029,-8.123748,5.871967,1.287376,-0.161474,3.337758,0.932193,8.489219,-3.736671,2.900115,8.031642,-6.636815,-8.659987,1.618896,3.554583,1.565398,-1.090432,-4.731939,-1.233272,-6.765146,-3.109058,9.243803,-2.940630,-9.468757,-1.389475,4.876333,-8.846780,-9.287208,-8.982367,-8.727661,1.963754,-0.750269,1.689091,8.062793,-6.096724,9.744917,4.669967,1.621774,2.065789,-1.184501,7.812925,7.985018,-1.616352,-2.427897,7.083264,-4.325841,-9.066140,7.928807,4.839613,8.017745,-0.818689,-2.457778,-0.898010,1.518945,6.369600,1.885788,8.633027,-1.592279,-7.483767,-7.274819,-9.506228,-0.074391,-4.186501,-4.104295,-0.624691,2.341260,-9.697779,-4.310412,8.085121,-6.289998,-0.316637,2.683465,-5.113838,1.241165,-8.099422,5.435375,-4.844019,-2.667609,5.762231,-4.701506,-9.080881,-7.902779,4.584657,2.104492,-7.150078,6.584103,-6.968112,1.139850,-1.125701,9.577857,-7.858955,7.987609,7.469420,9.650331,5.374591,-8.230618,-3.129825,-2.749532,-7.150945,-6.328786,-2.130440,6.007161,3.292951,0.453886,5.845038,-6.066461,0.817397,-2.583538,4.653082,9.891230,6.490873,3.000771,-5.029788,9.603283,3.033361,-2.539545,7.380205,-7.147396,-4.623512,-2.539240,0.536175,7.416213,6.316192,3.398426,-0.254113,2.809856,-6.053908,1.356387,-2.696773,5.775740,-0.781645,4.525409,0.403915,-2.686010,-4.114055,8.626352,-4.219887,-7.128515,-5.992165,-2.217099,3.978850,-7.093418,-7.974982,-2.052442,-1.610382,0.495926,0.037249,-0.831443,-9.984275,-8.482190,-9.335444,-7.202950,7.006056,-7.551493,-4.223968,-9.618843,-1.535024,-4.563190,-2.406913,9.702226,-3.304444,1.607572,-5.136369,6.254852,4.431920,7.582330,8.309701,-6.071232,-6.412497,5.316711,0.655066,-0.609781,-2.327179,9.333604,-0.183228,-1.225944,4.258771,-3.980175,4.695804,-6.893455,-9.828533,-8.581542,-8.478791,-1.712294,1.544362,6.401628,3.991571,-4.511317,-8.333453,-8.603746,6.396263,-3.515687,-8.243438,-2.112789,-3.299579,-3.454663,-7.179143,-3.236074,7.436060,2.386687,-6.376066,-5.304817,8.592927,-5.384603,-2.753094,-6.170896,0.419166,-4.781767,1.327775,1.833359,9.859022,-5.632547,3.985232,-5.255155,5.524388,6.187800,0.338382,4.039274,4.170584,-6.927174,-2.356817,3.167605,2.283959,-4.473075,-5.999891,-9.428744,8.715305,6.570974,-5.224789,-2.206009,3.616474,6.194620,1.403321,9.878937,-2.019019,-9.111218,-3.153794,-1.144568,0.224692,5.826824,0.138348,0.456934,-8.563912,2.620948,4.007748,4.368899,5.481525,1.167882,9.970663,9.581121,-0.554114,8.553848,3.077221,3.947098,-4.293217,-5.288944,-5.057082,-3.203710,-0.275350,8.562863,6.233477,7.345184,-4.162937,6.170091,7.714170,1.613578,-0.538213,5.963688,2.820606,-0.431485,6.697339,6.836752,1.916763,-5.959842,4.220349,2.371093,-4.358260,6.931414,0.153112,5.518180,-4.498202,-8.908821,7.135862,-5.931348,-7.334062,-5.701166,-7.717586,-7.938544,0.698815,0.653924,-9.773070,-6.552396,9.301145,8.661615,-2.669247,-1.167687,-8.027866,-3.354380,-2.411409,-9.705006,1.140126,-8.256670,-9.997093,2.207229,6.830722,-8.397124,6.068264,4.513795,-6.026147,1.146310,2.916065,9.419484,2.608693,0.681822,3.063012,-0.291182,-7.454035,-4.081092,6.321638,-2.150046,-8.467925,5.096456,0.925673,5.165283,6.035665,6.671194,-9.604412,-4.132774,-6.534129,1.238300,8.490121,-6.894177,-5.409470,-8.492659,9.426226,-0.569187,2.420600,3.362921,-8.762927,9.024441,-6.925485,-0.917925,9.657320,-2.985873,-5.950869,8.482136,5.123456,1.374298,-1.561293,-6.049289,2.560603,-1.348931,-8.138548,4.540430,-3.052385,-5.561483,4.874572,2.327860,-3.002188,-7.030065,5.134102,-1.543587,-4.851880,-4.412329,-8.170983,-0.022739,3.266849,-5.000294,-0.905953,9.134209,-2.793674,9.002635,-8.541683,6.742025,-0.277221,-3.762063,4.298432,4.963109,-9.707364,2.079370,-1.067348,-9.285406,-1.260283,0.188419,8.741060,0.118846,-2.835162,0.235944,0.599041,9.191115,2.026290,6.953524,5.669111,-0.847813,-6.724288,-8.372599,5.039772,-1.021650,8.735056,-6.910936,-0.077026,5.059096,1.571083,-1.440764,4.002060,-4.503613,4.928994,5.085612,-4.034009,-4.676352,6.436314,2.671953,-5.883463,-8.989452,5.106137,-2.826753,-6.094900,8.602430,-2.578244,-3.716002,5.714973,-7.906742,-2.763431,0.794791,3.769226,1.070061,-2.092154,6.942444,4.078038,6.455454,0.559623,-1.260221,3.579373,7.207924,5.800105,1.722215,-3.609230,3.650241,5.837922,-6.561623,3.888327,-6.734711,-7.291985,-1.391557,3.699398,8.967794,7.859006,4.753160,7.623394,-3.001473,-4.402102,4.227109,-0.695234,-6.003072,-2.507758,-5.154212,-8.726968,6.384305,2.651689,-1.838637,4.206022,2.207097,-4.152924,8.814732,0.344532,-0.672546,1.596299,-3.276509,0.169885,-2.575103,7.683209,2.688231,0.203357,2.334093,-0.381499,3.642806,2.623417,-4.551628,2.811965,9.307678,1.579051,1.759815,3.391485,-1.308893,-6.714187,-2.751862,-8.242625,8.257290,2.108358,-4.637110,8.732909,9.668763,-8.035515,-9.155204,-4.819056,-1.860499,8.563527,-7.742257,9.515812,2.542918,2.484270,-2.815454,3.939442,5.036392,-1.857330,-5.929786,-2.719737,-5.806967,1.647967,-4.255327,-8.554221,-1.983948,-9.400052,-0.503338,7.888097,4.496708,-7.201296,-7.487682,-8.423695,-7.286155,0.200893,-1.398354,-9.867753,-6.018231,3.813743,6.329154,8.962467,5.212771,5.350558,-0.935071,-0.296046,0.164460,7.134577,-0.525173,-8.852763,-6.767977,-7.370764,7.338819,1.990062,-8.766689,-7.551308,-5.238360,9.059224,-3.531224,1.667041,-4.297232,-4.654596,-9.221778,5.905406,7.488517,8.535782,-9.399258,-2.932540,1.447434,3.143703,-5.584841,2.787035,-8.821369,2.690117,4.419497,4.538265,-1.102088,-7.961522,6.663909,4.137413,9.585429,-7.297772,-2.934130,0.328242,-0.959221,-6.108246,-8.985994,5.416831,-9.001510,1.109535,1.363025,2.473845,6.270403,5.999031,-4.479172,8.644105,5.614762,1.746443,4.567204,1.183173,3.137396,-7.827533,-6.388789,-5.477115,-4.226808,-6.442501,-1.204589,6.239493,3.981154,-1.436485,-3.640951,5.555395,2.570254,7.982120,4.833527,-7.742642,-7.805942,0.089431,-9.268568,-1.431537,6.716711,8.264195,-4.320354,7.270770,9.284267,6.542919,-4.825503,9.919960,4.207482,-6.966571,-0.804170,-4.658630,3.924343,9.612269,3.903445,7.424222,-2.812569,6.388651,1.729692,2.617761,-0.514727,-8.577726,9.131768,7.599328,5.161936,-4.003355,-9.718590,-3.102606,-3.291956,-2.068713,4.996491,-9.227170,-4.790141,1.992802,2.976189,-9.816840,8.113712,-8.572361,-2.992902,-5.762549,5.446181,4.280824,2.109488,5.681545,3.198011,3.289100,9.558057,6.826288,5.362165,-1.319819,4.250732,7.703394,0.633779,9.446700,2.391633,1.228588,-7.387914,-3.119535,8.445791,9.700195,1.403281,9.421923,4.117092,-0.495667,6.475818,0.022409,7.982189,-0.776438,-3.878018,6.884683,1.364196,-3.585174,6.334315,6.366890,-3.157969,-0.896210,7.944867,3.676246,-8.603341,-3.554046,-7.179022,-9.713667,-4.825782,-7.491302,-8.617073,-8.499014,8.050665,-9.701337,5.640379,9.096930,-1.362281,-5.845767,6.881637,-8.443464,4.579009,-3.798580,-3.483862,-1.257444,5.294361,5.856659,-7.156005,5.492529,-1.972940,-8.984402,7.048174,-3.962135,0.504176,5.225719,-5.186752,-3.987284,-4.452831,0.511907,1.356610,3.794393,-7.341320,9.829177,-2.621248,-9.382126,-4.206255,9.266903,-4.433131,4.298217,-6.048365,5.195331,8.560992,-4.938054,-8.778908,-4.601517,4.791998,-7.966345,9.232428,-7.444175,-2.232885,-2.826790,-0.400809,-8.956267,7.890013,-3.288362,-3.506044,-1.364478,-3.424290,-2.609500,-9.610168,-5.921464,-5.983034,-3.921611,-1.911894,-4.878690,3.387497,7.579986,-0.649082,0.758575,-1.634216,1.763994,2.705621,-4.543970,-5.871349,-9.930952,8.406841,1.047012,6.638353,1.795562,-0.225578,-2.521868,9.984316,1.053892,1.593725,1.167898,8.550668,-9.122986,6.686882,-2.140673,7.250322,-6.843989,5.752705,2.431798,3.706487,7.235730,-3.765239,-4.998903,2.398577,8.503361,-4.897928,-3.862797,3.777574,-4.259719,2.986411,-8.472926,9.476180,-9.449722,-6.346189,2.878620,-8.726725,-7.593087,-3.599444,-8.149937,-2.358840,-0.307635,8.504677,-5.208942,8.545919,8.619403,8.491023,-3.486288,-1.298756,-7.719180,-5.516658,6.841430,-7.859294,6.615771,-5.380698,-1.881461,8.205596,6.152112,-9.148788,9.691819,-6.446673,-3.907582,-3.694832,-3.103295,7.473517,-7.677770,-1.831138,1.999797,3.416885,0.897666,-0.783222,-2.868819,-9.794293,-4.552033,-6.890624,-3.581771,-7.598599,-9.217066,6.800997,-1.339449,7.914601,-2.534029,-0.425019,-8.253268,-0.875501,0.197919,-9.485417,-4.541237,5.596741,5.910848,-2.737268,-5.687047,-1.473387,-7.513791,9.372907,5.848914,2.784436,-8.477386,2.079146,3.970879,-1.054610,-0.692434,-7.637131,9.119608,-8.570845,2.519377,-4.252999,5.215683,9.025629,4.826250,-6.326407,6.813243,-9.421035,7.478340,4.862268,-3.255892,8.062447,-5.311602,0.442146,1.487174,-5.326327,1.193573,-8.356884,3.210278,-1.993992,-5.805638,1.606023,-5.141684,2.069516,2.863227,-3.572635,-4.283829,2.402546,1.511345,-8.804931,-8.143975,-3.467838,-3.767529,-7.478515,-3.049725,-0.297311,-4.063266,-2.864709,7.420785,-2.418226,-0.521017,-1.240718,5.053002,6.833201,6.608002,7.224997,-2.922741,4.041909,7.235136,4.093799,-6.362866,-3.492401,7.812871,5.044760,3.540876,-7.573202,-0.386880,-5.161125,-9.565143,-1.995283,-3.284293,8.404484,7.395862,4.022854,-9.894316,-0.028992,-2.792177,2.172218,-0.494813,-4.512941,6.703333,7.643006,-5.661906,3.106201,-4.432066,-5.935591,2.448615,2.549408,-5.648743,3.219276,2.282609,1.743541,7.760717,-6.782510,6.392265,1.931171,0.543082,-6.267943,-4.259532,-0.653117,6.316003,1.630574,-0.966749,-4.816502,7.004904,8.129384,6.849672,-9.276282,-4.068156,-2.785244,-1.287409,-5.018327,1.910390,5.403698,-0.018503,-7.593114,-2.047521,-5.320283,-0.477093,1.368263,5.941841,0.217754,3.816647,0.765476,-5.623782,2.482301,1.945809,-5.325212,-5.528997,-6.171633,2.526104,-9.015848,2.675513,-0.062034,9.312054,9.141806,-1.518718,-7.164813,1.695225,8.726427,5.453838,-5.334013,-3.173298,5.974567,-1.096271,2.522268,-0.854938,3.924864,5.309783,-0.848208,0.202184,9.190885,-5.791555,2.445041,7.514352,9.915846,5.351697,7.982779,-3.271992,-7.443111,-0.589030,-3.873195,7.718731,-3.008002,0.425122,-7.269933,7.388162,-2.902570,3.856098,1.493906,2.816694,6.445986,-6.700018,-5.420929,-9.478344,8.979372,9.329782,5.427537,6.261119,0.486428,-6.790663,0.653112,7.346280,3.979864,1.064979,8.652156,4.277084,9.532267,0.664536,-6.403959,-5.410852,-0.696610,9.267579,-8.792336,-7.779163,5.490740,0.017990,-5.540542,2.885389,6.133175,-7.716601,7.502299,-5.383843,7.233231,-4.939610,1.119132,2.576805,-6.139400,9.111978,9.521225,-0.091085,2.018074,4.799020,-4.828385,7.307647,7.889700,-2.878565,-2.247895,3.684833,-3.151287,9.595186,-0.436324,-9.648616,-2.002424,2.686588,6.666722,-1.101781,-4.349850,-1.325835,-9.084995,-1.866447,6.601321,-2.558762,5.141094,0.562535,-8.908072,9.549240,8.261828,9.062821,-4.395286,1.172713,2.435628,-2.994234,3.628798,-4.155138,-6.411775,6.719082,-2.151524,3.475911,1.273880,0.318100,-6.429088,-4.299580,-9.232144,4.979193,-0.335929,-2.603541,-4.022224,6.300870,0.292727,-5.979766,1.688779,1.187838,0.973857,5.552663,9.540414,-2.299603,-3.751364,1.569779,0.836989,2.096440,4.538115,2.373744,-3.897910,5.855131,-7.885741,6.296427,4.586432,2.643506,-1.087402,9.769345,-0.538086], dtype = "float32")#candidate|8439|(1760,)|const|float32
call_8438 = relay.TupleGetItem(func_8091_call(relay.reshape(const_8439.astype('float32'), [16, 11, 10])), 2)
call_8440 = relay.TupleGetItem(func_8094_call(relay.reshape(const_8439.astype('float32'), [16, 11, 10])), 2)
output = relay.Tuple([call_8292,const_8297,call_8329,call_8351,var_8358,var_8359,bop_8371,bop_8380,bop_8390,call_8415,var_8416,var_8417,uop_8428,call_8438,const_8439,])
output2 = relay.Tuple([call_8293,const_8297,call_8330,call_8353,var_8358,var_8359,bop_8374,bop_8380,bop_8393,call_8418,var_8416,var_8417,uop_8430,call_8440,const_8439,])
func_8442 = relay.Function([var_8338,var_8358,var_8359,var_8416,var_8417,], output)
mod['func_8442'] = func_8442
mod = relay.transform.InferType()(mod)
var_8443 = relay.var("var_8443", dtype = "float64", shape = (14, 7, 11))#candidate|8443|(14, 7, 11)|var|float64
var_8444 = relay.var("var_8444", dtype = "int64", shape = (1200,))#candidate|8444|(1200,)|var|int64
var_8445 = relay.var("var_8445", dtype = "uint8", shape = (165,))#candidate|8445|(165,)|var|uint8
var_8446 = relay.var("var_8446", dtype = "int8", shape = (1260,))#candidate|8446|(1260,)|var|int8
var_8447 = relay.var("var_8447", dtype = "float64", shape = (231, 2))#candidate|8447|(231, 2)|var|float64
output = func_8442(var_8443,var_8444,var_8445,var_8446,var_8447,)
func_8448 = relay.Function([var_8443,var_8444,var_8445,var_8446,var_8447,], output)
mutated_mod['func_8448'] = func_8448
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5014_call = mod.get_global_var('func_5014')
func_5016_call = mutated_mod.get_global_var('func_5016')
call_8458 = relay.TupleGetItem(func_5014_call(), 0)
call_8459 = relay.TupleGetItem(func_5016_call(), 0)
output = relay.Tuple([call_8458,])
output2 = relay.Tuple([call_8459,])
func_8464 = relay.Function([], output)
mod['func_8464'] = func_8464
mod = relay.transform.InferType()(mod)
output = func_8464()
func_8465 = relay.Function([], output)
mutated_mod['func_8465'] = func_8465
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4672_call = mod.get_global_var('func_4672')
func_4674_call = mutated_mod.get_global_var('func_4674')
call_8490 = func_4672_call()
call_8491 = func_4672_call()
func_3003_call = mod.get_global_var('func_3003')
func_3007_call = mutated_mod.get_global_var('func_3007')
const_8496 = relay.const(5, dtype = "uint16")#candidate|8496|()|const|uint16
const_8497 = relay.const([[-5],[5],[-4],[2],[-6],[-9],[3],[-10],[2],[4],[-10],[-8],[-3],[9],[-1],[8],[-1],[-6],[2],[9],[8],[6],[6],[4],[-1],[1],[1],[6],[-6],[-3],[7],[3],[-4],[5],[6],[-6],[1],[-6],[8],[-5],[10],[-10],[-5],[4],[1],[-8],[-1],[-6],[-1],[3],[-4],[4],[10],[2],[-1],[9],[-5],[2],[-7],[-1],[6],[-7],[-2],[3],[6],[3],[-4],[-7],[6],[-2],[-8],[-10],[-2],[-5],[1],[-7],[7],[5],[1],[-5],[4],[8],[4],[10],[-5],[-8],[-5],[-6],[-1],[8],[-8],[2],[-3],[5],[6],[10],[9],[-8],[1],[4],[2],[9],[-10],[-8],[7],[-6],[1],[8],[-6],[-7],[-4],[-2],[2],[7],[-8],[9],[3],[-1],[4],[-6],[3],[6],[8],[9],[9],[-6],[-2],[-8],[-6],[2],[-6],[-6],[-1],[-1],[-6],[6],[7],[-7],[-7],[10],[-4],[-1],[-5],[-3],[-5],[-7],[-7],[7],[-1],[3],[-5],[9],[10],[-8],[-2],[-5],[5],[3],[6],[-10],[-2],[-10],[-3],[-5],[5]], dtype = "uint16")#candidate|8497|(165, 1)|const|uint16
call_8495 = relay.TupleGetItem(func_3003_call(relay.reshape(const_8496.astype('uint16'), []), relay.reshape(const_8497.astype('uint16'), [11, 1, 15]), ), 1)
call_8498 = relay.TupleGetItem(func_3007_call(relay.reshape(const_8496.astype('uint16'), []), relay.reshape(const_8497.astype('uint16'), [11, 1, 15]), ), 1)
func_6520_call = mod.get_global_var('func_6520')
func_6523_call = mutated_mod.get_global_var('func_6523')
const_8509 = relay.const([3.104253,-6.759643,-6.302630,1.819204,4.541213,4.511134,-0.941568,-6.805425,-3.426719,-2.014523,4.664139,-9.944035,-7.258730,-1.152177,6.318387,9.280691,-7.284690,-8.775939,-7.366945,6.870979,-4.722315,5.390588,-8.208274,7.995256,7.222500,3.173525,8.713535,3.941618,-9.303956,5.788564,-1.363776,-5.393619,-1.020358,0.807576,-5.380052,2.787573,3.092041,7.442245,-0.614059,-7.096771,4.208086,-3.237219,9.952045,-9.096806,7.818715,-5.351805,-2.077649,-9.263752,7.062445,-1.526040,-5.869699,-2.347391,-1.878543,0.570172,-8.605641,-0.358180,3.617368,7.423141,-9.526912,-9.908867,0.587972,1.627506,3.806746,8.678782,-4.226818,9.050277,0.902307,-1.180607,9.155811,-5.318360,-9.945956,3.418826,4.804051,-4.515538,-2.932121,-6.480461,7.134215,-7.420497,8.755149,0.003686,5.938164,8.705857,1.053828,-0.282559,2.074630,-5.784534,3.978673,-2.408068,-3.274865,-6.486016,2.377193,5.874263,0.399226,-4.521847,0.507364,-9.837854,-4.073206,6.498147,7.460053,-5.826323,-0.211041,-5.148599,6.172080,-8.211226,-2.015322,-0.099318,5.990116,-1.374790,9.711785,-6.231660,2.303980,0.174340,-2.581546,9.088275,-3.745055,-8.548834,-4.761159,-5.418815,9.433899,-7.145388,-7.800495,-1.830581,-2.076515,-0.609327,2.655195,-6.079833,9.232805,-5.780292,-1.737587,5.302155,3.398374,9.291443,3.793647,2.246842,-3.923446,-9.453781,8.995987,4.306126,0.854549,6.913178,-0.364192,6.332558,-9.282320,8.466994,7.937405,0.592017,-1.477690,9.589072,0.468315,1.602940,-4.425980,-9.885154,-2.040111,6.363284,8.642197,-8.337381,-7.583520,3.837037,9.007697,3.389370,9.541702,4.334799,7.843566,5.371405,-2.110603,-3.543401,-4.707567,-4.562356,-7.186854,4.955317,-3.647066,6.483216,9.848709,5.399848,5.443584,-1.909632,-4.728725,0.514794,-0.492934,-1.764581,6.369464,4.977561,0.406559,-8.727037,3.968648,2.452513,5.922166,-8.360815,3.150488,1.141203,-7.296512,2.704222,9.598407,-5.300638,-8.961095], dtype = "float32")#candidate|8509|(195,)|const|float32
call_8508 = relay.TupleGetItem(func_6520_call(relay.reshape(const_8509.astype('float32'), [195,])), 3)
call_8510 = relay.TupleGetItem(func_6523_call(relay.reshape(const_8509.astype('float32'), [195,])), 3)
func_3406_call = mod.get_global_var('func_3406')
func_3408_call = mutated_mod.get_global_var('func_3408')
call_8520 = relay.TupleGetItem(func_3406_call(), 2)
call_8521 = relay.TupleGetItem(func_3408_call(), 2)
func_8280_call = mod.get_global_var('func_8280')
func_8284_call = mutated_mod.get_global_var('func_8284')
const_8525 = relay.const([-8.329126,5.029071,6.725813,-0.584746,-6.902013,-4.815602,-7.637725,-7.931693,-0.821909,0.996279,-2.248489,9.553935,5.594413,-2.665216,8.573088,4.892757,-1.469055,-3.627583,5.225458,9.124539,5.985918,2.925052,-0.990693,2.430913,8.094190,2.825957,2.313777,0.277370,4.074120,2.555653,1.181778,-3.815827,0.813257,7.744274,7.579386,1.570078,4.737097,4.045603,-0.645230,-3.971885,3.108179,1.829797,1.139430,1.655448,-3.442955,8.312892,7.634690,-0.087001,8.487136,-3.709513,-5.072889,7.096973,-8.799736,2.200235,-4.450123,-0.776623,-4.866200,-1.916678,-8.567590,-1.984048,-0.952368,3.980371,-1.595057,8.059471,2.609779,-6.370954,0.460683,7.432806,-7.396964,-0.825585,8.311875,-1.271209,-6.165276,0.027375,1.879731,-7.848788,5.584939,0.344981,4.701892,9.276810,-0.634173,-0.177903,-0.641342,9.895909,6.516389,1.212832,4.002890,-4.274645,-8.373474,-3.356554,8.425020,6.226456,-5.610269,-3.635955,3.380447,3.117954,-7.870658,2.295921,8.972161,9.948589,-2.078693,1.169996,7.328001,-7.015920,4.189518,0.105447,9.256645,-1.901881,7.250443,4.750111,-9.928462,3.860258,-8.828338,8.524575,5.526822,-5.821508,8.026996,0.248501,8.398549,-3.501682,0.841949,-5.840590,6.860030,-3.170684,0.859339,4.943464,-4.499814,-0.623698,-8.509187,9.712444,9.125460,0.582412,7.348838,3.139328,-8.479432,-5.559756,5.664833,-7.602969,2.072969,1.800341,-5.424095,-7.124335,2.878066,-0.855773,2.606061,-7.238908,5.860904,0.105987,-9.127033,-8.980362,7.459132,-2.395141,1.926378,5.046310,-2.179969,3.874700,9.267440,7.275381,0.334411,-3.256534,2.807432,4.464294,6.605648,-6.137747,9.201639,-4.086779,2.664492,8.092894,-5.916520,3.711345,6.411161,6.865180,-3.448036,-5.839704,-5.486224,-4.271243,1.064057,4.076879,0.888879,-7.939990,-9.182428,7.984812,-9.730594,-3.900040,2.671291,2.956525,-4.003105,4.915106,1.602199,-3.611180,9.414829,-6.891201,-4.685152,2.613639,4.910175,-0.688067,-0.743105,5.919972,-4.564159,1.117326,2.405709,1.768584,-3.604833,-3.529688,-1.763741,5.124762,-8.232739,-0.676751,0.979398,-0.143997,4.723644,-0.563900,-5.525644,-9.945846,1.478961,-2.017144,-2.123135,8.134228,-5.213779,2.102810,-2.554979,-7.163977,-6.938967,-1.893199,-2.499872,-0.273652,3.784254,-2.137209,-0.666553,7.849078,-5.709388,-9.240204,6.155897,5.989121,7.468637,-3.337142,-5.698959,-7.098308,9.063858,-3.674504,5.158077,7.776517,-5.979100,-5.340182,0.139667,-4.084314,2.917828,-6.995079,-6.667848,7.769499,-7.172206,-4.520874,-9.793001,2.226968,9.394201,-4.062672,-3.941728,0.336407,4.371618,6.479920,0.940078,-9.892983,-7.896211,9.930399,8.712208,2.284814,-6.707349,-0.667405,-5.614952,-1.525579,9.676980,9.514447,1.017918,-5.700213,-7.473586,6.615111,-7.482270,3.238355,-2.080111,7.876104,2.964180,-0.654612,-3.626785,-7.209170,-1.591525,-0.815754,4.124631,-4.801962,7.444679,8.376827,-5.097918,7.880483,7.506474,-3.708498,-2.571079,2.674749,-3.484277,8.000612,-4.748634,2.717067,3.003500,-5.910768,5.685118,6.373026,-1.507563,4.823540,8.427422,0.881392,5.211238,-5.607131,7.716376,6.733823,3.510003,5.751666,-4.279725,8.554449,-2.842513,9.579539,-6.109091,-9.632649,0.350179,6.101634,1.301625,3.257507,-1.595510,-9.761682,4.547450,4.841097,-0.882821,-3.592326,-2.677062,-7.844832,-0.971605,-2.579847,-4.493290,9.524710,-6.063601,-2.795978,6.588674,-4.551979,-2.411039,5.893777,-9.207063,-6.480685,4.520289,-2.065710,-7.076331,0.674263,-1.493336,8.361687,-9.581753,-6.079542,-9.923223,-4.217718,3.358225,6.602336,2.335641,6.284406,-8.649972,8.074391,0.434457,7.356453,-9.390927,-0.398973,-7.145688,-4.124373,-3.333502,-7.157952,6.539427,-5.279721,9.393649,-1.221357,-7.510108,7.172353,-7.039462,8.982273,-4.304662,9.771971,2.073960,9.618243,-9.023113,-4.383841,-8.881883,7.391791,-3.228054,-9.793897,4.843365,-7.094208,2.300004,-1.460061,-5.139935,6.344523,-0.945745,-4.246613,-0.395647,-0.477303,1.482654,0.718275,0.015717,6.874975,-2.837165,4.352527,9.205679,3.525151,5.335700,-4.078936,5.817616,-8.217661,-8.279348,4.307117,-4.206035,9.297384,4.785720,-1.576234,3.903498,-5.940300,0.530831,-8.714386,0.697254,0.445035,6.189677,6.859614,1.425589,7.324825,-8.609574,-9.189040,-3.311058,-3.605195,-5.787363,-1.242125,-1.338925,4.306013,-8.083694,-0.644245,-3.545702,3.774058,6.656170,-1.178081,-9.266204,2.439388,5.733412,-7.981960,3.586032,8.394557,7.020283,-5.978929,-6.854281,8.911326,1.620224,-5.428269,-3.797377,3.679488,-6.168430,-3.757207,7.886530,6.405769,-9.343755,-4.111309,-8.045788,3.680629,5.227775,-9.309692,-2.048260,2.052559,7.002526,9.532156,2.563242,-5.946484,-8.001257,-1.807286,-9.619109,-8.358024,7.538236,-7.250218,-3.720866,4.696656,4.901198,1.751590,-1.230719,3.479514,3.476959,0.908027,-3.887556,-4.606575,-6.460510,-1.662161,8.933415,3.943535,-8.016811,-3.144757,-8.336449,-1.395847,4.372097,1.812845,-9.601176,-0.406151,0.864598,-2.147871,8.448015,-8.694910,-6.657777,-1.142231,-7.432366,-2.424519,2.093143,2.093675,7.584653,-3.797053,-2.746128,-5.764877,-5.661465,-7.689564,-1.781053,0.320760,3.796090,5.572385,2.371383,7.187258,-8.018805,-4.841608,7.205268,2.560726,9.073443,8.256756,9.439750,5.067830,-3.579460,0.473083,-6.485303,-8.126486,-2.306808,6.832767,1.662024,4.242867,5.047920,-4.719941,-6.300364,1.662537,9.191008,0.821349,-8.840767,-8.298732,-7.698028,8.283094,9.119077,-2.424088,1.484138,8.483423,8.818128,-9.786584,-1.795382,7.701052,-6.685856,-2.053408,5.744896,-2.561409,-0.326429,6.409236,-3.093860,-6.088344,-0.519824,-3.163874,-5.831390,3.628831,-0.988951,-7.982769,-4.181563,7.277872,-5.508809,-1.114582,4.461651,9.107000,4.065579,-1.530513,2.842113,5.546744,-9.451233,-8.841782,2.333452,-9.401780,4.991300,-3.576769,-7.522186,1.047612,-9.990845,-8.046213,-4.377894,2.721184,-4.125071,-7.756506,-3.583056,-0.222998,7.936802,-4.970666,-5.154345,-4.286201,9.511943,9.633284,1.095537,2.730559,-1.375168,1.985713,8.172887,-5.259576,1.493892,-3.403917,7.976287,-0.519510,6.778150,4.415886,5.130091,3.282241,0.085235,-1.814791,8.175523,-9.593587,5.309481,2.291775,-0.205968,2.609220,-9.284245,-6.714863,-1.675690,-2.044379,0.472561,3.881148,9.618455,8.690490,8.236019,8.516931,9.989866,-9.329846,-3.560066,-1.828777,6.234288,-7.222991,0.522665,9.705208,1.725997,7.436548,-3.250627,1.684178,1.988764,-0.091951,-6.915279,-6.908096,4.203426,-0.560848,-7.066547,-0.552467,-8.778142,5.522330,6.910337,1.763818,-6.472772,9.660582,8.026414,-8.738348,-6.644426,9.449684,5.311934,-9.144009,-8.775966,-1.655268,8.350732,1.249355,4.732460,9.074734,5.003297,6.686254,3.467181,-9.362637,5.729579,-6.804801,8.921971,-0.033619,8.341313,8.049395,3.122764,-8.180614,8.156248,3.276620,-1.582684,2.223453,6.996796,9.067424,-6.948695,-4.462923,-2.013214,2.684877,-0.876397,-0.129760,-5.221709,-7.589547,1.691283,8.961550,-4.223841,1.290124,7.375629,-8.417983,5.983382,-2.745205,-8.338183,2.608319,5.765293,-7.516793,-2.936739,6.224234,7.066341,4.015583,-9.881983,3.196600,5.964723,7.628562,4.525267,7.048009,3.502891,-2.223887,-3.118046,-2.718656,-3.927082,-3.025875,-0.566226,-3.172214,9.508845,-0.981173,-7.069895,-8.009297,7.281228,-1.387054,4.286724,3.115124,7.460167,-8.400243,-2.334110,8.497224,-4.598605,8.285134,9.758145,-9.825657,6.844131,-8.646171,-3.252746,7.776323,-4.487995,-3.364395,-0.999067,-2.871056,-6.059752,2.359954,-4.185469,4.583844,-5.330644,7.788011,-2.716132,-1.214369,-7.976911,0.791760,5.545151,-1.685893,5.919717,-9.339629,6.215122,9.498646,5.885582,-2.494282,-0.120812,-3.736494,-7.410624,-5.393148,6.131040,6.033367,-3.402868,-2.688527,0.899803,5.805322,-6.639745,-2.397668,7.306820,0.434726,3.317408,-9.792402,3.399000,-2.365042,-5.788573,9.564837,-7.855459,9.258288,7.587144,-0.007153,7.571985,8.681334,0.592679,9.214652,-1.179987,-7.031127,-5.950750,6.363983,8.409993,2.782768,-1.145409,-7.063834,8.377131,5.229576,2.375511,-3.196545,-3.722892,-7.265969,4.385084,-5.199754,-2.808380,3.563053,8.439412,9.912227,7.556897,-3.056342,0.458973,-6.287622,-7.416290,3.183689,9.801392,-3.366361,-5.655580,-3.026666,-1.704267,0.946992,4.187331,1.664168,0.892136,0.730836,-0.759746,-8.307627,-0.555807,-0.867738,9.489093,3.558314,5.493784,-2.240661,-6.427948,-8.125274,3.955058,-4.274411,-6.729915,7.377954,-2.036579,-2.801541,-5.944801,-0.650949,1.420408,5.408008,-8.862989,-2.834388,4.318387,9.604350,4.076339,-0.715670,5.241724,2.053400,3.915243,9.168952,9.210396,-5.414746,5.009702,2.272467,1.272109,0.275647,3.730586,-5.391065,-6.183236,-9.999022,9.450449,-3.436700,2.685859,-5.307903,-9.748232,-0.753296,-3.485519,2.331186,8.545414,-6.469754,9.770518,8.181169,5.829901,3.064168,3.795604,3.012019,8.694057,-9.189804,7.336431,3.869823,-7.393059,-9.880220,-5.340837,-8.882004,-8.644418,-2.494307,-4.140429,-6.603278,4.113137,4.266503,1.869921,1.393232,-8.024687,-5.860404,6.025192,5.090699,8.268066,-8.160204,7.978347,-3.548125,7.157126,-8.303056,-6.480866,-2.293417,-4.154651,-6.397185,-3.468609,-1.087969,8.700994,2.860432,-7.963768,8.274791,-7.031140,2.831129,-7.954225,7.211777,0.054906,-6.420978,-5.034994,9.139872,-0.774899,-5.736365,-7.336373,-3.489099,5.536296,-8.008824,-0.178318,-4.167270,5.544823,2.573683,5.144926,9.615441,-9.853018,-4.315243,-7.108638,4.953749,2.216934,-4.670263,6.286255,-0.660091,-9.231454,-4.148969,-9.226224,3.703029,2.424993,6.094376,4.750584,6.832475,-4.540812,-8.225053,7.619643,-2.271713,5.210466,-0.581574,1.928878,-2.705946,6.681403,-8.417540,9.136466,4.716180,-5.076048,1.280125,-6.101417,7.005693,-6.542552,0.800718,-2.348980,-3.640711,-0.005341,-0.582640,9.906849,4.817913,1.938220,-7.022792,6.403345,3.925794,1.951273,9.200268,3.328156,-1.794860,-0.366324,-4.997559,4.525342,0.857781,7.511482,8.595801,-5.359556,-7.419786,9.599284,-4.012473,-9.562781,-7.743773,-3.984865,2.023497,7.385012,0.824707,-7.052433,-8.929282,-7.692305,4.011655,3.090438,3.584271,-2.771705,5.052180,-9.829005,-7.919039,-1.218544,-3.665157,0.656388,-8.553190,-7.616674,-4.006444,5.822084,-7.080508,-8.868692,-1.662453,1.593023,8.703892,7.213280,2.218835,-7.688202,-9.858171,-3.435578,9.388726,5.174591,-3.766741,3.938977,-6.457452,2.994919,9.595896,-8.756943,2.725864,7.152376,3.610709,-2.365902,-9.191000,6.365996,9.034062,-5.879244,5.279952,-6.789686,5.834053,-6.864048,1.235867,-8.282176,-1.534427,-2.286750,-9.818573,-4.889065,-5.125672,-8.375411,-9.969067,8.096195,-3.538324,-8.778686,6.624486,8.251165,1.996641,-0.714561,-3.614553,1.046154,-4.929313,-1.333946,5.913131,-1.045094,1.240252,-1.032909,-2.234960,8.286237,4.234255,-0.742249,5.220849,2.451726,-1.160490,9.645248,5.381038,7.844158,-6.018317,-6.992093,-6.338879,6.982315,-0.823878,5.138149,1.332322,4.377308,7.023068,-2.321829,4.784416,7.025989,8.441133,-0.407155,6.489468,-3.567617,-0.137947,6.953845,-1.503836,-9.486533,-5.907501,5.789015,5.911215,6.905665,6.398371,8.939693,6.767022,-8.322970,4.038083,4.858401,-0.066950,-1.628434,6.628775,3.976478,-7.213638,-1.062853,-3.978810,-3.810145,-6.781486,-0.423476,3.852836,-0.803182,-2.571195,-2.634582,-2.850452,-7.592157,0.059924,3.588654,-4.999004,-4.553677,-1.021594,1.073987,7.286892,-1.482948,4.681983,4.002975,-6.144929,-8.434582,-1.092549,-8.216323,-1.982523,0.208863,5.988107,-1.824902,6.867382,-3.464857,6.985127,-3.801381,-4.151167,-1.046574,0.888258,-7.025840,-7.607201,-1.144784,9.920108,4.108939,6.136190,-3.921960,7.115424,-9.344597,7.732041,-9.158131,9.075851,3.069308,-1.253586,2.825898,7.399623,3.817383,-1.254520,-5.303047,3.822619,-8.022950,-3.938644,2.846265,5.973860,6.218041,5.908065,-8.483188,-2.447194,-4.201850,4.417205,0.592126,0.321231,-7.657039,-5.034474,-2.732835,-0.284556,5.921386,1.899706,-2.827543,-6.787651,5.628112,-8.699455,-2.057935,-4.973668,0.878667,1.705608,-1.126817,5.993230,-0.512504,-9.328250,1.319025,6.664186,2.877222,-3.772985,-8.820700,7.925292,-7.828313,3.791020,8.443752,0.594938,1.007022,9.149772,1.225322,3.174496,-9.493231,-4.666418,-1.231482,-4.394962,-2.075571,-3.326976,-6.408852,2.104671,3.021011,0.147840,-5.156081,0.315187,9.987185,9.676576,9.008559,5.801794,-1.530511,-8.813484,9.955993,5.990128,9.854156,-1.040875,9.778800,-6.893297,-2.851699,7.530594,-9.375383,9.777651,7.755208,-9.424222,5.714718,5.830047,-1.674473,-4.925912,-8.802352,8.350774,3.954044,1.198788,8.041219,3.166851,-0.307317,-5.353082,1.886257,-6.574616,4.063708,-6.816248,-2.417474,-6.914339,8.957897,8.584861,-2.765365,7.889526,-3.257351,6.485962,-4.055979,-2.627027,0.094330,5.824599,-3.055715,-0.330877,-3.407847,-2.375819,-9.335849,7.933031,3.721410,3.970293,-3.125183,-7.618998,-0.704339,-5.880613,-1.590897,6.499104,-2.248234,4.815888,-7.465478,-6.311451,-7.131944,-6.033123,4.358992,-0.810569,-7.452343,2.712539,-0.827245,1.926453,7.426227,5.036476,-2.575948,9.296219,3.308407,8.981172,-7.024592,-2.876044,-2.696178,6.041610,3.934434,5.879954,-4.949131,-9.628219,-9.979922,1.927831,2.346759,5.193738,1.150564,-6.954063,5.367760,-0.951135,4.455237,-1.640698,3.368228,-3.866806,9.115998,-4.133094,-3.002318,-9.922547,8.028511,-8.173784,-6.582534,-7.540675,-0.623736,-9.031551,3.320776,-4.935555,-2.288918,-6.166539,-3.560342,-0.658985,-0.220314,8.397571,1.204318,3.060395,6.507361,3.668794,-0.321770,2.145269,0.634005,-0.002691,6.491019,8.155224,-5.878417,2.575173,-3.772612,-0.699657,7.601239,2.709727,-8.779118,9.452757,-5.413514,2.391300,-4.139427,-1.797153,1.946114,-0.798206,0.135451,-0.435139,-1.626177,-7.522692,1.960733,0.016335,5.251457,0.506608,-4.701980,1.191951,6.097037,4.890051,-8.859675,9.067691,-4.259915,-4.092768,-0.160636,9.248895,-8.945598,2.051711,4.200675,-3.231666,-5.316282,-0.972849,-3.468995,1.830634,-1.754049,-2.019068,-4.956971,-4.947799,7.821441,-9.569181,4.322479,-3.489336,-5.191965,5.033676,2.732711,-7.228180,4.890473,-4.596515,-6.314307,-7.972139,-1.781884,0.995678,-7.246944,8.101214,-0.735552,7.542097,-5.295819,-6.084038,-6.758561,-0.083444,3.572382,2.316663,1.201897,3.900364,3.443042,-9.868037,-1.121109,1.188394,-6.440645,-9.743106,-5.115975,-3.620568,-5.611053,1.916382,6.437587,-7.278724,-3.455161,8.351034,3.902751,-5.002983,-8.331795,-8.054365,-4.248381,-0.214835,-5.131938,-5.714032,-8.408472,3.174846,4.408009,0.619764,-1.567192,2.741239,9.940410,-6.248681,5.438019,-8.220855,-0.128719,-0.011475,-5.537941,4.414845,-0.957752,2.975698,-2.077389,5.101427,-5.281554,-8.501921,-3.413136,7.794292,7.678141,-5.118483,-6.443076,-4.438153,8.891452,-7.427417,7.159936,-8.883144,8.574733,6.044607,4.760221,2.506897,0.808839,-6.633326,4.546775,-6.124019,-3.300107,-3.547207,0.029899,7.114060,6.362307,-8.678479,4.434549,-3.085058,-7.418617,-6.025463,-1.152611,3.757787,-8.137814,8.173865,-5.785096,-4.612217,-4.982694,1.654069,9.843303,-3.208456,-8.158569,-3.798962,-5.676511,-8.254472,-1.586692,-0.531055,-9.738881,-2.673105,8.542641,3.353121,4.677690,-0.049412,-4.785370,8.183006,-0.643913,-5.589763,-6.155105,-1.416367,-3.922116,-7.110134,-3.245131,8.495058,-8.021795,6.384707,-1.964090,2.928000,-5.696081,5.583851,-3.888972,-9.030709,3.069311,5.949166,1.013607,-0.281052,3.310881,-3.150327,3.658363,-0.774702,-2.693771,3.325221,-5.104638,-9.039428,3.936647,1.427357,4.181356,-4.870624,7.369059,-4.252855,-1.242938,-1.748964], dtype = "float64")#candidate|8525|(1560,)|const|float64
call_8524 = relay.TupleGetItem(func_8280_call(relay.reshape(const_8525.astype('float64'), [10, 13, 12]), relay.reshape(const_8525.astype('float64'), [10, 13, 12]), ), 0)
call_8526 = relay.TupleGetItem(func_8284_call(relay.reshape(const_8525.astype('float64'), [10, 13, 12]), relay.reshape(const_8525.astype('float64'), [10, 13, 12]), ), 0)
output = relay.Tuple([call_8490,call_8495,const_8496,const_8497,call_8508,const_8509,call_8520,call_8524,const_8525,])
output2 = relay.Tuple([call_8491,call_8498,const_8496,const_8497,call_8510,const_8509,call_8521,call_8526,const_8525,])
func_8536 = relay.Function([], output)
mod['func_8536'] = func_8536
mod = relay.transform.InferType()(mod)
output = func_8536()
func_8537 = relay.Function([], output)
mutated_mod['func_8537'] = func_8537
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7159_call = mod.get_global_var('func_7159')
func_7161_call = mutated_mod.get_global_var('func_7161')
call_8563 = relay.TupleGetItem(func_7159_call(), 1)
call_8564 = relay.TupleGetItem(func_7161_call(), 1)
func_4815_call = mod.get_global_var('func_4815')
func_4817_call = mutated_mod.get_global_var('func_4817')
call_8571 = relay.TupleGetItem(func_4815_call(), 1)
call_8572 = relay.TupleGetItem(func_4817_call(), 1)
func_8280_call = mod.get_global_var('func_8280')
func_8284_call = mutated_mod.get_global_var('func_8284')
const_8578 = relay.const([3.044043,2.850418,-9.496466,0.556854,-7.519942,2.706041,-8.404261,0.085138,-5.001435,3.732946,0.967418,-7.034287,9.179362,-3.045139,0.331678,-0.843776,7.038422,6.991990,4.234976,5.365566,-1.938725,0.737703,7.036555,0.552209,-9.444509,-9.707045,9.968542,-9.254381,-7.713510,8.157999,-5.917349,4.996117,-8.423491,-8.700551,7.432753,4.226223,-0.105127,6.272103,6.358741,9.131414,0.838698,5.951529,1.033888,6.894875,-2.499708,2.221385,-1.857814,-1.220532,-0.677857,-7.975849,-5.922938,3.989447,-5.114226,3.942903,2.415893,4.463558,-2.803660,4.468455,2.332837,3.099165,-9.647295,-5.868581,9.009129,2.783633,9.438359,-9.271264,7.987091,-0.246840,-9.236252,8.988714,5.877239,-1.285557,-9.166951,2.830178,8.895854,2.503401,7.340697,-4.106306,5.939925,-7.588188,-6.859931,-9.835038,1.471547,8.754504,-3.421472,9.692007,-2.497803,5.388506,-3.074782,-7.126726,-2.052146,3.444415,4.666972,-6.657328,9.149058,-3.275856,1.952833,7.035411,6.770094,-0.978222,4.576045,4.479145,-4.286611,-1.851885,5.197018,-7.243724,2.807129,-0.799106,8.832458,6.483871,8.516195,-1.417273,-0.684917,5.920266,5.198864,-8.985255,-3.974521,-0.096741,-8.459234,2.809597,9.291247,9.081710,5.592746,1.841369,2.059263,6.305513,-6.918009,9.979210,2.685645,6.405750,8.220338,3.807178,4.685189,-1.912819,9.733607,-9.762373,1.378493,9.261370,7.311021,2.437041,2.549808,0.049274,2.415853,-1.685497,-1.035802,4.342451,4.494225,8.607493,-9.923419,4.347265,6.287002,-4.998326,6.222513,4.780120,-9.562843,8.472344,7.788709,-9.111458,-0.463611,6.154852,-8.192687,-9.017755,6.076761,-2.375437,1.810667,2.266995,7.327572,2.146084,3.960424,9.871017,2.914422,8.196829,-4.090370,1.426638,6.164379,6.267674,8.519408,9.918278,5.991809,-5.145424,1.913824,9.142285,1.417426,-8.243889,0.530121,5.597040,-9.833233,3.334875,-8.511429,0.016374,6.219558,8.191834,-6.383430,6.626418,-9.193201,-5.601019,-5.978333,1.364373,-3.083287,-8.740919,0.566398,2.822216,3.067544,-3.374815,2.726831,9.943149,-6.583878,-6.077961,9.053858,-7.912517,0.974392,-9.316813,-3.392530,-3.940623,9.534617,-6.992472,-8.208127,-6.744146,-4.896025,2.770842,3.234943,-6.009584,1.392709,-4.241403,5.957638,-5.382575,-7.844676,-5.354744,-9.483321,4.449641,9.450914,2.892436,7.698381,4.588274,-3.711137,-8.053406,3.046043,-8.234527,0.923046,-3.523665,4.220417,5.651760,0.361759,4.895007,-1.550443,6.605671,-4.918530,0.333563,-4.412366,-6.224506,7.227316,-7.884292,3.081204,4.037322,-2.557932,1.999946,5.137066,3.148826,-7.633737,-8.893406,7.473500,8.732685,-2.288387,-3.222487,9.984784,-4.848731,1.593916,-4.992298,6.156312,4.485606,4.366254,5.045846,5.330367,3.264435,4.919667,9.744183,8.407126,6.252456,8.047117,-4.594248,-4.596382,-5.952320,-6.893453,-9.987572,-6.249622,1.146255,3.631053,-8.247477,8.091622,-0.825681,-3.773885,9.131823,-6.280912,0.625535,-1.503309,7.113139,-2.562304,-7.557640,-3.330751,-0.556030,-4.440517,-8.217934,2.068928,9.398416,-9.919680,5.147957,6.620318,-1.701660,3.912673,9.305239,2.282213,-8.982685,-6.140300,-7.996106,-3.341961,-2.756349,-7.581147,-8.716351,4.512903,-8.516669,5.467263,-0.906687,6.392994,9.115635,0.049210,-0.592708,9.055039,-4.694941,-4.148805,-7.902947,-0.297404,7.856419,2.519459,-1.694033,2.810159,-9.661148,-3.692531,9.704688,5.919652,8.870685,-8.048459,2.381746,-4.938427,8.874778,2.767288,5.374525,-0.466656,-8.523660,-1.484468,7.557820,-1.430776,8.269340,-1.004432,-9.467286,8.221949,-3.963119,5.159139,5.583111,-3.085755,-2.774800,-2.936245,0.239438,5.118893,-7.912882,-3.287224,6.047895,1.953070,2.107262,-0.138161,4.877698,8.357807,2.866156,2.941039,1.956810,1.849854,3.834716,6.810500,0.412245,1.563115,2.269495,6.389679,-0.378764,7.209259,-1.613648,5.093737,3.545116,-6.450111,6.090599,6.482992,7.648176,2.055397,-1.254916,2.973947,9.139986,0.150443,-7.690128,5.571375,8.478279,-7.903535,-0.229406,7.167377,2.731497,-0.294028,8.415319,9.622293,4.655252,-9.293008,2.701833,0.471792,-5.719608,3.890942,6.917899,4.325257,4.635456,-7.654515,8.162641,1.855036,0.695072,5.214862,3.551305,0.292834,4.837054,-6.207155,6.481790,7.277554,-5.556951,-0.976233,-1.510419,-9.212938,-2.275417,0.076091,-3.922650,-0.201922,6.533318,2.403994,-4.034081,3.935094,-3.460076,-3.931825,7.723410,7.458403,7.895033,1.451820,1.502097,7.635539,-9.981742,4.579647,-3.667256,1.851384,7.647823,-7.575614,0.270308,-6.354434,-0.783011,-4.124471,-3.247325,2.752224,9.768071,4.772913,5.196930,-4.982695,-9.662385,-6.171841,8.387709,-2.528412,-3.427934,-5.474588,-8.482666,8.184724,-5.301274,-3.287248,8.043081,-3.766537,-3.547976,0.147362,-7.681304,2.370992,2.825647,9.754615,6.574280,-5.590649,0.155825,-1.339742,1.486374,-4.862296,4.395686,-1.539517,-6.019303,3.944988,2.522087,-2.984811,9.559776,-7.155064,-5.656060,9.216303,2.974179,0.919111,1.398379,-9.609838,-8.494994,-0.807450,5.450146,-0.589283,8.318296,-1.915697,7.470727,-6.416351,-9.940988,6.216804,0.633026,5.386913,-4.420027,6.464770,-5.185722,-9.930567,-1.827983,-5.000683,-6.843061,0.254202,-7.693079,-1.249979,4.738425,-2.090774,1.661740,-0.062963,2.732423,3.065835,-3.983271,9.425749,-0.697293,9.268190,-3.884294,-2.584285,7.751900,-4.427630,4.639648,4.501539,7.781643,-1.613186,0.715722,5.755538,-1.392712,9.183546,9.315834,4.073573,-5.108829,-3.904667,-1.017587,1.923289,4.493956,-7.342495,-6.227717,6.680576,2.667620,-4.636888,-6.792683,4.842735,-2.321808,1.323858,0.403251,4.842157,-8.478807,-6.164724,-2.167882,-4.798393,2.783760,-1.544558,-9.942205,-8.237454,-5.606805,-9.972385,-3.203662,0.993120,-8.397944,1.854771,-8.381025,-7.945661,-2.414336,6.656503,-8.326506,-2.310211,-4.484197,-2.131250,-0.396094,7.620155,2.602133,4.264696,2.160844,0.392033,-2.436610,-9.786174,1.041580,1.184660,3.055660,8.065062,-6.211406,-4.222732,-5.141008,7.526190,1.808651,7.264579,-9.852419,-1.507039,-7.658777,-1.717787,-2.916016,1.662893,4.685661,-4.250784,3.221532,-7.749699,6.399471,0.932235,9.347175,1.209345,4.756030,-8.209986,0.838796,1.287077,-8.672091,-2.144753,-0.072707,-8.651178,-4.422355,7.899293,-0.933050,4.246523,-0.798252,-8.041808,9.252687,-9.206946,-4.446723,4.284267,1.984503,4.972114,-3.366296,2.092371,8.589799,-2.258742,-3.232439,-9.747755,0.106529,-5.586029,-1.536008,-3.552209,-3.312887,-8.586676,5.263805,5.577044,-9.195639,-2.982299,-6.157488,-6.155199,6.375858,-7.300441,-8.598451,3.883566,-8.543044,0.421551,-9.615932,3.400735,-2.325607,8.703613,6.379048,-4.208917,-8.736922,-3.533648,-0.636707,-6.248705,0.998560,0.798498,9.506481,8.275533,2.863128,-5.756945,-7.536446,-6.817862,7.993874,-5.717615,-6.479705,0.634920,1.686672,-5.173112,-3.657753,-4.714291,5.319343,2.040784,-9.814097,-2.919905,6.836268,0.702886,-6.438786,-7.670117,0.903455,-8.511341,5.219055,-7.177495,1.441818,0.294677,-5.689852,4.162884,5.749191,-8.298427,-8.898601,2.659779,-3.994227,6.398232,9.090082,-5.330800,8.928532,-4.385011,-9.927261,9.878350,4.211218,8.811193,-4.915883,0.097890,4.331928,7.973048,8.764945,7.105699,2.132198,-6.412976,-5.572456,-3.667934,-2.076366,4.143464,7.275832,-6.789558,6.234763,-1.624943,2.578598,7.740374,-9.834443,-5.880697,-8.666739,8.514274,-0.062217,-8.722059,-0.838698,-6.529452,4.868491,-0.173348,7.248072,-8.295479,-6.360756,-5.652721,-7.222336,9.898634,8.725868,-7.006270,7.399946,7.861204,-0.821028,3.951209,-0.508158,6.269097,9.941446,3.383161,-4.234216,3.806769,-2.220663,-2.999105,6.801196,0.779909,3.011123,-4.325105,8.376502,6.116560,5.808930,0.311275,-8.274644,-0.932414,-9.970529,-0.799712,8.588466,9.045935,-0.705049,-5.562613,7.132742,-5.347073,-6.986517,-0.938926,-5.079685,9.332322,-1.056930,-3.707190,4.259043,-8.731991,-7.413063,-6.941326,-7.008318,2.809590,-4.366744,-4.897393,-2.259331,-1.909030,-1.508096,-8.671460,-4.230712,-3.733924,-1.557836,-9.711726,2.371584,2.709380,3.233656,8.402056,-1.652492,-8.437579,2.575521,-8.730650,8.856124,-3.646968,5.089714,1.461737,-5.655561,-9.841036,-5.356568,-4.493252,3.846679,8.259784,9.277060,-2.341238,8.772883,-4.968069,-5.956411,-5.437672,-4.725467,3.418590,-7.211662,0.830576,-7.399706,9.024127,-2.152525,1.909263,-3.199997,7.167017,8.258316,2.126119,-0.717625,5.921061,-0.922175,9.110686,-7.282024,1.601442,2.074062,9.741745,-8.510029,-1.857378,-0.695073,8.664419,-9.947874,7.435150,-7.395412,-5.814609,-4.895431,4.689276,-5.719448,6.451379,4.018015,5.327532,-8.412911,5.626265,3.596131,5.486780,1.966485,-9.768695,2.354122,7.894121,-7.236850,7.403702,-1.886763,-6.793213,6.995304,6.256190,-8.392900,1.527384,-8.047315,5.098712,-8.237223,2.890794,7.153861,5.772882,6.487282,4.920423,-5.443075,6.725963,1.220633,4.740959,5.855537,-2.603613,8.273731,-1.014026,-5.366463,-6.339089,1.915209,-5.761389,1.942766,0.200869,-3.536772,7.542254,7.339180,4.806362,-5.418600,3.843805,-7.740058,9.510009,3.946086,1.301229,0.814968,-0.692486,9.254930,-1.941347,-4.895609,-9.084323,-1.084367,-6.980261,-6.153694,-4.334734,-6.916525,-5.371950,6.489628,6.860702,-0.460210,-2.505397,-7.993816,-0.573378,0.525332,-3.457571,-8.678706,3.053802,-4.571476,5.601743,4.734371,9.618162,5.227336,-9.740894,5.493983,-0.588168,-1.904472,-1.408461,9.054418,4.866525,9.167677,7.369186,-2.717312,-9.930885,-8.386074,2.814808,8.303669,1.309967,-3.892994,-4.735183,3.996542,5.678348,7.953942,-1.231838,-7.890445,-5.940835,-2.387041,-5.501756,-8.646315,9.565713,-4.595294,-7.532768,-2.123166,-1.868230,-2.718824,-0.818961,1.985043,5.315607,2.853434,-2.615394,5.916826,6.312735,-2.910801,-7.927691,-7.299153,7.024867,-4.247868,2.217320,5.140840,-0.048586,-1.902968,-8.043567,-5.041348,-0.902303,7.003401,-0.336856,4.384592,-4.434294,1.009450,-3.724977,6.800165,-6.716825,-3.718334,-6.097681,6.658245,0.754970,7.899570,-4.437156,4.775741,-9.335330,0.536538,-3.194598,-2.174260,-6.685973,5.119484,-2.832389,-0.063041,6.097592,-3.874221,-7.232375,-7.838594,9.724685,2.812322,0.374938,-0.853247,-1.884030,-8.732071,9.354375,1.211742,-6.258249,-6.679175,3.963609,4.521862,5.174513,-1.972410,-3.896126,2.169107,3.135386,8.166689,-4.220877,-4.402057,6.802230,2.929270,2.805852,-0.659843,6.100820,-9.970226,4.728086,5.181119,9.223288,-5.220293,-7.643818,2.747829,3.586375,9.048216,9.411880,-5.053475,-1.026924,7.635423,-9.511322,-2.562925,-9.367976,5.818336,-9.482861,0.016214,-1.336159,6.713229,7.211638,-0.512406,1.048712,-7.373117,6.442613,2.837190,-0.203759,-1.143217,-9.592409,4.673809,4.302591,-6.134217,7.935600,-9.335738,-5.469867,7.948383,-0.522873,-1.494902,3.364396,-2.590580,2.708711,-2.440186,-6.249265,-0.554873,2.092788,-6.760408,-6.654909,6.768294,-4.202898,-1.158996,4.187927,-9.405150,3.773633,-6.216205,-3.057617,-6.557130,-9.780930,1.383079,0.388369,-1.642396,3.724810,0.968747,9.203030,-9.761099,-4.957869,-0.068776,-6.231799,-6.674565,6.212137,-9.294876,1.701136,7.828997,3.712671,8.767249,9.501966,-9.052456,-9.661073,-3.194298,-6.162573,8.015435,3.022849,-7.197170,-1.915984,-0.660785,5.360530,5.251758,5.453214,4.703923,-4.772163,0.473503,-1.608478,-9.008576,7.596990,-9.885294,0.387673,2.847843,-5.798864,-4.462449,-3.585784,-1.325872,9.755150,-5.422372,2.615457,-9.616687,-0.466961,4.860901,5.669407,5.646489,-8.478774,-6.774793,8.415516,9.158558,2.943734,3.046459,-7.835571,-4.166910,6.660937,-1.619943,-5.166381,-4.101463,-5.153521,6.142135,-8.152278,-0.945405,-5.759792,-3.059065,-9.307942,7.127634,-6.955345,1.903099,6.582101,-0.659728,1.207841,1.513719,0.814523,-9.183297,4.100706,4.103529,7.008271,-5.967847,-7.082534,7.185227,-7.613103,1.252530,3.948550,0.984081,-9.836506,-2.269977,-7.197048,1.613609,1.553642,2.578157,4.387603,-7.314155,0.438580,-2.757734,-6.536206,-5.785661,7.202597,0.259050,0.918685,7.280856,-7.672793,5.420721,8.827007,7.219988,-1.155956,1.040735,5.029315,-7.947687,-8.478907,0.321802,4.450387,-4.266708,4.210563,1.641934,-2.918633,-0.598569,-7.209935,-3.849707,-5.418562,4.640804,-1.147741,-3.461014,-8.878665,-3.375340,2.001252,0.941490,-0.835653,0.369040,1.020004,-5.709842,6.309740,2.970351,-2.579419,8.502060,5.739135,8.440776,1.226343,3.128700,1.954476,3.741312,7.685243,7.112178,-0.380311,8.129771,5.448794,6.442500,-9.442901,7.549116,-5.637685,8.592788,5.984714,-6.964332,-6.312699,-8.876438,0.348920,2.683196,1.712541,-2.574106,1.304411,9.992373,1.272643,-9.445418,4.200919,-0.453890,-1.969586,2.505801,4.923990,3.915964,-3.242681,8.460191,6.750288,-0.079082,5.049321,-5.493229,6.518178,7.905577,-9.785347,-4.084792,8.136494,-7.177314,5.116682,4.671825,0.010036,-5.801991,6.268692,3.251282,-7.722755,4.892233,8.172273,0.530942,3.284910,7.044096,-3.891081,-1.558074,8.249318,2.635312,-8.119456,8.002067,1.417166,2.228020,6.118382,6.805331,1.100339,7.964933,-3.617401,6.741123,6.680433,-5.161622,-5.827449,-9.092379,7.492793,-9.721156,-2.877782,3.569900,-4.638432,-8.463145,4.552002,7.650835,-8.125536,2.470836,5.979531,6.978183,-7.350325,-1.074554,-0.256906,-0.586763,3.292549,9.940501,-0.703405,9.945349,-1.960135,-7.806296,-4.757268,-4.516127,-1.564538,0.681778,-3.025889,-9.828844,-5.547882,4.205577,7.290338,-2.833934,5.875377,5.287967,-4.926824,-9.608968,-6.751490,6.124430,-3.165178,-5.782155,0.244129,7.134453,-9.735085,-4.836193,-7.114476,2.521204,3.893418,-0.273096,7.280178,-2.288033,9.837844,-2.869487,1.323998,-6.356111,3.356992,-1.214228,-2.788753,-2.764490,-0.868335,-7.306052,2.445584,-0.310409,7.205436,1.235200,-1.785572,5.401123,-0.487252,-5.088868,4.836151,4.682223,3.783777,9.467986,3.596427,-8.552434,4.900619,3.164162,-4.602066,6.927812,-8.839853,-6.595192,7.588497,-2.789242,-5.194719,5.270713,9.785490,-3.244636,0.432681,3.298588,-6.870637,-2.510886,-8.469742,-5.502374,1.750067,-9.414283,-4.642040,3.122635,-5.685106,6.813390,-8.841473,-1.865551,7.391395,-0.364930,7.684945,-8.528066,7.728979,9.775427,-1.007730,-9.469165,7.699123,1.637236,4.510418,3.588650,6.299047,-3.464500,-4.259868,2.574581,-2.215494,-0.959504,7.609439,5.701295,4.188207,-8.888994,-5.279671,1.529432,-9.114172,9.566909,9.313643,4.987978,1.050058,-6.497727,2.546716,3.921438,5.748064,2.409865,-1.404481,3.650578,7.160730,2.025066,-5.141726,8.445633,-5.277842,1.766160,-6.388475,-3.675401,-8.403135,5.316228,-3.561232,2.136105,-5.414513,2.256944,0.823759,-2.795256,-6.779526,-0.039799,-6.272804,5.594631,-8.422529,1.565993,-6.323729,-8.054557,-3.724852,-1.034891,4.523450,6.275335,-8.091555,-9.117225,1.752153,-2.435696,5.601995,4.439235,-4.077838,-8.771280,8.888870,1.880358,2.005116,-3.033734,6.732249,-0.843155,1.385899,-4.989323,-9.984212,4.963562,2.648209,-9.164244,5.723733,3.824992,-1.621435,-3.510415,6.018368,4.185062,-8.803814,-3.621621,-1.506220,-8.829293,-2.826683,0.324681,9.615582,1.863536,-7.748924,2.865462,9.375586,-5.439089,-7.191613,2.586609,-3.244267,-2.046984,-1.299198,6.159120,-2.236585,-5.204573,-5.196570,7.187747,8.513603,3.411160,-4.298119,1.793599,8.895785,-9.392926,-8.693661,6.521387,-4.572315,4.042217,-6.277648,-9.759431,-7.051439,-2.513213,-3.957750,9.991163,-8.786789,-4.591551,6.514894,-9.875497,1.417247,1.650669,-4.264827,-4.153298,-8.839982,3.022516,-3.393459,4.224504,4.312885,-2.344628,-1.463480,9.255216,-3.159493,3.031730,1.256608,-0.427275], dtype = "float64")#candidate|8578|(1560,)|const|float64
call_8577 = relay.TupleGetItem(func_8280_call(relay.reshape(const_8578.astype('float64'), [10, 13, 12]), relay.reshape(const_8578.astype('float64'), [10, 13, 12]), ), 3)
call_8579 = relay.TupleGetItem(func_8284_call(relay.reshape(const_8578.astype('float64'), [10, 13, 12]), relay.reshape(const_8578.astype('float64'), [10, 13, 12]), ), 3)
const_8588 = relay.const([6.563718,5.906578,-9.377103,-8.376770,-2.596982,7.604413,2.450200,-8.527133,-6.370811,8.278438,-4.809879,4.773853,4.659745,-1.450105,-9.821434,3.121075,-4.486710,4.852550,8.382995,8.784308,-3.134608,7.131674,-2.898895,0.558443,8.083291,6.597234,6.435055,0.715148,4.210547,-3.687914,5.078534,8.397217,-3.127305,-0.201643,4.877948,6.175998,-5.794608,1.785623,0.297617,-4.935279,9.824182,-8.094933,-4.011522,-2.429954,7.183484,2.880436,-9.738092,-4.481414,0.886880,-0.134289,-7.079670,-6.899652,-6.040599,-6.929701,-8.695522,6.678301,-6.387990,-5.838650,4.324213,2.772543,7.718832,6.686850,5.771976,-8.293839,-0.603006,3.192300,0.996488,-4.276514,6.948582,3.377930,4.470506,-5.413281,-0.200473,-0.353486,8.102413,2.445330,-4.817585,-1.476007,-3.609259,-9.812601,2.162841,-9.182571,4.739538,2.637378,7.040223,-6.010181,5.472835,-2.114561,6.724543,1.463166,-0.051284,-8.414556,0.243097,4.943775,9.409177,-8.684512,8.535273,3.098514,9.107214,-1.717862,6.352082,2.259732,4.889411,6.106992,-1.184878,7.811635,6.873474,7.706463,-2.592599,-3.055318,-1.566550,-3.049433,8.127018,-2.923588,-7.573891,5.754488,0.896903,-4.651353,2.411382,-5.262924,-9.423568,-7.281139,0.430115,-8.987195,-3.472304,9.780797,-5.548299,1.742545,-0.511009,-7.547928,-2.527456,-9.455052,2.066894,-7.585105,-5.229685,-5.928851,-6.728733,-7.968475,2.701492,9.025074,-5.395908,-9.334843,-1.782225,-7.192007,-4.888430,-5.365000,7.105915,-9.660861,3.548333,8.647599,1.681485,4.911952,-2.417498,7.390440,-6.771889,-4.171059,-7.049770,9.673996,-8.948726,1.396010,4.496846,5.485768,-8.387433,5.436368,-5.290451,-6.989822,-8.914777,7.877070,2.488478,-8.933520,8.571984,-3.568693,-9.720151,-7.907776,-2.350022,9.735026,3.341940,-4.775632,-5.549642,-3.636374,-0.622748,8.018602,-2.462972,7.491192,6.754876,3.486622,-5.418042,-4.021133,-9.360844,9.372593,-9.489519,-2.928227,3.473605,-9.395482,-0.869551,-0.539716,0.356283,9.590323,-4.289229,3.968685,9.125183,-3.935265,5.020733,-8.866707,-4.790697,-5.820501,-5.307242,-9.804554,5.881520,0.250244,8.270488,-3.417391,7.897168,-9.530477,-1.232670,-8.777537,5.622983,-8.410883,5.145924,-8.779394,-4.649709,4.846854,3.197382,3.968674,-9.950481,-3.581173,-0.954583,-6.498675,-6.755010,-1.689576,-7.041304,-4.203289,4.218046,-1.398457,1.983826,-6.130367,6.403337,-9.283071,-0.126601,7.857024,8.481436,-3.217427,-7.453234,2.143262,-0.650114,-9.540220,-0.547340,-6.525771,4.818162,9.568037,3.742794,-0.513955,2.455575,4.593209,-9.330997,-0.884096,-2.417832,-2.273870,6.489105,7.387105,3.542980,-1.538157,6.746381,7.060654,-5.465401,7.696443,5.317281,-2.059478,1.968472,-3.606520,8.189205,7.956991,8.345779,-8.900960,9.811905,-3.136254,0.867094,9.542020,3.516254,8.868813,1.914672,4.481737,8.079584,5.392208,7.597669,-4.912287,-1.208516,-9.130445,4.140718,-6.485291,7.647078,8.759307,3.072143,2.192666,-3.746800,-3.549076,9.260654,-2.369220,-9.931937,6.011740,7.987914,-2.837711,3.944619,6.012146,0.541835,-8.323687,6.238460,-9.705738,-6.025605,2.778535,-7.078313,-4.294707,-0.972983,-7.524735,-9.792455,-4.227553,-3.766071,4.007940,-4.292238,-4.014997,-0.746811,-5.886651,0.958456,-7.887141,-8.444690,-2.534433,-3.772188,-0.948014,2.734888,7.732872,6.149229,9.477184,-5.715567,2.579447,5.402238,-0.194509,-0.294592,4.696946,2.727861,6.842301,-2.370474,8.046666,-3.708068,2.917906,-2.380481,5.445702,-5.804451,0.739074,9.542237,4.226152,9.219362,-1.109012,-2.439058,4.706905,-7.773642,1.029689,-7.581674,6.694189,0.016977,-5.048066,7.377692,7.697656,-1.863408,-5.747970,4.521920,-7.194502,8.926475,0.740775,1.043867,-8.153467,8.373629,-1.164181,-8.073621,8.351409,-8.228352,5.305017,0.932517,5.482313,-5.698256,-4.017561,-4.444156,-7.469042,8.370382,4.191088,-3.081910,-8.532499,-8.498321,8.391882,-9.216252,-7.142858,-4.723674,-7.997144,-2.149989,9.983872,0.934268,-7.269183,-6.433372,-1.684800,-6.179934,-3.090567,2.974453,0.394046,1.151132,-8.973381,0.669464,-2.435015,-5.689370,9.851912,8.941471,2.788347,-2.955277,-7.449375,-0.444765,2.681553,-6.241771,3.574223,-5.614505,2.646793,6.237627,-3.964004,-5.093887,-4.424455,9.778028,3.309763,-3.136869,-6.717107,3.155522,-6.576276,3.650366,-1.058765,1.893980,6.091889,-0.872986,-2.718620,-0.334915,-8.668237,9.356439,7.760346,7.088675,1.014616,-1.093927,-6.539811,-4.461850,1.317232,-2.079811,-1.028194,-0.900872,-4.721462,-4.840623,-3.555827,4.802486,-9.490906,-0.066575,1.686917,-9.291007,7.122956,-6.225832,-6.006551,-6.829847,-6.243532,-2.787955,0.634507,-4.251170,9.499020,-7.143224,6.677322,3.139641,-8.018590,-7.057357,5.287438,0.713536,4.509525,-6.753717,-0.043789,8.896589,-2.923861,0.564472,-7.657016,6.239593,3.416284,-1.742068,3.623239,-1.797985,5.816946,1.045891,7.457950,3.549486,2.223942,8.426243,0.569870,-3.685837,-6.700780,8.947041,-3.292476,-0.674153,-4.593076,-8.943938,-2.263315,1.437448,2.840115,-8.458282,0.878180,5.006990,-4.407785,1.538482,-7.054211,7.399530,8.382452,3.068864,2.929257,3.083359,-8.538955,7.959751,-2.011146,-0.464565,0.606302,6.108717,4.801699,0.452177,3.104864,6.300316,6.527641,-8.112711,5.647597,-6.046325,3.548871,-2.706049,2.687892,4.696863,-6.403627,-5.773905,-7.845513,8.130021,-3.734493,9.558059,9.749978,2.990315,9.886016,3.283293,-7.759643,6.723126,-4.711659,7.256990,2.293102,8.100757,8.946463,-3.298542,6.799581,2.130714,-4.390957,0.135171,3.143963,-6.956153,-1.168027,8.157324,6.965497,1.015816,-5.535353,-3.531926,2.427804,2.914370,3.007419,-0.376906,4.845150,-9.872382,4.941787,3.628998,5.530062,1.482159,-8.829902,-7.806630,-8.165772,0.112314,-7.768850,-0.708503,3.815407,-5.306556,9.112202,-7.733090,-3.894740,8.527494,-9.389951,-9.444369,-3.357992,-5.091903,-8.577572,4.671097,-0.732583,1.675756,-1.145335,-2.751231,-9.689165,-5.665635,1.186759,-8.706103,3.891365,2.205646,3.987019,6.363574,-8.586892,-8.265328,-4.871346,3.995335,-0.334069,-9.110733,-3.076239,-2.042962,3.866766,5.919768,6.438960,0.504451,1.027793,9.861384,-9.695550,-5.022125,-9.823885,-6.712074,-6.025193,7.299642,-8.314741,9.850912,-8.750967,4.070176,-5.604951,-0.872257,8.261011,6.974426,1.466089,6.036718,1.074681,-0.484315,-6.925389,1.987847,-2.190539,9.016793,-4.603977,8.273044,-0.626042,-7.336167,5.363348,2.211199,-7.583613,9.133009,6.675003,-9.184408,3.841466,-3.850936,9.935225,-1.895020,-8.141215,-7.743374,9.184035,5.069879,1.259449,-0.134915,-3.373497,1.940664,-9.288233,-8.624416,6.330151,1.054891,7.860470,-8.303512,5.246553,-5.151891,-2.383790,-6.239021,0.827325,9.430620,6.281447,2.326687,7.018498,9.444166,-1.959244,8.200465,-4.885361,-2.854345,-9.288534,-8.739639,2.093976,0.799356,9.197822,0.347990,7.924704,0.345187,0.120430,2.966869,4.845584,-6.070113,-5.022435,9.236180,-0.371957,3.281897,-3.612370,-8.736499,-1.984231,8.687838,9.967589,-8.670053,-7.692156,-5.357385,0.938115,-2.386850,-7.484462,-6.689714,0.754095,7.445319,8.848924,-7.799604,-1.858209,9.298995,8.893742,-5.627748,-1.858244,8.057545,3.953410,-5.693293,6.017714,0.107093,5.039219,7.785082,-8.666558,4.166872,5.702495,2.880753,-2.694003,-9.672245,-5.021153,8.088456,-3.700870,1.832680,-9.665534,-0.842985,-2.070506,4.705573,5.625126,-1.598376,1.677199,7.395836,-9.061498,-4.228847,3.319174,-0.615327,0.378403,-0.003226,-1.048764,0.444857,6.882441,5.257142,-4.150752,-3.457485,6.524677,1.401130,-3.149431,0.265070,6.353590,2.338067,-5.896462,-9.233589,6.952001,5.428040,-1.452787,-8.124678,-6.422500,-2.861202,-0.083838,-4.223648,7.625343,-4.745418,-4.829106,-7.254514,5.744758,1.374337,5.702885,-5.284529,-3.610036,4.499703,-3.930978,6.273429,1.899731,5.018114,-8.064050,4.765620,8.090478,4.260042,2.262298,-4.660959,4.408666,-8.561186,4.279084,-1.020158,5.916558,7.073443,5.026858,-0.202852,-5.900879,5.795340,-3.162294,-9.378288,-8.359511,8.575072,-1.646787,0.379420,9.546240,-1.743197,-6.101934,3.589390,-6.967047,9.552921,8.941817,-6.493291,-7.950948,-4.080044,-9.236464,-8.288179,-7.198073,-9.595885,8.627631,-5.068224,-2.148001,-9.188039,6.944596,-0.342860,-3.817132,-7.949010,0.829714,5.227391,-8.243333,-9.328257,-9.118597,6.326133,1.667094,3.825342,2.135289,8.175531,1.744401,-4.912726,1.881454,-1.383592,3.017068,9.250554,-6.582727,-3.159731,-8.103486,8.336713,6.419140,0.357139,8.739575,-6.187117,0.107786,-3.376706,6.028163,8.677287,9.176273,-0.593840,-3.705663,6.061575,-2.173556,1.666566,5.800667,9.603730,-8.759337,3.602384,-2.674626,-6.848735,0.211065,-9.543487,-8.348382,-5.129116,9.368955,-9.052965,-9.897418,-9.034156,5.548803,-1.847858,3.707151,5.729584,-8.881111,1.933575,-2.660002,-3.647947,-8.536481,-2.043662,7.614245,-4.818149,6.366380,-0.415344,-5.546808,-3.710539,9.293172,-0.838956,6.283923,-1.983951,-2.540943,-3.347859,0.280006,4.909397,9.556357,-7.181385,-1.830011,1.038596,1.264367,6.988009,0.793250,9.362667,-6.600460,7.818110,-0.351496,-1.412059,0.781311,6.863103,6.436579,-1.997703,8.034053,6.954427,2.431836,6.294596,8.543838,-4.251655,8.332075,8.512042,-2.422844,8.683568,-8.023029,7.605136,-8.318530,-8.867624,7.381411,-8.509951,-9.136265,-4.108368,-5.445592,-1.906499,6.457317,-5.825572,4.697793,-4.686470,-7.621976,-1.370256,2.930525,-3.539518,-2.130019,-9.490559,5.352404,-3.592885,-1.112901,0.569306,5.150451,-0.642047,0.016661,1.172647,-3.272506,-5.903388,7.143286,5.396879,-8.658846,-2.398026,0.003261,5.600165,3.443767,-7.645067,-6.365811,-4.624368,8.276547,-6.346434,-3.301693,2.646466,-5.477406,6.476723,-8.351751,-3.962637,5.275736,-5.283465,8.993349,0.776636,4.661286,1.593462,-7.196141,0.637974,-0.225545,-7.153652,1.229721,-7.507753,4.501589,7.730146,-5.551012,-7.854352,-4.947909,-0.350584,-6.016133,-0.820061,0.599360,-5.299750,-7.858138,-4.926464,2.258957,0.107703,-3.723570,-7.211277,9.846890,-9.427926,-1.430359,8.186788,1.203568,-6.468358,-4.961141,8.199709,-2.785727,1.302566,-0.029840,-4.412897,-2.425723,-5.671225,2.783865,-9.989649,8.495354,-9.088106,7.367180,-6.339629,-3.142389,0.359342,-3.882675,-0.229531,-3.166899,6.656171,5.144941,-7.102596,4.554543,3.036559,-8.417123,1.002049,-5.922159,6.220497,-9.093761,-5.768543,-6.856819,3.662490,-2.844862,-3.468792,1.499846,3.590276,9.579297,-7.058829,3.993476,8.247854,4.996796,0.234298,-2.309385,0.196579,-8.103263,8.928957,4.687167,3.786699,4.087122,-3.388574,9.145622,9.673862,-7.165346,0.090039,2.109552,5.304854,-3.616159,-7.805431,4.253082,2.481423,6.278877,-2.616836,5.866185,9.704328,3.411572,9.454209,2.282811,0.714950,-5.458991,6.313568,0.712937,-2.337311,8.072048,4.302364,-5.747663,9.295007,5.819544,9.037277,6.716662,1.099729,-9.951782,-4.234304,-2.467377,0.468506,-2.730635,-9.042344,7.118724,2.165479,-5.292343,8.214912,3.822345,-5.164346,5.627734,2.498385,-3.456931,4.568406,7.246565,7.740493,-2.937667,-1.895679,9.207248,-6.186295,6.899701,-9.434126,-0.581193,4.715529,-7.688181,4.467838,5.946208,-9.133373,0.634303,-5.190326,4.225814,-8.815663,1.272896,6.632719,-0.363544,1.927883,5.438565,4.843757,-7.525737,-5.788747,-0.414159,-5.876775,-7.195056,-5.475677,-2.328293,9.310981,-8.697592,5.907401,-6.848454,-0.502036,6.234834,0.949843,3.579683,-4.186983,3.219702,-7.594997,-8.189482,4.969853,-3.965891,4.007008,-9.257838,-5.513103,-0.910785,-2.298656,-0.631013,9.258550,6.018621,6.900907,2.777891,-8.287607,-9.497436,2.082595,0.359771,5.922595,-2.434557,-9.033849,3.906270,0.710457,3.050014,5.773491,-3.802034,9.807913,2.733705,9.372371,-7.505571,1.537422,-7.863699,-1.514305,9.086877,9.987307,-9.020900,-9.775432,8.017739,6.314133,-5.767225,-6.294215,-0.376678,-1.748752,-0.321332,-4.762270,4.437601,5.395373,-5.240934,8.882433,-8.589046,8.093091,-9.697772,-3.325638,1.556068,-0.711402,-8.437404,4.623296,-9.905476,-7.782391,7.449043,-8.528346,-6.116218,-8.509391,9.412214,-3.294727,6.579970,-9.637710,-2.165321,7.272282,-3.882923,4.959095,-2.342112,9.532500,-6.016928,-6.003699,4.299250,-8.660837,-3.568474,-1.126978,-8.159124,3.608763,2.028460,7.025325,5.838097,3.907882,0.940220,-0.744431,2.965619,-6.409200,-1.675929,5.678324,3.248393,9.478927,7.991768,3.275683,4.951562,8.136163,-4.649980,-8.588430,3.801321,-9.192563,-6.958872,-1.984477,-3.147887,5.373114,7.293303,-1.756427,-3.029515,9.590047,-9.054978,3.672496,6.890425,-6.945007,8.957451,3.504046,-1.271046,4.537843,8.569506,7.398066,1.599758,-0.627889,8.546681,9.476025,-0.713874,0.312189,-3.950221,-1.562034,4.452818,2.016901,2.182798,1.193779,-6.145559,-5.103922,4.007541,-0.777608,-1.782312,8.263850,2.121524,6.038922,1.208226,-7.464069,9.135337,-8.981454,6.976050,-3.272243,-4.265771,9.137785,-4.002920,-4.047123,4.587357,-4.101679,3.156307,3.412671,3.159458,1.583826,-2.686727,-2.686965,-0.026886,-1.297777,-4.763195,0.215046,6.070433,-5.533684,-1.606455,5.455847,6.799774,-1.146293,1.002430,3.443258,-4.220493,-5.816995,1.522864,5.306760,3.419773,5.040981,-6.528320,-2.368172,5.253545,4.413066,-7.620298,1.803469,5.494729,-0.174205,-8.321619,0.842746,-5.492317,1.613153,-0.190139,-6.942984,-5.750825,7.812068,-8.997547,-7.420765,-3.848219,2.179929,-9.249085,-6.939228,-0.520098,2.809312,9.940485,-7.689932,-3.621773,0.611384,-5.074007,-1.528772,2.197053,2.221374,3.060049,-2.261409,1.766676,-6.696149,-1.098861,6.148512,-4.857787,6.908372,2.110567,9.244976,0.479918,-3.724652,-5.410679,3.793223,1.425305,6.899493,-8.843011,-8.229954,-3.697661,-8.544432,-1.593865,1.703402,-7.450431,-2.998362,-7.611832,6.681116,-1.957795,2.431176,-6.015441,-2.123904,1.154561,-7.818575,3.279443,-0.727359,-0.347345,3.106824,-1.336122,3.690908,9.394979,8.201517,1.876072,-3.438503,-7.931070,0.765571,-7.857063,-8.769243,7.336515,7.607137,-1.680932,-0.149201,-6.979183,4.090973,5.874754,1.069887,-5.263062,-2.255862,9.206846,9.034716,6.655000,-8.149869,-5.460039,1.581584,-2.026250,4.623583,-9.305989,2.671828,6.229702,-8.641757,0.977131,3.429878,-7.506643,1.536899,-6.981998,1.479908,8.201030,9.592819,3.209658,-0.863976,-1.464139,-7.737617,3.380008,4.511407,-7.964481,7.053337,-6.088148,5.385985,4.080646,-6.913073,6.859501,5.357086,-0.701619,-6.142954,3.158989,2.746741,-2.819510,8.716073,6.275935,-3.640403,-0.714100,0.950299,1.599557,8.481845,6.561436,-2.665941,0.901101,-1.119006,3.037548,2.849028,0.769815,-6.423329,-3.157904,9.582554,-3.987546,4.360134,-7.129328,5.370951,3.264449,-7.361250,4.935511,0.431351,-2.847325,-9.556132,6.123274,-1.450961,-4.513867,-4.374634,-6.668231,-1.435364,-7.106357,4.909664,-2.373292,-0.465171,1.689172,-5.837279,7.338819,-7.802266,6.976332,4.518009,-7.151562,0.458128,-4.112366,-5.475697,-4.962648,-1.085205,-2.257652,0.910722,-1.585639,9.243690,-3.384234,-3.891894,9.078315,6.015814,5.290151,5.931554,-5.460826,-2.165313,8.462105,-8.930543,5.779662,-5.017069,-0.371577,-0.039924,5.525564,3.022107,-3.143544,7.770944,-4.107013,-2.098105,-3.714259,8.841714,3.151827,4.454439,-0.340673,-7.807628,-8.519843,-5.283043,-9.044353,-8.569469,-7.054850,4.548679,6.564845,-9.337984,5.772136,-8.607286,4.440527,-6.985000,1.090924,0.580071,5.426269,-9.827930,-1.282264,7.711547,8.121542,-5.005165,7.361403,-3.423721,-8.663493,-0.720481,-4.034607,2.648836,-6.003177,-0.727519,-4.426743,-8.663513,8.772774,0.138674,2.755064,-8.516219,-4.216901,-4.913286,-0.591045], dtype = "float64")#candidate|8588|(1560,)|const|float64
bop_8589 = relay.floor_divide(const_8578.astype('float64'), relay.reshape(const_8588.astype('float64'), relay.shape_of(const_8578))) # shape=(1560,)
output = relay.Tuple([call_8563,call_8571,call_8577,bop_8589,])
output2 = relay.Tuple([call_8564,call_8572,call_8579,bop_8589,])
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

==========mod==========
#[version = "0.0.5"]
def @func_4638() -> (Tensor[(2, 12, 9), bool], Tensor[(216), float32], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64]) {
  %0 = @func_2776() /* ty=(Tensor[(2, 12, 9), bool],) */;
  %1 = @func_342() /* ty=(Tensor[(3, 2, 14), uint32], Tensor[(2, 12, 9), bool], Tensor[(216), float32], Tensor[(2, 12, 9), float32]) */;
  %2 = @func_595() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool]) */;
  %3 = @func_1454() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %4 = %0.0;
  %5 = %1.2;
  %6 = %2.1;
  %7 = %3.0;
  (%4, %5, %6, %7)
}

def @func_1993() -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64]) {
  %8 = @func_1145() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %9 = @func_1888() /* ty=(Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), int64]) */;
  %10 = %8.0;
  %11 = cast(%10, dtype="float32") /* ty=Tensor[(2, 12, 9), float32] */;
  %12 = cast(%10, dtype="float32") /* ty=Tensor[(2, 12, 9), float32] */;
  %13 = reshape(%11, newshape=[2, 12, 9]) /* ty=Tensor[(2, 12, 9), float32] */;
  %14 = reshape(%12, newshape=[2, 12, 9]) /* ty=Tensor[(2, 12, 9), float32] */;
  %15 = @func_179(%13, %14) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float32]) */;
  %16 = %9.1;
  %17 = %15.1;
  (%10, %16, %17)
}

def @func_7645(%var_7588: float32, %var_7589: Tensor[(7, 13, 11), float32]) -> (Tensor[(7, 13, 11), float32], Tensor[(2, 12, 9), float64], Tensor[(10, 11, 6), float64], Tensor[(660), float64], Tensor[(2, 12, 9), float64]) {
  %18 = cast(%var_7588, dtype="float32") /* ty=float32 */;
  %19 = cast(%var_7589, dtype="float32") /* ty=Tensor[(7, 13, 11), float32] */;
  %20 = cast(meta[relay.Constant][0] /* ty=Tensor[(660), float64] */, dtype="float64") /* ty=Tensor[(660), float64] */;
  %21 = reshape(%20, newshape=[10, 11, 6]) /* ty=Tensor[(10, 11, 6), float64] */;
  %22 = @func_7530(%21) /* ty=(Tensor[(10, 11, 6), float64],) */;
  %23 = @func_3252() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %24 = divide(%18, %19) /* ty=Tensor[(7, 13, 11), float32] */;
  %25 = @func_2273() /* ty=Tensor[(2, 12, 9), float64] */;
  %26 = %22.0;
  %27 = %23.0;
  (%24, %25, %26, meta[relay.Constant][0] /* ty=Tensor[(660), float64] */, %27)
}

def @func_10450() -> Tensor[(2, 12, 9), bool] {
  %28 = @func_595() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool]) */;
  %28.1
}

def @func_11333(%var_11313: Tensor[(832), float64]) -> Tensor[(832), float32] {
  %29 = @func_9270() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(8, 8, 13), bool], Tensor[(832), float64], Tensor[(2, 12, 9), float64], Tensor[(168), float32], Tensor[(2, 12, 9), bool]) */;
  %30 = %29.2;
  %31 = cast(%var_11313, dtype="float32") /* ty=Tensor[(832), float32] */;
  %32 = shape_of(%30, dtype="int32") /* ty=Tensor[(1), int32] */;
  %33 = cast(%30, dtype="float32") /* ty=Tensor[(832), float32] */;
  %34 = dyn.reshape(%31, %32, newshape=[]) /* ty=Tensor[(?), float32] */;
  divide(%33, %34) /* ty=Tensor[(832), float32] */
}

def @func_3055(%var_3028: Tensor[(8, 8, 13), bool], %var_3029: Tensor[(8, 8, 13), bool]) -> (Tensor[(8, 8, 13), bool], Tensor[(2, 12, 9), bool]) {
  %35 = cast(%var_3029, dtype="bool") /* ty=Tensor[(8, 8, 13), bool] */;
  %36 = shape_of(%var_3028, dtype="int32") /* ty=Tensor[(3), int32] */;
  %37 = cast(%var_3028, dtype="bool") /* ty=Tensor[(8, 8, 13), bool] */;
  %38 = dyn.reshape(%35, %36, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %39 = @func_365() /* ty=(Tensor[(2, 12, 9), bool],) */;
  %40 = logical_or(%37, %38) /* ty=Tensor[(8, 8, 13), bool] */;
  %41 = %39.0;
  (%40, %41)
}

def @func_7251() -> (Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) {
  %42 = @func_5714() /* ty=(Tensor[(2, 12, 9), bool],) */;
  %43 = @func_5516() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %44 = %42.0;
  %45 = %43.0;
  %46 = @func_4307() /* ty=Tensor[(2, 12, 9), float64] */;
  (%44, %45, %46)
}

def @func_8353() -> (Tensor[(2, 12, 9), bool], Tensor[(8, 8, 13), uint32]) {
  %47 = @func_5714() /* ty=(Tensor[(2, 12, 9), bool],) */;
  %48 = cast(meta[relay.Constant][1] /* ty=Tensor[(832), float64] */, dtype="float64") /* ty=Tensor[(832), float64] */;
  %49 = reshape(%48, newshape=[104, 8]) /* ty=Tensor[(104, 8), float64] */;
  %50 = @func_5442(%49) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(8, 8, 13), bool], Tensor[(104, 8), float64], Tensor[(2, 12, 9), float32]) */;
  %51 = %50.1;
  %52 = cast(meta[relay.Constant][1] /* ty=Tensor[(832), float64] */, dtype="uint32") /* ty=Tensor[(832), uint32] */;
  %53 = shape_of(%51, dtype="int32") /* ty=Tensor[(3), int32] */;
  %54 = cast(%51, dtype="uint32") /* ty=Tensor[(8, 8, 13), uint32] */;
  %55 = dyn.reshape(%52, %53, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %56 = %47.0;
  %57 = bitwise_or(%54, %55) /* ty=Tensor[(8, 8, 13), uint32] */;
  (%56, %57)
}

def @func_10648() -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) {
  %58 = @func_2863() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64]) */;
  %59 = @func_3524() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float32], Tensor[(8, 14, 9), bool], uint8, Tensor[(1008), uint8]) */;
  %60 = %58.2;
  %61 = @func_7371() /* ty=Tensor[(2, 12, 9), float64] */;
  %62 = %59.0;
  (%60, %61, %62)
}

def @func_2776() -> (Tensor[(2, 12, 9), bool],) {
  %63 = @func_1913() /* ty=Tensor[(2, 12, 9), bool] */;
  (%63,)
}

def @func_710(%var_681: Tensor[(11, 2, 16), int8], %var_682: Tensor[(11, 2, 16), int8], %var_686: Tensor[(11, 2, 16), int8]) -> (Tensor[(11, 2, 16), float32], Tensor[(11, 2, 16), int8]) {
  %64 = cast(%var_686, dtype="float32") /* ty=Tensor[(11, 2, 16), float32] */;
  %65 = shape_of(%var_681, dtype="int32") /* ty=Tensor[(3), int32] */;
  %66 = cast(%var_681, dtype="float32") /* ty=Tensor[(11, 2, 16), float32] */;
  %67 = dyn.reshape(%64, %65, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %68 = cast(%var_682, dtype="bool") /* ty=Tensor[(11, 2, 16), bool] */;
  %69 = shape_of(%var_681, dtype="int32") /* ty=Tensor[(3), int32] */;
  %70 = cast(%var_681, dtype="bool") /* ty=Tensor[(11, 2, 16), bool] */;
  %71 = dyn.reshape(%68, %69, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %72 = greater(%70, %71) /* ty=Tensor[(11, 2, 16), bool] */;
  %73 = cast(%var_682, dtype="float64") /* ty=Tensor[(11, 2, 16), float64] */;
  %74 = shape_of(%var_681, dtype="int32") /* ty=Tensor[(3), int32] */;
  %75 = cast(%var_681, dtype="float64") /* ty=Tensor[(11, 2, 16), float64] */;
  %76 = dyn.reshape(%73, %74, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %77 = divide(%75, %76) /* ty=Tensor[(11, 2, 16), float64] */;
  %78 = cast(%77, dtype="int8") /* ty=Tensor[(11, 2, 16), int8] */;
  %79 = shape_of(%72, dtype="int32") /* ty=Tensor[(3), int32] */;
  %80 = cast(%72, dtype="int8") /* ty=Tensor[(11, 2, 16), int8] */;
  %81 = dyn.reshape(%78, %79, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %82 = power(%66, %67) /* ty=Tensor[(11, 2, 16), float32] */;
  %83 = bitwise_xor(%80, %81) /* ty=Tensor[(11, 2, 16), int8] */;
  (%82, %83)
}

def @func_3219() -> (Tensor[(2, 12, 9), bool],) {
  %84 = @func_1029() /* ty=Tensor[(2, 12, 9), bool] */;
  (%84,)
}

def @func_5747(%var_5740: Tensor[(2, 12, 9), float64]) -> (Tensor[(2, 12, 9), bool],) {
  %85 = @func_4222() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %86 = %85.0;
  %87 = cast(%var_5740, dtype="bool") /* ty=Tensor[(2, 12, 9), bool] */;
  %88 = shape_of(%86, dtype="int32") /* ty=Tensor[(3), int32] */;
  %89 = cast(%86, dtype="bool") /* ty=Tensor[(2, 12, 9), bool] */;
  %90 = dyn.reshape(%87, %88, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %91 = greater_equal(%89, %90) /* ty=Tensor[(2, 12, 9), bool] */;
  (%91,)
}

def @func_4750(%var_4705: Tensor[(352), int8]) -> (Tensor[(2, 12, 9), float32], Tensor[(352), int8], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), bool], Tensor[(1008), uint8], Tensor[(2, 12, 9), float64], Tensor[(11, 11, 5), uint8]) {
  %92 = cast(%var_4705, dtype="int8") /* ty=Tensor[(352), int8] */;
  %93 = reshape(%92, newshape=[352]) /* ty=Tensor[(352), int8] */;
  %94 = @func_3863(%93) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32], Tensor[(352), int8]) */;
  %95 = @func_393() /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32]) */;
  %96 = cast(meta[relay.Constant][2] /* ty=Tensor[(1008), uint8] */, dtype="uint8") /* ty=Tensor[(1008), uint8] */;
  %97 = reshape(%96, newshape=[1008]) /* ty=Tensor[(1008), uint8] */;
  %98 = @func_901(%97) /* ty=(Tensor[(2, 12, 9), float64], Tensor[(216), float32], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), int16], Tensor[(8, 14, 9), bool], uint8, Tensor[(1008), uint8]) */;
  %99 = cast(meta[relay.Constant][3] /* ty=Tensor[(1, 11, 5), int32] */, dtype="int32") /* ty=Tensor[(1, 11, 5), int32] */;
  %100 = cast(meta[relay.Constant][4] /* ty=Tensor[(11, 11, 5), int32] */, dtype="int32") /* ty=Tensor[(11, 11, 5), int32] */;
  %101 = right_shift(%99, %100) /* ty=Tensor[(11, 11, 5), int32] */;
  %102 = cast(meta[relay.Constant][3] /* ty=Tensor[(1, 11, 5), int32] */, dtype="uint8") /* ty=Tensor[(1, 11, 5), uint8] */;
  %103 = cast(%101, dtype="uint8") /* ty=Tensor[(11, 11, 5), uint8] */;
  %104 = %94.1;
  %105 = %95.0;
  %106 = %98.2;
  %107 = @func_3961() /* ty=Tensor[(2, 12, 9), float64] */;
  %108 = logical_xor(%102, %103) /* ty=Tensor[(11, 11, 5), uint8] */;
  (%104, %var_4705, %105, %106, meta[relay.Constant][2] /* ty=Tensor[(1008), uint8] */, %107, %108)
}

def @func_3863(%var_3853: Tensor[(352), int8]) -> (Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32], Tensor[(352), int8]) {
  %109 = @func_2207() /* ty=(Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */;
  %110 = cast(%var_3853, dtype="int8") /* ty=Tensor[(352), int8] */;
  %111 = reshape(%110, newshape=[352]) /* ty=Tensor[(352), int8] */;
  %112 = @func_1259(%111) /* ty=(Tensor[(2, 12, 9), float32], Tensor[(11, 2, 16), float32], Tensor[(352), float32]) */;
  %113 = %109.1;
  %114 = %112.0;
  (%113, %114, %var_3853)
}

def @func_952() -> (Tensor[(2, 12, 9), float64],) {
  %115 = @func_595() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool]) */;
  %116 = %115.0;
  (%116,)
}

def @func_4222() -> (Tensor[(2, 12, 9), float64],) {
  %117 = @func_1581() /* ty=Tensor[(2, 12, 9), float64] */;
  (%117,)
}

def @func_7479(%var_7464: Tensor[(1, 168), float32]) -> (Tensor[(2, 12, 9), bool], Tensor[(7, 8, 3), float32], Tensor[(1, 168), float32], Tensor[(2, 12, 9), float64]) {
  %118 = @func_2467() /* ty=(Tensor[(2, 12, 9), bool],) */;
  %119 = cast(%var_7464, dtype="float32") /* ty=Tensor[(1, 168), float32] */;
  %120 = reshape(%119, newshape=[7, 8, 3]) /* ty=Tensor[(7, 8, 3), float32] */;
  %121 = @func_1337() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %122 = %118.0;
  %123 = @func_4767(%120) /* ty=Tensor[(7, 8, 3), float32] */;
  %124 = %121.0;
  (%122, %123, %var_7464, %124)
}

def @func_8791(%var_8778: int32, %var_8779: Tensor[(7, 7, 8), int32]) -> Tensor[(7, 7, 8), int32] {
  %125 = cast(%var_8778, dtype="int32") /* ty=int32 */;
  %126 = cast(%var_8779, dtype="int32") /* ty=Tensor[(7, 7, 8), int32] */;
  multiply(%125, %126) /* ty=Tensor[(7, 7, 8), int32] */
}

def @func_6806() -> (Tensor[(2, 12, 9), float64], Tensor[(12, 13, 9), int8], Tensor[(1404), int8], Tensor[(2, 12, 9), bool]) {
  %127 = cast(meta[relay.Constant][5] /* ty=Tensor[(1404), int8] */, dtype="int8") /* ty=Tensor[(1404), int8] */;
  %128 = reshape(%127, newshape=[12, 13, 9]) /* ty=Tensor[(12, 13, 9), int8] */;
  %129 = @func_6135(%128) /* ty=(Tensor[(12, 13, 9), int8],) */;
  %130 = @func_1064() /* ty=Tensor[(2, 12, 9), float64] */;
  %131 = %129.0;
  %132 = @func_623() /* ty=Tensor[(2, 12, 9), bool] */;
  (%130, %131, meta[relay.Constant][5] /* ty=Tensor[(1404), int8] */, %132)
}

def @func_1322() -> (Tensor[(2, 12, 9), float64],) {
  %133 = @func_952() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %134 = %133.0;
  (%134,)
}

def @func_2467() -> (Tensor[(2, 12, 9), bool],) {
  %135 = @func_2207() /* ty=(Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */;
  %136 = %135.1;
  (%136,)
}

def @func_7174(%var_7142: Tensor[(1, 11, 16), float64]) -> (Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), bool], Tensor[(832), bool], Tensor[(1, 11, 16), float64]) {
  %137 = cast(meta[relay.Constant][6] /* ty=Tensor[(832), bool] */, dtype="bool") /* ty=Tensor[(832), bool] */;
  %138 = cast(meta[relay.Constant][6] /* ty=Tensor[(832), bool] */, dtype="bool") /* ty=Tensor[(832), bool] */;
  %139 = reshape(%137, newshape=[8, 8, 13]) /* ty=Tensor[(8, 8, 13), bool] */;
  %140 = reshape(%138, newshape=[8, 8, 13]) /* ty=Tensor[(8, 8, 13), bool] */;
  %141 = @func_3055(%139, %140) /* ty=(Tensor[(8, 8, 13), bool], Tensor[(2, 12, 9), bool]) */;
  %142 = cast(%var_7142, dtype="float64") /* ty=Tensor[(1, 11, 16), float64] */;
  %143 = sigmoid(%142) /* ty=Tensor[(1, 11, 16), float64] */;
  %144 = cast(%143, dtype="float64") /* ty=Tensor[(1, 11, 16), float64] */;
  %145 = sqrt(%144) /* ty=Tensor[(1, 11, 16), float64] */;
  %146 = cast(%145, dtype="float64") /* ty=Tensor[(1, 11, 16), float64] */;
  %147 = @func_1029() /* ty=Tensor[(2, 12, 9), bool] */;
  %148 = %141.1;
  %149 = log10(%146) /* ty=Tensor[(1, 11, 16), float64] */;
  (%147, %148, meta[relay.Constant][6] /* ty=Tensor[(832), bool] */, %149)
}

def @func_7515() -> (Tensor[(2, 12, 9), float64], Tensor[(13, 6, 12), bool], Tensor[(936), uint32], Tensor[(2, 12, 9), float32]) {
  %150 = @func_2455() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */;
  %151 = cast(meta[relay.Constant][7] /* ty=Tensor[(936), uint32] */, dtype="uint32") /* ty=Tensor[(936), uint32] */;
  %152 = cast(meta[relay.Constant][7] /* ty=Tensor[(936), uint32] */, dtype="uint32") /* ty=Tensor[(936), uint32] */;
  %153 = reshape(%151, newshape=[13, 6, 12]) /* ty=Tensor[(13, 6, 12), uint32] */;
  %154 = reshape(%152, newshape=[13, 6, 12]) /* ty=Tensor[(13, 6, 12), uint32] */;
  %155 = @func_5840(%153, %154) /* ty=(Tensor[(13, 6, 12), bool], Tensor[(13, 6, 12), uint16]) */;
  %156 = @func_1888() /* ty=(Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), int64]) */;
  %157 = %150.0;
  %158 = %155.0;
  %159 = %156.0;
  (%157, %158, meta[relay.Constant][7] /* ty=Tensor[(936), uint32] */, %159)
}

def @func_3953() -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) {
  %160 = @func_952() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %161 = @func_952() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %162 = %160.0;
  %163 = %161.0;
  (%162, %163)
}

def @func_11251() -> (Tensor[(2, 12, 9), float32],) {
  %164 = @func_2207() /* ty=(Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */;
  %165 = %164.0;
  (%165,)
}

def @func_1454() -> (Tensor[(2, 12, 9), float64],) {
  %166 = @func_542() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */;
  %167 = %166.0;
  (%167,)
}

def @func_2455() -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) {
  %168 = @func_595() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool]) */;
  %169 = @func_542() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */;
  %170 = %168.0;
  %171 = %169.0;
  (%170, %171)
}

def @func_3420() -> (Tensor[(2, 12, 9), float64],) {
  %172 = @func_1145() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %173 = %172.0;
  (%173,)
}

def @func_11026(%var_10963: Tensor[(5, 132), float64], %var_10981: Tensor[(936), uint32]) -> (Tensor[(8, 8, 13), bool], Tensor[(2, 12, 9), float64], Tensor[(936), uint32], Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), float64], Tensor[(5, 132), int32], Tensor[(13, 6, 12), float32]) {
  %174 = @func_8594() /* ty=(Tensor[(8, 8, 13), bool],) */;
  %175 = cast(%var_10963, dtype="float64") /* ty=Tensor[(5, 132), float64] */;
  %176 = reshape(%175, newshape=[660, 1]) /* ty=Tensor[(660, 1), float64] */;
  %177 = @func_9585(%176) /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(10, 11, 6), float64], Tensor[(660, 1), float64], Tensor[(2, 12, 9), bool]) */;
  %178 = @func_7976() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(9, 15, 6), bool], Tensor[(810), float32], Tensor[(2, 12, 9), float64]) */;
  %179 = cast(%var_10963, dtype="float32") /* ty=Tensor[(5, 132), float32] */;
  %180 = cos(%179) /* ty=Tensor[(5, 132), float32] */;
  %181 = cast(%var_10963, dtype="bool") /* ty=Tensor[(5, 132), bool] */;
  %182 = shape_of(%180, dtype="int32") /* ty=Tensor[(2), int32] */;
  %183 = cast(%180, dtype="bool") /* ty=Tensor[(5, 132), bool] */;
  %184 = dyn.reshape(%181, %182, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %185 = greater(%183, %184) /* ty=Tensor[(5, 132), bool] */;
  %186 = cast(%185, dtype="int32") /* ty=Tensor[(5, 132), int32] */;
  %187 = shape_of(%180, dtype="int32") /* ty=Tensor[(2), int32] */;
  %188 = cast(%180, dtype="int32") /* ty=Tensor[(5, 132), int32] */;
  %189 = dyn.reshape(%186, %187, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %190 = cast(%var_10981, dtype="uint32") /* ty=Tensor[(936), uint32] */;
  %191 = reshape(%190, newshape=[936]) /* ty=Tensor[(936), uint32] */;
  %192 = @func_6555(%191) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(13, 6, 12), bool], Tensor[(936), uint32]) */;
  %193 = %192.1;
  %194 = cast(%193, dtype="float32") /* ty=Tensor[(13, 6, 12), float32] */;
  %195 = %174.0;
  %196 = %177.0;
  %197 = @func_9601() /* ty=Tensor[(2, 12, 9), float32] */;
  %198 = %178.0;
  %199 = bitwise_or(%188, %189) /* ty=Tensor[(5, 132), int32] */;
  %200 = cos(%194) /* ty=Tensor[(13, 6, 12), float32] */;
  (%195, %196, %var_10981, %197, %198, %199, %200)
}

def @func_6350() -> Tensor[(2, 12, 9), float32] {
  %201 = @func_3573() /* ty=(Tensor[(2, 12, 9), float32],) */;
  %202 = %201.0;
  %203 = cast(%202, dtype="float32") /* ty=Tensor[(2, 12, 9), float32] */;
  exp(%203) /* ty=Tensor[(2, 12, 9), float32] */
}

def @func_11435(%var_11419: Tensor[(12, 5, 16), float32], %var_11423: Tensor[(126), float64], %var_11433: Tensor[(660), float64]) -> (Tensor[(12, 5, 16), float32], Tensor[(1, 9, 14), float64], Tensor[(126), float64], Tensor[(12, 5, 16), float64], Tensor[(10, 11, 6), float64], Tensor[(660), float64]) {
  %204 = cast(%var_11419, dtype="float32") /* ty=Tensor[(12, 5, 16), float32] */;
  %205 = cast(%var_11423, dtype="float64") /* ty=Tensor[(126), float64] */;
  %206 = reshape(%205, newshape=[1, 9, 14]) /* ty=Tensor[(1, 9, 14), float64] */;
  %207 = cast(%var_11419, dtype="float64") /* ty=Tensor[(12, 5, 16), float64] */;
  %208 = cast(%var_11433, dtype="float64") /* ty=Tensor[(660), float64] */;
  %209 = reshape(%208, newshape=[10, 11, 6]) /* ty=Tensor[(10, 11, 6), float64] */;
  %210 = @func_7530(%209) /* ty=(Tensor[(10, 11, 6), float64],) */;
  %211 = sin(%204) /* ty=Tensor[(12, 5, 16), float32] */;
  %212 = @func_10176(%206) /* ty=Tensor[(1, 9, 14), float64] */;
  %213 = sqrt(%207) /* ty=Tensor[(12, 5, 16), float64] */;
  %214 = %210.0;
  (%211, %212, %var_11423, %213, %214, %var_11433)
}

def @func_9192(%var_9162: Tensor[(9, 3, 16), float32], %var_9174: Tensor[(88), float32], %var_9177: Tensor[(176), float64]) -> (Tensor[(9, 3, 16), float32], Tensor[(2, 12, 9), float32], Tensor[(88), float32], Tensor[(264), bool], Tensor[(308, 2), float32], Tensor[(176), float64], Tensor[(2, 12, 9), bool]) {
  %215 = cast(%var_9162, dtype="float32") /* ty=Tensor[(9, 3, 16), float32] */;
  %216 = cast(%var_9174, dtype="float32") /* ty=Tensor[(88), float32] */;
  %217 = cast(meta[relay.Constant][8] /* ty=Tensor[(264), bool] */, dtype="bool") /* ty=Tensor[(264), bool] */;
  %218 = cast(meta[relay.Constant][9] /* ty=Tensor[(308, 2), float32] */, dtype="float32") /* ty=Tensor[(308, 2), float32] */;
  %219 = cast(%var_9177, dtype="float64") /* ty=Tensor[(176), float64] */;
  %220 = reshape(%216, newshape=[8, 1, 11]) /* ty=Tensor[(8, 1, 11), float32] */;
  %221 = reshape(%217, newshape=[8, 3, 11]) /* ty=Tensor[(8, 3, 11), bool] */;
  %222 = reshape(%218, newshape=[8, 7, 11]) /* ty=Tensor[(8, 7, 11), float32] */;
  %223 = reshape(%219, newshape=[176]) /* ty=Tensor[(176), float64] */;
  %224 = @func_9144(%220, %221, %222, %223) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64], Tensor[(8, 3, 11), float32], Tensor[(2, 12, 9), float64], Tensor[(8, 7, 11), float32], Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), bool], Tensor[(176), float64], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float32]) */;
  %225 = erf(%215) /* ty=Tensor[(9, 3, 16), float32] */;
  %226 = %224.5;
  %227 = @func_5292() /* ty=Tensor[(2, 12, 9), bool] */;
  (%225, %226, %var_9174, meta[relay.Constant][8] /* ty=Tensor[(264), bool] */, meta[relay.Constant][9] /* ty=Tensor[(308, 2), float32] */, %var_9177, %227)
}

def @main(%var_11505: Tensor[(1, 3, 7), float32]) -> (Tensor[(?, 3, 7), bool], Tensor[(1, 3, 7), float64]) {
  %228 = cast(%var_11505, dtype="float32") /* ty=Tensor[(1, 3, 7), float32] */;
  %229 = asin(%228) /* ty=Tensor[(1, 3, 7), float32] */;
  %230 = cast(%var_11505, dtype="bool") /* ty=Tensor[(1, 3, 7), bool] */;
  %231 = shape_of(%229, dtype="int32") /* ty=Tensor[(3), int32] */;
  %232 = cast(%229, dtype="bool") /* ty=Tensor[(1, 3, 7), bool] */;
  %233 = dyn.reshape(%230, %231, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %234 = cast(%var_11505, dtype="float64") /* ty=Tensor[(1, 3, 7), float64] */;
  %235 = less_equal(%232, %233) /* ty=Tensor[(?, 3, 7), bool] */;
  %236 = cos(%234) /* ty=Tensor[(1, 3, 7), float64] */;
  (%235, %236)
}

def @func_11125() -> Tensor[(2, 12, 9), float64] {
  %237 = @func_8035() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %237.0
}

def @func_11410() -> (Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), float64]) {
  %238 = @func_9851() /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32]) */;
  %239 = %238.1;
  %240 = @func_2273() /* ty=Tensor[(2, 12, 9), float64] */;
  (%239, %240)
}

def @func_7976() -> (Tensor[(2, 12, 9), float64], Tensor[(9, 15, 6), bool], Tensor[(810), float32], Tensor[(2, 12, 9), float64]) {
  %241 = @func_3953() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */;
  %242 = cast(meta[relay.Constant][10] /* ty=Tensor[(810), float32] */, dtype="float32") /* ty=Tensor[(810), float32] */;
  %243 = reshape(%242, newshape=[9, 15, 6]) /* ty=Tensor[(9, 15, 6), float32] */;
  %244 = @func_2665(%243) /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(9, 15, 6), uint8], Tensor[(9, 15, 6), bool]) */;
  %245 = @func_4240() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %246 = %241.1;
  %247 = %244.3;
  %248 = %245.0;
  (%246, %247, meta[relay.Constant][10] /* ty=Tensor[(810), float32] */, %248)
}

def @func_5292() -> Tensor[(2, 12, 9), bool] {
  %249 = @func_1502() /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool]) */;
  %249.2
}

def @func_4541(%var_4488: Tensor[(2, 12, 9), float64], %var_4501: Tensor[(208, 4), float64]) -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(208, 4), float64], Tensor[(2, 416), float64]) {
  %250 = @func_1337() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %251 = %250.0;
  %252 = cast(%var_4488, dtype="float64") /* ty=Tensor[(2, 12, 9), float64] */;
  %253 = shape_of(%251, dtype="int32") /* ty=Tensor[(3), int32] */;
  %254 = cast(%251, dtype="float64") /* ty=Tensor[(2, 12, 9), float64] */;
  %255 = dyn.reshape(%252, %253, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %256 = @func_1454() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %257 = cast(%var_4501, dtype="float64") /* ty=Tensor[(208, 4), float64] */;
  %258 = reshape(%257, newshape=[416, 2]) /* ty=Tensor[(416, 2), float64] */;
  %259 = @func_4132(%258) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(8, 8, 13), bool], Tensor[(416, 2), float64]) */;
  %260 = @func_4448() /* ty=(Tensor[(8, 14, 9), bool], Tensor[(8, 8, 13), bool], Tensor[(2, 416), float64]) */;
  %261 = floor_divide(%254, %255) /* ty=Tensor[(2, 12, 9), float64] */;
  %262 = %256.0;
  %263 = %259.0;
  %264 = %260.2;
  (%261, %262, %263, %var_4501, %264)
}

def @func_4815(%var_4808: Tensor[(7, 13, 6), float64], %var_4809: Tensor[(7, 13, 6), float64]) -> (Tensor[(7, 13, 6), float64], Tensor[(2, 12, 9), float64]) {
  %265 = cast(%var_4809, dtype="float64") /* ty=Tensor[(7, 13, 6), float64] */;
  %266 = shape_of(%var_4808, dtype="int32") /* ty=Tensor[(3), int32] */;
  %267 = cast(%var_4808, dtype="float64") /* ty=Tensor[(7, 13, 6), float64] */;
  %268 = dyn.reshape(%265, %266, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %269 = power(%267, %268) /* ty=Tensor[(7, 13, 6), float64] */;
  %270 = @func_4307() /* ty=Tensor[(2, 12, 9), float64] */;
  (%269, %270)
}

def @func_4767(%var_4760: Tensor[(7, 8, 3), float32]) -> Tensor[(7, 8, 3), float32] {
  %271 = cast(%var_4760, dtype="float32") /* ty=Tensor[(7, 8, 3), float32] */;
  log(%271) /* ty=Tensor[(7, 8, 3), float32] */
}

def @func_5714() -> (Tensor[(2, 12, 9), bool],) {
  %272 = @func_623() /* ty=Tensor[(2, 12, 9), bool] */;
  (%272,)
}

def @func_1618() -> Tensor[(2, 12, 9), float64] {
  %273 = @func_762() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */;
  %273.1
}

def @func_2273() -> Tensor[(2, 12, 9), float64] {
  %274 = @func_2043() /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32]) */;
  %275 = %274.0;
  %276 = cast(%275, dtype="float64") /* ty=Tensor[(2, 12, 9), float64] */;
  sigmoid(%276) /* ty=Tensor[(2, 12, 9), float64] */
}

def @func_7850(%var_7825: Tensor[(15), float64]) -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(448), float32], Tensor[(15), float64], Tensor[(352), int8], Tensor[(6, 13, 13), bool], Tensor[(1014), int64]) {
  %277 = cast(%var_7825, dtype="float64") /* ty=Tensor[(15), float64] */;
  %278 = cast(meta[relay.Constant][11] /* ty=Tensor[(352), int8] */, dtype="int8") /* ty=Tensor[(352), int8] */;
  %279 = reshape(%277, newshape=[15, 1, 1]) /* ty=Tensor[(15, 1, 1), float64] */;
  %280 = reshape(%278, newshape=[8, 44]) /* ty=Tensor[(8, 44), int8] */;
  %281 = @func_2578(%279, %280) /* ty=(Tensor[(8, 14, 4), float32], Tensor[(448), float32], Tensor[(8, 44), float64], Tensor[(15, 8, 44), uint16]) */;
  %282 = cast(meta[relay.Constant][12] /* ty=Tensor[(1014), int64] */, dtype="int64") /* ty=Tensor[(1014), int64] */;
  %283 = reshape(%282, newshape=[6, 13, 13]) /* ty=Tensor[(6, 13, 13), int64] */;
  %284 = @func_4307() /* ty=Tensor[(2, 12, 9), float64] */;
  %285 = @func_2024() /* ty=Tensor[(2, 12, 9), float64] */;
  %286 = %281.1;
  %287 = @func_6694(%283) /* ty=Tensor[(6, 13, 13), bool] */;
  (%284, %285, %286, %var_7825, meta[relay.Constant][11] /* ty=Tensor[(352), int8] */, %287, meta[relay.Constant][12] /* ty=Tensor[(1014), int64] */)
}

def @func_6135(%var_6131: Tensor[(12, 13, 9), int8]) -> (Tensor[(12, 13, 9), int8],) {
  %288 = cast(%var_6131, dtype="int8") /* ty=Tensor[(12, 13, 9), int8] */;
  %289 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(12, 13, 9), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %290 = cast(meta[relay.Constant][13] /* ty=Tensor[(12, 13, 9), int8] */, dtype="int8") /* ty=Tensor[(12, 13, 9), int8] */;
  %291 = dyn.reshape(%288, %289, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %292 = left_shift(%290, %291) /* ty=Tensor[(12, 13, 9), int8] */;
  (%292,)
}

def @func_9641() -> (Tensor[(2, 12, 9), float64],) {
  %293 = @func_4240() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %294 = %293.0;
  (%294,)
}

def @func_6679() -> Tensor[(2, 12, 9), float64] {
  %295 = @func_542() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */;
  %295.1
}

def @func_10606(%var_10587: Tensor[(6, 5, 10), uint32], %var_10588: Tensor[(6, 5, 10), uint32]) -> (Tensor[(6, 5, 10), float32], Tensor[(2, 12, 9), bool]) {
  %296 = cast(%var_10588, dtype="bool") /* ty=Tensor[(6, 5, 10), bool] */;
  %297 = shape_of(%var_10587, dtype="int32") /* ty=Tensor[(3), int32] */;
  %298 = cast(%var_10587, dtype="bool") /* ty=Tensor[(6, 5, 10), bool] */;
  %299 = dyn.reshape(%296, %297, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %300 = not_equal(%298, %299) /* ty=Tensor[(6, 5, 10), bool] */;
  %301 = cast(%300, dtype="float32") /* ty=Tensor[(6, 5, 10), float32] */;
  %302 = @func_2776() /* ty=(Tensor[(2, 12, 9), bool],) */;
  %303 = tan(%301) /* ty=Tensor[(6, 5, 10), float32] */;
  %304 = %302.0;
  (%303, %304)
}

def @func_542() -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) {
  %305 = @func_365() /* ty=(Tensor[(2, 12, 9), bool],) */;
  %306 = %305.0;
  %307 = cast(%306, dtype="float32") /* ty=Tensor[(2, 12, 9), float32] */;
  %308 = cast(%306, dtype="float32") /* ty=Tensor[(2, 12, 9), float32] */;
  %309 = reshape(%307, newshape=[2, 12, 9]) /* ty=Tensor[(2, 12, 9), float32] */;
  %310 = reshape(%308, newshape=[2, 12, 9]) /* ty=Tensor[(2, 12, 9), float32] */;
  %311 = @func_179(%309, %310) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float32]) */;
  %312 = cast(%306, dtype="float64") /* ty=Tensor[(2, 12, 9), float64] */;
  %313 = %311.1;
  %314 = log(%312) /* ty=Tensor[(2, 12, 9), float64] */;
  (%313, %314)
}

def @func_5196() -> Tensor[(2, 12, 9), float64] {
  %315 = @func_2455() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */;
  %315.0
}

def @func_8673() -> (Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32]) {
  %316 = @func_4189() /* ty=(Tensor[(2, 12, 9), bool],) */;
  %317 = @func_2925() /* ty=(Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), float64]) */;
  %318 = %316.0;
  %319 = %317.0;
  (%318, %319)
}

def @func_8142(%var_8131: Tensor[(6, 20), uint64]) -> (Tensor[(8, 14, 9), bool], Tensor[(6, 2, 10), bool], Tensor[(60), uint64], Tensor[(6, 20), uint64]) {
  %320 = @func_4448() /* ty=(Tensor[(8, 14, 9), bool], Tensor[(8, 8, 13), bool], Tensor[(2, 416), float64]) */;
  %321 = cast(meta[relay.Constant][14] /* ty=Tensor[(60), uint64] */, dtype="uint64") /* ty=Tensor[(60), uint64] */;
  %322 = cast(%var_8131, dtype="uint64") /* ty=Tensor[(6, 20), uint64] */;
  %323 = reshape(%321, newshape=[6, 1, 10]) /* ty=Tensor[(6, 1, 10), uint64] */;
  %324 = reshape(%322, newshape=[6, 2, 10]) /* ty=Tensor[(6, 2, 10), uint64] */;
  %325 = @func_4263(%323, %324) /* ty=(Tensor[(6, 2, 10), bool],) */;
  %326 = %320.0;
  %327 = %325.0;
  (%326, %327, meta[relay.Constant][14] /* ty=Tensor[(60), uint64] */, %var_8131)
}

def @func_10788() -> Tensor[(2, 12, 9), bool] {
  %328 = @func_595() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool]) */;
  %328.1
}

def @func_435(%var_423: Tensor[(2, 12, 9), bool]) -> (Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64]) {
  %329 = @func_365() /* ty=(Tensor[(2, 12, 9), bool],) */;
  %330 = @func_365() /* ty=(Tensor[(2, 12, 9), bool],) */;
  %331 = %330.0;
  %332 = cast(%var_423, dtype="float64") /* ty=Tensor[(2, 12, 9), float64] */;
  %333 = shape_of(%331, dtype="int32") /* ty=Tensor[(3), int32] */;
  %334 = cast(%331, dtype="float64") /* ty=Tensor[(2, 12, 9), float64] */;
  %335 = dyn.reshape(%332, %333, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %336 = %329.0;
  %337 = floor_mod(%334, %335) /* ty=Tensor[(2, 12, 9), float64] */;
  (%336, %337)
}

def @func_6778() -> (Tensor[(2, 12, 9), float64],) {
  %338 = @func_2925() /* ty=(Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), float64]) */;
  %339 = %338.1;
  (%339,)
}

def @func_6447() -> Tensor[(2, 12, 9), bool] {
  %340 = @func_1502() /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool]) */;
  %340.2
}

def @func_7072() -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(12, 84), float32]) {
  %341 = @func_4142() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %342 = @func_1454() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %343 = @func_5165() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(8, 14, 9), bool], Tensor[(12, 84), uint8]) */;
  %344 = %343.4;
  %345 = cast(meta[relay.Constant][15] /* ty=Tensor[(12, 84), uint8] */, dtype="float32") /* ty=Tensor[(12, 84), float32] */;
  %346 = shape_of(%344, dtype="int32") /* ty=Tensor[(2), int32] */;
  %347 = cast(%344, dtype="float32") /* ty=Tensor[(12, 84), float32] */;
  %348 = dyn.reshape(%345, %346, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %349 = %341.0;
  %350 = %342.0;
  %351 = mod(%347, %348) /* ty=Tensor[(12, 84), float32] */;
  (%349, %350, %351)
}

def @func_8104() -> Tensor[(2, 12, 9), bool] {
  %352 = @func_2863() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64]) */;
  %352.1
}

def @func_623() -> Tensor[(2, 12, 9), bool] {
  %353 = @func_365() /* ty=(Tensor[(2, 12, 9), bool],) */;
  %353.0
}

def @func_2995(%var_2987: float32, %var_2988: Tensor[(4, 15, 6), float32]) -> Tensor[(4, 15, 6), float32] {
  %354 = cast(%var_2987, dtype="float32") /* ty=float32 */;
  %355 = cast(%var_2988, dtype="float32") /* ty=Tensor[(4, 15, 6), float32] */;
  mod(%354, %355) /* ty=Tensor[(4, 15, 6), float32] */
}

def @func_4663(%var_4657: Tensor[(2, 416), bool]) -> (Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), bool], Tensor[(2, 416), bool]) {
  %356 = @func_3219() /* ty=(Tensor[(2, 12, 9), bool],) */;
  %357 = cast(%var_4657, dtype="bool") /* ty=Tensor[(2, 416), bool] */;
  %358 = cast(%var_4657, dtype="bool") /* ty=Tensor[(2, 416), bool] */;
  %359 = reshape(%357, newshape=[8, 8, 13]) /* ty=Tensor[(8, 8, 13), bool] */;
  %360 = reshape(%358, newshape=[8, 8, 13]) /* ty=Tensor[(8, 8, 13), bool] */;
  %361 = @func_3055(%359, %360) /* ty=(Tensor[(8, 8, 13), bool], Tensor[(2, 12, 9), bool]) */;
  %362 = %356.0;
  %363 = %361.1;
  (%362, %363, %var_4657)
}

def @func_4788() -> Tensor[(2, 416), float64] {
  %364 = @func_4448() /* ty=(Tensor[(8, 14, 9), bool], Tensor[(8, 8, 13), bool], Tensor[(2, 416), float64]) */;
  %364.2
}

def @func_4448() -> (Tensor[(8, 14, 9), bool], Tensor[(8, 8, 13), bool], Tensor[(2, 416), float64]) {
  %365 = @func_3524() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float32], Tensor[(8, 14, 9), bool], uint8, Tensor[(1008), uint8]) */;
  %366 = cast(meta[relay.Constant][16] /* ty=Tensor[(2, 416), float64] */, dtype="float64") /* ty=Tensor[(2, 416), float64] */;
  %367 = reshape(%366, newshape=[416, 2]) /* ty=Tensor[(416, 2), float64] */;
  %368 = @func_4132(%367) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(8, 8, 13), bool], Tensor[(416, 2), float64]) */;
  %369 = %365.2;
  %370 = %368.1;
  (%369, %370, meta[relay.Constant][16] /* ty=Tensor[(2, 416), float64] */)
}

def @func_452(%var_447: uint8, %var_448: Tensor[(8, 14, 9), uint8]) -> Tensor[(8, 14, 9), bool] {
  %371 = cast(%var_447, dtype="bool") /* ty=bool */;
  %372 = cast(%var_448, dtype="bool") /* ty=Tensor[(8, 14, 9), bool] */;
  less_equal(%371, %372) /* ty=Tensor[(8, 14, 9), bool] */
}

def @func_7371() -> Tensor[(2, 12, 9), float64] {
  %373 = @func_2925() /* ty=(Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), float64]) */;
  %373.1
}

def @func_11489(%var_11466: Tensor[(810), float32]) -> (Tensor[(1404), int8], Tensor[(9, 15, 6), bool], Tensor[(715), float64], Tensor[(810), float32], Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), float64]) {
  %374 = cast(meta[relay.Constant][17] /* ty=Tensor[(715), float64] */, dtype="float64") /* ty=Tensor[(715), float64] */;
  %375 = cast(%var_11466, dtype="float32") /* ty=Tensor[(810), float32] */;
  %376 = reshape(%374, newshape=[13, 5, 11]) /* ty=Tensor[(13, 5, 11), float64] */;
  %377 = reshape(%375, newshape=[81, 10]) /* ty=Tensor[(81, 10), float32] */;
  %378 = @func_5973(%376, %377) /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(13, 5, 11), bool], Tensor[(13, 5, 11), float32], Tensor[(2, 12, 9), bool], Tensor[(9, 15, 6), bool], Tensor[(81, 10), float32]) */;
  %379 = @func_4240() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %380 = @func_11197() /* ty=Tensor[(1404), int8] */;
  %381 = %378.5;
  %382 = @func_11090() /* ty=Tensor[(2, 12, 9), float32] */;
  %383 = %379.0;
  (%380, %381, meta[relay.Constant][17] /* ty=Tensor[(715), float64] */, %var_11466, %382, %383)
}

def @func_4189() -> (Tensor[(2, 12, 9), bool],) {
  %384 = @func_3270() /* ty=(Tensor[(2, 12, 9), bool],) */;
  %385 = %384.0;
  (%385,)
}

def @func_8594() -> (Tensor[(8, 8, 13), bool],) {
  %386 = @func_8449() /* ty=Tensor[(8, 8, 13), bool] */;
  (%386,)
}

def @func_342() -> (Tensor[(3, 2, 14), uint32], Tensor[(2, 12, 9), bool], Tensor[(216), float32], Tensor[(2, 12, 9), float32]) {
  %387 = cast(meta[relay.Constant][18] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %388 = cast(meta[relay.Constant][19] /* ty=Tensor[(3, 2, 14), uint32] */, dtype="uint32") /* ty=Tensor[(3, 2, 14), uint32] */;
  %389 = cast(meta[relay.Constant][20] /* ty=Tensor[(216), float32] */, dtype="float32") /* ty=Tensor[(216), float32] */;
  %390 = cast(meta[relay.Constant][20] /* ty=Tensor[(216), float32] */, dtype="float32") /* ty=Tensor[(216), float32] */;
  %391 = reshape(%389, newshape=[2, 12, 9]) /* ty=Tensor[(2, 12, 9), float32] */;
  %392 = reshape(%390, newshape=[2, 12, 9]) /* ty=Tensor[(2, 12, 9), float32] */;
  %393 = @func_179(%391, %392) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float32]) */;
  %394 = %393.0;
  %395 = cast(%394, dtype="float32") /* ty=Tensor[(2, 12, 9), float32] */;
  %396 = cast(meta[relay.Constant][20] /* ty=Tensor[(216), float32] */, dtype="float32") /* ty=Tensor[(216), float32] */;
  %397 = reshape(%395, newshape=[2, 12, 9]) /* ty=Tensor[(2, 12, 9), float32] */;
  %398 = reshape(%396, newshape=[2, 12, 9]) /* ty=Tensor[(2, 12, 9), float32] */;
  %399 = @func_179(%397, %398) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float32]) */;
  %400 = %399.0;
  %401 = cast(%400, dtype="float32") /* ty=Tensor[(2, 12, 9), float32] */;
  %402 = log10(%401) /* ty=Tensor[(2, 12, 9), float32] */;
  %403 = cast(%402, dtype="float32") /* ty=Tensor[(2, 12, 9), float32] */;
  %404 = logical_xor(%387, %388) /* ty=Tensor[(3, 2, 14), uint32] */;
  %405 = asin(%403) /* ty=Tensor[(2, 12, 9), float32] */;
  (%404, %394, meta[relay.Constant][20] /* ty=Tensor[(216), float32] */, %405)
}

def @func_6761(%var_6743: Tensor[(60, 2), uint64], %var_6745: Tensor[(448), float32]) -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(60, 2), uint64], Tensor[(352), int8], Tensor[(448), float32]) {
  %406 = cast(%var_6743, dtype="uint64") /* ty=Tensor[(60, 2), uint64] */;
  %407 = cast(meta[relay.Constant][21] /* ty=Tensor[(352), int8] */, dtype="int8") /* ty=Tensor[(352), int8] */;
  %408 = cast(%var_6745, dtype="float32") /* ty=Tensor[(448), float32] */;
  %409 = reshape(%406, newshape=[120]) /* ty=Tensor[(120), uint64] */;
  %410 = reshape(%407, newshape=[352]) /* ty=Tensor[(352), int8] */;
  %411 = reshape(%408, newshape=[448, 1]) /* ty=Tensor[(448, 1), float32] */;
  %412 = @func_5073(%409, %410, %411) /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(6, 2, 10), bool], Tensor[(60), uint64], Tensor[(120), uint64], Tensor[(2, 12, 9), bool], Tensor[(352), int8], Tensor[(11, 2, 16), int8], Tensor[(448, 1), float32], Tensor[(11, 2, 16), int8], Tensor[(2, 12, 9), float32]) */;
  %413 = @func_6679() /* ty=Tensor[(2, 12, 9), float64] */;
  %414 = %412.5;
  (%413, %414, %var_6743, meta[relay.Constant][21] /* ty=Tensor[(352), int8] */, %var_6745)
}

def @func_4023() -> (Tensor[(2, 12, 9), bool],) {
  %415 = @func_3219() /* ty=(Tensor[(2, 12, 9), bool],) */;
  %416 = %415.0;
  (%416,)
}

def @func_7696(%var_7675: Tensor[(8, 8, 7), float32]) -> (Tensor[(8, 8, 7), float32], Tensor[(2, 12, 9), float64]) {
  %417 = cast(%var_7675, dtype="float32") /* ty=Tensor[(8, 8, 7), float32] */;
  %418 = @func_952() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %419 = asin(%417) /* ty=Tensor[(8, 8, 7), float32] */;
  %420 = %418.0;
  (%419, %420)
}

def @func_9270() -> (Tensor[(2, 12, 9), float64], Tensor[(8, 8, 13), bool], Tensor[(832), float64], Tensor[(2, 12, 9), float64], Tensor[(168), float32], Tensor[(2, 12, 9), bool]) {
  %421 = cast(meta[relay.Constant][22] /* ty=Tensor[(832), float64] */, dtype="float64") /* ty=Tensor[(832), float64] */;
  %422 = reshape(%421, newshape=[104, 8]) /* ty=Tensor[(104, 8), float64] */;
  %423 = @func_5442(%422) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(8, 8, 13), bool], Tensor[(104, 8), float64], Tensor[(2, 12, 9), float32]) */;
  %424 = cast(meta[relay.Constant][23] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %425 = reshape(%424, newshape=[84, 2]) /* ty=Tensor[(84, 2), float32] */;
  %426 = @func_4958(%425) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64], Tensor[(7, 8, 3), uint64]) */;
  %427 = @func_2467() /* ty=(Tensor[(2, 12, 9), bool],) */;
  %428 = @func_4307() /* ty=Tensor[(2, 12, 9), float64] */;
  %429 = %423.1;
  %430 = %426.1;
  %431 = %427.0;
  (%428, %429, meta[relay.Constant][22] /* ty=Tensor[(832), float64] */, %430, meta[relay.Constant][23] /* ty=Tensor[(168), float32] */, %431)
}

def @func_6059() -> (Tensor[(2, 12, 9), bool],) {
  %432 = @func_4057() /* ty=(Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool]) */;
  %433 = %432.2;
  (%433,)
}

def @func_9915() -> Tensor[(8, 8, 13), bool] {
  %434 = @func_8594() /* ty=(Tensor[(8, 8, 13), bool],) */;
  %434.0
}

def @func_9695(%var_9684: Tensor[(352), int8]) -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(352), int8]) {
  %435 = @func_9336() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %436 = cast(%var_9684, dtype="int8") /* ty=Tensor[(352), int8] */;
  %437 = reshape(%436, newshape=[352]) /* ty=Tensor[(352), int8] */;
  %438 = @func_3863(%437) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32], Tensor[(352), int8]) */;
  %439 = %435.0;
  %440 = %438.0;
  (%439, %440, %var_9684)
}

def @func_1888() -> (Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), int64]) {
  %441 = @func_1581() /* ty=Tensor[(2, 12, 9), float64] */;
  %442 = cast(meta[relay.Constant][24] /* ty=Tensor[(2, 12, 9), float64] */, dtype="float32") /* ty=Tensor[(2, 12, 9), float32] */;
  %443 = shape_of(%441, dtype="int32") /* ty=Tensor[(3), int32] */;
  %444 = cast(%441, dtype="float32") /* ty=Tensor[(2, 12, 9), float32] */;
  %445 = dyn.reshape(%442, %443, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %446 = @func_595() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool]) */;
  %447 = @func_1374() /* ty=Tensor[(2, 12, 9), bool] */;
  %448 = cast(%447, dtype="float64") /* ty=Tensor[(2, 12, 9), float64] */;
  %449 = reshape(%448, newshape=[2, 12, 9]) /* ty=Tensor[(2, 12, 9), float64] */;
  %450 = @func_1689(%449) /* ty=(Tensor[(2, 12, 9), float32],) */;
  %451 = cast(meta[relay.Constant][25] /* ty=Tensor[(2, 12, 9), bool] */, dtype="int64") /* ty=Tensor[(2, 12, 9), int64] */;
  %452 = shape_of(%447, dtype="int32") /* ty=Tensor[(3), int32] */;
  %453 = cast(%447, dtype="int64") /* ty=Tensor[(2, 12, 9), int64] */;
  %454 = dyn.reshape(%451, %452, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %455 = mod(%444, %445) /* ty=Tensor[(2, 12, 9), float32] */;
  %456 = %446.1;
  %457 = @func_1029() /* ty=Tensor[(2, 12, 9), bool] */;
  %458 = %450.0;
  %459 = subtract(%453, %454) /* ty=Tensor[(2, 12, 9), int64] */;
  (%455, %456, %457, %458, %459)
}

def @func_9220(%var_9213: Tensor[(4, 12, 6), int8], %var_9214: Tensor[(4, 12, 6), int8]) -> Tensor[(4, 12, 6), int8] {
  %460 = cast(%var_9214, dtype="int8") /* ty=Tensor[(4, 12, 6), int8] */;
  %461 = shape_of(%var_9213, dtype="int32") /* ty=Tensor[(3), int32] */;
  %462 = cast(%var_9213, dtype="int8") /* ty=Tensor[(4, 12, 6), int8] */;
  %463 = dyn.reshape(%460, %461, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  maximum(%462, %463) /* ty=Tensor[(4, 12, 6), int8] */
}

def @func_5073(%var_5042: Tensor[(120), uint64], %var_5052: Tensor[(352), int8], %var_5064: Tensor[(448, 1), float32]) -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(6, 2, 10), bool], Tensor[(60), uint64], Tensor[(120), uint64], Tensor[(2, 12, 9), bool], Tensor[(352), int8], Tensor[(11, 2, 16), int8], Tensor[(448, 1), float32], Tensor[(11, 2, 16), int8], Tensor[(2, 12, 9), float32]) {
  %464 = @func_3953() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */;
  %465 = %464.0;
  %466 = cast(%465, dtype="float32") /* ty=Tensor[(2, 12, 9), float32] */;
  %467 = cast(%465, dtype="float32") /* ty=Tensor[(2, 12, 9), float32] */;
  %468 = reshape(%466, newshape=[2, 12, 9]) /* ty=Tensor[(2, 12, 9), float32] */;
  %469 = reshape(%467, newshape=[2, 12, 9]) /* ty=Tensor[(2, 12, 9), float32] */;
  %470 = @func_179(%468, %469) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float32]) */;
  %471 = cast(meta[relay.Constant][26] /* ty=Tensor[(60), uint64] */, dtype="uint64") /* ty=Tensor[(60), uint64] */;
  %472 = cast(%var_5042, dtype="uint64") /* ty=Tensor[(120), uint64] */;
  %473 = reshape(%471, newshape=[6, 1, 10]) /* ty=Tensor[(6, 1, 10), uint64] */;
  %474 = reshape(%472, newshape=[6, 2, 10]) /* ty=Tensor[(6, 2, 10), uint64] */;
  %475 = @func_4263(%473, %474) /* ty=(Tensor[(6, 2, 10), bool],) */;
  %476 = cast(%var_5052, dtype="int8") /* ty=Tensor[(352), int8] */;
  %477 = reshape(%476, newshape=[352]) /* ty=Tensor[(352), int8] */;
  %478 = @func_3863(%477) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32], Tensor[(352), int8]) */;
  %479 = cast(%var_5064, dtype="float32") /* ty=Tensor[(448, 1), float32] */;
  %480 = cast(%var_5064, dtype="float32") /* ty=Tensor[(448, 1), float32] */;
  %481 = cast(%var_5052, dtype="int8") /* ty=Tensor[(352), int8] */;
  %482 = reshape(%479, newshape=[8, 14, 4]) /* ty=Tensor[(8, 14, 4), float32] */;
  %483 = reshape(%480, newshape=[8, 14, 4]) /* ty=Tensor[(8, 14, 4), float32] */;
  %484 = reshape(%481, newshape=[352]) /* ty=Tensor[(352), int8] */;
  %485 = @func_1118(%482, %483, %484) /* ty=(Tensor[(8, 14, 4), float32], Tensor[(11, 2, 16), int8], Tensor[(352), int8]) */;
  %486 = %485.1;
  %487 = cast(%486, dtype="int8") /* ty=Tensor[(11, 2, 16), int8] */;
  %488 = cast(%var_5052, dtype="int8") /* ty=Tensor[(352), int8] */;
  %489 = cast(%var_5052, dtype="int8") /* ty=Tensor[(352), int8] */;
  %490 = reshape(%487, newshape=[11, 2, 16]) /* ty=Tensor[(11, 2, 16), int8] */;
  %491 = reshape(%488, newshape=[11, 2, 16]) /* ty=Tensor[(11, 2, 16), int8] */;
  %492 = reshape(%489, newshape=[11, 2, 16]) /* ty=Tensor[(11, 2, 16), int8] */;
  %493 = @func_710(%490, %491, %492) /* ty=(Tensor[(11, 2, 16), float32], Tensor[(11, 2, 16), int8]) */;
  %494 = %470.0;
  %495 = %475.0;
  %496 = %478.0;
  %497 = %493.1;
  %498 = @func_3322() /* ty=Tensor[(2, 12, 9), float32] */;
  (%465, %494, %495, meta[relay.Constant][26] /* ty=Tensor[(60), uint64] */, %var_5042, %496, %var_5052, %486, %var_5064, %497, %498)
}

def @func_5165() -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(8, 14, 9), bool], Tensor[(12, 84), uint8]) {
  %499 = @func_1454() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %500 = cast(meta[relay.Constant][27] /* ty=Tensor[(12, 84), uint8] */, dtype="uint8") /* ty=Tensor[(12, 84), uint8] */;
  %501 = reshape(%500, newshape=[1008]) /* ty=Tensor[(1008), uint8] */;
  %502 = @func_901(%501) /* ty=(Tensor[(2, 12, 9), float64], Tensor[(216), float32], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), int16], Tensor[(8, 14, 9), bool], uint8, Tensor[(1008), uint8]) */;
  %503 = %499.0;
  %504 = @func_1581() /* ty=Tensor[(2, 12, 9), float64] */;
  %505 = @func_4825() /* ty=Tensor[(2, 12, 9), bool] */;
  %506 = %502.4;
  (%503, %504, %505, %506, meta[relay.Constant][27] /* ty=Tensor[(12, 84), uint8] */)
}

def @func_1029() -> Tensor[(2, 12, 9), bool] {
  %507 = @func_393() /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32]) */;
  %507.0
}

def @func_762() -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) {
  %508 = @func_393() /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32]) */;
  %509 = %508.0;
  %510 = cast(%509, dtype="float64") /* ty=Tensor[(2, 12, 9), float64] */;
  %511 = @func_595() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool]) */;
  %512 = cos(%510) /* ty=Tensor[(2, 12, 9), float64] */;
  %513 = %511.0;
  (%512, %513)
}

def @func_5638() -> Tensor[(2, 12, 9), float64] {
  %514 = @func_2863() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64]) */;
  %514.2
}

def @func_4825() -> Tensor[(2, 12, 9), bool] {
  @func_1374() /* ty=Tensor[(2, 12, 9), bool] */
}

def @func_10730() -> (Tensor[(2, 12, 9), bool],) {
  %515 = @func_595() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool]) */;
  %516 = %515.1;
  (%516,)
}

def @func_7758() -> (Tensor[(2, 12, 9), float32],) {
  %517 = @func_6350() /* ty=Tensor[(2, 12, 9), float32] */;
  (%517,)
}

def @func_1259(%var_1227: Tensor[(352), int8]) -> (Tensor[(2, 12, 9), float32], Tensor[(11, 2, 16), float32], Tensor[(352), float32]) {
  %518 = @func_1015() /* ty=(Tensor[(2, 12, 9), float32],) */;
  %519 = cast(%var_1227, dtype="int8") /* ty=Tensor[(352), int8] */;
  %520 = cast(%var_1227, dtype="int8") /* ty=Tensor[(352), int8] */;
  %521 = cast(%var_1227, dtype="int8") /* ty=Tensor[(352), int8] */;
  %522 = reshape(%519, newshape=[11, 2, 16]) /* ty=Tensor[(11, 2, 16), int8] */;
  %523 = reshape(%520, newshape=[11, 2, 16]) /* ty=Tensor[(11, 2, 16), int8] */;
  %524 = reshape(%521, newshape=[11, 2, 16]) /* ty=Tensor[(11, 2, 16), int8] */;
  %525 = @func_710(%522, %523, %524) /* ty=(Tensor[(11, 2, 16), float32], Tensor[(11, 2, 16), int8]) */;
  %526 = %525.1;
  %527 = cast(%526, dtype="float32") /* ty=Tensor[(11, 2, 16), float32] */;
  %528 = cast(%var_1227, dtype="float32") /* ty=Tensor[(352), float32] */;
  %529 = %518.0;
  %530 = asinh(%527) /* ty=Tensor[(11, 2, 16), float32] */;
  %531 = cos(%528) /* ty=Tensor[(352), float32] */;
  (%529, %530, %531)
}

def @func_8035() -> (Tensor[(2, 12, 9), float64],) {
  %532 = @func_7251() /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */;
  %533 = %532.1;
  (%533,)
}

def @func_10907(%var_10896: Tensor[(12, 84), uint8], %var_10902: Tensor[(312), uint32]) -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(12, 84), int32], Tensor[(2, 12, 9), bool], Tensor[(312), uint32]) {
  %534 = @func_7866() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %535 = @func_5165() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(8, 14, 9), bool], Tensor[(12, 84), uint8]) */;
  %536 = %535.4;
  %537 = cast(%var_10896, dtype="int32") /* ty=Tensor[(12, 84), int32] */;
  %538 = shape_of(%536, dtype="int32") /* ty=Tensor[(2), int32] */;
  %539 = cast(%536, dtype="int32") /* ty=Tensor[(12, 84), int32] */;
  %540 = dyn.reshape(%537, %538, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %541 = cast(%var_10902, dtype="uint32") /* ty=Tensor[(312), uint32] */;
  %542 = reshape(%541, newshape=[312]) /* ty=Tensor[(312), uint32] */;
  %543 = @func_5280(%542) /* ty=(Tensor[(216), float32], Tensor[(2, 12, 9), bool], Tensor[(6, 4, 13), uint32], Tensor[(312), uint32], Tensor[(2, 12, 9), bool]) */;
  %544 = %534.0;
  %545 = @func_3961() /* ty=Tensor[(2, 12, 9), float64] */;
  %546 = maximum(%539, %540) /* ty=Tensor[(12, 84), int32] */;
  %547 = %543.1;
  (%544, %545, %546, %547, %var_10902)
}

def @func_6848() -> Tensor[(2, 12, 9), bool] {
  %548 = @func_4189() /* ty=(Tensor[(2, 12, 9), bool],) */;
  %548.0
}

def @func_1406() -> Tensor[(2, 12, 9), float64] {
  %549 = @func_542() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */;
  %549.0
}

def @func_1502() -> (Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool]) {
  %550 = @func_762() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */;
  %551 = @func_623() /* ty=Tensor[(2, 12, 9), bool] */;
  %552 = %550.0;
  %553 = @func_1374() /* ty=Tensor[(2, 12, 9), bool] */;
  (%551, %552, %553)
}

def @func_5691() -> (Tensor[(2, 12, 9), float64],) {
  %554 = @func_1064() /* ty=Tensor[(2, 12, 9), float64] */;
  (%554,)
}

def @func_179(%var_127: Tensor[(2, 12, 9), float32], %var_128: Tensor[(2, 12, 9), float32]) -> (Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float32]) {
  %555 = cast(%var_128, dtype="bool") /* ty=Tensor[(2, 12, 9), bool] */;
  %556 = shape_of(%var_127, dtype="int32") /* ty=Tensor[(3), int32] */;
  %557 = cast(%var_127, dtype="bool") /* ty=Tensor[(2, 12, 9), bool] */;
  %558 = dyn.reshape(%555, %556, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %559 = cast(%var_127, dtype="float64") /* ty=Tensor[(2, 12, 9), float64] */;
  %560 = shape_of(%var_128, dtype="int32") /* ty=Tensor[(3), int32] */;
  %561 = cast(%var_128, dtype="float64") /* ty=Tensor[(2, 12, 9), float64] */;
  %562 = dyn.reshape(%559, %560, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %563 = cast(%var_128, dtype="float32") /* ty=Tensor[(2, 12, 9), float32] */;
  %564 = not_equal(%557, %558) /* ty=Tensor[(2, 12, 9), bool] */;
  %565 = minimum(%561, %562) /* ty=Tensor[(2, 12, 9), float64] */;
  %566 = acos(%563) /* ty=Tensor[(2, 12, 9), float32] */;
  (%564, %565, %566)
}

def @func_5488() -> Tensor[(2, 12, 9), bool] {
  @func_1374() /* ty=Tensor[(2, 12, 9), bool] */
}

def @func_4263(%var_4246: Tensor[(6, 1, 10), uint64], %var_4247: Tensor[(6, 2, 10), uint64]) -> (Tensor[(6, 2, 10), bool],) {
  %567 = cast(%var_4246, dtype="bool") /* ty=Tensor[(6, 1, 10), bool] */;
  %568 = cast(%var_4247, dtype="bool") /* ty=Tensor[(6, 2, 10), bool] */;
  %569 = greater(%567, %568) /* ty=Tensor[(6, 2, 10), bool] */;
  (%569,)
}

def @func_5280(%var_5268: Tensor[(312), uint32]) -> (Tensor[(216), float32], Tensor[(2, 12, 9), bool], Tensor[(6, 4, 13), uint32], Tensor[(312), uint32], Tensor[(2, 12, 9), bool]) {
  %570 = @func_4638() /* ty=(Tensor[(2, 12, 9), bool], Tensor[(216), float32], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64]) */;
  %571 = @func_4638() /* ty=(Tensor[(2, 12, 9), bool], Tensor[(216), float32], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64]) */;
  %572 = cast(%var_5268, dtype="uint32") /* ty=Tensor[(312), uint32] */;
  %573 = reshape(%572, newshape=[6, 4, 13]) /* ty=Tensor[(6, 4, 13), uint32] */;
  %574 = @func_2776() /* ty=(Tensor[(2, 12, 9), bool],) */;
  %575 = %570.1;
  %576 = %571.2;
  %577 = @func_2532(%573) /* ty=Tensor[(6, 4, 13), uint32] */;
  %578 = %574.0;
  (%575, %576, %577, %var_5268, %578)
}

def @func_9358() -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(3, 56), float32]) {
  %579 = @func_9336() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %580 = cast(meta[relay.Constant][28] /* ty=Tensor[(3, 56), float32] */, dtype="float32") /* ty=Tensor[(3, 56), float32] */;
  %581 = reshape(%580, newshape=[84, 2]) /* ty=Tensor[(84, 2), float32] */;
  %582 = @func_4958(%581) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64], Tensor[(7, 8, 3), uint64]) */;
  %583 = %579.0;
  %584 = %582.1;
  (%583, %584, meta[relay.Constant][28] /* ty=Tensor[(3, 56), float32] */)
}

def @func_7530(%var_7521: Tensor[(10, 11, 6), float64]) -> (Tensor[(10, 11, 6), float64],) {
  %585 = cast(%var_7521, dtype="float64") /* ty=Tensor[(10, 11, 6), float64] */;
  %586 = cos(%585) /* ty=Tensor[(10, 11, 6), float64] */;
  (%586,)
}

def @func_4307() -> Tensor[(2, 12, 9), float64] {
  %587 = @func_3420() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %587.0
}

def @func_8239(%var_8212: Tensor[(60), uint64], %var_8231: Tensor[(810), float32]) -> (Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64], Tensor[(6, 2, 10), bool], Tensor[(60), uint64], Tensor[(120), uint64], Tensor[(2, 12, 9), float64], Tensor[(715), float64], Tensor[(810), float32]) {
  %588 = @func_3524() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float32], Tensor[(8, 14, 9), bool], uint8, Tensor[(1008), uint8]) */;
  %589 = cast(%var_8212, dtype="uint64") /* ty=Tensor[(60), uint64] */;
  %590 = cast(meta[relay.Constant][29] /* ty=Tensor[(120), uint64] */, dtype="uint64") /* ty=Tensor[(120), uint64] */;
  %591 = reshape(%589, newshape=[6, 1, 10]) /* ty=Tensor[(6, 1, 10), uint64] */;
  %592 = reshape(%590, newshape=[6, 2, 10]) /* ty=Tensor[(6, 2, 10), uint64] */;
  %593 = @func_4263(%591, %592) /* ty=(Tensor[(6, 2, 10), bool],) */;
  %594 = cast(meta[relay.Constant][30] /* ty=Tensor[(715), float64] */, dtype="float64") /* ty=Tensor[(715), float64] */;
  %595 = cast(%var_8231, dtype="float32") /* ty=Tensor[(810), float32] */;
  %596 = reshape(%594, newshape=[13, 5, 11]) /* ty=Tensor[(13, 5, 11), float64] */;
  %597 = reshape(%595, newshape=[81, 10]) /* ty=Tensor[(81, 10), float32] */;
  %598 = @func_5973(%596, %597) /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(13, 5, 11), bool], Tensor[(13, 5, 11), float32], Tensor[(2, 12, 9), bool], Tensor[(9, 15, 6), bool], Tensor[(81, 10), float32]) */;
  %599 = @func_5292() /* ty=Tensor[(2, 12, 9), bool] */;
  %600 = %588.0;
  %601 = %593.0;
  %602 = %598.1;
  (%599, %600, %601, %var_8212, meta[relay.Constant][29] /* ty=Tensor[(120), uint64] */, %602, meta[relay.Constant][30] /* ty=Tensor[(715), float64] */, %var_8231)
}

def @func_1913() -> Tensor[(2, 12, 9), bool] {
  %603 = @func_365() /* ty=(Tensor[(2, 12, 9), bool],) */;
  %603.0
}

def @func_3961() -> Tensor[(2, 12, 9), float64] {
  %604 = @func_3953() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */;
  %604.0
}

def @func_901(%var_886: Tensor[(1008), uint8]) -> (Tensor[(2, 12, 9), float64], Tensor[(216), float32], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), int16], Tensor[(8, 14, 9), bool], uint8, Tensor[(1008), uint8]) {
  %605 = @func_762() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */;
  %606 = @func_342() /* ty=(Tensor[(3, 2, 14), uint32], Tensor[(2, 12, 9), bool], Tensor[(216), float32], Tensor[(2, 12, 9), float32]) */;
  %607 = @func_365() /* ty=(Tensor[(2, 12, 9), bool],) */;
  %608 = @func_623() /* ty=Tensor[(2, 12, 9), bool] */;
  %609 = %607.0;
  %610 = cast(%609, dtype="bool") /* ty=Tensor[(2, 12, 9), bool] */;
  %611 = reshape(%610, newshape=[2, 12, 9]) /* ty=Tensor[(2, 12, 9), bool] */;
  %612 = @func_435(%611) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64]) */;
  %613 = %612.1;
  %614 = cast(%613, dtype="int16") /* ty=Tensor[(2, 12, 9), int16] */;
  %615 = shape_of(%608, dtype="int32") /* ty=Tensor[(3), int32] */;
  %616 = cast(%608, dtype="int16") /* ty=Tensor[(2, 12, 9), int16] */;
  %617 = dyn.reshape(%614, %615, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %618 = cast(meta[relay.Constant][31] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %619 = cast(%var_886, dtype="uint8") /* ty=Tensor[(1008), uint8] */;
  %620 = reshape(%618, newshape=[]) /* ty=uint8 */;
  %621 = reshape(%619, newshape=[8, 14, 9]) /* ty=Tensor[(8, 14, 9), uint8] */;
  %622 = %605.0;
  %623 = %606.2;
  %624 = bitwise_or(%616, %617) /* ty=Tensor[(2, 12, 9), int16] */;
  %625 = @func_452(%620, %621) /* ty=Tensor[(8, 14, 9), bool] */;
  (%622, %623, %609, %624, %625, meta[relay.Constant][31] /* ty=uint8 */, %var_886)
}

def @func_9421() -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(8, 8, 13), bool]) {
  %626 = @func_1145() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %627 = @func_1337() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %628 = @func_4448() /* ty=(Tensor[(8, 14, 9), bool], Tensor[(8, 8, 13), bool], Tensor[(2, 416), float64]) */;
  %629 = %626.0;
  %630 = @func_1618() /* ty=Tensor[(2, 12, 9), float64] */;
  %631 = %627.0;
  %632 = %628.1;
  (%629, %630, %631, %632)
}

def @func_10512() -> (Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64]) {
  %633 = @func_2467() /* ty=(Tensor[(2, 12, 9), bool],) */;
  %634 = %633.0;
  %635 = @func_5196() /* ty=Tensor[(2, 12, 9), float64] */;
  (%634, %635)
}

def @func_11046() -> Tensor[(2, 12, 9), float64] {
  %636 = @func_4222() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %636.0
}

def @func_10176(%var_10173: Tensor[(1, 9, 14), float64]) -> Tensor[(1, 9, 14), float64] {
  %637 = cast(%var_10173, dtype="float64") /* ty=Tensor[(1, 9, 14), float64] */;
  acos(%637) /* ty=Tensor[(1, 9, 14), float64] */
}

def @func_8449() -> Tensor[(8, 8, 13), bool] {
  %638 = @func_4448() /* ty=(Tensor[(8, 14, 9), bool], Tensor[(8, 8, 13), bool], Tensor[(2, 416), float64]) */;
  %638.1
}

def @func_1118(%var_1107: Tensor[(8, 14, 4), float32], %var_1108: Tensor[(8, 14, 4), float32], %var_1113: Tensor[(352), int8]) -> (Tensor[(8, 14, 4), float32], Tensor[(11, 2, 16), int8], Tensor[(352), int8]) {
  %639 = cast(%var_1108, dtype="float32") /* ty=Tensor[(8, 14, 4), float32] */;
  %640 = shape_of(%var_1107, dtype="int32") /* ty=Tensor[(3), int32] */;
  %641 = cast(%var_1107, dtype="float32") /* ty=Tensor[(8, 14, 4), float32] */;
  %642 = dyn.reshape(%639, %640, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %643 = cast(%var_1113, dtype="int8") /* ty=Tensor[(352), int8] */;
  %644 = cast(%var_1113, dtype="int8") /* ty=Tensor[(352), int8] */;
  %645 = cast(%var_1113, dtype="int8") /* ty=Tensor[(352), int8] */;
  %646 = reshape(%643, newshape=[11, 2, 16]) /* ty=Tensor[(11, 2, 16), int8] */;
  %647 = reshape(%644, newshape=[11, 2, 16]) /* ty=Tensor[(11, 2, 16), int8] */;
  %648 = reshape(%645, newshape=[11, 2, 16]) /* ty=Tensor[(11, 2, 16), int8] */;
  %649 = @func_710(%646, %647, %648) /* ty=(Tensor[(11, 2, 16), float32], Tensor[(11, 2, 16), int8]) */;
  %650 = power(%641, %642) /* ty=Tensor[(8, 14, 4), float32] */;
  %651 = %649.1;
  (%650, %651, %var_1113)
}

def @func_7333() -> (Tensor[(2, 12, 9), bool],) {
  %652 = @func_5292() /* ty=Tensor[(2, 12, 9), bool] */;
  (%652,)
}

def @func_2665(%var_2630: Tensor[(9, 15, 6), float32]) -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(9, 15, 6), uint8], Tensor[(9, 15, 6), bool]) {
  %653 = @func_1502() /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool]) */;
  %654 = @func_365() /* ty=(Tensor[(2, 12, 9), bool],) */;
  %655 = cast(%var_2630, dtype="float32") /* ty=Tensor[(9, 15, 6), float32] */;
  %656 = sqrt(%655) /* ty=Tensor[(9, 15, 6), float32] */;
  %657 = cast(%var_2630, dtype="uint8") /* ty=Tensor[(9, 15, 6), uint8] */;
  %658 = shape_of(%656, dtype="int32") /* ty=Tensor[(3), int32] */;
  %659 = cast(%656, dtype="uint8") /* ty=Tensor[(9, 15, 6), uint8] */;
  %660 = dyn.reshape(%657, %658, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %661 = bitwise_or(%659, %660) /* ty=Tensor[(9, 15, 6), uint8] */;
  %662 = cast(%661, dtype="uint8") /* ty=Tensor[(9, 15, 6), uint8] */;
  %663 = shape_of(%var_2630, dtype="int32") /* ty=Tensor[(3), int32] */;
  %664 = cast(%var_2630, dtype="uint8") /* ty=Tensor[(9, 15, 6), uint8] */;
  %665 = dyn.reshape(%662, %663, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %666 = cast(%var_2630, dtype="bool") /* ty=Tensor[(9, 15, 6), bool] */;
  %667 = shape_of(%656, dtype="int32") /* ty=Tensor[(3), int32] */;
  %668 = cast(%656, dtype="bool") /* ty=Tensor[(9, 15, 6), bool] */;
  %669 = dyn.reshape(%666, %667, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %670 = %653.1;
  %671 = %654.0;
  %672 = bitwise_xor(%664, %665) /* ty=Tensor[(9, 15, 6), uint8] */;
  %673 = less_equal(%668, %669) /* ty=Tensor[(9, 15, 6), bool] */;
  (%670, %671, %672, %673)
}

def @func_2024() -> Tensor[(2, 12, 9), float64] {
  %674 = @func_1322() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %674.0
}

def @func_595() -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool]) {
  %675 = @func_542() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */;
  %676 = %675.1;
  %677 = cast(%676, dtype="float32") /* ty=Tensor[(2, 12, 9), float32] */;
  %678 = cast(%676, dtype="float32") /* ty=Tensor[(2, 12, 9), float32] */;
  %679 = reshape(%677, newshape=[2, 12, 9]) /* ty=Tensor[(2, 12, 9), float32] */;
  %680 = reshape(%678, newshape=[2, 12, 9]) /* ty=Tensor[(2, 12, 9), float32] */;
  %681 = @func_179(%679, %680) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float32]) */;
  %682 = %681.0;
  (%676, %682)
}

def @func_3524() -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float32], Tensor[(8, 14, 9), bool], uint8, Tensor[(1008), uint8]) {
  %683 = @func_2273() /* ty=Tensor[(2, 12, 9), float64] */;
  %684 = cast(%683, dtype="bool") /* ty=Tensor[(2, 12, 9), bool] */;
  %685 = reshape(%684, newshape=[2, 12, 9]) /* ty=Tensor[(2, 12, 9), bool] */;
  %686 = @func_1774(%685) /* ty=(Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64]) */;
  %687 = cast(meta[relay.Constant][32] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %688 = cast(meta[relay.Constant][33] /* ty=Tensor[(1008), uint8] */, dtype="uint8") /* ty=Tensor[(1008), uint8] */;
  %689 = reshape(%687, newshape=[]) /* ty=uint8 */;
  %690 = reshape(%688, newshape=[8, 14, 9]) /* ty=Tensor[(8, 14, 9), uint8] */;
  %691 = %686.0;
  %692 = @func_452(%689, %690) /* ty=Tensor[(8, 14, 9), bool] */;
  (%683, %691, %692, meta[relay.Constant][32] /* ty=uint8 */, meta[relay.Constant][33] /* ty=Tensor[(1008), uint8] */)
}

def @func_10568(%var_10531: Tensor[(448), float32], %var_10549: uint8) -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(448), float32], Tensor[(352), int8], Tensor[(8, 14, 9), bool], uint8, Tensor[(1008), uint8], Tensor[(8, 14, 4), int16]) {
  %693 = @func_1993() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64]) */;
  %694 = cast(%var_10549, dtype="uint8") /* ty=uint8 */;
  %695 = cast(meta[relay.Constant][35] /* ty=Tensor[(1008), uint8] */, dtype="uint8") /* ty=Tensor[(1008), uint8] */;
  %696 = reshape(%694, newshape=[]) /* ty=uint8 */;
  %697 = reshape(%695, newshape=[8, 14, 9]) /* ty=Tensor[(8, 14, 9), uint8] */;
  %698 = cast(%var_10531, dtype="float32") /* ty=Tensor[(448), float32] */;
  %699 = cast(%var_10531, dtype="float32") /* ty=Tensor[(448), float32] */;
  %700 = cast(meta[relay.Constant][34] /* ty=Tensor[(352), int8] */, dtype="int8") /* ty=Tensor[(352), int8] */;
  %701 = reshape(%698, newshape=[8, 14, 4]) /* ty=Tensor[(8, 14, 4), float32] */;
  %702 = reshape(%699, newshape=[8, 14, 4]) /* ty=Tensor[(8, 14, 4), float32] */;
  %703 = reshape(%700, newshape=[352]) /* ty=Tensor[(352), int8] */;
  %704 = @func_1118(%701, %702, %703) /* ty=(Tensor[(8, 14, 4), float32], Tensor[(11, 2, 16), int8], Tensor[(352), int8]) */;
  %705 = %704.0;
  %706 = cast(%705, dtype="float32") /* ty=Tensor[(8, 14, 4), float32] */;
  %707 = exp(%706) /* ty=Tensor[(8, 14, 4), float32] */;
  %708 = cast(%705, dtype="int16") /* ty=Tensor[(8, 14, 4), int16] */;
  %709 = shape_of(%707, dtype="int32") /* ty=Tensor[(3), int32] */;
  %710 = cast(%707, dtype="int16") /* ty=Tensor[(8, 14, 4), int16] */;
  %711 = dyn.reshape(%708, %709, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %712 = %693.2;
  %713 = @func_8083() /* ty=Tensor[(2, 12, 9), float64] */;
  %714 = @func_6848() /* ty=Tensor[(2, 12, 9), bool] */;
  %715 = @func_452(%696, %697) /* ty=Tensor[(8, 14, 9), bool] */;
  %716 = left_shift(%710, %711) /* ty=Tensor[(8, 14, 4), int16] */;
  (%712, %713, %714, %var_10531, meta[relay.Constant][34] /* ty=Tensor[(352), int8] */, %715, %var_10549, meta[relay.Constant][35] /* ty=Tensor[(1008), uint8] */, %716)
}

def @func_9851() -> (Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32]) {
  %717 = @func_8673() /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32]) */;
  %718 = @func_2925() /* ty=(Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), float64]) */;
  %719 = %717.0;
  %720 = %718.0;
  (%719, %720)
}

def @func_1015() -> (Tensor[(2, 12, 9), float32],) {
  %721 = @func_342() /* ty=(Tensor[(3, 2, 14), uint32], Tensor[(2, 12, 9), bool], Tensor[(216), float32], Tensor[(2, 12, 9), float32]) */;
  %722 = %721.3;
  (%722,)
}

def @func_3252() -> (Tensor[(2, 12, 9), float64],) {
  %723 = @func_2273() /* ty=Tensor[(2, 12, 9), float64] */;
  (%723,)
}

def @func_3573() -> (Tensor[(2, 12, 9), float32],) {
  %724 = @func_542() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */;
  %725 = %724.0;
  %726 = cast(%725, dtype="float32") /* ty=Tensor[(2, 12, 9), float32] */;
  %727 = rsqrt(%726) /* ty=Tensor[(2, 12, 9), float32] */;
  (%727,)
}

def @func_9336() -> (Tensor[(2, 12, 9), float64],) {
  %728 = @func_6949() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool]) */;
  %729 = %728.1;
  (%729,)
}

def @func_5377(%var_5349: Tensor[(14, 3, 2), float32]) -> (Tensor[(14, 3, 2), float32], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64]) {
  %730 = cast(%var_5349, dtype="float32") /* ty=Tensor[(14, 3, 2), float32] */;
  %731 = @func_3252() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %732 = erf(%730) /* ty=Tensor[(14, 3, 2), float32] */;
  %733 = @func_2219() /* ty=Tensor[(2, 12, 9), bool] */;
  %734 = %731.0;
  (%732, %733, %734)
}

def @func_9795() -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), float32]) {
  %735 = @func_762() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */;
  %736 = @func_6401() /* ty=(Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */;
  %737 = %735.1;
  %738 = @func_6350() /* ty=Tensor[(2, 12, 9), float32] */;
  %739 = %736.0;
  (%737, %738, %739)
}

def @func_4240() -> (Tensor[(2, 12, 9), float64],) {
  %740 = @func_1454() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %741 = %740.0;
  (%741,)
}

def @func_10207() -> Tensor[(2, 12, 9), float64] {
  @func_6679() /* ty=Tensor[(2, 12, 9), float64] */
}

def @func_4057() -> (Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool]) {
  %742 = @func_3573() /* ty=(Tensor[(2, 12, 9), float32],) */;
  %743 = @func_3252() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %744 = @func_4023() /* ty=(Tensor[(2, 12, 9), bool],) */;
  %745 = %742.0;
  %746 = %743.0;
  %747 = %744.0;
  (%745, %746, %747)
}

def @func_9585(%var_9555: Tensor[(660, 1), float64]) -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(10, 11, 6), float64], Tensor[(660, 1), float64], Tensor[(2, 12, 9), bool]) {
  %748 = @func_6806() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(12, 13, 9), int8], Tensor[(1404), int8], Tensor[(2, 12, 9), bool]) */;
  %749 = @func_9336() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %750 = cast(%var_9555, dtype="float64") /* ty=Tensor[(660, 1), float64] */;
  %751 = reshape(%750, newshape=[10, 11, 6]) /* ty=Tensor[(10, 11, 6), float64] */;
  %752 = @func_7530(%751) /* ty=(Tensor[(10, 11, 6), float64],) */;
  %753 = @func_5196() /* ty=Tensor[(2, 12, 9), float64] */;
  %754 = cast(%753, dtype="float64") /* ty=Tensor[(2, 12, 9), float64] */;
  %755 = reshape(%754, newshape=[2, 12, 9]) /* ty=Tensor[(2, 12, 9), float64] */;
  %756 = @func_5747(%755) /* ty=(Tensor[(2, 12, 9), bool],) */;
  %757 = %748.0;
  %758 = %749.0;
  %759 = %752.0;
  %760 = %756.0;
  (%757, %753, %758, %759, %var_9555, %760)
}

def @func_7268() -> Tensor[(2, 12, 9), bool] {
  @func_5488() /* ty=Tensor[(2, 12, 9), bool] */
}

def @func_6949() -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool]) {
  %761 = @func_1145() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %762 = @func_5714() /* ty=(Tensor[(2, 12, 9), bool],) */;
  %763 = @func_5196() /* ty=Tensor[(2, 12, 9), float64] */;
  %764 = %761.0;
  %765 = %762.0;
  (%763, %764, %765)
}

def @func_11277(%var_11264: Tensor[(3, 8, 3), float64]) -> Tensor[(3, 8, 3), float64] {
  %766 = cast(%var_11264, dtype="float64") /* ty=Tensor[(3, 8, 3), float64] */;
  %767 = shape_of(meta[relay.Constant][36] /* ty=Tensor[(3, 8, 3), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %768 = cast(meta[relay.Constant][36] /* ty=Tensor[(3, 8, 3), float64] */, dtype="float64") /* ty=Tensor[(3, 8, 3), float64] */;
  %769 = dyn.reshape(%766, %767, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  divide(%768, %769) /* ty=Tensor[(3, 8, 3), float64] */
}

def @func_7866() -> (Tensor[(2, 12, 9), float64],) {
  %770 = @func_3252() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %771 = %770.0;
  (%771,)
}

def @func_1774(%var_1742: Tensor[(2, 12, 9), bool]) -> (Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64]) {
  %772 = @func_595() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool]) */;
  %773 = %772.1;
  %774 = cast(%var_1742, dtype="float32") /* ty=Tensor[(2, 12, 9), float32] */;
  %775 = shape_of(%773, dtype="int32") /* ty=Tensor[(3), int32] */;
  %776 = cast(%773, dtype="float32") /* ty=Tensor[(2, 12, 9), float32] */;
  %777 = dyn.reshape(%774, %775, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %778 = @func_1322() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %779 = power(%776, %777) /* ty=Tensor[(2, 12, 9), float32] */;
  %780 = @func_1029() /* ty=Tensor[(2, 12, 9), bool] */;
  %781 = %778.0;
  (%779, %780, %781)
}

def @func_4958(%var_4898: Tensor[(84, 2), float32]) -> (Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64], Tensor[(7, 8, 3), uint64]) {
  %782 = @func_365() /* ty=(Tensor[(2, 12, 9), bool],) */;
  %783 = @func_3953() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */;
  %784 = cast(%var_4898, dtype="float32") /* ty=Tensor[(84, 2), float32] */;
  %785 = reshape(%784, newshape=[7, 8, 3]) /* ty=Tensor[(7, 8, 3), float32] */;
  %786 = @func_4767(%785) /* ty=Tensor[(7, 8, 3), float32] */;
  %787 = cast(%var_4898, dtype="uint64") /* ty=Tensor[(84, 2), uint64] */;
  %788 = shape_of(%786, dtype="int32") /* ty=Tensor[(3), int32] */;
  %789 = cast(%786, dtype="uint64") /* ty=Tensor[(7, 8, 3), uint64] */;
  %790 = dyn.reshape(%787, %788, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %791 = %782.0;
  %792 = %783.1;
  %793 = right_shift(%789, %790) /* ty=Tensor[(7, 8, 3), uint64] */;
  (%791, %792, %793)
}

def @func_6555(%var_6528: Tensor[(936), uint32]) -> (Tensor[(2, 12, 9), bool], Tensor[(13, 6, 12), bool], Tensor[(936), uint32]) {
  %794 = @func_4023() /* ty=(Tensor[(2, 12, 9), bool],) */;
  %795 = cast(%var_6528, dtype="uint32") /* ty=Tensor[(936), uint32] */;
  %796 = cast(%var_6528, dtype="uint32") /* ty=Tensor[(936), uint32] */;
  %797 = reshape(%795, newshape=[13, 6, 12]) /* ty=Tensor[(13, 6, 12), uint32] */;
  %798 = reshape(%796, newshape=[13, 6, 12]) /* ty=Tensor[(13, 6, 12), uint32] */;
  %799 = @func_5840(%797, %798) /* ty=(Tensor[(13, 6, 12), bool], Tensor[(13, 6, 12), uint16]) */;
  %800 = %794.0;
  %801 = %799.0;
  (%800, %801, %var_6528)
}

def @func_8417(%var_8407: Tensor[(14, 7, 16), float32]) -> (Tensor[(14, 7, 16), float32], Tensor[(13, 6, 12), bool], Tensor[(936), uint32]) {
  %802 = cast(%var_8407, dtype="float32") /* ty=Tensor[(14, 7, 16), float32] */;
  %803 = cast(meta[relay.Constant][37] /* ty=Tensor[(936), uint32] */, dtype="uint32") /* ty=Tensor[(936), uint32] */;
  %804 = cast(meta[relay.Constant][37] /* ty=Tensor[(936), uint32] */, dtype="uint32") /* ty=Tensor[(936), uint32] */;
  %805 = reshape(%803, newshape=[13, 6, 12]) /* ty=Tensor[(13, 6, 12), uint32] */;
  %806 = reshape(%804, newshape=[13, 6, 12]) /* ty=Tensor[(13, 6, 12), uint32] */;
  %807 = @func_5840(%805, %806) /* ty=(Tensor[(13, 6, 12), bool], Tensor[(13, 6, 12), uint16]) */;
  %808 = erf(%802) /* ty=Tensor[(14, 7, 16), float32] */;
  %809 = %807.0;
  (%808, %809, meta[relay.Constant][37] /* ty=Tensor[(936), uint32] */)
}

def @func_8880() -> Tensor[(2, 12, 9), bool] {
  %810 = @func_595() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool]) */;
  %810.1
}

def @func_3641() -> Tensor[(2, 12, 9), float32] {
  @func_3322() /* ty=Tensor[(2, 12, 9), float32] */
}

def @func_6718() -> Tensor[(2, 12, 9), bool] {
  %811 = @func_2467() /* ty=(Tensor[(2, 12, 9), bool],) */;
  %811.0
}

def @func_10119(%var_10024: Tensor[(810), float32], %var_10044: Tensor[(1, 1001), float32]) -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(60), uint64], Tensor[(810), float32], Tensor[(2, 12, 9), float64], float32, Tensor[(1, 1001), float32], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), bool], Tensor[(168), float32], Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), float32], Tensor[(7, 8, 3), float64]) {
  %812 = @func_5499() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %813 = cast(meta[relay.Constant][38] /* ty=Tensor[(60), uint64] */, dtype="uint64") /* ty=Tensor[(60), uint64] */;
  %814 = cast(%var_10024, dtype="float32") /* ty=Tensor[(810), float32] */;
  %815 = reshape(%813, newshape=[60]) /* ty=Tensor[(60), uint64] */;
  %816 = reshape(%814, newshape=[810]) /* ty=Tensor[(810), float32] */;
  %817 = @func_8239(%815, %816) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64], Tensor[(6, 2, 10), bool], Tensor[(60), uint64], Tensor[(120), uint64], Tensor[(2, 12, 9), float64], Tensor[(715), float64], Tensor[(810), float32]) */;
  %818 = cast(9.15463f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %819 = cast(%var_10044, dtype="float32") /* ty=Tensor[(1, 1001), float32] */;
  %820 = reshape(%818, newshape=[]) /* ty=float32 */;
  %821 = reshape(%819, newshape=[7, 13, 11]) /* ty=Tensor[(7, 13, 11), float32] */;
  %822 = @func_7645(%820, %821) /* ty=(Tensor[(7, 13, 11), float32], Tensor[(2, 12, 9), float64], Tensor[(10, 11, 6), float64], Tensor[(660), float64], Tensor[(2, 12, 9), float64]) */;
  %823 = @func_2925() /* ty=(Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), float64]) */;
  %824 = @func_7333() /* ty=(Tensor[(2, 12, 9), bool],) */;
  %825 = @func_393() /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32]) */;
  %826 = @func_3573() /* ty=(Tensor[(2, 12, 9), float32],) */;
  %827 = cast(meta[relay.Constant][39] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %828 = reshape(%827, newshape=[84, 2]) /* ty=Tensor[(84, 2), float32] */;
  %829 = @func_4958(%828) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64], Tensor[(7, 8, 3), uint64]) */;
  %830 = %829.2;
  %831 = cast(%830, dtype="float64") /* ty=Tensor[(7, 8, 3), float64] */;
  %832 = %812.0;
  %833 = %817.1;
  %834 = %822.1;
  %835 = %823.1;
  %836 = %824.0;
  %837 = @func_5292() /* ty=Tensor[(2, 12, 9), bool] */;
  %838 = %825.1;
  %839 = %826.0;
  %840 = atanh(%831) /* ty=Tensor[(7, 8, 3), float64] */;
  (%832, %833, meta[relay.Constant][38] /* ty=Tensor[(60), uint64] */, %var_10024, %834, 9.15463f /* ty=float32 */, %var_10044, %835, %836, %837, meta[relay.Constant][39] /* ty=Tensor[(168), float32] */, %838, %839, %840)
}

def @func_2925() -> (Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), float64]) {
  %841 = @func_393() /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32]) */;
  %842 = @func_542() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */;
  %843 = %842.0;
  %844 = cast(%843, dtype="float64") /* ty=Tensor[(2, 12, 9), float64] */;
  %845 = %841.1;
  %846 = erf(%844) /* ty=Tensor[(2, 12, 9), float64] */;
  (%845, %846)
}

def @func_5516() -> (Tensor[(2, 12, 9), float64],) {
  %847 = @func_1322() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %848 = %847.0;
  (%848,)
}

def @func_9991(%var_9970: Tensor[(6, 7, 6), float32]) -> (Tensor[(6, 7, 6), float64], Tensor[(2, 12, 9), float64]) {
  %849 = cast(%var_9970, dtype="float32") /* ty=Tensor[(6, 7, 6), float32] */;
  %850 = erf(%849) /* ty=Tensor[(6, 7, 6), float32] */;
  %851 = cast(%850, dtype="float64") /* ty=Tensor[(6, 7, 6), float64] */;
  %852 = @func_1322() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %853 = asinh(%851) /* ty=Tensor[(6, 7, 6), float64] */;
  %854 = %852.0;
  (%853, %854)
}

def @func_1064() -> Tensor[(2, 12, 9), float64] {
  %855 = @func_952() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %855.0
}

def @func_2863() -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64]) {
  %856 = @func_1337() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %857 = %856.0;
  %858 = cast(%857, dtype="bool") /* ty=Tensor[(2, 12, 9), bool] */;
  %859 = reshape(%858, newshape=[2, 12, 9]) /* ty=Tensor[(2, 12, 9), bool] */;
  %860 = @func_435(%859) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64]) */;
  %861 = @func_1502() /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool]) */;
  %862 = %860.0;
  %863 = %861.1;
  (%857, %862, %863)
}

def @func_8396() -> (Tensor[(2, 12, 9), float64],) {
  %864 = @func_6778() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %865 = %864.0;
  (%865,)
}

def @func_6240(%var_6228: Tensor[(2, 416), float64]) -> (Tensor[(2, 12, 9), bool], Tensor[(2, 416), int8], Tensor[(2, 12, 9), float32]) {
  %866 = @func_1502() /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool]) */;
  %867 = @func_4788() /* ty=Tensor[(2, 416), float64] */;
  %868 = cast(%var_6228, dtype="int8") /* ty=Tensor[(2, 416), int8] */;
  %869 = shape_of(%867, dtype="int32") /* ty=Tensor[(2), int32] */;
  %870 = cast(%867, dtype="int8") /* ty=Tensor[(2, 416), int8] */;
  %871 = dyn.reshape(%868, %869, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %872 = %866.0;
  %873 = maximum(%870, %871) /* ty=Tensor[(2, 416), int8] */;
  %874 = @func_4985() /* ty=Tensor[(2, 12, 9), float32] */;
  (%872, %873, %874)
}

def @func_8083() -> Tensor[(2, 12, 9), float64] {
  @func_1618() /* ty=Tensor[(2, 12, 9), float64] */
}

def @func_8487(%var_8467: Tensor[(4, 7, 4), float32]) -> Tensor[(4, 7, 4), float32] {
  %875 = cast(meta[relay.Constant][40] /* ty=Tensor[(4, 7, 4), float32] */, dtype="float32") /* ty=Tensor[(4, 7, 4), float32] */;
  %876 = shape_of(%var_8467, dtype="int32") /* ty=Tensor[(3), int32] */;
  %877 = cast(%var_8467, dtype="float32") /* ty=Tensor[(4, 7, 4), float32] */;
  %878 = dyn.reshape(%875, %876, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_mod(%877, %878) /* ty=Tensor[(4, 7, 4), float32] */
}

def @func_5973(%var_5908: Tensor[(13, 5, 11), float64], %var_5965: Tensor[(81, 10), float32]) -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(13, 5, 11), bool], Tensor[(13, 5, 11), float32], Tensor[(2, 12, 9), bool], Tensor[(9, 15, 6), bool], Tensor[(81, 10), float32]) {
  %879 = @func_762() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */;
  %880 = @func_4240() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %881 = cast(%var_5908, dtype="float64") /* ty=Tensor[(13, 5, 11), float64] */;
  %882 = atanh(%881) /* ty=Tensor[(13, 5, 11), float64] */;
  %883 = cast(%882, dtype="bool") /* ty=Tensor[(13, 5, 11), bool] */;
  %884 = shape_of(%var_5908, dtype="int32") /* ty=Tensor[(3), int32] */;
  %885 = cast(%var_5908, dtype="bool") /* ty=Tensor[(13, 5, 11), bool] */;
  %886 = dyn.reshape(%883, %884, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %887 = cast(%882, dtype="float32") /* ty=Tensor[(13, 5, 11), float32] */;
  %888 = cosh(%887) /* ty=Tensor[(13, 5, 11), float32] */;
  %889 = cast(meta[relay.Constant][41] /* ty=Tensor[(13, 5, 11), float32] */, dtype="float32") /* ty=Tensor[(13, 5, 11), float32] */;
  %890 = shape_of(%888, dtype="int32") /* ty=Tensor[(3), int32] */;
  %891 = cast(%888, dtype="float32") /* ty=Tensor[(13, 5, 11), float32] */;
  %892 = dyn.reshape(%889, %890, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %893 = @func_4023() /* ty=(Tensor[(2, 12, 9), bool],) */;
  %894 = cast(%var_5965, dtype="float32") /* ty=Tensor[(81, 10), float32] */;
  %895 = reshape(%894, newshape=[9, 15, 6]) /* ty=Tensor[(9, 15, 6), float32] */;
  %896 = @func_2665(%895) /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(9, 15, 6), uint8], Tensor[(9, 15, 6), bool]) */;
  %897 = %879.0;
  %898 = %880.0;
  %899 = logical_and(%885, %886) /* ty=Tensor[(13, 5, 11), bool] */;
  %900 = divide(%891, %892) /* ty=Tensor[(13, 5, 11), float32] */;
  %901 = %893.0;
  %902 = %896.3;
  (%897, %898, %899, %900, %901, %902, %var_5965)
}

def @func_8061(%var_8049: Tensor[(2, 11, 3), int16], %var_8050: Tensor[(2, 11, 3), int16]) -> Tensor[(2, 11, 3), int16] {
  %903 = cast(%var_8050, dtype="int16") /* ty=Tensor[(2, 11, 3), int16] */;
  %904 = shape_of(%var_8049, dtype="int32") /* ty=Tensor[(3), int32] */;
  %905 = cast(%var_8049, dtype="int16") /* ty=Tensor[(2, 11, 3), int16] */;
  %906 = dyn.reshape(%903, %904, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  bitwise_xor(%905, %906) /* ty=Tensor[(2, 11, 3), int16] */
}

def @func_11197() -> Tensor[(1404), int8] {
  %907 = @func_6806() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(12, 13, 9), int8], Tensor[(1404), int8], Tensor[(2, 12, 9), bool]) */;
  %907.2
}

def @func_9601() -> Tensor[(2, 12, 9), float32] {
  @func_4985() /* ty=Tensor[(2, 12, 9), float32] */
}

def @func_2207() -> (Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) {
  %908 = @func_1015() /* ty=(Tensor[(2, 12, 9), float32],) */;
  %909 = @func_595() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool]) */;
  %910 = @func_2043() /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32]) */;
  %911 = %909.1;
  %912 = cast(%911, dtype="bool") /* ty=Tensor[(2, 12, 9), bool] */;
  %913 = reshape(%912, newshape=[2, 12, 9]) /* ty=Tensor[(2, 12, 9), bool] */;
  %914 = @func_1774(%913) /* ty=(Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64]) */;
  %915 = %908.0;
  %916 = %910.1;
  %917 = @func_1064() /* ty=Tensor[(2, 12, 9), float64] */;
  %918 = %914.2;
  (%915, %911, %916, %917, %918)
}

def @func_1337() -> (Tensor[(2, 12, 9), float64],) {
  %919 = @func_542() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */;
  %920 = %919.1;
  (%920,)
}

def @func_2578(%var_2549: Tensor[(15, 1, 1), float64], %var_2561: Tensor[(8, 44), int8]) -> (Tensor[(8, 14, 4), float32], Tensor[(448), float32], Tensor[(8, 44), float64], Tensor[(15, 8, 44), uint16]) {
  %921 = cast(meta[relay.Constant][42] /* ty=Tensor[(448), float32] */, dtype="float32") /* ty=Tensor[(448), float32] */;
  %922 = cast(meta[relay.Constant][42] /* ty=Tensor[(448), float32] */, dtype="float32") /* ty=Tensor[(448), float32] */;
  %923 = cast(%var_2561, dtype="int8") /* ty=Tensor[(8, 44), int8] */;
  %924 = reshape(%921, newshape=[8, 14, 4]) /* ty=Tensor[(8, 14, 4), float32] */;
  %925 = reshape(%922, newshape=[8, 14, 4]) /* ty=Tensor[(8, 14, 4), float32] */;
  %926 = reshape(%923, newshape=[352]) /* ty=Tensor[(352), int8] */;
  %927 = @func_1118(%924, %925, %926) /* ty=(Tensor[(8, 14, 4), float32], Tensor[(11, 2, 16), int8], Tensor[(352), int8]) */;
  %928 = cast(%var_2561, dtype="float64") /* ty=Tensor[(8, 44), float64] */;
  %929 = cast(%var_2549, dtype="float64") /* ty=Tensor[(15, 1, 1), float64] */;
  %930 = atanh(%929) /* ty=Tensor[(15, 1, 1), float64] */;
  %931 = cast(%930, dtype="bool") /* ty=Tensor[(15, 1, 1), bool] */;
  %932 = cast(%var_2561, dtype="bool") /* ty=Tensor[(8, 44), bool] */;
  %933 = less_equal(%931, %932) /* ty=Tensor[(15, 8, 44), bool] */;
  %934 = cast(%933, dtype="uint16") /* ty=Tensor[(15, 8, 44), uint16] */;
  %935 = cast(%var_2549, dtype="uint16") /* ty=Tensor[(15, 1, 1), uint16] */;
  %936 = %927.0;
  %937 = cosh(%928) /* ty=Tensor[(8, 44), float64] */;
  %938 = bitwise_and(%934, %935) /* ty=Tensor[(15, 8, 44), uint16] */;
  (%936, meta[relay.Constant][42] /* ty=Tensor[(448), float32] */, %937, %938)
}

def @func_10270() -> (Tensor[(216), float32], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) {
  %939 = @func_4638() /* ty=(Tensor[(2, 12, 9), bool], Tensor[(216), float32], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64]) */;
  %940 = @func_8035() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %941 = @func_1145() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %942 = %939.1;
  %943 = %940.0;
  %944 = %941.0;
  (%942, %943, %944)
}

def @func_8288(%var_8284: Tensor[(936), uint32]) -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(13, 6, 12), uint16], Tensor[(936), uint32]) {
  %945 = @func_4240() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %946 = cast(%var_8284, dtype="uint32") /* ty=Tensor[(936), uint32] */;
  %947 = cast(%var_8284, dtype="uint32") /* ty=Tensor[(936), uint32] */;
  %948 = reshape(%946, newshape=[13, 6, 12]) /* ty=Tensor[(13, 6, 12), uint32] */;
  %949 = reshape(%947, newshape=[13, 6, 12]) /* ty=Tensor[(13, 6, 12), uint32] */;
  %950 = @func_5840(%948, %949) /* ty=(Tensor[(13, 6, 12), bool], Tensor[(13, 6, 12), uint16]) */;
  %951 = @func_8083() /* ty=Tensor[(2, 12, 9), float64] */;
  %952 = %945.0;
  %953 = @func_8104() /* ty=Tensor[(2, 12, 9), bool] */;
  %954 = %950.1;
  (%951, %952, %953, %954, %var_8284)
}

def @func_7569() -> (Tensor[(2, 12, 9), float32],) {
  %955 = @func_4057() /* ty=(Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool]) */;
  %956 = %955.0;
  (%956,)
}

def @func_6401() -> (Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) {
  %957 = @func_4240() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %958 = @func_6350() /* ty=Tensor[(2, 12, 9), float32] */;
  %959 = %957.0;
  %960 = @func_5638() /* ty=Tensor[(2, 12, 9), float64] */;
  (%958, %959, %960)
}

def @func_11090() -> Tensor[(2, 12, 9), float32] {
  %961 = @func_9851() /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32]) */;
  %961.1
}

def @func_9313(%var_9299: Tensor[(352), int8]) -> (Tensor[(2, 12, 9), float64], Tensor[(7, 8, 3), float32], Tensor[(1, 168), float32], Tensor[(2, 12, 9), float32], Tensor[(352), int8], Tensor[(2, 12, 9), float64], Tensor[(2, 11, 3), int16], Tensor[(66), int16]) {
  %962 = cast(meta[relay.Constant][43] /* ty=Tensor[(1, 168), float32] */, dtype="float32") /* ty=Tensor[(1, 168), float32] */;
  %963 = reshape(%962, newshape=[7, 8, 3]) /* ty=Tensor[(7, 8, 3), float32] */;
  %964 = cast(%var_9299, dtype="int8") /* ty=Tensor[(352), int8] */;
  %965 = reshape(%964, newshape=[352]) /* ty=Tensor[(352), int8] */;
  %966 = @func_3863(%965) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32], Tensor[(352), int8]) */;
  %967 = @func_1454() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %968 = cast(meta[relay.Constant][44] /* ty=Tensor[(66), int16] */, dtype="int16") /* ty=Tensor[(66), int16] */;
  %969 = cast(meta[relay.Constant][44] /* ty=Tensor[(66), int16] */, dtype="int16") /* ty=Tensor[(66), int16] */;
  %970 = reshape(%968, newshape=[2, 11, 3]) /* ty=Tensor[(2, 11, 3), int16] */;
  %971 = reshape(%969, newshape=[2, 11, 3]) /* ty=Tensor[(2, 11, 3), int16] */;
  %972 = @func_1618() /* ty=Tensor[(2, 12, 9), float64] */;
  %973 = @func_4767(%963) /* ty=Tensor[(7, 8, 3), float32] */;
  %974 = %966.1;
  %975 = %967.0;
  %976 = @func_8061(%970, %971) /* ty=Tensor[(2, 11, 3), int16] */;
  (%972, %973, meta[relay.Constant][43] /* ty=Tensor[(1, 168), float32] */, %974, %var_9299, %975, %976, meta[relay.Constant][44] /* ty=Tensor[(66), int16] */)
}

def @func_1145() -> (Tensor[(2, 12, 9), float64],) {
  %977 = @func_595() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool]) */;
  %978 = %977.0;
  (%978,)
}

def @func_5840(%var_5816: Tensor[(13, 6, 12), uint32], %var_5831: Tensor[(13, 6, 12), uint32]) -> (Tensor[(13, 6, 12), bool], Tensor[(13, 6, 12), uint16]) {
  %979 = cast(%var_5816, dtype="uint32") /* ty=Tensor[(13, 6, 12), uint32] */;
  %980 = shape_of(meta[relay.Constant][45] /* ty=Tensor[(13, 6, 12), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %981 = cast(meta[relay.Constant][45] /* ty=Tensor[(13, 6, 12), uint32] */, dtype="uint32") /* ty=Tensor[(13, 6, 12), uint32] */;
  %982 = dyn.reshape(%979, %980, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %983 = add(%981, %982) /* ty=Tensor[(13, 6, 12), uint32] */;
  %984 = cast(%983, dtype="bool") /* ty=Tensor[(13, 6, 12), bool] */;
  %985 = shape_of(%var_5816, dtype="int32") /* ty=Tensor[(3), int32] */;
  %986 = cast(%var_5816, dtype="bool") /* ty=Tensor[(13, 6, 12), bool] */;
  %987 = dyn.reshape(%984, %985, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %988 = cast(%var_5831, dtype="uint16") /* ty=Tensor[(13, 6, 12), uint16] */;
  %989 = shape_of(%var_5816, dtype="int32") /* ty=Tensor[(3), int32] */;
  %990 = cast(%var_5816, dtype="uint16") /* ty=Tensor[(13, 6, 12), uint16] */;
  %991 = dyn.reshape(%988, %989, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %992 = greater_equal(%986, %987) /* ty=Tensor[(13, 6, 12), bool] */;
  %993 = bitwise_or(%990, %991) /* ty=Tensor[(13, 6, 12), uint16] */;
  (%992, %993)
}

def @func_7917() -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), bool]) {
  %994 = @func_4222() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %995 = @func_3322() /* ty=Tensor[(2, 12, 9), float32] */;
  %996 = cast(%995, dtype="float64") /* ty=Tensor[(2, 12, 9), float64] */;
  %997 = reshape(%996, newshape=[2, 12, 9]) /* ty=Tensor[(2, 12, 9), float64] */;
  %998 = @func_5747(%997) /* ty=(Tensor[(2, 12, 9), bool],) */;
  %999 = %994.0;
  %1000 = %998.0;
  (%999, %995, %1000)
}

def @func_10847() -> Tensor[(2, 12, 9), float64] {
  @func_7371() /* ty=Tensor[(2, 12, 9), float64] */
}

def @func_7564() -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float32]) {
  %1001 = @func_7251() /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */;
  %1002 = %1001.1;
  %1003 = @func_6350() /* ty=Tensor[(2, 12, 9), float32] */;
  (%1002, %1003)
}

def @func_4985() -> Tensor[(2, 12, 9), float32] {
  %1004 = @func_1015() /* ty=(Tensor[(2, 12, 9), float32],) */;
  %1004.0
}

def @func_5499() -> (Tensor[(2, 12, 9), float64],) {
  %1005 = @func_1454() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %1006 = %1005.0;
  (%1006,)
}

def @func_6694(%var_6686: Tensor[(6, 13, 13), int64]) -> Tensor[(6, 13, 13), bool] {
  %1007 = cast(%var_6686, dtype="bool") /* ty=Tensor[(6, 13, 13), bool] */;
  %1008 = shape_of(meta[relay.Constant][46] /* ty=Tensor[(6, 13, 13), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1009 = cast(meta[relay.Constant][46] /* ty=Tensor[(6, 13, 13), int64] */, dtype="bool") /* ty=Tensor[(6, 13, 13), bool] */;
  %1010 = dyn.reshape(%1007, %1008, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%1009, %1010) /* ty=Tensor[(6, 13, 13), bool] */
}

def @func_6001() -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool]) {
  %1011 = @func_2273() /* ty=Tensor[(2, 12, 9), float64] */;
  %1012 = cast(%1011, dtype="bool") /* ty=Tensor[(2, 12, 9), bool] */;
  %1013 = reshape(%1012, newshape=[2, 12, 9]) /* ty=Tensor[(2, 12, 9), bool] */;
  %1014 = @func_435(%1013) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64]) */;
  %1015 = %1014.0;
  (%1011, %1015)
}

def @func_10390() -> Tensor[(4, 10, 12), float32] {
  %1016 = cast(meta[relay.Constant][47] /* ty=Tensor[(4, 10, 12), float32] */, dtype="float32") /* ty=Tensor[(4, 10, 12), float32] */;
  asin(%1016) /* ty=Tensor[(4, 10, 12), float32] */
}

def @func_5442(%var_5420: Tensor[(104, 8), float64]) -> (Tensor[(2, 12, 9), bool], Tensor[(8, 8, 13), bool], Tensor[(104, 8), float64], Tensor[(2, 12, 9), float32]) {
  %1017 = cast(%var_5420, dtype="float64") /* ty=Tensor[(104, 8), float64] */;
  %1018 = reshape(%1017, newshape=[416, 2]) /* ty=Tensor[(416, 2), float64] */;
  %1019 = @func_4132(%1018) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(8, 8, 13), bool], Tensor[(416, 2), float64]) */;
  %1020 = @func_2925() /* ty=(Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), float64]) */;
  %1021 = @func_623() /* ty=Tensor[(2, 12, 9), bool] */;
  %1022 = %1019.1;
  %1023 = %1020.0;
  (%1021, %1022, %var_5420, %1023)
}

def @func_3270() -> (Tensor[(2, 12, 9), bool],) {
  %1024 = @func_1029() /* ty=Tensor[(2, 12, 9), bool] */;
  (%1024,)
}

def @func_365() -> (Tensor[(2, 12, 9), bool],) {
  %1025 = @func_342() /* ty=(Tensor[(3, 2, 14), uint32], Tensor[(2, 12, 9), bool], Tensor[(216), float32], Tensor[(2, 12, 9), float32]) */;
  %1026 = %1025.1;
  (%1026,)
}

def @func_6286(%var_6283: Tensor[(6, 156), uint32]) -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(13, 6, 12), bool], Tensor[(6, 156), uint32]) {
  %1027 = @func_2863() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64]) */;
  %1028 = @func_542() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */;
  %1029 = cast(%var_6283, dtype="uint32") /* ty=Tensor[(6, 156), uint32] */;
  %1030 = cast(%var_6283, dtype="uint32") /* ty=Tensor[(6, 156), uint32] */;
  %1031 = reshape(%1029, newshape=[13, 6, 12]) /* ty=Tensor[(13, 6, 12), uint32] */;
  %1032 = reshape(%1030, newshape=[13, 6, 12]) /* ty=Tensor[(13, 6, 12), uint32] */;
  %1033 = @func_5840(%1031, %1032) /* ty=(Tensor[(13, 6, 12), bool], Tensor[(13, 6, 12), uint16]) */;
  %1034 = %1027.2;
  %1035 = %1028.0;
  %1036 = %1033.0;
  (%1034, %1035, %1036, %var_6283)
}

def @func_3322() -> Tensor[(2, 12, 9), float32] {
  %1037 = @func_2043() /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32]) */;
  %1037.1
}

def @func_4132(%var_4110: Tensor[(416, 2), float64]) -> (Tensor[(2, 12, 9), bool], Tensor[(8, 8, 13), bool], Tensor[(416, 2), float64]) {
  %1038 = @func_2467() /* ty=(Tensor[(2, 12, 9), bool],) */;
  %1039 = cast(meta[relay.Constant][48] /* ty=Tensor[(416, 2), bool] */, dtype="bool") /* ty=Tensor[(416, 2), bool] */;
  %1040 = cast(meta[relay.Constant][48] /* ty=Tensor[(416, 2), bool] */, dtype="bool") /* ty=Tensor[(416, 2), bool] */;
  %1041 = reshape(%1039, newshape=[8, 8, 13]) /* ty=Tensor[(8, 8, 13), bool] */;
  %1042 = reshape(%1040, newshape=[8, 8, 13]) /* ty=Tensor[(8, 8, 13), bool] */;
  %1043 = @func_3055(%1041, %1042) /* ty=(Tensor[(8, 8, 13), bool], Tensor[(2, 12, 9), bool]) */;
  %1044 = cast(meta[relay.Constant][48] /* ty=Tensor[(416, 2), bool] */, dtype="float64") /* ty=Tensor[(416, 2), float64] */;
  %1045 = acosh(%1044) /* ty=Tensor[(416, 2), float64] */;
  %1046 = cast(%var_4110, dtype="float64") /* ty=Tensor[(416, 2), float64] */;
  %1047 = shape_of(%1045, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1048 = cast(%1045, dtype="float64") /* ty=Tensor[(416, 2), float64] */;
  %1049 = dyn.reshape(%1046, %1047, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %1050 = %1038.0;
  %1051 = %1043.0;
  %1052 = mod(%1048, %1049) /* ty=Tensor[(416, 2), float64] */;
  (%1050, %1051, %1052)
}

def @func_4142() -> (Tensor[(2, 12, 9), float64],) {
  %1053 = @func_1145() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %1054 = %1053.0;
  (%1054,)
}

def @func_1374() -> Tensor[(2, 12, 9), bool] {
  %1055 = @func_365() /* ty=(Tensor[(2, 12, 9), bool],) */;
  %1055.0
}

def @func_10147() -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) {
  %1056 = @func_7917() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), bool]) */;
  %1057 = @func_7917() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), bool]) */;
  %1058 = %1056.0;
  %1059 = %1057.0;
  (%1058, %1059)
}

def @func_2532(%var_2526: Tensor[(6, 4, 13), uint32]) -> Tensor[(6, 4, 13), uint32] {
  %1060 = cast(%var_2526, dtype="uint32") /* ty=Tensor[(6, 4, 13), uint32] */;
  %1061 = shape_of(meta[relay.Constant][49] /* ty=Tensor[(6, 4, 13), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1062 = cast(meta[relay.Constant][49] /* ty=Tensor[(6, 4, 13), uint32] */, dtype="uint32") /* ty=Tensor[(6, 4, 13), uint32] */;
  %1063 = dyn.reshape(%1060, %1061, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  subtract(%1062, %1063) /* ty=Tensor[(6, 4, 13), uint32] */
}

def @func_1581() -> Tensor[(2, 12, 9), float64] {
  @func_1406() /* ty=Tensor[(2, 12, 9), float64] */
}

def @func_393() -> (Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32]) {
  %1064 = @func_342() /* ty=(Tensor[(3, 2, 14), uint32], Tensor[(2, 12, 9), bool], Tensor[(216), float32], Tensor[(2, 12, 9), float32]) */;
  %1065 = %1064.1;
  %1066 = cast(%1065, dtype="float32") /* ty=Tensor[(2, 12, 9), float32] */;
  %1067 = cast(%1065, dtype="float32") /* ty=Tensor[(2, 12, 9), float32] */;
  %1068 = reshape(%1066, newshape=[2, 12, 9]) /* ty=Tensor[(2, 12, 9), float32] */;
  %1069 = reshape(%1067, newshape=[2, 12, 9]) /* ty=Tensor[(2, 12, 9), float32] */;
  %1070 = @func_179(%1068, %1069) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float32]) */;
  %1071 = %1070.2;
  (%1065, %1071)
}

def @func_2043() -> (Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32]) {
  %1072 = @func_1374() /* ty=Tensor[(2, 12, 9), bool] */;
  %1073 = cast(%1072, dtype="float64") /* ty=Tensor[(2, 12, 9), float64] */;
  %1074 = reshape(%1073, newshape=[2, 12, 9]) /* ty=Tensor[(2, 12, 9), float64] */;
  %1075 = @func_1689(%1074) /* ty=(Tensor[(2, 12, 9), float32],) */;
  %1076 = %1075.0;
  (%1072, %1076)
}

def @func_1689(%var_1674: Tensor[(2, 12, 9), float64]) -> (Tensor[(2, 12, 9), float32],) {
  %1077 = @func_1454() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %1078 = %1077.0;
  %1079 = cast(%var_1674, dtype="uint8") /* ty=Tensor[(2, 12, 9), uint8] */;
  %1080 = shape_of(%1078, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1081 = cast(%1078, dtype="uint8") /* ty=Tensor[(2, 12, 9), uint8] */;
  %1082 = dyn.reshape(%1079, %1080, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1083 = bitwise_and(%1081, %1082) /* ty=Tensor[(2, 12, 9), uint8] */;
  %1084 = cast(%1083, dtype="float32") /* ty=Tensor[(2, 12, 9), float32] */;
  %1085 = atan(%1084) /* ty=Tensor[(2, 12, 9), float32] */;
  (%1085,)
}

def @func_2219() -> Tensor[(2, 12, 9), bool] {
  @func_1913() /* ty=Tensor[(2, 12, 9), bool] */
}

def @func_9144(%var_9013: Tensor[(8, 1, 11), float32], %var_9018: Tensor[(8, 3, 11), bool], %var_9094: Tensor[(8, 7, 11), float32], %var_9118: Tensor[(176), float64]) -> (Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64], Tensor[(8, 3, 11), float32], Tensor[(2, 12, 9), float64], Tensor[(8, 7, 11), float32], Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), bool], Tensor[(176), float64], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float32]) {
  %1086 = @func_2207() /* ty=(Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */;
  %1087 = @func_3953() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */;
  %1088 = cast(%var_9013, dtype="bool") /* ty=Tensor[(8, 1, 11), bool] */;
  %1089 = shape_of(meta[relay.Constant][50] /* ty=Tensor[(8, 1, 11), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1090 = cast(meta[relay.Constant][50] /* ty=Tensor[(8, 1, 11), float32] */, dtype="bool") /* ty=Tensor[(8, 1, 11), bool] */;
  %1091 = dyn.reshape(%1088, %1089, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1092 = greater(%1090, %1091) /* ty=Tensor[(8, ?, 11), bool] */;
  %1093 = cast(%1092, dtype="bool") /* ty=Tensor[(8, ?, 11), bool] */;
  %1094 = cast(%var_9018, dtype="bool") /* ty=Tensor[(8, 3, 11), bool] */;
  %1095 = logical_or(%1093, %1094) /* ty=Tensor[(8, 3, 11), bool] */;
  %1096 = cast(%var_9013, dtype="float32") /* ty=Tensor[(8, 1, 11), float32] */;
  %1097 = cast(%1095, dtype="float32") /* ty=Tensor[(8, 3, 11), float32] */;
  %1098 = @func_7515() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(13, 6, 12), bool], Tensor[(936), uint32], Tensor[(2, 12, 9), float32]) */;
  %1099 = cast(%var_9013, dtype="float64") /* ty=Tensor[(8, 1, 11), float64] */;
  %1100 = tan(%1099) /* ty=Tensor[(8, 1, 11), float64] */;
  %1101 = cast(meta[relay.Constant][51] /* ty=Tensor[(8, 1, 11), float64] */, dtype="float32") /* ty=Tensor[(8, 1, 11), float32] */;
  %1102 = shape_of(%1100, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1103 = cast(%1100, dtype="float32") /* ty=Tensor[(8, 1, 11), float32] */;
  %1104 = dyn.reshape(%1101, %1102, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1105 = divide(%1103, %1104) /* ty=Tensor[(8, ?, 11), float32] */;
  %1106 = cast(%1105, dtype="float32") /* ty=Tensor[(8, ?, 11), float32] */;
  %1107 = cast(%var_9094, dtype="float32") /* ty=Tensor[(8, 7, 11), float32] */;
  %1108 = cast(%var_9118, dtype="float64") /* ty=Tensor[(176), float64] */;
  %1109 = reshape(%1108, newshape=[1, 11, 16]) /* ty=Tensor[(1, 11, 16), float64] */;
  %1110 = @func_7174(%1109) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), bool], Tensor[(832), bool], Tensor[(1, 11, 16), float64]) */;
  %1111 = @func_4240() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %1112 = %1086.1;
  %1113 = %1087.1;
  %1114 = floor_mod(%1096, %1097) /* ty=Tensor[(8, 3, 11), float32] */;
  %1115 = %1098.0;
  %1116 = mod(%1106, %1107) /* ty=Tensor[(8, 7, 11), float32] */;
  %1117 = @func_3322() /* ty=Tensor[(2, 12, 9), float32] */;
  %1118 = %1110.0;
  %1119 = %1111.0;
  %1120 = @func_3641() /* ty=Tensor[(2, 12, 9), float32] */;
  (%1112, %1113, %1114, %1115, %1116, %1117, %1118, %var_9118, %1119, %1120)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_4223() -> (Tensor[(2, 12, 9), float64],) {
  %1 = fn () -> (Tensor[(2, 12, 9), float64],) {
    %0 = @func_1581() /* ty=Tensor[(2, 12, 9), float64] */;
    (%0,)
  };
  %1() /* ty=(Tensor[(2, 12, 9), float64],) */
}

def @func_3323() -> Tensor[(2, 12, 9), float32] {
  %3 = fn () -> Tensor[(2, 12, 9), float32] {
    %2 = @func_2043() /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32]) */;
    %2.1
  };
  %3() /* ty=Tensor[(2, 12, 9), float32] */
}

def @func_8291(%var_8289: Tensor[(936), uint32]) -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(13, 6, 12), uint16], Tensor[(936), uint32]) {
  @func_8288(%var_8289) /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(13, 6, 12), uint16], Tensor[(936), uint32]) */
}

def @func_6720() -> Tensor[(2, 12, 9), bool] {
  @func_6718() /* ty=Tensor[(2, 12, 9), bool] */
}

def @main(%var_11505: Tensor[(1, 3, 7), float32]) -> (Tensor[(?, 3, 7), bool], Tensor[(1, 3, 7), float64]) {
  %4 = cast(%var_11505, dtype="float32") /* ty=Tensor[(1, 3, 7), float32] */;
  %5 = asin(%4) /* ty=Tensor[(1, 3, 7), float32] */;
  %6 = cast(%var_11505, dtype="bool") /* ty=Tensor[(1, 3, 7), bool] */;
  %7 = shape_of(%5, dtype="int32") /* ty=Tensor[(3), int32] */;
  %8 = cast(%5, dtype="bool") /* ty=Tensor[(1, 3, 7), bool] */;
  %9 = dyn.reshape(%6, %7, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %10 = cast(%var_11505, dtype="float64") /* ty=Tensor[(1, 3, 7), float64] */;
  %11 = less_equal(%8, %9) /* ty=Tensor[(?, 3, 7), bool] */;
  %12 = cos(%10) /* ty=Tensor[(1, 3, 7), float64] */;
  (%11, %12)
}

def @func_1066() -> Tensor[(2, 12, 9), float64] {
  @func_1064() /* ty=Tensor[(2, 12, 9), float64] */
}

def @func_5166() -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(8, 14, 9), bool], Tensor[(12, 84), uint8]) {
  %21 = fn () -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(8, 14, 9), bool], Tensor[(12, 84), uint8]) {
    %13 = @func_1454() /* ty=(Tensor[(2, 12, 9), float64],) */;
    %14 = cast(meta[relay.Constant][0] /* ty=Tensor[(12, 84), uint8] */, dtype="uint8") /* ty=Tensor[(12, 84), uint8] */;
    %15 = reshape(%14, newshape=[1008]) /* ty=Tensor[(1008), uint8] */;
    %16 = @func_901(%15) /* ty=(Tensor[(2, 12, 9), float64], Tensor[(216), float32], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), int16], Tensor[(8, 14, 9), bool], uint8, Tensor[(1008), uint8]) */;
    %17 = %13.0;
    %18 = @func_1581() /* ty=Tensor[(2, 12, 9), float64] */;
    %19 = @func_4825() /* ty=Tensor[(2, 12, 9), bool] */;
    %20 = %16.4;
    (%17, %18, %19, %20, meta[relay.Constant][0] /* ty=Tensor[(12, 84), uint8] */)
  };
  %21() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(8, 14, 9), bool], Tensor[(12, 84), uint8]) */
}

def @func_6764(%var_6762: Tensor[(60, 2), uint64], %var_6763: Tensor[(448), float32]) -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(60, 2), uint64], Tensor[(352), int8], Tensor[(448), float32]) {
  %31 = fn (%var_6743: Tensor[(60, 2), uint64], %var_6745: Tensor[(448), float32]) -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(60, 2), uint64], Tensor[(352), int8], Tensor[(448), float32]) {
    %22 = cast(%var_6743, dtype="uint64") /* ty=Tensor[(60, 2), uint64] */;
    %23 = cast(meta[relay.Constant][1] /* ty=Tensor[(352), int8] */, dtype="int8") /* ty=Tensor[(352), int8] */;
    %24 = cast(%var_6745, dtype="float32") /* ty=Tensor[(448), float32] */;
    %25 = reshape(%22, newshape=[120]) /* ty=Tensor[(120), uint64] */;
    %26 = reshape(%23, newshape=[352]) /* ty=Tensor[(352), int8] */;
    %27 = reshape(%24, newshape=[448, 1]) /* ty=Tensor[(448, 1), float32] */;
    %28 = @func_5073(%25, %26, %27) /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(6, 2, 10), bool], Tensor[(60), uint64], Tensor[(120), uint64], Tensor[(2, 12, 9), bool], Tensor[(352), int8], Tensor[(11, 2, 16), int8], Tensor[(448, 1), float32], Tensor[(11, 2, 16), int8], Tensor[(2, 12, 9), float32]) */;
    %29 = @func_6679() /* ty=Tensor[(2, 12, 9), float64] */;
    %30 = %28.5;
    (%29, %30, %var_6743, meta[relay.Constant][1] /* ty=Tensor[(352), int8] */, %var_6745)
  };
  %31(%var_6762, %var_6763) /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(60, 2), uint64], Tensor[(352), int8], Tensor[(448), float32]) */
}

def @func_8449() -> Tensor[(8, 8, 13), bool] {
  %32 = @func_4448() /* ty=(Tensor[(8, 14, 9), bool], Tensor[(8, 8, 13), bool], Tensor[(2, 416), float64]) */;
  %32.1
}

def @func_2927() -> (Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), float64]) {
  @func_2925() /* ty=(Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), float64]) */
}

def @func_10391() -> Tensor[(4, 10, 12), float32] {
  %34 = fn () -> Tensor[(4, 10, 12), float32] {
    %33 = cast(meta[relay.Constant][2] /* ty=Tensor[(4, 10, 12), float32] */, dtype="float32") /* ty=Tensor[(4, 10, 12), float32] */;
    asin(%33) /* ty=Tensor[(4, 10, 12), float32] */
  };
  %34() /* ty=Tensor[(4, 10, 12), float32] */
}

def @func_5197() -> Tensor[(2, 12, 9), float64] {
  %36 = fn () -> Tensor[(2, 12, 9), float64] {
    %35 = @func_2455() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */;
    %35.0
  };
  %36() /* ty=Tensor[(2, 12, 9), float64] */
}

def @func_395() -> (Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32]) {
  @func_393() /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32]) */
}

def @func_3220() -> (Tensor[(2, 12, 9), bool],) {
  %38 = fn () -> (Tensor[(2, 12, 9), bool],) {
    %37 = @func_1029() /* ty=Tensor[(2, 12, 9), bool] */;
    (%37,)
  };
  %38() /* ty=(Tensor[(2, 12, 9), bool],) */
}

def @func_1915() -> Tensor[(2, 12, 9), bool] {
  @func_1913() /* ty=Tensor[(2, 12, 9), bool] */
}

def @func_1913() -> Tensor[(2, 12, 9), bool] {
  %39 = @func_365() /* ty=(Tensor[(2, 12, 9), bool],) */;
  %39.0
}

def @func_455(%var_453: uint8, %var_454: Tensor[(8, 14, 9), uint8]) -> Tensor[(8, 14, 9), bool] {
  %42 = fn (%var_447: uint8, %var_448: Tensor[(8, 14, 9), uint8]) -> Tensor[(8, 14, 9), bool] {
    %40 = cast(%var_447, dtype="bool") /* ty=bool */;
    %41 = cast(%var_448, dtype="bool") /* ty=Tensor[(8, 14, 9), bool] */;
    less_equal(%40, %41) /* ty=Tensor[(8, 14, 9), bool] */
  };
  %42(%var_453, %var_454) /* ty=Tensor[(8, 14, 9), bool] */
}

def @func_4307() -> Tensor[(2, 12, 9), float64] {
  %43 = @func_3420() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %43.0
}

def @func_9641() -> (Tensor[(2, 12, 9), float64],) {
  %44 = @func_4240() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %45 = %44.0;
  (%45,)
}

def @func_1122(%var_1119: Tensor[(8, 14, 4), float32], %var_1120: Tensor[(8, 14, 4), float32], %var_1121: Tensor[(352), int8]) -> (Tensor[(8, 14, 4), float32], Tensor[(11, 2, 16), int8], Tensor[(352), int8]) {
  %59 = fn (%var_1107: Tensor[(8, 14, 4), float32], %var_1108: Tensor[(8, 14, 4), float32], %var_1113: Tensor[(352), int8]) -> (Tensor[(8, 14, 4), float32], Tensor[(11, 2, 16), int8], Tensor[(352), int8]) {
    %46 = cast(%var_1108, dtype="float32") /* ty=Tensor[(8, 14, 4), float32] */;
    %47 = shape_of(%var_1107, dtype="int32") /* ty=Tensor[(3), int32] */;
    %48 = cast(%var_1107, dtype="float32") /* ty=Tensor[(8, 14, 4), float32] */;
    %49 = dyn.reshape(%46, %47, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %50 = cast(%var_1113, dtype="int8") /* ty=Tensor[(352), int8] */;
    %51 = cast(%var_1113, dtype="int8") /* ty=Tensor[(352), int8] */;
    %52 = cast(%var_1113, dtype="int8") /* ty=Tensor[(352), int8] */;
    %53 = reshape(%50, newshape=[11, 2, 16]) /* ty=Tensor[(11, 2, 16), int8] */;
    %54 = reshape(%51, newshape=[11, 2, 16]) /* ty=Tensor[(11, 2, 16), int8] */;
    %55 = reshape(%52, newshape=[11, 2, 16]) /* ty=Tensor[(11, 2, 16), int8] */;
    %56 = @func_710(%53, %54, %55) /* ty=(Tensor[(11, 2, 16), float32], Tensor[(11, 2, 16), int8]) */;
    %57 = power(%48, %49) /* ty=Tensor[(8, 14, 4), float32] */;
    %58 = %56.1;
    (%57, %58, %var_1113)
  };
  %59(%var_1119, %var_1120, %var_1121) /* ty=(Tensor[(8, 14, 4), float32], Tensor[(11, 2, 16), int8], Tensor[(352), int8]) */
}

def @func_4769(%var_4768: Tensor[(7, 8, 3), float32]) -> Tensor[(7, 8, 3), float32] {
  %61 = fn (%var_4760: Tensor[(7, 8, 3), float32]) -> Tensor[(7, 8, 3), float32] {
    %60 = cast(%var_4760, dtype="float32") /* ty=Tensor[(7, 8, 3), float32] */;
    log(%60) /* ty=Tensor[(7, 8, 3), float32] */
  };
  %61(%var_4768) /* ty=Tensor[(7, 8, 3), float32] */
}

def @func_1147() -> (Tensor[(2, 12, 9), float64],) {
  @func_1145() /* ty=(Tensor[(2, 12, 9), float64],) */
}

def @func_764() -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) {
  @func_762() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */
}

def @func_6679() -> Tensor[(2, 12, 9), float64] {
  %62 = @func_542() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */;
  %62.1
}

def @func_2219() -> Tensor[(2, 12, 9), bool] {
  @func_1913() /* ty=Tensor[(2, 12, 9), bool] */
}

def @func_366() -> (Tensor[(2, 12, 9), bool],) {
  %65 = fn () -> (Tensor[(2, 12, 9), bool],) {
    %63 = @func_342() /* ty=(Tensor[(3, 2, 14), uint32], Tensor[(2, 12, 9), bool], Tensor[(216), float32], Tensor[(2, 12, 9), float32]) */;
    %64 = %63.1;
    (%64,)
  };
  %65() /* ty=(Tensor[(2, 12, 9), bool],) */
}

def @func_6850() -> Tensor[(2, 12, 9), bool] {
  @func_6848() /* ty=Tensor[(2, 12, 9), bool] */
}

def @func_11336(%var_11334: Tensor[(832), float64]) -> Tensor[(832), float32] {
  @func_11333(%var_11334) /* ty=Tensor[(832), float32] */
}

def @func_5500() -> (Tensor[(2, 12, 9), float64],) {
  %68 = fn () -> (Tensor[(2, 12, 9), float64],) {
    %66 = @func_1454() /* ty=(Tensor[(2, 12, 9), float64],) */;
    %67 = %66.0;
    (%67,)
  };
  %68() /* ty=(Tensor[(2, 12, 9), float64],) */
}

def @func_8420(%var_8418: Tensor[(14, 7, 16), float32]) -> (Tensor[(14, 7, 16), float32], Tensor[(13, 6, 12), bool], Tensor[(936), uint32]) {
  @func_8417(%var_8418) /* ty=(Tensor[(14, 7, 16), float32], Tensor[(13, 6, 12), bool], Tensor[(936), uint32]) */
}

def @func_762() -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) {
  %69 = @func_393() /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32]) */;
  %70 = %69.0;
  %71 = cast(%70, dtype="float64") /* ty=Tensor[(2, 12, 9), float64] */;
  %72 = @func_595() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool]) */;
  %73 = cos(%71) /* ty=Tensor[(2, 12, 9), float64] */;
  %74 = %72.0;
  (%73, %74)
}

def @func_6848() -> Tensor[(2, 12, 9), bool] {
  %75 = @func_4189() /* ty=(Tensor[(2, 12, 9), bool],) */;
  %75.0
}

def @func_1692(%var_1690: Tensor[(2, 12, 9), float64]) -> (Tensor[(2, 12, 9), float32],) {
  @func_1689(%var_1690) /* ty=(Tensor[(2, 12, 9), float32],) */
}

def @func_4753(%var_4751: Tensor[(352), int8]) -> (Tensor[(2, 12, 9), float32], Tensor[(352), int8], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), bool], Tensor[(1008), uint8], Tensor[(2, 12, 9), float64], Tensor[(11, 11, 5), uint8]) {
  @func_4750(%var_4751) /* ty=(Tensor[(2, 12, 9), float32], Tensor[(352), int8], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), bool], Tensor[(1008), uint8], Tensor[(2, 12, 9), float64], Tensor[(11, 11, 5), uint8]) */
}

def @func_7253() -> (Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) {
  @func_7251() /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */
}

def @func_7917() -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), bool]) {
  %76 = @func_4222() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %77 = @func_3322() /* ty=Tensor[(2, 12, 9), float32] */;
  %78 = cast(%77, dtype="float64") /* ty=Tensor[(2, 12, 9), float64] */;
  %79 = reshape(%78, newshape=[2, 12, 9]) /* ty=Tensor[(2, 12, 9), float64] */;
  %80 = @func_5747(%79) /* ty=(Tensor[(2, 12, 9), bool],) */;
  %81 = %76.0;
  %82 = %80.0;
  (%81, %77, %82)
}

def @func_5691() -> (Tensor[(2, 12, 9), float64],) {
  %83 = @func_1064() /* ty=Tensor[(2, 12, 9), float64] */;
  (%83,)
}

def @func_5747(%var_5740: Tensor[(2, 12, 9), float64]) -> (Tensor[(2, 12, 9), bool],) {
  %84 = @func_4222() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %85 = %84.0;
  %86 = cast(%var_5740, dtype="bool") /* ty=Tensor[(2, 12, 9), bool] */;
  %87 = shape_of(%85, dtype="int32") /* ty=Tensor[(3), int32] */;
  %88 = cast(%85, dtype="bool") /* ty=Tensor[(2, 12, 9), bool] */;
  %89 = dyn.reshape(%86, %87, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %90 = greater_equal(%88, %89) /* ty=Tensor[(2, 12, 9), bool] */;
  (%90,)
}

def @func_5840(%var_5816: Tensor[(13, 6, 12), uint32], %var_5831: Tensor[(13, 6, 12), uint32]) -> (Tensor[(13, 6, 12), bool], Tensor[(13, 6, 12), uint16]) {
  %91 = cast(%var_5816, dtype="uint32") /* ty=Tensor[(13, 6, 12), uint32] */;
  %92 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(13, 6, 12), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %93 = cast(meta[relay.Constant][3] /* ty=Tensor[(13, 6, 12), uint32] */, dtype="uint32") /* ty=Tensor[(13, 6, 12), uint32] */;
  %94 = dyn.reshape(%91, %92, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %95 = add(%93, %94) /* ty=Tensor[(13, 6, 12), uint32] */;
  %96 = cast(%95, dtype="bool") /* ty=Tensor[(13, 6, 12), bool] */;
  %97 = shape_of(%var_5816, dtype="int32") /* ty=Tensor[(3), int32] */;
  %98 = cast(%var_5816, dtype="bool") /* ty=Tensor[(13, 6, 12), bool] */;
  %99 = dyn.reshape(%96, %97, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %100 = cast(%var_5831, dtype="uint16") /* ty=Tensor[(13, 6, 12), uint16] */;
  %101 = shape_of(%var_5816, dtype="int32") /* ty=Tensor[(3), int32] */;
  %102 = cast(%var_5816, dtype="uint16") /* ty=Tensor[(13, 6, 12), uint16] */;
  %103 = dyn.reshape(%100, %101, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %104 = greater_equal(%98, %99) /* ty=Tensor[(13, 6, 12), bool] */;
  %105 = bitwise_or(%102, %103) /* ty=Tensor[(13, 6, 12), uint16] */;
  (%104, %105)
}

def @func_11439(%var_11436: Tensor[(12, 5, 16), float32], %var_11437: Tensor[(126), float64], %var_11438: Tensor[(660), float64]) -> (Tensor[(12, 5, 16), float32], Tensor[(1, 9, 14), float64], Tensor[(126), float64], Tensor[(12, 5, 16), float64], Tensor[(10, 11, 6), float64], Tensor[(660), float64]) {
  %117 = fn (%var_11419: Tensor[(12, 5, 16), float32], %var_11423: Tensor[(126), float64], %var_11433: Tensor[(660), float64]) -> (Tensor[(12, 5, 16), float32], Tensor[(1, 9, 14), float64], Tensor[(126), float64], Tensor[(12, 5, 16), float64], Tensor[(10, 11, 6), float64], Tensor[(660), float64]) {
    %106 = cast(%var_11419, dtype="float32") /* ty=Tensor[(12, 5, 16), float32] */;
    %107 = cast(%var_11423, dtype="float64") /* ty=Tensor[(126), float64] */;
    %108 = reshape(%107, newshape=[1, 9, 14]) /* ty=Tensor[(1, 9, 14), float64] */;
    %109 = cast(%var_11419, dtype="float64") /* ty=Tensor[(12, 5, 16), float64] */;
    %110 = cast(%var_11433, dtype="float64") /* ty=Tensor[(660), float64] */;
    %111 = reshape(%110, newshape=[10, 11, 6]) /* ty=Tensor[(10, 11, 6), float64] */;
    %112 = @func_7530(%111) /* ty=(Tensor[(10, 11, 6), float64],) */;
    %113 = sin(%106) /* ty=Tensor[(12, 5, 16), float32] */;
    %114 = @func_10176(%108) /* ty=Tensor[(1, 9, 14), float64] */;
    %115 = sqrt(%109) /* ty=Tensor[(12, 5, 16), float64] */;
    %116 = %112.0;
    (%113, %114, %var_11423, %115, %116, %var_11433)
  };
  %117(%var_11436, %var_11437, %var_11438) /* ty=(Tensor[(12, 5, 16), float32], Tensor[(1, 9, 14), float64], Tensor[(126), float64], Tensor[(12, 5, 16), float64], Tensor[(10, 11, 6), float64], Tensor[(660), float64]) */
}

def @func_7371() -> Tensor[(2, 12, 9), float64] {
  %118 = @func_2925() /* ty=(Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), float64]) */;
  %118.1
}

def @func_7868() -> (Tensor[(2, 12, 9), float64],) {
  @func_7866() /* ty=(Tensor[(2, 12, 9), float64],) */
}

def @func_9315(%var_9314: Tensor[(352), int8]) -> (Tensor[(2, 12, 9), float64], Tensor[(7, 8, 3), float32], Tensor[(1, 168), float32], Tensor[(2, 12, 9), float32], Tensor[(352), int8], Tensor[(2, 12, 9), float64], Tensor[(2, 11, 3), int16], Tensor[(66), int16]) {
  %134 = fn (%var_9299: Tensor[(352), int8]) -> (Tensor[(2, 12, 9), float64], Tensor[(7, 8, 3), float32], Tensor[(1, 168), float32], Tensor[(2, 12, 9), float32], Tensor[(352), int8], Tensor[(2, 12, 9), float64], Tensor[(2, 11, 3), int16], Tensor[(66), int16]) {
    %119 = cast(meta[relay.Constant][4] /* ty=Tensor[(1, 168), float32] */, dtype="float32") /* ty=Tensor[(1, 168), float32] */;
    %120 = reshape(%119, newshape=[7, 8, 3]) /* ty=Tensor[(7, 8, 3), float32] */;
    %121 = cast(%var_9299, dtype="int8") /* ty=Tensor[(352), int8] */;
    %122 = reshape(%121, newshape=[352]) /* ty=Tensor[(352), int8] */;
    %123 = @func_3863(%122) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32], Tensor[(352), int8]) */;
    %124 = @func_1454() /* ty=(Tensor[(2, 12, 9), float64],) */;
    %125 = cast(meta[relay.Constant][5] /* ty=Tensor[(66), int16] */, dtype="int16") /* ty=Tensor[(66), int16] */;
    %126 = cast(meta[relay.Constant][5] /* ty=Tensor[(66), int16] */, dtype="int16") /* ty=Tensor[(66), int16] */;
    %127 = reshape(%125, newshape=[2, 11, 3]) /* ty=Tensor[(2, 11, 3), int16] */;
    %128 = reshape(%126, newshape=[2, 11, 3]) /* ty=Tensor[(2, 11, 3), int16] */;
    %129 = @func_1618() /* ty=Tensor[(2, 12, 9), float64] */;
    %130 = @func_4767(%120) /* ty=Tensor[(7, 8, 3), float32] */;
    %131 = %123.1;
    %132 = %124.0;
    %133 = @func_8061(%127, %128) /* ty=Tensor[(2, 11, 3), int16] */;
    (%129, %130, meta[relay.Constant][4] /* ty=Tensor[(1, 168), float32] */, %131, %var_9299, %132, %133, meta[relay.Constant][5] /* ty=Tensor[(66), int16] */)
  };
  %134(%var_9314) /* ty=(Tensor[(2, 12, 9), float64], Tensor[(7, 8, 3), float32], Tensor[(1, 168), float32], Tensor[(2, 12, 9), float32], Tensor[(352), int8], Tensor[(2, 12, 9), float64], Tensor[(2, 11, 3), int16], Tensor[(66), int16]) */
}

def @func_11092() -> Tensor[(2, 12, 9), float32] {
  @func_11090() /* ty=Tensor[(2, 12, 9), float32] */
}

def @func_7373() -> Tensor[(2, 12, 9), float64] {
  @func_7371() /* ty=Tensor[(2, 12, 9), float64] */
}

def @func_4059() -> (Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool]) {
  @func_4057() /* ty=(Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool]) */
}

def @func_8036() -> (Tensor[(2, 12, 9), float64],) {
  %137 = fn () -> (Tensor[(2, 12, 9), float64],) {
    %135 = @func_7251() /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */;
    %136 = %135.1;
    (%136,)
  };
  %137() /* ty=(Tensor[(2, 12, 9), float64],) */
}

def @func_9852() -> (Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32]) {
  %142 = fn () -> (Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32]) {
    %138 = @func_8673() /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32]) */;
    %139 = @func_2925() /* ty=(Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), float64]) */;
    %140 = %138.0;
    %141 = %139.0;
    (%140, %141)
  };
  %142() /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32]) */
}

def @func_2275() -> Tensor[(2, 12, 9), float64] {
  @func_2273() /* ty=Tensor[(2, 12, 9), float64] */
}

def @func_8417(%var_8407: Tensor[(14, 7, 16), float32]) -> (Tensor[(14, 7, 16), float32], Tensor[(13, 6, 12), bool], Tensor[(936), uint32]) {
  %143 = cast(%var_8407, dtype="float32") /* ty=Tensor[(14, 7, 16), float32] */;
  %144 = cast(meta[relay.Constant][6] /* ty=Tensor[(936), uint32] */, dtype="uint32") /* ty=Tensor[(936), uint32] */;
  %145 = cast(meta[relay.Constant][6] /* ty=Tensor[(936), uint32] */, dtype="uint32") /* ty=Tensor[(936), uint32] */;
  %146 = reshape(%144, newshape=[13, 6, 12]) /* ty=Tensor[(13, 6, 12), uint32] */;
  %147 = reshape(%145, newshape=[13, 6, 12]) /* ty=Tensor[(13, 6, 12), uint32] */;
  %148 = @func_5840(%146, %147) /* ty=(Tensor[(13, 6, 12), bool], Tensor[(13, 6, 12), uint16]) */;
  %149 = erf(%143) /* ty=Tensor[(14, 7, 16), float32] */;
  %150 = %148.0;
  (%149, %150, meta[relay.Constant][6] /* ty=Tensor[(936), uint32] */)
}

def @func_10513() -> (Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64]) {
  %154 = fn () -> (Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64]) {
    %151 = @func_2467() /* ty=(Tensor[(2, 12, 9), bool],) */;
    %152 = %151.0;
    %153 = @func_5196() /* ty=Tensor[(2, 12, 9), float64] */;
    (%152, %153)
  };
  %154() /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64]) */
}

def @func_7919() -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), bool]) {
  @func_7917() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), bool]) */
}

def @func_11411() -> (Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), float64]) {
  %158 = fn () -> (Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), float64]) {
    %155 = @func_9851() /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32]) */;
    %156 = %155.1;
    %157 = @func_2273() /* ty=Tensor[(2, 12, 9), float64] */;
    (%156, %157)
  };
  %158() /* ty=(Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), float64]) */
}

def @func_952() -> (Tensor[(2, 12, 9), float64],) {
  %159 = @func_595() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool]) */;
  %160 = %159.0;
  (%160,)
}

def @func_342() -> (Tensor[(3, 2, 14), uint32], Tensor[(2, 12, 9), bool], Tensor[(216), float32], Tensor[(2, 12, 9), float32]) {
  %161 = cast(meta[relay.Constant][7] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %162 = cast(meta[relay.Constant][8] /* ty=Tensor[(3, 2, 14), uint32] */, dtype="uint32") /* ty=Tensor[(3, 2, 14), uint32] */;
  %163 = cast(meta[relay.Constant][9] /* ty=Tensor[(216), float32] */, dtype="float32") /* ty=Tensor[(216), float32] */;
  %164 = cast(meta[relay.Constant][9] /* ty=Tensor[(216), float32] */, dtype="float32") /* ty=Tensor[(216), float32] */;
  %165 = reshape(%163, newshape=[2, 12, 9]) /* ty=Tensor[(2, 12, 9), float32] */;
  %166 = reshape(%164, newshape=[2, 12, 9]) /* ty=Tensor[(2, 12, 9), float32] */;
  %167 = @func_179(%165, %166) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float32]) */;
  %168 = %167.0;
  %169 = cast(%168, dtype="float32") /* ty=Tensor[(2, 12, 9), float32] */;
  %170 = cast(meta[relay.Constant][9] /* ty=Tensor[(216), float32] */, dtype="float32") /* ty=Tensor[(216), float32] */;
  %171 = reshape(%169, newshape=[2, 12, 9]) /* ty=Tensor[(2, 12, 9), float32] */;
  %172 = reshape(%170, newshape=[2, 12, 9]) /* ty=Tensor[(2, 12, 9), float32] */;
  %173 = @func_179(%171, %172) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float32]) */;
  %174 = %173.0;
  %175 = cast(%174, dtype="float32") /* ty=Tensor[(2, 12, 9), float32] */;
  %176 = log10(%175) /* ty=Tensor[(2, 12, 9), float32] */;
  %177 = cast(%176, dtype="float32") /* ty=Tensor[(2, 12, 9), float32] */;
  %178 = logical_xor(%161, %162) /* ty=Tensor[(3, 2, 14), uint32] */;
  %179 = asin(%177) /* ty=Tensor[(2, 12, 9), float32] */;
  (%178, %168, meta[relay.Constant][9] /* ty=Tensor[(216), float32] */, %179)
}

def @func_5517() -> (Tensor[(2, 12, 9), float64],) {
  %182 = fn () -> (Tensor[(2, 12, 9), float64],) {
    %180 = @func_1322() /* ty=(Tensor[(2, 12, 9), float64],) */;
    %181 = %180.0;
    (%181,)
  };
  %182() /* ty=(Tensor[(2, 12, 9), float64],) */
}

def @func_2863() -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64]) {
  %183 = @func_1337() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %184 = %183.0;
  %185 = cast(%184, dtype="bool") /* ty=Tensor[(2, 12, 9), bool] */;
  %186 = reshape(%185, newshape=[2, 12, 9]) /* ty=Tensor[(2, 12, 9), bool] */;
  %187 = @func_435(%186) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64]) */;
  %188 = @func_1502() /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool]) */;
  %189 = %187.0;
  %190 = %188.1;
  (%184, %189, %190)
}

def @func_2534(%var_2533: Tensor[(6, 4, 13), uint32]) -> Tensor[(6, 4, 13), uint32] {
  %195 = fn (%var_2526: Tensor[(6, 4, 13), uint32]) -> Tensor[(6, 4, 13), uint32] {
    %191 = cast(%var_2526, dtype="uint32") /* ty=Tensor[(6, 4, 13), uint32] */;
    %192 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(6, 4, 13), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %193 = cast(meta[relay.Constant][10] /* ty=Tensor[(6, 4, 13), uint32] */, dtype="uint32") /* ty=Tensor[(6, 4, 13), uint32] */;
    %194 = dyn.reshape(%191, %192, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    subtract(%193, %194) /* ty=Tensor[(6, 4, 13), uint32] */
  };
  %195(%var_2533) /* ty=Tensor[(6, 4, 13), uint32] */
}

def @func_9993(%var_9992: Tensor[(6, 7, 6), float32]) -> (Tensor[(6, 7, 6), float64], Tensor[(2, 12, 9), float64]) {
  %202 = fn (%var_9970: Tensor[(6, 7, 6), float32]) -> (Tensor[(6, 7, 6), float64], Tensor[(2, 12, 9), float64]) {
    %196 = cast(%var_9970, dtype="float32") /* ty=Tensor[(6, 7, 6), float32] */;
    %197 = erf(%196) /* ty=Tensor[(6, 7, 6), float32] */;
    %198 = cast(%197, dtype="float64") /* ty=Tensor[(6, 7, 6), float64] */;
    %199 = @func_1322() /* ty=(Tensor[(2, 12, 9), float64],) */;
    %200 = asinh(%198) /* ty=Tensor[(6, 7, 6), float64] */;
    %201 = %199.0;
    (%200, %201)
  };
  %202(%var_9992) /* ty=(Tensor[(6, 7, 6), float64], Tensor[(2, 12, 9), float64]) */
}

def @func_11197() -> Tensor[(1404), int8] {
  %203 = @func_6806() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(12, 13, 9), int8], Tensor[(1404), int8], Tensor[(2, 12, 9), bool]) */;
  %203.2
}

def @func_10609(%var_10607: Tensor[(6, 5, 10), uint32], %var_10608: Tensor[(6, 5, 10), uint32]) -> (Tensor[(6, 5, 10), float32], Tensor[(2, 12, 9), bool]) {
  %213 = fn (%var_10587: Tensor[(6, 5, 10), uint32], %var_10588: Tensor[(6, 5, 10), uint32]) -> (Tensor[(6, 5, 10), float32], Tensor[(2, 12, 9), bool]) {
    %204 = cast(%var_10588, dtype="bool") /* ty=Tensor[(6, 5, 10), bool] */;
    %205 = shape_of(%var_10587, dtype="int32") /* ty=Tensor[(3), int32] */;
    %206 = cast(%var_10587, dtype="bool") /* ty=Tensor[(6, 5, 10), bool] */;
    %207 = dyn.reshape(%204, %205, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %208 = not_equal(%206, %207) /* ty=Tensor[(6, 5, 10), bool] */;
    %209 = cast(%208, dtype="float32") /* ty=Tensor[(6, 5, 10), float32] */;
    %210 = @func_2776() /* ty=(Tensor[(2, 12, 9), bool],) */;
    %211 = tan(%209) /* ty=Tensor[(6, 5, 10), float32] */;
    %212 = %210.0;
    (%211, %212)
  };
  %213(%var_10607, %var_10608) /* ty=(Tensor[(6, 5, 10), float32], Tensor[(2, 12, 9), bool]) */
}

def @func_7269() -> Tensor[(2, 12, 9), bool] {
  %214 = fn () -> Tensor[(2, 12, 9), bool] {
    @func_5488() /* ty=Tensor[(2, 12, 9), bool] */
  };
  %214() /* ty=Tensor[(2, 12, 9), bool] */
}

def @func_4640() -> (Tensor[(2, 12, 9), bool], Tensor[(216), float32], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64]) {
  @func_4638() /* ty=(Tensor[(2, 12, 9), bool], Tensor[(216), float32], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64]) */
}

def @func_715(%var_712: Tensor[(11, 2, 16), int8], %var_713: Tensor[(11, 2, 16), int8], %var_714: Tensor[(11, 2, 16), int8]) -> (Tensor[(11, 2, 16), float32], Tensor[(11, 2, 16), int8]) {
  @func_710(%var_712, %var_713, %var_714) /* ty=(Tensor[(11, 2, 16), float32], Tensor[(11, 2, 16), int8]) */
}

def @func_6003() -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool]) {
  @func_6001() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool]) */
}

def @func_625() -> Tensor[(2, 12, 9), bool] {
  @func_623() /* ty=Tensor[(2, 12, 9), bool] */
}

def @func_3954() -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) {
  %219 = fn () -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) {
    %215 = @func_952() /* ty=(Tensor[(2, 12, 9), float64],) */;
    %216 = @func_952() /* ty=(Tensor[(2, 12, 9), float64],) */;
    %217 = %215.0;
    %218 = %216.0;
    (%217, %218)
  };
  %219() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */
}

def @func_3575() -> (Tensor[(2, 12, 9), float32],) {
  @func_3573() /* ty=(Tensor[(2, 12, 9), float32],) */
}

def @func_9917() -> Tensor[(8, 8, 13), bool] {
  @func_9915() /* ty=Tensor[(8, 8, 13), bool] */
}

def @func_6557(%var_6556: Tensor[(936), uint32]) -> (Tensor[(2, 12, 9), bool], Tensor[(13, 6, 12), bool], Tensor[(936), uint32]) {
  %228 = fn (%var_6528: Tensor[(936), uint32]) -> (Tensor[(2, 12, 9), bool], Tensor[(13, 6, 12), bool], Tensor[(936), uint32]) {
    %220 = @func_4023() /* ty=(Tensor[(2, 12, 9), bool],) */;
    %221 = cast(%var_6528, dtype="uint32") /* ty=Tensor[(936), uint32] */;
    %222 = cast(%var_6528, dtype="uint32") /* ty=Tensor[(936), uint32] */;
    %223 = reshape(%221, newshape=[13, 6, 12]) /* ty=Tensor[(13, 6, 12), uint32] */;
    %224 = reshape(%222, newshape=[13, 6, 12]) /* ty=Tensor[(13, 6, 12), uint32] */;
    %225 = @func_5840(%223, %224) /* ty=(Tensor[(13, 6, 12), bool], Tensor[(13, 6, 12), uint16]) */;
    %226 = %220.0;
    %227 = %225.0;
    (%226, %227, %var_6528)
  };
  %228(%var_6556) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(13, 6, 12), bool], Tensor[(936), uint32]) */
}

def @func_10207() -> Tensor[(2, 12, 9), float64] {
  @func_6679() /* ty=Tensor[(2, 12, 9), float64] */
}

def @func_2995(%var_2987: float32, %var_2988: Tensor[(4, 15, 6), float32]) -> Tensor[(4, 15, 6), float32] {
  %229 = cast(%var_2987, dtype="float32") /* ty=float32 */;
  %230 = cast(%var_2988, dtype="float32") /* ty=Tensor[(4, 15, 6), float32] */;
  mod(%229, %230) /* ty=Tensor[(4, 15, 6), float32] */
}

def @func_8675() -> (Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32]) {
  @func_8673() /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32]) */
}

def @func_1583() -> Tensor[(2, 12, 9), float64] {
  @func_1581() /* ty=Tensor[(2, 12, 9), float64] */
}

def @func_6288(%var_6287: Tensor[(6, 156), uint32]) -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(13, 6, 12), bool], Tensor[(6, 156), uint32]) {
  %241 = fn (%var_6283: Tensor[(6, 156), uint32]) -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(13, 6, 12), bool], Tensor[(6, 156), uint32]) {
    %231 = @func_2863() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64]) */;
    %232 = @func_542() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */;
    %233 = cast(%var_6283, dtype="uint32") /* ty=Tensor[(6, 156), uint32] */;
    %234 = cast(%var_6283, dtype="uint32") /* ty=Tensor[(6, 156), uint32] */;
    %235 = reshape(%233, newshape=[13, 6, 12]) /* ty=Tensor[(13, 6, 12), uint32] */;
    %236 = reshape(%234, newshape=[13, 6, 12]) /* ty=Tensor[(13, 6, 12), uint32] */;
    %237 = @func_5840(%235, %236) /* ty=(Tensor[(13, 6, 12), bool], Tensor[(13, 6, 12), uint16]) */;
    %238 = %231.2;
    %239 = %232.0;
    %240 = %237.0;
    (%238, %239, %240, %var_6283)
  };
  %241(%var_6287) /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(13, 6, 12), bool], Tensor[(6, 156), uint32]) */
}

def @func_7976() -> (Tensor[(2, 12, 9), float64], Tensor[(9, 15, 6), bool], Tensor[(810), float32], Tensor[(2, 12, 9), float64]) {
  %242 = @func_3953() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */;
  %243 = cast(meta[relay.Constant][11] /* ty=Tensor[(810), float32] */, dtype="float32") /* ty=Tensor[(810), float32] */;
  %244 = reshape(%243, newshape=[9, 15, 6]) /* ty=Tensor[(9, 15, 6), float32] */;
  %245 = @func_2665(%244) /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(9, 15, 6), uint8], Tensor[(9, 15, 6), bool]) */;
  %246 = @func_4240() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %247 = %242.1;
  %248 = %245.3;
  %249 = %246.0;
  (%247, %248, meta[relay.Constant][11] /* ty=Tensor[(810), float32] */, %249)
}

def @func_344() -> (Tensor[(3, 2, 14), uint32], Tensor[(2, 12, 9), bool], Tensor[(216), float32], Tensor[(2, 12, 9), float32]) {
  @func_342() /* ty=(Tensor[(3, 2, 14), uint32], Tensor[(2, 12, 9), bool], Tensor[(216), float32], Tensor[(2, 12, 9), float32]) */
}

def @func_10848() -> Tensor[(2, 12, 9), float64] {
  %250 = fn () -> Tensor[(2, 12, 9), float64] {
    @func_7371() /* ty=Tensor[(2, 12, 9), float64] */
  };
  %250() /* ty=Tensor[(2, 12, 9), float64] */
}

def @func_1031() -> Tensor[(2, 12, 9), bool] {
  @func_1029() /* ty=Tensor[(2, 12, 9), bool] */
}

def @func_8880() -> Tensor[(2, 12, 9), bool] {
  %251 = @func_595() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool]) */;
  %251.1
}

def @func_7698(%var_7697: Tensor[(8, 8, 7), float32]) -> (Tensor[(8, 8, 7), float32], Tensor[(2, 12, 9), float64]) {
  %256 = fn (%var_7675: Tensor[(8, 8, 7), float32]) -> (Tensor[(8, 8, 7), float32], Tensor[(2, 12, 9), float64]) {
    %252 = cast(%var_7675, dtype="float32") /* ty=Tensor[(8, 8, 7), float32] */;
    %253 = @func_952() /* ty=(Tensor[(2, 12, 9), float64],) */;
    %254 = asin(%252) /* ty=Tensor[(8, 8, 7), float32] */;
    %255 = %253.0;
    (%254, %255)
  };
  %256(%var_7697) /* ty=(Tensor[(8, 8, 7), float32], Tensor[(2, 12, 9), float64]) */
}

def @func_10790() -> Tensor[(2, 12, 9), bool] {
  @func_10788() /* ty=Tensor[(2, 12, 9), bool] */
}

def @func_11029(%var_11027: Tensor[(5, 132), float64], %var_11028: Tensor[(936), uint32]) -> (Tensor[(8, 8, 13), bool], Tensor[(2, 12, 9), float64], Tensor[(936), uint32], Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), float64], Tensor[(5, 132), int32], Tensor[(13, 6, 12), float32]) {
  %284 = fn (%var_10963: Tensor[(5, 132), float64], %var_10981: Tensor[(936), uint32]) -> (Tensor[(8, 8, 13), bool], Tensor[(2, 12, 9), float64], Tensor[(936), uint32], Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), float64], Tensor[(5, 132), int32], Tensor[(13, 6, 12), float32]) {
    %257 = @func_8594() /* ty=(Tensor[(8, 8, 13), bool],) */;
    %258 = cast(%var_10963, dtype="float64") /* ty=Tensor[(5, 132), float64] */;
    %259 = reshape(%258, newshape=[660, 1]) /* ty=Tensor[(660, 1), float64] */;
    %260 = @func_9585(%259) /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(10, 11, 6), float64], Tensor[(660, 1), float64], Tensor[(2, 12, 9), bool]) */;
    %261 = @func_7976() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(9, 15, 6), bool], Tensor[(810), float32], Tensor[(2, 12, 9), float64]) */;
    %262 = cast(%var_10963, dtype="float32") /* ty=Tensor[(5, 132), float32] */;
    %263 = cos(%262) /* ty=Tensor[(5, 132), float32] */;
    %264 = cast(%var_10963, dtype="bool") /* ty=Tensor[(5, 132), bool] */;
    %265 = shape_of(%263, dtype="int32") /* ty=Tensor[(2), int32] */;
    %266 = cast(%263, dtype="bool") /* ty=Tensor[(5, 132), bool] */;
    %267 = dyn.reshape(%264, %265, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %268 = greater(%266, %267) /* ty=Tensor[(5, 132), bool] */;
    %269 = cast(%268, dtype="int32") /* ty=Tensor[(5, 132), int32] */;
    %270 = shape_of(%263, dtype="int32") /* ty=Tensor[(2), int32] */;
    %271 = cast(%263, dtype="int32") /* ty=Tensor[(5, 132), int32] */;
    %272 = dyn.reshape(%269, %270, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
    %273 = cast(%var_10981, dtype="uint32") /* ty=Tensor[(936), uint32] */;
    %274 = reshape(%273, newshape=[936]) /* ty=Tensor[(936), uint32] */;
    %275 = @func_6555(%274) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(13, 6, 12), bool], Tensor[(936), uint32]) */;
    %276 = %275.1;
    %277 = cast(%276, dtype="float32") /* ty=Tensor[(13, 6, 12), float32] */;
    %278 = %257.0;
    %279 = %260.0;
    %280 = @func_9601() /* ty=Tensor[(2, 12, 9), float32] */;
    %281 = %261.0;
    %282 = bitwise_or(%271, %272) /* ty=Tensor[(5, 132), int32] */;
    %283 = cos(%277) /* ty=Tensor[(13, 6, 12), float32] */;
    (%278, %279, %var_10981, %280, %281, %282, %283)
  };
  %284(%var_11027, %var_11028) /* ty=(Tensor[(8, 8, 13), bool], Tensor[(2, 12, 9), float64], Tensor[(936), uint32], Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), float64], Tensor[(5, 132), int32], Tensor[(13, 6, 12), float32]) */
}

def @func_7251() -> (Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) {
  %285 = @func_5714() /* ty=(Tensor[(2, 12, 9), bool],) */;
  %286 = @func_5516() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %287 = %285.0;
  %288 = %286.0;
  %289 = @func_4307() /* ty=Tensor[(2, 12, 9), float64] */;
  (%287, %288, %289)
}

def @func_8594() -> (Tensor[(8, 8, 13), bool],) {
  %290 = @func_8449() /* ty=Tensor[(8, 8, 13), bool] */;
  (%290,)
}

def @func_710(%var_681: Tensor[(11, 2, 16), int8], %var_682: Tensor[(11, 2, 16), int8], %var_686: Tensor[(11, 2, 16), int8]) -> (Tensor[(11, 2, 16), float32], Tensor[(11, 2, 16), int8]) {
  %291 = cast(%var_686, dtype="float32") /* ty=Tensor[(11, 2, 16), float32] */;
  %292 = shape_of(%var_681, dtype="int32") /* ty=Tensor[(3), int32] */;
  %293 = cast(%var_681, dtype="float32") /* ty=Tensor[(11, 2, 16), float32] */;
  %294 = dyn.reshape(%291, %292, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %295 = cast(%var_682, dtype="bool") /* ty=Tensor[(11, 2, 16), bool] */;
  %296 = shape_of(%var_681, dtype="int32") /* ty=Tensor[(3), int32] */;
  %297 = cast(%var_681, dtype="bool") /* ty=Tensor[(11, 2, 16), bool] */;
  %298 = dyn.reshape(%295, %296, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %299 = greater(%297, %298) /* ty=Tensor[(11, 2, 16), bool] */;
  %300 = cast(%var_682, dtype="float64") /* ty=Tensor[(11, 2, 16), float64] */;
  %301 = shape_of(%var_681, dtype="int32") /* ty=Tensor[(3), int32] */;
  %302 = cast(%var_681, dtype="float64") /* ty=Tensor[(11, 2, 16), float64] */;
  %303 = dyn.reshape(%300, %301, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %304 = divide(%302, %303) /* ty=Tensor[(11, 2, 16), float64] */;
  %305 = cast(%304, dtype="int8") /* ty=Tensor[(11, 2, 16), int8] */;
  %306 = shape_of(%299, dtype="int32") /* ty=Tensor[(3), int32] */;
  %307 = cast(%299, dtype="int8") /* ty=Tensor[(11, 2, 16), int8] */;
  %308 = dyn.reshape(%305, %306, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %309 = power(%293, %294) /* ty=Tensor[(11, 2, 16), float32] */;
  %310 = bitwise_xor(%307, %308) /* ty=Tensor[(11, 2, 16), int8] */;
  (%309, %310)
}

def @func_8243(%var_8241: Tensor[(60), uint64], %var_8242: Tensor[(810), float32]) -> (Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64], Tensor[(6, 2, 10), bool], Tensor[(60), uint64], Tensor[(120), uint64], Tensor[(2, 12, 9), float64], Tensor[(715), float64], Tensor[(810), float32]) {
  @func_8239(%var_8241, %var_8242) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64], Tensor[(6, 2, 10), bool], Tensor[(60), uint64], Tensor[(120), uint64], Tensor[(2, 12, 9), float64], Tensor[(715), float64], Tensor[(810), float32]) */
}

def @func_9698(%var_9696: Tensor[(352), int8]) -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(352), int8]) {
  @func_9695(%var_9696) /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(352), int8]) */
}

def @func_6718() -> Tensor[(2, 12, 9), bool] {
  %311 = @func_2467() /* ty=(Tensor[(2, 12, 9), bool],) */;
  %311.0
}

def @func_10649() -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) {
  %317 = fn () -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) {
    %312 = @func_2863() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64]) */;
    %313 = @func_3524() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float32], Tensor[(8, 14, 9), bool], uint8, Tensor[(1008), uint8]) */;
    %314 = %312.2;
    %315 = @func_7371() /* ty=Tensor[(2, 12, 9), float64] */;
    %316 = %313.0;
    (%314, %315, %316)
  };
  %317() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */
}

def @func_8105() -> Tensor[(2, 12, 9), bool] {
  %319 = fn () -> Tensor[(2, 12, 9), bool] {
    %318 = @func_2863() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64]) */;
    %318.1
  };
  %319() /* ty=Tensor[(2, 12, 9), bool] */
}

def @func_11199() -> Tensor[(1404), int8] {
  @func_11197() /* ty=Tensor[(1404), int8] */
}

def @func_4134(%var_4133: Tensor[(416, 2), float64]) -> (Tensor[(2, 12, 9), bool], Tensor[(8, 8, 13), bool], Tensor[(416, 2), float64]) {
  %335 = fn (%var_4110: Tensor[(416, 2), float64]) -> (Tensor[(2, 12, 9), bool], Tensor[(8, 8, 13), bool], Tensor[(416, 2), float64]) {
    %320 = @func_2467() /* ty=(Tensor[(2, 12, 9), bool],) */;
    %321 = cast(meta[relay.Constant][12] /* ty=Tensor[(416, 2), bool] */, dtype="bool") /* ty=Tensor[(416, 2), bool] */;
    %322 = cast(meta[relay.Constant][12] /* ty=Tensor[(416, 2), bool] */, dtype="bool") /* ty=Tensor[(416, 2), bool] */;
    %323 = reshape(%321, newshape=[8, 8, 13]) /* ty=Tensor[(8, 8, 13), bool] */;
    %324 = reshape(%322, newshape=[8, 8, 13]) /* ty=Tensor[(8, 8, 13), bool] */;
    %325 = @func_3055(%323, %324) /* ty=(Tensor[(8, 8, 13), bool], Tensor[(2, 12, 9), bool]) */;
    %326 = cast(meta[relay.Constant][12] /* ty=Tensor[(416, 2), bool] */, dtype="float64") /* ty=Tensor[(416, 2), float64] */;
    %327 = acosh(%326) /* ty=Tensor[(416, 2), float64] */;
    %328 = cast(%var_4110, dtype="float64") /* ty=Tensor[(416, 2), float64] */;
    %329 = shape_of(%327, dtype="int32") /* ty=Tensor[(2), int32] */;
    %330 = cast(%327, dtype="float64") /* ty=Tensor[(416, 2), float64] */;
    %331 = dyn.reshape(%328, %329, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %332 = %320.0;
    %333 = %325.0;
    %334 = mod(%330, %331) /* ty=Tensor[(416, 2), float64] */;
    (%332, %333, %334)
  };
  %335(%var_4133) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(8, 8, 13), bool], Tensor[(416, 2), float64]) */
}

def @func_3865(%var_3864: Tensor[(352), int8]) -> (Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32], Tensor[(352), int8]) {
  %342 = fn (%var_3853: Tensor[(352), int8]) -> (Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32], Tensor[(352), int8]) {
    %336 = @func_2207() /* ty=(Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */;
    %337 = cast(%var_3853, dtype="int8") /* ty=Tensor[(352), int8] */;
    %338 = reshape(%337, newshape=[352]) /* ty=Tensor[(352), int8] */;
    %339 = @func_1259(%338) /* ty=(Tensor[(2, 12, 9), float32], Tensor[(11, 2, 16), float32], Tensor[(352), float32]) */;
    %340 = %336.1;
    %341 = %339.0;
    (%340, %341, %var_3853)
  };
  %342(%var_3864) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32], Tensor[(352), int8]) */
}

def @func_5693() -> (Tensor[(2, 12, 9), float64],) {
  @func_5691() /* ty=(Tensor[(2, 12, 9), float64],) */
}

def @func_4266(%var_4264: Tensor[(6, 1, 10), uint64], %var_4265: Tensor[(6, 2, 10), uint64]) -> (Tensor[(6, 2, 10), bool],) {
  %346 = fn (%var_4246: Tensor[(6, 1, 10), uint64], %var_4247: Tensor[(6, 2, 10), uint64]) -> (Tensor[(6, 2, 10), bool],) {
    %343 = cast(%var_4246, dtype="bool") /* ty=Tensor[(6, 1, 10), bool] */;
    %344 = cast(%var_4247, dtype="bool") /* ty=Tensor[(6, 2, 10), bool] */;
    %345 = greater(%343, %344) /* ty=Tensor[(6, 2, 10), bool] */;
    (%345,)
  };
  %346(%var_4264, %var_4265) /* ty=(Tensor[(6, 2, 10), bool],) */
}

def @func_9192(%var_9162: Tensor[(9, 3, 16), float32], %var_9174: Tensor[(88), float32], %var_9177: Tensor[(176), float64]) -> (Tensor[(9, 3, 16), float32], Tensor[(2, 12, 9), float32], Tensor[(88), float32], Tensor[(264), bool], Tensor[(308, 2), float32], Tensor[(176), float64], Tensor[(2, 12, 9), bool]) {
  %347 = cast(%var_9162, dtype="float32") /* ty=Tensor[(9, 3, 16), float32] */;
  %348 = cast(%var_9174, dtype="float32") /* ty=Tensor[(88), float32] */;
  %349 = cast(meta[relay.Constant][13] /* ty=Tensor[(264), bool] */, dtype="bool") /* ty=Tensor[(264), bool] */;
  %350 = cast(meta[relay.Constant][14] /* ty=Tensor[(308, 2), float32] */, dtype="float32") /* ty=Tensor[(308, 2), float32] */;
  %351 = cast(%var_9177, dtype="float64") /* ty=Tensor[(176), float64] */;
  %352 = reshape(%348, newshape=[8, 1, 11]) /* ty=Tensor[(8, 1, 11), float32] */;
  %353 = reshape(%349, newshape=[8, 3, 11]) /* ty=Tensor[(8, 3, 11), bool] */;
  %354 = reshape(%350, newshape=[8, 7, 11]) /* ty=Tensor[(8, 7, 11), float32] */;
  %355 = reshape(%351, newshape=[176]) /* ty=Tensor[(176), float64] */;
  %356 = @func_9144(%352, %353, %354, %355) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64], Tensor[(8, 3, 11), float32], Tensor[(2, 12, 9), float64], Tensor[(8, 7, 11), float32], Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), bool], Tensor[(176), float64], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float32]) */;
  %357 = erf(%347) /* ty=Tensor[(9, 3, 16), float32] */;
  %358 = %356.5;
  %359 = @func_5292() /* ty=Tensor[(2, 12, 9), bool] */;
  (%357, %358, %var_9174, meta[relay.Constant][13] /* ty=Tensor[(264), bool] */, meta[relay.Constant][14] /* ty=Tensor[(308, 2), float32] */, %var_9177, %359)
}

def @func_10147() -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) {
  %360 = @func_7917() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), bool]) */;
  %361 = @func_7917() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), bool]) */;
  %362 = %360.0;
  %363 = %361.0;
  (%362, %363)
}

def @func_5640() -> Tensor[(2, 12, 9), float64] {
  @func_5638() /* ty=Tensor[(2, 12, 9), float64] */
}

def @func_5976(%var_5974: Tensor[(13, 5, 11), float64], %var_5975: Tensor[(81, 10), float32]) -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(13, 5, 11), bool], Tensor[(13, 5, 11), float32], Tensor[(2, 12, 9), bool], Tensor[(9, 15, 6), bool], Tensor[(81, 10), float32]) {
  %388 = fn (%var_5908: Tensor[(13, 5, 11), float64], %var_5965: Tensor[(81, 10), float32]) -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(13, 5, 11), bool], Tensor[(13, 5, 11), float32], Tensor[(2, 12, 9), bool], Tensor[(9, 15, 6), bool], Tensor[(81, 10), float32]) {
    %364 = @func_762() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */;
    %365 = @func_4240() /* ty=(Tensor[(2, 12, 9), float64],) */;
    %366 = cast(%var_5908, dtype="float64") /* ty=Tensor[(13, 5, 11), float64] */;
    %367 = atanh(%366) /* ty=Tensor[(13, 5, 11), float64] */;
    %368 = cast(%367, dtype="bool") /* ty=Tensor[(13, 5, 11), bool] */;
    %369 = shape_of(%var_5908, dtype="int32") /* ty=Tensor[(3), int32] */;
    %370 = cast(%var_5908, dtype="bool") /* ty=Tensor[(13, 5, 11), bool] */;
    %371 = dyn.reshape(%368, %369, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %372 = cast(%367, dtype="float32") /* ty=Tensor[(13, 5, 11), float32] */;
    %373 = cosh(%372) /* ty=Tensor[(13, 5, 11), float32] */;
    %374 = cast(meta[relay.Constant][15] /* ty=Tensor[(13, 5, 11), float32] */, dtype="float32") /* ty=Tensor[(13, 5, 11), float32] */;
    %375 = shape_of(%373, dtype="int32") /* ty=Tensor[(3), int32] */;
    %376 = cast(%373, dtype="float32") /* ty=Tensor[(13, 5, 11), float32] */;
    %377 = dyn.reshape(%374, %375, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %378 = @func_4023() /* ty=(Tensor[(2, 12, 9), bool],) */;
    %379 = cast(%var_5965, dtype="float32") /* ty=Tensor[(81, 10), float32] */;
    %380 = reshape(%379, newshape=[9, 15, 6]) /* ty=Tensor[(9, 15, 6), float32] */;
    %381 = @func_2665(%380) /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(9, 15, 6), uint8], Tensor[(9, 15, 6), bool]) */;
    %382 = %364.0;
    %383 = %365.0;
    %384 = logical_and(%370, %371) /* ty=Tensor[(13, 5, 11), bool] */;
    %385 = divide(%376, %377) /* ty=Tensor[(13, 5, 11), float32] */;
    %386 = %378.0;
    %387 = %381.3;
    (%382, %383, %384, %385, %386, %387, %var_5965)
  };
  %388(%var_5974, %var_5975) /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(13, 5, 11), bool], Tensor[(13, 5, 11), float32], Tensor[(2, 12, 9), bool], Tensor[(9, 15, 6), bool], Tensor[(81, 10), float32]) */
}

def @func_4638() -> (Tensor[(2, 12, 9), bool], Tensor[(216), float32], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64]) {
  %389 = @func_2776() /* ty=(Tensor[(2, 12, 9), bool],) */;
  %390 = @func_342() /* ty=(Tensor[(3, 2, 14), uint32], Tensor[(2, 12, 9), bool], Tensor[(216), float32], Tensor[(2, 12, 9), float32]) */;
  %391 = @func_595() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool]) */;
  %392 = @func_1454() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %393 = %389.0;
  %394 = %390.2;
  %395 = %391.1;
  %396 = %392.0;
  (%393, %394, %395, %396)
}

def @func_3422() -> (Tensor[(2, 12, 9), float64],) {
  @func_3420() /* ty=(Tensor[(2, 12, 9), float64],) */
}

def @func_9337() -> (Tensor[(2, 12, 9), float64],) {
  %399 = fn () -> (Tensor[(2, 12, 9), float64],) {
    %397 = @func_6949() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool]) */;
    %398 = %397.1;
    (%398,)
  };
  %399() /* ty=(Tensor[(2, 12, 9), float64],) */
}

def @func_2456() -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) {
  %404 = fn () -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) {
    %400 = @func_595() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool]) */;
    %401 = @func_542() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */;
    %402 = %400.0;
    %403 = %401.0;
    (%402, %403)
  };
  %404() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */
}

def @func_182(%var_180: Tensor[(2, 12, 9), float32], %var_181: Tensor[(2, 12, 9), float32]) -> (Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float32]) {
  %417 = fn (%var_127: Tensor[(2, 12, 9), float32], %var_128: Tensor[(2, 12, 9), float32]) -> (Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float32]) {
    %405 = cast(%var_128, dtype="bool") /* ty=Tensor[(2, 12, 9), bool] */;
    %406 = shape_of(%var_127, dtype="int32") /* ty=Tensor[(3), int32] */;
    %407 = cast(%var_127, dtype="bool") /* ty=Tensor[(2, 12, 9), bool] */;
    %408 = dyn.reshape(%405, %406, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %409 = cast(%var_127, dtype="float64") /* ty=Tensor[(2, 12, 9), float64] */;
    %410 = shape_of(%var_128, dtype="int32") /* ty=Tensor[(3), int32] */;
    %411 = cast(%var_128, dtype="float64") /* ty=Tensor[(2, 12, 9), float64] */;
    %412 = dyn.reshape(%409, %410, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %413 = cast(%var_128, dtype="float32") /* ty=Tensor[(2, 12, 9), float32] */;
    %414 = not_equal(%407, %408) /* ty=Tensor[(2, 12, 9), bool] */;
    %415 = minimum(%411, %412) /* ty=Tensor[(2, 12, 9), float64] */;
    %416 = acos(%413) /* ty=Tensor[(2, 12, 9), float32] */;
    (%414, %415, %416)
  };
  %417(%var_180, %var_181) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float32]) */
}

def @func_10731() -> (Tensor[(2, 12, 9), bool],) {
  %420 = fn () -> (Tensor[(2, 12, 9), bool],) {
    %418 = @func_595() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool]) */;
    %419 = %418.1;
    (%419,)
  };
  %420() /* ty=(Tensor[(2, 12, 9), bool],) */
}

def @func_437(%var_436: Tensor[(2, 12, 9), bool]) -> (Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64]) {
  %430 = fn (%var_423: Tensor[(2, 12, 9), bool]) -> (Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64]) {
    %421 = @func_365() /* ty=(Tensor[(2, 12, 9), bool],) */;
    %422 = @func_365() /* ty=(Tensor[(2, 12, 9), bool],) */;
    %423 = %422.0;
    %424 = cast(%var_423, dtype="float64") /* ty=Tensor[(2, 12, 9), float64] */;
    %425 = shape_of(%423, dtype="int32") /* ty=Tensor[(3), int32] */;
    %426 = cast(%423, dtype="float64") /* ty=Tensor[(2, 12, 9), float64] */;
    %427 = dyn.reshape(%424, %425, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %428 = %421.0;
    %429 = floor_mod(%426, %427) /* ty=Tensor[(2, 12, 9), float64] */;
    (%428, %429)
  };
  %430(%var_436) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64]) */
}

def @func_2667(%var_2666: Tensor[(9, 15, 6), float32]) -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(9, 15, 6), uint8], Tensor[(9, 15, 6), bool]) {
  %452 = fn (%var_2630: Tensor[(9, 15, 6), float32]) -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(9, 15, 6), uint8], Tensor[(9, 15, 6), bool]) {
    %431 = @func_1502() /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool]) */;
    %432 = @func_365() /* ty=(Tensor[(2, 12, 9), bool],) */;
    %433 = cast(%var_2630, dtype="float32") /* ty=Tensor[(9, 15, 6), float32] */;
    %434 = sqrt(%433) /* ty=Tensor[(9, 15, 6), float32] */;
    %435 = cast(%var_2630, dtype="uint8") /* ty=Tensor[(9, 15, 6), uint8] */;
    %436 = shape_of(%434, dtype="int32") /* ty=Tensor[(3), int32] */;
    %437 = cast(%434, dtype="uint8") /* ty=Tensor[(9, 15, 6), uint8] */;
    %438 = dyn.reshape(%435, %436, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %439 = bitwise_or(%437, %438) /* ty=Tensor[(9, 15, 6), uint8] */;
    %440 = cast(%439, dtype="uint8") /* ty=Tensor[(9, 15, 6), uint8] */;
    %441 = shape_of(%var_2630, dtype="int32") /* ty=Tensor[(3), int32] */;
    %442 = cast(%var_2630, dtype="uint8") /* ty=Tensor[(9, 15, 6), uint8] */;
    %443 = dyn.reshape(%440, %441, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %444 = cast(%var_2630, dtype="bool") /* ty=Tensor[(9, 15, 6), bool] */;
    %445 = shape_of(%434, dtype="int32") /* ty=Tensor[(3), int32] */;
    %446 = cast(%434, dtype="bool") /* ty=Tensor[(9, 15, 6), bool] */;
    %447 = dyn.reshape(%444, %445, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %448 = %431.1;
    %449 = %432.0;
    %450 = bitwise_xor(%442, %443) /* ty=Tensor[(9, 15, 6), uint8] */;
    %451 = less_equal(%446, %447) /* ty=Tensor[(9, 15, 6), bool] */;
    (%448, %449, %450, %451)
  };
  %452(%var_2666) /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(9, 15, 6), uint8], Tensor[(9, 15, 6), bool]) */
}

def @func_2999(%var_2997: float32, %var_2998: Tensor[(4, 15, 6), float32]) -> Tensor[(4, 15, 6), float32] {
  @func_2995(%var_2997, %var_2998) /* ty=Tensor[(4, 15, 6), float32] */
}

def @func_5715() -> (Tensor[(2, 12, 9), bool],) {
  %454 = fn () -> (Tensor[(2, 12, 9), bool],) {
    %453 = @func_623() /* ty=Tensor[(2, 12, 9), bool] */;
    (%453,)
  };
  %454() /* ty=(Tensor[(2, 12, 9), bool],) */
}

def @func_11280(%var_11278: Tensor[(3, 8, 3), float64]) -> Tensor[(3, 8, 3), float64] {
  @func_11277(%var_11278) /* ty=Tensor[(3, 8, 3), float64] */
}

def @func_5077(%var_5074: Tensor[(120), uint64], %var_5075: Tensor[(352), int8], %var_5076: Tensor[(448, 1), float32]) -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(6, 2, 10), bool], Tensor[(60), uint64], Tensor[(120), uint64], Tensor[(2, 12, 9), bool], Tensor[(352), int8], Tensor[(11, 2, 16), int8], Tensor[(448, 1), float32], Tensor[(11, 2, 16), int8], Tensor[(2, 12, 9), float32]) {
  %490 = fn (%var_5042: Tensor[(120), uint64], %var_5052: Tensor[(352), int8], %var_5064: Tensor[(448, 1), float32]) -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(6, 2, 10), bool], Tensor[(60), uint64], Tensor[(120), uint64], Tensor[(2, 12, 9), bool], Tensor[(352), int8], Tensor[(11, 2, 16), int8], Tensor[(448, 1), float32], Tensor[(11, 2, 16), int8], Tensor[(2, 12, 9), float32]) {
    %455 = @func_3953() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */;
    %456 = %455.0;
    %457 = cast(%456, dtype="float32") /* ty=Tensor[(2, 12, 9), float32] */;
    %458 = cast(%456, dtype="float32") /* ty=Tensor[(2, 12, 9), float32] */;
    %459 = reshape(%457, newshape=[2, 12, 9]) /* ty=Tensor[(2, 12, 9), float32] */;
    %460 = reshape(%458, newshape=[2, 12, 9]) /* ty=Tensor[(2, 12, 9), float32] */;
    %461 = @func_179(%459, %460) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float32]) */;
    %462 = cast(meta[relay.Constant][16] /* ty=Tensor[(60), uint64] */, dtype="uint64") /* ty=Tensor[(60), uint64] */;
    %463 = cast(%var_5042, dtype="uint64") /* ty=Tensor[(120), uint64] */;
    %464 = reshape(%462, newshape=[6, 1, 10]) /* ty=Tensor[(6, 1, 10), uint64] */;
    %465 = reshape(%463, newshape=[6, 2, 10]) /* ty=Tensor[(6, 2, 10), uint64] */;
    %466 = @func_4263(%464, %465) /* ty=(Tensor[(6, 2, 10), bool],) */;
    %467 = cast(%var_5052, dtype="int8") /* ty=Tensor[(352), int8] */;
    %468 = reshape(%467, newshape=[352]) /* ty=Tensor[(352), int8] */;
    %469 = @func_3863(%468) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32], Tensor[(352), int8]) */;
    %470 = cast(%var_5064, dtype="float32") /* ty=Tensor[(448, 1), float32] */;
    %471 = cast(%var_5064, dtype="float32") /* ty=Tensor[(448, 1), float32] */;
    %472 = cast(%var_5052, dtype="int8") /* ty=Tensor[(352), int8] */;
    %473 = reshape(%470, newshape=[8, 14, 4]) /* ty=Tensor[(8, 14, 4), float32] */;
    %474 = reshape(%471, newshape=[8, 14, 4]) /* ty=Tensor[(8, 14, 4), float32] */;
    %475 = reshape(%472, newshape=[352]) /* ty=Tensor[(352), int8] */;
    %476 = @func_1118(%473, %474, %475) /* ty=(Tensor[(8, 14, 4), float32], Tensor[(11, 2, 16), int8], Tensor[(352), int8]) */;
    %477 = %476.1;
    %478 = cast(%477, dtype="int8") /* ty=Tensor[(11, 2, 16), int8] */;
    %479 = cast(%var_5052, dtype="int8") /* ty=Tensor[(352), int8] */;
    %480 = cast(%var_5052, dtype="int8") /* ty=Tensor[(352), int8] */;
    %481 = reshape(%478, newshape=[11, 2, 16]) /* ty=Tensor[(11, 2, 16), int8] */;
    %482 = reshape(%479, newshape=[11, 2, 16]) /* ty=Tensor[(11, 2, 16), int8] */;
    %483 = reshape(%480, newshape=[11, 2, 16]) /* ty=Tensor[(11, 2, 16), int8] */;
    %484 = @func_710(%481, %482, %483) /* ty=(Tensor[(11, 2, 16), float32], Tensor[(11, 2, 16), int8]) */;
    %485 = %461.0;
    %486 = %466.0;
    %487 = %469.0;
    %488 = %484.1;
    %489 = @func_3322() /* ty=Tensor[(2, 12, 9), float32] */;
    (%456, %485, %486, meta[relay.Constant][16] /* ty=Tensor[(60), uint64] */, %var_5042, %487, %var_5052, %477, %var_5064, %488, %489)
  };
  %490(%var_5074, %var_5075, %var_5076) /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(6, 2, 10), bool], Tensor[(60), uint64], Tensor[(120), uint64], Tensor[(2, 12, 9), bool], Tensor[(352), int8], Tensor[(11, 2, 16), int8], Tensor[(448, 1), float32], Tensor[(11, 2, 16), int8], Tensor[(2, 12, 9), float32]) */
}

def @func_8451() -> Tensor[(8, 8, 13), bool] {
  @func_8449() /* ty=Tensor[(8, 8, 13), bool] */
}

def @func_4665(%var_4664: Tensor[(2, 416), bool]) -> (Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), bool], Tensor[(2, 416), bool]) {
  %499 = fn (%var_4657: Tensor[(2, 416), bool]) -> (Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), bool], Tensor[(2, 416), bool]) {
    %491 = @func_3219() /* ty=(Tensor[(2, 12, 9), bool],) */;
    %492 = cast(%var_4657, dtype="bool") /* ty=Tensor[(2, 416), bool] */;
    %493 = cast(%var_4657, dtype="bool") /* ty=Tensor[(2, 416), bool] */;
    %494 = reshape(%492, newshape=[8, 8, 13]) /* ty=Tensor[(8, 8, 13), bool] */;
    %495 = reshape(%493, newshape=[8, 8, 13]) /* ty=Tensor[(8, 8, 13), bool] */;
    %496 = @func_3055(%494, %495) /* ty=(Tensor[(8, 8, 13), bool], Tensor[(2, 12, 9), bool]) */;
    %497 = %491.0;
    %498 = %496.1;
    (%497, %498, %var_4657)
  };
  %499(%var_4664) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), bool], Tensor[(2, 416), bool]) */
}

def @func_9358() -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(3, 56), float32]) {
  %500 = @func_9336() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %501 = cast(meta[relay.Constant][17] /* ty=Tensor[(3, 56), float32] */, dtype="float32") /* ty=Tensor[(3, 56), float32] */;
  %502 = reshape(%501, newshape=[84, 2]) /* ty=Tensor[(84, 2), float32] */;
  %503 = @func_4958(%502) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64], Tensor[(7, 8, 3), uint64]) */;
  %504 = %500.0;
  %505 = %503.1;
  (%504, %505, meta[relay.Constant][17] /* ty=Tensor[(3, 56), float32] */)
}

def @func_5490() -> Tensor[(2, 12, 9), bool] {
  @func_5488() /* ty=Tensor[(2, 12, 9), bool] */
}

def @func_7852(%var_7851: Tensor[(15), float64]) -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(448), float32], Tensor[(15), float64], Tensor[(352), int8], Tensor[(6, 13, 13), bool], Tensor[(1014), int64]) {
  %517 = fn (%var_7825: Tensor[(15), float64]) -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(448), float32], Tensor[(15), float64], Tensor[(352), int8], Tensor[(6, 13, 13), bool], Tensor[(1014), int64]) {
    %506 = cast(%var_7825, dtype="float64") /* ty=Tensor[(15), float64] */;
    %507 = cast(meta[relay.Constant][18] /* ty=Tensor[(352), int8] */, dtype="int8") /* ty=Tensor[(352), int8] */;
    %508 = reshape(%506, newshape=[15, 1, 1]) /* ty=Tensor[(15, 1, 1), float64] */;
    %509 = reshape(%507, newshape=[8, 44]) /* ty=Tensor[(8, 44), int8] */;
    %510 = @func_2578(%508, %509) /* ty=(Tensor[(8, 14, 4), float32], Tensor[(448), float32], Tensor[(8, 44), float64], Tensor[(15, 8, 44), uint16]) */;
    %511 = cast(meta[relay.Constant][19] /* ty=Tensor[(1014), int64] */, dtype="int64") /* ty=Tensor[(1014), int64] */;
    %512 = reshape(%511, newshape=[6, 13, 13]) /* ty=Tensor[(6, 13, 13), int64] */;
    %513 = @func_4307() /* ty=Tensor[(2, 12, 9), float64] */;
    %514 = @func_2024() /* ty=Tensor[(2, 12, 9), float64] */;
    %515 = %510.1;
    %516 = @func_6694(%512) /* ty=Tensor[(6, 13, 13), bool] */;
    (%513, %514, %515, %var_7825, meta[relay.Constant][18] /* ty=Tensor[(352), int8] */, %516, meta[relay.Constant][19] /* ty=Tensor[(1014), int64] */)
  };
  %517(%var_7851) /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(448), float32], Tensor[(15), float64], Tensor[(352), int8], Tensor[(6, 13, 13), bool], Tensor[(1014), int64]) */
}

def @func_904(%var_902: Tensor[(1008), uint8]) -> (Tensor[(2, 12, 9), float64], Tensor[(216), float32], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), int16], Tensor[(8, 14, 9), bool], uint8, Tensor[(1008), uint8]) {
  @func_901(%var_902) /* ty=(Tensor[(2, 12, 9), float64], Tensor[(216), float32], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), int16], Tensor[(8, 14, 9), bool], uint8, Tensor[(1008), uint8]) */
}

def @func_3573() -> (Tensor[(2, 12, 9), float32],) {
  %518 = @func_542() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */;
  %519 = %518.0;
  %520 = cast(%519, dtype="float32") /* ty=Tensor[(2, 12, 9), float32] */;
  %521 = rsqrt(%520) /* ty=Tensor[(2, 12, 9), float32] */;
  (%521,)
}

def @func_1581() -> Tensor[(2, 12, 9), float64] {
  @func_1406() /* ty=Tensor[(2, 12, 9), float64] */
}

def @func_2581(%var_2579: Tensor[(15, 1, 1), float64], %var_2580: Tensor[(8, 44), int8]) -> (Tensor[(8, 14, 4), float32], Tensor[(448), float32], Tensor[(8, 44), float64], Tensor[(15, 8, 44), uint16]) {
  %540 = fn (%var_2549: Tensor[(15, 1, 1), float64], %var_2561: Tensor[(8, 44), int8]) -> (Tensor[(8, 14, 4), float32], Tensor[(448), float32], Tensor[(8, 44), float64], Tensor[(15, 8, 44), uint16]) {
    %522 = cast(meta[relay.Constant][20] /* ty=Tensor[(448), float32] */, dtype="float32") /* ty=Tensor[(448), float32] */;
    %523 = cast(meta[relay.Constant][20] /* ty=Tensor[(448), float32] */, dtype="float32") /* ty=Tensor[(448), float32] */;
    %524 = cast(%var_2561, dtype="int8") /* ty=Tensor[(8, 44), int8] */;
    %525 = reshape(%522, newshape=[8, 14, 4]) /* ty=Tensor[(8, 14, 4), float32] */;
    %526 = reshape(%523, newshape=[8, 14, 4]) /* ty=Tensor[(8, 14, 4), float32] */;
    %527 = reshape(%524, newshape=[352]) /* ty=Tensor[(352), int8] */;
    %528 = @func_1118(%525, %526, %527) /* ty=(Tensor[(8, 14, 4), float32], Tensor[(11, 2, 16), int8], Tensor[(352), int8]) */;
    %529 = cast(%var_2561, dtype="float64") /* ty=Tensor[(8, 44), float64] */;
    %530 = cast(%var_2549, dtype="float64") /* ty=Tensor[(15, 1, 1), float64] */;
    %531 = atanh(%530) /* ty=Tensor[(15, 1, 1), float64] */;
    %532 = cast(%531, dtype="bool") /* ty=Tensor[(15, 1, 1), bool] */;
    %533 = cast(%var_2561, dtype="bool") /* ty=Tensor[(8, 44), bool] */;
    %534 = less_equal(%532, %533) /* ty=Tensor[(15, 8, 44), bool] */;
    %535 = cast(%534, dtype="uint16") /* ty=Tensor[(15, 8, 44), uint16] */;
    %536 = cast(%var_2549, dtype="uint16") /* ty=Tensor[(15, 1, 1), uint16] */;
    %537 = %528.0;
    %538 = cosh(%529) /* ty=Tensor[(8, 44), float64] */;
    %539 = bitwise_and(%535, %536) /* ty=Tensor[(15, 8, 44), uint16] */;
    (%537, meta[relay.Constant][20] /* ty=Tensor[(448), float32] */, %538, %539)
  };
  %540(%var_2579, %var_2580) /* ty=(Tensor[(8, 14, 4), float32], Tensor[(448), float32], Tensor[(8, 44), float64], Tensor[(15, 8, 44), uint16]) */
}

def @func_5283(%var_5281: Tensor[(312), uint32]) -> (Tensor[(216), float32], Tensor[(2, 12, 9), bool], Tensor[(6, 4, 13), uint32], Tensor[(312), uint32], Tensor[(2, 12, 9), bool]) {
  @func_5280(%var_5281) /* ty=(Tensor[(216), float32], Tensor[(2, 12, 9), bool], Tensor[(6, 4, 13), uint32], Tensor[(312), uint32], Tensor[(2, 12, 9), bool]) */
}

def @func_10788() -> Tensor[(2, 12, 9), bool] {
  %541 = @func_595() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool]) */;
  %541.1
}

def @func_4025() -> (Tensor[(2, 12, 9), bool],) {
  @func_4023() /* ty=(Tensor[(2, 12, 9), bool],) */
}

def @func_9144(%var_9013: Tensor[(8, 1, 11), float32], %var_9018: Tensor[(8, 3, 11), bool], %var_9094: Tensor[(8, 7, 11), float32], %var_9118: Tensor[(176), float64]) -> (Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64], Tensor[(8, 3, 11), float32], Tensor[(2, 12, 9), float64], Tensor[(8, 7, 11), float32], Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), bool], Tensor[(176), float64], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float32]) {
  %542 = @func_2207() /* ty=(Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */;
  %543 = @func_3953() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */;
  %544 = cast(%var_9013, dtype="bool") /* ty=Tensor[(8, 1, 11), bool] */;
  %545 = shape_of(meta[relay.Constant][21] /* ty=Tensor[(8, 1, 11), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %546 = cast(meta[relay.Constant][21] /* ty=Tensor[(8, 1, 11), float32] */, dtype="bool") /* ty=Tensor[(8, 1, 11), bool] */;
  %547 = dyn.reshape(%544, %545, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %548 = greater(%546, %547) /* ty=Tensor[(8, ?, 11), bool] */;
  %549 = cast(%548, dtype="bool") /* ty=Tensor[(8, ?, 11), bool] */;
  %550 = cast(%var_9018, dtype="bool") /* ty=Tensor[(8, 3, 11), bool] */;
  %551 = logical_or(%549, %550) /* ty=Tensor[(8, 3, 11), bool] */;
  %552 = cast(%var_9013, dtype="float32") /* ty=Tensor[(8, 1, 11), float32] */;
  %553 = cast(%551, dtype="float32") /* ty=Tensor[(8, 3, 11), float32] */;
  %554 = @func_7515() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(13, 6, 12), bool], Tensor[(936), uint32], Tensor[(2, 12, 9), float32]) */;
  %555 = cast(%var_9013, dtype="float64") /* ty=Tensor[(8, 1, 11), float64] */;
  %556 = tan(%555) /* ty=Tensor[(8, 1, 11), float64] */;
  %557 = cast(meta[relay.Constant][22] /* ty=Tensor[(8, 1, 11), float64] */, dtype="float32") /* ty=Tensor[(8, 1, 11), float32] */;
  %558 = shape_of(%556, dtype="int32") /* ty=Tensor[(3), int32] */;
  %559 = cast(%556, dtype="float32") /* ty=Tensor[(8, 1, 11), float32] */;
  %560 = dyn.reshape(%557, %558, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %561 = divide(%559, %560) /* ty=Tensor[(8, ?, 11), float32] */;
  %562 = cast(%561, dtype="float32") /* ty=Tensor[(8, ?, 11), float32] */;
  %563 = cast(%var_9094, dtype="float32") /* ty=Tensor[(8, 7, 11), float32] */;
  %564 = cast(%var_9118, dtype="float64") /* ty=Tensor[(176), float64] */;
  %565 = reshape(%564, newshape=[1, 11, 16]) /* ty=Tensor[(1, 11, 16), float64] */;
  %566 = @func_7174(%565) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), bool], Tensor[(832), bool], Tensor[(1, 11, 16), float64]) */;
  %567 = @func_4240() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %568 = %542.1;
  %569 = %543.1;
  %570 = floor_mod(%552, %553) /* ty=Tensor[(8, 3, 11), float32] */;
  %571 = %554.0;
  %572 = mod(%562, %563) /* ty=Tensor[(8, 7, 11), float32] */;
  %573 = @func_3322() /* ty=Tensor[(2, 12, 9), float32] */;
  %574 = %566.0;
  %575 = %567.0;
  %576 = @func_3641() /* ty=Tensor[(2, 12, 9), float32] */;
  (%568, %569, %570, %571, %572, %573, %574, %var_9118, %575, %576)
}

def @func_8396() -> (Tensor[(2, 12, 9), float64],) {
  %577 = @func_6778() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %578 = %577.0;
  (%578,)
}

def @func_4190() -> (Tensor[(2, 12, 9), bool],) {
  %581 = fn () -> (Tensor[(2, 12, 9), bool],) {
    %579 = @func_3270() /* ty=(Tensor[(2, 12, 9), bool],) */;
    %580 = %579.0;
    (%580,)
  };
  %581() /* ty=(Tensor[(2, 12, 9), bool],) */
}

def @func_6059() -> (Tensor[(2, 12, 9), bool],) {
  %582 = @func_4057() /* ty=(Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool]) */;
  %583 = %582.2;
  (%583,)
}

def @func_1064() -> Tensor[(2, 12, 9), float64] {
  %584 = @func_952() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %584.0
}

def @func_2024() -> Tensor[(2, 12, 9), float64] {
  %585 = @func_1322() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %585.0
}

def @func_6350() -> Tensor[(2, 12, 9), float32] {
  %586 = @func_3573() /* ty=(Tensor[(2, 12, 9), float32],) */;
  %587 = %586.0;
  %588 = cast(%587, dtype="float32") /* ty=Tensor[(2, 12, 9), float32] */;
  exp(%588) /* ty=Tensor[(2, 12, 9), float32] */
}

def @func_8882() -> Tensor[(2, 12, 9), bool] {
  @func_8880() /* ty=Tensor[(2, 12, 9), bool] */
}

def @func_3643() -> Tensor[(2, 12, 9), float32] {
  @func_3641() /* ty=Tensor[(2, 12, 9), float32] */
}

def @func_4960(%var_4959: Tensor[(84, 2), float32]) -> (Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64], Tensor[(7, 8, 3), uint64]) {
  %601 = fn (%var_4898: Tensor[(84, 2), float32]) -> (Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64], Tensor[(7, 8, 3), uint64]) {
    %589 = @func_365() /* ty=(Tensor[(2, 12, 9), bool],) */;
    %590 = @func_3953() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */;
    %591 = cast(%var_4898, dtype="float32") /* ty=Tensor[(84, 2), float32] */;
    %592 = reshape(%591, newshape=[7, 8, 3]) /* ty=Tensor[(7, 8, 3), float32] */;
    %593 = @func_4767(%592) /* ty=Tensor[(7, 8, 3), float32] */;
    %594 = cast(%var_4898, dtype="uint64") /* ty=Tensor[(84, 2), uint64] */;
    %595 = shape_of(%593, dtype="int32") /* ty=Tensor[(3), int32] */;
    %596 = cast(%593, dtype="uint64") /* ty=Tensor[(7, 8, 3), uint64] */;
    %597 = dyn.reshape(%594, %595, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %598 = %589.0;
    %599 = %590.1;
    %600 = right_shift(%596, %597) /* ty=Tensor[(7, 8, 3), uint64] */;
    (%598, %599, %600)
  };
  %601(%var_4959) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64], Tensor[(7, 8, 3), uint64]) */
}

def @func_6135(%var_6131: Tensor[(12, 13, 9), int8]) -> (Tensor[(12, 13, 9), int8],) {
  %602 = cast(%var_6131, dtype="int8") /* ty=Tensor[(12, 13, 9), int8] */;
  %603 = shape_of(meta[relay.Constant][23] /* ty=Tensor[(12, 13, 9), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %604 = cast(meta[relay.Constant][23] /* ty=Tensor[(12, 13, 9), int8] */, dtype="int8") /* ty=Tensor[(12, 13, 9), int8] */;
  %605 = dyn.reshape(%602, %603, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %606 = left_shift(%604, %605) /* ty=Tensor[(12, 13, 9), int8] */;
  (%606,)
}

def @func_1406() -> Tensor[(2, 12, 9), float64] {
  %607 = @func_542() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */;
  %607.0
}

def @func_543() -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) {
  %618 = fn () -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) {
    %608 = @func_365() /* ty=(Tensor[(2, 12, 9), bool],) */;
    %609 = %608.0;
    %610 = cast(%609, dtype="float32") /* ty=Tensor[(2, 12, 9), float32] */;
    %611 = cast(%609, dtype="float32") /* ty=Tensor[(2, 12, 9), float32] */;
    %612 = reshape(%610, newshape=[2, 12, 9]) /* ty=Tensor[(2, 12, 9), float32] */;
    %613 = reshape(%611, newshape=[2, 12, 9]) /* ty=Tensor[(2, 12, 9), float32] */;
    %614 = @func_179(%612, %613) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float32]) */;
    %615 = cast(%609, dtype="float64") /* ty=Tensor[(2, 12, 9), float64] */;
    %616 = %614.1;
    %617 = log(%615) /* ty=Tensor[(2, 12, 9), float64] */;
    (%616, %617)
  };
  %618() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */
}

def @func_8065(%var_8063: Tensor[(2, 11, 3), int16], %var_8064: Tensor[(2, 11, 3), int16]) -> Tensor[(2, 11, 3), int16] {
  @func_8061(%var_8063, %var_8064) /* ty=Tensor[(2, 11, 3), int16] */
}

def @func_1689(%var_1674: Tensor[(2, 12, 9), float64]) -> (Tensor[(2, 12, 9), float32],) {
  %619 = @func_1454() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %620 = %619.0;
  %621 = cast(%var_1674, dtype="uint8") /* ty=Tensor[(2, 12, 9), uint8] */;
  %622 = shape_of(%620, dtype="int32") /* ty=Tensor[(3), int32] */;
  %623 = cast(%620, dtype="uint8") /* ty=Tensor[(2, 12, 9), uint8] */;
  %624 = dyn.reshape(%621, %622, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %625 = bitwise_and(%623, %624) /* ty=Tensor[(2, 12, 9), uint8] */;
  %626 = cast(%625, dtype="float32") /* ty=Tensor[(2, 12, 9), float32] */;
  %627 = atan(%626) /* ty=Tensor[(2, 12, 9), float32] */;
  (%627,)
}

def @func_901(%var_886: Tensor[(1008), uint8]) -> (Tensor[(2, 12, 9), float64], Tensor[(216), float32], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), int16], Tensor[(8, 14, 9), bool], uint8, Tensor[(1008), uint8]) {
  %628 = @func_762() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */;
  %629 = @func_342() /* ty=(Tensor[(3, 2, 14), uint32], Tensor[(2, 12, 9), bool], Tensor[(216), float32], Tensor[(2, 12, 9), float32]) */;
  %630 = @func_365() /* ty=(Tensor[(2, 12, 9), bool],) */;
  %631 = @func_623() /* ty=Tensor[(2, 12, 9), bool] */;
  %632 = %630.0;
  %633 = cast(%632, dtype="bool") /* ty=Tensor[(2, 12, 9), bool] */;
  %634 = reshape(%633, newshape=[2, 12, 9]) /* ty=Tensor[(2, 12, 9), bool] */;
  %635 = @func_435(%634) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64]) */;
  %636 = %635.1;
  %637 = cast(%636, dtype="int16") /* ty=Tensor[(2, 12, 9), int16] */;
  %638 = shape_of(%631, dtype="int32") /* ty=Tensor[(3), int32] */;
  %639 = cast(%631, dtype="int16") /* ty=Tensor[(2, 12, 9), int16] */;
  %640 = dyn.reshape(%637, %638, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %641 = cast(meta[relay.Constant][24] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %642 = cast(%var_886, dtype="uint8") /* ty=Tensor[(1008), uint8] */;
  %643 = reshape(%641, newshape=[]) /* ty=uint8 */;
  %644 = reshape(%642, newshape=[8, 14, 9]) /* ty=Tensor[(8, 14, 9), uint8] */;
  %645 = %628.0;
  %646 = %629.2;
  %647 = bitwise_or(%639, %640) /* ty=Tensor[(2, 12, 9), int16] */;
  %648 = @func_452(%643, %644) /* ty=Tensor[(8, 14, 9), bool] */;
  (%645, %646, %632, %647, %648, meta[relay.Constant][24] /* ty=uint8 */, %var_886)
}

def @func_10571(%var_10569: Tensor[(448), float32], %var_10570: uint8) -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(448), float32], Tensor[(352), int8], Tensor[(8, 14, 9), bool], uint8, Tensor[(1008), uint8], Tensor[(8, 14, 4), int16]) {
  %673 = fn (%var_10531: Tensor[(448), float32], %var_10549: uint8) -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(448), float32], Tensor[(352), int8], Tensor[(8, 14, 9), bool], uint8, Tensor[(1008), uint8], Tensor[(8, 14, 4), int16]) {
    %649 = @func_1993() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64]) */;
    %650 = cast(%var_10549, dtype="uint8") /* ty=uint8 */;
    %651 = cast(meta[relay.Constant][26] /* ty=Tensor[(1008), uint8] */, dtype="uint8") /* ty=Tensor[(1008), uint8] */;
    %652 = reshape(%650, newshape=[]) /* ty=uint8 */;
    %653 = reshape(%651, newshape=[8, 14, 9]) /* ty=Tensor[(8, 14, 9), uint8] */;
    %654 = cast(%var_10531, dtype="float32") /* ty=Tensor[(448), float32] */;
    %655 = cast(%var_10531, dtype="float32") /* ty=Tensor[(448), float32] */;
    %656 = cast(meta[relay.Constant][25] /* ty=Tensor[(352), int8] */, dtype="int8") /* ty=Tensor[(352), int8] */;
    %657 = reshape(%654, newshape=[8, 14, 4]) /* ty=Tensor[(8, 14, 4), float32] */;
    %658 = reshape(%655, newshape=[8, 14, 4]) /* ty=Tensor[(8, 14, 4), float32] */;
    %659 = reshape(%656, newshape=[352]) /* ty=Tensor[(352), int8] */;
    %660 = @func_1118(%657, %658, %659) /* ty=(Tensor[(8, 14, 4), float32], Tensor[(11, 2, 16), int8], Tensor[(352), int8]) */;
    %661 = %660.0;
    %662 = cast(%661, dtype="float32") /* ty=Tensor[(8, 14, 4), float32] */;
    %663 = exp(%662) /* ty=Tensor[(8, 14, 4), float32] */;
    %664 = cast(%661, dtype="int16") /* ty=Tensor[(8, 14, 4), int16] */;
    %665 = shape_of(%663, dtype="int32") /* ty=Tensor[(3), int32] */;
    %666 = cast(%663, dtype="int16") /* ty=Tensor[(8, 14, 4), int16] */;
    %667 = dyn.reshape(%664, %665, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %668 = %649.2;
    %669 = @func_8083() /* ty=Tensor[(2, 12, 9), float64] */;
    %670 = @func_6848() /* ty=Tensor[(2, 12, 9), bool] */;
    %671 = @func_452(%652, %653) /* ty=Tensor[(8, 14, 9), bool] */;
    %672 = left_shift(%666, %667) /* ty=Tensor[(8, 14, 4), int16] */;
    (%668, %669, %670, %var_10531, meta[relay.Constant][25] /* ty=Tensor[(352), int8] */, %671, %var_10549, meta[relay.Constant][26] /* ty=Tensor[(1008), uint8] */, %672)
  };
  %673(%var_10569, %var_10570) /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(448), float32], Tensor[(352), int8], Tensor[(8, 14, 9), bool], uint8, Tensor[(1008), uint8], Tensor[(8, 14, 4), int16]) */
}

def @func_9601() -> Tensor[(2, 12, 9), float32] {
  @func_4985() /* ty=Tensor[(2, 12, 9), float32] */
}

def @func_7177(%var_7175: Tensor[(1, 11, 16), float64]) -> (Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), bool], Tensor[(832), bool], Tensor[(1, 11, 16), float64]) {
  @func_7174(%var_7175) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), bool], Tensor[(832), bool], Tensor[(1, 11, 16), float64]) */
}

def @func_6696(%var_6695: Tensor[(6, 13, 13), int64]) -> Tensor[(6, 13, 13), bool] {
  %678 = fn (%var_6686: Tensor[(6, 13, 13), int64]) -> Tensor[(6, 13, 13), bool] {
    %674 = cast(%var_6686, dtype="bool") /* ty=Tensor[(6, 13, 13), bool] */;
    %675 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(6, 13, 13), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %676 = cast(meta[relay.Constant][27] /* ty=Tensor[(6, 13, 13), int64] */, dtype="bool") /* ty=Tensor[(6, 13, 13), bool] */;
    %677 = dyn.reshape(%674, %675, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    greater(%676, %677) /* ty=Tensor[(6, 13, 13), bool] */
  };
  %678(%var_6695) /* ty=Tensor[(6, 13, 13), bool] */
}

def @func_9603() -> Tensor[(2, 12, 9), float32] {
  @func_9601() /* ty=Tensor[(2, 12, 9), float32] */
}

def @func_8487(%var_8467: Tensor[(4, 7, 4), float32]) -> Tensor[(4, 7, 4), float32] {
  %679 = cast(meta[relay.Constant][28] /* ty=Tensor[(4, 7, 4), float32] */, dtype="float32") /* ty=Tensor[(4, 7, 4), float32] */;
  %680 = shape_of(%var_8467, dtype="int32") /* ty=Tensor[(3), int32] */;
  %681 = cast(%var_8467, dtype="float32") /* ty=Tensor[(4, 7, 4), float32] */;
  %682 = dyn.reshape(%679, %680, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_mod(%681, %682) /* ty=Tensor[(4, 7, 4), float32] */
}

def @func_10272() -> (Tensor[(216), float32], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) {
  @func_10270() /* ty=(Tensor[(216), float32], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */
}

def @func_7516() -> (Tensor[(2, 12, 9), float64], Tensor[(13, 6, 12), bool], Tensor[(936), uint32], Tensor[(2, 12, 9), float32]) {
  %693 = fn () -> (Tensor[(2, 12, 9), float64], Tensor[(13, 6, 12), bool], Tensor[(936), uint32], Tensor[(2, 12, 9), float32]) {
    %683 = @func_2455() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */;
    %684 = cast(meta[relay.Constant][29] /* ty=Tensor[(936), uint32] */, dtype="uint32") /* ty=Tensor[(936), uint32] */;
    %685 = cast(meta[relay.Constant][29] /* ty=Tensor[(936), uint32] */, dtype="uint32") /* ty=Tensor[(936), uint32] */;
    %686 = reshape(%684, newshape=[13, 6, 12]) /* ty=Tensor[(13, 6, 12), uint32] */;
    %687 = reshape(%685, newshape=[13, 6, 12]) /* ty=Tensor[(13, 6, 12), uint32] */;
    %688 = @func_5840(%686, %687) /* ty=(Tensor[(13, 6, 12), bool], Tensor[(13, 6, 12), uint16]) */;
    %689 = @func_1888() /* ty=(Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), int64]) */;
    %690 = %683.0;
    %691 = %688.0;
    %692 = %689.0;
    (%690, %691, meta[relay.Constant][29] /* ty=Tensor[(936), uint32] */, %692)
  };
  %693() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(13, 6, 12), bool], Tensor[(936), uint32], Tensor[(2, 12, 9), float32]) */
}

def @func_2865() -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64]) {
  @func_2863() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64]) */
}

def @func_2044() -> (Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32]) {
  %699 = fn () -> (Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32]) {
    %694 = @func_1374() /* ty=Tensor[(2, 12, 9), bool] */;
    %695 = cast(%694, dtype="float64") /* ty=Tensor[(2, 12, 9), float64] */;
    %696 = reshape(%695, newshape=[2, 12, 9]) /* ty=Tensor[(2, 12, 9), float64] */;
    %697 = @func_1689(%696) /* ty=(Tensor[(2, 12, 9), float32],) */;
    %698 = %697.0;
    (%694, %698)
  };
  %699() /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32]) */
}

def @func_6242(%var_6241: Tensor[(2, 416), float64]) -> (Tensor[(2, 12, 9), bool], Tensor[(2, 416), int8], Tensor[(2, 12, 9), float32]) {
  %709 = fn (%var_6228: Tensor[(2, 416), float64]) -> (Tensor[(2, 12, 9), bool], Tensor[(2, 416), int8], Tensor[(2, 12, 9), float32]) {
    %700 = @func_1502() /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool]) */;
    %701 = @func_4788() /* ty=Tensor[(2, 416), float64] */;
    %702 = cast(%var_6228, dtype="int8") /* ty=Tensor[(2, 416), int8] */;
    %703 = shape_of(%701, dtype="int32") /* ty=Tensor[(2), int32] */;
    %704 = cast(%701, dtype="int8") /* ty=Tensor[(2, 416), int8] */;
    %705 = dyn.reshape(%702, %703, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
    %706 = %700.0;
    %707 = maximum(%704, %705) /* ty=Tensor[(2, 416), int8] */;
    %708 = @func_4985() /* ty=Tensor[(2, 12, 9), float32] */;
    (%706, %707, %708)
  };
  %709(%var_6241) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 416), int8], Tensor[(2, 12, 9), float32]) */
}

def @func_596() -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool]) {
  %718 = fn () -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool]) {
    %710 = @func_542() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */;
    %711 = %710.1;
    %712 = cast(%711, dtype="float32") /* ty=Tensor[(2, 12, 9), float32] */;
    %713 = cast(%711, dtype="float32") /* ty=Tensor[(2, 12, 9), float32] */;
    %714 = reshape(%712, newshape=[2, 12, 9]) /* ty=Tensor[(2, 12, 9), float32] */;
    %715 = reshape(%713, newshape=[2, 12, 9]) /* ty=Tensor[(2, 12, 9), float32] */;
    %716 = @func_179(%714, %715) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float32]) */;
    %717 = %716.0;
    (%711, %717)
  };
  %718() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool]) */
}

def @func_6402() -> (Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) {
  %723 = fn () -> (Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) {
    %719 = @func_4240() /* ty=(Tensor[(2, 12, 9), float64],) */;
    %720 = @func_6350() /* ty=Tensor[(2, 12, 9), float32] */;
    %721 = %719.0;
    %722 = @func_5638() /* ty=Tensor[(2, 12, 9), float64] */;
    (%720, %721, %722)
  };
  %723() /* ty=(Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */
}

def @func_6681() -> Tensor[(2, 12, 9), float64] {
  @func_6679() /* ty=Tensor[(2, 12, 9), float64] */
}

def @func_8490(%var_8488: Tensor[(4, 7, 4), float32]) -> Tensor[(4, 7, 4), float32] {
  @func_8487(%var_8488) /* ty=Tensor[(4, 7, 4), float32] */
}

def @func_10178(%var_10177: Tensor[(1, 9, 14), float64]) -> Tensor[(1, 9, 14), float64] {
  %725 = fn (%var_10173: Tensor[(1, 9, 14), float64]) -> Tensor[(1, 9, 14), float64] {
    %724 = cast(%var_10173, dtype="float64") /* ty=Tensor[(1, 9, 14), float64] */;
    acos(%724) /* ty=Tensor[(1, 9, 14), float64] */
  };
  %725(%var_10177) /* ty=Tensor[(1, 9, 14), float64] */
}

def @func_1338() -> (Tensor[(2, 12, 9), float64],) {
  %728 = fn () -> (Tensor[(2, 12, 9), float64],) {
    %726 = @func_542() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */;
    %727 = %726.1;
    (%727,)
  };
  %728() /* ty=(Tensor[(2, 12, 9), float64],) */
}

def @func_9796() -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), float32]) {
  %734 = fn () -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), float32]) {
    %729 = @func_762() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */;
    %730 = @func_6401() /* ty=(Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */;
    %731 = %729.1;
    %732 = @func_6350() /* ty=Tensor[(2, 12, 9), float32] */;
    %733 = %730.0;
    (%731, %732, %733)
  };
  %734() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), float32]) */
}

def @func_10270() -> (Tensor[(216), float32], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) {
  %735 = @func_4638() /* ty=(Tensor[(2, 12, 9), bool], Tensor[(216), float32], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64]) */;
  %736 = @func_8035() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %737 = @func_1145() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %738 = %735.1;
  %739 = %736.0;
  %740 = %737.0;
  (%738, %739, %740)
}

def @func_9587(%var_9586: Tensor[(660, 1), float64]) -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(10, 11, 6), float64], Tensor[(660, 1), float64], Tensor[(2, 12, 9), bool]) {
  %754 = fn (%var_9555: Tensor[(660, 1), float64]) -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(10, 11, 6), float64], Tensor[(660, 1), float64], Tensor[(2, 12, 9), bool]) {
    %741 = @func_6806() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(12, 13, 9), int8], Tensor[(1404), int8], Tensor[(2, 12, 9), bool]) */;
    %742 = @func_9336() /* ty=(Tensor[(2, 12, 9), float64],) */;
    %743 = cast(%var_9555, dtype="float64") /* ty=Tensor[(660, 1), float64] */;
    %744 = reshape(%743, newshape=[10, 11, 6]) /* ty=Tensor[(10, 11, 6), float64] */;
    %745 = @func_7530(%744) /* ty=(Tensor[(10, 11, 6), float64],) */;
    %746 = @func_5196() /* ty=Tensor[(2, 12, 9), float64] */;
    %747 = cast(%746, dtype="float64") /* ty=Tensor[(2, 12, 9), float64] */;
    %748 = reshape(%747, newshape=[2, 12, 9]) /* ty=Tensor[(2, 12, 9), float64] */;
    %749 = @func_5747(%748) /* ty=(Tensor[(2, 12, 9), bool],) */;
    %750 = %741.0;
    %751 = %742.0;
    %752 = %745.0;
    %753 = %749.0;
    (%750, %746, %751, %752, %var_9555, %753)
  };
  %754(%var_9586) /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(10, 11, 6), float64], Tensor[(660, 1), float64], Tensor[(2, 12, 9), bool]) */
}

def @func_8239(%var_8212: Tensor[(60), uint64], %var_8231: Tensor[(810), float32]) -> (Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64], Tensor[(6, 2, 10), bool], Tensor[(60), uint64], Tensor[(120), uint64], Tensor[(2, 12, 9), float64], Tensor[(715), float64], Tensor[(810), float32]) {
  %755 = @func_3524() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float32], Tensor[(8, 14, 9), bool], uint8, Tensor[(1008), uint8]) */;
  %756 = cast(%var_8212, dtype="uint64") /* ty=Tensor[(60), uint64] */;
  %757 = cast(meta[relay.Constant][30] /* ty=Tensor[(120), uint64] */, dtype="uint64") /* ty=Tensor[(120), uint64] */;
  %758 = reshape(%756, newshape=[6, 1, 10]) /* ty=Tensor[(6, 1, 10), uint64] */;
  %759 = reshape(%757, newshape=[6, 2, 10]) /* ty=Tensor[(6, 2, 10), uint64] */;
  %760 = @func_4263(%758, %759) /* ty=(Tensor[(6, 2, 10), bool],) */;
  %761 = cast(meta[relay.Constant][31] /* ty=Tensor[(715), float64] */, dtype="float64") /* ty=Tensor[(715), float64] */;
  %762 = cast(%var_8231, dtype="float32") /* ty=Tensor[(810), float32] */;
  %763 = reshape(%761, newshape=[13, 5, 11]) /* ty=Tensor[(13, 5, 11), float64] */;
  %764 = reshape(%762, newshape=[81, 10]) /* ty=Tensor[(81, 10), float32] */;
  %765 = @func_5973(%763, %764) /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(13, 5, 11), bool], Tensor[(13, 5, 11), float32], Tensor[(2, 12, 9), bool], Tensor[(9, 15, 6), bool], Tensor[(81, 10), float32]) */;
  %766 = @func_5292() /* ty=Tensor[(2, 12, 9), bool] */;
  %767 = %755.0;
  %768 = %760.0;
  %769 = %765.1;
  (%766, %767, %768, %var_8212, meta[relay.Constant][30] /* ty=Tensor[(120), uint64] */, %769, meta[relay.Constant][31] /* ty=Tensor[(715), float64] */, %var_8231)
}

def @func_9422() -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(8, 8, 13), bool]) {
  %777 = fn () -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(8, 8, 13), bool]) {
    %770 = @func_1145() /* ty=(Tensor[(2, 12, 9), float64],) */;
    %771 = @func_1337() /* ty=(Tensor[(2, 12, 9), float64],) */;
    %772 = @func_4448() /* ty=(Tensor[(8, 14, 9), bool], Tensor[(8, 8, 13), bool], Tensor[(2, 416), float64]) */;
    %773 = %770.0;
    %774 = @func_1618() /* ty=Tensor[(2, 12, 9), float64] */;
    %775 = %771.0;
    %776 = %772.1;
    (%773, %774, %775, %776)
  };
  %777() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(8, 8, 13), bool]) */
}

def @func_4142() -> (Tensor[(2, 12, 9), float64],) {
  %778 = @func_1145() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %779 = %778.0;
  (%779,)
}

def @func_2026() -> Tensor[(2, 12, 9), float64] {
  @func_2024() /* ty=Tensor[(2, 12, 9), float64] */
}

def @func_3252() -> (Tensor[(2, 12, 9), float64],) {
  %780 = @func_2273() /* ty=Tensor[(2, 12, 9), float64] */;
  (%780,)
}

def @func_7648(%var_7646: float32, %var_7647: Tensor[(7, 13, 11), float32]) -> (Tensor[(7, 13, 11), float32], Tensor[(2, 12, 9), float64], Tensor[(10, 11, 6), float64], Tensor[(660), float64], Tensor[(2, 12, 9), float64]) {
  %791 = fn (%var_7588: float32, %var_7589: Tensor[(7, 13, 11), float32]) -> (Tensor[(7, 13, 11), float32], Tensor[(2, 12, 9), float64], Tensor[(10, 11, 6), float64], Tensor[(660), float64], Tensor[(2, 12, 9), float64]) {
    %781 = cast(%var_7588, dtype="float32") /* ty=float32 */;
    %782 = cast(%var_7589, dtype="float32") /* ty=Tensor[(7, 13, 11), float32] */;
    %783 = cast(meta[relay.Constant][32] /* ty=Tensor[(660), float64] */, dtype="float64") /* ty=Tensor[(660), float64] */;
    %784 = reshape(%783, newshape=[10, 11, 6]) /* ty=Tensor[(10, 11, 6), float64] */;
    %785 = @func_7530(%784) /* ty=(Tensor[(10, 11, 6), float64],) */;
    %786 = @func_3252() /* ty=(Tensor[(2, 12, 9), float64],) */;
    %787 = divide(%781, %782) /* ty=Tensor[(7, 13, 11), float32] */;
    %788 = @func_2273() /* ty=Tensor[(2, 12, 9), float64] */;
    %789 = %785.0;
    %790 = %786.0;
    (%787, %788, %789, meta[relay.Constant][32] /* ty=Tensor[(660), float64] */, %790)
  };
  %791(%var_7646, %var_7647) /* ty=(Tensor[(7, 13, 11), float32], Tensor[(2, 12, 9), float64], Tensor[(10, 11, 6), float64], Tensor[(660), float64], Tensor[(2, 12, 9), float64]) */
}

def @func_11277(%var_11264: Tensor[(3, 8, 3), float64]) -> Tensor[(3, 8, 3), float64] {
  %792 = cast(%var_11264, dtype="float64") /* ty=Tensor[(3, 8, 3), float64] */;
  %793 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(3, 8, 3), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %794 = cast(meta[relay.Constant][33] /* ty=Tensor[(3, 8, 3), float64] */, dtype="float64") /* ty=Tensor[(3, 8, 3), float64] */;
  %795 = dyn.reshape(%792, %793, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  divide(%794, %795) /* ty=Tensor[(3, 8, 3), float64] */
}

def @func_11252() -> (Tensor[(2, 12, 9), float32],) {
  %798 = fn () -> (Tensor[(2, 12, 9), float32],) {
    %796 = @func_2207() /* ty=(Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */;
    %797 = %796.0;
    (%797,)
  };
  %798() /* ty=(Tensor[(2, 12, 9), float32],) */
}

def @func_5379(%var_5378: Tensor[(14, 3, 2), float32]) -> (Tensor[(14, 3, 2), float32], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64]) {
  %804 = fn (%var_5349: Tensor[(14, 3, 2), float32]) -> (Tensor[(14, 3, 2), float32], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64]) {
    %799 = cast(%var_5349, dtype="float32") /* ty=Tensor[(14, 3, 2), float32] */;
    %800 = @func_3252() /* ty=(Tensor[(2, 12, 9), float64],) */;
    %801 = erf(%799) /* ty=Tensor[(14, 3, 2), float32] */;
    %802 = @func_2219() /* ty=Tensor[(2, 12, 9), bool] */;
    %803 = %800.0;
    (%801, %802, %803)
  };
  %804(%var_5378) /* ty=(Tensor[(14, 3, 2), float32], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64]) */
}

def @func_10907(%var_10896: Tensor[(12, 84), uint8], %var_10902: Tensor[(312), uint32]) -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(12, 84), int32], Tensor[(2, 12, 9), bool], Tensor[(312), uint32]) {
  %805 = @func_7866() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %806 = @func_5165() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(8, 14, 9), bool], Tensor[(12, 84), uint8]) */;
  %807 = %806.4;
  %808 = cast(%var_10896, dtype="int32") /* ty=Tensor[(12, 84), int32] */;
  %809 = shape_of(%807, dtype="int32") /* ty=Tensor[(2), int32] */;
  %810 = cast(%807, dtype="int32") /* ty=Tensor[(12, 84), int32] */;
  %811 = dyn.reshape(%808, %809, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %812 = cast(%var_10902, dtype="uint32") /* ty=Tensor[(312), uint32] */;
  %813 = reshape(%812, newshape=[312]) /* ty=Tensor[(312), uint32] */;
  %814 = @func_5280(%813) /* ty=(Tensor[(216), float32], Tensor[(2, 12, 9), bool], Tensor[(6, 4, 13), uint32], Tensor[(312), uint32], Tensor[(2, 12, 9), bool]) */;
  %815 = %805.0;
  %816 = @func_3961() /* ty=Tensor[(2, 12, 9), float64] */;
  %817 = maximum(%810, %811) /* ty=Tensor[(12, 84), int32] */;
  %818 = %814.1;
  (%815, %816, %817, %818, %var_10902)
}

def @func_4023() -> (Tensor[(2, 12, 9), bool],) {
  %819 = @func_3219() /* ty=(Tensor[(2, 12, 9), bool],) */;
  %820 = %819.0;
  (%820,)
}

def @func_11492(%var_11490: Tensor[(810), float32]) -> (Tensor[(1404), int8], Tensor[(9, 15, 6), bool], Tensor[(715), float64], Tensor[(810), float32], Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), float64]) {
  @func_11489(%var_11490) /* ty=(Tensor[(1404), int8], Tensor[(9, 15, 6), bool], Tensor[(715), float64], Tensor[(810), float32], Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), float64]) */
}

def @func_7481(%var_7480: Tensor[(1, 168), float32]) -> (Tensor[(2, 12, 9), bool], Tensor[(7, 8, 3), float32], Tensor[(1, 168), float32], Tensor[(2, 12, 9), float64]) {
  %828 = fn (%var_7464: Tensor[(1, 168), float32]) -> (Tensor[(2, 12, 9), bool], Tensor[(7, 8, 3), float32], Tensor[(1, 168), float32], Tensor[(2, 12, 9), float64]) {
    %821 = @func_2467() /* ty=(Tensor[(2, 12, 9), bool],) */;
    %822 = cast(%var_7464, dtype="float32") /* ty=Tensor[(1, 168), float32] */;
    %823 = reshape(%822, newshape=[7, 8, 3]) /* ty=Tensor[(7, 8, 3), float32] */;
    %824 = @func_1337() /* ty=(Tensor[(2, 12, 9), float64],) */;
    %825 = %821.0;
    %826 = @func_4767(%823) /* ty=Tensor[(7, 8, 3), float32] */;
    %827 = %824.0;
    (%825, %826, %var_7464, %827)
  };
  %828(%var_7480) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(7, 8, 3), float32], Tensor[(1, 168), float32], Tensor[(2, 12, 9), float64]) */
}

def @func_9197(%var_9194: Tensor[(9, 3, 16), float32], %var_9195: Tensor[(88), float32], %var_9196: Tensor[(176), float64]) -> (Tensor[(9, 3, 16), float32], Tensor[(2, 12, 9), float32], Tensor[(88), float32], Tensor[(264), bool], Tensor[(308, 2), float32], Tensor[(176), float64], Tensor[(2, 12, 9), bool]) {
  @func_9192(%var_9194, %var_9195, %var_9196) /* ty=(Tensor[(9, 3, 16), float32], Tensor[(2, 12, 9), float32], Tensor[(88), float32], Tensor[(264), bool], Tensor[(308, 2), float32], Tensor[(176), float64], Tensor[(2, 12, 9), bool]) */
}

def @func_1016() -> (Tensor[(2, 12, 9), float32],) {
  %831 = fn () -> (Tensor[(2, 12, 9), float32],) {
    %829 = @func_342() /* ty=(Tensor[(3, 2, 14), uint32], Tensor[(2, 12, 9), bool], Tensor[(216), float32], Tensor[(2, 12, 9), float32]) */;
    %830 = %829.3;
    (%830,)
  };
  %831() /* ty=(Tensor[(2, 12, 9), float32],) */
}

def @func_6448() -> Tensor[(2, 12, 9), bool] {
  %833 = fn () -> Tensor[(2, 12, 9), bool] {
    %832 = @func_1502() /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool]) */;
    %832.2
  };
  %833() /* ty=Tensor[(2, 12, 9), bool] */
}

def @func_2273() -> Tensor[(2, 12, 9), float64] {
  %834 = @func_2043() /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32]) */;
  %835 = %834.0;
  %836 = cast(%835, dtype="float64") /* ty=Tensor[(2, 12, 9), float64] */;
  sigmoid(%836) /* ty=Tensor[(2, 12, 9), float64] */
}

def @func_11048() -> Tensor[(2, 12, 9), float64] {
  @func_11046() /* ty=Tensor[(2, 12, 9), float64] */
}

def @func_9915() -> Tensor[(8, 8, 13), bool] {
  %837 = @func_8594() /* ty=(Tensor[(8, 8, 13), bool],) */;
  %837.0
}

def @func_10149() -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) {
  @func_10147() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */
}

def @func_1375() -> Tensor[(2, 12, 9), bool] {
  %839 = fn () -> Tensor[(2, 12, 9), bool] {
    %838 = @func_365() /* ty=(Tensor[(2, 12, 9), bool],) */;
    %838.0
  };
  %839() /* ty=Tensor[(2, 12, 9), bool] */
}

def @func_3254() -> (Tensor[(2, 12, 9), float64],) {
  @func_3252() /* ty=(Tensor[(2, 12, 9), float64],) */
}

def @func_10209() -> Tensor[(2, 12, 9), float64] {
  @func_10207() /* ty=Tensor[(2, 12, 9), float64] */
}

def @func_4815(%var_4808: Tensor[(7, 13, 6), float64], %var_4809: Tensor[(7, 13, 6), float64]) -> (Tensor[(7, 13, 6), float64], Tensor[(2, 12, 9), float64]) {
  %840 = cast(%var_4809, dtype="float64") /* ty=Tensor[(7, 13, 6), float64] */;
  %841 = shape_of(%var_4808, dtype="int32") /* ty=Tensor[(3), int32] */;
  %842 = cast(%var_4808, dtype="float64") /* ty=Tensor[(7, 13, 6), float64] */;
  %843 = dyn.reshape(%840, %841, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %844 = power(%842, %843) /* ty=Tensor[(7, 13, 6), float64] */;
  %845 = @func_4307() /* ty=Tensor[(2, 12, 9), float64] */;
  (%844, %845)
}

def @func_4241() -> (Tensor[(2, 12, 9), float64],) {
  %848 = fn () -> (Tensor[(2, 12, 9), float64],) {
    %846 = @func_1454() /* ty=(Tensor[(2, 12, 9), float64],) */;
    %847 = %846.0;
    (%847,)
  };
  %848() /* ty=(Tensor[(2, 12, 9), float64],) */
}

def @func_6951() -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool]) {
  @func_6949() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool]) */
}

def @func_4750(%var_4705: Tensor[(352), int8]) -> (Tensor[(2, 12, 9), float32], Tensor[(352), int8], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), bool], Tensor[(1008), uint8], Tensor[(2, 12, 9), float64], Tensor[(11, 11, 5), uint8]) {
  %849 = cast(%var_4705, dtype="int8") /* ty=Tensor[(352), int8] */;
  %850 = reshape(%849, newshape=[352]) /* ty=Tensor[(352), int8] */;
  %851 = @func_3863(%850) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32], Tensor[(352), int8]) */;
  %852 = @func_393() /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32]) */;
  %853 = cast(meta[relay.Constant][34] /* ty=Tensor[(1008), uint8] */, dtype="uint8") /* ty=Tensor[(1008), uint8] */;
  %854 = reshape(%853, newshape=[1008]) /* ty=Tensor[(1008), uint8] */;
  %855 = @func_901(%854) /* ty=(Tensor[(2, 12, 9), float64], Tensor[(216), float32], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), int16], Tensor[(8, 14, 9), bool], uint8, Tensor[(1008), uint8]) */;
  %856 = cast(meta[relay.Constant][35] /* ty=Tensor[(1, 11, 5), int32] */, dtype="int32") /* ty=Tensor[(1, 11, 5), int32] */;
  %857 = cast(meta[relay.Constant][36] /* ty=Tensor[(11, 11, 5), int32] */, dtype="int32") /* ty=Tensor[(11, 11, 5), int32] */;
  %858 = right_shift(%856, %857) /* ty=Tensor[(11, 11, 5), int32] */;
  %859 = cast(meta[relay.Constant][35] /* ty=Tensor[(1, 11, 5), int32] */, dtype="uint8") /* ty=Tensor[(1, 11, 5), uint8] */;
  %860 = cast(%858, dtype="uint8") /* ty=Tensor[(11, 11, 5), uint8] */;
  %861 = %851.1;
  %862 = %852.0;
  %863 = %855.2;
  %864 = @func_3961() /* ty=Tensor[(2, 12, 9), float64] */;
  %865 = logical_xor(%859, %860) /* ty=Tensor[(11, 11, 5), uint8] */;
  (%861, %var_4705, %862, %863, meta[relay.Constant][34] /* ty=Tensor[(1008), uint8] */, %864, %865)
}

def @func_1145() -> (Tensor[(2, 12, 9), float64],) {
  %866 = @func_595() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool]) */;
  %867 = %866.0;
  (%867,)
}

def @func_1262(%var_1260: Tensor[(352), int8]) -> (Tensor[(2, 12, 9), float32], Tensor[(11, 2, 16), float32], Tensor[(352), float32]) {
  @func_1259(%var_1260) /* ty=(Tensor[(2, 12, 9), float32], Tensor[(11, 2, 16), float32], Tensor[(352), float32]) */
}

def @func_5488() -> Tensor[(2, 12, 9), bool] {
  @func_1374() /* ty=Tensor[(2, 12, 9), bool] */
}

def @func_3059(%var_3057: Tensor[(8, 8, 13), bool], %var_3058: Tensor[(8, 8, 13), bool]) -> (Tensor[(8, 8, 13), bool], Tensor[(2, 12, 9), bool]) {
  @func_3055(%var_3057, %var_3058) /* ty=(Tensor[(8, 8, 13), bool], Tensor[(2, 12, 9), bool]) */
}

def @func_6138(%var_6136: Tensor[(12, 13, 9), int8]) -> (Tensor[(12, 13, 9), int8],) {
  @func_6135(%var_6136) /* ty=(Tensor[(12, 13, 9), int8],) */
}

def @func_11333(%var_11313: Tensor[(832), float64]) -> Tensor[(832), float32] {
  %868 = @func_9270() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(8, 8, 13), bool], Tensor[(832), float64], Tensor[(2, 12, 9), float64], Tensor[(168), float32], Tensor[(2, 12, 9), bool]) */;
  %869 = %868.2;
  %870 = cast(%var_11313, dtype="float32") /* ty=Tensor[(832), float32] */;
  %871 = shape_of(%869, dtype="int32") /* ty=Tensor[(1), int32] */;
  %872 = cast(%869, dtype="float32") /* ty=Tensor[(832), float32] */;
  %873 = dyn.reshape(%870, %871, newshape=[]) /* ty=Tensor[(?), float32] */;
  divide(%872, %873) /* ty=Tensor[(832), float32] */
}

def @func_6949() -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool]) {
  %874 = @func_1145() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %875 = @func_5714() /* ty=(Tensor[(2, 12, 9), bool],) */;
  %876 = @func_5196() /* ty=Tensor[(2, 12, 9), float64] */;
  %877 = %874.0;
  %878 = %875.0;
  (%876, %877, %878)
}

def @func_4057() -> (Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool]) {
  %879 = @func_3573() /* ty=(Tensor[(2, 12, 9), float32],) */;
  %880 = @func_3252() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %881 = @func_4023() /* ty=(Tensor[(2, 12, 9), bool],) */;
  %882 = %879.0;
  %883 = %880.0;
  %884 = %881.0;
  (%882, %883, %884)
}

def @func_1408() -> Tensor[(2, 12, 9), float64] {
  @func_1406() /* ty=Tensor[(2, 12, 9), float64] */
}

def @func_7866() -> (Tensor[(2, 12, 9), float64],) {
  %885 = @func_3252() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %886 = %885.0;
  (%886,)
}

def @func_9360() -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(3, 56), float32]) {
  @func_9358() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(3, 56), float32]) */
}

def @func_3055(%var_3028: Tensor[(8, 8, 13), bool], %var_3029: Tensor[(8, 8, 13), bool]) -> (Tensor[(8, 8, 13), bool], Tensor[(2, 12, 9), bool]) {
  %887 = cast(%var_3029, dtype="bool") /* ty=Tensor[(8, 8, 13), bool] */;
  %888 = shape_of(%var_3028, dtype="int32") /* ty=Tensor[(3), int32] */;
  %889 = cast(%var_3028, dtype="bool") /* ty=Tensor[(8, 8, 13), bool] */;
  %890 = dyn.reshape(%887, %888, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %891 = @func_365() /* ty=(Tensor[(2, 12, 9), bool],) */;
  %892 = logical_or(%889, %890) /* ty=Tensor[(8, 8, 13), bool] */;
  %893 = %891.0;
  (%892, %893)
}

def @func_4987() -> Tensor[(2, 12, 9), float32] {
  @func_4985() /* ty=Tensor[(2, 12, 9), float32] */
}

def @func_7174(%var_7142: Tensor[(1, 11, 16), float64]) -> (Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), bool], Tensor[(832), bool], Tensor[(1, 11, 16), float64]) {
  %894 = cast(meta[relay.Constant][37] /* ty=Tensor[(832), bool] */, dtype="bool") /* ty=Tensor[(832), bool] */;
  %895 = cast(meta[relay.Constant][37] /* ty=Tensor[(832), bool] */, dtype="bool") /* ty=Tensor[(832), bool] */;
  %896 = reshape(%894, newshape=[8, 8, 13]) /* ty=Tensor[(8, 8, 13), bool] */;
  %897 = reshape(%895, newshape=[8, 8, 13]) /* ty=Tensor[(8, 8, 13), bool] */;
  %898 = @func_3055(%896, %897) /* ty=(Tensor[(8, 8, 13), bool], Tensor[(2, 12, 9), bool]) */;
  %899 = cast(%var_7142, dtype="float64") /* ty=Tensor[(1, 11, 16), float64] */;
  %900 = sigmoid(%899) /* ty=Tensor[(1, 11, 16), float64] */;
  %901 = cast(%900, dtype="float64") /* ty=Tensor[(1, 11, 16), float64] */;
  %902 = sqrt(%901) /* ty=Tensor[(1, 11, 16), float64] */;
  %903 = cast(%902, dtype="float64") /* ty=Tensor[(1, 11, 16), float64] */;
  %904 = @func_1029() /* ty=Tensor[(2, 12, 9), bool] */;
  %905 = %898.1;
  %906 = log10(%903) /* ty=Tensor[(1, 11, 16), float64] */;
  (%904, %905, meta[relay.Constant][37] /* ty=Tensor[(832), bool] */, %906)
}

def @func_8794(%var_8792: int32, %var_8793: Tensor[(7, 7, 8), int32]) -> Tensor[(7, 7, 8), int32] {
  %909 = fn (%var_8778: int32, %var_8779: Tensor[(7, 7, 8), int32]) -> Tensor[(7, 7, 8), int32] {
    %907 = cast(%var_8778, dtype="int32") /* ty=int32 */;
    %908 = cast(%var_8779, dtype="int32") /* ty=Tensor[(7, 7, 8), int32] */;
    multiply(%907, %908) /* ty=Tensor[(7, 7, 8), int32] */
  };
  %909(%var_8792, %var_8793) /* ty=Tensor[(7, 7, 8), int32] */
}

def @func_10123(%var_10121: Tensor[(810), float32], %var_10122: Tensor[(1, 1001), float32]) -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(60), uint64], Tensor[(810), float32], Tensor[(2, 12, 9), float64], float32, Tensor[(1, 1001), float32], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), bool], Tensor[(168), float32], Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), float32], Tensor[(7, 8, 3), float64]) {
  @func_10119(%var_10121, %var_10122) /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(60), uint64], Tensor[(810), float32], Tensor[(2, 12, 9), float64], float32, Tensor[(1, 1001), float32], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), bool], Tensor[(168), float32], Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), float32], Tensor[(7, 8, 3), float64]) */
}

def @func_9270() -> (Tensor[(2, 12, 9), float64], Tensor[(8, 8, 13), bool], Tensor[(832), float64], Tensor[(2, 12, 9), float64], Tensor[(168), float32], Tensor[(2, 12, 9), bool]) {
  %910 = cast(meta[relay.Constant][38] /* ty=Tensor[(832), float64] */, dtype="float64") /* ty=Tensor[(832), float64] */;
  %911 = reshape(%910, newshape=[104, 8]) /* ty=Tensor[(104, 8), float64] */;
  %912 = @func_5442(%911) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(8, 8, 13), bool], Tensor[(104, 8), float64], Tensor[(2, 12, 9), float32]) */;
  %913 = cast(meta[relay.Constant][39] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %914 = reshape(%913, newshape=[84, 2]) /* ty=Tensor[(84, 2), float32] */;
  %915 = @func_4958(%914) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64], Tensor[(7, 8, 3), uint64]) */;
  %916 = @func_2467() /* ty=(Tensor[(2, 12, 9), bool],) */;
  %917 = @func_4307() /* ty=Tensor[(2, 12, 9), float64] */;
  %918 = %912.1;
  %919 = %915.1;
  %920 = %916.0;
  (%917, %918, meta[relay.Constant][38] /* ty=Tensor[(832), float64] */, %919, meta[relay.Constant][39] /* ty=Tensor[(168), float32] */, %920)
}

def @func_1454() -> (Tensor[(2, 12, 9), float64],) {
  %921 = @func_542() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */;
  %922 = %921.0;
  (%922,)
}

def @func_4827() -> Tensor[(2, 12, 9), bool] {
  @func_4825() /* ty=Tensor[(2, 12, 9), bool] */
}

def @func_4309() -> Tensor[(2, 12, 9), float64] {
  @func_4307() /* ty=Tensor[(2, 12, 9), float64] */
}

def @func_6061() -> (Tensor[(2, 12, 9), bool],) {
  @func_6059() /* ty=(Tensor[(2, 12, 9), bool],) */
}

def @func_4985() -> Tensor[(2, 12, 9), float32] {
  %923 = @func_1015() /* ty=(Tensor[(2, 12, 9), float32],) */;
  %923.0
}

def @func_5444(%var_5443: Tensor[(104, 8), float64]) -> (Tensor[(2, 12, 9), bool], Tensor[(8, 8, 13), bool], Tensor[(104, 8), float64], Tensor[(2, 12, 9), float32]) {
  %931 = fn (%var_5420: Tensor[(104, 8), float64]) -> (Tensor[(2, 12, 9), bool], Tensor[(8, 8, 13), bool], Tensor[(104, 8), float64], Tensor[(2, 12, 9), float32]) {
    %924 = cast(%var_5420, dtype="float64") /* ty=Tensor[(104, 8), float64] */;
    %925 = reshape(%924, newshape=[416, 2]) /* ty=Tensor[(416, 2), float64] */;
    %926 = @func_4132(%925) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(8, 8, 13), bool], Tensor[(416, 2), float64]) */;
    %927 = @func_2925() /* ty=(Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), float64]) */;
    %928 = @func_623() /* ty=Tensor[(2, 12, 9), bool] */;
    %929 = %926.1;
    %930 = %927.0;
    (%928, %929, %var_5420, %930)
  };
  %931(%var_5443) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(8, 8, 13), bool], Tensor[(104, 8), float64], Tensor[(2, 12, 9), float32]) */
}

def @func_6807() -> (Tensor[(2, 12, 9), float64], Tensor[(12, 13, 9), int8], Tensor[(1404), int8], Tensor[(2, 12, 9), bool]) {
  %938 = fn () -> (Tensor[(2, 12, 9), float64], Tensor[(12, 13, 9), int8], Tensor[(1404), int8], Tensor[(2, 12, 9), bool]) {
    %932 = cast(meta[relay.Constant][40] /* ty=Tensor[(1404), int8] */, dtype="int8") /* ty=Tensor[(1404), int8] */;
    %933 = reshape(%932, newshape=[12, 13, 9]) /* ty=Tensor[(12, 13, 9), int8] */;
    %934 = @func_6135(%933) /* ty=(Tensor[(12, 13, 9), int8],) */;
    %935 = @func_1064() /* ty=Tensor[(2, 12, 9), float64] */;
    %936 = %934.0;
    %937 = @func_623() /* ty=Tensor[(2, 12, 9), bool] */;
    (%935, %936, meta[relay.Constant][40] /* ty=Tensor[(1404), int8] */, %937)
  };
  %938() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(12, 13, 9), int8], Tensor[(1404), int8], Tensor[(2, 12, 9), bool]) */
}

def @func_1456() -> (Tensor[(2, 12, 9), float64],) {
  @func_1454() /* ty=(Tensor[(2, 12, 9), float64],) */
}

def @func_1259(%var_1227: Tensor[(352), int8]) -> (Tensor[(2, 12, 9), float32], Tensor[(11, 2, 16), float32], Tensor[(352), float32]) {
  %939 = @func_1015() /* ty=(Tensor[(2, 12, 9), float32],) */;
  %940 = cast(%var_1227, dtype="int8") /* ty=Tensor[(352), int8] */;
  %941 = cast(%var_1227, dtype="int8") /* ty=Tensor[(352), int8] */;
  %942 = cast(%var_1227, dtype="int8") /* ty=Tensor[(352), int8] */;
  %943 = reshape(%940, newshape=[11, 2, 16]) /* ty=Tensor[(11, 2, 16), int8] */;
  %944 = reshape(%941, newshape=[11, 2, 16]) /* ty=Tensor[(11, 2, 16), int8] */;
  %945 = reshape(%942, newshape=[11, 2, 16]) /* ty=Tensor[(11, 2, 16), int8] */;
  %946 = @func_710(%943, %944, %945) /* ty=(Tensor[(11, 2, 16), float32], Tensor[(11, 2, 16), int8]) */;
  %947 = %946.1;
  %948 = cast(%947, dtype="float32") /* ty=Tensor[(11, 2, 16), float32] */;
  %949 = cast(%var_1227, dtype="float32") /* ty=Tensor[(352), float32] */;
  %950 = %939.0;
  %951 = asinh(%948) /* ty=Tensor[(11, 2, 16), float32] */;
  %952 = cos(%949) /* ty=Tensor[(352), float32] */;
  (%950, %951, %952)
}

def @func_2221() -> Tensor[(2, 12, 9), bool] {
  @func_2219() /* ty=Tensor[(2, 12, 9), bool] */
}

def @func_11489(%var_11466: Tensor[(810), float32]) -> (Tensor[(1404), int8], Tensor[(9, 15, 6), bool], Tensor[(715), float64], Tensor[(810), float32], Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), float64]) {
  %953 = cast(meta[relay.Constant][41] /* ty=Tensor[(715), float64] */, dtype="float64") /* ty=Tensor[(715), float64] */;
  %954 = cast(%var_11466, dtype="float32") /* ty=Tensor[(810), float32] */;
  %955 = reshape(%953, newshape=[13, 5, 11]) /* ty=Tensor[(13, 5, 11), float64] */;
  %956 = reshape(%954, newshape=[81, 10]) /* ty=Tensor[(81, 10), float32] */;
  %957 = @func_5973(%955, %956) /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(13, 5, 11), bool], Tensor[(13, 5, 11), float32], Tensor[(2, 12, 9), bool], Tensor[(9, 15, 6), bool], Tensor[(81, 10), float32]) */;
  %958 = @func_4240() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %959 = @func_11197() /* ty=Tensor[(1404), int8] */;
  %960 = %957.5;
  %961 = @func_11090() /* ty=Tensor[(2, 12, 9), float32] */;
  %962 = %958.0;
  (%959, %960, meta[relay.Constant][41] /* ty=Tensor[(715), float64] */, %var_11466, %961, %962)
}

def @func_2776() -> (Tensor[(2, 12, 9), bool],) {
  %963 = @func_1913() /* ty=Tensor[(2, 12, 9), bool] */;
  (%963,)
}

def @func_11090() -> Tensor[(2, 12, 9), float32] {
  %964 = @func_9851() /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32]) */;
  %964.1
}

def @func_11046() -> Tensor[(2, 12, 9), float64] {
  %965 = @func_4222() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %965.0
}

def @func_3420() -> (Tensor[(2, 12, 9), float64],) {
  %966 = @func_1145() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %967 = %966.0;
  (%967,)
}

def @func_3525() -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float32], Tensor[(8, 14, 9), bool], uint8, Tensor[(1008), uint8]) {
  %978 = fn () -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float32], Tensor[(8, 14, 9), bool], uint8, Tensor[(1008), uint8]) {
    %968 = @func_2273() /* ty=Tensor[(2, 12, 9), float64] */;
    %969 = cast(%968, dtype="bool") /* ty=Tensor[(2, 12, 9), bool] */;
    %970 = reshape(%969, newshape=[2, 12, 9]) /* ty=Tensor[(2, 12, 9), bool] */;
    %971 = @func_1774(%970) /* ty=(Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64]) */;
    %972 = cast(meta[relay.Constant][42] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %973 = cast(meta[relay.Constant][43] /* ty=Tensor[(1008), uint8] */, dtype="uint8") /* ty=Tensor[(1008), uint8] */;
    %974 = reshape(%972, newshape=[]) /* ty=uint8 */;
    %975 = reshape(%973, newshape=[8, 14, 9]) /* ty=Tensor[(8, 14, 9), uint8] */;
    %976 = %971.0;
    %977 = @func_452(%974, %975) /* ty=Tensor[(8, 14, 9), bool] */;
    (%968, %976, %977, meta[relay.Constant][42] /* ty=uint8 */, meta[relay.Constant][43] /* ty=Tensor[(1008), uint8] */)
  };
  %978() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float32], Tensor[(8, 14, 9), bool], uint8, Tensor[(1008), uint8]) */
}

def @func_5844(%var_5842: Tensor[(13, 6, 12), uint32], %var_5843: Tensor[(13, 6, 12), uint32]) -> (Tensor[(13, 6, 12), bool], Tensor[(13, 6, 12), uint16]) {
  @func_5840(%var_5842, %var_5843) /* ty=(Tensor[(13, 6, 12), bool], Tensor[(13, 6, 12), uint16]) */
}

def @func_7532(%var_7531: Tensor[(10, 11, 6), float64]) -> (Tensor[(10, 11, 6), float64],) {
  %981 = fn (%var_7521: Tensor[(10, 11, 6), float64]) -> (Tensor[(10, 11, 6), float64],) {
    %979 = cast(%var_7521, dtype="float64") /* ty=Tensor[(10, 11, 6), float64] */;
    %980 = cos(%979) /* ty=Tensor[(10, 11, 6), float64] */;
    (%980,)
  };
  %981(%var_7531) /* ty=(Tensor[(10, 11, 6), float64],) */
}

def @func_954() -> (Tensor[(2, 12, 9), float64],) {
  @func_952() /* ty=(Tensor[(2, 12, 9), float64],) */
}

def @func_4449() -> (Tensor[(8, 14, 9), bool], Tensor[(8, 8, 13), bool], Tensor[(2, 416), float64]) {
  %988 = fn () -> (Tensor[(8, 14, 9), bool], Tensor[(8, 8, 13), bool], Tensor[(2, 416), float64]) {
    %982 = @func_3524() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float32], Tensor[(8, 14, 9), bool], uint8, Tensor[(1008), uint8]) */;
    %983 = cast(meta[relay.Constant][44] /* ty=Tensor[(2, 416), float64] */, dtype="float64") /* ty=Tensor[(2, 416), float64] */;
    %984 = reshape(%983, newshape=[416, 2]) /* ty=Tensor[(416, 2), float64] */;
    %985 = @func_4132(%984) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(8, 8, 13), bool], Tensor[(416, 2), float64]) */;
    %986 = %982.2;
    %987 = %985.1;
    (%986, %987, meta[relay.Constant][44] /* ty=Tensor[(2, 416), float64] */)
  };
  %988() /* ty=(Tensor[(8, 14, 9), bool], Tensor[(8, 8, 13), bool], Tensor[(2, 416), float64]) */
}

def @func_6352() -> Tensor[(2, 12, 9), float32] {
  @func_6350() /* ty=Tensor[(2, 12, 9), float32] */
}

def @func_8288(%var_8284: Tensor[(936), uint32]) -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(13, 6, 12), uint16], Tensor[(936), uint32]) {
  %989 = @func_4240() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %990 = cast(%var_8284, dtype="uint32") /* ty=Tensor[(936), uint32] */;
  %991 = cast(%var_8284, dtype="uint32") /* ty=Tensor[(936), uint32] */;
  %992 = reshape(%990, newshape=[13, 6, 12]) /* ty=Tensor[(13, 6, 12), uint32] */;
  %993 = reshape(%991, newshape=[13, 6, 12]) /* ty=Tensor[(13, 6, 12), uint32] */;
  %994 = @func_5840(%992, %993) /* ty=(Tensor[(13, 6, 12), bool], Tensor[(13, 6, 12), uint16]) */;
  %995 = @func_8083() /* ty=Tensor[(2, 12, 9), float64] */;
  %996 = %989.0;
  %997 = @func_8104() /* ty=Tensor[(2, 12, 9), bool] */;
  %998 = %994.1;
  (%995, %996, %997, %998, %var_8284)
}

def @func_8398() -> (Tensor[(2, 12, 9), float64],) {
  @func_8396() /* ty=(Tensor[(2, 12, 9), float64],) */
}

def @func_4144() -> (Tensor[(2, 12, 9), float64],) {
  @func_4142() /* ty=(Tensor[(2, 12, 9), float64],) */
}

def @func_7565() -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float32]) {
  %1002 = fn () -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float32]) {
    %999 = @func_7251() /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */;
    %1000 = %999.1;
    %1001 = @func_6350() /* ty=Tensor[(2, 12, 9), float32] */;
    (%1000, %1001)
  };
  %1002() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float32]) */
}

def @func_8596() -> (Tensor[(8, 8, 13), bool],) {
  @func_8594() /* ty=(Tensor[(8, 8, 13), bool],) */
}

def @func_7978() -> (Tensor[(2, 12, 9), float64], Tensor[(9, 15, 6), bool], Tensor[(810), float32], Tensor[(2, 12, 9), float64]) {
  @func_7976() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(9, 15, 6), bool], Tensor[(810), float32], Tensor[(2, 12, 9), float64]) */
}

def @func_9224(%var_9222: Tensor[(4, 12, 6), int8], %var_9223: Tensor[(4, 12, 6), int8]) -> Tensor[(4, 12, 6), int8] {
  @func_9220(%var_9222, %var_9223) /* ty=Tensor[(4, 12, 6), int8] */
}

def @func_2778() -> (Tensor[(2, 12, 9), bool],) {
  @func_2776() /* ty=(Tensor[(2, 12, 9), bool],) */
}

def @func_7073() -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(12, 84), float32]) {
  %1014 = fn () -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(12, 84), float32]) {
    %1003 = @func_4142() /* ty=(Tensor[(2, 12, 9), float64],) */;
    %1004 = @func_1454() /* ty=(Tensor[(2, 12, 9), float64],) */;
    %1005 = @func_5165() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(8, 14, 9), bool], Tensor[(12, 84), uint8]) */;
    %1006 = %1005.4;
    %1007 = cast(meta[relay.Constant][45] /* ty=Tensor[(12, 84), uint8] */, dtype="float32") /* ty=Tensor[(12, 84), float32] */;
    %1008 = shape_of(%1006, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1009 = cast(%1006, dtype="float32") /* ty=Tensor[(12, 84), float32] */;
    %1010 = dyn.reshape(%1007, %1008, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %1011 = %1003.0;
    %1012 = %1004.0;
    %1013 = mod(%1009, %1010) /* ty=Tensor[(12, 84), float32] */;
    (%1011, %1012, %1013)
  };
  %1014() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(12, 84), float32]) */
}

def @func_5638() -> Tensor[(2, 12, 9), float64] {
  %1015 = @func_2863() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64]) */;
  %1015.2
}

def @func_7570() -> (Tensor[(2, 12, 9), float32],) {
  %1018 = fn () -> (Tensor[(2, 12, 9), float32],) {
    %1016 = @func_4057() /* ty=(Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool]) */;
    %1017 = %1016.0;
    (%1017,)
  };
  %1018() /* ty=(Tensor[(2, 12, 9), float32],) */
}

def @func_1503() -> (Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool]) {
  %1023 = fn () -> (Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool]) {
    %1019 = @func_762() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */;
    %1020 = @func_623() /* ty=Tensor[(2, 12, 9), bool] */;
    %1021 = %1019.0;
    %1022 = @func_1374() /* ty=Tensor[(2, 12, 9), bool] */;
    (%1020, %1021, %1022)
  };
  %1023() /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool]) */
}

def @func_3271() -> (Tensor[(2, 12, 9), bool],) {
  %1025 = fn () -> (Tensor[(2, 12, 9), bool],) {
    %1024 = @func_1029() /* ty=Tensor[(2, 12, 9), bool] */;
    (%1024,)
  };
  %1025() /* ty=(Tensor[(2, 12, 9), bool],) */
}

def @func_4825() -> Tensor[(2, 12, 9), bool] {
  @func_1374() /* ty=Tensor[(2, 12, 9), bool] */
}

def @func_4819(%var_4817: Tensor[(7, 13, 6), float64], %var_4818: Tensor[(7, 13, 6), float64]) -> (Tensor[(7, 13, 6), float64], Tensor[(2, 12, 9), float64]) {
  @func_4815(%var_4817, %var_4818) /* ty=(Tensor[(7, 13, 6), float64], Tensor[(2, 12, 9), float64]) */
}

def @func_9643() -> (Tensor[(2, 12, 9), float64],) {
  @func_9641() /* ty=(Tensor[(2, 12, 9), float64],) */
}

def @func_3641() -> Tensor[(2, 12, 9), float32] {
  @func_3322() /* ty=Tensor[(2, 12, 9), float32] */
}

def @func_8085() -> Tensor[(2, 12, 9), float64] {
  @func_8083() /* ty=Tensor[(2, 12, 9), float64] */
}

def @func_8673() -> (Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32]) {
  %1026 = @func_4189() /* ty=(Tensor[(2, 12, 9), bool],) */;
  %1027 = @func_2925() /* ty=(Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), float64]) */;
  %1028 = %1026.0;
  %1029 = %1027.0;
  (%1028, %1029)
}

def @func_1994() -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64]) {
  %1040 = fn () -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64]) {
    %1030 = @func_1145() /* ty=(Tensor[(2, 12, 9), float64],) */;
    %1031 = @func_1888() /* ty=(Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), int64]) */;
    %1032 = %1030.0;
    %1033 = cast(%1032, dtype="float32") /* ty=Tensor[(2, 12, 9), float32] */;
    %1034 = cast(%1032, dtype="float32") /* ty=Tensor[(2, 12, 9), float32] */;
    %1035 = reshape(%1033, newshape=[2, 12, 9]) /* ty=Tensor[(2, 12, 9), float32] */;
    %1036 = reshape(%1034, newshape=[2, 12, 9]) /* ty=Tensor[(2, 12, 9), float32] */;
    %1037 = @func_179(%1035, %1036) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float32]) */;
    %1038 = %1031.1;
    %1039 = %1037.1;
    (%1032, %1038, %1039)
  };
  %1040() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64]) */
}

def @func_9220(%var_9213: Tensor[(4, 12, 6), int8], %var_9214: Tensor[(4, 12, 6), int8]) -> Tensor[(4, 12, 6), int8] {
  %1041 = cast(%var_9214, dtype="int8") /* ty=Tensor[(4, 12, 6), int8] */;
  %1042 = shape_of(%var_9213, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1043 = cast(%var_9213, dtype="int8") /* ty=Tensor[(4, 12, 6), int8] */;
  %1044 = dyn.reshape(%1041, %1042, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  maximum(%1043, %1044) /* ty=Tensor[(4, 12, 6), int8] */
}

def @func_8144(%var_8143: Tensor[(6, 20), uint64]) -> (Tensor[(8, 14, 9), bool], Tensor[(6, 2, 10), bool], Tensor[(60), uint64], Tensor[(6, 20), uint64]) {
  %1053 = fn (%var_8131: Tensor[(6, 20), uint64]) -> (Tensor[(8, 14, 9), bool], Tensor[(6, 2, 10), bool], Tensor[(60), uint64], Tensor[(6, 20), uint64]) {
    %1045 = @func_4448() /* ty=(Tensor[(8, 14, 9), bool], Tensor[(8, 8, 13), bool], Tensor[(2, 416), float64]) */;
    %1046 = cast(meta[relay.Constant][46] /* ty=Tensor[(60), uint64] */, dtype="uint64") /* ty=Tensor[(60), uint64] */;
    %1047 = cast(%var_8131, dtype="uint64") /* ty=Tensor[(6, 20), uint64] */;
    %1048 = reshape(%1046, newshape=[6, 1, 10]) /* ty=Tensor[(6, 1, 10), uint64] */;
    %1049 = reshape(%1047, newshape=[6, 2, 10]) /* ty=Tensor[(6, 2, 10), uint64] */;
    %1050 = @func_4263(%1048, %1049) /* ty=(Tensor[(6, 2, 10), bool],) */;
    %1051 = %1045.0;
    %1052 = %1050.0;
    (%1051, %1052, meta[relay.Constant][46] /* ty=Tensor[(60), uint64] */, %var_8131)
  };
  %1053(%var_8143) /* ty=(Tensor[(8, 14, 9), bool], Tensor[(6, 2, 10), bool], Tensor[(60), uint64], Tensor[(6, 20), uint64]) */
}

def @func_10911(%var_10909: Tensor[(12, 84), uint8], %var_10910: Tensor[(312), uint32]) -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(12, 84), int32], Tensor[(2, 12, 9), bool], Tensor[(312), uint32]) {
  @func_10907(%var_10909, %var_10910) /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(12, 84), int32], Tensor[(2, 12, 9), bool], Tensor[(312), uint32]) */
}

def @func_10119(%var_10024: Tensor[(810), float32], %var_10044: Tensor[(1, 1001), float32]) -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(60), uint64], Tensor[(810), float32], Tensor[(2, 12, 9), float64], float32, Tensor[(1, 1001), float32], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), bool], Tensor[(168), float32], Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), float32], Tensor[(7, 8, 3), float64]) {
  %1054 = @func_5499() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %1055 = cast(meta[relay.Constant][47] /* ty=Tensor[(60), uint64] */, dtype="uint64") /* ty=Tensor[(60), uint64] */;
  %1056 = cast(%var_10024, dtype="float32") /* ty=Tensor[(810), float32] */;
  %1057 = reshape(%1055, newshape=[60]) /* ty=Tensor[(60), uint64] */;
  %1058 = reshape(%1056, newshape=[810]) /* ty=Tensor[(810), float32] */;
  %1059 = @func_8239(%1057, %1058) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64], Tensor[(6, 2, 10), bool], Tensor[(60), uint64], Tensor[(120), uint64], Tensor[(2, 12, 9), float64], Tensor[(715), float64], Tensor[(810), float32]) */;
  %1060 = cast(9.15463f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %1061 = cast(%var_10044, dtype="float32") /* ty=Tensor[(1, 1001), float32] */;
  %1062 = reshape(%1060, newshape=[]) /* ty=float32 */;
  %1063 = reshape(%1061, newshape=[7, 13, 11]) /* ty=Tensor[(7, 13, 11), float32] */;
  %1064 = @func_7645(%1062, %1063) /* ty=(Tensor[(7, 13, 11), float32], Tensor[(2, 12, 9), float64], Tensor[(10, 11, 6), float64], Tensor[(660), float64], Tensor[(2, 12, 9), float64]) */;
  %1065 = @func_2925() /* ty=(Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), float64]) */;
  %1066 = @func_7333() /* ty=(Tensor[(2, 12, 9), bool],) */;
  %1067 = @func_393() /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32]) */;
  %1068 = @func_3573() /* ty=(Tensor[(2, 12, 9), float32],) */;
  %1069 = cast(meta[relay.Constant][48] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %1070 = reshape(%1069, newshape=[84, 2]) /* ty=Tensor[(84, 2), float32] */;
  %1071 = @func_4958(%1070) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64], Tensor[(7, 8, 3), uint64]) */;
  %1072 = %1071.2;
  %1073 = cast(%1072, dtype="float64") /* ty=Tensor[(7, 8, 3), float64] */;
  %1074 = %1054.0;
  %1075 = %1059.1;
  %1076 = %1064.1;
  %1077 = %1065.1;
  %1078 = %1066.0;
  %1079 = @func_5292() /* ty=Tensor[(2, 12, 9), bool] */;
  %1080 = %1067.1;
  %1081 = %1068.0;
  %1082 = atanh(%1073) /* ty=Tensor[(7, 8, 3), float64] */;
  (%1074, %1075, meta[relay.Constant][47] /* ty=Tensor[(60), uint64] */, %var_10024, %1076, 9.15463f /* ty=float32 */, %var_10044, %1077, %1078, %1079, meta[relay.Constant][48] /* ty=Tensor[(168), float32] */, %1080, %1081, %1082)
}

def @func_5280(%var_5268: Tensor[(312), uint32]) -> (Tensor[(216), float32], Tensor[(2, 12, 9), bool], Tensor[(6, 4, 13), uint32], Tensor[(312), uint32], Tensor[(2, 12, 9), bool]) {
  %1083 = @func_4638() /* ty=(Tensor[(2, 12, 9), bool], Tensor[(216), float32], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64]) */;
  %1084 = @func_4638() /* ty=(Tensor[(2, 12, 9), bool], Tensor[(216), float32], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64]) */;
  %1085 = cast(%var_5268, dtype="uint32") /* ty=Tensor[(312), uint32] */;
  %1086 = reshape(%1085, newshape=[6, 4, 13]) /* ty=Tensor[(6, 4, 13), uint32] */;
  %1087 = @func_2776() /* ty=(Tensor[(2, 12, 9), bool],) */;
  %1088 = %1083.1;
  %1089 = %1084.2;
  %1090 = @func_2532(%1086) /* ty=Tensor[(6, 4, 13), uint32] */;
  %1091 = %1087.0;
  (%1088, %1089, %1090, %var_5268, %1091)
}

def @func_5293() -> Tensor[(2, 12, 9), bool] {
  %1093 = fn () -> Tensor[(2, 12, 9), bool] {
    %1092 = @func_1502() /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool]) */;
    %1092.2
  };
  %1093() /* ty=Tensor[(2, 12, 9), bool] */
}

def @func_1776(%var_1775: Tensor[(2, 12, 9), bool]) -> (Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64]) {
  %1104 = fn (%var_1742: Tensor[(2, 12, 9), bool]) -> (Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64]) {
    %1094 = @func_595() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool]) */;
    %1095 = %1094.1;
    %1096 = cast(%var_1742, dtype="float32") /* ty=Tensor[(2, 12, 9), float32] */;
    %1097 = shape_of(%1095, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1098 = cast(%1095, dtype="float32") /* ty=Tensor[(2, 12, 9), float32] */;
    %1099 = dyn.reshape(%1096, %1097, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1100 = @func_1322() /* ty=(Tensor[(2, 12, 9), float64],) */;
    %1101 = power(%1098, %1099) /* ty=Tensor[(2, 12, 9), float32] */;
    %1102 = @func_1029() /* ty=Tensor[(2, 12, 9), bool] */;
    %1103 = %1100.0;
    (%1101, %1102, %1103)
  };
  %1104(%var_1775) /* ty=(Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64]) */
}

def @func_10451() -> Tensor[(2, 12, 9), bool] {
  %1106 = fn () -> Tensor[(2, 12, 9), bool] {
    %1105 = @func_595() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool]) */;
    %1105.1
  };
  %1106() /* ty=Tensor[(2, 12, 9), bool] */
}

def @func_393() -> (Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32]) {
  %1107 = @func_342() /* ty=(Tensor[(3, 2, 14), uint32], Tensor[(2, 12, 9), bool], Tensor[(216), float32], Tensor[(2, 12, 9), float32]) */;
  %1108 = %1107.1;
  %1109 = cast(%1108, dtype="float32") /* ty=Tensor[(2, 12, 9), float32] */;
  %1110 = cast(%1108, dtype="float32") /* ty=Tensor[(2, 12, 9), float32] */;
  %1111 = reshape(%1109, newshape=[2, 12, 9]) /* ty=Tensor[(2, 12, 9), float32] */;
  %1112 = reshape(%1110, newshape=[2, 12, 9]) /* ty=Tensor[(2, 12, 9), float32] */;
  %1113 = @func_179(%1111, %1112) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float32]) */;
  %1114 = %1113.2;
  (%1108, %1114)
}

def @func_7334() -> (Tensor[(2, 12, 9), bool],) {
  %1116 = fn () -> (Tensor[(2, 12, 9), bool],) {
    %1115 = @func_5292() /* ty=Tensor[(2, 12, 9), bool] */;
    (%1115,)
  };
  %1116() /* ty=(Tensor[(2, 12, 9), bool],) */
}

def @func_5750(%var_5748: Tensor[(2, 12, 9), float64]) -> (Tensor[(2, 12, 9), bool],) {
  @func_5747(%var_5748) /* ty=(Tensor[(2, 12, 9), bool],) */
}

def @func_1889() -> (Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), int64]) {
  %1136 = fn () -> (Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), int64]) {
    %1117 = @func_1581() /* ty=Tensor[(2, 12, 9), float64] */;
    %1118 = cast(meta[relay.Constant][49] /* ty=Tensor[(2, 12, 9), float64] */, dtype="float32") /* ty=Tensor[(2, 12, 9), float32] */;
    %1119 = shape_of(%1117, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1120 = cast(%1117, dtype="float32") /* ty=Tensor[(2, 12, 9), float32] */;
    %1121 = dyn.reshape(%1118, %1119, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1122 = @func_595() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool]) */;
    %1123 = @func_1374() /* ty=Tensor[(2, 12, 9), bool] */;
    %1124 = cast(%1123, dtype="float64") /* ty=Tensor[(2, 12, 9), float64] */;
    %1125 = reshape(%1124, newshape=[2, 12, 9]) /* ty=Tensor[(2, 12, 9), float64] */;
    %1126 = @func_1689(%1125) /* ty=(Tensor[(2, 12, 9), float32],) */;
    %1127 = cast(meta[relay.Constant][50] /* ty=Tensor[(2, 12, 9), bool] */, dtype="int64") /* ty=Tensor[(2, 12, 9), int64] */;
    %1128 = shape_of(%1123, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1129 = cast(%1123, dtype="int64") /* ty=Tensor[(2, 12, 9), int64] */;
    %1130 = dyn.reshape(%1127, %1128, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %1131 = mod(%1120, %1121) /* ty=Tensor[(2, 12, 9), float32] */;
    %1132 = %1122.1;
    %1133 = @func_1029() /* ty=Tensor[(2, 12, 9), bool] */;
    %1134 = %1126.0;
    %1135 = subtract(%1129, %1130) /* ty=Tensor[(2, 12, 9), int64] */;
    (%1131, %1132, %1133, %1134, %1135)
  };
  %1136() /* ty=(Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), int64]) */
}

def @func_4544(%var_4542: Tensor[(2, 12, 9), float64], %var_4543: Tensor[(208, 4), float64]) -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(208, 4), float64], Tensor[(2, 416), float64]) {
  %1152 = fn (%var_4488: Tensor[(2, 12, 9), float64], %var_4501: Tensor[(208, 4), float64]) -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(208, 4), float64], Tensor[(2, 416), float64]) {
    %1137 = @func_1337() /* ty=(Tensor[(2, 12, 9), float64],) */;
    %1138 = %1137.0;
    %1139 = cast(%var_4488, dtype="float64") /* ty=Tensor[(2, 12, 9), float64] */;
    %1140 = shape_of(%1138, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1141 = cast(%1138, dtype="float64") /* ty=Tensor[(2, 12, 9), float64] */;
    %1142 = dyn.reshape(%1139, %1140, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1143 = @func_1454() /* ty=(Tensor[(2, 12, 9), float64],) */;
    %1144 = cast(%var_4501, dtype="float64") /* ty=Tensor[(208, 4), float64] */;
    %1145 = reshape(%1144, newshape=[416, 2]) /* ty=Tensor[(416, 2), float64] */;
    %1146 = @func_4132(%1145) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(8, 8, 13), bool], Tensor[(416, 2), float64]) */;
    %1147 = @func_4448() /* ty=(Tensor[(8, 14, 9), bool], Tensor[(8, 8, 13), bool], Tensor[(2, 416), float64]) */;
    %1148 = floor_divide(%1141, %1142) /* ty=Tensor[(2, 12, 9), float64] */;
    %1149 = %1143.0;
    %1150 = %1146.0;
    %1151 = %1147.2;
    (%1148, %1149, %1150, %var_4501, %1151)
  };
  %1152(%var_4542, %var_4543) /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(208, 4), float64], Tensor[(2, 416), float64]) */
}

def @func_3962() -> Tensor[(2, 12, 9), float64] {
  %1154 = fn () -> Tensor[(2, 12, 9), float64] {
    %1153 = @func_3953() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */;
    %1153.0
  };
  %1154() /* ty=Tensor[(2, 12, 9), float64] */
}

def @func_1619() -> Tensor[(2, 12, 9), float64] {
  %1156 = fn () -> Tensor[(2, 12, 9), float64] {
    %1155 = @func_762() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */;
    %1155.1
  };
  %1156() /* ty=Tensor[(2, 12, 9), float64] */
}

def @func_9272() -> (Tensor[(2, 12, 9), float64], Tensor[(8, 8, 13), bool], Tensor[(832), float64], Tensor[(2, 12, 9), float64], Tensor[(168), float32], Tensor[(2, 12, 9), bool]) {
  @func_9270() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(8, 8, 13), bool], Tensor[(832), float64], Tensor[(2, 12, 9), float64], Tensor[(168), float32], Tensor[(2, 12, 9), bool]) */
}

def @func_2925() -> (Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), float64]) {
  %1157 = @func_393() /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32]) */;
  %1158 = @func_542() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */;
  %1159 = %1158.0;
  %1160 = cast(%1159, dtype="float64") /* ty=Tensor[(2, 12, 9), float64] */;
  %1161 = %1157.1;
  %1162 = erf(%1160) /* ty=Tensor[(2, 12, 9), float64] */;
  (%1161, %1162)
}

def @func_11126() -> Tensor[(2, 12, 9), float64] {
  %1164 = fn () -> Tensor[(2, 12, 9), float64] {
    %1163 = @func_8035() /* ty=(Tensor[(2, 12, 9), float64],) */;
    %1163.0
  };
  %1164() /* ty=Tensor[(2, 12, 9), float64] */
}

def @func_1323() -> (Tensor[(2, 12, 9), float64],) {
  %1167 = fn () -> (Tensor[(2, 12, 9), float64],) {
    %1165 = @func_952() /* ty=(Tensor[(2, 12, 9), float64],) */;
    %1166 = %1165.0;
    (%1166,)
  };
  %1167() /* ty=(Tensor[(2, 12, 9), float64],) */
}

def @func_7759() -> (Tensor[(2, 12, 9), float32],) {
  %1169 = fn () -> (Tensor[(2, 12, 9), float32],) {
    %1168 = @func_6350() /* ty=Tensor[(2, 12, 9), float32] */;
    (%1168,)
  };
  %1169() /* ty=(Tensor[(2, 12, 9), float32],) */
}

def @func_4789() -> Tensor[(2, 416), float64] {
  %1171 = fn () -> Tensor[(2, 416), float64] {
    %1170 = @func_4448() /* ty=(Tensor[(8, 14, 9), bool], Tensor[(8, 8, 13), bool], Tensor[(2, 416), float64]) */;
    %1170.2
  };
  %1171() /* ty=Tensor[(2, 416), float64] */
}

def @func_6779() -> (Tensor[(2, 12, 9), float64],) {
  %1174 = fn () -> (Tensor[(2, 12, 9), float64],) {
    %1172 = @func_2925() /* ty=(Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), float64]) */;
    %1173 = %1172.1;
    (%1173,)
  };
  %1174() /* ty=(Tensor[(2, 12, 9), float64],) */
}

def @func_8061(%var_8049: Tensor[(2, 11, 3), int16], %var_8050: Tensor[(2, 11, 3), int16]) -> Tensor[(2, 11, 3), int16] {
  %1175 = cast(%var_8050, dtype="int16") /* ty=Tensor[(2, 11, 3), int16] */;
  %1176 = shape_of(%var_8049, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1177 = cast(%var_8049, dtype="int16") /* ty=Tensor[(2, 11, 3), int16] */;
  %1178 = dyn.reshape(%1175, %1176, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  bitwise_xor(%1177, %1178) /* ty=Tensor[(2, 11, 3), int16] */
}

def @func_8083() -> Tensor[(2, 12, 9), float64] {
  @func_1618() /* ty=Tensor[(2, 12, 9), float64] */
}

def @func_1029() -> Tensor[(2, 12, 9), bool] {
  %1179 = @func_393() /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32]) */;
  %1179.0
}

def @func_2468() -> (Tensor[(2, 12, 9), bool],) {
  %1182 = fn () -> (Tensor[(2, 12, 9), bool],) {
    %1180 = @func_2207() /* ty=(Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */;
    %1181 = %1180.1;
    (%1181,)
  };
  %1182() /* ty=(Tensor[(2, 12, 9), bool],) */
}

def @func_623() -> Tensor[(2, 12, 9), bool] {
  %1183 = @func_365() /* ty=(Tensor[(2, 12, 9), bool],) */;
  %1183.0
}

def @func_6001() -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool]) {
  %1184 = @func_2273() /* ty=Tensor[(2, 12, 9), float64] */;
  %1185 = cast(%1184, dtype="bool") /* ty=Tensor[(2, 12, 9), bool] */;
  %1186 = reshape(%1185, newshape=[2, 12, 9]) /* ty=Tensor[(2, 12, 9), bool] */;
  %1187 = @func_435(%1186) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64]) */;
  %1188 = %1187.0;
  (%1184, %1188)
}

def @func_9150(%var_9146: Tensor[(8, 1, 11), float32], %var_9147: Tensor[(8, 3, 11), bool], %var_9148: Tensor[(8, 7, 11), float32], %var_9149: Tensor[(176), float64]) -> (Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64], Tensor[(8, 3, 11), float32], Tensor[(2, 12, 9), float64], Tensor[(8, 7, 11), float32], Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), bool], Tensor[(176), float64], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float32]) {
  @func_9144(%var_9146, %var_9147, %var_9148, %var_9149) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64], Tensor[(8, 3, 11), float32], Tensor[(2, 12, 9), float64], Tensor[(8, 7, 11), float32], Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), bool], Tensor[(176), float64], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float32]) */
}

def @func_9695(%var_9684: Tensor[(352), int8]) -> (Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool], Tensor[(352), int8]) {
  %1189 = @func_9336() /* ty=(Tensor[(2, 12, 9), float64],) */;
  %1190 = cast(%var_9684, dtype="int8") /* ty=Tensor[(352), int8] */;
  %1191 = reshape(%1190, newshape=[352]) /* ty=Tensor[(352), int8] */;
  %1192 = @func_3863(%1191) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32], Tensor[(352), int8]) */;
  %1193 = %1189.0;
  %1194 = %1192.0;
  (%1193, %1194, %var_9684)
}

def @func_8354() -> (Tensor[(2, 12, 9), bool], Tensor[(8, 8, 13), uint32]) {
  %1206 = fn () -> (Tensor[(2, 12, 9), bool], Tensor[(8, 8, 13), uint32]) {
    %1195 = @func_5714() /* ty=(Tensor[(2, 12, 9), bool],) */;
    %1196 = cast(meta[relay.Constant][51] /* ty=Tensor[(832), float64] */, dtype="float64") /* ty=Tensor[(832), float64] */;
    %1197 = reshape(%1196, newshape=[104, 8]) /* ty=Tensor[(104, 8), float64] */;
    %1198 = @func_5442(%1197) /* ty=(Tensor[(2, 12, 9), bool], Tensor[(8, 8, 13), bool], Tensor[(104, 8), float64], Tensor[(2, 12, 9), float32]) */;
    %1199 = %1198.1;
    %1200 = cast(meta[relay.Constant][51] /* ty=Tensor[(832), float64] */, dtype="uint32") /* ty=Tensor[(832), uint32] */;
    %1201 = shape_of(%1199, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1202 = cast(%1199, dtype="uint32") /* ty=Tensor[(8, 8, 13), uint32] */;
    %1203 = dyn.reshape(%1200, %1201, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %1204 = %1195.0;
    %1205 = bitwise_or(%1202, %1203) /* ty=Tensor[(8, 8, 13), uint32] */;
    (%1204, %1205)
  };
  %1206() /* ty=(Tensor[(2, 12, 9), bool], Tensor[(8, 8, 13), uint32]) */
}

def @func_2208() -> (Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) {
  %1218 = fn () -> (Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) {
    %1207 = @func_1015() /* ty=(Tensor[(2, 12, 9), float32],) */;
    %1208 = @func_595() /* ty=(Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), bool]) */;
    %1209 = @func_2043() /* ty=(Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32]) */;
    %1210 = %1208.1;
    %1211 = cast(%1210, dtype="bool") /* ty=Tensor[(2, 12, 9), bool] */;
    %1212 = reshape(%1211, newshape=[2, 12, 9]) /* ty=Tensor[(2, 12, 9), bool] */;
    %1213 = @func_1774(%1212) /* ty=(Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float64]) */;
    %1214 = %1207.0;
    %1215 = %1209.1;
    %1216 = @func_1064() /* ty=Tensor[(2, 12, 9), float64] */;
    %1217 = %1213.2;
    (%1214, %1210, %1215, %1216, %1217)
  };
  %1218() /* ty=(Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), bool], Tensor[(2, 12, 9), float32], Tensor[(2, 12, 9), float64], Tensor[(2, 12, 9), float64]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen312/build/output.py:3787: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen312/build/output.py", line 3792, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(21) tvmgen_default_fused_asin_cast_cast_reshape_less_equal_kernel0(signed char* __restrict__ T_less_equal, float* __restrict__ placeholder) {
  T_less_equal[(((int)threadIdx.x))] = ((signed char)(((bool)asinf(placeholder[(((int)threadIdx.x))])) <= ((bool)placeholder[(((int)threadIdx.x))])));
}

extern "C" __global__ void __launch_bounds__(21) tvmgen_default_fused_cast_cos_kernel0(double* __restrict__ T_cos, float* __restrict__ placeholder) {
  T_cos[(((int)threadIdx.x))] = cos(((double)placeholder[(((int)threadIdx.x))]));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


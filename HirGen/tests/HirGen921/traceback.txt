==========mod==========
#[version = "0.0.5"]
def @func_17233() -> (Tensor[(7, 1, 13), float64],) {
  %0 = @func_9006() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(225), int32], Tensor[(7, 1, 13), float64]) */;
  %1 = %0.0;
  (%1,)
}

def @func_11971() -> Tensor[(7, 1, 13), float64] {
  @func_8807() /* ty=Tensor[(7, 1, 13), float64] */
}

def @func_13452() -> (Tensor[(1, 1, 15), uint8],) {
  %2 = @func_7437() /* ty=(Tensor[(1, 1, 15), uint8], Tensor[(15), uint8], Tensor[(225), int32], Tensor[(225), int32], Tensor[(7, ?, 13), uint32], Tensor[(7, 1, 13), float64]) */;
  %3 = %2.0;
  (%3,)
}

def @func_13336() -> (Tensor[(1800), int8], Tensor[(7, 1, 13), float64]) {
  %4 = @func_4270() /* ty=(Tensor[(1800), int8], Tensor[(7, 1, 13), float64]) */;
  %5 = @func_5391() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %6 = %4.0;
  %7 = %5.0;
  (%6, %7)
}

def @func_12457() -> (Tensor[(225), int32],) {
  %8 = @func_7788() /* ty=Tensor[(225), int32] */;
  (%8,)
}

def @func_14541() -> (Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) {
  %9 = @func_13783() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(7, 1, 13), float64], Tensor[(15), uint8], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) */;
  %10 = @func_3776() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %11 = %9.4;
  %12 = @func_9222() /* ty=Tensor[(7, 1, 13), float64] */;
  %13 = %10.0;
  (%11, %12, %13)
}

def @func_9929(%var_9901: Tensor[(225), float32]) -> (Tensor[(7, 1, 13), float64], Tensor[(3, 14, 12), bool], Tensor[(5, 3, 15), int64], Tensor[(260), float64], Tensor[(504, 225), int8], Tensor[(7, 504, 13), int64], Tensor[(260), float32]) {
  %14 = cast(meta[relay.Constant][0] /* ty=Tensor[(504, 1), float32] */, dtype="float32") /* ty=Tensor[(504, 1), float32] */;
  %15 = reshape(%14, newshape=[3, 14, 12]) /* ty=Tensor[(3, 14, 12), float32] */;
  %16 = @func_7855(%15) /* ty=(Tensor[(3, 14, 12), bool],) */;
  %17 = cast(%var_9901, dtype="float32") /* ty=Tensor[(225), float32] */;
  %18 = reshape(%17, newshape=[5, 3, 15]) /* ty=Tensor[(5, 3, 15), float32] */;
  %19 = @func_8212(%18) /* ty=(Tensor[(7, 1, 13), float64], Tensor[(5, 3, 15), int64]) */;
  %20 = cast(meta[relay.Constant][1] /* ty=Tensor[(260), float64] */, dtype="float64") /* ty=Tensor[(260), float64] */;
  %21 = reshape(%20, newshape=[260]) /* ty=Tensor[(260), float64] */;
  %22 = @func_9113(%21) /* ty=(Tensor[(225), int32], Tensor[(13, 4, 5), float64], Tensor[(260), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) */;
  %23 = cast(%var_9901, dtype="int8") /* ty=Tensor[(225), int8] */;
  %24 = cast(meta[relay.Constant][0] /* ty=Tensor[(504, 1), float32] */, dtype="int8") /* ty=Tensor[(504, 1), int8] */;
  %25 = @func_7602() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(324), float64]) */;
  %26 = %25.0;
  %27 = cast(meta[relay.Constant][0] /* ty=Tensor[(504, 1), float32] */, dtype="bool") /* ty=Tensor[(504, 1), bool] */;
  %28 = cast(%26, dtype="bool") /* ty=Tensor[(7, 1, 13), bool] */;
  %29 = greater_equal(%27, %28) /* ty=Tensor[(7, 504, 13), bool] */;
  %30 = cast(%29, dtype="float32") /* ty=Tensor[(7, 504, 13), float32] */;
  %31 = atan(%30) /* ty=Tensor[(7, 504, 13), float32] */;
  %32 = cast(%31, dtype="bool") /* ty=Tensor[(7, 504, 13), bool] */;
  %33 = cast(%26, dtype="bool") /* ty=Tensor[(7, 1, 13), bool] */;
  %34 = not_equal(%32, %33) /* ty=Tensor[(7, 504, 13), bool] */;
  %35 = cast(%29, dtype="bool") /* ty=Tensor[(7, 504, 13), bool] */;
  %36 = shape_of(%34, dtype="int32") /* ty=Tensor[(3), int32] */;
  %37 = cast(%34, dtype="bool") /* ty=Tensor[(7, 504, 13), bool] */;
  %38 = dyn.reshape(%35, %36, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %39 = equal(%37, %38) /* ty=Tensor[(7, 504, 13), bool] */;
  %40 = cast(%39, dtype="int64") /* ty=Tensor[(7, 504, 13), int64] */;
  %41 = shape_of(%34, dtype="int32") /* ty=Tensor[(3), int32] */;
  %42 = cast(%34, dtype="int64") /* ty=Tensor[(7, 504, 13), int64] */;
  %43 = dyn.reshape(%40, %41, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %44 = cast(meta[relay.Constant][1] /* ty=Tensor[(260), float64] */, dtype="float32") /* ty=Tensor[(260), float32] */;
  %45 = @func_4292() /* ty=Tensor[(7, 1, 13), float64] */;
  %46 = %16.0;
  %47 = %19.1;
  %48 = %22.2;
  %49 = bitwise_xor(%23, %24) /* ty=Tensor[(504, 225), int8] */;
  %50 = bitwise_xor(%42, %43) /* ty=Tensor[(7, 504, 13), int64] */;
  %51 = asin(%44) /* ty=Tensor[(260), float32] */;
  (%45, %46, %47, %48, %49, %50, %51)
}

def @func_6826() -> (Tensor[(225), int32], Tensor[(7, 2, 13), float32]) {
  %52 = @func_4429() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(7, 2, 13), bool]) */;
  %53 = %52.1;
  %54 = cast(%53, dtype="float32") /* ty=Tensor[(7, 2, 13), float32] */;
  %55 = @func_5078() /* ty=Tensor[(225), int32] */;
  %56 = erf(%54) /* ty=Tensor[(7, 2, 13), float32] */;
  (%55, %56)
}

def @func_12827() -> (Tensor[(7, 1, 13), float64],) {
  %57 = @func_9628() /* ty=Tensor[(7, 1, 13), float64] */;
  (%57,)
}

def @func_7778(%var_7750: Tensor[(2, 13, 7), float32], %var_7776: Tensor[(225), int32]) -> (Tensor[(2, 13, 7), float32], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(225), float64], Tensor[(225), int32]) {
  %58 = cast(%var_7750, dtype="float32") /* ty=Tensor[(2, 13, 7), float32] */;
  %59 = @func_6582() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) */;
  %60 = cast(%var_7776, dtype="int32") /* ty=Tensor[(225), int32] */;
  %61 = reshape(%60, newshape=[225]) /* ty=Tensor[(225), int32] */;
  %62 = sin(%58) /* ty=Tensor[(2, 13, 7), float32] */;
  %63 = %59.0;
  %64 = @func_7586() /* ty=Tensor[(7, 1, 13), float64] */;
  %65 = @func_5470(%61) /* ty=Tensor[(225), float64] */;
  (%62, %63, %64, %65, %var_7776)
}

def @func_10061() -> Tensor[(7, 1, 13), float64] {
  %66 = @func_6582() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) */;
  %66.0
}

def @func_16125() -> Tensor[(3, 14, 12), float32] {
  @func_4497() /* ty=Tensor[(3, 14, 12), float32] */
}

def @func_9556() -> Tensor[(7, 1, 13), float64] {
  %67 = @func_4712() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %67.0
}

def @func_4538() -> Tensor[(225), int32] {
  %68 = @func_4169() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(225), int32], Tensor[(5, 3, 15), float32]) */;
  %68.1
}

def @func_14289() -> (Tensor[(225), int32], Tensor[(1183), float64], Tensor[(7, 13, 13), bool], Tensor[(5, 3, 15), float32]) {
  %69 = @func_6826() /* ty=(Tensor[(225), int32], Tensor[(7, 2, 13), float32]) */;
  %70 = @func_3901() /* ty=Tensor[(7, 1, 13), float64] */;
  %71 = cast(meta[relay.Constant][2] /* ty=Tensor[(1183), float64] */, dtype="float64") /* ty=Tensor[(1183), float64] */;
  %72 = reshape(%71, newshape=[7, 13, 13]) /* ty=Tensor[(7, 13, 13), float64] */;
  %73 = @func_10686(%72) /* ty=Tensor[(7, 13, 13), float64] */;
  %74 = cast(%70, dtype="bool") /* ty=Tensor[(7, 1, 13), bool] */;
  %75 = cast(%73, dtype="bool") /* ty=Tensor[(7, 13, 13), bool] */;
  %76 = @func_6929() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(5, 3, 15), float32]) */;
  %77 = %69.0;
  %78 = not_equal(%74, %75) /* ty=Tensor[(7, 13, 13), bool] */;
  %79 = %76.3;
  (%77, meta[relay.Constant][2] /* ty=Tensor[(1183), float64] */, %78, %79)
}

def @func_1874(%var_1852: Tensor[(15, 12, 10), int8]) -> (Tensor[(15, 12, 10), int8], Tensor[(13, 4, 5), float64], Tensor[(260), float64]) {
  %80 = cast(meta[relay.Constant][3] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %81 = cast(%var_1852, dtype="int8") /* ty=Tensor[(15, 12, 10), int8] */;
  %82 = cast(meta[relay.Constant][4] /* ty=Tensor[(260), float64] */, dtype="float64") /* ty=Tensor[(260), float64] */;
  %83 = cast(meta[relay.Constant][4] /* ty=Tensor[(260), float64] */, dtype="float64") /* ty=Tensor[(260), float64] */;
  %84 = reshape(%82, newshape=[13, 4, 5]) /* ty=Tensor[(13, 4, 5), float64] */;
  %85 = reshape(%83, newshape=[13, 4, 5]) /* ty=Tensor[(13, 4, 5), float64] */;
  %86 = @func_1470(%84, %85) /* ty=(Tensor[(13, 4, 5), float64], Tensor[(13, 4, 5), float64]) */;
  %87 = add(%80, %81) /* ty=Tensor[(15, 12, 10), int8] */;
  %88 = %86.0;
  (%87, %88, meta[relay.Constant][4] /* ty=Tensor[(260), float64] */)
}

def @func_10772(%var_10744: Tensor[(5, 45), int32]) -> (Tensor[(4, 3, 1), float32], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(225), int32], Tensor[(5, 45), int32], Tensor[(7, ?, 13), bool], Tensor[(9, 12, 3), float64], Tensor[(324), float64]) {
  %89 = cast(meta[relay.Constant][5] /* ty=Tensor[(4, 3, 1), float32] */, dtype="float32") /* ty=Tensor[(4, 3, 1), float32] */;
  %90 = @func_5391() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %91 = cast(%var_10744, dtype="int32") /* ty=Tensor[(5, 45), int32] */;
  %92 = reshape(%91, newshape=[225]) /* ty=Tensor[(225), int32] */;
  %93 = @func_6508(%92) /* ty=(Tensor[(7, 1, 13), float64], Tensor[(5, 3, 15), int32], Tensor[(225), int32]) */;
  %94 = cast(%var_10744, dtype="float32") /* ty=Tensor[(5, 45), float32] */;
  %95 = reshape(%94, newshape=[225]) /* ty=Tensor[(225), float32] */;
  %96 = @func_10388(%95) /* ty=(Tensor[(7, 2, 13), float32], Tensor[(7, ?, 13), int16], Tensor[(7, ?, 13), bool], Tensor[(225), float32]) */;
  %97 = cast(meta[relay.Constant][6] /* ty=Tensor[(324), float64] */, dtype="float64") /* ty=Tensor[(324), float64] */;
  %98 = reshape(%97, newshape=[9, 12, 3]) /* ty=Tensor[(9, 12, 3), float64] */;
  %99 = @func_656(%98) /* ty=(Tensor[(9, 12, 3), float64],) */;
  %100 = sigmoid(%89) /* ty=Tensor[(4, 3, 1), float32] */;
  %101 = @func_6006() /* ty=Tensor[(7, 1, 13), float64] */;
  %102 = %90.0;
  %103 = %93.2;
  %104 = %96.2;
  %105 = %99.0;
  (%100, %101, %102, %103, %var_10744, %104, %105, meta[relay.Constant][6] /* ty=Tensor[(324), float64] */)
}

def @func_15267() -> (Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(3, 14, 12), bool], Tensor[(504), float32], Tensor[(324), float64], Tensor[(7, ?, 13), int16]) {
  %106 = @func_6168() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(5, 3, 15), float32], Tensor[(15), uint8], Tensor[(504), float32]) */;
  %107 = @func_10306() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %108 = cast(meta[relay.Constant][7] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
  %109 = reshape(%108, newshape=[3, 14, 12]) /* ty=Tensor[(3, 14, 12), float32] */;
  %110 = @func_7855(%109) /* ty=(Tensor[(3, 14, 12), bool],) */;
  %111 = @func_11165() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(324), float64], Tensor[(5, 3, 15), float32]) */;
  %112 = %106.0;
  %113 = %107.0;
  %114 = %110.0;
  %115 = %111.1;
  %116 = @func_5837() /* ty=Tensor[(7, ?, 13), int16] */;
  (%112, %113, %114, meta[relay.Constant][7] /* ty=Tensor[(504), float32] */, %115, %116)
}

def @func_5391() -> (Tensor[(7, 1, 13), float64],) {
  %117 = @func_4712() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %118 = %117.0;
  (%118,)
}

def @func_15685() -> (Tensor[(7, 1, 13), float64], Tensor[(225), int32], Tensor[(7, 1, 13), float64]) {
  %119 = @func_9006() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(225), int32], Tensor[(7, 1, 13), float64]) */;
  %120 = %119.0;
  %121 = @func_7788() /* ty=Tensor[(225), int32] */;
  %122 = @func_11406() /* ty=Tensor[(7, 1, 13), float64] */;
  (%120, %121, %122)
}

def @func_17187(%var_17184: Tensor[(1183), float64]) -> (Tensor[(7, 1, 13), float64], Tensor[(7, 2, 13), int16], Tensor[(26, 7), float64], Tensor[(1183), float64]) {
  %123 = @func_12083() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(7, 1, 13), float64]) */;
  %124 = cast(meta[relay.Constant][8] /* ty=Tensor[(26, 7), float64] */, dtype="float64") /* ty=Tensor[(26, 7), float64] */;
  %125 = cast(%var_17184, dtype="float64") /* ty=Tensor[(1183), float64] */;
  %126 = reshape(%124, newshape=[7, 2, 13]) /* ty=Tensor[(7, 2, 13), float64] */;
  %127 = reshape(%125, newshape=[7, 13, 13]) /* ty=Tensor[(7, 13, 13), float64] */;
  %128 = @func_11742(%126, %127) /* ty=(Tensor[(7, 2, 13), int16], Tensor[(7, 13, 13), uint16], Tensor[(7, 1, 13), float64]) */;
  %129 = %123.1;
  %130 = %128.0;
  (%129, %130, meta[relay.Constant][8] /* ty=Tensor[(26, 7), float64] */, %var_17184)
}

def @func_7186() -> (Tensor[(7, 1, 13), float64], Tensor[(225), float64], Tensor[(225), int32]) {
  %131 = cast(meta[relay.Constant][9] /* ty=Tensor[(225), int32] */, dtype="int32") /* ty=Tensor[(225), int32] */;
  %132 = reshape(%131, newshape=[225]) /* ty=Tensor[(225), int32] */;
  %133 = @func_5784() /* ty=Tensor[(7, 1, 13), float64] */;
  %134 = @func_5470(%132) /* ty=Tensor[(225), float64] */;
  (%133, %134, meta[relay.Constant][9] /* ty=Tensor[(225), int32] */)
}

def @func_3816() -> (Tensor[(7, 1, 13), float64], Tensor[(3, 14, 12), float32], Tensor[(504), float32], Tensor[(1800), int8]) {
  %135 = @func_3776() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %136 = cast(meta[relay.Constant][10] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
  %137 = cast(meta[relay.Constant][11] /* ty=Tensor[(1800), int8] */, dtype="int8") /* ty=Tensor[(1800), int8] */;
  %138 = reshape(%136, newshape=[3, 14, 12]) /* ty=Tensor[(3, 14, 12), float32] */;
  %139 = reshape(%137, newshape=[1800]) /* ty=Tensor[(1800), int8] */;
  %140 = @func_2958(%138, %139) /* ty=(Tensor[(3, 14, 12), float32], Tensor[(15, 12, 10), int8], Tensor[(1800), int8], Tensor[(13, 4, 5), float64]) */;
  %141 = %135.0;
  %142 = %140.0;
  (%141, %142, meta[relay.Constant][10] /* ty=Tensor[(504), float32] */, meta[relay.Constant][11] /* ty=Tensor[(1800), int8] */)
}

def @func_10339() -> Tensor[(7, 1, 13), float64] {
  %143 = @func_4886() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %143.0
}

def @func_17758() -> Tensor[(7, 1, 13), float64] {
  %144 = @func_17233() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %144.0
}

def @func_8088(%var_8040: Tensor[(11, 5, 14), float64], %var_8084: Tensor[(1, 182), float32]) -> (Tensor[(11, 5, 14), float64], Tensor[(5, 3, 15), float32], Tensor[(225), float64], Tensor[(1, 182), float32]) {
  %145 = cast(%var_8040, dtype="float64") /* ty=Tensor[(11, 5, 14), float64] */;
  %146 = @func_5279() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(5, 3, 15), float32], Tensor[(504), float32]) */;
  %147 = cast(%var_8084, dtype="float32") /* ty=Tensor[(1, 182), float32] */;
  %148 = %146.1;
  %149 = cast(%148, dtype="int32") /* ty=Tensor[(5, 3, 15), int32] */;
  %150 = reshape(%147, newshape=[2, 13, 7]) /* ty=Tensor[(2, 13, 7), float32] */;
  %151 = reshape(%149, newshape=[225]) /* ty=Tensor[(225), int32] */;
  %152 = @func_7778(%150, %151) /* ty=(Tensor[(2, 13, 7), float32], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(225), float64], Tensor[(225), int32]) */;
  %153 = atan(%145) /* ty=Tensor[(11, 5, 14), float64] */;
  %154 = %152.3;
  (%153, %148, %154, %var_8084)
}

def @func_16426() -> Tensor[(5, 3, 15), float32] {
  %155 = @func_5317() /* ty=(Tensor[(5, 3, 15), float32], Tensor[(7, 1, 13), float64]) */;
  %155.0
}

def @func_9222() -> Tensor[(7, 1, 13), float64] {
  %156 = @func_5538() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) */;
  %156.1
}

def @func_5470(%var_5463: Tensor[(225), int32]) -> Tensor[(225), float64] {
  %157 = @func_5155() /* ty=Tensor[(225), int32] */;
  %158 = cast(%var_5463, dtype="float64") /* ty=Tensor[(225), float64] */;
  %159 = shape_of(%157, dtype="int32") /* ty=Tensor[(1), int32] */;
  %160 = cast(%157, dtype="float64") /* ty=Tensor[(225), float64] */;
  %161 = dyn.reshape(%158, %159, newshape=[]) /* ty=Tensor[(?), float64] */;
  add(%160, %161) /* ty=Tensor[(225), float64] */
}

def @func_17982() -> (Tensor[(225), int32],) {
  %162 = @func_4538() /* ty=Tensor[(225), int32] */;
  (%162,)
}

def @func_2958(%var_2909: Tensor[(3, 14, 12), float32], %var_2937: Tensor[(1800), int8]) -> (Tensor[(3, 14, 12), float32], Tensor[(15, 12, 10), int8], Tensor[(1800), int8], Tensor[(13, 4, 5), float64]) {
  %163 = cast(meta[relay.Constant][12] /* ty=Tensor[(3, 14, 12), float32] */, dtype="float32") /* ty=Tensor[(3, 14, 12), float32] */;
  %164 = shape_of(%var_2909, dtype="int32") /* ty=Tensor[(3), int32] */;
  %165 = cast(%var_2909, dtype="float32") /* ty=Tensor[(3, 14, 12), float32] */;
  %166 = dyn.reshape(%163, %164, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %167 = cast(%var_2937, dtype="int8") /* ty=Tensor[(1800), int8] */;
  %168 = reshape(%167, newshape=[15, 12, 10]) /* ty=Tensor[(15, 12, 10), int8] */;
  %169 = @func_1874(%168) /* ty=(Tensor[(15, 12, 10), int8], Tensor[(13, 4, 5), float64], Tensor[(260), float64]) */;
  %170 = cast(%var_2937, dtype="int8") /* ty=Tensor[(1800), int8] */;
  %171 = reshape(%170, newshape=[15, 12, 10]) /* ty=Tensor[(15, 12, 10), int8] */;
  %172 = @func_1874(%171) /* ty=(Tensor[(15, 12, 10), int8], Tensor[(13, 4, 5), float64], Tensor[(260), float64]) */;
  %173 = mod(%165, %166) /* ty=Tensor[(3, 14, 12), float32] */;
  %174 = %169.0;
  %175 = %172.1;
  (%173, %174, %var_2937, %175)
}

def @func_14339(%var_14322: Tensor[(225), int32]) -> Tensor[(225), float64] {
  %176 = @func_13441() /* ty=Tensor[(225), int32] */;
  %177 = cast(%var_14322, dtype="float64") /* ty=Tensor[(225), float64] */;
  %178 = shape_of(%176, dtype="int32") /* ty=Tensor[(1), int32] */;
  %179 = cast(%176, dtype="float64") /* ty=Tensor[(225), float64] */;
  %180 = dyn.reshape(%177, %178, newshape=[]) /* ty=Tensor[(?), float64] */;
  floor_divide(%179, %180) /* ty=Tensor[(225), float64] */
}

def @func_8782() -> (Tensor[(7, ?, 13), int16],) {
  %181 = @func_5837() /* ty=Tensor[(7, ?, 13), int16] */;
  (%181,)
}

def @func_4712() -> (Tensor[(7, 1, 13), float64],) {
  %182 = @func_3901() /* ty=Tensor[(7, 1, 13), float64] */;
  (%182,)
}

def @func_4851(%var_4846: Tensor[(260), float64]) -> (Tensor[(1800), int8], Tensor[(13, 4, 5), float64], Tensor[(260), float64]) {
  %183 = @func_4270() /* ty=(Tensor[(1800), int8], Tensor[(7, 1, 13), float64]) */;
  %184 = cast(%var_4846, dtype="float64") /* ty=Tensor[(260), float64] */;
  %185 = cast(%var_4846, dtype="float64") /* ty=Tensor[(260), float64] */;
  %186 = reshape(%184, newshape=[13, 4, 5]) /* ty=Tensor[(13, 4, 5), float64] */;
  %187 = reshape(%185, newshape=[13, 4, 5]) /* ty=Tensor[(13, 4, 5), float64] */;
  %188 = @func_1470(%186, %187) /* ty=(Tensor[(13, 4, 5), float64], Tensor[(13, 4, 5), float64]) */;
  %189 = %183.0;
  %190 = %188.0;
  (%189, %190, %var_4846)
}

def @func_9145(%var_9128: Tensor[(12, 5, 6), float64]) -> (Tensor[(12, 5, 6), bool], Tensor[(12, 5, 6), float64]) {
  %191 = cast(%var_9128, dtype="float64") /* ty=Tensor[(12, 5, 6), float64] */;
  %192 = erf(%191) /* ty=Tensor[(12, 5, 6), float64] */;
  %193 = cast(%var_9128, dtype="bool") /* ty=Tensor[(12, 5, 6), bool] */;
  %194 = shape_of(%192, dtype="int32") /* ty=Tensor[(3), int32] */;
  %195 = cast(%192, dtype="bool") /* ty=Tensor[(12, 5, 6), bool] */;
  %196 = dyn.reshape(%193, %194, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %197 = cast(%192, dtype="float64") /* ty=Tensor[(12, 5, 6), float64] */;
  %198 = less_equal(%195, %196) /* ty=Tensor[(12, 5, 6), bool] */;
  %199 = atan(%197) /* ty=Tensor[(12, 5, 6), float64] */;
  (%198, %199)
}

def @func_9594(%var_9567: Tensor[(8, 9, 1), float32]) -> Tensor[(8, 9, ?), uint64] {
  %200 = cast(%var_9567, dtype="float32") /* ty=Tensor[(8, 9, 1), float32] */;
  %201 = asin(%200) /* ty=Tensor[(8, 9, 1), float32] */;
  %202 = cast(%201, dtype="float64") /* ty=Tensor[(8, 9, 1), float64] */;
  %203 = sin(%202) /* ty=Tensor[(8, 9, 1), float64] */;
  %204 = cast(%203, dtype="uint64") /* ty=Tensor[(8, 9, 1), uint64] */;
  %205 = shape_of(%201, dtype="int32") /* ty=Tensor[(3), int32] */;
  %206 = cast(%201, dtype="uint64") /* ty=Tensor[(8, 9, 1), uint64] */;
  %207 = dyn.reshape(%204, %205, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  add(%206, %207) /* ty=Tensor[(8, 9, ?), uint64] */
}

def @func_15037() -> (Tensor[(7, 1, 13), float64], Tensor[(90, 20), float64]) {
  %208 = @func_7331() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 2, 13), bool], Tensor[(7, 1, 13), float64]) */;
  %209 = %208.4;
  %210 = @func_12176() /* ty=Tensor[(90, 20), float64] */;
  (%209, %210)
}

def @func_13087(%var_13084: Tensor[(324), float64]) -> (Tensor[(7, ?, 13), int16], Tensor[(225), int32], Tensor[(7, ?, 13), int16], Tensor[(8, 9, ?), uint64], Tensor[(72), float32], Tensor[(7, 1, 13), float64], Tensor[(9, 12, 3), float64], Tensor[(4, 52), float64], Tensor[(324), float64]) {
  %211 = @func_5928() /* ty=(Tensor[(7, ?, 13), int16],) */;
  %212 = @func_7002() /* ty=(Tensor[(7, ?, 13), int16],) */;
  %213 = cast(meta[relay.Constant][13] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %214 = reshape(%213, newshape=[8, 9, 1]) /* ty=Tensor[(8, 9, 1), float32] */;
  %215 = @func_10306() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %216 = cast(meta[relay.Constant][14] /* ty=Tensor[(4, 52), float64] */, dtype="float64") /* ty=Tensor[(4, 52), float64] */;
  %217 = @func_12580() /* ty=Tensor[(225), int32] */;
  %218 = cast(%217, dtype="int32") /* ty=Tensor[(225), int32] */;
  %219 = cast(%var_13084, dtype="float64") /* ty=Tensor[(324), float64] */;
  %220 = reshape(%216, newshape=[2, 13, 8]) /* ty=Tensor[(2, 13, 8), float64] */;
  %221 = reshape(%218, newshape=[225]) /* ty=Tensor[(225), int32] */;
  %222 = reshape(%219, newshape=[324]) /* ty=Tensor[(324), float64] */;
  %223 = @func_2273(%220, %221, %222) /* ty=(Tensor[(5, 3, 15), int32], Tensor[(225), int32], Tensor[(9, 12, 3), float64], Tensor[(324), float64], Tensor[(9, 12, 3), float64], Tensor[(2, 13, 8), float64], Tensor[(9, 12, 3), float64]) */;
  %224 = %211.0;
  %225 = %212.0;
  %226 = @func_9594(%214) /* ty=Tensor[(8, 9, ?), uint64] */;
  %227 = %215.0;
  %228 = %223.4;
  (%224, %217, %225, %226, meta[relay.Constant][13] /* ty=Tensor[(72), float32] */, %227, %228, meta[relay.Constant][14] /* ty=Tensor[(4, 52), float64] */, %var_13084)
}

def @func_14135() -> (Tensor[(7, 1, 13), float64],) {
  %229 = @func_9006() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(225), int32], Tensor[(7, 1, 13), float64]) */;
  %230 = %229.2;
  (%230,)
}

def @func_17154() -> (Tensor[(7, 1, 13), float64],) {
  %231 = @func_14874() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(5, 3, 15), int8], Tensor[(5, 3, 15), float32], Tensor[(7, ?, 13), bool]) */;
  %232 = %231.1;
  (%232,)
}

def @func_14506() -> (Tensor[(7, 1, 13), float64], Tensor[(7, ?, 13), int16]) {
  %233 = @func_6929() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(5, 3, 15), float32]) */;
  %234 = @func_9243() /* ty=(Tensor[(7, ?, 13), int16],) */;
  %235 = %233.0;
  %236 = %234.0;
  (%235, %236)
}

def @func_12176() -> Tensor[(90, 20), float64] {
  %237 = @func_5016() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(90, 20), int8], Tensor[(225), int32], Tensor[(1800), int8], Tensor[(7, 1, 13), float64]) */;
  %238 = %237.1;
  %239 = cast(%238, dtype="float64") /* ty=Tensor[(90, 20), float64] */;
  log(%239) /* ty=Tensor[(90, 20), float64] */
}

def @func_10306() -> (Tensor[(7, 1, 13), float64],) {
  %240 = @func_6094() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) */;
  %241 = %240.2;
  (%241,)
}

def @func_6338(%var_6310: Tensor[(1800), int8]) -> (Tensor[(7, ?, 13), int16], Tensor[(3, 14, 12), int16], Tensor[(13, 4, 5), float64], Tensor[(1800), int8], Tensor[(7, 1, 13), float64], Tensor[(3, 14, 12), float32]) {
  %242 = @func_4497() /* ty=Tensor[(3, 14, 12), float32] */;
  %243 = cast(meta[relay.Constant][15] /* ty=Tensor[(3, 14, 12), float32] */, dtype="int16") /* ty=Tensor[(3, 14, 12), int16] */;
  %244 = shape_of(%242, dtype="int32") /* ty=Tensor[(3), int32] */;
  %245 = cast(%242, dtype="int16") /* ty=Tensor[(3, 14, 12), int16] */;
  %246 = dyn.reshape(%243, %244, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %247 = cast(%var_6310, dtype="int8") /* ty=Tensor[(1800), int8] */;
  %248 = reshape(%247, newshape=[15, 12, 10]) /* ty=Tensor[(15, 12, 10), int8] */;
  %249 = @func_1874(%248) /* ty=(Tensor[(15, 12, 10), int8], Tensor[(13, 4, 5), float64], Tensor[(260), float64]) */;
  %250 = @func_5317() /* ty=(Tensor[(5, 3, 15), float32], Tensor[(7, 1, 13), float64]) */;
  %251 = cast(meta[relay.Constant][15] /* ty=Tensor[(3, 14, 12), float32] */, dtype="float32") /* ty=Tensor[(3, 14, 12), float32] */;
  %252 = @func_5837() /* ty=Tensor[(7, ?, 13), int16] */;
  %253 = bitwise_xor(%245, %246) /* ty=Tensor[(3, 14, 12), int16] */;
  %254 = %249.1;
  %255 = %250.1;
  %256 = log10(%251) /* ty=Tensor[(3, 14, 12), float32] */;
  (%252, %253, %254, %var_6310, %255, %256)
}

def @func_7026() -> (Tensor[(7, 1, 13), float64],) {
  %257 = @func_5740() /* ty=Tensor[(7, 1, 13), float64] */;
  (%257,)
}

def @func_16292() -> Tensor[(7, 6, 13), uint8] {
  %258 = @func_14910() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %259 = %258.0;
  %260 = cast(%259, dtype="uint8") /* ty=Tensor[(7, 1, 13), uint8] */;
  %261 = cast(meta[relay.Constant][16] /* ty=Tensor[(7, 6, 13), float64] */, dtype="uint8") /* ty=Tensor[(7, 6, 13), uint8] */;
  bitwise_and(%260, %261) /* ty=Tensor[(7, 6, 13), uint8] */
}

def @func_13624() -> (Tensor[(1, 1, 15), uint8], Tensor[(7, 1, 13), float64], Tensor[(324), float64]) {
  %262 = @func_13452() /* ty=(Tensor[(1, 1, 15), uint8],) */;
  %263 = cast(meta[relay.Constant][17] /* ty=Tensor[(324), float64] */, dtype="float64") /* ty=Tensor[(324), float64] */;
  %264 = reshape(%263, newshape=[3, 108]) /* ty=Tensor[(3, 108), float64] */;
  %265 = @func_11133(%264) /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(3, 14, 12), float32], Tensor[(504), float32], Tensor[(1800), int8], Tensor[(9, 12, 3), float64], Tensor[(3, 108), float64]) */;
  %266 = %262.0;
  %267 = %265.1;
  (%266, %267, meta[relay.Constant][17] /* ty=Tensor[(324), float64] */)
}

def @func_14600() -> (Tensor[(324), float64],) {
  %268 = @func_13624() /* ty=(Tensor[(1, 1, 15), uint8], Tensor[(7, 1, 13), float64], Tensor[(324), float64]) */;
  %269 = %268.2;
  (%269,)
}

def @func_16712() -> Tensor[(15), uint8] {
  %270 = @func_6168() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(5, 3, 15), float32], Tensor[(15), uint8], Tensor[(504), float32]) */;
  %270.2
}

def @func_14384() -> (Tensor[(1800), int8],) {
  %271 = @func_13336() /* ty=(Tensor[(1800), int8], Tensor[(7, 1, 13), float64]) */;
  %272 = %271.0;
  (%272,)
}

def @func_13694() -> (Tensor[(7, ?, 13), int16], Tensor[(1, 1, 15), uint8], Tensor[(7, 1, 13), float64]) {
  %273 = @func_9243() /* ty=(Tensor[(7, ?, 13), int16],) */;
  %274 = @func_4206() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %275 = %273.0;
  %276 = @func_13534() /* ty=Tensor[(1, 1, 15), uint8] */;
  %277 = %274.0;
  (%275, %276, %277)
}

def @func_7788() -> Tensor[(225), int32] {
  %278 = @func_6826() /* ty=(Tensor[(225), int32], Tensor[(7, 2, 13), float32]) */;
  %278.0
}

def @func_14212() -> Tensor[(7, 1, 13), float64] {
  %279 = @func_10306() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %279.0
}

def @func_5784() -> Tensor[(7, 1, 13), float64] {
  %280 = @func_4886() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %280.0
}

def @func_10516() -> (Tensor[(9, 12, 3), float64], Tensor[(9, 36), float64], Tensor[(7, 2, 13), float32]) {
  %281 = cast(meta[relay.Constant][18] /* ty=Tensor[(9, 36), float64] */, dtype="float64") /* ty=Tensor[(9, 36), float64] */;
  %282 = reshape(%281, newshape=[9, 12, 3]) /* ty=Tensor[(9, 12, 3), float64] */;
  %283 = @func_656(%282) /* ty=(Tensor[(9, 12, 3), float64],) */;
  %284 = @func_4767() /* ty=Tensor[(7, ?, 13), int16] */;
  %285 = @func_6826() /* ty=(Tensor[(225), int32], Tensor[(7, 2, 13), float32]) */;
  %286 = %285.1;
  %287 = cast(%284, dtype="float32") /* ty=Tensor[(7, ?, 13), float32] */;
  %288 = cast(%286, dtype="float32") /* ty=Tensor[(7, 2, 13), float32] */;
  %289 = %283.0;
  %290 = mod(%287, %288) /* ty=Tensor[(7, 2, 13), float32] */;
  (%289, meta[relay.Constant][18] /* ty=Tensor[(9, 36), float64] */, %290)
}

def @func_9243() -> (Tensor[(7, ?, 13), int16],) {
  %291 = @func_5837() /* ty=Tensor[(7, ?, 13), int16] */;
  (%291,)
}

def @func_12580() -> Tensor[(225), int32] {
  @func_5078() /* ty=Tensor[(225), int32] */
}

def @func_16663() -> (Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) {
  %292 = @func_7740() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %293 = @func_7740() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %294 = %292.0;
  %295 = %293.0;
  (%294, %295)
}

def @func_3799(%var_3792: Tensor[(9, 36), float64], %var_3795: Tensor[(504), float32], %var_3796: Tensor[(1800), int8]) -> (Tensor[(7, 3, 13), bool], Tensor[(9, 12, 3), float64], Tensor[(9, 36), float64], Tensor[(3, 14, 12), float32], Tensor[(504), float32], Tensor[(1800), int8]) {
  %296 = @func_3776() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %297 = %296.0;
  %298 = cast(%297, dtype="bool") /* ty=Tensor[(7, 1, 13), bool] */;
  %299 = cast(meta[relay.Constant][19] /* ty=Tensor[(7, 3, 13), float64] */, dtype="bool") /* ty=Tensor[(7, 3, 13), bool] */;
  %300 = cast(%var_3792, dtype="float64") /* ty=Tensor[(9, 36), float64] */;
  %301 = reshape(%300, newshape=[9, 12, 3]) /* ty=Tensor[(9, 12, 3), float64] */;
  %302 = @func_656(%301) /* ty=(Tensor[(9, 12, 3), float64],) */;
  %303 = cast(%var_3795, dtype="float32") /* ty=Tensor[(504), float32] */;
  %304 = cast(%var_3796, dtype="int8") /* ty=Tensor[(1800), int8] */;
  %305 = reshape(%303, newshape=[3, 14, 12]) /* ty=Tensor[(3, 14, 12), float32] */;
  %306 = reshape(%304, newshape=[1800]) /* ty=Tensor[(1800), int8] */;
  %307 = @func_2958(%305, %306) /* ty=(Tensor[(3, 14, 12), float32], Tensor[(15, 12, 10), int8], Tensor[(1800), int8], Tensor[(13, 4, 5), float64]) */;
  %308 = not_equal(%298, %299) /* ty=Tensor[(7, 3, 13), bool] */;
  %309 = %302.0;
  %310 = %307.0;
  (%308, %309, %var_3792, %310, %var_3795, %var_3796)
}

def @func_10609() -> (Tensor[(7, 1, 13), float64],) {
  %311 = @func_8173() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %312 = %311.0;
  (%312,)
}

def @func_14967() -> Tensor[(7, 1, 13), float64] {
  %313 = @func_11944() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %313.0
}

def @func_12097() -> (Tensor[(7, 1, 13), float64],) {
  %314 = @func_5740() /* ty=Tensor[(7, 1, 13), float64] */;
  (%314,)
}

def @func_9973() -> (Tensor[(7, 1, 13), float64], Tensor[(7, ?, 13), int16]) {
  %315 = @func_5928() /* ty=(Tensor[(7, ?, 13), int16],) */;
  %316 = @func_6006() /* ty=Tensor[(7, 1, 13), float64] */;
  %317 = %315.0;
  (%316, %317)
}

def @func_17587() -> (Tensor[(7, 1, 13), float64],) {
  %318 = @func_16876() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(324), float64], Tensor[(225), int32]) */;
  %319 = %318.0;
  (%319,)
}

def @func_14189(%var_14153: Tensor[(7, 11, 12), bool], %var_14154: Tensor[(7, 11, 12), bool]) -> (Tensor[(7, 11, 12), bool], Tensor[(7, 1, 13), float64]) {
  %320 = cast(%var_14154, dtype="bool") /* ty=Tensor[(7, 11, 12), bool] */;
  %321 = shape_of(%var_14153, dtype="int32") /* ty=Tensor[(3), int32] */;
  %322 = cast(%var_14153, dtype="bool") /* ty=Tensor[(7, 11, 12), bool] */;
  %323 = dyn.reshape(%320, %321, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %324 = @func_10801() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %325 = logical_or(%322, %323) /* ty=Tensor[(7, 11, 12), bool] */;
  %326 = %324.0;
  (%325, %326)
}

def @func_17864() -> (Tensor[(7, 1, 13), float64],) {
  %327 = @func_7602() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(324), float64]) */;
  %328 = %327.0;
  (%328,)
}

def @func_15424() -> (Tensor[(324), float64],) {
  %329 = @func_9363() /* ty=(Tensor[(324), float64],) */;
  %330 = %329.0;
  (%330,)
}

def @func_17549(%var_17523: Tensor[(7, 5, 13), float64]) -> (Tensor[(7, 5, 13), bool], Tensor[(7, 5, 13), bool]) {
  %331 = @func_10609() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %332 = %331.0;
  %333 = cast(%332, dtype="bool") /* ty=Tensor[(7, 1, 13), bool] */;
  %334 = cast(%var_17523, dtype="bool") /* ty=Tensor[(7, 5, 13), bool] */;
  %335 = cast(%332, dtype="bool") /* ty=Tensor[(7, 1, 13), bool] */;
  %336 = cast(%var_17523, dtype="bool") /* ty=Tensor[(7, 5, 13), bool] */;
  %337 = greater(%333, %334) /* ty=Tensor[(7, 5, 13), bool] */;
  %338 = greater_equal(%335, %336) /* ty=Tensor[(7, 5, 13), bool] */;
  (%337, %338)
}

def @func_13284(%var_13257: Tensor[(1, 6, 7), float64], %var_13280: Tensor[(12, 6, 7), float64]) -> (Tensor[(?, 6, 7), bool], Tensor[(225), int32], Tensor[(12, 6, 7), uint32]) {
  %339 = cast(%var_13257, dtype="float64") /* ty=Tensor[(1, 6, 7), float64] */;
  %340 = asinh(%339) /* ty=Tensor[(1, 6, 7), float64] */;
  %341 = cast(%340, dtype="bool") /* ty=Tensor[(1, 6, 7), bool] */;
  %342 = shape_of(%var_13257, dtype="int32") /* ty=Tensor[(3), int32] */;
  %343 = cast(%var_13257, dtype="bool") /* ty=Tensor[(1, 6, 7), bool] */;
  %344 = dyn.reshape(%341, %342, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %345 = @func_11413() /* ty=(Tensor[(225), int32],) */;
  %346 = cast(%340, dtype="uint32") /* ty=Tensor[(1, 6, 7), uint32] */;
  %347 = cast(%var_13280, dtype="uint32") /* ty=Tensor[(12, 6, 7), uint32] */;
  %348 = logical_and(%343, %344) /* ty=Tensor[(?, 6, 7), bool] */;
  %349 = %345.0;
  %350 = left_shift(%346, %347) /* ty=Tensor[(12, 6, 7), uint32] */;
  (%348, %349, %350)
}

def @func_11919(%var_11840: Tensor[(6, 1, 8), uint64], %var_11841: Tensor[(6, 5, 8), uint64], %var_11850: Tensor[(6, 5, 8), uint64]) -> (Tensor[(6, 5, 8), uint64], Tensor[(6, 5, 8), float32], Tensor[(7, 1, 13), float64], Tensor[(1800), int8]) {
  %351 = cast(%var_11840, dtype="uint64") /* ty=Tensor[(6, 1, 8), uint64] */;
  %352 = cast(%var_11841, dtype="uint64") /* ty=Tensor[(6, 5, 8), uint64] */;
  %353 = cast(%var_11840, dtype="float32") /* ty=Tensor[(6, 1, 8), float32] */;
  %354 = cosh(%353) /* ty=Tensor[(6, 1, 8), float32] */;
  %355 = cast(%var_11850, dtype="float32") /* ty=Tensor[(6, 5, 8), float32] */;
  %356 = shape_of(%var_11841, dtype="int32") /* ty=Tensor[(3), int32] */;
  %357 = cast(%var_11841, dtype="float32") /* ty=Tensor[(6, 5, 8), float32] */;
  %358 = dyn.reshape(%355, %356, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %359 = floor_mod(%357, %358) /* ty=Tensor[(6, 5, 8), float32] */;
  %360 = cast(%354, dtype="float32") /* ty=Tensor[(6, 1, 8), float32] */;
  %361 = cast(%359, dtype="float32") /* ty=Tensor[(6, 5, 8), float32] */;
  %362 = floor_divide(%360, %361) /* ty=Tensor[(6, 5, 8), float32] */;
  %363 = cast(%362, dtype="float32") /* ty=Tensor[(6, 5, 8), float32] */;
  %364 = @func_4712() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %365 = @func_11552() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(1800), int8], Tensor[(7, 1, 13), float64]) */;
  %366 = minimum(%351, %352) /* ty=Tensor[(6, 5, 8), uint64] */;
  %367 = sqrt(%363) /* ty=Tensor[(6, 5, 8), float32] */;
  %368 = %364.0;
  %369 = %365.1;
  (%366, %367, %368, %369)
}

def @func_11046(%var_10989: Tensor[(1, 260), float64]) -> (Tensor[(7, 1, 13), float64], Tensor[(7, ?, 13), bool], Tensor[(7, 2, 13), float32], Tensor[(225), float32], Tensor[(260), float32], Tensor[(?, 260), uint32]) {
  %370 = @func_8762() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) */;
  %371 = cast(meta[relay.Constant][20] /* ty=Tensor[(225), float32] */, dtype="float32") /* ty=Tensor[(225), float32] */;
  %372 = reshape(%371, newshape=[225]) /* ty=Tensor[(225), float32] */;
  %373 = @func_10388(%372) /* ty=(Tensor[(7, 2, 13), float32], Tensor[(7, ?, 13), int16], Tensor[(7, ?, 13), bool], Tensor[(225), float32]) */;
  %374 = cast(%var_10989, dtype="float64") /* ty=Tensor[(1, 260), float64] */;
  %375 = reshape(%374, newshape=[260]) /* ty=Tensor[(260), float64] */;
  %376 = @func_4851(%375) /* ty=(Tensor[(1800), int8], Tensor[(13, 4, 5), float64], Tensor[(260), float64]) */;
  %377 = %376.2;
  %378 = cast(%377, dtype="float32") /* ty=Tensor[(260), float32] */;
  %379 = cast(%377, dtype="float32") /* ty=Tensor[(260), float32] */;
  %380 = shape_of(%var_10989, dtype="int32") /* ty=Tensor[(2), int32] */;
  %381 = cast(%var_10989, dtype="float32") /* ty=Tensor[(1, 260), float32] */;
  %382 = dyn.reshape(%379, %380, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %383 = floor_divide(%381, %382) /* ty=Tensor[(?, 260), float32] */;
  %384 = cast(%383, dtype="float64") /* ty=Tensor[(?, 260), float64] */;
  %385 = atan(%384) /* ty=Tensor[(?, 260), float64] */;
  %386 = cast(%383, dtype="uint32") /* ty=Tensor[(?, 260), uint32] */;
  %387 = shape_of(%385, dtype="int32") /* ty=Tensor[(2), int32] */;
  %388 = cast(%385, dtype="uint32") /* ty=Tensor[(?, 260), uint32] */;
  %389 = dyn.reshape(%386, %387, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %390 = logical_xor(%388, %389) /* ty=Tensor[(?, 260), uint32] */;
  %391 = cast(%383, dtype="uint32") /* ty=Tensor[(?, 260), uint32] */;
  %392 = shape_of(%390, dtype="int32") /* ty=Tensor[(2), int32] */;
  %393 = cast(%390, dtype="uint32") /* ty=Tensor[(?, 260), uint32] */;
  %394 = dyn.reshape(%391, %392, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %395 = %370.1;
  %396 = @func_9163() /* ty=Tensor[(7, ?, 13), bool] */;
  %397 = %373.0;
  %398 = sin(%378) /* ty=Tensor[(260), float32] */;
  %399 = bitwise_or(%393, %394) /* ty=Tensor[(?, 260), uint32] */;
  (%395, %396, %397, meta[relay.Constant][20] /* ty=Tensor[(225), float32] */, %398, %399)
}

def @func_5837() -> Tensor[(7, ?, 13), int16] {
  @func_4767() /* ty=Tensor[(7, ?, 13), int16] */
}

def @func_9363() -> (Tensor[(324), float64],) {
  %400 = @func_6184() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(5, 45), int32], Tensor[(324), float64]) */;
  %401 = %400.2;
  (%401,)
}

def @func_5039(%var_5036: Tensor[(5, 5, 10), float64]) -> Tensor[(5, 5, 10), float64] {
  %402 = cast(%var_5036, dtype="float64") /* ty=Tensor[(5, 5, 10), float64] */;
  log(%402) /* ty=Tensor[(5, 5, 10), float64] */
}

def @func_9997() -> (Tensor[(7, 1, 13), float64],) {
  %403 = @func_8807() /* ty=Tensor[(7, 1, 13), float64] */;
  (%403,)
}

def @func_6237() -> Tensor[(7, ?, 13), bool] {
  %404 = @func_5928() /* ty=(Tensor[(7, ?, 13), int16],) */;
  %405 = %404.0;
  %406 = @func_4364() /* ty=Tensor[(7, 1, 13), float64] */;
  %407 = cast(%406, dtype="bool") /* ty=Tensor[(7, 1, 13), bool] */;
  %408 = shape_of(%405, dtype="int32") /* ty=Tensor[(3), int32] */;
  %409 = cast(%405, dtype="bool") /* ty=Tensor[(7, ?, 13), bool] */;
  %410 = dyn.reshape(%407, %408, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%409, %410) /* ty=Tensor[(7, ?, 13), bool] */
}

def @func_10422() -> Tensor[(7, 1, 13), float64] {
  %411 = @func_5016() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(90, 20), int8], Tensor[(225), int32], Tensor[(1800), int8], Tensor[(7, 1, 13), float64]) */;
  %411.0
}

def @func_7586() -> Tensor[(7, 1, 13), float64] {
  @func_3901() /* ty=Tensor[(7, 1, 13), float64] */
}

def @func_17251() -> Tensor[(7, 1, 13), float64] {
  %412 = @func_16663() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) */;
  %412.0
}

def @func_10586() -> (Tensor[(225), int32], Tensor[(13, 4, 5), float64], Tensor[(130, 2), float32]) {
  %413 = cast(meta[relay.Constant][21] /* ty=Tensor[(130, 2), float64] */, dtype="float64") /* ty=Tensor[(130, 2), float64] */;
  %414 = reshape(%413, newshape=[260]) /* ty=Tensor[(260), float64] */;
  %415 = @func_9113(%414) /* ty=(Tensor[(225), int32], Tensor[(13, 4, 5), float64], Tensor[(260), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) */;
  %416 = cast(meta[relay.Constant][21] /* ty=Tensor[(130, 2), float64] */, dtype="float64") /* ty=Tensor[(130, 2), float64] */;
  %417 = cosh(%416) /* ty=Tensor[(130, 2), float64] */;
  %418 = cast(%417, dtype="float32") /* ty=Tensor[(130, 2), float32] */;
  %419 = @func_4538() /* ty=Tensor[(225), int32] */;
  %420 = %415.1;
  %421 = asin(%418) /* ty=Tensor[(130, 2), float32] */;
  (%419, %420, %421)
}

def @func_9444() -> (Tensor[(7, 1, 13), float64],) {
  %422 = @func_6094() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) */;
  %423 = %422.1;
  (%423,)
}

def @func_5986() -> (Tensor[(7, 1, 13), float64], Tensor[(7, ?, 13), int16], Tensor[(7, 1, 13), float32]) {
  %424 = @func_5808() /* ty=Tensor[(7, 1, 13), float64] */;
  %425 = cast(%424, dtype="float32") /* ty=Tensor[(7, 1, 13), float32] */;
  %426 = @func_3901() /* ty=Tensor[(7, 1, 13), float64] */;
  %427 = @func_4767() /* ty=Tensor[(7, ?, 13), int16] */;
  %428 = sin(%425) /* ty=Tensor[(7, 1, 13), float32] */;
  (%426, %427, %428)
}

def @func_8173() -> (Tensor[(7, 1, 13), float64],) {
  %429 = @func_5538() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) */;
  %430 = %429.2;
  (%430,)
}

def @func_13783() -> (Tensor[(7, ?, 13), int16], Tensor[(7, 1, 13), float64], Tensor[(15), uint8], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) {
  %431 = @func_13498() /* ty=(Tensor[(7, ?, 13), int16],) */;
  %432 = @func_12043() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %433 = @func_6168() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(5, 3, 15), float32], Tensor[(15), uint8], Tensor[(504), float32]) */;
  %434 = @func_6094() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) */;
  %435 = @func_9997() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %436 = %431.0;
  %437 = %432.0;
  %438 = %433.2;
  %439 = %434.1;
  %440 = %435.0;
  (%436, %437, %438, %439, %440)
}

def @func_9420() -> Tensor[(7, 1, 13), float64] {
  %441 = @func_3776() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %441.0
}

def @func_14910() -> (Tensor[(7, 1, 13), float64],) {
  %442 = @func_13336() /* ty=(Tensor[(1800), int8], Tensor[(7, 1, 13), float64]) */;
  %443 = %442.1;
  (%443,)
}

def @func_17685() -> Tensor[(225), int32] {
  @func_16943() /* ty=Tensor[(225), int32] */
}

def @func_9731() -> Tensor[(7, 1, 13), float64] {
  %444 = @func_4270() /* ty=(Tensor[(1800), int8], Tensor[(7, 1, 13), float64]) */;
  %444.1
}

def @func_6929() -> (Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(5, 3, 15), float32]) {
  %445 = @func_6582() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) */;
  %446 = @func_6168() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(5, 3, 15), float32], Tensor[(15), uint8], Tensor[(504), float32]) */;
  %447 = @func_5784() /* ty=Tensor[(7, 1, 13), float64] */;
  %448 = %445.1;
  %449 = @func_5808() /* ty=Tensor[(7, 1, 13), float64] */;
  %450 = %446.1;
  (%447, %448, %449, %450)
}

def @func_11583() -> Tensor[(7, ?, 13), int16] {
  %451 = @func_5928() /* ty=(Tensor[(7, ?, 13), int16],) */;
  %451.0
}

def @func_9163() -> Tensor[(7, ?, 13), bool] {
  @func_6237() /* ty=Tensor[(7, ?, 13), bool] */
}

def @func_14920(%var_14918: Tensor[(225), int32]) -> (Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(225), float64], Tensor[(225), int32]) {
  %452 = @func_12333() /* ty=(Tensor[(13, 4, 5), float64], Tensor[(7, 1, 13), float64]) */;
  %453 = @func_11552() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(1800), int8], Tensor[(7, 1, 13), float64]) */;
  %454 = cast(%var_14918, dtype="int32") /* ty=Tensor[(225), int32] */;
  %455 = reshape(%454, newshape=[225]) /* ty=Tensor[(225), int32] */;
  %456 = %452.1;
  %457 = %453.0;
  %458 = @func_5470(%455) /* ty=Tensor[(225), float64] */;
  (%456, %457, %458, %var_14918)
}

def @func_15822() -> (Tensor[(7, 1, 13), float64],) {
  %459 = @func_5538() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) */;
  %460 = %459.2;
  (%460,)
}

def @func_12896() -> (Tensor[(7, ?, 13), int16],) {
  %461 = @func_9616() /* ty=Tensor[(7, ?, 13), int16] */;
  (%461,)
}

def @func_10801() -> (Tensor[(7, 1, 13), float64],) {
  %462 = @func_9006() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(225), int32], Tensor[(7, 1, 13), float64]) */;
  %463 = %462.0;
  (%463,)
}

def @func_16737() -> (Tensor[(15), uint8], Tensor[(7, 2, 13), bool], Tensor[(7, 1, 13), float64]) {
  %464 = @func_4429() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(7, 2, 13), bool]) */;
  %465 = @func_7155() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %466 = @func_16712() /* ty=Tensor[(15), uint8] */;
  %467 = %464.1;
  %468 = %465.0;
  (%466, %467, %468)
}

def @func_16943() -> Tensor[(225), int32] {
  %469 = @func_14746() /* ty=(Tensor[(225), int32],) */;
  %469.0
}

def @func_7046() -> Tensor[(225), int32] {
  %470 = @func_4169() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(225), int32], Tensor[(5, 3, 15), float32]) */;
  %470.1
}

def @func_17635() -> Tensor[(7, 1, 13), float64] {
  %471 = @func_15893() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(182), float64], Tensor[(1183), float64], Tensor[(7, 1, 13), float64]) */;
  %471.0
}

def @func_16501() -> Tensor[(7, 1, 13), float64] {
  @func_9420() /* ty=Tensor[(7, 1, 13), float64] */
}

def @func_4316() -> (Tensor[(5, 3, 15), float32],) {
  %472 = @func_4169() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(225), int32], Tensor[(5, 3, 15), float32]) */;
  %473 = %472.2;
  (%473,)
}

def @func_7855(%var_7819: Tensor[(3, 14, 12), float32]) -> (Tensor[(3, 14, 12), bool],) {
  %474 = @func_4497() /* ty=Tensor[(3, 14, 12), float32] */;
  %475 = cast(%var_7819, dtype="bool") /* ty=Tensor[(3, 14, 12), bool] */;
  %476 = shape_of(%474, dtype="int32") /* ty=Tensor[(3), int32] */;
  %477 = cast(%474, dtype="bool") /* ty=Tensor[(3, 14, 12), bool] */;
  %478 = dyn.reshape(%475, %476, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %479 = logical_and(%477, %478) /* ty=Tensor[(3, 14, 12), bool] */;
  (%479,)
}

def @func_4568(%var_4565: Tensor[(324), float64]) -> (Tensor[(1800), int8], Tensor[(5, 3, 15), int32], Tensor[(208), float64], Tensor[(5, 45), int32], Tensor[(324), float64]) {
  %480 = @func_4270() /* ty=(Tensor[(1800), int8], Tensor[(7, 1, 13), float64]) */;
  %481 = cast(meta[relay.Constant][22] /* ty=Tensor[(208), float64] */, dtype="float64") /* ty=Tensor[(208), float64] */;
  %482 = cast(meta[relay.Constant][23] /* ty=Tensor[(5, 45), int32] */, dtype="int32") /* ty=Tensor[(5, 45), int32] */;
  %483 = cast(%var_4565, dtype="float64") /* ty=Tensor[(324), float64] */;
  %484 = reshape(%481, newshape=[2, 13, 8]) /* ty=Tensor[(2, 13, 8), float64] */;
  %485 = reshape(%482, newshape=[225]) /* ty=Tensor[(225), int32] */;
  %486 = reshape(%483, newshape=[324]) /* ty=Tensor[(324), float64] */;
  %487 = @func_2273(%484, %485, %486) /* ty=(Tensor[(5, 3, 15), int32], Tensor[(225), int32], Tensor[(9, 12, 3), float64], Tensor[(324), float64], Tensor[(9, 12, 3), float64], Tensor[(2, 13, 8), float64], Tensor[(9, 12, 3), float64]) */;
  %488 = %480.0;
  %489 = %487.0;
  (%488, %489, meta[relay.Constant][22] /* ty=Tensor[(208), float64] */, meta[relay.Constant][23] /* ty=Tensor[(5, 45), int32] */, %var_4565)
}

def @func_16053() -> (Tensor[(7, 1, 13), float64], Tensor[(225), int32]) {
  %490 = @func_14404() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %491 = %490.0;
  %492 = @func_4538() /* ty=Tensor[(225), int32] */;
  (%491, %492)
}

def @func_12267(%var_12262: Tensor[(1, 6, 13), uint8], %var_12263: Tensor[(1, 6, 13), uint8]) -> (Tensor[(?, 6, 13), uint8],) {
  %493 = cast(%var_12263, dtype="uint8") /* ty=Tensor[(1, 6, 13), uint8] */;
  %494 = shape_of(%var_12262, dtype="int32") /* ty=Tensor[(3), int32] */;
  %495 = cast(%var_12262, dtype="uint8") /* ty=Tensor[(1, 6, 13), uint8] */;
  %496 = dyn.reshape(%493, %494, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %497 = add(%495, %496) /* ty=Tensor[(?, 6, 13), uint8] */;
  (%497,)
}

def @func_6582() -> (Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) {
  %498 = @func_4712() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %499 = @func_5808() /* ty=Tensor[(7, 1, 13), float64] */;
  %500 = %498.0;
  (%499, %500)
}

def @func_15893() -> (Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(182), float64], Tensor[(1183), float64], Tensor[(7, 1, 13), float64]) {
  %501 = @func_7026() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %502 = @func_12827() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %503 = cast(meta[relay.Constant][24] /* ty=Tensor[(182), float64] */, dtype="float64") /* ty=Tensor[(182), float64] */;
  %504 = cast(meta[relay.Constant][25] /* ty=Tensor[(1183), float64] */, dtype="float64") /* ty=Tensor[(1183), float64] */;
  %505 = reshape(%503, newshape=[7, 2, 13]) /* ty=Tensor[(7, 2, 13), float64] */;
  %506 = reshape(%504, newshape=[7, 13, 13]) /* ty=Tensor[(7, 13, 13), float64] */;
  %507 = @func_11742(%505, %506) /* ty=(Tensor[(7, 2, 13), int16], Tensor[(7, 13, 13), uint16], Tensor[(7, 1, 13), float64]) */;
  %508 = @func_15822() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %509 = %501.0;
  %510 = %502.0;
  %511 = %507.2;
  %512 = %508.0;
  (%509, %510, %511, meta[relay.Constant][24] /* ty=Tensor[(182), float64] */, meta[relay.Constant][25] /* ty=Tensor[(1183), float64] */, %512)
}

def @func_8598() -> (Tensor[(7, 1, 13), float64], Tensor[(225), int32], Tensor[(7, ?, 13), int16]) {
  %513 = @func_5016() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(90, 20), int8], Tensor[(225), int32], Tensor[(1800), int8], Tensor[(7, 1, 13), float64]) */;
  %514 = @func_8163() /* ty=Tensor[(7, 1, 13), float64] */;
  %515 = %513.2;
  %516 = @func_5837() /* ty=Tensor[(7, ?, 13), int16] */;
  (%514, %515, %516)
}

def @func_5016() -> (Tensor[(7, 1, 13), float64], Tensor[(90, 20), int8], Tensor[(225), int32], Tensor[(1800), int8], Tensor[(7, 1, 13), float64]) {
  %517 = @func_4886() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %518 = cast(meta[relay.Constant][26] /* ty=Tensor[(225), int32] */, dtype="int32") /* ty=Tensor[(225), int32] */;
  %519 = cast(meta[relay.Constant][27] /* ty=Tensor[(1800), int8] */, dtype="int8") /* ty=Tensor[(1800), int8] */;
  %520 = reshape(%518, newshape=[225]) /* ty=Tensor[(225), int32] */;
  %521 = reshape(%519, newshape=[90, 20]) /* ty=Tensor[(90, 20), int8] */;
  %522 = @func_3978(%520, %521) /* ty=(Tensor[(7, 1, 13), float64], Tensor[(225), int32], Tensor[(5, 3, 15), float64], Tensor[(3, 14, 12), float32], Tensor[(504), float32], Tensor[(90, 20), int8]) */;
  %523 = @func_4712() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %524 = %517.0;
  %525 = %522.5;
  %526 = %523.0;
  (%524, %525, meta[relay.Constant][26] /* ty=Tensor[(225), int32] */, meta[relay.Constant][27] /* ty=Tensor[(1800), int8] */, %526)
}

def @func_8534() -> (Tensor[(7, 1, 13), float64],) {
  %527 = @func_7155() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %528 = %527.0;
  (%528,)
}

def @func_15586() -> Tensor[(7, ?, 13), uint32] {
  %529 = @func_5837() /* ty=Tensor[(7, ?, 13), int16] */;
  %530 = @func_5928() /* ty=(Tensor[(7, ?, 13), int16],) */;
  %531 = %530.0;
  %532 = cast(%531, dtype="uint32") /* ty=Tensor[(7, ?, 13), uint32] */;
  %533 = shape_of(%529, dtype="int32") /* ty=Tensor[(3), int32] */;
  %534 = cast(%529, dtype="uint32") /* ty=Tensor[(7, ?, 13), uint32] */;
  %535 = dyn.reshape(%532, %533, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  subtract(%534, %535) /* ty=Tensor[(7, ?, 13), uint32] */
}

def @func_5078() -> Tensor[(225), int32] {
  @func_4538() /* ty=Tensor[(225), int32] */
}

def @func_13498() -> (Tensor[(7, ?, 13), int16],) {
  %536 = @func_8598() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(225), int32], Tensor[(7, ?, 13), int16]) */;
  %537 = %536.2;
  (%537,)
}

def @func_10459(%var_10430: Tensor[(5, 3, 15), float32]) -> (Tensor[(5, 3, 15), bool], Tensor[(5, 3, 15), float32]) {
  %538 = @func_5317() /* ty=(Tensor[(5, 3, 15), float32], Tensor[(7, 1, 13), float64]) */;
  %539 = %538.0;
  %540 = cast(%var_10430, dtype="bool") /* ty=Tensor[(5, 3, 15), bool] */;
  %541 = shape_of(%539, dtype="int32") /* ty=Tensor[(3), int32] */;
  %542 = cast(%539, dtype="bool") /* ty=Tensor[(5, 3, 15), bool] */;
  %543 = dyn.reshape(%540, %541, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %544 = cast(%var_10430, dtype="float32") /* ty=Tensor[(5, 3, 15), float32] */;
  %545 = less(%542, %543) /* ty=Tensor[(5, 3, 15), bool] */;
  %546 = tan(%544) /* ty=Tensor[(5, 3, 15), float32] */;
  (%545, %546)
}

def @func_4364() -> Tensor[(7, 1, 13), float64] {
  %547 = @func_4169() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(225), int32], Tensor[(5, 3, 15), float32]) */;
  %547.0
}

def @func_11165() -> (Tensor[(7, 1, 13), float64], Tensor[(324), float64], Tensor[(5, 3, 15), float32]) {
  %548 = @func_10306() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %549 = @func_9363() /* ty=(Tensor[(324), float64],) */;
  %550 = @func_5279() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(5, 3, 15), float32], Tensor[(504), float32]) */;
  %551 = %548.0;
  %552 = %549.0;
  %553 = %550.1;
  (%551, %552, %553)
}

def @func_13534() -> Tensor[(1, 1, 15), uint8] {
  %554 = @func_11519() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(1, 1, 15), uint8], Tensor[(15), uint8]) */;
  %554.2
}

def @func_3917() -> Tensor[(7, 1, 13), float64] {
  %555 = @func_3816() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(3, 14, 12), float32], Tensor[(504), float32], Tensor[(1800), int8]) */;
  %555.0
}

def @func_5891() -> (Tensor[(7, ?, 13), int16], Tensor[(7, 1, 13), float64]) {
  %556 = @func_4767() /* ty=Tensor[(7, ?, 13), int16] */;
  %557 = @func_5740() /* ty=Tensor[(7, 1, 13), float64] */;
  (%556, %557)
}

def @func_11228() -> (Tensor[(7, 1, 13), float64], Tensor[(8, 9, ?), uint64], Tensor[(72), float32]) {
  %558 = @func_5391() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %559 = cast(meta[relay.Constant][28] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %560 = reshape(%559, newshape=[8, 9, 1]) /* ty=Tensor[(8, 9, 1), float32] */;
  %561 = %558.0;
  %562 = @func_9594(%560) /* ty=Tensor[(8, 9, ?), uint64] */;
  (%561, %562, meta[relay.Constant][28] /* ty=Tensor[(72), float32] */)
}

def @func_8618() -> Tensor[(7, 1, 13), float64] {
  %563 = @func_4712() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %563.0
}

def @func_17499() -> Tensor[(7, 1, 13), float64] {
  %564 = @func_5891() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(7, 1, 13), float64]) */;
  %564.1
}

def @func_4125(%var_4100: Tensor[(1, 1, 15), uint8]) -> (Tensor[(1, 1, 15), uint8],) {
  %565 = cast(meta[relay.Constant][29] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %566 = cast(%var_4100, dtype="uint8") /* ty=Tensor[(1, 1, 15), uint8] */;
  %567 = subtract(%565, %566) /* ty=Tensor[(1, 1, 15), uint8] */;
  (%567,)
}

def @func_7331() -> (Tensor[(7, ?, 13), int16], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 2, 13), bool], Tensor[(7, 1, 13), float64]) {
  %568 = @func_5928() /* ty=(Tensor[(7, ?, 13), int16],) */;
  %569 = @func_5093() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %570 = @func_5093() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %571 = @func_4429() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(7, 2, 13), bool]) */;
  %572 = @func_6929() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(5, 3, 15), float32]) */;
  %573 = %568.0;
  %574 = %569.0;
  %575 = %570.0;
  %576 = %571.1;
  %577 = %572.2;
  (%573, %574, %575, %576, %577)
}

def @func_14874() -> (Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(5, 3, 15), int8], Tensor[(5, 3, 15), float32], Tensor[(7, ?, 13), bool]) {
  %578 = @func_9444() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %579 = cast(meta[relay.Constant][30] /* ty=Tensor[(225, 1), int32] */, dtype="int32") /* ty=Tensor[(225, 1), int32] */;
  %580 = reshape(%579, newshape=[5, 3, 15]) /* ty=Tensor[(5, 3, 15), int32] */;
  %581 = @func_2159(%580) /* ty=Tensor[(5, 3, 15), int32] */;
  %582 = cast(meta[relay.Constant][30] /* ty=Tensor[(225, 1), int32] */, dtype="int8") /* ty=Tensor[(225, 1), int8] */;
  %583 = shape_of(%581, dtype="int32") /* ty=Tensor[(3), int32] */;
  %584 = cast(%581, dtype="int8") /* ty=Tensor[(5, 3, 15), int8] */;
  %585 = dyn.reshape(%582, %583, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %586 = bitwise_and(%584, %585) /* ty=Tensor[(5, 3, 15), int8] */;
  %587 = cast(%586, dtype="float32") /* ty=Tensor[(5, 3, 15), float32] */;
  %588 = reshape(%587, newshape=[5, 3, 15]) /* ty=Tensor[(5, 3, 15), float32] */;
  %589 = @func_10459(%588) /* ty=(Tensor[(5, 3, 15), bool], Tensor[(5, 3, 15), float32]) */;
  %590 = %578.0;
  %591 = @func_3901() /* ty=Tensor[(7, 1, 13), float64] */;
  %592 = %589.1;
  %593 = @func_9163() /* ty=Tensor[(7, ?, 13), bool] */;
  (%590, %591, %586, %592, %593)
}

def @func_14111() -> (Tensor[(7, ?, 13), int16], Tensor[(7, 2, 13), bool]) {
  %594 = @func_4429() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(7, 2, 13), bool]) */;
  %595 = @func_4767() /* ty=Tensor[(7, ?, 13), int16] */;
  %596 = %594.1;
  (%595, %596)
}

def @func_14404() -> (Tensor[(7, 1, 13), float64],) {
  %597 = @func_6844() /* ty=(Tensor[(7, ?, 13), bool], Tensor[(7, 1, 13), float64]) */;
  %598 = %597.1;
  (%598,)
}

def @func_17431() -> (Tensor[(7, 1, 13), float64], Tensor[(225), int32], Tensor[(7, 1, 13), float64]) {
  %599 = @func_14746() /* ty=(Tensor[(225), int32],) */;
  %600 = @func_17233() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %601 = @func_8807() /* ty=Tensor[(7, 1, 13), float64] */;
  %602 = %599.0;
  %603 = %600.0;
  (%601, %602, %603)
}

def @func_10686(%var_10676: Tensor[(7, 13, 13), float64]) -> Tensor[(7, 13, 13), float64] {
  %604 = @func_10061() /* ty=Tensor[(7, 1, 13), float64] */;
  %605 = cast(%604, dtype="float64") /* ty=Tensor[(7, 1, 13), float64] */;
  %606 = cast(%var_10676, dtype="float64") /* ty=Tensor[(7, 13, 13), float64] */;
  mod(%605, %606) /* ty=Tensor[(7, 13, 13), float64] */
}

def @func_15508() -> Tensor[(7, ?, 13), int16] {
  %607 = @func_9243() /* ty=(Tensor[(7, ?, 13), int16],) */;
  %607.0
}

def @func_16231(%var_16217: Tensor[(6, 7, 16), uint64], %var_16218: Tensor[(6, 7, 16), uint64]) -> (Tensor[(6, 7, 16), uint64],) {
  %608 = cast(%var_16218, dtype="uint64") /* ty=Tensor[(6, 7, 16), uint64] */;
  %609 = shape_of(%var_16217, dtype="int32") /* ty=Tensor[(3), int32] */;
  %610 = cast(%var_16217, dtype="uint64") /* ty=Tensor[(6, 7, 16), uint64] */;
  %611 = dyn.reshape(%608, %609, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %612 = add(%610, %611) /* ty=Tensor[(6, 7, 16), uint64] */;
  (%612,)
}

def @func_17610() -> (Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) {
  %613 = @func_16501() /* ty=Tensor[(7, 1, 13), float64] */;
  %614 = @func_8973() /* ty=Tensor[(7, 1, 13), float64] */;
  (%613, %614)
}

def @func_16472() -> (Tensor[(7, 1, 13), float64],) {
  %615 = @func_14212() /* ty=Tensor[(7, 1, 13), float64] */;
  (%615,)
}

def @func_13744(%var_13699: Tensor[(14, 12, 15), float64]) -> (Tensor[(14, 12, 15), bool], Tensor[(7, ?, 13), int16], Tensor[(7, 1, 13), float64]) {
  %616 = cast(%var_13699, dtype="float64") /* ty=Tensor[(14, 12, 15), float64] */;
  %617 = log(%616) /* ty=Tensor[(14, 12, 15), float64] */;
  %618 = cast(%617, dtype="float32") /* ty=Tensor[(14, 12, 15), float32] */;
  %619 = cos(%618) /* ty=Tensor[(14, 12, 15), float32] */;
  %620 = cast(%var_13699, dtype="bool") /* ty=Tensor[(14, 12, 15), bool] */;
  %621 = shape_of(%619, dtype="int32") /* ty=Tensor[(3), int32] */;
  %622 = cast(%619, dtype="bool") /* ty=Tensor[(14, 12, 15), bool] */;
  %623 = dyn.reshape(%620, %621, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %624 = @func_5928() /* ty=(Tensor[(7, ?, 13), int16],) */;
  %625 = @func_9444() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %626 = logical_or(%622, %623) /* ty=Tensor[(14, 12, 15), bool] */;
  %627 = %624.0;
  %628 = %625.0;
  (%626, %627, %628)
}

def @func_9616() -> Tensor[(7, ?, 13), int16] {
  @func_5837() /* ty=Tensor[(7, ?, 13), int16] */
}

def @func_4292() -> Tensor[(7, 1, 13), float64] {
  %629 = @func_3776() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %629.0
}

def @func_14090() -> (Tensor[(225), int32],) {
  %630 = @func_12580() /* ty=Tensor[(225), int32] */;
  (%630,)
}

def @func_17239() -> (Tensor[(324), float64],) {
  %631 = @func_9363() /* ty=(Tensor[(324), float64],) */;
  %632 = %631.0;
  (%632,)
}

def @func_3641(%var_3633: Tensor[(3, 15, 9), float32]) -> (Tensor[(3, 15, 9), float32],) {
  %633 = cast(%var_3633, dtype="float32") /* ty=Tensor[(3, 15, 9), float32] */;
  %634 = rsqrt(%633) /* ty=Tensor[(3, 15, 9), float32] */;
  (%634,)
}

def @func_10287() -> (Tensor[(225), int32], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) {
  %635 = @func_7437() /* ty=(Tensor[(1, 1, 15), uint8], Tensor[(15), uint8], Tensor[(225), int32], Tensor[(225), int32], Tensor[(7, ?, 13), uint32], Tensor[(7, 1, 13), float64]) */;
  %636 = @func_4712() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %637 = @func_8762() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) */;
  %638 = %635.2;
  %639 = @func_3901() /* ty=Tensor[(7, 1, 13), float64] */;
  %640 = %636.0;
  %641 = %637.0;
  (%638, %639, %640, %641)
}

def @func_656(%var_643: Tensor[(9, 12, 3), float64]) -> (Tensor[(9, 12, 3), float64],) {
  %642 = cast(%var_643, dtype="float64") /* ty=Tensor[(9, 12, 3), float64] */;
  %643 = cos(%642) /* ty=Tensor[(9, 12, 3), float64] */;
  (%643,)
}

def @func_14836() -> Tensor[(13, 8, 14), bool] {
  %644 = cast(meta[relay.Constant][32] /* ty=Tensor[(13, 8, 14), float64] */, dtype="float64") /* ty=Tensor[(13, 8, 14), float64] */;
  %645 = shape_of(meta[relay.Constant][31] /* ty=Tensor[(13, 8, 14), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %646 = cast(meta[relay.Constant][31] /* ty=Tensor[(13, 8, 14), float64] */, dtype="float64") /* ty=Tensor[(13, 8, 14), float64] */;
  %647 = dyn.reshape(%644, %645, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %648 = mod(%646, %647) /* ty=Tensor[(13, 8, 14), float64] */;
  %649 = cast(meta[relay.Constant][32] /* ty=Tensor[(13, 8, 14), float64] */, dtype="bool") /* ty=Tensor[(13, 8, 14), bool] */;
  %650 = shape_of(%648, dtype="int32") /* ty=Tensor[(3), int32] */;
  %651 = cast(%648, dtype="bool") /* ty=Tensor[(13, 8, 14), bool] */;
  %652 = dyn.reshape(%649, %650, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%651, %652) /* ty=Tensor[(13, 8, 14), bool] */
}

def @func_8762() -> (Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) {
  %653 = @func_4886() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %654 = @func_3901() /* ty=Tensor[(7, 1, 13), float64] */;
  %655 = %653.0;
  (%654, %655)
}

def @func_5279() -> (Tensor[(7, 1, 13), float64], Tensor[(5, 3, 15), float32], Tensor[(504), float32]) {
  %656 = @func_4206() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %657 = @func_4316() /* ty=(Tensor[(5, 3, 15), float32],) */;
  %658 = @func_3816() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(3, 14, 12), float32], Tensor[(504), float32], Tensor[(1800), int8]) */;
  %659 = %656.0;
  %660 = %657.0;
  %661 = %658.2;
  (%659, %660, %661)
}

def @func_9628() -> Tensor[(7, 1, 13), float64] {
  %662 = @func_7155() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %662.0
}

def @func_4662() -> Tensor[(225), int32] {
  @func_4538() /* ty=Tensor[(225), int32] */
}

def @func_12043() -> (Tensor[(7, 1, 13), float64],) {
  %663 = @func_12018() /* ty=Tensor[(7, 1, 13), float64] */;
  (%663,)
}

def @func_11370() -> (Tensor[(13, 4, 5), float64],) {
  %664 = @func_10586() /* ty=(Tensor[(225), int32], Tensor[(13, 4, 5), float64], Tensor[(130, 2), float32]) */;
  %665 = %664.1;
  (%665,)
}

def @func_7155() -> (Tensor[(7, 1, 13), float64],) {
  %666 = @func_6929() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(5, 3, 15), float32]) */;
  %667 = %666.1;
  (%667,)
}

def @func_12543() -> Tensor[(3, 14, 12), float64] {
  %668 = @func_7946() /* ty=(Tensor[(3, 14, 12), float64],) */;
  %668.0
}

def @func_10388(%var_10372: Tensor[(225), float32]) -> (Tensor[(7, 2, 13), float32], Tensor[(7, ?, 13), int16], Tensor[(7, ?, 13), bool], Tensor[(225), float32]) {
  %669 = @func_6844() /* ty=(Tensor[(7, ?, 13), bool], Tensor[(7, 1, 13), float64]) */;
  %670 = %669.1;
  %671 = cast(%670, dtype="float32") /* ty=Tensor[(7, 1, 13), float32] */;
  %672 = cast(meta[relay.Constant][33] /* ty=Tensor[(7, 2, 13), float64] */, dtype="float32") /* ty=Tensor[(7, 2, 13), float32] */;
  %673 = @func_4429() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(7, 2, 13), bool]) */;
  %674 = cast(%var_10372, dtype="float32") /* ty=Tensor[(225), float32] */;
  %675 = reshape(%674, newshape=[225]) /* ty=Tensor[(225), float32] */;
  %676 = @func_8269(%675) /* ty=(Tensor[(7, 1, 13), float64], Tensor[(5, 3, 15), int64], Tensor[(225), float32], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(7, ?, 13), bool]) */;
  %677 = divide(%671, %672) /* ty=Tensor[(7, 2, 13), float32] */;
  %678 = %673.0;
  %679 = %676.5;
  (%677, %678, %679, %var_10372)
}

def @func_14688(%var_14686: Tensor[(1183), float64]) -> (Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 13, 13), float64], Tensor[(1183), float64]) {
  %680 = cast(%var_14686, dtype="float64") /* ty=Tensor[(1183), float64] */;
  %681 = reshape(%680, newshape=[7, 13, 13]) /* ty=Tensor[(7, 13, 13), float64] */;
  %682 = @func_9731() /* ty=Tensor[(7, 1, 13), float64] */;
  %683 = @func_5808() /* ty=Tensor[(7, 1, 13), float64] */;
  %684 = @func_10686(%681) /* ty=Tensor[(7, 13, 13), float64] */;
  (%682, %683, %684, %var_14686)
}

def @func_14897() -> Tensor[(7, 1, 13), float64] {
  @func_8807() /* ty=Tensor[(7, 1, 13), float64] */
}

def @func_14746() -> (Tensor[(225), int32],) {
  %685 = @func_12580() /* ty=Tensor[(225), int32] */;
  (%685,)
}

def @func_4270() -> (Tensor[(1800), int8], Tensor[(7, 1, 13), float64]) {
  %686 = @func_3816() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(3, 14, 12), float32], Tensor[(504), float32], Tensor[(1800), int8]) */;
  %687 = %686.3;
  %688 = @func_3901() /* ty=Tensor[(7, 1, 13), float64] */;
  (%687, %688)
}

def @func_6094() -> (Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) {
  %689 = @func_5391() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %690 = %689.0;
  %691 = @func_5784() /* ty=Tensor[(7, 1, 13), float64] */;
  %692 = @func_5740() /* ty=Tensor[(7, 1, 13), float64] */;
  (%690, %691, %692)
}

def @func_7740() -> (Tensor[(7, 1, 13), float64],) {
  %693 = @func_5093() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %694 = %693.0;
  (%694,)
}

def @func_6508(%var_6497: Tensor[(225), int32]) -> (Tensor[(7, 1, 13), float64], Tensor[(5, 3, 15), int32], Tensor[(225), int32]) {
  %695 = @func_6006() /* ty=Tensor[(7, 1, 13), float64] */;
  %696 = cast(%695, dtype="float64") /* ty=Tensor[(7, 1, 13), float64] */;
  %697 = cast(%var_6497, dtype="int32") /* ty=Tensor[(225), int32] */;
  %698 = reshape(%697, newshape=[5, 3, 15]) /* ty=Tensor[(5, 3, 15), int32] */;
  %699 = acos(%696) /* ty=Tensor[(7, 1, 13), float64] */;
  %700 = @func_2159(%698) /* ty=Tensor[(5, 3, 15), int32] */;
  (%699, %700, %var_6497)
}

def @func_13960() -> (Tensor[(7, 1, 13), float64], Tensor[(3, 14, 12), bool], Tensor[(504), float32]) {
  %701 = cast(meta[relay.Constant][34] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
  %702 = reshape(%701, newshape=[3, 14, 12]) /* ty=Tensor[(3, 14, 12), float32] */;
  %703 = @func_7855(%702) /* ty=(Tensor[(3, 14, 12), bool],) */;
  %704 = @func_3917() /* ty=Tensor[(7, 1, 13), float64] */;
  %705 = %703.0;
  (%704, %705, meta[relay.Constant][34] /* ty=Tensor[(504), float32] */)
}

def @func_6776() -> (Tensor[(1800), int8],) {
  %706 = @func_3816() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(3, 14, 12), float32], Tensor[(504), float32], Tensor[(1800), int8]) */;
  %707 = %706.3;
  (%707,)
}

def @func_9006() -> (Tensor[(7, 1, 13), float64], Tensor[(225), int32], Tensor[(7, 1, 13), float64]) {
  %708 = @func_8534() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %709 = @func_7026() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %710 = %708.0;
  %711 = @func_7046() /* ty=Tensor[(225), int32] */;
  %712 = %709.0;
  (%710, %711, %712)
}

def @func_16689() -> (Tensor[(7, 1, 13), float64],) {
  %713 = @func_7740() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %714 = %713.0;
  (%714,)
}

def @func_17750() -> (Tensor[(7, ?, 13), uint32],) {
  %715 = @func_15586() /* ty=Tensor[(7, ?, 13), uint32] */;
  (%715,)
}

def @func_6168() -> (Tensor[(7, 1, 13), float64], Tensor[(5, 3, 15), float32], Tensor[(15), uint8], Tensor[(504), float32]) {
  %716 = @func_3776() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %717 = @func_4169() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(225), int32], Tensor[(5, 3, 15), float32]) */;
  %718 = cast(meta[relay.Constant][35] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
  %719 = reshape(%718, newshape=[504]) /* ty=Tensor[(504), float32] */;
  %720 = @func_4931(%719) /* ty=(Tensor[(225), int32], Tensor[(1, 1, 15), uint8], Tensor[(15), uint8], Tensor[(15, 12, 10), int8], Tensor[(504), float32], Tensor[(1800), int8]) */;
  %721 = %716.0;
  %722 = %717.2;
  %723 = %720.2;
  (%721, %722, %723, meta[relay.Constant][35] /* ty=Tensor[(504), float32] */)
}

def @func_8495() -> Tensor[(7, ?, 13), uint8] {
  %724 = @func_7586() /* ty=Tensor[(7, 1, 13), float64] */;
  %725 = @func_5538() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) */;
  %726 = %725.1;
  %727 = cast(%726, dtype="uint8") /* ty=Tensor[(7, 1, 13), uint8] */;
  %728 = shape_of(%724, dtype="int32") /* ty=Tensor[(3), int32] */;
  %729 = cast(%724, dtype="uint8") /* ty=Tensor[(7, 1, 13), uint8] */;
  %730 = dyn.reshape(%727, %728, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  bitwise_xor(%729, %730) /* ty=Tensor[(7, ?, 13), uint8] */
}

def @func_12018() -> Tensor[(7, 1, 13), float64] {
  %731 = @func_4886() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %731.0
}

def @func_16083() -> Tensor[(13, 4, 5), float32] {
  %732 = @func_11826() /* ty=(Tensor[(13, 4, 5), float64],) */;
  %733 = %732.0;
  %734 = cast(%733, dtype="float32") /* ty=Tensor[(13, 4, 5), float32] */;
  tan(%734) /* ty=Tensor[(13, 4, 5), float32] */
}

def @func_11133(%var_11124: Tensor[(3, 108), float64]) -> (Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(3, 14, 12), float32], Tensor[(504), float32], Tensor[(1800), int8], Tensor[(9, 12, 3), float64], Tensor[(3, 108), float64]) {
  %735 = @func_4206() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %736 = @func_5538() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) */;
  %737 = cast(meta[relay.Constant][36] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
  %738 = cast(meta[relay.Constant][37] /* ty=Tensor[(1800), int8] */, dtype="int8") /* ty=Tensor[(1800), int8] */;
  %739 = reshape(%737, newshape=[3, 14, 12]) /* ty=Tensor[(3, 14, 12), float32] */;
  %740 = reshape(%738, newshape=[1800]) /* ty=Tensor[(1800), int8] */;
  %741 = @func_2958(%739, %740) /* ty=(Tensor[(3, 14, 12), float32], Tensor[(15, 12, 10), int8], Tensor[(1800), int8], Tensor[(13, 4, 5), float64]) */;
  %742 = cast(%var_11124, dtype="float64") /* ty=Tensor[(3, 108), float64] */;
  %743 = %741.0;
  %744 = cast(%743, dtype="float32") /* ty=Tensor[(3, 14, 12), float32] */;
  %745 = cast(meta[relay.Constant][37] /* ty=Tensor[(1800), int8] */, dtype="int8") /* ty=Tensor[(1800), int8] */;
  %746 = reshape(%742, newshape=[9, 36]) /* ty=Tensor[(9, 36), float64] */;
  %747 = reshape(%744, newshape=[504]) /* ty=Tensor[(504), float32] */;
  %748 = reshape(%745, newshape=[1800]) /* ty=Tensor[(1800), int8] */;
  %749 = @func_3799(%746, %747, %748) /* ty=(Tensor[(7, 3, 13), bool], Tensor[(9, 12, 3), float64], Tensor[(9, 36), float64], Tensor[(3, 14, 12), float32], Tensor[(504), float32], Tensor[(1800), int8]) */;
  %750 = %735.0;
  %751 = %736.2;
  %752 = %749.1;
  (%750, %751, %743, meta[relay.Constant][36] /* ty=Tensor[(504), float32] */, meta[relay.Constant][37] /* ty=Tensor[(1800), int8] */, %752, %var_11124)
}

def @func_10151() -> Tensor[(324), float64] {
  %753 = @func_7602() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(324), float64]) */;
  %753.1
}

def @func_17819() -> (Tensor[(7, 1, 13), float64],) {
  %754 = @func_9006() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(225), int32], Tensor[(7, 1, 13), float64]) */;
  %755 = %754.0;
  (%755,)
}

def @func_3776() -> (Tensor[(7, 1, 13), float64],) {
  %756 = cast(meta[relay.Constant][38] /* ty=Tensor[(7, 1, 13), float64] */, dtype="float64") /* ty=Tensor[(7, 1, 13), float64] */;
  %757 = asinh(%756) /* ty=Tensor[(7, 1, 13), float64] */;
  (%757,)
}

def @func_7564(%var_7518: Tensor[(260), float64]) -> (Tensor[(7, 1, 13), float64], Tensor[(13, 4, 5), float64], Tensor[(260), float64], Tensor[(225), int32]) {
  %758 = @func_4712() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %759 = cast(%var_7518, dtype="float64") /* ty=Tensor[(260), float64] */;
  %760 = reshape(%759, newshape=[260]) /* ty=Tensor[(260), float64] */;
  %761 = @func_4851(%760) /* ty=(Tensor[(1800), int8], Tensor[(13, 4, 5), float64], Tensor[(260), float64]) */;
  %762 = %758.0;
  %763 = %761.1;
  %764 = @func_5155() /* ty=Tensor[(225), int32] */;
  (%762, %763, %var_7518, %764)
}

def @func_11791(%var_11772: Tensor[(9, 14, 10), float64]) -> (Tensor[(9, 14, 10), float64], Tensor[(7, ?, 13), bool]) {
  %765 = cast(%var_11772, dtype="float64") /* ty=Tensor[(9, 14, 10), float64] */;
  %766 = log(%765) /* ty=Tensor[(9, 14, 10), float64] */;
  %767 = @func_6237() /* ty=Tensor[(7, ?, 13), bool] */;
  (%766, %767)
}

def @func_8034(%var_8028: Tensor[(360), int8]) -> (Tensor[(1800), int8], Tensor[(7, ?, 13), int16], Tensor[(13, 4, 5), float64], Tensor[(360), int8]) {
  %768 = @func_3816() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(3, 14, 12), float32], Tensor[(504), float32], Tensor[(1800), int8]) */;
  %769 = cast(%var_8028, dtype="int8") /* ty=Tensor[(360), int8] */;
  %770 = cast(%var_8028, dtype="int8") /* ty=Tensor[(360), int8] */;
  %771 = reshape(%769, newshape=[12, 10, 3]) /* ty=Tensor[(12, 10, 3), int8] */;
  %772 = reshape(%770, newshape=[12, 10, 3]) /* ty=Tensor[(12, 10, 3), int8] */;
  %773 = @func_4024(%771, %772) /* ty=(Tensor[(12, 10, 3), bool], Tensor[(13, 4, 5), float64], Tensor[(900, 2), int8]) */;
  %774 = %768.3;
  %775 = @func_4767() /* ty=Tensor[(7, ?, 13), int16] */;
  %776 = %773.1;
  (%774, %775, %776, %var_8028)
}

def @func_6844() -> (Tensor[(7, ?, 13), bool], Tensor[(7, 1, 13), float64]) {
  %777 = @func_5016() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(90, 20), int8], Tensor[(225), int32], Tensor[(1800), int8], Tensor[(7, 1, 13), float64]) */;
  %778 = @func_6237() /* ty=Tensor[(7, ?, 13), bool] */;
  %779 = %777.0;
  (%778, %779)
}

def @func_3901() -> Tensor[(7, 1, 13), float64] {
  %780 = @func_3776() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %780.0
}

def @func_5928() -> (Tensor[(7, ?, 13), int16],) {
  %781 = @func_4767() /* ty=Tensor[(7, ?, 13), int16] */;
  (%781,)
}

def @func_8163() -> Tensor[(7, 1, 13), float64] {
  @func_3917() /* ty=Tensor[(7, 1, 13), float64] */
}

def @func_11944() -> (Tensor[(7, 1, 13), float64],) {
  %782 = @func_9556() /* ty=Tensor[(7, 1, 13), float64] */;
  (%782,)
}

def @func_5631(%var_5584: Tensor[(360), int8], %var_5587: Tensor[(405), float32]) -> (Tensor[(225), int32], Tensor[(12, 10, 3), bool], Tensor[(360), int8], Tensor[(3, 15, 9), float32], Tensor[(405), float32]) {
  %783 = cast(%var_5584, dtype="int8") /* ty=Tensor[(360), int8] */;
  %784 = cast(%var_5584, dtype="int8") /* ty=Tensor[(360), int8] */;
  %785 = reshape(%783, newshape=[12, 10, 3]) /* ty=Tensor[(12, 10, 3), int8] */;
  %786 = reshape(%784, newshape=[12, 10, 3]) /* ty=Tensor[(12, 10, 3), int8] */;
  %787 = @func_4024(%785, %786) /* ty=(Tensor[(12, 10, 3), bool], Tensor[(13, 4, 5), float64], Tensor[(900, 2), int8]) */;
  %788 = cast(%var_5587, dtype="float32") /* ty=Tensor[(405), float32] */;
  %789 = reshape(%788, newshape=[3, 15, 9]) /* ty=Tensor[(3, 15, 9), float32] */;
  %790 = @func_3641(%789) /* ty=(Tensor[(3, 15, 9), float32],) */;
  %791 = @func_4538() /* ty=Tensor[(225), int32] */;
  %792 = %787.0;
  %793 = %790.0;
  (%791, %792, %var_5584, %793, %var_5587)
}

def @func_15284() -> Tensor[(7, 1, 13), float64] {
  %794 = @func_5538() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) */;
  %794.2
}

def @func_13369(%var_13347: Tensor[(11, 2, 10), float32]) -> (Tensor[(11, 2, 10), float32], Tensor[(7, 1, 13), float64]) {
  %795 = cast(meta[relay.Constant][39] /* ty=Tensor[(11, 2, 10), float32] */, dtype="float32") /* ty=Tensor[(11, 2, 10), float32] */;
  %796 = shape_of(%var_13347, dtype="int32") /* ty=Tensor[(3), int32] */;
  %797 = cast(%var_13347, dtype="float32") /* ty=Tensor[(11, 2, 10), float32] */;
  %798 = dyn.reshape(%795, %796, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %799 = @func_10306() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %800 = divide(%797, %798) /* ty=Tensor[(11, 2, 10), float32] */;
  %801 = %799.0;
  (%800, %801)
}

def @func_4206() -> (Tensor[(7, 1, 13), float64],) {
  %802 = @func_4169() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(225), int32], Tensor[(5, 3, 15), float32]) */;
  %803 = %802.0;
  (%803,)
}

def @main(%var_18057: Tensor[(780), int64]) -> (Tensor[(324), float64], Tensor[(780), int64], Tensor[(7, 1, 13), float64], Tensor[(12, 182), bool]) {
  %804 = @func_16876() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(324), float64], Tensor[(225), int32]) */;
  %805 = @func_12097() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %806 = cast(%var_18057, dtype="int64") /* ty=Tensor[(780), int64] */;
  %807 = reshape(%806, newshape=[4, 15, 13]) /* ty=Tensor[(4, 15, 13), int64] */;
  %808 = @func_11655(%807) /* ty=(Tensor[(4, 15, 13), bool], Tensor[(1, 182), float32], Tensor[(7, 110), float64], Tensor[(182), float32], Tensor[(225), int32]) */;
  %809 = %808.1;
  %810 = cast(%809, dtype="bool") /* ty=Tensor[(1, 182), bool] */;
  %811 = cast(meta[relay.Constant][40] /* ty=Tensor[(12, 182), float32] */, dtype="bool") /* ty=Tensor[(12, 182), bool] */;
  %812 = %804.1;
  %813 = %805.0;
  %814 = equal(%810, %811) /* ty=Tensor[(12, 182), bool] */;
  (%812, %var_18057, %813, %814)
}

def @func_9689() -> (Tensor[(7, 1, 13), float64], Tensor[(3, 14, 12), float32]) {
  %815 = @func_8598() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(225), int32], Tensor[(7, ?, 13), int16]) */;
  %816 = %815.0;
  %817 = @func_4497() /* ty=Tensor[(3, 14, 12), float32] */;
  (%816, %817)
}

def @func_8837(%var_8819: Tensor[(9, 3, 15), float64]) -> (Tensor[(9, 3, 15), bool],) {
  %818 = cast(%var_8819, dtype="float64") /* ty=Tensor[(9, 3, 15), float64] */;
  %819 = atan(%818) /* ty=Tensor[(9, 3, 15), float64] */;
  %820 = cast(%819, dtype="bool") /* ty=Tensor[(9, 3, 15), bool] */;
  %821 = shape_of(%var_8819, dtype="int32") /* ty=Tensor[(3), int32] */;
  %822 = cast(%var_8819, dtype="bool") /* ty=Tensor[(9, 3, 15), bool] */;
  %823 = dyn.reshape(%820, %821, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %824 = less(%822, %823) /* ty=Tensor[(9, 3, 15), bool] */;
  (%824,)
}

def @func_11413() -> (Tensor[(225), int32],) {
  %825 = @func_5078() /* ty=Tensor[(225), int32] */;
  (%825,)
}

def @func_5317() -> (Tensor[(5, 3, 15), float32], Tensor[(7, 1, 13), float64]) {
  %826 = @func_4316() /* ty=(Tensor[(5, 3, 15), float32],) */;
  %827 = @func_5016() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(90, 20), int8], Tensor[(225), int32], Tensor[(1800), int8], Tensor[(7, 1, 13), float64]) */;
  %828 = %826.0;
  %829 = %827.0;
  (%828, %829)
}

def @func_4429() -> (Tensor[(7, ?, 13), int16], Tensor[(7, 2, 13), bool]) {
  %830 = @func_3917() /* ty=Tensor[(7, 1, 13), float64] */;
  %831 = cast(meta[relay.Constant][41] /* ty=Tensor[(7, 1, 13), float64] */, dtype="float32") /* ty=Tensor[(7, 1, 13), float32] */;
  %832 = shape_of(%830, dtype="int32") /* ty=Tensor[(3), int32] */;
  %833 = cast(%830, dtype="float32") /* ty=Tensor[(7, 1, 13), float32] */;
  %834 = dyn.reshape(%831, %832, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %835 = floor_mod(%833, %834) /* ty=Tensor[(7, ?, 13), float32] */;
  %836 = cast(%835, dtype="uint8") /* ty=Tensor[(7, ?, 13), uint8] */;
  %837 = shape_of(%830, dtype="int32") /* ty=Tensor[(3), int32] */;
  %838 = cast(%830, dtype="uint8") /* ty=Tensor[(7, 1, 13), uint8] */;
  %839 = dyn.reshape(%836, %837, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %840 = multiply(%838, %839) /* ty=Tensor[(7, ?, 13), uint8] */;
  %841 = cast(%840, dtype="int16") /* ty=Tensor[(7, ?, 13), int16] */;
  %842 = shape_of(meta[relay.Constant][41] /* ty=Tensor[(7, 1, 13), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %843 = cast(meta[relay.Constant][41] /* ty=Tensor[(7, 1, 13), float64] */, dtype="int16") /* ty=Tensor[(7, 1, 13), int16] */;
  %844 = dyn.reshape(%841, %842, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %845 = cast(%840, dtype="bool") /* ty=Tensor[(7, ?, 13), bool] */;
  %846 = cast(meta[relay.Constant][42] /* ty=Tensor[(7, 2, 13), uint8] */, dtype="bool") /* ty=Tensor[(7, 2, 13), bool] */;
  %847 = left_shift(%843, %844) /* ty=Tensor[(7, ?, 13), int16] */;
  %848 = less(%845, %846) /* ty=Tensor[(7, 2, 13), bool] */;
  (%847, %848)
}

def @func_4886() -> (Tensor[(7, 1, 13), float64],) {
  %849 = @func_4292() /* ty=Tensor[(7, 1, 13), float64] */;
  (%849,)
}

def @func_11655(%var_11624: Tensor[(4, 15, 13), int64]) -> (Tensor[(4, 15, 13), bool], Tensor[(1, 182), float32], Tensor[(7, 110), float64], Tensor[(182), float32], Tensor[(225), int32]) {
  %850 = cast(%var_11624, dtype="bool") /* ty=Tensor[(4, 15, 13), bool] */;
  %851 = shape_of(meta[relay.Constant][43] /* ty=Tensor[(4, 15, 13), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %852 = cast(meta[relay.Constant][43] /* ty=Tensor[(4, 15, 13), int64] */, dtype="bool") /* ty=Tensor[(4, 15, 13), bool] */;
  %853 = dyn.reshape(%850, %851, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %854 = cast(meta[relay.Constant][44] /* ty=Tensor[(7, 110), float64] */, dtype="float64") /* ty=Tensor[(7, 110), float64] */;
  %855 = cast(meta[relay.Constant][45] /* ty=Tensor[(182), float32] */, dtype="float32") /* ty=Tensor[(182), float32] */;
  %856 = reshape(%854, newshape=[11, 5, 14]) /* ty=Tensor[(11, 5, 14), float64] */;
  %857 = reshape(%855, newshape=[1, 182]) /* ty=Tensor[(1, 182), float32] */;
  %858 = @func_8088(%856, %857) /* ty=(Tensor[(11, 5, 14), float64], Tensor[(5, 3, 15), float32], Tensor[(225), float64], Tensor[(1, 182), float32]) */;
  %859 = greater(%852, %853) /* ty=Tensor[(4, 15, 13), bool] */;
  %860 = %858.3;
  %861 = @func_5155() /* ty=Tensor[(225), int32] */;
  (%859, %860, meta[relay.Constant][44] /* ty=Tensor[(7, 110), float64] */, meta[relay.Constant][45] /* ty=Tensor[(182), float32] */, %861)
}

def @func_12083() -> (Tensor[(7, ?, 13), int16], Tensor[(7, 1, 13), float64]) {
  %862 = @func_4429() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(7, 2, 13), bool]) */;
  %863 = %862.0;
  %864 = @func_10061() /* ty=Tensor[(7, 1, 13), float64] */;
  (%863, %864)
}

def @func_4169() -> (Tensor[(7, 1, 13), float64], Tensor[(225), int32], Tensor[(5, 3, 15), float32]) {
  %865 = cast(meta[relay.Constant][46] /* ty=Tensor[(225), int32] */, dtype="int32") /* ty=Tensor[(225), int32] */;
  %866 = reshape(%865, newshape=[5, 3, 15]) /* ty=Tensor[(5, 3, 15), int32] */;
  %867 = @func_2159(%866) /* ty=Tensor[(5, 3, 15), int32] */;
  %868 = cast(%867, dtype="float32") /* ty=Tensor[(5, 3, 15), float32] */;
  %869 = @func_3901() /* ty=Tensor[(7, 1, 13), float64] */;
  %870 = sin(%868) /* ty=Tensor[(5, 3, 15), float32] */;
  (%869, meta[relay.Constant][46] /* ty=Tensor[(225), int32] */, %870)
}

def @func_12290() -> (Tensor[(324), float64],) {
  %871 = @func_9363() /* ty=(Tensor[(324), float64],) */;
  %872 = %871.0;
  (%872,)
}

def @func_13939() -> (Tensor[(7, 1, 13), float64], Tensor[(225), int32]) {
  %873 = @func_11406() /* ty=Tensor[(7, 1, 13), float64] */;
  %874 = @func_13441() /* ty=Tensor[(225), int32] */;
  (%873, %874)
}

def @func_16019(%var_16014: Tensor[(1, 4, 2), bool]) -> (Tensor[(8, 4, 2), bool],) {
  %875 = cast(%var_16014, dtype="bool") /* ty=Tensor[(1, 4, 2), bool] */;
  %876 = cast(meta[relay.Constant][47] /* ty=Tensor[(8, 4, 2), bool] */, dtype="bool") /* ty=Tensor[(8, 4, 2), bool] */;
  %877 = logical_or(%875, %876) /* ty=Tensor[(8, 4, 2), bool] */;
  (%877,)
}

def @func_15735() -> (Tensor[(7, ?, 13), uint32],) {
  %878 = @func_15586() /* ty=Tensor[(7, ?, 13), uint32] */;
  (%878,)
}

def @func_15119(%var_15108: Tensor[(7, 4, 13), float64]) -> (Tensor[(7, 4, 13), bool], Tensor[(7, 1, 13), float64]) {
  %879 = @func_10422() /* ty=Tensor[(7, 1, 13), float64] */;
  %880 = cast(%879, dtype="bool") /* ty=Tensor[(7, 1, 13), bool] */;
  %881 = cast(%var_15108, dtype="bool") /* ty=Tensor[(7, 4, 13), bool] */;
  %882 = @func_5891() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(7, 1, 13), float64]) */;
  %883 = logical_and(%880, %881) /* ty=Tensor[(7, 4, 13), bool] */;
  %884 = %882.1;
  (%883, %884)
}

def @func_8411() -> (Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) {
  %885 = @func_7740() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %886 = @func_5808() /* ty=Tensor[(7, 1, 13), float64] */;
  %887 = %885.0;
  (%886, %887)
}

def @func_12339() -> (Tensor[(7, 1, 13), float64],) {
  %888 = @func_4364() /* ty=Tensor[(7, 1, 13), float64] */;
  (%888,)
}

def @func_9113(%var_9092: Tensor[(260), float64]) -> (Tensor[(225), int32], Tensor[(13, 4, 5), float64], Tensor[(260), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) {
  %889 = cast(%var_9092, dtype="float64") /* ty=Tensor[(260), float64] */;
  %890 = cast(%var_9092, dtype="float64") /* ty=Tensor[(260), float64] */;
  %891 = reshape(%889, newshape=[13, 4, 5]) /* ty=Tensor[(13, 4, 5), float64] */;
  %892 = reshape(%890, newshape=[13, 4, 5]) /* ty=Tensor[(13, 4, 5), float64] */;
  %893 = @func_1470(%891, %892) /* ty=(Tensor[(13, 4, 5), float64], Tensor[(13, 4, 5), float64]) */;
  %894 = @func_5016() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(90, 20), int8], Tensor[(225), int32], Tensor[(1800), int8], Tensor[(7, 1, 13), float64]) */;
  %895 = @func_7046() /* ty=Tensor[(225), int32] */;
  %896 = %893.1;
  %897 = @func_8618() /* ty=Tensor[(7, 1, 13), float64] */;
  %898 = %894.0;
  (%895, %896, %var_9092, %897, %898)
}

def @func_6006() -> Tensor[(7, 1, 13), float64] {
  %899 = @func_4886() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %899.0
}

def @func_6440(%var_6435: Tensor[(14, 12, 3), float64]) -> (Tensor[(14, 12, 3), float64],) {
  %900 = cast(%var_6435, dtype="float64") /* ty=Tensor[(14, 12, 3), float64] */;
  %901 = log2(%900) /* ty=Tensor[(14, 12, 3), float64] */;
  (%901,)
}

def @func_13995() -> Tensor[(7, 1, 13), float64] {
  %902 = @func_4206() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %902.0
}

def @func_6184() -> (Tensor[(7, ?, 13), int16], Tensor[(5, 45), int32], Tensor[(324), float64]) {
  %903 = cast(meta[relay.Constant][48] /* ty=Tensor[(324), float64] */, dtype="float64") /* ty=Tensor[(324), float64] */;
  %904 = reshape(%903, newshape=[324]) /* ty=Tensor[(324), float64] */;
  %905 = @func_4568(%904) /* ty=(Tensor[(1800), int8], Tensor[(5, 3, 15), int32], Tensor[(208), float64], Tensor[(5, 45), int32], Tensor[(324), float64]) */;
  %906 = @func_4767() /* ty=Tensor[(7, ?, 13), int16] */;
  %907 = %905.3;
  (%906, %907, meta[relay.Constant][48] /* ty=Tensor[(324), float64] */)
}

def @func_5682(%var_5656: Tensor[(7, 1, 13), float64]) -> (Tensor[(7, ?, 13), bool], Tensor[(7, 1, 13), float64]) {
  %908 = @func_5279() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(5, 3, 15), float32], Tensor[(504), float32]) */;
  %909 = %908.0;
  %910 = cast(%var_5656, dtype="bool") /* ty=Tensor[(7, 1, 13), bool] */;
  %911 = shape_of(%909, dtype="int32") /* ty=Tensor[(3), int32] */;
  %912 = cast(%909, dtype="bool") /* ty=Tensor[(7, 1, 13), bool] */;
  %913 = dyn.reshape(%910, %911, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %914 = @func_5538() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) */;
  %915 = logical_or(%912, %913) /* ty=Tensor[(7, ?, 13), bool] */;
  %916 = %914.1;
  (%915, %916)
}

def @func_13441() -> Tensor[(225), int32] {
  %917 = @func_10931() /* ty=(Tensor[(225), int32],) */;
  %917.0
}

def @func_7946() -> (Tensor[(3, 14, 12), float64],) {
  %918 = @func_4497() /* ty=Tensor[(3, 14, 12), float32] */;
  %919 = cast(%918, dtype="float64") /* ty=Tensor[(3, 14, 12), float64] */;
  %920 = sqrt(%919) /* ty=Tensor[(3, 14, 12), float64] */;
  (%920,)
}

def @func_8973() -> Tensor[(7, 1, 13), float64] {
  %921 = @func_8762() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) */;
  %921.0
}

def @func_7437() -> (Tensor[(1, 1, 15), uint8], Tensor[(15), uint8], Tensor[(225), int32], Tensor[(225), int32], Tensor[(7, ?, 13), uint32], Tensor[(7, 1, 13), float64]) {
  %922 = cast(meta[relay.Constant][49] /* ty=Tensor[(15), uint8] */, dtype="uint8") /* ty=Tensor[(15), uint8] */;
  %923 = reshape(%922, newshape=[1, 1, 15]) /* ty=Tensor[(1, 1, 15), uint8] */;
  %924 = @func_4125(%923) /* ty=(Tensor[(1, 1, 15), uint8],) */;
  %925 = cast(meta[relay.Constant][50] /* ty=Tensor[(225), int32] */, dtype="int32") /* ty=Tensor[(225), int32] */;
  %926 = reshape(%925, newshape=[225]) /* ty=Tensor[(225), int32] */;
  %927 = @func_6508(%926) /* ty=(Tensor[(7, 1, 13), float64], Tensor[(5, 3, 15), int32], Tensor[(225), int32]) */;
  %928 = @func_7155() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %929 = %928.0;
  %930 = @func_4292() /* ty=Tensor[(7, 1, 13), float64] */;
  %931 = cast(%930, dtype="uint32") /* ty=Tensor[(7, 1, 13), uint32] */;
  %932 = shape_of(%929, dtype="int32") /* ty=Tensor[(3), int32] */;
  %933 = cast(%929, dtype="uint32") /* ty=Tensor[(7, 1, 13), uint32] */;
  %934 = dyn.reshape(%931, %932, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %935 = @func_6094() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) */;
  %936 = %924.0;
  %937 = %927.2;
  %938 = bitwise_or(%933, %934) /* ty=Tensor[(7, ?, 13), uint32] */;
  %939 = %935.2;
  (%936, meta[relay.Constant][49] /* ty=Tensor[(15), uint8] */, %937, meta[relay.Constant][50] /* ty=Tensor[(225), int32] */, %938, %939)
}

def @func_5808() -> Tensor[(7, 1, 13), float64] {
  @func_4292() /* ty=Tensor[(7, 1, 13), float64] */
}

def @func_4497() -> Tensor[(3, 14, 12), float32] {
  %940 = @func_3816() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(3, 14, 12), float32], Tensor[(504), float32], Tensor[(1800), int8]) */;
  %940.1
}

def @func_1470(%var_1427: Tensor[(13, 4, 5), float64], %var_1428: Tensor[(13, 4, 5), float64]) -> (Tensor[(13, 4, 5), float64], Tensor[(13, 4, 5), float64]) {
  %941 = cast(%var_1428, dtype="float64") /* ty=Tensor[(13, 4, 5), float64] */;
  %942 = shape_of(%var_1427, dtype="int32") /* ty=Tensor[(3), int32] */;
  %943 = cast(%var_1427, dtype="float64") /* ty=Tensor[(13, 4, 5), float64] */;
  %944 = dyn.reshape(%941, %942, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %945 = cast(%var_1428, dtype="float64") /* ty=Tensor[(13, 4, 5), float64] */;
  %946 = floor_divide(%943, %944) /* ty=Tensor[(13, 4, 5), float64] */;
  %947 = erf(%945) /* ty=Tensor[(13, 4, 5), float64] */;
  (%946, %947)
}

def @func_5740() -> Tensor[(7, 1, 13), float64] {
  @func_3917() /* ty=Tensor[(7, 1, 13), float64] */
}

def @func_5538() -> (Tensor[(7, ?, 13), int16], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) {
  %948 = @func_4886() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %949 = @func_3776() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %950 = @func_4767() /* ty=Tensor[(7, ?, 13), int16] */;
  %951 = %948.0;
  %952 = %949.0;
  (%950, %951, %952)
}

def @func_12333() -> (Tensor[(13, 4, 5), float64], Tensor[(7, 1, 13), float64]) {
  %953 = @func_11826() /* ty=(Tensor[(13, 4, 5), float64],) */;
  %954 = %953.0;
  %955 = @func_10339() /* ty=Tensor[(7, 1, 13), float64] */;
  (%954, %955)
}

def @func_8269(%var_8236: Tensor[(225), float32]) -> (Tensor[(7, 1, 13), float64], Tensor[(5, 3, 15), int64], Tensor[(225), float32], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(7, ?, 13), bool]) {
  %956 = @func_7740() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %957 = cast(%var_8236, dtype="float32") /* ty=Tensor[(225), float32] */;
  %958 = reshape(%957, newshape=[5, 3, 15]) /* ty=Tensor[(5, 3, 15), float32] */;
  %959 = @func_8212(%958) /* ty=(Tensor[(7, 1, 13), float64], Tensor[(5, 3, 15), int64]) */;
  %960 = @func_5391() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %961 = %956.0;
  %962 = cast(%961, dtype="float64") /* ty=Tensor[(7, 1, 13), float64] */;
  %963 = reshape(%962, newshape=[7, 1, 13]) /* ty=Tensor[(7, 1, 13), float64] */;
  %964 = @func_5682(%963) /* ty=(Tensor[(7, ?, 13), bool], Tensor[(7, 1, 13), float64]) */;
  %965 = %959.1;
  %966 = %960.0;
  %967 = @func_3901() /* ty=Tensor[(7, 1, 13), float64] */;
  %968 = %964.0;
  (%961, %965, %var_8236, %966, %967, %968)
}

def @func_15153() -> Tensor[(7, 1, 13), float64] {
  %969 = @func_10306() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %969.0
}

def @func_4931(%var_4927: Tensor[(504), float32]) -> (Tensor[(225), int32], Tensor[(1, 1, 15), uint8], Tensor[(15), uint8], Tensor[(15, 12, 10), int8], Tensor[(504), float32], Tensor[(1800), int8]) {
  %970 = cast(meta[relay.Constant][51] /* ty=Tensor[(15), uint8] */, dtype="uint8") /* ty=Tensor[(15), uint8] */;
  %971 = reshape(%970, newshape=[1, 1, 15]) /* ty=Tensor[(1, 1, 15), uint8] */;
  %972 = @func_4125(%971) /* ty=(Tensor[(1, 1, 15), uint8],) */;
  %973 = cast(%var_4927, dtype="float32") /* ty=Tensor[(504), float32] */;
  %974 = cast(meta[relay.Constant][52] /* ty=Tensor[(1800), int8] */, dtype="int8") /* ty=Tensor[(1800), int8] */;
  %975 = reshape(%973, newshape=[3, 14, 12]) /* ty=Tensor[(3, 14, 12), float32] */;
  %976 = reshape(%974, newshape=[1800]) /* ty=Tensor[(1800), int8] */;
  %977 = @func_2958(%975, %976) /* ty=(Tensor[(3, 14, 12), float32], Tensor[(15, 12, 10), int8], Tensor[(1800), int8], Tensor[(13, 4, 5), float64]) */;
  %978 = @func_4538() /* ty=Tensor[(225), int32] */;
  %979 = %972.0;
  %980 = %977.1;
  (%978, %979, meta[relay.Constant][51] /* ty=Tensor[(15), uint8] */, %980, %var_4927, meta[relay.Constant][52] /* ty=Tensor[(1800), int8] */)
}

def @func_12674() -> (Tensor[(7, ?, 13), int16],) {
  %981 = @func_9243() /* ty=(Tensor[(7, ?, 13), int16],) */;
  %982 = %981.0;
  (%982,)
}

def @func_8807() -> Tensor[(7, 1, 13), float64] {
  %983 = @func_8173() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %983.0
}

def @func_8212(%var_8205: Tensor[(5, 3, 15), float32]) -> (Tensor[(7, 1, 13), float64], Tensor[(5, 3, 15), int64]) {
  %984 = @func_7740() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %985 = @func_4316() /* ty=(Tensor[(5, 3, 15), float32],) */;
  %986 = %985.0;
  %987 = cast(%var_8205, dtype="int64") /* ty=Tensor[(5, 3, 15), int64] */;
  %988 = shape_of(%986, dtype="int32") /* ty=Tensor[(3), int32] */;
  %989 = cast(%986, dtype="int64") /* ty=Tensor[(5, 3, 15), int64] */;
  %990 = dyn.reshape(%987, %988, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %991 = %984.0;
  %992 = logical_xor(%989, %990) /* ty=Tensor[(5, 3, 15), int64] */;
  (%991, %992)
}

def @func_17070() -> (Tensor[(7, 1, 13), float64], Tensor[(7, ?, 13), int16]) {
  %993 = @func_13694() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(1, 1, 15), uint8], Tensor[(7, 1, 13), float64]) */;
  %994 = @func_6698() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(225), int32]) */;
  %995 = %993.2;
  %996 = %994.0;
  (%995, %996)
}

def @func_13132() -> (Tensor[(7, ?, 13), int16], Tensor[(1, 182), float32], Tensor[(770, 182), int64], Tensor[(225), int32], Tensor[(7, 2, 13), float32]) {
  %997 = @func_7002() /* ty=(Tensor[(7, ?, 13), int16],) */;
  %998 = cast(meta[relay.Constant][53] /* ty=Tensor[(770, 1), float64] */, dtype="float64") /* ty=Tensor[(770, 1), float64] */;
  %999 = cast(meta[relay.Constant][54] /* ty=Tensor[(182), float32] */, dtype="float32") /* ty=Tensor[(182), float32] */;
  %1000 = reshape(%998, newshape=[11, 5, 14]) /* ty=Tensor[(11, 5, 14), float64] */;
  %1001 = reshape(%999, newshape=[1, 182]) /* ty=Tensor[(1, 182), float32] */;
  %1002 = @func_8088(%1000, %1001) /* ty=(Tensor[(11, 5, 14), float64], Tensor[(5, 3, 15), float32], Tensor[(225), float64], Tensor[(1, 182), float32]) */;
  %1003 = cast(meta[relay.Constant][54] /* ty=Tensor[(182), float32] */, dtype="int64") /* ty=Tensor[(182), int64] */;
  %1004 = cast(meta[relay.Constant][53] /* ty=Tensor[(770, 1), float64] */, dtype="int64") /* ty=Tensor[(770, 1), int64] */;
  %1005 = @func_10931() /* ty=(Tensor[(225), int32],) */;
  %1006 = @func_10516() /* ty=(Tensor[(9, 12, 3), float64], Tensor[(9, 36), float64], Tensor[(7, 2, 13), float32]) */;
  %1007 = %997.0;
  %1008 = %1002.3;
  %1009 = bitwise_and(%1003, %1004) /* ty=Tensor[(770, 182), int64] */;
  %1010 = %1005.0;
  %1011 = %1006.2;
  (%1007, %1008, %1009, %1010, %1011)
}

def @func_16636(%var_16591: Tensor[(405), float32], %var_16630: Tensor[(7, 4, 13), float64]) -> (Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(3, 15, 9), float32], Tensor[(405), float32], Tensor[(7, ?, 13), int16], Tensor[(1, 1, 15), uint8], Tensor[(90, 20), float64], Tensor[(7, 4, 13), uint64]) {
  %1012 = @func_3816() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(3, 14, 12), float32], Tensor[(504), float32], Tensor[(1800), int8]) */;
  %1013 = @func_6582() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) */;
  %1014 = cast(%var_16591, dtype="float32") /* ty=Tensor[(405), float32] */;
  %1015 = reshape(%1014, newshape=[3, 15, 9]) /* ty=Tensor[(3, 15, 9), float32] */;
  %1016 = @func_3641(%1015) /* ty=(Tensor[(3, 15, 9), float32],) */;
  %1017 = @func_5986() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, ?, 13), int16], Tensor[(7, 1, 13), float32]) */;
  %1018 = %1017.0;
  %1019 = cast(%1018, dtype="uint64") /* ty=Tensor[(7, 1, 13), uint64] */;
  %1020 = cast(%var_16630, dtype="uint64") /* ty=Tensor[(7, 4, 13), uint64] */;
  %1021 = %1012.0;
  %1022 = %1013.0;
  %1023 = @func_15143() /* ty=Tensor[(7, 1, 13), float64] */;
  %1024 = %1016.0;
  %1025 = @func_11583() /* ty=Tensor[(7, ?, 13), int16] */;
  %1026 = @func_13534() /* ty=Tensor[(1, 1, 15), uint8] */;
  %1027 = @func_12176() /* ty=Tensor[(90, 20), float64] */;
  %1028 = subtract(%1019, %1020) /* ty=Tensor[(7, 4, 13), uint64] */;
  (%1021, %1022, %1023, %1024, %var_16591, %1025, %1026, %1027, %1028)
}

def @func_7485(%var_7473: Tensor[(360), int8], %var_7474: Tensor[(3, 135), float32]) -> (Tensor[(7, ?, 13), int16], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(225), int32], Tensor[(12, 10, 3), bool], Tensor[(360), int8], Tensor[(3, 135), float32]) {
  %1029 = @func_4429() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(7, 2, 13), bool]) */;
  %1030 = @func_5317() /* ty=(Tensor[(5, 3, 15), float32], Tensor[(7, 1, 13), float64]) */;
  %1031 = @func_3816() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(3, 14, 12), float32], Tensor[(504), float32], Tensor[(1800), int8]) */;
  %1032 = cast(%var_7473, dtype="int8") /* ty=Tensor[(360), int8] */;
  %1033 = cast(%var_7474, dtype="float32") /* ty=Tensor[(3, 135), float32] */;
  %1034 = reshape(%1032, newshape=[360]) /* ty=Tensor[(360), int8] */;
  %1035 = reshape(%1033, newshape=[405]) /* ty=Tensor[(405), float32] */;
  %1036 = @func_5631(%1034, %1035) /* ty=(Tensor[(225), int32], Tensor[(12, 10, 3), bool], Tensor[(360), int8], Tensor[(3, 15, 9), float32], Tensor[(405), float32]) */;
  %1037 = %1029.0;
  %1038 = %1030.1;
  %1039 = %1031.0;
  %1040 = @func_5155() /* ty=Tensor[(225), int32] */;
  %1041 = %1036.1;
  (%1037, %1038, %1039, %1040, %1041, %var_7473, %var_7474)
}

def @func_4024(%var_3984: Tensor[(12, 10, 3), int8], %var_3985: Tensor[(12, 10, 3), int8]) -> (Tensor[(12, 10, 3), bool], Tensor[(13, 4, 5), float64], Tensor[(900, 2), int8]) {
  %1042 = cast(%var_3985, dtype="bool") /* ty=Tensor[(12, 10, 3), bool] */;
  %1043 = shape_of(%var_3984, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1044 = cast(%var_3984, dtype="bool") /* ty=Tensor[(12, 10, 3), bool] */;
  %1045 = dyn.reshape(%1042, %1043, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1046 = cast(meta[relay.Constant][55] /* ty=Tensor[(900, 2), int8] */, dtype="int8") /* ty=Tensor[(900, 2), int8] */;
  %1047 = reshape(%1046, newshape=[15, 12, 10]) /* ty=Tensor[(15, 12, 10), int8] */;
  %1048 = @func_1874(%1047) /* ty=(Tensor[(15, 12, 10), int8], Tensor[(13, 4, 5), float64], Tensor[(260), float64]) */;
  %1049 = equal(%1044, %1045) /* ty=Tensor[(12, 10, 3), bool] */;
  %1050 = %1048.1;
  (%1049, %1050, meta[relay.Constant][55] /* ty=Tensor[(900, 2), int8] */)
}

def @func_15450() -> (Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) {
  %1051 = @func_14135() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %1052 = %1051.0;
  %1053 = @func_9222() /* ty=Tensor[(7, 1, 13), float64] */;
  (%1052, %1053)
}

def @func_15949() -> (Tensor[(3, 14, 12), float32], Tensor[(7, 1, 13), float64], Tensor[(14, 12, 3), float64], Tensor[(7, 1, 13), float64]) {
  %1054 = @func_4497() /* ty=Tensor[(3, 14, 12), float32] */;
  %1055 = cast(%1054, dtype="float64") /* ty=Tensor[(3, 14, 12), float64] */;
  %1056 = reshape(%1055, newshape=[14, 12, 3]) /* ty=Tensor[(14, 12, 3), float64] */;
  %1057 = @func_6440(%1056) /* ty=(Tensor[(14, 12, 3), float64],) */;
  %1058 = @func_11406() /* ty=Tensor[(7, 1, 13), float64] */;
  %1059 = %1057.0;
  %1060 = @func_14897() /* ty=Tensor[(7, 1, 13), float64] */;
  (%1054, %1058, %1059, %1060)
}

def @func_11406() -> Tensor[(7, 1, 13), float64] {
  %1061 = @func_4886() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %1061.0
}

def @func_14704() -> (Tensor[(1800), int8],) {
  %1062 = @func_11552() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(1800), int8], Tensor[(7, 1, 13), float64]) */;
  %1063 = %1062.1;
  (%1063,)
}

def @func_15143() -> Tensor[(7, 1, 13), float64] {
  @func_8163() /* ty=Tensor[(7, 1, 13), float64] */
}

def @func_11244() -> (Tensor[(7, 1, 13), float64],) {
  %1064 = @func_10609() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %1065 = %1064.0;
  (%1065,)
}

def @func_17579() -> (Tensor[(5, 45), int32], Tensor[(7, 1, 13), float64]) {
  %1066 = @func_6184() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(5, 45), int32], Tensor[(324), float64]) */;
  %1067 = @func_15949() /* ty=(Tensor[(3, 14, 12), float32], Tensor[(7, 1, 13), float64], Tensor[(14, 12, 3), float64], Tensor[(7, 1, 13), float64]) */;
  %1068 = %1066.1;
  %1069 = %1067.3;
  (%1068, %1069)
}

def @func_7602() -> (Tensor[(7, 1, 13), float64], Tensor[(324), float64]) {
  %1070 = @func_6184() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(5, 45), int32], Tensor[(324), float64]) */;
  %1071 = @func_5784() /* ty=Tensor[(7, 1, 13), float64] */;
  %1072 = %1070.2;
  (%1071, %1072)
}

def @func_11519() -> (Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(1, 1, 15), uint8], Tensor[(15), uint8]) {
  %1073 = @func_10287() /* ty=(Tensor[(225), int32], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) */;
  %1074 = @func_7602() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(324), float64]) */;
  %1075 = cast(meta[relay.Constant][56] /* ty=Tensor[(15), uint8] */, dtype="uint8") /* ty=Tensor[(15), uint8] */;
  %1076 = reshape(%1075, newshape=[1, 1, 15]) /* ty=Tensor[(1, 1, 15), uint8] */;
  %1077 = @func_4125(%1076) /* ty=(Tensor[(1, 1, 15), uint8],) */;
  %1078 = %1073.1;
  %1079 = %1074.0;
  %1080 = %1077.0;
  (%1078, %1079, %1080, meta[relay.Constant][56] /* ty=Tensor[(15), uint8] */)
}

def @func_10189() -> (Tensor[(7, ?, 13), uint32], Tensor[(5, 3, 15), int32], Tensor[(9, 36), float64]) {
  %1081 = @func_7437() /* ty=(Tensor[(1, 1, 15), uint8], Tensor[(15), uint8], Tensor[(225), int32], Tensor[(225), int32], Tensor[(7, ?, 13), uint32], Tensor[(7, 1, 13), float64]) */;
  %1082 = cast(meta[relay.Constant][57] /* ty=Tensor[(9, 36), float64] */, dtype="float64") /* ty=Tensor[(9, 36), float64] */;
  %1083 = reshape(%1082, newshape=[324]) /* ty=Tensor[(324), float64] */;
  %1084 = @func_4568(%1083) /* ty=(Tensor[(1800), int8], Tensor[(5, 3, 15), int32], Tensor[(208), float64], Tensor[(5, 45), int32], Tensor[(324), float64]) */;
  %1085 = %1081.4;
  %1086 = %1084.1;
  (%1085, %1086, meta[relay.Constant][57] /* ty=Tensor[(9, 36), float64] */)
}

def @func_13181() -> (Tensor[(90, 20), float64], Tensor[(225), int32]) {
  %1087 = @func_6826() /* ty=(Tensor[(225), int32], Tensor[(7, 2, 13), float32]) */;
  %1088 = @func_12176() /* ty=Tensor[(90, 20), float64] */;
  %1089 = %1087.0;
  (%1088, %1089)
}

def @func_2273(%var_2180: Tensor[(2, 13, 8), float64], %var_2193: Tensor[(225), int32], %var_2201: Tensor[(324), float64]) -> (Tensor[(5, 3, 15), int32], Tensor[(225), int32], Tensor[(9, 12, 3), float64], Tensor[(324), float64], Tensor[(9, 12, 3), float64], Tensor[(2, 13, 8), float64], Tensor[(9, 12, 3), float64]) {
  %1090 = cast(%var_2193, dtype="int32") /* ty=Tensor[(225), int32] */;
  %1091 = reshape(%1090, newshape=[5, 3, 15]) /* ty=Tensor[(5, 3, 15), int32] */;
  %1092 = cast(%var_2201, dtype="float64") /* ty=Tensor[(324), float64] */;
  %1093 = reshape(%1092, newshape=[9, 12, 3]) /* ty=Tensor[(9, 12, 3), float64] */;
  %1094 = @func_656(%1093) /* ty=(Tensor[(9, 12, 3), float64],) */;
  %1095 = cast(%var_2201, dtype="float64") /* ty=Tensor[(324), float64] */;
  %1096 = reshape(%1095, newshape=[9, 12, 3]) /* ty=Tensor[(9, 12, 3), float64] */;
  %1097 = @func_656(%1096) /* ty=(Tensor[(9, 12, 3), float64],) */;
  %1098 = cast(%var_2180, dtype="float64") /* ty=Tensor[(2, 13, 8), float64] */;
  %1099 = atanh(%1098) /* ty=Tensor[(2, 13, 8), float64] */;
  %1100 = cast(%1099, dtype="float64") /* ty=Tensor[(2, 13, 8), float64] */;
  %1101 = %1094.0;
  %1102 = cast(%1101, dtype="float64") /* ty=Tensor[(9, 12, 3), float64] */;
  %1103 = reshape(%1102, newshape=[9, 12, 3]) /* ty=Tensor[(9, 12, 3), float64] */;
  %1104 = @func_656(%1103) /* ty=(Tensor[(9, 12, 3), float64],) */;
  %1105 = @func_2159(%1091) /* ty=Tensor[(5, 3, 15), int32] */;
  %1106 = %1097.0;
  %1107 = sqrt(%1100) /* ty=Tensor[(2, 13, 8), float64] */;
  %1108 = %1104.0;
  (%1105, %var_2193, %1101, %var_2201, %1106, %1107, %1108)
}

def @func_11552() -> (Tensor[(7, 1, 13), float64], Tensor[(1800), int8], Tensor[(7, 1, 13), float64]) {
  %1109 = @func_4712() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %1110 = @func_6776() /* ty=(Tensor[(1800), int8],) */;
  %1111 = %1109.0;
  %1112 = %1110.0;
  %1113 = @func_5740() /* ty=Tensor[(7, 1, 13), float64] */;
  (%1111, %1112, %1113)
}

def @func_5093() -> (Tensor[(7, 1, 13), float64],) {
  %1114 = @func_4886() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %1115 = %1114.0;
  (%1115,)
}

def @func_11742(%var_11713: Tensor[(7, 2, 13), float64], %var_11725: Tensor[(7, 13, 13), float64]) -> (Tensor[(7, 2, 13), int16], Tensor[(7, 13, 13), uint16], Tensor[(7, 1, 13), float64]) {
  %1116 = @func_8534() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %1117 = %1116.0;
  %1118 = cast(%1117, dtype="int16") /* ty=Tensor[(7, 1, 13), int16] */;
  %1119 = cast(%var_11713, dtype="int16") /* ty=Tensor[(7, 2, 13), int16] */;
  %1120 = cast(%1117, dtype="uint16") /* ty=Tensor[(7, 1, 13), uint16] */;
  %1121 = cast(%var_11725, dtype="uint16") /* ty=Tensor[(7, 13, 13), uint16] */;
  %1122 = right_shift(%1118, %1119) /* ty=Tensor[(7, 2, 13), int16] */;
  %1123 = maximum(%1120, %1121) /* ty=Tensor[(7, 13, 13), uint16] */;
  %1124 = @func_4364() /* ty=Tensor[(7, 1, 13), float64] */;
  (%1122, %1123, %1124)
}

def @func_4767() -> Tensor[(7, ?, 13), int16] {
  %1125 = @func_4429() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(7, 2, 13), bool]) */;
  %1125.0
}

def @func_6698() -> (Tensor[(7, ?, 13), int16], Tensor[(225), int32]) {
  %1126 = @func_6184() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(5, 45), int32], Tensor[(324), float64]) */;
  %1127 = %1126.0;
  %1128 = @func_4538() /* ty=Tensor[(225), int32] */;
  (%1127, %1128)
}

def @func_2159(%var_2153: Tensor[(5, 3, 15), int32]) -> Tensor[(5, 3, 15), int32] {
  %1129 = cast(meta[relay.Constant][58] /* ty=Tensor[(5, 3, 15), int32] */, dtype="int32") /* ty=Tensor[(5, 3, 15), int32] */;
  %1130 = shape_of(%var_2153, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1131 = cast(%var_2153, dtype="int32") /* ty=Tensor[(5, 3, 15), int32] */;
  %1132 = dyn.reshape(%1129, %1130, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  bitwise_or(%1131, %1132) /* ty=Tensor[(5, 3, 15), int32] */
}

def @func_7077() -> (Tensor[(7, 1, 13), float64],) {
  %1133 = @func_3776() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %1134 = %1133.0;
  (%1134,)
}

def @func_16876() -> (Tensor[(7, 1, 13), float64], Tensor[(324), float64], Tensor[(225), int32]) {
  %1135 = cast(meta[relay.Constant][59] /* ty=Tensor[(324), float64] */, dtype="float64") /* ty=Tensor[(324), float64] */;
  %1136 = reshape(%1135, newshape=[324]) /* ty=Tensor[(324), float64] */;
  %1137 = @func_4568(%1136) /* ty=(Tensor[(1800), int8], Tensor[(5, 3, 15), int32], Tensor[(208), float64], Tensor[(5, 45), int32], Tensor[(324), float64]) */;
  %1138 = %1137.4;
  %1139 = cast(%1138, dtype="float64") /* ty=Tensor[(324), float64] */;
  %1140 = shape_of(meta[relay.Constant][59] /* ty=Tensor[(324), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1141 = cast(meta[relay.Constant][59] /* ty=Tensor[(324), float64] */, dtype="float64") /* ty=Tensor[(324), float64] */;
  %1142 = dyn.reshape(%1139, %1140, newshape=[]) /* ty=Tensor[(?), float64] */;
  %1143 = @func_4292() /* ty=Tensor[(7, 1, 13), float64] */;
  %1144 = minimum(%1141, %1142) /* ty=Tensor[(324), float64] */;
  %1145 = @func_12580() /* ty=Tensor[(225), int32] */;
  (%1143, %1144, %1145)
}

def @func_5155() -> Tensor[(225), int32] {
  @func_4662() /* ty=Tensor[(225), int32] */
}

def @func_7002() -> (Tensor[(7, ?, 13), int16],) {
  %1146 = @func_5986() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, ?, 13), int16], Tensor[(7, 1, 13), float32]) */;
  %1147 = %1146.1;
  (%1147,)
}

def @func_11826() -> (Tensor[(13, 4, 5), float64],) {
  %1148 = @func_11370() /* ty=(Tensor[(13, 4, 5), float64],) */;
  %1149 = %1148.0;
  (%1149,)
}

def @func_10931() -> (Tensor[(225), int32],) {
  %1150 = @func_10586() /* ty=(Tensor[(225), int32], Tensor[(13, 4, 5), float64], Tensor[(130, 2), float32]) */;
  %1151 = %1150.0;
  (%1151,)
}

def @func_3978(%var_3936: Tensor[(225), int32], %var_3971: Tensor[(90, 20), int8]) -> (Tensor[(7, 1, 13), float64], Tensor[(225), int32], Tensor[(5, 3, 15), float64], Tensor[(3, 14, 12), float32], Tensor[(504), float32], Tensor[(90, 20), int8]) {
  %1152 = cast(%var_3936, dtype="int32") /* ty=Tensor[(225), int32] */;
  %1153 = reshape(%1152, newshape=[5, 3, 15]) /* ty=Tensor[(5, 3, 15), int32] */;
  %1154 = @func_2159(%1153) /* ty=Tensor[(5, 3, 15), int32] */;
  %1155 = cast(%1154, dtype="float64") /* ty=Tensor[(5, 3, 15), float64] */;
  %1156 = cast(meta[relay.Constant][60] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
  %1157 = cast(%var_3971, dtype="int8") /* ty=Tensor[(90, 20), int8] */;
  %1158 = reshape(%1156, newshape=[3, 14, 12]) /* ty=Tensor[(3, 14, 12), float32] */;
  %1159 = reshape(%1157, newshape=[1800]) /* ty=Tensor[(1800), int8] */;
  %1160 = @func_2958(%1158, %1159) /* ty=(Tensor[(3, 14, 12), float32], Tensor[(15, 12, 10), int8], Tensor[(1800), int8], Tensor[(13, 4, 5), float64]) */;
  %1161 = @func_3917() /* ty=Tensor[(7, 1, 13), float64] */;
  %1162 = atanh(%1155) /* ty=Tensor[(5, 3, 15), float64] */;
  %1163 = %1160.0;
  (%1161, %var_3936, %1162, %1163, meta[relay.Constant][60] /* ty=Tensor[(504), float32] */, %var_3971)
}

def @func_17394() -> (Tensor[(7, ?, 13), uint32], Tensor[(7, 1, 13), float64], Tensor[(405, 1), float32], Tensor[(364), float64]) {
  %1164 = cast(meta[relay.Constant][61] /* ty=Tensor[(405, 1), float32] */, dtype="float32") /* ty=Tensor[(405, 1), float32] */;
  %1165 = cast(meta[relay.Constant][62] /* ty=Tensor[(364), float64] */, dtype="float64") /* ty=Tensor[(364), float64] */;
  %1166 = reshape(%1164, newshape=[405]) /* ty=Tensor[(405), float32] */;
  %1167 = reshape(%1165, newshape=[7, 4, 13]) /* ty=Tensor[(7, 4, 13), float64] */;
  %1168 = @func_16636(%1166, %1167) /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(3, 15, 9), float32], Tensor[(405), float32], Tensor[(7, ?, 13), int16], Tensor[(1, 1, 15), uint8], Tensor[(90, 20), float64], Tensor[(7, 4, 13), uint64]) */;
  %1169 = @func_15586() /* ty=Tensor[(7, ?, 13), uint32] */;
  %1170 = %1168.1;
  (%1169, %1170, meta[relay.Constant][61] /* ty=Tensor[(405, 1), float32] */, meta[relay.Constant][62] /* ty=Tensor[(364), float64] */)
}

def @func_15992() -> (Tensor[(7, 1, 13), float64],) {
  %1171 = @func_9556() /* ty=Tensor[(7, 1, 13), float64] */;
  (%1171,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_14705() -> (Tensor[(1800), int8],) {
  %2 = fn () -> (Tensor[(1800), int8],) {
    %0 = @func_11552() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(1800), int8], Tensor[(7, 1, 13), float64]) */;
    %1 = %0.1;
    (%1,)
  };
  %2() /* ty=(Tensor[(1800), int8],) */
}

def @func_9165() -> Tensor[(7, ?, 13), bool] {
  @func_9163() /* ty=Tensor[(7, ?, 13), bool] */
}

def @func_15510() -> Tensor[(7, ?, 13), int16] {
  @func_15508() /* ty=Tensor[(7, ?, 13), int16] */
}

def @func_14113() -> (Tensor[(7, ?, 13), int16], Tensor[(7, 2, 13), bool]) {
  @func_14111() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(7, 2, 13), bool]) */
}

def @func_4539() -> Tensor[(225), int32] {
  %4 = fn () -> Tensor[(225), int32] {
    %3 = @func_4169() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(225), int32], Tensor[(5, 3, 15), float32]) */;
    %3.1
  };
  %4() /* ty=Tensor[(225), int32] */
}

def @func_13962() -> (Tensor[(7, 1, 13), float64], Tensor[(3, 14, 12), bool], Tensor[(504), float32]) {
  @func_13960() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(3, 14, 12), bool], Tensor[(504), float32]) */
}

def @func_8808() -> Tensor[(7, 1, 13), float64] {
  %6 = fn () -> Tensor[(7, 1, 13), float64] {
    %5 = @func_8173() /* ty=(Tensor[(7, 1, 13), float64],) */;
    %5.0
  };
  %6() /* ty=Tensor[(7, 1, 13), float64] */
}

def @func_11585() -> Tensor[(7, ?, 13), int16] {
  @func_11583() /* ty=Tensor[(7, ?, 13), int16] */
}

def @func_14688(%var_14686: Tensor[(1183), float64]) -> (Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 13, 13), float64], Tensor[(1183), float64]) {
  %7 = cast(%var_14686, dtype="float64") /* ty=Tensor[(1183), float64] */;
  %8 = reshape(%7, newshape=[7, 13, 13]) /* ty=Tensor[(7, 13, 13), float64] */;
  %9 = @func_9731() /* ty=Tensor[(7, 1, 13), float64] */;
  %10 = @func_5808() /* ty=Tensor[(7, 1, 13), float64] */;
  %11 = @func_10686(%8) /* ty=Tensor[(7, 13, 13), float64] */;
  (%9, %10, %11, %var_14686)
}

def @func_16501() -> Tensor[(7, 1, 13), float64] {
  @func_9420() /* ty=Tensor[(7, 1, 13), float64] */
}

def @func_4125(%var_4100: Tensor[(1, 1, 15), uint8]) -> (Tensor[(1, 1, 15), uint8],) {
  %12 = cast(meta[relay.Constant][0] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %13 = cast(%var_4100, dtype="uint8") /* ty=Tensor[(1, 1, 15), uint8] */;
  %14 = subtract(%12, %13) /* ty=Tensor[(1, 1, 15), uint8] */;
  (%14,)
}

def @func_6511(%var_6509: Tensor[(225), int32]) -> (Tensor[(7, 1, 13), float64], Tensor[(5, 3, 15), int32], Tensor[(225), int32]) {
  @func_6508(%var_6509) /* ty=(Tensor[(7, 1, 13), float64], Tensor[(5, 3, 15), int32], Tensor[(225), int32]) */
}

def @func_11519() -> (Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(1, 1, 15), uint8], Tensor[(15), uint8]) {
  %15 = @func_10287() /* ty=(Tensor[(225), int32], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) */;
  %16 = @func_7602() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(324), float64]) */;
  %17 = cast(meta[relay.Constant][1] /* ty=Tensor[(15), uint8] */, dtype="uint8") /* ty=Tensor[(15), uint8] */;
  %18 = reshape(%17, newshape=[1, 1, 15]) /* ty=Tensor[(1, 1, 15), uint8] */;
  %19 = @func_4125(%18) /* ty=(Tensor[(1, 1, 15), uint8],) */;
  %20 = %15.1;
  %21 = %16.0;
  %22 = %19.0;
  (%20, %21, %22, meta[relay.Constant][1] /* ty=Tensor[(15), uint8] */)
}

def @func_7781(%var_7779: Tensor[(2, 13, 7), float32], %var_7780: Tensor[(225), int32]) -> (Tensor[(2, 13, 7), float32], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(225), float64], Tensor[(225), int32]) {
  %31 = fn (%var_7750: Tensor[(2, 13, 7), float32], %var_7776: Tensor[(225), int32]) -> (Tensor[(2, 13, 7), float32], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(225), float64], Tensor[(225), int32]) {
    %23 = cast(%var_7750, dtype="float32") /* ty=Tensor[(2, 13, 7), float32] */;
    %24 = @func_6582() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) */;
    %25 = cast(%var_7776, dtype="int32") /* ty=Tensor[(225), int32] */;
    %26 = reshape(%25, newshape=[225]) /* ty=Tensor[(225), int32] */;
    %27 = sin(%23) /* ty=Tensor[(2, 13, 7), float32] */;
    %28 = %24.0;
    %29 = @func_7586() /* ty=Tensor[(7, 1, 13), float64] */;
    %30 = @func_5470(%26) /* ty=Tensor[(225), float64] */;
    (%27, %28, %29, %30, %var_7776)
  };
  %31(%var_7779, %var_7780) /* ty=(Tensor[(2, 13, 7), float32], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(225), float64], Tensor[(225), int32]) */
}

def @func_5016() -> (Tensor[(7, 1, 13), float64], Tensor[(90, 20), int8], Tensor[(225), int32], Tensor[(1800), int8], Tensor[(7, 1, 13), float64]) {
  %32 = @func_4886() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %33 = cast(meta[relay.Constant][2] /* ty=Tensor[(225), int32] */, dtype="int32") /* ty=Tensor[(225), int32] */;
  %34 = cast(meta[relay.Constant][3] /* ty=Tensor[(1800), int8] */, dtype="int8") /* ty=Tensor[(1800), int8] */;
  %35 = reshape(%33, newshape=[225]) /* ty=Tensor[(225), int32] */;
  %36 = reshape(%34, newshape=[90, 20]) /* ty=Tensor[(90, 20), int8] */;
  %37 = @func_3978(%35, %36) /* ty=(Tensor[(7, 1, 13), float64], Tensor[(225), int32], Tensor[(5, 3, 15), float64], Tensor[(3, 14, 12), float32], Tensor[(504), float32], Tensor[(90, 20), int8]) */;
  %38 = @func_4712() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %39 = %32.0;
  %40 = %37.5;
  %41 = %38.0;
  (%39, %40, meta[relay.Constant][2] /* ty=Tensor[(225), int32] */, meta[relay.Constant][3] /* ty=Tensor[(1800), int8] */, %41)
}

def @func_12896() -> (Tensor[(7, ?, 13), int16],) {
  %42 = @func_9616() /* ty=Tensor[(7, ?, 13), int16] */;
  (%42,)
}

def @func_15144() -> Tensor[(7, 1, 13), float64] {
  %43 = fn () -> Tensor[(7, 1, 13), float64] {
    @func_8163() /* ty=Tensor[(7, 1, 13), float64] */
  };
  %43() /* ty=Tensor[(7, 1, 13), float64] */
}

def @func_14212() -> Tensor[(7, 1, 13), float64] {
  %44 = @func_10306() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %44.0
}

def @func_10801() -> (Tensor[(7, 1, 13), float64],) {
  %45 = @func_9006() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(225), int32], Tensor[(7, 1, 13), float64]) */;
  %46 = %45.0;
  (%46,)
}

def @func_8091(%var_8089: Tensor[(11, 5, 14), float64], %var_8090: Tensor[(1, 182), float32]) -> (Tensor[(11, 5, 14), float64], Tensor[(5, 3, 15), float32], Tensor[(225), float64], Tensor[(1, 182), float32]) {
  %57 = fn (%var_8040: Tensor[(11, 5, 14), float64], %var_8084: Tensor[(1, 182), float32]) -> (Tensor[(11, 5, 14), float64], Tensor[(5, 3, 15), float32], Tensor[(225), float64], Tensor[(1, 182), float32]) {
    %47 = cast(%var_8040, dtype="float64") /* ty=Tensor[(11, 5, 14), float64] */;
    %48 = @func_5279() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(5, 3, 15), float32], Tensor[(504), float32]) */;
    %49 = cast(%var_8084, dtype="float32") /* ty=Tensor[(1, 182), float32] */;
    %50 = %48.1;
    %51 = cast(%50, dtype="int32") /* ty=Tensor[(5, 3, 15), int32] */;
    %52 = reshape(%49, newshape=[2, 13, 7]) /* ty=Tensor[(2, 13, 7), float32] */;
    %53 = reshape(%51, newshape=[225]) /* ty=Tensor[(225), int32] */;
    %54 = @func_7778(%52, %53) /* ty=(Tensor[(2, 13, 7), float32], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(225), float64], Tensor[(225), int32]) */;
    %55 = atan(%47) /* ty=Tensor[(11, 5, 14), float64] */;
    %56 = %54.3;
    (%55, %50, %56, %var_8084)
  };
  %57(%var_8089, %var_8090) /* ty=(Tensor[(11, 5, 14), float64], Tensor[(5, 3, 15), float32], Tensor[(225), float64], Tensor[(1, 182), float32]) */
}

def @func_5018() -> (Tensor[(7, 1, 13), float64], Tensor[(90, 20), int8], Tensor[(225), int32], Tensor[(1800), int8], Tensor[(7, 1, 13), float64]) {
  @func_5016() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(90, 20), int8], Tensor[(225), int32], Tensor[(1800), int8], Tensor[(7, 1, 13), float64]) */
}

def @func_16690() -> (Tensor[(7, 1, 13), float64],) {
  %60 = fn () -> (Tensor[(7, 1, 13), float64],) {
    %58 = @func_7740() /* ty=(Tensor[(7, 1, 13), float64],) */;
    %59 = %58.0;
    (%59,)
  };
  %60() /* ty=(Tensor[(7, 1, 13), float64],) */
}

def @func_3776() -> (Tensor[(7, 1, 13), float64],) {
  %61 = cast(meta[relay.Constant][4] /* ty=Tensor[(7, 1, 13), float64] */, dtype="float64") /* ty=Tensor[(7, 1, 13), float64] */;
  %62 = asinh(%61) /* ty=Tensor[(7, 1, 13), float64] */;
  (%62,)
}

def @func_9115(%var_9114: Tensor[(260), float64]) -> (Tensor[(225), int32], Tensor[(13, 4, 5), float64], Tensor[(260), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) {
  %73 = fn (%var_9092: Tensor[(260), float64]) -> (Tensor[(225), int32], Tensor[(13, 4, 5), float64], Tensor[(260), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) {
    %63 = cast(%var_9092, dtype="float64") /* ty=Tensor[(260), float64] */;
    %64 = cast(%var_9092, dtype="float64") /* ty=Tensor[(260), float64] */;
    %65 = reshape(%63, newshape=[13, 4, 5]) /* ty=Tensor[(13, 4, 5), float64] */;
    %66 = reshape(%64, newshape=[13, 4, 5]) /* ty=Tensor[(13, 4, 5), float64] */;
    %67 = @func_1470(%65, %66) /* ty=(Tensor[(13, 4, 5), float64], Tensor[(13, 4, 5), float64]) */;
    %68 = @func_5016() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(90, 20), int8], Tensor[(225), int32], Tensor[(1800), int8], Tensor[(7, 1, 13), float64]) */;
    %69 = @func_7046() /* ty=Tensor[(225), int32] */;
    %70 = %67.1;
    %71 = @func_8618() /* ty=Tensor[(7, 1, 13), float64] */;
    %72 = %68.0;
    (%69, %70, %var_9092, %71, %72)
  };
  %73(%var_9114) /* ty=(Tensor[(225), int32], Tensor[(13, 4, 5), float64], Tensor[(260), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) */
}

def @func_8412() -> (Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) {
  %77 = fn () -> (Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) {
    %74 = @func_7740() /* ty=(Tensor[(7, 1, 13), float64],) */;
    %75 = @func_5808() /* ty=Tensor[(7, 1, 13), float64] */;
    %76 = %74.0;
    (%75, %76)
  };
  %77() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) */
}

def @func_12270(%var_12268: Tensor[(1, 6, 13), uint8], %var_12269: Tensor[(1, 6, 13), uint8]) -> (Tensor[(?, 6, 13), uint8],) {
  %83 = fn (%var_12262: Tensor[(1, 6, 13), uint8], %var_12263: Tensor[(1, 6, 13), uint8]) -> (Tensor[(?, 6, 13), uint8],) {
    %78 = cast(%var_12263, dtype="uint8") /* ty=Tensor[(1, 6, 13), uint8] */;
    %79 = shape_of(%var_12262, dtype="int32") /* ty=Tensor[(3), int32] */;
    %80 = cast(%var_12262, dtype="uint8") /* ty=Tensor[(1, 6, 13), uint8] */;
    %81 = dyn.reshape(%78, %79, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %82 = add(%80, %81) /* ty=Tensor[(?, 6, 13), uint8] */;
    (%82,)
  };
  %83(%var_12268, %var_12269) /* ty=(Tensor[(?, 6, 13), uint8],) */
}

def @func_7603() -> (Tensor[(7, 1, 13), float64], Tensor[(324), float64]) {
  %87 = fn () -> (Tensor[(7, 1, 13), float64], Tensor[(324), float64]) {
    %84 = @func_6184() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(5, 45), int32], Tensor[(324), float64]) */;
    %85 = @func_5784() /* ty=Tensor[(7, 1, 13), float64] */;
    %86 = %84.2;
    (%85, %86)
  };
  %87() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(324), float64]) */
}

def @func_7741() -> (Tensor[(7, 1, 13), float64],) {
  %90 = fn () -> (Tensor[(7, 1, 13), float64],) {
    %88 = @func_5093() /* ty=(Tensor[(7, 1, 13), float64],) */;
    %89 = %88.0;
    (%89,)
  };
  %90() /* ty=(Tensor[(7, 1, 13), float64],) */
}

def @func_13747(%var_13745: Tensor[(14, 12, 15), float64]) -> (Tensor[(14, 12, 15), bool], Tensor[(7, ?, 13), int16], Tensor[(7, 1, 13), float64]) {
  @func_13744(%var_13745) /* ty=(Tensor[(14, 12, 15), bool], Tensor[(7, ?, 13), int16], Tensor[(7, 1, 13), float64]) */
}

def @func_9222() -> Tensor[(7, 1, 13), float64] {
  %91 = @func_5538() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) */;
  %91.1
}

def @func_16878() -> (Tensor[(7, 1, 13), float64], Tensor[(324), float64], Tensor[(225), int32]) {
  @func_16876() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(324), float64], Tensor[(225), int32]) */
}

def @func_17234() -> (Tensor[(7, 1, 13), float64],) {
  %94 = fn () -> (Tensor[(7, 1, 13), float64],) {
    %92 = @func_9006() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(225), int32], Tensor[(7, 1, 13), float64]) */;
    %93 = %92.0;
    (%93,)
  };
  %94() /* ty=(Tensor[(7, 1, 13), float64],) */
}

def @func_5080() -> Tensor[(225), int32] {
  @func_5078() /* ty=Tensor[(225), int32] */
}

def @func_13744(%var_13699: Tensor[(14, 12, 15), float64]) -> (Tensor[(14, 12, 15), bool], Tensor[(7, ?, 13), int16], Tensor[(7, 1, 13), float64]) {
  %95 = cast(%var_13699, dtype="float64") /* ty=Tensor[(14, 12, 15), float64] */;
  %96 = log(%95) /* ty=Tensor[(14, 12, 15), float64] */;
  %97 = cast(%96, dtype="float32") /* ty=Tensor[(14, 12, 15), float32] */;
  %98 = cos(%97) /* ty=Tensor[(14, 12, 15), float32] */;
  %99 = cast(%var_13699, dtype="bool") /* ty=Tensor[(14, 12, 15), bool] */;
  %100 = shape_of(%98, dtype="int32") /* ty=Tensor[(3), int32] */;
  %101 = cast(%98, dtype="bool") /* ty=Tensor[(14, 12, 15), bool] */;
  %102 = dyn.reshape(%99, %100, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %103 = @func_5928() /* ty=(Tensor[(7, ?, 13), int16],) */;
  %104 = @func_9444() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %105 = logical_or(%101, %102) /* ty=Tensor[(14, 12, 15), bool] */;
  %106 = %103.0;
  %107 = %104.0;
  (%105, %106, %107)
}

def @func_15588() -> Tensor[(7, ?, 13), uint32] {
  @func_15586() /* ty=Tensor[(7, ?, 13), uint32] */
}

def @func_11046(%var_10989: Tensor[(1, 260), float64]) -> (Tensor[(7, 1, 13), float64], Tensor[(7, ?, 13), bool], Tensor[(7, 2, 13), float32], Tensor[(225), float32], Tensor[(260), float32], Tensor[(?, 260), uint32]) {
  %108 = @func_8762() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) */;
  %109 = cast(meta[relay.Constant][5] /* ty=Tensor[(225), float32] */, dtype="float32") /* ty=Tensor[(225), float32] */;
  %110 = reshape(%109, newshape=[225]) /* ty=Tensor[(225), float32] */;
  %111 = @func_10388(%110) /* ty=(Tensor[(7, 2, 13), float32], Tensor[(7, ?, 13), int16], Tensor[(7, ?, 13), bool], Tensor[(225), float32]) */;
  %112 = cast(%var_10989, dtype="float64") /* ty=Tensor[(1, 260), float64] */;
  %113 = reshape(%112, newshape=[260]) /* ty=Tensor[(260), float64] */;
  %114 = @func_4851(%113) /* ty=(Tensor[(1800), int8], Tensor[(13, 4, 5), float64], Tensor[(260), float64]) */;
  %115 = %114.2;
  %116 = cast(%115, dtype="float32") /* ty=Tensor[(260), float32] */;
  %117 = cast(%115, dtype="float32") /* ty=Tensor[(260), float32] */;
  %118 = shape_of(%var_10989, dtype="int32") /* ty=Tensor[(2), int32] */;
  %119 = cast(%var_10989, dtype="float32") /* ty=Tensor[(1, 260), float32] */;
  %120 = dyn.reshape(%117, %118, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %121 = floor_divide(%119, %120) /* ty=Tensor[(?, 260), float32] */;
  %122 = cast(%121, dtype="float64") /* ty=Tensor[(?, 260), float64] */;
  %123 = atan(%122) /* ty=Tensor[(?, 260), float64] */;
  %124 = cast(%121, dtype="uint32") /* ty=Tensor[(?, 260), uint32] */;
  %125 = shape_of(%123, dtype="int32") /* ty=Tensor[(2), int32] */;
  %126 = cast(%123, dtype="uint32") /* ty=Tensor[(?, 260), uint32] */;
  %127 = dyn.reshape(%124, %125, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %128 = logical_xor(%126, %127) /* ty=Tensor[(?, 260), uint32] */;
  %129 = cast(%121, dtype="uint32") /* ty=Tensor[(?, 260), uint32] */;
  %130 = shape_of(%128, dtype="int32") /* ty=Tensor[(2), int32] */;
  %131 = cast(%128, dtype="uint32") /* ty=Tensor[(?, 260), uint32] */;
  %132 = dyn.reshape(%129, %130, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %133 = %108.1;
  %134 = @func_9163() /* ty=Tensor[(7, ?, 13), bool] */;
  %135 = %111.0;
  %136 = sin(%116) /* ty=Tensor[(260), float32] */;
  %137 = bitwise_or(%131, %132) /* ty=Tensor[(?, 260), uint32] */;
  (%133, %134, %135, meta[relay.Constant][5] /* ty=Tensor[(225), float32] */, %136, %137)
}

def @func_7187() -> (Tensor[(7, 1, 13), float64], Tensor[(225), float64], Tensor[(225), int32]) {
  %142 = fn () -> (Tensor[(7, 1, 13), float64], Tensor[(225), float64], Tensor[(225), int32]) {
    %138 = cast(meta[relay.Constant][6] /* ty=Tensor[(225), int32] */, dtype="int32") /* ty=Tensor[(225), int32] */;
    %139 = reshape(%138, newshape=[225]) /* ty=Tensor[(225), int32] */;
    %140 = @func_5784() /* ty=Tensor[(7, 1, 13), float64] */;
    %141 = @func_5470(%139) /* ty=Tensor[(225), float64] */;
    (%140, %141, meta[relay.Constant][6] /* ty=Tensor[(225), int32] */)
  };
  %142() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(225), float64], Tensor[(225), int32]) */
}

def @func_6826() -> (Tensor[(225), int32], Tensor[(7, 2, 13), float32]) {
  %143 = @func_4429() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(7, 2, 13), bool]) */;
  %144 = %143.1;
  %145 = cast(%144, dtype="float32") /* ty=Tensor[(7, 2, 13), float32] */;
  %146 = @func_5078() /* ty=Tensor[(225), int32] */;
  %147 = erf(%145) /* ty=Tensor[(7, 2, 13), float32] */;
  (%146, %147)
}

def @func_4713() -> (Tensor[(7, 1, 13), float64],) {
  %149 = fn () -> (Tensor[(7, 1, 13), float64],) {
    %148 = @func_3901() /* ty=Tensor[(7, 1, 13), float64] */;
    (%148,)
  };
  %149() /* ty=(Tensor[(7, 1, 13), float64],) */
}

def @func_11413() -> (Tensor[(225), int32],) {
  %150 = @func_5078() /* ty=Tensor[(225), int32] */;
  (%150,)
}

def @func_9929(%var_9901: Tensor[(225), float32]) -> (Tensor[(7, 1, 13), float64], Tensor[(3, 14, 12), bool], Tensor[(5, 3, 15), int64], Tensor[(260), float64], Tensor[(504, 225), int8], Tensor[(7, 504, 13), int64], Tensor[(260), float32]) {
  %151 = cast(meta[relay.Constant][7] /* ty=Tensor[(504, 1), float32] */, dtype="float32") /* ty=Tensor[(504, 1), float32] */;
  %152 = reshape(%151, newshape=[3, 14, 12]) /* ty=Tensor[(3, 14, 12), float32] */;
  %153 = @func_7855(%152) /* ty=(Tensor[(3, 14, 12), bool],) */;
  %154 = cast(%var_9901, dtype="float32") /* ty=Tensor[(225), float32] */;
  %155 = reshape(%154, newshape=[5, 3, 15]) /* ty=Tensor[(5, 3, 15), float32] */;
  %156 = @func_8212(%155) /* ty=(Tensor[(7, 1, 13), float64], Tensor[(5, 3, 15), int64]) */;
  %157 = cast(meta[relay.Constant][8] /* ty=Tensor[(260), float64] */, dtype="float64") /* ty=Tensor[(260), float64] */;
  %158 = reshape(%157, newshape=[260]) /* ty=Tensor[(260), float64] */;
  %159 = @func_9113(%158) /* ty=(Tensor[(225), int32], Tensor[(13, 4, 5), float64], Tensor[(260), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) */;
  %160 = cast(%var_9901, dtype="int8") /* ty=Tensor[(225), int8] */;
  %161 = cast(meta[relay.Constant][7] /* ty=Tensor[(504, 1), float32] */, dtype="int8") /* ty=Tensor[(504, 1), int8] */;
  %162 = @func_7602() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(324), float64]) */;
  %163 = %162.0;
  %164 = cast(meta[relay.Constant][7] /* ty=Tensor[(504, 1), float32] */, dtype="bool") /* ty=Tensor[(504, 1), bool] */;
  %165 = cast(%163, dtype="bool") /* ty=Tensor[(7, 1, 13), bool] */;
  %166 = greater_equal(%164, %165) /* ty=Tensor[(7, 504, 13), bool] */;
  %167 = cast(%166, dtype="float32") /* ty=Tensor[(7, 504, 13), float32] */;
  %168 = atan(%167) /* ty=Tensor[(7, 504, 13), float32] */;
  %169 = cast(%168, dtype="bool") /* ty=Tensor[(7, 504, 13), bool] */;
  %170 = cast(%163, dtype="bool") /* ty=Tensor[(7, 1, 13), bool] */;
  %171 = not_equal(%169, %170) /* ty=Tensor[(7, 504, 13), bool] */;
  %172 = cast(%166, dtype="bool") /* ty=Tensor[(7, 504, 13), bool] */;
  %173 = shape_of(%171, dtype="int32") /* ty=Tensor[(3), int32] */;
  %174 = cast(%171, dtype="bool") /* ty=Tensor[(7, 504, 13), bool] */;
  %175 = dyn.reshape(%172, %173, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %176 = equal(%174, %175) /* ty=Tensor[(7, 504, 13), bool] */;
  %177 = cast(%176, dtype="int64") /* ty=Tensor[(7, 504, 13), int64] */;
  %178 = shape_of(%171, dtype="int32") /* ty=Tensor[(3), int32] */;
  %179 = cast(%171, dtype="int64") /* ty=Tensor[(7, 504, 13), int64] */;
  %180 = dyn.reshape(%177, %178, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %181 = cast(meta[relay.Constant][8] /* ty=Tensor[(260), float64] */, dtype="float32") /* ty=Tensor[(260), float32] */;
  %182 = @func_4292() /* ty=Tensor[(7, 1, 13), float64] */;
  %183 = %153.0;
  %184 = %156.1;
  %185 = %159.2;
  %186 = bitwise_xor(%160, %161) /* ty=Tensor[(504, 225), int8] */;
  %187 = bitwise_xor(%179, %180) /* ty=Tensor[(7, 504, 13), int64] */;
  %188 = asin(%181) /* ty=Tensor[(260), float32] */;
  (%182, %183, %184, %185, %186, %187, %188)
}

def @func_16663() -> (Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) {
  %189 = @func_7740() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %190 = @func_7740() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %191 = %189.0;
  %192 = %190.0;
  (%191, %192)
}

def @func_7438() -> (Tensor[(1, 1, 15), uint8], Tensor[(15), uint8], Tensor[(225), int32], Tensor[(225), int32], Tensor[(7, ?, 13), uint32], Tensor[(7, 1, 13), float64]) {
  %211 = fn () -> (Tensor[(1, 1, 15), uint8], Tensor[(15), uint8], Tensor[(225), int32], Tensor[(225), int32], Tensor[(7, ?, 13), uint32], Tensor[(7, 1, 13), float64]) {
    %193 = cast(meta[relay.Constant][9] /* ty=Tensor[(15), uint8] */, dtype="uint8") /* ty=Tensor[(15), uint8] */;
    %194 = reshape(%193, newshape=[1, 1, 15]) /* ty=Tensor[(1, 1, 15), uint8] */;
    %195 = @func_4125(%194) /* ty=(Tensor[(1, 1, 15), uint8],) */;
    %196 = cast(meta[relay.Constant][10] /* ty=Tensor[(225), int32] */, dtype="int32") /* ty=Tensor[(225), int32] */;
    %197 = reshape(%196, newshape=[225]) /* ty=Tensor[(225), int32] */;
    %198 = @func_6508(%197) /* ty=(Tensor[(7, 1, 13), float64], Tensor[(5, 3, 15), int32], Tensor[(225), int32]) */;
    %199 = @func_7155() /* ty=(Tensor[(7, 1, 13), float64],) */;
    %200 = %199.0;
    %201 = @func_4292() /* ty=Tensor[(7, 1, 13), float64] */;
    %202 = cast(%201, dtype="uint32") /* ty=Tensor[(7, 1, 13), uint32] */;
    %203 = shape_of(%200, dtype="int32") /* ty=Tensor[(3), int32] */;
    %204 = cast(%200, dtype="uint32") /* ty=Tensor[(7, 1, 13), uint32] */;
    %205 = dyn.reshape(%202, %203, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %206 = @func_6094() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) */;
    %207 = %195.0;
    %208 = %198.2;
    %209 = bitwise_or(%204, %205) /* ty=Tensor[(7, ?, 13), uint32] */;
    %210 = %206.2;
    (%207, meta[relay.Constant][9] /* ty=Tensor[(15), uint8] */, %208, meta[relay.Constant][10] /* ty=Tensor[(225), int32] */, %209, %210)
  };
  %211() /* ty=(Tensor[(1, 1, 15), uint8], Tensor[(15), uint8], Tensor[(225), int32], Tensor[(225), int32], Tensor[(7, ?, 13), uint32], Tensor[(7, 1, 13), float64]) */
}

def @func_12898() -> (Tensor[(7, ?, 13), int16],) {
  @func_12896() /* ty=(Tensor[(7, ?, 13), int16],) */
}

def @func_13996() -> Tensor[(7, 1, 13), float64] {
  %213 = fn () -> Tensor[(7, 1, 13), float64] {
    %212 = @func_4206() /* ty=(Tensor[(7, 1, 13), float64],) */;
    %212.0
  };
  %213() /* ty=Tensor[(7, 1, 13), float64] */
}

def @func_9732() -> Tensor[(7, 1, 13), float64] {
  %215 = fn () -> Tensor[(7, 1, 13), float64] {
    %214 = @func_4270() /* ty=(Tensor[(1800), int8], Tensor[(7, 1, 13), float64]) */;
    %214.1
  };
  %215() /* ty=Tensor[(7, 1, 13), float64] */
}

def @func_2962(%var_2960: Tensor[(3, 14, 12), float32], %var_2961: Tensor[(1800), int8]) -> (Tensor[(3, 14, 12), float32], Tensor[(15, 12, 10), int8], Tensor[(1800), int8], Tensor[(13, 4, 5), float64]) {
  @func_2958(%var_2960, %var_2961) /* ty=(Tensor[(3, 14, 12), float32], Tensor[(15, 12, 10), int8], Tensor[(1800), int8], Tensor[(13, 4, 5), float64]) */
}

def @func_3641(%var_3633: Tensor[(3, 15, 9), float32]) -> (Tensor[(3, 15, 9), float32],) {
  %216 = cast(%var_3633, dtype="float32") /* ty=Tensor[(3, 15, 9), float32] */;
  %217 = rsqrt(%216) /* ty=Tensor[(3, 15, 9), float32] */;
  (%217,)
}

def @func_14601() -> (Tensor[(324), float64],) {
  %220 = fn () -> (Tensor[(324), float64],) {
    %218 = @func_13624() /* ty=(Tensor[(1, 1, 15), uint8], Tensor[(7, 1, 13), float64], Tensor[(324), float64]) */;
    %219 = %218.2;
    (%219,)
  };
  %220() /* ty=(Tensor[(324), float64],) */
}

def @func_7078() -> (Tensor[(7, 1, 13), float64],) {
  %223 = fn () -> (Tensor[(7, 1, 13), float64],) {
    %221 = @func_3776() /* ty=(Tensor[(7, 1, 13), float64],) */;
    %222 = %221.0;
    (%222,)
  };
  %223() /* ty=(Tensor[(7, 1, 13), float64],) */
}

def @func_15736() -> (Tensor[(7, ?, 13), uint32],) {
  %225 = fn () -> (Tensor[(7, ?, 13), uint32],) {
    %224 = @func_15586() /* ty=Tensor[(7, ?, 13), uint32] */;
    (%224,)
  };
  %225() /* ty=(Tensor[(7, ?, 13), uint32],) */
}

def @func_8762() -> (Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) {
  %226 = @func_4886() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %227 = @func_3901() /* ty=Tensor[(7, 1, 13), float64] */;
  %228 = %226.0;
  (%227, %228)
}

def @func_4887() -> (Tensor[(7, 1, 13), float64],) {
  %230 = fn () -> (Tensor[(7, 1, 13), float64],) {
    %229 = @func_4292() /* ty=Tensor[(7, 1, 13), float64] */;
    (%229,)
  };
  %230() /* ty=(Tensor[(7, 1, 13), float64],) */
}

def @func_8839(%var_8838: Tensor[(9, 3, 15), float64]) -> (Tensor[(9, 3, 15), bool],) {
  %238 = fn (%var_8819: Tensor[(9, 3, 15), float64]) -> (Tensor[(9, 3, 15), bool],) {
    %231 = cast(%var_8819, dtype="float64") /* ty=Tensor[(9, 3, 15), float64] */;
    %232 = atan(%231) /* ty=Tensor[(9, 3, 15), float64] */;
    %233 = cast(%232, dtype="bool") /* ty=Tensor[(9, 3, 15), bool] */;
    %234 = shape_of(%var_8819, dtype="int32") /* ty=Tensor[(3), int32] */;
    %235 = cast(%var_8819, dtype="bool") /* ty=Tensor[(9, 3, 15), bool] */;
    %236 = dyn.reshape(%233, %234, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %237 = less(%235, %236) /* ty=Tensor[(9, 3, 15), bool] */;
    (%237,)
  };
  %238(%var_8838) /* ty=(Tensor[(9, 3, 15), bool],) */
}

def @func_7028() -> (Tensor[(7, 1, 13), float64],) {
  @func_7026() /* ty=(Tensor[(7, 1, 13), float64],) */
}

def @func_7047() -> Tensor[(225), int32] {
  %240 = fn () -> Tensor[(225), int32] {
    %239 = @func_4169() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(225), int32], Tensor[(5, 3, 15), float32]) */;
    %239.1
  };
  %240() /* ty=Tensor[(225), int32] */
}

def @func_11371() -> (Tensor[(13, 4, 5), float64],) {
  %243 = fn () -> (Tensor[(13, 4, 5), float64],) {
    %241 = @func_10586() /* ty=(Tensor[(225), int32], Tensor[(13, 4, 5), float64], Tensor[(130, 2), float32]) */;
    %242 = %241.1;
    (%242,)
  };
  %243() /* ty=(Tensor[(13, 4, 5), float64],) */
}

def @func_17433() -> (Tensor[(7, 1, 13), float64], Tensor[(225), int32], Tensor[(7, 1, 13), float64]) {
  @func_17431() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(225), int32], Tensor[(7, 1, 13), float64]) */
}

def @func_17686() -> Tensor[(225), int32] {
  %244 = fn () -> Tensor[(225), int32] {
    @func_16943() /* ty=Tensor[(225), int32] */
  };
  %244() /* ty=Tensor[(225), int32] */
}

def @func_10391(%var_10389: Tensor[(225), float32]) -> (Tensor[(7, 2, 13), float32], Tensor[(7, ?, 13), int16], Tensor[(7, ?, 13), bool], Tensor[(225), float32]) {
  @func_10388(%var_10389) /* ty=(Tensor[(7, 2, 13), float32], Tensor[(7, ?, 13), int16], Tensor[(7, ?, 13), bool], Tensor[(225), float32]) */
}

def @func_5155() -> Tensor[(225), int32] {
  @func_4662() /* ty=Tensor[(225), int32] */
}

def @func_16665() -> (Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) {
  @func_16663() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) */
}

def @func_12545() -> Tensor[(3, 14, 12), float64] {
  @func_12543() /* ty=Tensor[(3, 14, 12), float64] */
}

def @func_7004() -> (Tensor[(7, ?, 13), int16],) {
  @func_7002() /* ty=(Tensor[(7, ?, 13), int16],) */
}

def @func_4294() -> Tensor[(7, 1, 13), float64] {
  @func_4292() /* ty=Tensor[(7, 1, 13), float64] */
}

def @func_16126() -> Tensor[(3, 14, 12), float32] {
  %245 = fn () -> Tensor[(3, 14, 12), float32] {
    @func_4497() /* ty=Tensor[(3, 14, 12), float32] */
  };
  %245() /* ty=Tensor[(3, 14, 12), float32] */
}

def @func_16639(%var_16637: Tensor[(405), float32], %var_16638: Tensor[(7, 4, 13), float64]) -> (Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(3, 15, 9), float32], Tensor[(405), float32], Tensor[(7, ?, 13), int16], Tensor[(1, 1, 15), uint8], Tensor[(90, 20), float64], Tensor[(7, 4, 13), uint64]) {
  %263 = fn (%var_16591: Tensor[(405), float32], %var_16630: Tensor[(7, 4, 13), float64]) -> (Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(3, 15, 9), float32], Tensor[(405), float32], Tensor[(7, ?, 13), int16], Tensor[(1, 1, 15), uint8], Tensor[(90, 20), float64], Tensor[(7, 4, 13), uint64]) {
    %246 = @func_3816() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(3, 14, 12), float32], Tensor[(504), float32], Tensor[(1800), int8]) */;
    %247 = @func_6582() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) */;
    %248 = cast(%var_16591, dtype="float32") /* ty=Tensor[(405), float32] */;
    %249 = reshape(%248, newshape=[3, 15, 9]) /* ty=Tensor[(3, 15, 9), float32] */;
    %250 = @func_3641(%249) /* ty=(Tensor[(3, 15, 9), float32],) */;
    %251 = @func_5986() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, ?, 13), int16], Tensor[(7, 1, 13), float32]) */;
    %252 = %251.0;
    %253 = cast(%252, dtype="uint64") /* ty=Tensor[(7, 1, 13), uint64] */;
    %254 = cast(%var_16630, dtype="uint64") /* ty=Tensor[(7, 4, 13), uint64] */;
    %255 = %246.0;
    %256 = %247.0;
    %257 = @func_15143() /* ty=Tensor[(7, 1, 13), float64] */;
    %258 = %250.0;
    %259 = @func_11583() /* ty=Tensor[(7, ?, 13), int16] */;
    %260 = @func_13534() /* ty=Tensor[(1, 1, 15), uint8] */;
    %261 = @func_12176() /* ty=Tensor[(90, 20), float64] */;
    %262 = subtract(%253, %254) /* ty=Tensor[(7, 4, 13), uint64] */;
    (%255, %256, %257, %258, %var_16591, %259, %260, %261, %262)
  };
  %263(%var_16637, %var_16638) /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(3, 15, 9), float32], Tensor[(405), float32], Tensor[(7, ?, 13), int16], Tensor[(1, 1, 15), uint8], Tensor[(90, 20), float64], Tensor[(7, 4, 13), uint64]) */
}

def @func_15286() -> Tensor[(7, 1, 13), float64] {
  @func_15284() /* ty=Tensor[(7, 1, 13), float64] */
}

def @func_11167() -> (Tensor[(7, 1, 13), float64], Tensor[(324), float64], Tensor[(5, 3, 15), float32]) {
  @func_11165() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(324), float64], Tensor[(5, 3, 15), float32]) */
}

def @func_6777() -> (Tensor[(1800), int8],) {
  %266 = fn () -> (Tensor[(1800), int8],) {
    %264 = @func_3816() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(3, 14, 12), float32], Tensor[(504), float32], Tensor[(1800), int8]) */;
    %265 = %264.3;
    (%265,)
  };
  %266() /* ty=(Tensor[(1800), int8],) */
}

def @func_16474() -> (Tensor[(7, 1, 13), float64],) {
  @func_16472() /* ty=(Tensor[(7, 1, 13), float64],) */
}

def @func_13498() -> (Tensor[(7, ?, 13), int16],) {
  %267 = @func_8598() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(225), int32], Tensor[(7, ?, 13), int16]) */;
  %268 = %267.2;
  (%268,)
}

def @func_8164() -> Tensor[(7, 1, 13), float64] {
  %269 = fn () -> Tensor[(7, 1, 13), float64] {
    @func_3917() /* ty=Tensor[(7, 1, 13), float64] */
  };
  %269() /* ty=Tensor[(7, 1, 13), float64] */
}

def @func_17431() -> (Tensor[(7, 1, 13), float64], Tensor[(225), int32], Tensor[(7, 1, 13), float64]) {
  %270 = @func_14746() /* ty=(Tensor[(225), int32],) */;
  %271 = @func_17233() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %272 = @func_8807() /* ty=Tensor[(7, 1, 13), float64] */;
  %273 = %270.0;
  %274 = %271.0;
  (%272, %273, %274)
}

def @func_15153() -> Tensor[(7, 1, 13), float64] {
  %275 = @func_10306() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %275.0
}

def @func_12020() -> Tensor[(7, 1, 13), float64] {
  @func_12018() /* ty=Tensor[(7, 1, 13), float64] */
}

def @func_16054() -> (Tensor[(7, 1, 13), float64], Tensor[(225), int32]) {
  %279 = fn () -> (Tensor[(7, 1, 13), float64], Tensor[(225), int32]) {
    %276 = @func_14404() /* ty=(Tensor[(7, 1, 13), float64],) */;
    %277 = %276.0;
    %278 = @func_4538() /* ty=Tensor[(225), int32] */;
    (%277, %278)
  };
  %279() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(225), int32]) */
}

def @func_9974() -> (Tensor[(7, 1, 13), float64], Tensor[(7, ?, 13), int16]) {
  %283 = fn () -> (Tensor[(7, 1, 13), float64], Tensor[(7, ?, 13), int16]) {
    %280 = @func_5928() /* ty=(Tensor[(7, ?, 13), int16],) */;
    %281 = @func_6006() /* ty=Tensor[(7, 1, 13), float64] */;
    %282 = %280.0;
    (%281, %282)
  };
  %283() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, ?, 13), int16]) */
}

def @func_17588() -> (Tensor[(7, 1, 13), float64],) {
  %286 = fn () -> (Tensor[(7, 1, 13), float64],) {
    %284 = @func_16876() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(324), float64], Tensor[(225), int32]) */;
    %285 = %284.0;
    (%285,)
  };
  %286() /* ty=(Tensor[(7, 1, 13), float64],) */
}

def @func_8536() -> (Tensor[(7, 1, 13), float64],) {
  @func_8534() /* ty=(Tensor[(7, 1, 13), float64],) */
}

def @func_8598() -> (Tensor[(7, 1, 13), float64], Tensor[(225), int32], Tensor[(7, ?, 13), int16]) {
  %287 = @func_5016() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(90, 20), int8], Tensor[(225), int32], Tensor[(1800), int8], Tensor[(7, 1, 13), float64]) */;
  %288 = @func_8163() /* ty=Tensor[(7, 1, 13), float64] */;
  %289 = %287.2;
  %290 = @func_5837() /* ty=Tensor[(7, ?, 13), int16] */;
  (%288, %289, %290)
}

def @func_14911() -> (Tensor[(7, 1, 13), float64],) {
  %293 = fn () -> (Tensor[(7, 1, 13), float64],) {
    %291 = @func_13336() /* ty=(Tensor[(1800), int8], Tensor[(7, 1, 13), float64]) */;
    %292 = %291.1;
    (%292,)
  };
  %293() /* ty=(Tensor[(7, 1, 13), float64],) */
}

def @func_10803() -> (Tensor[(7, 1, 13), float64],) {
  @func_10801() /* ty=(Tensor[(7, 1, 13), float64],) */
}

def @func_6340(%var_6339: Tensor[(1800), int8]) -> (Tensor[(7, ?, 13), int16], Tensor[(3, 14, 12), int16], Tensor[(13, 4, 5), float64], Tensor[(1800), int8], Tensor[(7, 1, 13), float64], Tensor[(3, 14, 12), float32]) {
  %309 = fn (%var_6310: Tensor[(1800), int8]) -> (Tensor[(7, ?, 13), int16], Tensor[(3, 14, 12), int16], Tensor[(13, 4, 5), float64], Tensor[(1800), int8], Tensor[(7, 1, 13), float64], Tensor[(3, 14, 12), float32]) {
    %294 = @func_4497() /* ty=Tensor[(3, 14, 12), float32] */;
    %295 = cast(meta[relay.Constant][11] /* ty=Tensor[(3, 14, 12), float32] */, dtype="int16") /* ty=Tensor[(3, 14, 12), int16] */;
    %296 = shape_of(%294, dtype="int32") /* ty=Tensor[(3), int32] */;
    %297 = cast(%294, dtype="int16") /* ty=Tensor[(3, 14, 12), int16] */;
    %298 = dyn.reshape(%295, %296, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %299 = cast(%var_6310, dtype="int8") /* ty=Tensor[(1800), int8] */;
    %300 = reshape(%299, newshape=[15, 12, 10]) /* ty=Tensor[(15, 12, 10), int8] */;
    %301 = @func_1874(%300) /* ty=(Tensor[(15, 12, 10), int8], Tensor[(13, 4, 5), float64], Tensor[(260), float64]) */;
    %302 = @func_5317() /* ty=(Tensor[(5, 3, 15), float32], Tensor[(7, 1, 13), float64]) */;
    %303 = cast(meta[relay.Constant][11] /* ty=Tensor[(3, 14, 12), float32] */, dtype="float32") /* ty=Tensor[(3, 14, 12), float32] */;
    %304 = @func_5837() /* ty=Tensor[(7, ?, 13), int16] */;
    %305 = bitwise_xor(%297, %298) /* ty=Tensor[(3, 14, 12), int16] */;
    %306 = %301.1;
    %307 = %302.1;
    %308 = log10(%303) /* ty=Tensor[(3, 14, 12), float32] */;
    (%304, %305, %306, %var_6310, %307, %308)
  };
  %309(%var_6339) /* ty=(Tensor[(7, ?, 13), int16], Tensor[(3, 14, 12), int16], Tensor[(13, 4, 5), float64], Tensor[(1800), int8], Tensor[(7, 1, 13), float64], Tensor[(3, 14, 12), float32]) */
}

def @func_4853(%var_4852: Tensor[(260), float64]) -> (Tensor[(1800), int8], Tensor[(13, 4, 5), float64], Tensor[(260), float64]) {
  %318 = fn (%var_4846: Tensor[(260), float64]) -> (Tensor[(1800), int8], Tensor[(13, 4, 5), float64], Tensor[(260), float64]) {
    %310 = @func_4270() /* ty=(Tensor[(1800), int8], Tensor[(7, 1, 13), float64]) */;
    %311 = cast(%var_4846, dtype="float64") /* ty=Tensor[(260), float64] */;
    %312 = cast(%var_4846, dtype="float64") /* ty=Tensor[(260), float64] */;
    %313 = reshape(%311, newshape=[13, 4, 5]) /* ty=Tensor[(13, 4, 5), float64] */;
    %314 = reshape(%312, newshape=[13, 4, 5]) /* ty=Tensor[(13, 4, 5), float64] */;
    %315 = @func_1470(%313, %314) /* ty=(Tensor[(13, 4, 5), float64], Tensor[(13, 4, 5), float64]) */;
    %316 = %310.0;
    %317 = %315.0;
    (%316, %317, %var_4846)
  };
  %318(%var_4852) /* ty=(Tensor[(1800), int8], Tensor[(13, 4, 5), float64], Tensor[(260), float64]) */
}

def @func_6443(%var_6441: Tensor[(14, 12, 3), float64]) -> (Tensor[(14, 12, 3), float64],) {
  @func_6440(%var_6441) /* ty=(Tensor[(14, 12, 3), float64],) */
}

def @func_658(%var_657: Tensor[(9, 12, 3), float64]) -> (Tensor[(9, 12, 3), float64],) {
  %321 = fn (%var_643: Tensor[(9, 12, 3), float64]) -> (Tensor[(9, 12, 3), float64],) {
    %319 = cast(%var_643, dtype="float64") /* ty=Tensor[(9, 12, 3), float64] */;
    %320 = cos(%319) /* ty=Tensor[(9, 12, 3), float64] */;
    (%320,)
  };
  %321(%var_657) /* ty=(Tensor[(9, 12, 3), float64],) */
}

def @func_11521() -> (Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(1, 1, 15), uint8], Tensor[(15), uint8]) {
  @func_11519() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(1, 1, 15), uint8], Tensor[(15), uint8]) */
}

def @func_7790() -> Tensor[(225), int32] {
  @func_7788() /* ty=Tensor[(225), int32] */
}

def @func_8212(%var_8205: Tensor[(5, 3, 15), float32]) -> (Tensor[(7, 1, 13), float64], Tensor[(5, 3, 15), int64]) {
  %322 = @func_7740() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %323 = @func_4316() /* ty=(Tensor[(5, 3, 15), float32],) */;
  %324 = %323.0;
  %325 = cast(%var_8205, dtype="int64") /* ty=Tensor[(5, 3, 15), int64] */;
  %326 = shape_of(%324, dtype="int32") /* ty=Tensor[(3), int32] */;
  %327 = cast(%324, dtype="int64") /* ty=Tensor[(5, 3, 15), int64] */;
  %328 = dyn.reshape(%325, %326, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %329 = %322.0;
  %330 = logical_xor(%327, %328) /* ty=Tensor[(5, 3, 15), int64] */;
  (%329, %330)
}

def @func_15038() -> (Tensor[(7, 1, 13), float64], Tensor[(90, 20), float64]) {
  %334 = fn () -> (Tensor[(7, 1, 13), float64], Tensor[(90, 20), float64]) {
    %331 = @func_7331() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 2, 13), bool], Tensor[(7, 1, 13), float64]) */;
    %332 = %331.4;
    %333 = @func_12176() /* ty=Tensor[(90, 20), float64] */;
    (%332, %333)
  };
  %334() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(90, 20), float64]) */
}

def @func_14192(%var_14190: Tensor[(7, 11, 12), bool], %var_14191: Tensor[(7, 11, 12), bool]) -> (Tensor[(7, 11, 12), bool], Tensor[(7, 1, 13), float64]) {
  %342 = fn (%var_14153: Tensor[(7, 11, 12), bool], %var_14154: Tensor[(7, 11, 12), bool]) -> (Tensor[(7, 11, 12), bool], Tensor[(7, 1, 13), float64]) {
    %335 = cast(%var_14154, dtype="bool") /* ty=Tensor[(7, 11, 12), bool] */;
    %336 = shape_of(%var_14153, dtype="int32") /* ty=Tensor[(3), int32] */;
    %337 = cast(%var_14153, dtype="bool") /* ty=Tensor[(7, 11, 12), bool] */;
    %338 = dyn.reshape(%335, %336, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %339 = @func_10801() /* ty=(Tensor[(7, 1, 13), float64],) */;
    %340 = logical_or(%337, %338) /* ty=Tensor[(7, 11, 12), bool] */;
    %341 = %339.0;
    (%340, %341)
  };
  %342(%var_14190, %var_14191) /* ty=(Tensor[(7, 11, 12), bool], Tensor[(7, 1, 13), float64]) */
}

def @func_3817() -> (Tensor[(7, 1, 13), float64], Tensor[(3, 14, 12), float32], Tensor[(504), float32], Tensor[(1800), int8]) {
  %351 = fn () -> (Tensor[(7, 1, 13), float64], Tensor[(3, 14, 12), float32], Tensor[(504), float32], Tensor[(1800), int8]) {
    %343 = @func_3776() /* ty=(Tensor[(7, 1, 13), float64],) */;
    %344 = cast(meta[relay.Constant][12] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
    %345 = cast(meta[relay.Constant][13] /* ty=Tensor[(1800), int8] */, dtype="int8") /* ty=Tensor[(1800), int8] */;
    %346 = reshape(%344, newshape=[3, 14, 12]) /* ty=Tensor[(3, 14, 12), float32] */;
    %347 = reshape(%345, newshape=[1800]) /* ty=Tensor[(1800), int8] */;
    %348 = @func_2958(%346, %347) /* ty=(Tensor[(3, 14, 12), float32], Tensor[(15, 12, 10), int8], Tensor[(1800), int8], Tensor[(13, 4, 5), float64]) */;
    %349 = %343.0;
    %350 = %348.0;
    (%349, %350, meta[relay.Constant][12] /* ty=Tensor[(504), float32] */, meta[relay.Constant][13] /* ty=Tensor[(1800), int8] */)
  };
  %351() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(3, 14, 12), float32], Tensor[(504), float32], Tensor[(1800), int8]) */
}

def @func_6844() -> (Tensor[(7, ?, 13), bool], Tensor[(7, 1, 13), float64]) {
  %352 = @func_5016() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(90, 20), int8], Tensor[(225), int32], Tensor[(1800), int8], Tensor[(7, 1, 13), float64]) */;
  %353 = @func_6237() /* ty=Tensor[(7, ?, 13), bool] */;
  %354 = %352.0;
  (%353, %354)
}

def @func_13288(%var_13286: Tensor[(1, 6, 7), float64], %var_13287: Tensor[(12, 6, 7), float64]) -> (Tensor[(?, 6, 7), bool], Tensor[(225), int32], Tensor[(12, 6, 7), uint32]) {
  @func_13284(%var_13286, %var_13287) /* ty=(Tensor[(?, 6, 7), bool], Tensor[(225), int32], Tensor[(12, 6, 7), uint32]) */
}

def @func_8620() -> Tensor[(7, 1, 13), float64] {
  @func_8618() /* ty=Tensor[(7, 1, 13), float64] */
}

def @func_3918() -> Tensor[(7, 1, 13), float64] {
  %356 = fn () -> Tensor[(7, 1, 13), float64] {
    %355 = @func_3816() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(3, 14, 12), float32], Tensor[(504), float32], Tensor[(1800), int8]) */;
    %355.0
  };
  %356() /* ty=Tensor[(7, 1, 13), float64] */
}

def @func_17187(%var_17184: Tensor[(1183), float64]) -> (Tensor[(7, 1, 13), float64], Tensor[(7, 2, 13), int16], Tensor[(26, 7), float64], Tensor[(1183), float64]) {
  %357 = @func_12083() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(7, 1, 13), float64]) */;
  %358 = cast(meta[relay.Constant][14] /* ty=Tensor[(26, 7), float64] */, dtype="float64") /* ty=Tensor[(26, 7), float64] */;
  %359 = cast(%var_17184, dtype="float64") /* ty=Tensor[(1183), float64] */;
  %360 = reshape(%358, newshape=[7, 2, 13]) /* ty=Tensor[(7, 2, 13), float64] */;
  %361 = reshape(%359, newshape=[7, 13, 13]) /* ty=Tensor[(7, 13, 13), float64] */;
  %362 = @func_11742(%360, %361) /* ty=(Tensor[(7, 2, 13), int16], Tensor[(7, 13, 13), uint16], Tensor[(7, 1, 13), float64]) */;
  %363 = %357.1;
  %364 = %362.0;
  (%363, %364, meta[relay.Constant][14] /* ty=Tensor[(26, 7), float64] */, %var_17184)
}

def @func_8174() -> (Tensor[(7, 1, 13), float64],) {
  %367 = fn () -> (Tensor[(7, 1, 13), float64],) {
    %365 = @func_5538() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) */;
    %366 = %365.2;
    (%366,)
  };
  %367() /* ty=(Tensor[(7, 1, 13), float64],) */
}

def @func_16294() -> Tensor[(7, 6, 13), uint8] {
  @func_16292() /* ty=Tensor[(7, 6, 13), uint8] */
}

def @func_15155() -> Tensor[(7, 1, 13), float64] {
  @func_15153() /* ty=Tensor[(7, 1, 13), float64] */
}

def @func_17155() -> (Tensor[(7, 1, 13), float64],) {
  %370 = fn () -> (Tensor[(7, 1, 13), float64],) {
    %368 = @func_14874() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(5, 3, 15), int8], Tensor[(5, 3, 15), float32], Tensor[(7, ?, 13), bool]) */;
    %369 = %368.1;
    (%369,)
  };
  %370() /* ty=(Tensor[(7, 1, 13), float64],) */
}

def @func_5539() -> (Tensor[(7, ?, 13), int16], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) {
  %376 = fn () -> (Tensor[(7, ?, 13), int16], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) {
    %371 = @func_4886() /* ty=(Tensor[(7, 1, 13), float64],) */;
    %372 = @func_3776() /* ty=(Tensor[(7, 1, 13), float64],) */;
    %373 = @func_4767() /* ty=Tensor[(7, ?, 13), int16] */;
    %374 = %371.0;
    %375 = %372.0;
    (%373, %374, %375)
  };
  %376() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) */
}

def @func_12339() -> (Tensor[(7, 1, 13), float64],) {
  %377 = @func_4364() /* ty=Tensor[(7, 1, 13), float64] */;
  (%377,)
}

def @func_8495() -> Tensor[(7, ?, 13), uint8] {
  %378 = @func_7586() /* ty=Tensor[(7, 1, 13), float64] */;
  %379 = @func_5538() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) */;
  %380 = %379.1;
  %381 = cast(%380, dtype="uint8") /* ty=Tensor[(7, 1, 13), uint8] */;
  %382 = shape_of(%378, dtype="int32") /* ty=Tensor[(3), int32] */;
  %383 = cast(%378, dtype="uint8") /* ty=Tensor[(7, 1, 13), uint8] */;
  %384 = dyn.reshape(%381, %382, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  bitwise_xor(%383, %384) /* ty=Tensor[(7, ?, 13), uint8] */
}

def @func_12675() -> (Tensor[(7, ?, 13), int16],) {
  %387 = fn () -> (Tensor[(7, ?, 13), int16],) {
    %385 = @func_9243() /* ty=(Tensor[(7, ?, 13), int16],) */;
    %386 = %385.0;
    (%386,)
  };
  %387() /* ty=(Tensor[(7, ?, 13), int16],) */
}

def @func_14542() -> (Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) {
  %393 = fn () -> (Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) {
    %388 = @func_13783() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(7, 1, 13), float64], Tensor[(15), uint8], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) */;
    %389 = @func_3776() /* ty=(Tensor[(7, 1, 13), float64],) */;
    %390 = %388.4;
    %391 = @func_9222() /* ty=Tensor[(7, 1, 13), float64] */;
    %392 = %389.0;
    (%390, %391, %392)
  };
  %393() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) */
}

def @func_7002() -> (Tensor[(7, ?, 13), int16],) {
  %394 = @func_5986() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, ?, 13), int16], Tensor[(7, 1, 13), float32]) */;
  %395 = %394.1;
  (%395,)
}

def @func_10933() -> (Tensor[(225), int32],) {
  @func_10931() /* ty=(Tensor[(225), int32],) */
}

def @func_10422() -> Tensor[(7, 1, 13), float64] {
  %396 = @func_5016() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(90, 20), int8], Tensor[(225), int32], Tensor[(1800), int8], Tensor[(7, 1, 13), float64]) */;
  %396.0
}

def @func_13369(%var_13347: Tensor[(11, 2, 10), float32]) -> (Tensor[(11, 2, 10), float32], Tensor[(7, 1, 13), float64]) {
  %397 = cast(meta[relay.Constant][15] /* ty=Tensor[(11, 2, 10), float32] */, dtype="float32") /* ty=Tensor[(11, 2, 10), float32] */;
  %398 = shape_of(%var_13347, dtype="int32") /* ty=Tensor[(3), int32] */;
  %399 = cast(%var_13347, dtype="float32") /* ty=Tensor[(11, 2, 10), float32] */;
  %400 = dyn.reshape(%397, %398, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %401 = @func_10306() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %402 = divide(%399, %400) /* ty=Tensor[(11, 2, 10), float32] */;
  %403 = %401.0;
  (%402, %403)
}

def @func_4207() -> (Tensor[(7, 1, 13), float64],) {
  %406 = fn () -> (Tensor[(7, 1, 13), float64],) {
    %404 = @func_4169() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(225), int32], Tensor[(5, 3, 15), float32]) */;
    %405 = %404.0;
    (%405,)
  };
  %406() /* ty=(Tensor[(7, 1, 13), float64],) */
}

def @func_11583() -> Tensor[(7, ?, 13), int16] {
  %407 = @func_5928() /* ty=(Tensor[(7, ?, 13), int16],) */;
  %407.0
}

def @func_13183() -> (Tensor[(90, 20), float64], Tensor[(225), int32]) {
  @func_13181() /* ty=(Tensor[(90, 20), float64], Tensor[(225), int32]) */
}

def @func_12341() -> (Tensor[(7, 1, 13), float64],) {
  @func_12339() /* ty=(Tensor[(7, 1, 13), float64],) */
}

def @func_5740() -> Tensor[(7, 1, 13), float64] {
  @func_3917() /* ty=Tensor[(7, 1, 13), float64] */
}

def @func_5684(%var_5683: Tensor[(7, 1, 13), float64]) -> (Tensor[(7, ?, 13), bool], Tensor[(7, 1, 13), float64]) {
  %417 = fn (%var_5656: Tensor[(7, 1, 13), float64]) -> (Tensor[(7, ?, 13), bool], Tensor[(7, 1, 13), float64]) {
    %408 = @func_5279() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(5, 3, 15), float32], Tensor[(504), float32]) */;
    %409 = %408.0;
    %410 = cast(%var_5656, dtype="bool") /* ty=Tensor[(7, 1, 13), bool] */;
    %411 = shape_of(%409, dtype="int32") /* ty=Tensor[(3), int32] */;
    %412 = cast(%409, dtype="bool") /* ty=Tensor[(7, 1, 13), bool] */;
    %413 = dyn.reshape(%410, %411, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %414 = @func_5538() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) */;
    %415 = logical_or(%412, %413) /* ty=Tensor[(7, ?, 13), bool] */;
    %416 = %414.1;
    (%415, %416)
  };
  %417(%var_5683) /* ty=(Tensor[(7, ?, 13), bool], Tensor[(7, 1, 13), float64]) */
}

def @func_11827() -> (Tensor[(13, 4, 5), float64],) {
  %420 = fn () -> (Tensor[(13, 4, 5), float64],) {
    %418 = @func_11370() /* ty=(Tensor[(13, 4, 5), float64],) */;
    %419 = %418.0;
    (%419,)
  };
  %420() /* ty=(Tensor[(13, 4, 5), float64],) */
}

def @func_9245() -> (Tensor[(7, ?, 13), int16],) {
  @func_9243() /* ty=(Tensor[(7, ?, 13), int16],) */
}

def @func_15994() -> (Tensor[(7, 1, 13), float64],) {
  @func_15992() /* ty=(Tensor[(7, 1, 13), float64],) */
}

def @func_6846() -> (Tensor[(7, ?, 13), bool], Tensor[(7, 1, 13), float64]) {
  @func_6844() /* ty=(Tensor[(7, ?, 13), bool], Tensor[(7, 1, 13), float64]) */
}

def @func_6508(%var_6497: Tensor[(225), int32]) -> (Tensor[(7, 1, 13), float64], Tensor[(5, 3, 15), int32], Tensor[(225), int32]) {
  %421 = @func_6006() /* ty=Tensor[(7, 1, 13), float64] */;
  %422 = cast(%421, dtype="float64") /* ty=Tensor[(7, 1, 13), float64] */;
  %423 = cast(%var_6497, dtype="int32") /* ty=Tensor[(225), int32] */;
  %424 = reshape(%423, newshape=[5, 3, 15]) /* ty=Tensor[(5, 3, 15), int32] */;
  %425 = acos(%422) /* ty=Tensor[(7, 1, 13), float64] */;
  %426 = @func_2159(%424) /* ty=Tensor[(5, 3, 15), int32] */;
  (%425, %426, %var_6497)
}

def @func_8497() -> Tensor[(7, ?, 13), uint8] {
  @func_8495() /* ty=Tensor[(7, ?, 13), uint8] */
}

def @func_6096() -> (Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) {
  @func_6094() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) */
}

def @func_8036(%var_8035: Tensor[(360), int8]) -> (Tensor[(1800), int8], Tensor[(7, ?, 13), int16], Tensor[(13, 4, 5), float64], Tensor[(360), int8]) {
  %436 = fn (%var_8028: Tensor[(360), int8]) -> (Tensor[(1800), int8], Tensor[(7, ?, 13), int16], Tensor[(13, 4, 5), float64], Tensor[(360), int8]) {
    %427 = @func_3816() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(3, 14, 12), float32], Tensor[(504), float32], Tensor[(1800), int8]) */;
    %428 = cast(%var_8028, dtype="int8") /* ty=Tensor[(360), int8] */;
    %429 = cast(%var_8028, dtype="int8") /* ty=Tensor[(360), int8] */;
    %430 = reshape(%428, newshape=[12, 10, 3]) /* ty=Tensor[(12, 10, 3), int8] */;
    %431 = reshape(%429, newshape=[12, 10, 3]) /* ty=Tensor[(12, 10, 3), int8] */;
    %432 = @func_4024(%430, %431) /* ty=(Tensor[(12, 10, 3), bool], Tensor[(13, 4, 5), float64], Tensor[(900, 2), int8]) */;
    %433 = %427.3;
    %434 = @func_4767() /* ty=Tensor[(7, ?, 13), int16] */;
    %435 = %432.1;
    (%433, %434, %435, %var_8028)
  };
  %436(%var_8035) /* ty=(Tensor[(1800), int8], Tensor[(7, ?, 13), int16], Tensor[(13, 4, 5), float64], Tensor[(360), int8]) */
}

def @func_11244() -> (Tensor[(7, 1, 13), float64],) {
  %437 = @func_10609() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %438 = %437.0;
  (%438,)
}

def @func_17551(%var_17550: Tensor[(7, 5, 13), float64]) -> (Tensor[(7, 5, 13), bool], Tensor[(7, 5, 13), bool]) {
  %447 = fn (%var_17523: Tensor[(7, 5, 13), float64]) -> (Tensor[(7, 5, 13), bool], Tensor[(7, 5, 13), bool]) {
    %439 = @func_10609() /* ty=(Tensor[(7, 1, 13), float64],) */;
    %440 = %439.0;
    %441 = cast(%440, dtype="bool") /* ty=Tensor[(7, 1, 13), bool] */;
    %442 = cast(%var_17523, dtype="bool") /* ty=Tensor[(7, 5, 13), bool] */;
    %443 = cast(%440, dtype="bool") /* ty=Tensor[(7, 1, 13), bool] */;
    %444 = cast(%var_17523, dtype="bool") /* ty=Tensor[(7, 5, 13), bool] */;
    %445 = greater(%441, %442) /* ty=Tensor[(7, 5, 13), bool] */;
    %446 = greater_equal(%443, %444) /* ty=Tensor[(7, 5, 13), bool] */;
    (%445, %446)
  };
  %447(%var_17550) /* ty=(Tensor[(7, 5, 13), bool], Tensor[(7, 5, 13), bool]) */
}

def @func_12084() -> (Tensor[(7, ?, 13), int16], Tensor[(7, 1, 13), float64]) {
  %451 = fn () -> (Tensor[(7, ?, 13), int16], Tensor[(7, 1, 13), float64]) {
    %448 = @func_4429() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(7, 2, 13), bool]) */;
    %449 = %448.0;
    %450 = @func_10061() /* ty=Tensor[(7, 1, 13), float64] */;
    (%449, %450)
  };
  %451() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(7, 1, 13), float64]) */
}

def @func_9689() -> (Tensor[(7, 1, 13), float64], Tensor[(3, 14, 12), float32]) {
  %452 = @func_8598() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(225), int32], Tensor[(7, ?, 13), int16]) */;
  %453 = %452.0;
  %454 = @func_4497() /* ty=Tensor[(3, 14, 12), float32] */;
  (%453, %454)
}

def @func_10340() -> Tensor[(7, 1, 13), float64] {
  %456 = fn () -> Tensor[(7, 1, 13), float64] {
    %455 = @func_4886() /* ty=(Tensor[(7, 1, 13), float64],) */;
    %455.0
  };
  %456() /* ty=Tensor[(7, 1, 13), float64] */
}

def @func_11742(%var_11713: Tensor[(7, 2, 13), float64], %var_11725: Tensor[(7, 13, 13), float64]) -> (Tensor[(7, 2, 13), int16], Tensor[(7, 13, 13), uint16], Tensor[(7, 1, 13), float64]) {
  %457 = @func_8534() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %458 = %457.0;
  %459 = cast(%458, dtype="int16") /* ty=Tensor[(7, 1, 13), int16] */;
  %460 = cast(%var_11713, dtype="int16") /* ty=Tensor[(7, 2, 13), int16] */;
  %461 = cast(%458, dtype="uint16") /* ty=Tensor[(7, 1, 13), uint16] */;
  %462 = cast(%var_11725, dtype="uint16") /* ty=Tensor[(7, 13, 13), uint16] */;
  %463 = right_shift(%459, %460) /* ty=Tensor[(7, 2, 13), int16] */;
  %464 = maximum(%461, %462) /* ty=Tensor[(7, 13, 13), uint16] */;
  %465 = @func_4364() /* ty=Tensor[(7, 1, 13), float64] */;
  (%463, %464, %465)
}

def @func_17239() -> (Tensor[(324), float64],) {
  %466 = @func_9363() /* ty=(Tensor[(324), float64],) */;
  %467 = %466.0;
  (%467,)
}

def @func_16945() -> Tensor[(225), int32] {
  @func_16943() /* ty=Tensor[(225), int32] */
}

def @func_15894() -> (Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(182), float64], Tensor[(1183), float64], Tensor[(7, 1, 13), float64]) {
  %480 = fn () -> (Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(182), float64], Tensor[(1183), float64], Tensor[(7, 1, 13), float64]) {
    %468 = @func_7026() /* ty=(Tensor[(7, 1, 13), float64],) */;
    %469 = @func_12827() /* ty=(Tensor[(7, 1, 13), float64],) */;
    %470 = cast(meta[relay.Constant][16] /* ty=Tensor[(182), float64] */, dtype="float64") /* ty=Tensor[(182), float64] */;
    %471 = cast(meta[relay.Constant][17] /* ty=Tensor[(1183), float64] */, dtype="float64") /* ty=Tensor[(1183), float64] */;
    %472 = reshape(%470, newshape=[7, 2, 13]) /* ty=Tensor[(7, 2, 13), float64] */;
    %473 = reshape(%471, newshape=[7, 13, 13]) /* ty=Tensor[(7, 13, 13), float64] */;
    %474 = @func_11742(%472, %473) /* ty=(Tensor[(7, 2, 13), int16], Tensor[(7, 13, 13), uint16], Tensor[(7, 1, 13), float64]) */;
    %475 = @func_15822() /* ty=(Tensor[(7, 1, 13), float64],) */;
    %476 = %468.0;
    %477 = %469.0;
    %478 = %474.2;
    %479 = %475.0;
    (%476, %477, %478, meta[relay.Constant][16] /* ty=Tensor[(182), float64] */, meta[relay.Constant][17] /* ty=Tensor[(1183), float64] */, %479)
  };
  %480() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(182), float64], Tensor[(1183), float64], Tensor[(7, 1, 13), float64]) */
}

def @func_13694() -> (Tensor[(7, ?, 13), int16], Tensor[(1, 1, 15), uint8], Tensor[(7, 1, 13), float64]) {
  %481 = @func_9243() /* ty=(Tensor[(7, ?, 13), int16],) */;
  %482 = @func_4206() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %483 = %481.0;
  %484 = @func_13534() /* ty=Tensor[(1, 1, 15), uint8] */;
  %485 = %482.0;
  (%483, %484, %485)
}

def @func_3903() -> Tensor[(7, 1, 13), float64] {
  @func_3901() /* ty=Tensor[(7, 1, 13), float64] */
}

def @func_10461(%var_10460: Tensor[(5, 3, 15), float32]) -> (Tensor[(5, 3, 15), bool], Tensor[(5, 3, 15), float32]) {
  %495 = fn (%var_10430: Tensor[(5, 3, 15), float32]) -> (Tensor[(5, 3, 15), bool], Tensor[(5, 3, 15), float32]) {
    %486 = @func_5317() /* ty=(Tensor[(5, 3, 15), float32], Tensor[(7, 1, 13), float64]) */;
    %487 = %486.0;
    %488 = cast(%var_10430, dtype="bool") /* ty=Tensor[(5, 3, 15), bool] */;
    %489 = shape_of(%487, dtype="int32") /* ty=Tensor[(3), int32] */;
    %490 = cast(%487, dtype="bool") /* ty=Tensor[(5, 3, 15), bool] */;
    %491 = dyn.reshape(%488, %489, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %492 = cast(%var_10430, dtype="float32") /* ty=Tensor[(5, 3, 15), float32] */;
    %493 = less(%490, %491) /* ty=Tensor[(5, 3, 15), bool] */;
    %494 = tan(%492) /* ty=Tensor[(5, 3, 15), float32] */;
    (%493, %494)
  };
  %495(%var_10460) /* ty=(Tensor[(5, 3, 15), bool], Tensor[(5, 3, 15), float32]) */
}

def @func_8215(%var_8213: Tensor[(5, 3, 15), float32]) -> (Tensor[(7, 1, 13), float64], Tensor[(5, 3, 15), int64]) {
  @func_8212(%var_8213) /* ty=(Tensor[(7, 1, 13), float64], Tensor[(5, 3, 15), int64]) */
}

def @func_5786() -> Tensor[(7, 1, 13), float64] {
  @func_5784() /* ty=Tensor[(7, 1, 13), float64] */
}

def @func_8974() -> Tensor[(7, 1, 13), float64] {
  %497 = fn () -> Tensor[(7, 1, 13), float64] {
    %496 = @func_8762() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) */;
    %496.0
  };
  %497() /* ty=Tensor[(7, 1, 13), float64] */
}

def @func_5634(%var_5632: Tensor[(360), int8], %var_5633: Tensor[(405), float32]) -> (Tensor[(225), int32], Tensor[(12, 10, 3), bool], Tensor[(360), int8], Tensor[(3, 15, 9), float32], Tensor[(405), float32]) {
  %509 = fn (%var_5584: Tensor[(360), int8], %var_5587: Tensor[(405), float32]) -> (Tensor[(225), int32], Tensor[(12, 10, 3), bool], Tensor[(360), int8], Tensor[(3, 15, 9), float32], Tensor[(405), float32]) {
    %498 = cast(%var_5584, dtype="int8") /* ty=Tensor[(360), int8] */;
    %499 = cast(%var_5584, dtype="int8") /* ty=Tensor[(360), int8] */;
    %500 = reshape(%498, newshape=[12, 10, 3]) /* ty=Tensor[(12, 10, 3), int8] */;
    %501 = reshape(%499, newshape=[12, 10, 3]) /* ty=Tensor[(12, 10, 3), int8] */;
    %502 = @func_4024(%500, %501) /* ty=(Tensor[(12, 10, 3), bool], Tensor[(13, 4, 5), float64], Tensor[(900, 2), int8]) */;
    %503 = cast(%var_5587, dtype="float32") /* ty=Tensor[(405), float32] */;
    %504 = reshape(%503, newshape=[3, 15, 9]) /* ty=Tensor[(3, 15, 9), float32] */;
    %505 = @func_3641(%504) /* ty=(Tensor[(3, 15, 9), float32],) */;
    %506 = @func_4538() /* ty=Tensor[(225), int32] */;
    %507 = %502.0;
    %508 = %505.0;
    (%506, %507, %var_5584, %508, %var_5587)
  };
  %509(%var_5632, %var_5633) /* ty=(Tensor[(225), int32], Tensor[(12, 10, 3), bool], Tensor[(360), int8], Tensor[(3, 15, 9), float32], Tensor[(405), float32]) */
}

def @func_8534() -> (Tensor[(7, 1, 13), float64],) {
  %510 = @func_7155() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %511 = %510.0;
  (%511,)
}

def @func_2958(%var_2909: Tensor[(3, 14, 12), float32], %var_2937: Tensor[(1800), int8]) -> (Tensor[(3, 14, 12), float32], Tensor[(15, 12, 10), int8], Tensor[(1800), int8], Tensor[(13, 4, 5), float64]) {
  %512 = cast(meta[relay.Constant][18] /* ty=Tensor[(3, 14, 12), float32] */, dtype="float32") /* ty=Tensor[(3, 14, 12), float32] */;
  %513 = shape_of(%var_2909, dtype="int32") /* ty=Tensor[(3), int32] */;
  %514 = cast(%var_2909, dtype="float32") /* ty=Tensor[(3, 14, 12), float32] */;
  %515 = dyn.reshape(%512, %513, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %516 = cast(%var_2937, dtype="int8") /* ty=Tensor[(1800), int8] */;
  %517 = reshape(%516, newshape=[15, 12, 10]) /* ty=Tensor[(15, 12, 10), int8] */;
  %518 = @func_1874(%517) /* ty=(Tensor[(15, 12, 10), int8], Tensor[(13, 4, 5), float64], Tensor[(260), float64]) */;
  %519 = cast(%var_2937, dtype="int8") /* ty=Tensor[(1800), int8] */;
  %520 = reshape(%519, newshape=[15, 12, 10]) /* ty=Tensor[(15, 12, 10), int8] */;
  %521 = @func_1874(%520) /* ty=(Tensor[(15, 12, 10), int8], Tensor[(13, 4, 5), float64], Tensor[(260), float64]) */;
  %522 = mod(%514, %515) /* ty=Tensor[(3, 14, 12), float32] */;
  %523 = %518.0;
  %524 = %521.1;
  (%522, %523, %var_2937, %524)
}

def @func_11415() -> (Tensor[(225), int32],) {
  @func_11413() /* ty=(Tensor[(225), int32],) */
}

def @func_17820() -> (Tensor[(7, 1, 13), float64],) {
  %527 = fn () -> (Tensor[(7, 1, 13), float64],) {
    %525 = @func_9006() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(225), int32], Tensor[(7, 1, 13), float64]) */;
    %526 = %525.0;
    (%526,)
  };
  %527() /* ty=(Tensor[(7, 1, 13), float64],) */
}

def @func_6239() -> Tensor[(7, ?, 13), bool] {
  @func_6237() /* ty=Tensor[(7, ?, 13), bool] */
}

def @func_8782() -> (Tensor[(7, ?, 13), int16],) {
  %528 = @func_5837() /* ty=Tensor[(7, ?, 13), int16] */;
  (%528,)
}

def @func_7946() -> (Tensor[(3, 14, 12), float64],) {
  %529 = @func_4497() /* ty=Tensor[(3, 14, 12), float32] */;
  %530 = cast(%529, dtype="float64") /* ty=Tensor[(3, 14, 12), float64] */;
  %531 = sqrt(%530) /* ty=Tensor[(3, 14, 12), float64] */;
  (%531,)
}

def @func_14922(%var_14921: Tensor[(225), int32]) -> (Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(225), float64], Tensor[(225), int32]) {
  %539 = fn (%var_14918: Tensor[(225), int32]) -> (Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(225), float64], Tensor[(225), int32]) {
    %532 = @func_12333() /* ty=(Tensor[(13, 4, 5), float64], Tensor[(7, 1, 13), float64]) */;
    %533 = @func_11552() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(1800), int8], Tensor[(7, 1, 13), float64]) */;
    %534 = cast(%var_14918, dtype="int32") /* ty=Tensor[(225), int32] */;
    %535 = reshape(%534, newshape=[225]) /* ty=Tensor[(225), int32] */;
    %536 = %532.1;
    %537 = %533.0;
    %538 = @func_5470(%535) /* ty=Tensor[(225), float64] */;
    (%536, %537, %538, %var_14918)
  };
  %539(%var_14921) /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(225), float64], Tensor[(225), int32]) */
}

def @func_10587() -> (Tensor[(225), int32], Tensor[(13, 4, 5), float64], Tensor[(130, 2), float32]) {
  %549 = fn () -> (Tensor[(225), int32], Tensor[(13, 4, 5), float64], Tensor[(130, 2), float32]) {
    %540 = cast(meta[relay.Constant][19] /* ty=Tensor[(130, 2), float64] */, dtype="float64") /* ty=Tensor[(130, 2), float64] */;
    %541 = reshape(%540, newshape=[260]) /* ty=Tensor[(260), float64] */;
    %542 = @func_9113(%541) /* ty=(Tensor[(225), int32], Tensor[(13, 4, 5), float64], Tensor[(260), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) */;
    %543 = cast(meta[relay.Constant][19] /* ty=Tensor[(130, 2), float64] */, dtype="float64") /* ty=Tensor[(130, 2), float64] */;
    %544 = cosh(%543) /* ty=Tensor[(130, 2), float64] */;
    %545 = cast(%544, dtype="float32") /* ty=Tensor[(130, 2), float32] */;
    %546 = @func_4538() /* ty=Tensor[(225), int32] */;
    %547 = %542.1;
    %548 = asin(%545) /* ty=Tensor[(130, 2), float32] */;
    (%546, %547, %548)
  };
  %549() /* ty=(Tensor[(225), int32], Tensor[(13, 4, 5), float64], Tensor[(130, 2), float32]) */
}

def @func_14968() -> Tensor[(7, 1, 13), float64] {
  %551 = fn () -> Tensor[(7, 1, 13), float64] {
    %550 = @func_11944() /* ty=(Tensor[(7, 1, 13), float64],) */;
    %550.0
  };
  %551() /* ty=Tensor[(7, 1, 13), float64] */
}

def @func_16738() -> (Tensor[(15), uint8], Tensor[(7, 2, 13), bool], Tensor[(7, 1, 13), float64]) {
  %557 = fn () -> (Tensor[(15), uint8], Tensor[(7, 2, 13), bool], Tensor[(7, 1, 13), float64]) {
    %552 = @func_4429() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(7, 2, 13), bool]) */;
    %553 = @func_7155() /* ty=(Tensor[(7, 1, 13), float64],) */;
    %554 = @func_16712() /* ty=Tensor[(15), uint8] */;
    %555 = %552.1;
    %556 = %553.0;
    (%554, %555, %556)
  };
  %557() /* ty=(Tensor[(15), uint8], Tensor[(7, 2, 13), bool], Tensor[(7, 1, 13), float64]) */
}

def @func_7566(%var_7565: Tensor[(260), float64]) -> (Tensor[(7, 1, 13), float64], Tensor[(13, 4, 5), float64], Tensor[(260), float64], Tensor[(225), int32]) {
  %565 = fn (%var_7518: Tensor[(260), float64]) -> (Tensor[(7, 1, 13), float64], Tensor[(13, 4, 5), float64], Tensor[(260), float64], Tensor[(225), int32]) {
    %558 = @func_4712() /* ty=(Tensor[(7, 1, 13), float64],) */;
    %559 = cast(%var_7518, dtype="float64") /* ty=Tensor[(260), float64] */;
    %560 = reshape(%559, newshape=[260]) /* ty=Tensor[(260), float64] */;
    %561 = @func_4851(%560) /* ty=(Tensor[(1800), int8], Tensor[(13, 4, 5), float64], Tensor[(260), float64]) */;
    %562 = %558.0;
    %563 = %561.1;
    %564 = @func_5155() /* ty=Tensor[(225), int32] */;
    (%562, %563, %var_7518, %564)
  };
  %565(%var_7565) /* ty=(Tensor[(7, 1, 13), float64], Tensor[(13, 4, 5), float64], Tensor[(260), float64], Tensor[(225), int32]) */
}

def @func_12459() -> (Tensor[(225), int32],) {
  @func_12457() /* ty=(Tensor[(225), int32],) */
}

def @func_10772(%var_10744: Tensor[(5, 45), int32]) -> (Tensor[(4, 3, 1), float32], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(225), int32], Tensor[(5, 45), int32], Tensor[(7, ?, 13), bool], Tensor[(9, 12, 3), float64], Tensor[(324), float64]) {
  %566 = cast(meta[relay.Constant][20] /* ty=Tensor[(4, 3, 1), float32] */, dtype="float32") /* ty=Tensor[(4, 3, 1), float32] */;
  %567 = @func_5391() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %568 = cast(%var_10744, dtype="int32") /* ty=Tensor[(5, 45), int32] */;
  %569 = reshape(%568, newshape=[225]) /* ty=Tensor[(225), int32] */;
  %570 = @func_6508(%569) /* ty=(Tensor[(7, 1, 13), float64], Tensor[(5, 3, 15), int32], Tensor[(225), int32]) */;
  %571 = cast(%var_10744, dtype="float32") /* ty=Tensor[(5, 45), float32] */;
  %572 = reshape(%571, newshape=[225]) /* ty=Tensor[(225), float32] */;
  %573 = @func_10388(%572) /* ty=(Tensor[(7, 2, 13), float32], Tensor[(7, ?, 13), int16], Tensor[(7, ?, 13), bool], Tensor[(225), float32]) */;
  %574 = cast(meta[relay.Constant][21] /* ty=Tensor[(324), float64] */, dtype="float64") /* ty=Tensor[(324), float64] */;
  %575 = reshape(%574, newshape=[9, 12, 3]) /* ty=Tensor[(9, 12, 3), float64] */;
  %576 = @func_656(%575) /* ty=(Tensor[(9, 12, 3), float64],) */;
  %577 = sigmoid(%566) /* ty=Tensor[(4, 3, 1), float32] */;
  %578 = @func_6006() /* ty=Tensor[(7, 1, 13), float64] */;
  %579 = %567.0;
  %580 = %570.2;
  %581 = %573.2;
  %582 = %576.0;
  (%577, %578, %579, %580, %var_10744, %581, %582, meta[relay.Constant][21] /* ty=Tensor[(324), float64] */)
}

def @func_7488(%var_7486: Tensor[(360), int8], %var_7487: Tensor[(3, 135), float32]) -> (Tensor[(7, ?, 13), int16], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(225), int32], Tensor[(12, 10, 3), bool], Tensor[(360), int8], Tensor[(3, 135), float32]) {
  %596 = fn (%var_7473: Tensor[(360), int8], %var_7474: Tensor[(3, 135), float32]) -> (Tensor[(7, ?, 13), int16], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(225), int32], Tensor[(12, 10, 3), bool], Tensor[(360), int8], Tensor[(3, 135), float32]) {
    %583 = @func_4429() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(7, 2, 13), bool]) */;
    %584 = @func_5317() /* ty=(Tensor[(5, 3, 15), float32], Tensor[(7, 1, 13), float64]) */;
    %585 = @func_3816() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(3, 14, 12), float32], Tensor[(504), float32], Tensor[(1800), int8]) */;
    %586 = cast(%var_7473, dtype="int8") /* ty=Tensor[(360), int8] */;
    %587 = cast(%var_7474, dtype="float32") /* ty=Tensor[(3, 135), float32] */;
    %588 = reshape(%586, newshape=[360]) /* ty=Tensor[(360), int8] */;
    %589 = reshape(%587, newshape=[405]) /* ty=Tensor[(405), float32] */;
    %590 = @func_5631(%588, %589) /* ty=(Tensor[(225), int32], Tensor[(12, 10, 3), bool], Tensor[(360), int8], Tensor[(3, 15, 9), float32], Tensor[(405), float32]) */;
    %591 = %583.0;
    %592 = %584.1;
    %593 = %585.0;
    %594 = @func_5155() /* ty=Tensor[(225), int32] */;
    %595 = %590.1;
    (%591, %592, %593, %594, %595, %var_7473, %var_7474)
  };
  %596(%var_7486, %var_7487) /* ty=(Tensor[(7, ?, 13), int16], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(225), int32], Tensor[(12, 10, 3), bool], Tensor[(360), int8], Tensor[(3, 135), float32]) */
}

def @func_12581() -> Tensor[(225), int32] {
  %597 = fn () -> Tensor[(225), int32] {
    @func_5078() /* ty=Tensor[(225), int32] */
  };
  %597() /* ty=Tensor[(225), int32] */
}

def @func_13442() -> Tensor[(225), int32] {
  %599 = fn () -> Tensor[(225), int32] {
    %598 = @func_10931() /* ty=(Tensor[(225), int32],) */;
    %598.0
  };
  %599() /* ty=Tensor[(225), int32] */
}

def @func_17759() -> Tensor[(7, 1, 13), float64] {
  %601 = fn () -> Tensor[(7, 1, 13), float64] {
    %600 = @func_17233() /* ty=(Tensor[(7, 1, 13), float64],) */;
    %600.0
  };
  %601() /* ty=Tensor[(7, 1, 13), float64] */
}

def @func_9420() -> Tensor[(7, 1, 13), float64] {
  %602 = @func_3776() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %602.0
}

def @func_5892() -> (Tensor[(7, ?, 13), int16], Tensor[(7, 1, 13), float64]) {
  %605 = fn () -> (Tensor[(7, ?, 13), int16], Tensor[(7, 1, 13), float64]) {
    %603 = @func_4767() /* ty=Tensor[(7, ?, 13), int16] */;
    %604 = @func_5740() /* ty=Tensor[(7, 1, 13), float64] */;
    (%603, %604)
  };
  %605() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(7, 1, 13), float64]) */
}

def @func_16428() -> Tensor[(5, 3, 15), float32] {
  @func_16426() /* ty=Tensor[(5, 3, 15), float32] */
}

def @func_5784() -> Tensor[(7, 1, 13), float64] {
  %606 = @func_4886() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %606.0
}

def @func_14691(%var_14689: Tensor[(1183), float64]) -> (Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 13, 13), float64], Tensor[(1183), float64]) {
  @func_14688(%var_14689) /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 13, 13), float64], Tensor[(1183), float64]) */
}

def @func_13372(%var_13370: Tensor[(11, 2, 10), float32]) -> (Tensor[(11, 2, 10), float32], Tensor[(7, 1, 13), float64]) {
  @func_13369(%var_13370) /* ty=(Tensor[(11, 2, 10), float32], Tensor[(7, 1, 13), float64]) */
}

def @func_4171() -> (Tensor[(7, 1, 13), float64], Tensor[(225), int32], Tensor[(5, 3, 15), float32]) {
  @func_4169() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(225), int32], Tensor[(5, 3, 15), float32]) */
}

def @func_5987() -> (Tensor[(7, 1, 13), float64], Tensor[(7, ?, 13), int16], Tensor[(7, 1, 13), float32]) {
  %612 = fn () -> (Tensor[(7, 1, 13), float64], Tensor[(7, ?, 13), int16], Tensor[(7, 1, 13), float32]) {
    %607 = @func_5808() /* ty=Tensor[(7, 1, 13), float64] */;
    %608 = cast(%607, dtype="float32") /* ty=Tensor[(7, 1, 13), float32] */;
    %609 = @func_3901() /* ty=Tensor[(7, 1, 13), float64] */;
    %610 = @func_4767() /* ty=Tensor[(7, ?, 13), int16] */;
    %611 = sin(%608) /* ty=Tensor[(7, 1, 13), float32] */;
    (%609, %610, %611)
  };
  %612() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, ?, 13), int16], Tensor[(7, 1, 13), float32]) */
}

def @func_11165() -> (Tensor[(7, 1, 13), float64], Tensor[(324), float64], Tensor[(5, 3, 15), float32]) {
  %613 = @func_10306() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %614 = @func_9363() /* ty=(Tensor[(324), float64],) */;
  %615 = @func_5279() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(5, 3, 15), float32], Tensor[(504), float32]) */;
  %616 = %613.0;
  %617 = %614.0;
  %618 = %615.1;
  (%616, %617, %618)
}

def @func_10610() -> (Tensor[(7, 1, 13), float64],) {
  %621 = fn () -> (Tensor[(7, 1, 13), float64],) {
    %619 = @func_8173() /* ty=(Tensor[(7, 1, 13), float64],) */;
    %620 = %619.0;
    (%620,)
  };
  %621() /* ty=(Tensor[(7, 1, 13), float64],) */
}

def @func_16472() -> (Tensor[(7, 1, 13), float64],) {
  %622 = @func_14212() /* ty=Tensor[(7, 1, 13), float64] */;
  (%622,)
}

def @func_14386() -> (Tensor[(1800), int8],) {
  @func_14384() /* ty=(Tensor[(1800), int8],) */
}

def @func_10931() -> (Tensor[(225), int32],) {
  %623 = @func_10586() /* ty=(Tensor[(225), int32], Tensor[(13, 4, 5), float64], Tensor[(130, 2), float32]) */;
  %624 = %623.0;
  (%624,)
}

def @func_9163() -> Tensor[(7, ?, 13), bool] {
  @func_6237() /* ty=Tensor[(7, ?, 13), bool] */
}

def @func_12828() -> (Tensor[(7, 1, 13), float64],) {
  %626 = fn () -> (Tensor[(7, 1, 13), float64],) {
    %625 = @func_9628() /* ty=Tensor[(7, 1, 13), float64] */;
    (%625,)
  };
  %626() /* ty=(Tensor[(7, 1, 13), float64],) */
}

def @func_7857(%var_7856: Tensor[(3, 14, 12), float32]) -> (Tensor[(3, 14, 12), bool],) {
  %633 = fn (%var_7819: Tensor[(3, 14, 12), float32]) -> (Tensor[(3, 14, 12), bool],) {
    %627 = @func_4497() /* ty=Tensor[(3, 14, 12), float32] */;
    %628 = cast(%var_7819, dtype="bool") /* ty=Tensor[(3, 14, 12), bool] */;
    %629 = shape_of(%627, dtype="int32") /* ty=Tensor[(3), int32] */;
    %630 = cast(%627, dtype="bool") /* ty=Tensor[(3, 14, 12), bool] */;
    %631 = dyn.reshape(%628, %629, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %632 = logical_and(%630, %631) /* ty=Tensor[(3, 14, 12), bool] */;
    (%632,)
  };
  %633(%var_7856) /* ty=(Tensor[(3, 14, 12), bool],) */
}

def @func_10191() -> (Tensor[(7, ?, 13), uint32], Tensor[(5, 3, 15), int32], Tensor[(9, 36), float64]) {
  @func_10189() /* ty=(Tensor[(7, ?, 13), uint32], Tensor[(5, 3, 15), int32], Tensor[(9, 36), float64]) */
}

def @func_17070() -> (Tensor[(7, 1, 13), float64], Tensor[(7, ?, 13), int16]) {
  %634 = @func_13694() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(1, 1, 15), uint8], Tensor[(7, 1, 13), float64]) */;
  %635 = @func_6698() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(225), int32]) */;
  %636 = %634.2;
  %637 = %635.0;
  (%636, %637)
}

def @func_15687() -> (Tensor[(7, 1, 13), float64], Tensor[(225), int32], Tensor[(7, 1, 13), float64]) {
  @func_15685() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(225), int32], Tensor[(7, 1, 13), float64]) */
}

def @func_9446() -> (Tensor[(7, 1, 13), float64],) {
  @func_9444() /* ty=(Tensor[(7, 1, 13), float64],) */
}

def @func_4366() -> Tensor[(7, 1, 13), float64] {
  @func_4364() /* ty=Tensor[(7, 1, 13), float64] */
}

def @func_14875() -> (Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(5, 3, 15), int8], Tensor[(5, 3, 15), float32], Tensor[(7, ?, 13), bool]) {
  %654 = fn () -> (Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(5, 3, 15), int8], Tensor[(5, 3, 15), float32], Tensor[(7, ?, 13), bool]) {
    %638 = @func_9444() /* ty=(Tensor[(7, 1, 13), float64],) */;
    %639 = cast(meta[relay.Constant][22] /* ty=Tensor[(225, 1), int32] */, dtype="int32") /* ty=Tensor[(225, 1), int32] */;
    %640 = reshape(%639, newshape=[5, 3, 15]) /* ty=Tensor[(5, 3, 15), int32] */;
    %641 = @func_2159(%640) /* ty=Tensor[(5, 3, 15), int32] */;
    %642 = cast(meta[relay.Constant][22] /* ty=Tensor[(225, 1), int32] */, dtype="int8") /* ty=Tensor[(225, 1), int8] */;
    %643 = shape_of(%641, dtype="int32") /* ty=Tensor[(3), int32] */;
    %644 = cast(%641, dtype="int8") /* ty=Tensor[(5, 3, 15), int8] */;
    %645 = dyn.reshape(%642, %643, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %646 = bitwise_and(%644, %645) /* ty=Tensor[(5, 3, 15), int8] */;
    %647 = cast(%646, dtype="float32") /* ty=Tensor[(5, 3, 15), float32] */;
    %648 = reshape(%647, newshape=[5, 3, 15]) /* ty=Tensor[(5, 3, 15), float32] */;
    %649 = @func_10459(%648) /* ty=(Tensor[(5, 3, 15), bool], Tensor[(5, 3, 15), float32]) */;
    %650 = %638.0;
    %651 = @func_3901() /* ty=Tensor[(7, 1, 13), float64] */;
    %652 = %649.1;
    %653 = @func_9163() /* ty=Tensor[(7, ?, 13), bool] */;
    (%650, %651, %646, %652, %653)
  };
  %654() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(5, 3, 15), int8], Tensor[(5, 3, 15), float32], Tensor[(7, ?, 13), bool]) */
}

def @func_11924(%var_11921: Tensor[(6, 1, 8), uint64], %var_11922: Tensor[(6, 5, 8), uint64], %var_11923: Tensor[(6, 5, 8), uint64]) -> (Tensor[(6, 5, 8), uint64], Tensor[(6, 5, 8), float32], Tensor[(7, 1, 13), float64], Tensor[(1800), int8]) {
  @func_11919(%var_11921, %var_11922, %var_11923) /* ty=(Tensor[(6, 5, 8), uint64], Tensor[(6, 5, 8), float32], Tensor[(7, 1, 13), float64], Tensor[(1800), int8]) */
}

def @func_6094() -> (Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) {
  %655 = @func_5391() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %656 = %655.0;
  %657 = @func_5784() /* ty=Tensor[(7, 1, 13), float64] */;
  %658 = @func_5740() /* ty=Tensor[(7, 1, 13), float64] */;
  (%656, %657, %658)
}

def @func_17190(%var_17188: Tensor[(1183), float64]) -> (Tensor[(7, 1, 13), float64], Tensor[(7, 2, 13), int16], Tensor[(26, 7), float64], Tensor[(1183), float64]) {
  @func_17187(%var_17188) /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, 2, 13), int16], Tensor[(26, 7), float64], Tensor[(1183), float64]) */
}

def @func_3803(%var_3800: Tensor[(9, 36), float64], %var_3801: Tensor[(504), float32], %var_3802: Tensor[(1800), int8]) -> (Tensor[(7, 3, 13), bool], Tensor[(9, 12, 3), float64], Tensor[(9, 36), float64], Tensor[(3, 14, 12), float32], Tensor[(504), float32], Tensor[(1800), int8]) {
  %674 = fn (%var_3792: Tensor[(9, 36), float64], %var_3795: Tensor[(504), float32], %var_3796: Tensor[(1800), int8]) -> (Tensor[(7, 3, 13), bool], Tensor[(9, 12, 3), float64], Tensor[(9, 36), float64], Tensor[(3, 14, 12), float32], Tensor[(504), float32], Tensor[(1800), int8]) {
    %659 = @func_3776() /* ty=(Tensor[(7, 1, 13), float64],) */;
    %660 = %659.0;
    %661 = cast(%660, dtype="bool") /* ty=Tensor[(7, 1, 13), bool] */;
    %662 = cast(meta[relay.Constant][23] /* ty=Tensor[(7, 3, 13), float64] */, dtype="bool") /* ty=Tensor[(7, 3, 13), bool] */;
    %663 = cast(%var_3792, dtype="float64") /* ty=Tensor[(9, 36), float64] */;
    %664 = reshape(%663, newshape=[9, 12, 3]) /* ty=Tensor[(9, 12, 3), float64] */;
    %665 = @func_656(%664) /* ty=(Tensor[(9, 12, 3), float64],) */;
    %666 = cast(%var_3795, dtype="float32") /* ty=Tensor[(504), float32] */;
    %667 = cast(%var_3796, dtype="int8") /* ty=Tensor[(1800), int8] */;
    %668 = reshape(%666, newshape=[3, 14, 12]) /* ty=Tensor[(3, 14, 12), float32] */;
    %669 = reshape(%667, newshape=[1800]) /* ty=Tensor[(1800), int8] */;
    %670 = @func_2958(%668, %669) /* ty=(Tensor[(3, 14, 12), float32], Tensor[(15, 12, 10), int8], Tensor[(1800), int8], Tensor[(13, 4, 5), float64]) */;
    %671 = not_equal(%661, %662) /* ty=Tensor[(7, 3, 13), bool] */;
    %672 = %665.0;
    %673 = %670.0;
    (%671, %672, %var_3792, %673, %var_3795, %var_3796)
  };
  %674(%var_3800, %var_3801, %var_3802) /* ty=(Tensor[(7, 3, 13), bool], Tensor[(9, 12, 3), float64], Tensor[(9, 36), float64], Tensor[(3, 14, 12), float32], Tensor[(504), float32], Tensor[(1800), int8]) */
}

def @func_10152() -> Tensor[(324), float64] {
  %676 = fn () -> Tensor[(324), float64] {
    %675 = @func_7602() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(324), float64]) */;
    %675.1
  };
  %676() /* ty=Tensor[(324), float64] */
}

def @func_10424() -> Tensor[(7, 1, 13), float64] {
  @func_10422() /* ty=Tensor[(7, 1, 13), float64] */
}

def @func_9422() -> Tensor[(7, 1, 13), float64] {
  @func_9420() /* ty=Tensor[(7, 1, 13), float64] */
}

def @func_14836() -> Tensor[(13, 8, 14), bool] {
  %677 = cast(meta[relay.Constant][25] /* ty=Tensor[(13, 8, 14), float64] */, dtype="float64") /* ty=Tensor[(13, 8, 14), float64] */;
  %678 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(13, 8, 14), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %679 = cast(meta[relay.Constant][24] /* ty=Tensor[(13, 8, 14), float64] */, dtype="float64") /* ty=Tensor[(13, 8, 14), float64] */;
  %680 = dyn.reshape(%677, %678, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %681 = mod(%679, %680) /* ty=Tensor[(13, 8, 14), float64] */;
  %682 = cast(meta[relay.Constant][25] /* ty=Tensor[(13, 8, 14), float64] */, dtype="bool") /* ty=Tensor[(13, 8, 14), bool] */;
  %683 = shape_of(%681, dtype="int32") /* ty=Tensor[(3), int32] */;
  %684 = cast(%681, dtype="bool") /* ty=Tensor[(13, 8, 14), bool] */;
  %685 = dyn.reshape(%682, %683, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%684, %685) /* ty=Tensor[(13, 8, 14), bool] */
}

def @func_14405() -> (Tensor[(7, 1, 13), float64],) {
  %688 = fn () -> (Tensor[(7, 1, 13), float64],) {
    %686 = @func_6844() /* ty=(Tensor[(7, ?, 13), bool], Tensor[(7, 1, 13), float64]) */;
    %687 = %686.1;
    (%687,)
  };
  %688() /* ty=(Tensor[(7, 1, 13), float64],) */
}

def @func_17864() -> (Tensor[(7, 1, 13), float64],) {
  %689 = @func_7602() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(324), float64]) */;
  %690 = %689.0;
  (%690,)
}

def @func_10308() -> (Tensor[(7, 1, 13), float64],) {
  @func_10306() /* ty=(Tensor[(7, 1, 13), float64],) */
}

def @func_15451() -> (Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) {
  %694 = fn () -> (Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) {
    %691 = @func_14135() /* ty=(Tensor[(7, 1, 13), float64],) */;
    %692 = %691.0;
    %693 = @func_9222() /* ty=Tensor[(7, 1, 13), float64] */;
    (%692, %693)
  };
  %694() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) */
}

def @func_4364() -> Tensor[(7, 1, 13), float64] {
  %695 = @func_4169() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(225), int32], Tensor[(5, 3, 15), float32]) */;
  %695.0
}

def @func_6237() -> Tensor[(7, ?, 13), bool] {
  %696 = @func_5928() /* ty=(Tensor[(7, ?, 13), int16],) */;
  %697 = %696.0;
  %698 = @func_4364() /* ty=Tensor[(7, 1, 13), float64] */;
  %699 = cast(%698, dtype="bool") /* ty=Tensor[(7, 1, 13), bool] */;
  %700 = shape_of(%697, dtype="int32") /* ty=Tensor[(3), int32] */;
  %701 = cast(%697, dtype="bool") /* ty=Tensor[(7, ?, 13), bool] */;
  %702 = dyn.reshape(%699, %700, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%701, %702) /* ty=Tensor[(7, ?, 13), bool] */
}

def @func_6440(%var_6435: Tensor[(14, 12, 3), float64]) -> (Tensor[(14, 12, 3), float64],) {
  %703 = cast(%var_6435, dtype="float64") /* ty=Tensor[(14, 12, 3), float64] */;
  %704 = log2(%703) /* ty=Tensor[(14, 12, 3), float64] */;
  (%704,)
}

def @func_4663() -> Tensor[(225), int32] {
  %705 = fn () -> Tensor[(225), int32] {
    @func_4538() /* ty=Tensor[(225), int32] */
  };
  %705() /* ty=Tensor[(225), int32] */
}

def @func_7948() -> (Tensor[(3, 14, 12), float64],) {
  @func_7946() /* ty=(Tensor[(3, 14, 12), float64],) */
}

def @func_10775(%var_10773: Tensor[(5, 45), int32]) -> (Tensor[(4, 3, 1), float32], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(225), int32], Tensor[(5, 45), int32], Tensor[(7, ?, 13), bool], Tensor[(9, 12, 3), float64], Tensor[(324), float64]) {
  @func_10772(%var_10773) /* ty=(Tensor[(4, 3, 1), float32], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(225), int32], Tensor[(5, 45), int32], Tensor[(7, ?, 13), bool], Tensor[(9, 12, 3), float64], Tensor[(324), float64]) */
}

def @func_11655(%var_11624: Tensor[(4, 15, 13), int64]) -> (Tensor[(4, 15, 13), bool], Tensor[(1, 182), float32], Tensor[(7, 110), float64], Tensor[(182), float32], Tensor[(225), int32]) {
  %706 = cast(%var_11624, dtype="bool") /* ty=Tensor[(4, 15, 13), bool] */;
  %707 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(4, 15, 13), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %708 = cast(meta[relay.Constant][26] /* ty=Tensor[(4, 15, 13), int64] */, dtype="bool") /* ty=Tensor[(4, 15, 13), bool] */;
  %709 = dyn.reshape(%706, %707, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %710 = cast(meta[relay.Constant][27] /* ty=Tensor[(7, 110), float64] */, dtype="float64") /* ty=Tensor[(7, 110), float64] */;
  %711 = cast(meta[relay.Constant][28] /* ty=Tensor[(182), float32] */, dtype="float32") /* ty=Tensor[(182), float32] */;
  %712 = reshape(%710, newshape=[11, 5, 14]) /* ty=Tensor[(11, 5, 14), float64] */;
  %713 = reshape(%711, newshape=[1, 182]) /* ty=Tensor[(1, 182), float32] */;
  %714 = @func_8088(%712, %713) /* ty=(Tensor[(11, 5, 14), float64], Tensor[(5, 3, 15), float32], Tensor[(225), float64], Tensor[(1, 182), float32]) */;
  %715 = greater(%708, %709) /* ty=Tensor[(4, 15, 13), bool] */;
  %716 = %714.3;
  %717 = @func_5155() /* ty=Tensor[(225), int32] */;
  (%715, %716, meta[relay.Constant][27] /* ty=Tensor[(7, 110), float64] */, meta[relay.Constant][28] /* ty=Tensor[(182), float32] */, %717)
}

def @func_7332() -> (Tensor[(7, ?, 13), int16], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 2, 13), bool], Tensor[(7, 1, 13), float64]) {
  %728 = fn () -> (Tensor[(7, ?, 13), int16], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 2, 13), bool], Tensor[(7, 1, 13), float64]) {
    %718 = @func_5928() /* ty=(Tensor[(7, ?, 13), int16],) */;
    %719 = @func_5093() /* ty=(Tensor[(7, 1, 13), float64],) */;
    %720 = @func_5093() /* ty=(Tensor[(7, 1, 13), float64],) */;
    %721 = @func_4429() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(7, 2, 13), bool]) */;
    %722 = @func_6929() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(5, 3, 15), float32]) */;
    %723 = %718.0;
    %724 = %719.0;
    %725 = %720.0;
    %726 = %721.1;
    %727 = %722.2;
    (%723, %724, %725, %726, %727)
  };
  %728() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 2, 13), bool], Tensor[(7, 1, 13), float64]) */
}

def @func_4292() -> Tensor[(7, 1, 13), float64] {
  %729 = @func_3776() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %729.0
}

def @func_2273(%var_2180: Tensor[(2, 13, 8), float64], %var_2193: Tensor[(225), int32], %var_2201: Tensor[(324), float64]) -> (Tensor[(5, 3, 15), int32], Tensor[(225), int32], Tensor[(9, 12, 3), float64], Tensor[(324), float64], Tensor[(9, 12, 3), float64], Tensor[(2, 13, 8), float64], Tensor[(9, 12, 3), float64]) {
  %730 = cast(%var_2193, dtype="int32") /* ty=Tensor[(225), int32] */;
  %731 = reshape(%730, newshape=[5, 3, 15]) /* ty=Tensor[(5, 3, 15), int32] */;
  %732 = cast(%var_2201, dtype="float64") /* ty=Tensor[(324), float64] */;
  %733 = reshape(%732, newshape=[9, 12, 3]) /* ty=Tensor[(9, 12, 3), float64] */;
  %734 = @func_656(%733) /* ty=(Tensor[(9, 12, 3), float64],) */;
  %735 = cast(%var_2201, dtype="float64") /* ty=Tensor[(324), float64] */;
  %736 = reshape(%735, newshape=[9, 12, 3]) /* ty=Tensor[(9, 12, 3), float64] */;
  %737 = @func_656(%736) /* ty=(Tensor[(9, 12, 3), float64],) */;
  %738 = cast(%var_2180, dtype="float64") /* ty=Tensor[(2, 13, 8), float64] */;
  %739 = atanh(%738) /* ty=Tensor[(2, 13, 8), float64] */;
  %740 = cast(%739, dtype="float64") /* ty=Tensor[(2, 13, 8), float64] */;
  %741 = %734.0;
  %742 = cast(%741, dtype="float64") /* ty=Tensor[(9, 12, 3), float64] */;
  %743 = reshape(%742, newshape=[9, 12, 3]) /* ty=Tensor[(9, 12, 3), float64] */;
  %744 = @func_656(%743) /* ty=(Tensor[(9, 12, 3), float64],) */;
  %745 = @func_2159(%731) /* ty=Tensor[(5, 3, 15), int32] */;
  %746 = %737.0;
  %747 = sqrt(%740) /* ty=Tensor[(2, 13, 8), float64] */;
  %748 = %744.0;
  (%745, %var_2193, %741, %var_2201, %746, %747, %748)
}

def @func_14747() -> (Tensor[(225), int32],) {
  %750 = fn () -> (Tensor[(225), int32],) {
    %749 = @func_12580() /* ty=Tensor[(225), int32] */;
    (%749,)
  };
  %750() /* ty=(Tensor[(225), int32],) */
}

def @func_17612() -> (Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) {
  @func_17610() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) */
}

def @func_13087(%var_13084: Tensor[(324), float64]) -> (Tensor[(7, ?, 13), int16], Tensor[(225), int32], Tensor[(7, ?, 13), int16], Tensor[(8, 9, ?), uint64], Tensor[(72), float32], Tensor[(7, 1, 13), float64], Tensor[(9, 12, 3), float64], Tensor[(4, 52), float64], Tensor[(324), float64]) {
  %751 = @func_5928() /* ty=(Tensor[(7, ?, 13), int16],) */;
  %752 = @func_7002() /* ty=(Tensor[(7, ?, 13), int16],) */;
  %753 = cast(meta[relay.Constant][29] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %754 = reshape(%753, newshape=[8, 9, 1]) /* ty=Tensor[(8, 9, 1), float32] */;
  %755 = @func_10306() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %756 = cast(meta[relay.Constant][30] /* ty=Tensor[(4, 52), float64] */, dtype="float64") /* ty=Tensor[(4, 52), float64] */;
  %757 = @func_12580() /* ty=Tensor[(225), int32] */;
  %758 = cast(%757, dtype="int32") /* ty=Tensor[(225), int32] */;
  %759 = cast(%var_13084, dtype="float64") /* ty=Tensor[(324), float64] */;
  %760 = reshape(%756, newshape=[2, 13, 8]) /* ty=Tensor[(2, 13, 8), float64] */;
  %761 = reshape(%758, newshape=[225]) /* ty=Tensor[(225), int32] */;
  %762 = reshape(%759, newshape=[324]) /* ty=Tensor[(324), float64] */;
  %763 = @func_2273(%760, %761, %762) /* ty=(Tensor[(5, 3, 15), int32], Tensor[(225), int32], Tensor[(9, 12, 3), float64], Tensor[(324), float64], Tensor[(9, 12, 3), float64], Tensor[(2, 13, 8), float64], Tensor[(9, 12, 3), float64]) */;
  %764 = %751.0;
  %765 = %752.0;
  %766 = @func_9594(%754) /* ty=Tensor[(8, 9, ?), uint64] */;
  %767 = %755.0;
  %768 = %763.4;
  (%764, %757, %765, %766, meta[relay.Constant][29] /* ty=Tensor[(72), float32] */, %767, %768, meta[relay.Constant][30] /* ty=Tensor[(4, 52), float64] */, %var_13084)
}

def @func_16503() -> Tensor[(7, 1, 13), float64] {
  @func_16501() /* ty=Tensor[(7, 1, 13), float64] */
}

def @func_12334() -> (Tensor[(13, 4, 5), float64], Tensor[(7, 1, 13), float64]) {
  %772 = fn () -> (Tensor[(13, 4, 5), float64], Tensor[(7, 1, 13), float64]) {
    %769 = @func_11826() /* ty=(Tensor[(13, 4, 5), float64],) */;
    %770 = %769.0;
    %771 = @func_10339() /* ty=Tensor[(7, 1, 13), float64] */;
    (%770, %771)
  };
  %772() /* ty=(Tensor[(13, 4, 5), float64], Tensor[(7, 1, 13), float64]) */
}

def @func_5742() -> Tensor[(7, 1, 13), float64] {
  @func_5740() /* ty=Tensor[(7, 1, 13), float64] */
}

def @func_9691() -> (Tensor[(7, 1, 13), float64], Tensor[(3, 14, 12), float32]) {
  @func_9689() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(3, 14, 12), float32]) */
}

def @func_13940() -> (Tensor[(7, 1, 13), float64], Tensor[(225), int32]) {
  %775 = fn () -> (Tensor[(7, 1, 13), float64], Tensor[(225), int32]) {
    %773 = @func_11406() /* ty=Tensor[(7, 1, 13), float64] */;
    %774 = @func_13441() /* ty=Tensor[(225), int32] */;
    (%773, %774)
  };
  %775() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(225), int32]) */
}

def @func_5393() -> (Tensor[(7, 1, 13), float64],) {
  @func_5391() /* ty=(Tensor[(7, 1, 13), float64],) */
}

def @func_17983() -> (Tensor[(225), int32],) {
  %777 = fn () -> (Tensor[(225), int32],) {
    %776 = @func_4538() /* ty=Tensor[(225), int32] */;
    (%776,)
  };
  %777() /* ty=(Tensor[(225), int32],) */
}

def @func_12290() -> (Tensor[(324), float64],) {
  %778 = @func_9363() /* ty=(Tensor[(324), float64],) */;
  %779 = %778.0;
  (%779,)
}

def @func_6169() -> (Tensor[(7, 1, 13), float64], Tensor[(5, 3, 15), float32], Tensor[(15), uint8], Tensor[(504), float32]) {
  %788 = fn () -> (Tensor[(7, 1, 13), float64], Tensor[(5, 3, 15), float32], Tensor[(15), uint8], Tensor[(504), float32]) {
    %780 = @func_3776() /* ty=(Tensor[(7, 1, 13), float64],) */;
    %781 = @func_4169() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(225), int32], Tensor[(5, 3, 15), float32]) */;
    %782 = cast(meta[relay.Constant][31] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
    %783 = reshape(%782, newshape=[504]) /* ty=Tensor[(504), float32] */;
    %784 = @func_4931(%783) /* ty=(Tensor[(225), int32], Tensor[(1, 1, 15), uint8], Tensor[(15), uint8], Tensor[(15, 12, 10), int8], Tensor[(504), float32], Tensor[(1800), int8]) */;
    %785 = %780.0;
    %786 = %781.2;
    %787 = %784.2;
    (%785, %786, %787, meta[relay.Constant][31] /* ty=Tensor[(504), float32] */)
  };
  %788() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(5, 3, 15), float32], Tensor[(15), uint8], Tensor[(504), float32]) */
}

def @func_15426() -> (Tensor[(324), float64],) {
  @func_15424() /* ty=(Tensor[(324), float64],) */
}

def @func_6185() -> (Tensor[(7, ?, 13), int16], Tensor[(5, 45), int32], Tensor[(324), float64]) {
  %794 = fn () -> (Tensor[(7, ?, 13), int16], Tensor[(5, 45), int32], Tensor[(324), float64]) {
    %789 = cast(meta[relay.Constant][32] /* ty=Tensor[(324), float64] */, dtype="float64") /* ty=Tensor[(324), float64] */;
    %790 = reshape(%789, newshape=[324]) /* ty=Tensor[(324), float64] */;
    %791 = @func_4568(%790) /* ty=(Tensor[(1800), int8], Tensor[(5, 3, 15), int32], Tensor[(208), float64], Tensor[(5, 45), int32], Tensor[(324), float64]) */;
    %792 = @func_4767() /* ty=Tensor[(7, ?, 13), int16] */;
    %793 = %791.3;
    (%792, %793, meta[relay.Constant][32] /* ty=Tensor[(324), float64] */)
  };
  %794() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(5, 45), int32], Tensor[(324), float64]) */
}

def @func_9597(%var_9595: Tensor[(8, 9, 1), float32]) -> Tensor[(8, 9, ?), uint64] {
  @func_9594(%var_9595) /* ty=Tensor[(8, 9, ?), uint64] */
}

def @func_10388(%var_10372: Tensor[(225), float32]) -> (Tensor[(7, 2, 13), float32], Tensor[(7, ?, 13), int16], Tensor[(7, ?, 13), bool], Tensor[(225), float32]) {
  %795 = @func_6844() /* ty=(Tensor[(7, ?, 13), bool], Tensor[(7, 1, 13), float64]) */;
  %796 = %795.1;
  %797 = cast(%796, dtype="float32") /* ty=Tensor[(7, 1, 13), float32] */;
  %798 = cast(meta[relay.Constant][33] /* ty=Tensor[(7, 2, 13), float64] */, dtype="float32") /* ty=Tensor[(7, 2, 13), float32] */;
  %799 = @func_4429() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(7, 2, 13), bool]) */;
  %800 = cast(%var_10372, dtype="float32") /* ty=Tensor[(225), float32] */;
  %801 = reshape(%800, newshape=[225]) /* ty=Tensor[(225), float32] */;
  %802 = @func_8269(%801) /* ty=(Tensor[(7, 1, 13), float64], Tensor[(5, 3, 15), int64], Tensor[(225), float32], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(7, ?, 13), bool]) */;
  %803 = divide(%797, %798) /* ty=Tensor[(7, 2, 13), float32] */;
  %804 = %799.0;
  %805 = %802.5;
  (%803, %804, %805, %var_10372)
}

def @func_10189() -> (Tensor[(7, ?, 13), uint32], Tensor[(5, 3, 15), int32], Tensor[(9, 36), float64]) {
  %806 = @func_7437() /* ty=(Tensor[(1, 1, 15), uint8], Tensor[(15), uint8], Tensor[(225), int32], Tensor[(225), int32], Tensor[(7, ?, 13), uint32], Tensor[(7, 1, 13), float64]) */;
  %807 = cast(meta[relay.Constant][34] /* ty=Tensor[(9, 36), float64] */, dtype="float64") /* ty=Tensor[(9, 36), float64] */;
  %808 = reshape(%807, newshape=[324]) /* ty=Tensor[(324), float64] */;
  %809 = @func_4568(%808) /* ty=(Tensor[(1800), int8], Tensor[(5, 3, 15), int32], Tensor[(208), float64], Tensor[(5, 45), int32], Tensor[(324), float64]) */;
  %810 = %806.4;
  %811 = %809.1;
  (%810, %811, meta[relay.Constant][34] /* ty=Tensor[(9, 36), float64] */)
}

def @func_10688(%var_10687: Tensor[(7, 13, 13), float64]) -> Tensor[(7, 13, 13), float64] {
  %815 = fn (%var_10676: Tensor[(7, 13, 13), float64]) -> Tensor[(7, 13, 13), float64] {
    %812 = @func_10061() /* ty=Tensor[(7, 1, 13), float64] */;
    %813 = cast(%812, dtype="float64") /* ty=Tensor[(7, 1, 13), float64] */;
    %814 = cast(%var_10676, dtype="float64") /* ty=Tensor[(7, 13, 13), float64] */;
    mod(%813, %814) /* ty=Tensor[(7, 13, 13), float64] */
  };
  %815(%var_10687) /* ty=Tensor[(7, 13, 13), float64] */
}

def @func_4498() -> Tensor[(3, 14, 12), float32] {
  %817 = fn () -> Tensor[(3, 14, 12), float32] {
    %816 = @func_3816() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(3, 14, 12), float32], Tensor[(504), float32], Tensor[(1800), int8]) */;
    %816.1
  };
  %817() /* ty=Tensor[(3, 14, 12), float32] */
}

def @func_14339(%var_14322: Tensor[(225), int32]) -> Tensor[(225), float64] {
  %818 = @func_13441() /* ty=Tensor[(225), int32] */;
  %819 = cast(%var_14322, dtype="float64") /* ty=Tensor[(225), float64] */;
  %820 = shape_of(%818, dtype="int32") /* ty=Tensor[(1), int32] */;
  %821 = cast(%818, dtype="float64") /* ty=Tensor[(225), float64] */;
  %822 = dyn.reshape(%819, %820, newshape=[]) /* ty=Tensor[(?), float64] */;
  floor_divide(%821, %822) /* ty=Tensor[(225), float64] */
}

def @func_12457() -> (Tensor[(225), int32],) {
  %823 = @func_7788() /* ty=Tensor[(225), int32] */;
  (%823,)
}

def @func_15284() -> Tensor[(7, 1, 13), float64] {
  %824 = @func_5538() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) */;
  %824.2
}

def @func_10517() -> (Tensor[(9, 12, 3), float64], Tensor[(9, 36), float64], Tensor[(7, 2, 13), float32]) {
  %835 = fn () -> (Tensor[(9, 12, 3), float64], Tensor[(9, 36), float64], Tensor[(7, 2, 13), float32]) {
    %825 = cast(meta[relay.Constant][35] /* ty=Tensor[(9, 36), float64] */, dtype="float64") /* ty=Tensor[(9, 36), float64] */;
    %826 = reshape(%825, newshape=[9, 12, 3]) /* ty=Tensor[(9, 12, 3), float64] */;
    %827 = @func_656(%826) /* ty=(Tensor[(9, 12, 3), float64],) */;
    %828 = @func_4767() /* ty=Tensor[(7, ?, 13), int16] */;
    %829 = @func_6826() /* ty=(Tensor[(225), int32], Tensor[(7, 2, 13), float32]) */;
    %830 = %829.1;
    %831 = cast(%828, dtype="float32") /* ty=Tensor[(7, ?, 13), float32] */;
    %832 = cast(%830, dtype="float32") /* ty=Tensor[(7, 2, 13), float32] */;
    %833 = %827.0;
    %834 = mod(%831, %832) /* ty=Tensor[(7, 2, 13), float32] */;
    (%833, meta[relay.Constant][35] /* ty=Tensor[(9, 36), float64] */, %834)
  };
  %835() /* ty=(Tensor[(9, 12, 3), float64], Tensor[(9, 36), float64], Tensor[(7, 2, 13), float32]) */
}

def @func_17501() -> Tensor[(7, 1, 13), float64] {
  @func_17499() /* ty=Tensor[(7, 1, 13), float64] */
}

def @func_11791(%var_11772: Tensor[(9, 14, 10), float64]) -> (Tensor[(9, 14, 10), float64], Tensor[(7, ?, 13), bool]) {
  %836 = cast(%var_11772, dtype="float64") /* ty=Tensor[(9, 14, 10), float64] */;
  %837 = log(%836) /* ty=Tensor[(9, 14, 10), float64] */;
  %838 = @func_6237() /* ty=Tensor[(7, ?, 13), bool] */;
  (%837, %838)
}

def @func_5280() -> (Tensor[(7, 1, 13), float64], Tensor[(5, 3, 15), float32], Tensor[(504), float32]) {
  %845 = fn () -> (Tensor[(7, 1, 13), float64], Tensor[(5, 3, 15), float32], Tensor[(504), float32]) {
    %839 = @func_4206() /* ty=(Tensor[(7, 1, 13), float64],) */;
    %840 = @func_4316() /* ty=(Tensor[(5, 3, 15), float32],) */;
    %841 = @func_3816() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(3, 14, 12), float32], Tensor[(504), float32], Tensor[(1800), int8]) */;
    %842 = %839.0;
    %843 = %840.0;
    %844 = %841.2;
    (%842, %843, %844)
  };
  %845() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(5, 3, 15), float32], Tensor[(504), float32]) */
}

def @func_5472(%var_5471: Tensor[(225), int32]) -> Tensor[(225), float64] {
  %851 = fn (%var_5463: Tensor[(225), int32]) -> Tensor[(225), float64] {
    %846 = @func_5155() /* ty=Tensor[(225), int32] */;
    %847 = cast(%var_5463, dtype="float64") /* ty=Tensor[(225), float64] */;
    %848 = shape_of(%846, dtype="int32") /* ty=Tensor[(1), int32] */;
    %849 = cast(%846, dtype="float64") /* ty=Tensor[(225), float64] */;
    %850 = dyn.reshape(%847, %848, newshape=[]) /* ty=Tensor[(?), float64] */;
    add(%849, %850) /* ty=Tensor[(225), float64] */
  };
  %851(%var_5471) /* ty=Tensor[(225), float64] */
}

def @func_14384() -> (Tensor[(1800), int8],) {
  %852 = @func_13336() /* ty=(Tensor[(1800), int8], Tensor[(7, 1, 13), float64]) */;
  %853 = %852.0;
  (%853,)
}

def @func_1473(%var_1471: Tensor[(13, 4, 5), float64], %var_1472: Tensor[(13, 4, 5), float64]) -> (Tensor[(13, 4, 5), float64], Tensor[(13, 4, 5), float64]) {
  %861 = fn (%var_1427: Tensor[(13, 4, 5), float64], %var_1428: Tensor[(13, 4, 5), float64]) -> (Tensor[(13, 4, 5), float64], Tensor[(13, 4, 5), float64]) {
    %854 = cast(%var_1428, dtype="float64") /* ty=Tensor[(13, 4, 5), float64] */;
    %855 = shape_of(%var_1427, dtype="int32") /* ty=Tensor[(3), int32] */;
    %856 = cast(%var_1427, dtype="float64") /* ty=Tensor[(13, 4, 5), float64] */;
    %857 = dyn.reshape(%854, %855, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %858 = cast(%var_1428, dtype="float64") /* ty=Tensor[(13, 4, 5), float64] */;
    %859 = floor_divide(%856, %857) /* ty=Tensor[(13, 4, 5), float64] */;
    %860 = erf(%858) /* ty=Tensor[(13, 4, 5), float64] */;
    (%859, %860)
  };
  %861(%var_1471, %var_1472) /* ty=(Tensor[(13, 4, 5), float64], Tensor[(13, 4, 5), float64]) */
}

def @func_11658(%var_11656: Tensor[(4, 15, 13), int64]) -> (Tensor[(4, 15, 13), bool], Tensor[(1, 182), float32], Tensor[(7, 110), float64], Tensor[(182), float32], Tensor[(225), int32]) {
  @func_11655(%var_11656) /* ty=(Tensor[(4, 15, 13), bool], Tensor[(1, 182), float32], Tensor[(7, 110), float64], Tensor[(182), float32], Tensor[(225), int32]) */
}

def @func_12292() -> (Tensor[(324), float64],) {
  @func_12290() /* ty=(Tensor[(324), float64],) */
}

def @func_13696() -> (Tensor[(7, ?, 13), int16], Tensor[(1, 1, 15), uint8], Tensor[(7, 1, 13), float64]) {
  @func_13694() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(1, 1, 15), uint8], Tensor[(7, 1, 13), float64]) */
}

def @func_13626() -> (Tensor[(1, 1, 15), uint8], Tensor[(7, 1, 13), float64], Tensor[(324), float64]) {
  @func_13624() /* ty=(Tensor[(1, 1, 15), uint8], Tensor[(7, 1, 13), float64], Tensor[(324), float64]) */
}

def @func_6700() -> (Tensor[(7, ?, 13), int16], Tensor[(225), int32]) {
  @func_6698() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(225), int32]) */
}

def @func_8271(%var_8270: Tensor[(225), float32]) -> (Tensor[(7, 1, 13), float64], Tensor[(5, 3, 15), int64], Tensor[(225), float32], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(7, ?, 13), bool]) {
  %875 = fn (%var_8236: Tensor[(225), float32]) -> (Tensor[(7, 1, 13), float64], Tensor[(5, 3, 15), int64], Tensor[(225), float32], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(7, ?, 13), bool]) {
    %862 = @func_7740() /* ty=(Tensor[(7, 1, 13), float64],) */;
    %863 = cast(%var_8236, dtype="float32") /* ty=Tensor[(225), float32] */;
    %864 = reshape(%863, newshape=[5, 3, 15]) /* ty=Tensor[(5, 3, 15), float32] */;
    %865 = @func_8212(%864) /* ty=(Tensor[(7, 1, 13), float64], Tensor[(5, 3, 15), int64]) */;
    %866 = @func_5391() /* ty=(Tensor[(7, 1, 13), float64],) */;
    %867 = %862.0;
    %868 = cast(%867, dtype="float64") /* ty=Tensor[(7, 1, 13), float64] */;
    %869 = reshape(%868, newshape=[7, 1, 13]) /* ty=Tensor[(7, 1, 13), float64] */;
    %870 = @func_5682(%869) /* ty=(Tensor[(7, ?, 13), bool], Tensor[(7, 1, 13), float64]) */;
    %871 = %865.1;
    %872 = %866.0;
    %873 = @func_3901() /* ty=Tensor[(7, 1, 13), float64] */;
    %874 = %870.0;
    (%867, %871, %var_8236, %872, %873, %874)
  };
  %875(%var_8270) /* ty=(Tensor[(7, 1, 13), float64], Tensor[(5, 3, 15), int64], Tensor[(225), float32], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(7, ?, 13), bool]) */
}

def @func_17580() -> (Tensor[(5, 45), int32], Tensor[(7, 1, 13), float64]) {
  %880 = fn () -> (Tensor[(5, 45), int32], Tensor[(7, 1, 13), float64]) {
    %876 = @func_6184() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(5, 45), int32], Tensor[(324), float64]) */;
    %877 = @func_15949() /* ty=(Tensor[(3, 14, 12), float32], Tensor[(7, 1, 13), float64], Tensor[(14, 12, 3), float64], Tensor[(7, 1, 13), float64]) */;
    %878 = %876.1;
    %879 = %877.3;
    (%878, %879)
  };
  %880() /* ty=(Tensor[(5, 45), int32], Tensor[(7, 1, 13), float64]) */
}

def @func_11135(%var_11134: Tensor[(3, 108), float64]) -> (Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(3, 14, 12), float32], Tensor[(504), float32], Tensor[(1800), int8], Tensor[(9, 12, 3), float64], Tensor[(3, 108), float64]) {
  %899 = fn (%var_11124: Tensor[(3, 108), float64]) -> (Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(3, 14, 12), float32], Tensor[(504), float32], Tensor[(1800), int8], Tensor[(9, 12, 3), float64], Tensor[(3, 108), float64]) {
    %881 = @func_4206() /* ty=(Tensor[(7, 1, 13), float64],) */;
    %882 = @func_5538() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) */;
    %883 = cast(meta[relay.Constant][36] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
    %884 = cast(meta[relay.Constant][37] /* ty=Tensor[(1800), int8] */, dtype="int8") /* ty=Tensor[(1800), int8] */;
    %885 = reshape(%883, newshape=[3, 14, 12]) /* ty=Tensor[(3, 14, 12), float32] */;
    %886 = reshape(%884, newshape=[1800]) /* ty=Tensor[(1800), int8] */;
    %887 = @func_2958(%885, %886) /* ty=(Tensor[(3, 14, 12), float32], Tensor[(15, 12, 10), int8], Tensor[(1800), int8], Tensor[(13, 4, 5), float64]) */;
    %888 = cast(%var_11124, dtype="float64") /* ty=Tensor[(3, 108), float64] */;
    %889 = %887.0;
    %890 = cast(%889, dtype="float32") /* ty=Tensor[(3, 14, 12), float32] */;
    %891 = cast(meta[relay.Constant][37] /* ty=Tensor[(1800), int8] */, dtype="int8") /* ty=Tensor[(1800), int8] */;
    %892 = reshape(%888, newshape=[9, 36]) /* ty=Tensor[(9, 36), float64] */;
    %893 = reshape(%890, newshape=[504]) /* ty=Tensor[(504), float32] */;
    %894 = reshape(%891, newshape=[1800]) /* ty=Tensor[(1800), int8] */;
    %895 = @func_3799(%892, %893, %894) /* ty=(Tensor[(7, 3, 13), bool], Tensor[(9, 12, 3), float64], Tensor[(9, 36), float64], Tensor[(3, 14, 12), float32], Tensor[(504), float32], Tensor[(1800), int8]) */;
    %896 = %881.0;
    %897 = %882.2;
    %898 = %895.1;
    (%896, %897, %889, meta[relay.Constant][36] /* ty=Tensor[(504), float32] */, meta[relay.Constant][37] /* ty=Tensor[(1800), int8] */, %898, %var_11124)
  };
  %899(%var_11134) /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(3, 14, 12), float32], Tensor[(504), float32], Tensor[(1800), int8], Tensor[(9, 12, 3), float64], Tensor[(3, 108), float64]) */
}

def @func_4570(%var_4569: Tensor[(324), float64]) -> (Tensor[(1800), int8], Tensor[(5, 3, 15), int32], Tensor[(208), float64], Tensor[(5, 45), int32], Tensor[(324), float64]) {
  %910 = fn (%var_4565: Tensor[(324), float64]) -> (Tensor[(1800), int8], Tensor[(5, 3, 15), int32], Tensor[(208), float64], Tensor[(5, 45), int32], Tensor[(324), float64]) {
    %900 = @func_4270() /* ty=(Tensor[(1800), int8], Tensor[(7, 1, 13), float64]) */;
    %901 = cast(meta[relay.Constant][38] /* ty=Tensor[(208), float64] */, dtype="float64") /* ty=Tensor[(208), float64] */;
    %902 = cast(meta[relay.Constant][39] /* ty=Tensor[(5, 45), int32] */, dtype="int32") /* ty=Tensor[(5, 45), int32] */;
    %903 = cast(%var_4565, dtype="float64") /* ty=Tensor[(324), float64] */;
    %904 = reshape(%901, newshape=[2, 13, 8]) /* ty=Tensor[(2, 13, 8), float64] */;
    %905 = reshape(%902, newshape=[225]) /* ty=Tensor[(225), int32] */;
    %906 = reshape(%903, newshape=[324]) /* ty=Tensor[(324), float64] */;
    %907 = @func_2273(%904, %905, %906) /* ty=(Tensor[(5, 3, 15), int32], Tensor[(225), int32], Tensor[(9, 12, 3), float64], Tensor[(324), float64], Tensor[(9, 12, 3), float64], Tensor[(2, 13, 8), float64], Tensor[(9, 12, 3), float64]) */;
    %908 = %900.0;
    %909 = %907.0;
    (%908, %909, meta[relay.Constant][38] /* ty=Tensor[(208), float64] */, meta[relay.Constant][39] /* ty=Tensor[(5, 45), int32] */, %var_4565)
  };
  %910(%var_4569) /* ty=(Tensor[(1800), int8], Tensor[(5, 3, 15), int32], Tensor[(208), float64], Tensor[(5, 45), int32], Tensor[(324), float64]) */
}

def @func_9594(%var_9567: Tensor[(8, 9, 1), float32]) -> Tensor[(8, 9, ?), uint64] {
  %911 = cast(%var_9567, dtype="float32") /* ty=Tensor[(8, 9, 1), float32] */;
  %912 = asin(%911) /* ty=Tensor[(8, 9, 1), float32] */;
  %913 = cast(%912, dtype="float64") /* ty=Tensor[(8, 9, 1), float64] */;
  %914 = sin(%913) /* ty=Tensor[(8, 9, 1), float64] */;
  %915 = cast(%914, dtype="uint64") /* ty=Tensor[(8, 9, 1), uint64] */;
  %916 = shape_of(%912, dtype="int32") /* ty=Tensor[(3), int32] */;
  %917 = cast(%912, dtype="uint64") /* ty=Tensor[(8, 9, 1), uint64] */;
  %918 = dyn.reshape(%915, %916, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  add(%917, %918) /* ty=Tensor[(8, 9, ?), uint64] */
}

def @func_12018() -> Tensor[(7, 1, 13), float64] {
  %919 = @func_4886() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %919.0
}

def @func_14898() -> Tensor[(7, 1, 13), float64] {
  %920 = fn () -> Tensor[(7, 1, 13), float64] {
    @func_8807() /* ty=Tensor[(7, 1, 13), float64] */
  };
  %920() /* ty=Tensor[(7, 1, 13), float64] */
}

def @func_8600() -> (Tensor[(7, 1, 13), float64], Tensor[(225), int32], Tensor[(7, ?, 13), int16]) {
  @func_8598() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(225), int32], Tensor[(7, ?, 13), int16]) */
}

def @func_9363() -> (Tensor[(324), float64],) {
  %921 = @func_6184() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(5, 45), int32], Tensor[(324), float64]) */;
  %922 = %921.2;
  (%922,)
}

def @func_13500() -> (Tensor[(7, ?, 13), int16],) {
  @func_13498() /* ty=(Tensor[(7, ?, 13), int16],) */
}

def @func_5837() -> Tensor[(7, ?, 13), int16] {
  @func_4767() /* ty=Tensor[(7, ?, 13), int16] */
}

def @func_16876() -> (Tensor[(7, 1, 13), float64], Tensor[(324), float64], Tensor[(225), int32]) {
  %923 = cast(meta[relay.Constant][40] /* ty=Tensor[(324), float64] */, dtype="float64") /* ty=Tensor[(324), float64] */;
  %924 = reshape(%923, newshape=[324]) /* ty=Tensor[(324), float64] */;
  %925 = @func_4568(%924) /* ty=(Tensor[(1800), int8], Tensor[(5, 3, 15), int32], Tensor[(208), float64], Tensor[(5, 45), int32], Tensor[(324), float64]) */;
  %926 = %925.4;
  %927 = cast(%926, dtype="float64") /* ty=Tensor[(324), float64] */;
  %928 = shape_of(meta[relay.Constant][40] /* ty=Tensor[(324), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %929 = cast(meta[relay.Constant][40] /* ty=Tensor[(324), float64] */, dtype="float64") /* ty=Tensor[(324), float64] */;
  %930 = dyn.reshape(%927, %928, newshape=[]) /* ty=Tensor[(?), float64] */;
  %931 = @func_4292() /* ty=Tensor[(7, 1, 13), float64] */;
  %932 = minimum(%929, %930) /* ty=Tensor[(324), float64] */;
  %933 = @func_12580() /* ty=Tensor[(225), int32] */;
  (%931, %932, %933)
}

def @func_7026() -> (Tensor[(7, 1, 13), float64],) {
  %934 = @func_5740() /* ty=Tensor[(7, 1, 13), float64] */;
  (%934,)
}

def @func_3901() -> Tensor[(7, 1, 13), float64] {
  %935 = @func_3776() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %935.0
}

def @func_16234(%var_16232: Tensor[(6, 7, 16), uint64], %var_16233: Tensor[(6, 7, 16), uint64]) -> (Tensor[(6, 7, 16), uint64],) {
  %941 = fn (%var_16217: Tensor[(6, 7, 16), uint64], %var_16218: Tensor[(6, 7, 16), uint64]) -> (Tensor[(6, 7, 16), uint64],) {
    %936 = cast(%var_16218, dtype="uint64") /* ty=Tensor[(6, 7, 16), uint64] */;
    %937 = shape_of(%var_16217, dtype="int32") /* ty=Tensor[(3), int32] */;
    %938 = cast(%var_16217, dtype="uint64") /* ty=Tensor[(6, 7, 16), uint64] */;
    %939 = dyn.reshape(%936, %937, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %940 = add(%938, %939) /* ty=Tensor[(6, 7, 16), uint64] */;
    (%940,)
  };
  %941(%var_16232, %var_16233) /* ty=(Tensor[(6, 7, 16), uint64],) */
}

def @func_5039(%var_5036: Tensor[(5, 5, 10), float64]) -> Tensor[(5, 5, 10), float64] {
  %942 = cast(%var_5036, dtype="float64") /* ty=Tensor[(5, 5, 10), float64] */;
  log(%942) /* ty=Tensor[(5, 5, 10), float64] */
}

def @func_13284(%var_13257: Tensor[(1, 6, 7), float64], %var_13280: Tensor[(12, 6, 7), float64]) -> (Tensor[(?, 6, 7), bool], Tensor[(225), int32], Tensor[(12, 6, 7), uint32]) {
  %943 = cast(%var_13257, dtype="float64") /* ty=Tensor[(1, 6, 7), float64] */;
  %944 = asinh(%943) /* ty=Tensor[(1, 6, 7), float64] */;
  %945 = cast(%944, dtype="bool") /* ty=Tensor[(1, 6, 7), bool] */;
  %946 = shape_of(%var_13257, dtype="int32") /* ty=Tensor[(3), int32] */;
  %947 = cast(%var_13257, dtype="bool") /* ty=Tensor[(1, 6, 7), bool] */;
  %948 = dyn.reshape(%945, %946, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %949 = @func_11413() /* ty=(Tensor[(225), int32],) */;
  %950 = cast(%944, dtype="uint32") /* ty=Tensor[(1, 6, 7), uint32] */;
  %951 = cast(%var_13280, dtype="uint32") /* ty=Tensor[(12, 6, 7), uint32] */;
  %952 = logical_and(%947, %948) /* ty=Tensor[(?, 6, 7), bool] */;
  %953 = %949.0;
  %954 = left_shift(%950, %951) /* ty=Tensor[(12, 6, 7), uint32] */;
  (%952, %953, %954)
}

def @func_9243() -> (Tensor[(7, ?, 13), int16],) {
  %955 = @func_5837() /* ty=Tensor[(7, ?, 13), int16] */;
  (%955,)
}

def @func_17751() -> (Tensor[(7, ?, 13), uint32],) {
  %957 = fn () -> (Tensor[(7, ?, 13), uint32],) {
    %956 = @func_15586() /* ty=Tensor[(7, ?, 13), uint32] */;
    (%956,)
  };
  %957() /* ty=(Tensor[(7, ?, 13), uint32],) */
}

def @func_15268() -> (Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(3, 14, 12), bool], Tensor[(504), float32], Tensor[(324), float64], Tensor[(7, ?, 13), int16]) {
  %969 = fn () -> (Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(3, 14, 12), bool], Tensor[(504), float32], Tensor[(324), float64], Tensor[(7, ?, 13), int16]) {
    %958 = @func_6168() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(5, 3, 15), float32], Tensor[(15), uint8], Tensor[(504), float32]) */;
    %959 = @func_10306() /* ty=(Tensor[(7, 1, 13), float64],) */;
    %960 = cast(meta[relay.Constant][41] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
    %961 = reshape(%960, newshape=[3, 14, 12]) /* ty=Tensor[(3, 14, 12), float32] */;
    %962 = @func_7855(%961) /* ty=(Tensor[(3, 14, 12), bool],) */;
    %963 = @func_11165() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(324), float64], Tensor[(5, 3, 15), float32]) */;
    %964 = %958.0;
    %965 = %959.0;
    %966 = %962.0;
    %967 = %963.1;
    %968 = @func_5837() /* ty=Tensor[(7, ?, 13), int16] */;
    (%964, %965, %966, meta[relay.Constant][41] /* ty=Tensor[(504), float32] */, %967, %968)
  };
  %969() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(3, 14, 12), bool], Tensor[(504), float32], Tensor[(324), float64], Tensor[(7, ?, 13), int16]) */
}

def @func_8618() -> Tensor[(7, 1, 13), float64] {
  %970 = @func_4712() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %970.0
}

def @func_3982(%var_3980: Tensor[(225), int32], %var_3981: Tensor[(90, 20), int8]) -> (Tensor[(7, 1, 13), float64], Tensor[(225), int32], Tensor[(5, 3, 15), float64], Tensor[(3, 14, 12), float32], Tensor[(504), float32], Tensor[(90, 20), int8]) {
  @func_3978(%var_3980, %var_3981) /* ty=(Tensor[(7, 1, 13), float64], Tensor[(225), int32], Tensor[(5, 3, 15), float64], Tensor[(3, 14, 12), float32], Tensor[(504), float32], Tensor[(90, 20), int8]) */
}

def @func_9617() -> Tensor[(7, ?, 13), int16] {
  %971 = fn () -> Tensor[(7, ?, 13), int16] {
    @func_5837() /* ty=Tensor[(7, ?, 13), int16] */
  };
  %971() /* ty=Tensor[(7, ?, 13), int16] */
}

def @func_15586() -> Tensor[(7, ?, 13), uint32] {
  %972 = @func_5837() /* ty=Tensor[(7, ?, 13), int16] */;
  %973 = @func_5928() /* ty=(Tensor[(7, ?, 13), int16],) */;
  %974 = %973.0;
  %975 = cast(%974, dtype="uint32") /* ty=Tensor[(7, ?, 13), uint32] */;
  %976 = shape_of(%972, dtype="int32") /* ty=Tensor[(3), int32] */;
  %977 = cast(%972, dtype="uint32") /* ty=Tensor[(7, ?, 13), uint32] */;
  %978 = dyn.reshape(%975, %976, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  subtract(%977, %978) /* ty=Tensor[(7, ?, 13), uint32] */
}

def @func_12178() -> Tensor[(90, 20), float64] {
  @func_12176() /* ty=Tensor[(90, 20), float64] */
}

def @func_4933(%var_4932: Tensor[(504), float32]) -> (Tensor[(225), int32], Tensor[(1, 1, 15), uint8], Tensor[(15), uint8], Tensor[(15, 12, 10), int8], Tensor[(504), float32], Tensor[(1800), int8]) {
  %990 = fn (%var_4927: Tensor[(504), float32]) -> (Tensor[(225), int32], Tensor[(1, 1, 15), uint8], Tensor[(15), uint8], Tensor[(15, 12, 10), int8], Tensor[(504), float32], Tensor[(1800), int8]) {
    %979 = cast(meta[relay.Constant][42] /* ty=Tensor[(15), uint8] */, dtype="uint8") /* ty=Tensor[(15), uint8] */;
    %980 = reshape(%979, newshape=[1, 1, 15]) /* ty=Tensor[(1, 1, 15), uint8] */;
    %981 = @func_4125(%980) /* ty=(Tensor[(1, 1, 15), uint8],) */;
    %982 = cast(%var_4927, dtype="float32") /* ty=Tensor[(504), float32] */;
    %983 = cast(meta[relay.Constant][43] /* ty=Tensor[(1800), int8] */, dtype="int8") /* ty=Tensor[(1800), int8] */;
    %984 = reshape(%982, newshape=[3, 14, 12]) /* ty=Tensor[(3, 14, 12), float32] */;
    %985 = reshape(%983, newshape=[1800]) /* ty=Tensor[(1800), int8] */;
    %986 = @func_2958(%984, %985) /* ty=(Tensor[(3, 14, 12), float32], Tensor[(15, 12, 10), int8], Tensor[(1800), int8], Tensor[(13, 4, 5), float64]) */;
    %987 = @func_4538() /* ty=Tensor[(225), int32] */;
    %988 = %981.0;
    %989 = %986.1;
    (%987, %988, meta[relay.Constant][42] /* ty=Tensor[(15), uint8] */, %989, %var_4927, meta[relay.Constant][43] /* ty=Tensor[(1800), int8] */)
  };
  %990(%var_4932) /* ty=(Tensor[(225), int32], Tensor[(1, 1, 15), uint8], Tensor[(15), uint8], Tensor[(15, 12, 10), int8], Tensor[(504), float32], Tensor[(1800), int8]) */
}

def @func_13337() -> (Tensor[(1800), int8], Tensor[(7, 1, 13), float64]) {
  %995 = fn () -> (Tensor[(1800), int8], Tensor[(7, 1, 13), float64]) {
    %991 = @func_4270() /* ty=(Tensor[(1800), int8], Tensor[(7, 1, 13), float64]) */;
    %992 = @func_5391() /* ty=(Tensor[(7, 1, 13), float64],) */;
    %993 = %991.0;
    %994 = %992.0;
    (%993, %994)
  };
  %995() /* ty=(Tensor[(1800), int8], Tensor[(7, 1, 13), float64]) */
}

def @func_12097() -> (Tensor[(7, 1, 13), float64],) {
  %996 = @func_5740() /* ty=Tensor[(7, 1, 13), float64] */;
  (%996,)
}

def @func_7788() -> Tensor[(225), int32] {
  %997 = @func_6826() /* ty=(Tensor[(225), int32], Tensor[(7, 2, 13), float32]) */;
  %997.0
}

def @func_11972() -> Tensor[(7, 1, 13), float64] {
  %998 = fn () -> Tensor[(7, 1, 13), float64] {
    @func_8807() /* ty=Tensor[(7, 1, 13), float64] */
  };
  %998() /* ty=Tensor[(7, 1, 13), float64] */
}

def @func_11049(%var_11047: Tensor[(1, 260), float64]) -> (Tensor[(7, 1, 13), float64], Tensor[(7, ?, 13), bool], Tensor[(7, 2, 13), float32], Tensor[(225), float32], Tensor[(260), float32], Tensor[(?, 260), uint32]) {
  @func_11046(%var_11047) /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, ?, 13), bool], Tensor[(7, 2, 13), float32], Tensor[(225), float32], Tensor[(260), float32], Tensor[(?, 260), uint32]) */
}

def @func_8764() -> (Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) {
  @func_8762() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) */
}

def @func_16713() -> Tensor[(15), uint8] {
  %1000 = fn () -> Tensor[(15), uint8] {
    %999 = @func_6168() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(5, 3, 15), float32], Tensor[(15), uint8], Tensor[(504), float32]) */;
    %999.2
  };
  %1000() /* ty=Tensor[(15), uint8] */
}

def @func_10289() -> (Tensor[(225), int32], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) {
  @func_10287() /* ty=(Tensor[(225), int32], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) */
}

def @func_5157() -> Tensor[(225), int32] {
  @func_5155() /* ty=Tensor[(225), int32] */
}

def @func_4028(%var_4026: Tensor[(12, 10, 3), int8], %var_4027: Tensor[(12, 10, 3), int8]) -> (Tensor[(12, 10, 3), bool], Tensor[(13, 4, 5), float64], Tensor[(900, 2), int8]) {
  @func_4024(%var_4026, %var_4027) /* ty=(Tensor[(12, 10, 3), bool], Tensor[(13, 4, 5), float64], Tensor[(900, 2), int8]) */
}

def @func_12043() -> (Tensor[(7, 1, 13), float64],) {
  %1001 = @func_12018() /* ty=Tensor[(7, 1, 13), float64] */;
  (%1001,)
}

def @func_5930() -> (Tensor[(7, ?, 13), int16],) {
  @func_5928() /* ty=(Tensor[(7, ?, 13), int16],) */
}

def @func_3644(%var_3642: Tensor[(3, 15, 9), float32]) -> (Tensor[(3, 15, 9), float32],) {
  @func_3641(%var_3642) /* ty=(Tensor[(3, 15, 9), float32],) */
}

def @func_11229() -> (Tensor[(7, 1, 13), float64], Tensor[(8, 9, ?), uint64], Tensor[(72), float32]) {
  %1007 = fn () -> (Tensor[(7, 1, 13), float64], Tensor[(8, 9, ?), uint64], Tensor[(72), float32]) {
    %1002 = @func_5391() /* ty=(Tensor[(7, 1, 13), float64],) */;
    %1003 = cast(meta[relay.Constant][44] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
    %1004 = reshape(%1003, newshape=[8, 9, 1]) /* ty=Tensor[(8, 9, 1), float32] */;
    %1005 = %1002.0;
    %1006 = @func_9594(%1004) /* ty=Tensor[(8, 9, ?), uint64] */;
    (%1005, %1006, meta[relay.Constant][44] /* ty=Tensor[(72), float32] */)
  };
  %1007() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(8, 9, ?), uint64], Tensor[(72), float32]) */
}

def @func_13784() -> (Tensor[(7, ?, 13), int16], Tensor[(7, 1, 13), float64], Tensor[(15), uint8], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) {
  %1018 = fn () -> (Tensor[(7, ?, 13), int16], Tensor[(7, 1, 13), float64], Tensor[(15), uint8], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) {
    %1008 = @func_13498() /* ty=(Tensor[(7, ?, 13), int16],) */;
    %1009 = @func_12043() /* ty=(Tensor[(7, 1, 13), float64],) */;
    %1010 = @func_6168() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(5, 3, 15), float32], Tensor[(15), uint8], Tensor[(504), float32]) */;
    %1011 = @func_6094() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) */;
    %1012 = @func_9997() /* ty=(Tensor[(7, 1, 13), float64],) */;
    %1013 = %1008.0;
    %1014 = %1009.0;
    %1015 = %1010.2;
    %1016 = %1011.1;
    %1017 = %1012.0;
    (%1013, %1014, %1015, %1016, %1017)
  };
  %1018() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(7, 1, 13), float64], Tensor[(15), uint8], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) */
}

def @func_14214() -> Tensor[(7, 1, 13), float64] {
  @func_14212() /* ty=Tensor[(7, 1, 13), float64] */
}

def @func_17072() -> (Tensor[(7, 1, 13), float64], Tensor[(7, ?, 13), int16]) {
  @func_17070() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, ?, 13), int16]) */
}

def @func_5078() -> Tensor[(225), int32] {
  @func_4538() /* ty=Tensor[(225), int32] */
}

def @func_5839() -> Tensor[(7, ?, 13), int16] {
  @func_5837() /* ty=Tensor[(7, ?, 13), int16] */
}

def @func_6930() -> (Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(5, 3, 15), float32]) {
  %1025 = fn () -> (Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(5, 3, 15), float32]) {
    %1019 = @func_6582() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) */;
    %1020 = @func_6168() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(5, 3, 15), float32], Tensor[(15), uint8], Tensor[(504), float32]) */;
    %1021 = @func_5784() /* ty=Tensor[(7, 1, 13), float64] */;
    %1022 = %1019.1;
    %1023 = @func_5808() /* ty=Tensor[(7, 1, 13), float64] */;
    %1024 = %1020.1;
    (%1021, %1022, %1023, %1024)
  };
  %1025() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(5, 3, 15), float32]) */
}

def @func_15950() -> (Tensor[(3, 14, 12), float32], Tensor[(7, 1, 13), float64], Tensor[(14, 12, 3), float64], Tensor[(7, 1, 13), float64]) {
  %1033 = fn () -> (Tensor[(3, 14, 12), float32], Tensor[(7, 1, 13), float64], Tensor[(14, 12, 3), float64], Tensor[(7, 1, 13), float64]) {
    %1026 = @func_4497() /* ty=Tensor[(3, 14, 12), float32] */;
    %1027 = cast(%1026, dtype="float64") /* ty=Tensor[(3, 14, 12), float64] */;
    %1028 = reshape(%1027, newshape=[14, 12, 3]) /* ty=Tensor[(14, 12, 3), float64] */;
    %1029 = @func_6440(%1028) /* ty=(Tensor[(14, 12, 3), float64],) */;
    %1030 = @func_11406() /* ty=Tensor[(7, 1, 13), float64] */;
    %1031 = %1029.0;
    %1032 = @func_14897() /* ty=Tensor[(7, 1, 13), float64] */;
    (%1026, %1030, %1031, %1032)
  };
  %1033() /* ty=(Tensor[(3, 14, 12), float32], Tensor[(7, 1, 13), float64], Tensor[(14, 12, 3), float64], Tensor[(7, 1, 13), float64]) */
}

def @func_15424() -> (Tensor[(324), float64],) {
  %1034 = @func_9363() /* ty=(Tensor[(324), float64],) */;
  %1035 = %1034.0;
  (%1035,)
}

def @func_13133() -> (Tensor[(7, ?, 13), int16], Tensor[(1, 182), float32], Tensor[(770, 182), int64], Tensor[(225), int32], Tensor[(7, 2, 13), float32]) {
  %1051 = fn () -> (Tensor[(7, ?, 13), int16], Tensor[(1, 182), float32], Tensor[(770, 182), int64], Tensor[(225), int32], Tensor[(7, 2, 13), float32]) {
    %1036 = @func_7002() /* ty=(Tensor[(7, ?, 13), int16],) */;
    %1037 = cast(meta[relay.Constant][45] /* ty=Tensor[(770, 1), float64] */, dtype="float64") /* ty=Tensor[(770, 1), float64] */;
    %1038 = cast(meta[relay.Constant][46] /* ty=Tensor[(182), float32] */, dtype="float32") /* ty=Tensor[(182), float32] */;
    %1039 = reshape(%1037, newshape=[11, 5, 14]) /* ty=Tensor[(11, 5, 14), float64] */;
    %1040 = reshape(%1038, newshape=[1, 182]) /* ty=Tensor[(1, 182), float32] */;
    %1041 = @func_8088(%1039, %1040) /* ty=(Tensor[(11, 5, 14), float64], Tensor[(5, 3, 15), float32], Tensor[(225), float64], Tensor[(1, 182), float32]) */;
    %1042 = cast(meta[relay.Constant][46] /* ty=Tensor[(182), float32] */, dtype="int64") /* ty=Tensor[(182), int64] */;
    %1043 = cast(meta[relay.Constant][45] /* ty=Tensor[(770, 1), float64] */, dtype="int64") /* ty=Tensor[(770, 1), int64] */;
    %1044 = @func_10931() /* ty=(Tensor[(225), int32],) */;
    %1045 = @func_10516() /* ty=(Tensor[(9, 12, 3), float64], Tensor[(9, 36), float64], Tensor[(7, 2, 13), float32]) */;
    %1046 = %1036.0;
    %1047 = %1041.3;
    %1048 = bitwise_and(%1042, %1043) /* ty=Tensor[(770, 182), int64] */;
    %1049 = %1044.0;
    %1050 = %1045.2;
    (%1046, %1047, %1048, %1049, %1050)
  };
  %1051() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(1, 182), float32], Tensor[(770, 182), int64], Tensor[(225), int32], Tensor[(7, 2, 13), float32]) */
}

def @func_5318() -> (Tensor[(5, 3, 15), float32], Tensor[(7, 1, 13), float64]) {
  %1056 = fn () -> (Tensor[(5, 3, 15), float32], Tensor[(7, 1, 13), float64]) {
    %1052 = @func_4316() /* ty=(Tensor[(5, 3, 15), float32],) */;
    %1053 = @func_5016() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(90, 20), int8], Tensor[(225), int32], Tensor[(1800), int8], Tensor[(7, 1, 13), float64]) */;
    %1054 = %1052.0;
    %1055 = %1053.0;
    (%1054, %1055)
  };
  %1056() /* ty=(Tensor[(5, 3, 15), float32], Tensor[(7, 1, 13), float64]) */
}

def @func_15685() -> (Tensor[(7, 1, 13), float64], Tensor[(225), int32], Tensor[(7, 1, 13), float64]) {
  %1057 = @func_9006() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(225), int32], Tensor[(7, 1, 13), float64]) */;
  %1058 = %1057.0;
  %1059 = @func_7788() /* ty=Tensor[(225), int32] */;
  %1060 = @func_11406() /* ty=Tensor[(7, 1, 13), float64] */;
  (%1058, %1059, %1060)
}

def @func_9629() -> Tensor[(7, 1, 13), float64] {
  %1062 = fn () -> Tensor[(7, 1, 13), float64] {
    %1061 = @func_7155() /* ty=(Tensor[(7, 1, 13), float64],) */;
    %1061.0
  };
  %1062() /* ty=Tensor[(7, 1, 13), float64] */
}

def @func_17636() -> Tensor[(7, 1, 13), float64] {
  %1064 = fn () -> Tensor[(7, 1, 13), float64] {
    %1063 = @func_15893() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(182), float64], Tensor[(1183), float64], Tensor[(7, 1, 13), float64]) */;
    %1063.0
  };
  %1064() /* ty=Tensor[(7, 1, 13), float64] */
}

def @func_9997() -> (Tensor[(7, 1, 13), float64],) {
  %1065 = @func_8807() /* ty=Tensor[(7, 1, 13), float64] */;
  (%1065,)
}

def @func_17499() -> Tensor[(7, 1, 13), float64] {
  %1066 = @func_5891() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(7, 1, 13), float64]) */;
  %1066.1
}

def @func_3978(%var_3936: Tensor[(225), int32], %var_3971: Tensor[(90, 20), int8]) -> (Tensor[(7, 1, 13), float64], Tensor[(225), int32], Tensor[(5, 3, 15), float64], Tensor[(3, 14, 12), float32], Tensor[(504), float32], Tensor[(90, 20), int8]) {
  %1067 = cast(%var_3936, dtype="int32") /* ty=Tensor[(225), int32] */;
  %1068 = reshape(%1067, newshape=[5, 3, 15]) /* ty=Tensor[(5, 3, 15), int32] */;
  %1069 = @func_2159(%1068) /* ty=Tensor[(5, 3, 15), int32] */;
  %1070 = cast(%1069, dtype="float64") /* ty=Tensor[(5, 3, 15), float64] */;
  %1071 = cast(meta[relay.Constant][47] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
  %1072 = cast(%var_3971, dtype="int8") /* ty=Tensor[(90, 20), int8] */;
  %1073 = reshape(%1071, newshape=[3, 14, 12]) /* ty=Tensor[(3, 14, 12), float32] */;
  %1074 = reshape(%1072, newshape=[1800]) /* ty=Tensor[(1800), int8] */;
  %1075 = @func_2958(%1073, %1074) /* ty=(Tensor[(3, 14, 12), float32], Tensor[(15, 12, 10), int8], Tensor[(1800), int8], Tensor[(13, 4, 5), float64]) */;
  %1076 = @func_3917() /* ty=Tensor[(7, 1, 13), float64] */;
  %1077 = atanh(%1070) /* ty=Tensor[(5, 3, 15), float64] */;
  %1078 = %1075.0;
  (%1076, %var_3936, %1077, %1078, meta[relay.Constant][47] /* ty=Tensor[(504), float32] */, %var_3971)
}

def @func_12176() -> Tensor[(90, 20), float64] {
  %1079 = @func_5016() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(90, 20), int8], Tensor[(225), int32], Tensor[(1800), int8], Tensor[(7, 1, 13), float64]) */;
  %1080 = %1079.1;
  %1081 = cast(%1080, dtype="float64") /* ty=Tensor[(90, 20), float64] */;
  log(%1081) /* ty=Tensor[(90, 20), float64] */
}

def @func_4169() -> (Tensor[(7, 1, 13), float64], Tensor[(225), int32], Tensor[(5, 3, 15), float32]) {
  %1082 = cast(meta[relay.Constant][48] /* ty=Tensor[(225), int32] */, dtype="int32") /* ty=Tensor[(225), int32] */;
  %1083 = reshape(%1082, newshape=[5, 3, 15]) /* ty=Tensor[(5, 3, 15), int32] */;
  %1084 = @func_2159(%1083) /* ty=Tensor[(5, 3, 15), int32] */;
  %1085 = cast(%1084, dtype="float32") /* ty=Tensor[(5, 3, 15), float32] */;
  %1086 = @func_3901() /* ty=Tensor[(7, 1, 13), float64] */;
  %1087 = sin(%1085) /* ty=Tensor[(5, 3, 15), float32] */;
  (%1086, meta[relay.Constant][48] /* ty=Tensor[(225), int32] */, %1087)
}

def @func_2161(%var_2160: Tensor[(5, 3, 15), int32]) -> Tensor[(5, 3, 15), int32] {
  %1092 = fn (%var_2153: Tensor[(5, 3, 15), int32]) -> Tensor[(5, 3, 15), int32] {
    %1088 = cast(meta[relay.Constant][49] /* ty=Tensor[(5, 3, 15), int32] */, dtype="int32") /* ty=Tensor[(5, 3, 15), int32] */;
    %1089 = shape_of(%var_2153, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1090 = cast(%var_2153, dtype="int32") /* ty=Tensor[(5, 3, 15), int32] */;
    %1091 = dyn.reshape(%1088, %1089, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    bitwise_or(%1090, %1091) /* ty=Tensor[(5, 3, 15), int32] */
  };
  %1092(%var_2160) /* ty=Tensor[(5, 3, 15), int32] */
}

def @func_11553() -> (Tensor[(7, 1, 13), float64], Tensor[(1800), int8], Tensor[(7, 1, 13), float64]) {
  %1098 = fn () -> (Tensor[(7, 1, 13), float64], Tensor[(1800), int8], Tensor[(7, 1, 13), float64]) {
    %1093 = @func_4712() /* ty=(Tensor[(7, 1, 13), float64],) */;
    %1094 = @func_6776() /* ty=(Tensor[(1800), int8],) */;
    %1095 = %1093.0;
    %1096 = %1094.0;
    %1097 = @func_5740() /* ty=Tensor[(7, 1, 13), float64] */;
    (%1095, %1096, %1097)
  };
  %1098() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(1800), int8], Tensor[(7, 1, 13), float64]) */
}

def @func_10062() -> Tensor[(7, 1, 13), float64] {
  %1100 = fn () -> Tensor[(7, 1, 13), float64] {
    %1099 = @func_6582() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) */;
    %1099.0
  };
  %1100() /* ty=Tensor[(7, 1, 13), float64] */
}

def @func_14838() -> Tensor[(13, 8, 14), bool] {
  @func_14836() /* ty=Tensor[(13, 8, 14), bool] */
}

def @func_15121(%var_15120: Tensor[(7, 4, 13), float64]) -> (Tensor[(7, 4, 13), bool], Tensor[(7, 1, 13), float64]) {
  %1107 = fn (%var_15108: Tensor[(7, 4, 13), float64]) -> (Tensor[(7, 4, 13), bool], Tensor[(7, 1, 13), float64]) {
    %1101 = @func_10422() /* ty=Tensor[(7, 1, 13), float64] */;
    %1102 = cast(%1101, dtype="bool") /* ty=Tensor[(7, 1, 13), bool] */;
    %1103 = cast(%var_15108, dtype="bool") /* ty=Tensor[(7, 4, 13), bool] */;
    %1104 = @func_5891() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(7, 1, 13), float64]) */;
    %1105 = logical_and(%1102, %1103) /* ty=Tensor[(7, 4, 13), bool] */;
    %1106 = %1104.1;
    (%1105, %1106)
  };
  %1107(%var_15120) /* ty=(Tensor[(7, 4, 13), bool], Tensor[(7, 1, 13), float64]) */
}

def @func_4317() -> (Tensor[(5, 3, 15), float32],) {
  %1110 = fn () -> (Tensor[(5, 3, 15), float32],) {
    %1108 = @func_4169() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(225), int32], Tensor[(5, 3, 15), float32]) */;
    %1109 = %1108.2;
    (%1109,)
  };
  %1110() /* ty=(Tensor[(5, 3, 15), float32],) */
}

def @func_5094() -> (Tensor[(7, 1, 13), float64],) {
  %1113 = fn () -> (Tensor[(7, 1, 13), float64],) {
    %1111 = @func_4886() /* ty=(Tensor[(7, 1, 13), float64],) */;
    %1112 = %1111.0;
    (%1112,)
  };
  %1113() /* ty=(Tensor[(7, 1, 13), float64],) */
}

def @func_7156() -> (Tensor[(7, 1, 13), float64],) {
  %1116 = fn () -> (Tensor[(7, 1, 13), float64],) {
    %1114 = @func_6929() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(5, 3, 15), float32]) */;
    %1115 = %1114.1;
    (%1115,)
  };
  %1116() /* ty=(Tensor[(7, 1, 13), float64],) */
}

def @func_4024(%var_3984: Tensor[(12, 10, 3), int8], %var_3985: Tensor[(12, 10, 3), int8]) -> (Tensor[(12, 10, 3), bool], Tensor[(13, 4, 5), float64], Tensor[(900, 2), int8]) {
  %1117 = cast(%var_3985, dtype="bool") /* ty=Tensor[(12, 10, 3), bool] */;
  %1118 = shape_of(%var_3984, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1119 = cast(%var_3984, dtype="bool") /* ty=Tensor[(12, 10, 3), bool] */;
  %1120 = dyn.reshape(%1117, %1118, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1121 = cast(meta[relay.Constant][50] /* ty=Tensor[(900, 2), int8] */, dtype="int8") /* ty=Tensor[(900, 2), int8] */;
  %1122 = reshape(%1121, newshape=[15, 12, 10]) /* ty=Tensor[(15, 12, 10), int8] */;
  %1123 = @func_1874(%1122) /* ty=(Tensor[(15, 12, 10), int8], Tensor[(13, 4, 5), float64], Tensor[(260), float64]) */;
  %1124 = equal(%1119, %1120) /* ty=Tensor[(12, 10, 3), bool] */;
  %1125 = %1123.1;
  (%1124, %1125, meta[relay.Constant][50] /* ty=Tensor[(900, 2), int8] */)
}

def @func_17241() -> (Tensor[(324), float64],) {
  @func_17239() /* ty=(Tensor[(324), float64],) */
}

def @func_4128(%var_4126: Tensor[(1, 1, 15), uint8]) -> (Tensor[(1, 1, 15), uint8],) {
  @func_4125(%var_4126) /* ty=(Tensor[(1, 1, 15), uint8],) */
}

def @func_12099() -> (Tensor[(7, 1, 13), float64],) {
  @func_12097() /* ty=(Tensor[(7, 1, 13), float64],) */
}

def @func_14508() -> (Tensor[(7, 1, 13), float64], Tensor[(7, ?, 13), int16]) {
  @func_14506() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, ?, 13), int16]) */
}

def @func_4430() -> (Tensor[(7, ?, 13), int16], Tensor[(7, 2, 13), bool]) {
  %1145 = fn () -> (Tensor[(7, ?, 13), int16], Tensor[(7, 2, 13), bool]) {
    %1126 = @func_3917() /* ty=Tensor[(7, 1, 13), float64] */;
    %1127 = cast(meta[relay.Constant][51] /* ty=Tensor[(7, 1, 13), float64] */, dtype="float32") /* ty=Tensor[(7, 1, 13), float32] */;
    %1128 = shape_of(%1126, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1129 = cast(%1126, dtype="float32") /* ty=Tensor[(7, 1, 13), float32] */;
    %1130 = dyn.reshape(%1127, %1128, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1131 = floor_mod(%1129, %1130) /* ty=Tensor[(7, ?, 13), float32] */;
    %1132 = cast(%1131, dtype="uint8") /* ty=Tensor[(7, ?, 13), uint8] */;
    %1133 = shape_of(%1126, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1134 = cast(%1126, dtype="uint8") /* ty=Tensor[(7, 1, 13), uint8] */;
    %1135 = dyn.reshape(%1132, %1133, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %1136 = multiply(%1134, %1135) /* ty=Tensor[(7, ?, 13), uint8] */;
    %1137 = cast(%1136, dtype="int16") /* ty=Tensor[(7, ?, 13), int16] */;
    %1138 = shape_of(meta[relay.Constant][51] /* ty=Tensor[(7, 1, 13), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1139 = cast(meta[relay.Constant][51] /* ty=Tensor[(7, 1, 13), float64] */, dtype="int16") /* ty=Tensor[(7, 1, 13), int16] */;
    %1140 = dyn.reshape(%1137, %1138, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %1141 = cast(%1136, dtype="bool") /* ty=Tensor[(7, ?, 13), bool] */;
    %1142 = cast(meta[relay.Constant][52] /* ty=Tensor[(7, 2, 13), uint8] */, dtype="bool") /* ty=Tensor[(7, 2, 13), bool] */;
    %1143 = left_shift(%1139, %1140) /* ty=Tensor[(7, ?, 13), int16] */;
    %1144 = less(%1141, %1142) /* ty=Tensor[(7, 2, 13), bool] */;
    (%1143, %1144)
  };
  %1145() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(7, 2, 13), bool]) */
}

def @func_9444() -> (Tensor[(7, 1, 13), float64],) {
  %1146 = @func_6094() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) */;
  %1147 = %1146.1;
  (%1147,)
}

def @func_7587() -> Tensor[(7, 1, 13), float64] {
  %1148 = fn () -> Tensor[(7, 1, 13), float64] {
    @func_3901() /* ty=Tensor[(7, 1, 13), float64] */
  };
  %1148() /* ty=Tensor[(7, 1, 13), float64] */
}

def @func_13624() -> (Tensor[(1, 1, 15), uint8], Tensor[(7, 1, 13), float64], Tensor[(324), float64]) {
  %1149 = @func_13452() /* ty=(Tensor[(1, 1, 15), uint8],) */;
  %1150 = cast(meta[relay.Constant][53] /* ty=Tensor[(324), float64] */, dtype="float64") /* ty=Tensor[(324), float64] */;
  %1151 = reshape(%1150, newshape=[3, 108]) /* ty=Tensor[(3, 108), float64] */;
  %1152 = @func_11133(%1151) /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(3, 14, 12), float32], Tensor[(504), float32], Tensor[(1800), int8], Tensor[(9, 12, 3), float64], Tensor[(3, 108), float64]) */;
  %1153 = %1149.0;
  %1154 = %1152.1;
  (%1153, %1154, meta[relay.Constant][53] /* ty=Tensor[(324), float64] */)
}

def @func_17395() -> (Tensor[(7, ?, 13), uint32], Tensor[(7, 1, 13), float64], Tensor[(405, 1), float32], Tensor[(364), float64]) {
  %1162 = fn () -> (Tensor[(7, ?, 13), uint32], Tensor[(7, 1, 13), float64], Tensor[(405, 1), float32], Tensor[(364), float64]) {
    %1155 = cast(meta[relay.Constant][54] /* ty=Tensor[(405, 1), float32] */, dtype="float32") /* ty=Tensor[(405, 1), float32] */;
    %1156 = cast(meta[relay.Constant][55] /* ty=Tensor[(364), float64] */, dtype="float64") /* ty=Tensor[(364), float64] */;
    %1157 = reshape(%1155, newshape=[405]) /* ty=Tensor[(405), float32] */;
    %1158 = reshape(%1156, newshape=[7, 4, 13]) /* ty=Tensor[(7, 4, 13), float64] */;
    %1159 = @func_16636(%1157, %1158) /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(3, 15, 9), float32], Tensor[(405), float32], Tensor[(7, ?, 13), int16], Tensor[(1, 1, 15), uint8], Tensor[(90, 20), float64], Tensor[(7, 4, 13), uint64]) */;
    %1160 = @func_15586() /* ty=Tensor[(7, ?, 13), uint32] */;
    %1161 = %1159.1;
    (%1160, %1161, meta[relay.Constant][54] /* ty=Tensor[(405, 1), float32] */, meta[relay.Constant][55] /* ty=Tensor[(364), float64] */)
  };
  %1162() /* ty=(Tensor[(7, ?, 13), uint32], Tensor[(7, 1, 13), float64], Tensor[(405, 1), float32], Tensor[(364), float64]) */
}

def @func_9365() -> (Tensor[(324), float64],) {
  @func_9363() /* ty=(Tensor[(324), float64],) */
}

def @func_13453() -> (Tensor[(1, 1, 15), uint8],) {
  %1165 = fn () -> (Tensor[(1, 1, 15), uint8],) {
    %1163 = @func_7437() /* ty=(Tensor[(1, 1, 15), uint8], Tensor[(15), uint8], Tensor[(225), int32], Tensor[(225), int32], Tensor[(7, ?, 13), uint32], Tensor[(7, 1, 13), float64]) */;
    %1164 = %1163.0;
    (%1164,)
  };
  %1165() /* ty=(Tensor[(1, 1, 15), uint8],) */
}

def @func_11945() -> (Tensor[(7, 1, 13), float64],) {
  %1167 = fn () -> (Tensor[(7, 1, 13), float64],) {
    %1166 = @func_9556() /* ty=Tensor[(7, 1, 13), float64] */;
    (%1166,)
  };
  %1167() /* ty=(Tensor[(7, 1, 13), float64],) */
}

def @func_1876(%var_1875: Tensor[(15, 12, 10), int8]) -> (Tensor[(15, 12, 10), int8], Tensor[(13, 4, 5), float64], Tensor[(260), float64]) {
  %1177 = fn (%var_1852: Tensor[(15, 12, 10), int8]) -> (Tensor[(15, 12, 10), int8], Tensor[(13, 4, 5), float64], Tensor[(260), float64]) {
    %1168 = cast(meta[relay.Constant][56] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %1169 = cast(%var_1852, dtype="int8") /* ty=Tensor[(15, 12, 10), int8] */;
    %1170 = cast(meta[relay.Constant][57] /* ty=Tensor[(260), float64] */, dtype="float64") /* ty=Tensor[(260), float64] */;
    %1171 = cast(meta[relay.Constant][57] /* ty=Tensor[(260), float64] */, dtype="float64") /* ty=Tensor[(260), float64] */;
    %1172 = reshape(%1170, newshape=[13, 4, 5]) /* ty=Tensor[(13, 4, 5), float64] */;
    %1173 = reshape(%1171, newshape=[13, 4, 5]) /* ty=Tensor[(13, 4, 5), float64] */;
    %1174 = @func_1470(%1172, %1173) /* ty=(Tensor[(13, 4, 5), float64], Tensor[(13, 4, 5), float64]) */;
    %1175 = add(%1168, %1169) /* ty=Tensor[(15, 12, 10), int8] */;
    %1176 = %1174.0;
    (%1175, %1176, meta[relay.Constant][57] /* ty=Tensor[(260), float64] */)
  };
  %1177(%var_1875) /* ty=(Tensor[(15, 12, 10), int8], Tensor[(13, 4, 5), float64], Tensor[(260), float64]) */
}

def @func_11408() -> Tensor[(7, 1, 13), float64] {
  @func_11406() /* ty=Tensor[(7, 1, 13), float64] */
}

def @func_13181() -> (Tensor[(90, 20), float64], Tensor[(225), int32]) {
  %1178 = @func_6826() /* ty=(Tensor[(225), int32], Tensor[(7, 2, 13), float32]) */;
  %1179 = @func_12176() /* ty=Tensor[(90, 20), float64] */;
  %1180 = %1178.0;
  (%1179, %1180)
}

def @func_11246() -> (Tensor[(7, 1, 13), float64],) {
  @func_11244() /* ty=(Tensor[(7, 1, 13), float64],) */
}

def @func_5391() -> (Tensor[(7, 1, 13), float64],) {
  %1181 = @func_4712() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %1182 = %1181.0;
  (%1182,)
}

def @func_13535() -> Tensor[(1, 1, 15), uint8] {
  %1184 = fn () -> Tensor[(1, 1, 15), uint8] {
    %1183 = @func_11519() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(1, 1, 15), uint8], Tensor[(15), uint8]) */;
    %1183.2
  };
  %1184() /* ty=Tensor[(1, 1, 15), uint8] */
}

def @func_11919(%var_11840: Tensor[(6, 1, 8), uint64], %var_11841: Tensor[(6, 5, 8), uint64], %var_11850: Tensor[(6, 5, 8), uint64]) -> (Tensor[(6, 5, 8), uint64], Tensor[(6, 5, 8), float32], Tensor[(7, 1, 13), float64], Tensor[(1800), int8]) {
  %1185 = cast(%var_11840, dtype="uint64") /* ty=Tensor[(6, 1, 8), uint64] */;
  %1186 = cast(%var_11841, dtype="uint64") /* ty=Tensor[(6, 5, 8), uint64] */;
  %1187 = cast(%var_11840, dtype="float32") /* ty=Tensor[(6, 1, 8), float32] */;
  %1188 = cosh(%1187) /* ty=Tensor[(6, 1, 8), float32] */;
  %1189 = cast(%var_11850, dtype="float32") /* ty=Tensor[(6, 5, 8), float32] */;
  %1190 = shape_of(%var_11841, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1191 = cast(%var_11841, dtype="float32") /* ty=Tensor[(6, 5, 8), float32] */;
  %1192 = dyn.reshape(%1189, %1190, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1193 = floor_mod(%1191, %1192) /* ty=Tensor[(6, 5, 8), float32] */;
  %1194 = cast(%1188, dtype="float32") /* ty=Tensor[(6, 1, 8), float32] */;
  %1195 = cast(%1193, dtype="float32") /* ty=Tensor[(6, 5, 8), float32] */;
  %1196 = floor_divide(%1194, %1195) /* ty=Tensor[(6, 5, 8), float32] */;
  %1197 = cast(%1196, dtype="float32") /* ty=Tensor[(6, 5, 8), float32] */;
  %1198 = @func_4712() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %1199 = @func_11552() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(1800), int8], Tensor[(7, 1, 13), float64]) */;
  %1200 = minimum(%1185, %1186) /* ty=Tensor[(6, 5, 8), uint64] */;
  %1201 = sqrt(%1197) /* ty=Tensor[(6, 5, 8), float32] */;
  %1202 = %1198.0;
  %1203 = %1199.1;
  (%1200, %1201, %1202, %1203)
}

def @func_4768() -> Tensor[(7, ?, 13), int16] {
  %1205 = fn () -> Tensor[(7, ?, 13), int16] {
    %1204 = @func_4429() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(7, 2, 13), bool]) */;
    %1204.0
  };
  %1205() /* ty=Tensor[(7, ?, 13), int16] */
}

def @func_9007() -> (Tensor[(7, 1, 13), float64], Tensor[(225), int32], Tensor[(7, 1, 13), float64]) {
  %1211 = fn () -> (Tensor[(7, 1, 13), float64], Tensor[(225), int32], Tensor[(7, 1, 13), float64]) {
    %1206 = @func_8534() /* ty=(Tensor[(7, 1, 13), float64],) */;
    %1207 = @func_7026() /* ty=(Tensor[(7, 1, 13), float64],) */;
    %1208 = %1206.0;
    %1209 = @func_7046() /* ty=Tensor[(225), int32] */;
    %1210 = %1207.0;
    (%1208, %1209, %1210)
  };
  %1211() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(225), int32], Tensor[(7, 1, 13), float64]) */
}

def @func_11406() -> Tensor[(7, 1, 13), float64] {
  %1212 = @func_4886() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %1212.0
}

def @func_11794(%var_11792: Tensor[(9, 14, 10), float64]) -> (Tensor[(9, 14, 10), float64], Tensor[(7, ?, 13), bool]) {
  @func_11791(%var_11792) /* ty=(Tensor[(9, 14, 10), float64], Tensor[(7, ?, 13), bool]) */
}

def @func_3778() -> (Tensor[(7, 1, 13), float64],) {
  @func_3776() /* ty=(Tensor[(7, 1, 13), float64],) */
}

def @func_2278(%var_2275: Tensor[(2, 13, 8), float64], %var_2276: Tensor[(225), int32], %var_2277: Tensor[(324), float64]) -> (Tensor[(5, 3, 15), int32], Tensor[(225), int32], Tensor[(9, 12, 3), float64], Tensor[(324), float64], Tensor[(9, 12, 3), float64], Tensor[(2, 13, 8), float64], Tensor[(9, 12, 3), float64]) {
  @func_2273(%var_2275, %var_2276, %var_2277) /* ty=(Tensor[(5, 3, 15), int32], Tensor[(225), int32], Tensor[(9, 12, 3), float64], Tensor[(324), float64], Tensor[(9, 12, 3), float64], Tensor[(2, 13, 8), float64], Tensor[(9, 12, 3), float64]) */
}

def @func_17610() -> (Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) {
  %1213 = @func_16501() /* ty=Tensor[(7, 1, 13), float64] */;
  %1214 = @func_8973() /* ty=Tensor[(7, 1, 13), float64] */;
  (%1213, %1214)
}

def @func_8784() -> (Tensor[(7, ?, 13), int16],) {
  @func_8782() /* ty=(Tensor[(7, ?, 13), int16],) */
}

def @func_16085() -> Tensor[(13, 4, 5), float32] {
  @func_16083() /* ty=Tensor[(13, 4, 5), float32] */
}

def @func_9147(%var_9146: Tensor[(12, 5, 6), float64]) -> (Tensor[(12, 5, 6), bool], Tensor[(12, 5, 6), float64]) {
  %1224 = fn (%var_9128: Tensor[(12, 5, 6), float64]) -> (Tensor[(12, 5, 6), bool], Tensor[(12, 5, 6), float64]) {
    %1215 = cast(%var_9128, dtype="float64") /* ty=Tensor[(12, 5, 6), float64] */;
    %1216 = erf(%1215) /* ty=Tensor[(12, 5, 6), float64] */;
    %1217 = cast(%var_9128, dtype="bool") /* ty=Tensor[(12, 5, 6), bool] */;
    %1218 = shape_of(%1216, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1219 = cast(%1216, dtype="bool") /* ty=Tensor[(12, 5, 6), bool] */;
    %1220 = dyn.reshape(%1217, %1218, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1221 = cast(%1216, dtype="float64") /* ty=Tensor[(12, 5, 6), float64] */;
    %1222 = less_equal(%1219, %1220) /* ty=Tensor[(12, 5, 6), bool] */;
    %1223 = atan(%1221) /* ty=Tensor[(12, 5, 6), float64] */;
    (%1222, %1223)
  };
  %1224(%var_9146) /* ty=(Tensor[(12, 5, 6), bool], Tensor[(12, 5, 6), float64]) */
}

def @func_10306() -> (Tensor[(7, 1, 13), float64],) {
  %1225 = @func_6094() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) */;
  %1226 = %1225.2;
  (%1226,)
}

def @func_16021(%var_16020: Tensor[(1, 4, 2), bool]) -> (Tensor[(8, 4, 2), bool],) {
  %1230 = fn (%var_16014: Tensor[(1, 4, 2), bool]) -> (Tensor[(8, 4, 2), bool],) {
    %1227 = cast(%var_16014, dtype="bool") /* ty=Tensor[(1, 4, 2), bool] */;
    %1228 = cast(meta[relay.Constant][58] /* ty=Tensor[(8, 4, 2), bool] */, dtype="bool") /* ty=Tensor[(8, 4, 2), bool] */;
    %1229 = logical_or(%1227, %1228) /* ty=Tensor[(8, 4, 2), bool] */;
    (%1229,)
  };
  %1230(%var_16020) /* ty=(Tensor[(8, 4, 2), bool],) */
}

def @func_15508() -> Tensor[(7, ?, 13), int16] {
  %1231 = @func_9243() /* ty=(Tensor[(7, ?, 13), int16],) */;
  %1231.0
}

def @func_9558() -> Tensor[(7, 1, 13), float64] {
  @func_9556() /* ty=Tensor[(7, 1, 13), float64] */
}

def @func_12045() -> (Tensor[(7, 1, 13), float64],) {
  @func_12043() /* ty=(Tensor[(7, 1, 13), float64],) */
}

def @func_10287() -> (Tensor[(225), int32], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) {
  %1232 = @func_7437() /* ty=(Tensor[(1, 1, 15), uint8], Tensor[(15), uint8], Tensor[(225), int32], Tensor[(225), int32], Tensor[(7, ?, 13), uint32], Tensor[(7, 1, 13), float64]) */;
  %1233 = @func_4712() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %1234 = @func_8762() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) */;
  %1235 = %1232.2;
  %1236 = @func_3901() /* ty=Tensor[(7, 1, 13), float64] */;
  %1237 = %1233.0;
  %1238 = %1234.0;
  (%1235, %1236, %1237, %1238)
}

def @func_15823() -> (Tensor[(7, 1, 13), float64],) {
  %1241 = fn () -> (Tensor[(7, 1, 13), float64],) {
    %1239 = @func_5538() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) */;
    %1240 = %1239.2;
    (%1240,)
  };
  %1241() /* ty=(Tensor[(7, 1, 13), float64],) */
}

def @func_16292() -> Tensor[(7, 6, 13), uint8] {
  %1242 = @func_14910() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %1243 = %1242.0;
  %1244 = cast(%1243, dtype="uint8") /* ty=Tensor[(7, 1, 13), uint8] */;
  %1245 = cast(meta[relay.Constant][59] /* ty=Tensor[(7, 6, 13), float64] */, dtype="uint8") /* ty=Tensor[(7, 6, 13), uint8] */;
  bitwise_and(%1244, %1245) /* ty=Tensor[(7, 6, 13), uint8] */
}

def @func_14091() -> (Tensor[(225), int32],) {
  %1247 = fn () -> (Tensor[(225), int32],) {
    %1246 = @func_12580() /* ty=Tensor[(225), int32] */;
    (%1246,)
  };
  %1247() /* ty=(Tensor[(225), int32],) */
}

def @func_16943() -> Tensor[(225), int32] {
  %1248 = @func_14746() /* ty=(Tensor[(225), int32],) */;
  %1248.0
}

def @func_14291() -> (Tensor[(225), int32], Tensor[(1183), float64], Tensor[(7, 13, 13), bool], Tensor[(5, 3, 15), float32]) {
  @func_14289() /* ty=(Tensor[(225), int32], Tensor[(1183), float64], Tensor[(7, 13, 13), bool], Tensor[(5, 3, 15), float32]) */
}

def @func_14136() -> (Tensor[(7, 1, 13), float64],) {
  %1251 = fn () -> (Tensor[(7, 1, 13), float64],) {
    %1249 = @func_9006() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(225), int32], Tensor[(7, 1, 13), float64]) */;
    %1250 = %1249.2;
    (%1250,)
  };
  %1251() /* ty=(Tensor[(7, 1, 13), float64],) */
}

def @func_9224() -> Tensor[(7, 1, 13), float64] {
  @func_9222() /* ty=Tensor[(7, 1, 13), float64] */
}

def @func_14111() -> (Tensor[(7, ?, 13), int16], Tensor[(7, 2, 13), bool]) {
  %1252 = @func_4429() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(7, 2, 13), bool]) */;
  %1253 = @func_4767() /* ty=Tensor[(7, ?, 13), int16] */;
  %1254 = %1252.1;
  (%1253, %1254)
}

def @func_11746(%var_11744: Tensor[(7, 2, 13), float64], %var_11745: Tensor[(7, 13, 13), float64]) -> (Tensor[(7, 2, 13), int16], Tensor[(7, 13, 13), uint16], Tensor[(7, 1, 13), float64]) {
  @func_11742(%var_11744, %var_11745) /* ty=(Tensor[(7, 2, 13), int16], Tensor[(7, 13, 13), uint16], Tensor[(7, 1, 13), float64]) */
}

def @func_16083() -> Tensor[(13, 4, 5), float32] {
  %1255 = @func_11826() /* ty=(Tensor[(13, 4, 5), float64],) */;
  %1256 = %1255.0;
  %1257 = cast(%1256, dtype="float32") /* ty=Tensor[(13, 4, 5), float32] */;
  tan(%1257) /* ty=Tensor[(13, 4, 5), float32] */
}

def @func_6583() -> (Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) {
  %1261 = fn () -> (Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) {
    %1258 = @func_4712() /* ty=(Tensor[(7, 1, 13), float64],) */;
    %1259 = @func_5808() /* ty=Tensor[(7, 1, 13), float64] */;
    %1260 = %1258.0;
    (%1259, %1260)
  };
  %1261() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) */
}

def @func_5042(%var_5040: Tensor[(5, 5, 10), float64]) -> Tensor[(5, 5, 10), float64] {
  @func_5039(%var_5040) /* ty=Tensor[(5, 5, 10), float64] */
}

def @func_4271() -> (Tensor[(1800), int8], Tensor[(7, 1, 13), float64]) {
  %1265 = fn () -> (Tensor[(1800), int8], Tensor[(7, 1, 13), float64]) {
    %1262 = @func_3816() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(3, 14, 12), float32], Tensor[(504), float32], Tensor[(1800), int8]) */;
    %1263 = %1262.3;
    %1264 = @func_3901() /* ty=Tensor[(7, 1, 13), float64] */;
    (%1263, %1264)
  };
  %1265() /* ty=(Tensor[(1800), int8], Tensor[(7, 1, 13), float64]) */
}

def @func_6698() -> (Tensor[(7, ?, 13), int16], Tensor[(225), int32]) {
  %1266 = @func_6184() /* ty=(Tensor[(7, ?, 13), int16], Tensor[(5, 45), int32], Tensor[(324), float64]) */;
  %1267 = %1266.0;
  %1268 = @func_4538() /* ty=Tensor[(225), int32] */;
  (%1267, %1268)
}

def @func_9932(%var_9930: Tensor[(225), float32]) -> (Tensor[(7, 1, 13), float64], Tensor[(3, 14, 12), bool], Tensor[(5, 3, 15), int64], Tensor[(260), float64], Tensor[(504, 225), int8], Tensor[(7, 504, 13), int64], Tensor[(260), float32]) {
  @func_9929(%var_9930) /* ty=(Tensor[(7, 1, 13), float64], Tensor[(3, 14, 12), bool], Tensor[(5, 3, 15), int64], Tensor[(260), float64], Tensor[(504, 225), int8], Tensor[(7, 504, 13), int64], Tensor[(260), float32]) */
}

def @func_13090(%var_13088: Tensor[(324), float64]) -> (Tensor[(7, ?, 13), int16], Tensor[(225), int32], Tensor[(7, ?, 13), int16], Tensor[(8, 9, ?), uint64], Tensor[(72), float32], Tensor[(7, 1, 13), float64], Tensor[(9, 12, 3), float64], Tensor[(4, 52), float64], Tensor[(324), float64]) {
  @func_13087(%var_13088) /* ty=(Tensor[(7, ?, 13), int16], Tensor[(225), int32], Tensor[(7, ?, 13), int16], Tensor[(8, 9, ?), uint64], Tensor[(72), float32], Tensor[(7, 1, 13), float64], Tensor[(9, 12, 3), float64], Tensor[(4, 52), float64], Tensor[(324), float64]) */
}

def @func_13960() -> (Tensor[(7, 1, 13), float64], Tensor[(3, 14, 12), bool], Tensor[(504), float32]) {
  %1269 = cast(meta[relay.Constant][60] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
  %1270 = reshape(%1269, newshape=[3, 14, 12]) /* ty=Tensor[(3, 14, 12), float32] */;
  %1271 = @func_7855(%1270) /* ty=(Tensor[(3, 14, 12), bool],) */;
  %1272 = @func_3917() /* ty=Tensor[(7, 1, 13), float64] */;
  %1273 = %1271.0;
  (%1272, %1273, meta[relay.Constant][60] /* ty=Tensor[(504), float32] */)
}

def @func_14289() -> (Tensor[(225), int32], Tensor[(1183), float64], Tensor[(7, 13, 13), bool], Tensor[(5, 3, 15), float32]) {
  %1274 = @func_6826() /* ty=(Tensor[(225), int32], Tensor[(7, 2, 13), float32]) */;
  %1275 = @func_3901() /* ty=Tensor[(7, 1, 13), float64] */;
  %1276 = cast(meta[relay.Constant][61] /* ty=Tensor[(1183), float64] */, dtype="float64") /* ty=Tensor[(1183), float64] */;
  %1277 = reshape(%1276, newshape=[7, 13, 13]) /* ty=Tensor[(7, 13, 13), float64] */;
  %1278 = @func_10686(%1277) /* ty=Tensor[(7, 13, 13), float64] */;
  %1279 = cast(%1275, dtype="bool") /* ty=Tensor[(7, 1, 13), bool] */;
  %1280 = cast(%1278, dtype="bool") /* ty=Tensor[(7, 13, 13), bool] */;
  %1281 = @func_6929() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(5, 3, 15), float32]) */;
  %1282 = %1274.0;
  %1283 = not_equal(%1279, %1280) /* ty=Tensor[(7, 13, 13), bool] */;
  %1284 = %1281.3;
  (%1282, meta[relay.Constant][61] /* ty=Tensor[(1183), float64] */, %1283, %1284)
}

def @func_9999() -> (Tensor[(7, 1, 13), float64],) {
  @func_9997() /* ty=(Tensor[(7, 1, 13), float64],) */
}

def @func_14506() -> (Tensor[(7, 1, 13), float64], Tensor[(7, ?, 13), int16]) {
  %1285 = @func_6929() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64], Tensor[(5, 3, 15), float32]) */;
  %1286 = @func_9243() /* ty=(Tensor[(7, ?, 13), int16],) */;
  %1287 = %1285.0;
  %1288 = %1286.0;
  (%1287, %1288)
}

def @func_5809() -> Tensor[(7, 1, 13), float64] {
  %1289 = fn () -> Tensor[(7, 1, 13), float64] {
    @func_4292() /* ty=Tensor[(7, 1, 13), float64] */
  };
  %1289() /* ty=Tensor[(7, 1, 13), float64] */
}

def @func_14342(%var_14340: Tensor[(225), int32]) -> Tensor[(225), float64] {
  @func_14339(%var_14340) /* ty=Tensor[(225), float64] */
}

def @func_16426() -> Tensor[(5, 3, 15), float32] {
  %1290 = @func_5317() /* ty=(Tensor[(5, 3, 15), float32], Tensor[(7, 1, 13), float64]) */;
  %1290.0
}

def @func_15992() -> (Tensor[(7, 1, 13), float64],) {
  %1291 = @func_9556() /* ty=Tensor[(7, 1, 13), float64] */;
  (%1291,)
}

def @func_17866() -> (Tensor[(7, 1, 13), float64],) {
  @func_17864() /* ty=(Tensor[(7, 1, 13), float64],) */
}

def @main(%var_18057: Tensor[(780), int64]) -> (Tensor[(324), float64], Tensor[(780), int64], Tensor[(7, 1, 13), float64], Tensor[(12, 182), bool]) {
  %1292 = @func_16878() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(324), float64], Tensor[(225), int32]) */;
  %1293 = @func_12099() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %1294 = cast(%var_18057, dtype="int64") /* ty=Tensor[(780), int64] */;
  %1295 = reshape(%1294, newshape=[4, 15, 13]) /* ty=Tensor[(4, 15, 13), int64] */;
  %1296 = @func_11658(%1295) /* ty=(Tensor[(4, 15, 13), bool], Tensor[(1, 182), float32], Tensor[(7, 110), float64], Tensor[(182), float32], Tensor[(225), int32]) */;
  %1297 = %1296.1;
  %1298 = cast(%1297, dtype="bool") /* ty=Tensor[(1, 182), bool] */;
  %1299 = cast(meta[relay.Constant][62] /* ty=Tensor[(12, 182), float32] */, dtype="bool") /* ty=Tensor[(12, 182), bool] */;
  %1300 = %1292.1;
  %1301 = %1293.0;
  %1302 = equal(%1298, %1299) /* ty=Tensor[(12, 182), bool] */;
  (%1300, %var_18057, %1301, %1302)
}

def @func_17252() -> Tensor[(7, 1, 13), float64] {
  %1304 = fn () -> Tensor[(7, 1, 13), float64] {
    %1303 = @func_16663() /* ty=(Tensor[(7, 1, 13), float64], Tensor[(7, 1, 13), float64]) */;
    %1303.0
  };
  %1304() /* ty=Tensor[(7, 1, 13), float64] */
}

def @func_6828() -> (Tensor[(225), int32], Tensor[(7, 2, 13), float32]) {
  @func_6826() /* ty=(Tensor[(225), int32], Tensor[(7, 2, 13), float32]) */
}

def @func_9556() -> Tensor[(7, 1, 13), float64] {
  %1305 = @func_4712() /* ty=(Tensor[(7, 1, 13), float64],) */;
  %1305.0
}

def @func_12543() -> Tensor[(3, 14, 12), float64] {
  %1306 = @func_7946() /* ty=(Tensor[(3, 14, 12), float64],) */;
  %1306.0
}

def @func_6007() -> Tensor[(7, 1, 13), float64] {
  %1308 = fn () -> Tensor[(7, 1, 13), float64] {
    %1307 = @func_4886() /* ty=(Tensor[(7, 1, 13), float64],) */;
    %1307.0
  };
  %1308() /* ty=Tensor[(7, 1, 13), float64] */
}

def @func_5928() -> (Tensor[(7, ?, 13), int16],) {
  %1309 = @func_4767() /* ty=Tensor[(7, ?, 13), int16] */;
  (%1309,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen921/build/output.py", line 4866, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  79: TVMFuncCall
  78: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  77: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  76: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  75: tvm::transform::Pass::operator()(tvm::IRModule) const
  74: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  73: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  72: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  71: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  70: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  69: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [14:48:17] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int


==========mod==========
#[version = "0.0.5"]
def @func_16305() -> (Tensor[(72), float32], Tensor[(1274), int32]) {
  %0 = @func_15980() /* ty=(Tensor[(72), float32],) */;
  %1 = @func_8390() /* ty=(Tensor[(1274), int32], Tensor[(1274), int32], Tensor[(4, 3, 6), float32]) */;
  %2 = %0.0;
  %3 = %1.1;
  (%2, %3)
}

def @func_11585() -> (Tensor[(4, 3, 6), float32],) {
  %4 = @func_2351() /* ty=(Tensor[(72), float32], Tensor[(1274), int32], Tensor[(1274), int32], Tensor[(4, 3, 6), float32]) */;
  %5 = %4.3;
  (%5,)
}

def @func_7021() -> (Tensor[(72), float32],) {
  %6 = @func_2689() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %7 = %6.1;
  (%7,)
}

def @func_3698() -> Tensor[(72), float32] {
  %8 = @func_2191() /* ty=(Tensor[(72), float32],) */;
  %8.0
}

def @func_13242() -> Tensor[(2, 24), bool] {
  %9 = @func_7423() /* ty=(Tensor[(4, 3, 6), float32], Tensor[(180), float32], Tensor[(2, 24), float32]) */;
  %10 = %9.2;
  %11 = cast(%10, dtype="float64") /* ty=Tensor[(2, 24), float64] */;
  %12 = atanh(%11) /* ty=Tensor[(2, 24), float64] */;
  %13 = cast(%10, dtype="bool") /* ty=Tensor[(2, 24), bool] */;
  %14 = shape_of(%12, dtype="int32") /* ty=Tensor[(2), int32] */;
  %15 = cast(%12, dtype="bool") /* ty=Tensor[(2, 24), bool] */;
  %16 = dyn.reshape(%13, %14, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  equal(%15, %16) /* ty=Tensor[(2, 24), bool] */
}

def @func_4461() -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32]) {
  %17 = @func_3362() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(8, 5, 4), float64], Tensor[(160), float64]) */;
  %18 = @func_2184() /* ty=(Tensor[(6, 13, 11), float64], Tensor[(4, 3, 6), float32], Tensor[(72), float32]) */;
  %19 = @func_3698() /* ty=Tensor[(72), float32] */;
  %20 = %17.1;
  %21 = %18.1;
  (%19, %20, %21)
}

def @func_15946() -> (Tensor[(72), float32], Tensor[(180), float32]) {
  %22 = @func_12828() /* ty=(Tensor[(72), float32], Tensor[(864), float32]) */;
  %23 = @func_6432() /* ty=(Tensor[(72), float32], Tensor[(864), float32], Tensor[(180), float32], Tensor[(48), uint32]) */;
  %24 = %22.0;
  %25 = %23.2;
  (%24, %25)
}

def @func_7208(%var_7201: Tensor[(96), float32], %var_7202: Tensor[(20, 4), float32]) -> (Tensor[(72), float32], Tensor[(48), uint32], Tensor[(12, ?, 8), bool], Tensor[(96), float32], Tensor[(20, 4), float32]) {
  %26 = @func_6209() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %27 = @func_4821() /* ty=(Tensor[(864), float32], Tensor[(48), uint32]) */;
  %28 = cast(%var_7201, dtype="float32") /* ty=Tensor[(96), float32] */;
  %29 = cast(%var_7202, dtype="float32") /* ty=Tensor[(20, 4), float32] */;
  %30 = reshape(%28, newshape=[12, 1, 8]) /* ty=Tensor[(12, 1, 8), float32] */;
  %31 = reshape(%29, newshape=[80]) /* ty=Tensor[(80), float32] */;
  %32 = @func_5462(%30, %31) /* ty=(Tensor[(12, ?, 8), bool], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(240), float32]) */;
  %33 = %26.1;
  %34 = %27.1;
  %35 = %32.0;
  (%33, %34, %35, %var_7201, %var_7202)
}

def @func_10684() -> (Tensor[(72), float32],) {
  %36 = @func_2881() /* ty=(Tensor[(72), float32], Tensor[(1274), int32]) */;
  %37 = %36.0;
  (%37,)
}

def @func_13058() -> (Tensor[(72), float32],) {
  %38 = @func_5055() /* ty=(Tensor[(1274), int32], Tensor[(72), float32], Tensor[(72), float32]) */;
  %39 = %38.2;
  (%39,)
}

def @func_15528() -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(80), float32]) {
  %40 = @func_6209() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %41 = @func_7298() /* ty=(Tensor[(72), float32], Tensor[(80), float32]) */;
  %42 = @func_12597() /* ty=Tensor[(72), float32] */;
  %43 = %40.0;
  %44 = %41.1;
  (%42, %43, %44)
}

def @func_12550(%var_12533: uint16) -> (Tensor[(3, 6, 5), uint16], Tensor[(14, 5, 12), bool], Tensor[(12, 70), float32], Tensor[(72), float32]) {
  %45 = cast(%var_12533, dtype="uint16") /* ty=uint16 */;
  %46 = cast(meta[relay.Constant][0] /* ty=Tensor[(3, 6, 5), uint16] */, dtype="uint16") /* ty=Tensor[(3, 6, 5), uint16] */;
  %47 = cast(meta[relay.Constant][1] /* ty=Tensor[(12, 70), float32] */, dtype="float32") /* ty=Tensor[(12, 70), float32] */;
  %48 = reshape(%47, newshape=[14, 5, 12]) /* ty=Tensor[(14, 5, 12), float32] */;
  %49 = @func_10830(%48) /* ty=(Tensor[(14, 5, 12), bool],) */;
  %50 = maximum(%45, %46) /* ty=Tensor[(3, 6, 5), uint16] */;
  %51 = %49.0;
  %52 = @func_3698() /* ty=Tensor[(72), float32] */;
  (%50, %51, meta[relay.Constant][1] /* ty=Tensor[(12, 70), float32] */, %52)
}

def @func_16949() -> (Tensor[(72), float32],) {
  %53 = @func_8857() /* ty=(Tensor[(8, 5, 4), float64], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32]) */;
  %54 = %53.1;
  (%54,)
}

def @func_6294() -> (Tensor[(72), float32], Tensor[(72), float32]) {
  %55 = @func_3117() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %56 = @func_5175() /* ty=Tensor[(72), float32] */;
  %57 = %55.1;
  (%56, %57)
}

def @func_5507() -> (Tensor[(72), float32], Tensor[(4, 3, 6), float32]) {
  %58 = @func_3574() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(24, 10), float32], Tensor[(864), float32], Tensor[(48), uint32], Tensor[(36, 12), uint32], Tensor[(6, 30), float32]) */;
  %59 = @func_2184() /* ty=(Tensor[(6, 13, 11), float64], Tensor[(4, 3, 6), float32], Tensor[(72), float32]) */;
  %60 = %58.2;
  %61 = %59.1;
  (%60, %61)
}

def @func_14446() -> (Tensor[(72), float32],) {
  %62 = @func_10632() /* ty=Tensor[(72), float32] */;
  (%62,)
}

def @func_9643() -> (Tensor[(240), float32], Tensor[(80), float32], Tensor[(80), float32]) {
  %63 = @func_7058() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32], Tensor[(240), float32], Tensor[(72), float32]) */;
  %64 = cast(meta[relay.Constant][2] /* ty=Tensor[(80), float32] */, dtype="float32") /* ty=Tensor[(80), float32] */;
  %65 = %63.3;
  %66 = cast(%65, dtype="float32") /* ty=Tensor[(240), float32] */;
  %67 = reshape(%64, newshape=[80]) /* ty=Tensor[(80), float32] */;
  %68 = reshape(%66, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %69 = @func_3264(%67, %68) /* ty=(Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(240), float32]) */;
  %70 = %69.2;
  (%65, %70, meta[relay.Constant][2] /* ty=Tensor[(80), float32] */)
}

def @func_16831() -> (Tensor[(240), float32],) {
  %71 = @func_4005() /* ty=(Tensor[(72), float32], Tensor[(240), float32]) */;
  %72 = %71.1;
  (%72,)
}

def @func_8685(%var_8675: Tensor[(900), float32]) -> (Tensor[(72), float32], Tensor[(15, 15, 4), float32], Tensor[(900), float32]) {
  %73 = @func_4064() /* ty=(Tensor[(72), float32],) */;
  %74 = cast(%var_8675, dtype="float32") /* ty=Tensor[(900), float32] */;
  %75 = reshape(%74, newshape=[15, 15, 4]) /* ty=Tensor[(15, 15, 4), float32] */;
  %76 = %73.0;
  %77 = @func_8171(%75) /* ty=Tensor[(15, 15, 4), float32] */;
  (%76, %77, %var_8675)
}

def @func_14076() -> (Tensor[(72), float32], Tensor[(4, 3, 6), uint8], Tensor[(72), float32]) {
  %78 = @func_9373() /* ty=Tensor[(72), float32] */;
  %79 = cast(%78, dtype="float32") /* ty=Tensor[(72), float32] */;
  %80 = reshape(%79, newshape=[4, 3, 6]) /* ty=Tensor[(4, 3, 6), float32] */;
  %81 = @func_9926(%80) /* ty=(Tensor[(4, 3, 6), uint8],) */;
  %82 = @func_11926() /* ty=(Tensor[(72), float32],) */;
  %83 = %81.0;
  %84 = %82.0;
  (%78, %83, %84)
}

def @func_17052() -> (Tensor[(72), float32], Tensor[(72), float32]) {
  %85 = @func_9003() /* ty=(Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(180, 1), float32]) */;
  %86 = @func_6294() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %87 = %85.0;
  %88 = %86.1;
  (%87, %88)
}

def @func_12135() -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32]) {
  %89 = @func_5644() /* ty=Tensor[(72), float32] */;
  %90 = @func_5715() /* ty=Tensor[(72), float32] */;
  %91 = @func_3698() /* ty=Tensor[(72), float32] */;
  (%89, %90, %91)
}

def @func_17659() -> Tensor[(72), float32] {
  @func_8449() /* ty=Tensor[(72), float32] */
}

def @func_12617() -> (Tensor[(72), float32],) {
  %92 = @func_7058() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32], Tensor[(240), float32], Tensor[(72), float32]) */;
  %93 = %92.0;
  (%93,)
}

def @func_14567(%var_14504: Tensor[(3360), float64], %var_14505: Tensor[(1274), int32], %var_14517: Tensor[(260), int32], %var_14562: Tensor[(2, 24), float32]) -> (Tensor[(4, 3, 6), float32], Tensor[(4, 3, 6), float32], Tensor[(7, 14, 13), bool], Tensor[(3360), float64], Tensor[(1274), int32], Tensor[(72), float32], Tensor[(20), int32], Tensor[(260), int32], Tensor[(72), float32], Tensor[(2, 24), float64]) {
  %94 = @func_12035() /* ty=(Tensor[(80), float32], Tensor[(4, 3, 6), float32]) */;
  %95 = cast(%var_14504, dtype="float64") /* ty=Tensor[(3360), float64] */;
  %96 = cast(%var_14505, dtype="int32") /* ty=Tensor[(1274), int32] */;
  %97 = reshape(%95, newshape=[14, 16, 15]) /* ty=Tensor[(14, 16, 15), float64] */;
  %98 = reshape(%96, newshape=[1274]) /* ty=Tensor[(1274), int32] */;
  %99 = @func_13297(%97, %98) /* ty=(Tensor[(14, 16, 15), float64], Tensor[(7, 14, 13), bool], Tensor[(1274), int32], Tensor[(72), float32]) */;
  %100 = cast(meta[relay.Constant][3] /* ty=Tensor[(20), int32] */, dtype="int32") /* ty=Tensor[(20), int32] */;
  %101 = cast(%var_14517, dtype="int32") /* ty=Tensor[(260), int32] */;
  %102 = reshape(%100, newshape=[1, 5, 4]) /* ty=Tensor[(1, 5, 4), int32] */;
  %103 = reshape(%101, newshape=[13, 5, 4]) /* ty=Tensor[(13, 5, 4), int32] */;
  %104 = @func_13704(%102, %103) /* ty=(Tensor[(13, 5, 4), int32], Tensor[(72), float32]) */;
  %105 = @func_11773() /* ty=(Tensor[(1274), int32], Tensor[(2, 24), float32], Tensor[(72), float32]) */;
  %106 = %105.1;
  %107 = cast(%var_14562, dtype="float64") /* ty=Tensor[(2, 24), float64] */;
  %108 = shape_of(%106, dtype="int32") /* ty=Tensor[(2), int32] */;
  %109 = cast(%106, dtype="float64") /* ty=Tensor[(2, 24), float64] */;
  %110 = dyn.reshape(%107, %108, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %111 = %94.1;
  %112 = @func_14315() /* ty=Tensor[(4, 3, 6), float32] */;
  %113 = %99.1;
  %114 = %104.1;
  %115 = @func_11387() /* ty=Tensor[(72), float32] */;
  %116 = divide(%109, %110) /* ty=Tensor[(2, 24), float64] */;
  (%111, %112, %113, %var_14504, %var_14505, %114, meta[relay.Constant][3] /* ty=Tensor[(20), int32] */, %var_14517, %115, %116)
}

def @func_13487() -> (Tensor[(72), float32],) {
  %117 = @func_12058() /* ty=(Tensor[(72), float32],) */;
  %118 = %117.0;
  (%118,)
}

def @func_4550() -> Tensor[(240), float32] {
  %119 = @func_3749() /* ty=(Tensor[(240), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32]) */;
  %119.0
}

def @func_18794() -> (Tensor[(1274), int32],) {
  %120 = @func_12372() /* ty=(Tensor[(1274), int32], Tensor[(72), float32]) */;
  %121 = %120.0;
  (%121,)
}

def @func_13631() -> Tensor[(72), float32] {
  %122 = @func_12617() /* ty=(Tensor[(72), float32],) */;
  %122.0
}

def @func_5586(%var_5574: Tensor[(48), float32]) -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(?, 16, 3), bool], Tensor[(48), float32], Tensor[(180), float32], Tensor[(180), float32]) {
  %123 = @func_4064() /* ty=(Tensor[(72), float32],) */;
  %124 = @func_2191() /* ty=(Tensor[(72), float32],) */;
  %125 = cast(%var_5574, dtype="float32") /* ty=Tensor[(48), float32] */;
  %126 = cast(meta[relay.Constant][4] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %127 = reshape(%125, newshape=[1, 16, 3]) /* ty=Tensor[(1, 16, 3), float32] */;
  %128 = reshape(%126, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %129 = @func_1464(%127, %128) /* ty=(Tensor[(7, 14, 13), bool], Tensor[(1274), int32], Tensor[(4, 3, 6), bool], Tensor[(36, 12), uint32], Tensor[(4, 3, 6), float32], Tensor[(?, 16, 3), bool], Tensor[(12, 6, 12), bool], Tensor[(864), float32], Tensor[(15, 1, 12), float32], Tensor[(180), float32]) */;
  %130 = @func_4665() /* ty=(Tensor[(4, 3, 6), float32], Tensor[(72), float32], Tensor[(180), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(80), float32], Tensor[(240), float32], Tensor[(72), float32]) */;
  %131 = %123.0;
  %132 = %124.0;
  %133 = %129.5;
  %134 = %130.2;
  (%131, %132, %133, %var_5574, meta[relay.Constant][4] /* ty=Tensor[(180), float32] */, %134)
}

def @func_9130() -> (Tensor[(72), float32],) {
  %135 = @func_2842() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %136 = %135.1;
  (%136,)
}

def @func_11215(%var_11164: Tensor[(1008), float32], %var_11165: Tensor[(48), uint32]) -> (Tensor[(4, 3, 9), float32], Tensor[(72), float32], Tensor[(1008), float32], Tensor[(48), uint32], Tensor[(72), float32], Tensor[(4, 3, 6), bool]) {
  %137 = @func_9243() /* ty=Tensor[(4, 3, 9), bool] */;
  %138 = cast(%137, dtype="float32") /* ty=Tensor[(4, 3, 9), float32] */;
  %139 = cast(%var_11164, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %140 = cast(%var_11165, dtype="uint32") /* ty=Tensor[(48), uint32] */;
  %141 = reshape(%139, newshape=[1008]) /* ty=Tensor[(1008), float32] */;
  %142 = reshape(%140, newshape=[48]) /* ty=Tensor[(48), uint32] */;
  %143 = @func_9760(%141, %142) /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(80, 2), float64], Tensor[(1008), float32], Tensor[(160), float64], Tensor[(72), float32], Tensor[(432, 1), uint32], Tensor[(48), uint32]) */;
  %144 = @func_10078() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32]) */;
  %145 = %144.0;
  %146 = cast(%145, dtype="float32") /* ty=Tensor[(72), float32] */;
  %147 = reshape(%146, newshape=[4, 3, 6]) /* ty=Tensor[(4, 3, 6), float32] */;
  %148 = @func_10488(%147) /* ty=(Tensor[(4, 3, 6), bool], Tensor[(240), float32]) */;
  %149 = log2(%138) /* ty=Tensor[(4, 3, 9), float32] */;
  %150 = %143.1;
  %151 = %148.0;
  (%149, %150, %var_11164, %var_11165, %145, %151)
}

def @func_10978() -> Tensor[(80), float32] {
  %152 = @func_9643() /* ty=(Tensor[(240), float32], Tensor[(80), float32], Tensor[(80), float32]) */;
  %152.2
}

def @func_16717(%var_16700: Tensor[(770), float32]) -> (Tensor[(72), float32], Tensor[(7, 14, 13), bool], Tensor[(864), float32], Tensor[(770), float32]) {
  %153 = @func_4064() /* ty=(Tensor[(72), float32],) */;
  %154 = cast(meta[relay.Constant][5] /* ty=Tensor[(864), float32] */, dtype="float32") /* ty=Tensor[(864), float32] */;
  %155 = cast(%var_16700, dtype="float32") /* ty=Tensor[(770), float32] */;
  %156 = reshape(%154, newshape=[864]) /* ty=Tensor[(864), float32] */;
  %157 = reshape(%155, newshape=[770]) /* ty=Tensor[(770), float32] */;
  %158 = @func_2594(%156, %157) /* ty=(Tensor[(72), float32], Tensor[(15, 1, 12), float32], Tensor[(180), float32], Tensor[(12, 6, 12), bool], Tensor[(864), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(240), float32], Tensor[(7, 14, 13), bool], Tensor[(770), float32]) */;
  %159 = %153.0;
  %160 = %158.8;
  (%159, %160, meta[relay.Constant][5] /* ty=Tensor[(864), float32] */, %var_16700)
}

def @func_17349() -> (Tensor[(72), float32],) {
  %161 = @func_3749() /* ty=(Tensor[(240), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32]) */;
  %162 = %161.1;
  (%162,)
}

def @func_3117() -> (Tensor[(72), float32], Tensor[(72), float32]) {
  %163 = @func_2881() /* ty=(Tensor[(72), float32], Tensor[(1274), int32]) */;
  %164 = @func_2842() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %165 = %163.0;
  %166 = %164.0;
  (%165, %166)
}

def @func_14132() -> Tensor[(72), float64] {
  %167 = @func_3769() /* ty=(Tensor[(72), float64],) */;
  %167.0
}

def @func_4368() -> Tensor[(4, 3, 6), float32] {
  %168 = @func_3870() /* ty=(Tensor[(4, 3, 6), float32], Tensor[(1274), int32]) */;
  %168.0
}

def @func_4795(%var_4790: Tensor[(24, 10), float32]) -> (Tensor[(4, 3, 6), float32], Tensor[(24, 10), bool], Tensor[(24, 10), bool]) {
  %169 = @func_3574() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(24, 10), float32], Tensor[(864), float32], Tensor[(48), uint32], Tensor[(36, 12), uint32], Tensor[(6, 30), float32]) */;
  %170 = %169.4;
  %171 = cast(%170, dtype="float64") /* ty=Tensor[(24, 10), float64] */;
  %172 = sqrt(%171) /* ty=Tensor[(24, 10), float64] */;
  %173 = cast(%170, dtype="bool") /* ty=Tensor[(24, 10), bool] */;
  %174 = shape_of(%172, dtype="int32") /* ty=Tensor[(2), int32] */;
  %175 = cast(%172, dtype="bool") /* ty=Tensor[(24, 10), bool] */;
  %176 = dyn.reshape(%173, %174, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %177 = cast(%var_4790, dtype="bool") /* ty=Tensor[(24, 10), bool] */;
  %178 = shape_of(%170, dtype="int32") /* ty=Tensor[(2), int32] */;
  %179 = cast(%170, dtype="bool") /* ty=Tensor[(24, 10), bool] */;
  %180 = dyn.reshape(%177, %178, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %181 = @func_4368() /* ty=Tensor[(4, 3, 6), float32] */;
  %182 = logical_or(%175, %176) /* ty=Tensor[(24, 10), bool] */;
  %183 = less(%179, %180) /* ty=Tensor[(24, 10), bool] */;
  (%181, %182, %183)
}

def @func_14747() -> Tensor[(72), float32] {
  @func_8369() /* ty=Tensor[(72), float32] */
}

def @func_4284() -> (Tensor[(72), float32], Tensor[(7, 14, 13), bool], Tensor[(1274), int32]) {
  %184 = cast(meta[relay.Constant][6] /* ty=Tensor[(1274), int32] */, dtype="int32") /* ty=Tensor[(1274), int32] */;
  %185 = cast(meta[relay.Constant][6] /* ty=Tensor[(1274), int32] */, dtype="int32") /* ty=Tensor[(1274), int32] */;
  %186 = reshape(%184, newshape=[7, 14, 13]) /* ty=Tensor[(7, 14, 13), int32] */;
  %187 = reshape(%185, newshape=[7, 14, 13]) /* ty=Tensor[(7, 14, 13), int32] */;
  %188 = @func_45(%186, %187) /* ty=(Tensor[(7, 14, 13), bool],) */;
  %189 = @func_2978() /* ty=Tensor[(72), float32] */;
  %190 = %188.0;
  (%189, %190, meta[relay.Constant][6] /* ty=Tensor[(1274), int32] */)
}

def @func_11723() -> Tensor[(72), float32] {
  @func_3698() /* ty=Tensor[(72), float32] */
}

def @func_12597() -> Tensor[(72), float32] {
  %191 = @func_7298() /* ty=(Tensor[(72), float32], Tensor[(80), float32]) */;
  %191.0
}

def @func_15429() -> Tensor[(48), uint32] {
  %192 = @func_6432() /* ty=(Tensor[(72), float32], Tensor[(864), float32], Tensor[(180), float32], Tensor[(48), uint32]) */;
  %192.3
}

def @func_17958() -> (Tensor[(72), float32],) {
  %193 = @func_5611() /* ty=Tensor[(72), float32] */;
  (%193,)
}

def @func_7838(%var_7782: Tensor[(195), float64]) -> (Tensor[(8, 10, 3), float32], Tensor[(72), float32], Tensor[(13, 5, 3), float64], Tensor[(195), float64]) {
  %194 = @func_3151() /* ty=(Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(240), float32]) */;
  %195 = @func_2689() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %196 = cast(%var_7782, dtype="float64") /* ty=Tensor[(195), float64] */;
  %197 = reshape(%196, newshape=[13, 5, 3]) /* ty=Tensor[(13, 5, 3), float64] */;
  %198 = %194.1;
  %199 = %195.0;
  %200 = @func_7077(%197) /* ty=Tensor[(13, 5, 3), float64] */;
  (%198, %199, %200, %var_7782)
}

def @func_17144() -> Tensor[(72), float64] {
  @func_7433() /* ty=Tensor[(72), float64] */
}

def @func_852(%var_832: Tensor[(1, 16, 3), uint32], %var_833: Tensor[(9, 16, 3), uint32]) -> (Tensor[(9, 16, 3), uint32], Tensor[(4, 3, 6), bool]) {
  %201 = cast(%var_832, dtype="uint32") /* ty=Tensor[(1, 16, 3), uint32] */;
  %202 = cast(%var_833, dtype="uint32") /* ty=Tensor[(9, 16, 3), uint32] */;
  %203 = cast(meta[relay.Constant][7] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %204 = reshape(%203, newshape=[4, 3, 6]) /* ty=Tensor[(4, 3, 6), float32] */;
  %205 = @func_579(%204) /* ty=Tensor[(4, 3, 6), float32] */;
  %206 = cast(meta[relay.Constant][7] /* ty=Tensor[(72), float32] */, dtype="bool") /* ty=Tensor[(72), bool] */;
  %207 = shape_of(%205, dtype="int32") /* ty=Tensor[(3), int32] */;
  %208 = cast(%205, dtype="bool") /* ty=Tensor[(4, 3, 6), bool] */;
  %209 = dyn.reshape(%206, %207, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %210 = bitwise_or(%201, %202) /* ty=Tensor[(9, 16, 3), uint32] */;
  %211 = not_equal(%208, %209) /* ty=Tensor[(4, 3, 6), bool] */;
  (%210, %211)
}

def @func_12745() -> (Tensor[(72), float32], Tensor[(72), float32]) {
  %212 = @func_3362() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(8, 5, 4), float64], Tensor[(160), float64]) */;
  %213 = @func_12698() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32], Tensor[(4, 3, 6), float32], Tensor[(72), float32], Tensor[(72), float32]) */;
  %214 = %212.0;
  %215 = %213.4;
  (%214, %215)
}

def @func_3099(%var_3093: Tensor[(8, 5, 4), float64]) -> Tensor[(8, 5, 4), float64] {
  %216 = cast(meta[relay.Constant][8] /* ty=Tensor[(8, 5, 4), float64] */, dtype="float64") /* ty=Tensor[(8, 5, 4), float64] */;
  %217 = shape_of(%var_3093, dtype="int32") /* ty=Tensor[(3), int32] */;
  %218 = cast(%var_3093, dtype="float64") /* ty=Tensor[(8, 5, 4), float64] */;
  %219 = dyn.reshape(%216, %217, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_mod(%218, %219) /* ty=Tensor[(8, 5, 4), float64] */
}

def @func_6890(%var_6861: Tensor[(16, 9, 7), float32], %var_6869: Tensor[(80, 2), float64]) -> (Tensor[(16, 9, 7), float32], Tensor[(8, 5, 4), float64], Tensor[(80, 2), float64]) {
  %220 = cast(%var_6861, dtype="float32") /* ty=Tensor[(16, 9, 7), float32] */;
  %221 = cast(%var_6869, dtype="float64") /* ty=Tensor[(80, 2), float64] */;
  %222 = reshape(%221, newshape=[8, 5, 4]) /* ty=Tensor[(8, 5, 4), float64] */;
  %223 = acosh(%220) /* ty=Tensor[(16, 9, 7), float32] */;
  %224 = @func_3099(%222) /* ty=Tensor[(8, 5, 4), float64] */;
  (%223, %224, %var_6869)
}

def @func_17494(%var_17489: Tensor[(11, 9, 7), int64], %var_17490: Tensor[(11, 9, 7), int64]) -> (Tensor[(11, 9, 7), int64],) {
  %225 = cast(%var_17490, dtype="int64") /* ty=Tensor[(11, 9, 7), int64] */;
  %226 = shape_of(%var_17489, dtype="int32") /* ty=Tensor[(3), int32] */;
  %227 = cast(%var_17489, dtype="int64") /* ty=Tensor[(11, 9, 7), int64] */;
  %228 = dyn.reshape(%225, %226, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %229 = subtract(%227, %228) /* ty=Tensor[(11, 9, 7), int64] */;
  (%229,)
}

def @func_10959(%var_10948: Tensor[(14, 13, 13), float32]) -> Tensor[(14, 13, 13), float32] {
  %230 = cast(%var_10948, dtype="float32") /* ty=Tensor[(14, 13, 13), float32] */;
  asinh(%230) /* ty=Tensor[(14, 13, 13), float32] */
}

def @func_13799() -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(2, 24), bool], Tensor[(1274), int32]) {
  %231 = @func_11364() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(770, 1), float32]) */;
  %232 = @func_3749() /* ty=(Tensor[(240), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32]) */;
  %233 = @func_11511() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %234 = %231.0;
  %235 = %232.1;
  %236 = %233.0;
  %237 = @func_11704() /* ty=Tensor[(72), float32] */;
  %238 = @func_13242() /* ty=Tensor[(2, 24), bool] */;
  %239 = @func_5828() /* ty=Tensor[(1274), int32] */;
  (%234, %235, %236, %237, %238, %239)
}

def @func_8026(%var_7999: Tensor[(1008), float32]) -> (Tensor[(72), float32], Tensor[(16, 9, 7), float32], Tensor[(1008), float32], Tensor[(160), float64], Tensor[(8, 10, 3), float32], Tensor[(240), float32], Tensor[(4, 3, 6), float32]) {
  %240 = @func_3117() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %241 = cast(%var_7999, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %242 = cast(meta[relay.Constant][9] /* ty=Tensor[(160), float64] */, dtype="float64") /* ty=Tensor[(160), float64] */;
  %243 = reshape(%241, newshape=[16, 9, 7]) /* ty=Tensor[(16, 9, 7), float32] */;
  %244 = reshape(%242, newshape=[80, 2]) /* ty=Tensor[(80, 2), float64] */;
  %245 = @func_6890(%243, %244) /* ty=(Tensor[(16, 9, 7), float32], Tensor[(8, 5, 4), float64], Tensor[(80, 2), float64]) */;
  %246 = cast(meta[relay.Constant][10] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %247 = reshape(%246, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %248 = @func_7507(%247) /* ty=(Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(240), float32]) */;
  %249 = @func_2184() /* ty=(Tensor[(6, 13, 11), float64], Tensor[(4, 3, 6), float32], Tensor[(72), float32]) */;
  %250 = %240.0;
  %251 = %245.0;
  %252 = %248.1;
  %253 = %249.1;
  (%250, %251, %var_7999, meta[relay.Constant][9] /* ty=Tensor[(160), float64] */, %252, meta[relay.Constant][10] /* ty=Tensor[(240), float32] */, %253)
}

def @func_4933() -> Tensor[(72), float32] {
  @func_2739() /* ty=Tensor[(72), float32] */
}

def @func_12256() -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32]) {
  %254 = @func_9373() /* ty=Tensor[(72), float32] */;
  %255 = @func_10699() /* ty=Tensor[(72), float32] */;
  %256 = @func_8369() /* ty=Tensor[(72), float32] */;
  %257 = @func_3133() /* ty=Tensor[(72), float32] */;
  (%254, %255, %256, %257)
}

def @func_6432() -> (Tensor[(72), float32], Tensor[(864), float32], Tensor[(180), float32], Tensor[(48), uint32]) {
  %258 = @func_2351() /* ty=(Tensor[(72), float32], Tensor[(1274), int32], Tensor[(1274), int32], Tensor[(4, 3, 6), float32]) */;
  %259 = cast(meta[relay.Constant][11] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %260 = reshape(%259, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %261 = @func_3052(%260) /* ty=(Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(4, 60), float32], Tensor[(864), float32], Tensor[(48), uint32], Tensor[(15, 1, 12), float32], Tensor[(180), float32], Tensor[(72), float32], Tensor[(72), float32]) */;
  %262 = @func_4732() /* ty=(Tensor[(48), uint32],) */;
  %263 = %258.0;
  %264 = %261.3;
  %265 = %262.0;
  (%263, %264, meta[relay.Constant][11] /* ty=Tensor[(180), float32] */, %265)
}

def @func_12169() -> Tensor[(72), float32] {
  %266 = @func_7021() /* ty=(Tensor[(72), float32],) */;
  %266.0
}

def @func_5405() -> Tensor[(72), float32] {
  %267 = @func_5271() /* ty=(Tensor[(72), float32],) */;
  %267.0
}

def @func_5136() -> (Tensor[(72), float32],) {
  %268 = @func_4064() /* ty=(Tensor[(72), float32],) */;
  %269 = %268.0;
  (%269,)
}

def @func_7371() -> (Tensor[(1274), int32],) {
  %270 = @func_5241() /* ty=(Tensor[(1274), int32], Tensor[(72), float32]) */;
  %271 = %270.0;
  (%271,)
}

def @func_7525(%var_7512: Tensor[(13, 16, 11), float64]) -> Tensor[(13, 16, 11), float64] {
  %272 = cast(%var_7512, dtype="float64") /* ty=Tensor[(13, 16, 11), float64] */;
  cos(%272) /* ty=Tensor[(13, 16, 11), float64] */
}

def @func_3362() -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(8, 5, 4), float64], Tensor[(160), float64]) {
  %273 = @func_2351() /* ty=(Tensor[(72), float32], Tensor[(1274), int32], Tensor[(1274), int32], Tensor[(4, 3, 6), float32]) */;
  %274 = cast(meta[relay.Constant][12] /* ty=Tensor[(160), float64] */, dtype="float64") /* ty=Tensor[(160), float64] */;
  %275 = reshape(%274, newshape=[8, 5, 4]) /* ty=Tensor[(8, 5, 4), float64] */;
  %276 = %273.0;
  %277 = @func_2739() /* ty=Tensor[(72), float32] */;
  %278 = @func_3099(%275) /* ty=Tensor[(8, 5, 4), float64] */;
  (%276, %277, %278, meta[relay.Constant][12] /* ty=Tensor[(160), float64] */)
}

def @func_16100() -> (Tensor[(180), float32], Tensor[(72), float32]) {
  %279 = @func_7423() /* ty=(Tensor[(4, 3, 6), float32], Tensor[(180), float32], Tensor[(2, 24), float32]) */;
  %280 = @func_12256() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32]) */;
  %281 = %279.1;
  %282 = %280.2;
  (%281, %282)
}

def @func_9330() -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(864), float32], Tensor[(72), float32], Tensor[(180), float32], Tensor[(48), uint32], Tensor[(72), float32]) {
  %283 = @func_2689() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %284 = @func_5877() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %285 = @func_4821() /* ty=(Tensor[(864), float32], Tensor[(48), uint32]) */;
  %286 = cast(meta[relay.Constant][13] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %287 = reshape(%286, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %288 = @func_3052(%287) /* ty=(Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(4, 60), float32], Tensor[(864), float32], Tensor[(48), uint32], Tensor[(15, 1, 12), float32], Tensor[(180), float32], Tensor[(72), float32], Tensor[(72), float32]) */;
  %289 = @func_8150() /* ty=(Tensor[(72), float32], Tensor[(4, 3, 6), float32], Tensor[(48), uint32], Tensor[(4, 3, 6), float32], Tensor[(72), float32], Tensor[(48), uint32]) */;
  %290 = @func_4665() /* ty=(Tensor[(4, 3, 6), float32], Tensor[(72), float32], Tensor[(180), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(80), float32], Tensor[(240), float32], Tensor[(72), float32]) */;
  %291 = @func_7128() /* ty=Tensor[(72), float32] */;
  %292 = %283.0;
  %293 = %284.0;
  %294 = %285.0;
  %295 = %288.7;
  %296 = %289.2;
  %297 = %290.7;
  (%291, %292, %293, %294, %295, meta[relay.Constant][13] /* ty=Tensor[(180), float32] */, %296, %297)
}

def @func_4005() -> (Tensor[(72), float32], Tensor[(240), float32]) {
  %298 = @func_3749() /* ty=(Tensor[(240), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32]) */;
  %299 = @func_2525() /* ty=Tensor[(72), float32] */;
  %300 = %298.0;
  (%299, %300)
}

def @func_4665() -> (Tensor[(4, 3, 6), float32], Tensor[(72), float32], Tensor[(180), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(80), float32], Tensor[(240), float32], Tensor[(72), float32]) {
  %301 = cast(meta[relay.Constant][14] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %302 = reshape(%301, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %303 = @func_3052(%302) /* ty=(Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(4, 60), float32], Tensor[(864), float32], Tensor[(48), uint32], Tensor[(15, 1, 12), float32], Tensor[(180), float32], Tensor[(72), float32], Tensor[(72), float32]) */;
  %304 = @func_2842() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %305 = cast(meta[relay.Constant][15] /* ty=Tensor[(80), float32] */, dtype="float32") /* ty=Tensor[(80), float32] */;
  %306 = cast(meta[relay.Constant][16] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %307 = reshape(%305, newshape=[80]) /* ty=Tensor[(80), float32] */;
  %308 = reshape(%306, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %309 = @func_3264(%307, %308) /* ty=(Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(240), float32]) */;
  %310 = @func_2689() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %311 = @func_4368() /* ty=Tensor[(4, 3, 6), float32] */;
  %312 = %303.7;
  %313 = %304.1;
  %314 = %309.0;
  %315 = %310.0;
  (%311, %312, meta[relay.Constant][14] /* ty=Tensor[(180), float32] */, %313, %314, meta[relay.Constant][15] /* ty=Tensor[(80), float32] */, meta[relay.Constant][16] /* ty=Tensor[(240), float32] */, %315)
}

def @func_13105() -> (Tensor[(864), float32], Tensor[(72), float32], Tensor[(14, 5, 12), bool], Tensor[(840), float32], Tensor[(72), float32], Tensor[(72), float32]) {
  %316 = @func_5098() /* ty=(Tensor[(72), float32], Tensor[(864), float32]) */;
  %317 = cast(meta[relay.Constant][17] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
  %318 = reshape(%317, newshape=[14, 5, 12]) /* ty=Tensor[(14, 5, 12), float32] */;
  %319 = @func_10830(%318) /* ty=(Tensor[(14, 5, 12), bool],) */;
  %320 = %316.1;
  %321 = @func_3133() /* ty=Tensor[(72), float32] */;
  %322 = %319.0;
  %323 = @func_8369() /* ty=Tensor[(72), float32] */;
  %324 = @func_7128() /* ty=Tensor[(72), float32] */;
  (%320, %321, %322, meta[relay.Constant][17] /* ty=Tensor[(840), float32] */, %323, %324)
}

def @func_18610(%var_18583: Tensor[(7, 8, 6), float64], %var_18598: bool, %var_18599: Tensor[(440), bool]) -> (Tensor[(7, 8, 6), float64], Tensor[(7, 8, 6), float32], Tensor[(4, 11, 10), bool], bool, Tensor[(440), bool], Tensor[(72), float64]) {
  %325 = cast(%var_18583, dtype="float64") /* ty=Tensor[(7, 8, 6), float64] */;
  %326 = cast(%var_18583, dtype="float32") /* ty=Tensor[(7, 8, 6), float32] */;
  %327 = cast(%var_18598, dtype="bool") /* ty=bool */;
  %328 = cast(%var_18599, dtype="bool") /* ty=Tensor[(440), bool] */;
  %329 = reshape(%327, newshape=[]) /* ty=bool */;
  %330 = reshape(%328, newshape=[4, 11, 10]) /* ty=Tensor[(4, 11, 10), bool] */;
  %331 = @func_11332() /* ty=(Tensor[(72), float64], Tensor[(7, 9, 15), int8], Tensor[(945), int8], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32]) */;
  %332 = atanh(%325) /* ty=Tensor[(7, 8, 6), float64] */;
  %333 = acosh(%326) /* ty=Tensor[(7, 8, 6), float32] */;
  %334 = @func_7983(%329, %330) /* ty=Tensor[(4, 11, 10), bool] */;
  %335 = %331.0;
  (%332, %333, %334, %var_18598, %var_18599, %335)
}

def @func_18860() -> Tensor[(72), float32] {
  %336 = @func_11848() /* ty=(Tensor[(72), float32],) */;
  %336.0
}

def @func_5055() -> (Tensor[(1274), int32], Tensor[(72), float32], Tensor[(72), float32]) {
  %337 = @func_3614() /* ty=(Tensor[(72), float32], Tensor[(1274), int32]) */;
  %338 = @func_3614() /* ty=(Tensor[(72), float32], Tensor[(1274), int32]) */;
  %339 = %337.1;
  %340 = @func_4056() /* ty=Tensor[(72), float32] */;
  %341 = %338.0;
  (%339, %340, %341)
}

def @func_2191() -> (Tensor[(72), float32],) {
  %342 = @func_2184() /* ty=(Tensor[(6, 13, 11), float64], Tensor[(4, 3, 6), float32], Tensor[(72), float32]) */;
  %343 = %342.2;
  (%343,)
}

def @func_14789() -> (Tensor[(72), float32], Tensor[(72), float32]) {
  %344 = @func_3854() /* ty=(Tensor[(72), float64], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32]) */;
  %345 = @func_10555() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %346 = %344.3;
  %347 = %345.0;
  (%346, %347)
}

def @func_7433() -> Tensor[(72), float64] {
  %348 = @func_3854() /* ty=(Tensor[(72), float64], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32]) */;
  %348.0
}

def @func_15467() -> (Tensor[(72), float32],) {
  %349 = @func_11364() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(770, 1), float32]) */;
  %350 = %349.0;
  (%350,)
}

def @func_14682() -> Tensor[(72), float32] {
  @func_5644() /* ty=Tensor[(72), float32] */
}

def @func_11006() -> (Tensor[(240), float32],) {
  %351 = @func_5773() /* ty=(Tensor[(240), float32], Tensor[(48), uint32], Tensor[(72), float32]) */;
  %352 = %351.0;
  (%352,)
}

def @func_2689() -> (Tensor[(72), float32], Tensor[(72), float32]) {
  %353 = @func_2184() /* ty=(Tensor[(6, 13, 11), float64], Tensor[(4, 3, 6), float32], Tensor[(72), float32]) */;
  %354 = @func_2525() /* ty=Tensor[(72), float32] */;
  %355 = %353.2;
  (%354, %355)
}

def @func_18252(%var_18240: Tensor[(1008), float32]) -> (Tensor[(72), float32], Tensor[(900), float32], Tensor[(72), float32], Tensor[(1008), float32], Tensor[(48), uint32], Tensor[(72), float32]) {
  %356 = @func_16169() /* ty=(Tensor[(80), float32], Tensor[(15, 15, 4), float32], Tensor[(900), float32]) */;
  %357 = cast(%var_18240, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %358 = cast(meta[relay.Constant][18] /* ty=Tensor[(48), uint32] */, dtype="uint32") /* ty=Tensor[(48), uint32] */;
  %359 = reshape(%357, newshape=[1008]) /* ty=Tensor[(1008), float32] */;
  %360 = reshape(%358, newshape=[48]) /* ty=Tensor[(48), uint32] */;
  %361 = @func_11215(%359, %360) /* ty=(Tensor[(4, 3, 9), float32], Tensor[(72), float32], Tensor[(1008), float32], Tensor[(48), uint32], Tensor[(72), float32], Tensor[(4, 3, 6), bool]) */;
  %362 = @func_8624() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %363 = @func_10143() /* ty=Tensor[(72), float32] */;
  %364 = %356.2;
  %365 = %361.4;
  %366 = %362.1;
  (%363, %364, %365, %var_18240, meta[relay.Constant][18] /* ty=Tensor[(48), uint32] */, %366)
}

def @func_11441() -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(180), float32], Tensor[(48), float32]) {
  %367 = @func_7298() /* ty=(Tensor[(72), float32], Tensor[(80), float32]) */;
  %368 = @func_6294() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %369 = @func_6699() /* ty=(Tensor[(72), float32],) */;
  %370 = cast(meta[relay.Constant][19] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
  %371 = reshape(%370, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %372 = @func_5586(%371) /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(?, 16, 3), bool], Tensor[(48), float32], Tensor[(180), float32], Tensor[(180), float32]) */;
  %373 = %367.0;
  %374 = %368.0;
  %375 = %369.0;
  %376 = @func_3133() /* ty=Tensor[(72), float32] */;
  %377 = %372.4;
  (%373, %374, %375, %376, %377, meta[relay.Constant][19] /* ty=Tensor[(48), float32] */)
}

def @func_4056() -> Tensor[(72), float32] {
  %378 = @func_3854() /* ty=(Tensor[(72), float64], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32]) */;
  %378.1
}

def @func_13861() -> Tensor[(72), float32] {
  @func_3133() /* ty=Tensor[(72), float32] */
}

def @func_5929(%var_5898: Tensor[(864, 1), float32]) -> (Tensor[(72), float32], Tensor[(864), float32], Tensor[(72), float32], Tensor[(864, ?), uint32]) {
  %379 = cast(%var_5898, dtype="float32") /* ty=Tensor[(864, 1), float32] */;
  %380 = reshape(%379, newshape=[864]) /* ty=Tensor[(864), float32] */;
  %381 = @func_2001(%380) /* ty=(Tensor[(6, 3, 4), float64], Tensor[(12, 6, 12), bool], Tensor[(864), float32]) */;
  %382 = @func_3362() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(8, 5, 4), float64], Tensor[(160), float64]) */;
  %383 = cast(%var_5898, dtype="float32") /* ty=Tensor[(864, 1), float32] */;
  %384 = log10(%383) /* ty=Tensor[(864, 1), float32] */;
  %385 = cast(%var_5898, dtype="uint32") /* ty=Tensor[(864, 1), uint32] */;
  %386 = shape_of(%384, dtype="int32") /* ty=Tensor[(2), int32] */;
  %387 = cast(%384, dtype="uint32") /* ty=Tensor[(864, 1), uint32] */;
  %388 = dyn.reshape(%385, %386, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %389 = @func_2978() /* ty=Tensor[(72), float32] */;
  %390 = %381.2;
  %391 = %382.0;
  %392 = subtract(%387, %388) /* ty=Tensor[(864, ?), uint32] */;
  (%389, %390, %391, %392)
}

def @func_6657(%var_6643: Tensor[(36, 24), float32]) -> (Tensor[(48), uint32], Tensor[(48), uint32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(48), uint32], Tensor[(180), float32], Tensor[(72), float32], Tensor[(36, 24), float32], Tensor[(72), float32]) {
  %393 = @func_5773() /* ty=(Tensor[(240), float32], Tensor[(48), uint32], Tensor[(72), float32]) */;
  %394 = @func_4235() /* ty=(Tensor[(72), float32], Tensor[(48), uint32], Tensor[(48), uint32]) */;
  %395 = @func_5098() /* ty=(Tensor[(72), float32], Tensor[(864), float32]) */;
  %396 = @func_4235() /* ty=(Tensor[(72), float32], Tensor[(48), uint32], Tensor[(48), uint32]) */;
  %397 = %393.1;
  %398 = cast(%397, dtype="float32") /* ty=Tensor[(48), float32] */;
  %399 = reshape(%398, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %400 = @func_5586(%399) /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(?, 16, 3), bool], Tensor[(48), float32], Tensor[(180), float32], Tensor[(180), float32]) */;
  %401 = cast(%var_6643, dtype="float32") /* ty=Tensor[(36, 24), float32] */;
  %402 = reshape(%401, newshape=[864, 1]) /* ty=Tensor[(864, 1), float32] */;
  %403 = @func_5929(%402) /* ty=(Tensor[(72), float32], Tensor[(864), float32], Tensor[(72), float32], Tensor[(864, ?), uint32]) */;
  %404 = %394.1;
  %405 = %395.0;
  %406 = @func_2978() /* ty=Tensor[(72), float32] */;
  %407 = @func_2739() /* ty=Tensor[(72), float32] */;
  %408 = %396.1;
  %409 = %400.4;
  %410 = %403.2;
  %411 = @func_2739() /* ty=Tensor[(72), float32] */;
  (%397, %404, %405, %406, %407, %408, %409, %410, %var_6643, %411)
}

def @func_9584() -> Tensor[(1274), int32] {
  %412 = @func_7371() /* ty=(Tensor[(1274), int32],) */;
  %412.0
}

def @func_15133(%var_15115: Tensor[(264), int32]) -> (Tensor[(72), float32], Tensor[(864), float32], Tensor[(4, 60), float32], Tensor[(4, 6, 11), float64], Tensor[(264), int32], Tensor[(72), float32], Tensor[(13, 5, 3), float64], Tensor[(195), float64]) {
  %413 = cast(meta[relay.Constant][20] /* ty=Tensor[(4, 60), float32] */, dtype="float32") /* ty=Tensor[(4, 60), float32] */;
  %414 = reshape(%413, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %415 = @func_8948(%414) /* ty=(Tensor[(72), float32], Tensor[(864), float32], Tensor[(240), float32], Tensor[(864), float32], Tensor[(12, 4), uint32]) */;
  %416 = cast(%var_15115, dtype="int32") /* ty=Tensor[(264), int32] */;
  %417 = cast(%var_15115, dtype="int32") /* ty=Tensor[(264), int32] */;
  %418 = reshape(%416, newshape=[4, 6, 11]) /* ty=Tensor[(4, 6, 11), int32] */;
  %419 = reshape(%417, newshape=[4, 6, 11]) /* ty=Tensor[(4, 6, 11), int32] */;
  %420 = @func_4501(%418, %419) /* ty=(Tensor[(4, 6, 11), int32], Tensor[(4, 6, 11), float64], Tensor[(1274), int32], Tensor[(72), float32]) */;
  %421 = @func_13382() /* ty=(Tensor[(72), float32], Tensor[(1274), int32]) */;
  %422 = cast(meta[relay.Constant][21] /* ty=Tensor[(195), float64] */, dtype="float64") /* ty=Tensor[(195), float64] */;
  %423 = reshape(%422, newshape=[13, 5, 3]) /* ty=Tensor[(13, 5, 3), float64] */;
  %424 = @func_5405() /* ty=Tensor[(72), float32] */;
  %425 = %415.3;
  %426 = %420.1;
  %427 = %421.0;
  %428 = @func_7077(%423) /* ty=Tensor[(13, 5, 3), float64] */;
  (%424, %425, meta[relay.Constant][20] /* ty=Tensor[(4, 60), float32] */, %426, %var_15115, %427, %428, meta[relay.Constant][21] /* ty=Tensor[(195), float64] */)
}

def @func_5996() -> (Tensor[(4, 3, 6), float32], Tensor[(72), float32]) {
  %429 = @func_4461() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32]) */;
  %430 = %429.2;
  %431 = @func_4056() /* ty=Tensor[(72), float32] */;
  (%430, %431)
}

def @func_15640() -> (Tensor[(4, 3, 6), float32],) {
  %432 = @func_14315() /* ty=Tensor[(4, 3, 6), float32] */;
  (%432,)
}

def @func_8150() -> (Tensor[(72), float32], Tensor[(4, 3, 6), float32], Tensor[(48), uint32], Tensor[(4, 3, 6), float32], Tensor[(72), float32], Tensor[(48), uint32]) {
  %433 = @func_5098() /* ty=(Tensor[(72), float32], Tensor[(864), float32]) */;
  %434 = @func_5507() /* ty=(Tensor[(72), float32], Tensor[(4, 3, 6), float32]) */;
  %435 = @func_4732() /* ty=(Tensor[(48), uint32],) */;
  %436 = @func_2948() /* ty=(Tensor[(4, 3, 6), float32],) */;
  %437 = @func_6699() /* ty=(Tensor[(72), float32],) */;
  %438 = @func_6432() /* ty=(Tensor[(72), float32], Tensor[(864), float32], Tensor[(180), float32], Tensor[(48), uint32]) */;
  %439 = %433.0;
  %440 = %434.1;
  %441 = %435.0;
  %442 = %436.0;
  %443 = %437.0;
  %444 = %438.3;
  (%439, %440, %441, %442, %443, %444)
}

def @func_9003() -> (Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(180, 1), float32]) {
  %445 = @func_2881() /* ty=(Tensor[(72), float32], Tensor[(1274), int32]) */;
  %446 = cast(meta[relay.Constant][22] /* ty=Tensor[(180, 1), float32] */, dtype="float32") /* ty=Tensor[(180, 1), float32] */;
  %447 = reshape(%446, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %448 = @func_3052(%447) /* ty=(Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(4, 60), float32], Tensor[(864), float32], Tensor[(48), uint32], Tensor[(15, 1, 12), float32], Tensor[(180), float32], Tensor[(72), float32], Tensor[(72), float32]) */;
  %449 = %445.0;
  %450 = %448.1;
  (%449, %450, meta[relay.Constant][22] /* ty=Tensor[(180, 1), float32] */)
}

def @func_9512() -> (Tensor[(4, 3, 6), float32], Tensor[(240), float32], Tensor[(864), float32], Tensor[(770, 1), float32]) {
  %451 = cast(meta[relay.Constant][23] /* ty=Tensor[(864), float32] */, dtype="float32") /* ty=Tensor[(864), float32] */;
  %452 = cast(meta[relay.Constant][24] /* ty=Tensor[(770, 1), float32] */, dtype="float32") /* ty=Tensor[(770, 1), float32] */;
  %453 = reshape(%451, newshape=[864]) /* ty=Tensor[(864), float32] */;
  %454 = reshape(%452, newshape=[770]) /* ty=Tensor[(770), float32] */;
  %455 = @func_2594(%453, %454) /* ty=(Tensor[(72), float32], Tensor[(15, 1, 12), float32], Tensor[(180), float32], Tensor[(12, 6, 12), bool], Tensor[(864), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(240), float32], Tensor[(7, 14, 13), bool], Tensor[(770), float32]) */;
  %456 = @func_4368() /* ty=Tensor[(4, 3, 6), float32] */;
  %457 = %455.7;
  (%456, %457, meta[relay.Constant][23] /* ty=Tensor[(864), float32] */, meta[relay.Constant][24] /* ty=Tensor[(770, 1), float32] */)
}

def @func_14390() -> (Tensor[(4, 3, 6), float32], Tensor[(72), float32]) {
  %458 = @func_3870() /* ty=(Tensor[(4, 3, 6), float32], Tensor[(1274), int32]) */;
  %459 = %458.0;
  %460 = cast(%459, dtype="float32") /* ty=Tensor[(4, 3, 6), float32] */;
  %461 = @func_7058() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32], Tensor[(240), float32], Tensor[(72), float32]) */;
  %462 = atanh(%460) /* ty=Tensor[(4, 3, 6), float32] */;
  %463 = %461.0;
  (%462, %463)
}

def @func_5438(%var_5433: Tensor[(4, 3, 6), float32]) -> (Tensor[(4, 3, 6), float64],) {
  %464 = @func_4368() /* ty=Tensor[(4, 3, 6), float32] */;
  %465 = cast(%var_5433, dtype="float64") /* ty=Tensor[(4, 3, 6), float64] */;
  %466 = shape_of(%464, dtype="int32") /* ty=Tensor[(3), int32] */;
  %467 = cast(%464, dtype="float64") /* ty=Tensor[(4, 3, 6), float64] */;
  %468 = dyn.reshape(%465, %466, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %469 = maximum(%467, %468) /* ty=Tensor[(4, 3, 6), float64] */;
  (%469,)
}

def @func_13995() -> Tensor[(72), float32] {
  %470 = @func_5241() /* ty=(Tensor[(1274), int32], Tensor[(72), float32]) */;
  %470.1
}

def @func_1378(%var_1373: Tensor[(15, 1, 12), float32]) -> Tensor[(15, 1, 12), float32] {
  %471 = cast(%var_1373, dtype="float32") /* ty=Tensor[(15, 1, 12), float32] */;
  acos(%471) /* ty=Tensor[(15, 1, 12), float32] */
}

def @func_8909() -> (Tensor[(72), float32],) {
  %472 = @func_6209() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %473 = %472.1;
  (%473,)
}

def @func_9373() -> Tensor[(72), float32] {
  @func_4933() /* ty=Tensor[(72), float32] */
}

def @func_12211() -> (Tensor[(2, 24), float32], Tensor[(72), float32]) {
  %474 = @func_11773() /* ty=(Tensor[(1274), int32], Tensor[(2, 24), float32], Tensor[(72), float32]) */;
  %475 = %474.1;
  %476 = @func_8449() /* ty=Tensor[(72), float32] */;
  (%475, %476)
}

def @func_10125() -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32]) {
  %477 = @func_5136() /* ty=(Tensor[(72), float32],) */;
  %478 = @func_9330() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(864), float32], Tensor[(72), float32], Tensor[(180), float32], Tensor[(48), uint32], Tensor[(72), float32]) */;
  %479 = @func_10078() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32]) */;
  %480 = @func_6294() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %481 = %477.0;
  %482 = %478.4;
  %483 = %479.0;
  %484 = %480.1;
  (%481, %482, %483, %484)
}

def @func_2721() -> (Tensor[(6, 13, 11), float64], Tensor[(72), float32]) {
  %485 = @func_2184() /* ty=(Tensor[(6, 13, 11), float64], Tensor[(4, 3, 6), float32], Tensor[(72), float32]) */;
  %486 = %485.0;
  %487 = @func_2525() /* ty=Tensor[(72), float32] */;
  (%486, %487)
}

def @func_10459() -> Tensor[(72), float32] {
  %488 = @func_6699() /* ty=(Tensor[(72), float32],) */;
  %488.0
}

def @func_16794() -> (Tensor[(15, 8, 6), float32],) {
  %489 = @func_6499() /* ty=(Tensor[(15, 8, 6), float32],) */;
  %490 = %489.0;
  (%490,)
}

def @func_2594(%var_2550: Tensor[(864), float32], %var_2575: Tensor[(770), float32]) -> (Tensor[(72), float32], Tensor[(15, 1, 12), float32], Tensor[(180), float32], Tensor[(12, 6, 12), bool], Tensor[(864), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(240), float32], Tensor[(7, 14, 13), bool], Tensor[(770), float32]) {
  %491 = @func_2351() /* ty=(Tensor[(72), float32], Tensor[(1274), int32], Tensor[(1274), int32], Tensor[(4, 3, 6), float32]) */;
  %492 = cast(meta[relay.Constant][25] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %493 = reshape(%492, newshape=[15, 1, 12]) /* ty=Tensor[(15, 1, 12), float32] */;
  %494 = cast(%var_2550, dtype="float32") /* ty=Tensor[(864), float32] */;
  %495 = reshape(%494, newshape=[12, 6, 12]) /* ty=Tensor[(12, 6, 12), float32] */;
  %496 = cast(meta[relay.Constant][26] /* ty=Tensor[(80), float32] */, dtype="float32") /* ty=Tensor[(80), float32] */;
  %497 = cast(meta[relay.Constant][27] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %498 = reshape(%496, newshape=[8, 10, 1]) /* ty=Tensor[(8, 10, 1), float32] */;
  %499 = reshape(%497, newshape=[8, 10, 3]) /* ty=Tensor[(8, 10, 3), float32] */;
  %500 = cast(%var_2575, dtype="float32") /* ty=Tensor[(770), float32] */;
  %501 = %491.0;
  %502 = cast(%501, dtype="float32") /* ty=Tensor[(72), float32] */;
  %503 = reshape(%500, newshape=[7, 10, 11]) /* ty=Tensor[(7, 10, 11), float32] */;
  %504 = reshape(%502, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %505 = @func_714(%503, %504) /* ty=(Tensor[(7, 10, 11), float32], Tensor[(7, 14, 13), bool], Tensor[(91, 14), int32], Tensor[(7, 14, 13), bool], Tensor[(4, 3, 6), float32], Tensor[(72), float32], Tensor[(7, 14, 13), float32]) */;
  %506 = @func_1378(%493) /* ty=Tensor[(15, 1, 12), float32] */;
  %507 = @func_790(%495) /* ty=Tensor[(12, 6, 12), bool] */;
  %508 = @func_1589(%498, %499) /* ty=Tensor[(8, 10, 3), float32] */;
  %509 = %505.3;
  (%501, %506, meta[relay.Constant][25] /* ty=Tensor[(180), float32] */, %507, %var_2550, %508, meta[relay.Constant][26] /* ty=Tensor[(80), float32] */, meta[relay.Constant][27] /* ty=Tensor[(240), float32] */, %509, %var_2575)
}

def @func_7664() -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(420), float32], Tensor[(420), float32]) {
  %510 = @func_2931() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %511 = @func_7298() /* ty=(Tensor[(72), float32], Tensor[(80), float32]) */;
  %512 = @func_5271() /* ty=(Tensor[(72), float32],) */;
  %513 = cast(meta[relay.Constant][28] /* ty=Tensor[(420), float32] */, dtype="float32") /* ty=Tensor[(420), float32] */;
  %514 = reshape(%513, newshape=[420]) /* ty=Tensor[(420), float32] */;
  %515 = @func_6991(%514) /* ty=(Tensor[(72), float32], Tensor[(2, 15, 14), float64], Tensor[(420), float32]) */;
  %516 = %510.0;
  %517 = %511.0;
  %518 = %512.0;
  %519 = %515.2;
  (%516, %517, %518, %519, meta[relay.Constant][28] /* ty=Tensor[(420), float32] */)
}

def @func_4347(%var_4343: Tensor[(12, 4), uint32]) -> (Tensor[(72), float64], Tensor[(9, 16, 3), uint32], Tensor[(12, 4), uint32]) {
  %520 = @func_3769() /* ty=(Tensor[(72), float64],) */;
  %521 = cast(%var_4343, dtype="uint32") /* ty=Tensor[(12, 4), uint32] */;
  %522 = reshape(%521, newshape=[48]) /* ty=Tensor[(48), uint32] */;
  %523 = @func_3079(%522) /* ty=(Tensor[(72), float32], Tensor[(9, 16, 3), uint32], Tensor[(48), uint32], Tensor[(432, 1), uint32]) */;
  %524 = %520.0;
  %525 = %523.1;
  (%524, %525, %var_4343)
}

def @func_15598(%var_15587: Tensor[(210, 2), float32]) -> (Tensor[(1274), int32], Tensor[(420), float32], Tensor[(210, 2), float32], Tensor[(72), float32]) {
  %526 = cast(%var_15587, dtype="float32") /* ty=Tensor[(210, 2), float32] */;
  %527 = reshape(%526, newshape=[420]) /* ty=Tensor[(420), float32] */;
  %528 = @func_6991(%527) /* ty=(Tensor[(72), float32], Tensor[(2, 15, 14), float64], Tensor[(420), float32]) */;
  %529 = @func_8867() /* ty=Tensor[(1274), int32] */;
  %530 = %528.2;
  %531 = @func_2525() /* ty=Tensor[(72), float32] */;
  (%529, %530, %var_15587, %531)
}

def @func_5488() -> (Tensor[(72), float32], Tensor[(72), float32]) {
  %532 = @func_2721() /* ty=(Tensor[(6, 13, 11), float64], Tensor[(72), float32]) */;
  %533 = @func_3133() /* ty=Tensor[(72), float32] */;
  %534 = %532.1;
  (%533, %534)
}

def @func_3133() -> Tensor[(72), float32] {
  @func_2525() /* ty=Tensor[(72), float32] */
}

def @func_8369() -> Tensor[(72), float32] {
  @func_2978() /* ty=Tensor[(72), float32] */
}

def @func_14277() -> Tensor[(72), float32] {
  %535 = @func_5098() /* ty=(Tensor[(72), float32], Tensor[(864), float32]) */;
  %535.0
}

def @func_10921(%var_10916: Tensor[(4, 3, 6), float32]) -> (Tensor[(80), float32], Tensor[(4, 3, 6), int64]) {
  %536 = @func_9643() /* ty=(Tensor[(240), float32], Tensor[(80), float32], Tensor[(80), float32]) */;
  %537 = @func_5996() /* ty=(Tensor[(4, 3, 6), float32], Tensor[(72), float32]) */;
  %538 = %537.0;
  %539 = cast(%var_10916, dtype="int64") /* ty=Tensor[(4, 3, 6), int64] */;
  %540 = shape_of(%538, dtype="int32") /* ty=Tensor[(3), int32] */;
  %541 = cast(%538, dtype="int64") /* ty=Tensor[(4, 3, 6), int64] */;
  %542 = dyn.reshape(%539, %540, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %543 = %536.2;
  %544 = bitwise_or(%541, %542) /* ty=Tensor[(4, 3, 6), int64] */;
  (%543, %544)
}

def @func_10488(%var_10479: Tensor[(4, 3, 6), float32]) -> (Tensor[(4, 3, 6), bool], Tensor[(240), float32]) {
  %545 = @func_2948() /* ty=(Tensor[(4, 3, 6), float32],) */;
  %546 = %545.0;
  %547 = cast(%var_10479, dtype="bool") /* ty=Tensor[(4, 3, 6), bool] */;
  %548 = shape_of(%546, dtype="int32") /* ty=Tensor[(3), int32] */;
  %549 = cast(%546, dtype="bool") /* ty=Tensor[(4, 3, 6), bool] */;
  %550 = dyn.reshape(%547, %548, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %551 = equal(%549, %550) /* ty=Tensor[(4, 3, 6), bool] */;
  %552 = @func_4550() /* ty=Tensor[(240), float32] */;
  (%551, %552)
}

def @func_4732() -> (Tensor[(48), uint32],) {
  %553 = @func_4235() /* ty=(Tensor[(72), float32], Tensor[(48), uint32], Tensor[(48), uint32]) */;
  %554 = %553.2;
  (%554,)
}

def @func_1589(%var_1574: Tensor[(8, 10, 1), float32], %var_1575: Tensor[(8, 10, 3), float32]) -> Tensor[(8, 10, 3), float32] {
  %555 = cast(%var_1574, dtype="float32") /* ty=Tensor[(8, 10, 1), float32] */;
  %556 = cast(%var_1575, dtype="float32") /* ty=Tensor[(8, 10, 3), float32] */;
  floor_divide(%555, %556) /* ty=Tensor[(8, 10, 3), float32] */
}

def @func_2948() -> (Tensor[(4, 3, 6), float32],) {
  %557 = @func_2184() /* ty=(Tensor[(6, 13, 11), float64], Tensor[(4, 3, 6), float32], Tensor[(72), float32]) */;
  %558 = %557.1;
  (%558,)
}

def @func_7465(%var_7448: Tensor[(13, 1, 3), float32]) -> Tensor[(13, 1, 3), float32] {
  %559 = cast(%var_7448, dtype="float32") /* ty=Tensor[(13, 1, 3), float32] */;
  sigmoid(%559) /* ty=Tensor[(13, 1, 3), float32] */
}

def @func_12035() -> (Tensor[(80), float32], Tensor[(4, 3, 6), float32]) {
  %560 = @func_9643() /* ty=(Tensor[(240), float32], Tensor[(80), float32], Tensor[(80), float32]) */;
  %561 = @func_8390() /* ty=(Tensor[(1274), int32], Tensor[(1274), int32], Tensor[(4, 3, 6), float32]) */;
  %562 = %560.1;
  %563 = %561.2;
  (%562, %563)
}

def @func_2351() -> (Tensor[(72), float32], Tensor[(1274), int32], Tensor[(1274), int32], Tensor[(4, 3, 6), float32]) {
  %564 = @func_2191() /* ty=(Tensor[(72), float32],) */;
  %565 = cast(meta[relay.Constant][29] /* ty=Tensor[(1274), int32] */, dtype="int32") /* ty=Tensor[(1274), int32] */;
  %566 = reshape(%565, newshape=[1274]) /* ty=Tensor[(1274), int32] */;
  %567 = @func_1912(%566) /* ty=(Tensor[(10, 12, 13), float64], Tensor[(4, 3, 6), float32], Tensor[(36, 2), float32], Tensor[(7, 14, 13), bool], Tensor[(1274), int32]) */;
  %568 = @func_2184() /* ty=(Tensor[(6, 13, 11), float64], Tensor[(4, 3, 6), float32], Tensor[(72), float32]) */;
  %569 = %564.0;
  %570 = %567.4;
  %571 = %568.1;
  (%569, %570, meta[relay.Constant][29] /* ty=Tensor[(1274), int32] */, %571)
}

def @func_16612() -> Tensor[(80), float32] {
  %572 = @func_9643() /* ty=(Tensor[(240), float32], Tensor[(80), float32], Tensor[(80), float32]) */;
  %572.2
}

def @func_14147() -> Tensor[(72), float32] {
  @func_3194() /* ty=Tensor[(72), float32] */
}

def @func_17072() -> Tensor[(4, 3, 6), bool] {
  @func_14915() /* ty=Tensor[(4, 3, 6), bool] */
}

def @func_6781() -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(1274), int32]) {
  %573 = @func_5098() /* ty=(Tensor[(72), float32], Tensor[(864), float32]) */;
  %574 = @func_5055() /* ty=(Tensor[(1274), int32], Tensor[(72), float32], Tensor[(72), float32]) */;
  %575 = @func_5241() /* ty=(Tensor[(1274), int32], Tensor[(72), float32]) */;
  %576 = %573.0;
  %577 = %574.1;
  %578 = %575.0;
  (%576, %577, %578)
}

def @func_6486() -> (Tensor[(80), float32], Tensor[(8, 5, 4), float64], Tensor[(160), float64], Tensor[(72), float32], Tensor[(72), float32]) {
  %579 = @func_3151() /* ty=(Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(240), float32]) */;
  %580 = cast(meta[relay.Constant][30] /* ty=Tensor[(160), float64] */, dtype="float64") /* ty=Tensor[(160), float64] */;
  %581 = reshape(%580, newshape=[8, 5, 4]) /* ty=Tensor[(8, 5, 4), float64] */;
  %582 = @func_6228() /* ty=(Tensor[(72), float32],) */;
  %583 = @func_4064() /* ty=(Tensor[(72), float32],) */;
  %584 = %579.2;
  %585 = @func_3099(%581) /* ty=Tensor[(8, 5, 4), float64] */;
  %586 = %582.0;
  %587 = %583.0;
  (%584, %585, meta[relay.Constant][30] /* ty=Tensor[(160), float64] */, %586, %587)
}

def @func_7128() -> Tensor[(72), float32] {
  @func_3133() /* ty=Tensor[(72), float32] */
}

def @func_17558() -> (Tensor[(72), float32], Tensor[(72), float32]) {
  %588 = @func_7128() /* ty=Tensor[(72), float32] */;
  %589 = @func_14147() /* ty=Tensor[(72), float32] */;
  (%588, %589)
}

def @func_17859(%var_17856: Tensor[(80), float32]) -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(4, 3, 9), bool], Tensor[(15, 15, 4), float32], Tensor[(900), float32], Tensor[(80), float32], Tensor[(80), float32], Tensor[(240), float32]) {
  %590 = @func_7664() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(420), float32], Tensor[(420), float32]) */;
  %591 = cast(meta[relay.Constant][31] /* ty=Tensor[(900), float32] */, dtype="float32") /* ty=Tensor[(900), float32] */;
  %592 = reshape(%591, newshape=[15, 15, 4]) /* ty=Tensor[(15, 15, 4), float32] */;
  %593 = cast(%var_17856, dtype="float32") /* ty=Tensor[(80), float32] */;
  %594 = cast(meta[relay.Constant][32] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %595 = reshape(%593, newshape=[80]) /* ty=Tensor[(80), float32] */;
  %596 = reshape(%594, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %597 = @func_3264(%595, %596) /* ty=(Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(240), float32]) */;
  %598 = @func_14147() /* ty=Tensor[(72), float32] */;
  %599 = %590.2;
  %600 = @func_9243() /* ty=Tensor[(4, 3, 9), bool] */;
  %601 = @func_8171(%592) /* ty=Tensor[(15, 15, 4), float32] */;
  %602 = %597.2;
  (%598, %599, %600, %601, meta[relay.Constant][31] /* ty=Tensor[(900), float32] */, %602, %var_17856, meta[relay.Constant][32] /* ty=Tensor[(240), float32] */)
}

def @func_12058() -> (Tensor[(72), float32],) {
  %603 = @func_5996() /* ty=(Tensor[(4, 3, 6), float32], Tensor[(72), float32]) */;
  %604 = %603.1;
  (%604,)
}

def @func_12005() -> Tensor[(72), float32] {
  %605 = @func_4235() /* ty=(Tensor[(72), float32], Tensor[(48), uint32], Tensor[(48), uint32]) */;
  %605.0
}

def @func_3052(%var_3006: Tensor[(180), float32]) -> (Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(4, 60), float32], Tensor[(864), float32], Tensor[(48), uint32], Tensor[(15, 1, 12), float32], Tensor[(180), float32], Tensor[(72), float32], Tensor[(72), float32]) {
  %606 = cast(meta[relay.Constant][33] /* ty=Tensor[(4, 60), float32] */, dtype="float32") /* ty=Tensor[(4, 60), float32] */;
  %607 = cast(meta[relay.Constant][34] /* ty=Tensor[(864), float32] */, dtype="float32") /* ty=Tensor[(864), float32] */;
  %608 = cast(meta[relay.Constant][35] /* ty=Tensor[(48), uint32] */, dtype="uint32") /* ty=Tensor[(48), uint32] */;
  %609 = reshape(%606, newshape=[1, 240]) /* ty=Tensor[(1, 240), float32] */;
  %610 = reshape(%607, newshape=[864]) /* ty=Tensor[(864), float32] */;
  %611 = reshape(%608, newshape=[48]) /* ty=Tensor[(48), uint32] */;
  %612 = @func_2669(%609, %610, %611) /* ty=(Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(7, 14, 13), bool], Tensor[(1274), int32], Tensor[(80), float32], Tensor[(864), float32], Tensor[(4, 3, 6), bool], Tensor[(48), uint32], Tensor[(432), uint32], Tensor[(12, 240), float32], Tensor[(6, 3, 4), float64], Tensor[(10, 12, 13), float64], Tensor[(770, 240), bool]) */;
  %613 = cast(%var_3006, dtype="float32") /* ty=Tensor[(180), float32] */;
  %614 = reshape(%613, newshape=[15, 1, 12]) /* ty=Tensor[(15, 1, 12), float32] */;
  %615 = @func_2721() /* ty=(Tensor[(6, 13, 11), float64], Tensor[(72), float32]) */;
  %616 = @func_2525() /* ty=Tensor[(72), float32] */;
  %617 = %612.1;
  %618 = @func_1378(%614) /* ty=Tensor[(15, 1, 12), float32] */;
  %619 = %615.1;
  %620 = @func_2739() /* ty=Tensor[(72), float32] */;
  (%616, %617, meta[relay.Constant][33] /* ty=Tensor[(4, 60), float32] */, meta[relay.Constant][34] /* ty=Tensor[(864), float32] */, meta[relay.Constant][35] /* ty=Tensor[(48), uint32] */, %618, %var_3006, %619, %620)
}

def @func_3870() -> (Tensor[(4, 3, 6), float32], Tensor[(1274), int32]) {
  %621 = @func_2948() /* ty=(Tensor[(4, 3, 6), float32],) */;
  %622 = @func_3614() /* ty=(Tensor[(72), float32], Tensor[(1274), int32]) */;
  %623 = %621.0;
  %624 = %622.1;
  (%623, %624)
}

def @func_11915() -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(864), float32]) {
  %625 = cast(meta[relay.Constant][36] /* ty=Tensor[(864), float32] */, dtype="float32") /* ty=Tensor[(864), float32] */;
  %626 = reshape(%625, newshape=[36, 24]) /* ty=Tensor[(36, 24), float32] */;
  %627 = @func_6657(%626) /* ty=(Tensor[(48), uint32], Tensor[(48), uint32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(48), uint32], Tensor[(180), float32], Tensor[(72), float32], Tensor[(36, 24), float32], Tensor[(72), float32]) */;
  %628 = @func_5175() /* ty=Tensor[(72), float32] */;
  %629 = %627.9;
  (%628, %629, meta[relay.Constant][36] /* ty=Tensor[(864), float32] */)
}

def @func_6964() -> (Tensor[(48), uint32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32]) {
  %630 = @func_4732() /* ty=(Tensor[(48), uint32],) */;
  %631 = @func_3151() /* ty=(Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(240), float32]) */;
  %632 = @func_3117() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %633 = @func_2948() /* ty=(Tensor[(4, 3, 6), float32],) */;
  %634 = %630.0;
  %635 = %631.0;
  %636 = %632.0;
  %637 = %633.0;
  (%634, %635, %636, %637)
}

def @func_7413(%var_7408: Tensor[(5, 10, 1), float64]) -> (Tensor[(5, 10, 1), float64],) {
  %638 = cast(%var_7408, dtype="float64") /* ty=Tensor[(5, 10, 1), float64] */;
  %639 = atan(%638) /* ty=Tensor[(5, 10, 1), float64] */;
  (%639,)
}

def @func_7402() -> Tensor[(80), float32] {
  %640 = @func_3151() /* ty=(Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(240), float32]) */;
  %640.2
}

def @func_13195() -> (Tensor[(72), float32], Tensor[(4, 60), int64], Tensor[(180), float32], Tensor[(120, 2), bool]) {
  %641 = @func_13058() /* ty=(Tensor[(72), float32],) */;
  %642 = cast(meta[relay.Constant][37] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %643 = cast(meta[relay.Constant][38] /* ty=Tensor[(120, 2), float32] */, dtype="float32") /* ty=Tensor[(120, 2), float32] */;
  %644 = reshape(%642, newshape=[180, 1]) /* ty=Tensor[(180, 1), float32] */;
  %645 = reshape(%643, newshape=[4, 60]) /* ty=Tensor[(4, 60), float32] */;
  %646 = @func_7959(%644, %645) /* ty=(Tensor[(420), float32], Tensor[(4, 3, 6), float32], Tensor[(72), float32], Tensor[(180, 1), float32], Tensor[(4, 60), int64]) */;
  %647 = cast(meta[relay.Constant][38] /* ty=Tensor[(120, 2), float32] */, dtype="float32") /* ty=Tensor[(120, 2), float32] */;
  %648 = sigmoid(%647) /* ty=Tensor[(120, 2), float32] */;
  %649 = cast(%648, dtype="bool") /* ty=Tensor[(120, 2), bool] */;
  %650 = shape_of(meta[relay.Constant][38] /* ty=Tensor[(120, 2), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %651 = cast(meta[relay.Constant][38] /* ty=Tensor[(120, 2), float32] */, dtype="bool") /* ty=Tensor[(120, 2), bool] */;
  %652 = dyn.reshape(%649, %650, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %653 = %641.0;
  %654 = %646.4;
  %655 = equal(%651, %652) /* ty=Tensor[(120, 2), bool] */;
  (%653, %654, meta[relay.Constant][37] /* ty=Tensor[(180), float32] */, %655)
}

def @func_4204(%var_4194: Tensor[(4, 3, 6), float32]) -> Tensor[(4, 3, 6), bool] {
  %656 = @func_2948() /* ty=(Tensor[(4, 3, 6), float32],) */;
  %657 = %656.0;
  %658 = cast(%var_4194, dtype="bool") /* ty=Tensor[(4, 3, 6), bool] */;
  %659 = shape_of(%657, dtype="int32") /* ty=Tensor[(3), int32] */;
  %660 = cast(%657, dtype="bool") /* ty=Tensor[(4, 3, 6), bool] */;
  %661 = dyn.reshape(%658, %659, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%660, %661) /* ty=Tensor[(4, 3, 6), bool] */
}

def @func_13960() -> Tensor[(72), float32] {
  @func_4056() /* ty=Tensor[(72), float32] */
}

def @func_15980() -> (Tensor[(72), float32],) {
  %662 = @func_13631() /* ty=Tensor[(72), float32] */;
  (%662,)
}

def @func_13382() -> (Tensor[(72), float32], Tensor[(1274), int32]) {
  %663 = @func_2525() /* ty=Tensor[(72), float32] */;
  %664 = @func_8867() /* ty=Tensor[(1274), int32] */;
  (%663, %664)
}

def @func_5175() -> Tensor[(72), float32] {
  @func_2525() /* ty=Tensor[(72), float32] */
}

def @func_714(%var_624: Tensor[(7, 10, 11), float32], %var_666: Tensor[(72), float32]) -> (Tensor[(7, 10, 11), float32], Tensor[(7, 14, 13), bool], Tensor[(91, 14), int32], Tensor[(7, 14, 13), bool], Tensor[(4, 3, 6), float32], Tensor[(72), float32], Tensor[(7, 14, 13), float32]) {
  %665 = cast(%var_624, dtype="float32") /* ty=Tensor[(7, 10, 11), float32] */;
  %666 = cast(meta[relay.Constant][39] /* ty=Tensor[(91, 14), int32] */, dtype="int32") /* ty=Tensor[(91, 14), int32] */;
  %667 = cast(meta[relay.Constant][39] /* ty=Tensor[(91, 14), int32] */, dtype="int32") /* ty=Tensor[(91, 14), int32] */;
  %668 = reshape(%666, newshape=[7, 14, 13]) /* ty=Tensor[(7, 14, 13), int32] */;
  %669 = reshape(%667, newshape=[7, 14, 13]) /* ty=Tensor[(7, 14, 13), int32] */;
  %670 = @func_45(%668, %669) /* ty=(Tensor[(7, 14, 13), bool],) */;
  %671 = cast(meta[relay.Constant][39] /* ty=Tensor[(91, 14), int32] */, dtype="int32") /* ty=Tensor[(91, 14), int32] */;
  %672 = %670.0;
  %673 = cast(%672, dtype="int32") /* ty=Tensor[(7, 14, 13), int32] */;
  %674 = cast(meta[relay.Constant][39] /* ty=Tensor[(91, 14), int32] */, dtype="int32") /* ty=Tensor[(91, 14), int32] */;
  %675 = reshape(%673, newshape=[7, 14, 13]) /* ty=Tensor[(7, 14, 13), int32] */;
  %676 = reshape(%674, newshape=[7, 14, 13]) /* ty=Tensor[(7, 14, 13), int32] */;
  %677 = @func_45(%675, %676) /* ty=(Tensor[(7, 14, 13), bool],) */;
  %678 = %677.0;
  %679 = cast(%678, dtype="int32") /* ty=Tensor[(7, 14, 13), int32] */;
  %680 = reshape(%671, newshape=[7, 14, 13]) /* ty=Tensor[(7, 14, 13), int32] */;
  %681 = reshape(%679, newshape=[7, 14, 13]) /* ty=Tensor[(7, 14, 13), int32] */;
  %682 = @func_45(%680, %681) /* ty=(Tensor[(7, 14, 13), bool],) */;
  %683 = cast(%var_666, dtype="float32") /* ty=Tensor[(72), float32] */;
  %684 = reshape(%683, newshape=[4, 3, 6]) /* ty=Tensor[(4, 3, 6), float32] */;
  %685 = cast(%678, dtype="float32") /* ty=Tensor[(7, 14, 13), float32] */;
  %686 = sigmoid(%665) /* ty=Tensor[(7, 10, 11), float32] */;
  %687 = %682.0;
  %688 = @func_579(%684) /* ty=Tensor[(4, 3, 6), float32] */;
  %689 = atanh(%685) /* ty=Tensor[(7, 14, 13), float32] */;
  (%686, %672, meta[relay.Constant][39] /* ty=Tensor[(91, 14), int32] */, %687, %688, %var_666, %689)
}

def @func_10078() -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32]) {
  %690 = @func_3614() /* ty=(Tensor[(72), float32], Tensor[(1274), int32]) */;
  %691 = @func_3870() /* ty=(Tensor[(4, 3, 6), float32], Tensor[(1274), int32]) */;
  %692 = @func_5175() /* ty=Tensor[(72), float32] */;
  %693 = %690.0;
  %694 = %691.0;
  (%692, %693, %694)
}

def @func_3194() -> Tensor[(72), float32] {
  %695 = @func_3117() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %695.0
}

def @func_17629(%var_17597: Tensor[(440, 1), bool]) -> (Tensor[(72), float32], Tensor[(4, 11, 10), bool], bool, Tensor[(440, 1), bool], Tensor[(72), float32]) {
  %696 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %697 = cast(%var_17597, dtype="bool") /* ty=Tensor[(440, 1), bool] */;
  %698 = reshape(%696, newshape=[]) /* ty=bool */;
  %699 = reshape(%697, newshape=[4, 11, 10]) /* ty=Tensor[(4, 11, 10), bool] */;
  %700 = @func_16100() /* ty=(Tensor[(180), float32], Tensor[(72), float32]) */;
  %701 = @func_2978() /* ty=Tensor[(72), float32] */;
  %702 = @func_7983(%698, %699) /* ty=Tensor[(4, 11, 10), bool] */;
  %703 = %700.1;
  (%701, %702, True /* ty=bool */, %var_17597, %703)
}

def @func_10632() -> Tensor[(72), float32] {
  @func_5715() /* ty=Tensor[(72), float32] */
}

def @func_15022() -> (Tensor[(864), float32], Tensor[(4, 3, 6), uint8], Tensor[(72), float32]) {
  %704 = @func_12828() /* ty=(Tensor[(72), float32], Tensor[(864), float32]) */;
  %705 = cast(meta[relay.Constant][40] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %706 = reshape(%705, newshape=[4, 3, 6]) /* ty=Tensor[(4, 3, 6), float32] */;
  %707 = @func_9926(%706) /* ty=(Tensor[(4, 3, 6), uint8],) */;
  %708 = %704.1;
  %709 = %707.0;
  (%708, %709, meta[relay.Constant][40] /* ty=Tensor[(72), float32] */)
}

def @func_1912(%var_1903: Tensor[(1274), int32]) -> (Tensor[(10, 12, 13), float64], Tensor[(4, 3, 6), float32], Tensor[(36, 2), float32], Tensor[(7, 14, 13), bool], Tensor[(1274), int32]) {
  %710 = cast(meta[relay.Constant][41] /* ty=Tensor[(10, 12, 13), float64] */, dtype="float64") /* ty=Tensor[(10, 12, 13), float64] */;
  %711 = cast(meta[relay.Constant][42] /* ty=Tensor[(36, 2), float32] */, dtype="float32") /* ty=Tensor[(36, 2), float32] */;
  %712 = reshape(%711, newshape=[4, 3, 6]) /* ty=Tensor[(4, 3, 6), float32] */;
  %713 = cast(%var_1903, dtype="int32") /* ty=Tensor[(1274), int32] */;
  %714 = cast(%var_1903, dtype="int32") /* ty=Tensor[(1274), int32] */;
  %715 = reshape(%713, newshape=[7, 14, 13]) /* ty=Tensor[(7, 14, 13), int32] */;
  %716 = reshape(%714, newshape=[7, 14, 13]) /* ty=Tensor[(7, 14, 13), int32] */;
  %717 = @func_45(%715, %716) /* ty=(Tensor[(7, 14, 13), bool],) */;
  %718 = cos(%710) /* ty=Tensor[(10, 12, 13), float64] */;
  %719 = @func_579(%712) /* ty=Tensor[(4, 3, 6), float32] */;
  %720 = %717.0;
  (%718, %719, meta[relay.Constant][42] /* ty=Tensor[(36, 2), float32] */, %720, %var_1903)
}

def @func_5828() -> Tensor[(1274), int32] {
  %721 = @func_3614() /* ty=(Tensor[(72), float32], Tensor[(1274), int32]) */;
  %721.1
}

def @func_7959(%var_7943: Tensor[(180, 1), float32], %var_7950: Tensor[(4, 60), float32]) -> (Tensor[(420), float32], Tensor[(4, 3, 6), float32], Tensor[(72), float32], Tensor[(180, 1), float32], Tensor[(4, 60), int64]) {
  %722 = @func_7664() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(420), float32], Tensor[(420), float32]) */;
  %723 = @func_2191() /* ty=(Tensor[(72), float32],) */;
  %724 = cast(%var_7943, dtype="float32") /* ty=Tensor[(180, 1), float32] */;
  %725 = reshape(%724, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %726 = @func_3052(%725) /* ty=(Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(4, 60), float32], Tensor[(864), float32], Tensor[(48), uint32], Tensor[(15, 1, 12), float32], Tensor[(180), float32], Tensor[(72), float32], Tensor[(72), float32]) */;
  %727 = %726.2;
  %728 = cast(%var_7950, dtype="int64") /* ty=Tensor[(4, 60), int64] */;
  %729 = shape_of(%727, dtype="int32") /* ty=Tensor[(2), int32] */;
  %730 = cast(%727, dtype="int64") /* ty=Tensor[(4, 60), int64] */;
  %731 = dyn.reshape(%728, %729, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %732 = %722.4;
  %733 = @func_4368() /* ty=Tensor[(4, 3, 6), float32] */;
  %734 = %723.0;
  %735 = maximum(%730, %731) /* ty=Tensor[(4, 60), int64] */;
  (%732, %733, %734, %var_7943, %735)
}

def @func_16358() -> (Tensor[(80), float32], Tensor[(72), float32]) {
  %736 = @func_12035() /* ty=(Tensor[(80), float32], Tensor[(4, 3, 6), float32]) */;
  %737 = %736.0;
  %738 = @func_4056() /* ty=Tensor[(72), float32] */;
  (%737, %738)
}

def @func_17733(%var_17725: Tensor[(39), float32]) -> (Tensor[(72), float32], Tensor[(420), float32], Tensor[(4, 3, 6), bool], Tensor[(72), float32], Tensor[(2, 24), float64], Tensor[(13, 1, 3), float32], Tensor[(39), float32], Tensor[(72), float32]) {
  %739 = cast(meta[relay.Constant][43] /* ty=Tensor[(420), float32] */, dtype="float32") /* ty=Tensor[(420), float32] */;
  %740 = reshape(%739, newshape=[210, 2]) /* ty=Tensor[(210, 2), float32] */;
  %741 = @func_15598(%740) /* ty=(Tensor[(1274), int32], Tensor[(420), float32], Tensor[(210, 2), float32], Tensor[(72), float32]) */;
  %742 = %741.3;
  %743 = cast(%742, dtype="float32") /* ty=Tensor[(72), float32] */;
  %744 = reshape(%743, newshape=[4, 3, 6]) /* ty=Tensor[(4, 3, 6), float32] */;
  %745 = @func_12256() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32]) */;
  %746 = @func_7423() /* ty=(Tensor[(4, 3, 6), float32], Tensor[(180), float32], Tensor[(2, 24), float32]) */;
  %747 = %746.2;
  %748 = cast(%747, dtype="float64") /* ty=Tensor[(2, 24), float64] */;
  %749 = cast(%var_17725, dtype="float32") /* ty=Tensor[(39), float32] */;
  %750 = reshape(%749, newshape=[13, 1, 3]) /* ty=Tensor[(13, 1, 3), float32] */;
  %751 = @func_15281() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32]) */;
  %752 = @func_4204(%744) /* ty=Tensor[(4, 3, 6), bool] */;
  %753 = %745.0;
  %754 = log2(%748) /* ty=Tensor[(2, 24), float64] */;
  %755 = @func_7465(%750) /* ty=Tensor[(13, 1, 3), float32] */;
  %756 = %751.2;
  (%742, meta[relay.Constant][43] /* ty=Tensor[(420), float32] */, %752, %753, %754, %755, %var_17725, %756)
}

def @func_11532() -> (Tensor[(48), uint32],) {
  %757 = @func_5773() /* ty=(Tensor[(240), float32], Tensor[(48), uint32], Tensor[(72), float32]) */;
  %758 = %757.1;
  (%758,)
}

def @func_7342(%var_7328: Tensor[(448), float64], %var_7333: Tensor[(48), float32]) -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(448), float64], Tensor[(?, 16, 3), bool], Tensor[(48), float32]) {
  %759 = @func_3151() /* ty=(Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(240), float32]) */;
  %760 = cast(%var_7328, dtype="float64") /* ty=Tensor[(448), float64] */;
  %761 = reshape(%760, newshape=[4, 14, 8]) /* ty=Tensor[(4, 14, 8), float64] */;
  %762 = @func_3529(%761) /* ty=(Tensor[(4, 14, 8), float64], Tensor[(72), float32]) */;
  %763 = cast(%var_7333, dtype="float32") /* ty=Tensor[(48), float32] */;
  %764 = reshape(%763, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %765 = @func_5586(%764) /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(?, 16, 3), bool], Tensor[(48), float32], Tensor[(180), float32], Tensor[(180), float32]) */;
  %766 = %759.0;
  %767 = %762.1;
  %768 = %765.2;
  (%766, %767, %var_7328, %768, %var_7333)
}

def @func_8948(%var_8926: Tensor[(240), float32]) -> (Tensor[(72), float32], Tensor[(864), float32], Tensor[(240), float32], Tensor[(864), float32], Tensor[(12, 4), uint32]) {
  %769 = cast(%var_8926, dtype="float32") /* ty=Tensor[(240), float32] */;
  %770 = cast(meta[relay.Constant][44] /* ty=Tensor[(864), float32] */, dtype="float32") /* ty=Tensor[(864), float32] */;
  %771 = cast(meta[relay.Constant][45] /* ty=Tensor[(12, 4), uint32] */, dtype="uint32") /* ty=Tensor[(12, 4), uint32] */;
  %772 = reshape(%769, newshape=[1, 240]) /* ty=Tensor[(1, 240), float32] */;
  %773 = reshape(%770, newshape=[864]) /* ty=Tensor[(864), float32] */;
  %774 = reshape(%771, newshape=[48]) /* ty=Tensor[(48), uint32] */;
  %775 = @func_2669(%772, %773, %774) /* ty=(Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(7, 14, 13), bool], Tensor[(1274), int32], Tensor[(80), float32], Tensor[(864), float32], Tensor[(4, 3, 6), bool], Tensor[(48), uint32], Tensor[(432), uint32], Tensor[(12, 240), float32], Tensor[(6, 3, 4), float64], Tensor[(10, 12, 13), float64], Tensor[(770, 240), bool]) */;
  %776 = @func_4056() /* ty=Tensor[(72), float32] */;
  %777 = %775.6;
  (%776, %777, %var_8926, meta[relay.Constant][44] /* ty=Tensor[(864), float32] */, meta[relay.Constant][45] /* ty=Tensor[(12, 4), uint32] */)
}

def @func_13927(%var_13890: Tensor[(195), float64]) -> (Tensor[(72), float64], Tensor[(1274), int32], Tensor[(1, 1274), int32], Tensor[(8, 10, 3), float32], Tensor[(195), float64], Tensor[(72), float32]) {
  %778 = @func_3769() /* ty=(Tensor[(72), float64],) */;
  %779 = cast(meta[relay.Constant][46] /* ty=Tensor[(1, 1274), int32] */, dtype="int32") /* ty=Tensor[(1, 1274), int32] */;
  %780 = reshape(%779, newshape=[1274]) /* ty=Tensor[(1274), int32] */;
  %781 = @func_1912(%780) /* ty=(Tensor[(10, 12, 13), float64], Tensor[(4, 3, 6), float32], Tensor[(36, 2), float32], Tensor[(7, 14, 13), bool], Tensor[(1274), int32]) */;
  %782 = cast(%var_13890, dtype="float64") /* ty=Tensor[(195), float64] */;
  %783 = reshape(%782, newshape=[195]) /* ty=Tensor[(195), float64] */;
  %784 = @func_7838(%783) /* ty=(Tensor[(8, 10, 3), float32], Tensor[(72), float32], Tensor[(13, 5, 3), float64], Tensor[(195), float64]) */;
  %785 = %778.0;
  %786 = %781.4;
  %787 = %784.0;
  %788 = @func_13861() /* ty=Tensor[(72), float32] */;
  (%785, %786, meta[relay.Constant][46] /* ty=Tensor[(1, 1274), int32] */, %787, %var_13890, %788)
}

def @func_14315() -> Tensor[(4, 3, 6), float32] {
  %789 = @func_7058() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32], Tensor[(240), float32], Tensor[(72), float32]) */;
  %789.2
}

def @func_3614() -> (Tensor[(72), float32], Tensor[(1274), int32]) {
  %790 = @func_2931() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %791 = @func_2881() /* ty=(Tensor[(72), float32], Tensor[(1274), int32]) */;
  %792 = %790.1;
  %793 = %791.1;
  (%792, %793)
}

def @func_9197() -> Tensor[(72), float32] {
  %794 = @func_7058() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32], Tensor[(240), float32], Tensor[(72), float32]) */;
  %794.4
}

def @func_6151(%var_6140: Tensor[(2, 432), float32]) -> (Tensor[(1274), int32], Tensor[(72), float32], Tensor[(1274), int32], Tensor[(4, 3, 6), float64], Tensor[(4, 3, 6), float32], Tensor[(770, 240), bool], Tensor[(240), float32], Tensor[(2, 432), float32], Tensor[(48), uint32]) {
  %795 = @func_3870() /* ty=(Tensor[(4, 3, 6), float32], Tensor[(1274), int32]) */;
  %796 = @func_5241() /* ty=(Tensor[(1274), int32], Tensor[(72), float32]) */;
  %797 = @func_3870() /* ty=(Tensor[(4, 3, 6), float32], Tensor[(1274), int32]) */;
  %798 = %797.0;
  %799 = cast(%798, dtype="float64") /* ty=Tensor[(4, 3, 6), float64] */;
  %800 = @func_4056() /* ty=Tensor[(72), float32] */;
  %801 = cast(%800, dtype="float32") /* ty=Tensor[(72), float32] */;
  %802 = reshape(%801, newshape=[4, 3, 6]) /* ty=Tensor[(4, 3, 6), float32] */;
  %803 = cast(meta[relay.Constant][47] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %804 = cast(%var_6140, dtype="float32") /* ty=Tensor[(2, 432), float32] */;
  %805 = cast(meta[relay.Constant][48] /* ty=Tensor[(48), uint32] */, dtype="uint32") /* ty=Tensor[(48), uint32] */;
  %806 = reshape(%803, newshape=[1, 240]) /* ty=Tensor[(1, 240), float32] */;
  %807 = reshape(%804, newshape=[864]) /* ty=Tensor[(864), float32] */;
  %808 = reshape(%805, newshape=[48]) /* ty=Tensor[(48), uint32] */;
  %809 = @func_2669(%806, %807, %808) /* ty=(Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(7, 14, 13), bool], Tensor[(1274), int32], Tensor[(80), float32], Tensor[(864), float32], Tensor[(4, 3, 6), bool], Tensor[(48), uint32], Tensor[(432), uint32], Tensor[(12, 240), float32], Tensor[(6, 3, 4), float64], Tensor[(10, 12, 13), float64], Tensor[(770, 240), bool]) */;
  %810 = %795.1;
  %811 = %796.0;
  %812 = erf(%799) /* ty=Tensor[(4, 3, 6), float64] */;
  %813 = @func_579(%802) /* ty=Tensor[(4, 3, 6), float32] */;
  %814 = %809.13;
  (%810, %800, %811, %812, %813, %814, meta[relay.Constant][47] /* ty=Tensor[(240), float32] */, %var_6140, meta[relay.Constant][48] /* ty=Tensor[(48), uint32] */)
}

def @func_7983(%var_7968: bool, %var_7969: Tensor[(4, 11, 10), bool]) -> Tensor[(4, 11, 10), bool] {
  %815 = cast(%var_7968, dtype="bool") /* ty=bool */;
  %816 = cast(%var_7969, dtype="bool") /* ty=Tensor[(4, 11, 10), bool] */;
  logical_or(%815, %816) /* ty=Tensor[(4, 11, 10), bool] */
}

def @func_11332() -> (Tensor[(72), float64], Tensor[(7, 9, 15), int8], Tensor[(945), int8], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32]) {
  %817 = cast(meta[relay.Constant][49] /* ty=Tensor[(945), int8] */, dtype="int8") /* ty=Tensor[(945), int8] */;
  %818 = reshape(%817, newshape=[7, 9, 15]) /* ty=Tensor[(7, 9, 15), int8] */;
  %819 = @func_2721() /* ty=(Tensor[(6, 13, 11), float64], Tensor[(72), float32]) */;
  %820 = @func_4235() /* ty=(Tensor[(72), float32], Tensor[(48), uint32], Tensor[(48), uint32]) */;
  %821 = @func_7433() /* ty=Tensor[(72), float64] */;
  %822 = @func_7555(%818) /* ty=Tensor[(7, 9, 15), int8] */;
  %823 = %819.1;
  %824 = %820.0;
  %825 = @func_2978() /* ty=Tensor[(72), float32] */;
  (%821, %822, meta[relay.Constant][49] /* ty=Tensor[(945), int8] */, %823, %824, %825)
}

def @main(%var_19219: Tensor[(15, 13, 7), uint16]) -> (Tensor[(15, 13, 7), uint16],) {
  %826 = cast(meta[relay.Constant][50] /* ty=Tensor[(15, 13, 7), uint16] */, dtype="uint16") /* ty=Tensor[(15, 13, 7), uint16] */;
  %827 = shape_of(%var_19219, dtype="int32") /* ty=Tensor[(3), int32] */;
  %828 = cast(%var_19219, dtype="uint16") /* ty=Tensor[(15, 13, 7), uint16] */;
  %829 = dyn.reshape(%826, %827, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %830 = bitwise_or(%828, %829) /* ty=Tensor[(15, 13, 7), uint16] */;
  (%830,)
}

def @func_15404(%var_15390: Tensor[(770), float32]) -> (Tensor[(5, 7, 8), float32], Tensor[(180, 1), float32], Tensor[(180), float32], Tensor[(240), float32], Tensor[(770), float32], Tensor[(864), float32], Tensor[(770), float32]) {
  %831 = cast(meta[relay.Constant][51] /* ty=Tensor[(5, 7, 8), float32] */, dtype="float32") /* ty=Tensor[(5, 7, 8), float32] */;
  %832 = cast(meta[relay.Constant][52] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %833 = cast(meta[relay.Constant][53] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %834 = reshape(%832, newshape=[180, 1]) /* ty=Tensor[(180, 1), float32] */;
  %835 = reshape(%833, newshape=[4, 60]) /* ty=Tensor[(4, 60), float32] */;
  %836 = @func_7959(%834, %835) /* ty=(Tensor[(420), float32], Tensor[(4, 3, 6), float32], Tensor[(72), float32], Tensor[(180, 1), float32], Tensor[(4, 60), int64]) */;
  %837 = cast(meta[relay.Constant][54] /* ty=Tensor[(864), float32] */, dtype="float32") /* ty=Tensor[(864), float32] */;
  %838 = cast(%var_15390, dtype="float32") /* ty=Tensor[(770), float32] */;
  %839 = reshape(%837, newshape=[864]) /* ty=Tensor[(864), float32] */;
  %840 = reshape(%838, newshape=[770]) /* ty=Tensor[(770), float32] */;
  %841 = @func_2594(%839, %840) /* ty=(Tensor[(72), float32], Tensor[(15, 1, 12), float32], Tensor[(180), float32], Tensor[(12, 6, 12), bool], Tensor[(864), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(240), float32], Tensor[(7, 14, 13), bool], Tensor[(770), float32]) */;
  %842 = cos(%831) /* ty=Tensor[(5, 7, 8), float32] */;
  %843 = %836.3;
  %844 = %841.9;
  (%842, %843, meta[relay.Constant][52] /* ty=Tensor[(180), float32] */, meta[relay.Constant][53] /* ty=Tensor[(240), float32] */, %844, meta[relay.Constant][54] /* ty=Tensor[(864), float32] */, %var_15390)
}

def @func_17356() -> Tensor[(770, 1), float32] {
  %845 = @func_11666() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(770, 1), float32], Tensor[(1274), int32]) */;
  %845.2
}

def @func_7077(%var_7072: Tensor[(13, 5, 3), float64]) -> Tensor[(13, 5, 3), float64] {
  %846 = cast(%var_7072, dtype="float64") /* ty=Tensor[(13, 5, 3), float64] */;
  tan(%846) /* ty=Tensor[(13, 5, 3), float64] */
}

def @func_2931() -> (Tensor[(72), float32], Tensor[(72), float32]) {
  %847 = @func_2689() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %848 = @func_2842() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %849 = %847.0;
  %850 = %848.1;
  (%849, %850)
}

def @func_16569() -> (Tensor[(240), float32], Tensor[(72), float32], Tensor[(4, 3, 6), uint8]) {
  %851 = @func_13487() /* ty=(Tensor[(72), float32],) */;
  %852 = @func_14076() /* ty=(Tensor[(72), float32], Tensor[(4, 3, 6), uint8], Tensor[(72), float32]) */;
  %853 = @func_4550() /* ty=Tensor[(240), float32] */;
  %854 = %851.0;
  %855 = %852.1;
  (%853, %854, %855)
}

def @func_16889() -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32]) {
  %856 = @func_11915() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(864), float32]) */;
  %857 = @func_3151() /* ty=(Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(240), float32]) */;
  %858 = %856.0;
  %859 = %857.0;
  %860 = @func_10699() /* ty=Tensor[(72), float32] */;
  (%858, %859, %860)
}

def @func_11511() -> (Tensor[(72), float32], Tensor[(72), float32]) {
  %861 = @func_11364() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(770, 1), float32]) */;
  %862 = @func_6699() /* ty=(Tensor[(72), float32],) */;
  %863 = %861.0;
  %864 = %862.0;
  (%863, %864)
}

def @func_17381() -> (Tensor[(72), float32],) {
  %865 = @func_11387() /* ty=Tensor[(72), float32] */;
  (%865,)
}

def @func_18986() -> (Tensor[(72), float32], Tensor[(7, 14, 13), bool], Tensor[(1274), int32], Tensor[(4, 3, 6), float32], Tensor[(80), float32], Tensor[(8, 16, 16), float64], Tensor[(2048), float64]) {
  %866 = @func_6964() /* ty=(Tensor[(48), uint32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32]) */;
  %867 = cast(meta[relay.Constant][55] /* ty=Tensor[(1274), int32] */, dtype="int32") /* ty=Tensor[(1274), int32] */;
  %868 = cast(meta[relay.Constant][55] /* ty=Tensor[(1274), int32] */, dtype="int32") /* ty=Tensor[(1274), int32] */;
  %869 = reshape(%867, newshape=[7, 14, 13]) /* ty=Tensor[(7, 14, 13), int32] */;
  %870 = reshape(%868, newshape=[7, 14, 13]) /* ty=Tensor[(7, 14, 13), int32] */;
  %871 = @func_45(%869, %870) /* ty=(Tensor[(7, 14, 13), bool],) */;
  %872 = @func_4461() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32]) */;
  %873 = %872.2;
  %874 = cast(%873, dtype="float32") /* ty=Tensor[(4, 3, 6), float32] */;
  %875 = cast(meta[relay.Constant][56] /* ty=Tensor[(2048), float64] */, dtype="float64") /* ty=Tensor[(2048), float64] */;
  %876 = reshape(%875, newshape=[8, 16, 16]) /* ty=Tensor[(8, 16, 16), float64] */;
  %877 = @func_16379(%876) /* ty=(Tensor[(8, 16, 16), float64],) */;
  %878 = %866.1;
  %879 = %871.0;
  %880 = acos(%874) /* ty=Tensor[(4, 3, 6), float32] */;
  %881 = @func_7402() /* ty=Tensor[(80), float32] */;
  %882 = %877.0;
  (%878, %879, meta[relay.Constant][55] /* ty=Tensor[(1274), int32] */, %880, %881, %882, meta[relay.Constant][56] /* ty=Tensor[(2048), float64] */)
}

def @func_8480(%var_8471: Tensor[(5, 6, 15), uint64], %var_8472: Tensor[(5, 6, 15), uint64]) -> (Tensor[(5, 6, 15), bool], Tensor[(72), float32]) {
  %883 = cast(%var_8472, dtype="bool") /* ty=Tensor[(5, 6, 15), bool] */;
  %884 = shape_of(%var_8471, dtype="int32") /* ty=Tensor[(3), int32] */;
  %885 = cast(%var_8471, dtype="bool") /* ty=Tensor[(5, 6, 15), bool] */;
  %886 = dyn.reshape(%883, %884, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %887 = @func_4665() /* ty=(Tensor[(4, 3, 6), float32], Tensor[(72), float32], Tensor[(180), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(80), float32], Tensor[(240), float32], Tensor[(72), float32]) */;
  %888 = less_equal(%885, %886) /* ty=Tensor[(5, 6, 15), bool] */;
  %889 = %887.7;
  (%888, %889)
}

def @func_3749() -> (Tensor[(240), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32]) {
  %890 = @func_3151() /* ty=(Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(240), float32]) */;
  %891 = @func_2881() /* ty=(Tensor[(72), float32], Tensor[(1274), int32]) */;
  %892 = @func_2184() /* ty=(Tensor[(6, 13, 11), float64], Tensor[(4, 3, 6), float32], Tensor[(72), float32]) */;
  %893 = %890.3;
  %894 = %891.0;
  %895 = %892.1;
  (%893, %894, %895)
}

def @func_12828() -> (Tensor[(72), float32], Tensor[(864), float32]) {
  %896 = @func_7664() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(420), float32], Tensor[(420), float32]) */;
  %897 = @func_7883() /* ty=(Tensor[(864), float32],) */;
  %898 = %896.0;
  %899 = %897.0;
  (%898, %899)
}

def @func_11926() -> (Tensor[(72), float32],) {
  %900 = @func_2525() /* ty=Tensor[(72), float32] */;
  (%900,)
}

def @func_11102(%var_11067: Tensor[(12, 4), uint32], %var_11068: Tensor[(770), float32]) -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(12, 4), uint32], Tensor[(770), float32], Tensor[(72), float32], Tensor[(864), float32]) {
  %901 = @func_10125() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32]) */;
  %902 = @func_5488() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %903 = cast(%var_11067, dtype="uint32") /* ty=Tensor[(12, 4), uint32] */;
  %904 = cast(%var_11068, dtype="float32") /* ty=Tensor[(770), float32] */;
  %905 = reshape(%903, newshape=[48]) /* ty=Tensor[(48), uint32] */;
  %906 = reshape(%904, newshape=[770]) /* ty=Tensor[(770), float32] */;
  %907 = @func_3954(%905, %906) /* ty=(Tensor[(6, 13, 11), float64], Tensor[(8, 5, 4), float64], Tensor[(48), uint32], Tensor[(48), uint32], Tensor[(4, 3, 6), float64], Tensor[(7, 14, 13), bool], Tensor[(1274, 1), int32], Tensor[(7, 10, 11), float32], Tensor[(770), float32], Tensor[(72), float32], Tensor[(72), float32]) */;
  %908 = @func_10555() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %909 = @func_9512() /* ty=(Tensor[(4, 3, 6), float32], Tensor[(240), float32], Tensor[(864), float32], Tensor[(770, 1), float32]) */;
  %910 = @func_5175() /* ty=Tensor[(72), float32] */;
  %911 = %901.1;
  %912 = %902.1;
  %913 = %907.9;
  %914 = %908.1;
  %915 = %909.2;
  (%910, %911, %912, %913, %var_11067, %var_11068, %914, %915)
}

def @func_18021() -> Tensor[(4, 3, 6), float32] {
  @func_14315() /* ty=Tensor[(4, 3, 6), float32] */
}

def @func_16265() -> (Tensor[(1274), int32], Tensor[(2, 24), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32]) {
  %916 = @func_7423() /* ty=(Tensor[(4, 3, 6), float32], Tensor[(180), float32], Tensor[(2, 24), float32]) */;
  %917 = @func_2931() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %918 = @func_12698() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32], Tensor[(4, 3, 6), float32], Tensor[(72), float32], Tensor[(72), float32]) */;
  %919 = @func_8867() /* ty=Tensor[(1274), int32] */;
  %920 = %916.2;
  %921 = %917.1;
  %922 = %918.2;
  (%919, %920, %921, %922)
}

def @func_2525() -> Tensor[(72), float32] {
  %923 = @func_2351() /* ty=(Tensor[(72), float32], Tensor[(1274), int32], Tensor[(1274), int32], Tensor[(4, 3, 6), float32]) */;
  %923.0
}

def @func_12984(%var_12975: Tensor[(252, 4), float32]) -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(4, 3, 9), float32], Tensor[(252, 4), float32], Tensor[(48), uint32], Tensor[(80), float32]) {
  %924 = @func_9003() /* ty=(Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(180, 1), float32]) */;
  %925 = @func_3362() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(8, 5, 4), float64], Tensor[(160), float64]) */;
  %926 = cast(%var_12975, dtype="float32") /* ty=Tensor[(252, 4), float32] */;
  %927 = cast(meta[relay.Constant][57] /* ty=Tensor[(48), uint32] */, dtype="uint32") /* ty=Tensor[(48), uint32] */;
  %928 = reshape(%926, newshape=[1008]) /* ty=Tensor[(1008), float32] */;
  %929 = reshape(%927, newshape=[48]) /* ty=Tensor[(48), uint32] */;
  %930 = @func_11215(%928, %929) /* ty=(Tensor[(4, 3, 9), float32], Tensor[(72), float32], Tensor[(1008), float32], Tensor[(48), uint32], Tensor[(72), float32], Tensor[(4, 3, 6), bool]) */;
  %931 = %924.0;
  %932 = %925.1;
  %933 = %930.0;
  %934 = @func_10978() /* ty=Tensor[(80), float32] */;
  (%931, %932, %933, %var_12975, meta[relay.Constant][57] /* ty=Tensor[(48), uint32] */, %934)
}

def @func_13575(%var_13558: bool, %var_13559: Tensor[(440), bool], %var_13568: Tensor[(120, 2), float32]) -> (Tensor[(72), float32], Tensor[(4, 11, 10), bool], bool, Tensor[(440), bool], Tensor[(72), float32], Tensor[(120, 2), float32]) {
  %935 = cast(%var_13558, dtype="bool") /* ty=bool */;
  %936 = cast(%var_13559, dtype="bool") /* ty=Tensor[(440), bool] */;
  %937 = reshape(%935, newshape=[]) /* ty=bool */;
  %938 = reshape(%936, newshape=[4, 11, 10]) /* ty=Tensor[(4, 11, 10), bool] */;
  %939 = cast(%var_13568, dtype="float32") /* ty=Tensor[(120, 2), float32] */;
  %940 = reshape(%939, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %941 = @func_8948(%940) /* ty=(Tensor[(72), float32], Tensor[(864), float32], Tensor[(240), float32], Tensor[(864), float32], Tensor[(12, 4), uint32]) */;
  %942 = @func_11704() /* ty=Tensor[(72), float32] */;
  %943 = @func_7983(%937, %938) /* ty=Tensor[(4, 11, 10), bool] */;
  %944 = %941.0;
  (%942, %943, %var_13558, %var_13559, %944, %var_13568)
}

def @func_5241() -> (Tensor[(1274), int32], Tensor[(72), float32]) {
  %945 = @func_2351() /* ty=(Tensor[(72), float32], Tensor[(1274), int32], Tensor[(1274), int32], Tensor[(4, 3, 6), float32]) */;
  %946 = @func_4284() /* ty=(Tensor[(72), float32], Tensor[(7, 14, 13), bool], Tensor[(1274), int32]) */;
  %947 = %945.2;
  %948 = %946.0;
  (%947, %948)
}

def @func_11848() -> (Tensor[(72), float32],) {
  %949 = @func_10125() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32]) */;
  %950 = %949.0;
  (%950,)
}

def @func_15208(%var_15184: Tensor[(3360), float64]) -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(14, 16, 15), float64], Tensor[(3360), float64], Tensor[(1274), int32]) {
  %951 = @func_6209() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %952 = cast(%var_15184, dtype="float64") /* ty=Tensor[(3360), float64] */;
  %953 = cast(meta[relay.Constant][58] /* ty=Tensor[(1274), int32] */, dtype="int32") /* ty=Tensor[(1274), int32] */;
  %954 = reshape(%952, newshape=[14, 16, 15]) /* ty=Tensor[(14, 16, 15), float64] */;
  %955 = reshape(%953, newshape=[1274]) /* ty=Tensor[(1274), int32] */;
  %956 = @func_13297(%954, %955) /* ty=(Tensor[(14, 16, 15), float64], Tensor[(7, 14, 13), bool], Tensor[(1274), int32], Tensor[(72), float32]) */;
  %957 = %951.0;
  %958 = @func_5405() /* ty=Tensor[(72), float32] */;
  %959 = @func_10459() /* ty=Tensor[(72), float32] */;
  %960 = %956.0;
  (%957, %958, %959, %960, %var_15184, meta[relay.Constant][58] /* ty=Tensor[(1274), int32] */)
}

def @func_6228() -> (Tensor[(72), float32],) {
  %961 = @func_3117() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %962 = %961.1;
  (%962,)
}

def @func_579(%var_555: Tensor[(4, 3, 6), float32]) -> Tensor[(4, 3, 6), float32] {
  %963 = cast(meta[relay.Constant][59] /* ty=Tensor[(4, 3, 6), float32] */, dtype="float32") /* ty=Tensor[(4, 3, 6), float32] */;
  %964 = shape_of(%var_555, dtype="int32") /* ty=Tensor[(3), int32] */;
  %965 = cast(%var_555, dtype="float32") /* ty=Tensor[(4, 3, 6), float32] */;
  %966 = dyn.reshape(%963, %964, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%965, %966) /* ty=Tensor[(4, 3, 6), float32] */
}

def @func_10699() -> Tensor[(72), float32] {
  %967 = @func_2191() /* ty=(Tensor[(72), float32],) */;
  %967.0
}

def @func_15303() -> (Tensor[(4, 3, 6), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32]) {
  %968 = @func_12035() /* ty=(Tensor[(80), float32], Tensor[(4, 3, 6), float32]) */;
  %969 = @func_5241() /* ty=(Tensor[(1274), int32], Tensor[(72), float32]) */;
  %970 = @func_12698() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32], Tensor[(4, 3, 6), float32], Tensor[(72), float32], Tensor[(72), float32]) */;
  %971 = %968.1;
  %972 = %969.1;
  %973 = %970.2;
  (%971, %972, %973)
}

def @func_2978() -> Tensor[(72), float32] {
  @func_2739() /* ty=Tensor[(72), float32] */
}

def @func_14915() -> Tensor[(4, 3, 6), bool] {
  %974 = @func_7433() /* ty=Tensor[(72), float64] */;
  %975 = cast(%974, dtype="float32") /* ty=Tensor[(72), float32] */;
  %976 = reshape(%975, newshape=[4, 3, 6]) /* ty=Tensor[(4, 3, 6), float32] */;
  %977 = @func_4204(%976) /* ty=Tensor[(4, 3, 6), bool] */;
  %978 = cast(%974, dtype="bool") /* ty=Tensor[(72), bool] */;
  %979 = shape_of(%977, dtype="int32") /* ty=Tensor[(3), int32] */;
  %980 = cast(%977, dtype="bool") /* ty=Tensor[(4, 3, 6), bool] */;
  %981 = dyn.reshape(%978, %979, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%980, %981) /* ty=Tensor[(4, 3, 6), bool] */
}

def @func_10830(%var_10810: Tensor[(14, 5, 12), float32]) -> (Tensor[(14, 5, 12), bool],) {
  %982 = cast(%var_10810, dtype="float32") /* ty=Tensor[(14, 5, 12), float32] */;
  %983 = acos(%982) /* ty=Tensor[(14, 5, 12), float32] */;
  %984 = cast(%983, dtype="bool") /* ty=Tensor[(14, 5, 12), bool] */;
  %985 = shape_of(%var_10810, dtype="int32") /* ty=Tensor[(3), int32] */;
  %986 = cast(%var_10810, dtype="bool") /* ty=Tensor[(14, 5, 12), bool] */;
  %987 = dyn.reshape(%984, %985, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %988 = logical_and(%986, %987) /* ty=Tensor[(14, 5, 12), bool] */;
  (%988,)
}

def @func_11773() -> (Tensor[(1274), int32], Tensor[(2, 24), float32], Tensor[(72), float32]) {
  %989 = @func_8390() /* ty=(Tensor[(1274), int32], Tensor[(1274), int32], Tensor[(4, 3, 6), float32]) */;
  %990 = @func_7423() /* ty=(Tensor[(4, 3, 6), float32], Tensor[(180), float32], Tensor[(2, 24), float32]) */;
  %991 = @func_7298() /* ty=(Tensor[(72), float32], Tensor[(80), float32]) */;
  %992 = %989.0;
  %993 = %990.2;
  %994 = %991.0;
  (%992, %993, %994)
}

def @func_16760() -> (Tensor[(72), float32],) {
  %995 = @func_8449() /* ty=Tensor[(72), float32] */;
  (%995,)
}

def @func_16496(%var_16463: bool, %var_16464: Tensor[(11, 10, 7), bool]) -> (Tensor[(11, 10, 7), float64],) {
  %996 = cast(%var_16463, dtype="bool") /* ty=bool */;
  %997 = cast(%var_16464, dtype="bool") /* ty=Tensor[(11, 10, 7), bool] */;
  %998 = logical_and(%996, %997) /* ty=Tensor[(11, 10, 7), bool] */;
  %999 = cast(%998, dtype="float64") /* ty=Tensor[(11, 10, 7), float64] */;
  %1000 = sigmoid(%999) /* ty=Tensor[(11, 10, 7), float64] */;
  (%1000,)
}

def @func_8867() -> Tensor[(1274), int32] {
  %1001 = @func_2351() /* ty=(Tensor[(72), float32], Tensor[(1274), int32], Tensor[(1274), int32], Tensor[(4, 3, 6), float32]) */;
  %1001.2
}

def @func_9243() -> Tensor[(4, 3, 9), bool] {
  %1002 = cast(meta[relay.Constant][60] /* ty=uint8 */, dtype="bool") /* ty=bool */;
  %1003 = cast(meta[relay.Constant][61] /* ty=Tensor[(4, 3, 9), uint8] */, dtype="bool") /* ty=Tensor[(4, 3, 9), bool] */;
  greater(%1002, %1003) /* ty=Tensor[(4, 3, 9), bool] */
}

def @func_9926(%var_9896: Tensor[(4, 3, 6), float32]) -> (Tensor[(4, 3, 6), uint8],) {
  %1004 = @func_2948() /* ty=(Tensor[(4, 3, 6), float32],) */;
  %1005 = %1004.0;
  %1006 = cast(%var_9896, dtype="uint8") /* ty=Tensor[(4, 3, 6), uint8] */;
  %1007 = shape_of(%1005, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1008 = cast(%1005, dtype="uint8") /* ty=Tensor[(4, 3, 6), uint8] */;
  %1009 = dyn.reshape(%1006, %1007, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1010 = add(%1008, %1009) /* ty=Tensor[(4, 3, 6), uint8] */;
  (%1010,)
}

def @func_12351(%var_12303: Tensor[(864), float32]) -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(12, 6, 12), bool], Tensor[(864), float32], Tensor[(240), float32], Tensor[(80), float32], Tensor[(12, 6, 12), bool]) {
  %1011 = @func_10078() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32]) */;
  %1012 = cast(%var_12303, dtype="float32") /* ty=Tensor[(864), float32] */;
  %1013 = reshape(%1012, newshape=[12, 6, 12]) /* ty=Tensor[(12, 6, 12), float32] */;
  %1014 = @func_4005() /* ty=(Tensor[(72), float32], Tensor[(240), float32]) */;
  %1015 = @func_9643() /* ty=(Tensor[(240), float32], Tensor[(80), float32], Tensor[(80), float32]) */;
  %1016 = @func_790(%1013) /* ty=Tensor[(12, 6, 12), bool] */;
  %1017 = cast(%1016, dtype="float32") /* ty=Tensor[(12, 6, 12), float32] */;
  %1018 = reshape(%1017, newshape=[864]) /* ty=Tensor[(864), float32] */;
  %1019 = @func_2001(%1018) /* ty=(Tensor[(6, 3, 4), float64], Tensor[(12, 6, 12), bool], Tensor[(864), float32]) */;
  %1020 = %1011.0;
  %1021 = @func_3698() /* ty=Tensor[(72), float32] */;
  %1022 = %1014.1;
  %1023 = %1015.1;
  %1024 = %1019.1;
  (%1020, %1021, %1016, %var_12303, %1022, %1023, %1024)
}

def @func_15083(%var_15078: Tensor[(2, 24), float32]) -> Tensor[(2, 24), uint64] {
  %1025 = @func_7423() /* ty=(Tensor[(4, 3, 6), float32], Tensor[(180), float32], Tensor[(2, 24), float32]) */;
  %1026 = %1025.2;
  %1027 = cast(%var_15078, dtype="uint64") /* ty=Tensor[(2, 24), uint64] */;
  %1028 = shape_of(%1026, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1029 = cast(%1026, dtype="uint64") /* ty=Tensor[(2, 24), uint64] */;
  %1030 = dyn.reshape(%1027, %1028, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  bitwise_and(%1029, %1030) /* ty=Tensor[(2, 24), uint64] */
}

def @func_15832() -> (Tensor[(72), float32],) {
  %1031 = @func_14643() /* ty=(Tensor[(72), float32], Tensor[(420), float32], Tensor[(80), float32]) */;
  %1032 = %1031.0;
  (%1032,)
}

def @func_4064() -> (Tensor[(72), float32],) {
  %1033 = @func_3194() /* ty=Tensor[(72), float32] */;
  (%1033,)
}

def @func_9050(%var_9025: Tensor[(8, 286), float64], %var_9033: Tensor[(13, 16, 11), float64]) -> (Tensor[(48), uint32], Tensor[(8, 286), float64], Tensor[(13, 16, 11), bool]) {
  %1034 = @func_4235() /* ty=(Tensor[(72), float32], Tensor[(48), uint32], Tensor[(48), uint32]) */;
  %1035 = cast(%var_9025, dtype="float64") /* ty=Tensor[(8, 286), float64] */;
  %1036 = reshape(%1035, newshape=[13, 16, 11]) /* ty=Tensor[(13, 16, 11), float64] */;
  %1037 = @func_7525(%1036) /* ty=Tensor[(13, 16, 11), float64] */;
  %1038 = cast(%var_9033, dtype="bool") /* ty=Tensor[(13, 16, 11), bool] */;
  %1039 = shape_of(%1037, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1040 = cast(%1037, dtype="bool") /* ty=Tensor[(13, 16, 11), bool] */;
  %1041 = dyn.reshape(%1038, %1039, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1042 = %1034.2;
  %1043 = logical_and(%1040, %1041) /* ty=Tensor[(13, 16, 11), bool] */;
  (%1042, %var_9025, %1043)
}

def @func_7423() -> (Tensor[(4, 3, 6), float32], Tensor[(180), float32], Tensor[(2, 24), float32]) {
  %1044 = cast(meta[relay.Constant][62] /* ty=Tensor[(2, 24), float32] */, dtype="float32") /* ty=Tensor[(2, 24), float32] */;
  %1045 = reshape(%1044, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %1046 = @func_5586(%1045) /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(?, 16, 3), bool], Tensor[(48), float32], Tensor[(180), float32], Tensor[(180), float32]) */;
  %1047 = @func_4368() /* ty=Tensor[(4, 3, 6), float32] */;
  %1048 = %1046.5;
  (%1047, %1048, meta[relay.Constant][62] /* ty=Tensor[(2, 24), float32] */)
}

def @func_6991(%var_6989: Tensor[(420), float32]) -> (Tensor[(72), float32], Tensor[(2, 15, 14), float64], Tensor[(420), float32]) {
  %1049 = @func_5996() /* ty=(Tensor[(4, 3, 6), float32], Tensor[(72), float32]) */;
  %1050 = cast(%var_6989, dtype="float32") /* ty=Tensor[(420), float32] */;
  %1051 = reshape(%1050, newshape=[2, 15, 14]) /* ty=Tensor[(2, 15, 14), float32] */;
  %1052 = @func_1723(%1051) /* ty=(Tensor[(2, 15, 14), float64],) */;
  %1053 = %1049.1;
  %1054 = %1052.0;
  (%1053, %1054, %var_6989)
}

def @func_8624() -> (Tensor[(72), float32], Tensor[(72), float32]) {
  %1055 = @func_4665() /* ty=(Tensor[(4, 3, 6), float32], Tensor[(72), float32], Tensor[(180), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(80), float32], Tensor[(240), float32], Tensor[(72), float32]) */;
  %1056 = @func_3117() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %1057 = %1055.1;
  %1058 = %1056.0;
  (%1057, %1058)
}

def @func_5462(%var_5445: Tensor[(12, 1, 8), float32], %var_5458: Tensor[(80), float32]) -> (Tensor[(12, ?, 8), bool], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(240), float32]) {
  %1059 = cast(%var_5445, dtype="float32") /* ty=Tensor[(12, 1, 8), float32] */;
  %1060 = atan(%1059) /* ty=Tensor[(12, 1, 8), float32] */;
  %1061 = cast(%var_5445, dtype="bool") /* ty=Tensor[(12, 1, 8), bool] */;
  %1062 = shape_of(%1060, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1063 = cast(%1060, dtype="bool") /* ty=Tensor[(12, 1, 8), bool] */;
  %1064 = dyn.reshape(%1061, %1062, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1065 = cast(%var_5458, dtype="float32") /* ty=Tensor[(80), float32] */;
  %1066 = cast(meta[relay.Constant][63] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %1067 = reshape(%1065, newshape=[8, 10, 1]) /* ty=Tensor[(8, 10, 1), float32] */;
  %1068 = reshape(%1066, newshape=[8, 10, 3]) /* ty=Tensor[(8, 10, 3), float32] */;
  %1069 = logical_and(%1063, %1064) /* ty=Tensor[(12, ?, 8), bool] */;
  %1070 = @func_1589(%1067, %1068) /* ty=Tensor[(8, 10, 3), float32] */;
  (%1069, %1070, %var_5458, meta[relay.Constant][63] /* ty=Tensor[(240), float32] */)
}

def @func_7298() -> (Tensor[(72), float32], Tensor[(80), float32]) {
  %1071 = @func_4064() /* ty=(Tensor[(72), float32],) */;
  %1072 = @func_6486() /* ty=(Tensor[(80), float32], Tensor[(8, 5, 4), float64], Tensor[(160), float64], Tensor[(72), float32], Tensor[(72), float32]) */;
  %1073 = %1071.0;
  %1074 = %1072.0;
  (%1073, %1074)
}

def @func_16169() -> (Tensor[(80), float32], Tensor[(15, 15, 4), float32], Tensor[(900), float32]) {
  %1075 = cast(meta[relay.Constant][64] /* ty=Tensor[(900), float32] */, dtype="float32") /* ty=Tensor[(900), float32] */;
  %1076 = reshape(%1075, newshape=[15, 15, 4]) /* ty=Tensor[(15, 15, 4), float32] */;
  %1077 = @func_7402() /* ty=Tensor[(80), float32] */;
  %1078 = @func_8171(%1076) /* ty=Tensor[(15, 15, 4), float32] */;
  (%1077, %1078, meta[relay.Constant][64] /* ty=Tensor[(900), float32] */)
}

def @func_16604() -> (Tensor[(72), float32],) {
  %1079 = @func_3194() /* ty=Tensor[(72), float32] */;
  (%1079,)
}

def @func_10143() -> Tensor[(72), float32] {
  %1080 = @func_9330() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(864), float32], Tensor[(72), float32], Tensor[(180), float32], Tensor[(48), uint32], Tensor[(72), float32]) */;
  %1080.2
}

def @func_1723(%var_1715: Tensor[(2, 15, 14), float32]) -> (Tensor[(2, 15, 14), float64],) {
  %1081 = cast(%var_1715, dtype="float32") /* ty=Tensor[(2, 15, 14), float32] */;
  %1082 = sigmoid(%1081) /* ty=Tensor[(2, 15, 14), float32] */;
  %1083 = cast(%1082, dtype="float64") /* ty=Tensor[(2, 15, 14), float64] */;
  %1084 = log10(%1083) /* ty=Tensor[(2, 15, 14), float64] */;
  (%1084,)
}

def @func_16387() -> (Tensor[(72), float32],) {
  %1085 = @func_10555() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %1086 = %1085.0;
  (%1086,)
}

def @func_4235() -> (Tensor[(72), float32], Tensor[(48), uint32], Tensor[(48), uint32]) {
  %1087 = @func_2931() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %1088 = cast(meta[relay.Constant][65] /* ty=Tensor[(48), uint32] */, dtype="uint32") /* ty=Tensor[(48), uint32] */;
  %1089 = reshape(%1088, newshape=[48]) /* ty=Tensor[(48), uint32] */;
  %1090 = @func_3079(%1089) /* ty=(Tensor[(72), float32], Tensor[(9, 16, 3), uint32], Tensor[(48), uint32], Tensor[(432, 1), uint32]) */;
  %1091 = %1087.1;
  %1092 = %1090.2;
  (%1091, %1092, meta[relay.Constant][65] /* ty=Tensor[(48), uint32] */)
}

def @func_18571() -> (Tensor[(72), float32], Tensor[(72), float32]) {
  %1093 = @func_6699() /* ty=(Tensor[(72), float32],) */;
  %1094 = @func_6781() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(1274), int32]) */;
  %1095 = %1093.0;
  %1096 = %1094.0;
  (%1095, %1096)
}

def @func_8857() -> (Tensor[(8, 5, 4), float64], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32]) {
  %1097 = @func_6486() /* ty=(Tensor[(80), float32], Tensor[(8, 5, 4), float64], Tensor[(160), float64], Tensor[(72), float32], Tensor[(72), float32]) */;
  %1098 = @func_2721() /* ty=(Tensor[(6, 13, 11), float64], Tensor[(72), float32]) */;
  %1099 = @func_8150() /* ty=(Tensor[(72), float32], Tensor[(4, 3, 6), float32], Tensor[(48), uint32], Tensor[(4, 3, 6), float32], Tensor[(72), float32], Tensor[(48), uint32]) */;
  %1100 = @func_6486() /* ty=(Tensor[(80), float32], Tensor[(8, 5, 4), float64], Tensor[(160), float64], Tensor[(72), float32], Tensor[(72), float32]) */;
  %1101 = %1097.1;
  %1102 = %1098.1;
  %1103 = %1099.4;
  %1104 = %1100.3;
  (%1101, %1102, %1103, %1104)
}

def @func_12372() -> (Tensor[(1274), int32], Tensor[(72), float32]) {
  %1105 = @func_2881() /* ty=(Tensor[(72), float32], Tensor[(1274), int32]) */;
  %1106 = @func_11848() /* ty=(Tensor[(72), float32],) */;
  %1107 = %1105.1;
  %1108 = %1106.0;
  (%1107, %1108)
}

def @func_13297(%var_13274: Tensor[(14, 16, 15), float64], %var_13290: Tensor[(1274), int32]) -> (Tensor[(14, 16, 15), float64], Tensor[(7, 14, 13), bool], Tensor[(1274), int32], Tensor[(72), float32]) {
  %1109 = cast(%var_13274, dtype="float64") /* ty=Tensor[(14, 16, 15), float64] */;
  %1110 = log10(%1109) /* ty=Tensor[(14, 16, 15), float64] */;
  %1111 = cast(%1110, dtype="float64") /* ty=Tensor[(14, 16, 15), float64] */;
  %1112 = cast(%var_13290, dtype="int32") /* ty=Tensor[(1274), int32] */;
  %1113 = cast(%var_13290, dtype="int32") /* ty=Tensor[(1274), int32] */;
  %1114 = reshape(%1112, newshape=[7, 14, 13]) /* ty=Tensor[(7, 14, 13), int32] */;
  %1115 = reshape(%1113, newshape=[7, 14, 13]) /* ty=Tensor[(7, 14, 13), int32] */;
  %1116 = @func_45(%1114, %1115) /* ty=(Tensor[(7, 14, 13), bool],) */;
  %1117 = @func_13105() /* ty=(Tensor[(864), float32], Tensor[(72), float32], Tensor[(14, 5, 12), bool], Tensor[(840), float32], Tensor[(72), float32], Tensor[(72), float32]) */;
  %1118 = rsqrt(%1111) /* ty=Tensor[(14, 16, 15), float64] */;
  %1119 = %1116.0;
  %1120 = %1117.4;
  (%1118, %1119, %var_13290, %1120)
}

def @func_18437(%var_18433: Tensor[(1008), float32]) -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(1008), float32]) {
  %1121 = @func_10125() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32]) */;
  %1122 = cast(%var_18433, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %1123 = reshape(%1122, newshape=[2, 504]) /* ty=Tensor[(2, 504), float32] */;
  %1124 = @func_17430(%1123) /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(2, 504), float32]) */;
  %1125 = %1121.0;
  %1126 = %1124.0;
  (%1125, %1126, %var_18433)
}

def @func_6499() -> (Tensor[(15, 8, 6), float32],) {
  %1127 = cast(meta[relay.Constant][66] /* ty=Tensor[(15, 8, 6), float32] */, dtype="float32") /* ty=Tensor[(15, 8, 6), float32] */;
  %1128 = sin(%1127) /* ty=Tensor[(15, 8, 6), float32] */;
  (%1128,)
}

def @func_18185(%var_18126: Tensor[(180), float32]) -> (Tensor[(770), float32], Tensor[(770), float32], Tensor[(15, 1, 12), float32], Tensor[(180), float32], Tensor[(48, 72), int16], Tensor[(48, 72), bool], Tensor[(48, 72), uint8], Tensor[(48, 72), float64]) {
  %1129 = cast(meta[relay.Constant][67] /* ty=Tensor[(48, 1), uint32] */, dtype="uint32") /* ty=Tensor[(48, 1), uint32] */;
  %1130 = cast(meta[relay.Constant][68] /* ty=Tensor[(770), float32] */, dtype="float32") /* ty=Tensor[(770), float32] */;
  %1131 = reshape(%1129, newshape=[12, 4]) /* ty=Tensor[(12, 4), uint32] */;
  %1132 = reshape(%1130, newshape=[770]) /* ty=Tensor[(770), float32] */;
  %1133 = @func_11102(%1131, %1132) /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(12, 4), uint32], Tensor[(770), float32], Tensor[(72), float32], Tensor[(864), float32]) */;
  %1134 = cast(%var_18126, dtype="float32") /* ty=Tensor[(180), float32] */;
  %1135 = reshape(%1134, newshape=[15, 1, 12]) /* ty=Tensor[(15, 1, 12), float32] */;
  %1136 = @func_17558() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %1137 = %1136.1;
  %1138 = @func_11926() /* ty=(Tensor[(72), float32],) */;
  %1139 = %1138.0;
  %1140 = cast(%1139, dtype="float64") /* ty=Tensor[(72), float64] */;
  %1141 = cast(meta[relay.Constant][67] /* ty=Tensor[(48, 1), uint32] */, dtype="float64") /* ty=Tensor[(48, 1), float64] */;
  %1142 = floor_mod(%1140, %1141) /* ty=Tensor[(48, 72), float64] */;
  %1143 = cast(%1137, dtype="bool") /* ty=Tensor[(72), bool] */;
  %1144 = cast(%1142, dtype="bool") /* ty=Tensor[(48, 72), bool] */;
  %1145 = less(%1143, %1144) /* ty=Tensor[(48, 72), bool] */;
  %1146 = cast(meta[relay.Constant][69] /* ty=Tensor[(48, 72), float64] */, dtype="int16") /* ty=Tensor[(48, 72), int16] */;
  %1147 = shape_of(%1145, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1148 = cast(%1145, dtype="int16") /* ty=Tensor[(48, 72), int16] */;
  %1149 = dyn.reshape(%1146, %1147, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %1150 = cast(%1137, dtype="bool") /* ty=Tensor[(72), bool] */;
  %1151 = cast(%1142, dtype="bool") /* ty=Tensor[(48, 72), bool] */;
  %1152 = cast(meta[relay.Constant][69] /* ty=Tensor[(48, 72), float64] */, dtype="float64") /* ty=Tensor[(48, 72), float64] */;
  %1153 = shape_of(%1142, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1154 = cast(%1142, dtype="float64") /* ty=Tensor[(48, 72), float64] */;
  %1155 = dyn.reshape(%1152, %1153, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %1156 = floor_divide(%1154, %1155) /* ty=Tensor[(48, 72), float64] */;
  %1157 = cast(%1142, dtype="int64") /* ty=Tensor[(48, 72), int64] */;
  %1158 = shape_of(%1145, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1159 = cast(%1145, dtype="int64") /* ty=Tensor[(48, 72), int64] */;
  %1160 = dyn.reshape(%1157, %1158, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %1161 = bitwise_or(%1159, %1160) /* ty=Tensor[(48, 72), int64] */;
  %1162 = cast(%1161, dtype="uint8") /* ty=Tensor[(48, 72), uint8] */;
  %1163 = shape_of(%1156, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1164 = cast(%1156, dtype="uint8") /* ty=Tensor[(48, 72), uint8] */;
  %1165 = dyn.reshape(%1162, %1163, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %1166 = cast(%1161, dtype="float32") /* ty=Tensor[(48, 72), float32] */;
  %1167 = sinh(%1166) /* ty=Tensor[(48, 72), float32] */;
  %1168 = cast(%1167, dtype="float64") /* ty=Tensor[(48, 72), float64] */;
  %1169 = %1133.5;
  %1170 = @func_1378(%1135) /* ty=Tensor[(15, 1, 12), float32] */;
  %1171 = maximum(%1148, %1149) /* ty=Tensor[(48, 72), int16] */;
  %1172 = less_equal(%1150, %1151) /* ty=Tensor[(48, 72), bool] */;
  %1173 = right_shift(%1164, %1165) /* ty=Tensor[(48, 72), uint8] */;
  %1174 = sin(%1168) /* ty=Tensor[(48, 72), float64] */;
  (%1169, meta[relay.Constant][68] /* ty=Tensor[(770), float32] */, %1170, %var_18126, %1171, %1172, %1173, %1174)
}

def @func_18874() -> (Tensor[(72), float32],) {
  %1175 = @func_15980() /* ty=(Tensor[(72), float32],) */;
  %1176 = %1175.0;
  (%1176,)
}

def @func_13704(%var_13666: Tensor[(1, 5, 4), int32], %var_13667: Tensor[(13, 5, 4), int32]) -> (Tensor[(13, 5, 4), int32], Tensor[(72), float32]) {
  %1177 = cast(%var_13666, dtype="int32") /* ty=Tensor[(1, 5, 4), int32] */;
  %1178 = cast(%var_13667, dtype="int32") /* ty=Tensor[(13, 5, 4), int32] */;
  %1179 = @func_13195() /* ty=(Tensor[(72), float32], Tensor[(4, 60), int64], Tensor[(180), float32], Tensor[(120, 2), bool]) */;
  %1180 = subtract(%1177, %1178) /* ty=Tensor[(13, 5, 4), int32] */;
  %1181 = %1179.0;
  (%1180, %1181)
}

def @func_5773() -> (Tensor[(240), float32], Tensor[(48), uint32], Tensor[(72), float32]) {
  %1182 = @func_4732() /* ty=(Tensor[(48), uint32],) */;
  %1183 = @func_4550() /* ty=Tensor[(240), float32] */;
  %1184 = %1182.0;
  %1185 = @func_3698() /* ty=Tensor[(72), float32] */;
  (%1183, %1184, %1185)
}

def @func_18048() -> (Tensor[(72), float32],) {
  %1186 = @func_5715() /* ty=Tensor[(72), float32] */;
  (%1186,)
}

def @func_2669(%var_2609: Tensor[(1, 240), float32], %var_2621: Tensor[(864), float32], %var_2625: Tensor[(48), uint32]) -> (Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(7, 14, 13), bool], Tensor[(1274), int32], Tensor[(80), float32], Tensor[(864), float32], Tensor[(4, 3, 6), bool], Tensor[(48), uint32], Tensor[(432), uint32], Tensor[(12, 240), float32], Tensor[(6, 3, 4), float64], Tensor[(10, 12, 13), float64], Tensor[(770, 240), bool]) {
  %1187 = @func_2184() /* ty=(Tensor[(6, 13, 11), float64], Tensor[(4, 3, 6), float32], Tensor[(72), float32]) */;
  %1188 = cast(meta[relay.Constant][70] /* ty=Tensor[(80), float32] */, dtype="float32") /* ty=Tensor[(80), float32] */;
  %1189 = cast(%var_2609, dtype="float32") /* ty=Tensor[(1, 240), float32] */;
  %1190 = reshape(%1188, newshape=[8, 10, 1]) /* ty=Tensor[(8, 10, 1), float32] */;
  %1191 = reshape(%1189, newshape=[8, 10, 3]) /* ty=Tensor[(8, 10, 3), float32] */;
  %1192 = cast(meta[relay.Constant][71] /* ty=Tensor[(1274), int32] */, dtype="int32") /* ty=Tensor[(1274), int32] */;
  %1193 = cast(meta[relay.Constant][71] /* ty=Tensor[(1274), int32] */, dtype="int32") /* ty=Tensor[(1274), int32] */;
  %1194 = reshape(%1192, newshape=[7, 14, 13]) /* ty=Tensor[(7, 14, 13), int32] */;
  %1195 = reshape(%1193, newshape=[7, 14, 13]) /* ty=Tensor[(7, 14, 13), int32] */;
  %1196 = @func_45(%1194, %1195) /* ty=(Tensor[(7, 14, 13), bool],) */;
  %1197 = cast(%var_2621, dtype="float32") /* ty=Tensor[(864), float32] */;
  %1198 = cast(meta[relay.Constant][72] /* ty=Tensor[(770, 1), float32] */, dtype="float32") /* ty=Tensor[(770, 1), float32] */;
  %1199 = reshape(%1197, newshape=[864]) /* ty=Tensor[(864), float32] */;
  %1200 = reshape(%1198, newshape=[770]) /* ty=Tensor[(770), float32] */;
  %1201 = @func_2594(%1199, %1200) /* ty=(Tensor[(72), float32], Tensor[(15, 1, 12), float32], Tensor[(180), float32], Tensor[(12, 6, 12), bool], Tensor[(864), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(240), float32], Tensor[(7, 14, 13), bool], Tensor[(770), float32]) */;
  %1202 = cast(%var_2625, dtype="uint32") /* ty=Tensor[(48), uint32] */;
  %1203 = cast(meta[relay.Constant][73] /* ty=Tensor[(432), uint32] */, dtype="uint32") /* ty=Tensor[(432), uint32] */;
  %1204 = reshape(%1202, newshape=[1, 16, 3]) /* ty=Tensor[(1, 16, 3), uint32] */;
  %1205 = reshape(%1203, newshape=[9, 16, 3]) /* ty=Tensor[(9, 16, 3), uint32] */;
  %1206 = @func_852(%1204, %1205) /* ty=(Tensor[(9, 16, 3), uint32], Tensor[(4, 3, 6), bool]) */;
  %1207 = cast(%var_2609, dtype="float32") /* ty=Tensor[(1, 240), float32] */;
  %1208 = log(%1207) /* ty=Tensor[(1, 240), float32] */;
  %1209 = cast(%1208, dtype="float32") /* ty=Tensor[(1, 240), float32] */;
  %1210 = cast(meta[relay.Constant][74] /* ty=Tensor[(12, 240), float32] */, dtype="float32") /* ty=Tensor[(12, 240), float32] */;
  %1211 = cast(%var_2621, dtype="float32") /* ty=Tensor[(864), float32] */;
  %1212 = reshape(%1211, newshape=[864]) /* ty=Tensor[(864), float32] */;
  %1213 = @func_2001(%1212) /* ty=(Tensor[(6, 3, 4), float64], Tensor[(12, 6, 12), bool], Tensor[(864), float32]) */;
  %1214 = %1196.0;
  %1215 = cast(%1214, dtype="int32") /* ty=Tensor[(7, 14, 13), int32] */;
  %1216 = reshape(%1215, newshape=[1274]) /* ty=Tensor[(1274), int32] */;
  %1217 = @func_1912(%1216) /* ty=(Tensor[(10, 12, 13), float64], Tensor[(4, 3, 6), float32], Tensor[(36, 2), float32], Tensor[(7, 14, 13), bool], Tensor[(1274), int32]) */;
  %1218 = cast(%1208, dtype="float32") /* ty=Tensor[(1, 240), float32] */;
  %1219 = sigmoid(%1218) /* ty=Tensor[(1, 240), float32] */;
  %1220 = cast(%1219, dtype="float32") /* ty=Tensor[(1, 240), float32] */;
  %1221 = cosh(%1220) /* ty=Tensor[(1, 240), float32] */;
  %1222 = cast(%1221, dtype="float32") /* ty=Tensor[(1, 240), float32] */;
  %1223 = asinh(%1222) /* ty=Tensor[(1, 240), float32] */;
  %1224 = cast(%1223, dtype="bool") /* ty=Tensor[(1, 240), bool] */;
  %1225 = cast(meta[relay.Constant][72] /* ty=Tensor[(770, 1), float32] */, dtype="bool") /* ty=Tensor[(770, 1), bool] */;
  %1226 = %1187.2;
  %1227 = @func_1589(%1190, %1191) /* ty=Tensor[(8, 10, 3), float32] */;
  %1228 = %1201.6;
  %1229 = %1206.1;
  %1230 = floor_divide(%1209, %1210) /* ty=Tensor[(12, 240), float32] */;
  %1231 = %1213.0;
  %1232 = %1217.0;
  %1233 = greater(%1224, %1225) /* ty=Tensor[(770, 240), bool] */;
  (%1226, %1227, meta[relay.Constant][70] /* ty=Tensor[(80), float32] */, %1214, meta[relay.Constant][71] /* ty=Tensor[(1274), int32] */, %1228, %var_2621, %1229, %var_2625, meta[relay.Constant][73] /* ty=Tensor[(432), uint32] */, %1230, %1231, %1232, %1233)
}

def @func_19099() -> Tensor[(80), float32] {
  %1234 = @func_14643() /* ty=(Tensor[(72), float32], Tensor[(420), float32], Tensor[(80), float32]) */;
  %1234.2
}

def @func_16379(%var_16374: Tensor[(8, 16, 16), float64]) -> (Tensor[(8, 16, 16), float64],) {
  %1235 = cast(%var_16374, dtype="float64") /* ty=Tensor[(8, 16, 16), float64] */;
  %1236 = exp(%1235) /* ty=Tensor[(8, 16, 16), float64] */;
  (%1236,)
}

def @func_14712() -> Tensor[(72), float32] {
  %1237 = @func_7664() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(420), float32], Tensor[(420), float32]) */;
  %1237.1
}

def @func_6699() -> (Tensor[(72), float32],) {
  %1238 = @func_6228() /* ty=(Tensor[(72), float32],) */;
  %1239 = %1238.0;
  (%1239,)
}

def @func_11387() -> Tensor[(72), float32] {
  %1240 = @func_5055() /* ty=(Tensor[(1274), int32], Tensor[(72), float32], Tensor[(72), float32]) */;
  %1240.1
}

def @func_5611() -> Tensor[(72), float32] {
  @func_3133() /* ty=Tensor[(72), float32] */
}

def @func_16674() -> (Tensor[(72), float32], Tensor[(8, 5, 4), float64], Tensor[(72), float32]) {
  %1241 = @func_12135() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32]) */;
  %1242 = @func_8247() /* ty=(Tensor[(8, 5, 4), float64], Tensor[(72), float32]) */;
  %1243 = @func_11511() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %1244 = %1241.2;
  %1245 = %1242.0;
  %1246 = %1243.1;
  (%1244, %1245, %1246)
}

def @func_790(%var_781: Tensor[(12, 6, 12), float32]) -> Tensor[(12, 6, 12), bool] {
  %1247 = cast(%var_781, dtype="bool") /* ty=Tensor[(12, 6, 12), bool] */;
  %1248 = shape_of(meta[relay.Constant][75] /* ty=Tensor[(12, 6, 12), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1249 = cast(meta[relay.Constant][75] /* ty=Tensor[(12, 6, 12), float32] */, dtype="bool") /* ty=Tensor[(12, 6, 12), bool] */;
  %1250 = dyn.reshape(%1247, %1248, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%1249, %1250) /* ty=Tensor[(12, 6, 12), bool] */
}

def @func_5644() -> Tensor[(72), float32] {
  @func_5175() /* ty=Tensor[(72), float32] */
}

def @func_18522() -> (Tensor[(4, 3, 6), float32], Tensor[(4, 3, 9), bool]) {
  %1251 = @func_2948() /* ty=(Tensor[(4, 3, 6), float32],) */;
  %1252 = %1251.0;
  %1253 = @func_9243() /* ty=Tensor[(4, 3, 9), bool] */;
  (%1252, %1253)
}

def @func_3954(%var_3901: Tensor[(48), uint32], %var_3930: Tensor[(770), float32]) -> (Tensor[(6, 13, 11), float64], Tensor[(8, 5, 4), float64], Tensor[(48), uint32], Tensor[(48), uint32], Tensor[(4, 3, 6), float64], Tensor[(7, 14, 13), bool], Tensor[(1274, 1), int32], Tensor[(7, 10, 11), float32], Tensor[(770), float32], Tensor[(72), float32], Tensor[(72), float32]) {
  %1254 = @func_2184() /* ty=(Tensor[(6, 13, 11), float64], Tensor[(4, 3, 6), float32], Tensor[(72), float32]) */;
  %1255 = @func_3362() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(8, 5, 4), float64], Tensor[(160), float64]) */;
  %1256 = cast(%var_3901, dtype="uint32") /* ty=Tensor[(48), uint32] */;
  %1257 = reshape(%1256, newshape=[48]) /* ty=Tensor[(48), uint32] */;
  %1258 = @func_3079(%1257) /* ty=(Tensor[(72), float32], Tensor[(9, 16, 3), uint32], Tensor[(48), uint32], Tensor[(432, 1), uint32]) */;
  %1259 = @func_2948() /* ty=(Tensor[(4, 3, 6), float32],) */;
  %1260 = %1259.0;
  %1261 = cast(%1260, dtype="float64") /* ty=Tensor[(4, 3, 6), float64] */;
  %1262 = cast(meta[relay.Constant][76] /* ty=Tensor[(1274, 1), int32] */, dtype="int32") /* ty=Tensor[(1274, 1), int32] */;
  %1263 = cast(meta[relay.Constant][76] /* ty=Tensor[(1274, 1), int32] */, dtype="int32") /* ty=Tensor[(1274, 1), int32] */;
  %1264 = reshape(%1262, newshape=[7, 14, 13]) /* ty=Tensor[(7, 14, 13), int32] */;
  %1265 = reshape(%1263, newshape=[7, 14, 13]) /* ty=Tensor[(7, 14, 13), int32] */;
  %1266 = @func_45(%1264, %1265) /* ty=(Tensor[(7, 14, 13), bool],) */;
  %1267 = cast(%var_3930, dtype="float32") /* ty=Tensor[(770), float32] */;
  %1268 = log(%1261) /* ty=Tensor[(4, 3, 6), float64] */;
  %1269 = cast(%1268, dtype="float32") /* ty=Tensor[(4, 3, 6), float32] */;
  %1270 = reshape(%1267, newshape=[7, 10, 11]) /* ty=Tensor[(7, 10, 11), float32] */;
  %1271 = reshape(%1269, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %1272 = @func_714(%1270, %1271) /* ty=(Tensor[(7, 10, 11), float32], Tensor[(7, 14, 13), bool], Tensor[(91, 14), int32], Tensor[(7, 14, 13), bool], Tensor[(4, 3, 6), float32], Tensor[(72), float32], Tensor[(7, 14, 13), float32]) */;
  %1273 = @func_2689() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %1274 = @func_3574() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(24, 10), float32], Tensor[(864), float32], Tensor[(48), uint32], Tensor[(36, 12), uint32], Tensor[(6, 30), float32]) */;
  %1275 = %1254.0;
  %1276 = %1255.2;
  %1277 = %1258.2;
  %1278 = %1266.0;
  %1279 = %1272.0;
  %1280 = %1273.0;
  %1281 = %1274.2;
  (%1275, %1276, %1277, %var_3901, %1268, %1278, meta[relay.Constant][76] /* ty=Tensor[(1274, 1), int32] */, %1279, %var_3930, %1280, %1281)
}

def @func_17430(%var_17424: Tensor[(2, 504), float32]) -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(2, 504), float32]) {
  %1282 = cast(%var_17424, dtype="float32") /* ty=Tensor[(2, 504), float32] */;
  %1283 = reshape(%1282, newshape=[252, 4]) /* ty=Tensor[(252, 4), float32] */;
  %1284 = @func_12984(%1283) /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(4, 3, 9), float32], Tensor[(252, 4), float32], Tensor[(48), uint32], Tensor[(80), float32]) */;
  %1285 = @func_12005() /* ty=Tensor[(72), float32] */;
  %1286 = %1284.0;
  (%1285, %1286, %var_17424)
}

def @func_2184() -> (Tensor[(6, 13, 11), float64], Tensor[(4, 3, 6), float32], Tensor[(72), float32]) {
  %1287 = cast(meta[relay.Constant][77] /* ty=Tensor[(6, 13, 11), float64] */, dtype="float64") /* ty=Tensor[(6, 13, 11), float64] */;
  %1288 = cast(meta[relay.Constant][78] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %1289 = reshape(%1288, newshape=[4, 3, 6]) /* ty=Tensor[(4, 3, 6), float32] */;
  %1290 = acosh(%1287) /* ty=Tensor[(6, 13, 11), float64] */;
  %1291 = @func_579(%1289) /* ty=Tensor[(4, 3, 6), float32] */;
  (%1290, %1291, meta[relay.Constant][78] /* ty=Tensor[(72), float32] */)
}

def @func_5877() -> (Tensor[(72), float32], Tensor[(72), float32]) {
  %1292 = @func_3614() /* ty=(Tensor[(72), float32], Tensor[(1274), int32]) */;
  %1293 = %1292.0;
  %1294 = @func_5405() /* ty=Tensor[(72), float32] */;
  (%1293, %1294)
}

def @func_15752() -> (Tensor[(72), float32], Tensor[(4, 3, 9), bool], Tensor[(72), float32]) {
  %1295 = @func_5644() /* ty=Tensor[(72), float32] */;
  %1296 = @func_9243() /* ty=Tensor[(4, 3, 9), bool] */;
  %1297 = @func_14712() /* ty=Tensor[(72), float32] */;
  (%1295, %1296, %1297)
}

def @func_18276() -> (Tensor[(48), uint32], Tensor[(72), float32]) {
  %1298 = @func_6859() /* ty=(Tensor[(48), uint32],) */;
  %1299 = @func_8741() /* ty=(Tensor[(72), float32],) */;
  %1300 = %1298.0;
  %1301 = %1299.0;
  (%1300, %1301)
}

def @func_7058() -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32], Tensor[(240), float32], Tensor[(72), float32]) {
  %1302 = @func_6486() /* ty=(Tensor[(80), float32], Tensor[(8, 5, 4), float64], Tensor[(160), float64], Tensor[(72), float32], Tensor[(72), float32]) */;
  %1303 = cast(meta[relay.Constant][79] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %1304 = reshape(%1303, newshape=[24, 10]) /* ty=Tensor[(24, 10), float32] */;
  %1305 = @func_4795(%1304) /* ty=(Tensor[(4, 3, 6), float32], Tensor[(24, 10), bool], Tensor[(24, 10), bool]) */;
  %1306 = @func_6699() /* ty=(Tensor[(72), float32],) */;
  %1307 = @func_3194() /* ty=Tensor[(72), float32] */;
  %1308 = %1302.3;
  %1309 = %1305.0;
  %1310 = %1306.0;
  (%1307, %1308, %1309, meta[relay.Constant][79] /* ty=Tensor[(240), float32] */, %1310)
}

def @func_18891() -> (Tensor[(4, 3, 6), float32], Tensor[(72), float32]) {
  %1311 = @func_8150() /* ty=(Tensor[(72), float32], Tensor[(4, 3, 6), float32], Tensor[(48), uint32], Tensor[(4, 3, 6), float32], Tensor[(72), float32], Tensor[(48), uint32]) */;
  %1312 = %1311.1;
  %1313 = @func_5611() /* ty=Tensor[(72), float32] */;
  (%1312, %1313)
}

def @func_7883() -> (Tensor[(864), float32],) {
  %1314 = @func_6432() /* ty=(Tensor[(72), float32], Tensor[(864), float32], Tensor[(180), float32], Tensor[(48), uint32]) */;
  %1315 = %1314.1;
  (%1315,)
}

def @func_10555() -> (Tensor[(72), float32], Tensor[(72), float32]) {
  %1316 = @func_4056() /* ty=Tensor[(72), float32] */;
  %1317 = @func_2739() /* ty=Tensor[(72), float32] */;
  (%1316, %1317)
}

def @func_7555(%var_7537: Tensor[(7, 9, 15), int8]) -> Tensor[(7, 9, 15), int8] {
  %1318 = cast(meta[relay.Constant][80] /* ty=Tensor[(7, 9, 15), int8] */, dtype="int8") /* ty=Tensor[(7, 9, 15), int8] */;
  %1319 = shape_of(%var_7537, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1320 = cast(%var_7537, dtype="int8") /* ty=Tensor[(7, 9, 15), int8] */;
  %1321 = dyn.reshape(%1318, %1319, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  add(%1320, %1321) /* ty=Tensor[(7, 9, 15), int8] */
}

def @func_11800() -> (Tensor[(72), float32], Tensor[(72), float32]) {
  %1322 = @func_11666() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(770, 1), float32], Tensor[(1274), int32]) */;
  %1323 = %1322.1;
  %1324 = @func_3194() /* ty=Tensor[(72), float32] */;
  (%1323, %1324)
}

def @func_6859() -> (Tensor[(48), uint32],) {
  %1325 = @func_4235() /* ty=(Tensor[(72), float32], Tensor[(48), uint32], Tensor[(48), uint32]) */;
  %1326 = %1325.1;
  (%1326,)
}

def @func_3151() -> (Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(240), float32]) {
  %1327 = cast(meta[relay.Constant][81] /* ty=Tensor[(80), float32] */, dtype="float32") /* ty=Tensor[(80), float32] */;
  %1328 = cast(meta[relay.Constant][82] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %1329 = reshape(%1327, newshape=[8, 10, 1]) /* ty=Tensor[(8, 10, 1), float32] */;
  %1330 = reshape(%1328, newshape=[8, 10, 3]) /* ty=Tensor[(8, 10, 3), float32] */;
  %1331 = @func_2525() /* ty=Tensor[(72), float32] */;
  %1332 = @func_1589(%1329, %1330) /* ty=Tensor[(8, 10, 3), float32] */;
  (%1331, %1332, meta[relay.Constant][81] /* ty=Tensor[(80), float32] */, meta[relay.Constant][82] /* ty=Tensor[(240), float32] */)
}

def @func_14976() -> (Tensor[(1274), int32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32]) {
  %1333 = @func_10604() /* ty=(Tensor[(48), uint32], Tensor[(72), float32], Tensor[(1274), int32]) */;
  %1334 = @func_8909() /* ty=(Tensor[(72), float32],) */;
  %1335 = @func_6781() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(1274), int32]) */;
  %1336 = @func_9130() /* ty=(Tensor[(72), float32],) */;
  %1337 = %1333.2;
  %1338 = %1334.0;
  %1339 = @func_5644() /* ty=Tensor[(72), float32] */;
  %1340 = %1335.0;
  %1341 = %1336.0;
  (%1337, %1338, %1339, %1340, %1341)
}

def @func_12725() -> Tensor[(72), float32] {
  %1342 = @func_6228() /* ty=(Tensor[(72), float32],) */;
  %1342.0
}

def @func_15281() -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32]) {
  %1343 = @func_11800() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %1344 = @func_13487() /* ty=(Tensor[(72), float32],) */;
  %1345 = @func_4665() /* ty=(Tensor[(4, 3, 6), float32], Tensor[(72), float32], Tensor[(180), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(80), float32], Tensor[(240), float32], Tensor[(72), float32]) */;
  %1346 = @func_13960() /* ty=Tensor[(72), float32] */;
  %1347 = %1343.1;
  %1348 = %1344.0;
  %1349 = %1345.7;
  (%1346, %1347, %1348, %1349)
}

def @func_14878(%var_14844: Tensor[(864), float32]) -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(240), float32], Tensor[(864), bool], Tensor[(1274), int32], Tensor[(72), float32], Tensor[(72), float32]) {
  %1350 = @func_5877() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %1351 = cast(meta[relay.Constant][83] /* ty=Tensor[(864), float32] */, dtype="float32") /* ty=Tensor[(864), float32] */;
  %1352 = reshape(%1351, newshape=[2, 432]) /* ty=Tensor[(2, 432), float32] */;
  %1353 = @func_6151(%1352) /* ty=(Tensor[(1274), int32], Tensor[(72), float32], Tensor[(1274), int32], Tensor[(4, 3, 6), float64], Tensor[(4, 3, 6), float32], Tensor[(770, 240), bool], Tensor[(240), float32], Tensor[(2, 432), float32], Tensor[(48), uint32]) */;
  %1354 = cast(%var_14844, dtype="bool") /* ty=Tensor[(864), bool] */;
  %1355 = shape_of(meta[relay.Constant][83] /* ty=Tensor[(864), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1356 = cast(meta[relay.Constant][83] /* ty=Tensor[(864), float32] */, dtype="bool") /* ty=Tensor[(864), bool] */;
  %1357 = dyn.reshape(%1354, %1355, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1358 = @func_8909() /* ty=(Tensor[(72), float32],) */;
  %1359 = @func_9003() /* ty=(Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(180, 1), float32]) */;
  %1360 = @func_12005() /* ty=Tensor[(72), float32] */;
  %1361 = %1350.0;
  %1362 = %1353.6;
  %1363 = greater(%1356, %1357) /* ty=Tensor[(864), bool] */;
  %1364 = @func_9584() /* ty=Tensor[(1274), int32] */;
  %1365 = %1358.0;
  %1366 = %1359.0;
  (%1360, %1361, %1362, %1363, %1364, %1365, %1366)
}

def @func_8390() -> (Tensor[(1274), int32], Tensor[(1274), int32], Tensor[(4, 3, 6), float32]) {
  %1367 = @func_3870() /* ty=(Tensor[(4, 3, 6), float32], Tensor[(1274), int32]) */;
  %1368 = @func_7371() /* ty=(Tensor[(1274), int32],) */;
  %1369 = @func_3870() /* ty=(Tensor[(4, 3, 6), float32], Tensor[(1274), int32]) */;
  %1370 = %1367.1;
  %1371 = %1368.0;
  %1372 = %1369.0;
  (%1370, %1371, %1372)
}

def @func_18398(%var_18320: Tensor[(864), float32], %var_18334: Tensor[(264), int32]) -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(432), uint32], Tensor[(240), float32], Tensor[(264), int32], Tensor[(264), int32], Tensor[(72), float32], Tensor[(20), int32], Tensor[(65, 4), int32], Tensor[(72), float32], Tensor[(48, 864), bool], Tensor[(72), float32], Tensor[(12, 6, 12), bool], Tensor[(72), float32]) {
  %1373 = @func_4005() /* ty=(Tensor[(72), float32], Tensor[(240), float32]) */;
  %1374 = cast(meta[relay.Constant][84] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %1375 = cast(%var_18320, dtype="float32") /* ty=Tensor[(864), float32] */;
  %1376 = cast(meta[relay.Constant][85] /* ty=Tensor[(48, 1), uint32] */, dtype="uint32") /* ty=Tensor[(48, 1), uint32] */;
  %1377 = reshape(%1374, newshape=[1, 240]) /* ty=Tensor[(1, 240), float32] */;
  %1378 = reshape(%1375, newshape=[864]) /* ty=Tensor[(864), float32] */;
  %1379 = reshape(%1376, newshape=[48]) /* ty=Tensor[(48), uint32] */;
  %1380 = @func_2669(%1377, %1378, %1379) /* ty=(Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(7, 14, 13), bool], Tensor[(1274), int32], Tensor[(80), float32], Tensor[(864), float32], Tensor[(4, 3, 6), bool], Tensor[(48), uint32], Tensor[(432), uint32], Tensor[(12, 240), float32], Tensor[(6, 3, 4), float64], Tensor[(10, 12, 13), float64], Tensor[(770, 240), bool]) */;
  %1381 = cast(%var_18334, dtype="int32") /* ty=Tensor[(264), int32] */;
  %1382 = reshape(%1381, newshape=[264]) /* ty=Tensor[(264), int32] */;
  %1383 = @func_15133(%1382) /* ty=(Tensor[(72), float32], Tensor[(864), float32], Tensor[(4, 60), float32], Tensor[(4, 6, 11), float64], Tensor[(264), int32], Tensor[(72), float32], Tensor[(13, 5, 3), float64], Tensor[(195), float64]) */;
  %1384 = cast(meta[relay.Constant][86] /* ty=Tensor[(20), int32] */, dtype="int32") /* ty=Tensor[(20), int32] */;
  %1385 = cast(meta[relay.Constant][87] /* ty=Tensor[(65, 4), int32] */, dtype="int32") /* ty=Tensor[(65, 4), int32] */;
  %1386 = reshape(%1384, newshape=[1, 5, 4]) /* ty=Tensor[(1, 5, 4), int32] */;
  %1387 = reshape(%1385, newshape=[13, 5, 4]) /* ty=Tensor[(13, 5, 4), int32] */;
  %1388 = @func_13704(%1386, %1387) /* ty=(Tensor[(13, 5, 4), int32], Tensor[(72), float32]) */;
  %1389 = @func_10555() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %1390 = cast(meta[relay.Constant][85] /* ty=Tensor[(48, 1), uint32] */, dtype="float32") /* ty=Tensor[(48, 1), float32] */;
  %1391 = sigmoid(%1390) /* ty=Tensor[(48, 1), float32] */;
  %1392 = cast(%1391, dtype="bool") /* ty=Tensor[(48, 1), bool] */;
  %1393 = cast(%var_18320, dtype="bool") /* ty=Tensor[(864), bool] */;
  %1394 = greater_equal(%1392, %1393) /* ty=Tensor[(48, 864), bool] */;
  %1395 = cast(%1394, dtype="float32") /* ty=Tensor[(48, 864), float32] */;
  %1396 = sinh(%1395) /* ty=Tensor[(48, 864), float32] */;
  %1397 = cast(%1396, dtype="int32") /* ty=Tensor[(48, 864), int32] */;
  %1398 = cast(%1391, dtype="int32") /* ty=Tensor[(48, 1), int32] */;
  %1399 = minimum(%1397, %1398) /* ty=Tensor[(48, 864), int32] */;
  %1400 = cast(%1396, dtype="uint8") /* ty=Tensor[(48, 864), uint8] */;
  %1401 = cast(%1391, dtype="uint8") /* ty=Tensor[(48, 1), uint8] */;
  %1402 = bitwise_xor(%1400, %1401) /* ty=Tensor[(48, 864), uint8] */;
  %1403 = cast(%1394, dtype="float32") /* ty=Tensor[(48, 864), float32] */;
  %1404 = shape_of(%1402, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1405 = cast(%1402, dtype="float32") /* ty=Tensor[(48, 864), float32] */;
  %1406 = dyn.reshape(%1403, %1404, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1407 = mod(%1405, %1406) /* ty=Tensor[(48, 864), float32] */;
  %1408 = cast(%1407, dtype="float32") /* ty=Tensor[(48, 864), float32] */;
  %1409 = shape_of(%1399, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1410 = cast(%1399, dtype="float32") /* ty=Tensor[(48, 864), float32] */;
  %1411 = dyn.reshape(%1408, %1409, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1412 = power(%1410, %1411) /* ty=Tensor[(48, 864), float32] */;
  %1413 = cast(%1412, dtype="float64") /* ty=Tensor[(48, 864), float64] */;
  %1414 = cosh(%1413) /* ty=Tensor[(48, 864), float64] */;
  %1415 = cast(%1402, dtype="bool") /* ty=Tensor[(48, 864), bool] */;
  %1416 = shape_of(%1414, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1417 = cast(%1414, dtype="bool") /* ty=Tensor[(48, 864), bool] */;
  %1418 = dyn.reshape(%1415, %1416, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1419 = @func_3117() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %1420 = cast(%var_18320, dtype="float32") /* ty=Tensor[(864), float32] */;
  %1421 = reshape(%1420, newshape=[12, 6, 12]) /* ty=Tensor[(12, 6, 12), float32] */;
  %1422 = @func_12725() /* ty=Tensor[(72), float32] */;
  %1423 = %1373.0;
  %1424 = %1380.9;
  %1425 = %1383.4;
  %1426 = %1388.1;
  %1427 = %1389.0;
  %1428 = less_equal(%1417, %1418) /* ty=Tensor[(48, 864), bool] */;
  %1429 = %1419.1;
  %1430 = @func_790(%1421) /* ty=Tensor[(12, 6, 12), bool] */;
  %1431 = @func_2525() /* ty=Tensor[(72), float32] */;
  (%1422, %1423, %1424, meta[relay.Constant][84] /* ty=Tensor[(240), float32] */, %1425, %var_18334, %1426, meta[relay.Constant][86] /* ty=Tensor[(20), int32] */, meta[relay.Constant][87] /* ty=Tensor[(65, 4), int32] */, %1427, %1428, %1429, %1430, %1431)
}

def @func_12698() -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32], Tensor[(4, 3, 6), float32], Tensor[(72), float32], Tensor[(72), float32]) {
  %1432 = @func_11364() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(770, 1), float32]) */;
  %1433 = @func_5507() /* ty=(Tensor[(72), float32], Tensor[(4, 3, 6), float32]) */;
  %1434 = @func_12035() /* ty=(Tensor[(80), float32], Tensor[(4, 3, 6), float32]) */;
  %1435 = @func_11511() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %1436 = @func_11441() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(180), float32], Tensor[(48), float32]) */;
  %1437 = %1432.1;
  %1438 = @func_4056() /* ty=Tensor[(72), float32] */;
  %1439 = %1433.1;
  %1440 = %1434.1;
  %1441 = %1435.0;
  %1442 = %1436.1;
  (%1437, %1438, %1439, %1440, %1441, %1442)
}

def @func_8449() -> Tensor[(72), float32] {
  %1443 = @func_5488() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %1443.1
}

def @func_5098() -> (Tensor[(72), float32], Tensor[(864), float32]) {
  %1444 = @func_2931() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %1445 = @func_4821() /* ty=(Tensor[(864), float32], Tensor[(48), uint32]) */;
  %1446 = %1444.1;
  %1447 = %1445.0;
  (%1446, %1447)
}

def @func_3854() -> (Tensor[(72), float64], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32]) {
  %1448 = @func_3769() /* ty=(Tensor[(72), float64],) */;
  %1449 = @func_3117() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %1450 = @func_2689() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %1451 = @func_2842() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %1452 = %1448.0;
  %1453 = %1449.0;
  %1454 = %1450.0;
  %1455 = %1451.1;
  (%1452, %1453, %1454, %1455)
}

def @func_10604() -> (Tensor[(48), uint32], Tensor[(72), float32], Tensor[(1274), int32]) {
  %1456 = @func_4732() /* ty=(Tensor[(48), uint32],) */;
  %1457 = @func_6228() /* ty=(Tensor[(72), float32],) */;
  %1458 = @func_3870() /* ty=(Tensor[(4, 3, 6), float32], Tensor[(1274), int32]) */;
  %1459 = %1456.0;
  %1460 = %1457.0;
  %1461 = %1458.1;
  (%1459, %1460, %1461)
}

def @func_11666() -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(770, 1), float32], Tensor[(1274), int32]) {
  %1462 = @func_11364() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(770, 1), float32]) */;
  %1463 = @func_11364() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(770, 1), float32]) */;
  %1464 = @func_5055() /* ty=(Tensor[(1274), int32], Tensor[(72), float32], Tensor[(72), float32]) */;
  %1465 = %1462.0;
  %1466 = @func_2525() /* ty=Tensor[(72), float32] */;
  %1467 = %1463.2;
  %1468 = %1464.0;
  (%1465, %1466, %1467, %1468)
}

def @func_11364() -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(770, 1), float32]) {
  %1469 = @func_2191() /* ty=(Tensor[(72), float32],) */;
  %1470 = @func_8741() /* ty=(Tensor[(72), float32],) */;
  %1471 = @func_9512() /* ty=(Tensor[(4, 3, 6), float32], Tensor[(240), float32], Tensor[(864), float32], Tensor[(770, 1), float32]) */;
  %1472 = %1469.0;
  %1473 = %1470.0;
  %1474 = %1471.3;
  (%1472, %1473, %1474)
}

def @func_3489(%var_3412: Tensor[(180), float32]) -> (Tensor[(72), float32], Tensor[(1274), int32], Tensor[(15, ?, 12), int16], Tensor[(72), float32], Tensor[(72), float32]) {
  %1475 = @func_2191() /* ty=(Tensor[(72), float32],) */;
  %1476 = @func_2351() /* ty=(Tensor[(72), float32], Tensor[(1274), int32], Tensor[(1274), int32], Tensor[(4, 3, 6), float32]) */;
  %1477 = cast(%var_3412, dtype="float32") /* ty=Tensor[(180), float32] */;
  %1478 = reshape(%1477, newshape=[15, 1, 12]) /* ty=Tensor[(15, 1, 12), float32] */;
  %1479 = @func_1378(%1478) /* ty=Tensor[(15, 1, 12), float32] */;
  %1480 = cast(%var_3412, dtype="int16") /* ty=Tensor[(180), int16] */;
  %1481 = shape_of(%1479, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1482 = cast(%1479, dtype="int16") /* ty=Tensor[(15, 1, 12), int16] */;
  %1483 = dyn.reshape(%1480, %1481, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1484 = @func_3117() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %1485 = %1475.0;
  %1486 = %1476.2;
  %1487 = left_shift(%1482, %1483) /* ty=Tensor[(15, ?, 12), int16] */;
  %1488 = @func_2978() /* ty=Tensor[(72), float32] */;
  %1489 = %1484.1;
  (%1485, %1486, %1487, %1488, %1489)
}

def @func_45(%var_19: Tensor[(7, 14, 13), int32], %var_20: Tensor[(7, 14, 13), int32]) -> (Tensor[(7, 14, 13), bool],) {
  %1490 = cast(%var_20, dtype="bool") /* ty=Tensor[(7, 14, 13), bool] */;
  %1491 = shape_of(%var_19, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1492 = cast(%var_19, dtype="bool") /* ty=Tensor[(7, 14, 13), bool] */;
  %1493 = dyn.reshape(%1490, %1491, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1494 = not_equal(%1492, %1493) /* ty=Tensor[(7, 14, 13), bool] */;
  (%1494,)
}

def @func_7507(%var_7505: Tensor[(240), float32]) -> (Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(240), float32]) {
  %1495 = @func_6294() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %1496 = cast(meta[relay.Constant][88] /* ty=Tensor[(80), float32] */, dtype="float32") /* ty=Tensor[(80), float32] */;
  %1497 = cast(%var_7505, dtype="float32") /* ty=Tensor[(240), float32] */;
  %1498 = reshape(%1496, newshape=[8, 10, 1]) /* ty=Tensor[(8, 10, 1), float32] */;
  %1499 = reshape(%1497, newshape=[8, 10, 3]) /* ty=Tensor[(8, 10, 3), float32] */;
  %1500 = %1495.1;
  %1501 = @func_1589(%1498, %1499) /* ty=Tensor[(8, 10, 3), float32] */;
  (%1500, %1501, meta[relay.Constant][88] /* ty=Tensor[(80), float32] */, %var_7505)
}

def @func_8741() -> (Tensor[(72), float32],) {
  %1502 = @func_8247() /* ty=(Tensor[(8, 5, 4), float64], Tensor[(72), float32]) */;
  %1503 = %1502.1;
  (%1503,)
}

def @func_8247() -> (Tensor[(8, 5, 4), float64], Tensor[(72), float32]) {
  %1504 = @func_3362() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(8, 5, 4), float64], Tensor[(160), float64]) */;
  %1505 = @func_4235() /* ty=(Tensor[(72), float32], Tensor[(48), uint32], Tensor[(48), uint32]) */;
  %1506 = %1504.2;
  %1507 = %1505.0;
  (%1506, %1507)
}

def @func_2739() -> Tensor[(72), float32] {
  @func_2525() /* ty=Tensor[(72), float32] */
}

def @func_11704() -> Tensor[(72), float32] {
  %1508 = @func_8741() /* ty=(Tensor[(72), float32],) */;
  %1508.0
}

def @func_18725(%var_18715: Tensor[(1008), float32]) -> (Tensor[(15, 8, 6), float32], Tensor[(48), uint32], Tensor[(4, 3, 6), float32], Tensor[(72), float32], Tensor[(1274), int32], Tensor[(240), float32], Tensor[(80), float32], Tensor[(864), float32], Tensor[(80), float32], Tensor[(1008), float32]) {
  %1509 = @func_6499() /* ty=(Tensor[(15, 8, 6), float32],) */;
  %1510 = @func_4235() /* ty=(Tensor[(72), float32], Tensor[(48), uint32], Tensor[(48), uint32]) */;
  %1511 = @func_18522() /* ty=(Tensor[(4, 3, 6), float32], Tensor[(4, 3, 9), bool]) */;
  %1512 = @func_9512() /* ty=(Tensor[(4, 3, 6), float32], Tensor[(240), float32], Tensor[(864), float32], Tensor[(770, 1), float32]) */;
  %1513 = %1512.1;
  %1514 = cast(%1513, dtype="float32") /* ty=Tensor[(240), float32] */;
  %1515 = cast(meta[relay.Constant][89] /* ty=Tensor[(864), float32] */, dtype="float32") /* ty=Tensor[(864), float32] */;
  %1516 = %1510.1;
  %1517 = cast(%1516, dtype="uint32") /* ty=Tensor[(48), uint32] */;
  %1518 = reshape(%1514, newshape=[1, 240]) /* ty=Tensor[(1, 240), float32] */;
  %1519 = reshape(%1515, newshape=[864]) /* ty=Tensor[(864), float32] */;
  %1520 = reshape(%1517, newshape=[48]) /* ty=Tensor[(48), uint32] */;
  %1521 = @func_2669(%1518, %1519, %1520) /* ty=(Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(7, 14, 13), bool], Tensor[(1274), int32], Tensor[(80), float32], Tensor[(864), float32], Tensor[(4, 3, 6), bool], Tensor[(48), uint32], Tensor[(432), uint32], Tensor[(12, 240), float32], Tensor[(6, 3, 4), float64], Tensor[(10, 12, 13), float64], Tensor[(770, 240), bool]) */;
  %1522 = cast(%var_18715, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %1523 = reshape(%1522, newshape=[252, 4]) /* ty=Tensor[(252, 4), float32] */;
  %1524 = @func_12984(%1523) /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(4, 3, 9), float32], Tensor[(252, 4), float32], Tensor[(48), uint32], Tensor[(80), float32]) */;
  %1525 = %1509.0;
  %1526 = %1511.0;
  %1527 = @func_8449() /* ty=Tensor[(72), float32] */;
  %1528 = @func_8867() /* ty=Tensor[(1274), int32] */;
  %1529 = %1521.2;
  %1530 = %1524.5;
  (%1525, %1516, %1526, %1527, %1528, %1513, %1529, meta[relay.Constant][89] /* ty=Tensor[(864), float32] */, %1530, %var_18715)
}

def @func_4501(%var_4465: Tensor[(4, 6, 11), int32], %var_4466: Tensor[(4, 6, 11), int32]) -> (Tensor[(4, 6, 11), int32], Tensor[(4, 6, 11), float64], Tensor[(1274), int32], Tensor[(72), float32]) {
  %1531 = cast(%var_4466, dtype="int32") /* ty=Tensor[(4, 6, 11), int32] */;
  %1532 = shape_of(%var_4465, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1533 = cast(%var_4465, dtype="int32") /* ty=Tensor[(4, 6, 11), int32] */;
  %1534 = dyn.reshape(%1531, %1532, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1535 = cast(%var_4466, dtype="float64") /* ty=Tensor[(4, 6, 11), float64] */;
  %1536 = @func_2881() /* ty=(Tensor[(72), float32], Tensor[(1274), int32]) */;
  %1537 = right_shift(%1533, %1534) /* ty=Tensor[(4, 6, 11), int32] */;
  %1538 = sigmoid(%1535) /* ty=Tensor[(4, 6, 11), float64] */;
  %1539 = %1536.1;
  %1540 = @func_2525() /* ty=Tensor[(72), float32] */;
  (%1537, %1538, %1539, %1540)
}

def @func_3529(%var_3520: Tensor[(4, 14, 8), float64]) -> (Tensor[(4, 14, 8), float64], Tensor[(72), float32]) {
  %1541 = cast(%var_3520, dtype="float64") /* ty=Tensor[(4, 14, 8), float64] */;
  %1542 = @func_3117() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %1543 = log(%1541) /* ty=Tensor[(4, 14, 8), float64] */;
  %1544 = %1542.0;
  (%1543, %1544)
}

def @func_3264(%var_3246: Tensor[(80), float32], %var_3247: Tensor[(240), float32]) -> (Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(240), float32]) {
  %1545 = @func_2191() /* ty=(Tensor[(72), float32],) */;
  %1546 = cast(%var_3246, dtype="float32") /* ty=Tensor[(80), float32] */;
  %1547 = cast(%var_3247, dtype="float32") /* ty=Tensor[(240), float32] */;
  %1548 = reshape(%1546, newshape=[8, 10, 1]) /* ty=Tensor[(8, 10, 1), float32] */;
  %1549 = reshape(%1547, newshape=[8, 10, 3]) /* ty=Tensor[(8, 10, 3), float32] */;
  %1550 = %1545.0;
  %1551 = @func_1589(%1548, %1549) /* ty=Tensor[(8, 10, 3), float32] */;
  (%1550, %1551, %var_3246, %var_3247)
}

def @func_4821() -> (Tensor[(864), float32], Tensor[(48), uint32]) {
  %1552 = @func_3574() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(24, 10), float32], Tensor[(864), float32], Tensor[(48), uint32], Tensor[(36, 12), uint32], Tensor[(6, 30), float32]) */;
  %1553 = @func_4235() /* ty=(Tensor[(72), float32], Tensor[(48), uint32], Tensor[(48), uint32]) */;
  %1554 = %1552.5;
  %1555 = %1553.1;
  (%1554, %1555)
}

def @func_3079(%var_3075: Tensor[(48), uint32]) -> (Tensor[(72), float32], Tensor[(9, 16, 3), uint32], Tensor[(48), uint32], Tensor[(432, 1), uint32]) {
  %1556 = @func_2842() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %1557 = cast(%var_3075, dtype="uint32") /* ty=Tensor[(48), uint32] */;
  %1558 = cast(meta[relay.Constant][90] /* ty=Tensor[(432, 1), uint32] */, dtype="uint32") /* ty=Tensor[(432, 1), uint32] */;
  %1559 = reshape(%1557, newshape=[1, 16, 3]) /* ty=Tensor[(1, 16, 3), uint32] */;
  %1560 = reshape(%1558, newshape=[9, 16, 3]) /* ty=Tensor[(9, 16, 3), uint32] */;
  %1561 = @func_852(%1559, %1560) /* ty=(Tensor[(9, 16, 3), uint32], Tensor[(4, 3, 6), bool]) */;
  %1562 = %1556.1;
  %1563 = %1561.0;
  (%1562, %1563, %var_3075, meta[relay.Constant][90] /* ty=Tensor[(432, 1), uint32] */)
}

def @func_2001(%var_1998: Tensor[(864), float32]) -> (Tensor[(6, 3, 4), float64], Tensor[(12, 6, 12), bool], Tensor[(864), float32]) {
  %1564 = cast(meta[relay.Constant][91] /* ty=Tensor[(6, 3, 4), float64] */, dtype="float64") /* ty=Tensor[(6, 3, 4), float64] */;
  %1565 = cast(%var_1998, dtype="float32") /* ty=Tensor[(864), float32] */;
  %1566 = reshape(%1565, newshape=[12, 6, 12]) /* ty=Tensor[(12, 6, 12), float32] */;
  %1567 = log(%1564) /* ty=Tensor[(6, 3, 4), float64] */;
  %1568 = @func_790(%1566) /* ty=Tensor[(12, 6, 12), bool] */;
  (%1567, %1568, %var_1998)
}

def @func_10013(%var_10009: Tensor[(770), float32]) -> (Tensor[(4, 3, 6), float32], Tensor[(7, 14, 13), float32], Tensor[(770), float32], Tensor[(240), float32]) {
  %1569 = @func_2948() /* ty=(Tensor[(4, 3, 6), float32],) */;
  %1570 = cast(%var_10009, dtype="float32") /* ty=Tensor[(770), float32] */;
  %1571 = %1569.0;
  %1572 = cast(%1571, dtype="float32") /* ty=Tensor[(4, 3, 6), float32] */;
  %1573 = reshape(%1570, newshape=[7, 10, 11]) /* ty=Tensor[(7, 10, 11), float32] */;
  %1574 = reshape(%1572, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %1575 = @func_714(%1573, %1574) /* ty=(Tensor[(7, 10, 11), float32], Tensor[(7, 14, 13), bool], Tensor[(91, 14), int32], Tensor[(7, 14, 13), bool], Tensor[(4, 3, 6), float32], Tensor[(72), float32], Tensor[(7, 14, 13), float32]) */;
  %1576 = @func_9643() /* ty=(Tensor[(240), float32], Tensor[(80), float32], Tensor[(80), float32]) */;
  %1577 = %1575.6;
  %1578 = %1576.0;
  (%1571, %1577, %var_10009, %1578)
}

def @func_6209() -> (Tensor[(72), float32], Tensor[(72), float32]) {
  %1579 = @func_2191() /* ty=(Tensor[(72), float32],) */;
  %1580 = @func_4005() /* ty=(Tensor[(72), float32], Tensor[(240), float32]) */;
  %1581 = %1579.0;
  %1582 = %1580.0;
  (%1581, %1582)
}

def @func_3769() -> (Tensor[(72), float64],) {
  %1583 = @func_2842() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %1584 = %1583.1;
  %1585 = cast(%1584, dtype="float64") /* ty=Tensor[(72), float64] */;
  %1586 = atanh(%1585) /* ty=Tensor[(72), float64] */;
  (%1586,)
}

def @func_1464(%var_1416: Tensor[(1, 16, 3), float32], %var_1459: Tensor[(180), float32]) -> (Tensor[(7, 14, 13), bool], Tensor[(1274), int32], Tensor[(4, 3, 6), bool], Tensor[(36, 12), uint32], Tensor[(4, 3, 6), float32], Tensor[(?, 16, 3), bool], Tensor[(12, 6, 12), bool], Tensor[(864), float32], Tensor[(15, 1, 12), float32], Tensor[(180), float32]) {
  %1587 = cast(meta[relay.Constant][92] /* ty=Tensor[(1274), int32] */, dtype="int32") /* ty=Tensor[(1274), int32] */;
  %1588 = cast(meta[relay.Constant][92] /* ty=Tensor[(1274), int32] */, dtype="int32") /* ty=Tensor[(1274), int32] */;
  %1589 = reshape(%1587, newshape=[7, 14, 13]) /* ty=Tensor[(7, 14, 13), int32] */;
  %1590 = reshape(%1588, newshape=[7, 14, 13]) /* ty=Tensor[(7, 14, 13), int32] */;
  %1591 = @func_45(%1589, %1590) /* ty=(Tensor[(7, 14, 13), bool],) */;
  %1592 = cast(%var_1416, dtype="uint32") /* ty=Tensor[(1, 16, 3), uint32] */;
  %1593 = cast(meta[relay.Constant][93] /* ty=Tensor[(36, 12), uint32] */, dtype="uint32") /* ty=Tensor[(36, 12), uint32] */;
  %1594 = reshape(%1592, newshape=[1, 16, 3]) /* ty=Tensor[(1, 16, 3), uint32] */;
  %1595 = reshape(%1593, newshape=[9, 16, 3]) /* ty=Tensor[(9, 16, 3), uint32] */;
  %1596 = @func_852(%1594, %1595) /* ty=(Tensor[(9, 16, 3), uint32], Tensor[(4, 3, 6), bool]) */;
  %1597 = %1596.1;
  %1598 = cast(%1597, dtype="float32") /* ty=Tensor[(4, 3, 6), float32] */;
  %1599 = reshape(%1598, newshape=[4, 3, 6]) /* ty=Tensor[(4, 3, 6), float32] */;
  %1600 = cast(%var_1416, dtype="float32") /* ty=Tensor[(1, 16, 3), float32] */;
  %1601 = sigmoid(%1600) /* ty=Tensor[(1, 16, 3), float32] */;
  %1602 = cast(%var_1416, dtype="bool") /* ty=Tensor[(1, 16, 3), bool] */;
  %1603 = shape_of(%1601, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1604 = cast(%1601, dtype="bool") /* ty=Tensor[(1, 16, 3), bool] */;
  %1605 = dyn.reshape(%1602, %1603, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1606 = cast(meta[relay.Constant][94] /* ty=Tensor[(864), float32] */, dtype="float32") /* ty=Tensor[(864), float32] */;
  %1607 = reshape(%1606, newshape=[12, 6, 12]) /* ty=Tensor[(12, 6, 12), float32] */;
  %1608 = cast(%var_1459, dtype="float32") /* ty=Tensor[(180), float32] */;
  %1609 = reshape(%1608, newshape=[15, 1, 12]) /* ty=Tensor[(15, 1, 12), float32] */;
  %1610 = %1591.0;
  %1611 = @func_579(%1599) /* ty=Tensor[(4, 3, 6), float32] */;
  %1612 = logical_or(%1604, %1605) /* ty=Tensor[(?, 16, 3), bool] */;
  %1613 = @func_790(%1607) /* ty=Tensor[(12, 6, 12), bool] */;
  %1614 = @func_1378(%1609) /* ty=Tensor[(15, 1, 12), float32] */;
  (%1610, meta[relay.Constant][92] /* ty=Tensor[(1274), int32] */, %1597, meta[relay.Constant][93] /* ty=Tensor[(36, 12), uint32] */, %1611, %1612, %1613, meta[relay.Constant][94] /* ty=Tensor[(864), float32] */, %1614, %var_1459)
}

def @func_3574() -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(24, 10), float32], Tensor[(864), float32], Tensor[(48), uint32], Tensor[(36, 12), uint32], Tensor[(6, 30), float32]) {
  %1615 = @func_2689() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %1616 = @func_3151() /* ty=(Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(240), float32]) */;
  %1617 = cast(meta[relay.Constant][95] /* ty=Tensor[(24, 10), float32] */, dtype="float32") /* ty=Tensor[(24, 10), float32] */;
  %1618 = cast(meta[relay.Constant][96] /* ty=Tensor[(864), float32] */, dtype="float32") /* ty=Tensor[(864), float32] */;
  %1619 = cast(meta[relay.Constant][97] /* ty=Tensor[(48), uint32] */, dtype="uint32") /* ty=Tensor[(48), uint32] */;
  %1620 = reshape(%1617, newshape=[1, 240]) /* ty=Tensor[(1, 240), float32] */;
  %1621 = reshape(%1618, newshape=[864]) /* ty=Tensor[(864), float32] */;
  %1622 = reshape(%1619, newshape=[48]) /* ty=Tensor[(48), uint32] */;
  %1623 = @func_2669(%1620, %1621, %1622) /* ty=(Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(7, 14, 13), bool], Tensor[(1274), int32], Tensor[(80), float32], Tensor[(864), float32], Tensor[(4, 3, 6), bool], Tensor[(48), uint32], Tensor[(432), uint32], Tensor[(12, 240), float32], Tensor[(6, 3, 4), float64], Tensor[(10, 12, 13), float64], Tensor[(770, 240), bool]) */;
  %1624 = cast(meta[relay.Constant][97] /* ty=Tensor[(48), uint32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
  %1625 = cast(meta[relay.Constant][98] /* ty=Tensor[(6, 30), float32] */, dtype="float32") /* ty=Tensor[(6, 30), float32] */;
  %1626 = reshape(%1624, newshape=[1, 16, 3]) /* ty=Tensor[(1, 16, 3), float32] */;
  %1627 = reshape(%1625, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %1628 = @func_1464(%1626, %1627) /* ty=(Tensor[(7, 14, 13), bool], Tensor[(1274), int32], Tensor[(4, 3, 6), bool], Tensor[(36, 12), uint32], Tensor[(4, 3, 6), float32], Tensor[(?, 16, 3), bool], Tensor[(12, 6, 12), bool], Tensor[(864), float32], Tensor[(15, 1, 12), float32], Tensor[(180), float32]) */;
  %1629 = %1615.1;
  %1630 = @func_2978() /* ty=Tensor[(72), float32] */;
  %1631 = %1616.0;
  %1632 = %1623.1;
  %1633 = %1628.3;
  (%1629, %1630, %1631, %1632, meta[relay.Constant][95] /* ty=Tensor[(24, 10), float32] */, meta[relay.Constant][96] /* ty=Tensor[(864), float32] */, meta[relay.Constant][97] /* ty=Tensor[(48), uint32] */, %1633, meta[relay.Constant][98] /* ty=Tensor[(6, 30), float32] */)
}

def @func_2881() -> (Tensor[(72), float32], Tensor[(1274), int32]) {
  %1634 = @func_2721() /* ty=(Tensor[(6, 13, 11), float64], Tensor[(72), float32]) */;
  %1635 = @func_2351() /* ty=(Tensor[(72), float32], Tensor[(1274), int32], Tensor[(1274), int32], Tensor[(4, 3, 6), float32]) */;
  %1636 = %1634.1;
  %1637 = %1635.1;
  (%1636, %1637)
}

def @func_14643() -> (Tensor[(72), float32], Tensor[(420), float32], Tensor[(80), float32]) {
  %1638 = @func_4064() /* ty=(Tensor[(72), float32],) */;
  %1639 = @func_7664() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(420), float32], Tensor[(420), float32]) */;
  %1640 = %1638.0;
  %1641 = %1639.3;
  %1642 = @func_10978() /* ty=Tensor[(80), float32] */;
  (%1640, %1641, %1642)
}

def @func_5271() -> (Tensor[(72), float32],) {
  %1643 = @func_3117() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %1644 = %1643.0;
  (%1644,)
}

def @func_18838() -> (Tensor[(864), float32], Tensor[(72), float32]) {
  %1645 = @func_5098() /* ty=(Tensor[(72), float32], Tensor[(864), float32]) */;
  %1646 = @func_4235() /* ty=(Tensor[(72), float32], Tensor[(48), uint32], Tensor[(48), uint32]) */;
  %1647 = %1645.1;
  %1648 = %1646.0;
  (%1647, %1648)
}

def @func_2842() -> (Tensor[(72), float32], Tensor[(72), float32]) {
  %1649 = @func_2191() /* ty=(Tensor[(72), float32],) */;
  %1650 = @func_2739() /* ty=Tensor[(72), float32] */;
  %1651 = %1649.0;
  (%1650, %1651)
}

def @func_9791() -> (Tensor[(72), float32], Tensor[(1274), int32]) {
  %1652 = @func_7371() /* ty=(Tensor[(1274), int32],) */;
  %1653 = @func_4933() /* ty=Tensor[(72), float32] */;
  %1654 = %1652.0;
  (%1653, %1654)
}

def @func_8171(%var_8166: Tensor[(15, 15, 4), float32]) -> Tensor[(15, 15, 4), float32] {
  %1655 = cast(%var_8166, dtype="float32") /* ty=Tensor[(15, 15, 4), float32] */;
  cos(%1655) /* ty=Tensor[(15, 15, 4), float32] */
}

def @func_9760(%var_9741: Tensor[(1008), float32], %var_9758: Tensor[(48), uint32]) -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(80, 2), float64], Tensor[(1008), float32], Tensor[(160), float64], Tensor[(72), float32], Tensor[(432, 1), uint32], Tensor[(48), uint32]) {
  %1656 = @func_7021() /* ty=(Tensor[(72), float32],) */;
  %1657 = @func_8909() /* ty=(Tensor[(72), float32],) */;
  %1658 = cast(%var_9741, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %1659 = cast(meta[relay.Constant][99] /* ty=Tensor[(160), float64] */, dtype="float64") /* ty=Tensor[(160), float64] */;
  %1660 = reshape(%1658, newshape=[16, 9, 7]) /* ty=Tensor[(16, 9, 7), float32] */;
  %1661 = reshape(%1659, newshape=[80, 2]) /* ty=Tensor[(80, 2), float64] */;
  %1662 = @func_6890(%1660, %1661) /* ty=(Tensor[(16, 9, 7), float32], Tensor[(8, 5, 4), float64], Tensor[(80, 2), float64]) */;
  %1663 = @func_2842() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %1664 = cast(%var_9758, dtype="uint32") /* ty=Tensor[(48), uint32] */;
  %1665 = reshape(%1664, newshape=[48]) /* ty=Tensor[(48), uint32] */;
  %1666 = @func_3079(%1665) /* ty=(Tensor[(72), float32], Tensor[(9, 16, 3), uint32], Tensor[(48), uint32], Tensor[(432, 1), uint32]) */;
  %1667 = %1656.0;
  %1668 = %1657.0;
  %1669 = %1662.2;
  %1670 = %1663.1;
  %1671 = %1666.3;
  (%1667, %1668, %1669, %var_9741, meta[relay.Constant][99] /* ty=Tensor[(160), float64] */, %1670, %1671, %var_9758)
}

def @func_5715() -> Tensor[(72), float32] {
  %1672 = @func_3117() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %1672.1
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_5057() -> (Tensor[(1274), int32], Tensor[(72), float32], Tensor[(72), float32]) {
  @func_5055() /* ty=(Tensor[(1274), int32], Tensor[(72), float32], Tensor[(72), float32]) */
}

def @func_7404() -> Tensor[(80), float32] {
  @func_7402() /* ty=Tensor[(80), float32] */
}

def @func_4667() -> (Tensor[(4, 3, 6), float32], Tensor[(72), float32], Tensor[(180), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(80), float32], Tensor[(240), float32], Tensor[(72), float32]) {
  @func_4665() /* ty=(Tensor[(4, 3, 6), float32], Tensor[(72), float32], Tensor[(180), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(80), float32], Tensor[(240), float32], Tensor[(72), float32]) */
}

def @func_12699() -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32], Tensor[(4, 3, 6), float32], Tensor[(72), float32], Tensor[(72), float32]) {
  %11 = fn () -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32], Tensor[(4, 3, 6), float32], Tensor[(72), float32], Tensor[(72), float32]) {
    %0 = @func_11364() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(770, 1), float32]) */;
    %1 = @func_5507() /* ty=(Tensor[(72), float32], Tensor[(4, 3, 6), float32]) */;
    %2 = @func_12035() /* ty=(Tensor[(80), float32], Tensor[(4, 3, 6), float32]) */;
    %3 = @func_11511() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
    %4 = @func_11441() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(180), float32], Tensor[(48), float32]) */;
    %5 = %0.1;
    %6 = @func_4056() /* ty=Tensor[(72), float32] */;
    %7 = %1.1;
    %8 = %2.1;
    %9 = %3.0;
    %10 = %4.1;
    (%5, %6, %7, %8, %9, %10)
  };
  %11() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32], Tensor[(4, 3, 6), float32], Tensor[(72), float32], Tensor[(72), float32]) */
}

def @func_4237() -> (Tensor[(72), float32], Tensor[(48), uint32], Tensor[(48), uint32]) {
  @func_4235() /* ty=(Tensor[(72), float32], Tensor[(48), uint32], Tensor[(48), uint32]) */
}

def @func_8857() -> (Tensor[(8, 5, 4), float64], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32]) {
  %12 = @func_6486() /* ty=(Tensor[(80), float32], Tensor[(8, 5, 4), float64], Tensor[(160), float64], Tensor[(72), float32], Tensor[(72), float32]) */;
  %13 = @func_2721() /* ty=(Tensor[(6, 13, 11), float64], Tensor[(72), float32]) */;
  %14 = @func_8150() /* ty=(Tensor[(72), float32], Tensor[(4, 3, 6), float32], Tensor[(48), uint32], Tensor[(4, 3, 6), float32], Tensor[(72), float32], Tensor[(48), uint32]) */;
  %15 = @func_6486() /* ty=(Tensor[(80), float32], Tensor[(8, 5, 4), float64], Tensor[(160), float64], Tensor[(72), float32], Tensor[(72), float32]) */;
  %16 = %12.1;
  %17 = %13.1;
  %18 = %14.4;
  %19 = %15.3;
  (%16, %17, %18, %19)
}

def @func_16171() -> (Tensor[(80), float32], Tensor[(15, 15, 4), float32], Tensor[(900), float32]) {
  @func_16169() /* ty=(Tensor[(80), float32], Tensor[(15, 15, 4), float32], Tensor[(900), float32]) */
}

def @func_9791() -> (Tensor[(72), float32], Tensor[(1274), int32]) {
  %20 = @func_7371() /* ty=(Tensor[(1274), int32],) */;
  %21 = @func_4933() /* ty=Tensor[(72), float32] */;
  %22 = %20.0;
  (%21, %22)
}

def @func_11364() -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(770, 1), float32]) {
  %23 = @func_2191() /* ty=(Tensor[(72), float32],) */;
  %24 = @func_8741() /* ty=(Tensor[(72), float32],) */;
  %25 = @func_9512() /* ty=(Tensor[(4, 3, 6), float32], Tensor[(240), float32], Tensor[(864), float32], Tensor[(770, 1), float32]) */;
  %26 = %23.0;
  %27 = %24.0;
  %28 = %25.3;
  (%26, %27, %28)
}

def @func_11725() -> Tensor[(72), float32] {
  @func_11723() /* ty=Tensor[(72), float32] */
}

def @func_11848() -> (Tensor[(72), float32],) {
  %29 = @func_10125() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32]) */;
  %30 = %29.0;
  (%30,)
}

def @func_12746() -> (Tensor[(72), float32], Tensor[(72), float32]) {
  %35 = fn () -> (Tensor[(72), float32], Tensor[(72), float32]) {
    %31 = @func_3362() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(8, 5, 4), float64], Tensor[(160), float64]) */;
    %32 = @func_12698() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32], Tensor[(4, 3, 6), float32], Tensor[(72), float32], Tensor[(72), float32]) */;
    %33 = %31.0;
    %34 = %32.4;
    (%33, %34)
  };
  %35() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */
}

def @func_14790() -> (Tensor[(72), float32], Tensor[(72), float32]) {
  %40 = fn () -> (Tensor[(72), float32], Tensor[(72), float32]) {
    %36 = @func_3854() /* ty=(Tensor[(72), float64], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32]) */;
    %37 = @func_10555() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
    %38 = %36.3;
    %39 = %37.0;
    (%38, %39)
  };
  %40() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */
}

def @func_17494(%var_17489: Tensor[(11, 9, 7), int64], %var_17490: Tensor[(11, 9, 7), int64]) -> (Tensor[(11, 9, 7), int64],) {
  %41 = cast(%var_17490, dtype="int64") /* ty=Tensor[(11, 9, 7), int64] */;
  %42 = shape_of(%var_17489, dtype="int32") /* ty=Tensor[(3), int32] */;
  %43 = cast(%var_17489, dtype="int64") /* ty=Tensor[(11, 9, 7), int64] */;
  %44 = dyn.reshape(%41, %42, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %45 = subtract(%43, %44) /* ty=Tensor[(11, 9, 7), int64] */;
  (%45,)
}

def @func_6211() -> (Tensor[(72), float32], Tensor[(72), float32]) {
  @func_6209() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */
}

def @func_13105() -> (Tensor[(864), float32], Tensor[(72), float32], Tensor[(14, 5, 12), bool], Tensor[(840), float32], Tensor[(72), float32], Tensor[(72), float32]) {
  %46 = @func_5098() /* ty=(Tensor[(72), float32], Tensor[(864), float32]) */;
  %47 = cast(meta[relay.Constant][0] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
  %48 = reshape(%47, newshape=[14, 5, 12]) /* ty=Tensor[(14, 5, 12), float32] */;
  %49 = @func_10830(%48) /* ty=(Tensor[(14, 5, 12), bool],) */;
  %50 = %46.1;
  %51 = @func_3133() /* ty=Tensor[(72), float32] */;
  %52 = %49.0;
  %53 = @func_8369() /* ty=Tensor[(72), float32] */;
  %54 = @func_7128() /* ty=Tensor[(72), float32] */;
  (%50, %51, %52, meta[relay.Constant][0] /* ty=Tensor[(840), float32] */, %53, %54)
}

def @func_10078() -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32]) {
  %55 = @func_3614() /* ty=(Tensor[(72), float32], Tensor[(1274), int32]) */;
  %56 = @func_3870() /* ty=(Tensor[(4, 3, 6), float32], Tensor[(1274), int32]) */;
  %57 = @func_5175() /* ty=Tensor[(72), float32] */;
  %58 = %55.0;
  %59 = %56.0;
  (%57, %58, %59)
}

def @func_5775() -> (Tensor[(240), float32], Tensor[(48), uint32], Tensor[(72), float32]) {
  @func_5773() /* ty=(Tensor[(240), float32], Tensor[(48), uint32], Tensor[(72), float32]) */
}

def @func_11587() -> (Tensor[(4, 3, 6), float32],) {
  @func_11585() /* ty=(Tensor[(4, 3, 6), float32],) */
}

def @func_10015(%var_10014: Tensor[(770), float32]) -> (Tensor[(4, 3, 6), float32], Tensor[(7, 14, 13), float32], Tensor[(770), float32], Tensor[(240), float32]) {
  %70 = fn (%var_10009: Tensor[(770), float32]) -> (Tensor[(4, 3, 6), float32], Tensor[(7, 14, 13), float32], Tensor[(770), float32], Tensor[(240), float32]) {
    %60 = @func_2948() /* ty=(Tensor[(4, 3, 6), float32],) */;
    %61 = cast(%var_10009, dtype="float32") /* ty=Tensor[(770), float32] */;
    %62 = %60.0;
    %63 = cast(%62, dtype="float32") /* ty=Tensor[(4, 3, 6), float32] */;
    %64 = reshape(%61, newshape=[7, 10, 11]) /* ty=Tensor[(7, 10, 11), float32] */;
    %65 = reshape(%63, newshape=[72]) /* ty=Tensor[(72), float32] */;
    %66 = @func_714(%64, %65) /* ty=(Tensor[(7, 10, 11), float32], Tensor[(7, 14, 13), bool], Tensor[(91, 14), int32], Tensor[(7, 14, 13), bool], Tensor[(4, 3, 6), float32], Tensor[(72), float32], Tensor[(7, 14, 13), float32]) */;
    %67 = @func_9643() /* ty=(Tensor[(240), float32], Tensor[(80), float32], Tensor[(80), float32]) */;
    %68 = %66.6;
    %69 = %67.0;
    (%62, %68, %var_10009, %69)
  };
  %70(%var_10014) /* ty=(Tensor[(4, 3, 6), float32], Tensor[(7, 14, 13), float32], Tensor[(770), float32], Tensor[(240), float32]) */
}

def @func_13929(%var_13928: Tensor[(195), float64]) -> (Tensor[(72), float64], Tensor[(1274), int32], Tensor[(1, 1274), int32], Tensor[(8, 10, 3), float32], Tensor[(195), float64], Tensor[(72), float32]) {
  %82 = fn (%var_13890: Tensor[(195), float64]) -> (Tensor[(72), float64], Tensor[(1274), int32], Tensor[(1, 1274), int32], Tensor[(8, 10, 3), float32], Tensor[(195), float64], Tensor[(72), float32]) {
    %71 = @func_3769() /* ty=(Tensor[(72), float64],) */;
    %72 = cast(meta[relay.Constant][1] /* ty=Tensor[(1, 1274), int32] */, dtype="int32") /* ty=Tensor[(1, 1274), int32] */;
    %73 = reshape(%72, newshape=[1274]) /* ty=Tensor[(1274), int32] */;
    %74 = @func_1912(%73) /* ty=(Tensor[(10, 12, 13), float64], Tensor[(4, 3, 6), float32], Tensor[(36, 2), float32], Tensor[(7, 14, 13), bool], Tensor[(1274), int32]) */;
    %75 = cast(%var_13890, dtype="float64") /* ty=Tensor[(195), float64] */;
    %76 = reshape(%75, newshape=[195]) /* ty=Tensor[(195), float64] */;
    %77 = @func_7838(%76) /* ty=(Tensor[(8, 10, 3), float32], Tensor[(72), float32], Tensor[(13, 5, 3), float64], Tensor[(195), float64]) */;
    %78 = %71.0;
    %79 = %74.4;
    %80 = %77.0;
    %81 = @func_13861() /* ty=Tensor[(72), float32] */;
    (%78, %79, meta[relay.Constant][1] /* ty=Tensor[(1, 1274), int32] */, %80, %var_13890, %81)
  };
  %82(%var_13928) /* ty=(Tensor[(72), float64], Tensor[(1274), int32], Tensor[(1, 1274), int32], Tensor[(8, 10, 3), float32], Tensor[(195), float64], Tensor[(72), float32]) */
}

def @func_15024() -> (Tensor[(864), float32], Tensor[(4, 3, 6), uint8], Tensor[(72), float32]) {
  @func_15022() /* ty=(Tensor[(864), float32], Tensor[(4, 3, 6), uint8], Tensor[(72), float32]) */
}

def @func_16389() -> (Tensor[(72), float32],) {
  @func_16387() /* ty=(Tensor[(72), float32],) */
}

def @func_18874() -> (Tensor[(72), float32],) {
  %83 = @func_15980() /* ty=(Tensor[(72), float32],) */;
  %84 = %83.0;
  (%84,)
}

def @func_10685() -> (Tensor[(72), float32],) {
  %87 = fn () -> (Tensor[(72), float32],) {
    %85 = @func_2881() /* ty=(Tensor[(72), float32], Tensor[(1274), int32]) */;
    %86 = %85.0;
    (%86,)
  };
  %87() /* ty=(Tensor[(72), float32],) */
}

def @func_5406() -> Tensor[(72), float32] {
  %89 = fn () -> Tensor[(72), float32] {
    %88 = @func_5271() /* ty=(Tensor[(72), float32],) */;
    %88.0
  };
  %89() /* ty=Tensor[(72), float32] */
}

def @func_3531(%var_3530: Tensor[(4, 14, 8), float64]) -> (Tensor[(4, 14, 8), float64], Tensor[(72), float32]) {
  %94 = fn (%var_3520: Tensor[(4, 14, 8), float64]) -> (Tensor[(4, 14, 8), float64], Tensor[(72), float32]) {
    %90 = cast(%var_3520, dtype="float64") /* ty=Tensor[(4, 14, 8), float64] */;
    %91 = @func_3117() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
    %92 = log(%90) /* ty=Tensor[(4, 14, 8), float64] */;
    %93 = %91.0;
    (%92, %93)
  };
  %94(%var_3530) /* ty=(Tensor[(4, 14, 8), float64], Tensor[(72), float32]) */
}

def @func_12986(%var_12985: Tensor[(252, 4), float32]) -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(4, 3, 9), float32], Tensor[(252, 4), float32], Tensor[(48), uint32], Tensor[(80), float32]) {
  %106 = fn (%var_12975: Tensor[(252, 4), float32]) -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(4, 3, 9), float32], Tensor[(252, 4), float32], Tensor[(48), uint32], Tensor[(80), float32]) {
    %95 = @func_9003() /* ty=(Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(180, 1), float32]) */;
    %96 = @func_3362() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(8, 5, 4), float64], Tensor[(160), float64]) */;
    %97 = cast(%var_12975, dtype="float32") /* ty=Tensor[(252, 4), float32] */;
    %98 = cast(meta[relay.Constant][2] /* ty=Tensor[(48), uint32] */, dtype="uint32") /* ty=Tensor[(48), uint32] */;
    %99 = reshape(%97, newshape=[1008]) /* ty=Tensor[(1008), float32] */;
    %100 = reshape(%98, newshape=[48]) /* ty=Tensor[(48), uint32] */;
    %101 = @func_11215(%99, %100) /* ty=(Tensor[(4, 3, 9), float32], Tensor[(72), float32], Tensor[(1008), float32], Tensor[(48), uint32], Tensor[(72), float32], Tensor[(4, 3, 6), bool]) */;
    %102 = %95.0;
    %103 = %96.1;
    %104 = %101.0;
    %105 = @func_10978() /* ty=Tensor[(80), float32] */;
    (%102, %103, %104, %var_12975, meta[relay.Constant][2] /* ty=Tensor[(48), uint32] */, %105)
  };
  %106(%var_12985) /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(4, 3, 9), float32], Tensor[(252, 4), float32], Tensor[(48), uint32], Tensor[(80), float32]) */
}

def @func_792(%var_791: Tensor[(12, 6, 12), float32]) -> Tensor[(12, 6, 12), bool] {
  %111 = fn (%var_781: Tensor[(12, 6, 12), float32]) -> Tensor[(12, 6, 12), bool] {
    %107 = cast(%var_781, dtype="bool") /* ty=Tensor[(12, 6, 12), bool] */;
    %108 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(12, 6, 12), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %109 = cast(meta[relay.Constant][3] /* ty=Tensor[(12, 6, 12), float32] */, dtype="bool") /* ty=Tensor[(12, 6, 12), bool] */;
    %110 = dyn.reshape(%107, %108, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    equal(%109, %110) /* ty=Tensor[(12, 6, 12), bool] */
  };
  %111(%var_791) /* ty=Tensor[(12, 6, 12), bool] */
}

def @func_7425() -> (Tensor[(4, 3, 6), float32], Tensor[(180), float32], Tensor[(2, 24), float32]) {
  @func_7423() /* ty=(Tensor[(4, 3, 6), float32], Tensor[(180), float32], Tensor[(2, 24), float32]) */
}

def @func_16604() -> (Tensor[(72), float32],) {
  %112 = @func_3194() /* ty=Tensor[(72), float32] */;
  (%112,)
}

def @func_4798(%var_4796: Tensor[(24, 10), float32]) -> (Tensor[(4, 3, 6), float32], Tensor[(24, 10), bool], Tensor[(24, 10), bool]) {
  @func_4795(%var_4796) /* ty=(Tensor[(4, 3, 6), float32], Tensor[(24, 10), bool], Tensor[(24, 10), bool]) */
}

def @func_6488() -> (Tensor[(80), float32], Tensor[(8, 5, 4), float64], Tensor[(160), float64], Tensor[(72), float32], Tensor[(72), float32]) {
  @func_6486() /* ty=(Tensor[(80), float32], Tensor[(8, 5, 4), float64], Tensor[(160), float64], Tensor[(72), float32], Tensor[(72), float32]) */
}

def @func_11667() -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(770, 1), float32], Tensor[(1274), int32]) {
  %120 = fn () -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(770, 1), float32], Tensor[(1274), int32]) {
    %113 = @func_11364() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(770, 1), float32]) */;
    %114 = @func_11364() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(770, 1), float32]) */;
    %115 = @func_5055() /* ty=(Tensor[(1274), int32], Tensor[(72), float32], Tensor[(72), float32]) */;
    %116 = %113.0;
    %117 = @func_2525() /* ty=Tensor[(72), float32] */;
    %118 = %114.2;
    %119 = %115.0;
    (%116, %117, %118, %119)
  };
  %120() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(770, 1), float32], Tensor[(1274), int32]) */
}

def @func_6782() -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(1274), int32]) {
  %127 = fn () -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(1274), int32]) {
    %121 = @func_5098() /* ty=(Tensor[(72), float32], Tensor[(864), float32]) */;
    %122 = @func_5055() /* ty=(Tensor[(1274), int32], Tensor[(72), float32], Tensor[(72), float32]) */;
    %123 = @func_5241() /* ty=(Tensor[(1274), int32], Tensor[(72), float32]) */;
    %124 = %121.0;
    %125 = %122.1;
    %126 = %123.0;
    (%124, %125, %126)
  };
  %127() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(1274), int32]) */
}

def @func_3770() -> (Tensor[(72), float64],) {
  %132 = fn () -> (Tensor[(72), float64],) {
    %128 = @func_2842() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
    %129 = %128.1;
    %130 = cast(%129, dtype="float64") /* ty=Tensor[(72), float64] */;
    %131 = atanh(%130) /* ty=Tensor[(72), float64] */;
    (%131,)
  };
  %132() /* ty=(Tensor[(72), float64],) */
}

def @func_7555(%var_7537: Tensor[(7, 9, 15), int8]) -> Tensor[(7, 9, 15), int8] {
  %133 = cast(meta[relay.Constant][4] /* ty=Tensor[(7, 9, 15), int8] */, dtype="int8") /* ty=Tensor[(7, 9, 15), int8] */;
  %134 = shape_of(%var_7537, dtype="int32") /* ty=Tensor[(3), int32] */;
  %135 = cast(%var_7537, dtype="int8") /* ty=Tensor[(7, 9, 15), int8] */;
  %136 = dyn.reshape(%133, %134, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  add(%135, %136) /* ty=Tensor[(7, 9, 15), int8] */
}

def @func_1464(%var_1416: Tensor[(1, 16, 3), float32], %var_1459: Tensor[(180), float32]) -> (Tensor[(7, 14, 13), bool], Tensor[(1274), int32], Tensor[(4, 3, 6), bool], Tensor[(36, 12), uint32], Tensor[(4, 3, 6), float32], Tensor[(?, 16, 3), bool], Tensor[(12, 6, 12), bool], Tensor[(864), float32], Tensor[(15, 1, 12), float32], Tensor[(180), float32]) {
  %137 = cast(meta[relay.Constant][5] /* ty=Tensor[(1274), int32] */, dtype="int32") /* ty=Tensor[(1274), int32] */;
  %138 = cast(meta[relay.Constant][5] /* ty=Tensor[(1274), int32] */, dtype="int32") /* ty=Tensor[(1274), int32] */;
  %139 = reshape(%137, newshape=[7, 14, 13]) /* ty=Tensor[(7, 14, 13), int32] */;
  %140 = reshape(%138, newshape=[7, 14, 13]) /* ty=Tensor[(7, 14, 13), int32] */;
  %141 = @func_45(%139, %140) /* ty=(Tensor[(7, 14, 13), bool],) */;
  %142 = cast(%var_1416, dtype="uint32") /* ty=Tensor[(1, 16, 3), uint32] */;
  %143 = cast(meta[relay.Constant][6] /* ty=Tensor[(36, 12), uint32] */, dtype="uint32") /* ty=Tensor[(36, 12), uint32] */;
  %144 = reshape(%142, newshape=[1, 16, 3]) /* ty=Tensor[(1, 16, 3), uint32] */;
  %145 = reshape(%143, newshape=[9, 16, 3]) /* ty=Tensor[(9, 16, 3), uint32] */;
  %146 = @func_852(%144, %145) /* ty=(Tensor[(9, 16, 3), uint32], Tensor[(4, 3, 6), bool]) */;
  %147 = %146.1;
  %148 = cast(%147, dtype="float32") /* ty=Tensor[(4, 3, 6), float32] */;
  %149 = reshape(%148, newshape=[4, 3, 6]) /* ty=Tensor[(4, 3, 6), float32] */;
  %150 = cast(%var_1416, dtype="float32") /* ty=Tensor[(1, 16, 3), float32] */;
  %151 = sigmoid(%150) /* ty=Tensor[(1, 16, 3), float32] */;
  %152 = cast(%var_1416, dtype="bool") /* ty=Tensor[(1, 16, 3), bool] */;
  %153 = shape_of(%151, dtype="int32") /* ty=Tensor[(3), int32] */;
  %154 = cast(%151, dtype="bool") /* ty=Tensor[(1, 16, 3), bool] */;
  %155 = dyn.reshape(%152, %153, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %156 = cast(meta[relay.Constant][7] /* ty=Tensor[(864), float32] */, dtype="float32") /* ty=Tensor[(864), float32] */;
  %157 = reshape(%156, newshape=[12, 6, 12]) /* ty=Tensor[(12, 6, 12), float32] */;
  %158 = cast(%var_1459, dtype="float32") /* ty=Tensor[(180), float32] */;
  %159 = reshape(%158, newshape=[15, 1, 12]) /* ty=Tensor[(15, 1, 12), float32] */;
  %160 = %141.0;
  %161 = @func_579(%149) /* ty=Tensor[(4, 3, 6), float32] */;
  %162 = logical_or(%154, %155) /* ty=Tensor[(?, 16, 3), bool] */;
  %163 = @func_790(%157) /* ty=Tensor[(12, 6, 12), bool] */;
  %164 = @func_1378(%159) /* ty=Tensor[(15, 1, 12), float32] */;
  (%160, meta[relay.Constant][5] /* ty=Tensor[(1274), int32] */, %147, meta[relay.Constant][6] /* ty=Tensor[(36, 12), uint32] */, %161, %162, %163, meta[relay.Constant][7] /* ty=Tensor[(864), float32] */, %164, %var_1459)
}

def @func_17383() -> (Tensor[(72), float32],) {
  @func_17381() /* ty=(Tensor[(72), float32],) */
}

def @func_4935() -> Tensor[(72), float32] {
  @func_4933() /* ty=Tensor[(72), float32] */
}

def @func_6230() -> (Tensor[(72), float32],) {
  @func_6228() /* ty=(Tensor[(72), float32],) */
}

def @func_8390() -> (Tensor[(1274), int32], Tensor[(1274), int32], Tensor[(4, 3, 6), float32]) {
  %165 = @func_3870() /* ty=(Tensor[(4, 3, 6), float32], Tensor[(1274), int32]) */;
  %166 = @func_7371() /* ty=(Tensor[(1274), int32],) */;
  %167 = @func_3870() /* ty=(Tensor[(4, 3, 6), float32], Tensor[(1274), int32]) */;
  %168 = %165.1;
  %169 = %166.0;
  %170 = %167.0;
  (%168, %169, %170)
}

def @func_7987(%var_7985: bool, %var_7986: Tensor[(4, 11, 10), bool]) -> Tensor[(4, 11, 10), bool] {
  @func_7983(%var_7985, %var_7986) /* ty=Tensor[(4, 11, 10), bool] */
}

def @func_15430() -> Tensor[(48), uint32] {
  %172 = fn () -> Tensor[(48), uint32] {
    %171 = @func_6432() /* ty=(Tensor[(72), float32], Tensor[(864), float32], Tensor[(180), float32], Tensor[(48), uint32]) */;
    %171.3
  };
  %172() /* ty=Tensor[(48), uint32] */
}

def @func_5462(%var_5445: Tensor[(12, 1, 8), float32], %var_5458: Tensor[(80), float32]) -> (Tensor[(12, ?, 8), bool], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(240), float32]) {
  %173 = cast(%var_5445, dtype="float32") /* ty=Tensor[(12, 1, 8), float32] */;
  %174 = atan(%173) /* ty=Tensor[(12, 1, 8), float32] */;
  %175 = cast(%var_5445, dtype="bool") /* ty=Tensor[(12, 1, 8), bool] */;
  %176 = shape_of(%174, dtype="int32") /* ty=Tensor[(3), int32] */;
  %177 = cast(%174, dtype="bool") /* ty=Tensor[(12, 1, 8), bool] */;
  %178 = dyn.reshape(%175, %176, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %179 = cast(%var_5458, dtype="float32") /* ty=Tensor[(80), float32] */;
  %180 = cast(meta[relay.Constant][8] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %181 = reshape(%179, newshape=[8, 10, 1]) /* ty=Tensor[(8, 10, 1), float32] */;
  %182 = reshape(%180, newshape=[8, 10, 3]) /* ty=Tensor[(8, 10, 3), float32] */;
  %183 = logical_and(%177, %178) /* ty=Tensor[(12, ?, 8), bool] */;
  %184 = @func_1589(%181, %182) /* ty=Tensor[(8, 10, 3), float32] */;
  (%183, %184, %var_5458, meta[relay.Constant][8] /* ty=Tensor[(240), float32] */)
}

def @func_1592(%var_1590: Tensor[(8, 10, 1), float32], %var_1591: Tensor[(8, 10, 3), float32]) -> Tensor[(8, 10, 3), float32] {
  %187 = fn (%var_1574: Tensor[(8, 10, 1), float32], %var_1575: Tensor[(8, 10, 3), float32]) -> Tensor[(8, 10, 3), float32] {
    %185 = cast(%var_1574, dtype="float32") /* ty=Tensor[(8, 10, 1), float32] */;
    %186 = cast(%var_1575, dtype="float32") /* ty=Tensor[(8, 10, 3), float32] */;
    floor_divide(%185, %186) /* ty=Tensor[(8, 10, 3), float32] */
  };
  %187(%var_1590, %var_1591) /* ty=Tensor[(8, 10, 3), float32] */
}

def @func_11105(%var_11103: Tensor[(12, 4), uint32], %var_11104: Tensor[(770), float32]) -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(12, 4), uint32], Tensor[(770), float32], Tensor[(72), float32], Tensor[(864), float32]) {
  %203 = fn (%var_11067: Tensor[(12, 4), uint32], %var_11068: Tensor[(770), float32]) -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(12, 4), uint32], Tensor[(770), float32], Tensor[(72), float32], Tensor[(864), float32]) {
    %188 = @func_10125() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32]) */;
    %189 = @func_5488() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
    %190 = cast(%var_11067, dtype="uint32") /* ty=Tensor[(12, 4), uint32] */;
    %191 = cast(%var_11068, dtype="float32") /* ty=Tensor[(770), float32] */;
    %192 = reshape(%190, newshape=[48]) /* ty=Tensor[(48), uint32] */;
    %193 = reshape(%191, newshape=[770]) /* ty=Tensor[(770), float32] */;
    %194 = @func_3954(%192, %193) /* ty=(Tensor[(6, 13, 11), float64], Tensor[(8, 5, 4), float64], Tensor[(48), uint32], Tensor[(48), uint32], Tensor[(4, 3, 6), float64], Tensor[(7, 14, 13), bool], Tensor[(1274, 1), int32], Tensor[(7, 10, 11), float32], Tensor[(770), float32], Tensor[(72), float32], Tensor[(72), float32]) */;
    %195 = @func_10555() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
    %196 = @func_9512() /* ty=(Tensor[(4, 3, 6), float32], Tensor[(240), float32], Tensor[(864), float32], Tensor[(770, 1), float32]) */;
    %197 = @func_5175() /* ty=Tensor[(72), float32] */;
    %198 = %188.1;
    %199 = %189.1;
    %200 = %194.9;
    %201 = %195.1;
    %202 = %196.2;
    (%197, %198, %199, %200, %var_11067, %var_11068, %201, %202)
  };
  %203(%var_11103, %var_11104) /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(12, 4), uint32], Tensor[(770), float32], Tensor[(72), float32], Tensor[(864), float32]) */
}

def @func_16720(%var_16718: Tensor[(770), float32]) -> (Tensor[(72), float32], Tensor[(7, 14, 13), bool], Tensor[(864), float32], Tensor[(770), float32]) {
  @func_16717(%var_16718) /* ty=(Tensor[(72), float32], Tensor[(7, 14, 13), bool], Tensor[(864), float32], Tensor[(770), float32]) */
}

def @func_12058() -> (Tensor[(72), float32],) {
  %204 = @func_5996() /* ty=(Tensor[(4, 3, 6), float32], Tensor[(72), float32]) */;
  %205 = %204.1;
  (%205,)
}

def @func_4005() -> (Tensor[(72), float32], Tensor[(240), float32]) {
  %206 = @func_3749() /* ty=(Tensor[(240), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32]) */;
  %207 = @func_2525() /* ty=Tensor[(72), float32] */;
  %208 = %206.0;
  (%207, %208)
}

def @func_6966() -> (Tensor[(48), uint32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32]) {
  @func_6964() /* ty=(Tensor[(48), uint32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32]) */
}

def @func_8741() -> (Tensor[(72), float32],) {
  %209 = @func_8247() /* ty=(Tensor[(8, 5, 4), float64], Tensor[(72), float32]) */;
  %210 = %209.1;
  (%210,)
}

def @func_4369() -> Tensor[(4, 3, 6), float32] {
  %212 = fn () -> Tensor[(4, 3, 6), float32] {
    %211 = @func_3870() /* ty=(Tensor[(4, 3, 6), float32], Tensor[(1274), int32]) */;
    %211.0
  };
  %212() /* ty=Tensor[(4, 3, 6), float32] */
}

def @func_10634() -> Tensor[(72), float32] {
  @func_10632() /* ty=Tensor[(72), float32] */
}

def @func_3699() -> Tensor[(72), float32] {
  %214 = fn () -> Tensor[(72), float32] {
    %213 = @func_2191() /* ty=(Tensor[(72), float32],) */;
    %213.0
  };
  %214() /* ty=Tensor[(72), float32] */
}

def @func_14317() -> Tensor[(4, 3, 6), float32] {
  @func_14315() /* ty=Tensor[(4, 3, 6), float32] */
}

def @func_6860() -> (Tensor[(48), uint32],) {
  %217 = fn () -> (Tensor[(48), uint32],) {
    %215 = @func_4235() /* ty=(Tensor[(72), float32], Tensor[(48), uint32], Tensor[(48), uint32]) */;
    %216 = %215.1;
    (%216,)
  };
  %217() /* ty=(Tensor[(48), uint32],) */
}

def @func_14448() -> (Tensor[(72), float32],) {
  @func_14446() /* ty=(Tensor[(72), float32],) */
}

def @func_15406(%var_15405: Tensor[(770), float32]) -> (Tensor[(5, 7, 8), float32], Tensor[(180, 1), float32], Tensor[(180), float32], Tensor[(240), float32], Tensor[(770), float32], Tensor[(864), float32], Tensor[(770), float32]) {
  %232 = fn (%var_15390: Tensor[(770), float32]) -> (Tensor[(5, 7, 8), float32], Tensor[(180, 1), float32], Tensor[(180), float32], Tensor[(240), float32], Tensor[(770), float32], Tensor[(864), float32], Tensor[(770), float32]) {
    %218 = cast(meta[relay.Constant][9] /* ty=Tensor[(5, 7, 8), float32] */, dtype="float32") /* ty=Tensor[(5, 7, 8), float32] */;
    %219 = cast(meta[relay.Constant][10] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
    %220 = cast(meta[relay.Constant][11] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
    %221 = reshape(%219, newshape=[180, 1]) /* ty=Tensor[(180, 1), float32] */;
    %222 = reshape(%220, newshape=[4, 60]) /* ty=Tensor[(4, 60), float32] */;
    %223 = @func_7959(%221, %222) /* ty=(Tensor[(420), float32], Tensor[(4, 3, 6), float32], Tensor[(72), float32], Tensor[(180, 1), float32], Tensor[(4, 60), int64]) */;
    %224 = cast(meta[relay.Constant][12] /* ty=Tensor[(864), float32] */, dtype="float32") /* ty=Tensor[(864), float32] */;
    %225 = cast(%var_15390, dtype="float32") /* ty=Tensor[(770), float32] */;
    %226 = reshape(%224, newshape=[864]) /* ty=Tensor[(864), float32] */;
    %227 = reshape(%225, newshape=[770]) /* ty=Tensor[(770), float32] */;
    %228 = @func_2594(%226, %227) /* ty=(Tensor[(72), float32], Tensor[(15, 1, 12), float32], Tensor[(180), float32], Tensor[(12, 6, 12), bool], Tensor[(864), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(240), float32], Tensor[(7, 14, 13), bool], Tensor[(770), float32]) */;
    %229 = cos(%218) /* ty=Tensor[(5, 7, 8), float32] */;
    %230 = %223.3;
    %231 = %228.9;
    (%229, %230, meta[relay.Constant][10] /* ty=Tensor[(180), float32] */, meta[relay.Constant][11] /* ty=Tensor[(240), float32] */, %231, meta[relay.Constant][12] /* ty=Tensor[(864), float32] */, %var_15390)
  };
  %232(%var_15405) /* ty=(Tensor[(5, 7, 8), float32], Tensor[(180, 1), float32], Tensor[(180), float32], Tensor[(240), float32], Tensor[(770), float32], Tensor[(864), float32], Tensor[(770), float32]) */
}

def @func_3750() -> (Tensor[(240), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32]) {
  %239 = fn () -> (Tensor[(240), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32]) {
    %233 = @func_3151() /* ty=(Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(240), float32]) */;
    %234 = @func_2881() /* ty=(Tensor[(72), float32], Tensor[(1274), int32]) */;
    %235 = @func_2184() /* ty=(Tensor[(6, 13, 11), float64], Tensor[(4, 3, 6), float32], Tensor[(72), float32]) */;
    %236 = %233.3;
    %237 = %234.0;
    %238 = %235.1;
    (%236, %237, %238)
  };
  %239() /* ty=(Tensor[(240), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32]) */
}

def @func_6890(%var_6861: Tensor[(16, 9, 7), float32], %var_6869: Tensor[(80, 2), float64]) -> (Tensor[(16, 9, 7), float32], Tensor[(8, 5, 4), float64], Tensor[(80, 2), float64]) {
  %240 = cast(%var_6861, dtype="float32") /* ty=Tensor[(16, 9, 7), float32] */;
  %241 = cast(%var_6869, dtype="float64") /* ty=Tensor[(80, 2), float64] */;
  %242 = reshape(%241, newshape=[8, 5, 4]) /* ty=Tensor[(8, 5, 4), float64] */;
  %243 = acosh(%240) /* ty=Tensor[(16, 9, 7), float32] */;
  %244 = @func_3099(%242) /* ty=Tensor[(8, 5, 4), float64] */;
  (%243, %244, %var_6869)
}

def @func_11706() -> Tensor[(72), float32] {
  @func_11704() /* ty=Tensor[(72), float32] */
}

def @func_2598(%var_2596: Tensor[(864), float32], %var_2597: Tensor[(770), float32]) -> (Tensor[(72), float32], Tensor[(15, 1, 12), float32], Tensor[(180), float32], Tensor[(12, 6, 12), bool], Tensor[(864), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(240), float32], Tensor[(7, 14, 13), bool], Tensor[(770), float32]) {
  @func_2594(%var_2596, %var_2597) /* ty=(Tensor[(72), float32], Tensor[(15, 1, 12), float32], Tensor[(180), float32], Tensor[(12, 6, 12), bool], Tensor[(864), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(240), float32], Tensor[(7, 14, 13), bool], Tensor[(770), float32]) */
}

def @func_16102() -> (Tensor[(180), float32], Tensor[(72), float32]) {
  @func_16100() /* ty=(Tensor[(180), float32], Tensor[(72), float32]) */
}

def @func_17053() -> (Tensor[(72), float32], Tensor[(72), float32]) {
  %249 = fn () -> (Tensor[(72), float32], Tensor[(72), float32]) {
    %245 = @func_9003() /* ty=(Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(180, 1), float32]) */;
    %246 = @func_6294() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
    %247 = %245.0;
    %248 = %246.1;
    (%247, %248)
  };
  %249() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */
}

def @func_10832(%var_10831: Tensor[(14, 5, 12), float32]) -> (Tensor[(14, 5, 12), bool],) {
  %257 = fn (%var_10810: Tensor[(14, 5, 12), float32]) -> (Tensor[(14, 5, 12), bool],) {
    %250 = cast(%var_10810, dtype="float32") /* ty=Tensor[(14, 5, 12), float32] */;
    %251 = acos(%250) /* ty=Tensor[(14, 5, 12), float32] */;
    %252 = cast(%251, dtype="bool") /* ty=Tensor[(14, 5, 12), bool] */;
    %253 = shape_of(%var_10810, dtype="int32") /* ty=Tensor[(3), int32] */;
    %254 = cast(%var_10810, dtype="bool") /* ty=Tensor[(14, 5, 12), bool] */;
    %255 = dyn.reshape(%252, %253, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %256 = logical_and(%254, %255) /* ty=Tensor[(14, 5, 12), bool] */;
    (%256,)
  };
  %257(%var_10831) /* ty=(Tensor[(14, 5, 12), bool],) */
}

def @func_10143() -> Tensor[(72), float32] {
  %258 = @func_9330() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(864), float32], Tensor[(72), float32], Tensor[(180), float32], Tensor[(48), uint32], Tensor[(72), float32]) */;
  %258.2
}

def @func_13489() -> (Tensor[(72), float32],) {
  @func_13487() /* ty=(Tensor[(72), float32],) */
}

def @func_15469() -> (Tensor[(72), float32],) {
  @func_15467() /* ty=(Tensor[(72), float32],) */
}

def @func_18402(%var_18400: Tensor[(864), float32], %var_18401: Tensor[(264), int32]) -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(432), uint32], Tensor[(240), float32], Tensor[(264), int32], Tensor[(264), int32], Tensor[(72), float32], Tensor[(20), int32], Tensor[(65, 4), int32], Tensor[(72), float32], Tensor[(48, 864), bool], Tensor[(72), float32], Tensor[(12, 6, 12), bool], Tensor[(72), float32]) {
  @func_18398(%var_18400, %var_18401) /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(432), uint32], Tensor[(240), float32], Tensor[(264), int32], Tensor[(264), int32], Tensor[(72), float32], Tensor[(20), int32], Tensor[(65, 4), int32], Tensor[(72), float32], Tensor[(48, 864), bool], Tensor[(72), float32], Tensor[(12, 6, 12), bool], Tensor[(72), float32]) */
}

def @func_12353(%var_12352: Tensor[(864), float32]) -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(12, 6, 12), bool], Tensor[(864), float32], Tensor[(240), float32], Tensor[(80), float32], Tensor[(12, 6, 12), bool]) {
  %273 = fn (%var_12303: Tensor[(864), float32]) -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(12, 6, 12), bool], Tensor[(864), float32], Tensor[(240), float32], Tensor[(80), float32], Tensor[(12, 6, 12), bool]) {
    %259 = @func_10078() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32]) */;
    %260 = cast(%var_12303, dtype="float32") /* ty=Tensor[(864), float32] */;
    %261 = reshape(%260, newshape=[12, 6, 12]) /* ty=Tensor[(12, 6, 12), float32] */;
    %262 = @func_4005() /* ty=(Tensor[(72), float32], Tensor[(240), float32]) */;
    %263 = @func_9643() /* ty=(Tensor[(240), float32], Tensor[(80), float32], Tensor[(80), float32]) */;
    %264 = @func_790(%261) /* ty=Tensor[(12, 6, 12), bool] */;
    %265 = cast(%264, dtype="float32") /* ty=Tensor[(12, 6, 12), float32] */;
    %266 = reshape(%265, newshape=[864]) /* ty=Tensor[(864), float32] */;
    %267 = @func_2001(%266) /* ty=(Tensor[(6, 3, 4), float64], Tensor[(12, 6, 12), bool], Tensor[(864), float32]) */;
    %268 = %259.0;
    %269 = @func_3698() /* ty=Tensor[(72), float32] */;
    %270 = %262.1;
    %271 = %263.1;
    %272 = %267.1;
    (%268, %269, %264, %var_12303, %270, %271, %272)
  };
  %273(%var_12352) /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(12, 6, 12), bool], Tensor[(864), float32], Tensor[(240), float32], Tensor[(80), float32], Tensor[(12, 6, 12), bool]) */
}

def @func_4501(%var_4465: Tensor[(4, 6, 11), int32], %var_4466: Tensor[(4, 6, 11), int32]) -> (Tensor[(4, 6, 11), int32], Tensor[(4, 6, 11), float64], Tensor[(1274), int32], Tensor[(72), float32]) {
  %274 = cast(%var_4466, dtype="int32") /* ty=Tensor[(4, 6, 11), int32] */;
  %275 = shape_of(%var_4465, dtype="int32") /* ty=Tensor[(3), int32] */;
  %276 = cast(%var_4465, dtype="int32") /* ty=Tensor[(4, 6, 11), int32] */;
  %277 = dyn.reshape(%274, %275, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %278 = cast(%var_4466, dtype="float64") /* ty=Tensor[(4, 6, 11), float64] */;
  %279 = @func_2881() /* ty=(Tensor[(72), float32], Tensor[(1274), int32]) */;
  %280 = right_shift(%276, %277) /* ty=Tensor[(4, 6, 11), int32] */;
  %281 = sigmoid(%278) /* ty=Tensor[(4, 6, 11), float64] */;
  %282 = %279.1;
  %283 = @func_2525() /* ty=Tensor[(72), float32] */;
  (%280, %281, %282, %283)
}

def @func_18862() -> Tensor[(72), float32] {
  @func_18860() /* ty=Tensor[(72), float32] */
}

def @func_2980() -> Tensor[(72), float32] {
  @func_2978() /* ty=Tensor[(72), float32] */
}

def @func_14645() -> (Tensor[(72), float32], Tensor[(420), float32], Tensor[(80), float32]) {
  @func_14643() /* ty=(Tensor[(72), float32], Tensor[(420), float32], Tensor[(80), float32]) */
}

def @func_3870() -> (Tensor[(4, 3, 6), float32], Tensor[(1274), int32]) {
  %284 = @func_2948() /* ty=(Tensor[(4, 3, 6), float32],) */;
  %285 = @func_3614() /* ty=(Tensor[(72), float32], Tensor[(1274), int32]) */;
  %286 = %284.0;
  %287 = %285.1;
  (%286, %287)
}

def @func_4821() -> (Tensor[(864), float32], Tensor[(48), uint32]) {
  %288 = @func_3574() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(24, 10), float32], Tensor[(864), float32], Tensor[(48), uint32], Tensor[(36, 12), uint32], Tensor[(6, 30), float32]) */;
  %289 = @func_4235() /* ty=(Tensor[(72), float32], Tensor[(48), uint32], Tensor[(48), uint32]) */;
  %290 = %288.5;
  %291 = %289.1;
  (%290, %291)
}

def @func_10979() -> Tensor[(80), float32] {
  %293 = fn () -> Tensor[(80), float32] {
    %292 = @func_9643() /* ty=(Tensor[(240), float32], Tensor[(80), float32], Tensor[(80), float32]) */;
    %292.2
  };
  %293() /* ty=Tensor[(80), float32] */
}

def @func_18840() -> (Tensor[(864), float32], Tensor[(72), float32]) {
  @func_18838() /* ty=(Tensor[(864), float32], Tensor[(72), float32]) */
}

def @func_15754() -> (Tensor[(72), float32], Tensor[(4, 3, 9), bool], Tensor[(72), float32]) {
  @func_15752() /* ty=(Tensor[(72), float32], Tensor[(4, 3, 9), bool], Tensor[(72), float32]) */
}

def @func_18278() -> (Tensor[(48), uint32], Tensor[(72), float32]) {
  @func_18276() /* ty=(Tensor[(48), uint32], Tensor[(72), float32]) */
}

def @func_16676() -> (Tensor[(72), float32], Tensor[(8, 5, 4), float64], Tensor[(72), float32]) {
  @func_16674() /* ty=(Tensor[(72), float32], Tensor[(8, 5, 4), float64], Tensor[(72), float32]) */
}

def @func_15283() -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32]) {
  @func_15281() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32]) */
}

def @func_10700() -> Tensor[(72), float32] {
  %295 = fn () -> Tensor[(72), float32] {
    %294 = @func_2191() /* ty=(Tensor[(72), float32],) */;
    %294.0
  };
  %295() /* ty=Tensor[(72), float32] */
}

def @func_9199() -> Tensor[(72), float32] {
  @func_9197() /* ty=Tensor[(72), float32] */
}

def @func_16951() -> (Tensor[(72), float32],) {
  @func_16949() /* ty=(Tensor[(72), float32],) */
}

def @func_14134() -> Tensor[(72), float64] {
  @func_14132() /* ty=Tensor[(72), float64] */
}

def @func_11442() -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(180), float32], Tensor[(48), float32]) {
  %307 = fn () -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(180), float32], Tensor[(48), float32]) {
    %296 = @func_7298() /* ty=(Tensor[(72), float32], Tensor[(80), float32]) */;
    %297 = @func_6294() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
    %298 = @func_6699() /* ty=(Tensor[(72), float32],) */;
    %299 = cast(meta[relay.Constant][13] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
    %300 = reshape(%299, newshape=[48]) /* ty=Tensor[(48), float32] */;
    %301 = @func_5586(%300) /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(?, 16, 3), bool], Tensor[(48), float32], Tensor[(180), float32], Tensor[(180), float32]) */;
    %302 = %296.0;
    %303 = %297.0;
    %304 = %298.0;
    %305 = @func_3133() /* ty=Tensor[(72), float32] */;
    %306 = %301.4;
    (%302, %303, %304, %305, %306, meta[relay.Constant][13] /* ty=Tensor[(48), float32] */)
  };
  %307() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(180), float32], Tensor[(48), float32]) */
}

def @func_15947() -> (Tensor[(72), float32], Tensor[(180), float32]) {
  %312 = fn () -> (Tensor[(72), float32], Tensor[(180), float32]) {
    %308 = @func_12828() /* ty=(Tensor[(72), float32], Tensor[(864), float32]) */;
    %309 = @func_6432() /* ty=(Tensor[(72), float32], Tensor[(864), float32], Tensor[(180), float32], Tensor[(48), uint32]) */;
    %310 = %308.0;
    %311 = %309.2;
    (%310, %311)
  };
  %312() /* ty=(Tensor[(72), float32], Tensor[(180), float32]) */
}

def @func_10126() -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32]) {
  %321 = fn () -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32]) {
    %313 = @func_5136() /* ty=(Tensor[(72), float32],) */;
    %314 = @func_9330() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(864), float32], Tensor[(72), float32], Tensor[(180), float32], Tensor[(48), uint32], Tensor[(72), float32]) */;
    %315 = @func_10078() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32]) */;
    %316 = @func_6294() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
    %317 = %313.0;
    %318 = %314.4;
    %319 = %315.0;
    %320 = %316.1;
    (%317, %318, %319, %320)
  };
  %321() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32]) */
}

def @func_3134() -> Tensor[(72), float32] {
  %322 = fn () -> Tensor[(72), float32] {
    @func_2525() /* ty=Tensor[(72), float32] */
  };
  %322() /* ty=Tensor[(72), float32] */
}

def @func_11006() -> (Tensor[(240), float32],) {
  %323 = @func_5773() /* ty=(Tensor[(240), float32], Tensor[(48), uint32], Tensor[(72), float32]) */;
  %324 = %323.0;
  (%324,)
}

def @func_9330() -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(864), float32], Tensor[(72), float32], Tensor[(180), float32], Tensor[(48), uint32], Tensor[(72), float32]) {
  %325 = @func_2689() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %326 = @func_5877() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %327 = @func_4821() /* ty=(Tensor[(864), float32], Tensor[(48), uint32]) */;
  %328 = cast(meta[relay.Constant][14] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %329 = reshape(%328, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %330 = @func_3052(%329) /* ty=(Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(4, 60), float32], Tensor[(864), float32], Tensor[(48), uint32], Tensor[(15, 1, 12), float32], Tensor[(180), float32], Tensor[(72), float32], Tensor[(72), float32]) */;
  %331 = @func_8150() /* ty=(Tensor[(72), float32], Tensor[(4, 3, 6), float32], Tensor[(48), uint32], Tensor[(4, 3, 6), float32], Tensor[(72), float32], Tensor[(48), uint32]) */;
  %332 = @func_4665() /* ty=(Tensor[(4, 3, 6), float32], Tensor[(72), float32], Tensor[(180), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(80), float32], Tensor[(240), float32], Tensor[(72), float32]) */;
  %333 = @func_7128() /* ty=Tensor[(72), float32] */;
  %334 = %325.0;
  %335 = %326.0;
  %336 = %327.0;
  %337 = %330.7;
  %338 = %331.2;
  %339 = %332.7;
  (%333, %334, %335, %336, %337, meta[relay.Constant][14] /* ty=Tensor[(180), float32] */, %338, %339)
}

def @func_14978() -> (Tensor[(1274), int32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32]) {
  @func_14976() /* ty=(Tensor[(1274), int32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32]) */
}

def @func_16100() -> (Tensor[(180), float32], Tensor[(72), float32]) {
  %340 = @func_7423() /* ty=(Tensor[(4, 3, 6), float32], Tensor[(180), float32], Tensor[(2, 24), float32]) */;
  %341 = @func_12256() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32]) */;
  %342 = %340.1;
  %343 = %341.2;
  (%342, %343)
}

def @func_9373() -> Tensor[(72), float32] {
  @func_4933() /* ty=Tensor[(72), float32] */
}

def @func_17357() -> Tensor[(770, 1), float32] {
  %345 = fn () -> Tensor[(770, 1), float32] {
    %344 = @func_11666() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(770, 1), float32], Tensor[(1274), int32]) */;
    %344.2
  };
  %345() /* ty=Tensor[(770, 1), float32] */
}

def @func_4347(%var_4343: Tensor[(12, 4), uint32]) -> (Tensor[(72), float64], Tensor[(9, 16, 3), uint32], Tensor[(12, 4), uint32]) {
  %346 = @func_3769() /* ty=(Tensor[(72), float64],) */;
  %347 = cast(%var_4343, dtype="uint32") /* ty=Tensor[(12, 4), uint32] */;
  %348 = reshape(%347, newshape=[48]) /* ty=Tensor[(48), uint32] */;
  %349 = @func_3079(%348) /* ty=(Tensor[(72), float32], Tensor[(9, 16, 3), uint32], Tensor[(48), uint32], Tensor[(432, 1), uint32]) */;
  %350 = %346.0;
  %351 = %349.1;
  (%350, %351, %var_4343)
}

def @func_11774() -> (Tensor[(1274), int32], Tensor[(2, 24), float32], Tensor[(72), float32]) {
  %358 = fn () -> (Tensor[(1274), int32], Tensor[(2, 24), float32], Tensor[(72), float32]) {
    %352 = @func_8390() /* ty=(Tensor[(1274), int32], Tensor[(1274), int32], Tensor[(4, 3, 6), float32]) */;
    %353 = @func_7423() /* ty=(Tensor[(4, 3, 6), float32], Tensor[(180), float32], Tensor[(2, 24), float32]) */;
    %354 = @func_7298() /* ty=(Tensor[(72), float32], Tensor[(80), float32]) */;
    %355 = %352.0;
    %356 = %353.2;
    %357 = %354.0;
    (%355, %356, %357)
  };
  %358() /* ty=(Tensor[(1274), int32], Tensor[(2, 24), float32], Tensor[(72), float32]) */
}

def @func_9131() -> (Tensor[(72), float32],) {
  %361 = fn () -> (Tensor[(72), float32],) {
    %359 = @func_2842() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
    %360 = %359.1;
    (%360,)
  };
  %361() /* ty=(Tensor[(72), float32],) */
}

def @func_14567(%var_14504: Tensor[(3360), float64], %var_14505: Tensor[(1274), int32], %var_14517: Tensor[(260), int32], %var_14562: Tensor[(2, 24), float32]) -> (Tensor[(4, 3, 6), float32], Tensor[(4, 3, 6), float32], Tensor[(7, 14, 13), bool], Tensor[(3360), float64], Tensor[(1274), int32], Tensor[(72), float32], Tensor[(20), int32], Tensor[(260), int32], Tensor[(72), float32], Tensor[(2, 24), float64]) {
  %362 = @func_12035() /* ty=(Tensor[(80), float32], Tensor[(4, 3, 6), float32]) */;
  %363 = cast(%var_14504, dtype="float64") /* ty=Tensor[(3360), float64] */;
  %364 = cast(%var_14505, dtype="int32") /* ty=Tensor[(1274), int32] */;
  %365 = reshape(%363, newshape=[14, 16, 15]) /* ty=Tensor[(14, 16, 15), float64] */;
  %366 = reshape(%364, newshape=[1274]) /* ty=Tensor[(1274), int32] */;
  %367 = @func_13297(%365, %366) /* ty=(Tensor[(14, 16, 15), float64], Tensor[(7, 14, 13), bool], Tensor[(1274), int32], Tensor[(72), float32]) */;
  %368 = cast(meta[relay.Constant][15] /* ty=Tensor[(20), int32] */, dtype="int32") /* ty=Tensor[(20), int32] */;
  %369 = cast(%var_14517, dtype="int32") /* ty=Tensor[(260), int32] */;
  %370 = reshape(%368, newshape=[1, 5, 4]) /* ty=Tensor[(1, 5, 4), int32] */;
  %371 = reshape(%369, newshape=[13, 5, 4]) /* ty=Tensor[(13, 5, 4), int32] */;
  %372 = @func_13704(%370, %371) /* ty=(Tensor[(13, 5, 4), int32], Tensor[(72), float32]) */;
  %373 = @func_11773() /* ty=(Tensor[(1274), int32], Tensor[(2, 24), float32], Tensor[(72), float32]) */;
  %374 = %373.1;
  %375 = cast(%var_14562, dtype="float64") /* ty=Tensor[(2, 24), float64] */;
  %376 = shape_of(%374, dtype="int32") /* ty=Tensor[(2), int32] */;
  %377 = cast(%374, dtype="float64") /* ty=Tensor[(2, 24), float64] */;
  %378 = dyn.reshape(%375, %376, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %379 = %362.1;
  %380 = @func_14315() /* ty=Tensor[(4, 3, 6), float32] */;
  %381 = %367.1;
  %382 = %372.1;
  %383 = @func_11387() /* ty=Tensor[(72), float32] */;
  %384 = divide(%377, %378) /* ty=Tensor[(2, 24), float64] */;
  (%379, %380, %381, %var_14504, %var_14505, %382, meta[relay.Constant][15] /* ty=Tensor[(20), int32] */, %var_14517, %383, %384)
}

def @func_5137() -> (Tensor[(72), float32],) {
  %387 = fn () -> (Tensor[(72), float32],) {
    %385 = @func_4064() /* ty=(Tensor[(72), float32],) */;
    %386 = %385.0;
    (%386,)
  };
  %387() /* ty=(Tensor[(72), float32],) */
}

def @func_2669(%var_2609: Tensor[(1, 240), float32], %var_2621: Tensor[(864), float32], %var_2625: Tensor[(48), uint32]) -> (Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(7, 14, 13), bool], Tensor[(1274), int32], Tensor[(80), float32], Tensor[(864), float32], Tensor[(4, 3, 6), bool], Tensor[(48), uint32], Tensor[(432), uint32], Tensor[(12, 240), float32], Tensor[(6, 3, 4), float64], Tensor[(10, 12, 13), float64], Tensor[(770, 240), bool]) {
  %388 = @func_2184() /* ty=(Tensor[(6, 13, 11), float64], Tensor[(4, 3, 6), float32], Tensor[(72), float32]) */;
  %389 = cast(meta[relay.Constant][16] /* ty=Tensor[(80), float32] */, dtype="float32") /* ty=Tensor[(80), float32] */;
  %390 = cast(%var_2609, dtype="float32") /* ty=Tensor[(1, 240), float32] */;
  %391 = reshape(%389, newshape=[8, 10, 1]) /* ty=Tensor[(8, 10, 1), float32] */;
  %392 = reshape(%390, newshape=[8, 10, 3]) /* ty=Tensor[(8, 10, 3), float32] */;
  %393 = cast(meta[relay.Constant][17] /* ty=Tensor[(1274), int32] */, dtype="int32") /* ty=Tensor[(1274), int32] */;
  %394 = cast(meta[relay.Constant][17] /* ty=Tensor[(1274), int32] */, dtype="int32") /* ty=Tensor[(1274), int32] */;
  %395 = reshape(%393, newshape=[7, 14, 13]) /* ty=Tensor[(7, 14, 13), int32] */;
  %396 = reshape(%394, newshape=[7, 14, 13]) /* ty=Tensor[(7, 14, 13), int32] */;
  %397 = @func_45(%395, %396) /* ty=(Tensor[(7, 14, 13), bool],) */;
  %398 = cast(%var_2621, dtype="float32") /* ty=Tensor[(864), float32] */;
  %399 = cast(meta[relay.Constant][18] /* ty=Tensor[(770, 1), float32] */, dtype="float32") /* ty=Tensor[(770, 1), float32] */;
  %400 = reshape(%398, newshape=[864]) /* ty=Tensor[(864), float32] */;
  %401 = reshape(%399, newshape=[770]) /* ty=Tensor[(770), float32] */;
  %402 = @func_2594(%400, %401) /* ty=(Tensor[(72), float32], Tensor[(15, 1, 12), float32], Tensor[(180), float32], Tensor[(12, 6, 12), bool], Tensor[(864), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(240), float32], Tensor[(7, 14, 13), bool], Tensor[(770), float32]) */;
  %403 = cast(%var_2625, dtype="uint32") /* ty=Tensor[(48), uint32] */;
  %404 = cast(meta[relay.Constant][19] /* ty=Tensor[(432), uint32] */, dtype="uint32") /* ty=Tensor[(432), uint32] */;
  %405 = reshape(%403, newshape=[1, 16, 3]) /* ty=Tensor[(1, 16, 3), uint32] */;
  %406 = reshape(%404, newshape=[9, 16, 3]) /* ty=Tensor[(9, 16, 3), uint32] */;
  %407 = @func_852(%405, %406) /* ty=(Tensor[(9, 16, 3), uint32], Tensor[(4, 3, 6), bool]) */;
  %408 = cast(%var_2609, dtype="float32") /* ty=Tensor[(1, 240), float32] */;
  %409 = log(%408) /* ty=Tensor[(1, 240), float32] */;
  %410 = cast(%409, dtype="float32") /* ty=Tensor[(1, 240), float32] */;
  %411 = cast(meta[relay.Constant][20] /* ty=Tensor[(12, 240), float32] */, dtype="float32") /* ty=Tensor[(12, 240), float32] */;
  %412 = cast(%var_2621, dtype="float32") /* ty=Tensor[(864), float32] */;
  %413 = reshape(%412, newshape=[864]) /* ty=Tensor[(864), float32] */;
  %414 = @func_2001(%413) /* ty=(Tensor[(6, 3, 4), float64], Tensor[(12, 6, 12), bool], Tensor[(864), float32]) */;
  %415 = %397.0;
  %416 = cast(%415, dtype="int32") /* ty=Tensor[(7, 14, 13), int32] */;
  %417 = reshape(%416, newshape=[1274]) /* ty=Tensor[(1274), int32] */;
  %418 = @func_1912(%417) /* ty=(Tensor[(10, 12, 13), float64], Tensor[(4, 3, 6), float32], Tensor[(36, 2), float32], Tensor[(7, 14, 13), bool], Tensor[(1274), int32]) */;
  %419 = cast(%409, dtype="float32") /* ty=Tensor[(1, 240), float32] */;
  %420 = sigmoid(%419) /* ty=Tensor[(1, 240), float32] */;
  %421 = cast(%420, dtype="float32") /* ty=Tensor[(1, 240), float32] */;
  %422 = cosh(%421) /* ty=Tensor[(1, 240), float32] */;
  %423 = cast(%422, dtype="float32") /* ty=Tensor[(1, 240), float32] */;
  %424 = asinh(%423) /* ty=Tensor[(1, 240), float32] */;
  %425 = cast(%424, dtype="bool") /* ty=Tensor[(1, 240), bool] */;
  %426 = cast(meta[relay.Constant][18] /* ty=Tensor[(770, 1), float32] */, dtype="bool") /* ty=Tensor[(770, 1), bool] */;
  %427 = %388.2;
  %428 = @func_1589(%391, %392) /* ty=Tensor[(8, 10, 3), float32] */;
  %429 = %402.6;
  %430 = %407.1;
  %431 = floor_divide(%410, %411) /* ty=Tensor[(12, 240), float32] */;
  %432 = %414.0;
  %433 = %418.0;
  %434 = greater(%425, %426) /* ty=Tensor[(770, 240), bool] */;
  (%427, %428, meta[relay.Constant][16] /* ty=Tensor[(80), float32] */, %415, meta[relay.Constant][17] /* ty=Tensor[(1274), int32] */, %429, %var_2621, %430, %var_2625, meta[relay.Constant][19] /* ty=Tensor[(432), uint32] */, %431, %432, %433, %434)
}

def @func_9005() -> (Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(180, 1), float32]) {
  @func_9003() /* ty=(Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(180, 1), float32]) */
}

def @func_13707(%var_13705: Tensor[(1, 5, 4), int32], %var_13706: Tensor[(13, 5, 4), int32]) -> (Tensor[(13, 5, 4), int32], Tensor[(72), float32]) {
  %440 = fn (%var_13666: Tensor[(1, 5, 4), int32], %var_13667: Tensor[(13, 5, 4), int32]) -> (Tensor[(13, 5, 4), int32], Tensor[(72), float32]) {
    %435 = cast(%var_13666, dtype="int32") /* ty=Tensor[(1, 5, 4), int32] */;
    %436 = cast(%var_13667, dtype="int32") /* ty=Tensor[(13, 5, 4), int32] */;
    %437 = @func_13195() /* ty=(Tensor[(72), float32], Tensor[(4, 60), int64], Tensor[(180), float32], Tensor[(120, 2), bool]) */;
    %438 = subtract(%435, %436) /* ty=Tensor[(13, 5, 4), int32] */;
    %439 = %437.0;
    (%438, %439)
  };
  %440(%var_13705, %var_13706) /* ty=(Tensor[(13, 5, 4), int32], Tensor[(72), float32]) */
}

def @func_6209() -> (Tensor[(72), float32], Tensor[(72), float32]) {
  %441 = @func_2191() /* ty=(Tensor[(72), float32],) */;
  %442 = @func_4005() /* ty=(Tensor[(72), float32], Tensor[(240), float32]) */;
  %443 = %441.0;
  %444 = %442.0;
  (%443, %444)
}

def @func_6964() -> (Tensor[(48), uint32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32]) {
  %445 = @func_4732() /* ty=(Tensor[(48), uint32],) */;
  %446 = @func_3151() /* ty=(Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(240), float32]) */;
  %447 = @func_3117() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %448 = @func_2948() /* ty=(Tensor[(4, 3, 6), float32],) */;
  %449 = %445.0;
  %450 = %446.0;
  %451 = %447.0;
  %452 = %448.0;
  (%449, %450, %451, %452)
}

def @func_7959(%var_7943: Tensor[(180, 1), float32], %var_7950: Tensor[(4, 60), float32]) -> (Tensor[(420), float32], Tensor[(4, 3, 6), float32], Tensor[(72), float32], Tensor[(180, 1), float32], Tensor[(4, 60), int64]) {
  %453 = @func_7664() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(420), float32], Tensor[(420), float32]) */;
  %454 = @func_2191() /* ty=(Tensor[(72), float32],) */;
  %455 = cast(%var_7943, dtype="float32") /* ty=Tensor[(180, 1), float32] */;
  %456 = reshape(%455, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %457 = @func_3052(%456) /* ty=(Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(4, 60), float32], Tensor[(864), float32], Tensor[(48), uint32], Tensor[(15, 1, 12), float32], Tensor[(180), float32], Tensor[(72), float32], Tensor[(72), float32]) */;
  %458 = %457.2;
  %459 = cast(%var_7950, dtype="int64") /* ty=Tensor[(4, 60), int64] */;
  %460 = shape_of(%458, dtype="int32") /* ty=Tensor[(2), int32] */;
  %461 = cast(%458, dtype="int64") /* ty=Tensor[(4, 60), int64] */;
  %462 = dyn.reshape(%459, %460, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %463 = %453.4;
  %464 = @func_4368() /* ty=Tensor[(4, 3, 6), float32] */;
  %465 = %454.0;
  %466 = maximum(%461, %462) /* ty=Tensor[(4, 60), int64] */;
  (%463, %464, %465, %var_7943, %466)
}

def @func_13383() -> (Tensor[(72), float32], Tensor[(1274), int32]) {
  %469 = fn () -> (Tensor[(72), float32], Tensor[(1274), int32]) {
    %467 = @func_2525() /* ty=Tensor[(72), float32] */;
    %468 = @func_8867() /* ty=Tensor[(1274), int32] */;
    (%467, %468)
  };
  %469() /* ty=(Tensor[(72), float32], Tensor[(1274), int32]) */
}

def @func_12598() -> Tensor[(72), float32] {
  %471 = fn () -> Tensor[(72), float32] {
    %470 = @func_7298() /* ty=(Tensor[(72), float32], Tensor[(80), float32]) */;
    %470.0
  };
  %471() /* ty=Tensor[(72), float32] */
}

def @func_9763(%var_9761: Tensor[(1008), float32], %var_9762: Tensor[(48), uint32]) -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(80, 2), float64], Tensor[(1008), float32], Tensor[(160), float64], Tensor[(72), float32], Tensor[(432, 1), uint32], Tensor[(48), uint32]) {
  %488 = fn (%var_9741: Tensor[(1008), float32], %var_9758: Tensor[(48), uint32]) -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(80, 2), float64], Tensor[(1008), float32], Tensor[(160), float64], Tensor[(72), float32], Tensor[(432, 1), uint32], Tensor[(48), uint32]) {
    %472 = @func_7021() /* ty=(Tensor[(72), float32],) */;
    %473 = @func_8909() /* ty=(Tensor[(72), float32],) */;
    %474 = cast(%var_9741, dtype="float32") /* ty=Tensor[(1008), float32] */;
    %475 = cast(meta[relay.Constant][21] /* ty=Tensor[(160), float64] */, dtype="float64") /* ty=Tensor[(160), float64] */;
    %476 = reshape(%474, newshape=[16, 9, 7]) /* ty=Tensor[(16, 9, 7), float32] */;
    %477 = reshape(%475, newshape=[80, 2]) /* ty=Tensor[(80, 2), float64] */;
    %478 = @func_6890(%476, %477) /* ty=(Tensor[(16, 9, 7), float32], Tensor[(8, 5, 4), float64], Tensor[(80, 2), float64]) */;
    %479 = @func_2842() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
    %480 = cast(%var_9758, dtype="uint32") /* ty=Tensor[(48), uint32] */;
    %481 = reshape(%480, newshape=[48]) /* ty=Tensor[(48), uint32] */;
    %482 = @func_3079(%481) /* ty=(Tensor[(72), float32], Tensor[(9, 16, 3), uint32], Tensor[(48), uint32], Tensor[(432, 1), uint32]) */;
    %483 = %472.0;
    %484 = %473.0;
    %485 = %478.2;
    %486 = %479.1;
    %487 = %482.3;
    (%483, %484, %485, %var_9741, meta[relay.Constant][21] /* ty=Tensor[(160), float64] */, %486, %487, %var_9758)
  };
  %488(%var_9761, %var_9762) /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(80, 2), float64], Tensor[(1008), float32], Tensor[(160), float64], Tensor[(72), float32], Tensor[(432, 1), uint32], Tensor[(48), uint32]) */
}

def @func_15529() -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(80), float32]) {
  %494 = fn () -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(80), float32]) {
    %489 = @func_6209() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
    %490 = @func_7298() /* ty=(Tensor[(72), float32], Tensor[(80), float32]) */;
    %491 = @func_12597() /* ty=Tensor[(72), float32] */;
    %492 = %489.0;
    %493 = %490.1;
    (%491, %492, %493)
  };
  %494() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(80), float32]) */
}

def @func_16613() -> Tensor[(80), float32] {
  %496 = fn () -> Tensor[(80), float32] {
    %495 = @func_9643() /* ty=(Tensor[(240), float32], Tensor[(80), float32], Tensor[(80), float32]) */;
    %495.2
  };
  %496() /* ty=Tensor[(80), float32] */
}

def @func_15752() -> (Tensor[(72), float32], Tensor[(4, 3, 9), bool], Tensor[(72), float32]) {
  %497 = @func_5644() /* ty=Tensor[(72), float32] */;
  %498 = @func_9243() /* ty=Tensor[(4, 3, 9), bool] */;
  %499 = @func_14712() /* ty=Tensor[(72), float32] */;
  (%497, %498, %499)
}

def @func_4064() -> (Tensor[(72), float32],) {
  %500 = @func_3194() /* ty=Tensor[(72), float32] */;
  (%500,)
}

def @func_7299() -> (Tensor[(72), float32], Tensor[(80), float32]) {
  %505 = fn () -> (Tensor[(72), float32], Tensor[(80), float32]) {
    %501 = @func_4064() /* ty=(Tensor[(72), float32],) */;
    %502 = @func_6486() /* ty=(Tensor[(80), float32], Tensor[(8, 5, 4), float64], Tensor[(160), float64], Tensor[(72), float32], Tensor[(72), float32]) */;
    %503 = %501.0;
    %504 = %502.0;
    (%503, %504)
  };
  %505() /* ty=(Tensor[(72), float32], Tensor[(80), float32]) */
}

def @func_14917() -> Tensor[(4, 3, 6), bool] {
  @func_14915() /* ty=Tensor[(4, 3, 6), bool] */
}

def @func_18727(%var_18726: Tensor[(1008), float32]) -> (Tensor[(15, 8, 6), float32], Tensor[(48), uint32], Tensor[(4, 3, 6), float32], Tensor[(72), float32], Tensor[(1274), int32], Tensor[(240), float32], Tensor[(80), float32], Tensor[(864), float32], Tensor[(80), float32], Tensor[(1008), float32]) {
  %528 = fn (%var_18715: Tensor[(1008), float32]) -> (Tensor[(15, 8, 6), float32], Tensor[(48), uint32], Tensor[(4, 3, 6), float32], Tensor[(72), float32], Tensor[(1274), int32], Tensor[(240), float32], Tensor[(80), float32], Tensor[(864), float32], Tensor[(80), float32], Tensor[(1008), float32]) {
    %506 = @func_6499() /* ty=(Tensor[(15, 8, 6), float32],) */;
    %507 = @func_4235() /* ty=(Tensor[(72), float32], Tensor[(48), uint32], Tensor[(48), uint32]) */;
    %508 = @func_18522() /* ty=(Tensor[(4, 3, 6), float32], Tensor[(4, 3, 9), bool]) */;
    %509 = @func_9512() /* ty=(Tensor[(4, 3, 6), float32], Tensor[(240), float32], Tensor[(864), float32], Tensor[(770, 1), float32]) */;
    %510 = %509.1;
    %511 = cast(%510, dtype="float32") /* ty=Tensor[(240), float32] */;
    %512 = cast(meta[relay.Constant][22] /* ty=Tensor[(864), float32] */, dtype="float32") /* ty=Tensor[(864), float32] */;
    %513 = %507.1;
    %514 = cast(%513, dtype="uint32") /* ty=Tensor[(48), uint32] */;
    %515 = reshape(%511, newshape=[1, 240]) /* ty=Tensor[(1, 240), float32] */;
    %516 = reshape(%512, newshape=[864]) /* ty=Tensor[(864), float32] */;
    %517 = reshape(%514, newshape=[48]) /* ty=Tensor[(48), uint32] */;
    %518 = @func_2669(%515, %516, %517) /* ty=(Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(7, 14, 13), bool], Tensor[(1274), int32], Tensor[(80), float32], Tensor[(864), float32], Tensor[(4, 3, 6), bool], Tensor[(48), uint32], Tensor[(432), uint32], Tensor[(12, 240), float32], Tensor[(6, 3, 4), float64], Tensor[(10, 12, 13), float64], Tensor[(770, 240), bool]) */;
    %519 = cast(%var_18715, dtype="float32") /* ty=Tensor[(1008), float32] */;
    %520 = reshape(%519, newshape=[252, 4]) /* ty=Tensor[(252, 4), float32] */;
    %521 = @func_12984(%520) /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(4, 3, 9), float32], Tensor[(252, 4), float32], Tensor[(48), uint32], Tensor[(80), float32]) */;
    %522 = %506.0;
    %523 = %508.0;
    %524 = @func_8449() /* ty=Tensor[(72), float32] */;
    %525 = @func_8867() /* ty=Tensor[(1274), int32] */;
    %526 = %518.2;
    %527 = %521.5;
    (%522, %513, %523, %524, %525, %510, %526, meta[relay.Constant][22] /* ty=Tensor[(864), float32] */, %527, %var_18715)
  };
  %528(%var_18726) /* ty=(Tensor[(15, 8, 6), float32], Tensor[(48), uint32], Tensor[(4, 3, 6), float32], Tensor[(72), float32], Tensor[(1274), int32], Tensor[(240), float32], Tensor[(80), float32], Tensor[(864), float32], Tensor[(80), float32], Tensor[(1008), float32]) */
}

def @func_3489(%var_3412: Tensor[(180), float32]) -> (Tensor[(72), float32], Tensor[(1274), int32], Tensor[(15, ?, 12), int16], Tensor[(72), float32], Tensor[(72), float32]) {
  %529 = @func_2191() /* ty=(Tensor[(72), float32],) */;
  %530 = @func_2351() /* ty=(Tensor[(72), float32], Tensor[(1274), int32], Tensor[(1274), int32], Tensor[(4, 3, 6), float32]) */;
  %531 = cast(%var_3412, dtype="float32") /* ty=Tensor[(180), float32] */;
  %532 = reshape(%531, newshape=[15, 1, 12]) /* ty=Tensor[(15, 1, 12), float32] */;
  %533 = @func_1378(%532) /* ty=Tensor[(15, 1, 12), float32] */;
  %534 = cast(%var_3412, dtype="int16") /* ty=Tensor[(180), int16] */;
  %535 = shape_of(%533, dtype="int32") /* ty=Tensor[(3), int32] */;
  %536 = cast(%533, dtype="int16") /* ty=Tensor[(15, 1, 12), int16] */;
  %537 = dyn.reshape(%534, %535, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %538 = @func_3117() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %539 = %529.0;
  %540 = %530.2;
  %541 = left_shift(%536, %537) /* ty=Tensor[(15, ?, 12), int16] */;
  %542 = @func_2978() /* ty=Tensor[(72), float32] */;
  %543 = %538.1;
  (%539, %540, %541, %542, %543)
}

def @func_9512() -> (Tensor[(4, 3, 6), float32], Tensor[(240), float32], Tensor[(864), float32], Tensor[(770, 1), float32]) {
  %544 = cast(meta[relay.Constant][23] /* ty=Tensor[(864), float32] */, dtype="float32") /* ty=Tensor[(864), float32] */;
  %545 = cast(meta[relay.Constant][24] /* ty=Tensor[(770, 1), float32] */, dtype="float32") /* ty=Tensor[(770, 1), float32] */;
  %546 = reshape(%544, newshape=[864]) /* ty=Tensor[(864), float32] */;
  %547 = reshape(%545, newshape=[770]) /* ty=Tensor[(770), float32] */;
  %548 = @func_2594(%546, %547) /* ty=(Tensor[(72), float32], Tensor[(15, 1, 12), float32], Tensor[(180), float32], Tensor[(12, 6, 12), bool], Tensor[(864), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(240), float32], Tensor[(7, 14, 13), bool], Tensor[(770), float32]) */;
  %549 = @func_4368() /* ty=Tensor[(4, 3, 6), float32] */;
  %550 = %548.7;
  (%549, %550, meta[relay.Constant][23] /* ty=Tensor[(864), float32] */, meta[relay.Constant][24] /* ty=Tensor[(770, 1), float32] */)
}

def @func_11533() -> (Tensor[(48), uint32],) {
  %553 = fn () -> (Tensor[(48), uint32],) {
    %551 = @func_5773() /* ty=(Tensor[(240), float32], Tensor[(48), uint32], Tensor[(72), float32]) */;
    %552 = %551.1;
    (%552,)
  };
  %553() /* ty=(Tensor[(48), uint32],) */
}

def @func_4665() -> (Tensor[(4, 3, 6), float32], Tensor[(72), float32], Tensor[(180), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(80), float32], Tensor[(240), float32], Tensor[(72), float32]) {
  %554 = cast(meta[relay.Constant][25] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %555 = reshape(%554, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %556 = @func_3052(%555) /* ty=(Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(4, 60), float32], Tensor[(864), float32], Tensor[(48), uint32], Tensor[(15, 1, 12), float32], Tensor[(180), float32], Tensor[(72), float32], Tensor[(72), float32]) */;
  %557 = @func_2842() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %558 = cast(meta[relay.Constant][26] /* ty=Tensor[(80), float32] */, dtype="float32") /* ty=Tensor[(80), float32] */;
  %559 = cast(meta[relay.Constant][27] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %560 = reshape(%558, newshape=[80]) /* ty=Tensor[(80), float32] */;
  %561 = reshape(%559, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %562 = @func_3264(%560, %561) /* ty=(Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(240), float32]) */;
  %563 = @func_2689() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %564 = @func_4368() /* ty=Tensor[(4, 3, 6), float32] */;
  %565 = %556.7;
  %566 = %557.1;
  %567 = %562.0;
  %568 = %563.0;
  (%564, %565, meta[relay.Constant][25] /* ty=Tensor[(180), float32] */, %566, %567, meta[relay.Constant][26] /* ty=Tensor[(80), float32] */, meta[relay.Constant][27] /* ty=Tensor[(240), float32] */, %568)
}

def @func_11802() -> (Tensor[(72), float32], Tensor[(72), float32]) {
  @func_11800() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */
}

def @func_15303() -> (Tensor[(4, 3, 6), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32]) {
  %569 = @func_12035() /* ty=(Tensor[(80), float32], Tensor[(4, 3, 6), float32]) */;
  %570 = @func_5241() /* ty=(Tensor[(1274), int32], Tensor[(72), float32]) */;
  %571 = @func_12698() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32], Tensor[(4, 3, 6), float32], Tensor[(72), float32], Tensor[(72), float32]) */;
  %572 = %569.1;
  %573 = %570.1;
  %574 = %571.2;
  (%572, %573, %574)
}

def @func_4204(%var_4194: Tensor[(4, 3, 6), float32]) -> Tensor[(4, 3, 6), bool] {
  %575 = @func_2948() /* ty=(Tensor[(4, 3, 6), float32],) */;
  %576 = %575.0;
  %577 = cast(%var_4194, dtype="bool") /* ty=Tensor[(4, 3, 6), bool] */;
  %578 = shape_of(%576, dtype="int32") /* ty=Tensor[(3), int32] */;
  %579 = cast(%576, dtype="bool") /* ty=Tensor[(4, 3, 6), bool] */;
  %580 = dyn.reshape(%577, %578, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%579, %580) /* ty=Tensor[(4, 3, 6), bool] */
}

def @func_14132() -> Tensor[(72), float64] {
  %581 = @func_3769() /* ty=(Tensor[(72), float64],) */;
  %581.0
}

def @func_16949() -> (Tensor[(72), float32],) {
  %582 = @func_8857() /* ty=(Tensor[(8, 5, 4), float64], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32]) */;
  %583 = %582.1;
  (%583,)
}

def @func_8868() -> Tensor[(1274), int32] {
  %585 = fn () -> Tensor[(1274), int32] {
    %584 = @func_2351() /* ty=(Tensor[(72), float32], Tensor[(1274), int32], Tensor[(1274), int32], Tensor[(4, 3, 6), float32]) */;
    %584.2
  };
  %585() /* ty=Tensor[(1274), int32] */
}

def @func_7465(%var_7448: Tensor[(13, 1, 3), float32]) -> Tensor[(13, 1, 3), float32] {
  %586 = cast(%var_7448, dtype="float32") /* ty=Tensor[(13, 1, 3), float32] */;
  sigmoid(%586) /* ty=Tensor[(13, 1, 3), float32] */
}

def @func_16717(%var_16700: Tensor[(770), float32]) -> (Tensor[(72), float32], Tensor[(7, 14, 13), bool], Tensor[(864), float32], Tensor[(770), float32]) {
  %587 = @func_4064() /* ty=(Tensor[(72), float32],) */;
  %588 = cast(meta[relay.Constant][28] /* ty=Tensor[(864), float32] */, dtype="float32") /* ty=Tensor[(864), float32] */;
  %589 = cast(%var_16700, dtype="float32") /* ty=Tensor[(770), float32] */;
  %590 = reshape(%588, newshape=[864]) /* ty=Tensor[(864), float32] */;
  %591 = reshape(%589, newshape=[770]) /* ty=Tensor[(770), float32] */;
  %592 = @func_2594(%590, %591) /* ty=(Tensor[(72), float32], Tensor[(15, 1, 12), float32], Tensor[(180), float32], Tensor[(12, 6, 12), bool], Tensor[(864), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(240), float32], Tensor[(7, 14, 13), bool], Tensor[(770), float32]) */;
  %593 = %587.0;
  %594 = %592.8;
  (%593, %594, meta[relay.Constant][28] /* ty=Tensor[(864), float32] */, %var_16700)
}

def @func_11387() -> Tensor[(72), float32] {
  %595 = @func_5055() /* ty=(Tensor[(1274), int32], Tensor[(72), float32], Tensor[(72), float32]) */;
  %595.1
}

def @func_7665() -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(420), float32], Tensor[(420), float32]) {
  %606 = fn () -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(420), float32], Tensor[(420), float32]) {
    %596 = @func_2931() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
    %597 = @func_7298() /* ty=(Tensor[(72), float32], Tensor[(80), float32]) */;
    %598 = @func_5271() /* ty=(Tensor[(72), float32],) */;
    %599 = cast(meta[relay.Constant][29] /* ty=Tensor[(420), float32] */, dtype="float32") /* ty=Tensor[(420), float32] */;
    %600 = reshape(%599, newshape=[420]) /* ty=Tensor[(420), float32] */;
    %601 = @func_6991(%600) /* ty=(Tensor[(72), float32], Tensor[(2, 15, 14), float64], Tensor[(420), float32]) */;
    %602 = %596.0;
    %603 = %597.0;
    %604 = %598.0;
    %605 = %601.2;
    (%602, %603, %604, %605, meta[relay.Constant][29] /* ty=Tensor[(420), float32] */)
  };
  %606() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(420), float32], Tensor[(420), float32]) */
}

def @func_11389() -> Tensor[(72), float32] {
  @func_11387() /* ty=Tensor[(72), float32] */
}

def @func_14078() -> (Tensor[(72), float32], Tensor[(4, 3, 6), uint8], Tensor[(72), float32]) {
  @func_14076() /* ty=(Tensor[(72), float32], Tensor[(4, 3, 6), uint8], Tensor[(72), float32]) */
}

def @func_4734() -> (Tensor[(48), uint32],) {
  @func_4732() /* ty=(Tensor[(48), uint32],) */
}

def @func_14747() -> Tensor[(72), float32] {
  @func_8369() /* ty=Tensor[(72), float32] */
}

def @func_13575(%var_13558: bool, %var_13559: Tensor[(440), bool], %var_13568: Tensor[(120, 2), float32]) -> (Tensor[(72), float32], Tensor[(4, 11, 10), bool], bool, Tensor[(440), bool], Tensor[(72), float32], Tensor[(120, 2), float32]) {
  %607 = cast(%var_13558, dtype="bool") /* ty=bool */;
  %608 = cast(%var_13559, dtype="bool") /* ty=Tensor[(440), bool] */;
  %609 = reshape(%607, newshape=[]) /* ty=bool */;
  %610 = reshape(%608, newshape=[4, 11, 10]) /* ty=Tensor[(4, 11, 10), bool] */;
  %611 = cast(%var_13568, dtype="float32") /* ty=Tensor[(120, 2), float32] */;
  %612 = reshape(%611, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %613 = @func_8948(%612) /* ty=(Tensor[(72), float32], Tensor[(864), float32], Tensor[(240), float32], Tensor[(864), float32], Tensor[(12, 4), uint32]) */;
  %614 = @func_11704() /* ty=Tensor[(72), float32] */;
  %615 = @func_7983(%609, %610) /* ty=Tensor[(4, 11, 10), bool] */;
  %616 = %613.0;
  (%614, %615, %var_13558, %var_13559, %616, %var_13568)
}

def @func_7507(%var_7505: Tensor[(240), float32]) -> (Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(240), float32]) {
  %617 = @func_6294() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %618 = cast(meta[relay.Constant][30] /* ty=Tensor[(80), float32] */, dtype="float32") /* ty=Tensor[(80), float32] */;
  %619 = cast(%var_7505, dtype="float32") /* ty=Tensor[(240), float32] */;
  %620 = reshape(%618, newshape=[8, 10, 1]) /* ty=Tensor[(8, 10, 1), float32] */;
  %621 = reshape(%619, newshape=[8, 10, 3]) /* ty=Tensor[(8, 10, 3), float32] */;
  %622 = %617.1;
  %623 = @func_1589(%620, %621) /* ty=Tensor[(8, 10, 3), float32] */;
  (%622, %623, meta[relay.Constant][30] /* ty=Tensor[(80), float32] */, %var_7505)
}

def @func_3957(%var_3955: Tensor[(48), uint32], %var_3956: Tensor[(770), float32]) -> (Tensor[(6, 13, 11), float64], Tensor[(8, 5, 4), float64], Tensor[(48), uint32], Tensor[(48), uint32], Tensor[(4, 3, 6), float64], Tensor[(7, 14, 13), bool], Tensor[(1274, 1), int32], Tensor[(7, 10, 11), float32], Tensor[(770), float32], Tensor[(72), float32], Tensor[(72), float32]) {
  %652 = fn (%var_3901: Tensor[(48), uint32], %var_3930: Tensor[(770), float32]) -> (Tensor[(6, 13, 11), float64], Tensor[(8, 5, 4), float64], Tensor[(48), uint32], Tensor[(48), uint32], Tensor[(4, 3, 6), float64], Tensor[(7, 14, 13), bool], Tensor[(1274, 1), int32], Tensor[(7, 10, 11), float32], Tensor[(770), float32], Tensor[(72), float32], Tensor[(72), float32]) {
    %624 = @func_2184() /* ty=(Tensor[(6, 13, 11), float64], Tensor[(4, 3, 6), float32], Tensor[(72), float32]) */;
    %625 = @func_3362() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(8, 5, 4), float64], Tensor[(160), float64]) */;
    %626 = cast(%var_3901, dtype="uint32") /* ty=Tensor[(48), uint32] */;
    %627 = reshape(%626, newshape=[48]) /* ty=Tensor[(48), uint32] */;
    %628 = @func_3079(%627) /* ty=(Tensor[(72), float32], Tensor[(9, 16, 3), uint32], Tensor[(48), uint32], Tensor[(432, 1), uint32]) */;
    %629 = @func_2948() /* ty=(Tensor[(4, 3, 6), float32],) */;
    %630 = %629.0;
    %631 = cast(%630, dtype="float64") /* ty=Tensor[(4, 3, 6), float64] */;
    %632 = cast(meta[relay.Constant][31] /* ty=Tensor[(1274, 1), int32] */, dtype="int32") /* ty=Tensor[(1274, 1), int32] */;
    %633 = cast(meta[relay.Constant][31] /* ty=Tensor[(1274, 1), int32] */, dtype="int32") /* ty=Tensor[(1274, 1), int32] */;
    %634 = reshape(%632, newshape=[7, 14, 13]) /* ty=Tensor[(7, 14, 13), int32] */;
    %635 = reshape(%633, newshape=[7, 14, 13]) /* ty=Tensor[(7, 14, 13), int32] */;
    %636 = @func_45(%634, %635) /* ty=(Tensor[(7, 14, 13), bool],) */;
    %637 = cast(%var_3930, dtype="float32") /* ty=Tensor[(770), float32] */;
    %638 = log(%631) /* ty=Tensor[(4, 3, 6), float64] */;
    %639 = cast(%638, dtype="float32") /* ty=Tensor[(4, 3, 6), float32] */;
    %640 = reshape(%637, newshape=[7, 10, 11]) /* ty=Tensor[(7, 10, 11), float32] */;
    %641 = reshape(%639, newshape=[72]) /* ty=Tensor[(72), float32] */;
    %642 = @func_714(%640, %641) /* ty=(Tensor[(7, 10, 11), float32], Tensor[(7, 14, 13), bool], Tensor[(91, 14), int32], Tensor[(7, 14, 13), bool], Tensor[(4, 3, 6), float32], Tensor[(72), float32], Tensor[(7, 14, 13), float32]) */;
    %643 = @func_2689() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
    %644 = @func_3574() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(24, 10), float32], Tensor[(864), float32], Tensor[(48), uint32], Tensor[(36, 12), uint32], Tensor[(6, 30), float32]) */;
    %645 = %624.0;
    %646 = %625.2;
    %647 = %628.2;
    %648 = %636.0;
    %649 = %642.0;
    %650 = %643.0;
    %651 = %644.2;
    (%645, %646, %647, %var_3901, %638, %648, meta[relay.Constant][31] /* ty=Tensor[(1274, 1), int32] */, %649, %var_3930, %650, %651)
  };
  %652(%var_3955, %var_3956) /* ty=(Tensor[(6, 13, 11), float64], Tensor[(8, 5, 4), float64], Tensor[(48), uint32], Tensor[(48), uint32], Tensor[(4, 3, 6), float64], Tensor[(7, 14, 13), bool], Tensor[(1274, 1), int32], Tensor[(7, 10, 11), float32], Tensor[(770), float32], Tensor[(72), float32], Tensor[(72), float32]) */
}

def @func_5613() -> Tensor[(72), float32] {
  @func_5611() /* ty=Tensor[(72), float32] */
}

def @func_7079(%var_7078: Tensor[(13, 5, 3), float64]) -> Tensor[(13, 5, 3), float64] {
  %654 = fn (%var_7072: Tensor[(13, 5, 3), float64]) -> Tensor[(13, 5, 3), float64] {
    %653 = cast(%var_7072, dtype="float64") /* ty=Tensor[(13, 5, 3), float64] */;
    tan(%653) /* ty=Tensor[(13, 5, 3), float64] */
  };
  %654(%var_7078) /* ty=Tensor[(13, 5, 3), float64] */
}

def @func_2722() -> (Tensor[(6, 13, 11), float64], Tensor[(72), float32]) {
  %658 = fn () -> (Tensor[(6, 13, 11), float64], Tensor[(72), float32]) {
    %655 = @func_2184() /* ty=(Tensor[(6, 13, 11), float64], Tensor[(4, 3, 6), float32], Tensor[(72), float32]) */;
    %656 = %655.0;
    %657 = @func_2525() /* ty=Tensor[(72), float32] */;
    (%656, %657)
  };
  %658() /* ty=(Tensor[(6, 13, 11), float64], Tensor[(72), float32]) */
}

def @func_7527(%var_7526: Tensor[(13, 16, 11), float64]) -> Tensor[(13, 16, 11), float64] {
  %660 = fn (%var_7512: Tensor[(13, 16, 11), float64]) -> Tensor[(13, 16, 11), float64] {
    %659 = cast(%var_7512, dtype="float64") /* ty=Tensor[(13, 16, 11), float64] */;
    cos(%659) /* ty=Tensor[(13, 16, 11), float64] */
  };
  %660(%var_7526) /* ty=Tensor[(13, 16, 11), float64] */
}

def @func_8248() -> (Tensor[(8, 5, 4), float64], Tensor[(72), float32]) {
  %665 = fn () -> (Tensor[(8, 5, 4), float64], Tensor[(72), float32]) {
    %661 = @func_3362() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(8, 5, 4), float64], Tensor[(160), float64]) */;
    %662 = @func_4235() /* ty=(Tensor[(72), float32], Tensor[(48), uint32], Tensor[(48), uint32]) */;
    %663 = %661.2;
    %664 = %662.0;
    (%663, %664)
  };
  %665() /* ty=(Tensor[(8, 5, 4), float64], Tensor[(72), float32]) */
}

def @func_13297(%var_13274: Tensor[(14, 16, 15), float64], %var_13290: Tensor[(1274), int32]) -> (Tensor[(14, 16, 15), float64], Tensor[(7, 14, 13), bool], Tensor[(1274), int32], Tensor[(72), float32]) {
  %666 = cast(%var_13274, dtype="float64") /* ty=Tensor[(14, 16, 15), float64] */;
  %667 = log10(%666) /* ty=Tensor[(14, 16, 15), float64] */;
  %668 = cast(%667, dtype="float64") /* ty=Tensor[(14, 16, 15), float64] */;
  %669 = cast(%var_13290, dtype="int32") /* ty=Tensor[(1274), int32] */;
  %670 = cast(%var_13290, dtype="int32") /* ty=Tensor[(1274), int32] */;
  %671 = reshape(%669, newshape=[7, 14, 13]) /* ty=Tensor[(7, 14, 13), int32] */;
  %672 = reshape(%670, newshape=[7, 14, 13]) /* ty=Tensor[(7, 14, 13), int32] */;
  %673 = @func_45(%671, %672) /* ty=(Tensor[(7, 14, 13), bool],) */;
  %674 = @func_13105() /* ty=(Tensor[(864), float32], Tensor[(72), float32], Tensor[(14, 5, 12), bool], Tensor[(840), float32], Tensor[(72), float32], Tensor[(72), float32]) */;
  %675 = rsqrt(%668) /* ty=Tensor[(14, 16, 15), float64] */;
  %676 = %673.0;
  %677 = %674.4;
  (%675, %676, %var_13290, %677)
}

def @func_3118() -> (Tensor[(72), float32], Tensor[(72), float32]) {
  %682 = fn () -> (Tensor[(72), float32], Tensor[(72), float32]) {
    %678 = @func_2881() /* ty=(Tensor[(72), float32], Tensor[(1274), int32]) */;
    %679 = @func_2842() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
    %680 = %678.0;
    %681 = %679.0;
    (%680, %681)
  };
  %682() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */
}

def @func_8152() -> (Tensor[(72), float32], Tensor[(4, 3, 6), float32], Tensor[(48), uint32], Tensor[(4, 3, 6), float32], Tensor[(72), float32], Tensor[(48), uint32]) {
  @func_8150() /* ty=(Tensor[(72), float32], Tensor[(4, 3, 6), float32], Tensor[(48), uint32], Tensor[(4, 3, 6), float32], Tensor[(72), float32], Tensor[(48), uint32]) */
}

def @func_1725(%var_1724: Tensor[(2, 15, 14), float32]) -> (Tensor[(2, 15, 14), float64],) {
  %687 = fn (%var_1715: Tensor[(2, 15, 14), float32]) -> (Tensor[(2, 15, 14), float64],) {
    %683 = cast(%var_1715, dtype="float32") /* ty=Tensor[(2, 15, 14), float32] */;
    %684 = sigmoid(%683) /* ty=Tensor[(2, 15, 14), float32] */;
    %685 = cast(%684, dtype="float64") /* ty=Tensor[(2, 15, 14), float64] */;
    %686 = log10(%685) /* ty=Tensor[(2, 15, 14), float64] */;
    (%686,)
  };
  %687(%var_1724) /* ty=(Tensor[(2, 15, 14), float64],) */
}

def @func_5099() -> (Tensor[(72), float32], Tensor[(864), float32]) {
  %692 = fn () -> (Tensor[(72), float32], Tensor[(864), float32]) {
    %688 = @func_2931() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
    %689 = @func_4821() /* ty=(Tensor[(864), float32], Tensor[(48), uint32]) */;
    %690 = %688.1;
    %691 = %689.0;
    (%690, %691)
  };
  %692() /* ty=(Tensor[(72), float32], Tensor[(864), float32]) */
}

def @func_5440(%var_5439: Tensor[(4, 3, 6), float32]) -> (Tensor[(4, 3, 6), float64],) {
  %699 = fn (%var_5433: Tensor[(4, 3, 6), float32]) -> (Tensor[(4, 3, 6), float64],) {
    %693 = @func_4368() /* ty=Tensor[(4, 3, 6), float32] */;
    %694 = cast(%var_5433, dtype="float64") /* ty=Tensor[(4, 3, 6), float64] */;
    %695 = shape_of(%693, dtype="int32") /* ty=Tensor[(3), int32] */;
    %696 = cast(%693, dtype="float64") /* ty=Tensor[(4, 3, 6), float64] */;
    %697 = dyn.reshape(%694, %695, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %698 = maximum(%696, %697) /* ty=Tensor[(4, 3, 6), float64] */;
    (%698,)
  };
  %699(%var_5439) /* ty=(Tensor[(4, 3, 6), float64],) */
}

def @func_7021() -> (Tensor[(72), float32],) {
  %700 = @func_2689() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %701 = %700.1;
  (%701,)
}

def @func_2525() -> Tensor[(72), float32] {
  %702 = @func_2351() /* ty=(Tensor[(72), float32], Tensor[(1274), int32], Tensor[(1274), int32], Tensor[(4, 3, 6), float32]) */;
  %702.0
}

def @func_3152() -> (Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(240), float32]) {
  %709 = fn () -> (Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(240), float32]) {
    %703 = cast(meta[relay.Constant][32] /* ty=Tensor[(80), float32] */, dtype="float32") /* ty=Tensor[(80), float32] */;
    %704 = cast(meta[relay.Constant][33] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
    %705 = reshape(%703, newshape=[8, 10, 1]) /* ty=Tensor[(8, 10, 1), float32] */;
    %706 = reshape(%704, newshape=[8, 10, 3]) /* ty=Tensor[(8, 10, 3), float32] */;
    %707 = @func_2525() /* ty=Tensor[(72), float32] */;
    %708 = @func_1589(%705, %706) /* ty=Tensor[(8, 10, 3), float32] */;
    (%707, %708, meta[relay.Constant][32] /* ty=Tensor[(80), float32] */, meta[relay.Constant][33] /* ty=Tensor[(240), float32] */)
  };
  %709() /* ty=(Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(240), float32]) */
}

def @func_7435() -> Tensor[(72), float64] {
  @func_7433() /* ty=Tensor[(72), float64] */
}

def @func_11511() -> (Tensor[(72), float32], Tensor[(72), float32]) {
  %710 = @func_11364() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(770, 1), float32]) */;
  %711 = @func_6699() /* ty=(Tensor[(72), float32],) */;
  %712 = %710.0;
  %713 = %711.0;
  (%712, %713)
}

def @func_3102(%var_3100: Tensor[(8, 5, 4), float64]) -> Tensor[(8, 5, 4), float64] {
  @func_3099(%var_3100) /* ty=Tensor[(8, 5, 4), float64] */
}

def @func_8449() -> Tensor[(72), float32] {
  %714 = @func_5488() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %714.1
}

def @func_10145() -> Tensor[(72), float32] {
  @func_10143() /* ty=Tensor[(72), float32] */
}

def @func_714(%var_624: Tensor[(7, 10, 11), float32], %var_666: Tensor[(72), float32]) -> (Tensor[(7, 10, 11), float32], Tensor[(7, 14, 13), bool], Tensor[(91, 14), int32], Tensor[(7, 14, 13), bool], Tensor[(4, 3, 6), float32], Tensor[(72), float32], Tensor[(7, 14, 13), float32]) {
  %715 = cast(%var_624, dtype="float32") /* ty=Tensor[(7, 10, 11), float32] */;
  %716 = cast(meta[relay.Constant][34] /* ty=Tensor[(91, 14), int32] */, dtype="int32") /* ty=Tensor[(91, 14), int32] */;
  %717 = cast(meta[relay.Constant][34] /* ty=Tensor[(91, 14), int32] */, dtype="int32") /* ty=Tensor[(91, 14), int32] */;
  %718 = reshape(%716, newshape=[7, 14, 13]) /* ty=Tensor[(7, 14, 13), int32] */;
  %719 = reshape(%717, newshape=[7, 14, 13]) /* ty=Tensor[(7, 14, 13), int32] */;
  %720 = @func_45(%718, %719) /* ty=(Tensor[(7, 14, 13), bool],) */;
  %721 = cast(meta[relay.Constant][34] /* ty=Tensor[(91, 14), int32] */, dtype="int32") /* ty=Tensor[(91, 14), int32] */;
  %722 = %720.0;
  %723 = cast(%722, dtype="int32") /* ty=Tensor[(7, 14, 13), int32] */;
  %724 = cast(meta[relay.Constant][34] /* ty=Tensor[(91, 14), int32] */, dtype="int32") /* ty=Tensor[(91, 14), int32] */;
  %725 = reshape(%723, newshape=[7, 14, 13]) /* ty=Tensor[(7, 14, 13), int32] */;
  %726 = reshape(%724, newshape=[7, 14, 13]) /* ty=Tensor[(7, 14, 13), int32] */;
  %727 = @func_45(%725, %726) /* ty=(Tensor[(7, 14, 13), bool],) */;
  %728 = %727.0;
  %729 = cast(%728, dtype="int32") /* ty=Tensor[(7, 14, 13), int32] */;
  %730 = reshape(%721, newshape=[7, 14, 13]) /* ty=Tensor[(7, 14, 13), int32] */;
  %731 = reshape(%729, newshape=[7, 14, 13]) /* ty=Tensor[(7, 14, 13), int32] */;
  %732 = @func_45(%730, %731) /* ty=(Tensor[(7, 14, 13), bool],) */;
  %733 = cast(%var_666, dtype="float32") /* ty=Tensor[(72), float32] */;
  %734 = reshape(%733, newshape=[4, 3, 6]) /* ty=Tensor[(4, 3, 6), float32] */;
  %735 = cast(%728, dtype="float32") /* ty=Tensor[(7, 14, 13), float32] */;
  %736 = sigmoid(%715) /* ty=Tensor[(7, 10, 11), float32] */;
  %737 = %732.0;
  %738 = @func_579(%734) /* ty=Tensor[(4, 3, 6), float32] */;
  %739 = atanh(%735) /* ty=Tensor[(7, 14, 13), float32] */;
  (%736, %722, meta[relay.Constant][34] /* ty=Tensor[(91, 14), int32] */, %737, %738, %var_666, %739)
}

def @func_6295() -> (Tensor[(72), float32], Tensor[(72), float32]) {
  %743 = fn () -> (Tensor[(72), float32], Tensor[(72), float32]) {
    %740 = @func_3117() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
    %741 = @func_5175() /* ty=Tensor[(72), float32] */;
    %742 = %740.1;
    (%741, %742)
  };
  %743() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */
}

def @func_14392() -> (Tensor[(4, 3, 6), float32], Tensor[(72), float32]) {
  @func_14390() /* ty=(Tensor[(4, 3, 6), float32], Tensor[(72), float32]) */
}

def @func_4732() -> (Tensor[(48), uint32],) {
  %744 = @func_4235() /* ty=(Tensor[(72), float32], Tensor[(48), uint32], Tensor[(48), uint32]) */;
  %745 = %744.2;
  (%745,)
}

def @func_14278() -> Tensor[(72), float32] {
  %747 = fn () -> Tensor[(72), float32] {
    %746 = @func_5098() /* ty=(Tensor[(72), float32], Tensor[(864), float32]) */;
    %746.0
  };
  %747() /* ty=Tensor[(72), float32] */
}

def @func_12171() -> Tensor[(72), float32] {
  @func_12169() /* ty=Tensor[(72), float32] */
}

def @func_13196() -> (Tensor[(72), float32], Tensor[(4, 60), int64], Tensor[(180), float32], Tensor[(120, 2), bool]) {
  %763 = fn () -> (Tensor[(72), float32], Tensor[(4, 60), int64], Tensor[(180), float32], Tensor[(120, 2), bool]) {
    %748 = @func_13058() /* ty=(Tensor[(72), float32],) */;
    %749 = cast(meta[relay.Constant][35] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
    %750 = cast(meta[relay.Constant][36] /* ty=Tensor[(120, 2), float32] */, dtype="float32") /* ty=Tensor[(120, 2), float32] */;
    %751 = reshape(%749, newshape=[180, 1]) /* ty=Tensor[(180, 1), float32] */;
    %752 = reshape(%750, newshape=[4, 60]) /* ty=Tensor[(4, 60), float32] */;
    %753 = @func_7959(%751, %752) /* ty=(Tensor[(420), float32], Tensor[(4, 3, 6), float32], Tensor[(72), float32], Tensor[(180, 1), float32], Tensor[(4, 60), int64]) */;
    %754 = cast(meta[relay.Constant][36] /* ty=Tensor[(120, 2), float32] */, dtype="float32") /* ty=Tensor[(120, 2), float32] */;
    %755 = sigmoid(%754) /* ty=Tensor[(120, 2), float32] */;
    %756 = cast(%755, dtype="bool") /* ty=Tensor[(120, 2), bool] */;
    %757 = shape_of(meta[relay.Constant][36] /* ty=Tensor[(120, 2), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %758 = cast(meta[relay.Constant][36] /* ty=Tensor[(120, 2), float32] */, dtype="bool") /* ty=Tensor[(120, 2), bool] */;
    %759 = dyn.reshape(%756, %757, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %760 = %748.0;
    %761 = %753.4;
    %762 = equal(%758, %759) /* ty=Tensor[(120, 2), bool] */;
    (%760, %761, meta[relay.Constant][35] /* ty=Tensor[(180), float32] */, %762)
  };
  %763() /* ty=(Tensor[(72), float32], Tensor[(4, 60), int64], Tensor[(180), float32], Tensor[(120, 2), bool]) */
}

def @func_13996() -> Tensor[(72), float32] {
  %765 = fn () -> Tensor[(72), float32] {
    %764 = @func_5241() /* ty=(Tensor[(1274), int32], Tensor[(72), float32]) */;
    %764.1
  };
  %765() /* ty=Tensor[(72), float32] */
}

def @func_11723() -> Tensor[(72), float32] {
  @func_3698() /* ty=Tensor[(72), float32] */
}

def @func_7841(%var_7839: Tensor[(195), float64]) -> (Tensor[(8, 10, 3), float32], Tensor[(72), float32], Tensor[(13, 5, 3), float64], Tensor[(195), float64]) {
  @func_7838(%var_7839) /* ty=(Tensor[(8, 10, 3), float32], Tensor[(72), float32], Tensor[(13, 5, 3), float64], Tensor[(195), float64]) */
}

def @func_12060() -> (Tensor[(72), float32],) {
  @func_12058() /* ty=(Tensor[(72), float32],) */
}

def @func_11915() -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(864), float32]) {
  %766 = cast(meta[relay.Constant][37] /* ty=Tensor[(864), float32] */, dtype="float32") /* ty=Tensor[(864), float32] */;
  %767 = reshape(%766, newshape=[36, 24]) /* ty=Tensor[(36, 24), float32] */;
  %768 = @func_6657(%767) /* ty=(Tensor[(48), uint32], Tensor[(48), uint32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(48), uint32], Tensor[(180), float32], Tensor[(72), float32], Tensor[(36, 24), float32], Tensor[(72), float32]) */;
  %769 = @func_5175() /* ty=Tensor[(72), float32] */;
  %770 = %768.9;
  (%769, %770, meta[relay.Constant][37] /* ty=Tensor[(864), float32] */)
}

def @func_9793() -> (Tensor[(72), float32], Tensor[(1274), int32]) {
  @func_9791() /* ty=(Tensor[(72), float32], Tensor[(1274), int32]) */
}

def @func_12373() -> (Tensor[(1274), int32], Tensor[(72), float32]) {
  %775 = fn () -> (Tensor[(1274), int32], Tensor[(72), float32]) {
    %771 = @func_2881() /* ty=(Tensor[(72), float32], Tensor[(1274), int32]) */;
    %772 = @func_11848() /* ty=(Tensor[(72), float32],) */;
    %773 = %771.1;
    %774 = %772.0;
    (%773, %774)
  };
  %775() /* ty=(Tensor[(1274), int32], Tensor[(72), float32]) */
}

def @func_15022() -> (Tensor[(864), float32], Tensor[(4, 3, 6), uint8], Tensor[(72), float32]) {
  %776 = @func_12828() /* ty=(Tensor[(72), float32], Tensor[(864), float32]) */;
  %777 = cast(meta[relay.Constant][38] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %778 = reshape(%777, newshape=[4, 3, 6]) /* ty=Tensor[(4, 3, 6), float32] */;
  %779 = @func_9926(%778) /* ty=(Tensor[(4, 3, 6), uint8],) */;
  %780 = %776.1;
  %781 = %779.0;
  (%780, %781, meta[relay.Constant][38] /* ty=Tensor[(72), float32] */)
}

def @func_14881(%var_14879: Tensor[(864), float32]) -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(240), float32], Tensor[(864), bool], Tensor[(1274), int32], Tensor[(72), float32], Tensor[(72), float32]) {
  @func_14878(%var_14879) /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(240), float32], Tensor[(864), bool], Tensor[(1274), int32], Tensor[(72), float32], Tensor[(72), float32]) */
}

def @func_6994(%var_6992: Tensor[(420), float32]) -> (Tensor[(72), float32], Tensor[(2, 15, 14), float64], Tensor[(420), float32]) {
  @func_6991(%var_6992) /* ty=(Tensor[(72), float32], Tensor[(2, 15, 14), float64], Tensor[(420), float32]) */
}

def @func_15467() -> (Tensor[(72), float32],) {
  %782 = @func_11364() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(770, 1), float32]) */;
  %783 = %782.0;
  (%783,)
}

def @func_15641() -> (Tensor[(4, 3, 6), float32],) {
  %785 = fn () -> (Tensor[(4, 3, 6), float32],) {
    %784 = @func_14315() /* ty=Tensor[(4, 3, 6), float32] */;
    (%784,)
  };
  %785() /* ty=(Tensor[(4, 3, 6), float32],) */
}

def @func_2594(%var_2550: Tensor[(864), float32], %var_2575: Tensor[(770), float32]) -> (Tensor[(72), float32], Tensor[(15, 1, 12), float32], Tensor[(180), float32], Tensor[(12, 6, 12), bool], Tensor[(864), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(240), float32], Tensor[(7, 14, 13), bool], Tensor[(770), float32]) {
  %786 = @func_2351() /* ty=(Tensor[(72), float32], Tensor[(1274), int32], Tensor[(1274), int32], Tensor[(4, 3, 6), float32]) */;
  %787 = cast(meta[relay.Constant][39] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %788 = reshape(%787, newshape=[15, 1, 12]) /* ty=Tensor[(15, 1, 12), float32] */;
  %789 = cast(%var_2550, dtype="float32") /* ty=Tensor[(864), float32] */;
  %790 = reshape(%789, newshape=[12, 6, 12]) /* ty=Tensor[(12, 6, 12), float32] */;
  %791 = cast(meta[relay.Constant][40] /* ty=Tensor[(80), float32] */, dtype="float32") /* ty=Tensor[(80), float32] */;
  %792 = cast(meta[relay.Constant][41] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %793 = reshape(%791, newshape=[8, 10, 1]) /* ty=Tensor[(8, 10, 1), float32] */;
  %794 = reshape(%792, newshape=[8, 10, 3]) /* ty=Tensor[(8, 10, 3), float32] */;
  %795 = cast(%var_2575, dtype="float32") /* ty=Tensor[(770), float32] */;
  %796 = %786.0;
  %797 = cast(%796, dtype="float32") /* ty=Tensor[(72), float32] */;
  %798 = reshape(%795, newshape=[7, 10, 11]) /* ty=Tensor[(7, 10, 11), float32] */;
  %799 = reshape(%797, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %800 = @func_714(%798, %799) /* ty=(Tensor[(7, 10, 11), float32], Tensor[(7, 14, 13), bool], Tensor[(91, 14), int32], Tensor[(7, 14, 13), bool], Tensor[(4, 3, 6), float32], Tensor[(72), float32], Tensor[(7, 14, 13), float32]) */;
  %801 = @func_1378(%788) /* ty=Tensor[(15, 1, 12), float32] */;
  %802 = @func_790(%790) /* ty=Tensor[(12, 6, 12), bool] */;
  %803 = @func_1589(%793, %794) /* ty=Tensor[(8, 10, 3), float32] */;
  %804 = %800.3;
  (%796, %801, meta[relay.Constant][39] /* ty=Tensor[(180), float32] */, %802, %var_2550, %803, meta[relay.Constant][40] /* ty=Tensor[(80), float32] */, meta[relay.Constant][41] /* ty=Tensor[(240), float32] */, %804, %var_2575)
}

def @func_11219(%var_11217: Tensor[(1008), float32], %var_11218: Tensor[(48), uint32]) -> (Tensor[(4, 3, 9), float32], Tensor[(72), float32], Tensor[(1008), float32], Tensor[(48), uint32], Tensor[(72), float32], Tensor[(4, 3, 6), bool]) {
  @func_11215(%var_11217, %var_11218) /* ty=(Tensor[(4, 3, 9), float32], Tensor[(72), float32], Tensor[(1008), float32], Tensor[(48), uint32], Tensor[(72), float32], Tensor[(4, 3, 6), bool]) */
}

def @func_16890() -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32]) {
  %810 = fn () -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32]) {
    %805 = @func_11915() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(864), float32]) */;
    %806 = @func_3151() /* ty=(Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(240), float32]) */;
    %807 = %805.0;
    %808 = %806.0;
    %809 = @func_10699() /* ty=Tensor[(72), float32] */;
    (%807, %808, %809)
  };
  %810() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32]) */
}

def @func_16831() -> (Tensor[(240), float32],) {
  %811 = @func_4005() /* ty=(Tensor[(72), float32], Tensor[(240), float32]) */;
  %812 = %811.1;
  (%812,)
}

def @func_16674() -> (Tensor[(72), float32], Tensor[(8, 5, 4), float64], Tensor[(72), float32]) {
  %813 = @func_12135() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32]) */;
  %814 = @func_8247() /* ty=(Tensor[(8, 5, 4), float64], Tensor[(72), float32]) */;
  %815 = @func_11511() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %816 = %813.2;
  %817 = %814.0;
  %818 = %815.1;
  (%816, %817, %818)
}

def @func_5466(%var_5464: Tensor[(12, 1, 8), float32], %var_5465: Tensor[(80), float32]) -> (Tensor[(12, ?, 8), bool], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(240), float32]) {
  @func_5462(%var_5464, %var_5465) /* ty=(Tensor[(12, ?, 8), bool], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(240), float32]) */
}

def @func_17430(%var_17424: Tensor[(2, 504), float32]) -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(2, 504), float32]) {
  %819 = cast(%var_17424, dtype="float32") /* ty=Tensor[(2, 504), float32] */;
  %820 = reshape(%819, newshape=[252, 4]) /* ty=Tensor[(252, 4), float32] */;
  %821 = @func_12984(%820) /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(4, 3, 9), float32], Tensor[(252, 4), float32], Tensor[(48), uint32], Tensor[(80), float32]) */;
  %822 = @func_12005() /* ty=Tensor[(72), float32] */;
  %823 = %821.0;
  (%822, %823, %var_17424)
}

def @func_4286() -> (Tensor[(72), float32], Tensor[(7, 14, 13), bool], Tensor[(1274), int32]) {
  @func_4284() /* ty=(Tensor[(72), float32], Tensor[(7, 14, 13), bool], Tensor[(1274), int32]) */
}

def @func_6660(%var_6658: Tensor[(36, 24), float32]) -> (Tensor[(48), uint32], Tensor[(48), uint32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(48), uint32], Tensor[(180), float32], Tensor[(72), float32], Tensor[(36, 24), float32], Tensor[(72), float32]) {
  @func_6657(%var_6658) /* ty=(Tensor[(48), uint32], Tensor[(48), uint32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(48), uint32], Tensor[(180), float32], Tensor[(72), float32], Tensor[(36, 24), float32], Tensor[(72), float32]) */
}

def @func_3872() -> (Tensor[(4, 3, 6), float32], Tensor[(1274), int32]) {
  @func_3870() /* ty=(Tensor[(4, 3, 6), float32], Tensor[(1274), int32]) */
}

def @func_5931(%var_5930: Tensor[(864, 1), float32]) -> (Tensor[(72), float32], Tensor[(864), float32], Tensor[(72), float32], Tensor[(864, ?), uint32]) {
  %838 = fn (%var_5898: Tensor[(864, 1), float32]) -> (Tensor[(72), float32], Tensor[(864), float32], Tensor[(72), float32], Tensor[(864, ?), uint32]) {
    %824 = cast(%var_5898, dtype="float32") /* ty=Tensor[(864, 1), float32] */;
    %825 = reshape(%824, newshape=[864]) /* ty=Tensor[(864), float32] */;
    %826 = @func_2001(%825) /* ty=(Tensor[(6, 3, 4), float64], Tensor[(12, 6, 12), bool], Tensor[(864), float32]) */;
    %827 = @func_3362() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(8, 5, 4), float64], Tensor[(160), float64]) */;
    %828 = cast(%var_5898, dtype="float32") /* ty=Tensor[(864, 1), float32] */;
    %829 = log10(%828) /* ty=Tensor[(864, 1), float32] */;
    %830 = cast(%var_5898, dtype="uint32") /* ty=Tensor[(864, 1), uint32] */;
    %831 = shape_of(%829, dtype="int32") /* ty=Tensor[(2), int32] */;
    %832 = cast(%829, dtype="uint32") /* ty=Tensor[(864, 1), uint32] */;
    %833 = dyn.reshape(%830, %831, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
    %834 = @func_2978() /* ty=Tensor[(72), float32] */;
    %835 = %826.2;
    %836 = %827.0;
    %837 = subtract(%832, %833) /* ty=Tensor[(864, ?), uint32] */;
    (%834, %835, %836, %837)
  };
  %838(%var_5930) /* ty=(Tensor[(72), float32], Tensor[(864), float32], Tensor[(72), float32], Tensor[(864, ?), uint32]) */
}

def @func_16833() -> (Tensor[(240), float32],) {
  @func_16831() /* ty=(Tensor[(240), float32],) */
}

def @main(%var_19219: Tensor[(15, 13, 7), uint16]) -> (Tensor[(15, 13, 7), uint16],) {
  %839 = cast(meta[relay.Constant][42] /* ty=Tensor[(15, 13, 7), uint16] */, dtype="uint16") /* ty=Tensor[(15, 13, 7), uint16] */;
  %840 = shape_of(%var_19219, dtype="int32") /* ty=Tensor[(3), int32] */;
  %841 = cast(%var_19219, dtype="uint16") /* ty=Tensor[(15, 13, 7), uint16] */;
  %842 = dyn.reshape(%839, %840, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %843 = bitwise_or(%841, %842) /* ty=Tensor[(15, 13, 7), uint16] */;
  (%843,)
}

def @func_13487() -> (Tensor[(72), float32],) {
  %844 = @func_12058() /* ty=(Tensor[(72), float32],) */;
  %845 = %844.0;
  (%845,)
}

def @func_4552() -> Tensor[(240), float32] {
  @func_4550() /* ty=Tensor[(240), float32] */
}

def @func_16306() -> (Tensor[(72), float32], Tensor[(1274), int32]) {
  %850 = fn () -> (Tensor[(72), float32], Tensor[(1274), int32]) {
    %846 = @func_15980() /* ty=(Tensor[(72), float32],) */;
    %847 = @func_8390() /* ty=(Tensor[(1274), int32], Tensor[(1274), int32], Tensor[(4, 3, 6), float32]) */;
    %848 = %846.0;
    %849 = %847.1;
    (%848, %849)
  };
  %850() /* ty=(Tensor[(72), float32], Tensor[(1274), int32]) */
}

def @func_5997() -> (Tensor[(4, 3, 6), float32], Tensor[(72), float32]) {
  %854 = fn () -> (Tensor[(4, 3, 6), float32], Tensor[(72), float32]) {
    %851 = @func_4461() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32]) */;
    %852 = %851.2;
    %853 = @func_4056() /* ty=Tensor[(72), float32] */;
    (%852, %853)
  };
  %854() /* ty=(Tensor[(4, 3, 6), float32], Tensor[(72), float32]) */
}

def @func_18795() -> (Tensor[(1274), int32],) {
  %857 = fn () -> (Tensor[(1274), int32],) {
    %855 = @func_12372() /* ty=(Tensor[(1274), int32], Tensor[(72), float32]) */;
    %856 = %855.0;
    (%856,)
  };
  %857() /* ty=(Tensor[(1274), int32],) */
}

def @func_5242() -> (Tensor[(1274), int32], Tensor[(72), float32]) {
  %862 = fn () -> (Tensor[(1274), int32], Tensor[(72), float32]) {
    %858 = @func_2351() /* ty=(Tensor[(72), float32], Tensor[(1274), int32], Tensor[(1274), int32], Tensor[(4, 3, 6), float32]) */;
    %859 = @func_4284() /* ty=(Tensor[(72), float32], Tensor[(7, 14, 13), bool], Tensor[(1274), int32]) */;
    %860 = %858.2;
    %861 = %859.0;
    (%860, %861)
  };
  %862() /* ty=(Tensor[(1274), int32], Tensor[(72), float32]) */
}

def @func_10460() -> Tensor[(72), float32] {
  %864 = fn () -> Tensor[(72), float32] {
    %863 = @func_6699() /* ty=(Tensor[(72), float32],) */;
    %863.0
  };
  %864() /* ty=Tensor[(72), float32] */
}

def @func_8451() -> Tensor[(72), float32] {
  @func_8449() /* ty=Tensor[(72), float32] */
}

def @func_7558(%var_7556: Tensor[(7, 9, 15), int8]) -> Tensor[(7, 9, 15), int8] {
  @func_7555(%var_7556) /* ty=Tensor[(7, 9, 15), int8] */
}

def @func_11927() -> (Tensor[(72), float32],) {
  %866 = fn () -> (Tensor[(72), float32],) {
    %865 = @func_2525() /* ty=Tensor[(72), float32] */;
    (%865,)
  };
  %866() /* ty=(Tensor[(72), float32],) */
}

def @func_18522() -> (Tensor[(4, 3, 6), float32], Tensor[(4, 3, 9), bool]) {
  %867 = @func_2948() /* ty=(Tensor[(4, 3, 6), float32],) */;
  %868 = %867.0;
  %869 = @func_9243() /* ty=Tensor[(4, 3, 9), bool] */;
  (%868, %869)
}

def @func_2950() -> (Tensor[(4, 3, 6), float32],) {
  @func_2948() /* ty=(Tensor[(4, 3, 6), float32],) */
}

def @func_9585() -> Tensor[(1274), int32] {
  %871 = fn () -> Tensor[(1274), int32] {
    %870 = @func_7371() /* ty=(Tensor[(1274), int32],) */;
    %870.0
  };
  %871() /* ty=Tensor[(1274), int32] */
}

def @func_12553(%var_12551: uint16) -> (Tensor[(3, 6, 5), uint16], Tensor[(14, 5, 12), bool], Tensor[(12, 70), float32], Tensor[(72), float32]) {
  @func_12550(%var_12551) /* ty=(Tensor[(3, 6, 5), uint16], Tensor[(14, 5, 12), bool], Tensor[(12, 70), float32], Tensor[(72), float32]) */
}

def @func_13058() -> (Tensor[(72), float32],) {
  %872 = @func_5055() /* ty=(Tensor[(1274), int32], Tensor[(72), float32], Tensor[(72), float32]) */;
  %873 = %872.2;
  (%873,)
}

def @func_2740() -> Tensor[(72), float32] {
  %874 = fn () -> Tensor[(72), float32] {
    @func_2525() /* ty=Tensor[(72), float32] */
  };
  %874() /* ty=Tensor[(72), float32] */
}

def @func_3492(%var_3490: Tensor[(180), float32]) -> (Tensor[(72), float32], Tensor[(1274), int32], Tensor[(15, ?, 12), int16], Tensor[(72), float32], Tensor[(72), float32]) {
  @func_3489(%var_3490) /* ty=(Tensor[(72), float32], Tensor[(1274), int32], Tensor[(15, ?, 12), int16], Tensor[(72), float32], Tensor[(72), float32]) */
}

def @func_582(%var_580: Tensor[(4, 3, 6), float32]) -> Tensor[(4, 3, 6), float32] {
  @func_579(%var_580) /* ty=Tensor[(4, 3, 6), float32] */
}

def @func_8150() -> (Tensor[(72), float32], Tensor[(4, 3, 6), float32], Tensor[(48), uint32], Tensor[(4, 3, 6), float32], Tensor[(72), float32], Tensor[(48), uint32]) {
  %875 = @func_5098() /* ty=(Tensor[(72), float32], Tensor[(864), float32]) */;
  %876 = @func_5507() /* ty=(Tensor[(72), float32], Tensor[(4, 3, 6), float32]) */;
  %877 = @func_4732() /* ty=(Tensor[(48), uint32],) */;
  %878 = @func_2948() /* ty=(Tensor[(4, 3, 6), float32],) */;
  %879 = @func_6699() /* ty=(Tensor[(72), float32],) */;
  %880 = @func_6432() /* ty=(Tensor[(72), float32], Tensor[(864), float32], Tensor[(180), float32], Tensor[(48), uint32]) */;
  %881 = %875.0;
  %882 = %876.1;
  %883 = %877.0;
  %884 = %878.0;
  %885 = %879.0;
  %886 = %880.3;
  (%881, %882, %883, %884, %885, %886)
}

def @func_10961(%var_10960: Tensor[(14, 13, 13), float32]) -> Tensor[(14, 13, 13), float32] {
  %888 = fn (%var_10948: Tensor[(14, 13, 13), float32]) -> Tensor[(14, 13, 13), float32] {
    %887 = cast(%var_10948, dtype="float32") /* ty=Tensor[(14, 13, 13), float32] */;
    asinh(%887) /* ty=Tensor[(14, 13, 13), float32] */
  };
  %888(%var_10960) /* ty=Tensor[(14, 13, 13), float32] */
}

def @func_6699() -> (Tensor[(72), float32],) {
  %889 = @func_6228() /* ty=(Tensor[(72), float32],) */;
  %890 = %889.0;
  (%890,)
}

def @func_5508() -> (Tensor[(72), float32], Tensor[(4, 3, 6), float32]) {
  %895 = fn () -> (Tensor[(72), float32], Tensor[(4, 3, 6), float32]) {
    %891 = @func_3574() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(24, 10), float32], Tensor[(864), float32], Tensor[(48), uint32], Tensor[(36, 12), uint32], Tensor[(6, 30), float32]) */;
    %892 = @func_2184() /* ty=(Tensor[(6, 13, 11), float64], Tensor[(4, 3, 6), float32], Tensor[(72), float32]) */;
    %893 = %891.2;
    %894 = %892.1;
    (%893, %894)
  };
  %895() /* ty=(Tensor[(72), float32], Tensor[(4, 3, 6), float32]) */
}

def @func_6434() -> (Tensor[(72), float32], Tensor[(864), float32], Tensor[(180), float32], Tensor[(48), uint32]) {
  @func_6432() /* ty=(Tensor[(72), float32], Tensor[(864), float32], Tensor[(180), float32], Tensor[(48), uint32]) */
}

def @func_18022() -> Tensor[(4, 3, 6), float32] {
  %896 = fn () -> Tensor[(4, 3, 6), float32] {
    @func_14315() /* ty=Tensor[(4, 3, 6), float32] */
  };
  %896() /* ty=Tensor[(4, 3, 6), float32] */
}

def @func_11850() -> (Tensor[(72), float32],) {
  @func_11848() /* ty=(Tensor[(72), float32],) */
}

def @func_16359() -> (Tensor[(80), float32], Tensor[(72), float32]) {
  %900 = fn () -> (Tensor[(80), float32], Tensor[(72), float32]) {
    %897 = @func_12035() /* ty=(Tensor[(80), float32], Tensor[(4, 3, 6), float32]) */;
    %898 = %897.0;
    %899 = @func_4056() /* ty=Tensor[(72), float32] */;
    (%898, %899)
  };
  %900() /* ty=(Tensor[(80), float32], Tensor[(72), float32]) */
}

def @func_7413(%var_7408: Tensor[(5, 10, 1), float64]) -> (Tensor[(5, 10, 1), float64],) {
  %901 = cast(%var_7408, dtype="float64") /* ty=Tensor[(5, 10, 1), float64] */;
  %902 = atan(%901) /* ty=Tensor[(5, 10, 1), float64] */;
  (%902,)
}

def @func_18986() -> (Tensor[(72), float32], Tensor[(7, 14, 13), bool], Tensor[(1274), int32], Tensor[(4, 3, 6), float32], Tensor[(80), float32], Tensor[(8, 16, 16), float64], Tensor[(2048), float64]) {
  %903 = @func_6964() /* ty=(Tensor[(48), uint32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32]) */;
  %904 = cast(meta[relay.Constant][43] /* ty=Tensor[(1274), int32] */, dtype="int32") /* ty=Tensor[(1274), int32] */;
  %905 = cast(meta[relay.Constant][43] /* ty=Tensor[(1274), int32] */, dtype="int32") /* ty=Tensor[(1274), int32] */;
  %906 = reshape(%904, newshape=[7, 14, 13]) /* ty=Tensor[(7, 14, 13), int32] */;
  %907 = reshape(%905, newshape=[7, 14, 13]) /* ty=Tensor[(7, 14, 13), int32] */;
  %908 = @func_45(%906, %907) /* ty=(Tensor[(7, 14, 13), bool],) */;
  %909 = @func_4461() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32]) */;
  %910 = %909.2;
  %911 = cast(%910, dtype="float32") /* ty=Tensor[(4, 3, 6), float32] */;
  %912 = cast(meta[relay.Constant][44] /* ty=Tensor[(2048), float64] */, dtype="float64") /* ty=Tensor[(2048), float64] */;
  %913 = reshape(%912, newshape=[8, 16, 16]) /* ty=Tensor[(8, 16, 16), float64] */;
  %914 = @func_16379(%913) /* ty=(Tensor[(8, 16, 16), float64],) */;
  %915 = %903.1;
  %916 = %908.0;
  %917 = acos(%911) /* ty=Tensor[(4, 3, 6), float32] */;
  %918 = @func_7402() /* ty=Tensor[(80), float32] */;
  %919 = %914.0;
  (%915, %916, meta[relay.Constant][43] /* ty=Tensor[(1274), int32] */, %917, %918, %919, meta[relay.Constant][44] /* ty=Tensor[(2048), float64] */)
}

def @func_9375() -> Tensor[(72), float32] {
  @func_9373() /* ty=Tensor[(72), float32] */
}

def @func_5877() -> (Tensor[(72), float32], Tensor[(72), float32]) {
  %920 = @func_3614() /* ty=(Tensor[(72), float32], Tensor[(1274), int32]) */;
  %921 = %920.0;
  %922 = @func_5405() /* ty=Tensor[(72), float32] */;
  (%921, %922)
}

def @func_10923(%var_10922: Tensor[(4, 3, 6), float32]) -> (Tensor[(80), float32], Tensor[(4, 3, 6), int64]) {
  %932 = fn (%var_10916: Tensor[(4, 3, 6), float32]) -> (Tensor[(80), float32], Tensor[(4, 3, 6), int64]) {
    %923 = @func_9643() /* ty=(Tensor[(240), float32], Tensor[(80), float32], Tensor[(80), float32]) */;
    %924 = @func_5996() /* ty=(Tensor[(4, 3, 6), float32], Tensor[(72), float32]) */;
    %925 = %924.0;
    %926 = cast(%var_10916, dtype="int64") /* ty=Tensor[(4, 3, 6), int64] */;
    %927 = shape_of(%925, dtype="int32") /* ty=Tensor[(3), int32] */;
    %928 = cast(%925, dtype="int64") /* ty=Tensor[(4, 3, 6), int64] */;
    %929 = dyn.reshape(%926, %927, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %930 = %923.2;
    %931 = bitwise_or(%928, %929) /* ty=Tensor[(4, 3, 6), int64] */;
    (%930, %931)
  };
  %932(%var_10922) /* ty=(Tensor[(80), float32], Tensor[(4, 3, 6), int64]) */
}

def @func_13580(%var_13577: bool, %var_13578: Tensor[(440), bool], %var_13579: Tensor[(120, 2), float32]) -> (Tensor[(72), float32], Tensor[(4, 11, 10), bool], bool, Tensor[(440), bool], Tensor[(72), float32], Tensor[(120, 2), float32]) {
  @func_13575(%var_13577, %var_13578, %var_13579) /* ty=(Tensor[(72), float32], Tensor[(4, 11, 10), bool], bool, Tensor[(440), bool], Tensor[(72), float32], Tensor[(120, 2), float32]) */
}

def @func_14915() -> Tensor[(4, 3, 6), bool] {
  %933 = @func_7433() /* ty=Tensor[(72), float64] */;
  %934 = cast(%933, dtype="float32") /* ty=Tensor[(72), float32] */;
  %935 = reshape(%934, newshape=[4, 3, 6]) /* ty=Tensor[(4, 3, 6), float32] */;
  %936 = @func_4204(%935) /* ty=Tensor[(4, 3, 6), bool] */;
  %937 = cast(%933, dtype="bool") /* ty=Tensor[(72), bool] */;
  %938 = shape_of(%936, dtype="int32") /* ty=Tensor[(3), int32] */;
  %939 = cast(%936, dtype="bool") /* ty=Tensor[(4, 3, 6), bool] */;
  %940 = dyn.reshape(%937, %938, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%939, %940) /* ty=Tensor[(4, 3, 6), bool] */
}

def @func_12169() -> Tensor[(72), float32] {
  %941 = @func_7021() /* ty=(Tensor[(72), float32],) */;
  %941.0
}

def @func_3363() -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(8, 5, 4), float64], Tensor[(160), float64]) {
  %948 = fn () -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(8, 5, 4), float64], Tensor[(160), float64]) {
    %942 = @func_2351() /* ty=(Tensor[(72), float32], Tensor[(1274), int32], Tensor[(1274), int32], Tensor[(4, 3, 6), float32]) */;
    %943 = cast(meta[relay.Constant][45] /* ty=Tensor[(160), float64] */, dtype="float64") /* ty=Tensor[(160), float64] */;
    %944 = reshape(%943, newshape=[8, 5, 4]) /* ty=Tensor[(8, 5, 4), float64] */;
    %945 = %942.0;
    %946 = @func_2739() /* ty=Tensor[(72), float32] */;
    %947 = @func_3099(%944) /* ty=Tensor[(8, 5, 4), float64] */;
    (%945, %946, %947, meta[relay.Constant][45] /* ty=Tensor[(160), float64] */)
  };
  %948() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(8, 5, 4), float64], Tensor[(160), float64]) */
}

def @func_7208(%var_7201: Tensor[(96), float32], %var_7202: Tensor[(20, 4), float32]) -> (Tensor[(72), float32], Tensor[(48), uint32], Tensor[(12, ?, 8), bool], Tensor[(96), float32], Tensor[(20, 4), float32]) {
  %949 = @func_6209() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %950 = @func_4821() /* ty=(Tensor[(864), float32], Tensor[(48), uint32]) */;
  %951 = cast(%var_7201, dtype="float32") /* ty=Tensor[(96), float32] */;
  %952 = cast(%var_7202, dtype="float32") /* ty=Tensor[(20, 4), float32] */;
  %953 = reshape(%951, newshape=[12, 1, 8]) /* ty=Tensor[(12, 1, 8), float32] */;
  %954 = reshape(%952, newshape=[80]) /* ty=Tensor[(80), float32] */;
  %955 = @func_5462(%953, %954) /* ty=(Tensor[(12, ?, 8), bool], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(240), float32]) */;
  %956 = %949.1;
  %957 = %950.1;
  %958 = %955.0;
  (%956, %957, %958, %var_7201, %var_7202)
}

def @func_5717() -> Tensor[(72), float32] {
  @func_5715() /* ty=Tensor[(72), float32] */
}

def @func_14684() -> Tensor[(72), float32] {
  @func_14682() /* ty=Tensor[(72), float32] */
}

def @func_9053(%var_9051: Tensor[(8, 286), float64], %var_9052: Tensor[(13, 16, 11), float64]) -> (Tensor[(48), uint32], Tensor[(8, 286), float64], Tensor[(13, 16, 11), bool]) {
  %969 = fn (%var_9025: Tensor[(8, 286), float64], %var_9033: Tensor[(13, 16, 11), float64]) -> (Tensor[(48), uint32], Tensor[(8, 286), float64], Tensor[(13, 16, 11), bool]) {
    %959 = @func_4235() /* ty=(Tensor[(72), float32], Tensor[(48), uint32], Tensor[(48), uint32]) */;
    %960 = cast(%var_9025, dtype="float64") /* ty=Tensor[(8, 286), float64] */;
    %961 = reshape(%960, newshape=[13, 16, 11]) /* ty=Tensor[(13, 16, 11), float64] */;
    %962 = @func_7525(%961) /* ty=Tensor[(13, 16, 11), float64] */;
    %963 = cast(%var_9033, dtype="bool") /* ty=Tensor[(13, 16, 11), bool] */;
    %964 = shape_of(%962, dtype="int32") /* ty=Tensor[(3), int32] */;
    %965 = cast(%962, dtype="bool") /* ty=Tensor[(13, 16, 11), bool] */;
    %966 = dyn.reshape(%963, %964, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %967 = %959.2;
    %968 = logical_and(%965, %966) /* ty=Tensor[(13, 16, 11), bool] */;
    (%967, %var_9025, %968)
  };
  %969(%var_9051, %var_9052) /* ty=(Tensor[(48), uint32], Tensor[(8, 286), float64], Tensor[(13, 16, 11), bool]) */
}

def @func_15208(%var_15184: Tensor[(3360), float64]) -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(14, 16, 15), float64], Tensor[(3360), float64], Tensor[(1274), int32]) {
  %970 = @func_6209() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %971 = cast(%var_15184, dtype="float64") /* ty=Tensor[(3360), float64] */;
  %972 = cast(meta[relay.Constant][46] /* ty=Tensor[(1274), int32] */, dtype="int32") /* ty=Tensor[(1274), int32] */;
  %973 = reshape(%971, newshape=[14, 16, 15]) /* ty=Tensor[(14, 16, 15), float64] */;
  %974 = reshape(%972, newshape=[1274]) /* ty=Tensor[(1274), int32] */;
  %975 = @func_13297(%973, %974) /* ty=(Tensor[(14, 16, 15), float64], Tensor[(7, 14, 13), bool], Tensor[(1274), int32], Tensor[(72), float32]) */;
  %976 = %970.0;
  %977 = @func_5405() /* ty=Tensor[(72), float32] */;
  %978 = @func_10459() /* ty=Tensor[(72), float32] */;
  %979 = %975.0;
  (%976, %977, %978, %979, %var_15184, meta[relay.Constant][46] /* ty=Tensor[(1274), int32] */)
}

def @func_2186() -> (Tensor[(6, 13, 11), float64], Tensor[(4, 3, 6), float32], Tensor[(72), float32]) {
  @func_2184() /* ty=(Tensor[(6, 13, 11), float64], Tensor[(4, 3, 6), float32], Tensor[(72), float32]) */
}

def @func_3575() -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(24, 10), float32], Tensor[(864), float32], Tensor[(48), uint32], Tensor[(36, 12), uint32], Tensor[(6, 30), float32]) {
  %999 = fn () -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(24, 10), float32], Tensor[(864), float32], Tensor[(48), uint32], Tensor[(36, 12), uint32], Tensor[(6, 30), float32]) {
    %980 = @func_2689() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
    %981 = @func_3151() /* ty=(Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(240), float32]) */;
    %982 = cast(meta[relay.Constant][47] /* ty=Tensor[(24, 10), float32] */, dtype="float32") /* ty=Tensor[(24, 10), float32] */;
    %983 = cast(meta[relay.Constant][48] /* ty=Tensor[(864), float32] */, dtype="float32") /* ty=Tensor[(864), float32] */;
    %984 = cast(meta[relay.Constant][49] /* ty=Tensor[(48), uint32] */, dtype="uint32") /* ty=Tensor[(48), uint32] */;
    %985 = reshape(%982, newshape=[1, 240]) /* ty=Tensor[(1, 240), float32] */;
    %986 = reshape(%983, newshape=[864]) /* ty=Tensor[(864), float32] */;
    %987 = reshape(%984, newshape=[48]) /* ty=Tensor[(48), uint32] */;
    %988 = @func_2669(%985, %986, %987) /* ty=(Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(7, 14, 13), bool], Tensor[(1274), int32], Tensor[(80), float32], Tensor[(864), float32], Tensor[(4, 3, 6), bool], Tensor[(48), uint32], Tensor[(432), uint32], Tensor[(12, 240), float32], Tensor[(6, 3, 4), float64], Tensor[(10, 12, 13), float64], Tensor[(770, 240), bool]) */;
    %989 = cast(meta[relay.Constant][49] /* ty=Tensor[(48), uint32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
    %990 = cast(meta[relay.Constant][50] /* ty=Tensor[(6, 30), float32] */, dtype="float32") /* ty=Tensor[(6, 30), float32] */;
    %991 = reshape(%989, newshape=[1, 16, 3]) /* ty=Tensor[(1, 16, 3), float32] */;
    %992 = reshape(%990, newshape=[180]) /* ty=Tensor[(180), float32] */;
    %993 = @func_1464(%991, %992) /* ty=(Tensor[(7, 14, 13), bool], Tensor[(1274), int32], Tensor[(4, 3, 6), bool], Tensor[(36, 12), uint32], Tensor[(4, 3, 6), float32], Tensor[(?, 16, 3), bool], Tensor[(12, 6, 12), bool], Tensor[(864), float32], Tensor[(15, 1, 12), float32], Tensor[(180), float32]) */;
    %994 = %980.1;
    %995 = @func_2978() /* ty=Tensor[(72), float32] */;
    %996 = %981.0;
    %997 = %988.1;
    %998 = %993.3;
    (%994, %995, %996, %997, meta[relay.Constant][47] /* ty=Tensor[(24, 10), float32] */, meta[relay.Constant][48] /* ty=Tensor[(864), float32] */, meta[relay.Constant][49] /* ty=Tensor[(48), uint32] */, %998, meta[relay.Constant][50] /* ty=Tensor[(6, 30), float32] */)
  };
  %999() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(24, 10), float32], Tensor[(864), float32], Tensor[(48), uint32], Tensor[(36, 12), uint32], Tensor[(6, 30), float32]) */
}

def @func_18610(%var_18583: Tensor[(7, 8, 6), float64], %var_18598: bool, %var_18599: Tensor[(440), bool]) -> (Tensor[(7, 8, 6), float64], Tensor[(7, 8, 6), float32], Tensor[(4, 11, 10), bool], bool, Tensor[(440), bool], Tensor[(72), float64]) {
  %1000 = cast(%var_18583, dtype="float64") /* ty=Tensor[(7, 8, 6), float64] */;
  %1001 = cast(%var_18583, dtype="float32") /* ty=Tensor[(7, 8, 6), float32] */;
  %1002 = cast(%var_18598, dtype="bool") /* ty=bool */;
  %1003 = cast(%var_18599, dtype="bool") /* ty=Tensor[(440), bool] */;
  %1004 = reshape(%1002, newshape=[]) /* ty=bool */;
  %1005 = reshape(%1003, newshape=[4, 11, 10]) /* ty=Tensor[(4, 11, 10), bool] */;
  %1006 = @func_11332() /* ty=(Tensor[(72), float64], Tensor[(7, 9, 15), int8], Tensor[(945), int8], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32]) */;
  %1007 = atanh(%1000) /* ty=Tensor[(7, 8, 6), float64] */;
  %1008 = acosh(%1001) /* ty=Tensor[(7, 8, 6), float32] */;
  %1009 = @func_7983(%1004, %1005) /* ty=Tensor[(4, 11, 10), bool] */;
  %1010 = %1006.0;
  (%1007, %1008, %1009, %var_18598, %var_18599, %1010)
}

def @func_11334() -> (Tensor[(72), float64], Tensor[(7, 9, 15), int8], Tensor[(945), int8], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32]) {
  @func_11332() /* ty=(Tensor[(72), float64], Tensor[(7, 9, 15), int8], Tensor[(945), int8], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32]) */
}

def @func_18572() -> (Tensor[(72), float32], Tensor[(72), float32]) {
  %1015 = fn () -> (Tensor[(72), float32], Tensor[(72), float32]) {
    %1011 = @func_6699() /* ty=(Tensor[(72), float32],) */;
    %1012 = @func_6781() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(1274), int32]) */;
    %1013 = %1011.0;
    %1014 = %1012.0;
    (%1013, %1014)
  };
  %1015() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */
}

def @func_2193() -> (Tensor[(72), float32],) {
  @func_2191() /* ty=(Tensor[(72), float32],) */
}

def @func_16265() -> (Tensor[(1274), int32], Tensor[(2, 24), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32]) {
  %1016 = @func_7423() /* ty=(Tensor[(4, 3, 6), float32], Tensor[(180), float32], Tensor[(2, 24), float32]) */;
  %1017 = @func_2931() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %1018 = @func_12698() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32], Tensor[(4, 3, 6), float32], Tensor[(72), float32], Tensor[(72), float32]) */;
  %1019 = @func_8867() /* ty=Tensor[(1274), int32] */;
  %1020 = %1016.2;
  %1021 = %1017.1;
  %1022 = %1018.2;
  (%1019, %1020, %1021, %1022)
}

def @func_7468(%var_7466: Tensor[(13, 1, 3), float32]) -> Tensor[(13, 1, 3), float32] {
  @func_7465(%var_7466) /* ty=Tensor[(13, 1, 3), float32] */
}

def @func_8026(%var_7999: Tensor[(1008), float32]) -> (Tensor[(72), float32], Tensor[(16, 9, 7), float32], Tensor[(1008), float32], Tensor[(160), float64], Tensor[(8, 10, 3), float32], Tensor[(240), float32], Tensor[(4, 3, 6), float32]) {
  %1023 = @func_3117() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %1024 = cast(%var_7999, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %1025 = cast(meta[relay.Constant][51] /* ty=Tensor[(160), float64] */, dtype="float64") /* ty=Tensor[(160), float64] */;
  %1026 = reshape(%1024, newshape=[16, 9, 7]) /* ty=Tensor[(16, 9, 7), float32] */;
  %1027 = reshape(%1025, newshape=[80, 2]) /* ty=Tensor[(80, 2), float64] */;
  %1028 = @func_6890(%1026, %1027) /* ty=(Tensor[(16, 9, 7), float32], Tensor[(8, 5, 4), float64], Tensor[(80, 2), float64]) */;
  %1029 = cast(meta[relay.Constant][52] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %1030 = reshape(%1029, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %1031 = @func_7507(%1030) /* ty=(Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(240), float32]) */;
  %1032 = @func_2184() /* ty=(Tensor[(6, 13, 11), float64], Tensor[(4, 3, 6), float32], Tensor[(72), float32]) */;
  %1033 = %1023.0;
  %1034 = %1028.0;
  %1035 = %1031.1;
  %1036 = %1032.1;
  (%1033, %1034, %var_7999, meta[relay.Constant][51] /* ty=Tensor[(160), float64] */, %1035, meta[relay.Constant][52] /* ty=Tensor[(240), float32] */, %1036)
}

def @func_7510(%var_7508: Tensor[(240), float32]) -> (Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(240), float32]) {
  @func_7507(%var_7508) /* ty=(Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(240), float32]) */
}

def @func_16387() -> (Tensor[(72), float32],) {
  %1037 = @func_10555() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %1038 = %1037.0;
  (%1038,)
}

def @func_18838() -> (Tensor[(864), float32], Tensor[(72), float32]) {
  %1039 = @func_5098() /* ty=(Tensor[(72), float32], Tensor[(864), float32]) */;
  %1040 = @func_4235() /* ty=(Tensor[(72), float32], Tensor[(48), uint32], Tensor[(48), uint32]) */;
  %1041 = %1039.1;
  %1042 = %1040.0;
  (%1041, %1042)
}

def @func_18876() -> (Tensor[(72), float32],) {
  @func_18874() /* ty=(Tensor[(72), float32],) */
}

def @func_2674(%var_2671: Tensor[(1, 240), float32], %var_2672: Tensor[(864), float32], %var_2673: Tensor[(48), uint32]) -> (Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(7, 14, 13), bool], Tensor[(1274), int32], Tensor[(80), float32], Tensor[(864), float32], Tensor[(4, 3, 6), bool], Tensor[(48), uint32], Tensor[(432), uint32], Tensor[(12, 240), float32], Tensor[(6, 3, 4), float64], Tensor[(10, 12, 13), float64], Tensor[(770, 240), bool]) {
  @func_2669(%var_2671, %var_2672, %var_2673) /* ty=(Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(7, 14, 13), bool], Tensor[(1274), int32], Tensor[(80), float32], Tensor[(864), float32], Tensor[(4, 3, 6), bool], Tensor[(48), uint32], Tensor[(432), uint32], Tensor[(12, 240), float32], Tensor[(6, 3, 4), float64], Tensor[(10, 12, 13), float64], Tensor[(770, 240), bool]) */
}

def @func_3054(%var_3053: Tensor[(180), float32]) -> (Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(4, 60), float32], Tensor[(864), float32], Tensor[(48), uint32], Tensor[(15, 1, 12), float32], Tensor[(180), float32], Tensor[(72), float32], Tensor[(72), float32]) {
  %1058 = fn (%var_3006: Tensor[(180), float32]) -> (Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(4, 60), float32], Tensor[(864), float32], Tensor[(48), uint32], Tensor[(15, 1, 12), float32], Tensor[(180), float32], Tensor[(72), float32], Tensor[(72), float32]) {
    %1043 = cast(meta[relay.Constant][53] /* ty=Tensor[(4, 60), float32] */, dtype="float32") /* ty=Tensor[(4, 60), float32] */;
    %1044 = cast(meta[relay.Constant][54] /* ty=Tensor[(864), float32] */, dtype="float32") /* ty=Tensor[(864), float32] */;
    %1045 = cast(meta[relay.Constant][55] /* ty=Tensor[(48), uint32] */, dtype="uint32") /* ty=Tensor[(48), uint32] */;
    %1046 = reshape(%1043, newshape=[1, 240]) /* ty=Tensor[(1, 240), float32] */;
    %1047 = reshape(%1044, newshape=[864]) /* ty=Tensor[(864), float32] */;
    %1048 = reshape(%1045, newshape=[48]) /* ty=Tensor[(48), uint32] */;
    %1049 = @func_2669(%1046, %1047, %1048) /* ty=(Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(7, 14, 13), bool], Tensor[(1274), int32], Tensor[(80), float32], Tensor[(864), float32], Tensor[(4, 3, 6), bool], Tensor[(48), uint32], Tensor[(432), uint32], Tensor[(12, 240), float32], Tensor[(6, 3, 4), float64], Tensor[(10, 12, 13), float64], Tensor[(770, 240), bool]) */;
    %1050 = cast(%var_3006, dtype="float32") /* ty=Tensor[(180), float32] */;
    %1051 = reshape(%1050, newshape=[15, 1, 12]) /* ty=Tensor[(15, 1, 12), float32] */;
    %1052 = @func_2721() /* ty=(Tensor[(6, 13, 11), float64], Tensor[(72), float32]) */;
    %1053 = @func_2525() /* ty=Tensor[(72), float32] */;
    %1054 = %1049.1;
    %1055 = @func_1378(%1051) /* ty=Tensor[(15, 1, 12), float32] */;
    %1056 = %1052.1;
    %1057 = @func_2739() /* ty=Tensor[(72), float32] */;
    (%1053, %1054, meta[relay.Constant][53] /* ty=Tensor[(4, 60), float32] */, meta[relay.Constant][54] /* ty=Tensor[(864), float32] */, meta[relay.Constant][55] /* ty=Tensor[(48), uint32] */, %1055, %var_3006, %1056, %1057)
  };
  %1058(%var_3053) /* ty=(Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(4, 60), float32], Tensor[(864), float32], Tensor[(48), uint32], Tensor[(15, 1, 12), float32], Tensor[(180), float32], Tensor[(72), float32], Tensor[(72), float32]) */
}

def @func_4550() -> Tensor[(240), float32] {
  %1059 = @func_3749() /* ty=(Tensor[(240), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32]) */;
  %1059.0
}

def @func_5177() -> Tensor[(72), float32] {
  @func_5175() /* ty=Tensor[(72), float32] */
}

def @func_16169() -> (Tensor[(80), float32], Tensor[(15, 15, 4), float32], Tensor[(900), float32]) {
  %1060 = cast(meta[relay.Constant][56] /* ty=Tensor[(900), float32] */, dtype="float32") /* ty=Tensor[(900), float32] */;
  %1061 = reshape(%1060, newshape=[15, 15, 4]) /* ty=Tensor[(15, 15, 4), float32] */;
  %1062 = @func_7402() /* ty=Tensor[(80), float32] */;
  %1063 = @func_8171(%1061) /* ty=Tensor[(15, 15, 4), float32] */;
  (%1062, %1063, meta[relay.Constant][56] /* ty=Tensor[(900), float32] */)
}

def @func_12619() -> (Tensor[(72), float32],) {
  @func_12617() /* ty=(Tensor[(72), float32],) */
}

def @func_15981() -> (Tensor[(72), float32],) {
  %1065 = fn () -> (Tensor[(72), float32],) {
    %1064 = @func_13631() /* ty=Tensor[(72), float32] */;
    (%1064,)
  };
  %1065() /* ty=(Tensor[(72), float32],) */
}

def @func_12007() -> Tensor[(72), float32] {
  @func_12005() /* ty=Tensor[(72), float32] */
}

def @func_3855() -> (Tensor[(72), float64], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32]) {
  %1074 = fn () -> (Tensor[(72), float64], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32]) {
    %1066 = @func_3769() /* ty=(Tensor[(72), float64],) */;
    %1067 = @func_3117() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
    %1068 = @func_2689() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
    %1069 = @func_2842() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
    %1070 = %1066.0;
    %1071 = %1067.0;
    %1072 = %1068.0;
    %1073 = %1069.1;
    (%1070, %1071, %1072, %1073)
  };
  %1074() /* ty=(Tensor[(72), float64], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32]) */
}

def @func_11917() -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(864), float32]) {
  @func_11915() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(864), float32]) */
}

def @func_12213() -> (Tensor[(2, 24), float32], Tensor[(72), float32]) {
  @func_12211() /* ty=(Tensor[(2, 24), float32], Tensor[(72), float32]) */
}

def @func_1381(%var_1379: Tensor[(15, 1, 12), float32]) -> Tensor[(15, 1, 12), float32] {
  @func_1378(%var_1379) /* ty=Tensor[(15, 1, 12), float32] */
}

def @func_18049() -> (Tensor[(72), float32],) {
  %1076 = fn () -> (Tensor[(72), float32],) {
    %1075 = @func_5715() /* ty=Tensor[(72), float32] */;
    (%1075,)
  };
  %1076() /* ty=(Tensor[(72), float32],) */
}

def @func_7402() -> Tensor[(80), float32] {
  %1077 = @func_3151() /* ty=(Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(240), float32]) */;
  %1077.2
}

def @func_8484(%var_8482: Tensor[(5, 6, 15), uint64], %var_8483: Tensor[(5, 6, 15), uint64]) -> (Tensor[(5, 6, 15), bool], Tensor[(72), float32]) {
  @func_8480(%var_8482, %var_8483) /* ty=(Tensor[(5, 6, 15), bool], Tensor[(72), float32]) */
}

def @func_16381(%var_16380: Tensor[(8, 16, 16), float64]) -> (Tensor[(8, 16, 16), float64],) {
  %1080 = fn (%var_16374: Tensor[(8, 16, 16), float64]) -> (Tensor[(8, 16, 16), float64],) {
    %1078 = cast(%var_16374, dtype="float64") /* ty=Tensor[(8, 16, 16), float64] */;
    %1079 = exp(%1078) /* ty=Tensor[(8, 16, 16), float64] */;
    (%1079,)
  };
  %1080(%var_16380) /* ty=(Tensor[(8, 16, 16), float64],) */
}

def @func_17433(%var_17431: Tensor[(2, 504), float32]) -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(2, 504), float32]) {
  @func_17430(%var_17431) /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(2, 504), float32]) */
}

def @func_5175() -> Tensor[(72), float32] {
  @func_2525() /* ty=Tensor[(72), float32] */
}

def @func_2978() -> Tensor[(72), float32] {
  @func_2739() /* ty=Tensor[(72), float32] */
}

def @func_12726() -> Tensor[(72), float32] {
  %1082 = fn () -> Tensor[(72), float32] {
    %1081 = @func_6228() /* ty=(Tensor[(72), float32],) */;
    %1081.0
  };
  %1082() /* ty=Tensor[(72), float32] */
}

def @func_16795() -> (Tensor[(15, 8, 6), float32],) {
  %1085 = fn () -> (Tensor[(15, 8, 6), float32],) {
    %1083 = @func_6499() /* ty=(Tensor[(15, 8, 6), float32],) */;
    %1084 = %1083.0;
    (%1084,)
  };
  %1085() /* ty=(Tensor[(15, 8, 6), float32],) */
}

def @func_10080() -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32]) {
  @func_10078() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32]) */
}

def @func_14076() -> (Tensor[(72), float32], Tensor[(4, 3, 6), uint8], Tensor[(72), float32]) {
  %1086 = @func_9373() /* ty=Tensor[(72), float32] */;
  %1087 = cast(%1086, dtype="float32") /* ty=Tensor[(72), float32] */;
  %1088 = reshape(%1087, newshape=[4, 3, 6]) /* ty=Tensor[(4, 3, 6), float32] */;
  %1089 = @func_9926(%1088) /* ty=(Tensor[(4, 3, 6), uint8],) */;
  %1090 = @func_11926() /* ty=(Tensor[(72), float32],) */;
  %1091 = %1089.0;
  %1092 = %1090.0;
  (%1086, %1091, %1092)
}

def @func_7023() -> (Tensor[(72), float32],) {
  @func_7021() /* ty=(Tensor[(72), float32],) */
}

def @func_6501() -> (Tensor[(15, 8, 6), float32],) {
  @func_6499() /* ty=(Tensor[(15, 8, 6), float32],) */
}

def @func_6657(%var_6643: Tensor[(36, 24), float32]) -> (Tensor[(48), uint32], Tensor[(48), uint32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(48), uint32], Tensor[(180), float32], Tensor[(72), float32], Tensor[(36, 24), float32], Tensor[(72), float32]) {
  %1093 = @func_5773() /* ty=(Tensor[(240), float32], Tensor[(48), uint32], Tensor[(72), float32]) */;
  %1094 = @func_4235() /* ty=(Tensor[(72), float32], Tensor[(48), uint32], Tensor[(48), uint32]) */;
  %1095 = @func_5098() /* ty=(Tensor[(72), float32], Tensor[(864), float32]) */;
  %1096 = @func_4235() /* ty=(Tensor[(72), float32], Tensor[(48), uint32], Tensor[(48), uint32]) */;
  %1097 = %1093.1;
  %1098 = cast(%1097, dtype="float32") /* ty=Tensor[(48), float32] */;
  %1099 = reshape(%1098, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %1100 = @func_5586(%1099) /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(?, 16, 3), bool], Tensor[(48), float32], Tensor[(180), float32], Tensor[(180), float32]) */;
  %1101 = cast(%var_6643, dtype="float32") /* ty=Tensor[(36, 24), float32] */;
  %1102 = reshape(%1101, newshape=[864, 1]) /* ty=Tensor[(864, 1), float32] */;
  %1103 = @func_5929(%1102) /* ty=(Tensor[(72), float32], Tensor[(864), float32], Tensor[(72), float32], Tensor[(864, ?), uint32]) */;
  %1104 = %1094.1;
  %1105 = %1095.0;
  %1106 = @func_2978() /* ty=Tensor[(72), float32] */;
  %1107 = @func_2739() /* ty=Tensor[(72), float32] */;
  %1108 = %1096.1;
  %1109 = %1100.4;
  %1110 = %1103.2;
  %1111 = @func_2739() /* ty=Tensor[(72), float32] */;
  (%1097, %1104, %1105, %1106, %1107, %1108, %1109, %1110, %var_6643, %1111)
}

def @func_3099(%var_3093: Tensor[(8, 5, 4), float64]) -> Tensor[(8, 5, 4), float64] {
  %1112 = cast(meta[relay.Constant][57] /* ty=Tensor[(8, 5, 4), float64] */, dtype="float64") /* ty=Tensor[(8, 5, 4), float64] */;
  %1113 = shape_of(%var_3093, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1114 = cast(%var_3093, dtype="float64") /* ty=Tensor[(8, 5, 4), float64] */;
  %1115 = dyn.reshape(%1112, %1113, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_mod(%1114, %1115) /* ty=Tensor[(8, 5, 4), float64] */
}

def @func_5879() -> (Tensor[(72), float32], Tensor[(72), float32]) {
  @func_5877() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */
}

def @func_6499() -> (Tensor[(15, 8, 6), float32],) {
  %1116 = cast(meta[relay.Constant][58] /* ty=Tensor[(15, 8, 6), float32] */, dtype="float32") /* ty=Tensor[(15, 8, 6), float32] */;
  %1117 = sin(%1116) /* ty=Tensor[(15, 8, 6), float32] */;
  (%1117,)
}

def @func_17632(%var_17630: Tensor[(440, 1), bool]) -> (Tensor[(72), float32], Tensor[(4, 11, 10), bool], bool, Tensor[(440, 1), bool], Tensor[(72), float32]) {
  @func_17629(%var_17630) /* ty=(Tensor[(72), float32], Tensor[(4, 11, 10), bool], bool, Tensor[(440, 1), bool], Tensor[(72), float32]) */
}

def @func_718(%var_716: Tensor[(7, 10, 11), float32], %var_717: Tensor[(72), float32]) -> (Tensor[(7, 10, 11), float32], Tensor[(7, 14, 13), bool], Tensor[(91, 14), int32], Tensor[(7, 14, 13), bool], Tensor[(4, 3, 6), float32], Tensor[(72), float32], Tensor[(7, 14, 13), float32]) {
  @func_714(%var_716, %var_717) /* ty=(Tensor[(7, 10, 11), float32], Tensor[(7, 14, 13), bool], Tensor[(91, 14), int32], Tensor[(7, 14, 13), bool], Tensor[(4, 3, 6), float32], Tensor[(72), float32], Tensor[(7, 14, 13), float32]) */
}

def @func_6991(%var_6989: Tensor[(420), float32]) -> (Tensor[(72), float32], Tensor[(2, 15, 14), float64], Tensor[(420), float32]) {
  %1118 = @func_5996() /* ty=(Tensor[(4, 3, 6), float32], Tensor[(72), float32]) */;
  %1119 = cast(%var_6989, dtype="float32") /* ty=Tensor[(420), float32] */;
  %1120 = reshape(%1119, newshape=[2, 15, 14]) /* ty=Tensor[(2, 15, 14), float32] */;
  %1121 = @func_1723(%1120) /* ty=(Tensor[(2, 15, 14), float64],) */;
  %1122 = %1118.1;
  %1123 = %1121.0;
  (%1122, %1123, %var_6989)
}

def @func_2932() -> (Tensor[(72), float32], Tensor[(72), float32]) {
  %1128 = fn () -> (Tensor[(72), float32], Tensor[(72), float32]) {
    %1124 = @func_2689() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
    %1125 = @func_2842() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
    %1126 = %1124.0;
    %1127 = %1125.1;
    (%1126, %1127)
  };
  %1128() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */
}

def @func_17074() -> Tensor[(4, 3, 6), bool] {
  @func_17072() /* ty=Tensor[(4, 3, 6), bool] */
}

def @func_12257() -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32]) {
  %1133 = fn () -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32]) {
    %1129 = @func_9373() /* ty=Tensor[(72), float32] */;
    %1130 = @func_10699() /* ty=Tensor[(72), float32] */;
    %1131 = @func_8369() /* ty=Tensor[(72), float32] */;
    %1132 = @func_3133() /* ty=Tensor[(72), float32] */;
    (%1129, %1130, %1131, %1132)
  };
  %1133() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32]) */
}

def @func_17146() -> Tensor[(72), float64] {
  @func_17144() /* ty=Tensor[(72), float64] */
}

def @func_7423() -> (Tensor[(4, 3, 6), float32], Tensor[(180), float32], Tensor[(2, 24), float32]) {
  %1134 = cast(meta[relay.Constant][59] /* ty=Tensor[(2, 24), float32] */, dtype="float32") /* ty=Tensor[(2, 24), float32] */;
  %1135 = reshape(%1134, newshape=[48]) /* ty=Tensor[(48), float32] */;
  %1136 = @func_5586(%1135) /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(?, 16, 3), bool], Tensor[(48), float32], Tensor[(180), float32], Tensor[(180), float32]) */;
  %1137 = @func_4368() /* ty=Tensor[(4, 3, 6), float32] */;
  %1138 = %1136.5;
  (%1137, %1138, meta[relay.Constant][59] /* ty=Tensor[(2, 24), float32] */)
}

def @func_12036() -> (Tensor[(80), float32], Tensor[(4, 3, 6), float32]) {
  %1143 = fn () -> (Tensor[(80), float32], Tensor[(4, 3, 6), float32]) {
    %1139 = @func_9643() /* ty=(Tensor[(240), float32], Tensor[(80), float32], Tensor[(80), float32]) */;
    %1140 = @func_8390() /* ty=(Tensor[(1274), int32], Tensor[(1274), int32], Tensor[(4, 3, 6), float32]) */;
    %1141 = %1139.1;
    %1142 = %1140.2;
    (%1141, %1142)
  };
  %1143() /* ty=(Tensor[(80), float32], Tensor[(4, 3, 6), float32]) */
}

def @func_4007() -> (Tensor[(72), float32], Tensor[(240), float32]) {
  @func_4005() /* ty=(Tensor[(72), float32], Tensor[(240), float32]) */
}

def @func_8910() -> (Tensor[(72), float32],) {
  %1146 = fn () -> (Tensor[(72), float32],) {
    %1144 = @func_6209() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
    %1145 = %1144.1;
    (%1145,)
  };
  %1146() /* ty=(Tensor[(72), float32],) */
}

def @func_13862() -> Tensor[(72), float32] {
  %1147 = fn () -> Tensor[(72), float32] {
    @func_3133() /* ty=Tensor[(72), float32] */
  };
  %1147() /* ty=Tensor[(72), float32] */
}

def @func_6432() -> (Tensor[(72), float32], Tensor[(864), float32], Tensor[(180), float32], Tensor[(48), uint32]) {
  %1148 = @func_2351() /* ty=(Tensor[(72), float32], Tensor[(1274), int32], Tensor[(1274), int32], Tensor[(4, 3, 6), float32]) */;
  %1149 = cast(meta[relay.Constant][60] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %1150 = reshape(%1149, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %1151 = @func_3052(%1150) /* ty=(Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(4, 60), float32], Tensor[(864), float32], Tensor[(48), uint32], Tensor[(15, 1, 12), float32], Tensor[(180), float32], Tensor[(72), float32], Tensor[(72), float32]) */;
  %1152 = @func_4732() /* ty=(Tensor[(48), uint32],) */;
  %1153 = %1148.0;
  %1154 = %1151.3;
  %1155 = %1152.0;
  (%1153, %1154, meta[relay.Constant][60] /* ty=Tensor[(180), float32] */, %1155)
}

def @func_4795(%var_4790: Tensor[(24, 10), float32]) -> (Tensor[(4, 3, 6), float32], Tensor[(24, 10), bool], Tensor[(24, 10), bool]) {
  %1156 = @func_3574() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(24, 10), float32], Tensor[(864), float32], Tensor[(48), uint32], Tensor[(36, 12), uint32], Tensor[(6, 30), float32]) */;
  %1157 = %1156.4;
  %1158 = cast(%1157, dtype="float64") /* ty=Tensor[(24, 10), float64] */;
  %1159 = sqrt(%1158) /* ty=Tensor[(24, 10), float64] */;
  %1160 = cast(%1157, dtype="bool") /* ty=Tensor[(24, 10), bool] */;
  %1161 = shape_of(%1159, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1162 = cast(%1159, dtype="bool") /* ty=Tensor[(24, 10), bool] */;
  %1163 = dyn.reshape(%1160, %1161, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1164 = cast(%var_4790, dtype="bool") /* ty=Tensor[(24, 10), bool] */;
  %1165 = shape_of(%1157, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1166 = cast(%1157, dtype="bool") /* ty=Tensor[(24, 10), bool] */;
  %1167 = dyn.reshape(%1164, %1165, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1168 = @func_4368() /* ty=Tensor[(4, 3, 6), float32] */;
  %1169 = logical_or(%1162, %1163) /* ty=Tensor[(24, 10), bool] */;
  %1170 = less(%1166, %1167) /* ty=Tensor[(24, 10), bool] */;
  (%1168, %1169, %1170)
}

def @func_13961() -> Tensor[(72), float32] {
  %1171 = fn () -> Tensor[(72), float32] {
    @func_4056() /* ty=Tensor[(72), float32] */
  };
  %1171() /* ty=Tensor[(72), float32] */
}

def @func_2690() -> (Tensor[(72), float32], Tensor[(72), float32]) {
  %1175 = fn () -> (Tensor[(72), float32], Tensor[(72), float32]) {
    %1172 = @func_2184() /* ty=(Tensor[(6, 13, 11), float64], Tensor[(4, 3, 6), float32], Tensor[(72), float32]) */;
    %1173 = @func_2525() /* ty=Tensor[(72), float32] */;
    %1174 = %1172.2;
    (%1173, %1174)
  };
  %1175() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */
}

def @func_15211(%var_15209: Tensor[(3360), float64]) -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(14, 16, 15), float64], Tensor[(3360), float64], Tensor[(1274), int32]) {
  @func_15208(%var_15209) /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(14, 16, 15), float64], Tensor[(3360), float64], Tensor[(1274), int32]) */
}

def @func_15135(%var_15134: Tensor[(264), int32]) -> (Tensor[(72), float32], Tensor[(864), float32], Tensor[(4, 60), float32], Tensor[(4, 6, 11), float64], Tensor[(264), int32], Tensor[(72), float32], Tensor[(13, 5, 3), float64], Tensor[(195), float64]) {
  %1192 = fn (%var_15115: Tensor[(264), int32]) -> (Tensor[(72), float32], Tensor[(864), float32], Tensor[(4, 60), float32], Tensor[(4, 6, 11), float64], Tensor[(264), int32], Tensor[(72), float32], Tensor[(13, 5, 3), float64], Tensor[(195), float64]) {
    %1176 = cast(meta[relay.Constant][61] /* ty=Tensor[(4, 60), float32] */, dtype="float32") /* ty=Tensor[(4, 60), float32] */;
    %1177 = reshape(%1176, newshape=[240]) /* ty=Tensor[(240), float32] */;
    %1178 = @func_8948(%1177) /* ty=(Tensor[(72), float32], Tensor[(864), float32], Tensor[(240), float32], Tensor[(864), float32], Tensor[(12, 4), uint32]) */;
    %1179 = cast(%var_15115, dtype="int32") /* ty=Tensor[(264), int32] */;
    %1180 = cast(%var_15115, dtype="int32") /* ty=Tensor[(264), int32] */;
    %1181 = reshape(%1179, newshape=[4, 6, 11]) /* ty=Tensor[(4, 6, 11), int32] */;
    %1182 = reshape(%1180, newshape=[4, 6, 11]) /* ty=Tensor[(4, 6, 11), int32] */;
    %1183 = @func_4501(%1181, %1182) /* ty=(Tensor[(4, 6, 11), int32], Tensor[(4, 6, 11), float64], Tensor[(1274), int32], Tensor[(72), float32]) */;
    %1184 = @func_13382() /* ty=(Tensor[(72), float32], Tensor[(1274), int32]) */;
    %1185 = cast(meta[relay.Constant][62] /* ty=Tensor[(195), float64] */, dtype="float64") /* ty=Tensor[(195), float64] */;
    %1186 = reshape(%1185, newshape=[13, 5, 3]) /* ty=Tensor[(13, 5, 3), float64] */;
    %1187 = @func_5405() /* ty=Tensor[(72), float32] */;
    %1188 = %1178.3;
    %1189 = %1183.1;
    %1190 = %1184.0;
    %1191 = @func_7077(%1186) /* ty=Tensor[(13, 5, 3), float64] */;
    (%1187, %1188, meta[relay.Constant][61] /* ty=Tensor[(4, 60), float32] */, %1189, %var_15115, %1190, %1191, meta[relay.Constant][62] /* ty=Tensor[(195), float64] */)
  };
  %1192(%var_15134) /* ty=(Tensor[(72), float32], Tensor[(864), float32], Tensor[(4, 60), float32], Tensor[(4, 6, 11), float64], Tensor[(264), int32], Tensor[(72), float32], Tensor[(13, 5, 3), float64], Tensor[(195), float64]) */
}

def @func_17958() -> (Tensor[(72), float32],) {
  %1193 = @func_5611() /* ty=Tensor[(72), float32] */;
  (%1193,)
}

def @func_7838(%var_7782: Tensor[(195), float64]) -> (Tensor[(8, 10, 3), float32], Tensor[(72), float32], Tensor[(13, 5, 3), float64], Tensor[(195), float64]) {
  %1194 = @func_3151() /* ty=(Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(240), float32]) */;
  %1195 = @func_2689() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %1196 = cast(%var_7782, dtype="float64") /* ty=Tensor[(195), float64] */;
  %1197 = reshape(%1196, newshape=[13, 5, 3]) /* ty=Tensor[(13, 5, 3), float64] */;
  %1198 = %1194.1;
  %1199 = %1195.0;
  %1200 = @func_7077(%1197) /* ty=Tensor[(13, 5, 3), float64] */;
  (%1198, %1199, %1200, %var_7782)
}

def @func_14147() -> Tensor[(72), float32] {
  @func_3194() /* ty=Tensor[(72), float32] */
}

def @func_5773() -> (Tensor[(240), float32], Tensor[(48), uint32], Tensor[(72), float32]) {
  %1201 = @func_4732() /* ty=(Tensor[(48), uint32],) */;
  %1202 = @func_4550() /* ty=Tensor[(240), float32] */;
  %1203 = %1201.0;
  %1204 = @func_3698() /* ty=Tensor[(72), float32] */;
  (%1202, %1203, %1204)
}

def @func_3614() -> (Tensor[(72), float32], Tensor[(1274), int32]) {
  %1205 = @func_2931() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %1206 = @func_2881() /* ty=(Tensor[(72), float32], Tensor[(1274), int32]) */;
  %1207 = %1205.1;
  %1208 = %1206.1;
  (%1207, %1208)
}

def @func_5272() -> (Tensor[(72), float32],) {
  %1211 = fn () -> (Tensor[(72), float32],) {
    %1209 = @func_3117() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
    %1210 = %1209.0;
    (%1210,)
  };
  %1211() /* ty=(Tensor[(72), float32],) */
}

def @func_5644() -> Tensor[(72), float32] {
  @func_5175() /* ty=Tensor[(72), float32] */
}

def @func_7884() -> (Tensor[(864), float32],) {
  %1214 = fn () -> (Tensor[(864), float32],) {
    %1212 = @func_6432() /* ty=(Tensor[(72), float32], Tensor[(864), float32], Tensor[(180), float32], Tensor[(48), uint32]) */;
    %1213 = %1212.1;
    (%1213,)
  };
  %1214() /* ty=(Tensor[(864), float32],) */
}

def @func_18860() -> Tensor[(72), float32] {
  %1215 = @func_11848() /* ty=(Tensor[(72), float32],) */;
  %1215.0
}

def @func_13060() -> (Tensor[(72), float32],) {
  @func_13058() /* ty=(Tensor[(72), float32],) */
}

def @func_18185(%var_18126: Tensor[(180), float32]) -> (Tensor[(770), float32], Tensor[(770), float32], Tensor[(15, 1, 12), float32], Tensor[(180), float32], Tensor[(48, 72), int16], Tensor[(48, 72), bool], Tensor[(48, 72), uint8], Tensor[(48, 72), float64]) {
  %1216 = cast(meta[relay.Constant][63] /* ty=Tensor[(48, 1), uint32] */, dtype="uint32") /* ty=Tensor[(48, 1), uint32] */;
  %1217 = cast(meta[relay.Constant][64] /* ty=Tensor[(770), float32] */, dtype="float32") /* ty=Tensor[(770), float32] */;
  %1218 = reshape(%1216, newshape=[12, 4]) /* ty=Tensor[(12, 4), uint32] */;
  %1219 = reshape(%1217, newshape=[770]) /* ty=Tensor[(770), float32] */;
  %1220 = @func_11102(%1218, %1219) /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(12, 4), uint32], Tensor[(770), float32], Tensor[(72), float32], Tensor[(864), float32]) */;
  %1221 = cast(%var_18126, dtype="float32") /* ty=Tensor[(180), float32] */;
  %1222 = reshape(%1221, newshape=[15, 1, 12]) /* ty=Tensor[(15, 1, 12), float32] */;
  %1223 = @func_17558() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %1224 = %1223.1;
  %1225 = @func_11926() /* ty=(Tensor[(72), float32],) */;
  %1226 = %1225.0;
  %1227 = cast(%1226, dtype="float64") /* ty=Tensor[(72), float64] */;
  %1228 = cast(meta[relay.Constant][63] /* ty=Tensor[(48, 1), uint32] */, dtype="float64") /* ty=Tensor[(48, 1), float64] */;
  %1229 = floor_mod(%1227, %1228) /* ty=Tensor[(48, 72), float64] */;
  %1230 = cast(%1224, dtype="bool") /* ty=Tensor[(72), bool] */;
  %1231 = cast(%1229, dtype="bool") /* ty=Tensor[(48, 72), bool] */;
  %1232 = less(%1230, %1231) /* ty=Tensor[(48, 72), bool] */;
  %1233 = cast(meta[relay.Constant][65] /* ty=Tensor[(48, 72), float64] */, dtype="int16") /* ty=Tensor[(48, 72), int16] */;
  %1234 = shape_of(%1232, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1235 = cast(%1232, dtype="int16") /* ty=Tensor[(48, 72), int16] */;
  %1236 = dyn.reshape(%1233, %1234, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %1237 = cast(%1224, dtype="bool") /* ty=Tensor[(72), bool] */;
  %1238 = cast(%1229, dtype="bool") /* ty=Tensor[(48, 72), bool] */;
  %1239 = cast(meta[relay.Constant][65] /* ty=Tensor[(48, 72), float64] */, dtype="float64") /* ty=Tensor[(48, 72), float64] */;
  %1240 = shape_of(%1229, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1241 = cast(%1229, dtype="float64") /* ty=Tensor[(48, 72), float64] */;
  %1242 = dyn.reshape(%1239, %1240, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %1243 = floor_divide(%1241, %1242) /* ty=Tensor[(48, 72), float64] */;
  %1244 = cast(%1229, dtype="int64") /* ty=Tensor[(48, 72), int64] */;
  %1245 = shape_of(%1232, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1246 = cast(%1232, dtype="int64") /* ty=Tensor[(48, 72), int64] */;
  %1247 = dyn.reshape(%1244, %1245, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %1248 = bitwise_or(%1246, %1247) /* ty=Tensor[(48, 72), int64] */;
  %1249 = cast(%1248, dtype="uint8") /* ty=Tensor[(48, 72), uint8] */;
  %1250 = shape_of(%1243, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1251 = cast(%1243, dtype="uint8") /* ty=Tensor[(48, 72), uint8] */;
  %1252 = dyn.reshape(%1249, %1250, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %1253 = cast(%1248, dtype="float32") /* ty=Tensor[(48, 72), float32] */;
  %1254 = sinh(%1253) /* ty=Tensor[(48, 72), float32] */;
  %1255 = cast(%1254, dtype="float64") /* ty=Tensor[(48, 72), float64] */;
  %1256 = %1220.5;
  %1257 = @func_1378(%1222) /* ty=Tensor[(15, 1, 12), float32] */;
  %1258 = maximum(%1235, %1236) /* ty=Tensor[(48, 72), int16] */;
  %1259 = less_equal(%1237, %1238) /* ty=Tensor[(48, 72), bool] */;
  %1260 = right_shift(%1251, %1252) /* ty=Tensor[(48, 72), uint8] */;
  %1261 = sin(%1255) /* ty=Tensor[(48, 72), float64] */;
  (%1256, meta[relay.Constant][64] /* ty=Tensor[(770), float32] */, %1257, %var_18126, %1258, %1259, %1260, %1261)
}

def @func_7983(%var_7968: bool, %var_7969: Tensor[(4, 11, 10), bool]) -> Tensor[(4, 11, 10), bool] {
  %1262 = cast(%var_7968, dtype="bool") /* ty=bool */;
  %1263 = cast(%var_7969, dtype="bool") /* ty=Tensor[(4, 11, 10), bool] */;
  logical_or(%1262, %1263) /* ty=Tensor[(4, 11, 10), bool] */
}

def @func_8625() -> (Tensor[(72), float32], Tensor[(72), float32]) {
  %1268 = fn () -> (Tensor[(72), float32], Tensor[(72), float32]) {
    %1264 = @func_4665() /* ty=(Tensor[(4, 3, 6), float32], Tensor[(72), float32], Tensor[(180), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(80), float32], Tensor[(240), float32], Tensor[(72), float32]) */;
    %1265 = @func_3117() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
    %1266 = %1264.1;
    %1267 = %1265.0;
    (%1266, %1267)
  };
  %1268() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */
}

def @func_16570() -> (Tensor[(240), float32], Tensor[(72), float32], Tensor[(4, 3, 6), uint8]) {
  %1274 = fn () -> (Tensor[(240), float32], Tensor[(72), float32], Tensor[(4, 3, 6), uint8]) {
    %1269 = @func_13487() /* ty=(Tensor[(72), float32],) */;
    %1270 = @func_14076() /* ty=(Tensor[(72), float32], Tensor[(4, 3, 6), uint8], Tensor[(72), float32]) */;
    %1271 = @func_4550() /* ty=Tensor[(240), float32] */;
    %1272 = %1269.0;
    %1273 = %1270.1;
    (%1271, %1272, %1273)
  };
  %1274() /* ty=(Tensor[(240), float32], Tensor[(72), float32], Tensor[(4, 3, 6), uint8]) */
}

def @func_18524() -> (Tensor[(4, 3, 6), float32], Tensor[(4, 3, 9), bool]) {
  @func_18522() /* ty=(Tensor[(4, 3, 6), float32], Tensor[(4, 3, 9), bool]) */
}

def @func_8950(%var_8949: Tensor[(240), float32]) -> (Tensor[(72), float32], Tensor[(864), float32], Tensor[(240), float32], Tensor[(864), float32], Tensor[(12, 4), uint32]) {
  %1284 = fn (%var_8926: Tensor[(240), float32]) -> (Tensor[(72), float32], Tensor[(864), float32], Tensor[(240), float32], Tensor[(864), float32], Tensor[(12, 4), uint32]) {
    %1275 = cast(%var_8926, dtype="float32") /* ty=Tensor[(240), float32] */;
    %1276 = cast(meta[relay.Constant][66] /* ty=Tensor[(864), float32] */, dtype="float32") /* ty=Tensor[(864), float32] */;
    %1277 = cast(meta[relay.Constant][67] /* ty=Tensor[(12, 4), uint32] */, dtype="uint32") /* ty=Tensor[(12, 4), uint32] */;
    %1278 = reshape(%1275, newshape=[1, 240]) /* ty=Tensor[(1, 240), float32] */;
    %1279 = reshape(%1276, newshape=[864]) /* ty=Tensor[(864), float32] */;
    %1280 = reshape(%1277, newshape=[48]) /* ty=Tensor[(48), uint32] */;
    %1281 = @func_2669(%1278, %1279, %1280) /* ty=(Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(7, 14, 13), bool], Tensor[(1274), int32], Tensor[(80), float32], Tensor[(864), float32], Tensor[(4, 3, 6), bool], Tensor[(48), uint32], Tensor[(432), uint32], Tensor[(12, 240), float32], Tensor[(6, 3, 4), float64], Tensor[(10, 12, 13), float64], Tensor[(770, 240), bool]) */;
    %1282 = @func_4056() /* ty=Tensor[(72), float32] */;
    %1283 = %1281.6;
    (%1282, %1283, %var_8926, meta[relay.Constant][66] /* ty=Tensor[(864), float32] */, meta[relay.Constant][67] /* ty=Tensor[(12, 4), uint32] */)
  };
  %1284(%var_8949) /* ty=(Tensor[(72), float32], Tensor[(864), float32], Tensor[(240), float32], Tensor[(864), float32], Tensor[(12, 4), uint32]) */
}

def @func_11585() -> (Tensor[(4, 3, 6), float32],) {
  %1285 = @func_2351() /* ty=(Tensor[(72), float32], Tensor[(1274), int32], Tensor[(1274), int32], Tensor[(4, 3, 6), float32]) */;
  %1286 = %1285.3;
  (%1286,)
}

def @func_8688(%var_8686: Tensor[(900), float32]) -> (Tensor[(72), float32], Tensor[(15, 15, 4), float32], Tensor[(900), float32]) {
  @func_8685(%var_8686) /* ty=(Tensor[(72), float32], Tensor[(15, 15, 4), float32], Tensor[(900), float32]) */
}

def @func_14315() -> Tensor[(4, 3, 6), float32] {
  %1287 = @func_7058() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32], Tensor[(240), float32], Tensor[(72), float32]) */;
  %1287.2
}

def @func_17660() -> Tensor[(72), float32] {
  %1288 = fn () -> Tensor[(72), float32] {
    @func_8449() /* ty=Tensor[(72), float32] */
  };
  %1288() /* ty=Tensor[(72), float32] */
}

def @func_5646() -> Tensor[(72), float32] {
  @func_5644() /* ty=Tensor[(72), float32] */
}

def @func_11332() -> (Tensor[(72), float64], Tensor[(7, 9, 15), int8], Tensor[(945), int8], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32]) {
  %1289 = cast(meta[relay.Constant][68] /* ty=Tensor[(945), int8] */, dtype="int8") /* ty=Tensor[(945), int8] */;
  %1290 = reshape(%1289, newshape=[7, 9, 15]) /* ty=Tensor[(7, 9, 15), int8] */;
  %1291 = @func_2721() /* ty=(Tensor[(6, 13, 11), float64], Tensor[(72), float32]) */;
  %1292 = @func_4235() /* ty=(Tensor[(72), float32], Tensor[(48), uint32], Tensor[(48), uint32]) */;
  %1293 = @func_7433() /* ty=Tensor[(72), float64] */;
  %1294 = @func_7555(%1290) /* ty=Tensor[(7, 9, 15), int8] */;
  %1295 = %1291.1;
  %1296 = %1292.0;
  %1297 = @func_2978() /* ty=Tensor[(72), float32] */;
  (%1293, %1294, meta[relay.Constant][68] /* ty=Tensor[(945), int8] */, %1295, %1296, %1297)
}

def @func_15600(%var_15599: Tensor[(210, 2), float32]) -> (Tensor[(1274), int32], Tensor[(420), float32], Tensor[(210, 2), float32], Tensor[(72), float32]) {
  %1304 = fn (%var_15587: Tensor[(210, 2), float32]) -> (Tensor[(1274), int32], Tensor[(420), float32], Tensor[(210, 2), float32], Tensor[(72), float32]) {
    %1298 = cast(%var_15587, dtype="float32") /* ty=Tensor[(210, 2), float32] */;
    %1299 = reshape(%1298, newshape=[420]) /* ty=Tensor[(420), float32] */;
    %1300 = @func_6991(%1299) /* ty=(Tensor[(72), float32], Tensor[(2, 15, 14), float64], Tensor[(420), float32]) */;
    %1301 = @func_8867() /* ty=Tensor[(1274), int32] */;
    %1302 = %1300.2;
    %1303 = @func_2525() /* ty=Tensor[(72), float32] */;
    (%1301, %1302, %var_15587, %1303)
  };
  %1304(%var_15599) /* ty=(Tensor[(1274), int32], Tensor[(420), float32], Tensor[(210, 2), float32], Tensor[(72), float32]) */
}

def @func_9514() -> (Tensor[(4, 3, 6), float32], Tensor[(240), float32], Tensor[(864), float32], Tensor[(770, 1), float32]) {
  @func_9512() /* ty=(Tensor[(4, 3, 6), float32], Tensor[(240), float32], Tensor[(864), float32], Tensor[(770, 1), float32]) */
}

def @func_12550(%var_12533: uint16) -> (Tensor[(3, 6, 5), uint16], Tensor[(14, 5, 12), bool], Tensor[(12, 70), float32], Tensor[(72), float32]) {
  %1305 = cast(%var_12533, dtype="uint16") /* ty=uint16 */;
  %1306 = cast(meta[relay.Constant][69] /* ty=Tensor[(3, 6, 5), uint16] */, dtype="uint16") /* ty=Tensor[(3, 6, 5), uint16] */;
  %1307 = cast(meta[relay.Constant][70] /* ty=Tensor[(12, 70), float32] */, dtype="float32") /* ty=Tensor[(12, 70), float32] */;
  %1308 = reshape(%1307, newshape=[14, 5, 12]) /* ty=Tensor[(14, 5, 12), float32] */;
  %1309 = @func_10830(%1308) /* ty=(Tensor[(14, 5, 12), bool],) */;
  %1310 = maximum(%1305, %1306) /* ty=Tensor[(3, 6, 5), uint16] */;
  %1311 = %1309.0;
  %1312 = @func_3698() /* ty=Tensor[(72), float32] */;
  (%1310, %1311, meta[relay.Constant][70] /* ty=Tensor[(12, 70), float32] */, %1312)
}

def @func_18255(%var_18253: Tensor[(1008), float32]) -> (Tensor[(72), float32], Tensor[(900), float32], Tensor[(72), float32], Tensor[(1008), float32], Tensor[(48), uint32], Tensor[(72), float32]) {
  @func_18252(%var_18253) /* ty=(Tensor[(72), float32], Tensor[(900), float32], Tensor[(72), float32], Tensor[(1008), float32], Tensor[(48), uint32], Tensor[(72), float32]) */
}

def @func_3616() -> (Tensor[(72), float32], Tensor[(1274), int32]) {
  @func_3614() /* ty=(Tensor[(72), float32], Tensor[(1274), int32]) */
}

def @func_12137() -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32]) {
  @func_12135() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32]) */
}

def @func_8685(%var_8675: Tensor[(900), float32]) -> (Tensor[(72), float32], Tensor[(15, 15, 4), float32], Tensor[(900), float32]) {
  %1313 = @func_4064() /* ty=(Tensor[(72), float32],) */;
  %1314 = cast(%var_8675, dtype="float32") /* ty=Tensor[(900), float32] */;
  %1315 = reshape(%1314, newshape=[15, 15, 4]) /* ty=Tensor[(15, 15, 4), float32] */;
  %1316 = %1313.0;
  %1317 = @func_8171(%1315) /* ty=Tensor[(15, 15, 4), float32] */;
  (%1316, %1317, %var_8675)
}

def @func_9197() -> Tensor[(72), float32] {
  %1318 = @func_7058() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32], Tensor[(240), float32], Tensor[(72), float32]) */;
  %1318.4
}

def @func_14446() -> (Tensor[(72), float32],) {
  %1319 = @func_10632() /* ty=Tensor[(72), float32] */;
  (%1319,)
}

def @func_5489() -> (Tensor[(72), float32], Tensor[(72), float32]) {
  %1323 = fn () -> (Tensor[(72), float32], Tensor[(72), float32]) {
    %1320 = @func_2721() /* ty=(Tensor[(6, 13, 11), float64], Tensor[(72), float32]) */;
    %1321 = @func_3133() /* ty=Tensor[(72), float32] */;
    %1322 = %1320.1;
    (%1321, %1322)
  };
  %1323() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */
}

def @func_7963(%var_7961: Tensor[(180, 1), float32], %var_7962: Tensor[(4, 60), float32]) -> (Tensor[(420), float32], Tensor[(4, 3, 6), float32], Tensor[(72), float32], Tensor[(180, 1), float32], Tensor[(4, 60), int64]) {
  @func_7959(%var_7961, %var_7962) /* ty=(Tensor[(420), float32], Tensor[(4, 3, 6), float32], Tensor[(72), float32], Tensor[(180, 1), float32], Tensor[(4, 60), int64]) */
}

def @func_45(%var_19: Tensor[(7, 14, 13), int32], %var_20: Tensor[(7, 14, 13), int32]) -> (Tensor[(7, 14, 13), bool],) {
  %1324 = cast(%var_20, dtype="bool") /* ty=Tensor[(7, 14, 13), bool] */;
  %1325 = shape_of(%var_19, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1326 = cast(%var_19, dtype="bool") /* ty=Tensor[(7, 14, 13), bool] */;
  %1327 = dyn.reshape(%1324, %1325, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1328 = not_equal(%1326, %1327) /* ty=Tensor[(7, 14, 13), bool] */;
  (%1328,)
}

def @func_5611() -> Tensor[(72), float32] {
  @func_3133() /* ty=Tensor[(72), float32] */
}

def @func_4350(%var_4348: Tensor[(12, 4), uint32]) -> (Tensor[(72), float64], Tensor[(9, 16, 3), uint32], Tensor[(12, 4), uint32]) {
  @func_4347(%var_4348) /* ty=(Tensor[(72), float64], Tensor[(9, 16, 3), uint32], Tensor[(12, 4), uint32]) */
}

def @func_13107() -> (Tensor[(864), float32], Tensor[(72), float32], Tensor[(14, 5, 12), bool], Tensor[(840), float32], Tensor[(72), float32], Tensor[(72), float32]) {
  @func_13105() /* ty=(Tensor[(864), float32], Tensor[(72), float32], Tensor[(14, 5, 12), bool], Tensor[(840), float32], Tensor[(72), float32], Tensor[(72), float32]) */
}

def @func_16267() -> (Tensor[(1274), int32], Tensor[(2, 24), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32]) {
  @func_16265() /* ty=(Tensor[(1274), int32], Tensor[(2, 24), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32]) */
}

def @func_4066() -> (Tensor[(72), float32],) {
  @func_4064() /* ty=(Tensor[(72), float32],) */
}

def @func_13243() -> Tensor[(2, 24), bool] {
  %1337 = fn () -> Tensor[(2, 24), bool] {
    %1329 = @func_7423() /* ty=(Tensor[(4, 3, 6), float32], Tensor[(180), float32], Tensor[(2, 24), float32]) */;
    %1330 = %1329.2;
    %1331 = cast(%1330, dtype="float64") /* ty=Tensor[(2, 24), float64] */;
    %1332 = atanh(%1331) /* ty=Tensor[(2, 24), float64] */;
    %1333 = cast(%1330, dtype="bool") /* ty=Tensor[(2, 24), bool] */;
    %1334 = shape_of(%1332, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1335 = cast(%1332, dtype="bool") /* ty=Tensor[(2, 24), bool] */;
    %1336 = dyn.reshape(%1333, %1334, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    equal(%1335, %1336) /* ty=Tensor[(2, 24), bool] */
  };
  %1337() /* ty=Tensor[(2, 24), bool] */
}

def @func_12135() -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32]) {
  %1338 = @func_5644() /* ty=Tensor[(72), float32] */;
  %1339 = @func_5715() /* ty=Tensor[(72), float32] */;
  %1340 = @func_3698() /* ty=Tensor[(72), float32] */;
  (%1338, %1339, %1340)
}

def @func_17735(%var_17734: Tensor[(39), float32]) -> (Tensor[(72), float32], Tensor[(420), float32], Tensor[(4, 3, 6), bool], Tensor[(72), float32], Tensor[(2, 24), float64], Tensor[(13, 1, 3), float32], Tensor[(39), float32], Tensor[(72), float32]) {
  %1359 = fn (%var_17725: Tensor[(39), float32]) -> (Tensor[(72), float32], Tensor[(420), float32], Tensor[(4, 3, 6), bool], Tensor[(72), float32], Tensor[(2, 24), float64], Tensor[(13, 1, 3), float32], Tensor[(39), float32], Tensor[(72), float32]) {
    %1341 = cast(meta[relay.Constant][71] /* ty=Tensor[(420), float32] */, dtype="float32") /* ty=Tensor[(420), float32] */;
    %1342 = reshape(%1341, newshape=[210, 2]) /* ty=Tensor[(210, 2), float32] */;
    %1343 = @func_15598(%1342) /* ty=(Tensor[(1274), int32], Tensor[(420), float32], Tensor[(210, 2), float32], Tensor[(72), float32]) */;
    %1344 = %1343.3;
    %1345 = cast(%1344, dtype="float32") /* ty=Tensor[(72), float32] */;
    %1346 = reshape(%1345, newshape=[4, 3, 6]) /* ty=Tensor[(4, 3, 6), float32] */;
    %1347 = @func_12256() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32]) */;
    %1348 = @func_7423() /* ty=(Tensor[(4, 3, 6), float32], Tensor[(180), float32], Tensor[(2, 24), float32]) */;
    %1349 = %1348.2;
    %1350 = cast(%1349, dtype="float64") /* ty=Tensor[(2, 24), float64] */;
    %1351 = cast(%var_17725, dtype="float32") /* ty=Tensor[(39), float32] */;
    %1352 = reshape(%1351, newshape=[13, 1, 3]) /* ty=Tensor[(13, 1, 3), float32] */;
    %1353 = @func_15281() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32]) */;
    %1354 = @func_4204(%1346) /* ty=Tensor[(4, 3, 6), bool] */;
    %1355 = %1347.0;
    %1356 = log2(%1350) /* ty=Tensor[(2, 24), float64] */;
    %1357 = @func_7465(%1352) /* ty=Tensor[(13, 1, 3), float32] */;
    %1358 = %1353.2;
    (%1344, meta[relay.Constant][71] /* ty=Tensor[(420), float32] */, %1354, %1355, %1356, %1357, %var_17725, %1358)
  };
  %1359(%var_17734) /* ty=(Tensor[(72), float32], Tensor[(420), float32], Tensor[(4, 3, 6), bool], Tensor[(72), float32], Tensor[(2, 24), float64], Tensor[(13, 1, 3), float32], Tensor[(39), float32], Tensor[(72), float32]) */
}

def @func_17350() -> (Tensor[(72), float32],) {
  %1362 = fn () -> (Tensor[(72), float32],) {
    %1360 = @func_3749() /* ty=(Tensor[(240), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32]) */;
    %1361 = %1360.1;
    (%1361,)
  };
  %1362() /* ty=(Tensor[(72), float32],) */
}

def @func_11513() -> (Tensor[(72), float32], Tensor[(72), float32]) {
  @func_11511() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */
}

def @func_5055() -> (Tensor[(1274), int32], Tensor[(72), float32], Tensor[(72), float32]) {
  %1363 = @func_3614() /* ty=(Tensor[(72), float32], Tensor[(1274), int32]) */;
  %1364 = @func_3614() /* ty=(Tensor[(72), float32], Tensor[(1274), int32]) */;
  %1365 = %1363.1;
  %1366 = @func_4056() /* ty=Tensor[(72), float32] */;
  %1367 = %1364.0;
  (%1365, %1366, %1367)
}

def @func_17381() -> (Tensor[(72), float32],) {
  %1368 = @func_11387() /* ty=Tensor[(72), float32] */;
  (%1368,)
}

def @func_9928(%var_9927: Tensor[(4, 3, 6), float32]) -> (Tensor[(4, 3, 6), uint8],) {
  %1376 = fn (%var_9896: Tensor[(4, 3, 6), float32]) -> (Tensor[(4, 3, 6), uint8],) {
    %1369 = @func_2948() /* ty=(Tensor[(4, 3, 6), float32],) */;
    %1370 = %1369.0;
    %1371 = cast(%var_9896, dtype="uint8") /* ty=Tensor[(4, 3, 6), uint8] */;
    %1372 = shape_of(%1370, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1373 = cast(%1370, dtype="uint8") /* ty=Tensor[(4, 3, 6), uint8] */;
    %1374 = dyn.reshape(%1371, %1372, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %1375 = add(%1373, %1374) /* ty=Tensor[(4, 3, 6), uint8] */;
    (%1375,)
  };
  %1376(%var_9927) /* ty=(Tensor[(4, 3, 6), uint8],) */
}

def @func_17498(%var_17496: Tensor[(11, 9, 7), int64], %var_17497: Tensor[(11, 9, 7), int64]) -> (Tensor[(11, 9, 7), int64],) {
  @func_17494(%var_17496, %var_17497) /* ty=(Tensor[(11, 9, 7), int64],) */
}

def @func_3267(%var_3265: Tensor[(80), float32], %var_3266: Tensor[(240), float32]) -> (Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(240), float32]) {
  %1384 = fn (%var_3246: Tensor[(80), float32], %var_3247: Tensor[(240), float32]) -> (Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(240), float32]) {
    %1377 = @func_2191() /* ty=(Tensor[(72), float32],) */;
    %1378 = cast(%var_3246, dtype="float32") /* ty=Tensor[(80), float32] */;
    %1379 = cast(%var_3247, dtype="float32") /* ty=Tensor[(240), float32] */;
    %1380 = reshape(%1378, newshape=[8, 10, 1]) /* ty=Tensor[(8, 10, 1), float32] */;
    %1381 = reshape(%1379, newshape=[8, 10, 3]) /* ty=Tensor[(8, 10, 3), float32] */;
    %1382 = %1377.0;
    %1383 = @func_1589(%1380, %1381) /* ty=Tensor[(8, 10, 3), float32] */;
    (%1382, %1383, %var_3246, %var_3247)
  };
  %1384(%var_3265, %var_3266) /* ty=(Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(240), float32]) */
}

def @func_15281() -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32]) {
  %1385 = @func_11800() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %1386 = @func_13487() /* ty=(Tensor[(72), float32],) */;
  %1387 = @func_4665() /* ty=(Tensor[(4, 3, 6), float32], Tensor[(72), float32], Tensor[(180), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(80), float32], Tensor[(240), float32], Tensor[(72), float32]) */;
  %1388 = @func_13960() /* ty=Tensor[(72), float32] */;
  %1389 = %1385.1;
  %1390 = %1386.0;
  %1391 = %1387.7;
  (%1388, %1389, %1390, %1391)
}

def @func_7416(%var_7414: Tensor[(5, 10, 1), float64]) -> (Tensor[(5, 10, 1), float64],) {
  @func_7413(%var_7414) /* ty=(Tensor[(5, 10, 1), float64],) */
}

def @func_18988() -> (Tensor[(72), float32], Tensor[(7, 14, 13), bool], Tensor[(1274), int32], Tensor[(4, 3, 6), float32], Tensor[(80), float32], Tensor[(8, 16, 16), float64], Tensor[(2048), float64]) {
  @func_18986() /* ty=(Tensor[(72), float32], Tensor[(7, 14, 13), bool], Tensor[(1274), int32], Tensor[(4, 3, 6), float32], Tensor[(80), float32], Tensor[(8, 16, 16), float64], Tensor[(2048), float64]) */
}

def @func_8173(%var_8172: Tensor[(15, 15, 4), float32]) -> Tensor[(15, 15, 4), float32] {
  %1393 = fn (%var_8166: Tensor[(15, 15, 4), float32]) -> Tensor[(15, 15, 4), float32] {
    %1392 = cast(%var_8166, dtype="float32") /* ty=Tensor[(15, 15, 4), float32] */;
    cos(%1392) /* ty=Tensor[(15, 15, 4), float32] */
  };
  %1393(%var_8172) /* ty=Tensor[(15, 15, 4), float32] */
}

def @func_1914(%var_1913: Tensor[(1274), int32]) -> (Tensor[(10, 12, 13), float64], Tensor[(4, 3, 6), float32], Tensor[(36, 2), float32], Tensor[(7, 14, 13), bool], Tensor[(1274), int32]) {
  %1405 = fn (%var_1903: Tensor[(1274), int32]) -> (Tensor[(10, 12, 13), float64], Tensor[(4, 3, 6), float32], Tensor[(36, 2), float32], Tensor[(7, 14, 13), bool], Tensor[(1274), int32]) {
    %1394 = cast(meta[relay.Constant][72] /* ty=Tensor[(10, 12, 13), float64] */, dtype="float64") /* ty=Tensor[(10, 12, 13), float64] */;
    %1395 = cast(meta[relay.Constant][73] /* ty=Tensor[(36, 2), float32] */, dtype="float32") /* ty=Tensor[(36, 2), float32] */;
    %1396 = reshape(%1395, newshape=[4, 3, 6]) /* ty=Tensor[(4, 3, 6), float32] */;
    %1397 = cast(%var_1903, dtype="int32") /* ty=Tensor[(1274), int32] */;
    %1398 = cast(%var_1903, dtype="int32") /* ty=Tensor[(1274), int32] */;
    %1399 = reshape(%1397, newshape=[7, 14, 13]) /* ty=Tensor[(7, 14, 13), int32] */;
    %1400 = reshape(%1398, newshape=[7, 14, 13]) /* ty=Tensor[(7, 14, 13), int32] */;
    %1401 = @func_45(%1399, %1400) /* ty=(Tensor[(7, 14, 13), bool],) */;
    %1402 = cos(%1394) /* ty=Tensor[(10, 12, 13), float64] */;
    %1403 = @func_579(%1396) /* ty=Tensor[(4, 3, 6), float32] */;
    %1404 = %1401.0;
    (%1402, %1403, meta[relay.Constant][73] /* ty=Tensor[(36, 2), float32] */, %1404, %var_1903)
  };
  %1405(%var_1913) /* ty=(Tensor[(10, 12, 13), float64], Tensor[(4, 3, 6), float32], Tensor[(36, 2), float32], Tensor[(7, 14, 13), bool], Tensor[(1274), int32]) */
}

def @func_5715() -> Tensor[(72), float32] {
  %1406 = @func_3117() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %1406.1
}

def @func_6153(%var_6152: Tensor[(2, 432), float32]) -> (Tensor[(1274), int32], Tensor[(72), float32], Tensor[(1274), int32], Tensor[(4, 3, 6), float64], Tensor[(4, 3, 6), float32], Tensor[(770, 240), bool], Tensor[(240), float32], Tensor[(2, 432), float32], Tensor[(48), uint32]) {
  %1427 = fn (%var_6140: Tensor[(2, 432), float32]) -> (Tensor[(1274), int32], Tensor[(72), float32], Tensor[(1274), int32], Tensor[(4, 3, 6), float64], Tensor[(4, 3, 6), float32], Tensor[(770, 240), bool], Tensor[(240), float32], Tensor[(2, 432), float32], Tensor[(48), uint32]) {
    %1407 = @func_3870() /* ty=(Tensor[(4, 3, 6), float32], Tensor[(1274), int32]) */;
    %1408 = @func_5241() /* ty=(Tensor[(1274), int32], Tensor[(72), float32]) */;
    %1409 = @func_3870() /* ty=(Tensor[(4, 3, 6), float32], Tensor[(1274), int32]) */;
    %1410 = %1409.0;
    %1411 = cast(%1410, dtype="float64") /* ty=Tensor[(4, 3, 6), float64] */;
    %1412 = @func_4056() /* ty=Tensor[(72), float32] */;
    %1413 = cast(%1412, dtype="float32") /* ty=Tensor[(72), float32] */;
    %1414 = reshape(%1413, newshape=[4, 3, 6]) /* ty=Tensor[(4, 3, 6), float32] */;
    %1415 = cast(meta[relay.Constant][74] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
    %1416 = cast(%var_6140, dtype="float32") /* ty=Tensor[(2, 432), float32] */;
    %1417 = cast(meta[relay.Constant][75] /* ty=Tensor[(48), uint32] */, dtype="uint32") /* ty=Tensor[(48), uint32] */;
    %1418 = reshape(%1415, newshape=[1, 240]) /* ty=Tensor[(1, 240), float32] */;
    %1419 = reshape(%1416, newshape=[864]) /* ty=Tensor[(864), float32] */;
    %1420 = reshape(%1417, newshape=[48]) /* ty=Tensor[(48), uint32] */;
    %1421 = @func_2669(%1418, %1419, %1420) /* ty=(Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(7, 14, 13), bool], Tensor[(1274), int32], Tensor[(80), float32], Tensor[(864), float32], Tensor[(4, 3, 6), bool], Tensor[(48), uint32], Tensor[(432), uint32], Tensor[(12, 240), float32], Tensor[(6, 3, 4), float64], Tensor[(10, 12, 13), float64], Tensor[(770, 240), bool]) */;
    %1422 = %1407.1;
    %1423 = %1408.0;
    %1424 = erf(%1411) /* ty=Tensor[(4, 3, 6), float64] */;
    %1425 = @func_579(%1414) /* ty=Tensor[(4, 3, 6), float32] */;
    %1426 = %1421.13;
    (%1422, %1412, %1423, %1424, %1425, %1426, meta[relay.Constant][74] /* ty=Tensor[(240), float32] */, %var_6140, meta[relay.Constant][75] /* ty=Tensor[(48), uint32] */)
  };
  %1427(%var_6152) /* ty=(Tensor[(1274), int32], Tensor[(72), float32], Tensor[(1274), int32], Tensor[(4, 3, 6), float64], Tensor[(4, 3, 6), float32], Tensor[(770, 240), bool], Tensor[(240), float32], Tensor[(2, 432), float32], Tensor[(48), uint32]) */
}

def @func_6228() -> (Tensor[(72), float32],) {
  %1428 = @func_3117() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %1429 = %1428.1;
  (%1429,)
}

def @func_18276() -> (Tensor[(48), uint32], Tensor[(72), float32]) {
  %1430 = @func_6859() /* ty=(Tensor[(48), uint32],) */;
  %1431 = @func_8741() /* ty=(Tensor[(72), float32],) */;
  %1432 = %1430.0;
  %1433 = %1431.0;
  (%1432, %1433)
}

def @func_11008() -> (Tensor[(240), float32],) {
  @func_11006() /* ty=(Tensor[(240), float32],) */
}

def @func_3196() -> Tensor[(72), float32] {
  @func_3194() /* ty=Tensor[(72), float32] */
}

def @func_7372() -> (Tensor[(1274), int32],) {
  %1436 = fn () -> (Tensor[(1274), int32],) {
    %1434 = @func_5241() /* ty=(Tensor[(1274), int32], Tensor[(72), float32]) */;
    %1435 = %1434.0;
    (%1435,)
  };
  %1436() /* ty=(Tensor[(1274), int32],) */
}

def @func_18437(%var_18433: Tensor[(1008), float32]) -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(1008), float32]) {
  %1437 = @func_10125() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32]) */;
  %1438 = cast(%var_18433, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %1439 = reshape(%1438, newshape=[2, 504]) /* ty=Tensor[(2, 504), float32] */;
  %1440 = @func_17430(%1439) /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(2, 504), float32]) */;
  %1441 = %1437.0;
  %1442 = %1440.0;
  (%1441, %1442, %var_18433)
}

def @func_2883() -> (Tensor[(72), float32], Tensor[(1274), int32]) {
  @func_2881() /* ty=(Tensor[(72), float32], Tensor[(1274), int32]) */
}

def @func_10557() -> (Tensor[(72), float32], Tensor[(72), float32]) {
  @func_10555() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */
}

def @func_2527() -> Tensor[(72), float32] {
  @func_2525() /* ty=Tensor[(72), float32] */
}

def @func_9332() -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(864), float32], Tensor[(72), float32], Tensor[(180), float32], Tensor[(48), uint32], Tensor[(72), float32]) {
  @func_9330() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(864), float32], Tensor[(72), float32], Tensor[(180), float32], Tensor[(48), uint32], Tensor[(72), float32]) */
}

def @func_17960() -> (Tensor[(72), float32],) {
  @func_17958() /* ty=(Tensor[(72), float32],) */
}

def @func_2351() -> (Tensor[(72), float32], Tensor[(1274), int32], Tensor[(1274), int32], Tensor[(4, 3, 6), float32]) {
  %1443 = @func_2191() /* ty=(Tensor[(72), float32],) */;
  %1444 = cast(meta[relay.Constant][76] /* ty=Tensor[(1274), int32] */, dtype="int32") /* ty=Tensor[(1274), int32] */;
  %1445 = reshape(%1444, newshape=[1274]) /* ty=Tensor[(1274), int32] */;
  %1446 = @func_1912(%1445) /* ty=(Tensor[(10, 12, 13), float64], Tensor[(4, 3, 6), float32], Tensor[(36, 2), float32], Tensor[(7, 14, 13), bool], Tensor[(1274), int32]) */;
  %1447 = @func_2184() /* ty=(Tensor[(6, 13, 11), float64], Tensor[(4, 3, 6), float32], Tensor[(72), float32]) */;
  %1448 = %1443.0;
  %1449 = %1446.4;
  %1450 = %1447.1;
  (%1448, %1449, meta[relay.Constant][76] /* ty=Tensor[(1274), int32] */, %1450)
}

def @func_3081(%var_3080: Tensor[(48), uint32]) -> (Tensor[(72), float32], Tensor[(9, 16, 3), uint32], Tensor[(48), uint32], Tensor[(432, 1), uint32]) {
  %1459 = fn (%var_3075: Tensor[(48), uint32]) -> (Tensor[(72), float32], Tensor[(9, 16, 3), uint32], Tensor[(48), uint32], Tensor[(432, 1), uint32]) {
    %1451 = @func_2842() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
    %1452 = cast(%var_3075, dtype="uint32") /* ty=Tensor[(48), uint32] */;
    %1453 = cast(meta[relay.Constant][77] /* ty=Tensor[(432, 1), uint32] */, dtype="uint32") /* ty=Tensor[(432, 1), uint32] */;
    %1454 = reshape(%1452, newshape=[1, 16, 3]) /* ty=Tensor[(1, 16, 3), uint32] */;
    %1455 = reshape(%1453, newshape=[9, 16, 3]) /* ty=Tensor[(9, 16, 3), uint32] */;
    %1456 = @func_852(%1454, %1455) /* ty=(Tensor[(9, 16, 3), uint32], Tensor[(4, 3, 6), bool]) */;
    %1457 = %1451.1;
    %1458 = %1456.0;
    (%1457, %1458, %var_3075, meta[relay.Constant][77] /* ty=Tensor[(432, 1), uint32] */)
  };
  %1459(%var_3080) /* ty=(Tensor[(72), float32], Tensor[(9, 16, 3), uint32], Tensor[(48), uint32], Tensor[(432, 1), uint32]) */
}

def @func_855(%var_853: Tensor[(1, 16, 3), uint32], %var_854: Tensor[(9, 16, 3), uint32]) -> (Tensor[(9, 16, 3), uint32], Tensor[(4, 3, 6), bool]) {
  %1471 = fn (%var_832: Tensor[(1, 16, 3), uint32], %var_833: Tensor[(9, 16, 3), uint32]) -> (Tensor[(9, 16, 3), uint32], Tensor[(4, 3, 6), bool]) {
    %1460 = cast(%var_832, dtype="uint32") /* ty=Tensor[(1, 16, 3), uint32] */;
    %1461 = cast(%var_833, dtype="uint32") /* ty=Tensor[(9, 16, 3), uint32] */;
    %1462 = cast(meta[relay.Constant][78] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
    %1463 = reshape(%1462, newshape=[4, 3, 6]) /* ty=Tensor[(4, 3, 6), float32] */;
    %1464 = @func_579(%1463) /* ty=Tensor[(4, 3, 6), float32] */;
    %1465 = cast(meta[relay.Constant][78] /* ty=Tensor[(72), float32] */, dtype="bool") /* ty=Tensor[(72), bool] */;
    %1466 = shape_of(%1464, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1467 = cast(%1464, dtype="bool") /* ty=Tensor[(4, 3, 6), bool] */;
    %1468 = dyn.reshape(%1465, %1466, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1469 = bitwise_or(%1460, %1461) /* ty=Tensor[(9, 16, 3), uint32] */;
    %1470 = not_equal(%1467, %1468) /* ty=Tensor[(4, 3, 6), bool] */;
    (%1469, %1470)
  };
  %1471(%var_853, %var_854) /* ty=(Tensor[(9, 16, 3), uint32], Tensor[(4, 3, 6), bool]) */
}

def @func_8743() -> (Tensor[(72), float32],) {
  @func_8741() /* ty=(Tensor[(72), float32],) */
}

def @func_11215(%var_11164: Tensor[(1008), float32], %var_11165: Tensor[(48), uint32]) -> (Tensor[(4, 3, 9), float32], Tensor[(72), float32], Tensor[(1008), float32], Tensor[(48), uint32], Tensor[(72), float32], Tensor[(4, 3, 6), bool]) {
  %1472 = @func_9243() /* ty=Tensor[(4, 3, 9), bool] */;
  %1473 = cast(%1472, dtype="float32") /* ty=Tensor[(4, 3, 9), float32] */;
  %1474 = cast(%var_11164, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %1475 = cast(%var_11165, dtype="uint32") /* ty=Tensor[(48), uint32] */;
  %1476 = reshape(%1474, newshape=[1008]) /* ty=Tensor[(1008), float32] */;
  %1477 = reshape(%1475, newshape=[48]) /* ty=Tensor[(48), uint32] */;
  %1478 = @func_9760(%1476, %1477) /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(80, 2), float64], Tensor[(1008), float32], Tensor[(160), float64], Tensor[(72), float32], Tensor[(432, 1), uint32], Tensor[(48), uint32]) */;
  %1479 = @func_10078() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32]) */;
  %1480 = %1479.0;
  %1481 = cast(%1480, dtype="float32") /* ty=Tensor[(72), float32] */;
  %1482 = reshape(%1481, newshape=[4, 3, 6]) /* ty=Tensor[(4, 3, 6), float32] */;
  %1483 = @func_10488(%1482) /* ty=(Tensor[(4, 3, 6), bool], Tensor[(240), float32]) */;
  %1484 = log2(%1473) /* ty=Tensor[(4, 3, 9), float32] */;
  %1485 = %1478.1;
  %1486 = %1483.0;
  (%1484, %1485, %var_11164, %var_11165, %1480, %1486)
}

def @func_4823() -> (Tensor[(864), float32], Tensor[(48), uint32]) {
  @func_4821() /* ty=(Tensor[(864), float32], Tensor[(48), uint32]) */
}

def @func_8029(%var_8027: Tensor[(1008), float32]) -> (Tensor[(72), float32], Tensor[(16, 9, 7), float32], Tensor[(1008), float32], Tensor[(160), float64], Tensor[(8, 10, 3), float32], Tensor[(240), float32], Tensor[(4, 3, 6), float32]) {
  @func_8026(%var_8027) /* ty=(Tensor[(72), float32], Tensor[(16, 9, 7), float32], Tensor[(1008), float32], Tensor[(160), float64], Tensor[(8, 10, 3), float32], Tensor[(240), float32], Tensor[(4, 3, 6), float32]) */
}

def @func_12005() -> Tensor[(72), float32] {
  %1487 = @func_4235() /* ty=(Tensor[(72), float32], Tensor[(48), uint32], Tensor[(48), uint32]) */;
  %1487.0
}

def @func_2844() -> (Tensor[(72), float32], Tensor[(72), float32]) {
  @func_2842() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */
}

def @func_7433() -> Tensor[(72), float64] {
  %1488 = @func_3854() /* ty=(Tensor[(72), float64], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32]) */;
  %1488.0
}

def @func_4505(%var_4503: Tensor[(4, 6, 11), int32], %var_4504: Tensor[(4, 6, 11), int32]) -> (Tensor[(4, 6, 11), int32], Tensor[(4, 6, 11), float64], Tensor[(1274), int32], Tensor[(72), float32]) {
  @func_4501(%var_4503, %var_4504) /* ty=(Tensor[(4, 6, 11), int32], Tensor[(4, 6, 11), float64], Tensor[(1274), int32], Tensor[(72), float32]) */
}

def @func_10604() -> (Tensor[(48), uint32], Tensor[(72), float32], Tensor[(1274), int32]) {
  %1489 = @func_4732() /* ty=(Tensor[(48), uint32],) */;
  %1490 = @func_6228() /* ty=(Tensor[(72), float32],) */;
  %1491 = @func_3870() /* ty=(Tensor[(4, 3, 6), float32], Tensor[(1274), int32]) */;
  %1492 = %1489.0;
  %1493 = %1490.0;
  %1494 = %1491.1;
  (%1492, %1493, %1494)
}

def @func_49(%var_47: Tensor[(7, 14, 13), int32], %var_48: Tensor[(7, 14, 13), int32]) -> (Tensor[(7, 14, 13), bool],) {
  @func_45(%var_47, %var_48) /* ty=(Tensor[(7, 14, 13), bool],) */
}

def @func_14149() -> Tensor[(72), float32] {
  @func_14147() /* ty=Tensor[(72), float32] */
}

def @func_8392() -> (Tensor[(1274), int32], Tensor[(1274), int32], Tensor[(4, 3, 6), float32]) {
  @func_8390() /* ty=(Tensor[(1274), int32], Tensor[(1274), int32], Tensor[(4, 3, 6), float32]) */
}

def @func_4235() -> (Tensor[(72), float32], Tensor[(48), uint32], Tensor[(48), uint32]) {
  %1495 = @func_2931() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %1496 = cast(meta[relay.Constant][79] /* ty=Tensor[(48), uint32] */, dtype="uint32") /* ty=Tensor[(48), uint32] */;
  %1497 = reshape(%1496, newshape=[48]) /* ty=Tensor[(48), uint32] */;
  %1498 = @func_3079(%1497) /* ty=(Tensor[(72), float32], Tensor[(9, 16, 3), uint32], Tensor[(48), uint32], Tensor[(432, 1), uint32]) */;
  %1499 = %1495.1;
  %1500 = %1498.2;
  (%1499, %1500, meta[relay.Constant][79] /* ty=Tensor[(48), uint32] */)
}

def @func_14390() -> (Tensor[(4, 3, 6), float32], Tensor[(72), float32]) {
  %1501 = @func_3870() /* ty=(Tensor[(4, 3, 6), float32], Tensor[(1274), int32]) */;
  %1502 = %1501.0;
  %1503 = cast(%1502, dtype="float32") /* ty=Tensor[(4, 3, 6), float32] */;
  %1504 = @func_7058() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32], Tensor[(240), float32], Tensor[(72), float32]) */;
  %1505 = atanh(%1503) /* ty=Tensor[(4, 3, 6), float32] */;
  %1506 = %1504.0;
  (%1505, %1506)
}

def @func_4933() -> Tensor[(72), float32] {
  @func_2739() /* ty=Tensor[(72), float32] */
}

def @func_17144() -> Tensor[(72), float64] {
  @func_7433() /* ty=Tensor[(72), float64] */
}

def @func_6894(%var_6892: Tensor[(16, 9, 7), float32], %var_6893: Tensor[(80, 2), float64]) -> (Tensor[(16, 9, 7), float32], Tensor[(8, 5, 4), float64], Tensor[(80, 2), float64]) {
  @func_6890(%var_6892, %var_6893) /* ty=(Tensor[(16, 9, 7), float32], Tensor[(8, 5, 4), float64], Tensor[(80, 2), float64]) */
}

def @func_14643() -> (Tensor[(72), float32], Tensor[(420), float32], Tensor[(80), float32]) {
  %1507 = @func_4064() /* ty=(Tensor[(72), float32],) */;
  %1508 = @func_7664() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(420), float32], Tensor[(420), float32]) */;
  %1509 = %1507.0;
  %1510 = %1508.3;
  %1511 = @func_10978() /* ty=Tensor[(80), float32] */;
  (%1509, %1510, %1511)
}

def @func_13632() -> Tensor[(72), float32] {
  %1513 = fn () -> Tensor[(72), float32] {
    %1512 = @func_12617() /* ty=(Tensor[(72), float32],) */;
    %1512.0
  };
  %1513() /* ty=Tensor[(72), float32] */
}

def @func_9245() -> Tensor[(4, 3, 9), bool] {
  @func_9243() /* ty=Tensor[(4, 3, 9), bool] */
}

def @func_17629(%var_17597: Tensor[(440, 1), bool]) -> (Tensor[(72), float32], Tensor[(4, 11, 10), bool], bool, Tensor[(440, 1), bool], Tensor[(72), float32]) {
  %1514 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %1515 = cast(%var_17597, dtype="bool") /* ty=Tensor[(440, 1), bool] */;
  %1516 = reshape(%1514, newshape=[]) /* ty=bool */;
  %1517 = reshape(%1515, newshape=[4, 11, 10]) /* ty=Tensor[(4, 11, 10), bool] */;
  %1518 = @func_16100() /* ty=(Tensor[(180), float32], Tensor[(72), float32]) */;
  %1519 = @func_2978() /* ty=Tensor[(72), float32] */;
  %1520 = @func_7983(%1516, %1517) /* ty=Tensor[(4, 11, 10), bool] */;
  %1521 = %1518.1;
  (%1519, %1520, True /* ty=bool */, %var_17597, %1521)
}

def @func_15305() -> (Tensor[(4, 3, 6), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32]) {
  @func_15303() /* ty=(Tensor[(4, 3, 6), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32]) */
}

def @func_16761() -> (Tensor[(72), float32],) {
  %1523 = fn () -> (Tensor[(72), float32],) {
    %1522 = @func_8449() /* ty=Tensor[(72), float32] */;
    (%1522,)
  };
  %1523() /* ty=(Tensor[(72), float32],) */
}

def @func_579(%var_555: Tensor[(4, 3, 6), float32]) -> Tensor[(4, 3, 6), float32] {
  %1524 = cast(meta[relay.Constant][80] /* ty=Tensor[(4, 3, 6), float32] */, dtype="float32") /* ty=Tensor[(4, 3, 6), float32] */;
  %1525 = shape_of(%var_555, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1526 = cast(%var_555, dtype="float32") /* ty=Tensor[(4, 3, 6), float32] */;
  %1527 = dyn.reshape(%1524, %1525, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%1526, %1527) /* ty=Tensor[(4, 3, 6), float32] */
}

def @func_6486() -> (Tensor[(80), float32], Tensor[(8, 5, 4), float64], Tensor[(160), float64], Tensor[(72), float32], Tensor[(72), float32]) {
  %1528 = @func_3151() /* ty=(Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(240), float32]) */;
  %1529 = cast(meta[relay.Constant][81] /* ty=Tensor[(160), float64] */, dtype="float64") /* ty=Tensor[(160), float64] */;
  %1530 = reshape(%1529, newshape=[8, 5, 4]) /* ty=Tensor[(8, 5, 4), float64] */;
  %1531 = @func_6228() /* ty=(Tensor[(72), float32],) */;
  %1532 = @func_4064() /* ty=(Tensor[(72), float32],) */;
  %1533 = %1528.2;
  %1534 = @func_3099(%1530) /* ty=Tensor[(8, 5, 4), float64] */;
  %1535 = %1531.0;
  %1536 = %1532.0;
  (%1533, %1534, meta[relay.Constant][81] /* ty=Tensor[(160), float64] */, %1535, %1536)
}

def @func_14682() -> Tensor[(72), float32] {
  @func_5644() /* ty=Tensor[(72), float32] */
}

def @func_7345(%var_7343: Tensor[(448), float64], %var_7344: Tensor[(48), float32]) -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(448), float64], Tensor[(?, 16, 3), bool], Tensor[(48), float32]) {
  %1547 = fn (%var_7328: Tensor[(448), float64], %var_7333: Tensor[(48), float32]) -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(448), float64], Tensor[(?, 16, 3), bool], Tensor[(48), float32]) {
    %1537 = @func_3151() /* ty=(Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(240), float32]) */;
    %1538 = cast(%var_7328, dtype="float64") /* ty=Tensor[(448), float64] */;
    %1539 = reshape(%1538, newshape=[4, 14, 8]) /* ty=Tensor[(4, 14, 8), float64] */;
    %1540 = @func_3529(%1539) /* ty=(Tensor[(4, 14, 8), float64], Tensor[(72), float32]) */;
    %1541 = cast(%var_7333, dtype="float32") /* ty=Tensor[(48), float32] */;
    %1542 = reshape(%1541, newshape=[48]) /* ty=Tensor[(48), float32] */;
    %1543 = @func_5586(%1542) /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(?, 16, 3), bool], Tensor[(48), float32], Tensor[(180), float32], Tensor[(180), float32]) */;
    %1544 = %1537.0;
    %1545 = %1540.1;
    %1546 = %1543.2;
    (%1544, %1545, %var_7328, %1546, %var_7333)
  };
  %1547(%var_7343, %var_7344) /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(448), float64], Tensor[(?, 16, 3), bool], Tensor[(48), float32]) */
}

def @func_19100() -> Tensor[(80), float32] {
  %1549 = fn () -> Tensor[(80), float32] {
    %1548 = @func_14643() /* ty=(Tensor[(72), float32], Tensor[(420), float32], Tensor[(80), float32]) */;
    %1548.2
  };
  %1549() /* ty=Tensor[(80), float32] */
}

def @func_16606() -> (Tensor[(72), float32],) {
  @func_16604() /* ty=(Tensor[(72), float32],) */
}

def @func_14573(%var_14569: Tensor[(3360), float64], %var_14570: Tensor[(1274), int32], %var_14571: Tensor[(260), int32], %var_14572: Tensor[(2, 24), float32]) -> (Tensor[(4, 3, 6), float32], Tensor[(4, 3, 6), float32], Tensor[(7, 14, 13), bool], Tensor[(3360), float64], Tensor[(1274), int32], Tensor[(72), float32], Tensor[(20), int32], Tensor[(260), int32], Tensor[(72), float32], Tensor[(2, 24), float64]) {
  @func_14567(%var_14569, %var_14570, %var_14571, %var_14572) /* ty=(Tensor[(4, 3, 6), float32], Tensor[(4, 3, 6), float32], Tensor[(7, 14, 13), bool], Tensor[(3360), float64], Tensor[(1274), int32], Tensor[(72), float32], Tensor[(20), int32], Tensor[(260), int32], Tensor[(72), float32], Tensor[(2, 24), float64]) */
}

def @func_4056() -> Tensor[(72), float32] {
  %1550 = @func_3854() /* ty=(Tensor[(72), float64], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32]) */;
  %1550.1
}

def @func_7128() -> Tensor[(72), float32] {
  @func_3133() /* ty=Tensor[(72), float32] */
}

def @func_2184() -> (Tensor[(6, 13, 11), float64], Tensor[(4, 3, 6), float32], Tensor[(72), float32]) {
  %1551 = cast(meta[relay.Constant][82] /* ty=Tensor[(6, 13, 11), float64] */, dtype="float64") /* ty=Tensor[(6, 13, 11), float64] */;
  %1552 = cast(meta[relay.Constant][83] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %1553 = reshape(%1552, newshape=[4, 3, 6]) /* ty=Tensor[(4, 3, 6), float32] */;
  %1554 = acosh(%1551) /* ty=Tensor[(6, 13, 11), float64] */;
  %1555 = @func_579(%1553) /* ty=Tensor[(4, 3, 6), float32] */;
  (%1554, %1555, meta[relay.Constant][83] /* ty=Tensor[(72), float32] */)
}

def @func_4462() -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32]) {
  %1561 = fn () -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32]) {
    %1556 = @func_3362() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(8, 5, 4), float64], Tensor[(160), float64]) */;
    %1557 = @func_2184() /* ty=(Tensor[(6, 13, 11), float64], Tensor[(4, 3, 6), float32], Tensor[(72), float32]) */;
    %1558 = @func_3698() /* ty=Tensor[(72), float32] */;
    %1559 = %1556.1;
    %1560 = %1557.1;
    (%1558, %1559, %1560)
  };
  %1561() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32]) */
}

def @func_2881() -> (Tensor[(72), float32], Tensor[(1274), int32]) {
  %1562 = @func_2721() /* ty=(Tensor[(6, 13, 11), float64], Tensor[(72), float32]) */;
  %1563 = @func_2351() /* ty=(Tensor[(72), float32], Tensor[(1274), int32], Tensor[(1274), int32], Tensor[(4, 3, 6), float32]) */;
  %1564 = %1562.1;
  %1565 = %1563.1;
  (%1564, %1565)
}

def @func_2948() -> (Tensor[(4, 3, 6), float32],) {
  %1566 = @func_2184() /* ty=(Tensor[(6, 13, 11), float64], Tensor[(4, 3, 6), float32], Tensor[(72), float32]) */;
  %1567 = %1566.1;
  (%1567,)
}

def @func_8370() -> Tensor[(72), float32] {
  %1568 = fn () -> Tensor[(72), float32] {
    @func_2978() /* ty=Tensor[(72), float32] */
  };
  %1568() /* ty=Tensor[(72), float32] */
}

def @func_2001(%var_1998: Tensor[(864), float32]) -> (Tensor[(6, 3, 4), float64], Tensor[(12, 6, 12), bool], Tensor[(864), float32]) {
  %1569 = cast(meta[relay.Constant][84] /* ty=Tensor[(6, 3, 4), float64] */, dtype="float64") /* ty=Tensor[(6, 3, 4), float64] */;
  %1570 = cast(%var_1998, dtype="float32") /* ty=Tensor[(864), float32] */;
  %1571 = reshape(%1570, newshape=[12, 6, 12]) /* ty=Tensor[(12, 6, 12), float32] */;
  %1572 = log(%1569) /* ty=Tensor[(6, 3, 4), float64] */;
  %1573 = @func_790(%1571) /* ty=Tensor[(12, 6, 12), bool] */;
  (%1572, %1573, %var_1998)
}

def @func_14749() -> Tensor[(72), float32] {
  @func_14747() /* ty=Tensor[(72), float32] */
}

def @func_17072() -> Tensor[(4, 3, 6), bool] {
  @func_14915() /* ty=Tensor[(4, 3, 6), bool] */
}

def @func_18892() -> (Tensor[(4, 3, 6), float32], Tensor[(72), float32]) {
  %1577 = fn () -> (Tensor[(4, 3, 6), float32], Tensor[(72), float32]) {
    %1574 = @func_8150() /* ty=(Tensor[(72), float32], Tensor[(4, 3, 6), float32], Tensor[(48), uint32], Tensor[(4, 3, 6), float32], Tensor[(72), float32], Tensor[(48), uint32]) */;
    %1575 = %1574.1;
    %1576 = @func_5611() /* ty=Tensor[(72), float32] */;
    (%1575, %1576)
  };
  %1577() /* ty=(Tensor[(4, 3, 6), float32], Tensor[(72), float32]) */
}

def @func_7059() -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32], Tensor[(240), float32], Tensor[(72), float32]) {
  %1587 = fn () -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32], Tensor[(240), float32], Tensor[(72), float32]) {
    %1578 = @func_6486() /* ty=(Tensor[(80), float32], Tensor[(8, 5, 4), float64], Tensor[(160), float64], Tensor[(72), float32], Tensor[(72), float32]) */;
    %1579 = cast(meta[relay.Constant][85] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
    %1580 = reshape(%1579, newshape=[24, 10]) /* ty=Tensor[(24, 10), float32] */;
    %1581 = @func_4795(%1580) /* ty=(Tensor[(4, 3, 6), float32], Tensor[(24, 10), bool], Tensor[(24, 10), bool]) */;
    %1582 = @func_6699() /* ty=(Tensor[(72), float32],) */;
    %1583 = @func_3194() /* ty=Tensor[(72), float32] */;
    %1584 = %1578.3;
    %1585 = %1581.0;
    %1586 = %1582.0;
    (%1583, %1584, %1585, meta[relay.Constant][85] /* ty=Tensor[(240), float32] */, %1586)
  };
  %1587() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32], Tensor[(240), float32], Tensor[(72), float32]) */
}

def @func_12617() -> (Tensor[(72), float32],) {
  %1588 = @func_7058() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32], Tensor[(240), float32], Tensor[(72), float32]) */;
  %1589 = %1588.0;
  (%1589,)
}

def @func_10632() -> Tensor[(72), float32] {
  @func_5715() /* ty=Tensor[(72), float32] */
}

def @func_9003() -> (Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(180, 1), float32]) {
  %1590 = @func_2881() /* ty=(Tensor[(72), float32], Tensor[(1274), int32]) */;
  %1591 = cast(meta[relay.Constant][86] /* ty=Tensor[(180, 1), float32] */, dtype="float32") /* ty=Tensor[(180, 1), float32] */;
  %1592 = reshape(%1591, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %1593 = @func_3052(%1592) /* ty=(Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(4, 60), float32], Tensor[(864), float32], Tensor[(48), uint32], Tensor[(15, 1, 12), float32], Tensor[(180), float32], Tensor[(72), float32], Tensor[(72), float32]) */;
  %1594 = %1590.0;
  %1595 = %1593.1;
  (%1594, %1595, meta[relay.Constant][86] /* ty=Tensor[(180, 1), float32] */)
}

def @func_13301(%var_13299: Tensor[(14, 16, 15), float64], %var_13300: Tensor[(1274), int32]) -> (Tensor[(14, 16, 15), float64], Tensor[(7, 14, 13), bool], Tensor[(1274), int32], Tensor[(72), float32]) {
  @func_13297(%var_13299, %var_13300) /* ty=(Tensor[(14, 16, 15), float64], Tensor[(7, 14, 13), bool], Tensor[(1274), int32], Tensor[(72), float32]) */
}

def @func_4058() -> Tensor[(72), float32] {
  @func_4056() /* ty=Tensor[(72), float32] */
}

def @func_15085(%var_15084: Tensor[(2, 24), float32]) -> Tensor[(2, 24), uint64] {
  %1602 = fn (%var_15078: Tensor[(2, 24), float32]) -> Tensor[(2, 24), uint64] {
    %1596 = @func_7423() /* ty=(Tensor[(4, 3, 6), float32], Tensor[(180), float32], Tensor[(2, 24), float32]) */;
    %1597 = %1596.2;
    %1598 = cast(%var_15078, dtype="uint64") /* ty=Tensor[(2, 24), uint64] */;
    %1599 = shape_of(%1597, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1600 = cast(%1597, dtype="uint64") /* ty=Tensor[(2, 24), uint64] */;
    %1601 = dyn.reshape(%1598, %1599, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
    bitwise_and(%1600, %1601) /* ty=Tensor[(2, 24), uint64] */
  };
  %1602(%var_15084) /* ty=Tensor[(2, 24), uint64] */
}

def @func_1468(%var_1466: Tensor[(1, 16, 3), float32], %var_1467: Tensor[(180), float32]) -> (Tensor[(7, 14, 13), bool], Tensor[(1274), int32], Tensor[(4, 3, 6), bool], Tensor[(36, 12), uint32], Tensor[(4, 3, 6), float32], Tensor[(?, 16, 3), bool], Tensor[(12, 6, 12), bool], Tensor[(864), float32], Tensor[(15, 1, 12), float32], Tensor[(180), float32]) {
  @func_1464(%var_1466, %var_1467) /* ty=(Tensor[(7, 14, 13), bool], Tensor[(1274), int32], Tensor[(4, 3, 6), bool], Tensor[(36, 12), uint32], Tensor[(4, 3, 6), float32], Tensor[(?, 16, 3), bool], Tensor[(12, 6, 12), bool], Tensor[(864), float32], Tensor[(15, 1, 12), float32], Tensor[(180), float32]) */
}

def @func_3194() -> Tensor[(72), float32] {
  %1603 = @func_3117() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %1603.0
}

def @func_18440(%var_18438: Tensor[(1008), float32]) -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(1008), float32]) {
  @func_18437(%var_18438) /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(1008), float32]) */
}

def @func_8859() -> (Tensor[(8, 5, 4), float64], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32]) {
  @func_8857() /* ty=(Tensor[(8, 5, 4), float64], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32]) */
}

def @func_10491(%var_10489: Tensor[(4, 3, 6), float32]) -> (Tensor[(4, 3, 6), bool], Tensor[(240), float32]) {
  @func_10488(%var_10489) /* ty=(Tensor[(4, 3, 6), bool], Tensor[(240), float32]) */
}

def @func_1378(%var_1373: Tensor[(15, 1, 12), float32]) -> Tensor[(15, 1, 12), float32] {
  %1604 = cast(%var_1373, dtype="float32") /* ty=Tensor[(15, 1, 12), float32] */;
  acos(%1604) /* ty=Tensor[(15, 1, 12), float32] */
}

def @func_7212(%var_7210: Tensor[(96), float32], %var_7211: Tensor[(20, 4), float32]) -> (Tensor[(72), float32], Tensor[(48), uint32], Tensor[(12, ?, 8), bool], Tensor[(96), float32], Tensor[(20, 4), float32]) {
  @func_7208(%var_7210, %var_7211) /* ty=(Tensor[(72), float32], Tensor[(48), uint32], Tensor[(12, ?, 8), bool], Tensor[(96), float32], Tensor[(20, 4), float32]) */
}

def @func_2191() -> (Tensor[(72), float32],) {
  %1605 = @func_2184() /* ty=(Tensor[(6, 13, 11), float64], Tensor[(4, 3, 6), float32], Tensor[(72), float32]) */;
  %1606 = %1605.2;
  (%1606,)
}

def @func_4284() -> (Tensor[(72), float32], Tensor[(7, 14, 13), bool], Tensor[(1274), int32]) {
  %1607 = cast(meta[relay.Constant][87] /* ty=Tensor[(1274), int32] */, dtype="int32") /* ty=Tensor[(1274), int32] */;
  %1608 = cast(meta[relay.Constant][87] /* ty=Tensor[(1274), int32] */, dtype="int32") /* ty=Tensor[(1274), int32] */;
  %1609 = reshape(%1607, newshape=[7, 14, 13]) /* ty=Tensor[(7, 14, 13), int32] */;
  %1610 = reshape(%1608, newshape=[7, 14, 13]) /* ty=Tensor[(7, 14, 13), int32] */;
  %1611 = @func_45(%1609, %1610) /* ty=(Tensor[(7, 14, 13), bool],) */;
  %1612 = @func_2978() /* ty=Tensor[(72), float32] */;
  %1613 = %1611.0;
  (%1612, %1613, meta[relay.Constant][87] /* ty=Tensor[(1274), int32] */)
}

def @func_10488(%var_10479: Tensor[(4, 3, 6), float32]) -> (Tensor[(4, 3, 6), bool], Tensor[(240), float32]) {
  %1614 = @func_2948() /* ty=(Tensor[(4, 3, 6), float32],) */;
  %1615 = %1614.0;
  %1616 = cast(%var_10479, dtype="bool") /* ty=Tensor[(4, 3, 6), bool] */;
  %1617 = shape_of(%1615, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1618 = cast(%1615, dtype="bool") /* ty=Tensor[(4, 3, 6), bool] */;
  %1619 = dyn.reshape(%1616, %1617, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1620 = equal(%1618, %1619) /* ty=Tensor[(4, 3, 6), bool] */;
  %1621 = @func_4550() /* ty=Tensor[(240), float32] */;
  (%1620, %1621)
}

def @func_12211() -> (Tensor[(2, 24), float32], Tensor[(72), float32]) {
  %1622 = @func_11773() /* ty=(Tensor[(1274), int32], Tensor[(2, 24), float32], Tensor[(72), float32]) */;
  %1623 = %1622.1;
  %1624 = @func_8449() /* ty=Tensor[(72), float32] */;
  (%1623, %1624)
}

def @func_16499(%var_16497: bool, %var_16498: Tensor[(11, 10, 7), bool]) -> (Tensor[(11, 10, 7), float64],) {
  %1630 = fn (%var_16463: bool, %var_16464: Tensor[(11, 10, 7), bool]) -> (Tensor[(11, 10, 7), float64],) {
    %1625 = cast(%var_16463, dtype="bool") /* ty=bool */;
    %1626 = cast(%var_16464, dtype="bool") /* ty=Tensor[(11, 10, 7), bool] */;
    %1627 = logical_and(%1625, %1626) /* ty=Tensor[(11, 10, 7), bool] */;
    %1628 = cast(%1627, dtype="float64") /* ty=Tensor[(11, 10, 7), float64] */;
    %1629 = sigmoid(%1628) /* ty=Tensor[(11, 10, 7), float64] */;
    (%1629,)
  };
  %1630(%var_16497, %var_16498) /* ty=(Tensor[(11, 10, 7), float64],) */
}

def @func_18615(%var_18612: Tensor[(7, 8, 6), float64], %var_18613: bool, %var_18614: Tensor[(440), bool]) -> (Tensor[(7, 8, 6), float64], Tensor[(7, 8, 6), float32], Tensor[(4, 11, 10), bool], bool, Tensor[(440), bool], Tensor[(72), float64]) {
  @func_18610(%var_18612, %var_18613, %var_18614) /* ty=(Tensor[(7, 8, 6), float64], Tensor[(7, 8, 6), float32], Tensor[(4, 11, 10), bool], bool, Tensor[(440), bool], Tensor[(72), float64]) */
}

def @func_4207(%var_4205: Tensor[(4, 3, 6), float32]) -> Tensor[(4, 3, 6), bool] {
  @func_4204(%var_4205) /* ty=Tensor[(4, 3, 6), bool] */
}

def @func_9243() -> Tensor[(4, 3, 9), bool] {
  %1631 = cast(meta[relay.Constant][88] /* ty=uint8 */, dtype="bool") /* ty=bool */;
  %1632 = cast(meta[relay.Constant][89] /* ty=Tensor[(4, 3, 9), uint8] */, dtype="bool") /* ty=Tensor[(4, 3, 9), bool] */;
  greater(%1631, %1632) /* ty=Tensor[(4, 3, 9), bool] */
}

def @func_14713() -> Tensor[(72), float32] {
  %1634 = fn () -> Tensor[(72), float32] {
    %1633 = @func_7664() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(420), float32], Tensor[(420), float32]) */;
    %1633.1
  };
  %1634() /* ty=Tensor[(72), float32] */
}

def @func_11366() -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(770, 1), float32]) {
  @func_11364() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(770, 1), float32]) */
}

def @func_14976() -> (Tensor[(1274), int32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32]) {
  %1635 = @func_10604() /* ty=(Tensor[(48), uint32], Tensor[(72), float32], Tensor[(1274), int32]) */;
  %1636 = @func_8909() /* ty=(Tensor[(72), float32],) */;
  %1637 = @func_6781() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(1274), int32]) */;
  %1638 = @func_9130() /* ty=(Tensor[(72), float32],) */;
  %1639 = %1635.2;
  %1640 = %1636.0;
  %1641 = @func_5644() /* ty=Tensor[(72), float32] */;
  %1642 = %1637.0;
  %1643 = %1638.0;
  (%1639, %1640, %1641, %1642, %1643)
}

def @func_5588(%var_5587: Tensor[(48), float32]) -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(?, 16, 3), bool], Tensor[(48), float32], Tensor[(180), float32], Tensor[(180), float32]) {
  %1656 = fn (%var_5574: Tensor[(48), float32]) -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(?, 16, 3), bool], Tensor[(48), float32], Tensor[(180), float32], Tensor[(180), float32]) {
    %1644 = @func_4064() /* ty=(Tensor[(72), float32],) */;
    %1645 = @func_2191() /* ty=(Tensor[(72), float32],) */;
    %1646 = cast(%var_5574, dtype="float32") /* ty=Tensor[(48), float32] */;
    %1647 = cast(meta[relay.Constant][90] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
    %1648 = reshape(%1646, newshape=[1, 16, 3]) /* ty=Tensor[(1, 16, 3), float32] */;
    %1649 = reshape(%1647, newshape=[180]) /* ty=Tensor[(180), float32] */;
    %1650 = @func_1464(%1648, %1649) /* ty=(Tensor[(7, 14, 13), bool], Tensor[(1274), int32], Tensor[(4, 3, 6), bool], Tensor[(36, 12), uint32], Tensor[(4, 3, 6), float32], Tensor[(?, 16, 3), bool], Tensor[(12, 6, 12), bool], Tensor[(864), float32], Tensor[(15, 1, 12), float32], Tensor[(180), float32]) */;
    %1651 = @func_4665() /* ty=(Tensor[(4, 3, 6), float32], Tensor[(72), float32], Tensor[(180), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(80), float32], Tensor[(240), float32], Tensor[(72), float32]) */;
    %1652 = %1644.0;
    %1653 = %1645.0;
    %1654 = %1650.5;
    %1655 = %1651.2;
    (%1652, %1653, %1654, %var_5574, meta[relay.Constant][90] /* ty=Tensor[(180), float32] */, %1655)
  };
  %1656(%var_5587) /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(?, 16, 3), bool], Tensor[(48), float32], Tensor[(180), float32], Tensor[(180), float32]) */
}

def @func_12829() -> (Tensor[(72), float32], Tensor[(864), float32]) {
  %1661 = fn () -> (Tensor[(72), float32], Tensor[(864), float32]) {
    %1657 = @func_7664() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(420), float32], Tensor[(420), float32]) */;
    %1658 = @func_7883() /* ty=(Tensor[(864), float32],) */;
    %1659 = %1657.0;
    %1660 = %1658.0;
    (%1659, %1660)
  };
  %1661() /* ty=(Tensor[(72), float32], Tensor[(864), float32]) */
}

def @func_7130() -> Tensor[(72), float32] {
  @func_7128() /* ty=Tensor[(72), float32] */
}

def @func_2842() -> (Tensor[(72), float32], Tensor[(72), float32]) {
  %1662 = @func_2191() /* ty=(Tensor[(72), float32],) */;
  %1663 = @func_2739() /* ty=Tensor[(72), float32] */;
  %1664 = %1662.0;
  (%1663, %1664)
}

def @func_5829() -> Tensor[(1274), int32] {
  %1666 = fn () -> Tensor[(1274), int32] {
    %1665 = @func_3614() /* ty=(Tensor[(72), float32], Tensor[(1274), int32]) */;
    %1665.1
  };
  %1666() /* ty=Tensor[(1274), int32] */
}

def @func_6701() -> (Tensor[(72), float32],) {
  @func_6699() /* ty=(Tensor[(72), float32],) */
}

def @func_2353() -> (Tensor[(72), float32], Tensor[(1274), int32], Tensor[(1274), int32], Tensor[(4, 3, 6), float32]) {
  @func_2351() /* ty=(Tensor[(72), float32], Tensor[(1274), int32], Tensor[(1274), int32], Tensor[(4, 3, 6), float32]) */
}

def @func_10606() -> (Tensor[(48), uint32], Tensor[(72), float32], Tensor[(1274), int32]) {
  @func_10604() /* ty=(Tensor[(48), uint32], Tensor[(72), float32], Tensor[(1274), int32]) */
}

def @func_11704() -> Tensor[(72), float32] {
  %1667 = @func_8741() /* ty=(Tensor[(72), float32],) */;
  %1667.0
}

def @func_13800() -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(2, 24), bool], Tensor[(1274), int32]) {
  %1677 = fn () -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(2, 24), bool], Tensor[(1274), int32]) {
    %1668 = @func_11364() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(770, 1), float32]) */;
    %1669 = @func_3749() /* ty=(Tensor[(240), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32]) */;
    %1670 = @func_11511() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
    %1671 = %1668.0;
    %1672 = %1669.1;
    %1673 = %1670.0;
    %1674 = @func_11704() /* ty=Tensor[(72), float32] */;
    %1675 = @func_13242() /* ty=Tensor[(2, 24), bool] */;
    %1676 = @func_5828() /* ty=Tensor[(1274), int32] */;
    (%1671, %1672, %1673, %1674, %1675, %1676)
  };
  %1677() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(2, 24), bool], Tensor[(1274), int32]) */
}

def @func_14878(%var_14844: Tensor[(864), float32]) -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(240), float32], Tensor[(864), bool], Tensor[(1274), int32], Tensor[(72), float32], Tensor[(72), float32]) {
  %1678 = @func_5877() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %1679 = cast(meta[relay.Constant][91] /* ty=Tensor[(864), float32] */, dtype="float32") /* ty=Tensor[(864), float32] */;
  %1680 = reshape(%1679, newshape=[2, 432]) /* ty=Tensor[(2, 432), float32] */;
  %1681 = @func_6151(%1680) /* ty=(Tensor[(1274), int32], Tensor[(72), float32], Tensor[(1274), int32], Tensor[(4, 3, 6), float64], Tensor[(4, 3, 6), float32], Tensor[(770, 240), bool], Tensor[(240), float32], Tensor[(2, 432), float32], Tensor[(48), uint32]) */;
  %1682 = cast(%var_14844, dtype="bool") /* ty=Tensor[(864), bool] */;
  %1683 = shape_of(meta[relay.Constant][91] /* ty=Tensor[(864), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1684 = cast(meta[relay.Constant][91] /* ty=Tensor[(864), float32] */, dtype="bool") /* ty=Tensor[(864), bool] */;
  %1685 = dyn.reshape(%1682, %1683, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1686 = @func_8909() /* ty=(Tensor[(72), float32],) */;
  %1687 = @func_9003() /* ty=(Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(180, 1), float32]) */;
  %1688 = @func_12005() /* ty=Tensor[(72), float32] */;
  %1689 = %1678.0;
  %1690 = %1681.6;
  %1691 = greater(%1684, %1685) /* ty=Tensor[(864), bool] */;
  %1692 = @func_9584() /* ty=Tensor[(1274), int32] */;
  %1693 = %1686.0;
  %1694 = %1687.0;
  (%1688, %1689, %1690, %1691, %1692, %1693, %1694)
}

def @func_9644() -> (Tensor[(240), float32], Tensor[(80), float32], Tensor[(80), float32]) {
  %1703 = fn () -> (Tensor[(240), float32], Tensor[(80), float32], Tensor[(80), float32]) {
    %1695 = @func_7058() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(4, 3, 6), float32], Tensor[(240), float32], Tensor[(72), float32]) */;
    %1696 = cast(meta[relay.Constant][92] /* ty=Tensor[(80), float32] */, dtype="float32") /* ty=Tensor[(80), float32] */;
    %1697 = %1695.3;
    %1698 = cast(%1697, dtype="float32") /* ty=Tensor[(240), float32] */;
    %1699 = reshape(%1696, newshape=[80]) /* ty=Tensor[(80), float32] */;
    %1700 = reshape(%1698, newshape=[240]) /* ty=Tensor[(240), float32] */;
    %1701 = @func_3264(%1699, %1700) /* ty=(Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(240), float32]) */;
    %1702 = %1701.2;
    (%1697, %1702, meta[relay.Constant][92] /* ty=Tensor[(80), float32] */)
  };
  %1703() /* ty=(Tensor[(240), float32], Tensor[(80), float32], Tensor[(80), float32]) */
}

def @func_17559() -> (Tensor[(72), float32], Tensor[(72), float32]) {
  %1706 = fn () -> (Tensor[(72), float32], Tensor[(72), float32]) {
    %1704 = @func_7128() /* ty=Tensor[(72), float32] */;
    %1705 = @func_14147() /* ty=Tensor[(72), float32] */;
    (%1704, %1705)
  };
  %1706() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */
}

def @func_18188(%var_18186: Tensor[(180), float32]) -> (Tensor[(770), float32], Tensor[(770), float32], Tensor[(15, 1, 12), float32], Tensor[(180), float32], Tensor[(48, 72), int16], Tensor[(48, 72), bool], Tensor[(48, 72), uint8], Tensor[(48, 72), float64]) {
  @func_18185(%var_18186) /* ty=(Tensor[(770), float32], Tensor[(770), float32], Tensor[(15, 1, 12), float32], Tensor[(180), float32], Tensor[(48, 72), int16], Tensor[(48, 72), bool], Tensor[(48, 72), uint8], Tensor[(48, 72), float64]) */
}

def @func_8480(%var_8471: Tensor[(5, 6, 15), uint64], %var_8472: Tensor[(5, 6, 15), uint64]) -> (Tensor[(5, 6, 15), bool], Tensor[(72), float32]) {
  %1707 = cast(%var_8472, dtype="bool") /* ty=Tensor[(5, 6, 15), bool] */;
  %1708 = shape_of(%var_8471, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1709 = cast(%var_8471, dtype="bool") /* ty=Tensor[(5, 6, 15), bool] */;
  %1710 = dyn.reshape(%1707, %1708, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1711 = @func_4665() /* ty=(Tensor[(4, 3, 6), float32], Tensor[(72), float32], Tensor[(180), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(80), float32], Tensor[(240), float32], Tensor[(72), float32]) */;
  %1712 = less_equal(%1709, %1710) /* ty=Tensor[(5, 6, 15), bool] */;
  %1713 = %1711.7;
  (%1712, %1713)
}

def @func_11800() -> (Tensor[(72), float32], Tensor[(72), float32]) {
  %1714 = @func_11666() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(770, 1), float32], Tensor[(1274), int32]) */;
  %1715 = %1714.1;
  %1716 = @func_3194() /* ty=Tensor[(72), float32] */;
  (%1715, %1716)
}

def @func_15833() -> (Tensor[(72), float32],) {
  %1719 = fn () -> (Tensor[(72), float32],) {
    %1717 = @func_14643() /* ty=(Tensor[(72), float32], Tensor[(420), float32], Tensor[(80), float32]) */;
    %1718 = %1717.0;
    (%1718,)
  };
  %1719() /* ty=(Tensor[(72), float32],) */
}

def @func_18398(%var_18320: Tensor[(864), float32], %var_18334: Tensor[(264), int32]) -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(432), uint32], Tensor[(240), float32], Tensor[(264), int32], Tensor[(264), int32], Tensor[(72), float32], Tensor[(20), int32], Tensor[(65, 4), int32], Tensor[(72), float32], Tensor[(48, 864), bool], Tensor[(72), float32], Tensor[(12, 6, 12), bool], Tensor[(72), float32]) {
  %1720 = @func_4005() /* ty=(Tensor[(72), float32], Tensor[(240), float32]) */;
  %1721 = cast(meta[relay.Constant][93] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %1722 = cast(%var_18320, dtype="float32") /* ty=Tensor[(864), float32] */;
  %1723 = cast(meta[relay.Constant][94] /* ty=Tensor[(48, 1), uint32] */, dtype="uint32") /* ty=Tensor[(48, 1), uint32] */;
  %1724 = reshape(%1721, newshape=[1, 240]) /* ty=Tensor[(1, 240), float32] */;
  %1725 = reshape(%1722, newshape=[864]) /* ty=Tensor[(864), float32] */;
  %1726 = reshape(%1723, newshape=[48]) /* ty=Tensor[(48), uint32] */;
  %1727 = @func_2669(%1724, %1725, %1726) /* ty=(Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(7, 14, 13), bool], Tensor[(1274), int32], Tensor[(80), float32], Tensor[(864), float32], Tensor[(4, 3, 6), bool], Tensor[(48), uint32], Tensor[(432), uint32], Tensor[(12, 240), float32], Tensor[(6, 3, 4), float64], Tensor[(10, 12, 13), float64], Tensor[(770, 240), bool]) */;
  %1728 = cast(%var_18334, dtype="int32") /* ty=Tensor[(264), int32] */;
  %1729 = reshape(%1728, newshape=[264]) /* ty=Tensor[(264), int32] */;
  %1730 = @func_15133(%1729) /* ty=(Tensor[(72), float32], Tensor[(864), float32], Tensor[(4, 60), float32], Tensor[(4, 6, 11), float64], Tensor[(264), int32], Tensor[(72), float32], Tensor[(13, 5, 3), float64], Tensor[(195), float64]) */;
  %1731 = cast(meta[relay.Constant][95] /* ty=Tensor[(20), int32] */, dtype="int32") /* ty=Tensor[(20), int32] */;
  %1732 = cast(meta[relay.Constant][96] /* ty=Tensor[(65, 4), int32] */, dtype="int32") /* ty=Tensor[(65, 4), int32] */;
  %1733 = reshape(%1731, newshape=[1, 5, 4]) /* ty=Tensor[(1, 5, 4), int32] */;
  %1734 = reshape(%1732, newshape=[13, 5, 4]) /* ty=Tensor[(13, 5, 4), int32] */;
  %1735 = @func_13704(%1733, %1734) /* ty=(Tensor[(13, 5, 4), int32], Tensor[(72), float32]) */;
  %1736 = @func_10555() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %1737 = cast(meta[relay.Constant][94] /* ty=Tensor[(48, 1), uint32] */, dtype="float32") /* ty=Tensor[(48, 1), float32] */;
  %1738 = sigmoid(%1737) /* ty=Tensor[(48, 1), float32] */;
  %1739 = cast(%1738, dtype="bool") /* ty=Tensor[(48, 1), bool] */;
  %1740 = cast(%var_18320, dtype="bool") /* ty=Tensor[(864), bool] */;
  %1741 = greater_equal(%1739, %1740) /* ty=Tensor[(48, 864), bool] */;
  %1742 = cast(%1741, dtype="float32") /* ty=Tensor[(48, 864), float32] */;
  %1743 = sinh(%1742) /* ty=Tensor[(48, 864), float32] */;
  %1744 = cast(%1743, dtype="int32") /* ty=Tensor[(48, 864), int32] */;
  %1745 = cast(%1738, dtype="int32") /* ty=Tensor[(48, 1), int32] */;
  %1746 = minimum(%1744, %1745) /* ty=Tensor[(48, 864), int32] */;
  %1747 = cast(%1743, dtype="uint8") /* ty=Tensor[(48, 864), uint8] */;
  %1748 = cast(%1738, dtype="uint8") /* ty=Tensor[(48, 1), uint8] */;
  %1749 = bitwise_xor(%1747, %1748) /* ty=Tensor[(48, 864), uint8] */;
  %1750 = cast(%1741, dtype="float32") /* ty=Tensor[(48, 864), float32] */;
  %1751 = shape_of(%1749, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1752 = cast(%1749, dtype="float32") /* ty=Tensor[(48, 864), float32] */;
  %1753 = dyn.reshape(%1750, %1751, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1754 = mod(%1752, %1753) /* ty=Tensor[(48, 864), float32] */;
  %1755 = cast(%1754, dtype="float32") /* ty=Tensor[(48, 864), float32] */;
  %1756 = shape_of(%1746, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1757 = cast(%1746, dtype="float32") /* ty=Tensor[(48, 864), float32] */;
  %1758 = dyn.reshape(%1755, %1756, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1759 = power(%1757, %1758) /* ty=Tensor[(48, 864), float32] */;
  %1760 = cast(%1759, dtype="float64") /* ty=Tensor[(48, 864), float64] */;
  %1761 = cosh(%1760) /* ty=Tensor[(48, 864), float64] */;
  %1762 = cast(%1749, dtype="bool") /* ty=Tensor[(48, 864), bool] */;
  %1763 = shape_of(%1761, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1764 = cast(%1761, dtype="bool") /* ty=Tensor[(48, 864), bool] */;
  %1765 = dyn.reshape(%1762, %1763, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1766 = @func_3117() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %1767 = cast(%var_18320, dtype="float32") /* ty=Tensor[(864), float32] */;
  %1768 = reshape(%1767, newshape=[12, 6, 12]) /* ty=Tensor[(12, 6, 12), float32] */;
  %1769 = @func_12725() /* ty=Tensor[(72), float32] */;
  %1770 = %1720.0;
  %1771 = %1727.9;
  %1772 = %1730.4;
  %1773 = %1735.1;
  %1774 = %1736.0;
  %1775 = less_equal(%1764, %1765) /* ty=Tensor[(48, 864), bool] */;
  %1776 = %1766.1;
  %1777 = @func_790(%1768) /* ty=Tensor[(12, 6, 12), bool] */;
  %1778 = @func_2525() /* ty=Tensor[(72), float32] */;
  (%1769, %1770, %1771, meta[relay.Constant][93] /* ty=Tensor[(240), float32] */, %1772, %var_18334, %1773, meta[relay.Constant][95] /* ty=Tensor[(20), int32] */, meta[relay.Constant][96] /* ty=Tensor[(65, 4), int32] */, %1774, %1775, %1776, %1777, %1778)
}

def @func_18252(%var_18240: Tensor[(1008), float32]) -> (Tensor[(72), float32], Tensor[(900), float32], Tensor[(72), float32], Tensor[(1008), float32], Tensor[(48), uint32], Tensor[(72), float32]) {
  %1779 = @func_16169() /* ty=(Tensor[(80), float32], Tensor[(15, 15, 4), float32], Tensor[(900), float32]) */;
  %1780 = cast(%var_18240, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %1781 = cast(meta[relay.Constant][97] /* ty=Tensor[(48), uint32] */, dtype="uint32") /* ty=Tensor[(48), uint32] */;
  %1782 = reshape(%1780, newshape=[1008]) /* ty=Tensor[(1008), float32] */;
  %1783 = reshape(%1781, newshape=[48]) /* ty=Tensor[(48), uint32] */;
  %1784 = @func_11215(%1782, %1783) /* ty=(Tensor[(4, 3, 9), float32], Tensor[(72), float32], Tensor[(1008), float32], Tensor[(48), uint32], Tensor[(72), float32], Tensor[(4, 3, 6), bool]) */;
  %1785 = @func_8624() /* ty=(Tensor[(72), float32], Tensor[(72), float32]) */;
  %1786 = @func_10143() /* ty=Tensor[(72), float32] */;
  %1787 = %1779.2;
  %1788 = %1784.4;
  %1789 = %1785.1;
  (%1786, %1787, %1788, %var_18240, meta[relay.Constant][97] /* ty=Tensor[(48), uint32] */, %1789)
}

def @func_17861(%var_17860: Tensor[(80), float32]) -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(4, 3, 9), bool], Tensor[(15, 15, 4), float32], Tensor[(900), float32], Tensor[(80), float32], Tensor[(80), float32], Tensor[(240), float32]) {
  %1803 = fn (%var_17856: Tensor[(80), float32]) -> (Tensor[(72), float32], Tensor[(72), float32], Tensor[(4, 3, 9), bool], Tensor[(15, 15, 4), float32], Tensor[(900), float32], Tensor[(80), float32], Tensor[(80), float32], Tensor[(240), float32]) {
    %1790 = @func_7664() /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(72), float32], Tensor[(420), float32], Tensor[(420), float32]) */;
    %1791 = cast(meta[relay.Constant][98] /* ty=Tensor[(900), float32] */, dtype="float32") /* ty=Tensor[(900), float32] */;
    %1792 = reshape(%1791, newshape=[15, 15, 4]) /* ty=Tensor[(15, 15, 4), float32] */;
    %1793 = cast(%var_17856, dtype="float32") /* ty=Tensor[(80), float32] */;
    %1794 = cast(meta[relay.Constant][99] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
    %1795 = reshape(%1793, newshape=[80]) /* ty=Tensor[(80), float32] */;
    %1796 = reshape(%1794, newshape=[240]) /* ty=Tensor[(240), float32] */;
    %1797 = @func_3264(%1795, %1796) /* ty=(Tensor[(72), float32], Tensor[(8, 10, 3), float32], Tensor[(80), float32], Tensor[(240), float32]) */;
    %1798 = @func_14147() /* ty=Tensor[(72), float32] */;
    %1799 = %1790.2;
    %1800 = @func_9243() /* ty=Tensor[(4, 3, 9), bool] */;
    %1801 = @func_8171(%1792) /* ty=Tensor[(15, 15, 4), float32] */;
    %1802 = %1797.2;
    (%1798, %1799, %1800, %1801, meta[relay.Constant][98] /* ty=Tensor[(900), float32] */, %1802, %var_17856, meta[relay.Constant][99] /* ty=Tensor[(240), float32] */)
  };
  %1803(%var_17860) /* ty=(Tensor[(72), float32], Tensor[(72), float32], Tensor[(4, 3, 9), bool], Tensor[(15, 15, 4), float32], Tensor[(900), float32], Tensor[(80), float32], Tensor[(80), float32], Tensor[(240), float32]) */
}

def @func_10555() -> (Tensor[(72), float32], Tensor[(72), float32]) {
  %1804 = @func_4056() /* ty=Tensor[(72), float32] */;
  %1805 = @func_2739() /* ty=Tensor[(72), float32] */;
  (%1804, %1805)
}

def @func_2004(%var_2002: Tensor[(864), float32]) -> (Tensor[(6, 3, 4), float64], Tensor[(12, 6, 12), bool], Tensor[(864), float32]) {
  @func_2001(%var_2002) /* ty=(Tensor[(6, 3, 4), float64], Tensor[(12, 6, 12), bool], Tensor[(864), float32]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen710/build/output.py:6180: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen710/build/output.py", line 6185, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(1024) tvmgen_default_fused_bitwise_or_kernel0(ushort* __restrict__ T_bitwise_or, ushort* __restrict__ placeholder, ushort* __restrict__ placeholder1) {
  if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 1365) {
    T_bitwise_or[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = (placeholder[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] | placeholder1[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))]);
  }
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


==========mod==========
#[version = "0.0.5"]
def @func_10506() -> Tensor[(6, 7, 10), float64] {
  @func_7309() /* ty=Tensor[(6, 7, 10), float64] */
}

def @func_241(%var_225: Tensor[(13, 15, 1), uint64]) -> (Tensor[(13, 15, 1), uint64], Tensor[(1568), float64], Tensor[(231, 2), uint8]) {
  %0 = cast(meta[relay.Constant][0] /* ty=Tensor[(13, 1, 1), uint64] */, dtype="uint64") /* ty=Tensor[(13, 1, 1), uint64] */;
  %1 = cast(%var_225, dtype="uint64") /* ty=Tensor[(13, 15, 1), uint64] */;
  %2 = cast(meta[relay.Constant][1] /* ty=Tensor[(231, 2), uint8] */, dtype="uint8") /* ty=Tensor[(231, 2), uint8] */;
  %3 = cast(meta[relay.Constant][1] /* ty=Tensor[(231, 2), uint8] */, dtype="uint8") /* ty=Tensor[(231, 2), uint8] */;
  %4 = reshape(%2, newshape=[7, 6, 11]) /* ty=Tensor[(7, 6, 11), uint8] */;
  %5 = reshape(%3, newshape=[7, 6, 11]) /* ty=Tensor[(7, 6, 11), uint8] */;
  %6 = @func_165(%4, %5) /* ty=(Tensor[(7, 6, 11), bool], Tensor[(14, 16, 7), bool], Tensor[(1568), float64], Tensor[(14, 16, 7), bool], Tensor[(14, 16, 7), bool], Tensor[(14, 16, 7), float32]) */;
  %7 = bitwise_or(%0, %1) /* ty=Tensor[(13, 15, 1), uint64] */;
  %8 = %6.2;
  (%7, %8, meta[relay.Constant][1] /* ty=Tensor[(231, 2), uint8] */)
}

def @func_6369(%var_6355: Tensor[(4, 11, 1), uint16], %var_6356: Tensor[(4, 11, 3), uint16], %var_6367: Tensor[(1568), float64]) -> (Tensor[(4, 11, 3), uint16], Tensor[(14, 16, 7), bool], Tensor[(1568), float64]) {
  %9 = cast(%var_6355, dtype="uint16") /* ty=Tensor[(4, 11, 1), uint16] */;
  %10 = cast(%var_6356, dtype="uint16") /* ty=Tensor[(4, 11, 3), uint16] */;
  %11 = cast(%var_6367, dtype="float64") /* ty=Tensor[(1568), float64] */;
  %12 = reshape(%11, newshape=[14, 16, 7]) /* ty=Tensor[(14, 16, 7), float64] */;
  %13 = @func_64(%12) /* ty=(Tensor[(14, 16, 7), bool],) */;
  %14 = multiply(%9, %10) /* ty=Tensor[(4, 11, 3), uint16] */;
  %15 = %13.0;
  (%14, %15, %var_6367)
}

def @func_618(%var_566: Tensor[(10, 12, 16), int32], %var_587: Tensor[(462), uint8]) -> (Tensor[(13, 15, 1), uint64], Tensor[(195), uint64], Tensor[(10, 12, 16), bool], Tensor[(14, 16, 7), float32], Tensor[(462), uint8], Tensor[(10, 12, 16), float64]) {
  %16 = cast(meta[relay.Constant][2] /* ty=Tensor[(195), uint64] */, dtype="uint64") /* ty=Tensor[(195), uint64] */;
  %17 = reshape(%16, newshape=[13, 15, 1]) /* ty=Tensor[(13, 15, 1), uint64] */;
  %18 = @func_241(%17) /* ty=(Tensor[(13, 15, 1), uint64], Tensor[(1568), float64], Tensor[(231, 2), uint8]) */;
  %19 = cast(meta[relay.Constant][3] /* ty=Tensor[(10, 12, 1), int32] */, dtype="int32") /* ty=Tensor[(10, 12, 1), int32] */;
  %20 = cast(%var_566, dtype="int32") /* ty=Tensor[(10, 12, 16), int32] */;
  %21 = subtract(%19, %20) /* ty=Tensor[(10, 12, 16), int32] */;
  %22 = cast(%var_566, dtype="bool") /* ty=Tensor[(10, 12, 16), bool] */;
  %23 = shape_of(%21, dtype="int32") /* ty=Tensor[(3), int32] */;
  %24 = cast(%21, dtype="bool") /* ty=Tensor[(10, 12, 16), bool] */;
  %25 = dyn.reshape(%22, %23, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %26 = cast(%var_587, dtype="uint8") /* ty=Tensor[(462), uint8] */;
  %27 = cast(%var_587, dtype="uint8") /* ty=Tensor[(462), uint8] */;
  %28 = reshape(%26, newshape=[7, 6, 11]) /* ty=Tensor[(7, 6, 11), uint8] */;
  %29 = reshape(%27, newshape=[7, 6, 11]) /* ty=Tensor[(7, 6, 11), uint8] */;
  %30 = @func_165(%28, %29) /* ty=(Tensor[(7, 6, 11), bool], Tensor[(14, 16, 7), bool], Tensor[(1568), float64], Tensor[(14, 16, 7), bool], Tensor[(14, 16, 7), bool], Tensor[(14, 16, 7), float32]) */;
  %31 = cast(%var_566, dtype="float64") /* ty=Tensor[(10, 12, 16), float64] */;
  %32 = %18.0;
  %33 = greater_equal(%24, %25) /* ty=Tensor[(10, 12, 16), bool] */;
  %34 = %30.5;
  %35 = sqrt(%31) /* ty=Tensor[(10, 12, 16), float64] */;
  (%32, meta[relay.Constant][2] /* ty=Tensor[(195), uint64] */, %33, %34, %var_587, %35)
}

def @func_8165() -> (Tensor[(11, 15, 8), float64], Tensor[(?, 1568), uint8], Tensor[(11, 15, 8), float64]) {
  %36 = @func_8000() /* ty=(Tensor[(11, 15, 8), float64],) */;
  %37 = cast(meta[relay.Constant][4] /* ty=Tensor[(1, 1568), float64] */, dtype="float64") /* ty=Tensor[(1, 1568), float64] */;
  %38 = reshape(%37, newshape=[14, 16, 7]) /* ty=Tensor[(14, 16, 7), float64] */;
  %39 = @func_64(%38) /* ty=(Tensor[(14, 16, 7), bool],) */;
  %40 = %39.0;
  %41 = cast(%40, dtype="uint8") /* ty=Tensor[(14, 16, 7), uint8] */;
  %42 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(1, 1568), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %43 = cast(meta[relay.Constant][4] /* ty=Tensor[(1, 1568), float64] */, dtype="uint8") /* ty=Tensor[(1, 1568), uint8] */;
  %44 = dyn.reshape(%41, %42, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %45 = @func_7193() /* ty=(Tensor[(11, 15, 8), float64],) */;
  %46 = %36.0;
  %47 = multiply(%43, %44) /* ty=Tensor[(?, 1568), uint8] */;
  %48 = %45.0;
  (%46, %47, %48)
}

def @func_8336() -> (Tensor[(11, 15, 8), float64], Tensor[(220), int16], Tensor[(30), int16], Tensor[(6, 7, 10), float32]) {
  %49 = @func_6041() /* ty=(Tensor[(11, 15, 8), float64],) */;
  %50 = cast(meta[relay.Constant][5] /* ty=Tensor[(30), int16] */, dtype="int16") /* ty=Tensor[(30), int16] */;
  %51 = reshape(%50, newshape=[30]) /* ty=Tensor[(30), int16] */;
  %52 = @func_6918(%51) /* ty=(Tensor[(11, 15, 8), bool], Tensor[(14, 16, 7), bool], Tensor[(30), int16], Tensor[(360), int16], Tensor[(616), bool], Tensor[(220), int16], Tensor[(1, 462), uint8]) */;
  %53 = %49.0;
  %54 = %52.5;
  %55 = @func_7384() /* ty=Tensor[(6, 7, 10), float32] */;
  (%53, %54, meta[relay.Constant][5] /* ty=Tensor[(30), int16] */, %55)
}

def @func_5247(%var_5243: Tensor[(4, 10, 2), int64]) -> (Tensor[(4, 10, 2), int64],) {
  %56 = cast(3 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %57 = cast(%var_5243, dtype="int64") /* ty=Tensor[(4, 10, 2), int64] */;
  %58 = multiply(%56, %57) /* ty=Tensor[(4, 10, 2), int64] */;
  (%58,)
}

def @func_8847(%var_8843: Tensor[(104, 20), uint16]) -> (Tensor[(?, 1568), uint8], Tensor[(13, 10, 16), bool], Tensor[(104, 20), uint16]) {
  %59 = @func_8165() /* ty=(Tensor[(11, 15, 8), float64], Tensor[(?, 1568), uint8], Tensor[(11, 15, 8), float64]) */;
  %60 = cast(%var_8843, dtype="uint16") /* ty=Tensor[(104, 20), uint16] */;
  %61 = cast(%var_8843, dtype="uint16") /* ty=Tensor[(104, 20), uint16] */;
  %62 = reshape(%60, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), uint16] */;
  %63 = reshape(%61, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), uint16] */;
  %64 = %59.1;
  %65 = @func_4620(%62, %63) /* ty=Tensor[(13, 10, 16), bool] */;
  (%64, %65, %var_8843)
}

def @func_6563(%var_6537: Tensor[(5, 6, 5), bool]) -> (Tensor[(5, 6, 5), bool], Tensor[(5, 6, 5), uint8]) {
  %66 = cast(%var_6537, dtype="bool") /* ty=Tensor[(5, 6, 5), bool] */;
  %67 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(5, 6, 5), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %68 = cast(meta[relay.Constant][6] /* ty=Tensor[(5, 6, 5), bool] */, dtype="bool") /* ty=Tensor[(5, 6, 5), bool] */;
  %69 = dyn.reshape(%66, %67, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %70 = cast(meta[relay.Constant][6] /* ty=Tensor[(5, 6, 5), bool] */, dtype="float64") /* ty=Tensor[(5, 6, 5), float64] */;
  %71 = log2(%70) /* ty=Tensor[(5, 6, 5), float64] */;
  %72 = cast(meta[relay.Constant][6] /* ty=Tensor[(5, 6, 5), bool] */, dtype="uint8") /* ty=Tensor[(5, 6, 5), uint8] */;
  %73 = shape_of(%71, dtype="int32") /* ty=Tensor[(3), int32] */;
  %74 = cast(%71, dtype="uint8") /* ty=Tensor[(5, 6, 5), uint8] */;
  %75 = dyn.reshape(%72, %73, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %76 = logical_and(%68, %69) /* ty=Tensor[(5, 6, 5), bool] */;
  %77 = subtract(%74, %75) /* ty=Tensor[(5, 6, 5), uint8] */;
  (%76, %77)
}

def @func_7019() -> (Tensor[(11, 15, 8), float64],) {
  %78 = @func_6185() /* ty=Tensor[(11, 15, 8), float64] */;
  (%78,)
}

def @func_2612(%var_2591: Tensor[(6, 15, 8), int16], %var_2592: Tensor[(6, 15, 8), int16], %var_2608: Tensor[(1, 1920), int32]) -> (Tensor[(6, 15, 8), bool], Tensor[(12, 14, 15), float32], Tensor[(2520), bool], Tensor[(384), float64], Tensor[(154, 4), bool], Tensor[(6, 15, 8), uint32], Tensor[(231, 2), uint8], Tensor[(1, 1920), int32]) {
  %79 = cast(%var_2592, dtype="bool") /* ty=Tensor[(6, 15, 8), bool] */;
  %80 = shape_of(%var_2591, dtype="int32") /* ty=Tensor[(3), int32] */;
  %81 = cast(%var_2591, dtype="bool") /* ty=Tensor[(6, 15, 8), bool] */;
  %82 = dyn.reshape(%79, %80, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %83 = cast(meta[relay.Constant][7] /* ty=Tensor[(2520), bool] */, dtype="bool") /* ty=Tensor[(2520), bool] */;
  %84 = cast(meta[relay.Constant][7] /* ty=Tensor[(2520), bool] */, dtype="bool") /* ty=Tensor[(2520), bool] */;
  %85 = cast(meta[relay.Constant][8] /* ty=Tensor[(384), float64] */, dtype="float64") /* ty=Tensor[(384), float64] */;
  %86 = cast(meta[relay.Constant][9] /* ty=Tensor[(154, 4), bool] */, dtype="bool") /* ty=Tensor[(154, 4), bool] */;
  %87 = reshape(%83, newshape=[12, 14, 15]) /* ty=Tensor[(12, 14, 15), bool] */;
  %88 = reshape(%84, newshape=[12, 14, 15]) /* ty=Tensor[(12, 14, 15), bool] */;
  %89 = reshape(%85, newshape=[384]) /* ty=Tensor[(384), float64] */;
  %90 = reshape(%86, newshape=[616]) /* ty=Tensor[(616), bool] */;
  %91 = @func_2473(%87, %88, %89, %90) /* ty=(Tensor[(12, 14, 15), bool], Tensor[(12, 14, 15), float32], Tensor[(1920), int32], Tensor[(384), float64], Tensor[(616), bool], Tensor[(1920), int32]) */;
  %92 = cast(%var_2592, dtype="uint32") /* ty=Tensor[(6, 15, 8), uint32] */;
  %93 = shape_of(%var_2591, dtype="int32") /* ty=Tensor[(3), int32] */;
  %94 = cast(%var_2591, dtype="uint32") /* ty=Tensor[(6, 15, 8), uint32] */;
  %95 = dyn.reshape(%92, %93, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %96 = cast(meta[relay.Constant][8] /* ty=Tensor[(384), float64] */, dtype="float64") /* ty=Tensor[(384), float64] */;
  %97 = cast(meta[relay.Constant][9] /* ty=Tensor[(154, 4), bool] */, dtype="bool") /* ty=Tensor[(154, 4), bool] */;
  %98 = cast(%var_2608, dtype="int32") /* ty=Tensor[(1, 1920), int32] */;
  %99 = reshape(%96, newshape=[8, 8, 6]) /* ty=Tensor[(8, 8, 6), float64] */;
  %100 = reshape(%97, newshape=[616]) /* ty=Tensor[(616), bool] */;
  %101 = reshape(%98, newshape=[1920]) /* ty=Tensor[(1920), int32] */;
  %102 = @func_1115(%99, %100, %101) /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 11, 7), bool], Tensor[(616), bool], Tensor[(195), uint64], Tensor[(1920), int32], Tensor[(231, 2), uint8]) */;
  %103 = less_equal(%81, %82) /* ty=Tensor[(6, 15, 8), bool] */;
  %104 = %91.1;
  %105 = right_shift(%94, %95) /* ty=Tensor[(6, 15, 8), uint32] */;
  %106 = %102.5;
  (%103, %104, meta[relay.Constant][7] /* ty=Tensor[(2520), bool] */, meta[relay.Constant][8] /* ty=Tensor[(384), float64] */, meta[relay.Constant][9] /* ty=Tensor[(154, 4), bool] */, %105, %106, %var_2608)
}

def @func_10352() -> (Tensor[(11, 15, 8), float64],) {
  %107 = @func_7068() /* ty=(Tensor[(11, 15, 8), float64],) */;
  %108 = %107.0;
  (%108,)
}

def @func_9020() -> Tensor[(11, 15, 8), float64] {
  %109 = @func_8356() /* ty=(Tensor[(11, 15, 8), float64],) */;
  %109.0
}

def @func_8898() -> (Tensor[(11, 15, 8), float64],) {
  %110 = @func_7019() /* ty=(Tensor[(11, 15, 8), float64],) */;
  %111 = %110.0;
  (%111,)
}

def @func_9953() -> (Tensor[(11, 15, 8), float64],) {
  %112 = @func_9020() /* ty=Tensor[(11, 15, 8), float64] */;
  (%112,)
}

def @func_7811(%var_7783: Tensor[(12, 5, 5), int32], %var_7784: Tensor[(12, 5, 5), int32], %var_7807: Tensor[(1920), int32]) -> (Tensor[(12, 5, 5), int32], Tensor[(9, 4, 7), float32], Tensor[(252), float32], Tensor[(360, 1), float32], Tensor[(780), int32], Tensor[(1920), int32]) {
  %113 = cast(%var_7784, dtype="int32") /* ty=Tensor[(12, 5, 5), int32] */;
  %114 = shape_of(%var_7783, dtype="int32") /* ty=Tensor[(3), int32] */;
  %115 = cast(%var_7783, dtype="int32") /* ty=Tensor[(12, 5, 5), int32] */;
  %116 = dyn.reshape(%113, %114, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %117 = cast(meta[relay.Constant][10] /* ty=Tensor[(252), float32] */, dtype="float32") /* ty=Tensor[(252), float32] */;
  %118 = reshape(%117, newshape=[9, 4, 7]) /* ty=Tensor[(9, 4, 7), float32] */;
  %119 = cast(meta[relay.Constant][11] /* ty=Tensor[(780), int32] */, dtype="int32") /* ty=Tensor[(780), int32] */;
  %120 = cast(%var_7807, dtype="int32") /* ty=Tensor[(1920), int32] */;
  %121 = reshape(%119, newshape=[5, 12, 13]) /* ty=Tensor[(5, 12, 13), int32] */;
  %122 = reshape(%120, newshape=[1920]) /* ty=Tensor[(1920), int32] */;
  %123 = @func_5503(%121, %122) /* ty=(Tensor[(5, 12, 13), int32], Tensor[(8, 8, 6), float64], Tensor[(48, 8), float64], Tensor[(616), bool], Tensor[(1920), int32], Tensor[(12, 14, 15), bool], Tensor[(2520), bool], Tensor[(6, 5, 12), float64], Tensor[(360, 1), float32], Tensor[(5, 12, 13), bool]) */;
  %124 = subtract(%115, %116) /* ty=Tensor[(12, 5, 5), int32] */;
  %125 = @func_4331(%118) /* ty=Tensor[(9, 4, 7), float32] */;
  %126 = %123.8;
  (%124, %125, meta[relay.Constant][10] /* ty=Tensor[(252), float32] */, %126, meta[relay.Constant][11] /* ty=Tensor[(780), int32] */, %var_7807)
}

def @func_9393() -> (Tensor[(11, 15, 8), float64], Tensor[(11, 15, 8), float64]) {
  %127 = @func_8356() /* ty=(Tensor[(11, 15, 8), float64],) */;
  %128 = @func_8757() /* ty=Tensor[(11, 15, 8), float64] */;
  %129 = %127.0;
  (%128, %129)
}

def @func_10219(%var_10189: Tensor[(1320), float64], %var_10198: Tensor[(1920), int32]) -> (Tensor[(6, 7, 10), float32], Tensor[(2, 10, 11), int16], Tensor[(220), int16], Tensor[(462), uint8], Tensor[(11, 15, 8), int16], Tensor[(1320), float64], Tensor[(11, 15, 8), float64], Tensor[(616), bool], Tensor[(780), int32], Tensor[(1920), int32]) {
  %130 = cast(meta[relay.Constant][12] /* ty=Tensor[(220), int16] */, dtype="int16") /* ty=Tensor[(220), int16] */;
  %131 = cast(meta[relay.Constant][12] /* ty=Tensor[(220), int16] */, dtype="int16") /* ty=Tensor[(220), int16] */;
  %132 = cast(meta[relay.Constant][13] /* ty=Tensor[(462), uint8] */, dtype="uint8") /* ty=Tensor[(462), uint8] */;
  %133 = reshape(%130, newshape=[2, 10, 11]) /* ty=Tensor[(2, 10, 11), int16] */;
  %134 = reshape(%131, newshape=[2, 10, 11]) /* ty=Tensor[(2, 10, 11), int16] */;
  %135 = reshape(%132, newshape=[462]) /* ty=Tensor[(462), uint8] */;
  %136 = @func_1010(%133, %134, %135) /* ty=(Tensor[(2, 10, 11), int16], Tensor[(14, 16, 7), bool], Tensor[(7, 6, 11), bool], Tensor[(462), uint8], Tensor[(1568), bool], Tensor[(14, 16, 7), bool]) */;
  %137 = cast(%var_10189, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %138 = reshape(%137, newshape=[11, 15, 8]) /* ty=Tensor[(11, 15, 8), float64] */;
  %139 = @func_6226(%138) /* ty=(Tensor[(11, 15, 8), float64], Tensor[(11, 15, 8), int16]) */;
  %140 = @func_9842() /* ty=(Tensor[(11, 15, 8), float64],) */;
  %141 = cast(meta[relay.Constant][14] /* ty=Tensor[(780), int32] */, dtype="int32") /* ty=Tensor[(780), int32] */;
  %142 = cast(%var_10198, dtype="int32") /* ty=Tensor[(1920), int32] */;
  %143 = reshape(%141, newshape=[5, 12, 13]) /* ty=Tensor[(5, 12, 13), int32] */;
  %144 = reshape(%142, newshape=[1920]) /* ty=Tensor[(1920), int32] */;
  %145 = @func_5503(%143, %144) /* ty=(Tensor[(5, 12, 13), int32], Tensor[(8, 8, 6), float64], Tensor[(48, 8), float64], Tensor[(616), bool], Tensor[(1920), int32], Tensor[(12, 14, 15), bool], Tensor[(2520), bool], Tensor[(6, 5, 12), float64], Tensor[(360, 1), float32], Tensor[(5, 12, 13), bool]) */;
  %146 = @func_7384() /* ty=Tensor[(6, 7, 10), float32] */;
  %147 = %136.0;
  %148 = %139.1;
  %149 = %140.0;
  %150 = %145.3;
  (%146, %147, meta[relay.Constant][12] /* ty=Tensor[(220), int16] */, meta[relay.Constant][13] /* ty=Tensor[(462), uint8] */, %148, %var_10189, %149, %150, meta[relay.Constant][14] /* ty=Tensor[(780), int32] */, %var_10198)
}

def @func_4620(%var_4615: Tensor[(13, 10, 16), uint16], %var_4616: Tensor[(13, 10, 16), uint16]) -> Tensor[(13, 10, 16), bool] {
  %151 = cast(%var_4616, dtype="bool") /* ty=Tensor[(13, 10, 16), bool] */;
  %152 = shape_of(%var_4615, dtype="int32") /* ty=Tensor[(3), int32] */;
  %153 = cast(%var_4615, dtype="bool") /* ty=Tensor[(13, 10, 16), bool] */;
  %154 = dyn.reshape(%151, %152, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%153, %154) /* ty=Tensor[(13, 10, 16), bool] */
}

def @func_7622() -> (Tensor[(6, 7, 10), float64], Tensor[(360), int16], Tensor[(8, 56), uint8], Tensor[(360), int16], Tensor[(616), bool], Tensor[(220, 1), int16]) {
  %155 = cast(meta[relay.Constant][15] /* ty=Tensor[(8, 56), uint8] */, dtype="uint8") /* ty=Tensor[(8, 56), uint8] */;
  %156 = cast(meta[relay.Constant][16] /* ty=Tensor[(360), int16] */, dtype="int16") /* ty=Tensor[(360), int16] */;
  %157 = cast(meta[relay.Constant][17] /* ty=Tensor[(616), bool] */, dtype="bool") /* ty=Tensor[(616), bool] */;
  %158 = cast(meta[relay.Constant][18] /* ty=Tensor[(220, 1), int16] */, dtype="int16") /* ty=Tensor[(220, 1), int16] */;
  %159 = reshape(%155, newshape=[14, 2, 16]) /* ty=Tensor[(14, 2, 16), uint8] */;
  %160 = reshape(%156, newshape=[360]) /* ty=Tensor[(360), int16] */;
  %161 = reshape(%157, newshape=[616]) /* ty=Tensor[(616), bool] */;
  %162 = reshape(%158, newshape=[220]) /* ty=Tensor[(220), int16] */;
  %163 = @func_5937(%159, %160, %161, %162) /* ty=(Tensor[(14, 2, 16), uint8], Tensor[(14, 16, 7), bool], Tensor[(30), int16], Tensor[(360), int16], Tensor[(616), bool], Tensor[(220), int16], Tensor[(462), uint8]) */;
  %164 = @func_7309() /* ty=Tensor[(6, 7, 10), float64] */;
  %165 = %163.3;
  (%164, %165, meta[relay.Constant][15] /* ty=Tensor[(8, 56), uint8] */, meta[relay.Constant][16] /* ty=Tensor[(360), int16] */, meta[relay.Constant][17] /* ty=Tensor[(616), bool] */, meta[relay.Constant][18] /* ty=Tensor[(220, 1), int16] */)
}

def @main() -> (Tensor[(11, 15, 8), float64], Tensor[(462), float32], Tensor[(11, 3, 14), float64]) {
  %166 = @func_8165() /* ty=(Tensor[(11, 15, 8), float64], Tensor[(?, 1568), uint8], Tensor[(11, 15, 8), float64]) */;
  %167 = cast(meta[relay.Constant][19] /* ty=Tensor[(462), float32] */, dtype="float32") /* ty=Tensor[(462), float32] */;
  %168 = reshape(%167, newshape=[11, 3, 14]) /* ty=Tensor[(11, 3, 14), float32] */;
  %169 = @func_3095(%168) /* ty=Tensor[(11, 3, 14), float32] */;
  %170 = cast(%169, dtype="float64") /* ty=Tensor[(11, 3, 14), float64] */;
  %171 = %166.2;
  %172 = exp(%170) /* ty=Tensor[(11, 3, 14), float64] */;
  (%171, meta[relay.Constant][19] /* ty=Tensor[(462), float32] */, %172)
}

def @func_1621(%var_1592: Tensor[(16, 16, 4), float32]) -> (Tensor[(16, 16, 4), uint8], Tensor[(16, 16, 4), float32]) {
  %173 = cast(%var_1592, dtype="float32") /* ty=Tensor[(16, 16, 4), float32] */;
  %174 = cosh(%173) /* ty=Tensor[(16, 16, 4), float32] */;
  %175 = cast(%var_1592, dtype="bool") /* ty=Tensor[(16, 16, 4), bool] */;
  %176 = shape_of(%174, dtype="int32") /* ty=Tensor[(3), int32] */;
  %177 = cast(%174, dtype="bool") /* ty=Tensor[(16, 16, 4), bool] */;
  %178 = dyn.reshape(%175, %176, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %179 = greater(%177, %178) /* ty=Tensor[(16, 16, 4), bool] */;
  %180 = cast(%179, dtype="float64") /* ty=Tensor[(16, 16, 4), float64] */;
  %181 = cos(%180) /* ty=Tensor[(16, 16, 4), float64] */;
  %182 = cast(%179, dtype="uint8") /* ty=Tensor[(16, 16, 4), uint8] */;
  %183 = shape_of(%181, dtype="int32") /* ty=Tensor[(3), int32] */;
  %184 = cast(%181, dtype="uint8") /* ty=Tensor[(16, 16, 4), uint8] */;
  %185 = dyn.reshape(%182, %183, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %186 = cast(%181, dtype="float32") /* ty=Tensor[(16, 16, 4), float32] */;
  %187 = shape_of(%179, dtype="int32") /* ty=Tensor[(3), int32] */;
  %188 = cast(%179, dtype="float32") /* ty=Tensor[(16, 16, 4), float32] */;
  %189 = dyn.reshape(%186, %187, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %190 = multiply(%184, %185) /* ty=Tensor[(16, 16, 4), uint8] */;
  %191 = maximum(%188, %189) /* ty=Tensor[(16, 16, 4), float32] */;
  (%190, %191)
}

def @func_6287() -> (Tensor[(11, 15, 8), float64], Tensor[(13, 10, 16), bool], Tensor[(2080), uint16]) {
  %192 = cast(meta[relay.Constant][20] /* ty=Tensor[(2080), uint16] */, dtype="uint16") /* ty=Tensor[(2080), uint16] */;
  %193 = cast(meta[relay.Constant][20] /* ty=Tensor[(2080), uint16] */, dtype="uint16") /* ty=Tensor[(2080), uint16] */;
  %194 = reshape(%192, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), uint16] */;
  %195 = reshape(%193, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), uint16] */;
  %196 = @func_6185() /* ty=Tensor[(11, 15, 8), float64] */;
  %197 = @func_4620(%194, %195) /* ty=Tensor[(13, 10, 16), bool] */;
  (%196, %197, meta[relay.Constant][20] /* ty=Tensor[(2080), uint16] */)
}

def @func_9559(%var_9503: uint32, %var_9504: Tensor[(14, 10, 2), uint32], %var_9536: Tensor[(5, 130), float64]) -> (Tensor[(14, 10, 2), uint32], Tensor[(462), uint8], Tensor[(495), uint64], Tensor[(5, 130), float64], Tensor[(1920), int32]) {
  %198 = cast(%var_9503, dtype="uint32") /* ty=uint32 */;
  %199 = cast(%var_9504, dtype="uint32") /* ty=Tensor[(14, 10, 2), uint32] */;
  %200 = cast(meta[relay.Constant][21] /* ty=Tensor[(495), uint64] */, dtype="uint64") /* ty=Tensor[(495), uint64] */;
  %201 = cast(%var_9536, dtype="float64") /* ty=Tensor[(5, 130), float64] */;
  %202 = cast(meta[relay.Constant][22] /* ty=Tensor[(1920), int32] */, dtype="int32") /* ty=Tensor[(1920), int32] */;
  %203 = reshape(%200, newshape=[5, 11, 9]) /* ty=Tensor[(5, 11, 9), uint64] */;
  %204 = reshape(%201, newshape=[1, 650]) /* ty=Tensor[(1, 650), float64] */;
  %205 = reshape(%202, newshape=[8, 240]) /* ty=Tensor[(8, 240), int32] */;
  %206 = @func_6702(%203, %204, %205) /* ty=(Tensor[(5, 11, 9), uint64], Tensor[(462), uint8], Tensor[(1, 650), float64], Tensor[(462), uint8], Tensor[(8, 240), float32]) */;
  %207 = add(%198, %199) /* ty=Tensor[(14, 10, 2), uint32] */;
  %208 = %206.1;
  (%207, %208, meta[relay.Constant][21] /* ty=Tensor[(495), uint64] */, %var_9536, meta[relay.Constant][22] /* ty=Tensor[(1920), int32] */)
}

def @func_8997(%var_8988: Tensor[(11, 15, 8), float64]) -> (Tensor[(11, 15, 8), uint64], Tensor[(11, 15, 8), float64]) {
  %209 = @func_8779() /* ty=(Tensor[(11, 15, 8), float64],) */;
  %210 = %209.0;
  %211 = cast(%var_8988, dtype="uint64") /* ty=Tensor[(11, 15, 8), uint64] */;
  %212 = shape_of(%210, dtype="int32") /* ty=Tensor[(3), int32] */;
  %213 = cast(%210, dtype="uint64") /* ty=Tensor[(11, 15, 8), uint64] */;
  %214 = dyn.reshape(%211, %212, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %215 = maximum(%213, %214) /* ty=Tensor[(11, 15, 8), uint64] */;
  %216 = @func_7228() /* ty=Tensor[(11, 15, 8), float64] */;
  (%215, %216)
}

def @func_8525(%var_8492: Tensor[(720), int16], %var_8493: Tensor[(1920), int32], %var_8505: Tensor[(11, 15, 8), float64]) -> (Tensor[(2520), bool], Tensor[(720), int16], Tensor[(1920), int32], Tensor[(11, 15, 8), float32]) {
  %217 = cast(%var_8492, dtype="int16") /* ty=Tensor[(720), int16] */;
  %218 = cast(%var_8492, dtype="int16") /* ty=Tensor[(720), int16] */;
  %219 = cast(%var_8493, dtype="int32") /* ty=Tensor[(1920), int32] */;
  %220 = reshape(%217, newshape=[6, 15, 8]) /* ty=Tensor[(6, 15, 8), int16] */;
  %221 = reshape(%218, newshape=[6, 15, 8]) /* ty=Tensor[(6, 15, 8), int16] */;
  %222 = reshape(%219, newshape=[1, 1920]) /* ty=Tensor[(1, 1920), int32] */;
  %223 = @func_2612(%220, %221, %222) /* ty=(Tensor[(6, 15, 8), bool], Tensor[(12, 14, 15), float32], Tensor[(2520), bool], Tensor[(384), float64], Tensor[(154, 4), bool], Tensor[(6, 15, 8), uint32], Tensor[(231, 2), uint8], Tensor[(1, 1920), int32]) */;
  %224 = @func_8428() /* ty=Tensor[(11, 15, 8), float64] */;
  %225 = cast(%var_8505, dtype="float32") /* ty=Tensor[(11, 15, 8), float32] */;
  %226 = shape_of(%224, dtype="int32") /* ty=Tensor[(3), int32] */;
  %227 = cast(%224, dtype="float32") /* ty=Tensor[(11, 15, 8), float32] */;
  %228 = dyn.reshape(%225, %226, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %229 = %223.2;
  %230 = divide(%227, %228) /* ty=Tensor[(11, 15, 8), float32] */;
  (%229, %var_8492, %var_8493, %230)
}

def @func_9899(%var_9882: Tensor[(16, 12, 5), bool]) -> (Tensor[(16, 12, 5), bool],) {
  %231 = cast(meta[relay.Constant][23] /* ty=Tensor[(16, 12, 5), bool] */, dtype="bool") /* ty=Tensor[(16, 12, 5), bool] */;
  %232 = shape_of(%var_9882, dtype="int32") /* ty=Tensor[(3), int32] */;
  %233 = cast(%var_9882, dtype="bool") /* ty=Tensor[(16, 12, 5), bool] */;
  %234 = dyn.reshape(%231, %232, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %235 = logical_and(%233, %234) /* ty=Tensor[(16, 12, 5), bool] */;
  (%235,)
}

def @func_10580(%var_10537: Tensor[(2, 10, 2), float32]) -> (Tensor[(2, 10, 2), float32], Tensor[(11, 15, 8), float64]) {
  %236 = cast(%var_10537, dtype="float32") /* ty=Tensor[(2, 10, 2), float32] */;
  %237 = tan(%236) /* ty=Tensor[(2, 10, 2), float32] */;
  %238 = @func_8087() /* ty=Tensor[(11, 15, 8), float64] */;
  (%237, %238)
}

def @func_7874() -> (Tensor[(11, 15, 8), float64], Tensor[(11, 15, 8), float64]) {
  %239 = @func_6329() /* ty=(Tensor[(11, 15, 8), float64],) */;
  %240 = %239.0;
  %241 = cast(%240, dtype="float64") /* ty=Tensor[(11, 15, 8), float64] */;
  %242 = cast(%240, dtype="float64") /* ty=Tensor[(11, 15, 8), float64] */;
  %243 = cos(%241) /* ty=Tensor[(11, 15, 8), float64] */;
  %244 = sigmoid(%242) /* ty=Tensor[(11, 15, 8), float64] */;
  (%243, %244)
}

def @func_9766(%var_9708: Tensor[(1920), int32], %var_9712: uint16) -> (Tensor[(11, 15, 8), float64], Tensor[(1200), int32], Tensor[(11, 15, 8), float64], Tensor[(1200, ?), int16], Tensor[(5, 12, 13), bool], Tensor[(130, 6), int32], Tensor[(1920), int32], Tensor[(10, 14, 12), float64], Tensor[(360), int16], Tensor[(5, 15, 16), uint32]) {
  %245 = @func_6041() /* ty=(Tensor[(11, 15, 8), float64],) */;
  %246 = @func_7019() /* ty=(Tensor[(11, 15, 8), float64],) */;
  %247 = cast(meta[relay.Constant][24] /* ty=Tensor[(1200), int32] */, dtype="int32") /* ty=Tensor[(1200), int32] */;
  %248 = reshape(%247, newshape=[1200, 1]) /* ty=Tensor[(1200, 1), int32] */;
  %249 = @func_7122(%248) /* ty=(Tensor[(11, 15, 8), float64], Tensor[(1200, 1), int32], Tensor[(5, 15, 16), bool]) */;
  %250 = %249.1;
  %251 = cast(meta[relay.Constant][24] /* ty=Tensor[(1200), int32] */, dtype="int32") /* ty=Tensor[(1200), int32] */;
  %252 = cast(meta[relay.Constant][24] /* ty=Tensor[(1200), int32] */, dtype="int32") /* ty=Tensor[(1200), int32] */;
  %253 = reshape(%251, newshape=[5, 15, 16]) /* ty=Tensor[(5, 15, 16), int32] */;
  %254 = reshape(%252, newshape=[5, 15, 16]) /* ty=Tensor[(5, 15, 16), int32] */;
  %255 = @func_2666(%253, %254) /* ty=Tensor[(5, 15, 16), bool] */;
  %256 = cast(%255, dtype="int16") /* ty=Tensor[(5, 15, 16), int16] */;
  %257 = shape_of(%250, dtype="int32") /* ty=Tensor[(2), int32] */;
  %258 = cast(%250, dtype="int16") /* ty=Tensor[(1200, 1), int16] */;
  %259 = dyn.reshape(%256, %257, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %260 = cast(meta[relay.Constant][25] /* ty=Tensor[(130, 6), int32] */, dtype="int32") /* ty=Tensor[(130, 6), int32] */;
  %261 = cast(%var_9708, dtype="int32") /* ty=Tensor[(1920), int32] */;
  %262 = reshape(%260, newshape=[5, 12, 13]) /* ty=Tensor[(5, 12, 13), int32] */;
  %263 = reshape(%261, newshape=[1920]) /* ty=Tensor[(1920), int32] */;
  %264 = @func_5503(%262, %263) /* ty=(Tensor[(5, 12, 13), int32], Tensor[(8, 8, 6), float64], Tensor[(48, 8), float64], Tensor[(616), bool], Tensor[(1920), int32], Tensor[(12, 14, 15), bool], Tensor[(2520), bool], Tensor[(6, 5, 12), float64], Tensor[(360, 1), float32], Tensor[(5, 12, 13), bool]) */;
  %265 = cast(%var_9712, dtype="uint16") /* ty=uint16 */;
  %266 = reshape(%265, newshape=[]) /* ty=uint16 */;
  %267 = @func_7622() /* ty=(Tensor[(6, 7, 10), float64], Tensor[(360), int16], Tensor[(8, 56), uint8], Tensor[(360), int16], Tensor[(616), bool], Tensor[(220, 1), int16]) */;
  %268 = cast(%255, dtype="float64") /* ty=Tensor[(5, 15, 16), float64] */;
  %269 = atanh(%268) /* ty=Tensor[(5, 15, 16), float64] */;
  %270 = cast(%269, dtype="uint32") /* ty=Tensor[(5, 15, 16), uint32] */;
  %271 = cast(%var_9712, dtype="uint32") /* ty=uint32 */;
  %272 = %245.0;
  %273 = %246.0;
  %274 = right_shift(%258, %259) /* ty=Tensor[(1200, ?), int16] */;
  %275 = %264.9;
  %276 = @func_8250(%266) /* ty=Tensor[(10, 14, 12), float64] */;
  %277 = %267.3;
  %278 = bitwise_and(%270, %271) /* ty=Tensor[(5, 15, 16), uint32] */;
  (%272, meta[relay.Constant][24] /* ty=Tensor[(1200), int32] */, %273, %274, %275, meta[relay.Constant][25] /* ty=Tensor[(130, 6), int32] */, %var_9708, %276, %277, %278)
}

def @func_9803() -> (Tensor[(7, 15, 9), float32], Tensor[(7, 15, 9), bool]) {
  %279 = cast(meta[relay.Constant][26] /* ty=Tensor[(7, 15, 9), float32] */, dtype="float32") /* ty=Tensor[(7, 15, 9), float32] */;
  %280 = cast(meta[relay.Constant][26] /* ty=Tensor[(7, 15, 9), float32] */, dtype="float32") /* ty=Tensor[(7, 15, 9), float32] */;
  %281 = asinh(%280) /* ty=Tensor[(7, 15, 9), float32] */;
  %282 = cast(%281, dtype="bool") /* ty=Tensor[(7, 15, 9), bool] */;
  %283 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(7, 15, 9), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %284 = cast(meta[relay.Constant][26] /* ty=Tensor[(7, 15, 9), float32] */, dtype="bool") /* ty=Tensor[(7, 15, 9), bool] */;
  %285 = dyn.reshape(%282, %283, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %286 = acos(%279) /* ty=Tensor[(7, 15, 9), float32] */;
  %287 = less_equal(%284, %285) /* ty=Tensor[(7, 15, 9), bool] */;
  (%286, %287)
}

def @func_9648(%var_9624: Tensor[(12, 7, 1), float32]) -> (Tensor[(12, 7, 4), float32], Tensor[(6, 7, 10), float32], Tensor[(12, 7, 4), float64]) {
  %288 = cast(%var_9624, dtype="float32") /* ty=Tensor[(12, 7, 1), float32] */;
  %289 = cast(meta[relay.Constant][27] /* ty=Tensor[(12, 7, 4), float32] */, dtype="float32") /* ty=Tensor[(12, 7, 4), float32] */;
  %290 = cast(meta[relay.Constant][27] /* ty=Tensor[(12, 7, 4), float32] */, dtype="float64") /* ty=Tensor[(12, 7, 4), float64] */;
  %291 = add(%288, %289) /* ty=Tensor[(12, 7, 4), float32] */;
  %292 = @func_7384() /* ty=Tensor[(6, 7, 10), float32] */;
  %293 = sqrt(%290) /* ty=Tensor[(12, 7, 4), float64] */;
  (%291, %292, %293)
}

def @func_1293(%var_1226: Tensor[(10, 1, 3), int16], %var_1227: Tensor[(10, 12, 3), int16], %var_1235: Tensor[(616), bool], %var_1269: Tensor[(220), int16], %var_1270: Tensor[(7, 66), uint8]) -> (Tensor[(10, 12, 3), bool], Tensor[(8, 11, 7), bool], Tensor[(616), bool], Tensor[(14, 16, 7), bool], Tensor[(7, 66), uint8], Tensor[(220), float64], Tensor[(14, 16, 7), bool], Tensor[(14, 16, 7), bool]) {
  %294 = cast(%var_1226, dtype="bool") /* ty=Tensor[(10, 1, 3), bool] */;
  %295 = cast(%var_1227, dtype="bool") /* ty=Tensor[(10, 12, 3), bool] */;
  %296 = cast(%var_1235, dtype="bool") /* ty=Tensor[(616), bool] */;
  %297 = cast(%var_1235, dtype="bool") /* ty=Tensor[(616), bool] */;
  %298 = reshape(%296, newshape=[8, 11, 7]) /* ty=Tensor[(8, 11, 7), bool] */;
  %299 = reshape(%297, newshape=[8, 11, 7]) /* ty=Tensor[(8, 11, 7), bool] */;
  %300 = cast(%var_1269, dtype="int16") /* ty=Tensor[(220), int16] */;
  %301 = cast(%var_1269, dtype="int16") /* ty=Tensor[(220), int16] */;
  %302 = cast(%var_1270, dtype="uint8") /* ty=Tensor[(7, 66), uint8] */;
  %303 = reshape(%300, newshape=[2, 10, 11]) /* ty=Tensor[(2, 10, 11), int16] */;
  %304 = reshape(%301, newshape=[2, 10, 11]) /* ty=Tensor[(2, 10, 11), int16] */;
  %305 = reshape(%302, newshape=[462]) /* ty=Tensor[(462), uint8] */;
  %306 = @func_1010(%303, %304, %305) /* ty=(Tensor[(2, 10, 11), int16], Tensor[(14, 16, 7), bool], Tensor[(7, 6, 11), bool], Tensor[(462), uint8], Tensor[(1568), bool], Tensor[(14, 16, 7), bool]) */;
  %307 = cast(%var_1269, dtype="float64") /* ty=Tensor[(220), float64] */;
  %308 = cast(%var_1270, dtype="uint8") /* ty=Tensor[(7, 66), uint8] */;
  %309 = cast(%var_1270, dtype="uint8") /* ty=Tensor[(7, 66), uint8] */;
  %310 = reshape(%308, newshape=[7, 6, 11]) /* ty=Tensor[(7, 6, 11), uint8] */;
  %311 = reshape(%309, newshape=[7, 6, 11]) /* ty=Tensor[(7, 6, 11), uint8] */;
  %312 = @func_165(%310, %311) /* ty=(Tensor[(7, 6, 11), bool], Tensor[(14, 16, 7), bool], Tensor[(1568), float64], Tensor[(14, 16, 7), bool], Tensor[(14, 16, 7), bool], Tensor[(14, 16, 7), float32]) */;
  %313 = %306.5;
  %314 = cast(%313, dtype="float64") /* ty=Tensor[(14, 16, 7), float64] */;
  %315 = reshape(%314, newshape=[14, 16, 7]) /* ty=Tensor[(14, 16, 7), float64] */;
  %316 = @func_64(%315) /* ty=(Tensor[(14, 16, 7), bool],) */;
  %317 = not_equal(%294, %295) /* ty=Tensor[(10, 12, 3), bool] */;
  %318 = @func_1082(%298, %299) /* ty=Tensor[(8, 11, 7), bool] */;
  %319 = log2(%307) /* ty=Tensor[(220), float64] */;
  %320 = %312.3;
  %321 = %316.0;
  (%317, %318, %var_1235, %313, %var_1270, %319, %320, %321)
}

def @func_1381(%var_1374: Tensor[(10, 16, 14), int16], %var_1375: Tensor[(10, 16, 14), int16]) -> Tensor[(10, 16, 14), bool] {
  %322 = cast(%var_1375, dtype="bool") /* ty=Tensor[(10, 16, 14), bool] */;
  %323 = shape_of(%var_1374, dtype="int32") /* ty=Tensor[(3), int32] */;
  %324 = cast(%var_1374, dtype="bool") /* ty=Tensor[(10, 16, 14), bool] */;
  %325 = dyn.reshape(%322, %323, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%324, %325) /* ty=Tensor[(10, 16, 14), bool] */
}

def @func_4559(%var_4545: Tensor[(9, 13, 8), float64]) -> (Tensor[(9, 13, 8), int32],) {
  %326 = cast(%var_4545, dtype="float64") /* ty=Tensor[(9, 13, 8), float64] */;
  %327 = atan(%326) /* ty=Tensor[(9, 13, 8), float64] */;
  %328 = cast(%var_4545, dtype="int32") /* ty=Tensor[(9, 13, 8), int32] */;
  %329 = shape_of(%327, dtype="int32") /* ty=Tensor[(3), int32] */;
  %330 = cast(%327, dtype="int32") /* ty=Tensor[(9, 13, 8), int32] */;
  %331 = dyn.reshape(%328, %329, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %332 = subtract(%330, %331) /* ty=Tensor[(9, 13, 8), int32] */;
  (%332,)
}

def @func_7906() -> (Tensor[(360), int16],) {
  %333 = @func_7622() /* ty=(Tensor[(6, 7, 10), float64], Tensor[(360), int16], Tensor[(8, 56), uint8], Tensor[(360), int16], Tensor[(616), bool], Tensor[(220, 1), int16]) */;
  %334 = %333.1;
  (%334,)
}

def @func_4387(%var_4371: Tensor[(2, 1, 3), float32], %var_4378: Tensor[(630, 4), bool], %var_4380: Tensor[(616), bool]) -> (Tensor[(2, 1, 3), float32], Tensor[(12, 14, 15), bool], Tensor[(630, 4), bool], Tensor[(384), float64], Tensor[(616), bool], Tensor[(1568), float64], Tensor[(13, 15), uint64]) {
  %335 = cast(%var_4371, dtype="float32") /* ty=Tensor[(2, 1, 3), float32] */;
  %336 = cast(%var_4378, dtype="bool") /* ty=Tensor[(630, 4), bool] */;
  %337 = cast(%var_4378, dtype="bool") /* ty=Tensor[(630, 4), bool] */;
  %338 = cast(meta[relay.Constant][28] /* ty=Tensor[(384), float64] */, dtype="float64") /* ty=Tensor[(384), float64] */;
  %339 = cast(%var_4380, dtype="bool") /* ty=Tensor[(616), bool] */;
  %340 = reshape(%336, newshape=[12, 14, 15]) /* ty=Tensor[(12, 14, 15), bool] */;
  %341 = reshape(%337, newshape=[12, 14, 15]) /* ty=Tensor[(12, 14, 15), bool] */;
  %342 = reshape(%338, newshape=[384]) /* ty=Tensor[(384), float64] */;
  %343 = reshape(%339, newshape=[616]) /* ty=Tensor[(616), bool] */;
  %344 = @func_2473(%340, %341, %342, %343) /* ty=(Tensor[(12, 14, 15), bool], Tensor[(12, 14, 15), float32], Tensor[(1920), int32], Tensor[(384), float64], Tensor[(616), bool], Tensor[(1920), int32]) */;
  %345 = cast(meta[relay.Constant][29] /* ty=Tensor[(13, 15), uint64] */, dtype="uint64") /* ty=Tensor[(13, 15), uint64] */;
  %346 = reshape(%345, newshape=[13, 15, 1]) /* ty=Tensor[(13, 15, 1), uint64] */;
  %347 = @func_241(%346) /* ty=(Tensor[(13, 15, 1), uint64], Tensor[(1568), float64], Tensor[(231, 2), uint8]) */;
  %348 = erf(%335) /* ty=Tensor[(2, 1, 3), float32] */;
  %349 = %344.0;
  %350 = %347.1;
  (%348, %349, %var_4378, meta[relay.Constant][28] /* ty=Tensor[(384), float64] */, %var_4380, %350, meta[relay.Constant][29] /* ty=Tensor[(13, 15), uint64] */)
}

def @func_6226(%var_6215: Tensor[(11, 15, 8), float64]) -> (Tensor[(11, 15, 8), float64], Tensor[(11, 15, 8), int16]) {
  %351 = @func_6041() /* ty=(Tensor[(11, 15, 8), float64],) */;
  %352 = %351.0;
  %353 = cast(%var_6215, dtype="int16") /* ty=Tensor[(11, 15, 8), int16] */;
  %354 = shape_of(%352, dtype="int32") /* ty=Tensor[(3), int32] */;
  %355 = cast(%352, dtype="int16") /* ty=Tensor[(11, 15, 8), int16] */;
  %356 = dyn.reshape(%353, %354, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %357 = @func_6185() /* ty=Tensor[(11, 15, 8), float64] */;
  %358 = logical_xor(%355, %356) /* ty=Tensor[(11, 15, 8), int16] */;
  (%357, %358)
}

def @func_5503(%var_5436: Tensor[(5, 12, 13), int32], %var_5468: Tensor[(1920), int32]) -> (Tensor[(5, 12, 13), int32], Tensor[(8, 8, 6), float64], Tensor[(48, 8), float64], Tensor[(616), bool], Tensor[(1920), int32], Tensor[(12, 14, 15), bool], Tensor[(2520), bool], Tensor[(6, 5, 12), float64], Tensor[(360, 1), float32], Tensor[(5, 12, 13), bool]) {
  %359 = cast(%var_5436, dtype="int32") /* ty=Tensor[(5, 12, 13), int32] */;
  %360 = shape_of(meta[relay.Constant][30] /* ty=Tensor[(5, 12, 13), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %361 = cast(meta[relay.Constant][30] /* ty=Tensor[(5, 12, 13), int32] */, dtype="int32") /* ty=Tensor[(5, 12, 13), int32] */;
  %362 = dyn.reshape(%359, %360, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %363 = cast(meta[relay.Constant][31] /* ty=Tensor[(48, 8), float64] */, dtype="float64") /* ty=Tensor[(48, 8), float64] */;
  %364 = cast(meta[relay.Constant][32] /* ty=Tensor[(616), bool] */, dtype="bool") /* ty=Tensor[(616), bool] */;
  %365 = cast(%var_5468, dtype="int32") /* ty=Tensor[(1920), int32] */;
  %366 = reshape(%363, newshape=[8, 8, 6]) /* ty=Tensor[(8, 8, 6), float64] */;
  %367 = reshape(%364, newshape=[616]) /* ty=Tensor[(616), bool] */;
  %368 = reshape(%365, newshape=[1920]) /* ty=Tensor[(1920), int32] */;
  %369 = @func_1115(%366, %367, %368) /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 11, 7), bool], Tensor[(616), bool], Tensor[(195), uint64], Tensor[(1920), int32], Tensor[(231, 2), uint8]) */;
  %370 = cast(meta[relay.Constant][33] /* ty=Tensor[(2520), bool] */, dtype="bool") /* ty=Tensor[(2520), bool] */;
  %371 = cast(meta[relay.Constant][33] /* ty=Tensor[(2520), bool] */, dtype="bool") /* ty=Tensor[(2520), bool] */;
  %372 = cast(meta[relay.Constant][31] /* ty=Tensor[(48, 8), float64] */, dtype="float64") /* ty=Tensor[(48, 8), float64] */;
  %373 = cast(meta[relay.Constant][32] /* ty=Tensor[(616), bool] */, dtype="bool") /* ty=Tensor[(616), bool] */;
  %374 = reshape(%370, newshape=[12, 14, 15]) /* ty=Tensor[(12, 14, 15), bool] */;
  %375 = reshape(%371, newshape=[12, 14, 15]) /* ty=Tensor[(12, 14, 15), bool] */;
  %376 = reshape(%372, newshape=[384]) /* ty=Tensor[(384), float64] */;
  %377 = reshape(%373, newshape=[616]) /* ty=Tensor[(616), bool] */;
  %378 = @func_2473(%374, %375, %376, %377) /* ty=(Tensor[(12, 14, 15), bool], Tensor[(12, 14, 15), float32], Tensor[(1920), int32], Tensor[(384), float64], Tensor[(616), bool], Tensor[(1920), int32]) */;
  %379 = cast(meta[relay.Constant][34] /* ty=Tensor[(360, 1), float32] */, dtype="float32") /* ty=Tensor[(360, 1), float32] */;
  %380 = reshape(%379, newshape=[6, 5, 12]) /* ty=Tensor[(6, 5, 12), float32] */;
  %381 = @func_3404(%380) /* ty=(Tensor[(6, 5, 12), float64], Tensor[(14, 16, 7), bool], Tensor[(462), uint8]) */;
  %382 = cast(meta[relay.Constant][30] /* ty=Tensor[(5, 12, 13), int32] */, dtype="bool") /* ty=Tensor[(5, 12, 13), bool] */;
  %383 = shape_of(%var_5436, dtype="int32") /* ty=Tensor[(3), int32] */;
  %384 = cast(%var_5436, dtype="bool") /* ty=Tensor[(5, 12, 13), bool] */;
  %385 = dyn.reshape(%382, %383, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %386 = less(%384, %385) /* ty=Tensor[(5, 12, 13), bool] */;
  %387 = cast(%386, dtype="bool") /* ty=Tensor[(5, 12, 13), bool] */;
  %388 = shape_of(%var_5436, dtype="int32") /* ty=Tensor[(3), int32] */;
  %389 = cast(%var_5436, dtype="bool") /* ty=Tensor[(5, 12, 13), bool] */;
  %390 = dyn.reshape(%387, %388, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %391 = right_shift(%361, %362) /* ty=Tensor[(5, 12, 13), int32] */;
  %392 = %369.0;
  %393 = %378.0;
  %394 = %381.0;
  %395 = not_equal(%389, %390) /* ty=Tensor[(5, 12, 13), bool] */;
  (%391, %392, meta[relay.Constant][31] /* ty=Tensor[(48, 8), float64] */, meta[relay.Constant][32] /* ty=Tensor[(616), bool] */, %var_5468, %393, meta[relay.Constant][33] /* ty=Tensor[(2520), bool] */, %394, meta[relay.Constant][34] /* ty=Tensor[(360, 1), float32] */, %395)
}

def @func_6185() -> Tensor[(11, 15, 8), float64] {
  %396 = @func_6041() /* ty=(Tensor[(11, 15, 8), float64],) */;
  %396.0
}

def @func_8087() -> Tensor[(11, 15, 8), float64] {
  %397 = @func_7019() /* ty=(Tensor[(11, 15, 8), float64],) */;
  %397.0
}

def @func_7384() -> Tensor[(6, 7, 10), float32] {
  %398 = @func_7309() /* ty=Tensor[(6, 7, 10), float64] */;
  %399 = cast(%398, dtype="float32") /* ty=Tensor[(6, 7, 10), float32] */;
  log2(%399) /* ty=Tensor[(6, 7, 10), float32] */
}

def @func_9495() -> Tensor[(360), int16] {
  %400 = @func_7622() /* ty=(Tensor[(6, 7, 10), float64], Tensor[(360), int16], Tensor[(8, 56), uint8], Tensor[(360), int16], Tensor[(616), bool], Tensor[(220, 1), int16]) */;
  %400.3
}

def @func_9780() -> Tensor[(11, 15, 8), float64] {
  %401 = @func_9393() /* ty=(Tensor[(11, 15, 8), float64], Tensor[(11, 15, 8), float64]) */;
  %401.0
}

def @func_6995(%var_6945: Tensor[(11, 15, 8), float64], %var_6956: Tensor[(1024), float32], %var_6965: Tensor[(780), int32], %var_6966: Tensor[(1920), int32], %var_6988: Tensor[(1920), int32]) -> (Tensor[(360), int16], Tensor[(30), int16], Tensor[(11, 15, 8), uint32], Tensor[(16, 16, 4), uint8], Tensor[(1024), float32], Tensor[(5, 12, 13), int32], Tensor[(780), int32], Tensor[(462), uint8], Tensor[(650), float64], Tensor[(231, 2), uint8], Tensor[(1920), uint32]) {
  %402 = cast(meta[relay.Constant][35] /* ty=Tensor[(30), int16] */, dtype="int16") /* ty=Tensor[(30), int16] */;
  %403 = reshape(%402, newshape=[30]) /* ty=Tensor[(30), int16] */;
  %404 = @func_6918(%403) /* ty=(Tensor[(11, 15, 8), bool], Tensor[(14, 16, 7), bool], Tensor[(30), int16], Tensor[(360), int16], Tensor[(616), bool], Tensor[(220), int16], Tensor[(1, 462), uint8]) */;
  %405 = @func_6329() /* ty=(Tensor[(11, 15, 8), float64],) */;
  %406 = %405.0;
  %407 = cast(%var_6945, dtype="uint32") /* ty=Tensor[(11, 15, 8), uint32] */;
  %408 = shape_of(%406, dtype="int32") /* ty=Tensor[(3), int32] */;
  %409 = cast(%406, dtype="uint32") /* ty=Tensor[(11, 15, 8), uint32] */;
  %410 = dyn.reshape(%407, %408, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %411 = cast(%var_6956, dtype="float32") /* ty=Tensor[(1024), float32] */;
  %412 = reshape(%411, newshape=[16, 16, 4]) /* ty=Tensor[(16, 16, 4), float32] */;
  %413 = @func_1621(%412) /* ty=(Tensor[(16, 16, 4), uint8], Tensor[(16, 16, 4), float32]) */;
  %414 = cast(%var_6965, dtype="int32") /* ty=Tensor[(780), int32] */;
  %415 = cast(%var_6966, dtype="int32") /* ty=Tensor[(1920), int32] */;
  %416 = reshape(%414, newshape=[5, 12, 13]) /* ty=Tensor[(5, 12, 13), int32] */;
  %417 = reshape(%415, newshape=[1920]) /* ty=Tensor[(1920), int32] */;
  %418 = @func_5503(%416, %417) /* ty=(Tensor[(5, 12, 13), int32], Tensor[(8, 8, 6), float64], Tensor[(48, 8), float64], Tensor[(616), bool], Tensor[(1920), int32], Tensor[(12, 14, 15), bool], Tensor[(2520), bool], Tensor[(6, 5, 12), float64], Tensor[(360, 1), float32], Tensor[(5, 12, 13), bool]) */;
  %419 = cast(meta[relay.Constant][36] /* ty=Tensor[(650), float64] */, dtype="float64") /* ty=Tensor[(650), float64] */;
  %420 = cast(meta[relay.Constant][36] /* ty=Tensor[(650), float64] */, dtype="float64") /* ty=Tensor[(650), float64] */;
  %421 = cast(%var_6966, dtype="int32") /* ty=Tensor[(1920), int32] */;
  %422 = cast(meta[relay.Constant][37] /* ty=Tensor[(231, 2), uint8] */, dtype="uint8") /* ty=Tensor[(231, 2), uint8] */;
  %423 = reshape(%419, newshape=[10, 13, 5]) /* ty=Tensor[(10, 13, 5), float64] */;
  %424 = reshape(%420, newshape=[10, 13, 5]) /* ty=Tensor[(10, 13, 5), float64] */;
  %425 = reshape(%421, newshape=[1920]) /* ty=Tensor[(1920), int32] */;
  %426 = reshape(%422, newshape=[462]) /* ty=Tensor[(462), uint8] */;
  %427 = @func_2334(%423, %424, %425, %426) /* ty=(Tensor[(10, 13, 5), float64], Tensor[(14, 16, 7), float32], Tensor[(1920), int32], Tensor[(462), uint8]) */;
  %428 = cast(%var_6988, dtype="uint32") /* ty=Tensor[(1920), uint32] */;
  %429 = shape_of(%var_6966, dtype="int32") /* ty=Tensor[(1), int32] */;
  %430 = cast(%var_6966, dtype="uint32") /* ty=Tensor[(1920), uint32] */;
  %431 = dyn.reshape(%428, %429, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %432 = %404.3;
  %433 = bitwise_or(%409, %410) /* ty=Tensor[(11, 15, 8), uint32] */;
  %434 = %413.0;
  %435 = %418.0;
  %436 = %427.3;
  %437 = right_shift(%430, %431) /* ty=Tensor[(1920), uint32] */;
  (%432, meta[relay.Constant][35] /* ty=Tensor[(30), int16] */, %433, %434, %var_6956, %435, %var_6965, %436, meta[relay.Constant][36] /* ty=Tensor[(650), float64] */, meta[relay.Constant][37] /* ty=Tensor[(231, 2), uint8] */, %437)
}

def @func_6329() -> (Tensor[(11, 15, 8), float64],) {
  %438 = @func_6185() /* ty=Tensor[(11, 15, 8), float64] */;
  (%438,)
}

def @func_7309() -> Tensor[(6, 7, 10), float64] {
  %439 = cast(meta[relay.Constant][38] /* ty=Tensor[(6, 7, 10), float64] */, dtype="float64") /* ty=Tensor[(6, 7, 10), float64] */;
  log(%439) /* ty=Tensor[(6, 7, 10), float64] */
}

def @func_6041() -> (Tensor[(11, 15, 8), float64],) {
  %440 = cast(meta[relay.Constant][39] /* ty=Tensor[(11, 15, 8), float64] */, dtype="float64") /* ty=Tensor[(11, 15, 8), float64] */;
  %441 = log(%440) /* ty=Tensor[(11, 15, 8), float64] */;
  (%441,)
}

def @func_7122(%var_7111: Tensor[(1200, 1), int32]) -> (Tensor[(11, 15, 8), float64], Tensor[(1200, 1), int32], Tensor[(5, 15, 16), bool]) {
  %442 = @func_7019() /* ty=(Tensor[(11, 15, 8), float64],) */;
  %443 = cast(%var_7111, dtype="int32") /* ty=Tensor[(1200, 1), int32] */;
  %444 = cast(%var_7111, dtype="int32") /* ty=Tensor[(1200, 1), int32] */;
  %445 = reshape(%443, newshape=[5, 15, 16]) /* ty=Tensor[(5, 15, 16), int32] */;
  %446 = reshape(%444, newshape=[5, 15, 16]) /* ty=Tensor[(5, 15, 16), int32] */;
  %447 = @func_2666(%445, %446) /* ty=Tensor[(5, 15, 16), bool] */;
  %448 = cast(meta[relay.Constant][40] /* ty=Tensor[(5, 15, 16), bool] */, dtype="bool") /* ty=Tensor[(5, 15, 16), bool] */;
  %449 = shape_of(%447, dtype="int32") /* ty=Tensor[(3), int32] */;
  %450 = cast(%447, dtype="bool") /* ty=Tensor[(5, 15, 16), bool] */;
  %451 = dyn.reshape(%448, %449, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %452 = %442.0;
  %453 = equal(%450, %451) /* ty=Tensor[(5, 15, 16), bool] */;
  (%452, %var_7111, %453)
}

def @func_7068() -> (Tensor[(11, 15, 8), float64],) {
  %454 = @func_6185() /* ty=Tensor[(11, 15, 8), float64] */;
  (%454,)
}

def @func_7340() -> Tensor[(11, 15, 8), float64] {
  @func_6185() /* ty=Tensor[(11, 15, 8), float64] */
}

def @func_6918(%var_6903: Tensor[(30), int16]) -> (Tensor[(11, 15, 8), bool], Tensor[(14, 16, 7), bool], Tensor[(30), int16], Tensor[(360), int16], Tensor[(616), bool], Tensor[(220), int16], Tensor[(1, 462), uint8]) {
  %455 = @func_6329() /* ty=(Tensor[(11, 15, 8), float64],) */;
  %456 = %455.0;
  %457 = cast(meta[relay.Constant][41] /* ty=Tensor[(11, 15, 8), float64] */, dtype="bool") /* ty=Tensor[(11, 15, 8), bool] */;
  %458 = shape_of(%456, dtype="int32") /* ty=Tensor[(3), int32] */;
  %459 = cast(%456, dtype="bool") /* ty=Tensor[(11, 15, 8), bool] */;
  %460 = dyn.reshape(%457, %458, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %461 = cast(%var_6903, dtype="int16") /* ty=Tensor[(30), int16] */;
  %462 = cast(meta[relay.Constant][42] /* ty=Tensor[(360), int16] */, dtype="int16") /* ty=Tensor[(360), int16] */;
  %463 = cast(meta[relay.Constant][43] /* ty=Tensor[(616), bool] */, dtype="bool") /* ty=Tensor[(616), bool] */;
  %464 = cast(meta[relay.Constant][44] /* ty=Tensor[(220), int16] */, dtype="int16") /* ty=Tensor[(220), int16] */;
  %465 = cast(meta[relay.Constant][45] /* ty=Tensor[(1, 462), uint8] */, dtype="uint8") /* ty=Tensor[(1, 462), uint8] */;
  %466 = reshape(%461, newshape=[10, 1, 3]) /* ty=Tensor[(10, 1, 3), int16] */;
  %467 = reshape(%462, newshape=[10, 12, 3]) /* ty=Tensor[(10, 12, 3), int16] */;
  %468 = reshape(%463, newshape=[616]) /* ty=Tensor[(616), bool] */;
  %469 = reshape(%464, newshape=[220]) /* ty=Tensor[(220), int16] */;
  %470 = reshape(%465, newshape=[7, 66]) /* ty=Tensor[(7, 66), uint8] */;
  %471 = @func_1293(%466, %467, %468, %469, %470) /* ty=(Tensor[(10, 12, 3), bool], Tensor[(8, 11, 7), bool], Tensor[(616), bool], Tensor[(14, 16, 7), bool], Tensor[(7, 66), uint8], Tensor[(220), float64], Tensor[(14, 16, 7), bool], Tensor[(14, 16, 7), bool]) */;
  %472 = logical_or(%459, %460) /* ty=Tensor[(11, 15, 8), bool] */;
  %473 = %471.6;
  (%472, %473, %var_6903, meta[relay.Constant][42] /* ty=Tensor[(360), int16] */, meta[relay.Constant][43] /* ty=Tensor[(616), bool] */, meta[relay.Constant][44] /* ty=Tensor[(220), int16] */, meta[relay.Constant][45] /* ty=Tensor[(1, 462), uint8] */)
}

def @func_165(%var_118: Tensor[(7, 6, 11), uint8], %var_119: Tensor[(7, 6, 11), uint8]) -> (Tensor[(7, 6, 11), bool], Tensor[(14, 16, 7), bool], Tensor[(1568), float64], Tensor[(14, 16, 7), bool], Tensor[(14, 16, 7), bool], Tensor[(14, 16, 7), float32]) {
  %474 = cast(%var_119, dtype="bool") /* ty=Tensor[(7, 6, 11), bool] */;
  %475 = shape_of(%var_118, dtype="int32") /* ty=Tensor[(3), int32] */;
  %476 = cast(%var_118, dtype="bool") /* ty=Tensor[(7, 6, 11), bool] */;
  %477 = dyn.reshape(%474, %475, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %478 = cast(meta[relay.Constant][46] /* ty=Tensor[(1568), float64] */, dtype="float64") /* ty=Tensor[(1568), float64] */;
  %479 = reshape(%478, newshape=[14, 16, 7]) /* ty=Tensor[(14, 16, 7), float64] */;
  %480 = @func_64(%479) /* ty=(Tensor[(14, 16, 7), bool],) */;
  %481 = cast(meta[relay.Constant][46] /* ty=Tensor[(1568), float64] */, dtype="float64") /* ty=Tensor[(1568), float64] */;
  %482 = reshape(%481, newshape=[14, 16, 7]) /* ty=Tensor[(14, 16, 7), float64] */;
  %483 = @func_64(%482) /* ty=(Tensor[(14, 16, 7), bool],) */;
  %484 = %480.0;
  %485 = cast(%484, dtype="float64") /* ty=Tensor[(14, 16, 7), float64] */;
  %486 = reshape(%485, newshape=[14, 16, 7]) /* ty=Tensor[(14, 16, 7), float64] */;
  %487 = @func_64(%486) /* ty=(Tensor[(14, 16, 7), bool],) */;
  %488 = %487.0;
  %489 = cast(%488, dtype="float64") /* ty=Tensor[(14, 16, 7), float64] */;
  %490 = reshape(%489, newshape=[14, 16, 7]) /* ty=Tensor[(14, 16, 7), float64] */;
  %491 = @func_64(%490) /* ty=(Tensor[(14, 16, 7), bool],) */;
  %492 = cast(meta[relay.Constant][47] /* ty=Tensor[(14, 16, 7), bool] */, dtype="float32") /* ty=Tensor[(14, 16, 7), float32] */;
  %493 = shape_of(%488, dtype="int32") /* ty=Tensor[(3), int32] */;
  %494 = cast(%488, dtype="float32") /* ty=Tensor[(14, 16, 7), float32] */;
  %495 = dyn.reshape(%492, %493, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %496 = greater(%476, %477) /* ty=Tensor[(7, 6, 11), bool] */;
  %497 = %483.0;
  %498 = %491.0;
  %499 = minimum(%494, %495) /* ty=Tensor[(14, 16, 7), float32] */;
  (%496, %484, meta[relay.Constant][46] /* ty=Tensor[(1568), float64] */, %497, %498, %499)
}

def @func_6702(%var_6674: Tensor[(5, 11, 9), uint64], %var_6689: Tensor[(1, 650), float64], %var_6697: Tensor[(8, 240), int32]) -> (Tensor[(5, 11, 9), uint64], Tensor[(462), uint8], Tensor[(1, 650), float64], Tensor[(462), uint8], Tensor[(8, 240), float32]) {
  %500 = cast(%var_6674, dtype="uint64") /* ty=Tensor[(5, 11, 9), uint64] */;
  %501 = shape_of(meta[relay.Constant][48] /* ty=Tensor[(5, 11, 9), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %502 = cast(meta[relay.Constant][48] /* ty=Tensor[(5, 11, 9), uint64] */, dtype="uint64") /* ty=Tensor[(5, 11, 9), uint64] */;
  %503 = dyn.reshape(%500, %501, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %504 = cast(%var_6689, dtype="float64") /* ty=Tensor[(1, 650), float64] */;
  %505 = cast(%var_6689, dtype="float64") /* ty=Tensor[(1, 650), float64] */;
  %506 = cast(meta[relay.Constant][49] /* ty=Tensor[(8, 240), int32] */, dtype="int32") /* ty=Tensor[(8, 240), int32] */;
  %507 = cast(meta[relay.Constant][50] /* ty=Tensor[(462), uint8] */, dtype="uint8") /* ty=Tensor[(462), uint8] */;
  %508 = reshape(%504, newshape=[10, 13, 5]) /* ty=Tensor[(10, 13, 5), float64] */;
  %509 = reshape(%505, newshape=[10, 13, 5]) /* ty=Tensor[(10, 13, 5), float64] */;
  %510 = reshape(%506, newshape=[1920]) /* ty=Tensor[(1920), int32] */;
  %511 = reshape(%507, newshape=[462]) /* ty=Tensor[(462), uint8] */;
  %512 = @func_2334(%508, %509, %510, %511) /* ty=(Tensor[(10, 13, 5), float64], Tensor[(14, 16, 7), float32], Tensor[(1920), int32], Tensor[(462), uint8]) */;
  %513 = cast(%var_6697, dtype="float32") /* ty=Tensor[(8, 240), float32] */;
  %514 = shape_of(meta[relay.Constant][49] /* ty=Tensor[(8, 240), int32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %515 = cast(meta[relay.Constant][49] /* ty=Tensor[(8, 240), int32] */, dtype="float32") /* ty=Tensor[(8, 240), float32] */;
  %516 = dyn.reshape(%513, %514, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %517 = minimum(%502, %503) /* ty=Tensor[(5, 11, 9), uint64] */;
  %518 = %512.3;
  %519 = multiply(%515, %516) /* ty=Tensor[(8, 240), float32] */;
  (%517, %518, %var_6689, meta[relay.Constant][50] /* ty=Tensor[(462), uint8] */, %519)
}

def @func_8458(%var_8440: Tensor[(6, 7, 10), float64], %var_8446: Tensor[(2, 660), float64], %var_8456: Tensor[(462), uint8]) -> (Tensor[(6, 7, 10), uint64], Tensor[(9, 13, 8), int32], Tensor[(2, 660), float64], Tensor[(12, 78), float64], Tensor[(10, 12, 16), bool], Tensor[(1920), int32], Tensor[(462), uint8]) {
  %520 = @func_7309() /* ty=Tensor[(6, 7, 10), float64] */;
  %521 = cast(%var_8440, dtype="uint64") /* ty=Tensor[(6, 7, 10), uint64] */;
  %522 = shape_of(%520, dtype="int32") /* ty=Tensor[(3), int32] */;
  %523 = cast(%520, dtype="uint64") /* ty=Tensor[(6, 7, 10), uint64] */;
  %524 = dyn.reshape(%521, %522, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %525 = cast(%var_8446, dtype="float64") /* ty=Tensor[(2, 660), float64] */;
  %526 = cast(meta[relay.Constant][51] /* ty=Tensor[(12, 78), float64] */, dtype="float64") /* ty=Tensor[(12, 78), float64] */;
  %527 = reshape(%525, newshape=[11, 15, 8]) /* ty=Tensor[(11, 15, 8), float64] */;
  %528 = reshape(%526, newshape=[936]) /* ty=Tensor[(936), float64] */;
  %529 = @func_6475(%527, %528) /* ty=(Tensor[(11, 15, 8), bool], Tensor[(9, 13, 8), int32], Tensor[(936), float64]) */;
  %530 = cast(meta[relay.Constant][52] /* ty=Tensor[(1920), int32] */, dtype="int32") /* ty=Tensor[(1920), int32] */;
  %531 = cast(%var_8456, dtype="uint8") /* ty=Tensor[(462), uint8] */;
  %532 = reshape(%530, newshape=[10, 12, 16]) /* ty=Tensor[(10, 12, 16), int32] */;
  %533 = reshape(%531, newshape=[462]) /* ty=Tensor[(462), uint8] */;
  %534 = @func_618(%532, %533) /* ty=(Tensor[(13, 15, 1), uint64], Tensor[(195), uint64], Tensor[(10, 12, 16), bool], Tensor[(14, 16, 7), float32], Tensor[(462), uint8], Tensor[(10, 12, 16), float64]) */;
  %535 = add(%523, %524) /* ty=Tensor[(6, 7, 10), uint64] */;
  %536 = %529.1;
  %537 = %534.2;
  (%535, %536, %var_8446, meta[relay.Constant][51] /* ty=Tensor[(12, 78), float64] */, %537, meta[relay.Constant][52] /* ty=Tensor[(1920), int32] */, %var_8456)
}

def @func_6297() -> Tensor[(11, 15, 8), float64] {
  @func_6185() /* ty=Tensor[(11, 15, 8), float64] */
}

def @func_10466() -> (Tensor[(11, 15, 8), float32], Tensor[(11, 15, 8), float64]) {
  %538 = @func_9780() /* ty=Tensor[(11, 15, 8), float64] */;
  %539 = cast(%538, dtype="float32") /* ty=Tensor[(11, 15, 8), float32] */;
  %540 = @func_8000() /* ty=(Tensor[(11, 15, 8), float64],) */;
  %541 = erf(%539) /* ty=Tensor[(11, 15, 8), float32] */;
  %542 = %540.0;
  (%541, %542)
}

def @func_8619() -> (Tensor[(11, 15, 8), float64],) {
  %543 = @func_7193() /* ty=(Tensor[(11, 15, 8), float64],) */;
  %544 = %543.0;
  (%544,)
}

def @func_8428() -> Tensor[(11, 15, 8), float64] {
  %545 = @func_6297() /* ty=Tensor[(11, 15, 8), float64] */;
  %546 = cast(%545, dtype="float64") /* ty=Tensor[(11, 15, 8), float64] */;
  exp(%546) /* ty=Tensor[(11, 15, 8), float64] */
}

def @func_10009() -> Tensor[(13, 10, 16), bool] {
  %547 = @func_6287() /* ty=(Tensor[(11, 15, 8), float64], Tensor[(13, 10, 16), bool], Tensor[(2080), uint16]) */;
  %547.1
}

def @func_6652(%var_6643: Tensor[(11, 15, 8), float64]) -> (Tensor[(11, 15, 8), float32],) {
  %548 = @func_6297() /* ty=Tensor[(11, 15, 8), float64] */;
  %549 = cast(%var_6643, dtype="float32") /* ty=Tensor[(11, 15, 8), float32] */;
  %550 = shape_of(%548, dtype="int32") /* ty=Tensor[(3), int32] */;
  %551 = cast(%548, dtype="float32") /* ty=Tensor[(11, 15, 8), float32] */;
  %552 = dyn.reshape(%549, %550, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %553 = minimum(%551, %552) /* ty=Tensor[(11, 15, 8), float32] */;
  (%553,)
}

def @func_7193() -> (Tensor[(11, 15, 8), float64],) {
  %554 = @func_7068() /* ty=(Tensor[(11, 15, 8), float64],) */;
  %555 = %554.0;
  (%555,)
}

def @func_6813(%var_6781: Tensor[(64, 16), float32], %var_6784: Tensor[(80), int64], %var_6788: Tensor[(44), uint16]) -> (Tensor[(7, 6, 11), bool], Tensor[(9, 3, 7), bool], Tensor[(7, 66), float32], Tensor[(2080), uint16], Tensor[(75), bool], Tensor[(225, 3), bool], Tensor[(16, 16, 4), float32], Tensor[(64, 16), float32], Tensor[(4, 10, 2), int64], Tensor[(80), int64], Tensor[(4, 11, 3), uint16], Tensor[(44), uint16], Tensor[(132), uint16], Tensor[(1568), float64], Tensor[(13, 10, 16), bool]) {
  %556 = cast(meta[relay.Constant][53] /* ty=Tensor[(7, 66), uint8] */, dtype="uint8") /* ty=Tensor[(7, 66), uint8] */;
  %557 = cast(meta[relay.Constant][53] /* ty=Tensor[(7, 66), uint8] */, dtype="uint8") /* ty=Tensor[(7, 66), uint8] */;
  %558 = reshape(%556, newshape=[7, 6, 11]) /* ty=Tensor[(7, 6, 11), uint8] */;
  %559 = reshape(%557, newshape=[7, 6, 11]) /* ty=Tensor[(7, 6, 11), uint8] */;
  %560 = @func_165(%558, %559) /* ty=(Tensor[(7, 6, 11), bool], Tensor[(14, 16, 7), bool], Tensor[(1568), float64], Tensor[(14, 16, 7), bool], Tensor[(14, 16, 7), bool], Tensor[(14, 16, 7), float32]) */;
  %561 = cast(meta[relay.Constant][55] /* ty=Tensor[(9, 3, 7), int64] */, dtype="int64") /* ty=Tensor[(9, 3, 7), int64] */;
  %562 = shape_of(meta[relay.Constant][54] /* ty=Tensor[(9, 3, 7), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %563 = cast(meta[relay.Constant][54] /* ty=Tensor[(9, 3, 7), int64] */, dtype="int64") /* ty=Tensor[(9, 3, 7), int64] */;
  %564 = dyn.reshape(%561, %562, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %565 = logical_xor(%563, %564) /* ty=Tensor[(9, 3, 7), int64] */;
  %566 = cast(%565, dtype="float64") /* ty=Tensor[(9, 3, 7), float64] */;
  %567 = acosh(%566) /* ty=Tensor[(9, 3, 7), float64] */;
  %568 = cast(meta[relay.Constant][54] /* ty=Tensor[(9, 3, 7), int64] */, dtype="bool") /* ty=Tensor[(9, 3, 7), bool] */;
  %569 = shape_of(%567, dtype="int32") /* ty=Tensor[(3), int32] */;
  %570 = cast(%567, dtype="bool") /* ty=Tensor[(9, 3, 7), bool] */;
  %571 = dyn.reshape(%568, %569, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %572 = cast(meta[relay.Constant][53] /* ty=Tensor[(7, 66), uint8] */, dtype="float32") /* ty=Tensor[(7, 66), float32] */;
  %573 = cast(meta[relay.Constant][56] /* ty=Tensor[(75), bool] */, dtype="bool") /* ty=Tensor[(75), bool] */;
  %574 = cast(meta[relay.Constant][57] /* ty=Tensor[(225, 3), bool] */, dtype="bool") /* ty=Tensor[(225, 3), bool] */;
  %575 = reshape(%573, newshape=[15, 1, 5]) /* ty=Tensor[(15, 1, 5), bool] */;
  %576 = reshape(%574, newshape=[15, 9, 5]) /* ty=Tensor[(15, 9, 5), bool] */;
  %577 = @func_5762(%575, %576) /* ty=(Tensor[(15, 9, 5), bool], Tensor[(13, 10, 16), bool], Tensor[(2080), uint16]) */;
  %578 = cast(%var_6781, dtype="float32") /* ty=Tensor[(64, 16), float32] */;
  %579 = reshape(%578, newshape=[16, 16, 4]) /* ty=Tensor[(16, 16, 4), float32] */;
  %580 = @func_1621(%579) /* ty=(Tensor[(16, 16, 4), uint8], Tensor[(16, 16, 4), float32]) */;
  %581 = cast(%var_6784, dtype="int64") /* ty=Tensor[(80), int64] */;
  %582 = reshape(%581, newshape=[4, 10, 2]) /* ty=Tensor[(4, 10, 2), int64] */;
  %583 = @func_5247(%582) /* ty=(Tensor[(4, 10, 2), int64],) */;
  %584 = cast(%var_6788, dtype="uint16") /* ty=Tensor[(44), uint16] */;
  %585 = cast(meta[relay.Constant][58] /* ty=Tensor[(132), uint16] */, dtype="uint16") /* ty=Tensor[(132), uint16] */;
  %586 = cast(meta[relay.Constant][59] /* ty=Tensor[(1568), float64] */, dtype="float64") /* ty=Tensor[(1568), float64] */;
  %587 = reshape(%584, newshape=[4, 11, 1]) /* ty=Tensor[(4, 11, 1), uint16] */;
  %588 = reshape(%585, newshape=[4, 11, 3]) /* ty=Tensor[(4, 11, 3), uint16] */;
  %589 = reshape(%586, newshape=[1568]) /* ty=Tensor[(1568), float64] */;
  %590 = @func_6369(%587, %588, %589) /* ty=(Tensor[(4, 11, 3), uint16], Tensor[(14, 16, 7), bool], Tensor[(1568), float64]) */;
  %591 = @func_6287() /* ty=(Tensor[(11, 15, 8), float64], Tensor[(13, 10, 16), bool], Tensor[(2080), uint16]) */;
  %592 = %560.0;
  %593 = not_equal(%570, %571) /* ty=Tensor[(9, 3, 7), bool] */;
  %594 = sigmoid(%572) /* ty=Tensor[(7, 66), float32] */;
  %595 = %577.2;
  %596 = %580.1;
  %597 = %583.0;
  %598 = %590.0;
  %599 = %591.1;
  (%592, %593, %594, %595, meta[relay.Constant][56] /* ty=Tensor[(75), bool] */, meta[relay.Constant][57] /* ty=Tensor[(225, 3), bool] */, %596, %var_6781, %597, %var_6784, %598, %var_6788, meta[relay.Constant][58] /* ty=Tensor[(132), uint16] */, meta[relay.Constant][59] /* ty=Tensor[(1568), float64] */, %599)
}

def @func_3404(%var_3366: Tensor[(6, 5, 12), float32]) -> (Tensor[(6, 5, 12), float64], Tensor[(14, 16, 7), bool], Tensor[(462), uint8]) {
  %600 = cast(%var_3366, dtype="float32") /* ty=Tensor[(6, 5, 12), float32] */;
  %601 = shape_of(meta[relay.Constant][60] /* ty=Tensor[(6, 5, 12), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %602 = cast(meta[relay.Constant][60] /* ty=Tensor[(6, 5, 12), float32] */, dtype="float32") /* ty=Tensor[(6, 5, 12), float32] */;
  %603 = dyn.reshape(%600, %601, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %604 = divide(%602, %603) /* ty=Tensor[(6, 5, 12), float32] */;
  %605 = cast(meta[relay.Constant][60] /* ty=Tensor[(6, 5, 12), float32] */, dtype="float64") /* ty=Tensor[(6, 5, 12), float64] */;
  %606 = shape_of(%604, dtype="int32") /* ty=Tensor[(3), int32] */;
  %607 = cast(%604, dtype="float64") /* ty=Tensor[(6, 5, 12), float64] */;
  %608 = dyn.reshape(%605, %606, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %609 = cast(meta[relay.Constant][61] /* ty=Tensor[(462), uint8] */, dtype="uint8") /* ty=Tensor[(462), uint8] */;
  %610 = cast(meta[relay.Constant][61] /* ty=Tensor[(462), uint8] */, dtype="uint8") /* ty=Tensor[(462), uint8] */;
  %611 = reshape(%609, newshape=[7, 6, 11]) /* ty=Tensor[(7, 6, 11), uint8] */;
  %612 = reshape(%610, newshape=[7, 6, 11]) /* ty=Tensor[(7, 6, 11), uint8] */;
  %613 = @func_165(%611, %612) /* ty=(Tensor[(7, 6, 11), bool], Tensor[(14, 16, 7), bool], Tensor[(1568), float64], Tensor[(14, 16, 7), bool], Tensor[(14, 16, 7), bool], Tensor[(14, 16, 7), float32]) */;
  %614 = maximum(%607, %608) /* ty=Tensor[(6, 5, 12), float64] */;
  %615 = %613.4;
  (%614, %615, meta[relay.Constant][61] /* ty=Tensor[(462), uint8] */)
}

def @func_7405(%var_7392: Tensor[(936), float64]) -> (Tensor[(11, 15, 8), float64], Tensor[(9, 13, 8), int32], Tensor[(936), float64]) {
  %616 = @func_7019() /* ty=(Tensor[(11, 15, 8), float64],) */;
  %617 = cast(%var_7392, dtype="float64") /* ty=Tensor[(936), float64] */;
  %618 = reshape(%617, newshape=[9, 13, 8]) /* ty=Tensor[(9, 13, 8), float64] */;
  %619 = @func_4559(%618) /* ty=(Tensor[(9, 13, 8), int32],) */;
  %620 = %616.0;
  %621 = %619.0;
  (%620, %621, %var_7392)
}

def @func_8746(%var_8632: Tensor[(7, 1, 11), float32], %var_8671: Tensor[(7, 1, 11), float32], %var_8695: uint16, %var_8705: Tensor[(616), bool]) -> (Tensor[(7, ?, 11), bool], Tensor[(10, 14, 12), float64], uint16, Tensor[(11, 15, 8), float64], Tensor[(8, 11, 7), bool], Tensor[(616), bool], Tensor[(7, ?, 11), int32], Tensor[(9, 4, 7), float32], Tensor[(252), float32], Tensor[(6, 5, 12), float64], Tensor[(780), int32], Tensor[(1920), int32]) {
  %622 = cast(%var_8632, dtype="float32") /* ty=Tensor[(7, 1, 11), float32] */;
  %623 = rsqrt(%622) /* ty=Tensor[(7, 1, 11), float32] */;
  %624 = cast(%var_8671, dtype="bool") /* ty=Tensor[(7, 1, 11), bool] */;
  %625 = shape_of(%623, dtype="int32") /* ty=Tensor[(3), int32] */;
  %626 = cast(%623, dtype="bool") /* ty=Tensor[(7, 1, 11), bool] */;
  %627 = dyn.reshape(%624, %625, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %628 = cast(%var_8695, dtype="uint16") /* ty=uint16 */;
  %629 = reshape(%628, newshape=[]) /* ty=uint16 */;
  %630 = @func_6329() /* ty=(Tensor[(11, 15, 8), float64],) */;
  %631 = cast(%var_8705, dtype="bool") /* ty=Tensor[(616), bool] */;
  %632 = cast(%var_8705, dtype="bool") /* ty=Tensor[(616), bool] */;
  %633 = reshape(%631, newshape=[8, 11, 7]) /* ty=Tensor[(8, 11, 7), bool] */;
  %634 = reshape(%632, newshape=[8, 11, 7]) /* ty=Tensor[(8, 11, 7), bool] */;
  %635 = cast(%623, dtype="float32") /* ty=Tensor[(7, 1, 11), float32] */;
  %636 = sinh(%635) /* ty=Tensor[(7, 1, 11), float32] */;
  %637 = cast(%var_8632, dtype="bool") /* ty=Tensor[(7, 1, 11), bool] */;
  %638 = shape_of(%636, dtype="int32") /* ty=Tensor[(3), int32] */;
  %639 = cast(%636, dtype="bool") /* ty=Tensor[(7, 1, 11), bool] */;
  %640 = dyn.reshape(%637, %638, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %641 = logical_or(%639, %640) /* ty=Tensor[(7, ?, 11), bool] */;
  %642 = cast(%641, dtype="float32") /* ty=Tensor[(7, ?, 11), float32] */;
  %643 = atanh(%642) /* ty=Tensor[(7, ?, 11), float32] */;
  %644 = cast(%623, dtype="int32") /* ty=Tensor[(7, 1, 11), int32] */;
  %645 = shape_of(%643, dtype="int32") /* ty=Tensor[(3), int32] */;
  %646 = cast(%643, dtype="int32") /* ty=Tensor[(7, ?, 11), int32] */;
  %647 = dyn.reshape(%644, %645, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %648 = cast(meta[relay.Constant][62] /* ty=Tensor[(252), float32] */, dtype="float32") /* ty=Tensor[(252), float32] */;
  %649 = reshape(%648, newshape=[9, 4, 7]) /* ty=Tensor[(9, 4, 7), float32] */;
  %650 = cast(meta[relay.Constant][63] /* ty=Tensor[(780), int32] */, dtype="int32") /* ty=Tensor[(780), int32] */;
  %651 = cast(meta[relay.Constant][64] /* ty=Tensor[(1920), int32] */, dtype="int32") /* ty=Tensor[(1920), int32] */;
  %652 = reshape(%650, newshape=[5, 12, 13]) /* ty=Tensor[(5, 12, 13), int32] */;
  %653 = reshape(%651, newshape=[1920]) /* ty=Tensor[(1920), int32] */;
  %654 = @func_5503(%652, %653) /* ty=(Tensor[(5, 12, 13), int32], Tensor[(8, 8, 6), float64], Tensor[(48, 8), float64], Tensor[(616), bool], Tensor[(1920), int32], Tensor[(12, 14, 15), bool], Tensor[(2520), bool], Tensor[(6, 5, 12), float64], Tensor[(360, 1), float32], Tensor[(5, 12, 13), bool]) */;
  %655 = greater_equal(%626, %627) /* ty=Tensor[(7, ?, 11), bool] */;
  %656 = @func_8250(%629) /* ty=Tensor[(10, 14, 12), float64] */;
  %657 = %630.0;
  %658 = @func_1082(%633, %634) /* ty=Tensor[(8, 11, 7), bool] */;
  %659 = multiply(%646, %647) /* ty=Tensor[(7, ?, 11), int32] */;
  %660 = @func_4331(%649) /* ty=Tensor[(9, 4, 7), float32] */;
  %661 = %654.7;
  (%655, %656, %var_8695, %657, %658, %var_8705, %659, %660, meta[relay.Constant][62] /* ty=Tensor[(252), float32] */, %661, meta[relay.Constant][63] /* ty=Tensor[(780), int32] */, meta[relay.Constant][64] /* ty=Tensor[(1920), int32] */)
}

def @func_7513(%var_7457: Tensor[(8, 240), int32], %var_7462: Tensor[(2240), int16], %var_7508: Tensor[(2080), uint16]) -> (Tensor[(11, 15, 8), float64], Tensor[(5, 11, 9), uint64], Tensor[(495), uint64], Tensor[(650), float64], Tensor[(8, 240), int32], Tensor[(2240), int16], Tensor[(10, 16, 14), float64], Tensor[(11, 15, 8), float64], Tensor[(13, 10, 16), bool], Tensor[(2080), uint16]) {
  %662 = @func_6329() /* ty=(Tensor[(11, 15, 8), float64],) */;
  %663 = cast(meta[relay.Constant][65] /* ty=Tensor[(495), uint64] */, dtype="uint64") /* ty=Tensor[(495), uint64] */;
  %664 = cast(meta[relay.Constant][66] /* ty=Tensor[(650), float64] */, dtype="float64") /* ty=Tensor[(650), float64] */;
  %665 = cast(%var_7457, dtype="int32") /* ty=Tensor[(8, 240), int32] */;
  %666 = reshape(%663, newshape=[5, 11, 9]) /* ty=Tensor[(5, 11, 9), uint64] */;
  %667 = reshape(%664, newshape=[1, 650]) /* ty=Tensor[(1, 650), float64] */;
  %668 = reshape(%665, newshape=[8, 240]) /* ty=Tensor[(8, 240), int32] */;
  %669 = @func_6702(%666, %667, %668) /* ty=(Tensor[(5, 11, 9), uint64], Tensor[(462), uint8], Tensor[(1, 650), float64], Tensor[(462), uint8], Tensor[(8, 240), float32]) */;
  %670 = cast(%var_7462, dtype="int16") /* ty=Tensor[(2240), int16] */;
  %671 = cast(%var_7462, dtype="int16") /* ty=Tensor[(2240), int16] */;
  %672 = reshape(%670, newshape=[10, 16, 14]) /* ty=Tensor[(10, 16, 14), int16] */;
  %673 = reshape(%671, newshape=[10, 16, 14]) /* ty=Tensor[(10, 16, 14), int16] */;
  %674 = @func_1381(%672, %673) /* ty=Tensor[(10, 16, 14), bool] */;
  %675 = cast(%674, dtype="float64") /* ty=Tensor[(10, 16, 14), float64] */;
  %676 = @func_6041() /* ty=(Tensor[(11, 15, 8), float64],) */;
  %677 = cast(%var_7508, dtype="uint16") /* ty=Tensor[(2080), uint16] */;
  %678 = cast(%var_7508, dtype="uint16") /* ty=Tensor[(2080), uint16] */;
  %679 = reshape(%677, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), uint16] */;
  %680 = reshape(%678, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), uint16] */;
  %681 = %662.0;
  %682 = %669.0;
  %683 = log2(%675) /* ty=Tensor[(10, 16, 14), float64] */;
  %684 = %676.0;
  %685 = @func_4620(%679, %680) /* ty=Tensor[(13, 10, 16), bool] */;
  (%681, %682, meta[relay.Constant][65] /* ty=Tensor[(495), uint64] */, meta[relay.Constant][66] /* ty=Tensor[(650), float64] */, %var_7457, %var_7462, %683, %684, %685, %var_7508)
}

def @func_7093(%var_7084: Tensor[(936), float64]) -> (Tensor[(11, 15, 8), float64], Tensor[(11, 15, 8), int32], Tensor[(936), float64]) {
  %686 = @func_7068() /* ty=(Tensor[(11, 15, 8), float64],) */;
  %687 = %686.0;
  %688 = cast(%687, dtype="float64") /* ty=Tensor[(11, 15, 8), float64] */;
  %689 = cast(%var_7084, dtype="float64") /* ty=Tensor[(936), float64] */;
  %690 = reshape(%688, newshape=[11, 15, 8]) /* ty=Tensor[(11, 15, 8), float64] */;
  %691 = reshape(%689, newshape=[936]) /* ty=Tensor[(936), float64] */;
  %692 = @func_6131(%690, %691) /* ty=(Tensor[(11, 15, 8), int32], Tensor[(9, 13, 8), int32], Tensor[(936), float64], Tensor[(11, 15, 8), float64]) */;
  %693 = %692.0;
  (%687, %693, %var_7084)
}

def @func_7885() -> (Tensor[(11, 15, 8), float64],) {
  %694 = @func_6329() /* ty=(Tensor[(11, 15, 8), float64],) */;
  %695 = %694.0;
  (%695,)
}

def @func_6131(%var_6083: Tensor[(11, 15, 8), float64], %var_6113: Tensor[(936), float64]) -> (Tensor[(11, 15, 8), int32], Tensor[(9, 13, 8), int32], Tensor[(936), float64], Tensor[(11, 15, 8), float64]) {
  %696 = @func_6041() /* ty=(Tensor[(11, 15, 8), float64],) */;
  %697 = %696.0;
  %698 = cast(%var_6083, dtype="int32") /* ty=Tensor[(11, 15, 8), int32] */;
  %699 = shape_of(%697, dtype="int32") /* ty=Tensor[(3), int32] */;
  %700 = cast(%697, dtype="int32") /* ty=Tensor[(11, 15, 8), int32] */;
  %701 = dyn.reshape(%698, %699, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %702 = cast(%var_6113, dtype="float64") /* ty=Tensor[(936), float64] */;
  %703 = reshape(%702, newshape=[9, 13, 8]) /* ty=Tensor[(9, 13, 8), float64] */;
  %704 = @func_4559(%703) /* ty=(Tensor[(9, 13, 8), int32],) */;
  %705 = cast(%697, dtype="float64") /* ty=Tensor[(11, 15, 8), float64] */;
  %706 = right_shift(%700, %701) /* ty=Tensor[(11, 15, 8), int32] */;
  %707 = %704.0;
  %708 = log10(%705) /* ty=Tensor[(11, 15, 8), float64] */;
  (%706, %707, %var_6113, %708)
}

def @func_5937(%var_5922: Tensor[(14, 2, 16), uint8], %var_5929: Tensor[(360), int16], %var_5930: Tensor[(616), bool], %var_5931: Tensor[(220), int16]) -> (Tensor[(14, 2, 16), uint8], Tensor[(14, 16, 7), bool], Tensor[(30), int16], Tensor[(360), int16], Tensor[(616), bool], Tensor[(220), int16], Tensor[(462), uint8]) {
  %709 = cast(meta[relay.Constant][67] /* ty=Tensor[(14, 2, 16), uint8] */, dtype="uint8") /* ty=Tensor[(14, 2, 16), uint8] */;
  %710 = shape_of(%var_5922, dtype="int32") /* ty=Tensor[(3), int32] */;
  %711 = cast(%var_5922, dtype="uint8") /* ty=Tensor[(14, 2, 16), uint8] */;
  %712 = dyn.reshape(%709, %710, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %713 = cast(meta[relay.Constant][68] /* ty=Tensor[(30), int16] */, dtype="int16") /* ty=Tensor[(30), int16] */;
  %714 = cast(%var_5929, dtype="int16") /* ty=Tensor[(360), int16] */;
  %715 = cast(%var_5930, dtype="bool") /* ty=Tensor[(616), bool] */;
  %716 = cast(%var_5931, dtype="int16") /* ty=Tensor[(220), int16] */;
  %717 = cast(meta[relay.Constant][69] /* ty=Tensor[(462), uint8] */, dtype="uint8") /* ty=Tensor[(462), uint8] */;
  %718 = reshape(%713, newshape=[10, 1, 3]) /* ty=Tensor[(10, 1, 3), int16] */;
  %719 = reshape(%714, newshape=[10, 12, 3]) /* ty=Tensor[(10, 12, 3), int16] */;
  %720 = reshape(%715, newshape=[616]) /* ty=Tensor[(616), bool] */;
  %721 = reshape(%716, newshape=[220]) /* ty=Tensor[(220), int16] */;
  %722 = reshape(%717, newshape=[7, 66]) /* ty=Tensor[(7, 66), uint8] */;
  %723 = @func_1293(%718, %719, %720, %721, %722) /* ty=(Tensor[(10, 12, 3), bool], Tensor[(8, 11, 7), bool], Tensor[(616), bool], Tensor[(14, 16, 7), bool], Tensor[(7, 66), uint8], Tensor[(220), float64], Tensor[(14, 16, 7), bool], Tensor[(14, 16, 7), bool]) */;
  %724 = bitwise_and(%711, %712) /* ty=Tensor[(14, 2, 16), uint8] */;
  %725 = %723.3;
  (%724, %725, meta[relay.Constant][68] /* ty=Tensor[(30), int16] */, %var_5929, %var_5930, %var_5931, meta[relay.Constant][69] /* ty=Tensor[(462), uint8] */)
}

def @func_1010(%var_955: Tensor[(2, 10, 11), int16], %var_956: Tensor[(2, 10, 11), int16], %var_978: Tensor[(462), uint8]) -> (Tensor[(2, 10, 11), int16], Tensor[(14, 16, 7), bool], Tensor[(7, 6, 11), bool], Tensor[(462), uint8], Tensor[(1568), bool], Tensor[(14, 16, 7), bool]) {
  %726 = cast(%var_956, dtype="int16") /* ty=Tensor[(2, 10, 11), int16] */;
  %727 = shape_of(%var_955, dtype="int32") /* ty=Tensor[(3), int32] */;
  %728 = cast(%var_955, dtype="int16") /* ty=Tensor[(2, 10, 11), int16] */;
  %729 = dyn.reshape(%726, %727, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %730 = cast(meta[relay.Constant][70] /* ty=Tensor[(1568), float64] */, dtype="float64") /* ty=Tensor[(1568), float64] */;
  %731 = reshape(%730, newshape=[14, 16, 7]) /* ty=Tensor[(14, 16, 7), float64] */;
  %732 = @func_64(%731) /* ty=(Tensor[(14, 16, 7), bool],) */;
  %733 = cast(%var_978, dtype="uint8") /* ty=Tensor[(462), uint8] */;
  %734 = cast(%var_978, dtype="uint8") /* ty=Tensor[(462), uint8] */;
  %735 = reshape(%733, newshape=[7, 6, 11]) /* ty=Tensor[(7, 6, 11), uint8] */;
  %736 = reshape(%734, newshape=[7, 6, 11]) /* ty=Tensor[(7, 6, 11), uint8] */;
  %737 = @func_165(%735, %736) /* ty=(Tensor[(7, 6, 11), bool], Tensor[(14, 16, 7), bool], Tensor[(1568), float64], Tensor[(14, 16, 7), bool], Tensor[(14, 16, 7), bool], Tensor[(14, 16, 7), float32]) */;
  %738 = %737.0;
  %739 = cast(%738, dtype="uint8") /* ty=Tensor[(7, 6, 11), uint8] */;
  %740 = cast(%738, dtype="uint8") /* ty=Tensor[(7, 6, 11), uint8] */;
  %741 = reshape(%739, newshape=[7, 6, 11]) /* ty=Tensor[(7, 6, 11), uint8] */;
  %742 = reshape(%740, newshape=[7, 6, 11]) /* ty=Tensor[(7, 6, 11), uint8] */;
  %743 = @func_165(%741, %742) /* ty=(Tensor[(7, 6, 11), bool], Tensor[(14, 16, 7), bool], Tensor[(1568), float64], Tensor[(14, 16, 7), bool], Tensor[(14, 16, 7), bool], Tensor[(14, 16, 7), float32]) */;
  %744 = %743.2;
  %745 = cast(meta[relay.Constant][70] /* ty=Tensor[(1568), float64] */, dtype="bool") /* ty=Tensor[(1568), bool] */;
  %746 = shape_of(%744, dtype="int32") /* ty=Tensor[(1), int32] */;
  %747 = cast(%744, dtype="bool") /* ty=Tensor[(1568), bool] */;
  %748 = dyn.reshape(%745, %746, newshape=[]) /* ty=Tensor[(?), bool] */;
  %749 = cast(%744, dtype="float64") /* ty=Tensor[(1568), float64] */;
  %750 = reshape(%749, newshape=[14, 16, 7]) /* ty=Tensor[(14, 16, 7), float64] */;
  %751 = @func_64(%750) /* ty=(Tensor[(14, 16, 7), bool],) */;
  %752 = subtract(%728, %729) /* ty=Tensor[(2, 10, 11), int16] */;
  %753 = %732.0;
  %754 = less_equal(%747, %748) /* ty=Tensor[(1568), bool] */;
  %755 = %751.0;
  (%752, %753, %738, %var_978, %754, %755)
}

def @func_8000() -> (Tensor[(11, 15, 8), float64],) {
  %756 = @func_6185() /* ty=Tensor[(11, 15, 8), float64] */;
  (%756,)
}

def @func_2666(%var_2657: Tensor[(5, 15, 16), int32], %var_2658: Tensor[(5, 15, 16), int32]) -> Tensor[(5, 15, 16), bool] {
  %757 = cast(%var_2658, dtype="bool") /* ty=Tensor[(5, 15, 16), bool] */;
  %758 = shape_of(%var_2657, dtype="int32") /* ty=Tensor[(3), int32] */;
  %759 = cast(%var_2657, dtype="bool") /* ty=Tensor[(5, 15, 16), bool] */;
  %760 = dyn.reshape(%757, %758, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%759, %760) /* ty=Tensor[(5, 15, 16), bool] */
}

def @func_2334(%var_2299: Tensor[(10, 13, 5), float64], %var_2300: Tensor[(10, 13, 5), float64], %var_2308: Tensor[(1920), int32], %var_2309: Tensor[(462), uint8]) -> (Tensor[(10, 13, 5), float64], Tensor[(14, 16, 7), float32], Tensor[(1920), int32], Tensor[(462), uint8]) {
  %761 = cast(%var_2300, dtype="float64") /* ty=Tensor[(10, 13, 5), float64] */;
  %762 = shape_of(%var_2299, dtype="int32") /* ty=Tensor[(3), int32] */;
  %763 = cast(%var_2299, dtype="float64") /* ty=Tensor[(10, 13, 5), float64] */;
  %764 = dyn.reshape(%761, %762, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %765 = cast(%var_2308, dtype="int32") /* ty=Tensor[(1920), int32] */;
  %766 = cast(%var_2309, dtype="uint8") /* ty=Tensor[(462), uint8] */;
  %767 = reshape(%765, newshape=[10, 12, 16]) /* ty=Tensor[(10, 12, 16), int32] */;
  %768 = reshape(%766, newshape=[462]) /* ty=Tensor[(462), uint8] */;
  %769 = @func_618(%767, %768) /* ty=(Tensor[(13, 15, 1), uint64], Tensor[(195), uint64], Tensor[(10, 12, 16), bool], Tensor[(14, 16, 7), float32], Tensor[(462), uint8], Tensor[(10, 12, 16), float64]) */;
  %770 = floor_divide(%763, %764) /* ty=Tensor[(10, 13, 5), float64] */;
  %771 = %769.3;
  (%770, %771, %var_2308, %var_2309)
}

def @func_64(%var_39: Tensor[(14, 16, 7), float64]) -> (Tensor[(14, 16, 7), bool],) {
  %772 = cast(%var_39, dtype="float64") /* ty=Tensor[(14, 16, 7), float64] */;
  %773 = log10(%772) /* ty=Tensor[(14, 16, 7), float64] */;
  %774 = cast(%773, dtype="bool") /* ty=Tensor[(14, 16, 7), bool] */;
  %775 = shape_of(%var_39, dtype="int32") /* ty=Tensor[(3), int32] */;
  %776 = cast(%var_39, dtype="bool") /* ty=Tensor[(14, 16, 7), bool] */;
  %777 = dyn.reshape(%774, %775, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %778 = logical_or(%776, %777) /* ty=Tensor[(14, 16, 7), bool] */;
  (%778,)
}

def @func_7697(%var_7684: Tensor[(12, 11, 5), float32], %var_7685: Tensor[(12, 11, 5), float32]) -> (Tensor[(12, 11, 5), float32], Tensor[(11, 15, 8), float64]) {
  %779 = cast(%var_7685, dtype="float32") /* ty=Tensor[(12, 11, 5), float32] */;
  %780 = shape_of(%var_7684, dtype="int32") /* ty=Tensor[(3), int32] */;
  %781 = cast(%var_7684, dtype="float32") /* ty=Tensor[(12, 11, 5), float32] */;
  %782 = dyn.reshape(%779, %780, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %783 = mod(%781, %782) /* ty=Tensor[(12, 11, 5), float32] */;
  %784 = @func_7340() /* ty=Tensor[(11, 15, 8), float64] */;
  (%783, %784)
}

def @func_6475(%var_6450: Tensor[(11, 15, 8), float64], %var_6468: Tensor[(936), float64]) -> (Tensor[(11, 15, 8), bool], Tensor[(9, 13, 8), int32], Tensor[(936), float64]) {
  %785 = @func_6329() /* ty=(Tensor[(11, 15, 8), float64],) */;
  %786 = %785.0;
  %787 = cast(%var_6450, dtype="bool") /* ty=Tensor[(11, 15, 8), bool] */;
  %788 = shape_of(%786, dtype="int32") /* ty=Tensor[(3), int32] */;
  %789 = cast(%786, dtype="bool") /* ty=Tensor[(11, 15, 8), bool] */;
  %790 = dyn.reshape(%787, %788, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %791 = cast(%var_6468, dtype="float64") /* ty=Tensor[(936), float64] */;
  %792 = reshape(%791, newshape=[9, 13, 8]) /* ty=Tensor[(9, 13, 8), float64] */;
  %793 = @func_4559(%792) /* ty=(Tensor[(9, 13, 8), int32],) */;
  %794 = less_equal(%789, %790) /* ty=Tensor[(11, 15, 8), bool] */;
  %795 = %793.0;
  (%794, %795, %var_6468)
}

def @func_10328() -> (Tensor[(11, 15, 8), float64],) {
  %796 = @func_8356() /* ty=(Tensor[(11, 15, 8), float64],) */;
  %797 = %796.0;
  (%797,)
}

def @func_1115(%var_1098: Tensor[(8, 8, 6), float64], %var_1102: Tensor[(616), bool], %var_1112: Tensor[(1920), int32]) -> (Tensor[(8, 8, 6), float64], Tensor[(8, 11, 7), bool], Tensor[(616), bool], Tensor[(195), uint64], Tensor[(1920), int32], Tensor[(231, 2), uint8]) {
  %798 = cast(%var_1098, dtype="float64") /* ty=Tensor[(8, 8, 6), float64] */;
  %799 = cast(%var_1102, dtype="bool") /* ty=Tensor[(616), bool] */;
  %800 = cast(%var_1102, dtype="bool") /* ty=Tensor[(616), bool] */;
  %801 = reshape(%799, newshape=[8, 11, 7]) /* ty=Tensor[(8, 11, 7), bool] */;
  %802 = reshape(%800, newshape=[8, 11, 7]) /* ty=Tensor[(8, 11, 7), bool] */;
  %803 = cast(%var_1112, dtype="int32") /* ty=Tensor[(1920), int32] */;
  %804 = cast(meta[relay.Constant][71] /* ty=Tensor[(231, 2), uint8] */, dtype="uint8") /* ty=Tensor[(231, 2), uint8] */;
  %805 = reshape(%803, newshape=[10, 12, 16]) /* ty=Tensor[(10, 12, 16), int32] */;
  %806 = reshape(%804, newshape=[462]) /* ty=Tensor[(462), uint8] */;
  %807 = @func_618(%805, %806) /* ty=(Tensor[(13, 15, 1), uint64], Tensor[(195), uint64], Tensor[(10, 12, 16), bool], Tensor[(14, 16, 7), float32], Tensor[(462), uint8], Tensor[(10, 12, 16), float64]) */;
  %808 = sinh(%798) /* ty=Tensor[(8, 8, 6), float64] */;
  %809 = @func_1082(%801, %802) /* ty=Tensor[(8, 11, 7), bool] */;
  %810 = %807.1;
  (%808, %809, %var_1102, %810, %var_1112, meta[relay.Constant][71] /* ty=Tensor[(231, 2), uint8] */)
}

def @func_6429(%var_6414: Tensor[(11, 15, 8), float64]) -> (Tensor[(11, 15, 8), bool],) {
  %811 = @func_6041() /* ty=(Tensor[(11, 15, 8), float64],) */;
  %812 = %811.0;
  %813 = cast(%var_6414, dtype="bool") /* ty=Tensor[(11, 15, 8), bool] */;
  %814 = shape_of(%812, dtype="int32") /* ty=Tensor[(3), int32] */;
  %815 = cast(%812, dtype="bool") /* ty=Tensor[(11, 15, 8), bool] */;
  %816 = dyn.reshape(%813, %814, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %817 = greater(%815, %816) /* ty=Tensor[(11, 15, 8), bool] */;
  (%817,)
}

def @func_8250(%var_8235: uint16) -> Tensor[(10, 14, 12), float64] {
  %818 = cast(%var_8235, dtype="bool") /* ty=bool */;
  %819 = cast(meta[relay.Constant][72] /* ty=Tensor[(10, 14, 12), uint16] */, dtype="bool") /* ty=Tensor[(10, 14, 12), bool] */;
  %820 = not_equal(%818, %819) /* ty=Tensor[(10, 14, 12), bool] */;
  %821 = cast(meta[relay.Constant][73] /* ty=Tensor[(10, 14, 12), bool] */, dtype="float64") /* ty=Tensor[(10, 14, 12), float64] */;
  %822 = shape_of(%820, dtype="int32") /* ty=Tensor[(3), int32] */;
  %823 = cast(%820, dtype="float64") /* ty=Tensor[(10, 14, 12), float64] */;
  %824 = dyn.reshape(%821, %822, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  divide(%823, %824) /* ty=Tensor[(10, 14, 12), float64] */
}

def @func_3095(%var_3092: Tensor[(11, 3, 14), float32]) -> Tensor[(11, 3, 14), float32] {
  %825 = cast(%var_3092, dtype="float32") /* ty=Tensor[(11, 3, 14), float32] */;
  log10(%825) /* ty=Tensor[(11, 3, 14), float32] */
}

def @func_8757() -> Tensor[(11, 15, 8), float64] {
  %826 = @func_8619() /* ty=(Tensor[(11, 15, 8), float64],) */;
  %826.0
}

def @func_8779() -> (Tensor[(11, 15, 8), float64],) {
  %827 = @func_7068() /* ty=(Tensor[(11, 15, 8), float64],) */;
  %828 = %827.0;
  (%828,)
}

def @func_9140() -> (Tensor[(11, 15, 8), float64],) {
  %829 = @func_7340() /* ty=Tensor[(11, 15, 8), float64] */;
  (%829,)
}

def @func_4331(%var_4299: Tensor[(9, 4, 7), float32]) -> Tensor[(9, 4, 7), float32] {
  %830 = cast(%var_4299, dtype="float32") /* ty=Tensor[(9, 4, 7), float32] */;
  %831 = exp(%830) /* ty=Tensor[(9, 4, 7), float32] */;
  %832 = cast(%831, dtype="float32") /* ty=Tensor[(9, 4, 7), float32] */;
  sigmoid(%832) /* ty=Tensor[(9, 4, 7), float32] */
}

def @func_10094() -> Tensor[(13, 10, 16), bool] {
  %833 = @func_6287() /* ty=(Tensor[(11, 15, 8), float64], Tensor[(13, 10, 16), bool], Tensor[(2080), uint16]) */;
  %833.1
}

def @func_10405() -> (Tensor[(7, 15, 9), bool],) {
  %834 = @func_9803() /* ty=(Tensor[(7, 15, 9), float32], Tensor[(7, 15, 9), bool]) */;
  %835 = %834.1;
  (%835,)
}

def @func_9612(%var_9588: Tensor[(220, 12), int16], %var_9599: Tensor[(1920), int32], %var_9605: Tensor[(8, 260), uint16]) -> (Tensor[(220, 12), int16], Tensor[(5, 11, 9), uint64], Tensor[(495), uint64], Tensor[(650), float64], Tensor[(1920), int32], Tensor[(8, 260), uint16], Tensor[(13, 10, 16), float32]) {
  %836 = @func_7622() /* ty=(Tensor[(6, 7, 10), float64], Tensor[(360), int16], Tensor[(8, 56), uint8], Tensor[(360), int16], Tensor[(616), bool], Tensor[(220, 1), int16]) */;
  %837 = %836.5;
  %838 = cast(%837, dtype="int16") /* ty=Tensor[(220, 1), int16] */;
  %839 = cast(%var_9588, dtype="int16") /* ty=Tensor[(220, 12), int16] */;
  %840 = cast(meta[relay.Constant][74] /* ty=Tensor[(495), uint64] */, dtype="uint64") /* ty=Tensor[(495), uint64] */;
  %841 = cast(meta[relay.Constant][75] /* ty=Tensor[(650), float64] */, dtype="float64") /* ty=Tensor[(650), float64] */;
  %842 = cast(%var_9599, dtype="int32") /* ty=Tensor[(1920), int32] */;
  %843 = reshape(%840, newshape=[5, 11, 9]) /* ty=Tensor[(5, 11, 9), uint64] */;
  %844 = reshape(%841, newshape=[1, 650]) /* ty=Tensor[(1, 650), float64] */;
  %845 = reshape(%842, newshape=[8, 240]) /* ty=Tensor[(8, 240), int32] */;
  %846 = @func_6702(%843, %844, %845) /* ty=(Tensor[(5, 11, 9), uint64], Tensor[(462), uint8], Tensor[(1, 650), float64], Tensor[(462), uint8], Tensor[(8, 240), float32]) */;
  %847 = cast(%var_9605, dtype="uint16") /* ty=Tensor[(8, 260), uint16] */;
  %848 = reshape(%847, newshape=[104, 20]) /* ty=Tensor[(104, 20), uint16] */;
  %849 = @func_8847(%848) /* ty=(Tensor[(?, 1568), uint8], Tensor[(13, 10, 16), bool], Tensor[(104, 20), uint16]) */;
  %850 = %849.1;
  %851 = cast(%850, dtype="float32") /* ty=Tensor[(13, 10, 16), float32] */;
  %852 = minimum(%838, %839) /* ty=Tensor[(220, 12), int16] */;
  %853 = %846.0;
  %854 = log(%851) /* ty=Tensor[(13, 10, 16), float32] */;
  (%852, %853, meta[relay.Constant][74] /* ty=Tensor[(495), uint64] */, meta[relay.Constant][75] /* ty=Tensor[(650), float64] */, %var_9599, %var_9605, %854)
}

def @func_1082(%var_1077: Tensor[(8, 11, 7), bool], %var_1078: Tensor[(8, 11, 7), bool]) -> Tensor[(8, 11, 7), bool] {
  %855 = cast(%var_1078, dtype="bool") /* ty=Tensor[(8, 11, 7), bool] */;
  %856 = shape_of(%var_1077, dtype="int32") /* ty=Tensor[(3), int32] */;
  %857 = cast(%var_1077, dtype="bool") /* ty=Tensor[(8, 11, 7), bool] */;
  %858 = dyn.reshape(%855, %856, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%857, %858) /* ty=Tensor[(8, 11, 7), bool] */
}

def @func_5762(%var_5749: Tensor[(15, 1, 5), bool], %var_5750: Tensor[(15, 9, 5), bool]) -> (Tensor[(15, 9, 5), bool], Tensor[(13, 10, 16), bool], Tensor[(2080), uint16]) {
  %859 = cast(%var_5749, dtype="bool") /* ty=Tensor[(15, 1, 5), bool] */;
  %860 = cast(%var_5750, dtype="bool") /* ty=Tensor[(15, 9, 5), bool] */;
  %861 = cast(meta[relay.Constant][76] /* ty=Tensor[(2080), uint16] */, dtype="uint16") /* ty=Tensor[(2080), uint16] */;
  %862 = cast(meta[relay.Constant][76] /* ty=Tensor[(2080), uint16] */, dtype="uint16") /* ty=Tensor[(2080), uint16] */;
  %863 = reshape(%861, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), uint16] */;
  %864 = reshape(%862, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), uint16] */;
  %865 = logical_and(%859, %860) /* ty=Tensor[(15, 9, 5), bool] */;
  %866 = @func_4620(%863, %864) /* ty=Tensor[(13, 10, 16), bool] */;
  (%865, %866, meta[relay.Constant][76] /* ty=Tensor[(2080), uint16] */)
}

def @func_8356() -> (Tensor[(11, 15, 8), float64],) {
  %867 = @func_8336() /* ty=(Tensor[(11, 15, 8), float64], Tensor[(220), int16], Tensor[(30), int16], Tensor[(6, 7, 10), float32]) */;
  %868 = %867.0;
  (%868,)
}

def @func_2473(%var_2428: Tensor[(12, 14, 15), bool], %var_2429: Tensor[(12, 14, 15), bool], %var_2448: Tensor[(384), float64], %var_2449: Tensor[(616), bool]) -> (Tensor[(12, 14, 15), bool], Tensor[(12, 14, 15), float32], Tensor[(1920), int32], Tensor[(384), float64], Tensor[(616), bool], Tensor[(1920), int32]) {
  %869 = cast(%var_2429, dtype="bool") /* ty=Tensor[(12, 14, 15), bool] */;
  %870 = shape_of(%var_2428, dtype="int32") /* ty=Tensor[(3), int32] */;
  %871 = cast(%var_2428, dtype="bool") /* ty=Tensor[(12, 14, 15), bool] */;
  %872 = dyn.reshape(%869, %870, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %873 = cast(%var_2429, dtype="float32") /* ty=Tensor[(12, 14, 15), float32] */;
  %874 = cast(%var_2448, dtype="float64") /* ty=Tensor[(384), float64] */;
  %875 = cast(%var_2449, dtype="bool") /* ty=Tensor[(616), bool] */;
  %876 = cast(meta[relay.Constant][77] /* ty=Tensor[(1920), int32] */, dtype="int32") /* ty=Tensor[(1920), int32] */;
  %877 = reshape(%874, newshape=[8, 8, 6]) /* ty=Tensor[(8, 8, 6), float64] */;
  %878 = reshape(%875, newshape=[616]) /* ty=Tensor[(616), bool] */;
  %879 = reshape(%876, newshape=[1920]) /* ty=Tensor[(1920), int32] */;
  %880 = @func_1115(%877, %878, %879) /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 11, 7), bool], Tensor[(616), bool], Tensor[(195), uint64], Tensor[(1920), int32], Tensor[(231, 2), uint8]) */;
  %881 = logical_or(%871, %872) /* ty=Tensor[(12, 14, 15), bool] */;
  %882 = exp(%873) /* ty=Tensor[(12, 14, 15), float32] */;
  %883 = %880.4;
  (%881, %882, %883, %var_2448, %var_2449, meta[relay.Constant][77] /* ty=Tensor[(1920), int32] */)
}

def @func_7755(%var_7736: Tensor[(6, 7, 10), float64]) -> (Tensor[(6, 7, 10), uint64], Tensor[(14, 16, 7), bool], Tensor[(448), uint8], Tensor[(360), int16], Tensor[(616), bool], Tensor[(5, 44), int16]) {
  %884 = @func_7309() /* ty=Tensor[(6, 7, 10), float64] */;
  %885 = cast(%var_7736, dtype="uint64") /* ty=Tensor[(6, 7, 10), uint64] */;
  %886 = shape_of(%884, dtype="int32") /* ty=Tensor[(3), int32] */;
  %887 = cast(%884, dtype="uint64") /* ty=Tensor[(6, 7, 10), uint64] */;
  %888 = dyn.reshape(%885, %886, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %889 = cast(meta[relay.Constant][78] /* ty=Tensor[(448), uint8] */, dtype="uint8") /* ty=Tensor[(448), uint8] */;
  %890 = cast(meta[relay.Constant][79] /* ty=Tensor[(360), int16] */, dtype="int16") /* ty=Tensor[(360), int16] */;
  %891 = cast(meta[relay.Constant][80] /* ty=Tensor[(616), bool] */, dtype="bool") /* ty=Tensor[(616), bool] */;
  %892 = cast(meta[relay.Constant][81] /* ty=Tensor[(5, 44), int16] */, dtype="int16") /* ty=Tensor[(5, 44), int16] */;
  %893 = reshape(%889, newshape=[14, 2, 16]) /* ty=Tensor[(14, 2, 16), uint8] */;
  %894 = reshape(%890, newshape=[360]) /* ty=Tensor[(360), int16] */;
  %895 = reshape(%891, newshape=[616]) /* ty=Tensor[(616), bool] */;
  %896 = reshape(%892, newshape=[220]) /* ty=Tensor[(220), int16] */;
  %897 = @func_5937(%893, %894, %895, %896) /* ty=(Tensor[(14, 2, 16), uint8], Tensor[(14, 16, 7), bool], Tensor[(30), int16], Tensor[(360), int16], Tensor[(616), bool], Tensor[(220), int16], Tensor[(462), uint8]) */;
  %898 = left_shift(%887, %888) /* ty=Tensor[(6, 7, 10), uint64] */;
  %899 = %897.1;
  (%898, %899, meta[relay.Constant][78] /* ty=Tensor[(448), uint8] */, meta[relay.Constant][79] /* ty=Tensor[(360), int16] */, meta[relay.Constant][80] /* ty=Tensor[(616), bool] */, meta[relay.Constant][81] /* ty=Tensor[(5, 44), int16] */)
}

def @func_7228() -> Tensor[(11, 15, 8), float64] {
  %900 = @func_7068() /* ty=(Tensor[(11, 15, 8), float64],) */;
  %900.0
}

def @func_5973(%var_5960: Tensor[(15, 12, 12), int64], %var_5961: Tensor[(15, 12, 12), int64]) -> Tensor[(15, 12, 12), float32] {
  %901 = cast(%var_5961, dtype="int64") /* ty=Tensor[(15, 12, 12), int64] */;
  %902 = shape_of(%var_5960, dtype="int32") /* ty=Tensor[(3), int32] */;
  %903 = cast(%var_5960, dtype="int64") /* ty=Tensor[(15, 12, 12), int64] */;
  %904 = dyn.reshape(%901, %902, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %905 = left_shift(%903, %904) /* ty=Tensor[(15, 12, 12), int64] */;
  %906 = cast(%905, dtype="float32") /* ty=Tensor[(15, 12, 12), float32] */;
  atanh(%906) /* ty=Tensor[(15, 12, 12), float32] */
}

def @func_9842() -> (Tensor[(11, 15, 8), float64],) {
  %907 = @func_7885() /* ty=(Tensor[(11, 15, 8), float64],) */;
  %908 = %907.0;
  (%908,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @main() -> (Tensor[(11, 15, 8), float64], Tensor[(462), float32], Tensor[(11, 3, 14), float64]) {
  %0 = @func_8167() /* ty=(Tensor[(11, 15, 8), float64], Tensor[(?, 1568), uint8], Tensor[(11, 15, 8), float64]) */;
  %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(462), float32] */, dtype="float32") /* ty=Tensor[(462), float32] */;
  %2 = reshape(%1, newshape=[11, 3, 14]) /* ty=Tensor[(11, 3, 14), float32] */;
  %3 = @func_3095(%2) /* ty=Tensor[(11, 3, 14), float32] */;
  %4 = cast(%3, dtype="float64") /* ty=Tensor[(11, 3, 14), float64] */;
  %5 = %0.2;
  %6 = exp(%4) /* ty=Tensor[(11, 3, 14), float64] */;
  (%5, meta[relay.Constant][0] /* ty=Tensor[(462), float32] */, %6)
}

def @func_8428() -> Tensor[(11, 15, 8), float64] {
  %7 = @func_6297() /* ty=Tensor[(11, 15, 8), float64] */;
  %8 = cast(%7, dtype="float64") /* ty=Tensor[(11, 15, 8), float64] */;
  exp(%8) /* ty=Tensor[(11, 15, 8), float64] */
}

def @func_9769(%var_9767: Tensor[(1920), int32], %var_9768: uint16) -> (Tensor[(11, 15, 8), float64], Tensor[(1200), int32], Tensor[(11, 15, 8), float64], Tensor[(1200, ?), int16], Tensor[(5, 12, 13), bool], Tensor[(130, 6), int32], Tensor[(1920), int32], Tensor[(10, 14, 12), float64], Tensor[(360), int16], Tensor[(5, 15, 16), uint32]) {
  %43 = fn (%var_9708: Tensor[(1920), int32], %var_9712: uint16) -> (Tensor[(11, 15, 8), float64], Tensor[(1200), int32], Tensor[(11, 15, 8), float64], Tensor[(1200, ?), int16], Tensor[(5, 12, 13), bool], Tensor[(130, 6), int32], Tensor[(1920), int32], Tensor[(10, 14, 12), float64], Tensor[(360), int16], Tensor[(5, 15, 16), uint32]) {
    %9 = @func_6041() /* ty=(Tensor[(11, 15, 8), float64],) */;
    %10 = @func_7019() /* ty=(Tensor[(11, 15, 8), float64],) */;
    %11 = cast(meta[relay.Constant][1] /* ty=Tensor[(1200), int32] */, dtype="int32") /* ty=Tensor[(1200), int32] */;
    %12 = reshape(%11, newshape=[1200, 1]) /* ty=Tensor[(1200, 1), int32] */;
    %13 = @func_7122(%12) /* ty=(Tensor[(11, 15, 8), float64], Tensor[(1200, 1), int32], Tensor[(5, 15, 16), bool]) */;
    %14 = %13.1;
    %15 = cast(meta[relay.Constant][1] /* ty=Tensor[(1200), int32] */, dtype="int32") /* ty=Tensor[(1200), int32] */;
    %16 = cast(meta[relay.Constant][1] /* ty=Tensor[(1200), int32] */, dtype="int32") /* ty=Tensor[(1200), int32] */;
    %17 = reshape(%15, newshape=[5, 15, 16]) /* ty=Tensor[(5, 15, 16), int32] */;
    %18 = reshape(%16, newshape=[5, 15, 16]) /* ty=Tensor[(5, 15, 16), int32] */;
    %19 = @func_2666(%17, %18) /* ty=Tensor[(5, 15, 16), bool] */;
    %20 = cast(%19, dtype="int16") /* ty=Tensor[(5, 15, 16), int16] */;
    %21 = shape_of(%14, dtype="int32") /* ty=Tensor[(2), int32] */;
    %22 = cast(%14, dtype="int16") /* ty=Tensor[(1200, 1), int16] */;
    %23 = dyn.reshape(%20, %21, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
    %24 = cast(meta[relay.Constant][2] /* ty=Tensor[(130, 6), int32] */, dtype="int32") /* ty=Tensor[(130, 6), int32] */;
    %25 = cast(%var_9708, dtype="int32") /* ty=Tensor[(1920), int32] */;
    %26 = reshape(%24, newshape=[5, 12, 13]) /* ty=Tensor[(5, 12, 13), int32] */;
    %27 = reshape(%25, newshape=[1920]) /* ty=Tensor[(1920), int32] */;
    %28 = @func_5503(%26, %27) /* ty=(Tensor[(5, 12, 13), int32], Tensor[(8, 8, 6), float64], Tensor[(48, 8), float64], Tensor[(616), bool], Tensor[(1920), int32], Tensor[(12, 14, 15), bool], Tensor[(2520), bool], Tensor[(6, 5, 12), float64], Tensor[(360, 1), float32], Tensor[(5, 12, 13), bool]) */;
    %29 = cast(%var_9712, dtype="uint16") /* ty=uint16 */;
    %30 = reshape(%29, newshape=[]) /* ty=uint16 */;
    %31 = @func_7622() /* ty=(Tensor[(6, 7, 10), float64], Tensor[(360), int16], Tensor[(8, 56), uint8], Tensor[(360), int16], Tensor[(616), bool], Tensor[(220, 1), int16]) */;
    %32 = cast(%19, dtype="float64") /* ty=Tensor[(5, 15, 16), float64] */;
    %33 = atanh(%32) /* ty=Tensor[(5, 15, 16), float64] */;
    %34 = cast(%33, dtype="uint32") /* ty=Tensor[(5, 15, 16), uint32] */;
    %35 = cast(%var_9712, dtype="uint32") /* ty=uint32 */;
    %36 = %9.0;
    %37 = %10.0;
    %38 = right_shift(%22, %23) /* ty=Tensor[(1200, ?), int16] */;
    %39 = %28.9;
    %40 = @func_8250(%30) /* ty=Tensor[(10, 14, 12), float64] */;
    %41 = %31.3;
    %42 = bitwise_and(%34, %35) /* ty=Tensor[(5, 15, 16), uint32] */;
    (%36, meta[relay.Constant][1] /* ty=Tensor[(1200), int32] */, %37, %38, %39, meta[relay.Constant][2] /* ty=Tensor[(130, 6), int32] */, %var_9708, %40, %41, %42)
  };
  %43(%var_9767, %var_9768) /* ty=(Tensor[(11, 15, 8), float64], Tensor[(1200), int32], Tensor[(11, 15, 8), float64], Tensor[(1200, ?), int16], Tensor[(5, 12, 13), bool], Tensor[(130, 6), int32], Tensor[(1920), int32], Tensor[(10, 14, 12), float64], Tensor[(360), int16], Tensor[(5, 15, 16), uint32]) */
}

def @func_5765(%var_5763: Tensor[(15, 1, 5), bool], %var_5764: Tensor[(15, 9, 5), bool]) -> (Tensor[(15, 9, 5), bool], Tensor[(13, 10, 16), bool], Tensor[(2080), uint16]) {
  %52 = fn (%var_5749: Tensor[(15, 1, 5), bool], %var_5750: Tensor[(15, 9, 5), bool]) -> (Tensor[(15, 9, 5), bool], Tensor[(13, 10, 16), bool], Tensor[(2080), uint16]) {
    %44 = cast(%var_5749, dtype="bool") /* ty=Tensor[(15, 1, 5), bool] */;
    %45 = cast(%var_5750, dtype="bool") /* ty=Tensor[(15, 9, 5), bool] */;
    %46 = cast(meta[relay.Constant][3] /* ty=Tensor[(2080), uint16] */, dtype="uint16") /* ty=Tensor[(2080), uint16] */;
    %47 = cast(meta[relay.Constant][3] /* ty=Tensor[(2080), uint16] */, dtype="uint16") /* ty=Tensor[(2080), uint16] */;
    %48 = reshape(%46, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), uint16] */;
    %49 = reshape(%47, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), uint16] */;
    %50 = logical_and(%44, %45) /* ty=Tensor[(15, 9, 5), bool] */;
    %51 = @func_4620(%48, %49) /* ty=Tensor[(13, 10, 16), bool] */;
    (%50, %51, meta[relay.Constant][3] /* ty=Tensor[(2080), uint16] */)
  };
  %52(%var_5763, %var_5764) /* ty=(Tensor[(15, 9, 5), bool], Tensor[(13, 10, 16), bool], Tensor[(2080), uint16]) */
}

def @func_8000() -> (Tensor[(11, 15, 8), float64],) {
  %53 = @func_6185() /* ty=Tensor[(11, 15, 8), float64] */;
  (%53,)
}

def @func_3404(%var_3366: Tensor[(6, 5, 12), float32]) -> (Tensor[(6, 5, 12), float64], Tensor[(14, 16, 7), bool], Tensor[(462), uint8]) {
  %54 = cast(%var_3366, dtype="float32") /* ty=Tensor[(6, 5, 12), float32] */;
  %55 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(6, 5, 12), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %56 = cast(meta[relay.Constant][4] /* ty=Tensor[(6, 5, 12), float32] */, dtype="float32") /* ty=Tensor[(6, 5, 12), float32] */;
  %57 = dyn.reshape(%54, %55, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %58 = divide(%56, %57) /* ty=Tensor[(6, 5, 12), float32] */;
  %59 = cast(meta[relay.Constant][4] /* ty=Tensor[(6, 5, 12), float32] */, dtype="float64") /* ty=Tensor[(6, 5, 12), float64] */;
  %60 = shape_of(%58, dtype="int32") /* ty=Tensor[(3), int32] */;
  %61 = cast(%58, dtype="float64") /* ty=Tensor[(6, 5, 12), float64] */;
  %62 = dyn.reshape(%59, %60, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %63 = cast(meta[relay.Constant][5] /* ty=Tensor[(462), uint8] */, dtype="uint8") /* ty=Tensor[(462), uint8] */;
  %64 = cast(meta[relay.Constant][5] /* ty=Tensor[(462), uint8] */, dtype="uint8") /* ty=Tensor[(462), uint8] */;
  %65 = reshape(%63, newshape=[7, 6, 11]) /* ty=Tensor[(7, 6, 11), uint8] */;
  %66 = reshape(%64, newshape=[7, 6, 11]) /* ty=Tensor[(7, 6, 11), uint8] */;
  %67 = @func_165(%65, %66) /* ty=(Tensor[(7, 6, 11), bool], Tensor[(14, 16, 7), bool], Tensor[(1568), float64], Tensor[(14, 16, 7), bool], Tensor[(14, 16, 7), bool], Tensor[(14, 16, 7), float32]) */;
  %68 = maximum(%61, %62) /* ty=Tensor[(6, 5, 12), float64] */;
  %69 = %67.4;
  (%68, %69, meta[relay.Constant][5] /* ty=Tensor[(462), uint8] */)
}

def @func_7384() -> Tensor[(6, 7, 10), float32] {
  %70 = @func_7309() /* ty=Tensor[(6, 7, 10), float64] */;
  %71 = cast(%70, dtype="float32") /* ty=Tensor[(6, 7, 10), float32] */;
  log2(%71) /* ty=Tensor[(6, 7, 10), float32] */
}

def @func_9497() -> Tensor[(360), int16] {
  @func_9495() /* ty=Tensor[(360), int16] */
}

def @func_8525(%var_8492: Tensor[(720), int16], %var_8493: Tensor[(1920), int32], %var_8505: Tensor[(11, 15, 8), float64]) -> (Tensor[(2520), bool], Tensor[(720), int16], Tensor[(1920), int32], Tensor[(11, 15, 8), float32]) {
  %72 = cast(%var_8492, dtype="int16") /* ty=Tensor[(720), int16] */;
  %73 = cast(%var_8492, dtype="int16") /* ty=Tensor[(720), int16] */;
  %74 = cast(%var_8493, dtype="int32") /* ty=Tensor[(1920), int32] */;
  %75 = reshape(%72, newshape=[6, 15, 8]) /* ty=Tensor[(6, 15, 8), int16] */;
  %76 = reshape(%73, newshape=[6, 15, 8]) /* ty=Tensor[(6, 15, 8), int16] */;
  %77 = reshape(%74, newshape=[1, 1920]) /* ty=Tensor[(1, 1920), int32] */;
  %78 = @func_2612(%75, %76, %77) /* ty=(Tensor[(6, 15, 8), bool], Tensor[(12, 14, 15), float32], Tensor[(2520), bool], Tensor[(384), float64], Tensor[(154, 4), bool], Tensor[(6, 15, 8), uint32], Tensor[(231, 2), uint8], Tensor[(1, 1920), int32]) */;
  %79 = @func_8428() /* ty=Tensor[(11, 15, 8), float64] */;
  %80 = cast(%var_8505, dtype="float32") /* ty=Tensor[(11, 15, 8), float32] */;
  %81 = shape_of(%79, dtype="int32") /* ty=Tensor[(3), int32] */;
  %82 = cast(%79, dtype="float32") /* ty=Tensor[(11, 15, 8), float32] */;
  %83 = dyn.reshape(%80, %81, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %84 = %78.2;
  %85 = divide(%82, %83) /* ty=Tensor[(11, 15, 8), float32] */;
  (%84, %var_8492, %var_8493, %85)
}

def @func_10223(%var_10221: Tensor[(1320), float64], %var_10222: Tensor[(1920), int32]) -> (Tensor[(6, 7, 10), float32], Tensor[(2, 10, 11), int16], Tensor[(220), int16], Tensor[(462), uint8], Tensor[(11, 15, 8), int16], Tensor[(1320), float64], Tensor[(11, 15, 8), float64], Tensor[(616), bool], Tensor[(780), int32], Tensor[(1920), int32]) {
  @func_10219(%var_10221, %var_10222) /* ty=(Tensor[(6, 7, 10), float32], Tensor[(2, 10, 11), int16], Tensor[(220), int16], Tensor[(462), uint8], Tensor[(11, 15, 8), int16], Tensor[(1320), float64], Tensor[(11, 15, 8), float64], Tensor[(616), bool], Tensor[(780), int32], Tensor[(1920), int32]) */
}

def @func_1085(%var_1083: Tensor[(8, 11, 7), bool], %var_1084: Tensor[(8, 11, 7), bool]) -> Tensor[(8, 11, 7), bool] {
  %90 = fn (%var_1077: Tensor[(8, 11, 7), bool], %var_1078: Tensor[(8, 11, 7), bool]) -> Tensor[(8, 11, 7), bool] {
    %86 = cast(%var_1078, dtype="bool") /* ty=Tensor[(8, 11, 7), bool] */;
    %87 = shape_of(%var_1077, dtype="int32") /* ty=Tensor[(3), int32] */;
    %88 = cast(%var_1077, dtype="bool") /* ty=Tensor[(8, 11, 7), bool] */;
    %89 = dyn.reshape(%86, %87, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    logical_and(%88, %89) /* ty=Tensor[(8, 11, 7), bool] */
  };
  %90(%var_1083, %var_1084) /* ty=Tensor[(8, 11, 7), bool] */
}

def @func_5973(%var_5960: Tensor[(15, 12, 12), int64], %var_5961: Tensor[(15, 12, 12), int64]) -> Tensor[(15, 12, 12), float32] {
  %91 = cast(%var_5961, dtype="int64") /* ty=Tensor[(15, 12, 12), int64] */;
  %92 = shape_of(%var_5960, dtype="int32") /* ty=Tensor[(3), int32] */;
  %93 = cast(%var_5960, dtype="int64") /* ty=Tensor[(15, 12, 12), int64] */;
  %94 = dyn.reshape(%91, %92, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %95 = left_shift(%93, %94) /* ty=Tensor[(15, 12, 12), int64] */;
  %96 = cast(%95, dtype="float32") /* ty=Tensor[(15, 12, 12), float32] */;
  atanh(%96) /* ty=Tensor[(15, 12, 12), float32] */
}

def @func_10583(%var_10581: Tensor[(2, 10, 2), float32]) -> (Tensor[(2, 10, 2), float32], Tensor[(11, 15, 8), float64]) {
  @func_10580(%var_10581) /* ty=(Tensor[(2, 10, 2), float32], Tensor[(11, 15, 8), float64]) */
}

def @func_4387(%var_4371: Tensor[(2, 1, 3), float32], %var_4378: Tensor[(630, 4), bool], %var_4380: Tensor[(616), bool]) -> (Tensor[(2, 1, 3), float32], Tensor[(12, 14, 15), bool], Tensor[(630, 4), bool], Tensor[(384), float64], Tensor[(616), bool], Tensor[(1568), float64], Tensor[(13, 15), uint64]) {
  %97 = cast(%var_4371, dtype="float32") /* ty=Tensor[(2, 1, 3), float32] */;
  %98 = cast(%var_4378, dtype="bool") /* ty=Tensor[(630, 4), bool] */;
  %99 = cast(%var_4378, dtype="bool") /* ty=Tensor[(630, 4), bool] */;
  %100 = cast(meta[relay.Constant][6] /* ty=Tensor[(384), float64] */, dtype="float64") /* ty=Tensor[(384), float64] */;
  %101 = cast(%var_4380, dtype="bool") /* ty=Tensor[(616), bool] */;
  %102 = reshape(%98, newshape=[12, 14, 15]) /* ty=Tensor[(12, 14, 15), bool] */;
  %103 = reshape(%99, newshape=[12, 14, 15]) /* ty=Tensor[(12, 14, 15), bool] */;
  %104 = reshape(%100, newshape=[384]) /* ty=Tensor[(384), float64] */;
  %105 = reshape(%101, newshape=[616]) /* ty=Tensor[(616), bool] */;
  %106 = @func_2473(%102, %103, %104, %105) /* ty=(Tensor[(12, 14, 15), bool], Tensor[(12, 14, 15), float32], Tensor[(1920), int32], Tensor[(384), float64], Tensor[(616), bool], Tensor[(1920), int32]) */;
  %107 = cast(meta[relay.Constant][7] /* ty=Tensor[(13, 15), uint64] */, dtype="uint64") /* ty=Tensor[(13, 15), uint64] */;
  %108 = reshape(%107, newshape=[13, 15, 1]) /* ty=Tensor[(13, 15, 1), uint64] */;
  %109 = @func_241(%108) /* ty=(Tensor[(13, 15, 1), uint64], Tensor[(1568), float64], Tensor[(231, 2), uint8]) */;
  %110 = erf(%97) /* ty=Tensor[(2, 1, 3), float32] */;
  %111 = %106.0;
  %112 = %109.1;
  (%110, %111, %var_4378, meta[relay.Constant][6] /* ty=Tensor[(384), float64] */, %var_4380, %112, meta[relay.Constant][7] /* ty=Tensor[(13, 15), uint64] */)
}

def @func_1010(%var_955: Tensor[(2, 10, 11), int16], %var_956: Tensor[(2, 10, 11), int16], %var_978: Tensor[(462), uint8]) -> (Tensor[(2, 10, 11), int16], Tensor[(14, 16, 7), bool], Tensor[(7, 6, 11), bool], Tensor[(462), uint8], Tensor[(1568), bool], Tensor[(14, 16, 7), bool]) {
  %113 = cast(%var_956, dtype="int16") /* ty=Tensor[(2, 10, 11), int16] */;
  %114 = shape_of(%var_955, dtype="int32") /* ty=Tensor[(3), int32] */;
  %115 = cast(%var_955, dtype="int16") /* ty=Tensor[(2, 10, 11), int16] */;
  %116 = dyn.reshape(%113, %114, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %117 = cast(meta[relay.Constant][8] /* ty=Tensor[(1568), float64] */, dtype="float64") /* ty=Tensor[(1568), float64] */;
  %118 = reshape(%117, newshape=[14, 16, 7]) /* ty=Tensor[(14, 16, 7), float64] */;
  %119 = @func_64(%118) /* ty=(Tensor[(14, 16, 7), bool],) */;
  %120 = cast(%var_978, dtype="uint8") /* ty=Tensor[(462), uint8] */;
  %121 = cast(%var_978, dtype="uint8") /* ty=Tensor[(462), uint8] */;
  %122 = reshape(%120, newshape=[7, 6, 11]) /* ty=Tensor[(7, 6, 11), uint8] */;
  %123 = reshape(%121, newshape=[7, 6, 11]) /* ty=Tensor[(7, 6, 11), uint8] */;
  %124 = @func_165(%122, %123) /* ty=(Tensor[(7, 6, 11), bool], Tensor[(14, 16, 7), bool], Tensor[(1568), float64], Tensor[(14, 16, 7), bool], Tensor[(14, 16, 7), bool], Tensor[(14, 16, 7), float32]) */;
  %125 = %124.0;
  %126 = cast(%125, dtype="uint8") /* ty=Tensor[(7, 6, 11), uint8] */;
  %127 = cast(%125, dtype="uint8") /* ty=Tensor[(7, 6, 11), uint8] */;
  %128 = reshape(%126, newshape=[7, 6, 11]) /* ty=Tensor[(7, 6, 11), uint8] */;
  %129 = reshape(%127, newshape=[7, 6, 11]) /* ty=Tensor[(7, 6, 11), uint8] */;
  %130 = @func_165(%128, %129) /* ty=(Tensor[(7, 6, 11), bool], Tensor[(14, 16, 7), bool], Tensor[(1568), float64], Tensor[(14, 16, 7), bool], Tensor[(14, 16, 7), bool], Tensor[(14, 16, 7), float32]) */;
  %131 = %130.2;
  %132 = cast(meta[relay.Constant][8] /* ty=Tensor[(1568), float64] */, dtype="bool") /* ty=Tensor[(1568), bool] */;
  %133 = shape_of(%131, dtype="int32") /* ty=Tensor[(1), int32] */;
  %134 = cast(%131, dtype="bool") /* ty=Tensor[(1568), bool] */;
  %135 = dyn.reshape(%132, %133, newshape=[]) /* ty=Tensor[(?), bool] */;
  %136 = cast(%131, dtype="float64") /* ty=Tensor[(1568), float64] */;
  %137 = reshape(%136, newshape=[14, 16, 7]) /* ty=Tensor[(14, 16, 7), float64] */;
  %138 = @func_64(%137) /* ty=(Tensor[(14, 16, 7), bool],) */;
  %139 = subtract(%115, %116) /* ty=Tensor[(2, 10, 11), int16] */;
  %140 = %119.0;
  %141 = less_equal(%134, %135) /* ty=Tensor[(1568), bool] */;
  %142 = %138.0;
  (%139, %140, %125, %var_978, %141, %142)
}

def @func_9141() -> (Tensor[(11, 15, 8), float64],) {
  %144 = fn () -> (Tensor[(11, 15, 8), float64],) {
    %143 = @func_7340() /* ty=Tensor[(11, 15, 8), float64] */;
    (%143,)
  };
  %144() /* ty=(Tensor[(11, 15, 8), float64],) */
}

def @func_6918(%var_6903: Tensor[(30), int16]) -> (Tensor[(11, 15, 8), bool], Tensor[(14, 16, 7), bool], Tensor[(30), int16], Tensor[(360), int16], Tensor[(616), bool], Tensor[(220), int16], Tensor[(1, 462), uint8]) {
  %145 = @func_6329() /* ty=(Tensor[(11, 15, 8), float64],) */;
  %146 = %145.0;
  %147 = cast(meta[relay.Constant][9] /* ty=Tensor[(11, 15, 8), float64] */, dtype="bool") /* ty=Tensor[(11, 15, 8), bool] */;
  %148 = shape_of(%146, dtype="int32") /* ty=Tensor[(3), int32] */;
  %149 = cast(%146, dtype="bool") /* ty=Tensor[(11, 15, 8), bool] */;
  %150 = dyn.reshape(%147, %148, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %151 = cast(%var_6903, dtype="int16") /* ty=Tensor[(30), int16] */;
  %152 = cast(meta[relay.Constant][10] /* ty=Tensor[(360), int16] */, dtype="int16") /* ty=Tensor[(360), int16] */;
  %153 = cast(meta[relay.Constant][11] /* ty=Tensor[(616), bool] */, dtype="bool") /* ty=Tensor[(616), bool] */;
  %154 = cast(meta[relay.Constant][12] /* ty=Tensor[(220), int16] */, dtype="int16") /* ty=Tensor[(220), int16] */;
  %155 = cast(meta[relay.Constant][13] /* ty=Tensor[(1, 462), uint8] */, dtype="uint8") /* ty=Tensor[(1, 462), uint8] */;
  %156 = reshape(%151, newshape=[10, 1, 3]) /* ty=Tensor[(10, 1, 3), int16] */;
  %157 = reshape(%152, newshape=[10, 12, 3]) /* ty=Tensor[(10, 12, 3), int16] */;
  %158 = reshape(%153, newshape=[616]) /* ty=Tensor[(616), bool] */;
  %159 = reshape(%154, newshape=[220]) /* ty=Tensor[(220), int16] */;
  %160 = reshape(%155, newshape=[7, 66]) /* ty=Tensor[(7, 66), uint8] */;
  %161 = @func_1293(%156, %157, %158, %159, %160) /* ty=(Tensor[(10, 12, 3), bool], Tensor[(8, 11, 7), bool], Tensor[(616), bool], Tensor[(14, 16, 7), bool], Tensor[(7, 66), uint8], Tensor[(220), float64], Tensor[(14, 16, 7), bool], Tensor[(14, 16, 7), bool]) */;
  %162 = logical_or(%149, %150) /* ty=Tensor[(11, 15, 8), bool] */;
  %163 = %161.6;
  (%162, %163, %var_6903, meta[relay.Constant][10] /* ty=Tensor[(360), int16] */, meta[relay.Constant][11] /* ty=Tensor[(616), bool] */, meta[relay.Constant][12] /* ty=Tensor[(220), int16] */, meta[relay.Constant][13] /* ty=Tensor[(1, 462), uint8] */)
}

def @func_6288() -> (Tensor[(11, 15, 8), float64], Tensor[(13, 10, 16), bool], Tensor[(2080), uint16]) {
  %170 = fn () -> (Tensor[(11, 15, 8), float64], Tensor[(13, 10, 16), bool], Tensor[(2080), uint16]) {
    %164 = cast(meta[relay.Constant][14] /* ty=Tensor[(2080), uint16] */, dtype="uint16") /* ty=Tensor[(2080), uint16] */;
    %165 = cast(meta[relay.Constant][14] /* ty=Tensor[(2080), uint16] */, dtype="uint16") /* ty=Tensor[(2080), uint16] */;
    %166 = reshape(%164, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), uint16] */;
    %167 = reshape(%165, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), uint16] */;
    %168 = @func_6185() /* ty=Tensor[(11, 15, 8), float64] */;
    %169 = @func_4620(%166, %167) /* ty=Tensor[(13, 10, 16), bool] */;
    (%168, %169, meta[relay.Constant][14] /* ty=Tensor[(2080), uint16] */)
  };
  %170() /* ty=(Tensor[(11, 15, 8), float64], Tensor[(13, 10, 16), bool], Tensor[(2080), uint16]) */
}

def @func_9612(%var_9588: Tensor[(220, 12), int16], %var_9599: Tensor[(1920), int32], %var_9605: Tensor[(8, 260), uint16]) -> (Tensor[(220, 12), int16], Tensor[(5, 11, 9), uint64], Tensor[(495), uint64], Tensor[(650), float64], Tensor[(1920), int32], Tensor[(8, 260), uint16], Tensor[(13, 10, 16), float32]) {
  %171 = @func_7622() /* ty=(Tensor[(6, 7, 10), float64], Tensor[(360), int16], Tensor[(8, 56), uint8], Tensor[(360), int16], Tensor[(616), bool], Tensor[(220, 1), int16]) */;
  %172 = %171.5;
  %173 = cast(%172, dtype="int16") /* ty=Tensor[(220, 1), int16] */;
  %174 = cast(%var_9588, dtype="int16") /* ty=Tensor[(220, 12), int16] */;
  %175 = cast(meta[relay.Constant][15] /* ty=Tensor[(495), uint64] */, dtype="uint64") /* ty=Tensor[(495), uint64] */;
  %176 = cast(meta[relay.Constant][16] /* ty=Tensor[(650), float64] */, dtype="float64") /* ty=Tensor[(650), float64] */;
  %177 = cast(%var_9599, dtype="int32") /* ty=Tensor[(1920), int32] */;
  %178 = reshape(%175, newshape=[5, 11, 9]) /* ty=Tensor[(5, 11, 9), uint64] */;
  %179 = reshape(%176, newshape=[1, 650]) /* ty=Tensor[(1, 650), float64] */;
  %180 = reshape(%177, newshape=[8, 240]) /* ty=Tensor[(8, 240), int32] */;
  %181 = @func_6702(%178, %179, %180) /* ty=(Tensor[(5, 11, 9), uint64], Tensor[(462), uint8], Tensor[(1, 650), float64], Tensor[(462), uint8], Tensor[(8, 240), float32]) */;
  %182 = cast(%var_9605, dtype="uint16") /* ty=Tensor[(8, 260), uint16] */;
  %183 = reshape(%182, newshape=[104, 20]) /* ty=Tensor[(104, 20), uint16] */;
  %184 = @func_8847(%183) /* ty=(Tensor[(?, 1568), uint8], Tensor[(13, 10, 16), bool], Tensor[(104, 20), uint16]) */;
  %185 = %184.1;
  %186 = cast(%185, dtype="float32") /* ty=Tensor[(13, 10, 16), float32] */;
  %187 = minimum(%173, %174) /* ty=Tensor[(220, 12), int16] */;
  %188 = %181.0;
  %189 = log(%186) /* ty=Tensor[(13, 10, 16), float32] */;
  (%187, %188, meta[relay.Constant][15] /* ty=Tensor[(495), uint64] */, meta[relay.Constant][16] /* ty=Tensor[(650), float64] */, %var_9599, %var_9605, %189)
}

def @func_8167() -> (Tensor[(11, 15, 8), float64], Tensor[(?, 1568), uint8], Tensor[(11, 15, 8), float64]) {
  @func_8165() /* ty=(Tensor[(11, 15, 8), float64], Tensor[(?, 1568), uint8], Tensor[(11, 15, 8), float64]) */
}

def @func_5250(%var_5248: Tensor[(4, 10, 2), int64]) -> (Tensor[(4, 10, 2), int64],) {
  @func_5247(%var_5248) /* ty=(Tensor[(4, 10, 2), int64],) */
}

def @func_1300(%var_1295: Tensor[(10, 1, 3), int16], %var_1296: Tensor[(10, 12, 3), int16], %var_1297: Tensor[(616), bool], %var_1298: Tensor[(220), int16], %var_1299: Tensor[(7, 66), uint8]) -> (Tensor[(10, 12, 3), bool], Tensor[(8, 11, 7), bool], Tensor[(616), bool], Tensor[(14, 16, 7), bool], Tensor[(7, 66), uint8], Tensor[(220), float64], Tensor[(14, 16, 7), bool], Tensor[(14, 16, 7), bool]) {
  @func_1293(%var_1295, %var_1296, %var_1297, %var_1298, %var_1299) /* ty=(Tensor[(10, 12, 3), bool], Tensor[(8, 11, 7), bool], Tensor[(616), bool], Tensor[(14, 16, 7), bool], Tensor[(7, 66), uint8], Tensor[(220), float64], Tensor[(14, 16, 7), bool], Tensor[(14, 16, 7), bool]) */
}

def @func_10219(%var_10189: Tensor[(1320), float64], %var_10198: Tensor[(1920), int32]) -> (Tensor[(6, 7, 10), float32], Tensor[(2, 10, 11), int16], Tensor[(220), int16], Tensor[(462), uint8], Tensor[(11, 15, 8), int16], Tensor[(1320), float64], Tensor[(11, 15, 8), float64], Tensor[(616), bool], Tensor[(780), int32], Tensor[(1920), int32]) {
  %190 = cast(meta[relay.Constant][17] /* ty=Tensor[(220), int16] */, dtype="int16") /* ty=Tensor[(220), int16] */;
  %191 = cast(meta[relay.Constant][17] /* ty=Tensor[(220), int16] */, dtype="int16") /* ty=Tensor[(220), int16] */;
  %192 = cast(meta[relay.Constant][18] /* ty=Tensor[(462), uint8] */, dtype="uint8") /* ty=Tensor[(462), uint8] */;
  %193 = reshape(%190, newshape=[2, 10, 11]) /* ty=Tensor[(2, 10, 11), int16] */;
  %194 = reshape(%191, newshape=[2, 10, 11]) /* ty=Tensor[(2, 10, 11), int16] */;
  %195 = reshape(%192, newshape=[462]) /* ty=Tensor[(462), uint8] */;
  %196 = @func_1010(%193, %194, %195) /* ty=(Tensor[(2, 10, 11), int16], Tensor[(14, 16, 7), bool], Tensor[(7, 6, 11), bool], Tensor[(462), uint8], Tensor[(1568), bool], Tensor[(14, 16, 7), bool]) */;
  %197 = cast(%var_10189, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %198 = reshape(%197, newshape=[11, 15, 8]) /* ty=Tensor[(11, 15, 8), float64] */;
  %199 = @func_6226(%198) /* ty=(Tensor[(11, 15, 8), float64], Tensor[(11, 15, 8), int16]) */;
  %200 = @func_9842() /* ty=(Tensor[(11, 15, 8), float64],) */;
  %201 = cast(meta[relay.Constant][19] /* ty=Tensor[(780), int32] */, dtype="int32") /* ty=Tensor[(780), int32] */;
  %202 = cast(%var_10198, dtype="int32") /* ty=Tensor[(1920), int32] */;
  %203 = reshape(%201, newshape=[5, 12, 13]) /* ty=Tensor[(5, 12, 13), int32] */;
  %204 = reshape(%202, newshape=[1920]) /* ty=Tensor[(1920), int32] */;
  %205 = @func_5503(%203, %204) /* ty=(Tensor[(5, 12, 13), int32], Tensor[(8, 8, 6), float64], Tensor[(48, 8), float64], Tensor[(616), bool], Tensor[(1920), int32], Tensor[(12, 14, 15), bool], Tensor[(2520), bool], Tensor[(6, 5, 12), float64], Tensor[(360, 1), float32], Tensor[(5, 12, 13), bool]) */;
  %206 = @func_7384() /* ty=Tensor[(6, 7, 10), float32] */;
  %207 = %196.0;
  %208 = %199.1;
  %209 = %200.0;
  %210 = %205.3;
  (%206, %207, meta[relay.Constant][17] /* ty=Tensor[(220), int16] */, meta[relay.Constant][18] /* ty=Tensor[(462), uint8] */, %208, %var_10189, %209, %210, meta[relay.Constant][19] /* ty=Tensor[(780), int32] */, %var_10198)
}

def @func_9395() -> (Tensor[(11, 15, 8), float64], Tensor[(11, 15, 8), float64]) {
  @func_9393() /* ty=(Tensor[(11, 15, 8), float64], Tensor[(11, 15, 8), float64]) */
}

def @func_2669(%var_2667: Tensor[(5, 15, 16), int32], %var_2668: Tensor[(5, 15, 16), int32]) -> Tensor[(5, 15, 16), bool] {
  %215 = fn (%var_2657: Tensor[(5, 15, 16), int32], %var_2658: Tensor[(5, 15, 16), int32]) -> Tensor[(5, 15, 16), bool] {
    %211 = cast(%var_2658, dtype="bool") /* ty=Tensor[(5, 15, 16), bool] */;
    %212 = shape_of(%var_2657, dtype="int32") /* ty=Tensor[(3), int32] */;
    %213 = cast(%var_2657, dtype="bool") /* ty=Tensor[(5, 15, 16), bool] */;
    %214 = dyn.reshape(%211, %212, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    less(%213, %214) /* ty=Tensor[(5, 15, 16), bool] */
  };
  %215(%var_2667, %var_2668) /* ty=Tensor[(5, 15, 16), bool] */
}

def @func_7001(%var_6996: Tensor[(11, 15, 8), float64], %var_6997: Tensor[(1024), float32], %var_6998: Tensor[(780), int32], %var_6999: Tensor[(1920), int32], %var_7000: Tensor[(1920), int32]) -> (Tensor[(360), int16], Tensor[(30), int16], Tensor[(11, 15, 8), uint32], Tensor[(16, 16, 4), uint8], Tensor[(1024), float32], Tensor[(5, 12, 13), int32], Tensor[(780), int32], Tensor[(462), uint8], Tensor[(650), float64], Tensor[(231, 2), uint8], Tensor[(1920), uint32]) {
  %252 = fn (%var_6945: Tensor[(11, 15, 8), float64], %var_6956: Tensor[(1024), float32], %var_6965: Tensor[(780), int32], %var_6966: Tensor[(1920), int32], %var_6988: Tensor[(1920), int32]) -> (Tensor[(360), int16], Tensor[(30), int16], Tensor[(11, 15, 8), uint32], Tensor[(16, 16, 4), uint8], Tensor[(1024), float32], Tensor[(5, 12, 13), int32], Tensor[(780), int32], Tensor[(462), uint8], Tensor[(650), float64], Tensor[(231, 2), uint8], Tensor[(1920), uint32]) {
    %216 = cast(meta[relay.Constant][20] /* ty=Tensor[(30), int16] */, dtype="int16") /* ty=Tensor[(30), int16] */;
    %217 = reshape(%216, newshape=[30]) /* ty=Tensor[(30), int16] */;
    %218 = @func_6918(%217) /* ty=(Tensor[(11, 15, 8), bool], Tensor[(14, 16, 7), bool], Tensor[(30), int16], Tensor[(360), int16], Tensor[(616), bool], Tensor[(220), int16], Tensor[(1, 462), uint8]) */;
    %219 = @func_6329() /* ty=(Tensor[(11, 15, 8), float64],) */;
    %220 = %219.0;
    %221 = cast(%var_6945, dtype="uint32") /* ty=Tensor[(11, 15, 8), uint32] */;
    %222 = shape_of(%220, dtype="int32") /* ty=Tensor[(3), int32] */;
    %223 = cast(%220, dtype="uint32") /* ty=Tensor[(11, 15, 8), uint32] */;
    %224 = dyn.reshape(%221, %222, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %225 = cast(%var_6956, dtype="float32") /* ty=Tensor[(1024), float32] */;
    %226 = reshape(%225, newshape=[16, 16, 4]) /* ty=Tensor[(16, 16, 4), float32] */;
    %227 = @func_1621(%226) /* ty=(Tensor[(16, 16, 4), uint8], Tensor[(16, 16, 4), float32]) */;
    %228 = cast(%var_6965, dtype="int32") /* ty=Tensor[(780), int32] */;
    %229 = cast(%var_6966, dtype="int32") /* ty=Tensor[(1920), int32] */;
    %230 = reshape(%228, newshape=[5, 12, 13]) /* ty=Tensor[(5, 12, 13), int32] */;
    %231 = reshape(%229, newshape=[1920]) /* ty=Tensor[(1920), int32] */;
    %232 = @func_5503(%230, %231) /* ty=(Tensor[(5, 12, 13), int32], Tensor[(8, 8, 6), float64], Tensor[(48, 8), float64], Tensor[(616), bool], Tensor[(1920), int32], Tensor[(12, 14, 15), bool], Tensor[(2520), bool], Tensor[(6, 5, 12), float64], Tensor[(360, 1), float32], Tensor[(5, 12, 13), bool]) */;
    %233 = cast(meta[relay.Constant][21] /* ty=Tensor[(650), float64] */, dtype="float64") /* ty=Tensor[(650), float64] */;
    %234 = cast(meta[relay.Constant][21] /* ty=Tensor[(650), float64] */, dtype="float64") /* ty=Tensor[(650), float64] */;
    %235 = cast(%var_6966, dtype="int32") /* ty=Tensor[(1920), int32] */;
    %236 = cast(meta[relay.Constant][22] /* ty=Tensor[(231, 2), uint8] */, dtype="uint8") /* ty=Tensor[(231, 2), uint8] */;
    %237 = reshape(%233, newshape=[10, 13, 5]) /* ty=Tensor[(10, 13, 5), float64] */;
    %238 = reshape(%234, newshape=[10, 13, 5]) /* ty=Tensor[(10, 13, 5), float64] */;
    %239 = reshape(%235, newshape=[1920]) /* ty=Tensor[(1920), int32] */;
    %240 = reshape(%236, newshape=[462]) /* ty=Tensor[(462), uint8] */;
    %241 = @func_2334(%237, %238, %239, %240) /* ty=(Tensor[(10, 13, 5), float64], Tensor[(14, 16, 7), float32], Tensor[(1920), int32], Tensor[(462), uint8]) */;
    %242 = cast(%var_6988, dtype="uint32") /* ty=Tensor[(1920), uint32] */;
    %243 = shape_of(%var_6966, dtype="int32") /* ty=Tensor[(1), int32] */;
    %244 = cast(%var_6966, dtype="uint32") /* ty=Tensor[(1920), uint32] */;
    %245 = dyn.reshape(%242, %243, newshape=[]) /* ty=Tensor[(?), uint32] */;
    %246 = %218.3;
    %247 = bitwise_or(%223, %224) /* ty=Tensor[(11, 15, 8), uint32] */;
    %248 = %227.0;
    %249 = %232.0;
    %250 = %241.3;
    %251 = right_shift(%244, %245) /* ty=Tensor[(1920), uint32] */;
    (%246, meta[relay.Constant][20] /* ty=Tensor[(30), int16] */, %247, %248, %var_6956, %249, %var_6965, %250, meta[relay.Constant][21] /* ty=Tensor[(650), float64] */, meta[relay.Constant][22] /* ty=Tensor[(231, 2), uint8] */, %251)
  };
  %252(%var_6996, %var_6997, %var_6998, %var_6999, %var_7000) /* ty=(Tensor[(360), int16], Tensor[(30), int16], Tensor[(11, 15, 8), uint32], Tensor[(16, 16, 4), uint8], Tensor[(1024), float32], Tensor[(5, 12, 13), int32], Tensor[(780), int32], Tensor[(462), uint8], Tensor[(650), float64], Tensor[(231, 2), uint8], Tensor[(1920), uint32]) */
}

def @func_7230() -> Tensor[(11, 15, 8), float64] {
  @func_7228() /* ty=Tensor[(11, 15, 8), float64] */
}

def @func_6298() -> Tensor[(11, 15, 8), float64] {
  %253 = fn () -> Tensor[(11, 15, 8), float64] {
    @func_6185() /* ty=Tensor[(11, 15, 8), float64] */
  };
  %253() /* ty=Tensor[(11, 15, 8), float64] */
}

def @func_64(%var_39: Tensor[(14, 16, 7), float64]) -> (Tensor[(14, 16, 7), bool],) {
  %254 = cast(%var_39, dtype="float64") /* ty=Tensor[(14, 16, 7), float64] */;
  %255 = log10(%254) /* ty=Tensor[(14, 16, 7), float64] */;
  %256 = cast(%255, dtype="bool") /* ty=Tensor[(14, 16, 7), bool] */;
  %257 = shape_of(%var_39, dtype="int32") /* ty=Tensor[(3), int32] */;
  %258 = cast(%var_39, dtype="bool") /* ty=Tensor[(14, 16, 7), bool] */;
  %259 = dyn.reshape(%256, %257, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %260 = logical_or(%258, %259) /* ty=Tensor[(14, 16, 7), bool] */;
  (%260,)
}

def @func_10466() -> (Tensor[(11, 15, 8), float32], Tensor[(11, 15, 8), float64]) {
  %261 = @func_9780() /* ty=Tensor[(11, 15, 8), float64] */;
  %262 = cast(%261, dtype="float32") /* ty=Tensor[(11, 15, 8), float32] */;
  %263 = @func_8000() /* ty=(Tensor[(11, 15, 8), float64],) */;
  %264 = erf(%262) /* ty=Tensor[(11, 15, 8), float32] */;
  %265 = %263.0;
  (%264, %265)
}

def @func_9650(%var_9649: Tensor[(12, 7, 1), float32]) -> (Tensor[(12, 7, 4), float32], Tensor[(6, 7, 10), float32], Tensor[(12, 7, 4), float64]) {
  %272 = fn (%var_9624: Tensor[(12, 7, 1), float32]) -> (Tensor[(12, 7, 4), float32], Tensor[(6, 7, 10), float32], Tensor[(12, 7, 4), float64]) {
    %266 = cast(%var_9624, dtype="float32") /* ty=Tensor[(12, 7, 1), float32] */;
    %267 = cast(meta[relay.Constant][23] /* ty=Tensor[(12, 7, 4), float32] */, dtype="float32") /* ty=Tensor[(12, 7, 4), float32] */;
    %268 = cast(meta[relay.Constant][23] /* ty=Tensor[(12, 7, 4), float32] */, dtype="float64") /* ty=Tensor[(12, 7, 4), float64] */;
    %269 = add(%266, %267) /* ty=Tensor[(12, 7, 4), float32] */;
    %270 = @func_7384() /* ty=Tensor[(6, 7, 10), float32] */;
    %271 = sqrt(%268) /* ty=Tensor[(12, 7, 4), float64] */;
    (%269, %270, %271)
  };
  %272(%var_9649) /* ty=(Tensor[(12, 7, 4), float32], Tensor[(6, 7, 10), float32], Tensor[(12, 7, 4), float64]) */
}

def @func_165(%var_118: Tensor[(7, 6, 11), uint8], %var_119: Tensor[(7, 6, 11), uint8]) -> (Tensor[(7, 6, 11), bool], Tensor[(14, 16, 7), bool], Tensor[(1568), float64], Tensor[(14, 16, 7), bool], Tensor[(14, 16, 7), bool], Tensor[(14, 16, 7), float32]) {
  %273 = cast(%var_119, dtype="bool") /* ty=Tensor[(7, 6, 11), bool] */;
  %274 = shape_of(%var_118, dtype="int32") /* ty=Tensor[(3), int32] */;
  %275 = cast(%var_118, dtype="bool") /* ty=Tensor[(7, 6, 11), bool] */;
  %276 = dyn.reshape(%273, %274, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %277 = cast(meta[relay.Constant][24] /* ty=Tensor[(1568), float64] */, dtype="float64") /* ty=Tensor[(1568), float64] */;
  %278 = reshape(%277, newshape=[14, 16, 7]) /* ty=Tensor[(14, 16, 7), float64] */;
  %279 = @func_64(%278) /* ty=(Tensor[(14, 16, 7), bool],) */;
  %280 = cast(meta[relay.Constant][24] /* ty=Tensor[(1568), float64] */, dtype="float64") /* ty=Tensor[(1568), float64] */;
  %281 = reshape(%280, newshape=[14, 16, 7]) /* ty=Tensor[(14, 16, 7), float64] */;
  %282 = @func_64(%281) /* ty=(Tensor[(14, 16, 7), bool],) */;
  %283 = %279.0;
  %284 = cast(%283, dtype="float64") /* ty=Tensor[(14, 16, 7), float64] */;
  %285 = reshape(%284, newshape=[14, 16, 7]) /* ty=Tensor[(14, 16, 7), float64] */;
  %286 = @func_64(%285) /* ty=(Tensor[(14, 16, 7), bool],) */;
  %287 = %286.0;
  %288 = cast(%287, dtype="float64") /* ty=Tensor[(14, 16, 7), float64] */;
  %289 = reshape(%288, newshape=[14, 16, 7]) /* ty=Tensor[(14, 16, 7), float64] */;
  %290 = @func_64(%289) /* ty=(Tensor[(14, 16, 7), bool],) */;
  %291 = cast(meta[relay.Constant][25] /* ty=Tensor[(14, 16, 7), bool] */, dtype="float32") /* ty=Tensor[(14, 16, 7), float32] */;
  %292 = shape_of(%287, dtype="int32") /* ty=Tensor[(3), int32] */;
  %293 = cast(%287, dtype="float32") /* ty=Tensor[(14, 16, 7), float32] */;
  %294 = dyn.reshape(%291, %292, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %295 = greater(%275, %276) /* ty=Tensor[(7, 6, 11), bool] */;
  %296 = %282.0;
  %297 = %290.0;
  %298 = minimum(%293, %294) /* ty=Tensor[(14, 16, 7), float32] */;
  (%295, %283, meta[relay.Constant][24] /* ty=Tensor[(1568), float64] */, %296, %297, %298)
}

def @func_3095(%var_3092: Tensor[(11, 3, 14), float32]) -> Tensor[(11, 3, 14), float32] {
  %299 = cast(%var_3092, dtype="float32") /* ty=Tensor[(11, 3, 14), float32] */;
  log10(%299) /* ty=Tensor[(11, 3, 14), float32] */
}

def @func_7623() -> (Tensor[(6, 7, 10), float64], Tensor[(360), int16], Tensor[(8, 56), uint8], Tensor[(360), int16], Tensor[(616), bool], Tensor[(220, 1), int16]) {
  %311 = fn () -> (Tensor[(6, 7, 10), float64], Tensor[(360), int16], Tensor[(8, 56), uint8], Tensor[(360), int16], Tensor[(616), bool], Tensor[(220, 1), int16]) {
    %300 = cast(meta[relay.Constant][26] /* ty=Tensor[(8, 56), uint8] */, dtype="uint8") /* ty=Tensor[(8, 56), uint8] */;
    %301 = cast(meta[relay.Constant][27] /* ty=Tensor[(360), int16] */, dtype="int16") /* ty=Tensor[(360), int16] */;
    %302 = cast(meta[relay.Constant][28] /* ty=Tensor[(616), bool] */, dtype="bool") /* ty=Tensor[(616), bool] */;
    %303 = cast(meta[relay.Constant][29] /* ty=Tensor[(220, 1), int16] */, dtype="int16") /* ty=Tensor[(220, 1), int16] */;
    %304 = reshape(%300, newshape=[14, 2, 16]) /* ty=Tensor[(14, 2, 16), uint8] */;
    %305 = reshape(%301, newshape=[360]) /* ty=Tensor[(360), int16] */;
    %306 = reshape(%302, newshape=[616]) /* ty=Tensor[(616), bool] */;
    %307 = reshape(%303, newshape=[220]) /* ty=Tensor[(220), int16] */;
    %308 = @func_5937(%304, %305, %306, %307) /* ty=(Tensor[(14, 2, 16), uint8], Tensor[(14, 16, 7), bool], Tensor[(30), int16], Tensor[(360), int16], Tensor[(616), bool], Tensor[(220), int16], Tensor[(462), uint8]) */;
    %309 = @func_7309() /* ty=Tensor[(6, 7, 10), float64] */;
    %310 = %308.3;
    (%309, %310, meta[relay.Constant][26] /* ty=Tensor[(8, 56), uint8] */, meta[relay.Constant][27] /* ty=Tensor[(360), int16] */, meta[relay.Constant][28] /* ty=Tensor[(616), bool] */, meta[relay.Constant][29] /* ty=Tensor[(220, 1), int16] */)
  };
  %311() /* ty=(Tensor[(6, 7, 10), float64], Tensor[(360), int16], Tensor[(8, 56), uint8], Tensor[(360), int16], Tensor[(616), bool], Tensor[(220, 1), int16]) */
}

def @func_241(%var_225: Tensor[(13, 15, 1), uint64]) -> (Tensor[(13, 15, 1), uint64], Tensor[(1568), float64], Tensor[(231, 2), uint8]) {
  %312 = cast(meta[relay.Constant][30] /* ty=Tensor[(13, 1, 1), uint64] */, dtype="uint64") /* ty=Tensor[(13, 1, 1), uint64] */;
  %313 = cast(%var_225, dtype="uint64") /* ty=Tensor[(13, 15, 1), uint64] */;
  %314 = cast(meta[relay.Constant][31] /* ty=Tensor[(231, 2), uint8] */, dtype="uint8") /* ty=Tensor[(231, 2), uint8] */;
  %315 = cast(meta[relay.Constant][31] /* ty=Tensor[(231, 2), uint8] */, dtype="uint8") /* ty=Tensor[(231, 2), uint8] */;
  %316 = reshape(%314, newshape=[7, 6, 11]) /* ty=Tensor[(7, 6, 11), uint8] */;
  %317 = reshape(%315, newshape=[7, 6, 11]) /* ty=Tensor[(7, 6, 11), uint8] */;
  %318 = @func_165(%316, %317) /* ty=(Tensor[(7, 6, 11), bool], Tensor[(14, 16, 7), bool], Tensor[(1568), float64], Tensor[(14, 16, 7), bool], Tensor[(14, 16, 7), bool], Tensor[(14, 16, 7), float32]) */;
  %319 = bitwise_or(%312, %313) /* ty=Tensor[(13, 15, 1), uint64] */;
  %320 = %318.2;
  (%319, %320, meta[relay.Constant][31] /* ty=Tensor[(231, 2), uint8] */)
}

def @func_9782() -> Tensor[(11, 15, 8), float64] {
  @func_9780() /* ty=Tensor[(11, 15, 8), float64] */
}

def @func_6813(%var_6781: Tensor[(64, 16), float32], %var_6784: Tensor[(80), int64], %var_6788: Tensor[(44), uint16]) -> (Tensor[(7, 6, 11), bool], Tensor[(9, 3, 7), bool], Tensor[(7, 66), float32], Tensor[(2080), uint16], Tensor[(75), bool], Tensor[(225, 3), bool], Tensor[(16, 16, 4), float32], Tensor[(64, 16), float32], Tensor[(4, 10, 2), int64], Tensor[(80), int64], Tensor[(4, 11, 3), uint16], Tensor[(44), uint16], Tensor[(132), uint16], Tensor[(1568), float64], Tensor[(13, 10, 16), bool]) {
  %321 = cast(meta[relay.Constant][32] /* ty=Tensor[(7, 66), uint8] */, dtype="uint8") /* ty=Tensor[(7, 66), uint8] */;
  %322 = cast(meta[relay.Constant][32] /* ty=Tensor[(7, 66), uint8] */, dtype="uint8") /* ty=Tensor[(7, 66), uint8] */;
  %323 = reshape(%321, newshape=[7, 6, 11]) /* ty=Tensor[(7, 6, 11), uint8] */;
  %324 = reshape(%322, newshape=[7, 6, 11]) /* ty=Tensor[(7, 6, 11), uint8] */;
  %325 = @func_165(%323, %324) /* ty=(Tensor[(7, 6, 11), bool], Tensor[(14, 16, 7), bool], Tensor[(1568), float64], Tensor[(14, 16, 7), bool], Tensor[(14, 16, 7), bool], Tensor[(14, 16, 7), float32]) */;
  %326 = cast(meta[relay.Constant][34] /* ty=Tensor[(9, 3, 7), int64] */, dtype="int64") /* ty=Tensor[(9, 3, 7), int64] */;
  %327 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(9, 3, 7), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %328 = cast(meta[relay.Constant][33] /* ty=Tensor[(9, 3, 7), int64] */, dtype="int64") /* ty=Tensor[(9, 3, 7), int64] */;
  %329 = dyn.reshape(%326, %327, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %330 = logical_xor(%328, %329) /* ty=Tensor[(9, 3, 7), int64] */;
  %331 = cast(%330, dtype="float64") /* ty=Tensor[(9, 3, 7), float64] */;
  %332 = acosh(%331) /* ty=Tensor[(9, 3, 7), float64] */;
  %333 = cast(meta[relay.Constant][33] /* ty=Tensor[(9, 3, 7), int64] */, dtype="bool") /* ty=Tensor[(9, 3, 7), bool] */;
  %334 = shape_of(%332, dtype="int32") /* ty=Tensor[(3), int32] */;
  %335 = cast(%332, dtype="bool") /* ty=Tensor[(9, 3, 7), bool] */;
  %336 = dyn.reshape(%333, %334, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %337 = cast(meta[relay.Constant][32] /* ty=Tensor[(7, 66), uint8] */, dtype="float32") /* ty=Tensor[(7, 66), float32] */;
  %338 = cast(meta[relay.Constant][35] /* ty=Tensor[(75), bool] */, dtype="bool") /* ty=Tensor[(75), bool] */;
  %339 = cast(meta[relay.Constant][36] /* ty=Tensor[(225, 3), bool] */, dtype="bool") /* ty=Tensor[(225, 3), bool] */;
  %340 = reshape(%338, newshape=[15, 1, 5]) /* ty=Tensor[(15, 1, 5), bool] */;
  %341 = reshape(%339, newshape=[15, 9, 5]) /* ty=Tensor[(15, 9, 5), bool] */;
  %342 = @func_5762(%340, %341) /* ty=(Tensor[(15, 9, 5), bool], Tensor[(13, 10, 16), bool], Tensor[(2080), uint16]) */;
  %343 = cast(%var_6781, dtype="float32") /* ty=Tensor[(64, 16), float32] */;
  %344 = reshape(%343, newshape=[16, 16, 4]) /* ty=Tensor[(16, 16, 4), float32] */;
  %345 = @func_1621(%344) /* ty=(Tensor[(16, 16, 4), uint8], Tensor[(16, 16, 4), float32]) */;
  %346 = cast(%var_6784, dtype="int64") /* ty=Tensor[(80), int64] */;
  %347 = reshape(%346, newshape=[4, 10, 2]) /* ty=Tensor[(4, 10, 2), int64] */;
  %348 = @func_5247(%347) /* ty=(Tensor[(4, 10, 2), int64],) */;
  %349 = cast(%var_6788, dtype="uint16") /* ty=Tensor[(44), uint16] */;
  %350 = cast(meta[relay.Constant][37] /* ty=Tensor[(132), uint16] */, dtype="uint16") /* ty=Tensor[(132), uint16] */;
  %351 = cast(meta[relay.Constant][38] /* ty=Tensor[(1568), float64] */, dtype="float64") /* ty=Tensor[(1568), float64] */;
  %352 = reshape(%349, newshape=[4, 11, 1]) /* ty=Tensor[(4, 11, 1), uint16] */;
  %353 = reshape(%350, newshape=[4, 11, 3]) /* ty=Tensor[(4, 11, 3), uint16] */;
  %354 = reshape(%351, newshape=[1568]) /* ty=Tensor[(1568), float64] */;
  %355 = @func_6369(%352, %353, %354) /* ty=(Tensor[(4, 11, 3), uint16], Tensor[(14, 16, 7), bool], Tensor[(1568), float64]) */;
  %356 = @func_6287() /* ty=(Tensor[(11, 15, 8), float64], Tensor[(13, 10, 16), bool], Tensor[(2080), uint16]) */;
  %357 = %325.0;
  %358 = not_equal(%335, %336) /* ty=Tensor[(9, 3, 7), bool] */;
  %359 = sigmoid(%337) /* ty=Tensor[(7, 66), float32] */;
  %360 = %342.2;
  %361 = %345.1;
  %362 = %348.0;
  %363 = %355.0;
  %364 = %356.1;
  (%357, %358, %359, %360, meta[relay.Constant][35] /* ty=Tensor[(75), bool] */, meta[relay.Constant][36] /* ty=Tensor[(225, 3), bool] */, %361, %var_6781, %362, %var_6784, %363, %var_6788, meta[relay.Constant][37] /* ty=Tensor[(132), uint16] */, meta[relay.Constant][38] /* ty=Tensor[(1568), float64] */, %364)
}

def @func_6818(%var_6815: Tensor[(64, 16), float32], %var_6816: Tensor[(80), int64], %var_6817: Tensor[(44), uint16]) -> (Tensor[(7, 6, 11), bool], Tensor[(9, 3, 7), bool], Tensor[(7, 66), float32], Tensor[(2080), uint16], Tensor[(75), bool], Tensor[(225, 3), bool], Tensor[(16, 16, 4), float32], Tensor[(64, 16), float32], Tensor[(4, 10, 2), int64], Tensor[(80), int64], Tensor[(4, 11, 3), uint16], Tensor[(44), uint16], Tensor[(132), uint16], Tensor[(1568), float64], Tensor[(13, 10, 16), bool]) {
  @func_6813(%var_6815, %var_6816, %var_6817) /* ty=(Tensor[(7, 6, 11), bool], Tensor[(9, 3, 7), bool], Tensor[(7, 66), float32], Tensor[(2080), uint16], Tensor[(75), bool], Tensor[(225, 3), bool], Tensor[(16, 16, 4), float32], Tensor[(64, 16), float32], Tensor[(4, 10, 2), int64], Tensor[(80), int64], Tensor[(4, 11, 3), uint16], Tensor[(44), uint16], Tensor[(132), uint16], Tensor[(1568), float64], Tensor[(13, 10, 16), bool]) */
}

def @func_10353() -> (Tensor[(11, 15, 8), float64],) {
  %367 = fn () -> (Tensor[(11, 15, 8), float64],) {
    %365 = @func_7068() /* ty=(Tensor[(11, 15, 8), float64],) */;
    %366 = %365.0;
    (%366,)
  };
  %367() /* ty=(Tensor[(11, 15, 8), float64],) */
}

def @func_1385(%var_1383: Tensor[(10, 16, 14), int16], %var_1384: Tensor[(10, 16, 14), int16]) -> Tensor[(10, 16, 14), bool] {
  @func_1381(%var_1383, %var_1384) /* ty=Tensor[(10, 16, 14), bool] */
}

def @func_9617(%var_9614: Tensor[(220, 12), int16], %var_9615: Tensor[(1920), int32], %var_9616: Tensor[(8, 260), uint16]) -> (Tensor[(220, 12), int16], Tensor[(5, 11, 9), uint64], Tensor[(495), uint64], Tensor[(650), float64], Tensor[(1920), int32], Tensor[(8, 260), uint16], Tensor[(13, 10, 16), float32]) {
  @func_9612(%var_9614, %var_9615, %var_9616) /* ty=(Tensor[(220, 12), int16], Tensor[(5, 11, 9), uint64], Tensor[(495), uint64], Tensor[(650), float64], Tensor[(1920), int32], Tensor[(8, 260), uint16], Tensor[(13, 10, 16), float32]) */
}

def @func_7811(%var_7783: Tensor[(12, 5, 5), int32], %var_7784: Tensor[(12, 5, 5), int32], %var_7807: Tensor[(1920), int32]) -> (Tensor[(12, 5, 5), int32], Tensor[(9, 4, 7), float32], Tensor[(252), float32], Tensor[(360, 1), float32], Tensor[(780), int32], Tensor[(1920), int32]) {
  %368 = cast(%var_7784, dtype="int32") /* ty=Tensor[(12, 5, 5), int32] */;
  %369 = shape_of(%var_7783, dtype="int32") /* ty=Tensor[(3), int32] */;
  %370 = cast(%var_7783, dtype="int32") /* ty=Tensor[(12, 5, 5), int32] */;
  %371 = dyn.reshape(%368, %369, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %372 = cast(meta[relay.Constant][39] /* ty=Tensor[(252), float32] */, dtype="float32") /* ty=Tensor[(252), float32] */;
  %373 = reshape(%372, newshape=[9, 4, 7]) /* ty=Tensor[(9, 4, 7), float32] */;
  %374 = cast(meta[relay.Constant][40] /* ty=Tensor[(780), int32] */, dtype="int32") /* ty=Tensor[(780), int32] */;
  %375 = cast(%var_7807, dtype="int32") /* ty=Tensor[(1920), int32] */;
  %376 = reshape(%374, newshape=[5, 12, 13]) /* ty=Tensor[(5, 12, 13), int32] */;
  %377 = reshape(%375, newshape=[1920]) /* ty=Tensor[(1920), int32] */;
  %378 = @func_5503(%376, %377) /* ty=(Tensor[(5, 12, 13), int32], Tensor[(8, 8, 6), float64], Tensor[(48, 8), float64], Tensor[(616), bool], Tensor[(1920), int32], Tensor[(12, 14, 15), bool], Tensor[(2520), bool], Tensor[(6, 5, 12), float64], Tensor[(360, 1), float32], Tensor[(5, 12, 13), bool]) */;
  %379 = subtract(%370, %371) /* ty=Tensor[(12, 5, 5), int32] */;
  %380 = @func_4331(%373) /* ty=Tensor[(9, 4, 7), float32] */;
  %381 = %378.8;
  (%379, %380, meta[relay.Constant][39] /* ty=Tensor[(252), float32] */, %381, meta[relay.Constant][40] /* ty=Tensor[(780), int32] */, %var_7807)
}

def @func_67(%var_65: Tensor[(14, 16, 7), float64]) -> (Tensor[(14, 16, 7), bool],) {
  @func_64(%var_65) /* ty=(Tensor[(14, 16, 7), bool],) */
}

def @func_8850(%var_8848: Tensor[(104, 20), uint16]) -> (Tensor[(?, 1568), uint8], Tensor[(13, 10, 16), bool], Tensor[(104, 20), uint16]) {
  @func_8847(%var_8848) /* ty=(Tensor[(?, 1568), uint8], Tensor[(13, 10, 16), bool], Tensor[(104, 20), uint16]) */
}

def @func_10580(%var_10537: Tensor[(2, 10, 2), float32]) -> (Tensor[(2, 10, 2), float32], Tensor[(11, 15, 8), float64]) {
  %382 = cast(%var_10537, dtype="float32") /* ty=Tensor[(2, 10, 2), float32] */;
  %383 = tan(%382) /* ty=Tensor[(2, 10, 2), float32] */;
  %384 = @func_8087() /* ty=Tensor[(11, 15, 8), float64] */;
  (%383, %384)
}

def @func_10096() -> Tensor[(13, 10, 16), bool] {
  @func_10094() /* ty=Tensor[(13, 10, 16), bool] */
}

def @func_5977(%var_5975: Tensor[(15, 12, 12), int64], %var_5976: Tensor[(15, 12, 12), int64]) -> Tensor[(15, 12, 12), float32] {
  @func_5973(%var_5975, %var_5976) /* ty=Tensor[(15, 12, 12), float32] */
}

def @func_10405() -> (Tensor[(7, 15, 9), bool],) {
  %385 = @func_9803() /* ty=(Tensor[(7, 15, 9), float32], Tensor[(7, 15, 9), bool]) */;
  %386 = %385.1;
  (%386,)
}

def @func_7886() -> (Tensor[(11, 15, 8), float64],) {
  %389 = fn () -> (Tensor[(11, 15, 8), float64],) {
    %387 = @func_6329() /* ty=(Tensor[(11, 15, 8), float64],) */;
    %388 = %387.0;
    (%388,)
  };
  %389() /* ty=(Tensor[(11, 15, 8), float64],) */
}

def @func_6432(%var_6430: Tensor[(11, 15, 8), float64]) -> (Tensor[(11, 15, 8), bool],) {
  @func_6429(%var_6430) /* ty=(Tensor[(11, 15, 8), bool],) */
}

def @func_4333(%var_4332: Tensor[(9, 4, 7), float32]) -> Tensor[(9, 4, 7), float32] {
  %393 = fn (%var_4299: Tensor[(9, 4, 7), float32]) -> Tensor[(9, 4, 7), float32] {
    %390 = cast(%var_4299, dtype="float32") /* ty=Tensor[(9, 4, 7), float32] */;
    %391 = exp(%390) /* ty=Tensor[(9, 4, 7), float32] */;
    %392 = cast(%391, dtype="float32") /* ty=Tensor[(9, 4, 7), float32] */;
    sigmoid(%392) /* ty=Tensor[(9, 4, 7), float32] */
  };
  %393(%var_4332) /* ty=Tensor[(9, 4, 7), float32] */
}

def @func_7816(%var_7813: Tensor[(12, 5, 5), int32], %var_7814: Tensor[(12, 5, 5), int32], %var_7815: Tensor[(1920), int32]) -> (Tensor[(12, 5, 5), int32], Tensor[(9, 4, 7), float32], Tensor[(252), float32], Tensor[(360, 1), float32], Tensor[(780), int32], Tensor[(1920), int32]) {
  @func_7811(%var_7813, %var_7814, %var_7815) /* ty=(Tensor[(12, 5, 5), int32], Tensor[(9, 4, 7), float32], Tensor[(252), float32], Tensor[(360, 1), float32], Tensor[(780), int32], Tensor[(1920), int32]) */
}

def @func_9899(%var_9882: Tensor[(16, 12, 5), bool]) -> (Tensor[(16, 12, 5), bool],) {
  %394 = cast(meta[relay.Constant][41] /* ty=Tensor[(16, 12, 5), bool] */, dtype="bool") /* ty=Tensor[(16, 12, 5), bool] */;
  %395 = shape_of(%var_9882, dtype="int32") /* ty=Tensor[(3), int32] */;
  %396 = cast(%var_9882, dtype="bool") /* ty=Tensor[(16, 12, 5), bool] */;
  %397 = dyn.reshape(%394, %395, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %398 = logical_and(%396, %397) /* ty=Tensor[(16, 12, 5), bool] */;
  (%398,)
}

def @func_6654(%var_6653: Tensor[(11, 15, 8), float64]) -> (Tensor[(11, 15, 8), float32],) {
  %405 = fn (%var_6643: Tensor[(11, 15, 8), float64]) -> (Tensor[(11, 15, 8), float32],) {
    %399 = @func_6297() /* ty=Tensor[(11, 15, 8), float64] */;
    %400 = cast(%var_6643, dtype="float32") /* ty=Tensor[(11, 15, 8), float32] */;
    %401 = shape_of(%399, dtype="int32") /* ty=Tensor[(3), int32] */;
    %402 = cast(%399, dtype="float32") /* ty=Tensor[(11, 15, 8), float32] */;
    %403 = dyn.reshape(%400, %401, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %404 = minimum(%402, %403) /* ty=Tensor[(11, 15, 8), float32] */;
    (%404,)
  };
  %405(%var_6653) /* ty=(Tensor[(11, 15, 8), float32],) */
}

def @func_8002() -> (Tensor[(11, 15, 8), float64],) {
  @func_8000() /* ty=(Tensor[(11, 15, 8), float64],) */
}

def @func_1119(%var_1116: Tensor[(8, 8, 6), float64], %var_1117: Tensor[(616), bool], %var_1118: Tensor[(1920), int32]) -> (Tensor[(8, 8, 6), float64], Tensor[(8, 11, 7), bool], Tensor[(616), bool], Tensor[(195), uint64], Tensor[(1920), int32], Tensor[(231, 2), uint8]) {
  %419 = fn (%var_1098: Tensor[(8, 8, 6), float64], %var_1102: Tensor[(616), bool], %var_1112: Tensor[(1920), int32]) -> (Tensor[(8, 8, 6), float64], Tensor[(8, 11, 7), bool], Tensor[(616), bool], Tensor[(195), uint64], Tensor[(1920), int32], Tensor[(231, 2), uint8]) {
    %406 = cast(%var_1098, dtype="float64") /* ty=Tensor[(8, 8, 6), float64] */;
    %407 = cast(%var_1102, dtype="bool") /* ty=Tensor[(616), bool] */;
    %408 = cast(%var_1102, dtype="bool") /* ty=Tensor[(616), bool] */;
    %409 = reshape(%407, newshape=[8, 11, 7]) /* ty=Tensor[(8, 11, 7), bool] */;
    %410 = reshape(%408, newshape=[8, 11, 7]) /* ty=Tensor[(8, 11, 7), bool] */;
    %411 = cast(%var_1112, dtype="int32") /* ty=Tensor[(1920), int32] */;
    %412 = cast(meta[relay.Constant][42] /* ty=Tensor[(231, 2), uint8] */, dtype="uint8") /* ty=Tensor[(231, 2), uint8] */;
    %413 = reshape(%411, newshape=[10, 12, 16]) /* ty=Tensor[(10, 12, 16), int32] */;
    %414 = reshape(%412, newshape=[462]) /* ty=Tensor[(462), uint8] */;
    %415 = @func_618(%413, %414) /* ty=(Tensor[(13, 15, 1), uint64], Tensor[(195), uint64], Tensor[(10, 12, 16), bool], Tensor[(14, 16, 7), float32], Tensor[(462), uint8], Tensor[(10, 12, 16), float64]) */;
    %416 = sinh(%406) /* ty=Tensor[(8, 8, 6), float64] */;
    %417 = @func_1082(%409, %410) /* ty=Tensor[(8, 11, 7), bool] */;
    %418 = %415.1;
    (%416, %417, %var_1102, %418, %var_1112, meta[relay.Constant][42] /* ty=Tensor[(231, 2), uint8] */)
  };
  %419(%var_1116, %var_1117, %var_1118) /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 11, 7), bool], Tensor[(616), bool], Tensor[(195), uint64], Tensor[(1920), int32], Tensor[(231, 2), uint8]) */
}

def @func_8899() -> (Tensor[(11, 15, 8), float64],) {
  %422 = fn () -> (Tensor[(11, 15, 8), float64],) {
    %420 = @func_7019() /* ty=(Tensor[(11, 15, 8), float64],) */;
    %421 = %420.0;
    (%421,)
  };
  %422() /* ty=(Tensor[(11, 15, 8), float64],) */
}

def @func_244(%var_242: Tensor[(13, 15, 1), uint64]) -> (Tensor[(13, 15, 1), uint64], Tensor[(1568), float64], Tensor[(231, 2), uint8]) {
  @func_241(%var_242) /* ty=(Tensor[(13, 15, 1), uint64], Tensor[(1568), float64], Tensor[(231, 2), uint8]) */
}

def @func_8357() -> (Tensor[(11, 15, 8), float64],) {
  %425 = fn () -> (Tensor[(11, 15, 8), float64],) {
    %423 = @func_8336() /* ty=(Tensor[(11, 15, 8), float64], Tensor[(220), int16], Tensor[(30), int16], Tensor[(6, 7, 10), float32]) */;
    %424 = %423.0;
    (%424,)
  };
  %425() /* ty=(Tensor[(11, 15, 8), float64],) */
}

def @func_6135(%var_6133: Tensor[(11, 15, 8), float64], %var_6134: Tensor[(936), float64]) -> (Tensor[(11, 15, 8), int32], Tensor[(9, 13, 8), int32], Tensor[(936), float64], Tensor[(11, 15, 8), float64]) {
  @func_6131(%var_6133, %var_6134) /* ty=(Tensor[(11, 15, 8), int32], Tensor[(9, 13, 8), int32], Tensor[(936), float64], Tensor[(11, 15, 8), float64]) */
}

def @func_6228(%var_6227: Tensor[(11, 15, 8), float64]) -> (Tensor[(11, 15, 8), float64], Tensor[(11, 15, 8), int16]) {
  %434 = fn (%var_6215: Tensor[(11, 15, 8), float64]) -> (Tensor[(11, 15, 8), float64], Tensor[(11, 15, 8), int16]) {
    %426 = @func_6041() /* ty=(Tensor[(11, 15, 8), float64],) */;
    %427 = %426.0;
    %428 = cast(%var_6215, dtype="int16") /* ty=Tensor[(11, 15, 8), int16] */;
    %429 = shape_of(%427, dtype="int32") /* ty=Tensor[(3), int32] */;
    %430 = cast(%427, dtype="int16") /* ty=Tensor[(11, 15, 8), int16] */;
    %431 = dyn.reshape(%428, %429, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %432 = @func_6185() /* ty=Tensor[(11, 15, 8), float64] */;
    %433 = logical_xor(%430, %431) /* ty=Tensor[(11, 15, 8), int16] */;
    (%432, %433)
  };
  %434(%var_6227) /* ty=(Tensor[(11, 15, 8), float64], Tensor[(11, 15, 8), int16]) */
}

def @func_6706(%var_6703: Tensor[(5, 11, 9), uint64], %var_6704: Tensor[(1, 650), float64], %var_6705: Tensor[(8, 240), int32]) -> (Tensor[(5, 11, 9), uint64], Tensor[(462), uint8], Tensor[(1, 650), float64], Tensor[(462), uint8], Tensor[(8, 240), float32]) {
  %455 = fn (%var_6674: Tensor[(5, 11, 9), uint64], %var_6689: Tensor[(1, 650), float64], %var_6697: Tensor[(8, 240), int32]) -> (Tensor[(5, 11, 9), uint64], Tensor[(462), uint8], Tensor[(1, 650), float64], Tensor[(462), uint8], Tensor[(8, 240), float32]) {
    %435 = cast(%var_6674, dtype="uint64") /* ty=Tensor[(5, 11, 9), uint64] */;
    %436 = shape_of(meta[relay.Constant][43] /* ty=Tensor[(5, 11, 9), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %437 = cast(meta[relay.Constant][43] /* ty=Tensor[(5, 11, 9), uint64] */, dtype="uint64") /* ty=Tensor[(5, 11, 9), uint64] */;
    %438 = dyn.reshape(%435, %436, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %439 = cast(%var_6689, dtype="float64") /* ty=Tensor[(1, 650), float64] */;
    %440 = cast(%var_6689, dtype="float64") /* ty=Tensor[(1, 650), float64] */;
    %441 = cast(meta[relay.Constant][44] /* ty=Tensor[(8, 240), int32] */, dtype="int32") /* ty=Tensor[(8, 240), int32] */;
    %442 = cast(meta[relay.Constant][45] /* ty=Tensor[(462), uint8] */, dtype="uint8") /* ty=Tensor[(462), uint8] */;
    %443 = reshape(%439, newshape=[10, 13, 5]) /* ty=Tensor[(10, 13, 5), float64] */;
    %444 = reshape(%440, newshape=[10, 13, 5]) /* ty=Tensor[(10, 13, 5), float64] */;
    %445 = reshape(%441, newshape=[1920]) /* ty=Tensor[(1920), int32] */;
    %446 = reshape(%442, newshape=[462]) /* ty=Tensor[(462), uint8] */;
    %447 = @func_2334(%443, %444, %445, %446) /* ty=(Tensor[(10, 13, 5), float64], Tensor[(14, 16, 7), float32], Tensor[(1920), int32], Tensor[(462), uint8]) */;
    %448 = cast(%var_6697, dtype="float32") /* ty=Tensor[(8, 240), float32] */;
    %449 = shape_of(meta[relay.Constant][44] /* ty=Tensor[(8, 240), int32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %450 = cast(meta[relay.Constant][44] /* ty=Tensor[(8, 240), int32] */, dtype="float32") /* ty=Tensor[(8, 240), float32] */;
    %451 = dyn.reshape(%448, %449, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %452 = minimum(%437, %438) /* ty=Tensor[(5, 11, 9), uint64] */;
    %453 = %447.3;
    %454 = multiply(%450, %451) /* ty=Tensor[(8, 240), float32] */;
    (%452, %453, %var_6689, meta[relay.Constant][45] /* ty=Tensor[(462), uint8] */, %454)
  };
  %455(%var_6703, %var_6704, %var_6705) /* ty=(Tensor[(5, 11, 9), uint64], Tensor[(462), uint8], Tensor[(1, 650), float64], Tensor[(462), uint8], Tensor[(8, 240), float32]) */
}

def @func_8252(%var_8251: uint16) -> Tensor[(10, 14, 12), float64] {
  %463 = fn (%var_8235: uint16) -> Tensor[(10, 14, 12), float64] {
    %456 = cast(%var_8235, dtype="bool") /* ty=bool */;
    %457 = cast(meta[relay.Constant][46] /* ty=Tensor[(10, 14, 12), uint16] */, dtype="bool") /* ty=Tensor[(10, 14, 12), bool] */;
    %458 = not_equal(%456, %457) /* ty=Tensor[(10, 14, 12), bool] */;
    %459 = cast(meta[relay.Constant][47] /* ty=Tensor[(10, 14, 12), bool] */, dtype="float64") /* ty=Tensor[(10, 14, 12), float64] */;
    %460 = shape_of(%458, dtype="int32") /* ty=Tensor[(3), int32] */;
    %461 = cast(%458, dtype="float64") /* ty=Tensor[(10, 14, 12), float64] */;
    %462 = dyn.reshape(%459, %460, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    divide(%461, %462) /* ty=Tensor[(10, 14, 12), float64] */
  };
  %463(%var_8251) /* ty=Tensor[(10, 14, 12), float64] */
}

def @func_7068() -> (Tensor[(11, 15, 8), float64],) {
  %464 = @func_6185() /* ty=Tensor[(11, 15, 8), float64] */;
  (%464,)
}

def @func_7021() -> (Tensor[(11, 15, 8), float64],) {
  @func_7019() /* ty=(Tensor[(11, 15, 8), float64],) */
}

def @func_9780() -> Tensor[(11, 15, 8), float64] {
  %465 = @func_9393() /* ty=(Tensor[(11, 15, 8), float64], Tensor[(11, 15, 8), float64]) */;
  %465.0
}

def @func_7019() -> (Tensor[(11, 15, 8), float64],) {
  %466 = @func_6185() /* ty=Tensor[(11, 15, 8), float64] */;
  (%466,)
}

def @func_8087() -> Tensor[(11, 15, 8), float64] {
  %467 = @func_7019() /* ty=(Tensor[(11, 15, 8), float64],) */;
  %467.0
}

def @func_2340(%var_2336: Tensor[(10, 13, 5), float64], %var_2337: Tensor[(10, 13, 5), float64], %var_2338: Tensor[(1920), int32], %var_2339: Tensor[(462), uint8]) -> (Tensor[(10, 13, 5), float64], Tensor[(14, 16, 7), float32], Tensor[(1920), int32], Tensor[(462), uint8]) {
  @func_2334(%var_2336, %var_2337, %var_2338, %var_2339) /* ty=(Tensor[(10, 13, 5), float64], Tensor[(14, 16, 7), float32], Tensor[(1920), int32], Tensor[(462), uint8]) */
}

def @func_10507() -> Tensor[(6, 7, 10), float64] {
  %468 = fn () -> Tensor[(6, 7, 10), float64] {
    @func_7309() /* ty=Tensor[(6, 7, 10), float64] */
  };
  %468() /* ty=Tensor[(6, 7, 10), float64] */
}

def @func_8530(%var_8527: Tensor[(720), int16], %var_8528: Tensor[(1920), int32], %var_8529: Tensor[(11, 15, 8), float64]) -> (Tensor[(2520), bool], Tensor[(720), int16], Tensor[(1920), int32], Tensor[(11, 15, 8), float32]) {
  @func_8525(%var_8527, %var_8528, %var_8529) /* ty=(Tensor[(2520), bool], Tensor[(720), int16], Tensor[(1920), int32], Tensor[(11, 15, 8), float32]) */
}

def @func_6042() -> (Tensor[(11, 15, 8), float64],) {
  %471 = fn () -> (Tensor[(11, 15, 8), float64],) {
    %469 = cast(meta[relay.Constant][48] /* ty=Tensor[(11, 15, 8), float64] */, dtype="float64") /* ty=Tensor[(11, 15, 8), float64] */;
    %470 = log(%469) /* ty=Tensor[(11, 15, 8), float64] */;
    (%470,)
  };
  %471() /* ty=(Tensor[(11, 15, 8), float64],) */
}

def @func_7407(%var_7406: Tensor[(936), float64]) -> (Tensor[(11, 15, 8), float64], Tensor[(9, 13, 8), int32], Tensor[(936), float64]) {
  %478 = fn (%var_7392: Tensor[(936), float64]) -> (Tensor[(11, 15, 8), float64], Tensor[(9, 13, 8), int32], Tensor[(936), float64]) {
    %472 = @func_7019() /* ty=(Tensor[(11, 15, 8), float64],) */;
    %473 = cast(%var_7392, dtype="float64") /* ty=Tensor[(936), float64] */;
    %474 = reshape(%473, newshape=[9, 13, 8]) /* ty=Tensor[(9, 13, 8), float64] */;
    %475 = @func_4559(%474) /* ty=(Tensor[(9, 13, 8), int32],) */;
    %476 = %472.0;
    %477 = %475.0;
    (%476, %477, %var_7392)
  };
  %478(%var_7406) /* ty=(Tensor[(11, 15, 8), float64], Tensor[(9, 13, 8), int32], Tensor[(936), float64]) */
}

def @func_8462(%var_8459: Tensor[(6, 7, 10), float64], %var_8460: Tensor[(2, 660), float64], %var_8461: Tensor[(462), uint8]) -> (Tensor[(6, 7, 10), uint64], Tensor[(9, 13, 8), int32], Tensor[(2, 660), float64], Tensor[(12, 78), float64], Tensor[(10, 12, 16), bool], Tensor[(1920), int32], Tensor[(462), uint8]) {
  %497 = fn (%var_8440: Tensor[(6, 7, 10), float64], %var_8446: Tensor[(2, 660), float64], %var_8456: Tensor[(462), uint8]) -> (Tensor[(6, 7, 10), uint64], Tensor[(9, 13, 8), int32], Tensor[(2, 660), float64], Tensor[(12, 78), float64], Tensor[(10, 12, 16), bool], Tensor[(1920), int32], Tensor[(462), uint8]) {
    %479 = @func_7309() /* ty=Tensor[(6, 7, 10), float64] */;
    %480 = cast(%var_8440, dtype="uint64") /* ty=Tensor[(6, 7, 10), uint64] */;
    %481 = shape_of(%479, dtype="int32") /* ty=Tensor[(3), int32] */;
    %482 = cast(%479, dtype="uint64") /* ty=Tensor[(6, 7, 10), uint64] */;
    %483 = dyn.reshape(%480, %481, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %484 = cast(%var_8446, dtype="float64") /* ty=Tensor[(2, 660), float64] */;
    %485 = cast(meta[relay.Constant][49] /* ty=Tensor[(12, 78), float64] */, dtype="float64") /* ty=Tensor[(12, 78), float64] */;
    %486 = reshape(%484, newshape=[11, 15, 8]) /* ty=Tensor[(11, 15, 8), float64] */;
    %487 = reshape(%485, newshape=[936]) /* ty=Tensor[(936), float64] */;
    %488 = @func_6475(%486, %487) /* ty=(Tensor[(11, 15, 8), bool], Tensor[(9, 13, 8), int32], Tensor[(936), float64]) */;
    %489 = cast(meta[relay.Constant][50] /* ty=Tensor[(1920), int32] */, dtype="int32") /* ty=Tensor[(1920), int32] */;
    %490 = cast(%var_8456, dtype="uint8") /* ty=Tensor[(462), uint8] */;
    %491 = reshape(%489, newshape=[10, 12, 16]) /* ty=Tensor[(10, 12, 16), int32] */;
    %492 = reshape(%490, newshape=[462]) /* ty=Tensor[(462), uint8] */;
    %493 = @func_618(%491, %492) /* ty=(Tensor[(13, 15, 1), uint64], Tensor[(195), uint64], Tensor[(10, 12, 16), bool], Tensor[(14, 16, 7), float32], Tensor[(462), uint8], Tensor[(10, 12, 16), float64]) */;
    %494 = add(%482, %483) /* ty=Tensor[(6, 7, 10), uint64] */;
    %495 = %488.1;
    %496 = %493.2;
    (%494, %495, %var_8446, meta[relay.Constant][49] /* ty=Tensor[(12, 78), float64] */, %496, meta[relay.Constant][50] /* ty=Tensor[(1920), int32] */, %var_8456)
  };
  %497(%var_8459, %var_8460, %var_8461) /* ty=(Tensor[(6, 7, 10), uint64], Tensor[(9, 13, 8), int32], Tensor[(2, 660), float64], Tensor[(12, 78), float64], Tensor[(10, 12, 16), bool], Tensor[(1920), int32], Tensor[(462), uint8]) */
}

def @func_10407() -> (Tensor[(7, 15, 9), bool],) {
  @func_10405() /* ty=(Tensor[(7, 15, 9), bool],) */
}

def @func_1015(%var_1012: Tensor[(2, 10, 11), int16], %var_1013: Tensor[(2, 10, 11), int16], %var_1014: Tensor[(462), uint8]) -> (Tensor[(2, 10, 11), int16], Tensor[(14, 16, 7), bool], Tensor[(7, 6, 11), bool], Tensor[(462), uint8], Tensor[(1568), bool], Tensor[(14, 16, 7), bool]) {
  @func_1010(%var_1012, %var_1013, %var_1014) /* ty=(Tensor[(2, 10, 11), int16], Tensor[(14, 16, 7), bool], Tensor[(7, 6, 11), bool], Tensor[(462), uint8], Tensor[(1568), bool], Tensor[(14, 16, 7), bool]) */
}

def @func_1621(%var_1592: Tensor[(16, 16, 4), float32]) -> (Tensor[(16, 16, 4), uint8], Tensor[(16, 16, 4), float32]) {
  %498 = cast(%var_1592, dtype="float32") /* ty=Tensor[(16, 16, 4), float32] */;
  %499 = cosh(%498) /* ty=Tensor[(16, 16, 4), float32] */;
  %500 = cast(%var_1592, dtype="bool") /* ty=Tensor[(16, 16, 4), bool] */;
  %501 = shape_of(%499, dtype="int32") /* ty=Tensor[(3), int32] */;
  %502 = cast(%499, dtype="bool") /* ty=Tensor[(16, 16, 4), bool] */;
  %503 = dyn.reshape(%500, %501, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %504 = greater(%502, %503) /* ty=Tensor[(16, 16, 4), bool] */;
  %505 = cast(%504, dtype="float64") /* ty=Tensor[(16, 16, 4), float64] */;
  %506 = cos(%505) /* ty=Tensor[(16, 16, 4), float64] */;
  %507 = cast(%504, dtype="uint8") /* ty=Tensor[(16, 16, 4), uint8] */;
  %508 = shape_of(%506, dtype="int32") /* ty=Tensor[(3), int32] */;
  %509 = cast(%506, dtype="uint8") /* ty=Tensor[(16, 16, 4), uint8] */;
  %510 = dyn.reshape(%507, %508, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %511 = cast(%506, dtype="float32") /* ty=Tensor[(16, 16, 4), float32] */;
  %512 = shape_of(%504, dtype="int32") /* ty=Tensor[(3), int32] */;
  %513 = cast(%504, dtype="float32") /* ty=Tensor[(16, 16, 4), float32] */;
  %514 = dyn.reshape(%511, %512, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %515 = multiply(%509, %510) /* ty=Tensor[(16, 16, 4), uint8] */;
  %516 = maximum(%513, %514) /* ty=Tensor[(16, 16, 4), float32] */;
  (%515, %516)
}

def @func_7341() -> Tensor[(11, 15, 8), float64] {
  %517 = fn () -> Tensor[(11, 15, 8), float64] {
    @func_6185() /* ty=Tensor[(11, 15, 8), float64] */
  };
  %517() /* ty=Tensor[(11, 15, 8), float64] */
}

def @func_9393() -> (Tensor[(11, 15, 8), float64], Tensor[(11, 15, 8), float64]) {
  %518 = @func_8356() /* ty=(Tensor[(11, 15, 8), float64],) */;
  %519 = @func_8757() /* ty=Tensor[(11, 15, 8), float64] */;
  %520 = %518.0;
  (%519, %520)
}

def @func_5942(%var_5938: Tensor[(14, 2, 16), uint8], %var_5939: Tensor[(360), int16], %var_5940: Tensor[(616), bool], %var_5941: Tensor[(220), int16]) -> (Tensor[(14, 2, 16), uint8], Tensor[(14, 16, 7), bool], Tensor[(30), int16], Tensor[(360), int16], Tensor[(616), bool], Tensor[(220), int16], Tensor[(462), uint8]) {
  %538 = fn (%var_5922: Tensor[(14, 2, 16), uint8], %var_5929: Tensor[(360), int16], %var_5930: Tensor[(616), bool], %var_5931: Tensor[(220), int16]) -> (Tensor[(14, 2, 16), uint8], Tensor[(14, 16, 7), bool], Tensor[(30), int16], Tensor[(360), int16], Tensor[(616), bool], Tensor[(220), int16], Tensor[(462), uint8]) {
    %521 = cast(meta[relay.Constant][51] /* ty=Tensor[(14, 2, 16), uint8] */, dtype="uint8") /* ty=Tensor[(14, 2, 16), uint8] */;
    %522 = shape_of(%var_5922, dtype="int32") /* ty=Tensor[(3), int32] */;
    %523 = cast(%var_5922, dtype="uint8") /* ty=Tensor[(14, 2, 16), uint8] */;
    %524 = dyn.reshape(%521, %522, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %525 = cast(meta[relay.Constant][52] /* ty=Tensor[(30), int16] */, dtype="int16") /* ty=Tensor[(30), int16] */;
    %526 = cast(%var_5929, dtype="int16") /* ty=Tensor[(360), int16] */;
    %527 = cast(%var_5930, dtype="bool") /* ty=Tensor[(616), bool] */;
    %528 = cast(%var_5931, dtype="int16") /* ty=Tensor[(220), int16] */;
    %529 = cast(meta[relay.Constant][53] /* ty=Tensor[(462), uint8] */, dtype="uint8") /* ty=Tensor[(462), uint8] */;
    %530 = reshape(%525, newshape=[10, 1, 3]) /* ty=Tensor[(10, 1, 3), int16] */;
    %531 = reshape(%526, newshape=[10, 12, 3]) /* ty=Tensor[(10, 12, 3), int16] */;
    %532 = reshape(%527, newshape=[616]) /* ty=Tensor[(616), bool] */;
    %533 = reshape(%528, newshape=[220]) /* ty=Tensor[(220), int16] */;
    %534 = reshape(%529, newshape=[7, 66]) /* ty=Tensor[(7, 66), uint8] */;
    %535 = @func_1293(%530, %531, %532, %533, %534) /* ty=(Tensor[(10, 12, 3), bool], Tensor[(8, 11, 7), bool], Tensor[(616), bool], Tensor[(14, 16, 7), bool], Tensor[(7, 66), uint8], Tensor[(220), float64], Tensor[(14, 16, 7), bool], Tensor[(14, 16, 7), bool]) */;
    %536 = bitwise_and(%523, %524) /* ty=Tensor[(14, 2, 16), uint8] */;
    %537 = %535.3;
    (%536, %537, meta[relay.Constant][52] /* ty=Tensor[(30), int16] */, %var_5929, %var_5930, %var_5931, meta[relay.Constant][53] /* ty=Tensor[(462), uint8] */)
  };
  %538(%var_5938, %var_5939, %var_5940, %var_5941) /* ty=(Tensor[(14, 2, 16), uint8], Tensor[(14, 16, 7), bool], Tensor[(30), int16], Tensor[(360), int16], Tensor[(616), bool], Tensor[(220), int16], Tensor[(462), uint8]) */
}

def @func_10011() -> Tensor[(13, 10, 16), bool] {
  @func_10009() /* ty=Tensor[(13, 10, 16), bool] */
}

def @func_4392(%var_4389: Tensor[(2, 1, 3), float32], %var_4390: Tensor[(630, 4), bool], %var_4391: Tensor[(616), bool]) -> (Tensor[(2, 1, 3), float32], Tensor[(12, 14, 15), bool], Tensor[(630, 4), bool], Tensor[(384), float64], Tensor[(616), bool], Tensor[(1568), float64], Tensor[(13, 15), uint64]) {
  @func_4387(%var_4389, %var_4390, %var_4391) /* ty=(Tensor[(2, 1, 3), float32], Tensor[(12, 14, 15), bool], Tensor[(630, 4), bool], Tensor[(384), float64], Tensor[(616), bool], Tensor[(1568), float64], Tensor[(13, 15), uint64]) */
}

def @func_3407(%var_3405: Tensor[(6, 5, 12), float32]) -> (Tensor[(6, 5, 12), float64], Tensor[(14, 16, 7), bool], Tensor[(462), uint8]) {
  @func_3404(%var_3405) /* ty=(Tensor[(6, 5, 12), float64], Tensor[(14, 16, 7), bool], Tensor[(462), uint8]) */
}

def @func_4561(%var_4560: Tensor[(9, 13, 8), float64]) -> (Tensor[(9, 13, 8), int32],) {
  %546 = fn (%var_4545: Tensor[(9, 13, 8), float64]) -> (Tensor[(9, 13, 8), int32],) {
    %539 = cast(%var_4545, dtype="float64") /* ty=Tensor[(9, 13, 8), float64] */;
    %540 = atan(%539) /* ty=Tensor[(9, 13, 8), float64] */;
    %541 = cast(%var_4545, dtype="int32") /* ty=Tensor[(9, 13, 8), int32] */;
    %542 = shape_of(%540, dtype="int32") /* ty=Tensor[(3), int32] */;
    %543 = cast(%540, dtype="int32") /* ty=Tensor[(9, 13, 8), int32] */;
    %544 = dyn.reshape(%541, %542, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %545 = subtract(%543, %544) /* ty=Tensor[(9, 13, 8), int32] */;
    (%545,)
  };
  %546(%var_4560) /* ty=(Tensor[(9, 13, 8), int32],) */
}

def @func_6373(%var_6370: Tensor[(4, 11, 1), uint16], %var_6371: Tensor[(4, 11, 3), uint16], %var_6372: Tensor[(1568), float64]) -> (Tensor[(4, 11, 3), uint16], Tensor[(14, 16, 7), bool], Tensor[(1568), float64]) {
  %554 = fn (%var_6355: Tensor[(4, 11, 1), uint16], %var_6356: Tensor[(4, 11, 3), uint16], %var_6367: Tensor[(1568), float64]) -> (Tensor[(4, 11, 3), uint16], Tensor[(14, 16, 7), bool], Tensor[(1568), float64]) {
    %547 = cast(%var_6355, dtype="uint16") /* ty=Tensor[(4, 11, 1), uint16] */;
    %548 = cast(%var_6356, dtype="uint16") /* ty=Tensor[(4, 11, 3), uint16] */;
    %549 = cast(%var_6367, dtype="float64") /* ty=Tensor[(1568), float64] */;
    %550 = reshape(%549, newshape=[14, 16, 7]) /* ty=Tensor[(14, 16, 7), float64] */;
    %551 = @func_64(%550) /* ty=(Tensor[(14, 16, 7), bool],) */;
    %552 = multiply(%547, %548) /* ty=Tensor[(4, 11, 3), uint16] */;
    %553 = %551.0;
    (%552, %553, %var_6367)
  };
  %554(%var_6370, %var_6371, %var_6372) /* ty=(Tensor[(4, 11, 3), uint16], Tensor[(14, 16, 7), bool], Tensor[(1568), float64]) */
}

def @func_10329() -> (Tensor[(11, 15, 8), float64],) {
  %557 = fn () -> (Tensor[(11, 15, 8), float64],) {
    %555 = @func_8356() /* ty=(Tensor[(11, 15, 8), float64],) */;
    %556 = %555.0;
    (%556,)
  };
  %557() /* ty=(Tensor[(11, 15, 8), float64],) */
}

def @func_2479(%var_2475: Tensor[(12, 14, 15), bool], %var_2476: Tensor[(12, 14, 15), bool], %var_2477: Tensor[(384), float64], %var_2478: Tensor[(616), bool]) -> (Tensor[(12, 14, 15), bool], Tensor[(12, 14, 15), float32], Tensor[(1920), int32], Tensor[(384), float64], Tensor[(616), bool], Tensor[(1920), int32]) {
  @func_2473(%var_2475, %var_2476, %var_2477, %var_2478) /* ty=(Tensor[(12, 14, 15), bool], Tensor[(12, 14, 15), float32], Tensor[(1920), int32], Tensor[(384), float64], Tensor[(616), bool], Tensor[(1920), int32]) */
}

def @func_2334(%var_2299: Tensor[(10, 13, 5), float64], %var_2300: Tensor[(10, 13, 5), float64], %var_2308: Tensor[(1920), int32], %var_2309: Tensor[(462), uint8]) -> (Tensor[(10, 13, 5), float64], Tensor[(14, 16, 7), float32], Tensor[(1920), int32], Tensor[(462), uint8]) {
  %558 = cast(%var_2300, dtype="float64") /* ty=Tensor[(10, 13, 5), float64] */;
  %559 = shape_of(%var_2299, dtype="int32") /* ty=Tensor[(3), int32] */;
  %560 = cast(%var_2299, dtype="float64") /* ty=Tensor[(10, 13, 5), float64] */;
  %561 = dyn.reshape(%558, %559, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %562 = cast(%var_2308, dtype="int32") /* ty=Tensor[(1920), int32] */;
  %563 = cast(%var_2309, dtype="uint8") /* ty=Tensor[(462), uint8] */;
  %564 = reshape(%562, newshape=[10, 12, 16]) /* ty=Tensor[(10, 12, 16), int32] */;
  %565 = reshape(%563, newshape=[462]) /* ty=Tensor[(462), uint8] */;
  %566 = @func_618(%564, %565) /* ty=(Tensor[(13, 15, 1), uint64], Tensor[(195), uint64], Tensor[(10, 12, 16), bool], Tensor[(14, 16, 7), float32], Tensor[(462), uint8], Tensor[(10, 12, 16), float64]) */;
  %567 = floor_divide(%560, %561) /* ty=Tensor[(10, 13, 5), float64] */;
  %568 = %566.3;
  (%567, %568, %var_2308, %var_2309)
}

def @func_9843() -> (Tensor[(11, 15, 8), float64],) {
  %571 = fn () -> (Tensor[(11, 15, 8), float64],) {
    %569 = @func_7885() /* ty=(Tensor[(11, 15, 8), float64],) */;
    %570 = %569.0;
    (%570,)
  };
  %571() /* ty=(Tensor[(11, 15, 8), float64],) */
}

def @func_6921(%var_6919: Tensor[(30), int16]) -> (Tensor[(11, 15, 8), bool], Tensor[(14, 16, 7), bool], Tensor[(30), int16], Tensor[(360), int16], Tensor[(616), bool], Tensor[(220), int16], Tensor[(1, 462), uint8]) {
  @func_6918(%var_6919) /* ty=(Tensor[(11, 15, 8), bool], Tensor[(14, 16, 7), bool], Tensor[(30), int16], Tensor[(360), int16], Tensor[(616), bool], Tensor[(220), int16], Tensor[(1, 462), uint8]) */
}

def @func_7193() -> (Tensor[(11, 15, 8), float64],) {
  %572 = @func_7068() /* ty=(Tensor[(11, 15, 8), float64],) */;
  %573 = %572.0;
  (%573,)
}

def @func_10468() -> (Tensor[(11, 15, 8), float32], Tensor[(11, 15, 8), float64]) {
  @func_10466() /* ty=(Tensor[(11, 15, 8), float32], Tensor[(11, 15, 8), float64]) */
}

def @func_1624(%var_1622: Tensor[(16, 16, 4), float32]) -> (Tensor[(16, 16, 4), uint8], Tensor[(16, 16, 4), float32]) {
  @func_1621(%var_1622) /* ty=(Tensor[(16, 16, 4), uint8], Tensor[(16, 16, 4), float32]) */
}

def @func_7309() -> Tensor[(6, 7, 10), float64] {
  %574 = cast(meta[relay.Constant][54] /* ty=Tensor[(6, 7, 10), float64] */, dtype="float64") /* ty=Tensor[(6, 7, 10), float64] */;
  log(%574) /* ty=Tensor[(6, 7, 10), float64] */
}

def @func_6565(%var_6564: Tensor[(5, 6, 5), bool]) -> (Tensor[(5, 6, 5), bool], Tensor[(5, 6, 5), uint8]) {
  %587 = fn (%var_6537: Tensor[(5, 6, 5), bool]) -> (Tensor[(5, 6, 5), bool], Tensor[(5, 6, 5), uint8]) {
    %575 = cast(%var_6537, dtype="bool") /* ty=Tensor[(5, 6, 5), bool] */;
    %576 = shape_of(meta[relay.Constant][55] /* ty=Tensor[(5, 6, 5), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %577 = cast(meta[relay.Constant][55] /* ty=Tensor[(5, 6, 5), bool] */, dtype="bool") /* ty=Tensor[(5, 6, 5), bool] */;
    %578 = dyn.reshape(%575, %576, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %579 = cast(meta[relay.Constant][55] /* ty=Tensor[(5, 6, 5), bool] */, dtype="float64") /* ty=Tensor[(5, 6, 5), float64] */;
    %580 = log2(%579) /* ty=Tensor[(5, 6, 5), float64] */;
    %581 = cast(meta[relay.Constant][55] /* ty=Tensor[(5, 6, 5), bool] */, dtype="uint8") /* ty=Tensor[(5, 6, 5), uint8] */;
    %582 = shape_of(%580, dtype="int32") /* ty=Tensor[(3), int32] */;
    %583 = cast(%580, dtype="uint8") /* ty=Tensor[(5, 6, 5), uint8] */;
    %584 = dyn.reshape(%581, %582, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %585 = logical_and(%577, %578) /* ty=Tensor[(5, 6, 5), bool] */;
    %586 = subtract(%583, %584) /* ty=Tensor[(5, 6, 5), uint8] */;
    (%585, %586)
  };
  %587(%var_6564) /* ty=(Tensor[(5, 6, 5), bool], Tensor[(5, 6, 5), uint8]) */
}

def @func_6131(%var_6083: Tensor[(11, 15, 8), float64], %var_6113: Tensor[(936), float64]) -> (Tensor[(11, 15, 8), int32], Tensor[(9, 13, 8), int32], Tensor[(936), float64], Tensor[(11, 15, 8), float64]) {
  %588 = @func_6041() /* ty=(Tensor[(11, 15, 8), float64],) */;
  %589 = %588.0;
  %590 = cast(%var_6083, dtype="int32") /* ty=Tensor[(11, 15, 8), int32] */;
  %591 = shape_of(%589, dtype="int32") /* ty=Tensor[(3), int32] */;
  %592 = cast(%589, dtype="int32") /* ty=Tensor[(11, 15, 8), int32] */;
  %593 = dyn.reshape(%590, %591, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %594 = cast(%var_6113, dtype="float64") /* ty=Tensor[(936), float64] */;
  %595 = reshape(%594, newshape=[9, 13, 8]) /* ty=Tensor[(9, 13, 8), float64] */;
  %596 = @func_4559(%595) /* ty=(Tensor[(9, 13, 8), int32],) */;
  %597 = cast(%589, dtype="float64") /* ty=Tensor[(11, 15, 8), float64] */;
  %598 = right_shift(%592, %593) /* ty=Tensor[(11, 15, 8), int32] */;
  %599 = %596.0;
  %600 = log10(%597) /* ty=Tensor[(11, 15, 8), float64] */;
  (%598, %599, %var_6113, %600)
}

def @func_7517(%var_7514: Tensor[(8, 240), int32], %var_7515: Tensor[(2240), int16], %var_7516: Tensor[(2080), uint16]) -> (Tensor[(11, 15, 8), float64], Tensor[(5, 11, 9), uint64], Tensor[(495), uint64], Tensor[(650), float64], Tensor[(8, 240), int32], Tensor[(2240), int16], Tensor[(10, 16, 14), float64], Tensor[(11, 15, 8), float64], Tensor[(13, 10, 16), bool], Tensor[(2080), uint16]) {
  %625 = fn (%var_7457: Tensor[(8, 240), int32], %var_7462: Tensor[(2240), int16], %var_7508: Tensor[(2080), uint16]) -> (Tensor[(11, 15, 8), float64], Tensor[(5, 11, 9), uint64], Tensor[(495), uint64], Tensor[(650), float64], Tensor[(8, 240), int32], Tensor[(2240), int16], Tensor[(10, 16, 14), float64], Tensor[(11, 15, 8), float64], Tensor[(13, 10, 16), bool], Tensor[(2080), uint16]) {
    %601 = @func_6329() /* ty=(Tensor[(11, 15, 8), float64],) */;
    %602 = cast(meta[relay.Constant][56] /* ty=Tensor[(495), uint64] */, dtype="uint64") /* ty=Tensor[(495), uint64] */;
    %603 = cast(meta[relay.Constant][57] /* ty=Tensor[(650), float64] */, dtype="float64") /* ty=Tensor[(650), float64] */;
    %604 = cast(%var_7457, dtype="int32") /* ty=Tensor[(8, 240), int32] */;
    %605 = reshape(%602, newshape=[5, 11, 9]) /* ty=Tensor[(5, 11, 9), uint64] */;
    %606 = reshape(%603, newshape=[1, 650]) /* ty=Tensor[(1, 650), float64] */;
    %607 = reshape(%604, newshape=[8, 240]) /* ty=Tensor[(8, 240), int32] */;
    %608 = @func_6702(%605, %606, %607) /* ty=(Tensor[(5, 11, 9), uint64], Tensor[(462), uint8], Tensor[(1, 650), float64], Tensor[(462), uint8], Tensor[(8, 240), float32]) */;
    %609 = cast(%var_7462, dtype="int16") /* ty=Tensor[(2240), int16] */;
    %610 = cast(%var_7462, dtype="int16") /* ty=Tensor[(2240), int16] */;
    %611 = reshape(%609, newshape=[10, 16, 14]) /* ty=Tensor[(10, 16, 14), int16] */;
    %612 = reshape(%610, newshape=[10, 16, 14]) /* ty=Tensor[(10, 16, 14), int16] */;
    %613 = @func_1381(%611, %612) /* ty=Tensor[(10, 16, 14), bool] */;
    %614 = cast(%613, dtype="float64") /* ty=Tensor[(10, 16, 14), float64] */;
    %615 = @func_6041() /* ty=(Tensor[(11, 15, 8), float64],) */;
    %616 = cast(%var_7508, dtype="uint16") /* ty=Tensor[(2080), uint16] */;
    %617 = cast(%var_7508, dtype="uint16") /* ty=Tensor[(2080), uint16] */;
    %618 = reshape(%616, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), uint16] */;
    %619 = reshape(%617, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), uint16] */;
    %620 = %601.0;
    %621 = %608.0;
    %622 = log2(%614) /* ty=Tensor[(10, 16, 14), float64] */;
    %623 = %615.0;
    %624 = @func_4620(%618, %619) /* ty=Tensor[(13, 10, 16), bool] */;
    (%620, %621, meta[relay.Constant][56] /* ty=Tensor[(495), uint64] */, meta[relay.Constant][57] /* ty=Tensor[(650), float64] */, %var_7457, %var_7462, %622, %623, %624, %var_7508)
  };
  %625(%var_7514, %var_7515, %var_7516) /* ty=(Tensor[(11, 15, 8), float64], Tensor[(5, 11, 9), uint64], Tensor[(495), uint64], Tensor[(650), float64], Tensor[(8, 240), int32], Tensor[(2240), int16], Tensor[(10, 16, 14), float64], Tensor[(11, 15, 8), float64], Tensor[(13, 10, 16), bool], Tensor[(2080), uint16]) */
}

def @func_8758() -> Tensor[(11, 15, 8), float64] {
  %627 = fn () -> Tensor[(11, 15, 8), float64] {
    %626 = @func_8619() /* ty=(Tensor[(11, 15, 8), float64],) */;
    %626.0
  };
  %627() /* ty=Tensor[(11, 15, 8), float64] */
}

def @func_8337() -> (Tensor[(11, 15, 8), float64], Tensor[(220), int16], Tensor[(30), int16], Tensor[(6, 7, 10), float32]) {
  %635 = fn () -> (Tensor[(11, 15, 8), float64], Tensor[(220), int16], Tensor[(30), int16], Tensor[(6, 7, 10), float32]) {
    %628 = @func_6041() /* ty=(Tensor[(11, 15, 8), float64],) */;
    %629 = cast(meta[relay.Constant][58] /* ty=Tensor[(30), int16] */, dtype="int16") /* ty=Tensor[(30), int16] */;
    %630 = reshape(%629, newshape=[30]) /* ty=Tensor[(30), int16] */;
    %631 = @func_6918(%630) /* ty=(Tensor[(11, 15, 8), bool], Tensor[(14, 16, 7), bool], Tensor[(30), int16], Tensor[(360), int16], Tensor[(616), bool], Tensor[(220), int16], Tensor[(1, 462), uint8]) */;
    %632 = %628.0;
    %633 = %631.5;
    %634 = @func_7384() /* ty=Tensor[(6, 7, 10), float32] */;
    (%632, %633, meta[relay.Constant][58] /* ty=Tensor[(30), int16] */, %634)
  };
  %635() /* ty=(Tensor[(11, 15, 8), float64], Tensor[(220), int16], Tensor[(30), int16], Tensor[(6, 7, 10), float32]) */
}

def @func_9020() -> Tensor[(11, 15, 8), float64] {
  %636 = @func_8356() /* ty=(Tensor[(11, 15, 8), float64],) */;
  %636.0
}

def @func_9022() -> Tensor[(11, 15, 8), float64] {
  @func_9020() /* ty=Tensor[(11, 15, 8), float64] */
}

def @func_10094() -> Tensor[(13, 10, 16), bool] {
  %637 = @func_6287() /* ty=(Tensor[(11, 15, 8), float64], Tensor[(13, 10, 16), bool], Tensor[(2080), uint16]) */;
  %637.1
}

def @func_8430() -> Tensor[(11, 15, 8), float64] {
  @func_8428() /* ty=Tensor[(11, 15, 8), float64] */
}

def @func_8620() -> (Tensor[(11, 15, 8), float64],) {
  %640 = fn () -> (Tensor[(11, 15, 8), float64],) {
    %638 = @func_7193() /* ty=(Tensor[(11, 15, 8), float64],) */;
    %639 = %638.0;
    (%639,)
  };
  %640() /* ty=(Tensor[(11, 15, 8), float64],) */
}

def @func_4623(%var_4621: Tensor[(13, 10, 16), uint16], %var_4622: Tensor[(13, 10, 16), uint16]) -> Tensor[(13, 10, 16), bool] {
  %645 = fn (%var_4615: Tensor[(13, 10, 16), uint16], %var_4616: Tensor[(13, 10, 16), uint16]) -> Tensor[(13, 10, 16), bool] {
    %641 = cast(%var_4616, dtype="bool") /* ty=Tensor[(13, 10, 16), bool] */;
    %642 = shape_of(%var_4615, dtype="int32") /* ty=Tensor[(3), int32] */;
    %643 = cast(%var_4615, dtype="bool") /* ty=Tensor[(13, 10, 16), bool] */;
    %644 = dyn.reshape(%641, %642, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    not_equal(%643, %644) /* ty=Tensor[(13, 10, 16), bool] */
  };
  %645(%var_4621, %var_4622) /* ty=Tensor[(13, 10, 16), bool] */
}

def @func_7228() -> Tensor[(11, 15, 8), float64] {
  %646 = @func_7068() /* ty=(Tensor[(11, 15, 8), float64],) */;
  %646.0
}

def @func_7758(%var_7756: Tensor[(6, 7, 10), float64]) -> (Tensor[(6, 7, 10), uint64], Tensor[(14, 16, 7), bool], Tensor[(448), uint8], Tensor[(360), int16], Tensor[(616), bool], Tensor[(5, 44), int16]) {
  @func_7755(%var_7756) /* ty=(Tensor[(6, 7, 10), uint64], Tensor[(14, 16, 7), bool], Tensor[(448), uint8], Tensor[(360), int16], Tensor[(616), bool], Tensor[(5, 44), int16]) */
}

def @func_6329() -> (Tensor[(11, 15, 8), float64],) {
  %647 = @func_6185() /* ty=Tensor[(11, 15, 8), float64] */;
  (%647,)
}

def @func_8997(%var_8988: Tensor[(11, 15, 8), float64]) -> (Tensor[(11, 15, 8), uint64], Tensor[(11, 15, 8), float64]) {
  %648 = @func_8779() /* ty=(Tensor[(11, 15, 8), float64],) */;
  %649 = %648.0;
  %650 = cast(%var_8988, dtype="uint64") /* ty=Tensor[(11, 15, 8), uint64] */;
  %651 = shape_of(%649, dtype="int32") /* ty=Tensor[(3), int32] */;
  %652 = cast(%649, dtype="uint64") /* ty=Tensor[(11, 15, 8), uint64] */;
  %653 = dyn.reshape(%650, %651, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %654 = maximum(%652, %653) /* ty=Tensor[(11, 15, 8), uint64] */;
  %655 = @func_7228() /* ty=Tensor[(11, 15, 8), float64] */;
  (%654, %655)
}

def @func_621(%var_619: Tensor[(10, 12, 16), int32], %var_620: Tensor[(462), uint8]) -> (Tensor[(13, 15, 1), uint64], Tensor[(195), uint64], Tensor[(10, 12, 16), bool], Tensor[(14, 16, 7), float32], Tensor[(462), uint8], Tensor[(10, 12, 16), float64]) {
  %676 = fn (%var_566: Tensor[(10, 12, 16), int32], %var_587: Tensor[(462), uint8]) -> (Tensor[(13, 15, 1), uint64], Tensor[(195), uint64], Tensor[(10, 12, 16), bool], Tensor[(14, 16, 7), float32], Tensor[(462), uint8], Tensor[(10, 12, 16), float64]) {
    %656 = cast(meta[relay.Constant][59] /* ty=Tensor[(195), uint64] */, dtype="uint64") /* ty=Tensor[(195), uint64] */;
    %657 = reshape(%656, newshape=[13, 15, 1]) /* ty=Tensor[(13, 15, 1), uint64] */;
    %658 = @func_241(%657) /* ty=(Tensor[(13, 15, 1), uint64], Tensor[(1568), float64], Tensor[(231, 2), uint8]) */;
    %659 = cast(meta[relay.Constant][60] /* ty=Tensor[(10, 12, 1), int32] */, dtype="int32") /* ty=Tensor[(10, 12, 1), int32] */;
    %660 = cast(%var_566, dtype="int32") /* ty=Tensor[(10, 12, 16), int32] */;
    %661 = subtract(%659, %660) /* ty=Tensor[(10, 12, 16), int32] */;
    %662 = cast(%var_566, dtype="bool") /* ty=Tensor[(10, 12, 16), bool] */;
    %663 = shape_of(%661, dtype="int32") /* ty=Tensor[(3), int32] */;
    %664 = cast(%661, dtype="bool") /* ty=Tensor[(10, 12, 16), bool] */;
    %665 = dyn.reshape(%662, %663, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %666 = cast(%var_587, dtype="uint8") /* ty=Tensor[(462), uint8] */;
    %667 = cast(%var_587, dtype="uint8") /* ty=Tensor[(462), uint8] */;
    %668 = reshape(%666, newshape=[7, 6, 11]) /* ty=Tensor[(7, 6, 11), uint8] */;
    %669 = reshape(%667, newshape=[7, 6, 11]) /* ty=Tensor[(7, 6, 11), uint8] */;
    %670 = @func_165(%668, %669) /* ty=(Tensor[(7, 6, 11), bool], Tensor[(14, 16, 7), bool], Tensor[(1568), float64], Tensor[(14, 16, 7), bool], Tensor[(14, 16, 7), bool], Tensor[(14, 16, 7), float32]) */;
    %671 = cast(%var_566, dtype="float64") /* ty=Tensor[(10, 12, 16), float64] */;
    %672 = %658.0;
    %673 = greater_equal(%664, %665) /* ty=Tensor[(10, 12, 16), bool] */;
    %674 = %670.5;
    %675 = sqrt(%671) /* ty=Tensor[(10, 12, 16), float64] */;
    (%672, meta[relay.Constant][59] /* ty=Tensor[(195), uint64] */, %673, %674, %var_587, %675)
  };
  %676(%var_619, %var_620) /* ty=(Tensor[(13, 15, 1), uint64], Tensor[(195), uint64], Tensor[(10, 12, 16), bool], Tensor[(14, 16, 7), float32], Tensor[(462), uint8], Tensor[(10, 12, 16), float64]) */
}

def @func_7096(%var_7094: Tensor[(936), float64]) -> (Tensor[(11, 15, 8), float64], Tensor[(11, 15, 8), int32], Tensor[(936), float64]) {
  @func_7093(%var_7094) /* ty=(Tensor[(11, 15, 8), float64], Tensor[(11, 15, 8), int32], Tensor[(936), float64]) */
}

def @func_7195() -> (Tensor[(11, 15, 8), float64],) {
  @func_7193() /* ty=(Tensor[(11, 15, 8), float64],) */
}

def @func_169(%var_167: Tensor[(7, 6, 11), uint8], %var_168: Tensor[(7, 6, 11), uint8]) -> (Tensor[(7, 6, 11), bool], Tensor[(14, 16, 7), bool], Tensor[(1568), float64], Tensor[(14, 16, 7), bool], Tensor[(14, 16, 7), bool], Tensor[(14, 16, 7), float32]) {
  @func_165(%var_167, %var_168) /* ty=(Tensor[(7, 6, 11), bool], Tensor[(14, 16, 7), bool], Tensor[(1568), float64], Tensor[(14, 16, 7), bool], Tensor[(14, 16, 7), bool], Tensor[(14, 16, 7), float32]) */
}

def @func_6479(%var_6477: Tensor[(11, 15, 8), float64], %var_6478: Tensor[(936), float64]) -> (Tensor[(11, 15, 8), bool], Tensor[(9, 13, 8), int32], Tensor[(936), float64]) {
  @func_6475(%var_6477, %var_6478) /* ty=(Tensor[(11, 15, 8), bool], Tensor[(9, 13, 8), int32], Tensor[(936), float64]) */
}

def @func_7070() -> (Tensor[(11, 15, 8), float64],) {
  @func_7068() /* ty=(Tensor[(11, 15, 8), float64],) */
}

def @func_9902(%var_9900: Tensor[(16, 12, 5), bool]) -> (Tensor[(16, 12, 5), bool],) {
  @func_9899(%var_9900) /* ty=(Tensor[(16, 12, 5), bool],) */
}

def @func_7700(%var_7698: Tensor[(12, 11, 5), float32], %var_7699: Tensor[(12, 11, 5), float32]) -> (Tensor[(12, 11, 5), float32], Tensor[(11, 15, 8), float64]) {
  %683 = fn (%var_7684: Tensor[(12, 11, 5), float32], %var_7685: Tensor[(12, 11, 5), float32]) -> (Tensor[(12, 11, 5), float32], Tensor[(11, 15, 8), float64]) {
    %677 = cast(%var_7685, dtype="float32") /* ty=Tensor[(12, 11, 5), float32] */;
    %678 = shape_of(%var_7684, dtype="int32") /* ty=Tensor[(3), int32] */;
    %679 = cast(%var_7684, dtype="float32") /* ty=Tensor[(12, 11, 5), float32] */;
    %680 = dyn.reshape(%677, %678, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %681 = mod(%679, %680) /* ty=Tensor[(12, 11, 5), float32] */;
    %682 = @func_7340() /* ty=Tensor[(11, 15, 8), float64] */;
    (%681, %682)
  };
  %683(%var_7698, %var_7699) /* ty=(Tensor[(12, 11, 5), float32], Tensor[(11, 15, 8), float64]) */
}

def @func_2473(%var_2428: Tensor[(12, 14, 15), bool], %var_2429: Tensor[(12, 14, 15), bool], %var_2448: Tensor[(384), float64], %var_2449: Tensor[(616), bool]) -> (Tensor[(12, 14, 15), bool], Tensor[(12, 14, 15), float32], Tensor[(1920), int32], Tensor[(384), float64], Tensor[(616), bool], Tensor[(1920), int32]) {
  %684 = cast(%var_2429, dtype="bool") /* ty=Tensor[(12, 14, 15), bool] */;
  %685 = shape_of(%var_2428, dtype="int32") /* ty=Tensor[(3), int32] */;
  %686 = cast(%var_2428, dtype="bool") /* ty=Tensor[(12, 14, 15), bool] */;
  %687 = dyn.reshape(%684, %685, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %688 = cast(%var_2429, dtype="float32") /* ty=Tensor[(12, 14, 15), float32] */;
  %689 = cast(%var_2448, dtype="float64") /* ty=Tensor[(384), float64] */;
  %690 = cast(%var_2449, dtype="bool") /* ty=Tensor[(616), bool] */;
  %691 = cast(meta[relay.Constant][61] /* ty=Tensor[(1920), int32] */, dtype="int32") /* ty=Tensor[(1920), int32] */;
  %692 = reshape(%689, newshape=[8, 8, 6]) /* ty=Tensor[(8, 8, 6), float64] */;
  %693 = reshape(%690, newshape=[616]) /* ty=Tensor[(616), bool] */;
  %694 = reshape(%691, newshape=[1920]) /* ty=Tensor[(1920), int32] */;
  %695 = @func_1115(%692, %693, %694) /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 11, 7), bool], Tensor[(616), bool], Tensor[(195), uint64], Tensor[(1920), int32], Tensor[(231, 2), uint8]) */;
  %696 = logical_or(%686, %687) /* ty=Tensor[(12, 14, 15), bool] */;
  %697 = exp(%688) /* ty=Tensor[(12, 14, 15), float32] */;
  %698 = %695.4;
  (%696, %697, %698, %var_2448, %var_2449, meta[relay.Constant][61] /* ty=Tensor[(1920), int32] */)
}

def @func_9954() -> (Tensor[(11, 15, 8), float64],) {
  %700 = fn () -> (Tensor[(11, 15, 8), float64],) {
    %699 = @func_9020() /* ty=Tensor[(11, 15, 8), float64] */;
    (%699,)
  };
  %700() /* ty=(Tensor[(11, 15, 8), float64],) */
}

def @func_7875() -> (Tensor[(11, 15, 8), float64], Tensor[(11, 15, 8), float64]) {
  %707 = fn () -> (Tensor[(11, 15, 8), float64], Tensor[(11, 15, 8), float64]) {
    %701 = @func_6329() /* ty=(Tensor[(11, 15, 8), float64],) */;
    %702 = %701.0;
    %703 = cast(%702, dtype="float64") /* ty=Tensor[(11, 15, 8), float64] */;
    %704 = cast(%702, dtype="float64") /* ty=Tensor[(11, 15, 8), float64] */;
    %705 = cos(%703) /* ty=Tensor[(11, 15, 8), float64] */;
    %706 = sigmoid(%704) /* ty=Tensor[(11, 15, 8), float64] */;
    (%705, %706)
  };
  %707() /* ty=(Tensor[(11, 15, 8), float64], Tensor[(11, 15, 8), float64]) */
}

def @func_3098(%var_3096: Tensor[(11, 3, 14), float32]) -> Tensor[(11, 3, 14), float32] {
  @func_3095(%var_3096) /* ty=Tensor[(11, 3, 14), float32] */
}

def @func_10009() -> Tensor[(13, 10, 16), bool] {
  %708 = @func_6287() /* ty=(Tensor[(11, 15, 8), float64], Tensor[(13, 10, 16), bool], Tensor[(2080), uint16]) */;
  %708.1
}

def @func_7124(%var_7123: Tensor[(1200, 1), int32]) -> (Tensor[(11, 15, 8), float64], Tensor[(1200, 1), int32], Tensor[(5, 15, 16), bool]) {
  %721 = fn (%var_7111: Tensor[(1200, 1), int32]) -> (Tensor[(11, 15, 8), float64], Tensor[(1200, 1), int32], Tensor[(5, 15, 16), bool]) {
    %709 = @func_7019() /* ty=(Tensor[(11, 15, 8), float64],) */;
    %710 = cast(%var_7111, dtype="int32") /* ty=Tensor[(1200, 1), int32] */;
    %711 = cast(%var_7111, dtype="int32") /* ty=Tensor[(1200, 1), int32] */;
    %712 = reshape(%710, newshape=[5, 15, 16]) /* ty=Tensor[(5, 15, 16), int32] */;
    %713 = reshape(%711, newshape=[5, 15, 16]) /* ty=Tensor[(5, 15, 16), int32] */;
    %714 = @func_2666(%712, %713) /* ty=Tensor[(5, 15, 16), bool] */;
    %715 = cast(meta[relay.Constant][62] /* ty=Tensor[(5, 15, 16), bool] */, dtype="bool") /* ty=Tensor[(5, 15, 16), bool] */;
    %716 = shape_of(%714, dtype="int32") /* ty=Tensor[(3), int32] */;
    %717 = cast(%714, dtype="bool") /* ty=Tensor[(5, 15, 16), bool] */;
    %718 = dyn.reshape(%715, %716, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %719 = %709.0;
    %720 = equal(%717, %718) /* ty=Tensor[(5, 15, 16), bool] */;
    (%719, %var_7111, %720)
  };
  %721(%var_7123) /* ty=(Tensor[(11, 15, 8), float64], Tensor[(1200, 1), int32], Tensor[(5, 15, 16), bool]) */
}

def @func_7907() -> (Tensor[(360), int16],) {
  %724 = fn () -> (Tensor[(360), int16],) {
    %722 = @func_7622() /* ty=(Tensor[(6, 7, 10), float64], Tensor[(360), int16], Tensor[(8, 56), uint8], Tensor[(360), int16], Tensor[(616), bool], Tensor[(220, 1), int16]) */;
    %723 = %722.1;
    (%723,)
  };
  %724() /* ty=(Tensor[(360), int16],) */
}

def @func_8847(%var_8843: Tensor[(104, 20), uint16]) -> (Tensor[(?, 1568), uint8], Tensor[(13, 10, 16), bool], Tensor[(104, 20), uint16]) {
  %725 = @func_8165() /* ty=(Tensor[(11, 15, 8), float64], Tensor[(?, 1568), uint8], Tensor[(11, 15, 8), float64]) */;
  %726 = cast(%var_8843, dtype="uint16") /* ty=Tensor[(104, 20), uint16] */;
  %727 = cast(%var_8843, dtype="uint16") /* ty=Tensor[(104, 20), uint16] */;
  %728 = reshape(%726, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), uint16] */;
  %729 = reshape(%727, newshape=[13, 10, 16]) /* ty=Tensor[(13, 10, 16), uint16] */;
  %730 = %725.1;
  %731 = @func_4620(%728, %729) /* ty=Tensor[(13, 10, 16), bool] */;
  (%730, %731, %var_8843)
}

def @func_6429(%var_6414: Tensor[(11, 15, 8), float64]) -> (Tensor[(11, 15, 8), bool],) {
  %732 = @func_6041() /* ty=(Tensor[(11, 15, 8), float64],) */;
  %733 = %732.0;
  %734 = cast(%var_6414, dtype="bool") /* ty=Tensor[(11, 15, 8), bool] */;
  %735 = shape_of(%733, dtype="int32") /* ty=Tensor[(3), int32] */;
  %736 = cast(%733, dtype="bool") /* ty=Tensor[(11, 15, 8), bool] */;
  %737 = dyn.reshape(%734, %735, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %738 = greater(%736, %737) /* ty=Tensor[(11, 15, 8), bool] */;
  (%738,)
}

def @func_2616(%var_2613: Tensor[(6, 15, 8), int16], %var_2614: Tensor[(6, 15, 8), int16], %var_2615: Tensor[(1, 1920), int32]) -> (Tensor[(6, 15, 8), bool], Tensor[(12, 14, 15), float32], Tensor[(2520), bool], Tensor[(384), float64], Tensor[(154, 4), bool], Tensor[(6, 15, 8), uint32], Tensor[(231, 2), uint8], Tensor[(1, 1920), int32]) {
  %767 = fn (%var_2591: Tensor[(6, 15, 8), int16], %var_2592: Tensor[(6, 15, 8), int16], %var_2608: Tensor[(1, 1920), int32]) -> (Tensor[(6, 15, 8), bool], Tensor[(12, 14, 15), float32], Tensor[(2520), bool], Tensor[(384), float64], Tensor[(154, 4), bool], Tensor[(6, 15, 8), uint32], Tensor[(231, 2), uint8], Tensor[(1, 1920), int32]) {
    %739 = cast(%var_2592, dtype="bool") /* ty=Tensor[(6, 15, 8), bool] */;
    %740 = shape_of(%var_2591, dtype="int32") /* ty=Tensor[(3), int32] */;
    %741 = cast(%var_2591, dtype="bool") /* ty=Tensor[(6, 15, 8), bool] */;
    %742 = dyn.reshape(%739, %740, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %743 = cast(meta[relay.Constant][63] /* ty=Tensor[(2520), bool] */, dtype="bool") /* ty=Tensor[(2520), bool] */;
    %744 = cast(meta[relay.Constant][63] /* ty=Tensor[(2520), bool] */, dtype="bool") /* ty=Tensor[(2520), bool] */;
    %745 = cast(meta[relay.Constant][64] /* ty=Tensor[(384), float64] */, dtype="float64") /* ty=Tensor[(384), float64] */;
    %746 = cast(meta[relay.Constant][65] /* ty=Tensor[(154, 4), bool] */, dtype="bool") /* ty=Tensor[(154, 4), bool] */;
    %747 = reshape(%743, newshape=[12, 14, 15]) /* ty=Tensor[(12, 14, 15), bool] */;
    %748 = reshape(%744, newshape=[12, 14, 15]) /* ty=Tensor[(12, 14, 15), bool] */;
    %749 = reshape(%745, newshape=[384]) /* ty=Tensor[(384), float64] */;
    %750 = reshape(%746, newshape=[616]) /* ty=Tensor[(616), bool] */;
    %751 = @func_2473(%747, %748, %749, %750) /* ty=(Tensor[(12, 14, 15), bool], Tensor[(12, 14, 15), float32], Tensor[(1920), int32], Tensor[(384), float64], Tensor[(616), bool], Tensor[(1920), int32]) */;
    %752 = cast(%var_2592, dtype="uint32") /* ty=Tensor[(6, 15, 8), uint32] */;
    %753 = shape_of(%var_2591, dtype="int32") /* ty=Tensor[(3), int32] */;
    %754 = cast(%var_2591, dtype="uint32") /* ty=Tensor[(6, 15, 8), uint32] */;
    %755 = dyn.reshape(%752, %753, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %756 = cast(meta[relay.Constant][64] /* ty=Tensor[(384), float64] */, dtype="float64") /* ty=Tensor[(384), float64] */;
    %757 = cast(meta[relay.Constant][65] /* ty=Tensor[(154, 4), bool] */, dtype="bool") /* ty=Tensor[(154, 4), bool] */;
    %758 = cast(%var_2608, dtype="int32") /* ty=Tensor[(1, 1920), int32] */;
    %759 = reshape(%756, newshape=[8, 8, 6]) /* ty=Tensor[(8, 8, 6), float64] */;
    %760 = reshape(%757, newshape=[616]) /* ty=Tensor[(616), bool] */;
    %761 = reshape(%758, newshape=[1920]) /* ty=Tensor[(1920), int32] */;
    %762 = @func_1115(%759, %760, %761) /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 11, 7), bool], Tensor[(616), bool], Tensor[(195), uint64], Tensor[(1920), int32], Tensor[(231, 2), uint8]) */;
    %763 = less_equal(%741, %742) /* ty=Tensor[(6, 15, 8), bool] */;
    %764 = %751.1;
    %765 = right_shift(%754, %755) /* ty=Tensor[(6, 15, 8), uint32] */;
    %766 = %762.5;
    (%763, %764, meta[relay.Constant][63] /* ty=Tensor[(2520), bool] */, meta[relay.Constant][64] /* ty=Tensor[(384), float64] */, meta[relay.Constant][65] /* ty=Tensor[(154, 4), bool] */, %765, %766, %var_2608)
  };
  %767(%var_2613, %var_2614, %var_2615) /* ty=(Tensor[(6, 15, 8), bool], Tensor[(12, 14, 15), float32], Tensor[(2520), bool], Tensor[(384), float64], Tensor[(154, 4), bool], Tensor[(6, 15, 8), uint32], Tensor[(231, 2), uint8], Tensor[(1, 1920), int32]) */
}

def @func_8165() -> (Tensor[(11, 15, 8), float64], Tensor[(?, 1568), uint8], Tensor[(11, 15, 8), float64]) {
  %768 = @func_8000() /* ty=(Tensor[(11, 15, 8), float64],) */;
  %769 = cast(meta[relay.Constant][66] /* ty=Tensor[(1, 1568), float64] */, dtype="float64") /* ty=Tensor[(1, 1568), float64] */;
  %770 = reshape(%769, newshape=[14, 16, 7]) /* ty=Tensor[(14, 16, 7), float64] */;
  %771 = @func_64(%770) /* ty=(Tensor[(14, 16, 7), bool],) */;
  %772 = %771.0;
  %773 = cast(%772, dtype="uint8") /* ty=Tensor[(14, 16, 7), uint8] */;
  %774 = shape_of(meta[relay.Constant][66] /* ty=Tensor[(1, 1568), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %775 = cast(meta[relay.Constant][66] /* ty=Tensor[(1, 1568), float64] */, dtype="uint8") /* ty=Tensor[(1, 1568), uint8] */;
  %776 = dyn.reshape(%773, %774, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %777 = @func_7193() /* ty=(Tensor[(11, 15, 8), float64],) */;
  %778 = %768.0;
  %779 = multiply(%775, %776) /* ty=Tensor[(?, 1568), uint8] */;
  %780 = %777.0;
  (%778, %779, %780)
}

def @func_7386() -> Tensor[(6, 7, 10), float32] {
  @func_7384() /* ty=Tensor[(6, 7, 10), float32] */
}

def @func_5247(%var_5243: Tensor[(4, 10, 2), int64]) -> (Tensor[(4, 10, 2), int64],) {
  %781 = cast(3 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %782 = cast(%var_5243, dtype="int64") /* ty=Tensor[(4, 10, 2), int64] */;
  %783 = multiply(%781, %782) /* ty=Tensor[(4, 10, 2), int64] */;
  (%783,)
}

def @func_9495() -> Tensor[(360), int16] {
  %784 = @func_7622() /* ty=(Tensor[(6, 7, 10), float64], Tensor[(360), int16], Tensor[(8, 56), uint8], Tensor[(360), int16], Tensor[(616), bool], Tensor[(220, 1), int16]) */;
  %784.3
}

def @func_9804() -> (Tensor[(7, 15, 9), float32], Tensor[(7, 15, 9), bool]) {
  %794 = fn () -> (Tensor[(7, 15, 9), float32], Tensor[(7, 15, 9), bool]) {
    %785 = cast(meta[relay.Constant][67] /* ty=Tensor[(7, 15, 9), float32] */, dtype="float32") /* ty=Tensor[(7, 15, 9), float32] */;
    %786 = cast(meta[relay.Constant][67] /* ty=Tensor[(7, 15, 9), float32] */, dtype="float32") /* ty=Tensor[(7, 15, 9), float32] */;
    %787 = asinh(%786) /* ty=Tensor[(7, 15, 9), float32] */;
    %788 = cast(%787, dtype="bool") /* ty=Tensor[(7, 15, 9), bool] */;
    %789 = shape_of(meta[relay.Constant][67] /* ty=Tensor[(7, 15, 9), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %790 = cast(meta[relay.Constant][67] /* ty=Tensor[(7, 15, 9), float32] */, dtype="bool") /* ty=Tensor[(7, 15, 9), bool] */;
    %791 = dyn.reshape(%788, %789, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %792 = acos(%785) /* ty=Tensor[(7, 15, 9), float32] */;
    %793 = less_equal(%790, %791) /* ty=Tensor[(7, 15, 9), bool] */;
    (%792, %793)
  };
  %794() /* ty=(Tensor[(7, 15, 9), float32], Tensor[(7, 15, 9), bool]) */
}

def @func_1293(%var_1226: Tensor[(10, 1, 3), int16], %var_1227: Tensor[(10, 12, 3), int16], %var_1235: Tensor[(616), bool], %var_1269: Tensor[(220), int16], %var_1270: Tensor[(7, 66), uint8]) -> (Tensor[(10, 12, 3), bool], Tensor[(8, 11, 7), bool], Tensor[(616), bool], Tensor[(14, 16, 7), bool], Tensor[(7, 66), uint8], Tensor[(220), float64], Tensor[(14, 16, 7), bool], Tensor[(14, 16, 7), bool]) {
  %795 = cast(%var_1226, dtype="bool") /* ty=Tensor[(10, 1, 3), bool] */;
  %796 = cast(%var_1227, dtype="bool") /* ty=Tensor[(10, 12, 3), bool] */;
  %797 = cast(%var_1235, dtype="bool") /* ty=Tensor[(616), bool] */;
  %798 = cast(%var_1235, dtype="bool") /* ty=Tensor[(616), bool] */;
  %799 = reshape(%797, newshape=[8, 11, 7]) /* ty=Tensor[(8, 11, 7), bool] */;
  %800 = reshape(%798, newshape=[8, 11, 7]) /* ty=Tensor[(8, 11, 7), bool] */;
  %801 = cast(%var_1269, dtype="int16") /* ty=Tensor[(220), int16] */;
  %802 = cast(%var_1269, dtype="int16") /* ty=Tensor[(220), int16] */;
  %803 = cast(%var_1270, dtype="uint8") /* ty=Tensor[(7, 66), uint8] */;
  %804 = reshape(%801, newshape=[2, 10, 11]) /* ty=Tensor[(2, 10, 11), int16] */;
  %805 = reshape(%802, newshape=[2, 10, 11]) /* ty=Tensor[(2, 10, 11), int16] */;
  %806 = reshape(%803, newshape=[462]) /* ty=Tensor[(462), uint8] */;
  %807 = @func_1010(%804, %805, %806) /* ty=(Tensor[(2, 10, 11), int16], Tensor[(14, 16, 7), bool], Tensor[(7, 6, 11), bool], Tensor[(462), uint8], Tensor[(1568), bool], Tensor[(14, 16, 7), bool]) */;
  %808 = cast(%var_1269, dtype="float64") /* ty=Tensor[(220), float64] */;
  %809 = cast(%var_1270, dtype="uint8") /* ty=Tensor[(7, 66), uint8] */;
  %810 = cast(%var_1270, dtype="uint8") /* ty=Tensor[(7, 66), uint8] */;
  %811 = reshape(%809, newshape=[7, 6, 11]) /* ty=Tensor[(7, 6, 11), uint8] */;
  %812 = reshape(%810, newshape=[7, 6, 11]) /* ty=Tensor[(7, 6, 11), uint8] */;
  %813 = @func_165(%811, %812) /* ty=(Tensor[(7, 6, 11), bool], Tensor[(14, 16, 7), bool], Tensor[(1568), float64], Tensor[(14, 16, 7), bool], Tensor[(14, 16, 7), bool], Tensor[(14, 16, 7), float32]) */;
  %814 = %807.5;
  %815 = cast(%814, dtype="float64") /* ty=Tensor[(14, 16, 7), float64] */;
  %816 = reshape(%815, newshape=[14, 16, 7]) /* ty=Tensor[(14, 16, 7), float64] */;
  %817 = @func_64(%816) /* ty=(Tensor[(14, 16, 7), bool],) */;
  %818 = not_equal(%795, %796) /* ty=Tensor[(10, 12, 3), bool] */;
  %819 = @func_1082(%799, %800) /* ty=Tensor[(8, 11, 7), bool] */;
  %820 = log2(%808) /* ty=Tensor[(220), float64] */;
  %821 = %813.3;
  %822 = %817.0;
  (%818, %819, %var_1235, %814, %var_1270, %820, %821, %822)
}

def @func_9000(%var_8998: Tensor[(11, 15, 8), float64]) -> (Tensor[(11, 15, 8), uint64], Tensor[(11, 15, 8), float64]) {
  @func_8997(%var_8998) /* ty=(Tensor[(11, 15, 8), uint64], Tensor[(11, 15, 8), float64]) */
}

def @func_6186() -> Tensor[(11, 15, 8), float64] {
  %824 = fn () -> Tensor[(11, 15, 8), float64] {
    %823 = @func_6041() /* ty=(Tensor[(11, 15, 8), float64],) */;
    %823.0
  };
  %824() /* ty=Tensor[(11, 15, 8), float64] */
}

def @func_6331() -> (Tensor[(11, 15, 8), float64],) {
  @func_6329() /* ty=(Tensor[(11, 15, 8), float64],) */
}

def @func_6475(%var_6450: Tensor[(11, 15, 8), float64], %var_6468: Tensor[(936), float64]) -> (Tensor[(11, 15, 8), bool], Tensor[(9, 13, 8), int32], Tensor[(936), float64]) {
  %825 = @func_6329() /* ty=(Tensor[(11, 15, 8), float64],) */;
  %826 = %825.0;
  %827 = cast(%var_6450, dtype="bool") /* ty=Tensor[(11, 15, 8), bool] */;
  %828 = shape_of(%826, dtype="int32") /* ty=Tensor[(3), int32] */;
  %829 = cast(%826, dtype="bool") /* ty=Tensor[(11, 15, 8), bool] */;
  %830 = dyn.reshape(%827, %828, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %831 = cast(%var_6468, dtype="float64") /* ty=Tensor[(936), float64] */;
  %832 = reshape(%831, newshape=[9, 13, 8]) /* ty=Tensor[(9, 13, 8), float64] */;
  %833 = @func_4559(%832) /* ty=(Tensor[(9, 13, 8), int32],) */;
  %834 = less_equal(%829, %830) /* ty=Tensor[(11, 15, 8), bool] */;
  %835 = %833.0;
  (%834, %835, %var_6468)
}

def @func_7755(%var_7736: Tensor[(6, 7, 10), float64]) -> (Tensor[(6, 7, 10), uint64], Tensor[(14, 16, 7), bool], Tensor[(448), uint8], Tensor[(360), int16], Tensor[(616), bool], Tensor[(5, 44), int16]) {
  %836 = @func_7309() /* ty=Tensor[(6, 7, 10), float64] */;
  %837 = cast(%var_7736, dtype="uint64") /* ty=Tensor[(6, 7, 10), uint64] */;
  %838 = shape_of(%836, dtype="int32") /* ty=Tensor[(3), int32] */;
  %839 = cast(%836, dtype="uint64") /* ty=Tensor[(6, 7, 10), uint64] */;
  %840 = dyn.reshape(%837, %838, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %841 = cast(meta[relay.Constant][68] /* ty=Tensor[(448), uint8] */, dtype="uint8") /* ty=Tensor[(448), uint8] */;
  %842 = cast(meta[relay.Constant][69] /* ty=Tensor[(360), int16] */, dtype="int16") /* ty=Tensor[(360), int16] */;
  %843 = cast(meta[relay.Constant][70] /* ty=Tensor[(616), bool] */, dtype="bool") /* ty=Tensor[(616), bool] */;
  %844 = cast(meta[relay.Constant][71] /* ty=Tensor[(5, 44), int16] */, dtype="int16") /* ty=Tensor[(5, 44), int16] */;
  %845 = reshape(%841, newshape=[14, 2, 16]) /* ty=Tensor[(14, 2, 16), uint8] */;
  %846 = reshape(%842, newshape=[360]) /* ty=Tensor[(360), int16] */;
  %847 = reshape(%843, newshape=[616]) /* ty=Tensor[(616), bool] */;
  %848 = reshape(%844, newshape=[220]) /* ty=Tensor[(220), int16] */;
  %849 = @func_5937(%845, %846, %847, %848) /* ty=(Tensor[(14, 2, 16), uint8], Tensor[(14, 16, 7), bool], Tensor[(30), int16], Tensor[(360), int16], Tensor[(616), bool], Tensor[(220), int16], Tensor[(462), uint8]) */;
  %850 = left_shift(%839, %840) /* ty=Tensor[(6, 7, 10), uint64] */;
  %851 = %849.1;
  (%850, %851, meta[relay.Constant][68] /* ty=Tensor[(448), uint8] */, meta[relay.Constant][69] /* ty=Tensor[(360), int16] */, meta[relay.Constant][70] /* ty=Tensor[(616), bool] */, meta[relay.Constant][71] /* ty=Tensor[(5, 44), int16] */)
}

def @func_7093(%var_7084: Tensor[(936), float64]) -> (Tensor[(11, 15, 8), float64], Tensor[(11, 15, 8), int32], Tensor[(936), float64]) {
  %852 = @func_7068() /* ty=(Tensor[(11, 15, 8), float64],) */;
  %853 = %852.0;
  %854 = cast(%853, dtype="float64") /* ty=Tensor[(11, 15, 8), float64] */;
  %855 = cast(%var_7084, dtype="float64") /* ty=Tensor[(936), float64] */;
  %856 = reshape(%854, newshape=[11, 15, 8]) /* ty=Tensor[(11, 15, 8), float64] */;
  %857 = reshape(%855, newshape=[936]) /* ty=Tensor[(936), float64] */;
  %858 = @func_6131(%856, %857) /* ty=(Tensor[(11, 15, 8), int32], Tensor[(9, 13, 8), int32], Tensor[(936), float64], Tensor[(11, 15, 8), float64]) */;
  %859 = %858.0;
  (%853, %859, %var_7084)
}

def @func_8089() -> Tensor[(11, 15, 8), float64] {
  @func_8087() /* ty=Tensor[(11, 15, 8), float64] */
}

def @func_7311() -> Tensor[(6, 7, 10), float64] {
  @func_7309() /* ty=Tensor[(6, 7, 10), float64] */
}

def @func_8751(%var_8747: Tensor[(7, 1, 11), float32], %var_8748: Tensor[(7, 1, 11), float32], %var_8749: uint16, %var_8750: Tensor[(616), bool]) -> (Tensor[(7, ?, 11), bool], Tensor[(10, 14, 12), float64], uint16, Tensor[(11, 15, 8), float64], Tensor[(8, 11, 7), bool], Tensor[(616), bool], Tensor[(7, ?, 11), int32], Tensor[(9, 4, 7), float32], Tensor[(252), float32], Tensor[(6, 5, 12), float64], Tensor[(780), int32], Tensor[(1920), int32]) {
  %900 = fn (%var_8632: Tensor[(7, 1, 11), float32], %var_8671: Tensor[(7, 1, 11), float32], %var_8695: uint16, %var_8705: Tensor[(616), bool]) -> (Tensor[(7, ?, 11), bool], Tensor[(10, 14, 12), float64], uint16, Tensor[(11, 15, 8), float64], Tensor[(8, 11, 7), bool], Tensor[(616), bool], Tensor[(7, ?, 11), int32], Tensor[(9, 4, 7), float32], Tensor[(252), float32], Tensor[(6, 5, 12), float64], Tensor[(780), int32], Tensor[(1920), int32]) {
    %860 = cast(%var_8632, dtype="float32") /* ty=Tensor[(7, 1, 11), float32] */;
    %861 = rsqrt(%860) /* ty=Tensor[(7, 1, 11), float32] */;
    %862 = cast(%var_8671, dtype="bool") /* ty=Tensor[(7, 1, 11), bool] */;
    %863 = shape_of(%861, dtype="int32") /* ty=Tensor[(3), int32] */;
    %864 = cast(%861, dtype="bool") /* ty=Tensor[(7, 1, 11), bool] */;
    %865 = dyn.reshape(%862, %863, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %866 = cast(%var_8695, dtype="uint16") /* ty=uint16 */;
    %867 = reshape(%866, newshape=[]) /* ty=uint16 */;
    %868 = @func_6329() /* ty=(Tensor[(11, 15, 8), float64],) */;
    %869 = cast(%var_8705, dtype="bool") /* ty=Tensor[(616), bool] */;
    %870 = cast(%var_8705, dtype="bool") /* ty=Tensor[(616), bool] */;
    %871 = reshape(%869, newshape=[8, 11, 7]) /* ty=Tensor[(8, 11, 7), bool] */;
    %872 = reshape(%870, newshape=[8, 11, 7]) /* ty=Tensor[(8, 11, 7), bool] */;
    %873 = cast(%861, dtype="float32") /* ty=Tensor[(7, 1, 11), float32] */;
    %874 = sinh(%873) /* ty=Tensor[(7, 1, 11), float32] */;
    %875 = cast(%var_8632, dtype="bool") /* ty=Tensor[(7, 1, 11), bool] */;
    %876 = shape_of(%874, dtype="int32") /* ty=Tensor[(3), int32] */;
    %877 = cast(%874, dtype="bool") /* ty=Tensor[(7, 1, 11), bool] */;
    %878 = dyn.reshape(%875, %876, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %879 = logical_or(%877, %878) /* ty=Tensor[(7, ?, 11), bool] */;
    %880 = cast(%879, dtype="float32") /* ty=Tensor[(7, ?, 11), float32] */;
    %881 = atanh(%880) /* ty=Tensor[(7, ?, 11), float32] */;
    %882 = cast(%861, dtype="int32") /* ty=Tensor[(7, 1, 11), int32] */;
    %883 = shape_of(%881, dtype="int32") /* ty=Tensor[(3), int32] */;
    %884 = cast(%881, dtype="int32") /* ty=Tensor[(7, ?, 11), int32] */;
    %885 = dyn.reshape(%882, %883, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %886 = cast(meta[relay.Constant][72] /* ty=Tensor[(252), float32] */, dtype="float32") /* ty=Tensor[(252), float32] */;
    %887 = reshape(%886, newshape=[9, 4, 7]) /* ty=Tensor[(9, 4, 7), float32] */;
    %888 = cast(meta[relay.Constant][73] /* ty=Tensor[(780), int32] */, dtype="int32") /* ty=Tensor[(780), int32] */;
    %889 = cast(meta[relay.Constant][74] /* ty=Tensor[(1920), int32] */, dtype="int32") /* ty=Tensor[(1920), int32] */;
    %890 = reshape(%888, newshape=[5, 12, 13]) /* ty=Tensor[(5, 12, 13), int32] */;
    %891 = reshape(%889, newshape=[1920]) /* ty=Tensor[(1920), int32] */;
    %892 = @func_5503(%890, %891) /* ty=(Tensor[(5, 12, 13), int32], Tensor[(8, 8, 6), float64], Tensor[(48, 8), float64], Tensor[(616), bool], Tensor[(1920), int32], Tensor[(12, 14, 15), bool], Tensor[(2520), bool], Tensor[(6, 5, 12), float64], Tensor[(360, 1), float32], Tensor[(5, 12, 13), bool]) */;
    %893 = greater_equal(%864, %865) /* ty=Tensor[(7, ?, 11), bool] */;
    %894 = @func_8250(%867) /* ty=Tensor[(10, 14, 12), float64] */;
    %895 = %868.0;
    %896 = @func_1082(%871, %872) /* ty=Tensor[(8, 11, 7), bool] */;
    %897 = multiply(%884, %885) /* ty=Tensor[(7, ?, 11), int32] */;
    %898 = @func_4331(%887) /* ty=Tensor[(9, 4, 7), float32] */;
    %899 = %892.7;
    (%893, %894, %var_8695, %895, %896, %var_8705, %897, %898, meta[relay.Constant][72] /* ty=Tensor[(252), float32] */, %899, meta[relay.Constant][73] /* ty=Tensor[(780), int32] */, meta[relay.Constant][74] /* ty=Tensor[(1920), int32] */)
  };
  %900(%var_8747, %var_8748, %var_8749, %var_8750) /* ty=(Tensor[(7, ?, 11), bool], Tensor[(10, 14, 12), float64], uint16, Tensor[(11, 15, 8), float64], Tensor[(8, 11, 7), bool], Tensor[(616), bool], Tensor[(7, ?, 11), int32], Tensor[(9, 4, 7), float32], Tensor[(252), float32], Tensor[(6, 5, 12), float64], Tensor[(780), int32], Tensor[(1920), int32]) */
}

def @func_1381(%var_1374: Tensor[(10, 16, 14), int16], %var_1375: Tensor[(10, 16, 14), int16]) -> Tensor[(10, 16, 14), bool] {
  %901 = cast(%var_1375, dtype="bool") /* ty=Tensor[(10, 16, 14), bool] */;
  %902 = shape_of(%var_1374, dtype="int32") /* ty=Tensor[(3), int32] */;
  %903 = cast(%var_1374, dtype="bool") /* ty=Tensor[(10, 16, 14), bool] */;
  %904 = dyn.reshape(%901, %902, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%903, %904) /* ty=Tensor[(10, 16, 14), bool] */
}

def @func_8780() -> (Tensor[(11, 15, 8), float64],) {
  %907 = fn () -> (Tensor[(11, 15, 8), float64],) {
    %905 = @func_7068() /* ty=(Tensor[(11, 15, 8), float64],) */;
    %906 = %905.0;
    (%906,)
  };
  %907() /* ty=(Tensor[(11, 15, 8), float64],) */
}

def @func_9563(%var_9560: uint32, %var_9561: Tensor[(14, 10, 2), uint32], %var_9562: Tensor[(5, 130), float64]) -> (Tensor[(14, 10, 2), uint32], Tensor[(462), uint8], Tensor[(495), uint64], Tensor[(5, 130), float64], Tensor[(1920), int32]) {
  %919 = fn (%var_9503: uint32, %var_9504: Tensor[(14, 10, 2), uint32], %var_9536: Tensor[(5, 130), float64]) -> (Tensor[(14, 10, 2), uint32], Tensor[(462), uint8], Tensor[(495), uint64], Tensor[(5, 130), float64], Tensor[(1920), int32]) {
    %908 = cast(%var_9503, dtype="uint32") /* ty=uint32 */;
    %909 = cast(%var_9504, dtype="uint32") /* ty=Tensor[(14, 10, 2), uint32] */;
    %910 = cast(meta[relay.Constant][75] /* ty=Tensor[(495), uint64] */, dtype="uint64") /* ty=Tensor[(495), uint64] */;
    %911 = cast(%var_9536, dtype="float64") /* ty=Tensor[(5, 130), float64] */;
    %912 = cast(meta[relay.Constant][76] /* ty=Tensor[(1920), int32] */, dtype="int32") /* ty=Tensor[(1920), int32] */;
    %913 = reshape(%910, newshape=[5, 11, 9]) /* ty=Tensor[(5, 11, 9), uint64] */;
    %914 = reshape(%911, newshape=[1, 650]) /* ty=Tensor[(1, 650), float64] */;
    %915 = reshape(%912, newshape=[8, 240]) /* ty=Tensor[(8, 240), int32] */;
    %916 = @func_6702(%913, %914, %915) /* ty=(Tensor[(5, 11, 9), uint64], Tensor[(462), uint8], Tensor[(1, 650), float64], Tensor[(462), uint8], Tensor[(8, 240), float32]) */;
    %917 = add(%908, %909) /* ty=Tensor[(14, 10, 2), uint32] */;
    %918 = %916.1;
    (%917, %918, meta[relay.Constant][75] /* ty=Tensor[(495), uint64] */, %var_9536, meta[relay.Constant][76] /* ty=Tensor[(1920), int32] */)
  };
  %919(%var_9560, %var_9561, %var_9562) /* ty=(Tensor[(14, 10, 2), uint32], Tensor[(462), uint8], Tensor[(495), uint64], Tensor[(5, 130), float64], Tensor[(1920), int32]) */
}

def @func_5506(%var_5504: Tensor[(5, 12, 13), int32], %var_5505: Tensor[(1920), int32]) -> (Tensor[(5, 12, 13), int32], Tensor[(8, 8, 6), float64], Tensor[(48, 8), float64], Tensor[(616), bool], Tensor[(1920), int32], Tensor[(12, 14, 15), bool], Tensor[(2520), bool], Tensor[(6, 5, 12), float64], Tensor[(360, 1), float32], Tensor[(5, 12, 13), bool]) {
  %957 = fn (%var_5436: Tensor[(5, 12, 13), int32], %var_5468: Tensor[(1920), int32]) -> (Tensor[(5, 12, 13), int32], Tensor[(8, 8, 6), float64], Tensor[(48, 8), float64], Tensor[(616), bool], Tensor[(1920), int32], Tensor[(12, 14, 15), bool], Tensor[(2520), bool], Tensor[(6, 5, 12), float64], Tensor[(360, 1), float32], Tensor[(5, 12, 13), bool]) {
    %920 = cast(%var_5436, dtype="int32") /* ty=Tensor[(5, 12, 13), int32] */;
    %921 = shape_of(meta[relay.Constant][77] /* ty=Tensor[(5, 12, 13), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %922 = cast(meta[relay.Constant][77] /* ty=Tensor[(5, 12, 13), int32] */, dtype="int32") /* ty=Tensor[(5, 12, 13), int32] */;
    %923 = dyn.reshape(%920, %921, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %924 = cast(meta[relay.Constant][78] /* ty=Tensor[(48, 8), float64] */, dtype="float64") /* ty=Tensor[(48, 8), float64] */;
    %925 = cast(meta[relay.Constant][79] /* ty=Tensor[(616), bool] */, dtype="bool") /* ty=Tensor[(616), bool] */;
    %926 = cast(%var_5468, dtype="int32") /* ty=Tensor[(1920), int32] */;
    %927 = reshape(%924, newshape=[8, 8, 6]) /* ty=Tensor[(8, 8, 6), float64] */;
    %928 = reshape(%925, newshape=[616]) /* ty=Tensor[(616), bool] */;
    %929 = reshape(%926, newshape=[1920]) /* ty=Tensor[(1920), int32] */;
    %930 = @func_1115(%927, %928, %929) /* ty=(Tensor[(8, 8, 6), float64], Tensor[(8, 11, 7), bool], Tensor[(616), bool], Tensor[(195), uint64], Tensor[(1920), int32], Tensor[(231, 2), uint8]) */;
    %931 = cast(meta[relay.Constant][80] /* ty=Tensor[(2520), bool] */, dtype="bool") /* ty=Tensor[(2520), bool] */;
    %932 = cast(meta[relay.Constant][80] /* ty=Tensor[(2520), bool] */, dtype="bool") /* ty=Tensor[(2520), bool] */;
    %933 = cast(meta[relay.Constant][78] /* ty=Tensor[(48, 8), float64] */, dtype="float64") /* ty=Tensor[(48, 8), float64] */;
    %934 = cast(meta[relay.Constant][79] /* ty=Tensor[(616), bool] */, dtype="bool") /* ty=Tensor[(616), bool] */;
    %935 = reshape(%931, newshape=[12, 14, 15]) /* ty=Tensor[(12, 14, 15), bool] */;
    %936 = reshape(%932, newshape=[12, 14, 15]) /* ty=Tensor[(12, 14, 15), bool] */;
    %937 = reshape(%933, newshape=[384]) /* ty=Tensor[(384), float64] */;
    %938 = reshape(%934, newshape=[616]) /* ty=Tensor[(616), bool] */;
    %939 = @func_2473(%935, %936, %937, %938) /* ty=(Tensor[(12, 14, 15), bool], Tensor[(12, 14, 15), float32], Tensor[(1920), int32], Tensor[(384), float64], Tensor[(616), bool], Tensor[(1920), int32]) */;
    %940 = cast(meta[relay.Constant][81] /* ty=Tensor[(360, 1), float32] */, dtype="float32") /* ty=Tensor[(360, 1), float32] */;
    %941 = reshape(%940, newshape=[6, 5, 12]) /* ty=Tensor[(6, 5, 12), float32] */;
    %942 = @func_3404(%941) /* ty=(Tensor[(6, 5, 12), float64], Tensor[(14, 16, 7), bool], Tensor[(462), uint8]) */;
    %943 = cast(meta[relay.Constant][77] /* ty=Tensor[(5, 12, 13), int32] */, dtype="bool") /* ty=Tensor[(5, 12, 13), bool] */;
    %944 = shape_of(%var_5436, dtype="int32") /* ty=Tensor[(3), int32] */;
    %945 = cast(%var_5436, dtype="bool") /* ty=Tensor[(5, 12, 13), bool] */;
    %946 = dyn.reshape(%943, %944, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %947 = less(%945, %946) /* ty=Tensor[(5, 12, 13), bool] */;
    %948 = cast(%947, dtype="bool") /* ty=Tensor[(5, 12, 13), bool] */;
    %949 = shape_of(%var_5436, dtype="int32") /* ty=Tensor[(3), int32] */;
    %950 = cast(%var_5436, dtype="bool") /* ty=Tensor[(5, 12, 13), bool] */;
    %951 = dyn.reshape(%948, %949, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %952 = right_shift(%922, %923) /* ty=Tensor[(5, 12, 13), int32] */;
    %953 = %930.0;
    %954 = %939.0;
    %955 = %942.0;
    %956 = not_equal(%950, %951) /* ty=Tensor[(5, 12, 13), bool] */;
    (%952, %953, meta[relay.Constant][78] /* ty=Tensor[(48, 8), float64] */, meta[relay.Constant][79] /* ty=Tensor[(616), bool] */, %var_5468, %954, meta[relay.Constant][80] /* ty=Tensor[(2520), bool] */, %955, meta[relay.Constant][81] /* ty=Tensor[(360, 1), float32] */, %956)
  };
  %957(%var_5504, %var_5505) /* ty=(Tensor[(5, 12, 13), int32], Tensor[(8, 8, 6), float64], Tensor[(48, 8), float64], Tensor[(616), bool], Tensor[(1920), int32], Tensor[(12, 14, 15), bool], Tensor[(2520), bool], Tensor[(6, 5, 12), float64], Tensor[(360, 1), float32], Tensor[(5, 12, 13), bool]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

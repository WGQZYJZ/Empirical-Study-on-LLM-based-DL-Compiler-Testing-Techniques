==========mod==========
#[version = "0.0.5"]
def @func_2251(%var_2228: Tensor[(16, 16, 2), float32], %var_2235: Tensor[(1040), float64]) -> (Tensor[(16, 16, 2), bool], Tensor[(10, 13, 8), float64], Tensor[(1040), float64]) {
  %0 = cast(5.27892f /* ty=float32 */, dtype="bool") /* ty=bool */;
  %1 = cast(%var_2228, dtype="bool") /* ty=Tensor[(16, 16, 2), bool] */;
  %2 = cast(%var_2235, dtype="float64") /* ty=Tensor[(1040), float64] */;
  %3 = reshape(%2, newshape=[10, 13, 8]) /* ty=Tensor[(10, 13, 8), float64] */;
  %4 = equal(%0, %1) /* ty=Tensor[(16, 16, 2), bool] */;
  %5 = @func_186(%3) /* ty=Tensor[(10, 13, 8), float64] */;
  (%4, %5, %var_2235)
}

def @func_3960() -> (Tensor[(12, 10, 1), float32],) {
  %6 = @func_2428() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %7 = %6.0;
  (%7,)
}

def @func_6190() -> (Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32]) {
  %8 = @func_5437() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32]) */;
  %9 = %8.1;
  %10 = @func_4152() /* ty=Tensor[(12, 10, 1), float32] */;
  %11 = @func_5745() /* ty=Tensor[(12, 10, 1), float32] */;
  %12 = @func_5745() /* ty=Tensor[(12, 10, 1), float32] */;
  (%9, %10, %11, %12)
}

def @func_4942(%var_4937: Tensor[(512), float32]) -> (Tensor[(12, 10, 1), float32], Tensor[(?, 512), uint32], Tensor[(512), float32]) {
  %13 = @func_4916() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %14 = cast(%var_4937, dtype="float32") /* ty=Tensor[(512), float32] */;
  %15 = reshape(%14, newshape=[1, 512]) /* ty=Tensor[(1, 512), float32] */;
  %16 = %13.0;
  %17 = @func_3704(%15) /* ty=Tensor[(?, 512), uint32] */;
  (%16, %17, %var_4937)
}

def @func_7078(%var_7063: Tensor[(9, 7, 9), uint8], %var_7064: Tensor[(9, 7, 9), uint8]) -> (Tensor[(9, 7, 9), uint8],) {
  %18 = cast(%var_7064, dtype="uint8") /* ty=Tensor[(9, 7, 9), uint8] */;
  %19 = shape_of(%var_7063, dtype="int32") /* ty=Tensor[(3), int32] */;
  %20 = cast(%var_7063, dtype="uint8") /* ty=Tensor[(9, 7, 9), uint8] */;
  %21 = dyn.reshape(%18, %19, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %22 = left_shift(%20, %21) /* ty=Tensor[(9, 7, 9), uint8] */;
  (%22,)
}

def @func_3860() -> Tensor[(12, 10, 1), float32] {
  %23 = @func_2428() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %23.0
}

def @func_4114() -> Tensor[(12, 10, 1), float32] {
  %24 = @func_2408() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %24.0
}

def @func_7860() -> Tensor[(12, 10, 1), float32] {
  %25 = @func_4180() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %25.0
}

def @func_3384(%var_3364: Tensor[(15, 4, 5), bool]) -> (Tensor[(15, 4, 5), bool],) {
  %26 = cast(meta[relay.Constant][0] /* ty=Tensor[(15, 4, 5), bool] */, dtype="bool") /* ty=Tensor[(15, 4, 5), bool] */;
  %27 = shape_of(%var_3364, dtype="int32") /* ty=Tensor[(3), int32] */;
  %28 = cast(%var_3364, dtype="bool") /* ty=Tensor[(15, 4, 5), bool] */;
  %29 = dyn.reshape(%26, %27, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %30 = logical_and(%28, %29) /* ty=Tensor[(15, 4, 5), bool] */;
  (%30,)
}

def @func_5377() -> Tensor[(12, 10, 1), float32] {
  %31 = @func_3960() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %31.0
}

def @func_8031() -> Tensor[(12, 10, 1), float32] {
  @func_7611() /* ty=Tensor[(12, 10, 1), float32] */
}

def @func_4658(%var_4642: Tensor[(1040), float64]) -> (Tensor[(13, 15, 2), uint32], Tensor[(1120), int16], Tensor[(1040), float64], Tensor[(?, 512), uint32], Tensor[(12, 10, 512), int8]) {
  %32 = cast(meta[relay.Constant][1] /* ty=Tensor[(1120), int16] */, dtype="int16") /* ty=Tensor[(1120), int16] */;
  %33 = cast(%var_4642, dtype="float64") /* ty=Tensor[(1040), float64] */;
  %34 = reshape(%32, newshape=[5, 16, 14]) /* ty=Tensor[(5, 16, 14), int16] */;
  %35 = reshape(%33, newshape=[8, 130]) /* ty=Tensor[(8, 130), float64] */;
  %36 = @func_1734(%34, %35) /* ty=(Tensor[(5, 16, 14), int16], Tensor[(10, 13, 8), float64], Tensor[(8, 130), float64], Tensor[(13, 15, 2), uint32], Tensor[(33, 7), float64]) */;
  %37 = cast(%var_4642, dtype="float64") /* ty=Tensor[(1040), float64] */;
  %38 = @func_2842() /* ty=(Tensor[(1, 512), float32],) */;
  %39 = %38.0;
  %40 = cast(%39, dtype="float32") /* ty=Tensor[(1, 512), float32] */;
  %41 = reshape(%40, newshape=[1, 512]) /* ty=Tensor[(1, 512), float32] */;
  %42 = @func_2408() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %43 = %42.0;
  %44 = cast(%39, dtype="int8") /* ty=Tensor[(1, 512), int8] */;
  %45 = cast(%43, dtype="int8") /* ty=Tensor[(12, 10, 1), int8] */;
  %46 = %36.3;
  %47 = sqrt(%37) /* ty=Tensor[(1040), float64] */;
  %48 = @func_3704(%41) /* ty=Tensor[(?, 512), uint32] */;
  %49 = right_shift(%44, %45) /* ty=Tensor[(12, 10, 512), int8] */;
  (%46, meta[relay.Constant][1] /* ty=Tensor[(1120), int16] */, %47, %48, %49)
}

def @func_6257() -> (Tensor[(?, 512), uint32],) {
  %50 = @func_4074() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(?, 512), uint32], Tensor[(512), float32]) */;
  %51 = %50.1;
  (%51,)
}

def @func_524(%var_516: Tensor[(1, 3, 4), float32]) -> (Tensor[(1, 3, 4), float32], Tensor[(13, 15, 2), uint32], Tensor[(390), uint32]) {
  %52 = cast(%var_516, dtype="float32") /* ty=Tensor[(1, 3, 4), float32] */;
  %53 = cast(meta[relay.Constant][2] /* ty=Tensor[(390), uint32] */, dtype="uint32") /* ty=Tensor[(390), uint32] */;
  %54 = cast(meta[relay.Constant][2] /* ty=Tensor[(390), uint32] */, dtype="uint32") /* ty=Tensor[(390), uint32] */;
  %55 = reshape(%53, newshape=[13, 15, 2]) /* ty=Tensor[(13, 15, 2), uint32] */;
  %56 = reshape(%54, newshape=[13, 15, 2]) /* ty=Tensor[(13, 15, 2), uint32] */;
  %57 = sinh(%52) /* ty=Tensor[(1, 3, 4), float32] */;
  %58 = @func_211(%55, %56) /* ty=Tensor[(13, 15, 2), uint32] */;
  (%57, %58, meta[relay.Constant][2] /* ty=Tensor[(390), uint32] */)
}

def @func_3236(%var_3229: Tensor[(1, 5, 8), float64]) -> (Tensor[(1, 5, 8), float64],) {
  %59 = cast(%var_3229, dtype="float64") /* ty=Tensor[(1, 5, 8), float64] */;
  %60 = log10(%59) /* ty=Tensor[(1, 5, 8), float64] */;
  (%60,)
}

def @func_2965(%var_2954: Tensor[(390), uint32]) -> (Tensor[(12, 10, ?), uint64], Tensor[(13, 15, 2), uint32], Tensor[(390), uint32]) {
  %61 = @func_2650() /* ty=Tensor[(12, 10, 1), float32] */;
  %62 = @func_2428() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %63 = %62.0;
  %64 = cast(%63, dtype="uint64") /* ty=Tensor[(12, 10, 1), uint64] */;
  %65 = shape_of(%61, dtype="int32") /* ty=Tensor[(3), int32] */;
  %66 = cast(%61, dtype="uint64") /* ty=Tensor[(12, 10, 1), uint64] */;
  %67 = dyn.reshape(%64, %65, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %68 = cast(%var_2954, dtype="uint32") /* ty=Tensor[(390), uint32] */;
  %69 = cast(%var_2954, dtype="uint32") /* ty=Tensor[(390), uint32] */;
  %70 = reshape(%68, newshape=[13, 15, 2]) /* ty=Tensor[(13, 15, 2), uint32] */;
  %71 = reshape(%69, newshape=[13, 15, 2]) /* ty=Tensor[(13, 15, 2), uint32] */;
  %72 = add(%66, %67) /* ty=Tensor[(12, 10, ?), uint64] */;
  %73 = @func_211(%70, %71) /* ty=Tensor[(13, 15, 2), uint32] */;
  (%72, %73, %var_2954)
}

def @func_4628() -> (Tensor[(1, 512), float32],) {
  %74 = @func_4017() /* ty=(Tensor[(1, 512), float32],) */;
  %75 = %74.0;
  (%75,)
}

def @func_667(%var_653: Tensor[(12, 12, 13), bool]) -> Tensor[(12, 12, 13), int16] {
  %76 = cast(%var_653, dtype="bool") /* ty=Tensor[(12, 12, 13), bool] */;
  %77 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(12, 12, 13), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %78 = cast(meta[relay.Constant][3] /* ty=Tensor[(12, 12, 13), bool] */, dtype="bool") /* ty=Tensor[(12, 12, 13), bool] */;
  %79 = dyn.reshape(%76, %77, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %80 = logical_and(%78, %79) /* ty=Tensor[(12, 12, 13), bool] */;
  %81 = cast(%80, dtype="int16") /* ty=Tensor[(12, 12, 13), int16] */;
  %82 = shape_of(%var_653, dtype="int32") /* ty=Tensor[(3), int32] */;
  %83 = cast(%var_653, dtype="int16") /* ty=Tensor[(12, 12, 13), int16] */;
  %84 = dyn.reshape(%81, %82, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  maximum(%83, %84) /* ty=Tensor[(12, 12, 13), int16] */
}

def @func_8959(%var_8954: Tensor[(15, 512), uint32]) -> Tensor[(15, 512), float32] {
  %85 = @func_6257() /* ty=(Tensor[(?, 512), uint32],) */;
  %86 = %85.0;
  %87 = cast(%86, dtype="float32") /* ty=Tensor[(?, 512), float32] */;
  %88 = cast(%var_8954, dtype="float32") /* ty=Tensor[(15, 512), float32] */;
  divide(%87, %88) /* ty=Tensor[(15, 512), float32] */
}

def @func_5745() -> Tensor[(12, 10, 1), float32] {
  %89 = @func_4344() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %89.0
}

def @func_3481() -> Tensor[(12, 10, 1), float32] {
  %90 = @func_3422() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %90.0
}

def @func_624(%var_614: Tensor[(14, 11, 8), uint8], %var_619: Tensor[(12), float32]) -> (Tensor[(14, 11, 8), bool], Tensor[(1, 3, 4), float32], Tensor[(12), float32]) {
  %91 = cast(%var_614, dtype="bool") /* ty=Tensor[(14, 11, 8), bool] */;
  %92 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(14, 11, 8), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %93 = cast(meta[relay.Constant][4] /* ty=Tensor[(14, 11, 8), uint8] */, dtype="bool") /* ty=Tensor[(14, 11, 8), bool] */;
  %94 = dyn.reshape(%91, %92, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %95 = cast(%var_619, dtype="float32") /* ty=Tensor[(12), float32] */;
  %96 = reshape(%95, newshape=[1, 3, 4]) /* ty=Tensor[(1, 3, 4), float32] */;
  %97 = @func_524(%96) /* ty=(Tensor[(1, 3, 4), float32], Tensor[(13, 15, 2), uint32], Tensor[(390), uint32]) */;
  %98 = greater_equal(%93, %94) /* ty=Tensor[(14, 11, 8), bool] */;
  %99 = %97.0;
  (%98, %99, %var_619)
}

def @func_8156() -> (Tensor[(12, 10, 1), float32], Tensor[(1, 512), float32], Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32]) {
  %100 = @func_6136() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32], Tensor[(1, 512), float32], Tensor[(13, 15, 2), uint32], Tensor[(1120), int16], Tensor[(1040), float64]) */;
  %101 = @func_2842() /* ty=(Tensor[(1, 512), float32],) */;
  %102 = @func_6998() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %103 = @func_3791() /* ty=(Tensor[(1, 512), float32], Tensor[(12, 10, 1), float32]) */;
  %104 = %100.1;
  %105 = %101.0;
  %106 = %102.0;
  %107 = %103.1;
  (%104, %105, %106, %107)
}

def @func_2617(%var_2556: Tensor[(11, 21), float64], %var_2614: Tensor[(429), float64]) -> (Tensor[(12, 10, 1), float32], Tensor[(3, 11, 7), float64], Tensor[(11, 21), float64], Tensor[(12, 12, 13), int16], Tensor[(1872), bool], Tensor[(12, 12, 13), int16], Tensor[(13, 15, 2), uint32], Tensor[(390), uint32], Tensor[(10, 13, 8), float64], Tensor[(429), float64]) {
  %108 = @func_2408() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %109 = cast(%var_2556, dtype="float64") /* ty=Tensor[(11, 21), float64] */;
  %110 = reshape(%109, newshape=[3, 11, 7]) /* ty=Tensor[(3, 11, 7), float64] */;
  %111 = @func_381(%110) /* ty=(Tensor[(10, 13, 8), float64], Tensor[(1040), float64], Tensor[(10, 13, 8), float64], Tensor[(13, 15, 2), uint32], Tensor[(390), uint32], Tensor[(3, 11, 7), float64], Tensor[(10, 13, 8), float64]) */;
  %112 = cast(meta[relay.Constant][5] /* ty=Tensor[(1872), bool] */, dtype="bool") /* ty=Tensor[(1872), bool] */;
  %113 = reshape(%112, newshape=[12, 12, 13]) /* ty=Tensor[(12, 12, 13), bool] */;
  %114 = cast(meta[relay.Constant][5] /* ty=Tensor[(1872), bool] */, dtype="bool") /* ty=Tensor[(1872), bool] */;
  %115 = reshape(%114, newshape=[12, 12, 13]) /* ty=Tensor[(12, 12, 13), bool] */;
  %116 = cast(meta[relay.Constant][6] /* ty=Tensor[(390), uint32] */, dtype="uint32") /* ty=Tensor[(390), uint32] */;
  %117 = cast(meta[relay.Constant][6] /* ty=Tensor[(390), uint32] */, dtype="uint32") /* ty=Tensor[(390), uint32] */;
  %118 = reshape(%116, newshape=[13, 15, 2]) /* ty=Tensor[(13, 15, 2), uint32] */;
  %119 = reshape(%117, newshape=[13, 15, 2]) /* ty=Tensor[(13, 15, 2), uint32] */;
  %120 = cast(%var_2614, dtype="float64") /* ty=Tensor[(429), float64] */;
  %121 = %111.5;
  %122 = cast(%121, dtype="float64") /* ty=Tensor[(3, 11, 7), float64] */;
  %123 = reshape(%120, newshape=[13, 3, 11]) /* ty=Tensor[(13, 3, 11), float64] */;
  %124 = reshape(%122, newshape=[33, 7]) /* ty=Tensor[(33, 7), float64] */;
  %125 = @func_1311(%123, %124) /* ty=(Tensor[(13, 3, 11), float64], Tensor[(10, 13, 8), float64], Tensor[(33, 7), float64], Tensor[(10, 13, 8), float64], Tensor[(10, 13, 8), float64], Tensor[(13, 3, 11), int64]) */;
  %126 = %108.0;
  %127 = @func_667(%113) /* ty=Tensor[(12, 12, 13), int16] */;
  %128 = @func_667(%115) /* ty=Tensor[(12, 12, 13), int16] */;
  %129 = @func_211(%118, %119) /* ty=Tensor[(13, 15, 2), uint32] */;
  %130 = %125.4;
  (%126, %121, %var_2556, %127, meta[relay.Constant][5] /* ty=Tensor[(1872), bool] */, %128, %129, meta[relay.Constant][6] /* ty=Tensor[(390), uint32] */, %130, %var_2614)
}

def @func_7117(%var_7099: Tensor[(10, 512), uint32]) -> (Tensor[(10, 512), bool], Tensor[(12, 10, 1), float32], Tensor[(10, 512), float64]) {
  %131 = @func_6257() /* ty=(Tensor[(?, 512), uint32],) */;
  %132 = %131.0;
  %133 = cast(%132, dtype="uint32") /* ty=Tensor[(?, 512), uint32] */;
  %134 = cast(%var_7099, dtype="uint32") /* ty=Tensor[(10, 512), uint32] */;
  %135 = minimum(%133, %134) /* ty=Tensor[(10, 512), uint32] */;
  %136 = cast(%135, dtype="bool") /* ty=Tensor[(10, 512), bool] */;
  %137 = shape_of(%var_7099, dtype="int32") /* ty=Tensor[(2), int32] */;
  %138 = cast(%var_7099, dtype="bool") /* ty=Tensor[(10, 512), bool] */;
  %139 = dyn.reshape(%136, %137, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %140 = @func_4618() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %141 = cast(%var_7099, dtype="float64") /* ty=Tensor[(10, 512), float64] */;
  %142 = logical_and(%138, %139) /* ty=Tensor[(10, 512), bool] */;
  %143 = %140.0;
  %144 = tan(%141) /* ty=Tensor[(10, 512), float64] */;
  (%142, %143, %144)
}

def @func_4763() -> Tensor[(12, 10, 1), float32] {
  %145 = @func_4180() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %145.0
}

def @func_4858(%var_4837: Tensor[(231), float64], %var_4838: Tensor[(429, 1), float64], %var_4843: Tensor[(4096), float32]) -> (Tensor[(1, 512), float32], Tensor[(12, 12, 13), int16], Tensor[(231), float64], Tensor[(429, 1), float64], Tensor[(8, 512), bool], Tensor[(4096), float32]) {
  %146 = @func_2842() /* ty=(Tensor[(1, 512), float32],) */;
  %147 = cast(%var_4837, dtype="float64") /* ty=Tensor[(231), float64] */;
  %148 = cast(%var_4838, dtype="float64") /* ty=Tensor[(429, 1), float64] */;
  %149 = reshape(%147, newshape=[11, 21]) /* ty=Tensor[(11, 21), float64] */;
  %150 = reshape(%148, newshape=[429]) /* ty=Tensor[(429), float64] */;
  %151 = @func_2617(%149, %150) /* ty=(Tensor[(12, 10, 1), float32], Tensor[(3, 11, 7), float64], Tensor[(11, 21), float64], Tensor[(12, 12, 13), int16], Tensor[(1872), bool], Tensor[(12, 12, 13), int16], Tensor[(13, 15, 2), uint32], Tensor[(390), uint32], Tensor[(10, 13, 8), float64], Tensor[(429), float64]) */;
  %152 = cast(%var_4843, dtype="float32") /* ty=Tensor[(4096), float32] */;
  %153 = reshape(%152, newshape=[8, 512]) /* ty=Tensor[(8, 512), float32] */;
  %154 = %146.0;
  %155 = %151.3;
  %156 = @func_3734(%153) /* ty=Tensor[(8, 512), bool] */;
  (%154, %155, %var_4837, %var_4838, %156, %var_4843)
}

def @func_6053() -> (Tensor[(1, 512), float32], Tensor[(1, 512), float32]) {
  %157 = @func_2741() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(13, 15, 2), uint32], Tensor[(65, 6), uint32], Tensor[(12, 10, 1), float32], Tensor[(16, 16, 2), bool], Tensor[(1, 512), float32], Tensor[(1040), float64]) */;
  %158 = %157.5;
  %159 = @func_2903() /* ty=Tensor[(1, 512), float32] */;
  (%158, %159)
}

def @func_6928() -> Tensor[(12, 10, 1), float32] {
  %160 = @func_3960() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %160.0
}

def @func_9077() -> Tensor[(12, 10, 1), float32] {
  @func_6928() /* ty=Tensor[(12, 10, 1), float32] */
}

def @func_7403(%var_7391: Tensor[(429), float64]) -> (Tensor[(16, 512), uint16], Tensor[(12, 10, 1), float32], Tensor[(1, 390), uint32], Tensor[(429), float64]) {
  %161 = @func_5363() /* ty=(Tensor[(1, 512), float32],) */;
  %162 = %161.0;
  %163 = cast(%162, dtype="uint16") /* ty=Tensor[(1, 512), uint16] */;
  %164 = cast(meta[relay.Constant][7] /* ty=Tensor[(16, 512), float32] */, dtype="uint16") /* ty=Tensor[(16, 512), uint16] */;
  %165 = right_shift(%163, %164) /* ty=Tensor[(16, 512), uint16] */;
  %166 = cast(%165, dtype="float32") /* ty=Tensor[(16, 512), float32] */;
  %167 = cast(meta[relay.Constant][8] /* ty=Tensor[(1, 390), uint32] */, dtype="uint32") /* ty=Tensor[(1, 390), uint32] */;
  %168 = cast(%var_7391, dtype="float64") /* ty=Tensor[(429), float64] */;
  %169 = reshape(%166, newshape=[16, 512]) /* ty=Tensor[(16, 512), float32] */;
  %170 = reshape(%167, newshape=[390]) /* ty=Tensor[(390), uint32] */;
  %171 = reshape(%168, newshape=[429]) /* ty=Tensor[(429), float64] */;
  %172 = @func_3653(%169, %170, %171) /* ty=(Tensor[(16, 512), float32], Tensor[(12, 10, 1), float32], Tensor[(13, 15, 2), uint32], Tensor[(390), uint32], Tensor[(12, 10, 1), float32], Tensor[(231), float64], Tensor[(231), float64], Tensor[(429), float64]) */;
  %173 = %172.1;
  (%165, %173, meta[relay.Constant][8] /* ty=Tensor[(1, 390), uint32] */, %var_7391)
}

def @func_3653(%var_3631: Tensor[(16, 512), float32], %var_3639: Tensor[(390), uint32], %var_3651: Tensor[(429), float64]) -> (Tensor[(16, 512), float32], Tensor[(12, 10, 1), float32], Tensor[(13, 15, 2), uint32], Tensor[(390), uint32], Tensor[(12, 10, 1), float32], Tensor[(231), float64], Tensor[(231), float64], Tensor[(429), float64]) {
  %174 = @func_2915() /* ty=Tensor[(1, 512), float32] */;
  %175 = cast(%174, dtype="float32") /* ty=Tensor[(1, 512), float32] */;
  %176 = cast(%var_3631, dtype="float32") /* ty=Tensor[(16, 512), float32] */;
  %177 = @func_2780() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %178 = cast(%var_3639, dtype="uint32") /* ty=Tensor[(390), uint32] */;
  %179 = cast(%var_3639, dtype="uint32") /* ty=Tensor[(390), uint32] */;
  %180 = reshape(%178, newshape=[13, 15, 2]) /* ty=Tensor[(13, 15, 2), uint32] */;
  %181 = reshape(%179, newshape=[13, 15, 2]) /* ty=Tensor[(13, 15, 2), uint32] */;
  %182 = @func_2741() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(13, 15, 2), uint32], Tensor[(65, 6), uint32], Tensor[(12, 10, 1), float32], Tensor[(16, 16, 2), bool], Tensor[(1, 512), float32], Tensor[(1040), float64]) */;
  %183 = cast(meta[relay.Constant][9] /* ty=Tensor[(231), float64] */, dtype="float64") /* ty=Tensor[(231), float64] */;
  %184 = cast(%var_3651, dtype="float64") /* ty=Tensor[(429), float64] */;
  %185 = cast(%174, dtype="float32") /* ty=Tensor[(1, 512), float32] */;
  %186 = reshape(%183, newshape=[231]) /* ty=Tensor[(231), float64] */;
  %187 = reshape(%184, newshape=[429]) /* ty=Tensor[(429), float64] */;
  %188 = reshape(%185, newshape=[512]) /* ty=Tensor[(512), float32] */;
  %189 = @func_3580(%186, %187, %188) /* ty=(Tensor[(12, 10, 1), float32], Tensor[(12, 12, 13), int16], Tensor[(231), float64], Tensor[(16, 16, 2), bool], Tensor[(512), float32], Tensor[(1040), float64], Tensor[(429), float32], Tensor[(1872), bool]) */;
  %190 = add(%175, %176) /* ty=Tensor[(16, 512), float32] */;
  %191 = %177.0;
  %192 = @func_211(%180, %181) /* ty=Tensor[(13, 15, 2), uint32] */;
  %193 = %182.3;
  %194 = %189.2;
  (%190, %191, %192, %var_3639, %193, %194, meta[relay.Constant][9] /* ty=Tensor[(231), float64] */, %var_3651)
}

def @func_5603(%var_5588: Tensor[(784), float64]) -> (Tensor[(12, 10, 1), float32], Tensor[(8, 14, 7), float64], Tensor[(784), int16]) {
  %195 = cast(meta[relay.Constant][10] /* ty=Tensor[(784), float64] */, dtype="float64") /* ty=Tensor[(784), float64] */;
  %196 = reshape(%195, newshape=[8, 14, 7]) /* ty=Tensor[(8, 14, 7), float64] */;
  %197 = @func_5560(%196) /* ty=(Tensor[(8, 14, 7), float64],) */;
  %198 = cast(%var_5588, dtype="int16") /* ty=Tensor[(784), int16] */;
  %199 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(784), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %200 = cast(meta[relay.Constant][10] /* ty=Tensor[(784), float64] */, dtype="int16") /* ty=Tensor[(784), int16] */;
  %201 = dyn.reshape(%198, %199, newshape=[]) /* ty=Tensor[(?), int16] */;
  %202 = @func_4001() /* ty=Tensor[(12, 10, 1), float32] */;
  %203 = %197.0;
  %204 = right_shift(%200, %201) /* ty=Tensor[(784), int16] */;
  (%202, %203, %204)
}

def @func_186(%var_181: Tensor[(10, 13, 8), float64]) -> Tensor[(10, 13, 8), float64] {
  %205 = cast(%var_181, dtype="float64") /* ty=Tensor[(10, 13, 8), float64] */;
  %206 = tan(%205) /* ty=Tensor[(10, 13, 8), float64] */;
  %207 = cast(%206, dtype="float64") /* ty=Tensor[(10, 13, 8), float64] */;
  atanh(%207) /* ty=Tensor[(10, 13, 8), float64] */
}

def @func_8339() -> Tensor[(12, 10, 1), float32] {
  %208 = @func_5144() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(1, 512), float32]) */;
  %208.0
}

def @func_10280() -> (Tensor[(?, 512), uint32],) {
  %209 = @func_4074() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(?, 512), uint32], Tensor[(512), float32]) */;
  %210 = %209.1;
  (%210,)
}

def @func_7573() -> (Tensor[(1120), int16], Tensor[(1, 512), float32], Tensor[(12, 10, 1), float32], Tensor[(1, 3, 4), float32], Tensor[(1232), uint8], Tensor[(12), float32], Tensor[(1, 512), float32]) {
  %211 = @func_6136() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32], Tensor[(1, 512), float32], Tensor[(13, 15, 2), uint32], Tensor[(1120), int16], Tensor[(1040), float64]) */;
  %212 = @func_3791() /* ty=(Tensor[(1, 512), float32], Tensor[(12, 10, 1), float32]) */;
  %213 = cast(meta[relay.Constant][11] /* ty=Tensor[(1232), uint8] */, dtype="uint8") /* ty=Tensor[(1232), uint8] */;
  %214 = cast(meta[relay.Constant][12] /* ty=Tensor[(12), float32] */, dtype="float32") /* ty=Tensor[(12), float32] */;
  %215 = reshape(%213, newshape=[2, 616]) /* ty=Tensor[(2, 616), uint8] */;
  %216 = reshape(%214, newshape=[12]) /* ty=Tensor[(12), float32] */;
  %217 = @func_3348(%215, %216) /* ty=(Tensor[(1, 3, 4), float32], Tensor[(2, 616), uint8], Tensor[(12, 10, 12), float64], Tensor[(12, 10, ?), bool]) */;
  %218 = %211.4;
  %219 = %212.0;
  %220 = @func_5745() /* ty=Tensor[(12, 10, 1), float32] */;
  %221 = %217.0;
  %222 = @func_2903() /* ty=Tensor[(1, 512), float32] */;
  (%218, %219, %220, %221, meta[relay.Constant][11] /* ty=Tensor[(1232), uint8] */, meta[relay.Constant][12] /* ty=Tensor[(12), float32] */, %222)
}

def @func_8938() -> (Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32]) {
  %223 = @func_3960() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %224 = @func_4180() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %225 = %223.0;
  %226 = %224.0;
  (%225, %226)
}

def @func_5947() -> (Tensor[(?, 512), int16], Tensor[(?, 512), uint32]) {
  %227 = @func_4758() /* ty=(Tensor[(1, 512), float32], Tensor[(1, 512), float32], Tensor[(12, 10, 1), float32]) */;
  %228 = %227.1;
  %229 = cast(%228, dtype="float64") /* ty=Tensor[(1, 512), float64] */;
  %230 = sqrt(%229) /* ty=Tensor[(1, 512), float64] */;
  %231 = cast(%230, dtype="int16") /* ty=Tensor[(1, 512), int16] */;
  %232 = shape_of(%228, dtype="int32") /* ty=Tensor[(2), int32] */;
  %233 = cast(%228, dtype="int16") /* ty=Tensor[(1, 512), int16] */;
  %234 = dyn.reshape(%231, %232, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %235 = cast(%230, dtype="uint32") /* ty=Tensor[(1, 512), uint32] */;
  %236 = shape_of(%228, dtype="int32") /* ty=Tensor[(2), int32] */;
  %237 = cast(%228, dtype="uint32") /* ty=Tensor[(1, 512), uint32] */;
  %238 = dyn.reshape(%235, %236, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %239 = bitwise_or(%233, %234) /* ty=Tensor[(?, 512), int16] */;
  %240 = maximum(%237, %238) /* ty=Tensor[(?, 512), uint32] */;
  (%239, %240)
}

def @func_7162() -> (Tensor[(1, 512), float32], Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32], Tensor[(1, 512), float32], Tensor[(12, 10, 1), float32], Tensor[(1280, 4), uint32], Tensor[(13, 15, 2), uint32]) {
  %241 = @func_4406() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32]) */;
  %242 = @func_5993() /* ty=(Tensor[(1, 512), float32],) */;
  %243 = cast(meta[relay.Constant][13] /* ty=Tensor[(1280, 4), uint32] */, dtype="uint32") /* ty=Tensor[(1280, 4), uint32] */;
  %244 = reshape(%243, newshape=[10, 512]) /* ty=Tensor[(10, 512), uint32] */;
  %245 = @func_7117(%244) /* ty=(Tensor[(10, 512), bool], Tensor[(12, 10, 1), float32], Tensor[(10, 512), float64]) */;
  %246 = @func_2741() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(13, 15, 2), uint32], Tensor[(65, 6), uint32], Tensor[(12, 10, 1), float32], Tensor[(16, 16, 2), bool], Tensor[(1, 512), float32], Tensor[(1040), float64]) */;
  %247 = @func_2903() /* ty=Tensor[(1, 512), float32] */;
  %248 = @func_5377() /* ty=Tensor[(12, 10, 1), float32] */;
  %249 = %241.0;
  %250 = %242.0;
  %251 = %245.1;
  %252 = %246.1;
  (%247, %248, %249, %250, %251, meta[relay.Constant][13] /* ty=Tensor[(1280, 4), uint32] */, %252)
}

def @func_7420() -> (Tensor[(?, 512), uint32], Tensor[(12, 12, 13), int16], Tensor[(1872), bool]) {
  %253 = @func_4074() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(?, 512), uint32], Tensor[(512), float32]) */;
  %254 = cast(meta[relay.Constant][14] /* ty=Tensor[(1872), bool] */, dtype="bool") /* ty=Tensor[(1872), bool] */;
  %255 = reshape(%254, newshape=[12, 12, 13]) /* ty=Tensor[(12, 12, 13), bool] */;
  %256 = %253.1;
  %257 = @func_667(%255) /* ty=Tensor[(12, 12, 13), int16] */;
  (%256, %257, meta[relay.Constant][14] /* ty=Tensor[(1872), bool] */)
}

def @func_8765(%var_8758: Tensor[(6, 512), float64]) -> Tensor[(6, 512), int64] {
  %258 = @func_5715() /* ty=(Tensor[(6, 512), float64],) */;
  %259 = %258.0;
  %260 = cast(%var_8758, dtype="int64") /* ty=Tensor[(6, 512), int64] */;
  %261 = shape_of(%259, dtype="int32") /* ty=Tensor[(2), int32] */;
  %262 = cast(%259, dtype="int64") /* ty=Tensor[(6, 512), int64] */;
  %263 = dyn.reshape(%260, %261, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  logical_xor(%262, %263) /* ty=Tensor[(6, 512), int64] */
}

def @func_2780() -> (Tensor[(12, 10, 1), float32],) {
  %264 = @func_2711() /* ty=(Tensor[(12, 10, 11), bool], Tensor[(12, 10, 1), float32], Tensor[(12, 12, 13), int16], Tensor[(1872), bool], Tensor[(12, 10, 1), float32]) */;
  %265 = %264.4;
  (%265,)
}

def @func_4237() -> (Tensor[(1, 512), float32], Tensor[(15, 4, 5), bool], Tensor[(150, 2), bool]) {
  %266 = @func_2842() /* ty=(Tensor[(1, 512), float32],) */;
  %267 = cast(meta[relay.Constant][15] /* ty=Tensor[(150, 2), bool] */, dtype="bool") /* ty=Tensor[(150, 2), bool] */;
  %268 = reshape(%267, newshape=[15, 4, 5]) /* ty=Tensor[(15, 4, 5), bool] */;
  %269 = @func_3384(%268) /* ty=(Tensor[(15, 4, 5), bool],) */;
  %270 = %266.0;
  %271 = %269.0;
  (%270, %271, meta[relay.Constant][15] /* ty=Tensor[(150, 2), bool] */)
}

def @func_4166() -> (Tensor[(12, 10, 1), float32],) {
  %272 = @func_3422() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %273 = %272.0;
  (%273,)
}

def @func_8435(%var_8432: Tensor[(11, 13, 3), float64]) -> (Tensor[(11, 13, 3), float64],) {
  %274 = cast(%var_8432, dtype="float64") /* ty=Tensor[(11, 13, 3), float64] */;
  %275 = sin(%274) /* ty=Tensor[(11, 13, 3), float64] */;
  (%275,)
}

def @func_3396(%var_3392: Tensor[(12, 3, 1), float64]) -> Tensor[(12, 3, 1), float64] {
  %276 = cast(%var_3392, dtype="float64") /* ty=Tensor[(12, 3, 1), float64] */;
  log2(%276) /* ty=Tensor[(12, 3, 1), float64] */
}

def @func_8103(%var_8083: Tensor[(231), float64], %var_8087: Tensor[(12, 512), float32]) -> (Tensor[(231), float64], Tensor[(231), float64], Tensor[(12, 512), uint64], Tensor[(12, 10, 429), bool]) {
  %277 = cast(%var_8083, dtype="float64") /* ty=Tensor[(231), float64] */;
  %278 = cast(meta[relay.Constant][16] /* ty=Tensor[(429), float64] */, dtype="float64") /* ty=Tensor[(429), float64] */;
  %279 = @func_6053() /* ty=(Tensor[(1, 512), float32], Tensor[(1, 512), float32]) */;
  %280 = %279.0;
  %281 = cast(%280, dtype="float32") /* ty=Tensor[(1, 512), float32] */;
  %282 = reshape(%277, newshape=[231]) /* ty=Tensor[(231), float64] */;
  %283 = reshape(%278, newshape=[429]) /* ty=Tensor[(429), float64] */;
  %284 = reshape(%281, newshape=[512]) /* ty=Tensor[(512), float32] */;
  %285 = @func_3580(%282, %283, %284) /* ty=(Tensor[(12, 10, 1), float32], Tensor[(12, 12, 13), int16], Tensor[(231), float64], Tensor[(16, 16, 2), bool], Tensor[(512), float32], Tensor[(1040), float64], Tensor[(429), float32], Tensor[(1872), bool]) */;
  %286 = cast(%280, dtype="uint64") /* ty=Tensor[(1, 512), uint64] */;
  %287 = cast(%var_8087, dtype="uint64") /* ty=Tensor[(12, 512), uint64] */;
  %288 = @func_2512() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %289 = %288.0;
  %290 = cast(meta[relay.Constant][16] /* ty=Tensor[(429), float64] */, dtype="bool") /* ty=Tensor[(429), bool] */;
  %291 = cast(%289, dtype="bool") /* ty=Tensor[(12, 10, 1), bool] */;
  %292 = %285.2;
  %293 = bitwise_and(%286, %287) /* ty=Tensor[(12, 512), uint64] */;
  %294 = equal(%290, %291) /* ty=Tensor[(12, 10, 429), bool] */;
  (%292, %var_8083, %293, %294)
}

def @func_381(%var_367: Tensor[(3, 11, 7), float64]) -> (Tensor[(10, 13, 8), float64], Tensor[(1040), float64], Tensor[(10, 13, 8), float64], Tensor[(13, 15, 2), uint32], Tensor[(390), uint32], Tensor[(3, 11, 7), float64], Tensor[(10, 13, 8), float64]) {
  %295 = cast(meta[relay.Constant][17] /* ty=Tensor[(1040), float64] */, dtype="float64") /* ty=Tensor[(1040), float64] */;
  %296 = reshape(%295, newshape=[10, 13, 8]) /* ty=Tensor[(10, 13, 8), float64] */;
  %297 = cast(meta[relay.Constant][17] /* ty=Tensor[(1040), float64] */, dtype="float64") /* ty=Tensor[(1040), float64] */;
  %298 = reshape(%297, newshape=[10, 13, 8]) /* ty=Tensor[(10, 13, 8), float64] */;
  %299 = cast(meta[relay.Constant][18] /* ty=Tensor[(390), uint32] */, dtype="uint32") /* ty=Tensor[(390), uint32] */;
  %300 = cast(meta[relay.Constant][18] /* ty=Tensor[(390), uint32] */, dtype="uint32") /* ty=Tensor[(390), uint32] */;
  %301 = reshape(%299, newshape=[13, 15, 2]) /* ty=Tensor[(13, 15, 2), uint32] */;
  %302 = reshape(%300, newshape=[13, 15, 2]) /* ty=Tensor[(13, 15, 2), uint32] */;
  %303 = cast(meta[relay.Constant][19] /* ty=Tensor[(3, 11, 7), float64] */, dtype="float64") /* ty=Tensor[(3, 11, 7), float64] */;
  %304 = asin(%303) /* ty=Tensor[(3, 11, 7), float64] */;
  %305 = cast(%var_367, dtype="float64") /* ty=Tensor[(3, 11, 7), float64] */;
  %306 = shape_of(%304, dtype="int32") /* ty=Tensor[(3), int32] */;
  %307 = cast(%304, dtype="float64") /* ty=Tensor[(3, 11, 7), float64] */;
  %308 = dyn.reshape(%305, %306, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %309 = @func_186(%298) /* ty=Tensor[(10, 13, 8), float64] */;
  %310 = cast(%309, dtype="float64") /* ty=Tensor[(10, 13, 8), float64] */;
  %311 = reshape(%310, newshape=[10, 13, 8]) /* ty=Tensor[(10, 13, 8), float64] */;
  %312 = @func_186(%296) /* ty=Tensor[(10, 13, 8), float64] */;
  %313 = @func_211(%301, %302) /* ty=Tensor[(13, 15, 2), uint32] */;
  %314 = divide(%307, %308) /* ty=Tensor[(3, 11, 7), float64] */;
  %315 = @func_186(%311) /* ty=Tensor[(10, 13, 8), float64] */;
  (%312, meta[relay.Constant][17] /* ty=Tensor[(1040), float64] */, %309, %313, meta[relay.Constant][18] /* ty=Tensor[(390), uint32] */, %314, %315)
}

def @func_5092(%var_5066: int16, %var_5067: Tensor[(4, 1, 6), int16]) -> (Tensor[(4, 1, 6), int16], Tensor[(?, 512), uint32]) {
  %316 = cast(%var_5066, dtype="int16") /* ty=int16 */;
  %317 = cast(%var_5067, dtype="int16") /* ty=Tensor[(4, 1, 6), int16] */;
  %318 = @func_4074() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(?, 512), uint32], Tensor[(512), float32]) */;
  %319 = bitwise_xor(%316, %317) /* ty=Tensor[(4, 1, 6), int16] */;
  %320 = %318.1;
  (%319, %320)
}

def @func_6083() -> (Tensor[(12, 10, 8), bool],) {
  %321 = @func_2428() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %322 = %321.0;
  %323 = @func_5784() /* ty=Tensor[(12, 10, 8), bool] */;
  %324 = cast(%322, dtype="bool") /* ty=Tensor[(12, 10, 1), bool] */;
  %325 = cast(%323, dtype="bool") /* ty=Tensor[(12, 10, 8), bool] */;
  %326 = logical_or(%324, %325) /* ty=Tensor[(12, 10, 8), bool] */;
  (%326,)
}

def @func_3278(%var_3263: Tensor[(12, 10, 1), float32]) -> Tensor[(12, 10, ?), bool] {
  %327 = @func_2512() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %328 = %327.0;
  %329 = cast(%var_3263, dtype="bool") /* ty=Tensor[(12, 10, 1), bool] */;
  %330 = shape_of(%328, dtype="int32") /* ty=Tensor[(3), int32] */;
  %331 = cast(%328, dtype="bool") /* ty=Tensor[(12, 10, 1), bool] */;
  %332 = dyn.reshape(%329, %330, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%331, %332) /* ty=Tensor[(12, 10, ?), bool] */
}

def @func_8589() -> Tensor[(1, 512), float32] {
  %333 = @func_6609() /* ty=(Tensor[(1, 512), float32], Tensor[(12, 10, 1), float32]) */;
  %333.0
}

def @func_9850(%var_9817: Tensor[(11, 9, 8), uint16]) -> (Tensor[(11, 9, 8), bool], Tensor[(12, 10, 1), float32], Tensor[(504), float32]) {
  %334 = cast(meta[relay.Constant][20] /* ty=Tensor[(11, 9, 8), uint16] */, dtype="bool") /* ty=Tensor[(11, 9, 8), bool] */;
  %335 = shape_of(%var_9817, dtype="int32") /* ty=Tensor[(3), int32] */;
  %336 = cast(%var_9817, dtype="bool") /* ty=Tensor[(11, 9, 8), bool] */;
  %337 = dyn.reshape(%334, %335, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %338 = cast(meta[relay.Constant][21] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
  %339 = reshape(%338, newshape=[4, 14, 9]) /* ty=Tensor[(4, 14, 9), float32] */;
  %340 = @func_7996(%339) /* ty=(Tensor[(4, 14, 9), float32], Tensor[(12, 10, 1), float32]) */;
  %341 = greater(%336, %337) /* ty=Tensor[(11, 9, 8), bool] */;
  %342 = %340.1;
  (%341, %342, meta[relay.Constant][21] /* ty=Tensor[(504), float32] */)
}

def @func_4916() -> (Tensor[(12, 10, 1), float32],) {
  %343 = @func_4431() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %344 = %343.0;
  (%344,)
}

def @func_9967() -> (Tensor[(12), float32], Tensor[(12, 10, 1), float32]) {
  %345 = @func_7310() /* ty=(Tensor[(1, 512), float32], Tensor[(12), float32], Tensor[(1248), float32]) */;
  %346 = %345.1;
  %347 = @func_2650() /* ty=Tensor[(12, 10, 1), float32] */;
  (%346, %347)
}

def @func_7611() -> Tensor[(12, 10, 1), float32] {
  %348 = @func_3422() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %348.0
}

def @func_7834(%var_7791: Tensor[(5120), uint32], %var_7818: Tensor[(11, 21), float64]) -> (Tensor[(12, 10, 1), float32], Tensor[(?, 512), uint32], Tensor[(5120), float32], Tensor[(12, 10, 1), float32], Tensor[(1, 512), float32], Tensor[(11, 21), float64], Tensor[(429), float64], Tensor[(4096), float32], Tensor[(12, 10, 1), float32], Tensor[(5120), int64]) {
  %349 = @func_6190() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32]) */;
  %350 = @func_4074() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(?, 512), uint32], Tensor[(512), float32]) */;
  %351 = cast(%var_7791, dtype="uint32") /* ty=Tensor[(5120), uint32] */;
  %352 = reshape(%351, newshape=[10, 512]) /* ty=Tensor[(10, 512), uint32] */;
  %353 = @func_7117(%352) /* ty=(Tensor[(10, 512), bool], Tensor[(12, 10, 1), float32], Tensor[(10, 512), float64]) */;
  %354 = %353.0;
  %355 = cast(%354, dtype="float32") /* ty=Tensor[(10, 512), float32] */;
  %356 = shape_of(%var_7791, dtype="int32") /* ty=Tensor[(1), int32] */;
  %357 = cast(%var_7791, dtype="float32") /* ty=Tensor[(5120), float32] */;
  %358 = dyn.reshape(%355, %356, newshape=[]) /* ty=Tensor[(?), float32] */;
  %359 = @func_4618() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %360 = cast(%var_7818, dtype="float64") /* ty=Tensor[(11, 21), float64] */;
  %361 = cast(meta[relay.Constant][22] /* ty=Tensor[(429), float64] */, dtype="float64") /* ty=Tensor[(429), float64] */;
  %362 = cast(meta[relay.Constant][23] /* ty=Tensor[(4096), float32] */, dtype="float32") /* ty=Tensor[(4096), float32] */;
  %363 = reshape(%360, newshape=[231]) /* ty=Tensor[(231), float64] */;
  %364 = reshape(%361, newshape=[429, 1]) /* ty=Tensor[(429, 1), float64] */;
  %365 = reshape(%362, newshape=[4096]) /* ty=Tensor[(4096), float32] */;
  %366 = @func_4858(%363, %364, %365) /* ty=(Tensor[(1, 512), float32], Tensor[(12, 12, 13), int16], Tensor[(231), float64], Tensor[(429, 1), float64], Tensor[(8, 512), bool], Tensor[(4096), float32]) */;
  %367 = cast(%var_7791, dtype="float64") /* ty=Tensor[(5120), float64] */;
  %368 = asinh(%367) /* ty=Tensor[(5120), float64] */;
  %369 = cast(%354, dtype="float32") /* ty=Tensor[(10, 512), float32] */;
  %370 = asin(%369) /* ty=Tensor[(10, 512), float32] */;
  %371 = cast(%370, dtype="int64") /* ty=Tensor[(10, 512), int64] */;
  %372 = shape_of(%368, dtype="int32") /* ty=Tensor[(1), int32] */;
  %373 = cast(%368, dtype="int64") /* ty=Tensor[(5120), int64] */;
  %374 = dyn.reshape(%371, %372, newshape=[]) /* ty=Tensor[(?), int64] */;
  %375 = %349.3;
  %376 = %350.1;
  %377 = maximum(%357, %358) /* ty=Tensor[(5120), float32] */;
  %378 = %359.0;
  %379 = %366.0;
  %380 = @func_3481() /* ty=Tensor[(12, 10, 1), float32] */;
  %381 = left_shift(%373, %374) /* ty=Tensor[(5120), int64] */;
  (%375, %376, %377, %378, %379, %var_7818, meta[relay.Constant][22] /* ty=Tensor[(429), float64] */, meta[relay.Constant][23] /* ty=Tensor[(4096), float32] */, %380, %381)
}

def @func_9980(%var_9971: uint8, %var_9972: Tensor[(1, 7, 3), uint8]) -> (Tensor[(1, 7, 3), uint8], Tensor[(15, 512), float32], Tensor[(7680), uint32]) {
  %382 = cast(%var_9971, dtype="uint8") /* ty=uint8 */;
  %383 = cast(%var_9972, dtype="uint8") /* ty=Tensor[(1, 7, 3), uint8] */;
  %384 = cast(meta[relay.Constant][24] /* ty=Tensor[(7680), uint32] */, dtype="uint32") /* ty=Tensor[(7680), uint32] */;
  %385 = reshape(%384, newshape=[15, 512]) /* ty=Tensor[(15, 512), uint32] */;
  %386 = logical_xor(%382, %383) /* ty=Tensor[(1, 7, 3), uint8] */;
  %387 = @func_8959(%385) /* ty=Tensor[(15, 512), float32] */;
  (%386, %387, meta[relay.Constant][24] /* ty=Tensor[(7680), uint32] */)
}

def @func_3348(%var_3303: Tensor[(2, 616), uint8], %var_3304: Tensor[(12), float32]) -> (Tensor[(1, 3, 4), float32], Tensor[(2, 616), uint8], Tensor[(12, 10, 12), float64], Tensor[(12, 10, ?), bool]) {
  %388 = cast(%var_3303, dtype="uint8") /* ty=Tensor[(2, 616), uint8] */;
  %389 = cast(%var_3304, dtype="float32") /* ty=Tensor[(12), float32] */;
  %390 = reshape(%388, newshape=[14, 11, 8]) /* ty=Tensor[(14, 11, 8), uint8] */;
  %391 = reshape(%389, newshape=[12]) /* ty=Tensor[(12), float32] */;
  %392 = @func_624(%390, %391) /* ty=(Tensor[(14, 11, 8), bool], Tensor[(1, 3, 4), float32], Tensor[(12), float32]) */;
  %393 = @func_2428() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %394 = %393.0;
  %395 = cast(%394, dtype="float32") /* ty=Tensor[(12, 10, 1), float32] */;
  %396 = acosh(%395) /* ty=Tensor[(12, 10, 1), float32] */;
  %397 = cast(%396, dtype="float64") /* ty=Tensor[(12, 10, 1), float64] */;
  %398 = cast(%var_3304, dtype="float64") /* ty=Tensor[(12), float64] */;
  %399 = cast(%394, dtype="bool") /* ty=Tensor[(12, 10, 1), bool] */;
  %400 = shape_of(%396, dtype="int32") /* ty=Tensor[(3), int32] */;
  %401 = cast(%396, dtype="bool") /* ty=Tensor[(12, 10, 1), bool] */;
  %402 = dyn.reshape(%399, %400, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %403 = %392.1;
  %404 = floor_divide(%397, %398) /* ty=Tensor[(12, 10, 12), float64] */;
  %405 = not_equal(%401, %402) /* ty=Tensor[(12, 10, ?), bool] */;
  (%403, %var_3303, %404, %405)
}

def @func_4589() -> (Tensor[(12, 10, 1), float32], Tensor[(390), uint32], Tensor[(12), float32]) {
  %406 = @func_4406() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32]) */;
  %407 = cast(meta[relay.Constant][25] /* ty=Tensor[(12), float32] */, dtype="float32") /* ty=Tensor[(12), float32] */;
  %408 = reshape(%407, newshape=[1, 3, 4]) /* ty=Tensor[(1, 3, 4), float32] */;
  %409 = @func_524(%408) /* ty=(Tensor[(1, 3, 4), float32], Tensor[(13, 15, 2), uint32], Tensor[(390), uint32]) */;
  %410 = %406.1;
  %411 = %409.2;
  (%410, %411, meta[relay.Constant][25] /* ty=Tensor[(12), float32] */)
}

def @func_6627() -> (Tensor[(12, 10, 13), bool],) {
  %412 = @func_2408() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %413 = %412.0;
  %414 = cast(%413, dtype="bool") /* ty=Tensor[(12, 10, 1), bool] */;
  %415 = cast(meta[relay.Constant][26] /* ty=Tensor[(12, 10, 13), float32] */, dtype="bool") /* ty=Tensor[(12, 10, 13), bool] */;
  %416 = less(%414, %415) /* ty=Tensor[(12, 10, 13), bool] */;
  (%416,)
}

def @func_4618() -> (Tensor[(12, 10, 1), float32],) {
  %417 = @func_3791() /* ty=(Tensor[(1, 512), float32], Tensor[(12, 10, 1), float32]) */;
  %418 = %417.1;
  (%418,)
}

def @func_3704(%var_3686: Tensor[(1, 512), float32]) -> Tensor[(?, 512), uint32] {
  %419 = @func_2915() /* ty=Tensor[(1, 512), float32] */;
  %420 = cast(%var_3686, dtype="uint32") /* ty=Tensor[(1, 512), uint32] */;
  %421 = shape_of(%419, dtype="int32") /* ty=Tensor[(2), int32] */;
  %422 = cast(%419, dtype="uint32") /* ty=Tensor[(1, 512), uint32] */;
  %423 = dyn.reshape(%420, %421, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  logical_xor(%422, %423) /* ty=Tensor[(?, 512), uint32] */
}

def @func_7680() -> Tensor[(12, 10, 1), float32] {
  %424 = @func_6275() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32]) */;
  %424.1
}

def @func_9779() -> (Tensor[(12, 10, 1), float32],) {
  %425 = @func_3960() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %426 = %425.0;
  (%426,)
}

def @func_2408() -> (Tensor[(12, 10, 1), float32],) {
  %427 = cast(meta[relay.Constant][27] /* ty=Tensor[(12, 10, 1), float32] */, dtype="float32") /* ty=Tensor[(12, 10, 1), float32] */;
  %428 = sigmoid(%427) /* ty=Tensor[(12, 10, 1), float32] */;
  (%428,)
}

def @func_9277() -> (Tensor[(13, 15, 2), uint32],) {
  %429 = @func_2741() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(13, 15, 2), uint32], Tensor[(65, 6), uint32], Tensor[(12, 10, 1), float32], Tensor[(16, 16, 2), bool], Tensor[(1, 512), float32], Tensor[(1040), float64]) */;
  %430 = %429.1;
  (%430,)
}

def @func_7202() -> Tensor[(12, 10, 1), float32] {
  @func_4001() /* ty=Tensor[(12, 10, 1), float32] */
}

def @func_2650() -> Tensor[(12, 10, 1), float32] {
  %431 = @func_2408() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %431.0
}

def @func_9815() -> (Tensor[(1, 512), float32], Tensor[(12, 10, 1), float32]) {
  %432 = @func_3791() /* ty=(Tensor[(1, 512), float32], Tensor[(12, 10, 1), float32]) */;
  %433 = @func_4618() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %434 = %432.0;
  %435 = %433.0;
  (%434, %435)
}

def @func_10092(%var_10048: Tensor[(6, 512), float64], %var_10055: Tensor[(6, 512), int8], %var_10079: Tensor[(792), uint16], %var_10087: Tensor[(6, 512), float32]) -> (Tensor[(12, 10, ?), bool], Tensor[(6, 512), bool], Tensor[(12, 10, ?), float64], Tensor[(6, 512), int64], Tensor[(12, 10, 1), float32], Tensor[(792), uint16], Tensor[(6, 512), bool]) {
  %436 = @func_2650() /* ty=Tensor[(12, 10, 1), float32] */;
  %437 = @func_3960() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %438 = %437.0;
  %439 = cast(%438, dtype="bool") /* ty=Tensor[(12, 10, 1), bool] */;
  %440 = shape_of(%436, dtype="int32") /* ty=Tensor[(3), int32] */;
  %441 = cast(%436, dtype="bool") /* ty=Tensor[(12, 10, 1), bool] */;
  %442 = dyn.reshape(%439, %440, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %443 = @func_5715() /* ty=(Tensor[(6, 512), float64],) */;
  %444 = %443.0;
  %445 = cast(%var_10048, dtype="int8") /* ty=Tensor[(6, 512), int8] */;
  %446 = shape_of(%444, dtype="int32") /* ty=Tensor[(2), int32] */;
  %447 = cast(%444, dtype="int8") /* ty=Tensor[(6, 512), int8] */;
  %448 = dyn.reshape(%445, %446, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %449 = right_shift(%447, %448) /* ty=Tensor[(6, 512), int8] */;
  %450 = cast(%var_10055, dtype="bool") /* ty=Tensor[(6, 512), bool] */;
  %451 = shape_of(%449, dtype="int32") /* ty=Tensor[(2), int32] */;
  %452 = cast(%449, dtype="bool") /* ty=Tensor[(6, 512), bool] */;
  %453 = dyn.reshape(%450, %451, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %454 = @func_4180() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %455 = %454.0;
  %456 = cast(%436, dtype="float64") /* ty=Tensor[(12, 10, 1), float64] */;
  %457 = shape_of(%455, dtype="int32") /* ty=Tensor[(3), int32] */;
  %458 = cast(%455, dtype="float64") /* ty=Tensor[(12, 10, 1), float64] */;
  %459 = dyn.reshape(%456, %457, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %460 = cast(%var_10048, dtype="int64") /* ty=Tensor[(6, 512), int64] */;
  %461 = shape_of(%444, dtype="int32") /* ty=Tensor[(2), int32] */;
  %462 = cast(%444, dtype="int64") /* ty=Tensor[(6, 512), int64] */;
  %463 = dyn.reshape(%460, %461, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %464 = cast(%var_10079, dtype="uint16") /* ty=Tensor[(792), uint16] */;
  %465 = reshape(%464, newshape=[11, 9, 8]) /* ty=Tensor[(11, 9, 8), uint16] */;
  %466 = @func_9850(%465) /* ty=(Tensor[(11, 9, 8), bool], Tensor[(12, 10, 1), float32], Tensor[(504), float32]) */;
  %467 = cast(%449, dtype="float32") /* ty=Tensor[(6, 512), float32] */;
  %468 = acosh(%467) /* ty=Tensor[(6, 512), float32] */;
  %469 = cast(%var_10087, dtype="bool") /* ty=Tensor[(6, 512), bool] */;
  %470 = shape_of(%468, dtype="int32") /* ty=Tensor[(2), int32] */;
  %471 = cast(%468, dtype="bool") /* ty=Tensor[(6, 512), bool] */;
  %472 = dyn.reshape(%469, %470, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %473 = less(%441, %442) /* ty=Tensor[(12, 10, ?), bool] */;
  %474 = equal(%452, %453) /* ty=Tensor[(6, 512), bool] */;
  %475 = multiply(%458, %459) /* ty=Tensor[(12, 10, ?), float64] */;
  %476 = bitwise_or(%462, %463) /* ty=Tensor[(6, 512), int64] */;
  %477 = %466.1;
  %478 = logical_and(%471, %472) /* ty=Tensor[(6, 512), bool] */;
  (%473, %474, %475, %476, %477, %var_10079, %478)
}

def @func_4180() -> (Tensor[(12, 10, 1), float32],) {
  %479 = @func_4001() /* ty=Tensor[(12, 10, 1), float32] */;
  (%479,)
}

def @func_2486(%var_2474: Tensor[(231), float64]) -> (Tensor[(12, 10, 1), float32], Tensor[(13, 15, 2), uint32], Tensor[(390), uint32], Tensor[(12, 10, 1), float32], Tensor[(1040), float64], Tensor[(231), float64]) {
  %480 = @func_2408() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %481 = cast(meta[relay.Constant][28] /* ty=Tensor[(390), uint32] */, dtype="uint32") /* ty=Tensor[(390), uint32] */;
  %482 = cast(meta[relay.Constant][28] /* ty=Tensor[(390), uint32] */, dtype="uint32") /* ty=Tensor[(390), uint32] */;
  %483 = reshape(%481, newshape=[13, 15, 2]) /* ty=Tensor[(13, 15, 2), uint32] */;
  %484 = reshape(%482, newshape=[13, 15, 2]) /* ty=Tensor[(13, 15, 2), uint32] */;
  %485 = @func_2428() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %486 = cast(%var_2474, dtype="float64") /* ty=Tensor[(231), float64] */;
  %487 = reshape(%486, newshape=[3, 11, 7]) /* ty=Tensor[(3, 11, 7), float64] */;
  %488 = @func_381(%487) /* ty=(Tensor[(10, 13, 8), float64], Tensor[(1040), float64], Tensor[(10, 13, 8), float64], Tensor[(13, 15, 2), uint32], Tensor[(390), uint32], Tensor[(3, 11, 7), float64], Tensor[(10, 13, 8), float64]) */;
  %489 = %480.0;
  %490 = @func_211(%483, %484) /* ty=Tensor[(13, 15, 2), uint32] */;
  %491 = %485.0;
  %492 = %488.1;
  (%489, %490, meta[relay.Constant][28] /* ty=Tensor[(390), uint32] */, %491, %492, %var_2474)
}

def @func_8303() -> (Tensor[(5, 9, 11), float64],) {
  %493 = cast(meta[relay.Constant][29] /* ty=Tensor[(5, 9, 11), float64] */, dtype="float64") /* ty=Tensor[(5, 9, 11), float64] */;
  %494 = sigmoid(%493) /* ty=Tensor[(5, 9, 11), float64] */;
  (%494,)
}

def @func_5012() -> (Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32]) {
  %495 = @func_4916() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %496 = @func_4758() /* ty=(Tensor[(1, 512), float32], Tensor[(1, 512), float32], Tensor[(12, 10, 1), float32]) */;
  %497 = %495.0;
  %498 = %496.2;
  (%497, %498)
}

def @func_2741() -> (Tensor[(12, 10, 1), float32], Tensor[(13, 15, 2), uint32], Tensor[(65, 6), uint32], Tensor[(12, 10, 1), float32], Tensor[(16, 16, 2), bool], Tensor[(1, 512), float32], Tensor[(1040), float64]) {
  %499 = cast(meta[relay.Constant][30] /* ty=Tensor[(65, 6), uint32] */, dtype="uint32") /* ty=Tensor[(65, 6), uint32] */;
  %500 = cast(meta[relay.Constant][30] /* ty=Tensor[(65, 6), uint32] */, dtype="uint32") /* ty=Tensor[(65, 6), uint32] */;
  %501 = reshape(%499, newshape=[13, 15, 2]) /* ty=Tensor[(13, 15, 2), uint32] */;
  %502 = reshape(%500, newshape=[13, 15, 2]) /* ty=Tensor[(13, 15, 2), uint32] */;
  %503 = cast(meta[relay.Constant][31] /* ty=Tensor[(1, 512), float32] */, dtype="float32") /* ty=Tensor[(1, 512), float32] */;
  %504 = cast(meta[relay.Constant][32] /* ty=Tensor[(1040), float64] */, dtype="float64") /* ty=Tensor[(1040), float64] */;
  %505 = reshape(%503, newshape=[16, 16, 2]) /* ty=Tensor[(16, 16, 2), float32] */;
  %506 = reshape(%504, newshape=[1040]) /* ty=Tensor[(1040), float64] */;
  %507 = @func_2251(%505, %506) /* ty=(Tensor[(16, 16, 2), bool], Tensor[(10, 13, 8), float64], Tensor[(1040), float64]) */;
  %508 = @func_2650() /* ty=Tensor[(12, 10, 1), float32] */;
  %509 = @func_211(%501, %502) /* ty=Tensor[(13, 15, 2), uint32] */;
  %510 = @func_2650() /* ty=Tensor[(12, 10, 1), float32] */;
  %511 = %507.0;
  (%508, %509, meta[relay.Constant][30] /* ty=Tensor[(65, 6), uint32] */, %510, %511, meta[relay.Constant][31] /* ty=Tensor[(1, 512), float32] */, meta[relay.Constant][32] /* ty=Tensor[(1040), float64] */)
}

def @func_5487(%var_5480: Tensor[(390), uint32]) -> (Tensor[(12, 10, 1), float32], Tensor[(13, 15, 2), uint32], Tensor[(390), uint32]) {
  %512 = @func_4344() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %513 = cast(%var_5480, dtype="uint32") /* ty=Tensor[(390), uint32] */;
  %514 = cast(%var_5480, dtype="uint32") /* ty=Tensor[(390), uint32] */;
  %515 = reshape(%513, newshape=[13, 15, 2]) /* ty=Tensor[(13, 15, 2), uint32] */;
  %516 = reshape(%514, newshape=[13, 15, 2]) /* ty=Tensor[(13, 15, 2), uint32] */;
  %517 = %512.0;
  %518 = @func_211(%515, %516) /* ty=Tensor[(13, 15, 2), uint32] */;
  (%517, %518, %var_5480)
}

def @func_6875(%var_6852: Tensor[(12, 10, 10), float32]) -> (Tensor[(12, 10, 10), bool], Tensor[(12, 10, 10), uint16]) {
  %519 = @func_5012() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32]) */;
  %520 = %519.1;
  %521 = cast(%520, dtype="bool") /* ty=Tensor[(12, 10, 1), bool] */;
  %522 = cast(%var_6852, dtype="bool") /* ty=Tensor[(12, 10, 10), bool] */;
  %523 = cast(%520, dtype="uint16") /* ty=Tensor[(12, 10, 1), uint16] */;
  %524 = cast(%var_6852, dtype="uint16") /* ty=Tensor[(12, 10, 10), uint16] */;
  %525 = less_equal(%521, %522) /* ty=Tensor[(12, 10, 10), bool] */;
  %526 = multiply(%523, %524) /* ty=Tensor[(12, 10, 10), uint16] */;
  (%525, %526)
}

def @func_4691(%var_4675: Tensor[(300), bool]) -> (Tensor[(12, 10, 1), float32], Tensor[(15, 4, 5), bool], Tensor[(300), bool], Tensor[(13, 15, 2), uint32], Tensor[(390), uint32]) {
  %527 = @func_4344() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %528 = cast(%var_4675, dtype="bool") /* ty=Tensor[(300), bool] */;
  %529 = reshape(%528, newshape=[15, 4, 5]) /* ty=Tensor[(15, 4, 5), bool] */;
  %530 = @func_3384(%529) /* ty=(Tensor[(15, 4, 5), bool],) */;
  %531 = cast(meta[relay.Constant][33] /* ty=Tensor[(390), uint32] */, dtype="uint32") /* ty=Tensor[(390), uint32] */;
  %532 = cast(meta[relay.Constant][33] /* ty=Tensor[(390), uint32] */, dtype="uint32") /* ty=Tensor[(390), uint32] */;
  %533 = reshape(%531, newshape=[13, 15, 2]) /* ty=Tensor[(13, 15, 2), uint32] */;
  %534 = reshape(%532, newshape=[13, 15, 2]) /* ty=Tensor[(13, 15, 2), uint32] */;
  %535 = %527.0;
  %536 = %530.0;
  %537 = @func_211(%533, %534) /* ty=Tensor[(13, 15, 2), uint32] */;
  (%535, %536, %var_4675, %537, meta[relay.Constant][33] /* ty=Tensor[(390), uint32] */)
}

def @func_6609() -> (Tensor[(1, 512), float32], Tensor[(12, 10, 1), float32]) {
  %538 = @func_2842() /* ty=(Tensor[(1, 512), float32],) */;
  %539 = @func_3791() /* ty=(Tensor[(1, 512), float32], Tensor[(12, 10, 1), float32]) */;
  %540 = %538.0;
  %541 = %539.1;
  (%540, %541)
}

def @func_8568() -> Tensor[(12, 10, 1), float32] {
  %542 = @func_5889() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %542.0
}

def @func_8854(%var_8843: Tensor[(1040), float64]) -> (Tensor[(15, 4, 5), bool], Tensor[(12, 10, 1), float32], Tensor[(12, 10, 512), int8], Tensor[(1040), float64]) {
  %543 = @func_4237() /* ty=(Tensor[(1, 512), float32], Tensor[(15, 4, 5), bool], Tensor[(150, 2), bool]) */;
  %544 = @func_3960() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %545 = cast(%var_8843, dtype="float64") /* ty=Tensor[(1040), float64] */;
  %546 = reshape(%545, newshape=[1040]) /* ty=Tensor[(1040), float64] */;
  %547 = @func_4658(%546) /* ty=(Tensor[(13, 15, 2), uint32], Tensor[(1120), int16], Tensor[(1040), float64], Tensor[(?, 512), uint32], Tensor[(12, 10, 512), int8]) */;
  %548 = %543.1;
  %549 = %544.0;
  %550 = %547.4;
  (%548, %549, %550, %var_8843)
}

def @func_1734(%var_1711: Tensor[(5, 16, 14), int16], %var_1718: Tensor[(8, 130), float64]) -> (Tensor[(5, 16, 14), int16], Tensor[(10, 13, 8), float64], Tensor[(8, 130), float64], Tensor[(13, 15, 2), uint32], Tensor[(33, 7), float64]) {
  %551 = cast(meta[relay.Constant][34] /* ty=Tensor[(5, 16, 1), int16] */, dtype="int16") /* ty=Tensor[(5, 16, 1), int16] */;
  %552 = cast(%var_1711, dtype="int16") /* ty=Tensor[(5, 16, 14), int16] */;
  %553 = cast(%var_1718, dtype="float64") /* ty=Tensor[(8, 130), float64] */;
  %554 = reshape(%553, newshape=[10, 13, 8]) /* ty=Tensor[(10, 13, 8), float64] */;
  %555 = cast(meta[relay.Constant][35] /* ty=Tensor[(33, 7), float64] */, dtype="float64") /* ty=Tensor[(33, 7), float64] */;
  %556 = reshape(%555, newshape=[3, 11, 7]) /* ty=Tensor[(3, 11, 7), float64] */;
  %557 = @func_381(%556) /* ty=(Tensor[(10, 13, 8), float64], Tensor[(1040), float64], Tensor[(10, 13, 8), float64], Tensor[(13, 15, 2), uint32], Tensor[(390), uint32], Tensor[(3, 11, 7), float64], Tensor[(10, 13, 8), float64]) */;
  %558 = left_shift(%551, %552) /* ty=Tensor[(5, 16, 14), int16] */;
  %559 = @func_186(%554) /* ty=Tensor[(10, 13, 8), float64] */;
  %560 = %557.3;
  (%558, %559, %var_1718, %560, meta[relay.Constant][35] /* ty=Tensor[(33, 7), float64] */)
}

def @func_5363() -> (Tensor[(1, 512), float32],) {
  %561 = @func_4017() /* ty=(Tensor[(1, 512), float32],) */;
  %562 = %561.0;
  (%562,)
}

def @func_2512() -> (Tensor[(12, 10, 1), float32],) {
  %563 = @func_2408() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %564 = %563.0;
  (%564,)
}

def @func_4001() -> Tensor[(12, 10, 1), float32] {
  %565 = @func_3960() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %565.0
}

def @func_6136() -> (Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32], Tensor[(1, 512), float32], Tensor[(13, 15, 2), uint32], Tensor[(1120), int16], Tensor[(1040), float64]) {
  %566 = @func_5012() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32]) */;
  %567 = @func_5144() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(1, 512), float32]) */;
  %568 = cast(meta[relay.Constant][36] /* ty=Tensor[(1120), int16] */, dtype="int16") /* ty=Tensor[(1120), int16] */;
  %569 = cast(meta[relay.Constant][37] /* ty=Tensor[(1040), float64] */, dtype="float64") /* ty=Tensor[(1040), float64] */;
  %570 = reshape(%568, newshape=[5, 16, 14]) /* ty=Tensor[(5, 16, 14), int16] */;
  %571 = reshape(%569, newshape=[8, 130]) /* ty=Tensor[(8, 130), float64] */;
  %572 = @func_1734(%570, %571) /* ty=(Tensor[(5, 16, 14), int16], Tensor[(10, 13, 8), float64], Tensor[(8, 130), float64], Tensor[(13, 15, 2), uint32], Tensor[(33, 7), float64]) */;
  %573 = %566.1;
  %574 = @func_4114() /* ty=Tensor[(12, 10, 1), float32] */;
  %575 = %567.1;
  %576 = %572.3;
  (%573, %574, %575, %576, meta[relay.Constant][36] /* ty=Tensor[(1120), int16] */, meta[relay.Constant][37] /* ty=Tensor[(1040), float64] */)
}

def @func_4017() -> (Tensor[(1, 512), float32],) {
  %577 = @func_2842() /* ty=(Tensor[(1, 512), float32],) */;
  %578 = %577.0;
  (%578,)
}

def @func_9255() -> (Tensor[(12), float32], Tensor[(12, 10, 1), float32]) {
  %579 = @func_7310() /* ty=(Tensor[(1, 512), float32], Tensor[(12), float32], Tensor[(1248), float32]) */;
  %580 = @func_2512() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %581 = %579.1;
  %582 = %580.0;
  (%581, %582)
}

def @func_9906() -> (Tensor[(6, 512), float64], Tensor[(12, 10, 1), float32]) {
  %583 = @func_5715() /* ty=(Tensor[(6, 512), float64],) */;
  %584 = @func_2512() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %585 = %583.0;
  %586 = %584.0;
  (%585, %586)
}

def @func_5351(%var_5294: Tensor[(1, 300), bool]) -> (Tensor[(12, 10, 1), float32], Tensor[(15, 4, 5), bool], Tensor[(1, 300), bool], Tensor[(12, 10, 1), float32], Tensor[(1, 512), float32], Tensor[(15, 4, 5), bool], Tensor[(12, 10, 1), float32], Tensor[(1, 3, 4), float32], Tensor[(1232), uint8], Tensor[(12), float32], Tensor[(12, 10, 1), float32]) {
  %587 = @func_3422() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %588 = cast(%var_5294, dtype="bool") /* ty=Tensor[(1, 300), bool] */;
  %589 = reshape(%588, newshape=[15, 4, 5]) /* ty=Tensor[(15, 4, 5), bool] */;
  %590 = @func_3384(%589) /* ty=(Tensor[(15, 4, 5), bool],) */;
  %591 = @func_2512() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %592 = @func_4542() /* ty=(Tensor[(1, 512), float32],) */;
  %593 = cast(%var_5294, dtype="bool") /* ty=Tensor[(1, 300), bool] */;
  %594 = reshape(%593, newshape=[15, 4, 5]) /* ty=Tensor[(15, 4, 5), bool] */;
  %595 = @func_3384(%594) /* ty=(Tensor[(15, 4, 5), bool],) */;
  %596 = @func_2780() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %597 = cast(meta[relay.Constant][38] /* ty=Tensor[(1232), uint8] */, dtype="uint8") /* ty=Tensor[(1232), uint8] */;
  %598 = cast(meta[relay.Constant][39] /* ty=Tensor[(12), float32] */, dtype="float32") /* ty=Tensor[(12), float32] */;
  %599 = reshape(%597, newshape=[2, 616]) /* ty=Tensor[(2, 616), uint8] */;
  %600 = reshape(%598, newshape=[12]) /* ty=Tensor[(12), float32] */;
  %601 = @func_3348(%599, %600) /* ty=(Tensor[(1, 3, 4), float32], Tensor[(2, 616), uint8], Tensor[(12, 10, 12), float64], Tensor[(12, 10, ?), bool]) */;
  %602 = %587.0;
  %603 = %590.0;
  %604 = %591.0;
  %605 = %592.0;
  %606 = %595.0;
  %607 = %596.0;
  %608 = %601.0;
  %609 = @func_3860() /* ty=Tensor[(12, 10, 1), float32] */;
  (%602, %603, %var_5294, %604, %605, %606, %607, %608, meta[relay.Constant][38] /* ty=Tensor[(1232), uint8] */, meta[relay.Constant][39] /* ty=Tensor[(12), float32] */, %609)
}

def @func_2428() -> (Tensor[(12, 10, 1), float32],) {
  %610 = @func_2408() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %611 = %610.0;
  (%611,)
}

def @func_7310() -> (Tensor[(1, 512), float32], Tensor[(12), float32], Tensor[(1248), float32]) {
  %612 = cast(meta[relay.Constant][40] /* ty=Tensor[(1248), float32] */, dtype="float32") /* ty=Tensor[(1248), float32] */;
  %613 = reshape(%612, newshape=[13, 12, 8]) /* ty=Tensor[(13, 12, 8), float32] */;
  %614 = @func_4314(%613) /* ty=(Tensor[(13, 12, 8), float32], Tensor[(390), uint32], Tensor[(12), float32]) */;
  %615 = @func_2915() /* ty=Tensor[(1, 512), float32] */;
  %616 = %614.2;
  (%615, %616, meta[relay.Constant][40] /* ty=Tensor[(1248), float32] */)
}

def @func_8405() -> (Tensor[(12, 10, 1), float32], Tensor[(1, 512), float32]) {
  %617 = @func_3791() /* ty=(Tensor[(1, 512), float32], Tensor[(12, 10, 1), float32]) */;
  %618 = @func_7202() /* ty=Tensor[(12, 10, 1), float32] */;
  %619 = %617.0;
  (%618, %619)
}

def @func_2915() -> Tensor[(1, 512), float32] {
  @func_2903() /* ty=Tensor[(1, 512), float32] */
}

def @func_5715() -> (Tensor[(6, 512), float64],) {
  %620 = @func_5363() /* ty=(Tensor[(1, 512), float32],) */;
  %621 = %620.0;
  %622 = cast(%621, dtype="int8") /* ty=Tensor[(1, 512), int8] */;
  %623 = cast(meta[relay.Constant][41] /* ty=Tensor[(6, 512), float32] */, dtype="int8") /* ty=Tensor[(6, 512), int8] */;
  %624 = maximum(%622, %623) /* ty=Tensor[(6, 512), int8] */;
  %625 = cast(%624, dtype="float64") /* ty=Tensor[(6, 512), float64] */;
  %626 = sqrt(%625) /* ty=Tensor[(6, 512), float64] */;
  (%626,)
}

def @func_9859() -> Tensor[(12, 10, 1), float32] {
  %627 = @func_9779() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %627.0
}

def @func_4152() -> Tensor[(12, 10, 1), float32] {
  @func_3860() /* ty=Tensor[(12, 10, 1), float32] */
}

def @func_8745(%var_8728: Tensor[(429, 1), float64], %var_8729: Tensor[(231), float64]) -> (Tensor[(12, 10, 1), float32], Tensor[(1, 512), float32], Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32], Tensor[(1, 512), float64], Tensor[(10, 13, 8), float64], Tensor[(429, 1), float64], Tensor[(231), float64]) {
  %628 = @func_4618() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %629 = @func_8405() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(1, 512), float32]) */;
  %630 = @func_5363() /* ty=(Tensor[(1, 512), float32],) */;
  %631 = %630.0;
  %632 = cast(%631, dtype="float32") /* ty=Tensor[(1, 512), float32] */;
  %633 = sigmoid(%632) /* ty=Tensor[(1, 512), float32] */;
  %634 = cast(%633, dtype="float64") /* ty=Tensor[(1, 512), float64] */;
  %635 = cast(%var_8728, dtype="float64") /* ty=Tensor[(429, 1), float64] */;
  %636 = cast(%var_8729, dtype="float64") /* ty=Tensor[(231), float64] */;
  %637 = reshape(%635, newshape=[13, 3, 11]) /* ty=Tensor[(13, 3, 11), float64] */;
  %638 = reshape(%636, newshape=[33, 7]) /* ty=Tensor[(33, 7), float64] */;
  %639 = @func_1311(%637, %638) /* ty=(Tensor[(13, 3, 11), float64], Tensor[(10, 13, 8), float64], Tensor[(33, 7), float64], Tensor[(10, 13, 8), float64], Tensor[(10, 13, 8), float64], Tensor[(13, 3, 11), int64]) */;
  %640 = %628.0;
  %641 = @func_2915() /* ty=Tensor[(1, 512), float32] */;
  %642 = @func_4114() /* ty=Tensor[(12, 10, 1), float32] */;
  %643 = %629.0;
  %644 = log2(%634) /* ty=Tensor[(1, 512), float64] */;
  %645 = %639.4;
  (%640, %641, %642, %643, %644, %645, %var_8728, %var_8729)
}

def @func_4074() -> (Tensor[(12, 10, 1), float32], Tensor[(?, 512), uint32], Tensor[(512), float32]) {
  %646 = @func_2408() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %647 = cast(meta[relay.Constant][42] /* ty=Tensor[(512), float32] */, dtype="float32") /* ty=Tensor[(512), float32] */;
  %648 = reshape(%647, newshape=[1, 512]) /* ty=Tensor[(1, 512), float32] */;
  %649 = %646.0;
  %650 = @func_3704(%648) /* ty=Tensor[(?, 512), uint32] */;
  (%649, %650, meta[relay.Constant][42] /* ty=Tensor[(512), float32] */)
}

def @func_8526() -> (Tensor[(12, 10, 1), float32], Tensor[(12, 10, 8), float32]) {
  %651 = @func_7725() /* ty=Tensor[(12, 10, 8), bool] */;
  %652 = cast(%651, dtype="float32") /* ty=Tensor[(12, 10, 8), float32] */;
  %653 = @func_2650() /* ty=Tensor[(12, 10, 1), float32] */;
  %654 = acosh(%652) /* ty=Tensor[(12, 10, 8), float32] */;
  (%653, %654)
}

def @func_7725() -> Tensor[(12, 10, 8), bool] {
  @func_5784() /* ty=Tensor[(12, 10, 8), bool] */
}

def @func_6409(%var_6391: Tensor[(4, 512), int16]) -> (Tensor[(4, 512), bool], Tensor[(4, 512), float32]) {
  %655 = @func_5947() /* ty=(Tensor[(?, 512), int16], Tensor[(?, 512), uint32]) */;
  %656 = %655.0;
  %657 = cast(%656, dtype="bool") /* ty=Tensor[(?, 512), bool] */;
  %658 = cast(%var_6391, dtype="bool") /* ty=Tensor[(4, 512), bool] */;
  %659 = cast(%var_6391, dtype="float32") /* ty=Tensor[(4, 512), float32] */;
  %660 = greater_equal(%657, %658) /* ty=Tensor[(4, 512), bool] */;
  %661 = acos(%659) /* ty=Tensor[(4, 512), float32] */;
  (%660, %661)
}

def @func_5525(%var_5495: uint64, %var_5496: Tensor[(3, 14, 5), uint64], %var_5507: Tensor[(4096), float32], %var_5511: Tensor[(624, 2), float32]) -> (Tensor[(3, 14, 5), bool], Tensor[(12, 10, 1), float32], Tensor[(12, 12, 13), int16], Tensor[(231), float64], Tensor[(429), float64], Tensor[(4096), float32], Tensor[(390), uint32], Tensor[(624, 2), float32]) {
  %662 = cast(%var_5495, dtype="bool") /* ty=bool */;
  %663 = cast(%var_5496, dtype="bool") /* ty=Tensor[(3, 14, 5), bool] */;
  %664 = @func_4074() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(?, 512), uint32], Tensor[(512), float32]) */;
  %665 = cast(meta[relay.Constant][43] /* ty=Tensor[(231), float64] */, dtype="float64") /* ty=Tensor[(231), float64] */;
  %666 = cast(meta[relay.Constant][44] /* ty=Tensor[(429), float64] */, dtype="float64") /* ty=Tensor[(429), float64] */;
  %667 = cast(%var_5507, dtype="float32") /* ty=Tensor[(4096), float32] */;
  %668 = reshape(%665, newshape=[231]) /* ty=Tensor[(231), float64] */;
  %669 = reshape(%666, newshape=[429, 1]) /* ty=Tensor[(429, 1), float64] */;
  %670 = reshape(%667, newshape=[4096]) /* ty=Tensor[(4096), float32] */;
  %671 = @func_4858(%668, %669, %670) /* ty=(Tensor[(1, 512), float32], Tensor[(12, 12, 13), int16], Tensor[(231), float64], Tensor[(429, 1), float64], Tensor[(8, 512), bool], Tensor[(4096), float32]) */;
  %672 = cast(%var_5511, dtype="float32") /* ty=Tensor[(624, 2), float32] */;
  %673 = reshape(%672, newshape=[13, 12, 8]) /* ty=Tensor[(13, 12, 8), float32] */;
  %674 = @func_4314(%673) /* ty=(Tensor[(13, 12, 8), float32], Tensor[(390), uint32], Tensor[(12), float32]) */;
  %675 = equal(%662, %663) /* ty=Tensor[(3, 14, 5), bool] */;
  %676 = %664.0;
  %677 = %671.1;
  %678 = %674.1;
  (%675, %676, %677, meta[relay.Constant][43] /* ty=Tensor[(231), float64] */, meta[relay.Constant][44] /* ty=Tensor[(429), float64] */, %var_5507, %678, %var_5511)
}

def @func_2711() -> (Tensor[(12, 10, 11), bool], Tensor[(12, 10, 1), float32], Tensor[(12, 12, 13), int16], Tensor[(1872), bool], Tensor[(12, 10, 1), float32]) {
  %679 = @func_2512() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %680 = %679.0;
  %681 = cast(%680, dtype="bool") /* ty=Tensor[(12, 10, 1), bool] */;
  %682 = cast(meta[relay.Constant][45] /* ty=Tensor[(12, 10, 11), float32] */, dtype="bool") /* ty=Tensor[(12, 10, 11), bool] */;
  %683 = @func_2408() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %684 = cast(meta[relay.Constant][46] /* ty=Tensor[(1872), bool] */, dtype="bool") /* ty=Tensor[(1872), bool] */;
  %685 = reshape(%684, newshape=[12, 12, 13]) /* ty=Tensor[(12, 12, 13), bool] */;
  %686 = @func_2408() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %687 = less_equal(%681, %682) /* ty=Tensor[(12, 10, 11), bool] */;
  %688 = %683.0;
  %689 = @func_667(%685) /* ty=Tensor[(12, 12, 13), int16] */;
  %690 = %686.0;
  (%687, %688, %689, meta[relay.Constant][46] /* ty=Tensor[(1872), bool] */, %690)
}

def @func_4344() -> (Tensor[(12, 10, 1), float32],) {
  %691 = @func_4152() /* ty=Tensor[(12, 10, 1), float32] */;
  (%691,)
}

def @func_9597(%var_9512: Tensor[(5120), uint32], %var_9535: Tensor[(12, 10, 512), float32], %var_9577: Tensor[(300), bool]) -> (Tensor[(12, 10, 1), float32], Tensor[(1, 512), float32], Tensor[(12, 10, 1), float32], Tensor[(1040), float64], Tensor[(61440), int64], Tensor[(12, 10, 512), bool], Tensor[(5120), float32], Tensor[(12, 10, 1), float32], Tensor[(15, 4, 5), bool], Tensor[(300), bool], Tensor[(12, 10, 1), float32]) {
  %692 = @func_4542() /* ty=(Tensor[(1, 512), float32],) */;
  %693 = cast(%var_9512, dtype="uint32") /* ty=Tensor[(5120), uint32] */;
  %694 = reshape(%693, newshape=[10, 512]) /* ty=Tensor[(10, 512), uint32] */;
  %695 = @func_7117(%694) /* ty=(Tensor[(10, 512), bool], Tensor[(12, 10, 1), float32], Tensor[(10, 512), float64]) */;
  %696 = cast(meta[relay.Constant][47] /* ty=Tensor[(1040), float64] */, dtype="float64") /* ty=Tensor[(1040), float64] */;
  %697 = cast(meta[relay.Constant][48] /* ty=Tensor[(61440), int64] */, dtype="int64") /* ty=Tensor[(61440), int64] */;
  %698 = reshape(%696, newshape=[40, 26]) /* ty=Tensor[(40, 26), float64] */;
  %699 = reshape(%697, newshape=[12, 10, 512]) /* ty=Tensor[(12, 10, 512), int64] */;
  %700 = @func_6808(%698, %699) /* ty=(Tensor[(12, 10, 1), float32], Tensor[(150, 2), bool], Tensor[(12, 10, 8), bool], Tensor[(12, 10, 512), float32], Tensor[(12, 10, 13), bool], Tensor[(10, 13, 8), float64], Tensor[(40, 26), float64], Tensor[(12, 10, 512), float32], Tensor[(12, 10, 1), float32], Tensor[(12, 10, 512), bool]) */;
  %701 = %700.3;
  %702 = cast(%var_9535, dtype="bool") /* ty=Tensor[(12, 10, 512), bool] */;
  %703 = shape_of(%701, dtype="int32") /* ty=Tensor[(3), int32] */;
  %704 = cast(%701, dtype="bool") /* ty=Tensor[(12, 10, 512), bool] */;
  %705 = dyn.reshape(%702, %703, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %706 = cast(%var_9512, dtype="float64") /* ty=Tensor[(5120), float64] */;
  %707 = sinh(%706) /* ty=Tensor[(5120), float64] */;
  %708 = cast(%707, dtype="float32") /* ty=Tensor[(5120), float32] */;
  %709 = @func_3960() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %710 = cast(%var_9577, dtype="bool") /* ty=Tensor[(300), bool] */;
  %711 = reshape(%710, newshape=[15, 4, 5]) /* ty=Tensor[(15, 4, 5), bool] */;
  %712 = @func_3384(%711) /* ty=(Tensor[(15, 4, 5), bool],) */;
  %713 = @func_9077() /* ty=Tensor[(12, 10, 1), float32] */;
  %714 = %692.0;
  %715 = %695.1;
  %716 = equal(%704, %705) /* ty=Tensor[(12, 10, 512), bool] */;
  %717 = log(%708) /* ty=Tensor[(5120), float32] */;
  %718 = %709.0;
  %719 = %712.0;
  %720 = @func_5377() /* ty=Tensor[(12, 10, 1), float32] */;
  (%713, %714, %715, meta[relay.Constant][47] /* ty=Tensor[(1040), float64] */, meta[relay.Constant][48] /* ty=Tensor[(61440), int64] */, %716, %717, %718, %719, %var_9577, %720)
}

def @func_5411() -> (Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32]) {
  %721 = @func_4180() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %722 = @func_4152() /* ty=Tensor[(12, 10, 1), float32] */;
  %723 = %721.0;
  (%722, %723)
}

def @func_5784() -> Tensor[(12, 10, 8), bool] {
  %724 = @func_4406() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32]) */;
  %725 = %724.2;
  %726 = cast(%725, dtype="bool") /* ty=Tensor[(12, 10, 1), bool] */;
  %727 = cast(meta[relay.Constant][49] /* ty=Tensor[(12, 10, 8), float32] */, dtype="bool") /* ty=Tensor[(12, 10, 8), bool] */;
  greater(%726, %727) /* ty=Tensor[(12, 10, 8), bool] */
}

def @func_6998() -> (Tensor[(12, 10, 1), float32],) {
  %728 = @func_3791() /* ty=(Tensor[(1, 512), float32], Tensor[(12, 10, 1), float32]) */;
  %729 = %728.1;
  (%729,)
}

def @func_4314(%var_4291: Tensor[(13, 12, 8), float32]) -> (Tensor[(13, 12, 8), float32], Tensor[(390), uint32], Tensor[(12), float32]) {
  %730 = cast(meta[relay.Constant][50] /* ty=Tensor[(13, 12, 8), float32] */, dtype="float32") /* ty=Tensor[(13, 12, 8), float32] */;
  %731 = shape_of(%var_4291, dtype="int32") /* ty=Tensor[(3), int32] */;
  %732 = cast(%var_4291, dtype="float32") /* ty=Tensor[(13, 12, 8), float32] */;
  %733 = dyn.reshape(%730, %731, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %734 = cast(meta[relay.Constant][51] /* ty=Tensor[(12), float32] */, dtype="float32") /* ty=Tensor[(12), float32] */;
  %735 = reshape(%734, newshape=[1, 3, 4]) /* ty=Tensor[(1, 3, 4), float32] */;
  %736 = @func_524(%735) /* ty=(Tensor[(1, 3, 4), float32], Tensor[(13, 15, 2), uint32], Tensor[(390), uint32]) */;
  %737 = add(%732, %733) /* ty=Tensor[(13, 12, 8), float32] */;
  %738 = %736.2;
  (%737, %738, meta[relay.Constant][51] /* ty=Tensor[(12), float32] */)
}

def @func_211(%var_206: Tensor[(13, 15, 2), uint32], %var_207: Tensor[(13, 15, 2), uint32]) -> Tensor[(13, 15, 2), uint32] {
  %739 = cast(%var_207, dtype="uint32") /* ty=Tensor[(13, 15, 2), uint32] */;
  %740 = shape_of(%var_206, dtype="int32") /* ty=Tensor[(3), int32] */;
  %741 = cast(%var_206, dtype="uint32") /* ty=Tensor[(13, 15, 2), uint32] */;
  %742 = dyn.reshape(%739, %740, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  minimum(%741, %742) /* ty=Tensor[(13, 15, 2), uint32] */
}

def @func_3580(%var_3535: Tensor[(231), float64], %var_3536: Tensor[(429), float64], %var_3545: Tensor[(512), float32]) -> (Tensor[(12, 10, 1), float32], Tensor[(12, 12, 13), int16], Tensor[(231), float64], Tensor[(16, 16, 2), bool], Tensor[(512), float32], Tensor[(1040), float64], Tensor[(429), float32], Tensor[(1872), bool]) {
  %743 = cast(%var_3535, dtype="float64") /* ty=Tensor[(231), float64] */;
  %744 = cast(%var_3536, dtype="float64") /* ty=Tensor[(429), float64] */;
  %745 = reshape(%743, newshape=[11, 21]) /* ty=Tensor[(11, 21), float64] */;
  %746 = reshape(%744, newshape=[429]) /* ty=Tensor[(429), float64] */;
  %747 = @func_2617(%745, %746) /* ty=(Tensor[(12, 10, 1), float32], Tensor[(3, 11, 7), float64], Tensor[(11, 21), float64], Tensor[(12, 12, 13), int16], Tensor[(1872), bool], Tensor[(12, 12, 13), int16], Tensor[(13, 15, 2), uint32], Tensor[(390), uint32], Tensor[(10, 13, 8), float64], Tensor[(429), float64]) */;
  %748 = cast(%var_3545, dtype="float32") /* ty=Tensor[(512), float32] */;
  %749 = cast(meta[relay.Constant][52] /* ty=Tensor[(1040), float64] */, dtype="float64") /* ty=Tensor[(1040), float64] */;
  %750 = reshape(%748, newshape=[16, 16, 2]) /* ty=Tensor[(16, 16, 2), float32] */;
  %751 = reshape(%749, newshape=[1040]) /* ty=Tensor[(1040), float64] */;
  %752 = @func_2251(%750, %751) /* ty=(Tensor[(16, 16, 2), bool], Tensor[(10, 13, 8), float64], Tensor[(1040), float64]) */;
  %753 = cast(%var_3536, dtype="float32") /* ty=Tensor[(429), float32] */;
  %754 = @func_2711() /* ty=(Tensor[(12, 10, 11), bool], Tensor[(12, 10, 1), float32], Tensor[(12, 12, 13), int16], Tensor[(1872), bool], Tensor[(12, 10, 1), float32]) */;
  %755 = @func_3481() /* ty=Tensor[(12, 10, 1), float32] */;
  %756 = %747.3;
  %757 = %752.0;
  %758 = rsqrt(%753) /* ty=Tensor[(429), float32] */;
  %759 = %754.3;
  (%755, %756, %var_3535, %757, %var_3545, meta[relay.Constant][52] /* ty=Tensor[(1040), float64] */, %758, %759)
}

def @func_6275() -> (Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32]) {
  %760 = @func_4344() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %761 = @func_4916() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %762 = %760.0;
  %763 = %761.0;
  %764 = @func_4001() /* ty=Tensor[(12, 10, 1), float32] */;
  (%762, %763, %764)
}

def @func_6808(%var_6777: Tensor[(40, 26), float64], %var_6792: Tensor[(12, 10, 512), int64]) -> (Tensor[(12, 10, 1), float32], Tensor[(150, 2), bool], Tensor[(12, 10, 8), bool], Tensor[(12, 10, 512), float32], Tensor[(12, 10, 13), bool], Tensor[(10, 13, 8), float64], Tensor[(40, 26), float64], Tensor[(12, 10, 512), float32], Tensor[(12, 10, 1), float32], Tensor[(12, 10, 512), bool]) {
  %765 = @func_4180() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %766 = @func_4237() /* ty=(Tensor[(1, 512), float32], Tensor[(15, 4, 5), bool], Tensor[(150, 2), bool]) */;
  %767 = @func_6083() /* ty=(Tensor[(12, 10, 8), bool],) */;
  %768 = @func_2408() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %769 = %768.0;
  %770 = @func_5363() /* ty=(Tensor[(1, 512), float32],) */;
  %771 = %770.0;
  %772 = cast(%771, dtype="float32") /* ty=Tensor[(1, 512), float32] */;
  %773 = cast(%769, dtype="float32") /* ty=Tensor[(12, 10, 1), float32] */;
  %774 = divide(%772, %773) /* ty=Tensor[(12, 10, 512), float32] */;
  %775 = cast(%769, dtype="int64") /* ty=Tensor[(12, 10, 1), int64] */;
  %776 = cast(%774, dtype="int64") /* ty=Tensor[(12, 10, 512), int64] */;
  %777 = add(%775, %776) /* ty=Tensor[(12, 10, 512), int64] */;
  %778 = cast(%777, dtype="float32") /* ty=Tensor[(12, 10, 512), float32] */;
  %779 = @func_6627() /* ty=(Tensor[(12, 10, 13), bool],) */;
  %780 = cast(%var_6777, dtype="float64") /* ty=Tensor[(40, 26), float64] */;
  %781 = reshape(%780, newshape=[10, 13, 8]) /* ty=Tensor[(10, 13, 8), float64] */;
  %782 = cast(%777, dtype="float32") /* ty=Tensor[(12, 10, 512), float32] */;
  %783 = shape_of(%774, dtype="int32") /* ty=Tensor[(3), int32] */;
  %784 = cast(%774, dtype="float32") /* ty=Tensor[(12, 10, 512), float32] */;
  %785 = dyn.reshape(%782, %783, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %786 = cast(%var_6792, dtype="bool") /* ty=Tensor[(12, 10, 512), bool] */;
  %787 = shape_of(%777, dtype="int32") /* ty=Tensor[(3), int32] */;
  %788 = cast(%777, dtype="bool") /* ty=Tensor[(12, 10, 512), bool] */;
  %789 = dyn.reshape(%786, %787, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %790 = %765.0;
  %791 = %766.2;
  %792 = %767.0;
  %793 = atanh(%778) /* ty=Tensor[(12, 10, 512), float32] */;
  %794 = %779.0;
  %795 = @func_186(%781) /* ty=Tensor[(10, 13, 8), float64] */;
  %796 = power(%784, %785) /* ty=Tensor[(12, 10, 512), float32] */;
  %797 = @func_4152() /* ty=Tensor[(12, 10, 1), float32] */;
  %798 = greater(%788, %789) /* ty=Tensor[(12, 10, 512), bool] */;
  (%790, %791, %792, %793, %794, %795, %var_6777, %796, %797, %798)
}

def @func_7996(%var_7967: Tensor[(4, 14, 9), float32]) -> (Tensor[(4, 14, 9), float32], Tensor[(12, 10, 1), float32]) {
  %799 = cast(%var_7967, dtype="float32") /* ty=Tensor[(4, 14, 9), float32] */;
  %800 = @func_5656() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %801 = sigmoid(%799) /* ty=Tensor[(4, 14, 9), float32] */;
  %802 = %800.0;
  (%801, %802)
}

def @func_9053() -> (Tensor[(1, 512), float32], Tensor[(12, 10, 13), bool]) {
  %803 = @func_4758() /* ty=(Tensor[(1, 512), float32], Tensor[(1, 512), float32], Tensor[(12, 10, 1), float32]) */;
  %804 = @func_6627() /* ty=(Tensor[(12, 10, 13), bool],) */;
  %805 = %803.1;
  %806 = %804.0;
  (%805, %806)
}

def @func_2842() -> (Tensor[(1, 512), float32],) {
  %807 = @func_2741() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(13, 15, 2), uint32], Tensor[(65, 6), uint32], Tensor[(12, 10, 1), float32], Tensor[(16, 16, 2), bool], Tensor[(1, 512), float32], Tensor[(1040), float64]) */;
  %808 = %807.5;
  %809 = cast(%808, dtype="float32") /* ty=Tensor[(1, 512), float32] */;
  %810 = log10(%809) /* ty=Tensor[(1, 512), float32] */;
  (%810,)
}

def @func_1311(%var_1253: Tensor[(13, 3, 11), float64], %var_1278: Tensor[(33, 7), float64]) -> (Tensor[(13, 3, 11), float64], Tensor[(10, 13, 8), float64], Tensor[(33, 7), float64], Tensor[(10, 13, 8), float64], Tensor[(10, 13, 8), float64], Tensor[(13, 3, 11), int64]) {
  %811 = cast(%var_1253, dtype="float64") /* ty=Tensor[(13, 3, 11), float64] */;
  %812 = cast(%var_1278, dtype="float64") /* ty=Tensor[(33, 7), float64] */;
  %813 = reshape(%812, newshape=[3, 11, 7]) /* ty=Tensor[(3, 11, 7), float64] */;
  %814 = @func_381(%813) /* ty=(Tensor[(10, 13, 8), float64], Tensor[(1040), float64], Tensor[(10, 13, 8), float64], Tensor[(13, 15, 2), uint32], Tensor[(390), uint32], Tensor[(3, 11, 7), float64], Tensor[(10, 13, 8), float64]) */;
  %815 = %814.6;
  %816 = cast(%815, dtype="float64") /* ty=Tensor[(10, 13, 8), float64] */;
  %817 = reshape(%816, newshape=[10, 13, 8]) /* ty=Tensor[(10, 13, 8), float64] */;
  %818 = @func_186(%817) /* ty=Tensor[(10, 13, 8), float64] */;
  %819 = cast(%818, dtype="float64") /* ty=Tensor[(10, 13, 8), float64] */;
  %820 = reshape(%819, newshape=[10, 13, 8]) /* ty=Tensor[(10, 13, 8), float64] */;
  %821 = cast(%var_1253, dtype="float64") /* ty=Tensor[(13, 3, 11), float64] */;
  %822 = log10(%821) /* ty=Tensor[(13, 3, 11), float64] */;
  %823 = cast(%822, dtype="float64") /* ty=Tensor[(13, 3, 11), float64] */;
  %824 = cos(%823) /* ty=Tensor[(13, 3, 11), float64] */;
  %825 = cast(%822, dtype="int64") /* ty=Tensor[(13, 3, 11), int64] */;
  %826 = shape_of(%824, dtype="int32") /* ty=Tensor[(3), int32] */;
  %827 = cast(%824, dtype="int64") /* ty=Tensor[(13, 3, 11), int64] */;
  %828 = dyn.reshape(%825, %826, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %829 = acosh(%811) /* ty=Tensor[(13, 3, 11), float64] */;
  %830 = @func_186(%820) /* ty=Tensor[(10, 13, 8), float64] */;
  %831 = subtract(%827, %828) /* ty=Tensor[(13, 3, 11), int64] */;
  (%829, %815, %var_1278, %818, %830, %831)
}

def @main() -> (Tensor[(12, 10, 1), float32],) {
  %832 = @func_4344() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %833 = %832.0;
  %834 = cast(%833, dtype="float32") /* ty=Tensor[(12, 10, 1), float32] */;
  %835 = log10(%834) /* ty=Tensor[(12, 10, 1), float32] */;
  %836 = cast(%835, dtype="float32") /* ty=Tensor[(12, 10, 1), float32] */;
  %837 = asin(%836) /* ty=Tensor[(12, 10, 1), float32] */;
  (%837,)
}

def @func_4406() -> (Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32]) {
  %838 = @func_2512() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %839 = @func_3481() /* ty=Tensor[(12, 10, 1), float32] */;
  %840 = %838.0;
  %841 = @func_4152() /* ty=Tensor[(12, 10, 1), float32] */;
  (%839, %840, %841)
}

def @func_8190(%var_8182: Tensor[(1, 390), uint32], %var_8183: Tensor[(429), float64]) -> (Tensor[(12), float32], Tensor[(429), float64], Tensor[(8192), float32], Tensor[(429), float64], Tensor[(1, 390), float32]) {
  %842 = @func_7310() /* ty=(Tensor[(1, 512), float32], Tensor[(12), float32], Tensor[(1248), float32]) */;
  %843 = cast(meta[relay.Constant][53] /* ty=Tensor[(8192), float32] */, dtype="float32") /* ty=Tensor[(8192), float32] */;
  %844 = cast(%var_8182, dtype="uint32") /* ty=Tensor[(1, 390), uint32] */;
  %845 = cast(%var_8183, dtype="float64") /* ty=Tensor[(429), float64] */;
  %846 = reshape(%843, newshape=[16, 512]) /* ty=Tensor[(16, 512), float32] */;
  %847 = reshape(%844, newshape=[390]) /* ty=Tensor[(390), uint32] */;
  %848 = reshape(%845, newshape=[429]) /* ty=Tensor[(429), float64] */;
  %849 = @func_3653(%846, %847, %848) /* ty=(Tensor[(16, 512), float32], Tensor[(12, 10, 1), float32], Tensor[(13, 15, 2), uint32], Tensor[(390), uint32], Tensor[(12, 10, 1), float32], Tensor[(231), float64], Tensor[(231), float64], Tensor[(429), float64]) */;
  %850 = cast(%var_8182, dtype="float32") /* ty=Tensor[(1, 390), float32] */;
  %851 = %842.1;
  %852 = %849.7;
  %853 = cosh(%850) /* ty=Tensor[(1, 390), float32] */;
  (%851, %852, meta[relay.Constant][53] /* ty=Tensor[(8192), float32] */, %var_8183, %853)
}

def @func_4758() -> (Tensor[(1, 512), float32], Tensor[(1, 512), float32], Tensor[(12, 10, 1), float32]) {
  %854 = @func_2903() /* ty=Tensor[(1, 512), float32] */;
  %855 = cast(%854, dtype="float32") /* ty=Tensor[(1, 512), float32] */;
  %856 = @func_4017() /* ty=(Tensor[(1, 512), float32],) */;
  %857 = @func_4344() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %858 = log(%855) /* ty=Tensor[(1, 512), float32] */;
  %859 = %856.0;
  %860 = %857.0;
  (%858, %859, %860)
}

def @func_5889() -> (Tensor[(12, 10, 1), float32],) {
  %861 = @func_2780() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %862 = %861.0;
  (%862,)
}

def @func_7458(%var_7435: Tensor[(12, 10, 1), float32]) -> Tensor[(12, 10, ?), float32] {
  %863 = @func_5745() /* ty=Tensor[(12, 10, 1), float32] */;
  %864 = cast(%var_7435, dtype="uint16") /* ty=Tensor[(12, 10, 1), uint16] */;
  %865 = shape_of(%863, dtype="int32") /* ty=Tensor[(3), int32] */;
  %866 = cast(%863, dtype="uint16") /* ty=Tensor[(12, 10, 1), uint16] */;
  %867 = dyn.reshape(%864, %865, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %868 = maximum(%866, %867) /* ty=Tensor[(12, 10, ?), uint16] */;
  %869 = cast(%863, dtype="float32") /* ty=Tensor[(12, 10, 1), float32] */;
  %870 = shape_of(%868, dtype="int32") /* ty=Tensor[(3), int32] */;
  %871 = cast(%868, dtype="float32") /* ty=Tensor[(12, 10, ?), float32] */;
  %872 = dyn.reshape(%869, %870, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%871, %872) /* ty=Tensor[(12, 10, ?), float32] */
}

def @func_3422() -> (Tensor[(12, 10, 1), float32],) {
  %873 = @func_2650() /* ty=Tensor[(12, 10, 1), float32] */;
  (%873,)
}

def @func_9105(%var_9098: Tensor[(12, 512), float64]) -> (Tensor[(12, 512), float32],) {
  %874 = @func_2903() /* ty=Tensor[(1, 512), float32] */;
  %875 = cast(%874, dtype="float64") /* ty=Tensor[(1, 512), float64] */;
  %876 = sinh(%875) /* ty=Tensor[(1, 512), float64] */;
  %877 = cast(%876, dtype="float32") /* ty=Tensor[(1, 512), float32] */;
  %878 = cast(%var_9098, dtype="float32") /* ty=Tensor[(12, 512), float32] */;
  %879 = minimum(%877, %878) /* ty=Tensor[(12, 512), float32] */;
  (%879,)
}

def @func_4542() -> (Tensor[(1, 512), float32],) {
  %880 = @func_2842() /* ty=(Tensor[(1, 512), float32],) */;
  %881 = %880.0;
  (%881,)
}

def @func_5560(%var_5553: Tensor[(8, 14, 7), float64]) -> (Tensor[(8, 14, 7), float64],) {
  %882 = cast(%var_5553, dtype="float64") /* ty=Tensor[(8, 14, 7), float64] */;
  %883 = tan(%882) /* ty=Tensor[(8, 14, 7), float64] */;
  (%883,)
}

def @func_5656() -> (Tensor[(12, 10, 1), float32],) {
  %884 = @func_2780() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %885 = %884.0;
  (%885,)
}

def @func_2903() -> Tensor[(1, 512), float32] {
  %886 = @func_2842() /* ty=(Tensor[(1, 512), float32],) */;
  %887 = %886.0;
  %888 = cast(%887, dtype="float32") /* ty=Tensor[(1, 512), float32] */;
  rsqrt(%888) /* ty=Tensor[(1, 512), float32] */
}

def @func_10221() -> (Tensor[(1, 512), float32],) {
  %889 = @func_4628() /* ty=(Tensor[(1, 512), float32],) */;
  %890 = %889.0;
  %891 = cast(%890, dtype="float32") /* ty=Tensor[(1, 512), float32] */;
  %892 = cos(%891) /* ty=Tensor[(1, 512), float32] */;
  (%892,)
}

def @func_5993() -> (Tensor[(1, 512), float32],) {
  %893 = @func_4017() /* ty=(Tensor[(1, 512), float32],) */;
  %894 = %893.0;
  %895 = cast(%894, dtype="float32") /* ty=Tensor[(1, 512), float32] */;
  %896 = atanh(%895) /* ty=Tensor[(1, 512), float32] */;
  (%896,)
}

def @func_3791() -> (Tensor[(1, 512), float32], Tensor[(12, 10, 1), float32]) {
  %897 = @func_2842() /* ty=(Tensor[(1, 512), float32],) */;
  %898 = @func_2408() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %899 = %897.0;
  %900 = %898.0;
  (%899, %900)
}

def @func_10117() -> (Tensor[(?, 512), int16],) {
  %901 = @func_5947() /* ty=(Tensor[(?, 512), int16], Tensor[(?, 512), uint32]) */;
  %902 = %901.0;
  (%902,)
}

def @func_4431() -> (Tensor[(12, 10, 1), float32],) {
  %903 = @func_3960() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %904 = %903.0;
  (%904,)
}

def @func_5144() -> (Tensor[(12, 10, 1), float32], Tensor[(1, 512), float32]) {
  %905 = @func_2512() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %906 = @func_4017() /* ty=(Tensor[(1, 512), float32],) */;
  %907 = %905.0;
  %908 = %906.0;
  (%907, %908)
}

def @func_3734(%var_3722: Tensor[(8, 512), float32]) -> Tensor[(8, 512), bool] {
  %909 = @func_2915() /* ty=Tensor[(1, 512), float32] */;
  %910 = cast(%909, dtype="bool") /* ty=Tensor[(1, 512), bool] */;
  %911 = cast(%var_3722, dtype="bool") /* ty=Tensor[(8, 512), bool] */;
  logical_and(%910, %911) /* ty=Tensor[(8, 512), bool] */
}

def @func_10181(%var_10122: Tensor[(7, 4, 1), float64], %var_10161: Tensor[(784), float64]) -> (Tensor[(6, 512), float64], Tensor[(7, 4, 1), float32], Tensor[(12, 10, 1), float32], Tensor[(7, 4, 1), float64], Tensor[(8, 14, 7), float64], Tensor[(784), float64]) {
  %912 = @func_9906() /* ty=(Tensor[(6, 512), float64], Tensor[(12, 10, 1), float32]) */;
  %913 = cast(%var_10122, dtype="float64") /* ty=Tensor[(7, 4, 1), float64] */;
  %914 = log2(%913) /* ty=Tensor[(7, 4, 1), float64] */;
  %915 = cast(%914, dtype="float32") /* ty=Tensor[(7, 4, 1), float32] */;
  %916 = @func_5144() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(1, 512), float32]) */;
  %917 = cast(%914, dtype="float64") /* ty=Tensor[(7, 4, 1), float64] */;
  %918 = cast(%var_10161, dtype="float64") /* ty=Tensor[(784), float64] */;
  %919 = reshape(%918, newshape=[8, 14, 7]) /* ty=Tensor[(8, 14, 7), float64] */;
  %920 = @func_5560(%919) /* ty=(Tensor[(8, 14, 7), float64],) */;
  %921 = %912.0;
  %922 = sqrt(%915) /* ty=Tensor[(7, 4, 1), float32] */;
  %923 = %916.0;
  %924 = tan(%917) /* ty=Tensor[(7, 4, 1), float64] */;
  %925 = %920.0;
  (%921, %922, %923, %924, %925, %var_10161)
}

def @func_6440() -> (Tensor[(12, 10, 1), float32],) {
  %926 = @func_3960() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %927 = %926.0;
  (%927,)
}

def @func_5437() -> (Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32]) {
  %928 = @func_4618() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %929 = %928.0;
  %930 = @func_4763() /* ty=Tensor[(12, 10, 1), float32] */;
  (%929, %930)
}

def @func_9179() -> (Tensor[(?, 512), int16], Tensor[(12, 10, 1), float64]) {
  %931 = @func_5947() /* ty=(Tensor[(?, 512), int16], Tensor[(?, 512), uint32]) */;
  %932 = @func_4152() /* ty=Tensor[(12, 10, 1), float32] */;
  %933 = cast(%932, dtype="float64") /* ty=Tensor[(12, 10, 1), float64] */;
  %934 = %931.0;
  %935 = atanh(%933) /* ty=Tensor[(12, 10, 1), float64] */;
  (%934, %935)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_5947() -> (Tensor[(?, 512), int16], Tensor[(?, 512), uint32]) {
  %0 = @func_4758() /* ty=(Tensor[(1, 512), float32], Tensor[(1, 512), float32], Tensor[(12, 10, 1), float32]) */;
  %1 = %0.1;
  %2 = cast(%1, dtype="float64") /* ty=Tensor[(1, 512), float64] */;
  %3 = sqrt(%2) /* ty=Tensor[(1, 512), float64] */;
  %4 = cast(%3, dtype="int16") /* ty=Tensor[(1, 512), int16] */;
  %5 = shape_of(%1, dtype="int32") /* ty=Tensor[(2), int32] */;
  %6 = cast(%1, dtype="int16") /* ty=Tensor[(1, 512), int16] */;
  %7 = dyn.reshape(%4, %5, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %8 = cast(%3, dtype="uint32") /* ty=Tensor[(1, 512), uint32] */;
  %9 = shape_of(%1, dtype="int32") /* ty=Tensor[(2), int32] */;
  %10 = cast(%1, dtype="uint32") /* ty=Tensor[(1, 512), uint32] */;
  %11 = dyn.reshape(%8, %9, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %12 = bitwise_or(%6, %7) /* ty=Tensor[(?, 512), int16] */;
  %13 = maximum(%10, %11) /* ty=Tensor[(?, 512), uint32] */;
  (%12, %13)
}

def @func_9907() -> (Tensor[(6, 512), float64], Tensor[(12, 10, 1), float32]) {
  %18 = fn () -> (Tensor[(6, 512), float64], Tensor[(12, 10, 1), float32]) {
    %14 = @func_5715() /* ty=(Tensor[(6, 512), float64],) */;
    %15 = @func_2512() /* ty=(Tensor[(12, 10, 1), float32],) */;
    %16 = %14.0;
    %17 = %15.0;
    (%16, %17)
  };
  %18() /* ty=(Tensor[(6, 512), float64], Tensor[(12, 10, 1), float32]) */
}

def @func_8193(%var_8191: Tensor[(1, 390), uint32], %var_8192: Tensor[(429), float64]) -> (Tensor[(12), float32], Tensor[(429), float64], Tensor[(8192), float32], Tensor[(429), float64], Tensor[(1, 390), float32]) {
  %31 = fn (%var_8182: Tensor[(1, 390), uint32], %var_8183: Tensor[(429), float64]) -> (Tensor[(12), float32], Tensor[(429), float64], Tensor[(8192), float32], Tensor[(429), float64], Tensor[(1, 390), float32]) {
    %19 = @func_7310() /* ty=(Tensor[(1, 512), float32], Tensor[(12), float32], Tensor[(1248), float32]) */;
    %20 = cast(meta[relay.Constant][0] /* ty=Tensor[(8192), float32] */, dtype="float32") /* ty=Tensor[(8192), float32] */;
    %21 = cast(%var_8182, dtype="uint32") /* ty=Tensor[(1, 390), uint32] */;
    %22 = cast(%var_8183, dtype="float64") /* ty=Tensor[(429), float64] */;
    %23 = reshape(%20, newshape=[16, 512]) /* ty=Tensor[(16, 512), float32] */;
    %24 = reshape(%21, newshape=[390]) /* ty=Tensor[(390), uint32] */;
    %25 = reshape(%22, newshape=[429]) /* ty=Tensor[(429), float64] */;
    %26 = @func_3653(%23, %24, %25) /* ty=(Tensor[(16, 512), float32], Tensor[(12, 10, 1), float32], Tensor[(13, 15, 2), uint32], Tensor[(390), uint32], Tensor[(12, 10, 1), float32], Tensor[(231), float64], Tensor[(231), float64], Tensor[(429), float64]) */;
    %27 = cast(%var_8182, dtype="float32") /* ty=Tensor[(1, 390), float32] */;
    %28 = %19.1;
    %29 = %26.7;
    %30 = cosh(%27) /* ty=Tensor[(1, 390), float32] */;
    (%28, %29, meta[relay.Constant][0] /* ty=Tensor[(8192), float32] */, %var_8183, %30)
  };
  %31(%var_8191, %var_8192) /* ty=(Tensor[(12), float32], Tensor[(429), float64], Tensor[(8192), float32], Tensor[(429), float64], Tensor[(1, 390), float32]) */
}

def @func_9597(%var_9512: Tensor[(5120), uint32], %var_9535: Tensor[(12, 10, 512), float32], %var_9577: Tensor[(300), bool]) -> (Tensor[(12, 10, 1), float32], Tensor[(1, 512), float32], Tensor[(12, 10, 1), float32], Tensor[(1040), float64], Tensor[(61440), int64], Tensor[(12, 10, 512), bool], Tensor[(5120), float32], Tensor[(12, 10, 1), float32], Tensor[(15, 4, 5), bool], Tensor[(300), bool], Tensor[(12, 10, 1), float32]) {
  %32 = @func_4542() /* ty=(Tensor[(1, 512), float32],) */;
  %33 = cast(%var_9512, dtype="uint32") /* ty=Tensor[(5120), uint32] */;
  %34 = reshape(%33, newshape=[10, 512]) /* ty=Tensor[(10, 512), uint32] */;
  %35 = @func_7117(%34) /* ty=(Tensor[(10, 512), bool], Tensor[(12, 10, 1), float32], Tensor[(10, 512), float64]) */;
  %36 = cast(meta[relay.Constant][1] /* ty=Tensor[(1040), float64] */, dtype="float64") /* ty=Tensor[(1040), float64] */;
  %37 = cast(meta[relay.Constant][2] /* ty=Tensor[(61440), int64] */, dtype="int64") /* ty=Tensor[(61440), int64] */;
  %38 = reshape(%36, newshape=[40, 26]) /* ty=Tensor[(40, 26), float64] */;
  %39 = reshape(%37, newshape=[12, 10, 512]) /* ty=Tensor[(12, 10, 512), int64] */;
  %40 = @func_6808(%38, %39) /* ty=(Tensor[(12, 10, 1), float32], Tensor[(150, 2), bool], Tensor[(12, 10, 8), bool], Tensor[(12, 10, 512), float32], Tensor[(12, 10, 13), bool], Tensor[(10, 13, 8), float64], Tensor[(40, 26), float64], Tensor[(12, 10, 512), float32], Tensor[(12, 10, 1), float32], Tensor[(12, 10, 512), bool]) */;
  %41 = %40.3;
  %42 = cast(%var_9535, dtype="bool") /* ty=Tensor[(12, 10, 512), bool] */;
  %43 = shape_of(%41, dtype="int32") /* ty=Tensor[(3), int32] */;
  %44 = cast(%41, dtype="bool") /* ty=Tensor[(12, 10, 512), bool] */;
  %45 = dyn.reshape(%42, %43, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %46 = cast(%var_9512, dtype="float64") /* ty=Tensor[(5120), float64] */;
  %47 = sinh(%46) /* ty=Tensor[(5120), float64] */;
  %48 = cast(%47, dtype="float32") /* ty=Tensor[(5120), float32] */;
  %49 = @func_3960() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %50 = cast(%var_9577, dtype="bool") /* ty=Tensor[(300), bool] */;
  %51 = reshape(%50, newshape=[15, 4, 5]) /* ty=Tensor[(15, 4, 5), bool] */;
  %52 = @func_3384(%51) /* ty=(Tensor[(15, 4, 5), bool],) */;
  %53 = @func_9077() /* ty=Tensor[(12, 10, 1), float32] */;
  %54 = %32.0;
  %55 = %35.1;
  %56 = equal(%44, %45) /* ty=Tensor[(12, 10, 512), bool] */;
  %57 = log(%48) /* ty=Tensor[(5120), float32] */;
  %58 = %49.0;
  %59 = %52.0;
  %60 = @func_5377() /* ty=Tensor[(12, 10, 1), float32] */;
  (%53, %54, %55, meta[relay.Constant][1] /* ty=Tensor[(1040), float64] */, meta[relay.Constant][2] /* ty=Tensor[(61440), int64] */, %56, %57, %58, %59, %var_9577, %60)
}

def @func_8437(%var_8436: Tensor[(11, 13, 3), float64]) -> (Tensor[(11, 13, 3), float64],) {
  %63 = fn (%var_8432: Tensor[(11, 13, 3), float64]) -> (Tensor[(11, 13, 3), float64],) {
    %61 = cast(%var_8432, dtype="float64") /* ty=Tensor[(11, 13, 3), float64] */;
    %62 = sin(%61) /* ty=Tensor[(11, 13, 3), float64] */;
    (%62,)
  };
  %63(%var_8436) /* ty=(Tensor[(11, 13, 3), float64],) */
}

def @func_8031() -> Tensor[(12, 10, 1), float32] {
  @func_7611() /* ty=Tensor[(12, 10, 1), float32] */
}

def @func_10184(%var_10182: Tensor[(7, 4, 1), float64], %var_10183: Tensor[(784), float64]) -> (Tensor[(6, 512), float64], Tensor[(7, 4, 1), float32], Tensor[(12, 10, 1), float32], Tensor[(7, 4, 1), float64], Tensor[(8, 14, 7), float64], Tensor[(784), float64]) {
  %78 = fn (%var_10122: Tensor[(7, 4, 1), float64], %var_10161: Tensor[(784), float64]) -> (Tensor[(6, 512), float64], Tensor[(7, 4, 1), float32], Tensor[(12, 10, 1), float32], Tensor[(7, 4, 1), float64], Tensor[(8, 14, 7), float64], Tensor[(784), float64]) {
    %64 = @func_9906() /* ty=(Tensor[(6, 512), float64], Tensor[(12, 10, 1), float32]) */;
    %65 = cast(%var_10122, dtype="float64") /* ty=Tensor[(7, 4, 1), float64] */;
    %66 = log2(%65) /* ty=Tensor[(7, 4, 1), float64] */;
    %67 = cast(%66, dtype="float32") /* ty=Tensor[(7, 4, 1), float32] */;
    %68 = @func_5144() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(1, 512), float32]) */;
    %69 = cast(%66, dtype="float64") /* ty=Tensor[(7, 4, 1), float64] */;
    %70 = cast(%var_10161, dtype="float64") /* ty=Tensor[(784), float64] */;
    %71 = reshape(%70, newshape=[8, 14, 7]) /* ty=Tensor[(8, 14, 7), float64] */;
    %72 = @func_5560(%71) /* ty=(Tensor[(8, 14, 7), float64],) */;
    %73 = %64.0;
    %74 = sqrt(%67) /* ty=Tensor[(7, 4, 1), float32] */;
    %75 = %68.0;
    %76 = tan(%69) /* ty=Tensor[(7, 4, 1), float64] */;
    %77 = %72.0;
    (%73, %74, %75, %76, %77, %var_10161)
  };
  %78(%var_10182, %var_10183) /* ty=(Tensor[(6, 512), float64], Tensor[(7, 4, 1), float32], Tensor[(12, 10, 1), float32], Tensor[(7, 4, 1), float64], Tensor[(8, 14, 7), float64], Tensor[(784), float64]) */
}

def @func_6053() -> (Tensor[(1, 512), float32], Tensor[(1, 512), float32]) {
  %79 = @func_2741() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(13, 15, 2), uint32], Tensor[(65, 6), uint32], Tensor[(12, 10, 1), float32], Tensor[(16, 16, 2), bool], Tensor[(1, 512), float32], Tensor[(1040), float64]) */;
  %80 = %79.5;
  %81 = @func_2903() /* ty=Tensor[(1, 512), float32] */;
  (%80, %81)
}

def @func_5012() -> (Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32]) {
  %82 = @func_4916() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %83 = @func_4758() /* ty=(Tensor[(1, 512), float32], Tensor[(1, 512), float32], Tensor[(12, 10, 1), float32]) */;
  %84 = %82.0;
  %85 = %83.2;
  (%84, %85)
}

def @func_381(%var_367: Tensor[(3, 11, 7), float64]) -> (Tensor[(10, 13, 8), float64], Tensor[(1040), float64], Tensor[(10, 13, 8), float64], Tensor[(13, 15, 2), uint32], Tensor[(390), uint32], Tensor[(3, 11, 7), float64], Tensor[(10, 13, 8), float64]) {
  %86 = cast(meta[relay.Constant][3] /* ty=Tensor[(1040), float64] */, dtype="float64") /* ty=Tensor[(1040), float64] */;
  %87 = reshape(%86, newshape=[10, 13, 8]) /* ty=Tensor[(10, 13, 8), float64] */;
  %88 = cast(meta[relay.Constant][3] /* ty=Tensor[(1040), float64] */, dtype="float64") /* ty=Tensor[(1040), float64] */;
  %89 = reshape(%88, newshape=[10, 13, 8]) /* ty=Tensor[(10, 13, 8), float64] */;
  %90 = cast(meta[relay.Constant][4] /* ty=Tensor[(390), uint32] */, dtype="uint32") /* ty=Tensor[(390), uint32] */;
  %91 = cast(meta[relay.Constant][4] /* ty=Tensor[(390), uint32] */, dtype="uint32") /* ty=Tensor[(390), uint32] */;
  %92 = reshape(%90, newshape=[13, 15, 2]) /* ty=Tensor[(13, 15, 2), uint32] */;
  %93 = reshape(%91, newshape=[13, 15, 2]) /* ty=Tensor[(13, 15, 2), uint32] */;
  %94 = cast(meta[relay.Constant][5] /* ty=Tensor[(3, 11, 7), float64] */, dtype="float64") /* ty=Tensor[(3, 11, 7), float64] */;
  %95 = asin(%94) /* ty=Tensor[(3, 11, 7), float64] */;
  %96 = cast(%var_367, dtype="float64") /* ty=Tensor[(3, 11, 7), float64] */;
  %97 = shape_of(%95, dtype="int32") /* ty=Tensor[(3), int32] */;
  %98 = cast(%95, dtype="float64") /* ty=Tensor[(3, 11, 7), float64] */;
  %99 = dyn.reshape(%96, %97, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %100 = @func_186(%89) /* ty=Tensor[(10, 13, 8), float64] */;
  %101 = cast(%100, dtype="float64") /* ty=Tensor[(10, 13, 8), float64] */;
  %102 = reshape(%101, newshape=[10, 13, 8]) /* ty=Tensor[(10, 13, 8), float64] */;
  %103 = @func_186(%87) /* ty=Tensor[(10, 13, 8), float64] */;
  %104 = @func_211(%92, %93) /* ty=Tensor[(13, 15, 2), uint32] */;
  %105 = divide(%98, %99) /* ty=Tensor[(3, 11, 7), float64] */;
  %106 = @func_186(%102) /* ty=Tensor[(10, 13, 8), float64] */;
  (%103, meta[relay.Constant][3] /* ty=Tensor[(1040), float64] */, %100, %104, meta[relay.Constant][4] /* ty=Tensor[(390), uint32] */, %105, %106)
}

def @func_4018() -> (Tensor[(1, 512), float32],) {
  %109 = fn () -> (Tensor[(1, 512), float32],) {
    %107 = @func_2842() /* ty=(Tensor[(1, 512), float32],) */;
    %108 = %107.0;
    (%108,)
  };
  %109() /* ty=(Tensor[(1, 512), float32],) */
}

def @func_4543() -> (Tensor[(1, 512), float32],) {
  %112 = fn () -> (Tensor[(1, 512), float32],) {
    %110 = @func_2842() /* ty=(Tensor[(1, 512), float32],) */;
    %111 = %110.0;
    (%111,)
  };
  %112() /* ty=(Tensor[(1, 512), float32],) */
}

def @func_384(%var_382: Tensor[(3, 11, 7), float64]) -> (Tensor[(10, 13, 8), float64], Tensor[(1040), float64], Tensor[(10, 13, 8), float64], Tensor[(13, 15, 2), uint32], Tensor[(390), uint32], Tensor[(3, 11, 7), float64], Tensor[(10, 13, 8), float64]) {
  @func_381(%var_382) /* ty=(Tensor[(10, 13, 8), float64], Tensor[(1040), float64], Tensor[(10, 13, 8), float64], Tensor[(13, 15, 2), uint32], Tensor[(390), uint32], Tensor[(3, 11, 7), float64], Tensor[(10, 13, 8), float64]) */
}

def @func_6629() -> (Tensor[(12, 10, 13), bool],) {
  @func_6627() /* ty=(Tensor[(12, 10, 13), bool],) */
}

def @func_4694(%var_4692: Tensor[(300), bool]) -> (Tensor[(12, 10, 1), float32], Tensor[(15, 4, 5), bool], Tensor[(300), bool], Tensor[(13, 15, 2), uint32], Tensor[(390), uint32]) {
  @func_4691(%var_4692) /* ty=(Tensor[(12, 10, 1), float32], Tensor[(15, 4, 5), bool], Tensor[(300), bool], Tensor[(13, 15, 2), uint32], Tensor[(390), uint32]) */
}

def @func_5379() -> Tensor[(12, 10, 1), float32] {
  @func_5377() /* ty=Tensor[(12, 10, 1), float32] */
}

def @func_4858(%var_4837: Tensor[(231), float64], %var_4838: Tensor[(429, 1), float64], %var_4843: Tensor[(4096), float32]) -> (Tensor[(1, 512), float32], Tensor[(12, 12, 13), int16], Tensor[(231), float64], Tensor[(429, 1), float64], Tensor[(8, 512), bool], Tensor[(4096), float32]) {
  %113 = @func_2842() /* ty=(Tensor[(1, 512), float32],) */;
  %114 = cast(%var_4837, dtype="float64") /* ty=Tensor[(231), float64] */;
  %115 = cast(%var_4838, dtype="float64") /* ty=Tensor[(429, 1), float64] */;
  %116 = reshape(%114, newshape=[11, 21]) /* ty=Tensor[(11, 21), float64] */;
  %117 = reshape(%115, newshape=[429]) /* ty=Tensor[(429), float64] */;
  %118 = @func_2617(%116, %117) /* ty=(Tensor[(12, 10, 1), float32], Tensor[(3, 11, 7), float64], Tensor[(11, 21), float64], Tensor[(12, 12, 13), int16], Tensor[(1872), bool], Tensor[(12, 12, 13), int16], Tensor[(13, 15, 2), uint32], Tensor[(390), uint32], Tensor[(10, 13, 8), float64], Tensor[(429), float64]) */;
  %119 = cast(%var_4843, dtype="float32") /* ty=Tensor[(4096), float32] */;
  %120 = reshape(%119, newshape=[8, 512]) /* ty=Tensor[(8, 512), float32] */;
  %121 = %113.0;
  %122 = %118.3;
  %123 = @func_3734(%120) /* ty=Tensor[(8, 512), bool] */;
  (%121, %122, %var_4837, %var_4838, %123, %var_4843)
}

def @func_6440() -> (Tensor[(12, 10, 1), float32],) {
  %124 = @func_3960() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %125 = %124.0;
  (%125,)
}

def @func_7078(%var_7063: Tensor[(9, 7, 9), uint8], %var_7064: Tensor[(9, 7, 9), uint8]) -> (Tensor[(9, 7, 9), uint8],) {
  %126 = cast(%var_7064, dtype="uint8") /* ty=Tensor[(9, 7, 9), uint8] */;
  %127 = shape_of(%var_7063, dtype="int32") /* ty=Tensor[(3), int32] */;
  %128 = cast(%var_7063, dtype="uint8") /* ty=Tensor[(9, 7, 9), uint8] */;
  %129 = dyn.reshape(%126, %127, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %130 = left_shift(%128, %129) /* ty=Tensor[(9, 7, 9), uint8] */;
  (%130,)
}

def @func_3238(%var_3237: Tensor[(1, 5, 8), float64]) -> (Tensor[(1, 5, 8), float64],) {
  %133 = fn (%var_3229: Tensor[(1, 5, 8), float64]) -> (Tensor[(1, 5, 8), float64],) {
    %131 = cast(%var_3229, dtype="float64") /* ty=Tensor[(1, 5, 8), float64] */;
    %132 = log10(%131) /* ty=Tensor[(1, 5, 8), float64] */;
    (%132,)
  };
  %133(%var_3237) /* ty=(Tensor[(1, 5, 8), float64],) */
}

def @func_9278() -> (Tensor[(13, 15, 2), uint32],) {
  %136 = fn () -> (Tensor[(13, 15, 2), uint32],) {
    %134 = @func_2741() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(13, 15, 2), uint32], Tensor[(65, 6), uint32], Tensor[(12, 10, 1), float32], Tensor[(16, 16, 2), bool], Tensor[(1, 512), float32], Tensor[(1040), float64]) */;
    %135 = %134.1;
    (%135,)
  };
  %136() /* ty=(Tensor[(13, 15, 2), uint32],) */
}

def @func_9968() -> (Tensor[(12), float32], Tensor[(12, 10, 1), float32]) {
  %140 = fn () -> (Tensor[(12), float32], Tensor[(12, 10, 1), float32]) {
    %137 = @func_7310() /* ty=(Tensor[(1, 512), float32], Tensor[(12), float32], Tensor[(1248), float32]) */;
    %138 = %137.1;
    %139 = @func_2650() /* ty=Tensor[(12, 10, 1), float32] */;
    (%138, %139)
  };
  %140() /* ty=(Tensor[(12), float32], Tensor[(12, 10, 1), float32]) */
}

def @func_1738(%var_1736: Tensor[(5, 16, 14), int16], %var_1737: Tensor[(8, 130), float64]) -> (Tensor[(5, 16, 14), int16], Tensor[(10, 13, 8), float64], Tensor[(8, 130), float64], Tensor[(13, 15, 2), uint32], Tensor[(33, 7), float64]) {
  @func_1734(%var_1736, %var_1737) /* ty=(Tensor[(5, 16, 14), int16], Tensor[(10, 13, 8), float64], Tensor[(8, 130), float64], Tensor[(13, 15, 2), uint32], Tensor[(33, 7), float64]) */
}

def @func_6811(%var_6809: Tensor[(40, 26), float64], %var_6810: Tensor[(12, 10, 512), int64]) -> (Tensor[(12, 10, 1), float32], Tensor[(150, 2), bool], Tensor[(12, 10, 8), bool], Tensor[(12, 10, 512), float32], Tensor[(12, 10, 13), bool], Tensor[(10, 13, 8), float64], Tensor[(40, 26), float64], Tensor[(12, 10, 512), float32], Tensor[(12, 10, 1), float32], Tensor[(12, 10, 512), bool]) {
  %175 = fn (%var_6777: Tensor[(40, 26), float64], %var_6792: Tensor[(12, 10, 512), int64]) -> (Tensor[(12, 10, 1), float32], Tensor[(150, 2), bool], Tensor[(12, 10, 8), bool], Tensor[(12, 10, 512), float32], Tensor[(12, 10, 13), bool], Tensor[(10, 13, 8), float64], Tensor[(40, 26), float64], Tensor[(12, 10, 512), float32], Tensor[(12, 10, 1), float32], Tensor[(12, 10, 512), bool]) {
    %141 = @func_4180() /* ty=(Tensor[(12, 10, 1), float32],) */;
    %142 = @func_4237() /* ty=(Tensor[(1, 512), float32], Tensor[(15, 4, 5), bool], Tensor[(150, 2), bool]) */;
    %143 = @func_6083() /* ty=(Tensor[(12, 10, 8), bool],) */;
    %144 = @func_2408() /* ty=(Tensor[(12, 10, 1), float32],) */;
    %145 = %144.0;
    %146 = @func_5363() /* ty=(Tensor[(1, 512), float32],) */;
    %147 = %146.0;
    %148 = cast(%147, dtype="float32") /* ty=Tensor[(1, 512), float32] */;
    %149 = cast(%145, dtype="float32") /* ty=Tensor[(12, 10, 1), float32] */;
    %150 = divide(%148, %149) /* ty=Tensor[(12, 10, 512), float32] */;
    %151 = cast(%145, dtype="int64") /* ty=Tensor[(12, 10, 1), int64] */;
    %152 = cast(%150, dtype="int64") /* ty=Tensor[(12, 10, 512), int64] */;
    %153 = add(%151, %152) /* ty=Tensor[(12, 10, 512), int64] */;
    %154 = cast(%153, dtype="float32") /* ty=Tensor[(12, 10, 512), float32] */;
    %155 = @func_6627() /* ty=(Tensor[(12, 10, 13), bool],) */;
    %156 = cast(%var_6777, dtype="float64") /* ty=Tensor[(40, 26), float64] */;
    %157 = reshape(%156, newshape=[10, 13, 8]) /* ty=Tensor[(10, 13, 8), float64] */;
    %158 = cast(%153, dtype="float32") /* ty=Tensor[(12, 10, 512), float32] */;
    %159 = shape_of(%150, dtype="int32") /* ty=Tensor[(3), int32] */;
    %160 = cast(%150, dtype="float32") /* ty=Tensor[(12, 10, 512), float32] */;
    %161 = dyn.reshape(%158, %159, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %162 = cast(%var_6792, dtype="bool") /* ty=Tensor[(12, 10, 512), bool] */;
    %163 = shape_of(%153, dtype="int32") /* ty=Tensor[(3), int32] */;
    %164 = cast(%153, dtype="bool") /* ty=Tensor[(12, 10, 512), bool] */;
    %165 = dyn.reshape(%162, %163, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %166 = %141.0;
    %167 = %142.2;
    %168 = %143.0;
    %169 = atanh(%154) /* ty=Tensor[(12, 10, 512), float32] */;
    %170 = %155.0;
    %171 = @func_186(%157) /* ty=Tensor[(10, 13, 8), float64] */;
    %172 = power(%160, %161) /* ty=Tensor[(12, 10, 512), float32] */;
    %173 = @func_4152() /* ty=Tensor[(12, 10, 1), float32] */;
    %174 = greater(%164, %165) /* ty=Tensor[(12, 10, 512), bool] */;
    (%166, %167, %168, %169, %170, %171, %var_6777, %172, %173, %174)
  };
  %175(%var_6809, %var_6810) /* ty=(Tensor[(12, 10, 1), float32], Tensor[(150, 2), bool], Tensor[(12, 10, 8), bool], Tensor[(12, 10, 512), float32], Tensor[(12, 10, 13), bool], Tensor[(10, 13, 8), float64], Tensor[(40, 26), float64], Tensor[(12, 10, 512), float32], Tensor[(12, 10, 1), float32], Tensor[(12, 10, 512), bool]) */
}

def @func_6878(%var_6876: Tensor[(12, 10, 10), float32]) -> (Tensor[(12, 10, 10), bool], Tensor[(12, 10, 10), uint16]) {
  @func_6875(%var_6876) /* ty=(Tensor[(12, 10, 10), bool], Tensor[(12, 10, 10), uint16]) */
}

def @func_2410() -> (Tensor[(12, 10, 1), float32],) {
  @func_2408() /* ty=(Tensor[(12, 10, 1), float32],) */
}

def @func_4180() -> (Tensor[(12, 10, 1), float32],) {
  %176 = @func_4001() /* ty=Tensor[(12, 10, 1), float32] */;
  (%176,)
}

def @func_2917() -> Tensor[(1, 512), float32] {
  @func_2915() /* ty=Tensor[(1, 512), float32] */
}

def @func_7726() -> Tensor[(12, 10, 8), bool] {
  %177 = fn () -> Tensor[(12, 10, 8), bool] {
    @func_5784() /* ty=Tensor[(12, 10, 8), bool] */
  };
  %177() /* ty=Tensor[(12, 10, 8), bool] */
}

def @func_4942(%var_4937: Tensor[(512), float32]) -> (Tensor[(12, 10, 1), float32], Tensor[(?, 512), uint32], Tensor[(512), float32]) {
  %178 = @func_4916() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %179 = cast(%var_4937, dtype="float32") /* ty=Tensor[(512), float32] */;
  %180 = reshape(%179, newshape=[1, 512]) /* ty=Tensor[(1, 512), float32] */;
  %181 = %178.0;
  %182 = @func_3704(%180) /* ty=Tensor[(?, 512), uint32] */;
  (%181, %182, %var_4937)
}

def @func_7082(%var_7080: Tensor[(9, 7, 9), uint8], %var_7081: Tensor[(9, 7, 9), uint8]) -> (Tensor[(9, 7, 9), uint8],) {
  @func_7078(%var_7080, %var_7081) /* ty=(Tensor[(9, 7, 9), uint8],) */
}

def @func_3351(%var_3349: Tensor[(2, 616), uint8], %var_3350: Tensor[(12), float32]) -> (Tensor[(1, 3, 4), float32], Tensor[(2, 616), uint8], Tensor[(12, 10, 12), float64], Tensor[(12, 10, ?), bool]) {
  %201 = fn (%var_3303: Tensor[(2, 616), uint8], %var_3304: Tensor[(12), float32]) -> (Tensor[(1, 3, 4), float32], Tensor[(2, 616), uint8], Tensor[(12, 10, 12), float64], Tensor[(12, 10, ?), bool]) {
    %183 = cast(%var_3303, dtype="uint8") /* ty=Tensor[(2, 616), uint8] */;
    %184 = cast(%var_3304, dtype="float32") /* ty=Tensor[(12), float32] */;
    %185 = reshape(%183, newshape=[14, 11, 8]) /* ty=Tensor[(14, 11, 8), uint8] */;
    %186 = reshape(%184, newshape=[12]) /* ty=Tensor[(12), float32] */;
    %187 = @func_624(%185, %186) /* ty=(Tensor[(14, 11, 8), bool], Tensor[(1, 3, 4), float32], Tensor[(12), float32]) */;
    %188 = @func_2428() /* ty=(Tensor[(12, 10, 1), float32],) */;
    %189 = %188.0;
    %190 = cast(%189, dtype="float32") /* ty=Tensor[(12, 10, 1), float32] */;
    %191 = acosh(%190) /* ty=Tensor[(12, 10, 1), float32] */;
    %192 = cast(%191, dtype="float64") /* ty=Tensor[(12, 10, 1), float64] */;
    %193 = cast(%var_3304, dtype="float64") /* ty=Tensor[(12), float64] */;
    %194 = cast(%189, dtype="bool") /* ty=Tensor[(12, 10, 1), bool] */;
    %195 = shape_of(%191, dtype="int32") /* ty=Tensor[(3), int32] */;
    %196 = cast(%191, dtype="bool") /* ty=Tensor[(12, 10, 1), bool] */;
    %197 = dyn.reshape(%194, %195, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %198 = %187.1;
    %199 = floor_divide(%192, %193) /* ty=Tensor[(12, 10, 12), float64] */;
    %200 = not_equal(%196, %197) /* ty=Tensor[(12, 10, ?), bool] */;
    (%198, %var_3303, %199, %200)
  };
  %201(%var_3349, %var_3350) /* ty=(Tensor[(1, 3, 4), float32], Tensor[(2, 616), uint8], Tensor[(12, 10, 12), float64], Tensor[(12, 10, ?), bool]) */
}

def @func_7861() -> Tensor[(12, 10, 1), float32] {
  %203 = fn () -> Tensor[(12, 10, 1), float32] {
    %202 = @func_4180() /* ty=(Tensor[(12, 10, 1), float32],) */;
    %202.0
  };
  %203() /* ty=Tensor[(12, 10, 1), float32] */
}

def @func_6627() -> (Tensor[(12, 10, 13), bool],) {
  %204 = @func_2408() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %205 = %204.0;
  %206 = cast(%205, dtype="bool") /* ty=Tensor[(12, 10, 1), bool] */;
  %207 = cast(meta[relay.Constant][6] /* ty=Tensor[(12, 10, 13), float32] */, dtype="bool") /* ty=Tensor[(12, 10, 13), bool] */;
  %208 = less(%206, %207) /* ty=Tensor[(12, 10, 13), bool] */;
  (%208,)
}

def @func_9850(%var_9817: Tensor[(11, 9, 8), uint16]) -> (Tensor[(11, 9, 8), bool], Tensor[(12, 10, 1), float32], Tensor[(504), float32]) {
  %209 = cast(meta[relay.Constant][7] /* ty=Tensor[(11, 9, 8), uint16] */, dtype="bool") /* ty=Tensor[(11, 9, 8), bool] */;
  %210 = shape_of(%var_9817, dtype="int32") /* ty=Tensor[(3), int32] */;
  %211 = cast(%var_9817, dtype="bool") /* ty=Tensor[(11, 9, 8), bool] */;
  %212 = dyn.reshape(%209, %210, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %213 = cast(meta[relay.Constant][8] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
  %214 = reshape(%213, newshape=[4, 14, 9]) /* ty=Tensor[(4, 14, 9), float32] */;
  %215 = @func_7996(%214) /* ty=(Tensor[(4, 14, 9), float32], Tensor[(12, 10, 1), float32]) */;
  %216 = greater(%211, %212) /* ty=Tensor[(11, 9, 8), bool] */;
  %217 = %215.1;
  (%216, %217, meta[relay.Constant][8] /* ty=Tensor[(504), float32] */)
}

def @func_5657() -> (Tensor[(12, 10, 1), float32],) {
  %220 = fn () -> (Tensor[(12, 10, 1), float32],) {
    %218 = @func_2780() /* ty=(Tensor[(12, 10, 1), float32],) */;
    %219 = %218.0;
    (%219,)
  };
  %220() /* ty=(Tensor[(12, 10, 1), float32],) */
}

def @func_4917() -> (Tensor[(12, 10, 1), float32],) {
  %223 = fn () -> (Tensor[(12, 10, 1), float32],) {
    %221 = @func_4431() /* ty=(Tensor[(12, 10, 1), float32],) */;
    %222 = %221.0;
    (%222,)
  };
  %223() /* ty=(Tensor[(12, 10, 1), float32],) */
}

def @func_2514() -> (Tensor[(12, 10, 1), float32],) {
  @func_2512() /* ty=(Tensor[(12, 10, 1), float32],) */
}

def @func_4620() -> (Tensor[(12, 10, 1), float32],) {
  @func_4618() /* ty=(Tensor[(12, 10, 1), float32],) */
}

def @func_6277() -> (Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32]) {
  @func_6275() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32]) */
}

def @func_2743() -> (Tensor[(12, 10, 1), float32], Tensor[(13, 15, 2), uint32], Tensor[(65, 6), uint32], Tensor[(12, 10, 1), float32], Tensor[(16, 16, 2), bool], Tensor[(1, 512), float32], Tensor[(1040), float64]) {
  @func_2741() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(13, 15, 2), uint32], Tensor[(65, 6), uint32], Tensor[(12, 10, 1), float32], Tensor[(16, 16, 2), bool], Tensor[(1, 512), float32], Tensor[(1040), float64]) */
}

def @func_8158() -> (Tensor[(12, 10, 1), float32], Tensor[(1, 512), float32], Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32]) {
  @func_8156() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(1, 512), float32], Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32]) */
}

def @func_9180() -> (Tensor[(?, 512), int16], Tensor[(12, 10, 1), float64]) {
  %229 = fn () -> (Tensor[(?, 512), int16], Tensor[(12, 10, 1), float64]) {
    %224 = @func_5947() /* ty=(Tensor[(?, 512), int16], Tensor[(?, 512), uint32]) */;
    %225 = @func_4152() /* ty=Tensor[(12, 10, 1), float32] */;
    %226 = cast(%225, dtype="float64") /* ty=Tensor[(12, 10, 1), float64] */;
    %227 = %224.0;
    %228 = atanh(%226) /* ty=Tensor[(12, 10, 1), float64] */;
    (%227, %228)
  };
  %229() /* ty=(Tensor[(?, 512), int16], Tensor[(12, 10, 1), float64]) */
}

def @func_4628() -> (Tensor[(1, 512), float32],) {
  %230 = @func_4017() /* ty=(Tensor[(1, 512), float32],) */;
  %231 = %230.0;
  (%231,)
}

def @func_3580(%var_3535: Tensor[(231), float64], %var_3536: Tensor[(429), float64], %var_3545: Tensor[(512), float32]) -> (Tensor[(12, 10, 1), float32], Tensor[(12, 12, 13), int16], Tensor[(231), float64], Tensor[(16, 16, 2), bool], Tensor[(512), float32], Tensor[(1040), float64], Tensor[(429), float32], Tensor[(1872), bool]) {
  %232 = cast(%var_3535, dtype="float64") /* ty=Tensor[(231), float64] */;
  %233 = cast(%var_3536, dtype="float64") /* ty=Tensor[(429), float64] */;
  %234 = reshape(%232, newshape=[11, 21]) /* ty=Tensor[(11, 21), float64] */;
  %235 = reshape(%233, newshape=[429]) /* ty=Tensor[(429), float64] */;
  %236 = @func_2617(%234, %235) /* ty=(Tensor[(12, 10, 1), float32], Tensor[(3, 11, 7), float64], Tensor[(11, 21), float64], Tensor[(12, 12, 13), int16], Tensor[(1872), bool], Tensor[(12, 12, 13), int16], Tensor[(13, 15, 2), uint32], Tensor[(390), uint32], Tensor[(10, 13, 8), float64], Tensor[(429), float64]) */;
  %237 = cast(%var_3545, dtype="float32") /* ty=Tensor[(512), float32] */;
  %238 = cast(meta[relay.Constant][9] /* ty=Tensor[(1040), float64] */, dtype="float64") /* ty=Tensor[(1040), float64] */;
  %239 = reshape(%237, newshape=[16, 16, 2]) /* ty=Tensor[(16, 16, 2), float32] */;
  %240 = reshape(%238, newshape=[1040]) /* ty=Tensor[(1040), float64] */;
  %241 = @func_2251(%239, %240) /* ty=(Tensor[(16, 16, 2), bool], Tensor[(10, 13, 8), float64], Tensor[(1040), float64]) */;
  %242 = cast(%var_3536, dtype="float32") /* ty=Tensor[(429), float32] */;
  %243 = @func_2711() /* ty=(Tensor[(12, 10, 11), bool], Tensor[(12, 10, 1), float32], Tensor[(12, 12, 13), int16], Tensor[(1872), bool], Tensor[(12, 10, 1), float32]) */;
  %244 = @func_3481() /* ty=Tensor[(12, 10, 1), float32] */;
  %245 = %236.3;
  %246 = %241.0;
  %247 = rsqrt(%242) /* ty=Tensor[(429), float32] */;
  %248 = %243.3;
  (%244, %245, %var_3535, %246, %var_3545, meta[relay.Constant][9] /* ty=Tensor[(1040), float64] */, %247, %248)
}

def @func_3384(%var_3364: Tensor[(15, 4, 5), bool]) -> (Tensor[(15, 4, 5), bool],) {
  %249 = cast(meta[relay.Constant][10] /* ty=Tensor[(15, 4, 5), bool] */, dtype="bool") /* ty=Tensor[(15, 4, 5), bool] */;
  %250 = shape_of(%var_3364, dtype="int32") /* ty=Tensor[(3), int32] */;
  %251 = cast(%var_3364, dtype="bool") /* ty=Tensor[(15, 4, 5), bool] */;
  %252 = dyn.reshape(%249, %250, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %253 = logical_and(%251, %252) /* ty=Tensor[(15, 4, 5), bool] */;
  (%253,)
}

def @func_4863(%var_4860: Tensor[(231), float64], %var_4861: Tensor[(429, 1), float64], %var_4862: Tensor[(4096), float32]) -> (Tensor[(1, 512), float32], Tensor[(12, 12, 13), int16], Tensor[(231), float64], Tensor[(429, 1), float64], Tensor[(8, 512), bool], Tensor[(4096), float32]) {
  @func_4858(%var_4860, %var_4861, %var_4862) /* ty=(Tensor[(1, 512), float32], Tensor[(12, 12, 13), int16], Tensor[(231), float64], Tensor[(429, 1), float64], Tensor[(8, 512), bool], Tensor[(4096), float32]) */
}

def @func_7203() -> Tensor[(12, 10, 1), float32] {
  %254 = fn () -> Tensor[(12, 10, 1), float32] {
    @func_4001() /* ty=Tensor[(12, 10, 1), float32] */
  };
  %254() /* ty=Tensor[(12, 10, 1), float32] */
}

def @func_2741() -> (Tensor[(12, 10, 1), float32], Tensor[(13, 15, 2), uint32], Tensor[(65, 6), uint32], Tensor[(12, 10, 1), float32], Tensor[(16, 16, 2), bool], Tensor[(1, 512), float32], Tensor[(1040), float64]) {
  %255 = cast(meta[relay.Constant][11] /* ty=Tensor[(65, 6), uint32] */, dtype="uint32") /* ty=Tensor[(65, 6), uint32] */;
  %256 = cast(meta[relay.Constant][11] /* ty=Tensor[(65, 6), uint32] */, dtype="uint32") /* ty=Tensor[(65, 6), uint32] */;
  %257 = reshape(%255, newshape=[13, 15, 2]) /* ty=Tensor[(13, 15, 2), uint32] */;
  %258 = reshape(%256, newshape=[13, 15, 2]) /* ty=Tensor[(13, 15, 2), uint32] */;
  %259 = cast(meta[relay.Constant][12] /* ty=Tensor[(1, 512), float32] */, dtype="float32") /* ty=Tensor[(1, 512), float32] */;
  %260 = cast(meta[relay.Constant][13] /* ty=Tensor[(1040), float64] */, dtype="float64") /* ty=Tensor[(1040), float64] */;
  %261 = reshape(%259, newshape=[16, 16, 2]) /* ty=Tensor[(16, 16, 2), float32] */;
  %262 = reshape(%260, newshape=[1040]) /* ty=Tensor[(1040), float64] */;
  %263 = @func_2251(%261, %262) /* ty=(Tensor[(16, 16, 2), bool], Tensor[(10, 13, 8), float64], Tensor[(1040), float64]) */;
  %264 = @func_2650() /* ty=Tensor[(12, 10, 1), float32] */;
  %265 = @func_211(%257, %258) /* ty=Tensor[(13, 15, 2), uint32] */;
  %266 = @func_2650() /* ty=Tensor[(12, 10, 1), float32] */;
  %267 = %263.0;
  (%264, %265, meta[relay.Constant][11] /* ty=Tensor[(65, 6), uint32] */, %266, %267, meta[relay.Constant][12] /* ty=Tensor[(1, 512), float32] */, meta[relay.Constant][13] /* ty=Tensor[(1040), float64] */)
}

def @func_8568() -> Tensor[(12, 10, 1), float32] {
  %268 = @func_5889() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %268.0
}

def @func_5605(%var_5604: Tensor[(784), float64]) -> (Tensor[(12, 10, 1), float32], Tensor[(8, 14, 7), float64], Tensor[(784), int16]) {
  %279 = fn (%var_5588: Tensor[(784), float64]) -> (Tensor[(12, 10, 1), float32], Tensor[(8, 14, 7), float64], Tensor[(784), int16]) {
    %269 = cast(meta[relay.Constant][14] /* ty=Tensor[(784), float64] */, dtype="float64") /* ty=Tensor[(784), float64] */;
    %270 = reshape(%269, newshape=[8, 14, 7]) /* ty=Tensor[(8, 14, 7), float64] */;
    %271 = @func_5560(%270) /* ty=(Tensor[(8, 14, 7), float64],) */;
    %272 = cast(%var_5588, dtype="int16") /* ty=Tensor[(784), int16] */;
    %273 = shape_of(meta[relay.Constant][14] /* ty=Tensor[(784), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %274 = cast(meta[relay.Constant][14] /* ty=Tensor[(784), float64] */, dtype="int16") /* ty=Tensor[(784), int16] */;
    %275 = dyn.reshape(%272, %273, newshape=[]) /* ty=Tensor[(?), int16] */;
    %276 = @func_4001() /* ty=Tensor[(12, 10, 1), float32] */;
    %277 = %271.0;
    %278 = right_shift(%274, %275) /* ty=Tensor[(784), int16] */;
    (%276, %277, %278)
  };
  %279(%var_5604) /* ty=(Tensor[(12, 10, 1), float32], Tensor[(8, 14, 7), float64], Tensor[(784), int16]) */
}

def @func_7461(%var_7459: Tensor[(12, 10, 1), float32]) -> Tensor[(12, 10, ?), float32] {
  @func_7458(%var_7459) /* ty=Tensor[(12, 10, ?), float32] */
}

def @func_8305() -> (Tensor[(5, 9, 11), float64],) {
  @func_8303() /* ty=(Tensor[(5, 9, 11), float64],) */
}

def @func_6609() -> (Tensor[(1, 512), float32], Tensor[(12, 10, 1), float32]) {
  %280 = @func_2842() /* ty=(Tensor[(1, 512), float32],) */;
  %281 = @func_3791() /* ty=(Tensor[(1, 512), float32], Tensor[(12, 10, 1), float32]) */;
  %282 = %280.0;
  %283 = %281.1;
  (%282, %283)
}

def @func_3482() -> Tensor[(12, 10, 1), float32] {
  %285 = fn () -> Tensor[(12, 10, 1), float32] {
    %284 = @func_3422() /* ty=(Tensor[(12, 10, 1), float32],) */;
    %284.0
  };
  %285() /* ty=Tensor[(12, 10, 1), float32] */
}

def @func_10098(%var_10094: Tensor[(6, 512), float64], %var_10095: Tensor[(6, 512), int8], %var_10096: Tensor[(792), uint16], %var_10097: Tensor[(6, 512), float32]) -> (Tensor[(12, 10, ?), bool], Tensor[(6, 512), bool], Tensor[(12, 10, ?), float64], Tensor[(6, 512), int64], Tensor[(12, 10, 1), float32], Tensor[(792), uint16], Tensor[(6, 512), bool]) {
  @func_10092(%var_10094, %var_10095, %var_10096, %var_10097) /* ty=(Tensor[(12, 10, ?), bool], Tensor[(6, 512), bool], Tensor[(12, 10, ?), float64], Tensor[(6, 512), int64], Tensor[(12, 10, 1), float32], Tensor[(792), uint16], Tensor[(6, 512), bool]) */
}

def @func_10117() -> (Tensor[(?, 512), int16],) {
  %286 = @func_5947() /* ty=(Tensor[(?, 512), int16], Tensor[(?, 512), uint32]) */;
  %287 = %286.0;
  (%287,)
}

def @func_2713() -> (Tensor[(12, 10, 11), bool], Tensor[(12, 10, 1), float32], Tensor[(12, 12, 13), int16], Tensor[(1872), bool], Tensor[(12, 10, 1), float32]) {
  @func_2711() /* ty=(Tensor[(12, 10, 11), bool], Tensor[(12, 10, 1), float32], Tensor[(12, 12, 13), int16], Tensor[(1872), bool], Tensor[(12, 10, 1), float32]) */
}

def @func_9853(%var_9851: Tensor[(11, 9, 8), uint16]) -> (Tensor[(11, 9, 8), bool], Tensor[(12, 10, 1), float32], Tensor[(504), float32]) {
  @func_9850(%var_9851) /* ty=(Tensor[(11, 9, 8), bool], Tensor[(12, 10, 1), float32], Tensor[(504), float32]) */
}

def @func_2842() -> (Tensor[(1, 512), float32],) {
  %288 = @func_2741() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(13, 15, 2), uint32], Tensor[(65, 6), uint32], Tensor[(12, 10, 1), float32], Tensor[(16, 16, 2), bool], Tensor[(1, 512), float32], Tensor[(1040), float64]) */;
  %289 = %288.5;
  %290 = cast(%289, dtype="float32") /* ty=Tensor[(1, 512), float32] */;
  %291 = log10(%290) /* ty=Tensor[(1, 512), float32] */;
  (%291,)
}

def @func_5144() -> (Tensor[(12, 10, 1), float32], Tensor[(1, 512), float32]) {
  %292 = @func_2512() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %293 = @func_4017() /* ty=(Tensor[(1, 512), float32],) */;
  %294 = %292.0;
  %295 = %293.0;
  (%294, %295)
}

def @func_5784() -> Tensor[(12, 10, 8), bool] {
  %296 = @func_4406() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32]) */;
  %297 = %296.2;
  %298 = cast(%297, dtype="bool") /* ty=Tensor[(12, 10, 1), bool] */;
  %299 = cast(meta[relay.Constant][15] /* ty=Tensor[(12, 10, 8), float32] */, dtype="bool") /* ty=Tensor[(12, 10, 8), bool] */;
  greater(%298, %299) /* ty=Tensor[(12, 10, 8), bool] */
}

def @func_2711() -> (Tensor[(12, 10, 11), bool], Tensor[(12, 10, 1), float32], Tensor[(12, 12, 13), int16], Tensor[(1872), bool], Tensor[(12, 10, 1), float32]) {
  %300 = @func_2512() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %301 = %300.0;
  %302 = cast(%301, dtype="bool") /* ty=Tensor[(12, 10, 1), bool] */;
  %303 = cast(meta[relay.Constant][16] /* ty=Tensor[(12, 10, 11), float32] */, dtype="bool") /* ty=Tensor[(12, 10, 11), bool] */;
  %304 = @func_2408() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %305 = cast(meta[relay.Constant][17] /* ty=Tensor[(1872), bool] */, dtype="bool") /* ty=Tensor[(1872), bool] */;
  %306 = reshape(%305, newshape=[12, 12, 13]) /* ty=Tensor[(12, 12, 13), bool] */;
  %307 = @func_2408() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %308 = less_equal(%302, %303) /* ty=Tensor[(12, 10, 11), bool] */;
  %309 = %304.0;
  %310 = @func_667(%306) /* ty=Tensor[(12, 12, 13), int16] */;
  %311 = %307.0;
  (%308, %309, %310, meta[relay.Constant][17] /* ty=Tensor[(1872), bool] */, %311)
}

def @func_3704(%var_3686: Tensor[(1, 512), float32]) -> Tensor[(?, 512), uint32] {
  %312 = @func_2915() /* ty=Tensor[(1, 512), float32] */;
  %313 = cast(%var_3686, dtype="uint32") /* ty=Tensor[(1, 512), uint32] */;
  %314 = shape_of(%312, dtype="int32") /* ty=Tensor[(2), int32] */;
  %315 = cast(%312, dtype="uint32") /* ty=Tensor[(1, 512), uint32] */;
  %316 = dyn.reshape(%313, %314, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  logical_xor(%315, %316) /* ty=Tensor[(?, 512), uint32] */
}

def @func_5411() -> (Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32]) {
  %317 = @func_4180() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %318 = @func_4152() /* ty=Tensor[(12, 10, 1), float32] */;
  %319 = %317.0;
  (%318, %319)
}

def @func_6257() -> (Tensor[(?, 512), uint32],) {
  %320 = @func_4074() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(?, 512), uint32], Tensor[(512), float32]) */;
  %321 = %320.1;
  (%321,)
}

def @func_667(%var_653: Tensor[(12, 12, 13), bool]) -> Tensor[(12, 12, 13), int16] {
  %322 = cast(%var_653, dtype="bool") /* ty=Tensor[(12, 12, 13), bool] */;
  %323 = shape_of(meta[relay.Constant][18] /* ty=Tensor[(12, 12, 13), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %324 = cast(meta[relay.Constant][18] /* ty=Tensor[(12, 12, 13), bool] */, dtype="bool") /* ty=Tensor[(12, 12, 13), bool] */;
  %325 = dyn.reshape(%322, %323, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %326 = logical_and(%324, %325) /* ty=Tensor[(12, 12, 13), bool] */;
  %327 = cast(%326, dtype="int16") /* ty=Tensor[(12, 12, 13), int16] */;
  %328 = shape_of(%var_653, dtype="int32") /* ty=Tensor[(3), int32] */;
  %329 = cast(%var_653, dtype="int16") /* ty=Tensor[(12, 12, 13), int16] */;
  %330 = dyn.reshape(%327, %328, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  maximum(%329, %330) /* ty=Tensor[(12, 12, 13), int16] */
}

def @func_8570() -> Tensor[(12, 10, 1), float32] {
  @func_8568() /* ty=Tensor[(12, 10, 1), float32] */
}

def @func_2780() -> (Tensor[(12, 10, 1), float32],) {
  %331 = @func_2711() /* ty=(Tensor[(12, 10, 11), bool], Tensor[(12, 10, 1), float32], Tensor[(12, 12, 13), int16], Tensor[(1872), bool], Tensor[(12, 10, 1), float32]) */;
  %332 = %331.4;
  (%332,)
}

def @func_10092(%var_10048: Tensor[(6, 512), float64], %var_10055: Tensor[(6, 512), int8], %var_10079: Tensor[(792), uint16], %var_10087: Tensor[(6, 512), float32]) -> (Tensor[(12, 10, ?), bool], Tensor[(6, 512), bool], Tensor[(12, 10, ?), float64], Tensor[(6, 512), int64], Tensor[(12, 10, 1), float32], Tensor[(792), uint16], Tensor[(6, 512), bool]) {
  %333 = @func_2650() /* ty=Tensor[(12, 10, 1), float32] */;
  %334 = @func_3960() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %335 = %334.0;
  %336 = cast(%335, dtype="bool") /* ty=Tensor[(12, 10, 1), bool] */;
  %337 = shape_of(%333, dtype="int32") /* ty=Tensor[(3), int32] */;
  %338 = cast(%333, dtype="bool") /* ty=Tensor[(12, 10, 1), bool] */;
  %339 = dyn.reshape(%336, %337, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %340 = @func_5715() /* ty=(Tensor[(6, 512), float64],) */;
  %341 = %340.0;
  %342 = cast(%var_10048, dtype="int8") /* ty=Tensor[(6, 512), int8] */;
  %343 = shape_of(%341, dtype="int32") /* ty=Tensor[(2), int32] */;
  %344 = cast(%341, dtype="int8") /* ty=Tensor[(6, 512), int8] */;
  %345 = dyn.reshape(%342, %343, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %346 = right_shift(%344, %345) /* ty=Tensor[(6, 512), int8] */;
  %347 = cast(%var_10055, dtype="bool") /* ty=Tensor[(6, 512), bool] */;
  %348 = shape_of(%346, dtype="int32") /* ty=Tensor[(2), int32] */;
  %349 = cast(%346, dtype="bool") /* ty=Tensor[(6, 512), bool] */;
  %350 = dyn.reshape(%347, %348, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %351 = @func_4180() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %352 = %351.0;
  %353 = cast(%333, dtype="float64") /* ty=Tensor[(12, 10, 1), float64] */;
  %354 = shape_of(%352, dtype="int32") /* ty=Tensor[(3), int32] */;
  %355 = cast(%352, dtype="float64") /* ty=Tensor[(12, 10, 1), float64] */;
  %356 = dyn.reshape(%353, %354, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %357 = cast(%var_10048, dtype="int64") /* ty=Tensor[(6, 512), int64] */;
  %358 = shape_of(%341, dtype="int32") /* ty=Tensor[(2), int32] */;
  %359 = cast(%341, dtype="int64") /* ty=Tensor[(6, 512), int64] */;
  %360 = dyn.reshape(%357, %358, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %361 = cast(%var_10079, dtype="uint16") /* ty=Tensor[(792), uint16] */;
  %362 = reshape(%361, newshape=[11, 9, 8]) /* ty=Tensor[(11, 9, 8), uint16] */;
  %363 = @func_9850(%362) /* ty=(Tensor[(11, 9, 8), bool], Tensor[(12, 10, 1), float32], Tensor[(504), float32]) */;
  %364 = cast(%346, dtype="float32") /* ty=Tensor[(6, 512), float32] */;
  %365 = acosh(%364) /* ty=Tensor[(6, 512), float32] */;
  %366 = cast(%var_10087, dtype="bool") /* ty=Tensor[(6, 512), bool] */;
  %367 = shape_of(%365, dtype="int32") /* ty=Tensor[(2), int32] */;
  %368 = cast(%365, dtype="bool") /* ty=Tensor[(6, 512), bool] */;
  %369 = dyn.reshape(%366, %367, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %370 = less(%338, %339) /* ty=Tensor[(12, 10, ?), bool] */;
  %371 = equal(%349, %350) /* ty=Tensor[(6, 512), bool] */;
  %372 = multiply(%355, %356) /* ty=Tensor[(12, 10, ?), float64] */;
  %373 = bitwise_or(%359, %360) /* ty=Tensor[(6, 512), int64] */;
  %374 = %363.1;
  %375 = logical_and(%368, %369) /* ty=Tensor[(6, 512), bool] */;
  (%370, %371, %372, %373, %374, %var_10079, %375)
}

def @func_9078() -> Tensor[(12, 10, 1), float32] {
  %376 = fn () -> Tensor[(12, 10, 1), float32] {
    @func_6928() /* ty=Tensor[(12, 10, 1), float32] */
  };
  %376() /* ty=Tensor[(12, 10, 1), float32] */
}

def @func_2429() -> (Tensor[(12, 10, 1), float32],) {
  %379 = fn () -> (Tensor[(12, 10, 1), float32],) {
    %377 = @func_2408() /* ty=(Tensor[(12, 10, 1), float32],) */;
    %378 = %377.0;
    (%378,)
  };
  %379() /* ty=(Tensor[(12, 10, 1), float32],) */
}

def @func_5786() -> Tensor[(12, 10, 8), bool] {
  @func_5784() /* ty=Tensor[(12, 10, 8), bool] */
}

def @func_4590() -> (Tensor[(12, 10, 1), float32], Tensor[(390), uint32], Tensor[(12), float32]) {
  %386 = fn () -> (Tensor[(12, 10, 1), float32], Tensor[(390), uint32], Tensor[(12), float32]) {
    %380 = @func_4406() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32]) */;
    %381 = cast(meta[relay.Constant][19] /* ty=Tensor[(12), float32] */, dtype="float32") /* ty=Tensor[(12), float32] */;
    %382 = reshape(%381, newshape=[1, 3, 4]) /* ty=Tensor[(1, 3, 4), float32] */;
    %383 = @func_524(%382) /* ty=(Tensor[(1, 3, 4), float32], Tensor[(13, 15, 2), uint32], Tensor[(390), uint32]) */;
    %384 = %380.1;
    %385 = %383.2;
    (%384, %385, meta[relay.Constant][19] /* ty=Tensor[(12), float32] */)
  };
  %386() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(390), uint32], Tensor[(12), float32]) */
}

def @func_4618() -> (Tensor[(12, 10, 1), float32],) {
  %387 = @func_3791() /* ty=(Tensor[(1, 512), float32], Tensor[(12, 10, 1), float32]) */;
  %388 = %387.1;
  (%388,)
}

def @func_8526() -> (Tensor[(12, 10, 1), float32], Tensor[(12, 10, 8), float32]) {
  %389 = @func_7725() /* ty=Tensor[(12, 10, 8), bool] */;
  %390 = cast(%389, dtype="float32") /* ty=Tensor[(12, 10, 8), float32] */;
  %391 = @func_2650() /* ty=Tensor[(12, 10, 1), float32] */;
  %392 = acosh(%390) /* ty=Tensor[(12, 10, 8), float32] */;
  (%391, %392)
}

def @func_5715() -> (Tensor[(6, 512), float64],) {
  %393 = @func_5363() /* ty=(Tensor[(1, 512), float32],) */;
  %394 = %393.0;
  %395 = cast(%394, dtype="int8") /* ty=Tensor[(1, 512), int8] */;
  %396 = cast(meta[relay.Constant][20] /* ty=Tensor[(6, 512), float32] */, dtype="int8") /* ty=Tensor[(6, 512), int8] */;
  %397 = maximum(%395, %396) /* ty=Tensor[(6, 512), int8] */;
  %398 = cast(%397, dtype="float64") /* ty=Tensor[(6, 512), float64] */;
  %399 = sqrt(%398) /* ty=Tensor[(6, 512), float64] */;
  (%399,)
}

def @func_7406(%var_7404: Tensor[(429), float64]) -> (Tensor[(16, 512), uint16], Tensor[(12, 10, 1), float32], Tensor[(1, 390), uint32], Tensor[(429), float64]) {
  @func_7403(%var_7404) /* ty=(Tensor[(16, 512), uint16], Tensor[(12, 10, 1), float32], Tensor[(1, 390), uint32], Tensor[(429), float64]) */
}

def @func_4167() -> (Tensor[(12, 10, 1), float32],) {
  %402 = fn () -> (Tensor[(12, 10, 1), float32],) {
    %400 = @func_3422() /* ty=(Tensor[(12, 10, 1), float32],) */;
    %401 = %400.0;
    (%401,)
  };
  %402() /* ty=(Tensor[(12, 10, 1), float32],) */
}

def @func_8745(%var_8728: Tensor[(429, 1), float64], %var_8729: Tensor[(231), float64]) -> (Tensor[(12, 10, 1), float32], Tensor[(1, 512), float32], Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32], Tensor[(1, 512), float64], Tensor[(10, 13, 8), float64], Tensor[(429, 1), float64], Tensor[(231), float64]) {
  %403 = @func_4618() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %404 = @func_8405() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(1, 512), float32]) */;
  %405 = @func_5363() /* ty=(Tensor[(1, 512), float32],) */;
  %406 = %405.0;
  %407 = cast(%406, dtype="float32") /* ty=Tensor[(1, 512), float32] */;
  %408 = sigmoid(%407) /* ty=Tensor[(1, 512), float32] */;
  %409 = cast(%408, dtype="float64") /* ty=Tensor[(1, 512), float64] */;
  %410 = cast(%var_8728, dtype="float64") /* ty=Tensor[(429, 1), float64] */;
  %411 = cast(%var_8729, dtype="float64") /* ty=Tensor[(231), float64] */;
  %412 = reshape(%410, newshape=[13, 3, 11]) /* ty=Tensor[(13, 3, 11), float64] */;
  %413 = reshape(%411, newshape=[33, 7]) /* ty=Tensor[(33, 7), float64] */;
  %414 = @func_1311(%412, %413) /* ty=(Tensor[(13, 3, 11), float64], Tensor[(10, 13, 8), float64], Tensor[(33, 7), float64], Tensor[(10, 13, 8), float64], Tensor[(10, 13, 8), float64], Tensor[(13, 3, 11), int64]) */;
  %415 = %403.0;
  %416 = @func_2915() /* ty=Tensor[(1, 512), float32] */;
  %417 = @func_4114() /* ty=Tensor[(12, 10, 1), float32] */;
  %418 = %404.0;
  %419 = log2(%409) /* ty=Tensor[(1, 512), float64] */;
  %420 = %414.4;
  (%415, %416, %417, %418, %419, %420, %var_8728, %var_8729)
}

def @func_9816() -> (Tensor[(1, 512), float32], Tensor[(12, 10, 1), float32]) {
  %425 = fn () -> (Tensor[(1, 512), float32], Tensor[(12, 10, 1), float32]) {
    %421 = @func_3791() /* ty=(Tensor[(1, 512), float32], Tensor[(12, 10, 1), float32]) */;
    %422 = @func_4618() /* ty=(Tensor[(12, 10, 1), float32],) */;
    %423 = %421.0;
    %424 = %422.0;
    (%423, %424)
  };
  %425() /* ty=(Tensor[(1, 512), float32], Tensor[(12, 10, 1), float32]) */
}

def @func_526(%var_525: Tensor[(1, 3, 4), float32]) -> (Tensor[(1, 3, 4), float32], Tensor[(13, 15, 2), uint32], Tensor[(390), uint32]) {
  %433 = fn (%var_516: Tensor[(1, 3, 4), float32]) -> (Tensor[(1, 3, 4), float32], Tensor[(13, 15, 2), uint32], Tensor[(390), uint32]) {
    %426 = cast(%var_516, dtype="float32") /* ty=Tensor[(1, 3, 4), float32] */;
    %427 = cast(meta[relay.Constant][21] /* ty=Tensor[(390), uint32] */, dtype="uint32") /* ty=Tensor[(390), uint32] */;
    %428 = cast(meta[relay.Constant][21] /* ty=Tensor[(390), uint32] */, dtype="uint32") /* ty=Tensor[(390), uint32] */;
    %429 = reshape(%427, newshape=[13, 15, 2]) /* ty=Tensor[(13, 15, 2), uint32] */;
    %430 = reshape(%428, newshape=[13, 15, 2]) /* ty=Tensor[(13, 15, 2), uint32] */;
    %431 = sinh(%426) /* ty=Tensor[(1, 3, 4), float32] */;
    %432 = @func_211(%429, %430) /* ty=Tensor[(13, 15, 2), uint32] */;
    (%431, %432, meta[relay.Constant][21] /* ty=Tensor[(390), uint32] */)
  };
  %433(%var_525) /* ty=(Tensor[(1, 3, 4), float32], Tensor[(13, 15, 2), uint32], Tensor[(390), uint32]) */
}

def @func_1314(%var_1312: Tensor[(13, 3, 11), float64], %var_1313: Tensor[(33, 7), float64]) -> (Tensor[(13, 3, 11), float64], Tensor[(10, 13, 8), float64], Tensor[(33, 7), float64], Tensor[(10, 13, 8), float64], Tensor[(10, 13, 8), float64], Tensor[(13, 3, 11), int64]) {
  %455 = fn (%var_1253: Tensor[(13, 3, 11), float64], %var_1278: Tensor[(33, 7), float64]) -> (Tensor[(13, 3, 11), float64], Tensor[(10, 13, 8), float64], Tensor[(33, 7), float64], Tensor[(10, 13, 8), float64], Tensor[(10, 13, 8), float64], Tensor[(13, 3, 11), int64]) {
    %434 = cast(%var_1253, dtype="float64") /* ty=Tensor[(13, 3, 11), float64] */;
    %435 = cast(%var_1278, dtype="float64") /* ty=Tensor[(33, 7), float64] */;
    %436 = reshape(%435, newshape=[3, 11, 7]) /* ty=Tensor[(3, 11, 7), float64] */;
    %437 = @func_381(%436) /* ty=(Tensor[(10, 13, 8), float64], Tensor[(1040), float64], Tensor[(10, 13, 8), float64], Tensor[(13, 15, 2), uint32], Tensor[(390), uint32], Tensor[(3, 11, 7), float64], Tensor[(10, 13, 8), float64]) */;
    %438 = %437.6;
    %439 = cast(%438, dtype="float64") /* ty=Tensor[(10, 13, 8), float64] */;
    %440 = reshape(%439, newshape=[10, 13, 8]) /* ty=Tensor[(10, 13, 8), float64] */;
    %441 = @func_186(%440) /* ty=Tensor[(10, 13, 8), float64] */;
    %442 = cast(%441, dtype="float64") /* ty=Tensor[(10, 13, 8), float64] */;
    %443 = reshape(%442, newshape=[10, 13, 8]) /* ty=Tensor[(10, 13, 8), float64] */;
    %444 = cast(%var_1253, dtype="float64") /* ty=Tensor[(13, 3, 11), float64] */;
    %445 = log10(%444) /* ty=Tensor[(13, 3, 11), float64] */;
    %446 = cast(%445, dtype="float64") /* ty=Tensor[(13, 3, 11), float64] */;
    %447 = cos(%446) /* ty=Tensor[(13, 3, 11), float64] */;
    %448 = cast(%445, dtype="int64") /* ty=Tensor[(13, 3, 11), int64] */;
    %449 = shape_of(%447, dtype="int32") /* ty=Tensor[(3), int32] */;
    %450 = cast(%447, dtype="int64") /* ty=Tensor[(13, 3, 11), int64] */;
    %451 = dyn.reshape(%448, %449, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %452 = acosh(%434) /* ty=Tensor[(13, 3, 11), float64] */;
    %453 = @func_186(%443) /* ty=Tensor[(10, 13, 8), float64] */;
    %454 = subtract(%450, %451) /* ty=Tensor[(13, 3, 11), int64] */;
    (%452, %438, %var_1278, %441, %453, %454)
  };
  %455(%var_1312, %var_1313) /* ty=(Tensor[(13, 3, 11), float64], Tensor[(10, 13, 8), float64], Tensor[(33, 7), float64], Tensor[(10, 13, 8), float64], Tensor[(10, 13, 8), float64], Tensor[(13, 3, 11), int64]) */
}

def @func_5890() -> (Tensor[(12, 10, 1), float32],) {
  %458 = fn () -> (Tensor[(12, 10, 1), float32],) {
    %456 = @func_2780() /* ty=(Tensor[(12, 10, 1), float32],) */;
    %457 = %456.0;
    (%457,)
  };
  %458() /* ty=(Tensor[(12, 10, 1), float32],) */
}

def @func_5439() -> (Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32]) {
  @func_5437() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32]) */
}

def @func_7458(%var_7435: Tensor[(12, 10, 1), float32]) -> Tensor[(12, 10, ?), float32] {
  %459 = @func_5745() /* ty=Tensor[(12, 10, 1), float32] */;
  %460 = cast(%var_7435, dtype="uint16") /* ty=Tensor[(12, 10, 1), uint16] */;
  %461 = shape_of(%459, dtype="int32") /* ty=Tensor[(3), int32] */;
  %462 = cast(%459, dtype="uint16") /* ty=Tensor[(12, 10, 1), uint16] */;
  %463 = dyn.reshape(%460, %461, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %464 = maximum(%462, %463) /* ty=Tensor[(12, 10, ?), uint16] */;
  %465 = cast(%459, dtype="float32") /* ty=Tensor[(12, 10, 1), float32] */;
  %466 = shape_of(%464, dtype="int32") /* ty=Tensor[(3), int32] */;
  %467 = cast(%464, dtype="float32") /* ty=Tensor[(12, 10, ?), float32] */;
  %468 = dyn.reshape(%465, %466, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%467, %468) /* ty=Tensor[(12, 10, ?), float32] */
}

def @func_214(%var_212: Tensor[(13, 15, 2), uint32], %var_213: Tensor[(13, 15, 2), uint32]) -> Tensor[(13, 15, 2), uint32] {
  %473 = fn (%var_206: Tensor[(13, 15, 2), uint32], %var_207: Tensor[(13, 15, 2), uint32]) -> Tensor[(13, 15, 2), uint32] {
    %469 = cast(%var_207, dtype="uint32") /* ty=Tensor[(13, 15, 2), uint32] */;
    %470 = shape_of(%var_206, dtype="int32") /* ty=Tensor[(3), int32] */;
    %471 = cast(%var_206, dtype="uint32") /* ty=Tensor[(13, 15, 2), uint32] */;
    %472 = dyn.reshape(%469, %470, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    minimum(%471, %472) /* ty=Tensor[(13, 15, 2), uint32] */
  };
  %473(%var_212, %var_213) /* ty=Tensor[(13, 15, 2), uint32] */
}

def @func_4115() -> Tensor[(12, 10, 1), float32] {
  %475 = fn () -> Tensor[(12, 10, 1), float32] {
    %474 = @func_2408() /* ty=(Tensor[(12, 10, 1), float32],) */;
    %474.0
  };
  %475() /* ty=Tensor[(12, 10, 1), float32] */
}

def @func_5146() -> (Tensor[(12, 10, 1), float32], Tensor[(1, 512), float32]) {
  @func_5144() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(1, 512), float32]) */
}

def @func_9780() -> (Tensor[(12, 10, 1), float32],) {
  %478 = fn () -> (Tensor[(12, 10, 1), float32],) {
    %476 = @func_3960() /* ty=(Tensor[(12, 10, 1), float32],) */;
    %477 = %476.0;
    (%477,)
  };
  %478() /* ty=(Tensor[(12, 10, 1), float32],) */
}

def @func_2967(%var_2966: Tensor[(390), uint32]) -> (Tensor[(12, 10, ?), uint64], Tensor[(13, 15, 2), uint32], Tensor[(390), uint32]) {
  %492 = fn (%var_2954: Tensor[(390), uint32]) -> (Tensor[(12, 10, ?), uint64], Tensor[(13, 15, 2), uint32], Tensor[(390), uint32]) {
    %479 = @func_2650() /* ty=Tensor[(12, 10, 1), float32] */;
    %480 = @func_2428() /* ty=(Tensor[(12, 10, 1), float32],) */;
    %481 = %480.0;
    %482 = cast(%481, dtype="uint64") /* ty=Tensor[(12, 10, 1), uint64] */;
    %483 = shape_of(%479, dtype="int32") /* ty=Tensor[(3), int32] */;
    %484 = cast(%479, dtype="uint64") /* ty=Tensor[(12, 10, 1), uint64] */;
    %485 = dyn.reshape(%482, %483, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %486 = cast(%var_2954, dtype="uint32") /* ty=Tensor[(390), uint32] */;
    %487 = cast(%var_2954, dtype="uint32") /* ty=Tensor[(390), uint32] */;
    %488 = reshape(%486, newshape=[13, 15, 2]) /* ty=Tensor[(13, 15, 2), uint32] */;
    %489 = reshape(%487, newshape=[13, 15, 2]) /* ty=Tensor[(13, 15, 2), uint32] */;
    %490 = add(%484, %485) /* ty=Tensor[(12, 10, ?), uint64] */;
    %491 = @func_211(%488, %489) /* ty=Tensor[(13, 15, 2), uint32] */;
    (%490, %491, %var_2954)
  };
  %492(%var_2966) /* ty=(Tensor[(12, 10, ?), uint64], Tensor[(13, 15, 2), uint32], Tensor[(390), uint32]) */
}

def @func_6611() -> (Tensor[(1, 512), float32], Tensor[(12, 10, 1), float32]) {
  @func_6609() /* ty=(Tensor[(1, 512), float32], Tensor[(12, 10, 1), float32]) */
}

def @func_8107(%var_8105: Tensor[(231), float64], %var_8106: Tensor[(12, 512), float32]) -> (Tensor[(231), float64], Tensor[(231), float64], Tensor[(12, 512), uint64], Tensor[(12, 10, 429), bool]) {
  @func_8103(%var_8105, %var_8106) /* ty=(Tensor[(231), float64], Tensor[(231), float64], Tensor[(12, 512), uint64], Tensor[(12, 10, 429), bool]) */
}

def @func_3423() -> (Tensor[(12, 10, 1), float32],) {
  %494 = fn () -> (Tensor[(12, 10, 1), float32],) {
    %493 = @func_2650() /* ty=Tensor[(12, 10, 1), float32] */;
    (%493,)
  };
  %494() /* ty=(Tensor[(12, 10, 1), float32],) */
}

def @func_4691(%var_4675: Tensor[(300), bool]) -> (Tensor[(12, 10, 1), float32], Tensor[(15, 4, 5), bool], Tensor[(300), bool], Tensor[(13, 15, 2), uint32], Tensor[(390), uint32]) {
  %495 = @func_4344() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %496 = cast(%var_4675, dtype="bool") /* ty=Tensor[(300), bool] */;
  %497 = reshape(%496, newshape=[15, 4, 5]) /* ty=Tensor[(15, 4, 5), bool] */;
  %498 = @func_3384(%497) /* ty=(Tensor[(15, 4, 5), bool],) */;
  %499 = cast(meta[relay.Constant][22] /* ty=Tensor[(390), uint32] */, dtype="uint32") /* ty=Tensor[(390), uint32] */;
  %500 = cast(meta[relay.Constant][22] /* ty=Tensor[(390), uint32] */, dtype="uint32") /* ty=Tensor[(390), uint32] */;
  %501 = reshape(%499, newshape=[13, 15, 2]) /* ty=Tensor[(13, 15, 2), uint32] */;
  %502 = reshape(%500, newshape=[13, 15, 2]) /* ty=Tensor[(13, 15, 2), uint32] */;
  %503 = %495.0;
  %504 = %498.0;
  %505 = @func_211(%501, %502) /* ty=Tensor[(13, 15, 2), uint32] */;
  (%503, %504, %var_4675, %505, meta[relay.Constant][22] /* ty=Tensor[(390), uint32] */)
}

def @func_4758() -> (Tensor[(1, 512), float32], Tensor[(1, 512), float32], Tensor[(12, 10, 1), float32]) {
  %506 = @func_2903() /* ty=Tensor[(1, 512), float32] */;
  %507 = cast(%506, dtype="float32") /* ty=Tensor[(1, 512), float32] */;
  %508 = @func_4017() /* ty=(Tensor[(1, 512), float32],) */;
  %509 = @func_4344() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %510 = log(%507) /* ty=Tensor[(1, 512), float32] */;
  %511 = %508.0;
  %512 = %509.0;
  (%510, %511, %512)
}

def @func_5949() -> (Tensor[(?, 512), int16], Tensor[(?, 512), uint32]) {
  @func_5947() /* ty=(Tensor[(?, 512), int16], Tensor[(?, 512), uint32]) */
}

def @func_4658(%var_4642: Tensor[(1040), float64]) -> (Tensor[(13, 15, 2), uint32], Tensor[(1120), int16], Tensor[(1040), float64], Tensor[(?, 512), uint32], Tensor[(12, 10, 512), int8]) {
  %513 = cast(meta[relay.Constant][23] /* ty=Tensor[(1120), int16] */, dtype="int16") /* ty=Tensor[(1120), int16] */;
  %514 = cast(%var_4642, dtype="float64") /* ty=Tensor[(1040), float64] */;
  %515 = reshape(%513, newshape=[5, 16, 14]) /* ty=Tensor[(5, 16, 14), int16] */;
  %516 = reshape(%514, newshape=[8, 130]) /* ty=Tensor[(8, 130), float64] */;
  %517 = @func_1734(%515, %516) /* ty=(Tensor[(5, 16, 14), int16], Tensor[(10, 13, 8), float64], Tensor[(8, 130), float64], Tensor[(13, 15, 2), uint32], Tensor[(33, 7), float64]) */;
  %518 = cast(%var_4642, dtype="float64") /* ty=Tensor[(1040), float64] */;
  %519 = @func_2842() /* ty=(Tensor[(1, 512), float32],) */;
  %520 = %519.0;
  %521 = cast(%520, dtype="float32") /* ty=Tensor[(1, 512), float32] */;
  %522 = reshape(%521, newshape=[1, 512]) /* ty=Tensor[(1, 512), float32] */;
  %523 = @func_2408() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %524 = %523.0;
  %525 = cast(%520, dtype="int8") /* ty=Tensor[(1, 512), int8] */;
  %526 = cast(%524, dtype="int8") /* ty=Tensor[(12, 10, 1), int8] */;
  %527 = %517.3;
  %528 = sqrt(%518) /* ty=Tensor[(1040), float64] */;
  %529 = @func_3704(%522) /* ty=Tensor[(?, 512), uint32] */;
  %530 = right_shift(%525, %526) /* ty=Tensor[(12, 10, 512), int8] */;
  (%527, meta[relay.Constant][23] /* ty=Tensor[(1120), int16] */, %528, %529, %530)
}

def @func_9602(%var_9599: Tensor[(5120), uint32], %var_9600: Tensor[(12, 10, 512), float32], %var_9601: Tensor[(300), bool]) -> (Tensor[(12, 10, 1), float32], Tensor[(1, 512), float32], Tensor[(12, 10, 1), float32], Tensor[(1040), float64], Tensor[(61440), int64], Tensor[(12, 10, 512), bool], Tensor[(5120), float32], Tensor[(12, 10, 1), float32], Tensor[(15, 4, 5), bool], Tensor[(300), bool], Tensor[(12, 10, 1), float32]) {
  @func_9597(%var_9599, %var_9600, %var_9601) /* ty=(Tensor[(12, 10, 1), float32], Tensor[(1, 512), float32], Tensor[(12, 10, 1), float32], Tensor[(1040), float64], Tensor[(61440), int64], Tensor[(12, 10, 512), bool], Tensor[(5120), float32], Tensor[(12, 10, 1), float32], Tensor[(15, 4, 5), bool], Tensor[(300), bool], Tensor[(12, 10, 1), float32]) */
}

def @func_6929() -> Tensor[(12, 10, 1), float32] {
  %532 = fn () -> Tensor[(12, 10, 1), float32] {
    %531 = @func_3960() /* ty=(Tensor[(12, 10, 1), float32],) */;
    %531.0
  };
  %532() /* ty=Tensor[(12, 10, 1), float32] */
}

def @func_5525(%var_5495: uint64, %var_5496: Tensor[(3, 14, 5), uint64], %var_5507: Tensor[(4096), float32], %var_5511: Tensor[(624, 2), float32]) -> (Tensor[(3, 14, 5), bool], Tensor[(12, 10, 1), float32], Tensor[(12, 12, 13), int16], Tensor[(231), float64], Tensor[(429), float64], Tensor[(4096), float32], Tensor[(390), uint32], Tensor[(624, 2), float32]) {
  %533 = cast(%var_5495, dtype="bool") /* ty=bool */;
  %534 = cast(%var_5496, dtype="bool") /* ty=Tensor[(3, 14, 5), bool] */;
  %535 = @func_4074() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(?, 512), uint32], Tensor[(512), float32]) */;
  %536 = cast(meta[relay.Constant][24] /* ty=Tensor[(231), float64] */, dtype="float64") /* ty=Tensor[(231), float64] */;
  %537 = cast(meta[relay.Constant][25] /* ty=Tensor[(429), float64] */, dtype="float64") /* ty=Tensor[(429), float64] */;
  %538 = cast(%var_5507, dtype="float32") /* ty=Tensor[(4096), float32] */;
  %539 = reshape(%536, newshape=[231]) /* ty=Tensor[(231), float64] */;
  %540 = reshape(%537, newshape=[429, 1]) /* ty=Tensor[(429, 1), float64] */;
  %541 = reshape(%538, newshape=[4096]) /* ty=Tensor[(4096), float32] */;
  %542 = @func_4858(%539, %540, %541) /* ty=(Tensor[(1, 512), float32], Tensor[(12, 12, 13), int16], Tensor[(231), float64], Tensor[(429, 1), float64], Tensor[(8, 512), bool], Tensor[(4096), float32]) */;
  %543 = cast(%var_5511, dtype="float32") /* ty=Tensor[(624, 2), float32] */;
  %544 = reshape(%543, newshape=[13, 12, 8]) /* ty=Tensor[(13, 12, 8), float32] */;
  %545 = @func_4314(%544) /* ty=(Tensor[(13, 12, 8), float32], Tensor[(390), uint32], Tensor[(12), float32]) */;
  %546 = equal(%533, %534) /* ty=Tensor[(3, 14, 5), bool] */;
  %547 = %535.0;
  %548 = %542.1;
  %549 = %545.1;
  (%546, %547, %548, meta[relay.Constant][24] /* ty=Tensor[(231), float64] */, meta[relay.Constant][25] /* ty=Tensor[(429), float64] */, %var_5507, %549, %var_5511)
}

def @func_7680() -> Tensor[(12, 10, 1), float32] {
  %550 = @func_6275() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32]) */;
  %550.1
}

def @func_7164() -> (Tensor[(1, 512), float32], Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32], Tensor[(1, 512), float32], Tensor[(12, 10, 1), float32], Tensor[(1280, 4), uint32], Tensor[(13, 15, 2), uint32]) {
  @func_7162() /* ty=(Tensor[(1, 512), float32], Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32], Tensor[(1, 512), float32], Tensor[(12, 10, 1), float32], Tensor[(1280, 4), uint32], Tensor[(13, 15, 2), uint32]) */
}

def @func_8589() -> Tensor[(1, 512), float32] {
  %551 = @func_6609() /* ty=(Tensor[(1, 512), float32], Tensor[(12, 10, 1), float32]) */;
  %551.0
}

def @func_5014() -> (Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32]) {
  @func_5012() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32]) */
}

def @func_6190() -> (Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32]) {
  %552 = @func_5437() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32]) */;
  %553 = %552.1;
  %554 = @func_4152() /* ty=Tensor[(12, 10, 1), float32] */;
  %555 = @func_5745() /* ty=Tensor[(12, 10, 1), float32] */;
  %556 = @func_5745() /* ty=Tensor[(12, 10, 1), float32] */;
  (%553, %554, %555, %556)
}

def @func_7612() -> Tensor[(12, 10, 1), float32] {
  %558 = fn () -> Tensor[(12, 10, 1), float32] {
    %557 = @func_3422() /* ty=(Tensor[(12, 10, 1), float32],) */;
    %557.0
  };
  %558() /* ty=Tensor[(12, 10, 1), float32] */
}

def @func_8303() -> (Tensor[(5, 9, 11), float64],) {
  %559 = cast(meta[relay.Constant][26] /* ty=Tensor[(5, 9, 11), float64] */, dtype="float64") /* ty=Tensor[(5, 9, 11), float64] */;
  %560 = sigmoid(%559) /* ty=Tensor[(5, 9, 11), float64] */;
  (%560,)
}

def @func_5531(%var_5527: uint64, %var_5528: Tensor[(3, 14, 5), uint64], %var_5529: Tensor[(4096), float32], %var_5530: Tensor[(624, 2), float32]) -> (Tensor[(3, 14, 5), bool], Tensor[(12, 10, 1), float32], Tensor[(12, 12, 13), int16], Tensor[(231), float64], Tensor[(429), float64], Tensor[(4096), float32], Tensor[(390), uint32], Tensor[(624, 2), float32]) {
  @func_5525(%var_5527, %var_5528, %var_5529, %var_5530) /* ty=(Tensor[(3, 14, 5), bool], Tensor[(12, 10, 1), float32], Tensor[(12, 12, 13), int16], Tensor[(231), float64], Tensor[(429), float64], Tensor[(4096), float32], Tensor[(390), uint32], Tensor[(624, 2), float32]) */
}

def @func_4661(%var_4659: Tensor[(1040), float64]) -> (Tensor[(13, 15, 2), uint32], Tensor[(1120), int16], Tensor[(1040), float64], Tensor[(?, 512), uint32], Tensor[(12, 10, 512), int8]) {
  @func_4658(%var_4659) /* ty=(Tensor[(13, 15, 2), uint32], Tensor[(1120), int16], Tensor[(1040), float64], Tensor[(?, 512), uint32], Tensor[(12, 10, 512), int8]) */
}

def @func_8939() -> (Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32]) {
  %565 = fn () -> (Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32]) {
    %561 = @func_3960() /* ty=(Tensor[(12, 10, 1), float32],) */;
    %562 = @func_4180() /* ty=(Tensor[(12, 10, 1), float32],) */;
    %563 = %561.0;
    %564 = %562.0;
    (%563, %564)
  };
  %565() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32]) */
}

def @func_9860() -> Tensor[(12, 10, 1), float32] {
  %567 = fn () -> Tensor[(12, 10, 1), float32] {
    %566 = @func_9779() /* ty=(Tensor[(12, 10, 1), float32],) */;
    %566.0
  };
  %567() /* ty=Tensor[(12, 10, 1), float32] */
}

def @func_7311() -> (Tensor[(1, 512), float32], Tensor[(12), float32], Tensor[(1248), float32]) {
  %573 = fn () -> (Tensor[(1, 512), float32], Tensor[(12), float32], Tensor[(1248), float32]) {
    %568 = cast(meta[relay.Constant][27] /* ty=Tensor[(1248), float32] */, dtype="float32") /* ty=Tensor[(1248), float32] */;
    %569 = reshape(%568, newshape=[13, 12, 8]) /* ty=Tensor[(13, 12, 8), float32] */;
    %570 = @func_4314(%569) /* ty=(Tensor[(13, 12, 8), float32], Tensor[(390), uint32], Tensor[(12), float32]) */;
    %571 = @func_2915() /* ty=Tensor[(1, 512), float32] */;
    %572 = %570.2;
    (%571, %572, meta[relay.Constant][27] /* ty=Tensor[(1248), float32] */)
  };
  %573() /* ty=(Tensor[(1, 512), float32], Tensor[(12), float32], Tensor[(1248), float32]) */
}

def @func_7117(%var_7099: Tensor[(10, 512), uint32]) -> (Tensor[(10, 512), bool], Tensor[(12, 10, 1), float32], Tensor[(10, 512), float64]) {
  %574 = @func_6257() /* ty=(Tensor[(?, 512), uint32],) */;
  %575 = %574.0;
  %576 = cast(%575, dtype="uint32") /* ty=Tensor[(?, 512), uint32] */;
  %577 = cast(%var_7099, dtype="uint32") /* ty=Tensor[(10, 512), uint32] */;
  %578 = minimum(%576, %577) /* ty=Tensor[(10, 512), uint32] */;
  %579 = cast(%578, dtype="bool") /* ty=Tensor[(10, 512), bool] */;
  %580 = shape_of(%var_7099, dtype="int32") /* ty=Tensor[(2), int32] */;
  %581 = cast(%var_7099, dtype="bool") /* ty=Tensor[(10, 512), bool] */;
  %582 = dyn.reshape(%579, %580, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %583 = @func_4618() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %584 = cast(%var_7099, dtype="float64") /* ty=Tensor[(10, 512), float64] */;
  %585 = logical_and(%581, %582) /* ty=Tensor[(10, 512), bool] */;
  %586 = %583.0;
  %587 = tan(%584) /* ty=Tensor[(10, 512), float64] */;
  (%585, %586, %587)
}

def @func_7573() -> (Tensor[(1120), int16], Tensor[(1, 512), float32], Tensor[(12, 10, 1), float32], Tensor[(1, 3, 4), float32], Tensor[(1232), uint8], Tensor[(12), float32], Tensor[(1, 512), float32]) {
  %588 = @func_6136() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32], Tensor[(1, 512), float32], Tensor[(13, 15, 2), uint32], Tensor[(1120), int16], Tensor[(1040), float64]) */;
  %589 = @func_3791() /* ty=(Tensor[(1, 512), float32], Tensor[(12, 10, 1), float32]) */;
  %590 = cast(meta[relay.Constant][28] /* ty=Tensor[(1232), uint8] */, dtype="uint8") /* ty=Tensor[(1232), uint8] */;
  %591 = cast(meta[relay.Constant][29] /* ty=Tensor[(12), float32] */, dtype="float32") /* ty=Tensor[(12), float32] */;
  %592 = reshape(%590, newshape=[2, 616]) /* ty=Tensor[(2, 616), uint8] */;
  %593 = reshape(%591, newshape=[12]) /* ty=Tensor[(12), float32] */;
  %594 = @func_3348(%592, %593) /* ty=(Tensor[(1, 3, 4), float32], Tensor[(2, 616), uint8], Tensor[(12, 10, 12), float64], Tensor[(12, 10, ?), bool]) */;
  %595 = %588.4;
  %596 = %589.0;
  %597 = @func_5745() /* ty=Tensor[(12, 10, 1), float32] */;
  %598 = %594.0;
  %599 = @func_2903() /* ty=Tensor[(1, 512), float32] */;
  (%595, %596, %597, %598, meta[relay.Constant][28] /* ty=Tensor[(1232), uint8] */, meta[relay.Constant][29] /* ty=Tensor[(12), float32] */, %599)
}

def @func_4182() -> (Tensor[(12, 10, 1), float32],) {
  @func_4180() /* ty=(Tensor[(12, 10, 1), float32],) */
}

def @func_6192() -> (Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32]) {
  @func_6190() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32]) */
}

def @func_2408() -> (Tensor[(12, 10, 1), float32],) {
  %600 = cast(meta[relay.Constant][30] /* ty=Tensor[(12, 10, 1), float32] */, dtype="float32") /* ty=Tensor[(12, 10, 1), float32] */;
  %601 = sigmoid(%600) /* ty=Tensor[(12, 10, 1), float32] */;
  (%601,)
}

def @func_9255() -> (Tensor[(12), float32], Tensor[(12, 10, 1), float32]) {
  %602 = @func_7310() /* ty=(Tensor[(1, 512), float32], Tensor[(12), float32], Tensor[(1248), float32]) */;
  %603 = @func_2512() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %604 = %602.1;
  %605 = %603.0;
  (%604, %605)
}

def @func_2782() -> (Tensor[(12, 10, 1), float32],) {
  @func_2780() /* ty=(Tensor[(12, 10, 1), float32],) */
}

def @func_5563(%var_5561: Tensor[(8, 14, 7), float64]) -> (Tensor[(8, 14, 7), float64],) {
  @func_5560(%var_5561) /* ty=(Tensor[(8, 14, 7), float64],) */
}

def @func_3707(%var_3705: Tensor[(1, 512), float32]) -> Tensor[(?, 512), uint32] {
  @func_3704(%var_3705) /* ty=Tensor[(?, 512), uint32] */
}

def @func_8528() -> (Tensor[(12, 10, 1), float32], Tensor[(12, 10, 8), float32]) {
  @func_8526() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(12, 10, 8), float32]) */
}

def @func_7682() -> Tensor[(12, 10, 1), float32] {
  @func_7680() /* ty=Tensor[(12, 10, 1), float32] */
}

def @func_3658(%var_3655: Tensor[(16, 512), float32], %var_3656: Tensor[(390), uint32], %var_3657: Tensor[(429), float64]) -> (Tensor[(16, 512), float32], Tensor[(12, 10, 1), float32], Tensor[(13, 15, 2), uint32], Tensor[(390), uint32], Tensor[(12, 10, 1), float32], Tensor[(231), float64], Tensor[(231), float64], Tensor[(429), float64]) {
  @func_3653(%var_3655, %var_3656, %var_3657) /* ty=(Tensor[(16, 512), float32], Tensor[(12, 10, 1), float32], Tensor[(13, 15, 2), uint32], Tensor[(390), uint32], Tensor[(12, 10, 1), float32], Tensor[(231), float64], Tensor[(231), float64], Tensor[(429), float64]) */
}

def @func_5437() -> (Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32]) {
  %606 = @func_4618() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %607 = %606.0;
  %608 = @func_4763() /* ty=Tensor[(12, 10, 1), float32] */;
  (%607, %608)
}

def @func_10281() -> (Tensor[(?, 512), uint32],) {
  %611 = fn () -> (Tensor[(?, 512), uint32],) {
    %609 = @func_4074() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(?, 512), uint32], Tensor[(512), float32]) */;
    %610 = %609.1;
    (%610,)
  };
  %611() /* ty=(Tensor[(?, 512), uint32],) */
}

def @func_4238() -> (Tensor[(1, 512), float32], Tensor[(15, 4, 5), bool], Tensor[(150, 2), bool]) {
  %618 = fn () -> (Tensor[(1, 512), float32], Tensor[(15, 4, 5), bool], Tensor[(150, 2), bool]) {
    %612 = @func_2842() /* ty=(Tensor[(1, 512), float32],) */;
    %613 = cast(meta[relay.Constant][31] /* ty=Tensor[(150, 2), bool] */, dtype="bool") /* ty=Tensor[(150, 2), bool] */;
    %614 = reshape(%613, newshape=[15, 4, 5]) /* ty=Tensor[(15, 4, 5), bool] */;
    %615 = @func_3384(%614) /* ty=(Tensor[(15, 4, 5), bool],) */;
    %616 = %612.0;
    %617 = %615.0;
    (%616, %617, meta[relay.Constant][31] /* ty=Tensor[(150, 2), bool] */)
  };
  %618() /* ty=(Tensor[(1, 512), float32], Tensor[(15, 4, 5), bool], Tensor[(150, 2), bool]) */
}

def @func_8341() -> Tensor[(12, 10, 1), float32] {
  @func_8339() /* ty=Tensor[(12, 10, 1), float32] */
}

def @func_2486(%var_2474: Tensor[(231), float64]) -> (Tensor[(12, 10, 1), float32], Tensor[(13, 15, 2), uint32], Tensor[(390), uint32], Tensor[(12, 10, 1), float32], Tensor[(1040), float64], Tensor[(231), float64]) {
  %619 = @func_2408() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %620 = cast(meta[relay.Constant][32] /* ty=Tensor[(390), uint32] */, dtype="uint32") /* ty=Tensor[(390), uint32] */;
  %621 = cast(meta[relay.Constant][32] /* ty=Tensor[(390), uint32] */, dtype="uint32") /* ty=Tensor[(390), uint32] */;
  %622 = reshape(%620, newshape=[13, 15, 2]) /* ty=Tensor[(13, 15, 2), uint32] */;
  %623 = reshape(%621, newshape=[13, 15, 2]) /* ty=Tensor[(13, 15, 2), uint32] */;
  %624 = @func_2428() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %625 = cast(%var_2474, dtype="float64") /* ty=Tensor[(231), float64] */;
  %626 = reshape(%625, newshape=[3, 11, 7]) /* ty=Tensor[(3, 11, 7), float64] */;
  %627 = @func_381(%626) /* ty=(Tensor[(10, 13, 8), float64], Tensor[(1040), float64], Tensor[(10, 13, 8), float64], Tensor[(13, 15, 2), uint32], Tensor[(390), uint32], Tensor[(3, 11, 7), float64], Tensor[(10, 13, 8), float64]) */;
  %628 = %619.0;
  %629 = @func_211(%622, %623) /* ty=Tensor[(13, 15, 2), uint32] */;
  %630 = %624.0;
  %631 = %627.1;
  (%628, %629, meta[relay.Constant][32] /* ty=Tensor[(390), uint32] */, %630, %631, %var_2474)
}

def @func_4432() -> (Tensor[(12, 10, 1), float32],) {
  %634 = fn () -> (Tensor[(12, 10, 1), float32],) {
    %632 = @func_3960() /* ty=(Tensor[(12, 10, 1), float32],) */;
    %633 = %632.0;
    (%633,)
  };
  %634() /* ty=(Tensor[(12, 10, 1), float32],) */
}

def @func_3280(%var_3279: Tensor[(12, 10, 1), float32]) -> Tensor[(12, 10, ?), bool] {
  %641 = fn (%var_3263: Tensor[(12, 10, 1), float32]) -> Tensor[(12, 10, ?), bool] {
    %635 = @func_2512() /* ty=(Tensor[(12, 10, 1), float32],) */;
    %636 = %635.0;
    %637 = cast(%var_3263, dtype="bool") /* ty=Tensor[(12, 10, 1), bool] */;
    %638 = shape_of(%636, dtype="int32") /* ty=Tensor[(3), int32] */;
    %639 = cast(%636, dtype="bool") /* ty=Tensor[(12, 10, 1), bool] */;
    %640 = dyn.reshape(%637, %638, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    equal(%639, %640) /* ty=Tensor[(12, 10, ?), bool] */
  };
  %641(%var_3279) /* ty=Tensor[(12, 10, ?), bool] */
}

def @func_8406() -> (Tensor[(12, 10, 1), float32], Tensor[(1, 512), float32]) {
  %645 = fn () -> (Tensor[(12, 10, 1), float32], Tensor[(1, 512), float32]) {
    %642 = @func_3791() /* ty=(Tensor[(1, 512), float32], Tensor[(12, 10, 1), float32]) */;
    %643 = @func_7202() /* ty=Tensor[(12, 10, 1), float32] */;
    %644 = %642.0;
    (%643, %644)
  };
  %645() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(1, 512), float32]) */
}

def @func_8961(%var_8960: Tensor[(15, 512), uint32]) -> Tensor[(15, 512), float32] {
  %650 = fn (%var_8954: Tensor[(15, 512), uint32]) -> Tensor[(15, 512), float32] {
    %646 = @func_6257() /* ty=(Tensor[(?, 512), uint32],) */;
    %647 = %646.0;
    %648 = cast(%647, dtype="float32") /* ty=Tensor[(?, 512), float32] */;
    %649 = cast(%var_8954, dtype="float32") /* ty=Tensor[(15, 512), float32] */;
    divide(%648, %649) /* ty=Tensor[(15, 512), float32] */
  };
  %650(%var_8960) /* ty=Tensor[(15, 512), float32] */
}

def @func_2650() -> Tensor[(12, 10, 1), float32] {
  %651 = @func_2408() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %651.0
}

def @func_2620(%var_2618: Tensor[(11, 21), float64], %var_2619: Tensor[(429), float64]) -> (Tensor[(12, 10, 1), float32], Tensor[(3, 11, 7), float64], Tensor[(11, 21), float64], Tensor[(12, 12, 13), int16], Tensor[(1872), bool], Tensor[(12, 12, 13), int16], Tensor[(13, 15, 2), uint32], Tensor[(390), uint32], Tensor[(10, 13, 8), float64], Tensor[(429), float64]) {
  %675 = fn (%var_2556: Tensor[(11, 21), float64], %var_2614: Tensor[(429), float64]) -> (Tensor[(12, 10, 1), float32], Tensor[(3, 11, 7), float64], Tensor[(11, 21), float64], Tensor[(12, 12, 13), int16], Tensor[(1872), bool], Tensor[(12, 12, 13), int16], Tensor[(13, 15, 2), uint32], Tensor[(390), uint32], Tensor[(10, 13, 8), float64], Tensor[(429), float64]) {
    %652 = @func_2408() /* ty=(Tensor[(12, 10, 1), float32],) */;
    %653 = cast(%var_2556, dtype="float64") /* ty=Tensor[(11, 21), float64] */;
    %654 = reshape(%653, newshape=[3, 11, 7]) /* ty=Tensor[(3, 11, 7), float64] */;
    %655 = @func_381(%654) /* ty=(Tensor[(10, 13, 8), float64], Tensor[(1040), float64], Tensor[(10, 13, 8), float64], Tensor[(13, 15, 2), uint32], Tensor[(390), uint32], Tensor[(3, 11, 7), float64], Tensor[(10, 13, 8), float64]) */;
    %656 = cast(meta[relay.Constant][33] /* ty=Tensor[(1872), bool] */, dtype="bool") /* ty=Tensor[(1872), bool] */;
    %657 = reshape(%656, newshape=[12, 12, 13]) /* ty=Tensor[(12, 12, 13), bool] */;
    %658 = cast(meta[relay.Constant][33] /* ty=Tensor[(1872), bool] */, dtype="bool") /* ty=Tensor[(1872), bool] */;
    %659 = reshape(%658, newshape=[12, 12, 13]) /* ty=Tensor[(12, 12, 13), bool] */;
    %660 = cast(meta[relay.Constant][34] /* ty=Tensor[(390), uint32] */, dtype="uint32") /* ty=Tensor[(390), uint32] */;
    %661 = cast(meta[relay.Constant][34] /* ty=Tensor[(390), uint32] */, dtype="uint32") /* ty=Tensor[(390), uint32] */;
    %662 = reshape(%660, newshape=[13, 15, 2]) /* ty=Tensor[(13, 15, 2), uint32] */;
    %663 = reshape(%661, newshape=[13, 15, 2]) /* ty=Tensor[(13, 15, 2), uint32] */;
    %664 = cast(%var_2614, dtype="float64") /* ty=Tensor[(429), float64] */;
    %665 = %655.5;
    %666 = cast(%665, dtype="float64") /* ty=Tensor[(3, 11, 7), float64] */;
    %667 = reshape(%664, newshape=[13, 3, 11]) /* ty=Tensor[(13, 3, 11), float64] */;
    %668 = reshape(%666, newshape=[33, 7]) /* ty=Tensor[(33, 7), float64] */;
    %669 = @func_1311(%667, %668) /* ty=(Tensor[(13, 3, 11), float64], Tensor[(10, 13, 8), float64], Tensor[(33, 7), float64], Tensor[(10, 13, 8), float64], Tensor[(10, 13, 8), float64], Tensor[(13, 3, 11), int64]) */;
    %670 = %652.0;
    %671 = @func_667(%657) /* ty=Tensor[(12, 12, 13), int16] */;
    %672 = @func_667(%659) /* ty=Tensor[(12, 12, 13), int16] */;
    %673 = @func_211(%662, %663) /* ty=Tensor[(13, 15, 2), uint32] */;
    %674 = %669.4;
    (%670, %665, %var_2556, %671, meta[relay.Constant][33] /* ty=Tensor[(1872), bool] */, %672, %673, meta[relay.Constant][34] /* ty=Tensor[(390), uint32] */, %674, %var_2614)
  };
  %675(%var_2618, %var_2619) /* ty=(Tensor[(12, 10, 1), float32], Tensor[(3, 11, 7), float64], Tensor[(11, 21), float64], Tensor[(12, 12, 13), int16], Tensor[(1872), bool], Tensor[(12, 12, 13), int16], Tensor[(13, 15, 2), uint32], Tensor[(390), uint32], Tensor[(10, 13, 8), float64], Tensor[(429), float64]) */
}

def @func_3653(%var_3631: Tensor[(16, 512), float32], %var_3639: Tensor[(390), uint32], %var_3651: Tensor[(429), float64]) -> (Tensor[(16, 512), float32], Tensor[(12, 10, 1), float32], Tensor[(13, 15, 2), uint32], Tensor[(390), uint32], Tensor[(12, 10, 1), float32], Tensor[(231), float64], Tensor[(231), float64], Tensor[(429), float64]) {
  %676 = @func_2915() /* ty=Tensor[(1, 512), float32] */;
  %677 = cast(%676, dtype="float32") /* ty=Tensor[(1, 512), float32] */;
  %678 = cast(%var_3631, dtype="float32") /* ty=Tensor[(16, 512), float32] */;
  %679 = @func_2780() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %680 = cast(%var_3639, dtype="uint32") /* ty=Tensor[(390), uint32] */;
  %681 = cast(%var_3639, dtype="uint32") /* ty=Tensor[(390), uint32] */;
  %682 = reshape(%680, newshape=[13, 15, 2]) /* ty=Tensor[(13, 15, 2), uint32] */;
  %683 = reshape(%681, newshape=[13, 15, 2]) /* ty=Tensor[(13, 15, 2), uint32] */;
  %684 = @func_2741() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(13, 15, 2), uint32], Tensor[(65, 6), uint32], Tensor[(12, 10, 1), float32], Tensor[(16, 16, 2), bool], Tensor[(1, 512), float32], Tensor[(1040), float64]) */;
  %685 = cast(meta[relay.Constant][35] /* ty=Tensor[(231), float64] */, dtype="float64") /* ty=Tensor[(231), float64] */;
  %686 = cast(%var_3651, dtype="float64") /* ty=Tensor[(429), float64] */;
  %687 = cast(%676, dtype="float32") /* ty=Tensor[(1, 512), float32] */;
  %688 = reshape(%685, newshape=[231]) /* ty=Tensor[(231), float64] */;
  %689 = reshape(%686, newshape=[429]) /* ty=Tensor[(429), float64] */;
  %690 = reshape(%687, newshape=[512]) /* ty=Tensor[(512), float32] */;
  %691 = @func_3580(%688, %689, %690) /* ty=(Tensor[(12, 10, 1), float32], Tensor[(12, 12, 13), int16], Tensor[(231), float64], Tensor[(16, 16, 2), bool], Tensor[(512), float32], Tensor[(1040), float64], Tensor[(429), float32], Tensor[(1872), bool]) */;
  %692 = add(%677, %678) /* ty=Tensor[(16, 512), float32] */;
  %693 = %679.0;
  %694 = @func_211(%682, %683) /* ty=Tensor[(13, 15, 2), uint32] */;
  %695 = %684.3;
  %696 = %691.2;
  (%692, %693, %694, %var_3639, %695, %696, meta[relay.Constant][35] /* ty=Tensor[(231), float64] */, %var_3651)
}

def @func_3585(%var_3582: Tensor[(231), float64], %var_3583: Tensor[(429), float64], %var_3584: Tensor[(512), float32]) -> (Tensor[(12, 10, 1), float32], Tensor[(12, 12, 13), int16], Tensor[(231), float64], Tensor[(16, 16, 2), bool], Tensor[(512), float32], Tensor[(1040), float64], Tensor[(429), float32], Tensor[(1872), bool]) {
  @func_3580(%var_3582, %var_3583, %var_3584) /* ty=(Tensor[(12, 10, 1), float32], Tensor[(12, 12, 13), int16], Tensor[(231), float64], Tensor[(16, 16, 2), bool], Tensor[(512), float32], Tensor[(1040), float64], Tensor[(429), float32], Tensor[(1872), bool]) */
}

def @func_6998() -> (Tensor[(12, 10, 1), float32],) {
  %697 = @func_3791() /* ty=(Tensor[(1, 512), float32], Tensor[(12, 10, 1), float32]) */;
  %698 = %697.1;
  (%698,)
}

def @func_4154() -> Tensor[(12, 10, 1), float32] {
  @func_4152() /* ty=Tensor[(12, 10, 1), float32] */
}

def @func_10222() -> (Tensor[(1, 512), float32],) {
  %703 = fn () -> (Tensor[(1, 512), float32],) {
    %699 = @func_4628() /* ty=(Tensor[(1, 512), float32],) */;
    %700 = %699.0;
    %701 = cast(%700, dtype="float32") /* ty=Tensor[(1, 512), float32] */;
    %702 = cos(%701) /* ty=Tensor[(1, 512), float32] */;
    (%702,)
  };
  %703() /* ty=(Tensor[(1, 512), float32],) */
}

def @func_5560(%var_5553: Tensor[(8, 14, 7), float64]) -> (Tensor[(8, 14, 7), float64],) {
  %704 = cast(%var_5553, dtype="float64") /* ty=Tensor[(8, 14, 7), float64] */;
  %705 = tan(%704) /* ty=Tensor[(8, 14, 7), float64] */;
  (%705,)
}

def @func_5746() -> Tensor[(12, 10, 1), float32] {
  %707 = fn () -> Tensor[(12, 10, 1), float32] {
    %706 = @func_4344() /* ty=(Tensor[(12, 10, 1), float32],) */;
    %706.0
  };
  %707() /* ty=Tensor[(12, 10, 1), float32] */
}

def @func_6875(%var_6852: Tensor[(12, 10, 10), float32]) -> (Tensor[(12, 10, 10), bool], Tensor[(12, 10, 10), uint16]) {
  %708 = @func_5012() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32]) */;
  %709 = %708.1;
  %710 = cast(%709, dtype="bool") /* ty=Tensor[(12, 10, 1), bool] */;
  %711 = cast(%var_6852, dtype="bool") /* ty=Tensor[(12, 10, 10), bool] */;
  %712 = cast(%709, dtype="uint16") /* ty=Tensor[(12, 10, 1), uint16] */;
  %713 = cast(%var_6852, dtype="uint16") /* ty=Tensor[(12, 10, 10), uint16] */;
  %714 = less_equal(%710, %711) /* ty=Tensor[(12, 10, 10), bool] */;
  %715 = multiply(%712, %713) /* ty=Tensor[(12, 10, 10), uint16] */;
  (%714, %715)
}

def @func_624(%var_614: Tensor[(14, 11, 8), uint8], %var_619: Tensor[(12), float32]) -> (Tensor[(14, 11, 8), bool], Tensor[(1, 3, 4), float32], Tensor[(12), float32]) {
  %716 = cast(%var_614, dtype="bool") /* ty=Tensor[(14, 11, 8), bool] */;
  %717 = shape_of(meta[relay.Constant][36] /* ty=Tensor[(14, 11, 8), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %718 = cast(meta[relay.Constant][36] /* ty=Tensor[(14, 11, 8), uint8] */, dtype="bool") /* ty=Tensor[(14, 11, 8), bool] */;
  %719 = dyn.reshape(%716, %717, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %720 = cast(%var_619, dtype="float32") /* ty=Tensor[(12), float32] */;
  %721 = reshape(%720, newshape=[1, 3, 4]) /* ty=Tensor[(1, 3, 4), float32] */;
  %722 = @func_524(%721) /* ty=(Tensor[(1, 3, 4), float32], Tensor[(13, 15, 2), uint32], Tensor[(390), uint32]) */;
  %723 = greater_equal(%718, %719) /* ty=Tensor[(14, 11, 8), bool] */;
  %724 = %722.0;
  (%723, %724, %var_619)
}

def @func_4316(%var_4315: Tensor[(13, 12, 8), float32]) -> (Tensor[(13, 12, 8), float32], Tensor[(390), uint32], Tensor[(12), float32]) {
  %734 = fn (%var_4291: Tensor[(13, 12, 8), float32]) -> (Tensor[(13, 12, 8), float32], Tensor[(390), uint32], Tensor[(12), float32]) {
    %725 = cast(meta[relay.Constant][37] /* ty=Tensor[(13, 12, 8), float32] */, dtype="float32") /* ty=Tensor[(13, 12, 8), float32] */;
    %726 = shape_of(%var_4291, dtype="int32") /* ty=Tensor[(3), int32] */;
    %727 = cast(%var_4291, dtype="float32") /* ty=Tensor[(13, 12, 8), float32] */;
    %728 = dyn.reshape(%725, %726, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %729 = cast(meta[relay.Constant][38] /* ty=Tensor[(12), float32] */, dtype="float32") /* ty=Tensor[(12), float32] */;
    %730 = reshape(%729, newshape=[1, 3, 4]) /* ty=Tensor[(1, 3, 4), float32] */;
    %731 = @func_524(%730) /* ty=(Tensor[(1, 3, 4), float32], Tensor[(13, 15, 2), uint32], Tensor[(390), uint32]) */;
    %732 = add(%727, %728) /* ty=Tensor[(13, 12, 8), float32] */;
    %733 = %731.2;
    (%732, %733, meta[relay.Constant][38] /* ty=Tensor[(12), float32] */)
  };
  %734(%var_4315) /* ty=(Tensor[(13, 12, 8), float32], Tensor[(390), uint32], Tensor[(12), float32]) */
}

def @func_2915() -> Tensor[(1, 512), float32] {
  @func_2903() /* ty=Tensor[(1, 512), float32] */
}

def @func_8033() -> Tensor[(12, 10, 1), float32] {
  @func_8031() /* ty=Tensor[(12, 10, 1), float32] */
}

def @func_2904() -> Tensor[(1, 512), float32] {
  %738 = fn () -> Tensor[(1, 512), float32] {
    %735 = @func_2842() /* ty=(Tensor[(1, 512), float32],) */;
    %736 = %735.0;
    %737 = cast(%736, dtype="float32") /* ty=Tensor[(1, 512), float32] */;
    rsqrt(%737) /* ty=Tensor[(1, 512), float32] */
  };
  %738() /* ty=Tensor[(1, 512), float32] */
}

def @func_2254(%var_2252: Tensor[(16, 16, 2), float32], %var_2253: Tensor[(1040), float64]) -> (Tensor[(16, 16, 2), bool], Tensor[(10, 13, 8), float64], Tensor[(1040), float64]) {
  %745 = fn (%var_2228: Tensor[(16, 16, 2), float32], %var_2235: Tensor[(1040), float64]) -> (Tensor[(16, 16, 2), bool], Tensor[(10, 13, 8), float64], Tensor[(1040), float64]) {
    %739 = cast(5.27892f /* ty=float32 */, dtype="bool") /* ty=bool */;
    %740 = cast(%var_2228, dtype="bool") /* ty=Tensor[(16, 16, 2), bool] */;
    %741 = cast(%var_2235, dtype="float64") /* ty=Tensor[(1040), float64] */;
    %742 = reshape(%741, newshape=[10, 13, 8]) /* ty=Tensor[(10, 13, 8), float64] */;
    %743 = equal(%739, %740) /* ty=Tensor[(16, 16, 2), bool] */;
    %744 = @func_186(%742) /* ty=Tensor[(10, 13, 8), float64] */;
    (%743, %744, %var_2235)
  };
  %745(%var_2252, %var_2253) /* ty=(Tensor[(16, 16, 2), bool], Tensor[(10, 13, 8), float64], Tensor[(1040), float64]) */
}

def @func_3398(%var_3397: Tensor[(12, 3, 1), float64]) -> Tensor[(12, 3, 1), float64] {
  %747 = fn (%var_3392: Tensor[(12, 3, 1), float64]) -> Tensor[(12, 3, 1), float64] {
    %746 = cast(%var_3392, dtype="float64") /* ty=Tensor[(12, 3, 1), float64] */;
    log2(%746) /* ty=Tensor[(12, 3, 1), float64] */
  };
  %747(%var_3397) /* ty=Tensor[(12, 3, 1), float64] */
}

def @func_6275() -> (Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32]) {
  %748 = @func_4344() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %749 = @func_4916() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %750 = %748.0;
  %751 = %749.0;
  %752 = @func_4001() /* ty=Tensor[(12, 10, 1), float32] */;
  (%750, %751, %752)
}

def @func_7996(%var_7967: Tensor[(4, 14, 9), float32]) -> (Tensor[(4, 14, 9), float32], Tensor[(12, 10, 1), float32]) {
  %753 = cast(%var_7967, dtype="float32") /* ty=Tensor[(4, 14, 9), float32] */;
  %754 = @func_5656() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %755 = sigmoid(%753) /* ty=Tensor[(4, 14, 9), float32] */;
  %756 = %754.0;
  (%755, %756)
}

def @func_3861() -> Tensor[(12, 10, 1), float32] {
  %758 = fn () -> Tensor[(12, 10, 1), float32] {
    %757 = @func_2428() /* ty=(Tensor[(12, 10, 1), float32],) */;
    %757.0
  };
  %758() /* ty=Tensor[(12, 10, 1), float32] */
}

def @main() -> (Tensor[(12, 10, 1), float32],) {
  %759 = @func_4345() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %760 = %759.0;
  %761 = cast(%760, dtype="float32") /* ty=Tensor[(12, 10, 1), float32] */;
  %762 = log10(%761) /* ty=Tensor[(12, 10, 1), float32] */;
  %763 = cast(%762, dtype="float32") /* ty=Tensor[(12, 10, 1), float32] */;
  %764 = asin(%763) /* ty=Tensor[(12, 10, 1), float32] */;
  (%764,)
}

def @func_8767(%var_8766: Tensor[(6, 512), float64]) -> Tensor[(6, 512), int64] {
  %771 = fn (%var_8758: Tensor[(6, 512), float64]) -> Tensor[(6, 512), int64] {
    %765 = @func_5715() /* ty=(Tensor[(6, 512), float64],) */;
    %766 = %765.0;
    %767 = cast(%var_8758, dtype="int64") /* ty=Tensor[(6, 512), int64] */;
    %768 = shape_of(%766, dtype="int32") /* ty=Tensor[(2), int32] */;
    %769 = cast(%766, dtype="int64") /* ty=Tensor[(6, 512), int64] */;
    %770 = dyn.reshape(%767, %768, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
    logical_xor(%769, %770) /* ty=Tensor[(6, 512), int64] */
  };
  %771(%var_8766) /* ty=Tensor[(6, 512), int64] */
}

def @func_4002() -> Tensor[(12, 10, 1), float32] {
  %773 = fn () -> Tensor[(12, 10, 1), float32] {
    %772 = @func_3960() /* ty=(Tensor[(12, 10, 1), float32],) */;
    %772.0
  };
  %773() /* ty=Tensor[(12, 10, 1), float32] */
}

def @func_4630() -> (Tensor[(1, 512), float32],) {
  @func_4628() /* ty=(Tensor[(1, 512), float32],) */
}

def @func_4764() -> Tensor[(12, 10, 1), float32] {
  %775 = fn () -> Tensor[(12, 10, 1), float32] {
    %774 = @func_4180() /* ty=(Tensor[(12, 10, 1), float32],) */;
    %774.0
  };
  %775() /* ty=Tensor[(12, 10, 1), float32] */
}

def @func_8856(%var_8855: Tensor[(1040), float64]) -> (Tensor[(15, 4, 5), bool], Tensor[(12, 10, 1), float32], Tensor[(12, 10, 512), int8], Tensor[(1040), float64]) {
  %784 = fn (%var_8843: Tensor[(1040), float64]) -> (Tensor[(15, 4, 5), bool], Tensor[(12, 10, 1), float32], Tensor[(12, 10, 512), int8], Tensor[(1040), float64]) {
    %776 = @func_4237() /* ty=(Tensor[(1, 512), float32], Tensor[(15, 4, 5), bool], Tensor[(150, 2), bool]) */;
    %777 = @func_3960() /* ty=(Tensor[(12, 10, 1), float32],) */;
    %778 = cast(%var_8843, dtype="float64") /* ty=Tensor[(1040), float64] */;
    %779 = reshape(%778, newshape=[1040]) /* ty=Tensor[(1040), float64] */;
    %780 = @func_4658(%779) /* ty=(Tensor[(13, 15, 2), uint32], Tensor[(1120), int16], Tensor[(1040), float64], Tensor[(?, 512), uint32], Tensor[(12, 10, 512), int8]) */;
    %781 = %776.1;
    %782 = %777.0;
    %783 = %780.4;
    (%781, %782, %783, %var_8843)
  };
  %784(%var_8855) /* ty=(Tensor[(15, 4, 5), bool], Tensor[(12, 10, 1), float32], Tensor[(12, 10, 512), int8], Tensor[(1040), float64]) */
}

def @func_188(%var_187: Tensor[(10, 13, 8), float64]) -> Tensor[(10, 13, 8), float64] {
  %788 = fn (%var_181: Tensor[(10, 13, 8), float64]) -> Tensor[(10, 13, 8), float64] {
    %785 = cast(%var_181, dtype="float64") /* ty=Tensor[(10, 13, 8), float64] */;
    %786 = tan(%785) /* ty=Tensor[(10, 13, 8), float64] */;
    %787 = cast(%786, dtype="float64") /* ty=Tensor[(10, 13, 8), float64] */;
    atanh(%787) /* ty=Tensor[(10, 13, 8), float64] */
  };
  %788(%var_187) /* ty=Tensor[(10, 13, 8), float64] */
}

def @func_6411(%var_6410: Tensor[(4, 512), int16]) -> (Tensor[(4, 512), bool], Tensor[(4, 512), float32]) {
  %796 = fn (%var_6391: Tensor[(4, 512), int16]) -> (Tensor[(4, 512), bool], Tensor[(4, 512), float32]) {
    %789 = @func_5947() /* ty=(Tensor[(?, 512), int16], Tensor[(?, 512), uint32]) */;
    %790 = %789.0;
    %791 = cast(%790, dtype="bool") /* ty=Tensor[(?, 512), bool] */;
    %792 = cast(%var_6391, dtype="bool") /* ty=Tensor[(4, 512), bool] */;
    %793 = cast(%var_6391, dtype="float32") /* ty=Tensor[(4, 512), float32] */;
    %794 = greater_equal(%791, %792) /* ty=Tensor[(4, 512), bool] */;
    %795 = acos(%793) /* ty=Tensor[(4, 512), float32] */;
    (%794, %795)
  };
  %796(%var_6410) /* ty=(Tensor[(4, 512), bool], Tensor[(4, 512), float32]) */
}

def @func_10119() -> (Tensor[(?, 512), int16],) {
  @func_10117() /* ty=(Tensor[(?, 512), int16],) */
}

def @func_6259() -> (Tensor[(?, 512), uint32],) {
  @func_6257() /* ty=(Tensor[(?, 512), uint32],) */
}

def @func_628(%var_626: Tensor[(14, 11, 8), uint8], %var_627: Tensor[(12), float32]) -> (Tensor[(14, 11, 8), bool], Tensor[(1, 3, 4), float32], Tensor[(12), float32]) {
  @func_624(%var_626, %var_627) /* ty=(Tensor[(14, 11, 8), bool], Tensor[(1, 3, 4), float32], Tensor[(12), float32]) */
}

def @func_4152() -> Tensor[(12, 10, 1), float32] {
  @func_3860() /* ty=Tensor[(12, 10, 1), float32] */
}

def @func_9054() -> (Tensor[(1, 512), float32], Tensor[(12, 10, 13), bool]) {
  %801 = fn () -> (Tensor[(1, 512), float32], Tensor[(12, 10, 13), bool]) {
    %797 = @func_4758() /* ty=(Tensor[(1, 512), float32], Tensor[(1, 512), float32], Tensor[(12, 10, 1), float32]) */;
    %798 = @func_6627() /* ty=(Tensor[(12, 10, 13), bool],) */;
    %799 = %797.1;
    %800 = %798.0;
    (%799, %800)
  };
  %801() /* ty=(Tensor[(1, 512), float32], Tensor[(12, 10, 13), bool]) */
}

def @func_670(%var_668: Tensor[(12, 12, 13), bool]) -> Tensor[(12, 12, 13), int16] {
  @func_667(%var_668) /* ty=Tensor[(12, 12, 13), int16] */
}

def @func_3961() -> (Tensor[(12, 10, 1), float32],) {
  %804 = fn () -> (Tensor[(12, 10, 1), float32],) {
    %802 = @func_2428() /* ty=(Tensor[(12, 10, 1), float32],) */;
    %803 = %802.0;
    (%803,)
  };
  %804() /* ty=(Tensor[(12, 10, 1), float32],) */
}

def @func_8339() -> Tensor[(12, 10, 1), float32] {
  %805 = @func_5144() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(1, 512), float32]) */;
  %805.0
}

def @func_4407() -> (Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32]) {
  %810 = fn () -> (Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32]) {
    %806 = @func_2512() /* ty=(Tensor[(12, 10, 1), float32],) */;
    %807 = @func_3481() /* ty=Tensor[(12, 10, 1), float32] */;
    %808 = %806.0;
    %809 = @func_4152() /* ty=Tensor[(12, 10, 1), float32] */;
    (%807, %808, %809)
  };
  %810() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32]) */
}

def @func_4945(%var_4943: Tensor[(512), float32]) -> (Tensor[(12, 10, 1), float32], Tensor[(?, 512), uint32], Tensor[(512), float32]) {
  @func_4942(%var_4943) /* ty=(Tensor[(12, 10, 1), float32], Tensor[(?, 512), uint32], Tensor[(512), float32]) */
}

def @func_6442() -> (Tensor[(12, 10, 1), float32],) {
  @func_6440() /* ty=(Tensor[(12, 10, 1), float32],) */
}

def @func_6137() -> (Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32], Tensor[(1, 512), float32], Tensor[(13, 15, 2), uint32], Tensor[(1120), int16], Tensor[(1040), float64]) {
  %822 = fn () -> (Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32], Tensor[(1, 512), float32], Tensor[(13, 15, 2), uint32], Tensor[(1120), int16], Tensor[(1040), float64]) {
    %811 = @func_5012() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32]) */;
    %812 = @func_5144() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(1, 512), float32]) */;
    %813 = cast(meta[relay.Constant][39] /* ty=Tensor[(1120), int16] */, dtype="int16") /* ty=Tensor[(1120), int16] */;
    %814 = cast(meta[relay.Constant][40] /* ty=Tensor[(1040), float64] */, dtype="float64") /* ty=Tensor[(1040), float64] */;
    %815 = reshape(%813, newshape=[5, 16, 14]) /* ty=Tensor[(5, 16, 14), int16] */;
    %816 = reshape(%814, newshape=[8, 130]) /* ty=Tensor[(8, 130), float64] */;
    %817 = @func_1734(%815, %816) /* ty=(Tensor[(5, 16, 14), int16], Tensor[(10, 13, 8), float64], Tensor[(8, 130), float64], Tensor[(13, 15, 2), uint32], Tensor[(33, 7), float64]) */;
    %818 = %811.1;
    %819 = @func_4114() /* ty=Tensor[(12, 10, 1), float32] */;
    %820 = %812.1;
    %821 = %817.3;
    (%818, %819, %820, %821, meta[relay.Constant][39] /* ty=Tensor[(1120), int16] */, meta[relay.Constant][40] /* ty=Tensor[(1040), float64] */)
  };
  %822() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32], Tensor[(1, 512), float32], Tensor[(13, 15, 2), uint32], Tensor[(1120), int16], Tensor[(1040), float64]) */
}

def @func_5489(%var_5488: Tensor[(390), uint32]) -> (Tensor[(12, 10, 1), float32], Tensor[(13, 15, 2), uint32], Tensor[(390), uint32]) {
  %830 = fn (%var_5480: Tensor[(390), uint32]) -> (Tensor[(12, 10, 1), float32], Tensor[(13, 15, 2), uint32], Tensor[(390), uint32]) {
    %823 = @func_4344() /* ty=(Tensor[(12, 10, 1), float32],) */;
    %824 = cast(%var_5480, dtype="uint32") /* ty=Tensor[(390), uint32] */;
    %825 = cast(%var_5480, dtype="uint32") /* ty=Tensor[(390), uint32] */;
    %826 = reshape(%824, newshape=[13, 15, 2]) /* ty=Tensor[(13, 15, 2), uint32] */;
    %827 = reshape(%825, newshape=[13, 15, 2]) /* ty=Tensor[(13, 15, 2), uint32] */;
    %828 = %823.0;
    %829 = @func_211(%826, %827) /* ty=Tensor[(13, 15, 2), uint32] */;
    (%828, %829, %var_5480)
  };
  %830(%var_5488) /* ty=(Tensor[(12, 10, 1), float32], Tensor[(13, 15, 2), uint32], Tensor[(390), uint32]) */
}

def @func_4075() -> (Tensor[(12, 10, 1), float32], Tensor[(?, 512), uint32], Tensor[(512), float32]) {
  %836 = fn () -> (Tensor[(12, 10, 1), float32], Tensor[(?, 512), uint32], Tensor[(512), float32]) {
    %831 = @func_2408() /* ty=(Tensor[(12, 10, 1), float32],) */;
    %832 = cast(meta[relay.Constant][41] /* ty=Tensor[(512), float32] */, dtype="float32") /* ty=Tensor[(512), float32] */;
    %833 = reshape(%832, newshape=[1, 512]) /* ty=Tensor[(1, 512), float32] */;
    %834 = %831.0;
    %835 = @func_3704(%833) /* ty=Tensor[(?, 512), uint32] */;
    (%834, %835, meta[relay.Constant][41] /* ty=Tensor[(512), float32] */)
  };
  %836() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(?, 512), uint32], Tensor[(512), float32]) */
}

def @func_9107(%var_9106: Tensor[(12, 512), float64]) -> (Tensor[(12, 512), float32],) {
  %843 = fn (%var_9098: Tensor[(12, 512), float64]) -> (Tensor[(12, 512), float32],) {
    %837 = @func_2903() /* ty=Tensor[(1, 512), float32] */;
    %838 = cast(%837, dtype="float64") /* ty=Tensor[(1, 512), float64] */;
    %839 = sinh(%838) /* ty=Tensor[(1, 512), float64] */;
    %840 = cast(%839, dtype="float32") /* ty=Tensor[(1, 512), float32] */;
    %841 = cast(%var_9098, dtype="float32") /* ty=Tensor[(12, 512), float32] */;
    %842 = minimum(%840, %841) /* ty=Tensor[(12, 512), float32] */;
    (%842,)
  };
  %843(%var_9106) /* ty=(Tensor[(12, 512), float32],) */
}

def @func_4760() -> (Tensor[(1, 512), float32], Tensor[(1, 512), float32], Tensor[(12, 10, 1), float32]) {
  @func_4758() /* ty=(Tensor[(1, 512), float32], Tensor[(1, 512), float32], Tensor[(12, 10, 1), float32]) */
}

def @func_5364() -> (Tensor[(1, 512), float32],) {
  %846 = fn () -> (Tensor[(1, 512), float32],) {
    %844 = @func_4017() /* ty=(Tensor[(1, 512), float32],) */;
    %845 = %844.0;
    (%845,)
  };
  %846() /* ty=(Tensor[(1, 512), float32],) */
}

def @func_2489(%var_2487: Tensor[(231), float64]) -> (Tensor[(12, 10, 1), float32], Tensor[(13, 15, 2), uint32], Tensor[(390), uint32], Tensor[(12, 10, 1), float32], Tensor[(1040), float64], Tensor[(231), float64]) {
  @func_2486(%var_2487) /* ty=(Tensor[(12, 10, 1), float32], Tensor[(13, 15, 2), uint32], Tensor[(390), uint32], Tensor[(12, 10, 1), float32], Tensor[(1040), float64], Tensor[(231), float64]) */
}

def @func_9983(%var_9981: uint8, %var_9982: Tensor[(1, 7, 3), uint8]) -> (Tensor[(1, 7, 3), uint8], Tensor[(15, 512), float32], Tensor[(7680), uint32]) {
  %853 = fn (%var_9971: uint8, %var_9972: Tensor[(1, 7, 3), uint8]) -> (Tensor[(1, 7, 3), uint8], Tensor[(15, 512), float32], Tensor[(7680), uint32]) {
    %847 = cast(%var_9971, dtype="uint8") /* ty=uint8 */;
    %848 = cast(%var_9972, dtype="uint8") /* ty=Tensor[(1, 7, 3), uint8] */;
    %849 = cast(meta[relay.Constant][42] /* ty=Tensor[(7680), uint32] */, dtype="uint32") /* ty=Tensor[(7680), uint32] */;
    %850 = reshape(%849, newshape=[15, 512]) /* ty=Tensor[(15, 512), uint32] */;
    %851 = logical_xor(%847, %848) /* ty=Tensor[(1, 7, 3), uint8] */;
    %852 = @func_8959(%850) /* ty=Tensor[(15, 512), float32] */;
    (%851, %852, meta[relay.Constant][42] /* ty=Tensor[(7680), uint32] */)
  };
  %853(%var_9981, %var_9982) /* ty=(Tensor[(1, 7, 3), uint8], Tensor[(15, 512), float32], Tensor[(7680), uint32]) */
}

def @func_5413() -> (Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32]) {
  @func_5411() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32]) */
}

def @func_7000() -> (Tensor[(12, 10, 1), float32],) {
  @func_6998() /* ty=(Tensor[(12, 10, 1), float32],) */
}

def @func_7162() -> (Tensor[(1, 512), float32], Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32], Tensor[(1, 512), float32], Tensor[(12, 10, 1), float32], Tensor[(1280, 4), uint32], Tensor[(13, 15, 2), uint32]) {
  %854 = @func_4406() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32]) */;
  %855 = @func_5993() /* ty=(Tensor[(1, 512), float32],) */;
  %856 = cast(meta[relay.Constant][43] /* ty=Tensor[(1280, 4), uint32] */, dtype="uint32") /* ty=Tensor[(1280, 4), uint32] */;
  %857 = reshape(%856, newshape=[10, 512]) /* ty=Tensor[(10, 512), uint32] */;
  %858 = @func_7117(%857) /* ty=(Tensor[(10, 512), bool], Tensor[(12, 10, 1), float32], Tensor[(10, 512), float64]) */;
  %859 = @func_2741() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(13, 15, 2), uint32], Tensor[(65, 6), uint32], Tensor[(12, 10, 1), float32], Tensor[(16, 16, 2), bool], Tensor[(1, 512), float32], Tensor[(1040), float64]) */;
  %860 = @func_2903() /* ty=Tensor[(1, 512), float32] */;
  %861 = @func_5377() /* ty=Tensor[(12, 10, 1), float32] */;
  %862 = %854.0;
  %863 = %855.0;
  %864 = %858.1;
  %865 = %859.1;
  (%860, %861, %862, %863, %864, meta[relay.Constant][43] /* ty=Tensor[(1280, 4), uint32] */, %865)
}

def @func_6055() -> (Tensor[(1, 512), float32], Tensor[(1, 512), float32]) {
  @func_6053() /* ty=(Tensor[(1, 512), float32], Tensor[(1, 512), float32]) */
}

def @func_5717() -> (Tensor[(6, 512), float64],) {
  @func_5715() /* ty=(Tensor[(6, 512), float64],) */
}

def @func_1734(%var_1711: Tensor[(5, 16, 14), int16], %var_1718: Tensor[(8, 130), float64]) -> (Tensor[(5, 16, 14), int16], Tensor[(10, 13, 8), float64], Tensor[(8, 130), float64], Tensor[(13, 15, 2), uint32], Tensor[(33, 7), float64]) {
  %866 = cast(meta[relay.Constant][44] /* ty=Tensor[(5, 16, 1), int16] */, dtype="int16") /* ty=Tensor[(5, 16, 1), int16] */;
  %867 = cast(%var_1711, dtype="int16") /* ty=Tensor[(5, 16, 14), int16] */;
  %868 = cast(%var_1718, dtype="float64") /* ty=Tensor[(8, 130), float64] */;
  %869 = reshape(%868, newshape=[10, 13, 8]) /* ty=Tensor[(10, 13, 8), float64] */;
  %870 = cast(meta[relay.Constant][45] /* ty=Tensor[(33, 7), float64] */, dtype="float64") /* ty=Tensor[(33, 7), float64] */;
  %871 = reshape(%870, newshape=[3, 11, 7]) /* ty=Tensor[(3, 11, 7), float64] */;
  %872 = @func_381(%871) /* ty=(Tensor[(10, 13, 8), float64], Tensor[(1040), float64], Tensor[(10, 13, 8), float64], Tensor[(13, 15, 2), uint32], Tensor[(390), uint32], Tensor[(3, 11, 7), float64], Tensor[(10, 13, 8), float64]) */;
  %873 = left_shift(%866, %867) /* ty=Tensor[(5, 16, 14), int16] */;
  %874 = @func_186(%869) /* ty=Tensor[(10, 13, 8), float64] */;
  %875 = %872.3;
  (%873, %874, %var_1718, %875, meta[relay.Constant][45] /* ty=Tensor[(33, 7), float64] */)
}

def @func_3737(%var_3735: Tensor[(8, 512), float32]) -> Tensor[(8, 512), bool] {
  @func_3734(%var_3735) /* ty=Tensor[(8, 512), bool] */
}

def @func_2652() -> Tensor[(12, 10, 1), float32] {
  @func_2650() /* ty=Tensor[(12, 10, 1), float32] */
}

def @func_5354(%var_5352: Tensor[(1, 300), bool]) -> (Tensor[(12, 10, 1), float32], Tensor[(15, 4, 5), bool], Tensor[(1, 300), bool], Tensor[(12, 10, 1), float32], Tensor[(1, 512), float32], Tensor[(15, 4, 5), bool], Tensor[(12, 10, 1), float32], Tensor[(1, 3, 4), float32], Tensor[(1232), uint8], Tensor[(12), float32], Tensor[(12, 10, 1), float32]) {
  @func_5351(%var_5352) /* ty=(Tensor[(12, 10, 1), float32], Tensor[(15, 4, 5), bool], Tensor[(1, 300), bool], Tensor[(12, 10, 1), float32], Tensor[(1, 512), float32], Tensor[(15, 4, 5), bool], Tensor[(12, 10, 1), float32], Tensor[(1, 3, 4), float32], Tensor[(1232), uint8], Tensor[(12), float32], Tensor[(12, 10, 1), float32]) */
}

def @func_2844() -> (Tensor[(1, 512), float32],) {
  @func_2842() /* ty=(Tensor[(1, 512), float32],) */
}

def @func_2512() -> (Tensor[(12, 10, 1), float32],) {
  %876 = @func_2408() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %877 = %876.0;
  (%877,)
}

def @func_4345() -> (Tensor[(12, 10, 1), float32],) {
  %879 = fn () -> (Tensor[(12, 10, 1), float32],) {
    %878 = @func_4152() /* ty=Tensor[(12, 10, 1), float32] */;
    (%878,)
  };
  %879() /* ty=(Tensor[(12, 10, 1), float32],) */
}

def @func_9257() -> (Tensor[(12), float32], Tensor[(12, 10, 1), float32]) {
  @func_9255() /* ty=(Tensor[(12), float32], Tensor[(12, 10, 1), float32]) */
}

def @func_3734(%var_3722: Tensor[(8, 512), float32]) -> Tensor[(8, 512), bool] {
  %880 = @func_2915() /* ty=Tensor[(1, 512), float32] */;
  %881 = cast(%880, dtype="bool") /* ty=Tensor[(1, 512), bool] */;
  %882 = cast(%var_3722, dtype="bool") /* ty=Tensor[(8, 512), bool] */;
  logical_and(%881, %882) /* ty=Tensor[(8, 512), bool] */
}

def @func_6084() -> (Tensor[(12, 10, 8), bool],) {
  %889 = fn () -> (Tensor[(12, 10, 8), bool],) {
    %883 = @func_2428() /* ty=(Tensor[(12, 10, 1), float32],) */;
    %884 = %883.0;
    %885 = @func_5784() /* ty=Tensor[(12, 10, 8), bool] */;
    %886 = cast(%884, dtype="bool") /* ty=Tensor[(12, 10, 1), bool] */;
    %887 = cast(%885, dtype="bool") /* ty=Tensor[(12, 10, 8), bool] */;
    %888 = logical_or(%886, %887) /* ty=Tensor[(12, 10, 8), bool] */;
    (%888,)
  };
  %889() /* ty=(Tensor[(12, 10, 8), bool],) */
}

def @func_8156() -> (Tensor[(12, 10, 1), float32], Tensor[(1, 512), float32], Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32]) {
  %890 = @func_6136() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32], Tensor[(1, 512), float32], Tensor[(13, 15, 2), uint32], Tensor[(1120), int16], Tensor[(1040), float64]) */;
  %891 = @func_2842() /* ty=(Tensor[(1, 512), float32],) */;
  %892 = @func_6998() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %893 = @func_3791() /* ty=(Tensor[(1, 512), float32], Tensor[(12, 10, 1), float32]) */;
  %894 = %890.1;
  %895 = %891.0;
  %896 = %892.0;
  %897 = %893.1;
  (%894, %895, %896, %897)
}

def @func_7403(%var_7391: Tensor[(429), float64]) -> (Tensor[(16, 512), uint16], Tensor[(12, 10, 1), float32], Tensor[(1, 390), uint32], Tensor[(429), float64]) {
  %898 = @func_5363() /* ty=(Tensor[(1, 512), float32],) */;
  %899 = %898.0;
  %900 = cast(%899, dtype="uint16") /* ty=Tensor[(1, 512), uint16] */;
  %901 = cast(meta[relay.Constant][46] /* ty=Tensor[(16, 512), float32] */, dtype="uint16") /* ty=Tensor[(16, 512), uint16] */;
  %902 = right_shift(%900, %901) /* ty=Tensor[(16, 512), uint16] */;
  %903 = cast(%902, dtype="float32") /* ty=Tensor[(16, 512), float32] */;
  %904 = cast(meta[relay.Constant][47] /* ty=Tensor[(1, 390), uint32] */, dtype="uint32") /* ty=Tensor[(1, 390), uint32] */;
  %905 = cast(%var_7391, dtype="float64") /* ty=Tensor[(429), float64] */;
  %906 = reshape(%903, newshape=[16, 512]) /* ty=Tensor[(16, 512), float32] */;
  %907 = reshape(%904, newshape=[390]) /* ty=Tensor[(390), uint32] */;
  %908 = reshape(%905, newshape=[429]) /* ty=Tensor[(429), float64] */;
  %909 = @func_3653(%906, %907, %908) /* ty=(Tensor[(16, 512), float32], Tensor[(12, 10, 1), float32], Tensor[(13, 15, 2), uint32], Tensor[(390), uint32], Tensor[(12, 10, 1), float32], Tensor[(231), float64], Tensor[(231), float64], Tensor[(429), float64]) */;
  %910 = %909.1;
  (%902, %910, meta[relay.Constant][47] /* ty=Tensor[(1, 390), uint32] */, %var_7391)
}

def @func_8103(%var_8083: Tensor[(231), float64], %var_8087: Tensor[(12, 512), float32]) -> (Tensor[(231), float64], Tensor[(231), float64], Tensor[(12, 512), uint64], Tensor[(12, 10, 429), bool]) {
  %911 = cast(%var_8083, dtype="float64") /* ty=Tensor[(231), float64] */;
  %912 = cast(meta[relay.Constant][48] /* ty=Tensor[(429), float64] */, dtype="float64") /* ty=Tensor[(429), float64] */;
  %913 = @func_6053() /* ty=(Tensor[(1, 512), float32], Tensor[(1, 512), float32]) */;
  %914 = %913.0;
  %915 = cast(%914, dtype="float32") /* ty=Tensor[(1, 512), float32] */;
  %916 = reshape(%911, newshape=[231]) /* ty=Tensor[(231), float64] */;
  %917 = reshape(%912, newshape=[429]) /* ty=Tensor[(429), float64] */;
  %918 = reshape(%915, newshape=[512]) /* ty=Tensor[(512), float32] */;
  %919 = @func_3580(%916, %917, %918) /* ty=(Tensor[(12, 10, 1), float32], Tensor[(12, 12, 13), int16], Tensor[(231), float64], Tensor[(16, 16, 2), bool], Tensor[(512), float32], Tensor[(1040), float64], Tensor[(429), float32], Tensor[(1872), bool]) */;
  %920 = cast(%914, dtype="uint64") /* ty=Tensor[(1, 512), uint64] */;
  %921 = cast(%var_8087, dtype="uint64") /* ty=Tensor[(12, 512), uint64] */;
  %922 = @func_2512() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %923 = %922.0;
  %924 = cast(meta[relay.Constant][48] /* ty=Tensor[(429), float64] */, dtype="bool") /* ty=Tensor[(429), bool] */;
  %925 = cast(%923, dtype="bool") /* ty=Tensor[(12, 10, 1), bool] */;
  %926 = %919.2;
  %927 = bitwise_and(%920, %921) /* ty=Tensor[(12, 512), uint64] */;
  %928 = equal(%924, %925) /* ty=Tensor[(12, 10, 429), bool] */;
  (%926, %var_8083, %927, %928)
}

def @func_5377() -> Tensor[(12, 10, 1), float32] {
  %929 = @func_3960() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %929.0
}

def @func_5351(%var_5294: Tensor[(1, 300), bool]) -> (Tensor[(12, 10, 1), float32], Tensor[(15, 4, 5), bool], Tensor[(1, 300), bool], Tensor[(12, 10, 1), float32], Tensor[(1, 512), float32], Tensor[(15, 4, 5), bool], Tensor[(12, 10, 1), float32], Tensor[(1, 3, 4), float32], Tensor[(1232), uint8], Tensor[(12), float32], Tensor[(12, 10, 1), float32]) {
  %930 = @func_3422() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %931 = cast(%var_5294, dtype="bool") /* ty=Tensor[(1, 300), bool] */;
  %932 = reshape(%931, newshape=[15, 4, 5]) /* ty=Tensor[(15, 4, 5), bool] */;
  %933 = @func_3384(%932) /* ty=(Tensor[(15, 4, 5), bool],) */;
  %934 = @func_2512() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %935 = @func_4542() /* ty=(Tensor[(1, 512), float32],) */;
  %936 = cast(%var_5294, dtype="bool") /* ty=Tensor[(1, 300), bool] */;
  %937 = reshape(%936, newshape=[15, 4, 5]) /* ty=Tensor[(15, 4, 5), bool] */;
  %938 = @func_3384(%937) /* ty=(Tensor[(15, 4, 5), bool],) */;
  %939 = @func_2780() /* ty=(Tensor[(12, 10, 1), float32],) */;
  %940 = cast(meta[relay.Constant][49] /* ty=Tensor[(1232), uint8] */, dtype="uint8") /* ty=Tensor[(1232), uint8] */;
  %941 = cast(meta[relay.Constant][50] /* ty=Tensor[(12), float32] */, dtype="float32") /* ty=Tensor[(12), float32] */;
  %942 = reshape(%940, newshape=[2, 616]) /* ty=Tensor[(2, 616), uint8] */;
  %943 = reshape(%941, newshape=[12]) /* ty=Tensor[(12), float32] */;
  %944 = @func_3348(%942, %943) /* ty=(Tensor[(1, 3, 4), float32], Tensor[(2, 616), uint8], Tensor[(12, 10, 12), float64], Tensor[(12, 10, ?), bool]) */;
  %945 = %930.0;
  %946 = %933.0;
  %947 = %934.0;
  %948 = %935.0;
  %949 = %938.0;
  %950 = %939.0;
  %951 = %944.0;
  %952 = @func_3860() /* ty=Tensor[(12, 10, 1), float32] */;
  (%945, %946, %var_5294, %947, %948, %949, %950, %951, meta[relay.Constant][49] /* ty=Tensor[(1232), uint8] */, meta[relay.Constant][50] /* ty=Tensor[(12), float32] */, %952)
}

def @func_7575() -> (Tensor[(1120), int16], Tensor[(1, 512), float32], Tensor[(12, 10, 1), float32], Tensor[(1, 3, 4), float32], Tensor[(1232), uint8], Tensor[(12), float32], Tensor[(1, 512), float32]) {
  @func_7573() /* ty=(Tensor[(1120), int16], Tensor[(1, 512), float32], Tensor[(12, 10, 1), float32], Tensor[(1, 3, 4), float32], Tensor[(1232), uint8], Tensor[(12), float32], Tensor[(1, 512), float32]) */
}

def @func_7837(%var_7835: Tensor[(5120), uint32], %var_7836: Tensor[(11, 21), float64]) -> (Tensor[(12, 10, 1), float32], Tensor[(?, 512), uint32], Tensor[(5120), float32], Tensor[(12, 10, 1), float32], Tensor[(1, 512), float32], Tensor[(11, 21), float64], Tensor[(429), float64], Tensor[(4096), float32], Tensor[(12, 10, 1), float32], Tensor[(5120), int64]) {
  %986 = fn (%var_7791: Tensor[(5120), uint32], %var_7818: Tensor[(11, 21), float64]) -> (Tensor[(12, 10, 1), float32], Tensor[(?, 512), uint32], Tensor[(5120), float32], Tensor[(12, 10, 1), float32], Tensor[(1, 512), float32], Tensor[(11, 21), float64], Tensor[(429), float64], Tensor[(4096), float32], Tensor[(12, 10, 1), float32], Tensor[(5120), int64]) {
    %953 = @func_6190() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32]) */;
    %954 = @func_4074() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(?, 512), uint32], Tensor[(512), float32]) */;
    %955 = cast(%var_7791, dtype="uint32") /* ty=Tensor[(5120), uint32] */;
    %956 = reshape(%955, newshape=[10, 512]) /* ty=Tensor[(10, 512), uint32] */;
    %957 = @func_7117(%956) /* ty=(Tensor[(10, 512), bool], Tensor[(12, 10, 1), float32], Tensor[(10, 512), float64]) */;
    %958 = %957.0;
    %959 = cast(%958, dtype="float32") /* ty=Tensor[(10, 512), float32] */;
    %960 = shape_of(%var_7791, dtype="int32") /* ty=Tensor[(1), int32] */;
    %961 = cast(%var_7791, dtype="float32") /* ty=Tensor[(5120), float32] */;
    %962 = dyn.reshape(%959, %960, newshape=[]) /* ty=Tensor[(?), float32] */;
    %963 = @func_4618() /* ty=(Tensor[(12, 10, 1), float32],) */;
    %964 = cast(%var_7818, dtype="float64") /* ty=Tensor[(11, 21), float64] */;
    %965 = cast(meta[relay.Constant][51] /* ty=Tensor[(429), float64] */, dtype="float64") /* ty=Tensor[(429), float64] */;
    %966 = cast(meta[relay.Constant][52] /* ty=Tensor[(4096), float32] */, dtype="float32") /* ty=Tensor[(4096), float32] */;
    %967 = reshape(%964, newshape=[231]) /* ty=Tensor[(231), float64] */;
    %968 = reshape(%965, newshape=[429, 1]) /* ty=Tensor[(429, 1), float64] */;
    %969 = reshape(%966, newshape=[4096]) /* ty=Tensor[(4096), float32] */;
    %970 = @func_4858(%967, %968, %969) /* ty=(Tensor[(1, 512), float32], Tensor[(12, 12, 13), int16], Tensor[(231), float64], Tensor[(429, 1), float64], Tensor[(8, 512), bool], Tensor[(4096), float32]) */;
    %971 = cast(%var_7791, dtype="float64") /* ty=Tensor[(5120), float64] */;
    %972 = asinh(%971) /* ty=Tensor[(5120), float64] */;
    %973 = cast(%958, dtype="float32") /* ty=Tensor[(10, 512), float32] */;
    %974 = asin(%973) /* ty=Tensor[(10, 512), float32] */;
    %975 = cast(%974, dtype="int64") /* ty=Tensor[(10, 512), int64] */;
    %976 = shape_of(%972, dtype="int32") /* ty=Tensor[(1), int32] */;
    %977 = cast(%972, dtype="int64") /* ty=Tensor[(5120), int64] */;
    %978 = dyn.reshape(%975, %976, newshape=[]) /* ty=Tensor[(?), int64] */;
    %979 = %953.3;
    %980 = %954.1;
    %981 = maximum(%961, %962) /* ty=Tensor[(5120), float32] */;
    %982 = %963.0;
    %983 = %970.0;
    %984 = @func_3481() /* ty=Tensor[(12, 10, 1), float32] */;
    %985 = left_shift(%977, %978) /* ty=Tensor[(5120), int64] */;
    (%979, %980, %981, %982, %983, %var_7818, meta[relay.Constant][51] /* ty=Tensor[(429), float64] */, meta[relay.Constant][52] /* ty=Tensor[(4096), float32] */, %984, %985)
  };
  %986(%var_7835, %var_7836) /* ty=(Tensor[(12, 10, 1), float32], Tensor[(?, 512), uint32], Tensor[(5120), float32], Tensor[(12, 10, 1), float32], Tensor[(1, 512), float32], Tensor[(11, 21), float64], Tensor[(429), float64], Tensor[(4096), float32], Tensor[(12, 10, 1), float32], Tensor[(5120), int64]) */
}

def @func_7999(%var_7997: Tensor[(4, 14, 9), float32]) -> (Tensor[(4, 14, 9), float32], Tensor[(12, 10, 1), float32]) {
  @func_7996(%var_7997) /* ty=(Tensor[(4, 14, 9), float32], Tensor[(12, 10, 1), float32]) */
}

def @func_7120(%var_7118: Tensor[(10, 512), uint32]) -> (Tensor[(10, 512), bool], Tensor[(12, 10, 1), float32], Tensor[(10, 512), float64]) {
  @func_7117(%var_7118) /* ty=(Tensor[(10, 512), bool], Tensor[(12, 10, 1), float32], Tensor[(10, 512), float64]) */
}

def @func_8591() -> Tensor[(1, 512), float32] {
  @func_8589() /* ty=Tensor[(1, 512), float32] */
}

def @func_5092(%var_5066: int16, %var_5067: Tensor[(4, 1, 6), int16]) -> (Tensor[(4, 1, 6), int16], Tensor[(?, 512), uint32]) {
  %987 = cast(%var_5066, dtype="int16") /* ty=int16 */;
  %988 = cast(%var_5067, dtype="int16") /* ty=Tensor[(4, 1, 6), int16] */;
  %989 = @func_4074() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(?, 512), uint32], Tensor[(512), float32]) */;
  %990 = bitwise_xor(%987, %988) /* ty=Tensor[(4, 1, 6), int16] */;
  %991 = %989.1;
  (%990, %991)
}

def @func_5096(%var_5094: int16, %var_5095: Tensor[(4, 1, 6), int16]) -> (Tensor[(4, 1, 6), int16], Tensor[(?, 512), uint32]) {
  @func_5092(%var_5094, %var_5095) /* ty=(Tensor[(4, 1, 6), int16], Tensor[(?, 512), uint32]) */
}

def @func_5994() -> (Tensor[(1, 512), float32],) {
  %996 = fn () -> (Tensor[(1, 512), float32],) {
    %992 = @func_4017() /* ty=(Tensor[(1, 512), float32],) */;
    %993 = %992.0;
    %994 = cast(%993, dtype="float32") /* ty=Tensor[(1, 512), float32] */;
    %995 = atanh(%994) /* ty=Tensor[(1, 512), float32] */;
    (%995,)
  };
  %996() /* ty=(Tensor[(1, 512), float32],) */
}

def @func_3792() -> (Tensor[(1, 512), float32], Tensor[(12, 10, 1), float32]) {
  %1001 = fn () -> (Tensor[(1, 512), float32], Tensor[(12, 10, 1), float32]) {
    %997 = @func_2842() /* ty=(Tensor[(1, 512), float32],) */;
    %998 = @func_2408() /* ty=(Tensor[(12, 10, 1), float32],) */;
    %999 = %997.0;
    %1000 = %998.0;
    (%999, %1000)
  };
  %1001() /* ty=(Tensor[(1, 512), float32], Tensor[(12, 10, 1), float32]) */
}

def @func_3387(%var_3385: Tensor[(15, 4, 5), bool]) -> (Tensor[(15, 4, 5), bool],) {
  @func_3384(%var_3385) /* ty=(Tensor[(15, 4, 5), bool],) */
}

def @func_7421() -> (Tensor[(?, 512), uint32], Tensor[(12, 12, 13), int16], Tensor[(1872), bool]) {
  %1007 = fn () -> (Tensor[(?, 512), uint32], Tensor[(12, 12, 13), int16], Tensor[(1872), bool]) {
    %1002 = @func_4074() /* ty=(Tensor[(12, 10, 1), float32], Tensor[(?, 512), uint32], Tensor[(512), float32]) */;
    %1003 = cast(meta[relay.Constant][53] /* ty=Tensor[(1872), bool] */, dtype="bool") /* ty=Tensor[(1872), bool] */;
    %1004 = reshape(%1003, newshape=[12, 12, 13]) /* ty=Tensor[(12, 12, 13), bool] */;
    %1005 = %1002.1;
    %1006 = @func_667(%1004) /* ty=Tensor[(12, 12, 13), int16] */;
    (%1005, %1006, meta[relay.Constant][53] /* ty=Tensor[(1872), bool] */)
  };
  %1007() /* ty=(Tensor[(?, 512), uint32], Tensor[(12, 12, 13), int16], Tensor[(1872), bool]) */
}

def @func_8749(%var_8747: Tensor[(429, 1), float64], %var_8748: Tensor[(231), float64]) -> (Tensor[(12, 10, 1), float32], Tensor[(1, 512), float32], Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32], Tensor[(1, 512), float64], Tensor[(10, 13, 8), float64], Tensor[(429, 1), float64], Tensor[(231), float64]) {
  @func_8745(%var_8747, %var_8748) /* ty=(Tensor[(12, 10, 1), float32], Tensor[(1, 512), float32], Tensor[(12, 10, 1), float32], Tensor[(12, 10, 1), float32], Tensor[(1, 512), float64], Tensor[(10, 13, 8), float64], Tensor[(429, 1), float64], Tensor[(231), float64]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

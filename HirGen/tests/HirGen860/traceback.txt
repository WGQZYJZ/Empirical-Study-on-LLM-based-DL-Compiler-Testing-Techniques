==========mod==========
#[version = "0.0.5"]
def @func_4747() -> (Tensor[(9, 8, 11), float64], Tensor[(1815), float64]) {
  %0 = @func_3297() /* ty=(Tensor[(9, 8, 11), float64],) */;
  %1 = %0.0;
  %2 = @func_2805() /* ty=Tensor[(1815), float64] */;
  (%1, %2)
}

def @func_11461() -> (Tensor[(16, 9, 14), uint8], float32) {
  %3 = @func_3027() /* ty=(float32,) */;
  %4 = @func_9982() /* ty=Tensor[(16, 9, 14), uint8] */;
  %5 = %3.0;
  (%4, %5)
}

def @func_9779() -> Tensor[(9, 8, 11), int16] {
  @func_3694() /* ty=Tensor[(9, 8, 11), int16] */
}

def @func_9737() -> (Tensor[(9, 8, 11), float64],) {
  %6 = @func_7994() /* ty=Tensor[(9, 8, 11), float64] */;
  (%6,)
}

def @func_12490() -> (Tensor[(9, 8, 11), int16],) {
  %7 = @func_4878() /* ty=(Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16]) */;
  %8 = %7.1;
  (%8,)
}

def @func_12758() -> (Tensor[(2, 3, 14), bool], Tensor[(9, 8, 11), float64], Tensor[(9, 8, 11), float32], Tensor[(8, 9, 7), float32], Tensor[(16, 9, 14), float32], float32) {
  %9 = @func_10621() /* ty=(Tensor[(2, 3, 14), bool], float32) */;
  %10 = @func_4747() /* ty=(Tensor[(9, 8, 11), float64], Tensor[(1815), float64]) */;
  %11 = @func_4116() /* ty=(Tensor[(8, 9, 7), float32],) */;
  %12 = %11.0;
  %13 = cast(%12, dtype="float32") /* ty=Tensor[(8, 9, 7), float32] */;
  %14 = @func_7507() /* ty=(Tensor[(16, 9, 14), float32], Tensor[(9, 8, 11), int16]) */;
  %15 = %9.0;
  %16 = %10.0;
  %17 = @func_2484() /* ty=Tensor[(9, 8, 11), float32] */;
  %18 = asin(%13) /* ty=Tensor[(8, 9, 7), float32] */;
  %19 = %14.0;
  %20 = @func_10746() /* ty=float32 */;
  (%15, %16, %17, %18, %19, %20)
}

def @func_13393() -> (Tensor[(98), float64], Tensor[(9, 8, 11), int16]) {
  %21 = @func_4338() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %22 = @func_9086() /* ty=Tensor[(98), float64] */;
  %23 = %21.0;
  (%22, %23)
}

def @func_2283(%var_2255: Tensor[(1, 624), bool]) -> (Tensor[(9, 8, 11), int16], Tensor[(13, 16, 3), float32], Tensor[(1, 624), float32], Tensor[(9, 8, 11), int16]) {
  %24 = @func_1614() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %25 = cast(%var_2255, dtype="bool") /* ty=Tensor[(1, 624), bool] */;
  %26 = reshape(%25, newshape=[13, 16, 3]) /* ty=Tensor[(13, 16, 3), bool] */;
  %27 = cast(%var_2255, dtype="float32") /* ty=Tensor[(1, 624), float32] */;
  %28 = @func_1614() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %29 = %24.0;
  %30 = @func_129(%26) /* ty=Tensor[(13, 16, 3), float32] */;
  %31 = sinh(%27) /* ty=Tensor[(1, 624), float32] */;
  %32 = %28.0;
  (%29, %30, %31, %32)
}

def @func_8611(%var_8548: Tensor[(40), float32]) -> (Tensor[(9, 8, 11), int16], Tensor[(16, 9, 14), int8], Tensor[(4, 6, 11), float64], Tensor[(9, 8, 11), int16], Tensor[(4, 10, ?), int64]) {
  %33 = @func_7507() /* ty=(Tensor[(16, 9, 14), float32], Tensor[(9, 8, 11), int16]) */;
  %34 = @func_7083() /* ty=(Tensor[(16, 9, 14), int8], Tensor[(1815), float64], Tensor[(1815), float32]) */;
  %35 = @func_2753() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %36 = cast(%var_8548, dtype="float32") /* ty=Tensor[(40), float32] */;
  %37 = reshape(%36, newshape=[40]) /* ty=Tensor[(40), float32] */;
  %38 = @func_4927(%37) /* ty=(Tensor[(9, 8, 11), int16], Tensor[(4, 10, ?), int32], Tensor[(40), float32]) */;
  %39 = %38.1;
  %40 = cast(%var_8548, dtype="float64") /* ty=Tensor[(40), float64] */;
  %41 = shape_of(%39, dtype="int32") /* ty=Tensor[(3), int32] */;
  %42 = cast(%39, dtype="float64") /* ty=Tensor[(4, 10, ?), float64] */;
  %43 = dyn.reshape(%40, %41, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %44 = floor_mod(%42, %43) /* ty=Tensor[(4, 10, ?), float64] */;
  %45 = cast(%var_8548, dtype="int64") /* ty=Tensor[(40), int64] */;
  %46 = shape_of(%44, dtype="int32") /* ty=Tensor[(3), int32] */;
  %47 = cast(%44, dtype="int64") /* ty=Tensor[(4, 10, ?), int64] */;
  %48 = dyn.reshape(%45, %46, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %49 = %33.1;
  %50 = %34.0;
  %51 = @func_5276() /* ty=Tensor[(4, 6, 11), float64] */;
  %52 = %35.0;
  %53 = right_shift(%47, %48) /* ty=Tensor[(4, 10, ?), int64] */;
  (%49, %50, %51, %52, %53)
}

def @func_8038() -> (Tensor[(9, 8, 11), int16],) {
  %54 = @func_1690() /* ty=Tensor[(9, 8, 11), int16] */;
  (%54,)
}

def @func_3934(%var_3923: Tensor[(6, 9, 7), float32], %var_3931: float32) -> (Tensor[(6, 9, 7), float32], Tensor[(3, 2, 1), float64], Tensor[(6), float64], float32, Tensor[(1815), float32]) {
  %55 = cast(%var_3923, dtype="float32") /* ty=Tensor[(6, 9, 7), float32] */;
  %56 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(6, 9, 7), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %57 = cast(meta[relay.Constant][0] /* ty=Tensor[(6, 9, 7), float32] */, dtype="float32") /* ty=Tensor[(6, 9, 7), float32] */;
  %58 = dyn.reshape(%55, %56, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %59 = cast(meta[relay.Constant][1] /* ty=Tensor[(6), float64] */, dtype="float64") /* ty=Tensor[(6), float64] */;
  %60 = cast(%var_3931, dtype="float32") /* ty=float32 */;
  %61 = cast(meta[relay.Constant][2] /* ty=Tensor[(1815), float32] */, dtype="float32") /* ty=Tensor[(1815), float32] */;
  %62 = reshape(%59, newshape=[3, 2, 1]) /* ty=Tensor[(3, 2, 1), float64] */;
  %63 = reshape(%60, newshape=[]) /* ty=float32 */;
  %64 = reshape(%61, newshape=[1815, 1]) /* ty=Tensor[(1815, 1), float32] */;
  %65 = @func_3233(%62, %63, %64) /* ty=(Tensor[(3, 2, 1), float64], float32, Tensor[(1815, ?), float32], Tensor[(16, 9, 14), float32]) */;
  %66 = floor_mod(%57, %58) /* ty=Tensor[(6, 9, 7), float32] */;
  %67 = %65.0;
  (%66, %67, meta[relay.Constant][1] /* ty=Tensor[(6), float64] */, %var_3931, meta[relay.Constant][2] /* ty=Tensor[(1815), float32] */)
}

def @func_7113() -> (Tensor[(4, 6, 11), float64], Tensor[(96, 24), float32]) {
  %68 = @func_5276() /* ty=Tensor[(4, 6, 11), float64] */;
  %69 = @func_3986() /* ty=Tensor[(96, 24), float32] */;
  (%68, %69)
}

def @func_7813(%var_7799: Tensor[(15, 5, 11), float32]) -> (Tensor[(15, 5, 11), float32],) {
  %70 = cast(%var_7799, dtype="float32") /* ty=Tensor[(15, 5, 11), float32] */;
  %71 = log10(%70) /* ty=Tensor[(15, 5, 11), float32] */;
  (%71,)
}

def @func_5970() -> (Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16], Tensor[(1815), float64]) {
  %72 = @func_1686() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %73 = @func_5159() /* ty=(Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16]) */;
  %74 = @func_3808() /* ty=(Tensor[(1815), float64],) */;
  %75 = %72.0;
  %76 = %73.0;
  %77 = %74.0;
  (%75, %76, %77)
}

def @func_7507() -> (Tensor[(16, 9, 14), float32], Tensor[(9, 8, 11), int16]) {
  %78 = @func_5109() /* ty=(Tensor[(16, 9, 14), float32], Tensor[(16, 9, 14), uint8]) */;
  %79 = @func_2860() /* ty=(Tensor[(9, 8, 11), float64], Tensor[(9, 8, 11), int16]) */;
  %80 = %78.0;
  %81 = %79.1;
  (%80, %81)
}

def @func_11829() -> (Tensor[(624), bool],) {
  %82 = @func_7370() /* ty=(Tensor[(96, 24), float32], Tensor[(13, 16, 3), float32], Tensor[(624), bool]) */;
  %83 = %82.2;
  (%83,)
}

def @func_13065() -> (Tensor[(98), float64], Tensor[(16, 9, 14), float64]) {
  %84 = @func_10944() /* ty=(Tensor[(98), float64], Tensor[(96, 24), float64]) */;
  %85 = %84.0;
  %86 = @func_8051() /* ty=Tensor[(16, 9, 14), float64] */;
  (%85, %86)
}

def @func_14878() -> (Tensor[(9, 8, 11), int16], Tensor[(1815), float64], Tensor[(4, 6, 11), float64]) {
  %87 = @func_14760() /* ty=(Tensor[(9, 8, 11), float32], Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16]) */;
  %88 = @func_5321() /* ty=(Tensor[(1815), float64],) */;
  %89 = @func_7394() /* ty=(Tensor[(4, 6, 11), float64],) */;
  %90 = %87.1;
  %91 = %88.0;
  %92 = %89.0;
  (%90, %91, %92)
}

def @func_1812(%var_1807: float32, %var_1808: Tensor[(1815), float32]) -> (Tensor[(9, 8, 11), int16], float32, float32, Tensor[(1815), float32]) {
  %93 = @func_1614() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %94 = cast(%var_1807, dtype="float32") /* ty=float32 */;
  %95 = cast(%var_1808, dtype="float32") /* ty=Tensor[(1815), float32] */;
  %96 = reshape(%94, newshape=[]) /* ty=float32 */;
  %97 = reshape(%95, newshape=[1815]) /* ty=Tensor[(1815), float32] */;
  %98 = @func_1335(%96, %97) /* ty=(Tensor[(16, 10, 5), bool], Tensor[(11, 15, 11), float32], float32, Tensor[(1815), float32], Tensor[(16, 10, 5), float64]) */;
  %99 = %93.0;
  %100 = %98.2;
  (%99, %100, %var_1807, %var_1808)
}

def @func_1643(%var_1625: Tensor[(7, 2, 7), float64]) -> Tensor[(7, 2, 7), float64] {
  %101 = cast(%var_1625, dtype="float64") /* ty=Tensor[(7, 2, 7), float64] */;
  cos(%101) /* ty=Tensor[(7, 2, 7), float64] */
}

def @func_4574() -> float32 {
  %102 = @func_4111() /* ty=(Tensor[(1815), float64], float32) */;
  %102.1
}

def @func_5864() -> (Tensor[(16, 9, 14), float32], Tensor[(40), float32], Tensor[(20, 2), float32], Tensor[(9, 8, 11), int16], Tensor[(11, 165), float32], Tensor[(16, 144), float64]) {
  %103 = @func_2564() /* ty=(Tensor[(1815), float64], Tensor[(16, 9, 14), float32], Tensor[(2016), float32], Tensor[(312, 2), bool], Tensor[(96, 24), int32], Tensor[(16, 9, 14), float32]) */;
  %104 = cast(meta[relay.Constant][3] /* ty=Tensor[(20, 2), float32] */, dtype="float32") /* ty=Tensor[(20, 2), float32] */;
  %105 = reshape(%104, newshape=[40]) /* ty=Tensor[(40), float32] */;
  %106 = @func_4927(%105) /* ty=(Tensor[(9, 8, 11), int16], Tensor[(4, 10, ?), int32], Tensor[(40), float32]) */;
  %107 = @func_2753() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %108 = cast(meta[relay.Constant][4] /* ty=Tensor[(16, 144), float64] */, dtype="float64") /* ty=Tensor[(16, 144), float64] */;
  %109 = reshape(%108, newshape=[2304]) /* ty=Tensor[(2304), float64] */;
  %110 = @func_2433(%109) /* ty=(Tensor[(1815), float32], Tensor[(11, 165), float32], Tensor[(2304), float64], Tensor[(312, 2), bool]) */;
  %111 = %103.1;
  %112 = %106.2;
  %113 = %107.0;
  %114 = %110.1;
  (%111, %112, meta[relay.Constant][3] /* ty=Tensor[(20, 2), float32] */, %113, %114, meta[relay.Constant][4] /* ty=Tensor[(16, 144), float64] */)
}

def @func_1736(%var_1734: Tensor[(98), float64]) -> (Tensor[(9, 8, 11), int16], Tensor[(7, 2, 7), float64], Tensor[(98), float64]) {
  %115 = @func_1614() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %116 = cast(%var_1734, dtype="float64") /* ty=Tensor[(98), float64] */;
  %117 = reshape(%116, newshape=[7, 2, 7]) /* ty=Tensor[(7, 2, 7), float64] */;
  %118 = %115.0;
  %119 = @func_1643(%117) /* ty=Tensor[(7, 2, 7), float64] */;
  (%118, %119, %var_1734)
}

def @func_5457(%var_5419: Tensor[(2, 16, 2), float64]) -> (Tensor[(2, 16, 2), float64], Tensor[(16, 9, 14), float32], Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16], Tensor[(1815), float64]) {
  %120 = cast(%var_5419, dtype="float64") /* ty=Tensor[(2, 16, 2), float64] */;
  %121 = sin(%120) /* ty=Tensor[(2, 16, 2), float64] */;
  %122 = cast(%var_5419, dtype="float64") /* ty=Tensor[(2, 16, 2), float64] */;
  %123 = asin(%122) /* ty=Tensor[(2, 16, 2), float64] */;
  %124 = cast(%123, dtype="float64") /* ty=Tensor[(2, 16, 2), float64] */;
  %125 = shape_of(%121, dtype="int32") /* ty=Tensor[(3), int32] */;
  %126 = cast(%121, dtype="float64") /* ty=Tensor[(2, 16, 2), float64] */;
  %127 = dyn.reshape(%124, %125, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %128 = @func_2753() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %129 = @func_2753() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %130 = power(%126, %127) /* ty=Tensor[(2, 16, 2), float64] */;
  %131 = @func_2730() /* ty=Tensor[(16, 9, 14), float32] */;
  %132 = %128.0;
  %133 = %129.0;
  %134 = @func_4033() /* ty=Tensor[(1815), float64] */;
  (%130, %131, %132, %133, %134)
}

def @func_11083() -> Tensor[(8, 9, 7), float32] {
  %135 = @func_4116() /* ty=(Tensor[(8, 9, 7), float32],) */;
  %135.0
}

def @func_10590() -> Tensor[(96, 24), int32] {
  %136 = @func_10494() /* ty=(Tensor[(16, 9, 14), float32], Tensor[(4, 156), bool], Tensor[(96, 24), int32]) */;
  %136.2
}

def @func_839(%var_818: Tensor[(16, 12, 12), float64], %var_819: Tensor[(16, 12, 12), float64], %var_826: Tensor[(624), bool]) -> (Tensor[(16, 12, 12), float64], Tensor[(13, 16, 3), float32], Tensor[(624), bool]) {
  %137 = cast(%var_819, dtype="float64") /* ty=Tensor[(16, 12, 12), float64] */;
  %138 = shape_of(%var_818, dtype="int32") /* ty=Tensor[(3), int32] */;
  %139 = cast(%var_818, dtype="float64") /* ty=Tensor[(16, 12, 12), float64] */;
  %140 = dyn.reshape(%137, %138, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %141 = cast(%var_826, dtype="bool") /* ty=Tensor[(624), bool] */;
  %142 = reshape(%141, newshape=[13, 16, 3]) /* ty=Tensor[(13, 16, 3), bool] */;
  %143 = floor_divide(%139, %140) /* ty=Tensor[(16, 12, 12), float64] */;
  %144 = @func_129(%142) /* ty=Tensor[(13, 16, 3), float32] */;
  (%143, %144, %var_826)
}

def @func_12927() -> (Tensor[(9, 8, 11), float32],) {
  %145 = @func_6923() /* ty=(Tensor[(9, 8, 11), float32], Tensor[(1, 11, 14), int64], Tensor[(312, 2), bool], Tensor[(2304), float64]) */;
  %146 = %145.0;
  (%146,)
}

def @func_12908(%var_12885: Tensor[(1815), float32]) -> (Tensor[(16, 9, 14), uint8], Tensor[(9, 8, 11), float64], Tensor[(1815), float32], float32, Tensor[(9, 8, 11), bool]) {
  %147 = cast(%var_12885, dtype="float32") /* ty=Tensor[(1815), float32] */;
  %148 = reshape(%147, newshape=[1815]) /* ty=Tensor[(1815), float32] */;
  %149 = @func_11309(%148) /* ty=(Tensor[(9, 8, 11), float64], Tensor[(1815), uint32], Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16]) */;
  %150 = @func_6000() /* ty=(float32,) */;
  %151 = @func_9478() /* ty=(Tensor[(9, 8, 11), float64],) */;
  %152 = %151.0;
  %153 = @func_12237() /* ty=(Tensor[(98), float64], Tensor[(9, 8, 11), float32], Tensor[(9, 8, 11), float32]) */;
  %154 = %153.2;
  %155 = cast(%154, dtype="bool") /* ty=Tensor[(9, 8, 11), bool] */;
  %156 = shape_of(%152, dtype="int32") /* ty=Tensor[(3), int32] */;
  %157 = cast(%152, dtype="bool") /* ty=Tensor[(9, 8, 11), bool] */;
  %158 = dyn.reshape(%155, %156, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %159 = @func_11558() /* ty=Tensor[(16, 9, 14), uint8] */;
  %160 = %149.0;
  %161 = %150.0;
  %162 = less_equal(%157, %158) /* ty=Tensor[(9, 8, 11), bool] */;
  (%159, %160, %var_12885, %161, %162)
}

def @func_2805() -> Tensor[(1815), float64] {
  %163 = @func_2051() /* ty=(Tensor[(1815), float64],) */;
  %163.0
}

def @func_10621() -> (Tensor[(2, 3, 14), bool], float32) {
  %164 = cast(meta[relay.Constant][5] /* ty=Tensor[(2, 3, 14), float64] */, dtype="float64") /* ty=Tensor[(2, 3, 14), float64] */;
  %165 = log10(%164) /* ty=Tensor[(2, 3, 14), float64] */;
  %166 = cast(meta[relay.Constant][5] /* ty=Tensor[(2, 3, 14), float64] */, dtype="bool") /* ty=Tensor[(2, 3, 14), bool] */;
  %167 = shape_of(%165, dtype="int32") /* ty=Tensor[(3), int32] */;
  %168 = cast(%165, dtype="bool") /* ty=Tensor[(2, 3, 14), bool] */;
  %169 = dyn.reshape(%166, %167, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %170 = not_equal(%168, %169) /* ty=Tensor[(2, 3, 14), bool] */;
  %171 = @func_4574() /* ty=float32 */;
  (%170, %171)
}

def @func_14951() -> (Tensor[(13, 16, 3), uint32], Tensor[(9, 8, 11), float32], Tensor[(624), float32]) {
  %172 = @func_13533() /* ty=(Tensor[(13, 16, 3), int64], Tensor[(13, 16, 3), uint32]) */;
  %173 = @func_12927() /* ty=(Tensor[(9, 8, 11), float32],) */;
  %174 = %172.1;
  %175 = cast(%174, dtype="float32") /* ty=Tensor[(13, 16, 3), float32] */;
  %176 = reshape(%175, newshape=[624]) /* ty=Tensor[(624), float32] */;
  %177 = @func_12312(%176) /* ty=(Tensor[(2016), float32], Tensor[(10, 4), float32], Tensor[(1815), float32], Tensor[(1540), float64], Tensor[(4, 6, 11), float32], Tensor[(13, 16, 3), float64], Tensor[(624), float32], Tensor[(9, 8, 11), float64]) */;
  %178 = %173.0;
  %179 = %177.6;
  (%174, %178, %179)
}

def @main() -> Tensor[(11, 6, 1), float64] {
  %180 = cast(meta[relay.Constant][6] /* ty=Tensor[(11, 6, 1), float64] */, dtype="float64") /* ty=Tensor[(11, 6, 1), float64] */;
  rsqrt(%180) /* ty=Tensor[(11, 6, 1), float64] */
}

def @func_6923() -> (Tensor[(9, 8, 11), float32], Tensor[(1, 11, 14), int64], Tensor[(312, 2), bool], Tensor[(2304), float64]) {
  %181 = @func_4111() /* ty=(Tensor[(1815), float64], float32) */;
  %182 = %181.1;
  %183 = cast(%182, dtype="bool") /* ty=bool */;
  %184 = cast(meta[relay.Constant][7] /* ty=Tensor[(1, 11, 14), float32] */, dtype="bool") /* ty=Tensor[(1, 11, 14), bool] */;
  %185 = less_equal(%183, %184) /* ty=Tensor[(1, 11, 14), bool] */;
  %186 = cast(%185, dtype="int64") /* ty=Tensor[(1, 11, 14), int64] */;
  %187 = cast(%182, dtype="int64") /* ty=int64 */;
  %188 = cast(meta[relay.Constant][8] /* ty=Tensor[(2304), float64] */, dtype="float64") /* ty=Tensor[(2304), float64] */;
  %189 = reshape(%188, newshape=[2304]) /* ty=Tensor[(2304), float64] */;
  %190 = @func_2433(%189) /* ty=(Tensor[(1815), float32], Tensor[(11, 165), float32], Tensor[(2304), float64], Tensor[(312, 2), bool]) */;
  %191 = @func_6272() /* ty=Tensor[(9, 8, 11), float32] */;
  %192 = left_shift(%186, %187) /* ty=Tensor[(1, 11, 14), int64] */;
  %193 = %190.3;
  (%191, %192, %193, meta[relay.Constant][8] /* ty=Tensor[(2304), float64] */)
}

def @func_129(%var_68: Tensor[(13, 16, 3), bool]) -> Tensor[(13, 16, 3), float32] {
  %194 = cast(%var_68, dtype="float64") /* ty=Tensor[(13, 16, 3), float64] */;
  %195 = log2(%194) /* ty=Tensor[(13, 16, 3), float64] */;
  %196 = cast(meta[relay.Constant][9] /* ty=Tensor[(13, 16, 3), bool] */, dtype="bool") /* ty=Tensor[(13, 16, 3), bool] */;
  %197 = shape_of(%var_68, dtype="int32") /* ty=Tensor[(3), int32] */;
  %198 = cast(%var_68, dtype="bool") /* ty=Tensor[(13, 16, 3), bool] */;
  %199 = dyn.reshape(%196, %197, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %200 = logical_or(%198, %199) /* ty=Tensor[(13, 16, 3), bool] */;
  %201 = cast(%200, dtype="float32") /* ty=Tensor[(13, 16, 3), float32] */;
  %202 = shape_of(%195, dtype="int32") /* ty=Tensor[(3), int32] */;
  %203 = cast(%195, dtype="float32") /* ty=Tensor[(13, 16, 3), float32] */;
  %204 = dyn.reshape(%201, %202, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%203, %204) /* ty=Tensor[(13, 16, 3), float32] */
}

def @func_9022() -> (Tensor[(98), float64], Tensor[(96, 24), uint32]) {
  %205 = @func_7553() /* ty=(Tensor[(98), float64],) */;
  %206 = @func_3986() /* ty=Tensor[(96, 24), float32] */;
  %207 = cast(%206, dtype="float32") /* ty=Tensor[(96, 24), float32] */;
  %208 = log2(%207) /* ty=Tensor[(96, 24), float32] */;
  %209 = cast(%206, dtype="uint32") /* ty=Tensor[(96, 24), uint32] */;
  %210 = shape_of(%208, dtype="int32") /* ty=Tensor[(2), int32] */;
  %211 = cast(%208, dtype="uint32") /* ty=Tensor[(96, 24), uint32] */;
  %212 = dyn.reshape(%209, %210, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %213 = %205.0;
  %214 = bitwise_xor(%211, %212) /* ty=Tensor[(96, 24), uint32] */;
  (%213, %214)
}

def @func_10286() -> (Tensor[(98), float64], Tensor[(9, 8, 11), float32], Tensor[(98), float64], Tensor[(13, 16, 3), float32], Tensor[(576), float64], Tensor[(13, 16, 3), float32]) {
  %215 = @func_7553() /* ty=(Tensor[(98), float64],) */;
  %216 = @func_9057() /* ty=(Tensor[(9, 8, 11), float32], Tensor[(96, 24), float64]) */;
  %217 = @func_9894() /* ty=(Tensor[(98), float64], Tensor[(1815), float64]) */;
  %218 = cast(meta[relay.Constant][10] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
  %219 = cast(meta[relay.Constant][10] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
  %220 = reshape(%218, newshape=[12, 4, 12]) /* ty=Tensor[(12, 4, 12), float64] */;
  %221 = reshape(%219, newshape=[12, 4, 12]) /* ty=Tensor[(12, 4, 12), float64] */;
  %222 = @func_6032(%220, %221) /* ty=(Tensor[(13, 16, 3), float32], Tensor[(312, 2), bool], Tensor[(12, 4, 12), uint64]) */;
  %223 = @func_9255() /* ty=(Tensor[(13, 16, 3), float32], Tensor[(9, 8, 11), int16], Tensor[(98), float64]) */;
  %224 = %215.0;
  %225 = %216.0;
  %226 = %217.0;
  %227 = %222.0;
  %228 = %223.0;
  (%224, %225, %226, %227, meta[relay.Constant][10] /* ty=Tensor[(576), float64] */, %228)
}

def @func_1614() -> (Tensor[(9, 8, 11), int16],) {
  %229 = cast(meta[relay.Constant][12] /* ty=Tensor[(9, 8, 11), int16] */, dtype="int16") /* ty=Tensor[(9, 8, 11), int16] */;
  %230 = shape_of(meta[relay.Constant][11] /* ty=Tensor[(9, 8, 11), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %231 = cast(meta[relay.Constant][11] /* ty=Tensor[(9, 8, 11), int16] */, dtype="int16") /* ty=Tensor[(9, 8, 11), int16] */;
  %232 = dyn.reshape(%229, %230, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %233 = bitwise_or(%231, %232) /* ty=Tensor[(9, 8, 11), int16] */;
  (%233,)
}

def @func_4705(%var_4659: Tensor[(8, 13, 12), float32], %var_4672: Tensor[(624), bool]) -> (Tensor[(8, 13, 12), float64], Tensor[(13, 16, 3), float32], Tensor[(624), bool], Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16], Tensor[(40), float32]) {
  %234 = cast(%var_4659, dtype="float32") /* ty=Tensor[(8, 13, 12), float32] */;
  %235 = sin(%234) /* ty=Tensor[(8, 13, 12), float32] */;
  %236 = cast(%235, dtype="float64") /* ty=Tensor[(8, 13, 12), float64] */;
  %237 = cast(%var_4672, dtype="bool") /* ty=Tensor[(624), bool] */;
  %238 = reshape(%237, newshape=[13, 16, 3]) /* ty=Tensor[(13, 16, 3), bool] */;
  %239 = @func_4510() /* ty=(Tensor[(1815), float32], Tensor[(9, 8, 11), int16]) */;
  %240 = cast(meta[relay.Constant][13] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
  %241 = reshape(%240, newshape=[40]) /* ty=Tensor[(40), float32] */;
  %242 = @func_2185(%241) /* ty=(Tensor[(9, 8, 11), int16], Tensor[(4, 10, ?), int32]) */;
  %243 = acosh(%236) /* ty=Tensor[(8, 13, 12), float64] */;
  %244 = @func_129(%238) /* ty=Tensor[(13, 16, 3), float32] */;
  %245 = %239.1;
  %246 = %242.0;
  (%243, %244, %var_4672, %245, %246, meta[relay.Constant][13] /* ty=Tensor[(40), float32] */)
}

def @func_13018() -> (Tensor[(1815), float64], Tensor[(9, 8, 11), int16]) {
  %247 = @func_4111() /* ty=(Tensor[(1815), float64], float32) */;
  %248 = @func_7206() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %249 = %247.0;
  %250 = %248.0;
  (%249, %250)
}

def @func_6150() -> Tensor[(624), bool] {
  %251 = @func_3114() /* ty=(float32, Tensor[(13, 16, 3), float32], Tensor[(624), bool]) */;
  %251.2
}

def @func_11243() -> (Tensor[(9, 8, 11), int16],) {
  %252 = @func_7507() /* ty=(Tensor[(16, 9, 14), float32], Tensor[(9, 8, 11), int16]) */;
  %253 = %252.1;
  (%253,)
}

def @func_14572() -> (Tensor[(9, 8, 11), float32],) {
  %254 = @func_6272() /* ty=Tensor[(9, 8, 11), float32] */;
  (%254,)
}

def @func_6353() -> (float32,) {
  %255 = @func_4827() /* ty=float32 */;
  (%255,)
}

def @func_13922() -> (Tensor[(9, 8, 11), int16], Tensor[(624), bool], Tensor[(1815), float64]) {
  %256 = @func_5159() /* ty=(Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16]) */;
  %257 = @func_5542() /* ty=(Tensor[(9, 8, 11), float32], Tensor[(1815), float64]) */;
  %258 = %256.0;
  %259 = @func_6150() /* ty=Tensor[(624), bool] */;
  %260 = %257.1;
  (%258, %259, %260)
}

def @func_12341() -> (Tensor[(16, 9, 14), int8], Tensor[(16, 9, 14), float32]) {
  %261 = @func_7083() /* ty=(Tensor[(16, 9, 14), int8], Tensor[(1815), float64], Tensor[(1815), float32]) */;
  %262 = %261.0;
  %263 = @func_2730() /* ty=Tensor[(16, 9, 14), float32] */;
  (%262, %263)
}

def @func_14166() -> (Tensor[(1815), float64],) {
  %264 = @func_5542() /* ty=(Tensor[(9, 8, 11), float32], Tensor[(1815), float64]) */;
  %265 = %264.1;
  (%265,)
}

def @func_1686() -> (Tensor[(9, 8, 11), int16],) {
  %266 = @func_1614() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %267 = %266.0;
  (%267,)
}

def @func_12583() -> (float32,) {
  %268 = @func_3027() /* ty=(float32,) */;
  %269 = %268.0;
  (%269,)
}

def @func_1583(%var_1569: Tensor[(16, 9, 14), float32]) -> Tensor[(16, 9, 14), float32] {
  %270 = cast(%var_1569, dtype="float32") /* ty=Tensor[(16, 9, 14), float32] */;
  sin(%270) /* ty=Tensor[(16, 9, 14), float32] */
}

def @func_1690() -> Tensor[(9, 8, 11), int16] {
  %271 = @func_1614() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %271.0
}

def @func_11626(%var_11611: Tensor[(624, 1), bool]) -> (Tensor[(16, 12, 12), float64], Tensor[(4, 576), float64], Tensor[(624, 40), float64]) {
  %272 = cast(meta[relay.Constant][14] /* ty=Tensor[(4, 576), float64] */, dtype="float64") /* ty=Tensor[(4, 576), float64] */;
  %273 = cast(meta[relay.Constant][14] /* ty=Tensor[(4, 576), float64] */, dtype="float64") /* ty=Tensor[(4, 576), float64] */;
  %274 = cast(%var_11611, dtype="bool") /* ty=Tensor[(624, 1), bool] */;
  %275 = reshape(%272, newshape=[16, 12, 12]) /* ty=Tensor[(16, 12, 12), float64] */;
  %276 = reshape(%273, newshape=[16, 12, 12]) /* ty=Tensor[(16, 12, 12), float64] */;
  %277 = reshape(%274, newshape=[624]) /* ty=Tensor[(624), bool] */;
  %278 = @func_839(%275, %276, %277) /* ty=(Tensor[(16, 12, 12), float64], Tensor[(13, 16, 3), float32], Tensor[(624), bool]) */;
  %279 = @func_7265() /* ty=(Tensor[(40), float32],) */;
  %280 = %279.0;
  %281 = cast(%var_11611, dtype="float64") /* ty=Tensor[(624, 1), float64] */;
  %282 = cast(%280, dtype="float64") /* ty=Tensor[(40), float64] */;
  %283 = %278.0;
  %284 = divide(%281, %282) /* ty=Tensor[(624, 40), float64] */;
  (%283, meta[relay.Constant][14] /* ty=Tensor[(4, 576), float64] */, %284)
}

def @func_11983() -> (Tensor[(16, 9, 14), float32],) {
  %285 = @func_5864() /* ty=(Tensor[(16, 9, 14), float32], Tensor[(40), float32], Tensor[(20, 2), float32], Tensor[(9, 8, 11), int16], Tensor[(11, 165), float32], Tensor[(16, 144), float64]) */;
  %286 = %285.0;
  (%286,)
}

def @func_7553() -> (Tensor[(98), float64],) {
  %287 = @func_2996() /* ty=(Tensor[(1815), float64], float32, float32, Tensor[(7, 2, 7), float64], Tensor[(98), float64], Tensor[(96, 24), int32]) */;
  %288 = %287.4;
  (%288,)
}

def @func_9674(%var_9661: Tensor[(2, 1152), float64]) -> (Tensor[(13, 16, 3), float32], Tensor[(1815), float32], Tensor[(2, 1152), float64]) {
  %289 = @func_7370() /* ty=(Tensor[(96, 24), float32], Tensor[(13, 16, 3), float32], Tensor[(624), bool]) */;
  %290 = cast(%var_9661, dtype="float64") /* ty=Tensor[(2, 1152), float64] */;
  %291 = reshape(%290, newshape=[2304]) /* ty=Tensor[(2304), float64] */;
  %292 = @func_3541(%291) /* ty=(Tensor[(9, 8, 11), float64], Tensor[(1815), float32], Tensor[(1815), float32], Tensor[(2304), float64], Tensor[(16, 9, 14), float32]) */;
  %293 = %289.1;
  %294 = %292.1;
  (%293, %294, %var_9661)
}

def @func_12513() -> (Tensor[(96, 24), float32],) {
  %295 = @func_7370() /* ty=(Tensor[(96, 24), float32], Tensor[(13, 16, 3), float32], Tensor[(624), bool]) */;
  %296 = %295.0;
  (%296,)
}

def @func_5159() -> (Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16]) {
  %297 = @func_1873() /* ty=(Tensor[(9, 8, 11), float32], Tensor[(16, 9, 14), float32], Tensor[(2016), float32], Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16]) */;
  %298 = @func_1614() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %299 = %297.4;
  %300 = %298.0;
  (%299, %300)
}

def @func_14318() -> (float32,) {
  %301 = @func_6000() /* ty=(float32,) */;
  %302 = %301.0;
  (%302,)
}

def @func_9555() -> Tensor[(98), float64] {
  %303 = @func_7553() /* ty=(Tensor[(98), float64],) */;
  %303.0
}

def @func_1932() -> (Tensor[(9, 8, 11), int16], Tensor[(16, 10, 5), float64], float32, Tensor[(1815), float32], Tensor[(9, 8, 11), float64]) {
  %304 = @func_1686() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %305 = cast(-6.78501f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %306 = cast(meta[relay.Constant][15] /* ty=Tensor[(1815), float32] */, dtype="float32") /* ty=Tensor[(1815), float32] */;
  %307 = reshape(%305, newshape=[]) /* ty=float32 */;
  %308 = reshape(%306, newshape=[1815]) /* ty=Tensor[(1815), float32] */;
  %309 = @func_1335(%307, %308) /* ty=(Tensor[(16, 10, 5), bool], Tensor[(11, 15, 11), float32], float32, Tensor[(1815), float32], Tensor[(16, 10, 5), float64]) */;
  %310 = @func_1614() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %311 = %310.0;
  %312 = cast(%311, dtype="float32") /* ty=Tensor[(9, 8, 11), float32] */;
  %313 = exp(%312) /* ty=Tensor[(9, 8, 11), float32] */;
  %314 = cast(%313, dtype="float32") /* ty=Tensor[(9, 8, 11), float32] */;
  %315 = cosh(%314) /* ty=Tensor[(9, 8, 11), float32] */;
  %316 = cast(%315, dtype="float64") /* ty=Tensor[(9, 8, 11), float64] */;
  %317 = %304.0;
  %318 = %309.4;
  %319 = sin(%316) /* ty=Tensor[(9, 8, 11), float64] */;
  (%317, %318, -6.78501f /* ty=float32 */, meta[relay.Constant][15] /* ty=Tensor[(1815), float32] */, %319)
}

def @func_5303() -> float32 {
  %320 = @func_3027() /* ty=(float32,) */;
  %320.0
}

def @func_9894() -> (Tensor[(98), float64], Tensor[(1815), float64]) {
  %321 = @func_4111() /* ty=(Tensor[(1815), float64], float32) */;
  %322 = @func_9086() /* ty=Tensor[(98), float64] */;
  %323 = %321.0;
  (%322, %323)
}

def @func_8667() -> (Tensor[(9, 8, 11), float32], Tensor[(9, 8, 11), float64], Tensor[(13, 16, 3), float32]) {
  %324 = @func_7025() /* ty=(Tensor[(1815), float64], Tensor[(9, 8, 11), float32]) */;
  %325 = @func_2132() /* ty=(Tensor[(9, 8, 11), float64], Tensor[(1815), float64], Tensor[(1815), float64]) */;
  %326 = @func_7578() /* ty=(Tensor[(13, 16, 3), float32], Tensor[(13, 16, 3), float64], Tensor[(9, 8, 11), int16], Tensor[(13, 16, 3), float32]) */;
  %327 = %326.3;
  %328 = cast(%327, dtype="float32") /* ty=Tensor[(13, 16, 3), float32] */;
  %329 = %324.1;
  %330 = %325.0;
  %331 = tan(%328) /* ty=Tensor[(13, 16, 3), float32] */;
  (%329, %330, %331)
}

def @func_2030(%var_2002: Tensor[(2304), float64], %var_2003: Tensor[(2, 312), bool], %var_2027: Tensor[(11, 165), float32]) -> (Tensor[(9, 8, 11), int16], Tensor[(13, 16, 3), float32], Tensor[(2304), float64], Tensor[(2, 312), bool], float32, float32, Tensor[(11, 165), float32]) {
  %332 = @func_1614() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %333 = cast(%var_2002, dtype="float64") /* ty=Tensor[(2304), float64] */;
  %334 = cast(%var_2002, dtype="float64") /* ty=Tensor[(2304), float64] */;
  %335 = cast(%var_2003, dtype="bool") /* ty=Tensor[(2, 312), bool] */;
  %336 = reshape(%333, newshape=[16, 12, 12]) /* ty=Tensor[(16, 12, 12), float64] */;
  %337 = reshape(%334, newshape=[16, 12, 12]) /* ty=Tensor[(16, 12, 12), float64] */;
  %338 = reshape(%335, newshape=[624]) /* ty=Tensor[(624), bool] */;
  %339 = @func_839(%336, %337, %338) /* ty=(Tensor[(16, 12, 12), float64], Tensor[(13, 16, 3), float32], Tensor[(624), bool]) */;
  %340 = cast(8.34497f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %341 = cast(%var_2027, dtype="float32") /* ty=Tensor[(11, 165), float32] */;
  %342 = reshape(%340, newshape=[]) /* ty=float32 */;
  %343 = reshape(%341, newshape=[1815]) /* ty=Tensor[(1815), float32] */;
  %344 = @func_1812(%342, %343) /* ty=(Tensor[(9, 8, 11), int16], float32, float32, Tensor[(1815), float32]) */;
  %345 = %332.0;
  %346 = %339.1;
  %347 = %344.1;
  (%345, %346, %var_2002, %var_2003, %347, 8.34497f /* ty=float32 */, %var_2027)
}

def @func_8162(%var_8133: Tensor[(12, 12, 2), float64], %var_8134: Tensor[(12, 12, 2), float64]) -> Tensor[(12, 12, 2), float64] {
  %348 = cast(%var_8134, dtype="float64") /* ty=Tensor[(12, 12, 2), float64] */;
  %349 = shape_of(%var_8133, dtype="int32") /* ty=Tensor[(3), int32] */;
  %350 = cast(%var_8133, dtype="float64") /* ty=Tensor[(12, 12, 2), float64] */;
  %351 = dyn.reshape(%348, %349, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  mod(%350, %351) /* ty=Tensor[(12, 12, 2), float64] */
}

def @func_7206() -> (Tensor[(9, 8, 11), int16],) {
  %352 = @func_5159() /* ty=(Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16]) */;
  %353 = %352.0;
  (%353,)
}

def @func_8820(%var_8800: Tensor[(7, 8, 7), float64]) -> (Tensor[(7, 8, 7), float64], Tensor[(16, 9, 14), int8], Tensor[(1815), float64]) {
  %354 = cast(%var_8800, dtype="float64") /* ty=Tensor[(7, 8, 7), float64] */;
  %355 = @func_7083() /* ty=(Tensor[(16, 9, 14), int8], Tensor[(1815), float64], Tensor[(1815), float32]) */;
  %356 = @func_7083() /* ty=(Tensor[(16, 9, 14), int8], Tensor[(1815), float64], Tensor[(1815), float32]) */;
  %357 = sin(%354) /* ty=Tensor[(7, 8, 7), float64] */;
  %358 = %355.0;
  %359 = %356.1;
  (%357, %358, %359)
}

def @func_12312(%var_12294: Tensor[(624), float32]) -> (Tensor[(2016), float32], Tensor[(10, 4), float32], Tensor[(1815), float32], Tensor[(1540), float64], Tensor[(4, 6, 11), float32], Tensor[(13, 16, 3), float64], Tensor[(624), float32], Tensor[(9, 8, 11), float64]) {
  %360 = @func_2564() /* ty=(Tensor[(1815), float64], Tensor[(16, 9, 14), float32], Tensor[(2016), float32], Tensor[(312, 2), bool], Tensor[(96, 24), int32], Tensor[(16, 9, 14), float32]) */;
  %361 = cast(meta[relay.Constant][16] /* ty=Tensor[(10, 4), float32] */, dtype="float32") /* ty=Tensor[(10, 4), float32] */;
  %362 = cast(meta[relay.Constant][17] /* ty=Tensor[(1815), float32] */, dtype="float32") /* ty=Tensor[(1815), float32] */;
  %363 = cast(meta[relay.Constant][18] /* ty=Tensor[(1540), float64] */, dtype="float64") /* ty=Tensor[(1540), float64] */;
  %364 = reshape(%361, newshape=[10, 4]) /* ty=Tensor[(10, 4), float32] */;
  %365 = reshape(%362, newshape=[1815]) /* ty=Tensor[(1815), float32] */;
  %366 = reshape(%363, newshape=[1540]) /* ty=Tensor[(1540), float64] */;
  %367 = @func_8269(%364, %365, %366) /* ty=(Tensor[(4, 6, 11), float64], Tensor[(4, 10, 1), float32], Tensor[(10, 4), float32], Tensor[(14, 11, 10), float64], Tensor[(1815), float32], Tensor[(1540), float64]) */;
  %368 = %367.0;
  %369 = cast(%368, dtype="float32") /* ty=Tensor[(4, 6, 11), float32] */;
  %370 = cast(%var_12294, dtype="float32") /* ty=Tensor[(624), float32] */;
  %371 = reshape(%370, newshape=[13, 16, 3]) /* ty=Tensor[(13, 16, 3), float32] */;
  %372 = @func_9478() /* ty=(Tensor[(9, 8, 11), float64],) */;
  %373 = %360.2;
  %374 = atan(%369) /* ty=Tensor[(4, 6, 11), float32] */;
  %375 = @func_3631(%371) /* ty=Tensor[(13, 16, 3), float64] */;
  %376 = %372.0;
  (%373, meta[relay.Constant][16] /* ty=Tensor[(10, 4), float32] */, meta[relay.Constant][17] /* ty=Tensor[(1815), float32] */, meta[relay.Constant][18] /* ty=Tensor[(1540), float64] */, %374, %375, %var_12294, %376)
}

def @func_12614() -> Tensor[(9, 8, 11), float32] {
  %377 = @func_6817() /* ty=(Tensor[(9, 8, 11), float32], Tensor[(9, 8, 11), float64], Tensor[(9, 8, 11), float64]) */;
  %377.0
}

def @func_14760() -> (Tensor[(9, 8, 11), float32], Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16]) {
  %378 = @func_9057() /* ty=(Tensor[(9, 8, 11), float32], Tensor[(96, 24), float64]) */;
  %379 = @func_8109() /* ty=(float32, Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16], float32, Tensor[(16, 9, 14), float32], Tensor[(2016), float32]) */;
  %380 = %378.0;
  %381 = %379.1;
  %382 = @func_9779() /* ty=Tensor[(9, 8, 11), int16] */;
  (%380, %381, %382)
}

def @func_15017() -> (Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), float64], Tensor[(4, 10, 1), float32], Tensor[(40), float32]) {
  %383 = @func_11870() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %384 = cast(meta[relay.Constant][19] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
  %385 = reshape(%384, newshape=[4, 10, 1]) /* ty=Tensor[(4, 10, 1), float32] */;
  %386 = @func_1756(%385) /* ty=(Tensor[(4, 10, 1), float32],) */;
  %387 = %383.0;
  %388 = @func_7994() /* ty=Tensor[(9, 8, 11), float64] */;
  %389 = %386.0;
  (%387, %388, %389, meta[relay.Constant][19] /* ty=Tensor[(40), float32] */)
}

def @func_2433(%var_2429: Tensor[(2304), float64]) -> (Tensor[(1815), float32], Tensor[(11, 165), float32], Tensor[(2304), float64], Tensor[(312, 2), bool]) {
  %390 = @func_2051() /* ty=(Tensor[(1815), float64],) */;
  %391 = %390.0;
  %392 = cast(%391, dtype="float32") /* ty=Tensor[(1815), float32] */;
  %393 = cast(%var_2429, dtype="float64") /* ty=Tensor[(2304), float64] */;
  %394 = cast(meta[relay.Constant][20] /* ty=Tensor[(312, 2), bool] */, dtype="bool") /* ty=Tensor[(312, 2), bool] */;
  %395 = cast(%391, dtype="float32") /* ty=Tensor[(1815), float32] */;
  %396 = reshape(%393, newshape=[2304]) /* ty=Tensor[(2304), float64] */;
  %397 = reshape(%394, newshape=[2, 312]) /* ty=Tensor[(2, 312), bool] */;
  %398 = reshape(%395, newshape=[11, 165]) /* ty=Tensor[(11, 165), float32] */;
  %399 = @func_2030(%396, %397, %398) /* ty=(Tensor[(9, 8, 11), int16], Tensor[(13, 16, 3), float32], Tensor[(2304), float64], Tensor[(2, 312), bool], float32, float32, Tensor[(11, 165), float32]) */;
  %400 = rsqrt(%392) /* ty=Tensor[(1815), float32] */;
  %401 = %399.6;
  (%400, %401, %var_2429, meta[relay.Constant][20] /* ty=Tensor[(312, 2), bool] */)
}

def @func_5049(%var_5040: Tensor[(2304), float64]) -> (Tensor[(98), float64], Tensor[(312, 2), bool], Tensor[(2304), float64], float32) {
  %402 = @func_2996() /* ty=(Tensor[(1815), float64], float32, float32, Tensor[(7, 2, 7), float64], Tensor[(98), float64], Tensor[(96, 24), int32]) */;
  %403 = %402.4;
  %404 = cast(%403, dtype="float64") /* ty=Tensor[(98), float64] */;
  %405 = cast(%var_5040, dtype="float64") /* ty=Tensor[(2304), float64] */;
  %406 = reshape(%405, newshape=[2304]) /* ty=Tensor[(2304), float64] */;
  %407 = @func_2433(%406) /* ty=(Tensor[(1815), float32], Tensor[(11, 165), float32], Tensor[(2304), float64], Tensor[(312, 2), bool]) */;
  %408 = log(%404) /* ty=Tensor[(98), float64] */;
  %409 = %407.3;
  %410 = @func_4574() /* ty=float32 */;
  (%408, %409, %var_5040, %410)
}

def @func_11022() -> (Tensor[(40), float32], Tensor[(98, 4), float64], Tensor[(392), float64], Tensor[(98, 1), float64]) {
  %411 = @func_7265() /* ty=(Tensor[(40), float32],) */;
  %412 = cast(meta[relay.Constant][21] /* ty=Tensor[(392), float64] */, dtype="float64") /* ty=Tensor[(392), float64] */;
  %413 = cast(meta[relay.Constant][22] /* ty=Tensor[(98, 1), bool] */, dtype="bool") /* ty=Tensor[(98, 1), bool] */;
  %414 = reshape(%412, newshape=[98, 4]) /* ty=Tensor[(98, 4), float64] */;
  %415 = reshape(%413, newshape=[98]) /* ty=Tensor[(98), bool] */;
  %416 = @func_10439(%414, %415) /* ty=(Tensor[(98, 4), float64], Tensor[(11, 165), uint64], Tensor[(9, 8, 11), float32], Tensor[(98), uint8], Tensor[(13, 16, 3), float32], Tensor[(98), uint8]) */;
  %417 = cast(meta[relay.Constant][22] /* ty=Tensor[(98, 1), bool] */, dtype="float64") /* ty=Tensor[(98, 1), float64] */;
  %418 = %411.0;
  %419 = %416.0;
  %420 = asin(%417) /* ty=Tensor[(98, 1), float64] */;
  (%418, %419, meta[relay.Constant][21] /* ty=Tensor[(392), float64] */, %420)
}

def @func_11558() -> Tensor[(16, 9, 14), uint8] {
  %421 = @func_5109() /* ty=(Tensor[(16, 9, 14), float32], Tensor[(16, 9, 14), uint8]) */;
  %421.1
}

def @func_3986() -> Tensor[(96, 24), float32] {
  %422 = @func_2996() /* ty=(Tensor[(1815), float64], float32, float32, Tensor[(7, 2, 7), float64], Tensor[(98), float64], Tensor[(96, 24), int32]) */;
  %423 = %422.5;
  %424 = cast(meta[relay.Constant][23] /* ty=Tensor[(96, 24), int32] */, dtype="float32") /* ty=Tensor[(96, 24), float32] */;
  %425 = shape_of(%423, dtype="int32") /* ty=Tensor[(2), int32] */;
  %426 = cast(%423, dtype="float32") /* ty=Tensor[(96, 24), float32] */;
  %427 = dyn.reshape(%424, %425, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  floor_mod(%426, %427) /* ty=Tensor[(96, 24), float32] */
}

def @func_9705() -> (Tensor[(98), float64], Tensor[(1815), float32], Tensor[(2304), float64], Tensor[(1815), float64]) {
  %428 = cast(meta[relay.Constant][24] /* ty=Tensor[(2304), float64] */, dtype="float64") /* ty=Tensor[(2304), float64] */;
  %429 = reshape(%428, newshape=[2304]) /* ty=Tensor[(2304), float64] */;
  %430 = @func_3541(%429) /* ty=(Tensor[(9, 8, 11), float64], Tensor[(1815), float32], Tensor[(1815), float32], Tensor[(2304), float64], Tensor[(16, 9, 14), float32]) */;
  %431 = @func_4747() /* ty=(Tensor[(9, 8, 11), float64], Tensor[(1815), float64]) */;
  %432 = @func_9555() /* ty=Tensor[(98), float64] */;
  %433 = %430.2;
  %434 = %431.1;
  (%432, %433, meta[relay.Constant][24] /* ty=Tensor[(2304), float64] */, %434)
}

def @func_11729(%var_11718: Tensor[(96, 24), float32]) -> (Tensor[(96, 24), float64],) {
  %435 = @func_7113() /* ty=(Tensor[(4, 6, 11), float64], Tensor[(96, 24), float32]) */;
  %436 = %435.1;
  %437 = cast(%var_11718, dtype="float64") /* ty=Tensor[(96, 24), float64] */;
  %438 = shape_of(%436, dtype="int32") /* ty=Tensor[(2), int32] */;
  %439 = cast(%436, dtype="float64") /* ty=Tensor[(96, 24), float64] */;
  %440 = dyn.reshape(%437, %438, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %441 = divide(%439, %440) /* ty=Tensor[(96, 24), float64] */;
  (%441,)
}

def @func_8051() -> Tensor[(16, 9, 14), float64] {
  %442 = @func_2564() /* ty=(Tensor[(1815), float64], Tensor[(16, 9, 14), float32], Tensor[(2016), float32], Tensor[(312, 2), bool], Tensor[(96, 24), int32], Tensor[(16, 9, 14), float32]) */;
  %443 = %442.1;
  %444 = cast(%443, dtype="float64") /* ty=Tensor[(16, 9, 14), float64] */;
  log10(%444) /* ty=Tensor[(16, 9, 14), float64] */
}

def @func_10951() -> (Tensor[(9, 8, 11), float64],) {
  %445 = @func_4055() /* ty=Tensor[(9, 8, 11), float64] */;
  (%445,)
}

def @func_12237() -> (Tensor[(98), float64], Tensor[(9, 8, 11), float32], Tensor[(9, 8, 11), float32]) {
  %446 = @func_3156() /* ty=(Tensor[(9, 8, 11), float32],) */;
  %447 = @func_9086() /* ty=Tensor[(98), float64] */;
  %448 = %446.0;
  %449 = @func_2484() /* ty=Tensor[(9, 8, 11), float32] */;
  (%447, %448, %449)
}

def @func_8204() -> Tensor[(9, 8, 11), float32] {
  %450 = @func_6817() /* ty=(Tensor[(9, 8, 11), float32], Tensor[(9, 8, 11), float64], Tensor[(9, 8, 11), float64]) */;
  %450.0
}

def @func_14503() -> Tensor[(9, 8, 11), int16] {
  %451 = @func_5159() /* ty=(Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16]) */;
  %451.0
}

def @func_12097(%var_12010: Tensor[(96, 24), float32], %var_12056: Tensor[(1248), float32], %var_12092: Tensor[(96, 24), float64]) -> (Tensor[(96, 24), bool], Tensor[(4, 6, 11), float64], Tensor[(1248), float32], Tensor[(4, 10, ?), int64], Tensor[(40), float32], Tensor[(96, 24), uint16]) {
  %452 = @func_7113() /* ty=(Tensor[(4, 6, 11), float64], Tensor[(96, 24), float32]) */;
  %453 = %452.1;
  %454 = cast(%var_12010, dtype="bool") /* ty=Tensor[(96, 24), bool] */;
  %455 = shape_of(%453, dtype="int32") /* ty=Tensor[(2), int32] */;
  %456 = cast(%453, dtype="bool") /* ty=Tensor[(96, 24), bool] */;
  %457 = dyn.reshape(%454, %455, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %458 = logical_and(%456, %457) /* ty=Tensor[(96, 24), bool] */;
  %459 = cast(%453, dtype="bool") /* ty=Tensor[(96, 24), bool] */;
  %460 = shape_of(%458, dtype="int32") /* ty=Tensor[(2), int32] */;
  %461 = cast(%458, dtype="bool") /* ty=Tensor[(96, 24), bool] */;
  %462 = dyn.reshape(%459, %460, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %463 = cast(%var_12056, dtype="float32") /* ty=Tensor[(1248), float32] */;
  %464 = reshape(%463, newshape=[104, 12]) /* ty=Tensor[(104, 12), float32] */;
  %465 = @func_11896(%464) /* ty=(Tensor[(4, 6, 11), float64], Tensor[(9, 8, 11), float64], Tensor[(9, 8, 11), int16], Tensor[(624), bool], Tensor[(104, 12), bool]) */;
  %466 = cast(meta[relay.Constant][25] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
  %467 = reshape(%466, newshape=[40]) /* ty=Tensor[(40), float32] */;
  %468 = @func_8611(%467) /* ty=(Tensor[(9, 8, 11), int16], Tensor[(16, 9, 14), int8], Tensor[(4, 6, 11), float64], Tensor[(9, 8, 11), int16], Tensor[(4, 10, ?), int64]) */;
  %469 = cast(%453, dtype="float32") /* ty=Tensor[(96, 24), float32] */;
  %470 = sigmoid(%469) /* ty=Tensor[(96, 24), float32] */;
  %471 = cast(%453, dtype="float32") /* ty=Tensor[(96, 24), float32] */;
  %472 = shape_of(%470, dtype="int32") /* ty=Tensor[(2), int32] */;
  %473 = cast(%470, dtype="float32") /* ty=Tensor[(96, 24), float32] */;
  %474 = dyn.reshape(%471, %472, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %475 = power(%473, %474) /* ty=Tensor[(96, 24), float32] */;
  %476 = cast(%475, dtype="float64") /* ty=Tensor[(96, 24), float64] */;
  %477 = log(%476) /* ty=Tensor[(96, 24), float64] */;
  %478 = cast(%var_12092, dtype="uint16") /* ty=Tensor[(96, 24), uint16] */;
  %479 = shape_of(%477, dtype="int32") /* ty=Tensor[(2), int32] */;
  %480 = cast(%477, dtype="uint16") /* ty=Tensor[(96, 24), uint16] */;
  %481 = dyn.reshape(%478, %479, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %482 = less(%461, %462) /* ty=Tensor[(96, 24), bool] */;
  %483 = %465.0;
  %484 = %468.4;
  %485 = bitwise_or(%480, %481) /* ty=Tensor[(96, 24), uint16] */;
  (%482, %483, %var_12056, %484, meta[relay.Constant][25] /* ty=Tensor[(40), float32] */, %485)
}

def @func_9478() -> (Tensor[(9, 8, 11), float64],) {
  %486 = @func_2860() /* ty=(Tensor[(9, 8, 11), float64], Tensor[(9, 8, 11), int16]) */;
  %487 = %486.0;
  (%487,)
}

def @func_6667(%var_6623: Tensor[(2304), float64], %var_6647: Tensor[(13, 16, 3), float32]) -> (Tensor[(2304), float64], Tensor[(2304), float64], Tensor[(9, 8, 11), int16], Tensor[(16, 9, 14), uint8], Tensor[(13, 16, 3), int16]) {
  %488 = cast(%var_6623, dtype="float64") /* ty=Tensor[(2304), float64] */;
  %489 = reshape(%488, newshape=[2304]) /* ty=Tensor[(2304), float64] */;
  %490 = @func_2433(%489) /* ty=(Tensor[(1815), float32], Tensor[(11, 165), float32], Tensor[(2304), float64], Tensor[(312, 2), bool]) */;
  %491 = @func_5159() /* ty=(Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16]) */;
  %492 = @func_6072() /* ty=(Tensor[(13, 16, 3), float32],) */;
  %493 = %492.0;
  %494 = cast(%var_6647, dtype="int16") /* ty=Tensor[(13, 16, 3), int16] */;
  %495 = shape_of(%493, dtype="int32") /* ty=Tensor[(3), int32] */;
  %496 = cast(%493, dtype="int16") /* ty=Tensor[(13, 16, 3), int16] */;
  %497 = dyn.reshape(%494, %495, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %498 = %490.2;
  %499 = %491.0;
  %500 = @func_5354() /* ty=Tensor[(16, 9, 14), uint8] */;
  %501 = add(%496, %497) /* ty=Tensor[(13, 16, 3), int16] */;
  (%498, %var_6623, %499, %500, %501)
}

def @func_3578() -> Tensor[(13, 16, 3), float32] {
  %502 = @func_3413() /* ty=(Tensor[(13, 16, 3), float32],) */;
  %502.0
}

def @func_4338() -> (Tensor[(9, 8, 11), int16],) {
  %503 = @func_1614() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %504 = %503.0;
  (%504,)
}

def @func_4927(%var_4925: Tensor[(40), float32]) -> (Tensor[(9, 8, 11), int16], Tensor[(4, 10, ?), int32], Tensor[(40), float32]) {
  %505 = @func_1873() /* ty=(Tensor[(9, 8, 11), float32], Tensor[(16, 9, 14), float32], Tensor[(2016), float32], Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16]) */;
  %506 = cast(%var_4925, dtype="float32") /* ty=Tensor[(40), float32] */;
  %507 = reshape(%506, newshape=[40]) /* ty=Tensor[(40), float32] */;
  %508 = @func_2185(%507) /* ty=(Tensor[(9, 8, 11), int16], Tensor[(4, 10, ?), int32]) */;
  %509 = %505.4;
  %510 = %508.1;
  (%509, %510, %var_4925)
}

def @func_3027() -> (float32,) {
  %511 = @func_2996() /* ty=(Tensor[(1815), float64], float32, float32, Tensor[(7, 2, 7), float64], Tensor[(98), float64], Tensor[(96, 24), int32]) */;
  %512 = %511.2;
  (%512,)
}

def @func_10325() -> Tensor[(8, 9, 7), float32] {
  %513 = @func_4116() /* ty=(Tensor[(8, 9, 7), float32],) */;
  %513.0
}

def @func_10555() -> Tensor[(9, 8, 11), float64] {
  %514 = @func_9737() /* ty=(Tensor[(9, 8, 11), float64],) */;
  %514.0
}

def @func_13447() -> (Tensor[(1815), float64], Tensor[(13, 16, 3), float32], Tensor[(1815), float64]) {
  %515 = @func_13075() /* ty=(Tensor[(1815), float64],) */;
  %516 = %515.0;
  %517 = @func_7541() /* ty=Tensor[(13, 16, 3), float32] */;
  %518 = @func_2805() /* ty=Tensor[(1815), float64] */;
  (%516, %517, %518)
}

def @func_8773() -> (float32, Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), float32]) {
  %519 = @func_3027() /* ty=(float32,) */;
  %520 = @func_6718() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %521 = %519.0;
  %522 = %520.0;
  %523 = @func_6272() /* ty=Tensor[(9, 8, 11), float32] */;
  (%521, %522, %523)
}

def @func_13186(%var_13169: Tensor[(624), bool]) -> (Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16], Tensor[(1248), float32], Tensor[(624), bool], Tensor[(16, 9, 14), uint8], Tensor[(624), bool]) {
  %524 = @func_8038() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %525 = cast(meta[relay.Constant][26] /* ty=Tensor[(1248), float32] */, dtype="float32") /* ty=Tensor[(1248), float32] */;
  %526 = cast(%var_13169, dtype="bool") /* ty=Tensor[(624), bool] */;
  %527 = reshape(%525, newshape=[8, 13, 12]) /* ty=Tensor[(8, 13, 12), float32] */;
  %528 = reshape(%526, newshape=[624]) /* ty=Tensor[(624), bool] */;
  %529 = @func_4705(%527, %528) /* ty=(Tensor[(8, 13, 12), float64], Tensor[(13, 16, 3), float32], Tensor[(624), bool], Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16], Tensor[(40), float32]) */;
  %530 = @func_3114() /* ty=(float32, Tensor[(13, 16, 3), float32], Tensor[(624), bool]) */;
  %531 = %524.0;
  %532 = %529.4;
  %533 = @func_11558() /* ty=Tensor[(16, 9, 14), uint8] */;
  %534 = %530.2;
  (%531, %532, meta[relay.Constant][26] /* ty=Tensor[(1248), float32] */, %var_13169, %533, %534)
}

def @func_6272() -> Tensor[(9, 8, 11), float32] {
  %535 = @func_5542() /* ty=(Tensor[(9, 8, 11), float32], Tensor[(1815), float64]) */;
  %535.0
}

def @func_4642(%var_4639: Tensor[(98), float64]) -> (Tensor[(1815), float64], Tensor[(9, 8, 11), int16], Tensor[(7, 2, 7), float64], Tensor[(98), float64]) {
  %536 = @func_2132() /* ty=(Tensor[(9, 8, 11), float64], Tensor[(1815), float64], Tensor[(1815), float64]) */;
  %537 = @func_3898() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %538 = cast(%var_4639, dtype="float64") /* ty=Tensor[(98), float64] */;
  %539 = reshape(%538, newshape=[7, 2, 7]) /* ty=Tensor[(7, 2, 7), float64] */;
  %540 = %536.2;
  %541 = %537.0;
  %542 = @func_1643(%539) /* ty=Tensor[(7, 2, 7), float64] */;
  (%540, %541, %542, %var_4639)
}

def @func_10989() -> Tensor[(13, 16, 3), float32] {
  %543 = @func_7370() /* ty=(Tensor[(96, 24), float32], Tensor[(13, 16, 3), float32], Tensor[(624), bool]) */;
  %543.1
}

def @func_3541(%var_3516: Tensor[(2304), float64]) -> (Tensor[(9, 8, 11), float64], Tensor[(1815), float32], Tensor[(1815), float32], Tensor[(2304), float64], Tensor[(16, 9, 14), float32]) {
  %544 = @func_3297() /* ty=(Tensor[(9, 8, 11), float64],) */;
  %545 = @func_2051() /* ty=(Tensor[(1815), float64],) */;
  %546 = %545.0;
  %547 = cast(meta[relay.Constant][27] /* ty=Tensor[(1815), float64] */, dtype="float32") /* ty=Tensor[(1815), float32] */;
  %548 = shape_of(%546, dtype="int32") /* ty=Tensor[(1), int32] */;
  %549 = cast(%546, dtype="float32") /* ty=Tensor[(1815), float32] */;
  %550 = dyn.reshape(%547, %548, newshape=[]) /* ty=Tensor[(?), float32] */;
  %551 = cast(%var_3516, dtype="float64") /* ty=Tensor[(2304), float64] */;
  %552 = reshape(%551, newshape=[2304]) /* ty=Tensor[(2304), float64] */;
  %553 = @func_2433(%552) /* ty=(Tensor[(1815), float32], Tensor[(11, 165), float32], Tensor[(2304), float64], Tensor[(312, 2), bool]) */;
  %554 = %544.0;
  %555 = floor_mod(%549, %550) /* ty=Tensor[(1815), float32] */;
  %556 = %553.0;
  %557 = @func_2730() /* ty=Tensor[(16, 9, 14), float32] */;
  (%554, %555, %556, %var_3516, %557)
}

def @func_7265() -> (Tensor[(40), float32],) {
  %558 = @func_5864() /* ty=(Tensor[(16, 9, 14), float32], Tensor[(40), float32], Tensor[(20, 2), float32], Tensor[(9, 8, 11), int16], Tensor[(11, 165), float32], Tensor[(16, 144), float64]) */;
  %559 = %558.1;
  (%559,)
}

def @func_10033() -> (Tensor[(1815), float32], Tensor[(13, 16, 3), float32], Tensor[(16, 9, 14), int8], Tensor[(16, 9, 14), float32], Tensor[(9, 8, 11), float32]) {
  %560 = @func_7838() /* ty=(Tensor[(1815), float32],) */;
  %561 = @func_7578() /* ty=(Tensor[(13, 16, 3), float32], Tensor[(13, 16, 3), float64], Tensor[(9, 8, 11), int16], Tensor[(13, 16, 3), float32]) */;
  %562 = @func_5010() /* ty=(Tensor[(16, 9, 14), int8],) */;
  %563 = %560.0;
  %564 = %561.3;
  %565 = %562.0;
  %566 = @func_2730() /* ty=Tensor[(16, 9, 14), float32] */;
  %567 = @func_2484() /* ty=Tensor[(9, 8, 11), float32] */;
  (%563, %564, %565, %566, %567)
}

def @func_13075() -> (Tensor[(1815), float64],) {
  %568 = @func_5648() /* ty=(Tensor[(16, 9, 14), uint8], Tensor[(1815), float64], Tensor[(1815), float32], Tensor[(2304), float64]) */;
  %569 = %568.1;
  (%569,)
}

def @func_3413() -> (Tensor[(13, 16, 3), float32],) {
  %570 = @func_3114() /* ty=(float32, Tensor[(13, 16, 3), float32], Tensor[(624), bool]) */;
  %571 = %570.1;
  (%571,)
}

def @func_14414(%var_14355: uint16, %var_14356: Tensor[(13, 12, 8), uint16]) -> (Tensor[(13, 12, 8), uint16], Tensor[(1815), float64], Tensor[(9, 8, 11), float64], Tensor[(1815), float64]) {
  %572 = cast(%var_14355, dtype="uint16") /* ty=uint16 */;
  %573 = cast(%var_14356, dtype="uint16") /* ty=Tensor[(13, 12, 8), uint16] */;
  %574 = @func_7083() /* ty=(Tensor[(16, 9, 14), int8], Tensor[(1815), float64], Tensor[(1815), float32]) */;
  %575 = @func_9478() /* ty=(Tensor[(9, 8, 11), float64],) */;
  %576 = maximum(%572, %573) /* ty=Tensor[(13, 12, 8), uint16] */;
  %577 = %574.1;
  %578 = %575.0;
  %579 = @func_4033() /* ty=Tensor[(1815), float64] */;
  (%576, %577, %578, %579)
}

def @func_3114() -> (float32, Tensor[(13, 16, 3), float32], Tensor[(624), bool]) {
  %580 = @func_3027() /* ty=(float32,) */;
  %581 = cast(meta[relay.Constant][28] /* ty=Tensor[(624), bool] */, dtype="bool") /* ty=Tensor[(624), bool] */;
  %582 = reshape(%581, newshape=[13, 16, 3]) /* ty=Tensor[(13, 16, 3), bool] */;
  %583 = %580.0;
  %584 = @func_129(%582) /* ty=Tensor[(13, 16, 3), float32] */;
  (%583, %584, meta[relay.Constant][28] /* ty=Tensor[(624), bool] */)
}

def @func_5354() -> Tensor[(16, 9, 14), uint8] {
  %585 = @func_3749() /* ty=(Tensor[(16, 9, 14), uint8], Tensor[(16, 9, 14), float32]) */;
  %585.0
}

def @func_3156() -> (Tensor[(9, 8, 11), float32],) {
  %586 = @func_2484() /* ty=Tensor[(9, 8, 11), float32] */;
  (%586,)
}

def @func_3694() -> Tensor[(9, 8, 11), int16] {
  %587 = @func_2753() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %587.0
}

def @func_8327(%var_8317: Tensor[(6, 9, 6), float64], %var_8318: Tensor[(6, 9, 6), float64]) -> (Tensor[(6, 9, 6), bool],) {
  %588 = cast(%var_8318, dtype="bool") /* ty=Tensor[(6, 9, 6), bool] */;
  %589 = shape_of(%var_8317, dtype="int32") /* ty=Tensor[(3), int32] */;
  %590 = cast(%var_8317, dtype="bool") /* ty=Tensor[(6, 9, 6), bool] */;
  %591 = dyn.reshape(%588, %589, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %592 = greater_equal(%590, %591) /* ty=Tensor[(6, 9, 6), bool] */;
  (%592,)
}

def @func_12256(%var_12253: Tensor[(11, 6, 4), float64]) -> (Tensor[(11, 6, 4), float64],) {
  %593 = cast(%var_12253, dtype="float64") /* ty=Tensor[(11, 6, 4), float64] */;
  %594 = log10(%593) /* ty=Tensor[(11, 6, 4), float64] */;
  (%594,)
}

def @func_11168() -> Tensor[(9, 8, 11), int16] {
  @func_9779() /* ty=Tensor[(9, 8, 11), int16] */
}

def @func_14029(%var_13954: Tensor[(825), float32]) -> (Tensor[(16, 9, 14), float32], Tensor[(15, 5, 11), float32], Tensor[(825), float32], Tensor[(16, 9, 14), int8], Tensor[(98), float64], Tensor[(16, 9, 14), float64], Tensor[(9, 8, 11), int16], Tensor[(13, 16, 3), float32], float32, float32, float32) {
  %595 = cast(%var_13954, dtype="float32") /* ty=Tensor[(825), float32] */;
  %596 = reshape(%595, newshape=[15, 5, 11]) /* ty=Tensor[(15, 5, 11), float32] */;
  %597 = @func_7813(%596) /* ty=(Tensor[(15, 5, 11), float32],) */;
  %598 = @func_5010() /* ty=(Tensor[(16, 9, 14), int8],) */;
  %599 = @func_7553() /* ty=(Tensor[(98), float64],) */;
  %600 = @func_12490() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %601 = @func_3413() /* ty=(Tensor[(13, 16, 3), float32],) */;
  %602 = @func_12583() /* ty=(float32,) */;
  %603 = @func_6353() /* ty=(float32,) */;
  %604 = @func_10621() /* ty=(Tensor[(2, 3, 14), bool], float32) */;
  %605 = @func_2730() /* ty=Tensor[(16, 9, 14), float32] */;
  %606 = %597.0;
  %607 = %598.0;
  %608 = %599.0;
  %609 = @func_8051() /* ty=Tensor[(16, 9, 14), float64] */;
  %610 = %600.0;
  %611 = %601.0;
  %612 = %602.0;
  %613 = %603.0;
  %614 = %604.1;
  (%605, %606, %var_13954, %607, %608, %609, %610, %611, %612, %613, %614)
}

def @func_7578() -> (Tensor[(13, 16, 3), float32], Tensor[(13, 16, 3), float64], Tensor[(9, 8, 11), int16], Tensor[(13, 16, 3), float32]) {
  %615 = @func_3413() /* ty=(Tensor[(13, 16, 3), float32],) */;
  %616 = %615.0;
  %617 = cast(%616, dtype="float32") /* ty=Tensor[(13, 16, 3), float32] */;
  %618 = reshape(%617, newshape=[13, 16, 3]) /* ty=Tensor[(13, 16, 3), float32] */;
  %619 = @func_1614() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %620 = @func_3413() /* ty=(Tensor[(13, 16, 3), float32],) */;
  %621 = @func_3631(%618) /* ty=Tensor[(13, 16, 3), float64] */;
  %622 = %619.0;
  %623 = %620.0;
  (%616, %621, %622, %623)
}

def @func_4510() -> (Tensor[(1815), float32], Tensor[(9, 8, 11), int16]) {
  %624 = @func_1932() /* ty=(Tensor[(9, 8, 11), int16], Tensor[(16, 10, 5), float64], float32, Tensor[(1815), float32], Tensor[(9, 8, 11), float64]) */;
  %625 = @func_4338() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %626 = %624.3;
  %627 = %625.0;
  (%626, %627)
}

def @func_10494() -> (Tensor[(16, 9, 14), float32], Tensor[(4, 156), bool], Tensor[(96, 24), int32]) {
  %628 = @func_9750() /* ty=(Tensor[(16, 9, 14), float32], Tensor[(16, 9, 14), float32]) */;
  %629 = @func_8940() /* ty=(float32, Tensor[(13, 16, 3), float32], Tensor[(4, 156), bool], Tensor[(1815), float32]) */;
  %630 = @func_2996() /* ty=(Tensor[(1815), float64], float32, float32, Tensor[(7, 2, 7), float64], Tensor[(98), float64], Tensor[(96, 24), int32]) */;
  %631 = %628.1;
  %632 = %629.2;
  %633 = %630.5;
  (%631, %632, %633)
}

def @func_8126() -> Tensor[(9, 8, 11), float32] {
  %634 = @func_7025() /* ty=(Tensor[(1815), float64], Tensor[(9, 8, 11), float32]) */;
  %634.1
}

def @func_12983() -> (Tensor[(16, 9, 14), float32],) {
  %635 = @func_12341() /* ty=(Tensor[(16, 9, 14), int8], Tensor[(16, 9, 14), float32]) */;
  %636 = %635.1;
  (%636,)
}

def @func_5276() -> Tensor[(4, 6, 11), float64] {
  %637 = cast(meta[relay.Constant][30] /* ty=Tensor[(4, 6, 11), float64] */, dtype="float64") /* ty=Tensor[(4, 6, 11), float64] */;
  %638 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(4, 6, 11), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %639 = cast(meta[relay.Constant][29] /* ty=Tensor[(4, 6, 11), float64] */, dtype="float64") /* ty=Tensor[(4, 6, 11), float64] */;
  %640 = dyn.reshape(%637, %638, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_divide(%639, %640) /* ty=Tensor[(4, 6, 11), float64] */
}

def @func_14276() -> Tensor[(9, 8, 11), float64] {
  @func_4055() /* ty=Tensor[(9, 8, 11), float64] */
}

def @func_2730() -> Tensor[(16, 9, 14), float32] {
  %641 = @func_1873() /* ty=(Tensor[(9, 8, 11), float32], Tensor[(16, 9, 14), float32], Tensor[(2016), float32], Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16]) */;
  %641.1
}

def @func_11379() -> Tensor[(98), float64] {
  %642 = @func_8713() /* ty=(Tensor[(13, 16, 3), float32], Tensor[(98), float64], Tensor[(98), float64]) */;
  %642.1
}

def @func_4827() -> float32 {
  %643 = @func_2996() /* ty=(Tensor[(1815), float64], float32, float32, Tensor[(7, 2, 7), float64], Tensor[(98), float64], Tensor[(96, 24), int32]) */;
  %643.2
}

def @func_9134() -> Tensor[(11, 165), float32] {
  %644 = @func_5864() /* ty=(Tensor[(16, 9, 14), float32], Tensor[(40), float32], Tensor[(20, 2), float32], Tensor[(9, 8, 11), int16], Tensor[(11, 165), float32], Tensor[(16, 144), float64]) */;
  %644.4
}

def @func_9302() -> (Tensor[(1815), float32], Tensor[(13, 16, 3), float32]) {
  %645 = @func_4510() /* ty=(Tensor[(1815), float32], Tensor[(9, 8, 11), int16]) */;
  %646 = %645.0;
  %647 = @func_3578() /* ty=Tensor[(13, 16, 3), float32] */;
  (%646, %647)
}

def @func_4055() -> Tensor[(9, 8, 11), float64] {
  %648 = @func_2860() /* ty=(Tensor[(9, 8, 11), float64], Tensor[(9, 8, 11), int16]) */;
  %648.0
}

def @func_7370() -> (Tensor[(96, 24), float32], Tensor[(13, 16, 3), float32], Tensor[(624), bool]) {
  %649 = @func_7113() /* ty=(Tensor[(4, 6, 11), float64], Tensor[(96, 24), float32]) */;
  %650 = cast(meta[relay.Constant][31] /* ty=Tensor[(624), bool] */, dtype="bool") /* ty=Tensor[(624), bool] */;
  %651 = reshape(%650, newshape=[13, 16, 3]) /* ty=Tensor[(13, 16, 3), bool] */;
  %652 = %649.1;
  %653 = @func_129(%651) /* ty=Tensor[(13, 16, 3), float32] */;
  (%652, %653, meta[relay.Constant][31] /* ty=Tensor[(624), bool] */)
}

def @func_10944() -> (Tensor[(98), float64], Tensor[(96, 24), float64]) {
  %654 = @func_7113() /* ty=(Tensor[(4, 6, 11), float64], Tensor[(96, 24), float32]) */;
  %655 = %654.1;
  %656 = cast(%655, dtype="float64") /* ty=Tensor[(96, 24), float64] */;
  %657 = @func_9086() /* ty=Tensor[(98), float64] */;
  %658 = acos(%656) /* ty=Tensor[(96, 24), float64] */;
  (%657, %658)
}

def @func_13321() -> (Tensor[(9, 8, 11), float32], Tensor[(13, 16, 3), float32]) {
  %659 = @func_7370() /* ty=(Tensor[(96, 24), float32], Tensor[(13, 16, 3), float32], Tensor[(624), bool]) */;
  %660 = @func_12614() /* ty=Tensor[(9, 8, 11), float32] */;
  %661 = %659.1;
  (%660, %661)
}

def @func_6072() -> (Tensor[(13, 16, 3), float32],) {
  %662 = @func_3413() /* ty=(Tensor[(13, 16, 3), float32],) */;
  %663 = %662.0;
  (%663,)
}

def @func_6316() -> (Tensor[(9, 8, 11), int16],) {
  %664 = @func_4338() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %665 = %664.0;
  (%665,)
}

def @func_10439(%var_10353: Tensor[(98, 4), float64], %var_10378: Tensor[(98), bool]) -> (Tensor[(98, 4), float64], Tensor[(11, 165), uint64], Tensor[(9, 8, 11), float32], Tensor[(98), uint8], Tensor[(13, 16, 3), float32], Tensor[(98), uint8]) {
  %666 = @func_9134() /* ty=Tensor[(11, 165), float32] */;
  %667 = cast(%var_10353, dtype="float64") /* ty=Tensor[(98, 4), float64] */;
  %668 = reshape(%667, newshape=[7, 8, 7]) /* ty=Tensor[(7, 8, 7), float64] */;
  %669 = @func_8820(%668) /* ty=(Tensor[(7, 8, 7), float64], Tensor[(16, 9, 14), int8], Tensor[(1815), float64]) */;
  %670 = %669.2;
  %671 = cast(%670, dtype="uint64") /* ty=Tensor[(1815), uint64] */;
  %672 = shape_of(%666, dtype="int32") /* ty=Tensor[(2), int32] */;
  %673 = cast(%666, dtype="uint64") /* ty=Tensor[(11, 165), uint64] */;
  %674 = dyn.reshape(%671, %672, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %675 = @func_5542() /* ty=(Tensor[(9, 8, 11), float32], Tensor[(1815), float64]) */;
  %676 = @func_9555() /* ty=Tensor[(98), float64] */;
  %677 = cast(%676, dtype="float32") /* ty=Tensor[(98), float32] */;
  %678 = asinh(%677) /* ty=Tensor[(98), float32] */;
  %679 = cast(%676, dtype="bool") /* ty=Tensor[(98), bool] */;
  %680 = shape_of(%678, dtype="int32") /* ty=Tensor[(1), int32] */;
  %681 = cast(%678, dtype="bool") /* ty=Tensor[(98), bool] */;
  %682 = dyn.reshape(%679, %680, newshape=[]) /* ty=Tensor[(?), bool] */;
  %683 = logical_and(%681, %682) /* ty=Tensor[(98), bool] */;
  %684 = cast(%var_10378, dtype="bool") /* ty=Tensor[(98), bool] */;
  %685 = shape_of(%683, dtype="int32") /* ty=Tensor[(1), int32] */;
  %686 = cast(%683, dtype="bool") /* ty=Tensor[(98), bool] */;
  %687 = dyn.reshape(%684, %685, newshape=[]) /* ty=Tensor[(?), bool] */;
  %688 = greater(%686, %687) /* ty=Tensor[(98), bool] */;
  %689 = cast(%688, dtype="uint8") /* ty=Tensor[(98), uint8] */;
  %690 = shape_of(%683, dtype="int32") /* ty=Tensor[(1), int32] */;
  %691 = cast(%683, dtype="uint8") /* ty=Tensor[(98), uint8] */;
  %692 = dyn.reshape(%689, %690, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %693 = @func_9302() /* ty=(Tensor[(1815), float32], Tensor[(13, 16, 3), float32]) */;
  %694 = cast(%678, dtype="uint8") /* ty=Tensor[(98), uint8] */;
  %695 = shape_of(%683, dtype="int32") /* ty=Tensor[(1), int32] */;
  %696 = cast(%683, dtype="uint8") /* ty=Tensor[(98), uint8] */;
  %697 = dyn.reshape(%694, %695, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %698 = multiply(%673, %674) /* ty=Tensor[(11, 165), uint64] */;
  %699 = %675.0;
  %700 = bitwise_and(%691, %692) /* ty=Tensor[(98), uint8] */;
  %701 = %693.1;
  %702 = logical_xor(%696, %697) /* ty=Tensor[(98), uint8] */;
  (%var_10353, %698, %699, %700, %701, %702)
}

def @func_11528() -> (Tensor[(9, 8, 11), float64], Tensor[(20, 2), float64]) {
  %703 = @func_7447() /* ty=(Tensor[(20, 2), float32], Tensor[(9, 8, 11), int16]) */;
  %704 = %703.0;
  %705 = cast(%704, dtype="float64") /* ty=Tensor[(20, 2), float64] */;
  %706 = @func_4055() /* ty=Tensor[(9, 8, 11), float64] */;
  %707 = atanh(%705) /* ty=Tensor[(20, 2), float64] */;
  (%706, %707)
}

def @func_10962() -> (Tensor[(4, 6, 11), float64],) {
  %708 = @func_7113() /* ty=(Tensor[(4, 6, 11), float64], Tensor[(96, 24), float32]) */;
  %709 = %708.0;
  (%709,)
}

def @func_11218(%var_11175: Tensor[(1815), float64], %var_11195: Tensor[(40), float32]) -> (Tensor[(1815), int32], Tensor[(4, 10, ?), int64], Tensor[(40), float32]) {
  %710 = @func_2805() /* ty=Tensor[(1815), float64] */;
  %711 = cast(%var_11175, dtype="int32") /* ty=Tensor[(1815), int32] */;
  %712 = shape_of(%710, dtype="int32") /* ty=Tensor[(1), int32] */;
  %713 = cast(%710, dtype="int32") /* ty=Tensor[(1815), int32] */;
  %714 = dyn.reshape(%711, %712, newshape=[]) /* ty=Tensor[(?), int32] */;
  %715 = cast(%var_11195, dtype="float32") /* ty=Tensor[(40), float32] */;
  %716 = reshape(%715, newshape=[40]) /* ty=Tensor[(40), float32] */;
  %717 = @func_8611(%716) /* ty=(Tensor[(9, 8, 11), int16], Tensor[(16, 9, 14), int8], Tensor[(4, 6, 11), float64], Tensor[(9, 8, 11), int16], Tensor[(4, 10, ?), int64]) */;
  %718 = bitwise_or(%713, %714) /* ty=Tensor[(1815), int32] */;
  %719 = %717.4;
  (%718, %719, %var_11195)
}

def @func_12438() -> (Tensor[(13, 16, 3), float32],) {
  %720 = @func_4356() /* ty=(Tensor[(13, 16, 3), float32],) */;
  %721 = %720.0;
  (%721,)
}

def @func_9750() -> (Tensor[(16, 9, 14), float32], Tensor[(16, 9, 14), float32]) {
  %722 = @func_5109() /* ty=(Tensor[(16, 9, 14), float32], Tensor[(16, 9, 14), uint8]) */;
  %723 = @func_3749() /* ty=(Tensor[(16, 9, 14), uint8], Tensor[(16, 9, 14), float32]) */;
  %724 = %722.0;
  %725 = %723.1;
  (%724, %725)
}

def @func_9057() -> (Tensor[(9, 8, 11), float32], Tensor[(96, 24), float64]) {
  %726 = @func_7113() /* ty=(Tensor[(4, 6, 11), float64], Tensor[(96, 24), float32]) */;
  %727 = %726.1;
  %728 = cast(%727, dtype="float32") /* ty=Tensor[(96, 24), float32] */;
  %729 = atan(%728) /* ty=Tensor[(96, 24), float32] */;
  %730 = cast(%729, dtype="float64") /* ty=Tensor[(96, 24), float64] */;
  %731 = @func_8126() /* ty=Tensor[(9, 8, 11), float32] */;
  %732 = cosh(%730) /* ty=Tensor[(96, 24), float64] */;
  (%731, %732)
}

def @func_5542() -> (Tensor[(9, 8, 11), float32], Tensor[(1815), float64]) {
  %733 = @func_2484() /* ty=Tensor[(9, 8, 11), float32] */;
  %734 = @func_2805() /* ty=Tensor[(1815), float64] */;
  (%733, %734)
}

def @func_2051() -> (Tensor[(1815), float64],) {
  %735 = @func_1932() /* ty=(Tensor[(9, 8, 11), int16], Tensor[(16, 10, 5), float64], float32, Tensor[(1815), float32], Tensor[(9, 8, 11), float64]) */;
  %736 = %735.3;
  %737 = cast(%736, dtype="float64") /* ty=Tensor[(1815), float64] */;
  %738 = sqrt(%737) /* ty=Tensor[(1815), float64] */;
  (%738,)
}

def @func_2406(%var_2352: Tensor[(624), bool], %var_2356: Tensor[(1, 1815), float32]) -> (Tensor[(9, 8, 11), int16], Tensor[(13, 16, 3), float32], Tensor[(624), bool], Tensor[(11, 15, 11), float32], float32, Tensor[(1, 1815), float32], Tensor[(4, 10, ?), int32], Tensor[(40, 1), float32]) {
  %739 = @func_1614() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %740 = cast(%var_2352, dtype="bool") /* ty=Tensor[(624), bool] */;
  %741 = reshape(%740, newshape=[1, 624]) /* ty=Tensor[(1, 624), bool] */;
  %742 = @func_2283(%741) /* ty=(Tensor[(9, 8, 11), int16], Tensor[(13, 16, 3), float32], Tensor[(1, 624), float32], Tensor[(9, 8, 11), int16]) */;
  %743 = cast(3.71071f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %744 = cast(%var_2356, dtype="float32") /* ty=Tensor[(1, 1815), float32] */;
  %745 = reshape(%743, newshape=[]) /* ty=float32 */;
  %746 = reshape(%744, newshape=[11, 15, 11]) /* ty=Tensor[(11, 15, 11), float32] */;
  %747 = cast(meta[relay.Constant][32] /* ty=Tensor[(40, 1), float32] */, dtype="float32") /* ty=Tensor[(40, 1), float32] */;
  %748 = reshape(%747, newshape=[40]) /* ty=Tensor[(40), float32] */;
  %749 = @func_2185(%748) /* ty=(Tensor[(9, 8, 11), int16], Tensor[(4, 10, ?), int32]) */;
  %750 = %739.0;
  %751 = %742.1;
  %752 = @func_384(%745, %746) /* ty=Tensor[(11, 15, 11), float32] */;
  %753 = %749.1;
  (%750, %751, %var_2352, %752, 3.71071f /* ty=float32 */, %var_2356, %753, meta[relay.Constant][32] /* ty=Tensor[(40, 1), float32] */)
}

def @func_4878() -> (Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16]) {
  %754 = @func_2753() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %755 = @func_4338() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %756 = %754.0;
  %757 = %755.0;
  (%756, %757)
}

def @func_3631(%var_3624: Tensor[(13, 16, 3), float32]) -> Tensor[(13, 16, 3), float64] {
  %758 = @func_3578() /* ty=Tensor[(13, 16, 3), float32] */;
  %759 = cast(%var_3624, dtype="float64") /* ty=Tensor[(13, 16, 3), float64] */;
  %760 = shape_of(%758, dtype="int32") /* ty=Tensor[(3), int32] */;
  %761 = cast(%758, dtype="float64") /* ty=Tensor[(13, 16, 3), float64] */;
  %762 = dyn.reshape(%759, %760, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  divide(%761, %762) /* ty=Tensor[(13, 16, 3), float64] */
}

def @func_5648() -> (Tensor[(16, 9, 14), uint8], Tensor[(1815), float64], Tensor[(1815), float32], Tensor[(2304), float64]) {
  %763 = @func_5109() /* ty=(Tensor[(16, 9, 14), float32], Tensor[(16, 9, 14), uint8]) */;
  %764 = @func_4747() /* ty=(Tensor[(9, 8, 11), float64], Tensor[(1815), float64]) */;
  %765 = cast(meta[relay.Constant][33] /* ty=Tensor[(2304), float64] */, dtype="float64") /* ty=Tensor[(2304), float64] */;
  %766 = reshape(%765, newshape=[2304]) /* ty=Tensor[(2304), float64] */;
  %767 = @func_2433(%766) /* ty=(Tensor[(1815), float32], Tensor[(11, 165), float32], Tensor[(2304), float64], Tensor[(312, 2), bool]) */;
  %768 = %763.1;
  %769 = %764.1;
  %770 = %767.0;
  (%768, %769, %770, meta[relay.Constant][33] /* ty=Tensor[(2304), float64] */)
}

def @func_7083() -> (Tensor[(16, 9, 14), int8], Tensor[(1815), float64], Tensor[(1815), float32]) {
  %771 = @func_5010() /* ty=(Tensor[(16, 9, 14), int8],) */;
  %772 = @func_3386() /* ty=(Tensor[(9, 8, 11), float64], Tensor[(1815), float64], float32) */;
  %773 = @func_4747() /* ty=(Tensor[(9, 8, 11), float64], Tensor[(1815), float64]) */;
  %774 = %773.1;
  %775 = cast(%774, dtype="float32") /* ty=Tensor[(1815), float32] */;
  %776 = %771.0;
  %777 = %772.1;
  %778 = asin(%775) /* ty=Tensor[(1815), float32] */;
  (%776, %777, %778)
}

def @func_8713() -> (Tensor[(13, 16, 3), float32], Tensor[(98), float64], Tensor[(98), float64]) {
  %779 = @func_3413() /* ty=(Tensor[(13, 16, 3), float32],) */;
  %780 = cast(meta[relay.Constant][34] /* ty=Tensor[(98), float64] */, dtype="float64") /* ty=Tensor[(98), float64] */;
  %781 = reshape(%780, newshape=[98]) /* ty=Tensor[(98), float64] */;
  %782 = @func_1736(%781) /* ty=(Tensor[(9, 8, 11), int16], Tensor[(7, 2, 7), float64], Tensor[(98), float64]) */;
  %783 = %779.0;
  %784 = %782.2;
  (%783, %784, meta[relay.Constant][34] /* ty=Tensor[(98), float64] */)
}

def @func_6219() -> (Tensor[(16, 9, 14), float32],) {
  %785 = @func_2730() /* ty=Tensor[(16, 9, 14), float32] */;
  (%785,)
}

def @func_6032(%var_6007: Tensor[(12, 4, 12), float64], %var_6024: Tensor[(12, 4, 12), float64]) -> (Tensor[(13, 16, 3), float32], Tensor[(312, 2), bool], Tensor[(12, 4, 12), uint64]) {
  %786 = cast(meta[relay.Constant][35] /* ty=Tensor[(312, 2), bool] */, dtype="bool") /* ty=Tensor[(312, 2), bool] */;
  %787 = reshape(%786, newshape=[13, 16, 3]) /* ty=Tensor[(13, 16, 3), bool] */;
  %788 = cast(%var_6007, dtype="float64") /* ty=Tensor[(12, 4, 12), float64] */;
  %789 = cos(%788) /* ty=Tensor[(12, 4, 12), float64] */;
  %790 = cast(%var_6024, dtype="uint64") /* ty=Tensor[(12, 4, 12), uint64] */;
  %791 = shape_of(%789, dtype="int32") /* ty=Tensor[(3), int32] */;
  %792 = cast(%789, dtype="uint64") /* ty=Tensor[(12, 4, 12), uint64] */;
  %793 = dyn.reshape(%790, %791, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %794 = @func_129(%787) /* ty=Tensor[(13, 16, 3), float32] */;
  %795 = left_shift(%792, %793) /* ty=Tensor[(12, 4, 12), uint64] */;
  (%794, meta[relay.Constant][35] /* ty=Tensor[(312, 2), bool] */, %795)
}

def @func_3233(%var_3187: Tensor[(3, 2, 1), float64], %var_3191: float32, %var_3192: Tensor[(1815, 1), float32]) -> (Tensor[(3, 2, 1), float64], float32, Tensor[(1815, ?), float32], Tensor[(16, 9, 14), float32]) {
  %796 = cast(%var_3187, dtype="float64") /* ty=Tensor[(3, 2, 1), float64] */;
  %797 = cast(%var_3191, dtype="float32") /* ty=float32 */;
  %798 = cast(%var_3192, dtype="float32") /* ty=Tensor[(1815, 1), float32] */;
  %799 = reshape(%797, newshape=[]) /* ty=float32 */;
  %800 = reshape(%798, newshape=[1815]) /* ty=Tensor[(1815), float32] */;
  %801 = @func_1335(%799, %800) /* ty=(Tensor[(16, 10, 5), bool], Tensor[(11, 15, 11), float32], float32, Tensor[(1815), float32], Tensor[(16, 10, 5), float64]) */;
  %802 = %801.1;
  %803 = cast(%802, dtype="float32") /* ty=Tensor[(11, 15, 11), float32] */;
  %804 = cosh(%803) /* ty=Tensor[(11, 15, 11), float32] */;
  %805 = cast(%804, dtype="bool") /* ty=Tensor[(11, 15, 11), bool] */;
  %806 = shape_of(%var_3192, dtype="int32") /* ty=Tensor[(2), int32] */;
  %807 = cast(%var_3192, dtype="bool") /* ty=Tensor[(1815, 1), bool] */;
  %808 = dyn.reshape(%805, %806, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %809 = logical_or(%807, %808) /* ty=Tensor[(1815, ?), bool] */;
  %810 = cast(%809, dtype="float32") /* ty=Tensor[(1815, ?), float32] */;
  %811 = atan(%796) /* ty=Tensor[(3, 2, 1), float64] */;
  %812 = asinh(%810) /* ty=Tensor[(1815, ?), float32] */;
  %813 = @func_2730() /* ty=Tensor[(16, 9, 14), float32] */;
  (%811, %var_3191, %812, %813)
}

def @func_3749() -> (Tensor[(16, 9, 14), uint8], Tensor[(16, 9, 14), float32]) {
  %814 = @func_2730() /* ty=Tensor[(16, 9, 14), float32] */;
  %815 = cast(meta[relay.Constant][36] /* ty=Tensor[(16, 9, 14), float32] */, dtype="uint8") /* ty=Tensor[(16, 9, 14), uint8] */;
  %816 = shape_of(%814, dtype="int32") /* ty=Tensor[(3), int32] */;
  %817 = cast(%814, dtype="uint8") /* ty=Tensor[(16, 9, 14), uint8] */;
  %818 = dyn.reshape(%815, %816, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %819 = cast(%814, dtype="float32") /* ty=Tensor[(16, 9, 14), float32] */;
  %820 = reshape(%819, newshape=[16, 9, 14]) /* ty=Tensor[(16, 9, 14), float32] */;
  %821 = left_shift(%817, %818) /* ty=Tensor[(16, 9, 14), uint8] */;
  %822 = @func_1583(%820) /* ty=Tensor[(16, 9, 14), float32] */;
  (%821, %822)
}

def @func_7447() -> (Tensor[(20, 2), float32], Tensor[(9, 8, 11), int16]) {
  %823 = @func_5864() /* ty=(Tensor[(16, 9, 14), float32], Tensor[(40), float32], Tensor[(20, 2), float32], Tensor[(9, 8, 11), int16], Tensor[(11, 165), float32], Tensor[(16, 144), float64]) */;
  %824 = @func_4878() /* ty=(Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16]) */;
  %825 = %823.2;
  %826 = %824.1;
  (%825, %826)
}

def @func_11309(%var_11261: Tensor[(1815), float32]) -> (Tensor[(9, 8, 11), float64], Tensor[(1815), uint32], Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16]) {
  %827 = @func_8455() /* ty=(Tensor[(9, 8, 11), float64],) */;
  %828 = @func_9705() /* ty=(Tensor[(98), float64], Tensor[(1815), float32], Tensor[(2304), float64], Tensor[(1815), float64]) */;
  %829 = %828.1;
  %830 = cast(%var_11261, dtype="uint32") /* ty=Tensor[(1815), uint32] */;
  %831 = shape_of(%829, dtype="int32") /* ty=Tensor[(1), int32] */;
  %832 = cast(%829, dtype="uint32") /* ty=Tensor[(1815), uint32] */;
  %833 = dyn.reshape(%830, %831, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %834 = @func_7507() /* ty=(Tensor[(16, 9, 14), float32], Tensor[(9, 8, 11), int16]) */;
  %835 = @func_2753() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %836 = %827.0;
  %837 = right_shift(%832, %833) /* ty=Tensor[(1815), uint32] */;
  %838 = %834.1;
  %839 = %835.0;
  (%836, %837, %838, %839)
}

def @func_384(%var_362: float32, %var_363: Tensor[(11, 15, 11), float32]) -> Tensor[(11, 15, 11), float32] {
  %840 = cast(%var_362, dtype="float32") /* ty=float32 */;
  %841 = cast(%var_363, dtype="float32") /* ty=Tensor[(11, 15, 11), float32] */;
  floor_mod(%840, %841) /* ty=Tensor[(11, 15, 11), float32] */
}

def @func_11870() -> (Tensor[(9, 8, 11), int16],) {
  %842 = @func_7578() /* ty=(Tensor[(13, 16, 3), float32], Tensor[(13, 16, 3), float64], Tensor[(9, 8, 11), int16], Tensor[(13, 16, 3), float32]) */;
  %843 = %842.2;
  (%843,)
}

def @func_4116() -> (Tensor[(8, 9, 7), float32],) {
  %844 = cast(meta[relay.Constant][37] /* ty=Tensor[(8, 9, 7), float32] */, dtype="float32") /* ty=Tensor[(8, 9, 7), float32] */;
  %845 = log10(%844) /* ty=Tensor[(8, 9, 7), float32] */;
  (%845,)
}

def @func_6173(%var_6170: Tensor[(14, 11, 10), float64]) -> (Tensor[(14, 11, 10), float64],) {
  %846 = cast(%var_6170, dtype="float64") /* ty=Tensor[(14, 11, 10), float64] */;
  %847 = exp(%846) /* ty=Tensor[(14, 11, 10), float64] */;
  (%847,)
}

def @func_11840() -> (Tensor[(9, 8, 11), int16],) {
  %848 = @func_8109() /* ty=(float32, Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16], float32, Tensor[(16, 9, 14), float32], Tensor[(2016), float32]) */;
  %849 = %848.1;
  (%849,)
}

def @func_12153(%var_12135: Tensor[(6), float64]) -> (Tensor[(20, 2), float64], Tensor[(9, 8, 11), float64], Tensor[(1815), float64], Tensor[(6), float64], float32, Tensor[(1815), float64], Tensor[(1540, ?), uint16]) {
  %850 = @func_11528() /* ty=(Tensor[(9, 8, 11), float64], Tensor[(20, 2), float64]) */;
  %851 = @func_10951() /* ty=(Tensor[(9, 8, 11), float64],) */;
  %852 = cast(%var_12135, dtype="float64") /* ty=Tensor[(6), float64] */;
  %853 = cast(3.37704f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %854 = reshape(%852, newshape=[6]) /* ty=Tensor[(6), float64] */;
  %855 = reshape(%853, newshape=[]) /* ty=float32 */;
  %856 = @func_10855(%854, %855) /* ty=(Tensor[(9, 8, 11), int16], Tensor[(1815), float64], Tensor[(9, 8, 11), int16], float32, Tensor[(6), float64], float32) */;
  %857 = @func_3808() /* ty=(Tensor[(1815), float64],) */;
  %858 = cast(meta[relay.Constant][38] /* ty=Tensor[(1540, 1), float64] */, dtype="float64") /* ty=Tensor[(1540, 1), float64] */;
  %859 = reshape(%858, newshape=[14, 11, 10]) /* ty=Tensor[(14, 11, 10), float64] */;
  %860 = @func_6173(%859) /* ty=(Tensor[(14, 11, 10), float64],) */;
  %861 = %860.0;
  %862 = cast(%861, dtype="uint16") /* ty=Tensor[(14, 11, 10), uint16] */;
  %863 = shape_of(meta[relay.Constant][38] /* ty=Tensor[(1540, 1), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %864 = cast(meta[relay.Constant][38] /* ty=Tensor[(1540, 1), float64] */, dtype="uint16") /* ty=Tensor[(1540, 1), uint16] */;
  %865 = dyn.reshape(%862, %863, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %866 = %850.1;
  %867 = %851.0;
  %868 = %856.1;
  %869 = %857.0;
  %870 = right_shift(%864, %865) /* ty=Tensor[(1540, ?), uint16] */;
  (%866, %867, %868, %var_12135, 3.37704f /* ty=float32 */, %869, %870)
}

def @func_2185(%var_2159: Tensor[(40), float32]) -> (Tensor[(9, 8, 11), int16], Tensor[(4, 10, ?), int32]) {
  %871 = cast(%var_2159, dtype="float32") /* ty=Tensor[(40), float32] */;
  %872 = reshape(%871, newshape=[4, 10, 1]) /* ty=Tensor[(4, 10, 1), float32] */;
  %873 = @func_1756(%872) /* ty=(Tensor[(4, 10, 1), float32],) */;
  %874 = %873.0;
  %875 = cast(%var_2159, dtype="int32") /* ty=Tensor[(40), int32] */;
  %876 = shape_of(%874, dtype="int32") /* ty=Tensor[(3), int32] */;
  %877 = cast(%874, dtype="int32") /* ty=Tensor[(4, 10, 1), int32] */;
  %878 = dyn.reshape(%875, %876, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %879 = @func_1690() /* ty=Tensor[(9, 8, 11), int16] */;
  %880 = bitwise_xor(%877, %878) /* ty=Tensor[(4, 10, ?), int32] */;
  (%879, %880)
}

def @func_3297() -> (Tensor[(9, 8, 11), float64],) {
  %881 = @func_1690() /* ty=Tensor[(9, 8, 11), int16] */;
  %882 = cast(%881, dtype="float64") /* ty=Tensor[(9, 8, 11), float64] */;
  %883 = acosh(%882) /* ty=Tensor[(9, 8, 11), float64] */;
  (%883,)
}

def @func_9874() -> (Tensor[(9, 8, 11), int16], Tensor[(98), float64]) {
  %884 = @func_6094() /* ty=(Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16]) */;
  %885 = @func_8713() /* ty=(Tensor[(13, 16, 3), float32], Tensor[(98), float64], Tensor[(98), float64]) */;
  %886 = %884.1;
  %887 = %885.1;
  (%886, %887)
}

def @func_14035() -> (Tensor[(96, 24), float64],) {
  %888 = @func_10944() /* ty=(Tensor[(98), float64], Tensor[(96, 24), float64]) */;
  %889 = %888.1;
  (%889,)
}

def @func_5321() -> (Tensor[(1815), float64],) {
  %890 = @func_4747() /* ty=(Tensor[(9, 8, 11), float64], Tensor[(1815), float64]) */;
  %891 = %890.1;
  (%891,)
}

def @func_8109() -> (float32, Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16], float32, Tensor[(16, 9, 14), float32], Tensor[(2016), float32]) {
  %892 = @func_3027() /* ty=(float32,) */;
  %893 = @func_7447() /* ty=(Tensor[(20, 2), float32], Tensor[(9, 8, 11), int16]) */;
  %894 = @func_1932() /* ty=(Tensor[(9, 8, 11), int16], Tensor[(16, 10, 5), float64], float32, Tensor[(1815), float32], Tensor[(9, 8, 11), float64]) */;
  %895 = cast(meta[relay.Constant][39] /* ty=Tensor[(2016), float32] */, dtype="float32") /* ty=Tensor[(2016), float32] */;
  %896 = reshape(%895, newshape=[16, 9, 14]) /* ty=Tensor[(16, 9, 14), float32] */;
  %897 = %892.0;
  %898 = %893.1;
  %899 = %894.0;
  %900 = @func_4827() /* ty=float32 */;
  %901 = @func_1583(%896) /* ty=Tensor[(16, 9, 14), float32] */;
  (%897, %898, %899, %900, %901, meta[relay.Constant][39] /* ty=Tensor[(2016), float32] */)
}

def @func_8681() -> (Tensor[(9, 8, 11), int16],) {
  %902 = @func_3898() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %903 = %902.0;
  (%903,)
}

def @func_9436(%var_9415: Tensor[(624), bool]) -> (Tensor[(1815), float32], Tensor[(9, 8, 11), int16], Tensor[(624), bool]) {
  %904 = @func_7838() /* ty=(Tensor[(1815), float32],) */;
  %905 = cast(%var_9415, dtype="bool") /* ty=Tensor[(624), bool] */;
  %906 = %904.0;
  %907 = cast(%906, dtype="float32") /* ty=Tensor[(1815), float32] */;
  %908 = reshape(%905, newshape=[624]) /* ty=Tensor[(624), bool] */;
  %909 = reshape(%907, newshape=[1, 1815]) /* ty=Tensor[(1, 1815), float32] */;
  %910 = @func_2406(%908, %909) /* ty=(Tensor[(9, 8, 11), int16], Tensor[(13, 16, 3), float32], Tensor[(624), bool], Tensor[(11, 15, 11), float32], float32, Tensor[(1, 1815), float32], Tensor[(4, 10, ?), int32], Tensor[(40, 1), float32]) */;
  %911 = %910.0;
  (%906, %911, %var_9415)
}

def @func_6982() -> Tensor[(16, 9, 14), uint8] {
  %912 = @func_3749() /* ty=(Tensor[(16, 9, 14), uint8], Tensor[(16, 9, 14), float32]) */;
  %912.0
}

def @func_2753() -> (Tensor[(9, 8, 11), int16],) {
  %913 = @func_1614() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %914 = %913.0;
  (%914,)
}

def @func_12815() -> (Tensor[(4, 6, 11), float64], Tensor[(8, 9, 7), float32], Tensor[(7, 2, 7), float64], Tensor[(98), float64]) {
  %915 = @func_7860() /* ty=(Tensor[(4, 6, 11), float64], Tensor[(7, 2, 7), float64]) */;
  %916 = @func_4116() /* ty=(Tensor[(8, 9, 7), float32],) */;
  %917 = cast(meta[relay.Constant][40] /* ty=Tensor[(98), float64] */, dtype="float64") /* ty=Tensor[(98), float64] */;
  %918 = reshape(%917, newshape=[7, 2, 7]) /* ty=Tensor[(7, 2, 7), float64] */;
  %919 = %915.0;
  %920 = %916.0;
  %921 = @func_1643(%918) /* ty=Tensor[(7, 2, 7), float64] */;
  (%919, %920, %921, meta[relay.Constant][40] /* ty=Tensor[(98), float64] */)
}

def @func_10646() -> (Tensor[(16, 9, 14), uint8],) {
  %922 = @func_6982() /* ty=Tensor[(16, 9, 14), uint8] */;
  (%922,)
}

def @func_10855(%var_10848: Tensor[(6), float64], %var_10849: float32) -> (Tensor[(9, 8, 11), int16], Tensor[(1815), float64], Tensor[(9, 8, 11), int16], float32, Tensor[(6), float64], float32) {
  %923 = @func_5970() /* ty=(Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16], Tensor[(1815), float64]) */;
  %924 = cast(%var_10848, dtype="float64") /* ty=Tensor[(6), float64] */;
  %925 = cast(%var_10849, dtype="float32") /* ty=float32 */;
  %926 = @func_4033() /* ty=Tensor[(1815), float64] */;
  %927 = cast(%926, dtype="float32") /* ty=Tensor[(1815), float32] */;
  %928 = reshape(%924, newshape=[3, 2, 1]) /* ty=Tensor[(3, 2, 1), float64] */;
  %929 = reshape(%925, newshape=[]) /* ty=float32 */;
  %930 = reshape(%927, newshape=[1815, 1]) /* ty=Tensor[(1815, 1), float32] */;
  %931 = @func_3233(%928, %929, %930) /* ty=(Tensor[(3, 2, 1), float64], float32, Tensor[(1815, ?), float32], Tensor[(16, 9, 14), float32]) */;
  %932 = @func_9335() /* ty=Tensor[(9, 8, 11), int16] */;
  %933 = %923.0;
  %934 = %931.1;
  (%932, %926, %933, %934, %var_10848, %var_10849)
}

def @func_9255() -> (Tensor[(13, 16, 3), float32], Tensor[(9, 8, 11), int16], Tensor[(98), float64]) {
  %935 = @func_6072() /* ty=(Tensor[(13, 16, 3), float32],) */;
  %936 = @func_4338() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %937 = %935.0;
  %938 = %936.0;
  %939 = @func_9086() /* ty=Tensor[(98), float64] */;
  (%937, %938, %939)
}

def @func_7760(%var_7757: Tensor[(624), bool], %var_7758: Tensor[(1815), float32]) -> (float32, Tensor[(9, 8, 11), int16], float32, Tensor[(2304), float64], Tensor[(624), bool], Tensor[(1815), float32]) {
  %940 = @func_4878() /* ty=(Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16]) */;
  %941 = cast(meta[relay.Constant][41] /* ty=Tensor[(2304), float64] */, dtype="float64") /* ty=Tensor[(2304), float64] */;
  %942 = cast(%var_7757, dtype="bool") /* ty=Tensor[(624), bool] */;
  %943 = cast(%var_7758, dtype="float32") /* ty=Tensor[(1815), float32] */;
  %944 = reshape(%941, newshape=[2304]) /* ty=Tensor[(2304), float64] */;
  %945 = reshape(%942, newshape=[2, 312]) /* ty=Tensor[(2, 312), bool] */;
  %946 = reshape(%943, newshape=[11, 165]) /* ty=Tensor[(11, 165), float32] */;
  %947 = @func_2030(%944, %945, %946) /* ty=(Tensor[(9, 8, 11), int16], Tensor[(13, 16, 3), float32], Tensor[(2304), float64], Tensor[(2, 312), bool], float32, float32, Tensor[(11, 165), float32]) */;
  %948 = @func_4574() /* ty=float32 */;
  %949 = %940.0;
  %950 = %947.4;
  (%948, %949, %950, meta[relay.Constant][41] /* ty=Tensor[(2304), float64] */, %var_7757, %var_7758)
}

def @func_14510() -> (float32,) {
  %951 = @func_12583() /* ty=(float32,) */;
  %952 = %951.0;
  (%952,)
}

def @func_7394() -> (Tensor[(4, 6, 11), float64],) {
  %953 = @func_5276() /* ty=Tensor[(4, 6, 11), float64] */;
  (%953,)
}

def @func_10746() -> float32 {
  %954 = @func_6353() /* ty=(float32,) */;
  %954.0
}

def @func_9335() -> Tensor[(9, 8, 11), int16] {
  %955 = @func_6316() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %955.0
}

def @func_9982() -> Tensor[(16, 9, 14), uint8] {
  @func_6982() /* ty=Tensor[(16, 9, 14), uint8] */
}

def @func_3709(%var_3699: Tensor[(9, 13, 14), float32]) -> Tensor[(9, 13, 14), float32] {
  %956 = cast(%var_3699, dtype="float32") /* ty=Tensor[(9, 13, 14), float32] */;
  cosh(%956) /* ty=Tensor[(9, 13, 14), float32] */
}

def @func_4111() -> (Tensor[(1815), float64], float32) {
  %957 = @func_2996() /* ty=(Tensor[(1815), float64], float32, float32, Tensor[(7, 2, 7), float64], Tensor[(98), float64], Tensor[(96, 24), int32]) */;
  %958 = @func_4033() /* ty=Tensor[(1815), float64] */;
  %959 = %957.2;
  (%958, %959)
}

def @func_8455() -> (Tensor[(9, 8, 11), float64],) {
  %960 = @func_4055() /* ty=Tensor[(9, 8, 11), float64] */;
  (%960,)
}

def @func_2860() -> (Tensor[(9, 8, 11), float64], Tensor[(9, 8, 11), int16]) {
  %961 = @func_1932() /* ty=(Tensor[(9, 8, 11), int16], Tensor[(16, 10, 5), float64], float32, Tensor[(1815), float32], Tensor[(9, 8, 11), float64]) */;
  %962 = @func_1686() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %963 = %961.4;
  %964 = %962.0;
  (%963, %964)
}

def @func_7541() -> Tensor[(13, 16, 3), float32] {
  %965 = @func_6072() /* ty=(Tensor[(13, 16, 3), float32],) */;
  %965.0
}

def @func_12406() -> Tensor[(16, 9, 14), float32] {
  %966 = @func_2564() /* ty=(Tensor[(1815), float64], Tensor[(16, 9, 14), float32], Tensor[(2016), float32], Tensor[(312, 2), bool], Tensor[(96, 24), int32], Tensor[(16, 9, 14), float32]) */;
  %966.1
}

def @func_11896(%var_11889: Tensor[(104, 12), float32]) -> (Tensor[(4, 6, 11), float64], Tensor[(9, 8, 11), float64], Tensor[(9, 8, 11), int16], Tensor[(624), bool], Tensor[(104, 12), bool]) {
  %967 = @func_10962() /* ty=(Tensor[(4, 6, 11), float64],) */;
  %968 = cast(meta[relay.Constant][42] /* ty=Tensor[(104, 12), float32] */, dtype="float32") /* ty=Tensor[(104, 12), float32] */;
  %969 = cast(meta[relay.Constant][43] /* ty=Tensor[(624), bool] */, dtype="bool") /* ty=Tensor[(624), bool] */;
  %970 = reshape(%968, newshape=[8, 13, 12]) /* ty=Tensor[(8, 13, 12), float32] */;
  %971 = reshape(%969, newshape=[624]) /* ty=Tensor[(624), bool] */;
  %972 = @func_4705(%970, %971) /* ty=(Tensor[(8, 13, 12), float64], Tensor[(13, 16, 3), float32], Tensor[(624), bool], Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16], Tensor[(40), float32]) */;
  %973 = cast(%var_11889, dtype="bool") /* ty=Tensor[(104, 12), bool] */;
  %974 = shape_of(meta[relay.Constant][42] /* ty=Tensor[(104, 12), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %975 = cast(meta[relay.Constant][42] /* ty=Tensor[(104, 12), float32] */, dtype="bool") /* ty=Tensor[(104, 12), bool] */;
  %976 = dyn.reshape(%973, %974, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %977 = %967.0;
  %978 = @func_4055() /* ty=Tensor[(9, 8, 11), float64] */;
  %979 = %972.4;
  %980 = less(%975, %976) /* ty=Tensor[(104, 12), bool] */;
  (%977, %978, %979, meta[relay.Constant][43] /* ty=Tensor[(624), bool] */, %980)
}

def @func_3386() -> (Tensor[(9, 8, 11), float64], Tensor[(1815), float64], float32) {
  %981 = @func_3297() /* ty=(Tensor[(9, 8, 11), float64],) */;
  %982 = @func_2051() /* ty=(Tensor[(1815), float64],) */;
  %983 = @func_3027() /* ty=(float32,) */;
  %984 = %981.0;
  %985 = %982.0;
  %986 = %983.0;
  (%984, %985, %986)
}

def @func_6600(%var_6559: Tensor[(1815), float32], %var_6580: Tensor[(1540), float64]) -> (Tensor[(4, 6, 11), int64], Tensor[(9, 8, 11), int16], Tensor[(1815), float32], Tensor[(1815), float32], Tensor[(9, 8, 11), int16], Tensor[(20, 2), float32], Tensor[(14, 11, 10), float64], Tensor[(1540), float64]) {
  %987 = @func_5276() /* ty=Tensor[(4, 6, 11), float64] */;
  %988 = @func_1932() /* ty=(Tensor[(9, 8, 11), int16], Tensor[(16, 10, 5), float64], float32, Tensor[(1815), float32], Tensor[(9, 8, 11), float64]) */;
  %989 = %988.2;
  %990 = cast(%987, dtype="int64") /* ty=Tensor[(4, 6, 11), int64] */;
  %991 = cast(%989, dtype="int64") /* ty=int64 */;
  %992 = @func_4338() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %993 = cast(%989, dtype="float32") /* ty=float32 */;
  %994 = cast(%var_6559, dtype="float32") /* ty=Tensor[(1815), float32] */;
  %995 = reshape(%993, newshape=[]) /* ty=float32 */;
  %996 = reshape(%994, newshape=[1815]) /* ty=Tensor[(1815), float32] */;
  %997 = @func_1812(%995, %996) /* ty=(Tensor[(9, 8, 11), int16], float32, float32, Tensor[(1815), float32]) */;
  %998 = cast(meta[relay.Constant][44] /* ty=Tensor[(20, 2), float32] */, dtype="float32") /* ty=Tensor[(20, 2), float32] */;
  %999 = reshape(%998, newshape=[40]) /* ty=Tensor[(40), float32] */;
  %1000 = @func_4927(%999) /* ty=(Tensor[(9, 8, 11), int16], Tensor[(4, 10, ?), int32], Tensor[(40), float32]) */;
  %1001 = cast(%var_6580, dtype="float64") /* ty=Tensor[(1540), float64] */;
  %1002 = reshape(%1001, newshape=[14, 11, 10]) /* ty=Tensor[(14, 11, 10), float64] */;
  %1003 = @func_6173(%1002) /* ty=(Tensor[(14, 11, 10), float64],) */;
  %1004 = bitwise_xor(%990, %991) /* ty=Tensor[(4, 6, 11), int64] */;
  %1005 = %992.0;
  %1006 = %997.3;
  %1007 = %1000.0;
  %1008 = %1003.0;
  (%1004, %1005, %1006, %var_6559, %1007, meta[relay.Constant][44] /* ty=Tensor[(20, 2), float32] */, %1008, %var_6580)
}

def @func_3808() -> (Tensor[(1815), float64],) {
  %1009 = @func_2051() /* ty=(Tensor[(1815), float64],) */;
  %1010 = %1009.0;
  (%1010,)
}

def @func_9387(%var_9385: Tensor[(1540), float64]) -> (Tensor[(9, 8, 11), int16], Tensor[(1540), float64], Tensor[(40), float32], Tensor[(121, 15), float32], Tensor[(1540), float64]) {
  %1011 = cast(meta[relay.Constant][45] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
  %1012 = cast(meta[relay.Constant][46] /* ty=Tensor[(121, 15), float32] */, dtype="float32") /* ty=Tensor[(121, 15), float32] */;
  %1013 = cast(%var_9385, dtype="float64") /* ty=Tensor[(1540), float64] */;
  %1014 = reshape(%1011, newshape=[10, 4]) /* ty=Tensor[(10, 4), float32] */;
  %1015 = reshape(%1012, newshape=[1815]) /* ty=Tensor[(1815), float32] */;
  %1016 = reshape(%1013, newshape=[1540]) /* ty=Tensor[(1540), float64] */;
  %1017 = @func_8269(%1014, %1015, %1016) /* ty=(Tensor[(4, 6, 11), float64], Tensor[(4, 10, 1), float32], Tensor[(10, 4), float32], Tensor[(14, 11, 10), float64], Tensor[(1815), float32], Tensor[(1540), float64]) */;
  %1018 = @func_1690() /* ty=Tensor[(9, 8, 11), int16] */;
  %1019 = %1017.5;
  (%1018, %1019, meta[relay.Constant][45] /* ty=Tensor[(40), float32] */, meta[relay.Constant][46] /* ty=Tensor[(121, 15), float32] */, %var_9385)
}

def @func_9086() -> Tensor[(98), float64] {
  %1020 = @func_7553() /* ty=(Tensor[(98), float64],) */;
  %1020.0
}

def @func_10102(%var_10087: Tensor[(624), bool]) -> (Tensor[(9, 8, 11), int16], Tensor[(1815), float32], Tensor[(624), bool]) {
  %1021 = @func_9255() /* ty=(Tensor[(13, 16, 3), float32], Tensor[(9, 8, 11), int16], Tensor[(98), float64]) */;
  %1022 = cast(%var_10087, dtype="bool") /* ty=Tensor[(624), bool] */;
  %1023 = reshape(%1022, newshape=[624]) /* ty=Tensor[(624), bool] */;
  %1024 = @func_9436(%1023) /* ty=(Tensor[(1815), float32], Tensor[(9, 8, 11), int16], Tensor[(624), bool]) */;
  %1025 = %1021.1;
  %1026 = %1024.0;
  (%1025, %1026, %var_10087)
}

def @func_7860() -> (Tensor[(4, 6, 11), float64], Tensor[(7, 2, 7), float64]) {
  %1027 = @func_7113() /* ty=(Tensor[(4, 6, 11), float64], Tensor[(96, 24), float32]) */;
  %1028 = @func_2996() /* ty=(Tensor[(1815), float64], float32, float32, Tensor[(7, 2, 7), float64], Tensor[(98), float64], Tensor[(96, 24), int32]) */;
  %1029 = %1027.0;
  %1030 = %1028.3;
  (%1029, %1030)
}

def @func_4356() -> (Tensor[(13, 16, 3), float32],) {
  %1031 = @func_3578() /* ty=Tensor[(13, 16, 3), float32] */;
  (%1031,)
}

def @func_4033() -> Tensor[(1815), float64] {
  %1032 = @func_2132() /* ty=(Tensor[(9, 8, 11), float64], Tensor[(1815), float64], Tensor[(1815), float64]) */;
  %1032.1
}

def @func_9596(%var_9588: Tensor[(1540), float64]) -> (Tensor[(40), float32], Tensor[(40), float32], Tensor[(1540), float64], Tensor[(9, 8, 11), int16]) {
  %1033 = @func_7265() /* ty=(Tensor[(40), float32],) */;
  %1034 = cast(%var_9588, dtype="float64") /* ty=Tensor[(1540), float64] */;
  %1035 = reshape(%1034, newshape=[1540]) /* ty=Tensor[(1540), float64] */;
  %1036 = @func_9387(%1035) /* ty=(Tensor[(9, 8, 11), int16], Tensor[(1540), float64], Tensor[(40), float32], Tensor[(121, 15), float32], Tensor[(1540), float64]) */;
  %1037 = @func_8681() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %1038 = %1033.0;
  %1039 = %1036.2;
  %1040 = %1037.0;
  (%1038, %1039, %var_9588, %1040)
}

def @func_5109() -> (Tensor[(16, 9, 14), float32], Tensor[(16, 9, 14), uint8]) {
  %1041 = @func_3749() /* ty=(Tensor[(16, 9, 14), uint8], Tensor[(16, 9, 14), float32]) */;
  %1042 = @func_2730() /* ty=Tensor[(16, 9, 14), float32] */;
  %1043 = %1041.0;
  (%1042, %1043)
}

def @func_10174() -> (Tensor[(16, 9, 14), float32],) {
  %1044 = @func_5109() /* ty=(Tensor[(16, 9, 14), float32], Tensor[(16, 9, 14), uint8]) */;
  %1045 = %1044.0;
  (%1045,)
}

def @func_3898() -> (Tensor[(9, 8, 11), int16],) {
  %1046 = @func_1614() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %1047 = %1046.0;
  (%1047,)
}

def @func_2132() -> (Tensor[(9, 8, 11), float64], Tensor[(1815), float64], Tensor[(1815), float64]) {
  %1048 = @func_1932() /* ty=(Tensor[(9, 8, 11), int16], Tensor[(16, 10, 5), float64], float32, Tensor[(1815), float32], Tensor[(9, 8, 11), float64]) */;
  %1049 = @func_2051() /* ty=(Tensor[(1815), float64],) */;
  %1050 = @func_2051() /* ty=(Tensor[(1815), float64],) */;
  %1051 = %1048.4;
  %1052 = %1049.0;
  %1053 = %1050.0;
  (%1051, %1052, %1053)
}

def @func_6817() -> (Tensor[(9, 8, 11), float32], Tensor[(9, 8, 11), float64], Tensor[(9, 8, 11), float64]) {
  %1054 = @func_5970() /* ty=(Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16], Tensor[(1815), float64]) */;
  %1055 = %1054.1;
  %1056 = cast(%1055, dtype="float64") /* ty=Tensor[(9, 8, 11), float64] */;
  %1057 = @func_6272() /* ty=Tensor[(9, 8, 11), float32] */;
  %1058 = @func_4055() /* ty=Tensor[(9, 8, 11), float64] */;
  %1059 = erf(%1056) /* ty=Tensor[(9, 8, 11), float64] */;
  (%1057, %1058, %1059)
}

def @func_7685(%var_7683: Tensor[(2304), float64]) -> (Tensor[(13, 16, 3), float32], Tensor[(1815), float64], Tensor[(9, 8, 11), float32], Tensor[(9, 8, 11), int16], Tensor[(2304), float64]) {
  %1060 = @func_3114() /* ty=(float32, Tensor[(13, 16, 3), float32], Tensor[(624), bool]) */;
  %1061 = @func_2051() /* ty=(Tensor[(1815), float64],) */;
  %1062 = @func_5542() /* ty=(Tensor[(9, 8, 11), float32], Tensor[(1815), float64]) */;
  %1063 = cast(%var_7683, dtype="float64") /* ty=Tensor[(2304), float64] */;
  %1064 = %1060.1;
  %1065 = cast(%1064, dtype="float32") /* ty=Tensor[(13, 16, 3), float32] */;
  %1066 = reshape(%1063, newshape=[2304]) /* ty=Tensor[(2304), float64] */;
  %1067 = reshape(%1065, newshape=[13, 16, 3]) /* ty=Tensor[(13, 16, 3), float32] */;
  %1068 = @func_6667(%1066, %1067) /* ty=(Tensor[(2304), float64], Tensor[(2304), float64], Tensor[(9, 8, 11), int16], Tensor[(16, 9, 14), uint8], Tensor[(13, 16, 3), int16]) */;
  %1069 = %1061.0;
  %1070 = %1062.0;
  %1071 = %1068.2;
  (%1064, %1069, %1070, %1071, %var_7683)
}

def @func_8940() -> (float32, Tensor[(13, 16, 3), float32], Tensor[(4, 156), bool], Tensor[(1815), float32]) {
  %1072 = @func_3386() /* ty=(Tensor[(9, 8, 11), float64], Tensor[(1815), float64], float32) */;
  %1073 = cast(meta[relay.Constant][47] /* ty=Tensor[(4, 156), bool] */, dtype="bool") /* ty=Tensor[(4, 156), bool] */;
  %1074 = reshape(%1073, newshape=[13, 16, 3]) /* ty=Tensor[(13, 16, 3), bool] */;
  %1075 = @func_4510() /* ty=(Tensor[(1815), float32], Tensor[(9, 8, 11), int16]) */;
  %1076 = %1072.2;
  %1077 = @func_129(%1074) /* ty=Tensor[(13, 16, 3), float32] */;
  %1078 = %1075.0;
  (%1076, %1077, meta[relay.Constant][47] /* ty=Tensor[(4, 156), bool] */, %1078)
}

def @func_7025() -> (Tensor[(1815), float64], Tensor[(9, 8, 11), float32]) {
  %1079 = @func_3156() /* ty=(Tensor[(9, 8, 11), float32],) */;
  %1080 = @func_4033() /* ty=Tensor[(1815), float64] */;
  %1081 = %1079.0;
  (%1080, %1081)
}

def @func_1756(%var_1742: Tensor[(4, 10, 1), float32]) -> (Tensor[(4, 10, 1), float32],) {
  %1082 = cast(%var_1742, dtype="float32") /* ty=Tensor[(4, 10, 1), float32] */;
  %1083 = cosh(%1082) /* ty=Tensor[(4, 10, 1), float32] */;
  (%1083,)
}

def @func_9950() -> (Tensor[(9, 8, 11), int16], Tensor[(16, 9, 14), float32]) {
  %1084 = @func_7206() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %1085 = @func_6219() /* ty=(Tensor[(16, 9, 14), float32],) */;
  %1086 = %1084.0;
  %1087 = %1085.0;
  (%1086, %1087)
}

def @func_8269(%var_8261: Tensor[(10, 4), float32], %var_8266: Tensor[(1815), float32], %var_8267: Tensor[(1540), float64]) -> (Tensor[(4, 6, 11), float64], Tensor[(4, 10, 1), float32], Tensor[(10, 4), float32], Tensor[(14, 11, 10), float64], Tensor[(1815), float32], Tensor[(1540), float64]) {
  %1088 = @func_7860() /* ty=(Tensor[(4, 6, 11), float64], Tensor[(7, 2, 7), float64]) */;
  %1089 = cast(%var_8261, dtype="float32") /* ty=Tensor[(10, 4), float32] */;
  %1090 = reshape(%1089, newshape=[4, 10, 1]) /* ty=Tensor[(4, 10, 1), float32] */;
  %1091 = @func_1756(%1090) /* ty=(Tensor[(4, 10, 1), float32],) */;
  %1092 = cast(%var_8266, dtype="float32") /* ty=Tensor[(1815), float32] */;
  %1093 = cast(%var_8267, dtype="float64") /* ty=Tensor[(1540), float64] */;
  %1094 = reshape(%1092, newshape=[1815]) /* ty=Tensor[(1815), float32] */;
  %1095 = reshape(%1093, newshape=[1540]) /* ty=Tensor[(1540), float64] */;
  %1096 = @func_6600(%1094, %1095) /* ty=(Tensor[(4, 6, 11), int64], Tensor[(9, 8, 11), int16], Tensor[(1815), float32], Tensor[(1815), float32], Tensor[(9, 8, 11), int16], Tensor[(20, 2), float32], Tensor[(14, 11, 10), float64], Tensor[(1540), float64]) */;
  %1097 = %1088.0;
  %1098 = %1091.0;
  %1099 = %1096.6;
  (%1097, %1098, %var_8261, %1099, %var_8266, %var_8267)
}

def @func_10229() -> Tensor[(9, 8, 11), int16] {
  %1100 = @func_2753() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %1100.0
}

def @func_2996() -> (Tensor[(1815), float64], float32, float32, Tensor[(7, 2, 7), float64], Tensor[(98), float64], Tensor[(96, 24), int32]) {
  %1101 = cast(8.06812f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %1102 = @func_2805() /* ty=Tensor[(1815), float64] */;
  %1103 = cast(%1102, dtype="float32") /* ty=Tensor[(1815), float32] */;
  %1104 = reshape(%1101, newshape=[]) /* ty=float32 */;
  %1105 = reshape(%1103, newshape=[1815]) /* ty=Tensor[(1815), float32] */;
  %1106 = @func_1335(%1104, %1105) /* ty=(Tensor[(16, 10, 5), bool], Tensor[(11, 15, 11), float32], float32, Tensor[(1815), float32], Tensor[(16, 10, 5), float64]) */;
  %1107 = cast(meta[relay.Constant][48] /* ty=Tensor[(98), float64] */, dtype="float64") /* ty=Tensor[(98), float64] */;
  %1108 = reshape(%1107, newshape=[7, 2, 7]) /* ty=Tensor[(7, 2, 7), float64] */;
  %1109 = @func_2564() /* ty=(Tensor[(1815), float64], Tensor[(16, 9, 14), float32], Tensor[(2016), float32], Tensor[(312, 2), bool], Tensor[(96, 24), int32], Tensor[(16, 9, 14), float32]) */;
  %1110 = %1106.2;
  %1111 = @func_1643(%1108) /* ty=Tensor[(7, 2, 7), float64] */;
  %1112 = %1109.4;
  (%1102, %1110, 8.06812f /* ty=float32 */, %1111, meta[relay.Constant][48] /* ty=Tensor[(98), float64] */, %1112)
}

def @func_11356() -> (Tensor[(13, 16, 3), float32], Tensor[(9, 8, 11), float32]) {
  %1113 = @func_3114() /* ty=(float32, Tensor[(13, 16, 3), float32], Tensor[(624), bool]) */;
  %1114 = @func_3156() /* ty=(Tensor[(9, 8, 11), float32],) */;
  %1115 = %1113.1;
  %1116 = %1114.0;
  (%1115, %1116)
}

def @func_6718() -> (Tensor[(9, 8, 11), int16],) {
  %1117 = @func_3898() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %1118 = %1117.0;
  (%1118,)
}

def @func_2484() -> Tensor[(9, 8, 11), float32] {
  %1119 = @func_1686() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %1120 = %1119.0;
  %1121 = cast(%1120, dtype="float32") /* ty=Tensor[(9, 8, 11), float32] */;
  cos(%1121) /* ty=Tensor[(9, 8, 11), float32] */
}

def @func_7838() -> (Tensor[(1815), float32],) {
  %1122 = @func_4510() /* ty=(Tensor[(1815), float32], Tensor[(9, 8, 11), int16]) */;
  %1123 = %1122.0;
  (%1123,)
}

def @func_14101() -> (Tensor[(9, 8, 11), float32], Tensor[(1815), float32], float32, Tensor[(98), float64], Tensor[(1815), float32], float32) {
  %1124 = @func_13321() /* ty=(Tensor[(9, 8, 11), float32], Tensor[(13, 16, 3), float32]) */;
  %1125 = @func_9302() /* ty=(Tensor[(1815), float32], Tensor[(13, 16, 3), float32]) */;
  %1126 = @func_11461() /* ty=(Tensor[(16, 9, 14), uint8], float32) */;
  %1127 = @func_12815() /* ty=(Tensor[(4, 6, 11), float64], Tensor[(8, 9, 7), float32], Tensor[(7, 2, 7), float64], Tensor[(98), float64]) */;
  %1128 = @func_7838() /* ty=(Tensor[(1815), float32],) */;
  %1129 = %1124.0;
  %1130 = %1125.0;
  %1131 = %1126.1;
  %1132 = %1127.3;
  %1133 = %1128.0;
  %1134 = @func_4827() /* ty=float32 */;
  (%1129, %1130, %1131, %1132, %1133, %1134)
}

def @func_10778(%var_10762: Tensor[(9, 15, 6), float64]) -> Tensor[(9, 15, 6), float64] {
  %1135 = cast(%var_10762, dtype="float64") /* ty=Tensor[(9, 15, 6), float64] */;
  acosh(%1135) /* ty=Tensor[(9, 15, 6), float64] */
}

def @func_13771(%var_13725: Tensor[(7, 14, 9), float64]) -> (Tensor[(7, 14, 9), float32], Tensor[(1815), float32], Tensor[(2304), float64], Tensor[(9, 8, 11), float64], Tensor[(9, 8, 11), int16]) {
  %1136 = cast(%var_13725, dtype="float64") /* ty=Tensor[(7, 14, 9), float64] */;
  %1137 = cos(%1136) /* ty=Tensor[(7, 14, 9), float64] */;
  %1138 = cast(%1137, dtype="float32") /* ty=Tensor[(7, 14, 9), float32] */;
  %1139 = shape_of(%var_13725, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1140 = cast(%var_13725, dtype="float32") /* ty=Tensor[(7, 14, 9), float32] */;
  %1141 = dyn.reshape(%1138, %1139, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1142 = cast(meta[relay.Constant][49] /* ty=Tensor[(2304), float64] */, dtype="float64") /* ty=Tensor[(2304), float64] */;
  %1143 = reshape(%1142, newshape=[2304]) /* ty=Tensor[(2304), float64] */;
  %1144 = @func_3541(%1143) /* ty=(Tensor[(9, 8, 11), float64], Tensor[(1815), float32], Tensor[(1815), float32], Tensor[(2304), float64], Tensor[(16, 9, 14), float32]) */;
  %1145 = @func_3386() /* ty=(Tensor[(9, 8, 11), float64], Tensor[(1815), float64], float32) */;
  %1146 = @func_5159() /* ty=(Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16]) */;
  %1147 = maximum(%1140, %1141) /* ty=Tensor[(7, 14, 9), float32] */;
  %1148 = %1144.1;
  %1149 = %1145.0;
  %1150 = %1146.1;
  (%1147, %1148, meta[relay.Constant][49] /* ty=Tensor[(2304), float64] */, %1149, %1150)
}

def @func_6000() -> (float32,) {
  %1151 = @func_4574() /* ty=float32 */;
  (%1151,)
}

def @func_13533() -> (Tensor[(13, 16, 3), int64], Tensor[(13, 16, 3), uint32]) {
  %1152 = @func_12438() /* ty=(Tensor[(13, 16, 3), float32],) */;
  %1153 = %1152.0;
  %1154 = cast(meta[relay.Constant][50] /* ty=Tensor[(13, 16, 3), float32] */, dtype="int64") /* ty=Tensor[(13, 16, 3), int64] */;
  %1155 = shape_of(%1153, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1156 = cast(%1153, dtype="int64") /* ty=Tensor[(13, 16, 3), int64] */;
  %1157 = dyn.reshape(%1154, %1155, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1158 = cast(%1153, dtype="uint32") /* ty=Tensor[(13, 16, 3), uint32] */;
  %1159 = shape_of(meta[relay.Constant][50] /* ty=Tensor[(13, 16, 3), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1160 = cast(meta[relay.Constant][50] /* ty=Tensor[(13, 16, 3), float32] */, dtype="uint32") /* ty=Tensor[(13, 16, 3), uint32] */;
  %1161 = dyn.reshape(%1158, %1159, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1162 = minimum(%1156, %1157) /* ty=Tensor[(13, 16, 3), int64] */;
  %1163 = bitwise_and(%1160, %1161) /* ty=Tensor[(13, 16, 3), uint32] */;
  (%1162, %1163)
}

def @func_1873() -> (Tensor[(9, 8, 11), float32], Tensor[(16, 9, 14), float32], Tensor[(2016), float32], Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16]) {
  %1164 = @func_1614() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %1165 = %1164.0;
  %1166 = cast(%1165, dtype="float32") /* ty=Tensor[(9, 8, 11), float32] */;
  %1167 = cast(meta[relay.Constant][51] /* ty=Tensor[(2016), float32] */, dtype="float32") /* ty=Tensor[(2016), float32] */;
  %1168 = reshape(%1167, newshape=[16, 9, 14]) /* ty=Tensor[(16, 9, 14), float32] */;
  %1169 = @func_1686() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %1170 = sinh(%1166) /* ty=Tensor[(9, 8, 11), float32] */;
  %1171 = @func_1583(%1168) /* ty=Tensor[(16, 9, 14), float32] */;
  %1172 = %1169.0;
  %1173 = @func_1690() /* ty=Tensor[(9, 8, 11), int16] */;
  (%1170, %1171, meta[relay.Constant][51] /* ty=Tensor[(2016), float32] */, %1172, %1173)
}

def @func_2564() -> (Tensor[(1815), float64], Tensor[(16, 9, 14), float32], Tensor[(2016), float32], Tensor[(312, 2), bool], Tensor[(96, 24), int32], Tensor[(16, 9, 14), float32]) {
  %1174 = @func_2051() /* ty=(Tensor[(1815), float64],) */;
  %1175 = cast(meta[relay.Constant][52] /* ty=Tensor[(2016), float32] */, dtype="float32") /* ty=Tensor[(2016), float32] */;
  %1176 = reshape(%1175, newshape=[16, 9, 14]) /* ty=Tensor[(16, 9, 14), float32] */;
  %1177 = cast(meta[relay.Constant][53] /* ty=Tensor[(96, 24), float64] */, dtype="float64") /* ty=Tensor[(96, 24), float64] */;
  %1178 = reshape(%1177, newshape=[2304]) /* ty=Tensor[(2304), float64] */;
  %1179 = @func_2433(%1178) /* ty=(Tensor[(1815), float32], Tensor[(11, 165), float32], Tensor[(2304), float64], Tensor[(312, 2), bool]) */;
  %1180 = @func_1932() /* ty=(Tensor[(9, 8, 11), int16], Tensor[(16, 10, 5), float64], float32, Tensor[(1815), float32], Tensor[(9, 8, 11), float64]) */;
  %1181 = %1180.2;
  %1182 = cast(meta[relay.Constant][53] /* ty=Tensor[(96, 24), float64] */, dtype="int32") /* ty=Tensor[(96, 24), int32] */;
  %1183 = cast(%1181, dtype="int32") /* ty=int32 */;
  %1184 = cast(meta[relay.Constant][52] /* ty=Tensor[(2016), float32] */, dtype="float32") /* ty=Tensor[(2016), float32] */;
  %1185 = reshape(%1184, newshape=[16, 9, 14]) /* ty=Tensor[(16, 9, 14), float32] */;
  %1186 = %1174.0;
  %1187 = @func_1583(%1176) /* ty=Tensor[(16, 9, 14), float32] */;
  %1188 = %1179.3;
  %1189 = bitwise_and(%1182, %1183) /* ty=Tensor[(96, 24), int32] */;
  %1190 = @func_1583(%1185) /* ty=Tensor[(16, 9, 14), float32] */;
  (%1186, %1187, meta[relay.Constant][52] /* ty=Tensor[(2016), float32] */, %1188, %1189, %1190)
}

def @func_1335(%var_1317: float32, %var_1318: Tensor[(1815), float32]) -> (Tensor[(16, 10, 5), bool], Tensor[(11, 15, 11), float32], float32, Tensor[(1815), float32], Tensor[(16, 10, 5), float64]) {
  %1191 = cast(meta[relay.Constant][55] /* ty=Tensor[(16, 10, 5), uint8] */, dtype="bool") /* ty=Tensor[(16, 10, 5), bool] */;
  %1192 = shape_of(meta[relay.Constant][54] /* ty=Tensor[(16, 10, 5), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1193 = cast(meta[relay.Constant][54] /* ty=Tensor[(16, 10, 5), uint8] */, dtype="bool") /* ty=Tensor[(16, 10, 5), bool] */;
  %1194 = dyn.reshape(%1191, %1192, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1195 = cast(%var_1317, dtype="float32") /* ty=float32 */;
  %1196 = cast(%var_1318, dtype="float32") /* ty=Tensor[(1815), float32] */;
  %1197 = reshape(%1195, newshape=[]) /* ty=float32 */;
  %1198 = reshape(%1196, newshape=[11, 15, 11]) /* ty=Tensor[(11, 15, 11), float32] */;
  %1199 = cast(meta[relay.Constant][55] /* ty=Tensor[(16, 10, 5), uint8] */, dtype="float32") /* ty=Tensor[(16, 10, 5), float32] */;
  %1200 = exp(%1199) /* ty=Tensor[(16, 10, 5), float32] */;
  %1201 = cast(%1200, dtype="float64") /* ty=Tensor[(16, 10, 5), float64] */;
  %1202 = greater_equal(%1193, %1194) /* ty=Tensor[(16, 10, 5), bool] */;
  %1203 = @func_384(%1197, %1198) /* ty=Tensor[(11, 15, 11), float32] */;
  %1204 = log10(%1201) /* ty=Tensor[(16, 10, 5), float64] */;
  (%1202, %1203, %var_1317, %var_1318, %1204)
}

def @func_8878(%var_8859: float32, %var_8860: Tensor[(16, 13, 1), float32]) -> Tensor[(16, 13, 1), float32] {
  %1205 = cast(%var_8859, dtype="float32") /* ty=float32 */;
  %1206 = cast(%var_8860, dtype="float32") /* ty=Tensor[(16, 13, 1), float32] */;
  power(%1205, %1206) /* ty=Tensor[(16, 13, 1), float32] */
}

def @func_14447() -> (float32,) {
  %1207 = @func_6000() /* ty=(float32,) */;
  %1208 = %1207.0;
  (%1208,)
}

def @func_6094() -> (Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16]) {
  %1209 = @func_5159() /* ty=(Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16]) */;
  %1210 = @func_3694() /* ty=Tensor[(9, 8, 11), int16] */;
  %1211 = %1209.0;
  (%1210, %1211)
}

def @func_7994() -> Tensor[(9, 8, 11), float64] {
  %1212 = @func_6094() /* ty=(Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16]) */;
  %1213 = %1212.1;
  %1214 = cast(%1213, dtype="float64") /* ty=Tensor[(9, 8, 11), float64] */;
  log(%1214) /* ty=Tensor[(9, 8, 11), float64] */
}

def @func_9800() -> (Tensor[(9, 8, 11), int16], Tensor[(98), float64]) {
  %1215 = @func_1614() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %1216 = @func_9022() /* ty=(Tensor[(98), float64], Tensor[(96, 24), uint32]) */;
  %1217 = %1215.0;
  %1218 = %1216.0;
  (%1217, %1218)
}

def @func_8360() -> (Tensor[(16, 9, 14), float32], Tensor[(9, 8, 11), int16]) {
  %1219 = @func_2730() /* ty=Tensor[(16, 9, 14), float32] */;
  %1220 = @func_3694() /* ty=Tensor[(9, 8, 11), int16] */;
  (%1219, %1220)
}

def @func_5010() -> (Tensor[(16, 9, 14), int8],) {
  %1221 = @func_3749() /* ty=(Tensor[(16, 9, 14), uint8], Tensor[(16, 9, 14), float32]) */;
  %1222 = %1221.0;
  %1223 = cast(%1222, dtype="float32") /* ty=Tensor[(16, 9, 14), float32] */;
  %1224 = tan(%1223) /* ty=Tensor[(16, 9, 14), float32] */;
  %1225 = cast(meta[relay.Constant][56] /* ty=Tensor[(16, 9, 14), float32] */, dtype="int8") /* ty=Tensor[(16, 9, 14), int8] */;
  %1226 = shape_of(%1224, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1227 = cast(%1224, dtype="int8") /* ty=Tensor[(16, 9, 14), int8] */;
  %1228 = dyn.reshape(%1225, %1226, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1229 = bitwise_xor(%1227, %1228) /* ty=Tensor[(16, 9, 14), int8] */;
  (%1229,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_4056() -> Tensor[(9, 8, 11), float64] {
  %1 = fn () -> Tensor[(9, 8, 11), float64] {
    %0 = @func_2860() /* ty=(Tensor[(9, 8, 11), float64], Tensor[(9, 8, 11), int16]) */;
    %0.0
  };
  %1() /* ty=Tensor[(9, 8, 11), float64] */
}

def @func_13923() -> (Tensor[(9, 8, 11), int16], Tensor[(624), bool], Tensor[(1815), float64]) {
  %7 = fn () -> (Tensor[(9, 8, 11), int16], Tensor[(624), bool], Tensor[(1815), float64]) {
    %2 = @func_5159() /* ty=(Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16]) */;
    %3 = @func_5542() /* ty=(Tensor[(9, 8, 11), float32], Tensor[(1815), float64]) */;
    %4 = %2.0;
    %5 = @func_6150() /* ty=Tensor[(624), bool] */;
    %6 = %3.1;
    (%4, %5, %6)
  };
  %7() /* ty=(Tensor[(9, 8, 11), int16], Tensor[(624), bool], Tensor[(1815), float64]) */
}

def @func_6603(%var_6601: Tensor[(1815), float32], %var_6602: Tensor[(1540), float64]) -> (Tensor[(4, 6, 11), int64], Tensor[(9, 8, 11), int16], Tensor[(1815), float32], Tensor[(1815), float32], Tensor[(9, 8, 11), int16], Tensor[(20, 2), float32], Tensor[(14, 11, 10), float64], Tensor[(1540), float64]) {
  %30 = fn (%var_6559: Tensor[(1815), float32], %var_6580: Tensor[(1540), float64]) -> (Tensor[(4, 6, 11), int64], Tensor[(9, 8, 11), int16], Tensor[(1815), float32], Tensor[(1815), float32], Tensor[(9, 8, 11), int16], Tensor[(20, 2), float32], Tensor[(14, 11, 10), float64], Tensor[(1540), float64]) {
    %8 = @func_5276() /* ty=Tensor[(4, 6, 11), float64] */;
    %9 = @func_1932() /* ty=(Tensor[(9, 8, 11), int16], Tensor[(16, 10, 5), float64], float32, Tensor[(1815), float32], Tensor[(9, 8, 11), float64]) */;
    %10 = %9.2;
    %11 = cast(%8, dtype="int64") /* ty=Tensor[(4, 6, 11), int64] */;
    %12 = cast(%10, dtype="int64") /* ty=int64 */;
    %13 = @func_4338() /* ty=(Tensor[(9, 8, 11), int16],) */;
    %14 = cast(%10, dtype="float32") /* ty=float32 */;
    %15 = cast(%var_6559, dtype="float32") /* ty=Tensor[(1815), float32] */;
    %16 = reshape(%14, newshape=[]) /* ty=float32 */;
    %17 = reshape(%15, newshape=[1815]) /* ty=Tensor[(1815), float32] */;
    %18 = @func_1812(%16, %17) /* ty=(Tensor[(9, 8, 11), int16], float32, float32, Tensor[(1815), float32]) */;
    %19 = cast(meta[relay.Constant][0] /* ty=Tensor[(20, 2), float32] */, dtype="float32") /* ty=Tensor[(20, 2), float32] */;
    %20 = reshape(%19, newshape=[40]) /* ty=Tensor[(40), float32] */;
    %21 = @func_4927(%20) /* ty=(Tensor[(9, 8, 11), int16], Tensor[(4, 10, ?), int32], Tensor[(40), float32]) */;
    %22 = cast(%var_6580, dtype="float64") /* ty=Tensor[(1540), float64] */;
    %23 = reshape(%22, newshape=[14, 11, 10]) /* ty=Tensor[(14, 11, 10), float64] */;
    %24 = @func_6173(%23) /* ty=(Tensor[(14, 11, 10), float64],) */;
    %25 = bitwise_xor(%11, %12) /* ty=Tensor[(4, 6, 11), int64] */;
    %26 = %13.0;
    %27 = %18.3;
    %28 = %21.0;
    %29 = %24.0;
    (%25, %26, %27, %var_6559, %28, meta[relay.Constant][0] /* ty=Tensor[(20, 2), float32] */, %29, %var_6580)
  };
  %30(%var_6601, %var_6602) /* ty=(Tensor[(4, 6, 11), int64], Tensor[(9, 8, 11), int16], Tensor[(1815), float32], Tensor[(1815), float32], Tensor[(9, 8, 11), int16], Tensor[(20, 2), float32], Tensor[(14, 11, 10), float64], Tensor[(1540), float64]) */
}

def @func_7994() -> Tensor[(9, 8, 11), float64] {
  %31 = @func_6094() /* ty=(Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16]) */;
  %32 = %31.1;
  %33 = cast(%32, dtype="float64") /* ty=Tensor[(9, 8, 11), float64] */;
  log(%33) /* ty=Tensor[(9, 8, 11), float64] */
}

def @func_11985() -> (Tensor[(16, 9, 14), float32],) {
  @func_11983() /* ty=(Tensor[(16, 9, 14), float32],) */
}

def @func_14101() -> (Tensor[(9, 8, 11), float32], Tensor[(1815), float32], float32, Tensor[(98), float64], Tensor[(1815), float32], float32) {
  %34 = @func_13321() /* ty=(Tensor[(9, 8, 11), float32], Tensor[(13, 16, 3), float32]) */;
  %35 = @func_9302() /* ty=(Tensor[(1815), float32], Tensor[(13, 16, 3), float32]) */;
  %36 = @func_11461() /* ty=(Tensor[(16, 9, 14), uint8], float32) */;
  %37 = @func_12815() /* ty=(Tensor[(4, 6, 11), float64], Tensor[(8, 9, 7), float32], Tensor[(7, 2, 7), float64], Tensor[(98), float64]) */;
  %38 = @func_7838() /* ty=(Tensor[(1815), float32],) */;
  %39 = %34.0;
  %40 = %35.0;
  %41 = %36.1;
  %42 = %37.3;
  %43 = %38.0;
  %44 = @func_4827() /* ty=float32 */;
  (%39, %40, %41, %42, %43, %44)
}

def @func_6152() -> Tensor[(624), bool] {
  @func_6150() /* ty=Tensor[(624), bool] */
}

def @func_4829() -> float32 {
  @func_4827() /* ty=float32 */
}

def @func_9982() -> Tensor[(16, 9, 14), uint8] {
  @func_6982() /* ty=Tensor[(16, 9, 14), uint8] */
}

def @func_7553() -> (Tensor[(98), float64],) {
  %45 = @func_2996() /* ty=(Tensor[(1815), float64], float32, float32, Tensor[(7, 2, 7), float64], Tensor[(98), float64], Tensor[(96, 24), int32]) */;
  %46 = %45.4;
  (%46,)
}

def @func_9984() -> Tensor[(16, 9, 14), uint8] {
  @func_9982() /* ty=Tensor[(16, 9, 14), uint8] */
}

def @func_14167() -> (Tensor[(1815), float64],) {
  %49 = fn () -> (Tensor[(1815), float64],) {
    %47 = @func_5542() /* ty=(Tensor[(9, 8, 11), float32], Tensor[(1815), float64]) */;
    %48 = %47.1;
    (%48,)
  };
  %49() /* ty=(Tensor[(1815), float64],) */
}

def @func_11169() -> Tensor[(9, 8, 11), int16] {
  %50 = fn () -> Tensor[(9, 8, 11), int16] {
    @func_9779() /* ty=Tensor[(9, 8, 11), int16] */
  };
  %50() /* ty=Tensor[(9, 8, 11), int16] */
}

def @func_11312(%var_11310: Tensor[(1815), float32]) -> (Tensor[(9, 8, 11), float64], Tensor[(1815), uint32], Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16]) {
  @func_11309(%var_11310) /* ty=(Tensor[(9, 8, 11), float64], Tensor[(1815), uint32], Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16]) */
}

def @func_12239() -> (Tensor[(98), float64], Tensor[(9, 8, 11), float32], Tensor[(9, 8, 11), float32]) {
  @func_12237() /* ty=(Tensor[(98), float64], Tensor[(9, 8, 11), float32], Tensor[(9, 8, 11), float32]) */
}

def @func_14951() -> (Tensor[(13, 16, 3), uint32], Tensor[(9, 8, 11), float32], Tensor[(624), float32]) {
  %51 = @func_13533() /* ty=(Tensor[(13, 16, 3), int64], Tensor[(13, 16, 3), uint32]) */;
  %52 = @func_12927() /* ty=(Tensor[(9, 8, 11), float32],) */;
  %53 = %51.1;
  %54 = cast(%53, dtype="float32") /* ty=Tensor[(13, 16, 3), float32] */;
  %55 = reshape(%54, newshape=[624]) /* ty=Tensor[(624), float32] */;
  %56 = @func_12312(%55) /* ty=(Tensor[(2016), float32], Tensor[(10, 4), float32], Tensor[(1815), float32], Tensor[(1540), float64], Tensor[(4, 6, 11), float32], Tensor[(13, 16, 3), float64], Tensor[(624), float32], Tensor[(9, 8, 11), float64]) */;
  %57 = %52.0;
  %58 = %56.6;
  (%53, %57, %58)
}

def @func_8457() -> (Tensor[(9, 8, 11), float64],) {
  @func_8455() /* ty=(Tensor[(9, 8, 11), float64],) */
}

def @func_8039() -> (Tensor[(9, 8, 11), int16],) {
  %60 = fn () -> (Tensor[(9, 8, 11), int16],) {
    %59 = @func_1690() /* ty=Tensor[(9, 8, 11), int16] */;
    (%59,)
  };
  %60() /* ty=(Tensor[(9, 8, 11), int16],) */
}

def @func_6001() -> (float32,) {
  %62 = fn () -> (float32,) {
    %61 = @func_4574() /* ty=float32 */;
    (%61,)
  };
  %62() /* ty=(float32,) */
}

def @func_9677(%var_9675: Tensor[(2, 1152), float64]) -> (Tensor[(13, 16, 3), float32], Tensor[(1815), float32], Tensor[(2, 1152), float64]) {
  @func_9674(%var_9675) /* ty=(Tensor[(13, 16, 3), float32], Tensor[(1815), float32], Tensor[(2, 1152), float64]) */
}

def @func_6984() -> Tensor[(16, 9, 14), uint8] {
  @func_6982() /* ty=Tensor[(16, 9, 14), uint8] */
}

def @func_12490() -> (Tensor[(9, 8, 11), int16],) {
  %63 = @func_4878() /* ty=(Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16]) */;
  %64 = %63.1;
  (%64,)
}

def @func_5866() -> (Tensor[(16, 9, 14), float32], Tensor[(40), float32], Tensor[(20, 2), float32], Tensor[(9, 8, 11), int16], Tensor[(11, 165), float32], Tensor[(16, 144), float64]) {
  @func_5864() /* ty=(Tensor[(16, 9, 14), float32], Tensor[(40), float32], Tensor[(20, 2), float32], Tensor[(9, 8, 11), int16], Tensor[(11, 165), float32], Tensor[(16, 144), float64]) */
}

def @func_9801() -> (Tensor[(9, 8, 11), int16], Tensor[(98), float64]) {
  %69 = fn () -> (Tensor[(9, 8, 11), int16], Tensor[(98), float64]) {
    %65 = @func_1614() /* ty=(Tensor[(9, 8, 11), int16],) */;
    %66 = @func_9022() /* ty=(Tensor[(98), float64], Tensor[(96, 24), uint32]) */;
    %67 = %65.0;
    %68 = %66.0;
    (%67, %68)
  };
  %69() /* ty=(Tensor[(9, 8, 11), int16], Tensor[(98), float64]) */
}

def @func_843(%var_840: Tensor[(16, 12, 12), float64], %var_841: Tensor[(16, 12, 12), float64], %var_842: Tensor[(624), bool]) -> (Tensor[(16, 12, 12), float64], Tensor[(13, 16, 3), float32], Tensor[(624), bool]) {
  %78 = fn (%var_818: Tensor[(16, 12, 12), float64], %var_819: Tensor[(16, 12, 12), float64], %var_826: Tensor[(624), bool]) -> (Tensor[(16, 12, 12), float64], Tensor[(13, 16, 3), float32], Tensor[(624), bool]) {
    %70 = cast(%var_819, dtype="float64") /* ty=Tensor[(16, 12, 12), float64] */;
    %71 = shape_of(%var_818, dtype="int32") /* ty=Tensor[(3), int32] */;
    %72 = cast(%var_818, dtype="float64") /* ty=Tensor[(16, 12, 12), float64] */;
    %73 = dyn.reshape(%70, %71, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %74 = cast(%var_826, dtype="bool") /* ty=Tensor[(624), bool] */;
    %75 = reshape(%74, newshape=[13, 16, 3]) /* ty=Tensor[(13, 16, 3), bool] */;
    %76 = floor_divide(%72, %73) /* ty=Tensor[(16, 12, 12), float64] */;
    %77 = @func_129(%75) /* ty=Tensor[(13, 16, 3), float32] */;
    (%76, %77, %var_826)
  };
  %78(%var_840, %var_841, %var_842) /* ty=(Tensor[(16, 12, 12), float64], Tensor[(13, 16, 3), float32], Tensor[(624), bool]) */
}

def @func_7115() -> (Tensor[(4, 6, 11), float64], Tensor[(96, 24), float32]) {
  @func_7113() /* ty=(Tensor[(4, 6, 11), float64], Tensor[(96, 24), float32]) */
}

def @func_1815(%var_1813: float32, %var_1814: Tensor[(1815), float32]) -> (Tensor[(9, 8, 11), int16], float32, float32, Tensor[(1815), float32]) {
  %87 = fn (%var_1807: float32, %var_1808: Tensor[(1815), float32]) -> (Tensor[(9, 8, 11), int16], float32, float32, Tensor[(1815), float32]) {
    %79 = @func_1614() /* ty=(Tensor[(9, 8, 11), int16],) */;
    %80 = cast(%var_1807, dtype="float32") /* ty=float32 */;
    %81 = cast(%var_1808, dtype="float32") /* ty=Tensor[(1815), float32] */;
    %82 = reshape(%80, newshape=[]) /* ty=float32 */;
    %83 = reshape(%81, newshape=[1815]) /* ty=Tensor[(1815), float32] */;
    %84 = @func_1335(%82, %83) /* ty=(Tensor[(16, 10, 5), bool], Tensor[(11, 15, 11), float32], float32, Tensor[(1815), float32], Tensor[(16, 10, 5), float64]) */;
    %85 = %79.0;
    %86 = %84.2;
    (%85, %86, %var_1807, %var_1808)
  };
  %87(%var_1813, %var_1814) /* ty=(Tensor[(9, 8, 11), int16], float32, float32, Tensor[(1815), float32]) */
}

def @func_7267() -> (Tensor[(40), float32],) {
  @func_7265() /* ty=(Tensor[(40), float32],) */
}

def @func_14760() -> (Tensor[(9, 8, 11), float32], Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16]) {
  %88 = @func_9057() /* ty=(Tensor[(9, 8, 11), float32], Tensor[(96, 24), float64]) */;
  %89 = @func_8109() /* ty=(float32, Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16], float32, Tensor[(16, 9, 14), float32], Tensor[(2016), float32]) */;
  %90 = %88.0;
  %91 = %89.1;
  %92 = @func_9779() /* ty=Tensor[(9, 8, 11), int16] */;
  (%90, %91, %92)
}

def @func_12817() -> (Tensor[(4, 6, 11), float64], Tensor[(8, 9, 7), float32], Tensor[(7, 2, 7), float64], Tensor[(98), float64]) {
  @func_12815() /* ty=(Tensor[(4, 6, 11), float64], Tensor[(8, 9, 7), float32], Tensor[(7, 2, 7), float64], Tensor[(98), float64]) */
}

def @func_2132() -> (Tensor[(9, 8, 11), float64], Tensor[(1815), float64], Tensor[(1815), float64]) {
  %93 = @func_1932() /* ty=(Tensor[(9, 8, 11), int16], Tensor[(16, 10, 5), float64], float32, Tensor[(1815), float32], Tensor[(9, 8, 11), float64]) */;
  %94 = @func_2051() /* ty=(Tensor[(1815), float64],) */;
  %95 = @func_2051() /* ty=(Tensor[(1815), float64],) */;
  %96 = %93.4;
  %97 = %94.0;
  %98 = %95.0;
  (%96, %97, %98)
}

def @func_14953() -> (Tensor[(13, 16, 3), uint32], Tensor[(9, 8, 11), float32], Tensor[(624), float32]) {
  @func_14951() /* ty=(Tensor[(13, 16, 3), uint32], Tensor[(9, 8, 11), float32], Tensor[(624), float32]) */
}

def @func_3578() -> Tensor[(13, 16, 3), float32] {
  %99 = @func_3413() /* ty=(Tensor[(13, 16, 3), float32],) */;
  %99.0
}

def @func_6355() -> (float32,) {
  @func_6353() /* ty=(float32,) */
}

def @func_12315(%var_12313: Tensor[(624), float32]) -> (Tensor[(2016), float32], Tensor[(10, 4), float32], Tensor[(1815), float32], Tensor[(1540), float64], Tensor[(4, 6, 11), float32], Tensor[(13, 16, 3), float64], Tensor[(624), float32], Tensor[(9, 8, 11), float64]) {
  @func_12312(%var_12313) /* ty=(Tensor[(2016), float32], Tensor[(10, 4), float32], Tensor[(1815), float32], Tensor[(1540), float64], Tensor[(4, 6, 11), float32], Tensor[(13, 16, 3), float64], Tensor[(624), float32], Tensor[(9, 8, 11), float64]) */
}

def @func_8053() -> Tensor[(16, 9, 14), float64] {
  @func_8051() /* ty=Tensor[(16, 9, 14), float64] */
}

def @func_8273(%var_8270: Tensor[(10, 4), float32], %var_8271: Tensor[(1815), float32], %var_8272: Tensor[(1540), float64]) -> (Tensor[(4, 6, 11), float64], Tensor[(4, 10, 1), float32], Tensor[(10, 4), float32], Tensor[(14, 11, 10), float64], Tensor[(1815), float32], Tensor[(1540), float64]) {
  %112 = fn (%var_8261: Tensor[(10, 4), float32], %var_8266: Tensor[(1815), float32], %var_8267: Tensor[(1540), float64]) -> (Tensor[(4, 6, 11), float64], Tensor[(4, 10, 1), float32], Tensor[(10, 4), float32], Tensor[(14, 11, 10), float64], Tensor[(1815), float32], Tensor[(1540), float64]) {
    %100 = @func_7860() /* ty=(Tensor[(4, 6, 11), float64], Tensor[(7, 2, 7), float64]) */;
    %101 = cast(%var_8261, dtype="float32") /* ty=Tensor[(10, 4), float32] */;
    %102 = reshape(%101, newshape=[4, 10, 1]) /* ty=Tensor[(4, 10, 1), float32] */;
    %103 = @func_1756(%102) /* ty=(Tensor[(4, 10, 1), float32],) */;
    %104 = cast(%var_8266, dtype="float32") /* ty=Tensor[(1815), float32] */;
    %105 = cast(%var_8267, dtype="float64") /* ty=Tensor[(1540), float64] */;
    %106 = reshape(%104, newshape=[1815]) /* ty=Tensor[(1815), float32] */;
    %107 = reshape(%105, newshape=[1540]) /* ty=Tensor[(1540), float64] */;
    %108 = @func_6600(%106, %107) /* ty=(Tensor[(4, 6, 11), int64], Tensor[(9, 8, 11), int16], Tensor[(1815), float32], Tensor[(1815), float32], Tensor[(9, 8, 11), int16], Tensor[(20, 2), float32], Tensor[(14, 11, 10), float64], Tensor[(1540), float64]) */;
    %109 = %100.0;
    %110 = %103.0;
    %111 = %108.6;
    (%109, %110, %var_8261, %111, %var_8266, %var_8267)
  };
  %112(%var_8270, %var_8271, %var_8272) /* ty=(Tensor[(4, 6, 11), float64], Tensor[(4, 10, 1), float32], Tensor[(10, 4), float32], Tensor[(14, 11, 10), float64], Tensor[(1815), float32], Tensor[(1540), float64]) */
}

def @func_2188(%var_2186: Tensor[(40), float32]) -> (Tensor[(9, 8, 11), int16], Tensor[(4, 10, ?), int32]) {
  @func_2185(%var_2186) /* ty=(Tensor[(9, 8, 11), int16], Tensor[(4, 10, ?), int32]) */
}

def @func_9674(%var_9661: Tensor[(2, 1152), float64]) -> (Tensor[(13, 16, 3), float32], Tensor[(1815), float32], Tensor[(2, 1152), float64]) {
  %113 = @func_7370() /* ty=(Tensor[(96, 24), float32], Tensor[(13, 16, 3), float32], Tensor[(624), bool]) */;
  %114 = cast(%var_9661, dtype="float64") /* ty=Tensor[(2, 1152), float64] */;
  %115 = reshape(%114, newshape=[2304]) /* ty=Tensor[(2304), float64] */;
  %116 = @func_3541(%115) /* ty=(Tensor[(9, 8, 11), float64], Tensor[(1815), float32], Tensor[(1815), float32], Tensor[(2304), float64], Tensor[(16, 9, 14), float32]) */;
  %117 = %113.1;
  %118 = %116.1;
  (%117, %118, %var_9661)
}

def @func_2807() -> Tensor[(1815), float64] {
  @func_2805() /* ty=Tensor[(1815), float64] */
}

def @func_5110() -> (Tensor[(16, 9, 14), float32], Tensor[(16, 9, 14), uint8]) {
  %122 = fn () -> (Tensor[(16, 9, 14), float32], Tensor[(16, 9, 14), uint8]) {
    %119 = @func_3749() /* ty=(Tensor[(16, 9, 14), uint8], Tensor[(16, 9, 14), float32]) */;
    %120 = @func_2730() /* ty=Tensor[(16, 9, 14), float32] */;
    %121 = %119.0;
    (%120, %121)
  };
  %122() /* ty=(Tensor[(16, 9, 14), float32], Tensor[(16, 9, 14), uint8]) */
}

def @func_11831() -> (Tensor[(624), bool],) {
  @func_11829() /* ty=(Tensor[(624), bool],) */
}

def @func_7860() -> (Tensor[(4, 6, 11), float64], Tensor[(7, 2, 7), float64]) {
  %123 = @func_7113() /* ty=(Tensor[(4, 6, 11), float64], Tensor[(96, 24), float32]) */;
  %124 = @func_2996() /* ty=(Tensor[(1815), float64], float32, float32, Tensor[(7, 2, 7), float64], Tensor[(98), float64], Tensor[(96, 24), int32]) */;
  %125 = %123.0;
  %126 = %124.3;
  (%125, %126)
}

def @func_11023() -> (Tensor[(40), float32], Tensor[(98, 4), float64], Tensor[(392), float64], Tensor[(98, 1), float64]) {
  %137 = fn () -> (Tensor[(40), float32], Tensor[(98, 4), float64], Tensor[(392), float64], Tensor[(98, 1), float64]) {
    %127 = @func_7265() /* ty=(Tensor[(40), float32],) */;
    %128 = cast(meta[relay.Constant][1] /* ty=Tensor[(392), float64] */, dtype="float64") /* ty=Tensor[(392), float64] */;
    %129 = cast(meta[relay.Constant][2] /* ty=Tensor[(98, 1), bool] */, dtype="bool") /* ty=Tensor[(98, 1), bool] */;
    %130 = reshape(%128, newshape=[98, 4]) /* ty=Tensor[(98, 4), float64] */;
    %131 = reshape(%129, newshape=[98]) /* ty=Tensor[(98), bool] */;
    %132 = @func_10439(%130, %131) /* ty=(Tensor[(98, 4), float64], Tensor[(11, 165), uint64], Tensor[(9, 8, 11), float32], Tensor[(98), uint8], Tensor[(13, 16, 3), float32], Tensor[(98), uint8]) */;
    %133 = cast(meta[relay.Constant][2] /* ty=Tensor[(98, 1), bool] */, dtype="float64") /* ty=Tensor[(98, 1), float64] */;
    %134 = %127.0;
    %135 = %132.0;
    %136 = asin(%133) /* ty=Tensor[(98, 1), float64] */;
    (%134, %135, meta[relay.Constant][1] /* ty=Tensor[(392), float64] */, %136)
  };
  %137() /* ty=(Tensor[(40), float32], Tensor[(98, 4), float64], Tensor[(392), float64], Tensor[(98, 1), float64]) */
}

def @func_131(%var_130: Tensor[(13, 16, 3), bool]) -> Tensor[(13, 16, 3), float32] {
  %149 = fn (%var_68: Tensor[(13, 16, 3), bool]) -> Tensor[(13, 16, 3), float32] {
    %138 = cast(%var_68, dtype="float64") /* ty=Tensor[(13, 16, 3), float64] */;
    %139 = log2(%138) /* ty=Tensor[(13, 16, 3), float64] */;
    %140 = cast(meta[relay.Constant][3] /* ty=Tensor[(13, 16, 3), bool] */, dtype="bool") /* ty=Tensor[(13, 16, 3), bool] */;
    %141 = shape_of(%var_68, dtype="int32") /* ty=Tensor[(3), int32] */;
    %142 = cast(%var_68, dtype="bool") /* ty=Tensor[(13, 16, 3), bool] */;
    %143 = dyn.reshape(%140, %141, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %144 = logical_or(%142, %143) /* ty=Tensor[(13, 16, 3), bool] */;
    %145 = cast(%144, dtype="float32") /* ty=Tensor[(13, 16, 3), float32] */;
    %146 = shape_of(%139, dtype="int32") /* ty=Tensor[(3), int32] */;
    %147 = cast(%139, dtype="float32") /* ty=Tensor[(13, 16, 3), float32] */;
    %148 = dyn.reshape(%145, %146, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    floor_divide(%147, %148) /* ty=Tensor[(13, 16, 3), float32] */
  };
  %149(%var_130) /* ty=Tensor[(13, 16, 3), float32] */
}

def @func_12492() -> (Tensor[(9, 8, 11), int16],) {
  @func_12490() /* ty=(Tensor[(9, 8, 11), int16],) */
}

def @func_10952() -> (Tensor[(9, 8, 11), float64],) {
  %151 = fn () -> (Tensor[(9, 8, 11), float64],) {
    %150 = @func_4055() /* ty=Tensor[(9, 8, 11), float64] */;
    (%150,)
  };
  %151() /* ty=(Tensor[(9, 8, 11), float64],) */
}

def @func_11218(%var_11175: Tensor[(1815), float64], %var_11195: Tensor[(40), float32]) -> (Tensor[(1815), int32], Tensor[(4, 10, ?), int64], Tensor[(40), float32]) {
  %152 = @func_2805() /* ty=Tensor[(1815), float64] */;
  %153 = cast(%var_11175, dtype="int32") /* ty=Tensor[(1815), int32] */;
  %154 = shape_of(%152, dtype="int32") /* ty=Tensor[(1), int32] */;
  %155 = cast(%152, dtype="int32") /* ty=Tensor[(1815), int32] */;
  %156 = dyn.reshape(%153, %154, newshape=[]) /* ty=Tensor[(?), int32] */;
  %157 = cast(%var_11195, dtype="float32") /* ty=Tensor[(40), float32] */;
  %158 = reshape(%157, newshape=[40]) /* ty=Tensor[(40), float32] */;
  %159 = @func_8611(%158) /* ty=(Tensor[(9, 8, 11), int16], Tensor[(16, 9, 14), int8], Tensor[(4, 6, 11), float64], Tensor[(9, 8, 11), int16], Tensor[(4, 10, ?), int64]) */;
  %160 = bitwise_or(%155, %156) /* ty=Tensor[(1815), int32] */;
  %161 = %159.4;
  (%160, %161, %var_11195)
}

def @func_13533() -> (Tensor[(13, 16, 3), int64], Tensor[(13, 16, 3), uint32]) {
  %162 = @func_12438() /* ty=(Tensor[(13, 16, 3), float32],) */;
  %163 = %162.0;
  %164 = cast(meta[relay.Constant][4] /* ty=Tensor[(13, 16, 3), float32] */, dtype="int64") /* ty=Tensor[(13, 16, 3), int64] */;
  %165 = shape_of(%163, dtype="int32") /* ty=Tensor[(3), int32] */;
  %166 = cast(%163, dtype="int64") /* ty=Tensor[(13, 16, 3), int64] */;
  %167 = dyn.reshape(%164, %165, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %168 = cast(%163, dtype="uint32") /* ty=Tensor[(13, 16, 3), uint32] */;
  %169 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(13, 16, 3), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %170 = cast(meta[relay.Constant][4] /* ty=Tensor[(13, 16, 3), float32] */, dtype="uint32") /* ty=Tensor[(13, 16, 3), uint32] */;
  %171 = dyn.reshape(%168, %169, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %172 = minimum(%166, %167) /* ty=Tensor[(13, 16, 3), int64] */;
  %173 = bitwise_and(%170, %171) /* ty=Tensor[(13, 16, 3), uint32] */;
  (%172, %173)
}

def @func_13019() -> (Tensor[(1815), float64], Tensor[(9, 8, 11), int16]) {
  %178 = fn () -> (Tensor[(1815), float64], Tensor[(9, 8, 11), int16]) {
    %174 = @func_4111() /* ty=(Tensor[(1815), float64], float32) */;
    %175 = @func_7206() /* ty=(Tensor[(9, 8, 11), int16],) */;
    %176 = %174.0;
    %177 = %175.0;
    (%176, %177)
  };
  %178() /* ty=(Tensor[(1815), float64], Tensor[(9, 8, 11), int16]) */
}

def @func_6924() -> (Tensor[(9, 8, 11), float32], Tensor[(1, 11, 14), int64], Tensor[(312, 2), bool], Tensor[(2304), float64]) {
  %192 = fn () -> (Tensor[(9, 8, 11), float32], Tensor[(1, 11, 14), int64], Tensor[(312, 2), bool], Tensor[(2304), float64]) {
    %179 = @func_4111() /* ty=(Tensor[(1815), float64], float32) */;
    %180 = %179.1;
    %181 = cast(%180, dtype="bool") /* ty=bool */;
    %182 = cast(meta[relay.Constant][5] /* ty=Tensor[(1, 11, 14), float32] */, dtype="bool") /* ty=Tensor[(1, 11, 14), bool] */;
    %183 = less_equal(%181, %182) /* ty=Tensor[(1, 11, 14), bool] */;
    %184 = cast(%183, dtype="int64") /* ty=Tensor[(1, 11, 14), int64] */;
    %185 = cast(%180, dtype="int64") /* ty=int64 */;
    %186 = cast(meta[relay.Constant][6] /* ty=Tensor[(2304), float64] */, dtype="float64") /* ty=Tensor[(2304), float64] */;
    %187 = reshape(%186, newshape=[2304]) /* ty=Tensor[(2304), float64] */;
    %188 = @func_2433(%187) /* ty=(Tensor[(1815), float32], Tensor[(11, 165), float32], Tensor[(2304), float64], Tensor[(312, 2), bool]) */;
    %189 = @func_6272() /* ty=Tensor[(9, 8, 11), float32] */;
    %190 = left_shift(%184, %185) /* ty=Tensor[(1, 11, 14), int64] */;
    %191 = %188.3;
    (%189, %190, %191, meta[relay.Constant][6] /* ty=Tensor[(2304), float64] */)
  };
  %192() /* ty=(Tensor[(9, 8, 11), float32], Tensor[(1, 11, 14), int64], Tensor[(312, 2), bool], Tensor[(2304), float64]) */
}

def @func_2285(%var_2284: Tensor[(1, 624), bool]) -> (Tensor[(9, 8, 11), int16], Tensor[(13, 16, 3), float32], Tensor[(1, 624), float32], Tensor[(9, 8, 11), int16]) {
  %202 = fn (%var_2255: Tensor[(1, 624), bool]) -> (Tensor[(9, 8, 11), int16], Tensor[(13, 16, 3), float32], Tensor[(1, 624), float32], Tensor[(9, 8, 11), int16]) {
    %193 = @func_1614() /* ty=(Tensor[(9, 8, 11), int16],) */;
    %194 = cast(%var_2255, dtype="bool") /* ty=Tensor[(1, 624), bool] */;
    %195 = reshape(%194, newshape=[13, 16, 3]) /* ty=Tensor[(13, 16, 3), bool] */;
    %196 = cast(%var_2255, dtype="float32") /* ty=Tensor[(1, 624), float32] */;
    %197 = @func_1614() /* ty=(Tensor[(9, 8, 11), int16],) */;
    %198 = %193.0;
    %199 = @func_129(%195) /* ty=Tensor[(13, 16, 3), float32] */;
    %200 = sinh(%196) /* ty=Tensor[(1, 624), float32] */;
    %201 = %197.0;
    (%198, %199, %200, %201)
  };
  %202(%var_2284) /* ty=(Tensor[(9, 8, 11), int16], Tensor[(13, 16, 3), float32], Tensor[(1, 624), float32], Tensor[(9, 8, 11), int16]) */
}

def @func_10964() -> (Tensor[(4, 6, 11), float64],) {
  @func_10962() /* ty=(Tensor[(4, 6, 11), float64],) */
}

def @func_4338() -> (Tensor[(9, 8, 11), int16],) {
  %203 = @func_1614() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %204 = %203.0;
  (%204,)
}

def @func_3631(%var_3624: Tensor[(13, 16, 3), float32]) -> Tensor[(13, 16, 3), float64] {
  %205 = @func_3578() /* ty=Tensor[(13, 16, 3), float32] */;
  %206 = cast(%var_3624, dtype="float64") /* ty=Tensor[(13, 16, 3), float64] */;
  %207 = shape_of(%205, dtype="int32") /* ty=Tensor[(3), int32] */;
  %208 = cast(%205, dtype="float64") /* ty=Tensor[(13, 16, 3), float64] */;
  %209 = dyn.reshape(%206, %207, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  divide(%208, %209) /* ty=Tensor[(13, 16, 3), float64] */
}

def @func_9705() -> (Tensor[(98), float64], Tensor[(1815), float32], Tensor[(2304), float64], Tensor[(1815), float64]) {
  %210 = cast(meta[relay.Constant][7] /* ty=Tensor[(2304), float64] */, dtype="float64") /* ty=Tensor[(2304), float64] */;
  %211 = reshape(%210, newshape=[2304]) /* ty=Tensor[(2304), float64] */;
  %212 = @func_3541(%211) /* ty=(Tensor[(9, 8, 11), float64], Tensor[(1815), float32], Tensor[(1815), float32], Tensor[(2304), float64], Tensor[(16, 9, 14), float32]) */;
  %213 = @func_4747() /* ty=(Tensor[(9, 8, 11), float64], Tensor[(1815), float64]) */;
  %214 = @func_9555() /* ty=Tensor[(98), float64] */;
  %215 = %212.2;
  %216 = %213.1;
  (%214, %215, meta[relay.Constant][7] /* ty=Tensor[(2304), float64] */, %216)
}

def @func_10557() -> Tensor[(9, 8, 11), float64] {
  @func_10555() /* ty=Tensor[(9, 8, 11), float64] */
}

def @func_12514() -> (Tensor[(96, 24), float32],) {
  %219 = fn () -> (Tensor[(96, 24), float32],) {
    %217 = @func_7370() /* ty=(Tensor[(96, 24), float32], Tensor[(13, 16, 3), float32], Tensor[(624), bool]) */;
    %218 = %217.0;
    (%218,)
  };
  %219() /* ty=(Tensor[(96, 24), float32],) */
}

def @func_9335() -> Tensor[(9, 8, 11), int16] {
  %220 = @func_6316() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %220.0
}

def @func_11358() -> (Tensor[(13, 16, 3), float32], Tensor[(9, 8, 11), float32]) {
  @func_11356() /* ty=(Tensor[(13, 16, 3), float32], Tensor[(9, 8, 11), float32]) */
}

def @func_11829() -> (Tensor[(624), bool],) {
  %221 = @func_7370() /* ty=(Tensor[(96, 24), float32], Tensor[(13, 16, 3), float32], Tensor[(624), bool]) */;
  %222 = %221.2;
  (%222,)
}

def @func_14503() -> Tensor[(9, 8, 11), int16] {
  %223 = @func_5159() /* ty=(Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16]) */;
  %223.0
}

def @func_7862() -> (Tensor[(4, 6, 11), float64], Tensor[(7, 2, 7), float64]) {
  @func_7860() /* ty=(Tensor[(4, 6, 11), float64], Tensor[(7, 2, 7), float64]) */
}

def @func_9389(%var_9388: Tensor[(1540), float64]) -> (Tensor[(9, 8, 11), int16], Tensor[(1540), float64], Tensor[(40), float32], Tensor[(121, 15), float32], Tensor[(1540), float64]) {
  %233 = fn (%var_9385: Tensor[(1540), float64]) -> (Tensor[(9, 8, 11), int16], Tensor[(1540), float64], Tensor[(40), float32], Tensor[(121, 15), float32], Tensor[(1540), float64]) {
    %224 = cast(meta[relay.Constant][8] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
    %225 = cast(meta[relay.Constant][9] /* ty=Tensor[(121, 15), float32] */, dtype="float32") /* ty=Tensor[(121, 15), float32] */;
    %226 = cast(%var_9385, dtype="float64") /* ty=Tensor[(1540), float64] */;
    %227 = reshape(%224, newshape=[10, 4]) /* ty=Tensor[(10, 4), float32] */;
    %228 = reshape(%225, newshape=[1815]) /* ty=Tensor[(1815), float32] */;
    %229 = reshape(%226, newshape=[1540]) /* ty=Tensor[(1540), float64] */;
    %230 = @func_8269(%227, %228, %229) /* ty=(Tensor[(4, 6, 11), float64], Tensor[(4, 10, 1), float32], Tensor[(10, 4), float32], Tensor[(14, 11, 10), float64], Tensor[(1815), float32], Tensor[(1540), float64]) */;
    %231 = @func_1690() /* ty=Tensor[(9, 8, 11), int16] */;
    %232 = %230.5;
    (%231, %232, meta[relay.Constant][8] /* ty=Tensor[(40), float32] */, meta[relay.Constant][9] /* ty=Tensor[(121, 15), float32] */, %var_9385)
  };
  %233(%var_9388) /* ty=(Tensor[(9, 8, 11), int16], Tensor[(1540), float64], Tensor[(40), float32], Tensor[(121, 15), float32], Tensor[(1540), float64]) */
}

def @func_2433(%var_2429: Tensor[(2304), float64]) -> (Tensor[(1815), float32], Tensor[(11, 165), float32], Tensor[(2304), float64], Tensor[(312, 2), bool]) {
  %234 = @func_2051() /* ty=(Tensor[(1815), float64],) */;
  %235 = %234.0;
  %236 = cast(%235, dtype="float32") /* ty=Tensor[(1815), float32] */;
  %237 = cast(%var_2429, dtype="float64") /* ty=Tensor[(2304), float64] */;
  %238 = cast(meta[relay.Constant][10] /* ty=Tensor[(312, 2), bool] */, dtype="bool") /* ty=Tensor[(312, 2), bool] */;
  %239 = cast(%235, dtype="float32") /* ty=Tensor[(1815), float32] */;
  %240 = reshape(%237, newshape=[2304]) /* ty=Tensor[(2304), float64] */;
  %241 = reshape(%238, newshape=[2, 312]) /* ty=Tensor[(2, 312), bool] */;
  %242 = reshape(%239, newshape=[11, 165]) /* ty=Tensor[(11, 165), float32] */;
  %243 = @func_2030(%240, %241, %242) /* ty=(Tensor[(9, 8, 11), int16], Tensor[(13, 16, 3), float32], Tensor[(2304), float64], Tensor[(2, 312), bool], float32, float32, Tensor[(11, 165), float32]) */;
  %244 = rsqrt(%236) /* ty=Tensor[(1815), float32] */;
  %245 = %243.6;
  (%244, %245, %var_2429, meta[relay.Constant][10] /* ty=Tensor[(312, 2), bool] */)
}

def @func_2185(%var_2159: Tensor[(40), float32]) -> (Tensor[(9, 8, 11), int16], Tensor[(4, 10, ?), int32]) {
  %246 = cast(%var_2159, dtype="float32") /* ty=Tensor[(40), float32] */;
  %247 = reshape(%246, newshape=[4, 10, 1]) /* ty=Tensor[(4, 10, 1), float32] */;
  %248 = @func_1756(%247) /* ty=(Tensor[(4, 10, 1), float32],) */;
  %249 = %248.0;
  %250 = cast(%var_2159, dtype="int32") /* ty=Tensor[(40), int32] */;
  %251 = shape_of(%249, dtype="int32") /* ty=Tensor[(3), int32] */;
  %252 = cast(%249, dtype="int32") /* ty=Tensor[(4, 10, 1), int32] */;
  %253 = dyn.reshape(%250, %251, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %254 = @func_1690() /* ty=Tensor[(9, 8, 11), int16] */;
  %255 = bitwise_xor(%252, %253) /* ty=Tensor[(4, 10, ?), int32] */;
  (%254, %255)
}

def @func_10989() -> Tensor[(13, 16, 3), float32] {
  %256 = @func_7370() /* ty=(Tensor[(96, 24), float32], Tensor[(13, 16, 3), float32], Tensor[(624), bool]) */;
  %256.1
}

def @func_10590() -> Tensor[(96, 24), int32] {
  %257 = @func_10494() /* ty=(Tensor[(16, 9, 14), float32], Tensor[(4, 156), bool], Tensor[(96, 24), int32]) */;
  %257.2
}

def @func_7687(%var_7686: Tensor[(2304), float64]) -> (Tensor[(13, 16, 3), float32], Tensor[(1815), float64], Tensor[(9, 8, 11), float32], Tensor[(9, 8, 11), int16], Tensor[(2304), float64]) {
  %270 = fn (%var_7683: Tensor[(2304), float64]) -> (Tensor[(13, 16, 3), float32], Tensor[(1815), float64], Tensor[(9, 8, 11), float32], Tensor[(9, 8, 11), int16], Tensor[(2304), float64]) {
    %258 = @func_3114() /* ty=(float32, Tensor[(13, 16, 3), float32], Tensor[(624), bool]) */;
    %259 = @func_2051() /* ty=(Tensor[(1815), float64],) */;
    %260 = @func_5542() /* ty=(Tensor[(9, 8, 11), float32], Tensor[(1815), float64]) */;
    %261 = cast(%var_7683, dtype="float64") /* ty=Tensor[(2304), float64] */;
    %262 = %258.1;
    %263 = cast(%262, dtype="float32") /* ty=Tensor[(13, 16, 3), float32] */;
    %264 = reshape(%261, newshape=[2304]) /* ty=Tensor[(2304), float64] */;
    %265 = reshape(%263, newshape=[13, 16, 3]) /* ty=Tensor[(13, 16, 3), float32] */;
    %266 = @func_6667(%264, %265) /* ty=(Tensor[(2304), float64], Tensor[(2304), float64], Tensor[(9, 8, 11), int16], Tensor[(16, 9, 14), uint8], Tensor[(13, 16, 3), int16]) */;
    %267 = %259.0;
    %268 = %260.0;
    %269 = %266.2;
    (%262, %267, %268, %269, %var_7683)
  };
  %270(%var_7686) /* ty=(Tensor[(13, 16, 3), float32], Tensor[(1815), float64], Tensor[(9, 8, 11), float32], Tensor[(9, 8, 11), int16], Tensor[(2304), float64]) */
}

def @func_9555() -> Tensor[(98), float64] {
  %271 = @func_7553() /* ty=(Tensor[(98), float64],) */;
  %271.0
}

def @func_3808() -> (Tensor[(1815), float64],) {
  %272 = @func_2051() /* ty=(Tensor[(1815), float64],) */;
  %273 = %272.0;
  (%273,)
}

def @func_10230() -> Tensor[(9, 8, 11), int16] {
  %275 = fn () -> Tensor[(9, 8, 11), int16] {
    %274 = @func_2753() /* ty=(Tensor[(9, 8, 11), int16],) */;
    %274.0
  };
  %275() /* ty=Tensor[(9, 8, 11), int16] */
}

def @func_10748() -> float32 {
  @func_10746() /* ty=float32 */
}

def @func_7085() -> (Tensor[(16, 9, 14), int8], Tensor[(1815), float64], Tensor[(1815), float32]) {
  @func_7083() /* ty=(Tensor[(16, 9, 14), int8], Tensor[(1815), float64], Tensor[(1815), float32]) */
}

def @func_6272() -> Tensor[(9, 8, 11), float32] {
  %276 = @func_5542() /* ty=(Tensor[(9, 8, 11), float32], Tensor[(1815), float64]) */;
  %276.0
}

def @func_7026() -> (Tensor[(1815), float64], Tensor[(9, 8, 11), float32]) {
  %280 = fn () -> (Tensor[(1815), float64], Tensor[(9, 8, 11), float32]) {
    %277 = @func_3156() /* ty=(Tensor[(9, 8, 11), float32],) */;
    %278 = @func_4033() /* ty=Tensor[(1815), float64] */;
    %279 = %277.0;
    (%278, %279)
  };
  %280() /* ty=(Tensor[(1815), float64], Tensor[(9, 8, 11), float32]) */
}

def @func_7541() -> Tensor[(13, 16, 3), float32] {
  %281 = @func_6072() /* ty=(Tensor[(13, 16, 3), float32],) */;
  %281.0
}

def @func_8206() -> Tensor[(9, 8, 11), float32] {
  @func_8204() /* ty=Tensor[(9, 8, 11), float32] */
}

def @func_14572() -> (Tensor[(9, 8, 11), float32],) {
  %282 = @func_6272() /* ty=Tensor[(9, 8, 11), float32] */;
  (%282,)
}

def @func_15019() -> (Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), float64], Tensor[(4, 10, 1), float32], Tensor[(40), float32]) {
  @func_15017() /* ty=(Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), float64], Tensor[(4, 10, 1), float32], Tensor[(40), float32]) */
}

def @func_4035() -> Tensor[(1815), float64] {
  @func_4033() /* ty=Tensor[(1815), float64] */
}

def @func_13447() -> (Tensor[(1815), float64], Tensor[(13, 16, 3), float32], Tensor[(1815), float64]) {
  %283 = @func_13075() /* ty=(Tensor[(1815), float64],) */;
  %284 = %283.0;
  %285 = @func_7541() /* ty=Tensor[(13, 16, 3), float32] */;
  %286 = @func_2805() /* ty=Tensor[(1815), float64] */;
  (%284, %285, %286)
}

def @func_13322() -> (Tensor[(9, 8, 11), float32], Tensor[(13, 16, 3), float32]) {
  %290 = fn () -> (Tensor[(9, 8, 11), float32], Tensor[(13, 16, 3), float32]) {
    %287 = @func_7370() /* ty=(Tensor[(96, 24), float32], Tensor[(13, 16, 3), float32], Tensor[(624), bool]) */;
    %288 = @func_12614() /* ty=Tensor[(9, 8, 11), float32] */;
    %289 = %287.1;
    (%288, %289)
  };
  %290() /* ty=(Tensor[(9, 8, 11), float32], Tensor[(13, 16, 3), float32]) */
}

def @func_14031(%var_14030: Tensor[(825), float32]) -> (Tensor[(16, 9, 14), float32], Tensor[(15, 5, 11), float32], Tensor[(825), float32], Tensor[(16, 9, 14), int8], Tensor[(98), float64], Tensor[(16, 9, 14), float64], Tensor[(9, 8, 11), int16], Tensor[(13, 16, 3), float32], float32, float32, float32) {
  %311 = fn (%var_13954: Tensor[(825), float32]) -> (Tensor[(16, 9, 14), float32], Tensor[(15, 5, 11), float32], Tensor[(825), float32], Tensor[(16, 9, 14), int8], Tensor[(98), float64], Tensor[(16, 9, 14), float64], Tensor[(9, 8, 11), int16], Tensor[(13, 16, 3), float32], float32, float32, float32) {
    %291 = cast(%var_13954, dtype="float32") /* ty=Tensor[(825), float32] */;
    %292 = reshape(%291, newshape=[15, 5, 11]) /* ty=Tensor[(15, 5, 11), float32] */;
    %293 = @func_7813(%292) /* ty=(Tensor[(15, 5, 11), float32],) */;
    %294 = @func_5010() /* ty=(Tensor[(16, 9, 14), int8],) */;
    %295 = @func_7553() /* ty=(Tensor[(98), float64],) */;
    %296 = @func_12490() /* ty=(Tensor[(9, 8, 11), int16],) */;
    %297 = @func_3413() /* ty=(Tensor[(13, 16, 3), float32],) */;
    %298 = @func_12583() /* ty=(float32,) */;
    %299 = @func_6353() /* ty=(float32,) */;
    %300 = @func_10621() /* ty=(Tensor[(2, 3, 14), bool], float32) */;
    %301 = @func_2730() /* ty=Tensor[(16, 9, 14), float32] */;
    %302 = %293.0;
    %303 = %294.0;
    %304 = %295.0;
    %305 = @func_8051() /* ty=Tensor[(16, 9, 14), float64] */;
    %306 = %296.0;
    %307 = %297.0;
    %308 = %298.0;
    %309 = %299.0;
    %310 = %300.1;
    (%301, %302, %var_13954, %303, %304, %305, %306, %307, %308, %309, %310)
  };
  %311(%var_14030) /* ty=(Tensor[(16, 9, 14), float32], Tensor[(15, 5, 11), float32], Tensor[(825), float32], Tensor[(16, 9, 14), int8], Tensor[(98), float64], Tensor[(16, 9, 14), float64], Tensor[(9, 8, 11), int16], Tensor[(13, 16, 3), float32], float32, float32, float32) */
}

def @func_11083() -> Tensor[(8, 9, 7), float32] {
  %312 = @func_4116() /* ty=(Tensor[(8, 9, 7), float32],) */;
  %312.0
}

def @func_12908(%var_12885: Tensor[(1815), float32]) -> (Tensor[(16, 9, 14), uint8], Tensor[(9, 8, 11), float64], Tensor[(1815), float32], float32, Tensor[(9, 8, 11), bool]) {
  %313 = cast(%var_12885, dtype="float32") /* ty=Tensor[(1815), float32] */;
  %314 = reshape(%313, newshape=[1815]) /* ty=Tensor[(1815), float32] */;
  %315 = @func_11309(%314) /* ty=(Tensor[(9, 8, 11), float64], Tensor[(1815), uint32], Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16]) */;
  %316 = @func_6000() /* ty=(float32,) */;
  %317 = @func_9478() /* ty=(Tensor[(9, 8, 11), float64],) */;
  %318 = %317.0;
  %319 = @func_12237() /* ty=(Tensor[(98), float64], Tensor[(9, 8, 11), float32], Tensor[(9, 8, 11), float32]) */;
  %320 = %319.2;
  %321 = cast(%320, dtype="bool") /* ty=Tensor[(9, 8, 11), bool] */;
  %322 = shape_of(%318, dtype="int32") /* ty=Tensor[(3), int32] */;
  %323 = cast(%318, dtype="bool") /* ty=Tensor[(9, 8, 11), bool] */;
  %324 = dyn.reshape(%321, %322, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %325 = @func_11558() /* ty=Tensor[(16, 9, 14), uint8] */;
  %326 = %315.0;
  %327 = %316.0;
  %328 = less_equal(%323, %324) /* ty=Tensor[(9, 8, 11), bool] */;
  (%325, %326, %var_12885, %327, %328)
}

def @func_11222(%var_11220: Tensor[(1815), float64], %var_11221: Tensor[(40), float32]) -> (Tensor[(1815), int32], Tensor[(4, 10, ?), int64], Tensor[(40), float32]) {
  @func_11218(%var_11220, %var_11221) /* ty=(Tensor[(1815), int32], Tensor[(4, 10, ?), int64], Tensor[(40), float32]) */
}

def @func_2436(%var_2434: Tensor[(2304), float64]) -> (Tensor[(1815), float32], Tensor[(11, 165), float32], Tensor[(2304), float64], Tensor[(312, 2), bool]) {
  @func_2433(%var_2434) /* ty=(Tensor[(1815), float32], Tensor[(11, 165), float32], Tensor[(2304), float64], Tensor[(312, 2), bool]) */
}

def @func_11245() -> (Tensor[(9, 8, 11), int16],) {
  @func_11243() /* ty=(Tensor[(9, 8, 11), int16],) */
}

def @func_2134() -> (Tensor[(9, 8, 11), float64], Tensor[(1815), float64], Tensor[(1815), float64]) {
  @func_2132() /* ty=(Tensor[(9, 8, 11), float64], Tensor[(1815), float64], Tensor[(1815), float64]) */
}

def @func_3634(%var_3632: Tensor[(13, 16, 3), float32]) -> Tensor[(13, 16, 3), float64] {
  @func_3631(%var_3632) /* ty=Tensor[(13, 16, 3), float64] */
}

def @func_6667(%var_6623: Tensor[(2304), float64], %var_6647: Tensor[(13, 16, 3), float32]) -> (Tensor[(2304), float64], Tensor[(2304), float64], Tensor[(9, 8, 11), int16], Tensor[(16, 9, 14), uint8], Tensor[(13, 16, 3), int16]) {
  %329 = cast(%var_6623, dtype="float64") /* ty=Tensor[(2304), float64] */;
  %330 = reshape(%329, newshape=[2304]) /* ty=Tensor[(2304), float64] */;
  %331 = @func_2433(%330) /* ty=(Tensor[(1815), float32], Tensor[(11, 165), float32], Tensor[(2304), float64], Tensor[(312, 2), bool]) */;
  %332 = @func_5159() /* ty=(Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16]) */;
  %333 = @func_6072() /* ty=(Tensor[(13, 16, 3), float32],) */;
  %334 = %333.0;
  %335 = cast(%var_6647, dtype="int16") /* ty=Tensor[(13, 16, 3), int16] */;
  %336 = shape_of(%334, dtype="int32") /* ty=Tensor[(3), int32] */;
  %337 = cast(%334, dtype="int16") /* ty=Tensor[(13, 16, 3), int16] */;
  %338 = dyn.reshape(%335, %336, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %339 = %331.2;
  %340 = %332.0;
  %341 = @func_5354() /* ty=Tensor[(16, 9, 14), uint8] */;
  %342 = add(%337, %338) /* ty=Tensor[(13, 16, 3), int16] */;
  (%339, %var_6623, %340, %341, %342)
}

def @func_3028() -> (float32,) {
  %345 = fn () -> (float32,) {
    %343 = @func_2996() /* ty=(Tensor[(1815), float64], float32, float32, Tensor[(7, 2, 7), float64], Tensor[(98), float64], Tensor[(96, 24), int32]) */;
    %344 = %343.2;
    (%344,)
  };
  %345() /* ty=(float32,) */
}

def @func_8773() -> (float32, Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), float32]) {
  %346 = @func_3027() /* ty=(float32,) */;
  %347 = @func_6718() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %348 = %346.0;
  %349 = %347.0;
  %350 = @func_6272() /* ty=Tensor[(9, 8, 11), float32] */;
  (%348, %349, %350)
}

def @func_12312(%var_12294: Tensor[(624), float32]) -> (Tensor[(2016), float32], Tensor[(10, 4), float32], Tensor[(1815), float32], Tensor[(1540), float64], Tensor[(4, 6, 11), float32], Tensor[(13, 16, 3), float64], Tensor[(624), float32], Tensor[(9, 8, 11), float64]) {
  %351 = @func_2564() /* ty=(Tensor[(1815), float64], Tensor[(16, 9, 14), float32], Tensor[(2016), float32], Tensor[(312, 2), bool], Tensor[(96, 24), int32], Tensor[(16, 9, 14), float32]) */;
  %352 = cast(meta[relay.Constant][11] /* ty=Tensor[(10, 4), float32] */, dtype="float32") /* ty=Tensor[(10, 4), float32] */;
  %353 = cast(meta[relay.Constant][12] /* ty=Tensor[(1815), float32] */, dtype="float32") /* ty=Tensor[(1815), float32] */;
  %354 = cast(meta[relay.Constant][13] /* ty=Tensor[(1540), float64] */, dtype="float64") /* ty=Tensor[(1540), float64] */;
  %355 = reshape(%352, newshape=[10, 4]) /* ty=Tensor[(10, 4), float32] */;
  %356 = reshape(%353, newshape=[1815]) /* ty=Tensor[(1815), float32] */;
  %357 = reshape(%354, newshape=[1540]) /* ty=Tensor[(1540), float64] */;
  %358 = @func_8269(%355, %356, %357) /* ty=(Tensor[(4, 6, 11), float64], Tensor[(4, 10, 1), float32], Tensor[(10, 4), float32], Tensor[(14, 11, 10), float64], Tensor[(1815), float32], Tensor[(1540), float64]) */;
  %359 = %358.0;
  %360 = cast(%359, dtype="float32") /* ty=Tensor[(4, 6, 11), float32] */;
  %361 = cast(%var_12294, dtype="float32") /* ty=Tensor[(624), float32] */;
  %362 = reshape(%361, newshape=[13, 16, 3]) /* ty=Tensor[(13, 16, 3), float32] */;
  %363 = @func_9478() /* ty=(Tensor[(9, 8, 11), float64],) */;
  %364 = %351.2;
  %365 = atan(%360) /* ty=Tensor[(4, 6, 11), float32] */;
  %366 = @func_3631(%362) /* ty=Tensor[(13, 16, 3), float64] */;
  %367 = %363.0;
  (%364, meta[relay.Constant][11] /* ty=Tensor[(10, 4), float32] */, meta[relay.Constant][12] /* ty=Tensor[(1815), float32] */, meta[relay.Constant][13] /* ty=Tensor[(1540), float64] */, %365, %366, %var_12294, %367)
}

def @func_12615() -> Tensor[(9, 8, 11), float32] {
  %369 = fn () -> Tensor[(9, 8, 11), float32] {
    %368 = @func_6817() /* ty=(Tensor[(9, 8, 11), float32], Tensor[(9, 8, 11), float64], Tensor[(9, 8, 11), float64]) */;
    %368.0
  };
  %369() /* ty=Tensor[(9, 8, 11), float32] */
}

def @func_12927() -> (Tensor[(9, 8, 11), float32],) {
  %370 = @func_6923() /* ty=(Tensor[(9, 8, 11), float32], Tensor[(1, 11, 14), int64], Tensor[(312, 2), bool], Tensor[(2304), float64]) */;
  %371 = %370.0;
  (%371,)
}

def @func_8942() -> (float32, Tensor[(13, 16, 3), float32], Tensor[(4, 156), bool], Tensor[(1815), float32]) {
  @func_8940() /* ty=(float32, Tensor[(13, 16, 3), float32], Tensor[(4, 156), bool], Tensor[(1815), float32]) */
}

def @func_2996() -> (Tensor[(1815), float64], float32, float32, Tensor[(7, 2, 7), float64], Tensor[(98), float64], Tensor[(96, 24), int32]) {
  %372 = cast(8.06812f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %373 = @func_2805() /* ty=Tensor[(1815), float64] */;
  %374 = cast(%373, dtype="float32") /* ty=Tensor[(1815), float32] */;
  %375 = reshape(%372, newshape=[]) /* ty=float32 */;
  %376 = reshape(%374, newshape=[1815]) /* ty=Tensor[(1815), float32] */;
  %377 = @func_1335(%375, %376) /* ty=(Tensor[(16, 10, 5), bool], Tensor[(11, 15, 11), float32], float32, Tensor[(1815), float32], Tensor[(16, 10, 5), float64]) */;
  %378 = cast(meta[relay.Constant][14] /* ty=Tensor[(98), float64] */, dtype="float64") /* ty=Tensor[(98), float64] */;
  %379 = reshape(%378, newshape=[7, 2, 7]) /* ty=Tensor[(7, 2, 7), float64] */;
  %380 = @func_2564() /* ty=(Tensor[(1815), float64], Tensor[(16, 9, 14), float32], Tensor[(2016), float32], Tensor[(312, 2), bool], Tensor[(96, 24), int32], Tensor[(16, 9, 14), float32]) */;
  %381 = %377.2;
  %382 = @func_1643(%379) /* ty=Tensor[(7, 2, 7), float64] */;
  %383 = %380.4;
  (%373, %381, 8.06812f /* ty=float32 */, %382, meta[relay.Constant][14] /* ty=Tensor[(98), float64] */, %383)
}

def @func_9895() -> (Tensor[(98), float64], Tensor[(1815), float64]) {
  %387 = fn () -> (Tensor[(98), float64], Tensor[(1815), float64]) {
    %384 = @func_4111() /* ty=(Tensor[(1815), float64], float32) */;
    %385 = @func_9086() /* ty=Tensor[(98), float64] */;
    %386 = %384.0;
    (%385, %386)
  };
  %387() /* ty=(Tensor[(98), float64], Tensor[(1815), float64]) */
}

def @func_5011() -> (Tensor[(16, 9, 14), int8],) {
  %397 = fn () -> (Tensor[(16, 9, 14), int8],) {
    %388 = @func_3749() /* ty=(Tensor[(16, 9, 14), uint8], Tensor[(16, 9, 14), float32]) */;
    %389 = %388.0;
    %390 = cast(%389, dtype="float32") /* ty=Tensor[(16, 9, 14), float32] */;
    %391 = tan(%390) /* ty=Tensor[(16, 9, 14), float32] */;
    %392 = cast(meta[relay.Constant][15] /* ty=Tensor[(16, 9, 14), float32] */, dtype="int8") /* ty=Tensor[(16, 9, 14), int8] */;
    %393 = shape_of(%391, dtype="int32") /* ty=Tensor[(3), int32] */;
    %394 = cast(%391, dtype="int8") /* ty=Tensor[(16, 9, 14), int8] */;
    %395 = dyn.reshape(%392, %393, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %396 = bitwise_xor(%394, %395) /* ty=Tensor[(16, 9, 14), int8] */;
    (%396,)
  };
  %397() /* ty=(Tensor[(16, 9, 14), int8],) */
}

def @func_9135() -> Tensor[(11, 165), float32] {
  %399 = fn () -> Tensor[(11, 165), float32] {
    %398 = @func_5864() /* ty=(Tensor[(16, 9, 14), float32], Tensor[(40), float32], Tensor[(20, 2), float32], Tensor[(9, 8, 11), int16], Tensor[(11, 165), float32], Tensor[(16, 144), float64]) */;
    %398.4
  };
  %399() /* ty=Tensor[(11, 165), float32] */
}

def @func_7394() -> (Tensor[(4, 6, 11), float64],) {
  %400 = @func_5276() /* ty=Tensor[(4, 6, 11), float64] */;
  (%400,)
}

def @func_12929() -> (Tensor[(9, 8, 11), float32],) {
  @func_12927() /* ty=(Tensor[(9, 8, 11), float32],) */
}

def @func_12407() -> Tensor[(16, 9, 14), float32] {
  %402 = fn () -> Tensor[(16, 9, 14), float32] {
    %401 = @func_2564() /* ty=(Tensor[(1815), float64], Tensor[(16, 9, 14), float32], Tensor[(2016), float32], Tensor[(312, 2), bool], Tensor[(96, 24), int32], Tensor[(16, 9, 14), float32]) */;
    %401.1
  };
  %402() /* ty=Tensor[(16, 9, 14), float32] */
}

def @func_5321() -> (Tensor[(1815), float64],) {
  %403 = @func_4747() /* ty=(Tensor[(9, 8, 11), float64], Tensor[(1815), float64]) */;
  %404 = %403.1;
  (%404,)
}

def @func_3810() -> (Tensor[(1815), float64],) {
  @func_3808() /* ty=(Tensor[(1815), float64],) */
}

def @func_7113() -> (Tensor[(4, 6, 11), float64], Tensor[(96, 24), float32]) {
  %405 = @func_5276() /* ty=Tensor[(4, 6, 11), float64] */;
  %406 = @func_3986() /* ty=Tensor[(96, 24), float32] */;
  (%405, %406)
}

def @func_9088() -> Tensor[(98), float64] {
  @func_9086() /* ty=Tensor[(98), float64] */
}

def @func_12438() -> (Tensor[(13, 16, 3), float32],) {
  %407 = @func_4356() /* ty=(Tensor[(13, 16, 3), float32],) */;
  %408 = %407.0;
  (%408,)
}

def @func_14320() -> (float32,) {
  @func_14318() /* ty=(float32,) */
}

def @func_7838() -> (Tensor[(1815), float32],) {
  %409 = @func_4510() /* ty=(Tensor[(1815), float32], Tensor[(9, 8, 11), int16]) */;
  %410 = %409.0;
  (%410,)
}

def @func_1339(%var_1337: float32, %var_1338: Tensor[(1815), float32]) -> (Tensor[(16, 10, 5), bool], Tensor[(11, 15, 11), float32], float32, Tensor[(1815), float32], Tensor[(16, 10, 5), float64]) {
  @func_1335(%var_1337, %var_1338) /* ty=(Tensor[(16, 10, 5), bool], Tensor[(11, 15, 11), float32], float32, Tensor[(1815), float32], Tensor[(16, 10, 5), float64]) */
}

def @func_4358() -> (Tensor[(13, 16, 3), float32],) {
  @func_4356() /* ty=(Tensor[(13, 16, 3), float32],) */
}

def @func_8166(%var_8164: Tensor[(12, 12, 2), float64], %var_8165: Tensor[(12, 12, 2), float64]) -> Tensor[(12, 12, 2), float64] {
  @func_8162(%var_8164, %var_8165) /* ty=Tensor[(12, 12, 2), float64] */
}

def @func_2754() -> (Tensor[(9, 8, 11), int16],) {
  %413 = fn () -> (Tensor[(9, 8, 11), int16],) {
    %411 = @func_1614() /* ty=(Tensor[(9, 8, 11), int16],) */;
    %412 = %411.0;
    (%412,)
  };
  %413() /* ty=(Tensor[(9, 8, 11), int16],) */
}

def @func_4644(%var_4643: Tensor[(98), float64]) -> (Tensor[(1815), float64], Tensor[(9, 8, 11), int16], Tensor[(7, 2, 7), float64], Tensor[(98), float64]) {
  %421 = fn (%var_4639: Tensor[(98), float64]) -> (Tensor[(1815), float64], Tensor[(9, 8, 11), int16], Tensor[(7, 2, 7), float64], Tensor[(98), float64]) {
    %414 = @func_2132() /* ty=(Tensor[(9, 8, 11), float64], Tensor[(1815), float64], Tensor[(1815), float64]) */;
    %415 = @func_3898() /* ty=(Tensor[(9, 8, 11), int16],) */;
    %416 = cast(%var_4639, dtype="float64") /* ty=Tensor[(98), float64] */;
    %417 = reshape(%416, newshape=[7, 2, 7]) /* ty=Tensor[(7, 2, 7), float64] */;
    %418 = %414.2;
    %419 = %415.0;
    %420 = @func_1643(%417) /* ty=Tensor[(7, 2, 7), float64] */;
    (%418, %419, %420, %var_4639)
  };
  %421(%var_4643) /* ty=(Tensor[(1815), float64], Tensor[(9, 8, 11), int16], Tensor[(7, 2, 7), float64], Tensor[(98), float64]) */
}

def @func_11983() -> (Tensor[(16, 9, 14), float32],) {
  %422 = @func_5864() /* ty=(Tensor[(16, 9, 14), float32], Tensor[(40), float32], Tensor[(20, 2), float32], Tensor[(9, 8, 11), int16], Tensor[(11, 165), float32], Tensor[(16, 144), float64]) */;
  %423 = %422.0;
  (%423,)
}

def @func_12155(%var_12154: Tensor[(6), float64]) -> (Tensor[(20, 2), float64], Tensor[(9, 8, 11), float64], Tensor[(1815), float64], Tensor[(6), float64], float32, Tensor[(1815), float64], Tensor[(1540, ?), uint16]) {
  %445 = fn (%var_12135: Tensor[(6), float64]) -> (Tensor[(20, 2), float64], Tensor[(9, 8, 11), float64], Tensor[(1815), float64], Tensor[(6), float64], float32, Tensor[(1815), float64], Tensor[(1540, ?), uint16]) {
    %424 = @func_11528() /* ty=(Tensor[(9, 8, 11), float64], Tensor[(20, 2), float64]) */;
    %425 = @func_10951() /* ty=(Tensor[(9, 8, 11), float64],) */;
    %426 = cast(%var_12135, dtype="float64") /* ty=Tensor[(6), float64] */;
    %427 = cast(3.37704f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %428 = reshape(%426, newshape=[6]) /* ty=Tensor[(6), float64] */;
    %429 = reshape(%427, newshape=[]) /* ty=float32 */;
    %430 = @func_10855(%428, %429) /* ty=(Tensor[(9, 8, 11), int16], Tensor[(1815), float64], Tensor[(9, 8, 11), int16], float32, Tensor[(6), float64], float32) */;
    %431 = @func_3808() /* ty=(Tensor[(1815), float64],) */;
    %432 = cast(meta[relay.Constant][16] /* ty=Tensor[(1540, 1), float64] */, dtype="float64") /* ty=Tensor[(1540, 1), float64] */;
    %433 = reshape(%432, newshape=[14, 11, 10]) /* ty=Tensor[(14, 11, 10), float64] */;
    %434 = @func_6173(%433) /* ty=(Tensor[(14, 11, 10), float64],) */;
    %435 = %434.0;
    %436 = cast(%435, dtype="uint16") /* ty=Tensor[(14, 11, 10), uint16] */;
    %437 = shape_of(meta[relay.Constant][16] /* ty=Tensor[(1540, 1), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %438 = cast(meta[relay.Constant][16] /* ty=Tensor[(1540, 1), float64] */, dtype="uint16") /* ty=Tensor[(1540, 1), uint16] */;
    %439 = dyn.reshape(%436, %437, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
    %440 = %424.1;
    %441 = %425.0;
    %442 = %430.1;
    %443 = %431.0;
    %444 = right_shift(%438, %439) /* ty=Tensor[(1540, ?), uint16] */;
    (%440, %441, %442, %var_12135, 3.37704f /* ty=float32 */, %443, %444)
  };
  %445(%var_12154) /* ty=(Tensor[(20, 2), float64], Tensor[(9, 8, 11), float64], Tensor[(1815), float64], Tensor[(6), float64], float32, Tensor[(1815), float64], Tensor[(1540, ?), uint16]) */
}

def @func_9557() -> Tensor[(98), float64] {
  @func_9555() /* ty=Tensor[(98), float64] */
}

def @func_12815() -> (Tensor[(4, 6, 11), float64], Tensor[(8, 9, 7), float32], Tensor[(7, 2, 7), float64], Tensor[(98), float64]) {
  %446 = @func_7860() /* ty=(Tensor[(4, 6, 11), float64], Tensor[(7, 2, 7), float64]) */;
  %447 = @func_4116() /* ty=(Tensor[(8, 9, 7), float32],) */;
  %448 = cast(meta[relay.Constant][17] /* ty=Tensor[(98), float64] */, dtype="float64") /* ty=Tensor[(98), float64] */;
  %449 = reshape(%448, newshape=[7, 2, 7]) /* ty=Tensor[(7, 2, 7), float64] */;
  %450 = %446.0;
  %451 = %447.0;
  %452 = @func_1643(%449) /* ty=Tensor[(7, 2, 7), float64] */;
  (%450, %451, %452, meta[relay.Constant][17] /* ty=Tensor[(98), float64] */)
}

def @func_14879() -> (Tensor[(9, 8, 11), int16], Tensor[(1815), float64], Tensor[(4, 6, 11), float64]) {
  %459 = fn () -> (Tensor[(9, 8, 11), int16], Tensor[(1815), float64], Tensor[(4, 6, 11), float64]) {
    %453 = @func_14760() /* ty=(Tensor[(9, 8, 11), float32], Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16]) */;
    %454 = @func_5321() /* ty=(Tensor[(1815), float64],) */;
    %455 = @func_7394() /* ty=(Tensor[(4, 6, 11), float64],) */;
    %456 = %453.1;
    %457 = %454.0;
    %458 = %455.0;
    (%456, %457, %458)
  };
  %459() /* ty=(Tensor[(9, 8, 11), int16], Tensor[(1815), float64], Tensor[(4, 6, 11), float64]) */
}

def @func_7764(%var_7762: Tensor[(624), bool], %var_7763: Tensor[(1815), float32]) -> (float32, Tensor[(9, 8, 11), int16], float32, Tensor[(2304), float64], Tensor[(624), bool], Tensor[(1815), float32]) {
  @func_7760(%var_7762, %var_7763) /* ty=(float32, Tensor[(9, 8, 11), int16], float32, Tensor[(2304), float64], Tensor[(624), bool], Tensor[(1815), float32]) */
}

def @func_3987() -> Tensor[(96, 24), float32] {
  %466 = fn () -> Tensor[(96, 24), float32] {
    %460 = @func_2996() /* ty=(Tensor[(1815), float64], float32, float32, Tensor[(7, 2, 7), float64], Tensor[(98), float64], Tensor[(96, 24), int32]) */;
    %461 = %460.5;
    %462 = cast(meta[relay.Constant][18] /* ty=Tensor[(96, 24), int32] */, dtype="float32") /* ty=Tensor[(96, 24), float32] */;
    %463 = shape_of(%461, dtype="int32") /* ty=Tensor[(2), int32] */;
    %464 = cast(%461, dtype="float32") /* ty=Tensor[(96, 24), float32] */;
    %465 = dyn.reshape(%462, %463, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    floor_mod(%464, %465) /* ty=Tensor[(96, 24), float32] */
  };
  %466() /* ty=Tensor[(96, 24), float32] */
}

def @func_5161() -> (Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16]) {
  @func_5159() /* ty=(Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16]) */
}

def @func_12343() -> (Tensor[(16, 9, 14), int8], Tensor[(16, 9, 14), float32]) {
  @func_12341() /* ty=(Tensor[(16, 9, 14), int8], Tensor[(16, 9, 14), float32]) */
}

def @func_8713() -> (Tensor[(13, 16, 3), float32], Tensor[(98), float64], Tensor[(98), float64]) {
  %467 = @func_3413() /* ty=(Tensor[(13, 16, 3), float32],) */;
  %468 = cast(meta[relay.Constant][19] /* ty=Tensor[(98), float64] */, dtype="float64") /* ty=Tensor[(98), float64] */;
  %469 = reshape(%468, newshape=[98]) /* ty=Tensor[(98), float64] */;
  %470 = @func_1736(%469) /* ty=(Tensor[(9, 8, 11), int16], Tensor[(7, 2, 7), float64], Tensor[(98), float64]) */;
  %471 = %467.0;
  %472 = %470.2;
  (%471, %472, meta[relay.Constant][19] /* ty=Tensor[(98), float64] */)
}

def @func_6353() -> (float32,) {
  %473 = @func_4827() /* ty=float32 */;
  (%473,)
}

def @func_8127() -> Tensor[(9, 8, 11), float32] {
  %475 = fn () -> Tensor[(9, 8, 11), float32] {
    %474 = @func_7025() /* ty=(Tensor[(1815), float64], Tensor[(9, 8, 11), float32]) */;
    %474.1
  };
  %475() /* ty=Tensor[(9, 8, 11), float32] */
}

def @func_1586(%var_1584: Tensor[(16, 9, 14), float32]) -> Tensor[(16, 9, 14), float32] {
  @func_1583(%var_1584) /* ty=Tensor[(16, 9, 14), float32] */
}

def @func_13066() -> (Tensor[(98), float64], Tensor[(16, 9, 14), float64]) {
  %479 = fn () -> (Tensor[(98), float64], Tensor[(16, 9, 14), float64]) {
    %476 = @func_10944() /* ty=(Tensor[(98), float64], Tensor[(96, 24), float64]) */;
    %477 = %476.0;
    %478 = @func_8051() /* ty=Tensor[(16, 9, 14), float64] */;
    (%477, %478)
  };
  %479() /* ty=(Tensor[(98), float64], Tensor[(16, 9, 14), float64]) */
}

def @func_14417(%var_14415: uint16, %var_14416: Tensor[(13, 12, 8), uint16]) -> (Tensor[(13, 12, 8), uint16], Tensor[(1815), float64], Tensor[(9, 8, 11), float64], Tensor[(1815), float64]) {
  %488 = fn (%var_14355: uint16, %var_14356: Tensor[(13, 12, 8), uint16]) -> (Tensor[(13, 12, 8), uint16], Tensor[(1815), float64], Tensor[(9, 8, 11), float64], Tensor[(1815), float64]) {
    %480 = cast(%var_14355, dtype="uint16") /* ty=uint16 */;
    %481 = cast(%var_14356, dtype="uint16") /* ty=Tensor[(13, 12, 8), uint16] */;
    %482 = @func_7083() /* ty=(Tensor[(16, 9, 14), int8], Tensor[(1815), float64], Tensor[(1815), float32]) */;
    %483 = @func_9478() /* ty=(Tensor[(9, 8, 11), float64],) */;
    %484 = maximum(%480, %481) /* ty=Tensor[(13, 12, 8), uint16] */;
    %485 = %482.1;
    %486 = %483.0;
    %487 = @func_4033() /* ty=Tensor[(1815), float64] */;
    (%484, %485, %486, %487)
  };
  %488(%var_14415, %var_14416) /* ty=(Tensor[(13, 12, 8), uint16], Tensor[(1815), float64], Tensor[(9, 8, 11), float64], Tensor[(1815), float64]) */
}

def @func_5648() -> (Tensor[(16, 9, 14), uint8], Tensor[(1815), float64], Tensor[(1815), float32], Tensor[(2304), float64]) {
  %489 = @func_5109() /* ty=(Tensor[(16, 9, 14), float32], Tensor[(16, 9, 14), uint8]) */;
  %490 = @func_4747() /* ty=(Tensor[(9, 8, 11), float64], Tensor[(1815), float64]) */;
  %491 = cast(meta[relay.Constant][20] /* ty=Tensor[(2304), float64] */, dtype="float64") /* ty=Tensor[(2304), float64] */;
  %492 = reshape(%491, newshape=[2304]) /* ty=Tensor[(2304), float64] */;
  %493 = @func_2433(%492) /* ty=(Tensor[(1815), float32], Tensor[(11, 165), float32], Tensor[(2304), float64], Tensor[(312, 2), bool]) */;
  %494 = %489.1;
  %495 = %490.1;
  %496 = %493.0;
  (%494, %495, %496, meta[relay.Constant][20] /* ty=Tensor[(2304), float64] */)
}

def @func_11356() -> (Tensor[(13, 16, 3), float32], Tensor[(9, 8, 11), float32]) {
  %497 = @func_3114() /* ty=(float32, Tensor[(13, 16, 3), float32], Tensor[(624), bool]) */;
  %498 = @func_3156() /* ty=(Tensor[(9, 8, 11), float32],) */;
  %499 = %497.1;
  %500 = %498.0;
  (%499, %500)
}

def @func_2862() -> (Tensor[(9, 8, 11), float64], Tensor[(9, 8, 11), int16]) {
  @func_2860() /* ty=(Tensor[(9, 8, 11), float64], Tensor[(9, 8, 11), int16]) */
}

def @func_7579() -> (Tensor[(13, 16, 3), float32], Tensor[(13, 16, 3), float64], Tensor[(9, 8, 11), int16], Tensor[(13, 16, 3), float32]) {
  %510 = fn () -> (Tensor[(13, 16, 3), float32], Tensor[(13, 16, 3), float64], Tensor[(9, 8, 11), int16], Tensor[(13, 16, 3), float32]) {
    %501 = @func_3413() /* ty=(Tensor[(13, 16, 3), float32],) */;
    %502 = %501.0;
    %503 = cast(%502, dtype="float32") /* ty=Tensor[(13, 16, 3), float32] */;
    %504 = reshape(%503, newshape=[13, 16, 3]) /* ty=Tensor[(13, 16, 3), float32] */;
    %505 = @func_1614() /* ty=(Tensor[(9, 8, 11), int16],) */;
    %506 = @func_3413() /* ty=(Tensor[(13, 16, 3), float32],) */;
    %507 = @func_3631(%504) /* ty=Tensor[(13, 16, 3), float64] */;
    %508 = %505.0;
    %509 = %506.0;
    (%502, %507, %508, %509)
  };
  %510() /* ty=(Tensor[(13, 16, 3), float32], Tensor[(13, 16, 3), float64], Tensor[(9, 8, 11), int16], Tensor[(13, 16, 3), float32]) */
}

def @func_5159() -> (Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16]) {
  %511 = @func_1873() /* ty=(Tensor[(9, 8, 11), float32], Tensor[(16, 9, 14), float32], Tensor[(2016), float32], Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16]) */;
  %512 = @func_1614() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %513 = %511.4;
  %514 = %512.0;
  (%513, %514)
}

def @func_14103() -> (Tensor[(9, 8, 11), float32], Tensor[(1815), float32], float32, Tensor[(98), float64], Tensor[(1815), float32], float32) {
  @func_14101() /* ty=(Tensor[(9, 8, 11), float32], Tensor[(1815), float32], float32, Tensor[(98), float64], Tensor[(1815), float32], float32) */
}

def @func_1615() -> (Tensor[(9, 8, 11), int16],) {
  %520 = fn () -> (Tensor[(9, 8, 11), int16],) {
    %515 = cast(meta[relay.Constant][22] /* ty=Tensor[(9, 8, 11), int16] */, dtype="int16") /* ty=Tensor[(9, 8, 11), int16] */;
    %516 = shape_of(meta[relay.Constant][21] /* ty=Tensor[(9, 8, 11), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %517 = cast(meta[relay.Constant][21] /* ty=Tensor[(9, 8, 11), int16] */, dtype="int16") /* ty=Tensor[(9, 8, 11), int16] */;
    %518 = dyn.reshape(%515, %516, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %519 = bitwise_or(%517, %518) /* ty=Tensor[(9, 8, 11), int16] */;
    (%519,)
  };
  %520() /* ty=(Tensor[(9, 8, 11), int16],) */
}

def @func_5864() -> (Tensor[(16, 9, 14), float32], Tensor[(40), float32], Tensor[(20, 2), float32], Tensor[(9, 8, 11), int16], Tensor[(11, 165), float32], Tensor[(16, 144), float64]) {
  %521 = @func_2564() /* ty=(Tensor[(1815), float64], Tensor[(16, 9, 14), float32], Tensor[(2016), float32], Tensor[(312, 2), bool], Tensor[(96, 24), int32], Tensor[(16, 9, 14), float32]) */;
  %522 = cast(meta[relay.Constant][23] /* ty=Tensor[(20, 2), float32] */, dtype="float32") /* ty=Tensor[(20, 2), float32] */;
  %523 = reshape(%522, newshape=[40]) /* ty=Tensor[(40), float32] */;
  %524 = @func_4927(%523) /* ty=(Tensor[(9, 8, 11), int16], Tensor[(4, 10, ?), int32], Tensor[(40), float32]) */;
  %525 = @func_2753() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %526 = cast(meta[relay.Constant][24] /* ty=Tensor[(16, 144), float64] */, dtype="float64") /* ty=Tensor[(16, 144), float64] */;
  %527 = reshape(%526, newshape=[2304]) /* ty=Tensor[(2304), float64] */;
  %528 = @func_2433(%527) /* ty=(Tensor[(1815), float32], Tensor[(11, 165), float32], Tensor[(2304), float64], Tensor[(312, 2), bool]) */;
  %529 = %521.1;
  %530 = %524.2;
  %531 = %525.0;
  %532 = %528.1;
  (%529, %530, meta[relay.Constant][23] /* ty=Tensor[(20, 2), float32] */, %531, %532, meta[relay.Constant][24] /* ty=Tensor[(16, 144), float64] */)
}

def @func_7813(%var_7799: Tensor[(15, 5, 11), float32]) -> (Tensor[(15, 5, 11), float32],) {
  %533 = cast(%var_7799, dtype="float32") /* ty=Tensor[(15, 5, 11), float32] */;
  %534 = log10(%533) /* ty=Tensor[(15, 5, 11), float32] */;
  (%534,)
}

def @func_9950() -> (Tensor[(9, 8, 11), int16], Tensor[(16, 9, 14), float32]) {
  %535 = @func_7206() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %536 = @func_6219() /* ty=(Tensor[(16, 9, 14), float32],) */;
  %537 = %535.0;
  %538 = %536.0;
  (%537, %538)
}

def @func_9436(%var_9415: Tensor[(624), bool]) -> (Tensor[(1815), float32], Tensor[(9, 8, 11), int16], Tensor[(624), bool]) {
  %539 = @func_7838() /* ty=(Tensor[(1815), float32],) */;
  %540 = cast(%var_9415, dtype="bool") /* ty=Tensor[(624), bool] */;
  %541 = %539.0;
  %542 = cast(%541, dtype="float32") /* ty=Tensor[(1815), float32] */;
  %543 = reshape(%540, newshape=[624]) /* ty=Tensor[(624), bool] */;
  %544 = reshape(%542, newshape=[1, 1815]) /* ty=Tensor[(1, 1815), float32] */;
  %545 = @func_2406(%543, %544) /* ty=(Tensor[(9, 8, 11), int16], Tensor[(13, 16, 3), float32], Tensor[(624), bool], Tensor[(11, 15, 11), float32], float32, Tensor[(1, 1815), float32], Tensor[(4, 10, ?), int32], Tensor[(40, 1), float32]) */;
  %546 = %545.0;
  (%541, %546, %var_9415)
}

def @func_3900() -> (Tensor[(9, 8, 11), int16],) {
  @func_3898() /* ty=(Tensor[(9, 8, 11), int16],) */
}

def @func_13395() -> (Tensor[(98), float64], Tensor[(9, 8, 11), int16]) {
  @func_13393() /* ty=(Tensor[(98), float64], Tensor[(9, 8, 11), int16]) */
}

def @func_11841() -> (Tensor[(9, 8, 11), int16],) {
  %549 = fn () -> (Tensor[(9, 8, 11), int16],) {
    %547 = @func_8109() /* ty=(float32, Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16], float32, Tensor[(16, 9, 14), float32], Tensor[(2016), float32]) */;
    %548 = %547.1;
    (%548,)
  };
  %549() /* ty=(Tensor[(9, 8, 11), int16],) */
}

def @func_6096() -> (Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16]) {
  @func_6094() /* ty=(Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16]) */
}

def @func_8882(%var_8880: float32, %var_8881: Tensor[(16, 13, 1), float32]) -> Tensor[(16, 13, 1), float32] {
  @func_8878(%var_8880, %var_8881) /* ty=Tensor[(16, 13, 1), float32] */
}

def @func_12256(%var_12253: Tensor[(11, 6, 4), float64]) -> (Tensor[(11, 6, 4), float64],) {
  %550 = cast(%var_12253, dtype="float64") /* ty=Tensor[(11, 6, 4), float64] */;
  %551 = log10(%550) /* ty=Tensor[(11, 6, 4), float64] */;
  (%551,)
}

def @func_5323() -> (Tensor[(1815), float64],) {
  @func_5321() /* ty=(Tensor[(1815), float64],) */
}

def @func_10326() -> Tensor[(8, 9, 7), float32] {
  %553 = fn () -> Tensor[(8, 9, 7), float32] {
    %552 = @func_4116() /* ty=(Tensor[(8, 9, 7), float32],) */;
    %552.0
  };
  %553() /* ty=Tensor[(8, 9, 7), float32] */
}

def @func_9337() -> Tensor[(9, 8, 11), int16] {
  @func_9335() /* ty=Tensor[(9, 8, 11), int16] */
}

def @func_11309(%var_11261: Tensor[(1815), float32]) -> (Tensor[(9, 8, 11), float64], Tensor[(1815), uint32], Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16]) {
  %554 = @func_8455() /* ty=(Tensor[(9, 8, 11), float64],) */;
  %555 = @func_9705() /* ty=(Tensor[(98), float64], Tensor[(1815), float32], Tensor[(2304), float64], Tensor[(1815), float64]) */;
  %556 = %555.1;
  %557 = cast(%var_11261, dtype="uint32") /* ty=Tensor[(1815), uint32] */;
  %558 = shape_of(%556, dtype="int32") /* ty=Tensor[(1), int32] */;
  %559 = cast(%556, dtype="uint32") /* ty=Tensor[(1815), uint32] */;
  %560 = dyn.reshape(%557, %558, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %561 = @func_7507() /* ty=(Tensor[(16, 9, 14), float32], Tensor[(9, 8, 11), int16]) */;
  %562 = @func_2753() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %563 = %554.0;
  %564 = right_shift(%559, %560) /* ty=Tensor[(1815), uint32] */;
  %565 = %561.1;
  %566 = %562.0;
  (%563, %564, %565, %566)
}

def @func_10287() -> (Tensor[(98), float64], Tensor[(9, 8, 11), float32], Tensor[(98), float64], Tensor[(13, 16, 3), float32], Tensor[(576), float64], Tensor[(13, 16, 3), float32]) {
  %581 = fn () -> (Tensor[(98), float64], Tensor[(9, 8, 11), float32], Tensor[(98), float64], Tensor[(13, 16, 3), float32], Tensor[(576), float64], Tensor[(13, 16, 3), float32]) {
    %567 = @func_7553() /* ty=(Tensor[(98), float64],) */;
    %568 = @func_9057() /* ty=(Tensor[(9, 8, 11), float32], Tensor[(96, 24), float64]) */;
    %569 = @func_9894() /* ty=(Tensor[(98), float64], Tensor[(1815), float64]) */;
    %570 = cast(meta[relay.Constant][25] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
    %571 = cast(meta[relay.Constant][25] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
    %572 = reshape(%570, newshape=[12, 4, 12]) /* ty=Tensor[(12, 4, 12), float64] */;
    %573 = reshape(%571, newshape=[12, 4, 12]) /* ty=Tensor[(12, 4, 12), float64] */;
    %574 = @func_6032(%572, %573) /* ty=(Tensor[(13, 16, 3), float32], Tensor[(312, 2), bool], Tensor[(12, 4, 12), uint64]) */;
    %575 = @func_9255() /* ty=(Tensor[(13, 16, 3), float32], Tensor[(9, 8, 11), int16], Tensor[(98), float64]) */;
    %576 = %567.0;
    %577 = %568.0;
    %578 = %569.0;
    %579 = %574.0;
    %580 = %575.0;
    (%576, %577, %578, %579, meta[relay.Constant][25] /* ty=Tensor[(576), float64] */, %580)
  };
  %581() /* ty=(Tensor[(98), float64], Tensor[(9, 8, 11), float32], Tensor[(98), float64], Tensor[(13, 16, 3), float32], Tensor[(576), float64], Tensor[(13, 16, 3), float32]) */
}

def @func_6982() -> Tensor[(16, 9, 14), uint8] {
  %582 = @func_3749() /* ty=(Tensor[(16, 9, 14), uint8], Tensor[(16, 9, 14), float32]) */;
  %582.0
}

def @func_3934(%var_3923: Tensor[(6, 9, 7), float32], %var_3931: float32) -> (Tensor[(6, 9, 7), float32], Tensor[(3, 2, 1), float64], Tensor[(6), float64], float32, Tensor[(1815), float32]) {
  %583 = cast(%var_3923, dtype="float32") /* ty=Tensor[(6, 9, 7), float32] */;
  %584 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(6, 9, 7), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %585 = cast(meta[relay.Constant][26] /* ty=Tensor[(6, 9, 7), float32] */, dtype="float32") /* ty=Tensor[(6, 9, 7), float32] */;
  %586 = dyn.reshape(%583, %584, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %587 = cast(meta[relay.Constant][27] /* ty=Tensor[(6), float64] */, dtype="float64") /* ty=Tensor[(6), float64] */;
  %588 = cast(%var_3931, dtype="float32") /* ty=float32 */;
  %589 = cast(meta[relay.Constant][28] /* ty=Tensor[(1815), float32] */, dtype="float32") /* ty=Tensor[(1815), float32] */;
  %590 = reshape(%587, newshape=[3, 2, 1]) /* ty=Tensor[(3, 2, 1), float64] */;
  %591 = reshape(%588, newshape=[]) /* ty=float32 */;
  %592 = reshape(%589, newshape=[1815, 1]) /* ty=Tensor[(1815, 1), float32] */;
  %593 = @func_3233(%590, %591, %592) /* ty=(Tensor[(3, 2, 1), float64], float32, Tensor[(1815, ?), float32], Tensor[(16, 9, 14), float32]) */;
  %594 = floor_mod(%585, %586) /* ty=Tensor[(6, 9, 7), float32] */;
  %595 = %593.0;
  (%594, %595, meta[relay.Constant][27] /* ty=Tensor[(6), float64] */, %var_3931, meta[relay.Constant][28] /* ty=Tensor[(1815), float32] */)
}

def @func_12759() -> (Tensor[(2, 3, 14), bool], Tensor[(9, 8, 11), float64], Tensor[(9, 8, 11), float32], Tensor[(8, 9, 7), float32], Tensor[(16, 9, 14), float32], float32) {
  %608 = fn () -> (Tensor[(2, 3, 14), bool], Tensor[(9, 8, 11), float64], Tensor[(9, 8, 11), float32], Tensor[(8, 9, 7), float32], Tensor[(16, 9, 14), float32], float32) {
    %596 = @func_10621() /* ty=(Tensor[(2, 3, 14), bool], float32) */;
    %597 = @func_4747() /* ty=(Tensor[(9, 8, 11), float64], Tensor[(1815), float64]) */;
    %598 = @func_4116() /* ty=(Tensor[(8, 9, 7), float32],) */;
    %599 = %598.0;
    %600 = cast(%599, dtype="float32") /* ty=Tensor[(8, 9, 7), float32] */;
    %601 = @func_7507() /* ty=(Tensor[(16, 9, 14), float32], Tensor[(9, 8, 11), int16]) */;
    %602 = %596.0;
    %603 = %597.0;
    %604 = @func_2484() /* ty=Tensor[(9, 8, 11), float32] */;
    %605 = asin(%600) /* ty=Tensor[(8, 9, 7), float32] */;
    %606 = %601.0;
    %607 = @func_10746() /* ty=float32 */;
    (%602, %603, %604, %605, %606, %607)
  };
  %608() /* ty=(Tensor[(2, 3, 14), bool], Tensor[(9, 8, 11), float64], Tensor[(9, 8, 11), float32], Tensor[(8, 9, 7), float32], Tensor[(16, 9, 14), float32], float32) */
}

def @func_5052(%var_5050: Tensor[(2304), float64]) -> (Tensor[(98), float64], Tensor[(312, 2), bool], Tensor[(2304), float64], float32) {
  @func_5049(%var_5050) /* ty=(Tensor[(98), float64], Tensor[(312, 2), bool], Tensor[(2304), float64], float32) */
}

def @func_5543() -> (Tensor[(9, 8, 11), float32], Tensor[(1815), float64]) {
  %611 = fn () -> (Tensor[(9, 8, 11), float32], Tensor[(1815), float64]) {
    %609 = @func_2484() /* ty=Tensor[(9, 8, 11), float32] */;
    %610 = @func_2805() /* ty=Tensor[(1815), float64] */;
    (%609, %610)
  };
  %611() /* ty=(Tensor[(9, 8, 11), float32], Tensor[(1815), float64]) */
}

def @func_10778(%var_10762: Tensor[(9, 15, 6), float64]) -> Tensor[(9, 15, 6), float64] {
  %612 = cast(%var_10762, dtype="float64") /* ty=Tensor[(9, 15, 6), float64] */;
  acosh(%612) /* ty=Tensor[(9, 15, 6), float64] */
}

def @func_12911(%var_12909: Tensor[(1815), float32]) -> (Tensor[(16, 9, 14), uint8], Tensor[(9, 8, 11), float64], Tensor[(1815), float32], float32, Tensor[(9, 8, 11), bool]) {
  @func_12908(%var_12909) /* ty=(Tensor[(16, 9, 14), uint8], Tensor[(9, 8, 11), float64], Tensor[(1815), float32], float32, Tensor[(9, 8, 11), bool]) */
}

def @func_3298() -> (Tensor[(9, 8, 11), float64],) {
  %616 = fn () -> (Tensor[(9, 8, 11), float64],) {
    %613 = @func_1690() /* ty=Tensor[(9, 8, 11), int16] */;
    %614 = cast(%613, dtype="float64") /* ty=Tensor[(9, 8, 11), float64] */;
    %615 = acosh(%614) /* ty=Tensor[(9, 8, 11), float64] */;
    (%615,)
  };
  %616() /* ty=(Tensor[(9, 8, 11), float64],) */
}

def @func_9023() -> (Tensor[(98), float64], Tensor[(96, 24), uint32]) {
  %627 = fn () -> (Tensor[(98), float64], Tensor[(96, 24), uint32]) {
    %617 = @func_7553() /* ty=(Tensor[(98), float64],) */;
    %618 = @func_3986() /* ty=Tensor[(96, 24), float32] */;
    %619 = cast(%618, dtype="float32") /* ty=Tensor[(96, 24), float32] */;
    %620 = log2(%619) /* ty=Tensor[(96, 24), float32] */;
    %621 = cast(%618, dtype="uint32") /* ty=Tensor[(96, 24), uint32] */;
    %622 = shape_of(%620, dtype="int32") /* ty=Tensor[(2), int32] */;
    %623 = cast(%620, dtype="uint32") /* ty=Tensor[(96, 24), uint32] */;
    %624 = dyn.reshape(%621, %622, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
    %625 = %617.0;
    %626 = bitwise_xor(%623, %624) /* ty=Tensor[(96, 24), uint32] */;
    (%625, %626)
  };
  %627() /* ty=(Tensor[(98), float64], Tensor[(96, 24), uint32]) */
}

def @func_5459(%var_5458: Tensor[(2, 16, 2), float64]) -> (Tensor[(2, 16, 2), float64], Tensor[(16, 9, 14), float32], Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16], Tensor[(1815), float64]) {
  %643 = fn (%var_5419: Tensor[(2, 16, 2), float64]) -> (Tensor[(2, 16, 2), float64], Tensor[(16, 9, 14), float32], Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16], Tensor[(1815), float64]) {
    %628 = cast(%var_5419, dtype="float64") /* ty=Tensor[(2, 16, 2), float64] */;
    %629 = sin(%628) /* ty=Tensor[(2, 16, 2), float64] */;
    %630 = cast(%var_5419, dtype="float64") /* ty=Tensor[(2, 16, 2), float64] */;
    %631 = asin(%630) /* ty=Tensor[(2, 16, 2), float64] */;
    %632 = cast(%631, dtype="float64") /* ty=Tensor[(2, 16, 2), float64] */;
    %633 = shape_of(%629, dtype="int32") /* ty=Tensor[(3), int32] */;
    %634 = cast(%629, dtype="float64") /* ty=Tensor[(2, 16, 2), float64] */;
    %635 = dyn.reshape(%632, %633, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %636 = @func_2753() /* ty=(Tensor[(9, 8, 11), int16],) */;
    %637 = @func_2753() /* ty=(Tensor[(9, 8, 11), int16],) */;
    %638 = power(%634, %635) /* ty=Tensor[(2, 16, 2), float64] */;
    %639 = @func_2730() /* ty=Tensor[(16, 9, 14), float32] */;
    %640 = %636.0;
    %641 = %637.0;
    %642 = @func_4033() /* ty=Tensor[(1815), float64] */;
    (%638, %639, %640, %641, %642)
  };
  %643(%var_5458) /* ty=(Tensor[(2, 16, 2), float64], Tensor[(16, 9, 14), float32], Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16], Tensor[(1815), float64]) */
}

def @func_6150() -> Tensor[(624), bool] {
  %644 = @func_3114() /* ty=(float32, Tensor[(13, 16, 3), float32], Tensor[(624), bool]) */;
  %644.2
}

def @func_3898() -> (Tensor[(9, 8, 11), int16],) {
  %645 = @func_1614() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %646 = %645.0;
  (%646,)
}

def @func_1687() -> (Tensor[(9, 8, 11), int16],) {
  %649 = fn () -> (Tensor[(9, 8, 11), int16],) {
    %647 = @func_1614() /* ty=(Tensor[(9, 8, 11), int16],) */;
    %648 = %647.0;
    (%648,)
  };
  %649() /* ty=(Tensor[(9, 8, 11), int16],) */
}

def @func_4340() -> (Tensor[(9, 8, 11), int16],) {
  @func_4338() /* ty=(Tensor[(9, 8, 11), int16],) */
}

def @func_3580() -> Tensor[(13, 16, 3), float32] {
  @func_3578() /* ty=Tensor[(13, 16, 3), float32] */
}

def @func_10034() -> (Tensor[(1815), float32], Tensor[(13, 16, 3), float32], Tensor[(16, 9, 14), int8], Tensor[(16, 9, 14), float32], Tensor[(9, 8, 11), float32]) {
  %658 = fn () -> (Tensor[(1815), float32], Tensor[(13, 16, 3), float32], Tensor[(16, 9, 14), int8], Tensor[(16, 9, 14), float32], Tensor[(9, 8, 11), float32]) {
    %650 = @func_7838() /* ty=(Tensor[(1815), float32],) */;
    %651 = @func_7578() /* ty=(Tensor[(13, 16, 3), float32], Tensor[(13, 16, 3), float64], Tensor[(9, 8, 11), int16], Tensor[(13, 16, 3), float32]) */;
    %652 = @func_5010() /* ty=(Tensor[(16, 9, 14), int8],) */;
    %653 = %650.0;
    %654 = %651.3;
    %655 = %652.0;
    %656 = @func_2730() /* ty=Tensor[(16, 9, 14), float32] */;
    %657 = @func_2484() /* ty=Tensor[(9, 8, 11), float32] */;
    (%653, %654, %655, %656, %657)
  };
  %658() /* ty=(Tensor[(1815), float32], Tensor[(13, 16, 3), float32], Tensor[(16, 9, 14), int8], Tensor[(16, 9, 14), float32], Tensor[(9, 8, 11), float32]) */
}

def @func_5276() -> Tensor[(4, 6, 11), float64] {
  %659 = cast(meta[relay.Constant][30] /* ty=Tensor[(4, 6, 11), float64] */, dtype="float64") /* ty=Tensor[(4, 6, 11), float64] */;
  %660 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(4, 6, 11), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %661 = cast(meta[relay.Constant][29] /* ty=Tensor[(4, 6, 11), float64] */, dtype="float64") /* ty=Tensor[(4, 6, 11), float64] */;
  %662 = dyn.reshape(%659, %660, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_divide(%661, %662) /* ty=Tensor[(4, 6, 11), float64] */
}

def @func_14448() -> (float32,) {
  %665 = fn () -> (float32,) {
    %663 = @func_6000() /* ty=(float32,) */;
    %664 = %663.0;
    (%664,)
  };
  %665() /* ty=(float32,) */
}

def @func_10646() -> (Tensor[(16, 9, 14), uint8],) {
  %666 = @func_6982() /* ty=Tensor[(16, 9, 14), uint8] */;
  (%666,)
}

def @func_1874() -> (Tensor[(9, 8, 11), float32], Tensor[(16, 9, 14), float32], Tensor[(2016), float32], Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16]) {
  %677 = fn () -> (Tensor[(9, 8, 11), float32], Tensor[(16, 9, 14), float32], Tensor[(2016), float32], Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16]) {
    %667 = @func_1614() /* ty=(Tensor[(9, 8, 11), int16],) */;
    %668 = %667.0;
    %669 = cast(%668, dtype="float32") /* ty=Tensor[(9, 8, 11), float32] */;
    %670 = cast(meta[relay.Constant][31] /* ty=Tensor[(2016), float32] */, dtype="float32") /* ty=Tensor[(2016), float32] */;
    %671 = reshape(%670, newshape=[16, 9, 14]) /* ty=Tensor[(16, 9, 14), float32] */;
    %672 = @func_1686() /* ty=(Tensor[(9, 8, 11), int16],) */;
    %673 = sinh(%669) /* ty=Tensor[(9, 8, 11), float32] */;
    %674 = @func_1583(%671) /* ty=Tensor[(16, 9, 14), float32] */;
    %675 = %672.0;
    %676 = @func_1690() /* ty=Tensor[(9, 8, 11), int16] */;
    (%673, %674, meta[relay.Constant][31] /* ty=Tensor[(2016), float32] */, %675, %676)
  };
  %677() /* ty=(Tensor[(9, 8, 11), float32], Tensor[(16, 9, 14), float32], Tensor[(2016), float32], Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16]) */
}

def @func_12237() -> (Tensor[(98), float64], Tensor[(9, 8, 11), float32], Tensor[(9, 8, 11), float32]) {
  %678 = @func_3156() /* ty=(Tensor[(9, 8, 11), float32],) */;
  %679 = @func_9086() /* ty=Tensor[(98), float64] */;
  %680 = %678.0;
  %681 = @func_2484() /* ty=Tensor[(9, 8, 11), float32] */;
  (%679, %680, %681)
}

def @func_6818() -> (Tensor[(9, 8, 11), float32], Tensor[(9, 8, 11), float64], Tensor[(9, 8, 11), float64]) {
  %688 = fn () -> (Tensor[(9, 8, 11), float32], Tensor[(9, 8, 11), float64], Tensor[(9, 8, 11), float64]) {
    %682 = @func_5970() /* ty=(Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16], Tensor[(1815), float64]) */;
    %683 = %682.1;
    %684 = cast(%683, dtype="float64") /* ty=Tensor[(9, 8, 11), float64] */;
    %685 = @func_6272() /* ty=Tensor[(9, 8, 11), float32] */;
    %686 = @func_4055() /* ty=Tensor[(9, 8, 11), float64] */;
    %687 = erf(%684) /* ty=Tensor[(9, 8, 11), float64] */;
    (%685, %686, %687)
  };
  %688() /* ty=(Tensor[(9, 8, 11), float32], Tensor[(9, 8, 11), float64], Tensor[(9, 8, 11), float64]) */
}

def @func_1756(%var_1742: Tensor[(4, 10, 1), float32]) -> (Tensor[(4, 10, 1), float32],) {
  %689 = cast(%var_1742, dtype="float32") /* ty=Tensor[(4, 10, 1), float32] */;
  %690 = cosh(%689) /* ty=Tensor[(4, 10, 1), float32] */;
  (%690,)
}

def @func_9256() -> (Tensor[(13, 16, 3), float32], Tensor[(9, 8, 11), int16], Tensor[(98), float64]) {
  %696 = fn () -> (Tensor[(13, 16, 3), float32], Tensor[(9, 8, 11), int16], Tensor[(98), float64]) {
    %691 = @func_6072() /* ty=(Tensor[(13, 16, 3), float32],) */;
    %692 = @func_4338() /* ty=(Tensor[(9, 8, 11), int16],) */;
    %693 = %691.0;
    %694 = %692.0;
    %695 = @func_9086() /* ty=Tensor[(98), float64] */;
    (%693, %694, %695)
  };
  %696() /* ty=(Tensor[(13, 16, 3), float32], Tensor[(9, 8, 11), int16], Tensor[(98), float64]) */
}

def @func_14318() -> (float32,) {
  %697 = @func_6000() /* ty=(float32,) */;
  %698 = %697.0;
  (%698,)
}

def @func_9086() -> Tensor[(98), float64] {
  %699 = @func_7553() /* ty=(Tensor[(98), float64],) */;
  %699.0
}

def @func_10946() -> (Tensor[(98), float64], Tensor[(96, 24), float64]) {
  @func_10944() /* ty=(Tensor[(98), float64], Tensor[(96, 24), float64]) */
}

def @func_4511() -> (Tensor[(1815), float32], Tensor[(9, 8, 11), int16]) {
  %704 = fn () -> (Tensor[(1815), float32], Tensor[(9, 8, 11), int16]) {
    %700 = @func_1932() /* ty=(Tensor[(9, 8, 11), int16], Tensor[(16, 10, 5), float64], float32, Tensor[(1815), float32], Tensor[(9, 8, 11), float64]) */;
    %701 = @func_4338() /* ty=(Tensor[(9, 8, 11), int16],) */;
    %702 = %700.3;
    %703 = %701.0;
    (%702, %703)
  };
  %704() /* ty=(Tensor[(1815), float32], Tensor[(9, 8, 11), int16]) */
}

def @func_9738() -> (Tensor[(9, 8, 11), float64],) {
  %706 = fn () -> (Tensor[(9, 8, 11), float64],) {
    %705 = @func_7994() /* ty=Tensor[(9, 8, 11), float64] */;
    (%705,)
  };
  %706() /* ty=(Tensor[(9, 8, 11), float64],) */
}

def @func_3938(%var_3936: Tensor[(6, 9, 7), float32], %var_3937: float32) -> (Tensor[(6, 9, 7), float32], Tensor[(3, 2, 1), float64], Tensor[(6), float64], float32, Tensor[(1815), float32]) {
  @func_3934(%var_3936, %var_3937) /* ty=(Tensor[(6, 9, 7), float32], Tensor[(3, 2, 1), float64], Tensor[(6), float64], float32, Tensor[(1815), float32]) */
}

def @func_12440() -> (Tensor[(13, 16, 3), float32],) {
  @func_12438() /* ty=(Tensor[(13, 16, 3), float32],) */
}

def @func_6035(%var_6033: Tensor[(12, 4, 12), float64], %var_6034: Tensor[(12, 4, 12), float64]) -> (Tensor[(13, 16, 3), float32], Tensor[(312, 2), bool], Tensor[(12, 4, 12), uint64]) {
  %717 = fn (%var_6007: Tensor[(12, 4, 12), float64], %var_6024: Tensor[(12, 4, 12), float64]) -> (Tensor[(13, 16, 3), float32], Tensor[(312, 2), bool], Tensor[(12, 4, 12), uint64]) {
    %707 = cast(meta[relay.Constant][32] /* ty=Tensor[(312, 2), bool] */, dtype="bool") /* ty=Tensor[(312, 2), bool] */;
    %708 = reshape(%707, newshape=[13, 16, 3]) /* ty=Tensor[(13, 16, 3), bool] */;
    %709 = cast(%var_6007, dtype="float64") /* ty=Tensor[(12, 4, 12), float64] */;
    %710 = cos(%709) /* ty=Tensor[(12, 4, 12), float64] */;
    %711 = cast(%var_6024, dtype="uint64") /* ty=Tensor[(12, 4, 12), uint64] */;
    %712 = shape_of(%710, dtype="int32") /* ty=Tensor[(3), int32] */;
    %713 = cast(%710, dtype="uint64") /* ty=Tensor[(12, 4, 12), uint64] */;
    %714 = dyn.reshape(%711, %712, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %715 = @func_129(%708) /* ty=Tensor[(13, 16, 3), float32] */;
    %716 = left_shift(%713, %714) /* ty=Tensor[(12, 4, 12), uint64] */;
    (%715, meta[relay.Constant][32] /* ty=Tensor[(312, 2), bool] */, %716)
  };
  %717(%var_6033, %var_6034) /* ty=(Tensor[(13, 16, 3), float32], Tensor[(312, 2), bool], Tensor[(12, 4, 12), uint64]) */
}

def @func_11872() -> (Tensor[(9, 8, 11), int16],) {
  @func_11870() /* ty=(Tensor[(9, 8, 11), int16],) */
}

def @func_3694() -> Tensor[(9, 8, 11), int16] {
  %718 = @func_2753() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %718.0
}

def @func_6073() -> (Tensor[(13, 16, 3), float32],) {
  %721 = fn () -> (Tensor[(13, 16, 3), float32],) {
    %719 = @func_3413() /* ty=(Tensor[(13, 16, 3), float32],) */;
    %720 = %719.0;
    (%720,)
  };
  %721() /* ty=(Tensor[(13, 16, 3), float32],) */
}

def @func_6221() -> (Tensor[(16, 9, 14), float32],) {
  @func_6219() /* ty=(Tensor[(16, 9, 14), float32],) */
}

def @func_10858(%var_10856: Tensor[(6), float64], %var_10857: float32) -> (Tensor[(9, 8, 11), int16], Tensor[(1815), float64], Tensor[(9, 8, 11), int16], float32, Tensor[(6), float64], float32) {
  %734 = fn (%var_10848: Tensor[(6), float64], %var_10849: float32) -> (Tensor[(9, 8, 11), int16], Tensor[(1815), float64], Tensor[(9, 8, 11), int16], float32, Tensor[(6), float64], float32) {
    %722 = @func_5970() /* ty=(Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16], Tensor[(1815), float64]) */;
    %723 = cast(%var_10848, dtype="float64") /* ty=Tensor[(6), float64] */;
    %724 = cast(%var_10849, dtype="float32") /* ty=float32 */;
    %725 = @func_4033() /* ty=Tensor[(1815), float64] */;
    %726 = cast(%725, dtype="float32") /* ty=Tensor[(1815), float32] */;
    %727 = reshape(%723, newshape=[3, 2, 1]) /* ty=Tensor[(3, 2, 1), float64] */;
    %728 = reshape(%724, newshape=[]) /* ty=float32 */;
    %729 = reshape(%726, newshape=[1815, 1]) /* ty=Tensor[(1815, 1), float32] */;
    %730 = @func_3233(%727, %728, %729) /* ty=(Tensor[(3, 2, 1), float64], float32, Tensor[(1815, ?), float32], Tensor[(16, 9, 14), float32]) */;
    %731 = @func_9335() /* ty=Tensor[(9, 8, 11), int16] */;
    %732 = %722.0;
    %733 = %730.1;
    (%731, %725, %732, %733, %var_10848, %var_10849)
  };
  %734(%var_10856, %var_10857) /* ty=(Tensor[(9, 8, 11), int16], Tensor[(1815), float64], Tensor[(9, 8, 11), int16], float32, Tensor[(6), float64], float32) */
}

def @func_10962() -> (Tensor[(4, 6, 11), float64],) {
  %735 = @func_7113() /* ty=(Tensor[(4, 6, 11), float64], Tensor[(96, 24), float32]) */;
  %736 = %735.0;
  (%736,)
}

def @func_3711(%var_3710: Tensor[(9, 13, 14), float32]) -> Tensor[(9, 13, 14), float32] {
  %738 = fn (%var_3699: Tensor[(9, 13, 14), float32]) -> Tensor[(9, 13, 14), float32] {
    %737 = cast(%var_3699, dtype="float32") /* ty=Tensor[(9, 13, 14), float32] */;
    cosh(%737) /* ty=Tensor[(9, 13, 14), float32] */
  };
  %738(%var_3710) /* ty=Tensor[(9, 13, 14), float32] */
}

def @func_5278() -> Tensor[(4, 6, 11), float64] {
  @func_5276() /* ty=Tensor[(4, 6, 11), float64] */
}

def @func_1738(%var_1737: Tensor[(98), float64]) -> (Tensor[(9, 8, 11), int16], Tensor[(7, 2, 7), float64], Tensor[(98), float64]) {
  %744 = fn (%var_1734: Tensor[(98), float64]) -> (Tensor[(9, 8, 11), int16], Tensor[(7, 2, 7), float64], Tensor[(98), float64]) {
    %739 = @func_1614() /* ty=(Tensor[(9, 8, 11), int16],) */;
    %740 = cast(%var_1734, dtype="float64") /* ty=Tensor[(98), float64] */;
    %741 = reshape(%740, newshape=[7, 2, 7]) /* ty=Tensor[(7, 2, 7), float64] */;
    %742 = %739.0;
    %743 = @func_1643(%741) /* ty=Tensor[(7, 2, 7), float64] */;
    (%742, %743, %var_1734)
  };
  %744(%var_1737) /* ty=(Tensor[(9, 8, 11), int16], Tensor[(7, 2, 7), float64], Tensor[(98), float64]) */
}

def @func_1692() -> Tensor[(9, 8, 11), int16] {
  @func_1690() /* ty=Tensor[(9, 8, 11), int16] */
}

def @func_5971() -> (Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16], Tensor[(1815), float64]) {
  %751 = fn () -> (Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16], Tensor[(1815), float64]) {
    %745 = @func_1686() /* ty=(Tensor[(9, 8, 11), int16],) */;
    %746 = @func_5159() /* ty=(Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16]) */;
    %747 = @func_3808() /* ty=(Tensor[(1815), float64],) */;
    %748 = %745.0;
    %749 = %746.0;
    %750 = %747.0;
    (%748, %749, %750)
  };
  %751() /* ty=(Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16], Tensor[(1815), float64]) */
}

def @func_10621() -> (Tensor[(2, 3, 14), bool], float32) {
  %752 = cast(meta[relay.Constant][33] /* ty=Tensor[(2, 3, 14), float64] */, dtype="float64") /* ty=Tensor[(2, 3, 14), float64] */;
  %753 = log10(%752) /* ty=Tensor[(2, 3, 14), float64] */;
  %754 = cast(meta[relay.Constant][33] /* ty=Tensor[(2, 3, 14), float64] */, dtype="bool") /* ty=Tensor[(2, 3, 14), bool] */;
  %755 = shape_of(%753, dtype="int32") /* ty=Tensor[(3), int32] */;
  %756 = cast(%753, dtype="bool") /* ty=Tensor[(2, 3, 14), bool] */;
  %757 = dyn.reshape(%754, %755, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %758 = not_equal(%756, %757) /* ty=Tensor[(2, 3, 14), bool] */;
  %759 = @func_4574() /* ty=float32 */;
  (%758, %759)
}

def @func_5304() -> float32 {
  %761 = fn () -> float32 {
    %760 = @func_3027() /* ty=(float32,) */;
    %760.0
  };
  %761() /* ty=float32 */
}

def @func_11243() -> (Tensor[(9, 8, 11), int16],) {
  %762 = @func_7507() /* ty=(Tensor[(16, 9, 14), float32], Tensor[(9, 8, 11), int16]) */;
  %763 = %762.1;
  (%763,)
}

def @func_7507() -> (Tensor[(16, 9, 14), float32], Tensor[(9, 8, 11), int16]) {
  %764 = @func_5109() /* ty=(Tensor[(16, 9, 14), float32], Tensor[(16, 9, 14), uint8]) */;
  %765 = @func_2860() /* ty=(Tensor[(9, 8, 11), float64], Tensor[(9, 8, 11), int16]) */;
  %766 = %764.0;
  %767 = %765.1;
  (%766, %767)
}

def @func_7555() -> (Tensor[(98), float64],) {
  @func_7553() /* ty=(Tensor[(98), float64],) */
}

def @func_13771(%var_13725: Tensor[(7, 14, 9), float64]) -> (Tensor[(7, 14, 9), float32], Tensor[(1815), float32], Tensor[(2304), float64], Tensor[(9, 8, 11), float64], Tensor[(9, 8, 11), int16]) {
  %768 = cast(%var_13725, dtype="float64") /* ty=Tensor[(7, 14, 9), float64] */;
  %769 = cos(%768) /* ty=Tensor[(7, 14, 9), float64] */;
  %770 = cast(%769, dtype="float32") /* ty=Tensor[(7, 14, 9), float32] */;
  %771 = shape_of(%var_13725, dtype="int32") /* ty=Tensor[(3), int32] */;
  %772 = cast(%var_13725, dtype="float32") /* ty=Tensor[(7, 14, 9), float32] */;
  %773 = dyn.reshape(%770, %771, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %774 = cast(meta[relay.Constant][34] /* ty=Tensor[(2304), float64] */, dtype="float64") /* ty=Tensor[(2304), float64] */;
  %775 = reshape(%774, newshape=[2304]) /* ty=Tensor[(2304), float64] */;
  %776 = @func_3541(%775) /* ty=(Tensor[(9, 8, 11), float64], Tensor[(1815), float32], Tensor[(1815), float32], Tensor[(2304), float64], Tensor[(16, 9, 14), float32]) */;
  %777 = @func_3386() /* ty=(Tensor[(9, 8, 11), float64], Tensor[(1815), float64], float32) */;
  %778 = @func_5159() /* ty=(Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16]) */;
  %779 = maximum(%772, %773) /* ty=Tensor[(7, 14, 9), float32] */;
  %780 = %776.1;
  %781 = %777.0;
  %782 = %778.1;
  (%779, %780, meta[relay.Constant][34] /* ty=Tensor[(2304), float64] */, %781, %782)
}

def @func_12259(%var_12257: Tensor[(11, 6, 4), float64]) -> (Tensor[(11, 6, 4), float64],) {
  @func_12256(%var_12257) /* ty=(Tensor[(11, 6, 4), float64],) */
}

def @func_13393() -> (Tensor[(98), float64], Tensor[(9, 8, 11), int16]) {
  %783 = @func_4338() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %784 = @func_9086() /* ty=Tensor[(98), float64] */;
  %785 = %783.0;
  (%784, %785)
}

def @func_10174() -> (Tensor[(16, 9, 14), float32],) {
  %786 = @func_5109() /* ty=(Tensor[(16, 9, 14), float32], Tensor[(16, 9, 14), uint8]) */;
  %787 = %786.0;
  (%787,)
}

def @func_4827() -> float32 {
  %788 = @func_2996() /* ty=(Tensor[(1815), float64], float32, float32, Tensor[(7, 2, 7), float64], Tensor[(98), float64], Tensor[(96, 24), int32]) */;
  %788.2
}

def @func_3115() -> (float32, Tensor[(13, 16, 3), float32], Tensor[(624), bool]) {
  %794 = fn () -> (float32, Tensor[(13, 16, 3), float32], Tensor[(624), bool]) {
    %789 = @func_3027() /* ty=(float32,) */;
    %790 = cast(meta[relay.Constant][35] /* ty=Tensor[(624), bool] */, dtype="bool") /* ty=Tensor[(624), bool] */;
    %791 = reshape(%790, newshape=[13, 16, 3]) /* ty=Tensor[(13, 16, 3), bool] */;
    %792 = %789.0;
    %793 = @func_129(%791) /* ty=Tensor[(13, 16, 3), float32] */;
    (%792, %793, meta[relay.Constant][35] /* ty=Tensor[(624), bool] */)
  };
  %794() /* ty=(float32, Tensor[(13, 16, 3), float32], Tensor[(624), bool]) */
}

def @func_5049(%var_5040: Tensor[(2304), float64]) -> (Tensor[(98), float64], Tensor[(312, 2), bool], Tensor[(2304), float64], float32) {
  %795 = @func_2996() /* ty=(Tensor[(1815), float64], float32, float32, Tensor[(7, 2, 7), float64], Tensor[(98), float64], Tensor[(96, 24), int32]) */;
  %796 = %795.4;
  %797 = cast(%796, dtype="float64") /* ty=Tensor[(98), float64] */;
  %798 = cast(%var_5040, dtype="float64") /* ty=Tensor[(2304), float64] */;
  %799 = reshape(%798, newshape=[2304]) /* ty=Tensor[(2304), float64] */;
  %800 = @func_2433(%799) /* ty=(Tensor[(1815), float32], Tensor[(11, 165), float32], Tensor[(2304), float64], Tensor[(312, 2), bool]) */;
  %801 = log(%797) /* ty=Tensor[(98), float64] */;
  %802 = %800.3;
  %803 = @func_4574() /* ty=float32 */;
  (%801, %802, %var_5040, %803)
}

def @func_9707() -> (Tensor[(98), float64], Tensor[(1815), float32], Tensor[(2304), float64], Tensor[(1815), float64]) {
  @func_9705() /* ty=(Tensor[(98), float64], Tensor[(1815), float32], Tensor[(2304), float64], Tensor[(1815), float64]) */
}

def @func_9952() -> (Tensor[(9, 8, 11), int16], Tensor[(16, 9, 14), float32]) {
  @func_9950() /* ty=(Tensor[(9, 8, 11), int16], Tensor[(16, 9, 14), float32]) */
}

def @func_8109() -> (float32, Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16], float32, Tensor[(16, 9, 14), float32], Tensor[(2016), float32]) {
  %804 = @func_3027() /* ty=(float32,) */;
  %805 = @func_7447() /* ty=(Tensor[(20, 2), float32], Tensor[(9, 8, 11), int16]) */;
  %806 = @func_1932() /* ty=(Tensor[(9, 8, 11), int16], Tensor[(16, 10, 5), float64], float32, Tensor[(1815), float32], Tensor[(9, 8, 11), float64]) */;
  %807 = cast(meta[relay.Constant][36] /* ty=Tensor[(2016), float32] */, dtype="float32") /* ty=Tensor[(2016), float32] */;
  %808 = reshape(%807, newshape=[16, 9, 14]) /* ty=Tensor[(16, 9, 14), float32] */;
  %809 = %804.0;
  %810 = %805.1;
  %811 = %806.0;
  %812 = @func_4827() /* ty=float32 */;
  %813 = @func_1583(%808) /* ty=Tensor[(16, 9, 14), float32] */;
  (%809, %810, %811, %812, %813, meta[relay.Constant][36] /* ty=Tensor[(2016), float32] */)
}

def @func_7371() -> (Tensor[(96, 24), float32], Tensor[(13, 16, 3), float32], Tensor[(624), bool]) {
  %819 = fn () -> (Tensor[(96, 24), float32], Tensor[(13, 16, 3), float32], Tensor[(624), bool]) {
    %814 = @func_7113() /* ty=(Tensor[(4, 6, 11), float64], Tensor[(96, 24), float32]) */;
    %815 = cast(meta[relay.Constant][37] /* ty=Tensor[(624), bool] */, dtype="bool") /* ty=Tensor[(624), bool] */;
    %816 = reshape(%815, newshape=[13, 16, 3]) /* ty=Tensor[(13, 16, 3), bool] */;
    %817 = %814.1;
    %818 = @func_129(%816) /* ty=Tensor[(13, 16, 3), float32] */;
    (%817, %818, meta[relay.Constant][37] /* ty=Tensor[(624), bool] */)
  };
  %819() /* ty=(Tensor[(96, 24), float32], Tensor[(13, 16, 3), float32], Tensor[(624), bool]) */
}

def @func_387(%var_385: float32, %var_386: Tensor[(11, 15, 11), float32]) -> Tensor[(11, 15, 11), float32] {
  %822 = fn (%var_362: float32, %var_363: Tensor[(11, 15, 11), float32]) -> Tensor[(11, 15, 11), float32] {
    %820 = cast(%var_362, dtype="float32") /* ty=float32 */;
    %821 = cast(%var_363, dtype="float32") /* ty=Tensor[(11, 15, 11), float32] */;
    floor_mod(%820, %821) /* ty=Tensor[(11, 15, 11), float32] */
  };
  %822(%var_385, %var_386) /* ty=Tensor[(11, 15, 11), float32] */
}

def @func_2805() -> Tensor[(1815), float64] {
  %823 = @func_2051() /* ty=(Tensor[(1815), float64],) */;
  %823.0
}

def @func_7543() -> Tensor[(13, 16, 3), float32] {
  @func_7541() /* ty=Tensor[(13, 16, 3), float32] */
}

def @func_14036() -> (Tensor[(96, 24), float64],) {
  %826 = fn () -> (Tensor[(96, 24), float64],) {
    %824 = @func_10944() /* ty=(Tensor[(98), float64], Tensor[(96, 24), float64]) */;
    %825 = %824.1;
    (%825,)
  };
  %826() /* ty=(Tensor[(96, 24), float64],) */
}

def @func_3414() -> (Tensor[(13, 16, 3), float32],) {
  %829 = fn () -> (Tensor[(13, 16, 3), float32],) {
    %827 = @func_3114() /* ty=(float32, Tensor[(13, 16, 3), float32], Tensor[(624), bool]) */;
    %828 = %827.1;
    (%828,)
  };
  %829() /* ty=(Tensor[(13, 16, 3), float32],) */
}

def @func_14277() -> Tensor[(9, 8, 11), float64] {
  %830 = fn () -> Tensor[(9, 8, 11), float64] {
    @func_4055() /* ty=Tensor[(9, 8, 11), float64] */
  };
  %830() /* ty=Tensor[(9, 8, 11), float64] */
}

def @func_10746() -> float32 {
  %831 = @func_6353() /* ty=(float32,) */;
  %831.0
}

def @func_5354() -> Tensor[(16, 9, 14), uint8] {
  %832 = @func_3749() /* ty=(Tensor[(16, 9, 14), uint8], Tensor[(16, 9, 14), float32]) */;
  %832.0
}

def @func_7509() -> (Tensor[(16, 9, 14), float32], Tensor[(9, 8, 11), int16]) {
  @func_7507() /* ty=(Tensor[(16, 9, 14), float32], Tensor[(9, 8, 11), int16]) */
}

def @func_10991() -> Tensor[(13, 16, 3), float32] {
  @func_10989() /* ty=Tensor[(13, 16, 3), float32] */
}

def @func_2052() -> (Tensor[(1815), float64],) {
  %837 = fn () -> (Tensor[(1815), float64],) {
    %833 = @func_1932() /* ty=(Tensor[(9, 8, 11), int16], Tensor[(16, 10, 5), float64], float32, Tensor[(1815), float32], Tensor[(9, 8, 11), float64]) */;
    %834 = %833.3;
    %835 = cast(%834, dtype="float64") /* ty=Tensor[(1815), float64] */;
    %836 = sqrt(%835) /* ty=Tensor[(1815), float64] */;
    (%836,)
  };
  %837() /* ty=(Tensor[(1815), float64],) */
}

def @func_9479() -> (Tensor[(9, 8, 11), float64],) {
  %840 = fn () -> (Tensor[(9, 8, 11), float64],) {
    %838 = @func_2860() /* ty=(Tensor[(9, 8, 11), float64], Tensor[(9, 8, 11), int16]) */;
    %839 = %838.0;
    (%839,)
  };
  %840() /* ty=(Tensor[(9, 8, 11), float64],) */
}

def @func_9303() -> (Tensor[(1815), float32], Tensor[(13, 16, 3), float32]) {
  %844 = fn () -> (Tensor[(1815), float32], Tensor[(13, 16, 3), float32]) {
    %841 = @func_4510() /* ty=(Tensor[(1815), float32], Tensor[(9, 8, 11), int16]) */;
    %842 = %841.0;
    %843 = @func_3578() /* ty=Tensor[(13, 16, 3), float32] */;
    (%842, %843)
  };
  %844() /* ty=(Tensor[(1815), float32], Tensor[(13, 16, 3), float32]) */
}

def @func_1645(%var_1644: Tensor[(7, 2, 7), float64]) -> Tensor[(7, 2, 7), float64] {
  %846 = fn (%var_1625: Tensor[(7, 2, 7), float64]) -> Tensor[(7, 2, 7), float64] {
    %845 = cast(%var_1625, dtype="float64") /* ty=Tensor[(7, 2, 7), float64] */;
    cos(%845) /* ty=Tensor[(7, 2, 7), float64] */
  };
  %846(%var_1644) /* ty=Tensor[(7, 2, 7), float64] */
}

def @func_8775() -> (float32, Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), float32]) {
  @func_8773() /* ty=(float32, Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), float32]) */
}

def @func_10442(%var_10440: Tensor[(98, 4), float64], %var_10441: Tensor[(98), bool]) -> (Tensor[(98, 4), float64], Tensor[(11, 165), uint64], Tensor[(9, 8, 11), float32], Tensor[(98), uint8], Tensor[(13, 16, 3), float32], Tensor[(98), uint8]) {
  %884 = fn (%var_10353: Tensor[(98, 4), float64], %var_10378: Tensor[(98), bool]) -> (Tensor[(98, 4), float64], Tensor[(11, 165), uint64], Tensor[(9, 8, 11), float32], Tensor[(98), uint8], Tensor[(13, 16, 3), float32], Tensor[(98), uint8]) {
    %847 = @func_9134() /* ty=Tensor[(11, 165), float32] */;
    %848 = cast(%var_10353, dtype="float64") /* ty=Tensor[(98, 4), float64] */;
    %849 = reshape(%848, newshape=[7, 8, 7]) /* ty=Tensor[(7, 8, 7), float64] */;
    %850 = @func_8820(%849) /* ty=(Tensor[(7, 8, 7), float64], Tensor[(16, 9, 14), int8], Tensor[(1815), float64]) */;
    %851 = %850.2;
    %852 = cast(%851, dtype="uint64") /* ty=Tensor[(1815), uint64] */;
    %853 = shape_of(%847, dtype="int32") /* ty=Tensor[(2), int32] */;
    %854 = cast(%847, dtype="uint64") /* ty=Tensor[(11, 165), uint64] */;
    %855 = dyn.reshape(%852, %853, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
    %856 = @func_5542() /* ty=(Tensor[(9, 8, 11), float32], Tensor[(1815), float64]) */;
    %857 = @func_9555() /* ty=Tensor[(98), float64] */;
    %858 = cast(%857, dtype="float32") /* ty=Tensor[(98), float32] */;
    %859 = asinh(%858) /* ty=Tensor[(98), float32] */;
    %860 = cast(%857, dtype="bool") /* ty=Tensor[(98), bool] */;
    %861 = shape_of(%859, dtype="int32") /* ty=Tensor[(1), int32] */;
    %862 = cast(%859, dtype="bool") /* ty=Tensor[(98), bool] */;
    %863 = dyn.reshape(%860, %861, newshape=[]) /* ty=Tensor[(?), bool] */;
    %864 = logical_and(%862, %863) /* ty=Tensor[(98), bool] */;
    %865 = cast(%var_10378, dtype="bool") /* ty=Tensor[(98), bool] */;
    %866 = shape_of(%864, dtype="int32") /* ty=Tensor[(1), int32] */;
    %867 = cast(%864, dtype="bool") /* ty=Tensor[(98), bool] */;
    %868 = dyn.reshape(%865, %866, newshape=[]) /* ty=Tensor[(?), bool] */;
    %869 = greater(%867, %868) /* ty=Tensor[(98), bool] */;
    %870 = cast(%869, dtype="uint8") /* ty=Tensor[(98), uint8] */;
    %871 = shape_of(%864, dtype="int32") /* ty=Tensor[(1), int32] */;
    %872 = cast(%864, dtype="uint8") /* ty=Tensor[(98), uint8] */;
    %873 = dyn.reshape(%870, %871, newshape=[]) /* ty=Tensor[(?), uint8] */;
    %874 = @func_9302() /* ty=(Tensor[(1815), float32], Tensor[(13, 16, 3), float32]) */;
    %875 = cast(%859, dtype="uint8") /* ty=Tensor[(98), uint8] */;
    %876 = shape_of(%864, dtype="int32") /* ty=Tensor[(1), int32] */;
    %877 = cast(%864, dtype="uint8") /* ty=Tensor[(98), uint8] */;
    %878 = dyn.reshape(%875, %876, newshape=[]) /* ty=Tensor[(?), uint8] */;
    %879 = multiply(%854, %855) /* ty=Tensor[(11, 165), uint64] */;
    %880 = %856.0;
    %881 = bitwise_and(%872, %873) /* ty=Tensor[(98), uint8] */;
    %882 = %874.1;
    %883 = logical_xor(%877, %878) /* ty=Tensor[(98), uint8] */;
    (%var_10353, %879, %880, %881, %882, %883)
  };
  %884(%var_10440, %var_10441) /* ty=(Tensor[(98, 4), float64], Tensor[(11, 165), uint64], Tensor[(9, 8, 11), float32], Tensor[(98), uint8], Tensor[(13, 16, 3), float32], Tensor[(98), uint8]) */
}

def @func_12584() -> (float32,) {
  %887 = fn () -> (float32,) {
    %885 = @func_3027() /* ty=(float32,) */;
    %886 = %885.0;
    (%886,)
  };
  %887() /* ty=(float32,) */
}

def @func_9780() -> Tensor[(9, 8, 11), int16] {
  %888 = fn () -> Tensor[(9, 8, 11), int16] {
    @func_3694() /* ty=Tensor[(9, 8, 11), int16] */
  };
  %888() /* ty=Tensor[(9, 8, 11), int16] */
}

def @func_10555() -> Tensor[(9, 8, 11), float64] {
  %889 = @func_9737() /* ty=(Tensor[(9, 8, 11), float64],) */;
  %889.0
}

def @func_8668() -> (Tensor[(9, 8, 11), float32], Tensor[(9, 8, 11), float64], Tensor[(13, 16, 3), float32]) {
  %898 = fn () -> (Tensor[(9, 8, 11), float32], Tensor[(9, 8, 11), float64], Tensor[(13, 16, 3), float32]) {
    %890 = @func_7025() /* ty=(Tensor[(1815), float64], Tensor[(9, 8, 11), float32]) */;
    %891 = @func_2132() /* ty=(Tensor[(9, 8, 11), float64], Tensor[(1815), float64], Tensor[(1815), float64]) */;
    %892 = @func_7578() /* ty=(Tensor[(13, 16, 3), float32], Tensor[(13, 16, 3), float64], Tensor[(9, 8, 11), int16], Tensor[(13, 16, 3), float32]) */;
    %893 = %892.3;
    %894 = cast(%893, dtype="float32") /* ty=Tensor[(13, 16, 3), float32] */;
    %895 = %890.1;
    %896 = %891.0;
    %897 = tan(%894) /* ty=Tensor[(13, 16, 3), float32] */;
    (%895, %896, %897)
  };
  %898() /* ty=(Tensor[(9, 8, 11), float32], Tensor[(9, 8, 11), float64], Tensor[(13, 16, 3), float32]) */
}

def @func_12341() -> (Tensor[(16, 9, 14), int8], Tensor[(16, 9, 14), float32]) {
  %899 = @func_7083() /* ty=(Tensor[(16, 9, 14), int8], Tensor[(1815), float64], Tensor[(1815), float32]) */;
  %900 = %899.0;
  %901 = @func_2730() /* ty=Tensor[(16, 9, 14), float32] */;
  (%900, %901)
}

def @main() -> Tensor[(11, 6, 1), float64] {
  %902 = cast(meta[relay.Constant][38] /* ty=Tensor[(11, 6, 1), float64] */, dtype="float64") /* ty=Tensor[(11, 6, 1), float64] */;
  rsqrt(%902) /* ty=Tensor[(11, 6, 1), float64] */
}

def @func_2565() -> (Tensor[(1815), float64], Tensor[(16, 9, 14), float32], Tensor[(2016), float32], Tensor[(312, 2), bool], Tensor[(96, 24), int32], Tensor[(16, 9, 14), float32]) {
  %920 = fn () -> (Tensor[(1815), float64], Tensor[(16, 9, 14), float32], Tensor[(2016), float32], Tensor[(312, 2), bool], Tensor[(96, 24), int32], Tensor[(16, 9, 14), float32]) {
    %903 = @func_2051() /* ty=(Tensor[(1815), float64],) */;
    %904 = cast(meta[relay.Constant][39] /* ty=Tensor[(2016), float32] */, dtype="float32") /* ty=Tensor[(2016), float32] */;
    %905 = reshape(%904, newshape=[16, 9, 14]) /* ty=Tensor[(16, 9, 14), float32] */;
    %906 = cast(meta[relay.Constant][40] /* ty=Tensor[(96, 24), float64] */, dtype="float64") /* ty=Tensor[(96, 24), float64] */;
    %907 = reshape(%906, newshape=[2304]) /* ty=Tensor[(2304), float64] */;
    %908 = @func_2433(%907) /* ty=(Tensor[(1815), float32], Tensor[(11, 165), float32], Tensor[(2304), float64], Tensor[(312, 2), bool]) */;
    %909 = @func_1932() /* ty=(Tensor[(9, 8, 11), int16], Tensor[(16, 10, 5), float64], float32, Tensor[(1815), float32], Tensor[(9, 8, 11), float64]) */;
    %910 = %909.2;
    %911 = cast(meta[relay.Constant][40] /* ty=Tensor[(96, 24), float64] */, dtype="int32") /* ty=Tensor[(96, 24), int32] */;
    %912 = cast(%910, dtype="int32") /* ty=int32 */;
    %913 = cast(meta[relay.Constant][39] /* ty=Tensor[(2016), float32] */, dtype="float32") /* ty=Tensor[(2016), float32] */;
    %914 = reshape(%913, newshape=[16, 9, 14]) /* ty=Tensor[(16, 9, 14), float32] */;
    %915 = %903.0;
    %916 = @func_1583(%905) /* ty=Tensor[(16, 9, 14), float32] */;
    %917 = %908.3;
    %918 = bitwise_and(%911, %912) /* ty=Tensor[(96, 24), int32] */;
    %919 = @func_1583(%914) /* ty=Tensor[(16, 9, 14), float32] */;
    (%915, %916, meta[relay.Constant][39] /* ty=Tensor[(2016), float32] */, %917, %918, %919)
  };
  %920() /* ty=(Tensor[(1815), float64], Tensor[(16, 9, 14), float32], Tensor[(2016), float32], Tensor[(312, 2), bool], Tensor[(96, 24), int32], Tensor[(16, 9, 14), float32]) */
}

def @func_9439(%var_9437: Tensor[(624), bool]) -> (Tensor[(1815), float32], Tensor[(9, 8, 11), int16], Tensor[(624), bool]) {
  @func_9436(%var_9437) /* ty=(Tensor[(1815), float32], Tensor[(9, 8, 11), int16], Tensor[(624), bool]) */
}

def @func_2998() -> (Tensor[(1815), float64], float32, float32, Tensor[(7, 2, 7), float64], Tensor[(98), float64], Tensor[(96, 24), int32]) {
  @func_2996() /* ty=(Tensor[(1815), float64], float32, float32, Tensor[(7, 2, 7), float64], Tensor[(98), float64], Tensor[(96, 24), int32]) */
}

def @func_7760(%var_7757: Tensor[(624), bool], %var_7758: Tensor[(1815), float32]) -> (float32, Tensor[(9, 8, 11), int16], float32, Tensor[(2304), float64], Tensor[(624), bool], Tensor[(1815), float32]) {
  %921 = @func_4878() /* ty=(Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16]) */;
  %922 = cast(meta[relay.Constant][41] /* ty=Tensor[(2304), float64] */, dtype="float64") /* ty=Tensor[(2304), float64] */;
  %923 = cast(%var_7757, dtype="bool") /* ty=Tensor[(624), bool] */;
  %924 = cast(%var_7758, dtype="float32") /* ty=Tensor[(1815), float32] */;
  %925 = reshape(%922, newshape=[2304]) /* ty=Tensor[(2304), float64] */;
  %926 = reshape(%923, newshape=[2, 312]) /* ty=Tensor[(2, 312), bool] */;
  %927 = reshape(%924, newshape=[11, 165]) /* ty=Tensor[(11, 165), float32] */;
  %928 = @func_2030(%925, %926, %927) /* ty=(Tensor[(9, 8, 11), int16], Tensor[(13, 16, 3), float32], Tensor[(2304), float64], Tensor[(2, 312), bool], float32, float32, Tensor[(11, 165), float32]) */;
  %929 = @func_4574() /* ty=float32 */;
  %930 = %921.0;
  %931 = %928.4;
  (%929, %930, %931, meta[relay.Constant][41] /* ty=Tensor[(2304), float64] */, %var_7757, %var_7758)
}

def @func_13186(%var_13169: Tensor[(624), bool]) -> (Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16], Tensor[(1248), float32], Tensor[(624), bool], Tensor[(16, 9, 14), uint8], Tensor[(624), bool]) {
  %932 = @func_8038() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %933 = cast(meta[relay.Constant][42] /* ty=Tensor[(1248), float32] */, dtype="float32") /* ty=Tensor[(1248), float32] */;
  %934 = cast(%var_13169, dtype="bool") /* ty=Tensor[(624), bool] */;
  %935 = reshape(%933, newshape=[8, 13, 12]) /* ty=Tensor[(8, 13, 12), float32] */;
  %936 = reshape(%934, newshape=[624]) /* ty=Tensor[(624), bool] */;
  %937 = @func_4705(%935, %936) /* ty=(Tensor[(8, 13, 12), float64], Tensor[(13, 16, 3), float32], Tensor[(624), bool], Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16], Tensor[(40), float32]) */;
  %938 = @func_3114() /* ty=(float32, Tensor[(13, 16, 3), float32], Tensor[(624), bool]) */;
  %939 = %932.0;
  %940 = %937.4;
  %941 = @func_11558() /* ty=Tensor[(16, 9, 14), uint8] */;
  %942 = %938.2;
  (%939, %940, meta[relay.Constant][42] /* ty=Tensor[(1248), float32] */, %var_13169, %941, %942)
}

def @func_10495() -> (Tensor[(16, 9, 14), float32], Tensor[(4, 156), bool], Tensor[(96, 24), int32]) {
  %949 = fn () -> (Tensor[(16, 9, 14), float32], Tensor[(4, 156), bool], Tensor[(96, 24), int32]) {
    %943 = @func_9750() /* ty=(Tensor[(16, 9, 14), float32], Tensor[(16, 9, 14), float32]) */;
    %944 = @func_8940() /* ty=(float32, Tensor[(13, 16, 3), float32], Tensor[(4, 156), bool], Tensor[(1815), float32]) */;
    %945 = @func_2996() /* ty=(Tensor[(1815), float64], float32, float32, Tensor[(7, 2, 7), float64], Tensor[(98), float64], Tensor[(96, 24), int32]) */;
    %946 = %943.1;
    %947 = %944.2;
    %948 = %945.5;
    (%946, %947, %948)
  };
  %949() /* ty=(Tensor[(16, 9, 14), float32], Tensor[(4, 156), bool], Tensor[(96, 24), int32]) */
}

def @func_11898(%var_11897: Tensor[(104, 12), float32]) -> (Tensor[(4, 6, 11), float64], Tensor[(9, 8, 11), float64], Tensor[(9, 8, 11), int16], Tensor[(624), bool], Tensor[(104, 12), bool]) {
  %964 = fn (%var_11889: Tensor[(104, 12), float32]) -> (Tensor[(4, 6, 11), float64], Tensor[(9, 8, 11), float64], Tensor[(9, 8, 11), int16], Tensor[(624), bool], Tensor[(104, 12), bool]) {
    %950 = @func_10962() /* ty=(Tensor[(4, 6, 11), float64],) */;
    %951 = cast(meta[relay.Constant][43] /* ty=Tensor[(104, 12), float32] */, dtype="float32") /* ty=Tensor[(104, 12), float32] */;
    %952 = cast(meta[relay.Constant][44] /* ty=Tensor[(624), bool] */, dtype="bool") /* ty=Tensor[(624), bool] */;
    %953 = reshape(%951, newshape=[8, 13, 12]) /* ty=Tensor[(8, 13, 12), float32] */;
    %954 = reshape(%952, newshape=[624]) /* ty=Tensor[(624), bool] */;
    %955 = @func_4705(%953, %954) /* ty=(Tensor[(8, 13, 12), float64], Tensor[(13, 16, 3), float32], Tensor[(624), bool], Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16], Tensor[(40), float32]) */;
    %956 = cast(%var_11889, dtype="bool") /* ty=Tensor[(104, 12), bool] */;
    %957 = shape_of(meta[relay.Constant][43] /* ty=Tensor[(104, 12), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %958 = cast(meta[relay.Constant][43] /* ty=Tensor[(104, 12), float32] */, dtype="bool") /* ty=Tensor[(104, 12), bool] */;
    %959 = dyn.reshape(%956, %957, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %960 = %950.0;
    %961 = @func_4055() /* ty=Tensor[(9, 8, 11), float64] */;
    %962 = %955.4;
    %963 = less(%958, %959) /* ty=Tensor[(104, 12), bool] */;
    (%960, %961, %962, meta[relay.Constant][44] /* ty=Tensor[(624), bool] */, %963)
  };
  %964(%var_11897) /* ty=(Tensor[(4, 6, 11), float64], Tensor[(9, 8, 11), float64], Tensor[(9, 8, 11), int16], Tensor[(624), bool], Tensor[(104, 12), bool]) */
}

def @func_4356() -> (Tensor[(13, 16, 3), float32],) {
  %965 = @func_3578() /* ty=Tensor[(13, 16, 3), float32] */;
  (%965,)
}

def @func_6671(%var_6669: Tensor[(2304), float64], %var_6670: Tensor[(13, 16, 3), float32]) -> (Tensor[(2304), float64], Tensor[(2304), float64], Tensor[(9, 8, 11), int16], Tensor[(16, 9, 14), uint8], Tensor[(13, 16, 3), int16]) {
  @func_6667(%var_6669, %var_6670) /* ty=(Tensor[(2304), float64], Tensor[(2304), float64], Tensor[(9, 8, 11), int16], Tensor[(16, 9, 14), uint8], Tensor[(13, 16, 3), int16]) */
}

def @func_3696() -> Tensor[(9, 8, 11), int16] {
  @func_3694() /* ty=Tensor[(9, 8, 11), int16] */
}

def @func_4708(%var_4706: Tensor[(8, 13, 12), float32], %var_4707: Tensor[(624), bool]) -> (Tensor[(8, 13, 12), float64], Tensor[(13, 16, 3), float32], Tensor[(624), bool], Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16], Tensor[(40), float32]) {
  %979 = fn (%var_4659: Tensor[(8, 13, 12), float32], %var_4672: Tensor[(624), bool]) -> (Tensor[(8, 13, 12), float64], Tensor[(13, 16, 3), float32], Tensor[(624), bool], Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16], Tensor[(40), float32]) {
    %966 = cast(%var_4659, dtype="float32") /* ty=Tensor[(8, 13, 12), float32] */;
    %967 = sin(%966) /* ty=Tensor[(8, 13, 12), float32] */;
    %968 = cast(%967, dtype="float64") /* ty=Tensor[(8, 13, 12), float64] */;
    %969 = cast(%var_4672, dtype="bool") /* ty=Tensor[(624), bool] */;
    %970 = reshape(%969, newshape=[13, 16, 3]) /* ty=Tensor[(13, 16, 3), bool] */;
    %971 = @func_4510() /* ty=(Tensor[(1815), float32], Tensor[(9, 8, 11), int16]) */;
    %972 = cast(meta[relay.Constant][45] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
    %973 = reshape(%972, newshape=[40]) /* ty=Tensor[(40), float32] */;
    %974 = @func_2185(%973) /* ty=(Tensor[(9, 8, 11), int16], Tensor[(4, 10, ?), int32]) */;
    %975 = acosh(%968) /* ty=Tensor[(8, 13, 12), float64] */;
    %976 = @func_129(%970) /* ty=Tensor[(13, 16, 3), float32] */;
    %977 = %971.1;
    %978 = %974.0;
    (%975, %976, %var_4672, %977, %978, meta[relay.Constant][45] /* ty=Tensor[(40), float32] */)
  };
  %979(%var_4706, %var_4707) /* ty=(Tensor[(8, 13, 12), float64], Tensor[(13, 16, 3), float32], Tensor[(624), bool], Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16], Tensor[(40), float32]) */
}

def @func_12984() -> (Tensor[(16, 9, 14), float32],) {
  %982 = fn () -> (Tensor[(16, 9, 14), float32],) {
    %980 = @func_12341() /* ty=(Tensor[(16, 9, 14), int8], Tensor[(16, 9, 14), float32]) */;
    %981 = %980.1;
    (%981,)
  };
  %982() /* ty=(Tensor[(16, 9, 14), float32],) */
}

def @func_4880() -> (Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16]) {
  @func_4878() /* ty=(Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16]) */
}

def @func_11870() -> (Tensor[(9, 8, 11), int16],) {
  %983 = @func_7578() /* ty=(Tensor[(13, 16, 3), float32], Tensor[(13, 16, 3), float64], Tensor[(9, 8, 11), int16], Tensor[(13, 16, 3), float32]) */;
  %984 = %983.2;
  (%984,)
}

def @func_1759(%var_1757: Tensor[(4, 10, 1), float32]) -> (Tensor[(4, 10, 1), float32],) {
  @func_1756(%var_1757) /* ty=(Tensor[(4, 10, 1), float32],) */
}

def @func_4748() -> (Tensor[(9, 8, 11), float64], Tensor[(1815), float64]) {
  %988 = fn () -> (Tensor[(9, 8, 11), float64], Tensor[(1815), float64]) {
    %985 = @func_3297() /* ty=(Tensor[(9, 8, 11), float64],) */;
    %986 = %985.0;
    %987 = @func_2805() /* ty=Tensor[(1815), float64] */;
    (%986, %987)
  };
  %988() /* ty=(Tensor[(9, 8, 11), float64], Tensor[(1815), float64]) */
}

def @func_10104(%var_10103: Tensor[(624), bool]) -> (Tensor[(9, 8, 11), int16], Tensor[(1815), float32], Tensor[(624), bool]) {
  %995 = fn (%var_10087: Tensor[(624), bool]) -> (Tensor[(9, 8, 11), int16], Tensor[(1815), float32], Tensor[(624), bool]) {
    %989 = @func_9255() /* ty=(Tensor[(13, 16, 3), float32], Tensor[(9, 8, 11), int16], Tensor[(98), float64]) */;
    %990 = cast(%var_10087, dtype="bool") /* ty=Tensor[(624), bool] */;
    %991 = reshape(%990, newshape=[624]) /* ty=Tensor[(624), bool] */;
    %992 = @func_9436(%991) /* ty=(Tensor[(1815), float32], Tensor[(9, 8, 11), int16], Tensor[(624), bool]) */;
    %993 = %989.1;
    %994 = %992.0;
    (%993, %994, %var_10087)
  };
  %995(%var_10103) /* ty=(Tensor[(9, 8, 11), int16], Tensor[(1815), float32], Tensor[(624), bool]) */
}

def @func_10623() -> (Tensor[(2, 3, 14), bool], float32) {
  @func_10621() /* ty=(Tensor[(2, 3, 14), bool], float32) */
}

def @func_10592() -> Tensor[(96, 24), int32] {
  @func_10590() /* ty=Tensor[(96, 24), int32] */
}

def @func_6718() -> (Tensor[(9, 8, 11), int16],) {
  %996 = @func_3898() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %997 = %996.0;
  (%997,)
}

def @func_11628(%var_11627: Tensor[(624, 1), bool]) -> (Tensor[(16, 12, 12), float64], Tensor[(4, 576), float64], Tensor[(624, 40), float64]) {
  %1011 = fn (%var_11611: Tensor[(624, 1), bool]) -> (Tensor[(16, 12, 12), float64], Tensor[(4, 576), float64], Tensor[(624, 40), float64]) {
    %998 = cast(meta[relay.Constant][46] /* ty=Tensor[(4, 576), float64] */, dtype="float64") /* ty=Tensor[(4, 576), float64] */;
    %999 = cast(meta[relay.Constant][46] /* ty=Tensor[(4, 576), float64] */, dtype="float64") /* ty=Tensor[(4, 576), float64] */;
    %1000 = cast(%var_11611, dtype="bool") /* ty=Tensor[(624, 1), bool] */;
    %1001 = reshape(%998, newshape=[16, 12, 12]) /* ty=Tensor[(16, 12, 12), float64] */;
    %1002 = reshape(%999, newshape=[16, 12, 12]) /* ty=Tensor[(16, 12, 12), float64] */;
    %1003 = reshape(%1000, newshape=[624]) /* ty=Tensor[(624), bool] */;
    %1004 = @func_839(%1001, %1002, %1003) /* ty=(Tensor[(16, 12, 12), float64], Tensor[(13, 16, 3), float32], Tensor[(624), bool]) */;
    %1005 = @func_7265() /* ty=(Tensor[(40), float32],) */;
    %1006 = %1005.0;
    %1007 = cast(%var_11611, dtype="float64") /* ty=Tensor[(624, 1), float64] */;
    %1008 = cast(%1006, dtype="float64") /* ty=Tensor[(40), float64] */;
    %1009 = %1004.0;
    %1010 = divide(%1007, %1008) /* ty=Tensor[(624, 40), float64] */;
    (%1009, meta[relay.Constant][46] /* ty=Tensor[(4, 576), float64] */, %1010)
  };
  %1011(%var_11627) /* ty=(Tensor[(16, 12, 12), float64], Tensor[(4, 576), float64], Tensor[(624, 40), float64]) */
}

def @func_14511() -> (float32,) {
  %1014 = fn () -> (float32,) {
    %1012 = @func_12583() /* ty=(float32,) */;
    %1013 = %1012.0;
    (%1013,)
  };
  %1014() /* ty=(float32,) */
}

def @func_8361() -> (Tensor[(16, 9, 14), float32], Tensor[(9, 8, 11), int16]) {
  %1017 = fn () -> (Tensor[(16, 9, 14), float32], Tensor[(9, 8, 11), int16]) {
    %1015 = @func_2730() /* ty=Tensor[(16, 9, 14), float32] */;
    %1016 = @func_3694() /* ty=Tensor[(9, 8, 11), int16] */;
    (%1015, %1016)
  };
  %1017() /* ty=(Tensor[(16, 9, 14), float32], Tensor[(9, 8, 11), int16]) */
}

def @func_9751() -> (Tensor[(16, 9, 14), float32], Tensor[(16, 9, 14), float32]) {
  %1022 = fn () -> (Tensor[(16, 9, 14), float32], Tensor[(16, 9, 14), float32]) {
    %1018 = @func_5109() /* ty=(Tensor[(16, 9, 14), float32], Tensor[(16, 9, 14), uint8]) */;
    %1019 = @func_3749() /* ty=(Tensor[(16, 9, 14), uint8], Tensor[(16, 9, 14), float32]) */;
    %1020 = %1018.0;
    %1021 = %1019.1;
    (%1020, %1021)
  };
  %1022() /* ty=(Tensor[(16, 9, 14), float32], Tensor[(16, 9, 14), float32]) */
}

def @func_12097(%var_12010: Tensor[(96, 24), float32], %var_12056: Tensor[(1248), float32], %var_12092: Tensor[(96, 24), float64]) -> (Tensor[(96, 24), bool], Tensor[(4, 6, 11), float64], Tensor[(1248), float32], Tensor[(4, 10, ?), int64], Tensor[(40), float32], Tensor[(96, 24), uint16]) {
  %1023 = @func_7113() /* ty=(Tensor[(4, 6, 11), float64], Tensor[(96, 24), float32]) */;
  %1024 = %1023.1;
  %1025 = cast(%var_12010, dtype="bool") /* ty=Tensor[(96, 24), bool] */;
  %1026 = shape_of(%1024, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1027 = cast(%1024, dtype="bool") /* ty=Tensor[(96, 24), bool] */;
  %1028 = dyn.reshape(%1025, %1026, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1029 = logical_and(%1027, %1028) /* ty=Tensor[(96, 24), bool] */;
  %1030 = cast(%1024, dtype="bool") /* ty=Tensor[(96, 24), bool] */;
  %1031 = shape_of(%1029, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1032 = cast(%1029, dtype="bool") /* ty=Tensor[(96, 24), bool] */;
  %1033 = dyn.reshape(%1030, %1031, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1034 = cast(%var_12056, dtype="float32") /* ty=Tensor[(1248), float32] */;
  %1035 = reshape(%1034, newshape=[104, 12]) /* ty=Tensor[(104, 12), float32] */;
  %1036 = @func_11896(%1035) /* ty=(Tensor[(4, 6, 11), float64], Tensor[(9, 8, 11), float64], Tensor[(9, 8, 11), int16], Tensor[(624), bool], Tensor[(104, 12), bool]) */;
  %1037 = cast(meta[relay.Constant][47] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
  %1038 = reshape(%1037, newshape=[40]) /* ty=Tensor[(40), float32] */;
  %1039 = @func_8611(%1038) /* ty=(Tensor[(9, 8, 11), int16], Tensor[(16, 9, 14), int8], Tensor[(4, 6, 11), float64], Tensor[(9, 8, 11), int16], Tensor[(4, 10, ?), int64]) */;
  %1040 = cast(%1024, dtype="float32") /* ty=Tensor[(96, 24), float32] */;
  %1041 = sigmoid(%1040) /* ty=Tensor[(96, 24), float32] */;
  %1042 = cast(%1024, dtype="float32") /* ty=Tensor[(96, 24), float32] */;
  %1043 = shape_of(%1041, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1044 = cast(%1041, dtype="float32") /* ty=Tensor[(96, 24), float32] */;
  %1045 = dyn.reshape(%1042, %1043, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1046 = power(%1044, %1045) /* ty=Tensor[(96, 24), float32] */;
  %1047 = cast(%1046, dtype="float64") /* ty=Tensor[(96, 24), float64] */;
  %1048 = log(%1047) /* ty=Tensor[(96, 24), float64] */;
  %1049 = cast(%var_12092, dtype="uint16") /* ty=Tensor[(96, 24), uint16] */;
  %1050 = shape_of(%1048, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1051 = cast(%1048, dtype="uint16") /* ty=Tensor[(96, 24), uint16] */;
  %1052 = dyn.reshape(%1049, %1050, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %1053 = less(%1032, %1033) /* ty=Tensor[(96, 24), bool] */;
  %1054 = %1036.0;
  %1055 = %1039.4;
  %1056 = bitwise_or(%1051, %1052) /* ty=Tensor[(96, 24), uint16] */;
  (%1053, %1054, %var_12056, %1055, meta[relay.Constant][47] /* ty=Tensor[(40), float32] */, %1056)
}

def @func_10944() -> (Tensor[(98), float64], Tensor[(96, 24), float64]) {
  %1057 = @func_7113() /* ty=(Tensor[(4, 6, 11), float64], Tensor[(96, 24), float32]) */;
  %1058 = %1057.1;
  %1059 = cast(%1058, dtype="float64") /* ty=Tensor[(96, 24), float64] */;
  %1060 = @func_9086() /* ty=Tensor[(98), float64] */;
  %1061 = acos(%1059) /* ty=Tensor[(96, 24), float64] */;
  (%1060, %1061)
}

def @func_1335(%var_1317: float32, %var_1318: Tensor[(1815), float32]) -> (Tensor[(16, 10, 5), bool], Tensor[(11, 15, 11), float32], float32, Tensor[(1815), float32], Tensor[(16, 10, 5), float64]) {
  %1062 = cast(meta[relay.Constant][49] /* ty=Tensor[(16, 10, 5), uint8] */, dtype="bool") /* ty=Tensor[(16, 10, 5), bool] */;
  %1063 = shape_of(meta[relay.Constant][48] /* ty=Tensor[(16, 10, 5), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1064 = cast(meta[relay.Constant][48] /* ty=Tensor[(16, 10, 5), uint8] */, dtype="bool") /* ty=Tensor[(16, 10, 5), bool] */;
  %1065 = dyn.reshape(%1062, %1063, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1066 = cast(%var_1317, dtype="float32") /* ty=float32 */;
  %1067 = cast(%var_1318, dtype="float32") /* ty=Tensor[(1815), float32] */;
  %1068 = reshape(%1066, newshape=[]) /* ty=float32 */;
  %1069 = reshape(%1067, newshape=[11, 15, 11]) /* ty=Tensor[(11, 15, 11), float32] */;
  %1070 = cast(meta[relay.Constant][49] /* ty=Tensor[(16, 10, 5), uint8] */, dtype="float32") /* ty=Tensor[(16, 10, 5), float32] */;
  %1071 = exp(%1070) /* ty=Tensor[(16, 10, 5), float32] */;
  %1072 = cast(%1071, dtype="float64") /* ty=Tensor[(16, 10, 5), float64] */;
  %1073 = greater_equal(%1064, %1065) /* ty=Tensor[(16, 10, 5), bool] */;
  %1074 = @func_384(%1068, %1069) /* ty=Tensor[(11, 15, 11), float32] */;
  %1075 = log10(%1072) /* ty=Tensor[(16, 10, 5), float64] */;
  (%1073, %1074, %var_1317, %var_1318, %1075)
}

def @func_3543(%var_3542: Tensor[(2304), float64]) -> (Tensor[(9, 8, 11), float64], Tensor[(1815), float32], Tensor[(1815), float32], Tensor[(2304), float64], Tensor[(16, 9, 14), float32]) {
  %1090 = fn (%var_3516: Tensor[(2304), float64]) -> (Tensor[(9, 8, 11), float64], Tensor[(1815), float32], Tensor[(1815), float32], Tensor[(2304), float64], Tensor[(16, 9, 14), float32]) {
    %1076 = @func_3297() /* ty=(Tensor[(9, 8, 11), float64],) */;
    %1077 = @func_2051() /* ty=(Tensor[(1815), float64],) */;
    %1078 = %1077.0;
    %1079 = cast(meta[relay.Constant][50] /* ty=Tensor[(1815), float64] */, dtype="float32") /* ty=Tensor[(1815), float32] */;
    %1080 = shape_of(%1078, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1081 = cast(%1078, dtype="float32") /* ty=Tensor[(1815), float32] */;
    %1082 = dyn.reshape(%1079, %1080, newshape=[]) /* ty=Tensor[(?), float32] */;
    %1083 = cast(%var_3516, dtype="float64") /* ty=Tensor[(2304), float64] */;
    %1084 = reshape(%1083, newshape=[2304]) /* ty=Tensor[(2304), float64] */;
    %1085 = @func_2433(%1084) /* ty=(Tensor[(1815), float32], Tensor[(11, 165), float32], Tensor[(2304), float64], Tensor[(312, 2), bool]) */;
    %1086 = %1076.0;
    %1087 = floor_mod(%1081, %1082) /* ty=Tensor[(1815), float32] */;
    %1088 = %1085.0;
    %1089 = @func_2730() /* ty=Tensor[(16, 9, 14), float32] */;
    (%1086, %1087, %1088, %var_3516, %1089)
  };
  %1090(%var_3542) /* ty=(Tensor[(9, 8, 11), float64], Tensor[(1815), float32], Tensor[(1815), float32], Tensor[(2304), float64], Tensor[(16, 9, 14), float32]) */
}

def @func_11462() -> (Tensor[(16, 9, 14), uint8], float32) {
  %1094 = fn () -> (Tensor[(16, 9, 14), uint8], float32) {
    %1091 = @func_3027() /* ty=(float32,) */;
    %1092 = @func_9982() /* ty=Tensor[(16, 9, 14), uint8] */;
    %1093 = %1091.0;
    (%1092, %1093)
  };
  %1094() /* ty=(Tensor[(16, 9, 14), uint8], float32) */
}

def @func_13535() -> (Tensor[(13, 16, 3), int64], Tensor[(13, 16, 3), uint32]) {
  @func_13533() /* ty=(Tensor[(13, 16, 3), int64], Tensor[(13, 16, 3), uint32]) */
}

def @func_8878(%var_8859: float32, %var_8860: Tensor[(16, 13, 1), float32]) -> Tensor[(16, 13, 1), float32] {
  %1095 = cast(%var_8859, dtype="float32") /* ty=float32 */;
  %1096 = cast(%var_8860, dtype="float32") /* ty=Tensor[(16, 13, 1), float32] */;
  power(%1095, %1096) /* ty=Tensor[(16, 13, 1), float32] */
}

def @func_3237(%var_3234: Tensor[(3, 2, 1), float64], %var_3235: float32, %var_3236: Tensor[(1815, 1), float32]) -> (Tensor[(3, 2, 1), float64], float32, Tensor[(1815, ?), float32], Tensor[(16, 9, 14), float32]) {
  %1115 = fn (%var_3187: Tensor[(3, 2, 1), float64], %var_3191: float32, %var_3192: Tensor[(1815, 1), float32]) -> (Tensor[(3, 2, 1), float64], float32, Tensor[(1815, ?), float32], Tensor[(16, 9, 14), float32]) {
    %1097 = cast(%var_3187, dtype="float64") /* ty=Tensor[(3, 2, 1), float64] */;
    %1098 = cast(%var_3191, dtype="float32") /* ty=float32 */;
    %1099 = cast(%var_3192, dtype="float32") /* ty=Tensor[(1815, 1), float32] */;
    %1100 = reshape(%1098, newshape=[]) /* ty=float32 */;
    %1101 = reshape(%1099, newshape=[1815]) /* ty=Tensor[(1815), float32] */;
    %1102 = @func_1335(%1100, %1101) /* ty=(Tensor[(16, 10, 5), bool], Tensor[(11, 15, 11), float32], float32, Tensor[(1815), float32], Tensor[(16, 10, 5), float64]) */;
    %1103 = %1102.1;
    %1104 = cast(%1103, dtype="float32") /* ty=Tensor[(11, 15, 11), float32] */;
    %1105 = cosh(%1104) /* ty=Tensor[(11, 15, 11), float32] */;
    %1106 = cast(%1105, dtype="bool") /* ty=Tensor[(11, 15, 11), bool] */;
    %1107 = shape_of(%var_3192, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1108 = cast(%var_3192, dtype="bool") /* ty=Tensor[(1815, 1), bool] */;
    %1109 = dyn.reshape(%1106, %1107, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1110 = logical_or(%1108, %1109) /* ty=Tensor[(1815, ?), bool] */;
    %1111 = cast(%1110, dtype="float32") /* ty=Tensor[(1815, ?), float32] */;
    %1112 = atan(%1097) /* ty=Tensor[(3, 2, 1), float64] */;
    %1113 = asinh(%1111) /* ty=Tensor[(1815, ?), float32] */;
    %1114 = @func_2730() /* ty=Tensor[(16, 9, 14), float32] */;
    (%1112, %var_3191, %1113, %1114)
  };
  %1115(%var_3234, %var_3235, %var_3236) /* ty=(Tensor[(3, 2, 1), float64], float32, Tensor[(1815, ?), float32], Tensor[(16, 9, 14), float32]) */
}

def @func_1932() -> (Tensor[(9, 8, 11), int16], Tensor[(16, 10, 5), float64], float32, Tensor[(1815), float32], Tensor[(9, 8, 11), float64]) {
  %1116 = @func_1686() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %1117 = cast(-6.78501f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %1118 = cast(meta[relay.Constant][51] /* ty=Tensor[(1815), float32] */, dtype="float32") /* ty=Tensor[(1815), float32] */;
  %1119 = reshape(%1117, newshape=[]) /* ty=float32 */;
  %1120 = reshape(%1118, newshape=[1815]) /* ty=Tensor[(1815), float32] */;
  %1121 = @func_1335(%1119, %1120) /* ty=(Tensor[(16, 10, 5), bool], Tensor[(11, 15, 11), float32], float32, Tensor[(1815), float32], Tensor[(16, 10, 5), float64]) */;
  %1122 = @func_1614() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %1123 = %1122.0;
  %1124 = cast(%1123, dtype="float32") /* ty=Tensor[(9, 8, 11), float32] */;
  %1125 = exp(%1124) /* ty=Tensor[(9, 8, 11), float32] */;
  %1126 = cast(%1125, dtype="float32") /* ty=Tensor[(9, 8, 11), float32] */;
  %1127 = cosh(%1126) /* ty=Tensor[(9, 8, 11), float32] */;
  %1128 = cast(%1127, dtype="float64") /* ty=Tensor[(9, 8, 11), float64] */;
  %1129 = %1116.0;
  %1130 = %1121.4;
  %1131 = sin(%1128) /* ty=Tensor[(9, 8, 11), float64] */;
  (%1129, %1130, -6.78501f /* ty=float32 */, meta[relay.Constant][51] /* ty=Tensor[(1815), float32] */, %1131)
}

def @func_1690() -> Tensor[(9, 8, 11), int16] {
  %1132 = @func_1614() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %1132.0
}

def @func_2860() -> (Tensor[(9, 8, 11), float64], Tensor[(9, 8, 11), int16]) {
  %1133 = @func_1932() /* ty=(Tensor[(9, 8, 11), int16], Tensor[(16, 10, 5), float64], float32, Tensor[(1815), float32], Tensor[(9, 8, 11), float64]) */;
  %1134 = @func_1686() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %1135 = %1133.4;
  %1136 = %1134.0;
  (%1135, %1136)
}

def @func_13774(%var_13772: Tensor[(7, 14, 9), float64]) -> (Tensor[(7, 14, 9), float32], Tensor[(1815), float32], Tensor[(2304), float64], Tensor[(9, 8, 11), float64], Tensor[(9, 8, 11), int16]) {
  @func_13771(%var_13772) /* ty=(Tensor[(7, 14, 9), float32], Tensor[(1815), float32], Tensor[(2304), float64], Tensor[(9, 8, 11), float64], Tensor[(9, 8, 11), int16]) */
}

def @func_2034(%var_2031: Tensor[(2304), float64], %var_2032: Tensor[(2, 312), bool], %var_2033: Tensor[(11, 165), float32]) -> (Tensor[(9, 8, 11), int16], Tensor[(13, 16, 3), float32], Tensor[(2304), float64], Tensor[(2, 312), bool], float32, float32, Tensor[(11, 165), float32]) {
  %1153 = fn (%var_2002: Tensor[(2304), float64], %var_2003: Tensor[(2, 312), bool], %var_2027: Tensor[(11, 165), float32]) -> (Tensor[(9, 8, 11), int16], Tensor[(13, 16, 3), float32], Tensor[(2304), float64], Tensor[(2, 312), bool], float32, float32, Tensor[(11, 165), float32]) {
    %1137 = @func_1614() /* ty=(Tensor[(9, 8, 11), int16],) */;
    %1138 = cast(%var_2002, dtype="float64") /* ty=Tensor[(2304), float64] */;
    %1139 = cast(%var_2002, dtype="float64") /* ty=Tensor[(2304), float64] */;
    %1140 = cast(%var_2003, dtype="bool") /* ty=Tensor[(2, 312), bool] */;
    %1141 = reshape(%1138, newshape=[16, 12, 12]) /* ty=Tensor[(16, 12, 12), float64] */;
    %1142 = reshape(%1139, newshape=[16, 12, 12]) /* ty=Tensor[(16, 12, 12), float64] */;
    %1143 = reshape(%1140, newshape=[624]) /* ty=Tensor[(624), bool] */;
    %1144 = @func_839(%1141, %1142, %1143) /* ty=(Tensor[(16, 12, 12), float64], Tensor[(13, 16, 3), float32], Tensor[(624), bool]) */;
    %1145 = cast(8.34497f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %1146 = cast(%var_2027, dtype="float32") /* ty=Tensor[(11, 165), float32] */;
    %1147 = reshape(%1145, newshape=[]) /* ty=float32 */;
    %1148 = reshape(%1146, newshape=[1815]) /* ty=Tensor[(1815), float32] */;
    %1149 = @func_1812(%1147, %1148) /* ty=(Tensor[(9, 8, 11), int16], float32, float32, Tensor[(1815), float32]) */;
    %1150 = %1137.0;
    %1151 = %1144.1;
    %1152 = %1149.1;
    (%1150, %1151, %var_2002, %var_2003, %1152, 8.34497f /* ty=float32 */, %var_2027)
  };
  %1153(%var_2031, %var_2032, %var_2033) /* ty=(Tensor[(9, 8, 11), int16], Tensor[(13, 16, 3), float32], Tensor[(2304), float64], Tensor[(2, 312), bool], float32, float32, Tensor[(11, 165), float32]) */
}

def @func_13189(%var_13187: Tensor[(624), bool]) -> (Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16], Tensor[(1248), float32], Tensor[(624), bool], Tensor[(16, 9, 14), uint8], Tensor[(624), bool]) {
  @func_13186(%var_13187) /* ty=(Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16], Tensor[(1248), float32], Tensor[(624), bool], Tensor[(16, 9, 14), uint8], Tensor[(624), bool]) */
}

def @func_7083() -> (Tensor[(16, 9, 14), int8], Tensor[(1815), float64], Tensor[(1815), float32]) {
  %1154 = @func_5010() /* ty=(Tensor[(16, 9, 14), int8],) */;
  %1155 = @func_3386() /* ty=(Tensor[(9, 8, 11), float64], Tensor[(1815), float64], float32) */;
  %1156 = @func_4747() /* ty=(Tensor[(9, 8, 11), float64], Tensor[(1815), float64]) */;
  %1157 = %1156.1;
  %1158 = cast(%1157, dtype="float32") /* ty=Tensor[(1815), float32] */;
  %1159 = %1154.0;
  %1160 = %1155.1;
  %1161 = asin(%1158) /* ty=Tensor[(1815), float32] */;
  (%1159, %1160, %1161)
}

def @func_7206() -> (Tensor[(9, 8, 11), int16],) {
  %1162 = @func_5159() /* ty=(Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16]) */;
  %1163 = %1162.0;
  (%1163,)
}

def @func_13449() -> (Tensor[(1815), float64], Tensor[(13, 16, 3), float32], Tensor[(1815), float64]) {
  @func_13447() /* ty=(Tensor[(1815), float64], Tensor[(13, 16, 3), float32], Tensor[(1815), float64]) */
}

def @func_6094() -> (Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16]) {
  %1164 = @func_5159() /* ty=(Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16]) */;
  %1165 = @func_3694() /* ty=Tensor[(9, 8, 11), int16] */;
  %1166 = %1164.0;
  (%1165, %1166)
}

def @func_6720() -> (Tensor[(9, 8, 11), int16],) {
  @func_6718() /* ty=(Tensor[(9, 8, 11), int16],) */
}

def @func_8455() -> (Tensor[(9, 8, 11), float64],) {
  %1167 = @func_4055() /* ty=Tensor[(9, 8, 11), float64] */;
  (%1167,)
}

def @func_7265() -> (Tensor[(40), float32],) {
  %1168 = @func_5864() /* ty=(Tensor[(16, 9, 14), float32], Tensor[(40), float32], Tensor[(20, 2), float32], Tensor[(9, 8, 11), int16], Tensor[(11, 165), float32], Tensor[(16, 144), float64]) */;
  %1169 = %1168.1;
  (%1169,)
}

def @func_6274() -> Tensor[(9, 8, 11), float32] {
  @func_6272() /* ty=Tensor[(9, 8, 11), float32] */
}

def @func_10648() -> (Tensor[(16, 9, 14), uint8],) {
  @func_10646() /* ty=(Tensor[(16, 9, 14), uint8],) */
}

def @func_4929(%var_4928: Tensor[(40), float32]) -> (Tensor[(9, 8, 11), int16], Tensor[(4, 10, ?), int32], Tensor[(40), float32]) {
  %1176 = fn (%var_4925: Tensor[(40), float32]) -> (Tensor[(9, 8, 11), int16], Tensor[(4, 10, ?), int32], Tensor[(40), float32]) {
    %1170 = @func_1873() /* ty=(Tensor[(9, 8, 11), float32], Tensor[(16, 9, 14), float32], Tensor[(2016), float32], Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16]) */;
    %1171 = cast(%var_4925, dtype="float32") /* ty=Tensor[(40), float32] */;
    %1172 = reshape(%1171, newshape=[40]) /* ty=Tensor[(40), float32] */;
    %1173 = @func_2185(%1172) /* ty=(Tensor[(9, 8, 11), int16], Tensor[(4, 10, ?), int32]) */;
    %1174 = %1170.4;
    %1175 = %1173.1;
    (%1174, %1175, %var_4925)
  };
  %1176(%var_4928) /* ty=(Tensor[(9, 8, 11), int16], Tensor[(4, 10, ?), int32], Tensor[(40), float32]) */
}

def @func_9596(%var_9588: Tensor[(1540), float64]) -> (Tensor[(40), float32], Tensor[(40), float32], Tensor[(1540), float64], Tensor[(9, 8, 11), int16]) {
  %1177 = @func_7265() /* ty=(Tensor[(40), float32],) */;
  %1178 = cast(%var_9588, dtype="float64") /* ty=Tensor[(1540), float64] */;
  %1179 = reshape(%1178, newshape=[1540]) /* ty=Tensor[(1540), float64] */;
  %1180 = @func_9387(%1179) /* ty=(Tensor[(9, 8, 11), int16], Tensor[(1540), float64], Tensor[(40), float32], Tensor[(121, 15), float32], Tensor[(1540), float64]) */;
  %1181 = @func_8681() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %1182 = %1177.0;
  %1183 = %1180.2;
  %1184 = %1181.0;
  (%1182, %1183, %var_9588, %1184)
}

def @func_8682() -> (Tensor[(9, 8, 11), int16],) {
  %1187 = fn () -> (Tensor[(9, 8, 11), int16],) {
    %1185 = @func_3898() /* ty=(Tensor[(9, 8, 11), int16],) */;
    %1186 = %1185.0;
    (%1186,)
  };
  %1187() /* ty=(Tensor[(9, 8, 11), int16],) */
}

def @func_9876() -> (Tensor[(9, 8, 11), int16], Tensor[(98), float64]) {
  @func_9874() /* ty=(Tensor[(9, 8, 11), int16], Tensor[(98), float64]) */
}

def @func_4117() -> (Tensor[(8, 9, 7), float32],) {
  %1190 = fn () -> (Tensor[(8, 9, 7), float32],) {
    %1188 = cast(meta[relay.Constant][52] /* ty=Tensor[(8, 9, 7), float32] */, dtype="float32") /* ty=Tensor[(8, 9, 7), float32] */;
    %1189 = log10(%1188) /* ty=Tensor[(8, 9, 7), float32] */;
    (%1189,)
  };
  %1190() /* ty=(Tensor[(8, 9, 7), float32],) */
}

def @func_5650() -> (Tensor[(16, 9, 14), uint8], Tensor[(1815), float64], Tensor[(1815), float32], Tensor[(2304), float64]) {
  @func_5648() /* ty=(Tensor[(16, 9, 14), uint8], Tensor[(1815), float64], Tensor[(1815), float32], Tensor[(2304), float64]) */
}

def @func_3387() -> (Tensor[(9, 8, 11), float64], Tensor[(1815), float64], float32) {
  %1197 = fn () -> (Tensor[(9, 8, 11), float64], Tensor[(1815), float64], float32) {
    %1191 = @func_3297() /* ty=(Tensor[(9, 8, 11), float64],) */;
    %1192 = @func_2051() /* ty=(Tensor[(1815), float64],) */;
    %1193 = @func_3027() /* ty=(float32,) */;
    %1194 = %1191.0;
    %1195 = %1192.0;
    %1196 = %1193.0;
    (%1194, %1195, %1196)
  };
  %1197() /* ty=(Tensor[(9, 8, 11), float64], Tensor[(1815), float64], float32) */
}

def @func_11731(%var_11730: Tensor[(96, 24), float32]) -> (Tensor[(96, 24), float64],) {
  %1205 = fn (%var_11718: Tensor[(96, 24), float32]) -> (Tensor[(96, 24), float64],) {
    %1198 = @func_7113() /* ty=(Tensor[(4, 6, 11), float64], Tensor[(96, 24), float32]) */;
    %1199 = %1198.1;
    %1200 = cast(%var_11718, dtype="float64") /* ty=Tensor[(96, 24), float64] */;
    %1201 = shape_of(%1199, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1202 = cast(%1199, dtype="float64") /* ty=Tensor[(96, 24), float64] */;
    %1203 = dyn.reshape(%1200, %1201, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %1204 = divide(%1202, %1203) /* ty=Tensor[(96, 24), float64] */;
    (%1204,)
  };
  %1205(%var_11730) /* ty=(Tensor[(96, 24), float64],) */
}

def @func_11559() -> Tensor[(16, 9, 14), uint8] {
  %1207 = fn () -> Tensor[(16, 9, 14), uint8] {
    %1206 = @func_5109() /* ty=(Tensor[(16, 9, 14), float32], Tensor[(16, 9, 14), uint8]) */;
    %1206.1
  };
  %1207() /* ty=Tensor[(16, 9, 14), uint8] */
}

def @func_12102(%var_12099: Tensor[(96, 24), float32], %var_12100: Tensor[(1248), float32], %var_12101: Tensor[(96, 24), float64]) -> (Tensor[(96, 24), bool], Tensor[(4, 6, 11), float64], Tensor[(1248), float32], Tensor[(4, 10, ?), int64], Tensor[(40), float32], Tensor[(96, 24), uint16]) {
  @func_12097(%var_12099, %var_12100, %var_12101) /* ty=(Tensor[(96, 24), bool], Tensor[(4, 6, 11), float64], Tensor[(1248), float32], Tensor[(4, 10, ?), int64], Tensor[(40), float32], Tensor[(96, 24), uint16]) */
}

def @func_10781(%var_10779: Tensor[(9, 15, 6), float64]) -> Tensor[(9, 15, 6), float64] {
  @func_10778(%var_10779) /* ty=Tensor[(9, 15, 6), float64] */
}

def @func_14505() -> Tensor[(9, 8, 11), int16] {
  @func_14503() /* ty=Tensor[(9, 8, 11), int16] */
}

def @func_7996() -> Tensor[(9, 8, 11), float64] {
  @func_7994() /* ty=Tensor[(9, 8, 11), float64] */
}

def @func_8204() -> Tensor[(9, 8, 11), float32] {
  %1208 = @func_6817() /* ty=(Tensor[(9, 8, 11), float32], Tensor[(9, 8, 11), float64], Tensor[(9, 8, 11), float64]) */;
  %1208.0
}

def @func_11380() -> Tensor[(98), float64] {
  %1210 = fn () -> Tensor[(98), float64] {
    %1209 = @func_8713() /* ty=(Tensor[(13, 16, 3), float32], Tensor[(98), float64], Tensor[(98), float64]) */;
    %1209.1
  };
  %1210() /* ty=Tensor[(98), float64] */
}

def @func_7396() -> (Tensor[(4, 6, 11), float64],) {
  @func_7394() /* ty=(Tensor[(4, 6, 11), float64],) */
}

def @func_6219() -> (Tensor[(16, 9, 14), float32],) {
  %1211 = @func_2730() /* ty=Tensor[(16, 9, 14), float32] */;
  (%1211,)
}

def @func_8162(%var_8133: Tensor[(12, 12, 2), float64], %var_8134: Tensor[(12, 12, 2), float64]) -> Tensor[(12, 12, 2), float64] {
  %1212 = cast(%var_8134, dtype="float64") /* ty=Tensor[(12, 12, 2), float64] */;
  %1213 = shape_of(%var_8133, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1214 = cast(%var_8133, dtype="float64") /* ty=Tensor[(12, 12, 2), float64] */;
  %1215 = dyn.reshape(%1212, %1213, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  mod(%1214, %1215) /* ty=Tensor[(12, 12, 2), float64] */
}

def @func_8822(%var_8821: Tensor[(7, 8, 7), float64]) -> (Tensor[(7, 8, 7), float64], Tensor[(16, 9, 14), int8], Tensor[(1815), float64]) {
  %1222 = fn (%var_8800: Tensor[(7, 8, 7), float64]) -> (Tensor[(7, 8, 7), float64], Tensor[(16, 9, 14), int8], Tensor[(1815), float64]) {
    %1216 = cast(%var_8800, dtype="float64") /* ty=Tensor[(7, 8, 7), float64] */;
    %1217 = @func_7083() /* ty=(Tensor[(16, 9, 14), int8], Tensor[(1815), float64], Tensor[(1815), float32]) */;
    %1218 = @func_7083() /* ty=(Tensor[(16, 9, 14), int8], Tensor[(1815), float64], Tensor[(1815), float32]) */;
    %1219 = sin(%1216) /* ty=Tensor[(7, 8, 7), float64] */;
    %1220 = %1217.0;
    %1221 = %1218.1;
    (%1219, %1220, %1221)
  };
  %1222(%var_8821) /* ty=(Tensor[(7, 8, 7), float64], Tensor[(16, 9, 14), int8], Tensor[(1815), float64]) */
}

def @func_7208() -> (Tensor[(9, 8, 11), int16],) {
  @func_7206() /* ty=(Tensor[(9, 8, 11), int16],) */
}

def @func_6317() -> (Tensor[(9, 8, 11), int16],) {
  %1225 = fn () -> (Tensor[(9, 8, 11), int16],) {
    %1223 = @func_4338() /* ty=(Tensor[(9, 8, 11), int16],) */;
    %1224 = %1223.0;
    (%1224,)
  };
  %1225() /* ty=(Tensor[(9, 8, 11), int16],) */
}

def @func_1934() -> (Tensor[(9, 8, 11), int16], Tensor[(16, 10, 5), float64], float32, Tensor[(1815), float32], Tensor[(9, 8, 11), float64]) {
  @func_1932() /* ty=(Tensor[(9, 8, 11), int16], Tensor[(16, 10, 5), float64], float32, Tensor[(1815), float32], Tensor[(9, 8, 11), float64]) */
}

def @func_4112() -> (Tensor[(1815), float64], float32) {
  %1229 = fn () -> (Tensor[(1815), float64], float32) {
    %1226 = @func_2996() /* ty=(Tensor[(1815), float64], float32, float32, Tensor[(7, 2, 7), float64], Tensor[(98), float64], Tensor[(96, 24), int32]) */;
    %1227 = @func_4033() /* ty=Tensor[(1815), float64] */;
    %1228 = %1226.2;
    (%1227, %1228)
  };
  %1229() /* ty=(Tensor[(1815), float64], float32) */
}

def @func_7840() -> (Tensor[(1815), float32],) {
  @func_7838() /* ty=(Tensor[(1815), float32],) */
}

def @func_8940() -> (float32, Tensor[(13, 16, 3), float32], Tensor[(4, 156), bool], Tensor[(1815), float32]) {
  %1230 = @func_3386() /* ty=(Tensor[(9, 8, 11), float64], Tensor[(1815), float64], float32) */;
  %1231 = cast(meta[relay.Constant][53] /* ty=Tensor[(4, 156), bool] */, dtype="bool") /* ty=Tensor[(4, 156), bool] */;
  %1232 = reshape(%1231, newshape=[13, 16, 3]) /* ty=Tensor[(13, 16, 3), bool] */;
  %1233 = @func_4510() /* ty=(Tensor[(1815), float32], Tensor[(9, 8, 11), int16]) */;
  %1234 = %1230.2;
  %1235 = @func_129(%1232) /* ty=Tensor[(13, 16, 3), float32] */;
  %1236 = %1233.0;
  (%1234, %1235, meta[relay.Constant][53] /* ty=Tensor[(4, 156), bool] */, %1236)
}

def @func_15017() -> (Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), float64], Tensor[(4, 10, 1), float32], Tensor[(40), float32]) {
  %1237 = @func_11870() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %1238 = cast(meta[relay.Constant][54] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
  %1239 = reshape(%1238, newshape=[4, 10, 1]) /* ty=Tensor[(4, 10, 1), float32] */;
  %1240 = @func_1756(%1239) /* ty=(Tensor[(4, 10, 1), float32],) */;
  %1241 = %1237.0;
  %1242 = @func_7994() /* ty=Tensor[(9, 8, 11), float64] */;
  %1243 = %1240.0;
  (%1241, %1242, %1243, meta[relay.Constant][54] /* ty=Tensor[(40), float32] */)
}

def @func_8111() -> (float32, Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16], float32, Tensor[(16, 9, 14), float32], Tensor[(2016), float32]) {
  @func_8109() /* ty=(float32, Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16], float32, Tensor[(16, 9, 14), float32], Tensor[(2016), float32]) */
}

def @func_9599(%var_9597: Tensor[(1540), float64]) -> (Tensor[(40), float32], Tensor[(40), float32], Tensor[(1540), float64], Tensor[(9, 8, 11), int16]) {
  @func_9596(%var_9597) /* ty=(Tensor[(40), float32], Tensor[(40), float32], Tensor[(1540), float64], Tensor[(9, 8, 11), int16]) */
}

def @func_2485() -> Tensor[(9, 8, 11), float32] {
  %1247 = fn () -> Tensor[(9, 8, 11), float32] {
    %1244 = @func_1686() /* ty=(Tensor[(9, 8, 11), int16],) */;
    %1245 = %1244.0;
    %1246 = cast(%1245, dtype="float32") /* ty=Tensor[(9, 8, 11), float32] */;
    cos(%1246) /* ty=Tensor[(9, 8, 11), float32] */
  };
  %1247() /* ty=Tensor[(9, 8, 11), float32] */
}

def @func_1583(%var_1569: Tensor[(16, 9, 14), float32]) -> Tensor[(16, 9, 14), float32] {
  %1248 = cast(%var_1569, dtype="float32") /* ty=Tensor[(16, 9, 14), float32] */;
  sin(%1248) /* ty=Tensor[(16, 9, 14), float32] */
}

def @func_4878() -> (Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16]) {
  %1249 = @func_2753() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %1250 = @func_4338() /* ty=(Tensor[(9, 8, 11), int16],) */;
  %1251 = %1249.0;
  %1252 = %1250.0;
  (%1251, %1252)
}

def @func_10176() -> (Tensor[(16, 9, 14), float32],) {
  @func_10174() /* ty=(Tensor[(16, 9, 14), float32],) */
}

def @func_7448() -> (Tensor[(20, 2), float32], Tensor[(9, 8, 11), int16]) {
  %1257 = fn () -> (Tensor[(20, 2), float32], Tensor[(9, 8, 11), int16]) {
    %1253 = @func_5864() /* ty=(Tensor[(16, 9, 14), float32], Tensor[(40), float32], Tensor[(20, 2), float32], Tensor[(9, 8, 11), int16], Tensor[(11, 165), float32], Tensor[(16, 144), float64]) */;
    %1254 = @func_4878() /* ty=(Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16]) */;
    %1255 = %1253.2;
    %1256 = %1254.1;
    (%1255, %1256)
  };
  %1257() /* ty=(Tensor[(20, 2), float32], Tensor[(9, 8, 11), int16]) */
}

def @func_14762() -> (Tensor[(9, 8, 11), float32], Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16]) {
  @func_14760() /* ty=(Tensor[(9, 8, 11), float32], Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16]) */
}

def @func_3750() -> (Tensor[(16, 9, 14), uint8], Tensor[(16, 9, 14), float32]) {
  %1267 = fn () -> (Tensor[(16, 9, 14), uint8], Tensor[(16, 9, 14), float32]) {
    %1258 = @func_2730() /* ty=Tensor[(16, 9, 14), float32] */;
    %1259 = cast(meta[relay.Constant][55] /* ty=Tensor[(16, 9, 14), float32] */, dtype="uint8") /* ty=Tensor[(16, 9, 14), uint8] */;
    %1260 = shape_of(%1258, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1261 = cast(%1258, dtype="uint8") /* ty=Tensor[(16, 9, 14), uint8] */;
    %1262 = dyn.reshape(%1259, %1260, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %1263 = cast(%1258, dtype="float32") /* ty=Tensor[(16, 9, 14), float32] */;
    %1264 = reshape(%1263, newshape=[16, 9, 14]) /* ty=Tensor[(16, 9, 14), float32] */;
    %1265 = left_shift(%1261, %1262) /* ty=Tensor[(16, 9, 14), uint8] */;
    %1266 = @func_1583(%1264) /* ty=Tensor[(16, 9, 14), float32] */;
    (%1265, %1266)
  };
  %1267() /* ty=(Tensor[(16, 9, 14), uint8], Tensor[(16, 9, 14), float32]) */
}

def @func_11085() -> Tensor[(8, 9, 7), float32] {
  @func_11083() /* ty=Tensor[(8, 9, 7), float32] */
}

def @func_6175(%var_6174: Tensor[(14, 11, 10), float64]) -> (Tensor[(14, 11, 10), float64],) {
  %1270 = fn (%var_6170: Tensor[(14, 11, 10), float64]) -> (Tensor[(14, 11, 10), float64],) {
    %1268 = cast(%var_6170, dtype="float64") /* ty=Tensor[(14, 11, 10), float64] */;
    %1269 = exp(%1268) /* ty=Tensor[(14, 11, 10), float64] */;
    (%1269,)
  };
  %1270(%var_6174) /* ty=(Tensor[(14, 11, 10), float64],) */
}

def @func_3157() -> (Tensor[(9, 8, 11), float32],) {
  %1272 = fn () -> (Tensor[(9, 8, 11), float32],) {
    %1271 = @func_2484() /* ty=Tensor[(9, 8, 11), float32] */;
    (%1271,)
  };
  %1272() /* ty=(Tensor[(9, 8, 11), float32],) */
}

def @func_5356() -> Tensor[(16, 9, 14), uint8] {
  @func_5354() /* ty=Tensor[(16, 9, 14), uint8] */
}

def @func_8330(%var_8328: Tensor[(6, 9, 6), float64], %var_8329: Tensor[(6, 9, 6), float64]) -> (Tensor[(6, 9, 6), bool],) {
  %1278 = fn (%var_8317: Tensor[(6, 9, 6), float64], %var_8318: Tensor[(6, 9, 6), float64]) -> (Tensor[(6, 9, 6), bool],) {
    %1273 = cast(%var_8318, dtype="bool") /* ty=Tensor[(6, 9, 6), bool] */;
    %1274 = shape_of(%var_8317, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1275 = cast(%var_8317, dtype="bool") /* ty=Tensor[(6, 9, 6), bool] */;
    %1276 = dyn.reshape(%1273, %1274, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1277 = greater_equal(%1275, %1276) /* ty=Tensor[(6, 9, 6), bool] */;
    (%1277,)
  };
  %1278(%var_8328, %var_8329) /* ty=(Tensor[(6, 9, 6), bool],) */
}

def @func_2409(%var_2407: Tensor[(624), bool], %var_2408: Tensor[(1, 1815), float32]) -> (Tensor[(9, 8, 11), int16], Tensor[(13, 16, 3), float32], Tensor[(624), bool], Tensor[(11, 15, 11), float32], float32, Tensor[(1, 1815), float32], Tensor[(4, 10, ?), int32], Tensor[(40, 1), float32]) {
  %1294 = fn (%var_2352: Tensor[(624), bool], %var_2356: Tensor[(1, 1815), float32]) -> (Tensor[(9, 8, 11), int16], Tensor[(13, 16, 3), float32], Tensor[(624), bool], Tensor[(11, 15, 11), float32], float32, Tensor[(1, 1815), float32], Tensor[(4, 10, ?), int32], Tensor[(40, 1), float32]) {
    %1279 = @func_1614() /* ty=(Tensor[(9, 8, 11), int16],) */;
    %1280 = cast(%var_2352, dtype="bool") /* ty=Tensor[(624), bool] */;
    %1281 = reshape(%1280, newshape=[1, 624]) /* ty=Tensor[(1, 624), bool] */;
    %1282 = @func_2283(%1281) /* ty=(Tensor[(9, 8, 11), int16], Tensor[(13, 16, 3), float32], Tensor[(1, 624), float32], Tensor[(9, 8, 11), int16]) */;
    %1283 = cast(3.71071f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %1284 = cast(%var_2356, dtype="float32") /* ty=Tensor[(1, 1815), float32] */;
    %1285 = reshape(%1283, newshape=[]) /* ty=float32 */;
    %1286 = reshape(%1284, newshape=[11, 15, 11]) /* ty=Tensor[(11, 15, 11), float32] */;
    %1287 = cast(meta[relay.Constant][56] /* ty=Tensor[(40, 1), float32] */, dtype="float32") /* ty=Tensor[(40, 1), float32] */;
    %1288 = reshape(%1287, newshape=[40]) /* ty=Tensor[(40), float32] */;
    %1289 = @func_2185(%1288) /* ty=(Tensor[(9, 8, 11), int16], Tensor[(4, 10, ?), int32]) */;
    %1290 = %1279.0;
    %1291 = %1282.1;
    %1292 = @func_384(%1285, %1286) /* ty=Tensor[(11, 15, 11), float32] */;
    %1293 = %1289.1;
    (%1290, %1291, %var_2352, %1292, 3.71071f /* ty=float32 */, %var_2356, %1293, meta[relay.Constant][56] /* ty=Tensor[(40, 1), float32] */)
  };
  %1294(%var_2407, %var_2408) /* ty=(Tensor[(9, 8, 11), int16], Tensor[(13, 16, 3), float32], Tensor[(624), bool], Tensor[(11, 15, 11), float32], float32, Tensor[(1, 1815), float32], Tensor[(4, 10, ?), int32], Tensor[(40, 1), float32]) */
}

def @func_4033() -> Tensor[(1815), float64] {
  %1295 = @func_2132() /* ty=(Tensor[(9, 8, 11), float64], Tensor[(1815), float64], Tensor[(1815), float64]) */;
  %1295.1
}

def @func_11529() -> (Tensor[(9, 8, 11), float64], Tensor[(20, 2), float64]) {
  %1301 = fn () -> (Tensor[(9, 8, 11), float64], Tensor[(20, 2), float64]) {
    %1296 = @func_7447() /* ty=(Tensor[(20, 2), float32], Tensor[(9, 8, 11), int16]) */;
    %1297 = %1296.0;
    %1298 = cast(%1297, dtype="float64") /* ty=Tensor[(20, 2), float64] */;
    %1299 = @func_4055() /* ty=Tensor[(9, 8, 11), float64] */;
    %1300 = atanh(%1298) /* ty=Tensor[(20, 2), float64] */;
    (%1299, %1300)
  };
  %1301() /* ty=(Tensor[(9, 8, 11), float64], Tensor[(20, 2), float64]) */
}

def @func_2731() -> Tensor[(16, 9, 14), float32] {
  %1303 = fn () -> Tensor[(16, 9, 14), float32] {
    %1302 = @func_1873() /* ty=(Tensor[(9, 8, 11), float32], Tensor[(16, 9, 14), float32], Tensor[(2016), float32], Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16]) */;
    %1302.1
  };
  %1303() /* ty=Tensor[(16, 9, 14), float32] */
}

def @func_7816(%var_7814: Tensor[(15, 5, 11), float32]) -> (Tensor[(15, 5, 11), float32],) {
  @func_7813(%var_7814) /* ty=(Tensor[(15, 5, 11), float32],) */
}

def @func_4575() -> float32 {
  %1305 = fn () -> float32 {
    %1304 = @func_4111() /* ty=(Tensor[(1815), float64], float32) */;
    %1304.1
  };
  %1305() /* ty=float32 */
}

def @func_9058() -> (Tensor[(9, 8, 11), float32], Tensor[(96, 24), float64]) {
  %1313 = fn () -> (Tensor[(9, 8, 11), float32], Tensor[(96, 24), float64]) {
    %1306 = @func_7113() /* ty=(Tensor[(4, 6, 11), float64], Tensor[(96, 24), float32]) */;
    %1307 = %1306.1;
    %1308 = cast(%1307, dtype="float32") /* ty=Tensor[(96, 24), float32] */;
    %1309 = atan(%1308) /* ty=Tensor[(96, 24), float32] */;
    %1310 = cast(%1309, dtype="float64") /* ty=Tensor[(96, 24), float64] */;
    %1311 = @func_8126() /* ty=Tensor[(9, 8, 11), float32] */;
    %1312 = cosh(%1310) /* ty=Tensor[(96, 24), float64] */;
    (%1311, %1312)
  };
  %1313() /* ty=(Tensor[(9, 8, 11), float32], Tensor[(96, 24), float64]) */
}

def @func_14574() -> (Tensor[(9, 8, 11), float32],) {
  @func_14572() /* ty=(Tensor[(9, 8, 11), float32],) */
}

def @func_8715() -> (Tensor[(13, 16, 3), float32], Tensor[(98), float64], Tensor[(98), float64]) {
  @func_8713() /* ty=(Tensor[(13, 16, 3), float32], Tensor[(98), float64], Tensor[(98), float64]) */
}

def @func_13076() -> (Tensor[(1815), float64],) {
  %1316 = fn () -> (Tensor[(1815), float64],) {
    %1314 = @func_5648() /* ty=(Tensor[(16, 9, 14), uint8], Tensor[(1815), float64], Tensor[(1815), float32], Tensor[(2304), float64]) */;
    %1315 = %1314.1;
    (%1315,)
  };
  %1316() /* ty=(Tensor[(1815), float64],) */
}

def @func_8051() -> Tensor[(16, 9, 14), float64] {
  %1317 = @func_2564() /* ty=(Tensor[(1815), float64], Tensor[(16, 9, 14), float32], Tensor[(2016), float32], Tensor[(312, 2), bool], Tensor[(96, 24), int32], Tensor[(16, 9, 14), float32]) */;
  %1318 = %1317.1;
  %1319 = cast(%1318, dtype="float64") /* ty=Tensor[(16, 9, 14), float64] */;
  log10(%1319) /* ty=Tensor[(16, 9, 14), float64] */
}

def @func_9874() -> (Tensor[(9, 8, 11), int16], Tensor[(98), float64]) {
  %1320 = @func_6094() /* ty=(Tensor[(9, 8, 11), int16], Tensor[(9, 8, 11), int16]) */;
  %1321 = @func_8713() /* ty=(Tensor[(13, 16, 3), float32], Tensor[(98), float64], Tensor[(98), float64]) */;
  %1322 = %1320.1;
  %1323 = %1321.1;
  (%1322, %1323)
}

def @func_8613(%var_8612: Tensor[(40), float32]) -> (Tensor[(9, 8, 11), int16], Tensor[(16, 9, 14), int8], Tensor[(4, 6, 11), float64], Tensor[(9, 8, 11), int16], Tensor[(4, 10, ?), int64]) {
  %1345 = fn (%var_8548: Tensor[(40), float32]) -> (Tensor[(9, 8, 11), int16], Tensor[(16, 9, 14), int8], Tensor[(4, 6, 11), float64], Tensor[(9, 8, 11), int16], Tensor[(4, 10, ?), int64]) {
    %1324 = @func_7507() /* ty=(Tensor[(16, 9, 14), float32], Tensor[(9, 8, 11), int16]) */;
    %1325 = @func_7083() /* ty=(Tensor[(16, 9, 14), int8], Tensor[(1815), float64], Tensor[(1815), float32]) */;
    %1326 = @func_2753() /* ty=(Tensor[(9, 8, 11), int16],) */;
    %1327 = cast(%var_8548, dtype="float32") /* ty=Tensor[(40), float32] */;
    %1328 = reshape(%1327, newshape=[40]) /* ty=Tensor[(40), float32] */;
    %1329 = @func_4927(%1328) /* ty=(Tensor[(9, 8, 11), int16], Tensor[(4, 10, ?), int32], Tensor[(40), float32]) */;
    %1330 = %1329.1;
    %1331 = cast(%var_8548, dtype="float64") /* ty=Tensor[(40), float64] */;
    %1332 = shape_of(%1330, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1333 = cast(%1330, dtype="float64") /* ty=Tensor[(4, 10, ?), float64] */;
    %1334 = dyn.reshape(%1331, %1332, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1335 = floor_mod(%1333, %1334) /* ty=Tensor[(4, 10, ?), float64] */;
    %1336 = cast(%var_8548, dtype="int64") /* ty=Tensor[(40), int64] */;
    %1337 = shape_of(%1335, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1338 = cast(%1335, dtype="int64") /* ty=Tensor[(4, 10, ?), int64] */;
    %1339 = dyn.reshape(%1336, %1337, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %1340 = %1324.1;
    %1341 = %1325.0;
    %1342 = @func_5276() /* ty=Tensor[(4, 6, 11), float64] */;
    %1343 = %1326.0;
    %1344 = right_shift(%1338, %1339) /* ty=Tensor[(4, 10, ?), int64] */;
    (%1340, %1341, %1342, %1343, %1344)
  };
  %1345(%var_8612) /* ty=(Tensor[(9, 8, 11), int16], Tensor[(16, 9, 14), int8], Tensor[(4, 6, 11), float64], Tensor[(9, 8, 11), int16], Tensor[(4, 10, ?), int64]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen860/build/output.py:4564: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen860/build/output.py:4569: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='cuda')
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen860/build/output.py:4602: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen860/build/output.py:4607: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='cuda')
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen860/build/output.py:4612: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mutated_mod, target='llvm')
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen860/build/output.py:4617: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mutated_mod, target='cuda')

===================================
#[version = "0.0.5"]
type GradCell[T] {
  Raw(T),
  One(fn () -> T),
  Zero(fn () -> T),
}

def @main() -> (Tensor[(11, 6, 1), float64], ()) {
  %0 = ();
  (meta[relay.Constant][0] /* ty=Tensor[(11, 6, 1), float64] */, %0)
}

def @MultiplyGradCell[T](%multiply: fn (T, T) -> T, %l: GradCell[T], %r: GradCell[T]) -> GradCell[T] {
  %1 = (%l, %r);
  match (%1) {
    (Zero(_), _) => {
      %l
    },
    (_, Zero(_)) => {
      %r
    },
    (One(_), _) => {
      %r
    },
    (_, One(_)) => {
      %l
    },
    _ => {
      %2 = match (%l) {
        Raw(%x: T) => {
          %x
        },
        One(%x1: fn () -> T) => {
          %x1() /* ty=T */
        },
        Zero(%x2: fn () -> T) => {
          %x2() /* ty=T */
        },
      };
      %3 = match (%r) {
        Raw(%x3: T) => {
          %x3
        },
        One(%x4: fn () -> T) => {
          %x4() /* ty=T */
        },
        Zero(%x5: fn () -> T) => {
          %x5() /* ty=T */
        },
      };
      %4 = %multiply(%2, %3) /* ty=T */;
      Raw(%4) /* ty=GradCell[T] */
    },
  }
}

def @AddGradCell[T](%add: fn (T, T) -> T, %l1: GradCell[T], %r1: GradCell[T]) -> GradCell[T] {
  %5 = (%l1, %r1);
  match (%5) {
    (Zero(_), _) => {
      %r1
    },
    (_, Zero(_)) => {
      %l1
    },
    _ => {
      %6 = match (%l1) {
        Raw(%x6: T) => {
          %x6
        },
        One(%x7: fn () -> T) => {
          %x7() /* ty=T */
        },
        Zero(%x8: fn () -> T) => {
          %x8() /* ty=T */
        },
      };
      %7 = match (%r1) {
        Raw(%x9: T) => {
          %x9
        },
        One(%x10: fn () -> T) => {
          %x10() /* ty=T */
        },
        Zero(%x11: fn () -> T) => {
          %x11() /* ty=T */
        },
      };
      %8 = %add(%6, %7) /* ty=T */;
      Raw(%8) /* ty=GradCell[T] */
    },
  }
}

def @FromGradCell[T](%g: GradCell[T]) -> T {
  match (%g) {
    Raw(%x12: T) => {
      %x12
    },
    One(%x13: fn () -> T) => {
      %x13() /* ty=T */
    },
    Zero(%x14: fn () -> T) => {
      %x14() /* ty=T */
    },
  }
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */

==========mod==========
#[version = "0.0.5"]
def @func_13250() -> Tensor[(13, 9, 14), float32] {
  %0 = @func_4044() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %0.0
}

def @func_12575() -> (Tensor[(13, 9, 14), float32],) {
  %1 = @func_4760() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %2 = %1.3;
  (%2,)
}

def @func_1561() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %3 = @func_718() /* ty=Tensor[(13, 9, 14), float32] */;
  %4 = cast(%3, dtype="float32") /* ty=Tensor[(13, 9, 14), float32] */;
  %5 = reshape(%4, newshape=[13, 9, 14]) /* ty=Tensor[(13, 9, 14), float32] */;
  %6 = @func_1154(%5) /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), uint16], Tensor[(13, 9, 14), float32]) */;
  %7 = cast(meta[relay.Constant][0] /* ty=Tensor[(640), uint64] */, dtype="uint64") /* ty=Tensor[(640), uint64] */;
  %8 = cast(meta[relay.Constant][0] /* ty=Tensor[(640), uint64] */, dtype="uint64") /* ty=Tensor[(640), uint64] */;
  %9 = reshape(%7, newshape=[16, 8, 5]) /* ty=Tensor[(16, 8, 5), uint64] */;
  %10 = reshape(%8, newshape=[16, 8, 5]) /* ty=Tensor[(16, 8, 5), uint64] */;
  %11 = @func_245(%9, %10) /* ty=(Tensor[(16, 8, 5), uint64],) */;
  %12 = %6.2;
  %13 = %11.0;
  %14 = @func_616() /* ty=Tensor[(13, 9, 14), float32] */;
  %15 = @func_601() /* ty=Tensor[(13, 9, 14), float32] */;
  (%3, %12, %13, meta[relay.Constant][0] /* ty=Tensor[(640), uint64] */, %14, %15)
}

def @func_8071() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %16 = @func_2653() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %17 = @func_6802() /* ty=Tensor[(13, 9, 14), float32] */;
  %18 = @func_601() /* ty=Tensor[(13, 9, 14), float32] */;
  %19 = %16.1;
  (%17, %18, %19)
}

def @func_17010() -> (Tensor[(13, 9, 14), float32],) {
  %20 = @func_14002() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64]) */;
  %21 = %20.0;
  (%21,)
}

def @func_11980() -> (Tensor[(10, 16, 14), float32], Tensor[(13, 9, 14), float32]) {
  %22 = @func_7090() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(10, 16, 14), float32]) */;
  %23 = @func_8071() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %24 = %22.1;
  %25 = %23.1;
  (%24, %25)
}

def @func_6235() -> (Tensor[(13, 9, 14), float32],) {
  %26 = @func_1561() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %27 = %26.5;
  (%27,)
}

def @func_10433() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %28 = @func_5932() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %29 = @func_8219() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(338), int64]) */;
  %30 = %28.0;
  %31 = %29.0;
  (%30, %31)
}

def @func_19928() -> Tensor[(13, 13, 2), int64] {
  %32 = @func_9485() /* ty=(Tensor[(13, 13, 2), int64],) */;
  %32.0
}

def @func_6379() -> Tensor[(13, 9, 14), float32] {
  %33 = @func_1404() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(338), int64]) */;
  %33.0
}

def @func_3987() -> (Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float64], Tensor[(13, 13, 2), int64]) {
  %34 = @func_3744() /* ty=(Tensor[(13, 13, 2), int64],) */;
  %35 = @func_3855() /* ty=(Tensor[(16, 8, 5), uint64], Tensor[(13, 9, 14), float64], Tensor[(13, 9, 14), float64]) */;
  %36 = %35.1;
  %37 = cast(%36, dtype="float64") /* ty=Tensor[(13, 9, 14), float64] */;
  %38 = %34.0;
  %39 = cast(%38, dtype="int64") /* ty=Tensor[(13, 13, 2), int64] */;
  %40 = cast(%38, dtype="int64") /* ty=Tensor[(13, 13, 2), int64] */;
  %41 = reshape(%39, newshape=[13, 13, 2]) /* ty=Tensor[(13, 13, 2), int64] */;
  %42 = reshape(%40, newshape=[13, 13, 2]) /* ty=Tensor[(13, 13, 2), int64] */;
  %43 = cosh(%37) /* ty=Tensor[(13, 9, 14), float64] */;
  %44 = @func_400(%41, %42) /* ty=Tensor[(13, 13, 2), int64] */;
  (%38, %43, %44)
}

def @func_8960(%var_8937: Tensor[(44), float32]) -> (Tensor[(13, 9, 14), int16], Tensor[(44), float32], Tensor[(288, 2), float64], Tensor[(44), float32], Tensor[(13, 9, 14), float32]) {
  %45 = @func_1691() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), int16], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64]) */;
  %46 = cast(meta[relay.Constant][1] /* ty=Tensor[(288, 2), float64] */, dtype="float64") /* ty=Tensor[(288, 2), float64] */;
  %47 = cast(%var_8937, dtype="float32") /* ty=Tensor[(44), float32] */;
  %48 = reshape(%46, newshape=[8, 6, 12]) /* ty=Tensor[(8, 6, 12), float64] */;
  %49 = reshape(%47, newshape=[44]) /* ty=Tensor[(44), float32] */;
  %50 = @func_7283(%48, %49) /* ty=(Tensor[(13, 9, 14), float64], Tensor[(44), float32], Tensor[(8, 6, 12), bool]) */;
  %51 = %45.1;
  %52 = %50.1;
  %53 = @func_7513() /* ty=Tensor[(13, 9, 14), float32] */;
  (%51, %52, meta[relay.Constant][1] /* ty=Tensor[(288, 2), float64] */, %var_8937, %53)
}

def @func_9223() -> Tensor[(13, 9, 14), float32] {
  @func_9208() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_9564() -> (Tensor[(13, 9, 14), float32], Tensor[(338), int64]) {
  %54 = @func_4091() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), uint8]) */;
  %55 = @func_9180() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(11, 4, 1), float64], Tensor[(22, 2), float64], Tensor[(13, 9, 14), float32], Tensor[(2240), float32], Tensor[(338), int64]) */;
  %56 = %54.0;
  %57 = %55.6;
  (%56, %57)
}

def @func_1724() -> (Tensor[(16, 8, 5), uint64],) {
  %58 = @func_1691() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), int16], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64]) */;
  %59 = %58.2;
  (%59,)
}

def @func_2822() -> Tensor[(13, 9, 14), float32] {
  @func_891() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_7417() -> Tensor[(338), float32] {
  %60 = @func_3408() /* ty=(Tensor[(338), float32],) */;
  %60.0
}

def @func_16200() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64]) {
  %61 = @func_3674() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(10, 16, 14), float32]) */;
  %62 = @func_2812() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64]) */;
  %63 = %61.1;
  %64 = %62.1;
  (%63, %64)
}

def @func_12483() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(2240), float32], Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %65 = @func_5336() /* ty=(Tensor[(10, 16, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %66 = cast(meta[relay.Constant][2] /* ty=Tensor[(2240), float32] */, dtype="float32") /* ty=Tensor[(2240), float32] */;
  %67 = reshape(%66, newshape=[10, 16, 14]) /* ty=Tensor[(10, 16, 14), float32] */;
  %68 = @func_6737(%67) /* ty=(Tensor[(10, 16, 14), int32], Tensor[(13, 13, 2), int64]) */;
  %69 = @func_6569() /* ty=(Tensor[(13, 13, 2), int64],) */;
  %70 = @func_5691() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %71 = @func_7219() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %72 = %65.1;
  %73 = %68.1;
  %74 = %69.0;
  %75 = %70.0;
  %76 = %71.3;
  (%72, %73, meta[relay.Constant][2] /* ty=Tensor[(2240), float32] */, %74, %75, %76)
}

def @func_19109() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64]) {
  %77 = @func_5610() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %78 = @func_16597() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 13, 2), int64], Tensor[(338), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(13, 13, 2), int64]) */;
  %79 = %77.0;
  %80 = @func_17543() /* ty=Tensor[(13, 9, 14), float32] */;
  %81 = %78.0;
  (%79, %80, %81)
}

def @func_5203() -> (Tensor[(13, 9, 14), float32], Tensor[(11, 2, 2), uint8], Tensor[(13, 9, 14), int16], Tensor[(13, 9, 14), float32], Tensor[(338), int64]) {
  %82 = cast(meta[relay.Constant][3] /* ty=Tensor[(44), float32] */, dtype="float32") /* ty=Tensor[(44), float32] */;
  %83 = reshape(%82, newshape=[11, 2, 2]) /* ty=Tensor[(11, 2, 2), float32] */;
  %84 = @func_2357(%83) /* ty=Tensor[(11, 2, 2), float32] */;
  %85 = cast(meta[relay.Constant][3] /* ty=Tensor[(44), float32] */, dtype="uint8") /* ty=Tensor[(44), uint8] */;
  %86 = shape_of(%84, dtype="int32") /* ty=Tensor[(3), int32] */;
  %87 = cast(%84, dtype="uint8") /* ty=Tensor[(11, 2, 2), uint8] */;
  %88 = dyn.reshape(%85, %86, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %89 = @func_1691() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), int16], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64]) */;
  %90 = @func_680() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(338), int64]) */;
  %91 = @func_3203() /* ty=Tensor[(13, 9, 14), float32] */;
  %92 = multiply(%87, %88) /* ty=Tensor[(11, 2, 2), uint8] */;
  %93 = %89.1;
  %94 = @func_1338() /* ty=Tensor[(13, 9, 14), float32] */;
  %95 = %90.2;
  (%91, %92, %93, %94, %95)
}

def @func_8845() -> (Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) {
  %96 = @func_7090() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(10, 16, 14), float32]) */;
  %97 = @func_4065() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %98 = %96.0;
  %99 = %97.0;
  (%98, %99)
}

def @func_9124() -> Tensor[(13, 9, 14), float32] {
  @func_3462() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_16984() -> (Tensor[(13, 9, 14), float32],) {
  %100 = @func_12318() /* ty=Tensor[(13, 9, 14), float32] */;
  (%100,)
}

def @func_4197(%var_4192: Tensor[(13, 13, 2), int64]) -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float64], Tensor[(13, 13, 2), int32]) {
  %101 = @func_1459() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float64]) */;
  %102 = @func_2535() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(640), uint64], Tensor[(13, 13, 2), int64]) */;
  %103 = %102.1;
  %104 = cast(%var_4192, dtype="int32") /* ty=Tensor[(13, 13, 2), int32] */;
  %105 = shape_of(%103, dtype="int32") /* ty=Tensor[(3), int32] */;
  %106 = cast(%103, dtype="int32") /* ty=Tensor[(13, 13, 2), int32] */;
  %107 = dyn.reshape(%104, %105, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %108 = @func_718() /* ty=Tensor[(13, 9, 14), float32] */;
  %109 = %101.1;
  %110 = left_shift(%106, %107) /* ty=Tensor[(13, 13, 2), int32] */;
  (%108, %109, %110)
}

def @func_16972() -> Tensor[(13, 9, 14), float32] {
  %111 = @func_14662() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), uint32]) */;
  %111.0
}

def @func_245(%var_230: Tensor[(16, 8, 5), uint64], %var_231: Tensor[(16, 8, 5), uint64]) -> (Tensor[(16, 8, 5), uint64],) {
  %112 = cast(%var_231, dtype="uint64") /* ty=Tensor[(16, 8, 5), uint64] */;
  %113 = shape_of(%var_230, dtype="int32") /* ty=Tensor[(3), int32] */;
  %114 = cast(%var_230, dtype="uint64") /* ty=Tensor[(16, 8, 5), uint64] */;
  %115 = dyn.reshape(%112, %113, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %116 = left_shift(%114, %115) /* ty=Tensor[(16, 8, 5), uint64] */;
  (%116,)
}

def @func_19659() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), int16]) {
  %117 = @func_19295() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %118 = @func_5203() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(11, 2, 2), uint8], Tensor[(13, 9, 14), int16], Tensor[(13, 9, 14), float32], Tensor[(338), int64]) */;
  %119 = %117.0;
  %120 = %118.2;
  (%119, %120)
}

def @func_9879(%var_9824: Tensor[(14, 2, 3), int64], %var_9825: Tensor[(14, 2, 3), int64]) -> (Tensor[(14, 2, 3), bool], Tensor[(14, 2, 3), float64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %121 = cast(%var_9825, dtype="bool") /* ty=Tensor[(14, 2, 3), bool] */;
  %122 = shape_of(%var_9824, dtype="int32") /* ty=Tensor[(3), int32] */;
  %123 = cast(%var_9824, dtype="bool") /* ty=Tensor[(14, 2, 3), bool] */;
  %124 = dyn.reshape(%121, %122, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %125 = cast(%var_9825, dtype="float64") /* ty=Tensor[(14, 2, 3), float64] */;
  %126 = @func_4044() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %127 = equal(%123, %124) /* ty=Tensor[(14, 2, 3), bool] */;
  %128 = log10(%125) /* ty=Tensor[(14, 2, 3), float64] */;
  %129 = @func_8749() /* ty=Tensor[(13, 9, 14), float32] */;
  %130 = %126.1;
  (%127, %128, %129, %130)
}

def @func_18399() -> (Tensor[(10, 16, 14), float32],) {
  %131 = @func_3674() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(10, 16, 14), float32]) */;
  %132 = %131.3;
  (%132,)
}

def @func_9295() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %133 = @func_8103() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %134 = @func_8071() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %135 = %133.0;
  %136 = %134.0;
  (%135, %136)
}

def @func_16127() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64], Tensor[(13, 9, 14), float32]) {
  %137 = @func_6108() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %138 = cast(meta[relay.Constant][4] /* ty=Tensor[(640), uint64] */, dtype="uint64") /* ty=Tensor[(640), uint64] */;
  %139 = reshape(%138, newshape=[640]) /* ty=Tensor[(640), uint64] */;
  %140 = @func_12199(%139) /* ty=(Tensor[(13, 13, 2), int64], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64]) */;
  %141 = @func_1404() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(338), int64]) */;
  %142 = @func_12318() /* ty=Tensor[(13, 9, 14), float32] */;
  %143 = %137.1;
  %144 = %140.1;
  %145 = %141.2;
  (%142, %143, %144, meta[relay.Constant][4] /* ty=Tensor[(640), uint64] */, %145)
}

def @func_1906() -> (Tensor[(13, 13, 2), int64],) {
  %146 = @func_680() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(338), int64]) */;
  %147 = %146.1;
  (%147,)
}

def @func_19749() -> (Tensor[(13, 9, 14), float32],) {
  %148 = @func_10894() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %149 = %148.0;
  (%149,)
}

def @func_3408() -> (Tensor[(338), float32],) {
  %150 = @func_1820() /* ty=(Tensor[(13, 9, 14), int32], Tensor[(16, 8, 5), uint64], Tensor[(338), int64]) */;
  %151 = %150.2;
  %152 = cast(%151, dtype="float32") /* ty=Tensor[(338), float32] */;
  %153 = log(%152) /* ty=Tensor[(338), float32] */;
  (%153,)
}

def @func_15803() -> (Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) {
  %154 = @func_8673() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(924, ?), bool]) */;
  %155 = %154.0;
  %156 = @func_3183() /* ty=Tensor[(13, 9, 14), float32] */;
  (%155, %156)
}

def @func_680() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(338), int64]) {
  %157 = cast(meta[relay.Constant][5] /* ty=Tensor[(338), int64] */, dtype="int64") /* ty=Tensor[(338), int64] */;
  %158 = cast(meta[relay.Constant][5] /* ty=Tensor[(338), int64] */, dtype="int64") /* ty=Tensor[(338), int64] */;
  %159 = reshape(%157, newshape=[13, 13, 2]) /* ty=Tensor[(13, 13, 2), int64] */;
  %160 = reshape(%158, newshape=[13, 13, 2]) /* ty=Tensor[(13, 13, 2), int64] */;
  %161 = @func_601() /* ty=Tensor[(13, 9, 14), float32] */;
  %162 = @func_400(%159, %160) /* ty=Tensor[(13, 13, 2), int64] */;
  (%161, %162, meta[relay.Constant][5] /* ty=Tensor[(338), int64] */)
}

def @func_4257() -> Tensor[(13, 9, 14), float32] {
  @func_3462() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_11063() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), int32]) {
  %163 = @func_1561() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %164 = @func_9586() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %165 = @func_1820() /* ty=(Tensor[(13, 9, 14), int32], Tensor[(16, 8, 5), uint64], Tensor[(338), int64]) */;
  %166 = %163.0;
  %167 = %164.1;
  %168 = %165.0;
  (%166, %167, %168)
}

def @func_6569() -> (Tensor[(13, 13, 2), int64],) {
  %169 = @func_1459() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float64]) */;
  %170 = %169.0;
  (%170,)
}

def @func_7498() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64]) {
  %171 = @func_5508() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %172 = %171.0;
  %173 = cast(%172, dtype="float32") /* ty=Tensor[(13, 9, 14), float32] */;
  %174 = @func_1561() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %175 = sigmoid(%173) /* ty=Tensor[(13, 9, 14), float32] */;
  %176 = %174.5;
  %177 = @func_2248() /* ty=Tensor[(16, 8, 5), uint64] */;
  (%175, %176, %177)
}

def @func_16008(%var_15953: Tensor[(28, 80), float32], %var_15954: Tensor[(338, 1), int64]) -> (Tensor[(16, 8, 5), uint64], Tensor[(2240), int8], Tensor[(28, 80), float32], Tensor[(338, 1), float32], Tensor[(13, 13, 2), int64], Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) {
  %178 = @func_7498() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64]) */;
  %179 = cast(%var_15953, dtype="float32") /* ty=Tensor[(28, 80), float32] */;
  %180 = cast(%var_15954, dtype="int64") /* ty=Tensor[(338, 1), int64] */;
  %181 = reshape(%179, newshape=[2240]) /* ty=Tensor[(2240), float32] */;
  %182 = reshape(%180, newshape=[338]) /* ty=Tensor[(338), int64] */;
  %183 = @func_8552(%181, %182) /* ty=(Tensor[(640), uint64], Tensor[(10, 16, 14), int32], Tensor[(2240), int8], Tensor[(16, 8, 5), uint64], Tensor[(338), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %184 = cast(%var_15954, dtype="float32") /* ty=Tensor[(338, 1), float32] */;
  %185 = cast(%var_15953, dtype="float32") /* ty=Tensor[(28, 80), float32] */;
  %186 = reshape(%185, newshape=[10, 16, 14]) /* ty=Tensor[(10, 16, 14), float32] */;
  %187 = @func_6737(%186) /* ty=(Tensor[(10, 16, 14), int32], Tensor[(13, 13, 2), int64]) */;
  %188 = @func_5203() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(11, 2, 2), uint8], Tensor[(13, 9, 14), int16], Tensor[(13, 9, 14), float32], Tensor[(338), int64]) */;
  %189 = %178.2;
  %190 = %183.2;
  %191 = asin(%184) /* ty=Tensor[(338, 1), float32] */;
  %192 = %187.1;
  %193 = @func_10772() /* ty=Tensor[(13, 13, 2), int64] */;
  %194 = %188.0;
  (%189, %190, %var_15953, %191, %192, %193, %194)
}

def @func_14923(%var_14900: Tensor[(338), bool], %var_14920: Tensor[(7392), float64]) -> (Tensor[(13, 9, 14), float32], Tensor[(338), float64], Tensor[(8, 924), int8], Tensor[(7392), float64]) {
  %195 = @func_5967() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %196 = @func_12424() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(338), bool]) */;
  %197 = %196.1;
  %198 = cast(%var_14900, dtype="float64") /* ty=Tensor[(338), float64] */;
  %199 = shape_of(%197, dtype="int32") /* ty=Tensor[(1), int32] */;
  %200 = cast(%197, dtype="float64") /* ty=Tensor[(338), float64] */;
  %201 = dyn.reshape(%198, %199, newshape=[]) /* ty=Tensor[(?), float64] */;
  %202 = cast(%var_14920, dtype="float64") /* ty=Tensor[(7392), float64] */;
  %203 = reshape(%202, newshape=[8, 924]) /* ty=Tensor[(8, 924), float64] */;
  %204 = @func_13237(%203) /* ty=(Tensor[(8, 924), int8],) */;
  %205 = %195.0;
  %206 = add(%200, %201) /* ty=Tensor[(338), float64] */;
  %207 = %204.0;
  (%205, %206, %207, %var_14920)
}

def @func_20042() -> Tensor[(13, 13, 2), int64] {
  @func_19840() /* ty=Tensor[(13, 13, 2), int64] */
}

def @func_6854() -> Tensor[(13, 9, 14), float32] {
  %208 = @func_4902() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %208.0
}

def @func_6410() -> (Tensor[(13, 9, 14), float32],) {
  %209 = @func_5729() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %210 = %209.0;
  (%210,)
}

def @func_3096() -> (Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float64], Tensor[(1638), float32], Tensor[(13, 9, 14), float32]) {
  %211 = @func_1459() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float64]) */;
  %212 = cast(meta[relay.Constant][6] /* ty=Tensor[(1638), float32] */, dtype="float32") /* ty=Tensor[(1638), float32] */;
  %213 = reshape(%212, newshape=[13, 9, 14]) /* ty=Tensor[(13, 9, 14), float32] */;
  %214 = @func_1780(%213) /* ty=(Tensor[(13, 9, 14), float64],) */;
  %215 = %211.0;
  %216 = %214.0;
  %217 = @func_2822() /* ty=Tensor[(13, 9, 14), float32] */;
  (%215, %216, meta[relay.Constant][6] /* ty=Tensor[(1638), float32] */, %217)
}

def @func_14452() -> Tensor[(2, 2, 14), float64] {
  %218 = cast(meta[relay.Constant][8] /* ty=Tensor[(2, 2, 14), float64] */, dtype="float64") /* ty=Tensor[(2, 2, 14), float64] */;
  %219 = shape_of(meta[relay.Constant][7] /* ty=Tensor[(2, 2, 14), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %220 = cast(meta[relay.Constant][7] /* ty=Tensor[(2, 2, 14), float64] */, dtype="float64") /* ty=Tensor[(2, 2, 14), float64] */;
  %221 = dyn.reshape(%218, %219, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  minimum(%220, %221) /* ty=Tensor[(2, 2, 14), float64] */
}

def @func_12219() -> (Tensor[(13, 9, 14), float32],) {
  %222 = @func_2597() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %223 = %222.0;
  (%223,)
}

def @func_16897() -> (Tensor[(13, 13, 2), int64],) {
  %224 = @func_14002() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64]) */;
  %225 = %224.1;
  (%225,)
}

def @func_16498() -> (Tensor[(13, 9, 14), float32], Tensor[(640), uint64]) {
  %226 = @func_16127() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64], Tensor[(13, 9, 14), float32]) */;
  %227 = @func_718() /* ty=Tensor[(13, 9, 14), float32] */;
  %228 = %226.3;
  (%227, %228)
}

def @func_11439() -> Tensor[(13, 9, 14), float32] {
  %229 = @func_1404() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(338), int64]) */;
  %229.1
}

def @func_5659(%var_5640: Tensor[(13, 9, 14), float32]) -> (Tensor[(13, 13, 2), int64], Tensor[(13, 13, 2), float64], Tensor[(13, 9, 14), bool], Tensor[(338), bool]) {
  %230 = @func_1459() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float64]) */;
  %231 = @func_4397() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(924), float64], Tensor[(13, 13, 2), float64]) */;
  %232 = @func_891() /* ty=Tensor[(13, 9, 14), float32] */;
  %233 = cast(%var_5640, dtype="bool") /* ty=Tensor[(13, 9, 14), bool] */;
  %234 = shape_of(%232, dtype="int32") /* ty=Tensor[(3), int32] */;
  %235 = cast(%232, dtype="bool") /* ty=Tensor[(13, 9, 14), bool] */;
  %236 = dyn.reshape(%233, %234, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %237 = %230.0;
  %238 = cast(%237, dtype="int64") /* ty=Tensor[(13, 13, 2), int64] */;
  %239 = reshape(%238, newshape=[338]) /* ty=Tensor[(338), int64] */;
  %240 = @func_5295(%239) /* ty=(Tensor[(13, 9, 14), float32], Tensor[(338), bool]) */;
  %241 = %231.2;
  %242 = equal(%235, %236) /* ty=Tensor[(13, 9, 14), bool] */;
  %243 = %240.1;
  (%237, %241, %242, %243)
}

def @func_16665() -> (Tensor[(7, 5, 15), float64], Tensor[(338), float64], Tensor[(338), float32]) {
  %244 = @func_16146() /* ty=(Tensor[(7, 5, 15), float64],) */;
  %245 = cast(meta[relay.Constant][9] /* ty=Tensor[(338), float32] */, dtype="float32") /* ty=Tensor[(338), float32] */;
  %246 = cast(meta[relay.Constant][9] /* ty=Tensor[(338), float32] */, dtype="uint16") /* ty=Tensor[(338), uint16] */;
  %247 = reshape(%245, newshape=[338]) /* ty=Tensor[(338), float32] */;
  %248 = reshape(%246, newshape=[338]) /* ty=Tensor[(338), uint16] */;
  %249 = @func_5864(%247, %248) /* ty=(Tensor[(338), int32], Tensor[(338), int64], Tensor[(338), float64]) */;
  %250 = %244.0;
  %251 = %249.2;
  (%250, %251, meta[relay.Constant][9] /* ty=Tensor[(338), float32] */)
}

def @func_5336() -> (Tensor[(10, 16, 14), float32], Tensor[(13, 9, 14), float32]) {
  %252 = @func_4701() /* ty=Tensor[(10, 16, 14), float32] */;
  %253 = @func_718() /* ty=Tensor[(13, 9, 14), float32] */;
  (%252, %253)
}

def @func_7111() -> Tensor[(13, 13, 2), int64] {
  %254 = @func_6569() /* ty=(Tensor[(13, 13, 2), int64],) */;
  %254.0
}

def @func_11075() -> Tensor[(13, 9, 14), float32] {
  %255 = @func_4760() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %255.2
}

def @func_1291(%var_1278: Tensor[(11, 12, 7), float64]) -> Tensor[(11, 12, 7), float32] {
  %256 = cast(%var_1278, dtype="float64") /* ty=Tensor[(11, 12, 7), float64] */;
  %257 = rsqrt(%256) /* ty=Tensor[(11, 12, 7), float64] */;
  %258 = cast(%257, dtype="float32") /* ty=Tensor[(11, 12, 7), float32] */;
  %259 = shape_of(%var_1278, dtype="int32") /* ty=Tensor[(3), int32] */;
  %260 = cast(%var_1278, dtype="float32") /* ty=Tensor[(11, 12, 7), float32] */;
  %261 = dyn.reshape(%258, %259, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  power(%260, %261) /* ty=Tensor[(11, 12, 7), float32] */
}

def @func_17071() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %262 = @func_7513() /* ty=Tensor[(13, 9, 14), float32] */;
  %263 = @func_3203() /* ty=Tensor[(13, 9, 14), float32] */;
  %264 = @func_6854() /* ty=Tensor[(13, 9, 14), float32] */;
  (%262, %263, %264)
}

def @func_17594() -> (Tensor[(13, 9, 14), float32],) {
  %265 = @func_7219() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %266 = %265.0;
  (%266,)
}

def @func_5074() -> Tensor[(13, 13, 2), int64] {
  %267 = @func_3987() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float64], Tensor[(13, 13, 2), int64]) */;
  %267.2
}

def @func_13237(%var_13232: Tensor[(8, 924), float64]) -> (Tensor[(8, 924), int8],) {
  %268 = @func_10629() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(1, 924), float64], Tensor[(11, 12, 7), float64]) */;
  %269 = %268.1;
  %270 = cast(%269, dtype="int8") /* ty=Tensor[(1, 924), int8] */;
  %271 = cast(%var_13232, dtype="int8") /* ty=Tensor[(8, 924), int8] */;
  %272 = right_shift(%270, %271) /* ty=Tensor[(8, 924), int8] */;
  (%272,)
}

def @func_15659() -> (Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(13, 13, 2), int64]) {
  %273 = @func_2653() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %274 = @func_4902() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %275 = @func_14806() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) */;
  %276 = @func_6176() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(13, 13, 2), int64]) */;
  %277 = @func_10408() /* ty=Tensor[(13, 13, 2), int64] */;
  %278 = %273.2;
  %279 = %274.0;
  %280 = %275.2;
  %281 = %276.2;
  (%277, %278, %279, %280, %281)
}

def @func_13433() -> Tensor[(13, 9, 14), float32] {
  %282 = @func_10433() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %282.1
}

def @func_3203() -> Tensor[(13, 9, 14), float32] {
  %283 = @func_2178() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %283.0
}

def @func_19479() -> Tensor[(13, 9, 14), float32] {
  %284 = @func_5610() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %284.0
}

def @func_9180() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(11, 4, 1), float64], Tensor[(22, 2), float64], Tensor[(13, 9, 14), float32], Tensor[(2240), float32], Tensor[(338), int64]) {
  %285 = @func_8071() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %286 = cast(meta[relay.Constant][10] /* ty=Tensor[(22, 2), float64] */, dtype="float64") /* ty=Tensor[(22, 2), float64] */;
  %287 = reshape(%286, newshape=[11, 4, 1]) /* ty=Tensor[(11, 4, 1), float64] */;
  %288 = @func_8022(%287) /* ty=(Tensor[(11, 4, 1), bool], Tensor[(11, 4, 1), float64]) */;
  %289 = cast(meta[relay.Constant][11] /* ty=Tensor[(2240), float32] */, dtype="float32") /* ty=Tensor[(2240), float32] */;
  %290 = cast(meta[relay.Constant][12] /* ty=Tensor[(338), int64] */, dtype="int64") /* ty=Tensor[(338), int64] */;
  %291 = reshape(%289, newshape=[2240]) /* ty=Tensor[(2240), float32] */;
  %292 = reshape(%290, newshape=[338]) /* ty=Tensor[(338), int64] */;
  %293 = @func_8552(%291, %292) /* ty=(Tensor[(640), uint64], Tensor[(10, 16, 14), int32], Tensor[(2240), int8], Tensor[(16, 8, 5), uint64], Tensor[(338), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %294 = %285.0;
  %295 = @func_6854() /* ty=Tensor[(13, 9, 14), float32] */;
  %296 = %288.1;
  %297 = %293.6;
  (%294, %295, %296, meta[relay.Constant][10] /* ty=Tensor[(22, 2), float64] */, %297, meta[relay.Constant][11] /* ty=Tensor[(2240), float32] */, meta[relay.Constant][12] /* ty=Tensor[(338), int64] */)
}

def @func_17500() -> Tensor[(13, 9, 14), float32] {
  @func_15149() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_17962() -> Tensor[(13, 13, 2), int64] {
  %298 = @func_3744() /* ty=(Tensor[(13, 13, 2), int64],) */;
  %298.0
}

def @func_19592() -> (Tensor[(11, 12, 7), float64],) {
  %299 = @func_10629() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(1, 924), float64], Tensor[(11, 12, 7), float64]) */;
  %300 = %299.2;
  (%300,)
}

def @func_17814(%var_17757: Tensor[(924, 5), float64], %var_17764: Tensor[(924, 4), float64]) -> (Tensor[(13, 13, 2), int64], Tensor[(16, 8, 5), uint64], Tensor[(924, 4), float64], Tensor[(924, 5), bool], Tensor[(13, 9, 14), float32], Tensor[(924, 5), int32], Tensor[(13, 9, 14), uint8], Tensor[(924, 5), int16]) {
  %301 = @func_12439() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64]) */;
  %302 = @func_1691() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), int16], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64]) */;
  %303 = @func_10280() /* ty=(Tensor[(924, ?), float64],) */;
  %304 = %303.0;
  %305 = cast(%304, dtype="float64") /* ty=Tensor[(924, ?), float64] */;
  %306 = cast(%var_17764, dtype="float64") /* ty=Tensor[(924, 4), float64] */;
  %307 = cast(%304, dtype="bool") /* ty=Tensor[(924, ?), bool] */;
  %308 = cast(%var_17757, dtype="bool") /* ty=Tensor[(924, 5), bool] */;
  %309 = logical_or(%307, %308) /* ty=Tensor[(924, 5), bool] */;
  %310 = cast(%309, dtype="bool") /* ty=Tensor[(924, 5), bool] */;
  %311 = cast(%304, dtype="bool") /* ty=Tensor[(924, ?), bool] */;
  %312 = @func_7675() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %313 = cast(%var_17757, dtype="float32") /* ty=Tensor[(924, 5), float32] */;
  %314 = atanh(%313) /* ty=Tensor[(924, 5), float32] */;
  %315 = cast(%309, dtype="int32") /* ty=Tensor[(924, 5), int32] */;
  %316 = shape_of(%314, dtype="int32") /* ty=Tensor[(2), int32] */;
  %317 = cast(%314, dtype="int32") /* ty=Tensor[(924, 5), int32] */;
  %318 = dyn.reshape(%315, %316, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %319 = %312.0;
  %320 = cast(%319, dtype="float32") /* ty=Tensor[(13, 9, 14), float32] */;
  %321 = reshape(%320, newshape=[13, 9, 14]) /* ty=Tensor[(13, 9, 14), float32] */;
  %322 = cast(%309, dtype="int16") /* ty=Tensor[(924, 5), int16] */;
  %323 = shape_of(%314, dtype="int32") /* ty=Tensor[(2), int32] */;
  %324 = cast(%314, dtype="int16") /* ty=Tensor[(924, 5), int16] */;
  %325 = dyn.reshape(%322, %323, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %326 = %301.1;
  %327 = %302.2;
  %328 = power(%305, %306) /* ty=Tensor[(924, 4), float64] */;
  %329 = less(%310, %311) /* ty=Tensor[(924, 5), bool] */;
  %330 = logical_xor(%317, %318) /* ty=Tensor[(924, 5), int32] */;
  %331 = @func_3161(%321) /* ty=Tensor[(13, 9, 14), uint8] */;
  %332 = subtract(%324, %325) /* ty=Tensor[(924, 5), int16] */;
  (%326, %327, %328, %329, %319, %330, %331, %332)
}

def @func_20021() -> (Tensor[(13, 9, 14), float32], Tensor[(338), float32]) {
  %333 = @func_11184() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %334 = @func_11532() /* ty=(Tensor[(338), bool],) */;
  %335 = %334.0;
  %336 = cast(%335, dtype="float32") /* ty=Tensor[(338), float32] */;
  %337 = %333.1;
  %338 = exp(%336) /* ty=Tensor[(338), float32] */;
  (%337, %338)
}

def @func_10280() -> (Tensor[(924, ?), float64],) {
  %339 = @func_8673() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(924, ?), bool]) */;
  %340 = %339.1;
  %341 = cast(%340, dtype="float64") /* ty=Tensor[(924, ?), float64] */;
  %342 = atan(%341) /* ty=Tensor[(924, ?), float64] */;
  (%342,)
}

def @func_6737(%var_6727: Tensor[(10, 16, 14), float32]) -> (Tensor[(10, 16, 14), int32], Tensor[(13, 13, 2), int64]) {
  %343 = @func_5336() /* ty=(Tensor[(10, 16, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %344 = %343.0;
  %345 = cast(%var_6727, dtype="int32") /* ty=Tensor[(10, 16, 14), int32] */;
  %346 = shape_of(%344, dtype="int32") /* ty=Tensor[(3), int32] */;
  %347 = cast(%344, dtype="int32") /* ty=Tensor[(10, 16, 14), int32] */;
  %348 = dyn.reshape(%345, %346, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %349 = @func_6569() /* ty=(Tensor[(13, 13, 2), int64],) */;
  %350 = right_shift(%347, %348) /* ty=Tensor[(10, 16, 14), int32] */;
  %351 = %349.0;
  (%350, %351)
}

def @func_19909() -> (Tensor[(10, 16, 14), float32],) {
  %352 = @func_3021() /* ty=Tensor[(10, 16, 14), float32] */;
  (%352,)
}

def @func_5049() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %353 = @func_4760() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %354 = @func_1404() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(338), int64]) */;
  %355 = %353.3;
  %356 = %354.0;
  %357 = @func_891() /* ty=Tensor[(13, 9, 14), float32] */;
  (%355, %356, %357)
}

def @func_11846() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %358 = @func_11063() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), int32]) */;
  %359 = %358.1;
  %360 = @func_891() /* ty=Tensor[(13, 9, 14), float32] */;
  (%359, %360)
}

def @func_18104() -> Tensor[(13, 9, 14), float32] {
  @func_14272() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_5360() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %361 = @func_4862() /* ty=Tensor[(13, 9, 14), float32] */;
  %362 = @func_4218() /* ty=Tensor[(13, 9, 14), float32] */;
  (%361, %362)
}

def @func_5508() -> (Tensor[(13, 9, 14), float32],) {
  %363 = @func_1561() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %364 = %363.1;
  (%364,)
}

def @func_3318() -> Tensor[(640), uint64] {
  %365 = @func_2535() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(640), uint64], Tensor[(13, 13, 2), int64]) */;
  %365.2
}

def @func_5295(%var_5230: Tensor[(338), int64]) -> (Tensor[(13, 9, 14), float32], Tensor[(338), bool]) {
  %366 = @func_4091() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), uint8]) */;
  %367 = cast(%var_5230, dtype="int64") /* ty=Tensor[(338), int64] */;
  %368 = cast(%var_5230, dtype="int64") /* ty=Tensor[(338), int64] */;
  %369 = reshape(%367, newshape=[13, 13, 2]) /* ty=Tensor[(13, 13, 2), int64] */;
  %370 = reshape(%368, newshape=[13, 13, 2]) /* ty=Tensor[(13, 13, 2), int64] */;
  %371 = @func_400(%369, %370) /* ty=Tensor[(13, 13, 2), int64] */;
  %372 = cast(%371, dtype="float32") /* ty=Tensor[(13, 13, 2), float32] */;
  %373 = shape_of(%var_5230, dtype="int32") /* ty=Tensor[(1), int32] */;
  %374 = cast(%var_5230, dtype="float32") /* ty=Tensor[(338), float32] */;
  %375 = dyn.reshape(%372, %373, newshape=[]) /* ty=Tensor[(?), float32] */;
  %376 = divide(%374, %375) /* ty=Tensor[(338), float32] */;
  %377 = cast(%var_5230, dtype="bool") /* ty=Tensor[(338), bool] */;
  %378 = shape_of(%376, dtype="int32") /* ty=Tensor[(1), int32] */;
  %379 = cast(%376, dtype="bool") /* ty=Tensor[(338), bool] */;
  %380 = dyn.reshape(%377, %378, newshape=[]) /* ty=Tensor[(?), bool] */;
  %381 = %366.0;
  %382 = less_equal(%379, %380) /* ty=Tensor[(338), bool] */;
  (%381, %382)
}

def @func_12424() -> (Tensor[(13, 13, 2), int64], Tensor[(338), bool]) {
  %383 = @func_9485() /* ty=(Tensor[(13, 13, 2), int64],) */;
  %384 = @func_11532() /* ty=(Tensor[(338), bool],) */;
  %385 = %383.0;
  %386 = %384.0;
  (%385, %386)
}

def @func_13028() -> Tensor[(13, 9, 14), float32] {
  @func_9705() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_14109() -> (Tensor[(13, 9, 14), float32],) {
  %387 = @func_12219() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %388 = %387.0;
  (%388,)
}

def @func_3462() -> Tensor[(13, 9, 14), float32] {
  %389 = @func_2597() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %389.0
}

def @func_9208() -> Tensor[(13, 9, 14), float32] {
  @func_891() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_4701() -> Tensor[(10, 16, 14), float32] {
  @func_3021() /* ty=Tensor[(10, 16, 14), float32] */
}

def @func_19551() -> (Tensor[(338), int64],) {
  %390 = @func_15053() /* ty=Tensor[(338), int64] */;
  (%390,)
}

def @func_17543() -> Tensor[(13, 9, 14), float32] {
  %391 = @func_6176() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(13, 13, 2), int64]) */;
  %391.0
}

def @func_14430(%var_14407: Tensor[(338), int64]) -> Tensor[(338), float32] {
  %392 = @func_5492() /* ty=(Tensor[(338), int64],) */;
  %393 = %392.0;
  %394 = cast(%var_14407, dtype="uint8") /* ty=Tensor[(338), uint8] */;
  %395 = shape_of(%393, dtype="int32") /* ty=Tensor[(1), int32] */;
  %396 = cast(%393, dtype="uint8") /* ty=Tensor[(338), uint8] */;
  %397 = dyn.reshape(%394, %395, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %398 = bitwise_or(%396, %397) /* ty=Tensor[(338), uint8] */;
  %399 = cast(%398, dtype="float32") /* ty=Tensor[(338), float32] */;
  log10(%399) /* ty=Tensor[(338), float32] */
}

def @func_18878(%var_18843: Tensor[(2240), float32], %var_18844: Tensor[(13, 26), int64]) -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(28, 80), float32], Tensor[(13, 26), float64], Tensor[(13, 9, 14), float32], Tensor[(2240), float64]) {
  %400 = @func_8723() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float64], Tensor[(13, 9, 14), float32]) */;
  %401 = @func_10037() /* ty=(Tensor[(16, 8, 5), uint64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64]) */;
  %402 = cast(%var_18843, dtype="float32") /* ty=Tensor[(2240), float32] */;
  %403 = cast(%var_18844, dtype="int64") /* ty=Tensor[(13, 26), int64] */;
  %404 = reshape(%402, newshape=[28, 80]) /* ty=Tensor[(28, 80), float32] */;
  %405 = reshape(%403, newshape=[338, 1]) /* ty=Tensor[(338, 1), int64] */;
  %406 = @func_16008(%404, %405) /* ty=(Tensor[(16, 8, 5), uint64], Tensor[(2240), int8], Tensor[(28, 80), float32], Tensor[(338, 1), float32], Tensor[(13, 13, 2), int64], Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) */;
  %407 = cast(%var_18844, dtype="float64") /* ty=Tensor[(13, 26), float64] */;
  %408 = cast(%var_18843, dtype="float64") /* ty=Tensor[(2240), float64] */;
  %409 = @func_2822() /* ty=Tensor[(13, 9, 14), float32] */;
  %410 = %400.2;
  %411 = %401.2;
  %412 = %406.2;
  %413 = erf(%407) /* ty=Tensor[(13, 26), float64] */;
  %414 = @func_7513() /* ty=Tensor[(13, 9, 14), float32] */;
  %415 = cos(%408) /* ty=Tensor[(2240), float64] */;
  (%409, %410, %411, %412, %413, %414, %415)
}

def @func_10408() -> Tensor[(13, 13, 2), int64] {
  %416 = @func_9485() /* ty=(Tensor[(13, 13, 2), int64],) */;
  %416.0
}

def @func_18114() -> (Tensor[(13, 9, 14), float32],) {
  %417 = @func_9295() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %418 = %417.0;
  (%418,)
}

def @func_14057() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %419 = @func_6379() /* ty=Tensor[(13, 9, 14), float32] */;
  %420 = @func_11146() /* ty=Tensor[(13, 9, 14), float32] */;
  (%419, %420)
}

def @func_5967() -> (Tensor[(13, 9, 14), float32],) {
  %421 = @func_601() /* ty=Tensor[(13, 9, 14), float32] */;
  (%421,)
}

def @func_11192() -> (Tensor[(13, 9, 14), float32],) {
  %422 = @func_2822() /* ty=Tensor[(13, 9, 14), float32] */;
  (%422,)
}

def @func_14289() -> Tensor[(13, 9, 14), float32] {
  %423 = @func_6410() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %423.0
}

def @func_9412(%var_9408: Tensor[(338), int64]) -> (Tensor[(13, 9, 14), float32], Tensor[(338, 1), int64], Tensor[(378), float32], Tensor[(338), int64]) {
  %424 = @func_5610() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %425 = cast(meta[relay.Constant][13] /* ty=Tensor[(378), float32] */, dtype="float32") /* ty=Tensor[(378), float32] */;
  %426 = cast(meta[relay.Constant][13] /* ty=Tensor[(378), float32] */, dtype="float32") /* ty=Tensor[(378), float32] */;
  %427 = cast(%var_9408, dtype="int64") /* ty=Tensor[(338), int64] */;
  %428 = reshape(%425, newshape=[9, 6, 7]) /* ty=Tensor[(9, 6, 7), float32] */;
  %429 = reshape(%426, newshape=[9, 6, 7]) /* ty=Tensor[(9, 6, 7), float32] */;
  %430 = reshape(%427, newshape=[338, 1]) /* ty=Tensor[(338, 1), int64] */;
  %431 = @func_6676(%428, %429, %430) /* ty=(Tensor[(9, 6, 7), float32], Tensor[(13, 13, 2), bool], Tensor[(338, 1), int64]) */;
  %432 = %424.1;
  %433 = %431.2;
  (%432, %433, meta[relay.Constant][13] /* ty=Tensor[(378), float32] */, %var_9408)
}

def @func_16468() -> (Tensor[(640), uint64], Tensor[(13, 9, 14), float32]) {
  %434 = @func_12055() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64], Tensor[(13, 9, 14), float32]) */;
  %435 = @func_3318() /* ty=Tensor[(640), uint64] */;
  %436 = %434.1;
  (%435, %436)
}

def @func_5864(%var_5804: Tensor[(338), float32], %var_5826: Tensor[(338), uint16]) -> (Tensor[(338), int32], Tensor[(338), int64], Tensor[(338), float64]) {
  %437 = @func_3408() /* ty=(Tensor[(338), float32],) */;
  %438 = %437.0;
  %439 = cast(%var_5804, dtype="int32") /* ty=Tensor[(338), int32] */;
  %440 = shape_of(%438, dtype="int32") /* ty=Tensor[(1), int32] */;
  %441 = cast(%438, dtype="int32") /* ty=Tensor[(338), int32] */;
  %442 = dyn.reshape(%439, %440, newshape=[]) /* ty=Tensor[(?), int32] */;
  %443 = cast(%438, dtype="uint16") /* ty=Tensor[(338), uint16] */;
  %444 = shape_of(%var_5804, dtype="int32") /* ty=Tensor[(1), int32] */;
  %445 = cast(%var_5804, dtype="uint16") /* ty=Tensor[(338), uint16] */;
  %446 = dyn.reshape(%443, %444, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %447 = logical_xor(%445, %446) /* ty=Tensor[(338), uint16] */;
  %448 = cast(%var_5826, dtype="int64") /* ty=Tensor[(338), int64] */;
  %449 = shape_of(%447, dtype="int32") /* ty=Tensor[(1), int32] */;
  %450 = cast(%447, dtype="int64") /* ty=Tensor[(338), int64] */;
  %451 = dyn.reshape(%448, %449, newshape=[]) /* ty=Tensor[(?), int64] */;
  %452 = cast(%447, dtype="float64") /* ty=Tensor[(338), float64] */;
  %453 = subtract(%441, %442) /* ty=Tensor[(338), int32] */;
  %454 = bitwise_and(%450, %451) /* ty=Tensor[(338), int64] */;
  %455 = acosh(%452) /* ty=Tensor[(338), float64] */;
  (%453, %454, %455)
}

def @func_18789(%var_18782: Tensor[(14, 66), uint16], %var_18783: Tensor[(9), uint8]) -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float64], Tensor[(338, 1), int64], Tensor[(14, 66), uint16], Tensor[(9), uint8]) {
  %456 = @func_11075() /* ty=Tensor[(13, 9, 14), float32] */;
  %457 = cast(%456, dtype="float32") /* ty=Tensor[(13, 9, 14), float32] */;
  %458 = reshape(%457, newshape=[13, 9, 14]) /* ty=Tensor[(13, 9, 14), float32] */;
  %459 = @func_1780(%458) /* ty=(Tensor[(13, 9, 14), float64],) */;
  %460 = cast(%var_18782, dtype="uint16") /* ty=Tensor[(14, 66), uint16] */;
  %461 = cast(%var_18783, dtype="uint8") /* ty=Tensor[(9), uint8] */;
  %462 = reshape(%460, newshape=[11, 12, 7]) /* ty=Tensor[(11, 12, 7), uint16] */;
  %463 = reshape(%461, newshape=[9]) /* ty=Tensor[(9), uint8] */;
  %464 = @func_11585(%462, %463) /* ty=(Tensor[(11, 12, 7), uint16], Tensor[(338), int64], Tensor[(9), uint8], Tensor[(126, 1), uint8], Tensor[(338, 1), int64]) */;
  %465 = %459.0;
  %466 = %464.4;
  (%456, %465, %466, %var_18782, %var_18783)
}

def @func_19408() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %467 = @func_15803() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) */;
  %468 = @func_9669() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64], Tensor[(20, 32), uint64], Tensor[(13, 9, 14), float32]) */;
  %469 = %467.1;
  %470 = %468.0;
  (%469, %470)
}

def @func_11585(%var_11567: Tensor[(11, 12, 7), uint16], %var_11578: Tensor[(9), uint8]) -> (Tensor[(11, 12, 7), uint16], Tensor[(338), int64], Tensor[(9), uint8], Tensor[(126, 1), uint8], Tensor[(338, 1), int64]) {
  %471 = cast(meta[relay.Constant][14] /* ty=Tensor[(11, 12, 7), uint16] */, dtype="uint16") /* ty=Tensor[(11, 12, 7), uint16] */;
  %472 = shape_of(%var_11567, dtype="int32") /* ty=Tensor[(3), int32] */;
  %473 = cast(%var_11567, dtype="uint16") /* ty=Tensor[(11, 12, 7), uint16] */;
  %474 = dyn.reshape(%471, %472, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %475 = cast(%var_11578, dtype="uint8") /* ty=Tensor[(9), uint8] */;
  %476 = cast(meta[relay.Constant][15] /* ty=Tensor[(126, 1), uint8] */, dtype="uint8") /* ty=Tensor[(126, 1), uint8] */;
  %477 = cast(meta[relay.Constant][16] /* ty=Tensor[(338, 1), int64] */, dtype="int64") /* ty=Tensor[(338, 1), int64] */;
  %478 = reshape(%475, newshape=[3, 3, 1]) /* ty=Tensor[(3, 3, 1), uint8] */;
  %479 = reshape(%476, newshape=[3, 3, 14]) /* ty=Tensor[(3, 3, 14), uint8] */;
  %480 = reshape(%477, newshape=[338]) /* ty=Tensor[(338), int64] */;
  %481 = @func_9378(%478, %479, %480) /* ty=(Tensor[(3, 3, 14), float32], Tensor[(338), bool], Tensor[(338), int64]) */;
  %482 = add(%473, %474) /* ty=Tensor[(11, 12, 7), uint16] */;
  %483 = %481.2;
  (%482, %483, %var_11578, meta[relay.Constant][15] /* ty=Tensor[(126, 1), uint8] */, meta[relay.Constant][16] /* ty=Tensor[(338, 1), int64] */)
}

def @func_14585(%var_14514: Tensor[(924), uint16], %var_14515: Tensor[(1, 9), uint8]) -> (Tensor[(9, 14, 9), float32], Tensor[(924), uint16], Tensor[(1, 9), uint8], Tensor[(13, 9, 14), float32], Tensor[(11, 4, 1), float64], Tensor[(44), float64], Tensor[(126, ?), bool], Tensor[(13, 9, 14), float64], Tensor[(26, 13), int64], Tensor[(13, 9, 14), float32], Tensor[(338), float32]) {
  %484 = @func_13759() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(9, 14, 9), float32]) */;
  %485 = @func_5967() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %486 = cast(meta[relay.Constant][17] /* ty=Tensor[(44), float64] */, dtype="float64") /* ty=Tensor[(44), float64] */;
  %487 = reshape(%486, newshape=[11, 4, 1]) /* ty=Tensor[(11, 4, 1), float64] */;
  %488 = @func_8022(%487) /* ty=(Tensor[(11, 4, 1), bool], Tensor[(11, 4, 1), float64]) */;
  %489 = cast(%var_14514, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %490 = cast(%var_14515, dtype="uint8") /* ty=Tensor[(1, 9), uint8] */;
  %491 = reshape(%489, newshape=[11, 12, 7]) /* ty=Tensor[(11, 12, 7), uint16] */;
  %492 = reshape(%490, newshape=[9]) /* ty=Tensor[(9), uint8] */;
  %493 = @func_11585(%491, %492) /* ty=(Tensor[(11, 12, 7), uint16], Tensor[(338), int64], Tensor[(9), uint8], Tensor[(126, 1), uint8], Tensor[(338, 1), int64]) */;
  %494 = %493.3;
  %495 = cast(%494, dtype="float64") /* ty=Tensor[(126, 1), float64] */;
  %496 = acos(%495) /* ty=Tensor[(126, 1), float64] */;
  %497 = cast(%496, dtype="float64") /* ty=Tensor[(126, 1), float64] */;
  %498 = exp(%497) /* ty=Tensor[(126, 1), float64] */;
  %499 = cast(%498, dtype="float64") /* ty=Tensor[(126, 1), float64] */;
  %500 = sigmoid(%499) /* ty=Tensor[(126, 1), float64] */;
  %501 = cast(%496, dtype="bool") /* ty=Tensor[(126, 1), bool] */;
  %502 = shape_of(%500, dtype="int32") /* ty=Tensor[(2), int32] */;
  %503 = cast(%500, dtype="bool") /* ty=Tensor[(126, 1), bool] */;
  %504 = dyn.reshape(%501, %502, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %505 = cast(meta[relay.Constant][18] /* ty=Tensor[(26, 13), int64] */, dtype="int64") /* ty=Tensor[(26, 13), int64] */;
  %506 = reshape(%505, newshape=[13, 13, 2]) /* ty=Tensor[(13, 13, 2), int64] */;
  %507 = @func_4197(%506) /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float64], Tensor[(13, 13, 2), int32]) */;
  %508 = @func_10236() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) */;
  %509 = %484.1;
  %510 = %485.0;
  %511 = %488.1;
  %512 = less(%503, %504) /* ty=Tensor[(126, ?), bool] */;
  %513 = %507.1;
  %514 = %508.0;
  %515 = @func_7417() /* ty=Tensor[(338), float32] */;
  (%509, %var_14514, %var_14515, %510, %511, meta[relay.Constant][17] /* ty=Tensor[(44), float64] */, %512, %513, meta[relay.Constant][18] /* ty=Tensor[(26, 13), int64] */, %514, %515)
}

def @func_12055() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64], Tensor[(13, 9, 14), float32]) {
  %516 = @func_4902() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %517 = @func_1724() /* ty=(Tensor[(16, 8, 5), uint64],) */;
  %518 = %516.0;
  %519 = @func_4257() /* ty=Tensor[(13, 9, 14), float32] */;
  %520 = %517.0;
  %521 = @func_2822() /* ty=Tensor[(13, 9, 14), float32] */;
  (%518, %519, %520, %521)
}

def @func_11623() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %522 = @func_5610() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %523 = %522.1;
  %524 = @func_1944() /* ty=Tensor[(13, 9, 14), float32] */;
  (%523, %524)
}

def @func_616() -> Tensor[(13, 9, 14), float32] {
  @func_601() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_17185() -> Tensor[(13, 9, 14), float32] {
  %525 = @func_7498() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64]) */;
  %525.1
}

def @func_11308() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %526 = @func_891() /* ty=Tensor[(13, 9, 14), float32] */;
  %527 = @func_4257() /* ty=Tensor[(13, 9, 14), float32] */;
  (%526, %527)
}

def @func_4446() -> (Tensor[(10, 16, 14), float32], Tensor[(13, 9, 14), uint32], Tensor[(1638), float32], Tensor[(16, 8, 5), uint64]) {
  %528 = cast(meta[relay.Constant][19] /* ty=Tensor[(1638), float32] */, dtype="float32") /* ty=Tensor[(1638), float32] */;
  %529 = reshape(%528, newshape=[13, 9, 14]) /* ty=Tensor[(13, 9, 14), float32] */;
  %530 = @func_1691() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), int16], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64]) */;
  %531 = @func_3021() /* ty=Tensor[(10, 16, 14), float32] */;
  %532 = @func_3259(%529) /* ty=Tensor[(13, 9, 14), uint32] */;
  %533 = %530.2;
  (%531, %532, meta[relay.Constant][19] /* ty=Tensor[(1638), float32] */, %533)
}

def @func_6176() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(13, 13, 2), int64]) {
  %534 = @func_4397() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(924), float64], Tensor[(13, 13, 2), float64]) */;
  %535 = @func_3557() /* ty=(Tensor[(13, 13, 2), int64],) */;
  %536 = @func_3203() /* ty=Tensor[(13, 9, 14), float32] */;
  %537 = %534.0;
  %538 = %535.0;
  (%536, %537, %538)
}

def @func_718() -> Tensor[(13, 9, 14), float32] {
  %539 = @func_601() /* ty=Tensor[(13, 9, 14), float32] */;
  %540 = cast(%539, dtype="float32") /* ty=Tensor[(13, 9, 14), float32] */;
  exp(%540) /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_18488(%var_18475: Tensor[(338), int64], %var_18486: Tensor[(1638), float32]) -> (Tensor[(338), int64], Tensor[(13, 9, 14), float32], Tensor[(1638), float32]) {
  %541 = @func_5492() /* ty=(Tensor[(338), int64],) */;
  %542 = %541.0;
  %543 = cast(%var_18475, dtype="int64") /* ty=Tensor[(338), int64] */;
  %544 = shape_of(%542, dtype="int32") /* ty=Tensor[(1), int32] */;
  %545 = cast(%542, dtype="int64") /* ty=Tensor[(338), int64] */;
  %546 = dyn.reshape(%543, %544, newshape=[]) /* ty=Tensor[(?), int64] */;
  %547 = cast(%var_18486, dtype="float32") /* ty=Tensor[(1638), float32] */;
  %548 = reshape(%547, newshape=[13, 9, 14]) /* ty=Tensor[(13, 9, 14), float32] */;
  %549 = @func_7882(%548) /* ty=(Tensor[(13, 9, 14), bool], Tensor[(13, 9, 14), float32], Tensor[(640), uint64]) */;
  %550 = right_shift(%545, %546) /* ty=Tensor[(338), int64] */;
  %551 = %549.1;
  (%550, %551, %var_18486)
}

def @func_1957(%var_1952: Tensor[(640), uint64]) -> (Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64]) {
  %552 = @func_1404() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(338), int64]) */;
  %553 = cast(%var_1952, dtype="uint64") /* ty=Tensor[(640), uint64] */;
  %554 = cast(%var_1952, dtype="uint64") /* ty=Tensor[(640), uint64] */;
  %555 = reshape(%553, newshape=[16, 8, 5]) /* ty=Tensor[(16, 8, 5), uint64] */;
  %556 = reshape(%554, newshape=[16, 8, 5]) /* ty=Tensor[(16, 8, 5), uint64] */;
  %557 = @func_245(%555, %556) /* ty=(Tensor[(16, 8, 5), uint64],) */;
  %558 = %552.2;
  %559 = %557.0;
  (%558, %559, %var_1952)
}

def @func_4126() -> (Tensor[(16, 8, 5), uint64], Tensor[(11, 12, 7), float32], Tensor[(924), float64], Tensor[(640), uint64]) {
  %560 = cast(meta[relay.Constant][20] /* ty=Tensor[(924), float64] */, dtype="float64") /* ty=Tensor[(924), float64] */;
  %561 = reshape(%560, newshape=[11, 12, 7]) /* ty=Tensor[(11, 12, 7), float64] */;
  %562 = @func_2248() /* ty=Tensor[(16, 8, 5), uint64] */;
  %563 = @func_1291(%561) /* ty=Tensor[(11, 12, 7), float32] */;
  %564 = @func_3318() /* ty=Tensor[(640), uint64] */;
  (%562, %563, meta[relay.Constant][20] /* ty=Tensor[(924), float64] */, %564)
}

def @func_13369() -> (Tensor[(13, 9, 14), float32],) {
  %565 = @func_6379() /* ty=Tensor[(13, 9, 14), float32] */;
  (%565,)
}

def @func_12370() -> (Tensor[(13, 9, 14), uint32],) {
  %566 = @func_4446() /* ty=(Tensor[(10, 16, 14), float32], Tensor[(13, 9, 14), uint32], Tensor[(1638), float32], Tensor[(16, 8, 5), uint64]) */;
  %567 = %566.1;
  (%567,)
}

def @func_11695() -> Tensor[(7, 5, 15), float64] {
  %568 = @func_10494() /* ty=(Tensor[(7, 5, 15), float64], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64]) */;
  %568.0
}

def @func_5691() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %569 = @func_4065() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %570 = %569.0;
  %571 = @func_601() /* ty=Tensor[(13, 9, 14), float32] */;
  (%570, %571)
}

def @func_6347() -> (Tensor[(13, 9, 14), float32],) {
  %572 = @func_4065() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %573 = %572.0;
  (%573,)
}

def @func_16691() -> (Tensor[(13, 9, 14), float32], Tensor[(640), uint64]) {
  %574 = @func_16468() /* ty=(Tensor[(640), uint64], Tensor[(13, 9, 14), float32]) */;
  %575 = @func_14272() /* ty=Tensor[(13, 9, 14), float32] */;
  %576 = %574.0;
  (%575, %576)
}

def @func_5413() -> (Tensor[(338), float64], Tensor[(13, 9, 14), float32], Tensor[(640), uint64]) {
  %577 = @func_3408() /* ty=(Tensor[(338), float32],) */;
  %578 = %577.0;
  %579 = cast(meta[relay.Constant][21] /* ty=Tensor[(338), float32] */, dtype="uint32") /* ty=Tensor[(338), uint32] */;
  %580 = shape_of(%578, dtype="int32") /* ty=Tensor[(1), int32] */;
  %581 = cast(%578, dtype="uint32") /* ty=Tensor[(338), uint32] */;
  %582 = dyn.reshape(%579, %580, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %583 = bitwise_xor(%581, %582) /* ty=Tensor[(338), uint32] */;
  %584 = cast(meta[relay.Constant][21] /* ty=Tensor[(338), float32] */, dtype="float64") /* ty=Tensor[(338), float64] */;
  %585 = shape_of(%583, dtype="int32") /* ty=Tensor[(1), int32] */;
  %586 = cast(%583, dtype="float64") /* ty=Tensor[(338), float64] */;
  %587 = dyn.reshape(%584, %585, newshape=[]) /* ty=Tensor[(?), float64] */;
  %588 = @func_4044() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %589 = @func_2535() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(640), uint64], Tensor[(13, 13, 2), int64]) */;
  %590 = floor_divide(%586, %587) /* ty=Tensor[(338), float64] */;
  %591 = %588.1;
  %592 = %589.2;
  (%590, %591, %592)
}

def @func_15698() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %593 = @func_4257() /* ty=Tensor[(13, 9, 14), float32] */;
  %594 = cast(%593, dtype="float32") /* ty=Tensor[(13, 9, 14), float32] */;
  %595 = reshape(%594, newshape=[13, 9, 14]) /* ty=Tensor[(13, 9, 14), float32] */;
  %596 = @func_7882(%595) /* ty=(Tensor[(13, 9, 14), bool], Tensor[(13, 9, 14), float32], Tensor[(640), uint64]) */;
  %597 = %596.1;
  (%593, %597)
}

def @func_12662() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %598 = @func_9080() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %599 = %598.0;
  %600 = @func_616() /* ty=Tensor[(13, 9, 14), float32] */;
  (%599, %600)
}

def @func_1404() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(338), int64]) {
  %601 = @func_680() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(338), int64]) */;
  %602 = @func_601() /* ty=Tensor[(13, 9, 14), float32] */;
  %603 = @func_616() /* ty=Tensor[(13, 9, 14), float32] */;
  %604 = @func_891() /* ty=Tensor[(13, 9, 14), float32] */;
  %605 = %601.2;
  (%602, %603, %604, %605)
}

def @func_12439() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64]) {
  %606 = @func_9564() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(338), int64]) */;
  %607 = @func_7609() /* ty=(Tensor[(13, 13, 2), int64],) */;
  %608 = %606.0;
  %609 = %607.0;
  (%608, %609)
}

def @func_7882(%var_7865: Tensor[(13, 9, 14), float32]) -> (Tensor[(13, 9, 14), bool], Tensor[(13, 9, 14), float32], Tensor[(640), uint64]) {
  %610 = @func_2653() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %611 = %610.2;
  %612 = cast(%var_7865, dtype="bool") /* ty=Tensor[(13, 9, 14), bool] */;
  %613 = shape_of(%611, dtype="int32") /* ty=Tensor[(3), int32] */;
  %614 = cast(%611, dtype="bool") /* ty=Tensor[(13, 9, 14), bool] */;
  %615 = dyn.reshape(%612, %613, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %616 = @func_4126() /* ty=(Tensor[(16, 8, 5), uint64], Tensor[(11, 12, 7), float32], Tensor[(924), float64], Tensor[(640), uint64]) */;
  %617 = greater_equal(%614, %615) /* ty=Tensor[(13, 9, 14), bool] */;
  %618 = @func_6379() /* ty=Tensor[(13, 9, 14), float32] */;
  %619 = %616.3;
  (%617, %618, %619)
}

def @func_17409() -> (Tensor[(13, 9, 14), float32], Tensor[(338), float64]) {
  %620 = @func_12883() /* ty=(Tensor[(13, 13, 2), float64], Tensor[(13, 9, 14), float32]) */;
  %621 = @func_16665() /* ty=(Tensor[(7, 5, 15), float64], Tensor[(338), float64], Tensor[(338), float32]) */;
  %622 = %620.1;
  %623 = %621.1;
  (%622, %623)
}

def @func_11410() -> (Tensor[(13, 9, 14), int32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(640), uint64], Tensor[(16, 8, 5), float32], Tensor[(7, 13, 15), float64], Tensor[(1, 1365), float64], Tensor[(13, 9, 14), float32]) {
  %624 = @func_11063() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), int32]) */;
  %625 = @func_11192() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %626 = @func_7675() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %627 = @func_5508() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %628 = @func_2535() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(640), uint64], Tensor[(13, 13, 2), int64]) */;
  %629 = @func_4446() /* ty=(Tensor[(10, 16, 14), float32], Tensor[(13, 9, 14), uint32], Tensor[(1638), float32], Tensor[(16, 8, 5), uint64]) */;
  %630 = %629.3;
  %631 = cast(%630, dtype="float32") /* ty=Tensor[(16, 8, 5), float32] */;
  %632 = cast(meta[relay.Constant][22] /* ty=Tensor[(1, 1365), float64] */, dtype="float64") /* ty=Tensor[(1, 1365), float64] */;
  %633 = reshape(%632, newshape=[7, 13, 15]) /* ty=Tensor[(7, 13, 15), float64] */;
  %634 = @func_6627(%633) /* ty=(Tensor[(7, 13, 15), float64],) */;
  %635 = @func_2597() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %636 = %624.2;
  %637 = %625.0;
  %638 = %626.1;
  %639 = %627.0;
  %640 = %628.2;
  %641 = erf(%631) /* ty=Tensor[(16, 8, 5), float32] */;
  %642 = %634.0;
  %643 = %635.0;
  (%636, %637, %638, %639, %640, %641, %642, meta[relay.Constant][22] /* ty=Tensor[(1, 1365), float64] */, %643)
}

def @func_18100() -> Tensor[(13, 9, 14), float32] {
  %644 = @func_10433() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %644.0
}

def @func_7513() -> Tensor[(13, 9, 14), float32] {
  %645 = @func_4902() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %645.0
}

def @func_19295() -> (Tensor[(13, 9, 14), float32],) {
  %646 = @func_11846() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %647 = %646.1;
  (%647,)
}

def @func_19488() -> (Tensor[(13, 9, 14), float32],) {
  %648 = @func_12575() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %649 = %648.0;
  (%649,)
}

def @func_3674() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(10, 16, 14), float32]) {
  %650 = @func_2535() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(640), uint64], Tensor[(13, 13, 2), int64]) */;
  %651 = @func_2822() /* ty=Tensor[(13, 9, 14), float32] */;
  %652 = @func_2401() /* ty=Tensor[(13, 9, 14), float32] */;
  %653 = %650.3;
  %654 = @func_3021() /* ty=Tensor[(10, 16, 14), float32] */;
  (%651, %652, %653, %654)
}

def @func_4397() -> (Tensor[(13, 13, 2), int64], Tensor[(924), float64], Tensor[(13, 13, 2), float64]) {
  %655 = @func_3674() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(10, 16, 14), float32]) */;
  %656 = @func_4126() /* ty=(Tensor[(16, 8, 5), uint64], Tensor[(11, 12, 7), float32], Tensor[(924), float64], Tensor[(640), uint64]) */;
  %657 = @func_2535() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(640), uint64], Tensor[(13, 13, 2), int64]) */;
  %658 = %657.3;
  %659 = cast(%658, dtype="float64") /* ty=Tensor[(13, 13, 2), float64] */;
  %660 = %655.2;
  %661 = %656.2;
  %662 = tan(%659) /* ty=Tensor[(13, 13, 2), float64] */;
  (%660, %661, %662)
}

def @func_10037() -> (Tensor[(16, 8, 5), uint64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64]) {
  %663 = @func_1724() /* ty=(Tensor[(16, 8, 5), uint64],) */;
  %664 = @func_9295() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %665 = @func_6410() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %666 = @func_7090() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(10, 16, 14), float32]) */;
  %667 = %663.0;
  %668 = %664.0;
  %669 = %665.0;
  %670 = %666.0;
  (%667, %668, %669, %670)
}

def @func_14878() -> (Tensor[(338), bool], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %671 = @func_11532() /* ty=(Tensor[(338), bool],) */;
  %672 = @func_8631() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %673 = %671.0;
  %674 = %672.0;
  %675 = @func_4862() /* ty=Tensor[(13, 9, 14), float32] */;
  (%673, %674, %675)
}

def @func_20681() -> (Tensor[(13, 9, 14), float32], Tensor[(338), float64]) {
  %676 = @func_17087() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %677 = @func_17409() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(338), float64]) */;
  %678 = %676.0;
  %679 = %677.1;
  (%678, %679)
}

def @func_4091() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), uint8]) {
  %680 = @func_1561() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %681 = %680.5;
  %682 = cast(%681, dtype="float32") /* ty=Tensor[(13, 9, 14), float32] */;
  %683 = reshape(%682, newshape=[13, 9, 14]) /* ty=Tensor[(13, 9, 14), float32] */;
  %684 = @func_3161(%683) /* ty=Tensor[(13, 9, 14), uint8] */;
  (%681, %684)
}

def @func_1820() -> (Tensor[(13, 9, 14), int32], Tensor[(16, 8, 5), uint64], Tensor[(338), int64]) {
  %685 = @func_718() /* ty=Tensor[(13, 9, 14), float32] */;
  %686 = cast(meta[relay.Constant][23] /* ty=Tensor[(13, 9, 14), float32] */, dtype="int32") /* ty=Tensor[(13, 9, 14), int32] */;
  %687 = shape_of(%685, dtype="int32") /* ty=Tensor[(3), int32] */;
  %688 = cast(%685, dtype="int32") /* ty=Tensor[(13, 9, 14), int32] */;
  %689 = dyn.reshape(%686, %687, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %690 = @func_1724() /* ty=(Tensor[(16, 8, 5), uint64],) */;
  %691 = @func_680() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(338), int64]) */;
  %692 = left_shift(%688, %689) /* ty=Tensor[(13, 9, 14), int32] */;
  %693 = %690.0;
  %694 = %691.2;
  (%692, %693, %694)
}

def @func_10494() -> (Tensor[(7, 5, 15), float64], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64]) {
  %695 = cast(meta[relay.Constant][24] /* ty=Tensor[(7, 5, 15), float64] */, dtype="float64") /* ty=Tensor[(7, 5, 15), float64] */;
  %696 = sin(%695) /* ty=Tensor[(7, 5, 15), float64] */;
  %697 = @func_3462() /* ty=Tensor[(13, 9, 14), float32] */;
  %698 = @func_10408() /* ty=Tensor[(13, 13, 2), int64] */;
  (%696, %697, %698)
}

def @func_2357(%var_2352: Tensor[(11, 2, 2), float32]) -> Tensor[(11, 2, 2), float32] {
  %699 = cast(-3.56888f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %700 = cast(%var_2352, dtype="float32") /* ty=Tensor[(11, 2, 2), float32] */;
  floor_divide(%699, %700) /* ty=Tensor[(11, 2, 2), float32] */
}

def @func_14002() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64]) {
  %701 = @func_13680() /* ty=(Tensor[(13, 13, 2), int64],) */;
  %702 = @func_12755() /* ty=Tensor[(13, 9, 14), float32] */;
  %703 = %701.0;
  (%702, %703)
}

def @func_12135() -> (Tensor[(13, 13, 2), int64], Tensor[(13, 13, 2), int64]) {
  %704 = @func_7609() /* ty=(Tensor[(13, 13, 2), int64],) */;
  %705 = @func_3987() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float64], Tensor[(13, 13, 2), int64]) */;
  %706 = %704.0;
  %707 = %705.2;
  (%706, %707)
}

def @func_17000() -> Tensor[(13, 13, 2), int64] {
  %708 = @func_680() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(338), int64]) */;
  %708.1
}

def @func_12300(%var_12281: Tensor[(338), int64]) -> (Tensor[(11, 12, 7), float64], Tensor[(338), float32]) {
  %709 = @func_10629() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(1, 924), float64], Tensor[(11, 12, 7), float64]) */;
  %710 = cast(%var_12281, dtype="int64") /* ty=Tensor[(338), int64] */;
  %711 = reshape(%710, newshape=[338]) /* ty=Tensor[(338), int64] */;
  %712 = @func_5295(%711) /* ty=(Tensor[(13, 9, 14), float32], Tensor[(338), bool]) */;
  %713 = %712.1;
  %714 = cast(%var_12281, dtype="float32") /* ty=Tensor[(338), float32] */;
  %715 = shape_of(%713, dtype="int32") /* ty=Tensor[(1), int32] */;
  %716 = cast(%713, dtype="float32") /* ty=Tensor[(338), float32] */;
  %717 = dyn.reshape(%714, %715, newshape=[]) /* ty=Tensor[(?), float32] */;
  %718 = %709.2;
  %719 = multiply(%716, %717) /* ty=Tensor[(338), float32] */;
  (%718, %719)
}

def @func_891() -> Tensor[(13, 9, 14), float32] {
  @func_718() /* ty=Tensor[(13, 9, 14), float32] */
}

def @main(%var_20700: int64) -> (Tensor[(14, 2, 11), int64], Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(338), bool], Tensor[(13, 9, 14), float32], Tensor[(7392), float32]) {
  %720 = cast(%var_20700, dtype="int64") /* ty=int64 */;
  %721 = cast(meta[relay.Constant][25] /* ty=Tensor[(14, 2, 11), int64] */, dtype="int64") /* ty=Tensor[(14, 2, 11), int64] */;
  %722 = @func_16127() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64], Tensor[(13, 9, 14), float32]) */;
  %723 = @func_2178() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %724 = cast(meta[relay.Constant][26] /* ty=Tensor[(338), bool] */, dtype="bool") /* ty=Tensor[(338), bool] */;
  %725 = cast(meta[relay.Constant][27] /* ty=Tensor[(7392), float64] */, dtype="float64") /* ty=Tensor[(7392), float64] */;
  %726 = reshape(%724, newshape=[338]) /* ty=Tensor[(338), bool] */;
  %727 = reshape(%725, newshape=[7392]) /* ty=Tensor[(7392), float64] */;
  %728 = @func_14923(%726, %727) /* ty=(Tensor[(13, 9, 14), float32], Tensor[(338), float64], Tensor[(8, 924), int8], Tensor[(7392), float64]) */;
  %729 = @func_2812() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64]) */;
  %730 = cast(meta[relay.Constant][27] /* ty=Tensor[(7392), float64] */, dtype="float32") /* ty=Tensor[(7392), float32] */;
  %731 = cast(%var_20700, dtype="float32") /* ty=float32 */;
  %732 = bitwise_xor(%720, %721) /* ty=Tensor[(14, 2, 11), int64] */;
  %733 = %722.4;
  %734 = @func_2248() /* ty=Tensor[(16, 8, 5), uint64] */;
  %735 = %723.0;
  %736 = %728.0;
  %737 = %729.0;
  %738 = power(%730, %731) /* ty=Tensor[(7392), float32] */;
  (%732, %733, %734, %735, %736, meta[relay.Constant][26] /* ty=Tensor[(338), bool] */, %737, %738)
}

def @func_11184() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %739 = @func_4044() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %740 = @func_11063() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), int32]) */;
  %741 = %739.0;
  %742 = %740.1;
  (%741, %742)
}

def @func_4846() -> (Tensor[(10, 16, 14), float32], Tensor[(13, 9, 14), float32]) {
  %743 = @func_2597() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %744 = @func_3021() /* ty=Tensor[(10, 16, 14), float32] */;
  %745 = %743.0;
  (%744, %745)
}

def @func_7090() -> (Tensor[(13, 13, 2), int64], Tensor[(10, 16, 14), float32]) {
  %746 = @func_3987() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float64], Tensor[(13, 13, 2), int64]) */;
  %747 = @func_4446() /* ty=(Tensor[(10, 16, 14), float32], Tensor[(13, 9, 14), uint32], Tensor[(1638), float32], Tensor[(16, 8, 5), uint64]) */;
  %748 = %746.2;
  %749 = %747.0;
  (%748, %749)
}

def @func_3219() -> Tensor[(13, 9, 14), float32] {
  %750 = @func_2812() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64]) */;
  %750.0
}

def @func_12231(%var_12225: Tensor[(3, 3, 5), float32]) -> (Tensor[(3, 3, 5), float32], Tensor[(13, 13, 2), int64]) {
  %751 = cast(%var_12225, dtype="float32") /* ty=Tensor[(3, 3, 5), float32] */;
  %752 = exp(%751) /* ty=Tensor[(3, 3, 5), float32] */;
  %753 = @func_7111() /* ty=Tensor[(13, 13, 2), int64] */;
  (%752, %753)
}

def @func_5492() -> (Tensor[(338), int64],) {
  %754 = @func_680() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(338), int64]) */;
  %755 = %754.2;
  (%755,)
}

def @func_11811() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), float64], Tensor[(13, 9, 14), uint8]) {
  %756 = @func_8204() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %757 = @func_4397() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(924), float64], Tensor[(13, 13, 2), float64]) */;
  %758 = @func_4091() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), uint8]) */;
  %759 = %756.0;
  %760 = %757.2;
  %761 = %758.1;
  (%759, %760, %761)
}

def @func_13010(%var_12973: Tensor[(6, 10, 6), float32]) -> (Tensor[(6, 10, 6), float32], Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) {
  %762 = cast(%var_12973, dtype="float32") /* ty=Tensor[(6, 10, 6), float32] */;
  %763 = @func_8762() /* ty=(Tensor[(13, 13, 2), int64],) */;
  %764 = @func_5932() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %765 = acos(%762) /* ty=Tensor[(6, 10, 6), float32] */;
  %766 = %763.0;
  %767 = %764.0;
  (%765, %766, %767)
}

def @func_19226() -> (Tensor[(338), int64],) {
  %768 = @func_12314() /* ty=Tensor[(338), int64] */;
  (%768,)
}

def @func_19840() -> Tensor[(13, 13, 2), int64] {
  %769 = @func_10494() /* ty=(Tensor[(7, 5, 15), float64], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64]) */;
  %769.2
}

def @func_17670() -> (Tensor[(10, 16, 14), float32], Tensor[(338), float64], Tensor[(26, 13), float32]) {
  %770 = cast(meta[relay.Constant][28] /* ty=Tensor[(26, 13), float32] */, dtype="float32") /* ty=Tensor[(26, 13), float32] */;
  %771 = cast(meta[relay.Constant][28] /* ty=Tensor[(26, 13), float32] */, dtype="uint16") /* ty=Tensor[(26, 13), uint16] */;
  %772 = reshape(%770, newshape=[338]) /* ty=Tensor[(338), float32] */;
  %773 = reshape(%771, newshape=[338]) /* ty=Tensor[(338), uint16] */;
  %774 = @func_5864(%772, %773) /* ty=(Tensor[(338), int32], Tensor[(338), int64], Tensor[(338), float64]) */;
  %775 = @func_14206() /* ty=Tensor[(10, 16, 14), float32] */;
  %776 = %774.2;
  (%775, %776, meta[relay.Constant][28] /* ty=Tensor[(26, 13), float32] */)
}

def @func_6108() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %777 = @func_2597() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %778 = @func_3674() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(10, 16, 14), float32]) */;
  %779 = %777.0;
  %780 = %778.0;
  (%779, %780)
}

def @func_18679() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %781 = @func_5889() /* ty=(Tensor[(16, 8, 5), uint64], Tensor[(13, 9, 14), float32]) */;
  %782 = @func_17071() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %783 = %781.1;
  %784 = %782.2;
  (%783, %784)
}

def @func_7609() -> (Tensor[(13, 13, 2), int64],) {
  %785 = @func_6569() /* ty=(Tensor[(13, 13, 2), int64],) */;
  %786 = %785.0;
  (%786,)
}

def @func_13203(%var_13192: Tensor[(40, 16), uint64]) -> (Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64], Tensor[(40, 16), uint64]) {
  %787 = cast(%var_13192, dtype="uint64") /* ty=Tensor[(40, 16), uint64] */;
  %788 = reshape(%787, newshape=[640]) /* ty=Tensor[(640), uint64] */;
  %789 = @func_12199(%788) /* ty=(Tensor[(13, 13, 2), int64], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64]) */;
  %790 = @func_6854() /* ty=Tensor[(13, 9, 14), float32] */;
  %791 = %789.1;
  (%790, %791, %var_13192)
}

def @func_12095() -> Tensor[(13, 9, 14), float64] {
  %792 = @func_2243() /* ty=(Tensor[(13, 9, 14), float64],) */;
  %792.0
}

def @func_3744() -> (Tensor[(13, 13, 2), int64],) {
  %793 = @func_3600() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) */;
  %794 = %793.0;
  (%794,)
}

def @func_16076() -> (Tensor[(13, 9, 14), float64], Tensor[(16, 8, 5), uint64]) {
  %795 = @func_2243() /* ty=(Tensor[(13, 9, 14), float64],) */;
  %796 = @func_1724() /* ty=(Tensor[(16, 8, 5), uint64],) */;
  %797 = %795.0;
  %798 = %796.0;
  (%797, %798)
}

def @func_6627(%var_6610: Tensor[(7, 13, 15), float64]) -> (Tensor[(7, 13, 15), float64],) {
  %799 = cast(%var_6610, dtype="float64") /* ty=Tensor[(7, 13, 15), float64] */;
  %800 = erf(%799) /* ty=Tensor[(7, 13, 15), float64] */;
  (%800,)
}

def @func_4575(%var_4569: Tensor[(13, 26), int64]) -> (Tensor[(16, 8, 5), uint64], Tensor[(16, 8, 5), uint64], Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 26), bool], Tensor[(16, 8, 5), uint64]) {
  %801 = @func_1561() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %802 = @func_1724() /* ty=(Tensor[(16, 8, 5), uint64],) */;
  %803 = cast(meta[relay.Constant][29] /* ty=Tensor[(13, 26), int64] */, dtype="int64") /* ty=Tensor[(13, 26), int64] */;
  %804 = cast(meta[relay.Constant][29] /* ty=Tensor[(13, 26), int64] */, dtype="int64") /* ty=Tensor[(13, 26), int64] */;
  %805 = reshape(%803, newshape=[13, 13, 2]) /* ty=Tensor[(13, 13, 2), int64] */;
  %806 = reshape(%804, newshape=[13, 13, 2]) /* ty=Tensor[(13, 13, 2), int64] */;
  %807 = cast(%var_4569, dtype="bool") /* ty=Tensor[(13, 26), bool] */;
  %808 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(13, 26), int64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %809 = cast(meta[relay.Constant][29] /* ty=Tensor[(13, 26), int64] */, dtype="bool") /* ty=Tensor[(13, 26), bool] */;
  %810 = dyn.reshape(%807, %808, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %811 = @func_1724() /* ty=(Tensor[(16, 8, 5), uint64],) */;
  %812 = %801.2;
  %813 = %802.0;
  %814 = @func_400(%805, %806) /* ty=Tensor[(13, 13, 2), int64] */;
  %815 = @func_3203() /* ty=Tensor[(13, 9, 14), float32] */;
  %816 = not_equal(%809, %810) /* ty=Tensor[(13, 26), bool] */;
  %817 = %811.0;
  (%812, %813, %814, %815, %816, %817)
}

def @func_13578() -> (Tensor[(13, 13, 2), int64],) {
  %818 = @func_7377() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) */;
  %819 = %818.0;
  (%819,)
}

def @func_13704() -> (Tensor[(13, 13, 2), int64],) {
  %820 = @func_13100() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 13, 2), int64]) */;
  %821 = %820.0;
  (%821,)
}

def @func_16252() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float64]) {
  %822 = @func_968() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %823 = @func_616() /* ty=Tensor[(13, 9, 14), float32] */;
  %824 = cast(%823, dtype="float32") /* ty=Tensor[(13, 9, 14), float32] */;
  %825 = reshape(%824, newshape=[13, 9, 14]) /* ty=Tensor[(13, 9, 14), float32] */;
  %826 = @func_1780(%825) /* ty=(Tensor[(13, 9, 14), float64],) */;
  %827 = %822.2;
  %828 = %826.0;
  (%827, %823, %828)
}

def @func_16597() -> (Tensor[(13, 13, 2), int64], Tensor[(13, 13, 2), int64], Tensor[(338), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(13, 13, 2), int64]) {
  %829 = @func_13704() /* ty=(Tensor[(13, 13, 2), int64],) */;
  %830 = @func_15803() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) */;
  %831 = %830.0;
  %832 = cast(%831, dtype="float32") /* ty=Tensor[(13, 13, 2), float32] */;
  %833 = reshape(%832, newshape=[338]) /* ty=Tensor[(338), float32] */;
  %834 = @func_14494(%833) /* ty=(Tensor[(11, 12, 7), float64], Tensor[(338), int32], Tensor[(338), float32]) */;
  %835 = @func_5610() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %836 = %834.2;
  %837 = cast(%836, dtype="int64") /* ty=Tensor[(338), int64] */;
  %838 = reshape(%837, newshape=[13, 26]) /* ty=Tensor[(13, 26), int64] */;
  %839 = @func_8345(%838) /* ty=(Tensor[(16, 8, 5), uint64], Tensor[(13, 13, 2), int64], Tensor[(13, 13, 2), int64], Tensor[(13, 26), float64]) */;
  %840 = %829.0;
  %841 = %835.1;
  %842 = @func_12755() /* ty=Tensor[(13, 9, 14), float32] */;
  %843 = @func_9537() /* ty=Tensor[(13, 13, 2), int64] */;
  %844 = %839.1;
  (%840, %831, %836, %841, %842, %843, %844)
}

def @func_3855() -> (Tensor[(16, 8, 5), uint64], Tensor[(13, 9, 14), float64], Tensor[(13, 9, 14), float64]) {
  %845 = @func_1724() /* ty=(Tensor[(16, 8, 5), uint64],) */;
  %846 = @func_2243() /* ty=(Tensor[(13, 9, 14), float64],) */;
  %847 = %846.0;
  %848 = cast(%847, dtype="float64") /* ty=Tensor[(13, 9, 14), float64] */;
  %849 = @func_3096() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float64], Tensor[(1638), float32], Tensor[(13, 9, 14), float32]) */;
  %850 = %845.0;
  %851 = sinh(%848) /* ty=Tensor[(13, 9, 14), float64] */;
  %852 = %849.1;
  (%850, %851, %852)
}

def @func_9080() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %853 = @func_8204() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %854 = @func_1944() /* ty=Tensor[(13, 9, 14), float32] */;
  %855 = %853.0;
  (%854, %855)
}

def @func_12801() -> Tensor[(9, 14, 9), float64] {
  %856 = cast(meta[relay.Constant][30] /* ty=Tensor[(9, 14, 9), float64] */, dtype="float64") /* ty=Tensor[(9, 14, 9), float64] */;
  rsqrt(%856) /* ty=Tensor[(9, 14, 9), float64] */
}

def @func_968() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %857 = @func_891() /* ty=Tensor[(13, 9, 14), float32] */;
  %858 = @func_616() /* ty=Tensor[(13, 9, 14), float32] */;
  %859 = @func_616() /* ty=Tensor[(13, 9, 14), float32] */;
  (%857, %858, %859)
}

def @func_9343() -> (Tensor[(13, 9, 14), int32], Tensor[(13, 9, 14), float32], Tensor[(924), float64]) {
  %860 = @func_1820() /* ty=(Tensor[(13, 9, 14), int32], Tensor[(16, 8, 5), uint64], Tensor[(338), int64]) */;
  %861 = @func_8219() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(338), int64]) */;
  %862 = @func_4397() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(924), float64], Tensor[(13, 13, 2), float64]) */;
  %863 = %860.0;
  %864 = %861.0;
  %865 = %862.1;
  (%863, %864, %865)
}

def @func_1154(%var_1140: Tensor[(13, 9, 14), float32]) -> (Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), uint16], Tensor[(13, 9, 14), float32]) {
  %866 = @func_680() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(338), int64]) */;
  %867 = @func_968() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %868 = @func_968() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %869 = %868.0;
  %870 = cast(%var_1140, dtype="uint16") /* ty=Tensor[(13, 9, 14), uint16] */;
  %871 = shape_of(%869, dtype="int32") /* ty=Tensor[(3), int32] */;
  %872 = cast(%869, dtype="uint16") /* ty=Tensor[(13, 9, 14), uint16] */;
  %873 = dyn.reshape(%870, %871, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %874 = %866.1;
  %875 = @func_616() /* ty=Tensor[(13, 9, 14), float32] */;
  %876 = %867.1;
  %877 = bitwise_xor(%872, %873) /* ty=Tensor[(13, 9, 14), uint16] */;
  %878 = @func_616() /* ty=Tensor[(13, 9, 14), float32] */;
  (%874, %875, %876, %877, %878)
}

def @func_8204() -> (Tensor[(13, 9, 14), float32],) {
  %879 = @func_5508() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %880 = %879.0;
  (%880,)
}

def @func_15021() -> Tensor[(13, 9, 14), float32] {
  %881 = @func_9930() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %881.0
}

def @func_20232(%var_20177: Tensor[(924), float64]) -> (Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(924), float64], Tensor[(13, 9, 14), float32], Tensor[(10, 16, 14), float64], Tensor[(13, 9, 14), float32]) {
  %882 = @func_7111() /* ty=Tensor[(13, 13, 2), int64] */;
  %883 = cast(%882, dtype="int64") /* ty=Tensor[(13, 13, 2), int64] */;
  %884 = cast(%var_20177, dtype="float64") /* ty=Tensor[(924), float64] */;
  %885 = cast(%var_20177, dtype="float64") /* ty=Tensor[(924), float64] */;
  %886 = reshape(%883, newshape=[338]) /* ty=Tensor[(338), int64] */;
  %887 = reshape(%884, newshape=[154, 6]) /* ty=Tensor[(154, 6), float64] */;
  %888 = reshape(%885, newshape=[154, 6]) /* ty=Tensor[(154, 6), float64] */;
  %889 = @func_2865(%886, %887, %888) /* ty=(Tensor[(16, 8, 5), uint64], Tensor[(13, 13, 2), int64], Tensor[(338), int64], Tensor[(11, 12, 7), float32], Tensor[(13, 9, 14), float32], Tensor[(154, 6), float64]) */;
  %890 = @func_18812() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %891 = @func_4701() /* ty=Tensor[(10, 16, 14), float32] */;
  %892 = cast(%891, dtype="float64") /* ty=Tensor[(10, 16, 14), float64] */;
  %893 = @func_11511() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %894 = %889.4;
  %895 = %890.0;
  %896 = sigmoid(%892) /* ty=Tensor[(10, 16, 14), float64] */;
  %897 = %893.1;
  (%882, %894, %var_20177, %895, %896, %897)
}

def @func_4044() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %898 = @func_3674() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(10, 16, 14), float32]) */;
  %899 = @func_891() /* ty=Tensor[(13, 9, 14), float32] */;
  %900 = %898.0;
  (%899, %900)
}

def @func_1944() -> Tensor[(13, 9, 14), float32] {
  %901 = @func_1561() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %901.5
}

def @func_14272() -> Tensor[(13, 9, 14), float32] {
  @func_11146() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_8552(%var_8496: Tensor[(2240), float32], %var_8512: Tensor[(338), int64]) -> (Tensor[(640), uint64], Tensor[(10, 16, 14), int32], Tensor[(2240), int8], Tensor[(16, 8, 5), uint64], Tensor[(338), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %902 = cast(%var_8496, dtype="float32") /* ty=Tensor[(2240), float32] */;
  %903 = reshape(%902, newshape=[10, 16, 14]) /* ty=Tensor[(10, 16, 14), float32] */;
  %904 = @func_6737(%903) /* ty=(Tensor[(10, 16, 14), int32], Tensor[(13, 13, 2), int64]) */;
  %905 = cast(meta[relay.Constant][31] /* ty=Tensor[(2240), float32] */, dtype="int8") /* ty=Tensor[(2240), int8] */;
  %906 = shape_of(%var_8496, dtype="int32") /* ty=Tensor[(1), int32] */;
  %907 = cast(%var_8496, dtype="int8") /* ty=Tensor[(2240), int8] */;
  %908 = dyn.reshape(%905, %906, newshape=[]) /* ty=Tensor[(?), int8] */;
  %909 = cast(%var_8512, dtype="int64") /* ty=Tensor[(338), int64] */;
  %910 = reshape(%909, newshape=[13, 26]) /* ty=Tensor[(13, 26), int64] */;
  %911 = @func_8345(%910) /* ty=(Tensor[(16, 8, 5), uint64], Tensor[(13, 13, 2), int64], Tensor[(13, 13, 2), int64], Tensor[(13, 26), float64]) */;
  %912 = @func_5049() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %913 = @func_3318() /* ty=Tensor[(640), uint64] */;
  %914 = %904.0;
  %915 = bitwise_or(%907, %908) /* ty=Tensor[(2240), int8] */;
  %916 = %911.0;
  %917 = %912.1;
  %918 = @func_601() /* ty=Tensor[(13, 9, 14), float32] */;
  (%913, %914, %915, %916, %var_8512, %917, %918)
}

def @func_12883() -> (Tensor[(13, 13, 2), float64], Tensor[(13, 9, 14), float32]) {
  %919 = @func_11811() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), float64], Tensor[(13, 9, 14), uint8]) */;
  %920 = %919.1;
  %921 = @func_616() /* ty=Tensor[(13, 9, 14), float32] */;
  (%920, %921)
}

def @func_19062() -> (Tensor[(13, 13, 2), int64],) {
  %922 = @func_13578() /* ty=(Tensor[(13, 13, 2), int64],) */;
  %923 = %922.0;
  (%923,)
}

def @func_17902() -> (Tensor[(13, 9, 14), float64], Tensor[(13, 13, 2), int64]) {
  %924 = @func_16076() /* ty=(Tensor[(13, 9, 14), float64], Tensor[(16, 8, 5), uint64]) */;
  %925 = @func_13680() /* ty=(Tensor[(13, 13, 2), int64],) */;
  %926 = %924.0;
  %927 = %925.0;
  (%926, %927)
}

def @func_20295(%var_20286: Tensor[(1, 338), float32]) -> (Tensor[(13, 9, 14), float32], Tensor[(1638), float32], Tensor[(338), int32], Tensor[(1, 338), float32]) {
  %928 = @func_14272() /* ty=Tensor[(13, 9, 14), float32] */;
  %929 = cast(%928, dtype="float32") /* ty=Tensor[(13, 9, 14), float32] */;
  %930 = reshape(%929, newshape=[1638]) /* ty=Tensor[(1638), float32] */;
  %931 = @func_6914(%930) /* ty=(Tensor[(16, 8, 5), float64], Tensor[(13, 9, 14), uint32], Tensor[(1638), float32]) */;
  %932 = cast(%var_20286, dtype="float32") /* ty=Tensor[(1, 338), float32] */;
  %933 = cast(%var_20286, dtype="uint16") /* ty=Tensor[(1, 338), uint16] */;
  %934 = reshape(%932, newshape=[338]) /* ty=Tensor[(338), float32] */;
  %935 = reshape(%933, newshape=[338]) /* ty=Tensor[(338), uint16] */;
  %936 = @func_5864(%934, %935) /* ty=(Tensor[(338), int32], Tensor[(338), int64], Tensor[(338), float64]) */;
  %937 = %931.2;
  %938 = %936.0;
  (%928, %937, %938, %var_20286)
}

def @func_4218() -> Tensor[(13, 9, 14), float32] {
  @func_1338() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_18812() -> (Tensor[(13, 9, 14), float32],) {
  %939 = @func_12318() /* ty=Tensor[(13, 9, 14), float32] */;
  (%939,)
}

def @func_2597() -> (Tensor[(13, 9, 14), float32],) {
  %940 = @func_616() /* ty=Tensor[(13, 9, 14), float32] */;
  (%940,)
}

def @func_5729() -> (Tensor[(13, 9, 14), float32],) {
  %941 = @func_2597() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %942 = %941.0;
  (%942,)
}

def @func_4065() -> (Tensor[(13, 9, 14), float32],) {
  %943 = @func_968() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %944 = %943.2;
  (%944,)
}

def @func_9669() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64], Tensor[(20, 32), uint64], Tensor[(13, 9, 14), float32]) {
  %945 = @func_7675() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %946 = cast(meta[relay.Constant][32] /* ty=Tensor[(20, 32), uint64] */, dtype="uint64") /* ty=Tensor[(20, 32), uint64] */;
  %947 = cast(meta[relay.Constant][32] /* ty=Tensor[(20, 32), uint64] */, dtype="uint64") /* ty=Tensor[(20, 32), uint64] */;
  %948 = reshape(%946, newshape=[16, 8, 5]) /* ty=Tensor[(16, 8, 5), uint64] */;
  %949 = reshape(%947, newshape=[16, 8, 5]) /* ty=Tensor[(16, 8, 5), uint64] */;
  %950 = @func_245(%948, %949) /* ty=(Tensor[(16, 8, 5), uint64],) */;
  %951 = @func_9295() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %952 = %945.0;
  %953 = @func_1338() /* ty=Tensor[(13, 9, 14), float32] */;
  %954 = %950.0;
  %955 = %951.1;
  (%952, %953, %954, meta[relay.Constant][32] /* ty=Tensor[(20, 32), uint64] */, %955)
}

def @func_6802() -> Tensor[(13, 9, 14), float32] {
  %956 = @func_4902() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %956.0
}

def @func_8762() -> (Tensor[(13, 13, 2), int64],) {
  %957 = @func_6569() /* ty=(Tensor[(13, 13, 2), int64],) */;
  %958 = %957.0;
  (%958,)
}

def @func_601() -> Tensor[(13, 9, 14), float32] {
  %959 = cast(meta[relay.Constant][33] /* ty=Tensor[(13, 9, 14), float32] */, dtype="float32") /* ty=Tensor[(13, 9, 14), float32] */;
  log2(%959) /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_18430() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), int16]) {
  %960 = @func_8204() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %961 = @func_1691() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), int16], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64]) */;
  %962 = %960.0;
  %963 = %961.1;
  (%962, %963)
}

def @func_6914(%var_6910: Tensor[(1638), float32]) -> (Tensor[(16, 8, 5), float64], Tensor[(13, 9, 14), uint32], Tensor[(1638), float32]) {
  %964 = @func_4126() /* ty=(Tensor[(16, 8, 5), uint64], Tensor[(11, 12, 7), float32], Tensor[(924), float64], Tensor[(640), uint64]) */;
  %965 = %964.0;
  %966 = cast(%965, dtype="float64") /* ty=Tensor[(16, 8, 5), float64] */;
  %967 = cast(%var_6910, dtype="float32") /* ty=Tensor[(1638), float32] */;
  %968 = reshape(%967, newshape=[13, 9, 14]) /* ty=Tensor[(13, 9, 14), float32] */;
  %969 = log2(%966) /* ty=Tensor[(16, 8, 5), float64] */;
  %970 = @func_3259(%968) /* ty=Tensor[(13, 9, 14), uint32] */;
  (%969, %970, %var_6910)
}

def @func_8605() -> (Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %971 = @func_1459() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float64]) */;
  %972 = @func_968() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %973 = %971.0;
  %974 = %972.0;
  %975 = @func_7716() /* ty=Tensor[(13, 9, 14), float32] */;
  (%973, %974, %975)
}

def @func_15053() -> Tensor[(338), int64] {
  @func_13279() /* ty=Tensor[(338), int64] */
}

def @func_15501() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %976 = @func_15406() /* ty=(Tensor[(338), bool], Tensor[(13, 9, 14), float32]) */;
  %977 = @func_11111() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64]) */;
  %978 = %976.1;
  %979 = %977.0;
  (%978, %979)
}

def @func_2535() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(640), uint64], Tensor[(13, 13, 2), int64]) {
  %980 = cast(meta[relay.Constant][34] /* ty=Tensor[(640), uint64] */, dtype="uint64") /* ty=Tensor[(640), uint64] */;
  %981 = reshape(%980, newshape=[640]) /* ty=Tensor[(640), uint64] */;
  %982 = @func_2079(%981) /* ty=(Tensor[(13, 13, 2), int64], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64], Tensor[(13, 13, 2), int64]) */;
  %983 = @func_1906() /* ty=(Tensor[(13, 13, 2), int64],) */;
  %984 = @func_718() /* ty=Tensor[(13, 9, 14), float32] */;
  %985 = %982.0;
  %986 = %983.0;
  (%984, %985, meta[relay.Constant][34] /* ty=Tensor[(640), uint64] */, %986)
}

def @func_1691() -> (Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), int16], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64]) {
  %987 = @func_1459() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float64]) */;
  %988 = @func_601() /* ty=Tensor[(13, 9, 14), float32] */;
  %989 = @func_968() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %990 = %989.1;
  %991 = cast(%990, dtype="int16") /* ty=Tensor[(13, 9, 14), int16] */;
  %992 = shape_of(%988, dtype="int32") /* ty=Tensor[(3), int32] */;
  %993 = cast(%988, dtype="int16") /* ty=Tensor[(13, 9, 14), int16] */;
  %994 = dyn.reshape(%991, %992, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %995 = cast(meta[relay.Constant][35] /* ty=Tensor[(640), uint64] */, dtype="uint64") /* ty=Tensor[(640), uint64] */;
  %996 = cast(meta[relay.Constant][35] /* ty=Tensor[(640), uint64] */, dtype="uint64") /* ty=Tensor[(640), uint64] */;
  %997 = reshape(%995, newshape=[16, 8, 5]) /* ty=Tensor[(16, 8, 5), uint64] */;
  %998 = reshape(%996, newshape=[16, 8, 5]) /* ty=Tensor[(16, 8, 5), uint64] */;
  %999 = @func_245(%997, %998) /* ty=(Tensor[(16, 8, 5), uint64],) */;
  %1000 = %987.0;
  %1001 = subtract(%993, %994) /* ty=Tensor[(13, 9, 14), int16] */;
  %1002 = %999.0;
  (%1000, %1001, %1002, meta[relay.Constant][35] /* ty=Tensor[(640), uint64] */)
}

def @func_8673() -> (Tensor[(13, 13, 2), int64], Tensor[(924, ?), bool]) {
  %1003 = @func_680() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(338), int64]) */;
  %1004 = %1003.1;
  %1005 = cast(%1004, dtype="int64") /* ty=Tensor[(13, 13, 2), int64] */;
  %1006 = cast(meta[relay.Constant][36] /* ty=Tensor[(924, 1), float64] */, dtype="float64") /* ty=Tensor[(924, 1), float64] */;
  %1007 = cast(meta[relay.Constant][36] /* ty=Tensor[(924, 1), float64] */, dtype="float64") /* ty=Tensor[(924, 1), float64] */;
  %1008 = reshape(%1005, newshape=[338]) /* ty=Tensor[(338), int64] */;
  %1009 = reshape(%1006, newshape=[154, 6]) /* ty=Tensor[(154, 6), float64] */;
  %1010 = reshape(%1007, newshape=[154, 6]) /* ty=Tensor[(154, 6), float64] */;
  %1011 = @func_2865(%1008, %1009, %1010) /* ty=(Tensor[(16, 8, 5), uint64], Tensor[(13, 13, 2), int64], Tensor[(338), int64], Tensor[(11, 12, 7), float32], Tensor[(13, 9, 14), float32], Tensor[(154, 6), float64]) */;
  %1012 = %1011.3;
  %1013 = cast(%1012, dtype="bool") /* ty=Tensor[(11, 12, 7), bool] */;
  %1014 = shape_of(meta[relay.Constant][36] /* ty=Tensor[(924, 1), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1015 = cast(meta[relay.Constant][36] /* ty=Tensor[(924, 1), float64] */, dtype="bool") /* ty=Tensor[(924, 1), bool] */;
  %1016 = dyn.reshape(%1013, %1014, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1017 = not_equal(%1015, %1016) /* ty=Tensor[(924, ?), bool] */;
  (%1004, %1017)
}

def @func_1780(%var_1775: Tensor[(13, 9, 14), float32]) -> (Tensor[(13, 9, 14), float64],) {
  %1018 = @func_891() /* ty=Tensor[(13, 9, 14), float32] */;
  %1019 = cast(%var_1775, dtype="float64") /* ty=Tensor[(13, 9, 14), float64] */;
  %1020 = shape_of(%1018, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1021 = cast(%1018, dtype="float64") /* ty=Tensor[(13, 9, 14), float64] */;
  %1022 = dyn.reshape(%1019, %1020, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1023 = divide(%1021, %1022) /* ty=Tensor[(13, 9, 14), float64] */;
  (%1023,)
}

def @func_8631() -> (Tensor[(13, 9, 14), float32],) {
  %1024 = @func_5508() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %1025 = %1024.0;
  (%1025,)
}

def @func_5932() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %1026 = @func_4065() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %1027 = %1026.0;
  %1028 = @func_3203() /* ty=Tensor[(13, 9, 14), float32] */;
  (%1027, %1028)
}

def @func_2178() -> (Tensor[(13, 9, 14), float32],) {
  %1029 = @func_1338() /* ty=Tensor[(13, 9, 14), float32] */;
  (%1029,)
}

def @func_17569(%var_17551: Tensor[(10, 11, 5), float64]) -> Tensor[(10, 11, 5), float64] {
  %1030 = cast(%var_17551, dtype="float64") /* ty=Tensor[(10, 11, 5), float64] */;
  asin(%1030) /* ty=Tensor[(10, 11, 5), float64] */
}

def @func_2243() -> (Tensor[(13, 9, 14), float64],) {
  %1031 = @func_718() /* ty=Tensor[(13, 9, 14), float32] */;
  %1032 = cast(%1031, dtype="float64") /* ty=Tensor[(13, 9, 14), float64] */;
  %1033 = asin(%1032) /* ty=Tensor[(13, 9, 14), float64] */;
  (%1033,)
}

def @func_10629() -> (Tensor[(13, 13, 2), int64], Tensor[(1, 924), float64], Tensor[(11, 12, 7), float64]) {
  %1034 = @func_7090() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(10, 16, 14), float32]) */;
  %1035 = cast(meta[relay.Constant][37] /* ty=Tensor[(1, 924), float64] */, dtype="float64") /* ty=Tensor[(1, 924), float64] */;
  %1036 = reshape(%1035, newshape=[11, 12, 7]) /* ty=Tensor[(11, 12, 7), float64] */;
  %1037 = @func_1291(%1036) /* ty=Tensor[(11, 12, 7), float32] */;
  %1038 = cast(meta[relay.Constant][38] /* ty=Tensor[(11, 12, 7), float32] */, dtype="float64") /* ty=Tensor[(11, 12, 7), float64] */;
  %1039 = shape_of(%1037, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1040 = cast(%1037, dtype="float64") /* ty=Tensor[(11, 12, 7), float64] */;
  %1041 = dyn.reshape(%1038, %1039, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1042 = %1034.0;
  %1043 = divide(%1040, %1041) /* ty=Tensor[(11, 12, 7), float64] */;
  (%1042, meta[relay.Constant][37] /* ty=Tensor[(1, 924), float64] */, %1043)
}

def @func_4760() -> (Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %1044 = @func_3987() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float64], Tensor[(13, 13, 2), int64]) */;
  %1045 = @func_968() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %1046 = @func_2178() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %1047 = %1044.2;
  %1048 = @func_4218() /* ty=Tensor[(13, 9, 14), float32] */;
  %1049 = %1045.0;
  %1050 = %1046.0;
  (%1047, %1048, %1049, %1050)
}

def @func_10772() -> Tensor[(13, 13, 2), int64] {
  %1051 = @func_7377() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) */;
  %1051.0
}

def @func_4902() -> (Tensor[(13, 9, 14), float32],) {
  %1052 = @func_4218() /* ty=Tensor[(13, 9, 14), float32] */;
  (%1052,)
}

def @func_8992(%var_8981: Tensor[(338), int64]) -> (Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), bool], Tensor[(338), int64]) {
  %1053 = cast(%var_8981, dtype="int64") /* ty=Tensor[(338), int64] */;
  %1054 = reshape(%1053, newshape=[13, 13, 2]) /* ty=Tensor[(13, 13, 2), int64] */;
  %1055 = @func_2401() /* ty=Tensor[(13, 9, 14), float32] */;
  %1056 = @func_4929(%1054) /* ty=Tensor[(13, 13, 2), bool] */;
  (%1055, %1056, %var_8981)
}

def @func_3557() -> (Tensor[(13, 13, 2), int64],) {
  %1057 = @func_1459() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float64]) */;
  %1058 = %1057.0;
  (%1058,)
}

def @func_10894() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %1059 = @func_10494() /* ty=(Tensor[(7, 5, 15), float64], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64]) */;
  %1060 = @func_5610() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %1061 = %1059.1;
  %1062 = %1060.0;
  (%1061, %1062)
}

def @func_11111() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64]) {
  %1063 = @func_3600() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) */;
  %1064 = %1063.1;
  %1065 = @func_2822() /* ty=Tensor[(13, 9, 14), float32] */;
  %1066 = @func_2248() /* ty=Tensor[(16, 8, 5), uint64] */;
  (%1064, %1065, %1066)
}

def @func_12199(%var_12190: Tensor[(640), uint64]) -> (Tensor[(13, 13, 2), int64], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64]) {
  %1067 = @func_7609() /* ty=(Tensor[(13, 13, 2), int64],) */;
  %1068 = cast(%var_12190, dtype="uint64") /* ty=Tensor[(640), uint64] */;
  %1069 = cast(%var_12190, dtype="uint64") /* ty=Tensor[(640), uint64] */;
  %1070 = reshape(%1068, newshape=[16, 8, 5]) /* ty=Tensor[(16, 8, 5), uint64] */;
  %1071 = reshape(%1069, newshape=[16, 8, 5]) /* ty=Tensor[(16, 8, 5), uint64] */;
  %1072 = @func_245(%1070, %1071) /* ty=(Tensor[(16, 8, 5), uint64],) */;
  %1073 = %1067.0;
  %1074 = %1072.0;
  (%1073, %1074, %var_12190)
}

def @func_2865(%var_2842: Tensor[(338), int64], %var_2845: Tensor[(154, 6), float64], %var_2855: Tensor[(154, 6), float64]) -> (Tensor[(16, 8, 5), uint64], Tensor[(13, 13, 2), int64], Tensor[(338), int64], Tensor[(11, 12, 7), float32], Tensor[(13, 9, 14), float32], Tensor[(154, 6), float64]) {
  %1075 = @func_1561() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %1076 = cast(%var_2842, dtype="int64") /* ty=Tensor[(338), int64] */;
  %1077 = cast(%var_2842, dtype="int64") /* ty=Tensor[(338), int64] */;
  %1078 = reshape(%1076, newshape=[13, 13, 2]) /* ty=Tensor[(13, 13, 2), int64] */;
  %1079 = reshape(%1077, newshape=[13, 13, 2]) /* ty=Tensor[(13, 13, 2), int64] */;
  %1080 = cast(%var_2845, dtype="float64") /* ty=Tensor[(154, 6), float64] */;
  %1081 = reshape(%1080, newshape=[11, 12, 7]) /* ty=Tensor[(11, 12, 7), float64] */;
  %1082 = @func_2597() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %1083 = cast(%var_2855, dtype="float64") /* ty=Tensor[(154, 6), float64] */;
  %1084 = shape_of(%var_2845, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1085 = cast(%var_2845, dtype="float64") /* ty=Tensor[(154, 6), float64] */;
  %1086 = dyn.reshape(%1083, %1084, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %1087 = %1075.2;
  %1088 = @func_400(%1078, %1079) /* ty=Tensor[(13, 13, 2), int64] */;
  %1089 = @func_1291(%1081) /* ty=Tensor[(11, 12, 7), float32] */;
  %1090 = %1082.0;
  %1091 = floor_mod(%1085, %1086) /* ty=Tensor[(154, 6), float64] */;
  (%1087, %1088, %var_2842, %1089, %1090, %1091)
}

def @func_3021() -> Tensor[(10, 16, 14), float32] {
  %1092 = cast(meta[relay.Constant][39] /* ty=Tensor[(10, 16, 14), float32] */, dtype="float32") /* ty=Tensor[(10, 16, 14), float32] */;
  tan(%1092) /* ty=Tensor[(10, 16, 14), float32] */
}

def @func_16810() -> (Tensor[(640), uint64], Tensor[(13, 9, 14), float32]) {
  %1093 = @func_15406() /* ty=(Tensor[(338), bool], Tensor[(13, 9, 14), float32]) */;
  %1094 = @func_3318() /* ty=Tensor[(640), uint64] */;
  %1095 = %1093.1;
  (%1094, %1095)
}

def @func_10929() -> (Tensor[(13, 13, 2), int64],) {
  %1096 = @func_3557() /* ty=(Tensor[(13, 13, 2), int64],) */;
  %1097 = %1096.0;
  (%1097,)
}

def @func_3183() -> Tensor[(13, 9, 14), float32] {
  %1098 = @func_2178() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %1098.0
}

def @func_17246() -> (Tensor[(13, 9, 14), float64], Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) {
  %1099 = @func_1459() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float64]) */;
  %1100 = @func_7609() /* ty=(Tensor[(13, 13, 2), int64],) */;
  %1101 = @func_9586() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %1102 = %1099.1;
  %1103 = %1100.0;
  %1104 = %1101.0;
  (%1102, %1103, %1104)
}

def @func_18248() -> (Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %1105 = @func_15659() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(13, 13, 2), int64]) */;
  %1106 = @func_12055() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64], Tensor[(13, 9, 14), float32]) */;
  %1107 = %1105.0;
  %1108 = @func_17500() /* ty=Tensor[(13, 9, 14), float32] */;
  %1109 = %1106.0;
  (%1107, %1108, %1109)
}

def @func_10236() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) {
  %1110 = @func_4065() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %1111 = @func_3600() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) */;
  %1112 = @func_7609() /* ty=(Tensor[(13, 13, 2), int64],) */;
  %1113 = %1110.0;
  %1114 = %1111.1;
  %1115 = %1112.0;
  %1116 = @func_601() /* ty=Tensor[(13, 9, 14), float32] */;
  (%1113, %1114, %1115, %1116)
}

def @func_18950() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(338, 640), float64]) {
  %1117 = cast(meta[relay.Constant][40] /* ty=Tensor[(338, 1), int64] */, dtype="int64") /* ty=Tensor[(338, 1), int64] */;
  %1118 = reshape(%1117, newshape=[13, 26]) /* ty=Tensor[(13, 26), int64] */;
  %1119 = @func_4575(%1118) /* ty=(Tensor[(16, 8, 5), uint64], Tensor[(16, 8, 5), uint64], Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 26), bool], Tensor[(16, 8, 5), uint64]) */;
  %1120 = @func_13369() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %1121 = @func_5413() /* ty=(Tensor[(338), float64], Tensor[(13, 9, 14), float32], Tensor[(640), uint64]) */;
  %1122 = %1121.2;
  %1123 = cast(meta[relay.Constant][40] /* ty=Tensor[(338, 1), int64] */, dtype="float64") /* ty=Tensor[(338, 1), float64] */;
  %1124 = cast(%1122, dtype="float64") /* ty=Tensor[(640), float64] */;
  %1125 = %1119.3;
  %1126 = @func_11146() /* ty=Tensor[(13, 9, 14), float32] */;
  %1127 = %1120.0;
  %1128 = divide(%1123, %1124) /* ty=Tensor[(338, 640), float64] */;
  (%1125, %1126, %1127, %1128)
}

def @func_9378(%var_9357: Tensor[(3, 3, 1), uint8], %var_9358: Tensor[(3, 3, 14), uint8], %var_9370: Tensor[(338), int64]) -> (Tensor[(3, 3, 14), float32], Tensor[(338), bool], Tensor[(338), int64]) {
  %1129 = cast(%var_9357, dtype="uint8") /* ty=Tensor[(3, 3, 1), uint8] */;
  %1130 = cast(%var_9358, dtype="uint8") /* ty=Tensor[(3, 3, 14), uint8] */;
  %1131 = maximum(%1129, %1130) /* ty=Tensor[(3, 3, 14), uint8] */;
  %1132 = cast(%1131, dtype="float32") /* ty=Tensor[(3, 3, 14), float32] */;
  %1133 = cast(%var_9370, dtype="int64") /* ty=Tensor[(338), int64] */;
  %1134 = reshape(%1133, newshape=[338]) /* ty=Tensor[(338), int64] */;
  %1135 = @func_5295(%1134) /* ty=(Tensor[(13, 9, 14), float32], Tensor[(338), bool]) */;
  %1136 = cosh(%1132) /* ty=Tensor[(3, 3, 14), float32] */;
  %1137 = %1135.1;
  (%1136, %1137, %var_9370)
}

def @func_9930() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %1138 = @func_2535() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(640), uint64], Tensor[(13, 13, 2), int64]) */;
  %1139 = @func_8605() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %1140 = %1138.0;
  %1141 = %1139.2;
  (%1140, %1141)
}

def @func_12634(%var_12619: Tensor[(2400), uint32]) -> (Tensor[(13, 13, 2), int64], Tensor[(338), float64], Tensor[(13, 9, 14), int16], Tensor[(640), uint64], Tensor[(2400), uint32]) {
  %1142 = @func_6569() /* ty=(Tensor[(13, 13, 2), int64],) */;
  %1143 = %1142.0;
  %1144 = cast(%1143, dtype="float32") /* ty=Tensor[(13, 13, 2), float32] */;
  %1145 = cast(%1143, dtype="uint16") /* ty=Tensor[(13, 13, 2), uint16] */;
  %1146 = reshape(%1144, newshape=[338]) /* ty=Tensor[(338), float32] */;
  %1147 = reshape(%1145, newshape=[338]) /* ty=Tensor[(338), uint16] */;
  %1148 = @func_5864(%1146, %1147) /* ty=(Tensor[(338), int32], Tensor[(338), int64], Tensor[(338), float64]) */;
  %1149 = @func_5554() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), int16]) */;
  %1150 = cast(%var_12619, dtype="uint32") /* ty=Tensor[(2400), uint32] */;
  %1151 = cast(%var_12619, dtype="uint32") /* ty=Tensor[(2400), uint32] */;
  %1152 = reshape(%1150, newshape=[16, 10, 15]) /* ty=Tensor[(16, 10, 15), uint32] */;
  %1153 = reshape(%1151, newshape=[16, 10, 15]) /* ty=Tensor[(16, 10, 15), uint32] */;
  %1154 = @func_6303(%1152, %1153) /* ty=(Tensor[(16, 10, 15), uint32], Tensor[(13, 9, 14), float32], Tensor[(1638), float32], Tensor[(640), uint64], Tensor[(640), uint64], Tensor[(13, 9, 14), float32]) */;
  %1155 = %1148.2;
  %1156 = %1149.1;
  %1157 = %1154.3;
  (%1143, %1155, %1156, %1157, %var_12619)
}

def @func_5477(%var_5468: Tensor[(13, 26), int64]) -> (Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(13, 26), int64], Tensor[(924), float64]) {
  %1158 = @func_5049() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %1159 = cast(%var_5468, dtype="int64") /* ty=Tensor[(13, 26), int64] */;
  %1160 = cast(meta[relay.Constant][41] /* ty=Tensor[(924), float64] */, dtype="float64") /* ty=Tensor[(924), float64] */;
  %1161 = cast(meta[relay.Constant][41] /* ty=Tensor[(924), float64] */, dtype="float64") /* ty=Tensor[(924), float64] */;
  %1162 = reshape(%1159, newshape=[338]) /* ty=Tensor[(338), int64] */;
  %1163 = reshape(%1160, newshape=[154, 6]) /* ty=Tensor[(154, 6), float64] */;
  %1164 = reshape(%1161, newshape=[154, 6]) /* ty=Tensor[(154, 6), float64] */;
  %1165 = @func_2865(%1162, %1163, %1164) /* ty=(Tensor[(16, 8, 5), uint64], Tensor[(13, 13, 2), int64], Tensor[(338), int64], Tensor[(11, 12, 7), float32], Tensor[(13, 9, 14), float32], Tensor[(154, 6), float64]) */;
  %1166 = %1158.1;
  %1167 = %1165.1;
  (%1166, %1167, %var_5468, meta[relay.Constant][41] /* ty=Tensor[(924), float64] */)
}

def @func_14806() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) {
  %1168 = @func_5967() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %1169 = @func_7377() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) */;
  %1170 = @func_10793() /* ty=(Tensor[(13, 13, 2), int64],) */;
  %1171 = %1168.0;
  %1172 = %1169.1;
  %1173 = %1170.0;
  %1174 = @func_9705() /* ty=Tensor[(13, 9, 14), float32] */;
  (%1171, %1172, %1173, %1174)
}

def @func_9705() -> Tensor[(13, 9, 14), float32] {
  @func_9124() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_3600() -> (Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) {
  %1175 = @func_1906() /* ty=(Tensor[(13, 13, 2), int64],) */;
  %1176 = %1175.0;
  %1177 = @func_3219() /* ty=Tensor[(13, 9, 14), float32] */;
  (%1176, %1177)
}

def @func_19883() -> (Tensor[(13, 9, 14), float32], Tensor[(9, 6, 7), float32], Tensor[(378), float32], Tensor[(26, 13), int64]) {
  %1178 = @func_4902() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %1179 = cast(meta[relay.Constant][42] /* ty=Tensor[(378), float32] */, dtype="float32") /* ty=Tensor[(378), float32] */;
  %1180 = cast(meta[relay.Constant][42] /* ty=Tensor[(378), float32] */, dtype="float32") /* ty=Tensor[(378), float32] */;
  %1181 = cast(meta[relay.Constant][43] /* ty=Tensor[(26, 13), int64] */, dtype="int64") /* ty=Tensor[(26, 13), int64] */;
  %1182 = reshape(%1179, newshape=[9, 6, 7]) /* ty=Tensor[(9, 6, 7), float32] */;
  %1183 = reshape(%1180, newshape=[9, 6, 7]) /* ty=Tensor[(9, 6, 7), float32] */;
  %1184 = reshape(%1181, newshape=[338, 1]) /* ty=Tensor[(338, 1), int64] */;
  %1185 = @func_6676(%1182, %1183, %1184) /* ty=(Tensor[(9, 6, 7), float32], Tensor[(13, 13, 2), bool], Tensor[(338, 1), int64]) */;
  %1186 = %1178.0;
  %1187 = %1185.0;
  (%1186, %1187, meta[relay.Constant][42] /* ty=Tensor[(378), float32] */, meta[relay.Constant][43] /* ty=Tensor[(26, 13), int64] */)
}

def @func_14206() -> Tensor[(10, 16, 14), float32] {
  @func_4701() /* ty=Tensor[(10, 16, 14), float32] */
}

def @func_14190() -> (Tensor[(13, 9, 14), float32],) {
  %1188 = @func_7219() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %1189 = %1188.3;
  (%1189,)
}

def @func_19722() -> (Tensor[(13, 9, 14), float32], Tensor[(20, 32), uint64], Tensor[(16, 8, 5), uint64], Tensor[(13, 13, 2), int64]) {
  %1190 = @func_9669() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64], Tensor[(20, 32), uint64], Tensor[(13, 9, 14), float32]) */;
  %1191 = @func_16076() /* ty=(Tensor[(13, 9, 14), float64], Tensor[(16, 8, 5), uint64]) */;
  %1192 = @func_8749() /* ty=Tensor[(13, 9, 14), float32] */;
  %1193 = %1190.3;
  %1194 = %1191.1;
  %1195 = @func_17000() /* ty=Tensor[(13, 13, 2), int64] */;
  (%1192, %1193, %1194, %1195)
}

def @func_10594(%var_10589: Tensor[(13, 1, 7), float64]) -> (Tensor[(13, 1, 7), float64], Tensor[(13, 9, 14), float32]) {
  %1196 = cast(%var_10589, dtype="float64") /* ty=Tensor[(13, 1, 7), float64] */;
  %1197 = @func_1404() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(338), int64]) */;
  %1198 = log2(%1196) /* ty=Tensor[(13, 1, 7), float64] */;
  %1199 = %1197.1;
  (%1198, %1199)
}

def @func_7219() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %1200 = @func_5610() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %1201 = @func_6235() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %1202 = @func_5610() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %1203 = %1200.1;
  %1204 = %1201.0;
  %1205 = @func_601() /* ty=Tensor[(13, 9, 14), float32] */;
  %1206 = %1202.1;
  (%1203, %1204, %1205, %1206)
}

def @func_13759() -> (Tensor[(13, 13, 2), int64], Tensor[(9, 14, 9), float32]) {
  %1207 = @func_10929() /* ty=(Tensor[(13, 13, 2), int64],) */;
  %1208 = @func_12801() /* ty=Tensor[(9, 14, 9), float64] */;
  %1209 = cast(%1208, dtype="float32") /* ty=Tensor[(9, 14, 9), float32] */;
  %1210 = %1207.0;
  %1211 = acos(%1209) /* ty=Tensor[(9, 14, 9), float32] */;
  (%1210, %1211)
}

def @func_20352() -> (Tensor[(13, 9, 14), float32], Tensor[(338), int64], Tensor[(338), int64], Tensor[(10, 16, 14), float32], Tensor[(13, 9, 14), float32]) {
  %1212 = @func_6235() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %1213 = cast(meta[relay.Constant][44] /* ty=Tensor[(338), int64] */, dtype="int64") /* ty=Tensor[(338), int64] */;
  %1214 = reshape(%1213, newshape=[338]) /* ty=Tensor[(338), int64] */;
  %1215 = @func_9412(%1214) /* ty=(Tensor[(13, 9, 14), float32], Tensor[(338, 1), int64], Tensor[(378), float32], Tensor[(338), int64]) */;
  %1216 = @func_5336() /* ty=(Tensor[(10, 16, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %1217 = %1212.0;
  %1218 = %1215.3;
  %1219 = %1216.0;
  %1220 = @func_19479() /* ty=Tensor[(13, 9, 14), float32] */;
  (%1217, %1218, meta[relay.Constant][44] /* ty=Tensor[(338), int64] */, %1219, %1220)
}

def @func_8103() -> (Tensor[(13, 9, 14), float32],) {
  %1221 = @func_4044() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %1222 = %1221.1;
  (%1222,)
}

def @func_17274(%var_17264: Tensor[(16, 11, 12), int16]) -> (Tensor[(16, 11, 12), uint64],) {
  %1223 = cast(meta[relay.Constant][45] /* ty=Tensor[(16, 11, 12), int16] */, dtype="bool") /* ty=Tensor[(16, 11, 12), bool] */;
  %1224 = shape_of(%var_17264, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1225 = cast(%var_17264, dtype="bool") /* ty=Tensor[(16, 11, 12), bool] */;
  %1226 = dyn.reshape(%1223, %1224, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1227 = less(%1225, %1226) /* ty=Tensor[(16, 11, 12), bool] */;
  %1228 = cast(%var_17264, dtype="uint64") /* ty=Tensor[(16, 11, 12), uint64] */;
  %1229 = shape_of(%1227, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1230 = cast(%1227, dtype="uint64") /* ty=Tensor[(16, 11, 12), uint64] */;
  %1231 = dyn.reshape(%1228, %1229, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1232 = bitwise_xor(%1230, %1231) /* ty=Tensor[(16, 11, 12), uint64] */;
  (%1232,)
}

def @func_10466() -> (Tensor[(13, 9, 14), float32],) {
  %1233 = @func_6235() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %1234 = %1233.0;
  (%1234,)
}

def @func_7675() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %1235 = @func_3219() /* ty=Tensor[(13, 9, 14), float32] */;
  %1236 = @func_4257() /* ty=Tensor[(13, 9, 14), float32] */;
  (%1235, %1236)
}

def @func_10793() -> (Tensor[(13, 13, 2), int64],) {
  %1237 = @func_8762() /* ty=(Tensor[(13, 13, 2), int64],) */;
  %1238 = %1237.0;
  (%1238,)
}

def @func_2812() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64]) {
  %1239 = @func_1459() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float64]) */;
  %1240 = @func_601() /* ty=Tensor[(13, 9, 14), float32] */;
  %1241 = %1239.0;
  (%1240, %1241)
}

def @func_2248() -> Tensor[(16, 8, 5), uint64] {
  %1242 = @func_1724() /* ty=(Tensor[(16, 8, 5), uint64],) */;
  %1242.0
}

def @func_10709(%var_10707: Tensor[(702), float32]) -> (Tensor[(338), int64], Tensor[(338), float32], Tensor[(9, 6, 13), float32], Tensor[(702), float32]) {
  %1243 = @func_5492() /* ty=(Tensor[(338), int64],) */;
  %1244 = @func_3408() /* ty=(Tensor[(338), float32],) */;
  %1245 = cast(%var_10707, dtype="float32") /* ty=Tensor[(702), float32] */;
  %1246 = reshape(%1245, newshape=[9, 6, 13]) /* ty=Tensor[(9, 6, 13), float32] */;
  %1247 = @func_8864(%1246) /* ty=(Tensor[(9, 6, 13), float32],) */;
  %1248 = %1243.0;
  %1249 = %1244.0;
  %1250 = %1247.0;
  (%1248, %1249, %1250, %var_10707)
}

def @func_12338() -> (Tensor[(13, 9, 14), float32],) {
  %1251 = @func_11146() /* ty=Tensor[(13, 9, 14), float32] */;
  (%1251,)
}

def @func_2785(%var_2768: Tensor[(22, 2), float32]) -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(11, 2, 2), float32], Tensor[(22, 2), float32], Tensor[(13, 9, 14), float64]) {
  %1252 = cast(%var_2768, dtype="float32") /* ty=Tensor[(22, 2), float32] */;
  %1253 = reshape(%1252, newshape=[11, 2, 2]) /* ty=Tensor[(11, 2, 2), float32] */;
  %1254 = @func_891() /* ty=Tensor[(13, 9, 14), float32] */;
  %1255 = cast(%1254, dtype="float64") /* ty=Tensor[(13, 9, 14), float64] */;
  %1256 = cos(%1255) /* ty=Tensor[(13, 9, 14), float64] */;
  %1257 = cast(%1256, dtype="float64") /* ty=Tensor[(13, 9, 14), float64] */;
  %1258 = @func_891() /* ty=Tensor[(13, 9, 14), float32] */;
  %1259 = @func_891() /* ty=Tensor[(13, 9, 14), float32] */;
  %1260 = @func_2357(%1253) /* ty=Tensor[(11, 2, 2), float32] */;
  %1261 = tan(%1257) /* ty=Tensor[(13, 9, 14), float64] */;
  (%1258, %1259, %1260, %var_2768, %1261)
}

def @func_15866() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), bool]) {
  %1262 = @func_1906() /* ty=(Tensor[(13, 13, 2), int64],) */;
  %1263 = @func_15406() /* ty=(Tensor[(338), bool], Tensor[(13, 9, 14), float32]) */;
  %1264 = %1262.0;
  %1265 = cast(%1264, dtype="int64") /* ty=Tensor[(13, 13, 2), int64] */;
  %1266 = reshape(%1265, newshape=[13, 13, 2]) /* ty=Tensor[(13, 13, 2), int64] */;
  %1267 = @func_9705() /* ty=Tensor[(13, 9, 14), float32] */;
  %1268 = %1263.1;
  %1269 = @func_4929(%1266) /* ty=Tensor[(13, 13, 2), bool] */;
  (%1267, %1264, %1268, %1269)
}

def @func_12318() -> Tensor[(13, 9, 14), float32] {
  @func_3183() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_13279() -> Tensor[(338), int64] {
  %1270 = @func_680() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(338), int64]) */;
  %1270.2
}

def @func_8345(%var_8339: Tensor[(13, 26), int64]) -> (Tensor[(16, 8, 5), uint64], Tensor[(13, 13, 2), int64], Tensor[(13, 13, 2), int64], Tensor[(13, 26), float64]) {
  %1271 = @func_4446() /* ty=(Tensor[(10, 16, 14), float32], Tensor[(13, 9, 14), uint32], Tensor[(1638), float32], Tensor[(16, 8, 5), uint64]) */;
  %1272 = cast(meta[relay.Constant][46] /* ty=Tensor[(13, 26), int64] */, dtype="int64") /* ty=Tensor[(13, 26), int64] */;
  %1273 = reshape(%1272, newshape=[13, 26]) /* ty=Tensor[(13, 26), int64] */;
  %1274 = @func_4575(%1273) /* ty=(Tensor[(16, 8, 5), uint64], Tensor[(16, 8, 5), uint64], Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 26), bool], Tensor[(16, 8, 5), uint64]) */;
  %1275 = cast(%var_8339, dtype="float64") /* ty=Tensor[(13, 26), float64] */;
  %1276 = shape_of(meta[relay.Constant][46] /* ty=Tensor[(13, 26), int64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1277 = cast(meta[relay.Constant][46] /* ty=Tensor[(13, 26), int64] */, dtype="float64") /* ty=Tensor[(13, 26), float64] */;
  %1278 = dyn.reshape(%1275, %1276, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %1279 = %1271.3;
  %1280 = %1274.2;
  %1281 = @func_5074() /* ty=Tensor[(13, 13, 2), int64] */;
  %1282 = add(%1277, %1278) /* ty=Tensor[(13, 26), float64] */;
  (%1279, %1280, %1281, %1282)
}

def @func_19794() -> (Tensor[(10, 16, 14), float32],) {
  %1283 = @func_14206() /* ty=Tensor[(10, 16, 14), float32] */;
  (%1283,)
}

def @func_3161(%var_3153: Tensor[(13, 9, 14), float32]) -> Tensor[(13, 9, 14), uint8] {
  %1284 = @func_2401() /* ty=Tensor[(13, 9, 14), float32] */;
  %1285 = cast(%var_3153, dtype="uint8") /* ty=Tensor[(13, 9, 14), uint8] */;
  %1286 = shape_of(%1284, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1287 = cast(%1284, dtype="uint8") /* ty=Tensor[(13, 9, 14), uint8] */;
  %1288 = dyn.reshape(%1285, %1286, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  right_shift(%1287, %1288) /* ty=Tensor[(13, 9, 14), uint8] */
}

def @func_13100() -> (Tensor[(13, 13, 2), int64], Tensor[(13, 13, 2), int64]) {
  %1289 = @func_8605() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %1290 = @func_1906() /* ty=(Tensor[(13, 13, 2), int64],) */;
  %1291 = %1289.0;
  %1292 = %1290.0;
  (%1291, %1292)
}

def @func_16529() -> (Tensor[(13, 9, 14), float32],) {
  %1293 = @func_9586() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %1294 = %1293.1;
  (%1294,)
}

def @func_2653() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %1295 = @func_968() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %1296 = @func_1944() /* ty=Tensor[(13, 9, 14), float32] */;
  %1297 = %1295.1;
  %1298 = @func_616() /* ty=Tensor[(13, 9, 14), float32] */;
  (%1296, %1297, %1298)
}

def @func_11146() -> Tensor[(13, 9, 14), float32] {
  %1299 = @func_6410() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %1299.0
}

def @func_5610() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %1300 = @func_4065() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %1301 = @func_601() /* ty=Tensor[(13, 9, 14), float32] */;
  %1302 = %1300.0;
  (%1301, %1302)
}

def @func_15406() -> (Tensor[(338), bool], Tensor[(13, 9, 14), float32]) {
  %1303 = @func_11532() /* ty=(Tensor[(338), bool],) */;
  %1304 = %1303.0;
  %1305 = @func_2401() /* ty=Tensor[(13, 9, 14), float32] */;
  (%1304, %1305)
}

def @func_16146() -> (Tensor[(7, 5, 15), float64],) {
  %1306 = @func_11695() /* ty=Tensor[(7, 5, 15), float64] */;
  (%1306,)
}

def @func_13955() -> (Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64]) {
  %1307 = @func_6569() /* ty=(Tensor[(13, 13, 2), int64],) */;
  %1308 = @func_13557() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %1309 = @func_3744() /* ty=(Tensor[(13, 13, 2), int64],) */;
  %1310 = %1307.0;
  %1311 = %1308.0;
  %1312 = %1309.0;
  (%1310, %1311, %1312)
}

def @func_20643() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(13, 13, 2), int64], Tensor[(338), float32], Tensor[(13, 9, 14), int16], Tensor[(16, 8, 5), uint64]) {
  %1313 = @func_3408() /* ty=(Tensor[(338), float32],) */;
  %1314 = @func_5554() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), int16]) */;
  %1315 = @func_1338() /* ty=Tensor[(13, 9, 14), float32] */;
  %1316 = @func_5074() /* ty=Tensor[(13, 13, 2), int64] */;
  %1317 = @func_17000() /* ty=Tensor[(13, 13, 2), int64] */;
  %1318 = %1313.0;
  %1319 = %1314.1;
  %1320 = @func_2248() /* ty=Tensor[(16, 8, 5), uint64] */;
  (%1315, %1316, %1317, %1318, %1319, %1320)
}

def @func_5889() -> (Tensor[(16, 8, 5), uint64], Tensor[(13, 9, 14), float32]) {
  %1321 = @func_4446() /* ty=(Tensor[(10, 16, 14), float32], Tensor[(13, 9, 14), uint32], Tensor[(1638), float32], Tensor[(16, 8, 5), uint64]) */;
  %1322 = @func_4760() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %1323 = %1321.3;
  %1324 = %1322.3;
  (%1323, %1324)
}

def @func_19329() -> Tensor[(13, 9, 14), float32] {
  %1325 = @func_11192() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %1325.0
}

def @func_13557() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %1326 = @func_1404() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(338), int64]) */;
  %1327 = %1326.2;
  %1328 = @func_11146() /* ty=Tensor[(13, 9, 14), float32] */;
  (%1327, %1328)
}

def @func_10681() -> (Tensor[(10, 16, 14), float32],) {
  %1329 = @func_5336() /* ty=(Tensor[(10, 16, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %1330 = %1329.0;
  (%1330,)
}

def @func_8723() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float64], Tensor[(13, 9, 14), float32]) {
  %1331 = @func_1459() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float64]) */;
  %1332 = @func_601() /* ty=Tensor[(13, 9, 14), float32] */;
  %1333 = %1331.1;
  %1334 = @func_3183() /* ty=Tensor[(13, 9, 14), float32] */;
  (%1332, %1333, %1334)
}

def @func_6676(%var_6657: Tensor[(9, 6, 7), float32], %var_6658: Tensor[(9, 6, 7), float32], %var_6671: Tensor[(338, 1), int64]) -> (Tensor[(9, 6, 7), float32], Tensor[(13, 13, 2), bool], Tensor[(338, 1), int64]) {
  %1335 = cast(%var_6658, dtype="float32") /* ty=Tensor[(9, 6, 7), float32] */;
  %1336 = shape_of(%var_6657, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1337 = cast(%var_6657, dtype="float32") /* ty=Tensor[(9, 6, 7), float32] */;
  %1338 = dyn.reshape(%1335, %1336, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1339 = cast(%var_6671, dtype="int64") /* ty=Tensor[(338, 1), int64] */;
  %1340 = reshape(%1339, newshape=[13, 13, 2]) /* ty=Tensor[(13, 13, 2), int64] */;
  %1341 = mod(%1337, %1338) /* ty=Tensor[(9, 6, 7), float32] */;
  %1342 = @func_4929(%1340) /* ty=Tensor[(13, 13, 2), bool] */;
  (%1341, %1342, %var_6671)
}

def @func_13594(%var_13588: Tensor[(338), float32]) -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(338), float32]) {
  %1343 = @func_4065() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %1344 = cast(%var_13588, dtype="float32") /* ty=Tensor[(338), float32] */;
  %1345 = reshape(%1344, newshape=[338]) /* ty=Tensor[(338), float32] */;
  %1346 = @func_9803(%1345) /* ty=(Tensor[(338), bool], Tensor[(13, 9, 14), float32]) */;
  %1347 = %1343.0;
  %1348 = %1346.1;
  (%1347, %1348, %var_13588)
}

def @func_9485() -> (Tensor[(13, 13, 2), int64],) {
  %1349 = @func_5074() /* ty=Tensor[(13, 13, 2), int64] */;
  (%1349,)
}

def @func_18658() -> (Tensor[(10, 16, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(7, 5, 15), float64]) {
  %1350 = @func_5932() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %1351 = @func_16665() /* ty=(Tensor[(7, 5, 15), float64], Tensor[(338), float64], Tensor[(338), float32]) */;
  %1352 = @func_4701() /* ty=Tensor[(10, 16, 14), float32] */;
  %1353 = %1350.1;
  %1354 = %1351.0;
  (%1352, %1353, %1354)
}

def @func_10350() -> (Tensor[(11, 12, 7), float32], Tensor[(11, 4, 924), uint16]) {
  %1355 = cast(meta[relay.Constant][47] /* ty=Tensor[(924), float64] */, dtype="float64") /* ty=Tensor[(924), float64] */;
  %1356 = reshape(%1355, newshape=[11, 12, 7]) /* ty=Tensor[(11, 12, 7), float64] */;
  %1357 = @func_9180() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(11, 4, 1), float64], Tensor[(22, 2), float64], Tensor[(13, 9, 14), float32], Tensor[(2240), float32], Tensor[(338), int64]) */;
  %1358 = %1357.2;
  %1359 = cast(%1358, dtype="uint16") /* ty=Tensor[(11, 4, 1), uint16] */;
  %1360 = cast(meta[relay.Constant][47] /* ty=Tensor[(924), float64] */, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %1361 = @func_1291(%1356) /* ty=Tensor[(11, 12, 7), float32] */;
  %1362 = subtract(%1359, %1360) /* ty=Tensor[(11, 4, 924), uint16] */;
  (%1361, %1362)
}

def @func_1338() -> Tensor[(13, 9, 14), float32] {
  @func_616() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_17348() -> (Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) {
  %1363 = @func_13759() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(9, 14, 9), float32]) */;
  %1364 = @func_2178() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %1365 = %1363.0;
  %1366 = %1364.0;
  (%1365, %1366)
}

def @func_15149() -> Tensor[(13, 9, 14), float32] {
  %1367 = @func_12575() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %1367.0
}

def @func_4862() -> Tensor[(13, 9, 14), float32] {
  %1368 = @func_4218() /* ty=Tensor[(13, 9, 14), float32] */;
  %1369 = cast(%1368, dtype="float32") /* ty=Tensor[(13, 9, 14), float32] */;
  acosh(%1369) /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_2079(%var_2039: Tensor[(640), uint64]) -> (Tensor[(13, 13, 2), int64], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64], Tensor[(13, 13, 2), int64]) {
  %1370 = @func_680() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(338), int64]) */;
  %1371 = cast(%var_2039, dtype="uint64") /* ty=Tensor[(640), uint64] */;
  %1372 = cast(%var_2039, dtype="uint64") /* ty=Tensor[(640), uint64] */;
  %1373 = reshape(%1371, newshape=[16, 8, 5]) /* ty=Tensor[(16, 8, 5), uint64] */;
  %1374 = reshape(%1372, newshape=[16, 8, 5]) /* ty=Tensor[(16, 8, 5), uint64] */;
  %1375 = @func_245(%1373, %1374) /* ty=(Tensor[(16, 8, 5), uint64],) */;
  %1376 = @func_1691() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), int16], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64]) */;
  %1377 = %1370.1;
  %1378 = %1375.0;
  %1379 = %1376.0;
  (%1377, %1378, %var_2039, %1379)
}

def @func_2401() -> Tensor[(13, 9, 14), float32] {
  @func_601() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_7283(%var_7243: Tensor[(8, 6, 12), float64], %var_7251: Tensor[(44), float32]) -> (Tensor[(13, 9, 14), float64], Tensor[(44), float32], Tensor[(8, 6, 12), bool]) {
  %1380 = cast(%var_7251, dtype="float32") /* ty=Tensor[(44), float32] */;
  %1381 = reshape(%1380, newshape=[22, 2]) /* ty=Tensor[(22, 2), float32] */;
  %1382 = @func_2785(%1381) /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(11, 2, 2), float32], Tensor[(22, 2), float32], Tensor[(13, 9, 14), float64]) */;
  %1383 = cast(%var_7243, dtype="float64") /* ty=Tensor[(8, 6, 12), float64] */;
  %1384 = tan(%1383) /* ty=Tensor[(8, 6, 12), float64] */;
  %1385 = cast(meta[relay.Constant][48] /* ty=Tensor[(8, 6, 12), float64] */, dtype="bool") /* ty=Tensor[(8, 6, 12), bool] */;
  %1386 = shape_of(%1384, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1387 = cast(%1384, dtype="bool") /* ty=Tensor[(8, 6, 12), bool] */;
  %1388 = dyn.reshape(%1385, %1386, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1389 = %1382.4;
  %1390 = greater_equal(%1387, %1388) /* ty=Tensor[(8, 6, 12), bool] */;
  (%1389, %var_7251, %1390)
}

def @func_9537() -> Tensor[(13, 13, 2), int64] {
  @func_5074() /* ty=Tensor[(13, 13, 2), int64] */
}

def @func_17087() -> (Tensor[(13, 9, 14), float32],) {
  %1391 = @func_14109() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %1392 = %1391.0;
  (%1392,)
}

def @func_11532() -> (Tensor[(338), bool],) {
  %1393 = @func_5203() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(11, 2, 2), uint8], Tensor[(13, 9, 14), int16], Tensor[(13, 9, 14), float32], Tensor[(338), int64]) */;
  %1394 = %1393.4;
  %1395 = cast(%1394, dtype="float64") /* ty=Tensor[(338), float64] */;
  %1396 = sqrt(%1395) /* ty=Tensor[(338), float64] */;
  %1397 = cast(meta[relay.Constant][49] /* ty=Tensor[(338), float64] */, dtype="bool") /* ty=Tensor[(338), bool] */;
  %1398 = shape_of(%1396, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1399 = cast(%1396, dtype="bool") /* ty=Tensor[(338), bool] */;
  %1400 = dyn.reshape(%1397, %1398, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1401 = equal(%1399, %1400) /* ty=Tensor[(338), bool] */;
  (%1401,)
}

def @func_9803(%var_9785: Tensor[(338), float32]) -> (Tensor[(338), bool], Tensor[(13, 9, 14), float32]) {
  %1402 = @func_7417() /* ty=Tensor[(338), float32] */;
  %1403 = cast(%var_9785, dtype="bool") /* ty=Tensor[(338), bool] */;
  %1404 = shape_of(%1402, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1405 = cast(%1402, dtype="bool") /* ty=Tensor[(338), bool] */;
  %1406 = dyn.reshape(%1403, %1404, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1407 = logical_or(%1405, %1406) /* ty=Tensor[(338), bool] */;
  %1408 = @func_6802() /* ty=Tensor[(13, 9, 14), float32] */;
  (%1407, %1408)
}

def @func_7377() -> (Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) {
  %1409 = @func_3557() /* ty=(Tensor[(13, 13, 2), int64],) */;
  %1410 = @func_5508() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %1411 = %1409.0;
  %1412 = %1410.0;
  (%1411, %1412)
}

def @func_9586() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %1413 = @func_7219() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %1414 = %1413.3;
  %1415 = @func_718() /* ty=Tensor[(13, 9, 14), float32] */;
  (%1414, %1415)
}

def @func_8578() -> (Tensor[(13, 9, 14), float32],) {
  %1416 = @func_4044() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %1417 = %1416.0;
  (%1417,)
}

def @func_14607() -> (Tensor[(10, 16, 14), float32],) {
  %1418 = @func_4701() /* ty=Tensor[(10, 16, 14), float32] */;
  (%1418,)
}

def @func_17198(%var_17195: Tensor[(338), bool], %var_17196: Tensor[(7392), float64]) -> (Tensor[(16, 8, 5), uint64], Tensor[(7392), float64], Tensor[(338), bool], Tensor[(7392), float64]) {
  %1419 = cast(%var_17195, dtype="bool") /* ty=Tensor[(338), bool] */;
  %1420 = cast(%var_17196, dtype="float64") /* ty=Tensor[(7392), float64] */;
  %1421 = reshape(%1419, newshape=[338]) /* ty=Tensor[(338), bool] */;
  %1422 = reshape(%1420, newshape=[7392]) /* ty=Tensor[(7392), float64] */;
  %1423 = @func_14923(%1421, %1422) /* ty=(Tensor[(13, 9, 14), float32], Tensor[(338), float64], Tensor[(8, 924), int8], Tensor[(7392), float64]) */;
  %1424 = @func_2248() /* ty=Tensor[(16, 8, 5), uint64] */;
  %1425 = %1423.3;
  (%1424, %1425, %var_17195, %var_17196)
}

def @func_17851() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64]) {
  %1426 = @func_14662() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), uint32]) */;
  %1427 = @func_12483() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(2240), float32], Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %1428 = %1426.0;
  %1429 = %1427.1;
  (%1428, %1429)
}

def @func_19202() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %1430 = @func_9343() /* ty=(Tensor[(13, 9, 14), int32], Tensor[(13, 9, 14), float32], Tensor[(924), float64]) */;
  %1431 = %1430.1;
  %1432 = @func_18104() /* ty=Tensor[(13, 9, 14), float32] */;
  (%1431, %1432)
}

def @func_7793() -> (Tensor[(13, 13, 2), int64],) {
  %1433 = @func_3744() /* ty=(Tensor[(13, 13, 2), int64],) */;
  %1434 = %1433.0;
  (%1434,)
}

def @func_12755() -> Tensor[(13, 9, 14), float32] {
  %1435 = @func_2812() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64]) */;
  %1435.0
}

def @func_8749() -> Tensor[(13, 9, 14), float32] {
  %1436 = @func_5610() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %1436.0
}

def @func_18992() -> Tensor[(13, 9, 14), float32] {
  %1437 = @func_17348() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) */;
  %1437.1
}

def @func_5554() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), int16]) {
  %1438 = @func_5360() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %1439 = @func_1691() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), int16], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64]) */;
  %1440 = %1438.1;
  %1441 = %1439.1;
  (%1440, %1441)
}

def @func_8219() -> (Tensor[(13, 9, 14), float32], Tensor[(338), int64]) {
  %1442 = @func_5492() /* ty=(Tensor[(338), int64],) */;
  %1443 = @func_3462() /* ty=Tensor[(13, 9, 14), float32] */;
  %1444 = %1442.0;
  (%1443, %1444)
}

def @func_16716() -> (Tensor[(13, 9, 14), float64], Tensor[(13, 9, 14), float32]) {
  %1445 = @func_16076() /* ty=(Tensor[(13, 9, 14), float64], Tensor[(16, 8, 5), uint64]) */;
  %1446 = %1445.0;
  %1447 = @func_11439() /* ty=Tensor[(13, 9, 14), float32] */;
  (%1446, %1447)
}

def @func_19687() -> Tensor[(13, 9, 14), float32] {
  @func_2401() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_14179(%var_14147: Tensor[(91), float64]) -> (Tensor[(13, 1, 7), float64], Tensor[(13, 9, 14), float32], Tensor[(14, 1, 91), float64]) {
  %1448 = cast(%var_14147, dtype="float64") /* ty=Tensor[(91), float64] */;
  %1449 = reshape(%1448, newshape=[13, 1, 7]) /* ty=Tensor[(13, 1, 7), float64] */;
  %1450 = @func_10594(%1449) /* ty=(Tensor[(13, 1, 7), float64], Tensor[(13, 9, 14), float32]) */;
  %1451 = @func_5729() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %1452 = cast(meta[relay.Constant][50] /* ty=Tensor[(14, 1, 1), float32] */, dtype="float32") /* ty=Tensor[(14, 1, 1), float32] */;
  %1453 = erf(%1452) /* ty=Tensor[(14, 1, 1), float32] */;
  %1454 = cast(%1453, dtype="float64") /* ty=Tensor[(14, 1, 1), float64] */;
  %1455 = cast(%var_14147, dtype="float64") /* ty=Tensor[(91), float64] */;
  %1456 = %1450.0;
  %1457 = %1451.0;
  %1458 = power(%1454, %1455) /* ty=Tensor[(14, 1, 91), float64] */;
  (%1456, %1457, %1458)
}

def @func_400(%var_394: Tensor[(13, 13, 2), int64], %var_395: Tensor[(13, 13, 2), int64]) -> Tensor[(13, 13, 2), int64] {
  %1459 = cast(%var_395, dtype="int64") /* ty=Tensor[(13, 13, 2), int64] */;
  %1460 = shape_of(%var_394, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1461 = cast(%var_394, dtype="int64") /* ty=Tensor[(13, 13, 2), int64] */;
  %1462 = dyn.reshape(%1459, %1460, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  multiply(%1461, %1462) /* ty=Tensor[(13, 13, 2), int64] */
}

def @func_3259(%var_3241: Tensor[(13, 9, 14), float32]) -> Tensor[(13, 9, 14), uint32] {
  %1463 = @func_1561() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %1464 = %1463.1;
  %1465 = cast(%var_3241, dtype="uint32") /* ty=Tensor[(13, 9, 14), uint32] */;
  %1466 = shape_of(%1464, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1467 = cast(%1464, dtype="uint32") /* ty=Tensor[(13, 9, 14), uint32] */;
  %1468 = dyn.reshape(%1465, %1466, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  logical_xor(%1467, %1468) /* ty=Tensor[(13, 9, 14), uint32] */
}

def @func_4929(%var_4912: Tensor[(13, 13, 2), int64]) -> Tensor[(13, 13, 2), bool] {
  %1469 = @func_3744() /* ty=(Tensor[(13, 13, 2), int64],) */;
  %1470 = %1469.0;
  %1471 = cast(%var_4912, dtype="bool") /* ty=Tensor[(13, 13, 2), bool] */;
  %1472 = shape_of(%1470, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1473 = cast(%1470, dtype="bool") /* ty=Tensor[(13, 13, 2), bool] */;
  %1474 = dyn.reshape(%1471, %1472, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%1473, %1474) /* ty=Tensor[(13, 13, 2), bool] */
}

def @func_6303(%var_6266: Tensor[(16, 10, 15), uint32], %var_6267: Tensor[(16, 10, 15), uint32]) -> (Tensor[(16, 10, 15), uint32], Tensor[(13, 9, 14), float32], Tensor[(1638), float32], Tensor[(640), uint64], Tensor[(640), uint64], Tensor[(13, 9, 14), float32]) {
  %1475 = cast(%var_6267, dtype="uint32") /* ty=Tensor[(16, 10, 15), uint32] */;
  %1476 = shape_of(%var_6266, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1477 = cast(%var_6266, dtype="uint32") /* ty=Tensor[(16, 10, 15), uint32] */;
  %1478 = dyn.reshape(%1475, %1476, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1479 = cast(meta[relay.Constant][51] /* ty=Tensor[(1638), float32] */, dtype="float32") /* ty=Tensor[(1638), float32] */;
  %1480 = reshape(%1479, newshape=[13, 9, 14]) /* ty=Tensor[(13, 9, 14), float32] */;
  %1481 = @func_1154(%1480) /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), uint16], Tensor[(13, 9, 14), float32]) */;
  %1482 = cast(meta[relay.Constant][52] /* ty=Tensor[(640), uint64] */, dtype="uint64") /* ty=Tensor[(640), uint64] */;
  %1483 = reshape(%1482, newshape=[640]) /* ty=Tensor[(640), uint64] */;
  %1484 = @func_1957(%1483) /* ty=(Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64]) */;
  %1485 = right_shift(%1477, %1478) /* ty=Tensor[(16, 10, 15), uint32] */;
  %1486 = %1481.2;
  %1487 = %1484.2;
  %1488 = @func_1338() /* ty=Tensor[(13, 9, 14), float32] */;
  (%1485, %1486, meta[relay.Constant][51] /* ty=Tensor[(1638), float32] */, %1487, meta[relay.Constant][52] /* ty=Tensor[(640), uint64] */, %1488)
}

def @func_14662() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), uint32]) {
  %1489 = @func_14109() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %1490 = @func_4446() /* ty=(Tensor[(10, 16, 14), float32], Tensor[(13, 9, 14), uint32], Tensor[(1638), float32], Tensor[(16, 8, 5), uint64]) */;
  %1491 = %1489.0;
  %1492 = %1490.1;
  (%1491, %1492)
}

def @func_7716() -> Tensor[(13, 9, 14), float32] {
  @func_1338() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_8864(%var_8855: Tensor[(9, 6, 13), float32]) -> (Tensor[(9, 6, 13), float32],) {
  %1493 = cast(%var_8855, dtype="float32") /* ty=Tensor[(9, 6, 13), float32] */;
  %1494 = asin(%1493) /* ty=Tensor[(9, 6, 13), float32] */;
  (%1494,)
}

def @func_1459() -> (Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float64]) {
  %1495 = @func_680() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(338), int64]) */;
  %1496 = @func_891() /* ty=Tensor[(13, 9, 14), float32] */;
  %1497 = cast(meta[relay.Constant][53] /* ty=Tensor[(13, 9, 14), float32] */, dtype="float64") /* ty=Tensor[(13, 9, 14), float64] */;
  %1498 = shape_of(%1496, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1499 = cast(%1496, dtype="float64") /* ty=Tensor[(13, 9, 14), float64] */;
  %1500 = dyn.reshape(%1497, %1498, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1501 = %1495.1;
  %1502 = mod(%1499, %1500) /* ty=Tensor[(13, 9, 14), float64] */;
  (%1501, %1502)
}

def @func_16621() -> Tensor[(13, 13, 2), int64] {
  @func_9537() /* ty=Tensor[(13, 13, 2), int64] */
}

def @func_13680() -> (Tensor[(13, 13, 2), int64],) {
  %1503 = @func_13578() /* ty=(Tensor[(13, 13, 2), int64],) */;
  %1504 = %1503.0;
  (%1504,)
}

def @func_18699() -> (Tensor[(13, 9, 14), float32],) {
  %1505 = @func_13557() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %1506 = %1505.0;
  (%1506,)
}

def @func_14494(%var_14485: Tensor[(338), float32]) -> (Tensor[(11, 12, 7), float64], Tensor[(338), int32], Tensor[(338), float32]) {
  %1507 = @func_10629() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(1, 924), float64], Tensor[(11, 12, 7), float64]) */;
  %1508 = cast(%var_14485, dtype="float32") /* ty=Tensor[(338), float32] */;
  %1509 = cast(%var_14485, dtype="uint16") /* ty=Tensor[(338), uint16] */;
  %1510 = reshape(%1508, newshape=[338]) /* ty=Tensor[(338), float32] */;
  %1511 = reshape(%1509, newshape=[338]) /* ty=Tensor[(338), uint16] */;
  %1512 = @func_5864(%1510, %1511) /* ty=(Tensor[(338), int32], Tensor[(338), int64], Tensor[(338), float64]) */;
  %1513 = %1507.2;
  %1514 = %1512.0;
  (%1513, %1514, %var_14485)
}

def @func_9046() -> (Tensor[(13, 9, 14), float32],) {
  %1515 = @func_7675() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %1516 = %1515.0;
  (%1516,)
}

def @func_11511() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %1517 = @func_8578() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %1518 = @func_5508() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %1519 = %1517.0;
  %1520 = %1518.0;
  %1521 = @func_7513() /* ty=Tensor[(13, 9, 14), float32] */;
  (%1519, %1520, %1521)
}

def @func_12314() -> Tensor[(338), int64] {
  %1522 = @func_5492() /* ty=(Tensor[(338), int64],) */;
  %1522.0
}

def @func_8022(%var_8013: Tensor[(11, 4, 1), float64]) -> (Tensor[(11, 4, 1), bool], Tensor[(11, 4, 1), float64]) {
  %1523 = cast(-4.10357f64 /* ty=float64 */, dtype="bool") /* ty=bool */;
  %1524 = cast(%var_8013, dtype="bool") /* ty=Tensor[(11, 4, 1), bool] */;
  %1525 = cast(%var_8013, dtype="float64") /* ty=Tensor[(11, 4, 1), float64] */;
  %1526 = greater(%1523, %1524) /* ty=Tensor[(11, 4, 1), bool] */;
  %1527 = sin(%1525) /* ty=Tensor[(11, 4, 1), float64] */;
  (%1526, %1527)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_16984() -> (Tensor[(13, 9, 14), float32],) {
  %0 = @func_12318() /* ty=Tensor[(13, 9, 14), float32] */;
  (%0,)
}

def @func_9378(%var_9357: Tensor[(3, 3, 1), uint8], %var_9358: Tensor[(3, 3, 14), uint8], %var_9370: Tensor[(338), int64]) -> (Tensor[(3, 3, 14), float32], Tensor[(338), bool], Tensor[(338), int64]) {
  %1 = cast(%var_9357, dtype="uint8") /* ty=Tensor[(3, 3, 1), uint8] */;
  %2 = cast(%var_9358, dtype="uint8") /* ty=Tensor[(3, 3, 14), uint8] */;
  %3 = maximum(%1, %2) /* ty=Tensor[(3, 3, 14), uint8] */;
  %4 = cast(%3, dtype="float32") /* ty=Tensor[(3, 3, 14), float32] */;
  %5 = cast(%var_9370, dtype="int64") /* ty=Tensor[(338), int64] */;
  %6 = reshape(%5, newshape=[338]) /* ty=Tensor[(338), int64] */;
  %7 = @func_5295(%6) /* ty=(Tensor[(13, 9, 14), float32], Tensor[(338), bool]) */;
  %8 = cosh(%4) /* ty=Tensor[(3, 3, 14), float32] */;
  %9 = %7.1;
  (%8, %9, %var_9370)
}

def @func_14589(%var_14587: Tensor[(924), uint16], %var_14588: Tensor[(1, 9), uint8]) -> (Tensor[(9, 14, 9), float32], Tensor[(924), uint16], Tensor[(1, 9), uint8], Tensor[(13, 9, 14), float32], Tensor[(11, 4, 1), float64], Tensor[(44), float64], Tensor[(126, ?), bool], Tensor[(13, 9, 14), float64], Tensor[(26, 13), int64], Tensor[(13, 9, 14), float32], Tensor[(338), float32]) {
  @func_14585(%var_14587, %var_14588) /* ty=(Tensor[(9, 14, 9), float32], Tensor[(924), uint16], Tensor[(1, 9), uint8], Tensor[(13, 9, 14), float32], Tensor[(11, 4, 1), float64], Tensor[(44), float64], Tensor[(126, ?), bool], Tensor[(13, 9, 14), float64], Tensor[(26, 13), int64], Tensor[(13, 9, 14), float32], Tensor[(338), float32]) */
}

def @func_7716() -> Tensor[(13, 9, 14), float32] {
  @func_1338() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_9587() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %13 = fn () -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
    %10 = @func_7219() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
    %11 = %10.3;
    %12 = @func_718() /* ty=Tensor[(13, 9, 14), float32] */;
    (%11, %12)
  };
  %13() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */
}

def @func_14453() -> Tensor[(2, 2, 14), float64] {
  %18 = fn () -> Tensor[(2, 2, 14), float64] {
    %14 = cast(meta[relay.Constant][1] /* ty=Tensor[(2, 2, 14), float64] */, dtype="float64") /* ty=Tensor[(2, 2, 14), float64] */;
    %15 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(2, 2, 14), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %16 = cast(meta[relay.Constant][0] /* ty=Tensor[(2, 2, 14), float64] */, dtype="float64") /* ty=Tensor[(2, 2, 14), float64] */;
    %17 = dyn.reshape(%14, %15, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    minimum(%16, %17) /* ty=Tensor[(2, 2, 14), float64] */
  };
  %18() /* ty=Tensor[(2, 2, 14), float64] */
}

def @func_11534() -> (Tensor[(338), bool],) {
  @func_11532() /* ty=(Tensor[(338), bool],) */
}

def @func_17501() -> Tensor[(13, 9, 14), float32] {
  %19 = fn () -> Tensor[(13, 9, 14), float32] {
    @func_15149() /* ty=Tensor[(13, 9, 14), float32] */
  };
  %19() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_17814(%var_17757: Tensor[(924, 5), float64], %var_17764: Tensor[(924, 4), float64]) -> (Tensor[(13, 13, 2), int64], Tensor[(16, 8, 5), uint64], Tensor[(924, 4), float64], Tensor[(924, 5), bool], Tensor[(13, 9, 14), float32], Tensor[(924, 5), int32], Tensor[(13, 9, 14), uint8], Tensor[(924, 5), int16]) {
  %20 = @func_12439() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64]) */;
  %21 = @func_1691() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), int16], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64]) */;
  %22 = @func_10280() /* ty=(Tensor[(924, ?), float64],) */;
  %23 = %22.0;
  %24 = cast(%23, dtype="float64") /* ty=Tensor[(924, ?), float64] */;
  %25 = cast(%var_17764, dtype="float64") /* ty=Tensor[(924, 4), float64] */;
  %26 = cast(%23, dtype="bool") /* ty=Tensor[(924, ?), bool] */;
  %27 = cast(%var_17757, dtype="bool") /* ty=Tensor[(924, 5), bool] */;
  %28 = logical_or(%26, %27) /* ty=Tensor[(924, 5), bool] */;
  %29 = cast(%28, dtype="bool") /* ty=Tensor[(924, 5), bool] */;
  %30 = cast(%23, dtype="bool") /* ty=Tensor[(924, ?), bool] */;
  %31 = @func_7675() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %32 = cast(%var_17757, dtype="float32") /* ty=Tensor[(924, 5), float32] */;
  %33 = atanh(%32) /* ty=Tensor[(924, 5), float32] */;
  %34 = cast(%28, dtype="int32") /* ty=Tensor[(924, 5), int32] */;
  %35 = shape_of(%33, dtype="int32") /* ty=Tensor[(2), int32] */;
  %36 = cast(%33, dtype="int32") /* ty=Tensor[(924, 5), int32] */;
  %37 = dyn.reshape(%34, %35, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %38 = %31.0;
  %39 = cast(%38, dtype="float32") /* ty=Tensor[(13, 9, 14), float32] */;
  %40 = reshape(%39, newshape=[13, 9, 14]) /* ty=Tensor[(13, 9, 14), float32] */;
  %41 = cast(%28, dtype="int16") /* ty=Tensor[(924, 5), int16] */;
  %42 = shape_of(%33, dtype="int32") /* ty=Tensor[(2), int32] */;
  %43 = cast(%33, dtype="int16") /* ty=Tensor[(924, 5), int16] */;
  %44 = dyn.reshape(%41, %42, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %45 = %20.1;
  %46 = %21.2;
  %47 = power(%24, %25) /* ty=Tensor[(924, 4), float64] */;
  %48 = less(%29, %30) /* ty=Tensor[(924, 5), bool] */;
  %49 = logical_xor(%36, %37) /* ty=Tensor[(924, 5), int32] */;
  %50 = @func_3161(%40) /* ty=Tensor[(13, 9, 14), uint8] */;
  %51 = subtract(%43, %44) /* ty=Tensor[(924, 5), int16] */;
  (%45, %46, %47, %48, %38, %49, %50, %51)
}

def @func_19553() -> (Tensor[(338), int64],) {
  @func_19551() /* ty=(Tensor[(338), int64],) */
}

def @func_15699() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %57 = fn () -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
    %52 = @func_4257() /* ty=Tensor[(13, 9, 14), float32] */;
    %53 = cast(%52, dtype="float32") /* ty=Tensor[(13, 9, 14), float32] */;
    %54 = reshape(%53, newshape=[13, 9, 14]) /* ty=Tensor[(13, 9, 14), float32] */;
    %55 = @func_7882(%54) /* ty=(Tensor[(13, 9, 14), bool], Tensor[(13, 9, 14), float32], Tensor[(640), uint64]) */;
    %56 = %55.1;
    (%52, %56)
  };
  %57() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */
}

def @func_9046() -> (Tensor[(13, 9, 14), float32],) {
  %58 = @func_7675() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %59 = %58.0;
  (%59,)
}

def @func_1957(%var_1952: Tensor[(640), uint64]) -> (Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64]) {
  %60 = @func_1404() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(338), int64]) */;
  %61 = cast(%var_1952, dtype="uint64") /* ty=Tensor[(640), uint64] */;
  %62 = cast(%var_1952, dtype="uint64") /* ty=Tensor[(640), uint64] */;
  %63 = reshape(%61, newshape=[16, 8, 5]) /* ty=Tensor[(16, 8, 5), uint64] */;
  %64 = reshape(%62, newshape=[16, 8, 5]) /* ty=Tensor[(16, 8, 5), uint64] */;
  %65 = @func_245(%63, %64) /* ty=(Tensor[(16, 8, 5), uint64],) */;
  %66 = %60.2;
  %67 = %65.0;
  (%66, %67, %var_1952)
}

def @func_6570() -> (Tensor[(13, 13, 2), int64],) {
  %70 = fn () -> (Tensor[(13, 13, 2), int64],) {
    %68 = @func_1459() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float64]) */;
    %69 = %68.0;
    (%69,)
  };
  %70() /* ty=(Tensor[(13, 13, 2), int64],) */
}

def @func_4929(%var_4912: Tensor[(13, 13, 2), int64]) -> Tensor[(13, 13, 2), bool] {
  %71 = @func_3744() /* ty=(Tensor[(13, 13, 2), int64],) */;
  %72 = %71.0;
  %73 = cast(%var_4912, dtype="bool") /* ty=Tensor[(13, 13, 2), bool] */;
  %74 = shape_of(%72, dtype="int32") /* ty=Tensor[(3), int32] */;
  %75 = cast(%72, dtype="bool") /* ty=Tensor[(13, 13, 2), bool] */;
  %76 = dyn.reshape(%73, %74, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%75, %76) /* ty=Tensor[(13, 13, 2), bool] */
}

def @func_8750() -> Tensor[(13, 9, 14), float32] {
  %78 = fn () -> Tensor[(13, 9, 14), float32] {
    %77 = @func_5610() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
    %77.0
  };
  %78() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_9295() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %79 = @func_8103() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %80 = @func_8071() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %81 = %79.0;
  %82 = %80.0;
  (%81, %82)
}

def @func_15502() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %87 = fn () -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
    %83 = @func_15406() /* ty=(Tensor[(338), bool], Tensor[(13, 9, 14), float32]) */;
    %84 = @func_11111() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64]) */;
    %85 = %83.1;
    %86 = %84.0;
    (%85, %86)
  };
  %87() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */
}

def @func_8607() -> (Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  @func_8605() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */
}

def @func_13240(%var_13238: Tensor[(8, 924), float64]) -> (Tensor[(8, 924), int8],) {
  @func_13237(%var_13238) /* ty=(Tensor[(8, 924), int8],) */
}

def @func_11848() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  @func_11846() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */
}

def @func_12300(%var_12281: Tensor[(338), int64]) -> (Tensor[(11, 12, 7), float64], Tensor[(338), float32]) {
  %88 = @func_10629() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(1, 924), float64], Tensor[(11, 12, 7), float64]) */;
  %89 = cast(%var_12281, dtype="int64") /* ty=Tensor[(338), int64] */;
  %90 = reshape(%89, newshape=[338]) /* ty=Tensor[(338), int64] */;
  %91 = @func_5295(%90) /* ty=(Tensor[(13, 9, 14), float32], Tensor[(338), bool]) */;
  %92 = %91.1;
  %93 = cast(%var_12281, dtype="float32") /* ty=Tensor[(338), float32] */;
  %94 = shape_of(%92, dtype="int32") /* ty=Tensor[(1), int32] */;
  %95 = cast(%92, dtype="float32") /* ty=Tensor[(338), float32] */;
  %96 = dyn.reshape(%93, %94, newshape=[]) /* ty=Tensor[(?), float32] */;
  %97 = %88.2;
  %98 = multiply(%95, %96) /* ty=Tensor[(338), float32] */;
  (%97, %98)
}

def @func_15805() -> (Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) {
  @func_15803() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) */
}

def @func_4863() -> Tensor[(13, 9, 14), float32] {
  %101 = fn () -> Tensor[(13, 9, 14), float32] {
    %99 = @func_4218() /* ty=Tensor[(13, 9, 14), float32] */;
    %100 = cast(%99, dtype="float32") /* ty=Tensor[(13, 9, 14), float32] */;
    acosh(%100) /* ty=Tensor[(13, 9, 14), float32] */
  };
  %101() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_3022() -> Tensor[(10, 16, 14), float32] {
  %103 = fn () -> Tensor[(10, 16, 14), float32] {
    %102 = cast(meta[relay.Constant][2] /* ty=Tensor[(10, 16, 14), float32] */, dtype="float32") /* ty=Tensor[(10, 16, 14), float32] */;
    tan(%102) /* ty=Tensor[(10, 16, 14), float32] */
  };
  %103() /* ty=Tensor[(10, 16, 14), float32] */
}

def @func_18952() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(338, 640), float64]) {
  @func_18950() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(338, 640), float64]) */
}

def @func_18660() -> (Tensor[(10, 16, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(7, 5, 15), float64]) {
  @func_18658() /* ty=(Tensor[(10, 16, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(7, 5, 15), float64]) */
}

def @func_19490() -> (Tensor[(13, 9, 14), float32],) {
  @func_19488() /* ty=(Tensor[(13, 9, 14), float32],) */
}

def @func_7090() -> (Tensor[(13, 13, 2), int64], Tensor[(10, 16, 14), float32]) {
  %104 = @func_3987() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float64], Tensor[(13, 13, 2), int64]) */;
  %105 = @func_4446() /* ty=(Tensor[(10, 16, 14), float32], Tensor[(13, 9, 14), uint32], Tensor[(1638), float32], Tensor[(16, 8, 5), uint64]) */;
  %106 = %104.2;
  %107 = %105.0;
  (%106, %107)
}

def @func_18681() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  @func_18679() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */
}

def @func_15408() -> (Tensor[(338), bool], Tensor[(13, 9, 14), float32]) {
  @func_15406() /* ty=(Tensor[(338), bool], Tensor[(13, 9, 14), float32]) */
}

def @func_10929() -> (Tensor[(13, 13, 2), int64],) {
  %108 = @func_3557() /* ty=(Tensor[(13, 13, 2), int64],) */;
  %109 = %108.0;
  (%109,)
}

def @func_5510() -> (Tensor[(13, 9, 14), float32],) {
  @func_5508() /* ty=(Tensor[(13, 9, 14), float32],) */
}

def @func_12577() -> (Tensor[(13, 9, 14), float32],) {
  @func_12575() /* ty=(Tensor[(13, 9, 14), float32],) */
}

def @func_8103() -> (Tensor[(13, 9, 14), float32],) {
  %110 = @func_4044() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %111 = %110.1;
  (%111,)
}

def @func_3856() -> (Tensor[(16, 8, 5), uint64], Tensor[(13, 9, 14), float64], Tensor[(13, 9, 14), float64]) {
  %120 = fn () -> (Tensor[(16, 8, 5), uint64], Tensor[(13, 9, 14), float64], Tensor[(13, 9, 14), float64]) {
    %112 = @func_1724() /* ty=(Tensor[(16, 8, 5), uint64],) */;
    %113 = @func_2243() /* ty=(Tensor[(13, 9, 14), float64],) */;
    %114 = %113.0;
    %115 = cast(%114, dtype="float64") /* ty=Tensor[(13, 9, 14), float64] */;
    %116 = @func_3096() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float64], Tensor[(1638), float32], Tensor[(13, 9, 14), float32]) */;
    %117 = %112.0;
    %118 = sinh(%115) /* ty=Tensor[(13, 9, 14), float64] */;
    %119 = %116.1;
    (%117, %118, %119)
  };
  %120() /* ty=(Tensor[(16, 8, 5), uint64], Tensor[(13, 9, 14), float64], Tensor[(13, 9, 14), float64]) */
}

def @func_5891() -> (Tensor[(16, 8, 5), uint64], Tensor[(13, 9, 14), float32]) {
  @func_5889() /* ty=(Tensor[(16, 8, 5), uint64], Tensor[(13, 9, 14), float32]) */
}

def @func_8764() -> (Tensor[(13, 13, 2), int64],) {
  @func_8762() /* ty=(Tensor[(13, 13, 2), int64],) */
}

def @func_11695() -> Tensor[(7, 5, 15), float64] {
  %121 = @func_10494() /* ty=(Tensor[(7, 5, 15), float64], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64]) */;
  %121.0
}

def @func_16529() -> (Tensor[(13, 9, 14), float32],) {
  %122 = @func_9586() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %123 = %122.1;
  (%123,)
}

def @func_17409() -> (Tensor[(13, 9, 14), float32], Tensor[(338), float64]) {
  %124 = @func_12883() /* ty=(Tensor[(13, 13, 2), float64], Tensor[(13, 9, 14), float32]) */;
  %125 = @func_16665() /* ty=(Tensor[(7, 5, 15), float64], Tensor[(338), float64], Tensor[(338), float32]) */;
  %126 = %124.1;
  %127 = %125.1;
  (%126, %127)
}

def @func_18994() -> Tensor[(13, 9, 14), float32] {
  @func_18992() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_20645() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(13, 13, 2), int64], Tensor[(338), float32], Tensor[(13, 9, 14), int16], Tensor[(16, 8, 5), uint64]) {
  @func_20643() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(13, 13, 2), int64], Tensor[(338), float32], Tensor[(13, 9, 14), int16], Tensor[(16, 8, 5), uint64]) */
}

def @func_17011() -> (Tensor[(13, 9, 14), float32],) {
  %130 = fn () -> (Tensor[(13, 9, 14), float32],) {
    %128 = @func_14002() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64]) */;
    %129 = %128.0;
    (%129,)
  };
  %130() /* ty=(Tensor[(13, 9, 14), float32],) */
}

def @func_1820() -> (Tensor[(13, 9, 14), int32], Tensor[(16, 8, 5), uint64], Tensor[(338), int64]) {
  %131 = @func_718() /* ty=Tensor[(13, 9, 14), float32] */;
  %132 = cast(meta[relay.Constant][3] /* ty=Tensor[(13, 9, 14), float32] */, dtype="int32") /* ty=Tensor[(13, 9, 14), int32] */;
  %133 = shape_of(%131, dtype="int32") /* ty=Tensor[(3), int32] */;
  %134 = cast(%131, dtype="int32") /* ty=Tensor[(13, 9, 14), int32] */;
  %135 = dyn.reshape(%132, %133, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %136 = @func_1724() /* ty=(Tensor[(16, 8, 5), uint64],) */;
  %137 = @func_680() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(338), int64]) */;
  %138 = left_shift(%134, %135) /* ty=Tensor[(13, 9, 14), int32] */;
  %139 = %136.0;
  %140 = %137.2;
  (%138, %139, %140)
}

def @func_12219() -> (Tensor[(13, 9, 14), float32],) {
  %141 = @func_2597() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %142 = %141.0;
  (%142,)
}

def @func_13370() -> (Tensor[(13, 9, 14), float32],) {
  %144 = fn () -> (Tensor[(13, 9, 14), float32],) {
    %143 = @func_6379() /* ty=Tensor[(13, 9, 14), float32] */;
    (%143,)
  };
  %144() /* ty=(Tensor[(13, 9, 14), float32],) */
}

def @func_11623() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %145 = @func_5610() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %146 = %145.1;
  %147 = @func_1944() /* ty=Tensor[(13, 9, 14), float32] */;
  (%146, %147)
}

def @func_16810() -> (Tensor[(640), uint64], Tensor[(13, 9, 14), float32]) {
  %148 = @func_15406() /* ty=(Tensor[(338), bool], Tensor[(13, 9, 14), float32]) */;
  %149 = @func_3318() /* ty=Tensor[(640), uint64] */;
  %150 = %148.1;
  (%149, %150)
}

def @func_7286(%var_7284: Tensor[(8, 6, 12), float64], %var_7285: Tensor[(44), float32]) -> (Tensor[(13, 9, 14), float64], Tensor[(44), float32], Tensor[(8, 6, 12), bool]) {
  %162 = fn (%var_7243: Tensor[(8, 6, 12), float64], %var_7251: Tensor[(44), float32]) -> (Tensor[(13, 9, 14), float64], Tensor[(44), float32], Tensor[(8, 6, 12), bool]) {
    %151 = cast(%var_7251, dtype="float32") /* ty=Tensor[(44), float32] */;
    %152 = reshape(%151, newshape=[22, 2]) /* ty=Tensor[(22, 2), float32] */;
    %153 = @func_2785(%152) /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(11, 2, 2), float32], Tensor[(22, 2), float32], Tensor[(13, 9, 14), float64]) */;
    %154 = cast(%var_7243, dtype="float64") /* ty=Tensor[(8, 6, 12), float64] */;
    %155 = tan(%154) /* ty=Tensor[(8, 6, 12), float64] */;
    %156 = cast(meta[relay.Constant][4] /* ty=Tensor[(8, 6, 12), float64] */, dtype="bool") /* ty=Tensor[(8, 6, 12), bool] */;
    %157 = shape_of(%155, dtype="int32") /* ty=Tensor[(3), int32] */;
    %158 = cast(%155, dtype="bool") /* ty=Tensor[(8, 6, 12), bool] */;
    %159 = dyn.reshape(%156, %157, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %160 = %153.4;
    %161 = greater_equal(%158, %159) /* ty=Tensor[(8, 6, 12), bool] */;
    (%160, %var_7251, %161)
  };
  %162(%var_7284, %var_7285) /* ty=(Tensor[(13, 9, 14), float64], Tensor[(44), float32], Tensor[(8, 6, 12), bool]) */
}

def @func_19227() -> (Tensor[(338), int64],) {
  %164 = fn () -> (Tensor[(338), int64],) {
    %163 = @func_12314() /* ty=Tensor[(338), int64] */;
    (%163,)
  };
  %164() /* ty=(Tensor[(338), int64],) */
}

def @func_4092() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), uint8]) {
  %170 = fn () -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), uint8]) {
    %165 = @func_1561() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
    %166 = %165.5;
    %167 = cast(%166, dtype="float32") /* ty=Tensor[(13, 9, 14), float32] */;
    %168 = reshape(%167, newshape=[13, 9, 14]) /* ty=Tensor[(13, 9, 14), float32] */;
    %169 = @func_3161(%168) /* ty=Tensor[(13, 9, 14), uint8] */;
    (%166, %169)
  };
  %170() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), uint8]) */
}

def @func_18992() -> Tensor[(13, 9, 14), float32] {
  %171 = @func_17348() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) */;
  %171.1
}

def @func_12199(%var_12190: Tensor[(640), uint64]) -> (Tensor[(13, 13, 2), int64], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64]) {
  %172 = @func_7609() /* ty=(Tensor[(13, 13, 2), int64],) */;
  %173 = cast(%var_12190, dtype="uint64") /* ty=Tensor[(640), uint64] */;
  %174 = cast(%var_12190, dtype="uint64") /* ty=Tensor[(640), uint64] */;
  %175 = reshape(%173, newshape=[16, 8, 5]) /* ty=Tensor[(16, 8, 5), uint64] */;
  %176 = reshape(%174, newshape=[16, 8, 5]) /* ty=Tensor[(16, 8, 5), uint64] */;
  %177 = @func_245(%175, %176) /* ty=(Tensor[(16, 8, 5), uint64],) */;
  %178 = %172.0;
  %179 = %177.0;
  (%178, %179, %var_12190)
}

def @func_7515() -> Tensor[(13, 9, 14), float32] {
  @func_7513() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_19110() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64]) {
  %185 = fn () -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64]) {
    %180 = @func_5610() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
    %181 = @func_16597() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 13, 2), int64], Tensor[(338), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(13, 13, 2), int64]) */;
    %182 = %180.0;
    %183 = @func_17543() /* ty=Tensor[(13, 9, 14), float32] */;
    %184 = %181.0;
    (%182, %183, %184)
  };
  %185() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64]) */
}

def @func_7885(%var_7883: Tensor[(13, 9, 14), float32]) -> (Tensor[(13, 9, 14), bool], Tensor[(13, 9, 14), float32], Tensor[(640), uint64]) {
  @func_7882(%var_7883) /* ty=(Tensor[(13, 9, 14), bool], Tensor[(13, 9, 14), float32], Tensor[(640), uint64]) */
}

def @func_19593() -> (Tensor[(11, 12, 7), float64],) {
  %188 = fn () -> (Tensor[(11, 12, 7), float64],) {
    %186 = @func_10629() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(1, 924), float64], Tensor[(11, 12, 7), float64]) */;
    %187 = %186.2;
    (%187,)
  };
  %188() /* ty=(Tensor[(11, 12, 7), float64],) */
}

def @func_19689() -> Tensor[(13, 9, 14), float32] {
  @func_19687() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_13597(%var_13595: Tensor[(338), float32]) -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(338), float32]) {
  @func_13594(%var_13595) /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(338), float32]) */
}

def @func_8580() -> (Tensor[(13, 9, 14), float32],) {
  @func_8578() /* ty=(Tensor[(13, 9, 14), float32],) */
}

def @func_4847() -> (Tensor[(10, 16, 14), float32], Tensor[(13, 9, 14), float32]) {
  %192 = fn () -> (Tensor[(10, 16, 14), float32], Tensor[(13, 9, 14), float32]) {
    %189 = @func_2597() /* ty=(Tensor[(13, 9, 14), float32],) */;
    %190 = @func_3021() /* ty=Tensor[(10, 16, 14), float32] */;
    %191 = %189.0;
    (%190, %191)
  };
  %192() /* ty=(Tensor[(10, 16, 14), float32], Tensor[(13, 9, 14), float32]) */
}

def @func_4932(%var_4930: Tensor[(13, 13, 2), int64]) -> Tensor[(13, 13, 2), bool] {
  @func_4929(%var_4930) /* ty=Tensor[(13, 13, 2), bool] */
}

def @func_13433() -> Tensor[(13, 9, 14), float32] {
  %193 = @func_10433() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %193.1
}

def @func_3185() -> Tensor[(13, 9, 14), float32] {
  @func_3183() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_13029() -> Tensor[(13, 9, 14), float32] {
  %194 = fn () -> Tensor[(13, 9, 14), float32] {
    @func_9705() /* ty=Tensor[(13, 9, 14), float32] */
  };
  %194() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_7513() -> Tensor[(13, 9, 14), float32] {
  %195 = @func_4902() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %195.0
}

def @func_1725() -> (Tensor[(16, 8, 5), uint64],) {
  %198 = fn () -> (Tensor[(16, 8, 5), uint64],) {
    %196 = @func_1691() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), int16], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64]) */;
    %197 = %196.2;
    (%197,)
  };
  %198() /* ty=(Tensor[(16, 8, 5), uint64],) */
}

def @func_11412() -> (Tensor[(13, 9, 14), int32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(640), uint64], Tensor[(16, 8, 5), float32], Tensor[(7, 13, 15), float64], Tensor[(1, 1365), float64], Tensor[(13, 9, 14), float32]) {
  @func_11410() /* ty=(Tensor[(13, 9, 14), int32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(640), uint64], Tensor[(16, 8, 5), float32], Tensor[(7, 13, 15), float64], Tensor[(1, 1365), float64], Tensor[(13, 9, 14), float32]) */
}

def @func_19723() -> (Tensor[(13, 9, 14), float32], Tensor[(20, 32), uint64], Tensor[(16, 8, 5), uint64], Tensor[(13, 13, 2), int64]) {
  %205 = fn () -> (Tensor[(13, 9, 14), float32], Tensor[(20, 32), uint64], Tensor[(16, 8, 5), uint64], Tensor[(13, 13, 2), int64]) {
    %199 = @func_9669() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64], Tensor[(20, 32), uint64], Tensor[(13, 9, 14), float32]) */;
    %200 = @func_16076() /* ty=(Tensor[(13, 9, 14), float64], Tensor[(16, 8, 5), uint64]) */;
    %201 = @func_8749() /* ty=Tensor[(13, 9, 14), float32] */;
    %202 = %199.3;
    %203 = %200.1;
    %204 = @func_17000() /* ty=Tensor[(13, 13, 2), int64] */;
    (%201, %202, %203, %204)
  };
  %205() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(20, 32), uint64], Tensor[(16, 8, 5), uint64], Tensor[(13, 13, 2), int64]) */
}

def @func_8675() -> (Tensor[(13, 13, 2), int64], Tensor[(924, ?), bool]) {
  @func_8673() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(924, ?), bool]) */
}

def @func_5659(%var_5640: Tensor[(13, 9, 14), float32]) -> (Tensor[(13, 13, 2), int64], Tensor[(13, 13, 2), float64], Tensor[(13, 9, 14), bool], Tensor[(338), bool]) {
  %206 = @func_1459() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float64]) */;
  %207 = @func_4397() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(924), float64], Tensor[(13, 13, 2), float64]) */;
  %208 = @func_891() /* ty=Tensor[(13, 9, 14), float32] */;
  %209 = cast(%var_5640, dtype="bool") /* ty=Tensor[(13, 9, 14), bool] */;
  %210 = shape_of(%208, dtype="int32") /* ty=Tensor[(3), int32] */;
  %211 = cast(%208, dtype="bool") /* ty=Tensor[(13, 9, 14), bool] */;
  %212 = dyn.reshape(%209, %210, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %213 = %206.0;
  %214 = cast(%213, dtype="int64") /* ty=Tensor[(13, 13, 2), int64] */;
  %215 = reshape(%214, newshape=[338]) /* ty=Tensor[(338), int64] */;
  %216 = @func_5295(%215) /* ty=(Tensor[(13, 9, 14), float32], Tensor[(338), bool]) */;
  %217 = %207.2;
  %218 = equal(%211, %212) /* ty=Tensor[(13, 9, 14), bool] */;
  %219 = %216.1;
  (%213, %217, %218, %219)
}

def @func_19750() -> (Tensor[(13, 9, 14), float32],) {
  %222 = fn () -> (Tensor[(13, 9, 14), float32],) {
    %220 = @func_10894() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
    %221 = %220.0;
    (%221,)
  };
  %222() /* ty=(Tensor[(13, 9, 14), float32],) */
}

def @func_6411() -> (Tensor[(13, 9, 14), float32],) {
  %225 = fn () -> (Tensor[(13, 9, 14), float32],) {
    %223 = @func_5729() /* ty=(Tensor[(13, 9, 14), float32],) */;
    %224 = %223.0;
    (%224,)
  };
  %225() /* ty=(Tensor[(13, 9, 14), float32],) */
}

def @func_5413() -> (Tensor[(338), float64], Tensor[(13, 9, 14), float32], Tensor[(640), uint64]) {
  %226 = @func_3408() /* ty=(Tensor[(338), float32],) */;
  %227 = %226.0;
  %228 = cast(meta[relay.Constant][5] /* ty=Tensor[(338), float32] */, dtype="uint32") /* ty=Tensor[(338), uint32] */;
  %229 = shape_of(%227, dtype="int32") /* ty=Tensor[(1), int32] */;
  %230 = cast(%227, dtype="uint32") /* ty=Tensor[(338), uint32] */;
  %231 = dyn.reshape(%228, %229, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %232 = bitwise_xor(%230, %231) /* ty=Tensor[(338), uint32] */;
  %233 = cast(meta[relay.Constant][5] /* ty=Tensor[(338), float32] */, dtype="float64") /* ty=Tensor[(338), float64] */;
  %234 = shape_of(%232, dtype="int32") /* ty=Tensor[(1), int32] */;
  %235 = cast(%232, dtype="float64") /* ty=Tensor[(338), float64] */;
  %236 = dyn.reshape(%233, %234, newshape=[]) /* ty=Tensor[(?), float64] */;
  %237 = @func_4044() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %238 = @func_2535() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(640), uint64], Tensor[(13, 13, 2), int64]) */;
  %239 = floor_divide(%235, %236) /* ty=Tensor[(338), float64] */;
  %240 = %237.1;
  %241 = %238.2;
  (%239, %240, %241)
}

def @func_10352() -> (Tensor[(11, 12, 7), float32], Tensor[(11, 4, 924), uint16]) {
  @func_10350() /* ty=(Tensor[(11, 12, 7), float32], Tensor[(11, 4, 924), uint16]) */
}

def @func_8071() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %242 = @func_2653() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %243 = @func_6802() /* ty=Tensor[(13, 9, 14), float32] */;
  %244 = @func_601() /* ty=Tensor[(13, 9, 14), float32] */;
  %245 = %242.1;
  (%243, %244, %245)
}

def @func_19841() -> Tensor[(13, 13, 2), int64] {
  %247 = fn () -> Tensor[(13, 13, 2), int64] {
    %246 = @func_10494() /* ty=(Tensor[(7, 5, 15), float64], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64]) */;
    %246.2
  };
  %247() /* ty=Tensor[(13, 13, 2), int64] */
}

def @func_11185() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %252 = fn () -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
    %248 = @func_4044() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
    %249 = @func_11063() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), int32]) */;
    %250 = %248.0;
    %251 = %249.1;
    (%250, %251)
  };
  %252() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */
}

def @func_6109() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %257 = fn () -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
    %253 = @func_2597() /* ty=(Tensor[(13, 9, 14), float32],) */;
    %254 = @func_3674() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(10, 16, 14), float32]) */;
    %255 = %253.0;
    %256 = %254.0;
    (%255, %256)
  };
  %257() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */
}

def @func_17569(%var_17551: Tensor[(10, 11, 5), float64]) -> Tensor[(10, 11, 5), float64] {
  %258 = cast(%var_17551, dtype="float64") /* ty=Tensor[(10, 11, 5), float64] */;
  asin(%258) /* ty=Tensor[(10, 11, 5), float64] */
}

def @func_13252() -> Tensor[(13, 9, 14), float32] {
  @func_13250() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_18699() -> (Tensor[(13, 9, 14), float32],) {
  %259 = @func_13557() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %260 = %259.0;
  (%260,)
}

def @func_2403() -> Tensor[(13, 9, 14), float32] {
  @func_2401() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_16201() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64]) {
  %265 = fn () -> (Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64]) {
    %261 = @func_3674() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(10, 16, 14), float32]) */;
    %262 = @func_2812() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64]) */;
    %263 = %261.1;
    %264 = %262.1;
    (%263, %264)
  };
  %265() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64]) */
}

def @func_9931() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %270 = fn () -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
    %266 = @func_2535() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(640), uint64], Tensor[(13, 13, 2), int64]) */;
    %267 = @func_8605() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
    %268 = %266.0;
    %269 = %267.2;
    (%268, %269)
  };
  %270() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */
}

def @func_12425() -> (Tensor[(13, 13, 2), int64], Tensor[(338), bool]) {
  %275 = fn () -> (Tensor[(13, 13, 2), int64], Tensor[(338), bool]) {
    %271 = @func_9485() /* ty=(Tensor[(13, 13, 2), int64],) */;
    %272 = @func_11532() /* ty=(Tensor[(338), bool],) */;
    %273 = %271.0;
    %274 = %272.0;
    (%273, %274)
  };
  %275() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(338), bool]) */
}

def @func_2250() -> Tensor[(16, 8, 5), uint64] {
  @func_2248() /* ty=Tensor[(16, 8, 5), uint64] */
}

def @func_17818(%var_17816: Tensor[(924, 5), float64], %var_17817: Tensor[(924, 4), float64]) -> (Tensor[(13, 13, 2), int64], Tensor[(16, 8, 5), uint64], Tensor[(924, 4), float64], Tensor[(924, 5), bool], Tensor[(13, 9, 14), float32], Tensor[(924, 5), int32], Tensor[(13, 9, 14), uint8], Tensor[(924, 5), int16]) {
  @func_17814(%var_17816, %var_17817) /* ty=(Tensor[(13, 13, 2), int64], Tensor[(16, 8, 5), uint64], Tensor[(924, 4), float64], Tensor[(924, 5), bool], Tensor[(13, 9, 14), float32], Tensor[(924, 5), int32], Tensor[(13, 9, 14), uint8], Tensor[(924, 5), int16]) */
}

def @func_2823() -> Tensor[(13, 9, 14), float32] {
  %276 = fn () -> Tensor[(13, 9, 14), float32] {
    @func_891() /* ty=Tensor[(13, 9, 14), float32] */
  };
  %276() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_7794() -> (Tensor[(13, 13, 2), int64],) {
  %279 = fn () -> (Tensor[(13, 13, 2), int64],) {
    %277 = @func_3744() /* ty=(Tensor[(13, 13, 2), int64],) */;
    %278 = %277.0;
    (%278,)
  };
  %279() /* ty=(Tensor[(13, 13, 2), int64],) */
}

def @func_13705() -> (Tensor[(13, 13, 2), int64],) {
  %282 = fn () -> (Tensor[(13, 13, 2), int64],) {
    %280 = @func_13100() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 13, 2), int64]) */;
    %281 = %280.0;
    (%281,)
  };
  %282() /* ty=(Tensor[(13, 13, 2), int64],) */
}

def @func_9181() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(11, 4, 1), float64], Tensor[(22, 2), float64], Tensor[(13, 9, 14), float32], Tensor[(2240), float32], Tensor[(338), int64]) {
  %296 = fn () -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(11, 4, 1), float64], Tensor[(22, 2), float64], Tensor[(13, 9, 14), float32], Tensor[(2240), float32], Tensor[(338), int64]) {
    %283 = @func_8071() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
    %284 = cast(meta[relay.Constant][6] /* ty=Tensor[(22, 2), float64] */, dtype="float64") /* ty=Tensor[(22, 2), float64] */;
    %285 = reshape(%284, newshape=[11, 4, 1]) /* ty=Tensor[(11, 4, 1), float64] */;
    %286 = @func_8022(%285) /* ty=(Tensor[(11, 4, 1), bool], Tensor[(11, 4, 1), float64]) */;
    %287 = cast(meta[relay.Constant][7] /* ty=Tensor[(2240), float32] */, dtype="float32") /* ty=Tensor[(2240), float32] */;
    %288 = cast(meta[relay.Constant][8] /* ty=Tensor[(338), int64] */, dtype="int64") /* ty=Tensor[(338), int64] */;
    %289 = reshape(%287, newshape=[2240]) /* ty=Tensor[(2240), float32] */;
    %290 = reshape(%288, newshape=[338]) /* ty=Tensor[(338), int64] */;
    %291 = @func_8552(%289, %290) /* ty=(Tensor[(640), uint64], Tensor[(10, 16, 14), int32], Tensor[(2240), int8], Tensor[(16, 8, 5), uint64], Tensor[(338), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
    %292 = %283.0;
    %293 = @func_6854() /* ty=Tensor[(13, 9, 14), float32] */;
    %294 = %286.1;
    %295 = %291.6;
    (%292, %293, %294, meta[relay.Constant][6] /* ty=Tensor[(22, 2), float64] */, %295, meta[relay.Constant][7] /* ty=Tensor[(2240), float32] */, meta[relay.Constant][8] /* ty=Tensor[(338), int64] */)
  };
  %296() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(11, 4, 1), float64], Tensor[(22, 2), float64], Tensor[(13, 9, 14), float32], Tensor[(2240), float32], Tensor[(338), int64]) */
}

def @func_14111() -> (Tensor[(13, 9, 14), float32],) {
  @func_14109() /* ty=(Tensor[(13, 9, 14), float32],) */
}

def @func_18679() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %297 = @func_5889() /* ty=(Tensor[(16, 8, 5), uint64], Tensor[(13, 9, 14), float32]) */;
  %298 = @func_17071() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %299 = %297.1;
  %300 = %298.2;
  (%299, %300)
}

def @func_7675() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %301 = @func_3219() /* ty=Tensor[(13, 9, 14), float32] */;
  %302 = @func_4257() /* ty=Tensor[(13, 9, 14), float32] */;
  (%301, %302)
}

def @func_1906() -> (Tensor[(13, 13, 2), int64],) {
  %303 = @func_680() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(338), int64]) */;
  %304 = %303.1;
  (%304,)
}

def @func_11410() -> (Tensor[(13, 9, 14), int32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(640), uint64], Tensor[(16, 8, 5), float32], Tensor[(7, 13, 15), float64], Tensor[(1, 1365), float64], Tensor[(13, 9, 14), float32]) {
  %305 = @func_11063() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), int32]) */;
  %306 = @func_11192() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %307 = @func_7675() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %308 = @func_5508() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %309 = @func_2535() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(640), uint64], Tensor[(13, 13, 2), int64]) */;
  %310 = @func_4446() /* ty=(Tensor[(10, 16, 14), float32], Tensor[(13, 9, 14), uint32], Tensor[(1638), float32], Tensor[(16, 8, 5), uint64]) */;
  %311 = %310.3;
  %312 = cast(%311, dtype="float32") /* ty=Tensor[(16, 8, 5), float32] */;
  %313 = cast(meta[relay.Constant][9] /* ty=Tensor[(1, 1365), float64] */, dtype="float64") /* ty=Tensor[(1, 1365), float64] */;
  %314 = reshape(%313, newshape=[7, 13, 15]) /* ty=Tensor[(7, 13, 15), float64] */;
  %315 = @func_6627(%314) /* ty=(Tensor[(7, 13, 15), float64],) */;
  %316 = @func_2597() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %317 = %305.2;
  %318 = %306.0;
  %319 = %307.1;
  %320 = %308.0;
  %321 = %309.2;
  %322 = erf(%312) /* ty=Tensor[(16, 8, 5), float32] */;
  %323 = %315.0;
  %324 = %316.0;
  (%317, %318, %319, %320, %321, %322, %323, meta[relay.Constant][9] /* ty=Tensor[(1, 1365), float64] */, %324)
}

def @func_17198(%var_17195: Tensor[(338), bool], %var_17196: Tensor[(7392), float64]) -> (Tensor[(16, 8, 5), uint64], Tensor[(7392), float64], Tensor[(338), bool], Tensor[(7392), float64]) {
  %325 = cast(%var_17195, dtype="bool") /* ty=Tensor[(338), bool] */;
  %326 = cast(%var_17196, dtype="float64") /* ty=Tensor[(7392), float64] */;
  %327 = reshape(%325, newshape=[338]) /* ty=Tensor[(338), bool] */;
  %328 = reshape(%326, newshape=[7392]) /* ty=Tensor[(7392), float64] */;
  %329 = @func_14923(%327, %328) /* ty=(Tensor[(13, 9, 14), float32], Tensor[(338), float64], Tensor[(8, 924), int8], Tensor[(7392), float64]) */;
  %330 = @func_2248() /* ty=Tensor[(16, 8, 5), uint64] */;
  %331 = %329.3;
  (%330, %331, %var_17195, %var_17196)
}

def @func_17671() -> (Tensor[(10, 16, 14), float32], Tensor[(338), float64], Tensor[(26, 13), float32]) {
  %339 = fn () -> (Tensor[(10, 16, 14), float32], Tensor[(338), float64], Tensor[(26, 13), float32]) {
    %332 = cast(meta[relay.Constant][10] /* ty=Tensor[(26, 13), float32] */, dtype="float32") /* ty=Tensor[(26, 13), float32] */;
    %333 = cast(meta[relay.Constant][10] /* ty=Tensor[(26, 13), float32] */, dtype="uint16") /* ty=Tensor[(26, 13), uint16] */;
    %334 = reshape(%332, newshape=[338]) /* ty=Tensor[(338), float32] */;
    %335 = reshape(%333, newshape=[338]) /* ty=Tensor[(338), uint16] */;
    %336 = @func_5864(%334, %335) /* ty=(Tensor[(338), int32], Tensor[(338), int64], Tensor[(338), float64]) */;
    %337 = @func_14206() /* ty=Tensor[(10, 16, 14), float32] */;
    %338 = %336.2;
    (%337, %338, meta[relay.Constant][10] /* ty=Tensor[(26, 13), float32] */)
  };
  %339() /* ty=(Tensor[(10, 16, 14), float32], Tensor[(338), float64], Tensor[(26, 13), float32]) */
}

def @func_16717() -> (Tensor[(13, 9, 14), float64], Tensor[(13, 9, 14), float32]) {
  %343 = fn () -> (Tensor[(13, 9, 14), float64], Tensor[(13, 9, 14), float32]) {
    %340 = @func_16076() /* ty=(Tensor[(13, 9, 14), float64], Tensor[(16, 8, 5), uint64]) */;
    %341 = %340.0;
    %342 = @func_11439() /* ty=Tensor[(13, 9, 14), float32] */;
    (%341, %342)
  };
  %343() /* ty=(Tensor[(13, 9, 14), float64], Tensor[(13, 9, 14), float32]) */
}

def @func_4257() -> Tensor[(13, 9, 14), float32] {
  @func_3462() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_5610() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %344 = @func_4065() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %345 = @func_601() /* ty=Tensor[(13, 9, 14), float32] */;
  %346 = %344.0;
  (%345, %346)
}

def @func_19928() -> Tensor[(13, 13, 2), int64] {
  %347 = @func_9485() /* ty=(Tensor[(13, 13, 2), int64],) */;
  %347.0
}

def @func_3098() -> (Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float64], Tensor[(1638), float32], Tensor[(13, 9, 14), float32]) {
  @func_3096() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float64], Tensor[(1638), float32], Tensor[(13, 9, 14), float32]) */
}

def @func_7221() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  @func_7219() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */
}

def @func_1563() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  @func_1561() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */
}

def @func_8073() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  @func_8071() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */
}

def @func_3600() -> (Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) {
  %348 = @func_1906() /* ty=(Tensor[(13, 13, 2), int64],) */;
  %349 = %348.0;
  %350 = @func_3219() /* ty=Tensor[(13, 9, 14), float32] */;
  (%349, %350)
}

def @func_14585(%var_14514: Tensor[(924), uint16], %var_14515: Tensor[(1, 9), uint8]) -> (Tensor[(9, 14, 9), float32], Tensor[(924), uint16], Tensor[(1, 9), uint8], Tensor[(13, 9, 14), float32], Tensor[(11, 4, 1), float64], Tensor[(44), float64], Tensor[(126, ?), bool], Tensor[(13, 9, 14), float64], Tensor[(26, 13), int64], Tensor[(13, 9, 14), float32], Tensor[(338), float32]) {
  %351 = @func_13759() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(9, 14, 9), float32]) */;
  %352 = @func_5967() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %353 = cast(meta[relay.Constant][11] /* ty=Tensor[(44), float64] */, dtype="float64") /* ty=Tensor[(44), float64] */;
  %354 = reshape(%353, newshape=[11, 4, 1]) /* ty=Tensor[(11, 4, 1), float64] */;
  %355 = @func_8022(%354) /* ty=(Tensor[(11, 4, 1), bool], Tensor[(11, 4, 1), float64]) */;
  %356 = cast(%var_14514, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %357 = cast(%var_14515, dtype="uint8") /* ty=Tensor[(1, 9), uint8] */;
  %358 = reshape(%356, newshape=[11, 12, 7]) /* ty=Tensor[(11, 12, 7), uint16] */;
  %359 = reshape(%357, newshape=[9]) /* ty=Tensor[(9), uint8] */;
  %360 = @func_11585(%358, %359) /* ty=(Tensor[(11, 12, 7), uint16], Tensor[(338), int64], Tensor[(9), uint8], Tensor[(126, 1), uint8], Tensor[(338, 1), int64]) */;
  %361 = %360.3;
  %362 = cast(%361, dtype="float64") /* ty=Tensor[(126, 1), float64] */;
  %363 = acos(%362) /* ty=Tensor[(126, 1), float64] */;
  %364 = cast(%363, dtype="float64") /* ty=Tensor[(126, 1), float64] */;
  %365 = exp(%364) /* ty=Tensor[(126, 1), float64] */;
  %366 = cast(%365, dtype="float64") /* ty=Tensor[(126, 1), float64] */;
  %367 = sigmoid(%366) /* ty=Tensor[(126, 1), float64] */;
  %368 = cast(%363, dtype="bool") /* ty=Tensor[(126, 1), bool] */;
  %369 = shape_of(%367, dtype="int32") /* ty=Tensor[(2), int32] */;
  %370 = cast(%367, dtype="bool") /* ty=Tensor[(126, 1), bool] */;
  %371 = dyn.reshape(%368, %369, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %372 = cast(meta[relay.Constant][12] /* ty=Tensor[(26, 13), int64] */, dtype="int64") /* ty=Tensor[(26, 13), int64] */;
  %373 = reshape(%372, newshape=[13, 13, 2]) /* ty=Tensor[(13, 13, 2), int64] */;
  %374 = @func_4197(%373) /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float64], Tensor[(13, 13, 2), int32]) */;
  %375 = @func_10236() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) */;
  %376 = %351.1;
  %377 = %352.0;
  %378 = %355.1;
  %379 = less(%370, %371) /* ty=Tensor[(126, ?), bool] */;
  %380 = %374.1;
  %381 = %375.0;
  %382 = @func_7417() /* ty=Tensor[(338), float32] */;
  (%376, %var_14514, %var_14515, %377, %378, meta[relay.Constant][11] /* ty=Tensor[(44), float64] */, %379, %380, meta[relay.Constant][12] /* ty=Tensor[(26, 13), int64] */, %381, %382)
}

def @func_11075() -> Tensor[(13, 9, 14), float32] {
  %383 = @func_4760() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %383.2
}

def @func_19329() -> Tensor[(13, 9, 14), float32] {
  %384 = @func_11192() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %384.0
}

def @func_13279() -> Tensor[(338), int64] {
  %385 = @func_680() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(338), int64]) */;
  %385.2
}

def @func_7418() -> Tensor[(338), float32] {
  %387 = fn () -> Tensor[(338), float32] {
    %386 = @func_3408() /* ty=(Tensor[(338), float32],) */;
    %386.0
  };
  %387() /* ty=Tensor[(338), float32] */
}

def @func_17350() -> (Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) {
  @func_17348() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) */
}

def @func_20297(%var_20296: Tensor[(1, 338), float32]) -> (Tensor[(13, 9, 14), float32], Tensor[(1638), float32], Tensor[(338), int32], Tensor[(1, 338), float32]) {
  %399 = fn (%var_20286: Tensor[(1, 338), float32]) -> (Tensor[(13, 9, 14), float32], Tensor[(1638), float32], Tensor[(338), int32], Tensor[(1, 338), float32]) {
    %388 = @func_14272() /* ty=Tensor[(13, 9, 14), float32] */;
    %389 = cast(%388, dtype="float32") /* ty=Tensor[(13, 9, 14), float32] */;
    %390 = reshape(%389, newshape=[1638]) /* ty=Tensor[(1638), float32] */;
    %391 = @func_6914(%390) /* ty=(Tensor[(16, 8, 5), float64], Tensor[(13, 9, 14), uint32], Tensor[(1638), float32]) */;
    %392 = cast(%var_20286, dtype="float32") /* ty=Tensor[(1, 338), float32] */;
    %393 = cast(%var_20286, dtype="uint16") /* ty=Tensor[(1, 338), uint16] */;
    %394 = reshape(%392, newshape=[338]) /* ty=Tensor[(338), float32] */;
    %395 = reshape(%393, newshape=[338]) /* ty=Tensor[(338), uint16] */;
    %396 = @func_5864(%394, %395) /* ty=(Tensor[(338), int32], Tensor[(338), int64], Tensor[(338), float64]) */;
    %397 = %391.2;
    %398 = %396.0;
    (%388, %397, %398, %var_20286)
  };
  %399(%var_20296) /* ty=(Tensor[(13, 9, 14), float32], Tensor[(1638), float32], Tensor[(338), int32], Tensor[(1, 338), float32]) */
}

def @func_8724() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float64], Tensor[(13, 9, 14), float32]) {
  %404 = fn () -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float64], Tensor[(13, 9, 14), float32]) {
    %400 = @func_1459() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float64]) */;
    %401 = @func_601() /* ty=Tensor[(13, 9, 14), float32] */;
    %402 = %400.1;
    %403 = @func_3183() /* ty=Tensor[(13, 9, 14), float32] */;
    (%401, %402, %403)
  };
  %404() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float64], Tensor[(13, 9, 14), float32]) */
}

def @func_11308() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %405 = @func_891() /* ty=Tensor[(13, 9, 14), float32] */;
  %406 = @func_4257() /* ty=Tensor[(13, 9, 14), float32] */;
  (%405, %406)
}

def @func_5693() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  @func_5691() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */
}

def @func_2178() -> (Tensor[(13, 9, 14), float32],) {
  %407 = @func_1338() /* ty=Tensor[(13, 9, 14), float32] */;
  (%407,)
}

def @func_14208() -> Tensor[(10, 16, 14), float32] {
  @func_14206() /* ty=Tensor[(10, 16, 14), float32] */
}

def @func_5074() -> Tensor[(13, 13, 2), int64] {
  %408 = @func_3987() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float64], Tensor[(13, 13, 2), int64]) */;
  %408.2
}

def @func_9297() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  @func_9295() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */
}

def @func_2865(%var_2842: Tensor[(338), int64], %var_2845: Tensor[(154, 6), float64], %var_2855: Tensor[(154, 6), float64]) -> (Tensor[(16, 8, 5), uint64], Tensor[(13, 13, 2), int64], Tensor[(338), int64], Tensor[(11, 12, 7), float32], Tensor[(13, 9, 14), float32], Tensor[(154, 6), float64]) {
  %409 = @func_1561() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %410 = cast(%var_2842, dtype="int64") /* ty=Tensor[(338), int64] */;
  %411 = cast(%var_2842, dtype="int64") /* ty=Tensor[(338), int64] */;
  %412 = reshape(%410, newshape=[13, 13, 2]) /* ty=Tensor[(13, 13, 2), int64] */;
  %413 = reshape(%411, newshape=[13, 13, 2]) /* ty=Tensor[(13, 13, 2), int64] */;
  %414 = cast(%var_2845, dtype="float64") /* ty=Tensor[(154, 6), float64] */;
  %415 = reshape(%414, newshape=[11, 12, 7]) /* ty=Tensor[(11, 12, 7), float64] */;
  %416 = @func_2597() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %417 = cast(%var_2855, dtype="float64") /* ty=Tensor[(154, 6), float64] */;
  %418 = shape_of(%var_2845, dtype="int32") /* ty=Tensor[(2), int32] */;
  %419 = cast(%var_2845, dtype="float64") /* ty=Tensor[(154, 6), float64] */;
  %420 = dyn.reshape(%417, %418, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %421 = %409.2;
  %422 = @func_400(%412, %413) /* ty=Tensor[(13, 13, 2), int64] */;
  %423 = @func_1291(%415) /* ty=Tensor[(11, 12, 7), float32] */;
  %424 = %416.0;
  %425 = floor_mod(%419, %420) /* ty=Tensor[(154, 6), float64] */;
  (%421, %422, %var_2842, %423, %424, %425)
}

def @func_9345() -> (Tensor[(13, 9, 14), int32], Tensor[(13, 9, 14), float32], Tensor[(924), float64]) {
  @func_9343() /* ty=(Tensor[(13, 9, 14), int32], Tensor[(13, 9, 14), float32], Tensor[(924), float64]) */
}

def @func_17348() -> (Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) {
  %426 = @func_13759() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(9, 14, 9), float32]) */;
  %427 = @func_2178() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %428 = %426.0;
  %429 = %427.0;
  (%428, %429)
}

def @func_5415() -> (Tensor[(338), float64], Tensor[(13, 9, 14), float32], Tensor[(640), uint64]) {
  @func_5413() /* ty=(Tensor[(338), float64], Tensor[(13, 9, 14), float32], Tensor[(640), uint64]) */
}

def @func_19884() -> (Tensor[(13, 9, 14), float32], Tensor[(9, 6, 7), float32], Tensor[(378), float32], Tensor[(26, 13), int64]) {
  %440 = fn () -> (Tensor[(13, 9, 14), float32], Tensor[(9, 6, 7), float32], Tensor[(378), float32], Tensor[(26, 13), int64]) {
    %430 = @func_4902() /* ty=(Tensor[(13, 9, 14), float32],) */;
    %431 = cast(meta[relay.Constant][13] /* ty=Tensor[(378), float32] */, dtype="float32") /* ty=Tensor[(378), float32] */;
    %432 = cast(meta[relay.Constant][13] /* ty=Tensor[(378), float32] */, dtype="float32") /* ty=Tensor[(378), float32] */;
    %433 = cast(meta[relay.Constant][14] /* ty=Tensor[(26, 13), int64] */, dtype="int64") /* ty=Tensor[(26, 13), int64] */;
    %434 = reshape(%431, newshape=[9, 6, 7]) /* ty=Tensor[(9, 6, 7), float32] */;
    %435 = reshape(%432, newshape=[9, 6, 7]) /* ty=Tensor[(9, 6, 7), float32] */;
    %436 = reshape(%433, newshape=[338, 1]) /* ty=Tensor[(338, 1), int64] */;
    %437 = @func_6676(%434, %435, %436) /* ty=(Tensor[(9, 6, 7), float32], Tensor[(13, 13, 2), bool], Tensor[(338, 1), int64]) */;
    %438 = %430.0;
    %439 = %437.0;
    (%438, %439, meta[relay.Constant][13] /* ty=Tensor[(378), float32] */, meta[relay.Constant][14] /* ty=Tensor[(26, 13), int64] */)
  };
  %440() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(9, 6, 7), float32], Tensor[(378), float32], Tensor[(26, 13), int64]) */
}

def @func_20643() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(13, 13, 2), int64], Tensor[(338), float32], Tensor[(13, 9, 14), int16], Tensor[(16, 8, 5), uint64]) {
  %441 = @func_3408() /* ty=(Tensor[(338), float32],) */;
  %442 = @func_5554() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), int16]) */;
  %443 = @func_1338() /* ty=Tensor[(13, 9, 14), float32] */;
  %444 = @func_5074() /* ty=Tensor[(13, 13, 2), int64] */;
  %445 = @func_17000() /* ty=Tensor[(13, 13, 2), int64] */;
  %446 = %441.0;
  %447 = %442.1;
  %448 = @func_2248() /* ty=Tensor[(16, 8, 5), uint64] */;
  (%443, %444, %445, %446, %447, %448)
}

def @func_3259(%var_3241: Tensor[(13, 9, 14), float32]) -> Tensor[(13, 9, 14), uint32] {
  %449 = @func_1561() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %450 = %449.1;
  %451 = cast(%var_3241, dtype="uint32") /* ty=Tensor[(13, 9, 14), uint32] */;
  %452 = shape_of(%450, dtype="int32") /* ty=Tensor[(3), int32] */;
  %453 = cast(%450, dtype="uint32") /* ty=Tensor[(13, 9, 14), uint32] */;
  %454 = dyn.reshape(%451, %452, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  logical_xor(%453, %454) /* ty=Tensor[(13, 9, 14), uint32] */
}

def @func_19203() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %458 = fn () -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
    %455 = @func_9343() /* ty=(Tensor[(13, 9, 14), int32], Tensor[(13, 9, 14), float32], Tensor[(924), float64]) */;
    %456 = %455.1;
    %457 = @func_18104() /* ty=Tensor[(13, 9, 14), float32] */;
    (%456, %457)
  };
  %458() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */
}

def @func_17853() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64]) {
  @func_17851() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64]) */
}

def @func_18813() -> (Tensor[(13, 9, 14), float32],) {
  %460 = fn () -> (Tensor[(13, 9, 14), float32],) {
    %459 = @func_12318() /* ty=Tensor[(13, 9, 14), float32] */;
    (%459,)
  };
  %460() /* ty=(Tensor[(13, 9, 14), float32],) */
}

def @func_14003() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64]) {
  %464 = fn () -> (Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64]) {
    %461 = @func_13680() /* ty=(Tensor[(13, 13, 2), int64],) */;
    %462 = @func_12755() /* ty=Tensor[(13, 9, 14), float32] */;
    %463 = %461.0;
    (%462, %463)
  };
  %464() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64]) */
}

def @func_3204() -> Tensor[(13, 9, 14), float32] {
  %466 = fn () -> Tensor[(13, 9, 14), float32] {
    %465 = @func_2178() /* ty=(Tensor[(13, 9, 14), float32],) */;
    %465.0
  };
  %466() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_5934() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  @func_5932() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */
}

def @func_8962(%var_8961: Tensor[(44), float32]) -> (Tensor[(13, 9, 14), int16], Tensor[(44), float32], Tensor[(288, 2), float64], Tensor[(44), float32], Tensor[(13, 9, 14), float32]) {
  %476 = fn (%var_8937: Tensor[(44), float32]) -> (Tensor[(13, 9, 14), int16], Tensor[(44), float32], Tensor[(288, 2), float64], Tensor[(44), float32], Tensor[(13, 9, 14), float32]) {
    %467 = @func_1691() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), int16], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64]) */;
    %468 = cast(meta[relay.Constant][15] /* ty=Tensor[(288, 2), float64] */, dtype="float64") /* ty=Tensor[(288, 2), float64] */;
    %469 = cast(%var_8937, dtype="float32") /* ty=Tensor[(44), float32] */;
    %470 = reshape(%468, newshape=[8, 6, 12]) /* ty=Tensor[(8, 6, 12), float64] */;
    %471 = reshape(%469, newshape=[44]) /* ty=Tensor[(44), float32] */;
    %472 = @func_7283(%470, %471) /* ty=(Tensor[(13, 9, 14), float64], Tensor[(44), float32], Tensor[(8, 6, 12), bool]) */;
    %473 = %467.1;
    %474 = %472.1;
    %475 = @func_7513() /* ty=Tensor[(13, 9, 14), float32] */;
    (%473, %474, meta[relay.Constant][15] /* ty=Tensor[(288, 2), float64] */, %var_8937, %475)
  };
  %476(%var_8961) /* ty=(Tensor[(13, 9, 14), int16], Tensor[(44), float32], Tensor[(288, 2), float64], Tensor[(44), float32], Tensor[(13, 9, 14), float32]) */
}

def @func_11846() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %477 = @func_11063() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), int32]) */;
  %478 = %477.1;
  %479 = @func_891() /* ty=Tensor[(13, 9, 14), float32] */;
  (%478, %479)
}

def @func_9538() -> Tensor[(13, 13, 2), int64] {
  %480 = fn () -> Tensor[(13, 13, 2), int64] {
    @func_5074() /* ty=Tensor[(13, 13, 2), int64] */
  };
  %480() /* ty=Tensor[(13, 13, 2), int64] */
}

def @func_12234(%var_12232: Tensor[(3, 3, 5), float32]) -> (Tensor[(3, 3, 5), float32], Tensor[(13, 13, 2), int64]) {
  @func_12231(%var_12232) /* ty=(Tensor[(3, 3, 5), float32], Tensor[(13, 13, 2), int64]) */
}

def @func_3262(%var_3260: Tensor[(13, 9, 14), float32]) -> Tensor[(13, 9, 14), uint32] {
  @func_3259(%var_3260) /* ty=Tensor[(13, 9, 14), uint32] */
}

def @func_12057() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64], Tensor[(13, 9, 14), float32]) {
  @func_12055() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64], Tensor[(13, 9, 14), float32]) */
}

def @func_9383(%var_9380: Tensor[(3, 3, 1), uint8], %var_9381: Tensor[(3, 3, 14), uint8], %var_9382: Tensor[(338), int64]) -> (Tensor[(3, 3, 14), float32], Tensor[(338), bool], Tensor[(338), int64]) {
  @func_9378(%var_9380, %var_9381, %var_9382) /* ty=(Tensor[(3, 3, 14), float32], Tensor[(338), bool], Tensor[(338), int64]) */
}

def @func_8024(%var_8023: Tensor[(11, 4, 1), float64]) -> (Tensor[(11, 4, 1), bool], Tensor[(11, 4, 1), float64]) {
  %486 = fn (%var_8013: Tensor[(11, 4, 1), float64]) -> (Tensor[(11, 4, 1), bool], Tensor[(11, 4, 1), float64]) {
    %481 = cast(-4.10357f64 /* ty=float64 */, dtype="bool") /* ty=bool */;
    %482 = cast(%var_8013, dtype="bool") /* ty=Tensor[(11, 4, 1), bool] */;
    %483 = cast(%var_8013, dtype="float64") /* ty=Tensor[(11, 4, 1), float64] */;
    %484 = greater(%481, %482) /* ty=Tensor[(11, 4, 1), bool] */;
    %485 = sin(%483) /* ty=Tensor[(11, 4, 1), float64] */;
    (%484, %485)
  };
  %486(%var_8023) /* ty=(Tensor[(11, 4, 1), bool], Tensor[(11, 4, 1), float64]) */
}

def @func_11813() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), float64], Tensor[(13, 9, 14), uint8]) {
  @func_11811() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), float64], Tensor[(13, 9, 14), uint8]) */
}

def @func_14059() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  @func_14057() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */
}

def @func_2814() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64]) {
  @func_2812() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64]) */
}

def @func_14274() -> Tensor[(13, 9, 14), float32] {
  @func_14272() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_14206() -> Tensor[(10, 16, 14), float32] {
  @func_4701() /* ty=Tensor[(10, 16, 14), float32] */
}

def @func_7609() -> (Tensor[(13, 13, 2), int64],) {
  %487 = @func_6569() /* ty=(Tensor[(13, 13, 2), int64],) */;
  %488 = %487.0;
  (%488,)
}

def @func_12221() -> (Tensor[(13, 9, 14), float32],) {
  @func_12219() /* ty=(Tensor[(13, 9, 14), float32],) */
}

def @func_16470() -> (Tensor[(640), uint64], Tensor[(13, 9, 14), float32]) {
  @func_16468() /* ty=(Tensor[(640), uint64], Tensor[(13, 9, 14), float32]) */
}

def @func_5295(%var_5230: Tensor[(338), int64]) -> (Tensor[(13, 9, 14), float32], Tensor[(338), bool]) {
  %489 = @func_4091() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), uint8]) */;
  %490 = cast(%var_5230, dtype="int64") /* ty=Tensor[(338), int64] */;
  %491 = cast(%var_5230, dtype="int64") /* ty=Tensor[(338), int64] */;
  %492 = reshape(%490, newshape=[13, 13, 2]) /* ty=Tensor[(13, 13, 2), int64] */;
  %493 = reshape(%491, newshape=[13, 13, 2]) /* ty=Tensor[(13, 13, 2), int64] */;
  %494 = @func_400(%492, %493) /* ty=Tensor[(13, 13, 2), int64] */;
  %495 = cast(%494, dtype="float32") /* ty=Tensor[(13, 13, 2), float32] */;
  %496 = shape_of(%var_5230, dtype="int32") /* ty=Tensor[(1), int32] */;
  %497 = cast(%var_5230, dtype="float32") /* ty=Tensor[(338), float32] */;
  %498 = dyn.reshape(%495, %496, newshape=[]) /* ty=Tensor[(?), float32] */;
  %499 = divide(%497, %498) /* ty=Tensor[(338), float32] */;
  %500 = cast(%var_5230, dtype="bool") /* ty=Tensor[(338), bool] */;
  %501 = shape_of(%499, dtype="int32") /* ty=Tensor[(1), int32] */;
  %502 = cast(%499, dtype="bool") /* ty=Tensor[(338), bool] */;
  %503 = dyn.reshape(%500, %501, newshape=[]) /* ty=Tensor[(?), bool] */;
  %504 = %489.0;
  %505 = less_equal(%502, %503) /* ty=Tensor[(338), bool] */;
  (%504, %505)
}

def @func_17073() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  @func_17071() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */
}

def @func_17185() -> Tensor[(13, 9, 14), float32] {
  %506 = @func_7498() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64]) */;
  %506.1
}

def @func_18701() -> (Tensor[(13, 9, 14), float32],) {
  @func_18699() /* ty=(Tensor[(13, 9, 14), float32],) */
}

def @func_17904() -> (Tensor[(13, 9, 14), float64], Tensor[(13, 13, 2), int64]) {
  @func_17902() /* ty=(Tensor[(13, 9, 14), float64], Tensor[(13, 13, 2), int64]) */
}

def @func_20683() -> (Tensor[(13, 9, 14), float32], Tensor[(338), float64]) {
  @func_20681() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(338), float64]) */
}

def @func_8866(%var_8865: Tensor[(9, 6, 13), float32]) -> (Tensor[(9, 6, 13), float32],) {
  %509 = fn (%var_8855: Tensor[(9, 6, 13), float32]) -> (Tensor[(9, 6, 13), float32],) {
    %507 = cast(%var_8855, dtype="float32") /* ty=Tensor[(9, 6, 13), float32] */;
    %508 = asin(%507) /* ty=Tensor[(9, 6, 13), float32] */;
    (%508,)
  };
  %509(%var_8865) /* ty=(Tensor[(9, 6, 13), float32],) */
}

def @func_15868() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), bool]) {
  @func_15866() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), bool]) */
}

def @func_1406() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(338), int64]) {
  @func_1404() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(338), int64]) */
}

def @func_2537() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(640), uint64], Tensor[(13, 13, 2), int64]) {
  @func_2535() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(640), uint64], Tensor[(13, 13, 2), int64]) */
}

def @func_9343() -> (Tensor[(13, 9, 14), int32], Tensor[(13, 9, 14), float32], Tensor[(924), float64]) {
  %510 = @func_1820() /* ty=(Tensor[(13, 9, 14), int32], Tensor[(16, 8, 5), uint64], Tensor[(338), int64]) */;
  %511 = @func_8219() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(338), int64]) */;
  %512 = @func_4397() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(924), float64], Tensor[(13, 13, 2), float64]) */;
  %513 = %510.0;
  %514 = %511.0;
  %515 = %512.1;
  (%513, %514, %515)
}

def @func_3558() -> (Tensor[(13, 13, 2), int64],) {
  %518 = fn () -> (Tensor[(13, 13, 2), int64],) {
    %516 = @func_1459() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float64]) */;
    %517 = %516.0;
    (%517,)
  };
  %518() /* ty=(Tensor[(13, 13, 2), int64],) */
}

def @func_12664() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  @func_12662() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */
}

def @func_8105() -> (Tensor[(13, 9, 14), float32],) {
  @func_8103() /* ty=(Tensor[(13, 9, 14), float32],) */
}

def @func_5076() -> Tensor[(13, 13, 2), int64] {
  @func_5074() /* ty=Tensor[(13, 13, 2), int64] */
}

def @func_20353() -> (Tensor[(13, 9, 14), float32], Tensor[(338), int64], Tensor[(338), int64], Tensor[(10, 16, 14), float32], Tensor[(13, 9, 14), float32]) {
  %528 = fn () -> (Tensor[(13, 9, 14), float32], Tensor[(338), int64], Tensor[(338), int64], Tensor[(10, 16, 14), float32], Tensor[(13, 9, 14), float32]) {
    %519 = @func_6235() /* ty=(Tensor[(13, 9, 14), float32],) */;
    %520 = cast(meta[relay.Constant][16] /* ty=Tensor[(338), int64] */, dtype="int64") /* ty=Tensor[(338), int64] */;
    %521 = reshape(%520, newshape=[338]) /* ty=Tensor[(338), int64] */;
    %522 = @func_9412(%521) /* ty=(Tensor[(13, 9, 14), float32], Tensor[(338, 1), int64], Tensor[(378), float32], Tensor[(338), int64]) */;
    %523 = @func_5336() /* ty=(Tensor[(10, 16, 14), float32], Tensor[(13, 9, 14), float32]) */;
    %524 = %519.0;
    %525 = %522.3;
    %526 = %523.0;
    %527 = @func_19479() /* ty=Tensor[(13, 9, 14), float32] */;
    (%524, %525, meta[relay.Constant][16] /* ty=Tensor[(338), int64] */, %526, %527)
  };
  %528() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(338), int64], Tensor[(338), int64], Tensor[(10, 16, 14), float32], Tensor[(13, 9, 14), float32]) */
}

def @func_19660() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), int16]) {
  %533 = fn () -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), int16]) {
    %529 = @func_19295() /* ty=(Tensor[(13, 9, 14), float32],) */;
    %530 = @func_5203() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(11, 2, 2), uint8], Tensor[(13, 9, 14), int16], Tensor[(13, 9, 14), float32], Tensor[(338), int64]) */;
    %531 = %529.0;
    %532 = %530.2;
    (%531, %532)
  };
  %533() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), int16]) */
}

def @func_7677() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  @func_7675() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */
}

def @func_2180() -> (Tensor[(13, 9, 14), float32],) {
  @func_2178() /* ty=(Tensor[(13, 9, 14), float32],) */
}

def @func_7378() -> (Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) {
  %538 = fn () -> (Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) {
    %534 = @func_3557() /* ty=(Tensor[(13, 13, 2), int64],) */;
    %535 = @func_5508() /* ty=(Tensor[(13, 9, 14), float32],) */;
    %536 = %534.0;
    %537 = %535.0;
    (%536, %537)
  };
  %538() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) */
}

def @func_18881(%var_18879: Tensor[(2240), float32], %var_18880: Tensor[(13, 26), int64]) -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(28, 80), float32], Tensor[(13, 26), float64], Tensor[(13, 9, 14), float32], Tensor[(2240), float64]) {
  %555 = fn (%var_18843: Tensor[(2240), float32], %var_18844: Tensor[(13, 26), int64]) -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(28, 80), float32], Tensor[(13, 26), float64], Tensor[(13, 9, 14), float32], Tensor[(2240), float64]) {
    %539 = @func_8723() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float64], Tensor[(13, 9, 14), float32]) */;
    %540 = @func_10037() /* ty=(Tensor[(16, 8, 5), uint64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64]) */;
    %541 = cast(%var_18843, dtype="float32") /* ty=Tensor[(2240), float32] */;
    %542 = cast(%var_18844, dtype="int64") /* ty=Tensor[(13, 26), int64] */;
    %543 = reshape(%541, newshape=[28, 80]) /* ty=Tensor[(28, 80), float32] */;
    %544 = reshape(%542, newshape=[338, 1]) /* ty=Tensor[(338, 1), int64] */;
    %545 = @func_16008(%543, %544) /* ty=(Tensor[(16, 8, 5), uint64], Tensor[(2240), int8], Tensor[(28, 80), float32], Tensor[(338, 1), float32], Tensor[(13, 13, 2), int64], Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) */;
    %546 = cast(%var_18844, dtype="float64") /* ty=Tensor[(13, 26), float64] */;
    %547 = cast(%var_18843, dtype="float64") /* ty=Tensor[(2240), float64] */;
    %548 = @func_2822() /* ty=Tensor[(13, 9, 14), float32] */;
    %549 = %539.2;
    %550 = %540.2;
    %551 = %545.2;
    %552 = erf(%546) /* ty=Tensor[(13, 26), float64] */;
    %553 = @func_7513() /* ty=Tensor[(13, 9, 14), float32] */;
    %554 = cos(%547) /* ty=Tensor[(2240), float64] */;
    (%548, %549, %550, %551, %552, %553, %554)
  };
  %555(%var_18879, %var_18880) /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(28, 80), float32], Tensor[(13, 26), float64], Tensor[(13, 9, 14), float32], Tensor[(2240), float64]) */
}

def @func_6916(%var_6915: Tensor[(1638), float32]) -> (Tensor[(16, 8, 5), float64], Tensor[(13, 9, 14), uint32], Tensor[(1638), float32]) {
  %563 = fn (%var_6910: Tensor[(1638), float32]) -> (Tensor[(16, 8, 5), float64], Tensor[(13, 9, 14), uint32], Tensor[(1638), float32]) {
    %556 = @func_4126() /* ty=(Tensor[(16, 8, 5), uint64], Tensor[(11, 12, 7), float32], Tensor[(924), float64], Tensor[(640), uint64]) */;
    %557 = %556.0;
    %558 = cast(%557, dtype="float64") /* ty=Tensor[(16, 8, 5), float64] */;
    %559 = cast(%var_6910, dtype="float32") /* ty=Tensor[(1638), float32] */;
    %560 = reshape(%559, newshape=[13, 9, 14]) /* ty=Tensor[(13, 9, 14), float32] */;
    %561 = log2(%558) /* ty=Tensor[(16, 8, 5), float64] */;
    %562 = @func_3259(%560) /* ty=Tensor[(13, 9, 14), uint32] */;
    (%561, %562, %var_6910)
  };
  %563(%var_6915) /* ty=(Tensor[(16, 8, 5), float64], Tensor[(13, 9, 14), uint32], Tensor[(1638), float32]) */
}

def @func_5050() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %569 = fn () -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
    %564 = @func_4760() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
    %565 = @func_1404() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(338), int64]) */;
    %566 = %564.3;
    %567 = %565.0;
    %568 = @func_891() /* ty=Tensor[(13, 9, 14), float32] */;
    (%566, %567, %568)
  };
  %569() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */
}

def @func_14494(%var_14485: Tensor[(338), float32]) -> (Tensor[(11, 12, 7), float64], Tensor[(338), int32], Tensor[(338), float32]) {
  %570 = @func_10629() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(1, 924), float64], Tensor[(11, 12, 7), float64]) */;
  %571 = cast(%var_14485, dtype="float32") /* ty=Tensor[(338), float32] */;
  %572 = cast(%var_14485, dtype="uint16") /* ty=Tensor[(338), uint16] */;
  %573 = reshape(%571, newshape=[338]) /* ty=Tensor[(338), float32] */;
  %574 = reshape(%572, newshape=[338]) /* ty=Tensor[(338), uint16] */;
  %575 = @func_5864(%573, %574) /* ty=(Tensor[(338), int32], Tensor[(338), int64], Tensor[(338), float64]) */;
  %576 = %570.2;
  %577 = %575.0;
  (%576, %577, %var_14485)
}

def @func_4398() -> (Tensor[(13, 13, 2), int64], Tensor[(924), float64], Tensor[(13, 13, 2), float64]) {
  %586 = fn () -> (Tensor[(13, 13, 2), int64], Tensor[(924), float64], Tensor[(13, 13, 2), float64]) {
    %578 = @func_3674() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(10, 16, 14), float32]) */;
    %579 = @func_4126() /* ty=(Tensor[(16, 8, 5), uint64], Tensor[(11, 12, 7), float32], Tensor[(924), float64], Tensor[(640), uint64]) */;
    %580 = @func_2535() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(640), uint64], Tensor[(13, 13, 2), int64]) */;
    %581 = %580.3;
    %582 = cast(%581, dtype="float64") /* ty=Tensor[(13, 13, 2), float64] */;
    %583 = %578.2;
    %584 = %579.2;
    %585 = tan(%582) /* ty=Tensor[(13, 13, 2), float64] */;
    (%583, %584, %585)
  };
  %586() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(924), float64], Tensor[(13, 13, 2), float64]) */
}

def @func_5968() -> (Tensor[(13, 9, 14), float32],) {
  %588 = fn () -> (Tensor[(13, 9, 14), float32],) {
    %587 = @func_601() /* ty=Tensor[(13, 9, 14), float32] */;
    (%587,)
  };
  %588() /* ty=(Tensor[(13, 9, 14), float32],) */
}

def @func_14192() -> (Tensor[(13, 9, 14), float32],) {
  @func_14190() /* ty=(Tensor[(13, 9, 14), float32],) */
}

def @func_11513() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  @func_11511() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */
}

def @func_17963() -> Tensor[(13, 13, 2), int64] {
  %590 = fn () -> Tensor[(13, 13, 2), int64] {
    %589 = @func_3744() /* ty=(Tensor[(13, 13, 2), int64],) */;
    %589.0
  };
  %590() /* ty=Tensor[(13, 13, 2), int64] */
}

def @func_681() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(338), int64]) {
  %597 = fn () -> (Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(338), int64]) {
    %591 = cast(meta[relay.Constant][17] /* ty=Tensor[(338), int64] */, dtype="int64") /* ty=Tensor[(338), int64] */;
    %592 = cast(meta[relay.Constant][17] /* ty=Tensor[(338), int64] */, dtype="int64") /* ty=Tensor[(338), int64] */;
    %593 = reshape(%591, newshape=[13, 13, 2]) /* ty=Tensor[(13, 13, 2), int64] */;
    %594 = reshape(%592, newshape=[13, 13, 2]) /* ty=Tensor[(13, 13, 2), int64] */;
    %595 = @func_601() /* ty=Tensor[(13, 9, 14), float32] */;
    %596 = @func_400(%593, %594) /* ty=Tensor[(13, 13, 2), int64] */;
    (%595, %596, meta[relay.Constant][17] /* ty=Tensor[(338), int64] */)
  };
  %597() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(338), int64]) */
}

def @func_19410() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  @func_19408() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */
}

def @main(%var_20700: int64) -> (Tensor[(14, 2, 11), int64], Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(338), bool], Tensor[(13, 9, 14), float32], Tensor[(7392), float32]) {
  %598 = cast(%var_20700, dtype="int64") /* ty=int64 */;
  %599 = cast(meta[relay.Constant][18] /* ty=Tensor[(14, 2, 11), int64] */, dtype="int64") /* ty=Tensor[(14, 2, 11), int64] */;
  %600 = @func_16128() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64], Tensor[(13, 9, 14), float32]) */;
  %601 = @func_2180() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %602 = cast(meta[relay.Constant][19] /* ty=Tensor[(338), bool] */, dtype="bool") /* ty=Tensor[(338), bool] */;
  %603 = cast(meta[relay.Constant][20] /* ty=Tensor[(7392), float64] */, dtype="float64") /* ty=Tensor[(7392), float64] */;
  %604 = reshape(%602, newshape=[338]) /* ty=Tensor[(338), bool] */;
  %605 = reshape(%603, newshape=[7392]) /* ty=Tensor[(7392), float64] */;
  %606 = @func_14926(%604, %605) /* ty=(Tensor[(13, 9, 14), float32], Tensor[(338), float64], Tensor[(8, 924), int8], Tensor[(7392), float64]) */;
  %607 = @func_2814() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64]) */;
  %608 = cast(meta[relay.Constant][20] /* ty=Tensor[(7392), float64] */, dtype="float32") /* ty=Tensor[(7392), float32] */;
  %609 = cast(%var_20700, dtype="float32") /* ty=float32 */;
  %610 = bitwise_xor(%598, %599) /* ty=Tensor[(14, 2, 11), int64] */;
  %611 = %600.4;
  %612 = @func_2248() /* ty=Tensor[(16, 8, 5), uint64] */;
  %613 = %601.0;
  %614 = %606.0;
  %615 = %607.0;
  %616 = power(%608, %609) /* ty=Tensor[(7392), float32] */;
  (%610, %611, %612, %613, %614, meta[relay.Constant][19] /* ty=Tensor[(338), bool] */, %615, %616)
}

def @func_8995(%var_8993: Tensor[(338), int64]) -> (Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), bool], Tensor[(338), int64]) {
  @func_8992(%var_8993) /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), bool], Tensor[(338), int64]) */
}

def @func_13205(%var_13204: Tensor[(40, 16), uint64]) -> (Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64], Tensor[(40, 16), uint64]) {
  %622 = fn (%var_13192: Tensor[(40, 16), uint64]) -> (Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64], Tensor[(40, 16), uint64]) {
    %617 = cast(%var_13192, dtype="uint64") /* ty=Tensor[(40, 16), uint64] */;
    %618 = reshape(%617, newshape=[640]) /* ty=Tensor[(640), uint64] */;
    %619 = @func_12199(%618) /* ty=(Tensor[(13, 13, 2), int64], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64]) */;
    %620 = @func_6854() /* ty=Tensor[(13, 9, 14), float32] */;
    %621 = %619.1;
    (%620, %621, %var_13192)
  };
  %622(%var_13204) /* ty=(Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64], Tensor[(40, 16), uint64]) */
}

def @func_11532() -> (Tensor[(338), bool],) {
  %623 = @func_5203() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(11, 2, 2), uint8], Tensor[(13, 9, 14), int16], Tensor[(13, 9, 14), float32], Tensor[(338), int64]) */;
  %624 = %623.4;
  %625 = cast(%624, dtype="float64") /* ty=Tensor[(338), float64] */;
  %626 = sqrt(%625) /* ty=Tensor[(338), float64] */;
  %627 = cast(meta[relay.Constant][21] /* ty=Tensor[(338), float64] */, dtype="bool") /* ty=Tensor[(338), bool] */;
  %628 = shape_of(%626, dtype="int32") /* ty=Tensor[(1), int32] */;
  %629 = cast(%626, dtype="bool") /* ty=Tensor[(338), bool] */;
  %630 = dyn.reshape(%627, %628, newshape=[]) /* ty=Tensor[(?), bool] */;
  %631 = equal(%629, %630) /* ty=Tensor[(338), bool] */;
  (%631,)
}

def @func_17202(%var_17200: Tensor[(338), bool], %var_17201: Tensor[(7392), float64]) -> (Tensor[(16, 8, 5), uint64], Tensor[(7392), float64], Tensor[(338), bool], Tensor[(7392), float64]) {
  @func_17198(%var_17200, %var_17201) /* ty=(Tensor[(16, 8, 5), uint64], Tensor[(7392), float64], Tensor[(338), bool], Tensor[(7392), float64]) */
}

def @func_14497(%var_14495: Tensor[(338), float32]) -> (Tensor[(11, 12, 7), float64], Tensor[(338), int32], Tensor[(338), float32]) {
  @func_14494(%var_14495) /* ty=(Tensor[(11, 12, 7), float64], Tensor[(338), int32], Tensor[(338), float32]) */
}

def @func_5867(%var_5865: Tensor[(338), float32], %var_5866: Tensor[(338), uint16]) -> (Tensor[(338), int32], Tensor[(338), int64], Tensor[(338), float64]) {
  %651 = fn (%var_5804: Tensor[(338), float32], %var_5826: Tensor[(338), uint16]) -> (Tensor[(338), int32], Tensor[(338), int64], Tensor[(338), float64]) {
    %632 = @func_3408() /* ty=(Tensor[(338), float32],) */;
    %633 = %632.0;
    %634 = cast(%var_5804, dtype="int32") /* ty=Tensor[(338), int32] */;
    %635 = shape_of(%633, dtype="int32") /* ty=Tensor[(1), int32] */;
    %636 = cast(%633, dtype="int32") /* ty=Tensor[(338), int32] */;
    %637 = dyn.reshape(%634, %635, newshape=[]) /* ty=Tensor[(?), int32] */;
    %638 = cast(%633, dtype="uint16") /* ty=Tensor[(338), uint16] */;
    %639 = shape_of(%var_5804, dtype="int32") /* ty=Tensor[(1), int32] */;
    %640 = cast(%var_5804, dtype="uint16") /* ty=Tensor[(338), uint16] */;
    %641 = dyn.reshape(%638, %639, newshape=[]) /* ty=Tensor[(?), uint16] */;
    %642 = logical_xor(%640, %641) /* ty=Tensor[(338), uint16] */;
    %643 = cast(%var_5826, dtype="int64") /* ty=Tensor[(338), int64] */;
    %644 = shape_of(%642, dtype="int32") /* ty=Tensor[(1), int32] */;
    %645 = cast(%642, dtype="int64") /* ty=Tensor[(338), int64] */;
    %646 = dyn.reshape(%643, %644, newshape=[]) /* ty=Tensor[(?), int64] */;
    %647 = cast(%642, dtype="float64") /* ty=Tensor[(338), float64] */;
    %648 = subtract(%636, %637) /* ty=Tensor[(338), int32] */;
    %649 = bitwise_and(%645, %646) /* ty=Tensor[(338), int64] */;
    %650 = acosh(%647) /* ty=Tensor[(338), float64] */;
    (%648, %649, %650)
  };
  %651(%var_5865, %var_5866) /* ty=(Tensor[(338), int32], Tensor[(338), int64], Tensor[(338), float64]) */
}

def @func_12202(%var_12200: Tensor[(640), uint64]) -> (Tensor[(13, 13, 2), int64], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64]) {
  @func_12199(%var_12200) /* ty=(Tensor[(13, 13, 2), int64], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64]) */
}

def @func_19408() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %652 = @func_15803() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) */;
  %653 = @func_9669() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64], Tensor[(20, 32), uint64], Tensor[(13, 9, 14), float32]) */;
  %654 = %652.1;
  %655 = %653.0;
  (%654, %655)
}

def @func_3220() -> Tensor[(13, 9, 14), float32] {
  %657 = fn () -> Tensor[(13, 9, 14), float32] {
    %656 = @func_2812() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64]) */;
    %656.0
  };
  %657() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_8673() -> (Tensor[(13, 13, 2), int64], Tensor[(924, ?), bool]) {
  %658 = @func_680() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(338), int64]) */;
  %659 = %658.1;
  %660 = cast(%659, dtype="int64") /* ty=Tensor[(13, 13, 2), int64] */;
  %661 = cast(meta[relay.Constant][22] /* ty=Tensor[(924, 1), float64] */, dtype="float64") /* ty=Tensor[(924, 1), float64] */;
  %662 = cast(meta[relay.Constant][22] /* ty=Tensor[(924, 1), float64] */, dtype="float64") /* ty=Tensor[(924, 1), float64] */;
  %663 = reshape(%660, newshape=[338]) /* ty=Tensor[(338), int64] */;
  %664 = reshape(%661, newshape=[154, 6]) /* ty=Tensor[(154, 6), float64] */;
  %665 = reshape(%662, newshape=[154, 6]) /* ty=Tensor[(154, 6), float64] */;
  %666 = @func_2865(%663, %664, %665) /* ty=(Tensor[(16, 8, 5), uint64], Tensor[(13, 13, 2), int64], Tensor[(338), int64], Tensor[(11, 12, 7), float32], Tensor[(13, 9, 14), float32], Tensor[(154, 6), float64]) */;
  %667 = %666.3;
  %668 = cast(%667, dtype="bool") /* ty=Tensor[(11, 12, 7), bool] */;
  %669 = shape_of(meta[relay.Constant][22] /* ty=Tensor[(924, 1), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %670 = cast(meta[relay.Constant][22] /* ty=Tensor[(924, 1), float64] */, dtype="bool") /* ty=Tensor[(924, 1), bool] */;
  %671 = dyn.reshape(%668, %669, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %672 = not_equal(%670, %671) /* ty=Tensor[(924, ?), bool] */;
  (%659, %672)
}

def @func_10434() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %677 = fn () -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
    %673 = @func_5932() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
    %674 = @func_8219() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(338), int64]) */;
    %675 = %673.0;
    %676 = %674.0;
    (%675, %676)
  };
  %677() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */
}

def @func_1404() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(338), int64]) {
  %678 = @func_680() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(338), int64]) */;
  %679 = @func_601() /* ty=Tensor[(13, 9, 14), float32] */;
  %680 = @func_616() /* ty=Tensor[(13, 9, 14), float32] */;
  %681 = @func_891() /* ty=Tensor[(13, 9, 14), float32] */;
  %682 = %678.2;
  (%679, %680, %681, %682)
}

def @func_2812() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64]) {
  %683 = @func_1459() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float64]) */;
  %684 = @func_601() /* ty=Tensor[(13, 9, 14), float32] */;
  %685 = %683.0;
  (%684, %685)
}

def @func_11192() -> (Tensor[(13, 9, 14), float32],) {
  %686 = @func_2822() /* ty=Tensor[(13, 9, 14), float32] */;
  (%686,)
}

def @func_19930() -> Tensor[(13, 13, 2), int64] {
  @func_19928() /* ty=Tensor[(13, 13, 2), int64] */
}

def @func_12319() -> Tensor[(13, 9, 14), float32] {
  %687 = fn () -> Tensor[(13, 9, 14), float32] {
    @func_3183() /* ty=Tensor[(13, 9, 14), float32] */
  };
  %687() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_16146() -> (Tensor[(7, 5, 15), float64],) {
  %688 = @func_11695() /* ty=Tensor[(7, 5, 15), float64] */;
  (%688,)
}

def @func_16973() -> Tensor[(13, 9, 14), float32] {
  %690 = fn () -> Tensor[(13, 9, 14), float32] {
    %689 = @func_14662() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), uint32]) */;
    %689.0
  };
  %690() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_10682() -> (Tensor[(10, 16, 14), float32],) {
  %693 = fn () -> (Tensor[(10, 16, 14), float32],) {
    %691 = @func_5336() /* ty=(Tensor[(10, 16, 14), float32], Tensor[(13, 9, 14), float32]) */;
    %692 = %691.0;
    (%692,)
  };
  %693() /* ty=(Tensor[(10, 16, 14), float32],) */
}

def @func_5361() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %696 = fn () -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
    %694 = @func_4862() /* ty=Tensor[(13, 9, 14), float32] */;
    %695 = @func_4218() /* ty=Tensor[(13, 9, 14), float32] */;
    (%694, %695)
  };
  %696() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */
}

def @func_2653() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %697 = @func_968() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %698 = @func_1944() /* ty=Tensor[(13, 9, 14), float32] */;
  %699 = %697.1;
  %700 = @func_616() /* ty=Tensor[(13, 9, 14), float32] */;
  (%698, %699, %700)
}

def @func_13680() -> (Tensor[(13, 13, 2), int64],) {
  %701 = @func_13578() /* ty=(Tensor[(13, 13, 2), int64],) */;
  %702 = %701.0;
  (%702,)
}

def @func_15021() -> Tensor[(13, 9, 14), float32] {
  %703 = @func_9930() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %703.0
}

def @func_14291() -> Tensor[(13, 9, 14), float32] {
  @func_14289() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_19687() -> Tensor[(13, 9, 14), float32] {
  @func_2401() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_14109() -> (Tensor[(13, 9, 14), float32],) {
  %704 = @func_12219() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %705 = %704.0;
  (%705,)
}

def @func_16622() -> Tensor[(13, 13, 2), int64] {
  %706 = fn () -> Tensor[(13, 13, 2), int64] {
    @func_9537() /* ty=Tensor[(13, 13, 2), int64] */
  };
  %706() /* ty=Tensor[(13, 13, 2), int64] */
}

def @func_8578() -> (Tensor[(13, 9, 14), float32],) {
  %707 = @func_4044() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %708 = %707.0;
  (%708,)
}

def @func_16148() -> (Tensor[(7, 5, 15), float64],) {
  @func_16146() /* ty=(Tensor[(7, 5, 15), float64],) */
}

def @func_11811() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), float64], Tensor[(13, 9, 14), uint8]) {
  %709 = @func_8204() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %710 = @func_4397() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(924), float64], Tensor[(13, 13, 2), float64]) */;
  %711 = @func_4091() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), uint8]) */;
  %712 = %709.0;
  %713 = %710.2;
  %714 = %711.1;
  (%712, %713, %714)
}

def @func_12883() -> (Tensor[(13, 13, 2), float64], Tensor[(13, 9, 14), float32]) {
  %715 = @func_11811() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), float64], Tensor[(13, 9, 14), uint8]) */;
  %716 = %715.1;
  %717 = @func_616() /* ty=Tensor[(13, 9, 14), float32] */;
  (%716, %717)
}

def @func_1691() -> (Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), int16], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64]) {
  %718 = @func_1459() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float64]) */;
  %719 = @func_601() /* ty=Tensor[(13, 9, 14), float32] */;
  %720 = @func_968() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %721 = %720.1;
  %722 = cast(%721, dtype="int16") /* ty=Tensor[(13, 9, 14), int16] */;
  %723 = shape_of(%719, dtype="int32") /* ty=Tensor[(3), int32] */;
  %724 = cast(%719, dtype="int16") /* ty=Tensor[(13, 9, 14), int16] */;
  %725 = dyn.reshape(%722, %723, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %726 = cast(meta[relay.Constant][23] /* ty=Tensor[(640), uint64] */, dtype="uint64") /* ty=Tensor[(640), uint64] */;
  %727 = cast(meta[relay.Constant][23] /* ty=Tensor[(640), uint64] */, dtype="uint64") /* ty=Tensor[(640), uint64] */;
  %728 = reshape(%726, newshape=[16, 8, 5]) /* ty=Tensor[(16, 8, 5), uint64] */;
  %729 = reshape(%727, newshape=[16, 8, 5]) /* ty=Tensor[(16, 8, 5), uint64] */;
  %730 = @func_245(%728, %729) /* ty=(Tensor[(16, 8, 5), uint64],) */;
  %731 = %718.0;
  %732 = subtract(%724, %725) /* ty=Tensor[(13, 9, 14), int16] */;
  %733 = %730.0;
  (%731, %732, %733, meta[relay.Constant][23] /* ty=Tensor[(640), uint64] */)
}

def @func_2535() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(640), uint64], Tensor[(13, 13, 2), int64]) {
  %734 = cast(meta[relay.Constant][24] /* ty=Tensor[(640), uint64] */, dtype="uint64") /* ty=Tensor[(640), uint64] */;
  %735 = reshape(%734, newshape=[640]) /* ty=Tensor[(640), uint64] */;
  %736 = @func_2079(%735) /* ty=(Tensor[(13, 13, 2), int64], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64], Tensor[(13, 13, 2), int64]) */;
  %737 = @func_1906() /* ty=(Tensor[(13, 13, 2), int64],) */;
  %738 = @func_718() /* ty=Tensor[(13, 9, 14), float32] */;
  %739 = %736.0;
  %740 = %737.0;
  (%738, %739, meta[relay.Constant][24] /* ty=Tensor[(640), uint64] */, %740)
}

def @func_2655() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  @func_2653() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */
}

def @func_8220() -> (Tensor[(13, 9, 14), float32], Tensor[(338), int64]) {
  %744 = fn () -> (Tensor[(13, 9, 14), float32], Tensor[(338), int64]) {
    %741 = @func_5492() /* ty=(Tensor[(338), int64],) */;
    %742 = @func_3462() /* ty=Tensor[(13, 9, 14), float32] */;
    %743 = %741.0;
    (%742, %743)
  };
  %744() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(338), int64]) */
}

def @func_5479(%var_5478: Tensor[(13, 26), int64]) -> (Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(13, 26), int64], Tensor[(924), float64]) {
  %755 = fn (%var_5468: Tensor[(13, 26), int64]) -> (Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(13, 26), int64], Tensor[(924), float64]) {
    %745 = @func_5049() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
    %746 = cast(%var_5468, dtype="int64") /* ty=Tensor[(13, 26), int64] */;
    %747 = cast(meta[relay.Constant][25] /* ty=Tensor[(924), float64] */, dtype="float64") /* ty=Tensor[(924), float64] */;
    %748 = cast(meta[relay.Constant][25] /* ty=Tensor[(924), float64] */, dtype="float64") /* ty=Tensor[(924), float64] */;
    %749 = reshape(%746, newshape=[338]) /* ty=Tensor[(338), int64] */;
    %750 = reshape(%747, newshape=[154, 6]) /* ty=Tensor[(154, 6), float64] */;
    %751 = reshape(%748, newshape=[154, 6]) /* ty=Tensor[(154, 6), float64] */;
    %752 = @func_2865(%749, %750, %751) /* ty=(Tensor[(16, 8, 5), uint64], Tensor[(13, 13, 2), int64], Tensor[(338), int64], Tensor[(11, 12, 7), float32], Tensor[(13, 9, 14), float32], Tensor[(154, 6), float64]) */;
    %753 = %745.1;
    %754 = %752.1;
    (%753, %754, %var_5468, meta[relay.Constant][25] /* ty=Tensor[(924), float64] */)
  };
  %755(%var_5478) /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(13, 26), int64], Tensor[(924), float64]) */
}

def @func_8992(%var_8981: Tensor[(338), int64]) -> (Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), bool], Tensor[(338), int64]) {
  %756 = cast(%var_8981, dtype="int64") /* ty=Tensor[(338), int64] */;
  %757 = reshape(%756, newshape=[13, 13, 2]) /* ty=Tensor[(13, 13, 2), int64] */;
  %758 = @func_2401() /* ty=Tensor[(13, 9, 14), float32] */;
  %759 = @func_4929(%757) /* ty=Tensor[(13, 13, 2), bool] */;
  (%758, %759, %var_8981)
}

def @func_19295() -> (Tensor[(13, 9, 14), float32],) {
  %760 = @func_11846() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %761 = %760.1;
  (%761,)
}

def @func_403(%var_401: Tensor[(13, 13, 2), int64], %var_402: Tensor[(13, 13, 2), int64]) -> Tensor[(13, 13, 2), int64] {
  %766 = fn (%var_394: Tensor[(13, 13, 2), int64], %var_395: Tensor[(13, 13, 2), int64]) -> Tensor[(13, 13, 2), int64] {
    %762 = cast(%var_395, dtype="int64") /* ty=Tensor[(13, 13, 2), int64] */;
    %763 = shape_of(%var_394, dtype="int32") /* ty=Tensor[(3), int32] */;
    %764 = cast(%var_394, dtype="int64") /* ty=Tensor[(13, 13, 2), int64] */;
    %765 = dyn.reshape(%762, %763, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    multiply(%764, %765) /* ty=Tensor[(13, 13, 2), int64] */
  };
  %766(%var_401, %var_402) /* ty=Tensor[(13, 13, 2), int64] */
}

def @func_17543() -> Tensor[(13, 9, 14), float32] {
  %767 = @func_6176() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(13, 13, 2), int64]) */;
  %767.0
}

def @func_5204() -> (Tensor[(13, 9, 14), float32], Tensor[(11, 2, 2), uint8], Tensor[(13, 9, 14), int16], Tensor[(13, 9, 14), float32], Tensor[(338), int64]) {
  %782 = fn () -> (Tensor[(13, 9, 14), float32], Tensor[(11, 2, 2), uint8], Tensor[(13, 9, 14), int16], Tensor[(13, 9, 14), float32], Tensor[(338), int64]) {
    %768 = cast(meta[relay.Constant][26] /* ty=Tensor[(44), float32] */, dtype="float32") /* ty=Tensor[(44), float32] */;
    %769 = reshape(%768, newshape=[11, 2, 2]) /* ty=Tensor[(11, 2, 2), float32] */;
    %770 = @func_2357(%769) /* ty=Tensor[(11, 2, 2), float32] */;
    %771 = cast(meta[relay.Constant][26] /* ty=Tensor[(44), float32] */, dtype="uint8") /* ty=Tensor[(44), uint8] */;
    %772 = shape_of(%770, dtype="int32") /* ty=Tensor[(3), int32] */;
    %773 = cast(%770, dtype="uint8") /* ty=Tensor[(11, 2, 2), uint8] */;
    %774 = dyn.reshape(%771, %772, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %775 = @func_1691() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), int16], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64]) */;
    %776 = @func_680() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(338), int64]) */;
    %777 = @func_3203() /* ty=Tensor[(13, 9, 14), float32] */;
    %778 = multiply(%773, %774) /* ty=Tensor[(11, 2, 2), uint8] */;
    %779 = %775.1;
    %780 = @func_1338() /* ty=Tensor[(13, 9, 14), float32] */;
    %781 = %776.2;
    (%777, %778, %779, %780, %781)
  };
  %782() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(11, 2, 2), uint8], Tensor[(13, 9, 14), int16], Tensor[(13, 9, 14), float32], Tensor[(338), int64]) */
}

def @func_10282() -> (Tensor[(924, ?), float64],) {
  @func_10280() /* ty=(Tensor[(924, ?), float64],) */
}

def @func_15150() -> Tensor[(13, 9, 14), float32] {
  %784 = fn () -> Tensor[(13, 9, 14), float32] {
    %783 = @func_12575() /* ty=(Tensor[(13, 9, 14), float32],) */;
    %783.0
  };
  %784() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_13013(%var_13011: Tensor[(6, 10, 6), float32]) -> (Tensor[(6, 10, 6), float32], Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) {
  @func_13010(%var_13011) /* ty=(Tensor[(6, 10, 6), float32], Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) */
}

def @func_16986() -> (Tensor[(13, 9, 14), float32],) {
  @func_16984() /* ty=(Tensor[(13, 9, 14), float32],) */
}

def @func_17902() -> (Tensor[(13, 9, 14), float64], Tensor[(13, 13, 2), int64]) {
  %785 = @func_16076() /* ty=(Tensor[(13, 9, 14), float64], Tensor[(16, 8, 5), uint64]) */;
  %786 = @func_13680() /* ty=(Tensor[(13, 13, 2), int64],) */;
  %787 = %785.0;
  %788 = %786.0;
  (%787, %788)
}

def @func_5731() -> (Tensor[(13, 9, 14), float32],) {
  @func_5729() /* ty=(Tensor[(13, 9, 14), float32],) */
}

def @func_13010(%var_12973: Tensor[(6, 10, 6), float32]) -> (Tensor[(6, 10, 6), float32], Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) {
  %789 = cast(%var_12973, dtype="float32") /* ty=Tensor[(6, 10, 6), float32] */;
  %790 = @func_8762() /* ty=(Tensor[(13, 13, 2), int64],) */;
  %791 = @func_5932() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %792 = acos(%789) /* ty=Tensor[(6, 10, 6), float32] */;
  %793 = %790.0;
  %794 = %791.0;
  (%792, %793, %794)
}

def @func_18658() -> (Tensor[(10, 16, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(7, 5, 15), float64]) {
  %795 = @func_5932() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %796 = @func_16665() /* ty=(Tensor[(7, 5, 15), float64], Tensor[(338), float64], Tensor[(338), float32]) */;
  %797 = @func_4701() /* ty=Tensor[(10, 16, 14), float32] */;
  %798 = %795.1;
  %799 = %796.0;
  (%797, %798, %799)
}

def @func_15803() -> (Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) {
  %800 = @func_8673() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(924, ?), bool]) */;
  %801 = %800.0;
  %802 = @func_3183() /* ty=Tensor[(13, 9, 14), float32] */;
  (%801, %802)
}

def @func_11697() -> Tensor[(7, 5, 15), float64] {
  @func_11695() /* ty=Tensor[(7, 5, 15), float64] */
}

def @func_12303(%var_12301: Tensor[(338), int64]) -> (Tensor[(11, 12, 7), float64], Tensor[(338), float32]) {
  @func_12300(%var_12301) /* ty=(Tensor[(11, 12, 7), float64], Tensor[(338), float32]) */
}

def @func_19481() -> Tensor[(13, 9, 14), float32] {
  @func_19479() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_10468() -> (Tensor[(13, 9, 14), float32],) {
  @func_10466() /* ty=(Tensor[(13, 9, 14), float32],) */
}

def @func_9209() -> Tensor[(13, 9, 14), float32] {
  %803 = fn () -> Tensor[(13, 9, 14), float32] {
    @func_891() /* ty=Tensor[(13, 9, 14), float32] */
  };
  %803() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_19297() -> (Tensor[(13, 9, 14), float32],) {
  @func_19295() /* ty=(Tensor[(13, 9, 14), float32],) */
}

def @func_7718() -> Tensor[(13, 9, 14), float32] {
  @func_7716() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_970() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  @func_968() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */
}

def @func_1908() -> (Tensor[(13, 13, 2), int64],) {
  @func_1906() /* ty=(Tensor[(13, 13, 2), int64],) */
}

def @func_17087() -> (Tensor[(13, 9, 14), float32],) {
  %804 = @func_14109() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %805 = %804.0;
  (%805,)
}

def @func_1340() -> Tensor[(13, 9, 14), float32] {
  @func_1338() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_1291(%var_1278: Tensor[(11, 12, 7), float64]) -> Tensor[(11, 12, 7), float32] {
  %806 = cast(%var_1278, dtype="float64") /* ty=Tensor[(11, 12, 7), float64] */;
  %807 = rsqrt(%806) /* ty=Tensor[(11, 12, 7), float64] */;
  %808 = cast(%807, dtype="float32") /* ty=Tensor[(11, 12, 7), float32] */;
  %809 = shape_of(%var_1278, dtype="int32") /* ty=Tensor[(3), int32] */;
  %810 = cast(%var_1278, dtype="float32") /* ty=Tensor[(11, 12, 7), float32] */;
  %811 = dyn.reshape(%808, %809, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  power(%810, %811) /* ty=Tensor[(11, 12, 7), float32] */
}

def @func_18488(%var_18475: Tensor[(338), int64], %var_18486: Tensor[(1638), float32]) -> (Tensor[(338), int64], Tensor[(13, 9, 14), float32], Tensor[(1638), float32]) {
  %812 = @func_5492() /* ty=(Tensor[(338), int64],) */;
  %813 = %812.0;
  %814 = cast(%var_18475, dtype="int64") /* ty=Tensor[(338), int64] */;
  %815 = shape_of(%813, dtype="int32") /* ty=Tensor[(1), int32] */;
  %816 = cast(%813, dtype="int64") /* ty=Tensor[(338), int64] */;
  %817 = dyn.reshape(%814, %815, newshape=[]) /* ty=Tensor[(?), int64] */;
  %818 = cast(%var_18486, dtype="float32") /* ty=Tensor[(1638), float32] */;
  %819 = reshape(%818, newshape=[13, 9, 14]) /* ty=Tensor[(13, 9, 14), float32] */;
  %820 = @func_7882(%819) /* ty=(Tensor[(13, 9, 14), bool], Tensor[(13, 9, 14), float32], Tensor[(640), uint64]) */;
  %821 = right_shift(%816, %817) /* ty=Tensor[(338), int64] */;
  %822 = %820.1;
  (%821, %822, %var_18486)
}

def @func_4904() -> (Tensor[(13, 9, 14), float32],) {
  @func_4902() /* ty=(Tensor[(13, 9, 14), float32],) */
}

def @func_6803() -> Tensor[(13, 9, 14), float32] {
  %824 = fn () -> Tensor[(13, 9, 14), float32] {
    %823 = @func_4902() /* ty=(Tensor[(13, 9, 14), float32],) */;
    %823.0
  };
  %824() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_10238() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) {
  @func_10236() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) */
}

def @func_893() -> Tensor[(13, 9, 14), float32] {
  @func_891() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_12136() -> (Tensor[(13, 13, 2), int64], Tensor[(13, 13, 2), int64]) {
  %829 = fn () -> (Tensor[(13, 13, 2), int64], Tensor[(13, 13, 2), int64]) {
    %825 = @func_7609() /* ty=(Tensor[(13, 13, 2), int64],) */;
    %826 = @func_3987() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float64], Tensor[(13, 13, 2), int64]) */;
    %827 = %825.0;
    %828 = %826.2;
    (%827, %828)
  };
  %829() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 13, 2), int64]) */
}

def @func_1461() -> (Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float64]) {
  @func_1459() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float64]) */
}

def @func_17545() -> Tensor[(13, 9, 14), float32] {
  @func_17543() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_1960(%var_1958: Tensor[(640), uint64]) -> (Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64]) {
  @func_1957(%var_1958) /* ty=(Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64]) */
}

def @func_19063() -> (Tensor[(13, 13, 2), int64],) {
  %832 = fn () -> (Tensor[(13, 13, 2), int64],) {
    %830 = @func_13578() /* ty=(Tensor[(13, 13, 2), int64],) */;
    %831 = %830.0;
    (%831,)
  };
  %832() /* ty=(Tensor[(13, 13, 2), int64],) */
}

def @func_11625() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  @func_11623() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */
}

def @func_15866() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), bool]) {
  %833 = @func_1906() /* ty=(Tensor[(13, 13, 2), int64],) */;
  %834 = @func_15406() /* ty=(Tensor[(338), bool], Tensor[(13, 9, 14), float32]) */;
  %835 = %833.0;
  %836 = cast(%835, dtype="int64") /* ty=Tensor[(13, 13, 2), int64] */;
  %837 = reshape(%836, newshape=[13, 13, 2]) /* ty=Tensor[(13, 13, 2), int64] */;
  %838 = @func_9705() /* ty=Tensor[(13, 9, 14), float32] */;
  %839 = %834.1;
  %840 = @func_4929(%837) /* ty=Tensor[(13, 13, 2), bool] */;
  (%838, %835, %839, %840)
}

def @func_603() -> Tensor[(13, 9, 14), float32] {
  @func_601() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_4702() -> Tensor[(10, 16, 14), float32] {
  %841 = fn () -> Tensor[(10, 16, 14), float32] {
    @func_3021() /* ty=Tensor[(10, 16, 14), float32] */
  };
  %841() /* ty=Tensor[(10, 16, 14), float32] */
}

def @func_18401() -> (Tensor[(10, 16, 14), float32],) {
  @func_18399() /* ty=(Tensor[(10, 16, 14), float32],) */
}

def @func_14057() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %842 = @func_6379() /* ty=Tensor[(13, 9, 14), float32] */;
  %843 = @func_11146() /* ty=Tensor[(13, 9, 14), float32] */;
  (%842, %843)
}

def @func_9415(%var_9413: Tensor[(338), int64]) -> (Tensor[(13, 9, 14), float32], Tensor[(338, 1), int64], Tensor[(378), float32], Tensor[(338), int64]) {
  @func_9412(%var_9413) /* ty=(Tensor[(13, 9, 14), float32], Tensor[(338, 1), int64], Tensor[(378), float32], Tensor[(338), int64]) */
}

def @func_3602() -> (Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) {
  @func_3600() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) */
}

def @func_3096() -> (Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float64], Tensor[(1638), float32], Tensor[(13, 9, 14), float32]) {
  %844 = @func_1459() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float64]) */;
  %845 = cast(meta[relay.Constant][27] /* ty=Tensor[(1638), float32] */, dtype="float32") /* ty=Tensor[(1638), float32] */;
  %846 = reshape(%845, newshape=[13, 9, 14]) /* ty=Tensor[(13, 9, 14), float32] */;
  %847 = @func_1780(%846) /* ty=(Tensor[(13, 9, 14), float64],) */;
  %848 = %844.0;
  %849 = %847.0;
  %850 = @func_2822() /* ty=Tensor[(13, 9, 14), float32] */;
  (%848, %849, meta[relay.Constant][27] /* ty=Tensor[(1638), float32] */, %850)
}

def @func_4762() -> (Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  @func_4760() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */
}

def @func_15055() -> Tensor[(338), int64] {
  @func_15053() /* ty=Tensor[(338), int64] */
}

def @func_13102() -> (Tensor[(13, 13, 2), int64], Tensor[(13, 13, 2), int64]) {
  @func_13100() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 13, 2), int64]) */
}

def @func_16253() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float64]) {
  %858 = fn () -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float64]) {
    %851 = @func_968() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
    %852 = @func_616() /* ty=Tensor[(13, 9, 14), float32] */;
    %853 = cast(%852, dtype="float32") /* ty=Tensor[(13, 9, 14), float32] */;
    %854 = reshape(%853, newshape=[13, 9, 14]) /* ty=Tensor[(13, 9, 14), float32] */;
    %855 = @func_1780(%854) /* ty=(Tensor[(13, 9, 14), float64],) */;
    %856 = %851.2;
    %857 = %855.0;
    (%856, %852, %857)
  };
  %858() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float64]) */
}

def @func_9412(%var_9408: Tensor[(338), int64]) -> (Tensor[(13, 9, 14), float32], Tensor[(338, 1), int64], Tensor[(378), float32], Tensor[(338), int64]) {
  %859 = @func_5610() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %860 = cast(meta[relay.Constant][28] /* ty=Tensor[(378), float32] */, dtype="float32") /* ty=Tensor[(378), float32] */;
  %861 = cast(meta[relay.Constant][28] /* ty=Tensor[(378), float32] */, dtype="float32") /* ty=Tensor[(378), float32] */;
  %862 = cast(%var_9408, dtype="int64") /* ty=Tensor[(338), int64] */;
  %863 = reshape(%860, newshape=[9, 6, 7]) /* ty=Tensor[(9, 6, 7), float32] */;
  %864 = reshape(%861, newshape=[9, 6, 7]) /* ty=Tensor[(9, 6, 7), float32] */;
  %865 = reshape(%862, newshape=[338, 1]) /* ty=Tensor[(338, 1), int64] */;
  %866 = @func_6676(%863, %864, %865) /* ty=(Tensor[(9, 6, 7), float32], Tensor[(13, 13, 2), bool], Tensor[(338, 1), int64]) */;
  %867 = %859.1;
  %868 = %866.2;
  (%867, %868, meta[relay.Constant][28] /* ty=Tensor[(378), float32] */, %var_9408)
}

def @func_13682() -> (Tensor[(13, 13, 2), int64],) {
  @func_13680() /* ty=(Tensor[(13, 13, 2), int64],) */
}

def @func_17276(%var_17275: Tensor[(16, 11, 12), int16]) -> (Tensor[(16, 11, 12), uint64],) {
  %879 = fn (%var_17264: Tensor[(16, 11, 12), int16]) -> (Tensor[(16, 11, 12), uint64],) {
    %869 = cast(meta[relay.Constant][29] /* ty=Tensor[(16, 11, 12), int16] */, dtype="bool") /* ty=Tensor[(16, 11, 12), bool] */;
    %870 = shape_of(%var_17264, dtype="int32") /* ty=Tensor[(3), int32] */;
    %871 = cast(%var_17264, dtype="bool") /* ty=Tensor[(16, 11, 12), bool] */;
    %872 = dyn.reshape(%869, %870, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %873 = less(%871, %872) /* ty=Tensor[(16, 11, 12), bool] */;
    %874 = cast(%var_17264, dtype="uint64") /* ty=Tensor[(16, 11, 12), uint64] */;
    %875 = shape_of(%873, dtype="int32") /* ty=Tensor[(3), int32] */;
    %876 = cast(%873, dtype="uint64") /* ty=Tensor[(16, 11, 12), uint64] */;
    %877 = dyn.reshape(%874, %875, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %878 = bitwise_xor(%876, %877) /* ty=Tensor[(16, 11, 12), uint64] */;
    (%878,)
  };
  %879(%var_17275) /* ty=(Tensor[(16, 11, 12), uint64],) */
}

def @func_13100() -> (Tensor[(13, 13, 2), int64], Tensor[(13, 13, 2), int64]) {
  %880 = @func_8605() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %881 = @func_1906() /* ty=(Tensor[(13, 13, 2), int64],) */;
  %882 = %880.0;
  %883 = %881.0;
  (%882, %883)
}

def @func_18399() -> (Tensor[(10, 16, 14), float32],) {
  %884 = @func_3674() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(10, 16, 14), float32]) */;
  %885 = %884.3;
  (%885,)
}

def @func_968() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %886 = @func_891() /* ty=Tensor[(13, 9, 14), float32] */;
  %887 = @func_616() /* ty=Tensor[(13, 9, 14), float32] */;
  %888 = @func_616() /* ty=Tensor[(13, 9, 14), float32] */;
  (%886, %887, %888)
}

def @func_10630() -> (Tensor[(13, 13, 2), int64], Tensor[(1, 924), float64], Tensor[(11, 12, 7), float64]) {
  %899 = fn () -> (Tensor[(13, 13, 2), int64], Tensor[(1, 924), float64], Tensor[(11, 12, 7), float64]) {
    %889 = @func_7090() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(10, 16, 14), float32]) */;
    %890 = cast(meta[relay.Constant][30] /* ty=Tensor[(1, 924), float64] */, dtype="float64") /* ty=Tensor[(1, 924), float64] */;
    %891 = reshape(%890, newshape=[11, 12, 7]) /* ty=Tensor[(11, 12, 7), float64] */;
    %892 = @func_1291(%891) /* ty=Tensor[(11, 12, 7), float32] */;
    %893 = cast(meta[relay.Constant][31] /* ty=Tensor[(11, 12, 7), float32] */, dtype="float64") /* ty=Tensor[(11, 12, 7), float64] */;
    %894 = shape_of(%892, dtype="int32") /* ty=Tensor[(3), int32] */;
    %895 = cast(%892, dtype="float64") /* ty=Tensor[(11, 12, 7), float64] */;
    %896 = dyn.reshape(%893, %894, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %897 = %889.0;
    %898 = divide(%895, %896) /* ty=Tensor[(11, 12, 7), float64] */;
    (%897, meta[relay.Constant][30] /* ty=Tensor[(1, 924), float64] */, %898)
  };
  %899() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(1, 924), float64], Tensor[(11, 12, 7), float64]) */
}

def @func_9805(%var_9804: Tensor[(338), float32]) -> (Tensor[(338), bool], Tensor[(13, 9, 14), float32]) {
  %907 = fn (%var_9785: Tensor[(338), float32]) -> (Tensor[(338), bool], Tensor[(13, 9, 14), float32]) {
    %900 = @func_7417() /* ty=Tensor[(338), float32] */;
    %901 = cast(%var_9785, dtype="bool") /* ty=Tensor[(338), bool] */;
    %902 = shape_of(%900, dtype="int32") /* ty=Tensor[(1), int32] */;
    %903 = cast(%900, dtype="bool") /* ty=Tensor[(338), bool] */;
    %904 = dyn.reshape(%901, %902, newshape=[]) /* ty=Tensor[(?), bool] */;
    %905 = logical_or(%903, %904) /* ty=Tensor[(338), bool] */;
    %906 = @func_6802() /* ty=Tensor[(13, 9, 14), float32] */;
    (%905, %906)
  };
  %907(%var_9804) /* ty=(Tensor[(338), bool], Tensor[(13, 9, 14), float32]) */
}

def @func_20232(%var_20177: Tensor[(924), float64]) -> (Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(924), float64], Tensor[(13, 9, 14), float32], Tensor[(10, 16, 14), float64], Tensor[(13, 9, 14), float32]) {
  %908 = @func_7111() /* ty=Tensor[(13, 13, 2), int64] */;
  %909 = cast(%908, dtype="int64") /* ty=Tensor[(13, 13, 2), int64] */;
  %910 = cast(%var_20177, dtype="float64") /* ty=Tensor[(924), float64] */;
  %911 = cast(%var_20177, dtype="float64") /* ty=Tensor[(924), float64] */;
  %912 = reshape(%909, newshape=[338]) /* ty=Tensor[(338), int64] */;
  %913 = reshape(%910, newshape=[154, 6]) /* ty=Tensor[(154, 6), float64] */;
  %914 = reshape(%911, newshape=[154, 6]) /* ty=Tensor[(154, 6), float64] */;
  %915 = @func_2865(%912, %913, %914) /* ty=(Tensor[(16, 8, 5), uint64], Tensor[(13, 13, 2), int64], Tensor[(338), int64], Tensor[(11, 12, 7), float32], Tensor[(13, 9, 14), float32], Tensor[(154, 6), float64]) */;
  %916 = @func_18812() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %917 = @func_4701() /* ty=Tensor[(10, 16, 14), float32] */;
  %918 = cast(%917, dtype="float64") /* ty=Tensor[(10, 16, 14), float64] */;
  %919 = @func_11511() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %920 = %915.4;
  %921 = %916.0;
  %922 = sigmoid(%918) /* ty=Tensor[(10, 16, 14), float64] */;
  %923 = %919.1;
  (%908, %920, %var_20177, %921, %922, %923)
}

def @func_15053() -> Tensor[(338), int64] {
  @func_13279() /* ty=Tensor[(338), int64] */
}

def @func_601() -> Tensor[(13, 9, 14), float32] {
  %924 = cast(meta[relay.Constant][32] /* ty=Tensor[(13, 9, 14), float32] */, dtype="float32") /* ty=Tensor[(13, 9, 14), float32] */;
  log2(%924) /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_3183() -> Tensor[(13, 9, 14), float32] {
  %925 = @func_2178() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %925.0
}

def @func_6379() -> Tensor[(13, 9, 14), float32] {
  %926 = @func_1404() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(338), int64]) */;
  %926.0
}

def @func_4902() -> (Tensor[(13, 9, 14), float32],) {
  %927 = @func_4218() /* ty=Tensor[(13, 9, 14), float32] */;
  (%927,)
}

def @func_14433(%var_14431: Tensor[(338), int64]) -> Tensor[(338), float32] {
  @func_14430(%var_14431) /* ty=Tensor[(338), float32] */
}

def @func_5691() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %928 = @func_4065() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %929 = %928.0;
  %930 = @func_601() /* ty=Tensor[(13, 9, 14), float32] */;
  (%929, %930)
}

def @func_10896() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  @func_10894() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */
}

def @func_17411() -> (Tensor[(13, 9, 14), float32], Tensor[(338), float64]) {
  @func_17409() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(338), float64]) */
}

def @func_7112() -> Tensor[(13, 13, 2), int64] {
  %932 = fn () -> Tensor[(13, 13, 2), int64] {
    %931 = @func_6569() /* ty=(Tensor[(13, 13, 2), int64],) */;
    %931.0
  };
  %932() /* ty=Tensor[(13, 13, 2), int64] */
}

def @func_5298(%var_5296: Tensor[(338), int64]) -> (Tensor[(13, 9, 14), float32], Tensor[(338), bool]) {
  @func_5295(%var_5296) /* ty=(Tensor[(13, 9, 14), float32], Tensor[(338), bool]) */
}

def @func_4575(%var_4569: Tensor[(13, 26), int64]) -> (Tensor[(16, 8, 5), uint64], Tensor[(16, 8, 5), uint64], Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 26), bool], Tensor[(16, 8, 5), uint64]) {
  %933 = @func_1561() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %934 = @func_1724() /* ty=(Tensor[(16, 8, 5), uint64],) */;
  %935 = cast(meta[relay.Constant][33] /* ty=Tensor[(13, 26), int64] */, dtype="int64") /* ty=Tensor[(13, 26), int64] */;
  %936 = cast(meta[relay.Constant][33] /* ty=Tensor[(13, 26), int64] */, dtype="int64") /* ty=Tensor[(13, 26), int64] */;
  %937 = reshape(%935, newshape=[13, 13, 2]) /* ty=Tensor[(13, 13, 2), int64] */;
  %938 = reshape(%936, newshape=[13, 13, 2]) /* ty=Tensor[(13, 13, 2), int64] */;
  %939 = cast(%var_4569, dtype="bool") /* ty=Tensor[(13, 26), bool] */;
  %940 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(13, 26), int64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %941 = cast(meta[relay.Constant][33] /* ty=Tensor[(13, 26), int64] */, dtype="bool") /* ty=Tensor[(13, 26), bool] */;
  %942 = dyn.reshape(%939, %940, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %943 = @func_1724() /* ty=(Tensor[(16, 8, 5), uint64],) */;
  %944 = %933.2;
  %945 = %934.0;
  %946 = @func_400(%937, %938) /* ty=Tensor[(13, 13, 2), int64] */;
  %947 = @func_3203() /* ty=Tensor[(13, 9, 14), float32] */;
  %948 = not_equal(%941, %942) /* ty=Tensor[(13, 26), bool] */;
  %949 = %943.0;
  (%944, %945, %946, %947, %948, %949)
}

def @func_1459() -> (Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float64]) {
  %950 = @func_680() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(338), int64]) */;
  %951 = @func_891() /* ty=Tensor[(13, 9, 14), float32] */;
  %952 = cast(meta[relay.Constant][34] /* ty=Tensor[(13, 9, 14), float32] */, dtype="float64") /* ty=Tensor[(13, 9, 14), float64] */;
  %953 = shape_of(%951, dtype="int32") /* ty=Tensor[(3), int32] */;
  %954 = cast(%951, dtype="float64") /* ty=Tensor[(13, 9, 14), float64] */;
  %955 = dyn.reshape(%952, %953, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %956 = %950.1;
  %957 = mod(%954, %955) /* ty=Tensor[(13, 9, 14), float64] */;
  (%956, %957)
}

def @func_6303(%var_6266: Tensor[(16, 10, 15), uint32], %var_6267: Tensor[(16, 10, 15), uint32]) -> (Tensor[(16, 10, 15), uint32], Tensor[(13, 9, 14), float32], Tensor[(1638), float32], Tensor[(640), uint64], Tensor[(640), uint64], Tensor[(13, 9, 14), float32]) {
  %958 = cast(%var_6267, dtype="uint32") /* ty=Tensor[(16, 10, 15), uint32] */;
  %959 = shape_of(%var_6266, dtype="int32") /* ty=Tensor[(3), int32] */;
  %960 = cast(%var_6266, dtype="uint32") /* ty=Tensor[(16, 10, 15), uint32] */;
  %961 = dyn.reshape(%958, %959, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %962 = cast(meta[relay.Constant][35] /* ty=Tensor[(1638), float32] */, dtype="float32") /* ty=Tensor[(1638), float32] */;
  %963 = reshape(%962, newshape=[13, 9, 14]) /* ty=Tensor[(13, 9, 14), float32] */;
  %964 = @func_1154(%963) /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), uint16], Tensor[(13, 9, 14), float32]) */;
  %965 = cast(meta[relay.Constant][36] /* ty=Tensor[(640), uint64] */, dtype="uint64") /* ty=Tensor[(640), uint64] */;
  %966 = reshape(%965, newshape=[640]) /* ty=Tensor[(640), uint64] */;
  %967 = @func_1957(%966) /* ty=(Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64]) */;
  %968 = right_shift(%960, %961) /* ty=Tensor[(16, 10, 15), uint32] */;
  %969 = %964.2;
  %970 = %967.2;
  %971 = @func_1338() /* ty=Tensor[(13, 9, 14), float32] */;
  (%968, %969, meta[relay.Constant][35] /* ty=Tensor[(1638), float32] */, %970, meta[relay.Constant][36] /* ty=Tensor[(640), uint64] */, %971)
}

def @func_8345(%var_8339: Tensor[(13, 26), int64]) -> (Tensor[(16, 8, 5), uint64], Tensor[(13, 13, 2), int64], Tensor[(13, 13, 2), int64], Tensor[(13, 26), float64]) {
  %972 = @func_4446() /* ty=(Tensor[(10, 16, 14), float32], Tensor[(13, 9, 14), uint32], Tensor[(1638), float32], Tensor[(16, 8, 5), uint64]) */;
  %973 = cast(meta[relay.Constant][37] /* ty=Tensor[(13, 26), int64] */, dtype="int64") /* ty=Tensor[(13, 26), int64] */;
  %974 = reshape(%973, newshape=[13, 26]) /* ty=Tensor[(13, 26), int64] */;
  %975 = @func_4575(%974) /* ty=(Tensor[(16, 8, 5), uint64], Tensor[(16, 8, 5), uint64], Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 26), bool], Tensor[(16, 8, 5), uint64]) */;
  %976 = cast(%var_8339, dtype="float64") /* ty=Tensor[(13, 26), float64] */;
  %977 = shape_of(meta[relay.Constant][37] /* ty=Tensor[(13, 26), int64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %978 = cast(meta[relay.Constant][37] /* ty=Tensor[(13, 26), int64] */, dtype="float64") /* ty=Tensor[(13, 26), float64] */;
  %979 = dyn.reshape(%976, %977, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %980 = %972.3;
  %981 = %975.2;
  %982 = @func_5074() /* ty=Tensor[(13, 13, 2), int64] */;
  %983 = add(%978, %979) /* ty=Tensor[(13, 26), float64] */;
  (%980, %981, %982, %983)
}

def @func_2248() -> Tensor[(16, 8, 5), uint64] {
  %984 = @func_1724() /* ty=(Tensor[(16, 8, 5), uint64],) */;
  %984.0
}

def @func_3989() -> (Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float64], Tensor[(13, 13, 2), int64]) {
  @func_3987() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float64], Tensor[(13, 13, 2), int64]) */
}

def @func_4200(%var_4198: Tensor[(13, 13, 2), int64]) -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float64], Tensor[(13, 13, 2), int32]) {
  @func_4197(%var_4198) /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float64], Tensor[(13, 13, 2), int32]) */
}

def @func_15023() -> Tensor[(13, 9, 14), float32] {
  @func_15021() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_10280() -> (Tensor[(924, ?), float64],) {
  %985 = @func_8673() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(924, ?), bool]) */;
  %986 = %985.1;
  %987 = cast(%986, dtype="float64") /* ty=Tensor[(924, ?), float64] */;
  %988 = atan(%987) /* ty=Tensor[(924, ?), float64] */;
  (%988,)
}

def @func_12755() -> Tensor[(13, 9, 14), float32] {
  %989 = @func_2812() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64]) */;
  %989.0
}

def @func_9126() -> Tensor[(13, 9, 14), float32] {
  @func_9124() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_6855() -> Tensor[(13, 9, 14), float32] {
  %991 = fn () -> Tensor[(13, 9, 14), float32] {
    %990 = @func_4902() /* ty=(Tensor[(13, 9, 14), float32],) */;
    %990.0
  };
  %991() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_7611() -> (Tensor[(13, 13, 2), int64],) {
  @func_7609() /* ty=(Tensor[(13, 13, 2), int64],) */
}

def @func_11112() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64]) {
  %996 = fn () -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64]) {
    %992 = @func_3600() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) */;
    %993 = %992.1;
    %994 = @func_2822() /* ty=Tensor[(13, 9, 14), float32] */;
    %995 = @func_2248() /* ty=Tensor[(16, 8, 5), uint64] */;
    (%993, %994, %995)
  };
  %996() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64]) */
}

def @func_16531() -> (Tensor[(13, 9, 14), float32],) {
  @func_16529() /* ty=(Tensor[(13, 9, 14), float32],) */
}

def @func_16898() -> (Tensor[(13, 13, 2), int64],) {
  %999 = fn () -> (Tensor[(13, 13, 2), int64],) {
    %997 = @func_14002() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64]) */;
    %998 = %997.1;
    (%998,)
  };
  %999() /* ty=(Tensor[(13, 13, 2), int64],) */
}

def @func_18105() -> Tensor[(13, 9, 14), float32] {
  %1000 = fn () -> Tensor[(13, 9, 14), float32] {
    @func_14272() /* ty=Tensor[(13, 9, 14), float32] */
  };
  %1000() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_18249() -> (Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %1006 = fn () -> (Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
    %1001 = @func_15659() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(13, 13, 2), int64]) */;
    %1002 = @func_12055() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64], Tensor[(13, 9, 14), float32]) */;
    %1003 = %1001.0;
    %1004 = @func_17500() /* ty=Tensor[(13, 9, 14), float32] */;
    %1005 = %1002.0;
    (%1003, %1004, %1005)
  };
  %1006() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */
}

def @func_19551() -> (Tensor[(338), int64],) {
  %1007 = @func_15053() /* ty=Tensor[(338), int64] */;
  (%1007,)
}

def @func_18115() -> (Tensor[(13, 9, 14), float32],) {
  %1010 = fn () -> (Tensor[(13, 9, 14), float32],) {
    %1008 = @func_9295() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
    %1009 = %1008.0;
    (%1009,)
  };
  %1010() /* ty=(Tensor[(13, 9, 14), float32],) */
}

def @func_10596(%var_10595: Tensor[(13, 1, 7), float64]) -> (Tensor[(13, 1, 7), float64], Tensor[(13, 9, 14), float32]) {
  %1015 = fn (%var_10589: Tensor[(13, 1, 7), float64]) -> (Tensor[(13, 1, 7), float64], Tensor[(13, 9, 14), float32]) {
    %1011 = cast(%var_10589, dtype="float64") /* ty=Tensor[(13, 1, 7), float64] */;
    %1012 = @func_1404() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(338), int64]) */;
    %1013 = log2(%1011) /* ty=Tensor[(13, 1, 7), float64] */;
    %1014 = %1012.1;
    (%1013, %1014)
  };
  %1015(%var_10595) /* ty=(Tensor[(13, 1, 7), float64], Tensor[(13, 9, 14), float32]) */
}

def @func_19795() -> (Tensor[(10, 16, 14), float32],) {
  %1017 = fn () -> (Tensor[(10, 16, 14), float32],) {
    %1016 = @func_14206() /* ty=Tensor[(10, 16, 14), float32] */;
    (%1016,)
  };
  %1017() /* ty=(Tensor[(10, 16, 14), float32],) */
}

def @func_12096() -> Tensor[(13, 9, 14), float64] {
  %1019 = fn () -> Tensor[(13, 9, 14), float64] {
    %1018 = @func_2243() /* ty=(Tensor[(13, 9, 14), float64],) */;
    %1018.0
  };
  %1019() /* ty=Tensor[(13, 9, 14), float64] */
}

def @func_719() -> Tensor[(13, 9, 14), float32] {
  %1022 = fn () -> Tensor[(13, 9, 14), float32] {
    %1020 = @func_601() /* ty=Tensor[(13, 9, 14), float32] */;
    %1021 = cast(%1020, dtype="float32") /* ty=Tensor[(13, 9, 14), float32] */;
    exp(%1021) /* ty=Tensor[(13, 9, 14), float32] */
  };
  %1022() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_12634(%var_12619: Tensor[(2400), uint32]) -> (Tensor[(13, 13, 2), int64], Tensor[(338), float64], Tensor[(13, 9, 14), int16], Tensor[(640), uint64], Tensor[(2400), uint32]) {
  %1023 = @func_6569() /* ty=(Tensor[(13, 13, 2), int64],) */;
  %1024 = %1023.0;
  %1025 = cast(%1024, dtype="float32") /* ty=Tensor[(13, 13, 2), float32] */;
  %1026 = cast(%1024, dtype="uint16") /* ty=Tensor[(13, 13, 2), uint16] */;
  %1027 = reshape(%1025, newshape=[338]) /* ty=Tensor[(338), float32] */;
  %1028 = reshape(%1026, newshape=[338]) /* ty=Tensor[(338), uint16] */;
  %1029 = @func_5864(%1027, %1028) /* ty=(Tensor[(338), int32], Tensor[(338), int64], Tensor[(338), float64]) */;
  %1030 = @func_5554() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), int16]) */;
  %1031 = cast(%var_12619, dtype="uint32") /* ty=Tensor[(2400), uint32] */;
  %1032 = cast(%var_12619, dtype="uint32") /* ty=Tensor[(2400), uint32] */;
  %1033 = reshape(%1031, newshape=[16, 10, 15]) /* ty=Tensor[(16, 10, 15), uint32] */;
  %1034 = reshape(%1032, newshape=[16, 10, 15]) /* ty=Tensor[(16, 10, 15), uint32] */;
  %1035 = @func_6303(%1033, %1034) /* ty=(Tensor[(16, 10, 15), uint32], Tensor[(13, 9, 14), float32], Tensor[(1638), float32], Tensor[(640), uint64], Tensor[(640), uint64], Tensor[(13, 9, 14), float32]) */;
  %1036 = %1029.2;
  %1037 = %1030.1;
  %1038 = %1035.3;
  (%1024, %1036, %1037, %1038, %var_12619)
}

def @func_13237(%var_13232: Tensor[(8, 924), float64]) -> (Tensor[(8, 924), int8],) {
  %1039 = @func_10629() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(1, 924), float64], Tensor[(11, 12, 7), float64]) */;
  %1040 = %1039.1;
  %1041 = cast(%1040, dtype="int8") /* ty=Tensor[(1, 924), int8] */;
  %1042 = cast(%var_13232, dtype="int8") /* ty=Tensor[(8, 924), int8] */;
  %1043 = right_shift(%1041, %1042) /* ty=Tensor[(8, 924), int8] */;
  (%1043,)
}

def @func_17595() -> (Tensor[(13, 9, 14), float32],) {
  %1046 = fn () -> (Tensor[(13, 9, 14), float32],) {
    %1044 = @func_7219() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
    %1045 = %1044.0;
    (%1045,)
  };
  %1046() /* ty=(Tensor[(13, 9, 14), float32],) */
}

def @func_4127() -> (Tensor[(16, 8, 5), uint64], Tensor[(11, 12, 7), float32], Tensor[(924), float64], Tensor[(640), uint64]) {
  %1052 = fn () -> (Tensor[(16, 8, 5), uint64], Tensor[(11, 12, 7), float32], Tensor[(924), float64], Tensor[(640), uint64]) {
    %1047 = cast(meta[relay.Constant][38] /* ty=Tensor[(924), float64] */, dtype="float64") /* ty=Tensor[(924), float64] */;
    %1048 = reshape(%1047, newshape=[11, 12, 7]) /* ty=Tensor[(11, 12, 7), float64] */;
    %1049 = @func_2248() /* ty=Tensor[(16, 8, 5), uint64] */;
    %1050 = @func_1291(%1048) /* ty=Tensor[(11, 12, 7), float32] */;
    %1051 = @func_3318() /* ty=Tensor[(640), uint64] */;
    (%1049, %1050, meta[relay.Constant][38] /* ty=Tensor[(924), float64] */, %1051)
  };
  %1052() /* ty=(Tensor[(16, 8, 5), uint64], Tensor[(11, 12, 7), float32], Tensor[(924), float64], Tensor[(640), uint64]) */
}

def @func_6680(%var_6677: Tensor[(9, 6, 7), float32], %var_6678: Tensor[(9, 6, 7), float32], %var_6679: Tensor[(338, 1), int64]) -> (Tensor[(9, 6, 7), float32], Tensor[(13, 13, 2), bool], Tensor[(338, 1), int64]) {
  %1061 = fn (%var_6657: Tensor[(9, 6, 7), float32], %var_6658: Tensor[(9, 6, 7), float32], %var_6671: Tensor[(338, 1), int64]) -> (Tensor[(9, 6, 7), float32], Tensor[(13, 13, 2), bool], Tensor[(338, 1), int64]) {
    %1053 = cast(%var_6658, dtype="float32") /* ty=Tensor[(9, 6, 7), float32] */;
    %1054 = shape_of(%var_6657, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1055 = cast(%var_6657, dtype="float32") /* ty=Tensor[(9, 6, 7), float32] */;
    %1056 = dyn.reshape(%1053, %1054, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1057 = cast(%var_6671, dtype="int64") /* ty=Tensor[(338, 1), int64] */;
    %1058 = reshape(%1057, newshape=[13, 13, 2]) /* ty=Tensor[(13, 13, 2), int64] */;
    %1059 = mod(%1055, %1056) /* ty=Tensor[(9, 6, 7), float32] */;
    %1060 = @func_4929(%1058) /* ty=Tensor[(13, 13, 2), bool] */;
    (%1059, %1060, %var_6671)
  };
  %1061(%var_6677, %var_6678, %var_6679) /* ty=(Tensor[(9, 6, 7), float32], Tensor[(13, 13, 2), bool], Tensor[(338, 1), int64]) */
}

def @func_5932() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %1062 = @func_4065() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %1063 = %1062.0;
  %1064 = @func_3203() /* ty=Tensor[(13, 9, 14), float32] */;
  (%1063, %1064)
}

def @func_10894() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %1065 = @func_10494() /* ty=(Tensor[(7, 5, 15), float64], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64]) */;
  %1066 = @func_5610() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %1067 = %1065.1;
  %1068 = %1066.0;
  (%1067, %1068)
}

def @func_12441() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64]) {
  @func_12439() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64]) */
}

def @func_11146() -> Tensor[(13, 9, 14), float32] {
  %1069 = @func_6410() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %1069.0
}

def @func_12055() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64], Tensor[(13, 9, 14), float32]) {
  %1070 = @func_4902() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %1071 = @func_1724() /* ty=(Tensor[(16, 8, 5), uint64],) */;
  %1072 = %1070.0;
  %1073 = @func_4257() /* ty=Tensor[(13, 9, 14), float32] */;
  %1074 = %1071.0;
  %1075 = @func_2822() /* ty=Tensor[(13, 9, 14), float32] */;
  (%1072, %1073, %1074, %1075)
}

def @func_9565() -> (Tensor[(13, 9, 14), float32], Tensor[(338), int64]) {
  %1080 = fn () -> (Tensor[(13, 9, 14), float32], Tensor[(338), int64]) {
    %1076 = @func_4091() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), uint8]) */;
    %1077 = @func_9180() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(11, 4, 1), float64], Tensor[(22, 2), float64], Tensor[(13, 9, 14), float32], Tensor[(2240), float32], Tensor[(338), int64]) */;
    %1078 = %1076.0;
    %1079 = %1077.6;
    (%1078, %1079)
  };
  %1080() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(338), int64]) */
}

def @func_8631() -> (Tensor[(13, 9, 14), float32],) {
  %1081 = @func_5508() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %1082 = %1081.0;
  (%1082,)
}

def @func_8348(%var_8346: Tensor[(13, 26), int64]) -> (Tensor[(16, 8, 5), uint64], Tensor[(13, 13, 2), int64], Tensor[(13, 13, 2), int64], Tensor[(13, 26), float64]) {
  @func_8345(%var_8346) /* ty=(Tensor[(16, 8, 5), uint64], Tensor[(13, 13, 2), int64], Tensor[(13, 13, 2), int64], Tensor[(13, 26), float64]) */
}

def @func_20021() -> (Tensor[(13, 9, 14), float32], Tensor[(338), float32]) {
  %1083 = @func_11184() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %1084 = @func_11532() /* ty=(Tensor[(338), bool],) */;
  %1085 = %1084.0;
  %1086 = cast(%1085, dtype="float32") /* ty=Tensor[(338), float32] */;
  %1087 = %1083.1;
  %1088 = exp(%1086) /* ty=Tensor[(338), float32] */;
  (%1087, %1088)
}

def @func_1822() -> (Tensor[(13, 9, 14), int32], Tensor[(16, 8, 5), uint64], Tensor[(338), int64]) {
  @func_1820() /* ty=(Tensor[(13, 9, 14), int32], Tensor[(16, 8, 5), uint64], Tensor[(338), int64]) */
}

def @func_9048() -> (Tensor[(13, 9, 14), float32],) {
  @func_9046() /* ty=(Tensor[(13, 9, 14), float32],) */
}

def @func_2598() -> (Tensor[(13, 9, 14), float32],) {
  %1090 = fn () -> (Tensor[(13, 9, 14), float32],) {
    %1089 = @func_616() /* ty=Tensor[(13, 9, 14), float32] */;
    (%1089,)
  };
  %1090() /* ty=(Tensor[(13, 9, 14), float32],) */
}

def @func_15661() -> (Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(13, 13, 2), int64]) {
  @func_15659() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(13, 13, 2), int64]) */
}

def @func_16011(%var_16009: Tensor[(28, 80), float32], %var_16010: Tensor[(338, 1), int64]) -> (Tensor[(16, 8, 5), uint64], Tensor[(2240), int8], Tensor[(28, 80), float32], Tensor[(338, 1), float32], Tensor[(13, 13, 2), int64], Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) {
  %1108 = fn (%var_15953: Tensor[(28, 80), float32], %var_15954: Tensor[(338, 1), int64]) -> (Tensor[(16, 8, 5), uint64], Tensor[(2240), int8], Tensor[(28, 80), float32], Tensor[(338, 1), float32], Tensor[(13, 13, 2), int64], Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) {
    %1091 = @func_7498() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64]) */;
    %1092 = cast(%var_15953, dtype="float32") /* ty=Tensor[(28, 80), float32] */;
    %1093 = cast(%var_15954, dtype="int64") /* ty=Tensor[(338, 1), int64] */;
    %1094 = reshape(%1092, newshape=[2240]) /* ty=Tensor[(2240), float32] */;
    %1095 = reshape(%1093, newshape=[338]) /* ty=Tensor[(338), int64] */;
    %1096 = @func_8552(%1094, %1095) /* ty=(Tensor[(640), uint64], Tensor[(10, 16, 14), int32], Tensor[(2240), int8], Tensor[(16, 8, 5), uint64], Tensor[(338), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
    %1097 = cast(%var_15954, dtype="float32") /* ty=Tensor[(338, 1), float32] */;
    %1098 = cast(%var_15953, dtype="float32") /* ty=Tensor[(28, 80), float32] */;
    %1099 = reshape(%1098, newshape=[10, 16, 14]) /* ty=Tensor[(10, 16, 14), float32] */;
    %1100 = @func_6737(%1099) /* ty=(Tensor[(10, 16, 14), int32], Tensor[(13, 13, 2), int64]) */;
    %1101 = @func_5203() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(11, 2, 2), uint8], Tensor[(13, 9, 14), int16], Tensor[(13, 9, 14), float32], Tensor[(338), int64]) */;
    %1102 = %1091.2;
    %1103 = %1096.2;
    %1104 = asin(%1097) /* ty=Tensor[(338, 1), float32] */;
    %1105 = %1100.1;
    %1106 = @func_10772() /* ty=Tensor[(13, 13, 2), int64] */;
    %1107 = %1101.0;
    (%1102, %1103, %var_15953, %1104, %1105, %1106, %1107)
  };
  %1108(%var_16009, %var_16010) /* ty=(Tensor[(16, 8, 5), uint64], Tensor[(2240), int8], Tensor[(28, 80), float32], Tensor[(338, 1), float32], Tensor[(13, 13, 2), int64], Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) */
}

def @func_8762() -> (Tensor[(13, 13, 2), int64],) {
  %1109 = @func_6569() /* ty=(Tensor[(13, 13, 2), int64],) */;
  %1110 = %1109.0;
  (%1110,)
}

def @func_8204() -> (Tensor[(13, 9, 14), float32],) {
  %1111 = @func_5508() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %1112 = %1111.0;
  (%1112,)
}

def @func_3410() -> (Tensor[(338), float32],) {
  @func_3408() /* ty=(Tensor[(338), float32],) */
}

def @func_19488() -> (Tensor[(13, 9, 14), float32],) {
  %1113 = @func_12575() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %1114 = %1113.0;
  (%1114,)
}

def @func_10931() -> (Tensor[(13, 13, 2), int64],) {
  @func_10929() /* ty=(Tensor[(13, 13, 2), int64],) */
}

def @func_4219() -> Tensor[(13, 9, 14), float32] {
  %1115 = fn () -> Tensor[(13, 9, 14), float32] {
    @func_1338() /* ty=Tensor[(13, 9, 14), float32] */
  };
  %1115() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_2081(%var_2080: Tensor[(640), uint64]) -> (Tensor[(13, 13, 2), int64], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64], Tensor[(13, 13, 2), int64]) {
  %1126 = fn (%var_2039: Tensor[(640), uint64]) -> (Tensor[(13, 13, 2), int64], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64], Tensor[(13, 13, 2), int64]) {
    %1116 = @func_680() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(338), int64]) */;
    %1117 = cast(%var_2039, dtype="uint64") /* ty=Tensor[(640), uint64] */;
    %1118 = cast(%var_2039, dtype="uint64") /* ty=Tensor[(640), uint64] */;
    %1119 = reshape(%1117, newshape=[16, 8, 5]) /* ty=Tensor[(16, 8, 5), uint64] */;
    %1120 = reshape(%1118, newshape=[16, 8, 5]) /* ty=Tensor[(16, 8, 5), uint64] */;
    %1121 = @func_245(%1119, %1120) /* ty=(Tensor[(16, 8, 5), uint64],) */;
    %1122 = @func_1691() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), int16], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64]) */;
    %1123 = %1116.1;
    %1124 = %1121.0;
    %1125 = %1122.0;
    (%1123, %1124, %var_2039, %1125)
  };
  %1126(%var_2080) /* ty=(Tensor[(13, 13, 2), int64], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64], Tensor[(13, 13, 2), int64]) */
}

def @func_3163(%var_3162: Tensor[(13, 9, 14), float32]) -> Tensor[(13, 9, 14), uint8] {
  %1132 = fn (%var_3153: Tensor[(13, 9, 14), float32]) -> Tensor[(13, 9, 14), uint8] {
    %1127 = @func_2401() /* ty=Tensor[(13, 9, 14), float32] */;
    %1128 = cast(%var_3153, dtype="uint8") /* ty=Tensor[(13, 9, 14), uint8] */;
    %1129 = shape_of(%1127, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1130 = cast(%1127, dtype="uint8") /* ty=Tensor[(13, 9, 14), uint8] */;
    %1131 = dyn.reshape(%1128, %1129, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    right_shift(%1130, %1131) /* ty=Tensor[(13, 9, 14), uint8] */
  };
  %1132(%var_3162) /* ty=Tensor[(13, 9, 14), uint8] */
}

def @func_11511() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %1133 = @func_8578() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %1134 = @func_5508() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %1135 = %1133.0;
  %1136 = %1134.0;
  %1137 = @func_7513() /* ty=Tensor[(13, 9, 14), float32] */;
  (%1135, %1136, %1137)
}

def @func_10236() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) {
  %1138 = @func_4065() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %1139 = @func_3600() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) */;
  %1140 = @func_7609() /* ty=(Tensor[(13, 13, 2), int64],) */;
  %1141 = %1138.0;
  %1142 = %1139.1;
  %1143 = %1140.0;
  %1144 = @func_601() /* ty=Tensor[(13, 9, 14), float32] */;
  (%1141, %1142, %1143, %1144)
}

def @func_20681() -> (Tensor[(13, 9, 14), float32], Tensor[(338), float64]) {
  %1145 = @func_17087() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %1146 = @func_17409() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(338), float64]) */;
  %1147 = %1145.0;
  %1148 = %1146.1;
  (%1147, %1148)
}

def @func_20023() -> (Tensor[(13, 9, 14), float32], Tensor[(338), float32]) {
  @func_20021() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(338), float32]) */
}

def @func_4197(%var_4192: Tensor[(13, 13, 2), int64]) -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float64], Tensor[(13, 13, 2), int32]) {
  %1149 = @func_1459() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float64]) */;
  %1150 = @func_2535() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(640), uint64], Tensor[(13, 13, 2), int64]) */;
  %1151 = %1150.1;
  %1152 = cast(%var_4192, dtype="int32") /* ty=Tensor[(13, 13, 2), int32] */;
  %1153 = shape_of(%1151, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1154 = cast(%1151, dtype="int32") /* ty=Tensor[(13, 13, 2), int32] */;
  %1155 = dyn.reshape(%1152, %1153, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1156 = @func_718() /* ty=Tensor[(13, 9, 14), float32] */;
  %1157 = %1149.1;
  %1158 = left_shift(%1154, %1155) /* ty=Tensor[(13, 13, 2), int32] */;
  (%1156, %1157, %1158)
}

def @func_14430(%var_14407: Tensor[(338), int64]) -> Tensor[(338), float32] {
  %1159 = @func_5492() /* ty=(Tensor[(338), int64],) */;
  %1160 = %1159.0;
  %1161 = cast(%var_14407, dtype="uint8") /* ty=Tensor[(338), uint8] */;
  %1162 = shape_of(%1160, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1163 = cast(%1160, dtype="uint8") /* ty=Tensor[(338), uint8] */;
  %1164 = dyn.reshape(%1161, %1162, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %1165 = bitwise_or(%1163, %1164) /* ty=Tensor[(338), uint8] */;
  %1166 = cast(%1165, dtype="float32") /* ty=Tensor[(338), float32] */;
  log10(%1166) /* ty=Tensor[(338), float32] */
}

def @func_5662(%var_5660: Tensor[(13, 9, 14), float32]) -> (Tensor[(13, 13, 2), int64], Tensor[(13, 13, 2), float64], Tensor[(13, 9, 14), bool], Tensor[(338), bool]) {
  @func_5659(%var_5660) /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 13, 2), float64], Tensor[(13, 9, 14), bool], Tensor[(338), bool]) */
}

def @func_8633() -> (Tensor[(13, 9, 14), float32],) {
  @func_8631() /* ty=(Tensor[(13, 9, 14), float32],) */
}

def @func_9669() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64], Tensor[(20, 32), uint64], Tensor[(13, 9, 14), float32]) {
  %1167 = @func_7675() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %1168 = cast(meta[relay.Constant][39] /* ty=Tensor[(20, 32), uint64] */, dtype="uint64") /* ty=Tensor[(20, 32), uint64] */;
  %1169 = cast(meta[relay.Constant][39] /* ty=Tensor[(20, 32), uint64] */, dtype="uint64") /* ty=Tensor[(20, 32), uint64] */;
  %1170 = reshape(%1168, newshape=[16, 8, 5]) /* ty=Tensor[(16, 8, 5), uint64] */;
  %1171 = reshape(%1169, newshape=[16, 8, 5]) /* ty=Tensor[(16, 8, 5), uint64] */;
  %1172 = @func_245(%1170, %1171) /* ty=(Tensor[(16, 8, 5), uint64],) */;
  %1173 = @func_9295() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %1174 = %1167.0;
  %1175 = @func_1338() /* ty=Tensor[(13, 9, 14), float32] */;
  %1176 = %1172.0;
  %1177 = %1173.1;
  (%1174, %1175, %1176, meta[relay.Constant][39] /* ty=Tensor[(20, 32), uint64] */, %1177)
}

def @func_12575() -> (Tensor[(13, 9, 14), float32],) {
  %1178 = @func_4760() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %1179 = %1178.3;
  (%1179,)
}

def @func_16812() -> (Tensor[(640), uint64], Tensor[(13, 9, 14), float32]) {
  @func_16810() /* ty=(Tensor[(640), uint64], Tensor[(13, 9, 14), float32]) */
}

def @func_9706() -> Tensor[(13, 9, 14), float32] {
  %1180 = fn () -> Tensor[(13, 9, 14), float32] {
    @func_9124() /* ty=Tensor[(13, 9, 14), float32] */
  };
  %1180() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_14807() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) {
  %1188 = fn () -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) {
    %1181 = @func_5967() /* ty=(Tensor[(13, 9, 14), float32],) */;
    %1182 = @func_7377() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) */;
    %1183 = @func_10793() /* ty=(Tensor[(13, 13, 2), int64],) */;
    %1184 = %1181.0;
    %1185 = %1182.1;
    %1186 = %1183.0;
    %1187 = @func_9705() /* ty=Tensor[(13, 9, 14), float32] */;
    (%1184, %1185, %1186, %1187)
  };
  %1188() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) */
}

def @func_12231(%var_12225: Tensor[(3, 3, 5), float32]) -> (Tensor[(3, 3, 5), float32], Tensor[(13, 13, 2), int64]) {
  %1189 = cast(%var_12225, dtype="float32") /* ty=Tensor[(3, 3, 5), float32] */;
  %1190 = exp(%1189) /* ty=Tensor[(3, 3, 5), float32] */;
  %1191 = @func_7111() /* ty=Tensor[(13, 13, 2), int64] */;
  (%1190, %1191)
}

def @func_12662() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %1192 = @func_9080() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %1193 = %1192.0;
  %1194 = @func_616() /* ty=Tensor[(13, 9, 14), float32] */;
  (%1193, %1194)
}

def @func_12315() -> Tensor[(338), int64] {
  %1196 = fn () -> Tensor[(338), int64] {
    %1195 = @func_5492() /* ty=(Tensor[(338), int64],) */;
    %1195.0
  };
  %1196() /* ty=Tensor[(338), int64] */
}

def @func_13580() -> (Tensor[(13, 13, 2), int64],) {
  @func_13578() /* ty=(Tensor[(13, 13, 2), int64],) */
}

def @func_10038() -> (Tensor[(16, 8, 5), uint64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64]) {
  %1205 = fn () -> (Tensor[(16, 8, 5), uint64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64]) {
    %1197 = @func_1724() /* ty=(Tensor[(16, 8, 5), uint64],) */;
    %1198 = @func_9295() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
    %1199 = @func_6410() /* ty=(Tensor[(13, 9, 14), float32],) */;
    %1200 = @func_7090() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(10, 16, 14), float32]) */;
    %1201 = %1197.0;
    %1202 = %1198.0;
    %1203 = %1199.0;
    %1204 = %1200.0;
    (%1201, %1202, %1203, %1204)
  };
  %1205() /* ty=(Tensor[(16, 8, 5), uint64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64]) */
}

def @func_16468() -> (Tensor[(640), uint64], Tensor[(13, 9, 14), float32]) {
  %1206 = @func_12055() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64], Tensor[(13, 9, 14), float32]) */;
  %1207 = @func_3318() /* ty=Tensor[(640), uint64] */;
  %1208 = %1206.1;
  (%1207, %1208)
}

def @func_15406() -> (Tensor[(338), bool], Tensor[(13, 9, 14), float32]) {
  %1209 = @func_11532() /* ty=(Tensor[(338), bool],) */;
  %1210 = %1209.0;
  %1211 = @func_2401() /* ty=Tensor[(13, 9, 14), float32] */;
  (%1210, %1211)
}

def @func_17247() -> (Tensor[(13, 9, 14), float64], Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) {
  %1218 = fn () -> (Tensor[(13, 9, 14), float64], Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) {
    %1212 = @func_1459() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float64]) */;
    %1213 = @func_7609() /* ty=(Tensor[(13, 13, 2), int64],) */;
    %1214 = @func_9586() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
    %1215 = %1212.1;
    %1216 = %1213.0;
    %1217 = %1214.0;
    (%1215, %1216, %1217)
  };
  %1218() /* ty=(Tensor[(13, 9, 14), float64], Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) */
}

def @func_9081() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %1222 = fn () -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
    %1219 = @func_8204() /* ty=(Tensor[(13, 9, 14), float32],) */;
    %1220 = @func_1944() /* ty=Tensor[(13, 9, 14), float32] */;
    %1221 = %1219.0;
    (%1220, %1221)
  };
  %1222() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */
}

def @func_12439() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64]) {
  %1223 = @func_9564() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(338), int64]) */;
  %1224 = @func_7609() /* ty=(Tensor[(13, 13, 2), int64],) */;
  %1225 = %1223.0;
  %1226 = %1224.0;
  (%1225, %1226)
}

def @func_1946() -> Tensor[(13, 9, 14), float32] {
  @func_1944() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_13558() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %1230 = fn () -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
    %1227 = @func_1404() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(338), int64]) */;
    %1228 = %1227.2;
    %1229 = @func_11146() /* ty=Tensor[(13, 9, 14), float32] */;
    (%1228, %1229)
  };
  %1230() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */
}

def @func_14182(%var_14180: Tensor[(91), float64]) -> (Tensor[(13, 1, 7), float64], Tensor[(13, 9, 14), float32], Tensor[(14, 1, 91), float64]) {
  @func_14179(%var_14180) /* ty=(Tensor[(13, 1, 7), float64], Tensor[(13, 9, 14), float32], Tensor[(14, 1, 91), float64]) */
}

def @func_14272() -> Tensor[(13, 9, 14), float32] {
  @func_11146() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_4447() -> (Tensor[(10, 16, 14), float32], Tensor[(13, 9, 14), uint32], Tensor[(1638), float32], Tensor[(16, 8, 5), uint64]) {
  %1237 = fn () -> (Tensor[(10, 16, 14), float32], Tensor[(13, 9, 14), uint32], Tensor[(1638), float32], Tensor[(16, 8, 5), uint64]) {
    %1231 = cast(meta[relay.Constant][40] /* ty=Tensor[(1638), float32] */, dtype="float32") /* ty=Tensor[(1638), float32] */;
    %1232 = reshape(%1231, newshape=[13, 9, 14]) /* ty=Tensor[(13, 9, 14), float32] */;
    %1233 = @func_1691() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), int16], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64]) */;
    %1234 = @func_3021() /* ty=Tensor[(10, 16, 14), float32] */;
    %1235 = @func_3259(%1232) /* ty=Tensor[(13, 9, 14), uint32] */;
    %1236 = %1233.2;
    (%1234, %1235, meta[relay.Constant][40] /* ty=Tensor[(1638), float32] */, %1236)
  };
  %1237() /* ty=(Tensor[(10, 16, 14), float32], Tensor[(13, 9, 14), uint32], Tensor[(1638), float32], Tensor[(16, 8, 5), uint64]) */
}

def @func_617() -> Tensor[(13, 9, 14), float32] {
  %1238 = fn () -> Tensor[(13, 9, 14), float32] {
    @func_601() /* ty=Tensor[(13, 9, 14), float32] */
  };
  %1238() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_9124() -> Tensor[(13, 9, 14), float32] {
  @func_3462() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_9486() -> (Tensor[(13, 13, 2), int64],) {
  %1240 = fn () -> (Tensor[(13, 13, 2), int64],) {
    %1239 = @func_5074() /* ty=Tensor[(13, 13, 2), int64] */;
    (%1239,)
  };
  %1240() /* ty=(Tensor[(13, 13, 2), int64],) */
}

def @func_11440() -> Tensor[(13, 9, 14), float32] {
  %1242 = fn () -> Tensor[(13, 9, 14), float32] {
    %1241 = @func_1404() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(338), int64]) */;
    %1241.1
  };
  %1242() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_5508() -> (Tensor[(13, 9, 14), float32],) {
  %1243 = @func_1561() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %1244 = %1243.1;
  (%1244,)
}

def @func_13250() -> Tensor[(13, 9, 14), float32] {
  %1245 = @func_4044() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %1245.0
}

def @func_14289() -> Tensor[(13, 9, 14), float32] {
  %1246 = @func_6410() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %1246.0
}

def @func_10466() -> (Tensor[(13, 9, 14), float32],) {
  %1247 = @func_6235() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %1248 = %1247.0;
  (%1248,)
}

def @func_17572(%var_17570: Tensor[(10, 11, 5), float64]) -> Tensor[(10, 11, 5), float64] {
  @func_17569(%var_17570) /* ty=Tensor[(10, 11, 5), float64] */
}

def @func_19479() -> Tensor[(13, 9, 14), float32] {
  %1249 = @func_5610() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %1249.0
}

def @func_13761() -> (Tensor[(13, 13, 2), int64], Tensor[(9, 14, 9), float32]) {
  @func_13759() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(9, 14, 9), float32]) */
}

def @func_1693() -> (Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), int16], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64]) {
  @func_1691() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), int16], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64]) */
}

def @func_6176() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(13, 13, 2), int64]) {
  %1250 = @func_4397() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(924), float64], Tensor[(13, 13, 2), float64]) */;
  %1251 = @func_3557() /* ty=(Tensor[(13, 13, 2), int64],) */;
  %1252 = @func_3203() /* ty=Tensor[(13, 9, 14), float32] */;
  %1253 = %1250.0;
  %1254 = %1251.0;
  (%1252, %1253, %1254)
}

def @func_2870(%var_2867: Tensor[(338), int64], %var_2868: Tensor[(154, 6), float64], %var_2869: Tensor[(154, 6), float64]) -> (Tensor[(16, 8, 5), uint64], Tensor[(13, 13, 2), int64], Tensor[(338), int64], Tensor[(11, 12, 7), float32], Tensor[(13, 9, 14), float32], Tensor[(154, 6), float64]) {
  @func_2865(%var_2867, %var_2868, %var_2869) /* ty=(Tensor[(16, 8, 5), uint64], Tensor[(13, 13, 2), int64], Tensor[(338), int64], Tensor[(11, 12, 7), float32], Tensor[(13, 9, 14), float32], Tensor[(154, 6), float64]) */
}

def @func_12372() -> (Tensor[(13, 9, 14), uint32],) {
  @func_12370() /* ty=(Tensor[(13, 9, 14), uint32],) */
}

def @func_6235() -> (Tensor[(13, 9, 14), float32],) {
  %1255 = @func_1561() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %1256 = %1255.5;
  (%1256,)
}

def @func_10350() -> (Tensor[(11, 12, 7), float32], Tensor[(11, 4, 924), uint16]) {
  %1257 = cast(meta[relay.Constant][41] /* ty=Tensor[(924), float64] */, dtype="float64") /* ty=Tensor[(924), float64] */;
  %1258 = reshape(%1257, newshape=[11, 12, 7]) /* ty=Tensor[(11, 12, 7), float64] */;
  %1259 = @func_9180() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(11, 4, 1), float64], Tensor[(22, 2), float64], Tensor[(13, 9, 14), float32], Tensor[(2240), float32], Tensor[(338), int64]) */;
  %1260 = %1259.2;
  %1261 = cast(%1260, dtype="uint16") /* ty=Tensor[(11, 4, 1), uint16] */;
  %1262 = cast(meta[relay.Constant][41] /* ty=Tensor[(924), float64] */, dtype="uint16") /* ty=Tensor[(924), uint16] */;
  %1263 = @func_1291(%1258) /* ty=Tensor[(11, 12, 7), float32] */;
  %1264 = subtract(%1261, %1262) /* ty=Tensor[(11, 4, 924), uint16] */;
  (%1263, %1264)
}

def @func_10773() -> Tensor[(13, 13, 2), int64] {
  %1266 = fn () -> Tensor[(13, 13, 2), int64] {
    %1265 = @func_7377() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) */;
    %1265.0
  };
  %1266() /* ty=Tensor[(13, 13, 2), int64] */
}

def @func_5337() -> (Tensor[(10, 16, 14), float32], Tensor[(13, 9, 14), float32]) {
  %1269 = fn () -> (Tensor[(10, 16, 14), float32], Tensor[(13, 9, 14), float32]) {
    %1267 = @func_4701() /* ty=Tensor[(10, 16, 14), float32] */;
    %1268 = @func_718() /* ty=Tensor[(13, 9, 14), float32] */;
    (%1267, %1268)
  };
  %1269() /* ty=(Tensor[(10, 16, 14), float32], Tensor[(13, 9, 14), float32]) */
}

def @func_3987() -> (Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float64], Tensor[(13, 13, 2), int64]) {
  %1270 = @func_3744() /* ty=(Tensor[(13, 13, 2), int64],) */;
  %1271 = @func_3855() /* ty=(Tensor[(16, 8, 5), uint64], Tensor[(13, 9, 14), float64], Tensor[(13, 9, 14), float64]) */;
  %1272 = %1271.1;
  %1273 = cast(%1272, dtype="float64") /* ty=Tensor[(13, 9, 14), float64] */;
  %1274 = %1270.0;
  %1275 = cast(%1274, dtype="int64") /* ty=Tensor[(13, 13, 2), int64] */;
  %1276 = cast(%1274, dtype="int64") /* ty=Tensor[(13, 13, 2), int64] */;
  %1277 = reshape(%1275, newshape=[13, 13, 2]) /* ty=Tensor[(13, 13, 2), int64] */;
  %1278 = reshape(%1276, newshape=[13, 13, 2]) /* ty=Tensor[(13, 13, 2), int64] */;
  %1279 = cosh(%1273) /* ty=Tensor[(13, 9, 14), float64] */;
  %1280 = @func_400(%1277, %1278) /* ty=Tensor[(13, 13, 2), int64] */;
  (%1274, %1279, %1280)
}

def @func_6739(%var_6738: Tensor[(10, 16, 14), float32]) -> (Tensor[(10, 16, 14), int32], Tensor[(13, 13, 2), int64]) {
  %1290 = fn (%var_6727: Tensor[(10, 16, 14), float32]) -> (Tensor[(10, 16, 14), int32], Tensor[(13, 13, 2), int64]) {
    %1281 = @func_5336() /* ty=(Tensor[(10, 16, 14), float32], Tensor[(13, 9, 14), float32]) */;
    %1282 = %1281.0;
    %1283 = cast(%var_6727, dtype="int32") /* ty=Tensor[(10, 16, 14), int32] */;
    %1284 = shape_of(%1282, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1285 = cast(%1282, dtype="int32") /* ty=Tensor[(10, 16, 14), int32] */;
    %1286 = dyn.reshape(%1283, %1284, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %1287 = @func_6569() /* ty=(Tensor[(13, 13, 2), int64],) */;
    %1288 = right_shift(%1285, %1286) /* ty=Tensor[(10, 16, 14), int32] */;
    %1289 = %1287.0;
    (%1288, %1289)
  };
  %1290(%var_6738) /* ty=(Tensor[(10, 16, 14), int32], Tensor[(13, 13, 2), int64]) */
}

def @func_1561() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %1291 = @func_718() /* ty=Tensor[(13, 9, 14), float32] */;
  %1292 = cast(%1291, dtype="float32") /* ty=Tensor[(13, 9, 14), float32] */;
  %1293 = reshape(%1292, newshape=[13, 9, 14]) /* ty=Tensor[(13, 9, 14), float32] */;
  %1294 = @func_1154(%1293) /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), uint16], Tensor[(13, 9, 14), float32]) */;
  %1295 = cast(meta[relay.Constant][42] /* ty=Tensor[(640), uint64] */, dtype="uint64") /* ty=Tensor[(640), uint64] */;
  %1296 = cast(meta[relay.Constant][42] /* ty=Tensor[(640), uint64] */, dtype="uint64") /* ty=Tensor[(640), uint64] */;
  %1297 = reshape(%1295, newshape=[16, 8, 5]) /* ty=Tensor[(16, 8, 5), uint64] */;
  %1298 = reshape(%1296, newshape=[16, 8, 5]) /* ty=Tensor[(16, 8, 5), uint64] */;
  %1299 = @func_245(%1297, %1298) /* ty=(Tensor[(16, 8, 5), uint64],) */;
  %1300 = %1294.2;
  %1301 = %1299.0;
  %1302 = @func_616() /* ty=Tensor[(13, 9, 14), float32] */;
  %1303 = @func_601() /* ty=Tensor[(13, 9, 14), float32] */;
  (%1291, %1300, %1301, meta[relay.Constant][42] /* ty=Tensor[(640), uint64] */, %1302, %1303)
}

def @func_5554() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), int16]) {
  %1304 = @func_5360() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %1305 = @func_1691() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), int16], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64]) */;
  %1306 = %1304.1;
  %1307 = %1305.1;
  (%1306, %1307)
}

def @func_6349() -> (Tensor[(13, 9, 14), float32],) {
  @func_6347() /* ty=(Tensor[(13, 9, 14), float32],) */
}

def @func_8846() -> (Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) {
  %1312 = fn () -> (Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) {
    %1308 = @func_7090() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(10, 16, 14), float32]) */;
    %1309 = @func_4065() /* ty=(Tensor[(13, 9, 14), float32],) */;
    %1310 = %1308.0;
    %1311 = %1309.0;
    (%1310, %1311)
  };
  %1312() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) */
}

def @func_13759() -> (Tensor[(13, 13, 2), int64], Tensor[(9, 14, 9), float32]) {
  %1313 = @func_10929() /* ty=(Tensor[(13, 13, 2), int64],) */;
  %1314 = @func_12801() /* ty=Tensor[(9, 14, 9), float64] */;
  %1315 = cast(%1314, dtype="float32") /* ty=Tensor[(9, 14, 9), float32] */;
  %1316 = %1313.0;
  %1317 = acos(%1315) /* ty=Tensor[(9, 14, 9), float32] */;
  (%1316, %1317)
}

def @func_3408() -> (Tensor[(338), float32],) {
  %1318 = @func_1820() /* ty=(Tensor[(13, 9, 14), int32], Tensor[(16, 8, 5), uint64], Tensor[(338), int64]) */;
  %1319 = %1318.2;
  %1320 = cast(%1319, dtype="float32") /* ty=Tensor[(338), float32] */;
  %1321 = log(%1320) /* ty=Tensor[(338), float32] */;
  (%1321,)
}

def @func_1156(%var_1155: Tensor[(13, 9, 14), float32]) -> (Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), uint16], Tensor[(13, 9, 14), float32]) {
  %1335 = fn (%var_1140: Tensor[(13, 9, 14), float32]) -> (Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), uint16], Tensor[(13, 9, 14), float32]) {
    %1322 = @func_680() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(338), int64]) */;
    %1323 = @func_968() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
    %1324 = @func_968() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
    %1325 = %1324.0;
    %1326 = cast(%var_1140, dtype="uint16") /* ty=Tensor[(13, 9, 14), uint16] */;
    %1327 = shape_of(%1325, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1328 = cast(%1325, dtype="uint16") /* ty=Tensor[(13, 9, 14), uint16] */;
    %1329 = dyn.reshape(%1326, %1327, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %1330 = %1322.1;
    %1331 = @func_616() /* ty=Tensor[(13, 9, 14), float32] */;
    %1332 = %1323.1;
    %1333 = bitwise_xor(%1328, %1329) /* ty=Tensor[(13, 9, 14), uint16] */;
    %1334 = @func_616() /* ty=Tensor[(13, 9, 14), float32] */;
    (%1330, %1331, %1332, %1333, %1334)
  };
  %1335(%var_1155) /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), uint16], Tensor[(13, 9, 14), float32]) */
}

def @func_16692() -> (Tensor[(13, 9, 14), float32], Tensor[(640), uint64]) {
  %1339 = fn () -> (Tensor[(13, 9, 14), float32], Tensor[(640), uint64]) {
    %1336 = @func_16468() /* ty=(Tensor[(640), uint64], Tensor[(13, 9, 14), float32]) */;
    %1337 = @func_14272() /* ty=Tensor[(13, 9, 14), float32] */;
    %1338 = %1336.0;
    (%1337, %1338)
  };
  %1339() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(640), uint64]) */
}

def @func_7219() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %1340 = @func_5610() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %1341 = @func_6235() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %1342 = @func_5610() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %1343 = %1340.1;
  %1344 = %1341.0;
  %1345 = @func_601() /* ty=Tensor[(13, 9, 14), float32] */;
  %1346 = %1342.1;
  (%1343, %1344, %1345, %1346)
}

def @func_11981() -> (Tensor[(10, 16, 14), float32], Tensor[(13, 9, 14), float32]) {
  %1351 = fn () -> (Tensor[(10, 16, 14), float32], Tensor[(13, 9, 14), float32]) {
    %1347 = @func_7090() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(10, 16, 14), float32]) */;
    %1348 = @func_8071() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
    %1349 = %1347.1;
    %1350 = %1348.1;
    (%1349, %1350)
  };
  %1351() /* ty=(Tensor[(10, 16, 14), float32], Tensor[(13, 9, 14), float32]) */
}

def @func_17851() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64]) {
  %1352 = @func_14662() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), uint32]) */;
  %1353 = @func_12483() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(2240), float32], Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %1354 = %1352.0;
  %1355 = %1353.1;
  (%1354, %1355)
}

def @func_20235(%var_20233: Tensor[(924), float64]) -> (Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(924), float64], Tensor[(13, 9, 14), float32], Tensor[(10, 16, 14), float64], Tensor[(13, 9, 14), float32]) {
  @func_20232(%var_20233) /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(924), float64], Tensor[(13, 9, 14), float32], Tensor[(10, 16, 14), float64], Tensor[(13, 9, 14), float32]) */
}

def @func_12885() -> (Tensor[(13, 13, 2), float64], Tensor[(13, 9, 14), float32]) {
  @func_12883() /* ty=(Tensor[(13, 13, 2), float64], Tensor[(13, 9, 14), float32]) */
}

def @func_6629(%var_6628: Tensor[(7, 13, 15), float64]) -> (Tensor[(7, 13, 15), float64],) {
  %1358 = fn (%var_6610: Tensor[(7, 13, 15), float64]) -> (Tensor[(7, 13, 15), float64],) {
    %1356 = cast(%var_6610, dtype="float64") /* ty=Tensor[(7, 13, 15), float64] */;
    %1357 = erf(%1356) /* ty=Tensor[(7, 13, 15), float64] */;
    (%1357,)
  };
  %1358(%var_6628) /* ty=(Tensor[(7, 13, 15), float64],) */
}

def @func_5889() -> (Tensor[(16, 8, 5), uint64], Tensor[(13, 9, 14), float32]) {
  %1359 = @func_4446() /* ty=(Tensor[(10, 16, 14), float32], Tensor[(13, 9, 14), uint32], Tensor[(1638), float32], Tensor[(16, 8, 5), uint64]) */;
  %1360 = @func_4760() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %1361 = %1359.3;
  %1362 = %1360.3;
  (%1361, %1362)
}

def @func_13956() -> (Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64]) {
  %1369 = fn () -> (Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64]) {
    %1363 = @func_6569() /* ty=(Tensor[(13, 13, 2), int64],) */;
    %1364 = @func_13557() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
    %1365 = @func_3744() /* ty=(Tensor[(13, 13, 2), int64],) */;
    %1366 = %1363.0;
    %1367 = %1364.0;
    %1368 = %1365.0;
    (%1366, %1367, %1368)
  };
  %1369() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64]) */
}

def @func_14179(%var_14147: Tensor[(91), float64]) -> (Tensor[(13, 1, 7), float64], Tensor[(13, 9, 14), float32], Tensor[(14, 1, 91), float64]) {
  %1370 = cast(%var_14147, dtype="float64") /* ty=Tensor[(91), float64] */;
  %1371 = reshape(%1370, newshape=[13, 1, 7]) /* ty=Tensor[(13, 1, 7), float64] */;
  %1372 = @func_10594(%1371) /* ty=(Tensor[(13, 1, 7), float64], Tensor[(13, 9, 14), float32]) */;
  %1373 = @func_5729() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %1374 = cast(meta[relay.Constant][43] /* ty=Tensor[(14, 1, 1), float32] */, dtype="float32") /* ty=Tensor[(14, 1, 1), float32] */;
  %1375 = erf(%1374) /* ty=Tensor[(14, 1, 1), float32] */;
  %1376 = cast(%1375, dtype="float64") /* ty=Tensor[(14, 1, 1), float64] */;
  %1377 = cast(%var_14147, dtype="float64") /* ty=Tensor[(91), float64] */;
  %1378 = %1372.0;
  %1379 = %1373.0;
  %1380 = power(%1376, %1377) /* ty=Tensor[(14, 1, 91), float64] */;
  (%1378, %1379, %1380)
}

def @func_4578(%var_4576: Tensor[(13, 26), int64]) -> (Tensor[(16, 8, 5), uint64], Tensor[(16, 8, 5), uint64], Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 26), bool], Tensor[(16, 8, 5), uint64]) {
  @func_4575(%var_4576) /* ty=(Tensor[(16, 8, 5), uint64], Tensor[(16, 8, 5), uint64], Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 26), bool], Tensor[(16, 8, 5), uint64]) */
}

def @func_6347() -> (Tensor[(13, 9, 14), float32],) {
  %1381 = @func_4065() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %1382 = %1381.0;
  (%1382,)
}

def @func_10495() -> (Tensor[(7, 5, 15), float64], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64]) {
  %1387 = fn () -> (Tensor[(7, 5, 15), float64], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64]) {
    %1383 = cast(meta[relay.Constant][44] /* ty=Tensor[(7, 5, 15), float64] */, dtype="float64") /* ty=Tensor[(7, 5, 15), float64] */;
    %1384 = sin(%1383) /* ty=Tensor[(7, 5, 15), float64] */;
    %1385 = @func_3462() /* ty=Tensor[(13, 9, 14), float32] */;
    %1386 = @func_10408() /* ty=Tensor[(13, 13, 2), int64] */;
    (%1384, %1385, %1386)
  };
  %1387() /* ty=(Tensor[(7, 5, 15), float64], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64]) */
}

def @func_11064() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), int32]) {
  %1394 = fn () -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), int32]) {
    %1388 = @func_1561() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
    %1389 = @func_9586() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
    %1390 = @func_1820() /* ty=(Tensor[(13, 9, 14), int32], Tensor[(16, 8, 5), uint64], Tensor[(338), int64]) */;
    %1391 = %1388.0;
    %1392 = %1389.1;
    %1393 = %1390.0;
    (%1391, %1392, %1393)
  };
  %1394() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), int32]) */
}

def @func_2244() -> (Tensor[(13, 9, 14), float64],) {
  %1398 = fn () -> (Tensor[(13, 9, 14), float64],) {
    %1395 = @func_718() /* ty=Tensor[(13, 9, 14), float32] */;
    %1396 = cast(%1395, dtype="float64") /* ty=Tensor[(13, 9, 14), float64] */;
    %1397 = asin(%1396) /* ty=Tensor[(13, 9, 14), float64] */;
    (%1397,)
  };
  %1398() /* ty=(Tensor[(13, 9, 14), float64],) */
}

def @func_11310() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  @func_11308() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */
}

def @func_17187() -> Tensor[(13, 9, 14), float32] {
  @func_17185() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_11077() -> Tensor[(13, 9, 14), float32] {
  @func_11075() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_5556() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), int16]) {
  @func_5554() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), int16]) */
}

def @func_11589(%var_11587: Tensor[(11, 12, 7), uint16], %var_11588: Tensor[(9), uint8]) -> (Tensor[(11, 12, 7), uint16], Tensor[(338), int64], Tensor[(9), uint8], Tensor[(126, 1), uint8], Tensor[(338, 1), int64]) {
  @func_11585(%var_11587, %var_11588) /* ty=(Tensor[(11, 12, 7), uint16], Tensor[(338), int64], Tensor[(9), uint8], Tensor[(126, 1), uint8], Tensor[(338, 1), int64]) */
}

def @func_9882(%var_9880: Tensor[(14, 2, 3), int64], %var_9881: Tensor[(14, 2, 3), int64]) -> (Tensor[(14, 2, 3), bool], Tensor[(14, 2, 3), float64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %1409 = fn (%var_9824: Tensor[(14, 2, 3), int64], %var_9825: Tensor[(14, 2, 3), int64]) -> (Tensor[(14, 2, 3), bool], Tensor[(14, 2, 3), float64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
    %1399 = cast(%var_9825, dtype="bool") /* ty=Tensor[(14, 2, 3), bool] */;
    %1400 = shape_of(%var_9824, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1401 = cast(%var_9824, dtype="bool") /* ty=Tensor[(14, 2, 3), bool] */;
    %1402 = dyn.reshape(%1399, %1400, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1403 = cast(%var_9825, dtype="float64") /* ty=Tensor[(14, 2, 3), float64] */;
    %1404 = @func_4044() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
    %1405 = equal(%1401, %1402) /* ty=Tensor[(14, 2, 3), bool] */;
    %1406 = log10(%1403) /* ty=Tensor[(14, 2, 3), float64] */;
    %1407 = @func_8749() /* ty=Tensor[(13, 9, 14), float32] */;
    %1408 = %1404.1;
    (%1405, %1406, %1407, %1408)
  };
  %1409(%var_9880, %var_9881) /* ty=(Tensor[(14, 2, 3), bool], Tensor[(14, 2, 3), float64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */
}

def @func_17071() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %1410 = @func_7513() /* ty=Tensor[(13, 9, 14), float32] */;
  %1411 = @func_3203() /* ty=Tensor[(13, 9, 14), float32] */;
  %1412 = @func_6854() /* ty=Tensor[(13, 9, 14), float32] */;
  (%1410, %1411, %1412)
}

def @func_15659() -> (Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(13, 13, 2), int64]) {
  %1413 = @func_2653() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %1414 = @func_4902() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %1415 = @func_14806() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) */;
  %1416 = @func_6176() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(13, 13, 2), int64]) */;
  %1417 = @func_10408() /* ty=Tensor[(13, 13, 2), int64] */;
  %1418 = %1413.2;
  %1419 = %1414.0;
  %1420 = %1415.2;
  %1421 = %1416.2;
  (%1417, %1418, %1419, %1420, %1421)
}

def @func_16077() -> (Tensor[(13, 9, 14), float64], Tensor[(16, 8, 5), uint64]) {
  %1426 = fn () -> (Tensor[(13, 9, 14), float64], Tensor[(16, 8, 5), uint64]) {
    %1422 = @func_2243() /* ty=(Tensor[(13, 9, 14), float64],) */;
    %1423 = @func_1724() /* ty=(Tensor[(16, 8, 5), uint64],) */;
    %1424 = %1422.0;
    %1425 = %1423.0;
    (%1424, %1425)
  };
  %1426() /* ty=(Tensor[(13, 9, 14), float64], Tensor[(16, 8, 5), uint64]) */
}

def @func_5612() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  @func_5610() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */
}

def @func_18492(%var_18490: Tensor[(338), int64], %var_18491: Tensor[(1638), float32]) -> (Tensor[(338), int64], Tensor[(13, 9, 14), float32], Tensor[(1638), float32]) {
  @func_18488(%var_18490, %var_18491) /* ty=(Tensor[(338), int64], Tensor[(13, 9, 14), float32], Tensor[(1638), float32]) */
}

def @func_17089() -> (Tensor[(13, 9, 14), float32],) {
  @func_17087() /* ty=(Tensor[(13, 9, 14), float32],) */
}

def @func_7498() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64]) {
  %1427 = @func_5508() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %1428 = %1427.0;
  %1429 = cast(%1428, dtype="float32") /* ty=Tensor[(13, 9, 14), float32] */;
  %1430 = @func_1561() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %1431 = sigmoid(%1429) /* ty=Tensor[(13, 9, 14), float32] */;
  %1432 = %1430.5;
  %1433 = @func_2248() /* ty=Tensor[(16, 8, 5), uint64] */;
  (%1431, %1432, %1433)
}

def @func_11585(%var_11567: Tensor[(11, 12, 7), uint16], %var_11578: Tensor[(9), uint8]) -> (Tensor[(11, 12, 7), uint16], Tensor[(338), int64], Tensor[(9), uint8], Tensor[(126, 1), uint8], Tensor[(338, 1), int64]) {
  %1434 = cast(meta[relay.Constant][45] /* ty=Tensor[(11, 12, 7), uint16] */, dtype="uint16") /* ty=Tensor[(11, 12, 7), uint16] */;
  %1435 = shape_of(%var_11567, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1436 = cast(%var_11567, dtype="uint16") /* ty=Tensor[(11, 12, 7), uint16] */;
  %1437 = dyn.reshape(%1434, %1435, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1438 = cast(%var_11578, dtype="uint8") /* ty=Tensor[(9), uint8] */;
  %1439 = cast(meta[relay.Constant][46] /* ty=Tensor[(126, 1), uint8] */, dtype="uint8") /* ty=Tensor[(126, 1), uint8] */;
  %1440 = cast(meta[relay.Constant][47] /* ty=Tensor[(338, 1), int64] */, dtype="int64") /* ty=Tensor[(338, 1), int64] */;
  %1441 = reshape(%1438, newshape=[3, 3, 1]) /* ty=Tensor[(3, 3, 1), uint8] */;
  %1442 = reshape(%1439, newshape=[3, 3, 14]) /* ty=Tensor[(3, 3, 14), uint8] */;
  %1443 = reshape(%1440, newshape=[338]) /* ty=Tensor[(338), int64] */;
  %1444 = @func_9378(%1441, %1442, %1443) /* ty=(Tensor[(3, 3, 14), float32], Tensor[(338), bool], Tensor[(338), int64]) */;
  %1445 = add(%1436, %1437) /* ty=Tensor[(11, 12, 7), uint16] */;
  %1446 = %1444.2;
  (%1445, %1446, %var_11578, meta[relay.Constant][46] /* ty=Tensor[(126, 1), uint8] */, meta[relay.Constant][47] /* ty=Tensor[(338, 1), int64] */)
}

def @func_3320() -> Tensor[(640), uint64] {
  @func_3318() /* ty=Tensor[(640), uint64] */
}

def @func_10794() -> (Tensor[(13, 13, 2), int64],) {
  %1449 = fn () -> (Tensor[(13, 13, 2), int64],) {
    %1447 = @func_8762() /* ty=(Tensor[(13, 13, 2), int64],) */;
    %1448 = %1447.0;
    (%1448,)
  };
  %1449() /* ty=(Tensor[(13, 13, 2), int64],) */
}

def @func_9671() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64], Tensor[(20, 32), uint64], Tensor[(13, 9, 14), float32]) {
  @func_9669() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64], Tensor[(20, 32), uint64], Tensor[(13, 9, 14), float32]) */
}

def @func_14663() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), uint32]) {
  %1454 = fn () -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), uint32]) {
    %1450 = @func_14109() /* ty=(Tensor[(13, 9, 14), float32],) */;
    %1451 = @func_4446() /* ty=(Tensor[(10, 16, 14), float32], Tensor[(13, 9, 14), uint32], Tensor[(1638), float32], Tensor[(16, 8, 5), uint64]) */;
    %1452 = %1450.0;
    %1453 = %1451.1;
    (%1452, %1453)
  };
  %1454() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), uint32]) */
}

def @func_19331() -> Tensor[(13, 9, 14), float32] {
  @func_19329() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_6307(%var_6305: Tensor[(16, 10, 15), uint32], %var_6306: Tensor[(16, 10, 15), uint32]) -> (Tensor[(16, 10, 15), uint32], Tensor[(13, 9, 14), float32], Tensor[(1638), float32], Tensor[(640), uint64], Tensor[(640), uint64], Tensor[(13, 9, 14), float32]) {
  @func_6303(%var_6305, %var_6306) /* ty=(Tensor[(16, 10, 15), uint32], Tensor[(13, 9, 14), float32], Tensor[(1638), float32], Tensor[(640), uint64], Tensor[(640), uint64], Tensor[(13, 9, 14), float32]) */
}

def @func_3318() -> Tensor[(640), uint64] {
  %1455 = @func_2535() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(640), uint64], Tensor[(13, 13, 2), int64]) */;
  %1455.2
}

def @func_10409() -> Tensor[(13, 13, 2), int64] {
  %1457 = fn () -> Tensor[(13, 13, 2), int64] {
    %1456 = @func_9485() /* ty=(Tensor[(13, 13, 2), int64],) */;
    %1456.0
  };
  %1457() /* ty=Tensor[(13, 13, 2), int64] */
}

def @func_1338() -> Tensor[(13, 9, 14), float32] {
  @func_616() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_8555(%var_8553: Tensor[(2240), float32], %var_8554: Tensor[(338), int64]) -> (Tensor[(640), uint64], Tensor[(10, 16, 14), int32], Tensor[(2240), int8], Tensor[(16, 8, 5), uint64], Tensor[(338), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %1475 = fn (%var_8496: Tensor[(2240), float32], %var_8512: Tensor[(338), int64]) -> (Tensor[(640), uint64], Tensor[(10, 16, 14), int32], Tensor[(2240), int8], Tensor[(16, 8, 5), uint64], Tensor[(338), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
    %1458 = cast(%var_8496, dtype="float32") /* ty=Tensor[(2240), float32] */;
    %1459 = reshape(%1458, newshape=[10, 16, 14]) /* ty=Tensor[(10, 16, 14), float32] */;
    %1460 = @func_6737(%1459) /* ty=(Tensor[(10, 16, 14), int32], Tensor[(13, 13, 2), int64]) */;
    %1461 = cast(meta[relay.Constant][48] /* ty=Tensor[(2240), float32] */, dtype="int8") /* ty=Tensor[(2240), int8] */;
    %1462 = shape_of(%var_8496, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1463 = cast(%var_8496, dtype="int8") /* ty=Tensor[(2240), int8] */;
    %1464 = dyn.reshape(%1461, %1462, newshape=[]) /* ty=Tensor[(?), int8] */;
    %1465 = cast(%var_8512, dtype="int64") /* ty=Tensor[(338), int64] */;
    %1466 = reshape(%1465, newshape=[13, 26]) /* ty=Tensor[(13, 26), int64] */;
    %1467 = @func_8345(%1466) /* ty=(Tensor[(16, 8, 5), uint64], Tensor[(13, 13, 2), int64], Tensor[(13, 13, 2), int64], Tensor[(13, 26), float64]) */;
    %1468 = @func_5049() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
    %1469 = @func_3318() /* ty=Tensor[(640), uint64] */;
    %1470 = %1460.0;
    %1471 = bitwise_or(%1463, %1464) /* ty=Tensor[(2240), int8] */;
    %1472 = %1467.0;
    %1473 = %1468.1;
    %1474 = @func_601() /* ty=Tensor[(13, 9, 14), float32] */;
    (%1469, %1470, %1471, %1472, %var_8512, %1473, %1474)
  };
  %1475(%var_8553, %var_8554) /* ty=(Tensor[(640), uint64], Tensor[(10, 16, 14), int32], Tensor[(2240), int8], Tensor[(16, 8, 5), uint64], Tensor[(338), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */
}

def @func_7092() -> (Tensor[(13, 13, 2), int64], Tensor[(10, 16, 14), float32]) {
  @func_7090() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(10, 16, 14), float32]) */
}

def @func_10711(%var_10710: Tensor[(702), float32]) -> (Tensor[(338), int64], Tensor[(338), float32], Tensor[(9, 6, 13), float32], Tensor[(702), float32]) {
  %1484 = fn (%var_10707: Tensor[(702), float32]) -> (Tensor[(338), int64], Tensor[(338), float32], Tensor[(9, 6, 13), float32], Tensor[(702), float32]) {
    %1476 = @func_5492() /* ty=(Tensor[(338), int64],) */;
    %1477 = @func_3408() /* ty=(Tensor[(338), float32],) */;
    %1478 = cast(%var_10707, dtype="float32") /* ty=Tensor[(702), float32] */;
    %1479 = reshape(%1478, newshape=[9, 6, 13]) /* ty=Tensor[(9, 6, 13), float32] */;
    %1480 = @func_8864(%1479) /* ty=(Tensor[(9, 6, 13), float32],) */;
    %1481 = %1476.0;
    %1482 = %1477.0;
    %1483 = %1480.0;
    (%1481, %1482, %1483, %var_10707)
  };
  %1484(%var_10710) /* ty=(Tensor[(338), int64], Tensor[(338), float32], Tensor[(9, 6, 13), float32], Tensor[(702), float32]) */
}

def @func_20043() -> Tensor[(13, 13, 2), int64] {
  %1485 = fn () -> Tensor[(13, 13, 2), int64] {
    @func_19840() /* ty=Tensor[(13, 13, 2), int64] */
  };
  %1485() /* ty=Tensor[(13, 13, 2), int64] */
}

def @func_6237() -> (Tensor[(13, 9, 14), float32],) {
  @func_6235() /* ty=(Tensor[(13, 9, 14), float32],) */
}

def @func_3463() -> Tensor[(13, 9, 14), float32] {
  %1487 = fn () -> Tensor[(13, 9, 14), float32] {
    %1486 = @func_2597() /* ty=(Tensor[(13, 9, 14), float32],) */;
    %1486.0
  };
  %1487() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_8206() -> (Tensor[(13, 9, 14), float32],) {
  @func_8204() /* ty=(Tensor[(13, 9, 14), float32],) */
}

def @func_8605() -> (Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %1488 = @func_1459() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float64]) */;
  %1489 = @func_968() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %1490 = %1488.0;
  %1491 = %1489.0;
  %1492 = @func_7716() /* ty=Tensor[(13, 9, 14), float32] */;
  (%1490, %1491, %1492)
}

def @func_4259() -> Tensor[(13, 9, 14), float32] {
  @func_4257() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_1782(%var_1781: Tensor[(13, 9, 14), float32]) -> (Tensor[(13, 9, 14), float64],) {
  %1499 = fn (%var_1775: Tensor[(13, 9, 14), float32]) -> (Tensor[(13, 9, 14), float64],) {
    %1493 = @func_891() /* ty=Tensor[(13, 9, 14), float32] */;
    %1494 = cast(%var_1775, dtype="float64") /* ty=Tensor[(13, 9, 14), float64] */;
    %1495 = shape_of(%1493, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1496 = cast(%1493, dtype="float64") /* ty=Tensor[(13, 9, 14), float64] */;
    %1497 = dyn.reshape(%1494, %1495, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1498 = divide(%1496, %1497) /* ty=Tensor[(13, 9, 14), float64] */;
    (%1498,)
  };
  %1499(%var_1781) /* ty=(Tensor[(13, 9, 14), float64],) */
}

def @func_4045() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %1503 = fn () -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
    %1500 = @func_3674() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(10, 16, 14), float32]) */;
    %1501 = @func_891() /* ty=Tensor[(13, 9, 14), float32] */;
    %1502 = %1500.0;
    (%1501, %1502)
  };
  %1503() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */
}

def @func_18792(%var_18790: Tensor[(14, 66), uint16], %var_18791: Tensor[(9), uint8]) -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float64], Tensor[(338, 1), int64], Tensor[(14, 66), uint16], Tensor[(9), uint8]) {
  %1515 = fn (%var_18782: Tensor[(14, 66), uint16], %var_18783: Tensor[(9), uint8]) -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float64], Tensor[(338, 1), int64], Tensor[(14, 66), uint16], Tensor[(9), uint8]) {
    %1504 = @func_11075() /* ty=Tensor[(13, 9, 14), float32] */;
    %1505 = cast(%1504, dtype="float32") /* ty=Tensor[(13, 9, 14), float32] */;
    %1506 = reshape(%1505, newshape=[13, 9, 14]) /* ty=Tensor[(13, 9, 14), float32] */;
    %1507 = @func_1780(%1506) /* ty=(Tensor[(13, 9, 14), float64],) */;
    %1508 = cast(%var_18782, dtype="uint16") /* ty=Tensor[(14, 66), uint16] */;
    %1509 = cast(%var_18783, dtype="uint8") /* ty=Tensor[(9), uint8] */;
    %1510 = reshape(%1508, newshape=[11, 12, 7]) /* ty=Tensor[(11, 12, 7), uint16] */;
    %1511 = reshape(%1509, newshape=[9]) /* ty=Tensor[(9), uint8] */;
    %1512 = @func_11585(%1510, %1511) /* ty=(Tensor[(11, 12, 7), uint16], Tensor[(338), int64], Tensor[(9), uint8], Tensor[(126, 1), uint8], Tensor[(338, 1), int64]) */;
    %1513 = %1507.0;
    %1514 = %1512.4;
    (%1504, %1513, %1514, %var_18782, %var_18783)
  };
  %1515(%var_18790, %var_18791) /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float64], Tensor[(338, 1), int64], Tensor[(14, 66), uint16], Tensor[(9), uint8]) */
}

def @func_12339() -> (Tensor[(13, 9, 14), float32],) {
  %1517 = fn () -> (Tensor[(13, 9, 14), float32],) {
    %1516 = @func_11146() /* ty=Tensor[(13, 9, 14), float32] */;
    (%1516,)
  };
  %1517() /* ty=(Tensor[(13, 9, 14), float32],) */
}

def @func_12757() -> Tensor[(13, 9, 14), float32] {
  @func_12755() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_11194() -> (Tensor[(13, 9, 14), float32],) {
  @func_11192() /* ty=(Tensor[(13, 9, 14), float32],) */
}

def @func_12637(%var_12635: Tensor[(2400), uint32]) -> (Tensor[(13, 13, 2), int64], Tensor[(338), float64], Tensor[(13, 9, 14), int16], Tensor[(640), uint64], Tensor[(2400), uint32]) {
  @func_12634(%var_12635) /* ty=(Tensor[(13, 13, 2), int64], Tensor[(338), float64], Tensor[(13, 9, 14), int16], Tensor[(640), uint64], Tensor[(2400), uint32]) */
}

def @func_12485() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(2240), float32], Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  @func_12483() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(2240), float32], Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */
}

def @func_2787(%var_2786: Tensor[(22, 2), float32]) -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(11, 2, 2), float32], Tensor[(22, 2), float32], Tensor[(13, 9, 14), float64]) {
  %1528 = fn (%var_2768: Tensor[(22, 2), float32]) -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(11, 2, 2), float32], Tensor[(22, 2), float32], Tensor[(13, 9, 14), float64]) {
    %1518 = cast(%var_2768, dtype="float32") /* ty=Tensor[(22, 2), float32] */;
    %1519 = reshape(%1518, newshape=[11, 2, 2]) /* ty=Tensor[(11, 2, 2), float32] */;
    %1520 = @func_891() /* ty=Tensor[(13, 9, 14), float32] */;
    %1521 = cast(%1520, dtype="float64") /* ty=Tensor[(13, 9, 14), float64] */;
    %1522 = cos(%1521) /* ty=Tensor[(13, 9, 14), float64] */;
    %1523 = cast(%1522, dtype="float64") /* ty=Tensor[(13, 9, 14), float64] */;
    %1524 = @func_891() /* ty=Tensor[(13, 9, 14), float32] */;
    %1525 = @func_891() /* ty=Tensor[(13, 9, 14), float32] */;
    %1526 = @func_2357(%1519) /* ty=Tensor[(11, 2, 2), float32] */;
    %1527 = tan(%1523) /* ty=Tensor[(13, 9, 14), float64] */;
    (%1524, %1525, %1526, %var_2768, %1527)
  };
  %1528(%var_2786) /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(11, 2, 2), float32], Tensor[(22, 2), float32], Tensor[(13, 9, 14), float64]) */
}

def @func_16666() -> (Tensor[(7, 5, 15), float64], Tensor[(338), float64], Tensor[(338), float32]) {
  %1537 = fn () -> (Tensor[(7, 5, 15), float64], Tensor[(338), float64], Tensor[(338), float32]) {
    %1529 = @func_16146() /* ty=(Tensor[(7, 5, 15), float64],) */;
    %1530 = cast(meta[relay.Constant][49] /* ty=Tensor[(338), float32] */, dtype="float32") /* ty=Tensor[(338), float32] */;
    %1531 = cast(meta[relay.Constant][49] /* ty=Tensor[(338), float32] */, dtype="uint16") /* ty=Tensor[(338), uint16] */;
    %1532 = reshape(%1530, newshape=[338]) /* ty=Tensor[(338), float32] */;
    %1533 = reshape(%1531, newshape=[338]) /* ty=Tensor[(338), uint16] */;
    %1534 = @func_5864(%1532, %1533) /* ty=(Tensor[(338), int32], Tensor[(338), int64], Tensor[(338), float64]) */;
    %1535 = %1529.0;
    %1536 = %1534.2;
    (%1535, %1536, meta[relay.Constant][49] /* ty=Tensor[(338), float32] */)
  };
  %1537() /* ty=(Tensor[(7, 5, 15), float64], Tensor[(338), float64], Tensor[(338), float32]) */
}

def @func_13281() -> Tensor[(338), int64] {
  @func_13279() /* ty=Tensor[(338), int64] */
}

def @func_891() -> Tensor[(13, 9, 14), float32] {
  @func_718() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_2401() -> Tensor[(13, 9, 14), float32] {
  @func_601() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_13578() -> (Tensor[(13, 13, 2), int64],) {
  %1538 = @func_7377() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) */;
  %1539 = %1538.0;
  (%1539,)
}

def @func_14608() -> (Tensor[(10, 16, 14), float32],) {
  %1541 = fn () -> (Tensor[(10, 16, 14), float32],) {
    %1540 = @func_4701() /* ty=Tensor[(10, 16, 14), float32] */;
    (%1540,)
  };
  %1541() /* ty=(Tensor[(10, 16, 14), float32],) */
}

def @func_19910() -> (Tensor[(10, 16, 14), float32],) {
  %1543 = fn () -> (Tensor[(10, 16, 14), float32],) {
    %1542 = @func_3021() /* ty=Tensor[(10, 16, 14), float32] */;
    (%1542,)
  };
  %1543() /* ty=(Tensor[(10, 16, 14), float32],) */
}

def @func_2359(%var_2358: Tensor[(11, 2, 2), float32]) -> Tensor[(11, 2, 2), float32] {
  %1546 = fn (%var_2352: Tensor[(11, 2, 2), float32]) -> Tensor[(11, 2, 2), float32] {
    %1544 = cast(-3.56888f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %1545 = cast(%var_2352, dtype="float32") /* ty=Tensor[(11, 2, 2), float32] */;
    floor_divide(%1544, %1545) /* ty=Tensor[(11, 2, 2), float32] */
  };
  %1546(%var_2358) /* ty=Tensor[(11, 2, 2), float32] */
}

def @func_17001() -> Tensor[(13, 13, 2), int64] {
  %1548 = fn () -> Tensor[(13, 13, 2), int64] {
    %1547 = @func_680() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(338), int64]) */;
    %1547.1
  };
  %1548() /* ty=Tensor[(13, 13, 2), int64] */
}

def @func_3675() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(10, 16, 14), float32]) {
  %1554 = fn () -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(10, 16, 14), float32]) {
    %1549 = @func_2535() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(640), uint64], Tensor[(13, 13, 2), int64]) */;
    %1550 = @func_2822() /* ty=Tensor[(13, 9, 14), float32] */;
    %1551 = @func_2401() /* ty=Tensor[(13, 9, 14), float32] */;
    %1552 = %1549.3;
    %1553 = @func_3021() /* ty=Tensor[(10, 16, 14), float32] */;
    (%1550, %1551, %1552, %1553)
  };
  %1554() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(10, 16, 14), float32]) */
}

def @func_9224() -> Tensor[(13, 9, 14), float32] {
  %1555 = fn () -> Tensor[(13, 9, 14), float32] {
    @func_9208() /* ty=Tensor[(13, 9, 14), float32] */
  };
  %1555() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_18431() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), int16]) {
  %1560 = fn () -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), int16]) {
    %1556 = @func_8204() /* ty=(Tensor[(13, 9, 14), float32],) */;
    %1557 = @func_1691() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), int16], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64]) */;
    %1558 = %1556.0;
    %1559 = %1557.1;
    (%1558, %1559)
  };
  %1560() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), int16]) */
}

def @func_13435() -> Tensor[(13, 9, 14), float32] {
  @func_13433() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_6381() -> Tensor[(13, 9, 14), float32] {
  @func_6379() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_1944() -> Tensor[(13, 9, 14), float32] {
  %1561 = @func_1561() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %1561.5
}

def @func_12370() -> (Tensor[(13, 9, 14), uint32],) {
  %1562 = @func_4446() /* ty=(Tensor[(10, 16, 14), float32], Tensor[(13, 9, 14), uint32], Tensor[(1638), float32], Tensor[(16, 8, 5), uint64]) */;
  %1563 = %1562.1;
  (%1563,)
}

def @func_12483() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(2240), float32], Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %1564 = @func_5336() /* ty=(Tensor[(10, 16, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %1565 = cast(meta[relay.Constant][50] /* ty=Tensor[(2240), float32] */, dtype="float32") /* ty=Tensor[(2240), float32] */;
  %1566 = reshape(%1565, newshape=[10, 16, 14]) /* ty=Tensor[(10, 16, 14), float32] */;
  %1567 = @func_6737(%1566) /* ty=(Tensor[(10, 16, 14), int32], Tensor[(13, 13, 2), int64]) */;
  %1568 = @func_6569() /* ty=(Tensor[(13, 13, 2), int64],) */;
  %1569 = @func_5691() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %1570 = @func_7219() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %1571 = %1564.1;
  %1572 = %1567.1;
  %1573 = %1568.0;
  %1574 = %1569.0;
  %1575 = %1570.3;
  (%1571, %1572, meta[relay.Constant][50] /* ty=Tensor[(2240), float32] */, %1573, %1574, %1575)
}

def @func_13594(%var_13588: Tensor[(338), float32]) -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(338), float32]) {
  %1576 = @func_4065() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %1577 = cast(%var_13588, dtype="float32") /* ty=Tensor[(338), float32] */;
  %1578 = reshape(%1577, newshape=[338]) /* ty=Tensor[(338), float32] */;
  %1579 = @func_9803(%1578) /* ty=(Tensor[(338), bool], Tensor[(13, 9, 14), float32]) */;
  %1580 = %1576.0;
  %1581 = %1579.1;
  (%1580, %1581, %var_13588)
}

def @func_14926(%var_14924: Tensor[(338), bool], %var_14925: Tensor[(7392), float64]) -> (Tensor[(13, 9, 14), float32], Tensor[(338), float64], Tensor[(8, 924), int8], Tensor[(7392), float64]) {
  %1595 = fn (%var_14900: Tensor[(338), bool], %var_14920: Tensor[(7392), float64]) -> (Tensor[(13, 9, 14), float32], Tensor[(338), float64], Tensor[(8, 924), int8], Tensor[(7392), float64]) {
    %1582 = @func_5967() /* ty=(Tensor[(13, 9, 14), float32],) */;
    %1583 = @func_12424() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(338), bool]) */;
    %1584 = %1583.1;
    %1585 = cast(%var_14900, dtype="float64") /* ty=Tensor[(338), float64] */;
    %1586 = shape_of(%1584, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1587 = cast(%1584, dtype="float64") /* ty=Tensor[(338), float64] */;
    %1588 = dyn.reshape(%1585, %1586, newshape=[]) /* ty=Tensor[(?), float64] */;
    %1589 = cast(%var_14920, dtype="float64") /* ty=Tensor[(7392), float64] */;
    %1590 = reshape(%1589, newshape=[8, 924]) /* ty=Tensor[(8, 924), float64] */;
    %1591 = @func_13237(%1590) /* ty=(Tensor[(8, 924), int8],) */;
    %1592 = %1582.0;
    %1593 = add(%1587, %1588) /* ty=Tensor[(338), float64] */;
    %1594 = %1591.0;
    (%1592, %1593, %1594, %var_14920)
  };
  %1595(%var_14924, %var_14925) /* ty=(Tensor[(13, 9, 14), float32], Tensor[(338), float64], Tensor[(8, 924), int8], Tensor[(7392), float64]) */
}

def @func_11148() -> Tensor[(13, 9, 14), float32] {
  @func_11146() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_5493() -> (Tensor[(338), int64],) {
  %1598 = fn () -> (Tensor[(338), int64],) {
    %1596 = @func_680() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(338), int64]) */;
    %1597 = %1596.2;
    (%1597,)
  };
  %1598() /* ty=(Tensor[(338), int64],) */
}

def @func_12802() -> Tensor[(9, 14, 9), float64] {
  %1600 = fn () -> Tensor[(9, 14, 9), float64] {
    %1599 = cast(meta[relay.Constant][51] /* ty=Tensor[(9, 14, 9), float64] */, dtype="float64") /* ty=Tensor[(9, 14, 9), float64] */;
    rsqrt(%1599) /* ty=Tensor[(9, 14, 9), float64] */
  };
  %1600() /* ty=Tensor[(9, 14, 9), float64] */
}

def @func_14879() -> (Tensor[(338), bool], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %1606 = fn () -> (Tensor[(338), bool], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
    %1601 = @func_11532() /* ty=(Tensor[(338), bool],) */;
    %1602 = @func_8631() /* ty=(Tensor[(13, 9, 14), float32],) */;
    %1603 = %1601.0;
    %1604 = %1602.0;
    %1605 = @func_4862() /* ty=Tensor[(13, 9, 14), float32] */;
    (%1603, %1604, %1605)
  };
  %1606() /* ty=(Tensor[(338), bool], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */
}

def @func_16499() -> (Tensor[(13, 9, 14), float32], Tensor[(640), uint64]) {
  %1610 = fn () -> (Tensor[(13, 9, 14), float32], Tensor[(640), uint64]) {
    %1607 = @func_16127() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64], Tensor[(13, 9, 14), float32]) */;
    %1608 = @func_718() /* ty=Tensor[(13, 9, 14), float32] */;
    %1609 = %1607.3;
    (%1608, %1609)
  };
  %1610() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(640), uint64]) */
}

def @func_18950() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(338, 640), float64]) {
  %1611 = cast(meta[relay.Constant][52] /* ty=Tensor[(338, 1), int64] */, dtype="int64") /* ty=Tensor[(338, 1), int64] */;
  %1612 = reshape(%1611, newshape=[13, 26]) /* ty=Tensor[(13, 26), int64] */;
  %1613 = @func_4575(%1612) /* ty=(Tensor[(16, 8, 5), uint64], Tensor[(16, 8, 5), uint64], Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 26), bool], Tensor[(16, 8, 5), uint64]) */;
  %1614 = @func_13369() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %1615 = @func_5413() /* ty=(Tensor[(338), float64], Tensor[(13, 9, 14), float32], Tensor[(640), uint64]) */;
  %1616 = %1615.2;
  %1617 = cast(meta[relay.Constant][52] /* ty=Tensor[(338, 1), int64] */, dtype="float64") /* ty=Tensor[(338, 1), float64] */;
  %1618 = cast(%1616, dtype="float64") /* ty=Tensor[(640), float64] */;
  %1619 = %1613.3;
  %1620 = @func_11146() /* ty=Tensor[(13, 9, 14), float32] */;
  %1621 = %1614.0;
  %1622 = divide(%1617, %1618) /* ty=Tensor[(338, 640), float64] */;
  (%1619, %1620, %1621, %1622)
}

def @func_14190() -> (Tensor[(13, 9, 14), float32],) {
  %1623 = @func_7219() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %1624 = %1623.3;
  (%1624,)
}

def @func_5729() -> (Tensor[(13, 9, 14), float32],) {
  %1625 = @func_2597() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %1626 = %1625.0;
  (%1626,)
}

def @func_7500() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64]) {
  @func_7498() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64]) */
}

def @func_1294(%var_1292: Tensor[(11, 12, 7), float64]) -> Tensor[(11, 12, 7), float32] {
  @func_1291(%var_1292) /* ty=Tensor[(11, 12, 7), float32] */
}

def @func_16598() -> (Tensor[(13, 13, 2), int64], Tensor[(13, 13, 2), int64], Tensor[(338), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(13, 13, 2), int64]) {
  %1643 = fn () -> (Tensor[(13, 13, 2), int64], Tensor[(13, 13, 2), int64], Tensor[(338), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(13, 13, 2), int64]) {
    %1627 = @func_13704() /* ty=(Tensor[(13, 13, 2), int64],) */;
    %1628 = @func_15803() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) */;
    %1629 = %1628.0;
    %1630 = cast(%1629, dtype="float32") /* ty=Tensor[(13, 13, 2), float32] */;
    %1631 = reshape(%1630, newshape=[338]) /* ty=Tensor[(338), float32] */;
    %1632 = @func_14494(%1631) /* ty=(Tensor[(11, 12, 7), float64], Tensor[(338), int32], Tensor[(338), float32]) */;
    %1633 = @func_5610() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
    %1634 = %1632.2;
    %1635 = cast(%1634, dtype="int64") /* ty=Tensor[(338), int64] */;
    %1636 = reshape(%1635, newshape=[13, 26]) /* ty=Tensor[(13, 26), int64] */;
    %1637 = @func_8345(%1636) /* ty=(Tensor[(16, 8, 5), uint64], Tensor[(13, 13, 2), int64], Tensor[(13, 13, 2), int64], Tensor[(13, 26), float64]) */;
    %1638 = %1627.0;
    %1639 = %1633.1;
    %1640 = @func_12755() /* ty=Tensor[(13, 9, 14), float32] */;
    %1641 = @func_9537() /* ty=Tensor[(13, 13, 2), int64] */;
    %1642 = %1637.1;
    (%1638, %1629, %1634, %1639, %1640, %1641, %1642)
  };
  %1643() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 13, 2), int64], Tensor[(338), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(13, 13, 2), int64]) */
}

def @func_3745() -> (Tensor[(13, 13, 2), int64],) {
  %1646 = fn () -> (Tensor[(13, 13, 2), int64],) {
    %1644 = @func_3600() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32]) */;
    %1645 = %1644.0;
    (%1645,)
  };
  %1646() /* ty=(Tensor[(13, 13, 2), int64],) */
}

def @func_4760() -> (Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) {
  %1647 = @func_3987() /* ty=(Tensor[(13, 13, 2), int64], Tensor[(13, 9, 14), float64], Tensor[(13, 13, 2), int64]) */;
  %1648 = @func_968() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %1649 = @func_2178() /* ty=(Tensor[(13, 9, 14), float32],) */;
  %1650 = %1647.2;
  %1651 = @func_4218() /* ty=Tensor[(13, 9, 14), float32] */;
  %1652 = %1648.0;
  %1653 = %1649.0;
  (%1650, %1651, %1652, %1653)
}

def @func_18101() -> Tensor[(13, 9, 14), float32] {
  %1655 = fn () -> Tensor[(13, 9, 14), float32] {
    %1654 = @func_10433() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
    %1654.0
  };
  %1655() /* ty=Tensor[(13, 9, 14), float32] */
}

def @func_6178() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(13, 13, 2), int64]) {
  @func_6176() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 13, 2), int64], Tensor[(13, 13, 2), int64]) */
}

def @func_16128() -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64], Tensor[(13, 9, 14), float32]) {
  %1665 = fn () -> (Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64], Tensor[(13, 9, 14), float32]) {
    %1656 = @func_6108() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
    %1657 = cast(meta[relay.Constant][53] /* ty=Tensor[(640), uint64] */, dtype="uint64") /* ty=Tensor[(640), uint64] */;
    %1658 = reshape(%1657, newshape=[640]) /* ty=Tensor[(640), uint64] */;
    %1659 = @func_12199(%1658) /* ty=(Tensor[(13, 13, 2), int64], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64]) */;
    %1660 = @func_1404() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(338), int64]) */;
    %1661 = @func_12318() /* ty=Tensor[(13, 9, 14), float32] */;
    %1662 = %1656.1;
    %1663 = %1659.1;
    %1664 = %1660.2;
    (%1661, %1662, %1663, meta[relay.Constant][53] /* ty=Tensor[(640), uint64] */, %1664)
  };
  %1665() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(16, 8, 5), uint64], Tensor[(640), uint64], Tensor[(13, 9, 14), float32]) */
}

def @func_248(%var_246: Tensor[(16, 8, 5), uint64], %var_247: Tensor[(16, 8, 5), uint64]) -> (Tensor[(16, 8, 5), uint64],) {
  %1671 = fn (%var_230: Tensor[(16, 8, 5), uint64], %var_231: Tensor[(16, 8, 5), uint64]) -> (Tensor[(16, 8, 5), uint64],) {
    %1666 = cast(%var_231, dtype="uint64") /* ty=Tensor[(16, 8, 5), uint64] */;
    %1667 = shape_of(%var_230, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1668 = cast(%var_230, dtype="uint64") /* ty=Tensor[(16, 8, 5), uint64] */;
    %1669 = dyn.reshape(%1666, %1667, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %1670 = left_shift(%1668, %1669) /* ty=Tensor[(16, 8, 5), uint64] */;
    (%1670,)
  };
  %1671(%var_246, %var_247) /* ty=(Tensor[(16, 8, 5), uint64],) */
}

def @func_4066() -> (Tensor[(13, 9, 14), float32],) {
  %1674 = fn () -> (Tensor[(13, 9, 14), float32],) {
    %1672 = @func_968() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
    %1673 = %1672.2;
    (%1673,)
  };
  %1674() /* ty=(Tensor[(13, 9, 14), float32],) */
}

def @func_7882(%var_7865: Tensor[(13, 9, 14), float32]) -> (Tensor[(13, 9, 14), bool], Tensor[(13, 9, 14), float32], Tensor[(640), uint64]) {
  %1675 = @func_2653() /* ty=(Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32], Tensor[(13, 9, 14), float32]) */;
  %1676 = %1675.2;
  %1677 = cast(%var_7865, dtype="bool") /* ty=Tensor[(13, 9, 14), bool] */;
  %1678 = shape_of(%1676, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1679 = cast(%1676, dtype="bool") /* ty=Tensor[(13, 9, 14), bool] */;
  %1680 = dyn.reshape(%1677, %1678, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1681 = @func_4126() /* ty=(Tensor[(16, 8, 5), uint64], Tensor[(11, 12, 7), float32], Tensor[(924), float64], Tensor[(640), uint64]) */;
  %1682 = greater_equal(%1679, %1680) /* ty=Tensor[(13, 9, 14), bool] */;
  %1683 = @func_6379() /* ty=Tensor[(13, 9, 14), float32] */;
  %1684 = %1681.3;
  (%1682, %1683, %1684)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen947/build/output.py", line 6429, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  79: TVMFuncCall
  78: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  77: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  76: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  75: tvm::transform::Pass::operator()(tvm::IRModule) const
  74: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  73: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  72: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  71: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  70: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  69: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [14:56:33] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int


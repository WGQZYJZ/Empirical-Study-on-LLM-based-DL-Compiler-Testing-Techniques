==========mod==========
#[version = "0.0.5"]
def @func_13008() -> (Tensor[(10, 11, 15), float32], Tensor[(8, 6, 7), bool], Tensor[(585), float64]) {
  %0 = @func_11663() /* ty=(Tensor[(10, 11, 15), float32],) */;
  %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(585), float64] */, dtype="float64") /* ty=Tensor[(585), float64] */;
  %2 = reshape(%1, newshape=[585]) /* ty=Tensor[(585), float64] */;
  %3 = @func_4873(%2) /* ty=(Tensor[(585), bool], Tensor[(585), float64], Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64]) */;
  %4 = %0.0;
  %5 = %3.2;
  (%4, %5, meta[relay.Constant][0] /* ty=Tensor[(585), float64] */)
}

def @func_5298() -> (Tensor[(8, 6, 7), float64],) {
  %6 = @func_1959() /* ty=Tensor[(8, 6, 7), float64] */;
  (%6,)
}

def @func_16424() -> Tensor[(8, 6, 7), float64] {
  %7 = @func_2481() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %7.0
}

def @func_4172() -> (Tensor[(8, 6, 7), bool], Tensor[(1650), float32], Tensor[(8, 6, 7), float64], Tensor[(1650), float64]) {
  %8 = @func_1311() /* ty=Tensor[(8, 6, 7), float64] */;
  %9 = cast(meta[relay.Constant][1] /* ty=Tensor[(8, 6, 7), float64] */, dtype="bool") /* ty=Tensor[(8, 6, 7), bool] */;
  %10 = shape_of(%8, dtype="int32") /* ty=Tensor[(3), int32] */;
  %11 = cast(%8, dtype="bool") /* ty=Tensor[(8, 6, 7), bool] */;
  %12 = dyn.reshape(%9, %10, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %13 = cast(meta[relay.Constant][2] /* ty=Tensor[(1650), float32] */, dtype="float32") /* ty=Tensor[(1650), float32] */;
  %14 = reshape(%13, newshape=[1650]) /* ty=Tensor[(1650), float32] */;
  %15 = @func_3632(%14) /* ty=(Tensor[(8, 6, 7), float64], Tensor[(10, 11, 15), float32], Tensor[(1650), float32]) */;
  %16 = @func_2539() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %17 = cast(meta[relay.Constant][2] /* ty=Tensor[(1650), float32] */, dtype="float64") /* ty=Tensor[(1650), float64] */;
  %18 = greater_equal(%11, %12) /* ty=Tensor[(8, 6, 7), bool] */;
  %19 = %15.2;
  %20 = %16.0;
  %21 = sin(%17) /* ty=Tensor[(1650), float64] */;
  (%18, %19, %20, %21)
}

def @func_18386() -> Tensor[(8, 6, 7), float64] {
  @func_10501() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_7904() -> Tensor[(8, 6, 7), float64] {
  @func_7371() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_13874() -> (Tensor[(8, 6, 7), float64],) {
  %22 = @func_13026() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %23 = %22.0;
  (%23,)
}

def @func_18543() -> (Tensor[(8, 6, 7), float32], Tensor[(224), float64], Tensor[(1568), float64], Tensor[(8, 6, 7), float64]) {
  %24 = @func_17266() /* ty=(Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), float64]) */;
  %25 = cast(meta[relay.Constant][3] /* ty=Tensor[(1568), float64] */, dtype="float64") /* ty=Tensor[(1568), float64] */;
  %26 = reshape(%25, newshape=[1568]) /* ty=Tensor[(1568), float64] */;
  %27 = @func_16191(%26) /* ty=(Tensor[(8, 6, 7), float64], Tensor[(14, ?, 16), int64], Tensor[(224), float64], Tensor[(1568), float64]) */;
  %28 = @func_14217() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %29 = %24.0;
  %30 = %27.2;
  %31 = %28.0;
  (%29, %30, meta[relay.Constant][3] /* ty=Tensor[(1568), float64] */, %31)
}

def @func_20551() -> Tensor[(8, 6, 7), float64] {
  %32 = @func_9739() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %32.0
}

def @func_5820(%var_5808: Tensor[(9, 3, 2), int32], %var_5809: Tensor[(9, 3, 2), int32]) -> (Tensor[(9, 3, 2), int32], Tensor[(8, 6, 7), float64]) {
  %33 = cast(%var_5809, dtype="int32") /* ty=Tensor[(9, 3, 2), int32] */;
  %34 = shape_of(%var_5808, dtype="int32") /* ty=Tensor[(3), int32] */;
  %35 = cast(%var_5808, dtype="int32") /* ty=Tensor[(9, 3, 2), int32] */;
  %36 = dyn.reshape(%33, %34, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %37 = @func_1519() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %38 = right_shift(%35, %36) /* ty=Tensor[(9, 3, 2), int32] */;
  %39 = %37.2;
  (%38, %39)
}

def @func_20322() -> (Tensor[(9, 3, 2), int32], Tensor[(8, 6, 7), float64], Tensor[(6, 10, 6), bool], Tensor[(360), uint16], Tensor[(8, 6, 7), float64]) {
  %40 = @func_12933() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(9, 3, 2), int32]) */;
  %41 = @func_3316() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), bool]) */;
  %42 = cast(meta[relay.Constant][4] /* ty=Tensor[(360), uint16] */, dtype="uint16") /* ty=Tensor[(360), uint16] */;
  %43 = reshape(%42, newshape=[6, 10, 6]) /* ty=Tensor[(6, 10, 6), uint16] */;
  %44 = @func_7548(%43) /* ty=(Tensor[(6, 10, 6), bool], Tensor[(8, 6, 7), float64]) */;
  %45 = @func_7292() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %46 = %40.4;
  %47 = %41.0;
  %48 = %44.0;
  %49 = %45.1;
  (%46, %47, %48, meta[relay.Constant][4] /* ty=Tensor[(360), uint16] */, %49)
}

def @func_3880() -> (Tensor[(8, 6, 7), float64],) {
  %50 = @func_1932() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %51 = %50.0;
  (%51,)
}

def @func_11783() -> Tensor[(8, 6, 7), float64] {
  %52 = @func_9739() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %52.2
}

def @func_15714() -> Tensor[(8, 6, 7), float64] {
  %53 = @func_12519() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %53.0
}

def @func_14217() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %54 = @func_10418() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %55 = %54.2;
  %56 = @func_6464() /* ty=Tensor[(8, 6, 7), float64] */;
  (%55, %56)
}

def @func_6315() -> Tensor[(8, 6, 7), float64] {
  @func_1627() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_18179() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %57 = @func_16071() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %58 = @func_10160() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %59 = %57.1;
  %60 = %58.0;
  (%59, %60)
}

def @func_19580() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %61 = @func_16793() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %62 = @func_6315() /* ty=Tensor[(8, 6, 7), float64] */;
  %63 = %61.0;
  (%62, %63)
}

def @func_2860() -> Tensor[(8, 6, 7), float64] {
  %64 = @func_2390() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %64.0
}

def @func_19228() -> Tensor[(8, 6, 7), float64] {
  @func_15267() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_9796() -> (Tensor[(8, 6, 7), float64], Tensor[(585), bool], Tensor[(585), float64], Tensor[(8, 6, 7), float64], Tensor[(110, 15), float32]) {
  %65 = @func_4516() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %66 = cast(meta[relay.Constant][5] /* ty=Tensor[(585), float64] */, dtype="float64") /* ty=Tensor[(585), float64] */;
  %67 = reshape(%66, newshape=[585]) /* ty=Tensor[(585), float64] */;
  %68 = @func_4873(%67) /* ty=(Tensor[(585), bool], Tensor[(585), float64], Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64]) */;
  %69 = cast(meta[relay.Constant][6] /* ty=Tensor[(110, 15), float32] */, dtype="float32") /* ty=Tensor[(110, 15), float32] */;
  %70 = cast(meta[relay.Constant][6] /* ty=Tensor[(110, 15), float32] */, dtype="float32") /* ty=Tensor[(110, 15), float32] */;
  %71 = reshape(%69, newshape=[1650]) /* ty=Tensor[(1650), float32] */;
  %72 = reshape(%70, newshape=[1650]) /* ty=Tensor[(1650), float32] */;
  %73 = @func_3363(%71, %72) /* ty=(Tensor[(8, 6, 7), float64], Tensor[(10, 11, 15), float32], Tensor[(8, 6, 7), float64], Tensor[(1650), int64], Tensor[(1650), float64]) */;
  %74 = %65.5;
  %75 = %68.0;
  %76 = %73.2;
  (%74, %75, meta[relay.Constant][5] /* ty=Tensor[(585), float64] */, %76, meta[relay.Constant][6] /* ty=Tensor[(110, 15), float32] */)
}

def @func_6709() -> Tensor[(8, 6, 7), float64] {
  %77 = @func_968() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %77.0
}

def @func_9683() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %78 = @func_5844() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %79 = %78.0;
  %80 = @func_2860() /* ty=Tensor[(8, 6, 7), float64] */;
  (%79, %80)
}

def @func_13667() -> (Tensor[(10, 11, 15), float32], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32]) {
  %81 = @func_13008() /* ty=(Tensor[(10, 11, 15), float32], Tensor[(8, 6, 7), bool], Tensor[(585), float64]) */;
  %82 = @func_10126() /* ty=Tensor[(8, 6, 7), float64] */;
  %83 = cast(%82, dtype="float64") /* ty=Tensor[(8, 6, 7), float64] */;
  %84 = reshape(%83, newshape=[8, 6, 7]) /* ty=Tensor[(8, 6, 7), float64] */;
  %85 = @func_9289(%84) /* ty=(Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), float64]) */;
  %86 = %81.0;
  %87 = %85.0;
  (%86, %82, %87)
}

def @func_8665() -> Tensor[(8, 6, 7), float64] {
  %88 = @func_458() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %88.0
}

def @func_10889() -> (Tensor[(8, 6, 7), float64],) {
  %89 = @func_2084() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %90 = %89.0;
  (%90,)
}

def @func_13572() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %91 = @func_4658() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %92 = %91.1;
  %93 = @func_4912() /* ty=Tensor[(8, 6, 7), float64] */;
  (%92, %93)
}

def @func_14915() -> Tensor[(8, 6, 7), float64] {
  %94 = @func_13572() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %94.0
}

def @func_14436() -> Tensor[(8, 6, 7), float64] {
  %95 = @func_5765() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %95.1
}

def @func_7548(%var_7539: Tensor[(6, 10, 6), uint16]) -> (Tensor[(6, 10, 6), bool], Tensor[(8, 6, 7), float64]) {
  %96 = cast(meta[relay.Constant][7] /* ty=Tensor[(6, 10, 6), uint16] */, dtype="bool") /* ty=Tensor[(6, 10, 6), bool] */;
  %97 = shape_of(%var_7539, dtype="int32") /* ty=Tensor[(3), int32] */;
  %98 = cast(%var_7539, dtype="bool") /* ty=Tensor[(6, 10, 6), bool] */;
  %99 = dyn.reshape(%96, %97, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %100 = @func_4966() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %101 = not_equal(%98, %99) /* ty=Tensor[(6, 10, 6), bool] */;
  %102 = %100.0;
  (%101, %102)
}

def @func_6464() -> Tensor[(8, 6, 7), float64] {
  %103 = @func_1932() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %103.0
}

def @func_5289() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %104 = @func_3093() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %105 = @func_4340() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %106 = @func_1413() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %107 = %104.0;
  %108 = %105.0;
  %109 = %106.0;
  (%107, %108, %109)
}

def @func_10053() -> Tensor[(8, 6, 7), float64] {
  %110 = @func_5289() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %110.0
}

def @func_14926() -> Tensor[(8, 6, 7), float64] {
  %111 = @func_10966() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %111.0
}

def @func_16211() -> (Tensor[(8, 6, 7), float64],) {
  %112 = @func_6666() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %113 = %112.1;
  (%113,)
}

def @func_1248() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %114 = @func_968() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %115 = %114.0;
  %116 = @func_1033() /* ty=Tensor[(8, 6, 7), float64] */;
  (%115, %116)
}

def @func_19354(%var_19349: Tensor[(1650, 1), float32]) -> (Tensor[(8, 6, 7), float64], Tensor[(10, 11, 15), float32], Tensor[(1650, 1), float32]) {
  %117 = @func_6981() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %118 = cast(%var_19349, dtype="float32") /* ty=Tensor[(1650, 1), float32] */;
  %119 = reshape(%118, newshape=[10, 11, 15]) /* ty=Tensor[(10, 11, 15), float32] */;
  %120 = @func_885(%119) /* ty=(Tensor[(10, 11, 15), float32],) */;
  %121 = %117.0;
  %122 = %120.0;
  (%121, %122, %var_19349)
}

def @func_10160() -> (Tensor[(8, 6, 7), float64],) {
  %123 = @func_9118() /* ty=(Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %124 = %123.3;
  (%124,)
}

def @func_6921(%var_6918: int16) -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(11, 1, 12), bool], int16, Tensor[(132, 1), int16]) {
  %125 = @func_4658() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %126 = @func_868() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %127 = @func_2002() /* ty=(Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64]) */;
  %128 = cast(%var_6918, dtype="int16") /* ty=int16 */;
  %129 = cast(meta[relay.Constant][8] /* ty=Tensor[(132, 1), int16] */, dtype="int16") /* ty=Tensor[(132, 1), int16] */;
  %130 = reshape(%128, newshape=[]) /* ty=int16 */;
  %131 = reshape(%129, newshape=[11, 1, 12]) /* ty=Tensor[(11, 1, 12), int16] */;
  %132 = @func_4108(%130, %131) /* ty=(Tensor[(11, 1, 12), bool],) */;
  %133 = %125.2;
  %134 = %126.0;
  %135 = %127.1;
  %136 = @func_1033() /* ty=Tensor[(8, 6, 7), float64] */;
  %137 = @func_1790() /* ty=Tensor[(8, 6, 7), float64] */;
  %138 = %132.0;
  (%133, %134, %135, %136, %137, %138, %var_6918, meta[relay.Constant][8] /* ty=Tensor[(132, 1), int16] */)
}

def @func_12933() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(9, 3, 2), int32]) {
  %139 = @func_8496() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %140 = @func_4172() /* ty=(Tensor[(8, 6, 7), bool], Tensor[(1650), float32], Tensor[(8, 6, 7), float64], Tensor[(1650), float64]) */;
  %141 = @func_8474() /* ty=(Tensor[(9, 3, 2), int32],) */;
  %142 = %139.0;
  %143 = %140.0;
  %144 = @func_6709() /* ty=Tensor[(8, 6, 7), float64] */;
  %145 = @func_10126() /* ty=Tensor[(8, 6, 7), float64] */;
  %146 = %141.0;
  (%142, %143, %144, %145, %146)
}

def @func_10270() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %147 = @func_7025() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %148 = @func_6981() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %149 = %147.0;
  %150 = %148.1;
  (%149, %150)
}

def @func_19395() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(16, 10, 9), float64]) {
  %151 = @func_15894() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %152 = @func_18594() /* ty=(Tensor[(16, 10, 9), float64], Tensor[(8, 6, 7), float64]) */;
  %153 = %151.0;
  %154 = @func_1045() /* ty=Tensor[(8, 6, 7), float64] */;
  %155 = %152.0;
  (%153, %154, %155)
}

def @func_20374() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %156 = @func_2988() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %157 = @func_12076() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %158 = %156.2;
  %159 = %157.0;
  %160 = @func_15714() /* ty=Tensor[(8, 6, 7), float64] */;
  (%158, %159, %160)
}

def @func_7343() -> Tensor[(8, 6, 7), float64] {
  %161 = @func_735() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %161.0
}

def @func_1562(%var_1557: Tensor[(13, 3, 15), float64]) -> (Tensor[(13, 3, 15), float32],) {
  %162 = cast(%var_1557, dtype="float64") /* ty=Tensor[(13, 3, 15), float64] */;
  %163 = atan(%162) /* ty=Tensor[(13, 3, 15), float64] */;
  %164 = cast(%163, dtype="float32") /* ty=Tensor[(13, 3, 15), float32] */;
  %165 = sqrt(%164) /* ty=Tensor[(13, 3, 15), float32] */;
  (%165,)
}

def @func_11179() -> (Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %166 = @func_1141() /* ty=(Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), bool]) */;
  %167 = @func_10418() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %168 = @func_10846() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %169 = @func_2390() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %170 = %166.2;
  %171 = %167.1;
  %172 = %168.2;
  %173 = %169.0;
  (%170, %171, %172, %173)
}

def @func_7497(%var_7431: Tensor[(14, 1, 16), float64], %var_7449: Tensor[(14, 7, 16), float64]) -> (Tensor[(8, 6, 7), float64], Tensor[(14, 7, 16), int32], Tensor[(8, 6, 7), float64], Tensor[(14, ?, 16), int32], Tensor[(14, ?, 16), int64]) {
  %174 = @func_6266() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %175 = cast(%var_7431, dtype="int32") /* ty=Tensor[(14, 1, 16), int32] */;
  %176 = cast(%var_7449, dtype="int32") /* ty=Tensor[(14, 7, 16), int32] */;
  %177 = @func_5765() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %178 = cast(%var_7431, dtype="float64") /* ty=Tensor[(14, 1, 16), float64] */;
  %179 = acosh(%178) /* ty=Tensor[(14, 1, 16), float64] */;
  %180 = cast(%var_7431, dtype="uint8") /* ty=Tensor[(14, 1, 16), uint8] */;
  %181 = shape_of(%179, dtype="int32") /* ty=Tensor[(3), int32] */;
  %182 = cast(%179, dtype="uint8") /* ty=Tensor[(14, 1, 16), uint8] */;
  %183 = dyn.reshape(%180, %181, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %184 = multiply(%182, %183) /* ty=Tensor[(14, ?, 16), uint8] */;
  %185 = cast(%var_7431, dtype="int32") /* ty=Tensor[(14, 1, 16), int32] */;
  %186 = shape_of(%184, dtype="int32") /* ty=Tensor[(3), int32] */;
  %187 = cast(%184, dtype="int32") /* ty=Tensor[(14, ?, 16), int32] */;
  %188 = dyn.reshape(%185, %186, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %189 = cast(%179, dtype="float64") /* ty=Tensor[(14, 1, 16), float64] */;
  %190 = sin(%189) /* ty=Tensor[(14, 1, 16), float64] */;
  %191 = cast(%179, dtype="int64") /* ty=Tensor[(14, 1, 16), int64] */;
  %192 = shape_of(%190, dtype="int32") /* ty=Tensor[(3), int32] */;
  %193 = cast(%190, dtype="int64") /* ty=Tensor[(14, 1, 16), int64] */;
  %194 = dyn.reshape(%191, %192, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %195 = %174.0;
  %196 = bitwise_or(%175, %176) /* ty=Tensor[(14, 7, 16), int32] */;
  %197 = %177.1;
  %198 = bitwise_and(%187, %188) /* ty=Tensor[(14, ?, 16), int32] */;
  %199 = maximum(%193, %194) /* ty=Tensor[(14, ?, 16), int64] */;
  (%195, %196, %197, %198, %199)
}

def @func_20133() -> Tensor[(15, 2, 5), int32] {
  %200 = @func_17746() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(15, 2, 5), int32], Tensor[(13, 150), bool]) */;
  %200.3
}

def @func_16959() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %201 = @func_12519() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %202 = @func_10104() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %203 = %201.0;
  %204 = %202.0;
  (%203, %204)
}

def @func_7313() -> (Tensor[(8, 6, 7), float64],) {
  %205 = @func_4698() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %206 = %205.0;
  (%206,)
}

def @func_7581() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), float64]) {
  %207 = @func_4825() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %208 = @func_7193() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %209 = %208.0;
  %210 = cast(%209, dtype="float32") /* ty=Tensor[(8, 6, 7), float32] */;
  %211 = @func_1519() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %212 = %207.0;
  %213 = cos(%210) /* ty=Tensor[(8, 6, 7), float32] */;
  %214 = %211.2;
  (%212, %213, %214)
}

def @func_7892() -> (Tensor[(8, 6, 7), float64],) {
  %215 = @func_1519() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %216 = %215.0;
  (%216,)
}

def @func_2084() -> (Tensor[(8, 6, 7), float64],) {
  %217 = @func_502() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %218 = %217.0;
  (%218,)
}

def @func_13208() -> Tensor[(8, 6, 7), float64] {
  %219 = @func_12519() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %219.0
}

def @main(%var_20721: Tensor[(10, 8, 15), uint64], %var_20722: Tensor[(10, 8, 15), uint64]) -> (Tensor[(10, 8, 15), bool], Tensor[(10, 8, 15), bool]) {
  %220 = cast(%var_20722, dtype="bool") /* ty=Tensor[(10, 8, 15), bool] */;
  %221 = shape_of(%var_20721, dtype="int32") /* ty=Tensor[(3), int32] */;
  %222 = cast(%var_20721, dtype="bool") /* ty=Tensor[(10, 8, 15), bool] */;
  %223 = dyn.reshape(%220, %221, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %224 = cast(meta[relay.Constant][9] /* ty=Tensor[(10, 8, 15), uint64] */, dtype="bool") /* ty=Tensor[(10, 8, 15), bool] */;
  %225 = shape_of(%var_20722, dtype="int32") /* ty=Tensor[(3), int32] */;
  %226 = cast(%var_20722, dtype="bool") /* ty=Tensor[(10, 8, 15), bool] */;
  %227 = dyn.reshape(%224, %225, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %228 = less_equal(%222, %223) /* ty=Tensor[(10, 8, 15), bool] */;
  %229 = greater(%226, %227) /* ty=Tensor[(10, 8, 15), bool] */;
  (%228, %229)
}

def @func_16608() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %230 = @func_16120() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %231 = @func_7749() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %232 = %230.1;
  %233 = %231.0;
  (%232, %233)
}

def @func_2390() -> (Tensor[(8, 6, 7), float64],) {
  %234 = @func_1033() /* ty=Tensor[(8, 6, 7), float64] */;
  (%234,)
}

def @func_5986() -> (Tensor[(8, 6, 7), float64],) {
  %235 = @func_3709() /* ty=Tensor[(8, 6, 7), float64] */;
  (%235,)
}

def @func_8008() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %236 = @func_7313() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %237 = @func_868() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %238 = @func_3146() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %239 = %236.0;
  %240 = %237.0;
  %241 = %238.1;
  (%239, %240, %241)
}

def @func_8302(%var_8295: Tensor[(5, 105), float64]) -> (Tensor[(8, 6, 7), float64], Tensor[(5, 15, 7), float32], Tensor[(5, 105), float64]) {
  %242 = @func_1752() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), bool]) */;
  %243 = cast(%var_8295, dtype="float64") /* ty=Tensor[(5, 105), float64] */;
  %244 = reshape(%243, newshape=[5, 15, 7]) /* ty=Tensor[(5, 15, 7), float64] */;
  %245 = @func_7426(%244) /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(5, 15, 7), float32]) */;
  %246 = %242.0;
  %247 = %245.3;
  (%246, %247, %var_8295)
}

def @func_8333() -> (Tensor[(8, 6, 7), float64],) {
  %248 = @func_4966() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %249 = %248.1;
  (%249,)
}

def @func_3632(%var_3628: Tensor[(1650), float32]) -> (Tensor[(8, 6, 7), float64], Tensor[(10, 11, 15), float32], Tensor[(1650), float32]) {
  %250 = @func_1013() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %251 = cast(%var_3628, dtype="float32") /* ty=Tensor[(1650), float32] */;
  %252 = reshape(%251, newshape=[10, 11, 15]) /* ty=Tensor[(10, 11, 15), float32] */;
  %253 = @func_885(%252) /* ty=(Tensor[(10, 11, 15), float32],) */;
  %254 = %250.0;
  %255 = %253.0;
  (%254, %255, %var_3628)
}

def @func_13308() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(20), float64], Tensor[(8, 6, 7), float64]) {
  %256 = cast(meta[relay.Constant][10] /* ty=Tensor[(20), float64] */, dtype="float64") /* ty=Tensor[(20), float64] */;
  %257 = reshape(%256, newshape=[2, 2, 5]) /* ty=Tensor[(2, 2, 5), float64] */;
  %258 = @func_5923(%257) /* ty=(Tensor[(2, 2, 5), float64], Tensor[(8, 6, 7), float64]) */;
  %259 = @func_12371() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(110, 15), float32]) */;
  %260 = @func_11047() /* ty=Tensor[(8, 6, 7), float64] */;
  %261 = %258.1;
  %262 = %259.0;
  (%260, %261, meta[relay.Constant][10] /* ty=Tensor[(20), float64] */, %262)
}

def @func_13339() -> (Tensor[(8, 6, 7), float32],) {
  %263 = @func_7581() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), float64]) */;
  %264 = %263.1;
  (%264,)
}

def @func_18467(%var_18463: Tensor[(216), float64]) -> (Tensor[(8, 6, 7), float64], Tensor[(12, 2, 9), float64], Tensor[(216), float64]) {
  %265 = @func_17746() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(15, 2, 5), int32], Tensor[(13, 150), bool]) */;
  %266 = cast(%var_18463, dtype="float64") /* ty=Tensor[(216), float64] */;
  %267 = cast(%var_18463, dtype="float64") /* ty=Tensor[(216), float64] */;
  %268 = reshape(%266, newshape=[12, 2, 9]) /* ty=Tensor[(12, 2, 9), float64] */;
  %269 = reshape(%267, newshape=[12, 2, 9]) /* ty=Tensor[(12, 2, 9), float64] */;
  %270 = %265.1;
  %271 = @func_16583(%268, %269) /* ty=Tensor[(12, 2, 9), float64] */;
  (%270, %271, %var_18463)
}

def @func_1413() -> (Tensor[(8, 6, 7), float64],) {
  %272 = @func_502() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %273 = %272.0;
  %274 = cast(%273, dtype="float64") /* ty=Tensor[(8, 6, 7), float64] */;
  %275 = acosh(%274) /* ty=Tensor[(8, 6, 7), float64] */;
  (%275,)
}

def @func_18638() -> (Tensor[(13, 3, 15), float32], Tensor[(8, 6, 7), float64]) {
  %276 = @func_9322() /* ty=(Tensor[(13, 3, 15), float32],) */;
  %277 = @func_8713() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %278 = %276.0;
  %279 = %277.0;
  (%278, %279)
}

def @func_18825() -> (Tensor[(8, 6, 7), bool],) {
  %280 = @func_9608() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), bool]) */;
  %281 = %280.1;
  (%281,)
}

def @func_9169() -> Tensor[(8, 6, 7), float64] {
  %282 = @func_6495() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %282.2
}

def @func_8242() -> (Tensor[(8, 6, 7), float64],) {
  %283 = @func_5298() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %284 = %283.0;
  (%284,)
}

def @func_7864() -> Tensor[(8, 6, 7), float64] {
  %285 = @func_2586() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %285.0
}

def @func_9739() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %286 = @func_6144() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %287 = @func_8713() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %288 = @func_2683() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %289 = %286.0;
  %290 = %287.0;
  %291 = %288.2;
  (%289, %290, %291)
}

def @func_17950(%var_17895: Tensor[(4, 20), float64], %var_17910: Tensor[(4, 20), float64]) -> (Tensor[(8, 6, 7), float64], Tensor[(2, 2, 5), float64], Tensor[(4, 20), int16], Tensor[(8, 6, 7), float64], Tensor[(4, 20), bool], Tensor[(4, 20), bool], Tensor[(2, 2, 5), float64], Tensor[(8, 6, 7), float64]) {
  %292 = @func_10270() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %293 = cast(meta[relay.Constant][11] /* ty=Tensor[(1, 20), float64] */, dtype="float64") /* ty=Tensor[(1, 20), float64] */;
  %294 = reshape(%293, newshape=[20]) /* ty=Tensor[(20), float64] */;
  %295 = @func_12637(%294) /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(2, 2, 5), float64], Tensor[(20), float64]) */;
  %296 = cast(meta[relay.Constant][11] /* ty=Tensor[(1, 20), float64] */, dtype="int16") /* ty=Tensor[(1, 20), int16] */;
  %297 = cast(%var_17895, dtype="int16") /* ty=Tensor[(4, 20), int16] */;
  %298 = @func_3274() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %299 = cast(meta[relay.Constant][11] /* ty=Tensor[(1, 20), float64] */, dtype="float64") /* ty=Tensor[(1, 20), float64] */;
  %300 = asin(%299) /* ty=Tensor[(1, 20), float64] */;
  %301 = cast(%300, dtype="bool") /* ty=Tensor[(1, 20), bool] */;
  %302 = cast(%var_17910, dtype="bool") /* ty=Tensor[(4, 20), bool] */;
  %303 = cast(%var_17910, dtype="uint8") /* ty=Tensor[(4, 20), uint8] */;
  %304 = shape_of(%var_17895, dtype="int32") /* ty=Tensor[(2), int32] */;
  %305 = cast(%var_17895, dtype="uint8") /* ty=Tensor[(4, 20), uint8] */;
  %306 = dyn.reshape(%303, %304, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %307 = left_shift(%305, %306) /* ty=Tensor[(4, 20), uint8] */;
  %308 = cast(%300, dtype="bool") /* ty=Tensor[(1, 20), bool] */;
  %309 = cast(%307, dtype="bool") /* ty=Tensor[(4, 20), bool] */;
  %310 = cast(%300, dtype="float64") /* ty=Tensor[(1, 20), float64] */;
  %311 = reshape(%310, newshape=[2, 2, 5]) /* ty=Tensor[(2, 2, 5), float64] */;
  %312 = @func_5923(%311) /* ty=(Tensor[(2, 2, 5), float64], Tensor[(8, 6, 7), float64]) */;
  %313 = @func_13308() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(20), float64], Tensor[(8, 6, 7), float64]) */;
  %314 = %292.0;
  %315 = %295.2;
  %316 = bitwise_and(%296, %297) /* ty=Tensor[(4, 20), int16] */;
  %317 = %298.0;
  %318 = greater_equal(%301, %302) /* ty=Tensor[(4, 20), bool] */;
  %319 = not_equal(%308, %309) /* ty=Tensor[(4, 20), bool] */;
  %320 = %312.0;
  %321 = %313.3;
  (%314, %315, %316, %317, %318, %319, %320, %321)
}

def @func_15329() -> (Tensor[(8, 6, 7), float64],) {
  %322 = @func_13874() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %323 = %322.0;
  (%323,)
}

def @func_20227() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %324 = @func_14888() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %325 = @func_8048() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %326 = %324.0;
  %327 = %325.0;
  (%326, %327)
}

def @func_7074() -> (Tensor[(8, 6, 7), float64],) {
  %328 = @func_2481() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %329 = %328.0;
  (%329,)
}

def @func_17658() -> (Tensor[(8, 6, 7), float64], Tensor[(6, 7, ?), float32], Tensor[(8, 6, 7), float64]) {
  %330 = @func_7683() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %331 = @func_11754() /* ty=Tensor[(6, 7, 1), float32] */;
  %332 = cast(%331, dtype="float64") /* ty=Tensor[(6, 7, 1), float64] */;
  %333 = cos(%332) /* ty=Tensor[(6, 7, 1), float64] */;
  %334 = cast(%331, dtype="float32") /* ty=Tensor[(6, 7, 1), float32] */;
  %335 = sigmoid(%334) /* ty=Tensor[(6, 7, 1), float32] */;
  %336 = cast(%335, dtype="int8") /* ty=Tensor[(6, 7, 1), int8] */;
  %337 = shape_of(%333, dtype="int32") /* ty=Tensor[(3), int32] */;
  %338 = cast(%333, dtype="int8") /* ty=Tensor[(6, 7, 1), int8] */;
  %339 = dyn.reshape(%336, %337, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %340 = add(%338, %339) /* ty=Tensor[(6, 7, ?), int8] */;
  %341 = cast(%340, dtype="float32") /* ty=Tensor[(6, 7, ?), float32] */;
  %342 = sqrt(%341) /* ty=Tensor[(6, 7, ?), float32] */;
  %343 = cast(%340, dtype="float32") /* ty=Tensor[(6, 7, ?), float32] */;
  %344 = shape_of(%342, dtype="int32") /* ty=Tensor[(3), int32] */;
  %345 = cast(%342, dtype="float32") /* ty=Tensor[(6, 7, ?), float32] */;
  %346 = dyn.reshape(%343, %344, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %347 = @func_1013() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %348 = %330.1;
  %349 = divide(%345, %346) /* ty=Tensor[(6, 7, ?), float32] */;
  %350 = %347.0;
  (%348, %349, %350)
}

def @func_12773() -> Tensor[(8, 6, 7), float64] {
  %351 = @func_2539() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %351.0
}

def @func_14147() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32]) {
  %352 = @func_8266() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %353 = @func_9683() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %354 = @func_7581() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), float64]) */;
  %355 = %352.0;
  %356 = %353.1;
  %357 = %354.1;
  (%355, %356, %357)
}

def @func_17474() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %358 = @func_13541() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %359 = @func_1932() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %360 = @func_1232() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %361 = @func_13667() /* ty=(Tensor[(10, 11, 15), float32], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32]) */;
  %362 = @func_15644() /* ty=Tensor[(8, 6, 7), float64] */;
  %363 = @func_15644() /* ty=Tensor[(8, 6, 7), float64] */;
  %364 = %358.0;
  %365 = @func_1033() /* ty=Tensor[(8, 6, 7), float64] */;
  %366 = %359.0;
  %367 = %360.1;
  %368 = %361.1;
  %369 = @func_7935() /* ty=Tensor[(8, 6, 7), float64] */;
  (%362, %363, %364, %365, %366, %367, %368, %369)
}

def @func_8036() -> Tensor[(8, 6, 7), float64] {
  @func_3709() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_3363(%var_3334: Tensor[(1650), float32], %var_3347: Tensor[(1650), float32]) -> (Tensor[(8, 6, 7), float64], Tensor[(10, 11, 15), float32], Tensor[(8, 6, 7), float64], Tensor[(1650), int64], Tensor[(1650), float64]) {
  %370 = @func_1752() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), bool]) */;
  %371 = cast(%var_3334, dtype="float32") /* ty=Tensor[(1650), float32] */;
  %372 = reshape(%371, newshape=[10, 11, 15]) /* ty=Tensor[(10, 11, 15), float32] */;
  %373 = @func_885(%372) /* ty=(Tensor[(10, 11, 15), float32],) */;
  %374 = @func_2390() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %375 = cast(%var_3347, dtype="int64") /* ty=Tensor[(1650), int64] */;
  %376 = shape_of(%var_3334, dtype="int32") /* ty=Tensor[(1), int32] */;
  %377 = cast(%var_3334, dtype="int64") /* ty=Tensor[(1650), int64] */;
  %378 = dyn.reshape(%375, %376, newshape=[]) /* ty=Tensor[(?), int64] */;
  %379 = cast(%var_3347, dtype="float64") /* ty=Tensor[(1650), float64] */;
  %380 = %370.4;
  %381 = %373.0;
  %382 = %374.0;
  %383 = bitwise_xor(%377, %378) /* ty=Tensor[(1650), int64] */;
  %384 = exp(%379) /* ty=Tensor[(1650), float64] */;
  (%380, %381, %382, %383, %384)
}

def @func_17534() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(10, 6, 6), int32]) {
  %385 = @func_8048() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %386 = @func_502() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %387 = @func_16511() /* ty=(Tensor[(8, 6, 7), float32], Tensor[(10, 6, 6), int32], Tensor[(60), float64], Tensor[(360), float64]) */;
  %388 = %385.0;
  %389 = %386.0;
  %390 = %387.1;
  (%388, %389, %390)
}

def @func_5765() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %391 = @func_3880() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %392 = %391.0;
  %393 = cast(%392, dtype="float64") /* ty=Tensor[(8, 6, 7), float64] */;
  %394 = @func_1033() /* ty=Tensor[(8, 6, 7), float64] */;
  %395 = erf(%393) /* ty=Tensor[(8, 6, 7), float64] */;
  (%394, %395)
}

def @func_6646() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %396 = @func_6058() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %397 = @func_5289() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %398 = @func_4560() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %399 = @func_6058() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %400 = %396.0;
  %401 = @func_2860() /* ty=Tensor[(8, 6, 7), float64] */;
  %402 = %397.0;
  %403 = %398.1;
  %404 = %399.0;
  (%400, %401, %402, %403, %404)
}

def @func_7935() -> Tensor[(8, 6, 7), float64] {
  %405 = @func_1013() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %405.0
}

def @func_1045() -> Tensor[(8, 6, 7), float64] {
  %406 = @func_502() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %406.0
}

def @func_20580(%var_20569: uint8, %var_20570: Tensor[(1, 14, 16), uint8]) -> (Tensor[(1, 14, 16), uint8], Tensor[(8, 6, 7), float64]) {
  %407 = cast(%var_20569, dtype="uint8") /* ty=uint8 */;
  %408 = cast(%var_20570, dtype="uint8") /* ty=Tensor[(1, 14, 16), uint8] */;
  %409 = @func_12371() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(110, 15), float32]) */;
  %410 = subtract(%407, %408) /* ty=Tensor[(1, 14, 16), uint8] */;
  %411 = %409.0;
  (%410, %411)
}

def @func_13050() -> (Tensor[(8, 6, 7), float64], Tensor[(585), bool]) {
  %412 = @func_5557() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32]) */;
  %413 = @func_4786() /* ty=(Tensor[(585), bool], Tensor[(8, 6, 7), float64]) */;
  %414 = %412.0;
  %415 = %413.0;
  (%414, %415)
}

def @func_4912() -> Tensor[(8, 6, 7), float64] {
  @func_1959() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_9118() -> (Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %416 = @func_2002() /* ty=(Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64]) */;
  %417 = @func_2683() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %418 = @func_868() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %419 = %416.0;
  %420 = @func_4912() /* ty=Tensor[(8, 6, 7), float64] */;
  %421 = @func_8131() /* ty=Tensor[(8, 6, 7), float64] */;
  %422 = %417.2;
  %423 = %418.0;
  (%419, %420, %421, %422, %423)
}

def @func_4620() -> Tensor[(585), float64] {
  %424 = @func_3825() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(13, 3, 15), float32], Tensor[(585), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %424.5
}

def @func_7100() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %425 = @func_4698() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %426 = @func_1519() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %427 = %425.1;
  %428 = %426.0;
  %429 = @func_1045() /* ty=Tensor[(8, 6, 7), float64] */;
  (%427, %428, %429)
}

def @func_4310() -> Tensor[(8, 6, 7), float64] {
  @func_1033() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_13073(%var_13068: Tensor[(7, 12, 10), float32]) -> Tensor[(7, 12, 10), float32] {
  %430 = cast(%var_13068, dtype="float32") /* ty=Tensor[(7, 12, 10), float32] */;
  atan(%430) /* ty=Tensor[(7, 12, 10), float32] */
}

def @func_8474() -> (Tensor[(9, 3, 2), int32],) {
  %431 = @func_6799() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(9, 3, 2), int32], Tensor[(54), int32]) */;
  %432 = %431.1;
  (%432,)
}

def @func_14966() -> (Tensor[(8, 6, 7), float64],) {
  %433 = @func_2390() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %434 = %433.0;
  (%434,)
}

def @func_3675() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %435 = @func_2683() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %436 = @func_502() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %437 = @func_2481() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %438 = %435.2;
  %439 = %436.0;
  %440 = %437.0;
  (%438, %439, %440)
}

def @func_15644() -> Tensor[(8, 6, 7), float64] {
  @func_6315() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_13774() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %441 = @func_4560() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %442 = %441.0;
  %443 = @func_10546() /* ty=Tensor[(8, 6, 7), float64] */;
  (%442, %443)
}

def @func_6666() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %444 = @func_4966() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %445 = @func_1752() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), bool]) */;
  %446 = %444.0;
  %447 = %445.0;
  (%446, %447)
}

def @func_17009() -> (Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), float64]) {
  %448 = @func_13339() /* ty=(Tensor[(8, 6, 7), float32],) */;
  %449 = %448.0;
  %450 = @func_1959() /* ty=Tensor[(8, 6, 7), float64] */;
  (%449, %450)
}

def @func_19141() -> Tensor[(8, 6, 7), float64] {
  %451 = @func_8333() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %451.0
}

def @func_13541() -> (Tensor[(8, 6, 7), float64],) {
  %452 = @func_9683() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %453 = %452.0;
  (%453,)
}

def @func_13908() -> Tensor[(8, 6, 7), float64] {
  %454 = @func_10104() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %454.0
}

def @func_16511() -> (Tensor[(8, 6, 7), float32], Tensor[(10, 6, 6), int32], Tensor[(60), float64], Tensor[(360), float64]) {
  %455 = @func_1877() /* ty=(Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), float64]) */;
  %456 = cast(meta[relay.Constant][12] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %457 = cast(meta[relay.Constant][13] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %458 = reshape(%456, newshape=[10, 1, 6]) /* ty=Tensor[(10, 1, 6), float64] */;
  %459 = reshape(%457, newshape=[10, 6, 6]) /* ty=Tensor[(10, 6, 6), float64] */;
  %460 = %455.0;
  %461 = @func_9874(%458, %459) /* ty=Tensor[(10, 6, 6), int32] */;
  (%460, %461, meta[relay.Constant][12] /* ty=Tensor[(60), float64] */, meta[relay.Constant][13] /* ty=Tensor[(360), float64] */)
}

def @func_10332() -> (Tensor[(8, 6, 7), float64],) {
  %462 = @func_10151() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %463 = %462.0;
  (%463,)
}

def @func_16890() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32], Tensor[(924), float32]) {
  %464 = @func_13774() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %465 = cast(meta[relay.Constant][14] /* ty=Tensor[(924), float32] */, dtype="float32") /* ty=Tensor[(924), float32] */;
  %466 = reshape(%465, newshape=[7, 11, 12]) /* ty=Tensor[(7, 11, 12), float32] */;
  %467 = @func_11553(%466) /* ty=(Tensor[(7, 11, 12), float32], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32]) */;
  %468 = %464.0;
  %469 = %467.3;
  (%468, %469, meta[relay.Constant][14] /* ty=Tensor[(924), float32] */)
}

def @func_10546() -> Tensor[(8, 6, 7), float64] {
  @func_7935() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_18917() -> (Tensor[(585), bool], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %470 = @func_4786() /* ty=(Tensor[(585), bool], Tensor[(8, 6, 7), float64]) */;
  %471 = @func_3316() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), bool]) */;
  %472 = @func_5844() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %473 = %470.0;
  %474 = %471.0;
  %475 = %472.0;
  (%473, %474, %475)
}

def @func_3274() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %476 = @func_1519() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %477 = @func_2539() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %478 = %476.0;
  %479 = @func_1033() /* ty=Tensor[(8, 6, 7), float64] */;
  %480 = %477.0;
  (%478, %479, %480)
}

def @func_7779() -> (Tensor[(8, 6, 7), float64],) {
  %481 = @func_3412() /* ty=Tensor[(8, 6, 7), float64] */;
  (%481,)
}

def @func_1033() -> Tensor[(8, 6, 7), float64] {
  %482 = @func_968() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %482.0
}

def @func_17867() -> Tensor[(8, 6, 7), float64] {
  %483 = @func_13457() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %483.0
}

def @func_19716() -> (Tensor[(8, 6, 7), float64],) {
  %484 = @func_3580() /* ty=Tensor[(8, 6, 7), float64] */;
  (%484,)
}

def @func_885(%var_881: Tensor[(10, 11, 15), float32]) -> (Tensor[(10, 11, 15), float32],) {
  %485 = cast(%var_881, dtype="float32") /* ty=Tensor[(10, 11, 15), float32] */;
  %486 = log(%485) /* ty=Tensor[(10, 11, 15), float32] */;
  (%486,)
}

def @func_10126() -> Tensor[(8, 6, 7), float64] {
  @func_6464() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_11389() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %487 = @func_7292() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %488 = @func_8048() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %489 = @func_1013() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %490 = %487.1;
  %491 = %488.0;
  %492 = @func_1790() /* ty=Tensor[(8, 6, 7), float64] */;
  %493 = %489.0;
  %494 = @func_4361() /* ty=Tensor[(8, 6, 7), float64] */;
  (%490, %491, %492, %493, %494)
}

def @func_852(%var_778: Tensor[(2, 7, 7), int16], %var_779: Tensor[(2, 7, 7), int16]) -> (Tensor[(8, 6, 7), float64], Tensor[(2, 7, 7), bool], Tensor[(2, 7, 7), float32]) {
  %495 = @func_458() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %496 = cast(%var_779, dtype="int16") /* ty=Tensor[(2, 7, 7), int16] */;
  %497 = shape_of(%var_778, dtype="int32") /* ty=Tensor[(3), int32] */;
  %498 = cast(%var_778, dtype="int16") /* ty=Tensor[(2, 7, 7), int16] */;
  %499 = dyn.reshape(%496, %497, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %500 = bitwise_and(%498, %499) /* ty=Tensor[(2, 7, 7), int16] */;
  %501 = cast(%var_778, dtype="uint32") /* ty=Tensor[(2, 7, 7), uint32] */;
  %502 = shape_of(%500, dtype="int32") /* ty=Tensor[(3), int32] */;
  %503 = cast(%500, dtype="uint32") /* ty=Tensor[(2, 7, 7), uint32] */;
  %504 = dyn.reshape(%501, %502, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %505 = maximum(%503, %504) /* ty=Tensor[(2, 7, 7), uint32] */;
  %506 = cast(%505, dtype="bool") /* ty=Tensor[(2, 7, 7), bool] */;
  %507 = shape_of(%var_779, dtype="int32") /* ty=Tensor[(3), int32] */;
  %508 = cast(%var_779, dtype="bool") /* ty=Tensor[(2, 7, 7), bool] */;
  %509 = dyn.reshape(%506, %507, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %510 = cast(%var_779, dtype="float32") /* ty=Tensor[(2, 7, 7), float32] */;
  %511 = %495.0;
  %512 = logical_and(%508, %509) /* ty=Tensor[(2, 7, 7), bool] */;
  %513 = tan(%510) /* ty=Tensor[(2, 7, 7), float32] */;
  (%511, %512, %513)
}

def @func_14770() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %514 = @func_13541() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %515 = @func_11026() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(13, 3, 15), float32], Tensor[(8, 6, 7), float64]) */;
  %516 = @func_3880() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %517 = @func_458() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %518 = %514.0;
  %519 = %515.0;
  %520 = %516.0;
  %521 = %517.0;
  (%518, %519, %520, %521)
}

def @func_15440() -> Tensor[(8, 6, 7), float64] {
  @func_11579() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_14871() -> Tensor[(8, 6, 7), float64] {
  %522 = @func_3896() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %522.0
}

def @func_4560() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %523 = @func_1877() /* ty=(Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), float64]) */;
  %524 = @func_1013() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %525 = %523.1;
  %526 = %524.0;
  (%525, %526)
}

def @func_7683() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %527 = @func_5289() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %528 = @func_2799() /* ty=Tensor[(8, 6, 7), float64] */;
  %529 = %527.2;
  (%528, %529)
}

def @func_14572() -> Tensor[(8, 6, 7), float32] {
  %530 = @func_7581() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), float64]) */;
  %530.1
}

def @func_8954() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %531 = @func_4698() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %532 = @func_1790() /* ty=Tensor[(8, 6, 7), float64] */;
  %533 = %531.0;
  (%532, %533)
}

def @func_4873(%var_4850: Tensor[(585), float64]) -> (Tensor[(585), bool], Tensor[(585), float64], Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64]) {
  %534 = @func_4620() /* ty=Tensor[(585), float64] */;
  %535 = cast(%var_4850, dtype="bool") /* ty=Tensor[(585), bool] */;
  %536 = shape_of(%534, dtype="int32") /* ty=Tensor[(1), int32] */;
  %537 = cast(%534, dtype="bool") /* ty=Tensor[(585), bool] */;
  %538 = dyn.reshape(%535, %536, newshape=[]) /* ty=Tensor[(?), bool] */;
  %539 = cast(%534, dtype="float64") /* ty=Tensor[(585), float64] */;
  %540 = @func_2002() /* ty=(Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64]) */;
  %541 = @func_1413() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %542 = not_equal(%537, %538) /* ty=Tensor[(585), bool] */;
  %543 = tan(%539) /* ty=Tensor[(585), float64] */;
  %544 = %540.0;
  %545 = %541.0;
  (%542, %543, %544, %545)
}

def @func_3093() -> (Tensor[(8, 6, 7), float64],) {
  %546 = @func_2539() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %547 = %546.0;
  (%547,)
}

def @func_9950() -> (Tensor[(8, 6, 7), float64],) {
  %548 = @func_8728() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %549 = %548.0;
  (%549,)
}

def @func_8164() -> Tensor[(8, 6, 7), float64] {
  %550 = @func_4658() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %550.1
}

def @func_11264(%var_11235: Tensor[(585), float64]) -> (Tensor[(8, 6, 7), float64], Tensor[(13, 3, 15), float32], Tensor[(585), float64]) {
  %551 = cast(%var_11235, dtype="float64") /* ty=Tensor[(585), float64] */;
  %552 = reshape(%551, newshape=[13, 3, 15]) /* ty=Tensor[(13, 3, 15), float64] */;
  %553 = @func_1562(%552) /* ty=(Tensor[(13, 3, 15), float32],) */;
  %554 = @func_1959() /* ty=Tensor[(8, 6, 7), float64] */;
  %555 = %553.0;
  (%554, %555, %var_11235)
}

def @func_2728() -> (Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64]) {
  %556 = @func_1141() /* ty=(Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), bool]) */;
  %557 = %556.0;
  %558 = @func_1790() /* ty=Tensor[(8, 6, 7), float64] */;
  (%557, %558)
}

def @func_20081() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %559 = @func_14888() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %560 = @func_6464() /* ty=Tensor[(8, 6, 7), float64] */;
  %561 = %559.0;
  (%560, %561)
}

def @func_17119() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %562 = @func_10238() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %563 = @func_1013() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %564 = %562.0;
  %565 = %563.0;
  (%564, %565)
}

def @func_8048() -> (Tensor[(8, 6, 7), float64],) {
  %566 = @func_3316() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), bool]) */;
  %567 = %566.0;
  (%567,)
}

def @func_12169() -> Tensor[(8, 6, 7), float64] {
  @func_8036() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_5143(%var_5072: Tensor[(10, 1, 16), float64]) -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(3, 3, 3), uint32], Tensor[(27), float64], Tensor[(10, ?, 16), float32], Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64]) {
  %568 = @func_2084() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %569 = @func_2373() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %570 = @func_4560() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %571 = cast(meta[relay.Constant][15] /* ty=Tensor[(27), float64] */, dtype="float64") /* ty=Tensor[(27), float64] */;
  %572 = reshape(%571, newshape=[3, 3, 3]) /* ty=Tensor[(3, 3, 3), float64] */;
  %573 = @func_3554(%572) /* ty=(Tensor[(3, 3, 3), uint32],) */;
  %574 = cast(%var_5072, dtype="float64") /* ty=Tensor[(10, 1, 16), float64] */;
  %575 = log2(%574) /* ty=Tensor[(10, 1, 16), float64] */;
  %576 = cast(%var_5072, dtype="float32") /* ty=Tensor[(10, 1, 16), float32] */;
  %577 = shape_of(%575, dtype="int32") /* ty=Tensor[(3), int32] */;
  %578 = cast(%575, dtype="float32") /* ty=Tensor[(10, 1, 16), float32] */;
  %579 = dyn.reshape(%576, %577, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %580 = @func_4172() /* ty=(Tensor[(8, 6, 7), bool], Tensor[(1650), float32], Tensor[(8, 6, 7), float64], Tensor[(1650), float64]) */;
  %581 = @func_4825() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %582 = %568.0;
  %583 = %569.1;
  %584 = %570.0;
  %585 = %573.0;
  %586 = power(%578, %579) /* ty=Tensor[(10, ?, 16), float32] */;
  %587 = %580.0;
  %588 = %581.0;
  (%582, %583, %584, %585, meta[relay.Constant][15] /* ty=Tensor[(27), float64] */, %586, %587, %588)
}

def @func_968() -> (Tensor[(8, 6, 7), float64],) {
  %589 = @func_458() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %590 = %589.0;
  %591 = cast(%590, dtype="float64") /* ty=Tensor[(8, 6, 7), float64] */;
  %592 = acos(%591) /* ty=Tensor[(8, 6, 7), float64] */;
  %593 = @func_502() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %594 = %593.0;
  %595 = cast(%594, dtype="float64") /* ty=Tensor[(8, 6, 7), float64] */;
  %596 = shape_of(%592, dtype="int32") /* ty=Tensor[(3), int32] */;
  %597 = cast(%592, dtype="float64") /* ty=Tensor[(8, 6, 7), float64] */;
  %598 = dyn.reshape(%595, %596, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %599 = power(%597, %598) /* ty=Tensor[(8, 6, 7), float64] */;
  (%599,)
}

def @func_13026() -> (Tensor[(8, 6, 7), float64],) {
  %600 = @func_7371() /* ty=Tensor[(8, 6, 7), float64] */;
  (%600,)
}

def @func_15528() -> (Tensor[(8, 6, 7), float64], Tensor[(2, 2, 5), float64], Tensor[(20), float64]) {
  %601 = @func_13308() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(20), float64], Tensor[(8, 6, 7), float64]) */;
  %602 = cast(meta[relay.Constant][16] /* ty=Tensor[(20), float64] */, dtype="float64") /* ty=Tensor[(20), float64] */;
  %603 = reshape(%602, newshape=[20]) /* ty=Tensor[(20), float64] */;
  %604 = @func_12637(%603) /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(2, 2, 5), float64], Tensor[(20), float64]) */;
  %605 = %601.0;
  %606 = %604.2;
  (%605, %606, meta[relay.Constant][16] /* ty=Tensor[(20), float64] */)
}

def @func_10501() -> Tensor[(8, 6, 7), float64] {
  %607 = @func_8878() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %607.0
}

def @func_13453() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %608 = @func_1752() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), bool]) */;
  %609 = @func_4912() /* ty=Tensor[(8, 6, 7), float64] */;
  %610 = %608.2;
  (%609, %610)
}

def @func_9874(%var_9832: Tensor[(10, 1, 6), float64], %var_9833: Tensor[(10, 6, 6), float64]) -> Tensor[(10, 6, 6), int32] {
  %611 = cast(%var_9832, dtype="float64") /* ty=Tensor[(10, 1, 6), float64] */;
  %612 = cast(%var_9833, dtype="float64") /* ty=Tensor[(10, 6, 6), float64] */;
  %613 = floor_mod(%611, %612) /* ty=Tensor[(10, 6, 6), float64] */;
  %614 = cast(%613, dtype="int32") /* ty=Tensor[(10, 6, 6), int32] */;
  %615 = cast(%var_9832, dtype="int32") /* ty=Tensor[(10, 1, 6), int32] */;
  logical_xor(%614, %615) /* ty=Tensor[(10, 6, 6), int32] */
}

def @func_10953() -> Tensor[(8, 6, 7), float64] {
  %616 = @func_4560() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %616.0
}

def @func_11026() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(13, 3, 15), float32], Tensor[(8, 6, 7), float64]) {
  %617 = @func_868() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %618 = @func_3825() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(13, 3, 15), float32], Tensor[(585), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %619 = @func_3675() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %620 = @func_10126() /* ty=Tensor[(8, 6, 7), float64] */;
  %621 = @func_9169() /* ty=Tensor[(8, 6, 7), float64] */;
  %622 = %617.0;
  %623 = %618.4;
  %624 = %619.0;
  (%620, %621, %622, %623, %624)
}

def @func_2373() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %625 = @func_868() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %626 = %625.0;
  %627 = @func_1790() /* ty=Tensor[(8, 6, 7), float64] */;
  (%626, %627)
}

def @func_1877() -> (Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), float64]) {
  %628 = @func_1311() /* ty=Tensor[(8, 6, 7), float64] */;
  %629 = cast(%628, dtype="float32") /* ty=Tensor[(8, 6, 7), float32] */;
  %630 = @func_502() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %631 = log2(%629) /* ty=Tensor[(8, 6, 7), float32] */;
  %632 = %630.0;
  (%631, %632)
}

def @func_15398() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %633 = @func_11190() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %634 = @func_2373() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %635 = %633.0;
  %636 = %634.1;
  %637 = @func_7371() /* ty=Tensor[(8, 6, 7), float64] */;
  %638 = @func_14436() /* ty=Tensor[(8, 6, 7), float64] */;
  (%635, %636, %637, %638)
}

def @func_3704() -> (Tensor[(8, 6, 7), float64],) {
  %639 = @func_3207() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %640 = %639.0;
  (%640,)
}

def @func_18619() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %641 = @func_10160() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %642 = @func_12021() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %643 = %641.0;
  %644 = %642.0;
  (%643, %644)
}

def @func_15894() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %645 = @func_10001() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %646 = @func_12299() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %647 = %645.1;
  %648 = %646.0;
  (%647, %648)
}

def @func_4966() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %649 = @func_3093() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %650 = @func_4340() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %651 = %649.0;
  %652 = %650.0;
  (%651, %652)
}

def @func_7839(%var_7805: Tensor[(585), float64]) -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(2, 7, 7), bool], Tensor[(98), int16], Tensor[(13, 3, 15), bool], Tensor[(2, 7, 7), bool]) {
  %653 = @func_7683() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %654 = @func_1232() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %655 = cast(meta[relay.Constant][17] /* ty=Tensor[(98), int16] */, dtype="int16") /* ty=Tensor[(98), int16] */;
  %656 = cast(meta[relay.Constant][17] /* ty=Tensor[(98), int16] */, dtype="int16") /* ty=Tensor[(98), int16] */;
  %657 = reshape(%655, newshape=[2, 7, 7]) /* ty=Tensor[(2, 7, 7), int16] */;
  %658 = reshape(%656, newshape=[2, 7, 7]) /* ty=Tensor[(2, 7, 7), int16] */;
  %659 = @func_852(%657, %658) /* ty=(Tensor[(8, 6, 7), float64], Tensor[(2, 7, 7), bool], Tensor[(2, 7, 7), float32]) */;
  %660 = cast(%var_7805, dtype="float64") /* ty=Tensor[(585), float64] */;
  %661 = reshape(%660, newshape=[13, 3, 15]) /* ty=Tensor[(13, 3, 15), float64] */;
  %662 = @func_1562(%661) /* ty=(Tensor[(13, 3, 15), float32],) */;
  %663 = %662.0;
  %664 = cast(%var_7805, dtype="bool") /* ty=Tensor[(585), bool] */;
  %665 = shape_of(%663, dtype="int32") /* ty=Tensor[(3), int32] */;
  %666 = cast(%663, dtype="bool") /* ty=Tensor[(13, 3, 15), bool] */;
  %667 = dyn.reshape(%664, %665, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %668 = cast(meta[relay.Constant][17] /* ty=Tensor[(98), int16] */, dtype="int16") /* ty=Tensor[(98), int16] */;
  %669 = cast(meta[relay.Constant][17] /* ty=Tensor[(98), int16] */, dtype="int16") /* ty=Tensor[(98), int16] */;
  %670 = reshape(%668, newshape=[2, 7, 7]) /* ty=Tensor[(2, 7, 7), int16] */;
  %671 = reshape(%669, newshape=[2, 7, 7]) /* ty=Tensor[(2, 7, 7), int16] */;
  %672 = @func_852(%670, %671) /* ty=(Tensor[(8, 6, 7), float64], Tensor[(2, 7, 7), bool], Tensor[(2, 7, 7), float32]) */;
  %673 = %653.1;
  %674 = %654.1;
  %675 = %659.1;
  %676 = equal(%666, %667) /* ty=Tensor[(13, 3, 15), bool] */;
  %677 = %672.1;
  (%673, %674, %675, meta[relay.Constant][17] /* ty=Tensor[(98), int16] */, %676, %677)
}

def @func_15820() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), float64]) {
  %678 = @func_2988() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %679 = @func_11085() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %680 = %678.0;
  %681 = %679.1;
  %682 = @func_8783() /* ty=Tensor[(8, 6, 7), float32] */;
  %683 = @func_12429() /* ty=Tensor[(8, 6, 7), float64] */;
  (%680, %681, %682, %683)
}

def @func_6155() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %684 = @func_5986() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %685 = @func_502() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %686 = %684.0;
  %687 = %685.0;
  (%686, %687)
}

def @func_12984() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %688 = @func_4698() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %689 = @func_9608() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), bool]) */;
  %690 = %688.0;
  %691 = %689.0;
  %692 = @func_10501() /* ty=Tensor[(8, 6, 7), float64] */;
  (%690, %691, %692)
}

def @func_19689() -> (Tensor[(13, 2, 11), float32], Tensor[(8, 6, 7), float64]) {
  %693 = cast(meta[relay.Constant][18] /* ty=Tensor[(13, 2, 11), float32] */, dtype="float32") /* ty=Tensor[(13, 2, 11), float32] */;
  %694 = cosh(%693) /* ty=Tensor[(13, 2, 11), float32] */;
  %695 = cast(%694, dtype="float32") /* ty=Tensor[(13, 2, 11), float32] */;
  %696 = @func_18619() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %697 = asinh(%695) /* ty=Tensor[(13, 2, 11), float32] */;
  %698 = %696.0;
  (%697, %698)
}

def @func_4361() -> Tensor[(8, 6, 7), float64] {
  %699 = @func_1413() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %699.0
}

def @func_16793() -> (Tensor[(8, 6, 7), float64],) {
  %700 = @func_15158() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %701 = %700.0;
  (%701,)
}

def @func_1932() -> (Tensor[(8, 6, 7), float64],) {
  %702 = @func_735() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %703 = %702.0;
  (%703,)
}

def @func_6981() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %704 = @func_5557() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32]) */;
  %705 = @func_968() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %706 = @func_1232() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %707 = %704.0;
  %708 = @func_3709() /* ty=Tensor[(8, 6, 7), float64] */;
  %709 = %705.0;
  %710 = %706.1;
  (%707, %708, %709, %710)
}

def @func_8496() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %711 = @func_3274() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %712 = @func_4698() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %713 = %711.0;
  %714 = %712.1;
  (%713, %714)
}

def @func_11663() -> (Tensor[(10, 11, 15), float32],) {
  %715 = @func_10366() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(10, 11, 15), float32], Tensor[(1650), float32]) */;
  %716 = %715.2;
  (%716,)
}

def @func_735() -> (Tensor[(8, 6, 7), float64],) {
  %717 = @func_502() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %718 = %717.0;
  (%718,)
}

def @func_3709() -> Tensor[(8, 6, 7), float64] {
  %719 = @func_968() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %719.0
}

def @func_12519() -> (Tensor[(8, 6, 7), float64],) {
  %720 = @func_2683() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %721 = %720.1;
  (%721,)
}

def @func_4825() -> (Tensor[(8, 6, 7), float64],) {
  %722 = @func_2683() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %723 = %722.1;
  (%723,)
}

def @func_502() -> (Tensor[(8, 6, 7), float64],) {
  %724 = @func_458() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %725 = %724.0;
  (%725,)
}

def @func_8913() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %726 = @func_3316() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), bool]) */;
  %727 = @func_5986() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %728 = %726.0;
  %729 = %727.0;
  %730 = @func_6464() /* ty=Tensor[(8, 6, 7), float64] */;
  (%728, %729, %730)
}

def @func_13082() -> (Tensor[(8, 6, 7), float64],) {
  %731 = @func_2481() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %732 = %731.0;
  (%732,)
}

def @func_7025() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %733 = @func_3274() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %734 = @func_4966() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %735 = %733.0;
  %736 = %734.1;
  (%735, %736)
}

def @func_11047() -> Tensor[(8, 6, 7), float64] {
  %737 = @func_4658() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %737.1
}

def @func_3896() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %738 = @func_1519() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %739 = @func_735() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %740 = %738.0;
  %741 = %739.0;
  (%740, %741)
}

def @func_3207() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %742 = @func_2084() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %743 = @func_2084() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %744 = %742.0;
  %745 = %743.0;
  (%744, %745)
}

def @func_8459() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32]) {
  %746 = @func_4825() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %747 = @func_7595() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32]) */;
  %748 = %746.0;
  %749 = %747.1;
  (%748, %749)
}

def @func_16414() -> Tensor[(8, 6, 7), float32] {
  %750 = @func_8459() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32]) */;
  %750.1
}

def @func_7749() -> (Tensor[(8, 6, 7), float64],) {
  %751 = @func_3093() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %752 = %751.0;
  (%752,)
}

def @func_10104() -> (Tensor[(8, 6, 7), float64],) {
  %753 = @func_1959() /* ty=Tensor[(8, 6, 7), float64] */;
  (%753,)
}

def @func_9322() -> (Tensor[(13, 3, 15), float32],) {
  %754 = @func_3825() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(13, 3, 15), float32], Tensor[(585), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %755 = %754.4;
  (%755,)
}

def @func_19908(%var_19860: Tensor[(4, 2, 11), float32], %var_19861: Tensor[(4, 2, 11), float32]) -> (Tensor[(4, 2, 11), float32], Tensor[(8, 6, 7), float64]) {
  %756 = cast(%var_19861, dtype="float32") /* ty=Tensor[(4, 2, 11), float32] */;
  %757 = shape_of(%var_19860, dtype="int32") /* ty=Tensor[(3), int32] */;
  %758 = cast(%var_19860, dtype="float32") /* ty=Tensor[(4, 2, 11), float32] */;
  %759 = dyn.reshape(%756, %757, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %760 = @func_9476() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %761 = floor_divide(%758, %759) /* ty=Tensor[(4, 2, 11), float32] */;
  %762 = %760.0;
  (%761, %762)
}

def @func_19028() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %763 = @func_9950() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %764 = %763.0;
  %765 = @func_17867() /* ty=Tensor[(8, 6, 7), float64] */;
  (%764, %765)
}

def @func_1232() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %766 = @func_1013() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %767 = @func_1033() /* ty=Tensor[(8, 6, 7), float64] */;
  %768 = %766.0;
  (%767, %768)
}

def @func_12637(%var_12631: Tensor[(20), float64]) -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(2, 2, 5), float64], Tensor[(20), float64]) {
  %769 = @func_1519() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %770 = cast(%var_12631, dtype="float64") /* ty=Tensor[(20), float64] */;
  %771 = reshape(%770, newshape=[2, 2, 5]) /* ty=Tensor[(2, 2, 5), float64] */;
  %772 = @func_5923(%771) /* ty=(Tensor[(2, 2, 5), float64], Tensor[(8, 6, 7), float64]) */;
  %773 = %769.0;
  %774 = @func_7935() /* ty=Tensor[(8, 6, 7), float64] */;
  %775 = %772.0;
  (%773, %774, %775, %var_12631)
}

def @func_16547(%var_16544: Tensor[(8, 13, 5), float32]) -> (Tensor[(8, 13, 5), float32],) {
  %776 = cast(%var_16544, dtype="float32") /* ty=Tensor[(8, 13, 5), float32] */;
  %777 = cosh(%776) /* ty=Tensor[(8, 13, 5), float32] */;
  (%777,)
}

def @func_20049() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(27, 2), int32], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %778 = @func_3896() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %779 = @func_10104() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %780 = cast(meta[relay.Constant][19] /* ty=Tensor[(27, 2), int32] */, dtype="int32") /* ty=Tensor[(27, 2), int32] */;
  %781 = reshape(%780, newshape=[54]) /* ty=Tensor[(54), int32] */;
  %782 = @func_6869(%781) /* ty=(Tensor[(7, 11, 7), float32], Tensor[(9, 3, 2), int32], Tensor[(54), int32], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(1650), float32], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %783 = @func_7100() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %784 = @func_12021() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %785 = @func_16959() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %786 = @func_4294() /* ty=Tensor[(8, 6, 7), float64] */;
  %787 = @func_11579() /* ty=Tensor[(8, 6, 7), float64] */;
  %788 = %778.0;
  %789 = %779.0;
  %790 = %782.3;
  %791 = %783.1;
  %792 = %784.0;
  %793 = %785.0;
  (%786, %787, %788, %789, %790, meta[relay.Constant][19] /* ty=Tensor[(27, 2), int32] */, %791, %792, %793)
}

def @func_15185() -> (Tensor[(8, 6, 7), float64],) {
  %794 = @func_11885() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %795 = %794.0;
  (%795,)
}

def @func_15233() -> Tensor[(8, 6, 7), float64] {
  @func_12429() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_5923(%var_5908: Tensor[(2, 2, 5), float64]) -> (Tensor[(2, 2, 5), float64], Tensor[(8, 6, 7), float64]) {
  %796 = cast(%var_5908, dtype="float64") /* ty=Tensor[(2, 2, 5), float64] */;
  %797 = @func_2683() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %798 = asinh(%796) /* ty=Tensor[(2, 2, 5), float64] */;
  %799 = %797.1;
  (%798, %799)
}

def @func_16461() -> Tensor[(8, 6, 7), float64] {
  @func_7864() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_10366() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(10, 11, 15), float32], Tensor[(1650), float32]) {
  %800 = @func_7100() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %801 = @func_4698() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %802 = cast(meta[relay.Constant][20] /* ty=Tensor[(1650), float32] */, dtype="float32") /* ty=Tensor[(1650), float32] */;
  %803 = reshape(%802, newshape=[1650]) /* ty=Tensor[(1650), float32] */;
  %804 = @func_3632(%803) /* ty=(Tensor[(8, 6, 7), float64], Tensor[(10, 11, 15), float32], Tensor[(1650), float32]) */;
  %805 = %800.0;
  %806 = %801.0;
  %807 = %804.1;
  (%805, %806, %807, meta[relay.Constant][20] /* ty=Tensor[(1650), float32] */)
}

def @func_4516() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %808 = @func_2373() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %809 = @func_3093() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %810 = @func_1248() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %811 = @func_2390() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %812 = @func_4294() /* ty=Tensor[(8, 6, 7), float64] */;
  %813 = %808.0;
  %814 = %809.0;
  %815 = %810.1;
  %816 = %811.0;
  %817 = @func_2799() /* ty=Tensor[(8, 6, 7), float64] */;
  (%812, %813, %814, %815, %816, %817)
}

def @func_3146() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %818 = @func_1232() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %819 = @func_2988() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %820 = %819.1;
  %821 = cast(%820, dtype="float32") /* ty=Tensor[(8, 6, 7), float32] */;
  %822 = reshape(%821, newshape=[8, 6, 7]) /* ty=Tensor[(8, 6, 7), float32] */;
  %823 = @func_695(%822) /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), uint32], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %824 = %818.1;
  %825 = %823.5;
  (%824, %820, %825)
}

def @func_8713() -> (Tensor[(8, 6, 7), float64],) {
  %826 = @func_4560() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %827 = %826.0;
  (%827,)
}

def @func_16775() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), float64]) {
  %828 = @func_14888() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %829 = @func_9945() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32]) */;
  %830 = @func_10104() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %831 = %828.0;
  %832 = %829.1;
  %833 = %830.0;
  (%831, %832, %833)
}

def @func_12449(%var_12444: Tensor[(8, 4, 3), float64]) -> Tensor[(8, 4, 3), float64] {
  %834 = cast(%var_12444, dtype="float64") /* ty=Tensor[(8, 4, 3), float64] */;
  cosh(%834) /* ty=Tensor[(8, 4, 3), float64] */
}

def @func_14888() -> (Tensor[(8, 6, 7), float64],) {
  %835 = @func_13208() /* ty=Tensor[(8, 6, 7), float64] */;
  (%835,)
}

def @func_17266() -> (Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), float64]) {
  %836 = @func_10889() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %837 = @func_15682() /* ty=Tensor[(8, 6, 7), float32] */;
  %838 = %836.0;
  (%837, %838)
}

def @func_3316() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), bool]) {
  %839 = @func_1013() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %840 = @func_2002() /* ty=(Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64]) */;
  %841 = %839.0;
  %842 = %840.0;
  (%841, %842)
}

def @func_12036() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32]) {
  %843 = @func_2373() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %844 = @func_1877() /* ty=(Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), float64]) */;
  %845 = %843.1;
  %846 = %844.0;
  (%845, %846)
}

def @func_20639(%var_20607: Tensor[(10, 7, 4), int32], %var_20608: Tensor[(10, 7, 4), int32]) -> (Tensor[(10, 7, 4), int32], Tensor[(10, 7, 4), float64]) {
  %847 = cast(%var_20608, dtype="int32") /* ty=Tensor[(10, 7, 4), int32] */;
  %848 = shape_of(%var_20607, dtype="int32") /* ty=Tensor[(3), int32] */;
  %849 = cast(%var_20607, dtype="int32") /* ty=Tensor[(10, 7, 4), int32] */;
  %850 = dyn.reshape(%847, %848, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %851 = cast(%var_20608, dtype="float64") /* ty=Tensor[(10, 7, 4), float64] */;
  %852 = bitwise_xor(%849, %850) /* ty=Tensor[(10, 7, 4), int32] */;
  %853 = cos(%851) /* ty=Tensor[(10, 7, 4), float64] */;
  (%852, %853)
}

def @func_10815() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %854 = @func_10632() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %855 = @func_6495() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %856 = @func_8266() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %857 = @func_5765() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %858 = %854.0;
  %859 = %855.1;
  %860 = %856.0;
  %861 = %857.0;
  (%858, %859, %860, %861)
}

def @func_9945() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32]) {
  %862 = @func_7100() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %863 = @func_1141() /* ty=(Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), bool]) */;
  %864 = %862.2;
  %865 = %863.1;
  (%864, %865)
}

def @func_2218(%var_2197: float64, %var_2198: Tensor[(7, 3, 16), float64]) -> (Tensor[(7, 3, 16), float64],) {
  %866 = cast(%var_2197, dtype="float64") /* ty=float64 */;
  %867 = cast(%var_2198, dtype="float64") /* ty=Tensor[(7, 3, 16), float64] */;
  %868 = mod(%866, %867) /* ty=Tensor[(7, 3, 16), float64] */;
  (%868,)
}

def @func_3554(%var_3537: Tensor[(3, 3, 3), float64]) -> (Tensor[(3, 3, 3), uint32],) {
  %869 = cast(%var_3537, dtype="float64") /* ty=Tensor[(3, 3, 3), float64] */;
  %870 = sigmoid(%869) /* ty=Tensor[(3, 3, 3), float64] */;
  %871 = cast(%870, dtype="uint32") /* ty=Tensor[(3, 3, 3), uint32] */;
  %872 = shape_of(%var_3537, dtype="int32") /* ty=Tensor[(3), int32] */;
  %873 = cast(%var_3537, dtype="uint32") /* ty=Tensor[(3, 3, 3), uint32] */;
  %874 = dyn.reshape(%871, %872, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %875 = logical_xor(%873, %874) /* ty=Tensor[(3, 3, 3), uint32] */;
  (%875,)
}

def @func_8131() -> Tensor[(8, 6, 7), float64] {
  %876 = @func_7140() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %876.0
}

def @func_3847() -> Tensor[(8, 6, 7), float64] {
  %877 = @func_868() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %877.0
}

def @func_14495() -> (Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64]) {
  %878 = @func_9924() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), bool]) */;
  %879 = @func_10332() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %880 = %878.1;
  %881 = %879.0;
  (%880, %881)
}

def @func_14287() -> Tensor[(8, 6, 7), float64] {
  @func_3709() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_4294() -> Tensor[(8, 6, 7), float64] {
  %882 = @func_3675() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %882.1
}

def @func_12863(%var_12848: Tensor[(585), float64]) -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(585), float64], Tensor[(585), float64]) {
  %883 = @func_8913() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %884 = @func_6495() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %885 = cast(%var_12848, dtype="float64") /* ty=Tensor[(585), float64] */;
  %886 = reshape(%885, newshape=[585]) /* ty=Tensor[(585), float64] */;
  %887 = @func_11650(%886) /* ty=(Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(585), float64], Tensor[(585), float64]) */;
  %888 = %883.0;
  %889 = %884.2;
  %890 = %887.3;
  (%888, %889, %890, %var_12848)
}

def @func_10966() -> (Tensor[(8, 6, 7), float64],) {
  %891 = @func_10815() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %892 = %891.1;
  (%892,)
}

def @func_18142() -> (Tensor[(8, 6, 7), float64],) {
  %893 = @func_8728() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %894 = %893.0;
  (%894,)
}

def @func_19054(%var_19047: Tensor[(1650), float32]) -> (Tensor[(1650), bool],) {
  %895 = @func_10366() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(10, 11, 15), float32], Tensor[(1650), float32]) */;
  %896 = %895.3;
  %897 = cast(%var_19047, dtype="bool") /* ty=Tensor[(1650), bool] */;
  %898 = shape_of(%896, dtype="int32") /* ty=Tensor[(1), int32] */;
  %899 = cast(%896, dtype="bool") /* ty=Tensor[(1650), bool] */;
  %900 = dyn.reshape(%897, %898, newshape=[]) /* ty=Tensor[(?), bool] */;
  %901 = logical_and(%899, %900) /* ty=Tensor[(1650), bool] */;
  (%901,)
}

def @func_9289(%var_9265: Tensor[(8, 6, 7), float64]) -> (Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), float64]) {
  %902 = @func_7683() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %903 = %902.0;
  %904 = cast(%var_9265, dtype="float32") /* ty=Tensor[(8, 6, 7), float32] */;
  %905 = shape_of(%903, dtype="int32") /* ty=Tensor[(3), int32] */;
  %906 = cast(%903, dtype="float32") /* ty=Tensor[(8, 6, 7), float32] */;
  %907 = dyn.reshape(%904, %905, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %908 = @func_1232() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %909 = maximum(%906, %907) /* ty=Tensor[(8, 6, 7), float32] */;
  %910 = %908.0;
  (%909, %910)
}

def @func_2586() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %911 = @func_2390() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %912 = @func_1959() /* ty=Tensor[(8, 6, 7), float64] */;
  %913 = %911.0;
  (%912, %913)
}

def @func_1311() -> Tensor[(8, 6, 7), float64] {
  %914 = @func_1248() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %914.0
}

def @func_16534() -> (Tensor[(8, 6, 7), float64],) {
  %915 = @func_13457() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %916 = %915.0;
  (%916,)
}

def @func_17996() -> Tensor[(8, 6, 7), float64] {
  @func_1045() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_19642() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %917 = @func_16461() /* ty=Tensor[(8, 6, 7), float64] */;
  %918 = @func_17325() /* ty=Tensor[(8, 6, 7), float64] */;
  (%917, %918)
}

def @func_1627() -> Tensor[(8, 6, 7), float64] {
  %919 = @func_1413() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %920 = %919.0;
  %921 = cast(%920, dtype="float64") /* ty=Tensor[(8, 6, 7), float64] */;
  rsqrt(%921) /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_4786() -> (Tensor[(585), bool], Tensor[(8, 6, 7), float64]) {
  %922 = @func_4620() /* ty=Tensor[(585), float64] */;
  %923 = cast(meta[relay.Constant][21] /* ty=Tensor[(585), float64] */, dtype="bool") /* ty=Tensor[(585), bool] */;
  %924 = shape_of(%922, dtype="int32") /* ty=Tensor[(1), int32] */;
  %925 = cast(%922, dtype="bool") /* ty=Tensor[(585), bool] */;
  %926 = dyn.reshape(%923, %924, newshape=[]) /* ty=Tensor[(?), bool] */;
  %927 = @func_1013() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %928 = logical_or(%925, %926) /* ty=Tensor[(585), bool] */;
  %929 = %927.0;
  (%928, %929)
}

def @func_3580() -> Tensor[(8, 6, 7), float64] {
  %930 = @func_502() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %930.0
}

def @func_9758() -> Tensor[(8, 6, 7), float64] {
  %931 = @func_4786() /* ty=(Tensor[(585), bool], Tensor[(8, 6, 7), float64]) */;
  %931.1
}

def @func_9924() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), bool]) {
  %932 = @func_6666() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %933 = @func_9118() /* ty=(Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %934 = %932.1;
  %935 = %933.0;
  (%934, %935)
}

def @func_9608() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), bool]) {
  %936 = @func_5986() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %937 = @func_2728() /* ty=(Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64]) */;
  %938 = %936.0;
  %939 = %937.0;
  (%938, %939)
}

def @func_16147() -> Tensor[(8, 6, 7), float64] {
  %940 = @func_1232() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %940.0
}

def @func_11190() -> (Tensor[(8, 6, 7), float64],) {
  %941 = @func_735() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %942 = %941.0;
  (%942,)
}

def @func_2683() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %943 = @func_458() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %944 = @func_968() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %945 = %943.0;
  %946 = @func_1045() /* ty=Tensor[(8, 6, 7), float64] */;
  %947 = %944.0;
  (%945, %946, %947)
}

def @func_11650(%var_11640: Tensor[(585), float64]) -> (Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(585), float64], Tensor[(585), float64]) {
  %948 = @func_1752() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), bool]) */;
  %949 = @func_9739() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %950 = cast(%var_11640, dtype="float64") /* ty=Tensor[(585), float64] */;
  %951 = reshape(%950, newshape=[585]) /* ty=Tensor[(585), float64] */;
  %952 = @func_11264(%951) /* ty=(Tensor[(8, 6, 7), float64], Tensor[(13, 3, 15), float32], Tensor[(585), float64]) */;
  %953 = %948.5;
  %954 = %949.1;
  %955 = @func_8131() /* ty=Tensor[(8, 6, 7), float64] */;
  %956 = %952.2;
  (%953, %954, %955, %956, %var_11640)
}

def @func_15267() -> Tensor[(8, 6, 7), float64] {
  %957 = @func_4732() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %957.0
}

def @func_15369() -> (Tensor[(8, 6, 7), float64], Tensor[(7, 12, 10), float32], Tensor[(840, 1), float32], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32]) {
  %958 = @func_2988() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %959 = cast(meta[relay.Constant][22] /* ty=Tensor[(840, 1), float32] */, dtype="float32") /* ty=Tensor[(840, 1), float32] */;
  %960 = reshape(%959, newshape=[7, 12, 10]) /* ty=Tensor[(7, 12, 10), float32] */;
  %961 = %958.2;
  %962 = @func_13073(%960) /* ty=Tensor[(7, 12, 10), float32] */;
  %963 = @func_1627() /* ty=Tensor[(8, 6, 7), float64] */;
  %964 = @func_7051() /* ty=Tensor[(8, 6, 7), float32] */;
  (%961, %962, meta[relay.Constant][22] /* ty=Tensor[(840, 1), float32] */, %963, %964)
}

def @func_8783() -> Tensor[(8, 6, 7), float32] {
  %965 = @func_7595() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32]) */;
  %965.1
}

def @func_2539() -> (Tensor[(8, 6, 7), float64],) {
  %966 = @func_968() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %967 = %966.0;
  (%967,)
}

def @func_4108(%var_4102: int16, %var_4103: Tensor[(11, 1, 12), int16]) -> (Tensor[(11, 1, 12), bool],) {
  %968 = cast(%var_4102, dtype="bool") /* ty=bool */;
  %969 = cast(%var_4103, dtype="bool") /* ty=Tensor[(11, 1, 12), bool] */;
  %970 = equal(%968, %969) /* ty=Tensor[(11, 1, 12), bool] */;
  (%970,)
}

def @func_2002() -> (Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64]) {
  %971 = @func_1932() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %972 = %971.0;
  %973 = @func_502() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %974 = %973.0;
  %975 = cast(%974, dtype="bool") /* ty=Tensor[(8, 6, 7), bool] */;
  %976 = shape_of(%972, dtype="int32") /* ty=Tensor[(3), int32] */;
  %977 = cast(%972, dtype="bool") /* ty=Tensor[(8, 6, 7), bool] */;
  %978 = dyn.reshape(%975, %976, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %979 = @func_1932() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %980 = greater(%977, %978) /* ty=Tensor[(8, 6, 7), bool] */;
  %981 = %979.0;
  (%980, %981)
}

def @func_14065() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), bool]) {
  %982 = @func_12984() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %983 = @func_11220() /* ty=(Tensor[(8, 6, 7), bool],) */;
  %984 = %982.2;
  %985 = %983.0;
  (%984, %985)
}

def @func_8094() -> Tensor[(8, 6, 7), float64] {
  %986 = @func_8048() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %986.0
}

def @func_15488() -> (Tensor[(8, 6, 7), float64],) {
  %987 = @func_13082() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %988 = %987.0;
  (%988,)
}

def @func_16120() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %989 = @func_15488() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %990 = @func_6495() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %991 = %989.0;
  %992 = %990.1;
  (%991, %992)
}

def @func_5844() -> (Tensor[(8, 6, 7), float64],) {
  %993 = @func_3207() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %994 = %993.0;
  (%994,)
}

def @func_3498() -> Tensor[(8, 6, 7), float64] {
  %995 = @func_2539() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %995.0
}

def @func_13457() -> (Tensor[(8, 6, 7), float64],) {
  %996 = @func_10270() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %997 = %996.1;
  (%997,)
}

def @func_11497(%var_11483: Tensor[(27, 2), int32]) -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(27, 2), float64]) {
  %998 = @func_4294() /* ty=Tensor[(8, 6, 7), float64] */;
  %999 = cast(%998, dtype="float64") /* ty=Tensor[(8, 6, 7), float64] */;
  %1000 = reshape(%999, newshape=[8, 6, 7]) /* ty=Tensor[(8, 6, 7), float64] */;
  %1001 = @func_9289(%1000) /* ty=(Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), float64]) */;
  %1002 = cast(meta[relay.Constant][23] /* ty=Tensor[(27, 2), int32] */, dtype="int32") /* ty=Tensor[(27, 2), int32] */;
  %1003 = reshape(%1002, newshape=[54]) /* ty=Tensor[(54), int32] */;
  %1004 = @func_6869(%1003) /* ty=(Tensor[(7, 11, 7), float32], Tensor[(9, 3, 2), int32], Tensor[(54), int32], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(1650), float32], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1005 = @func_8954() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1006 = cast(%var_11483, dtype="float64") /* ty=Tensor[(27, 2), float64] */;
  %1007 = shape_of(meta[relay.Constant][23] /* ty=Tensor[(27, 2), int32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1008 = cast(meta[relay.Constant][23] /* ty=Tensor[(27, 2), int32] */, dtype="float64") /* ty=Tensor[(27, 2), float64] */;
  %1009 = dyn.reshape(%1006, %1007, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %1010 = %1001.1;
  %1011 = %1004.4;
  %1012 = %1005.0;
  %1013 = divide(%1008, %1009) /* ty=Tensor[(27, 2), float64] */;
  (%998, %1010, %1011, %1012, %1013)
}

def @func_16667() -> (Tensor[(10, 11, 15), float32],) {
  %1014 = @func_10366() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(10, 11, 15), float32], Tensor[(1650), float32]) */;
  %1015 = %1014.2;
  (%1015,)
}

def @func_16844() -> (Tensor[(8, 6, 7), float64],) {
  %1016 = @func_1519() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1017 = %1016.1;
  (%1017,)
}

def @func_6869(%var_6814: Tensor[(54), int32]) -> (Tensor[(7, 11, 7), float32], Tensor[(9, 3, 2), int32], Tensor[(54), int32], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(1650), float32], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1018 = cast(meta[relay.Constant][24] /* ty=Tensor[(7, 11, 7), float32] */, dtype="float32") /* ty=Tensor[(7, 11, 7), float32] */;
  %1019 = cast(%var_6814, dtype="int32") /* ty=Tensor[(54), int32] */;
  %1020 = cast(%var_6814, dtype="int32") /* ty=Tensor[(54), int32] */;
  %1021 = reshape(%1019, newshape=[9, 3, 2]) /* ty=Tensor[(9, 3, 2), int32] */;
  %1022 = reshape(%1020, newshape=[9, 3, 2]) /* ty=Tensor[(9, 3, 2), int32] */;
  %1023 = @func_5820(%1021, %1022) /* ty=(Tensor[(9, 3, 2), int32], Tensor[(8, 6, 7), float64]) */;
  %1024 = @func_4172() /* ty=(Tensor[(8, 6, 7), bool], Tensor[(1650), float32], Tensor[(8, 6, 7), float64], Tensor[(1650), float64]) */;
  %1025 = cast(meta[relay.Constant][25] /* ty=Tensor[(1650), float32] */, dtype="float32") /* ty=Tensor[(1650), float32] */;
  %1026 = reshape(%1025, newshape=[1650]) /* ty=Tensor[(1650), float32] */;
  %1027 = @func_3632(%1026) /* ty=(Tensor[(8, 6, 7), float64], Tensor[(10, 11, 15), float32], Tensor[(1650), float32]) */;
  %1028 = @func_735() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1029 = @func_1932() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1030 = acos(%1018) /* ty=Tensor[(7, 11, 7), float32] */;
  %1031 = %1023.0;
  %1032 = %1024.2;
  %1033 = %1027.0;
  %1034 = %1028.0;
  %1035 = %1029.0;
  (%1030, %1031, %var_6814, %1032, %1033, meta[relay.Constant][25] /* ty=Tensor[(1650), float32] */, %1034, %1035)
}

def @func_6266() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1036 = @func_3847() /* ty=Tensor[(8, 6, 7), float64] */;
  %1037 = @func_3847() /* ty=Tensor[(8, 6, 7), float64] */;
  (%1036, %1037)
}

def @func_1141() -> (Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), bool]) {
  %1038 = @func_868() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1039 = %1038.0;
  %1040 = cast(meta[relay.Constant][26] /* ty=Tensor[(8, 6, 7), float64] */, dtype="bool") /* ty=Tensor[(8, 6, 7), bool] */;
  %1041 = shape_of(%1039, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1042 = cast(%1039, dtype="bool") /* ty=Tensor[(8, 6, 7), bool] */;
  %1043 = dyn.reshape(%1040, %1041, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1044 = cast(%1039, dtype="float32") /* ty=Tensor[(8, 6, 7), float32] */;
  %1045 = @func_968() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1046 = %1045.0;
  %1047 = cast(%1039, dtype="bool") /* ty=Tensor[(8, 6, 7), bool] */;
  %1048 = shape_of(%1046, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1049 = cast(%1046, dtype="bool") /* ty=Tensor[(8, 6, 7), bool] */;
  %1050 = dyn.reshape(%1047, %1048, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1051 = not_equal(%1042, %1043) /* ty=Tensor[(8, 6, 7), bool] */;
  %1052 = sqrt(%1044) /* ty=Tensor[(8, 6, 7), float32] */;
  %1053 = logical_and(%1049, %1050) /* ty=Tensor[(8, 6, 7), bool] */;
  (%1051, %1052, %1053)
}

def @func_3412() -> Tensor[(8, 6, 7), float64] {
  %1054 = @func_3274() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1054.1
}

def @func_10846() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1055 = @func_9739() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1056 = @func_9924() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), bool]) */;
  %1057 = @func_3709() /* ty=Tensor[(8, 6, 7), float64] */;
  %1058 = %1055.1;
  %1059 = %1056.0;
  %1060 = @func_7864() /* ty=Tensor[(8, 6, 7), float64] */;
  (%1057, %1058, %1059, %1060)
}

def @func_14946() -> Tensor[(8, 6, 7), float64] {
  %1061 = @func_8496() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1061.1
}

def @func_695(%var_649: Tensor[(8, 6, 7), float32]) -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), uint32], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1062 = @func_458() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1063 = @func_502() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1064 = %1063.0;
  %1065 = cast(%1064, dtype="float32") /* ty=Tensor[(8, 6, 7), float32] */;
  %1066 = cosh(%1065) /* ty=Tensor[(8, 6, 7), float32] */;
  %1067 = @func_458() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1068 = %1067.0;
  %1069 = cast(%1068, dtype="float64") /* ty=Tensor[(8, 6, 7), float64] */;
  %1070 = shape_of(%1066, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1071 = cast(%1066, dtype="float64") /* ty=Tensor[(8, 6, 7), float64] */;
  %1072 = dyn.reshape(%1069, %1070, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1073 = cast(%var_649, dtype="uint32") /* ty=Tensor[(8, 6, 7), uint32] */;
  %1074 = shape_of(%1066, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1075 = cast(%1066, dtype="uint32") /* ty=Tensor[(8, 6, 7), uint32] */;
  %1076 = dyn.reshape(%1073, %1074, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1077 = @func_502() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1078 = @func_502() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1079 = @func_502() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1080 = %1062.0;
  %1081 = mod(%1071, %1072) /* ty=Tensor[(8, 6, 7), float64] */;
  %1082 = bitwise_or(%1075, %1076) /* ty=Tensor[(8, 6, 7), uint32] */;
  %1083 = %1077.0;
  %1084 = %1078.0;
  %1085 = %1079.0;
  (%1080, %1081, %1082, %1083, %1084, %1085)
}

def @func_6495() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1086 = @func_3880() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1087 = @func_4361() /* ty=Tensor[(8, 6, 7), float64] */;
  %1088 = %1086.0;
  %1089 = @func_4912() /* ty=Tensor[(8, 6, 7), float64] */;
  (%1087, %1088, %1089)
}

def @func_15158() -> (Tensor[(8, 6, 7), float64],) {
  %1090 = @func_7595() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32]) */;
  %1091 = %1090.0;
  (%1091,)
}

def @func_20450() -> Tensor[(8, 6, 7), float32] {
  @func_7051() /* ty=Tensor[(8, 6, 7), float32] */
}

def @func_18030() -> (Tensor[(16, 10, 9), float64], Tensor[(8, 6, 7), float64]) {
  %1092 = cast(meta[relay.Constant][27] /* ty=Tensor[(16, 10, 9), float64] */, dtype="float64") /* ty=Tensor[(16, 10, 9), float64] */;
  %1093 = rsqrt(%1092) /* ty=Tensor[(16, 10, 9), float64] */;
  %1094 = @func_9169() /* ty=Tensor[(8, 6, 7), float64] */;
  (%1093, %1094)
}

def @func_8266() -> (Tensor[(8, 6, 7), float64],) {
  %1095 = @func_3093() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1096 = %1095.0;
  (%1096,)
}

def @func_16583(%var_16578: Tensor[(12, 2, 9), float64], %var_16579: Tensor[(12, 2, 9), float64]) -> Tensor[(12, 2, 9), float64] {
  %1097 = cast(%var_16579, dtype="float64") /* ty=Tensor[(12, 2, 9), float64] */;
  %1098 = shape_of(%var_16578, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1099 = cast(%var_16578, dtype="float64") /* ty=Tensor[(12, 2, 9), float64] */;
  %1100 = dyn.reshape(%1097, %1098, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  divide(%1099, %1100) /* ty=Tensor[(12, 2, 9), float64] */
}

def @func_7371() -> Tensor[(8, 6, 7), float64] {
  %1101 = @func_1413() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1101.0
}

def @func_20115(%var_20111: Tensor[(6, 1), int64]) -> (Tensor[(6, 1), int64],) {
  %1102 = cast(-9 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %1103 = cast(%var_20111, dtype="int64") /* ty=Tensor[(6, 1), int64] */;
  %1104 = bitwise_xor(%1102, %1103) /* ty=Tensor[(6, 1), int64] */;
  (%1104,)
}

def @func_12564() -> Tensor[(8, 6, 7), float64] {
  %1105 = @func_3146() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1105.2
}

def @func_11085() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1106 = @func_1013() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1107 = @func_7292() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1108 = %1106.0;
  %1109 = %1107.0;
  (%1108, %1109)
}

def @func_16312(%var_16219: Tensor[(14, 8, 2), bool], %var_16220: Tensor[(14, 8, 2), bool], %var_16289: Tensor[(1650), float32]) -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(14, 8, 2), float32], Tensor[(8, 6, 7), float64], Tensor[(10, 11, 15), float32], Tensor[(1650), float32], Tensor[(8, 6, 7), float64], Tensor[(14, 8, 2), uint8], Tensor[(8, 6, 7), float64]) {
  %1110 = @func_2539() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1111 = cast(%var_16220, dtype="float32") /* ty=Tensor[(14, 8, 2), float32] */;
  %1112 = sin(%1111) /* ty=Tensor[(14, 8, 2), float32] */;
  %1113 = cast(%1112, dtype="float32") /* ty=Tensor[(14, 8, 2), float32] */;
  %1114 = @func_1752() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), bool]) */;
  %1115 = cast(%var_16289, dtype="float32") /* ty=Tensor[(1650), float32] */;
  %1116 = reshape(%1115, newshape=[1650]) /* ty=Tensor[(1650), float32] */;
  %1117 = @func_3632(%1116) /* ty=(Tensor[(8, 6, 7), float64], Tensor[(10, 11, 15), float32], Tensor[(1650), float32]) */;
  %1118 = @func_11085() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1119 = cast(%var_16220, dtype="bool") /* ty=Tensor[(14, 8, 2), bool] */;
  %1120 = shape_of(%var_16219, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1121 = cast(%var_16219, dtype="bool") /* ty=Tensor[(14, 8, 2), bool] */;
  %1122 = dyn.reshape(%1119, %1120, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1123 = logical_or(%1121, %1122) /* ty=Tensor[(14, 8, 2), bool] */;
  %1124 = cast(%1123, dtype="uint8") /* ty=Tensor[(14, 8, 2), uint8] */;
  %1125 = shape_of(%var_16219, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1126 = cast(%var_16219, dtype="uint8") /* ty=Tensor[(14, 8, 2), uint8] */;
  %1127 = dyn.reshape(%1124, %1125, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1128 = @func_8164() /* ty=Tensor[(8, 6, 7), float64] */;
  %1129 = %1110.0;
  %1130 = rsqrt(%1113) /* ty=Tensor[(14, 8, 2), float32] */;
  %1131 = %1114.0;
  %1132 = %1117.1;
  %1133 = %1118.0;
  %1134 = subtract(%1126, %1127) /* ty=Tensor[(14, 8, 2), uint8] */;
  %1135 = @func_8131() /* ty=Tensor[(8, 6, 7), float64] */;
  (%1128, %1129, %1130, %1131, %1132, %var_16289, %1133, %1134, %1135)
}

def @func_18594() -> (Tensor[(16, 10, 9), float64], Tensor[(8, 6, 7), float64]) {
  %1136 = @func_18030() /* ty=(Tensor[(16, 10, 9), float64], Tensor[(8, 6, 7), float64]) */;
  %1137 = @func_4658() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1138 = %1136.0;
  %1139 = %1137.2;
  (%1138, %1139)
}

def @func_8728() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1140 = @func_7864() /* ty=Tensor[(8, 6, 7), float64] */;
  %1141 = @func_6315() /* ty=Tensor[(8, 6, 7), float64] */;
  (%1140, %1141)
}

def @func_12299() -> (Tensor[(8, 6, 7), float64],) {
  %1142 = @func_1932() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1143 = %1142.0;
  (%1143,)
}

def @func_17173() -> (Tensor[(8, 6, 7), float64],) {
  %1144 = @func_16959() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1145 = %1144.0;
  (%1145,)
}

def @func_11754() -> Tensor[(6, 7, 1), float32] {
  %1146 = cast(meta[relay.Constant][28] /* ty=Tensor[(6, 7, 1), float32] */, dtype="float32") /* ty=Tensor[(6, 7, 1), float32] */;
  log10(%1146) /* ty=Tensor[(6, 7, 1), float32] */
}

def @func_7426(%var_7375: Tensor[(5, 15, 7), float64]) -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(5, 15, 7), float32]) {
  %1147 = @func_5557() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32]) */;
  %1148 = @func_6058() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1149 = @func_7025() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1150 = cast(%var_7375, dtype="float64") /* ty=Tensor[(5, 15, 7), float64] */;
  %1151 = acos(%1150) /* ty=Tensor[(5, 15, 7), float64] */;
  %1152 = cast(%1151, dtype="float32") /* ty=Tensor[(5, 15, 7), float32] */;
  %1153 = %1147.0;
  %1154 = %1148.0;
  %1155 = %1149.1;
  %1156 = sin(%1152) /* ty=Tensor[(5, 15, 7), float32] */;
  (%1153, %1154, %1155, %1156)
}

def @func_5557() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32]) {
  %1157 = @func_1752() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), bool]) */;
  %1158 = @func_4361() /* ty=Tensor[(8, 6, 7), float64] */;
  %1159 = %1157.5;
  (%1158, %1159)
}

def @func_16017(%var_16011: Tensor[(3, 11, 8), uint8], %var_16012: Tensor[(3, 11, 8), uint8]) -> Tensor[(3, 11, 8), uint8] {
  %1160 = cast(%var_16012, dtype="uint8") /* ty=Tensor[(3, 11, 8), uint8] */;
  %1161 = shape_of(%var_16011, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1162 = cast(%var_16011, dtype="uint8") /* ty=Tensor[(3, 11, 8), uint8] */;
  %1163 = dyn.reshape(%1160, %1161, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  left_shift(%1162, %1163) /* ty=Tensor[(3, 11, 8), uint8] */
}

def @func_18337(%var_18333: Tensor[(9, 16, 10), float32]) -> (Tensor[(9, 16, 10), float32],) {
  %1164 = cast(%var_18333, dtype="float32") /* ty=Tensor[(9, 16, 10), float32] */;
  %1165 = asinh(%1164) /* ty=Tensor[(9, 16, 10), float32] */;
  (%1165,)
}

def @func_9476() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1166 = @func_7100() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1167 = @func_8008() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1168 = %1166.0;
  %1169 = %1167.0;
  (%1168, %1169)
}

def @func_12429() -> Tensor[(8, 6, 7), float64] {
  %1170 = @func_2988() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1170.2
}

def @func_14107() -> (Tensor[(8, 6, 7), float64], Tensor[(585), bool], Tensor[(2, 7, 7), bool]) {
  %1171 = @func_7683() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1172 = @func_13050() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(585), bool]) */;
  %1173 = %1172.1;
  %1174 = cast(%1173, dtype="float64") /* ty=Tensor[(585), float64] */;
  %1175 = reshape(%1174, newshape=[585]) /* ty=Tensor[(585), float64] */;
  %1176 = @func_7839(%1175) /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(2, 7, 7), bool], Tensor[(98), int16], Tensor[(13, 3, 15), bool], Tensor[(2, 7, 7), bool]) */;
  %1177 = %1171.0;
  %1178 = %1176.2;
  (%1177, %1173, %1178)
}

def @func_18981() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1179 = @func_4658() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1180 = @func_2390() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1181 = %1179.2;
  %1182 = @func_1790() /* ty=Tensor[(8, 6, 7), float64] */;
  %1183 = %1180.0;
  (%1181, %1182, %1183)
}

def @func_458() -> (Tensor[(8, 6, 7), float64],) {
  %1184 = cast(meta[relay.Constant][29] /* ty=Tensor[(8, 6, 7), float64] */, dtype="float64") /* ty=Tensor[(8, 6, 7), float64] */;
  %1185 = log(%1184) /* ty=Tensor[(8, 6, 7), float64] */;
  (%1185,)
}

def @func_8878() -> (Tensor[(8, 6, 7), float64],) {
  %1186 = @func_7193() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1187 = %1186.0;
  (%1187,)
}

def @func_18228(%var_18190: Tensor[(3, 10, 8), int64], %var_18191: Tensor[(3, 10, 8), int64]) -> Tensor[(3, 10, 8), int64] {
  %1188 = cast(%var_18191, dtype="int64") /* ty=Tensor[(3, 10, 8), int64] */;
  %1189 = shape_of(%var_18190, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1190 = cast(%var_18190, dtype="int64") /* ty=Tensor[(3, 10, 8), int64] */;
  %1191 = dyn.reshape(%1188, %1189, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  right_shift(%1190, %1191) /* ty=Tensor[(3, 10, 8), int64] */
}

def @func_12371() -> (Tensor[(8, 6, 7), float64], Tensor[(110, 15), float32]) {
  %1192 = @func_5844() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1193 = @func_9796() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(585), bool], Tensor[(585), float64], Tensor[(8, 6, 7), float64], Tensor[(110, 15), float32]) */;
  %1194 = %1193.4;
  %1195 = cast(%1194, dtype="float32") /* ty=Tensor[(110, 15), float32] */;
  %1196 = %1192.0;
  %1197 = log2(%1195) /* ty=Tensor[(110, 15), float32] */;
  (%1196, %1197)
}

def @func_4340() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1198 = @func_3207() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1199 = @func_3207() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1200 = %1198.0;
  %1201 = %1199.1;
  (%1200, %1201)
}

def @func_9181() -> Tensor[(8, 6, 7), float64] {
  @func_4912() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_2988() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1202 = @func_1932() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1203 = @func_2683() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1204 = @func_1627() /* ty=Tensor[(8, 6, 7), float64] */;
  %1205 = %1202.0;
  %1206 = %1203.0;
  (%1204, %1205, %1206)
}

def @func_17168() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(585), float64]) {
  %1207 = cast(meta[relay.Constant][30] /* ty=Tensor[(585), float64] */, dtype="float64") /* ty=Tensor[(585), float64] */;
  %1208 = reshape(%1207, newshape=[585]) /* ty=Tensor[(585), float64] */;
  %1209 = @func_13187(%1208) /* ty=(Tensor[(8, 6, 7), float64], Tensor[(585), float64], Tensor[(585), float64], Tensor[(8, 6, 7), float64]) */;
  %1210 = cast(meta[relay.Constant][30] /* ty=Tensor[(585), float64] */, dtype="float64") /* ty=Tensor[(585), float64] */;
  %1211 = @func_6709() /* ty=Tensor[(8, 6, 7), float64] */;
  %1212 = %1209.3;
  %1213 = sigmoid(%1210) /* ty=Tensor[(585), float64] */;
  (%1211, %1212, %1213)
}

def @func_11579() -> Tensor[(8, 6, 7), float64] {
  %1214 = @func_3825() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(13, 3, 15), float32], Tensor[(585), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1214.3
}

def @func_17229() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1215 = @func_9950() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1216 = %1215.0;
  %1217 = @func_4912() /* ty=Tensor[(8, 6, 7), float64] */;
  %1218 = @func_3847() /* ty=Tensor[(8, 6, 7), float64] */;
  (%1216, %1217, %1218)
}

def @func_7140() -> (Tensor[(8, 6, 7), float64],) {
  %1219 = @func_7100() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1220 = %1219.0;
  (%1220,)
}

def @func_8623() -> Tensor[(8, 6, 7), float64] {
  %1221 = @func_3207() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1221.1
}

def @func_1752() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), bool]) {
  %1222 = @func_735() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1223 = @func_1519() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1224 = @func_1413() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1225 = %1224.0;
  %1226 = cast(%1225, dtype="float32") /* ty=Tensor[(8, 6, 7), float32] */;
  %1227 = reshape(%1226, newshape=[8, 6, 7]) /* ty=Tensor[(8, 6, 7), float32] */;
  %1228 = @func_695(%1227) /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), uint32], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1229 = @func_1013() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1230 = %1229.0;
  %1231 = cast(%1230, dtype="float32") /* ty=Tensor[(8, 6, 7), float32] */;
  %1232 = @func_1141() /* ty=(Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), bool]) */;
  %1233 = %1222.0;
  %1234 = %1223.0;
  %1235 = @func_1033() /* ty=Tensor[(8, 6, 7), float64] */;
  %1236 = %1228.1;
  %1237 = exp(%1231) /* ty=Tensor[(8, 6, 7), float32] */;
  %1238 = %1232.2;
  (%1233, %1234, %1235, %1225, %1236, %1237, %1238)
}

def @func_15932() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1239 = @func_7140() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1240 = @func_8878() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1241 = %1239.0;
  %1242 = %1240.0;
  (%1241, %1242)
}

def @func_10238() -> (Tensor[(8, 6, 7), float64],) {
  %1243 = @func_8913() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1244 = %1243.0;
  (%1244,)
}

def @func_18727() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1245 = @func_8266() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1246 = @func_15932() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1247 = @func_6666() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1248 = @func_7683() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1249 = @func_17746() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(15, 2, 5), int32], Tensor[(13, 150), bool]) */;
  %1250 = %1245.0;
  %1251 = %1246.0;
  %1252 = @func_12564() /* ty=Tensor[(8, 6, 7), float64] */;
  %1253 = %1247.1;
  %1254 = %1248.0;
  %1255 = %1249.1;
  (%1250, %1251, %1252, %1253, %1254, %1255)
}

def @func_11954() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1256 = @func_10151() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1257 = %1256.0;
  %1258 = @func_8623() /* ty=Tensor[(8, 6, 7), float64] */;
  (%1257, %1258)
}

def @func_11885() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1259 = @func_10929() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1260 = @func_7864() /* ty=Tensor[(8, 6, 7), float64] */;
  %1261 = %1259.1;
  %1262 = @func_1045() /* ty=Tensor[(8, 6, 7), float64] */;
  (%1260, %1261, %1262)
}

def @func_4698() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1263 = @func_2084() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1264 = @func_2988() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1265 = %1263.0;
  %1266 = %1264.2;
  (%1265, %1266)
}

def @func_1959() -> Tensor[(8, 6, 7), float64] {
  %1267 = @func_1932() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1267.0
}

def @func_11805() -> Tensor[(8, 6, 7), float64] {
  %1268 = @func_7140() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1268.0
}

def @func_2481() -> (Tensor[(8, 6, 7), float64],) {
  %1269 = @func_1413() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1270 = %1269.0;
  (%1270,)
}

def @func_6058() -> (Tensor[(8, 6, 7), float64],) {
  %1271 = @func_4658() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1272 = %1271.0;
  (%1272,)
}

def @func_7051() -> Tensor[(8, 6, 7), float32] {
  %1273 = @func_5557() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32]) */;
  %1273.1
}

def @func_6799() -> (Tensor[(8, 6, 7), float64], Tensor[(9, 3, 2), int32], Tensor[(54), int32]) {
  %1274 = @func_3704() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1275 = cast(meta[relay.Constant][31] /* ty=Tensor[(54), int32] */, dtype="int32") /* ty=Tensor[(54), int32] */;
  %1276 = cast(meta[relay.Constant][31] /* ty=Tensor[(54), int32] */, dtype="int32") /* ty=Tensor[(54), int32] */;
  %1277 = reshape(%1275, newshape=[9, 3, 2]) /* ty=Tensor[(9, 3, 2), int32] */;
  %1278 = reshape(%1276, newshape=[9, 3, 2]) /* ty=Tensor[(9, 3, 2), int32] */;
  %1279 = @func_5820(%1277, %1278) /* ty=(Tensor[(9, 3, 2), int32], Tensor[(8, 6, 7), float64]) */;
  %1280 = %1274.0;
  %1281 = %1279.0;
  (%1280, %1281, meta[relay.Constant][31] /* ty=Tensor[(54), int32] */)
}

def @func_868() -> (Tensor[(8, 6, 7), float64],) {
  %1282 = @func_502() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1283 = %1282.0;
  (%1283,)
}

def @func_7193() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1284 = @func_3207() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1285 = @func_4732() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1286 = %1284.1;
  %1287 = %1285.0;
  (%1286, %1287)
}

def @func_7595() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32]) {
  %1288 = @func_458() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1289 = %1288.0;
  %1290 = @func_7051() /* ty=Tensor[(8, 6, 7), float32] */;
  (%1289, %1290)
}

def @func_11220() -> (Tensor[(8, 6, 7), bool],) {
  %1291 = @func_9924() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), bool]) */;
  %1292 = %1291.1;
  (%1292,)
}

def @func_1013() -> (Tensor[(8, 6, 7), float64],) {
  %1293 = @func_458() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1294 = %1293.0;
  (%1294,)
}

def @func_20196() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1295 = @func_16775() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), float64]) */;
  %1296 = %1295.0;
  %1297 = @func_14287() /* ty=Tensor[(8, 6, 7), float64] */;
  (%1296, %1297)
}

def @func_15682() -> Tensor[(8, 6, 7), float32] {
  %1298 = @func_9945() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32]) */;
  %1298.1
}

def @func_17571() -> (Tensor[(110, 15), float32], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1299 = @func_9796() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(585), bool], Tensor[(585), float64], Tensor[(8, 6, 7), float64], Tensor[(110, 15), float32]) */;
  %1300 = @func_3146() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1301 = @func_7581() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), float64]) */;
  %1302 = %1299.4;
  %1303 = %1300.1;
  %1304 = %1301.0;
  (%1302, %1303, %1304)
}

def @func_17325() -> Tensor[(8, 6, 7), float64] {
  %1305 = @func_10418() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1305.1
}

def @func_11553(%var_11528: Tensor[(7, 11, 12), float32]) -> (Tensor[(7, 11, 12), float32], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32]) {
  %1306 = cast(%var_11528, dtype="float32") /* ty=Tensor[(7, 11, 12), float32] */;
  %1307 = @func_9608() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), bool]) */;
  %1308 = @func_4658() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1309 = cosh(%1306) /* ty=Tensor[(7, 11, 12), float32] */;
  %1310 = %1307.0;
  %1311 = %1308.2;
  %1312 = @func_7051() /* ty=Tensor[(8, 6, 7), float32] */;
  (%1309, %1310, %1311, %1312)
}

def @func_3825() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(13, 3, 15), float32], Tensor[(585), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1313 = @func_2539() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1314 = @func_3704() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1315 = @func_1519() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1316 = cast(meta[relay.Constant][32] /* ty=Tensor[(585), float64] */, dtype="float64") /* ty=Tensor[(585), float64] */;
  %1317 = reshape(%1316, newshape=[13, 3, 15]) /* ty=Tensor[(13, 3, 15), float64] */;
  %1318 = @func_1562(%1317) /* ty=(Tensor[(13, 3, 15), float32],) */;
  %1319 = @func_1311() /* ty=Tensor[(8, 6, 7), float64] */;
  %1320 = %1313.0;
  %1321 = %1314.0;
  %1322 = %1315.2;
  %1323 = %1318.0;
  %1324 = @func_1790() /* ty=Tensor[(8, 6, 7), float64] */;
  %1325 = @func_3412() /* ty=Tensor[(8, 6, 7), float64] */;
  %1326 = @func_1033() /* ty=Tensor[(8, 6, 7), float64] */;
  (%1319, %1320, %1321, %1322, %1323, meta[relay.Constant][32] /* ty=Tensor[(585), float64] */, %1324, %1325, %1326)
}

def @func_5017() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1327 = @func_2390() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1328 = @func_4786() /* ty=(Tensor[(585), bool], Tensor[(8, 6, 7), float64]) */;
  %1329 = @func_4732() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1330 = %1327.0;
  %1331 = %1328.1;
  %1332 = %1329.0;
  (%1330, %1331, %1332)
}

def @func_13187(%var_13158: Tensor[(585), float64]) -> (Tensor[(8, 6, 7), float64], Tensor[(585), float64], Tensor[(585), float64], Tensor[(8, 6, 7), float64]) {
  %1333 = @func_12234() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1334 = cast(%var_13158, dtype="float64") /* ty=Tensor[(585), float64] */;
  %1335 = reshape(%1334, newshape=[585]) /* ty=Tensor[(585), float64] */;
  %1336 = @func_11650(%1335) /* ty=(Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(585), float64], Tensor[(585), float64]) */;
  %1337 = @func_8266() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1338 = %1333.1;
  %1339 = %1336.3;
  %1340 = %1337.0;
  (%1338, %1339, %var_13158, %1340)
}

def @func_4732() -> (Tensor[(8, 6, 7), float64],) {
  %1341 = @func_2683() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1342 = %1341.0;
  (%1342,)
}

def @func_16071() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1343 = @func_13457() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1344 = @func_11954() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1345 = %1343.0;
  %1346 = @func_2799() /* ty=Tensor[(8, 6, 7), float64] */;
  %1347 = %1344.0;
  (%1345, %1346, %1347)
}

def @func_18306() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1348 = @func_3675() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1349 = @func_9608() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), bool]) */;
  %1350 = %1348.1;
  %1351 = %1349.0;
  (%1350, %1351)
}

def @func_19460() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 13, 5), float32], Tensor[(10, 52), float32], Tensor[(8, 6, 7), float64]) {
  %1352 = @func_7581() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), float64]) */;
  %1353 = @func_11954() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1354 = @func_19028() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1355 = cast(meta[relay.Constant][33] /* ty=Tensor[(10, 52), float32] */, dtype="float32") /* ty=Tensor[(10, 52), float32] */;
  %1356 = reshape(%1355, newshape=[8, 13, 5]) /* ty=Tensor[(8, 13, 5), float32] */;
  %1357 = @func_16547(%1356) /* ty=(Tensor[(8, 13, 5), float32],) */;
  %1358 = @func_14495() /* ty=(Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64]) */;
  %1359 = %1352.0;
  %1360 = %1353.0;
  %1361 = %1354.0;
  %1362 = %1357.0;
  %1363 = %1358.1;
  (%1359, %1360, %1361, %1362, meta[relay.Constant][33] /* ty=Tensor[(10, 52), float32] */, %1363)
}

def @func_10632() -> (Tensor[(8, 6, 7), float64],) {
  %1364 = @func_8242() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1365 = %1364.0;
  (%1365,)
}

def @func_12076() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1366 = @func_2988() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1367 = %1366.0;
  %1368 = @func_10126() /* ty=Tensor[(8, 6, 7), float64] */;
  %1369 = @func_6315() /* ty=Tensor[(8, 6, 7), float64] */;
  (%1367, %1368, %1369)
}

def @func_10418() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1370 = @func_6495() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1371 = @func_7371() /* ty=Tensor[(8, 6, 7), float64] */;
  %1372 = @func_9181() /* ty=Tensor[(8, 6, 7), float64] */;
  %1373 = %1370.0;
  (%1371, %1372, %1373)
}

def @func_15976() -> (Tensor[(8, 6, 7), float64], Tensor[(585), float64], Tensor[(65, 9), float64]) {
  %1374 = @func_7140() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1375 = cast(meta[relay.Constant][34] /* ty=Tensor[(65, 9), float64] */, dtype="float64") /* ty=Tensor[(65, 9), float64] */;
  %1376 = reshape(%1375, newshape=[585]) /* ty=Tensor[(585), float64] */;
  %1377 = @func_11264(%1376) /* ty=(Tensor[(8, 6, 7), float64], Tensor[(13, 3, 15), float32], Tensor[(585), float64]) */;
  %1378 = %1374.0;
  %1379 = %1377.2;
  (%1378, %1379, meta[relay.Constant][34] /* ty=Tensor[(65, 9), float64] */)
}

def @func_19320() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1380 = @func_18179() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1381 = %1380.0;
  %1382 = @func_10053() /* ty=Tensor[(8, 6, 7), float64] */;
  %1383 = @func_15714() /* ty=Tensor[(8, 6, 7), float64] */;
  (%1381, %1382, %1383)
}

def @func_10151() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1384 = @func_8008() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1385 = %1384.0;
  %1386 = @func_8623() /* ty=Tensor[(8, 6, 7), float64] */;
  (%1385, %1386)
}

def @func_1790() -> Tensor[(8, 6, 7), float64] {
  %1387 = @func_1248() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1387.1
}

def @func_10722() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1388 = @func_2539() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1389 = @func_4698() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1390 = %1388.0;
  %1391 = %1389.1;
  (%1390, %1391)
}

def @func_9229(%var_9200: uint32) -> (Tensor[(8, 6, 7), float64], Tensor[(5, 4, ?), int32], uint32, Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1392 = @func_6058() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1393 = cast(%var_9200, dtype="uint32") /* ty=uint32 */;
  %1394 = reshape(%1393, newshape=[]) /* ty=uint32 */;
  %1395 = @func_5379(%1394) /* ty=(Tensor[(8, 6, 7), bool], Tensor[(3, 3, 3), uint32], Tensor[(27, 1), float64], Tensor[(5, 4, ?), int32]) */;
  %1396 = @func_7683() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1397 = @func_6495() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1398 = %1392.0;
  %1399 = %1395.3;
  %1400 = %1396.1;
  %1401 = %1397.2;
  (%1398, %1399, %var_9200, %1400, %1401)
}

def @func_9387(%var_9359: Tensor[(6, 6, 5), bool], %var_9360: Tensor[(6, 6, 5), bool]) -> Tensor[(6, 6, 5), bool] {
  %1402 = cast(%var_9360, dtype="bool") /* ty=Tensor[(6, 6, 5), bool] */;
  %1403 = shape_of(%var_9359, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1404 = cast(%var_9359, dtype="bool") /* ty=Tensor[(6, 6, 5), bool] */;
  %1405 = dyn.reshape(%1402, %1403, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%1404, %1405) /* ty=Tensor[(6, 6, 5), bool] */
}

def @func_15106(%var_15089: Tensor[(54), int32]) -> (Tensor[(8, 6, 7), float64], Tensor[(54), int32], Tensor[(8, 6, 7), float64], Tensor[(3, 9, 5), float32]) {
  %1406 = cast(%var_15089, dtype="int32") /* ty=Tensor[(54), int32] */;
  %1407 = reshape(%1406, newshape=[54]) /* ty=Tensor[(54), int32] */;
  %1408 = @func_6869(%1407) /* ty=(Tensor[(7, 11, 7), float32], Tensor[(9, 3, 2), int32], Tensor[(54), int32], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(1650), float32], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1409 = @func_7193() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1410 = cast(meta[relay.Constant][35] /* ty=Tensor[(3, 9, 5), float64] */, dtype="float64") /* ty=Tensor[(3, 9, 5), float64] */;
  %1411 = sqrt(%1410) /* ty=Tensor[(3, 9, 5), float64] */;
  %1412 = cast(meta[relay.Constant][35] /* ty=Tensor[(3, 9, 5), float64] */, dtype="float64") /* ty=Tensor[(3, 9, 5), float64] */;
  %1413 = log(%1412) /* ty=Tensor[(3, 9, 5), float64] */;
  %1414 = cast(%1413, dtype="float32") /* ty=Tensor[(3, 9, 5), float32] */;
  %1415 = shape_of(%1411, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1416 = cast(%1411, dtype="float32") /* ty=Tensor[(3, 9, 5), float32] */;
  %1417 = dyn.reshape(%1414, %1415, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1418 = %1408.6;
  %1419 = %1409.0;
  %1420 = mod(%1416, %1417) /* ty=Tensor[(3, 9, 5), float32] */;
  (%1418, %var_15089, %1419, %1420)
}

def @func_17853() -> (Tensor[(8, 6, 7), float64],) {
  %1421 = @func_11954() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1422 = %1421.0;
  (%1422,)
}

def @func_19699() -> Tensor[(8, 6, 7), float64] {
  %1423 = @func_10632() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1423.0
}

def @func_13149() -> (Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64], Tensor[(13, 3, 15), float32]) {
  %1424 = @func_9924() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), bool]) */;
  %1425 = @func_11190() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1426 = @func_9322() /* ty=(Tensor[(13, 3, 15), float32],) */;
  %1427 = %1424.1;
  %1428 = %1425.0;
  %1429 = %1426.0;
  (%1427, %1428, %1429)
}

def @func_6144() -> (Tensor[(8, 6, 7), float64],) {
  %1430 = @func_3709() /* ty=Tensor[(8, 6, 7), float64] */;
  (%1430,)
}

def @func_20255() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1431 = @func_3880() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1432 = @func_3146() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1433 = %1431.0;
  %1434 = %1432.1;
  %1435 = @func_12564() /* ty=Tensor[(8, 6, 7), float64] */;
  (%1433, %1434, %1435)
}

def @func_4658() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1436 = @func_2390() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1437 = @func_3498() /* ty=Tensor[(8, 6, 7), float64] */;
  %1438 = cast(%1437, dtype="float64") /* ty=Tensor[(8, 6, 7), float64] */;
  %1439 = cast(%1437, dtype="float32") /* ty=Tensor[(8, 6, 7), float32] */;
  %1440 = reshape(%1439, newshape=[8, 6, 7]) /* ty=Tensor[(8, 6, 7), float32] */;
  %1441 = @func_695(%1440) /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), uint32], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1442 = %1436.0;
  %1443 = log10(%1438) /* ty=Tensor[(8, 6, 7), float64] */;
  %1444 = %1441.4;
  (%1442, %1443, %1444)
}

def @func_12021() -> (Tensor[(8, 6, 7), float64],) {
  %1445 = @func_8713() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1446 = %1445.0;
  (%1446,)
}

def @func_5697(%var_5689: Tensor[(15, 2, 5), int32]) -> (Tensor[(15, 2, 5), int32], Tensor[(8, 6, 7), float64]) {
  %1447 = cast(meta[relay.Constant][36] /* ty=Tensor[(15, 2, 5), int32] */, dtype="int32") /* ty=Tensor[(15, 2, 5), int32] */;
  %1448 = shape_of(%var_5689, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1449 = cast(%var_5689, dtype="int32") /* ty=Tensor[(15, 2, 5), int32] */;
  %1450 = dyn.reshape(%1447, %1448, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1451 = bitwise_xor(%1449, %1450) /* ty=Tensor[(15, 2, 5), int32] */;
  %1452 = @func_3580() /* ty=Tensor[(8, 6, 7), float64] */;
  (%1451, %1452)
}

def @func_10001() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1453 = @func_8623() /* ty=Tensor[(8, 6, 7), float64] */;
  %1454 = @func_3498() /* ty=Tensor[(8, 6, 7), float64] */;
  (%1453, %1454)
}

def @func_5379(%var_5303: uint32) -> (Tensor[(8, 6, 7), bool], Tensor[(3, 3, 3), uint32], Tensor[(27, 1), float64], Tensor[(5, 4, ?), int32]) {
  %1455 = @func_1141() /* ty=(Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), bool]) */;
  %1456 = cast(meta[relay.Constant][37] /* ty=Tensor[(27, 1), float64] */, dtype="float64") /* ty=Tensor[(27, 1), float64] */;
  %1457 = reshape(%1456, newshape=[3, 3, 3]) /* ty=Tensor[(3, 3, 3), float64] */;
  %1458 = @func_3554(%1457) /* ty=(Tensor[(3, 3, 3), uint32],) */;
  %1459 = cast(%var_5303, dtype="bool") /* ty=bool */;
  %1460 = cast(meta[relay.Constant][38] /* ty=Tensor[(5, 4, 1), uint32] */, dtype="bool") /* ty=Tensor[(5, 4, 1), bool] */;
  %1461 = less(%1459, %1460) /* ty=Tensor[(5, 4, 1), bool] */;
  %1462 = cast(%1461, dtype="float32") /* ty=Tensor[(5, 4, 1), float32] */;
  %1463 = atan(%1462) /* ty=Tensor[(5, 4, 1), float32] */;
  %1464 = cast(meta[relay.Constant][38] /* ty=Tensor[(5, 4, 1), uint32] */, dtype="int32") /* ty=Tensor[(5, 4, 1), int32] */;
  %1465 = shape_of(%1463, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1466 = cast(%1463, dtype="int32") /* ty=Tensor[(5, 4, 1), int32] */;
  %1467 = dyn.reshape(%1464, %1465, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1468 = minimum(%1466, %1467) /* ty=Tensor[(5, 4, ?), int32] */;
  %1469 = cast(meta[relay.Constant][38] /* ty=Tensor[(5, 4, 1), uint32] */, dtype="int32") /* ty=Tensor[(5, 4, 1), int32] */;
  %1470 = shape_of(%1468, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1471 = cast(%1468, dtype="int32") /* ty=Tensor[(5, 4, ?), int32] */;
  %1472 = dyn.reshape(%1469, %1470, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1473 = %1455.2;
  %1474 = %1458.0;
  %1475 = add(%1471, %1472) /* ty=Tensor[(5, 4, ?), int32] */;
  (%1473, %1474, meta[relay.Constant][37] /* ty=Tensor[(27, 1), float64] */, %1475)
}

def @func_17746() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(15, 2, 5), int32], Tensor[(13, 150), bool]) {
  %1476 = @func_12299() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1477 = @func_5986() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1478 = cast(meta[relay.Constant][39] /* ty=Tensor[(1, 150), int32] */, dtype="int32") /* ty=Tensor[(1, 150), int32] */;
  %1479 = reshape(%1478, newshape=[15, 2, 5]) /* ty=Tensor[(15, 2, 5), int32] */;
  %1480 = @func_5697(%1479) /* ty=(Tensor[(15, 2, 5), int32], Tensor[(8, 6, 7), float64]) */;
  %1481 = cast(meta[relay.Constant][39] /* ty=Tensor[(1, 150), int32] */, dtype="bool") /* ty=Tensor[(1, 150), bool] */;
  %1482 = cast(meta[relay.Constant][40] /* ty=Tensor[(13, 150), int32] */, dtype="bool") /* ty=Tensor[(13, 150), bool] */;
  %1483 = %1476.0;
  %1484 = %1477.0;
  %1485 = @func_11047() /* ty=Tensor[(8, 6, 7), float64] */;
  %1486 = %1480.0;
  %1487 = greater_equal(%1481, %1482) /* ty=Tensor[(13, 150), bool] */;
  (%1483, %1484, %1485, %1486, %1487)
}

def @func_1519() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1488 = @func_868() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1489 = @func_1413() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1490 = %1488.0;
  %1491 = %1489.0;
  %1492 = @func_1045() /* ty=Tensor[(8, 6, 7), float64] */;
  (%1490, %1491, %1492)
}

def @func_19848() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1493 = @func_1932() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1494 = @func_2683() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1495 = @func_8008() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1496 = %1493.0;
  %1497 = %1494.1;
  %1498 = %1495.2;
  (%1496, %1497, %1498)
}

def @func_13843() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1499 = @func_2728() /* ty=(Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64]) */;
  %1500 = @func_8094() /* ty=Tensor[(8, 6, 7), float64] */;
  %1501 = %1499.1;
  (%1500, %1501)
}

def @func_16191(%var_16181: Tensor[(1568), float64]) -> (Tensor[(8, 6, 7), float64], Tensor[(14, ?, 16), int64], Tensor[(224), float64], Tensor[(1568), float64]) {
  %1502 = cast(meta[relay.Constant][41] /* ty=Tensor[(224), float64] */, dtype="float64") /* ty=Tensor[(224), float64] */;
  %1503 = cast(%var_16181, dtype="float64") /* ty=Tensor[(1568), float64] */;
  %1504 = reshape(%1502, newshape=[14, 1, 16]) /* ty=Tensor[(14, 1, 16), float64] */;
  %1505 = reshape(%1503, newshape=[14, 7, 16]) /* ty=Tensor[(14, 7, 16), float64] */;
  %1506 = @func_7497(%1504, %1505) /* ty=(Tensor[(8, 6, 7), float64], Tensor[(14, 7, 16), int32], Tensor[(8, 6, 7), float64], Tensor[(14, ?, 16), int32], Tensor[(14, ?, 16), int64]) */;
  %1507 = @func_7904() /* ty=Tensor[(8, 6, 7), float64] */;
  %1508 = %1506.4;
  (%1507, %1508, meta[relay.Constant][41] /* ty=Tensor[(224), float64] */, %var_16181)
}

def @func_12234() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1509 = @func_11389() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1510 = @func_5986() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1511 = %1509.3;
  %1512 = %1510.0;
  (%1511, %1512)
}

def @func_2799() -> Tensor[(8, 6, 7), float64] {
  @func_1311() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_10929() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1513 = @func_4658() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1514 = %1513.2;
  %1515 = @func_2799() /* ty=Tensor[(8, 6, 7), float64] */;
  (%1514, %1515)
}

def @func_7292() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1516 = @func_7193() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1517 = @func_5289() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1518 = %1516.0;
  %1519 = %1517.2;
  (%1518, %1519)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_6982() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %7 = fn () -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
    %0 = @func_5557() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32]) */;
    %1 = @func_968() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %2 = @func_1232() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %3 = %0.0;
    %4 = @func_3709() /* ty=Tensor[(8, 6, 7), float64] */;
    %5 = %1.0;
    %6 = %2.1;
    (%3, %4, %5, %6)
  };
  %7() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_3095() -> (Tensor[(8, 6, 7), float64],) {
  @func_3093() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_9739() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %8 = @func_6144() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %9 = @func_8713() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %10 = @func_2683() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %11 = %8.0;
  %12 = %9.0;
  %13 = %10.2;
  (%11, %12, %13)
}

def @func_11956() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  @func_11954() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_20322() -> (Tensor[(9, 3, 2), int32], Tensor[(8, 6, 7), float64], Tensor[(6, 10, 6), bool], Tensor[(360), uint16], Tensor[(8, 6, 7), float64]) {
  %14 = @func_12933() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(9, 3, 2), int32]) */;
  %15 = @func_3316() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), bool]) */;
  %16 = cast(meta[relay.Constant][0] /* ty=Tensor[(360), uint16] */, dtype="uint16") /* ty=Tensor[(360), uint16] */;
  %17 = reshape(%16, newshape=[6, 10, 6]) /* ty=Tensor[(6, 10, 6), uint16] */;
  %18 = @func_7548(%17) /* ty=(Tensor[(6, 10, 6), bool], Tensor[(8, 6, 7), float64]) */;
  %19 = @func_7292() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %20 = %14.4;
  %21 = %15.0;
  %22 = %18.0;
  %23 = %19.1;
  (%20, %21, %22, meta[relay.Constant][0] /* ty=Tensor[(360), uint16] */, %23)
}

def @func_9391(%var_9389: Tensor[(6, 6, 5), bool], %var_9390: Tensor[(6, 6, 5), bool]) -> Tensor[(6, 6, 5), bool] {
  @func_9387(%var_9389, %var_9390) /* ty=Tensor[(6, 6, 5), bool] */
}

def @func_16891() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32], Tensor[(924), float32]) {
  %30 = fn () -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32], Tensor[(924), float32]) {
    %24 = @func_13774() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %25 = cast(meta[relay.Constant][1] /* ty=Tensor[(924), float32] */, dtype="float32") /* ty=Tensor[(924), float32] */;
    %26 = reshape(%25, newshape=[7, 11, 12]) /* ty=Tensor[(7, 11, 12), float32] */;
    %27 = @func_11553(%26) /* ty=(Tensor[(7, 11, 12), float32], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32]) */;
    %28 = %24.0;
    %29 = %27.3;
    (%28, %29, meta[relay.Constant][1] /* ty=Tensor[(924), float32] */)
  };
  %30() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32], Tensor[(924), float32]) */
}

def @func_8048() -> (Tensor[(8, 6, 7), float64],) {
  %31 = @func_3316() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), bool]) */;
  %32 = %31.0;
  (%32,)
}

def @func_13149() -> (Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64], Tensor[(13, 3, 15), float32]) {
  %33 = @func_9924() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), bool]) */;
  %34 = @func_11190() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %35 = @func_9322() /* ty=(Tensor[(13, 3, 15), float32],) */;
  %36 = %33.1;
  %37 = %34.0;
  %38 = %35.0;
  (%36, %37, %38)
}

def @func_16583(%var_16578: Tensor[(12, 2, 9), float64], %var_16579: Tensor[(12, 2, 9), float64]) -> Tensor[(12, 2, 9), float64] {
  %39 = cast(%var_16579, dtype="float64") /* ty=Tensor[(12, 2, 9), float64] */;
  %40 = shape_of(%var_16578, dtype="int32") /* ty=Tensor[(3), int32] */;
  %41 = cast(%var_16578, dtype="float64") /* ty=Tensor[(12, 2, 9), float64] */;
  %42 = dyn.reshape(%39, %40, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  divide(%41, %42) /* ty=Tensor[(12, 2, 9), float64] */
}

def @func_15400() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  @func_15398() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_10128() -> Tensor[(8, 6, 7), float64] {
  @func_10126() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_11954() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %43 = @func_10151() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %44 = %43.0;
  %45 = @func_8623() /* ty=Tensor[(8, 6, 7), float64] */;
  (%44, %45)
}

def @func_8268() -> (Tensor[(8, 6, 7), float64],) {
  @func_8266() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_16587(%var_16585: Tensor[(12, 2, 9), float64], %var_16586: Tensor[(12, 2, 9), float64]) -> Tensor[(12, 2, 9), float64] {
  @func_16583(%var_16585, %var_16586) /* ty=Tensor[(12, 2, 9), float64] */
}

def @func_1752() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), bool]) {
  %46 = @func_735() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %47 = @func_1519() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %48 = @func_1413() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %49 = %48.0;
  %50 = cast(%49, dtype="float32") /* ty=Tensor[(8, 6, 7), float32] */;
  %51 = reshape(%50, newshape=[8, 6, 7]) /* ty=Tensor[(8, 6, 7), float32] */;
  %52 = @func_695(%51) /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), uint32], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %53 = @func_1013() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %54 = %53.0;
  %55 = cast(%54, dtype="float32") /* ty=Tensor[(8, 6, 7), float32] */;
  %56 = @func_1141() /* ty=(Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), bool]) */;
  %57 = %46.0;
  %58 = %47.0;
  %59 = @func_1033() /* ty=Tensor[(8, 6, 7), float64] */;
  %60 = %52.1;
  %61 = exp(%55) /* ty=Tensor[(8, 6, 7), float32] */;
  %62 = %56.2;
  (%57, %58, %59, %49, %60, %61, %62)
}

def @func_1141() -> (Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), bool]) {
  %63 = @func_868() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %64 = %63.0;
  %65 = cast(meta[relay.Constant][2] /* ty=Tensor[(8, 6, 7), float64] */, dtype="bool") /* ty=Tensor[(8, 6, 7), bool] */;
  %66 = shape_of(%64, dtype="int32") /* ty=Tensor[(3), int32] */;
  %67 = cast(%64, dtype="bool") /* ty=Tensor[(8, 6, 7), bool] */;
  %68 = dyn.reshape(%65, %66, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %69 = cast(%64, dtype="float32") /* ty=Tensor[(8, 6, 7), float32] */;
  %70 = @func_968() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %71 = %70.0;
  %72 = cast(%64, dtype="bool") /* ty=Tensor[(8, 6, 7), bool] */;
  %73 = shape_of(%71, dtype="int32") /* ty=Tensor[(3), int32] */;
  %74 = cast(%71, dtype="bool") /* ty=Tensor[(8, 6, 7), bool] */;
  %75 = dyn.reshape(%72, %73, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %76 = not_equal(%67, %68) /* ty=Tensor[(8, 6, 7), bool] */;
  %77 = sqrt(%69) /* ty=Tensor[(8, 6, 7), float32] */;
  %78 = logical_and(%74, %75) /* ty=Tensor[(8, 6, 7), bool] */;
  (%76, %77, %78)
}

def @func_6464() -> Tensor[(8, 6, 7), float64] {
  %79 = @func_1932() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %79.0
}

def @func_3093() -> (Tensor[(8, 6, 7), float64],) {
  %80 = @func_2539() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %81 = %80.0;
  (%81,)
}

def @func_5381(%var_5380: uint32) -> (Tensor[(8, 6, 7), bool], Tensor[(3, 3, 3), uint32], Tensor[(27, 1), float64], Tensor[(5, 4, ?), int32]) {
  %103 = fn (%var_5303: uint32) -> (Tensor[(8, 6, 7), bool], Tensor[(3, 3, 3), uint32], Tensor[(27, 1), float64], Tensor[(5, 4, ?), int32]) {
    %82 = @func_1141() /* ty=(Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), bool]) */;
    %83 = cast(meta[relay.Constant][3] /* ty=Tensor[(27, 1), float64] */, dtype="float64") /* ty=Tensor[(27, 1), float64] */;
    %84 = reshape(%83, newshape=[3, 3, 3]) /* ty=Tensor[(3, 3, 3), float64] */;
    %85 = @func_3554(%84) /* ty=(Tensor[(3, 3, 3), uint32],) */;
    %86 = cast(%var_5303, dtype="bool") /* ty=bool */;
    %87 = cast(meta[relay.Constant][4] /* ty=Tensor[(5, 4, 1), uint32] */, dtype="bool") /* ty=Tensor[(5, 4, 1), bool] */;
    %88 = less(%86, %87) /* ty=Tensor[(5, 4, 1), bool] */;
    %89 = cast(%88, dtype="float32") /* ty=Tensor[(5, 4, 1), float32] */;
    %90 = atan(%89) /* ty=Tensor[(5, 4, 1), float32] */;
    %91 = cast(meta[relay.Constant][4] /* ty=Tensor[(5, 4, 1), uint32] */, dtype="int32") /* ty=Tensor[(5, 4, 1), int32] */;
    %92 = shape_of(%90, dtype="int32") /* ty=Tensor[(3), int32] */;
    %93 = cast(%90, dtype="int32") /* ty=Tensor[(5, 4, 1), int32] */;
    %94 = dyn.reshape(%91, %92, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %95 = minimum(%93, %94) /* ty=Tensor[(5, 4, ?), int32] */;
    %96 = cast(meta[relay.Constant][4] /* ty=Tensor[(5, 4, 1), uint32] */, dtype="int32") /* ty=Tensor[(5, 4, 1), int32] */;
    %97 = shape_of(%95, dtype="int32") /* ty=Tensor[(3), int32] */;
    %98 = cast(%95, dtype="int32") /* ty=Tensor[(5, 4, ?), int32] */;
    %99 = dyn.reshape(%96, %97, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %100 = %82.2;
    %101 = %85.0;
    %102 = add(%98, %99) /* ty=Tensor[(5, 4, ?), int32] */;
    (%100, %101, meta[relay.Constant][3] /* ty=Tensor[(27, 1), float64] */, %102)
  };
  %103(%var_5380) /* ty=(Tensor[(8, 6, 7), bool], Tensor[(3, 3, 3), uint32], Tensor[(27, 1), float64], Tensor[(5, 4, ?), int32]) */
}

def @func_16121() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %108 = fn () -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
    %104 = @func_15488() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %105 = @func_6495() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %106 = %104.0;
    %107 = %105.1;
    (%106, %107)
  };
  %108() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_16425() -> Tensor[(8, 6, 7), float64] {
  %110 = fn () -> Tensor[(8, 6, 7), float64] {
    %109 = @func_2481() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %109.0
  };
  %110() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_7025() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %111 = @func_3274() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %112 = @func_4966() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %113 = %111.0;
  %114 = %112.1;
  (%113, %114)
}

def @func_12429() -> Tensor[(8, 6, 7), float64] {
  %115 = @func_2988() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %115.2
}

def @func_8624() -> Tensor[(8, 6, 7), float64] {
  %117 = fn () -> Tensor[(8, 6, 7), float64] {
    %116 = @func_3207() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %116.1
  };
  %117() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_17869() -> Tensor[(8, 6, 7), float64] {
  @func_17867() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_7842(%var_7840: Tensor[(585), float64]) -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(2, 7, 7), bool], Tensor[(98), int16], Tensor[(13, 3, 15), bool], Tensor[(2, 7, 7), bool]) {
  @func_7839(%var_7840) /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(2, 7, 7), bool], Tensor[(98), int16], Tensor[(13, 3, 15), bool], Tensor[(2, 7, 7), bool]) */
}

def @func_8050() -> (Tensor[(8, 6, 7), float64],) {
  @func_8048() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_7429(%var_7427: Tensor[(5, 15, 7), float64]) -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(5, 15, 7), float32]) {
  @func_7426(%var_7427) /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(5, 15, 7), float32]) */
}

def @func_9877(%var_9875: Tensor[(10, 1, 6), float64], %var_9876: Tensor[(10, 6, 6), float64]) -> Tensor[(10, 6, 6), int32] {
  %123 = fn (%var_9832: Tensor[(10, 1, 6), float64], %var_9833: Tensor[(10, 6, 6), float64]) -> Tensor[(10, 6, 6), int32] {
    %118 = cast(%var_9832, dtype="float64") /* ty=Tensor[(10, 1, 6), float64] */;
    %119 = cast(%var_9833, dtype="float64") /* ty=Tensor[(10, 6, 6), float64] */;
    %120 = floor_mod(%118, %119) /* ty=Tensor[(10, 6, 6), float64] */;
    %121 = cast(%120, dtype="int32") /* ty=Tensor[(10, 6, 6), int32] */;
    %122 = cast(%var_9832, dtype="int32") /* ty=Tensor[(10, 1, 6), int32] */;
    logical_xor(%121, %122) /* ty=Tensor[(10, 6, 6), int32] */
  };
  %123(%var_9875, %var_9876) /* ty=Tensor[(10, 6, 6), int32] */
}

def @func_1521() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  @func_1519() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_12775() -> Tensor[(8, 6, 7), float64] {
  @func_12773() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_18729() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  @func_18727() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_8132() -> Tensor[(8, 6, 7), float64] {
  %125 = fn () -> Tensor[(8, 6, 7), float64] {
    %124 = @func_7140() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %124.0
  };
  %125() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_12773() -> Tensor[(8, 6, 7), float64] {
  %126 = @func_2539() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %126.0
}

def @func_18919() -> (Tensor[(585), bool], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  @func_18917() /* ty=(Tensor[(585), bool], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_5987() -> (Tensor[(8, 6, 7), float64],) {
  %128 = fn () -> (Tensor[(8, 6, 7), float64],) {
    %127 = @func_3709() /* ty=Tensor[(8, 6, 7), float64] */;
    (%127,)
  };
  %128() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_17173() -> (Tensor[(8, 6, 7), float64],) {
  %129 = @func_16959() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %130 = %129.0;
  (%130,)
}

def @func_12235() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %135 = fn () -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
    %131 = @func_11389() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %132 = @func_5986() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %133 = %131.3;
    %134 = %132.0;
    (%133, %134)
  };
  %135() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_13874() -> (Tensor[(8, 6, 7), float64],) {
  %136 = @func_13026() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %137 = %136.0;
  (%137,)
}

def @func_8460() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32]) {
  %142 = fn () -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32]) {
    %138 = @func_4825() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %139 = @func_7595() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32]) */;
    %140 = %138.0;
    %141 = %139.1;
    (%140, %141)
  };
  %142() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32]) */
}

def @func_1565(%var_1563: Tensor[(13, 3, 15), float64]) -> (Tensor[(13, 3, 15), float32],) {
  @func_1562(%var_1563) /* ty=(Tensor[(13, 3, 15), float32],) */
}

def @func_20583(%var_20581: uint8, %var_20582: Tensor[(1, 14, 16), uint8]) -> (Tensor[(1, 14, 16), uint8], Tensor[(8, 6, 7), float64]) {
  %148 = fn (%var_20569: uint8, %var_20570: Tensor[(1, 14, 16), uint8]) -> (Tensor[(1, 14, 16), uint8], Tensor[(8, 6, 7), float64]) {
    %143 = cast(%var_20569, dtype="uint8") /* ty=uint8 */;
    %144 = cast(%var_20570, dtype="uint8") /* ty=Tensor[(1, 14, 16), uint8] */;
    %145 = @func_12371() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(110, 15), float32]) */;
    %146 = subtract(%143, %144) /* ty=Tensor[(1, 14, 16), uint8] */;
    %147 = %145.0;
    (%146, %147)
  };
  %148(%var_20581, %var_20582) /* ty=(Tensor[(1, 14, 16), uint8], Tensor[(8, 6, 7), float64]) */
}

def @func_11784() -> Tensor[(8, 6, 7), float64] {
  %150 = fn () -> Tensor[(8, 6, 7), float64] {
    %149 = @func_9739() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %149.2
  };
  %150() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_16416() -> Tensor[(8, 6, 7), float32] {
  @func_16414() /* ty=Tensor[(8, 6, 7), float32] */
}

def @func_8304(%var_8303: Tensor[(5, 105), float64]) -> (Tensor[(8, 6, 7), float64], Tensor[(5, 15, 7), float32], Tensor[(5, 105), float64]) {
  %157 = fn (%var_8295: Tensor[(5, 105), float64]) -> (Tensor[(8, 6, 7), float64], Tensor[(5, 15, 7), float32], Tensor[(5, 105), float64]) {
    %151 = @func_1752() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), bool]) */;
    %152 = cast(%var_8295, dtype="float64") /* ty=Tensor[(5, 105), float64] */;
    %153 = reshape(%152, newshape=[5, 15, 7]) /* ty=Tensor[(5, 15, 7), float64] */;
    %154 = @func_7426(%153) /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(5, 15, 7), float32]) */;
    %155 = %151.0;
    %156 = %154.3;
    (%155, %156, %var_8295)
  };
  %157(%var_8303) /* ty=(Tensor[(8, 6, 7), float64], Tensor[(5, 15, 7), float32], Tensor[(5, 105), float64]) */
}

def @func_18387() -> Tensor[(8, 6, 7), float64] {
  %158 = fn () -> Tensor[(8, 6, 7), float64] {
    @func_10501() /* ty=Tensor[(8, 6, 7), float64] */
  };
  %158() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_10001() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %159 = @func_8623() /* ty=Tensor[(8, 6, 7), float64] */;
  %160 = @func_3498() /* ty=Tensor[(8, 6, 7), float64] */;
  (%159, %160)
}

def @func_3711() -> Tensor[(8, 6, 7), float64] {
  @func_3709() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_14928() -> Tensor[(8, 6, 7), float64] {
  @func_14926() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_1562(%var_1557: Tensor[(13, 3, 15), float64]) -> (Tensor[(13, 3, 15), float32],) {
  %161 = cast(%var_1557, dtype="float64") /* ty=Tensor[(13, 3, 15), float64] */;
  %162 = atan(%161) /* ty=Tensor[(13, 3, 15), float64] */;
  %163 = cast(%162, dtype="float32") /* ty=Tensor[(13, 3, 15), float32] */;
  %164 = sqrt(%163) /* ty=Tensor[(13, 3, 15), float32] */;
  (%164,)
}

def @func_9609() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), bool]) {
  %169 = fn () -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), bool]) {
    %165 = @func_5986() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %166 = @func_2728() /* ty=(Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64]) */;
    %167 = %165.0;
    %168 = %166.0;
    (%167, %168)
  };
  %169() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), bool]) */
}

def @func_12984() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %170 = @func_4698() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %171 = @func_9608() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), bool]) */;
  %172 = %170.0;
  %173 = %171.0;
  %174 = @func_10501() /* ty=Tensor[(8, 6, 7), float64] */;
  (%172, %173, %174)
}

def @func_9118() -> (Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %175 = @func_2002() /* ty=(Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64]) */;
  %176 = @func_2683() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %177 = @func_868() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %178 = %175.0;
  %179 = @func_4912() /* ty=Tensor[(8, 6, 7), float64] */;
  %180 = @func_8131() /* ty=Tensor[(8, 6, 7), float64] */;
  %181 = %176.2;
  %182 = %177.0;
  (%178, %179, %180, %181, %182)
}

def @func_13051() -> (Tensor[(8, 6, 7), float64], Tensor[(585), bool]) {
  %187 = fn () -> (Tensor[(8, 6, 7), float64], Tensor[(585), bool]) {
    %183 = @func_5557() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32]) */;
    %184 = @func_4786() /* ty=(Tensor[(585), bool], Tensor[(8, 6, 7), float64]) */;
    %185 = %183.0;
    %186 = %184.0;
    (%185, %186)
  };
  %187() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(585), bool]) */
}

def @func_5290() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %194 = fn () -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
    %188 = @func_3093() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %189 = @func_4340() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %190 = @func_1413() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %191 = %188.0;
    %192 = %189.0;
    %193 = %190.0;
    (%191, %192, %193)
  };
  %194() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_19689() -> (Tensor[(13, 2, 11), float32], Tensor[(8, 6, 7), float64]) {
  %195 = cast(meta[relay.Constant][5] /* ty=Tensor[(13, 2, 11), float32] */, dtype="float32") /* ty=Tensor[(13, 2, 11), float32] */;
  %196 = cosh(%195) /* ty=Tensor[(13, 2, 11), float32] */;
  %197 = cast(%196, dtype="float32") /* ty=Tensor[(13, 2, 11), float32] */;
  %198 = @func_18619() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %199 = asinh(%197) /* ty=Tensor[(13, 2, 11), float32] */;
  %200 = %198.0;
  (%199, %200)
}

def @func_3146() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %201 = @func_1232() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %202 = @func_2988() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %203 = %202.1;
  %204 = cast(%203, dtype="float32") /* ty=Tensor[(8, 6, 7), float32] */;
  %205 = reshape(%204, newshape=[8, 6, 7]) /* ty=Tensor[(8, 6, 7), float32] */;
  %206 = @func_695(%205) /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), uint32], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %207 = %201.1;
  %208 = %206.5;
  (%207, %203, %208)
}

def @func_6157() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  @func_6155() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_10420() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  @func_10418() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_10890() -> (Tensor[(8, 6, 7), float64],) {
  %211 = fn () -> (Tensor[(8, 6, 7), float64],) {
    %209 = @func_2084() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %210 = %209.0;
    (%210,)
  };
  %211() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_3500() -> Tensor[(8, 6, 7), float64] {
  @func_3498() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_11049() -> Tensor[(8, 6, 7), float64] {
  @func_11047() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_1791() -> Tensor[(8, 6, 7), float64] {
  %213 = fn () -> Tensor[(8, 6, 7), float64] {
    %212 = @func_1248() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %212.1
  };
  %213() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_11580() -> Tensor[(8, 6, 7), float64] {
  %215 = fn () -> Tensor[(8, 6, 7), float64] {
    %214 = @func_3825() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(13, 3, 15), float32], Tensor[(585), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %214.3
  };
  %215() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_5019() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  @func_5017() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_11555(%var_11554: Tensor[(7, 11, 12), float32]) -> (Tensor[(7, 11, 12), float32], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32]) {
  %223 = fn (%var_11528: Tensor[(7, 11, 12), float32]) -> (Tensor[(7, 11, 12), float32], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32]) {
    %216 = cast(%var_11528, dtype="float32") /* ty=Tensor[(7, 11, 12), float32] */;
    %217 = @func_9608() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), bool]) */;
    %218 = @func_4658() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %219 = cosh(%216) /* ty=Tensor[(7, 11, 12), float32] */;
    %220 = %217.0;
    %221 = %218.2;
    %222 = @func_7051() /* ty=Tensor[(8, 6, 7), float32] */;
    (%219, %220, %221, %222)
  };
  %223(%var_11554) /* ty=(Tensor[(7, 11, 12), float32], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32]) */
}

def @func_20083() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  @func_20081() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_1519() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %224 = @func_868() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %225 = @func_1413() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %226 = %224.0;
  %227 = %225.0;
  %228 = @func_1045() /* ty=Tensor[(8, 6, 7), float64] */;
  (%226, %227, %228)
}

def @func_3635(%var_3633: Tensor[(1650), float32]) -> (Tensor[(8, 6, 7), float64], Tensor[(10, 11, 15), float32], Tensor[(1650), float32]) {
  @func_3632(%var_3633) /* ty=(Tensor[(8, 6, 7), float64], Tensor[(10, 11, 15), float32], Tensor[(1650), float32]) */
}

def @func_20196() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %229 = @func_16775() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), float64]) */;
  %230 = %229.0;
  %231 = @func_14287() /* ty=Tensor[(8, 6, 7), float64] */;
  (%230, %231)
}

def @func_7314() -> (Tensor[(8, 6, 7), float64],) {
  %234 = fn () -> (Tensor[(8, 6, 7), float64],) {
    %232 = @func_4698() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %233 = %232.0;
    (%233,)
  };
  %234() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_20051() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(27, 2), int32], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  @func_20049() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(27, 2), int32], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_5017() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %235 = @func_2390() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %236 = @func_4786() /* ty=(Tensor[(585), bool], Tensor[(8, 6, 7), float64]) */;
  %237 = @func_4732() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %238 = %235.0;
  %239 = %236.1;
  %240 = %237.0;
  (%238, %239, %240)
}

def @func_14770() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %241 = @func_13541() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %242 = @func_11026() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(13, 3, 15), float32], Tensor[(8, 6, 7), float64]) */;
  %243 = @func_3880() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %244 = @func_458() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %245 = %241.0;
  %246 = %242.0;
  %247 = %243.0;
  %248 = %244.0;
  (%245, %246, %247, %248)
}

def @func_1045() -> Tensor[(8, 6, 7), float64] {
  %249 = @func_502() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %249.0
}

def @func_2375() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  @func_2373() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_19057(%var_19055: Tensor[(1650), float32]) -> (Tensor[(1650), bool],) {
  @func_19054(%var_19055) /* ty=(Tensor[(1650), bool],) */
}

def @func_10930() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %253 = fn () -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
    %250 = @func_4658() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %251 = %250.2;
    %252 = @func_2799() /* ty=Tensor[(8, 6, 7), float64] */;
    (%251, %252)
  };
  %253() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_4967() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %258 = fn () -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
    %254 = @func_3093() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %255 = @func_4340() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %256 = %254.0;
    %257 = %255.0;
    (%256, %257)
  };
  %258() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_15442() -> Tensor[(8, 6, 7), float64] {
  @func_15440() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_18339(%var_18338: Tensor[(9, 16, 10), float32]) -> (Tensor[(9, 16, 10), float32],) {
  %261 = fn (%var_18333: Tensor[(9, 16, 10), float32]) -> (Tensor[(9, 16, 10), float32],) {
    %259 = cast(%var_18333, dtype="float32") /* ty=Tensor[(9, 16, 10), float32] */;
    %260 = asinh(%259) /* ty=Tensor[(9, 16, 10), float32] */;
    (%260,)
  };
  %261(%var_18338) /* ty=(Tensor[(9, 16, 10), float32],) */
}

def @func_15158() -> (Tensor[(8, 6, 7), float64],) {
  %262 = @func_7595() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32]) */;
  %263 = %262.0;
  (%263,)
}

def @func_7076() -> (Tensor[(8, 6, 7), float64],) {
  @func_7074() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_8713() -> (Tensor[(8, 6, 7), float64],) {
  %264 = @func_4560() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %265 = %264.0;
  (%265,)
}

def @func_3632(%var_3628: Tensor[(1650), float32]) -> (Tensor[(8, 6, 7), float64], Tensor[(10, 11, 15), float32], Tensor[(1650), float32]) {
  %266 = @func_1013() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %267 = cast(%var_3628, dtype="float32") /* ty=Tensor[(1650), float32] */;
  %268 = reshape(%267, newshape=[10, 11, 15]) /* ty=Tensor[(10, 11, 15), float32] */;
  %269 = @func_885(%268) /* ty=(Tensor[(10, 11, 15), float32],) */;
  %270 = %266.0;
  %271 = %269.0;
  (%270, %271, %var_3628)
}

def @func_11085() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %272 = @func_1013() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %273 = @func_7292() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %274 = %272.0;
  %275 = %273.0;
  (%274, %275)
}

def @func_19029() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %279 = fn () -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
    %276 = @func_9950() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %277 = %276.0;
    %278 = @func_17867() /* ty=Tensor[(8, 6, 7), float64] */;
    (%277, %278)
  };
  %279() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_2800() -> Tensor[(8, 6, 7), float64] {
  %280 = fn () -> Tensor[(8, 6, 7), float64] {
    @func_1311() /* ty=Tensor[(8, 6, 7), float64] */
  };
  %280() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_6144() -> (Tensor[(8, 6, 7), float64],) {
  %281 = @func_3709() /* ty=Tensor[(8, 6, 7), float64] */;
  (%281,)
}

def @func_12986() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  @func_12984() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_8878() -> (Tensor[(8, 6, 7), float64],) {
  %282 = @func_7193() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %283 = %282.0;
  (%283,)
}

def @func_16535() -> (Tensor[(8, 6, 7), float64],) {
  %286 = fn () -> (Tensor[(8, 6, 7), float64],) {
    %284 = @func_13457() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %285 = %284.0;
    (%285,)
  };
  %286() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_12371() -> (Tensor[(8, 6, 7), float64], Tensor[(110, 15), float32]) {
  %287 = @func_5844() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %288 = @func_9796() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(585), bool], Tensor[(585), float64], Tensor[(8, 6, 7), float64], Tensor[(110, 15), float32]) */;
  %289 = %288.4;
  %290 = cast(%289, dtype="float32") /* ty=Tensor[(110, 15), float32] */;
  %291 = %287.0;
  %292 = log2(%290) /* ty=Tensor[(110, 15), float32] */;
  (%291, %292)
}

def @func_9926() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), bool]) {
  @func_9924() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), bool]) */
}

def @func_19142() -> Tensor[(8, 6, 7), float64] {
  %294 = fn () -> Tensor[(8, 6, 7), float64] {
    %293 = @func_8333() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %293.0
  };
  %294() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_19691() -> (Tensor[(13, 2, 11), float32], Tensor[(8, 6, 7), float64]) {
  @func_19689() /* ty=(Tensor[(13, 2, 11), float32], Tensor[(8, 6, 7), float64]) */
}

def @func_4733() -> (Tensor[(8, 6, 7), float64],) {
  %297 = fn () -> (Tensor[(8, 6, 7), float64],) {
    %295 = @func_2683() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %296 = %295.0;
    (%296,)
  };
  %297() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_19908(%var_19860: Tensor[(4, 2, 11), float32], %var_19861: Tensor[(4, 2, 11), float32]) -> (Tensor[(4, 2, 11), float32], Tensor[(8, 6, 7), float64]) {
  %298 = cast(%var_19861, dtype="float32") /* ty=Tensor[(4, 2, 11), float32] */;
  %299 = shape_of(%var_19860, dtype="int32") /* ty=Tensor[(3), int32] */;
  %300 = cast(%var_19860, dtype="float32") /* ty=Tensor[(4, 2, 11), float32] */;
  %301 = dyn.reshape(%298, %299, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %302 = @func_9476() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %303 = floor_divide(%300, %301) /* ty=Tensor[(4, 2, 11), float32] */;
  %304 = %302.0;
  (%303, %304)
}

def @func_10272() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  @func_10270() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_9477() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %309 = fn () -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
    %305 = @func_7100() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %306 = @func_8008() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %307 = %305.0;
    %308 = %306.0;
    (%307, %308)
  };
  %309() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_10106() -> (Tensor[(8, 6, 7), float64],) {
  @func_10104() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_13208() -> Tensor[(8, 6, 7), float64] {
  %310 = @func_12519() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %310.0
}

def @func_17010() -> (Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), float64]) {
  %314 = fn () -> (Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), float64]) {
    %311 = @func_13339() /* ty=(Tensor[(8, 6, 7), float32],) */;
    %312 = %311.0;
    %313 = @func_1959() /* ty=Tensor[(8, 6, 7), float64] */;
    (%312, %313)
  };
  %314() /* ty=(Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), float64]) */
}

def @func_12038() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32]) {
  @func_12036() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32]) */
}

def @func_7597() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32]) {
  @func_7595() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32]) */
}

def @func_6266() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %315 = @func_3847() /* ty=Tensor[(8, 6, 7), float64] */;
  %316 = @func_3847() /* ty=Tensor[(8, 6, 7), float64] */;
  (%315, %316)
}

def @func_8496() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %317 = @func_3274() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %318 = @func_4698() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %319 = %317.0;
  %320 = %318.1;
  (%319, %320)
}

def @func_4826() -> (Tensor[(8, 6, 7), float64],) {
  %323 = fn () -> (Tensor[(8, 6, 7), float64],) {
    %321 = @func_2683() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %322 = %321.1;
    (%322,)
  };
  %323() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_9289(%var_9265: Tensor[(8, 6, 7), float64]) -> (Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), float64]) {
  %324 = @func_7683() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %325 = %324.0;
  %326 = cast(%var_9265, dtype="float32") /* ty=Tensor[(8, 6, 7), float32] */;
  %327 = shape_of(%325, dtype="int32") /* ty=Tensor[(3), int32] */;
  %328 = cast(%325, dtype="float32") /* ty=Tensor[(8, 6, 7), float32] */;
  %329 = dyn.reshape(%326, %327, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %330 = @func_1232() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %331 = maximum(%328, %329) /* ty=Tensor[(8, 6, 7), float32] */;
  %332 = %330.0;
  (%331, %332)
}

def @func_13459() -> (Tensor[(8, 6, 7), float64],) {
  @func_13457() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_20081() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %333 = @func_14888() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %334 = @func_6464() /* ty=Tensor[(8, 6, 7), float64] */;
  %335 = %333.0;
  (%334, %335)
}

def @func_1960() -> Tensor[(8, 6, 7), float64] {
  %337 = fn () -> Tensor[(8, 6, 7), float64] {
    %336 = @func_1932() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %336.0
  };
  %337() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_3896() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %338 = @func_1519() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %339 = @func_735() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %340 = %338.0;
  %341 = %339.0;
  (%340, %341)
}

def @func_6709() -> Tensor[(8, 6, 7), float64] {
  %342 = @func_968() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %342.0
}

def @func_9758() -> Tensor[(8, 6, 7), float64] {
  %343 = @func_4786() /* ty=(Tensor[(585), bool], Tensor[(8, 6, 7), float64]) */;
  %343.1
}

def @func_15821() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), float64]) {
  %350 = fn () -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), float64]) {
    %344 = @func_2988() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %345 = @func_11085() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %346 = %344.0;
    %347 = %345.1;
    %348 = @func_8783() /* ty=Tensor[(8, 6, 7), float32] */;
    %349 = @func_12429() /* ty=Tensor[(8, 6, 7), float64] */;
    (%346, %347, %348, %349)
  };
  %350() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), float64]) */
}

def @func_15370() -> (Tensor[(8, 6, 7), float64], Tensor[(7, 12, 10), float32], Tensor[(840, 1), float32], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32]) {
  %358 = fn () -> (Tensor[(8, 6, 7), float64], Tensor[(7, 12, 10), float32], Tensor[(840, 1), float32], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32]) {
    %351 = @func_2988() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %352 = cast(meta[relay.Constant][6] /* ty=Tensor[(840, 1), float32] */, dtype="float32") /* ty=Tensor[(840, 1), float32] */;
    %353 = reshape(%352, newshape=[7, 12, 10]) /* ty=Tensor[(7, 12, 10), float32] */;
    %354 = %351.2;
    %355 = @func_13073(%353) /* ty=Tensor[(7, 12, 10), float32] */;
    %356 = @func_1627() /* ty=Tensor[(8, 6, 7), float64] */;
    %357 = @func_7051() /* ty=Tensor[(8, 6, 7), float32] */;
    (%354, %355, meta[relay.Constant][6] /* ty=Tensor[(840, 1), float32] */, %356, %357)
  };
  %358() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(7, 12, 10), float32], Tensor[(840, 1), float32], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32]) */
}

def @func_1234() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  @func_1232() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_12520() -> (Tensor[(8, 6, 7), float64],) {
  %361 = fn () -> (Tensor[(8, 6, 7), float64],) {
    %359 = @func_2683() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %360 = %359.1;
    (%360,)
  };
  %361() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_17326() -> Tensor[(8, 6, 7), float64] {
  %363 = fn () -> Tensor[(8, 6, 7), float64] {
    %362 = @func_10418() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %362.1
  };
  %363() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_17996() -> Tensor[(8, 6, 7), float64] {
  @func_1045() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_1628() -> Tensor[(8, 6, 7), float64] {
  %367 = fn () -> Tensor[(8, 6, 7), float64] {
    %364 = @func_1413() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %365 = %364.0;
    %366 = cast(%365, dtype="float64") /* ty=Tensor[(8, 6, 7), float64] */;
    rsqrt(%366) /* ty=Tensor[(8, 6, 7), float64] */
  };
  %367() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_2990() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  @func_2988() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_14888() -> (Tensor[(8, 6, 7), float64],) {
  %368 = @func_13208() /* ty=Tensor[(8, 6, 7), float64] */;
  (%368,)
}

def @func_10054() -> Tensor[(8, 6, 7), float64] {
  %370 = fn () -> Tensor[(8, 6, 7), float64] {
    %369 = @func_5289() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %369.0
  };
  %370() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_15108(%var_15107: Tensor[(54), int32]) -> (Tensor[(8, 6, 7), float64], Tensor[(54), int32], Tensor[(8, 6, 7), float64], Tensor[(3, 9, 5), float32]) {
  %386 = fn (%var_15089: Tensor[(54), int32]) -> (Tensor[(8, 6, 7), float64], Tensor[(54), int32], Tensor[(8, 6, 7), float64], Tensor[(3, 9, 5), float32]) {
    %371 = cast(%var_15089, dtype="int32") /* ty=Tensor[(54), int32] */;
    %372 = reshape(%371, newshape=[54]) /* ty=Tensor[(54), int32] */;
    %373 = @func_6869(%372) /* ty=(Tensor[(7, 11, 7), float32], Tensor[(9, 3, 2), int32], Tensor[(54), int32], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(1650), float32], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %374 = @func_7193() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %375 = cast(meta[relay.Constant][7] /* ty=Tensor[(3, 9, 5), float64] */, dtype="float64") /* ty=Tensor[(3, 9, 5), float64] */;
    %376 = sqrt(%375) /* ty=Tensor[(3, 9, 5), float64] */;
    %377 = cast(meta[relay.Constant][7] /* ty=Tensor[(3, 9, 5), float64] */, dtype="float64") /* ty=Tensor[(3, 9, 5), float64] */;
    %378 = log(%377) /* ty=Tensor[(3, 9, 5), float64] */;
    %379 = cast(%378, dtype="float32") /* ty=Tensor[(3, 9, 5), float32] */;
    %380 = shape_of(%376, dtype="int32") /* ty=Tensor[(3), int32] */;
    %381 = cast(%376, dtype="float32") /* ty=Tensor[(3, 9, 5), float32] */;
    %382 = dyn.reshape(%379, %380, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %383 = %373.6;
    %384 = %374.0;
    %385 = mod(%381, %382) /* ty=Tensor[(3, 9, 5), float32] */;
    (%383, %var_15089, %384, %385)
  };
  %386(%var_15107) /* ty=(Tensor[(8, 6, 7), float64], Tensor[(54), int32], Tensor[(8, 6, 7), float64], Tensor[(3, 9, 5), float32]) */
}

def @func_11885() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %387 = @func_10929() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %388 = @func_7864() /* ty=Tensor[(8, 6, 7), float64] */;
  %389 = %387.1;
  %390 = @func_1045() /* ty=Tensor[(8, 6, 7), float64] */;
  (%388, %389, %390)
}

def @func_20115(%var_20111: Tensor[(6, 1), int64]) -> (Tensor[(6, 1), int64],) {
  %391 = cast(-9 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %392 = cast(%var_20111, dtype="int64") /* ty=Tensor[(6, 1), int64] */;
  %393 = bitwise_xor(%391, %392) /* ty=Tensor[(6, 1), int64] */;
  (%393,)
}

def @func_14890() -> (Tensor[(8, 6, 7), float64],) {
  @func_14888() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_1413() -> (Tensor[(8, 6, 7), float64],) {
  %394 = @func_502() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %395 = %394.0;
  %396 = cast(%395, dtype="float64") /* ty=Tensor[(8, 6, 7), float64] */;
  %397 = acosh(%396) /* ty=Tensor[(8, 6, 7), float64] */;
  (%397,)
}

def @func_17266() -> (Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), float64]) {
  %398 = @func_10889() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %399 = @func_15682() /* ty=Tensor[(8, 6, 7), float32] */;
  %400 = %398.0;
  (%399, %400)
}

def @func_13309() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(20), float64], Tensor[(8, 6, 7), float64]) {
  %408 = fn () -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(20), float64], Tensor[(8, 6, 7), float64]) {
    %401 = cast(meta[relay.Constant][8] /* ty=Tensor[(20), float64] */, dtype="float64") /* ty=Tensor[(20), float64] */;
    %402 = reshape(%401, newshape=[2, 2, 5]) /* ty=Tensor[(2, 2, 5), float64] */;
    %403 = @func_5923(%402) /* ty=(Tensor[(2, 2, 5), float64], Tensor[(8, 6, 7), float64]) */;
    %404 = @func_12371() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(110, 15), float32]) */;
    %405 = @func_11047() /* ty=Tensor[(8, 6, 7), float64] */;
    %406 = %403.1;
    %407 = %404.0;
    (%405, %406, meta[relay.Constant][8] /* ty=Tensor[(20), float64] */, %407)
  };
  %408() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(20), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_20643(%var_20641: Tensor[(10, 7, 4), int32], %var_20642: Tensor[(10, 7, 4), int32]) -> (Tensor[(10, 7, 4), int32], Tensor[(10, 7, 4), float64]) {
  @func_20639(%var_20641, %var_20642) /* ty=(Tensor[(10, 7, 4), int32], Tensor[(10, 7, 4), float64]) */
}

def @func_8913() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %409 = @func_3316() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), bool]) */;
  %410 = @func_5986() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %411 = %409.0;
  %412 = %410.0;
  %413 = @func_6464() /* ty=Tensor[(8, 6, 7), float64] */;
  (%411, %412, %413)
}

def @func_7905() -> Tensor[(8, 6, 7), float64] {
  %414 = fn () -> Tensor[(8, 6, 7), float64] {
    @func_7371() /* ty=Tensor[(8, 6, 7), float64] */
  };
  %414() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_10126() -> Tensor[(8, 6, 7), float64] {
  @func_6464() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_17998() -> Tensor[(8, 6, 7), float64] {
  @func_17996() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_2483() -> (Tensor[(8, 6, 7), float64],) {
  @func_2481() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_10270() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %415 = @func_7025() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %416 = @func_6981() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %417 = %415.0;
  %418 = %416.1;
  (%417, %418)
}

def @func_6647() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %428 = fn () -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
    %419 = @func_6058() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %420 = @func_5289() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %421 = @func_4560() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %422 = @func_6058() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %423 = %419.0;
    %424 = @func_2860() /* ty=Tensor[(8, 6, 7), float64] */;
    %425 = %420.0;
    %426 = %421.1;
    %427 = %422.0;
    (%423, %424, %425, %426, %427)
  };
  %428() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_870() -> (Tensor[(8, 6, 7), float64],) {
  @func_868() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_10334() -> (Tensor[(8, 6, 7), float64],) {
  @func_10332() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_698(%var_696: Tensor[(8, 6, 7), float32]) -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), uint32], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  @func_695(%var_696) /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), uint32], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_18544() -> (Tensor[(8, 6, 7), float32], Tensor[(224), float64], Tensor[(1568), float64], Tensor[(8, 6, 7), float64]) {
  %437 = fn () -> (Tensor[(8, 6, 7), float32], Tensor[(224), float64], Tensor[(1568), float64], Tensor[(8, 6, 7), float64]) {
    %429 = @func_17266() /* ty=(Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), float64]) */;
    %430 = cast(meta[relay.Constant][9] /* ty=Tensor[(1568), float64] */, dtype="float64") /* ty=Tensor[(1568), float64] */;
    %431 = reshape(%430, newshape=[1568]) /* ty=Tensor[(1568), float64] */;
    %432 = @func_16191(%431) /* ty=(Tensor[(8, 6, 7), float64], Tensor[(14, ?, 16), int64], Tensor[(224), float64], Tensor[(1568), float64]) */;
    %433 = @func_14217() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %434 = %429.0;
    %435 = %432.2;
    %436 = %433.0;
    (%434, %435, meta[relay.Constant][9] /* ty=Tensor[(1568), float64] */, %436)
  };
  %437() /* ty=(Tensor[(8, 6, 7), float32], Tensor[(224), float64], Tensor[(1568), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_11191() -> (Tensor[(8, 6, 7), float64],) {
  %440 = fn () -> (Tensor[(8, 6, 7), float64],) {
    %438 = @func_735() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %439 = %438.0;
    (%439,)
  };
  %440() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_9323() -> (Tensor[(13, 3, 15), float32],) {
  %443 = fn () -> (Tensor[(13, 3, 15), float32],) {
    %441 = @func_3825() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(13, 3, 15), float32], Tensor[(585), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %442 = %441.4;
    (%442,)
  };
  %443() /* ty=(Tensor[(13, 3, 15), float32],) */
}

def @func_1232() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %444 = @func_1013() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %445 = @func_1033() /* ty=Tensor[(8, 6, 7), float64] */;
  %446 = %444.0;
  (%445, %446)
}

def @func_19582() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  @func_19580() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_10547() -> Tensor[(8, 6, 7), float64] {
  %447 = fn () -> Tensor[(8, 6, 7), float64] {
    @func_7935() /* ty=Tensor[(8, 6, 7), float64] */
  };
  %447() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_13543() -> (Tensor[(8, 6, 7), float64],) {
  @func_13541() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_10722() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %448 = @func_2539() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %449 = @func_4698() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %450 = %448.0;
  %451 = %449.1;
  (%450, %451)
}

def @func_20639(%var_20607: Tensor[(10, 7, 4), int32], %var_20608: Tensor[(10, 7, 4), int32]) -> (Tensor[(10, 7, 4), int32], Tensor[(10, 7, 4), float64]) {
  %452 = cast(%var_20608, dtype="int32") /* ty=Tensor[(10, 7, 4), int32] */;
  %453 = shape_of(%var_20607, dtype="int32") /* ty=Tensor[(3), int32] */;
  %454 = cast(%var_20607, dtype="int32") /* ty=Tensor[(10, 7, 4), int32] */;
  %455 = dyn.reshape(%452, %453, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %456 = cast(%var_20608, dtype="float64") /* ty=Tensor[(10, 7, 4), float64] */;
  %457 = bitwise_xor(%454, %455) /* ty=Tensor[(10, 7, 4), int32] */;
  %458 = cos(%456) /* ty=Tensor[(10, 7, 4), float64] */;
  (%457, %458)
}

def @func_17572() -> (Tensor[(110, 15), float32], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %465 = fn () -> (Tensor[(110, 15), float32], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
    %459 = @func_9796() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(585), bool], Tensor[(585), float64], Tensor[(8, 6, 7), float64], Tensor[(110, 15), float32]) */;
    %460 = @func_3146() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %461 = @func_7581() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), float64]) */;
    %462 = %459.4;
    %463 = %460.1;
    %464 = %461.0;
    (%462, %463, %464)
  };
  %465() /* ty=(Tensor[(110, 15), float32], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_3274() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %466 = @func_1519() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %467 = @func_2539() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %468 = %466.0;
  %469 = @func_1033() /* ty=Tensor[(8, 6, 7), float64] */;
  %470 = %467.0;
  (%468, %469, %470)
}

def @func_16669() -> (Tensor[(10, 11, 15), float32],) {
  @func_16667() /* ty=(Tensor[(10, 11, 15), float32],) */
}

def @func_20118(%var_20116: Tensor[(6, 1), int64]) -> (Tensor[(6, 1), int64],) {
  @func_20115(%var_20116) /* ty=(Tensor[(6, 1), int64],) */
}

def @func_14915() -> Tensor[(8, 6, 7), float64] {
  %471 = @func_13572() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %471.0
}

def @func_17867() -> Tensor[(8, 6, 7), float64] {
  %472 = @func_13457() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %472.0
}

def @func_8038() -> Tensor[(8, 6, 7), float64] {
  @func_8036() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_9796() -> (Tensor[(8, 6, 7), float64], Tensor[(585), bool], Tensor[(585), float64], Tensor[(8, 6, 7), float64], Tensor[(110, 15), float32]) {
  %473 = @func_4516() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %474 = cast(meta[relay.Constant][10] /* ty=Tensor[(585), float64] */, dtype="float64") /* ty=Tensor[(585), float64] */;
  %475 = reshape(%474, newshape=[585]) /* ty=Tensor[(585), float64] */;
  %476 = @func_4873(%475) /* ty=(Tensor[(585), bool], Tensor[(585), float64], Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64]) */;
  %477 = cast(meta[relay.Constant][11] /* ty=Tensor[(110, 15), float32] */, dtype="float32") /* ty=Tensor[(110, 15), float32] */;
  %478 = cast(meta[relay.Constant][11] /* ty=Tensor[(110, 15), float32] */, dtype="float32") /* ty=Tensor[(110, 15), float32] */;
  %479 = reshape(%477, newshape=[1650]) /* ty=Tensor[(1650), float32] */;
  %480 = reshape(%478, newshape=[1650]) /* ty=Tensor[(1650), float32] */;
  %481 = @func_3363(%479, %480) /* ty=(Tensor[(8, 6, 7), float64], Tensor[(10, 11, 15), float32], Tensor[(8, 6, 7), float64], Tensor[(1650), int64], Tensor[(1650), float64]) */;
  %482 = %473.5;
  %483 = %476.0;
  %484 = %481.2;
  (%482, %483, meta[relay.Constant][10] /* ty=Tensor[(585), float64] */, %484, meta[relay.Constant][11] /* ty=Tensor[(110, 15), float32] */)
}

def @func_15160() -> (Tensor[(8, 6, 7), float64],) {
  @func_15158() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_10846() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %485 = @func_9739() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %486 = @func_9924() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), bool]) */;
  %487 = @func_3709() /* ty=Tensor[(8, 6, 7), float64] */;
  %488 = %485.1;
  %489 = %486.0;
  %490 = @func_7864() /* ty=Tensor[(8, 6, 7), float64] */;
  (%487, %488, %489, %490)
}

def @func_4562() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  @func_4560() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_14218() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %494 = fn () -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
    %491 = @func_10418() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %492 = %491.2;
    %493 = @func_6464() /* ty=Tensor[(8, 6, 7), float64] */;
    (%492, %493)
  };
  %494() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_16193(%var_16192: Tensor[(1568), float64]) -> (Tensor[(8, 6, 7), float64], Tensor[(14, ?, 16), int64], Tensor[(224), float64], Tensor[(1568), float64]) {
  %502 = fn (%var_16181: Tensor[(1568), float64]) -> (Tensor[(8, 6, 7), float64], Tensor[(14, ?, 16), int64], Tensor[(224), float64], Tensor[(1568), float64]) {
    %495 = cast(meta[relay.Constant][12] /* ty=Tensor[(224), float64] */, dtype="float64") /* ty=Tensor[(224), float64] */;
    %496 = cast(%var_16181, dtype="float64") /* ty=Tensor[(1568), float64] */;
    %497 = reshape(%495, newshape=[14, 1, 16]) /* ty=Tensor[(14, 1, 16), float64] */;
    %498 = reshape(%496, newshape=[14, 7, 16]) /* ty=Tensor[(14, 7, 16), float64] */;
    %499 = @func_7497(%497, %498) /* ty=(Tensor[(8, 6, 7), float64], Tensor[(14, 7, 16), int32], Tensor[(8, 6, 7), float64], Tensor[(14, ?, 16), int32], Tensor[(14, ?, 16), int64]) */;
    %500 = @func_7904() /* ty=Tensor[(8, 6, 7), float64] */;
    %501 = %499.4;
    (%500, %501, meta[relay.Constant][12] /* ty=Tensor[(224), float64] */, %var_16181)
  };
  %502(%var_16192) /* ty=(Tensor[(8, 6, 7), float64], Tensor[(14, ?, 16), int64], Tensor[(224), float64], Tensor[(1568), float64]) */
}

def @func_14437() -> Tensor[(8, 6, 7), float64] {
  %504 = fn () -> Tensor[(8, 6, 7), float64] {
    %503 = @func_5765() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %503.1
  };
  %504() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_18030() -> (Tensor[(16, 10, 9), float64], Tensor[(8, 6, 7), float64]) {
  %505 = cast(meta[relay.Constant][13] /* ty=Tensor[(16, 10, 9), float64] */, dtype="float64") /* ty=Tensor[(16, 10, 9), float64] */;
  %506 = rsqrt(%505) /* ty=Tensor[(16, 10, 9), float64] */;
  %507 = @func_9169() /* ty=Tensor[(8, 6, 7), float64] */;
  (%506, %507)
}

def @func_15644() -> Tensor[(8, 6, 7), float64] {
  @func_6315() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_20375() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %513 = fn () -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
    %508 = @func_2988() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %509 = @func_12076() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %510 = %508.2;
    %511 = %509.0;
    %512 = @func_15714() /* ty=Tensor[(8, 6, 7), float64] */;
    (%510, %511, %512)
  };
  %513() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_13210() -> Tensor[(8, 6, 7), float64] {
  @func_13208() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_5145(%var_5144: Tensor[(10, 1, 16), float64]) -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(3, 3, 3), uint32], Tensor[(27), float64], Tensor[(10, ?, 16), float32], Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64]) {
  %535 = fn (%var_5072: Tensor[(10, 1, 16), float64]) -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(3, 3, 3), uint32], Tensor[(27), float64], Tensor[(10, ?, 16), float32], Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64]) {
    %514 = @func_2084() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %515 = @func_2373() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %516 = @func_4560() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %517 = cast(meta[relay.Constant][14] /* ty=Tensor[(27), float64] */, dtype="float64") /* ty=Tensor[(27), float64] */;
    %518 = reshape(%517, newshape=[3, 3, 3]) /* ty=Tensor[(3, 3, 3), float64] */;
    %519 = @func_3554(%518) /* ty=(Tensor[(3, 3, 3), uint32],) */;
    %520 = cast(%var_5072, dtype="float64") /* ty=Tensor[(10, 1, 16), float64] */;
    %521 = log2(%520) /* ty=Tensor[(10, 1, 16), float64] */;
    %522 = cast(%var_5072, dtype="float32") /* ty=Tensor[(10, 1, 16), float32] */;
    %523 = shape_of(%521, dtype="int32") /* ty=Tensor[(3), int32] */;
    %524 = cast(%521, dtype="float32") /* ty=Tensor[(10, 1, 16), float32] */;
    %525 = dyn.reshape(%522, %523, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %526 = @func_4172() /* ty=(Tensor[(8, 6, 7), bool], Tensor[(1650), float32], Tensor[(8, 6, 7), float64], Tensor[(1650), float64]) */;
    %527 = @func_4825() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %528 = %514.0;
    %529 = %515.1;
    %530 = %516.0;
    %531 = %519.0;
    %532 = power(%524, %525) /* ty=Tensor[(10, ?, 16), float32] */;
    %533 = %526.0;
    %534 = %527.0;
    (%528, %529, %530, %531, meta[relay.Constant][14] /* ty=Tensor[(27), float64] */, %532, %533, %534)
  };
  %535(%var_5144) /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(3, 3, 3), uint32], Tensor[(27), float64], Tensor[(10, ?, 16), float32], Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64]) */
}

def @func_7551(%var_7549: Tensor[(6, 10, 6), uint16]) -> (Tensor[(6, 10, 6), bool], Tensor[(8, 6, 7), float64]) {
  @func_7548(%var_7549) /* ty=(Tensor[(6, 10, 6), bool], Tensor[(8, 6, 7), float64]) */
}

def @func_11807() -> Tensor[(8, 6, 7), float64] {
  @func_11805() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_12637(%var_12631: Tensor[(20), float64]) -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(2, 2, 5), float64], Tensor[(20), float64]) {
  %536 = @func_1519() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %537 = cast(%var_12631, dtype="float64") /* ty=Tensor[(20), float64] */;
  %538 = reshape(%537, newshape=[2, 2, 5]) /* ty=Tensor[(2, 2, 5), float64] */;
  %539 = @func_5923(%538) /* ty=(Tensor[(2, 2, 5), float64], Tensor[(8, 6, 7), float64]) */;
  %540 = %536.0;
  %541 = @func_7935() /* ty=Tensor[(8, 6, 7), float64] */;
  %542 = %539.0;
  (%540, %541, %542, %var_12631)
}

def @func_7027() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  @func_7025() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_8785() -> Tensor[(8, 6, 7), float32] {
  @func_8783() /* ty=Tensor[(8, 6, 7), float32] */
}

def @func_8880() -> (Tensor[(8, 6, 7), float64],) {
  @func_8878() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_12076() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %543 = @func_2988() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %544 = %543.0;
  %545 = @func_10126() /* ty=Tensor[(8, 6, 7), float64] */;
  %546 = @func_6315() /* ty=Tensor[(8, 6, 7), float64] */;
  (%544, %545, %546)
}

def @func_20552() -> Tensor[(8, 6, 7), float64] {
  %548 = fn () -> Tensor[(8, 6, 7), float64] {
    %547 = @func_9739() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %547.0
  };
  %548() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_13457() -> (Tensor[(8, 6, 7), float64],) {
  %549 = @func_10270() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %550 = %549.1;
  (%550,)
}

def @func_12863(%var_12848: Tensor[(585), float64]) -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(585), float64], Tensor[(585), float64]) {
  %551 = @func_8913() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %552 = @func_6495() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %553 = cast(%var_12848, dtype="float64") /* ty=Tensor[(585), float64] */;
  %554 = reshape(%553, newshape=[585]) /* ty=Tensor[(585), float64] */;
  %555 = @func_11650(%554) /* ty=(Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(585), float64], Tensor[(585), float64]) */;
  %556 = %551.0;
  %557 = %552.2;
  %558 = %555.3;
  (%556, %557, %558, %var_12848)
}

def @func_9924() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), bool]) {
  %559 = @func_6666() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %560 = @func_9118() /* ty=(Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %561 = %559.1;
  %562 = %560.0;
  (%561, %562)
}

def @func_16511() -> (Tensor[(8, 6, 7), float32], Tensor[(10, 6, 6), int32], Tensor[(60), float64], Tensor[(360), float64]) {
  %563 = @func_1877() /* ty=(Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), float64]) */;
  %564 = cast(meta[relay.Constant][15] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %565 = cast(meta[relay.Constant][16] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %566 = reshape(%564, newshape=[10, 1, 6]) /* ty=Tensor[(10, 1, 6), float64] */;
  %567 = reshape(%565, newshape=[10, 6, 6]) /* ty=Tensor[(10, 6, 6), float64] */;
  %568 = %563.0;
  %569 = @func_9874(%566, %567) /* ty=Tensor[(10, 6, 6), int32] */;
  (%568, %569, meta[relay.Constant][15] /* ty=Tensor[(60), float64] */, meta[relay.Constant][16] /* ty=Tensor[(360), float64] */)
}

def @func_2683() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %570 = @func_458() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %571 = @func_968() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %572 = %570.0;
  %573 = @func_1045() /* ty=Tensor[(8, 6, 7), float64] */;
  %574 = %571.0;
  (%572, %573, %574)
}

def @func_7581() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), float64]) {
  %575 = @func_4825() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %576 = @func_7193() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %577 = %576.0;
  %578 = cast(%577, dtype="float32") /* ty=Tensor[(8, 6, 7), float32] */;
  %579 = @func_1519() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %580 = %575.0;
  %581 = cos(%578) /* ty=Tensor[(8, 6, 7), float32] */;
  %582 = %579.2;
  (%580, %581, %582)
}

def @func_15683() -> Tensor[(8, 6, 7), float32] {
  %584 = fn () -> Tensor[(8, 6, 7), float32] {
    %583 = @func_9945() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32]) */;
    %583.1
  };
  %584() /* ty=Tensor[(8, 6, 7), float32] */
}

def @func_18620() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %589 = fn () -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
    %585 = @func_10160() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %586 = @func_12021() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %587 = %585.0;
    %588 = %586.0;
    (%587, %588)
  };
  %589() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_19321() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %594 = fn () -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
    %590 = @func_18179() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %591 = %590.0;
    %592 = @func_10053() /* ty=Tensor[(8, 6, 7), float64] */;
    %593 = @func_15714() /* ty=Tensor[(8, 6, 7), float64] */;
    (%591, %592, %593)
  };
  %594() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_1311() -> Tensor[(8, 6, 7), float64] {
  %595 = @func_1248() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %595.0
}

def @func_3412() -> Tensor[(8, 6, 7), float64] {
  %596 = @func_3274() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %596.1
}

def @main(%var_20721: Tensor[(10, 8, 15), uint64], %var_20722: Tensor[(10, 8, 15), uint64]) -> (Tensor[(10, 8, 15), bool], Tensor[(10, 8, 15), bool]) {
  %597 = cast(%var_20722, dtype="bool") /* ty=Tensor[(10, 8, 15), bool] */;
  %598 = shape_of(%var_20721, dtype="int32") /* ty=Tensor[(3), int32] */;
  %599 = cast(%var_20721, dtype="bool") /* ty=Tensor[(10, 8, 15), bool] */;
  %600 = dyn.reshape(%597, %598, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %601 = cast(meta[relay.Constant][17] /* ty=Tensor[(10, 8, 15), uint64] */, dtype="bool") /* ty=Tensor[(10, 8, 15), bool] */;
  %602 = shape_of(%var_20722, dtype="int32") /* ty=Tensor[(3), int32] */;
  %603 = cast(%var_20722, dtype="bool") /* ty=Tensor[(10, 8, 15), bool] */;
  %604 = dyn.reshape(%601, %602, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %605 = less_equal(%599, %600) /* ty=Tensor[(10, 8, 15), bool] */;
  %606 = greater(%603, %604) /* ty=Tensor[(10, 8, 15), bool] */;
  (%605, %606)
}

def @func_18981() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %607 = @func_4658() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %608 = @func_2390() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %609 = %607.2;
  %610 = @func_1790() /* ty=Tensor[(8, 6, 7), float64] */;
  %611 = %608.0;
  (%609, %610, %611)
}

def @func_19717() -> (Tensor[(8, 6, 7), float64],) {
  %613 = fn () -> (Tensor[(8, 6, 7), float64],) {
    %612 = @func_3580() /* ty=Tensor[(8, 6, 7), float64] */;
    (%612,)
  };
  %613() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_6268() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  @func_6266() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_15894() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %614 = @func_10001() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %615 = @func_12299() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %616 = %614.1;
  %617 = %615.0;
  (%616, %617)
}

def @func_8728() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %618 = @func_7864() /* ty=Tensor[(8, 6, 7), float64] */;
  %619 = @func_6315() /* ty=Tensor[(8, 6, 7), float64] */;
  (%618, %619)
}

def @func_13876() -> (Tensor[(8, 6, 7), float64],) {
  @func_13874() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_8955() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %623 = fn () -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
    %620 = @func_4698() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %621 = @func_1790() /* ty=Tensor[(8, 6, 7), float64] */;
    %622 = %620.0;
    (%621, %622)
  };
  %623() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_16667() -> (Tensor[(10, 11, 15), float32],) {
  %624 = @func_10366() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(10, 11, 15), float32], Tensor[(1650), float32]) */;
  %625 = %624.2;
  (%625,)
}

def @func_10239() -> (Tensor[(8, 6, 7), float64],) {
  %628 = fn () -> (Tensor[(8, 6, 7), float64],) {
    %626 = @func_8913() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %627 = %626.0;
    (%627,)
  };
  %628() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_1143() -> (Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), bool]) {
  @func_1141() /* ty=(Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), bool]) */
}

def @func_17535() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(10, 6, 6), int32]) {
  %635 = fn () -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(10, 6, 6), int32]) {
    %629 = @func_8048() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %630 = @func_502() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %631 = @func_16511() /* ty=(Tensor[(8, 6, 7), float32], Tensor[(10, 6, 6), int32], Tensor[(60), float64], Tensor[(360), float64]) */;
    %632 = %629.0;
    %633 = %630.0;
    %634 = %631.1;
    (%632, %633, %634)
  };
  %635() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(10, 6, 6), int32]) */
}

def @func_2539() -> (Tensor[(8, 6, 7), float64],) {
  %636 = @func_968() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %637 = %636.0;
  (%637,)
}

def @func_18032() -> (Tensor[(16, 10, 9), float64], Tensor[(8, 6, 7), float64]) {
  @func_18030() /* ty=(Tensor[(16, 10, 9), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_17170() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(585), float64]) {
  @func_17168() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(585), float64]) */
}

def @func_10153() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  @func_10151() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_9182() -> Tensor[(8, 6, 7), float64] {
  %638 = fn () -> Tensor[(8, 6, 7), float64] {
    @func_4912() /* ty=Tensor[(8, 6, 7), float64] */
  };
  %638() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_7935() -> Tensor[(8, 6, 7), float64] {
  %639 = @func_1013() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %639.0
}

def @func_14967() -> (Tensor[(8, 6, 7), float64],) {
  %642 = fn () -> (Tensor[(8, 6, 7), float64],) {
    %640 = @func_2390() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %641 = %640.0;
    (%641,)
  };
  %642() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_18638() -> (Tensor[(13, 3, 15), float32], Tensor[(8, 6, 7), float64]) {
  %643 = @func_9322() /* ty=(Tensor[(13, 3, 15), float32],) */;
  %644 = @func_8713() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %645 = %643.0;
  %646 = %644.0;
  (%645, %646)
}

def @func_14872() -> Tensor[(8, 6, 7), float64] {
  %648 = fn () -> Tensor[(8, 6, 7), float64] {
    %647 = @func_3896() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %647.0
  };
  %648() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_18825() -> (Tensor[(8, 6, 7), bool],) {
  %649 = @func_9608() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), bool]) */;
  %650 = %649.1;
  (%650,)
}

def @func_9171() -> Tensor[(8, 6, 7), float64] {
  @func_9169() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_1313() -> Tensor[(8, 6, 7), float64] {
  @func_1311() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_4699() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %655 = fn () -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
    %651 = @func_2084() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %652 = @func_2988() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %653 = %651.0;
    %654 = %652.2;
    (%653, %654)
  };
  %655() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_10332() -> (Tensor[(8, 6, 7), float64],) {
  %656 = @func_10151() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %657 = %656.0;
  (%657,)
}

def @func_14109() -> (Tensor[(8, 6, 7), float64], Tensor[(585), bool], Tensor[(2, 7, 7), bool]) {
  @func_14107() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(585), bool], Tensor[(2, 7, 7), bool]) */
}

def @func_17954(%var_17952: Tensor[(4, 20), float64], %var_17953: Tensor[(4, 20), float64]) -> (Tensor[(8, 6, 7), float64], Tensor[(2, 2, 5), float64], Tensor[(4, 20), int16], Tensor[(8, 6, 7), float64], Tensor[(4, 20), bool], Tensor[(4, 20), bool], Tensor[(2, 2, 5), float64], Tensor[(8, 6, 7), float64]) {
  @func_17950(%var_17952, %var_17953) /* ty=(Tensor[(8, 6, 7), float64], Tensor[(2, 2, 5), float64], Tensor[(4, 20), int16], Tensor[(8, 6, 7), float64], Tensor[(4, 20), bool], Tensor[(4, 20), bool], Tensor[(2, 2, 5), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_11499(%var_11498: Tensor[(27, 2), int32]) -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(27, 2), float64]) {
  %674 = fn (%var_11483: Tensor[(27, 2), int32]) -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(27, 2), float64]) {
    %658 = @func_4294() /* ty=Tensor[(8, 6, 7), float64] */;
    %659 = cast(%658, dtype="float64") /* ty=Tensor[(8, 6, 7), float64] */;
    %660 = reshape(%659, newshape=[8, 6, 7]) /* ty=Tensor[(8, 6, 7), float64] */;
    %661 = @func_9289(%660) /* ty=(Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), float64]) */;
    %662 = cast(meta[relay.Constant][18] /* ty=Tensor[(27, 2), int32] */, dtype="int32") /* ty=Tensor[(27, 2), int32] */;
    %663 = reshape(%662, newshape=[54]) /* ty=Tensor[(54), int32] */;
    %664 = @func_6869(%663) /* ty=(Tensor[(7, 11, 7), float32], Tensor[(9, 3, 2), int32], Tensor[(54), int32], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(1650), float32], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %665 = @func_8954() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %666 = cast(%var_11483, dtype="float64") /* ty=Tensor[(27, 2), float64] */;
    %667 = shape_of(meta[relay.Constant][18] /* ty=Tensor[(27, 2), int32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %668 = cast(meta[relay.Constant][18] /* ty=Tensor[(27, 2), int32] */, dtype="float64") /* ty=Tensor[(27, 2), float64] */;
    %669 = dyn.reshape(%666, %667, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %670 = %661.1;
    %671 = %664.4;
    %672 = %665.0;
    %673 = divide(%668, %669) /* ty=Tensor[(27, 2), float64] */;
    (%658, %670, %671, %672, %673)
  };
  %674(%var_11498) /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(27, 2), float64]) */
}

def @func_504() -> (Tensor[(8, 6, 7), float64],) {
  @func_502() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_19643() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %677 = fn () -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
    %675 = @func_16461() /* ty=Tensor[(8, 6, 7), float64] */;
    %676 = @func_17325() /* ty=Tensor[(8, 6, 7), float64] */;
    (%675, %676)
  };
  %677() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_7839(%var_7805: Tensor[(585), float64]) -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(2, 7, 7), bool], Tensor[(98), int16], Tensor[(13, 3, 15), bool], Tensor[(2, 7, 7), bool]) {
  %678 = @func_7683() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %679 = @func_1232() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %680 = cast(meta[relay.Constant][19] /* ty=Tensor[(98), int16] */, dtype="int16") /* ty=Tensor[(98), int16] */;
  %681 = cast(meta[relay.Constant][19] /* ty=Tensor[(98), int16] */, dtype="int16") /* ty=Tensor[(98), int16] */;
  %682 = reshape(%680, newshape=[2, 7, 7]) /* ty=Tensor[(2, 7, 7), int16] */;
  %683 = reshape(%681, newshape=[2, 7, 7]) /* ty=Tensor[(2, 7, 7), int16] */;
  %684 = @func_852(%682, %683) /* ty=(Tensor[(8, 6, 7), float64], Tensor[(2, 7, 7), bool], Tensor[(2, 7, 7), float32]) */;
  %685 = cast(%var_7805, dtype="float64") /* ty=Tensor[(585), float64] */;
  %686 = reshape(%685, newshape=[13, 3, 15]) /* ty=Tensor[(13, 3, 15), float64] */;
  %687 = @func_1562(%686) /* ty=(Tensor[(13, 3, 15), float32],) */;
  %688 = %687.0;
  %689 = cast(%var_7805, dtype="bool") /* ty=Tensor[(585), bool] */;
  %690 = shape_of(%688, dtype="int32") /* ty=Tensor[(3), int32] */;
  %691 = cast(%688, dtype="bool") /* ty=Tensor[(13, 3, 15), bool] */;
  %692 = dyn.reshape(%689, %690, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %693 = cast(meta[relay.Constant][19] /* ty=Tensor[(98), int16] */, dtype="int16") /* ty=Tensor[(98), int16] */;
  %694 = cast(meta[relay.Constant][19] /* ty=Tensor[(98), int16] */, dtype="int16") /* ty=Tensor[(98), int16] */;
  %695 = reshape(%693, newshape=[2, 7, 7]) /* ty=Tensor[(2, 7, 7), int16] */;
  %696 = reshape(%694, newshape=[2, 7, 7]) /* ty=Tensor[(2, 7, 7), int16] */;
  %697 = @func_852(%695, %696) /* ty=(Tensor[(8, 6, 7), float64], Tensor[(2, 7, 7), bool], Tensor[(2, 7, 7), float32]) */;
  %698 = %678.1;
  %699 = %679.1;
  %700 = %684.1;
  %701 = equal(%691, %692) /* ty=Tensor[(13, 3, 15), bool] */;
  %702 = %697.1;
  (%698, %699, %700, meta[relay.Constant][19] /* ty=Tensor[(98), int16] */, %701, %702)
}

def @func_18231(%var_18229: Tensor[(3, 10, 8), int64], %var_18230: Tensor[(3, 10, 8), int64]) -> Tensor[(3, 10, 8), int64] {
  %707 = fn (%var_18190: Tensor[(3, 10, 8), int64], %var_18191: Tensor[(3, 10, 8), int64]) -> Tensor[(3, 10, 8), int64] {
    %703 = cast(%var_18191, dtype="int64") /* ty=Tensor[(3, 10, 8), int64] */;
    %704 = shape_of(%var_18190, dtype="int32") /* ty=Tensor[(3), int32] */;
    %705 = cast(%var_18190, dtype="int64") /* ty=Tensor[(3, 10, 8), int64] */;
    %706 = dyn.reshape(%703, %704, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    right_shift(%705, %706) /* ty=Tensor[(3, 10, 8), int64] */
  };
  %707(%var_18229, %var_18230) /* ty=Tensor[(3, 10, 8), int64] */
}

def @func_20324() -> (Tensor[(9, 3, 2), int32], Tensor[(8, 6, 7), float64], Tensor[(6, 10, 6), bool], Tensor[(360), uint16], Tensor[(8, 6, 7), float64]) {
  @func_20322() /* ty=(Tensor[(9, 3, 2), int32], Tensor[(8, 6, 7), float64], Tensor[(6, 10, 6), bool], Tensor[(360), uint16], Tensor[(8, 6, 7), float64]) */
}

def @func_5824(%var_5822: Tensor[(9, 3, 2), int32], %var_5823: Tensor[(9, 3, 2), int32]) -> (Tensor[(9, 3, 2), int32], Tensor[(8, 6, 7), float64]) {
  @func_5820(%var_5822, %var_5823) /* ty=(Tensor[(9, 3, 2), int32], Tensor[(8, 6, 7), float64]) */
}

def @func_7426(%var_7375: Tensor[(5, 15, 7), float64]) -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(5, 15, 7), float32]) {
  %708 = @func_5557() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32]) */;
  %709 = @func_6058() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %710 = @func_7025() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %711 = cast(%var_7375, dtype="float64") /* ty=Tensor[(5, 15, 7), float64] */;
  %712 = acos(%711) /* ty=Tensor[(5, 15, 7), float64] */;
  %713 = cast(%712, dtype="float32") /* ty=Tensor[(5, 15, 7), float32] */;
  %714 = %708.0;
  %715 = %709.0;
  %716 = %710.1;
  %717 = sin(%713) /* ty=Tensor[(5, 15, 7), float32] */;
  (%714, %715, %716, %717)
}

def @func_6466() -> Tensor[(8, 6, 7), float64] {
  @func_6464() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_17175() -> (Tensor[(8, 6, 7), float64],) {
  @func_17173() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_4362() -> Tensor[(8, 6, 7), float64] {
  %719 = fn () -> Tensor[(8, 6, 7), float64] {
    %718 = @func_1413() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %718.0
  };
  %719() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_9950() -> (Tensor[(8, 6, 7), float64],) {
  %720 = @func_8728() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %721 = %720.0;
  (%721,)
}

def @func_4173() -> (Tensor[(8, 6, 7), bool], Tensor[(1650), float32], Tensor[(8, 6, 7), float64], Tensor[(1650), float64]) {
  %736 = fn () -> (Tensor[(8, 6, 7), bool], Tensor[(1650), float32], Tensor[(8, 6, 7), float64], Tensor[(1650), float64]) {
    %722 = @func_1311() /* ty=Tensor[(8, 6, 7), float64] */;
    %723 = cast(meta[relay.Constant][20] /* ty=Tensor[(8, 6, 7), float64] */, dtype="bool") /* ty=Tensor[(8, 6, 7), bool] */;
    %724 = shape_of(%722, dtype="int32") /* ty=Tensor[(3), int32] */;
    %725 = cast(%722, dtype="bool") /* ty=Tensor[(8, 6, 7), bool] */;
    %726 = dyn.reshape(%723, %724, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %727 = cast(meta[relay.Constant][21] /* ty=Tensor[(1650), float32] */, dtype="float32") /* ty=Tensor[(1650), float32] */;
    %728 = reshape(%727, newshape=[1650]) /* ty=Tensor[(1650), float32] */;
    %729 = @func_3632(%728) /* ty=(Tensor[(8, 6, 7), float64], Tensor[(10, 11, 15), float32], Tensor[(1650), float32]) */;
    %730 = @func_2539() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %731 = cast(meta[relay.Constant][21] /* ty=Tensor[(1650), float32] */, dtype="float64") /* ty=Tensor[(1650), float64] */;
    %732 = greater_equal(%725, %726) /* ty=Tensor[(8, 6, 7), bool] */;
    %733 = %729.2;
    %734 = %730.0;
    %735 = sin(%731) /* ty=Tensor[(1650), float64] */;
    (%732, %733, %734, %735)
  };
  %736() /* ty=(Tensor[(8, 6, 7), bool], Tensor[(1650), float32], Tensor[(8, 6, 7), float64], Tensor[(1650), float64]) */
}

def @func_6800() -> (Tensor[(8, 6, 7), float64], Tensor[(9, 3, 2), int32], Tensor[(54), int32]) {
  %745 = fn () -> (Tensor[(8, 6, 7), float64], Tensor[(9, 3, 2), int32], Tensor[(54), int32]) {
    %737 = @func_3704() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %738 = cast(meta[relay.Constant][22] /* ty=Tensor[(54), int32] */, dtype="int32") /* ty=Tensor[(54), int32] */;
    %739 = cast(meta[relay.Constant][22] /* ty=Tensor[(54), int32] */, dtype="int32") /* ty=Tensor[(54), int32] */;
    %740 = reshape(%738, newshape=[9, 3, 2]) /* ty=Tensor[(9, 3, 2), int32] */;
    %741 = reshape(%739, newshape=[9, 3, 2]) /* ty=Tensor[(9, 3, 2), int32] */;
    %742 = @func_5820(%740, %741) /* ty=(Tensor[(9, 3, 2), int32], Tensor[(8, 6, 7), float64]) */;
    %743 = %737.0;
    %744 = %742.0;
    (%743, %744, meta[relay.Constant][22] /* ty=Tensor[(54), int32] */)
  };
  %745() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(9, 3, 2), int32], Tensor[(54), int32]) */
}

def @func_7937() -> Tensor[(8, 6, 7), float64] {
  @func_7935() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_13909() -> Tensor[(8, 6, 7), float64] {
  %747 = fn () -> Tensor[(8, 6, 7), float64] {
    %746 = @func_10104() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %746.0
  };
  %747() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_2685() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  @func_2683() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_7892() -> (Tensor[(8, 6, 7), float64],) {
  %748 = @func_1519() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %749 = %748.0;
  (%749,)
}

def @func_11665() -> (Tensor[(10, 11, 15), float32],) {
  @func_11663() /* ty=(Tensor[(10, 11, 15), float32],) */
}

def @func_16148() -> Tensor[(8, 6, 7), float64] {
  %751 = fn () -> Tensor[(8, 6, 7), float64] {
    %750 = @func_1232() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %750.0
  };
  %751() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_18827() -> (Tensor[(8, 6, 7), bool],) {
  @func_18825() /* ty=(Tensor[(8, 6, 7), bool],) */
}

def @func_3209() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  @func_3207() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_5846() -> (Tensor[(8, 6, 7), float64],) {
  @func_5844() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_2003() -> (Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64]) {
  %763 = fn () -> (Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64]) {
    %752 = @func_1932() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %753 = %752.0;
    %754 = @func_502() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %755 = %754.0;
    %756 = cast(%755, dtype="bool") /* ty=Tensor[(8, 6, 7), bool] */;
    %757 = shape_of(%753, dtype="int32") /* ty=Tensor[(3), int32] */;
    %758 = cast(%753, dtype="bool") /* ty=Tensor[(8, 6, 7), bool] */;
    %759 = dyn.reshape(%756, %757, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %760 = @func_1932() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %761 = greater(%758, %759) /* ty=Tensor[(8, 6, 7), bool] */;
    %762 = %760.0;
    (%761, %762)
  };
  %763() /* ty=(Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64]) */
}

def @func_11266(%var_11265: Tensor[(585), float64]) -> (Tensor[(8, 6, 7), float64], Tensor[(13, 3, 15), float32], Tensor[(585), float64]) {
  %769 = fn (%var_11235: Tensor[(585), float64]) -> (Tensor[(8, 6, 7), float64], Tensor[(13, 3, 15), float32], Tensor[(585), float64]) {
    %764 = cast(%var_11235, dtype="float64") /* ty=Tensor[(585), float64] */;
    %765 = reshape(%764, newshape=[13, 3, 15]) /* ty=Tensor[(13, 3, 15), float64] */;
    %766 = @func_1562(%765) /* ty=(Tensor[(13, 3, 15), float32],) */;
    %767 = @func_1959() /* ty=Tensor[(8, 6, 7), float64] */;
    %768 = %766.0;
    (%767, %768, %var_11235)
  };
  %769(%var_11265) /* ty=(Tensor[(8, 6, 7), float64], Tensor[(13, 3, 15), float32], Tensor[(585), float64]) */
}

def @func_14926() -> Tensor[(8, 6, 7), float64] {
  %770 = @func_10966() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %770.0
}

def @func_7344() -> Tensor[(8, 6, 7), float64] {
  %772 = fn () -> Tensor[(8, 6, 7), float64] {
    %771 = @func_735() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %771.0
  };
  %772() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_11221() -> (Tensor[(8, 6, 7), bool],) {
  %775 = fn () -> (Tensor[(8, 6, 7), bool],) {
    %773 = @func_9924() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), bool]) */;
    %774 = %773.1;
    (%774,)
  };
  %775() /* ty=(Tensor[(8, 6, 7), bool],) */
}

def @func_695(%var_649: Tensor[(8, 6, 7), float32]) -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), uint32], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %776 = @func_458() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %777 = @func_502() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %778 = %777.0;
  %779 = cast(%778, dtype="float32") /* ty=Tensor[(8, 6, 7), float32] */;
  %780 = cosh(%779) /* ty=Tensor[(8, 6, 7), float32] */;
  %781 = @func_458() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %782 = %781.0;
  %783 = cast(%782, dtype="float64") /* ty=Tensor[(8, 6, 7), float64] */;
  %784 = shape_of(%780, dtype="int32") /* ty=Tensor[(3), int32] */;
  %785 = cast(%780, dtype="float64") /* ty=Tensor[(8, 6, 7), float64] */;
  %786 = dyn.reshape(%783, %784, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %787 = cast(%var_649, dtype="uint32") /* ty=Tensor[(8, 6, 7), uint32] */;
  %788 = shape_of(%780, dtype="int32") /* ty=Tensor[(3), int32] */;
  %789 = cast(%780, dtype="uint32") /* ty=Tensor[(8, 6, 7), uint32] */;
  %790 = dyn.reshape(%787, %788, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %791 = @func_502() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %792 = @func_502() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %793 = @func_502() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %794 = %776.0;
  %795 = mod(%785, %786) /* ty=Tensor[(8, 6, 7), float64] */;
  %796 = bitwise_or(%789, %790) /* ty=Tensor[(8, 6, 7), uint32] */;
  %797 = %791.0;
  %798 = %792.0;
  %799 = %793.0;
  (%794, %795, %796, %797, %798, %799)
}

def @func_17230() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %804 = fn () -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
    %800 = @func_9950() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %801 = %800.0;
    %802 = @func_4912() /* ty=Tensor[(8, 6, 7), float64] */;
    %803 = @func_3847() /* ty=Tensor[(8, 6, 7), float64] */;
    (%801, %802, %803)
  };
  %804() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_8096() -> Tensor[(8, 6, 7), float64] {
  @func_8094() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_20228() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %809 = fn () -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
    %805 = @func_14888() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %806 = @func_8048() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %807 = %805.0;
    %808 = %806.0;
    (%807, %808)
  };
  %809() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_2861() -> Tensor[(8, 6, 7), float64] {
  %811 = fn () -> Tensor[(8, 6, 7), float64] {
    %810 = @func_2390() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %810.0
  };
  %811() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_10724() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  @func_10722() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_5820(%var_5808: Tensor[(9, 3, 2), int32], %var_5809: Tensor[(9, 3, 2), int32]) -> (Tensor[(9, 3, 2), int32], Tensor[(8, 6, 7), float64]) {
  %812 = cast(%var_5809, dtype="int32") /* ty=Tensor[(9, 3, 2), int32] */;
  %813 = shape_of(%var_5808, dtype="int32") /* ty=Tensor[(3), int32] */;
  %814 = cast(%var_5808, dtype="int32") /* ty=Tensor[(9, 3, 2), int32] */;
  %815 = dyn.reshape(%812, %813, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %816 = @func_1519() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %817 = right_shift(%814, %815) /* ty=Tensor[(9, 3, 2), int32] */;
  %818 = %816.2;
  (%817, %818)
}

def @func_17268() -> (Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), float64]) {
  @func_17266() /* ty=(Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), float64]) */
}

def @func_4112(%var_4110: int16, %var_4111: Tensor[(11, 1, 12), int16]) -> (Tensor[(11, 1, 12), bool],) {
  @func_4108(%var_4110, %var_4111) /* ty=(Tensor[(11, 1, 12), bool],) */
}

def @func_3898() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  @func_3896() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_8783() -> Tensor[(8, 6, 7), float32] {
  %819 = @func_7595() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32]) */;
  %819.1
}

def @func_8730() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  @func_8728() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_4658() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %820 = @func_2390() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %821 = @func_3498() /* ty=Tensor[(8, 6, 7), float64] */;
  %822 = cast(%821, dtype="float64") /* ty=Tensor[(8, 6, 7), float64] */;
  %823 = cast(%821, dtype="float32") /* ty=Tensor[(8, 6, 7), float32] */;
  %824 = reshape(%823, newshape=[8, 6, 7]) /* ty=Tensor[(8, 6, 7), float32] */;
  %825 = @func_695(%824) /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), uint32], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %826 = %820.0;
  %827 = log10(%822) /* ty=Tensor[(8, 6, 7), float64] */;
  %828 = %825.4;
  (%826, %827, %828)
}

def @func_11390() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %837 = fn () -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
    %829 = @func_7292() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %830 = @func_8048() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %831 = @func_1013() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %832 = %829.1;
    %833 = %830.0;
    %834 = @func_1790() /* ty=Tensor[(8, 6, 7), float64] */;
    %835 = %831.0;
    %836 = @func_4361() /* ty=Tensor[(8, 6, 7), float64] */;
    (%832, %833, %834, %835, %836)
  };
  %837() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_10418() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %838 = @func_6495() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %839 = @func_7371() /* ty=Tensor[(8, 6, 7), float64] */;
  %840 = @func_9181() /* ty=Tensor[(8, 6, 7), float64] */;
  %841 = %838.0;
  (%839, %840, %841)
}

def @func_13073(%var_13068: Tensor[(7, 12, 10), float32]) -> Tensor[(7, 12, 10), float32] {
  %842 = cast(%var_13068, dtype="float32") /* ty=Tensor[(7, 12, 10), float32] */;
  atan(%842) /* ty=Tensor[(7, 12, 10), float32] */
}

def @func_8266() -> (Tensor[(8, 6, 7), float64],) {
  %843 = @func_3093() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %844 = %843.0;
  (%844,)
}

def @func_8666() -> Tensor[(8, 6, 7), float64] {
  %846 = fn () -> Tensor[(8, 6, 7), float64] {
    %845 = @func_458() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %845.0
  };
  %846() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_502() -> (Tensor[(8, 6, 7), float64],) {
  %847 = @func_458() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %848 = %847.0;
  (%848,)
}

def @func_14496() -> (Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64]) {
  %853 = fn () -> (Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64]) {
    %849 = @func_9924() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), bool]) */;
    %850 = @func_10332() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %851 = %849.1;
    %852 = %850.0;
    (%851, %852)
  };
  %853() /* ty=(Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64]) */
}

def @func_12036() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32]) {
  %854 = @func_2373() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %855 = @func_1877() /* ty=(Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), float64]) */;
  %856 = %854.1;
  %857 = %855.0;
  (%856, %857)
}

def @func_11756() -> Tensor[(6, 7, 1), float32] {
  @func_11754() /* ty=Tensor[(6, 7, 1), float32] */
}

def @func_5844() -> (Tensor[(8, 6, 7), float64],) {
  %858 = @func_3207() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %859 = %858.0;
  (%859,)
}

def @func_10816() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %868 = fn () -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
    %860 = @func_10632() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %861 = @func_6495() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %862 = @func_8266() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %863 = @func_5765() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %864 = %860.0;
    %865 = %861.1;
    %866 = %862.0;
    %867 = %863.0;
    (%864, %865, %866, %867)
  };
  %868() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_7750() -> (Tensor[(8, 6, 7), float64],) {
  %871 = fn () -> (Tensor[(8, 6, 7), float64],) {
    %869 = @func_3093() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %870 = %869.0;
    (%870,)
  };
  %871() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_18144() -> (Tensor[(8, 6, 7), float64],) {
  @func_18142() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_3148() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  @func_3146() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_7780() -> (Tensor[(8, 6, 7), float64],) {
  %873 = fn () -> (Tensor[(8, 6, 7), float64],) {
    %872 = @func_3412() /* ty=Tensor[(8, 6, 7), float64] */;
    (%872,)
  };
  %873() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_18594() -> (Tensor[(16, 10, 9), float64], Tensor[(8, 6, 7), float64]) {
  %874 = @func_18030() /* ty=(Tensor[(16, 10, 9), float64], Tensor[(8, 6, 7), float64]) */;
  %875 = @func_4658() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %876 = %874.0;
  %877 = %875.2;
  (%876, %877)
}

def @func_3366(%var_3364: Tensor[(1650), float32], %var_3365: Tensor[(1650), float32]) -> (Tensor[(8, 6, 7), float64], Tensor[(10, 11, 15), float32], Tensor[(8, 6, 7), float64], Tensor[(1650), int64], Tensor[(1650), float64]) {
  %893 = fn (%var_3334: Tensor[(1650), float32], %var_3347: Tensor[(1650), float32]) -> (Tensor[(8, 6, 7), float64], Tensor[(10, 11, 15), float32], Tensor[(8, 6, 7), float64], Tensor[(1650), int64], Tensor[(1650), float64]) {
    %878 = @func_1752() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), bool]) */;
    %879 = cast(%var_3334, dtype="float32") /* ty=Tensor[(1650), float32] */;
    %880 = reshape(%879, newshape=[10, 11, 15]) /* ty=Tensor[(10, 11, 15), float32] */;
    %881 = @func_885(%880) /* ty=(Tensor[(10, 11, 15), float32],) */;
    %882 = @func_2390() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %883 = cast(%var_3347, dtype="int64") /* ty=Tensor[(1650), int64] */;
    %884 = shape_of(%var_3334, dtype="int32") /* ty=Tensor[(1), int32] */;
    %885 = cast(%var_3334, dtype="int64") /* ty=Tensor[(1650), int64] */;
    %886 = dyn.reshape(%883, %884, newshape=[]) /* ty=Tensor[(?), int64] */;
    %887 = cast(%var_3347, dtype="float64") /* ty=Tensor[(1650), float64] */;
    %888 = %878.4;
    %889 = %881.0;
    %890 = %882.0;
    %891 = bitwise_xor(%885, %886) /* ty=Tensor[(1650), int64] */;
    %892 = exp(%887) /* ty=Tensor[(1650), float64] */;
    (%888, %889, %890, %891, %892)
  };
  %893(%var_3364, %var_3365) /* ty=(Tensor[(8, 6, 7), float64], Tensor[(10, 11, 15), float32], Tensor[(8, 6, 7), float64], Tensor[(1650), int64], Tensor[(1650), float64]) */
}

def @func_1933() -> (Tensor[(8, 6, 7), float64],) {
  %896 = fn () -> (Tensor[(8, 6, 7), float64],) {
    %894 = @func_735() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %895 = %894.0;
    (%895,)
  };
  %896() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_15934() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  @func_15932() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_12373() -> (Tensor[(8, 6, 7), float64], Tensor[(110, 15), float32]) {
  @func_12371() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(110, 15), float32]) */
}

def @func_5766() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %902 = fn () -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
    %897 = @func_3880() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %898 = %897.0;
    %899 = cast(%898, dtype="float64") /* ty=Tensor[(8, 6, 7), float64] */;
    %900 = @func_1033() /* ty=Tensor[(8, 6, 7), float64] */;
    %901 = erf(%899) /* ty=Tensor[(8, 6, 7), float64] */;
    (%900, %901)
  };
  %902() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_20049() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(27, 2), int32], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %903 = @func_3896() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %904 = @func_10104() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %905 = cast(meta[relay.Constant][23] /* ty=Tensor[(27, 2), int32] */, dtype="int32") /* ty=Tensor[(27, 2), int32] */;
  %906 = reshape(%905, newshape=[54]) /* ty=Tensor[(54), int32] */;
  %907 = @func_6869(%906) /* ty=(Tensor[(7, 11, 7), float32], Tensor[(9, 3, 2), int32], Tensor[(54), int32], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(1650), float32], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %908 = @func_7100() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %909 = @func_12021() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %910 = @func_16959() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %911 = @func_4294() /* ty=Tensor[(8, 6, 7), float64] */;
  %912 = @func_11579() /* ty=Tensor[(8, 6, 7), float64] */;
  %913 = %903.0;
  %914 = %904.0;
  %915 = %907.3;
  %916 = %908.1;
  %917 = %909.0;
  %918 = %910.0;
  (%911, %912, %913, %914, %915, meta[relay.Constant][23] /* ty=Tensor[(27, 2), int32] */, %916, %917, %918)
}

def @func_12431() -> Tensor[(8, 6, 7), float64] {
  @func_12429() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_3880() -> (Tensor[(8, 6, 7), float64],) {
  %919 = @func_1932() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %920 = %919.0;
  (%920,)
}

def @func_18596() -> (Tensor[(16, 10, 9), float64], Tensor[(8, 6, 7), float64]) {
  @func_18594() /* ty=(Tensor[(16, 10, 9), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_4913() -> Tensor[(8, 6, 7), float64] {
  %921 = fn () -> Tensor[(8, 6, 7), float64] {
    @func_1959() /* ty=Tensor[(8, 6, 7), float64] */
  };
  %921() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_2541() -> (Tensor[(8, 6, 7), float64],) {
  @func_2539() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_20451() -> Tensor[(8, 6, 7), float32] {
  %922 = fn () -> Tensor[(8, 6, 7), float32] {
    @func_7051() /* ty=Tensor[(8, 6, 7), float32] */
  };
  %922() /* ty=Tensor[(8, 6, 7), float32] */
}

def @func_15235() -> Tensor[(8, 6, 7), float64] {
  @func_15233() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_9292(%var_9290: Tensor[(8, 6, 7), float64]) -> (Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), float64]) {
  @func_9289(%var_9290) /* ty=(Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), float64]) */
}

def @func_15186() -> (Tensor[(8, 6, 7), float64],) {
  %925 = fn () -> (Tensor[(8, 6, 7), float64],) {
    %923 = @func_11885() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %924 = %923.0;
    (%924,)
  };
  %925() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_8334() -> (Tensor[(8, 6, 7), float64],) {
  %928 = fn () -> (Tensor[(8, 6, 7), float64],) {
    %926 = @func_4966() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %927 = %926.1;
    (%927,)
  };
  %928() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_20198() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  @func_20196() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_9387(%var_9359: Tensor[(6, 6, 5), bool], %var_9360: Tensor[(6, 6, 5), bool]) -> Tensor[(6, 6, 5), bool] {
  %929 = cast(%var_9360, dtype="bool") /* ty=Tensor[(6, 6, 5), bool] */;
  %930 = shape_of(%var_9359, dtype="int32") /* ty=Tensor[(3), int32] */;
  %931 = cast(%var_9359, dtype="bool") /* ty=Tensor[(6, 6, 5), bool] */;
  %932 = dyn.reshape(%929, %930, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%931, %932) /* ty=Tensor[(6, 6, 5), bool] */
}

def @func_14917() -> Tensor[(8, 6, 7), float64] {
  @func_14915() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_19054(%var_19047: Tensor[(1650), float32]) -> (Tensor[(1650), bool],) {
  %933 = @func_10366() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(10, 11, 15), float32], Tensor[(1650), float32]) */;
  %934 = %933.3;
  %935 = cast(%var_19047, dtype="bool") /* ty=Tensor[(1650), bool] */;
  %936 = shape_of(%934, dtype="int32") /* ty=Tensor[(1), int32] */;
  %937 = cast(%934, dtype="bool") /* ty=Tensor[(1650), bool] */;
  %938 = dyn.reshape(%935, %936, newshape=[]) /* ty=Tensor[(?), bool] */;
  %939 = logical_and(%937, %938) /* ty=Tensor[(1650), bool] */;
  (%939,)
}

def @func_459() -> (Tensor[(8, 6, 7), float64],) {
  %942 = fn () -> (Tensor[(8, 6, 7), float64],) {
    %940 = cast(meta[relay.Constant][24] /* ty=Tensor[(8, 6, 7), float64] */, dtype="float64") /* ty=Tensor[(8, 6, 7), float64] */;
    %941 = log(%940) /* ty=Tensor[(8, 6, 7), float64] */;
    (%941,)
  };
  %942() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_4311() -> Tensor[(8, 6, 7), float64] {
  %943 = fn () -> Tensor[(8, 6, 7), float64] {
    @func_1033() /* ty=Tensor[(8, 6, 7), float64] */
  };
  %943() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_10968() -> (Tensor[(8, 6, 7), float64],) {
  @func_10966() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_7293() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %948 = fn () -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
    %944 = @func_7193() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %945 = @func_5289() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %946 = %944.0;
    %947 = %945.2;
    (%946, %947)
  };
  %948() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_4296() -> Tensor[(8, 6, 7), float64] {
  @func_4294() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_16610() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  @func_16608() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_16960() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %953 = fn () -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
    %949 = @func_12519() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %950 = @func_10104() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %951 = %949.0;
    %952 = %950.0;
    (%951, %952)
  };
  %953() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_9945() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32]) {
  %954 = @func_7100() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %955 = @func_1141() /* ty=(Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), bool]) */;
  %956 = %954.2;
  %957 = %955.1;
  (%956, %957)
}

def @func_6711() -> Tensor[(8, 6, 7), float64] {
  @func_6709() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_8915() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  @func_8913() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_9169() -> Tensor[(8, 6, 7), float64] {
  %958 = @func_6495() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %958.2
}

def @func_6316() -> Tensor[(8, 6, 7), float64] {
  %959 = fn () -> Tensor[(8, 6, 7), float64] {
    @func_1627() /* ty=Tensor[(8, 6, 7), float64] */
  };
  %959() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_10633() -> (Tensor[(8, 6, 7), float64],) {
  %962 = fn () -> (Tensor[(8, 6, 7), float64],) {
    %960 = @func_8242() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %961 = %960.0;
    (%961,)
  };
  %962() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_17121() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  @func_17119() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_1754() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), bool]) {
  @func_1752() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), bool]) */
}

def @func_13028() -> (Tensor[(8, 6, 7), float64],) {
  @func_13026() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_9952() -> (Tensor[(8, 6, 7), float64],) {
  @func_9950() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_20257() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  @func_20255() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_15646() -> Tensor[(8, 6, 7), float64] {
  @func_15644() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_2728() -> (Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64]) {
  %963 = @func_1141() /* ty=(Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), bool]) */;
  %964 = %963.0;
  %965 = @func_1790() /* ty=Tensor[(8, 6, 7), float64] */;
  (%964, %965)
}

def @func_5699(%var_5698: Tensor[(15, 2, 5), int32]) -> (Tensor[(15, 2, 5), int32], Tensor[(8, 6, 7), float64]) {
  %972 = fn (%var_5689: Tensor[(15, 2, 5), int32]) -> (Tensor[(15, 2, 5), int32], Tensor[(8, 6, 7), float64]) {
    %966 = cast(meta[relay.Constant][25] /* ty=Tensor[(15, 2, 5), int32] */, dtype="int32") /* ty=Tensor[(15, 2, 5), int32] */;
    %967 = shape_of(%var_5689, dtype="int32") /* ty=Tensor[(3), int32] */;
    %968 = cast(%var_5689, dtype="int32") /* ty=Tensor[(15, 2, 5), int32] */;
    %969 = dyn.reshape(%966, %967, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %970 = bitwise_xor(%968, %969) /* ty=Tensor[(15, 2, 5), int32] */;
    %971 = @func_3580() /* ty=Tensor[(8, 6, 7), float64] */;
    (%970, %971)
  };
  %972(%var_5698) /* ty=(Tensor[(15, 2, 5), int32], Tensor[(8, 6, 7), float64]) */
}

def @func_20135() -> Tensor[(15, 2, 5), int32] {
  @func_20133() /* ty=Tensor[(15, 2, 5), int32] */
}

def @func_19356(%var_19355: Tensor[(1650, 1), float32]) -> (Tensor[(8, 6, 7), float64], Tensor[(10, 11, 15), float32], Tensor[(1650, 1), float32]) {
  %979 = fn (%var_19349: Tensor[(1650, 1), float32]) -> (Tensor[(8, 6, 7), float64], Tensor[(10, 11, 15), float32], Tensor[(1650, 1), float32]) {
    %973 = @func_6981() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %974 = cast(%var_19349, dtype="float32") /* ty=Tensor[(1650, 1), float32] */;
    %975 = reshape(%974, newshape=[10, 11, 15]) /* ty=Tensor[(10, 11, 15), float32] */;
    %976 = @func_885(%975) /* ty=(Tensor[(10, 11, 15), float32],) */;
    %977 = %973.0;
    %978 = %976.0;
    (%977, %978, %var_19349)
  };
  %979(%var_19355) /* ty=(Tensor[(8, 6, 7), float64], Tensor[(10, 11, 15), float32], Tensor[(1650, 1), float32]) */
}

def @func_3705() -> (Tensor[(8, 6, 7), float64],) {
  %982 = fn () -> (Tensor[(8, 6, 7), float64],) {
    %980 = @func_3207() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %981 = %980.0;
    (%981,)
  };
  %982() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_20255() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %983 = @func_3880() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %984 = @func_3146() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %985 = %983.0;
  %986 = %984.1;
  %987 = @func_12564() /* ty=Tensor[(8, 6, 7), float64] */;
  (%985, %986, %987)
}

def @func_12640(%var_12638: Tensor[(20), float64]) -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(2, 2, 5), float64], Tensor[(20), float64]) {
  @func_12637(%var_12638) /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(2, 2, 5), float64], Tensor[(20), float64]) */
}

def @func_16845() -> (Tensor[(8, 6, 7), float64],) {
  %990 = fn () -> (Tensor[(8, 6, 7), float64],) {
    %988 = @func_1519() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %989 = %988.1;
    (%989,)
  };
  %990() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_9120() -> (Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  @func_9118() /* ty=(Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_736() -> (Tensor[(8, 6, 7), float64],) {
  %993 = fn () -> (Tensor[(8, 6, 7), float64],) {
    %991 = @func_502() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %992 = %991.0;
    (%992,)
  };
  %993() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_11179() -> (Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %994 = @func_1141() /* ty=(Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), bool]) */;
  %995 = @func_10418() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %996 = @func_10846() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %997 = @func_2390() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %998 = %994.2;
  %999 = %995.1;
  %1000 = %996.2;
  %1001 = %997.0;
  (%998, %999, %1000, %1001)
}

def @func_855(%var_853: Tensor[(2, 7, 7), int16], %var_854: Tensor[(2, 7, 7), int16]) -> (Tensor[(8, 6, 7), float64], Tensor[(2, 7, 7), bool], Tensor[(2, 7, 7), float32]) {
  %1021 = fn (%var_778: Tensor[(2, 7, 7), int16], %var_779: Tensor[(2, 7, 7), int16]) -> (Tensor[(8, 6, 7), float64], Tensor[(2, 7, 7), bool], Tensor[(2, 7, 7), float32]) {
    %1002 = @func_458() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %1003 = cast(%var_779, dtype="int16") /* ty=Tensor[(2, 7, 7), int16] */;
    %1004 = shape_of(%var_778, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1005 = cast(%var_778, dtype="int16") /* ty=Tensor[(2, 7, 7), int16] */;
    %1006 = dyn.reshape(%1003, %1004, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %1007 = bitwise_and(%1005, %1006) /* ty=Tensor[(2, 7, 7), int16] */;
    %1008 = cast(%var_778, dtype="uint32") /* ty=Tensor[(2, 7, 7), uint32] */;
    %1009 = shape_of(%1007, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1010 = cast(%1007, dtype="uint32") /* ty=Tensor[(2, 7, 7), uint32] */;
    %1011 = dyn.reshape(%1008, %1009, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %1012 = maximum(%1010, %1011) /* ty=Tensor[(2, 7, 7), uint32] */;
    %1013 = cast(%1012, dtype="bool") /* ty=Tensor[(2, 7, 7), bool] */;
    %1014 = shape_of(%var_779, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1015 = cast(%var_779, dtype="bool") /* ty=Tensor[(2, 7, 7), bool] */;
    %1016 = dyn.reshape(%1013, %1014, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1017 = cast(%var_779, dtype="float32") /* ty=Tensor[(2, 7, 7), float32] */;
    %1018 = %1002.0;
    %1019 = logical_and(%1015, %1016) /* ty=Tensor[(2, 7, 7), bool] */;
    %1020 = tan(%1017) /* ty=Tensor[(2, 7, 7), float32] */;
    (%1018, %1019, %1020)
  };
  %1021(%var_853, %var_854) /* ty=(Tensor[(8, 6, 7), float64], Tensor[(2, 7, 7), bool], Tensor[(2, 7, 7), float32]) */
}

def @func_11181() -> (Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  @func_11179() /* ty=(Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_6924(%var_6922: int16) -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(11, 1, 12), bool], int16, Tensor[(132, 1), int16]) {
  @func_6921(%var_6922) /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(11, 1, 12), bool], int16, Tensor[(132, 1), int16]) */
}

def @func_12301() -> (Tensor[(8, 6, 7), float64],) {
  @func_12299() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_13151() -> (Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64], Tensor[(13, 3, 15), float32]) {
  @func_13149() /* ty=(Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64], Tensor[(13, 3, 15), float32]) */
}

def @func_6496() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1026 = fn () -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
    %1022 = @func_3880() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %1023 = @func_4361() /* ty=Tensor[(8, 6, 7), float64] */;
    %1024 = %1022.0;
    %1025 = @func_4912() /* ty=Tensor[(8, 6, 7), float64] */;
    (%1023, %1024, %1025)
  };
  %1026() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_13843() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1027 = @func_2728() /* ty=(Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64]) */;
  %1028 = @func_8094() /* ty=Tensor[(8, 6, 7), float64] */;
  %1029 = %1027.1;
  (%1028, %1029)
}

def @func_3848() -> Tensor[(8, 6, 7), float64] {
  %1031 = fn () -> Tensor[(8, 6, 7), float64] {
    %1030 = @func_868() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %1030.0
  };
  %1031() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_12565() -> Tensor[(8, 6, 7), float64] {
  %1033 = fn () -> Tensor[(8, 6, 7), float64] {
    %1032 = @func_3146() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %1032.2
  };
  %1033() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_16211() -> (Tensor[(8, 6, 7), float64],) {
  %1034 = @func_6666() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1035 = %1034.1;
  (%1035,)
}

def @func_7684() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1039 = fn () -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
    %1036 = @func_5289() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %1037 = @func_2799() /* ty=Tensor[(8, 6, 7), float64] */;
    %1038 = %1036.2;
    (%1037, %1038)
  };
  %1039() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_7195() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  @func_7193() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_10502() -> Tensor[(8, 6, 7), float64] {
  %1041 = fn () -> Tensor[(8, 6, 7), float64] {
    %1040 = @func_8878() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %1040.0
  };
  %1041() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_13845() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  @func_13843() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_1047() -> Tensor[(8, 6, 7), float64] {
  @func_1045() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_1014() -> (Tensor[(8, 6, 7), float64],) {
  %1044 = fn () -> (Tensor[(8, 6, 7), float64],) {
    %1042 = @func_458() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %1043 = %1042.0;
    (%1043,)
  };
  %1044() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_2218(%var_2197: float64, %var_2198: Tensor[(7, 3, 16), float64]) -> (Tensor[(7, 3, 16), float64],) {
  %1045 = cast(%var_2197, dtype="float64") /* ty=float64 */;
  %1046 = cast(%var_2198, dtype="float64") /* ty=Tensor[(7, 3, 16), float64] */;
  %1047 = mod(%1045, %1046) /* ty=Tensor[(7, 3, 16), float64] */;
  (%1047,)
}

def @func_2587() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1051 = fn () -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
    %1048 = @func_2390() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %1049 = @func_1959() /* ty=Tensor[(8, 6, 7), float64] */;
    %1050 = %1048.0;
    (%1049, %1050)
  };
  %1051() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_15440() -> Tensor[(8, 6, 7), float64] {
  @func_11579() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_13667() -> (Tensor[(10, 11, 15), float32], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32]) {
  %1052 = @func_13008() /* ty=(Tensor[(10, 11, 15), float32], Tensor[(8, 6, 7), bool], Tensor[(585), float64]) */;
  %1053 = @func_10126() /* ty=Tensor[(8, 6, 7), float64] */;
  %1054 = cast(%1053, dtype="float64") /* ty=Tensor[(8, 6, 7), float64] */;
  %1055 = reshape(%1054, newshape=[8, 6, 7]) /* ty=Tensor[(8, 6, 7), float64] */;
  %1056 = @func_9289(%1055) /* ty=(Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), float64]) */;
  %1057 = %1052.0;
  %1058 = %1056.0;
  (%1057, %1053, %1058)
}

def @func_8036() -> Tensor[(8, 6, 7), float64] {
  @func_3709() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_11887() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  @func_11885() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_17854() -> (Tensor[(8, 6, 7), float64],) {
  %1061 = fn () -> (Tensor[(8, 6, 7), float64],) {
    %1059 = @func_11954() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %1060 = %1059.0;
    (%1060,)
  };
  %1061() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_15488() -> (Tensor[(8, 6, 7), float64],) {
  %1062 = @func_13082() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1063 = %1062.0;
  (%1063,)
}

def @func_16071() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1064 = @func_13457() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1065 = @func_11954() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1066 = %1064.0;
  %1067 = @func_2799() /* ty=Tensor[(8, 6, 7), float64] */;
  %1068 = %1065.0;
  (%1066, %1067, %1068)
}

def @func_16777() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), float64]) {
  @func_16775() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), float64]) */
}

def @func_14948() -> Tensor[(8, 6, 7), float64] {
  @func_14946() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_6146() -> (Tensor[(8, 6, 7), float64],) {
  @func_6144() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_2730() -> (Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64]) {
  @func_2728() /* ty=(Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64]) */
}

def @func_7074() -> (Tensor[(8, 6, 7), float64],) {
  %1069 = @func_2481() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1070 = %1069.0;
  (%1070,)
}

def @func_1034() -> Tensor[(8, 6, 7), float64] {
  %1072 = fn () -> Tensor[(8, 6, 7), float64] {
    %1071 = @func_968() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %1071.0
  };
  %1072() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_11047() -> Tensor[(8, 6, 7), float64] {
  %1073 = @func_4658() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1073.1
}

def @func_11663() -> (Tensor[(10, 11, 15), float32],) {
  %1074 = @func_10366() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(10, 11, 15), float32], Tensor[(1650), float32]) */;
  %1075 = %1074.2;
  (%1075,)
}

def @func_11754() -> Tensor[(6, 7, 1), float32] {
  %1076 = cast(meta[relay.Constant][26] /* ty=Tensor[(6, 7, 1), float32] */, dtype="float32") /* ty=Tensor[(6, 7, 1), float32] */;
  log10(%1076) /* ty=Tensor[(6, 7, 1), float32] */
}

def @func_5925(%var_5924: Tensor[(2, 2, 5), float64]) -> (Tensor[(2, 2, 5), float64], Tensor[(8, 6, 7), float64]) {
  %1081 = fn (%var_5908: Tensor[(2, 2, 5), float64]) -> (Tensor[(2, 2, 5), float64], Tensor[(8, 6, 7), float64]) {
    %1077 = cast(%var_5908, dtype="float64") /* ty=Tensor[(2, 2, 5), float64] */;
    %1078 = @func_2683() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %1079 = asinh(%1077) /* ty=Tensor[(2, 2, 5), float64] */;
    %1080 = %1078.1;
    (%1079, %1080)
  };
  %1081(%var_5924) /* ty=(Tensor[(2, 2, 5), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_14107() -> (Tensor[(8, 6, 7), float64], Tensor[(585), bool], Tensor[(2, 7, 7), bool]) {
  %1082 = @func_7683() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1083 = @func_13050() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(585), bool]) */;
  %1084 = %1083.1;
  %1085 = cast(%1084, dtype="float64") /* ty=Tensor[(585), float64] */;
  %1086 = reshape(%1085, newshape=[585]) /* ty=Tensor[(585), float64] */;
  %1087 = @func_7839(%1086) /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(2, 7, 7), bool], Tensor[(98), int16], Tensor[(13, 3, 15), bool], Tensor[(2, 7, 7), bool]) */;
  %1088 = %1082.0;
  %1089 = %1087.2;
  (%1088, %1084, %1089)
}

def @func_7894() -> (Tensor[(8, 6, 7), float64],) {
  @func_7892() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_16021(%var_16019: Tensor[(3, 11, 8), uint8], %var_16020: Tensor[(3, 11, 8), uint8]) -> Tensor[(3, 11, 8), uint8] {
  @func_16017(%var_16019, %var_16020) /* ty=Tensor[(3, 11, 8), uint8] */
}

def @func_5558() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32]) {
  %1093 = fn () -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32]) {
    %1090 = @func_1752() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), bool]) */;
    %1091 = @func_4361() /* ty=Tensor[(8, 6, 7), float64] */;
    %1092 = %1090.5;
    (%1091, %1092)
  };
  %1093() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32]) */
}

def @func_16073() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  @func_16071() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_4788() -> (Tensor[(585), bool], Tensor[(8, 6, 7), float64]) {
  @func_4786() /* ty=(Tensor[(585), bool], Tensor[(8, 6, 7), float64]) */
}

def @func_17747() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(15, 2, 5), int32], Tensor[(13, 150), bool]) {
  %1106 = fn () -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(15, 2, 5), int32], Tensor[(13, 150), bool]) {
    %1094 = @func_12299() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %1095 = @func_5986() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %1096 = cast(meta[relay.Constant][27] /* ty=Tensor[(1, 150), int32] */, dtype="int32") /* ty=Tensor[(1, 150), int32] */;
    %1097 = reshape(%1096, newshape=[15, 2, 5]) /* ty=Tensor[(15, 2, 5), int32] */;
    %1098 = @func_5697(%1097) /* ty=(Tensor[(15, 2, 5), int32], Tensor[(8, 6, 7), float64]) */;
    %1099 = cast(meta[relay.Constant][27] /* ty=Tensor[(1, 150), int32] */, dtype="bool") /* ty=Tensor[(1, 150), bool] */;
    %1100 = cast(meta[relay.Constant][28] /* ty=Tensor[(13, 150), int32] */, dtype="bool") /* ty=Tensor[(13, 150), bool] */;
    %1101 = %1094.0;
    %1102 = %1095.0;
    %1103 = @func_11047() /* ty=Tensor[(8, 6, 7), float64] */;
    %1104 = %1098.0;
    %1105 = greater_equal(%1099, %1100) /* ty=Tensor[(13, 150), bool] */;
    (%1101, %1102, %1103, %1104, %1105)
  };
  %1106() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(15, 2, 5), int32], Tensor[(13, 150), bool]) */
}

def @func_3709() -> Tensor[(8, 6, 7), float64] {
  %1107 = @func_968() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1107.0
}

def @func_13573() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1111 = fn () -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
    %1108 = @func_4658() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %1109 = %1108.1;
    %1110 = @func_4912() /* ty=Tensor[(8, 6, 7), float64] */;
    (%1109, %1110)
  };
  %1111() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_15268() -> Tensor[(8, 6, 7), float64] {
  %1113 = fn () -> Tensor[(8, 6, 7), float64] {
    %1112 = @func_4732() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %1112.0
  };
  %1113() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_10367() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(10, 11, 15), float32], Tensor[(1650), float32]) {
  %1122 = fn () -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(10, 11, 15), float32], Tensor[(1650), float32]) {
    %1114 = @func_7100() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %1115 = @func_4698() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %1116 = cast(meta[relay.Constant][29] /* ty=Tensor[(1650), float32] */, dtype="float32") /* ty=Tensor[(1650), float32] */;
    %1117 = reshape(%1116, newshape=[1650]) /* ty=Tensor[(1650), float32] */;
    %1118 = @func_3632(%1117) /* ty=(Tensor[(8, 6, 7), float64], Tensor[(10, 11, 15), float32], Tensor[(1650), float32]) */;
    %1119 = %1114.0;
    %1120 = %1115.0;
    %1121 = %1118.1;
    (%1119, %1120, %1121, meta[relay.Constant][29] /* ty=Tensor[(1650), float32] */)
  };
  %1122() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(10, 11, 15), float32], Tensor[(1650), float32]) */
}

def @func_18308() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  @func_18306() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_11805() -> Tensor[(8, 6, 7), float64] {
  %1123 = @func_7140() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1123.0
}

def @func_4875(%var_4874: Tensor[(585), float64]) -> (Tensor[(585), bool], Tensor[(585), float64], Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64]) {
  %1136 = fn (%var_4850: Tensor[(585), float64]) -> (Tensor[(585), bool], Tensor[(585), float64], Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64]) {
    %1124 = @func_4620() /* ty=Tensor[(585), float64] */;
    %1125 = cast(%var_4850, dtype="bool") /* ty=Tensor[(585), bool] */;
    %1126 = shape_of(%1124, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1127 = cast(%1124, dtype="bool") /* ty=Tensor[(585), bool] */;
    %1128 = dyn.reshape(%1125, %1126, newshape=[]) /* ty=Tensor[(?), bool] */;
    %1129 = cast(%1124, dtype="float64") /* ty=Tensor[(585), float64] */;
    %1130 = @func_2002() /* ty=(Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64]) */;
    %1131 = @func_1413() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %1132 = not_equal(%1127, %1128) /* ty=Tensor[(585), bool] */;
    %1133 = tan(%1129) /* ty=Tensor[(585), float64] */;
    %1134 = %1130.0;
    %1135 = %1131.0;
    (%1132, %1133, %1134, %1135)
  };
  %1136(%var_4874) /* ty=(Tensor[(585), bool], Tensor[(585), float64], Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64]) */
}

def @func_2373() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1137 = @func_868() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1138 = %1137.0;
  %1139 = @func_1790() /* ty=Tensor[(8, 6, 7), float64] */;
  (%1138, %1139)
}

def @func_7141() -> (Tensor[(8, 6, 7), float64],) {
  %1142 = fn () -> (Tensor[(8, 6, 7), float64],) {
    %1140 = @func_7100() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %1141 = %1140.0;
    (%1141,)
  };
  %1142() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_15716() -> Tensor[(8, 6, 7), float64] {
  @func_15714() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_13083() -> (Tensor[(8, 6, 7), float64],) {
  %1145 = fn () -> (Tensor[(8, 6, 7), float64],) {
    %1143 = @func_2481() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %1144 = %1143.0;
    (%1144,)
  };
  %1145() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_4621() -> Tensor[(585), float64] {
  %1147 = fn () -> Tensor[(585), float64] {
    %1146 = @func_3825() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(13, 3, 15), float32], Tensor[(585), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %1146.5
  };
  %1147() /* ty=Tensor[(585), float64] */
}

def @func_1879() -> (Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), float64]) {
  @func_1877() /* ty=(Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), float64]) */
}

def @func_10151() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1148 = @func_8008() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1149 = %1148.0;
  %1150 = @func_8623() /* ty=Tensor[(8, 6, 7), float64] */;
  (%1149, %1150)
}

def @func_4108(%var_4102: int16, %var_4103: Tensor[(11, 1, 12), int16]) -> (Tensor[(11, 1, 12), bool],) {
  %1151 = cast(%var_4102, dtype="bool") /* ty=bool */;
  %1152 = cast(%var_4103, dtype="bool") /* ty=Tensor[(11, 1, 12), bool] */;
  %1153 = equal(%1151, %1152) /* ty=Tensor[(11, 1, 12), bool] */;
  (%1153,)
}

def @func_868() -> (Tensor[(8, 6, 7), float64],) {
  %1154 = @func_502() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1155 = %1154.0;
  (%1155,)
}

def @func_6667() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1160 = fn () -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
    %1156 = @func_4966() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %1157 = @func_1752() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), bool]) */;
    %1158 = %1156.0;
    %1159 = %1157.0;
    (%1158, %1159)
  };
  %1160() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_3498() -> Tensor[(8, 6, 7), float64] {
  %1161 = @func_2539() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1161.0
}

def @func_18470(%var_18468: Tensor[(216), float64]) -> (Tensor[(8, 6, 7), float64], Tensor[(12, 2, 9), float64], Tensor[(216), float64]) {
  @func_18467(%var_18468) /* ty=(Tensor[(8, 6, 7), float64], Tensor[(12, 2, 9), float64], Tensor[(216), float64]) */
}

def @func_887(%var_886: Tensor[(10, 11, 15), float32]) -> (Tensor[(10, 11, 15), float32],) {
  %1164 = fn (%var_881: Tensor[(10, 11, 15), float32]) -> (Tensor[(10, 11, 15), float32],) {
    %1162 = cast(%var_881, dtype="float32") /* ty=Tensor[(10, 11, 15), float32] */;
    %1163 = log(%1162) /* ty=Tensor[(10, 11, 15), float32] */;
    (%1163,)
  };
  %1164(%var_886) /* ty=(Tensor[(10, 11, 15), float32],) */
}

def @func_9760() -> Tensor[(8, 6, 7), float64] {
  @func_9758() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_9798() -> (Tensor[(8, 6, 7), float64], Tensor[(585), bool], Tensor[(585), float64], Tensor[(8, 6, 7), float64], Tensor[(110, 15), float32]) {
  @func_9796() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(585), bool], Tensor[(585), float64], Tensor[(8, 6, 7), float64], Tensor[(110, 15), float32]) */
}

def @func_13340() -> (Tensor[(8, 6, 7), float32],) {
  %1167 = fn () -> (Tensor[(8, 6, 7), float32],) {
    %1165 = @func_7581() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), float64]) */;
    %1166 = %1165.1;
    (%1166,)
  };
  %1167() /* ty=(Tensor[(8, 6, 7), float32],) */
}

def @func_13187(%var_13158: Tensor[(585), float64]) -> (Tensor[(8, 6, 7), float64], Tensor[(585), float64], Tensor[(585), float64], Tensor[(8, 6, 7), float64]) {
  %1168 = @func_12234() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1169 = cast(%var_13158, dtype="float64") /* ty=Tensor[(585), float64] */;
  %1170 = reshape(%1169, newshape=[585]) /* ty=Tensor[(585), float64] */;
  %1171 = @func_11650(%1170) /* ty=(Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(585), float64], Tensor[(585), float64]) */;
  %1172 = @func_8266() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1173 = %1168.1;
  %1174 = %1171.3;
  %1175 = %1172.0;
  (%1173, %1174, %var_13158, %1175)
}

def @func_15233() -> Tensor[(8, 6, 7), float64] {
  @func_12429() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_17168() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(585), float64]) {
  %1176 = cast(meta[relay.Constant][30] /* ty=Tensor[(585), float64] */, dtype="float64") /* ty=Tensor[(585), float64] */;
  %1177 = reshape(%1176, newshape=[585]) /* ty=Tensor[(585), float64] */;
  %1178 = @func_13187(%1177) /* ty=(Tensor[(8, 6, 7), float64], Tensor[(585), float64], Tensor[(585), float64], Tensor[(8, 6, 7), float64]) */;
  %1179 = cast(meta[relay.Constant][30] /* ty=Tensor[(585), float64] */, dtype="float64") /* ty=Tensor[(585), float64] */;
  %1180 = @func_6709() /* ty=Tensor[(8, 6, 7), float64] */;
  %1181 = %1178.3;
  %1182 = sigmoid(%1179) /* ty=Tensor[(585), float64] */;
  (%1180, %1181, %1182)
}

def @func_9741() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  @func_9739() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_16462() -> Tensor[(8, 6, 7), float64] {
  %1183 = fn () -> Tensor[(8, 6, 7), float64] {
    @func_7864() /* ty=Tensor[(8, 6, 7), float64] */
  };
  %1183() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_16213() -> (Tensor[(8, 6, 7), float64],) {
  @func_16211() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_6059() -> (Tensor[(8, 6, 7), float64],) {
  %1186 = fn () -> (Tensor[(8, 6, 7), float64],) {
    %1184 = @func_4658() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %1185 = %1184.0;
    (%1185,)
  };
  %1186() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_15490() -> (Tensor[(8, 6, 7), float64],) {
  @func_15488() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_14772() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  @func_14770() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_16414() -> Tensor[(8, 6, 7), float32] {
  %1187 = @func_8459() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32]) */;
  %1187.1
}

def @func_3317() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), bool]) {
  %1192 = fn () -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), bool]) {
    %1188 = @func_1013() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %1189 = @func_2002() /* ty=(Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64]) */;
    %1190 = %1188.0;
    %1191 = %1189.0;
    (%1190, %1191)
  };
  %1192() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), bool]) */
}

def @func_7583() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), float64]) {
  @func_7581() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), float64]) */
}

def @func_4517() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1203 = fn () -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
    %1193 = @func_2373() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %1194 = @func_3093() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %1195 = @func_1248() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %1196 = @func_2390() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %1197 = @func_4294() /* ty=Tensor[(8, 6, 7), float64] */;
    %1198 = %1193.0;
    %1199 = %1194.0;
    %1200 = %1195.1;
    %1201 = %1196.0;
    %1202 = @func_2799() /* ty=Tensor[(8, 6, 7), float64] */;
    (%1197, %1198, %1199, %1200, %1201, %1202)
  };
  %1203() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_19461() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 13, 5), float32], Tensor[(10, 52), float32], Tensor[(8, 6, 7), float64]) {
  %1216 = fn () -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 13, 5), float32], Tensor[(10, 52), float32], Tensor[(8, 6, 7), float64]) {
    %1204 = @func_7581() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), float64]) */;
    %1205 = @func_11954() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %1206 = @func_19028() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %1207 = cast(meta[relay.Constant][31] /* ty=Tensor[(10, 52), float32] */, dtype="float32") /* ty=Tensor[(10, 52), float32] */;
    %1208 = reshape(%1207, newshape=[8, 13, 5]) /* ty=Tensor[(8, 13, 5), float32] */;
    %1209 = @func_16547(%1208) /* ty=(Tensor[(8, 13, 5), float32],) */;
    %1210 = @func_14495() /* ty=(Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64]) */;
    %1211 = %1204.0;
    %1212 = %1205.0;
    %1213 = %1206.0;
    %1214 = %1209.0;
    %1215 = %1210.1;
    (%1211, %1212, %1213, %1214, meta[relay.Constant][31] /* ty=Tensor[(10, 52), float32] */, %1215)
  };
  %1216() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 13, 5), float32], Tensor[(10, 52), float32], Tensor[(8, 6, 7), float64]) */
}

def @func_6921(%var_6918: int16) -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(11, 1, 12), bool], int16, Tensor[(132, 1), int16]) {
  %1217 = @func_4658() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1218 = @func_868() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1219 = @func_2002() /* ty=(Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64]) */;
  %1220 = cast(%var_6918, dtype="int16") /* ty=int16 */;
  %1221 = cast(meta[relay.Constant][32] /* ty=Tensor[(132, 1), int16] */, dtype="int16") /* ty=Tensor[(132, 1), int16] */;
  %1222 = reshape(%1220, newshape=[]) /* ty=int16 */;
  %1223 = reshape(%1221, newshape=[11, 1, 12]) /* ty=Tensor[(11, 1, 12), int16] */;
  %1224 = @func_4108(%1222, %1223) /* ty=(Tensor[(11, 1, 12), bool],) */;
  %1225 = %1217.2;
  %1226 = %1218.0;
  %1227 = %1219.1;
  %1228 = @func_1033() /* ty=Tensor[(8, 6, 7), float64] */;
  %1229 = @func_1790() /* ty=Tensor[(8, 6, 7), float64] */;
  %1230 = %1224.0;
  (%1225, %1226, %1227, %1228, %1229, %1230, %var_6918, meta[relay.Constant][32] /* ty=Tensor[(132, 1), int16] */)
}

def @func_3826() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(13, 3, 15), float32], Tensor[(585), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1245 = fn () -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(13, 3, 15), float32], Tensor[(585), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
    %1231 = @func_2539() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %1232 = @func_3704() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %1233 = @func_1519() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %1234 = cast(meta[relay.Constant][33] /* ty=Tensor[(585), float64] */, dtype="float64") /* ty=Tensor[(585), float64] */;
    %1235 = reshape(%1234, newshape=[13, 3, 15]) /* ty=Tensor[(13, 3, 15), float64] */;
    %1236 = @func_1562(%1235) /* ty=(Tensor[(13, 3, 15), float32],) */;
    %1237 = @func_1311() /* ty=Tensor[(8, 6, 7), float64] */;
    %1238 = %1231.0;
    %1239 = %1232.0;
    %1240 = %1233.2;
    %1241 = %1236.0;
    %1242 = @func_1790() /* ty=Tensor[(8, 6, 7), float64] */;
    %1243 = @func_3412() /* ty=Tensor[(8, 6, 7), float64] */;
    %1244 = @func_1033() /* ty=Tensor[(8, 6, 7), float64] */;
    (%1237, %1238, %1239, %1240, %1241, meta[relay.Constant][33] /* ty=Tensor[(585), float64] */, %1242, %1243, %1244)
  };
  %1245() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(13, 3, 15), float32], Tensor[(585), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_7372() -> Tensor[(8, 6, 7), float64] {
  %1247 = fn () -> Tensor[(8, 6, 7), float64] {
    %1246 = @func_1413() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %1246.0
  };
  %1247() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_16017(%var_16011: Tensor[(3, 11, 8), uint8], %var_16012: Tensor[(3, 11, 8), uint8]) -> Tensor[(3, 11, 8), uint8] {
  %1248 = cast(%var_16012, dtype="uint8") /* ty=Tensor[(3, 11, 8), uint8] */;
  %1249 = shape_of(%var_16011, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1250 = cast(%var_16011, dtype="uint8") /* ty=Tensor[(3, 11, 8), uint8] */;
  %1251 = dyn.reshape(%1248, %1249, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  left_shift(%1250, %1251) /* ty=Tensor[(3, 11, 8), uint8] */
}

def @func_8475() -> (Tensor[(9, 3, 2), int32],) {
  %1254 = fn () -> (Tensor[(9, 3, 2), int32],) {
    %1252 = @func_6799() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(9, 3, 2), int32], Tensor[(54), int32]) */;
    %1253 = %1252.1;
    (%1253,)
  };
  %1254() /* ty=(Tensor[(9, 3, 2), int32],) */
}

def @func_18917() -> (Tensor[(585), bool], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1255 = @func_4786() /* ty=(Tensor[(585), bool], Tensor[(8, 6, 7), float64]) */;
  %1256 = @func_3316() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), bool]) */;
  %1257 = @func_5844() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1258 = %1255.0;
  %1259 = %1256.0;
  %1260 = %1257.0;
  (%1258, %1259, %1260)
}

def @func_11087() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  @func_11085() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_19848() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1261 = @func_1932() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1262 = @func_2683() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1263 = @func_8008() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1264 = %1261.0;
  %1265 = %1262.1;
  %1266 = %1263.2;
  (%1264, %1265, %1266)
}

def @func_3276() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  @func_3274() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_2988() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1267 = @func_1932() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1268 = @func_2683() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1269 = @func_1627() /* ty=Tensor[(8, 6, 7), float64] */;
  %1270 = %1267.0;
  %1271 = %1268.0;
  (%1269, %1270, %1271)
}

def @func_15976() -> (Tensor[(8, 6, 7), float64], Tensor[(585), float64], Tensor[(65, 9), float64]) {
  %1272 = @func_7140() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1273 = cast(meta[relay.Constant][34] /* ty=Tensor[(65, 9), float64] */, dtype="float64") /* ty=Tensor[(65, 9), float64] */;
  %1274 = reshape(%1273, newshape=[585]) /* ty=Tensor[(585), float64] */;
  %1275 = @func_11264(%1274) /* ty=(Tensor[(8, 6, 7), float64], Tensor[(13, 3, 15), float32], Tensor[(585), float64]) */;
  %1276 = %1272.0;
  %1277 = %1275.2;
  (%1276, %1277, meta[relay.Constant][34] /* ty=Tensor[(65, 9), float64] */)
}

def @func_12934() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(9, 3, 2), int32]) {
  %1286 = fn () -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(9, 3, 2), int32]) {
    %1278 = @func_8496() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %1279 = @func_4172() /* ty=(Tensor[(8, 6, 7), bool], Tensor[(1650), float32], Tensor[(8, 6, 7), float64], Tensor[(1650), float64]) */;
    %1280 = @func_8474() /* ty=(Tensor[(9, 3, 2), int32],) */;
    %1281 = %1278.0;
    %1282 = %1279.0;
    %1283 = @func_6709() /* ty=Tensor[(8, 6, 7), float64] */;
    %1284 = @func_10126() /* ty=Tensor[(8, 6, 7), float64] */;
    %1285 = %1280.0;
    (%1281, %1282, %1283, %1284, %1285)
  };
  %1286() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(9, 3, 2), int32]) */
}

def @func_2086() -> (Tensor[(8, 6, 7), float64],) {
  @func_2084() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_15896() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  @func_15894() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_16549(%var_16548: Tensor[(8, 13, 5), float32]) -> (Tensor[(8, 13, 5), float32],) {
  %1289 = fn (%var_16544: Tensor[(8, 13, 5), float32]) -> (Tensor[(8, 13, 5), float32],) {
    %1287 = cast(%var_16544, dtype="float32") /* ty=Tensor[(8, 13, 5), float32] */;
    %1288 = cosh(%1287) /* ty=Tensor[(8, 13, 5), float32] */;
    (%1288,)
  };
  %1289(%var_16548) /* ty=(Tensor[(8, 13, 5), float32],) */
}

def @func_3556(%var_3555: Tensor[(3, 3, 3), float64]) -> (Tensor[(3, 3, 3), uint32],) {
  %1297 = fn (%var_3537: Tensor[(3, 3, 3), float64]) -> (Tensor[(3, 3, 3), uint32],) {
    %1290 = cast(%var_3537, dtype="float64") /* ty=Tensor[(3, 3, 3), float64] */;
    %1291 = sigmoid(%1290) /* ty=Tensor[(3, 3, 3), float64] */;
    %1292 = cast(%1291, dtype="uint32") /* ty=Tensor[(3, 3, 3), uint32] */;
    %1293 = shape_of(%var_3537, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1294 = cast(%var_3537, dtype="uint32") /* ty=Tensor[(3, 3, 3), uint32] */;
    %1295 = dyn.reshape(%1292, %1293, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %1296 = logical_xor(%1294, %1295) /* ty=Tensor[(3, 3, 3), uint32] */;
    (%1296,)
  };
  %1297(%var_3555) /* ty=(Tensor[(3, 3, 3), uint32],) */
}

def @func_2222(%var_2220: float64, %var_2221: Tensor[(7, 3, 16), float64]) -> (Tensor[(7, 3, 16), float64],) {
  @func_2218(%var_2220, %var_2221) /* ty=(Tensor[(7, 3, 16), float64],) */
}

def @func_14066() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), bool]) {
  %1302 = fn () -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), bool]) {
    %1298 = @func_12984() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %1299 = @func_11220() /* ty=(Tensor[(8, 6, 7), bool],) */;
    %1300 = %1298.2;
    %1301 = %1299.0;
    (%1300, %1301)
  };
  %1302() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), bool]) */
}

def @func_16794() -> (Tensor[(8, 6, 7), float64],) {
  %1305 = fn () -> (Tensor[(8, 6, 7), float64],) {
    %1303 = @func_15158() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %1304 = %1303.0;
    (%1304,)
  };
  %1305() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_7500(%var_7498: Tensor[(14, 1, 16), float64], %var_7499: Tensor[(14, 7, 16), float64]) -> (Tensor[(8, 6, 7), float64], Tensor[(14, 7, 16), int32], Tensor[(8, 6, 7), float64], Tensor[(14, ?, 16), int32], Tensor[(14, ?, 16), int64]) {
  %1332 = fn (%var_7431: Tensor[(14, 1, 16), float64], %var_7449: Tensor[(14, 7, 16), float64]) -> (Tensor[(8, 6, 7), float64], Tensor[(14, 7, 16), int32], Tensor[(8, 6, 7), float64], Tensor[(14, ?, 16), int32], Tensor[(14, ?, 16), int64]) {
    %1306 = @func_6266() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %1307 = cast(%var_7431, dtype="int32") /* ty=Tensor[(14, 1, 16), int32] */;
    %1308 = cast(%var_7449, dtype="int32") /* ty=Tensor[(14, 7, 16), int32] */;
    %1309 = @func_5765() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %1310 = cast(%var_7431, dtype="float64") /* ty=Tensor[(14, 1, 16), float64] */;
    %1311 = acosh(%1310) /* ty=Tensor[(14, 1, 16), float64] */;
    %1312 = cast(%var_7431, dtype="uint8") /* ty=Tensor[(14, 1, 16), uint8] */;
    %1313 = shape_of(%1311, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1314 = cast(%1311, dtype="uint8") /* ty=Tensor[(14, 1, 16), uint8] */;
    %1315 = dyn.reshape(%1312, %1313, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %1316 = multiply(%1314, %1315) /* ty=Tensor[(14, ?, 16), uint8] */;
    %1317 = cast(%var_7431, dtype="int32") /* ty=Tensor[(14, 1, 16), int32] */;
    %1318 = shape_of(%1316, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1319 = cast(%1316, dtype="int32") /* ty=Tensor[(14, ?, 16), int32] */;
    %1320 = dyn.reshape(%1317, %1318, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %1321 = cast(%1311, dtype="float64") /* ty=Tensor[(14, 1, 16), float64] */;
    %1322 = sin(%1321) /* ty=Tensor[(14, 1, 16), float64] */;
    %1323 = cast(%1311, dtype="int64") /* ty=Tensor[(14, 1, 16), int64] */;
    %1324 = shape_of(%1322, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1325 = cast(%1322, dtype="int64") /* ty=Tensor[(14, 1, 16), int64] */;
    %1326 = dyn.reshape(%1323, %1324, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %1327 = %1306.0;
    %1328 = bitwise_or(%1307, %1308) /* ty=Tensor[(14, 7, 16), int32] */;
    %1329 = %1309.1;
    %1330 = bitwise_and(%1319, %1320) /* ty=Tensor[(14, ?, 16), int32] */;
    %1331 = maximum(%1325, %1326) /* ty=Tensor[(14, ?, 16), int64] */;
    (%1327, %1328, %1329, %1330, %1331)
  };
  %1332(%var_7498, %var_7499) /* ty=(Tensor[(8, 6, 7), float64], Tensor[(14, 7, 16), int32], Tensor[(8, 6, 7), float64], Tensor[(14, ?, 16), int32], Tensor[(14, ?, 16), int64]) */
}

def @func_13190(%var_13188: Tensor[(585), float64]) -> (Tensor[(8, 6, 7), float64], Tensor[(585), float64], Tensor[(585), float64], Tensor[(8, 6, 7), float64]) {
  @func_13187(%var_13188) /* ty=(Tensor[(8, 6, 7), float64], Tensor[(585), float64], Tensor[(585), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_10848() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  @func_10846() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_7595() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32]) {
  %1333 = @func_458() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1334 = %1333.0;
  %1335 = @func_7051() /* ty=Tensor[(8, 6, 7), float32] */;
  (%1334, %1335)
}

def @func_4786() -> (Tensor[(585), bool], Tensor[(8, 6, 7), float64]) {
  %1336 = @func_4620() /* ty=Tensor[(585), float64] */;
  %1337 = cast(meta[relay.Constant][35] /* ty=Tensor[(585), float64] */, dtype="bool") /* ty=Tensor[(585), bool] */;
  %1338 = shape_of(%1336, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1339 = cast(%1336, dtype="bool") /* ty=Tensor[(585), bool] */;
  %1340 = dyn.reshape(%1337, %1338, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1341 = @func_1013() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1342 = logical_or(%1339, %1340) /* ty=Tensor[(585), bool] */;
  %1343 = %1341.0;
  (%1342, %1343)
}

def @func_17659() -> (Tensor[(8, 6, 7), float64], Tensor[(6, 7, ?), float32], Tensor[(8, 6, 7), float64]) {
  %1365 = fn () -> (Tensor[(8, 6, 7), float64], Tensor[(6, 7, ?), float32], Tensor[(8, 6, 7), float64]) {
    %1344 = @func_7683() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %1345 = @func_11754() /* ty=Tensor[(6, 7, 1), float32] */;
    %1346 = cast(%1345, dtype="float64") /* ty=Tensor[(6, 7, 1), float64] */;
    %1347 = cos(%1346) /* ty=Tensor[(6, 7, 1), float64] */;
    %1348 = cast(%1345, dtype="float32") /* ty=Tensor[(6, 7, 1), float32] */;
    %1349 = sigmoid(%1348) /* ty=Tensor[(6, 7, 1), float32] */;
    %1350 = cast(%1349, dtype="int8") /* ty=Tensor[(6, 7, 1), int8] */;
    %1351 = shape_of(%1347, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1352 = cast(%1347, dtype="int8") /* ty=Tensor[(6, 7, 1), int8] */;
    %1353 = dyn.reshape(%1350, %1351, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %1354 = add(%1352, %1353) /* ty=Tensor[(6, 7, ?), int8] */;
    %1355 = cast(%1354, dtype="float32") /* ty=Tensor[(6, 7, ?), float32] */;
    %1356 = sqrt(%1355) /* ty=Tensor[(6, 7, ?), float32] */;
    %1357 = cast(%1354, dtype="float32") /* ty=Tensor[(6, 7, ?), float32] */;
    %1358 = shape_of(%1356, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1359 = cast(%1356, dtype="float32") /* ty=Tensor[(6, 7, ?), float32] */;
    %1360 = dyn.reshape(%1357, %1358, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1361 = @func_1013() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %1362 = %1344.1;
    %1363 = divide(%1359, %1360) /* ty=Tensor[(6, 7, ?), float32] */;
    %1364 = %1361.0;
    (%1362, %1363, %1364)
  };
  %1365() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(6, 7, ?), float32], Tensor[(8, 6, 7), float64]) */
}

def @func_13541() -> (Tensor[(8, 6, 7), float64],) {
  %1366 = @func_9683() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1367 = %1366.0;
  (%1367,)
}

def @func_9947() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32]) {
  @func_9945() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32]) */
}

def @func_8715() -> (Tensor[(8, 6, 7), float64],) {
  @func_8713() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_18306() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1368 = @func_3675() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1369 = @func_9608() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), bool]) */;
  %1370 = %1368.1;
  %1371 = %1369.0;
  (%1370, %1371)
}

def @func_1249() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1375 = fn () -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
    %1372 = @func_968() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %1373 = %1372.0;
    %1374 = @func_1033() /* ty=Tensor[(8, 6, 7), float64] */;
    (%1373, %1374)
  };
  %1375() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_3882() -> (Tensor[(8, 6, 7), float64],) {
  @func_3880() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_2391() -> (Tensor[(8, 6, 7), float64],) {
  %1377 = fn () -> (Tensor[(8, 6, 7), float64],) {
    %1376 = @func_1033() /* ty=Tensor[(8, 6, 7), float64] */;
    (%1376,)
  };
  %1377() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_6155() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1378 = @func_5986() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1379 = @func_502() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1380 = %1378.0;
  %1381 = %1379.0;
  (%1380, %1381)
}

def @func_18181() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  @func_18179() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_5299() -> (Tensor[(8, 6, 7), float64],) {
  %1383 = fn () -> (Tensor[(8, 6, 7), float64],) {
    %1382 = @func_1959() /* ty=Tensor[(8, 6, 7), float64] */;
    (%1382,)
  };
  %1383() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_13454() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1387 = fn () -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
    %1384 = @func_1752() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), bool]) */;
    %1385 = @func_4912() /* ty=Tensor[(8, 6, 7), float64] */;
    %1386 = %1384.2;
    (%1385, %1386)
  };
  %1387() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_969() -> (Tensor[(8, 6, 7), float64],) {
  %1399 = fn () -> (Tensor[(8, 6, 7), float64],) {
    %1388 = @func_458() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %1389 = %1388.0;
    %1390 = cast(%1389, dtype="float64") /* ty=Tensor[(8, 6, 7), float64] */;
    %1391 = acos(%1390) /* ty=Tensor[(8, 6, 7), float64] */;
    %1392 = @func_502() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %1393 = %1392.0;
    %1394 = cast(%1393, dtype="float64") /* ty=Tensor[(8, 6, 7), float64] */;
    %1395 = shape_of(%1391, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1396 = cast(%1391, dtype="float64") /* ty=Tensor[(8, 6, 7), float64] */;
    %1397 = dyn.reshape(%1394, %1395, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1398 = power(%1396, %1397) /* ty=Tensor[(8, 6, 7), float64] */;
    (%1398,)
  };
  %1399() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_2084() -> (Tensor[(8, 6, 7), float64],) {
  %1400 = @func_502() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1401 = %1400.0;
  (%1401,)
}

def @func_7102() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  @func_7100() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_10104() -> (Tensor[(8, 6, 7), float64],) {
  %1402 = @func_1959() /* ty=Tensor[(8, 6, 7), float64] */;
  (%1402,)
}

def @func_13775() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1406 = fn () -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
    %1403 = @func_4560() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %1404 = %1403.0;
    %1405 = @func_10546() /* ty=Tensor[(8, 6, 7), float64] */;
    (%1404, %1405)
  };
  %1406() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_18640() -> (Tensor[(13, 3, 15), float32], Tensor[(8, 6, 7), float64]) {
  @func_18638() /* ty=(Tensor[(13, 3, 15), float32], Tensor[(8, 6, 7), float64]) */
}

def @func_19580() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1407 = @func_16793() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1408 = @func_6315() /* ty=Tensor[(8, 6, 7), float64] */;
  %1409 = %1407.0;
  (%1408, %1409)
}

def @func_6871(%var_6870: Tensor[(54), int32]) -> (Tensor[(7, 11, 7), float32], Tensor[(9, 3, 2), int32], Tensor[(54), int32], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(1650), float32], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1428 = fn (%var_6814: Tensor[(54), int32]) -> (Tensor[(7, 11, 7), float32], Tensor[(9, 3, 2), int32], Tensor[(54), int32], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(1650), float32], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
    %1410 = cast(meta[relay.Constant][36] /* ty=Tensor[(7, 11, 7), float32] */, dtype="float32") /* ty=Tensor[(7, 11, 7), float32] */;
    %1411 = cast(%var_6814, dtype="int32") /* ty=Tensor[(54), int32] */;
    %1412 = cast(%var_6814, dtype="int32") /* ty=Tensor[(54), int32] */;
    %1413 = reshape(%1411, newshape=[9, 3, 2]) /* ty=Tensor[(9, 3, 2), int32] */;
    %1414 = reshape(%1412, newshape=[9, 3, 2]) /* ty=Tensor[(9, 3, 2), int32] */;
    %1415 = @func_5820(%1413, %1414) /* ty=(Tensor[(9, 3, 2), int32], Tensor[(8, 6, 7), float64]) */;
    %1416 = @func_4172() /* ty=(Tensor[(8, 6, 7), bool], Tensor[(1650), float32], Tensor[(8, 6, 7), float64], Tensor[(1650), float64]) */;
    %1417 = cast(meta[relay.Constant][37] /* ty=Tensor[(1650), float32] */, dtype="float32") /* ty=Tensor[(1650), float32] */;
    %1418 = reshape(%1417, newshape=[1650]) /* ty=Tensor[(1650), float32] */;
    %1419 = @func_3632(%1418) /* ty=(Tensor[(8, 6, 7), float64], Tensor[(10, 11, 15), float32], Tensor[(1650), float32]) */;
    %1420 = @func_735() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %1421 = @func_1932() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %1422 = acos(%1410) /* ty=Tensor[(7, 11, 7), float32] */;
    %1423 = %1415.0;
    %1424 = %1416.2;
    %1425 = %1419.0;
    %1426 = %1420.0;
    %1427 = %1421.0;
    (%1422, %1423, %var_6814, %1424, %1425, meta[relay.Constant][37] /* ty=Tensor[(1650), float32] */, %1426, %1427)
  };
  %1428(%var_6870) /* ty=(Tensor[(7, 11, 7), float32], Tensor[(9, 3, 2), int32], Tensor[(54), int32], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(1650), float32], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_1877() -> (Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), float64]) {
  %1429 = @func_1311() /* ty=Tensor[(8, 6, 7), float64] */;
  %1430 = cast(%1429, dtype="float32") /* ty=Tensor[(8, 6, 7), float32] */;
  %1431 = @func_502() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1432 = log2(%1430) /* ty=Tensor[(8, 6, 7), float32] */;
  %1433 = %1431.0;
  (%1432, %1433)
}

def @func_10966() -> (Tensor[(8, 6, 7), float64],) {
  %1434 = @func_10815() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1435 = %1434.1;
  (%1435,)
}

def @func_3414() -> Tensor[(8, 6, 7), float64] {
  @func_3412() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_4560() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1436 = @func_1877() /* ty=(Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), float64]) */;
  %1437 = @func_1013() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1438 = %1436.1;
  %1439 = %1437.0;
  (%1438, %1439)
}

def @func_12078() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  @func_12076() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_15330() -> (Tensor[(8, 6, 7), float64],) {
  %1442 = fn () -> (Tensor[(8, 6, 7), float64],) {
    %1440 = @func_13874() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %1441 = %1440.0;
    (%1441,)
  };
  %1442() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_18727() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1443 = @func_8266() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1444 = @func_15932() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1445 = @func_6666() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1446 = @func_7683() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1447 = @func_17746() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(15, 2, 5), int32], Tensor[(13, 150), bool]) */;
  %1448 = %1443.0;
  %1449 = %1444.0;
  %1450 = @func_12564() /* ty=Tensor[(8, 6, 7), float64] */;
  %1451 = %1445.1;
  %1452 = %1446.0;
  %1453 = %1447.1;
  (%1448, %1449, %1450, %1451, %1452, %1453)
}

def @func_10161() -> (Tensor[(8, 6, 7), float64],) {
  %1456 = fn () -> (Tensor[(8, 6, 7), float64],) {
    %1454 = @func_9118() /* ty=(Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %1455 = %1454.3;
    (%1455,)
  };
  %1456() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_16775() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), float64]) {
  %1457 = @func_14888() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1458 = @func_9945() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32]) */;
  %1459 = @func_10104() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1460 = %1457.0;
  %1461 = %1458.1;
  %1462 = %1459.0;
  (%1460, %1461, %1462)
}

def @func_1415() -> (Tensor[(8, 6, 7), float64],) {
  @func_1413() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_4294() -> Tensor[(8, 6, 7), float64] {
  %1463 = @func_3675() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1463.1
}

def @func_4341() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1468 = fn () -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
    %1464 = @func_3207() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %1465 = @func_3207() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %1466 = %1464.0;
    %1467 = %1465.1;
    (%1466, %1467)
  };
  %1468() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_15714() -> Tensor[(8, 6, 7), float64] {
  %1469 = @func_12519() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1469.0
}

def @func_10954() -> Tensor[(8, 6, 7), float64] {
  %1471 = fn () -> Tensor[(8, 6, 7), float64] {
    %1470 = @func_4560() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %1470.0
  };
  %1471() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_17475() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1484 = fn () -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
    %1472 = @func_13541() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %1473 = @func_1932() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %1474 = @func_1232() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %1475 = @func_13667() /* ty=(Tensor[(10, 11, 15), float32], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32]) */;
    %1476 = @func_15644() /* ty=Tensor[(8, 6, 7), float64] */;
    %1477 = @func_15644() /* ty=Tensor[(8, 6, 7), float64] */;
    %1478 = %1472.0;
    %1479 = @func_1033() /* ty=Tensor[(8, 6, 7), float64] */;
    %1480 = %1473.0;
    %1481 = %1474.1;
    %1482 = %1475.1;
    %1483 = @func_7935() /* ty=Tensor[(8, 6, 7), float64] */;
    (%1476, %1477, %1478, %1479, %1480, %1481, %1482, %1483)
  };
  %1484() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_19700() -> Tensor[(8, 6, 7), float64] {
  %1486 = fn () -> Tensor[(8, 6, 7), float64] {
    %1485 = @func_10632() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %1485.0
  };
  %1486() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_12866(%var_12864: Tensor[(585), float64]) -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(585), float64], Tensor[(585), float64]) {
  @func_12863(%var_12864) /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(585), float64], Tensor[(585), float64]) */
}

def @func_18983() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  @func_18981() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_18179() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1487 = @func_16071() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1488 = @func_10160() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1489 = %1487.1;
  %1490 = %1488.0;
  (%1489, %1490)
}

def @func_14573() -> Tensor[(8, 6, 7), float32] {
  %1492 = fn () -> Tensor[(8, 6, 7), float32] {
    %1491 = @func_7581() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), float64]) */;
    %1491.1
  };
  %1492() /* ty=Tensor[(8, 6, 7), float32] */
}

def @func_8165() -> Tensor[(8, 6, 7), float64] {
  %1494 = fn () -> Tensor[(8, 6, 7), float64] {
    %1493 = @func_4658() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %1493.1
  };
  %1494() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_11027() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(13, 3, 15), float32], Tensor[(8, 6, 7), float64]) {
  %1503 = fn () -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(13, 3, 15), float32], Tensor[(8, 6, 7), float64]) {
    %1495 = @func_868() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %1496 = @func_3825() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(13, 3, 15), float32], Tensor[(585), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %1497 = @func_3675() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %1498 = @func_10126() /* ty=Tensor[(8, 6, 7), float64] */;
    %1499 = @func_9169() /* ty=Tensor[(8, 6, 7), float64] */;
    %1500 = %1495.0;
    %1501 = %1496.4;
    %1502 = %1497.0;
    (%1498, %1499, %1500, %1501, %1502)
  };
  %1503() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(13, 3, 15), float32], Tensor[(8, 6, 7), float64]) */
}

def @func_19912(%var_19910: Tensor[(4, 2, 11), float32], %var_19911: Tensor[(4, 2, 11), float32]) -> (Tensor[(4, 2, 11), float32], Tensor[(8, 6, 7), float64]) {
  @func_19908(%var_19910, %var_19911) /* ty=(Tensor[(4, 2, 11), float32], Tensor[(8, 6, 7), float64]) */
}

def @func_19396() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(16, 10, 9), float64]) {
  %1509 = fn () -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(16, 10, 9), float64]) {
    %1504 = @func_15894() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %1505 = @func_18594() /* ty=(Tensor[(16, 10, 9), float64], Tensor[(8, 6, 7), float64]) */;
    %1506 = %1504.0;
    %1507 = @func_1045() /* ty=Tensor[(8, 6, 7), float64] */;
    %1508 = %1505.0;
    (%1506, %1507, %1508)
  };
  %1509() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(16, 10, 9), float64]) */
}

def @func_8094() -> Tensor[(8, 6, 7), float64] {
  %1510 = @func_8048() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1510.0
}

def @func_17119() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1511 = @func_10238() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1512 = @func_1013() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1513 = %1511.0;
  %1514 = %1512.0;
  (%1513, %1514)
}

def @func_16513() -> (Tensor[(8, 6, 7), float32], Tensor[(10, 6, 6), int32], Tensor[(60), float64], Tensor[(360), float64]) {
  @func_16511() /* ty=(Tensor[(8, 6, 7), float32], Tensor[(10, 6, 6), int32], Tensor[(60), float64], Tensor[(360), float64]) */
}

def @func_8498() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  @func_8496() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_2481() -> (Tensor[(8, 6, 7), float64],) {
  %1515 = @func_1413() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1516 = %1515.0;
  (%1516,)
}

def @func_7193() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1517 = @func_3207() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1518 = @func_4732() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1519 = %1517.1;
  %1520 = %1518.0;
  (%1519, %1520)
}

def @func_12299() -> (Tensor[(8, 6, 7), float64],) {
  %1521 = @func_1932() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1522 = %1521.0;
  (%1522,)
}

def @func_8009() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1529 = fn () -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
    %1523 = @func_7313() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %1524 = @func_868() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %1525 = @func_3146() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %1526 = %1523.0;
    %1527 = %1524.0;
    %1528 = %1525.1;
    (%1526, %1527, %1528)
  };
  %1529() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_16312(%var_16219: Tensor[(14, 8, 2), bool], %var_16220: Tensor[(14, 8, 2), bool], %var_16289: Tensor[(1650), float32]) -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(14, 8, 2), float32], Tensor[(8, 6, 7), float64], Tensor[(10, 11, 15), float32], Tensor[(1650), float32], Tensor[(8, 6, 7), float64], Tensor[(14, 8, 2), uint8], Tensor[(8, 6, 7), float64]) {
  %1530 = @func_2539() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1531 = cast(%var_16220, dtype="float32") /* ty=Tensor[(14, 8, 2), float32] */;
  %1532 = sin(%1531) /* ty=Tensor[(14, 8, 2), float32] */;
  %1533 = cast(%1532, dtype="float32") /* ty=Tensor[(14, 8, 2), float32] */;
  %1534 = @func_1752() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), bool]) */;
  %1535 = cast(%var_16289, dtype="float32") /* ty=Tensor[(1650), float32] */;
  %1536 = reshape(%1535, newshape=[1650]) /* ty=Tensor[(1650), float32] */;
  %1537 = @func_3632(%1536) /* ty=(Tensor[(8, 6, 7), float64], Tensor[(10, 11, 15), float32], Tensor[(1650), float32]) */;
  %1538 = @func_11085() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1539 = cast(%var_16220, dtype="bool") /* ty=Tensor[(14, 8, 2), bool] */;
  %1540 = shape_of(%var_16219, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1541 = cast(%var_16219, dtype="bool") /* ty=Tensor[(14, 8, 2), bool] */;
  %1542 = dyn.reshape(%1539, %1540, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1543 = logical_or(%1541, %1542) /* ty=Tensor[(14, 8, 2), bool] */;
  %1544 = cast(%1543, dtype="uint8") /* ty=Tensor[(14, 8, 2), uint8] */;
  %1545 = shape_of(%var_16219, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1546 = cast(%var_16219, dtype="uint8") /* ty=Tensor[(14, 8, 2), uint8] */;
  %1547 = dyn.reshape(%1544, %1545, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1548 = @func_8164() /* ty=Tensor[(8, 6, 7), float64] */;
  %1549 = %1530.0;
  %1550 = rsqrt(%1533) /* ty=Tensor[(14, 8, 2), float32] */;
  %1551 = %1534.0;
  %1552 = %1537.1;
  %1553 = %1538.0;
  %1554 = subtract(%1546, %1547) /* ty=Tensor[(14, 8, 2), uint8] */;
  %1555 = @func_8131() /* ty=Tensor[(8, 6, 7), float64] */;
  (%1548, %1549, %1550, %1551, %1552, %var_16289, %1553, %1554, %1555)
}

def @func_13009() -> (Tensor[(10, 11, 15), float32], Tensor[(8, 6, 7), bool], Tensor[(585), float64]) {
  %1562 = fn () -> (Tensor[(10, 11, 15), float32], Tensor[(8, 6, 7), bool], Tensor[(585), float64]) {
    %1556 = @func_11663() /* ty=(Tensor[(10, 11, 15), float32],) */;
    %1557 = cast(meta[relay.Constant][38] /* ty=Tensor[(585), float64] */, dtype="float64") /* ty=Tensor[(585), float64] */;
    %1558 = reshape(%1557, newshape=[585]) /* ty=Tensor[(585), float64] */;
    %1559 = @func_4873(%1558) /* ty=(Tensor[(585), bool], Tensor[(585), float64], Tensor[(8, 6, 7), bool], Tensor[(8, 6, 7), float64]) */;
    %1560 = %1556.0;
    %1561 = %1559.2;
    (%1560, %1561, meta[relay.Constant][38] /* ty=Tensor[(585), float64] */)
  };
  %1562() /* ty=(Tensor[(10, 11, 15), float32], Tensor[(8, 6, 7), bool], Tensor[(585), float64]) */
}

def @func_10003() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  @func_10001() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_17950(%var_17895: Tensor[(4, 20), float64], %var_17910: Tensor[(4, 20), float64]) -> (Tensor[(8, 6, 7), float64], Tensor[(2, 2, 5), float64], Tensor[(4, 20), int16], Tensor[(8, 6, 7), float64], Tensor[(4, 20), bool], Tensor[(4, 20), bool], Tensor[(2, 2, 5), float64], Tensor[(8, 6, 7), float64]) {
  %1563 = @func_10270() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1564 = cast(meta[relay.Constant][39] /* ty=Tensor[(1, 20), float64] */, dtype="float64") /* ty=Tensor[(1, 20), float64] */;
  %1565 = reshape(%1564, newshape=[20]) /* ty=Tensor[(20), float64] */;
  %1566 = @func_12637(%1565) /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(2, 2, 5), float64], Tensor[(20), float64]) */;
  %1567 = cast(meta[relay.Constant][39] /* ty=Tensor[(1, 20), float64] */, dtype="int16") /* ty=Tensor[(1, 20), int16] */;
  %1568 = cast(%var_17895, dtype="int16") /* ty=Tensor[(4, 20), int16] */;
  %1569 = @func_3274() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1570 = cast(meta[relay.Constant][39] /* ty=Tensor[(1, 20), float64] */, dtype="float64") /* ty=Tensor[(1, 20), float64] */;
  %1571 = asin(%1570) /* ty=Tensor[(1, 20), float64] */;
  %1572 = cast(%1571, dtype="bool") /* ty=Tensor[(1, 20), bool] */;
  %1573 = cast(%var_17910, dtype="bool") /* ty=Tensor[(4, 20), bool] */;
  %1574 = cast(%var_17910, dtype="uint8") /* ty=Tensor[(4, 20), uint8] */;
  %1575 = shape_of(%var_17895, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1576 = cast(%var_17895, dtype="uint8") /* ty=Tensor[(4, 20), uint8] */;
  %1577 = dyn.reshape(%1574, %1575, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %1578 = left_shift(%1576, %1577) /* ty=Tensor[(4, 20), uint8] */;
  %1579 = cast(%1571, dtype="bool") /* ty=Tensor[(1, 20), bool] */;
  %1580 = cast(%1578, dtype="bool") /* ty=Tensor[(4, 20), bool] */;
  %1581 = cast(%1571, dtype="float64") /* ty=Tensor[(1, 20), float64] */;
  %1582 = reshape(%1581, newshape=[2, 2, 5]) /* ty=Tensor[(2, 2, 5), float64] */;
  %1583 = @func_5923(%1582) /* ty=(Tensor[(2, 2, 5), float64], Tensor[(8, 6, 7), float64]) */;
  %1584 = @func_13308() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(20), float64], Tensor[(8, 6, 7), float64]) */;
  %1585 = %1563.0;
  %1586 = %1566.2;
  %1587 = bitwise_and(%1567, %1568) /* ty=Tensor[(4, 20), int16] */;
  %1588 = %1569.0;
  %1589 = greater_equal(%1572, %1573) /* ty=Tensor[(4, 20), bool] */;
  %1590 = not_equal(%1579, %1580) /* ty=Tensor[(4, 20), bool] */;
  %1591 = %1583.0;
  %1592 = %1584.3;
  (%1585, %1586, %1587, %1588, %1589, %1590, %1591, %1592)
}

def @func_14148() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32]) {
  %1599 = fn () -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32]) {
    %1593 = @func_8266() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %1594 = @func_9683() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %1595 = @func_7581() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), float64]) */;
    %1596 = %1593.0;
    %1597 = %1594.1;
    %1598 = %1595.1;
    (%1596, %1597, %1598)
  };
  %1599() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32]) */
}

def @func_7866() -> Tensor[(8, 6, 7), float64] {
  @func_7864() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_15398() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1600 = @func_11190() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1601 = @func_2373() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1602 = %1600.0;
  %1603 = %1601.1;
  %1604 = @func_7371() /* ty=Tensor[(8, 6, 7), float64] */;
  %1605 = @func_14436() /* ty=Tensor[(8, 6, 7), float64] */;
  (%1602, %1603, %1604, %1605)
}

def @func_20133() -> Tensor[(15, 2, 5), int32] {
  %1606 = @func_17746() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(15, 2, 5), int32], Tensor[(13, 150), bool]) */;
  %1606.3
}

def @func_14946() -> Tensor[(8, 6, 7), float64] {
  %1607 = @func_8496() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1607.1
}

def @func_16608() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1608 = @func_16120() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1609 = @func_7749() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1610 = %1608.1;
  %1611 = %1609.0;
  (%1610, %1611)
}

def @func_16317(%var_16314: Tensor[(14, 8, 2), bool], %var_16315: Tensor[(14, 8, 2), bool], %var_16316: Tensor[(1650), float32]) -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(14, 8, 2), float32], Tensor[(8, 6, 7), float64], Tensor[(10, 11, 15), float32], Tensor[(1650), float32], Tensor[(8, 6, 7), float64], Tensor[(14, 8, 2), uint8], Tensor[(8, 6, 7), float64]) {
  @func_16312(%var_16314, %var_16315, %var_16316) /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(14, 8, 2), float32], Tensor[(8, 6, 7), float64], Tensor[(10, 11, 15), float32], Tensor[(1650), float32], Tensor[(8, 6, 7), float64], Tensor[(14, 8, 2), uint8], Tensor[(8, 6, 7), float64]) */
}

def @func_15932() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1612 = @func_7140() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1613 = @func_8878() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1614 = %1612.0;
  %1615 = %1613.0;
  (%1614, %1615)
}

def @func_7548(%var_7539: Tensor[(6, 10, 6), uint16]) -> (Tensor[(6, 10, 6), bool], Tensor[(8, 6, 7), float64]) {
  %1616 = cast(meta[relay.Constant][40] /* ty=Tensor[(6, 10, 6), uint16] */, dtype="bool") /* ty=Tensor[(6, 10, 6), bool] */;
  %1617 = shape_of(%var_7539, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1618 = cast(%var_7539, dtype="bool") /* ty=Tensor[(6, 10, 6), bool] */;
  %1619 = dyn.reshape(%1616, %1617, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1620 = @func_4966() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1621 = not_equal(%1618, %1619) /* ty=Tensor[(6, 10, 6), bool] */;
  %1622 = %1620.0;
  (%1621, %1622)
}

def @func_3207() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1623 = @func_2084() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1624 = @func_2084() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1625 = %1623.0;
  %1626 = %1624.0;
  (%1625, %1626)
}

def @func_3676() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1633 = fn () -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
    %1627 = @func_2683() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %1628 = @func_502() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %1629 = @func_2481() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %1630 = %1627.2;
    %1631 = %1628.0;
    %1632 = %1629.0;
    (%1630, %1631, %1632)
  };
  %1633() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_15529() -> (Tensor[(8, 6, 7), float64], Tensor[(2, 2, 5), float64], Tensor[(20), float64]) {
  %1640 = fn () -> (Tensor[(8, 6, 7), float64], Tensor[(2, 2, 5), float64], Tensor[(20), float64]) {
    %1634 = @func_13308() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(20), float64], Tensor[(8, 6, 7), float64]) */;
    %1635 = cast(meta[relay.Constant][41] /* ty=Tensor[(20), float64] */, dtype="float64") /* ty=Tensor[(20), float64] */;
    %1636 = reshape(%1635, newshape=[20]) /* ty=Tensor[(20), float64] */;
    %1637 = @func_12637(%1636) /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(2, 2, 5), float64], Tensor[(20), float64]) */;
    %1638 = %1634.0;
    %1639 = %1637.2;
    (%1638, %1639, meta[relay.Constant][41] /* ty=Tensor[(20), float64] */)
  };
  %1640() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(2, 2, 5), float64], Tensor[(20), float64]) */
}

def @func_3581() -> Tensor[(8, 6, 7), float64] {
  %1642 = fn () -> Tensor[(8, 6, 7), float64] {
    %1641 = @func_502() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %1641.0
  };
  %1642() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_9231(%var_9230: uint32) -> (Tensor[(8, 6, 7), float64], Tensor[(5, 4, ?), int32], uint32, Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1653 = fn (%var_9200: uint32) -> (Tensor[(8, 6, 7), float64], Tensor[(5, 4, ?), int32], uint32, Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
    %1643 = @func_6058() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %1644 = cast(%var_9200, dtype="uint32") /* ty=uint32 */;
    %1645 = reshape(%1644, newshape=[]) /* ty=uint32 */;
    %1646 = @func_5379(%1645) /* ty=(Tensor[(8, 6, 7), bool], Tensor[(3, 3, 3), uint32], Tensor[(27, 1), float64], Tensor[(5, 4, ?), int32]) */;
    %1647 = @func_7683() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %1648 = @func_6495() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %1649 = %1643.0;
    %1650 = %1646.3;
    %1651 = %1647.1;
    %1652 = %1648.2;
    (%1649, %1650, %var_9200, %1651, %1652)
  };
  %1653(%var_9230) /* ty=(Tensor[(8, 6, 7), float64], Tensor[(5, 4, ?), int32], uint32, Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_18467(%var_18463: Tensor[(216), float64]) -> (Tensor[(8, 6, 7), float64], Tensor[(12, 2, 9), float64], Tensor[(216), float64]) {
  %1654 = @func_17746() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(15, 2, 5), int32], Tensor[(13, 150), bool]) */;
  %1655 = cast(%var_18463, dtype="float64") /* ty=Tensor[(216), float64] */;
  %1656 = cast(%var_18463, dtype="float64") /* ty=Tensor[(216), float64] */;
  %1657 = reshape(%1655, newshape=[12, 2, 9]) /* ty=Tensor[(12, 2, 9), float64] */;
  %1658 = reshape(%1656, newshape=[12, 2, 9]) /* ty=Tensor[(12, 2, 9), float64] */;
  %1659 = %1654.1;
  %1660 = @func_16583(%1657, %1658) /* ty=Tensor[(12, 2, 9), float64] */;
  (%1659, %1660, %var_18463)
}

def @func_7052() -> Tensor[(8, 6, 7), float32] {
  %1662 = fn () -> Tensor[(8, 6, 7), float32] {
    %1661 = @func_5557() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32]) */;
    %1661.1
  };
  %1662() /* ty=Tensor[(8, 6, 7), float32] */
}

def @func_15978() -> (Tensor[(8, 6, 7), float64], Tensor[(585), float64], Tensor[(65, 9), float64]) {
  @func_15976() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(585), float64], Tensor[(65, 9), float64]) */
}

def @func_19850() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  @func_19848() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_19229() -> Tensor[(8, 6, 7), float64] {
  %1663 = fn () -> Tensor[(8, 6, 7), float64] {
    @func_15267() /* ty=Tensor[(8, 6, 7), float64] */
  };
  %1663() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_8242() -> (Tensor[(8, 6, 7), float64],) {
  %1664 = @func_5298() /* ty=(Tensor[(8, 6, 7), float64],) */;
  %1665 = %1664.0;
  (%1665,)
}

def @func_9684() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1669 = fn () -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
    %1666 = @func_5844() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %1667 = %1666.0;
    %1668 = @func_2860() /* ty=Tensor[(8, 6, 7), float64] */;
    (%1667, %1668)
  };
  %1669() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_4660() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  @func_4658() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */
}

def @func_12022() -> (Tensor[(8, 6, 7), float64],) {
  %1672 = fn () -> (Tensor[(8, 6, 7), float64],) {
    %1670 = @func_8713() /* ty=(Tensor[(8, 6, 7), float64],) */;
    %1671 = %1670.0;
    (%1671,)
  };
  %1672() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_12170() -> Tensor[(8, 6, 7), float64] {
  %1673 = fn () -> Tensor[(8, 6, 7), float64] {
    @func_8036() /* ty=Tensor[(8, 6, 7), float64] */
  };
  %1673() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_7100() -> (Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) {
  %1674 = @func_4698() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1675 = @func_1519() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1676 = %1674.1;
  %1677 = %1675.0;
  %1678 = @func_1045() /* ty=Tensor[(8, 6, 7), float64] */;
  (%1676, %1677, %1678)
}

def @func_11652(%var_11651: Tensor[(585), float64]) -> (Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(585), float64], Tensor[(585), float64]) {
  %1688 = fn (%var_11640: Tensor[(585), float64]) -> (Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(585), float64], Tensor[(585), float64]) {
    %1679 = @func_1752() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), bool]) */;
    %1680 = @func_9739() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
    %1681 = cast(%var_11640, dtype="float64") /* ty=Tensor[(585), float64] */;
    %1682 = reshape(%1681, newshape=[585]) /* ty=Tensor[(585), float64] */;
    %1683 = @func_11264(%1682) /* ty=(Tensor[(8, 6, 7), float64], Tensor[(13, 3, 15), float32], Tensor[(585), float64]) */;
    %1684 = %1679.5;
    %1685 = %1680.1;
    %1686 = @func_8131() /* ty=Tensor[(8, 6, 7), float64] */;
    %1687 = %1683.2;
    (%1684, %1685, %1686, %1687, %var_11640)
  };
  %1688(%var_11651) /* ty=(Tensor[(8, 6, 7), float32], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64], Tensor[(585), float64], Tensor[(585), float64]) */
}

def @func_13026() -> (Tensor[(8, 6, 7), float64],) {
  %1689 = @func_7371() /* ty=Tensor[(8, 6, 7), float64] */;
  (%1689,)
}

def @func_13076(%var_13074: Tensor[(7, 12, 10), float32]) -> Tensor[(7, 12, 10), float32] {
  @func_13073(%var_13074) /* ty=Tensor[(7, 12, 10), float32] */
}

def @func_7864() -> Tensor[(8, 6, 7), float64] {
  %1690 = @func_2586() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1690.0
}

def @func_18142() -> (Tensor[(8, 6, 7), float64],) {
  %1691 = @func_8728() /* ty=(Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float64]) */;
  %1692 = %1691.0;
  (%1692,)
}

def @func_12451(%var_12450: Tensor[(8, 4, 3), float64]) -> Tensor[(8, 4, 3), float64] {
  %1694 = fn (%var_12444: Tensor[(8, 4, 3), float64]) -> Tensor[(8, 4, 3), float64] {
    %1693 = cast(%var_12444, dtype="float64") /* ty=Tensor[(8, 4, 3), float64] */;
    cosh(%1693) /* ty=Tensor[(8, 4, 3), float64] */
  };
  %1694(%var_12450) /* ty=Tensor[(8, 4, 3), float64] */
}

def @func_14288() -> Tensor[(8, 6, 7), float64] {
  %1695 = fn () -> Tensor[(8, 6, 7), float64] {
    @func_3709() /* ty=Tensor[(8, 6, 7), float64] */
  };
  %1695() /* ty=Tensor[(8, 6, 7), float64] */
}

def @func_8244() -> (Tensor[(8, 6, 7), float64],) {
  @func_8242() /* ty=(Tensor[(8, 6, 7), float64],) */
}

def @func_13669() -> (Tensor[(10, 11, 15), float32], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32]) {
  @func_13667() /* ty=(Tensor[(10, 11, 15), float32], Tensor[(8, 6, 7), float64], Tensor[(8, 6, 7), float32]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen672/build/output.py:6731: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen672/build/output.py", line 6736, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(1024) tvmgen_default_fused_cast_cast_reshape_less_equal_kernel0(signed char* __restrict__ T_less_equal, uint64_t* __restrict__ placeholder, uint64_t* __restrict__ placeholder1) {
  if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 1200) {
    T_less_equal[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = ((signed char)(((bool)placeholder[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))]) <= ((bool)placeholder1[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))])));
  }
}

extern "C" __global__ void __launch_bounds__(1024) tvmgen_default_fused_cast_greater_kernel0(signed char* __restrict__ T_greater, signed char* __restrict__ placeholder, uint64_t* __restrict__ placeholder1) {
  if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 1200) {
    T_greater[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = ((signed char)(((bool)placeholder[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))]) < ((bool)placeholder1[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))])));
  }
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


==========mod==========
#[version = "0.0.5"]
def @func_7945() -> Tensor[(2, 8, 2), bool] {
  %0 = @func_3493() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %0.1
}

def @func_5156() -> Tensor[(2, 8, 2), uint32] {
  %1 = @func_3661() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %2 = %1.0;
  %3 = cast(meta[relay.Constant][0] /* ty=Tensor[(2, 8, 2), bool] */, dtype="uint32") /* ty=Tensor[(2, 8, 2), uint32] */;
  %4 = shape_of(%2, dtype="int32") /* ty=Tensor[(3), int32] */;
  %5 = cast(%2, dtype="uint32") /* ty=Tensor[(2, 8, 2), uint32] */;
  %6 = dyn.reshape(%3, %4, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  right_shift(%5, %6) /* ty=Tensor[(2, 8, 2), uint32] */
}

def @func_7539() -> Tensor[(2, 8, 2), bool] {
  @func_6428() /* ty=Tensor[(2, 8, 2), bool] */
}

def @func_15856(%var_15848: Tensor[(4, 364), float32]) -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(4, 364), int32]) {
  %7 = @func_10185() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), int8]) */;
  %8 = @func_7471() /* ty=(Tensor[(90), float64], Tensor[(4, 364), float32], Tensor[(660, 2), float32], Tensor[(2, 8, 2), bool]) */;
  %9 = %8.1;
  %10 = cast(%var_15848, dtype="int32") /* ty=Tensor[(4, 364), int32] */;
  %11 = shape_of(%9, dtype="int32") /* ty=Tensor[(2), int32] */;
  %12 = cast(%9, dtype="int32") /* ty=Tensor[(4, 364), int32] */;
  %13 = dyn.reshape(%10, %11, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %14 = @func_13917() /* ty=Tensor[(2, 8, 2), bool] */;
  %15 = @func_4042() /* ty=Tensor[(2, 8, 2), bool] */;
  %16 = %7.0;
  %17 = bitwise_or(%12, %13) /* ty=Tensor[(4, 364), int32] */;
  (%14, %15, %16, %17)
}

def @func_3661() -> (Tensor[(2, 8, 2), bool],) {
  %18 = @func_3493() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %19 = %18.1;
  (%19,)
}

def @func_3907() -> (Tensor[(2, 8, 2), bool],) {
  %20 = @func_3701() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %21 = %20.0;
  (%21,)
}

def @func_11218() -> Tensor[(2, 8, 2), bool] {
  %22 = @func_10086() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %22.1
}

def @func_3616(%var_3601: Tensor[(6, 3, 5), float64]) -> Tensor[(6, 3, 5), float64] {
  %23 = cast(%var_3601, dtype="float64") /* ty=Tensor[(6, 3, 5), float64] */;
  acosh(%23) /* ty=Tensor[(6, 3, 5), float64] */
}

def @func_11912() -> (Tensor[(1456), float32], Tensor[(2, 8, 2), float32]) {
  %24 = @func_11635() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(1456), float32]) */;
  %25 = @func_11715() /* ty=(Tensor[(2, 8, 2), float32],) */;
  %26 = %24.2;
  %27 = %25.0;
  (%26, %27)
}

def @func_11417() -> Tensor[(2, 8, 2), bool] {
  %28 = @func_3661() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %28.0
}

def @func_12553() -> Tensor[(2, 8, 2), bool] {
  @func_10095() /* ty=Tensor[(2, 8, 2), bool] */
}

def @func_14182() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), int16]) {
  %29 = @func_7267() /* ty=Tensor[(2, 8, 2), bool] */;
  %30 = cast(%29, dtype="bool") /* ty=Tensor[(2, 8, 2), bool] */;
  %31 = reshape(%30, newshape=[2, 8, 2]) /* ty=Tensor[(2, 8, 2), bool] */;
  %32 = @func_6568(%31) /* ty=(Tensor[(2, 8, 2), int16], Tensor[(2, 8, 2), bool]) */;
  %33 = %32.0;
  (%29, %33)
}

def @func_15647(%var_15610: Tensor[(1320), float64], %var_15612: Tensor[(588), float64]) -> (Tensor[(2, 8, 2), bool], Tensor[(1320), float64], Tensor[(1456), float32], Tensor[(588), float64], Tensor[(18, 42), float64], Tensor[(9, 60), float32], Tensor[(2, 8, 2), uint32], Tensor[(2, 8, 2), bool]) {
  %34 = @func_13145() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %35 = cast(%var_15610, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %36 = cast(meta[relay.Constant][1] /* ty=Tensor[(1456), float32] */, dtype="float32") /* ty=Tensor[(1456), float32] */;
  %37 = cast(%var_15612, dtype="float64") /* ty=Tensor[(588), float64] */;
  %38 = cast(meta[relay.Constant][2] /* ty=Tensor[(18, 42), float64] */, dtype="float64") /* ty=Tensor[(18, 42), float64] */;
  %39 = reshape(%35, newshape=[1320]) /* ty=Tensor[(1320), float64] */;
  %40 = reshape(%36, newshape=[1456]) /* ty=Tensor[(1456), float32] */;
  %41 = reshape(%37, newshape=[588]) /* ty=Tensor[(588), float64] */;
  %42 = reshape(%38, newshape=[756]) /* ty=Tensor[(756), float64] */;
  %43 = @func_6129(%39, %40, %41, %42) /* ty=(Tensor[(2, 8, 2), uint32], Tensor[(2, 8, 2), int8], Tensor[(1320), float64], Tensor[(1456), float32], Tensor[(792), int8], Tensor[(5, 4, 8), int16], Tensor[(160), int16], Tensor[(792), int8], Tensor[(588), float64], Tensor[(5, 12, 9), float64], Tensor[(1008), float64], Tensor[(756), float64], Tensor[(9, 60), float64]) */;
  %44 = %43.12;
  %45 = cast(%44, dtype="float32") /* ty=Tensor[(9, 60), float32] */;
  %46 = %34.1;
  %47 = acos(%45) /* ty=Tensor[(9, 60), float32] */;
  %48 = @func_5156() /* ty=Tensor[(2, 8, 2), uint32] */;
  %49 = @func_12855() /* ty=Tensor[(2, 8, 2), bool] */;
  (%46, %var_15610, meta[relay.Constant][1] /* ty=Tensor[(1456), float32] */, %var_15612, meta[relay.Constant][2] /* ty=Tensor[(18, 42), float64] */, %47, %48, %49)
}

def @func_15998() -> (Tensor[(2, 8, 2), bool],) {
  %50 = @func_11873() /* ty=Tensor[(2, 8, 2), bool] */;
  (%50,)
}

def @func_6670(%var_6621: Tensor[(1320), float64], %var_6624: Tensor[(588), float64], %var_6625: Tensor[(90), float64]) -> (Tensor[(2, 8, 2), int8], Tensor[(2, 8, 2), bool], Tensor[(588), float64], Tensor[(1320), float64], Tensor[(1456), float32], Tensor[(792), int8], Tensor[(588), float64], Tensor[(90), float64], Tensor[(2, 8, 2), bool]) {
  %51 = @func_5603() /* ty=(Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), int8]) */;
  %52 = cast(%var_6621, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %53 = cast(meta[relay.Constant][3] /* ty=Tensor[(1456), float32] */, dtype="float32") /* ty=Tensor[(1456), float32] */;
  %54 = cast(meta[relay.Constant][4] /* ty=Tensor[(792), int8] */, dtype="int8") /* ty=Tensor[(792), int8] */;
  %55 = cast(%var_6624, dtype="float64") /* ty=Tensor[(588), float64] */;
  %56 = cast(%var_6625, dtype="float64") /* ty=Tensor[(90), float64] */;
  %57 = reshape(%52, newshape=[1320]) /* ty=Tensor[(1320), float64] */;
  %58 = reshape(%53, newshape=[1456]) /* ty=Tensor[(1456), float32] */;
  %59 = reshape(%54, newshape=[792]) /* ty=Tensor[(792), int8] */;
  %60 = reshape(%55, newshape=[588]) /* ty=Tensor[(588), float64] */;
  %61 = reshape(%56, newshape=[3, 30]) /* ty=Tensor[(3, 30), float64] */;
  %62 = @func_5792(%57, %58, %59, %60, %61) /* ty=(Tensor[(2, 8, 2), int8], Tensor[(792), int8], Tensor[(1320), float64], Tensor[(1456), float32], Tensor[(792), int8], Tensor[(1, 588), float64], Tensor[(588), float64], Tensor[(6, 3, 5), float64], Tensor[(3, 30), float64], Tensor[(588), float64]) */;
  %63 = @func_6180() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(6, 3, 5), float64], Tensor[(90), float64]) */;
  %64 = %51.1;
  %65 = @func_4086() /* ty=Tensor[(2, 8, 2), bool] */;
  %66 = %62.9;
  %67 = %63.0;
  (%64, %65, %66, %var_6621, meta[relay.Constant][3] /* ty=Tensor[(1456), float32] */, meta[relay.Constant][4] /* ty=Tensor[(792), int8] */, %var_6624, %var_6625, %67)
}

def @func_7733() -> Tensor[(2, 8, 2), bool] {
  @func_6382() /* ty=Tensor[(2, 8, 2), bool] */
}

def @func_7173(%var_7157: Tensor[(18, 30), float64], %var_7166: Tensor[(792), int8]) -> (Tensor[(2, 8, 2), uint32], Tensor[(5, 12, 9), float64], Tensor[(18, 30), float64], Tensor[(2, 8, 2), float32], Tensor[(792), int8]) {
  %68 = @func_7102() /* ty=(Tensor[(2, 8, 2), uint32], Tensor[(2, 8, 2), float32], Tensor[(4, 364), float32]) */;
  %69 = cast(%var_7157, dtype="float64") /* ty=Tensor[(18, 30), float64] */;
  %70 = reshape(%69, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %71 = @func_4004(%70) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(5, 12, 9), float64], Tensor[(540), float64]) */;
  %72 = cast(%var_7166, dtype="int8") /* ty=Tensor[(792), int8] */;
  %73 = reshape(%72, newshape=[792]) /* ty=Tensor[(792), int8] */;
  %74 = @func_5553(%73) /* ty=(Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), int8], Tensor[(6, 220), float64], Tensor[(1456), float32], Tensor[(792), int8], Tensor[(2, 8, 2), bool], Tensor[(1456), float32], Tensor[(6, 3, 5), float64], Tensor[(45, 2), float64], Tensor[(396), float32], Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), int8]) */;
  %75 = %68.0;
  %76 = %71.1;
  %77 = %74.11;
  (%75, %76, %var_7157, %77, %var_7166)
}

def @func_5603() -> (Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), int8]) {
  %78 = @func_5125() /* ty=(Tensor[(2, 8, 2), float32],) */;
  %79 = %78.0;
  %80 = @func_4593() /* ty=Tensor[(2, 8, 2), int8] */;
  (%79, %80)
}

def @func_5230(%var_5186: Tensor[(660, 2), float64], %var_5214: Tensor[(8, 182), float32], %var_5225: Tensor[(792), int8]) -> (Tensor[(2, 8, 2), bool], Tensor[(660, 2), float64], Tensor[(2, 8, 2), bool], Tensor[(8, 182), uint16], Tensor[(2, 8, 2), int8], Tensor[(1456), float32], Tensor[(792), int8]) {
  %81 = @func_3493() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %82 = %81.0;
  %83 = cast(%82, dtype="bool") /* ty=Tensor[(2, 8, 2), bool] */;
  %84 = cast(meta[relay.Constant][5] /* ty=Tensor[(8, 182), float32] */, dtype="float32") /* ty=Tensor[(8, 182), float32] */;
  %85 = reshape(%83, newshape=[2, 8, 2]) /* ty=Tensor[(2, 8, 2), bool] */;
  %86 = reshape(%84, newshape=[1456]) /* ty=Tensor[(1456), float32] */;
  %87 = @func_3555(%85, %86) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(660, 2), float64], Tensor[(1456), float32]) */;
  %88 = %87.1;
  %89 = cast(%var_5186, dtype="float64") /* ty=Tensor[(660, 2), float64] */;
  %90 = shape_of(%88, dtype="int32") /* ty=Tensor[(2), int32] */;
  %91 = cast(%88, dtype="float64") /* ty=Tensor[(660, 2), float64] */;
  %92 = dyn.reshape(%89, %90, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %93 = cast(%82, dtype="bool") /* ty=Tensor[(2, 8, 2), bool] */;
  %94 = cast(meta[relay.Constant][5] /* ty=Tensor[(8, 182), float32] */, dtype="float32") /* ty=Tensor[(8, 182), float32] */;
  %95 = reshape(%93, newshape=[2, 8, 2]) /* ty=Tensor[(2, 8, 2), bool] */;
  %96 = reshape(%94, newshape=[1456]) /* ty=Tensor[(1456), float32] */;
  %97 = @func_3555(%95, %96) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(660, 2), float64], Tensor[(1456), float32]) */;
  %98 = cast(%var_5214, dtype="uint16") /* ty=Tensor[(8, 182), uint16] */;
  %99 = shape_of(meta[relay.Constant][5] /* ty=Tensor[(8, 182), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %100 = cast(meta[relay.Constant][5] /* ty=Tensor[(8, 182), float32] */, dtype="uint16") /* ty=Tensor[(8, 182), uint16] */;
  %101 = dyn.reshape(%98, %99, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %102 = @func_3766() /* ty=(Tensor[(2, 8, 2), int8], Tensor[(2, 8, 2), float32]) */;
  %103 = cast(%var_5225, dtype="int8") /* ty=Tensor[(792), int8] */;
  %104 = reshape(%103, newshape=[11, 12, 6]) /* ty=Tensor[(11, 12, 6), int8] */;
  %105 = @func_3725(%104) /* ty=(Tensor[(11, 12, 6), int8], Tensor[(13, 8, 14), float32], Tensor[(1456), float32]) */;
  %106 = power(%91, %92) /* ty=Tensor[(660, 2), float64] */;
  %107 = %97.0;
  %108 = minimum(%100, %101) /* ty=Tensor[(8, 182), uint16] */;
  %109 = %102.0;
  %110 = %105.2;
  (%82, %106, %107, %108, %109, %110, %var_5225)
}

def @func_12992() -> Tensor[(2, 8, 2), float32] {
  %111 = @func_3766() /* ty=(Tensor[(2, 8, 2), int8], Tensor[(2, 8, 2), float32]) */;
  %111.1
}

def @func_12268() -> Tensor[(2, 8, 2), uint32] {
  @func_10044() /* ty=Tensor[(2, 8, 2), uint32] */
}

def @func_13748() -> (Tensor[(2, 8, 2), float32],) {
  %112 = @func_7690() /* ty=Tensor[(2, 8, 2), float32] */;
  (%112,)
}

def @func_14867() -> (Tensor[(2, 8, 2), bool],) {
  %113 = @func_11816() /* ty=(Tensor[(2, 8, 2), float32], Tensor[(11, 12, 10), bool], Tensor[(588), float64], Tensor[(660, 2), float64], Tensor[(2, 8, 2), bool]) */;
  %114 = %113.4;
  (%114,)
}

def @func_3837(%var_3811: Tensor[(4, 364), float32]) -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(4, 364), float64], Tensor[(2, 8, 2), float32], Tensor[(13, 8, 14), float32], Tensor[(792), int8]) {
  %115 = @func_3661() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %116 = %115.0;
  %117 = cast(%116, dtype="bool") /* ty=Tensor[(2, 8, 2), bool] */;
  %118 = cast(meta[relay.Constant][6] /* ty=Tensor[(4, 364), float32] */, dtype="float32") /* ty=Tensor[(4, 364), float32] */;
  %119 = reshape(%117, newshape=[2, 8, 2]) /* ty=Tensor[(2, 8, 2), bool] */;
  %120 = reshape(%118, newshape=[1456]) /* ty=Tensor[(1456), float32] */;
  %121 = @func_3555(%119, %120) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(660, 2), float64], Tensor[(1456), float32]) */;
  %122 = cast(%var_3811, dtype="float64") /* ty=Tensor[(4, 364), float64] */;
  %123 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(4, 364), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %124 = cast(meta[relay.Constant][6] /* ty=Tensor[(4, 364), float32] */, dtype="float64") /* ty=Tensor[(4, 364), float64] */;
  %125 = dyn.reshape(%122, %123, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %126 = @func_3766() /* ty=(Tensor[(2, 8, 2), int8], Tensor[(2, 8, 2), float32]) */;
  %127 = cast(meta[relay.Constant][7] /* ty=Tensor[(792), int8] */, dtype="int8") /* ty=Tensor[(792), int8] */;
  %128 = reshape(%127, newshape=[11, 12, 6]) /* ty=Tensor[(11, 12, 6), int8] */;
  %129 = @func_3725(%128) /* ty=(Tensor[(11, 12, 6), int8], Tensor[(13, 8, 14), float32], Tensor[(1456), float32]) */;
  %130 = %121.0;
  %131 = minimum(%124, %125) /* ty=Tensor[(4, 364), float64] */;
  %132 = %126.1;
  %133 = %129.1;
  (%116, %130, %131, %132, %133, meta[relay.Constant][7] /* ty=Tensor[(792), int8] */)
}

def @func_4715(%var_4705: Tensor[(90), float64], %var_4708: Tensor[(588), float64]) -> (Tensor[(2, 8, 2), bool], Tensor[(6, 3, 5), float64], Tensor[(90), float64], Tensor[(588), float64], Tensor[(588), float64], Tensor[(1320, 1), float64], Tensor[(11, 6, 6), float32], Tensor[(66, 6), float32]) {
  %134 = @func_4305() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %135 = cast(%var_4705, dtype="float64") /* ty=Tensor[(90), float64] */;
  %136 = reshape(%135, newshape=[6, 3, 5]) /* ty=Tensor[(6, 3, 5), float64] */;
  %137 = cast(%var_4708, dtype="float64") /* ty=Tensor[(588), float64] */;
  %138 = cast(meta[relay.Constant][8] /* ty=Tensor[(1320, 1), float64] */, dtype="float64") /* ty=Tensor[(1320, 1), float64] */;
  %139 = reshape(%137, newshape=[588]) /* ty=Tensor[(588), float64] */;
  %140 = reshape(%138, newshape=[1320]) /* ty=Tensor[(1320), float64] */;
  %141 = @func_4656(%139, %140) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(660, 2), float64], Tensor[(588), float64], Tensor[(1320), float64], Tensor[(5, 12, 9), float64], Tensor[(540), float64], Tensor[(6, 3, 5), float64], Tensor[(90), float64]) */;
  %142 = cast(meta[relay.Constant][9] /* ty=Tensor[(66, 6), float32] */, dtype="float32") /* ty=Tensor[(66, 6), float32] */;
  %143 = reshape(%142, newshape=[11, 6, 6]) /* ty=Tensor[(11, 6, 6), float32] */;
  %144 = %134.1;
  %145 = @func_3616(%136) /* ty=Tensor[(6, 3, 5), float64] */;
  %146 = %141.2;
  %147 = @func_1929(%143) /* ty=Tensor[(11, 6, 6), float32] */;
  (%144, %145, %var_4705, %146, %var_4708, meta[relay.Constant][8] /* ty=Tensor[(1320, 1), float64] */, %147, meta[relay.Constant][9] /* ty=Tensor[(66, 6), float32] */)
}

def @func_5792(%var_5763: Tensor[(1320), float64], %var_5764: Tensor[(1456), float32], %var_5765: Tensor[(792), int8], %var_5776: Tensor[(588), float64], %var_5787: Tensor[(3, 30), float64]) -> (Tensor[(2, 8, 2), int8], Tensor[(792), int8], Tensor[(1320), float64], Tensor[(1456), float32], Tensor[(792), int8], Tensor[(1, 588), float64], Tensor[(588), float64], Tensor[(6, 3, 5), float64], Tensor[(3, 30), float64], Tensor[(588), float64]) {
  %148 = @func_3766() /* ty=(Tensor[(2, 8, 2), int8], Tensor[(2, 8, 2), float32]) */;
  %149 = cast(%var_5763, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %150 = cast(%var_5764, dtype="float32") /* ty=Tensor[(1456), float32] */;
  %151 = cast(%var_5765, dtype="int8") /* ty=Tensor[(792), int8] */;
  %152 = reshape(%149, newshape=[660, 2]) /* ty=Tensor[(660, 2), float64] */;
  %153 = reshape(%150, newshape=[8, 182]) /* ty=Tensor[(8, 182), float32] */;
  %154 = reshape(%151, newshape=[792]) /* ty=Tensor[(792), int8] */;
  %155 = @func_5230(%152, %153, %154) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(660, 2), float64], Tensor[(2, 8, 2), bool], Tensor[(8, 182), uint16], Tensor[(2, 8, 2), int8], Tensor[(1456), float32], Tensor[(792), int8]) */;
  %156 = cast(%var_5776, dtype="float64") /* ty=Tensor[(588), float64] */;
  %157 = cast(%var_5763, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %158 = reshape(%156, newshape=[1, 588]) /* ty=Tensor[(1, 588), float64] */;
  %159 = reshape(%157, newshape=[1320]) /* ty=Tensor[(1320), float64] */;
  %160 = @func_5358(%158, %159) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(5, 12, 9), float64], Tensor[(540), float64], Tensor[(11, 12, 6), int32], Tensor[(792), int8], Tensor[(11, 12, 10), bool], Tensor[(1, 588), float64], Tensor[(1320), float64]) */;
  %161 = cast(%var_5787, dtype="float64") /* ty=Tensor[(3, 30), float64] */;
  %162 = reshape(%161, newshape=[6, 3, 5]) /* ty=Tensor[(6, 3, 5), float64] */;
  %163 = cast(%var_5787, dtype="float64") /* ty=Tensor[(3, 30), float64] */;
  %164 = %160.6;
  %165 = cast(%164, dtype="float64") /* ty=Tensor[(1, 588), float64] */;
  %166 = reshape(%163, newshape=[90]) /* ty=Tensor[(90), float64] */;
  %167 = reshape(%165, newshape=[588]) /* ty=Tensor[(588), float64] */;
  %168 = @func_4715(%166, %167) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(6, 3, 5), float64], Tensor[(90), float64], Tensor[(588), float64], Tensor[(588), float64], Tensor[(1320, 1), float64], Tensor[(11, 6, 6), float32], Tensor[(66, 6), float32]) */;
  %169 = %148.0;
  %170 = %155.6;
  %171 = @func_3616(%162) /* ty=Tensor[(6, 3, 5), float64] */;
  %172 = %168.3;
  (%169, %170, %var_5763, %var_5764, %var_5765, %164, %var_5776, %171, %var_5787, %172)
}

def @func_6372() -> Tensor[(2, 8, 2), bool] {
  @func_5247() /* ty=Tensor[(2, 8, 2), bool] */
}

def @func_7009(%var_6998: Tensor[(6, 7, 15), float32]) -> (Tensor[(6, 7, 15), float32],) {
  %173 = cast(%var_6998, dtype="float32") /* ty=Tensor[(6, 7, 15), float32] */;
  %174 = rsqrt(%173) /* ty=Tensor[(6, 7, 15), float32] */;
  %175 = cast(%174, dtype="float32") /* ty=Tensor[(6, 7, 15), float32] */;
  %176 = atan(%175) /* ty=Tensor[(6, 7, 15), float32] */;
  (%176,)
}

def @func_14406() -> Tensor[(2, 8, 2), bool] {
  %177 = @func_10888() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %177.0
}

def @func_4222() -> (Tensor[(2, 8, 2), bool],) {
  %178 = @func_4086() /* ty=Tensor[(2, 8, 2), bool] */;
  (%178,)
}

def @func_11315() -> (Tensor[(2, 8, 2), float32],) {
  %179 = @func_9124() /* ty=(Tensor[(2, 8, 2), float32],) */;
  %180 = %179.0;
  (%180,)
}

def @func_8751() -> Tensor[(8, 7, 9), float64] {
  %181 = cast(meta[relay.Constant][10] /* ty=Tensor[(8, 7, 9), float64] */, dtype="float64") /* ty=Tensor[(8, 7, 9), float64] */;
  asinh(%181) /* ty=Tensor[(8, 7, 9), float64] */
}

def @func_10875(%var_10852: Tensor[(660, 2), float64]) -> (Tensor[(660, 2), float32], Tensor[(660, 2), float32]) {
  %182 = @func_8575() /* ty=(Tensor[(2, 8, 2), float32], Tensor[(660, 2), float64], Tensor[(1, 1456), float32]) */;
  %183 = %182.1;
  %184 = cast(%var_10852, dtype="float32") /* ty=Tensor[(660, 2), float32] */;
  %185 = shape_of(%183, dtype="int32") /* ty=Tensor[(2), int32] */;
  %186 = cast(%183, dtype="float32") /* ty=Tensor[(660, 2), float32] */;
  %187 = dyn.reshape(%184, %185, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %188 = cast(%var_10852, dtype="float32") /* ty=Tensor[(660, 2), float32] */;
  %189 = erf(%188) /* ty=Tensor[(660, 2), float32] */;
  %190 = cast(%183, dtype="float32") /* ty=Tensor[(660, 2), float32] */;
  %191 = shape_of(%189, dtype="int32") /* ty=Tensor[(2), int32] */;
  %192 = cast(%189, dtype="float32") /* ty=Tensor[(660, 2), float32] */;
  %193 = dyn.reshape(%190, %191, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %194 = mod(%186, %187) /* ty=Tensor[(660, 2), float32] */;
  %195 = floor_divide(%192, %193) /* ty=Tensor[(660, 2), float32] */;
  (%194, %195)
}

def @func_15433() -> Tensor[(2, 8, 2), int8] {
  @func_4593() /* ty=Tensor[(2, 8, 2), int8] */
}

def @func_6327(%var_6280: Tensor[(1, 7, 2), float32]) -> Tensor[(?, 7, 2), float64] {
  %196 = cast(%var_6280, dtype="float32") /* ty=Tensor[(1, 7, 2), float32] */;
  %197 = acos(%196) /* ty=Tensor[(1, 7, 2), float32] */;
  %198 = cast(%var_6280, dtype="float64") /* ty=Tensor[(1, 7, 2), float64] */;
  %199 = shape_of(%197, dtype="int32") /* ty=Tensor[(3), int32] */;
  %200 = cast(%197, dtype="float64") /* ty=Tensor[(1, 7, 2), float64] */;
  %201 = dyn.reshape(%198, %199, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  divide(%200, %201) /* ty=Tensor[(?, 7, 2), float64] */
}

def @func_10977() -> Tensor[(2, 8, 2), bool] {
  %202 = @func_6596() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %202.1
}

def @func_4189(%var_4175: Tensor[(5, 4, 8), int16], %var_4184: Tensor[(540), float64]) -> (Tensor[(5, 4, 8), int16], Tensor[(5, 4, 8), float32], Tensor[(540), float64], Tensor[(540), float64]) {
  %203 = cast(meta[relay.Constant][11] /* ty=Tensor[(5, 4, 8), int16] */, dtype="int16") /* ty=Tensor[(5, 4, 8), int16] */;
  %204 = shape_of(%var_4175, dtype="int32") /* ty=Tensor[(3), int32] */;
  %205 = cast(%var_4175, dtype="int16") /* ty=Tensor[(5, 4, 8), int16] */;
  %206 = dyn.reshape(%203, %204, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %207 = cast(%var_4175, dtype="float32") /* ty=Tensor[(5, 4, 8), float32] */;
  %208 = cast(%var_4184, dtype="float64") /* ty=Tensor[(540), float64] */;
  %209 = reshape(%208, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %210 = @func_4004(%209) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(5, 12, 9), float64], Tensor[(540), float64]) */;
  %211 = minimum(%205, %206) /* ty=Tensor[(5, 4, 8), int16] */;
  %212 = asin(%207) /* ty=Tensor[(5, 4, 8), float32] */;
  %213 = %210.2;
  (%211, %212, %213, %var_4184)
}

def @func_6596() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) {
  %214 = @func_3907() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %215 = @func_4305() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %216 = %214.0;
  %217 = %215.1;
  (%216, %217)
}

def @func_8789() -> (Tensor[(4, 364), float32], Tensor[(2, 8, 2), bool]) {
  %218 = @func_7102() /* ty=(Tensor[(2, 8, 2), uint32], Tensor[(2, 8, 2), float32], Tensor[(4, 364), float32]) */;
  %219 = @func_6865() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %220 = %218.2;
  %221 = %219.0;
  (%220, %221)
}

def @func_4025(%var_4018: Tensor[(14, 6, 7), float64], %var_4022: Tensor[(660, 2), float64]) -> (Tensor[(14, 6, 7), float64], Tensor[(11, 12, 10), bool], Tensor[(660, 2), float64]) {
  %222 = cast(%var_4018, dtype="float64") /* ty=Tensor[(14, 6, 7), float64] */;
  %223 = cast(%var_4022, dtype="float64") /* ty=Tensor[(660, 2), float64] */;
  %224 = reshape(%223, newshape=[11, 12, 10]) /* ty=Tensor[(11, 12, 10), float64] */;
  %225 = @func_2173(%224) /* ty=(Tensor[(11, 12, 10), bool], Tensor[(11, 6, 6), float32], Tensor[(396), float32]) */;
  %226 = acosh(%222) /* ty=Tensor[(14, 6, 7), float64] */;
  %227 = %225.0;
  (%226, %227, %var_4022)
}

def @func_6865() -> (Tensor[(2, 8, 2), bool],) {
  %228 = @func_4086() /* ty=Tensor[(2, 8, 2), bool] */;
  (%228,)
}

def @func_8575() -> (Tensor[(2, 8, 2), float32], Tensor[(660, 2), float64], Tensor[(1, 1456), float32]) {
  %229 = @func_5125() /* ty=(Tensor[(2, 8, 2), float32],) */;
  %230 = cast(meta[relay.Constant][12] /* ty=Tensor[(1, 1456), float32] */, dtype="float32") /* ty=Tensor[(1, 1456), float32] */;
  %231 = reshape(%230, newshape=[13, 8, 14]) /* ty=Tensor[(13, 8, 14), float32] */;
  %232 = @func_2537(%231) /* ty=(Tensor[(13, 8, 14), float32], Tensor[(396), float32], Tensor[(660, 2), float64]) */;
  %233 = %229.0;
  %234 = %232.2;
  (%233, %234, meta[relay.Constant][12] /* ty=Tensor[(1, 1456), float32] */)
}

def @func_10792() -> Tensor[(4, 40), float32] {
  %235 = @func_9110() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(4, 40), float64], Tensor[(4, 40), uint32], Tensor[(8, 3, 16), float64], Tensor[(384), float32], Tensor[(756), float64]) */;
  %236 = %235.1;
  %237 = cast(meta[relay.Constant][13] /* ty=Tensor[(4, 40), float64] */, dtype="float32") /* ty=Tensor[(4, 40), float32] */;
  %238 = shape_of(%236, dtype="int32") /* ty=Tensor[(2), int32] */;
  %239 = cast(%236, dtype="float32") /* ty=Tensor[(4, 40), float32] */;
  %240 = dyn.reshape(%237, %238, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  divide(%239, %240) /* ty=Tensor[(4, 40), float32] */
}

def @func_12718() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(14, 16, 12), uint64], Tensor[(54, 14), float64], Tensor[(96, 28), float64]) {
  %241 = @func_3493() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %242 = @func_12601() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(4, 364), float32]) */;
  %243 = cast(meta[relay.Constant][14] /* ty=Tensor[(96, 28), uint64] */, dtype="uint64") /* ty=Tensor[(96, 28), uint64] */;
  %244 = cast(meta[relay.Constant][14] /* ty=Tensor[(96, 28), uint64] */, dtype="uint64") /* ty=Tensor[(96, 28), uint64] */;
  %245 = cast(meta[relay.Constant][15] /* ty=Tensor[(54, 14), float64] */, dtype="float64") /* ty=Tensor[(54, 14), float64] */;
  %246 = reshape(%243, newshape=[14, 16, 12]) /* ty=Tensor[(14, 16, 12), uint64] */;
  %247 = reshape(%244, newshape=[14, 16, 12]) /* ty=Tensor[(14, 16, 12), uint64] */;
  %248 = reshape(%245, newshape=[756]) /* ty=Tensor[(756), float64] */;
  %249 = @func_5463(%246, %247, %248) /* ty=(Tensor[(14, 16, 12), uint64], Tensor[(8, 3, 16), float64], Tensor[(384), float32], Tensor[(756), float64], Tensor[(396), float32], Tensor[(1456), float32]) */;
  %250 = cast(meta[relay.Constant][16] /* ty=Tensor[(96, 28), uint64] */, dtype="float64") /* ty=Tensor[(96, 28), float64] */;
  %251 = shape_of(meta[relay.Constant][14] /* ty=Tensor[(96, 28), uint64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %252 = cast(meta[relay.Constant][14] /* ty=Tensor[(96, 28), uint64] */, dtype="float64") /* ty=Tensor[(96, 28), float64] */;
  %253 = dyn.reshape(%250, %251, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %254 = %241.1;
  %255 = %242.0;
  %256 = %249.0;
  %257 = divide(%252, %253) /* ty=Tensor[(96, 28), float64] */;
  (%254, %255, %256, meta[relay.Constant][15] /* ty=Tensor[(54, 14), float64] */, %257)
}

def @func_4656(%var_4614: Tensor[(588), float64], %var_4615: Tensor[(1320), float64]) -> (Tensor[(2, 8, 2), bool], Tensor[(660, 2), float64], Tensor[(588), float64], Tensor[(1320), float64], Tensor[(5, 12, 9), float64], Tensor[(540), float64], Tensor[(6, 3, 5), float64], Tensor[(90), float64]) {
  %258 = @func_4305() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %259 = cast(%var_4614, dtype="float64") /* ty=Tensor[(588), float64] */;
  %260 = cast(%var_4615, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %261 = reshape(%259, newshape=[14, 6, 7]) /* ty=Tensor[(14, 6, 7), float64] */;
  %262 = reshape(%260, newshape=[660, 2]) /* ty=Tensor[(660, 2), float64] */;
  %263 = @func_4025(%261, %262) /* ty=(Tensor[(14, 6, 7), float64], Tensor[(11, 12, 10), bool], Tensor[(660, 2), float64]) */;
  %264 = cast(meta[relay.Constant][17] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %265 = reshape(%264, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %266 = @func_4004(%265) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(5, 12, 9), float64], Tensor[(540), float64]) */;
  %267 = cast(meta[relay.Constant][18] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
  %268 = reshape(%267, newshape=[6, 3, 5]) /* ty=Tensor[(6, 3, 5), float64] */;
  %269 = %258.0;
  %270 = %263.2;
  %271 = %266.1;
  %272 = @func_3616(%268) /* ty=Tensor[(6, 3, 5), float64] */;
  (%269, %270, %var_4614, %var_4615, %271, meta[relay.Constant][17] /* ty=Tensor[(540), float64] */, %272, meta[relay.Constant][18] /* ty=Tensor[(90), float64] */)
}

def @func_8650(%var_8644: Tensor[(6, 3, 5), float32]) -> (Tensor[(2, 8, 2), bool], Tensor[(6, 3, 5), uint64], Tensor[(2, 8, 2), bool], Tensor[(6, 3, 5), uint32]) {
  %273 = @func_4305() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %274 = @func_6180() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(6, 3, 5), float64], Tensor[(90), float64]) */;
  %275 = %274.2;
  %276 = cast(%275, dtype="float64") /* ty=Tensor[(90), float64] */;
  %277 = reshape(%276, newshape=[6, 3, 5]) /* ty=Tensor[(6, 3, 5), float64] */;
  %278 = @func_3616(%277) /* ty=Tensor[(6, 3, 5), float64] */;
  %279 = cast(%278, dtype="float32") /* ty=Tensor[(6, 3, 5), float32] */;
  %280 = sqrt(%279) /* ty=Tensor[(6, 3, 5), float32] */;
  %281 = cast(%275, dtype="uint64") /* ty=Tensor[(90), uint64] */;
  %282 = shape_of(%280, dtype="int32") /* ty=Tensor[(3), int32] */;
  %283 = cast(%280, dtype="uint64") /* ty=Tensor[(6, 3, 5), uint64] */;
  %284 = dyn.reshape(%281, %282, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %285 = cast(%var_8644, dtype="uint32") /* ty=Tensor[(6, 3, 5), uint32] */;
  %286 = shape_of(%280, dtype="int32") /* ty=Tensor[(3), int32] */;
  %287 = cast(%280, dtype="uint32") /* ty=Tensor[(6, 3, 5), uint32] */;
  %288 = dyn.reshape(%285, %286, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %289 = %273.0;
  %290 = left_shift(%283, %284) /* ty=Tensor[(6, 3, 5), uint64] */;
  %291 = @func_4042() /* ty=Tensor[(2, 8, 2), bool] */;
  %292 = right_shift(%287, %288) /* ty=Tensor[(6, 3, 5), uint32] */;
  (%289, %290, %291, %292)
}

def @func_4901(%var_4866: Tensor[(1456), float32]) -> (Tensor[(2, 8, 2), float64], Tensor[(13, 8, 14), float32], Tensor[(1456), float32], Tensor[(2, 8, 2), int8], Tensor[(2, 8, 2), bool], Tensor[(7, 12, 12), float64], Tensor[(1008), float64], Tensor[(756), float64], Tensor[(540), float64]) {
  %293 = @func_3907() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %294 = %293.0;
  %295 = cast(%294, dtype="float64") /* ty=Tensor[(2, 8, 2), float64] */;
  %296 = cast(%var_4866, dtype="float32") /* ty=Tensor[(1456), float32] */;
  %297 = reshape(%296, newshape=[13, 8, 14]) /* ty=Tensor[(13, 8, 14), float32] */;
  %298 = @func_2537(%297) /* ty=(Tensor[(13, 8, 14), float32], Tensor[(396), float32], Tensor[(660, 2), float64]) */;
  %299 = @func_4222() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %300 = cast(meta[relay.Constant][19] /* ty=Tensor[(1008), float64] */, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %301 = cast(meta[relay.Constant][20] /* ty=Tensor[(756), float64] */, dtype="float64") /* ty=Tensor[(756), float64] */;
  %302 = cast(meta[relay.Constant][21] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %303 = reshape(%300, newshape=[7, 12, 12]) /* ty=Tensor[(7, 12, 12), float64] */;
  %304 = reshape(%301, newshape=[756]) /* ty=Tensor[(756), float64] */;
  %305 = reshape(%302, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %306 = @func_1180(%303, %304, %305) /* ty=(Tensor[(7, 12, 12), float64], Tensor[(540), float64], Tensor[(756), float64], Tensor[(540), float64], Tensor[(5, 12, 9), float64]) */;
  %307 = atan(%295) /* ty=Tensor[(2, 8, 2), float64] */;
  %308 = %298.0;
  %309 = @func_4593() /* ty=Tensor[(2, 8, 2), int8] */;
  %310 = %299.0;
  %311 = %306.0;
  (%307, %308, %var_4866, %309, %310, %311, meta[relay.Constant][19] /* ty=Tensor[(1008), float64] */, meta[relay.Constant][20] /* ty=Tensor[(756), float64] */, meta[relay.Constant][21] /* ty=Tensor[(540), float64] */)
}

def @func_14480() -> Tensor[(540), float64] {
  %312 = @func_9592() /* ty=(Tensor[(540), float64],) */;
  %312.0
}

def @func_10133() -> (Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), bool]) {
  %313 = @func_9124() /* ty=(Tensor[(2, 8, 2), float32],) */;
  %314 = %313.0;
  %315 = @func_8230() /* ty=Tensor[(2, 8, 2), bool] */;
  (%314, %315)
}

def @func_15164() -> (Tensor[(2, 8, 2), bool],) {
  %316 = @func_6837() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %317 = %316.0;
  (%317,)
}

def @func_12120() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) {
  %318 = @func_11873() /* ty=Tensor[(2, 8, 2), bool] */;
  %319 = @func_11873() /* ty=Tensor[(2, 8, 2), bool] */;
  %320 = @func_6428() /* ty=Tensor[(2, 8, 2), bool] */;
  (%318, %319, %320)
}

def @func_4283() -> Tensor[(2, 8, 2), float32] {
  %321 = @func_4042() /* ty=Tensor[(2, 8, 2), bool] */;
  %322 = cast(%321, dtype="float32") /* ty=Tensor[(2, 8, 2), float32] */;
  acos(%322) /* ty=Tensor[(2, 8, 2), float32] */
}

def @func_13382() -> Tensor[(2, 8, 2), uint32] {
  %323 = @func_12751() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), uint32]) */;
  %323.1
}

def @func_12219() -> (Tensor[(2, 8, 2), int8],) {
  %324 = @func_5603() /* ty=(Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), int8]) */;
  %325 = %324.1;
  (%325,)
}

def @func_4004(%var_4001: Tensor[(540), float64]) -> (Tensor[(2, 8, 2), bool], Tensor[(5, 12, 9), float64], Tensor[(540), float64]) {
  %326 = @func_3493() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %327 = cast(%var_4001, dtype="float64") /* ty=Tensor[(540), float64] */;
  %328 = reshape(%327, newshape=[5, 12, 9]) /* ty=Tensor[(5, 12, 9), float64] */;
  %329 = %326.1;
  %330 = @func_839(%328) /* ty=Tensor[(5, 12, 9), float64] */;
  (%329, %330, %var_4001)
}

def @func_9867(%var_9769: Tensor[(756), float64], %var_9808: Tensor[(160), int16], %var_9858: Tensor[(36, 22), int8], %var_9865: Tensor[(1, 1456), float32]) -> (Tensor[(2, 8, 2), bool], Tensor[(9, 6, 13), float64], Tensor[(702), float64], Tensor[(540), float64], Tensor[(504, 2), float64], Tensor[(756), float64], Tensor[(540), float64], Tensor[(2, 8, 2), bool], Tensor[(11, 6, 6), float32], Tensor[(6, 66), float32], Tensor[(2, 8, 2), bool], Tensor[(5, 4, 8), int16], Tensor[(160), int16], Tensor[(2, 8, 2), int8], Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(6, 7, 15), float32], Tensor[(630), float32], Tensor[(2, 8, 2), float32], Tensor[(11, 12, 6), int32], Tensor[(36, 22), int8], Tensor[(756), float64], Tensor[(1, 1456), float32]) {
  %331 = @func_8672() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %332 = cast(meta[relay.Constant][22] /* ty=Tensor[(702), float64] */, dtype="float64") /* ty=Tensor[(702), float64] */;
  %333 = reshape(%332, newshape=[9, 6, 13]) /* ty=Tensor[(9, 6, 13), float64] */;
  %334 = cast(meta[relay.Constant][23] /* ty=Tensor[(504, 2), float64] */, dtype="float64") /* ty=Tensor[(504, 2), float64] */;
  %335 = cast(%var_9769, dtype="float64") /* ty=Tensor[(756), float64] */;
  %336 = cast(meta[relay.Constant][24] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %337 = reshape(%334, newshape=[7, 12, 12]) /* ty=Tensor[(7, 12, 12), float64] */;
  %338 = reshape(%335, newshape=[756]) /* ty=Tensor[(756), float64] */;
  %339 = reshape(%336, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %340 = @func_1180(%337, %338, %339) /* ty=(Tensor[(7, 12, 12), float64], Tensor[(540), float64], Tensor[(756), float64], Tensor[(540), float64], Tensor[(5, 12, 9), float64]) */;
  %341 = @func_6180() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(6, 3, 5), float64], Tensor[(90), float64]) */;
  %342 = cast(meta[relay.Constant][25] /* ty=Tensor[(6, 66), float32] */, dtype="float32") /* ty=Tensor[(6, 66), float32] */;
  %343 = reshape(%342, newshape=[11, 6, 6]) /* ty=Tensor[(11, 6, 6), float32] */;
  %344 = @func_8799() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %345 = cast(%var_9808, dtype="int16") /* ty=Tensor[(160), int16] */;
  %346 = cast(meta[relay.Constant][24] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %347 = reshape(%345, newshape=[5, 4, 8]) /* ty=Tensor[(5, 4, 8), int16] */;
  %348 = reshape(%346, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %349 = @func_4189(%347, %348) /* ty=(Tensor[(5, 4, 8), int16], Tensor[(5, 4, 8), float32], Tensor[(540), float64], Tensor[(540), float64]) */;
  %350 = @func_3766() /* ty=(Tensor[(2, 8, 2), int8], Tensor[(2, 8, 2), float32]) */;
  %351 = @func_7394() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %352 = @func_3701() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %353 = cast(meta[relay.Constant][26] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
  %354 = reshape(%353, newshape=[6, 7, 15]) /* ty=Tensor[(6, 7, 15), float32] */;
  %355 = @func_7009(%354) /* ty=(Tensor[(6, 7, 15), float32],) */;
  %356 = @func_6712() /* ty=(Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), bool]) */;
  %357 = cast(%var_9858, dtype="int8") /* ty=Tensor[(36, 22), int8] */;
  %358 = reshape(%357, newshape=[792]) /* ty=Tensor[(792), int8] */;
  %359 = @func_3978(%358) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(11, 12, 6), int32]) */;
  %360 = cast(%var_9865, dtype="float32") /* ty=Tensor[(1, 1456), float32] */;
  %361 = reshape(%360, newshape=[1456]) /* ty=Tensor[(1456), float32] */;
  %362 = @func_4901(%361) /* ty=(Tensor[(2, 8, 2), float64], Tensor[(13, 8, 14), float32], Tensor[(1456), float32], Tensor[(2, 8, 2), int8], Tensor[(2, 8, 2), bool], Tensor[(7, 12, 12), float64], Tensor[(1008), float64], Tensor[(756), float64], Tensor[(540), float64]) */;
  %363 = %331.0;
  %364 = @func_8505(%333) /* ty=Tensor[(9, 6, 13), float64] */;
  %365 = %340.3;
  %366 = %341.0;
  %367 = @func_1929(%343) /* ty=Tensor[(11, 6, 6), float32] */;
  %368 = %344.0;
  %369 = %349.0;
  %370 = %350.0;
  %371 = %351.1;
  %372 = %352.0;
  %373 = %355.0;
  %374 = %356.0;
  %375 = %359.1;
  %376 = %362.7;
  (%363, %364, meta[relay.Constant][22] /* ty=Tensor[(702), float64] */, %365, meta[relay.Constant][23] /* ty=Tensor[(504, 2), float64] */, %var_9769, meta[relay.Constant][24] /* ty=Tensor[(540), float64] */, %366, %367, meta[relay.Constant][25] /* ty=Tensor[(6, 66), float32] */, %368, %369, %var_9808, %370, %371, %372, %373, meta[relay.Constant][26] /* ty=Tensor[(630), float32] */, %374, %375, %var_9858, %376, %var_9865)
}

def @func_13174() -> (Tensor[(2, 8, 2), float32],) {
  %377 = @func_6712() /* ty=(Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), bool]) */;
  %378 = %377.0;
  (%378,)
}

def @func_10095() -> Tensor[(2, 8, 2), bool] {
  %379 = @func_8827() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %379.0
}

def @func_14686() -> Tensor[(2, 8, 2), bool] {
  @func_4042() /* ty=Tensor[(2, 8, 2), bool] */
}

def @func_14083() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), int8]) {
  %380 = @func_3493() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %381 = @func_3766() /* ty=(Tensor[(2, 8, 2), int8], Tensor[(2, 8, 2), float32]) */;
  %382 = %380.0;
  %383 = %381.0;
  (%382, %383)
}

def @func_11715() -> (Tensor[(2, 8, 2), float32],) {
  %384 = @func_7690() /* ty=Tensor[(2, 8, 2), float32] */;
  (%384,)
}

def @func_11400() -> (Tensor[(2, 8, 2), bool],) {
  %385 = @func_7394() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %386 = %385.1;
  (%386,)
}

def @func_3701() -> (Tensor[(2, 8, 2), bool],) {
  %387 = @func_3493() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %388 = %387.0;
  (%388,)
}

def @func_13283(%var_13274: Tensor[(4, 364), float32]) -> (Tensor[(2, 8, 2), bool], Tensor[(4, 364), float64]) {
  %389 = @func_10888() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %390 = @func_12601() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(4, 364), float32]) */;
  %391 = %390.1;
  %392 = cast(%var_13274, dtype="float64") /* ty=Tensor[(4, 364), float64] */;
  %393 = shape_of(%391, dtype="int32") /* ty=Tensor[(2), int32] */;
  %394 = cast(%391, dtype="float64") /* ty=Tensor[(4, 364), float64] */;
  %395 = dyn.reshape(%392, %393, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %396 = %389.0;
  %397 = add(%394, %395) /* ty=Tensor[(4, 364), float64] */;
  (%396, %397)
}

def @func_16191(%var_16188: Tensor[(588), float64]) -> (Tensor[(4, 40), float32], Tensor[(6, 3, 5), float64], Tensor[(90), float64], Tensor[(588), float64]) {
  %398 = cast(meta[relay.Constant][27] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
  %399 = cast(%var_16188, dtype="float64") /* ty=Tensor[(588), float64] */;
  %400 = reshape(%398, newshape=[90]) /* ty=Tensor[(90), float64] */;
  %401 = reshape(%399, newshape=[588]) /* ty=Tensor[(588), float64] */;
  %402 = @func_4715(%400, %401) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(6, 3, 5), float64], Tensor[(90), float64], Tensor[(588), float64], Tensor[(588), float64], Tensor[(1320, 1), float64], Tensor[(11, 6, 6), float32], Tensor[(66, 6), float32]) */;
  %403 = @func_10792() /* ty=Tensor[(4, 40), float32] */;
  %404 = %402.1;
  (%403, %404, meta[relay.Constant][27] /* ty=Tensor[(90), float64] */, %var_16188)
}

def @func_12540(%var_12530: Tensor[(540), float64]) -> (Tensor[(2, 8, 2), bool], Tensor[(5, 12, 9), float64], Tensor[(540), float64]) {
  %405 = @func_5009() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %406 = cast(%var_12530, dtype="float64") /* ty=Tensor[(540), float64] */;
  %407 = reshape(%406, newshape=[5, 12, 9]) /* ty=Tensor[(5, 12, 9), float64] */;
  %408 = %405.1;
  %409 = @func_839(%407) /* ty=Tensor[(5, 12, 9), float64] */;
  (%408, %409, %var_12530)
}

def @func_1929(%var_1900: Tensor[(11, 6, 6), float32]) -> Tensor[(11, 6, 6), float32] {
  %410 = cast(%var_1900, dtype="float32") /* ty=Tensor[(11, 6, 6), float32] */;
  atanh(%410) /* ty=Tensor[(11, 6, 6), float32] */
}

def @func_5463(%var_5423: Tensor[(14, 16, 12), uint64], %var_5424: Tensor[(14, 16, 12), uint64], %var_5445: Tensor[(756), float64]) -> (Tensor[(14, 16, 12), uint64], Tensor[(8, 3, 16), float64], Tensor[(384), float32], Tensor[(756), float64], Tensor[(396), float32], Tensor[(1456), float32]) {
  %411 = cast(%var_5424, dtype="uint64") /* ty=Tensor[(14, 16, 12), uint64] */;
  %412 = shape_of(%var_5423, dtype="int32") /* ty=Tensor[(3), int32] */;
  %413 = cast(%var_5423, dtype="uint64") /* ty=Tensor[(14, 16, 12), uint64] */;
  %414 = dyn.reshape(%411, %412, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %415 = cast(meta[relay.Constant][28] /* ty=Tensor[(384), float32] */, dtype="float32") /* ty=Tensor[(384), float32] */;
  %416 = cast(%var_5445, dtype="float64") /* ty=Tensor[(756), float64] */;
  %417 = reshape(%415, newshape=[1, 384]) /* ty=Tensor[(1, 384), float32] */;
  %418 = reshape(%416, newshape=[756]) /* ty=Tensor[(756), float64] */;
  %419 = @func_3870(%417, %418) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(8, 3, 16), float64], Tensor[(1, 384), float32], Tensor[(756), float64]) */;
  %420 = cast(meta[relay.Constant][29] /* ty=Tensor[(1456), float32] */, dtype="float32") /* ty=Tensor[(1456), float32] */;
  %421 = reshape(%420, newshape=[13, 8, 14]) /* ty=Tensor[(13, 8, 14), float32] */;
  %422 = @func_2537(%421) /* ty=(Tensor[(13, 8, 14), float32], Tensor[(396), float32], Tensor[(660, 2), float64]) */;
  %423 = logical_xor(%413, %414) /* ty=Tensor[(14, 16, 12), uint64] */;
  %424 = %419.1;
  %425 = %422.1;
  (%423, %424, meta[relay.Constant][28] /* ty=Tensor[(384), float32] */, %var_5445, %425, meta[relay.Constant][29] /* ty=Tensor[(1456), float32] */)
}

def @func_8182() -> (Tensor[(2, 8, 2), float32],) {
  %426 = @func_7102() /* ty=(Tensor[(2, 8, 2), uint32], Tensor[(2, 8, 2), float32], Tensor[(4, 364), float32]) */;
  %427 = %426.1;
  (%427,)
}

def @func_9592() -> (Tensor[(540), float64],) {
  %428 = @func_9020() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(90), float32], Tensor[(2, 8, 2), bool], Tensor[(384), float32], Tensor[(756), float64], Tensor[(540), float64], Tensor[(540), float64], Tensor[(2, 5, 13), float64], float32, Tensor[(130), float32]) */;
  %429 = %428.6;
  (%429,)
}

def @func_16136(%var_16134: Tensor[(384), float32]) -> (Tensor[(2, 8, 2), float64], Tensor[(2, 8, 2), bool], Tensor[(630), float32], Tensor[(384), float32]) {
  %430 = @func_7221() /* ty=(Tensor[(2, 8, 2), float64],) */;
  %431 = cast(meta[relay.Constant][30] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
  %432 = cast(%var_16134, dtype="float32") /* ty=Tensor[(384), float32] */;
  %433 = reshape(%431, newshape=[630]) /* ty=Tensor[(630), float32] */;
  %434 = reshape(%432, newshape=[384]) /* ty=Tensor[(384), float32] */;
  %435 = @func_8072(%433, %434) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(6, 7, 15), float32], Tensor[(630), float32], Tensor[(8, 3, 16), float64], Tensor[(384), float32], Tensor[(756), float64]) */;
  %436 = %430.0;
  %437 = %435.0;
  (%436, %437, meta[relay.Constant][30] /* ty=Tensor[(630), float32] */, %var_16134)
}

def @func_10824(%var_10810: Tensor[(16, 14, 13), int8]) -> (Tensor[(16, 14, 13), bool],) {
  %438 = cast(meta[relay.Constant][31] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %439 = cast(%var_10810, dtype="int8") /* ty=Tensor[(16, 14, 13), int8] */;
  %440 = logical_xor(%438, %439) /* ty=Tensor[(16, 14, 13), int8] */;
  %441 = cast(%440, dtype="bool") /* ty=Tensor[(16, 14, 13), bool] */;
  %442 = cast(meta[relay.Constant][31] /* ty=int8 */, dtype="bool") /* ty=bool */;
  %443 = not_equal(%441, %442) /* ty=Tensor[(16, 14, 13), bool] */;
  (%443,)
}

def @func_6129(%var_6082: Tensor[(1320), float64], %var_6083: Tensor[(1456), float32], %var_6096: Tensor[(588), float64], %var_6121: Tensor[(756), float64]) -> (Tensor[(2, 8, 2), uint32], Tensor[(2, 8, 2), int8], Tensor[(1320), float64], Tensor[(1456), float32], Tensor[(792), int8], Tensor[(5, 4, 8), int16], Tensor[(160), int16], Tensor[(792), int8], Tensor[(588), float64], Tensor[(5, 12, 9), float64], Tensor[(1008), float64], Tensor[(756), float64], Tensor[(9, 60), float64]) {
  %444 = cast(%var_6082, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %445 = cast(%var_6083, dtype="float32") /* ty=Tensor[(1456), float32] */;
  %446 = cast(meta[relay.Constant][32] /* ty=Tensor[(792), int8] */, dtype="int8") /* ty=Tensor[(792), int8] */;
  %447 = reshape(%444, newshape=[660, 2]) /* ty=Tensor[(660, 2), float64] */;
  %448 = reshape(%445, newshape=[8, 182]) /* ty=Tensor[(8, 182), float32] */;
  %449 = reshape(%446, newshape=[792]) /* ty=Tensor[(792), int8] */;
  %450 = @func_5230(%447, %448, %449) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(660, 2), float64], Tensor[(2, 8, 2), bool], Tensor[(8, 182), uint16], Tensor[(2, 8, 2), int8], Tensor[(1456), float32], Tensor[(792), int8]) */;
  %451 = cast(meta[relay.Constant][33] /* ty=Tensor[(160), int16] */, dtype="int16") /* ty=Tensor[(160), int16] */;
  %452 = reshape(%451, newshape=[4, 40]) /* ty=Tensor[(4, 40), int16] */;
  %453 = @func_5090(%452) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(5, 4, 8), int16], Tensor[(4, 40), int16], Tensor[(540), float64]) */;
  %454 = cast(%var_6096, dtype="float64") /* ty=Tensor[(588), float64] */;
  %455 = cast(%var_6082, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %456 = reshape(%454, newshape=[1, 588]) /* ty=Tensor[(1, 588), float64] */;
  %457 = reshape(%455, newshape=[1320]) /* ty=Tensor[(1320), float64] */;
  %458 = @func_5358(%456, %457) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(5, 12, 9), float64], Tensor[(540), float64], Tensor[(11, 12, 6), int32], Tensor[(792), int8], Tensor[(11, 12, 10), bool], Tensor[(1, 588), float64], Tensor[(1320), float64]) */;
  %459 = cast(meta[relay.Constant][34] /* ty=Tensor[(1008), float64] */, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %460 = cast(%var_6121, dtype="float64") /* ty=Tensor[(756), float64] */;
  %461 = cast(meta[relay.Constant][35] /* ty=Tensor[(9, 60), float64] */, dtype="float64") /* ty=Tensor[(9, 60), float64] */;
  %462 = reshape(%459, newshape=[7, 12, 12]) /* ty=Tensor[(7, 12, 12), float64] */;
  %463 = reshape(%460, newshape=[756]) /* ty=Tensor[(756), float64] */;
  %464 = reshape(%461, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %465 = @func_1180(%462, %463, %464) /* ty=(Tensor[(7, 12, 12), float64], Tensor[(540), float64], Tensor[(756), float64], Tensor[(540), float64], Tensor[(5, 12, 9), float64]) */;
  %466 = @func_5156() /* ty=Tensor[(2, 8, 2), uint32] */;
  %467 = %450.4;
  %468 = %453.1;
  %469 = %458.4;
  %470 = %465.4;
  (%466, %467, %var_6082, %var_6083, meta[relay.Constant][32] /* ty=Tensor[(792), int8] */, %468, meta[relay.Constant][33] /* ty=Tensor[(160), int16] */, %469, %var_6096, %470, meta[relay.Constant][34] /* ty=Tensor[(1008), float64] */, %var_6121, meta[relay.Constant][35] /* ty=Tensor[(9, 60), float64] */)
}

def @func_10086() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) {
  %471 = @func_3493() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %472 = %471.1;
  %473 = @func_6382() /* ty=Tensor[(2, 8, 2), bool] */;
  (%472, %473)
}

def @func_5660() -> Tensor[(2, 8, 2), float32] {
  %474 = @func_3766() /* ty=(Tensor[(2, 8, 2), int8], Tensor[(2, 8, 2), float32]) */;
  %474.1
}

def @func_6180() -> (Tensor[(2, 8, 2), bool], Tensor[(6, 3, 5), float64], Tensor[(90), float64]) {
  %475 = cast(meta[relay.Constant][36] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
  %476 = reshape(%475, newshape=[6, 3, 5]) /* ty=Tensor[(6, 3, 5), float64] */;
  %477 = @func_4042() /* ty=Tensor[(2, 8, 2), bool] */;
  %478 = @func_3616(%476) /* ty=Tensor[(6, 3, 5), float64] */;
  (%477, %478, meta[relay.Constant][36] /* ty=Tensor[(90), float64] */)
}

def @func_10340() -> Tensor[(2, 8, 2), bool] {
  %479 = @func_6596() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %479.1
}

def @func_9400(%var_9320: float32, %var_9321: Tensor[(130), float32]) -> (Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), float32], Tensor[(8, 3, 16), float64], Tensor[(2, 5, 13), float32], float32, Tensor[(130), float32], Tensor[(2, 8, 2), bool], Tensor[(11, 6, 6), float32], Tensor[(6, 66), float32], Tensor[(2, 8, 2), bool]) {
  %480 = @func_9124() /* ty=(Tensor[(2, 8, 2), float32],) */;
  %481 = @func_9110() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(4, 40), float64], Tensor[(4, 40), uint32], Tensor[(8, 3, 16), float64], Tensor[(384), float32], Tensor[(756), float64]) */;
  %482 = cast(%var_9320, dtype="float32") /* ty=float32 */;
  %483 = cast(%var_9321, dtype="float32") /* ty=Tensor[(130), float32] */;
  %484 = reshape(%482, newshape=[]) /* ty=float32 */;
  %485 = reshape(%483, newshape=[2, 5, 13]) /* ty=Tensor[(2, 5, 13), float32] */;
  %486 = @func_6069(%484, %485) /* ty=(Tensor[(2, 5, 13), float32], Tensor[(2, 5, 13), float64]) */;
  %487 = @func_4222() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %488 = cast(meta[relay.Constant][37] /* ty=Tensor[(6, 66), float32] */, dtype="float32") /* ty=Tensor[(6, 66), float32] */;
  %489 = reshape(%488, newshape=[11, 6, 6]) /* ty=Tensor[(11, 6, 6), float32] */;
  %490 = @func_5660() /* ty=Tensor[(2, 8, 2), float32] */;
  %491 = %480.0;
  %492 = %481.3;
  %493 = %486.0;
  %494 = %487.0;
  %495 = @func_1929(%489) /* ty=Tensor[(11, 6, 6), float32] */;
  %496 = @func_7945() /* ty=Tensor[(2, 8, 2), bool] */;
  (%490, %491, %492, %493, %var_9320, %var_9321, %494, %495, meta[relay.Constant][37] /* ty=Tensor[(6, 66), float32] */, %496)
}

def @func_12400(%var_12351: Tensor[(5, 9, 6), float32], %var_12376: Tensor[(5, 9, 6), float32]) -> (Tensor[(2, 8, 2), bool], Tensor[(6, 45), float32], Tensor[(756), float64], Tensor[(5, 9, 6), float64], Tensor[(5, 9, 6), float32], Tensor[(2, 8, 2), bool], Tensor[(5, 9, 6), float32], Tensor[(5, 9, 6), bool], Tensor[(5, 9, 6), float64]) {
  %497 = @func_6837() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %498 = cast(meta[relay.Constant][38] /* ty=Tensor[(6, 45), float32] */, dtype="float32") /* ty=Tensor[(6, 45), float32] */;
  %499 = cast(meta[relay.Constant][39] /* ty=Tensor[(756), float64] */, dtype="float64") /* ty=Tensor[(756), float64] */;
  %500 = cast(meta[relay.Constant][38] /* ty=Tensor[(6, 45), float32] */, dtype="float32") /* ty=Tensor[(6, 45), float32] */;
  %501 = reshape(%498, newshape=[5, 9, 6]) /* ty=Tensor[(5, 9, 6), float32] */;
  %502 = reshape(%499, newshape=[9, 84]) /* ty=Tensor[(9, 84), float64] */;
  %503 = reshape(%500, newshape=[5, 9, 6]) /* ty=Tensor[(5, 9, 6), float32] */;
  %504 = @func_2457(%501, %502, %503) /* ty=(Tensor[(5, 9, 6), int32], Tensor[(540), float64], Tensor[(540), float64], Tensor[(9, 84), int16], Tensor[(5, 9, 6), bool]) */;
  %505 = %504.4;
  %506 = cast(%505, dtype="float32") /* ty=Tensor[(5, 9, 6), float32] */;
  %507 = log2(%506) /* ty=Tensor[(5, 9, 6), float32] */;
  %508 = cast(%507, dtype="float64") /* ty=Tensor[(5, 9, 6), float64] */;
  %509 = cast(%var_12351, dtype="float32") /* ty=Tensor[(5, 9, 6), float32] */;
  %510 = shape_of(%507, dtype="int32") /* ty=Tensor[(3), int32] */;
  %511 = cast(%507, dtype="float32") /* ty=Tensor[(5, 9, 6), float32] */;
  %512 = dyn.reshape(%509, %510, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %513 = @func_8799() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %514 = cast(%507, dtype="float32") /* ty=Tensor[(5, 9, 6), float32] */;
  %515 = cast(%var_12376, dtype="bool") /* ty=Tensor[(5, 9, 6), bool] */;
  %516 = shape_of(%507, dtype="int32") /* ty=Tensor[(3), int32] */;
  %517 = cast(%507, dtype="bool") /* ty=Tensor[(5, 9, 6), bool] */;
  %518 = dyn.reshape(%515, %516, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %519 = cast(%507, dtype="float64") /* ty=Tensor[(5, 9, 6), float64] */;
  %520 = %497.0;
  %521 = atanh(%508) /* ty=Tensor[(5, 9, 6), float64] */;
  %522 = mod(%511, %512) /* ty=Tensor[(5, 9, 6), float32] */;
  %523 = %513.0;
  %524 = rsqrt(%514) /* ty=Tensor[(5, 9, 6), float32] */;
  %525 = greater(%517, %518) /* ty=Tensor[(5, 9, 6), bool] */;
  %526 = sin(%519) /* ty=Tensor[(5, 9, 6), float64] */;
  (%520, meta[relay.Constant][38] /* ty=Tensor[(6, 45), float32] */, meta[relay.Constant][39] /* ty=Tensor[(756), float64] */, %521, %522, %523, %524, %525, %526)
}

def @func_11431() -> Tensor[(2, 8, 2), bool] {
  @func_5247() /* ty=Tensor[(2, 8, 2), bool] */
}

def @func_12922() -> (Tensor[(4, 40), float32],) {
  %527 = @func_10792() /* ty=Tensor[(4, 40), float32] */;
  (%527,)
}

def @func_5247() -> Tensor[(2, 8, 2), bool] {
  %528 = @func_5009() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %528.0
}

def @func_10757(%var_10745: Tensor[(1320), float64]) -> (Tensor[(8, 7, 9), float64], Tensor[(540), float64], Tensor[(294, 2), float64], Tensor[(1320), float64], Tensor[(2, 8, 2), bool], Tensor[(130), float32]) {
  %529 = cast(meta[relay.Constant][40] /* ty=Tensor[(294, 2), float64] */, dtype="float64") /* ty=Tensor[(294, 2), float64] */;
  %530 = cast(%var_10745, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %531 = reshape(%529, newshape=[588]) /* ty=Tensor[(588), float64] */;
  %532 = reshape(%530, newshape=[1320]) /* ty=Tensor[(1320), float64] */;
  %533 = @func_4656(%531, %532) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(660, 2), float64], Tensor[(588), float64], Tensor[(1320), float64], Tensor[(5, 12, 9), float64], Tensor[(540), float64], Tensor[(6, 3, 5), float64], Tensor[(90), float64]) */;
  %534 = cast(meta[relay.Constant][41] /* ty=Tensor[(130), float32] */, dtype="float32") /* ty=Tensor[(130), float32] */;
  %535 = reshape(%534, newshape=[26, 5]) /* ty=Tensor[(26, 5), float32] */;
  %536 = @func_7843(%535) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(588), float64], Tensor[(1320), float64], Tensor[(2, 5, 13), float64], float32, Tensor[(26, 5), float32], Tensor[(11, 12, 10), bool], Tensor[(2, 8, 2), bool]) */;
  %537 = @func_8751() /* ty=Tensor[(8, 7, 9), float64] */;
  %538 = %533.5;
  %539 = %536.1;
  (%537, %538, meta[relay.Constant][40] /* ty=Tensor[(294, 2), float64] */, %var_10745, %539, meta[relay.Constant][41] /* ty=Tensor[(130), float32] */)
}

def @func_8230() -> Tensor[(2, 8, 2), bool] {
  @func_7733() /* ty=Tensor[(2, 8, 2), bool] */
}

def @func_11196() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) {
  %540 = @func_6805() /* ty=Tensor[(2, 8, 2), bool] */;
  %541 = @func_7733() /* ty=Tensor[(2, 8, 2), bool] */;
  (%540, %541)
}

def @func_7432() -> (Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), bool]) {
  %542 = @func_7394() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %543 = @func_4283() /* ty=Tensor[(2, 8, 2), float32] */;
  %544 = %542.1;
  (%543, %544)
}

def @func_9020() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(90), float32], Tensor[(2, 8, 2), bool], Tensor[(384), float32], Tensor[(756), float64], Tensor[(540), float64], Tensor[(540), float64], Tensor[(2, 5, 13), float64], float32, Tensor[(130), float32]) {
  %545 = cast(meta[relay.Constant][42] /* ty=Tensor[(90), float32] */, dtype="float32") /* ty=Tensor[(90), float32] */;
  %546 = reshape(%545, newshape=[6, 3, 5]) /* ty=Tensor[(6, 3, 5), float32] */;
  %547 = @func_8650(%546) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(6, 3, 5), uint64], Tensor[(2, 8, 2), bool], Tensor[(6, 3, 5), uint32]) */;
  %548 = cast(meta[relay.Constant][43] /* ty=Tensor[(384), float32] */, dtype="float32") /* ty=Tensor[(384), float32] */;
  %549 = cast(meta[relay.Constant][44] /* ty=Tensor[(756), float64] */, dtype="float64") /* ty=Tensor[(756), float64] */;
  %550 = reshape(%548, newshape=[384]) /* ty=Tensor[(384), float32] */;
  %551 = reshape(%549, newshape=[756]) /* ty=Tensor[(756), float64] */;
  %552 = @func_5987(%550, %551) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(384), float32], Tensor[(756), float64], Tensor[(80, 2), int16], Tensor[(5, 4, 8), float64], Tensor[(1, 384), float32]) */;
  %553 = cast(meta[relay.Constant][45] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %554 = reshape(%553, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %555 = @func_4004(%554) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(5, 12, 9), float64], Tensor[(540), float64]) */;
  %556 = cast(-6.10746f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %557 = cast(meta[relay.Constant][46] /* ty=Tensor[(130), float32] */, dtype="float32") /* ty=Tensor[(130), float32] */;
  %558 = reshape(%556, newshape=[]) /* ty=float32 */;
  %559 = reshape(%557, newshape=[2, 5, 13]) /* ty=Tensor[(2, 5, 13), float32] */;
  %560 = @func_6069(%558, %559) /* ty=(Tensor[(2, 5, 13), float32], Tensor[(2, 5, 13), float64]) */;
  %561 = @func_6382() /* ty=Tensor[(2, 8, 2), bool] */;
  %562 = %547.0;
  %563 = %552.0;
  %564 = %555.2;
  %565 = %560.1;
  (%561, %562, meta[relay.Constant][42] /* ty=Tensor[(90), float32] */, %563, meta[relay.Constant][43] /* ty=Tensor[(384), float32] */, meta[relay.Constant][44] /* ty=Tensor[(756), float64] */, %564, meta[relay.Constant][45] /* ty=Tensor[(540), float64] */, %565, -6.10746f /* ty=float32 */, meta[relay.Constant][46] /* ty=Tensor[(130), float32] */)
}

def @func_3725(%var_3716: Tensor[(11, 12, 6), int8]) -> (Tensor[(11, 12, 6), int8], Tensor[(13, 8, 14), float32], Tensor[(1456), float32]) {
  %566 = cast(meta[relay.Constant][47] /* ty=Tensor[(1, 12, 6), int8] */, dtype="int8") /* ty=Tensor[(1, 12, 6), int8] */;
  %567 = cast(%var_3716, dtype="int8") /* ty=Tensor[(11, 12, 6), int8] */;
  %568 = cast(meta[relay.Constant][48] /* ty=Tensor[(1456), float32] */, dtype="float32") /* ty=Tensor[(1456), float32] */;
  %569 = reshape(%568, newshape=[13, 8, 14]) /* ty=Tensor[(13, 8, 14), float32] */;
  %570 = @func_2537(%569) /* ty=(Tensor[(13, 8, 14), float32], Tensor[(396), float32], Tensor[(660, 2), float64]) */;
  %571 = multiply(%566, %567) /* ty=Tensor[(11, 12, 6), int8] */;
  %572 = %570.0;
  (%571, %572, meta[relay.Constant][48] /* ty=Tensor[(1456), float32] */)
}

def @func_10185() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), int8]) {
  %573 = @func_6805() /* ty=Tensor[(2, 8, 2), bool] */;
  %574 = @func_4593() /* ty=Tensor[(2, 8, 2), int8] */;
  (%573, %574)
}

def @func_12601() -> (Tensor[(2, 8, 2), bool], Tensor[(4, 364), float32]) {
  %575 = @func_9963() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %576 = @func_8730() /* ty=(Tensor[(4, 364), float32], Tensor[(2, 8, 2), bool]) */;
  %577 = %575.0;
  %578 = %576.0;
  (%577, %578)
}

def @func_4305() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) {
  %579 = @func_3907() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %580 = @func_4042() /* ty=Tensor[(2, 8, 2), bool] */;
  %581 = %579.0;
  (%580, %581)
}

def @func_13621(%var_13564: Tensor[(96, 4), float32]) -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(13, 8, 14), float32], Tensor[(2, 8, 2), bool], Tensor[(756), float64], Tensor[(96, 4), float32], Tensor[(756), float64], Tensor[(792), uint16], Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), float32]) {
  %582 = @func_4305() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %583 = %582.0;
  %584 = cast(%583, dtype="float32") /* ty=Tensor[(2, 8, 2), float32] */;
  %585 = reshape(%584, newshape=[2, 8, 2]) /* ty=Tensor[(2, 8, 2), float32] */;
  %586 = cast(meta[relay.Constant][49] /* ty=Tensor[(792), int8] */, dtype="int8") /* ty=Tensor[(792), int8] */;
  %587 = reshape(%586, newshape=[11, 12, 6]) /* ty=Tensor[(11, 12, 6), int8] */;
  %588 = @func_3725(%587) /* ty=(Tensor[(11, 12, 6), int8], Tensor[(13, 8, 14), float32], Tensor[(1456), float32]) */;
  %589 = @func_10239(%585) /* ty=Tensor[(2, 8, 2), bool] */;
  %590 = cast(%589, dtype="bool") /* ty=Tensor[(2, 8, 2), bool] */;
  %591 = reshape(%590, newshape=[2, 8, 2]) /* ty=Tensor[(2, 8, 2), bool] */;
  %592 = @func_6568(%591) /* ty=(Tensor[(2, 8, 2), int16], Tensor[(2, 8, 2), bool]) */;
  %593 = cast(%var_13564, dtype="float32") /* ty=Tensor[(96, 4), float32] */;
  %594 = cast(meta[relay.Constant][50] /* ty=Tensor[(756), float64] */, dtype="float64") /* ty=Tensor[(756), float64] */;
  %595 = reshape(%593, newshape=[8, 3, 16]) /* ty=Tensor[(8, 3, 16), float32] */;
  %596 = reshape(%594, newshape=[756]) /* ty=Tensor[(756), float64] */;
  %597 = @func_2813(%595, %596) /* ty=(Tensor[(540), float64], Tensor[(270, 1), float32], Tensor[(756), float64], Tensor[(8, 3, 16), float64], Tensor[(8, 3, 16), float64]) */;
  %598 = cast(meta[relay.Constant][49] /* ty=Tensor[(792), int8] */, dtype="float32") /* ty=Tensor[(792), float32] */;
  %599 = cos(%598) /* ty=Tensor[(792), float32] */;
  %600 = cast(%599, dtype="float32") /* ty=Tensor[(792), float32] */;
  %601 = sqrt(%600) /* ty=Tensor[(792), float32] */;
  %602 = @func_11272() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(?, 7, 2), float64], Tensor[(7, 2), float32], Tensor[(11, 12, 6), int32], Tensor[(540, 1), float64]) */;
  %603 = %602.3;
  %604 = cast(%603, dtype="uint16") /* ty=Tensor[(11, 12, 6), uint16] */;
  %605 = shape_of(%601, dtype="int32") /* ty=Tensor[(1), int32] */;
  %606 = cast(%601, dtype="uint16") /* ty=Tensor[(792), uint16] */;
  %607 = dyn.reshape(%604, %605, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %608 = @func_11912() /* ty=(Tensor[(1456), float32], Tensor[(2, 8, 2), float32]) */;
  %609 = @func_6712() /* ty=(Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), bool]) */;
  %610 = %588.1;
  %611 = %592.1;
  %612 = %597.2;
  %613 = maximum(%606, %607) /* ty=Tensor[(792), uint16] */;
  %614 = %608.1;
  %615 = %609.0;
  (%583, %589, %610, %611, %612, %var_13564, meta[relay.Constant][50] /* ty=Tensor[(756), float64] */, %613, %614, %615)
}

def @func_10898(%var_10890: Tensor[(2, 8, 5), float32]) -> Tensor[(2, 8, 5), float32] {
  %616 = cast(%var_10890, dtype="float32") /* ty=Tensor[(2, 8, 5), float32] */;
  asin(%616) /* ty=Tensor[(2, 8, 5), float32] */
}

def @func_16082() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(11, 12, 10), bool], Tensor[(1320, 1), float64], Tensor[(2, 8, 2), float64], Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), bool]) {
  %617 = @func_8799() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %618 = cast(meta[relay.Constant][51] /* ty=Tensor[(1320, 1), float64] */, dtype="float64") /* ty=Tensor[(1320, 1), float64] */;
  %619 = reshape(%618, newshape=[11, 12, 10]) /* ty=Tensor[(11, 12, 10), float64] */;
  %620 = @func_2173(%619) /* ty=(Tensor[(11, 12, 10), bool], Tensor[(11, 6, 6), float32], Tensor[(396), float32]) */;
  %621 = @func_7221() /* ty=(Tensor[(2, 8, 2), float64],) */;
  %622 = @func_7394() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %623 = @func_11912() /* ty=(Tensor[(1456), float32], Tensor[(2, 8, 2), float32]) */;
  %624 = @func_6180() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(6, 3, 5), float64], Tensor[(90), float64]) */;
  %625 = %617.0;
  %626 = @func_13832() /* ty=Tensor[(2, 8, 2), bool] */;
  %627 = %620.0;
  %628 = %621.0;
  %629 = %622.1;
  %630 = %623.1;
  %631 = %624.0;
  (%625, %626, %627, meta[relay.Constant][51] /* ty=Tensor[(1320, 1), float64] */, %628, %629, %630, %631)
}

def @func_13065() -> Tensor[(90), float64] {
  %632 = @func_6180() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(6, 3, 5), float64], Tensor[(90), float64]) */;
  %632.2
}

def @func_7690() -> Tensor[(2, 8, 2), float32] {
  %633 = @func_6712() /* ty=(Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), bool]) */;
  %633.0
}

def @func_7843(%var_7797: Tensor[(26, 5), float32]) -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(588), float64], Tensor[(1320), float64], Tensor[(2, 5, 13), float64], float32, Tensor[(26, 5), float32], Tensor[(11, 12, 10), bool], Tensor[(2, 8, 2), bool]) {
  %634 = @func_3661() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %635 = @func_6865() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %636 = cast(meta[relay.Constant][52] /* ty=Tensor[(588), float64] */, dtype="float64") /* ty=Tensor[(588), float64] */;
  %637 = cast(meta[relay.Constant][53] /* ty=Tensor[(1320), float64] */, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %638 = reshape(%636, newshape=[588]) /* ty=Tensor[(588), float64] */;
  %639 = reshape(%637, newshape=[1320]) /* ty=Tensor[(1320), float64] */;
  %640 = @func_4656(%638, %639) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(660, 2), float64], Tensor[(588), float64], Tensor[(1320), float64], Tensor[(5, 12, 9), float64], Tensor[(540), float64], Tensor[(6, 3, 5), float64], Tensor[(90), float64]) */;
  %641 = cast(0.853305f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %642 = cast(%var_7797, dtype="float32") /* ty=Tensor[(26, 5), float32] */;
  %643 = reshape(%641, newshape=[]) /* ty=float32 */;
  %644 = reshape(%642, newshape=[2, 5, 13]) /* ty=Tensor[(2, 5, 13), float32] */;
  %645 = @func_6069(%643, %644) /* ty=(Tensor[(2, 5, 13), float32], Tensor[(2, 5, 13), float64]) */;
  %646 = cast(meta[relay.Constant][52] /* ty=Tensor[(588), float64] */, dtype="float64") /* ty=Tensor[(588), float64] */;
  %647 = cast(meta[relay.Constant][53] /* ty=Tensor[(1320), float64] */, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %648 = reshape(%646, newshape=[1, 588]) /* ty=Tensor[(1, 588), float64] */;
  %649 = reshape(%647, newshape=[1320]) /* ty=Tensor[(1320), float64] */;
  %650 = @func_5358(%648, %649) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(5, 12, 9), float64], Tensor[(540), float64], Tensor[(11, 12, 6), int32], Tensor[(792), int8], Tensor[(11, 12, 10), bool], Tensor[(1, 588), float64], Tensor[(1320), float64]) */;
  %651 = %634.0;
  %652 = %635.0;
  %653 = %640.0;
  %654 = %645.1;
  %655 = %650.5;
  %656 = @func_5247() /* ty=Tensor[(2, 8, 2), bool] */;
  (%651, %652, %653, meta[relay.Constant][52] /* ty=Tensor[(588), float64] */, meta[relay.Constant][53] /* ty=Tensor[(1320), float64] */, %654, 0.853305f /* ty=float32 */, %var_7797, %655, %656)
}

def @func_4042() -> Tensor[(2, 8, 2), bool] {
  %657 = @func_3907() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %657.0
}

def @func_839(%var_833: Tensor[(5, 12, 9), float64]) -> Tensor[(5, 12, 9), float64] {
  %658 = cast(%var_833, dtype="float64") /* ty=Tensor[(5, 12, 9), float64] */;
  asin(%658) /* ty=Tensor[(5, 12, 9), float64] */
}

def @func_15402(%var_15386: Tensor[(9, 14, 15), float32]) -> (Tensor[(9, 14, 15), bool], Tensor[(9, 14, 15), float64]) {
  %659 = cast(meta[relay.Constant][54] /* ty=Tensor[(9, 14, 15), float32] */, dtype="bool") /* ty=Tensor[(9, 14, 15), bool] */;
  %660 = shape_of(%var_15386, dtype="int32") /* ty=Tensor[(3), int32] */;
  %661 = cast(%var_15386, dtype="bool") /* ty=Tensor[(9, 14, 15), bool] */;
  %662 = dyn.reshape(%659, %660, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %663 = cast(%var_15386, dtype="float64") /* ty=Tensor[(9, 14, 15), float64] */;
  %664 = not_equal(%661, %662) /* ty=Tensor[(9, 14, 15), bool] */;
  %665 = sigmoid(%663) /* ty=Tensor[(9, 14, 15), float64] */;
  (%664, %665)
}

def @func_7611() -> (Tensor[(2, 8, 2), bool], Tensor[(11, 6, 6), float32], Tensor[(396), float32]) {
  %666 = @func_3493() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %667 = cast(meta[relay.Constant][55] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
  %668 = reshape(%667, newshape=[11, 6, 6]) /* ty=Tensor[(11, 6, 6), float32] */;
  %669 = %666.0;
  %670 = @func_1929(%668) /* ty=Tensor[(11, 6, 6), float32] */;
  (%669, %670, meta[relay.Constant][55] /* ty=Tensor[(396), float32] */)
}

def @func_3555(%var_3546: Tensor[(2, 8, 2), bool], %var_3553: Tensor[(1456), float32]) -> (Tensor[(2, 8, 2), bool], Tensor[(660, 2), float64], Tensor[(1456), float32]) {
  %671 = @func_3493() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %672 = %671.0;
  %673 = cast(%var_3546, dtype="bool") /* ty=Tensor[(2, 8, 2), bool] */;
  %674 = shape_of(%672, dtype="int32") /* ty=Tensor[(3), int32] */;
  %675 = cast(%672, dtype="bool") /* ty=Tensor[(2, 8, 2), bool] */;
  %676 = dyn.reshape(%673, %674, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %677 = cast(%var_3553, dtype="float32") /* ty=Tensor[(1456), float32] */;
  %678 = reshape(%677, newshape=[13, 8, 14]) /* ty=Tensor[(13, 8, 14), float32] */;
  %679 = @func_2537(%678) /* ty=(Tensor[(13, 8, 14), float32], Tensor[(396), float32], Tensor[(660, 2), float64]) */;
  %680 = greater(%675, %676) /* ty=Tensor[(2, 8, 2), bool] */;
  %681 = %679.2;
  (%680, %681, %var_3553)
}

def @func_11545() -> (Tensor[(2, 8, 2), float64],) {
  %682 = @func_11089() /* ty=(Tensor[(2, 8, 2), int8], Tensor[(2, 8, 2), bool]) */;
  %683 = %682.1;
  %684 = cast(%683, dtype="float64") /* ty=Tensor[(2, 8, 2), float64] */;
  %685 = cos(%684) /* ty=Tensor[(2, 8, 2), float64] */;
  (%685,)
}

def @func_14921(%var_14906: Tensor[(15, 7, 5), float64]) -> Tensor[(15, 7, 5), float64] {
  %686 = cast(%var_14906, dtype="float64") /* ty=Tensor[(15, 7, 5), float64] */;
  atanh(%686) /* ty=Tensor[(15, 7, 5), float64] */
}

def @func_7471() -> (Tensor[(90), float64], Tensor[(4, 364), float32], Tensor[(660, 2), float32], Tensor[(2, 8, 2), bool]) {
  %687 = @func_6180() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(6, 3, 5), float64], Tensor[(90), float64]) */;
  %688 = cast(meta[relay.Constant][56] /* ty=Tensor[(4, 364), float32] */, dtype="float32") /* ty=Tensor[(4, 364), float32] */;
  %689 = reshape(%688, newshape=[13, 8, 14]) /* ty=Tensor[(13, 8, 14), float32] */;
  %690 = @func_2537(%689) /* ty=(Tensor[(13, 8, 14), float32], Tensor[(396), float32], Tensor[(660, 2), float64]) */;
  %691 = %690.2;
  %692 = cast(%691, dtype="float32") /* ty=Tensor[(660, 2), float32] */;
  %693 = %687.2;
  %694 = sinh(%692) /* ty=Tensor[(660, 2), float32] */;
  %695 = @func_6372() /* ty=Tensor[(2, 8, 2), bool] */;
  (%693, meta[relay.Constant][56] /* ty=Tensor[(4, 364), float32] */, %694, %695)
}

def @func_8682(%var_8675: Tensor[(15, 7, 9), bool], %var_8676: Tensor[(15, 7, 9), bool]) -> (Tensor[(15, 7, 9), bool], Tensor[(4, 364), float32]) {
  %696 = cast(%var_8676, dtype="bool") /* ty=Tensor[(15, 7, 9), bool] */;
  %697 = shape_of(%var_8675, dtype="int32") /* ty=Tensor[(3), int32] */;
  %698 = cast(%var_8675, dtype="bool") /* ty=Tensor[(15, 7, 9), bool] */;
  %699 = dyn.reshape(%696, %697, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %700 = @func_7471() /* ty=(Tensor[(90), float64], Tensor[(4, 364), float32], Tensor[(660, 2), float32], Tensor[(2, 8, 2), bool]) */;
  %701 = logical_and(%698, %699) /* ty=Tensor[(15, 7, 9), bool] */;
  %702 = %700.1;
  (%701, %702)
}

def @func_14953(%var_14945: Tensor[(80, 1), float32]) -> (Tensor[(2, 8, 2), bool], float32, float32, Tensor[(2, 8, 5), float32], Tensor[(80, 1), float32]) {
  %703 = @func_12120() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %704 = cast(-1.12776f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %705 = reshape(%704, newshape=[]) /* ty=float32 */;
  %706 = @func_14221(%705) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(11, 6, 6), float32], float32, Tensor[(130), float32]) */;
  %707 = cast(%var_14945, dtype="float32") /* ty=Tensor[(80, 1), float32] */;
  %708 = reshape(%707, newshape=[20, 4]) /* ty=Tensor[(20, 4), float32] */;
  %709 = @func_12464(%708) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 5), float32], Tensor[(20, 4), float32]) */;
  %710 = %703.2;
  %711 = %706.2;
  %712 = %709.1;
  (%710, %711, -1.12776f /* ty=float32 */, %712, %var_14945)
}

def @func_3870(%var_3865: Tensor[(1, 384), float32], %var_3866: Tensor[(756), float64]) -> (Tensor[(2, 8, 2), bool], Tensor[(8, 3, 16), float64], Tensor[(1, 384), float32], Tensor[(756), float64]) {
  %713 = @func_3493() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %714 = cast(%var_3865, dtype="float32") /* ty=Tensor[(1, 384), float32] */;
  %715 = cast(%var_3866, dtype="float64") /* ty=Tensor[(756), float64] */;
  %716 = reshape(%714, newshape=[8, 3, 16]) /* ty=Tensor[(8, 3, 16), float32] */;
  %717 = reshape(%715, newshape=[756]) /* ty=Tensor[(756), float64] */;
  %718 = @func_2813(%716, %717) /* ty=(Tensor[(540), float64], Tensor[(270, 1), float32], Tensor[(756), float64], Tensor[(8, 3, 16), float64], Tensor[(8, 3, 16), float64]) */;
  %719 = %713.1;
  %720 = %718.3;
  (%719, %720, %var_3865, %var_3866)
}

def @func_10539(%var_10519: Tensor[(4, 364), float32]) -> (Tensor[(4, 364), bool], Tensor[(2, 8, 2), float32], Tensor[(4, 364), float64]) {
  %721 = @func_7471() /* ty=(Tensor[(90), float64], Tensor[(4, 364), float32], Tensor[(660, 2), float32], Tensor[(2, 8, 2), bool]) */;
  %722 = %721.1;
  %723 = cast(%var_10519, dtype="bool") /* ty=Tensor[(4, 364), bool] */;
  %724 = shape_of(%722, dtype="int32") /* ty=Tensor[(2), int32] */;
  %725 = cast(%722, dtype="bool") /* ty=Tensor[(4, 364), bool] */;
  %726 = dyn.reshape(%723, %724, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %727 = @func_5125() /* ty=(Tensor[(2, 8, 2), float32],) */;
  %728 = cast(%var_10519, dtype="float64") /* ty=Tensor[(4, 364), float64] */;
  %729 = logical_and(%725, %726) /* ty=Tensor[(4, 364), bool] */;
  %730 = %727.0;
  %731 = cosh(%728) /* ty=Tensor[(4, 364), float64] */;
  (%729, %730, %731)
}

def @func_12464(%var_12456: Tensor[(20, 4), float32]) -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 5), float32], Tensor[(20, 4), float32]) {
  %732 = cast(%var_12456, dtype="float32") /* ty=Tensor[(20, 4), float32] */;
  %733 = reshape(%732, newshape=[2, 8, 5]) /* ty=Tensor[(2, 8, 5), float32] */;
  %734 = @func_6372() /* ty=Tensor[(2, 8, 2), bool] */;
  %735 = @func_10898(%733) /* ty=Tensor[(2, 8, 5), float32] */;
  (%734, %735, %var_12456)
}

def @func_6837() -> (Tensor[(2, 8, 2), bool],) {
  %736 = @func_5247() /* ty=Tensor[(2, 8, 2), bool] */;
  (%736,)
}

def @func_8459(%var_8432: Tensor[(2, 8, 2), bool]) -> Tensor[(2, 8, 2), float32] {
  %737 = @func_6805() /* ty=Tensor[(2, 8, 2), bool] */;
  %738 = cast(%var_8432, dtype="int16") /* ty=Tensor[(2, 8, 2), int16] */;
  %739 = shape_of(%737, dtype="int32") /* ty=Tensor[(3), int32] */;
  %740 = cast(%737, dtype="int16") /* ty=Tensor[(2, 8, 2), int16] */;
  %741 = dyn.reshape(%738, %739, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %742 = bitwise_xor(%740, %741) /* ty=Tensor[(2, 8, 2), int16] */;
  %743 = cast(%742, dtype="float32") /* ty=Tensor[(2, 8, 2), float32] */;
  log10(%743) /* ty=Tensor[(2, 8, 2), float32] */
}

def @func_6977(%var_6967: Tensor[(660, 2), float64]) -> (Tensor[(6, 3, 5), float64], Tensor[(11, 12, 10), bool], Tensor[(660, 2), float64]) {
  %744 = @func_6180() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(6, 3, 5), float64], Tensor[(90), float64]) */;
  %745 = cast(%var_6967, dtype="float64") /* ty=Tensor[(660, 2), float64] */;
  %746 = reshape(%745, newshape=[11, 12, 10]) /* ty=Tensor[(11, 12, 10), float64] */;
  %747 = @func_2173(%746) /* ty=(Tensor[(11, 12, 10), bool], Tensor[(11, 6, 6), float32], Tensor[(396), float32]) */;
  %748 = %744.1;
  %749 = %747.0;
  (%748, %749, %var_6967)
}

def @func_8730() -> (Tensor[(4, 364), float32], Tensor[(2, 8, 2), bool]) {
  %750 = @func_7471() /* ty=(Tensor[(90), float64], Tensor[(4, 364), float32], Tensor[(660, 2), float32], Tensor[(2, 8, 2), bool]) */;
  %751 = %750.1;
  %752 = cast(%751, dtype="float32") /* ty=Tensor[(4, 364), float32] */;
  %753 = reshape(%752, newshape=[4, 364]) /* ty=Tensor[(4, 364), float32] */;
  %754 = @func_3837(%753) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(4, 364), float64], Tensor[(2, 8, 2), float32], Tensor[(13, 8, 14), float32], Tensor[(792), int8]) */;
  %755 = %754.1;
  (%751, %755)
}

def @func_12751() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), uint32]) {
  %756 = @func_3907() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %757 = %756.0;
  %758 = @func_12268() /* ty=Tensor[(2, 8, 2), uint32] */;
  (%757, %758)
}

def @func_7267() -> Tensor[(2, 8, 2), bool] {
  %759 = @func_4222() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %759.0
}

def @func_9948(%var_9892: float32) -> (Tensor[(5, 6, 3), bool], Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(1050), uint8], Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), bool]) {
  %760 = cast(%var_9892, dtype="bool") /* ty=bool */;
  %761 = cast(meta[relay.Constant][57] /* ty=Tensor[(5, 6, 3), float32] */, dtype="bool") /* ty=Tensor[(5, 6, 3), bool] */;
  %762 = cast(meta[relay.Constant][58] /* ty=Tensor[(1050), uint8] */, dtype="uint8") /* ty=Tensor[(1050), uint8] */;
  %763 = cast(meta[relay.Constant][58] /* ty=Tensor[(1050), uint8] */, dtype="uint8") /* ty=Tensor[(1050), uint8] */;
  %764 = reshape(%762, newshape=[5, 15, 14]) /* ty=Tensor[(5, 15, 14), uint8] */;
  %765 = reshape(%763, newshape=[5, 15, 14]) /* ty=Tensor[(5, 15, 14), uint8] */;
  %766 = @func_8529(%764, %765) /* ty=(Tensor[(5, 15, 14), uint8], Tensor[(2, 8, 2), bool]) */;
  %767 = @func_8182() /* ty=(Tensor[(2, 8, 2), float32],) */;
  %768 = less(%760, %761) /* ty=Tensor[(5, 6, 3), bool] */;
  %769 = @func_6382() /* ty=Tensor[(2, 8, 2), bool] */;
  %770 = %766.1;
  %771 = %767.0;
  %772 = @func_6805() /* ty=Tensor[(2, 8, 2), bool] */;
  (%768, %769, %770, meta[relay.Constant][58] /* ty=Tensor[(1050), uint8] */, %771, %772)
}

def @func_15536() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(9, 6, 13), float64], Tensor[(702), float64]) {
  %773 = @func_13145() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %774 = cast(meta[relay.Constant][59] /* ty=Tensor[(702), float64] */, dtype="float64") /* ty=Tensor[(702), float64] */;
  %775 = reshape(%774, newshape=[9, 6, 13]) /* ty=Tensor[(9, 6, 13), float64] */;
  %776 = %773.2;
  %777 = @func_8230() /* ty=Tensor[(2, 8, 2), bool] */;
  %778 = @func_8505(%775) /* ty=Tensor[(9, 6, 13), float64] */;
  (%776, %777, %778, meta[relay.Constant][59] /* ty=Tensor[(702), float64] */)
}

def @func_6712() -> (Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), bool]) {
  %779 = @func_5125() /* ty=(Tensor[(2, 8, 2), float32],) */;
  %780 = @func_3661() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %781 = %779.0;
  %782 = %780.0;
  (%781, %782)
}

def @func_11816() -> (Tensor[(2, 8, 2), float32], Tensor[(11, 12, 10), bool], Tensor[(588), float64], Tensor[(660, 2), float64], Tensor[(2, 8, 2), bool]) {
  %783 = @func_9124() /* ty=(Tensor[(2, 8, 2), float32],) */;
  %784 = cast(meta[relay.Constant][60] /* ty=Tensor[(588), float64] */, dtype="float64") /* ty=Tensor[(588), float64] */;
  %785 = cast(meta[relay.Constant][61] /* ty=Tensor[(660, 2), float64] */, dtype="float64") /* ty=Tensor[(660, 2), float64] */;
  %786 = reshape(%784, newshape=[14, 6, 7]) /* ty=Tensor[(14, 6, 7), float64] */;
  %787 = reshape(%785, newshape=[660, 2]) /* ty=Tensor[(660, 2), float64] */;
  %788 = @func_4025(%786, %787) /* ty=(Tensor[(14, 6, 7), float64], Tensor[(11, 12, 10), bool], Tensor[(660, 2), float64]) */;
  %789 = %783.0;
  %790 = %788.1;
  %791 = @func_7539() /* ty=Tensor[(2, 8, 2), bool] */;
  (%789, %790, meta[relay.Constant][60] /* ty=Tensor[(588), float64] */, meta[relay.Constant][61] /* ty=Tensor[(660, 2), float64] */, %791)
}

def @func_10602() -> (Tensor[(2, 8, 2), uint32],) {
  %792 = @func_10044() /* ty=Tensor[(2, 8, 2), uint32] */;
  (%792,)
}

def @func_9110() -> (Tensor[(2, 8, 2), bool], Tensor[(4, 40), float64], Tensor[(4, 40), uint32], Tensor[(8, 3, 16), float64], Tensor[(384), float32], Tensor[(756), float64]) {
  %793 = cast(meta[relay.Constant][62] /* ty=Tensor[(160), int16] */, dtype="int16") /* ty=Tensor[(160), int16] */;
  %794 = reshape(%793, newshape=[4, 40]) /* ty=Tensor[(4, 40), int16] */;
  %795 = @func_5090(%794) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(5, 4, 8), int16], Tensor[(4, 40), int16], Tensor[(540), float64]) */;
  %796 = %795.2;
  %797 = cast(%796, dtype="float64") /* ty=Tensor[(4, 40), float64] */;
  %798 = cast(meta[relay.Constant][62] /* ty=Tensor[(160), int16] */, dtype="uint32") /* ty=Tensor[(160), uint32] */;
  %799 = shape_of(%796, dtype="int32") /* ty=Tensor[(2), int32] */;
  %800 = cast(%796, dtype="uint32") /* ty=Tensor[(4, 40), uint32] */;
  %801 = dyn.reshape(%798, %799, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %802 = cast(meta[relay.Constant][63] /* ty=Tensor[(384), float32] */, dtype="float32") /* ty=Tensor[(384), float32] */;
  %803 = cast(meta[relay.Constant][64] /* ty=Tensor[(756), float64] */, dtype="float64") /* ty=Tensor[(756), float64] */;
  %804 = reshape(%802, newshape=[8, 3, 16]) /* ty=Tensor[(8, 3, 16), float32] */;
  %805 = reshape(%803, newshape=[756]) /* ty=Tensor[(756), float64] */;
  %806 = @func_2813(%804, %805) /* ty=(Tensor[(540), float64], Tensor[(270, 1), float32], Tensor[(756), float64], Tensor[(8, 3, 16), float64], Tensor[(8, 3, 16), float64]) */;
  %807 = @func_6428() /* ty=Tensor[(2, 8, 2), bool] */;
  %808 = acos(%797) /* ty=Tensor[(4, 40), float64] */;
  %809 = bitwise_and(%800, %801) /* ty=Tensor[(4, 40), uint32] */;
  %810 = %806.4;
  (%807, %808, %809, %810, meta[relay.Constant][63] /* ty=Tensor[(384), float32] */, meta[relay.Constant][64] /* ty=Tensor[(756), float64] */)
}

def @func_3766() -> (Tensor[(2, 8, 2), int8], Tensor[(2, 8, 2), float32]) {
  %811 = @func_3493() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %812 = %811.1;
  %813 = @func_3493() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %814 = %813.1;
  %815 = cast(%814, dtype="int8") /* ty=Tensor[(2, 8, 2), int8] */;
  %816 = shape_of(%812, dtype="int32") /* ty=Tensor[(3), int32] */;
  %817 = cast(%812, dtype="int8") /* ty=Tensor[(2, 8, 2), int8] */;
  %818 = dyn.reshape(%815, %816, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %819 = cast(%814, dtype="float32") /* ty=Tensor[(2, 8, 2), float32] */;
  %820 = subtract(%817, %818) /* ty=Tensor[(2, 8, 2), int8] */;
  %821 = sigmoid(%819) /* ty=Tensor[(2, 8, 2), float32] */;
  (%820, %821)
}

def @func_16117() -> Tensor[(2, 8, 2), bool] {
  @func_4086() /* ty=Tensor[(2, 8, 2), bool] */
}

def @func_14847() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) {
  %822 = @func_4086() /* ty=Tensor[(2, 8, 2), bool] */;
  %823 = @func_7267() /* ty=Tensor[(2, 8, 2), bool] */;
  (%822, %823)
}

def @func_15892(%var_15880: Tensor[(1008), float64], %var_15881: Tensor[(756), float64], %var_15882: Tensor[(540), float64]) -> (Tensor[(2, 8, 2), uint32], Tensor[(5, 12, 9), float64], Tensor[(1008), float64], Tensor[(756), float64], Tensor[(540), float64], Tensor[(2, 8, 2), float32]) {
  %824 = cast(%var_15880, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %825 = cast(%var_15881, dtype="float64") /* ty=Tensor[(756), float64] */;
  %826 = cast(%var_15882, dtype="float64") /* ty=Tensor[(540), float64] */;
  %827 = reshape(%824, newshape=[7, 12, 12]) /* ty=Tensor[(7, 12, 12), float64] */;
  %828 = reshape(%825, newshape=[756]) /* ty=Tensor[(756), float64] */;
  %829 = reshape(%826, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %830 = @func_1180(%827, %828, %829) /* ty=(Tensor[(7, 12, 12), float64], Tensor[(540), float64], Tensor[(756), float64], Tensor[(540), float64], Tensor[(5, 12, 9), float64]) */;
  %831 = @func_8182() /* ty=(Tensor[(2, 8, 2), float32],) */;
  %832 = @func_12268() /* ty=Tensor[(2, 8, 2), uint32] */;
  %833 = %830.4;
  %834 = %831.0;
  (%832, %833, %var_15880, %var_15881, %var_15882, %834)
}

def @func_15979() -> (Tensor[(2, 8, 2), uint32],) {
  %835 = @func_5156() /* ty=Tensor[(2, 8, 2), uint32] */;
  (%835,)
}

def @func_14998(%var_14966: Tensor[(5, 1, 5), float64]) -> (Tensor[(5, ?, 5), float64], Tensor[(2, 8, 2), float32], Tensor[(4, 40), float32]) {
  %836 = cast(%var_14966, dtype="float64") /* ty=Tensor[(5, 1, 5), float64] */;
  %837 = shape_of(meta[relay.Constant][65] /* ty=Tensor[(5, 1, 5), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %838 = cast(meta[relay.Constant][65] /* ty=Tensor[(5, 1, 5), float64] */, dtype="float64") /* ty=Tensor[(5, 1, 5), float64] */;
  %839 = dyn.reshape(%836, %837, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %840 = @func_13174() /* ty=(Tensor[(2, 8, 2), float32],) */;
  %841 = @func_12922() /* ty=(Tensor[(4, 40), float32],) */;
  %842 = divide(%838, %839) /* ty=Tensor[(5, ?, 5), float64] */;
  %843 = %840.0;
  %844 = %841.0;
  (%842, %843, %844)
}

def @func_14372(%var_14318: float32) -> (Tensor[(2, 8, 2), bool], Tensor[(11, 6, 6), float32], float32, Tensor[(90), float64], Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) {
  %845 = cast(%var_14318, dtype="float32") /* ty=float32 */;
  %846 = reshape(%845, newshape=[]) /* ty=float32 */;
  %847 = @func_14221(%846) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(11, 6, 6), float32], float32, Tensor[(130), float32]) */;
  %848 = @func_10453() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %849 = @func_13917() /* ty=Tensor[(2, 8, 2), bool] */;
  %850 = %847.1;
  %851 = @func_13065() /* ty=Tensor[(90), float64] */;
  %852 = @func_4283() /* ty=Tensor[(2, 8, 2), float32] */;
  %853 = %848.0;
  %854 = @func_4086() /* ty=Tensor[(2, 8, 2), bool] */;
  (%849, %850, %var_14318, %851, %852, %853, %854)
}

def @func_2537(%var_2500: Tensor[(13, 8, 14), float32]) -> (Tensor[(13, 8, 14), float32], Tensor[(396), float32], Tensor[(660, 2), float64]) {
  %855 = cast(%var_2500, dtype="float32") /* ty=Tensor[(13, 8, 14), float32] */;
  %856 = cast(meta[relay.Constant][66] /* ty=Tensor[(660, 2), float64] */, dtype="float64") /* ty=Tensor[(660, 2), float64] */;
  %857 = reshape(%856, newshape=[11, 12, 10]) /* ty=Tensor[(11, 12, 10), float64] */;
  %858 = @func_2173(%857) /* ty=(Tensor[(11, 12, 10), bool], Tensor[(11, 6, 6), float32], Tensor[(396), float32]) */;
  %859 = acosh(%855) /* ty=Tensor[(13, 8, 14), float32] */;
  %860 = %858.2;
  (%859, %860, meta[relay.Constant][66] /* ty=Tensor[(660, 2), float64] */)
}

def @func_5358(%var_5344: Tensor[(1, 588), float64], %var_5345: Tensor[(1320), float64]) -> (Tensor[(2, 8, 2), bool], Tensor[(5, 12, 9), float64], Tensor[(540), float64], Tensor[(11, 12, 6), int32], Tensor[(792), int8], Tensor[(11, 12, 10), bool], Tensor[(1, 588), float64], Tensor[(1320), float64]) {
  %861 = cast(meta[relay.Constant][67] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %862 = reshape(%861, newshape=[5, 12, 9]) /* ty=Tensor[(5, 12, 9), float64] */;
  %863 = cast(meta[relay.Constant][68] /* ty=Tensor[(792), int8] */, dtype="int8") /* ty=Tensor[(792), int8] */;
  %864 = reshape(%863, newshape=[792]) /* ty=Tensor[(792), int8] */;
  %865 = @func_3978(%864) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(11, 12, 6), int32]) */;
  %866 = cast(%var_5344, dtype="float64") /* ty=Tensor[(1, 588), float64] */;
  %867 = cast(%var_5345, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %868 = reshape(%866, newshape=[14, 6, 7]) /* ty=Tensor[(14, 6, 7), float64] */;
  %869 = reshape(%867, newshape=[660, 2]) /* ty=Tensor[(660, 2), float64] */;
  %870 = @func_4025(%868, %869) /* ty=(Tensor[(14, 6, 7), float64], Tensor[(11, 12, 10), bool], Tensor[(660, 2), float64]) */;
  %871 = @func_5247() /* ty=Tensor[(2, 8, 2), bool] */;
  %872 = @func_839(%862) /* ty=Tensor[(5, 12, 9), float64] */;
  %873 = %865.1;
  %874 = %870.1;
  (%871, %872, meta[relay.Constant][67] /* ty=Tensor[(540), float64] */, %873, meta[relay.Constant][68] /* ty=Tensor[(792), int8] */, %874, %var_5344, %var_5345)
}

def @func_9124() -> (Tensor[(2, 8, 2), float32],) {
  %875 = @func_3766() /* ty=(Tensor[(2, 8, 2), int8], Tensor[(2, 8, 2), float32]) */;
  %876 = %875.1;
  (%876,)
}

def @func_5987(%var_5936: Tensor[(384), float32], %var_5937: Tensor[(756), float64]) -> (Tensor[(2, 8, 2), bool], Tensor[(384), float32], Tensor[(756), float64], Tensor[(80, 2), int16], Tensor[(5, 4, 8), float64], Tensor[(1, 384), float32]) {
  %877 = @func_3907() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %878 = cast(meta[relay.Constant][69] /* ty=Tensor[(80, 2), int16] */, dtype="int16") /* ty=Tensor[(80, 2), int16] */;
  %879 = reshape(%878, newshape=[4, 40]) /* ty=Tensor[(4, 40), int16] */;
  %880 = @func_5090(%879) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(5, 4, 8), int16], Tensor[(4, 40), int16], Tensor[(540), float64]) */;
  %881 = %880.1;
  %882 = cast(%881, dtype="float64") /* ty=Tensor[(5, 4, 8), float64] */;
  %883 = cast(%var_5936, dtype="float32") /* ty=Tensor[(384), float32] */;
  %884 = cast(%var_5937, dtype="float64") /* ty=Tensor[(756), float64] */;
  %885 = reshape(%883, newshape=[1, 384]) /* ty=Tensor[(1, 384), float32] */;
  %886 = reshape(%884, newshape=[756]) /* ty=Tensor[(756), float64] */;
  %887 = @func_3870(%885, %886) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(8, 3, 16), float64], Tensor[(1, 384), float32], Tensor[(756), float64]) */;
  %888 = %887.2;
  %889 = cast(%888, dtype="float32") /* ty=Tensor[(1, 384), float32] */;
  %890 = %877.0;
  %891 = cos(%882) /* ty=Tensor[(5, 4, 8), float64] */;
  %892 = tan(%889) /* ty=Tensor[(1, 384), float32] */;
  (%890, %var_5936, %var_5937, meta[relay.Constant][69] /* ty=Tensor[(80, 2), int16] */, %891, %892)
}

def @func_15255() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), float32]) {
  %893 = @func_3766() /* ty=(Tensor[(2, 8, 2), int8], Tensor[(2, 8, 2), float32]) */;
  %894 = @func_6805() /* ty=Tensor[(2, 8, 2), bool] */;
  %895 = %893.1;
  (%894, %895)
}

def @func_14221(%var_14214: float32) -> (Tensor[(2, 8, 2), bool], Tensor[(11, 6, 6), float32], float32, Tensor[(130), float32]) {
  %896 = cast(%var_14214, dtype="float32") /* ty=float32 */;
  %897 = cast(meta[relay.Constant][70] /* ty=Tensor[(130), float32] */, dtype="float32") /* ty=Tensor[(130), float32] */;
  %898 = reshape(%896, newshape=[]) /* ty=float32 */;
  %899 = reshape(%897, newshape=[130]) /* ty=Tensor[(130), float32] */;
  %900 = @func_9400(%898, %899) /* ty=(Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), float32], Tensor[(8, 3, 16), float64], Tensor[(2, 5, 13), float32], float32, Tensor[(130), float32], Tensor[(2, 8, 2), bool], Tensor[(11, 6, 6), float32], Tensor[(6, 66), float32], Tensor[(2, 8, 2), bool]) */;
  %901 = @func_13917() /* ty=Tensor[(2, 8, 2), bool] */;
  %902 = %900.7;
  (%901, %902, %var_14214, meta[relay.Constant][70] /* ty=Tensor[(130), float32] */)
}

def @func_15232() -> (Tensor[(2, 8, 2), bool],) {
  %903 = @func_6805() /* ty=Tensor[(2, 8, 2), bool] */;
  (%903,)
}

def @func_10888() -> (Tensor[(2, 8, 2), bool],) {
  %904 = @func_6712() /* ty=(Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), bool]) */;
  %905 = %904.1;
  (%905,)
}

def @func_6769(%var_6720: Tensor[(2, 8, 2), bool], %var_6750: Tensor[(588), float64], %var_6751: Tensor[(1320), float64]) -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(11, 12, 6), int32], Tensor[(588), float64], Tensor[(1320), float64], Tensor[(5, 12, 9), float64], Tensor[(54, 10), float64], Tensor[(2, 8, 2), int8]) {
  %906 = @func_5247() /* ty=Tensor[(2, 8, 2), bool] */;
  %907 = cast(%var_6720, dtype="bool") /* ty=Tensor[(2, 8, 2), bool] */;
  %908 = shape_of(%906, dtype="int32") /* ty=Tensor[(3), int32] */;
  %909 = cast(%906, dtype="bool") /* ty=Tensor[(2, 8, 2), bool] */;
  %910 = dyn.reshape(%907, %908, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %911 = less(%909, %910) /* ty=Tensor[(2, 8, 2), bool] */;
  %912 = cast(%911, dtype="bool") /* ty=Tensor[(2, 8, 2), bool] */;
  %913 = reshape(%912, newshape=[2, 8, 2]) /* ty=Tensor[(2, 8, 2), bool] */;
  %914 = @func_6568(%913) /* ty=(Tensor[(2, 8, 2), int16], Tensor[(2, 8, 2), bool]) */;
  %915 = cast(%var_6750, dtype="float64") /* ty=Tensor[(588), float64] */;
  %916 = cast(%var_6751, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %917 = reshape(%915, newshape=[1, 588]) /* ty=Tensor[(1, 588), float64] */;
  %918 = reshape(%916, newshape=[1320]) /* ty=Tensor[(1320), float64] */;
  %919 = @func_5358(%917, %918) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(5, 12, 9), float64], Tensor[(540), float64], Tensor[(11, 12, 6), int32], Tensor[(792), int8], Tensor[(11, 12, 10), bool], Tensor[(1, 588), float64], Tensor[(1320), float64]) */;
  %920 = cast(meta[relay.Constant][71] /* ty=Tensor[(54, 10), float64] */, dtype="float64") /* ty=Tensor[(54, 10), float64] */;
  %921 = reshape(%920, newshape=[5, 12, 9]) /* ty=Tensor[(5, 12, 9), float64] */;
  %922 = @func_5603() /* ty=(Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), int8]) */;
  %923 = %914.1;
  %924 = %919.3;
  %925 = @func_839(%921) /* ty=Tensor[(5, 12, 9), float64] */;
  %926 = %922.1;
  (%911, %923, %924, %var_6750, %var_6751, %925, meta[relay.Constant][71] /* ty=Tensor[(54, 10), float64] */, %926)
}

def @func_12419() -> Tensor[(2, 8, 2), bool] {
  @func_10977() /* ty=Tensor[(2, 8, 2), bool] */
}

def @func_15108() -> (Tensor[(2, 8, 2), bool], Tensor[(384), float32]) {
  %927 = @func_10453() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %928 = @func_9110() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(4, 40), float64], Tensor[(4, 40), uint32], Tensor[(8, 3, 16), float64], Tensor[(384), float32], Tensor[(756), float64]) */;
  %929 = %927.0;
  %930 = %928.4;
  (%929, %930)
}

def @func_1180(%var_1136: Tensor[(7, 12, 12), float64], %var_1158: Tensor[(756), float64], %var_1159: Tensor[(540), float64]) -> (Tensor[(7, 12, 12), float64], Tensor[(540), float64], Tensor[(756), float64], Tensor[(540), float64], Tensor[(5, 12, 9), float64]) {
  %931 = cast(%var_1136, dtype="float64") /* ty=Tensor[(7, 12, 12), float64] */;
  %932 = shape_of(meta[relay.Constant][72] /* ty=Tensor[(7, 12, 12), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %933 = cast(meta[relay.Constant][72] /* ty=Tensor[(7, 12, 12), float64] */, dtype="float64") /* ty=Tensor[(7, 12, 12), float64] */;
  %934 = dyn.reshape(%931, %932, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %935 = cast(%var_1158, dtype="float64") /* ty=Tensor[(756), float64] */;
  %936 = cast(%var_1159, dtype="float64") /* ty=Tensor[(540), float64] */;
  %937 = reshape(%935, newshape=[6, 14, 9]) /* ty=Tensor[(6, 14, 9), float64] */;
  %938 = reshape(%936, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %939 = @func_1105(%937, %938) /* ty=(Tensor[(6, 14, 9), float64], Tensor[(5, 12, 9), float64], Tensor[(540), float64], Tensor[(5, 12, 9), float64], Tensor[(5, 12, 9), float64]) */;
  %940 = cast(%var_1159, dtype="float64") /* ty=Tensor[(540), float64] */;
  %941 = reshape(%940, newshape=[5, 12, 9]) /* ty=Tensor[(5, 12, 9), float64] */;
  %942 = power(%933, %934) /* ty=Tensor[(7, 12, 12), float64] */;
  %943 = %939.2;
  %944 = @func_839(%941) /* ty=Tensor[(5, 12, 9), float64] */;
  (%942, %943, %var_1158, %var_1159, %944)
}

def @func_8799() -> (Tensor[(2, 8, 2), bool],) {
  %945 = @func_3907() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %946 = %945.0;
  (%946,)
}

def @func_8072(%var_8055: Tensor[(630), float32], %var_8062: Tensor[(384), float32]) -> (Tensor[(2, 8, 2), bool], Tensor[(6, 7, 15), float32], Tensor[(630), float32], Tensor[(8, 3, 16), float64], Tensor[(384), float32], Tensor[(756), float64]) {
  %947 = cast(%var_8055, dtype="float32") /* ty=Tensor[(630), float32] */;
  %948 = reshape(%947, newshape=[6, 7, 15]) /* ty=Tensor[(6, 7, 15), float32] */;
  %949 = @func_7009(%948) /* ty=(Tensor[(6, 7, 15), float32],) */;
  %950 = cast(%var_8062, dtype="float32") /* ty=Tensor[(384), float32] */;
  %951 = cast(meta[relay.Constant][73] /* ty=Tensor[(756), float64] */, dtype="float64") /* ty=Tensor[(756), float64] */;
  %952 = reshape(%950, newshape=[1, 384]) /* ty=Tensor[(1, 384), float32] */;
  %953 = reshape(%951, newshape=[756]) /* ty=Tensor[(756), float64] */;
  %954 = @func_3870(%952, %953) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(8, 3, 16), float64], Tensor[(1, 384), float32], Tensor[(756), float64]) */;
  %955 = @func_6805() /* ty=Tensor[(2, 8, 2), bool] */;
  %956 = %949.0;
  %957 = %954.1;
  (%955, %956, %var_8055, %957, %var_8062, meta[relay.Constant][73] /* ty=Tensor[(756), float64] */)
}

def @func_10283() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) {
  %958 = @func_10086() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %959 = @func_7611() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(11, 6, 6), float32], Tensor[(396), float32]) */;
  %960 = %958.1;
  %961 = %959.0;
  (%960, %961)
}

def @func_15953() -> Tensor[(2, 8, 2), bool] {
  @func_13917() /* ty=Tensor[(2, 8, 2), bool] */
}

def @func_1105(%var_1084: Tensor[(6, 14, 9), float64], %var_1088: Tensor[(540), float64]) -> (Tensor[(6, 14, 9), float64], Tensor[(5, 12, 9), float64], Tensor[(540), float64], Tensor[(5, 12, 9), float64], Tensor[(5, 12, 9), float64]) {
  %962 = cast(%var_1084, dtype="float64") /* ty=Tensor[(6, 14, 9), float64] */;
  %963 = cast(%var_1088, dtype="float64") /* ty=Tensor[(540), float64] */;
  %964 = reshape(%963, newshape=[5, 12, 9]) /* ty=Tensor[(5, 12, 9), float64] */;
  %965 = @func_839(%964) /* ty=Tensor[(5, 12, 9), float64] */;
  %966 = cast(%965, dtype="float64") /* ty=Tensor[(5, 12, 9), float64] */;
  %967 = reshape(%966, newshape=[5, 12, 9]) /* ty=Tensor[(5, 12, 9), float64] */;
  %968 = cast(%var_1088, dtype="float64") /* ty=Tensor[(540), float64] */;
  %969 = reshape(%968, newshape=[5, 12, 9]) /* ty=Tensor[(5, 12, 9), float64] */;
  %970 = atan(%962) /* ty=Tensor[(6, 14, 9), float64] */;
  %971 = @func_839(%967) /* ty=Tensor[(5, 12, 9), float64] */;
  %972 = @func_839(%969) /* ty=Tensor[(5, 12, 9), float64] */;
  (%970, %965, %var_1088, %971, %972)
}

def @func_5125() -> (Tensor[(2, 8, 2), float32],) {
  %973 = @func_4283() /* ty=Tensor[(2, 8, 2), float32] */;
  (%973,)
}

def @func_7102() -> (Tensor[(2, 8, 2), uint32], Tensor[(2, 8, 2), float32], Tensor[(4, 364), float32]) {
  %974 = cast(meta[relay.Constant][74] /* ty=Tensor[(4, 364), float32] */, dtype="float32") /* ty=Tensor[(4, 364), float32] */;
  %975 = reshape(%974, newshape=[4, 364]) /* ty=Tensor[(4, 364), float32] */;
  %976 = @func_3837(%975) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(4, 364), float64], Tensor[(2, 8, 2), float32], Tensor[(13, 8, 14), float32], Tensor[(792), int8]) */;
  %977 = @func_5156() /* ty=Tensor[(2, 8, 2), uint32] */;
  %978 = %976.3;
  (%977, %978, meta[relay.Constant][74] /* ty=Tensor[(4, 364), float32] */)
}

def @func_7394() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) {
  %979 = @func_6837() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %980 = @func_6596() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %981 = %979.0;
  %982 = %980.1;
  (%981, %982)
}

def @func_8529(%var_8520: Tensor[(5, 15, 14), uint8], %var_8521: Tensor[(5, 15, 14), uint8]) -> (Tensor[(5, 15, 14), uint8], Tensor[(2, 8, 2), bool]) {
  %983 = cast(%var_8521, dtype="uint8") /* ty=Tensor[(5, 15, 14), uint8] */;
  %984 = shape_of(%var_8520, dtype="int32") /* ty=Tensor[(3), int32] */;
  %985 = cast(%var_8520, dtype="uint8") /* ty=Tensor[(5, 15, 14), uint8] */;
  %986 = dyn.reshape(%983, %984, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %987 = @func_6837() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %988 = minimum(%985, %986) /* ty=Tensor[(5, 15, 14), uint8] */;
  %989 = %987.0;
  (%988, %989)
}

def @func_11686() -> (Tensor[(2, 8, 2), bool],) {
  %990 = @func_11089() /* ty=(Tensor[(2, 8, 2), int8], Tensor[(2, 8, 2), bool]) */;
  %991 = %990.1;
  (%991,)
}

def @func_6805() -> Tensor[(2, 8, 2), bool] {
  %992 = @func_4222() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %992.0
}

def @func_14294() -> Tensor[(2, 8, 2), bool] {
  @func_5247() /* ty=Tensor[(2, 8, 2), bool] */
}

def @func_12855() -> Tensor[(2, 8, 2), bool] {
  %993 = @func_10185() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), int8]) */;
  %993.0
}

def @func_13145() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) {
  %994 = @func_11196() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %995 = @func_6372() /* ty=Tensor[(2, 8, 2), bool] */;
  %996 = cast(%995, dtype="float32") /* ty=Tensor[(2, 8, 2), float32] */;
  %997 = reshape(%996, newshape=[2, 8, 2]) /* ty=Tensor[(2, 8, 2), float32] */;
  %998 = @func_9963() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %999 = %994.0;
  %1000 = @func_10239(%997) /* ty=Tensor[(2, 8, 2), bool] */;
  %1001 = %998.0;
  (%999, %995, %1000, %1001)
}

def @func_11272() -> (Tensor[(2, 8, 2), bool], Tensor[(?, 7, 2), float64], Tensor[(7, 2), float32], Tensor[(11, 12, 6), int32], Tensor[(540, 1), float64]) {
  %1002 = @func_10086() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %1003 = cast(meta[relay.Constant][75] /* ty=Tensor[(7, 2), float32] */, dtype="float32") /* ty=Tensor[(7, 2), float32] */;
  %1004 = reshape(%1003, newshape=[1, 7, 2]) /* ty=Tensor[(1, 7, 2), float32] */;
  %1005 = cast(meta[relay.Constant][76] /* ty=Tensor[(540, 1), float64] */, dtype="float64") /* ty=Tensor[(540, 1), float64] */;
  %1006 = reshape(%1005, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %1007 = @func_7355(%1006) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(11, 12, 6), int32], Tensor[(588), float64], Tensor[(1320), float64], Tensor[(660, 2), float64], Tensor[(1456), float32], Tensor[(5, 12, 9), float64], Tensor[(540), float64], Tensor[(14, 6, 7), float64], Tensor[(2, 8, 2), float32]) */;
  %1008 = cast(meta[relay.Constant][76] /* ty=Tensor[(540, 1), float64] */, dtype="float64") /* ty=Tensor[(540, 1), float64] */;
  %1009 = %1002.0;
  %1010 = @func_6327(%1004) /* ty=Tensor[(?, 7, 2), float64] */;
  %1011 = %1007.1;
  %1012 = tan(%1008) /* ty=Tensor[(540, 1), float64] */;
  (%1009, %1010, meta[relay.Constant][75] /* ty=Tensor[(7, 2), float32] */, %1011, %1012)
}

def @func_4593() -> Tensor[(2, 8, 2), int8] {
  %1013 = @func_3766() /* ty=(Tensor[(2, 8, 2), int8], Tensor[(2, 8, 2), float32]) */;
  %1013.0
}

def @func_14807() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(792), int8], Tensor[(2, 8, 2), bool]) {
  %1014 = cast(meta[relay.Constant][77] /* ty=Tensor[(792), int8] */, dtype="int8") /* ty=Tensor[(792), int8] */;
  %1015 = reshape(%1014, newshape=[792]) /* ty=Tensor[(792), int8] */;
  %1016 = @func_3978(%1015) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(11, 12, 6), int32]) */;
  %1017 = @func_3661() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %1018 = @func_5247() /* ty=Tensor[(2, 8, 2), bool] */;
  %1019 = @func_5247() /* ty=Tensor[(2, 8, 2), bool] */;
  %1020 = %1016.0;
  %1021 = %1017.0;
  (%1018, %1019, %1020, meta[relay.Constant][77] /* ty=Tensor[(792), int8] */, %1021)
}

def @func_5090(%var_5072: Tensor[(4, 40), int16]) -> (Tensor[(2, 8, 2), bool], Tensor[(5, 4, 8), int16], Tensor[(4, 40), int16], Tensor[(540), float64]) {
  %1022 = @func_3493() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %1023 = cast(%var_5072, dtype="int16") /* ty=Tensor[(4, 40), int16] */;
  %1024 = cast(meta[relay.Constant][78] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %1025 = reshape(%1023, newshape=[5, 4, 8]) /* ty=Tensor[(5, 4, 8), int16] */;
  %1026 = reshape(%1024, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %1027 = @func_4189(%1025, %1026) /* ty=(Tensor[(5, 4, 8), int16], Tensor[(5, 4, 8), float32], Tensor[(540), float64], Tensor[(540), float64]) */;
  %1028 = %1022.0;
  %1029 = %1027.0;
  (%1028, %1029, %var_5072, meta[relay.Constant][78] /* ty=Tensor[(540), float64] */)
}

def @func_11873() -> Tensor[(2, 8, 2), bool] {
  %1030 = @func_8672() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %1030.0
}

def @func_2457(%var_2418: Tensor[(5, 9, 6), float32], %var_2434: Tensor[(9, 84), float64], %var_2448: Tensor[(5, 9, 6), float32]) -> (Tensor[(5, 9, 6), int32], Tensor[(540), float64], Tensor[(540), float64], Tensor[(9, 84), int16], Tensor[(5, 9, 6), bool]) {
  %1031 = cast(%var_2418, dtype="float32") /* ty=Tensor[(5, 9, 6), float32] */;
  %1032 = asin(%1031) /* ty=Tensor[(5, 9, 6), float32] */;
  %1033 = cast(%1032, dtype="int32") /* ty=Tensor[(5, 9, 6), int32] */;
  %1034 = shape_of(%var_2418, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1035 = cast(%var_2418, dtype="int32") /* ty=Tensor[(5, 9, 6), int32] */;
  %1036 = dyn.reshape(%1033, %1034, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1037 = cast(%var_2434, dtype="float64") /* ty=Tensor[(9, 84), float64] */;
  %1038 = cast(meta[relay.Constant][79] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %1039 = reshape(%1037, newshape=[6, 14, 9]) /* ty=Tensor[(6, 14, 9), float64] */;
  %1040 = reshape(%1038, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %1041 = @func_1105(%1039, %1040) /* ty=(Tensor[(6, 14, 9), float64], Tensor[(5, 12, 9), float64], Tensor[(540), float64], Tensor[(5, 12, 9), float64], Tensor[(5, 12, 9), float64]) */;
  %1042 = cast(meta[relay.Constant][80] /* ty=Tensor[(9, 84), float64] */, dtype="int16") /* ty=Tensor[(9, 84), int16] */;
  %1043 = shape_of(%var_2434, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1044 = cast(%var_2434, dtype="int16") /* ty=Tensor[(9, 84), int16] */;
  %1045 = dyn.reshape(%1042, %1043, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %1046 = cast(%var_2448, dtype="bool") /* ty=Tensor[(5, 9, 6), bool] */;
  %1047 = shape_of(%1032, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1048 = cast(%1032, dtype="bool") /* ty=Tensor[(5, 9, 6), bool] */;
  %1049 = dyn.reshape(%1046, %1047, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1050 = bitwise_or(%1035, %1036) /* ty=Tensor[(5, 9, 6), int32] */;
  %1051 = %1041.2;
  %1052 = minimum(%1044, %1045) /* ty=Tensor[(9, 84), int16] */;
  %1053 = less_equal(%1048, %1049) /* ty=Tensor[(5, 9, 6), bool] */;
  (%1050, %1051, meta[relay.Constant][79] /* ty=Tensor[(540), float64] */, %1052, %1053)
}

def @func_10453() -> (Tensor[(2, 8, 2), bool],) {
  %1054 = @func_6372() /* ty=Tensor[(2, 8, 2), bool] */;
  (%1054,)
}

def @func_10438(%var_10386: Tensor[(16, 10, 9), uint32], %var_10387: Tensor[(16, 10, 9), uint32], %var_10393: Tensor[(756), float64], %var_10424: Tensor[(70), float32]) -> (Tensor[(16, 10, 9), bool], Tensor[(5, 12, 9), float64], Tensor[(756), float64], Tensor[(540), float64], Tensor[(2, 8, 2), bool], Tensor[(7, 10, 1), float64], Tensor[(70), float32]) {
  %1055 = cast(%var_10387, dtype="bool") /* ty=Tensor[(16, 10, 9), bool] */;
  %1056 = shape_of(%var_10386, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1057 = cast(%var_10386, dtype="bool") /* ty=Tensor[(16, 10, 9), bool] */;
  %1058 = dyn.reshape(%1055, %1056, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1059 = cast(%var_10393, dtype="float64") /* ty=Tensor[(756), float64] */;
  %1060 = cast(meta[relay.Constant][81] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %1061 = reshape(%1059, newshape=[6, 14, 9]) /* ty=Tensor[(6, 14, 9), float64] */;
  %1062 = reshape(%1060, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %1063 = @func_1105(%1061, %1062) /* ty=(Tensor[(6, 14, 9), float64], Tensor[(5, 12, 9), float64], Tensor[(540), float64], Tensor[(5, 12, 9), float64], Tensor[(5, 12, 9), float64]) */;
  %1064 = @func_7432() /* ty=(Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), bool]) */;
  %1065 = cast(%var_10424, dtype="float32") /* ty=Tensor[(70), float32] */;
  %1066 = reshape(%1065, newshape=[7, 10, 1]) /* ty=Tensor[(7, 10, 1), float32] */;
  %1067 = @func_9433(%1066) /* ty=(Tensor[(7, 10, 1), float64], Tensor[(7, 10, 9), uint64]) */;
  %1068 = greater_equal(%1057, %1058) /* ty=Tensor[(16, 10, 9), bool] */;
  %1069 = %1063.3;
  %1070 = %1064.1;
  %1071 = %1067.0;
  (%1068, %1069, %var_10393, meta[relay.Constant][81] /* ty=Tensor[(540), float64] */, %1070, %1071, %var_10424)
}

def @func_14525(%var_14498: Tensor[(14, 7, 7), uint32], %var_14499: Tensor[(14, 7, 7), uint32]) -> (Tensor[(14, 7, 7), uint32],) {
  %1072 = cast(%var_14499, dtype="uint32") /* ty=Tensor[(14, 7, 7), uint32] */;
  %1073 = shape_of(%var_14498, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1074 = cast(%var_14498, dtype="uint32") /* ty=Tensor[(14, 7, 7), uint32] */;
  %1075 = dyn.reshape(%1072, %1073, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1076 = bitwise_and(%1074, %1075) /* ty=Tensor[(14, 7, 7), uint32] */;
  (%1076,)
}

def @func_8827() -> (Tensor[(2, 8, 2), bool],) {
  %1077 = @func_7539() /* ty=Tensor[(2, 8, 2), bool] */;
  (%1077,)
}

def @func_13832() -> Tensor[(2, 8, 2), bool] {
  %1078 = @func_11635() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(1456), float32]) */;
  %1078.1
}

def @func_6382() -> Tensor[(2, 8, 2), bool] {
  @func_6372() /* ty=Tensor[(2, 8, 2), bool] */
}

def @func_7641(%var_7618: Tensor[(1320), float64]) -> (Tensor[(2, 8, 2), bool], Tensor[(6, 3, 5), float64], Tensor[(588), float64], Tensor[(1320), float64]) {
  %1079 = @func_7394() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %1080 = cast(meta[relay.Constant][82] /* ty=Tensor[(588), float64] */, dtype="float64") /* ty=Tensor[(588), float64] */;
  %1081 = cast(%var_7618, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %1082 = reshape(%1080, newshape=[588]) /* ty=Tensor[(588), float64] */;
  %1083 = reshape(%1081, newshape=[1320]) /* ty=Tensor[(1320), float64] */;
  %1084 = @func_4656(%1082, %1083) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(660, 2), float64], Tensor[(588), float64], Tensor[(1320), float64], Tensor[(5, 12, 9), float64], Tensor[(540), float64], Tensor[(6, 3, 5), float64], Tensor[(90), float64]) */;
  %1085 = %1079.1;
  %1086 = %1084.6;
  (%1085, %1086, meta[relay.Constant][82] /* ty=Tensor[(588), float64] */, %var_7618)
}

def @func_9963() -> (Tensor[(2, 8, 2), bool],) {
  %1087 = @func_3661() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %1088 = %1087.0;
  (%1088,)
}

def @func_2173(%var_2096: Tensor[(11, 12, 10), float64]) -> (Tensor[(11, 12, 10), bool], Tensor[(11, 6, 6), float32], Tensor[(396), float32]) {
  %1089 = cast(%var_2096, dtype="float64") /* ty=Tensor[(11, 12, 10), float64] */;
  %1090 = atan(%1089) /* ty=Tensor[(11, 12, 10), float64] */;
  %1091 = cast(meta[relay.Constant][83] /* ty=Tensor[(11, 12, 10), float64] */, dtype="bool") /* ty=Tensor[(11, 12, 10), bool] */;
  %1092 = shape_of(%1090, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1093 = cast(%1090, dtype="bool") /* ty=Tensor[(11, 12, 10), bool] */;
  %1094 = dyn.reshape(%1091, %1092, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1095 = cast(meta[relay.Constant][84] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
  %1096 = reshape(%1095, newshape=[11, 6, 6]) /* ty=Tensor[(11, 6, 6), float32] */;
  %1097 = less(%1093, %1094) /* ty=Tensor[(11, 12, 10), bool] */;
  %1098 = @func_1929(%1096) /* ty=Tensor[(11, 6, 6), float32] */;
  (%1097, %1098, meta[relay.Constant][84] /* ty=Tensor[(396), float32] */)
}

def @func_11961() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) {
  %1099 = @func_4305() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %1100 = @func_7733() /* ty=Tensor[(2, 8, 2), bool] */;
  %1101 = %1099.0;
  (%1100, %1101)
}

def @func_7719() -> Tensor[(2, 8, 2), float32] {
  %1102 = @func_5125() /* ty=(Tensor[(2, 8, 2), float32],) */;
  %1102.0
}

def @func_11089() -> (Tensor[(2, 8, 2), int8], Tensor[(2, 8, 2), bool]) {
  %1103 = @func_3766() /* ty=(Tensor[(2, 8, 2), int8], Tensor[(2, 8, 2), float32]) */;
  %1104 = %1103.0;
  %1105 = @func_7733() /* ty=Tensor[(2, 8, 2), bool] */;
  (%1104, %1105)
}

def @func_5009() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) {
  %1106 = @func_3493() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %1107 = @func_4305() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %1108 = %1106.1;
  %1109 = %1107.1;
  (%1108, %1109)
}

def @func_3978(%var_3946: Tensor[(792), int8]) -> (Tensor[(2, 8, 2), bool], Tensor[(11, 12, 6), int32]) {
  %1110 = @func_3701() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %1111 = cast(%var_3946, dtype="int8") /* ty=Tensor[(792), int8] */;
  %1112 = reshape(%1111, newshape=[11, 12, 6]) /* ty=Tensor[(11, 12, 6), int8] */;
  %1113 = @func_3725(%1112) /* ty=(Tensor[(11, 12, 6), int8], Tensor[(13, 8, 14), float32], Tensor[(1456), float32]) */;
  %1114 = %1113.0;
  %1115 = cast(%var_3946, dtype="int32") /* ty=Tensor[(792), int32] */;
  %1116 = shape_of(%1114, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1117 = cast(%1114, dtype="int32") /* ty=Tensor[(11, 12, 6), int32] */;
  %1118 = dyn.reshape(%1115, %1116, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1119 = %1110.0;
  %1120 = minimum(%1117, %1118) /* ty=Tensor[(11, 12, 6), int32] */;
  (%1119, %1120)
}

def @func_14881(%var_14876: Tensor[(10, 8, 7), bool], %var_14877: Tensor[(10, 8, 7), bool]) -> Tensor[(10, 8, 7), bool] {
  %1121 = cast(%var_14877, dtype="bool") /* ty=Tensor[(10, 8, 7), bool] */;
  %1122 = shape_of(%var_14876, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1123 = cast(%var_14876, dtype="bool") /* ty=Tensor[(10, 8, 7), bool] */;
  %1124 = dyn.reshape(%1121, %1122, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%1123, %1124) /* ty=Tensor[(10, 8, 7), bool] */
}

def @func_7221() -> (Tensor[(2, 8, 2), float64],) {
  %1125 = @func_6865() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %1126 = %1125.0;
  %1127 = cast(%1126, dtype="float64") /* ty=Tensor[(2, 8, 2), float64] */;
  %1128 = acosh(%1127) /* ty=Tensor[(2, 8, 2), float64] */;
  (%1128,)
}

def @func_9206(%var_9167: Tensor[(630), float32]) -> (Tensor[(2, 8, 2), bool], Tensor[(8, 3, 16), float64], Tensor[(630), float32], Tensor[(384), float32]) {
  %1129 = cast(%var_9167, dtype="float32") /* ty=Tensor[(630), float32] */;
  %1130 = cast(meta[relay.Constant][85] /* ty=Tensor[(384), float32] */, dtype="float32") /* ty=Tensor[(384), float32] */;
  %1131 = reshape(%1129, newshape=[630]) /* ty=Tensor[(630), float32] */;
  %1132 = reshape(%1130, newshape=[384]) /* ty=Tensor[(384), float32] */;
  %1133 = @func_8072(%1131, %1132) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(6, 7, 15), float32], Tensor[(630), float32], Tensor[(8, 3, 16), float64], Tensor[(384), float32], Tensor[(756), float64]) */;
  %1134 = @func_6372() /* ty=Tensor[(2, 8, 2), bool] */;
  %1135 = %1133.3;
  (%1134, %1135, %var_9167, meta[relay.Constant][85] /* ty=Tensor[(384), float32] */)
}

def @func_14754() -> Tensor[(2, 8, 2), bool] {
  %1136 = @func_8789() /* ty=(Tensor[(4, 364), float32], Tensor[(2, 8, 2), bool]) */;
  %1136.1
}

def @func_12960() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) {
  %1137 = @func_11961() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %1138 = @func_4042() /* ty=Tensor[(2, 8, 2), bool] */;
  %1139 = %1137.0;
  (%1138, %1139)
}

def @func_6568(%var_6530: Tensor[(2, 8, 2), bool]) -> (Tensor[(2, 8, 2), int16], Tensor[(2, 8, 2), bool]) {
  %1140 = @func_4305() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %1141 = %1140.1;
  %1142 = cast(%var_6530, dtype="int16") /* ty=Tensor[(2, 8, 2), int16] */;
  %1143 = shape_of(%1141, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1144 = cast(%1141, dtype="int16") /* ty=Tensor[(2, 8, 2), int16] */;
  %1145 = dyn.reshape(%1142, %1143, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1146 = @func_5009() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %1147 = bitwise_or(%1144, %1145) /* ty=Tensor[(2, 8, 2), int16] */;
  %1148 = %1146.1;
  (%1147, %1148)
}

def @func_10044() -> Tensor[(2, 8, 2), uint32] {
  @func_5156() /* ty=Tensor[(2, 8, 2), uint32] */
}

def @func_11648() -> Tensor[(2, 8, 2), bool] {
  %1149 = @func_7394() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %1149.1
}

def @func_13828() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) {
  %1150 = @func_11218() /* ty=Tensor[(2, 8, 2), bool] */;
  %1151 = @func_5247() /* ty=Tensor[(2, 8, 2), bool] */;
  (%1150, %1151)
}

def @func_5853(%var_5815: Tensor[(3, 6, 14), int64], %var_5816: Tensor[(3, 6, 14), int64]) -> (Tensor[(3, 6, 14), bool], Tensor[(2, 8, 2), bool], Tensor[(384), float32], Tensor[(756), float64], Tensor[(2, 8, 2), bool], Tensor[(3, 6, 14), float32]) {
  %1152 = cast(%var_5816, dtype="bool") /* ty=Tensor[(3, 6, 14), bool] */;
  %1153 = shape_of(%var_5815, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1154 = cast(%var_5815, dtype="bool") /* ty=Tensor[(3, 6, 14), bool] */;
  %1155 = dyn.reshape(%1152, %1153, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1156 = cast(meta[relay.Constant][86] /* ty=Tensor[(384), float32] */, dtype="float32") /* ty=Tensor[(384), float32] */;
  %1157 = cast(meta[relay.Constant][87] /* ty=Tensor[(756), float64] */, dtype="float64") /* ty=Tensor[(756), float64] */;
  %1158 = reshape(%1156, newshape=[1, 384]) /* ty=Tensor[(1, 384), float32] */;
  %1159 = reshape(%1157, newshape=[756]) /* ty=Tensor[(756), float64] */;
  %1160 = @func_3870(%1158, %1159) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(8, 3, 16), float64], Tensor[(1, 384), float32], Tensor[(756), float64]) */;
  %1161 = @func_3907() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %1162 = cast(%var_5815, dtype="float32") /* ty=Tensor[(3, 6, 14), float32] */;
  %1163 = less(%1154, %1155) /* ty=Tensor[(3, 6, 14), bool] */;
  %1164 = %1160.0;
  %1165 = %1161.0;
  %1166 = log2(%1162) /* ty=Tensor[(3, 6, 14), float32] */;
  (%1163, %1164, meta[relay.Constant][86] /* ty=Tensor[(384), float32] */, meta[relay.Constant][87] /* ty=Tensor[(756), float64] */, %1165, %1166)
}

def @func_5553(%var_5508: Tensor[(792), int8]) -> (Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), int8], Tensor[(6, 220), float64], Tensor[(1456), float32], Tensor[(792), int8], Tensor[(2, 8, 2), bool], Tensor[(1456), float32], Tensor[(6, 3, 5), float64], Tensor[(45, 2), float64], Tensor[(396), float32], Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), int8]) {
  %1167 = cast(meta[relay.Constant][88] /* ty=Tensor[(6, 220), float64] */, dtype="float64") /* ty=Tensor[(6, 220), float64] */;
  %1168 = cast(meta[relay.Constant][89] /* ty=Tensor[(1456), float32] */, dtype="float32") /* ty=Tensor[(1456), float32] */;
  %1169 = cast(%var_5508, dtype="int8") /* ty=Tensor[(792), int8] */;
  %1170 = reshape(%1167, newshape=[660, 2]) /* ty=Tensor[(660, 2), float64] */;
  %1171 = reshape(%1168, newshape=[8, 182]) /* ty=Tensor[(8, 182), float32] */;
  %1172 = reshape(%1169, newshape=[792]) /* ty=Tensor[(792), int8] */;
  %1173 = @func_5230(%1170, %1171, %1172) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(660, 2), float64], Tensor[(2, 8, 2), bool], Tensor[(8, 182), uint16], Tensor[(2, 8, 2), int8], Tensor[(1456), float32], Tensor[(792), int8]) */;
  %1174 = @func_4222() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %1175 = cast(meta[relay.Constant][89] /* ty=Tensor[(1456), float32] */, dtype="float32") /* ty=Tensor[(1456), float32] */;
  %1176 = reshape(%1175, newshape=[1456]) /* ty=Tensor[(1456), float32] */;
  %1177 = @func_4901(%1176) /* ty=(Tensor[(2, 8, 2), float64], Tensor[(13, 8, 14), float32], Tensor[(1456), float32], Tensor[(2, 8, 2), int8], Tensor[(2, 8, 2), bool], Tensor[(7, 12, 12), float64], Tensor[(1008), float64], Tensor[(756), float64], Tensor[(540), float64]) */;
  %1178 = cast(meta[relay.Constant][90] /* ty=Tensor[(45, 2), float64] */, dtype="float64") /* ty=Tensor[(45, 2), float64] */;
  %1179 = reshape(%1178, newshape=[6, 3, 5]) /* ty=Tensor[(6, 3, 5), float64] */;
  %1180 = %1177.2;
  %1181 = cast(%1180, dtype="float32") /* ty=Tensor[(1456), float32] */;
  %1182 = reshape(%1181, newshape=[13, 8, 14]) /* ty=Tensor[(13, 8, 14), float32] */;
  %1183 = @func_2537(%1182) /* ty=(Tensor[(13, 8, 14), float32], Tensor[(396), float32], Tensor[(660, 2), float64]) */;
  %1184 = cast(meta[relay.Constant][89] /* ty=Tensor[(1456), float32] */, dtype="float32") /* ty=Tensor[(1456), float32] */;
  %1185 = reshape(%1184, newshape=[1456]) /* ty=Tensor[(1456), float32] */;
  %1186 = @func_4901(%1185) /* ty=(Tensor[(2, 8, 2), float64], Tensor[(13, 8, 14), float32], Tensor[(1456), float32], Tensor[(2, 8, 2), int8], Tensor[(2, 8, 2), bool], Tensor[(7, 12, 12), float64], Tensor[(1008), float64], Tensor[(756), float64], Tensor[(540), float64]) */;
  %1187 = @func_4283() /* ty=Tensor[(2, 8, 2), float32] */;
  %1188 = %1173.4;
  %1189 = %1174.0;
  %1190 = @func_3616(%1179) /* ty=Tensor[(6, 3, 5), float64] */;
  %1191 = %1183.1;
  %1192 = @func_4042() /* ty=Tensor[(2, 8, 2), bool] */;
  %1193 = @func_4283() /* ty=Tensor[(2, 8, 2), float32] */;
  %1194 = %1186.3;
  (%1187, %1188, meta[relay.Constant][88] /* ty=Tensor[(6, 220), float64] */, meta[relay.Constant][89] /* ty=Tensor[(1456), float32] */, %var_5508, %1189, %1180, %1190, meta[relay.Constant][90] /* ty=Tensor[(45, 2), float64] */, %1191, %1192, %1193, %1194)
}

def @func_8322() -> (Tensor[(2, 8, 2), bool],) {
  %1195 = @func_7539() /* ty=Tensor[(2, 8, 2), bool] */;
  (%1195,)
}

def @func_9489() -> Tensor[(4, 364), float32] {
  %1196 = @func_7471() /* ty=(Tensor[(90), float64], Tensor[(4, 364), float32], Tensor[(660, 2), float32], Tensor[(2, 8, 2), bool]) */;
  %1196.1
}

def @func_4086() -> Tensor[(2, 8, 2), bool] {
  %1197 = @func_3661() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %1197.0
}

def @func_7355(%var_7332: Tensor[(540), float64]) -> (Tensor[(2, 8, 2), bool], Tensor[(11, 12, 6), int32], Tensor[(588), float64], Tensor[(1320), float64], Tensor[(660, 2), float64], Tensor[(1456), float32], Tensor[(5, 12, 9), float64], Tensor[(540), float64], Tensor[(14, 6, 7), float64], Tensor[(2, 8, 2), float32]) {
  %1198 = @func_3493() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %1199 = cast(meta[relay.Constant][91] /* ty=Tensor[(588), float64] */, dtype="float64") /* ty=Tensor[(588), float64] */;
  %1200 = cast(meta[relay.Constant][92] /* ty=Tensor[(1320), float64] */, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %1201 = reshape(%1199, newshape=[1, 588]) /* ty=Tensor[(1, 588), float64] */;
  %1202 = reshape(%1200, newshape=[1320]) /* ty=Tensor[(1320), float64] */;
  %1203 = @func_5358(%1201, %1202) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(5, 12, 9), float64], Tensor[(540), float64], Tensor[(11, 12, 6), int32], Tensor[(792), int8], Tensor[(11, 12, 10), bool], Tensor[(1, 588), float64], Tensor[(1320), float64]) */;
  %1204 = %1198.1;
  %1205 = cast(%1204, dtype="bool") /* ty=Tensor[(2, 8, 2), bool] */;
  %1206 = cast(meta[relay.Constant][93] /* ty=Tensor[(1456), float32] */, dtype="float32") /* ty=Tensor[(1456), float32] */;
  %1207 = reshape(%1205, newshape=[2, 8, 2]) /* ty=Tensor[(2, 8, 2), bool] */;
  %1208 = reshape(%1206, newshape=[1456]) /* ty=Tensor[(1456), float32] */;
  %1209 = @func_3555(%1207, %1208) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(660, 2), float64], Tensor[(1456), float32]) */;
  %1210 = cast(%var_7332, dtype="float64") /* ty=Tensor[(540), float64] */;
  %1211 = reshape(%1210, newshape=[5, 12, 9]) /* ty=Tensor[(5, 12, 9), float64] */;
  %1212 = cast(meta[relay.Constant][91] /* ty=Tensor[(588), float64] */, dtype="float64") /* ty=Tensor[(588), float64] */;
  %1213 = cast(meta[relay.Constant][92] /* ty=Tensor[(1320), float64] */, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %1214 = reshape(%1212, newshape=[14, 6, 7]) /* ty=Tensor[(14, 6, 7), float64] */;
  %1215 = reshape(%1213, newshape=[660, 2]) /* ty=Tensor[(660, 2), float64] */;
  %1216 = @func_4025(%1214, %1215) /* ty=(Tensor[(14, 6, 7), float64], Tensor[(11, 12, 10), bool], Tensor[(660, 2), float64]) */;
  %1217 = %1203.3;
  %1218 = %1209.1;
  %1219 = @func_839(%1211) /* ty=Tensor[(5, 12, 9), float64] */;
  %1220 = %1216.0;
  %1221 = @func_5660() /* ty=Tensor[(2, 8, 2), float32] */;
  (%1204, %1217, meta[relay.Constant][91] /* ty=Tensor[(588), float64] */, meta[relay.Constant][92] /* ty=Tensor[(1320), float64] */, %1218, meta[relay.Constant][93] /* ty=Tensor[(1456), float32] */, %1219, %var_7332, %1220, %1221)
}

def @func_11364(%var_11360: float32, %var_11361: Tensor[(130), float32]) -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), float32], float32, Tensor[(130), float32]) {
  %1222 = @func_8827() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %1223 = cast(%var_11360, dtype="float32") /* ty=float32 */;
  %1224 = cast(%var_11361, dtype="float32") /* ty=Tensor[(130), float32] */;
  %1225 = reshape(%1223, newshape=[]) /* ty=float32 */;
  %1226 = reshape(%1224, newshape=[130]) /* ty=Tensor[(130), float32] */;
  %1227 = @func_9400(%1225, %1226) /* ty=(Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), float32], Tensor[(8, 3, 16), float64], Tensor[(2, 5, 13), float32], float32, Tensor[(130), float32], Tensor[(2, 8, 2), bool], Tensor[(11, 6, 6), float32], Tensor[(6, 66), float32], Tensor[(2, 8, 2), bool]) */;
  %1228 = %1222.0;
  %1229 = %1227.1;
  (%1228, %1229, %var_11360, %var_11361)
}

def @func_12877() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), float32]) {
  %1230 = @func_10086() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %1231 = @func_3766() /* ty=(Tensor[(2, 8, 2), int8], Tensor[(2, 8, 2), float32]) */;
  %1232 = %1230.1;
  %1233 = %1231.1;
  (%1232, %1233)
}

def @func_6069(%var_6049: float32, %var_6050: Tensor[(2, 5, 13), float32]) -> (Tensor[(2, 5, 13), float32], Tensor[(2, 5, 13), float64]) {
  %1234 = cast(%var_6049, dtype="float32") /* ty=float32 */;
  %1235 = cast(%var_6050, dtype="float32") /* ty=Tensor[(2, 5, 13), float32] */;
  %1236 = cast(%var_6050, dtype="float64") /* ty=Tensor[(2, 5, 13), float64] */;
  %1237 = divide(%1234, %1235) /* ty=Tensor[(2, 5, 13), float32] */;
  %1238 = exp(%1236) /* ty=Tensor[(2, 5, 13), float64] */;
  (%1237, %1238)
}

def @func_8505(%var_8493: Tensor[(9, 6, 13), float64]) -> Tensor[(9, 6, 13), float64] {
  %1239 = cast(meta[relay.Constant][94] /* ty=Tensor[(9, 6, 13), float64] */, dtype="float64") /* ty=Tensor[(9, 6, 13), float64] */;
  %1240 = shape_of(%var_8493, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1241 = cast(%var_8493, dtype="float64") /* ty=Tensor[(9, 6, 13), float64] */;
  %1242 = dyn.reshape(%1239, %1240, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  divide(%1241, %1242) /* ty=Tensor[(9, 6, 13), float64] */
}

def @func_2813(%var_2754: Tensor[(8, 3, 16), float32], %var_2774: Tensor[(756), float64]) -> (Tensor[(540), float64], Tensor[(270, 1), float32], Tensor[(756), float64], Tensor[(8, 3, 16), float64], Tensor[(8, 3, 16), float64]) {
  %1243 = cast(meta[relay.Constant][95] /* ty=Tensor[(270, 1), float32] */, dtype="float32") /* ty=Tensor[(270, 1), float32] */;
  %1244 = cast(%var_2774, dtype="float64") /* ty=Tensor[(756), float64] */;
  %1245 = cast(meta[relay.Constant][95] /* ty=Tensor[(270, 1), float32] */, dtype="float32") /* ty=Tensor[(270, 1), float32] */;
  %1246 = reshape(%1243, newshape=[5, 9, 6]) /* ty=Tensor[(5, 9, 6), float32] */;
  %1247 = reshape(%1244, newshape=[9, 84]) /* ty=Tensor[(9, 84), float64] */;
  %1248 = reshape(%1245, newshape=[5, 9, 6]) /* ty=Tensor[(5, 9, 6), float32] */;
  %1249 = @func_2457(%1246, %1247, %1248) /* ty=(Tensor[(5, 9, 6), int32], Tensor[(540), float64], Tensor[(540), float64], Tensor[(9, 84), int16], Tensor[(5, 9, 6), bool]) */;
  %1250 = cast(%var_2754, dtype="float32") /* ty=Tensor[(8, 3, 16), float32] */;
  %1251 = log(%1250) /* ty=Tensor[(8, 3, 16), float32] */;
  %1252 = cast(%1251, dtype="float32") /* ty=Tensor[(8, 3, 16), float32] */;
  %1253 = tan(%1252) /* ty=Tensor[(8, 3, 16), float32] */;
  %1254 = cast(%1253, dtype="float64") /* ty=Tensor[(8, 3, 16), float64] */;
  %1255 = cast(%1251, dtype="float64") /* ty=Tensor[(8, 3, 16), float64] */;
  %1256 = %1249.2;
  %1257 = atanh(%1254) /* ty=Tensor[(8, 3, 16), float64] */;
  %1258 = sqrt(%1255) /* ty=Tensor[(8, 3, 16), float64] */;
  (%1256, meta[relay.Constant][95] /* ty=Tensor[(270, 1), float32] */, %var_2774, %1257, %1258)
}

def @func_13917() -> Tensor[(2, 8, 2), bool] {
  @func_7733() /* ty=Tensor[(2, 8, 2), bool] */
}

def @main(%var_16195: bool, %var_16196: Tensor[(1, 7, 13), bool]) -> (Tensor[(?, 7, 13), int32], Tensor[(?, 7, 13), bool]) {
  %1259 = cast(%var_16195, dtype="bool") /* ty=bool */;
  %1260 = cast(%var_16196, dtype="bool") /* ty=Tensor[(1, 7, 13), bool] */;
  %1261 = logical_and(%1259, %1260) /* ty=Tensor[(1, 7, 13), bool] */;
  %1262 = cast(%1261, dtype="int32") /* ty=Tensor[(1, 7, 13), int32] */;
  %1263 = shape_of(%var_16196, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1264 = cast(%var_16196, dtype="int32") /* ty=Tensor[(1, 7, 13), int32] */;
  %1265 = dyn.reshape(%1262, %1263, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1266 = cast(%var_16196, dtype="bool") /* ty=Tensor[(1, 7, 13), bool] */;
  %1267 = cast(%var_16195, dtype="bool") /* ty=bool */;
  %1268 = less_equal(%1266, %1267) /* ty=Tensor[(1, 7, 13), bool] */;
  %1269 = cast(%var_16196, dtype="bool") /* ty=Tensor[(1, 7, 13), bool] */;
  %1270 = shape_of(%1268, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1271 = cast(%1268, dtype="bool") /* ty=Tensor[(1, 7, 13), bool] */;
  %1272 = dyn.reshape(%1269, %1270, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1273 = bitwise_xor(%1264, %1265) /* ty=Tensor[(?, 7, 13), int32] */;
  %1274 = greater(%1271, %1272) /* ty=Tensor[(?, 7, 13), bool] */;
  (%1273, %1274)
}

def @func_10239(%var_10225: Tensor[(2, 8, 2), float32]) -> Tensor[(2, 8, 2), bool] {
  %1275 = @func_3766() /* ty=(Tensor[(2, 8, 2), int8], Tensor[(2, 8, 2), float32]) */;
  %1276 = %1275.1;
  %1277 = cast(%var_10225, dtype="bool") /* ty=Tensor[(2, 8, 2), bool] */;
  %1278 = shape_of(%1276, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1279 = cast(%1276, dtype="bool") /* ty=Tensor[(2, 8, 2), bool] */;
  %1280 = dyn.reshape(%1277, %1278, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%1279, %1280) /* ty=Tensor[(2, 8, 2), bool] */
}

def @func_9433(%var_9422: Tensor[(7, 10, 1), float32]) -> (Tensor[(7, 10, 1), float64], Tensor[(7, 10, 9), uint64]) {
  %1281 = cast(%var_9422, dtype="float32") /* ty=Tensor[(7, 10, 1), float32] */;
  %1282 = log10(%1281) /* ty=Tensor[(7, 10, 1), float32] */;
  %1283 = cast(%1282, dtype="float64") /* ty=Tensor[(7, 10, 1), float64] */;
  %1284 = cast(%1282, dtype="uint64") /* ty=Tensor[(7, 10, 1), uint64] */;
  %1285 = cast(meta[relay.Constant][96] /* ty=Tensor[(7, 10, 9), float32] */, dtype="uint64") /* ty=Tensor[(7, 10, 9), uint64] */;
  %1286 = log(%1283) /* ty=Tensor[(7, 10, 1), float64] */;
  %1287 = bitwise_or(%1284, %1285) /* ty=Tensor[(7, 10, 9), uint64] */;
  (%1286, %1287)
}

def @func_15354(%var_15351: Tensor[(2, 192), float32]) -> (Tensor[(2, 8, 2), bool], Tensor[(6, 7, 15), float32], Tensor[(630), float32], Tensor[(2, 192), float32]) {
  %1288 = @func_9110() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(4, 40), float64], Tensor[(4, 40), uint32], Tensor[(8, 3, 16), float64], Tensor[(384), float32], Tensor[(756), float64]) */;
  %1289 = cast(meta[relay.Constant][97] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
  %1290 = cast(%var_15351, dtype="float32") /* ty=Tensor[(2, 192), float32] */;
  %1291 = reshape(%1289, newshape=[630]) /* ty=Tensor[(630), float32] */;
  %1292 = reshape(%1290, newshape=[384]) /* ty=Tensor[(384), float32] */;
  %1293 = @func_8072(%1291, %1292) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(6, 7, 15), float32], Tensor[(630), float32], Tensor[(8, 3, 16), float64], Tensor[(384), float32], Tensor[(756), float64]) */;
  %1294 = %1288.0;
  %1295 = %1293.1;
  (%1294, %1295, meta[relay.Constant][97] /* ty=Tensor[(630), float32] */, %var_15351)
}

def @func_3493() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) {
  %1296 = cast(meta[relay.Constant][98] /* ty=Tensor[(2, 8, 1), bool] */, dtype="bool") /* ty=Tensor[(2, 8, 1), bool] */;
  %1297 = cast(meta[relay.Constant][99] /* ty=Tensor[(2, 8, 2), bool] */, dtype="bool") /* ty=Tensor[(2, 8, 2), bool] */;
  %1298 = cast(meta[relay.Constant][99] /* ty=Tensor[(2, 8, 2), bool] */, dtype="bool") /* ty=Tensor[(2, 8, 2), bool] */;
  %1299 = cast(meta[relay.Constant][98] /* ty=Tensor[(2, 8, 1), bool] */, dtype="bool") /* ty=Tensor[(2, 8, 1), bool] */;
  %1300 = logical_or(%1296, %1297) /* ty=Tensor[(2, 8, 2), bool] */;
  %1301 = greater_equal(%1298, %1299) /* ty=Tensor[(2, 8, 2), bool] */;
  (%1300, %1301)
}

def @func_11635() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(1456), float32]) {
  %1302 = @func_11417() /* ty=Tensor[(2, 8, 2), bool] */;
  %1303 = cast(%1302, dtype="bool") /* ty=Tensor[(2, 8, 2), bool] */;
  %1304 = cast(meta[relay.Constant][100] /* ty=Tensor[(1456), float32] */, dtype="float32") /* ty=Tensor[(1456), float32] */;
  %1305 = reshape(%1303, newshape=[2, 8, 2]) /* ty=Tensor[(2, 8, 2), bool] */;
  %1306 = reshape(%1304, newshape=[1456]) /* ty=Tensor[(1456), float32] */;
  %1307 = @func_3555(%1305, %1306) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(660, 2), float64], Tensor[(1456), float32]) */;
  %1308 = %1307.0;
  (%1302, %1308, meta[relay.Constant][100] /* ty=Tensor[(1456), float32] */)
}

def @func_14125() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) {
  %1309 = @func_8730() /* ty=(Tensor[(4, 364), float32], Tensor[(2, 8, 2), bool]) */;
  %1310 = @func_11961() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %1311 = %1309.1;
  %1312 = %1310.1;
  (%1311, %1312)
}

def @func_8672() -> (Tensor[(2, 8, 2), bool],) {
  %1313 = @func_7267() /* ty=Tensor[(2, 8, 2), bool] */;
  (%1313,)
}

def @func_6428() -> Tensor[(2, 8, 2), bool] {
  @func_6372() /* ty=Tensor[(2, 8, 2), bool] */
}

def @func_7920(%var_7895: Tensor[(588, 1), float64], %var_7896: Tensor[(1320), float64], %var_7908: Tensor[(588, 1), float64]) -> (Tensor[(2, 8, 2), bool], Tensor[(1320), float64], Tensor[(588, ?), float32], Tensor[(2, 8, 2), bool], Tensor[(588, ?), bool], Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) {
  %1314 = cast(%var_7895, dtype="float64") /* ty=Tensor[(588, 1), float64] */;
  %1315 = cast(%var_7896, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %1316 = reshape(%1314, newshape=[588]) /* ty=Tensor[(588), float64] */;
  %1317 = reshape(%1315, newshape=[1320]) /* ty=Tensor[(1320), float64] */;
  %1318 = @func_4656(%1316, %1317) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(660, 2), float64], Tensor[(588), float64], Tensor[(1320), float64], Tensor[(5, 12, 9), float64], Tensor[(540), float64], Tensor[(6, 3, 5), float64], Tensor[(90), float64]) */;
  %1319 = %1318.2;
  %1320 = cast(%1319, dtype="float32") /* ty=Tensor[(588), float32] */;
  %1321 = shape_of(%var_7895, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1322 = cast(%var_7895, dtype="float32") /* ty=Tensor[(588, 1), float32] */;
  %1323 = dyn.reshape(%1320, %1321, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1324 = @func_4305() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %1325 = cast(%var_7908, dtype="bool") /* ty=Tensor[(588, 1), bool] */;
  %1326 = shape_of(%var_7895, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1327 = cast(%var_7895, dtype="bool") /* ty=Tensor[(588, 1), bool] */;
  %1328 = dyn.reshape(%1325, %1326, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1329 = @func_6382() /* ty=Tensor[(2, 8, 2), bool] */;
  %1330 = mod(%1322, %1323) /* ty=Tensor[(588, ?), float32] */;
  %1331 = %1324.1;
  %1332 = less_equal(%1327, %1328) /* ty=Tensor[(588, ?), bool] */;
  %1333 = @func_6805() /* ty=Tensor[(2, 8, 2), bool] */;
  %1334 = @func_7267() /* ty=Tensor[(2, 8, 2), bool] */;
  (%1329, %var_7896, %1330, %1331, %1332, %1333, %1334)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_5234(%var_5231: Tensor[(660, 2), float64], %var_5232: Tensor[(8, 182), float32], %var_5233: Tensor[(792), int8]) -> (Tensor[(2, 8, 2), bool], Tensor[(660, 2), float64], Tensor[(2, 8, 2), bool], Tensor[(8, 182), uint16], Tensor[(2, 8, 2), int8], Tensor[(1456), float32], Tensor[(792), int8]) {
  %30 = fn (%var_5186: Tensor[(660, 2), float64], %var_5214: Tensor[(8, 182), float32], %var_5225: Tensor[(792), int8]) -> (Tensor[(2, 8, 2), bool], Tensor[(660, 2), float64], Tensor[(2, 8, 2), bool], Tensor[(8, 182), uint16], Tensor[(2, 8, 2), int8], Tensor[(1456), float32], Tensor[(792), int8]) {
    %0 = @func_3493() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
    %1 = %0.0;
    %2 = cast(%1, dtype="bool") /* ty=Tensor[(2, 8, 2), bool] */;
    %3 = cast(meta[relay.Constant][0] /* ty=Tensor[(8, 182), float32] */, dtype="float32") /* ty=Tensor[(8, 182), float32] */;
    %4 = reshape(%2, newshape=[2, 8, 2]) /* ty=Tensor[(2, 8, 2), bool] */;
    %5 = reshape(%3, newshape=[1456]) /* ty=Tensor[(1456), float32] */;
    %6 = @func_3555(%4, %5) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(660, 2), float64], Tensor[(1456), float32]) */;
    %7 = %6.1;
    %8 = cast(%var_5186, dtype="float64") /* ty=Tensor[(660, 2), float64] */;
    %9 = shape_of(%7, dtype="int32") /* ty=Tensor[(2), int32] */;
    %10 = cast(%7, dtype="float64") /* ty=Tensor[(660, 2), float64] */;
    %11 = dyn.reshape(%8, %9, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %12 = cast(%1, dtype="bool") /* ty=Tensor[(2, 8, 2), bool] */;
    %13 = cast(meta[relay.Constant][0] /* ty=Tensor[(8, 182), float32] */, dtype="float32") /* ty=Tensor[(8, 182), float32] */;
    %14 = reshape(%12, newshape=[2, 8, 2]) /* ty=Tensor[(2, 8, 2), bool] */;
    %15 = reshape(%13, newshape=[1456]) /* ty=Tensor[(1456), float32] */;
    %16 = @func_3555(%14, %15) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(660, 2), float64], Tensor[(1456), float32]) */;
    %17 = cast(%var_5214, dtype="uint16") /* ty=Tensor[(8, 182), uint16] */;
    %18 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(8, 182), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %19 = cast(meta[relay.Constant][0] /* ty=Tensor[(8, 182), float32] */, dtype="uint16") /* ty=Tensor[(8, 182), uint16] */;
    %20 = dyn.reshape(%17, %18, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
    %21 = @func_3766() /* ty=(Tensor[(2, 8, 2), int8], Tensor[(2, 8, 2), float32]) */;
    %22 = cast(%var_5225, dtype="int8") /* ty=Tensor[(792), int8] */;
    %23 = reshape(%22, newshape=[11, 12, 6]) /* ty=Tensor[(11, 12, 6), int8] */;
    %24 = @func_3725(%23) /* ty=(Tensor[(11, 12, 6), int8], Tensor[(13, 8, 14), float32], Tensor[(1456), float32]) */;
    %25 = power(%10, %11) /* ty=Tensor[(660, 2), float64] */;
    %26 = %16.0;
    %27 = minimum(%19, %20) /* ty=Tensor[(8, 182), uint16] */;
    %28 = %21.0;
    %29 = %24.2;
    (%1, %25, %26, %27, %28, %29, %var_5225)
  };
  %30(%var_5231, %var_5232, %var_5233) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(660, 2), float64], Tensor[(2, 8, 2), bool], Tensor[(8, 182), uint16], Tensor[(2, 8, 2), int8], Tensor[(1456), float32], Tensor[(792), int8]) */
}

def @func_11962() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) {
  %34 = fn () -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) {
    %31 = @func_4305() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
    %32 = @func_7733() /* ty=Tensor[(2, 8, 2), bool] */;
    %33 = %31.0;
    (%32, %33)
  };
  %34() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */
}

def @func_7721() -> Tensor[(2, 8, 2), float32] {
  @func_7719() /* ty=Tensor[(2, 8, 2), float32] */
}

def @func_10877(%var_10876: Tensor[(660, 2), float64]) -> (Tensor[(660, 2), float32], Tensor[(660, 2), float32]) {
  %49 = fn (%var_10852: Tensor[(660, 2), float64]) -> (Tensor[(660, 2), float32], Tensor[(660, 2), float32]) {
    %35 = @func_8575() /* ty=(Tensor[(2, 8, 2), float32], Tensor[(660, 2), float64], Tensor[(1, 1456), float32]) */;
    %36 = %35.1;
    %37 = cast(%var_10852, dtype="float32") /* ty=Tensor[(660, 2), float32] */;
    %38 = shape_of(%36, dtype="int32") /* ty=Tensor[(2), int32] */;
    %39 = cast(%36, dtype="float32") /* ty=Tensor[(660, 2), float32] */;
    %40 = dyn.reshape(%37, %38, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %41 = cast(%var_10852, dtype="float32") /* ty=Tensor[(660, 2), float32] */;
    %42 = erf(%41) /* ty=Tensor[(660, 2), float32] */;
    %43 = cast(%36, dtype="float32") /* ty=Tensor[(660, 2), float32] */;
    %44 = shape_of(%42, dtype="int32") /* ty=Tensor[(2), int32] */;
    %45 = cast(%42, dtype="float32") /* ty=Tensor[(660, 2), float32] */;
    %46 = dyn.reshape(%43, %44, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %47 = mod(%39, %40) /* ty=Tensor[(660, 2), float32] */;
    %48 = floor_divide(%45, %46) /* ty=Tensor[(660, 2), float32] */;
    (%47, %48)
  };
  %49(%var_10876) /* ty=(Tensor[(660, 2), float32], Tensor[(660, 2), float32]) */
}

def @func_8505(%var_8493: Tensor[(9, 6, 13), float64]) -> Tensor[(9, 6, 13), float64] {
  %50 = cast(meta[relay.Constant][1] /* ty=Tensor[(9, 6, 13), float64] */, dtype="float64") /* ty=Tensor[(9, 6, 13), float64] */;
  %51 = shape_of(%var_8493, dtype="int32") /* ty=Tensor[(3), int32] */;
  %52 = cast(%var_8493, dtype="float64") /* ty=Tensor[(9, 6, 13), float64] */;
  %53 = dyn.reshape(%50, %51, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  divide(%52, %53) /* ty=Tensor[(9, 6, 13), float64] */
}

def @func_10044() -> Tensor[(2, 8, 2), uint32] {
  @func_5156() /* ty=Tensor[(2, 8, 2), uint32] */
}

def @func_11432() -> Tensor[(2, 8, 2), bool] {
  %54 = fn () -> Tensor[(2, 8, 2), bool] {
    @func_5247() /* ty=Tensor[(2, 8, 2), bool] */
  };
  %54() /* ty=Tensor[(2, 8, 2), bool] */
}

def @func_4656(%var_4614: Tensor[(588), float64], %var_4615: Tensor[(1320), float64]) -> (Tensor[(2, 8, 2), bool], Tensor[(660, 2), float64], Tensor[(588), float64], Tensor[(1320), float64], Tensor[(5, 12, 9), float64], Tensor[(540), float64], Tensor[(6, 3, 5), float64], Tensor[(90), float64]) {
  %55 = @func_4305() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %56 = cast(%var_4614, dtype="float64") /* ty=Tensor[(588), float64] */;
  %57 = cast(%var_4615, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %58 = reshape(%56, newshape=[14, 6, 7]) /* ty=Tensor[(14, 6, 7), float64] */;
  %59 = reshape(%57, newshape=[660, 2]) /* ty=Tensor[(660, 2), float64] */;
  %60 = @func_4025(%58, %59) /* ty=(Tensor[(14, 6, 7), float64], Tensor[(11, 12, 10), bool], Tensor[(660, 2), float64]) */;
  %61 = cast(meta[relay.Constant][2] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %62 = reshape(%61, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %63 = @func_4004(%62) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(5, 12, 9), float64], Tensor[(540), float64]) */;
  %64 = cast(meta[relay.Constant][3] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
  %65 = reshape(%64, newshape=[6, 3, 5]) /* ty=Tensor[(6, 3, 5), float64] */;
  %66 = %55.0;
  %67 = %60.2;
  %68 = %63.1;
  %69 = @func_3616(%65) /* ty=Tensor[(6, 3, 5), float64] */;
  (%66, %67, %var_4614, %var_4615, %68, meta[relay.Constant][2] /* ty=Tensor[(540), float64] */, %69, meta[relay.Constant][3] /* ty=Tensor[(90), float64] */)
}

def @func_3840(%var_3838: Tensor[(4, 364), float32]) -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(4, 364), float64], Tensor[(2, 8, 2), float32], Tensor[(13, 8, 14), float32], Tensor[(792), int8]) {
  @func_3837(%var_3838) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(4, 364), float64], Tensor[(2, 8, 2), float32], Tensor[(13, 8, 14), float32], Tensor[(792), int8]) */
}

def @func_11196() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) {
  %70 = @func_6805() /* ty=Tensor[(2, 8, 2), bool] */;
  %71 = @func_7733() /* ty=Tensor[(2, 8, 2), bool] */;
  (%70, %71)
}

def @func_10186() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), int8]) {
  %74 = fn () -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), int8]) {
    %72 = @func_6805() /* ty=Tensor[(2, 8, 2), bool] */;
    %73 = @func_4593() /* ty=Tensor[(2, 8, 2), int8] */;
    (%72, %73)
  };
  %74() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), int8]) */
}

def @func_7945() -> Tensor[(2, 8, 2), bool] {
  %75 = @func_3493() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %75.1
}

def @func_7643(%var_7642: Tensor[(1320), float64]) -> (Tensor[(2, 8, 2), bool], Tensor[(6, 3, 5), float64], Tensor[(588), float64], Tensor[(1320), float64]) {
  %84 = fn (%var_7618: Tensor[(1320), float64]) -> (Tensor[(2, 8, 2), bool], Tensor[(6, 3, 5), float64], Tensor[(588), float64], Tensor[(1320), float64]) {
    %76 = @func_7394() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
    %77 = cast(meta[relay.Constant][4] /* ty=Tensor[(588), float64] */, dtype="float64") /* ty=Tensor[(588), float64] */;
    %78 = cast(%var_7618, dtype="float64") /* ty=Tensor[(1320), float64] */;
    %79 = reshape(%77, newshape=[588]) /* ty=Tensor[(588), float64] */;
    %80 = reshape(%78, newshape=[1320]) /* ty=Tensor[(1320), float64] */;
    %81 = @func_4656(%79, %80) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(660, 2), float64], Tensor[(588), float64], Tensor[(1320), float64], Tensor[(5, 12, 9), float64], Tensor[(540), float64], Tensor[(6, 3, 5), float64], Tensor[(90), float64]) */;
    %82 = %76.1;
    %83 = %81.6;
    (%82, %83, meta[relay.Constant][4] /* ty=Tensor[(588), float64] */, %var_7618)
  };
  %84(%var_7642) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(6, 3, 5), float64], Tensor[(588), float64], Tensor[(1320), float64]) */
}

def @func_5661() -> Tensor[(2, 8, 2), float32] {
  %86 = fn () -> Tensor[(2, 8, 2), float32] {
    %85 = @func_3766() /* ty=(Tensor[(2, 8, 2), int8], Tensor[(2, 8, 2), float32]) */;
    %85.1
  };
  %86() /* ty=Tensor[(2, 8, 2), float32] */
}

def @func_10889() -> (Tensor[(2, 8, 2), bool],) {
  %89 = fn () -> (Tensor[(2, 8, 2), bool],) {
    %87 = @func_6712() /* ty=(Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), bool]) */;
    %88 = %87.1;
    (%88,)
  };
  %89() /* ty=(Tensor[(2, 8, 2), bool],) */
}

def @func_2176(%var_2174: Tensor[(11, 12, 10), float64]) -> (Tensor[(11, 12, 10), bool], Tensor[(11, 6, 6), float32], Tensor[(396), float32]) {
  @func_2173(%var_2174) /* ty=(Tensor[(11, 12, 10), bool], Tensor[(11, 6, 6), float32], Tensor[(396), float32]) */
}

def @func_10444(%var_10440: Tensor[(16, 10, 9), uint32], %var_10441: Tensor[(16, 10, 9), uint32], %var_10442: Tensor[(756), float64], %var_10443: Tensor[(70), float32]) -> (Tensor[(16, 10, 9), bool], Tensor[(5, 12, 9), float64], Tensor[(756), float64], Tensor[(540), float64], Tensor[(2, 8, 2), bool], Tensor[(7, 10, 1), float64], Tensor[(70), float32]) {
  @func_10438(%var_10440, %var_10441, %var_10442, %var_10443) /* ty=(Tensor[(16, 10, 9), bool], Tensor[(5, 12, 9), float64], Tensor[(756), float64], Tensor[(540), float64], Tensor[(2, 8, 2), bool], Tensor[(7, 10, 1), float64], Tensor[(70), float32]) */
}

def @func_14869() -> (Tensor[(2, 8, 2), bool],) {
  @func_14867() /* ty=(Tensor[(2, 8, 2), bool],) */
}

def @func_7103() -> (Tensor[(2, 8, 2), uint32], Tensor[(2, 8, 2), float32], Tensor[(4, 364), float32]) {
  %95 = fn () -> (Tensor[(2, 8, 2), uint32], Tensor[(2, 8, 2), float32], Tensor[(4, 364), float32]) {
    %90 = cast(meta[relay.Constant][5] /* ty=Tensor[(4, 364), float32] */, dtype="float32") /* ty=Tensor[(4, 364), float32] */;
    %91 = reshape(%90, newshape=[4, 364]) /* ty=Tensor[(4, 364), float32] */;
    %92 = @func_3837(%91) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(4, 364), float64], Tensor[(2, 8, 2), float32], Tensor[(13, 8, 14), float32], Tensor[(792), int8]) */;
    %93 = @func_5156() /* ty=Tensor[(2, 8, 2), uint32] */;
    %94 = %92.3;
    (%93, %94, meta[relay.Constant][5] /* ty=Tensor[(4, 364), float32] */)
  };
  %95() /* ty=(Tensor[(2, 8, 2), uint32], Tensor[(2, 8, 2), float32], Tensor[(4, 364), float32]) */
}

def @func_3493() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) {
  %96 = cast(meta[relay.Constant][6] /* ty=Tensor[(2, 8, 1), bool] */, dtype="bool") /* ty=Tensor[(2, 8, 1), bool] */;
  %97 = cast(meta[relay.Constant][7] /* ty=Tensor[(2, 8, 2), bool] */, dtype="bool") /* ty=Tensor[(2, 8, 2), bool] */;
  %98 = cast(meta[relay.Constant][7] /* ty=Tensor[(2, 8, 2), bool] */, dtype="bool") /* ty=Tensor[(2, 8, 2), bool] */;
  %99 = cast(meta[relay.Constant][6] /* ty=Tensor[(2, 8, 1), bool] */, dtype="bool") /* ty=Tensor[(2, 8, 1), bool] */;
  %100 = logical_or(%96, %97) /* ty=Tensor[(2, 8, 2), bool] */;
  %101 = greater_equal(%98, %99) /* ty=Tensor[(2, 8, 2), bool] */;
  (%100, %101)
}

def @func_6429() -> Tensor[(2, 8, 2), bool] {
  %102 = fn () -> Tensor[(2, 8, 2), bool] {
    @func_6372() /* ty=Tensor[(2, 8, 2), bool] */
  };
  %102() /* ty=Tensor[(2, 8, 2), bool] */
}

def @func_13383() -> Tensor[(2, 8, 2), uint32] {
  %104 = fn () -> Tensor[(2, 8, 2), uint32] {
    %103 = @func_12751() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), uint32]) */;
    %103.1
  };
  %104() /* ty=Tensor[(2, 8, 2), uint32] */
}

def @func_15892(%var_15880: Tensor[(1008), float64], %var_15881: Tensor[(756), float64], %var_15882: Tensor[(540), float64]) -> (Tensor[(2, 8, 2), uint32], Tensor[(5, 12, 9), float64], Tensor[(1008), float64], Tensor[(756), float64], Tensor[(540), float64], Tensor[(2, 8, 2), float32]) {
  %105 = cast(%var_15880, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %106 = cast(%var_15881, dtype="float64") /* ty=Tensor[(756), float64] */;
  %107 = cast(%var_15882, dtype="float64") /* ty=Tensor[(540), float64] */;
  %108 = reshape(%105, newshape=[7, 12, 12]) /* ty=Tensor[(7, 12, 12), float64] */;
  %109 = reshape(%106, newshape=[756]) /* ty=Tensor[(756), float64] */;
  %110 = reshape(%107, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %111 = @func_1180(%108, %109, %110) /* ty=(Tensor[(7, 12, 12), float64], Tensor[(540), float64], Tensor[(756), float64], Tensor[(540), float64], Tensor[(5, 12, 9), float64]) */;
  %112 = @func_8182() /* ty=(Tensor[(2, 8, 2), float32],) */;
  %113 = @func_12268() /* ty=Tensor[(2, 8, 2), uint32] */;
  %114 = %111.4;
  %115 = %112.0;
  (%113, %114, %var_15880, %var_15881, %var_15882, %115)
}

def @func_11091() -> (Tensor[(2, 8, 2), int8], Tensor[(2, 8, 2), bool]) {
  @func_11089() /* ty=(Tensor[(2, 8, 2), int8], Tensor[(2, 8, 2), bool]) */
}

def @func_15954() -> Tensor[(2, 8, 2), bool] {
  %116 = fn () -> Tensor[(2, 8, 2), bool] {
    @func_13917() /* ty=Tensor[(2, 8, 2), bool] */
  };
  %116() /* ty=Tensor[(2, 8, 2), bool] */
}

def @func_15357(%var_15355: Tensor[(2, 192), float32]) -> (Tensor[(2, 8, 2), bool], Tensor[(6, 7, 15), float32], Tensor[(630), float32], Tensor[(2, 192), float32]) {
  @func_15354(%var_15355) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(6, 7, 15), float32], Tensor[(630), float32], Tensor[(2, 192), float32]) */
}

def @func_12120() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) {
  %117 = @func_11873() /* ty=Tensor[(2, 8, 2), bool] */;
  %118 = @func_11873() /* ty=Tensor[(2, 8, 2), bool] */;
  %119 = @func_6428() /* ty=Tensor[(2, 8, 2), bool] */;
  (%117, %118, %119)
}

def @func_10134() -> (Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), bool]) {
  %123 = fn () -> (Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), bool]) {
    %120 = @func_9124() /* ty=(Tensor[(2, 8, 2), float32],) */;
    %121 = %120.0;
    %122 = @func_8230() /* ty=Tensor[(2, 8, 2), bool] */;
    (%121, %122)
  };
  %123() /* ty=(Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), bool]) */
}

def @func_15651(%var_15649: Tensor[(1320), float64], %var_15650: Tensor[(588), float64]) -> (Tensor[(2, 8, 2), bool], Tensor[(1320), float64], Tensor[(1456), float32], Tensor[(588), float64], Tensor[(18, 42), float64], Tensor[(9, 60), float32], Tensor[(2, 8, 2), uint32], Tensor[(2, 8, 2), bool]) {
  @func_15647(%var_15649, %var_15650) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(1320), float64], Tensor[(1456), float32], Tensor[(588), float64], Tensor[(18, 42), float64], Tensor[(9, 60), float32], Tensor[(2, 8, 2), uint32], Tensor[(2, 8, 2), bool]) */
}

def @func_13066() -> Tensor[(90), float64] {
  %125 = fn () -> Tensor[(90), float64] {
    %124 = @func_6180() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(6, 3, 5), float64], Tensor[(90), float64]) */;
    %124.2
  };
  %125() /* ty=Tensor[(90), float64] */
}

def @func_2537(%var_2500: Tensor[(13, 8, 14), float32]) -> (Tensor[(13, 8, 14), float32], Tensor[(396), float32], Tensor[(660, 2), float64]) {
  %126 = cast(%var_2500, dtype="float32") /* ty=Tensor[(13, 8, 14), float32] */;
  %127 = cast(meta[relay.Constant][8] /* ty=Tensor[(660, 2), float64] */, dtype="float64") /* ty=Tensor[(660, 2), float64] */;
  %128 = reshape(%127, newshape=[11, 12, 10]) /* ty=Tensor[(11, 12, 10), float64] */;
  %129 = @func_2173(%128) /* ty=(Tensor[(11, 12, 10), bool], Tensor[(11, 6, 6), float32], Tensor[(396), float32]) */;
  %130 = acosh(%126) /* ty=Tensor[(13, 8, 14), float32] */;
  %131 = %129.2;
  (%130, %131, meta[relay.Constant][8] /* ty=Tensor[(660, 2), float64] */)
}

def @func_8730() -> (Tensor[(4, 364), float32], Tensor[(2, 8, 2), bool]) {
  %132 = @func_7471() /* ty=(Tensor[(90), float64], Tensor[(4, 364), float32], Tensor[(660, 2), float32], Tensor[(2, 8, 2), bool]) */;
  %133 = %132.1;
  %134 = cast(%133, dtype="float32") /* ty=Tensor[(4, 364), float32] */;
  %135 = reshape(%134, newshape=[4, 364]) /* ty=Tensor[(4, 364), float32] */;
  %136 = @func_3837(%135) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(4, 364), float64], Tensor[(2, 8, 2), float32], Tensor[(13, 8, 14), float32], Tensor[(792), int8]) */;
  %137 = %136.1;
  (%133, %137)
}

def @func_8323() -> (Tensor[(2, 8, 2), bool],) {
  %139 = fn () -> (Tensor[(2, 8, 2), bool],) {
    %138 = @func_7539() /* ty=Tensor[(2, 8, 2), bool] */;
    (%138,)
  };
  %139() /* ty=(Tensor[(2, 8, 2), bool],) */
}

def @func_12855() -> Tensor[(2, 8, 2), bool] {
  %140 = @func_10185() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), int8]) */;
  %140.0
}

def @func_3703() -> (Tensor[(2, 8, 2), bool],) {
  @func_3701() /* ty=(Tensor[(2, 8, 2), bool],) */
}

def @func_14406() -> Tensor[(2, 8, 2), bool] {
  %141 = @func_10888() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %141.0
}

def @func_3980(%var_3979: Tensor[(792), int8]) -> (Tensor[(2, 8, 2), bool], Tensor[(11, 12, 6), int32]) {
  %153 = fn (%var_3946: Tensor[(792), int8]) -> (Tensor[(2, 8, 2), bool], Tensor[(11, 12, 6), int32]) {
    %142 = @func_3701() /* ty=(Tensor[(2, 8, 2), bool],) */;
    %143 = cast(%var_3946, dtype="int8") /* ty=Tensor[(792), int8] */;
    %144 = reshape(%143, newshape=[11, 12, 6]) /* ty=Tensor[(11, 12, 6), int8] */;
    %145 = @func_3725(%144) /* ty=(Tensor[(11, 12, 6), int8], Tensor[(13, 8, 14), float32], Tensor[(1456), float32]) */;
    %146 = %145.0;
    %147 = cast(%var_3946, dtype="int32") /* ty=Tensor[(792), int32] */;
    %148 = shape_of(%146, dtype="int32") /* ty=Tensor[(3), int32] */;
    %149 = cast(%146, dtype="int32") /* ty=Tensor[(11, 12, 6), int32] */;
    %150 = dyn.reshape(%147, %148, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %151 = %142.0;
    %152 = minimum(%149, %150) /* ty=Tensor[(11, 12, 6), int32] */;
    (%151, %152)
  };
  %153(%var_3979) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(11, 12, 6), int32]) */
}

def @func_4192(%var_4190: Tensor[(5, 4, 8), int16], %var_4191: Tensor[(540), float64]) -> (Tensor[(5, 4, 8), int16], Tensor[(5, 4, 8), float32], Tensor[(540), float64], Tensor[(540), float64]) {
  %165 = fn (%var_4175: Tensor[(5, 4, 8), int16], %var_4184: Tensor[(540), float64]) -> (Tensor[(5, 4, 8), int16], Tensor[(5, 4, 8), float32], Tensor[(540), float64], Tensor[(540), float64]) {
    %154 = cast(meta[relay.Constant][9] /* ty=Tensor[(5, 4, 8), int16] */, dtype="int16") /* ty=Tensor[(5, 4, 8), int16] */;
    %155 = shape_of(%var_4175, dtype="int32") /* ty=Tensor[(3), int32] */;
    %156 = cast(%var_4175, dtype="int16") /* ty=Tensor[(5, 4, 8), int16] */;
    %157 = dyn.reshape(%154, %155, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %158 = cast(%var_4175, dtype="float32") /* ty=Tensor[(5, 4, 8), float32] */;
    %159 = cast(%var_4184, dtype="float64") /* ty=Tensor[(540), float64] */;
    %160 = reshape(%159, newshape=[540]) /* ty=Tensor[(540), float64] */;
    %161 = @func_4004(%160) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(5, 12, 9), float64], Tensor[(540), float64]) */;
    %162 = minimum(%156, %157) /* ty=Tensor[(5, 4, 8), int16] */;
    %163 = asin(%158) /* ty=Tensor[(5, 4, 8), float32] */;
    %164 = %161.2;
    (%162, %163, %164, %var_4184)
  };
  %165(%var_4190, %var_4191) /* ty=(Tensor[(5, 4, 8), int16], Tensor[(5, 4, 8), float32], Tensor[(540), float64], Tensor[(540), float64]) */
}

def @func_8828() -> (Tensor[(2, 8, 2), bool],) {
  %167 = fn () -> (Tensor[(2, 8, 2), bool],) {
    %166 = @func_7539() /* ty=Tensor[(2, 8, 2), bool] */;
    (%166,)
  };
  %167() /* ty=(Tensor[(2, 8, 2), bool],) */
}

def @func_2461(%var_2458: Tensor[(5, 9, 6), float32], %var_2459: Tensor[(9, 84), float64], %var_2460: Tensor[(5, 9, 6), float32]) -> (Tensor[(5, 9, 6), int32], Tensor[(540), float64], Tensor[(540), float64], Tensor[(9, 84), int16], Tensor[(5, 9, 6), bool]) {
  %191 = fn (%var_2418: Tensor[(5, 9, 6), float32], %var_2434: Tensor[(9, 84), float64], %var_2448: Tensor[(5, 9, 6), float32]) -> (Tensor[(5, 9, 6), int32], Tensor[(540), float64], Tensor[(540), float64], Tensor[(9, 84), int16], Tensor[(5, 9, 6), bool]) {
    %168 = cast(%var_2418, dtype="float32") /* ty=Tensor[(5, 9, 6), float32] */;
    %169 = asin(%168) /* ty=Tensor[(5, 9, 6), float32] */;
    %170 = cast(%169, dtype="int32") /* ty=Tensor[(5, 9, 6), int32] */;
    %171 = shape_of(%var_2418, dtype="int32") /* ty=Tensor[(3), int32] */;
    %172 = cast(%var_2418, dtype="int32") /* ty=Tensor[(5, 9, 6), int32] */;
    %173 = dyn.reshape(%170, %171, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %174 = cast(%var_2434, dtype="float64") /* ty=Tensor[(9, 84), float64] */;
    %175 = cast(meta[relay.Constant][10] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
    %176 = reshape(%174, newshape=[6, 14, 9]) /* ty=Tensor[(6, 14, 9), float64] */;
    %177 = reshape(%175, newshape=[540]) /* ty=Tensor[(540), float64] */;
    %178 = @func_1105(%176, %177) /* ty=(Tensor[(6, 14, 9), float64], Tensor[(5, 12, 9), float64], Tensor[(540), float64], Tensor[(5, 12, 9), float64], Tensor[(5, 12, 9), float64]) */;
    %179 = cast(meta[relay.Constant][11] /* ty=Tensor[(9, 84), float64] */, dtype="int16") /* ty=Tensor[(9, 84), int16] */;
    %180 = shape_of(%var_2434, dtype="int32") /* ty=Tensor[(2), int32] */;
    %181 = cast(%var_2434, dtype="int16") /* ty=Tensor[(9, 84), int16] */;
    %182 = dyn.reshape(%179, %180, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
    %183 = cast(%var_2448, dtype="bool") /* ty=Tensor[(5, 9, 6), bool] */;
    %184 = shape_of(%169, dtype="int32") /* ty=Tensor[(3), int32] */;
    %185 = cast(%169, dtype="bool") /* ty=Tensor[(5, 9, 6), bool] */;
    %186 = dyn.reshape(%183, %184, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %187 = bitwise_or(%172, %173) /* ty=Tensor[(5, 9, 6), int32] */;
    %188 = %178.2;
    %189 = minimum(%181, %182) /* ty=Tensor[(9, 84), int16] */;
    %190 = less_equal(%185, %186) /* ty=Tensor[(5, 9, 6), bool] */;
    (%187, %188, meta[relay.Constant][10] /* ty=Tensor[(540), float64] */, %189, %190)
  };
  %191(%var_2458, %var_2459, %var_2460) /* ty=(Tensor[(5, 9, 6), int32], Tensor[(540), float64], Tensor[(540), float64], Tensor[(9, 84), int16], Tensor[(5, 9, 6), bool]) */
}

def @func_15537() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(9, 6, 13), float64], Tensor[(702), float64]) {
  %198 = fn () -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(9, 6, 13), float64], Tensor[(702), float64]) {
    %192 = @func_13145() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
    %193 = cast(meta[relay.Constant][12] /* ty=Tensor[(702), float64] */, dtype="float64") /* ty=Tensor[(702), float64] */;
    %194 = reshape(%193, newshape=[9, 6, 13]) /* ty=Tensor[(9, 6, 13), float64] */;
    %195 = %192.2;
    %196 = @func_8230() /* ty=Tensor[(2, 8, 2), bool] */;
    %197 = @func_8505(%194) /* ty=Tensor[(9, 6, 13), float64] */;
    (%195, %196, %197, meta[relay.Constant][12] /* ty=Tensor[(702), float64] */)
  };
  %198() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(9, 6, 13), float64], Tensor[(702), float64]) */
}

def @func_9594() -> (Tensor[(540), float64],) {
  @func_9592() /* ty=(Tensor[(540), float64],) */
}

def @func_4660(%var_4658: Tensor[(588), float64], %var_4659: Tensor[(1320), float64]) -> (Tensor[(2, 8, 2), bool], Tensor[(660, 2), float64], Tensor[(588), float64], Tensor[(1320), float64], Tensor[(5, 12, 9), float64], Tensor[(540), float64], Tensor[(6, 3, 5), float64], Tensor[(90), float64]) {
  @func_4656(%var_4658, %var_4659) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(660, 2), float64], Tensor[(588), float64], Tensor[(1320), float64], Tensor[(5, 12, 9), float64], Tensor[(540), float64], Tensor[(6, 3, 5), float64], Tensor[(90), float64]) */
}

def @func_11219() -> Tensor[(2, 8, 2), bool] {
  %200 = fn () -> Tensor[(2, 8, 2), bool] {
    %199 = @func_10086() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
    %199.1
  };
  %200() /* ty=Tensor[(2, 8, 2), bool] */
}

def @func_15234() -> (Tensor[(2, 8, 2), bool],) {
  @func_15232() /* ty=(Tensor[(2, 8, 2), bool],) */
}

def @func_5603() -> (Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), int8]) {
  %201 = @func_5125() /* ty=(Tensor[(2, 8, 2), float32],) */;
  %202 = %201.0;
  %203 = @func_4593() /* ty=Tensor[(2, 8, 2), int8] */;
  (%202, %203)
}

def @func_7012(%var_7010: Tensor[(6, 7, 15), float32]) -> (Tensor[(6, 7, 15), float32],) {
  @func_7009(%var_7010) /* ty=(Tensor[(6, 7, 15), float32],) */
}

def @func_6773(%var_6770: Tensor[(2, 8, 2), bool], %var_6771: Tensor[(588), float64], %var_6772: Tensor[(1320), float64]) -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(11, 12, 6), int32], Tensor[(588), float64], Tensor[(1320), float64], Tensor[(5, 12, 9), float64], Tensor[(54, 10), float64], Tensor[(2, 8, 2), int8]) {
  %225 = fn (%var_6720: Tensor[(2, 8, 2), bool], %var_6750: Tensor[(588), float64], %var_6751: Tensor[(1320), float64]) -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(11, 12, 6), int32], Tensor[(588), float64], Tensor[(1320), float64], Tensor[(5, 12, 9), float64], Tensor[(54, 10), float64], Tensor[(2, 8, 2), int8]) {
    %204 = @func_5247() /* ty=Tensor[(2, 8, 2), bool] */;
    %205 = cast(%var_6720, dtype="bool") /* ty=Tensor[(2, 8, 2), bool] */;
    %206 = shape_of(%204, dtype="int32") /* ty=Tensor[(3), int32] */;
    %207 = cast(%204, dtype="bool") /* ty=Tensor[(2, 8, 2), bool] */;
    %208 = dyn.reshape(%205, %206, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %209 = less(%207, %208) /* ty=Tensor[(2, 8, 2), bool] */;
    %210 = cast(%209, dtype="bool") /* ty=Tensor[(2, 8, 2), bool] */;
    %211 = reshape(%210, newshape=[2, 8, 2]) /* ty=Tensor[(2, 8, 2), bool] */;
    %212 = @func_6568(%211) /* ty=(Tensor[(2, 8, 2), int16], Tensor[(2, 8, 2), bool]) */;
    %213 = cast(%var_6750, dtype="float64") /* ty=Tensor[(588), float64] */;
    %214 = cast(%var_6751, dtype="float64") /* ty=Tensor[(1320), float64] */;
    %215 = reshape(%213, newshape=[1, 588]) /* ty=Tensor[(1, 588), float64] */;
    %216 = reshape(%214, newshape=[1320]) /* ty=Tensor[(1320), float64] */;
    %217 = @func_5358(%215, %216) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(5, 12, 9), float64], Tensor[(540), float64], Tensor[(11, 12, 6), int32], Tensor[(792), int8], Tensor[(11, 12, 10), bool], Tensor[(1, 588), float64], Tensor[(1320), float64]) */;
    %218 = cast(meta[relay.Constant][13] /* ty=Tensor[(54, 10), float64] */, dtype="float64") /* ty=Tensor[(54, 10), float64] */;
    %219 = reshape(%218, newshape=[5, 12, 9]) /* ty=Tensor[(5, 12, 9), float64] */;
    %220 = @func_5603() /* ty=(Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), int8]) */;
    %221 = %212.1;
    %222 = %217.3;
    %223 = @func_839(%219) /* ty=Tensor[(5, 12, 9), float64] */;
    %224 = %220.1;
    (%209, %221, %222, %var_6750, %var_6751, %223, meta[relay.Constant][13] /* ty=Tensor[(54, 10), float64] */, %224)
  };
  %225(%var_6770, %var_6771, %var_6772) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(11, 12, 6), int32], Tensor[(588), float64], Tensor[(1320), float64], Tensor[(5, 12, 9), float64], Tensor[(54, 10), float64], Tensor[(2, 8, 2), int8]) */
}

def @func_11716() -> (Tensor[(2, 8, 2), float32],) {
  %227 = fn () -> (Tensor[(2, 8, 2), float32],) {
    %226 = @func_7690() /* ty=Tensor[(2, 8, 2), float32] */;
    (%226,)
  };
  %227() /* ty=(Tensor[(2, 8, 2), float32],) */
}

def @func_9435(%var_9434: Tensor[(7, 10, 1), float32]) -> (Tensor[(7, 10, 1), float64], Tensor[(7, 10, 9), uint64]) {
  %235 = fn (%var_9422: Tensor[(7, 10, 1), float32]) -> (Tensor[(7, 10, 1), float64], Tensor[(7, 10, 9), uint64]) {
    %228 = cast(%var_9422, dtype="float32") /* ty=Tensor[(7, 10, 1), float32] */;
    %229 = log10(%228) /* ty=Tensor[(7, 10, 1), float32] */;
    %230 = cast(%229, dtype="float64") /* ty=Tensor[(7, 10, 1), float64] */;
    %231 = cast(%229, dtype="uint64") /* ty=Tensor[(7, 10, 1), uint64] */;
    %232 = cast(meta[relay.Constant][14] /* ty=Tensor[(7, 10, 9), float32] */, dtype="uint64") /* ty=Tensor[(7, 10, 9), uint64] */;
    %233 = log(%230) /* ty=Tensor[(7, 10, 1), float64] */;
    %234 = bitwise_or(%231, %232) /* ty=Tensor[(7, 10, 9), uint64] */;
    (%233, %234)
  };
  %235(%var_9434) /* ty=(Tensor[(7, 10, 1), float64], Tensor[(7, 10, 9), uint64]) */
}

def @func_12753() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), uint32]) {
  @func_12751() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), uint32]) */
}

def @func_9963() -> (Tensor[(2, 8, 2), bool],) {
  %236 = @func_3661() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %237 = %236.0;
  (%237,)
}

def @func_6372() -> Tensor[(2, 8, 2), bool] {
  @func_5247() /* ty=Tensor[(2, 8, 2), bool] */
}

def @func_15402(%var_15386: Tensor[(9, 14, 15), float32]) -> (Tensor[(9, 14, 15), bool], Tensor[(9, 14, 15), float64]) {
  %238 = cast(meta[relay.Constant][15] /* ty=Tensor[(9, 14, 15), float32] */, dtype="bool") /* ty=Tensor[(9, 14, 15), bool] */;
  %239 = shape_of(%var_15386, dtype="int32") /* ty=Tensor[(3), int32] */;
  %240 = cast(%var_15386, dtype="bool") /* ty=Tensor[(9, 14, 15), bool] */;
  %241 = dyn.reshape(%238, %239, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %242 = cast(%var_15386, dtype="float64") /* ty=Tensor[(9, 14, 15), float64] */;
  %243 = not_equal(%240, %241) /* ty=Tensor[(9, 14, 15), bool] */;
  %244 = sigmoid(%242) /* ty=Tensor[(9, 14, 15), float64] */;
  (%243, %244)
}

def @func_5125() -> (Tensor[(2, 8, 2), float32],) {
  %245 = @func_4283() /* ty=Tensor[(2, 8, 2), float32] */;
  (%245,)
}

def @func_6979(%var_6978: Tensor[(660, 2), float64]) -> (Tensor[(6, 3, 5), float64], Tensor[(11, 12, 10), bool], Tensor[(660, 2), float64]) {
  %252 = fn (%var_6967: Tensor[(660, 2), float64]) -> (Tensor[(6, 3, 5), float64], Tensor[(11, 12, 10), bool], Tensor[(660, 2), float64]) {
    %246 = @func_6180() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(6, 3, 5), float64], Tensor[(90), float64]) */;
    %247 = cast(%var_6967, dtype="float64") /* ty=Tensor[(660, 2), float64] */;
    %248 = reshape(%247, newshape=[11, 12, 10]) /* ty=Tensor[(11, 12, 10), float64] */;
    %249 = @func_2173(%248) /* ty=(Tensor[(11, 12, 10), bool], Tensor[(11, 6, 6), float32], Tensor[(396), float32]) */;
    %250 = %246.1;
    %251 = %249.0;
    (%250, %251, %var_6967)
  };
  %252(%var_6978) /* ty=(Tensor[(6, 3, 5), float64], Tensor[(11, 12, 10), bool], Tensor[(660, 2), float64]) */
}

def @func_10793() -> Tensor[(4, 40), float32] {
  %259 = fn () -> Tensor[(4, 40), float32] {
    %253 = @func_9110() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(4, 40), float64], Tensor[(4, 40), uint32], Tensor[(8, 3, 16), float64], Tensor[(384), float32], Tensor[(756), float64]) */;
    %254 = %253.1;
    %255 = cast(meta[relay.Constant][16] /* ty=Tensor[(4, 40), float64] */, dtype="float32") /* ty=Tensor[(4, 40), float32] */;
    %256 = shape_of(%254, dtype="int32") /* ty=Tensor[(2), int32] */;
    %257 = cast(%254, dtype="float32") /* ty=Tensor[(4, 40), float32] */;
    %258 = dyn.reshape(%255, %256, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    divide(%257, %258) /* ty=Tensor[(4, 40), float32] */
  };
  %259() /* ty=Tensor[(4, 40), float32] */
}

def @func_11637() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(1456), float32]) {
  @func_11635() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(1456), float32]) */
}

def @func_7173(%var_7157: Tensor[(18, 30), float64], %var_7166: Tensor[(792), int8]) -> (Tensor[(2, 8, 2), uint32], Tensor[(5, 12, 9), float64], Tensor[(18, 30), float64], Tensor[(2, 8, 2), float32], Tensor[(792), int8]) {
  %260 = @func_7102() /* ty=(Tensor[(2, 8, 2), uint32], Tensor[(2, 8, 2), float32], Tensor[(4, 364), float32]) */;
  %261 = cast(%var_7157, dtype="float64") /* ty=Tensor[(18, 30), float64] */;
  %262 = reshape(%261, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %263 = @func_4004(%262) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(5, 12, 9), float64], Tensor[(540), float64]) */;
  %264 = cast(%var_7166, dtype="int8") /* ty=Tensor[(792), int8] */;
  %265 = reshape(%264, newshape=[792]) /* ty=Tensor[(792), int8] */;
  %266 = @func_5553(%265) /* ty=(Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), int8], Tensor[(6, 220), float64], Tensor[(1456), float32], Tensor[(792), int8], Tensor[(2, 8, 2), bool], Tensor[(1456), float32], Tensor[(6, 3, 5), float64], Tensor[(45, 2), float64], Tensor[(396), float32], Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), int8]) */;
  %267 = %260.0;
  %268 = %263.1;
  %269 = %266.11;
  (%267, %268, %var_7157, %269, %var_7166)
}

def @func_4904(%var_4902: Tensor[(1456), float32]) -> (Tensor[(2, 8, 2), float64], Tensor[(13, 8, 14), float32], Tensor[(1456), float32], Tensor[(2, 8, 2), int8], Tensor[(2, 8, 2), bool], Tensor[(7, 12, 12), float64], Tensor[(1008), float64], Tensor[(756), float64], Tensor[(540), float64]) {
  @func_4901(%var_4902) /* ty=(Tensor[(2, 8, 2), float64], Tensor[(13, 8, 14), float32], Tensor[(1456), float32], Tensor[(2, 8, 2), int8], Tensor[(2, 8, 2), bool], Tensor[(7, 12, 12), float64], Tensor[(1008), float64], Tensor[(756), float64], Tensor[(540), float64]) */
}

def @func_9965() -> (Tensor[(2, 8, 2), bool],) {
  @func_9963() /* ty=(Tensor[(2, 8, 2), bool],) */
}

def @func_4042() -> Tensor[(2, 8, 2), bool] {
  %270 = @func_3907() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %270.0
}

def @func_3727(%var_3726: Tensor[(11, 12, 6), int8]) -> (Tensor[(11, 12, 6), int8], Tensor[(13, 8, 14), float32], Tensor[(1456), float32]) {
  %278 = fn (%var_3716: Tensor[(11, 12, 6), int8]) -> (Tensor[(11, 12, 6), int8], Tensor[(13, 8, 14), float32], Tensor[(1456), float32]) {
    %271 = cast(meta[relay.Constant][17] /* ty=Tensor[(1, 12, 6), int8] */, dtype="int8") /* ty=Tensor[(1, 12, 6), int8] */;
    %272 = cast(%var_3716, dtype="int8") /* ty=Tensor[(11, 12, 6), int8] */;
    %273 = cast(meta[relay.Constant][18] /* ty=Tensor[(1456), float32] */, dtype="float32") /* ty=Tensor[(1456), float32] */;
    %274 = reshape(%273, newshape=[13, 8, 14]) /* ty=Tensor[(13, 8, 14), float32] */;
    %275 = @func_2537(%274) /* ty=(Tensor[(13, 8, 14), float32], Tensor[(396), float32], Tensor[(660, 2), float64]) */;
    %276 = multiply(%271, %272) /* ty=Tensor[(11, 12, 6), int8] */;
    %277 = %275.0;
    (%276, %277, meta[relay.Constant][18] /* ty=Tensor[(1456), float32] */)
  };
  %278(%var_3726) /* ty=(Tensor[(11, 12, 6), int8], Tensor[(13, 8, 14), float32], Tensor[(1456), float32]) */
}

def @func_11818() -> (Tensor[(2, 8, 2), float32], Tensor[(11, 12, 10), bool], Tensor[(588), float64], Tensor[(660, 2), float64], Tensor[(2, 8, 2), bool]) {
  @func_11816() /* ty=(Tensor[(2, 8, 2), float32], Tensor[(11, 12, 10), bool], Tensor[(588), float64], Tensor[(660, 2), float64], Tensor[(2, 8, 2), bool]) */
}

def @func_6374() -> Tensor[(2, 8, 2), bool] {
  @func_6372() /* ty=Tensor[(2, 8, 2), bool] */
}

def @func_11545() -> (Tensor[(2, 8, 2), float64],) {
  %279 = @func_11089() /* ty=(Tensor[(2, 8, 2), int8], Tensor[(2, 8, 2), bool]) */;
  %280 = %279.1;
  %281 = cast(%280, dtype="float64") /* ty=Tensor[(2, 8, 2), float64] */;
  %282 = cos(%281) /* ty=Tensor[(2, 8, 2), float64] */;
  (%282,)
}

def @func_8576() -> (Tensor[(2, 8, 2), float32], Tensor[(660, 2), float64], Tensor[(1, 1456), float32]) {
  %289 = fn () -> (Tensor[(2, 8, 2), float32], Tensor[(660, 2), float64], Tensor[(1, 1456), float32]) {
    %283 = @func_5125() /* ty=(Tensor[(2, 8, 2), float32],) */;
    %284 = cast(meta[relay.Constant][19] /* ty=Tensor[(1, 1456), float32] */, dtype="float32") /* ty=Tensor[(1, 1456), float32] */;
    %285 = reshape(%284, newshape=[13, 8, 14]) /* ty=Tensor[(13, 8, 14), float32] */;
    %286 = @func_2537(%285) /* ty=(Tensor[(13, 8, 14), float32], Tensor[(396), float32], Tensor[(660, 2), float64]) */;
    %287 = %283.0;
    %288 = %286.2;
    (%287, %288, meta[relay.Constant][19] /* ty=Tensor[(1, 1456), float32] */)
  };
  %289() /* ty=(Tensor[(2, 8, 2), float32], Tensor[(660, 2), float64], Tensor[(1, 1456), float32]) */
}

def @func_8183() -> (Tensor[(2, 8, 2), float32],) {
  %292 = fn () -> (Tensor[(2, 8, 2), float32],) {
    %290 = @func_7102() /* ty=(Tensor[(2, 8, 2), uint32], Tensor[(2, 8, 2), float32], Tensor[(4, 364), float32]) */;
    %291 = %290.1;
    (%291,)
  };
  %292() /* ty=(Tensor[(2, 8, 2), float32],) */
}

def @func_14955(%var_14954: Tensor[(80, 1), float32]) -> (Tensor[(2, 8, 2), bool], float32, float32, Tensor[(2, 8, 5), float32], Tensor[(80, 1), float32]) {
  %303 = fn (%var_14945: Tensor[(80, 1), float32]) -> (Tensor[(2, 8, 2), bool], float32, float32, Tensor[(2, 8, 5), float32], Tensor[(80, 1), float32]) {
    %293 = @func_12120() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
    %294 = cast(-1.12776f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %295 = reshape(%294, newshape=[]) /* ty=float32 */;
    %296 = @func_14221(%295) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(11, 6, 6), float32], float32, Tensor[(130), float32]) */;
    %297 = cast(%var_14945, dtype="float32") /* ty=Tensor[(80, 1), float32] */;
    %298 = reshape(%297, newshape=[20, 4]) /* ty=Tensor[(20, 4), float32] */;
    %299 = @func_12464(%298) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 5), float32], Tensor[(20, 4), float32]) */;
    %300 = %293.2;
    %301 = %296.2;
    %302 = %299.1;
    (%300, %301, -1.12776f /* ty=float32 */, %302, %var_14945)
  };
  %303(%var_14954) /* ty=(Tensor[(2, 8, 2), bool], float32, float32, Tensor[(2, 8, 5), float32], Tensor[(80, 1), float32]) */
}

def @func_3663() -> (Tensor[(2, 8, 2), bool],) {
  @func_3661() /* ty=(Tensor[(2, 8, 2), bool],) */
}

def @func_15001(%var_14999: Tensor[(5, 1, 5), float64]) -> (Tensor[(5, ?, 5), float64], Tensor[(2, 8, 2), float32], Tensor[(4, 40), float32]) {
  @func_14998(%var_14999) /* ty=(Tensor[(5, ?, 5), float64], Tensor[(2, 8, 2), float32], Tensor[(4, 40), float32]) */
}

def @func_13833() -> Tensor[(2, 8, 2), bool] {
  %305 = fn () -> Tensor[(2, 8, 2), bool] {
    %304 = @func_11635() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(1456), float32]) */;
    %304.1
  };
  %305() /* ty=Tensor[(2, 8, 2), bool] */
}

def @func_14867() -> (Tensor[(2, 8, 2), bool],) {
  %306 = @func_11816() /* ty=(Tensor[(2, 8, 2), float32], Tensor[(11, 12, 10), bool], Tensor[(588), float64], Tensor[(660, 2), float64], Tensor[(2, 8, 2), bool]) */;
  %307 = %306.4;
  (%307,)
}

def @func_7719() -> Tensor[(2, 8, 2), float32] {
  %308 = @func_5125() /* ty=(Tensor[(2, 8, 2), float32],) */;
  %308.0
}

def @func_15434() -> Tensor[(2, 8, 2), int8] {
  %309 = fn () -> Tensor[(2, 8, 2), int8] {
    @func_4593() /* ty=Tensor[(2, 8, 2), int8] */
  };
  %309() /* ty=Tensor[(2, 8, 2), int8] */
}

def @func_5799(%var_5794: Tensor[(1320), float64], %var_5795: Tensor[(1456), float32], %var_5796: Tensor[(792), int8], %var_5797: Tensor[(588), float64], %var_5798: Tensor[(3, 30), float64]) -> (Tensor[(2, 8, 2), int8], Tensor[(792), int8], Tensor[(1320), float64], Tensor[(1456), float32], Tensor[(792), int8], Tensor[(1, 588), float64], Tensor[(588), float64], Tensor[(6, 3, 5), float64], Tensor[(3, 30), float64], Tensor[(588), float64]) {
  @func_5792(%var_5794, %var_5795, %var_5796, %var_5797, %var_5798) /* ty=(Tensor[(2, 8, 2), int8], Tensor[(792), int8], Tensor[(1320), float64], Tensor[(1456), float32], Tensor[(792), int8], Tensor[(1, 588), float64], Tensor[(588), float64], Tensor[(6, 3, 5), float64], Tensor[(3, 30), float64], Tensor[(588), float64]) */
}

def @func_3619(%var_3617: Tensor[(6, 3, 5), float64]) -> Tensor[(6, 3, 5), float64] {
  @func_3616(%var_3617) /* ty=Tensor[(6, 3, 5), float64] */
}

def @func_6384() -> Tensor[(2, 8, 2), bool] {
  @func_6382() /* ty=Tensor[(2, 8, 2), bool] */
}

def @func_3767() -> (Tensor[(2, 8, 2), int8], Tensor[(2, 8, 2), float32]) {
  %321 = fn () -> (Tensor[(2, 8, 2), int8], Tensor[(2, 8, 2), float32]) {
    %310 = @func_3493() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
    %311 = %310.1;
    %312 = @func_3493() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
    %313 = %312.1;
    %314 = cast(%313, dtype="int8") /* ty=Tensor[(2, 8, 2), int8] */;
    %315 = shape_of(%311, dtype="int32") /* ty=Tensor[(3), int32] */;
    %316 = cast(%311, dtype="int8") /* ty=Tensor[(2, 8, 2), int8] */;
    %317 = dyn.reshape(%314, %315, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %318 = cast(%313, dtype="float32") /* ty=Tensor[(2, 8, 2), float32] */;
    %319 = subtract(%316, %317) /* ty=Tensor[(2, 8, 2), int8] */;
    %320 = sigmoid(%318) /* ty=Tensor[(2, 8, 2), float32] */;
    (%319, %320)
  };
  %321() /* ty=(Tensor[(2, 8, 2), int8], Tensor[(2, 8, 2), float32]) */
}

def @func_6867() -> (Tensor[(2, 8, 2), bool],) {
  @func_6865() /* ty=(Tensor[(2, 8, 2), bool],) */
}

def @func_11635() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(1456), float32]) {
  %322 = @func_11417() /* ty=Tensor[(2, 8, 2), bool] */;
  %323 = cast(%322, dtype="bool") /* ty=Tensor[(2, 8, 2), bool] */;
  %324 = cast(meta[relay.Constant][20] /* ty=Tensor[(1456), float32] */, dtype="float32") /* ty=Tensor[(1456), float32] */;
  %325 = reshape(%323, newshape=[2, 8, 2]) /* ty=Tensor[(2, 8, 2), bool] */;
  %326 = reshape(%324, newshape=[1456]) /* ty=Tensor[(1456), float32] */;
  %327 = @func_3555(%325, %326) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(660, 2), float64], Tensor[(1456), float32]) */;
  %328 = %327.0;
  (%322, %328, meta[relay.Constant][20] /* ty=Tensor[(1456), float32] */)
}

def @func_5127() -> (Tensor[(2, 8, 2), float32],) {
  @func_5125() /* ty=(Tensor[(2, 8, 2), float32],) */
}

def @func_2173(%var_2096: Tensor[(11, 12, 10), float64]) -> (Tensor[(11, 12, 10), bool], Tensor[(11, 6, 6), float32], Tensor[(396), float32]) {
  %329 = cast(%var_2096, dtype="float64") /* ty=Tensor[(11, 12, 10), float64] */;
  %330 = atan(%329) /* ty=Tensor[(11, 12, 10), float64] */;
  %331 = cast(meta[relay.Constant][21] /* ty=Tensor[(11, 12, 10), float64] */, dtype="bool") /* ty=Tensor[(11, 12, 10), bool] */;
  %332 = shape_of(%330, dtype="int32") /* ty=Tensor[(3), int32] */;
  %333 = cast(%330, dtype="bool") /* ty=Tensor[(11, 12, 10), bool] */;
  %334 = dyn.reshape(%331, %332, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %335 = cast(meta[relay.Constant][22] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
  %336 = reshape(%335, newshape=[11, 6, 6]) /* ty=Tensor[(11, 6, 6), float32] */;
  %337 = less(%333, %334) /* ty=Tensor[(11, 12, 10), bool] */;
  %338 = @func_1929(%336) /* ty=Tensor[(11, 6, 6), float32] */;
  (%337, %338, meta[relay.Constant][22] /* ty=Tensor[(396), float32] */)
}

def @func_11317() -> (Tensor[(2, 8, 2), float32],) {
  @func_11315() /* ty=(Tensor[(2, 8, 2), float32],) */
}

def @func_1185(%var_1182: Tensor[(7, 12, 12), float64], %var_1183: Tensor[(756), float64], %var_1184: Tensor[(540), float64]) -> (Tensor[(7, 12, 12), float64], Tensor[(540), float64], Tensor[(756), float64], Tensor[(540), float64], Tensor[(5, 12, 9), float64]) {
  @func_1180(%var_1182, %var_1183, %var_1184) /* ty=(Tensor[(7, 12, 12), float64], Tensor[(540), float64], Tensor[(756), float64], Tensor[(540), float64], Tensor[(5, 12, 9), float64]) */
}

def @func_11816() -> (Tensor[(2, 8, 2), float32], Tensor[(11, 12, 10), bool], Tensor[(588), float64], Tensor[(660, 2), float64], Tensor[(2, 8, 2), bool]) {
  %339 = @func_9124() /* ty=(Tensor[(2, 8, 2), float32],) */;
  %340 = cast(meta[relay.Constant][23] /* ty=Tensor[(588), float64] */, dtype="float64") /* ty=Tensor[(588), float64] */;
  %341 = cast(meta[relay.Constant][24] /* ty=Tensor[(660, 2), float64] */, dtype="float64") /* ty=Tensor[(660, 2), float64] */;
  %342 = reshape(%340, newshape=[14, 6, 7]) /* ty=Tensor[(14, 6, 7), float64] */;
  %343 = reshape(%341, newshape=[660, 2]) /* ty=Tensor[(660, 2), float64] */;
  %344 = @func_4025(%342, %343) /* ty=(Tensor[(14, 6, 7), float64], Tensor[(11, 12, 10), bool], Tensor[(660, 2), float64]) */;
  %345 = %339.0;
  %346 = %344.1;
  %347 = @func_7539() /* ty=Tensor[(2, 8, 2), bool] */;
  (%345, %346, meta[relay.Constant][23] /* ty=Tensor[(588), float64] */, meta[relay.Constant][24] /* ty=Tensor[(660, 2), float64] */, %347)
}

def @func_9592() -> (Tensor[(540), float64],) {
  %348 = @func_9020() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(90), float32], Tensor[(2, 8, 2), bool], Tensor[(384), float32], Tensor[(756), float64], Tensor[(540), float64], Tensor[(540), float64], Tensor[(2, 5, 13), float64], float32, Tensor[(130), float32]) */;
  %349 = %348.6;
  (%349,)
}

def @func_841(%var_840: Tensor[(5, 12, 9), float64]) -> Tensor[(5, 12, 9), float64] {
  %351 = fn (%var_833: Tensor[(5, 12, 9), float64]) -> Tensor[(5, 12, 9), float64] {
    %350 = cast(%var_833, dtype="float64") /* ty=Tensor[(5, 12, 9), float64] */;
    asin(%350) /* ty=Tensor[(5, 12, 9), float64] */
  };
  %351(%var_840) /* ty=Tensor[(5, 12, 9), float64] */
}

def @func_4006(%var_4005: Tensor[(540), float64]) -> (Tensor[(2, 8, 2), bool], Tensor[(5, 12, 9), float64], Tensor[(540), float64]) {
  %357 = fn (%var_4001: Tensor[(540), float64]) -> (Tensor[(2, 8, 2), bool], Tensor[(5, 12, 9), float64], Tensor[(540), float64]) {
    %352 = @func_3493() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
    %353 = cast(%var_4001, dtype="float64") /* ty=Tensor[(540), float64] */;
    %354 = reshape(%353, newshape=[5, 12, 9]) /* ty=Tensor[(5, 12, 9), float64] */;
    %355 = %352.1;
    %356 = @func_839(%354) /* ty=Tensor[(5, 12, 9), float64] */;
    (%355, %356, %var_4001)
  };
  %357(%var_4005) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(5, 12, 9), float64], Tensor[(540), float64]) */
}

def @func_5856(%var_5854: Tensor[(3, 6, 14), int64], %var_5855: Tensor[(3, 6, 14), int64]) -> (Tensor[(3, 6, 14), bool], Tensor[(2, 8, 2), bool], Tensor[(384), float32], Tensor[(756), float64], Tensor[(2, 8, 2), bool], Tensor[(3, 6, 14), float32]) {
  %373 = fn (%var_5815: Tensor[(3, 6, 14), int64], %var_5816: Tensor[(3, 6, 14), int64]) -> (Tensor[(3, 6, 14), bool], Tensor[(2, 8, 2), bool], Tensor[(384), float32], Tensor[(756), float64], Tensor[(2, 8, 2), bool], Tensor[(3, 6, 14), float32]) {
    %358 = cast(%var_5816, dtype="bool") /* ty=Tensor[(3, 6, 14), bool] */;
    %359 = shape_of(%var_5815, dtype="int32") /* ty=Tensor[(3), int32] */;
    %360 = cast(%var_5815, dtype="bool") /* ty=Tensor[(3, 6, 14), bool] */;
    %361 = dyn.reshape(%358, %359, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %362 = cast(meta[relay.Constant][25] /* ty=Tensor[(384), float32] */, dtype="float32") /* ty=Tensor[(384), float32] */;
    %363 = cast(meta[relay.Constant][26] /* ty=Tensor[(756), float64] */, dtype="float64") /* ty=Tensor[(756), float64] */;
    %364 = reshape(%362, newshape=[1, 384]) /* ty=Tensor[(1, 384), float32] */;
    %365 = reshape(%363, newshape=[756]) /* ty=Tensor[(756), float64] */;
    %366 = @func_3870(%364, %365) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(8, 3, 16), float64], Tensor[(1, 384), float32], Tensor[(756), float64]) */;
    %367 = @func_3907() /* ty=(Tensor[(2, 8, 2), bool],) */;
    %368 = cast(%var_5815, dtype="float32") /* ty=Tensor[(3, 6, 14), float32] */;
    %369 = less(%360, %361) /* ty=Tensor[(3, 6, 14), bool] */;
    %370 = %366.0;
    %371 = %367.0;
    %372 = log2(%368) /* ty=Tensor[(3, 6, 14), float32] */;
    (%369, %370, meta[relay.Constant][25] /* ty=Tensor[(384), float32] */, meta[relay.Constant][26] /* ty=Tensor[(756), float64] */, %371, %372)
  };
  %373(%var_5854, %var_5855) /* ty=(Tensor[(3, 6, 14), bool], Tensor[(2, 8, 2), bool], Tensor[(384), float32], Tensor[(756), float64], Tensor[(2, 8, 2), bool], Tensor[(3, 6, 14), float32]) */
}

def @func_15647(%var_15610: Tensor[(1320), float64], %var_15612: Tensor[(588), float64]) -> (Tensor[(2, 8, 2), bool], Tensor[(1320), float64], Tensor[(1456), float32], Tensor[(588), float64], Tensor[(18, 42), float64], Tensor[(9, 60), float32], Tensor[(2, 8, 2), uint32], Tensor[(2, 8, 2), bool]) {
  %374 = @func_13145() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %375 = cast(%var_15610, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %376 = cast(meta[relay.Constant][27] /* ty=Tensor[(1456), float32] */, dtype="float32") /* ty=Tensor[(1456), float32] */;
  %377 = cast(%var_15612, dtype="float64") /* ty=Tensor[(588), float64] */;
  %378 = cast(meta[relay.Constant][28] /* ty=Tensor[(18, 42), float64] */, dtype="float64") /* ty=Tensor[(18, 42), float64] */;
  %379 = reshape(%375, newshape=[1320]) /* ty=Tensor[(1320), float64] */;
  %380 = reshape(%376, newshape=[1456]) /* ty=Tensor[(1456), float32] */;
  %381 = reshape(%377, newshape=[588]) /* ty=Tensor[(588), float64] */;
  %382 = reshape(%378, newshape=[756]) /* ty=Tensor[(756), float64] */;
  %383 = @func_6129(%379, %380, %381, %382) /* ty=(Tensor[(2, 8, 2), uint32], Tensor[(2, 8, 2), int8], Tensor[(1320), float64], Tensor[(1456), float32], Tensor[(792), int8], Tensor[(5, 4, 8), int16], Tensor[(160), int16], Tensor[(792), int8], Tensor[(588), float64], Tensor[(5, 12, 9), float64], Tensor[(1008), float64], Tensor[(756), float64], Tensor[(9, 60), float64]) */;
  %384 = %383.12;
  %385 = cast(%384, dtype="float32") /* ty=Tensor[(9, 60), float32] */;
  %386 = %374.1;
  %387 = acos(%385) /* ty=Tensor[(9, 60), float32] */;
  %388 = @func_5156() /* ty=Tensor[(2, 8, 2), uint32] */;
  %389 = @func_12855() /* ty=Tensor[(2, 8, 2), bool] */;
  (%386, %var_15610, meta[relay.Constant][27] /* ty=Tensor[(1456), float32] */, %var_15612, meta[relay.Constant][28] /* ty=Tensor[(18, 42), float64] */, %387, %388, %389)
}

def @func_6129(%var_6082: Tensor[(1320), float64], %var_6083: Tensor[(1456), float32], %var_6096: Tensor[(588), float64], %var_6121: Tensor[(756), float64]) -> (Tensor[(2, 8, 2), uint32], Tensor[(2, 8, 2), int8], Tensor[(1320), float64], Tensor[(1456), float32], Tensor[(792), int8], Tensor[(5, 4, 8), int16], Tensor[(160), int16], Tensor[(792), int8], Tensor[(588), float64], Tensor[(5, 12, 9), float64], Tensor[(1008), float64], Tensor[(756), float64], Tensor[(9, 60), float64]) {
  %390 = cast(%var_6082, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %391 = cast(%var_6083, dtype="float32") /* ty=Tensor[(1456), float32] */;
  %392 = cast(meta[relay.Constant][29] /* ty=Tensor[(792), int8] */, dtype="int8") /* ty=Tensor[(792), int8] */;
  %393 = reshape(%390, newshape=[660, 2]) /* ty=Tensor[(660, 2), float64] */;
  %394 = reshape(%391, newshape=[8, 182]) /* ty=Tensor[(8, 182), float32] */;
  %395 = reshape(%392, newshape=[792]) /* ty=Tensor[(792), int8] */;
  %396 = @func_5230(%393, %394, %395) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(660, 2), float64], Tensor[(2, 8, 2), bool], Tensor[(8, 182), uint16], Tensor[(2, 8, 2), int8], Tensor[(1456), float32], Tensor[(792), int8]) */;
  %397 = cast(meta[relay.Constant][30] /* ty=Tensor[(160), int16] */, dtype="int16") /* ty=Tensor[(160), int16] */;
  %398 = reshape(%397, newshape=[4, 40]) /* ty=Tensor[(4, 40), int16] */;
  %399 = @func_5090(%398) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(5, 4, 8), int16], Tensor[(4, 40), int16], Tensor[(540), float64]) */;
  %400 = cast(%var_6096, dtype="float64") /* ty=Tensor[(588), float64] */;
  %401 = cast(%var_6082, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %402 = reshape(%400, newshape=[1, 588]) /* ty=Tensor[(1, 588), float64] */;
  %403 = reshape(%401, newshape=[1320]) /* ty=Tensor[(1320), float64] */;
  %404 = @func_5358(%402, %403) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(5, 12, 9), float64], Tensor[(540), float64], Tensor[(11, 12, 6), int32], Tensor[(792), int8], Tensor[(11, 12, 10), bool], Tensor[(1, 588), float64], Tensor[(1320), float64]) */;
  %405 = cast(meta[relay.Constant][31] /* ty=Tensor[(1008), float64] */, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %406 = cast(%var_6121, dtype="float64") /* ty=Tensor[(756), float64] */;
  %407 = cast(meta[relay.Constant][32] /* ty=Tensor[(9, 60), float64] */, dtype="float64") /* ty=Tensor[(9, 60), float64] */;
  %408 = reshape(%405, newshape=[7, 12, 12]) /* ty=Tensor[(7, 12, 12), float64] */;
  %409 = reshape(%406, newshape=[756]) /* ty=Tensor[(756), float64] */;
  %410 = reshape(%407, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %411 = @func_1180(%408, %409, %410) /* ty=(Tensor[(7, 12, 12), float64], Tensor[(540), float64], Tensor[(756), float64], Tensor[(540), float64], Tensor[(5, 12, 9), float64]) */;
  %412 = @func_5156() /* ty=Tensor[(2, 8, 2), uint32] */;
  %413 = %396.4;
  %414 = %399.1;
  %415 = %404.4;
  %416 = %411.4;
  (%412, %413, %var_6082, %var_6083, meta[relay.Constant][29] /* ty=Tensor[(792), int8] */, %414, meta[relay.Constant][30] /* ty=Tensor[(160), int16] */, %415, %var_6096, %416, meta[relay.Constant][31] /* ty=Tensor[(1008), float64] */, %var_6121, meta[relay.Constant][32] /* ty=Tensor[(9, 60), float64] */)
}

def @func_9873(%var_9869: Tensor[(756), float64], %var_9870: Tensor[(160), int16], %var_9871: Tensor[(36, 22), int8], %var_9872: Tensor[(1, 1456), float32]) -> (Tensor[(2, 8, 2), bool], Tensor[(9, 6, 13), float64], Tensor[(702), float64], Tensor[(540), float64], Tensor[(504, 2), float64], Tensor[(756), float64], Tensor[(540), float64], Tensor[(2, 8, 2), bool], Tensor[(11, 6, 6), float32], Tensor[(6, 66), float32], Tensor[(2, 8, 2), bool], Tensor[(5, 4, 8), int16], Tensor[(160), int16], Tensor[(2, 8, 2), int8], Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(6, 7, 15), float32], Tensor[(630), float32], Tensor[(2, 8, 2), float32], Tensor[(11, 12, 6), int32], Tensor[(36, 22), int8], Tensor[(756), float64], Tensor[(1, 1456), float32]) {
  @func_9867(%var_9869, %var_9870, %var_9871, %var_9872) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(9, 6, 13), float64], Tensor[(702), float64], Tensor[(540), float64], Tensor[(504, 2), float64], Tensor[(756), float64], Tensor[(540), float64], Tensor[(2, 8, 2), bool], Tensor[(11, 6, 6), float32], Tensor[(6, 66), float32], Tensor[(2, 8, 2), bool], Tensor[(5, 4, 8), int16], Tensor[(160), int16], Tensor[(2, 8, 2), int8], Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(6, 7, 15), float32], Tensor[(630), float32], Tensor[(2, 8, 2), float32], Tensor[(11, 12, 6), int32], Tensor[(36, 22), int8], Tensor[(756), float64], Tensor[(1, 1456), float32]) */
}

def @main(%var_16195: bool, %var_16196: Tensor[(1, 7, 13), bool]) -> (Tensor[(?, 7, 13), int32], Tensor[(?, 7, 13), bool]) {
  %417 = cast(%var_16195, dtype="bool") /* ty=bool */;
  %418 = cast(%var_16196, dtype="bool") /* ty=Tensor[(1, 7, 13), bool] */;
  %419 = logical_and(%417, %418) /* ty=Tensor[(1, 7, 13), bool] */;
  %420 = cast(%419, dtype="int32") /* ty=Tensor[(1, 7, 13), int32] */;
  %421 = shape_of(%var_16196, dtype="int32") /* ty=Tensor[(3), int32] */;
  %422 = cast(%var_16196, dtype="int32") /* ty=Tensor[(1, 7, 13), int32] */;
  %423 = dyn.reshape(%420, %421, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %424 = cast(%var_16196, dtype="bool") /* ty=Tensor[(1, 7, 13), bool] */;
  %425 = cast(%var_16195, dtype="bool") /* ty=bool */;
  %426 = less_equal(%424, %425) /* ty=Tensor[(1, 7, 13), bool] */;
  %427 = cast(%var_16196, dtype="bool") /* ty=Tensor[(1, 7, 13), bool] */;
  %428 = shape_of(%426, dtype="int32") /* ty=Tensor[(3), int32] */;
  %429 = cast(%426, dtype="bool") /* ty=Tensor[(1, 7, 13), bool] */;
  %430 = dyn.reshape(%427, %428, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %431 = bitwise_xor(%422, %423) /* ty=Tensor[(?, 7, 13), int32] */;
  %432 = greater(%429, %430) /* ty=Tensor[(?, 7, 13), bool] */;
  (%431, %432)
}

def @func_7357(%var_7356: Tensor[(540), float64]) -> (Tensor[(2, 8, 2), bool], Tensor[(11, 12, 6), int32], Tensor[(588), float64], Tensor[(1320), float64], Tensor[(660, 2), float64], Tensor[(1456), float32], Tensor[(5, 12, 9), float64], Tensor[(540), float64], Tensor[(14, 6, 7), float64], Tensor[(2, 8, 2), float32]) {
  %457 = fn (%var_7332: Tensor[(540), float64]) -> (Tensor[(2, 8, 2), bool], Tensor[(11, 12, 6), int32], Tensor[(588), float64], Tensor[(1320), float64], Tensor[(660, 2), float64], Tensor[(1456), float32], Tensor[(5, 12, 9), float64], Tensor[(540), float64], Tensor[(14, 6, 7), float64], Tensor[(2, 8, 2), float32]) {
    %433 = @func_3493() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
    %434 = cast(meta[relay.Constant][33] /* ty=Tensor[(588), float64] */, dtype="float64") /* ty=Tensor[(588), float64] */;
    %435 = cast(meta[relay.Constant][34] /* ty=Tensor[(1320), float64] */, dtype="float64") /* ty=Tensor[(1320), float64] */;
    %436 = reshape(%434, newshape=[1, 588]) /* ty=Tensor[(1, 588), float64] */;
    %437 = reshape(%435, newshape=[1320]) /* ty=Tensor[(1320), float64] */;
    %438 = @func_5358(%436, %437) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(5, 12, 9), float64], Tensor[(540), float64], Tensor[(11, 12, 6), int32], Tensor[(792), int8], Tensor[(11, 12, 10), bool], Tensor[(1, 588), float64], Tensor[(1320), float64]) */;
    %439 = %433.1;
    %440 = cast(%439, dtype="bool") /* ty=Tensor[(2, 8, 2), bool] */;
    %441 = cast(meta[relay.Constant][35] /* ty=Tensor[(1456), float32] */, dtype="float32") /* ty=Tensor[(1456), float32] */;
    %442 = reshape(%440, newshape=[2, 8, 2]) /* ty=Tensor[(2, 8, 2), bool] */;
    %443 = reshape(%441, newshape=[1456]) /* ty=Tensor[(1456), float32] */;
    %444 = @func_3555(%442, %443) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(660, 2), float64], Tensor[(1456), float32]) */;
    %445 = cast(%var_7332, dtype="float64") /* ty=Tensor[(540), float64] */;
    %446 = reshape(%445, newshape=[5, 12, 9]) /* ty=Tensor[(5, 12, 9), float64] */;
    %447 = cast(meta[relay.Constant][33] /* ty=Tensor[(588), float64] */, dtype="float64") /* ty=Tensor[(588), float64] */;
    %448 = cast(meta[relay.Constant][34] /* ty=Tensor[(1320), float64] */, dtype="float64") /* ty=Tensor[(1320), float64] */;
    %449 = reshape(%447, newshape=[14, 6, 7]) /* ty=Tensor[(14, 6, 7), float64] */;
    %450 = reshape(%448, newshape=[660, 2]) /* ty=Tensor[(660, 2), float64] */;
    %451 = @func_4025(%449, %450) /* ty=(Tensor[(14, 6, 7), float64], Tensor[(11, 12, 10), bool], Tensor[(660, 2), float64]) */;
    %452 = %438.3;
    %453 = %444.1;
    %454 = @func_839(%446) /* ty=Tensor[(5, 12, 9), float64] */;
    %455 = %451.0;
    %456 = @func_5660() /* ty=Tensor[(2, 8, 2), float32] */;
    (%439, %452, meta[relay.Constant][33] /* ty=Tensor[(588), float64] */, meta[relay.Constant][34] /* ty=Tensor[(1320), float64] */, %453, meta[relay.Constant][35] /* ty=Tensor[(1456), float32] */, %454, %var_7332, %455, %456)
  };
  %457(%var_7356) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(11, 12, 6), int32], Tensor[(588), float64], Tensor[(1320), float64], Tensor[(660, 2), float64], Tensor[(1456), float32], Tensor[(5, 12, 9), float64], Tensor[(540), float64], Tensor[(14, 6, 7), float64], Tensor[(2, 8, 2), float32]) */
}

def @func_10826(%var_10825: Tensor[(16, 14, 13), int8]) -> (Tensor[(16, 14, 13), bool],) {
  %464 = fn (%var_10810: Tensor[(16, 14, 13), int8]) -> (Tensor[(16, 14, 13), bool],) {
    %458 = cast(meta[relay.Constant][36] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %459 = cast(%var_10810, dtype="int8") /* ty=Tensor[(16, 14, 13), int8] */;
    %460 = logical_xor(%458, %459) /* ty=Tensor[(16, 14, 13), int8] */;
    %461 = cast(%460, dtype="bool") /* ty=Tensor[(16, 14, 13), bool] */;
    %462 = cast(meta[relay.Constant][36] /* ty=int8 */, dtype="bool") /* ty=bool */;
    %463 = not_equal(%461, %462) /* ty=Tensor[(16, 14, 13), bool] */;
    (%463,)
  };
  %464(%var_10825) /* ty=(Tensor[(16, 14, 13), bool],) */
}

def @func_5249() -> Tensor[(2, 8, 2), bool] {
  @func_5247() /* ty=Tensor[(2, 8, 2), bool] */
}

def @func_6674(%var_6671: Tensor[(1320), float64], %var_6672: Tensor[(588), float64], %var_6673: Tensor[(90), float64]) -> (Tensor[(2, 8, 2), int8], Tensor[(2, 8, 2), bool], Tensor[(588), float64], Tensor[(1320), float64], Tensor[(1456), float32], Tensor[(792), int8], Tensor[(588), float64], Tensor[(90), float64], Tensor[(2, 8, 2), bool]) {
  %482 = fn (%var_6621: Tensor[(1320), float64], %var_6624: Tensor[(588), float64], %var_6625: Tensor[(90), float64]) -> (Tensor[(2, 8, 2), int8], Tensor[(2, 8, 2), bool], Tensor[(588), float64], Tensor[(1320), float64], Tensor[(1456), float32], Tensor[(792), int8], Tensor[(588), float64], Tensor[(90), float64], Tensor[(2, 8, 2), bool]) {
    %465 = @func_5603() /* ty=(Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), int8]) */;
    %466 = cast(%var_6621, dtype="float64") /* ty=Tensor[(1320), float64] */;
    %467 = cast(meta[relay.Constant][37] /* ty=Tensor[(1456), float32] */, dtype="float32") /* ty=Tensor[(1456), float32] */;
    %468 = cast(meta[relay.Constant][38] /* ty=Tensor[(792), int8] */, dtype="int8") /* ty=Tensor[(792), int8] */;
    %469 = cast(%var_6624, dtype="float64") /* ty=Tensor[(588), float64] */;
    %470 = cast(%var_6625, dtype="float64") /* ty=Tensor[(90), float64] */;
    %471 = reshape(%466, newshape=[1320]) /* ty=Tensor[(1320), float64] */;
    %472 = reshape(%467, newshape=[1456]) /* ty=Tensor[(1456), float32] */;
    %473 = reshape(%468, newshape=[792]) /* ty=Tensor[(792), int8] */;
    %474 = reshape(%469, newshape=[588]) /* ty=Tensor[(588), float64] */;
    %475 = reshape(%470, newshape=[3, 30]) /* ty=Tensor[(3, 30), float64] */;
    %476 = @func_5792(%471, %472, %473, %474, %475) /* ty=(Tensor[(2, 8, 2), int8], Tensor[(792), int8], Tensor[(1320), float64], Tensor[(1456), float32], Tensor[(792), int8], Tensor[(1, 588), float64], Tensor[(588), float64], Tensor[(6, 3, 5), float64], Tensor[(3, 30), float64], Tensor[(588), float64]) */;
    %477 = @func_6180() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(6, 3, 5), float64], Tensor[(90), float64]) */;
    %478 = %465.1;
    %479 = @func_4086() /* ty=Tensor[(2, 8, 2), bool] */;
    %480 = %476.9;
    %481 = %477.0;
    (%478, %479, %480, %var_6621, meta[relay.Constant][37] /* ty=Tensor[(1456), float32] */, meta[relay.Constant][38] /* ty=Tensor[(792), int8] */, %var_6624, %var_6625, %481)
  };
  %482(%var_6671, %var_6672, %var_6673) /* ty=(Tensor[(2, 8, 2), int8], Tensor[(2, 8, 2), bool], Tensor[(588), float64], Tensor[(1320), float64], Tensor[(1456), float32], Tensor[(792), int8], Tensor[(588), float64], Tensor[(90), float64], Tensor[(2, 8, 2), bool]) */
}

def @func_5555(%var_5554: Tensor[(792), int8]) -> (Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), int8], Tensor[(6, 220), float64], Tensor[(1456), float32], Tensor[(792), int8], Tensor[(2, 8, 2), bool], Tensor[(1456), float32], Tensor[(6, 3, 5), float64], Tensor[(45, 2), float64], Tensor[(396), float32], Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), int8]) {
  %511 = fn (%var_5508: Tensor[(792), int8]) -> (Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), int8], Tensor[(6, 220), float64], Tensor[(1456), float32], Tensor[(792), int8], Tensor[(2, 8, 2), bool], Tensor[(1456), float32], Tensor[(6, 3, 5), float64], Tensor[(45, 2), float64], Tensor[(396), float32], Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), int8]) {
    %483 = cast(meta[relay.Constant][39] /* ty=Tensor[(6, 220), float64] */, dtype="float64") /* ty=Tensor[(6, 220), float64] */;
    %484 = cast(meta[relay.Constant][40] /* ty=Tensor[(1456), float32] */, dtype="float32") /* ty=Tensor[(1456), float32] */;
    %485 = cast(%var_5508, dtype="int8") /* ty=Tensor[(792), int8] */;
    %486 = reshape(%483, newshape=[660, 2]) /* ty=Tensor[(660, 2), float64] */;
    %487 = reshape(%484, newshape=[8, 182]) /* ty=Tensor[(8, 182), float32] */;
    %488 = reshape(%485, newshape=[792]) /* ty=Tensor[(792), int8] */;
    %489 = @func_5230(%486, %487, %488) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(660, 2), float64], Tensor[(2, 8, 2), bool], Tensor[(8, 182), uint16], Tensor[(2, 8, 2), int8], Tensor[(1456), float32], Tensor[(792), int8]) */;
    %490 = @func_4222() /* ty=(Tensor[(2, 8, 2), bool],) */;
    %491 = cast(meta[relay.Constant][40] /* ty=Tensor[(1456), float32] */, dtype="float32") /* ty=Tensor[(1456), float32] */;
    %492 = reshape(%491, newshape=[1456]) /* ty=Tensor[(1456), float32] */;
    %493 = @func_4901(%492) /* ty=(Tensor[(2, 8, 2), float64], Tensor[(13, 8, 14), float32], Tensor[(1456), float32], Tensor[(2, 8, 2), int8], Tensor[(2, 8, 2), bool], Tensor[(7, 12, 12), float64], Tensor[(1008), float64], Tensor[(756), float64], Tensor[(540), float64]) */;
    %494 = cast(meta[relay.Constant][41] /* ty=Tensor[(45, 2), float64] */, dtype="float64") /* ty=Tensor[(45, 2), float64] */;
    %495 = reshape(%494, newshape=[6, 3, 5]) /* ty=Tensor[(6, 3, 5), float64] */;
    %496 = %493.2;
    %497 = cast(%496, dtype="float32") /* ty=Tensor[(1456), float32] */;
    %498 = reshape(%497, newshape=[13, 8, 14]) /* ty=Tensor[(13, 8, 14), float32] */;
    %499 = @func_2537(%498) /* ty=(Tensor[(13, 8, 14), float32], Tensor[(396), float32], Tensor[(660, 2), float64]) */;
    %500 = cast(meta[relay.Constant][40] /* ty=Tensor[(1456), float32] */, dtype="float32") /* ty=Tensor[(1456), float32] */;
    %501 = reshape(%500, newshape=[1456]) /* ty=Tensor[(1456), float32] */;
    %502 = @func_4901(%501) /* ty=(Tensor[(2, 8, 2), float64], Tensor[(13, 8, 14), float32], Tensor[(1456), float32], Tensor[(2, 8, 2), int8], Tensor[(2, 8, 2), bool], Tensor[(7, 12, 12), float64], Tensor[(1008), float64], Tensor[(756), float64], Tensor[(540), float64]) */;
    %503 = @func_4283() /* ty=Tensor[(2, 8, 2), float32] */;
    %504 = %489.4;
    %505 = %490.0;
    %506 = @func_3616(%495) /* ty=Tensor[(6, 3, 5), float64] */;
    %507 = %499.1;
    %508 = @func_4042() /* ty=Tensor[(2, 8, 2), bool] */;
    %509 = @func_4283() /* ty=Tensor[(2, 8, 2), float32] */;
    %510 = %502.3;
    (%503, %504, meta[relay.Constant][39] /* ty=Tensor[(6, 220), float64] */, meta[relay.Constant][40] /* ty=Tensor[(1456), float32] */, %var_5508, %505, %496, %506, meta[relay.Constant][41] /* ty=Tensor[(45, 2), float64] */, %507, %508, %509, %510)
  };
  %511(%var_5554) /* ty=(Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), int8], Tensor[(6, 220), float64], Tensor[(1456), float32], Tensor[(792), int8], Tensor[(2, 8, 2), bool], Tensor[(1456), float32], Tensor[(6, 3, 5), float64], Tensor[(45, 2), float64], Tensor[(396), float32], Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), int8]) */
}

def @func_11089() -> (Tensor[(2, 8, 2), int8], Tensor[(2, 8, 2), bool]) {
  %512 = @func_3766() /* ty=(Tensor[(2, 8, 2), int8], Tensor[(2, 8, 2), float32]) */;
  %513 = %512.0;
  %514 = @func_7733() /* ty=Tensor[(2, 8, 2), bool] */;
  (%513, %514)
}

def @func_7222() -> (Tensor[(2, 8, 2), float64],) {
  %519 = fn () -> (Tensor[(2, 8, 2), float64],) {
    %515 = @func_6865() /* ty=(Tensor[(2, 8, 2), bool],) */;
    %516 = %515.0;
    %517 = cast(%516, dtype="float64") /* ty=Tensor[(2, 8, 2), float64] */;
    %518 = acosh(%517) /* ty=Tensor[(2, 8, 2), float64] */;
    (%518,)
  };
  %519() /* ty=(Tensor[(2, 8, 2), float64],) */
}

def @func_14755() -> Tensor[(2, 8, 2), bool] {
  %521 = fn () -> Tensor[(2, 8, 2), bool] {
    %520 = @func_8789() /* ty=(Tensor[(4, 364), float32], Tensor[(2, 8, 2), bool]) */;
    %520.1
  };
  %521() /* ty=Tensor[(2, 8, 2), bool] */
}

def @func_12994() -> Tensor[(2, 8, 2), float32] {
  @func_12992() /* ty=Tensor[(2, 8, 2), float32] */
}

def @func_14807() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(792), int8], Tensor[(2, 8, 2), bool]) {
  %522 = cast(meta[relay.Constant][42] /* ty=Tensor[(792), int8] */, dtype="int8") /* ty=Tensor[(792), int8] */;
  %523 = reshape(%522, newshape=[792]) /* ty=Tensor[(792), int8] */;
  %524 = @func_3978(%523) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(11, 12, 6), int32]) */;
  %525 = @func_3661() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %526 = @func_5247() /* ty=Tensor[(2, 8, 2), bool] */;
  %527 = @func_5247() /* ty=Tensor[(2, 8, 2), bool] */;
  %528 = %524.0;
  %529 = %525.0;
  (%526, %527, %528, meta[relay.Constant][42] /* ty=Tensor[(792), int8] */, %529)
}

def @func_15232() -> (Tensor[(2, 8, 2), bool],) {
  %530 = @func_6805() /* ty=Tensor[(2, 8, 2), bool] */;
  (%530,)
}

def @func_3907() -> (Tensor[(2, 8, 2), bool],) {
  %531 = @func_3701() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %532 = %531.0;
  (%532,)
}

def @func_8672() -> (Tensor[(2, 8, 2), bool],) {
  %533 = @func_7267() /* ty=Tensor[(2, 8, 2), bool] */;
  (%533,)
}

def @func_8789() -> (Tensor[(4, 364), float32], Tensor[(2, 8, 2), bool]) {
  %534 = @func_7102() /* ty=(Tensor[(2, 8, 2), uint32], Tensor[(2, 8, 2), float32], Tensor[(4, 364), float32]) */;
  %535 = @func_6865() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %536 = %534.2;
  %537 = %535.0;
  (%536, %537)
}

def @func_11687() -> (Tensor[(2, 8, 2), bool],) {
  %540 = fn () -> (Tensor[(2, 8, 2), bool],) {
    %538 = @func_11089() /* ty=(Tensor[(2, 8, 2), int8], Tensor[(2, 8, 2), bool]) */;
    %539 = %538.1;
    (%539,)
  };
  %540() /* ty=(Tensor[(2, 8, 2), bool],) */
}

def @func_15110() -> (Tensor[(2, 8, 2), bool], Tensor[(384), float32]) {
  @func_15108() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(384), float32]) */
}

def @func_10341() -> Tensor[(2, 8, 2), bool] {
  %542 = fn () -> Tensor[(2, 8, 2), bool] {
    %541 = @func_6596() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
    %541.1
  };
  %542() /* ty=Tensor[(2, 8, 2), bool] */
}

def @func_8232() -> Tensor[(2, 8, 2), bool] {
  @func_8230() /* ty=Tensor[(2, 8, 2), bool] */
}

def @func_14182() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), int16]) {
  %543 = @func_7267() /* ty=Tensor[(2, 8, 2), bool] */;
  %544 = cast(%543, dtype="bool") /* ty=Tensor[(2, 8, 2), bool] */;
  %545 = reshape(%544, newshape=[2, 8, 2]) /* ty=Tensor[(2, 8, 2), bool] */;
  %546 = @func_6568(%545) /* ty=(Tensor[(2, 8, 2), int16], Tensor[(2, 8, 2), bool]) */;
  %547 = %546.0;
  (%543, %547)
}

def @func_10760(%var_10758: Tensor[(1320), float64]) -> (Tensor[(8, 7, 9), float64], Tensor[(540), float64], Tensor[(294, 2), float64], Tensor[(1320), float64], Tensor[(2, 8, 2), bool], Tensor[(130), float32]) {
  @func_10757(%var_10758) /* ty=(Tensor[(8, 7, 9), float64], Tensor[(540), float64], Tensor[(294, 2), float64], Tensor[(1320), float64], Tensor[(2, 8, 2), bool], Tensor[(130), float32]) */
}

def @func_3701() -> (Tensor[(2, 8, 2), bool],) {
  %548 = @func_3493() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %549 = %548.0;
  (%549,)
}

def @func_7734() -> Tensor[(2, 8, 2), bool] {
  %550 = fn () -> Tensor[(2, 8, 2), bool] {
    @func_6382() /* ty=Tensor[(2, 8, 2), bool] */
  };
  %550() /* ty=Tensor[(2, 8, 2), bool] */
}

def @func_7269() -> Tensor[(2, 8, 2), bool] {
  @func_7267() /* ty=Tensor[(2, 8, 2), bool] */
}

def @func_8732() -> (Tensor[(4, 364), float32], Tensor[(2, 8, 2), bool]) {
  @func_8730() /* ty=(Tensor[(4, 364), float32], Tensor[(2, 8, 2), bool]) */
}

def @func_10086() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) {
  %551 = @func_3493() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %552 = %551.1;
  %553 = @func_6382() /* ty=Tensor[(2, 8, 2), bool] */;
  (%552, %553)
}

def @func_7846(%var_7844: Tensor[(26, 5), float32]) -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(588), float64], Tensor[(1320), float64], Tensor[(2, 5, 13), float64], float32, Tensor[(26, 5), float32], Tensor[(11, 12, 10), bool], Tensor[(2, 8, 2), bool]) {
  @func_7843(%var_7844) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(588), float64], Tensor[(1320), float64], Tensor[(2, 5, 13), float64], float32, Tensor[(26, 5), float32], Tensor[(11, 12, 10), bool], Tensor[(2, 8, 2), bool]) */
}

def @func_10438(%var_10386: Tensor[(16, 10, 9), uint32], %var_10387: Tensor[(16, 10, 9), uint32], %var_10393: Tensor[(756), float64], %var_10424: Tensor[(70), float32]) -> (Tensor[(16, 10, 9), bool], Tensor[(5, 12, 9), float64], Tensor[(756), float64], Tensor[(540), float64], Tensor[(2, 8, 2), bool], Tensor[(7, 10, 1), float64], Tensor[(70), float32]) {
  %554 = cast(%var_10387, dtype="bool") /* ty=Tensor[(16, 10, 9), bool] */;
  %555 = shape_of(%var_10386, dtype="int32") /* ty=Tensor[(3), int32] */;
  %556 = cast(%var_10386, dtype="bool") /* ty=Tensor[(16, 10, 9), bool] */;
  %557 = dyn.reshape(%554, %555, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %558 = cast(%var_10393, dtype="float64") /* ty=Tensor[(756), float64] */;
  %559 = cast(meta[relay.Constant][43] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %560 = reshape(%558, newshape=[6, 14, 9]) /* ty=Tensor[(6, 14, 9), float64] */;
  %561 = reshape(%559, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %562 = @func_1105(%560, %561) /* ty=(Tensor[(6, 14, 9), float64], Tensor[(5, 12, 9), float64], Tensor[(540), float64], Tensor[(5, 12, 9), float64], Tensor[(5, 12, 9), float64]) */;
  %563 = @func_7432() /* ty=(Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), bool]) */;
  %564 = cast(%var_10424, dtype="float32") /* ty=Tensor[(70), float32] */;
  %565 = reshape(%564, newshape=[7, 10, 1]) /* ty=Tensor[(7, 10, 1), float32] */;
  %566 = @func_9433(%565) /* ty=(Tensor[(7, 10, 1), float64], Tensor[(7, 10, 9), uint64]) */;
  %567 = greater_equal(%556, %557) /* ty=Tensor[(16, 10, 9), bool] */;
  %568 = %562.3;
  %569 = %563.1;
  %570 = %566.0;
  (%567, %568, %var_10393, meta[relay.Constant][43] /* ty=Tensor[(540), float64] */, %569, %570, %var_10424)
}

def @func_14528(%var_14526: Tensor[(14, 7, 7), uint32], %var_14527: Tensor[(14, 7, 7), uint32]) -> (Tensor[(14, 7, 7), uint32],) {
  %576 = fn (%var_14498: Tensor[(14, 7, 7), uint32], %var_14499: Tensor[(14, 7, 7), uint32]) -> (Tensor[(14, 7, 7), uint32],) {
    %571 = cast(%var_14499, dtype="uint32") /* ty=Tensor[(14, 7, 7), uint32] */;
    %572 = shape_of(%var_14498, dtype="int32") /* ty=Tensor[(3), int32] */;
    %573 = cast(%var_14498, dtype="uint32") /* ty=Tensor[(14, 7, 7), uint32] */;
    %574 = dyn.reshape(%571, %572, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %575 = bitwise_and(%573, %574) /* ty=Tensor[(14, 7, 7), uint32] */;
    (%575,)
  };
  %576(%var_14526, %var_14527) /* ty=(Tensor[(14, 7, 7), uint32],) */
}

def @func_6712() -> (Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), bool]) {
  %577 = @func_5125() /* ty=(Tensor[(2, 8, 2), float32],) */;
  %578 = @func_3661() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %579 = %577.0;
  %580 = %578.0;
  (%579, %580)
}

def @func_4718(%var_4716: Tensor[(90), float64], %var_4717: Tensor[(588), float64]) -> (Tensor[(2, 8, 2), bool], Tensor[(6, 3, 5), float64], Tensor[(90), float64], Tensor[(588), float64], Tensor[(588), float64], Tensor[(1320, 1), float64], Tensor[(11, 6, 6), float32], Tensor[(66, 6), float32]) {
  %595 = fn (%var_4705: Tensor[(90), float64], %var_4708: Tensor[(588), float64]) -> (Tensor[(2, 8, 2), bool], Tensor[(6, 3, 5), float64], Tensor[(90), float64], Tensor[(588), float64], Tensor[(588), float64], Tensor[(1320, 1), float64], Tensor[(11, 6, 6), float32], Tensor[(66, 6), float32]) {
    %581 = @func_4305() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
    %582 = cast(%var_4705, dtype="float64") /* ty=Tensor[(90), float64] */;
    %583 = reshape(%582, newshape=[6, 3, 5]) /* ty=Tensor[(6, 3, 5), float64] */;
    %584 = cast(%var_4708, dtype="float64") /* ty=Tensor[(588), float64] */;
    %585 = cast(meta[relay.Constant][44] /* ty=Tensor[(1320, 1), float64] */, dtype="float64") /* ty=Tensor[(1320, 1), float64] */;
    %586 = reshape(%584, newshape=[588]) /* ty=Tensor[(588), float64] */;
    %587 = reshape(%585, newshape=[1320]) /* ty=Tensor[(1320), float64] */;
    %588 = @func_4656(%586, %587) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(660, 2), float64], Tensor[(588), float64], Tensor[(1320), float64], Tensor[(5, 12, 9), float64], Tensor[(540), float64], Tensor[(6, 3, 5), float64], Tensor[(90), float64]) */;
    %589 = cast(meta[relay.Constant][45] /* ty=Tensor[(66, 6), float32] */, dtype="float32") /* ty=Tensor[(66, 6), float32] */;
    %590 = reshape(%589, newshape=[11, 6, 6]) /* ty=Tensor[(11, 6, 6), float32] */;
    %591 = %581.1;
    %592 = @func_3616(%583) /* ty=Tensor[(6, 3, 5), float64] */;
    %593 = %588.2;
    %594 = @func_1929(%590) /* ty=Tensor[(11, 6, 6), float32] */;
    (%591, %592, %var_4705, %593, %var_4708, meta[relay.Constant][44] /* ty=Tensor[(1320, 1), float64] */, %594, meta[relay.Constant][45] /* ty=Tensor[(66, 6), float32] */)
  };
  %595(%var_4716, %var_4717) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(6, 3, 5), float64], Tensor[(90), float64], Tensor[(588), float64], Tensor[(588), float64], Tensor[(1320, 1), float64], Tensor[(11, 6, 6), float32], Tensor[(66, 6), float32]) */
}

def @func_8686(%var_8684: Tensor[(15, 7, 9), bool], %var_8685: Tensor[(15, 7, 9), bool]) -> (Tensor[(15, 7, 9), bool], Tensor[(4, 364), float32]) {
  @func_8682(%var_8684, %var_8685) /* ty=(Tensor[(15, 7, 9), bool], Tensor[(4, 364), float32]) */
}

def @func_13624(%var_13622: Tensor[(96, 4), float32]) -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(13, 8, 14), float32], Tensor[(2, 8, 2), bool], Tensor[(756), float64], Tensor[(96, 4), float32], Tensor[(756), float64], Tensor[(792), uint16], Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), float32]) {
  @func_13621(%var_13622) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(13, 8, 14), float32], Tensor[(2, 8, 2), bool], Tensor[(756), float64], Tensor[(96, 4), float32], Tensor[(756), float64], Tensor[(792), uint16], Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), float32]) */
}

def @func_14480() -> Tensor[(540), float64] {
  %596 = @func_9592() /* ty=(Tensor[(540), float64],) */;
  %596.0
}

def @func_8462(%var_8460: Tensor[(2, 8, 2), bool]) -> Tensor[(2, 8, 2), float32] {
  @func_8459(%var_8460) /* ty=Tensor[(2, 8, 2), float32] */
}

def @func_8653(%var_8651: Tensor[(6, 3, 5), float32]) -> (Tensor[(2, 8, 2), bool], Tensor[(6, 3, 5), uint64], Tensor[(2, 8, 2), bool], Tensor[(6, 3, 5), uint32]) {
  @func_8650(%var_8651) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(6, 3, 5), uint64], Tensor[(2, 8, 2), bool], Tensor[(6, 3, 5), uint32]) */
}

def @func_3558(%var_3556: Tensor[(2, 8, 2), bool], %var_3557: Tensor[(1456), float32]) -> (Tensor[(2, 8, 2), bool], Tensor[(660, 2), float64], Tensor[(1456), float32]) {
  %608 = fn (%var_3546: Tensor[(2, 8, 2), bool], %var_3553: Tensor[(1456), float32]) -> (Tensor[(2, 8, 2), bool], Tensor[(660, 2), float64], Tensor[(1456), float32]) {
    %597 = @func_3493() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
    %598 = %597.0;
    %599 = cast(%var_3546, dtype="bool") /* ty=Tensor[(2, 8, 2), bool] */;
    %600 = shape_of(%598, dtype="int32") /* ty=Tensor[(3), int32] */;
    %601 = cast(%598, dtype="bool") /* ty=Tensor[(2, 8, 2), bool] */;
    %602 = dyn.reshape(%599, %600, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %603 = cast(%var_3553, dtype="float32") /* ty=Tensor[(1456), float32] */;
    %604 = reshape(%603, newshape=[13, 8, 14]) /* ty=Tensor[(13, 8, 14), float32] */;
    %605 = @func_2537(%604) /* ty=(Tensor[(13, 8, 14), float32], Tensor[(396), float32], Tensor[(660, 2), float64]) */;
    %606 = greater(%601, %602) /* ty=Tensor[(2, 8, 2), bool] */;
    %607 = %605.2;
    (%606, %607, %var_3553)
  };
  %608(%var_3556, %var_3557) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(660, 2), float64], Tensor[(1456), float32]) */
}

def @func_4595() -> Tensor[(2, 8, 2), int8] {
  @func_4593() /* ty=Tensor[(2, 8, 2), int8] */
}

def @func_8682(%var_8675: Tensor[(15, 7, 9), bool], %var_8676: Tensor[(15, 7, 9), bool]) -> (Tensor[(15, 7, 9), bool], Tensor[(4, 364), float32]) {
  %609 = cast(%var_8676, dtype="bool") /* ty=Tensor[(15, 7, 9), bool] */;
  %610 = shape_of(%var_8675, dtype="int32") /* ty=Tensor[(3), int32] */;
  %611 = cast(%var_8675, dtype="bool") /* ty=Tensor[(15, 7, 9), bool] */;
  %612 = dyn.reshape(%609, %610, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %613 = @func_7471() /* ty=(Tensor[(90), float64], Tensor[(4, 364), float32], Tensor[(660, 2), float32], Tensor[(2, 8, 2), bool]) */;
  %614 = logical_and(%611, %612) /* ty=Tensor[(15, 7, 9), bool] */;
  %615 = %613.1;
  (%614, %615)
}

def @func_5093(%var_5091: Tensor[(4, 40), int16]) -> (Tensor[(2, 8, 2), bool], Tensor[(5, 4, 8), int16], Tensor[(4, 40), int16], Tensor[(540), float64]) {
  @func_5090(%var_5091) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(5, 4, 8), int16], Tensor[(4, 40), int16], Tensor[(540), float64]) */
}

def @func_15166() -> (Tensor[(2, 8, 2), bool],) {
  @func_15164() /* ty=(Tensor[(2, 8, 2), bool],) */
}

def @func_7432() -> (Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), bool]) {
  %616 = @func_7394() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %617 = @func_4283() /* ty=Tensor[(2, 8, 2), float32] */;
  %618 = %616.1;
  (%617, %618)
}

def @func_3909() -> (Tensor[(2, 8, 2), bool],) {
  @func_3907() /* ty=(Tensor[(2, 8, 2), bool],) */
}

def @func_7177(%var_7175: Tensor[(18, 30), float64], %var_7176: Tensor[(792), int8]) -> (Tensor[(2, 8, 2), uint32], Tensor[(5, 12, 9), float64], Tensor[(18, 30), float64], Tensor[(2, 8, 2), float32], Tensor[(792), int8]) {
  @func_7173(%var_7175, %var_7176) /* ty=(Tensor[(2, 8, 2), uint32], Tensor[(5, 12, 9), float64], Tensor[(18, 30), float64], Tensor[(2, 8, 2), float32], Tensor[(792), int8]) */
}

def @func_6598() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) {
  @func_6596() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */
}

def @func_15164() -> (Tensor[(2, 8, 2), bool],) {
  %619 = @func_6837() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %620 = %619.0;
  (%620,)
}

def @func_5009() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) {
  %621 = @func_3493() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %622 = @func_4305() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %623 = %621.1;
  %624 = %622.1;
  (%623, %624)
}

def @func_9125() -> (Tensor[(2, 8, 2), float32],) {
  %627 = fn () -> (Tensor[(2, 8, 2), float32],) {
    %625 = @func_3766() /* ty=(Tensor[(2, 8, 2), int8], Tensor[(2, 8, 2), float32]) */;
    %626 = %625.1;
    (%626,)
  };
  %627() /* ty=(Tensor[(2, 8, 2), float32],) */
}

def @func_7471() -> (Tensor[(90), float64], Tensor[(4, 364), float32], Tensor[(660, 2), float32], Tensor[(2, 8, 2), bool]) {
  %628 = @func_6180() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(6, 3, 5), float64], Tensor[(90), float64]) */;
  %629 = cast(meta[relay.Constant][46] /* ty=Tensor[(4, 364), float32] */, dtype="float32") /* ty=Tensor[(4, 364), float32] */;
  %630 = reshape(%629, newshape=[13, 8, 14]) /* ty=Tensor[(13, 8, 14), float32] */;
  %631 = @func_2537(%630) /* ty=(Tensor[(13, 8, 14), float32], Tensor[(396), float32], Tensor[(660, 2), float64]) */;
  %632 = %631.2;
  %633 = cast(%632, dtype="float32") /* ty=Tensor[(660, 2), float32] */;
  %634 = %628.2;
  %635 = sinh(%633) /* ty=Tensor[(660, 2), float32] */;
  %636 = @func_6372() /* ty=Tensor[(2, 8, 2), bool] */;
  (%634, meta[relay.Constant][46] /* ty=Tensor[(4, 364), float32] */, %635, %636)
}

def @func_14408() -> Tensor[(2, 8, 2), bool] {
  @func_14406() /* ty=Tensor[(2, 8, 2), bool] */
}

def @func_12419() -> Tensor[(2, 8, 2), bool] {
  @func_10977() /* ty=Tensor[(2, 8, 2), bool] */
}

def @func_7612() -> (Tensor[(2, 8, 2), bool], Tensor[(11, 6, 6), float32], Tensor[(396), float32]) {
  %642 = fn () -> (Tensor[(2, 8, 2), bool], Tensor[(11, 6, 6), float32], Tensor[(396), float32]) {
    %637 = @func_3493() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
    %638 = cast(meta[relay.Constant][47] /* ty=Tensor[(396), float32] */, dtype="float32") /* ty=Tensor[(396), float32] */;
    %639 = reshape(%638, newshape=[11, 6, 6]) /* ty=Tensor[(11, 6, 6), float32] */;
    %640 = %637.0;
    %641 = @func_1929(%639) /* ty=Tensor[(11, 6, 6), float32] */;
    (%640, %641, meta[relay.Constant][47] /* ty=Tensor[(396), float32] */)
  };
  %642() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(11, 6, 6), float32], Tensor[(396), float32]) */
}

def @func_1108(%var_1106: Tensor[(6, 14, 9), float64], %var_1107: Tensor[(540), float64]) -> (Tensor[(6, 14, 9), float64], Tensor[(5, 12, 9), float64], Tensor[(540), float64], Tensor[(5, 12, 9), float64], Tensor[(5, 12, 9), float64]) {
  %654 = fn (%var_1084: Tensor[(6, 14, 9), float64], %var_1088: Tensor[(540), float64]) -> (Tensor[(6, 14, 9), float64], Tensor[(5, 12, 9), float64], Tensor[(540), float64], Tensor[(5, 12, 9), float64], Tensor[(5, 12, 9), float64]) {
    %643 = cast(%var_1084, dtype="float64") /* ty=Tensor[(6, 14, 9), float64] */;
    %644 = cast(%var_1088, dtype="float64") /* ty=Tensor[(540), float64] */;
    %645 = reshape(%644, newshape=[5, 12, 9]) /* ty=Tensor[(5, 12, 9), float64] */;
    %646 = @func_839(%645) /* ty=Tensor[(5, 12, 9), float64] */;
    %647 = cast(%646, dtype="float64") /* ty=Tensor[(5, 12, 9), float64] */;
    %648 = reshape(%647, newshape=[5, 12, 9]) /* ty=Tensor[(5, 12, 9), float64] */;
    %649 = cast(%var_1088, dtype="float64") /* ty=Tensor[(540), float64] */;
    %650 = reshape(%649, newshape=[5, 12, 9]) /* ty=Tensor[(5, 12, 9), float64] */;
    %651 = atan(%643) /* ty=Tensor[(6, 14, 9), float64] */;
    %652 = @func_839(%648) /* ty=Tensor[(5, 12, 9), float64] */;
    %653 = @func_839(%650) /* ty=Tensor[(5, 12, 9), float64] */;
    (%651, %646, %var_1088, %652, %653)
  };
  %654(%var_1106, %var_1107) /* ty=(Tensor[(6, 14, 9), float64], Tensor[(5, 12, 9), float64], Tensor[(540), float64], Tensor[(5, 12, 9), float64], Tensor[(5, 12, 9), float64]) */
}

def @func_10542(%var_10540: Tensor[(4, 364), float32]) -> (Tensor[(4, 364), bool], Tensor[(2, 8, 2), float32], Tensor[(4, 364), float64]) {
  @func_10539(%var_10540) /* ty=(Tensor[(4, 364), bool], Tensor[(2, 8, 2), float32], Tensor[(4, 364), float64]) */
}

def @func_1931(%var_1930: Tensor[(11, 6, 6), float32]) -> Tensor[(11, 6, 6), float32] {
  %656 = fn (%var_1900: Tensor[(11, 6, 6), float32]) -> Tensor[(11, 6, 6), float32] {
    %655 = cast(%var_1900, dtype="float32") /* ty=Tensor[(11, 6, 6), float32] */;
    atanh(%655) /* ty=Tensor[(11, 6, 6), float32] */
  };
  %656(%var_1930) /* ty=Tensor[(11, 6, 6), float32] */
}

def @func_14847() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) {
  %657 = @func_4086() /* ty=Tensor[(2, 8, 2), bool] */;
  %658 = @func_7267() /* ty=Tensor[(2, 8, 2), bool] */;
  (%657, %658)
}

def @func_12720() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(14, 16, 12), uint64], Tensor[(54, 14), float64], Tensor[(96, 28), float64]) {
  @func_12718() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(14, 16, 12), uint64], Tensor[(54, 14), float64], Tensor[(96, 28), float64]) */
}

def @func_6073(%var_6071: float32, %var_6072: Tensor[(2, 5, 13), float32]) -> (Tensor[(2, 5, 13), float32], Tensor[(2, 5, 13), float64]) {
  @func_6069(%var_6071, %var_6072) /* ty=(Tensor[(2, 5, 13), float32], Tensor[(2, 5, 13), float64]) */
}

def @func_7925(%var_7922: Tensor[(588, 1), float64], %var_7923: Tensor[(1320), float64], %var_7924: Tensor[(588, 1), float64]) -> (Tensor[(2, 8, 2), bool], Tensor[(1320), float64], Tensor[(588, ?), float32], Tensor[(2, 8, 2), bool], Tensor[(588, ?), bool], Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) {
  @func_7920(%var_7922, %var_7923, %var_7924) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(1320), float64], Tensor[(588, ?), float32], Tensor[(2, 8, 2), bool], Tensor[(588, ?), bool], Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */
}

def @func_10242(%var_10240: Tensor[(2, 8, 2), float32]) -> Tensor[(2, 8, 2), bool] {
  @func_10239(%var_10240) /* ty=Tensor[(2, 8, 2), bool] */
}

def @func_2813(%var_2754: Tensor[(8, 3, 16), float32], %var_2774: Tensor[(756), float64]) -> (Tensor[(540), float64], Tensor[(270, 1), float32], Tensor[(756), float64], Tensor[(8, 3, 16), float64], Tensor[(8, 3, 16), float64]) {
  %659 = cast(meta[relay.Constant][48] /* ty=Tensor[(270, 1), float32] */, dtype="float32") /* ty=Tensor[(270, 1), float32] */;
  %660 = cast(%var_2774, dtype="float64") /* ty=Tensor[(756), float64] */;
  %661 = cast(meta[relay.Constant][48] /* ty=Tensor[(270, 1), float32] */, dtype="float32") /* ty=Tensor[(270, 1), float32] */;
  %662 = reshape(%659, newshape=[5, 9, 6]) /* ty=Tensor[(5, 9, 6), float32] */;
  %663 = reshape(%660, newshape=[9, 84]) /* ty=Tensor[(9, 84), float64] */;
  %664 = reshape(%661, newshape=[5, 9, 6]) /* ty=Tensor[(5, 9, 6), float32] */;
  %665 = @func_2457(%662, %663, %664) /* ty=(Tensor[(5, 9, 6), int32], Tensor[(540), float64], Tensor[(540), float64], Tensor[(9, 84), int16], Tensor[(5, 9, 6), bool]) */;
  %666 = cast(%var_2754, dtype="float32") /* ty=Tensor[(8, 3, 16), float32] */;
  %667 = log(%666) /* ty=Tensor[(8, 3, 16), float32] */;
  %668 = cast(%667, dtype="float32") /* ty=Tensor[(8, 3, 16), float32] */;
  %669 = tan(%668) /* ty=Tensor[(8, 3, 16), float32] */;
  %670 = cast(%669, dtype="float64") /* ty=Tensor[(8, 3, 16), float64] */;
  %671 = cast(%667, dtype="float64") /* ty=Tensor[(8, 3, 16), float64] */;
  %672 = %665.2;
  %673 = atanh(%670) /* ty=Tensor[(8, 3, 16), float64] */;
  %674 = sqrt(%671) /* ty=Tensor[(8, 3, 16), float64] */;
  (%672, meta[relay.Constant][48] /* ty=Tensor[(270, 1), float32] */, %var_2774, %673, %674)
}

def @func_2817(%var_2815: Tensor[(8, 3, 16), float32], %var_2816: Tensor[(756), float64]) -> (Tensor[(540), float64], Tensor[(270, 1), float32], Tensor[(756), float64], Tensor[(8, 3, 16), float64], Tensor[(8, 3, 16), float64]) {
  @func_2813(%var_2815, %var_2816) /* ty=(Tensor[(540), float64], Tensor[(270, 1), float32], Tensor[(756), float64], Tensor[(8, 3, 16), float64], Tensor[(8, 3, 16), float64]) */
}

def @func_5463(%var_5423: Tensor[(14, 16, 12), uint64], %var_5424: Tensor[(14, 16, 12), uint64], %var_5445: Tensor[(756), float64]) -> (Tensor[(14, 16, 12), uint64], Tensor[(8, 3, 16), float64], Tensor[(384), float32], Tensor[(756), float64], Tensor[(396), float32], Tensor[(1456), float32]) {
  %675 = cast(%var_5424, dtype="uint64") /* ty=Tensor[(14, 16, 12), uint64] */;
  %676 = shape_of(%var_5423, dtype="int32") /* ty=Tensor[(3), int32] */;
  %677 = cast(%var_5423, dtype="uint64") /* ty=Tensor[(14, 16, 12), uint64] */;
  %678 = dyn.reshape(%675, %676, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %679 = cast(meta[relay.Constant][49] /* ty=Tensor[(384), float32] */, dtype="float32") /* ty=Tensor[(384), float32] */;
  %680 = cast(%var_5445, dtype="float64") /* ty=Tensor[(756), float64] */;
  %681 = reshape(%679, newshape=[1, 384]) /* ty=Tensor[(1, 384), float32] */;
  %682 = reshape(%680, newshape=[756]) /* ty=Tensor[(756), float64] */;
  %683 = @func_3870(%681, %682) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(8, 3, 16), float64], Tensor[(1, 384), float32], Tensor[(756), float64]) */;
  %684 = cast(meta[relay.Constant][50] /* ty=Tensor[(1456), float32] */, dtype="float32") /* ty=Tensor[(1456), float32] */;
  %685 = reshape(%684, newshape=[13, 8, 14]) /* ty=Tensor[(13, 8, 14), float32] */;
  %686 = @func_2537(%685) /* ty=(Tensor[(13, 8, 14), float32], Tensor[(396), float32], Tensor[(660, 2), float64]) */;
  %687 = logical_xor(%677, %678) /* ty=Tensor[(14, 16, 12), uint64] */;
  %688 = %683.1;
  %689 = %686.1;
  (%687, %688, meta[relay.Constant][49] /* ty=Tensor[(384), float32] */, %var_5445, %689, meta[relay.Constant][50] /* ty=Tensor[(1456), float32] */)
}

def @func_3616(%var_3601: Tensor[(6, 3, 5), float64]) -> Tensor[(6, 3, 5), float64] {
  %690 = cast(%var_3601, dtype="float64") /* ty=Tensor[(6, 3, 5), float64] */;
  acosh(%690) /* ty=Tensor[(6, 3, 5), float64] */
}

def @func_11649() -> Tensor[(2, 8, 2), bool] {
  %692 = fn () -> Tensor[(2, 8, 2), bool] {
    %691 = @func_7394() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
    %691.1
  };
  %692() /* ty=Tensor[(2, 8, 2), bool] */
}

def @func_11273() -> (Tensor[(2, 8, 2), bool], Tensor[(?, 7, 2), float64], Tensor[(7, 2), float32], Tensor[(11, 12, 6), int32], Tensor[(540, 1), float64]) {
  %704 = fn () -> (Tensor[(2, 8, 2), bool], Tensor[(?, 7, 2), float64], Tensor[(7, 2), float32], Tensor[(11, 12, 6), int32], Tensor[(540, 1), float64]) {
    %693 = @func_10086() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
    %694 = cast(meta[relay.Constant][51] /* ty=Tensor[(7, 2), float32] */, dtype="float32") /* ty=Tensor[(7, 2), float32] */;
    %695 = reshape(%694, newshape=[1, 7, 2]) /* ty=Tensor[(1, 7, 2), float32] */;
    %696 = cast(meta[relay.Constant][52] /* ty=Tensor[(540, 1), float64] */, dtype="float64") /* ty=Tensor[(540, 1), float64] */;
    %697 = reshape(%696, newshape=[540]) /* ty=Tensor[(540), float64] */;
    %698 = @func_7355(%697) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(11, 12, 6), int32], Tensor[(588), float64], Tensor[(1320), float64], Tensor[(660, 2), float64], Tensor[(1456), float32], Tensor[(5, 12, 9), float64], Tensor[(540), float64], Tensor[(14, 6, 7), float64], Tensor[(2, 8, 2), float32]) */;
    %699 = cast(meta[relay.Constant][52] /* ty=Tensor[(540, 1), float64] */, dtype="float64") /* ty=Tensor[(540, 1), float64] */;
    %700 = %693.0;
    %701 = @func_6327(%695) /* ty=Tensor[(?, 7, 2), float64] */;
    %702 = %698.1;
    %703 = tan(%699) /* ty=Tensor[(540, 1), float64] */;
    (%700, %701, meta[relay.Constant][51] /* ty=Tensor[(7, 2), float32] */, %702, %703)
  };
  %704() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(?, 7, 2), float64], Tensor[(7, 2), float32], Tensor[(11, 12, 6), int32], Tensor[(540, 1), float64]) */
}

def @func_16193(%var_16192: Tensor[(588), float64]) -> (Tensor[(4, 40), float32], Tensor[(6, 3, 5), float64], Tensor[(90), float64], Tensor[(588), float64]) {
  %712 = fn (%var_16188: Tensor[(588), float64]) -> (Tensor[(4, 40), float32], Tensor[(6, 3, 5), float64], Tensor[(90), float64], Tensor[(588), float64]) {
    %705 = cast(meta[relay.Constant][53] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
    %706 = cast(%var_16188, dtype="float64") /* ty=Tensor[(588), float64] */;
    %707 = reshape(%705, newshape=[90]) /* ty=Tensor[(90), float64] */;
    %708 = reshape(%706, newshape=[588]) /* ty=Tensor[(588), float64] */;
    %709 = @func_4715(%707, %708) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(6, 3, 5), float64], Tensor[(90), float64], Tensor[(588), float64], Tensor[(588), float64], Tensor[(1320, 1), float64], Tensor[(11, 6, 6), float32], Tensor[(66, 6), float32]) */;
    %710 = @func_10792() /* ty=Tensor[(4, 40), float32] */;
    %711 = %709.1;
    (%710, %711, meta[relay.Constant][53] /* ty=Tensor[(90), float64] */, %var_16188)
  };
  %712(%var_16192) /* ty=(Tensor[(4, 40), float32], Tensor[(6, 3, 5), float64], Tensor[(90), float64], Tensor[(588), float64]) */
}

def @func_5468(%var_5465: Tensor[(14, 16, 12), uint64], %var_5466: Tensor[(14, 16, 12), uint64], %var_5467: Tensor[(756), float64]) -> (Tensor[(14, 16, 12), uint64], Tensor[(8, 3, 16), float64], Tensor[(384), float32], Tensor[(756), float64], Tensor[(396), float32], Tensor[(1456), float32]) {
  @func_5463(%var_5465, %var_5466, %var_5467) /* ty=(Tensor[(14, 16, 12), uint64], Tensor[(8, 3, 16), float64], Tensor[(384), float32], Tensor[(756), float64], Tensor[(396), float32], Tensor[(1456), float32]) */
}

def @func_14223(%var_14222: float32) -> (Tensor[(2, 8, 2), bool], Tensor[(11, 6, 6), float32], float32, Tensor[(130), float32]) {
  %720 = fn (%var_14214: float32) -> (Tensor[(2, 8, 2), bool], Tensor[(11, 6, 6), float32], float32, Tensor[(130), float32]) {
    %713 = cast(%var_14214, dtype="float32") /* ty=float32 */;
    %714 = cast(meta[relay.Constant][54] /* ty=Tensor[(130), float32] */, dtype="float32") /* ty=Tensor[(130), float32] */;
    %715 = reshape(%713, newshape=[]) /* ty=float32 */;
    %716 = reshape(%714, newshape=[130]) /* ty=Tensor[(130), float32] */;
    %717 = @func_9400(%715, %716) /* ty=(Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), float32], Tensor[(8, 3, 16), float64], Tensor[(2, 5, 13), float32], float32, Tensor[(130), float32], Tensor[(2, 8, 2), bool], Tensor[(11, 6, 6), float32], Tensor[(6, 66), float32], Tensor[(2, 8, 2), bool]) */;
    %718 = @func_13917() /* ty=Tensor[(2, 8, 2), bool] */;
    %719 = %717.7;
    (%718, %719, %var_14214, meta[relay.Constant][54] /* ty=Tensor[(130), float32] */)
  };
  %720(%var_14222) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(11, 6, 6), float32], float32, Tensor[(130), float32]) */
}

def @func_9948(%var_9892: float32) -> (Tensor[(5, 6, 3), bool], Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(1050), uint8], Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), bool]) {
  %721 = cast(%var_9892, dtype="bool") /* ty=bool */;
  %722 = cast(meta[relay.Constant][55] /* ty=Tensor[(5, 6, 3), float32] */, dtype="bool") /* ty=Tensor[(5, 6, 3), bool] */;
  %723 = cast(meta[relay.Constant][56] /* ty=Tensor[(1050), uint8] */, dtype="uint8") /* ty=Tensor[(1050), uint8] */;
  %724 = cast(meta[relay.Constant][56] /* ty=Tensor[(1050), uint8] */, dtype="uint8") /* ty=Tensor[(1050), uint8] */;
  %725 = reshape(%723, newshape=[5, 15, 14]) /* ty=Tensor[(5, 15, 14), uint8] */;
  %726 = reshape(%724, newshape=[5, 15, 14]) /* ty=Tensor[(5, 15, 14), uint8] */;
  %727 = @func_8529(%725, %726) /* ty=(Tensor[(5, 15, 14), uint8], Tensor[(2, 8, 2), bool]) */;
  %728 = @func_8182() /* ty=(Tensor[(2, 8, 2), float32],) */;
  %729 = less(%721, %722) /* ty=Tensor[(5, 6, 3), bool] */;
  %730 = @func_6382() /* ty=Tensor[(2, 8, 2), bool] */;
  %731 = %727.1;
  %732 = %728.0;
  %733 = @func_6805() /* ty=Tensor[(2, 8, 2), bool] */;
  (%729, %730, %731, meta[relay.Constant][56] /* ty=Tensor[(1050), uint8] */, %732, %733)
}

def @func_12220() -> (Tensor[(2, 8, 2), int8],) {
  %736 = fn () -> (Tensor[(2, 8, 2), int8],) {
    %734 = @func_5603() /* ty=(Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), int8]) */;
    %735 = %734.1;
    (%735,)
  };
  %736() /* ty=(Tensor[(2, 8, 2), int8],) */
}

def @func_15405(%var_15403: Tensor[(9, 14, 15), float32]) -> (Tensor[(9, 14, 15), bool], Tensor[(9, 14, 15), float64]) {
  @func_15402(%var_15403) /* ty=(Tensor[(9, 14, 15), bool], Tensor[(9, 14, 15), float64]) */
}

def @func_6714() -> (Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), bool]) {
  @func_6712() /* ty=(Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), bool]) */
}

def @func_7473() -> (Tensor[(90), float64], Tensor[(4, 364), float32], Tensor[(660, 2), float32], Tensor[(2, 8, 2), bool]) {
  @func_7471() /* ty=(Tensor[(90), float64], Tensor[(4, 364), float32], Tensor[(660, 2), float32], Tensor[(2, 8, 2), bool]) */
}

def @func_8459(%var_8432: Tensor[(2, 8, 2), bool]) -> Tensor[(2, 8, 2), float32] {
  %737 = @func_6805() /* ty=Tensor[(2, 8, 2), bool] */;
  %738 = cast(%var_8432, dtype="int16") /* ty=Tensor[(2, 8, 2), int16] */;
  %739 = shape_of(%737, dtype="int32") /* ty=Tensor[(3), int32] */;
  %740 = cast(%737, dtype="int16") /* ty=Tensor[(2, 8, 2), int16] */;
  %741 = dyn.reshape(%738, %739, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %742 = bitwise_xor(%740, %741) /* ty=Tensor[(2, 8, 2), int16] */;
  %743 = cast(%742, dtype="float32") /* ty=Tensor[(2, 8, 2), float32] */;
  log10(%743) /* ty=Tensor[(2, 8, 2), float32] */
}

def @func_6181() -> (Tensor[(2, 8, 2), bool], Tensor[(6, 3, 5), float64], Tensor[(90), float64]) {
  %748 = fn () -> (Tensor[(2, 8, 2), bool], Tensor[(6, 3, 5), float64], Tensor[(90), float64]) {
    %744 = cast(meta[relay.Constant][57] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
    %745 = reshape(%744, newshape=[6, 3, 5]) /* ty=Tensor[(6, 3, 5), float64] */;
    %746 = @func_4042() /* ty=Tensor[(2, 8, 2), bool] */;
    %747 = @func_3616(%745) /* ty=Tensor[(6, 3, 5), float64] */;
    (%746, %747, meta[relay.Constant][57] /* ty=Tensor[(90), float64] */)
  };
  %748() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(6, 3, 5), float64], Tensor[(90), float64]) */
}

def @func_12992() -> Tensor[(2, 8, 2), float32] {
  %749 = @func_3766() /* ty=(Tensor[(2, 8, 2), int8], Tensor[(2, 8, 2), float32]) */;
  %749.1
}

def @func_7434() -> (Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), bool]) {
  @func_7432() /* ty=(Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), bool]) */
}

def @func_8752() -> Tensor[(8, 7, 9), float64] {
  %751 = fn () -> Tensor[(8, 7, 9), float64] {
    %750 = cast(meta[relay.Constant][58] /* ty=Tensor[(8, 7, 9), float64] */, dtype="float64") /* ty=Tensor[(8, 7, 9), float64] */;
    asinh(%750) /* ty=Tensor[(8, 7, 9), float64] */
  };
  %751() /* ty=Tensor[(8, 7, 9), float64] */
}

def @func_12269() -> Tensor[(2, 8, 2), uint32] {
  %752 = fn () -> Tensor[(2, 8, 2), uint32] {
    @func_10044() /* ty=Tensor[(2, 8, 2), uint32] */
  };
  %752() /* ty=Tensor[(2, 8, 2), uint32] */
}

def @func_11315() -> (Tensor[(2, 8, 2), float32],) {
  %753 = @func_9124() /* ty=(Tensor[(2, 8, 2), float32],) */;
  %754 = %753.0;
  (%754,)
}

def @func_14294() -> Tensor[(2, 8, 2), bool] {
  @func_5247() /* ty=Tensor[(2, 8, 2), bool] */
}

def @func_15980() -> (Tensor[(2, 8, 2), uint32],) {
  %756 = fn () -> (Tensor[(2, 8, 2), uint32],) {
    %755 = @func_5156() /* ty=Tensor[(2, 8, 2), uint32] */;
    (%755,)
  };
  %756() /* ty=(Tensor[(2, 8, 2), uint32],) */
}

def @func_4028(%var_4026: Tensor[(14, 6, 7), float64], %var_4027: Tensor[(660, 2), float64]) -> (Tensor[(14, 6, 7), float64], Tensor[(11, 12, 10), bool], Tensor[(660, 2), float64]) {
  %763 = fn (%var_4018: Tensor[(14, 6, 7), float64], %var_4022: Tensor[(660, 2), float64]) -> (Tensor[(14, 6, 7), float64], Tensor[(11, 12, 10), bool], Tensor[(660, 2), float64]) {
    %757 = cast(%var_4018, dtype="float64") /* ty=Tensor[(14, 6, 7), float64] */;
    %758 = cast(%var_4022, dtype="float64") /* ty=Tensor[(660, 2), float64] */;
    %759 = reshape(%758, newshape=[11, 12, 10]) /* ty=Tensor[(11, 12, 10), float64] */;
    %760 = @func_2173(%759) /* ty=(Tensor[(11, 12, 10), bool], Tensor[(11, 6, 6), float32], Tensor[(396), float32]) */;
    %761 = acosh(%757) /* ty=Tensor[(14, 6, 7), float64] */;
    %762 = %760.0;
    (%761, %762, %var_4022)
  };
  %763(%var_4026, %var_4027) /* ty=(Tensor[(14, 6, 7), float64], Tensor[(11, 12, 10), bool], Tensor[(660, 2), float64]) */
}

def @func_5090(%var_5072: Tensor[(4, 40), int16]) -> (Tensor[(2, 8, 2), bool], Tensor[(5, 4, 8), int16], Tensor[(4, 40), int16], Tensor[(540), float64]) {
  %764 = @func_3493() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %765 = cast(%var_5072, dtype="int16") /* ty=Tensor[(4, 40), int16] */;
  %766 = cast(meta[relay.Constant][59] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %767 = reshape(%765, newshape=[5, 4, 8]) /* ty=Tensor[(5, 4, 8), int16] */;
  %768 = reshape(%766, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %769 = @func_4189(%767, %768) /* ty=(Tensor[(5, 4, 8), int16], Tensor[(5, 4, 8), float32], Tensor[(540), float64], Tensor[(540), float64]) */;
  %770 = %764.0;
  %771 = %769.0;
  (%770, %771, %var_5072, meta[relay.Constant][59] /* ty=Tensor[(540), float64] */)
}

def @func_9403(%var_9401: float32, %var_9402: Tensor[(130), float32]) -> (Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), float32], Tensor[(8, 3, 16), float64], Tensor[(2, 5, 13), float32], float32, Tensor[(130), float32], Tensor[(2, 8, 2), bool], Tensor[(11, 6, 6), float32], Tensor[(6, 66), float32], Tensor[(2, 8, 2), bool]) {
  %789 = fn (%var_9320: float32, %var_9321: Tensor[(130), float32]) -> (Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), float32], Tensor[(8, 3, 16), float64], Tensor[(2, 5, 13), float32], float32, Tensor[(130), float32], Tensor[(2, 8, 2), bool], Tensor[(11, 6, 6), float32], Tensor[(6, 66), float32], Tensor[(2, 8, 2), bool]) {
    %772 = @func_9124() /* ty=(Tensor[(2, 8, 2), float32],) */;
    %773 = @func_9110() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(4, 40), float64], Tensor[(4, 40), uint32], Tensor[(8, 3, 16), float64], Tensor[(384), float32], Tensor[(756), float64]) */;
    %774 = cast(%var_9320, dtype="float32") /* ty=float32 */;
    %775 = cast(%var_9321, dtype="float32") /* ty=Tensor[(130), float32] */;
    %776 = reshape(%774, newshape=[]) /* ty=float32 */;
    %777 = reshape(%775, newshape=[2, 5, 13]) /* ty=Tensor[(2, 5, 13), float32] */;
    %778 = @func_6069(%776, %777) /* ty=(Tensor[(2, 5, 13), float32], Tensor[(2, 5, 13), float64]) */;
    %779 = @func_4222() /* ty=(Tensor[(2, 8, 2), bool],) */;
    %780 = cast(meta[relay.Constant][60] /* ty=Tensor[(6, 66), float32] */, dtype="float32") /* ty=Tensor[(6, 66), float32] */;
    %781 = reshape(%780, newshape=[11, 6, 6]) /* ty=Tensor[(11, 6, 6), float32] */;
    %782 = @func_5660() /* ty=Tensor[(2, 8, 2), float32] */;
    %783 = %772.0;
    %784 = %773.3;
    %785 = %778.0;
    %786 = %779.0;
    %787 = @func_1929(%781) /* ty=Tensor[(11, 6, 6), float32] */;
    %788 = @func_7945() /* ty=Tensor[(2, 8, 2), bool] */;
    (%782, %783, %784, %785, %var_9320, %var_9321, %786, %787, meta[relay.Constant][60] /* ty=Tensor[(6, 66), float32] */, %788)
  };
  %789(%var_9401, %var_9402) /* ty=(Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), float32], Tensor[(8, 3, 16), float64], Tensor[(2, 5, 13), float32], float32, Tensor[(130), float32], Tensor[(2, 8, 2), bool], Tensor[(11, 6, 6), float32], Tensor[(6, 66), float32], Tensor[(2, 8, 2), bool]) */
}

def @func_9206(%var_9167: Tensor[(630), float32]) -> (Tensor[(2, 8, 2), bool], Tensor[(8, 3, 16), float64], Tensor[(630), float32], Tensor[(384), float32]) {
  %790 = cast(%var_9167, dtype="float32") /* ty=Tensor[(630), float32] */;
  %791 = cast(meta[relay.Constant][61] /* ty=Tensor[(384), float32] */, dtype="float32") /* ty=Tensor[(384), float32] */;
  %792 = reshape(%790, newshape=[630]) /* ty=Tensor[(630), float32] */;
  %793 = reshape(%791, newshape=[384]) /* ty=Tensor[(384), float32] */;
  %794 = @func_8072(%792, %793) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(6, 7, 15), float32], Tensor[(630), float32], Tensor[(8, 3, 16), float64], Tensor[(384), float32], Tensor[(756), float64]) */;
  %795 = @func_6372() /* ty=Tensor[(2, 8, 2), bool] */;
  %796 = %794.3;
  (%795, %796, %var_9167, meta[relay.Constant][61] /* ty=Tensor[(384), float32] */)
}

def @func_5247() -> Tensor[(2, 8, 2), bool] {
  %797 = @func_5009() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %797.0
}

def @func_12961() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) {
  %801 = fn () -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) {
    %798 = @func_11961() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
    %799 = @func_4042() /* ty=Tensor[(2, 8, 2), bool] */;
    %800 = %798.0;
    (%799, %800)
  };
  %801() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */
}

def @func_6327(%var_6280: Tensor[(1, 7, 2), float32]) -> Tensor[(?, 7, 2), float64] {
  %802 = cast(%var_6280, dtype="float32") /* ty=Tensor[(1, 7, 2), float32] */;
  %803 = acos(%802) /* ty=Tensor[(1, 7, 2), float32] */;
  %804 = cast(%var_6280, dtype="float64") /* ty=Tensor[(1, 7, 2), float64] */;
  %805 = shape_of(%803, dtype="int32") /* ty=Tensor[(3), int32] */;
  %806 = cast(%803, dtype="float64") /* ty=Tensor[(1, 7, 2), float64] */;
  %807 = dyn.reshape(%804, %805, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  divide(%806, %807) /* ty=Tensor[(?, 7, 2), float64] */
}

def @func_14998(%var_14966: Tensor[(5, 1, 5), float64]) -> (Tensor[(5, ?, 5), float64], Tensor[(2, 8, 2), float32], Tensor[(4, 40), float32]) {
  %808 = cast(%var_14966, dtype="float64") /* ty=Tensor[(5, 1, 5), float64] */;
  %809 = shape_of(meta[relay.Constant][62] /* ty=Tensor[(5, 1, 5), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %810 = cast(meta[relay.Constant][62] /* ty=Tensor[(5, 1, 5), float64] */, dtype="float64") /* ty=Tensor[(5, 1, 5), float64] */;
  %811 = dyn.reshape(%808, %809, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %812 = @func_13174() /* ty=(Tensor[(2, 8, 2), float32],) */;
  %813 = @func_12922() /* ty=(Tensor[(4, 40), float32],) */;
  %814 = divide(%810, %811) /* ty=Tensor[(5, ?, 5), float64] */;
  %815 = %812.0;
  %816 = %813.0;
  (%814, %815, %816)
}

def @func_6806() -> Tensor[(2, 8, 2), bool] {
  %818 = fn () -> Tensor[(2, 8, 2), bool] {
    %817 = @func_4222() /* ty=(Tensor[(2, 8, 2), bool],) */;
    %817.0
  };
  %818() /* ty=Tensor[(2, 8, 2), bool] */
}

def @func_14127() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) {
  @func_14125() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */
}

def @func_12122() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) {
  @func_12120() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */
}

def @func_10900(%var_10899: Tensor[(2, 8, 5), float32]) -> Tensor[(2, 8, 5), float32] {
  %820 = fn (%var_10890: Tensor[(2, 8, 5), float32]) -> Tensor[(2, 8, 5), float32] {
    %819 = cast(%var_10890, dtype="float32") /* ty=Tensor[(2, 8, 5), float32] */;
    asin(%819) /* ty=Tensor[(2, 8, 5), float32] */
  };
  %820(%var_10899) /* ty=Tensor[(2, 8, 5), float32] */
}

def @func_13175() -> (Tensor[(2, 8, 2), float32],) {
  %823 = fn () -> (Tensor[(2, 8, 2), float32],) {
    %821 = @func_6712() /* ty=(Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), bool]) */;
    %822 = %821.0;
    (%822,)
  };
  %823() /* ty=(Tensor[(2, 8, 2), float32],) */
}

def @func_10284() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) {
  %828 = fn () -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) {
    %824 = @func_10086() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
    %825 = @func_7611() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(11, 6, 6), float32], Tensor[(396), float32]) */;
    %826 = %824.1;
    %827 = %825.0;
    (%826, %827)
  };
  %828() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */
}

def @func_6135(%var_6131: Tensor[(1320), float64], %var_6132: Tensor[(1456), float32], %var_6133: Tensor[(588), float64], %var_6134: Tensor[(756), float64]) -> (Tensor[(2, 8, 2), uint32], Tensor[(2, 8, 2), int8], Tensor[(1320), float64], Tensor[(1456), float32], Tensor[(792), int8], Tensor[(5, 4, 8), int16], Tensor[(160), int16], Tensor[(792), int8], Tensor[(588), float64], Tensor[(5, 12, 9), float64], Tensor[(1008), float64], Tensor[(756), float64], Tensor[(9, 60), float64]) {
  @func_6129(%var_6131, %var_6132, %var_6133, %var_6134) /* ty=(Tensor[(2, 8, 2), uint32], Tensor[(2, 8, 2), int8], Tensor[(1320), float64], Tensor[(1456), float32], Tensor[(792), int8], Tensor[(5, 4, 8), int16], Tensor[(160), int16], Tensor[(792), int8], Tensor[(588), float64], Tensor[(5, 12, 9), float64], Tensor[(1008), float64], Tensor[(756), float64], Tensor[(9, 60), float64]) */
}

def @func_15354(%var_15351: Tensor[(2, 192), float32]) -> (Tensor[(2, 8, 2), bool], Tensor[(6, 7, 15), float32], Tensor[(630), float32], Tensor[(2, 192), float32]) {
  %829 = @func_9110() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(4, 40), float64], Tensor[(4, 40), uint32], Tensor[(8, 3, 16), float64], Tensor[(384), float32], Tensor[(756), float64]) */;
  %830 = cast(meta[relay.Constant][63] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
  %831 = cast(%var_15351, dtype="float32") /* ty=Tensor[(2, 192), float32] */;
  %832 = reshape(%830, newshape=[630]) /* ty=Tensor[(630), float32] */;
  %833 = reshape(%831, newshape=[384]) /* ty=Tensor[(384), float32] */;
  %834 = @func_8072(%832, %833) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(6, 7, 15), float32], Tensor[(630), float32], Tensor[(8, 3, 16), float64], Tensor[(384), float32], Tensor[(756), float64]) */;
  %835 = %829.0;
  %836 = %834.1;
  (%835, %836, meta[relay.Constant][63] /* ty=Tensor[(630), float32] */, %var_15351)
}

def @func_12464(%var_12456: Tensor[(20, 4), float32]) -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 5), float32], Tensor[(20, 4), float32]) {
  %837 = cast(%var_12456, dtype="float32") /* ty=Tensor[(20, 4), float32] */;
  %838 = reshape(%837, newshape=[2, 8, 5]) /* ty=Tensor[(2, 8, 5), float32] */;
  %839 = @func_6372() /* ty=Tensor[(2, 8, 2), bool] */;
  %840 = @func_10898(%838) /* ty=Tensor[(2, 8, 5), float32] */;
  (%839, %840, %var_12456)
}

def @func_10088() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) {
  @func_10086() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */
}

def @func_12467(%var_12465: Tensor[(20, 4), float32]) -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 5), float32], Tensor[(20, 4), float32]) {
  @func_12464(%var_12465) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 5), float32], Tensor[(20, 4), float32]) */
}

def @func_7394() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) {
  %841 = @func_6837() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %842 = @func_6596() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %843 = %841.0;
  %844 = %842.1;
  (%843, %844)
}

def @func_11401() -> (Tensor[(2, 8, 2), bool],) {
  %847 = fn () -> (Tensor[(2, 8, 2), bool],) {
    %845 = @func_7394() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
    %846 = %845.1;
    (%846,)
  };
  %847() /* ty=(Tensor[(2, 8, 2), bool],) */
}

def @func_8075(%var_8073: Tensor[(630), float32], %var_8074: Tensor[(384), float32]) -> (Tensor[(2, 8, 2), bool], Tensor[(6, 7, 15), float32], Tensor[(630), float32], Tensor[(8, 3, 16), float64], Tensor[(384), float32], Tensor[(756), float64]) {
  %859 = fn (%var_8055: Tensor[(630), float32], %var_8062: Tensor[(384), float32]) -> (Tensor[(2, 8, 2), bool], Tensor[(6, 7, 15), float32], Tensor[(630), float32], Tensor[(8, 3, 16), float64], Tensor[(384), float32], Tensor[(756), float64]) {
    %848 = cast(%var_8055, dtype="float32") /* ty=Tensor[(630), float32] */;
    %849 = reshape(%848, newshape=[6, 7, 15]) /* ty=Tensor[(6, 7, 15), float32] */;
    %850 = @func_7009(%849) /* ty=(Tensor[(6, 7, 15), float32],) */;
    %851 = cast(%var_8062, dtype="float32") /* ty=Tensor[(384), float32] */;
    %852 = cast(meta[relay.Constant][64] /* ty=Tensor[(756), float64] */, dtype="float64") /* ty=Tensor[(756), float64] */;
    %853 = reshape(%851, newshape=[1, 384]) /* ty=Tensor[(1, 384), float32] */;
    %854 = reshape(%852, newshape=[756]) /* ty=Tensor[(756), float64] */;
    %855 = @func_3870(%853, %854) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(8, 3, 16), float64], Tensor[(1, 384), float32], Tensor[(756), float64]) */;
    %856 = @func_6805() /* ty=Tensor[(2, 8, 2), bool] */;
    %857 = %850.0;
    %858 = %855.1;
    (%856, %857, %var_8055, %858, %var_8062, meta[relay.Constant][64] /* ty=Tensor[(756), float64] */)
  };
  %859(%var_8073, %var_8074) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(6, 7, 15), float32], Tensor[(630), float32], Tensor[(8, 3, 16), float64], Tensor[(384), float32], Tensor[(756), float64]) */
}

def @func_10602() -> (Tensor[(2, 8, 2), uint32],) {
  %860 = @func_10044() /* ty=Tensor[(2, 8, 2), uint32] */;
  (%860,)
}

def @func_11547() -> (Tensor[(2, 8, 2), float64],) {
  @func_11545() /* ty=(Tensor[(2, 8, 2), float64],) */
}

def @func_10604() -> (Tensor[(2, 8, 2), uint32],) {
  @func_10602() /* ty=(Tensor[(2, 8, 2), uint32],) */
}

def @func_12751() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), uint32]) {
  %861 = @func_3907() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %862 = %861.0;
  %863 = @func_12268() /* ty=Tensor[(2, 8, 2), uint32] */;
  (%862, %863)
}

def @func_8791() -> (Tensor[(4, 364), float32], Tensor[(2, 8, 2), bool]) {
  @func_8789() /* ty=(Tensor[(4, 364), float32], Tensor[(2, 8, 2), bool]) */
}

def @func_9490() -> Tensor[(4, 364), float32] {
  %865 = fn () -> Tensor[(4, 364), float32] {
    %864 = @func_7471() /* ty=(Tensor[(90), float64], Tensor[(4, 364), float32], Tensor[(660, 2), float32], Tensor[(2, 8, 2), bool]) */;
    %864.1
  };
  %865() /* ty=Tensor[(4, 364), float32] */
}

def @func_15858(%var_15857: Tensor[(4, 364), float32]) -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(4, 364), int32]) {
  %877 = fn (%var_15848: Tensor[(4, 364), float32]) -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(4, 364), int32]) {
    %866 = @func_10185() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), int8]) */;
    %867 = @func_7471() /* ty=(Tensor[(90), float64], Tensor[(4, 364), float32], Tensor[(660, 2), float32], Tensor[(2, 8, 2), bool]) */;
    %868 = %867.1;
    %869 = cast(%var_15848, dtype="int32") /* ty=Tensor[(4, 364), int32] */;
    %870 = shape_of(%868, dtype="int32") /* ty=Tensor[(2), int32] */;
    %871 = cast(%868, dtype="int32") /* ty=Tensor[(4, 364), int32] */;
    %872 = dyn.reshape(%869, %870, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
    %873 = @func_13917() /* ty=Tensor[(2, 8, 2), bool] */;
    %874 = @func_4042() /* ty=Tensor[(2, 8, 2), bool] */;
    %875 = %866.0;
    %876 = bitwise_or(%871, %872) /* ty=Tensor[(4, 364), int32] */;
    (%873, %874, %875, %876)
  };
  %877(%var_15857) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(4, 364), int32]) */
}

def @func_7267() -> Tensor[(2, 8, 2), bool] {
  %878 = @func_4222() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %878.0
}

def @func_6865() -> (Tensor[(2, 8, 2), bool],) {
  %879 = @func_4086() /* ty=Tensor[(2, 8, 2), bool] */;
  (%879,)
}

def @func_5990(%var_5988: Tensor[(384), float32], %var_5989: Tensor[(756), float64]) -> (Tensor[(2, 8, 2), bool], Tensor[(384), float32], Tensor[(756), float64], Tensor[(80, 2), int16], Tensor[(5, 4, 8), float64], Tensor[(1, 384), float32]) {
  %896 = fn (%var_5936: Tensor[(384), float32], %var_5937: Tensor[(756), float64]) -> (Tensor[(2, 8, 2), bool], Tensor[(384), float32], Tensor[(756), float64], Tensor[(80, 2), int16], Tensor[(5, 4, 8), float64], Tensor[(1, 384), float32]) {
    %880 = @func_3907() /* ty=(Tensor[(2, 8, 2), bool],) */;
    %881 = cast(meta[relay.Constant][65] /* ty=Tensor[(80, 2), int16] */, dtype="int16") /* ty=Tensor[(80, 2), int16] */;
    %882 = reshape(%881, newshape=[4, 40]) /* ty=Tensor[(4, 40), int16] */;
    %883 = @func_5090(%882) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(5, 4, 8), int16], Tensor[(4, 40), int16], Tensor[(540), float64]) */;
    %884 = %883.1;
    %885 = cast(%884, dtype="float64") /* ty=Tensor[(5, 4, 8), float64] */;
    %886 = cast(%var_5936, dtype="float32") /* ty=Tensor[(384), float32] */;
    %887 = cast(%var_5937, dtype="float64") /* ty=Tensor[(756), float64] */;
    %888 = reshape(%886, newshape=[1, 384]) /* ty=Tensor[(1, 384), float32] */;
    %889 = reshape(%887, newshape=[756]) /* ty=Tensor[(756), float64] */;
    %890 = @func_3870(%888, %889) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(8, 3, 16), float64], Tensor[(1, 384), float32], Tensor[(756), float64]) */;
    %891 = %890.2;
    %892 = cast(%891, dtype="float32") /* ty=Tensor[(1, 384), float32] */;
    %893 = %880.0;
    %894 = cos(%885) /* ty=Tensor[(5, 4, 8), float64] */;
    %895 = tan(%892) /* ty=Tensor[(1, 384), float32] */;
    (%893, %var_5936, %var_5937, meta[relay.Constant][65] /* ty=Tensor[(80, 2), int16] */, %894, %895)
  };
  %896(%var_5988, %var_5989) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(384), float32], Tensor[(756), float64], Tensor[(80, 2), int16], Tensor[(5, 4, 8), float64], Tensor[(1, 384), float32]) */
}

def @func_11418() -> Tensor[(2, 8, 2), bool] {
  %898 = fn () -> Tensor[(2, 8, 2), bool] {
    %897 = @func_3661() /* ty=(Tensor[(2, 8, 2), bool],) */;
    %897.0
  };
  %898() /* ty=Tensor[(2, 8, 2), bool] */
}

def @func_7920(%var_7895: Tensor[(588, 1), float64], %var_7896: Tensor[(1320), float64], %var_7908: Tensor[(588, 1), float64]) -> (Tensor[(2, 8, 2), bool], Tensor[(1320), float64], Tensor[(588, ?), float32], Tensor[(2, 8, 2), bool], Tensor[(588, ?), bool], Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) {
  %899 = cast(%var_7895, dtype="float64") /* ty=Tensor[(588, 1), float64] */;
  %900 = cast(%var_7896, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %901 = reshape(%899, newshape=[588]) /* ty=Tensor[(588), float64] */;
  %902 = reshape(%900, newshape=[1320]) /* ty=Tensor[(1320), float64] */;
  %903 = @func_4656(%901, %902) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(660, 2), float64], Tensor[(588), float64], Tensor[(1320), float64], Tensor[(5, 12, 9), float64], Tensor[(540), float64], Tensor[(6, 3, 5), float64], Tensor[(90), float64]) */;
  %904 = %903.2;
  %905 = cast(%904, dtype="float32") /* ty=Tensor[(588), float32] */;
  %906 = shape_of(%var_7895, dtype="int32") /* ty=Tensor[(2), int32] */;
  %907 = cast(%var_7895, dtype="float32") /* ty=Tensor[(588, 1), float32] */;
  %908 = dyn.reshape(%905, %906, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %909 = @func_4305() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %910 = cast(%var_7908, dtype="bool") /* ty=Tensor[(588, 1), bool] */;
  %911 = shape_of(%var_7895, dtype="int32") /* ty=Tensor[(2), int32] */;
  %912 = cast(%var_7895, dtype="bool") /* ty=Tensor[(588, 1), bool] */;
  %913 = dyn.reshape(%910, %911, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %914 = @func_6382() /* ty=Tensor[(2, 8, 2), bool] */;
  %915 = mod(%907, %908) /* ty=Tensor[(588, ?), float32] */;
  %916 = %909.1;
  %917 = less_equal(%912, %913) /* ty=Tensor[(588, ?), bool] */;
  %918 = @func_6805() /* ty=Tensor[(2, 8, 2), bool] */;
  %919 = @func_7267() /* ty=Tensor[(2, 8, 2), bool] */;
  (%914, %var_7896, %915, %916, %917, %918, %919)
}

def @func_12602() -> (Tensor[(2, 8, 2), bool], Tensor[(4, 364), float32]) {
  %924 = fn () -> (Tensor[(2, 8, 2), bool], Tensor[(4, 364), float32]) {
    %920 = @func_9963() /* ty=(Tensor[(2, 8, 2), bool],) */;
    %921 = @func_8730() /* ty=(Tensor[(4, 364), float32], Tensor[(2, 8, 2), bool]) */;
    %922 = %920.0;
    %923 = %921.0;
    (%922, %923)
  };
  %924() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(4, 364), float32]) */
}

def @func_4284() -> Tensor[(2, 8, 2), float32] {
  %927 = fn () -> Tensor[(2, 8, 2), float32] {
    %925 = @func_4042() /* ty=Tensor[(2, 8, 2), bool] */;
    %926 = cast(%925, dtype="float32") /* ty=Tensor[(2, 8, 2), float32] */;
    acos(%926) /* ty=Tensor[(2, 8, 2), float32] */
  };
  %927() /* ty=Tensor[(2, 8, 2), float32] */
}

def @func_7947() -> Tensor[(2, 8, 2), bool] {
  @func_7945() /* ty=Tensor[(2, 8, 2), bool] */
}

def @func_14687() -> Tensor[(2, 8, 2), bool] {
  %928 = fn () -> Tensor[(2, 8, 2), bool] {
    @func_4042() /* ty=Tensor[(2, 8, 2), bool] */
  };
  %928() /* ty=Tensor[(2, 8, 2), bool] */
}

def @func_7396() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) {
  @func_7394() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */
}

def @func_8230() -> Tensor[(2, 8, 2), bool] {
  @func_7733() /* ty=Tensor[(2, 8, 2), bool] */
}

def @func_3661() -> (Tensor[(2, 8, 2), bool],) {
  %929 = @func_3493() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %930 = %929.1;
  (%930,)
}

def @func_12553() -> Tensor[(2, 8, 2), bool] {
  @func_10095() /* ty=Tensor[(2, 8, 2), bool] */
}

def @func_5792(%var_5763: Tensor[(1320), float64], %var_5764: Tensor[(1456), float32], %var_5765: Tensor[(792), int8], %var_5776: Tensor[(588), float64], %var_5787: Tensor[(3, 30), float64]) -> (Tensor[(2, 8, 2), int8], Tensor[(792), int8], Tensor[(1320), float64], Tensor[(1456), float32], Tensor[(792), int8], Tensor[(1, 588), float64], Tensor[(588), float64], Tensor[(6, 3, 5), float64], Tensor[(3, 30), float64], Tensor[(588), float64]) {
  %931 = @func_3766() /* ty=(Tensor[(2, 8, 2), int8], Tensor[(2, 8, 2), float32]) */;
  %932 = cast(%var_5763, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %933 = cast(%var_5764, dtype="float32") /* ty=Tensor[(1456), float32] */;
  %934 = cast(%var_5765, dtype="int8") /* ty=Tensor[(792), int8] */;
  %935 = reshape(%932, newshape=[660, 2]) /* ty=Tensor[(660, 2), float64] */;
  %936 = reshape(%933, newshape=[8, 182]) /* ty=Tensor[(8, 182), float32] */;
  %937 = reshape(%934, newshape=[792]) /* ty=Tensor[(792), int8] */;
  %938 = @func_5230(%935, %936, %937) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(660, 2), float64], Tensor[(2, 8, 2), bool], Tensor[(8, 182), uint16], Tensor[(2, 8, 2), int8], Tensor[(1456), float32], Tensor[(792), int8]) */;
  %939 = cast(%var_5776, dtype="float64") /* ty=Tensor[(588), float64] */;
  %940 = cast(%var_5763, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %941 = reshape(%939, newshape=[1, 588]) /* ty=Tensor[(1, 588), float64] */;
  %942 = reshape(%940, newshape=[1320]) /* ty=Tensor[(1320), float64] */;
  %943 = @func_5358(%941, %942) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(5, 12, 9), float64], Tensor[(540), float64], Tensor[(11, 12, 6), int32], Tensor[(792), int8], Tensor[(11, 12, 10), bool], Tensor[(1, 588), float64], Tensor[(1320), float64]) */;
  %944 = cast(%var_5787, dtype="float64") /* ty=Tensor[(3, 30), float64] */;
  %945 = reshape(%944, newshape=[6, 3, 5]) /* ty=Tensor[(6, 3, 5), float64] */;
  %946 = cast(%var_5787, dtype="float64") /* ty=Tensor[(3, 30), float64] */;
  %947 = %943.6;
  %948 = cast(%947, dtype="float64") /* ty=Tensor[(1, 588), float64] */;
  %949 = reshape(%946, newshape=[90]) /* ty=Tensor[(90), float64] */;
  %950 = reshape(%948, newshape=[588]) /* ty=Tensor[(588), float64] */;
  %951 = @func_4715(%949, %950) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(6, 3, 5), float64], Tensor[(90), float64], Tensor[(588), float64], Tensor[(588), float64], Tensor[(1320, 1), float64], Tensor[(11, 6, 6), float32], Tensor[(66, 6), float32]) */;
  %952 = %931.0;
  %953 = %938.6;
  %954 = @func_3616(%945) /* ty=Tensor[(6, 3, 5), float64] */;
  %955 = %951.3;
  (%952, %953, %var_5763, %var_5764, %var_5765, %947, %var_5776, %954, %var_5787, %955)
}

def @func_12923() -> (Tensor[(4, 40), float32],) {
  %957 = fn () -> (Tensor[(4, 40), float32],) {
    %956 = @func_10792() /* ty=Tensor[(4, 40), float32] */;
    (%956,)
  };
  %957() /* ty=(Tensor[(4, 40), float32],) */
}

def @func_15256() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), float32]) {
  %961 = fn () -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), float32]) {
    %958 = @func_3766() /* ty=(Tensor[(2, 8, 2), int8], Tensor[(2, 8, 2), float32]) */;
    %959 = @func_6805() /* ty=Tensor[(2, 8, 2), bool] */;
    %960 = %958.1;
    (%959, %960)
  };
  %961() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), float32]) */
}

def @func_12542(%var_12541: Tensor[(540), float64]) -> (Tensor[(2, 8, 2), bool], Tensor[(5, 12, 9), float64], Tensor[(540), float64]) {
  %967 = fn (%var_12530: Tensor[(540), float64]) -> (Tensor[(2, 8, 2), bool], Tensor[(5, 12, 9), float64], Tensor[(540), float64]) {
    %962 = @func_5009() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
    %963 = cast(%var_12530, dtype="float64") /* ty=Tensor[(540), float64] */;
    %964 = reshape(%963, newshape=[5, 12, 9]) /* ty=Tensor[(5, 12, 9), float64] */;
    %965 = %962.1;
    %966 = @func_839(%964) /* ty=Tensor[(5, 12, 9), float64] */;
    (%965, %966, %var_12530)
  };
  %967(%var_12541) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(5, 12, 9), float64], Tensor[(540), float64]) */
}

def @func_13285(%var_13284: Tensor[(4, 364), float32]) -> (Tensor[(2, 8, 2), bool], Tensor[(4, 364), float64]) {
  %977 = fn (%var_13274: Tensor[(4, 364), float32]) -> (Tensor[(2, 8, 2), bool], Tensor[(4, 364), float64]) {
    %968 = @func_10888() /* ty=(Tensor[(2, 8, 2), bool],) */;
    %969 = @func_12601() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(4, 364), float32]) */;
    %970 = %969.1;
    %971 = cast(%var_13274, dtype="float64") /* ty=Tensor[(4, 364), float64] */;
    %972 = shape_of(%970, dtype="int32") /* ty=Tensor[(2), int32] */;
    %973 = cast(%970, dtype="float64") /* ty=Tensor[(4, 364), float64] */;
    %974 = dyn.reshape(%971, %972, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %975 = %968.0;
    %976 = add(%973, %974) /* ty=Tensor[(4, 364), float64] */;
    (%975, %976)
  };
  %977(%var_13284) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(4, 364), float64]) */
}

def @func_11914() -> (Tensor[(1456), float32], Tensor[(2, 8, 2), float32]) {
  @func_11912() /* ty=(Tensor[(1456), float32], Tensor[(2, 8, 2), float32]) */
}

def @func_4222() -> (Tensor[(2, 8, 2), bool],) {
  %978 = @func_4086() /* ty=Tensor[(2, 8, 2), bool] */;
  (%978,)
}

def @func_10978() -> Tensor[(2, 8, 2), bool] {
  %980 = fn () -> Tensor[(2, 8, 2), bool] {
    %979 = @func_6596() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
    %979.1
  };
  %980() /* ty=Tensor[(2, 8, 2), bool] */
}

def @func_4087() -> Tensor[(2, 8, 2), bool] {
  %982 = fn () -> Tensor[(2, 8, 2), bool] {
    %981 = @func_3661() /* ty=(Tensor[(2, 8, 2), bool],) */;
    %981.0
  };
  %982() /* ty=Tensor[(2, 8, 2), bool] */
}

def @func_6382() -> Tensor[(2, 8, 2), bool] {
  @func_6372() /* ty=Tensor[(2, 8, 2), bool] */
}

def @func_5361(%var_5359: Tensor[(1, 588), float64], %var_5360: Tensor[(1320), float64]) -> (Tensor[(2, 8, 2), bool], Tensor[(5, 12, 9), float64], Tensor[(540), float64], Tensor[(11, 12, 6), int32], Tensor[(792), int8], Tensor[(11, 12, 10), bool], Tensor[(1, 588), float64], Tensor[(1320), float64]) {
  %997 = fn (%var_5344: Tensor[(1, 588), float64], %var_5345: Tensor[(1320), float64]) -> (Tensor[(2, 8, 2), bool], Tensor[(5, 12, 9), float64], Tensor[(540), float64], Tensor[(11, 12, 6), int32], Tensor[(792), int8], Tensor[(11, 12, 10), bool], Tensor[(1, 588), float64], Tensor[(1320), float64]) {
    %983 = cast(meta[relay.Constant][66] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
    %984 = reshape(%983, newshape=[5, 12, 9]) /* ty=Tensor[(5, 12, 9), float64] */;
    %985 = cast(meta[relay.Constant][67] /* ty=Tensor[(792), int8] */, dtype="int8") /* ty=Tensor[(792), int8] */;
    %986 = reshape(%985, newshape=[792]) /* ty=Tensor[(792), int8] */;
    %987 = @func_3978(%986) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(11, 12, 6), int32]) */;
    %988 = cast(%var_5344, dtype="float64") /* ty=Tensor[(1, 588), float64] */;
    %989 = cast(%var_5345, dtype="float64") /* ty=Tensor[(1320), float64] */;
    %990 = reshape(%988, newshape=[14, 6, 7]) /* ty=Tensor[(14, 6, 7), float64] */;
    %991 = reshape(%989, newshape=[660, 2]) /* ty=Tensor[(660, 2), float64] */;
    %992 = @func_4025(%990, %991) /* ty=(Tensor[(14, 6, 7), float64], Tensor[(11, 12, 10), bool], Tensor[(660, 2), float64]) */;
    %993 = @func_5247() /* ty=Tensor[(2, 8, 2), bool] */;
    %994 = @func_839(%984) /* ty=Tensor[(5, 12, 9), float64] */;
    %995 = %987.1;
    %996 = %992.1;
    (%993, %994, meta[relay.Constant][66] /* ty=Tensor[(540), float64] */, %995, meta[relay.Constant][67] /* ty=Tensor[(792), int8] */, %996, %var_5344, %var_5345)
  };
  %997(%var_5359, %var_5360) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(5, 12, 9), float64], Tensor[(540), float64], Tensor[(11, 12, 6), int32], Tensor[(792), int8], Tensor[(11, 12, 10), bool], Tensor[(1, 588), float64], Tensor[(1320), float64]) */
}

def @func_16139(%var_16137: Tensor[(384), float32]) -> (Tensor[(2, 8, 2), float64], Tensor[(2, 8, 2), bool], Tensor[(630), float32], Tensor[(384), float32]) {
  @func_16136(%var_16137) /* ty=(Tensor[(2, 8, 2), float64], Tensor[(2, 8, 2), bool], Tensor[(630), float32], Tensor[(384), float32]) */
}

def @func_13829() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) {
  %1000 = fn () -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) {
    %998 = @func_11218() /* ty=Tensor[(2, 8, 2), bool] */;
    %999 = @func_5247() /* ty=Tensor[(2, 8, 2), bool] */;
    (%998, %999)
  };
  %1000() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */
}

def @func_12718() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(14, 16, 12), uint64], Tensor[(54, 14), float64], Tensor[(96, 28), float64]) {
  %1001 = @func_3493() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %1002 = @func_12601() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(4, 364), float32]) */;
  %1003 = cast(meta[relay.Constant][68] /* ty=Tensor[(96, 28), uint64] */, dtype="uint64") /* ty=Tensor[(96, 28), uint64] */;
  %1004 = cast(meta[relay.Constant][68] /* ty=Tensor[(96, 28), uint64] */, dtype="uint64") /* ty=Tensor[(96, 28), uint64] */;
  %1005 = cast(meta[relay.Constant][69] /* ty=Tensor[(54, 14), float64] */, dtype="float64") /* ty=Tensor[(54, 14), float64] */;
  %1006 = reshape(%1003, newshape=[14, 16, 12]) /* ty=Tensor[(14, 16, 12), uint64] */;
  %1007 = reshape(%1004, newshape=[14, 16, 12]) /* ty=Tensor[(14, 16, 12), uint64] */;
  %1008 = reshape(%1005, newshape=[756]) /* ty=Tensor[(756), float64] */;
  %1009 = @func_5463(%1006, %1007, %1008) /* ty=(Tensor[(14, 16, 12), uint64], Tensor[(8, 3, 16), float64], Tensor[(384), float32], Tensor[(756), float64], Tensor[(396), float32], Tensor[(1456), float32]) */;
  %1010 = cast(meta[relay.Constant][70] /* ty=Tensor[(96, 28), uint64] */, dtype="float64") /* ty=Tensor[(96, 28), float64] */;
  %1011 = shape_of(meta[relay.Constant][68] /* ty=Tensor[(96, 28), uint64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1012 = cast(meta[relay.Constant][68] /* ty=Tensor[(96, 28), uint64] */, dtype="float64") /* ty=Tensor[(96, 28), float64] */;
  %1013 = dyn.reshape(%1010, %1011, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %1014 = %1001.1;
  %1015 = %1002.0;
  %1016 = %1009.0;
  %1017 = divide(%1012, %1013) /* ty=Tensor[(96, 28), float64] */;
  (%1014, %1015, %1016, meta[relay.Constant][69] /* ty=Tensor[(54, 14), float64] */, %1017)
}

def @func_8674() -> (Tensor[(2, 8, 2), bool],) {
  @func_8672() /* ty=(Tensor[(2, 8, 2), bool],) */
}

def @func_6568(%var_6530: Tensor[(2, 8, 2), bool]) -> (Tensor[(2, 8, 2), int16], Tensor[(2, 8, 2), bool]) {
  %1018 = @func_4305() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %1019 = %1018.1;
  %1020 = cast(%var_6530, dtype="int16") /* ty=Tensor[(2, 8, 2), int16] */;
  %1021 = shape_of(%1019, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1022 = cast(%1019, dtype="int16") /* ty=Tensor[(2, 8, 2), int16] */;
  %1023 = dyn.reshape(%1020, %1021, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1024 = @func_5009() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %1025 = bitwise_or(%1022, %1023) /* ty=Tensor[(2, 8, 2), int16] */;
  %1026 = %1024.1;
  (%1025, %1026)
}

def @func_14884(%var_14882: Tensor[(10, 8, 7), bool], %var_14883: Tensor[(10, 8, 7), bool]) -> Tensor[(10, 8, 7), bool] {
  %1031 = fn (%var_14876: Tensor[(10, 8, 7), bool], %var_14877: Tensor[(10, 8, 7), bool]) -> Tensor[(10, 8, 7), bool] {
    %1027 = cast(%var_14877, dtype="bool") /* ty=Tensor[(10, 8, 7), bool] */;
    %1028 = shape_of(%var_14876, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1029 = cast(%var_14876, dtype="bool") /* ty=Tensor[(10, 8, 7), bool] */;
    %1030 = dyn.reshape(%1027, %1028, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    logical_or(%1029, %1030) /* ty=Tensor[(10, 8, 7), bool] */
  };
  %1031(%var_14882, %var_14883) /* ty=Tensor[(10, 8, 7), bool] */
}

def @func_12421() -> Tensor[(2, 8, 2), bool] {
  @func_12419() /* ty=Tensor[(2, 8, 2), bool] */
}

def @func_12555() -> Tensor[(2, 8, 2), bool] {
  @func_12553() /* ty=Tensor[(2, 8, 2), bool] */
}

def @func_13146() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) {
  %1040 = fn () -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) {
    %1032 = @func_11196() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
    %1033 = @func_6372() /* ty=Tensor[(2, 8, 2), bool] */;
    %1034 = cast(%1033, dtype="float32") /* ty=Tensor[(2, 8, 2), float32] */;
    %1035 = reshape(%1034, newshape=[2, 8, 2]) /* ty=Tensor[(2, 8, 2), float32] */;
    %1036 = @func_9963() /* ty=(Tensor[(2, 8, 2), bool],) */;
    %1037 = %1032.0;
    %1038 = @func_10239(%1035) /* ty=Tensor[(2, 8, 2), bool] */;
    %1039 = %1036.0;
    (%1037, %1033, %1038, %1039)
  };
  %1040() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */
}

def @func_6330(%var_6328: Tensor[(1, 7, 2), float32]) -> Tensor[(?, 7, 2), float64] {
  @func_6327(%var_6328) /* ty=Tensor[(?, 7, 2), float64] */
}

def @func_1180(%var_1136: Tensor[(7, 12, 12), float64], %var_1158: Tensor[(756), float64], %var_1159: Tensor[(540), float64]) -> (Tensor[(7, 12, 12), float64], Tensor[(540), float64], Tensor[(756), float64], Tensor[(540), float64], Tensor[(5, 12, 9), float64]) {
  %1041 = cast(%var_1136, dtype="float64") /* ty=Tensor[(7, 12, 12), float64] */;
  %1042 = shape_of(meta[relay.Constant][71] /* ty=Tensor[(7, 12, 12), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1043 = cast(meta[relay.Constant][71] /* ty=Tensor[(7, 12, 12), float64] */, dtype="float64") /* ty=Tensor[(7, 12, 12), float64] */;
  %1044 = dyn.reshape(%1041, %1042, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1045 = cast(%var_1158, dtype="float64") /* ty=Tensor[(756), float64] */;
  %1046 = cast(%var_1159, dtype="float64") /* ty=Tensor[(540), float64] */;
  %1047 = reshape(%1045, newshape=[6, 14, 9]) /* ty=Tensor[(6, 14, 9), float64] */;
  %1048 = reshape(%1046, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %1049 = @func_1105(%1047, %1048) /* ty=(Tensor[(6, 14, 9), float64], Tensor[(5, 12, 9), float64], Tensor[(540), float64], Tensor[(5, 12, 9), float64], Tensor[(5, 12, 9), float64]) */;
  %1050 = cast(%var_1159, dtype="float64") /* ty=Tensor[(540), float64] */;
  %1051 = reshape(%1050, newshape=[5, 12, 9]) /* ty=Tensor[(5, 12, 9), float64] */;
  %1052 = power(%1043, %1044) /* ty=Tensor[(7, 12, 12), float64] */;
  %1053 = %1049.2;
  %1054 = @func_839(%1051) /* ty=Tensor[(5, 12, 9), float64] */;
  (%1052, %1053, %var_1158, %var_1159, %1054)
}

def @func_9867(%var_9769: Tensor[(756), float64], %var_9808: Tensor[(160), int16], %var_9858: Tensor[(36, 22), int8], %var_9865: Tensor[(1, 1456), float32]) -> (Tensor[(2, 8, 2), bool], Tensor[(9, 6, 13), float64], Tensor[(702), float64], Tensor[(540), float64], Tensor[(504, 2), float64], Tensor[(756), float64], Tensor[(540), float64], Tensor[(2, 8, 2), bool], Tensor[(11, 6, 6), float32], Tensor[(6, 66), float32], Tensor[(2, 8, 2), bool], Tensor[(5, 4, 8), int16], Tensor[(160), int16], Tensor[(2, 8, 2), int8], Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(6, 7, 15), float32], Tensor[(630), float32], Tensor[(2, 8, 2), float32], Tensor[(11, 12, 6), int32], Tensor[(36, 22), int8], Tensor[(756), float64], Tensor[(1, 1456), float32]) {
  %1055 = @func_8672() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %1056 = cast(meta[relay.Constant][72] /* ty=Tensor[(702), float64] */, dtype="float64") /* ty=Tensor[(702), float64] */;
  %1057 = reshape(%1056, newshape=[9, 6, 13]) /* ty=Tensor[(9, 6, 13), float64] */;
  %1058 = cast(meta[relay.Constant][73] /* ty=Tensor[(504, 2), float64] */, dtype="float64") /* ty=Tensor[(504, 2), float64] */;
  %1059 = cast(%var_9769, dtype="float64") /* ty=Tensor[(756), float64] */;
  %1060 = cast(meta[relay.Constant][74] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %1061 = reshape(%1058, newshape=[7, 12, 12]) /* ty=Tensor[(7, 12, 12), float64] */;
  %1062 = reshape(%1059, newshape=[756]) /* ty=Tensor[(756), float64] */;
  %1063 = reshape(%1060, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %1064 = @func_1180(%1061, %1062, %1063) /* ty=(Tensor[(7, 12, 12), float64], Tensor[(540), float64], Tensor[(756), float64], Tensor[(540), float64], Tensor[(5, 12, 9), float64]) */;
  %1065 = @func_6180() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(6, 3, 5), float64], Tensor[(90), float64]) */;
  %1066 = cast(meta[relay.Constant][75] /* ty=Tensor[(6, 66), float32] */, dtype="float32") /* ty=Tensor[(6, 66), float32] */;
  %1067 = reshape(%1066, newshape=[11, 6, 6]) /* ty=Tensor[(11, 6, 6), float32] */;
  %1068 = @func_8799() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %1069 = cast(%var_9808, dtype="int16") /* ty=Tensor[(160), int16] */;
  %1070 = cast(meta[relay.Constant][74] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %1071 = reshape(%1069, newshape=[5, 4, 8]) /* ty=Tensor[(5, 4, 8), int16] */;
  %1072 = reshape(%1070, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %1073 = @func_4189(%1071, %1072) /* ty=(Tensor[(5, 4, 8), int16], Tensor[(5, 4, 8), float32], Tensor[(540), float64], Tensor[(540), float64]) */;
  %1074 = @func_3766() /* ty=(Tensor[(2, 8, 2), int8], Tensor[(2, 8, 2), float32]) */;
  %1075 = @func_7394() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %1076 = @func_3701() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %1077 = cast(meta[relay.Constant][76] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
  %1078 = reshape(%1077, newshape=[6, 7, 15]) /* ty=Tensor[(6, 7, 15), float32] */;
  %1079 = @func_7009(%1078) /* ty=(Tensor[(6, 7, 15), float32],) */;
  %1080 = @func_6712() /* ty=(Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), bool]) */;
  %1081 = cast(%var_9858, dtype="int8") /* ty=Tensor[(36, 22), int8] */;
  %1082 = reshape(%1081, newshape=[792]) /* ty=Tensor[(792), int8] */;
  %1083 = @func_3978(%1082) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(11, 12, 6), int32]) */;
  %1084 = cast(%var_9865, dtype="float32") /* ty=Tensor[(1, 1456), float32] */;
  %1085 = reshape(%1084, newshape=[1456]) /* ty=Tensor[(1456), float32] */;
  %1086 = @func_4901(%1085) /* ty=(Tensor[(2, 8, 2), float64], Tensor[(13, 8, 14), float32], Tensor[(1456), float32], Tensor[(2, 8, 2), int8], Tensor[(2, 8, 2), bool], Tensor[(7, 12, 12), float64], Tensor[(1008), float64], Tensor[(756), float64], Tensor[(540), float64]) */;
  %1087 = %1055.0;
  %1088 = @func_8505(%1057) /* ty=Tensor[(9, 6, 13), float64] */;
  %1089 = %1064.3;
  %1090 = %1065.0;
  %1091 = @func_1929(%1067) /* ty=Tensor[(11, 6, 6), float32] */;
  %1092 = %1068.0;
  %1093 = %1073.0;
  %1094 = %1074.0;
  %1095 = %1075.1;
  %1096 = %1076.0;
  %1097 = %1079.0;
  %1098 = %1080.0;
  %1099 = %1083.1;
  %1100 = %1086.7;
  (%1087, %1088, meta[relay.Constant][72] /* ty=Tensor[(702), float64] */, %1089, meta[relay.Constant][73] /* ty=Tensor[(504, 2), float64] */, %var_9769, meta[relay.Constant][74] /* ty=Tensor[(540), float64] */, %1090, %1091, meta[relay.Constant][75] /* ty=Tensor[(6, 66), float32] */, %1092, %1093, %var_9808, %1094, %1095, %1096, %1097, meta[relay.Constant][76] /* ty=Tensor[(630), float32] */, %1098, %1099, %var_9858, %1100, %var_9865)
}

def @func_7691() -> Tensor[(2, 8, 2), float32] {
  %1102 = fn () -> Tensor[(2, 8, 2), float32] {
    %1101 = @func_6712() /* ty=(Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), bool]) */;
    %1101.0
  };
  %1102() /* ty=Tensor[(2, 8, 2), float32] */
}

def @func_14374(%var_14373: float32) -> (Tensor[(2, 8, 2), bool], Tensor[(11, 6, 6), float32], float32, Tensor[(90), float64], Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) {
  %1113 = fn (%var_14318: float32) -> (Tensor[(2, 8, 2), bool], Tensor[(11, 6, 6), float32], float32, Tensor[(90), float64], Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) {
    %1103 = cast(%var_14318, dtype="float32") /* ty=float32 */;
    %1104 = reshape(%1103, newshape=[]) /* ty=float32 */;
    %1105 = @func_14221(%1104) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(11, 6, 6), float32], float32, Tensor[(130), float32]) */;
    %1106 = @func_10453() /* ty=(Tensor[(2, 8, 2), bool],) */;
    %1107 = @func_13917() /* ty=Tensor[(2, 8, 2), bool] */;
    %1108 = %1105.1;
    %1109 = @func_13065() /* ty=Tensor[(90), float64] */;
    %1110 = @func_4283() /* ty=Tensor[(2, 8, 2), float32] */;
    %1111 = %1106.0;
    %1112 = @func_4086() /* ty=Tensor[(2, 8, 2), bool] */;
    (%1107, %1108, %var_14318, %1109, %1110, %1111, %1112)
  };
  %1113(%var_14373) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(11, 6, 6), float32], float32, Tensor[(90), float64], Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */
}

def @func_3837(%var_3811: Tensor[(4, 364), float32]) -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(4, 364), float64], Tensor[(2, 8, 2), float32], Tensor[(13, 8, 14), float32], Tensor[(792), int8]) {
  %1114 = @func_3661() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %1115 = %1114.0;
  %1116 = cast(%1115, dtype="bool") /* ty=Tensor[(2, 8, 2), bool] */;
  %1117 = cast(meta[relay.Constant][77] /* ty=Tensor[(4, 364), float32] */, dtype="float32") /* ty=Tensor[(4, 364), float32] */;
  %1118 = reshape(%1116, newshape=[2, 8, 2]) /* ty=Tensor[(2, 8, 2), bool] */;
  %1119 = reshape(%1117, newshape=[1456]) /* ty=Tensor[(1456), float32] */;
  %1120 = @func_3555(%1118, %1119) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(660, 2), float64], Tensor[(1456), float32]) */;
  %1121 = cast(%var_3811, dtype="float64") /* ty=Tensor[(4, 364), float64] */;
  %1122 = shape_of(meta[relay.Constant][77] /* ty=Tensor[(4, 364), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1123 = cast(meta[relay.Constant][77] /* ty=Tensor[(4, 364), float32] */, dtype="float64") /* ty=Tensor[(4, 364), float64] */;
  %1124 = dyn.reshape(%1121, %1122, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %1125 = @func_3766() /* ty=(Tensor[(2, 8, 2), int8], Tensor[(2, 8, 2), float32]) */;
  %1126 = cast(meta[relay.Constant][78] /* ty=Tensor[(792), int8] */, dtype="int8") /* ty=Tensor[(792), int8] */;
  %1127 = reshape(%1126, newshape=[11, 12, 6]) /* ty=Tensor[(11, 12, 6), int8] */;
  %1128 = @func_3725(%1127) /* ty=(Tensor[(11, 12, 6), int8], Tensor[(13, 8, 14), float32], Tensor[(1456), float32]) */;
  %1129 = %1120.0;
  %1130 = minimum(%1123, %1124) /* ty=Tensor[(4, 364), float64] */;
  %1131 = %1125.1;
  %1132 = %1128.1;
  (%1115, %1129, %1130, %1131, %1132, meta[relay.Constant][78] /* ty=Tensor[(792), int8] */)
}

def @func_15897(%var_15894: Tensor[(1008), float64], %var_15895: Tensor[(756), float64], %var_15896: Tensor[(540), float64]) -> (Tensor[(2, 8, 2), uint32], Tensor[(5, 12, 9), float64], Tensor[(1008), float64], Tensor[(756), float64], Tensor[(540), float64], Tensor[(2, 8, 2), float32]) {
  @func_15892(%var_15894, %var_15895, %var_15896) /* ty=(Tensor[(2, 8, 2), uint32], Tensor[(5, 12, 9), float64], Tensor[(1008), float64], Tensor[(756), float64], Tensor[(540), float64], Tensor[(2, 8, 2), float32]) */
}

def @func_14849() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) {
  @func_14847() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */
}

def @func_8532(%var_8530: Tensor[(5, 15, 14), uint8], %var_8531: Tensor[(5, 15, 14), uint8]) -> (Tensor[(5, 15, 14), uint8], Tensor[(2, 8, 2), bool]) {
  %1140 = fn (%var_8520: Tensor[(5, 15, 14), uint8], %var_8521: Tensor[(5, 15, 14), uint8]) -> (Tensor[(5, 15, 14), uint8], Tensor[(2, 8, 2), bool]) {
    %1133 = cast(%var_8521, dtype="uint8") /* ty=Tensor[(5, 15, 14), uint8] */;
    %1134 = shape_of(%var_8520, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1135 = cast(%var_8520, dtype="uint8") /* ty=Tensor[(5, 15, 14), uint8] */;
    %1136 = dyn.reshape(%1133, %1134, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %1137 = @func_6837() /* ty=(Tensor[(2, 8, 2), bool],) */;
    %1138 = minimum(%1135, %1136) /* ty=Tensor[(5, 15, 14), uint8] */;
    %1139 = %1137.0;
    (%1138, %1139)
  };
  %1140(%var_8530, %var_8531) /* ty=(Tensor[(5, 15, 14), uint8], Tensor[(2, 8, 2), bool]) */
}

def @func_12857() -> Tensor[(2, 8, 2), bool] {
  @func_12855() /* ty=Tensor[(2, 8, 2), bool] */
}

def @func_14125() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) {
  %1141 = @func_8730() /* ty=(Tensor[(4, 364), float32], Tensor[(2, 8, 2), bool]) */;
  %1142 = @func_11961() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %1143 = %1141.1;
  %1144 = %1142.1;
  (%1143, %1144)
}

def @func_11198() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) {
  @func_11196() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */
}

def @func_7843(%var_7797: Tensor[(26, 5), float32]) -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(588), float64], Tensor[(1320), float64], Tensor[(2, 5, 13), float64], float32, Tensor[(26, 5), float32], Tensor[(11, 12, 10), bool], Tensor[(2, 8, 2), bool]) {
  %1145 = @func_3661() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %1146 = @func_6865() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %1147 = cast(meta[relay.Constant][79] /* ty=Tensor[(588), float64] */, dtype="float64") /* ty=Tensor[(588), float64] */;
  %1148 = cast(meta[relay.Constant][80] /* ty=Tensor[(1320), float64] */, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %1149 = reshape(%1147, newshape=[588]) /* ty=Tensor[(588), float64] */;
  %1150 = reshape(%1148, newshape=[1320]) /* ty=Tensor[(1320), float64] */;
  %1151 = @func_4656(%1149, %1150) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(660, 2), float64], Tensor[(588), float64], Tensor[(1320), float64], Tensor[(5, 12, 9), float64], Tensor[(540), float64], Tensor[(6, 3, 5), float64], Tensor[(90), float64]) */;
  %1152 = cast(0.853305f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %1153 = cast(%var_7797, dtype="float32") /* ty=Tensor[(26, 5), float32] */;
  %1154 = reshape(%1152, newshape=[]) /* ty=float32 */;
  %1155 = reshape(%1153, newshape=[2, 5, 13]) /* ty=Tensor[(2, 5, 13), float32] */;
  %1156 = @func_6069(%1154, %1155) /* ty=(Tensor[(2, 5, 13), float32], Tensor[(2, 5, 13), float64]) */;
  %1157 = cast(meta[relay.Constant][79] /* ty=Tensor[(588), float64] */, dtype="float64") /* ty=Tensor[(588), float64] */;
  %1158 = cast(meta[relay.Constant][80] /* ty=Tensor[(1320), float64] */, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %1159 = reshape(%1157, newshape=[1, 588]) /* ty=Tensor[(1, 588), float64] */;
  %1160 = reshape(%1158, newshape=[1320]) /* ty=Tensor[(1320), float64] */;
  %1161 = @func_5358(%1159, %1160) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(5, 12, 9), float64], Tensor[(540), float64], Tensor[(11, 12, 6), int32], Tensor[(792), int8], Tensor[(11, 12, 10), bool], Tensor[(1, 588), float64], Tensor[(1320), float64]) */;
  %1162 = %1145.0;
  %1163 = %1146.0;
  %1164 = %1151.0;
  %1165 = %1156.1;
  %1166 = %1161.5;
  %1167 = @func_5247() /* ty=Tensor[(2, 8, 2), bool] */;
  (%1162, %1163, %1164, meta[relay.Constant][79] /* ty=Tensor[(588), float64] */, meta[relay.Constant][80] /* ty=Tensor[(1320), float64] */, %1165, 0.853305f /* ty=float32 */, %var_7797, %1166, %1167)
}

def @func_15108() -> (Tensor[(2, 8, 2), bool], Tensor[(384), float32]) {
  %1168 = @func_10453() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %1169 = @func_9110() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(4, 40), float64], Tensor[(4, 40), uint32], Tensor[(8, 3, 16), float64], Tensor[(384), float32], Tensor[(756), float64]) */;
  %1170 = %1168.0;
  %1171 = %1169.4;
  (%1170, %1171)
}

def @func_16000() -> (Tensor[(2, 8, 2), bool],) {
  @func_15998() /* ty=(Tensor[(2, 8, 2), bool],) */
}

def @func_9021() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(90), float32], Tensor[(2, 8, 2), bool], Tensor[(384), float32], Tensor[(756), float64], Tensor[(540), float64], Tensor[(540), float64], Tensor[(2, 5, 13), float64], float32, Tensor[(130), float32]) {
  %1193 = fn () -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(90), float32], Tensor[(2, 8, 2), bool], Tensor[(384), float32], Tensor[(756), float64], Tensor[(540), float64], Tensor[(540), float64], Tensor[(2, 5, 13), float64], float32, Tensor[(130), float32]) {
    %1172 = cast(meta[relay.Constant][81] /* ty=Tensor[(90), float32] */, dtype="float32") /* ty=Tensor[(90), float32] */;
    %1173 = reshape(%1172, newshape=[6, 3, 5]) /* ty=Tensor[(6, 3, 5), float32] */;
    %1174 = @func_8650(%1173) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(6, 3, 5), uint64], Tensor[(2, 8, 2), bool], Tensor[(6, 3, 5), uint32]) */;
    %1175 = cast(meta[relay.Constant][82] /* ty=Tensor[(384), float32] */, dtype="float32") /* ty=Tensor[(384), float32] */;
    %1176 = cast(meta[relay.Constant][83] /* ty=Tensor[(756), float64] */, dtype="float64") /* ty=Tensor[(756), float64] */;
    %1177 = reshape(%1175, newshape=[384]) /* ty=Tensor[(384), float32] */;
    %1178 = reshape(%1176, newshape=[756]) /* ty=Tensor[(756), float64] */;
    %1179 = @func_5987(%1177, %1178) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(384), float32], Tensor[(756), float64], Tensor[(80, 2), int16], Tensor[(5, 4, 8), float64], Tensor[(1, 384), float32]) */;
    %1180 = cast(meta[relay.Constant][84] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
    %1181 = reshape(%1180, newshape=[540]) /* ty=Tensor[(540), float64] */;
    %1182 = @func_4004(%1181) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(5, 12, 9), float64], Tensor[(540), float64]) */;
    %1183 = cast(-6.10746f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %1184 = cast(meta[relay.Constant][85] /* ty=Tensor[(130), float32] */, dtype="float32") /* ty=Tensor[(130), float32] */;
    %1185 = reshape(%1183, newshape=[]) /* ty=float32 */;
    %1186 = reshape(%1184, newshape=[2, 5, 13]) /* ty=Tensor[(2, 5, 13), float32] */;
    %1187 = @func_6069(%1185, %1186) /* ty=(Tensor[(2, 5, 13), float32], Tensor[(2, 5, 13), float64]) */;
    %1188 = @func_6382() /* ty=Tensor[(2, 8, 2), bool] */;
    %1189 = %1174.0;
    %1190 = %1179.0;
    %1191 = %1182.2;
    %1192 = %1187.1;
    (%1188, %1189, meta[relay.Constant][81] /* ty=Tensor[(90), float32] */, %1190, meta[relay.Constant][82] /* ty=Tensor[(384), float32] */, meta[relay.Constant][83] /* ty=Tensor[(756), float64] */, %1191, meta[relay.Constant][84] /* ty=Tensor[(540), float64] */, %1192, -6.10746f /* ty=float32 */, meta[relay.Constant][85] /* ty=Tensor[(130), float32] */)
  };
  %1193() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(90), float32], Tensor[(2, 8, 2), bool], Tensor[(384), float32], Tensor[(756), float64], Tensor[(540), float64], Tensor[(540), float64], Tensor[(2, 5, 13), float64], float32, Tensor[(130), float32]) */
}

def @func_9951(%var_9949: float32) -> (Tensor[(5, 6, 3), bool], Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(1050), uint8], Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), bool]) {
  @func_9948(%var_9949) /* ty=(Tensor[(5, 6, 3), bool], Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(1050), uint8], Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), bool]) */
}

def @func_10046() -> Tensor[(2, 8, 2), uint32] {
  @func_10044() /* ty=Tensor[(2, 8, 2), uint32] */
}

def @func_10455() -> (Tensor[(2, 8, 2), bool],) {
  @func_10453() /* ty=(Tensor[(2, 8, 2), bool],) */
}

def @func_6838() -> (Tensor[(2, 8, 2), bool],) {
  %1195 = fn () -> (Tensor[(2, 8, 2), bool],) {
    %1194 = @func_5247() /* ty=Tensor[(2, 8, 2), bool] */;
    (%1194,)
  };
  %1195() /* ty=(Tensor[(2, 8, 2), bool],) */
}

def @func_3873(%var_3871: Tensor[(1, 384), float32], %var_3872: Tensor[(756), float64]) -> (Tensor[(2, 8, 2), bool], Tensor[(8, 3, 16), float64], Tensor[(1, 384), float32], Tensor[(756), float64]) {
  %1204 = fn (%var_3865: Tensor[(1, 384), float32], %var_3866: Tensor[(756), float64]) -> (Tensor[(2, 8, 2), bool], Tensor[(8, 3, 16), float64], Tensor[(1, 384), float32], Tensor[(756), float64]) {
    %1196 = @func_3493() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
    %1197 = cast(%var_3865, dtype="float32") /* ty=Tensor[(1, 384), float32] */;
    %1198 = cast(%var_3866, dtype="float64") /* ty=Tensor[(756), float64] */;
    %1199 = reshape(%1197, newshape=[8, 3, 16]) /* ty=Tensor[(8, 3, 16), float32] */;
    %1200 = reshape(%1198, newshape=[756]) /* ty=Tensor[(756), float64] */;
    %1201 = @func_2813(%1199, %1200) /* ty=(Tensor[(540), float64], Tensor[(270, 1), float32], Tensor[(756), float64], Tensor[(8, 3, 16), float64], Tensor[(8, 3, 16), float64]) */;
    %1202 = %1196.1;
    %1203 = %1201.3;
    (%1202, %1203, %var_3865, %var_3866)
  };
  %1204(%var_3871, %var_3872) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(8, 3, 16), float64], Tensor[(1, 384), float32], Tensor[(756), float64]) */
}

def @func_4593() -> Tensor[(2, 8, 2), int8] {
  %1205 = @func_3766() /* ty=(Tensor[(2, 8, 2), int8], Tensor[(2, 8, 2), float32]) */;
  %1205.0
}

def @func_9111() -> (Tensor[(2, 8, 2), bool], Tensor[(4, 40), float64], Tensor[(4, 40), uint32], Tensor[(8, 3, 16), float64], Tensor[(384), float32], Tensor[(756), float64]) {
  %1224 = fn () -> (Tensor[(2, 8, 2), bool], Tensor[(4, 40), float64], Tensor[(4, 40), uint32], Tensor[(8, 3, 16), float64], Tensor[(384), float32], Tensor[(756), float64]) {
    %1206 = cast(meta[relay.Constant][86] /* ty=Tensor[(160), int16] */, dtype="int16") /* ty=Tensor[(160), int16] */;
    %1207 = reshape(%1206, newshape=[4, 40]) /* ty=Tensor[(4, 40), int16] */;
    %1208 = @func_5090(%1207) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(5, 4, 8), int16], Tensor[(4, 40), int16], Tensor[(540), float64]) */;
    %1209 = %1208.2;
    %1210 = cast(%1209, dtype="float64") /* ty=Tensor[(4, 40), float64] */;
    %1211 = cast(meta[relay.Constant][86] /* ty=Tensor[(160), int16] */, dtype="uint32") /* ty=Tensor[(160), uint32] */;
    %1212 = shape_of(%1209, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1213 = cast(%1209, dtype="uint32") /* ty=Tensor[(4, 40), uint32] */;
    %1214 = dyn.reshape(%1211, %1212, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
    %1215 = cast(meta[relay.Constant][87] /* ty=Tensor[(384), float32] */, dtype="float32") /* ty=Tensor[(384), float32] */;
    %1216 = cast(meta[relay.Constant][88] /* ty=Tensor[(756), float64] */, dtype="float64") /* ty=Tensor[(756), float64] */;
    %1217 = reshape(%1215, newshape=[8, 3, 16]) /* ty=Tensor[(8, 3, 16), float32] */;
    %1218 = reshape(%1216, newshape=[756]) /* ty=Tensor[(756), float64] */;
    %1219 = @func_2813(%1217, %1218) /* ty=(Tensor[(540), float64], Tensor[(270, 1), float32], Tensor[(756), float64], Tensor[(8, 3, 16), float64], Tensor[(8, 3, 16), float64]) */;
    %1220 = @func_6428() /* ty=Tensor[(2, 8, 2), bool] */;
    %1221 = acos(%1210) /* ty=Tensor[(4, 40), float64] */;
    %1222 = bitwise_and(%1213, %1214) /* ty=Tensor[(4, 40), uint32] */;
    %1223 = %1219.4;
    (%1220, %1221, %1222, %1223, meta[relay.Constant][87] /* ty=Tensor[(384), float32] */, meta[relay.Constant][88] /* ty=Tensor[(756), float64] */)
  };
  %1224() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(4, 40), float64], Tensor[(4, 40), uint32], Tensor[(8, 3, 16), float64], Tensor[(384), float32], Tensor[(756), float64]) */
}

def @func_14482() -> Tensor[(540), float64] {
  @func_14480() /* ty=Tensor[(540), float64] */
}

def @func_4306() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) {
  %1228 = fn () -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) {
    %1225 = @func_3907() /* ty=(Tensor[(2, 8, 2), bool],) */;
    %1226 = @func_4042() /* ty=Tensor[(2, 8, 2), bool] */;
    %1227 = %1225.0;
    (%1226, %1227)
  };
  %1228() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */
}

def @func_16118() -> Tensor[(2, 8, 2), bool] {
  %1229 = fn () -> Tensor[(2, 8, 2), bool] {
    @func_4086() /* ty=Tensor[(2, 8, 2), bool] */
  };
  %1229() /* ty=Tensor[(2, 8, 2), bool] */
}

def @func_5605() -> (Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), int8]) {
  @func_5603() /* ty=(Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), int8]) */
}

def @func_8800() -> (Tensor[(2, 8, 2), bool],) {
  %1232 = fn () -> (Tensor[(2, 8, 2), bool],) {
    %1230 = @func_3907() /* ty=(Tensor[(2, 8, 2), bool],) */;
    %1231 = %1230.0;
    (%1231,)
  };
  %1232() /* ty=(Tensor[(2, 8, 2), bool],) */
}

def @func_5011() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) {
  @func_5009() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */
}

def @func_13621(%var_13564: Tensor[(96, 4), float32]) -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(13, 8, 14), float32], Tensor[(2, 8, 2), bool], Tensor[(756), float64], Tensor[(96, 4), float32], Tensor[(756), float64], Tensor[(792), uint16], Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), float32]) {
  %1233 = @func_4305() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %1234 = %1233.0;
  %1235 = cast(%1234, dtype="float32") /* ty=Tensor[(2, 8, 2), float32] */;
  %1236 = reshape(%1235, newshape=[2, 8, 2]) /* ty=Tensor[(2, 8, 2), float32] */;
  %1237 = cast(meta[relay.Constant][89] /* ty=Tensor[(792), int8] */, dtype="int8") /* ty=Tensor[(792), int8] */;
  %1238 = reshape(%1237, newshape=[11, 12, 6]) /* ty=Tensor[(11, 12, 6), int8] */;
  %1239 = @func_3725(%1238) /* ty=(Tensor[(11, 12, 6), int8], Tensor[(13, 8, 14), float32], Tensor[(1456), float32]) */;
  %1240 = @func_10239(%1236) /* ty=Tensor[(2, 8, 2), bool] */;
  %1241 = cast(%1240, dtype="bool") /* ty=Tensor[(2, 8, 2), bool] */;
  %1242 = reshape(%1241, newshape=[2, 8, 2]) /* ty=Tensor[(2, 8, 2), bool] */;
  %1243 = @func_6568(%1242) /* ty=(Tensor[(2, 8, 2), int16], Tensor[(2, 8, 2), bool]) */;
  %1244 = cast(%var_13564, dtype="float32") /* ty=Tensor[(96, 4), float32] */;
  %1245 = cast(meta[relay.Constant][90] /* ty=Tensor[(756), float64] */, dtype="float64") /* ty=Tensor[(756), float64] */;
  %1246 = reshape(%1244, newshape=[8, 3, 16]) /* ty=Tensor[(8, 3, 16), float32] */;
  %1247 = reshape(%1245, newshape=[756]) /* ty=Tensor[(756), float64] */;
  %1248 = @func_2813(%1246, %1247) /* ty=(Tensor[(540), float64], Tensor[(270, 1), float32], Tensor[(756), float64], Tensor[(8, 3, 16), float64], Tensor[(8, 3, 16), float64]) */;
  %1249 = cast(meta[relay.Constant][89] /* ty=Tensor[(792), int8] */, dtype="float32") /* ty=Tensor[(792), float32] */;
  %1250 = cos(%1249) /* ty=Tensor[(792), float32] */;
  %1251 = cast(%1250, dtype="float32") /* ty=Tensor[(792), float32] */;
  %1252 = sqrt(%1251) /* ty=Tensor[(792), float32] */;
  %1253 = @func_11272() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(?, 7, 2), float64], Tensor[(7, 2), float32], Tensor[(11, 12, 6), int32], Tensor[(540, 1), float64]) */;
  %1254 = %1253.3;
  %1255 = cast(%1254, dtype="uint16") /* ty=Tensor[(11, 12, 6), uint16] */;
  %1256 = shape_of(%1252, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1257 = cast(%1252, dtype="uint16") /* ty=Tensor[(792), uint16] */;
  %1258 = dyn.reshape(%1255, %1256, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %1259 = @func_11912() /* ty=(Tensor[(1456), float32], Tensor[(2, 8, 2), float32]) */;
  %1260 = @func_6712() /* ty=(Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), bool]) */;
  %1261 = %1239.1;
  %1262 = %1243.1;
  %1263 = %1248.2;
  %1264 = maximum(%1257, %1258) /* ty=Tensor[(792), uint16] */;
  %1265 = %1259.1;
  %1266 = %1260.0;
  (%1234, %1240, %1261, %1262, %1263, %var_13564, meta[relay.Constant][90] /* ty=Tensor[(756), float64] */, %1264, %1265, %1266)
}

def @func_7009(%var_6998: Tensor[(6, 7, 15), float32]) -> (Tensor[(6, 7, 15), float32],) {
  %1267 = cast(%var_6998, dtype="float32") /* ty=Tensor[(6, 7, 15), float32] */;
  %1268 = rsqrt(%1267) /* ty=Tensor[(6, 7, 15), float32] */;
  %1269 = cast(%1268, dtype="float32") /* ty=Tensor[(6, 7, 15), float32] */;
  %1270 = atan(%1269) /* ty=Tensor[(6, 7, 15), float32] */;
  (%1270,)
}

def @func_2540(%var_2538: Tensor[(13, 8, 14), float32]) -> (Tensor[(13, 8, 14), float32], Tensor[(396), float32], Tensor[(660, 2), float64]) {
  @func_2537(%var_2538) /* ty=(Tensor[(13, 8, 14), float32], Tensor[(396), float32], Tensor[(660, 2), float64]) */
}

def @func_14923(%var_14922: Tensor[(15, 7, 5), float64]) -> Tensor[(15, 7, 5), float64] {
  %1272 = fn (%var_14906: Tensor[(15, 7, 5), float64]) -> Tensor[(15, 7, 5), float64] {
    %1271 = cast(%var_14906, dtype="float64") /* ty=Tensor[(15, 7, 5), float64] */;
    atanh(%1271) /* ty=Tensor[(15, 7, 5), float64] */
  };
  %1272(%var_14922) /* ty=Tensor[(15, 7, 5), float64] */
}

def @func_11874() -> Tensor[(2, 8, 2), bool] {
  %1274 = fn () -> Tensor[(2, 8, 2), bool] {
    %1273 = @func_8672() /* ty=(Tensor[(2, 8, 2), bool],) */;
    %1273.0
  };
  %1274() /* ty=Tensor[(2, 8, 2), bool] */
}

def @func_13749() -> (Tensor[(2, 8, 2), float32],) {
  %1276 = fn () -> (Tensor[(2, 8, 2), float32],) {
    %1275 = @func_7690() /* ty=Tensor[(2, 8, 2), float32] */;
    (%1275,)
  };
  %1276() /* ty=(Tensor[(2, 8, 2), float32],) */
}

def @func_8508(%var_8506: Tensor[(9, 6, 13), float64]) -> Tensor[(9, 6, 13), float64] {
  @func_8505(%var_8506) /* ty=Tensor[(9, 6, 13), float64] */
}

def @func_14809() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(792), int8], Tensor[(2, 8, 2), bool]) {
  @func_14807() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(792), int8], Tensor[(2, 8, 2), bool]) */
}

def @func_4901(%var_4866: Tensor[(1456), float32]) -> (Tensor[(2, 8, 2), float64], Tensor[(13, 8, 14), float32], Tensor[(1456), float32], Tensor[(2, 8, 2), int8], Tensor[(2, 8, 2), bool], Tensor[(7, 12, 12), float64], Tensor[(1008), float64], Tensor[(756), float64], Tensor[(540), float64]) {
  %1277 = @func_3907() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %1278 = %1277.0;
  %1279 = cast(%1278, dtype="float64") /* ty=Tensor[(2, 8, 2), float64] */;
  %1280 = cast(%var_4866, dtype="float32") /* ty=Tensor[(1456), float32] */;
  %1281 = reshape(%1280, newshape=[13, 8, 14]) /* ty=Tensor[(13, 8, 14), float32] */;
  %1282 = @func_2537(%1281) /* ty=(Tensor[(13, 8, 14), float32], Tensor[(396), float32], Tensor[(660, 2), float64]) */;
  %1283 = @func_4222() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %1284 = cast(meta[relay.Constant][91] /* ty=Tensor[(1008), float64] */, dtype="float64") /* ty=Tensor[(1008), float64] */;
  %1285 = cast(meta[relay.Constant][92] /* ty=Tensor[(756), float64] */, dtype="float64") /* ty=Tensor[(756), float64] */;
  %1286 = cast(meta[relay.Constant][93] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %1287 = reshape(%1284, newshape=[7, 12, 12]) /* ty=Tensor[(7, 12, 12), float64] */;
  %1288 = reshape(%1285, newshape=[756]) /* ty=Tensor[(756), float64] */;
  %1289 = reshape(%1286, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %1290 = @func_1180(%1287, %1288, %1289) /* ty=(Tensor[(7, 12, 12), float64], Tensor[(540), float64], Tensor[(756), float64], Tensor[(540), float64], Tensor[(5, 12, 9), float64]) */;
  %1291 = atan(%1279) /* ty=Tensor[(2, 8, 2), float64] */;
  %1292 = %1282.0;
  %1293 = @func_4593() /* ty=Tensor[(2, 8, 2), int8] */;
  %1294 = %1283.0;
  %1295 = %1290.0;
  (%1291, %1292, %var_4866, %1293, %1294, %1295, meta[relay.Constant][91] /* ty=Tensor[(1008), float64] */, meta[relay.Constant][92] /* ty=Tensor[(756), float64] */, meta[relay.Constant][93] /* ty=Tensor[(540), float64] */)
}

def @func_6596() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) {
  %1296 = @func_3907() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %1297 = @func_4305() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %1298 = %1296.0;
  %1299 = %1297.1;
  (%1298, %1299)
}

def @func_16084() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(11, 12, 10), bool], Tensor[(1320, 1), float64], Tensor[(2, 8, 2), float64], Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), bool]) {
  @func_16082() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(11, 12, 10), bool], Tensor[(1320, 1), float64], Tensor[(2, 8, 2), float64], Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), bool]) */
}

def @func_7540() -> Tensor[(2, 8, 2), bool] {
  %1300 = fn () -> Tensor[(2, 8, 2), bool] {
    @func_6428() /* ty=Tensor[(2, 8, 2), bool] */
  };
  %1300() /* ty=Tensor[(2, 8, 2), bool] */
}

def @func_12403(%var_12401: Tensor[(5, 9, 6), float32], %var_12402: Tensor[(5, 9, 6), float32]) -> (Tensor[(2, 8, 2), bool], Tensor[(6, 45), float32], Tensor[(756), float64], Tensor[(5, 9, 6), float64], Tensor[(5, 9, 6), float32], Tensor[(2, 8, 2), bool], Tensor[(5, 9, 6), float32], Tensor[(5, 9, 6), bool], Tensor[(5, 9, 6), float64]) {
  %1331 = fn (%var_12351: Tensor[(5, 9, 6), float32], %var_12376: Tensor[(5, 9, 6), float32]) -> (Tensor[(2, 8, 2), bool], Tensor[(6, 45), float32], Tensor[(756), float64], Tensor[(5, 9, 6), float64], Tensor[(5, 9, 6), float32], Tensor[(2, 8, 2), bool], Tensor[(5, 9, 6), float32], Tensor[(5, 9, 6), bool], Tensor[(5, 9, 6), float64]) {
    %1301 = @func_6837() /* ty=(Tensor[(2, 8, 2), bool],) */;
    %1302 = cast(meta[relay.Constant][94] /* ty=Tensor[(6, 45), float32] */, dtype="float32") /* ty=Tensor[(6, 45), float32] */;
    %1303 = cast(meta[relay.Constant][95] /* ty=Tensor[(756), float64] */, dtype="float64") /* ty=Tensor[(756), float64] */;
    %1304 = cast(meta[relay.Constant][94] /* ty=Tensor[(6, 45), float32] */, dtype="float32") /* ty=Tensor[(6, 45), float32] */;
    %1305 = reshape(%1302, newshape=[5, 9, 6]) /* ty=Tensor[(5, 9, 6), float32] */;
    %1306 = reshape(%1303, newshape=[9, 84]) /* ty=Tensor[(9, 84), float64] */;
    %1307 = reshape(%1304, newshape=[5, 9, 6]) /* ty=Tensor[(5, 9, 6), float32] */;
    %1308 = @func_2457(%1305, %1306, %1307) /* ty=(Tensor[(5, 9, 6), int32], Tensor[(540), float64], Tensor[(540), float64], Tensor[(9, 84), int16], Tensor[(5, 9, 6), bool]) */;
    %1309 = %1308.4;
    %1310 = cast(%1309, dtype="float32") /* ty=Tensor[(5, 9, 6), float32] */;
    %1311 = log2(%1310) /* ty=Tensor[(5, 9, 6), float32] */;
    %1312 = cast(%1311, dtype="float64") /* ty=Tensor[(5, 9, 6), float64] */;
    %1313 = cast(%var_12351, dtype="float32") /* ty=Tensor[(5, 9, 6), float32] */;
    %1314 = shape_of(%1311, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1315 = cast(%1311, dtype="float32") /* ty=Tensor[(5, 9, 6), float32] */;
    %1316 = dyn.reshape(%1313, %1314, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1317 = @func_8799() /* ty=(Tensor[(2, 8, 2), bool],) */;
    %1318 = cast(%1311, dtype="float32") /* ty=Tensor[(5, 9, 6), float32] */;
    %1319 = cast(%var_12376, dtype="bool") /* ty=Tensor[(5, 9, 6), bool] */;
    %1320 = shape_of(%1311, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1321 = cast(%1311, dtype="bool") /* ty=Tensor[(5, 9, 6), bool] */;
    %1322 = dyn.reshape(%1319, %1320, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1323 = cast(%1311, dtype="float64") /* ty=Tensor[(5, 9, 6), float64] */;
    %1324 = %1301.0;
    %1325 = atanh(%1312) /* ty=Tensor[(5, 9, 6), float64] */;
    %1326 = mod(%1315, %1316) /* ty=Tensor[(5, 9, 6), float32] */;
    %1327 = %1317.0;
    %1328 = rsqrt(%1318) /* ty=Tensor[(5, 9, 6), float32] */;
    %1329 = greater(%1321, %1322) /* ty=Tensor[(5, 9, 6), bool] */;
    %1330 = sin(%1323) /* ty=Tensor[(5, 9, 6), float64] */;
    (%1324, meta[relay.Constant][94] /* ty=Tensor[(6, 45), float32] */, meta[relay.Constant][95] /* ty=Tensor[(756), float64] */, %1325, %1326, %1327, %1328, %1329, %1330)
  };
  %1331(%var_12401, %var_12402) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(6, 45), float32], Tensor[(756), float64], Tensor[(5, 9, 6), float64], Tensor[(5, 9, 6), float32], Tensor[(2, 8, 2), bool], Tensor[(5, 9, 6), float32], Tensor[(5, 9, 6), bool], Tensor[(5, 9, 6), float64]) */
}

def @func_10453() -> (Tensor[(2, 8, 2), bool],) {
  %1332 = @func_6372() /* ty=Tensor[(2, 8, 2), bool] */;
  (%1332,)
}

def @func_14184() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), int16]) {
  @func_14182() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), int16]) */
}

def @func_3495() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) {
  @func_3493() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */
}

def @func_11912() -> (Tensor[(1456), float32], Tensor[(2, 8, 2), float32]) {
  %1333 = @func_11635() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(1456), float32]) */;
  %1334 = @func_11715() /* ty=(Tensor[(2, 8, 2), float32],) */;
  %1335 = %1333.2;
  %1336 = %1334.0;
  (%1335, %1336)
}

def @func_14296() -> Tensor[(2, 8, 2), bool] {
  @func_14294() /* ty=Tensor[(2, 8, 2), bool] */
}

def @func_16136(%var_16134: Tensor[(384), float32]) -> (Tensor[(2, 8, 2), float64], Tensor[(2, 8, 2), bool], Tensor[(630), float32], Tensor[(384), float32]) {
  %1337 = @func_7221() /* ty=(Tensor[(2, 8, 2), float64],) */;
  %1338 = cast(meta[relay.Constant][96] /* ty=Tensor[(630), float32] */, dtype="float32") /* ty=Tensor[(630), float32] */;
  %1339 = cast(%var_16134, dtype="float32") /* ty=Tensor[(384), float32] */;
  %1340 = reshape(%1338, newshape=[630]) /* ty=Tensor[(630), float32] */;
  %1341 = reshape(%1339, newshape=[384]) /* ty=Tensor[(384), float32] */;
  %1342 = @func_8072(%1340, %1341) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(6, 7, 15), float32], Tensor[(630), float32], Tensor[(8, 3, 16), float64], Tensor[(384), float32], Tensor[(756), float64]) */;
  %1343 = %1337.0;
  %1344 = %1342.0;
  (%1343, %1344, meta[relay.Constant][96] /* ty=Tensor[(630), float32] */, %var_16134)
}

def @func_8650(%var_8644: Tensor[(6, 3, 5), float32]) -> (Tensor[(2, 8, 2), bool], Tensor[(6, 3, 5), uint64], Tensor[(2, 8, 2), bool], Tensor[(6, 3, 5), uint32]) {
  %1345 = @func_4305() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %1346 = @func_6180() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(6, 3, 5), float64], Tensor[(90), float64]) */;
  %1347 = %1346.2;
  %1348 = cast(%1347, dtype="float64") /* ty=Tensor[(90), float64] */;
  %1349 = reshape(%1348, newshape=[6, 3, 5]) /* ty=Tensor[(6, 3, 5), float64] */;
  %1350 = @func_3616(%1349) /* ty=Tensor[(6, 3, 5), float64] */;
  %1351 = cast(%1350, dtype="float32") /* ty=Tensor[(6, 3, 5), float32] */;
  %1352 = sqrt(%1351) /* ty=Tensor[(6, 3, 5), float32] */;
  %1353 = cast(%1347, dtype="uint64") /* ty=Tensor[(90), uint64] */;
  %1354 = shape_of(%1352, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1355 = cast(%1352, dtype="uint64") /* ty=Tensor[(6, 3, 5), uint64] */;
  %1356 = dyn.reshape(%1353, %1354, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1357 = cast(%var_8644, dtype="uint32") /* ty=Tensor[(6, 3, 5), uint32] */;
  %1358 = shape_of(%1352, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1359 = cast(%1352, dtype="uint32") /* ty=Tensor[(6, 3, 5), uint32] */;
  %1360 = dyn.reshape(%1357, %1358, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1361 = %1345.0;
  %1362 = left_shift(%1355, %1356) /* ty=Tensor[(6, 3, 5), uint64] */;
  %1363 = @func_4042() /* ty=Tensor[(2, 8, 2), bool] */;
  %1364 = right_shift(%1359, %1360) /* ty=Tensor[(6, 3, 5), uint32] */;
  (%1361, %1362, %1363, %1364)
}

def @func_9209(%var_9207: Tensor[(630), float32]) -> (Tensor[(2, 8, 2), bool], Tensor[(8, 3, 16), float64], Tensor[(630), float32], Tensor[(384), float32]) {
  @func_9206(%var_9207) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(8, 3, 16), float64], Tensor[(630), float32], Tensor[(384), float32]) */
}

def @func_14084() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), int8]) {
  %1369 = fn () -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), int8]) {
    %1365 = @func_3493() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
    %1366 = @func_3766() /* ty=(Tensor[(2, 8, 2), int8], Tensor[(2, 8, 2), float32]) */;
    %1367 = %1365.0;
    %1368 = %1366.0;
    (%1367, %1368)
  };
  %1369() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), int8]) */
}

def @func_10539(%var_10519: Tensor[(4, 364), float32]) -> (Tensor[(4, 364), bool], Tensor[(2, 8, 2), float32], Tensor[(4, 364), float64]) {
  %1370 = @func_7471() /* ty=(Tensor[(90), float64], Tensor[(4, 364), float32], Tensor[(660, 2), float32], Tensor[(2, 8, 2), bool]) */;
  %1371 = %1370.1;
  %1372 = cast(%var_10519, dtype="bool") /* ty=Tensor[(4, 364), bool] */;
  %1373 = shape_of(%1371, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1374 = cast(%1371, dtype="bool") /* ty=Tensor[(4, 364), bool] */;
  %1375 = dyn.reshape(%1372, %1373, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1376 = @func_5125() /* ty=(Tensor[(2, 8, 2), float32],) */;
  %1377 = cast(%var_10519, dtype="float64") /* ty=Tensor[(4, 364), float64] */;
  %1378 = logical_and(%1374, %1375) /* ty=Tensor[(4, 364), bool] */;
  %1379 = %1376.0;
  %1380 = cosh(%1377) /* ty=Tensor[(4, 364), float64] */;
  (%1378, %1379, %1380)
}

def @func_11368(%var_11366: float32, %var_11367: Tensor[(130), float32]) -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), float32], float32, Tensor[(130), float32]) {
  @func_11364(%var_11366, %var_11367) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), float32], float32, Tensor[(130), float32]) */
}

def @func_10239(%var_10225: Tensor[(2, 8, 2), float32]) -> Tensor[(2, 8, 2), bool] {
  %1381 = @func_3766() /* ty=(Tensor[(2, 8, 2), int8], Tensor[(2, 8, 2), float32]) */;
  %1382 = %1381.1;
  %1383 = cast(%var_10225, dtype="bool") /* ty=Tensor[(2, 8, 2), bool] */;
  %1384 = shape_of(%1382, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1385 = cast(%1382, dtype="bool") /* ty=Tensor[(2, 8, 2), bool] */;
  %1386 = dyn.reshape(%1383, %1384, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%1385, %1386) /* ty=Tensor[(2, 8, 2), bool] */
}

def @func_10757(%var_10745: Tensor[(1320), float64]) -> (Tensor[(8, 7, 9), float64], Tensor[(540), float64], Tensor[(294, 2), float64], Tensor[(1320), float64], Tensor[(2, 8, 2), bool], Tensor[(130), float32]) {
  %1387 = cast(meta[relay.Constant][97] /* ty=Tensor[(294, 2), float64] */, dtype="float64") /* ty=Tensor[(294, 2), float64] */;
  %1388 = cast(%var_10745, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %1389 = reshape(%1387, newshape=[588]) /* ty=Tensor[(588), float64] */;
  %1390 = reshape(%1388, newshape=[1320]) /* ty=Tensor[(1320), float64] */;
  %1391 = @func_4656(%1389, %1390) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(660, 2), float64], Tensor[(588), float64], Tensor[(1320), float64], Tensor[(5, 12, 9), float64], Tensor[(540), float64], Tensor[(6, 3, 5), float64], Tensor[(90), float64]) */;
  %1392 = cast(meta[relay.Constant][98] /* ty=Tensor[(130), float32] */, dtype="float32") /* ty=Tensor[(130), float32] */;
  %1393 = reshape(%1392, newshape=[26, 5]) /* ty=Tensor[(26, 5), float32] */;
  %1394 = @func_7843(%1393) /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(588), float64], Tensor[(1320), float64], Tensor[(2, 5, 13), float64], float32, Tensor[(26, 5), float32], Tensor[(11, 12, 10), bool], Tensor[(2, 8, 2), bool]) */;
  %1395 = @func_8751() /* ty=Tensor[(8, 7, 9), float64] */;
  %1396 = %1391.5;
  %1397 = %1394.1;
  (%1395, %1396, meta[relay.Constant][97] /* ty=Tensor[(294, 2), float64] */, %var_10745, %1397, meta[relay.Constant][98] /* ty=Tensor[(130), float32] */)
}

def @func_16082() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool], Tensor[(11, 12, 10), bool], Tensor[(1320, 1), float64], Tensor[(2, 8, 2), float64], Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), bool]) {
  %1398 = @func_8799() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %1399 = cast(meta[relay.Constant][99] /* ty=Tensor[(1320, 1), float64] */, dtype="float64") /* ty=Tensor[(1320, 1), float64] */;
  %1400 = reshape(%1399, newshape=[11, 12, 10]) /* ty=Tensor[(11, 12, 10), float64] */;
  %1401 = @func_2173(%1400) /* ty=(Tensor[(11, 12, 10), bool], Tensor[(11, 6, 6), float32], Tensor[(396), float32]) */;
  %1402 = @func_7221() /* ty=(Tensor[(2, 8, 2), float64],) */;
  %1403 = @func_7394() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
  %1404 = @func_11912() /* ty=(Tensor[(1456), float32], Tensor[(2, 8, 2), float32]) */;
  %1405 = @func_6180() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(6, 3, 5), float64], Tensor[(90), float64]) */;
  %1406 = %1398.0;
  %1407 = @func_13832() /* ty=Tensor[(2, 8, 2), bool] */;
  %1408 = %1401.0;
  %1409 = %1402.0;
  %1410 = %1403.1;
  %1411 = %1404.1;
  %1412 = %1405.0;
  (%1406, %1407, %1408, meta[relay.Constant][99] /* ty=Tensor[(1320, 1), float64] */, %1409, %1410, %1411, %1412)
}

def @func_4044() -> Tensor[(2, 8, 2), bool] {
  @func_4042() /* ty=Tensor[(2, 8, 2), bool] */
}

def @func_13918() -> Tensor[(2, 8, 2), bool] {
  %1413 = fn () -> Tensor[(2, 8, 2), bool] {
    @func_7733() /* ty=Tensor[(2, 8, 2), bool] */
  };
  %1413() /* ty=Tensor[(2, 8, 2), bool] */
}

def @func_12878() -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), float32]) {
  %1418 = fn () -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), float32]) {
    %1414 = @func_10086() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), bool]) */;
    %1415 = @func_3766() /* ty=(Tensor[(2, 8, 2), int8], Tensor[(2, 8, 2), float32]) */;
    %1416 = %1414.1;
    %1417 = %1415.1;
    (%1416, %1417)
  };
  %1418() /* ty=(Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), float32]) */
}

def @func_5157() -> Tensor[(2, 8, 2), uint32] {
  %1425 = fn () -> Tensor[(2, 8, 2), uint32] {
    %1419 = @func_3661() /* ty=(Tensor[(2, 8, 2), bool],) */;
    %1420 = %1419.0;
    %1421 = cast(meta[relay.Constant][100] /* ty=Tensor[(2, 8, 2), bool] */, dtype="uint32") /* ty=Tensor[(2, 8, 2), uint32] */;
    %1422 = shape_of(%1420, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1423 = cast(%1420, dtype="uint32") /* ty=Tensor[(2, 8, 2), uint32] */;
    %1424 = dyn.reshape(%1421, %1422, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    right_shift(%1423, %1424) /* ty=Tensor[(2, 8, 2), uint32] */
  };
  %1425() /* ty=Tensor[(2, 8, 2), uint32] */
}

def @func_15998() -> (Tensor[(2, 8, 2), bool],) {
  %1426 = @func_11873() /* ty=Tensor[(2, 8, 2), bool] */;
  (%1426,)
}

def @func_4224() -> (Tensor[(2, 8, 2), bool],) {
  @func_4222() /* ty=(Tensor[(2, 8, 2), bool],) */
}

def @func_6069(%var_6049: float32, %var_6050: Tensor[(2, 5, 13), float32]) -> (Tensor[(2, 5, 13), float32], Tensor[(2, 5, 13), float64]) {
  %1427 = cast(%var_6049, dtype="float32") /* ty=float32 */;
  %1428 = cast(%var_6050, dtype="float32") /* ty=Tensor[(2, 5, 13), float32] */;
  %1429 = cast(%var_6050, dtype="float64") /* ty=Tensor[(2, 5, 13), float64] */;
  %1430 = divide(%1427, %1428) /* ty=Tensor[(2, 5, 13), float32] */;
  %1431 = exp(%1429) /* ty=Tensor[(2, 5, 13), float64] */;
  (%1430, %1431)
}

def @func_11364(%var_11360: float32, %var_11361: Tensor[(130), float32]) -> (Tensor[(2, 8, 2), bool], Tensor[(2, 8, 2), float32], float32, Tensor[(130), float32]) {
  %1432 = @func_8827() /* ty=(Tensor[(2, 8, 2), bool],) */;
  %1433 = cast(%var_11360, dtype="float32") /* ty=float32 */;
  %1434 = cast(%var_11361, dtype="float32") /* ty=Tensor[(130), float32] */;
  %1435 = reshape(%1433, newshape=[]) /* ty=float32 */;
  %1436 = reshape(%1434, newshape=[130]) /* ty=Tensor[(130), float32] */;
  %1437 = @func_9400(%1435, %1436) /* ty=(Tensor[(2, 8, 2), float32], Tensor[(2, 8, 2), float32], Tensor[(8, 3, 16), float64], Tensor[(2, 5, 13), float32], float32, Tensor[(130), float32], Tensor[(2, 8, 2), bool], Tensor[(11, 6, 6), float32], Tensor[(6, 66), float32], Tensor[(2, 8, 2), bool]) */;
  %1438 = %1432.0;
  %1439 = %1437.1;
  (%1438, %1439, %var_11360, %var_11361)
}

def @func_6571(%var_6569: Tensor[(2, 8, 2), bool]) -> (Tensor[(2, 8, 2), int16], Tensor[(2, 8, 2), bool]) {
  @func_6568(%var_6569) /* ty=(Tensor[(2, 8, 2), int16], Tensor[(2, 8, 2), bool]) */
}

def @func_10096() -> Tensor[(2, 8, 2), bool] {
  %1441 = fn () -> Tensor[(2, 8, 2), bool] {
    %1440 = @func_8827() /* ty=(Tensor[(2, 8, 2), bool],) */;
    %1440.0
  };
  %1441() /* ty=Tensor[(2, 8, 2), bool] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen682/build/output.py:4335: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen682/build/output.py", line 4340, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(91) tvmgen_default_fused_cast_logical_and_cast_reshape_bitwise_xor_kernel0(int* __restrict__ T_bitwise_xor, signed char* __restrict__ placeholder, signed char* __restrict__ placeholder1) {
  T_bitwise_xor[(((int)threadIdx.x))] = (((int)((bool)placeholder[(((int)threadIdx.x))])) ^ ((int)(((bool)placeholder1[(0)]) && ((bool)placeholder[(((int)threadIdx.x))]))));
}

extern "C" __global__ void __launch_bounds__(91) tvmgen_default_fused_less_equal_reshape_greater_kernel0(signed char* __restrict__ T_greater, signed char* __restrict__ placeholder, signed char* __restrict__ placeholder1) {
  T_greater[(((int)threadIdx.x))] = ((signed char)(((bool)placeholder[(((int)threadIdx.x))]) < (((bool)placeholder[(((int)threadIdx.x))]) <= ((bool)placeholder1[(0)]))));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


==========mod==========
#[version = "0.0.5"]
def @func_5569(%var_5534: Tensor[(990), float64]) -> (Tensor[(15, 6, 3), int32], Tensor[(400), float64], Tensor[(990), float64], Tensor[(15, 6, 3), float32]) {
  %0 = @func_4019() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(400), float64] */, dtype="float64") /* ty=Tensor[(400), float64] */;
  %2 = cast(%var_5534, dtype="float64") /* ty=Tensor[(990), float64] */;
  %3 = reshape(%1, newshape=[400]) /* ty=Tensor[(400), float64] */;
  %4 = reshape(%2, newshape=[990]) /* ty=Tensor[(990), float64] */;
  %5 = @func_4332(%3, %4) /* ty=(Tensor[(15, 6, 3), int32], Tensor[(2310), float64], Tensor[(400), float64], Tensor[(2310), float64], Tensor[(990), bool], Tensor[(3, 2, 13), float64], Tensor[(78), float64], Tensor[(15, 14, 11), float64]) */;
  %6 = %5.0;
  %7 = cast(%6, dtype="float32") /* ty=Tensor[(15, 6, 3), float32] */;
  %8 = %0.0;
  %9 = sin(%7) /* ty=Tensor[(15, 6, 3), float32] */;
  (%8, meta[relay.Constant][0] /* ty=Tensor[(400), float64] */, %var_5534, %9)
}

def @func_5487() -> Tensor[(15, 6, 3), int32] {
  %10 = @func_4556() /* ty=(Tensor[(15, 6, 3), int32], Tensor[(15, 6, 3), int32]) */;
  %10.0
}

def @func_8092() -> (Tensor[(104), float32], Tensor[(15, 6, 3), uint8]) {
  %11 = @func_6641() /* ty=(Tensor[(104), float32],) */;
  %12 = @func_6927() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %13 = %12.0;
  %14 = cast(meta[relay.Constant][1] /* ty=Tensor[(15, 6, 3), int32] */, dtype="uint8") /* ty=Tensor[(15, 6, 3), uint8] */;
  %15 = shape_of(%13, dtype="int32") /* ty=Tensor[(3), int32] */;
  %16 = cast(%13, dtype="uint8") /* ty=Tensor[(15, 6, 3), uint8] */;
  %17 = dyn.reshape(%14, %15, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %18 = %11.0;
  %19 = maximum(%16, %17) /* ty=Tensor[(15, 6, 3), uint8] */;
  (%18, %19)
}

def @func_1422(%var_1419: Tensor[(3, 2, 13), float64]) -> (Tensor[(3, 2, 13), float64],) {
  %20 = cast(%var_1419, dtype="float64") /* ty=Tensor[(3, 2, 13), float64] */;
  %21 = sqrt(%20) /* ty=Tensor[(3, 2, 13), float64] */;
  (%21,)
}

def @func_6071(%var_6069: Tensor[(1600), uint8]) -> (Tensor[(13, 6, 7), bool], Tensor[(15, 6, 3), int32], Tensor[(7, 1, 6), int64], uint8, Tensor[(1600), uint8]) {
  %22 = @func_4699() /* ty=(Tensor[(15, 6, 3), float64], Tensor[(13, 6, 7), bool], Tensor[(1, 1053), int16]) */;
  %23 = cast(meta[relay.Constant][2] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %24 = cast(%var_6069, dtype="uint8") /* ty=Tensor[(1600), uint8] */;
  %25 = %22.1;
  %26 = cast(%25, dtype="float32") /* ty=Tensor[(13, 6, 7), float32] */;
  %27 = reshape(%23, newshape=[]) /* ty=uint8 */;
  %28 = reshape(%24, newshape=[10, 16, 10]) /* ty=Tensor[(10, 16, 10), uint8] */;
  %29 = reshape(%26, newshape=[546]) /* ty=Tensor[(546), float32] */;
  %30 = @func_3071(%27, %28, %29) /* ty=(Tensor[(10, 16, 10), uint8], Tensor[(7, 1, 6), int64], Tensor[(546), float32]) */;
  %31 = @func_5768() /* ty=Tensor[(15, 6, 3), int32] */;
  %32 = %30.1;
  (%25, %31, %32, meta[relay.Constant][2] /* ty=uint8 */, %var_6069)
}

def @func_1801(%var_1776: Tensor[(10, 5, 8), float64], %var_1777: Tensor[(10, 5, 8), float64], %var_1783: Tensor[(2310), float64]) -> (Tensor[(10, 5, 8), float64], Tensor[(15, 14, 11), float64], Tensor[(2310), float64], Tensor[(10, 5, 8), float32]) {
  %33 = cast(%var_1777, dtype="float64") /* ty=Tensor[(10, 5, 8), float64] */;
  %34 = shape_of(%var_1776, dtype="int32") /* ty=Tensor[(3), int32] */;
  %35 = cast(%var_1776, dtype="float64") /* ty=Tensor[(10, 5, 8), float64] */;
  %36 = dyn.reshape(%33, %34, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %37 = cast(%var_1783, dtype="float64") /* ty=Tensor[(2310), float64] */;
  %38 = reshape(%37, newshape=[15, 14, 11]) /* ty=Tensor[(15, 14, 11), float64] */;
  %39 = cast(%var_1776, dtype="float32") /* ty=Tensor[(10, 5, 8), float32] */;
  %40 = divide(%35, %36) /* ty=Tensor[(10, 5, 8), float64] */;
  %41 = @func_355(%38) /* ty=Tensor[(15, 14, 11), float64] */;
  %42 = cos(%39) /* ty=Tensor[(10, 5, 8), float32] */;
  (%40, %41, %var_1783, %42)
}

def @func_4901(%var_4867: Tensor[(80), float64], %var_4891: Tensor[(768), float32], %var_4896: Tensor[(312), uint32]) -> (Tensor[(15, 6, 3), float64], Tensor[(2, 4, 10), float64], Tensor[(80), float64], Tensor[(7, 1, 6), int64], uint8, Tensor[(546), float32], Tensor[(100, 16), float64], Tensor[(12, 8, 8), float32], Tensor[(768), float32], Tensor[(1050), float64], Tensor[(100), float64], Tensor[(3, 8, 13), uint32], Tensor[(312), uint32]) {
  %43 = @func_4512() /* ty=(Tensor[(15, 6, 3), float64],) */;
  %44 = cast(%var_4867, dtype="float64") /* ty=Tensor[(80), float64] */;
  %45 = reshape(%44, newshape=[2, 4, 10]) /* ty=Tensor[(2, 4, 10), float64] */;
  %46 = cast(meta[relay.Constant][3] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %47 = cast(meta[relay.Constant][4] /* ty=Tensor[(100, 16), uint8] */, dtype="uint8") /* ty=Tensor[(100, 16), uint8] */;
  %48 = cast(meta[relay.Constant][5] /* ty=Tensor[(546), float32] */, dtype="float32") /* ty=Tensor[(546), float32] */;
  %49 = reshape(%46, newshape=[]) /* ty=uint8 */;
  %50 = reshape(%47, newshape=[10, 16, 10]) /* ty=Tensor[(10, 16, 10), uint8] */;
  %51 = reshape(%48, newshape=[546]) /* ty=Tensor[(546), float32] */;
  %52 = @func_3071(%49, %50, %51) /* ty=(Tensor[(10, 16, 10), uint8], Tensor[(7, 1, 6), int64], Tensor[(546), float32]) */;
  %53 = cast(meta[relay.Constant][4] /* ty=Tensor[(100, 16), uint8] */, dtype="float64") /* ty=Tensor[(100, 16), float64] */;
  %54 = cast(%var_4891, dtype="float32") /* ty=Tensor[(768), float32] */;
  %55 = cast(meta[relay.Constant][6] /* ty=Tensor[(1050), float64] */, dtype="float64") /* ty=Tensor[(1050), float64] */;
  %56 = cast(meta[relay.Constant][7] /* ty=Tensor[(100), float64] */, dtype="float64") /* ty=Tensor[(100), float64] */;
  %57 = reshape(%54, newshape=[12, 8, 8]) /* ty=Tensor[(12, 8, 8), float32] */;
  %58 = reshape(%55, newshape=[1050]) /* ty=Tensor[(1050), float64] */;
  %59 = reshape(%56, newshape=[100]) /* ty=Tensor[(100), float64] */;
  %60 = @func_2288(%57, %58, %59) /* ty=(Tensor[(10, 4, 5), bool], Tensor[(200), int32], Tensor[(14, 15, 5), float64], Tensor[(1050), float64], Tensor[(12, 8, 8), float32], Tensor[(?, 100), float64], Tensor[(1716), uint64], Tensor[(100), float64]) */;
  %61 = cast(%var_4896, dtype="uint32") /* ty=Tensor[(312), uint32] */;
  %62 = cast(%var_4896, dtype="uint32") /* ty=Tensor[(312), uint32] */;
  %63 = reshape(%61, newshape=[3, 8, 13]) /* ty=Tensor[(3, 8, 13), uint32] */;
  %64 = reshape(%62, newshape=[3, 8, 13]) /* ty=Tensor[(3, 8, 13), uint32] */;
  %65 = @func_1929(%63, %64) /* ty=(Tensor[(3, 8, 13), uint32], Tensor[(100), float64], Tensor[(180, 4), int32], Tensor[(1716), uint64]) */;
  %66 = %43.0;
  %67 = @func_3372(%45) /* ty=Tensor[(2, 4, 10), float64] */;
  %68 = %52.1;
  %69 = acos(%53) /* ty=Tensor[(100, 16), float64] */;
  %70 = %60.4;
  %71 = %65.0;
  (%66, %67, %var_4867, %68, meta[relay.Constant][3] /* ty=uint8 */, meta[relay.Constant][5] /* ty=Tensor[(546), float32] */, %69, %70, %var_4891, meta[relay.Constant][6] /* ty=Tensor[(1050), float64] */, meta[relay.Constant][7] /* ty=Tensor[(100), float64] */, %71, %var_4896)
}

def @func_8482(%var_8431: Tensor[(768), float32], %var_8433: Tensor[(100, 1), float64]) -> (Tensor[(104), float64], Tensor[(15, 6, 3), int32], Tensor[(990), float64], Tensor[(15, 6, 3), int32], Tensor[(80), float64], Tensor[(?, 100), float64], Tensor[(768), float32], Tensor[(1, 1050), float64], Tensor[(100, 1), float64], Tensor[(15, 1053), float64], Tensor[(4563, 3), bool], Tensor[(4563, 3), bool]) {
  %72 = @func_6421() /* ty=(Tensor[(104), float64],) */;
  %73 = cast(meta[relay.Constant][8] /* ty=Tensor[(4563, 3), int16] */, dtype="int16") /* ty=Tensor[(4563, 3), int16] */;
  %74 = cast(meta[relay.Constant][9] /* ty=Tensor[(990), float64] */, dtype="float64") /* ty=Tensor[(990), float64] */;
  %75 = reshape(%73, newshape=[13, 1053]) /* ty=Tensor[(13, 1053), int16] */;
  %76 = reshape(%74, newshape=[990]) /* ty=Tensor[(990), float64] */;
  %77 = @func_5961(%75, %76) /* ty=(Tensor[(13, 1053), bool], Tensor[(?, 1053), float64], Tensor[(15, 6, 3), int32], Tensor[(990), float64], Tensor[(13, 1053), float32]) */;
  %78 = cast(meta[relay.Constant][10] /* ty=Tensor[(80), float64] */, dtype="float64") /* ty=Tensor[(80), float64] */;
  %79 = reshape(%78, newshape=[80]) /* ty=Tensor[(80), float64] */;
  %80 = @func_7950(%79) /* ty=(Tensor[(15, 6, 3), int32], Tensor[(990), float64], Tensor[(312), uint32], Tensor[(80), float64], Tensor[(768), float32], Tensor[(312), uint32]) */;
  %81 = cast(%var_8431, dtype="float32") /* ty=Tensor[(768), float32] */;
  %82 = cast(meta[relay.Constant][11] /* ty=Tensor[(1, 1050), float64] */, dtype="float64") /* ty=Tensor[(1, 1050), float64] */;
  %83 = cast(%var_8433, dtype="float64") /* ty=Tensor[(100, 1), float64] */;
  %84 = reshape(%81, newshape=[12, 8, 8]) /* ty=Tensor[(12, 8, 8), float32] */;
  %85 = reshape(%82, newshape=[1050]) /* ty=Tensor[(1050), float64] */;
  %86 = reshape(%83, newshape=[100]) /* ty=Tensor[(100), float64] */;
  %87 = @func_2288(%84, %85, %86) /* ty=(Tensor[(10, 4, 5), bool], Tensor[(200), int32], Tensor[(14, 15, 5), float64], Tensor[(1050), float64], Tensor[(12, 8, 8), float32], Tensor[(?, 100), float64], Tensor[(1716), uint64], Tensor[(100), float64]) */;
  %88 = @func_8207() /* ty=(Tensor[(15, 1053), float64], Tensor[(7, 1, 6), int64], int64, Tensor[(1, 1053), float32]) */;
  %89 = cast(meta[relay.Constant][8] /* ty=Tensor[(4563, 3), int16] */, dtype="float64") /* ty=Tensor[(4563, 3), float64] */;
  %90 = acos(%89) /* ty=Tensor[(4563, 3), float64] */;
  %91 = cast(meta[relay.Constant][8] /* ty=Tensor[(4563, 3), int16] */, dtype="bool") /* ty=Tensor[(4563, 3), bool] */;
  %92 = shape_of(%90, dtype="int32") /* ty=Tensor[(2), int32] */;
  %93 = cast(%90, dtype="bool") /* ty=Tensor[(4563, 3), bool] */;
  %94 = dyn.reshape(%91, %92, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %95 = cast(%90, dtype="float64") /* ty=Tensor[(4563, 3), float64] */;
  %96 = log2(%95) /* ty=Tensor[(4563, 3), float64] */;
  %97 = cast(meta[relay.Constant][8] /* ty=Tensor[(4563, 3), int16] */, dtype="bool") /* ty=Tensor[(4563, 3), bool] */;
  %98 = shape_of(%96, dtype="int32") /* ty=Tensor[(2), int32] */;
  %99 = cast(%96, dtype="bool") /* ty=Tensor[(4563, 3), bool] */;
  %100 = dyn.reshape(%97, %98, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %101 = %72.0;
  %102 = %77.2;
  %103 = %80.0;
  %104 = %87.5;
  %105 = %88.0;
  %106 = less(%93, %94) /* ty=Tensor[(4563, 3), bool] */;
  %107 = greater(%99, %100) /* ty=Tensor[(4563, 3), bool] */;
  (%101, %102, meta[relay.Constant][9] /* ty=Tensor[(990), float64] */, %103, meta[relay.Constant][10] /* ty=Tensor[(80), float64] */, %104, %var_8431, meta[relay.Constant][11] /* ty=Tensor[(1, 1050), float64] */, %var_8433, %105, %106, %107)
}

def @func_8207() -> (Tensor[(15, 1053), float64], Tensor[(7, 1, 6), int64], int64, Tensor[(1, 1053), float32]) {
  %108 = @func_5645() /* ty=Tensor[(1, 1053), int16] */;
  %109 = cast(%108, dtype="float64") /* ty=Tensor[(1, 1053), float64] */;
  %110 = cast(meta[relay.Constant][12] /* ty=Tensor[(15, 1053), int16] */, dtype="float64") /* ty=Tensor[(15, 1053), float64] */;
  %111 = cast(4 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %112 = reshape(%111, newshape=[]) /* ty=int64 */;
  %113 = @func_5(%112) /* ty=(Tensor[(7, 1, 6), int64],) */;
  %114 = cast(%108, dtype="float32") /* ty=Tensor[(1, 1053), float32] */;
  %115 = power(%109, %110) /* ty=Tensor[(15, 1053), float64] */;
  %116 = %113.0;
  %117 = log2(%114) /* ty=Tensor[(1, 1053), float32] */;
  (%115, %116, 4 /* ty=int64 */, %117)
}

def @func_4556() -> (Tensor[(15, 6, 3), int32], Tensor[(15, 6, 3), int32]) {
  %118 = @func_4360() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %119 = @func_4019() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %120 = %118.0;
  %121 = %119.0;
  (%120, %121)
}

def @func_6357() -> (Tensor[(15, 6, 3), int32], Tensor[(2, 4, 13), float32], Tensor[(15, 6, 3), int32], Tensor[(8, 1053), bool]) {
  %122 = @func_4427() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %123 = @func_5433() /* ty=(Tensor[(15, 6, 3), int32], Tensor[(2, 4, 13), float32], Tensor[(104), float64]) */;
  %124 = @func_5856() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %125 = @func_5645() /* ty=Tensor[(1, 1053), int16] */;
  %126 = cast(%125, dtype="float32") /* ty=Tensor[(1, 1053), float32] */;
  %127 = cast(meta[relay.Constant][13] /* ty=Tensor[(8, 1053), int16] */, dtype="float32") /* ty=Tensor[(8, 1053), float32] */;
  %128 = subtract(%126, %127) /* ty=Tensor[(8, 1053), float32] */;
  %129 = cast(%125, dtype="float64") /* ty=Tensor[(1, 1053), float64] */;
  %130 = cast(meta[relay.Constant][13] /* ty=Tensor[(8, 1053), int16] */, dtype="float64") /* ty=Tensor[(8, 1053), float64] */;
  %131 = floor_mod(%129, %130) /* ty=Tensor[(8, 1053), float64] */;
  %132 = cast(%131, dtype="bool") /* ty=Tensor[(8, 1053), bool] */;
  %133 = shape_of(%128, dtype="int32") /* ty=Tensor[(2), int32] */;
  %134 = cast(%128, dtype="bool") /* ty=Tensor[(8, 1053), bool] */;
  %135 = dyn.reshape(%132, %133, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %136 = %122.0;
  %137 = %123.1;
  %138 = %124.0;
  %139 = equal(%134, %135) /* ty=Tensor[(8, 1053), bool] */;
  (%136, %137, %138, %139)
}

def @func_5199() -> (Tensor[(15, 6, 3), int32],) {
  %140 = @func_4556() /* ty=(Tensor[(15, 6, 3), int32], Tensor[(15, 6, 3), int32]) */;
  %141 = %140.0;
  (%141,)
}

def @func_8506(%var_8488: Tensor[(4, 7, 1), float32]) -> (Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32]) {
  %142 = cast(%var_8488, dtype="float32") /* ty=Tensor[(4, 7, 1), float32] */;
  %143 = cast(meta[relay.Constant][14] /* ty=Tensor[(4, 7, 4), float32] */, dtype="float32") /* ty=Tensor[(4, 7, 4), float32] */;
  %144 = cast(meta[relay.Constant][14] /* ty=Tensor[(4, 7, 4), float32] */, dtype="float32") /* ty=Tensor[(4, 7, 4), float32] */;
  %145 = floor_divide(%142, %143) /* ty=Tensor[(4, 7, 4), float32] */;
  %146 = cos(%144) /* ty=Tensor[(4, 7, 4), float32] */;
  (%145, %146)
}

def @func_8691(%var_8680: Tensor[(25, 4), float64]) -> (Tensor[(13, 6, 7), bool], Tensor[(3, 8, 13), uint32], Tensor[(1232), float32], Tensor[(25, 4), float64]) {
  %147 = @func_7856() /* ty=(Tensor[(13, 6, 7), bool],) */;
  %148 = cast(meta[relay.Constant][15] /* ty=Tensor[(1232), float32] */, dtype="float32") /* ty=Tensor[(1232), float32] */;
  %149 = cast(%var_8680, dtype="float64") /* ty=Tensor[(25, 4), float64] */;
  %150 = reshape(%148, newshape=[11, 8, 14]) /* ty=Tensor[(11, 8, 14), float32] */;
  %151 = reshape(%149, newshape=[100]) /* ty=Tensor[(100), float64] */;
  %152 = @func_3152(%150, %151) /* ty=(Tensor[(?, 100), float64], Tensor[(1716), uint64], Tensor[(100), float64], Tensor[(3, 8, 13), uint32], Tensor[(312), uint32], Tensor[(11, 8, 14), float32]) */;
  %153 = %147.0;
  %154 = %152.3;
  (%153, %154, meta[relay.Constant][15] /* ty=Tensor[(1232), float32] */, %var_8680)
}

def @func_4052() -> (Tensor[(15, 6, 3), int32],) {
  %155 = @func_4019() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %156 = %155.0;
  (%156,)
}

def @func_4976(%var_4947: Tensor[(10, 8, 8), bool], %var_4948: Tensor[(10, 8, 8), bool]) -> Tensor[(10, 8, 8), uint32] {
  %157 = cast(%var_4948, dtype="bool") /* ty=Tensor[(10, 8, 8), bool] */;
  %158 = shape_of(%var_4947, dtype="int32") /* ty=Tensor[(3), int32] */;
  %159 = cast(%var_4947, dtype="bool") /* ty=Tensor[(10, 8, 8), bool] */;
  %160 = dyn.reshape(%157, %158, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %161 = logical_and(%159, %160) /* ty=Tensor[(10, 8, 8), bool] */;
  %162 = cast(%161, dtype="uint32") /* ty=Tensor[(10, 8, 8), uint32] */;
  %163 = shape_of(%var_4947, dtype="int32") /* ty=Tensor[(3), int32] */;
  %164 = cast(%var_4947, dtype="uint32") /* ty=Tensor[(10, 8, 8), uint32] */;
  %165 = dyn.reshape(%162, %163, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  left_shift(%164, %165) /* ty=Tensor[(10, 8, 8), uint32] */
}

def @func_4332(%var_4274: Tensor[(400), float64], %var_4306: Tensor[(990), float64]) -> (Tensor[(15, 6, 3), int32], Tensor[(2310), float64], Tensor[(400), float64], Tensor[(2310), float64], Tensor[(990), bool], Tensor[(3, 2, 13), float64], Tensor[(78), float64], Tensor[(15, 14, 11), float64]) {
  %166 = cast(%var_4274, dtype="float64") /* ty=Tensor[(400), float64] */;
  %167 = cast(%var_4274, dtype="float64") /* ty=Tensor[(400), float64] */;
  %168 = cast(meta[relay.Constant][16] /* ty=Tensor[(2310), float64] */, dtype="float64") /* ty=Tensor[(2310), float64] */;
  %169 = reshape(%166, newshape=[10, 5, 8]) /* ty=Tensor[(10, 5, 8), float64] */;
  %170 = reshape(%167, newshape=[10, 5, 8]) /* ty=Tensor[(10, 5, 8), float64] */;
  %171 = reshape(%168, newshape=[2310]) /* ty=Tensor[(2310), float64] */;
  %172 = @func_1801(%169, %170, %171) /* ty=(Tensor[(10, 5, 8), float64], Tensor[(15, 14, 11), float64], Tensor[(2310), float64], Tensor[(10, 5, 8), float32]) */;
  %173 = cast(%var_4306, dtype="bool") /* ty=Tensor[(990), bool] */;
  %174 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(990), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %175 = cast(meta[relay.Constant][17] /* ty=Tensor[(990), float64] */, dtype="bool") /* ty=Tensor[(990), bool] */;
  %176 = dyn.reshape(%173, %174, newshape=[]) /* ty=Tensor[(?), bool] */;
  %177 = cast(meta[relay.Constant][18] /* ty=Tensor[(78), float64] */, dtype="float64") /* ty=Tensor[(78), float64] */;
  %178 = reshape(%177, newshape=[3, 2, 13]) /* ty=Tensor[(3, 2, 13), float64] */;
  %179 = @func_1422(%178) /* ty=(Tensor[(3, 2, 13), float64],) */;
  %180 = cast(meta[relay.Constant][17] /* ty=Tensor[(990), float64] */, dtype="float64") /* ty=Tensor[(990), float64] */;
  %181 = %172.2;
  %182 = cast(%181, dtype="float64") /* ty=Tensor[(2310), float64] */;
  %183 = reshape(%180, newshape=[10, 11, 9]) /* ty=Tensor[(10, 11, 9), float64] */;
  %184 = reshape(%182, newshape=[2310]) /* ty=Tensor[(2310), float64] */;
  %185 = @func_813(%183, %184) /* ty=(Tensor[(10, 11, 9), float64], Tensor[(7, 1, 6), int64], int64, Tensor[(15, 14, 11), float64], Tensor[(2310), float64]) */;
  %186 = %185.3;
  %187 = cast(%186, dtype="float64") /* ty=Tensor[(15, 14, 11), float64] */;
  %188 = @func_4139() /* ty=Tensor[(15, 6, 3), int32] */;
  %189 = greater_equal(%175, %176) /* ty=Tensor[(990), bool] */;
  %190 = %179.0;
  %191 = atan(%187) /* ty=Tensor[(15, 14, 11), float64] */;
  (%188, %181, %var_4274, meta[relay.Constant][16] /* ty=Tensor[(2310), float64] */, %189, %190, meta[relay.Constant][18] /* ty=Tensor[(78), float64] */, %191)
}

def @func_5731() -> Tensor[(15, 6, 3), float64] {
  %192 = @func_5599() /* ty=(Tensor[(12, 6, 4), float32], Tensor[(15, 6, 3), float64]) */;
  %192.1
}

def @func_5245() -> (Tensor[(15, 6, 3), int32],) {
  %193 = @func_4427() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %194 = %193.0;
  (%194,)
}

def @func_7856() -> (Tensor[(13, 6, 7), bool],) {
  %195 = @func_4699() /* ty=(Tensor[(15, 6, 3), float64], Tensor[(13, 6, 7), bool], Tensor[(1, 1053), int16]) */;
  %196 = %195.1;
  (%196,)
}

def @func_8311(%var_8302: Tensor[(10), int16]) -> (Tensor[(15, 6, 3), uint8], Tensor[(7, 1, 6), int64], int16, Tensor[(10), int16]) {
  %197 = @func_8092() /* ty=(Tensor[(104), float32], Tensor[(15, 6, 3), uint8]) */;
  %198 = cast(meta[relay.Constant][19] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %199 = cast(%var_8302, dtype="int16") /* ty=Tensor[(10), int16] */;
  %200 = reshape(%198, newshape=[]) /* ty=int16 */;
  %201 = reshape(%199, newshape=[10]) /* ty=Tensor[(10), int16] */;
  %202 = @func_5337(%200, %201) /* ty=(Tensor[(7, 1, 6), int64], int16, Tensor[(10), int16], Tensor[(15, 6, 3), float64]) */;
  %203 = %197.1;
  %204 = %202.0;
  (%203, %204, meta[relay.Constant][19] /* ty=int16 */, %var_8302)
}

def @func_1103(%var_1093: int32, %var_1094: Tensor[(10, 4, 5), int32]) -> Tensor[(10, 4, 5), bool] {
  %205 = cast(%var_1093, dtype="bool") /* ty=bool */;
  %206 = cast(%var_1094, dtype="bool") /* ty=Tensor[(10, 4, 5), bool] */;
  greater_equal(%205, %206) /* ty=Tensor[(10, 4, 5), bool] */
}

def @func_5433() -> (Tensor[(15, 6, 3), int32], Tensor[(2, 4, 13), float32], Tensor[(104), float64]) {
  %207 = @func_5199() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %208 = cast(meta[relay.Constant][20] /* ty=Tensor[(104), float64] */, dtype="float64") /* ty=Tensor[(104), float64] */;
  %209 = reshape(%208, newshape=[2, 4, 13]) /* ty=Tensor[(2, 4, 13), float64] */;
  %210 = %207.0;
  %211 = @func_2777(%209) /* ty=Tensor[(2, 4, 13), float32] */;
  (%210, %211, meta[relay.Constant][20] /* ty=Tensor[(104), float64] */)
}

def @func_4465() -> (Tensor[(15, 6, 3), float32], Tensor[(15, 6, 3), float64]) {
  %212 = @func_4052() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %213 = %212.0;
  %214 = cast(%213, dtype="float32") /* ty=Tensor[(15, 6, 3), float32] */;
  %215 = @func_4052() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %216 = %215.0;
  %217 = cast(%213, dtype="float64") /* ty=Tensor[(15, 6, 3), float64] */;
  %218 = shape_of(%216, dtype="int32") /* ty=Tensor[(3), int32] */;
  %219 = cast(%216, dtype="float64") /* ty=Tensor[(15, 6, 3), float64] */;
  %220 = dyn.reshape(%217, %218, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %221 = cos(%214) /* ty=Tensor[(15, 6, 3), float32] */;
  %222 = divide(%219, %220) /* ty=Tensor[(15, 6, 3), float64] */;
  (%221, %222)
}

def @func_1666(%var_1663: Tensor[(14, 15, 5), float64]) -> Tensor[(14, 15, 5), float64] {
  %223 = cast(%var_1663, dtype="float64") /* ty=Tensor[(14, 15, 5), float64] */;
  rsqrt(%223) /* ty=Tensor[(14, 15, 5), float64] */
}

def @func_4222(%var_4189: Tensor[(50), float32], %var_4190: Tensor[(250, 3), float64], %var_4200: Tensor[(50), float32]) -> (Tensor[(10, 5, 2), float64], Tensor[(250, 3), float64], Tensor[(1, 100), float64], Tensor[(50), float64], Tensor[(15, 6, 3), bool]) {
  %224 = cast(%var_4189, dtype="float32") /* ty=Tensor[(50), float32] */;
  %225 = cast(%var_4190, dtype="float64") /* ty=Tensor[(250, 3), float64] */;
  %226 = cast(meta[relay.Constant][21] /* ty=Tensor[(1, 100), float64] */, dtype="float64") /* ty=Tensor[(1, 100), float64] */;
  %227 = reshape(%224, newshape=[10, 5, 1]) /* ty=Tensor[(10, 5, 1), float32] */;
  %228 = reshape(%225, newshape=[10, 5, 15]) /* ty=Tensor[(10, 5, 15), float64] */;
  %229 = reshape(%226, newshape=[100]) /* ty=Tensor[(100), float64] */;
  %230 = @func_2200(%227, %228, %229) /* ty=(Tensor[(10, 5, 15), bool], Tensor[(10, 5, 15), float32], Tensor[(10, 5, 2), float64], Tensor[(100), float64], Tensor[(9, 8, 10), bool], Tensor[(720), int32], Tensor[(1716), uint64], Tensor[(9, 8, 10), bool], Tensor[(10, 5, 1), float32], Tensor[(10, 5, ?), uint8]) */;
  %231 = cast(%var_4200, dtype="float64") /* ty=Tensor[(50), float64] */;
  %232 = shape_of(%var_4189, dtype="int32") /* ty=Tensor[(1), int32] */;
  %233 = cast(%var_4189, dtype="float64") /* ty=Tensor[(50), float64] */;
  %234 = dyn.reshape(%231, %232, newshape=[]) /* ty=Tensor[(?), float64] */;
  %235 = @func_4139() /* ty=Tensor[(15, 6, 3), int32] */;
  %236 = @func_4052() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %237 = %236.0;
  %238 = cast(%237, dtype="bool") /* ty=Tensor[(15, 6, 3), bool] */;
  %239 = shape_of(%235, dtype="int32") /* ty=Tensor[(3), int32] */;
  %240 = cast(%235, dtype="bool") /* ty=Tensor[(15, 6, 3), bool] */;
  %241 = dyn.reshape(%238, %239, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %242 = equal(%240, %241) /* ty=Tensor[(15, 6, 3), bool] */;
  %243 = cast(%237, dtype="bool") /* ty=Tensor[(15, 6, 3), bool] */;
  %244 = shape_of(%242, dtype="int32") /* ty=Tensor[(3), int32] */;
  %245 = cast(%242, dtype="bool") /* ty=Tensor[(15, 6, 3), bool] */;
  %246 = dyn.reshape(%243, %244, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %247 = %230.2;
  %248 = power(%233, %234) /* ty=Tensor[(50), float64] */;
  %249 = greater(%245, %246) /* ty=Tensor[(15, 6, 3), bool] */;
  (%247, %var_4190, meta[relay.Constant][21] /* ty=Tensor[(1, 100), float64] */, %248, %249)
}

def @main(%var_8816: Tensor[(1, 12, 2), float32]) -> (Tensor[(1, 12, 2), float32],) {
  %250 = cast(%var_8816, dtype="float32") /* ty=Tensor[(1, 12, 2), float32] */;
  %251 = exp(%250) /* ty=Tensor[(1, 12, 2), float32] */;
  (%251,)
}

def @func_4139() -> Tensor[(15, 6, 3), int32] {
  %252 = @func_4052() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %252.0
}

def @func_2288(%var_2214: Tensor[(12, 8, 8), float32], %var_2245: Tensor[(1050), float64], %var_2282: Tensor[(100), float64]) -> (Tensor[(10, 4, 5), bool], Tensor[(200), int32], Tensor[(14, 15, 5), float64], Tensor[(1050), float64], Tensor[(12, 8, 8), float32], Tensor[(?, 100), float64], Tensor[(1716), uint64], Tensor[(100), float64]) {
  %253 = cast(-8 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %254 = cast(meta[relay.Constant][22] /* ty=Tensor[(200), int32] */, dtype="int32") /* ty=Tensor[(200), int32] */;
  %255 = reshape(%253, newshape=[]) /* ty=int32 */;
  %256 = reshape(%254, newshape=[10, 4, 5]) /* ty=Tensor[(10, 4, 5), int32] */;
  %257 = cast(%var_2245, dtype="float64") /* ty=Tensor[(1050), float64] */;
  %258 = reshape(%257, newshape=[14, 15, 5]) /* ty=Tensor[(14, 15, 5), float64] */;
  %259 = cast(%var_2214, dtype="float32") /* ty=Tensor[(12, 8, 8), float32] */;
  %260 = cos(%259) /* ty=Tensor[(12, 8, 8), float32] */;
  %261 = cast(%260, dtype="bool") /* ty=Tensor[(12, 8, 8), bool] */;
  %262 = cast(-8 /* ty=int32 */, dtype="bool") /* ty=bool */;
  %263 = greater_equal(%261, %262) /* ty=Tensor[(12, 8, 8), bool] */;
  %264 = cast(%263, dtype="float32") /* ty=Tensor[(12, 8, 8), float32] */;
  %265 = cast(meta[relay.Constant][23] /* ty=Tensor[(1716), uint64] */, dtype="uint64") /* ty=Tensor[(1716), uint64] */;
  %266 = cast(%var_2282, dtype="float64") /* ty=Tensor[(100), float64] */;
  %267 = reshape(%265, newshape=[11, 12, 13]) /* ty=Tensor[(11, 12, 13), uint64] */;
  %268 = reshape(%266, newshape=[1, 100]) /* ty=Tensor[(1, 100), float64] */;
  %269 = @func_1024(%267, %268) /* ty=(Tensor[(11, 12, 13), uint64], Tensor[(?, 100), float64]) */;
  %270 = @func_1103(%255, %256) /* ty=Tensor[(10, 4, 5), bool] */;
  %271 = @func_1666(%258) /* ty=Tensor[(14, 15, 5), float64] */;
  %272 = acos(%264) /* ty=Tensor[(12, 8, 8), float32] */;
  %273 = %269.1;
  (%270, meta[relay.Constant][22] /* ty=Tensor[(200), int32] */, %271, %var_2245, %272, %273, meta[relay.Constant][23] /* ty=Tensor[(1716), uint64] */, %var_2282)
}

def @func_1929(%var_1920: Tensor[(3, 8, 13), uint32], %var_1921: Tensor[(3, 8, 13), uint32]) -> (Tensor[(3, 8, 13), uint32], Tensor[(100), float64], Tensor[(180, 4), int32], Tensor[(1716), uint64]) {
  %274 = cast(%var_1921, dtype="uint32") /* ty=Tensor[(3, 8, 13), uint32] */;
  %275 = shape_of(%var_1920, dtype="int32") /* ty=Tensor[(3), int32] */;
  %276 = cast(%var_1920, dtype="uint32") /* ty=Tensor[(3, 8, 13), uint32] */;
  %277 = dyn.reshape(%274, %275, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %278 = cast(meta[relay.Constant][24] /* ty=Tensor[(180, 4), int32] */, dtype="int32") /* ty=Tensor[(180, 4), int32] */;
  %279 = cast(meta[relay.Constant][24] /* ty=Tensor[(180, 4), int32] */, dtype="int32") /* ty=Tensor[(180, 4), int32] */;
  %280 = cast(meta[relay.Constant][25] /* ty=Tensor[(1716), uint64] */, dtype="uint64") /* ty=Tensor[(1716), uint64] */;
  %281 = reshape(%278, newshape=[9, 8, 10]) /* ty=Tensor[(9, 8, 10), int32] */;
  %282 = reshape(%279, newshape=[9, 8, 10]) /* ty=Tensor[(9, 8, 10), int32] */;
  %283 = reshape(%280, newshape=[1716]) /* ty=Tensor[(1716), uint64] */;
  %284 = @func_1470(%281, %282, %283) /* ty=(Tensor[(9, 8, 10), bool], Tensor[(11, 12, 13), uint64], Tensor[(1716), uint64], Tensor[(100), float64]) */;
  %285 = bitwise_xor(%276, %277) /* ty=Tensor[(3, 8, 13), uint32] */;
  %286 = %284.3;
  (%285, %286, meta[relay.Constant][24] /* ty=Tensor[(180, 4), int32] */, meta[relay.Constant][25] /* ty=Tensor[(1716), uint64] */)
}

def @func_7125() -> (Tensor[(15, 6, 3), int32],) {
  %287 = @func_4052() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %288 = %287.0;
  (%288,)
}

def @func_3071(%var_3052: uint8, %var_3053: Tensor[(10, 16, 10), uint8], %var_3068: Tensor[(546), float32]) -> (Tensor[(10, 16, 10), uint8], Tensor[(7, 1, 6), int64], Tensor[(546), float32]) {
  %289 = cast(%var_3052, dtype="uint8") /* ty=uint8 */;
  %290 = cast(%var_3053, dtype="uint8") /* ty=Tensor[(10, 16, 10), uint8] */;
  %291 = cast(%var_3068, dtype="float32") /* ty=Tensor[(546), float32] */;
  %292 = reshape(%291, newshape=[13, 6, 7]) /* ty=Tensor[(13, 6, 7), float32] */;
  %293 = @func_1747(%292) /* ty=(Tensor[(13, 6, 7), bool], Tensor[(7, 1, 6), int64], Tensor[(990), float64], Tensor[(2310), float64]) */;
  %294 = minimum(%289, %290) /* ty=Tensor[(10, 16, 10), uint8] */;
  %295 = %293.1;
  (%294, %295, %var_3068)
}

def @func_3658(%var_3630: Tensor[(10, 9, 5), float64], %var_3647: Tensor[(50, 2), float64]) -> (Tensor[(10, 9, 5), float64], Tensor[(10, 9, 5), int32], Tensor[(10, 5, 2), float64], Tensor[(50, 2), float64]) {
  %296 = cast(%var_3630, dtype="float64") /* ty=Tensor[(10, 9, 5), float64] */;
  %297 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(10, 9, 5), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %298 = cast(meta[relay.Constant][26] /* ty=Tensor[(10, 9, 5), float64] */, dtype="float64") /* ty=Tensor[(10, 9, 5), float64] */;
  %299 = dyn.reshape(%296, %297, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %300 = cast(meta[relay.Constant][26] /* ty=Tensor[(10, 9, 5), float64] */, dtype="int32") /* ty=Tensor[(10, 9, 5), int32] */;
  %301 = shape_of(%var_3630, dtype="int32") /* ty=Tensor[(3), int32] */;
  %302 = cast(%var_3630, dtype="int32") /* ty=Tensor[(10, 9, 5), int32] */;
  %303 = dyn.reshape(%300, %301, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %304 = cast(%var_3647, dtype="float64") /* ty=Tensor[(50, 2), float64] */;
  %305 = reshape(%304, newshape=[10, 5, 2]) /* ty=Tensor[(10, 5, 2), float64] */;
  %306 = @func_140(%305) /* ty=(Tensor[(10, 5, 2), float64],) */;
  %307 = divide(%298, %299) /* ty=Tensor[(10, 9, 5), float64] */;
  %308 = add(%302, %303) /* ty=Tensor[(10, 9, 5), int32] */;
  %309 = %306.0;
  (%307, %308, %309, %var_3647)
}

def @func_4512() -> (Tensor[(15, 6, 3), float64],) {
  %310 = @func_4465() /* ty=(Tensor[(15, 6, 3), float32], Tensor[(15, 6, 3), float64]) */;
  %311 = %310.1;
  (%311,)
}

def @func_5599() -> (Tensor[(12, 6, 4), float32], Tensor[(15, 6, 3), float64]) {
  %312 = cast(-5.44061f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %313 = cast(meta[relay.Constant][27] /* ty=Tensor[(12, 6, 4), float32] */, dtype="float32") /* ty=Tensor[(12, 6, 4), float32] */;
  %314 = @func_4465() /* ty=(Tensor[(15, 6, 3), float32], Tensor[(15, 6, 3), float64]) */;
  %315 = divide(%312, %313) /* ty=Tensor[(12, 6, 4), float32] */;
  %316 = %314.1;
  (%315, %316)
}

def @func_4427() -> (Tensor[(15, 6, 3), int32],) {
  %317 = @func_4139() /* ty=Tensor[(15, 6, 3), int32] */;
  (%317,)
}

def @func_1747(%var_1735: Tensor[(13, 6, 7), float32]) -> (Tensor[(13, 6, 7), bool], Tensor[(7, 1, 6), int64], Tensor[(990), float64], Tensor[(2310), float64]) {
  %318 = cast(%var_1735, dtype="bool") /* ty=Tensor[(13, 6, 7), bool] */;
  %319 = shape_of(meta[relay.Constant][28] /* ty=Tensor[(13, 6, 7), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %320 = cast(meta[relay.Constant][28] /* ty=Tensor[(13, 6, 7), float32] */, dtype="bool") /* ty=Tensor[(13, 6, 7), bool] */;
  %321 = dyn.reshape(%318, %319, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %322 = cast(meta[relay.Constant][29] /* ty=Tensor[(990), float64] */, dtype="float64") /* ty=Tensor[(990), float64] */;
  %323 = cast(meta[relay.Constant][30] /* ty=Tensor[(2310), float64] */, dtype="float64") /* ty=Tensor[(2310), float64] */;
  %324 = reshape(%322, newshape=[10, 11, 9]) /* ty=Tensor[(10, 11, 9), float64] */;
  %325 = reshape(%323, newshape=[2310]) /* ty=Tensor[(2310), float64] */;
  %326 = @func_813(%324, %325) /* ty=(Tensor[(10, 11, 9), float64], Tensor[(7, 1, 6), int64], int64, Tensor[(15, 14, 11), float64], Tensor[(2310), float64]) */;
  %327 = less(%320, %321) /* ty=Tensor[(13, 6, 7), bool] */;
  %328 = %326.1;
  (%327, %328, meta[relay.Constant][29] /* ty=Tensor[(990), float64] */, meta[relay.Constant][30] /* ty=Tensor[(2310), float64] */)
}

def @func_7332(%var_7327: Tensor[(10, 1053), int16]) -> Tensor[(10, 1053), uint16] {
  %329 = @func_5751() /* ty=Tensor[(1, 1053), int16] */;
  %330 = cast(%329, dtype="uint16") /* ty=Tensor[(1, 1053), uint16] */;
  %331 = cast(%var_7327, dtype="uint16") /* ty=Tensor[(10, 1053), uint16] */;
  minimum(%330, %331) /* ty=Tensor[(10, 1053), uint16] */
}

def @func_7430() -> (Tensor[(15, 6, 3), int32], Tensor[(15, 6, 3), float64], Tensor[(15, 6, 3), int32]) {
  %332 = @func_5004() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %333 = @func_4465() /* ty=(Tensor[(15, 6, 3), float32], Tensor[(15, 6, 3), float64]) */;
  %334 = @func_4052() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %335 = %332.0;
  %336 = %333.1;
  %337 = %334.0;
  (%335, %336, %337)
}

def @func_5961(%var_5923: Tensor[(13, 1053), int16], %var_5948: Tensor[(990), float64]) -> (Tensor[(13, 1053), bool], Tensor[(?, 1053), float64], Tensor[(15, 6, 3), int32], Tensor[(990), float64], Tensor[(13, 1053), float32]) {
  %338 = @func_5645() /* ty=Tensor[(1, 1053), int16] */;
  %339 = cast(%338, dtype="bool") /* ty=Tensor[(1, 1053), bool] */;
  %340 = cast(%var_5923, dtype="bool") /* ty=Tensor[(13, 1053), bool] */;
  %341 = cast(%338, dtype="float64") /* ty=Tensor[(1, 1053), float64] */;
  %342 = sigmoid(%341) /* ty=Tensor[(1, 1053), float64] */;
  %343 = cast(%338, dtype="float64") /* ty=Tensor[(1, 1053), float64] */;
  %344 = shape_of(%342, dtype="int32") /* ty=Tensor[(2), int32] */;
  %345 = cast(%342, dtype="float64") /* ty=Tensor[(1, 1053), float64] */;
  %346 = dyn.reshape(%343, %344, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %347 = cast(%var_5948, dtype="float64") /* ty=Tensor[(990), float64] */;
  %348 = reshape(%347, newshape=[990]) /* ty=Tensor[(990), float64] */;
  %349 = @func_5569(%348) /* ty=(Tensor[(15, 6, 3), int32], Tensor[(400), float64], Tensor[(990), float64], Tensor[(15, 6, 3), float32]) */;
  %350 = cast(%342, dtype="float32") /* ty=Tensor[(1, 1053), float32] */;
  %351 = cast(%var_5923, dtype="float32") /* ty=Tensor[(13, 1053), float32] */;
  %352 = not_equal(%339, %340) /* ty=Tensor[(13, 1053), bool] */;
  %353 = multiply(%345, %346) /* ty=Tensor[(?, 1053), float64] */;
  %354 = %349.0;
  %355 = floor_divide(%350, %351) /* ty=Tensor[(13, 1053), float32] */;
  (%352, %353, %354, %var_5948, %355)
}

def @func_7950(%var_7944: Tensor[(80), float64]) -> (Tensor[(15, 6, 3), int32], Tensor[(990), float64], Tensor[(312), uint32], Tensor[(80), float64], Tensor[(768), float32], Tensor[(312), uint32]) {
  %356 = @func_6865() /* ty=(int64, Tensor[(990), float64], Tensor[(770, 3), float64], Tensor[(15, 6, 3), int32], Tensor[(2, 4, 13), float64]) */;
  %357 = cast(%var_7944, dtype="float64") /* ty=Tensor[(80), float64] */;
  %358 = cast(meta[relay.Constant][31] /* ty=Tensor[(768), float32] */, dtype="float32") /* ty=Tensor[(768), float32] */;
  %359 = cast(meta[relay.Constant][32] /* ty=Tensor[(312), uint32] */, dtype="uint32") /* ty=Tensor[(312), uint32] */;
  %360 = reshape(%357, newshape=[80]) /* ty=Tensor[(80), float64] */;
  %361 = reshape(%358, newshape=[768]) /* ty=Tensor[(768), float32] */;
  %362 = reshape(%359, newshape=[312]) /* ty=Tensor[(312), uint32] */;
  %363 = @func_4901(%360, %361, %362) /* ty=(Tensor[(15, 6, 3), float64], Tensor[(2, 4, 10), float64], Tensor[(80), float64], Tensor[(7, 1, 6), int64], uint8, Tensor[(546), float32], Tensor[(100, 16), float64], Tensor[(12, 8, 8), float32], Tensor[(768), float32], Tensor[(1050), float64], Tensor[(100), float64], Tensor[(3, 8, 13), uint32], Tensor[(312), uint32]) */;
  %364 = @func_7532() /* ty=Tensor[(15, 6, 3), int32] */;
  %365 = %356.1;
  %366 = %363.12;
  (%364, %365, %366, %var_7944, meta[relay.Constant][31] /* ty=Tensor[(768), float32] */, meta[relay.Constant][32] /* ty=Tensor[(312), uint32] */)
}

def @func_8063(%var_8037: Tensor[(5, 150), float64], %var_8043: Tensor[(5, 150), float64]) -> (Tensor[(15, 6, 3), float32], Tensor[(10, 5, 2), float64], Tensor[(5, 10), float32], Tensor[(100), float64], Tensor[(5, 150), bool]) {
  %367 = @func_4465() /* ty=(Tensor[(15, 6, 3), float32], Tensor[(15, 6, 3), float64]) */;
  %368 = cast(meta[relay.Constant][33] /* ty=Tensor[(5, 10), float32] */, dtype="float32") /* ty=Tensor[(5, 10), float32] */;
  %369 = cast(%var_8037, dtype="float64") /* ty=Tensor[(5, 150), float64] */;
  %370 = cast(meta[relay.Constant][34] /* ty=Tensor[(100), float64] */, dtype="float64") /* ty=Tensor[(100), float64] */;
  %371 = reshape(%368, newshape=[10, 5, 1]) /* ty=Tensor[(10, 5, 1), float32] */;
  %372 = reshape(%369, newshape=[10, 5, 15]) /* ty=Tensor[(10, 5, 15), float64] */;
  %373 = reshape(%370, newshape=[100]) /* ty=Tensor[(100), float64] */;
  %374 = @func_2200(%371, %372, %373) /* ty=(Tensor[(10, 5, 15), bool], Tensor[(10, 5, 15), float32], Tensor[(10, 5, 2), float64], Tensor[(100), float64], Tensor[(9, 8, 10), bool], Tensor[(720), int32], Tensor[(1716), uint64], Tensor[(9, 8, 10), bool], Tensor[(10, 5, 1), float32], Tensor[(10, 5, ?), uint8]) */;
  %375 = cast(%var_8043, dtype="bool") /* ty=Tensor[(5, 150), bool] */;
  %376 = shape_of(%var_8037, dtype="int32") /* ty=Tensor[(2), int32] */;
  %377 = cast(%var_8037, dtype="bool") /* ty=Tensor[(5, 150), bool] */;
  %378 = dyn.reshape(%375, %376, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %379 = %367.0;
  %380 = %374.2;
  %381 = logical_or(%377, %378) /* ty=Tensor[(5, 150), bool] */;
  (%379, %380, meta[relay.Constant][33] /* ty=Tensor[(5, 10), float32] */, meta[relay.Constant][34] /* ty=Tensor[(100), float64] */, %381)
}

def @func_7532() -> Tensor[(15, 6, 3), int32] {
  @func_7088() /* ty=Tensor[(15, 6, 3), int32] */
}

def @func_6421() -> (Tensor[(104), float64],) {
  %382 = @func_5433() /* ty=(Tensor[(15, 6, 3), int32], Tensor[(2, 4, 13), float32], Tensor[(104), float64]) */;
  %383 = %382.2;
  (%383,)
}

def @func_8140(%var_8137: Tensor[(16, 48), float32]) -> (Tensor[(15, 6, 3), int32], Tensor[(768), float32], Tensor[(16, 48), float32], Tensor[(312), uint32]) {
  %384 = @func_4019() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %385 = cast(%var_8137, dtype="float32") /* ty=Tensor[(16, 48), float32] */;
  %386 = cast(meta[relay.Constant][35] /* ty=Tensor[(312), uint32] */, dtype="uint32") /* ty=Tensor[(312), uint32] */;
  %387 = reshape(%385, newshape=[768]) /* ty=Tensor[(768), float32] */;
  %388 = reshape(%386, newshape=[312]) /* ty=Tensor[(312), uint32] */;
  %389 = @func_5831(%387, %388) /* ty=(Tensor[(15, 6, 3), float64], Tensor[(80), float64], Tensor[(768), float32], Tensor[(312), uint32], Tensor[(12, 8, 8), float32]) */;
  %390 = %384.0;
  %391 = %389.2;
  (%390, %391, %var_8137, meta[relay.Constant][35] /* ty=Tensor[(312), uint32] */)
}

def @func_5(%var_0: int64) -> (Tensor[(7, 1, 6), int64],) {
  %392 = cast(%var_0, dtype="int64") /* ty=int64 */;
  %393 = cast(meta[relay.Constant][36] /* ty=Tensor[(7, 1, 6), int64] */, dtype="int64") /* ty=Tensor[(7, 1, 6), int64] */;
  %394 = logical_xor(%392, %393) /* ty=Tensor[(7, 1, 6), int64] */;
  (%394,)
}

def @func_813(%var_790: Tensor[(10, 11, 9), float64], %var_805: Tensor[(2310), float64]) -> (Tensor[(10, 11, 9), float64], Tensor[(7, 1, 6), int64], int64, Tensor[(15, 14, 11), float64], Tensor[(2310), float64]) {
  %395 = cast(%var_790, dtype="float64") /* ty=Tensor[(10, 11, 9), float64] */;
  %396 = cast(-4 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %397 = reshape(%396, newshape=[]) /* ty=int64 */;
  %398 = @func_5(%397) /* ty=(Tensor[(7, 1, 6), int64],) */;
  %399 = cast(%var_805, dtype="float64") /* ty=Tensor[(2310), float64] */;
  %400 = reshape(%399, newshape=[15, 14, 11]) /* ty=Tensor[(15, 14, 11), float64] */;
  %401 = asin(%395) /* ty=Tensor[(10, 11, 9), float64] */;
  %402 = %398.0;
  %403 = @func_355(%400) /* ty=Tensor[(15, 14, 11), float64] */;
  (%401, %402, -4 /* ty=int64 */, %403, %var_805)
}

def @func_8800(%var_8764: Tensor[(3, 2, 13), float64]) -> (Tensor[(15, 6, 3), int32], Tensor[(12, 6, 4), float32], Tensor[(1, 78), float64], Tensor[(3, 2, 13), bool], Tensor[(1050), float64], Tensor[(80), float64], Tensor[(16, 48), float32], Tensor[(6, 52), uint32]) {
  %404 = @func_7035() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %405 = @func_5599() /* ty=(Tensor[(12, 6, 4), float32], Tensor[(15, 6, 3), float64]) */;
  %406 = cast(meta[relay.Constant][37] /* ty=Tensor[(1, 78), float64] */, dtype="float64") /* ty=Tensor[(1, 78), float64] */;
  %407 = reshape(%406, newshape=[3, 2, 13]) /* ty=Tensor[(3, 2, 13), float64] */;
  %408 = @func_1422(%407) /* ty=(Tensor[(3, 2, 13), float64],) */;
  %409 = %408.0;
  %410 = cast(%var_8764, dtype="bool") /* ty=Tensor[(3, 2, 13), bool] */;
  %411 = shape_of(%409, dtype="int32") /* ty=Tensor[(3), int32] */;
  %412 = cast(%409, dtype="bool") /* ty=Tensor[(3, 2, 13), bool] */;
  %413 = dyn.reshape(%410, %411, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %414 = cast(meta[relay.Constant][38] /* ty=Tensor[(80), float64] */, dtype="float64") /* ty=Tensor[(80), float64] */;
  %415 = cast(meta[relay.Constant][39] /* ty=Tensor[(16, 48), float32] */, dtype="float32") /* ty=Tensor[(16, 48), float32] */;
  %416 = cast(meta[relay.Constant][40] /* ty=Tensor[(6, 52), uint32] */, dtype="uint32") /* ty=Tensor[(6, 52), uint32] */;
  %417 = reshape(%414, newshape=[80]) /* ty=Tensor[(80), float64] */;
  %418 = reshape(%415, newshape=[768]) /* ty=Tensor[(768), float32] */;
  %419 = reshape(%416, newshape=[312]) /* ty=Tensor[(312), uint32] */;
  %420 = @func_4901(%417, %418, %419) /* ty=(Tensor[(15, 6, 3), float64], Tensor[(2, 4, 10), float64], Tensor[(80), float64], Tensor[(7, 1, 6), int64], uint8, Tensor[(546), float32], Tensor[(100, 16), float64], Tensor[(12, 8, 8), float32], Tensor[(768), float32], Tensor[(1050), float64], Tensor[(100), float64], Tensor[(3, 8, 13), uint32], Tensor[(312), uint32]) */;
  %421 = %404.0;
  %422 = %405.0;
  %423 = equal(%412, %413) /* ty=Tensor[(3, 2, 13), bool] */;
  %424 = %420.9;
  (%421, %422, meta[relay.Constant][37] /* ty=Tensor[(1, 78), float64] */, %423, %424, meta[relay.Constant][38] /* ty=Tensor[(80), float64] */, meta[relay.Constant][39] /* ty=Tensor[(16, 48), float32] */, meta[relay.Constant][40] /* ty=Tensor[(6, 52), uint32] */)
}

def @func_4699() -> (Tensor[(15, 6, 3), float64], Tensor[(13, 6, 7), bool], Tensor[(1, 1053), int16]) {
  %425 = @func_4512() /* ty=(Tensor[(15, 6, 3), float64],) */;
  %426 = cast(meta[relay.Constant][41] /* ty=Tensor[(1, 1053), int16] */, dtype="int16") /* ty=Tensor[(1, 1053), int16] */;
  %427 = cast(meta[relay.Constant][41] /* ty=Tensor[(1, 1053), int16] */, dtype="int16") /* ty=Tensor[(1, 1053), int16] */;
  %428 = reshape(%426, newshape=[9, 13, 9]) /* ty=Tensor[(9, 13, 9), int16] */;
  %429 = reshape(%427, newshape=[9, 13, 9]) /* ty=Tensor[(9, 13, 9), int16] */;
  %430 = @func_3867(%428, %429) /* ty=(Tensor[(13, 6, 7), bool], Tensor[(546), float32], Tensor[(9, 13, 9), uint8]) */;
  %431 = %425.0;
  %432 = %430.0;
  (%431, %432, meta[relay.Constant][41] /* ty=Tensor[(1, 1053), int16] */)
}

def @func_6641() -> (Tensor[(104), float32],) {
  %433 = @func_6421() /* ty=(Tensor[(104), float64],) */;
  %434 = %433.0;
  %435 = cast(%434, dtype="float32") /* ty=Tensor[(104), float32] */;
  %436 = sin(%435) /* ty=Tensor[(104), float32] */;
  (%436,)
}

def @func_3152(%var_3127: Tensor[(11, 8, 14), float32], %var_3140: Tensor[(100), float64]) -> (Tensor[(?, 100), float64], Tensor[(1716), uint64], Tensor[(100), float64], Tensor[(3, 8, 13), uint32], Tensor[(312), uint32], Tensor[(11, 8, 14), float32]) {
  %437 = cast(meta[relay.Constant][42] /* ty=Tensor[(1716), uint64] */, dtype="uint64") /* ty=Tensor[(1716), uint64] */;
  %438 = cast(%var_3140, dtype="float64") /* ty=Tensor[(100), float64] */;
  %439 = reshape(%437, newshape=[11, 12, 13]) /* ty=Tensor[(11, 12, 13), uint64] */;
  %440 = reshape(%438, newshape=[1, 100]) /* ty=Tensor[(1, 100), float64] */;
  %441 = @func_1024(%439, %440) /* ty=(Tensor[(11, 12, 13), uint64], Tensor[(?, 100), float64]) */;
  %442 = cast(meta[relay.Constant][43] /* ty=Tensor[(312), uint32] */, dtype="uint32") /* ty=Tensor[(312), uint32] */;
  %443 = cast(meta[relay.Constant][43] /* ty=Tensor[(312), uint32] */, dtype="uint32") /* ty=Tensor[(312), uint32] */;
  %444 = reshape(%442, newshape=[3, 8, 13]) /* ty=Tensor[(3, 8, 13), uint32] */;
  %445 = reshape(%443, newshape=[3, 8, 13]) /* ty=Tensor[(3, 8, 13), uint32] */;
  %446 = @func_1929(%444, %445) /* ty=(Tensor[(3, 8, 13), uint32], Tensor[(100), float64], Tensor[(180, 4), int32], Tensor[(1716), uint64]) */;
  %447 = cast(%var_3127, dtype="float32") /* ty=Tensor[(11, 8, 14), float32] */;
  %448 = sin(%447) /* ty=Tensor[(11, 8, 14), float32] */;
  %449 = cast(%448, dtype="float64") /* ty=Tensor[(11, 8, 14), float64] */;
  %450 = sigmoid(%449) /* ty=Tensor[(11, 8, 14), float64] */;
  %451 = cast(%450, dtype="float32") /* ty=Tensor[(11, 8, 14), float32] */;
  %452 = shape_of(%448, dtype="int32") /* ty=Tensor[(3), int32] */;
  %453 = cast(%448, dtype="float32") /* ty=Tensor[(11, 8, 14), float32] */;
  %454 = dyn.reshape(%451, %452, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %455 = %441.1;
  %456 = %446.0;
  %457 = divide(%453, %454) /* ty=Tensor[(11, 8, 14), float32] */;
  (%455, meta[relay.Constant][42] /* ty=Tensor[(1716), uint64] */, %var_3140, %456, meta[relay.Constant][43] /* ty=Tensor[(312), uint32] */, %457)
}

def @func_4851(%var_4836: Tensor[(21, 5), bool]) -> (Tensor[(15, 6, 3), float64], Tensor[(990), float64], Tensor[(2310), float64], Tensor[(21, 5), uint8]) {
  %458 = @func_4512() /* ty=(Tensor[(15, 6, 3), float64],) */;
  %459 = cast(meta[relay.Constant][44] /* ty=Tensor[(21, 5), bool] */, dtype="bool") /* ty=Tensor[(21, 5), bool] */;
  %460 = cast(meta[relay.Constant][44] /* ty=Tensor[(21, 5), bool] */, dtype="bool") /* ty=Tensor[(21, 5), bool] */;
  %461 = cast(meta[relay.Constant][45] /* ty=Tensor[(2310), float64] */, dtype="float64") /* ty=Tensor[(2310), float64] */;
  %462 = reshape(%459, newshape=[15, 1, 7]) /* ty=Tensor[(15, 1, 7), bool] */;
  %463 = reshape(%460, newshape=[15, 1, 7]) /* ty=Tensor[(15, 1, 7), bool] */;
  %464 = reshape(%461, newshape=[2310]) /* ty=Tensor[(2310), float64] */;
  %465 = @func_3822(%462, %463, %464) /* ty=(Tensor[(15, ?, 7), bool], Tensor[(2310), float64], Tensor[(990), float64], Tensor[(2310), float64]) */;
  %466 = cast(%var_4836, dtype="uint8") /* ty=Tensor[(21, 5), uint8] */;
  %467 = shape_of(meta[relay.Constant][44] /* ty=Tensor[(21, 5), bool] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %468 = cast(meta[relay.Constant][44] /* ty=Tensor[(21, 5), bool] */, dtype="uint8") /* ty=Tensor[(21, 5), uint8] */;
  %469 = dyn.reshape(%466, %467, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %470 = %458.0;
  %471 = %465.2;
  %472 = minimum(%468, %469) /* ty=Tensor[(21, 5), uint8] */;
  (%470, %471, meta[relay.Constant][45] /* ty=Tensor[(2310), float64] */, %472)
}

def @func_6927() -> (Tensor[(15, 6, 3), int32],) {
  %473 = @func_6700() /* ty=(Tensor[(15, 6, 3), float64], Tensor[(15, 6, 3), int32], Tensor[(15, 6, 3), float32]) */;
  %474 = %473.1;
  (%474,)
}

def @func_7069(%var_7061: Tensor[(1716), uint64], %var_7062: Tensor[(100), float64]) -> (Tensor[(15, 6, 3), float64], Tensor[(?, 100), float64], Tensor[(1716), uint64], Tensor[(100), float64], Tensor[(15, 6, 3), int32]) {
  %475 = @func_4465() /* ty=(Tensor[(15, 6, 3), float32], Tensor[(15, 6, 3), float64]) */;
  %476 = cast(%var_7061, dtype="uint64") /* ty=Tensor[(1716), uint64] */;
  %477 = cast(%var_7062, dtype="float64") /* ty=Tensor[(100), float64] */;
  %478 = reshape(%476, newshape=[11, 12, 13]) /* ty=Tensor[(11, 12, 13), uint64] */;
  %479 = reshape(%477, newshape=[1, 100]) /* ty=Tensor[(1, 100), float64] */;
  %480 = @func_1024(%478, %479) /* ty=(Tensor[(11, 12, 13), uint64], Tensor[(?, 100), float64]) */;
  %481 = @func_4556() /* ty=(Tensor[(15, 6, 3), int32], Tensor[(15, 6, 3), int32]) */;
  %482 = %475.1;
  %483 = %480.1;
  %484 = %481.1;
  (%482, %483, %var_7061, %var_7062, %484)
}

def @func_8338() -> (Tensor[(15, 6, 3), int32],) {
  %485 = @func_4427() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %486 = %485.0;
  (%486,)
}

def @func_7436() -> (Tensor[(15, 6, 3), int32],) {
  %487 = @func_4052() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %488 = %487.0;
  (%488,)
}

def @func_5645() -> Tensor[(1, 1053), int16] {
  %489 = @func_4699() /* ty=(Tensor[(15, 6, 3), float64], Tensor[(13, 6, 7), bool], Tensor[(1, 1053), int16]) */;
  %489.2
}

def @func_5831(%var_5819: Tensor[(768), float32], %var_5820: Tensor[(312), uint32]) -> (Tensor[(15, 6, 3), float64], Tensor[(80), float64], Tensor[(768), float32], Tensor[(312), uint32], Tensor[(12, 8, 8), float32]) {
  %490 = @func_4465() /* ty=(Tensor[(15, 6, 3), float32], Tensor[(15, 6, 3), float64]) */;
  %491 = cast(meta[relay.Constant][46] /* ty=Tensor[(80), float64] */, dtype="float64") /* ty=Tensor[(80), float64] */;
  %492 = cast(%var_5819, dtype="float32") /* ty=Tensor[(768), float32] */;
  %493 = cast(%var_5820, dtype="uint32") /* ty=Tensor[(312), uint32] */;
  %494 = reshape(%491, newshape=[80]) /* ty=Tensor[(80), float64] */;
  %495 = reshape(%492, newshape=[768]) /* ty=Tensor[(768), float32] */;
  %496 = reshape(%493, newshape=[312]) /* ty=Tensor[(312), uint32] */;
  %497 = @func_4901(%494, %495, %496) /* ty=(Tensor[(15, 6, 3), float64], Tensor[(2, 4, 10), float64], Tensor[(80), float64], Tensor[(7, 1, 6), int64], uint8, Tensor[(546), float32], Tensor[(100, 16), float64], Tensor[(12, 8, 8), float32], Tensor[(768), float32], Tensor[(1050), float64], Tensor[(100), float64], Tensor[(3, 8, 13), uint32], Tensor[(312), uint32]) */;
  %498 = %497.7;
  %499 = cast(%498, dtype="float32") /* ty=Tensor[(12, 8, 8), float32] */;
  %500 = %490.1;
  %501 = sin(%499) /* ty=Tensor[(12, 8, 8), float32] */;
  (%500, meta[relay.Constant][46] /* ty=Tensor[(80), float64] */, %var_5819, %var_5820, %501)
}

def @func_5020(%var_5018: Tensor[(2310), float64]) -> (Tensor[(15, 6, 3), int32], Tensor[(10, 5, 8), float32], Tensor[(2, 200), float64], Tensor[(2310), float64]) {
  %502 = @func_4019() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %503 = cast(meta[relay.Constant][47] /* ty=Tensor[(2, 200), float64] */, dtype="float64") /* ty=Tensor[(2, 200), float64] */;
  %504 = cast(meta[relay.Constant][47] /* ty=Tensor[(2, 200), float64] */, dtype="float64") /* ty=Tensor[(2, 200), float64] */;
  %505 = cast(%var_5018, dtype="float64") /* ty=Tensor[(2310), float64] */;
  %506 = reshape(%503, newshape=[10, 5, 8]) /* ty=Tensor[(10, 5, 8), float64] */;
  %507 = reshape(%504, newshape=[10, 5, 8]) /* ty=Tensor[(10, 5, 8), float64] */;
  %508 = reshape(%505, newshape=[2310]) /* ty=Tensor[(2310), float64] */;
  %509 = @func_1801(%506, %507, %508) /* ty=(Tensor[(10, 5, 8), float64], Tensor[(15, 14, 11), float64], Tensor[(2310), float64], Tensor[(10, 5, 8), float32]) */;
  %510 = %502.0;
  %511 = %509.3;
  (%510, %511, meta[relay.Constant][47] /* ty=Tensor[(2, 200), float64] */, %var_5018)
}

def @func_6865() -> (int64, Tensor[(990), float64], Tensor[(770, 3), float64], Tensor[(15, 6, 3), int32], Tensor[(2, 4, 13), float64]) {
  %512 = cast(meta[relay.Constant][48] /* ty=Tensor[(990), float64] */, dtype="float64") /* ty=Tensor[(990), float64] */;
  %513 = cast(meta[relay.Constant][49] /* ty=Tensor[(770, 3), float64] */, dtype="float64") /* ty=Tensor[(770, 3), float64] */;
  %514 = reshape(%512, newshape=[10, 11, 9]) /* ty=Tensor[(10, 11, 9), float64] */;
  %515 = reshape(%513, newshape=[2310]) /* ty=Tensor[(2310), float64] */;
  %516 = @func_813(%514, %515) /* ty=(Tensor[(10, 11, 9), float64], Tensor[(7, 1, 6), int64], int64, Tensor[(15, 14, 11), float64], Tensor[(2310), float64]) */;
  %517 = @func_6612() /* ty=(Tensor[(15, 6, 3), int32], Tensor[(11, 8, 14), float32], Tensor[(1232), float32], Tensor[(1, 100), float64], Tensor[(15, 6, 3), int32], Tensor[(3, 2, 13), float64], Tensor[(78), float64], Tensor[(2, 4, 13), float32]) */;
  %518 = @func_5217() /* ty=(Tensor[(15, 6, 3), int32], Tensor[(2, 4, 13), float32], Tensor[(104), float64]) */;
  %519 = %518.1;
  %520 = cast(%519, dtype="float64") /* ty=Tensor[(2, 4, 13), float64] */;
  %521 = erf(%520) /* ty=Tensor[(2, 4, 13), float64] */;
  %522 = cast(%521, dtype="float64") /* ty=Tensor[(2, 4, 13), float64] */;
  %523 = %516.2;
  %524 = %517.0;
  %525 = sqrt(%522) /* ty=Tensor[(2, 4, 13), float64] */;
  (%523, meta[relay.Constant][48] /* ty=Tensor[(990), float64] */, meta[relay.Constant][49] /* ty=Tensor[(770, 3), float64] */, %524, %525)
}

def @func_7004(%var_6985: Tensor[(6, 1053), int16]) -> (Tensor[(6, 1053), float32], Tensor[(15, 6, 3), int32]) {
  %526 = @func_5645() /* ty=Tensor[(1, 1053), int16] */;
  %527 = cast(%526, dtype="float32") /* ty=Tensor[(1, 1053), float32] */;
  %528 = cast(%var_6985, dtype="float32") /* ty=Tensor[(6, 1053), float32] */;
  %529 = @func_4052() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %530 = power(%527, %528) /* ty=Tensor[(6, 1053), float32] */;
  %531 = %529.0;
  (%530, %531)
}

def @func_6966() -> (Tensor[(15, 6, 3), bool], Tensor[(15, 6, 3), float64], Tensor[(15, 6, 3), int32]) {
  %532 = @func_6037() /* ty=(Tensor[(15, 6, 3), bool],) */;
  %533 = @func_4512() /* ty=(Tensor[(15, 6, 3), float64],) */;
  %534 = @func_5199() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %535 = %532.0;
  %536 = %533.0;
  %537 = %534.0;
  (%535, %536, %537)
}

def @func_5768() -> Tensor[(15, 6, 3), int32] {
  %538 = @func_4360() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %538.0
}

def @func_355(%var_348: Tensor[(15, 14, 11), float64]) -> Tensor[(15, 14, 11), float64] {
  %539 = cast(%var_348, dtype="float64") /* ty=Tensor[(15, 14, 11), float64] */;
  erf(%539) /* ty=Tensor[(15, 14, 11), float64] */
}

def @func_1470(%var_1456: Tensor[(9, 8, 10), int32], %var_1457: Tensor[(9, 8, 10), int32], %var_1465: Tensor[(1716), uint64]) -> (Tensor[(9, 8, 10), bool], Tensor[(11, 12, 13), uint64], Tensor[(1716), uint64], Tensor[(100), float64]) {
  %540 = cast(%var_1457, dtype="bool") /* ty=Tensor[(9, 8, 10), bool] */;
  %541 = shape_of(%var_1456, dtype="int32") /* ty=Tensor[(3), int32] */;
  %542 = cast(%var_1456, dtype="bool") /* ty=Tensor[(9, 8, 10), bool] */;
  %543 = dyn.reshape(%540, %541, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %544 = cast(%var_1465, dtype="uint64") /* ty=Tensor[(1716), uint64] */;
  %545 = cast(meta[relay.Constant][50] /* ty=Tensor[(100), float64] */, dtype="float64") /* ty=Tensor[(100), float64] */;
  %546 = reshape(%544, newshape=[11, 12, 13]) /* ty=Tensor[(11, 12, 13), uint64] */;
  %547 = reshape(%545, newshape=[1, 100]) /* ty=Tensor[(1, 100), float64] */;
  %548 = @func_1024(%546, %547) /* ty=(Tensor[(11, 12, 13), uint64], Tensor[(?, 100), float64]) */;
  %549 = less(%542, %543) /* ty=Tensor[(9, 8, 10), bool] */;
  %550 = %548.0;
  (%549, %550, %var_1465, meta[relay.Constant][50] /* ty=Tensor[(100), float64] */)
}

def @func_6538() -> Tensor[(15, 6, 3), int32] {
  %551 = @func_4052() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %551.0
}

def @func_5337(%var_5311: int16, %var_5312: Tensor[(10), int16]) -> (Tensor[(7, 1, 6), int64], int16, Tensor[(10), int16], Tensor[(15, 6, 3), float64]) {
  %552 = cast(%var_5311, dtype="int16") /* ty=int16 */;
  %553 = cast(%var_5312, dtype="int16") /* ty=Tensor[(10), int16] */;
  %554 = reshape(%552, newshape=[]) /* ty=int16 */;
  %555 = reshape(%553, newshape=[5, 2, 1]) /* ty=Tensor[(5, 2, 1), int16] */;
  %556 = @func_31(%554, %555) /* ty=(Tensor[(5, 2, 1), int16], Tensor[(7, 1, 6), int64]) */;
  %557 = @func_4556() /* ty=(Tensor[(15, 6, 3), int32], Tensor[(15, 6, 3), int32]) */;
  %558 = %557.0;
  %559 = cast(%558, dtype="float64") /* ty=Tensor[(15, 6, 3), float64] */;
  %560 = %556.1;
  %561 = log2(%559) /* ty=Tensor[(15, 6, 3), float64] */;
  (%560, %var_5311, %var_5312, %561)
}

def @func_8616(%var_8602: Tensor[(8, 13, 14), float64]) -> (Tensor[(8, 13, 14), float64], Tensor[(15, 6, 3), int32]) {
  %562 = cast(%var_8602, dtype="float64") /* ty=Tensor[(8, 13, 14), float64] */;
  %563 = @func_7125() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %564 = asinh(%562) /* ty=Tensor[(8, 13, 14), float64] */;
  %565 = %563.0;
  (%564, %565)
}

def @func_8595() -> (Tensor[(13, 6, 7), bool],) {
  %566 = @func_4699() /* ty=(Tensor[(15, 6, 3), float64], Tensor[(13, 6, 7), bool], Tensor[(1, 1053), int16]) */;
  %567 = %566.1;
  (%567,)
}

def @func_4019() -> (Tensor[(15, 6, 3), int32],) {
  %568 = cast(meta[relay.Constant][51] /* ty=Tensor[(15, 6, 3), float32] */, dtype="float32") /* ty=Tensor[(15, 6, 3), float32] */;
  %569 = tan(%568) /* ty=Tensor[(15, 6, 3), float32] */;
  %570 = cast(meta[relay.Constant][51] /* ty=Tensor[(15, 6, 3), float32] */, dtype="int32") /* ty=Tensor[(15, 6, 3), int32] */;
  %571 = shape_of(%569, dtype="int32") /* ty=Tensor[(3), int32] */;
  %572 = cast(%569, dtype="int32") /* ty=Tensor[(15, 6, 3), int32] */;
  %573 = dyn.reshape(%570, %571, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %574 = left_shift(%572, %573) /* ty=Tensor[(15, 6, 3), int32] */;
  (%574,)
}

def @func_6248(%var_6165: Tensor[(990), float64]) -> (Tensor[(15, 6, 3), int32], Tensor[(15, 6, 3), int32], Tensor[(15, 6, 3), int32], Tensor[(990), float64], Tensor[(15, 6, 3), int32]) {
  %575 = @func_5433() /* ty=(Tensor[(15, 6, 3), int32], Tensor[(2, 4, 13), float32], Tensor[(104), float64]) */;
  %576 = cast(%var_6165, dtype="float64") /* ty=Tensor[(990), float64] */;
  %577 = reshape(%576, newshape=[990]) /* ty=Tensor[(990), float64] */;
  %578 = @func_5569(%577) /* ty=(Tensor[(15, 6, 3), int32], Tensor[(400), float64], Tensor[(990), float64], Tensor[(15, 6, 3), float32]) */;
  %579 = @func_4427() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %580 = %575.0;
  %581 = @func_4139() /* ty=Tensor[(15, 6, 3), int32] */;
  %582 = %578.0;
  %583 = %579.0;
  (%580, %581, %582, %var_6165, %583)
}

def @func_4774(%var_4708: Tensor[(1050), float64], %var_4736: Tensor[(14, 15, 5), float64], %var_4764: Tensor[(1050), float64]) -> (Tensor[(15, 6, 3), int32], Tensor[(1050), uint8], Tensor[(14, 15, 5), bool], Tensor[(2310), float64], Tensor[(2, 200), float64], Tensor[(990), float64], Tensor[(1050), bool]) {
  %584 = @func_4360() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %585 = cast(%var_4708, dtype="float64") /* ty=Tensor[(1050), float64] */;
  %586 = reshape(%585, newshape=[14, 15, 5]) /* ty=Tensor[(14, 15, 5), float64] */;
  %587 = @func_1666(%586) /* ty=Tensor[(14, 15, 5), float64] */;
  %588 = cast(%587, dtype="uint8") /* ty=Tensor[(14, 15, 5), uint8] */;
  %589 = shape_of(%var_4708, dtype="int32") /* ty=Tensor[(1), int32] */;
  %590 = cast(%var_4708, dtype="uint8") /* ty=Tensor[(1050), uint8] */;
  %591 = dyn.reshape(%588, %589, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %592 = cast(%var_4736, dtype="bool") /* ty=Tensor[(14, 15, 5), bool] */;
  %593 = shape_of(%587, dtype="int32") /* ty=Tensor[(3), int32] */;
  %594 = cast(%587, dtype="bool") /* ty=Tensor[(14, 15, 5), bool] */;
  %595 = dyn.reshape(%592, %593, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %596 = cast(meta[relay.Constant][52] /* ty=Tensor[(2, 200), float64] */, dtype="float64") /* ty=Tensor[(2, 200), float64] */;
  %597 = cast(meta[relay.Constant][53] /* ty=Tensor[(990), float64] */, dtype="float64") /* ty=Tensor[(990), float64] */;
  %598 = reshape(%596, newshape=[400]) /* ty=Tensor[(400), float64] */;
  %599 = reshape(%597, newshape=[990]) /* ty=Tensor[(990), float64] */;
  %600 = @func_4332(%598, %599) /* ty=(Tensor[(15, 6, 3), int32], Tensor[(2310), float64], Tensor[(400), float64], Tensor[(2310), float64], Tensor[(990), bool], Tensor[(3, 2, 13), float64], Tensor[(78), float64], Tensor[(15, 14, 11), float64]) */;
  %601 = cast(%var_4764, dtype="bool") /* ty=Tensor[(1050), bool] */;
  %602 = shape_of(%var_4708, dtype="int32") /* ty=Tensor[(1), int32] */;
  %603 = cast(%var_4708, dtype="bool") /* ty=Tensor[(1050), bool] */;
  %604 = dyn.reshape(%601, %602, newshape=[]) /* ty=Tensor[(?), bool] */;
  %605 = %584.0;
  %606 = left_shift(%590, %591) /* ty=Tensor[(1050), uint8] */;
  %607 = equal(%594, %595) /* ty=Tensor[(14, 15, 5), bool] */;
  %608 = %600.1;
  %609 = greater(%603, %604) /* ty=Tensor[(1050), bool] */;
  (%605, %606, %607, %608, meta[relay.Constant][52] /* ty=Tensor[(2, 200), float64] */, meta[relay.Constant][53] /* ty=Tensor[(990), float64] */, %609)
}

def @func_31(%var_12: int16, %var_13: Tensor[(5, 2, 1), int16]) -> (Tensor[(5, 2, 1), int16], Tensor[(7, 1, 6), int64]) {
  %610 = cast(%var_12, dtype="int16") /* ty=int16 */;
  %611 = cast(%var_13, dtype="int16") /* ty=Tensor[(5, 2, 1), int16] */;
  %612 = cast(%var_12, dtype="int64") /* ty=int64 */;
  %613 = reshape(%612, newshape=[]) /* ty=int64 */;
  %614 = @func_5(%613) /* ty=(Tensor[(7, 1, 6), int64],) */;
  %615 = bitwise_and(%610, %611) /* ty=Tensor[(5, 2, 1), int16] */;
  %616 = %614.0;
  (%615, %616)
}

def @func_7546() -> Tensor[(8, 1053), bool] {
  %617 = @func_6357() /* ty=(Tensor[(15, 6, 3), int32], Tensor[(2, 4, 13), float32], Tensor[(15, 6, 3), int32], Tensor[(8, 1053), bool]) */;
  %617.3
}

def @func_7088() -> Tensor[(15, 6, 3), int32] {
  %618 = @func_4427() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %618.0
}

def @func_6700() -> (Tensor[(15, 6, 3), float64], Tensor[(15, 6, 3), int32], Tensor[(15, 6, 3), float32]) {
  %619 = @func_4052() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %620 = @func_4139() /* ty=Tensor[(15, 6, 3), int32] */;
  %621 = cast(%620, dtype="float32") /* ty=Tensor[(15, 6, 3), float32] */;
  %622 = @func_5731() /* ty=Tensor[(15, 6, 3), float64] */;
  %623 = %619.0;
  %624 = rsqrt(%621) /* ty=Tensor[(15, 6, 3), float32] */;
  (%622, %623, %624)
}

def @func_7997() -> (Tensor[(15, 6, 3), float64], Tensor[(10530), int16], Tensor[(10, 1053), float32]) {
  %625 = @func_4512() /* ty=(Tensor[(15, 6, 3), float64],) */;
  %626 = cast(meta[relay.Constant][54] /* ty=Tensor[(10530), int16] */, dtype="int16") /* ty=Tensor[(10530), int16] */;
  %627 = reshape(%626, newshape=[10, 1053]) /* ty=Tensor[(10, 1053), int16] */;
  %628 = @func_7332(%627) /* ty=Tensor[(10, 1053), uint16] */;
  %629 = cast(%628, dtype="float32") /* ty=Tensor[(10, 1053), float32] */;
  %630 = %625.0;
  %631 = cos(%629) /* ty=Tensor[(10, 1053), float32] */;
  (%630, meta[relay.Constant][54] /* ty=Tensor[(10530), int16] */, %631)
}

def @func_140(%var_128: Tensor[(10, 5, 2), float64]) -> (Tensor[(10, 5, 2), float64],) {
  %632 = cast(%var_128, dtype="float64") /* ty=Tensor[(10, 5, 2), float64] */;
  %633 = sinh(%632) /* ty=Tensor[(10, 5, 2), float64] */;
  (%633,)
}

def @func_7922() -> Tensor[(15, 6, 3), int32] {
  %634 = @func_6402() /* ty=(Tensor[(15, 6, 3), int32], Tensor[(15, 6, 3), int32]) */;
  %634.1
}

def @func_7818() -> (Tensor[(15, 6, 3), int32], Tensor[(15, 6, 3), bool], Tensor[(15, 6, 3), int32], Tensor[(15, 6, 3), int32]) {
  %635 = @func_6037() /* ty=(Tensor[(15, 6, 3), bool],) */;
  %636 = @func_6402() /* ty=(Tensor[(15, 6, 3), int32], Tensor[(15, 6, 3), int32]) */;
  %637 = @func_6927() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %638 = @func_7532() /* ty=Tensor[(15, 6, 3), int32] */;
  %639 = %635.0;
  %640 = %636.0;
  %641 = %637.0;
  (%638, %639, %640, %641)
}

def @func_8660() -> Tensor[(104), float32] {
  %642 = @func_6641() /* ty=(Tensor[(104), float32],) */;
  %642.0
}

def @func_5889() -> Tensor[(15, 6, 3), int32] {
  @func_4139() /* ty=Tensor[(15, 6, 3), int32] */
}

def @func_2200(%var_2108: Tensor[(10, 5, 1), float32], %var_2127: Tensor[(10, 5, 15), float64], %var_2162: Tensor[(100), float64]) -> (Tensor[(10, 5, 15), bool], Tensor[(10, 5, 15), float32], Tensor[(10, 5, 2), float64], Tensor[(100), float64], Tensor[(9, 8, 10), bool], Tensor[(720), int32], Tensor[(1716), uint64], Tensor[(9, 8, 10), bool], Tensor[(10, 5, 1), float32], Tensor[(10, 5, ?), uint8]) {
  %643 = cast(%var_2108, dtype="bool") /* ty=Tensor[(10, 5, 1), bool] */;
  %644 = cast(%var_2127, dtype="bool") /* ty=Tensor[(10, 5, 15), bool] */;
  %645 = cast(%var_2108, dtype="float32") /* ty=Tensor[(10, 5, 1), float32] */;
  %646 = exp(%645) /* ty=Tensor[(10, 5, 1), float32] */;
  %647 = cast(%646, dtype="float64") /* ty=Tensor[(10, 5, 1), float64] */;
  %648 = sinh(%647) /* ty=Tensor[(10, 5, 1), float64] */;
  %649 = cast(%648, dtype="bool") /* ty=Tensor[(10, 5, 1), bool] */;
  %650 = cast(%var_2127, dtype="bool") /* ty=Tensor[(10, 5, 15), bool] */;
  %651 = not_equal(%649, %650) /* ty=Tensor[(10, 5, 15), bool] */;
  %652 = cast(%651, dtype="float32") /* ty=Tensor[(10, 5, 15), float32] */;
  %653 = cast(%646, dtype="float32") /* ty=Tensor[(10, 5, 1), float32] */;
  %654 = cast(%var_2162, dtype="float64") /* ty=Tensor[(100), float64] */;
  %655 = reshape(%654, newshape=[10, 5, 2]) /* ty=Tensor[(10, 5, 2), float64] */;
  %656 = @func_140(%655) /* ty=(Tensor[(10, 5, 2), float64],) */;
  %657 = cast(meta[relay.Constant][55] /* ty=Tensor[(720), int32] */, dtype="int32") /* ty=Tensor[(720), int32] */;
  %658 = cast(meta[relay.Constant][55] /* ty=Tensor[(720), int32] */, dtype="int32") /* ty=Tensor[(720), int32] */;
  %659 = cast(meta[relay.Constant][56] /* ty=Tensor[(1716), uint64] */, dtype="uint64") /* ty=Tensor[(1716), uint64] */;
  %660 = reshape(%657, newshape=[9, 8, 10]) /* ty=Tensor[(9, 8, 10), int32] */;
  %661 = reshape(%658, newshape=[9, 8, 10]) /* ty=Tensor[(9, 8, 10), int32] */;
  %662 = reshape(%659, newshape=[1716]) /* ty=Tensor[(1716), uint64] */;
  %663 = @func_1470(%660, %661, %662) /* ty=(Tensor[(9, 8, 10), bool], Tensor[(11, 12, 13), uint64], Tensor[(1716), uint64], Tensor[(100), float64]) */;
  %664 = cast(meta[relay.Constant][55] /* ty=Tensor[(720), int32] */, dtype="int32") /* ty=Tensor[(720), int32] */;
  %665 = cast(meta[relay.Constant][55] /* ty=Tensor[(720), int32] */, dtype="int32") /* ty=Tensor[(720), int32] */;
  %666 = cast(meta[relay.Constant][56] /* ty=Tensor[(1716), uint64] */, dtype="uint64") /* ty=Tensor[(1716), uint64] */;
  %667 = reshape(%664, newshape=[9, 8, 10]) /* ty=Tensor[(9, 8, 10), int32] */;
  %668 = reshape(%665, newshape=[9, 8, 10]) /* ty=Tensor[(9, 8, 10), int32] */;
  %669 = reshape(%666, newshape=[1716]) /* ty=Tensor[(1716), uint64] */;
  %670 = @func_1470(%667, %668, %669) /* ty=(Tensor[(9, 8, 10), bool], Tensor[(11, 12, 13), uint64], Tensor[(1716), uint64], Tensor[(100), float64]) */;
  %671 = cast(%var_2108, dtype="float32") /* ty=Tensor[(10, 5, 1), float32] */;
  %672 = cast(%646, dtype="float32") /* ty=Tensor[(10, 5, 1), float32] */;
  %673 = rsqrt(%672) /* ty=Tensor[(10, 5, 1), float32] */;
  %674 = cast(%646, dtype="uint8") /* ty=Tensor[(10, 5, 1), uint8] */;
  %675 = shape_of(%673, dtype="int32") /* ty=Tensor[(3), int32] */;
  %676 = cast(%673, dtype="uint8") /* ty=Tensor[(10, 5, 1), uint8] */;
  %677 = dyn.reshape(%674, %675, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %678 = logical_and(%643, %644) /* ty=Tensor[(10, 5, 15), bool] */;
  %679 = add(%652, %653) /* ty=Tensor[(10, 5, 15), float32] */;
  %680 = %656.0;
  %681 = %663.0;
  %682 = %670.0;
  %683 = acosh(%671) /* ty=Tensor[(10, 5, 1), float32] */;
  %684 = logical_xor(%676, %677) /* ty=Tensor[(10, 5, ?), uint8] */;
  (%678, %679, %680, %var_2162, %681, meta[relay.Constant][55] /* ty=Tensor[(720), int32] */, meta[relay.Constant][56] /* ty=Tensor[(1716), uint64] */, %682, %683, %684)
}

def @func_3867(%var_3843: Tensor[(9, 13, 9), int16], %var_3844: Tensor[(9, 13, 9), int16]) -> (Tensor[(13, 6, 7), bool], Tensor[(546), float32], Tensor[(9, 13, 9), uint8]) {
  %685 = cast(meta[relay.Constant][57] /* ty=Tensor[(546), float32] */, dtype="float32") /* ty=Tensor[(546), float32] */;
  %686 = reshape(%685, newshape=[13, 6, 7]) /* ty=Tensor[(13, 6, 7), float32] */;
  %687 = @func_1747(%686) /* ty=(Tensor[(13, 6, 7), bool], Tensor[(7, 1, 6), int64], Tensor[(990), float64], Tensor[(2310), float64]) */;
  %688 = cast(%var_3844, dtype="bool") /* ty=Tensor[(9, 13, 9), bool] */;
  %689 = shape_of(%var_3843, dtype="int32") /* ty=Tensor[(3), int32] */;
  %690 = cast(%var_3843, dtype="bool") /* ty=Tensor[(9, 13, 9), bool] */;
  %691 = dyn.reshape(%688, %689, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %692 = less(%690, %691) /* ty=Tensor[(9, 13, 9), bool] */;
  %693 = cast(%var_3843, dtype="uint8") /* ty=Tensor[(9, 13, 9), uint8] */;
  %694 = shape_of(%692, dtype="int32") /* ty=Tensor[(3), int32] */;
  %695 = cast(%692, dtype="uint8") /* ty=Tensor[(9, 13, 9), uint8] */;
  %696 = dyn.reshape(%693, %694, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %697 = %687.0;
  %698 = bitwise_or(%695, %696) /* ty=Tensor[(9, 13, 9), uint8] */;
  (%697, meta[relay.Constant][57] /* ty=Tensor[(546), float32] */, %698)
}

def @func_2777(%var_2754: Tensor[(2, 4, 13), float64]) -> Tensor[(2, 4, 13), float32] {
  %699 = cast(%var_2754, dtype="float64") /* ty=Tensor[(2, 4, 13), float64] */;
  %700 = asinh(%699) /* ty=Tensor[(2, 4, 13), float64] */;
  %701 = cast(meta[relay.Constant][58] /* ty=Tensor[(2, 4, 13), float64] */, dtype="float32") /* ty=Tensor[(2, 4, 13), float32] */;
  %702 = shape_of(%700, dtype="int32") /* ty=Tensor[(3), int32] */;
  %703 = cast(%700, dtype="float32") /* ty=Tensor[(2, 4, 13), float32] */;
  %704 = dyn.reshape(%701, %702, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  power(%703, %704) /* ty=Tensor[(2, 4, 13), float32] */
}

def @func_7460() -> Tensor[(15, 6, 3), int32] {
  @func_7289() /* ty=Tensor[(15, 6, 3), int32] */
}

def @func_8251(%var_8221: uint8, %var_8222: Tensor[(1600), uint8], %var_8223: Tensor[(546), float32]) -> (Tensor[(15, 6, 3), float64], Tensor[(546), float32], uint8, Tensor[(546), float32], Tensor[(15, 6, 3), int32], Tensor[(1600), float32], Tensor[(12, 6, 4), float32]) {
  %705 = @func_4512() /* ty=(Tensor[(15, 6, 3), float64],) */;
  %706 = cast(%var_8221, dtype="uint8") /* ty=uint8 */;
  %707 = cast(%var_8222, dtype="uint8") /* ty=Tensor[(1600), uint8] */;
  %708 = cast(%var_8223, dtype="float32") /* ty=Tensor[(546), float32] */;
  %709 = reshape(%706, newshape=[]) /* ty=uint8 */;
  %710 = reshape(%707, newshape=[10, 16, 10]) /* ty=Tensor[(10, 16, 10), uint8] */;
  %711 = reshape(%708, newshape=[546]) /* ty=Tensor[(546), float32] */;
  %712 = @func_3071(%709, %710, %711) /* ty=(Tensor[(10, 16, 10), uint8], Tensor[(7, 1, 6), int64], Tensor[(546), float32]) */;
  %713 = @func_7436() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %714 = cast(%var_8222, dtype="float32") /* ty=Tensor[(1600), float32] */;
  %715 = @func_5599() /* ty=(Tensor[(12, 6, 4), float32], Tensor[(15, 6, 3), float64]) */;
  %716 = %705.0;
  %717 = %712.2;
  %718 = %713.0;
  %719 = log10(%714) /* ty=Tensor[(1600), float32] */;
  %720 = %715.0;
  (%716, %717, %var_8221, %var_8223, %718, %719, %720)
}

def @func_5751() -> Tensor[(1, 1053), int16] {
  @func_5645() /* ty=Tensor[(1, 1053), int16] */
}

def @func_6402() -> (Tensor[(15, 6, 3), int32], Tensor[(15, 6, 3), int32]) {
  %721 = @func_5245() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %722 = @func_4139() /* ty=Tensor[(15, 6, 3), int32] */;
  %723 = %721.0;
  (%722, %723)
}

def @func_7289() -> Tensor[(15, 6, 3), int32] {
  %724 = @func_5856() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %724.0
}

def @func_7632(%var_7591: Tensor[(10, 3, 3), float32], %var_7610: Tensor[(10, 3, 3), float32]) -> (Tensor[(10, 3, 3), float64], Tensor[(7, 1, 6), int64], int16, Tensor[(10), int16], Tensor[(10, 3, 3), bool]) {
  %725 = cast(%var_7591, dtype="float32") /* ty=Tensor[(10, 3, 3), float32] */;
  %726 = sin(%725) /* ty=Tensor[(10, 3, 3), float32] */;
  %727 = cast(%var_7610, dtype="float64") /* ty=Tensor[(10, 3, 3), float64] */;
  %728 = shape_of(%726, dtype="int32") /* ty=Tensor[(3), int32] */;
  %729 = cast(%726, dtype="float64") /* ty=Tensor[(10, 3, 3), float64] */;
  %730 = dyn.reshape(%727, %728, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %731 = cast(meta[relay.Constant][59] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %732 = cast(meta[relay.Constant][60] /* ty=Tensor[(10), int16] */, dtype="int16") /* ty=Tensor[(10), int16] */;
  %733 = reshape(%731, newshape=[]) /* ty=int16 */;
  %734 = reshape(%732, newshape=[5, 2, 1]) /* ty=Tensor[(5, 2, 1), int16] */;
  %735 = @func_31(%733, %734) /* ty=(Tensor[(5, 2, 1), int16], Tensor[(7, 1, 6), int64]) */;
  %736 = cast(meta[relay.Constant][61] /* ty=Tensor[(10, 3, 3), float32] */, dtype="bool") /* ty=Tensor[(10, 3, 3), bool] */;
  %737 = shape_of(%var_7591, dtype="int32") /* ty=Tensor[(3), int32] */;
  %738 = cast(%var_7591, dtype="bool") /* ty=Tensor[(10, 3, 3), bool] */;
  %739 = dyn.reshape(%736, %737, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %740 = add(%729, %730) /* ty=Tensor[(10, 3, 3), float64] */;
  %741 = %735.1;
  %742 = logical_and(%738, %739) /* ty=Tensor[(10, 3, 3), bool] */;
  (%740, %741, meta[relay.Constant][59] /* ty=int16 */, meta[relay.Constant][60] /* ty=Tensor[(10), int16] */, %742)
}

def @func_5004() -> (Tensor[(15, 6, 3), int32],) {
  %743 = @func_4556() /* ty=(Tensor[(15, 6, 3), int32], Tensor[(15, 6, 3), int32]) */;
  %744 = %743.0;
  (%744,)
}

def @func_5217() -> (Tensor[(15, 6, 3), int32], Tensor[(2, 4, 13), float32], Tensor[(104), float64]) {
  %745 = @func_4427() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %746 = cast(meta[relay.Constant][62] /* ty=Tensor[(104), float64] */, dtype="float64") /* ty=Tensor[(104), float64] */;
  %747 = reshape(%746, newshape=[2, 4, 13]) /* ty=Tensor[(2, 4, 13), float64] */;
  %748 = %745.0;
  %749 = @func_2777(%747) /* ty=Tensor[(2, 4, 13), float32] */;
  (%748, %749, meta[relay.Constant][62] /* ty=Tensor[(104), float64] */)
}

def @func_5144(%var_5069: Tensor[(15, 6, 3), int32], %var_5079: Tensor[(990, 1), float64], %var_5090: Tensor[(990, 4), float64], %var_5095: uint8) -> (Tensor[(15, 6, 3), bool], Tensor[(2, 4, 13), float32], Tensor[(104), float64], Tensor[(2310), float64], Tensor[(2310), float64], Tensor[(990, 4), float32], Tensor[(10, 16, 10), uint8], uint8, Tensor[(1600), uint8], Tensor[(546), float32], Tensor[(10, 8, 8), uint32], Tensor[(640), bool], Tensor[(990, ?), bool], Tensor[(990, 4), float32]) {
  %750 = @func_4052() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %751 = %750.0;
  %752 = cast(%var_5069, dtype="bool") /* ty=Tensor[(15, 6, 3), bool] */;
  %753 = shape_of(%751, dtype="int32") /* ty=Tensor[(3), int32] */;
  %754 = cast(%751, dtype="bool") /* ty=Tensor[(15, 6, 3), bool] */;
  %755 = dyn.reshape(%752, %753, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %756 = cast(meta[relay.Constant][63] /* ty=Tensor[(104), float64] */, dtype="float64") /* ty=Tensor[(104), float64] */;
  %757 = reshape(%756, newshape=[2, 4, 13]) /* ty=Tensor[(2, 4, 13), float64] */;
  %758 = cast(%var_5079, dtype="float64") /* ty=Tensor[(990, 1), float64] */;
  %759 = cast(meta[relay.Constant][64] /* ty=Tensor[(2310), float64] */, dtype="float64") /* ty=Tensor[(2310), float64] */;
  %760 = reshape(%758, newshape=[10, 11, 9]) /* ty=Tensor[(10, 11, 9), float64] */;
  %761 = reshape(%759, newshape=[2310]) /* ty=Tensor[(2310), float64] */;
  %762 = @func_813(%760, %761) /* ty=(Tensor[(10, 11, 9), float64], Tensor[(7, 1, 6), int64], int64, Tensor[(15, 14, 11), float64], Tensor[(2310), float64]) */;
  %763 = cast(%var_5079, dtype="float32") /* ty=Tensor[(990, 1), float32] */;
  %764 = cast(%var_5090, dtype="float32") /* ty=Tensor[(990, 4), float32] */;
  %765 = cast(%var_5095, dtype="uint8") /* ty=uint8 */;
  %766 = cast(meta[relay.Constant][65] /* ty=Tensor[(1600), uint8] */, dtype="uint8") /* ty=Tensor[(1600), uint8] */;
  %767 = cast(meta[relay.Constant][66] /* ty=Tensor[(546), float32] */, dtype="float32") /* ty=Tensor[(546), float32] */;
  %768 = reshape(%765, newshape=[]) /* ty=uint8 */;
  %769 = reshape(%766, newshape=[10, 16, 10]) /* ty=Tensor[(10, 16, 10), uint8] */;
  %770 = reshape(%767, newshape=[546]) /* ty=Tensor[(546), float32] */;
  %771 = @func_3071(%768, %769, %770) /* ty=(Tensor[(10, 16, 10), uint8], Tensor[(7, 1, 6), int64], Tensor[(546), float32]) */;
  %772 = cast(meta[relay.Constant][67] /* ty=Tensor[(640), bool] */, dtype="bool") /* ty=Tensor[(640), bool] */;
  %773 = cast(meta[relay.Constant][67] /* ty=Tensor[(640), bool] */, dtype="bool") /* ty=Tensor[(640), bool] */;
  %774 = reshape(%772, newshape=[10, 8, 8]) /* ty=Tensor[(10, 8, 8), bool] */;
  %775 = reshape(%773, newshape=[10, 8, 8]) /* ty=Tensor[(10, 8, 8), bool] */;
  %776 = cast(%var_5079, dtype="float32") /* ty=Tensor[(990, 1), float32] */;
  %777 = acos(%776) /* ty=Tensor[(990, 1), float32] */;
  %778 = cast(%var_5079, dtype="bool") /* ty=Tensor[(990, 1), bool] */;
  %779 = shape_of(%777, dtype="int32") /* ty=Tensor[(2), int32] */;
  %780 = cast(%777, dtype="bool") /* ty=Tensor[(990, 1), bool] */;
  %781 = dyn.reshape(%778, %779, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %782 = cast(%var_5090, dtype="float64") /* ty=Tensor[(990, 4), float64] */;
  %783 = acosh(%782) /* ty=Tensor[(990, 4), float64] */;
  %784 = cast(%783, dtype="float64") /* ty=Tensor[(990, 4), float64] */;
  %785 = cosh(%784) /* ty=Tensor[(990, 4), float64] */;
  %786 = cast(%785, dtype="float32") /* ty=Tensor[(990, 4), float32] */;
  %787 = logical_or(%754, %755) /* ty=Tensor[(15, 6, 3), bool] */;
  %788 = @func_2777(%757) /* ty=Tensor[(2, 4, 13), float32] */;
  %789 = %762.4;
  %790 = subtract(%763, %764) /* ty=Tensor[(990, 4), float32] */;
  %791 = %771.0;
  %792 = @func_4976(%774, %775) /* ty=Tensor[(10, 8, 8), uint32] */;
  %793 = logical_or(%780, %781) /* ty=Tensor[(990, ?), bool] */;
  %794 = cos(%786) /* ty=Tensor[(990, 4), float32] */;
  (%787, %788, meta[relay.Constant][63] /* ty=Tensor[(104), float64] */, %789, meta[relay.Constant][64] /* ty=Tensor[(2310), float64] */, %790, %791, %var_5095, meta[relay.Constant][65] /* ty=Tensor[(1600), uint8] */, meta[relay.Constant][66] /* ty=Tensor[(546), float32] */, %792, meta[relay.Constant][67] /* ty=Tensor[(640), bool] */, %793, %794)
}

def @func_4360() -> (Tensor[(15, 6, 3), int32],) {
  %795 = @func_4139() /* ty=Tensor[(15, 6, 3), int32] */;
  (%795,)
}

def @func_7879(%var_7874: Tensor[(78), float64]) -> (Tensor[(15, 6, 3), int32], Tensor[(3, 2, 13), float64], Tensor[(78), float64]) {
  %796 = cast(%var_7874, dtype="float64") /* ty=Tensor[(78), float64] */;
  %797 = reshape(%796, newshape=[3, 2, 13]) /* ty=Tensor[(3, 2, 13), float64] */;
  %798 = @func_1422(%797) /* ty=(Tensor[(3, 2, 13), float64],) */;
  %799 = @func_7532() /* ty=Tensor[(15, 6, 3), int32] */;
  %800 = %798.0;
  (%799, %800, %var_7874)
}

def @func_8272() -> (Tensor[(15, 6, 3), int32],) {
  %801 = @func_5245() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %802 = %801.0;
  (%802,)
}

def @func_6037() -> (Tensor[(15, 6, 3), bool],) {
  %803 = @func_5217() /* ty=(Tensor[(15, 6, 3), int32], Tensor[(2, 4, 13), float32], Tensor[(104), float64]) */;
  %804 = %803.0;
  %805 = cast(meta[relay.Constant][68] /* ty=Tensor[(15, 6, 3), int32] */, dtype="bool") /* ty=Tensor[(15, 6, 3), bool] */;
  %806 = shape_of(%804, dtype="int32") /* ty=Tensor[(3), int32] */;
  %807 = cast(%804, dtype="bool") /* ty=Tensor[(15, 6, 3), bool] */;
  %808 = dyn.reshape(%805, %806, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %809 = less(%807, %808) /* ty=Tensor[(15, 6, 3), bool] */;
  (%809,)
}

def @func_1024(%var_1001: Tensor[(11, 12, 13), uint64], %var_1013: Tensor[(1, 100), float64]) -> (Tensor[(11, 12, 13), uint64], Tensor[(?, 100), float64]) {
  %810 = cast(meta[relay.Constant][69] /* ty=Tensor[(11, 12, 13), uint64] */, dtype="uint64") /* ty=Tensor[(11, 12, 13), uint64] */;
  %811 = shape_of(%var_1001, dtype="int32") /* ty=Tensor[(3), int32] */;
  %812 = cast(%var_1001, dtype="uint64") /* ty=Tensor[(11, 12, 13), uint64] */;
  %813 = dyn.reshape(%810, %811, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %814 = cast(%var_1013, dtype="float64") /* ty=Tensor[(1, 100), float64] */;
  %815 = reshape(%814, newshape=[10, 5, 2]) /* ty=Tensor[(10, 5, 2), float64] */;
  %816 = @func_140(%815) /* ty=(Tensor[(10, 5, 2), float64],) */;
  %817 = %816.0;
  %818 = cast(%817, dtype="float64") /* ty=Tensor[(10, 5, 2), float64] */;
  %819 = shape_of(%var_1013, dtype="int32") /* ty=Tensor[(2), int32] */;
  %820 = cast(%var_1013, dtype="float64") /* ty=Tensor[(1, 100), float64] */;
  %821 = dyn.reshape(%818, %819, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %822 = subtract(%812, %813) /* ty=Tensor[(11, 12, 13), uint64] */;
  %823 = floor_divide(%820, %821) /* ty=Tensor[(?, 100), float64] */;
  (%822, %823)
}

def @func_3822(%var_3768: Tensor[(15, 1, 7), bool], %var_3769: Tensor[(15, 1, 7), bool], %var_3806: Tensor[(2310), float64]) -> (Tensor[(15, ?, 7), bool], Tensor[(2310), float64], Tensor[(990), float64], Tensor[(2310), float64]) {
  %824 = cast(%var_3769, dtype="bool") /* ty=Tensor[(15, 1, 7), bool] */;
  %825 = shape_of(%var_3768, dtype="int32") /* ty=Tensor[(3), int32] */;
  %826 = cast(%var_3768, dtype="bool") /* ty=Tensor[(15, 1, 7), bool] */;
  %827 = dyn.reshape(%824, %825, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %828 = cast(meta[relay.Constant][70] /* ty=Tensor[(990), float64] */, dtype="float64") /* ty=Tensor[(990), float64] */;
  %829 = cast(%var_3806, dtype="float64") /* ty=Tensor[(2310), float64] */;
  %830 = reshape(%828, newshape=[10, 11, 9]) /* ty=Tensor[(10, 11, 9), float64] */;
  %831 = reshape(%829, newshape=[2310]) /* ty=Tensor[(2310), float64] */;
  %832 = @func_813(%830, %831) /* ty=(Tensor[(10, 11, 9), float64], Tensor[(7, 1, 6), int64], int64, Tensor[(15, 14, 11), float64], Tensor[(2310), float64]) */;
  %833 = logical_or(%826, %827) /* ty=Tensor[(15, ?, 7), bool] */;
  %834 = %832.4;
  (%833, %834, meta[relay.Constant][70] /* ty=Tensor[(990), float64] */, %var_3806)
}

def @func_2613(%var_2599: int64) -> (Tensor[(4, 9, 10), float32], Tensor[(7, 1, 6), int64], int64) {
  %835 = cast(meta[relay.Constant][71] /* ty=Tensor[(4, 9, 10), float32] */, dtype="float32") /* ty=Tensor[(4, 9, 10), float32] */;
  %836 = cast(%var_2599, dtype="int64") /* ty=int64 */;
  %837 = reshape(%836, newshape=[]) /* ty=int64 */;
  %838 = @func_5(%837) /* ty=(Tensor[(7, 1, 6), int64],) */;
  %839 = log2(%835) /* ty=Tensor[(4, 9, 10), float32] */;
  %840 = %838.0;
  (%839, %840, %var_2599)
}

def @func_3372(%var_3358: Tensor[(2, 4, 10), float64]) -> Tensor[(2, 4, 10), float64] {
  %841 = cast(%var_3358, dtype="float64") /* ty=Tensor[(2, 4, 10), float64] */;
  cosh(%841) /* ty=Tensor[(2, 4, 10), float64] */
}

def @func_5709(%var_5703: Tensor[(10), int16]) -> (Tensor[(5, 2, 1), int16], int16, Tensor[(10), int16], Tensor[(15, 6, 3), float32]) {
  %842 = cast(meta[relay.Constant][72] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %843 = cast(%var_5703, dtype="int16") /* ty=Tensor[(10), int16] */;
  %844 = reshape(%842, newshape=[]) /* ty=int16 */;
  %845 = reshape(%843, newshape=[5, 2, 1]) /* ty=Tensor[(5, 2, 1), int16] */;
  %846 = @func_31(%844, %845) /* ty=(Tensor[(5, 2, 1), int16], Tensor[(7, 1, 6), int64]) */;
  %847 = @func_5245() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %848 = %847.0;
  %849 = cast(%848, dtype="float32") /* ty=Tensor[(15, 6, 3), float32] */;
  %850 = %846.0;
  %851 = acosh(%849) /* ty=Tensor[(15, 6, 3), float32] */;
  (%850, meta[relay.Constant][72] /* ty=int16 */, %var_5703, %851)
}

def @func_5994(%var_5978: Tensor[(10), int16]) -> (Tensor[(1, 1053), float32], int16, Tensor[(10), int16], Tensor[(13, 6, 7), bool]) {
  %852 = @func_5751() /* ty=Tensor[(1, 1053), int16] */;
  %853 = cast(%852, dtype="float32") /* ty=Tensor[(1, 1053), float32] */;
  %854 = cast(%var_5978, dtype="int16") /* ty=Tensor[(10), int16] */;
  %855 = reshape(%854, newshape=[10]) /* ty=Tensor[(10), int16] */;
  %856 = @func_5709(%855) /* ty=(Tensor[(5, 2, 1), int16], int16, Tensor[(10), int16], Tensor[(15, 6, 3), float32]) */;
  %857 = cast(%852, dtype="int16") /* ty=Tensor[(1, 1053), int16] */;
  %858 = sinh(%853) /* ty=Tensor[(1, 1053), float32] */;
  %859 = cast(%858, dtype="int16") /* ty=Tensor[(1, 1053), int16] */;
  %860 = reshape(%857, newshape=[9, 13, 9]) /* ty=Tensor[(9, 13, 9), int16] */;
  %861 = reshape(%859, newshape=[9, 13, 9]) /* ty=Tensor[(9, 13, 9), int16] */;
  %862 = @func_3867(%860, %861) /* ty=(Tensor[(13, 6, 7), bool], Tensor[(546), float32], Tensor[(9, 13, 9), uint8]) */;
  %863 = %856.1;
  %864 = %862.0;
  (%858, %863, %var_5978, %864)
}

def @func_5856() -> (Tensor[(15, 6, 3), int32],) {
  %865 = @func_4019() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %866 = %865.0;
  (%866,)
}

def @func_7035() -> (Tensor[(15, 6, 3), int32],) {
  %867 = @func_5768() /* ty=Tensor[(15, 6, 3), int32] */;
  (%867,)
}

def @func_6612() -> (Tensor[(15, 6, 3), int32], Tensor[(11, 8, 14), float32], Tensor[(1232), float32], Tensor[(1, 100), float64], Tensor[(15, 6, 3), int32], Tensor[(3, 2, 13), float64], Tensor[(78), float64], Tensor[(2, 4, 13), float32]) {
  %868 = @func_5199() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %869 = cast(meta[relay.Constant][73] /* ty=Tensor[(1232), float32] */, dtype="float32") /* ty=Tensor[(1232), float32] */;
  %870 = cast(meta[relay.Constant][74] /* ty=Tensor[(1, 100), float64] */, dtype="float64") /* ty=Tensor[(1, 100), float64] */;
  %871 = reshape(%869, newshape=[11, 8, 14]) /* ty=Tensor[(11, 8, 14), float32] */;
  %872 = reshape(%870, newshape=[100]) /* ty=Tensor[(100), float64] */;
  %873 = @func_3152(%871, %872) /* ty=(Tensor[(?, 100), float64], Tensor[(1716), uint64], Tensor[(100), float64], Tensor[(3, 8, 13), uint32], Tensor[(312), uint32], Tensor[(11, 8, 14), float32]) */;
  %874 = @func_4052() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %875 = cast(meta[relay.Constant][75] /* ty=Tensor[(78), float64] */, dtype="float64") /* ty=Tensor[(78), float64] */;
  %876 = reshape(%875, newshape=[3, 2, 13]) /* ty=Tensor[(3, 2, 13), float64] */;
  %877 = @func_1422(%876) /* ty=(Tensor[(3, 2, 13), float64],) */;
  %878 = @func_5217() /* ty=(Tensor[(15, 6, 3), int32], Tensor[(2, 4, 13), float32], Tensor[(104), float64]) */;
  %879 = %868.0;
  %880 = %873.5;
  %881 = %874.0;
  %882 = %877.0;
  %883 = %878.1;
  (%879, %880, meta[relay.Constant][73] /* ty=Tensor[(1232), float32] */, meta[relay.Constant][74] /* ty=Tensor[(1, 100), float64] */, %881, %882, meta[relay.Constant][75] /* ty=Tensor[(78), float64] */, %883)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_4851(%var_4836: Tensor[(21, 5), bool]) -> (Tensor[(15, 6, 3), float64], Tensor[(990), float64], Tensor[(2310), float64], Tensor[(21, 5), uint8]) {
  %0 = @func_4512() /* ty=(Tensor[(15, 6, 3), float64],) */;
  %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(21, 5), bool] */, dtype="bool") /* ty=Tensor[(21, 5), bool] */;
  %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(21, 5), bool] */, dtype="bool") /* ty=Tensor[(21, 5), bool] */;
  %3 = cast(meta[relay.Constant][1] /* ty=Tensor[(2310), float64] */, dtype="float64") /* ty=Tensor[(2310), float64] */;
  %4 = reshape(%1, newshape=[15, 1, 7]) /* ty=Tensor[(15, 1, 7), bool] */;
  %5 = reshape(%2, newshape=[15, 1, 7]) /* ty=Tensor[(15, 1, 7), bool] */;
  %6 = reshape(%3, newshape=[2310]) /* ty=Tensor[(2310), float64] */;
  %7 = @func_3822(%4, %5, %6) /* ty=(Tensor[(15, ?, 7), bool], Tensor[(2310), float64], Tensor[(990), float64], Tensor[(2310), float64]) */;
  %8 = cast(%var_4836, dtype="uint8") /* ty=Tensor[(21, 5), uint8] */;
  %9 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(21, 5), bool] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %10 = cast(meta[relay.Constant][0] /* ty=Tensor[(21, 5), bool] */, dtype="uint8") /* ty=Tensor[(21, 5), uint8] */;
  %11 = dyn.reshape(%8, %9, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %12 = %0.0;
  %13 = %7.2;
  %14 = minimum(%10, %11) /* ty=Tensor[(21, 5), uint8] */;
  (%12, %13, meta[relay.Constant][1] /* ty=Tensor[(2310), float64] */, %14)
}

def @func_2204(%var_2201: Tensor[(10, 5, 1), float32], %var_2202: Tensor[(10, 5, 15), float64], %var_2203: Tensor[(100), float64]) -> (Tensor[(10, 5, 15), bool], Tensor[(10, 5, 15), float32], Tensor[(10, 5, 2), float64], Tensor[(100), float64], Tensor[(9, 8, 10), bool], Tensor[(720), int32], Tensor[(1716), uint64], Tensor[(9, 8, 10), bool], Tensor[(10, 5, 1), float32], Tensor[(10, 5, ?), uint8]) {
  %57 = fn (%var_2108: Tensor[(10, 5, 1), float32], %var_2127: Tensor[(10, 5, 15), float64], %var_2162: Tensor[(100), float64]) -> (Tensor[(10, 5, 15), bool], Tensor[(10, 5, 15), float32], Tensor[(10, 5, 2), float64], Tensor[(100), float64], Tensor[(9, 8, 10), bool], Tensor[(720), int32], Tensor[(1716), uint64], Tensor[(9, 8, 10), bool], Tensor[(10, 5, 1), float32], Tensor[(10, 5, ?), uint8]) {
    %15 = cast(%var_2108, dtype="bool") /* ty=Tensor[(10, 5, 1), bool] */;
    %16 = cast(%var_2127, dtype="bool") /* ty=Tensor[(10, 5, 15), bool] */;
    %17 = cast(%var_2108, dtype="float32") /* ty=Tensor[(10, 5, 1), float32] */;
    %18 = exp(%17) /* ty=Tensor[(10, 5, 1), float32] */;
    %19 = cast(%18, dtype="float64") /* ty=Tensor[(10, 5, 1), float64] */;
    %20 = sinh(%19) /* ty=Tensor[(10, 5, 1), float64] */;
    %21 = cast(%20, dtype="bool") /* ty=Tensor[(10, 5, 1), bool] */;
    %22 = cast(%var_2127, dtype="bool") /* ty=Tensor[(10, 5, 15), bool] */;
    %23 = not_equal(%21, %22) /* ty=Tensor[(10, 5, 15), bool] */;
    %24 = cast(%23, dtype="float32") /* ty=Tensor[(10, 5, 15), float32] */;
    %25 = cast(%18, dtype="float32") /* ty=Tensor[(10, 5, 1), float32] */;
    %26 = cast(%var_2162, dtype="float64") /* ty=Tensor[(100), float64] */;
    %27 = reshape(%26, newshape=[10, 5, 2]) /* ty=Tensor[(10, 5, 2), float64] */;
    %28 = @func_140(%27) /* ty=(Tensor[(10, 5, 2), float64],) */;
    %29 = cast(meta[relay.Constant][2] /* ty=Tensor[(720), int32] */, dtype="int32") /* ty=Tensor[(720), int32] */;
    %30 = cast(meta[relay.Constant][2] /* ty=Tensor[(720), int32] */, dtype="int32") /* ty=Tensor[(720), int32] */;
    %31 = cast(meta[relay.Constant][3] /* ty=Tensor[(1716), uint64] */, dtype="uint64") /* ty=Tensor[(1716), uint64] */;
    %32 = reshape(%29, newshape=[9, 8, 10]) /* ty=Tensor[(9, 8, 10), int32] */;
    %33 = reshape(%30, newshape=[9, 8, 10]) /* ty=Tensor[(9, 8, 10), int32] */;
    %34 = reshape(%31, newshape=[1716]) /* ty=Tensor[(1716), uint64] */;
    %35 = @func_1470(%32, %33, %34) /* ty=(Tensor[(9, 8, 10), bool], Tensor[(11, 12, 13), uint64], Tensor[(1716), uint64], Tensor[(100), float64]) */;
    %36 = cast(meta[relay.Constant][2] /* ty=Tensor[(720), int32] */, dtype="int32") /* ty=Tensor[(720), int32] */;
    %37 = cast(meta[relay.Constant][2] /* ty=Tensor[(720), int32] */, dtype="int32") /* ty=Tensor[(720), int32] */;
    %38 = cast(meta[relay.Constant][3] /* ty=Tensor[(1716), uint64] */, dtype="uint64") /* ty=Tensor[(1716), uint64] */;
    %39 = reshape(%36, newshape=[9, 8, 10]) /* ty=Tensor[(9, 8, 10), int32] */;
    %40 = reshape(%37, newshape=[9, 8, 10]) /* ty=Tensor[(9, 8, 10), int32] */;
    %41 = reshape(%38, newshape=[1716]) /* ty=Tensor[(1716), uint64] */;
    %42 = @func_1470(%39, %40, %41) /* ty=(Tensor[(9, 8, 10), bool], Tensor[(11, 12, 13), uint64], Tensor[(1716), uint64], Tensor[(100), float64]) */;
    %43 = cast(%var_2108, dtype="float32") /* ty=Tensor[(10, 5, 1), float32] */;
    %44 = cast(%18, dtype="float32") /* ty=Tensor[(10, 5, 1), float32] */;
    %45 = rsqrt(%44) /* ty=Tensor[(10, 5, 1), float32] */;
    %46 = cast(%18, dtype="uint8") /* ty=Tensor[(10, 5, 1), uint8] */;
    %47 = shape_of(%45, dtype="int32") /* ty=Tensor[(3), int32] */;
    %48 = cast(%45, dtype="uint8") /* ty=Tensor[(10, 5, 1), uint8] */;
    %49 = dyn.reshape(%46, %47, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %50 = logical_and(%15, %16) /* ty=Tensor[(10, 5, 15), bool] */;
    %51 = add(%24, %25) /* ty=Tensor[(10, 5, 15), float32] */;
    %52 = %28.0;
    %53 = %35.0;
    %54 = %42.0;
    %55 = acosh(%43) /* ty=Tensor[(10, 5, 1), float32] */;
    %56 = logical_xor(%48, %49) /* ty=Tensor[(10, 5, ?), uint8] */;
    (%50, %51, %52, %var_2162, %53, meta[relay.Constant][2] /* ty=Tensor[(720), int32] */, meta[relay.Constant][3] /* ty=Tensor[(1716), uint64] */, %54, %55, %56)
  };
  %57(%var_2201, %var_2202, %var_2203) /* ty=(Tensor[(10, 5, 15), bool], Tensor[(10, 5, 15), float32], Tensor[(10, 5, 2), float64], Tensor[(100), float64], Tensor[(9, 8, 10), bool], Tensor[(720), int32], Tensor[(1716), uint64], Tensor[(9, 8, 10), bool], Tensor[(10, 5, 1), float32], Tensor[(10, 5, ?), uint8]) */
}

def @func_1474(%var_1471: Tensor[(9, 8, 10), int32], %var_1472: Tensor[(9, 8, 10), int32], %var_1473: Tensor[(1716), uint64]) -> (Tensor[(9, 8, 10), bool], Tensor[(11, 12, 13), uint64], Tensor[(1716), uint64], Tensor[(100), float64]) {
  %69 = fn (%var_1456: Tensor[(9, 8, 10), int32], %var_1457: Tensor[(9, 8, 10), int32], %var_1465: Tensor[(1716), uint64]) -> (Tensor[(9, 8, 10), bool], Tensor[(11, 12, 13), uint64], Tensor[(1716), uint64], Tensor[(100), float64]) {
    %58 = cast(%var_1457, dtype="bool") /* ty=Tensor[(9, 8, 10), bool] */;
    %59 = shape_of(%var_1456, dtype="int32") /* ty=Tensor[(3), int32] */;
    %60 = cast(%var_1456, dtype="bool") /* ty=Tensor[(9, 8, 10), bool] */;
    %61 = dyn.reshape(%58, %59, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %62 = cast(%var_1465, dtype="uint64") /* ty=Tensor[(1716), uint64] */;
    %63 = cast(meta[relay.Constant][4] /* ty=Tensor[(100), float64] */, dtype="float64") /* ty=Tensor[(100), float64] */;
    %64 = reshape(%62, newshape=[11, 12, 13]) /* ty=Tensor[(11, 12, 13), uint64] */;
    %65 = reshape(%63, newshape=[1, 100]) /* ty=Tensor[(1, 100), float64] */;
    %66 = @func_1024(%64, %65) /* ty=(Tensor[(11, 12, 13), uint64], Tensor[(?, 100), float64]) */;
    %67 = less(%60, %61) /* ty=Tensor[(9, 8, 10), bool] */;
    %68 = %66.0;
    (%67, %68, %var_1465, meta[relay.Constant][4] /* ty=Tensor[(100), float64] */)
  };
  %69(%var_1471, %var_1472, %var_1473) /* ty=(Tensor[(9, 8, 10), bool], Tensor[(11, 12, 13), uint64], Tensor[(1716), uint64], Tensor[(100), float64]) */
}

def @func_1103(%var_1093: int32, %var_1094: Tensor[(10, 4, 5), int32]) -> Tensor[(10, 4, 5), bool] {
  %70 = cast(%var_1093, dtype="bool") /* ty=bool */;
  %71 = cast(%var_1094, dtype="bool") /* ty=Tensor[(10, 4, 5), bool] */;
  greater_equal(%70, %71) /* ty=Tensor[(10, 4, 5), bool] */
}

def @func_8618(%var_8617: Tensor[(8, 13, 14), float64]) -> (Tensor[(8, 13, 14), float64], Tensor[(15, 6, 3), int32]) {
  %76 = fn (%var_8602: Tensor[(8, 13, 14), float64]) -> (Tensor[(8, 13, 14), float64], Tensor[(15, 6, 3), int32]) {
    %72 = cast(%var_8602, dtype="float64") /* ty=Tensor[(8, 13, 14), float64] */;
    %73 = @func_7125() /* ty=(Tensor[(15, 6, 3), int32],) */;
    %74 = asinh(%72) /* ty=Tensor[(8, 13, 14), float64] */;
    %75 = %73.0;
    (%74, %75)
  };
  %76(%var_8617) /* ty=(Tensor[(8, 13, 14), float64], Tensor[(15, 6, 3), int32]) */
}

def @func_7431() -> (Tensor[(15, 6, 3), int32], Tensor[(15, 6, 3), float64], Tensor[(15, 6, 3), int32]) {
  %83 = fn () -> (Tensor[(15, 6, 3), int32], Tensor[(15, 6, 3), float64], Tensor[(15, 6, 3), int32]) {
    %77 = @func_5004() /* ty=(Tensor[(15, 6, 3), int32],) */;
    %78 = @func_4465() /* ty=(Tensor[(15, 6, 3), float32], Tensor[(15, 6, 3), float64]) */;
    %79 = @func_4052() /* ty=(Tensor[(15, 6, 3), int32],) */;
    %80 = %77.0;
    %81 = %78.1;
    %82 = %79.0;
    (%80, %81, %82)
  };
  %83() /* ty=(Tensor[(15, 6, 3), int32], Tensor[(15, 6, 3), float64], Tensor[(15, 6, 3), int32]) */
}

def @func_4779(%var_4776: Tensor[(1050), float64], %var_4777: Tensor[(14, 15, 5), float64], %var_4778: Tensor[(1050), float64]) -> (Tensor[(15, 6, 3), int32], Tensor[(1050), uint8], Tensor[(14, 15, 5), bool], Tensor[(2310), float64], Tensor[(2, 200), float64], Tensor[(990), float64], Tensor[(1050), bool]) {
  @func_4774(%var_4776, %var_4777, %var_4778) /* ty=(Tensor[(15, 6, 3), int32], Tensor[(1050), uint8], Tensor[(14, 15, 5), bool], Tensor[(2310), float64], Tensor[(2, 200), float64], Tensor[(990), float64], Tensor[(1050), bool]) */
}

def @func_6402() -> (Tensor[(15, 6, 3), int32], Tensor[(15, 6, 3), int32]) {
  %84 = @func_5245() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %85 = @func_4139() /* ty=Tensor[(15, 6, 3), int32] */;
  %86 = %84.0;
  (%85, %86)
}

def @func_4336(%var_4334: Tensor[(400), float64], %var_4335: Tensor[(990), float64]) -> (Tensor[(15, 6, 3), int32], Tensor[(2310), float64], Tensor[(400), float64], Tensor[(2310), float64], Tensor[(990), bool], Tensor[(3, 2, 13), float64], Tensor[(78), float64], Tensor[(15, 14, 11), float64]) {
  @func_4332(%var_4334, %var_4335) /* ty=(Tensor[(15, 6, 3), int32], Tensor[(2310), float64], Tensor[(400), float64], Tensor[(2310), float64], Tensor[(990), bool], Tensor[(3, 2, 13), float64], Tensor[(78), float64], Tensor[(15, 14, 11), float64]) */
}

def @func_6421() -> (Tensor[(104), float64],) {
  %87 = @func_5433() /* ty=(Tensor[(15, 6, 3), int32], Tensor[(2, 4, 13), float32], Tensor[(104), float64]) */;
  %88 = %87.2;
  (%88,)
}

def @func_7088() -> Tensor[(15, 6, 3), int32] {
  %89 = @func_4427() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %89.0
}

def @func_3156(%var_3154: Tensor[(11, 8, 14), float32], %var_3155: Tensor[(100), float64]) -> (Tensor[(?, 100), float64], Tensor[(1716), uint64], Tensor[(100), float64], Tensor[(3, 8, 13), uint32], Tensor[(312), uint32], Tensor[(11, 8, 14), float32]) {
  @func_3152(%var_3154, %var_3155) /* ty=(Tensor[(?, 100), float64], Tensor[(1716), uint64], Tensor[(100), float64], Tensor[(3, 8, 13), uint32], Tensor[(312), uint32], Tensor[(11, 8, 14), float32]) */
}

def @func_4512() -> (Tensor[(15, 6, 3), float64],) {
  %90 = @func_4465() /* ty=(Tensor[(15, 6, 3), float32], Tensor[(15, 6, 3), float64]) */;
  %91 = %90.1;
  (%91,)
}

def @func_5770() -> Tensor[(15, 6, 3), int32] {
  @func_5768() /* ty=Tensor[(15, 6, 3), int32] */
}

def @func_7036() -> (Tensor[(15, 6, 3), int32],) {
  %93 = fn () -> (Tensor[(15, 6, 3), int32],) {
    %92 = @func_5768() /* ty=Tensor[(15, 6, 3), int32] */;
    (%92,)
  };
  %93() /* ty=(Tensor[(15, 6, 3), int32],) */
}

def @func_7006(%var_7005: Tensor[(6, 1053), int16]) -> (Tensor[(6, 1053), float32], Tensor[(15, 6, 3), int32]) {
  %100 = fn (%var_6985: Tensor[(6, 1053), int16]) -> (Tensor[(6, 1053), float32], Tensor[(15, 6, 3), int32]) {
    %94 = @func_5645() /* ty=Tensor[(1, 1053), int16] */;
    %95 = cast(%94, dtype="float32") /* ty=Tensor[(1, 1053), float32] */;
    %96 = cast(%var_6985, dtype="float32") /* ty=Tensor[(6, 1053), float32] */;
    %97 = @func_4052() /* ty=(Tensor[(15, 6, 3), int32],) */;
    %98 = power(%95, %96) /* ty=Tensor[(6, 1053), float32] */;
    %99 = %97.0;
    (%98, %99)
  };
  %100(%var_7005) /* ty=(Tensor[(6, 1053), float32], Tensor[(15, 6, 3), int32]) */
}

def @func_7881(%var_7880: Tensor[(78), float64]) -> (Tensor[(15, 6, 3), int32], Tensor[(3, 2, 13), float64], Tensor[(78), float64]) {
  %106 = fn (%var_7874: Tensor[(78), float64]) -> (Tensor[(15, 6, 3), int32], Tensor[(3, 2, 13), float64], Tensor[(78), float64]) {
    %101 = cast(%var_7874, dtype="float64") /* ty=Tensor[(78), float64] */;
    %102 = reshape(%101, newshape=[3, 2, 13]) /* ty=Tensor[(3, 2, 13), float64] */;
    %103 = @func_1422(%102) /* ty=(Tensor[(3, 2, 13), float64],) */;
    %104 = @func_7532() /* ty=Tensor[(15, 6, 3), int32] */;
    %105 = %103.0;
    (%104, %105, %var_7874)
  };
  %106(%var_7880) /* ty=(Tensor[(15, 6, 3), int32], Tensor[(3, 2, 13), float64], Tensor[(78), float64]) */
}

def @func_8508(%var_8507: Tensor[(4, 7, 1), float32]) -> (Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32]) {
  %112 = fn (%var_8488: Tensor[(4, 7, 1), float32]) -> (Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32]) {
    %107 = cast(%var_8488, dtype="float32") /* ty=Tensor[(4, 7, 1), float32] */;
    %108 = cast(meta[relay.Constant][5] /* ty=Tensor[(4, 7, 4), float32] */, dtype="float32") /* ty=Tensor[(4, 7, 4), float32] */;
    %109 = cast(meta[relay.Constant][5] /* ty=Tensor[(4, 7, 4), float32] */, dtype="float32") /* ty=Tensor[(4, 7, 4), float32] */;
    %110 = floor_divide(%107, %108) /* ty=Tensor[(4, 7, 4), float32] */;
    %111 = cos(%109) /* ty=Tensor[(4, 7, 4), float32] */;
    (%110, %111)
  };
  %112(%var_8507) /* ty=(Tensor[(4, 7, 4), float32], Tensor[(4, 7, 4), float32]) */
}

def @func_4976(%var_4947: Tensor[(10, 8, 8), bool], %var_4948: Tensor[(10, 8, 8), bool]) -> Tensor[(10, 8, 8), uint32] {
  %113 = cast(%var_4948, dtype="bool") /* ty=Tensor[(10, 8, 8), bool] */;
  %114 = shape_of(%var_4947, dtype="int32") /* ty=Tensor[(3), int32] */;
  %115 = cast(%var_4947, dtype="bool") /* ty=Tensor[(10, 8, 8), bool] */;
  %116 = dyn.reshape(%113, %114, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %117 = logical_and(%115, %116) /* ty=Tensor[(10, 8, 8), bool] */;
  %118 = cast(%117, dtype="uint32") /* ty=Tensor[(10, 8, 8), uint32] */;
  %119 = shape_of(%var_4947, dtype="int32") /* ty=Tensor[(3), int32] */;
  %120 = cast(%var_4947, dtype="uint32") /* ty=Tensor[(10, 8, 8), uint32] */;
  %121 = dyn.reshape(%118, %119, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  left_shift(%120, %121) /* ty=Tensor[(10, 8, 8), uint32] */
}

def @func_8(%var_6: int64) -> (Tensor[(7, 1, 6), int64],) {
  @func_5(%var_6) /* ty=(Tensor[(7, 1, 6), int64],) */
}

def @func_5004() -> (Tensor[(15, 6, 3), int32],) {
  %122 = @func_4556() /* ty=(Tensor[(15, 6, 3), int32], Tensor[(15, 6, 3), int32]) */;
  %123 = %122.0;
  (%123,)
}

def @func_5856() -> (Tensor[(15, 6, 3), int32],) {
  %124 = @func_4019() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %125 = %124.0;
  (%125,)
}

def @func_8209() -> (Tensor[(15, 1053), float64], Tensor[(7, 1, 6), int64], int64, Tensor[(1, 1053), float32]) {
  @func_8207() /* ty=(Tensor[(15, 1053), float64], Tensor[(7, 1, 6), int64], int64, Tensor[(1, 1053), float32]) */
}

def @func_8486(%var_8484: Tensor[(768), float32], %var_8485: Tensor[(100, 1), float64]) -> (Tensor[(104), float64], Tensor[(15, 6, 3), int32], Tensor[(990), float64], Tensor[(15, 6, 3), int32], Tensor[(80), float64], Tensor[(?, 100), float64], Tensor[(768), float32], Tensor[(1, 1050), float64], Tensor[(100, 1), float64], Tensor[(15, 1053), float64], Tensor[(4563, 3), bool], Tensor[(4563, 3), bool]) {
  @func_8482(%var_8484, %var_8485) /* ty=(Tensor[(104), float64], Tensor[(15, 6, 3), int32], Tensor[(990), float64], Tensor[(15, 6, 3), int32], Tensor[(80), float64], Tensor[(?, 100), float64], Tensor[(768), float32], Tensor[(1, 1050), float64], Tensor[(100, 1), float64], Tensor[(15, 1053), float64], Tensor[(4563, 3), bool], Tensor[(4563, 3), bool]) */
}

def @func_5571(%var_5570: Tensor[(990), float64]) -> (Tensor[(15, 6, 3), int32], Tensor[(400), float64], Tensor[(990), float64], Tensor[(15, 6, 3), float32]) {
  %136 = fn (%var_5534: Tensor[(990), float64]) -> (Tensor[(15, 6, 3), int32], Tensor[(400), float64], Tensor[(990), float64], Tensor[(15, 6, 3), float32]) {
    %126 = @func_4019() /* ty=(Tensor[(15, 6, 3), int32],) */;
    %127 = cast(meta[relay.Constant][6] /* ty=Tensor[(400), float64] */, dtype="float64") /* ty=Tensor[(400), float64] */;
    %128 = cast(%var_5534, dtype="float64") /* ty=Tensor[(990), float64] */;
    %129 = reshape(%127, newshape=[400]) /* ty=Tensor[(400), float64] */;
    %130 = reshape(%128, newshape=[990]) /* ty=Tensor[(990), float64] */;
    %131 = @func_4332(%129, %130) /* ty=(Tensor[(15, 6, 3), int32], Tensor[(2310), float64], Tensor[(400), float64], Tensor[(2310), float64], Tensor[(990), bool], Tensor[(3, 2, 13), float64], Tensor[(78), float64], Tensor[(15, 14, 11), float64]) */;
    %132 = %131.0;
    %133 = cast(%132, dtype="float32") /* ty=Tensor[(15, 6, 3), float32] */;
    %134 = %126.0;
    %135 = sin(%133) /* ty=Tensor[(15, 6, 3), float32] */;
    (%134, meta[relay.Constant][6] /* ty=Tensor[(400), float64] */, %var_5534, %135)
  };
  %136(%var_5570) /* ty=(Tensor[(15, 6, 3), int32], Tensor[(400), float64], Tensor[(990), float64], Tensor[(15, 6, 3), float32]) */
}

def @func_2292(%var_2289: Tensor[(12, 8, 8), float32], %var_2290: Tensor[(1050), float64], %var_2291: Tensor[(100), float64]) -> (Tensor[(10, 4, 5), bool], Tensor[(200), int32], Tensor[(14, 15, 5), float64], Tensor[(1050), float64], Tensor[(12, 8, 8), float32], Tensor[(?, 100), float64], Tensor[(1716), uint64], Tensor[(100), float64]) {
  %158 = fn (%var_2214: Tensor[(12, 8, 8), float32], %var_2245: Tensor[(1050), float64], %var_2282: Tensor[(100), float64]) -> (Tensor[(10, 4, 5), bool], Tensor[(200), int32], Tensor[(14, 15, 5), float64], Tensor[(1050), float64], Tensor[(12, 8, 8), float32], Tensor[(?, 100), float64], Tensor[(1716), uint64], Tensor[(100), float64]) {
    %137 = cast(-8 /* ty=int32 */, dtype="int32") /* ty=int32 */;
    %138 = cast(meta[relay.Constant][7] /* ty=Tensor[(200), int32] */, dtype="int32") /* ty=Tensor[(200), int32] */;
    %139 = reshape(%137, newshape=[]) /* ty=int32 */;
    %140 = reshape(%138, newshape=[10, 4, 5]) /* ty=Tensor[(10, 4, 5), int32] */;
    %141 = cast(%var_2245, dtype="float64") /* ty=Tensor[(1050), float64] */;
    %142 = reshape(%141, newshape=[14, 15, 5]) /* ty=Tensor[(14, 15, 5), float64] */;
    %143 = cast(%var_2214, dtype="float32") /* ty=Tensor[(12, 8, 8), float32] */;
    %144 = cos(%143) /* ty=Tensor[(12, 8, 8), float32] */;
    %145 = cast(%144, dtype="bool") /* ty=Tensor[(12, 8, 8), bool] */;
    %146 = cast(-8 /* ty=int32 */, dtype="bool") /* ty=bool */;
    %147 = greater_equal(%145, %146) /* ty=Tensor[(12, 8, 8), bool] */;
    %148 = cast(%147, dtype="float32") /* ty=Tensor[(12, 8, 8), float32] */;
    %149 = cast(meta[relay.Constant][8] /* ty=Tensor[(1716), uint64] */, dtype="uint64") /* ty=Tensor[(1716), uint64] */;
    %150 = cast(%var_2282, dtype="float64") /* ty=Tensor[(100), float64] */;
    %151 = reshape(%149, newshape=[11, 12, 13]) /* ty=Tensor[(11, 12, 13), uint64] */;
    %152 = reshape(%150, newshape=[1, 100]) /* ty=Tensor[(1, 100), float64] */;
    %153 = @func_1024(%151, %152) /* ty=(Tensor[(11, 12, 13), uint64], Tensor[(?, 100), float64]) */;
    %154 = @func_1103(%139, %140) /* ty=Tensor[(10, 4, 5), bool] */;
    %155 = @func_1666(%142) /* ty=Tensor[(14, 15, 5), float64] */;
    %156 = acos(%148) /* ty=Tensor[(12, 8, 8), float32] */;
    %157 = %153.1;
    (%154, meta[relay.Constant][7] /* ty=Tensor[(200), int32] */, %155, %var_2245, %156, %157, meta[relay.Constant][8] /* ty=Tensor[(1716), uint64] */, %var_2282)
  };
  %158(%var_2289, %var_2290, %var_2291) /* ty=(Tensor[(10, 4, 5), bool], Tensor[(200), int32], Tensor[(14, 15, 5), float64], Tensor[(1050), float64], Tensor[(12, 8, 8), float32], Tensor[(?, 100), float64], Tensor[(1716), uint64], Tensor[(100), float64]) */
}

def @func_7998() -> (Tensor[(15, 6, 3), float64], Tensor[(10530), int16], Tensor[(10, 1053), float32]) {
  %166 = fn () -> (Tensor[(15, 6, 3), float64], Tensor[(10530), int16], Tensor[(10, 1053), float32]) {
    %159 = @func_4512() /* ty=(Tensor[(15, 6, 3), float64],) */;
    %160 = cast(meta[relay.Constant][9] /* ty=Tensor[(10530), int16] */, dtype="int16") /* ty=Tensor[(10530), int16] */;
    %161 = reshape(%160, newshape=[10, 1053]) /* ty=Tensor[(10, 1053), int16] */;
    %162 = @func_7332(%161) /* ty=Tensor[(10, 1053), uint16] */;
    %163 = cast(%162, dtype="float32") /* ty=Tensor[(10, 1053), float32] */;
    %164 = %159.0;
    %165 = cos(%163) /* ty=Tensor[(10, 1053), float32] */;
    (%164, meta[relay.Constant][9] /* ty=Tensor[(10530), int16] */, %165)
  };
  %166() /* ty=(Tensor[(15, 6, 3), float64], Tensor[(10530), int16], Tensor[(10, 1053), float32]) */
}

def @func_5646() -> Tensor[(1, 1053), int16] {
  %168 = fn () -> Tensor[(1, 1053), int16] {
    %167 = @func_4699() /* ty=(Tensor[(15, 6, 3), float64], Tensor[(13, 6, 7), bool], Tensor[(1, 1053), int16]) */;
    %167.2
  };
  %168() /* ty=Tensor[(1, 1053), int16] */
}

def @func_3871(%var_3869: Tensor[(9, 13, 9), int16], %var_3870: Tensor[(9, 13, 9), int16]) -> (Tensor[(13, 6, 7), bool], Tensor[(546), float32], Tensor[(9, 13, 9), uint8]) {
  @func_3867(%var_3869, %var_3870) /* ty=(Tensor[(13, 6, 7), bool], Tensor[(546), float32], Tensor[(9, 13, 9), uint8]) */
}

def @func_6929() -> (Tensor[(15, 6, 3), int32],) {
  @func_6927() /* ty=(Tensor[(15, 6, 3), int32],) */
}

def @func_4020() -> (Tensor[(15, 6, 3), int32],) {
  %176 = fn () -> (Tensor[(15, 6, 3), int32],) {
    %169 = cast(meta[relay.Constant][10] /* ty=Tensor[(15, 6, 3), float32] */, dtype="float32") /* ty=Tensor[(15, 6, 3), float32] */;
    %170 = tan(%169) /* ty=Tensor[(15, 6, 3), float32] */;
    %171 = cast(meta[relay.Constant][10] /* ty=Tensor[(15, 6, 3), float32] */, dtype="int32") /* ty=Tensor[(15, 6, 3), int32] */;
    %172 = shape_of(%170, dtype="int32") /* ty=Tensor[(3), int32] */;
    %173 = cast(%170, dtype="int32") /* ty=Tensor[(15, 6, 3), int32] */;
    %174 = dyn.reshape(%171, %172, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %175 = left_shift(%173, %174) /* ty=Tensor[(15, 6, 3), int32] */;
    (%175,)
  };
  %176() /* ty=(Tensor[(15, 6, 3), int32],) */
}

def @func_4699() -> (Tensor[(15, 6, 3), float64], Tensor[(13, 6, 7), bool], Tensor[(1, 1053), int16]) {
  %177 = @func_4512() /* ty=(Tensor[(15, 6, 3), float64],) */;
  %178 = cast(meta[relay.Constant][11] /* ty=Tensor[(1, 1053), int16] */, dtype="int16") /* ty=Tensor[(1, 1053), int16] */;
  %179 = cast(meta[relay.Constant][11] /* ty=Tensor[(1, 1053), int16] */, dtype="int16") /* ty=Tensor[(1, 1053), int16] */;
  %180 = reshape(%178, newshape=[9, 13, 9]) /* ty=Tensor[(9, 13, 9), int16] */;
  %181 = reshape(%179, newshape=[9, 13, 9]) /* ty=Tensor[(9, 13, 9), int16] */;
  %182 = @func_3867(%180, %181) /* ty=(Tensor[(13, 6, 7), bool], Tensor[(546), float32], Tensor[(9, 13, 9), uint8]) */;
  %183 = %177.0;
  %184 = %182.0;
  (%183, %184, meta[relay.Constant][11] /* ty=Tensor[(1, 1053), int16] */)
}

def @func_7335(%var_7333: Tensor[(10, 1053), int16]) -> Tensor[(10, 1053), uint16] {
  @func_7332(%var_7333) /* ty=Tensor[(10, 1053), uint16] */
}

def @func_3372(%var_3358: Tensor[(2, 4, 10), float64]) -> Tensor[(2, 4, 10), float64] {
  %185 = cast(%var_3358, dtype="float64") /* ty=Tensor[(2, 4, 10), float64] */;
  cosh(%185) /* ty=Tensor[(2, 4, 10), float64] */
}

def @func_5732() -> Tensor[(15, 6, 3), float64] {
  %187 = fn () -> Tensor[(15, 6, 3), float64] {
    %186 = @func_5599() /* ty=(Tensor[(12, 6, 4), float32], Tensor[(15, 6, 3), float64]) */;
    %186.1
  };
  %187() /* ty=Tensor[(15, 6, 3), float64] */
}

def @func_7290() -> Tensor[(15, 6, 3), int32] {
  %189 = fn () -> Tensor[(15, 6, 3), int32] {
    %188 = @func_5856() /* ty=(Tensor[(15, 6, 3), int32],) */;
    %188.0
  };
  %189() /* ty=Tensor[(15, 6, 3), int32] */
}

def @func_4141() -> Tensor[(15, 6, 3), int32] {
  @func_4139() /* ty=Tensor[(15, 6, 3), int32] */
}

def @main(%var_8816: Tensor[(1, 12, 2), float32]) -> (Tensor[(1, 12, 2), float32],) {
  %190 = cast(%var_8816, dtype="float32") /* ty=Tensor[(1, 12, 2), float32] */;
  %191 = exp(%190) /* ty=Tensor[(1, 12, 2), float32] */;
  (%191,)
}

def @func_7532() -> Tensor[(15, 6, 3), int32] {
  @func_7088() /* ty=Tensor[(15, 6, 3), int32] */
}

def @func_4905(%var_4902: Tensor[(80), float64], %var_4903: Tensor[(768), float32], %var_4904: Tensor[(312), uint32]) -> (Tensor[(15, 6, 3), float64], Tensor[(2, 4, 10), float64], Tensor[(80), float64], Tensor[(7, 1, 6), int64], uint8, Tensor[(546), float32], Tensor[(100, 16), float64], Tensor[(12, 8, 8), float32], Tensor[(768), float32], Tensor[(1050), float64], Tensor[(100), float64], Tensor[(3, 8, 13), uint32], Tensor[(312), uint32]) {
  %221 = fn (%var_4867: Tensor[(80), float64], %var_4891: Tensor[(768), float32], %var_4896: Tensor[(312), uint32]) -> (Tensor[(15, 6, 3), float64], Tensor[(2, 4, 10), float64], Tensor[(80), float64], Tensor[(7, 1, 6), int64], uint8, Tensor[(546), float32], Tensor[(100, 16), float64], Tensor[(12, 8, 8), float32], Tensor[(768), float32], Tensor[(1050), float64], Tensor[(100), float64], Tensor[(3, 8, 13), uint32], Tensor[(312), uint32]) {
    %192 = @func_4512() /* ty=(Tensor[(15, 6, 3), float64],) */;
    %193 = cast(%var_4867, dtype="float64") /* ty=Tensor[(80), float64] */;
    %194 = reshape(%193, newshape=[2, 4, 10]) /* ty=Tensor[(2, 4, 10), float64] */;
    %195 = cast(meta[relay.Constant][12] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %196 = cast(meta[relay.Constant][13] /* ty=Tensor[(100, 16), uint8] */, dtype="uint8") /* ty=Tensor[(100, 16), uint8] */;
    %197 = cast(meta[relay.Constant][14] /* ty=Tensor[(546), float32] */, dtype="float32") /* ty=Tensor[(546), float32] */;
    %198 = reshape(%195, newshape=[]) /* ty=uint8 */;
    %199 = reshape(%196, newshape=[10, 16, 10]) /* ty=Tensor[(10, 16, 10), uint8] */;
    %200 = reshape(%197, newshape=[546]) /* ty=Tensor[(546), float32] */;
    %201 = @func_3071(%198, %199, %200) /* ty=(Tensor[(10, 16, 10), uint8], Tensor[(7, 1, 6), int64], Tensor[(546), float32]) */;
    %202 = cast(meta[relay.Constant][13] /* ty=Tensor[(100, 16), uint8] */, dtype="float64") /* ty=Tensor[(100, 16), float64] */;
    %203 = cast(%var_4891, dtype="float32") /* ty=Tensor[(768), float32] */;
    %204 = cast(meta[relay.Constant][15] /* ty=Tensor[(1050), float64] */, dtype="float64") /* ty=Tensor[(1050), float64] */;
    %205 = cast(meta[relay.Constant][16] /* ty=Tensor[(100), float64] */, dtype="float64") /* ty=Tensor[(100), float64] */;
    %206 = reshape(%203, newshape=[12, 8, 8]) /* ty=Tensor[(12, 8, 8), float32] */;
    %207 = reshape(%204, newshape=[1050]) /* ty=Tensor[(1050), float64] */;
    %208 = reshape(%205, newshape=[100]) /* ty=Tensor[(100), float64] */;
    %209 = @func_2288(%206, %207, %208) /* ty=(Tensor[(10, 4, 5), bool], Tensor[(200), int32], Tensor[(14, 15, 5), float64], Tensor[(1050), float64], Tensor[(12, 8, 8), float32], Tensor[(?, 100), float64], Tensor[(1716), uint64], Tensor[(100), float64]) */;
    %210 = cast(%var_4896, dtype="uint32") /* ty=Tensor[(312), uint32] */;
    %211 = cast(%var_4896, dtype="uint32") /* ty=Tensor[(312), uint32] */;
    %212 = reshape(%210, newshape=[3, 8, 13]) /* ty=Tensor[(3, 8, 13), uint32] */;
    %213 = reshape(%211, newshape=[3, 8, 13]) /* ty=Tensor[(3, 8, 13), uint32] */;
    %214 = @func_1929(%212, %213) /* ty=(Tensor[(3, 8, 13), uint32], Tensor[(100), float64], Tensor[(180, 4), int32], Tensor[(1716), uint64]) */;
    %215 = %192.0;
    %216 = @func_3372(%194) /* ty=Tensor[(2, 4, 10), float64] */;
    %217 = %201.1;
    %218 = acos(%202) /* ty=Tensor[(100, 16), float64] */;
    %219 = %209.4;
    %220 = %214.0;
    (%215, %216, %var_4867, %217, meta[relay.Constant][12] /* ty=uint8 */, meta[relay.Constant][14] /* ty=Tensor[(546), float32] */, %218, %219, %var_4891, meta[relay.Constant][15] /* ty=Tensor[(1050), float64] */, meta[relay.Constant][16] /* ty=Tensor[(100), float64] */, %220, %var_4896)
  };
  %221(%var_4902, %var_4903, %var_4904) /* ty=(Tensor[(15, 6, 3), float64], Tensor[(2, 4, 10), float64], Tensor[(80), float64], Tensor[(7, 1, 6), int64], uint8, Tensor[(546), float32], Tensor[(100, 16), float64], Tensor[(12, 8, 8), float32], Tensor[(768), float32], Tensor[(1050), float64], Tensor[(100), float64], Tensor[(3, 8, 13), uint32], Tensor[(312), uint32]) */
}

def @func_5020(%var_5018: Tensor[(2310), float64]) -> (Tensor[(15, 6, 3), int32], Tensor[(10, 5, 8), float32], Tensor[(2, 200), float64], Tensor[(2310), float64]) {
  %222 = @func_4019() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %223 = cast(meta[relay.Constant][17] /* ty=Tensor[(2, 200), float64] */, dtype="float64") /* ty=Tensor[(2, 200), float64] */;
  %224 = cast(meta[relay.Constant][17] /* ty=Tensor[(2, 200), float64] */, dtype="float64") /* ty=Tensor[(2, 200), float64] */;
  %225 = cast(%var_5018, dtype="float64") /* ty=Tensor[(2310), float64] */;
  %226 = reshape(%223, newshape=[10, 5, 8]) /* ty=Tensor[(10, 5, 8), float64] */;
  %227 = reshape(%224, newshape=[10, 5, 8]) /* ty=Tensor[(10, 5, 8), float64] */;
  %228 = reshape(%225, newshape=[2310]) /* ty=Tensor[(2310), float64] */;
  %229 = @func_1801(%226, %227, %228) /* ty=(Tensor[(10, 5, 8), float64], Tensor[(15, 14, 11), float64], Tensor[(2310), float64], Tensor[(10, 5, 8), float32]) */;
  %230 = %222.0;
  %231 = %229.3;
  (%230, %231, meta[relay.Constant][17] /* ty=Tensor[(2, 200), float64] */, %var_5018)
}

def @func_3152(%var_3127: Tensor[(11, 8, 14), float32], %var_3140: Tensor[(100), float64]) -> (Tensor[(?, 100), float64], Tensor[(1716), uint64], Tensor[(100), float64], Tensor[(3, 8, 13), uint32], Tensor[(312), uint32], Tensor[(11, 8, 14), float32]) {
  %232 = cast(meta[relay.Constant][18] /* ty=Tensor[(1716), uint64] */, dtype="uint64") /* ty=Tensor[(1716), uint64] */;
  %233 = cast(%var_3140, dtype="float64") /* ty=Tensor[(100), float64] */;
  %234 = reshape(%232, newshape=[11, 12, 13]) /* ty=Tensor[(11, 12, 13), uint64] */;
  %235 = reshape(%233, newshape=[1, 100]) /* ty=Tensor[(1, 100), float64] */;
  %236 = @func_1024(%234, %235) /* ty=(Tensor[(11, 12, 13), uint64], Tensor[(?, 100), float64]) */;
  %237 = cast(meta[relay.Constant][19] /* ty=Tensor[(312), uint32] */, dtype="uint32") /* ty=Tensor[(312), uint32] */;
  %238 = cast(meta[relay.Constant][19] /* ty=Tensor[(312), uint32] */, dtype="uint32") /* ty=Tensor[(312), uint32] */;
  %239 = reshape(%237, newshape=[3, 8, 13]) /* ty=Tensor[(3, 8, 13), uint32] */;
  %240 = reshape(%238, newshape=[3, 8, 13]) /* ty=Tensor[(3, 8, 13), uint32] */;
  %241 = @func_1929(%239, %240) /* ty=(Tensor[(3, 8, 13), uint32], Tensor[(100), float64], Tensor[(180, 4), int32], Tensor[(1716), uint64]) */;
  %242 = cast(%var_3127, dtype="float32") /* ty=Tensor[(11, 8, 14), float32] */;
  %243 = sin(%242) /* ty=Tensor[(11, 8, 14), float32] */;
  %244 = cast(%243, dtype="float64") /* ty=Tensor[(11, 8, 14), float64] */;
  %245 = sigmoid(%244) /* ty=Tensor[(11, 8, 14), float64] */;
  %246 = cast(%245, dtype="float32") /* ty=Tensor[(11, 8, 14), float32] */;
  %247 = shape_of(%243, dtype="int32") /* ty=Tensor[(3), int32] */;
  %248 = cast(%243, dtype="float32") /* ty=Tensor[(11, 8, 14), float32] */;
  %249 = dyn.reshape(%246, %247, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %250 = %236.1;
  %251 = %241.0;
  %252 = divide(%248, %249) /* ty=Tensor[(11, 8, 14), float32] */;
  (%250, meta[relay.Constant][18] /* ty=Tensor[(1716), uint64] */, %var_3140, %251, meta[relay.Constant][19] /* ty=Tensor[(312), uint32] */, %252)
}

def @func_816(%var_814: Tensor[(10, 11, 9), float64], %var_815: Tensor[(2310), float64]) -> (Tensor[(10, 11, 9), float64], Tensor[(7, 1, 6), int64], int64, Tensor[(15, 14, 11), float64], Tensor[(2310), float64]) {
  %262 = fn (%var_790: Tensor[(10, 11, 9), float64], %var_805: Tensor[(2310), float64]) -> (Tensor[(10, 11, 9), float64], Tensor[(7, 1, 6), int64], int64, Tensor[(15, 14, 11), float64], Tensor[(2310), float64]) {
    %253 = cast(%var_790, dtype="float64") /* ty=Tensor[(10, 11, 9), float64] */;
    %254 = cast(-4 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %255 = reshape(%254, newshape=[]) /* ty=int64 */;
    %256 = @func_5(%255) /* ty=(Tensor[(7, 1, 6), int64],) */;
    %257 = cast(%var_805, dtype="float64") /* ty=Tensor[(2310), float64] */;
    %258 = reshape(%257, newshape=[15, 14, 11]) /* ty=Tensor[(15, 14, 11), float64] */;
    %259 = asin(%253) /* ty=Tensor[(10, 11, 9), float64] */;
    %260 = %256.0;
    %261 = @func_355(%258) /* ty=Tensor[(15, 14, 11), float64] */;
    (%259, %260, -4 /* ty=int64 */, %261, %var_805)
  };
  %262(%var_814, %var_815) /* ty=(Tensor[(10, 11, 9), float64], Tensor[(7, 1, 6), int64], int64, Tensor[(15, 14, 11), float64], Tensor[(2310), float64]) */
}

def @func_7534() -> Tensor[(15, 6, 3), int32] {
  @func_7532() /* ty=Tensor[(15, 6, 3), int32] */
}

def @func_3076(%var_3073: uint8, %var_3074: Tensor[(10, 16, 10), uint8], %var_3075: Tensor[(546), float32]) -> (Tensor[(10, 16, 10), uint8], Tensor[(7, 1, 6), int64], Tensor[(546), float32]) {
  @func_3071(%var_3073, %var_3074, %var_3075) /* ty=(Tensor[(10, 16, 10), uint8], Tensor[(7, 1, 6), int64], Tensor[(546), float32]) */
}

def @func_1424(%var_1423: Tensor[(3, 2, 13), float64]) -> (Tensor[(3, 2, 13), float64],) {
  %265 = fn (%var_1419: Tensor[(3, 2, 13), float64]) -> (Tensor[(3, 2, 13), float64],) {
    %263 = cast(%var_1419, dtype="float64") /* ty=Tensor[(3, 2, 13), float64] */;
    %264 = sqrt(%263) /* ty=Tensor[(3, 2, 13), float64] */;
    (%264,)
  };
  %265(%var_1423) /* ty=(Tensor[(3, 2, 13), float64],) */
}

def @func_3867(%var_3843: Tensor[(9, 13, 9), int16], %var_3844: Tensor[(9, 13, 9), int16]) -> (Tensor[(13, 6, 7), bool], Tensor[(546), float32], Tensor[(9, 13, 9), uint8]) {
  %266 = cast(meta[relay.Constant][20] /* ty=Tensor[(546), float32] */, dtype="float32") /* ty=Tensor[(546), float32] */;
  %267 = reshape(%266, newshape=[13, 6, 7]) /* ty=Tensor[(13, 6, 7), float32] */;
  %268 = @func_1747(%267) /* ty=(Tensor[(13, 6, 7), bool], Tensor[(7, 1, 6), int64], Tensor[(990), float64], Tensor[(2310), float64]) */;
  %269 = cast(%var_3844, dtype="bool") /* ty=Tensor[(9, 13, 9), bool] */;
  %270 = shape_of(%var_3843, dtype="int32") /* ty=Tensor[(3), int32] */;
  %271 = cast(%var_3843, dtype="bool") /* ty=Tensor[(9, 13, 9), bool] */;
  %272 = dyn.reshape(%269, %270, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %273 = less(%271, %272) /* ty=Tensor[(9, 13, 9), bool] */;
  %274 = cast(%var_3843, dtype="uint8") /* ty=Tensor[(9, 13, 9), uint8] */;
  %275 = shape_of(%273, dtype="int32") /* ty=Tensor[(3), int32] */;
  %276 = cast(%273, dtype="uint8") /* ty=Tensor[(9, 13, 9), uint8] */;
  %277 = dyn.reshape(%274, %275, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %278 = %268.0;
  %279 = bitwise_or(%276, %277) /* ty=Tensor[(9, 13, 9), uint8] */;
  (%278, meta[relay.Constant][20] /* ty=Tensor[(546), float32] */, %279)
}

def @func_4139() -> Tensor[(15, 6, 3), int32] {
  %280 = @func_4052() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %280.0
}

def @func_8482(%var_8431: Tensor[(768), float32], %var_8433: Tensor[(100, 1), float64]) -> (Tensor[(104), float64], Tensor[(15, 6, 3), int32], Tensor[(990), float64], Tensor[(15, 6, 3), int32], Tensor[(80), float64], Tensor[(?, 100), float64], Tensor[(768), float32], Tensor[(1, 1050), float64], Tensor[(100, 1), float64], Tensor[(15, 1053), float64], Tensor[(4563, 3), bool], Tensor[(4563, 3), bool]) {
  %281 = @func_6421() /* ty=(Tensor[(104), float64],) */;
  %282 = cast(meta[relay.Constant][21] /* ty=Tensor[(4563, 3), int16] */, dtype="int16") /* ty=Tensor[(4563, 3), int16] */;
  %283 = cast(meta[relay.Constant][22] /* ty=Tensor[(990), float64] */, dtype="float64") /* ty=Tensor[(990), float64] */;
  %284 = reshape(%282, newshape=[13, 1053]) /* ty=Tensor[(13, 1053), int16] */;
  %285 = reshape(%283, newshape=[990]) /* ty=Tensor[(990), float64] */;
  %286 = @func_5961(%284, %285) /* ty=(Tensor[(13, 1053), bool], Tensor[(?, 1053), float64], Tensor[(15, 6, 3), int32], Tensor[(990), float64], Tensor[(13, 1053), float32]) */;
  %287 = cast(meta[relay.Constant][23] /* ty=Tensor[(80), float64] */, dtype="float64") /* ty=Tensor[(80), float64] */;
  %288 = reshape(%287, newshape=[80]) /* ty=Tensor[(80), float64] */;
  %289 = @func_7950(%288) /* ty=(Tensor[(15, 6, 3), int32], Tensor[(990), float64], Tensor[(312), uint32], Tensor[(80), float64], Tensor[(768), float32], Tensor[(312), uint32]) */;
  %290 = cast(%var_8431, dtype="float32") /* ty=Tensor[(768), float32] */;
  %291 = cast(meta[relay.Constant][24] /* ty=Tensor[(1, 1050), float64] */, dtype="float64") /* ty=Tensor[(1, 1050), float64] */;
  %292 = cast(%var_8433, dtype="float64") /* ty=Tensor[(100, 1), float64] */;
  %293 = reshape(%290, newshape=[12, 8, 8]) /* ty=Tensor[(12, 8, 8), float32] */;
  %294 = reshape(%291, newshape=[1050]) /* ty=Tensor[(1050), float64] */;
  %295 = reshape(%292, newshape=[100]) /* ty=Tensor[(100), float64] */;
  %296 = @func_2288(%293, %294, %295) /* ty=(Tensor[(10, 4, 5), bool], Tensor[(200), int32], Tensor[(14, 15, 5), float64], Tensor[(1050), float64], Tensor[(12, 8, 8), float32], Tensor[(?, 100), float64], Tensor[(1716), uint64], Tensor[(100), float64]) */;
  %297 = @func_8207() /* ty=(Tensor[(15, 1053), float64], Tensor[(7, 1, 6), int64], int64, Tensor[(1, 1053), float32]) */;
  %298 = cast(meta[relay.Constant][21] /* ty=Tensor[(4563, 3), int16] */, dtype="float64") /* ty=Tensor[(4563, 3), float64] */;
  %299 = acos(%298) /* ty=Tensor[(4563, 3), float64] */;
  %300 = cast(meta[relay.Constant][21] /* ty=Tensor[(4563, 3), int16] */, dtype="bool") /* ty=Tensor[(4563, 3), bool] */;
  %301 = shape_of(%299, dtype="int32") /* ty=Tensor[(2), int32] */;
  %302 = cast(%299, dtype="bool") /* ty=Tensor[(4563, 3), bool] */;
  %303 = dyn.reshape(%300, %301, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %304 = cast(%299, dtype="float64") /* ty=Tensor[(4563, 3), float64] */;
  %305 = log2(%304) /* ty=Tensor[(4563, 3), float64] */;
  %306 = cast(meta[relay.Constant][21] /* ty=Tensor[(4563, 3), int16] */, dtype="bool") /* ty=Tensor[(4563, 3), bool] */;
  %307 = shape_of(%305, dtype="int32") /* ty=Tensor[(2), int32] */;
  %308 = cast(%305, dtype="bool") /* ty=Tensor[(4563, 3), bool] */;
  %309 = dyn.reshape(%306, %307, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %310 = %281.0;
  %311 = %286.2;
  %312 = %289.0;
  %313 = %296.5;
  %314 = %297.0;
  %315 = less(%302, %303) /* ty=Tensor[(4563, 3), bool] */;
  %316 = greater(%308, %309) /* ty=Tensor[(4563, 3), bool] */;
  (%310, %311, meta[relay.Constant][22] /* ty=Tensor[(990), float64] */, %312, meta[relay.Constant][23] /* ty=Tensor[(80), float64] */, %313, %var_8431, meta[relay.Constant][24] /* ty=Tensor[(1, 1050), float64] */, %var_8433, %314, %315, %316)
}

def @func_8596() -> (Tensor[(13, 6, 7), bool],) {
  %319 = fn () -> (Tensor[(13, 6, 7), bool],) {
    %317 = @func_4699() /* ty=(Tensor[(15, 6, 3), float64], Tensor[(13, 6, 7), bool], Tensor[(1, 1053), int16]) */;
    %318 = %317.1;
    (%318,)
  };
  %319() /* ty=(Tensor[(13, 6, 7), bool],) */
}

def @func_5965(%var_5963: Tensor[(13, 1053), int16], %var_5964: Tensor[(990), float64]) -> (Tensor[(13, 1053), bool], Tensor[(?, 1053), float64], Tensor[(15, 6, 3), int32], Tensor[(990), float64], Tensor[(13, 1053), float32]) {
  @func_5961(%var_5963, %var_5964) /* ty=(Tensor[(13, 1053), bool], Tensor[(?, 1053), float64], Tensor[(15, 6, 3), int32], Tensor[(990), float64], Tensor[(13, 1053), float32]) */
}

def @func_5218() -> (Tensor[(15, 6, 3), int32], Tensor[(2, 4, 13), float32], Tensor[(104), float64]) {
  %325 = fn () -> (Tensor[(15, 6, 3), int32], Tensor[(2, 4, 13), float32], Tensor[(104), float64]) {
    %320 = @func_4427() /* ty=(Tensor[(15, 6, 3), int32],) */;
    %321 = cast(meta[relay.Constant][25] /* ty=Tensor[(104), float64] */, dtype="float64") /* ty=Tensor[(104), float64] */;
    %322 = reshape(%321, newshape=[2, 4, 13]) /* ty=Tensor[(2, 4, 13), float64] */;
    %323 = %320.0;
    %324 = @func_2777(%322) /* ty=Tensor[(2, 4, 13), float32] */;
    (%323, %324, meta[relay.Constant][25] /* ty=Tensor[(104), float64] */)
  };
  %325() /* ty=(Tensor[(15, 6, 3), int32], Tensor[(2, 4, 13), float32], Tensor[(104), float64]) */
}

def @func_3658(%var_3630: Tensor[(10, 9, 5), float64], %var_3647: Tensor[(50, 2), float64]) -> (Tensor[(10, 9, 5), float64], Tensor[(10, 9, 5), int32], Tensor[(10, 5, 2), float64], Tensor[(50, 2), float64]) {
  %326 = cast(%var_3630, dtype="float64") /* ty=Tensor[(10, 9, 5), float64] */;
  %327 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(10, 9, 5), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %328 = cast(meta[relay.Constant][26] /* ty=Tensor[(10, 9, 5), float64] */, dtype="float64") /* ty=Tensor[(10, 9, 5), float64] */;
  %329 = dyn.reshape(%326, %327, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %330 = cast(meta[relay.Constant][26] /* ty=Tensor[(10, 9, 5), float64] */, dtype="int32") /* ty=Tensor[(10, 9, 5), int32] */;
  %331 = shape_of(%var_3630, dtype="int32") /* ty=Tensor[(3), int32] */;
  %332 = cast(%var_3630, dtype="int32") /* ty=Tensor[(10, 9, 5), int32] */;
  %333 = dyn.reshape(%330, %331, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %334 = cast(%var_3647, dtype="float64") /* ty=Tensor[(50, 2), float64] */;
  %335 = reshape(%334, newshape=[10, 5, 2]) /* ty=Tensor[(10, 5, 2), float64] */;
  %336 = @func_140(%335) /* ty=(Tensor[(10, 5, 2), float64],) */;
  %337 = divide(%328, %329) /* ty=Tensor[(10, 9, 5), float64] */;
  %338 = add(%332, %333) /* ty=Tensor[(10, 9, 5), int32] */;
  %339 = %336.0;
  (%337, %338, %339, %var_3647)
}

def @func_8092() -> (Tensor[(104), float32], Tensor[(15, 6, 3), uint8]) {
  %340 = @func_6641() /* ty=(Tensor[(104), float32],) */;
  %341 = @func_6927() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %342 = %341.0;
  %343 = cast(meta[relay.Constant][27] /* ty=Tensor[(15, 6, 3), int32] */, dtype="uint8") /* ty=Tensor[(15, 6, 3), uint8] */;
  %344 = shape_of(%342, dtype="int32") /* ty=Tensor[(3), int32] */;
  %345 = cast(%342, dtype="uint8") /* ty=Tensor[(15, 6, 3), uint8] */;
  %346 = dyn.reshape(%343, %344, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %347 = %340.0;
  %348 = maximum(%345, %346) /* ty=Tensor[(15, 6, 3), uint8] */;
  (%347, %348)
}

def @func_6251(%var_6249: Tensor[(990), float64]) -> (Tensor[(15, 6, 3), int32], Tensor[(15, 6, 3), int32], Tensor[(15, 6, 3), int32], Tensor[(990), float64], Tensor[(15, 6, 3), int32]) {
  @func_6248(%var_6249) /* ty=(Tensor[(15, 6, 3), int32], Tensor[(15, 6, 3), int32], Tensor[(15, 6, 3), int32], Tensor[(990), float64], Tensor[(15, 6, 3), int32]) */
}

def @func_1932(%var_1930: Tensor[(3, 8, 13), uint32], %var_1931: Tensor[(3, 8, 13), uint32]) -> (Tensor[(3, 8, 13), uint32], Tensor[(100), float64], Tensor[(180, 4), int32], Tensor[(1716), uint64]) {
  %362 = fn (%var_1920: Tensor[(3, 8, 13), uint32], %var_1921: Tensor[(3, 8, 13), uint32]) -> (Tensor[(3, 8, 13), uint32], Tensor[(100), float64], Tensor[(180, 4), int32], Tensor[(1716), uint64]) {
    %349 = cast(%var_1921, dtype="uint32") /* ty=Tensor[(3, 8, 13), uint32] */;
    %350 = shape_of(%var_1920, dtype="int32") /* ty=Tensor[(3), int32] */;
    %351 = cast(%var_1920, dtype="uint32") /* ty=Tensor[(3, 8, 13), uint32] */;
    %352 = dyn.reshape(%349, %350, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %353 = cast(meta[relay.Constant][28] /* ty=Tensor[(180, 4), int32] */, dtype="int32") /* ty=Tensor[(180, 4), int32] */;
    %354 = cast(meta[relay.Constant][28] /* ty=Tensor[(180, 4), int32] */, dtype="int32") /* ty=Tensor[(180, 4), int32] */;
    %355 = cast(meta[relay.Constant][29] /* ty=Tensor[(1716), uint64] */, dtype="uint64") /* ty=Tensor[(1716), uint64] */;
    %356 = reshape(%353, newshape=[9, 8, 10]) /* ty=Tensor[(9, 8, 10), int32] */;
    %357 = reshape(%354, newshape=[9, 8, 10]) /* ty=Tensor[(9, 8, 10), int32] */;
    %358 = reshape(%355, newshape=[1716]) /* ty=Tensor[(1716), uint64] */;
    %359 = @func_1470(%356, %357, %358) /* ty=(Tensor[(9, 8, 10), bool], Tensor[(11, 12, 13), uint64], Tensor[(1716), uint64], Tensor[(100), float64]) */;
    %360 = bitwise_xor(%351, %352) /* ty=Tensor[(3, 8, 13), uint32] */;
    %361 = %359.3;
    (%360, %361, meta[relay.Constant][28] /* ty=Tensor[(180, 4), int32] */, meta[relay.Constant][29] /* ty=Tensor[(1716), uint64] */)
  };
  %362(%var_1930, %var_1931) /* ty=(Tensor[(3, 8, 13), uint32], Tensor[(100), float64], Tensor[(180, 4), int32], Tensor[(1716), uint64]) */
}

def @func_4558() -> (Tensor[(15, 6, 3), int32], Tensor[(15, 6, 3), int32]) {
  @func_4556() /* ty=(Tensor[(15, 6, 3), int32], Tensor[(15, 6, 3), int32]) */
}

def @func_5834(%var_5832: Tensor[(768), float32], %var_5833: Tensor[(312), uint32]) -> (Tensor[(15, 6, 3), float64], Tensor[(80), float64], Tensor[(768), float32], Tensor[(312), uint32], Tensor[(12, 8, 8), float32]) {
  %375 = fn (%var_5819: Tensor[(768), float32], %var_5820: Tensor[(312), uint32]) -> (Tensor[(15, 6, 3), float64], Tensor[(80), float64], Tensor[(768), float32], Tensor[(312), uint32], Tensor[(12, 8, 8), float32]) {
    %363 = @func_4465() /* ty=(Tensor[(15, 6, 3), float32], Tensor[(15, 6, 3), float64]) */;
    %364 = cast(meta[relay.Constant][30] /* ty=Tensor[(80), float64] */, dtype="float64") /* ty=Tensor[(80), float64] */;
    %365 = cast(%var_5819, dtype="float32") /* ty=Tensor[(768), float32] */;
    %366 = cast(%var_5820, dtype="uint32") /* ty=Tensor[(312), uint32] */;
    %367 = reshape(%364, newshape=[80]) /* ty=Tensor[(80), float64] */;
    %368 = reshape(%365, newshape=[768]) /* ty=Tensor[(768), float32] */;
    %369 = reshape(%366, newshape=[312]) /* ty=Tensor[(312), uint32] */;
    %370 = @func_4901(%367, %368, %369) /* ty=(Tensor[(15, 6, 3), float64], Tensor[(2, 4, 10), float64], Tensor[(80), float64], Tensor[(7, 1, 6), int64], uint8, Tensor[(546), float32], Tensor[(100, 16), float64], Tensor[(12, 8, 8), float32], Tensor[(768), float32], Tensor[(1050), float64], Tensor[(100), float64], Tensor[(3, 8, 13), uint32], Tensor[(312), uint32]) */;
    %371 = %370.7;
    %372 = cast(%371, dtype="float32") /* ty=Tensor[(12, 8, 8), float32] */;
    %373 = %363.1;
    %374 = sin(%372) /* ty=Tensor[(12, 8, 8), float32] */;
    (%373, meta[relay.Constant][30] /* ty=Tensor[(80), float64] */, %var_5819, %var_5820, %374)
  };
  %375(%var_5832, %var_5833) /* ty=(Tensor[(15, 6, 3), float64], Tensor[(80), float64], Tensor[(768), float32], Tensor[(312), uint32], Tensor[(12, 8, 8), float32]) */
}

def @func_7923() -> Tensor[(15, 6, 3), int32] {
  %377 = fn () -> Tensor[(15, 6, 3), int32] {
    %376 = @func_6402() /* ty=(Tensor[(15, 6, 3), int32], Tensor[(15, 6, 3), int32]) */;
    %376.1
  };
  %377() /* ty=Tensor[(15, 6, 3), int32] */
}

def @func_2615(%var_2614: int64) -> (Tensor[(4, 9, 10), float32], Tensor[(7, 1, 6), int64], int64) {
  %384 = fn (%var_2599: int64) -> (Tensor[(4, 9, 10), float32], Tensor[(7, 1, 6), int64], int64) {
    %378 = cast(meta[relay.Constant][31] /* ty=Tensor[(4, 9, 10), float32] */, dtype="float32") /* ty=Tensor[(4, 9, 10), float32] */;
    %379 = cast(%var_2599, dtype="int64") /* ty=int64 */;
    %380 = reshape(%379, newshape=[]) /* ty=int64 */;
    %381 = @func_5(%380) /* ty=(Tensor[(7, 1, 6), int64],) */;
    %382 = log2(%378) /* ty=Tensor[(4, 9, 10), float32] */;
    %383 = %381.0;
    (%382, %383, %var_2599)
  };
  %384(%var_2614) /* ty=(Tensor[(4, 9, 10), float32], Tensor[(7, 1, 6), int64], int64) */
}

def @func_4514() -> (Tensor[(15, 6, 3), float64],) {
  @func_4512() /* ty=(Tensor[(15, 6, 3), float64],) */
}

def @func_8338() -> (Tensor[(15, 6, 3), int32],) {
  %385 = @func_4427() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %386 = %385.0;
  (%386,)
}

def @func_8251(%var_8221: uint8, %var_8222: Tensor[(1600), uint8], %var_8223: Tensor[(546), float32]) -> (Tensor[(15, 6, 3), float64], Tensor[(546), float32], uint8, Tensor[(546), float32], Tensor[(15, 6, 3), int32], Tensor[(1600), float32], Tensor[(12, 6, 4), float32]) {
  %387 = @func_4512() /* ty=(Tensor[(15, 6, 3), float64],) */;
  %388 = cast(%var_8221, dtype="uint8") /* ty=uint8 */;
  %389 = cast(%var_8222, dtype="uint8") /* ty=Tensor[(1600), uint8] */;
  %390 = cast(%var_8223, dtype="float32") /* ty=Tensor[(546), float32] */;
  %391 = reshape(%388, newshape=[]) /* ty=uint8 */;
  %392 = reshape(%389, newshape=[10, 16, 10]) /* ty=Tensor[(10, 16, 10), uint8] */;
  %393 = reshape(%390, newshape=[546]) /* ty=Tensor[(546), float32] */;
  %394 = @func_3071(%391, %392, %393) /* ty=(Tensor[(10, 16, 10), uint8], Tensor[(7, 1, 6), int64], Tensor[(546), float32]) */;
  %395 = @func_7436() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %396 = cast(%var_8222, dtype="float32") /* ty=Tensor[(1600), float32] */;
  %397 = @func_5599() /* ty=(Tensor[(12, 6, 4), float32], Tensor[(15, 6, 3), float64]) */;
  %398 = %387.0;
  %399 = %394.2;
  %400 = %395.0;
  %401 = log10(%396) /* ty=Tensor[(1600), float32] */;
  %402 = %397.0;
  (%398, %399, %var_8221, %var_8223, %400, %401, %402)
}

def @func_6612() -> (Tensor[(15, 6, 3), int32], Tensor[(11, 8, 14), float32], Tensor[(1232), float32], Tensor[(1, 100), float64], Tensor[(15, 6, 3), int32], Tensor[(3, 2, 13), float64], Tensor[(78), float64], Tensor[(2, 4, 13), float32]) {
  %403 = @func_5199() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %404 = cast(meta[relay.Constant][32] /* ty=Tensor[(1232), float32] */, dtype="float32") /* ty=Tensor[(1232), float32] */;
  %405 = cast(meta[relay.Constant][33] /* ty=Tensor[(1, 100), float64] */, dtype="float64") /* ty=Tensor[(1, 100), float64] */;
  %406 = reshape(%404, newshape=[11, 8, 14]) /* ty=Tensor[(11, 8, 14), float32] */;
  %407 = reshape(%405, newshape=[100]) /* ty=Tensor[(100), float64] */;
  %408 = @func_3152(%406, %407) /* ty=(Tensor[(?, 100), float64], Tensor[(1716), uint64], Tensor[(100), float64], Tensor[(3, 8, 13), uint32], Tensor[(312), uint32], Tensor[(11, 8, 14), float32]) */;
  %409 = @func_4052() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %410 = cast(meta[relay.Constant][34] /* ty=Tensor[(78), float64] */, dtype="float64") /* ty=Tensor[(78), float64] */;
  %411 = reshape(%410, newshape=[3, 2, 13]) /* ty=Tensor[(3, 2, 13), float64] */;
  %412 = @func_1422(%411) /* ty=(Tensor[(3, 2, 13), float64],) */;
  %413 = @func_5217() /* ty=(Tensor[(15, 6, 3), int32], Tensor[(2, 4, 13), float32], Tensor[(104), float64]) */;
  %414 = %403.0;
  %415 = %408.5;
  %416 = %409.0;
  %417 = %412.0;
  %418 = %413.1;
  (%414, %415, meta[relay.Constant][32] /* ty=Tensor[(1232), float32] */, meta[relay.Constant][33] /* ty=Tensor[(1, 100), float64] */, %416, %417, meta[relay.Constant][34] /* ty=Tensor[(78), float64] */, %418)
}

def @func_7461() -> Tensor[(15, 6, 3), int32] {
  %419 = fn () -> Tensor[(15, 6, 3), int32] {
    @func_7289() /* ty=Tensor[(15, 6, 3), int32] */
  };
  %419() /* ty=Tensor[(15, 6, 3), int32] */
}

def @func_1805(%var_1802: Tensor[(10, 5, 8), float64], %var_1803: Tensor[(10, 5, 8), float64], %var_1804: Tensor[(2310), float64]) -> (Tensor[(10, 5, 8), float64], Tensor[(15, 14, 11), float64], Tensor[(2310), float64], Tensor[(10, 5, 8), float32]) {
  %430 = fn (%var_1776: Tensor[(10, 5, 8), float64], %var_1777: Tensor[(10, 5, 8), float64], %var_1783: Tensor[(2310), float64]) -> (Tensor[(10, 5, 8), float64], Tensor[(15, 14, 11), float64], Tensor[(2310), float64], Tensor[(10, 5, 8), float32]) {
    %420 = cast(%var_1777, dtype="float64") /* ty=Tensor[(10, 5, 8), float64] */;
    %421 = shape_of(%var_1776, dtype="int32") /* ty=Tensor[(3), int32] */;
    %422 = cast(%var_1776, dtype="float64") /* ty=Tensor[(10, 5, 8), float64] */;
    %423 = dyn.reshape(%420, %421, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %424 = cast(%var_1783, dtype="float64") /* ty=Tensor[(2310), float64] */;
    %425 = reshape(%424, newshape=[15, 14, 11]) /* ty=Tensor[(15, 14, 11), float64] */;
    %426 = cast(%var_1776, dtype="float32") /* ty=Tensor[(10, 5, 8), float32] */;
    %427 = divide(%422, %423) /* ty=Tensor[(10, 5, 8), float64] */;
    %428 = @func_355(%425) /* ty=Tensor[(15, 14, 11), float64] */;
    %429 = cos(%426) /* ty=Tensor[(10, 5, 8), float32] */;
    (%427, %428, %var_1783, %429)
  };
  %430(%var_1802, %var_1803, %var_1804) /* ty=(Tensor[(10, 5, 8), float64], Tensor[(15, 14, 11), float64], Tensor[(2310), float64], Tensor[(10, 5, 8), float32]) */
}

def @func_7950(%var_7944: Tensor[(80), float64]) -> (Tensor[(15, 6, 3), int32], Tensor[(990), float64], Tensor[(312), uint32], Tensor[(80), float64], Tensor[(768), float32], Tensor[(312), uint32]) {
  %431 = @func_6865() /* ty=(int64, Tensor[(990), float64], Tensor[(770, 3), float64], Tensor[(15, 6, 3), int32], Tensor[(2, 4, 13), float64]) */;
  %432 = cast(%var_7944, dtype="float64") /* ty=Tensor[(80), float64] */;
  %433 = cast(meta[relay.Constant][35] /* ty=Tensor[(768), float32] */, dtype="float32") /* ty=Tensor[(768), float32] */;
  %434 = cast(meta[relay.Constant][36] /* ty=Tensor[(312), uint32] */, dtype="uint32") /* ty=Tensor[(312), uint32] */;
  %435 = reshape(%432, newshape=[80]) /* ty=Tensor[(80), float64] */;
  %436 = reshape(%433, newshape=[768]) /* ty=Tensor[(768), float32] */;
  %437 = reshape(%434, newshape=[312]) /* ty=Tensor[(312), uint32] */;
  %438 = @func_4901(%435, %436, %437) /* ty=(Tensor[(15, 6, 3), float64], Tensor[(2, 4, 10), float64], Tensor[(80), float64], Tensor[(7, 1, 6), int64], uint8, Tensor[(546), float32], Tensor[(100, 16), float64], Tensor[(12, 8, 8), float32], Tensor[(768), float32], Tensor[(1050), float64], Tensor[(100), float64], Tensor[(3, 8, 13), uint32], Tensor[(312), uint32]) */;
  %439 = @func_7532() /* ty=Tensor[(15, 6, 3), int32] */;
  %440 = %431.1;
  %441 = %438.12;
  (%439, %440, %441, %var_7944, meta[relay.Constant][35] /* ty=Tensor[(768), float32] */, meta[relay.Constant][36] /* ty=Tensor[(312), uint32] */)
}

def @func_3375(%var_3373: Tensor[(2, 4, 10), float64]) -> Tensor[(2, 4, 10), float64] {
  @func_3372(%var_3373) /* ty=Tensor[(2, 4, 10), float64] */
}

def @func_6614() -> (Tensor[(15, 6, 3), int32], Tensor[(11, 8, 14), float32], Tensor[(1232), float32], Tensor[(1, 100), float64], Tensor[(15, 6, 3), int32], Tensor[(3, 2, 13), float64], Tensor[(78), float64], Tensor[(2, 4, 13), float32]) {
  @func_6612() /* ty=(Tensor[(15, 6, 3), int32], Tensor[(11, 8, 14), float32], Tensor[(1232), float32], Tensor[(1, 100), float64], Tensor[(15, 6, 3), int32], Tensor[(3, 2, 13), float64], Tensor[(78), float64], Tensor[(2, 4, 13), float32]) */
}

def @func_5891() -> Tensor[(15, 6, 3), int32] {
  @func_5889() /* ty=Tensor[(15, 6, 3), int32] */
}

def @func_4053() -> (Tensor[(15, 6, 3), int32],) {
  %444 = fn () -> (Tensor[(15, 6, 3), int32],) {
    %442 = @func_4019() /* ty=(Tensor[(15, 6, 3), int32],) */;
    %443 = %442.0;
    (%443,)
  };
  %444() /* ty=(Tensor[(15, 6, 3), int32],) */
}

def @func_5340(%var_5338: int16, %var_5339: Tensor[(10), int16]) -> (Tensor[(7, 1, 6), int64], int16, Tensor[(10), int16], Tensor[(15, 6, 3), float64]) {
  %455 = fn (%var_5311: int16, %var_5312: Tensor[(10), int16]) -> (Tensor[(7, 1, 6), int64], int16, Tensor[(10), int16], Tensor[(15, 6, 3), float64]) {
    %445 = cast(%var_5311, dtype="int16") /* ty=int16 */;
    %446 = cast(%var_5312, dtype="int16") /* ty=Tensor[(10), int16] */;
    %447 = reshape(%445, newshape=[]) /* ty=int16 */;
    %448 = reshape(%446, newshape=[5, 2, 1]) /* ty=Tensor[(5, 2, 1), int16] */;
    %449 = @func_31(%447, %448) /* ty=(Tensor[(5, 2, 1), int16], Tensor[(7, 1, 6), int64]) */;
    %450 = @func_4556() /* ty=(Tensor[(15, 6, 3), int32], Tensor[(15, 6, 3), int32]) */;
    %451 = %450.0;
    %452 = cast(%451, dtype="float64") /* ty=Tensor[(15, 6, 3), float64] */;
    %453 = %449.1;
    %454 = log2(%452) /* ty=Tensor[(15, 6, 3), float64] */;
    (%453, %var_5311, %var_5312, %454)
  };
  %455(%var_5338, %var_5339) /* ty=(Tensor[(7, 1, 6), int64], int16, Tensor[(10), int16], Tensor[(15, 6, 3), float64]) */
}

def @func_4222(%var_4189: Tensor[(50), float32], %var_4190: Tensor[(250, 3), float64], %var_4200: Tensor[(50), float32]) -> (Tensor[(10, 5, 2), float64], Tensor[(250, 3), float64], Tensor[(1, 100), float64], Tensor[(50), float64], Tensor[(15, 6, 3), bool]) {
  %456 = cast(%var_4189, dtype="float32") /* ty=Tensor[(50), float32] */;
  %457 = cast(%var_4190, dtype="float64") /* ty=Tensor[(250, 3), float64] */;
  %458 = cast(meta[relay.Constant][37] /* ty=Tensor[(1, 100), float64] */, dtype="float64") /* ty=Tensor[(1, 100), float64] */;
  %459 = reshape(%456, newshape=[10, 5, 1]) /* ty=Tensor[(10, 5, 1), float32] */;
  %460 = reshape(%457, newshape=[10, 5, 15]) /* ty=Tensor[(10, 5, 15), float64] */;
  %461 = reshape(%458, newshape=[100]) /* ty=Tensor[(100), float64] */;
  %462 = @func_2200(%459, %460, %461) /* ty=(Tensor[(10, 5, 15), bool], Tensor[(10, 5, 15), float32], Tensor[(10, 5, 2), float64], Tensor[(100), float64], Tensor[(9, 8, 10), bool], Tensor[(720), int32], Tensor[(1716), uint64], Tensor[(9, 8, 10), bool], Tensor[(10, 5, 1), float32], Tensor[(10, 5, ?), uint8]) */;
  %463 = cast(%var_4200, dtype="float64") /* ty=Tensor[(50), float64] */;
  %464 = shape_of(%var_4189, dtype="int32") /* ty=Tensor[(1), int32] */;
  %465 = cast(%var_4189, dtype="float64") /* ty=Tensor[(50), float64] */;
  %466 = dyn.reshape(%463, %464, newshape=[]) /* ty=Tensor[(?), float64] */;
  %467 = @func_4139() /* ty=Tensor[(15, 6, 3), int32] */;
  %468 = @func_4052() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %469 = %468.0;
  %470 = cast(%469, dtype="bool") /* ty=Tensor[(15, 6, 3), bool] */;
  %471 = shape_of(%467, dtype="int32") /* ty=Tensor[(3), int32] */;
  %472 = cast(%467, dtype="bool") /* ty=Tensor[(15, 6, 3), bool] */;
  %473 = dyn.reshape(%470, %471, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %474 = equal(%472, %473) /* ty=Tensor[(15, 6, 3), bool] */;
  %475 = cast(%469, dtype="bool") /* ty=Tensor[(15, 6, 3), bool] */;
  %476 = shape_of(%474, dtype="int32") /* ty=Tensor[(3), int32] */;
  %477 = cast(%474, dtype="bool") /* ty=Tensor[(15, 6, 3), bool] */;
  %478 = dyn.reshape(%475, %476, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %479 = %462.2;
  %480 = power(%465, %466) /* ty=Tensor[(50), float64] */;
  %481 = greater(%477, %478) /* ty=Tensor[(15, 6, 3), bool] */;
  (%479, %var_4190, meta[relay.Constant][37] /* ty=Tensor[(1, 100), float64] */, %480, %481)
}

def @func_6248(%var_6165: Tensor[(990), float64]) -> (Tensor[(15, 6, 3), int32], Tensor[(15, 6, 3), int32], Tensor[(15, 6, 3), int32], Tensor[(990), float64], Tensor[(15, 6, 3), int32]) {
  %482 = @func_5433() /* ty=(Tensor[(15, 6, 3), int32], Tensor[(2, 4, 13), float32], Tensor[(104), float64]) */;
  %483 = cast(%var_6165, dtype="float64") /* ty=Tensor[(990), float64] */;
  %484 = reshape(%483, newshape=[990]) /* ty=Tensor[(990), float64] */;
  %485 = @func_5569(%484) /* ty=(Tensor[(15, 6, 3), int32], Tensor[(400), float64], Tensor[(990), float64], Tensor[(15, 6, 3), float32]) */;
  %486 = @func_4427() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %487 = %482.0;
  %488 = @func_4139() /* ty=Tensor[(15, 6, 3), int32] */;
  %489 = %485.0;
  %490 = %486.0;
  (%487, %488, %489, %var_6165, %490)
}

def @func_6867() -> (int64, Tensor[(990), float64], Tensor[(770, 3), float64], Tensor[(15, 6, 3), int32], Tensor[(2, 4, 13), float64]) {
  @func_6865() /* ty=(int64, Tensor[(990), float64], Tensor[(770, 3), float64], Tensor[(15, 6, 3), int32], Tensor[(2, 4, 13), float64]) */
}

def @func_5(%var_0: int64) -> (Tensor[(7, 1, 6), int64],) {
  %491 = cast(%var_0, dtype="int64") /* ty=int64 */;
  %492 = cast(meta[relay.Constant][38] /* ty=Tensor[(7, 1, 6), int64] */, dtype="int64") /* ty=Tensor[(7, 1, 6), int64] */;
  %493 = logical_xor(%491, %492) /* ty=Tensor[(7, 1, 6), int64] */;
  (%493,)
}

def @func_4360() -> (Tensor[(15, 6, 3), int32],) {
  %494 = @func_4139() /* ty=Tensor[(15, 6, 3), int32] */;
  (%494,)
}

def @func_6701() -> (Tensor[(15, 6, 3), float64], Tensor[(15, 6, 3), int32], Tensor[(15, 6, 3), float32]) {
  %501 = fn () -> (Tensor[(15, 6, 3), float64], Tensor[(15, 6, 3), int32], Tensor[(15, 6, 3), float32]) {
    %495 = @func_4052() /* ty=(Tensor[(15, 6, 3), int32],) */;
    %496 = @func_4139() /* ty=Tensor[(15, 6, 3), int32] */;
    %497 = cast(%496, dtype="float32") /* ty=Tensor[(15, 6, 3), float32] */;
    %498 = @func_5731() /* ty=Tensor[(15, 6, 3), float64] */;
    %499 = %495.0;
    %500 = rsqrt(%497) /* ty=Tensor[(15, 6, 3), float32] */;
    (%498, %499, %500)
  };
  %501() /* ty=(Tensor[(15, 6, 3), float64], Tensor[(15, 6, 3), int32], Tensor[(15, 6, 3), float32]) */
}

def @func_5200() -> (Tensor[(15, 6, 3), int32],) {
  %504 = fn () -> (Tensor[(15, 6, 3), int32],) {
    %502 = @func_4556() /* ty=(Tensor[(15, 6, 3), int32], Tensor[(15, 6, 3), int32]) */;
    %503 = %502.0;
    (%503,)
  };
  %504() /* ty=(Tensor[(15, 6, 3), int32],) */
}

def @func_8803(%var_8801: Tensor[(3, 2, 13), float64]) -> (Tensor[(15, 6, 3), int32], Tensor[(12, 6, 4), float32], Tensor[(1, 78), float64], Tensor[(3, 2, 13), bool], Tensor[(1050), float64], Tensor[(80), float64], Tensor[(16, 48), float32], Tensor[(6, 52), uint32]) {
  @func_8800(%var_8801) /* ty=(Tensor[(15, 6, 3), int32], Tensor[(12, 6, 4), float32], Tensor[(1, 78), float64], Tensor[(3, 2, 13), bool], Tensor[(1050), float64], Tensor[(80), float64], Tensor[(16, 48), float32], Tensor[(6, 52), uint32]) */
}

def @func_4467() -> (Tensor[(15, 6, 3), float32], Tensor[(15, 6, 3), float64]) {
  @func_4465() /* ty=(Tensor[(15, 6, 3), float32], Tensor[(15, 6, 3), float64]) */
}

def @func_5712(%var_5710: Tensor[(10), int16]) -> (Tensor[(5, 2, 1), int16], int16, Tensor[(10), int16], Tensor[(15, 6, 3), float32]) {
  @func_5709(%var_5710) /* ty=(Tensor[(5, 2, 1), int16], int16, Tensor[(10), int16], Tensor[(15, 6, 3), float32]) */
}

def @func_8272() -> (Tensor[(15, 6, 3), int32],) {
  %505 = @func_5245() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %506 = %505.0;
  (%506,)
}

def @func_1024(%var_1001: Tensor[(11, 12, 13), uint64], %var_1013: Tensor[(1, 100), float64]) -> (Tensor[(11, 12, 13), uint64], Tensor[(?, 100), float64]) {
  %507 = cast(meta[relay.Constant][39] /* ty=Tensor[(11, 12, 13), uint64] */, dtype="uint64") /* ty=Tensor[(11, 12, 13), uint64] */;
  %508 = shape_of(%var_1001, dtype="int32") /* ty=Tensor[(3), int32] */;
  %509 = cast(%var_1001, dtype="uint64") /* ty=Tensor[(11, 12, 13), uint64] */;
  %510 = dyn.reshape(%507, %508, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %511 = cast(%var_1013, dtype="float64") /* ty=Tensor[(1, 100), float64] */;
  %512 = reshape(%511, newshape=[10, 5, 2]) /* ty=Tensor[(10, 5, 2), float64] */;
  %513 = @func_140(%512) /* ty=(Tensor[(10, 5, 2), float64],) */;
  %514 = %513.0;
  %515 = cast(%514, dtype="float64") /* ty=Tensor[(10, 5, 2), float64] */;
  %516 = shape_of(%var_1013, dtype="int32") /* ty=Tensor[(2), int32] */;
  %517 = cast(%var_1013, dtype="float64") /* ty=Tensor[(1, 100), float64] */;
  %518 = dyn.reshape(%515, %516, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %519 = subtract(%509, %510) /* ty=Tensor[(11, 12, 13), uint64] */;
  %520 = floor_divide(%517, %518) /* ty=Tensor[(?, 100), float64] */;
  (%519, %520)
}

def @func_31(%var_12: int16, %var_13: Tensor[(5, 2, 1), int16]) -> (Tensor[(5, 2, 1), int16], Tensor[(7, 1, 6), int64]) {
  %521 = cast(%var_12, dtype="int16") /* ty=int16 */;
  %522 = cast(%var_13, dtype="int16") /* ty=Tensor[(5, 2, 1), int16] */;
  %523 = cast(%var_12, dtype="int64") /* ty=int64 */;
  %524 = reshape(%523, newshape=[]) /* ty=int64 */;
  %525 = @func_5(%524) /* ty=(Tensor[(7, 1, 6), int64],) */;
  %526 = bitwise_and(%521, %522) /* ty=Tensor[(5, 2, 1), int16] */;
  %527 = %525.0;
  (%526, %527)
}

def @func_35(%var_33: int16, %var_34: Tensor[(5, 2, 1), int16]) -> (Tensor[(5, 2, 1), int16], Tensor[(7, 1, 6), int64]) {
  @func_31(%var_33, %var_34) /* ty=(Tensor[(5, 2, 1), int16], Tensor[(7, 1, 6), int64]) */
}

def @func_8800(%var_8764: Tensor[(3, 2, 13), float64]) -> (Tensor[(15, 6, 3), int32], Tensor[(12, 6, 4), float32], Tensor[(1, 78), float64], Tensor[(3, 2, 13), bool], Tensor[(1050), float64], Tensor[(80), float64], Tensor[(16, 48), float32], Tensor[(6, 52), uint32]) {
  %528 = @func_7035() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %529 = @func_5599() /* ty=(Tensor[(12, 6, 4), float32], Tensor[(15, 6, 3), float64]) */;
  %530 = cast(meta[relay.Constant][40] /* ty=Tensor[(1, 78), float64] */, dtype="float64") /* ty=Tensor[(1, 78), float64] */;
  %531 = reshape(%530, newshape=[3, 2, 13]) /* ty=Tensor[(3, 2, 13), float64] */;
  %532 = @func_1422(%531) /* ty=(Tensor[(3, 2, 13), float64],) */;
  %533 = %532.0;
  %534 = cast(%var_8764, dtype="bool") /* ty=Tensor[(3, 2, 13), bool] */;
  %535 = shape_of(%533, dtype="int32") /* ty=Tensor[(3), int32] */;
  %536 = cast(%533, dtype="bool") /* ty=Tensor[(3, 2, 13), bool] */;
  %537 = dyn.reshape(%534, %535, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %538 = cast(meta[relay.Constant][41] /* ty=Tensor[(80), float64] */, dtype="float64") /* ty=Tensor[(80), float64] */;
  %539 = cast(meta[relay.Constant][42] /* ty=Tensor[(16, 48), float32] */, dtype="float32") /* ty=Tensor[(16, 48), float32] */;
  %540 = cast(meta[relay.Constant][43] /* ty=Tensor[(6, 52), uint32] */, dtype="uint32") /* ty=Tensor[(6, 52), uint32] */;
  %541 = reshape(%538, newshape=[80]) /* ty=Tensor[(80), float64] */;
  %542 = reshape(%539, newshape=[768]) /* ty=Tensor[(768), float32] */;
  %543 = reshape(%540, newshape=[312]) /* ty=Tensor[(312), uint32] */;
  %544 = @func_4901(%541, %542, %543) /* ty=(Tensor[(15, 6, 3), float64], Tensor[(2, 4, 10), float64], Tensor[(80), float64], Tensor[(7, 1, 6), int64], uint8, Tensor[(546), float32], Tensor[(100, 16), float64], Tensor[(12, 8, 8), float32], Tensor[(768), float32], Tensor[(1050), float64], Tensor[(100), float64], Tensor[(3, 8, 13), uint32], Tensor[(312), uint32]) */;
  %545 = %528.0;
  %546 = %529.0;
  %547 = equal(%536, %537) /* ty=Tensor[(3, 2, 13), bool] */;
  %548 = %544.9;
  (%545, %546, meta[relay.Constant][40] /* ty=Tensor[(1, 78), float64] */, %547, %548, meta[relay.Constant][41] /* ty=Tensor[(80), float64] */, meta[relay.Constant][42] /* ty=Tensor[(16, 48), float32] */, meta[relay.Constant][43] /* ty=Tensor[(6, 52), uint32] */)
}

def @func_6865() -> (int64, Tensor[(990), float64], Tensor[(770, 3), float64], Tensor[(15, 6, 3), int32], Tensor[(2, 4, 13), float64]) {
  %549 = cast(meta[relay.Constant][44] /* ty=Tensor[(990), float64] */, dtype="float64") /* ty=Tensor[(990), float64] */;
  %550 = cast(meta[relay.Constant][45] /* ty=Tensor[(770, 3), float64] */, dtype="float64") /* ty=Tensor[(770, 3), float64] */;
  %551 = reshape(%549, newshape=[10, 11, 9]) /* ty=Tensor[(10, 11, 9), float64] */;
  %552 = reshape(%550, newshape=[2310]) /* ty=Tensor[(2310), float64] */;
  %553 = @func_813(%551, %552) /* ty=(Tensor[(10, 11, 9), float64], Tensor[(7, 1, 6), int64], int64, Tensor[(15, 14, 11), float64], Tensor[(2310), float64]) */;
  %554 = @func_6612() /* ty=(Tensor[(15, 6, 3), int32], Tensor[(11, 8, 14), float32], Tensor[(1232), float32], Tensor[(1, 100), float64], Tensor[(15, 6, 3), int32], Tensor[(3, 2, 13), float64], Tensor[(78), float64], Tensor[(2, 4, 13), float32]) */;
  %555 = @func_5217() /* ty=(Tensor[(15, 6, 3), int32], Tensor[(2, 4, 13), float32], Tensor[(104), float64]) */;
  %556 = %555.1;
  %557 = cast(%556, dtype="float64") /* ty=Tensor[(2, 4, 13), float64] */;
  %558 = erf(%557) /* ty=Tensor[(2, 4, 13), float64] */;
  %559 = cast(%558, dtype="float64") /* ty=Tensor[(2, 4, 13), float64] */;
  %560 = %553.2;
  %561 = %554.0;
  %562 = sqrt(%559) /* ty=Tensor[(2, 4, 13), float64] */;
  (%560, meta[relay.Constant][44] /* ty=Tensor[(990), float64] */, meta[relay.Constant][45] /* ty=Tensor[(770, 3), float64] */, %561, %562)
}

def @func_4854(%var_4852: Tensor[(21, 5), bool]) -> (Tensor[(15, 6, 3), float64], Tensor[(990), float64], Tensor[(2310), float64], Tensor[(21, 5), uint8]) {
  @func_4851(%var_4852) /* ty=(Tensor[(15, 6, 3), float64], Tensor[(990), float64], Tensor[(2310), float64], Tensor[(21, 5), uint8]) */
}

def @func_6404() -> (Tensor[(15, 6, 3), int32], Tensor[(15, 6, 3), int32]) {
  @func_6402() /* ty=(Tensor[(15, 6, 3), int32], Tensor[(15, 6, 3), int32]) */
}

def @func_3662(%var_3660: Tensor[(10, 9, 5), float64], %var_3661: Tensor[(50, 2), float64]) -> (Tensor[(10, 9, 5), float64], Tensor[(10, 9, 5), int32], Tensor[(10, 5, 2), float64], Tensor[(50, 2), float64]) {
  @func_3658(%var_3660, %var_3661) /* ty=(Tensor[(10, 9, 5), float64], Tensor[(10, 9, 5), int32], Tensor[(10, 5, 2), float64], Tensor[(50, 2), float64]) */
}

def @func_6073(%var_6072: Tensor[(1600), uint8]) -> (Tensor[(13, 6, 7), bool], Tensor[(15, 6, 3), int32], Tensor[(7, 1, 6), int64], uint8, Tensor[(1600), uint8]) {
  %574 = fn (%var_6069: Tensor[(1600), uint8]) -> (Tensor[(13, 6, 7), bool], Tensor[(15, 6, 3), int32], Tensor[(7, 1, 6), int64], uint8, Tensor[(1600), uint8]) {
    %563 = @func_4699() /* ty=(Tensor[(15, 6, 3), float64], Tensor[(13, 6, 7), bool], Tensor[(1, 1053), int16]) */;
    %564 = cast(meta[relay.Constant][46] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %565 = cast(%var_6069, dtype="uint8") /* ty=Tensor[(1600), uint8] */;
    %566 = %563.1;
    %567 = cast(%566, dtype="float32") /* ty=Tensor[(13, 6, 7), float32] */;
    %568 = reshape(%564, newshape=[]) /* ty=uint8 */;
    %569 = reshape(%565, newshape=[10, 16, 10]) /* ty=Tensor[(10, 16, 10), uint8] */;
    %570 = reshape(%567, newshape=[546]) /* ty=Tensor[(546), float32] */;
    %571 = @func_3071(%568, %569, %570) /* ty=(Tensor[(10, 16, 10), uint8], Tensor[(7, 1, 6), int64], Tensor[(546), float32]) */;
    %572 = @func_5768() /* ty=Tensor[(15, 6, 3), int32] */;
    %573 = %571.1;
    (%566, %572, %573, meta[relay.Constant][46] /* ty=uint8 */, %var_6069)
  };
  %574(%var_6072) /* ty=(Tensor[(13, 6, 7), bool], Tensor[(15, 6, 3), int32], Tensor[(7, 1, 6), int64], uint8, Tensor[(1600), uint8]) */
}

def @func_1028(%var_1026: Tensor[(11, 12, 13), uint64], %var_1027: Tensor[(1, 100), float64]) -> (Tensor[(11, 12, 13), uint64], Tensor[(?, 100), float64]) {
  @func_1024(%var_1026, %var_1027) /* ty=(Tensor[(11, 12, 13), uint64], Tensor[(?, 100), float64]) */
}

def @func_7818() -> (Tensor[(15, 6, 3), int32], Tensor[(15, 6, 3), bool], Tensor[(15, 6, 3), int32], Tensor[(15, 6, 3), int32]) {
  %575 = @func_6037() /* ty=(Tensor[(15, 6, 3), bool],) */;
  %576 = @func_6402() /* ty=(Tensor[(15, 6, 3), int32], Tensor[(15, 6, 3), int32]) */;
  %577 = @func_6927() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %578 = @func_7532() /* ty=Tensor[(15, 6, 3), int32] */;
  %579 = %575.0;
  %580 = %576.0;
  %581 = %577.0;
  (%578, %579, %580, %581)
}

def @func_4774(%var_4708: Tensor[(1050), float64], %var_4736: Tensor[(14, 15, 5), float64], %var_4764: Tensor[(1050), float64]) -> (Tensor[(15, 6, 3), int32], Tensor[(1050), uint8], Tensor[(14, 15, 5), bool], Tensor[(2310), float64], Tensor[(2, 200), float64], Tensor[(990), float64], Tensor[(1050), bool]) {
  %582 = @func_4360() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %583 = cast(%var_4708, dtype="float64") /* ty=Tensor[(1050), float64] */;
  %584 = reshape(%583, newshape=[14, 15, 5]) /* ty=Tensor[(14, 15, 5), float64] */;
  %585 = @func_1666(%584) /* ty=Tensor[(14, 15, 5), float64] */;
  %586 = cast(%585, dtype="uint8") /* ty=Tensor[(14, 15, 5), uint8] */;
  %587 = shape_of(%var_4708, dtype="int32") /* ty=Tensor[(1), int32] */;
  %588 = cast(%var_4708, dtype="uint8") /* ty=Tensor[(1050), uint8] */;
  %589 = dyn.reshape(%586, %587, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %590 = cast(%var_4736, dtype="bool") /* ty=Tensor[(14, 15, 5), bool] */;
  %591 = shape_of(%585, dtype="int32") /* ty=Tensor[(3), int32] */;
  %592 = cast(%585, dtype="bool") /* ty=Tensor[(14, 15, 5), bool] */;
  %593 = dyn.reshape(%590, %591, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %594 = cast(meta[relay.Constant][47] /* ty=Tensor[(2, 200), float64] */, dtype="float64") /* ty=Tensor[(2, 200), float64] */;
  %595 = cast(meta[relay.Constant][48] /* ty=Tensor[(990), float64] */, dtype="float64") /* ty=Tensor[(990), float64] */;
  %596 = reshape(%594, newshape=[400]) /* ty=Tensor[(400), float64] */;
  %597 = reshape(%595, newshape=[990]) /* ty=Tensor[(990), float64] */;
  %598 = @func_4332(%596, %597) /* ty=(Tensor[(15, 6, 3), int32], Tensor[(2310), float64], Tensor[(400), float64], Tensor[(2310), float64], Tensor[(990), bool], Tensor[(3, 2, 13), float64], Tensor[(78), float64], Tensor[(15, 14, 11), float64]) */;
  %599 = cast(%var_4764, dtype="bool") /* ty=Tensor[(1050), bool] */;
  %600 = shape_of(%var_4708, dtype="int32") /* ty=Tensor[(1), int32] */;
  %601 = cast(%var_4708, dtype="bool") /* ty=Tensor[(1050), bool] */;
  %602 = dyn.reshape(%599, %600, newshape=[]) /* ty=Tensor[(?), bool] */;
  %603 = %582.0;
  %604 = left_shift(%588, %589) /* ty=Tensor[(1050), uint8] */;
  %605 = equal(%592, %593) /* ty=Tensor[(14, 15, 5), bool] */;
  %606 = %598.1;
  %607 = greater(%601, %602) /* ty=Tensor[(1050), bool] */;
  (%603, %604, %605, %606, meta[relay.Constant][47] /* ty=Tensor[(2, 200), float64] */, meta[relay.Constant][48] /* ty=Tensor[(990), float64] */, %607)
}

def @func_358(%var_356: Tensor[(15, 14, 11), float64]) -> Tensor[(15, 14, 11), float64] {
  @func_355(%var_356) /* ty=Tensor[(15, 14, 11), float64] */
}

def @func_6927() -> (Tensor[(15, 6, 3), int32],) {
  %608 = @func_6700() /* ty=(Tensor[(15, 6, 3), float64], Tensor[(15, 6, 3), int32], Tensor[(15, 6, 3), float32]) */;
  %609 = %608.1;
  (%609,)
}

def @func_5600() -> (Tensor[(12, 6, 4), float32], Tensor[(15, 6, 3), float64]) {
  %615 = fn () -> (Tensor[(12, 6, 4), float32], Tensor[(15, 6, 3), float64]) {
    %610 = cast(-5.44061f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %611 = cast(meta[relay.Constant][49] /* ty=Tensor[(12, 6, 4), float32] */, dtype="float32") /* ty=Tensor[(12, 6, 4), float32] */;
    %612 = @func_4465() /* ty=(Tensor[(15, 6, 3), float32], Tensor[(15, 6, 3), float64]) */;
    %613 = divide(%610, %611) /* ty=Tensor[(12, 6, 4), float32] */;
    %614 = %612.1;
    (%613, %614)
  };
  %615() /* ty=(Tensor[(12, 6, 4), float32], Tensor[(15, 6, 3), float64]) */
}

def @func_1747(%var_1735: Tensor[(13, 6, 7), float32]) -> (Tensor[(13, 6, 7), bool], Tensor[(7, 1, 6), int64], Tensor[(990), float64], Tensor[(2310), float64]) {
  %616 = cast(%var_1735, dtype="bool") /* ty=Tensor[(13, 6, 7), bool] */;
  %617 = shape_of(meta[relay.Constant][50] /* ty=Tensor[(13, 6, 7), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %618 = cast(meta[relay.Constant][50] /* ty=Tensor[(13, 6, 7), float32] */, dtype="bool") /* ty=Tensor[(13, 6, 7), bool] */;
  %619 = dyn.reshape(%616, %617, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %620 = cast(meta[relay.Constant][51] /* ty=Tensor[(990), float64] */, dtype="float64") /* ty=Tensor[(990), float64] */;
  %621 = cast(meta[relay.Constant][52] /* ty=Tensor[(2310), float64] */, dtype="float64") /* ty=Tensor[(2310), float64] */;
  %622 = reshape(%620, newshape=[10, 11, 9]) /* ty=Tensor[(10, 11, 9), float64] */;
  %623 = reshape(%621, newshape=[2310]) /* ty=Tensor[(2310), float64] */;
  %624 = @func_813(%622, %623) /* ty=(Tensor[(10, 11, 9), float64], Tensor[(7, 1, 6), int64], int64, Tensor[(15, 14, 11), float64], Tensor[(2310), float64]) */;
  %625 = less(%618, %619) /* ty=Tensor[(13, 6, 7), bool] */;
  %626 = %624.1;
  (%625, %626, meta[relay.Constant][51] /* ty=Tensor[(990), float64] */, meta[relay.Constant][52] /* ty=Tensor[(2310), float64] */)
}

def @func_6357() -> (Tensor[(15, 6, 3), int32], Tensor[(2, 4, 13), float32], Tensor[(15, 6, 3), int32], Tensor[(8, 1053), bool]) {
  %627 = @func_4427() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %628 = @func_5433() /* ty=(Tensor[(15, 6, 3), int32], Tensor[(2, 4, 13), float32], Tensor[(104), float64]) */;
  %629 = @func_5856() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %630 = @func_5645() /* ty=Tensor[(1, 1053), int16] */;
  %631 = cast(%630, dtype="float32") /* ty=Tensor[(1, 1053), float32] */;
  %632 = cast(meta[relay.Constant][53] /* ty=Tensor[(8, 1053), int16] */, dtype="float32") /* ty=Tensor[(8, 1053), float32] */;
  %633 = subtract(%631, %632) /* ty=Tensor[(8, 1053), float32] */;
  %634 = cast(%630, dtype="float64") /* ty=Tensor[(1, 1053), float64] */;
  %635 = cast(meta[relay.Constant][53] /* ty=Tensor[(8, 1053), int16] */, dtype="float64") /* ty=Tensor[(8, 1053), float64] */;
  %636 = floor_mod(%634, %635) /* ty=Tensor[(8, 1053), float64] */;
  %637 = cast(%636, dtype="bool") /* ty=Tensor[(8, 1053), bool] */;
  %638 = shape_of(%633, dtype="int32") /* ty=Tensor[(2), int32] */;
  %639 = cast(%633, dtype="bool") /* ty=Tensor[(8, 1053), bool] */;
  %640 = dyn.reshape(%637, %638, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %641 = %627.0;
  %642 = %628.1;
  %643 = %629.0;
  %644 = equal(%639, %640) /* ty=Tensor[(8, 1053), bool] */;
  (%641, %642, %643, %644)
}

def @func_8693(%var_8692: Tensor[(25, 4), float64]) -> (Tensor[(13, 6, 7), bool], Tensor[(3, 8, 13), uint32], Tensor[(1232), float32], Tensor[(25, 4), float64]) {
  %653 = fn (%var_8680: Tensor[(25, 4), float64]) -> (Tensor[(13, 6, 7), bool], Tensor[(3, 8, 13), uint32], Tensor[(1232), float32], Tensor[(25, 4), float64]) {
    %645 = @func_7856() /* ty=(Tensor[(13, 6, 7), bool],) */;
    %646 = cast(meta[relay.Constant][54] /* ty=Tensor[(1232), float32] */, dtype="float32") /* ty=Tensor[(1232), float32] */;
    %647 = cast(%var_8680, dtype="float64") /* ty=Tensor[(25, 4), float64] */;
    %648 = reshape(%646, newshape=[11, 8, 14]) /* ty=Tensor[(11, 8, 14), float32] */;
    %649 = reshape(%647, newshape=[100]) /* ty=Tensor[(100), float64] */;
    %650 = @func_3152(%648, %649) /* ty=(Tensor[(?, 100), float64], Tensor[(1716), uint64], Tensor[(100), float64], Tensor[(3, 8, 13), uint32], Tensor[(312), uint32], Tensor[(11, 8, 14), float32]) */;
    %651 = %645.0;
    %652 = %650.3;
    (%651, %652, meta[relay.Constant][54] /* ty=Tensor[(1232), float32] */, %var_8680)
  };
  %653(%var_8692) /* ty=(Tensor[(13, 6, 7), bool], Tensor[(3, 8, 13), uint32], Tensor[(1232), float32], Tensor[(25, 4), float64]) */
}

def @func_4465() -> (Tensor[(15, 6, 3), float32], Tensor[(15, 6, 3), float64]) {
  %654 = @func_4052() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %655 = %654.0;
  %656 = cast(%655, dtype="float32") /* ty=Tensor[(15, 6, 3), float32] */;
  %657 = @func_4052() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %658 = %657.0;
  %659 = cast(%655, dtype="float64") /* ty=Tensor[(15, 6, 3), float64] */;
  %660 = shape_of(%658, dtype="int32") /* ty=Tensor[(3), int32] */;
  %661 = cast(%658, dtype="float64") /* ty=Tensor[(15, 6, 3), float64] */;
  %662 = dyn.reshape(%659, %660, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %663 = cos(%656) /* ty=Tensor[(15, 6, 3), float32] */;
  %664 = divide(%661, %662) /* ty=Tensor[(15, 6, 3), float64] */;
  (%663, %664)
}

def @func_4332(%var_4274: Tensor[(400), float64], %var_4306: Tensor[(990), float64]) -> (Tensor[(15, 6, 3), int32], Tensor[(2310), float64], Tensor[(400), float64], Tensor[(2310), float64], Tensor[(990), bool], Tensor[(3, 2, 13), float64], Tensor[(78), float64], Tensor[(15, 14, 11), float64]) {
  %665 = cast(%var_4274, dtype="float64") /* ty=Tensor[(400), float64] */;
  %666 = cast(%var_4274, dtype="float64") /* ty=Tensor[(400), float64] */;
  %667 = cast(meta[relay.Constant][55] /* ty=Tensor[(2310), float64] */, dtype="float64") /* ty=Tensor[(2310), float64] */;
  %668 = reshape(%665, newshape=[10, 5, 8]) /* ty=Tensor[(10, 5, 8), float64] */;
  %669 = reshape(%666, newshape=[10, 5, 8]) /* ty=Tensor[(10, 5, 8), float64] */;
  %670 = reshape(%667, newshape=[2310]) /* ty=Tensor[(2310), float64] */;
  %671 = @func_1801(%668, %669, %670) /* ty=(Tensor[(10, 5, 8), float64], Tensor[(15, 14, 11), float64], Tensor[(2310), float64], Tensor[(10, 5, 8), float32]) */;
  %672 = cast(%var_4306, dtype="bool") /* ty=Tensor[(990), bool] */;
  %673 = shape_of(meta[relay.Constant][56] /* ty=Tensor[(990), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %674 = cast(meta[relay.Constant][56] /* ty=Tensor[(990), float64] */, dtype="bool") /* ty=Tensor[(990), bool] */;
  %675 = dyn.reshape(%672, %673, newshape=[]) /* ty=Tensor[(?), bool] */;
  %676 = cast(meta[relay.Constant][57] /* ty=Tensor[(78), float64] */, dtype="float64") /* ty=Tensor[(78), float64] */;
  %677 = reshape(%676, newshape=[3, 2, 13]) /* ty=Tensor[(3, 2, 13), float64] */;
  %678 = @func_1422(%677) /* ty=(Tensor[(3, 2, 13), float64],) */;
  %679 = cast(meta[relay.Constant][56] /* ty=Tensor[(990), float64] */, dtype="float64") /* ty=Tensor[(990), float64] */;
  %680 = %671.2;
  %681 = cast(%680, dtype="float64") /* ty=Tensor[(2310), float64] */;
  %682 = reshape(%679, newshape=[10, 11, 9]) /* ty=Tensor[(10, 11, 9), float64] */;
  %683 = reshape(%681, newshape=[2310]) /* ty=Tensor[(2310), float64] */;
  %684 = @func_813(%682, %683) /* ty=(Tensor[(10, 11, 9), float64], Tensor[(7, 1, 6), int64], int64, Tensor[(15, 14, 11), float64], Tensor[(2310), float64]) */;
  %685 = %684.3;
  %686 = cast(%685, dtype="float64") /* ty=Tensor[(15, 14, 11), float64] */;
  %687 = @func_4139() /* ty=Tensor[(15, 6, 3), int32] */;
  %688 = greater_equal(%674, %675) /* ty=Tensor[(990), bool] */;
  %689 = %678.0;
  %690 = atan(%686) /* ty=Tensor[(15, 14, 11), float64] */;
  (%687, %680, %var_4274, meta[relay.Constant][55] /* ty=Tensor[(2310), float64] */, %688, %689, meta[relay.Constant][57] /* ty=Tensor[(78), float64] */, %690)
}

def @func_5023(%var_5021: Tensor[(2310), float64]) -> (Tensor[(15, 6, 3), int32], Tensor[(10, 5, 8), float32], Tensor[(2, 200), float64], Tensor[(2310), float64]) {
  @func_5020(%var_5021) /* ty=(Tensor[(15, 6, 3), int32], Tensor[(10, 5, 8), float32], Tensor[(2, 200), float64], Tensor[(2310), float64]) */
}

def @func_1107(%var_1105: int32, %var_1106: Tensor[(10, 4, 5), int32]) -> Tensor[(10, 4, 5), bool] {
  @func_1103(%var_1105, %var_1106) /* ty=Tensor[(10, 4, 5), bool] */
}

def @func_6539() -> Tensor[(15, 6, 3), int32] {
  %692 = fn () -> Tensor[(15, 6, 3), int32] {
    %691 = @func_4052() /* ty=(Tensor[(15, 6, 3), int32],) */;
    %691.0
  };
  %692() /* ty=Tensor[(15, 6, 3), int32] */
}

def @func_1750(%var_1748: Tensor[(13, 6, 7), float32]) -> (Tensor[(13, 6, 7), bool], Tensor[(7, 1, 6), int64], Tensor[(990), float64], Tensor[(2310), float64]) {
  @func_1747(%var_1748) /* ty=(Tensor[(13, 6, 7), bool], Tensor[(7, 1, 6), int64], Tensor[(990), float64], Tensor[(2310), float64]) */
}

def @func_6967() -> (Tensor[(15, 6, 3), bool], Tensor[(15, 6, 3), float64], Tensor[(15, 6, 3), int32]) {
  %699 = fn () -> (Tensor[(15, 6, 3), bool], Tensor[(15, 6, 3), float64], Tensor[(15, 6, 3), int32]) {
    %693 = @func_6037() /* ty=(Tensor[(15, 6, 3), bool],) */;
    %694 = @func_4512() /* ty=(Tensor[(15, 6, 3), float64],) */;
    %695 = @func_5199() /* ty=(Tensor[(15, 6, 3), int32],) */;
    %696 = %693.0;
    %697 = %694.0;
    %698 = %695.0;
    (%696, %697, %698)
  };
  %699() /* ty=(Tensor[(15, 6, 3), bool], Tensor[(15, 6, 3), float64], Tensor[(15, 6, 3), int32]) */
}

def @func_8094() -> (Tensor[(104), float32], Tensor[(15, 6, 3), uint8]) {
  @func_8092() /* ty=(Tensor[(104), float32], Tensor[(15, 6, 3), uint8]) */
}

def @func_3071(%var_3052: uint8, %var_3053: Tensor[(10, 16, 10), uint8], %var_3068: Tensor[(546), float32]) -> (Tensor[(10, 16, 10), uint8], Tensor[(7, 1, 6), int64], Tensor[(546), float32]) {
  %700 = cast(%var_3052, dtype="uint8") /* ty=uint8 */;
  %701 = cast(%var_3053, dtype="uint8") /* ty=Tensor[(10, 16, 10), uint8] */;
  %702 = cast(%var_3068, dtype="float32") /* ty=Tensor[(546), float32] */;
  %703 = reshape(%702, newshape=[13, 6, 7]) /* ty=Tensor[(13, 6, 7), float32] */;
  %704 = @func_1747(%703) /* ty=(Tensor[(13, 6, 7), bool], Tensor[(7, 1, 6), int64], Tensor[(990), float64], Tensor[(2310), float64]) */;
  %705 = minimum(%700, %701) /* ty=Tensor[(10, 16, 10), uint8] */;
  %706 = %704.1;
  (%705, %706, %var_3068)
}

def @func_7632(%var_7591: Tensor[(10, 3, 3), float32], %var_7610: Tensor[(10, 3, 3), float32]) -> (Tensor[(10, 3, 3), float64], Tensor[(7, 1, 6), int64], int16, Tensor[(10), int16], Tensor[(10, 3, 3), bool]) {
  %707 = cast(%var_7591, dtype="float32") /* ty=Tensor[(10, 3, 3), float32] */;
  %708 = sin(%707) /* ty=Tensor[(10, 3, 3), float32] */;
  %709 = cast(%var_7610, dtype="float64") /* ty=Tensor[(10, 3, 3), float64] */;
  %710 = shape_of(%708, dtype="int32") /* ty=Tensor[(3), int32] */;
  %711 = cast(%708, dtype="float64") /* ty=Tensor[(10, 3, 3), float64] */;
  %712 = dyn.reshape(%709, %710, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %713 = cast(meta[relay.Constant][58] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %714 = cast(meta[relay.Constant][59] /* ty=Tensor[(10), int16] */, dtype="int16") /* ty=Tensor[(10), int16] */;
  %715 = reshape(%713, newshape=[]) /* ty=int16 */;
  %716 = reshape(%714, newshape=[5, 2, 1]) /* ty=Tensor[(5, 2, 1), int16] */;
  %717 = @func_31(%715, %716) /* ty=(Tensor[(5, 2, 1), int16], Tensor[(7, 1, 6), int64]) */;
  %718 = cast(meta[relay.Constant][60] /* ty=Tensor[(10, 3, 3), float32] */, dtype="bool") /* ty=Tensor[(10, 3, 3), bool] */;
  %719 = shape_of(%var_7591, dtype="int32") /* ty=Tensor[(3), int32] */;
  %720 = cast(%var_7591, dtype="bool") /* ty=Tensor[(10, 3, 3), bool] */;
  %721 = dyn.reshape(%718, %719, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %722 = add(%711, %712) /* ty=Tensor[(10, 3, 3), float64] */;
  %723 = %717.1;
  %724 = logical_and(%720, %721) /* ty=Tensor[(10, 3, 3), bool] */;
  (%722, %723, meta[relay.Constant][58] /* ty=int16 */, meta[relay.Constant][59] /* ty=Tensor[(10), int16] */, %724)
}

def @func_5996(%var_5995: Tensor[(10), int16]) -> (Tensor[(1, 1053), float32], int16, Tensor[(10), int16], Tensor[(13, 6, 7), bool]) {
  %738 = fn (%var_5978: Tensor[(10), int16]) -> (Tensor[(1, 1053), float32], int16, Tensor[(10), int16], Tensor[(13, 6, 7), bool]) {
    %725 = @func_5751() /* ty=Tensor[(1, 1053), int16] */;
    %726 = cast(%725, dtype="float32") /* ty=Tensor[(1, 1053), float32] */;
    %727 = cast(%var_5978, dtype="int16") /* ty=Tensor[(10), int16] */;
    %728 = reshape(%727, newshape=[10]) /* ty=Tensor[(10), int16] */;
    %729 = @func_5709(%728) /* ty=(Tensor[(5, 2, 1), int16], int16, Tensor[(10), int16], Tensor[(15, 6, 3), float32]) */;
    %730 = cast(%725, dtype="int16") /* ty=Tensor[(1, 1053), int16] */;
    %731 = sinh(%726) /* ty=Tensor[(1, 1053), float32] */;
    %732 = cast(%731, dtype="int16") /* ty=Tensor[(1, 1053), int16] */;
    %733 = reshape(%730, newshape=[9, 13, 9]) /* ty=Tensor[(9, 13, 9), int16] */;
    %734 = reshape(%732, newshape=[9, 13, 9]) /* ty=Tensor[(9, 13, 9), int16] */;
    %735 = @func_3867(%733, %734) /* ty=(Tensor[(13, 6, 7), bool], Tensor[(546), float32], Tensor[(9, 13, 9), uint8]) */;
    %736 = %729.1;
    %737 = %735.0;
    (%731, %736, %var_5978, %737)
  };
  %738(%var_5995) /* ty=(Tensor[(1, 1053), float32], int16, Tensor[(10), int16], Tensor[(13, 6, 7), bool]) */
}

def @func_5961(%var_5923: Tensor[(13, 1053), int16], %var_5948: Tensor[(990), float64]) -> (Tensor[(13, 1053), bool], Tensor[(?, 1053), float64], Tensor[(15, 6, 3), int32], Tensor[(990), float64], Tensor[(13, 1053), float32]) {
  %739 = @func_5645() /* ty=Tensor[(1, 1053), int16] */;
  %740 = cast(%739, dtype="bool") /* ty=Tensor[(1, 1053), bool] */;
  %741 = cast(%var_5923, dtype="bool") /* ty=Tensor[(13, 1053), bool] */;
  %742 = cast(%739, dtype="float64") /* ty=Tensor[(1, 1053), float64] */;
  %743 = sigmoid(%742) /* ty=Tensor[(1, 1053), float64] */;
  %744 = cast(%739, dtype="float64") /* ty=Tensor[(1, 1053), float64] */;
  %745 = shape_of(%743, dtype="int32") /* ty=Tensor[(2), int32] */;
  %746 = cast(%743, dtype="float64") /* ty=Tensor[(1, 1053), float64] */;
  %747 = dyn.reshape(%744, %745, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %748 = cast(%var_5948, dtype="float64") /* ty=Tensor[(990), float64] */;
  %749 = reshape(%748, newshape=[990]) /* ty=Tensor[(990), float64] */;
  %750 = @func_5569(%749) /* ty=(Tensor[(15, 6, 3), int32], Tensor[(400), float64], Tensor[(990), float64], Tensor[(15, 6, 3), float32]) */;
  %751 = cast(%743, dtype="float32") /* ty=Tensor[(1, 1053), float32] */;
  %752 = cast(%var_5923, dtype="float32") /* ty=Tensor[(13, 1053), float32] */;
  %753 = not_equal(%740, %741) /* ty=Tensor[(13, 1053), bool] */;
  %754 = multiply(%746, %747) /* ty=Tensor[(?, 1053), float64] */;
  %755 = %750.0;
  %756 = floor_divide(%751, %752) /* ty=Tensor[(13, 1053), float32] */;
  (%753, %754, %755, %var_5948, %756)
}

def @func_7437() -> (Tensor[(15, 6, 3), int32],) {
  %759 = fn () -> (Tensor[(15, 6, 3), int32],) {
    %757 = @func_4052() /* ty=(Tensor[(15, 6, 3), int32],) */;
    %758 = %757.0;
    (%758,)
  };
  %759() /* ty=(Tensor[(15, 6, 3), int32],) */
}

def @func_7953(%var_7951: Tensor[(80), float64]) -> (Tensor[(15, 6, 3), int32], Tensor[(990), float64], Tensor[(312), uint32], Tensor[(80), float64], Tensor[(768), float32], Tensor[(312), uint32]) {
  @func_7950(%var_7951) /* ty=(Tensor[(15, 6, 3), int32], Tensor[(990), float64], Tensor[(312), uint32], Tensor[(80), float64], Tensor[(768), float32], Tensor[(312), uint32]) */
}

def @func_4362() -> (Tensor[(15, 6, 3), int32],) {
  @func_4360() /* ty=(Tensor[(15, 6, 3), int32],) */
}

def @func_6423() -> (Tensor[(104), float64],) {
  @func_6421() /* ty=(Tensor[(104), float64],) */
}

def @func_355(%var_348: Tensor[(15, 14, 11), float64]) -> Tensor[(15, 14, 11), float64] {
  %760 = cast(%var_348, dtype="float64") /* ty=Tensor[(15, 14, 11), float64] */;
  erf(%760) /* ty=Tensor[(15, 14, 11), float64] */
}

def @func_5246() -> (Tensor[(15, 6, 3), int32],) {
  %763 = fn () -> (Tensor[(15, 6, 3), int32],) {
    %761 = @func_4427() /* ty=(Tensor[(15, 6, 3), int32],) */;
    %762 = %761.0;
    (%762,)
  };
  %763() /* ty=(Tensor[(15, 6, 3), int32],) */
}

def @func_4980(%var_4978: Tensor[(10, 8, 8), bool], %var_4979: Tensor[(10, 8, 8), bool]) -> Tensor[(10, 8, 8), uint32] {
  @func_4976(%var_4978, %var_4979) /* ty=Tensor[(10, 8, 8), uint32] */
}

def @func_8067(%var_8065: Tensor[(5, 150), float64], %var_8066: Tensor[(5, 150), float64]) -> (Tensor[(15, 6, 3), float32], Tensor[(10, 5, 2), float64], Tensor[(5, 10), float32], Tensor[(100), float64], Tensor[(5, 150), bool]) {
  @func_8063(%var_8065, %var_8066) /* ty=(Tensor[(15, 6, 3), float32], Tensor[(10, 5, 2), float64], Tensor[(5, 10), float32], Tensor[(100), float64], Tensor[(5, 150), bool]) */
}

def @func_7636(%var_7634: Tensor[(10, 3, 3), float32], %var_7635: Tensor[(10, 3, 3), float32]) -> (Tensor[(10, 3, 3), float64], Tensor[(7, 1, 6), int64], int16, Tensor[(10), int16], Tensor[(10, 3, 3), bool]) {
  @func_7632(%var_7634, %var_7635) /* ty=(Tensor[(10, 3, 3), float64], Tensor[(7, 1, 6), int64], int16, Tensor[(10), int16], Tensor[(10, 3, 3), bool]) */
}

def @func_8063(%var_8037: Tensor[(5, 150), float64], %var_8043: Tensor[(5, 150), float64]) -> (Tensor[(15, 6, 3), float32], Tensor[(10, 5, 2), float64], Tensor[(5, 10), float32], Tensor[(100), float64], Tensor[(5, 150), bool]) {
  %764 = @func_4465() /* ty=(Tensor[(15, 6, 3), float32], Tensor[(15, 6, 3), float64]) */;
  %765 = cast(meta[relay.Constant][61] /* ty=Tensor[(5, 10), float32] */, dtype="float32") /* ty=Tensor[(5, 10), float32] */;
  %766 = cast(%var_8037, dtype="float64") /* ty=Tensor[(5, 150), float64] */;
  %767 = cast(meta[relay.Constant][62] /* ty=Tensor[(100), float64] */, dtype="float64") /* ty=Tensor[(100), float64] */;
  %768 = reshape(%765, newshape=[10, 5, 1]) /* ty=Tensor[(10, 5, 1), float32] */;
  %769 = reshape(%766, newshape=[10, 5, 15]) /* ty=Tensor[(10, 5, 15), float64] */;
  %770 = reshape(%767, newshape=[100]) /* ty=Tensor[(100), float64] */;
  %771 = @func_2200(%768, %769, %770) /* ty=(Tensor[(10, 5, 15), bool], Tensor[(10, 5, 15), float32], Tensor[(10, 5, 2), float64], Tensor[(100), float64], Tensor[(9, 8, 10), bool], Tensor[(720), int32], Tensor[(1716), uint64], Tensor[(9, 8, 10), bool], Tensor[(10, 5, 1), float32], Tensor[(10, 5, ?), uint8]) */;
  %772 = cast(%var_8043, dtype="bool") /* ty=Tensor[(5, 150), bool] */;
  %773 = shape_of(%var_8037, dtype="int32") /* ty=Tensor[(2), int32] */;
  %774 = cast(%var_8037, dtype="bool") /* ty=Tensor[(5, 150), bool] */;
  %775 = dyn.reshape(%772, %773, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %776 = %764.0;
  %777 = %771.2;
  %778 = logical_or(%774, %775) /* ty=Tensor[(5, 150), bool] */;
  (%776, %777, meta[relay.Constant][61] /* ty=Tensor[(5, 10), float32] */, meta[relay.Constant][62] /* ty=Tensor[(100), float64] */, %778)
}

def @func_8340() -> (Tensor[(15, 6, 3), int32],) {
  @func_8338() /* ty=(Tensor[(15, 6, 3), int32],) */
}

def @func_7547() -> Tensor[(8, 1053), bool] {
  %780 = fn () -> Tensor[(8, 1053), bool] {
    %779 = @func_6357() /* ty=(Tensor[(15, 6, 3), int32], Tensor[(2, 4, 13), float32], Tensor[(15, 6, 3), int32], Tensor[(8, 1053), bool]) */;
    %779.3
  };
  %780() /* ty=Tensor[(8, 1053), bool] */
}

def @func_5488() -> Tensor[(15, 6, 3), int32] {
  %782 = fn () -> Tensor[(15, 6, 3), int32] {
    %781 = @func_4556() /* ty=(Tensor[(15, 6, 3), int32], Tensor[(15, 6, 3), int32]) */;
    %781.0
  };
  %782() /* ty=Tensor[(15, 6, 3), int32] */
}

def @func_3826(%var_3823: Tensor[(15, 1, 7), bool], %var_3824: Tensor[(15, 1, 7), bool], %var_3825: Tensor[(2310), float64]) -> (Tensor[(15, ?, 7), bool], Tensor[(2310), float64], Tensor[(990), float64], Tensor[(2310), float64]) {
  %794 = fn (%var_3768: Tensor[(15, 1, 7), bool], %var_3769: Tensor[(15, 1, 7), bool], %var_3806: Tensor[(2310), float64]) -> (Tensor[(15, ?, 7), bool], Tensor[(2310), float64], Tensor[(990), float64], Tensor[(2310), float64]) {
    %783 = cast(%var_3769, dtype="bool") /* ty=Tensor[(15, 1, 7), bool] */;
    %784 = shape_of(%var_3768, dtype="int32") /* ty=Tensor[(3), int32] */;
    %785 = cast(%var_3768, dtype="bool") /* ty=Tensor[(15, 1, 7), bool] */;
    %786 = dyn.reshape(%783, %784, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %787 = cast(meta[relay.Constant][63] /* ty=Tensor[(990), float64] */, dtype="float64") /* ty=Tensor[(990), float64] */;
    %788 = cast(%var_3806, dtype="float64") /* ty=Tensor[(2310), float64] */;
    %789 = reshape(%787, newshape=[10, 11, 9]) /* ty=Tensor[(10, 11, 9), float64] */;
    %790 = reshape(%788, newshape=[2310]) /* ty=Tensor[(2310), float64] */;
    %791 = @func_813(%789, %790) /* ty=(Tensor[(10, 11, 9), float64], Tensor[(7, 1, 6), int64], int64, Tensor[(15, 14, 11), float64], Tensor[(2310), float64]) */;
    %792 = logical_or(%785, %786) /* ty=Tensor[(15, ?, 7), bool] */;
    %793 = %791.4;
    (%792, %793, meta[relay.Constant][63] /* ty=Tensor[(990), float64] */, %var_3806)
  };
  %794(%var_3823, %var_3824, %var_3825) /* ty=(Tensor[(15, ?, 7), bool], Tensor[(2310), float64], Tensor[(990), float64], Tensor[(2310), float64]) */
}

def @func_8207() -> (Tensor[(15, 1053), float64], Tensor[(7, 1, 6), int64], int64, Tensor[(1, 1053), float32]) {
  %795 = @func_5645() /* ty=Tensor[(1, 1053), int16] */;
  %796 = cast(%795, dtype="float64") /* ty=Tensor[(1, 1053), float64] */;
  %797 = cast(meta[relay.Constant][64] /* ty=Tensor[(15, 1053), int16] */, dtype="float64") /* ty=Tensor[(15, 1053), float64] */;
  %798 = cast(4 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %799 = reshape(%798, newshape=[]) /* ty=int64 */;
  %800 = @func_5(%799) /* ty=(Tensor[(7, 1, 6), int64],) */;
  %801 = cast(%795, dtype="float32") /* ty=Tensor[(1, 1053), float32] */;
  %802 = power(%796, %797) /* ty=Tensor[(15, 1053), float64] */;
  %803 = %800.0;
  %804 = log2(%801) /* ty=Tensor[(1, 1053), float32] */;
  (%802, %803, 4 /* ty=int64 */, %804)
}

def @func_5435() -> (Tensor[(15, 6, 3), int32], Tensor[(2, 4, 13), float32], Tensor[(104), float64]) {
  @func_5433() /* ty=(Tensor[(15, 6, 3), int32], Tensor[(2, 4, 13), float32], Tensor[(104), float64]) */
}

def @func_7090() -> Tensor[(15, 6, 3), int32] {
  @func_7088() /* ty=Tensor[(15, 6, 3), int32] */
}

def @func_6038() -> (Tensor[(15, 6, 3), bool],) {
  %812 = fn () -> (Tensor[(15, 6, 3), bool],) {
    %805 = @func_5217() /* ty=(Tensor[(15, 6, 3), int32], Tensor[(2, 4, 13), float32], Tensor[(104), float64]) */;
    %806 = %805.0;
    %807 = cast(meta[relay.Constant][65] /* ty=Tensor[(15, 6, 3), int32] */, dtype="bool") /* ty=Tensor[(15, 6, 3), bool] */;
    %808 = shape_of(%806, dtype="int32") /* ty=Tensor[(3), int32] */;
    %809 = cast(%806, dtype="bool") /* ty=Tensor[(15, 6, 3), bool] */;
    %810 = dyn.reshape(%807, %808, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %811 = less(%809, %810) /* ty=Tensor[(15, 6, 3), bool] */;
    (%811,)
  };
  %812() /* ty=(Tensor[(15, 6, 3), bool],) */
}

def @func_1668(%var_1667: Tensor[(14, 15, 5), float64]) -> Tensor[(14, 15, 5), float64] {
  %814 = fn (%var_1663: Tensor[(14, 15, 5), float64]) -> Tensor[(14, 15, 5), float64] {
    %813 = cast(%var_1663, dtype="float64") /* ty=Tensor[(14, 15, 5), float64] */;
    rsqrt(%813) /* ty=Tensor[(14, 15, 5), float64] */
  };
  %814(%var_1667) /* ty=Tensor[(14, 15, 5), float64] */
}

def @func_4556() -> (Tensor[(15, 6, 3), int32], Tensor[(15, 6, 3), int32]) {
  %815 = @func_4360() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %816 = @func_4019() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %817 = %815.0;
  %818 = %816.0;
  (%817, %818)
}

def @func_5858() -> (Tensor[(15, 6, 3), int32],) {
  @func_5856() /* ty=(Tensor[(15, 6, 3), int32],) */
}

def @func_5149(%var_5145: Tensor[(15, 6, 3), int32], %var_5146: Tensor[(990, 1), float64], %var_5147: Tensor[(990, 4), float64], %var_5148: uint8) -> (Tensor[(15, 6, 3), bool], Tensor[(2, 4, 13), float32], Tensor[(104), float64], Tensor[(2310), float64], Tensor[(2310), float64], Tensor[(990, 4), float32], Tensor[(10, 16, 10), uint8], uint8, Tensor[(1600), uint8], Tensor[(546), float32], Tensor[(10, 8, 8), uint32], Tensor[(640), bool], Tensor[(990, ?), bool], Tensor[(990, 4), float32]) {
  %864 = fn (%var_5069: Tensor[(15, 6, 3), int32], %var_5079: Tensor[(990, 1), float64], %var_5090: Tensor[(990, 4), float64], %var_5095: uint8) -> (Tensor[(15, 6, 3), bool], Tensor[(2, 4, 13), float32], Tensor[(104), float64], Tensor[(2310), float64], Tensor[(2310), float64], Tensor[(990, 4), float32], Tensor[(10, 16, 10), uint8], uint8, Tensor[(1600), uint8], Tensor[(546), float32], Tensor[(10, 8, 8), uint32], Tensor[(640), bool], Tensor[(990, ?), bool], Tensor[(990, 4), float32]) {
    %819 = @func_4052() /* ty=(Tensor[(15, 6, 3), int32],) */;
    %820 = %819.0;
    %821 = cast(%var_5069, dtype="bool") /* ty=Tensor[(15, 6, 3), bool] */;
    %822 = shape_of(%820, dtype="int32") /* ty=Tensor[(3), int32] */;
    %823 = cast(%820, dtype="bool") /* ty=Tensor[(15, 6, 3), bool] */;
    %824 = dyn.reshape(%821, %822, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %825 = cast(meta[relay.Constant][66] /* ty=Tensor[(104), float64] */, dtype="float64") /* ty=Tensor[(104), float64] */;
    %826 = reshape(%825, newshape=[2, 4, 13]) /* ty=Tensor[(2, 4, 13), float64] */;
    %827 = cast(%var_5079, dtype="float64") /* ty=Tensor[(990, 1), float64] */;
    %828 = cast(meta[relay.Constant][67] /* ty=Tensor[(2310), float64] */, dtype="float64") /* ty=Tensor[(2310), float64] */;
    %829 = reshape(%827, newshape=[10, 11, 9]) /* ty=Tensor[(10, 11, 9), float64] */;
    %830 = reshape(%828, newshape=[2310]) /* ty=Tensor[(2310), float64] */;
    %831 = @func_813(%829, %830) /* ty=(Tensor[(10, 11, 9), float64], Tensor[(7, 1, 6), int64], int64, Tensor[(15, 14, 11), float64], Tensor[(2310), float64]) */;
    %832 = cast(%var_5079, dtype="float32") /* ty=Tensor[(990, 1), float32] */;
    %833 = cast(%var_5090, dtype="float32") /* ty=Tensor[(990, 4), float32] */;
    %834 = cast(%var_5095, dtype="uint8") /* ty=uint8 */;
    %835 = cast(meta[relay.Constant][68] /* ty=Tensor[(1600), uint8] */, dtype="uint8") /* ty=Tensor[(1600), uint8] */;
    %836 = cast(meta[relay.Constant][69] /* ty=Tensor[(546), float32] */, dtype="float32") /* ty=Tensor[(546), float32] */;
    %837 = reshape(%834, newshape=[]) /* ty=uint8 */;
    %838 = reshape(%835, newshape=[10, 16, 10]) /* ty=Tensor[(10, 16, 10), uint8] */;
    %839 = reshape(%836, newshape=[546]) /* ty=Tensor[(546), float32] */;
    %840 = @func_3071(%837, %838, %839) /* ty=(Tensor[(10, 16, 10), uint8], Tensor[(7, 1, 6), int64], Tensor[(546), float32]) */;
    %841 = cast(meta[relay.Constant][70] /* ty=Tensor[(640), bool] */, dtype="bool") /* ty=Tensor[(640), bool] */;
    %842 = cast(meta[relay.Constant][70] /* ty=Tensor[(640), bool] */, dtype="bool") /* ty=Tensor[(640), bool] */;
    %843 = reshape(%841, newshape=[10, 8, 8]) /* ty=Tensor[(10, 8, 8), bool] */;
    %844 = reshape(%842, newshape=[10, 8, 8]) /* ty=Tensor[(10, 8, 8), bool] */;
    %845 = cast(%var_5079, dtype="float32") /* ty=Tensor[(990, 1), float32] */;
    %846 = acos(%845) /* ty=Tensor[(990, 1), float32] */;
    %847 = cast(%var_5079, dtype="bool") /* ty=Tensor[(990, 1), bool] */;
    %848 = shape_of(%846, dtype="int32") /* ty=Tensor[(2), int32] */;
    %849 = cast(%846, dtype="bool") /* ty=Tensor[(990, 1), bool] */;
    %850 = dyn.reshape(%847, %848, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %851 = cast(%var_5090, dtype="float64") /* ty=Tensor[(990, 4), float64] */;
    %852 = acosh(%851) /* ty=Tensor[(990, 4), float64] */;
    %853 = cast(%852, dtype="float64") /* ty=Tensor[(990, 4), float64] */;
    %854 = cosh(%853) /* ty=Tensor[(990, 4), float64] */;
    %855 = cast(%854, dtype="float32") /* ty=Tensor[(990, 4), float32] */;
    %856 = logical_or(%823, %824) /* ty=Tensor[(15, 6, 3), bool] */;
    %857 = @func_2777(%826) /* ty=Tensor[(2, 4, 13), float32] */;
    %858 = %831.4;
    %859 = subtract(%832, %833) /* ty=Tensor[(990, 4), float32] */;
    %860 = %840.0;
    %861 = @func_4976(%843, %844) /* ty=Tensor[(10, 8, 8), uint32] */;
    %862 = logical_or(%849, %850) /* ty=Tensor[(990, ?), bool] */;
    %863 = cos(%855) /* ty=Tensor[(990, 4), float32] */;
    (%856, %857, meta[relay.Constant][66] /* ty=Tensor[(104), float64] */, %858, meta[relay.Constant][67] /* ty=Tensor[(2310), float64] */, %859, %860, %var_5095, meta[relay.Constant][68] /* ty=Tensor[(1600), uint8] */, meta[relay.Constant][69] /* ty=Tensor[(546), float32] */, %861, meta[relay.Constant][70] /* ty=Tensor[(640), bool] */, %862, %863)
  };
  %864(%var_5145, %var_5146, %var_5147, %var_5148) /* ty=(Tensor[(15, 6, 3), bool], Tensor[(2, 4, 13), float32], Tensor[(104), float64], Tensor[(2310), float64], Tensor[(2310), float64], Tensor[(990, 4), float32], Tensor[(10, 16, 10), uint8], uint8, Tensor[(1600), uint8], Tensor[(546), float32], Tensor[(10, 8, 8), uint32], Tensor[(640), bool], Tensor[(990, ?), bool], Tensor[(990, 4), float32]) */
}

def @func_6359() -> (Tensor[(15, 6, 3), int32], Tensor[(2, 4, 13), float32], Tensor[(15, 6, 3), int32], Tensor[(8, 1053), bool]) {
  @func_6357() /* ty=(Tensor[(15, 6, 3), int32], Tensor[(2, 4, 13), float32], Tensor[(15, 6, 3), int32], Tensor[(8, 1053), bool]) */
}

def @func_8142(%var_8141: Tensor[(16, 48), float32]) -> (Tensor[(15, 6, 3), int32], Tensor[(768), float32], Tensor[(16, 48), float32], Tensor[(312), uint32]) {
  %873 = fn (%var_8137: Tensor[(16, 48), float32]) -> (Tensor[(15, 6, 3), int32], Tensor[(768), float32], Tensor[(16, 48), float32], Tensor[(312), uint32]) {
    %865 = @func_4019() /* ty=(Tensor[(15, 6, 3), int32],) */;
    %866 = cast(%var_8137, dtype="float32") /* ty=Tensor[(16, 48), float32] */;
    %867 = cast(meta[relay.Constant][71] /* ty=Tensor[(312), uint32] */, dtype="uint32") /* ty=Tensor[(312), uint32] */;
    %868 = reshape(%866, newshape=[768]) /* ty=Tensor[(768), float32] */;
    %869 = reshape(%867, newshape=[312]) /* ty=Tensor[(312), uint32] */;
    %870 = @func_5831(%868, %869) /* ty=(Tensor[(15, 6, 3), float64], Tensor[(80), float64], Tensor[(768), float32], Tensor[(312), uint32], Tensor[(12, 8, 8), float32]) */;
    %871 = %865.0;
    %872 = %870.2;
    (%871, %872, %var_8137, meta[relay.Constant][71] /* ty=Tensor[(312), uint32] */)
  };
  %873(%var_8141) /* ty=(Tensor[(15, 6, 3), int32], Tensor[(768), float32], Tensor[(16, 48), float32], Tensor[(312), uint32]) */
}

def @func_5889() -> Tensor[(15, 6, 3), int32] {
  @func_4139() /* ty=Tensor[(15, 6, 3), int32] */
}

def @func_5006() -> (Tensor[(15, 6, 3), int32],) {
  @func_5004() /* ty=(Tensor[(15, 6, 3), int32],) */
}

def @func_5768() -> Tensor[(15, 6, 3), int32] {
  %874 = @func_4360() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %874.0
}

def @func_2779(%var_2778: Tensor[(2, 4, 13), float64]) -> Tensor[(2, 4, 13), float32] {
  %881 = fn (%var_2754: Tensor[(2, 4, 13), float64]) -> Tensor[(2, 4, 13), float32] {
    %875 = cast(%var_2754, dtype="float64") /* ty=Tensor[(2, 4, 13), float64] */;
    %876 = asinh(%875) /* ty=Tensor[(2, 4, 13), float64] */;
    %877 = cast(meta[relay.Constant][72] /* ty=Tensor[(2, 4, 13), float64] */, dtype="float32") /* ty=Tensor[(2, 4, 13), float32] */;
    %878 = shape_of(%876, dtype="int32") /* ty=Tensor[(3), int32] */;
    %879 = cast(%876, dtype="float32") /* ty=Tensor[(2, 4, 13), float32] */;
    %880 = dyn.reshape(%877, %878, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    power(%879, %880) /* ty=Tensor[(2, 4, 13), float32] */
  };
  %881(%var_2778) /* ty=Tensor[(2, 4, 13), float32] */
}

def @func_8256(%var_8253: uint8, %var_8254: Tensor[(1600), uint8], %var_8255: Tensor[(546), float32]) -> (Tensor[(15, 6, 3), float64], Tensor[(546), float32], uint8, Tensor[(546), float32], Tensor[(15, 6, 3), int32], Tensor[(1600), float32], Tensor[(12, 6, 4), float32]) {
  @func_8251(%var_8253, %var_8254, %var_8255) /* ty=(Tensor[(15, 6, 3), float64], Tensor[(546), float32], uint8, Tensor[(546), float32], Tensor[(15, 6, 3), int32], Tensor[(1600), float32], Tensor[(12, 6, 4), float32]) */
}

def @func_6641() -> (Tensor[(104), float32],) {
  %882 = @func_6421() /* ty=(Tensor[(104), float64],) */;
  %883 = %882.0;
  %884 = cast(%883, dtype="float32") /* ty=Tensor[(104), float32] */;
  %885 = sin(%884) /* ty=Tensor[(104), float32] */;
  (%885,)
}

def @func_7072(%var_7070: Tensor[(1716), uint64], %var_7071: Tensor[(100), float64]) -> (Tensor[(15, 6, 3), float64], Tensor[(?, 100), float64], Tensor[(1716), uint64], Tensor[(100), float64], Tensor[(15, 6, 3), int32]) {
  %896 = fn (%var_7061: Tensor[(1716), uint64], %var_7062: Tensor[(100), float64]) -> (Tensor[(15, 6, 3), float64], Tensor[(?, 100), float64], Tensor[(1716), uint64], Tensor[(100), float64], Tensor[(15, 6, 3), int32]) {
    %886 = @func_4465() /* ty=(Tensor[(15, 6, 3), float32], Tensor[(15, 6, 3), float64]) */;
    %887 = cast(%var_7061, dtype="uint64") /* ty=Tensor[(1716), uint64] */;
    %888 = cast(%var_7062, dtype="float64") /* ty=Tensor[(100), float64] */;
    %889 = reshape(%887, newshape=[11, 12, 13]) /* ty=Tensor[(11, 12, 13), uint64] */;
    %890 = reshape(%888, newshape=[1, 100]) /* ty=Tensor[(1, 100), float64] */;
    %891 = @func_1024(%889, %890) /* ty=(Tensor[(11, 12, 13), uint64], Tensor[(?, 100), float64]) */;
    %892 = @func_4556() /* ty=(Tensor[(15, 6, 3), int32], Tensor[(15, 6, 3), int32]) */;
    %893 = %886.1;
    %894 = %891.1;
    %895 = %892.1;
    (%893, %894, %var_7061, %var_7062, %895)
  };
  %896(%var_7070, %var_7071) /* ty=(Tensor[(15, 6, 3), float64], Tensor[(?, 100), float64], Tensor[(1716), uint64], Tensor[(100), float64], Tensor[(15, 6, 3), int32]) */
}

def @func_4428() -> (Tensor[(15, 6, 3), int32],) {
  %898 = fn () -> (Tensor[(15, 6, 3), int32],) {
    %897 = @func_4139() /* ty=Tensor[(15, 6, 3), int32] */;
    (%897,)
  };
  %898() /* ty=(Tensor[(15, 6, 3), int32],) */
}

def @func_7820() -> (Tensor[(15, 6, 3), int32], Tensor[(15, 6, 3), bool], Tensor[(15, 6, 3), int32], Tensor[(15, 6, 3), int32]) {
  @func_7818() /* ty=(Tensor[(15, 6, 3), int32], Tensor[(15, 6, 3), bool], Tensor[(15, 6, 3), int32], Tensor[(15, 6, 3), int32]) */
}

def @func_7332(%var_7327: Tensor[(10, 1053), int16]) -> Tensor[(10, 1053), uint16] {
  %899 = @func_5751() /* ty=Tensor[(1, 1053), int16] */;
  %900 = cast(%899, dtype="uint16") /* ty=Tensor[(1, 1053), uint16] */;
  %901 = cast(%var_7327, dtype="uint16") /* ty=Tensor[(10, 1053), uint16] */;
  minimum(%900, %901) /* ty=Tensor[(10, 1053), uint16] */
}

def @func_4227(%var_4224: Tensor[(50), float32], %var_4225: Tensor[(250, 3), float64], %var_4226: Tensor[(50), float32]) -> (Tensor[(10, 5, 2), float64], Tensor[(250, 3), float64], Tensor[(1, 100), float64], Tensor[(50), float64], Tensor[(15, 6, 3), bool]) {
  @func_4222(%var_4224, %var_4225, %var_4226) /* ty=(Tensor[(10, 5, 2), float64], Tensor[(250, 3), float64], Tensor[(1, 100), float64], Tensor[(50), float64], Tensor[(15, 6, 3), bool]) */
}

def @func_5752() -> Tensor[(1, 1053), int16] {
  %902 = fn () -> Tensor[(1, 1053), int16] {
    @func_5645() /* ty=Tensor[(1, 1053), int16] */
  };
  %902() /* ty=Tensor[(1, 1053), int16] */
}

def @func_5709(%var_5703: Tensor[(10), int16]) -> (Tensor[(5, 2, 1), int16], int16, Tensor[(10), int16], Tensor[(15, 6, 3), float32]) {
  %903 = cast(meta[relay.Constant][73] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %904 = cast(%var_5703, dtype="int16") /* ty=Tensor[(10), int16] */;
  %905 = reshape(%903, newshape=[]) /* ty=int16 */;
  %906 = reshape(%904, newshape=[5, 2, 1]) /* ty=Tensor[(5, 2, 1), int16] */;
  %907 = @func_31(%905, %906) /* ty=(Tensor[(5, 2, 1), int16], Tensor[(7, 1, 6), int64]) */;
  %908 = @func_5245() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %909 = %908.0;
  %910 = cast(%909, dtype="float32") /* ty=Tensor[(15, 6, 3), float32] */;
  %911 = %907.0;
  %912 = acosh(%910) /* ty=Tensor[(15, 6, 3), float32] */;
  (%911, meta[relay.Constant][73] /* ty=int16 */, %var_5703, %912)
}

def @func_8274() -> (Tensor[(15, 6, 3), int32],) {
  @func_8272() /* ty=(Tensor[(15, 6, 3), int32],) */
}

def @func_7857() -> (Tensor[(13, 6, 7), bool],) {
  %915 = fn () -> (Tensor[(13, 6, 7), bool],) {
    %913 = @func_4699() /* ty=(Tensor[(15, 6, 3), float64], Tensor[(13, 6, 7), bool], Tensor[(1, 1053), int16]) */;
    %914 = %913.1;
    (%914,)
  };
  %915() /* ty=(Tensor[(13, 6, 7), bool],) */
}

def @func_142(%var_141: Tensor[(10, 5, 2), float64]) -> (Tensor[(10, 5, 2), float64],) {
  %918 = fn (%var_128: Tensor[(10, 5, 2), float64]) -> (Tensor[(10, 5, 2), float64],) {
    %916 = cast(%var_128, dtype="float64") /* ty=Tensor[(10, 5, 2), float64] */;
    %917 = sinh(%916) /* ty=Tensor[(10, 5, 2), float64] */;
    (%917,)
  };
  %918(%var_141) /* ty=(Tensor[(10, 5, 2), float64],) */
}

def @func_8661() -> Tensor[(104), float32] {
  %920 = fn () -> Tensor[(104), float32] {
    %919 = @func_6641() /* ty=(Tensor[(104), float32],) */;
    %919.0
  };
  %920() /* ty=Tensor[(104), float32] */
}

def @func_4701() -> (Tensor[(15, 6, 3), float64], Tensor[(13, 6, 7), bool], Tensor[(1, 1053), int16]) {
  @func_4699() /* ty=(Tensor[(15, 6, 3), float64], Tensor[(13, 6, 7), bool], Tensor[(1, 1053), int16]) */
}

def @func_7126() -> (Tensor[(15, 6, 3), int32],) {
  %923 = fn () -> (Tensor[(15, 6, 3), int32],) {
    %921 = @func_4052() /* ty=(Tensor[(15, 6, 3), int32],) */;
    %922 = %921.0;
    (%922,)
  };
  %923() /* ty=(Tensor[(15, 6, 3), int32],) */
}

def @func_6643() -> (Tensor[(104), float32],) {
  @func_6641() /* ty=(Tensor[(104), float32],) */
}

def @func_5433() -> (Tensor[(15, 6, 3), int32], Tensor[(2, 4, 13), float32], Tensor[(104), float64]) {
  %924 = @func_5199() /* ty=(Tensor[(15, 6, 3), int32],) */;
  %925 = cast(meta[relay.Constant][74] /* ty=Tensor[(104), float64] */, dtype="float64") /* ty=Tensor[(104), float64] */;
  %926 = reshape(%925, newshape=[2, 4, 13]) /* ty=Tensor[(2, 4, 13), float64] */;
  %927 = %924.0;
  %928 = @func_2777(%926) /* ty=Tensor[(2, 4, 13), float32] */;
  (%927, %928, meta[relay.Constant][74] /* ty=Tensor[(104), float64] */)
}

def @func_8313(%var_8312: Tensor[(10), int16]) -> (Tensor[(15, 6, 3), uint8], Tensor[(7, 1, 6), int64], int16, Tensor[(10), int16]) {
  %937 = fn (%var_8302: Tensor[(10), int16]) -> (Tensor[(15, 6, 3), uint8], Tensor[(7, 1, 6), int64], int16, Tensor[(10), int16]) {
    %929 = @func_8092() /* ty=(Tensor[(104), float32], Tensor[(15, 6, 3), uint8]) */;
    %930 = cast(meta[relay.Constant][75] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %931 = cast(%var_8302, dtype="int16") /* ty=Tensor[(10), int16] */;
    %932 = reshape(%930, newshape=[]) /* ty=int16 */;
    %933 = reshape(%931, newshape=[10]) /* ty=Tensor[(10), int16] */;
    %934 = @func_5337(%932, %933) /* ty=(Tensor[(7, 1, 6), int64], int16, Tensor[(10), int16], Tensor[(15, 6, 3), float64]) */;
    %935 = %929.1;
    %936 = %934.0;
    (%935, %936, meta[relay.Constant][75] /* ty=int16 */, %var_8302)
  };
  %937(%var_8312) /* ty=(Tensor[(15, 6, 3), uint8], Tensor[(7, 1, 6), int64], int16, Tensor[(10), int16]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen482/build/output.py:2294: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen482/build/output.py", line 2299, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(24) tvmgen_default_fused_exp_kernel0(float* __restrict__ T_exp, float* __restrict__ placeholder) {
  T_exp[(((int)threadIdx.x))] = __expf(placeholder[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~

